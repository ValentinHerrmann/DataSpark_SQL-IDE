{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../node_modules/regenerator-runtime/runtime.js","webpack:///../../../../src/client/compiler/lexer/Token.ts","webpack:///../../../../src/client/compiler/lexer/Lexer.ts","webpack:///../../../../src/client/main/gui/Formatter.ts","webpack:///../../../../src/client/main/gui/ThemeManager.ts","webpack:///../../../../src/client/compiler/parser/SQLTypes.ts","webpack:///../../../../src/client/compiler/parser/Parser.ts","webpack:///../../../../src/client/compiler/parser/SQLTable.ts","webpack:///../../../../src/client/compiler/parser/SymbolTable.ts","webpack:///../../../../src/client/compiler/parser/SQLMethods.ts","webpack:///../../../src/client/tools/StringTools.ts","webpack:///../../../../src/client/compiler/parser/SymbolResolver.ts","webpack:///../../../src/client/compiler/Compiler.ts","webpack:///../../../../src/client/compiler/parser/Module.ts","webpack:///../../../../src/client/main/gui/ActionManager.ts","webpack:///../../../src/client/tools/HtmlTools.ts","webpack:///../../../src/client/communication/AjaxHelper.ts","webpack:///../../../src/client/workspace/WDatabase.ts","webpack:///../../../src/client/communication/CacheManager.ts","webpack:///../../../src/client/communication/NotifierClient.ts","webpack:///../../../src/client/communication/NetworkManager.ts","webpack:///../../../src/client/tools/TemplateUploader.ts","webpack:///../../../../src/client/main/gui/DatabaseSettingsDialog.ts","webpack:///../../../src/client/workspace/Workspace.ts","webpack:///../../../../src/client/main/gui/MyCompletionItemProvider.ts","webpack:///../../../../src/client/main/gui/MySignatureHelpProvider.ts","webpack:///../../../../src/client/main/gui/MyHoverProvider.ts","webpack:///../../../../src/client/main/gui/MyCodeActionProvider.ts","webpack:///../../../../src/client/main/gui/MyReferenceProvider.ts","webpack:///../../../../src/client/main/gui/Helper.ts","webpack:///../../../../src/client/main/gui/Editor.ts","webpack:///../../../../src/client/main/gui/VscSql.ts","webpack:///../../../src/client/sqljs-worker/sqljsWorkerSim.ts","webpack:///../../../src/client/tools/DatabaseTools.ts","webpack:///../../../../src/client/compiler/parser/StatementCleaner.ts","webpack:///../../../src/client/tools/MySqlImporter.ts","webpack:///../../../src/client/tools/DatabaseImportExport.ts","webpack:///../../../../src/client/main/gui/NewDatabaseDialog.ts","webpack:///../../../../src/client/main/gui/MainMenu.ts","webpack:///../../../../src/client/main/gui/Accordion.ts","webpack:///../../../../src/client/main/gui/DistributeToStudentsDialog.ts","webpack:///../../../../src/client/main/gui/ProjectExplorer.ts","webpack:///../../../../src/client/main/gui/RightDiv.ts","webpack:///../../../../src/client/main/gui/Sliders.ts","webpack:///../../../../src/client/main/gui/TeacherExplorer.ts","webpack:///../../../../src/client/main/gui/UserMenu.ts","webpack:///../../../src/client/main/Login.ts","webpack:///../../../../src/client/main/gui/ViewModeController.ts","webpack:///../../../../src/client/compiler/parser/SemicolonAngel.ts","webpack:///../../../../src/client/main/gui/DatabaseExplorer.ts","webpack:///../../../../src/client/main/gui/ProgramControlButtons.ts","webpack:///../../../../src/client/main/gui/ResultsetPresenter.ts","webpack:///../../../src/client/communication/Notifier.ts","webpack:///../../../../src/client/main/gui/WaitOverlay.ts","webpack:///../../../../src/client/main/gui/HistoryViewer.ts","webpack:///../../../src/client/main/Main.ts","webpack:///../../../../src/client/main/gui/ErrorManager.ts","webpack:///../../../../src/client/main/gui/HomeworkManager.ts","webpack:///../../../../src/client/main/gui/BottomDiv.ts","webpack:///../../../src/client/embedded/EmbeddedSlider.ts","webpack:///../../../src/client/embedded/EmbeddedFileExplorer.ts","webpack:///../../../src/client/embedded/EmbeddedIndexedDB.ts","webpack:///../../../src/client/embedded/WriteQueryManager.ts","webpack:///../../../src/client/tools/DatabaseLoader.ts","webpack:///../../../src/client/embedded/MainEmbedded.ts","webpack:///../../../src/client/embedded/EmbeddedStarter.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","runtime","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","define","obj","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","state","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","makeInvokeMethod","fn","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","undefined","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","Function","TokenType","LexerState","TokenTypeReadable","identifier","integerConstant","floatingPointConstant","booleanConstant","stringConstant","charConstant","true","false","keywordRename","keywordTo","keywordAlter","keywordCommit","keywordAdd","keywordDelete","keywordSelect","keywordInsert","keywordInto","keywordValues","keywordUpdate","keywordSet","keywordNo","keywordUse","keywordCreate","keywordReferences","keywordPrimary","keywordForeign","keywordTable","keywordColumn","keywordDrop","keywordUnique","keywordKey","keywordIndex","keywordConstraint","keywordModify","keywordCascade","keywordRestrict","keywordAction","keywordAutoincrement","keywordFrom","keywordWhere","keywordGroup","keywordBy","keywordHaving","keywordOrder","keywordAscending","keywordDescending","keywordNulls","keywordFirst","keywordLast","keywordIs","keywordNull","keywordDatabase","keywordAnd","keywordOr","keywordNot","keywordJoin","keywordNatural","keywordLeft","keywordCross","keywordInner","keywordOuter","keywordOn","keywordAs","keywordLimit","keywordOffset","keywordIn","keywordNotIn","keywordLike","keywordCollate","keywordDefault","keywordComment","keywordEngine","keywordCharset","keywordCharacter","keywordStart","keywordTransaction","keywordIf","keywordExists","leftBracket","rightBracket","leftSquareBracket","rightSquareBracket","leftCurlyBracket","rightCurlyBracket","leftRightSquareBracket","dot","minus","modulo","plus","multiplication","division","singleQuote","doubleQuote","identifierQuote","lower","greater","equal","lowerOrEqual","greaterOrEqual","concatenation","semicolon","colon","comma","backslash","at","pipe","space","tab","newline","identifierChar","comment","endofSourcecode","specialCharList","'","notEqual","linefeed","keywordList","EscapeSequenceList","\"","Lexer","spaceTokens","correspondingBracket","tokenTypesToMerge","first","second","merged","isNot","isNotNull","isNull","input","replace","tokenList","errorList","bracketError","bracketStack","pos","line","column","nonSpaceLastTokenType","nonSpaceLastToken","tokens","errors","currentChar","nextChar","mainState","bracketOpen","bracketClosed","setBracketError","tt","openBracket","char","specialCharToken","pushToken","lexMultilineComment","checkClosingBracket","isDigit","indexOf","lexEndofLineComment","lexNumber","lexStringConstant","lexSpace","lexAnnotation","lexQuotedIdentifier","lexIdentifierOrKeyword","pushError","text","position","tripel","newLength","errorLevel","level","a","base","charCode","charCodeAt","posStart","posEnd","substring","escapeChar","beginChar","isDoubleQuotedIdentifier","lastCharWasNewline","sign","firstChar","radix","exponent","posExponentStart","exponentString","Number","parseInt","parseFloat","Math","pow","isSpace","toLowerCase","Formatter","autoFormatTriggerCharacters","monaco","languages","registerDocumentFormattingEditProvider","registerOnTypeFormattingEditProvider","model","ch","options","token","edits","format","e","e1","range","endLineNumber","startLineNumber","endColumn","startColumn","splice","delta","substr","getValue","editor","EndOfLinePreference","LF","tokenlist","lex","lastNonSpaceToken","indentLevel","curlyBracesOpenAtLines","indentLevelAtSwitchStatements","switchHappend","lastTokenWasNewLine","roundBracketsOpen","replaceBetween","token1","insertSpaces","deleteSpaces","openedAtLine","repeat","nextToken1","nextToken2","lastToken1","lastToken2","isBinaryOperator","lastTokenIsOperator","nextTokenIsOperator","getNextNonSpaceToken","beginNextLine","token2","currentIndentation","il","correctIndentation","nextToken","lowerGeneric","lowerBelongsToGenericExpression","greaterGeneric","greaterBelongsToGenericExpression","tokenBefore","spaces","deleteOverlappingRanges","currentIndex","j","positionFrom","positionTo","numberOfSpaces","ThemeManager","themes","initThemes","theme","internalSwitchTheme","setTheme","monacoTheme","root","document","documentElement","cssColors","style","setProperty","SQLType","SQLBaseType","parameterDescriptions","checkFunction","outputFunction","canCastToList","binaryResultTypes","Map","unaryOperators","ownIndex","tokenType","secondType","resultType","isCommutative","Array","isArray","map","set","addBinaryOperation","type2","bt2","operator","booleanType","value1","value2","max","baseTypeMap","toLocaleLowerCase","baseTypes","concat","tens","SQLDerivedType","baseType","parameterValues","parameters","join","returnBaseType","getUnaryResultType","getBinaryResult","round","textTypes","varcharType","ci","pv","v","textType","tinyTextType","mediumTextType","longTextType","floatTypes","decimalType","vk","trunc","nk","numericType","doubleType","realType","floatType","numberTypes","intType","integerType","tinyIntType","smallIntType","mediumIntType","bigIntType","dateType","dateTimeType","timestampType","nullType","numericTypes","addBaseTypes","numericBinaryOperators","comparisonOperators","characterTypes","booleanOperations","bt","Parser","lookahead","endToken","beginStatementKeywords","completionHints","sqlStatements","addCompletionHint","initializeLookahead","lastToken","parseMain","ct","lastComment","commentBefore","cct","quickFix","assign","skip","invokeSemicolonAngel","isOperatorOrDot","title","editsProvider","uri","resource","edit","message","severity","MarkerSeverity","main","getSemicolonAngel","register","expectedTokens","operatorPrecedence","ret","deltaColumns","tpos","deltaInsideToken","tokenPos","getCurrentPosition","mainProgram","afterLastStatement","semicolonAfterLastStatement","getCurrentPositionPlus","isEnd","oldPos","errorsBeforeStatement","startPosition","st","parseStatement","hasErrors","ast","from","to","getEndOfPosition","acceptedBySQLite","beginStatementTokens","firstBadToken","retStatements","parseSelect","parseInsert","parseCreateTableOrDatabase","parseUpdate","parseDelete","parseDropTable","parseAlterTable","parseSet","parseUse","expect","node","omittedeStatement","endPosition","symbolTable","kind","tableIdentifier","tableIdentifierPosition","addCompletionHintHere","parseRenameTableOrColumn","parseAlterTableAdd","parseDropColumn","comesToken","getEndOfCurrentToken","newTableName","oldColumnName","oldColumnPosition","newColumnName","unique","parseAddColumn","parseAddPrimaryKey","parseAddIndex","parseModifyColumn","parseAddConstraint","fki","parseForeignKeyDefinition","foreignKeys","referencesTable","referencesColumn","referencesPosition","parseReferences","pos0","pos1","onDelete","modifyColumnInfo","parseColumnDefinition","primaryKeys","index","index_name","indices","columnDefBegin","columnDef","whereNode","whereNodeBegin","whereNodeEnd","parseTerm","columnIdentifiers","columnIdentifierPositions","valuePosBegin","valuePosEnd","parseCreateDatabase","parseCreateTable","ifNotExists","columnList","combinedPrimaryKeyColumns","foreignKeyInfoList","primaryKeyAlreadyDefined","parsePrimaryKeyTerm","columnNode","isPrimary","isAutoIncrement","columns","notNull","parseType","hintColumns","hintTables","hints","additionalColumns","praefix","suffix","datatypes","toString","getBaseType","alreadySeenKeywords","foreignKeyInfo","collate","defaultValue","fromConstantType","canCastTo","valuesPosition","columnsPosition","table","alias","parseValueLists","insideListTokens","outerFirst","leftBracketPosition","constantType","constant","constantNode","columnListStart","fromNode","parentStatement","parseColumnList","columnListKeywordArray","findIndex","allColumns","unshift","fromStartPosition","dontHint","parseTableOrSubQuery","fromListKeywordArray","hintEndPosition","fromEndPosition","whereKeywordArray","whereStart","groupKeywordArray","groupStart","groupByNode","parseGroupBy","orderStart","orderByNode","parseOrderBy","limitNode","parseLimit","numberOfRows","ln","offset","gbn","tokenTypesAfterGroupBy","term","having","obnList","obn","leftSide","parseAtomicTableOrSubQuery","parseJoinOperator","rightSide","firstOperand","secondOperand","on","selectStatement","subquery","query","tokenTypesAfterListEnd","allowAliases","columnTerm","parseTermBinary","precedence","left","parseUnary","operators","right","binaryOp","parseBracket","tt1","unaryOp","operand","isStringConstant","parseDotOrArrayChains","identifier1","position1","parseMethodCallParameters","rightBracketPosition","callMethod","operands","nodes","commaPositions","secondIdentifier","identifierLeft","identifierRight","list","elements","constantTypes","tokenBeforeBracket","selectNode","listNode","parseList","termInsideBrackets","parameter","Column","isPrimaryKey","isNullable","cs","typeMatch1","completeTypeSQL","match","baseTypeIdentifier","commaSeparatedParameters","split","trim","fromColumnStructure","Table","ts","size","tsList","tables","fromTableStructure","columnStructureToColumnMap","referencedCs","references","referencedColumn","SymbolTable","parentSymbolTable","childSymbolTables","symbols","symbolList","parent","databaseStructure","fromTableStructureList","storeTableSymbols","storeSymbol","posOfDefinition","referencedOnPositions","symbol","containsPosition","shortestSymbolTableContainingPosition","shortestPosition","st1","findTableAtPosition","findTables","filter","SQLMethodParameter","SQLMethod","isAggregating","returnType","acceptsStarParameter","SQLMethodStore","methods","pushOneParameterMethod","countMethod","parameterType","instance","escapeHtml","unsafe","twoDez","z","isDate","inputText","opera1","opera2","lopera1","lopera2","pdate","dd","mm","yy","lyear","isDateTime","dateStr","CompilerStatus","SymbolResolver","databaseTool","symbolTableStack","_a","mainSymbolTable","statement","astNode","resolveSelect","resolveInsert","resolveCreateTable","resolveUpdate","resolveDelete","resolveDropTable","resolveAlterTable","getCurrentSymbolTable","resultTable","pushNewSymbolTable","joinedTables","resolveTableOrSubQuery","extractDatabaseStructure","resolveTerm","c1","sqlType","whereType","getBaseTypeName","findTable","whereSymbolTable","find","ciPos","createTableNode","thisTable","cn","tosNode","tableList","storeTableIntoSymbolTable","tableAlias","resolveNotIn","typeLeft","typeRight","getBinaryResultType","operandType","resultType1","resolveMethodCall","resolveIdentifier","resolveDot","selectTable","tableSymbols","findColumn","getInstance","getMethods","found","methodParameter","operatorString","leftType","pType","element","elementType","tableCompletionTo","valueList","destType","Compiler","compilerStatus","compiledButNothingToRun","moduleStore","compiling","t0","performance","now","lexer","getModules","file","dirty","clear","lexed","getProgramTextFromMonacoModel","getCurrentlyEditedModule","getBottomDiv","errorManager","showParenthesisWarning","startRegistering","parser","parse","getDatabaseTool","symbolResolver","start","dt","getCurrentWorkspace","compilerMessage","healSemicolons","readyToRun","Module","oldErrorDecorations","identifierPositions","methodCallPositions","path","uriCounter","uriMap","Uri","scheme","createModel","updateOptions","tabSize","lastSavedVersionId","getAlternativeVersionId","that","onDidChangeContent","versionId","saved","isEmbedded","main1","workspacesOwnerId","user","id","text_before_revision","student_edited_after_revision","networkManager","sendUpdates","bottomDiv","homeworkManager","showHomeWorkRevisionButton","projectExplorer","renderHomeworkButton","fromPosition","toPosition","hintKeywords","fromColumn","fromLine","toColumn","toLine","hintColumnsOfTable","chList","sel","selStart","selEnd","stmt","compare","b","lineNumber","bestCh","bestRangeLength","rangeLength","workspace","submitted_date","version","workspace_id","forceUpdate","file_type","ec","positionList","positionsOnLine","bestFoundPosition","el","sort","e2","errorLevelCompare","level1","level2","f","ModuleStore","moduleMap","module_id","ms","putModule","copy","includeSystemModules","excludedModuleName","removeModule","moduleName","ActionManager","$mainElement","actions","keyEntries","buttons","$element","jQuery","event","executeKeyDownEvent","actionIdentifier","ae","action","button","active","attr","addClass","removeClass","activeElement","tagName","keyCode","ctrlKey","shiftKey","altKey","actionEntries","actionEntry","stopPropagation","preventDefault","makeEditable","elementWithText","elementToReplace","renameDoneCallback","selectionRange","mousePointer","window","PointerEvent","$input","css","width","height","color","val","setSelectionRange","end","after","hide","setTimeout","focus","ev","off","remove","show","newValue","openContextMenu","items","x","y","$contextMenu","$openSubMenu","parentMenuItem","mi","caption","link","$item","subMenu","callback","$link","top","append","leftRight","innerWidth","xp","topBottom","innerHeight","yp","makeTabs","tabDiv","headings","not","tabs","target","data","trigger","makeDiv","klass","div","jo_mouseDetected","animateToTransparent","cssProperty","startColorRgb","duration","colorPraefix","animate","copyTextToClipboard","navigator","clipboard","writeText","console","textArea","createElement","body","appendChild","select","execCommand","removeChild","fallbackCopyTextToClipboard","PerformanceCollector","url","startTime","pe","performanceData","count","sumTime","performanceDataCount","lastTimeSent","request","ajax","successCallback","errorCallback","showNetworkBusy","time","$","JSON","stringify","contentType","success","response","registerPerformanceEntry","jqXHR","statusText","status","busy","WDatabase","db","statements","published_to","description","templateDump","based_on_template_id","owner_id","CacheManager","databaseId","cacheAvailable","getCache","cache","databaseIdToCacheIdentifier","arrayBuffer","buffer","Uint8Array","catch","put","Response","caches","open","NotifierClient","unsentMessages","connect","location","protocol","startsWith","host","connection","WebSocket","onerror","onError","onclose","onClose","onmessage","onMessage","onopen","command","sendIntern","forcedUpdateEvery","counterTillForcedUpdate","send","log","NetworkManager","$updateTimerDiv","ownUpdateFrequencyInSeconds","teacherUpdateFrequencyInSeconds","updateFrequencyInSeconds","secondsTillNextUpdate","errorHappened","interval","clearInterval","setInterval","$rect","notifierClient","sendIfNothingIsDirty","writeEditorTextToFile","settings","wdList","fdList","workspaceList","ws","getWorkspaceData","getFileData","workspacesWithoutFiles","files","userId","language","currentWorkspaceId","getModifiedWorkspaces","updateWorkspaces","wd","is_testuser","random","entity","workspaceId","alert","secretKind","secret","databaseName","publishedTo","klasse","student_ids","class_id","current_workspace_id","version_before","database","newStatements","firstNewStatementIndex","statements_before","new_version","cacheManager","fromDatabaseData","fetchTemplateFromCache","pako","inflate","fetchTemplate","template","saveTemplateToCache","xhrFields","responseType","user_id","templateList","sendUpdatesRequest","sendUpdatesResponse","idToRemoteWorkspaceDataMap","fileIdsSended","workspaces","newWorkspaceNames","remoteWorkspace","createNewWorkspaceFromWorkspaceData","idToRemoteFileDataMap","fd","idToModuleMap","fileId","remoteFileData","fileListPanel","removeElement","currentWorkspace","setValue","remoteFile","createFile","workspaceListPanel","sortElements","withSort","w","createNewWorkspace","sql_history","isFolder","panelElement","externalElement","iconClass","addElement","fileData","identical_to_repository_version","getNewModule","TemplateUploader","dump","reason","waitOverlay","dbTool","export","deflate","uploadIntern","processData","headers","DatabaseSettingsDialog","init","$dialog","showMainWindow","saveNameAndPublishedTo","setValues","setNewSecret","$copyButton","prop","checked","each","setNameAndPublishedTo","uploadCurrentDatabase","getDatabaseSettings","secrets","is_admin","is_schooladmin","empty","Workspace","permissions","database_id","restoreFromData","currentFileId","currentlyOpenModule","withFiles","$buttonDiv","$htmlFirstLine","$button","MyCompletionItemProvider","triggerCharacters","keywordCompletionItems","keywordToSnippetMap","setupKeywordCompletionItems","getModuleByMonacoModel","wfc","provideCompletionItemsIntern","sw","getMonacoEditor","_contentWidgets","widget","toggleDetails","isStringLiteral","textUntilPosition","getValueInRange","textAfterPosition","completionHint","getCompletionHint","completionItems","addKeywordCompletionItems","dotMatch","ibMatch","identifierAndBracketAfterCursor","addIdentifierCompletionItems","addDotCompletionItems","word","getWordUntilPosition","replaceWordRange","insertAfterCursorRange","item","insertText","suggestions","textAfterDot","textBeforeDot","rangeToReplace","label","detail","filterText","insertTextRules","CompletionItemInsertTextRule","KeepWhitespace","CompletionItemKind","Field","tableIdentifiers","columnIdentifier","InsertAsSnippet","Snippet","Class","sortText","columList","withTable","_b","snippet","Keyword","posMin","posMax","watchDog","arguments","MySignatureHelpProvider","signatureHelpTriggerCharacters","signatureHelpRetriggerCharacters","compileIfDirty","provideSignatureHelpLater","getModel","methodCallPosition","rightMostPosition","mcp","identifierPosition","getSignatureHelp","parameterIndex","cp","activeParameter","activeSignature","signatures","dispose","MyHoverProvider","selection","getSelection","getElementAtPosition","getWordUnderCursor","desc","keywordDescriptions","contents","getValueLengthInRange","isInsideIdentifierOrArrayDescriptor","begin","isInsideOperator","isInsideIdentifierChain","MyCodeActionProvider","markers","relatedInformation","diagnostics","isPreferred","MyReferenceProvider","usagePositions","referencePositions","upInCurrentModule","up","Helper","targetElement","direction","$helper","bottom","html","close","fadeIn","fadeOut","mainBase","Main","helperHistory","flag","sendUpdateUserSettings","openHelper","Editor","showMinimap","cw","dontPushNextCursorMove","lastTime","elementDecoration","extensions","conf","onEnterRules","beforeText","afterText","indentAction","IndentAction","IndentOutdent","appendText","None","removeText","comments","lineComment","blockComment","brackets","autoClosingPairs","surroundingPairs","setLanguageConfiguration","setMonarchTokensProvider","defaultToken","tokenPostfix","ignoreCase","escapes","keywords","builtinFunctions","builtinVariables","pseudoColumns","tokenizer","include","cases","whitespace","numbers","strings","string","complexIdentifiers","quotedIdentifier","scopes","defineVscSQL","defineTheme","inherit","rules","foreground","fontStyle","colors","lightbulb","enabled","lineDecorationsWidth","peekWidgetDefaultFocus","fixedOverflowWidgets","quickSuggestions","quickSuggestionsDelay","fontSize","fontFamily","fontWeight","roundedSelection","selectOnLineNumbers","automaticLayout","scrollBeyondLastLine","occurrencesHighlight","autoIndent","dragAndDrop","formatOnType","formatOnPaste","suggestFontSize","suggestLineHeight","suggest","localityBonus","insertMode","parameterHints","cycle","mouseWheelZoom","minimap","scrollbar","vertical","horizontal","mouseWheelListener","changeEditorFontSize","deltaY","onDidChangeConfiguration","hasChanged","EditorOption","fontInfo","registerLightbulbOnClickFunctions","onDidChangeCursorPosition","onDidChangeModel","removeEventListener","addEventListener","passive","setActiveAfterExternalModelSet","registerHoverProvider","registerCompletionItemProvider","registerCodeActionProvider","registerReferenceProvider","registerSignatureHelpProvider","onMouseDown","MouseTargetType","GUTTER_GLYPH_MARGIN","GUTTER_LINE_NUMBERS","isAfterLines","onMarginMouseDown","remeasureFonts","addActions","onDidType","insertEndOfComment","newLine","newColumn","Range","executeEdits","setPosition","getPosition","prevLine","getLineContent","trimRight","endsWith","getLineCount","spacesAtBeginningOfLine","trimLeft","fontSizePx","Date","getTime","editorfs","getOptions","viewModeController","saveFontSize","factor","dynamic","newEditorFs","setFontSize","addAction","keybindings","KeyMod","CtrlCmd","KeyCode","KEY_K","precondition","keybindingContext","contextMenuGroupId","contextMenuOrder","run","ed","getAction","Enter","getActionManager","decorations","className","isWholeLine","overviewRuler","darkColor","OverviewRulerLane","Left","executeActionActive","getSQLSTatementsAtSelection","sqlStatement","classname","MinimapPosition","Inline","zIndex","setActive","showHelper","deltaDecorations","WorkerSim","initsql","initSqlJs","locateFile","scriptDirectory","SQL1","SQL","createDb","worker","postMessageToClient","buff","config","ready","results","exec","row","postMessage","finished","DatabaseTool","databaseDirectoryEntries","queryId","querySuccessCallbacksMap","queryErrorCallbackMap","sqliteMagicBytes","queries","callbackAfterInitializing","callbackAfterRetrievingStructure","getWaitOverlay","terminate","javaOnlineDir","jo_doc","Worker","querySuccessCallback","queryErrorCallback","delete","queryCount","execQuery","setProgress","shift","executeQuery","retrieveDatabaseStructure","sql","params","getJSON","entries","sql1","result1","parseDatabaseStructure","tableNameToStructureMap","tableName","tableSQL","tableStructure","completeSQL","columnArray","foreignKeyList","columnArray1","dflt_value","columnStructure","typeLengths","fkInfo","referencesRawData","StatementCleaner","MaxRowsPerInsert","sqlCleaned","cleanCreateTableStatement","cleanInsertStatement","statementHeader","lines","vline","cleanValue","cleanColumnDef","cleanForeignKeyInfo","pkc","MySqlImporter","unzipURL","fetch","importFromText","unzipFile","reader","FileReader","onload","readAsText","zip","ZipReader","HttpReader","unzipIntern","BlobReader","getEntries","filename","getData","TextWriter","onprogress","lexOutput","createTableNodes","insertNodes","tableModifyingNodes","tmn","findCreateTableNode","autoIncrementColumn","pcn","findCreateTableColumnNode","mci","mcn","fk","indexIdentifier","makeDatabase","tableNode","statementCleaner","clean","promise","initializeWorker","binDump","DatabaseImportExport","loadFromFile","ld","ab","getDumpType","readAsArrayBuffer","prompt","isBlob","blob","Blob","msSaveOrOpenBlob","createEvent","download","href","URL","createObjectURL","dataset","downloadurl","initEvent","dispatchEvent","downloadFile","NewDatabaseDialog","$templatelist","fetchTemplateList","templatelist","tle","$tle","ownerName","$templateName","$dropZone","evt","originalEvent","dataTransfer","dropEffect","importFile","$dumpFileInput","createMode","hasClass","workspaceData","createWorkspace","$template","template_database_id","code","tIndex","otherDatabaseId","template_id","newTemplateId","sendCreateWorkspace","accordionElement","renderSettingsButton","setWorkspaceActive","importer","isDatabase","dbUncompressed","MainMenu","currentSubmenu","openSubmenusOnMousemove","mainMenu","switchTheme","saveToFile","initMenu","menu","initMenuitemCallbacks","opensubmenu","AccordionPanel","accordion","flexWeight","newButtonClass","buttonNewTitle","defaultIconClass","withDeleteButton","withFolders","enableDrag","acceptDropKinds","dontSortElements","addPanel","$newFolderAction","addFolder","newElement","newFolderCallback","scrollIntoView","$collapseAllAction","collapseAll","slideUp","$captionElement","$listElement","fixed","grow","$buttonNew","pathArray","selectedElement","getSelectedElement","name1","path1","isFolder1","name2","path2","isFolder2","cmp","localeCompare","compareWithPath","insertIndex","getElementIndex","$elements","prepend","elementAtIndex","before","renderElement","insertElement","renameElement","$accordionDiv","getCurrentlySelectedPath","newFilesElementCallback","$htmlSecondLine","insertAfter","selectCallback","$listOuter","$ce","$li","targetGrow","parts","toggleClass","currentlyDraggedElementKind","element1","currentlyDraggedElement","moveElement","expanded","aName","sortName","bName","cssClass","$div","expandedCollapsed","pathHtml","addElementActionCallback","$elementAction","$filedragpart","effectAllowed","dropElementCallback","pathIsCollapsed","slideDown","pressTimer","contextmenuHandler","contextMenuItems","renameCallback","newDatabaseElementCallback","contextMenuProvider","cmi","pageX","pageY","clearTimeout","getChildElements","deleteCallback","elementToMove","destinationFolder","destinationPath","movedElements","sourcePath","oldPathLength","moveCallback","folder","pointPos","newText","invokeCallback","ae1","findElement","pathString","elPath","ps","Accordion","$html","panel","renderOuterHtmlElements","DistributeToStudentsDialog","classes","studentCount","$studentList","students","student","$studentLine","$studentClass","$studentName","rufname","familienname","$dialogMain","distributeWorkspace","sendDistributeWorkspace","ProjectExplorer","$projectexplorerDiv","programPointerModule","programPointerDecoration","lastOpenModule","initFilelistPanel","initWorkspacelistPanel","successfulNetworkCommunicationCallback","setModuleActive","sendCreateFile","newName","callbackIfSuccessful","sendDeleteWorkspaceOrFile","is_teacher","$homeworkButtonDiv","$newWorkspaceAction","removeWorkspace","enableNewButton","databaseExplorer","getResultsetPresenter","dest","droppedElement","dropEffekt","$homeAction","onHomeButtonClicked","hideHomeworkTab","workspaceAccordionElement","cmiList","teacherExplorer","classPanel","restoreOwnWorkspaces","setCaption","moduleList","errorCountMap","errorCount","errorCountS","setTextAfterFilename","initializeDatabaseTool","fetchDatabase","currentWorkspace_id","renderFiles","nonSystemModules","notifier","refreshAfterRetrievingDBStructure","getHistoryViewer","clearAndShowStatements","cem","hideRevision","editorState","saveViewState","setModel","readOnly","hideHomeworkRevisionButton","restoreViewState","setCurrentlyEditedModule","showProgramPointer","programPointerPosition","revealRangeInCenterIfOutsideViewport","Center","beforeContentClassName","findModuleByFile","RightDiv","$rightDiv","isWholePage","$tabs","$headings","rightdiv_width","$wholeWindow","Sliders","md","clientX","dx","moveLeftPanel","clientY","dy","moveBottomDiv","moveRightDiv","sliderknobLeft","stopImmediatePropagation","sliderknobRight","$editor","mewidth","layout","diffEditor","$bottomDiv","meheight","$leftPanel","TeacherExplorer","classData","studentPanel","initStudentPanel","initClassPanel","renderClasses","ws_userId","ownWorkspaces","currentOwnWorkspace","restoreWorkspaces","setExplorerColor","showHomeworkTab","attachToWorkspaces","renderWorkspaces","ea","renderStudents","userDataList","ud","classDataList","cd","UserMenu","Login","$loginSpinner","loginHappened","username","password","viewModes","classDiagram","waitForGUICallback","initGUI","initTeacherExplorer","classdata","initializeTimer","setFixed","initViewMode","initializeNotifierClient","startupComplete","errorMessage","resultsetPresenter","removePanels","ViewModeController","$buttonsContainer","$buttonMap","highContrast","editorHasFullWidth","$buttonEditorFullscreen","$buttonPresentationMode","$buttonMonitorMode","am","actionManager","registerAction","toggleEditorFullwidth","setMode","saveSettings","otherMode","viewMode","viewModeChosen","themeManager","getChosenViewMode","userDataDirty","monitor","presentation","SemicolonAngel","semicolonPositions","isThereAgain","oldEvidence","firstSeenMs","currentlyEditedModule","cursorLine","isCurrentModule","editOperations","forceMoveMarkers","abs","setSelection","DatabaseExplorer","$mainDiv","collapsedTables","dbstructure","$table","renderTable","isCollapsed","showTable","$columns","image","referencesHtml","autoincrement","$column","$treeSwitch","$columnList","parents","ProgramControlButtons","$buttonStart","isActive","executeSelectedStatements","ResultsetPresenter","paginationSize","writeQueryListeners","showResultsBusy","showResultPending","$paginationDiv","$arrowLeft","$infoDiv","$arrowRight","paginationFrom","floor","showResults","activateButtons","paginationAll","min","listener","fetchSelectedStatements","hasDDLStatements","some","isDDLStatement","hasWriteStatements","isWriteStatement","executeDDLWriteStatementsEmbedded","executeDDLWriteStatementsInOnlineIDE","executeStatements","sucessfullyExecutedModifyingStatements","getDatabaseExplorer","refresh","notify","getNewStatements","new_statements","firstStatementIndex","executeNewStatements","AddDatabaseStatements","appendStatements","modifyingStatements","resetDatabase","fromIndex","executeStatementsString","successfullyExecutedModifyingStatements","showErrors","callback1","laterSelectExists","isSelectStatement","presentResultsIntern","minimapColors","linesDecorationsClassName","minimapColor","setModelMarkers","$runtimeErrorsTab","$runtimeErrorsTabHeading","showErrorDecorations","$errorList","$errorLine","revealRangeInCenter","$sqlDiv","colorize","$messageDiv","$resultTabheading","$resultHeader","headerDiv","$bodyDiv","waitFunction","$header","rows","$row","cell","monacoEditor","Notifier","isOpen","isPolling","counter","isLongPolling","longPollCounter","databaseVersion","onOpen","startLongPolling","rollbackLocal","callbackIfTooFewStatements","callbackIfDone","doRefreshDatabaseExplorer","poll","getNewStatementsHttp","longPoll","resp","WaitOverlay","$waitDiv","visible","fadeOutPending","$bitteWartenText","$bitteWartenProgress","HistoryViewer","$historyPanel","panelEntries","panelEntry","makePanelEntry","makeLastButtonActive","$rollbackButton","$index","$text","$copybutton","$rollbackbutton","rollback","rollbackEmbedded","rollbackLocalNeeded","writeQueryManager","initialTemplateDump","initialStatements","writtenStatements","historyViewer","rightDiv","compiler","semicolonAngel","matchMedia","matches","login","initSliders","BottomDiv","checkStartupComplete","startTimer","sendBeacon","timerHandle","isDirty","compile","renderErrorCount","ErrorManager","oldDecorations","lightBulbOnClickFunctionList","$bracket_warning","children","$errorDiv","getSortedAndFilteredErrors","getErrorCount","borderLeftClass","lightBulbClass","class","onClickFunction","processError","Warning","Info","$file","$error","locf","$errorDivs","$lineColumn","category","$message","showError","HomeworkManager","showRevisionActive","$homeworkTab","$homeworkTabLeft","$homeworkTabRight","$showRevisionButton","showRevision","originalModel","modifiedModel","createDiffEditor","getElementById","enableSplitViewResizing","originalEditable","renderSideBySide","original","modified","daysWithModules","dateString","date","dateWithoutTime","getDate","getMonth","getFullYear","dateToStringWithoutTime","dwm","day","m1","m2","moduleWithWorkspace","EmbeddedSlider","$container","firstLast","horVert","$otherDiv","initSlider","$sliderDiv","cursor","slide","otherHeight","newHeight","newOtherHeight","otherWidth","newWidth","newOtherWidth","EmbeddedFileExplorer","$fileListDiv","addModule","$filesDiv","$addButton","currentFile","selectFile","removeFile","script","$fileDiv","hint","$hintDiv","$monacoDiv","syntaxMap","md1","markdownit","highlight","str","lang","renderer","code_inline","idx","env","content","render","md2","codeMap","uncoloredtext","EmbeddedIndexedDB","databaseIdentifier","indexedDB","onsuccess","onupgradeneeded","objectStoreScripts","createObjectStore","keyPath","autoIncrement","transaction","oncomplete","scriptId","objectStore","databaseID","WriteQueryManager","statementsToExecute","statementsToWrite","atLeastOneExecuted","getDatabase","writeStatementsIfNecessary","forceWriteStatements","writeDatabase","$databaseResetButton","statementsSql","DatabaseFetcher","urlWithoutProtocol","urlLowerCase","loadSqLiteDump","loadMySql","saveDatabaseToCache","loadFromUrl","MainEmbedded","scriptList","programIsExecutable","compileRunsAfterCodeReset","readConfig","databaseURL","$dbTreeDiv","load","loadableDb","initScripts","indexedDBReady","readScripts","withFileList","fileExplorer","getFirstModule","databaseReady","removeAllFiles","initWorkspace","$filesListDiv","setFirstFileActive","addHint","configJson","withOutput","withErrorList","withBottomPanel","markFile","lineNumbersMinChars","getScript","scriptListJSon","saveScripts","countDown","$codeResetButton","oneNotSaved","writeScript","removeScript","considerShowingCodeResetButton","$centerDiv","makeWaitDiv","$codeResetModalWindow","makeCodeResetModalWindow","$databaseResetModalWindow","makeDatabaseResetModalWindow","makeRightDiv","$editorDiv","$bracketErrorDiv","makeBracketErrorDiv","$controlsDiv","$bottomDivInner","makeBottomDiv","makeFilesDiv","$rightDivInner","$rightSideContainer","$infoButton","$buttonOpen","$openInputButton","loadDatabaseFromFile","$buttonSave","saveDatabaseToFile","addWriteQueryListener","dbImportExport","waitHtml","$parent","$window","deleteScriptsInDB","$filesHeader","$tabheadings","$thLeftSide","$thErrors","$thPCode","$thHistory","$thRightSide","$tabError","$tabPCode","$tabHistory","$thRun","EmbeddedStarter","mainEmbeddedList","initJavaOnlineDivs","$script","initDiv","embeddedStarter","prefix","editorPath","monacoEditorPath","require","paths","availableLanguages","ignoreDuplicateModules","initEditor"],"mappings":"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","file":"sql-ide-embedded.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","export enum TokenType {\r\n    identifier,\r\n    // constants\r\n    integerConstant,\r\n    floatingPointConstant,\r\n    booleanConstant,\r\n    stringConstant,\r\n    charConstant,\r\n    true,\r\n    false,\r\n    // keywords\r\n    keywordRename,\r\n    keywordTo,\r\n    keywordAlter,\r\n    keywordCommit,\r\n    keywordAdd,\r\n    keywordDelete,\r\n    keywordSelect,\r\n    keywordInsert,\r\n    keywordInto,\r\n    keywordValues,\r\n    keywordUpdate,\r\n    keywordSet,\r\n    keywordNo,\r\n    keywordUse,\r\n    keywordCreate,\r\n    keywordReferences,\r\n    keywordPrimary,\r\n    keywordForeign,\r\n    keywordTable,\r\n    keywordColumn,\r\n    keywordDrop,\r\n    keywordUnique,\r\n    keywordKey,\r\n    keywordIndex,\r\n    keywordConstraint,\r\n    keywordModify,\r\n    keywordCascade,\r\n    keywordRestrict,\r\n    keywordAction,\r\n    keywordAutoincrement,\r\n    keywordFrom,\r\n    keywordWhere,\r\n    keywordGroup,\r\n    keywordBy,\r\n    keywordHaving,\r\n    keywordOrder,\r\n    keywordAscending,\r\n    keywordDescending,\r\n    keywordNulls,\r\n    keywordFirst,\r\n    keywordLast,\r\n    keywordIs,\r\n    keywordNull,\r\n    keywordDatabase,\r\n\r\n    keywordOr,\r\n    keywordAnd,\r\n    keywordNot,\r\n\r\n    keywordJoin,\r\n    keywordNatural,\r\n    keywordLeft,\r\n    keywordCross,\r\n    keywordInner,\r\n    keywordOuter,\r\n    keywordOn,\r\n    keywordAs,\r\n    keywordLimit,\r\n    keywordOffset,\r\n    keywordIn,\r\n    keywordNotIn,\r\n    keywordLike,\r\n    keywordCollate,\r\n    keywordDefault,\r\n    keywordComment,\r\n    keywordEngine,\r\n    keywordCharset,\r\n    keywordCharacter,\r\n    \r\n    keywordStart,\r\n    keywordTransaction,\r\n    keywordIf,\r\n    keywordExists,\r\n\r\n    // brackets\r\n    leftBracket, // ()\r\n    rightBracket,\r\n    leftSquareBracket, // []\r\n    rightSquareBracket,\r\n    leftCurlyBracket, // {}\r\n    rightCurlyBracket,\r\n    leftRightSquareBracket, // []\r\n    \r\n    // binary operators\r\n    dot, //.\r\n    modulo,\r\n    minus, plus, multiplication, division,\r\n    singleQuote, doubleQuote, // ', \"\r\n    identifierQuote,\r\n    lower, greater, lowerOrEqual, greaterOrEqual, \r\n    concatenation,    \r\n    equal,\r\n    notEqual,\r\n\r\n    // semicolon\r\n    semicolon, // ;\r\n\r\n    colon, // :\r\n\r\n    // comma\r\n    comma, // ,\r\n\r\n    // backslash\r\n    backslash,\r\n\r\n    // @\r\n    pipe,\r\n\r\n    // @\r\n    at,\r\n\r\n    // whitespace\r\n    space,\r\n\r\n    tab,\r\n\r\n    // newline\r\n    newline,\r\n\r\n    // line feed\r\n    linefeed,\r\n\r\n    // only lexer-internal\r\n    identifierChar,  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    comment,\r\n\r\n    endofSourcecode, // will be generated after sourcecode end\r\n    \r\n    // Program statement types:\r\n    \r\n    // additional AST node types\r\n    constantNode,\r\n    callMethod,\r\n    unaryOp,\r\n    binaryOp,\r\n    table,\r\n    subquery,\r\n    list,\r\n    column,\r\n    columnDef,\r\n    allColumns, // *\r\n    isNull,\r\n    isNot, // used by lexer to lex \"is not null\" into one token\r\n    isNotNull,\r\n    omittedeStatement\r\n}\r\n\r\nexport var TokenTypeReadable: {[tt: number]: string} = {\r\n    [TokenType.identifier]: \"ein Bezeichner\",\r\n    // constants\r\n    [TokenType.integerConstant]: \"eine Integer-Konstante\",\r\n    [TokenType.floatingPointConstant]: \"eine Fließkomma-Konstante\",\r\n    [TokenType.booleanConstant]: \"eine boolesche Konstante\",\r\n    [TokenType.stringConstant]: \"eine Zeichenketten-Konstante\",\r\n    [TokenType.charConstant]: \"eine char-Konstante\",\r\n    [TokenType.true]: \"true\",\r\n    [TokenType.false]: \"false\",\r\n    // keywords\r\n    [TokenType.keywordRename]: \"rename\",\r\n    [TokenType.keywordTo]: \"to\",\r\n    [TokenType.keywordAlter]: \"alter\",\r\n    [TokenType.keywordCommit]: \"commit\",\r\n    [TokenType.keywordAdd]: \"add\",\r\n    [TokenType.keywordDelete]: \"delete\",\r\n    [TokenType.keywordSelect]: \"select\",\r\n    [TokenType.keywordInsert]: \"insert\",\r\n    [TokenType.keywordInto]: \"into\",\r\n    [TokenType.keywordValues]: \"values\",\r\n    [TokenType.keywordUpdate]: \"update\",\r\n    [TokenType.keywordSet]: \"set\",\r\n    [TokenType.keywordNo]: \"no\",\r\n    [TokenType.keywordUse]: \"use\",\r\n    [TokenType.keywordCreate]: \"create\",\r\n    [TokenType.keywordReferences]: \"references\",\r\n    [TokenType.keywordPrimary]: \"primary\",\r\n    [TokenType.keywordForeign]: \"foreign\",\r\n    [TokenType.keywordTable]: \"table\",\r\n    [TokenType.keywordColumn]: \"column\",\r\n    [TokenType.keywordDrop]: \"drop\",\r\n    [TokenType.keywordUnique]: \"unique\",\r\n    [TokenType.keywordKey]: \"key\",\r\n    [TokenType.keywordIndex]: \"index\",\r\n    [TokenType.keywordConstraint]: \"constraint\",\r\n    [TokenType.keywordModify]: \"modify\",\r\n    [TokenType.keywordCascade]: \"cascade\",\r\n    [TokenType.keywordRestrict]: \"restrict\",\r\n    [TokenType.keywordAction]: \"action\",\r\n    [TokenType.keywordAutoincrement]: \"autoincrement\",\r\n    [TokenType.keywordFrom]: \"from\",\r\n    [TokenType.keywordWhere]: \"where\",\r\n    [TokenType.keywordGroup]: \"group\",\r\n    [TokenType.keywordBy]: \"by\",\r\n    [TokenType.keywordHaving]: \"having\",\r\n    [TokenType.keywordOrder]: \"order\",\r\n    [TokenType.keywordAscending]: \"ascending\",\r\n    [TokenType.keywordDescending]: \"descending\",\r\n    [TokenType.keywordNulls]: \"nulls\",\r\n    [TokenType.keywordFirst]: \"first\",\r\n    [TokenType.keywordLast]: \"last\",\r\n    [TokenType.keywordIs]: \"is\",\r\n    [TokenType.keywordNull]: \"null\",\r\n    [TokenType.keywordDatabase]: \"database\",\r\n\r\n\r\n    [TokenType.keywordAnd]: \"and\",\r\n    [TokenType.keywordOr]: \"or\",\r\n    [TokenType.keywordNot]: \"not\",\r\n\r\n    [TokenType.keywordJoin]: \"join\",\r\n    [TokenType.keywordNatural]: \"natural\",\r\n    [TokenType.keywordLeft]: \"left\",\r\n    [TokenType.keywordCross]: \"cross\",\r\n    [TokenType.keywordInner]: \"inner\",\r\n    [TokenType.keywordOuter]: \"outer\",\r\n    [TokenType.keywordOn]: \"on\",\r\n    [TokenType.keywordAs]: \"as\",\r\n    [TokenType.keywordLimit]: \"limit\",\r\n    [TokenType.keywordOffset]: \"offset\",\r\n    [TokenType.keywordIn]: \"in\",\r\n    [TokenType.keywordNotIn]: \"not in\",\r\n    [TokenType.keywordLike]: \"like\",\r\n    [TokenType.keywordCollate]: \"collate\",\r\n    [TokenType.keywordDefault]: \"default\",\r\n    [TokenType.keywordComment]: \"comment\",\r\n    [TokenType.keywordEngine]: \"engine\",\r\n    [TokenType.keywordCharset]: \"charset\",\r\n    [TokenType.keywordCharacter]: \"character\",\r\n    [TokenType.keywordStart]: \"start\",\r\n    [TokenType.keywordTransaction]: \"transaction\",\r\n    [TokenType.keywordIf]: \"if\",\r\n    [TokenType.keywordExists]: \"exists\",\r\n\r\n    // brackets\r\n    [TokenType.leftBracket]: \"(\", // ()\r\n    [TokenType.rightBracket]: \")\",\r\n    [TokenType.leftSquareBracket]: \"[\", // []\r\n    [TokenType.rightSquareBracket]: \"]\",\r\n    [TokenType.leftCurlyBracket]: \"{\", // {}\r\n    [TokenType.rightCurlyBracket]: \"}\",\r\n    [TokenType.leftRightSquareBracket]: \"[]\", \r\n    \r\n    // operators\r\n    [TokenType.dot]: \".\", //.\r\n    [TokenType.minus]: \"-\", \r\n    [TokenType.modulo]: \"%\", \r\n    [TokenType.plus]: \"+\", \r\n    [TokenType.multiplication]: \"*\", \r\n    [TokenType.division]: \"/\",\r\n    [TokenType.singleQuote]: \"'\", \r\n    [TokenType.doubleQuote]: \"\\\"\", // ']: \"\", \"\r\n    [TokenType.identifierQuote]: \"`\",\r\n    [TokenType.lower]: \"<\", \r\n    [TokenType.greater]: \">\",\r\n    [TokenType.equal]: \"=\", \r\n    [TokenType.lowerOrEqual]: \"<=\", \r\n    [TokenType.greaterOrEqual]: \">=\", \r\n    [TokenType.concatenation]: \"||\", \r\n    \r\n    // semicolon\r\n    [TokenType.semicolon]: \";\", // ;\r\n    [TokenType.colon]: \":\", // ;\r\n\r\n    // comma\r\n    [TokenType.comma]: \",\", \r\n\r\n    // backslash\r\n    [TokenType.backslash]: \"\\\\\",\r\n\r\n    // at\r\n    [TokenType.at]: \"@\",\r\n    \r\n    // pipe\r\n    [TokenType.pipe]: \"|\",\r\n\r\n    // whitespace\r\n    [TokenType.space]: \"ein Leerzeichen\",\r\n    [TokenType.tab]: \"ein Tabulatorzeichen\",\r\n\r\n    // newline\r\n    [TokenType.newline]: \"ein Zeilenumbruch\",\r\n\r\n    // only lexer-internal\r\n    [TokenType.identifierChar]: \"eines der Zeichen a..z, A..Z, _\",  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    [TokenType.comment]: \"ein Kommentar\",\r\n\r\n    [TokenType.endofSourcecode]: \"das Ende des Programmes\"\r\n\r\n}\r\n\r\nexport var specialCharList: {[keyword: string]:TokenType} = {\r\n    '(': TokenType.leftBracket, // ()\r\n    ')': TokenType.rightBracket,\r\n    '[': TokenType.leftSquareBracket, // []\r\n    ']': TokenType.rightSquareBracket,\r\n    '{': TokenType.leftCurlyBracket, // {}\r\n    '}': TokenType.rightCurlyBracket,\r\n    \r\n    // operators\r\n    '.': TokenType.dot, //.\r\n    ',': TokenType.comma, //.\r\n    '-': TokenType.minus,\r\n    '%': TokenType.modulo,\r\n    '+': TokenType.plus, \r\n    '*': TokenType.multiplication, \r\n    '/': TokenType.division,\r\n    '\\\\': TokenType.backslash,\r\n    '@': TokenType.at,\r\n    '|': TokenType.pipe,\r\n    '\\'': TokenType.singleQuote, \r\n    '\"': TokenType.doubleQuote, // ', \"\r\n    '`': TokenType.identifierQuote, // ', \"\r\n    \"<\": TokenType.lower,\r\n    \">\": TokenType.greater,\r\n    \"=\": TokenType.equal,\r\n    \"<>\": TokenType.notEqual,\r\n    \r\n    ';': TokenType.semicolon, // ;\r\n    ':': TokenType.colon, // ;\r\n\r\n    // whitespace\r\n    ' ': TokenType.space,\r\n    '\\t': TokenType.tab,\r\n\r\n    // newline\r\n    '\\n': TokenType.newline,\r\n    '\\r': TokenType.linefeed\r\n}\r\n\r\nexport var keywordList: {[keyword: string]:TokenType} = {\r\n    \"rename\": TokenType.keywordRename,\r\n    \"to\": TokenType.keywordTo,\r\n    \"alter\": TokenType.keywordAlter,\r\n    \"commit\": TokenType.keywordCommit,\r\n    \"add\": TokenType.keywordAdd,\r\n    \"delete\": TokenType.keywordDelete,\r\n    \"select\": TokenType.keywordSelect,\r\n    \"insert\": TokenType.keywordInsert,\r\n    \"into\": TokenType.keywordInto,\r\n    \"values\": TokenType.keywordValues,\r\n    \"update\": TokenType.keywordUpdate,\r\n    \"set\": TokenType.keywordSet,\r\n    \"no\": TokenType.keywordNo,\r\n    \"use\": TokenType.keywordUse,\r\n    \"create\": TokenType.keywordCreate,\r\n    \"references\": TokenType.keywordReferences,\r\n    \"primary\": TokenType.keywordPrimary,\r\n    \"foreign\": TokenType.keywordForeign,\r\n    \"table\": TokenType.keywordTable,\r\n    \"column\": TokenType.keywordColumn,\r\n    \"drop\": TokenType.keywordDrop,\r\n    \"unique\": TokenType.keywordUnique,\r\n    \"key\": TokenType.keywordKey,\r\n    \"index\": TokenType.keywordIndex,\r\n    \"constraint\": TokenType.keywordConstraint,\r\n    \"modify\": TokenType.keywordModify,\r\n    \"cascade\": TokenType.keywordCascade,\r\n    \"restrict\": TokenType.keywordRestrict,\r\n    \"action\": TokenType.keywordAction,\r\n    \"autoincrement\": TokenType.keywordAutoincrement,\r\n    \"auto_increment\": TokenType.keywordAutoincrement,\r\n    \"from\": TokenType.keywordFrom,\r\n    \"where\": TokenType.keywordWhere,\r\n    \"true\": TokenType.true,\r\n    \"false\": TokenType.false,\r\n    \"group\": TokenType.keywordGroup,\r\n    \"by\": TokenType.keywordBy,\r\n    \"having\": TokenType.keywordHaving,\r\n    \"order\": TokenType.keywordOrder,\r\n    \"asc\": TokenType.keywordAscending,\r\n    \"desc\": TokenType.keywordDescending,\r\n    \"nulls\": TokenType.keywordNulls,\r\n    \"first\": TokenType.keywordFirst,\r\n    \"last\": TokenType.keywordLast,\r\n    \"is\": TokenType.keywordIs,\r\n    \"null\": TokenType.keywordNull,\r\n    \"database\": TokenType.keywordDatabase,\r\n\r\n    \"or\": TokenType.keywordOr,\r\n    \"and\": TokenType.keywordAnd,\r\n    \"not\": TokenType.keywordNot,\r\n\r\n    \"join\": TokenType.keywordJoin,\r\n    \"natural\": TokenType.keywordNatural,\r\n    \"left\": TokenType.keywordLeft,\r\n    \"cross\": TokenType.keywordCross,\r\n    \"inner\": TokenType.keywordInner,\r\n    \"outer\": TokenType.keywordOuter,\r\n    \"on\": TokenType.keywordOn,\r\n    \"as\": TokenType.keywordAs,\r\n    \"limit\": TokenType.keywordLimit,\r\n    \"offset\": TokenType.keywordOffset,\r\n    \"in\": TokenType.keywordIn,\r\n    \"not in\": TokenType.keywordNotIn,\r\n    \"like\": TokenType.keywordLike,\r\n    \"collate\": TokenType.keywordCollate,\r\n    \"default\": TokenType.keywordDefault,\r\n    \"comment\": TokenType.keywordComment,\r\n    \"engine\": TokenType.keywordEngine,\r\n    \"charset\": TokenType.keywordCharset,\r\n    \"character\": TokenType.keywordCharacter,\r\n    \"start\": TokenType.keywordStart,\r\n    \"transaction\": TokenType.keywordTransaction,\r\n    \"if\": TokenType.keywordIf,\r\n    \"exists\": TokenType.keywordExists\r\n\r\n\r\n};\r\n\r\nexport var EscapeSequenceList: {[keyword: string]:string} = {\r\n    \"n\": \"\\n\",\r\n    \"r\": \"\\r\",\r\n    \"t\": \"\\t\",\r\n    \"\\\"\": \"\\\"\",\r\n    \"'\": \"'\",\r\n    \"\\\\\": \"\\\\\"\r\n}\r\n\r\nexport type TextPosition = {\r\n    line: number,\r\n    column: number, \r\n    length: number\r\n}\r\n\r\nexport type TextPositionWithoutLength = {\r\n    line: number,\r\n    column: number\r\n}\r\n\r\nexport type Token = {\r\n    tt: TokenType,\r\n    value: string|number|boolean,\r\n    position: TextPosition,\r\n    commentBefore?: Token,\r\n    isDoubleQuotedIdentifier?: boolean\r\n}\r\n\r\nexport type TokenList = Token[];\r\n\r\nfunction tokenToString(t: Token){\r\n    return \"<div><span style='font-weight: bold'>\" + TokenType[t.tt] + \"</span>\" +\r\n            \"<span style='color: blue'> &nbsp;'\" + t.value + \"'</span> (l&nbsp;\" + t.position.line + \", c&nbsp;\" + t.position.column + \")</div>\";\r\n}\r\n \r\nexport function tokenListToString(tl: TokenList):string{\r\n    let s = \"\";\r\n    for(let t of tl){\r\n        s += tokenToString(t) + \"\\n\";\r\n    }\r\n    return s;\r\n}","import { TokenList, specialCharList, TokenType, Token, EscapeSequenceList, keywordList, TextPosition, TokenTypeReadable } from \"./Token.js\";\r\n\r\nenum LexerState {\r\n    number, identifier, stringConstant, characterConstant, multilineComment, EndoflineComment\r\n}\r\n\r\nvar endChar = \"►\"; // \\u10000\r\n\r\nexport type QuickFix = {\r\n    title: string,\r\n    editsProvider: (uri: monaco.Uri) => monaco.languages.WorkspaceTextEdit[]\r\n}\r\n\r\nexport type ErrorLevel = \"info\" | \"error\" | \"warning\";\r\n\r\nexport type Error = {\r\n    position: TextPosition,\r\n    text: string,\r\n    quickFix?: QuickFix,\r\n    level: ErrorLevel\r\n}\r\n\r\nexport class Lexer {\r\n\r\n    tokenList: TokenList;\r\n    nonSpaceLastTokenType: TokenType;\r\n    nonSpaceLastToken: Token;\r\n\r\n    errorList: Error[];\r\n    pos: number;\r\n    line: number;\r\n    column: number;\r\n\r\n    currentChar: string;\r\n    nextChar: string;\r\n\r\n    input: string;\r\n\r\n    spaceTokens: TokenType[] = [\r\n        TokenType.space, TokenType.tab, TokenType.newline\r\n    ];\r\n\r\n    bracketStack: TokenType[];\r\n    bracketError: string;\r\n    correspondingBracket: { [key: number]: TokenType } = {};\r\n\r\n    tokenTypesToMerge: { first: TokenType, second: TokenType, merged: TokenType }[] = [\r\n        { first: TokenType.keywordNotIn, second: TokenType.keywordIn, merged: TokenType.keywordNotIn },\r\n        { first: TokenType.keywordIs, second: TokenType.keywordNot, merged: TokenType.isNot },\r\n        { first: TokenType.isNot, second: TokenType.keywordNull, merged: TokenType.isNotNull },\r\n        { first: TokenType.keywordIs, second: TokenType.keywordNull, merged: TokenType.isNull },\r\n    ]\r\n\r\n    constructor() {\r\n        this.correspondingBracket[TokenType.leftBracket] = TokenType.rightBracket;\r\n        this.correspondingBracket[TokenType.leftCurlyBracket] = TokenType.rightCurlyBracket;\r\n        this.correspondingBracket[TokenType.leftSquareBracket] = TokenType.rightSquareBracket;\r\n        this.correspondingBracket[TokenType.rightBracket] = TokenType.leftBracket;\r\n        this.correspondingBracket[TokenType.rightCurlyBracket] = TokenType.leftCurlyBracket;\r\n        this.correspondingBracket[TokenType.rightSquareBracket] = TokenType.leftSquareBracket;\r\n    }\r\n\r\n    lex(input: string): { tokens: TokenList, errors: Error[], bracketError: string } {\r\n\r\n        this.input = input.replace(\"\\u00a0\", \" \");\r\n        this.tokenList = [];\r\n        this.errorList = [];\r\n        this.bracketError = null;\r\n        this.bracketStack = [];\r\n        this.pos = 0;\r\n        this.line = 1;\r\n        this.column = 1;\r\n        this.nonSpaceLastTokenType = null;\r\n        this.nonSpaceLastToken = null;\r\n\r\n\r\n        if (input.length == 0) {\r\n            return { tokens: this.tokenList, errors: this.errorList, bracketError: null };\r\n        }\r\n\r\n        this.currentChar = input.charAt(0);\r\n\r\n        this.nextChar = input.length > 1 ? input.charAt(1) : endChar;\r\n\r\n\r\n        while (this.currentChar != endChar) {\r\n            this.mainState();\r\n        }\r\n\r\n        if (this.bracketStack.length > 0) {\r\n            let bracketOpen = this.bracketStack.pop();\r\n            let bracketClosed = this.correspondingBracket[bracketOpen];\r\n\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[bracketClosed]);\r\n        }\r\n\r\n        return {\r\n            tokens: this.tokenList,\r\n            errors: this.errorList,\r\n            bracketError: this.bracketError\r\n        };\r\n\r\n    }\r\n\r\n    checkClosingBracket(tt: TokenType) {\r\n        if (this.bracketStack.length == 0) {\r\n            let bracketOpen = this.correspondingBracket[tt];\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[tt]);\r\n            return;\r\n        }\r\n        let openBracket = this.bracketStack.pop();\r\n        let correspondingBracket = this.correspondingBracket[openBracket];\r\n        if (tt != correspondingBracket) {\r\n            this.setBracketError(TokenTypeReadable[openBracket] + \" \" + TokenTypeReadable[correspondingBracket]);\r\n        }\r\n    }\r\n\r\n    setBracketError(error: string) {\r\n        if (this.bracketError == null) this.bracketError = error;\r\n    }\r\n\r\n    next() {\r\n        this.pos++;\r\n        this.currentChar = this.nextChar;\r\n        if (this.pos + 1 < this.input.length) {\r\n            this.nextChar = this.input.charAt(this.pos + 1);\r\n        } else {\r\n            this.nextChar = endChar;\r\n        }\r\n        this.column++; // column of current char\r\n    }\r\n\r\n\r\n\r\n    mainState() {\r\n\r\n        let char = this.currentChar;\r\n\r\n        let specialCharToken = specialCharList[char];\r\n\r\n        if (specialCharToken != null) {\r\n            switch (specialCharToken) {\r\n                case TokenType.leftSquareBracket:\r\n                    if (this.nextChar == \"]\") {\r\n                        this.pushToken(TokenType.leftRightSquareBracket, \"[]\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.leftSquareBracket, \"[\");\r\n                        this.bracketStack.push(specialCharToken);\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.division:\r\n                    if (this.nextChar == '*') {\r\n                        this.lexMultilineComment();\r\n                        return;\r\n                    }\r\n                    this.pushToken(TokenType.division, '/');\r\n                    this.next();\r\n                    return;\r\n                case TokenType.pipe:\r\n                    if (this.nextChar == \"|\") {\r\n                        this.pushToken(TokenType.concatenation, '||');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.pipe, '|');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.lower:\r\n                    if (this.nextChar == \">\") {\r\n                        this.pushToken(TokenType.notEqual, '<>');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.lower, '<');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.rightSquareBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.minus:\r\n                    if (this.isDigit(this.nextChar, 10) && !\r\n                        ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.rightBracket].indexOf(this.nonSpaceLastTokenType) >= 0)\r\n                    ) {\r\n                        this.lexNumber();\r\n                        return;\r\n                    } else if (this.nextChar == '-') {\r\n                        this.lexEndofLineComment();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.minus, '-');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.singleQuote:\r\n                    this.lexStringConstant(\"'\");\r\n                    return;\r\n                case TokenType.doubleQuote:\r\n                    this.lexStringConstant('\"');\r\n                    return;\r\n                case TokenType.newline:\r\n                    this.pushToken(TokenType.newline, '\\n');\r\n                    this.line++;\r\n                    this.column = 0;\r\n                    this.next();\r\n                    return;\r\n                case TokenType.space:\r\n                case TokenType.tab:\r\n                    this.lexSpace();\r\n                    return;\r\n                case TokenType.linefeed:\r\n                    this.next();\r\n                    return;\r\n                case TokenType.at:\r\n                    this.lexAnnotation();\r\n                    return;\r\n                case TokenType.identifierQuote:\r\n                    this.lexQuotedIdentifier();\r\n                    return;\r\n            }\r\n\r\n            this.pushToken(specialCharToken, char);\r\n            this.next();\r\n            return;\r\n\r\n        }\r\n\r\n        // no special char. Number?\r\n\r\n        if (this.isDigit(char, 10)) {\r\n            this.lexNumber();\r\n            return;\r\n        }\r\n\r\n        this.lexIdentifierOrKeyword();\r\n\r\n    }\r\n\r\n\r\n    lexQuotedIdentifier() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let s: string = \"\";\r\n        this.next();\r\n        while(this.currentChar != '`' && this.currentChar != endChar){\r\n            s += this.currentChar;\r\n            this.next();\r\n        }\r\n        if(this.currentChar == endChar){\r\n            this.pushError(\"Innerhalb eines in `` eingeschlossenen Bezeichners wurde das Ende der Datei erreicht.\", s.length + 1, \"error\", line, column);\r\n        } else {\r\n            this.next(); // skip `\r\n            this.pushToken(TokenType.identifier, s, line, column);\r\n        }\r\n    }\r\n\r\n    pushToken(tt: TokenType, text: string | number | boolean, line: number = this.line, column: number = this.column, length: number = (\"\" + text).length) {\r\n        let t: Token = {\r\n            tt: tt,\r\n            value: text,\r\n            position: {\r\n                column: column,\r\n                line: line,\r\n                length: length\r\n            }\r\n        }\r\n\r\n        for (let tripel of this.tokenTypesToMerge) {\r\n            if (tt == tripel.second && this.nonSpaceLastTokenType == tripel.first) {\r\n                let newLength = column - this.nonSpaceLastToken.position.column + length;\r\n                this.nonSpaceLastToken.tt = tripel.merged;\r\n                this.nonSpaceLastToken.position = { column: this.nonSpaceLastToken.position.column, line: line, length: newLength };\r\n                this.nonSpaceLastToken.value = this.nonSpaceLastToken.value + \" \" + text;\r\n\r\n                this.nonSpaceLastTokenType = tripel.merged;\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (!(this.spaceTokens.indexOf(tt) >= 0)) {\r\n            this.nonSpaceLastTokenType = tt;\r\n            this.nonSpaceLastToken = t;\r\n        }\r\n\r\n        this.tokenList.push(t);\r\n    }\r\n\r\n    pushError(text: string, length: number, errorLevel: ErrorLevel = \"error\", line: number = this.line, column: number = this.column) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: {\r\n                line: line,\r\n                column: column,\r\n                length: length\r\n            },\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n\r\n\r\n    isDigit(a: string, base: number) {\r\n        var charCode = a.charCodeAt(0);\r\n\r\n        if (base == 10) return (charCode >= 48 && charCode <= 57); // 0 - 9\r\n        if (base == 2) return (charCode >= 48 && charCode <= 49); // 0, 1\r\n        if (base == 8) return (charCode >= 48 && charCode <= 55); // 0 - 7\r\n        if (base == 16) return (charCode >= 48 && charCode <= 57) || (charCode >= 97 && charCode <= 102) ||\r\n            (charCode >= 65 && charCode <= 70); // 0 - 9 || a - f || A - F\r\n    }\r\n\r\n    lexSpace() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n\r\n        let posStart = this.pos;\r\n        while (this.currentChar == \" \" || this.currentChar == \"\\t\") {\r\n            this.next();\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n        this.pushToken(TokenType.space, this.input.substring(posStart, posEnd), line, column);\r\n        return;\r\n\r\n    }\r\n\r\n    lexCharacterConstant() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n        this.next();\r\n        let char = this.currentChar;\r\n        if (char == \"\\\\\") {\r\n            let escapeChar = EscapeSequenceList[this.nextChar];\r\n            if (escapeChar == null) {\r\n                this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                if (this.nextChar != \"'\") {\r\n                    char = this.nextChar;\r\n                    this.next();\r\n                }\r\n            } else {\r\n                char = escapeChar;\r\n                this.next();\r\n            }\r\n        }\r\n        this.next();\r\n        if (this.currentChar != \"'\") {\r\n            this.pushError(\"Das Ende der char-Konstante wird erwartet (').\", 1);\r\n        } else {\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.charConstant, char, line, column);\r\n\r\n    }\r\n\r\n    lexStringConstant(beginChar: string) {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let text = \"\";\r\n\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\\\\") {\r\n                let escapeChar = EscapeSequenceList[this.nextChar];\r\n                if (escapeChar == null) {\r\n                    this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                } else {\r\n                    char = escapeChar;\r\n                    this.next();\r\n                }\r\n            } else if (char == beginChar) {\r\n                this.next();\r\n                break;\r\n            } else if (char == \"\\n\" || char == endChar) {\r\n                this.pushError('Innerhalb einer String-Konstante wurde das Zeilenende erreicht.', text.length + 1, \"error\", line, column);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        if (beginChar == \"'\") {\r\n            this.pushToken(TokenType.stringConstant, text, line, column, text.length + 2);\r\n        } else {\r\n            this.pushToken(TokenType.identifier, text, line, column, text.length + 2);\r\n            this.tokenList[this.tokenList.length - 1].isDoubleQuotedIdentifier = true;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    lexMultilineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let lastCharWasNewline: boolean = false;\r\n\r\n        let text = \"/*\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"*\" && this.nextChar == \"/\") {\r\n                this.next();\r\n                this.next();\r\n                text += \"*/\";\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                this.pushError(\"Innerhalb eines Mehrzeilenkommentars (/*... */) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            if (char == \"\\n\") {\r\n                this.line++;\r\n                this.column = 0;\r\n                lastCharWasNewline = true;\r\n                text += char;\r\n            } else if (!(lastCharWasNewline && char == \" \")) {\r\n                text += char;\r\n                lastCharWasNewline = false;\r\n            }\r\n\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n    lexEndofLineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let text = \"--\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\n\") {\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                // this.pushError(\"Innerhalb eines Einzeilenkommentars (//... ) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n\r\n    lexNumber() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let sign: number = 1;\r\n        if (this.currentChar == '-') {\r\n            sign = -1;\r\n            this.next();\r\n        }\r\n\r\n        let posStart = this.pos;\r\n\r\n        let firstChar = this.currentChar;\r\n\r\n        this.next();\r\n\r\n        let radix: number = 10;\r\n\r\n        if (firstChar == '0' && (['b', 'x', '0', '1', '2', '3', '4', '5', '6', '7'].indexOf(this.currentChar) >= 0)) {\r\n            if (this.currentChar == 'x') {\r\n                radix = 16;\r\n                this.next();\r\n            } else if (this.currentChar == 'b') {\r\n                radix = 2;\r\n                this.next();\r\n            } else radix = 8;\r\n            posStart = this.pos;\r\n        }\r\n\r\n        while (this.isDigit(this.currentChar, radix)) {\r\n            this.next();\r\n        }\r\n\r\n        let tt = TokenType.integerConstant;\r\n\r\n        if (this.currentChar == \".\") {\r\n            tt = TokenType.floatingPointConstant;\r\n\r\n            this.next();\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n\r\n        }\r\n\r\n        let base = this.input.substring(posStart, this.pos);\r\n\r\n        posStart = this.pos;\r\n        let exponent: number = 0;\r\n\r\n        let hasExponential: boolean = false;\r\n        //@ts-ignore\r\n        if (this.currentChar == \"e\") {\r\n            hasExponential = true;\r\n            this.next();\r\n            let posExponentStart: number = this.pos;\r\n\r\n            //@ts-ignore\r\n            if (this.currentChar == '-') {\r\n                this.next();\r\n            }\r\n\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n            let exponentString = this.input.substring(posExponentStart, this.pos);\r\n            exponent = Number.parseInt(exponentString);\r\n        }\r\n\r\n        if (this.currentChar == 'd' || this.currentChar == 'f') {\r\n            tt == TokenType.floatingPointConstant;\r\n            this.next();\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n        }\r\n\r\n        let value: number = (tt == TokenType.integerConstant) ? Number.parseInt(base, radix) : Number.parseFloat(base);\r\n        value *= sign;\r\n        if (exponent != 0) value *= Math.pow(10, exponent);\r\n\r\n        this.pushToken(tt, value, line, column);\r\n\r\n    }\r\n\r\n    lexAnnotation() {\r\n        let line = this.line;\r\n        let column = this.column - 1;\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n        this.next(); // skip@\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n        this.pushToken(TokenType.at, text, line, column, text.length + 1);\r\n    }\r\n\r\n    lexIdentifierOrKeyword() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n\r\n        let tt = keywordList[text.toLowerCase()];\r\n        if (tt != null && typeof tt == \"number\") {\r\n\r\n            switch (tt) {\r\n                case TokenType.true:\r\n                    this.pushToken(TokenType.booleanConstant, true, line, column);\r\n                    break;\r\n                case TokenType.false:\r\n                    this.pushToken(TokenType.booleanConstant, false, line, column);\r\n                    break;\r\n                default:\r\n                    this.pushToken(tt, text, line, column);\r\n                    break;\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        this.pushToken(TokenType.identifier, text, line, column);\r\n\r\n    }\r\n\r\n    isSpace(char: string): boolean {\r\n        return char == \" \" || char == \"\\n\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport function errorListToString(errorList: Error[]): string {\r\n    let s = \"\";\r\n\r\n    for (let error of errorList) {\r\n\r\n        s += \"Z \" + error.position.line + \", S \" + error.position.column + \": \";\r\n        s += error.text + \"<br>\";\r\n\r\n    }\r\n\r\n    return s;\r\n}","import { Lexer } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Token, TokenList, TokenType, tokenListToString } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class Formatter implements monaco.languages.DocumentFormattingEditProvider,\r\n    monaco.languages.OnTypeFormattingEditProvider {\r\n\r\n    autoFormatTriggerCharacters: string[] = ['\\n'];\r\n\r\n    displayName?: string = \"Java-Autoformat\";\r\n\r\n\r\n    constructor(\r\n        // private main: Main\r\n    ) {\r\n\r\n    }\r\n\r\n    init() {\r\n        monaco.languages.registerDocumentFormattingEditProvider('myJava', this);\r\n        monaco.languages.registerOnTypeFormattingEditProvider('myJava', this);\r\n    }\r\n\r\n    provideOnTypeFormattingEdits(model: monaco.editor.ITextModel, position: monaco.Position, ch: string, options: monaco.languages.FormattingOptions, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n    deleteOverlappingRanges(edits: monaco.languages.TextEdit[]) {\r\n        for (let i = 0; i < edits.length - 1; i++) {\r\n            let e = edits[i];\r\n            let e1 = edits[i + 1];\r\n            if (e.range.endLineNumber < e1.range.startLineNumber) continue;\r\n            if (e.range.endLineNumber == e1.range.startLineNumber) {\r\n                if (e.range.endColumn >= e1.range.startColumn) {\r\n                    edits.splice(i + 1, 1);\r\n                } else {\r\n                    if (e.range.endColumn == 0 && e.text.length > 0 && e1.range.startColumn == 1 && e1.range.endColumn > e1.range.startColumn && e1.text == \"\") {\r\n                        let delta = e.text.length - (e1.range.endColumn - e1.range.startColumn);\r\n                        if (delta > 0) { \r\n                            e.text = e.text.substr(0, delta);\r\n                            edits.splice(i+1, 1);\r\n                        }\r\n                        else if (delta < 0)\r\n                        { \r\n                            //@ts-ignore\r\n                            e1.range.endColumn = e1.range.startColumn - delta;\r\n                            edits.splice(i, 1);\r\n                            i--;\r\n\r\n                         }\r\n                        else {\r\n                            edits.splice(i, 2);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    provideDocumentFormattingEdits(model: monaco.editor.ITextModel,\r\n        options: monaco.languages.FormattingOptions,\r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n\r\n    format(model: monaco.editor.ITextModel): monaco.languages.TextEdit[] {\r\n\r\n        let edits: monaco.languages.TextEdit[] = [];\r\n\r\n        // if (this.main.currentWorkspace == null || this.main.currentWorkspace.currentlyOpenModule == null) {\r\n        //     return [];\r\n        // }\r\n\r\n        // let text = this.main.monaco_editor.getValue({ preserveBOM: false, lineEnding: \"\\n\" });\r\n\r\n        let text = model.getValue(monaco.editor.EndOfLinePreference.LF);\r\n\r\n        let tokenlist = new Lexer().lex(text).tokens;\r\n\r\n        // let tokenlist = this.main.currentWorkspace.currentlyOpenModule.tokenList;\r\n\r\n        if (tokenlist == null) return [];\r\n\r\n        // TODO:\r\n        // { at the end of line, with one space before; followed only by spaces and \\n\r\n        // indent lines according to { and }\r\n        // Beware: int i[] = { ... }\r\n        // exactly one space before/after binary operators\r\n        // no space after ( and no space before )\r\n        // (   ) -> ()\r\n        // (  ()) -> (())\r\n        // (()  ) -> (())\r\n\r\n        let lastNonSpaceToken: Token = null;\r\n        let indentLevel = 0;\r\n        let tabSize = 3;\r\n        let curlyBracesOpenAtLines: number[] = [];\r\n        let indentLevelAtSwitchStatements: number[] = [];\r\n        let switchHappend: boolean = false;\r\n        let lastTokenWasNewLine: number = 0;\r\n        let roundBracketsOpen: number = 0;\r\n\r\n        for (let i = 0; i < tokenlist.length; i++) {\r\n\r\n            let t = tokenlist[i];\r\n            lastTokenWasNewLine--;\r\n\r\n            switch (t.tt) {\r\n\r\n                case TokenType.leftCurlyBracket:\r\n                    if (switchHappend) {\r\n                        switchHappend = false;\r\n                        indentLevelAtSwitchStatements.push(indentLevel + 2);\r\n                        indentLevel++;\r\n                    }\r\n                    indentLevel++;\r\n                    curlyBracesOpenAtLines.push(t.position.line);\r\n                    if (lastNonSpaceToken != null) {\r\n                        let tt = lastNonSpaceToken.tt;\r\n                        if (tt == TokenType.rightBracket || tt == TokenType.identifier || tt == TokenType.leftRightSquareBracket) {\r\n                            this.replaceBetween(lastNonSpaceToken, t, edits, \" \");\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let token1 = tokenlist[i + 1];\r\n                        if (token1.tt != TokenType.newline && token1.tt != TokenType.space) {\r\n                            this.insertSpaces(edits, token1.position.line, token1.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    if (indentLevelAtSwitchStatements[indentLevelAtSwitchStatements.length - 1] == indentLevel) {\r\n                        indentLevelAtSwitchStatements.pop();\r\n                        indentLevel--;\r\n                        // if(t.position.column >= 3){\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                        // }    \r\n                    }\r\n                    indentLevel--;\r\n                    let openedAtLine = curlyBracesOpenAtLines.pop();\r\n                    if (openedAtLine != null && openedAtLine != t.position.line) {\r\n                        if (lastNonSpaceToken != null && lastNonSpaceToken.position.line == t.position.line) {\r\n                            this.replace(edits, t.position, t.position, \"\\n\" + \" \".repeat(indentLevel * tabSize));\r\n                        }\r\n                    } else {\r\n                        if (i > 0) {\r\n                            let token1 = tokenlist[i - 1];\r\n                            if (token1.tt != TokenType.space && token1.tt != TokenType.newline) {\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    roundBracketsOpen++;\r\n                    if (i < tokenlist.length - 2) {\r\n                        let nextToken1 = tokenlist[i + 1];\r\n                        let nextToken2 = tokenlist[i + 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                            i++;\r\n                            if (nextToken2.tt == TokenType.rightBracket) {\r\n                                i++;\r\n                                roundBracketsOpen--;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt == TokenType.space && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line, lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    roundBracketsOpen--;\r\n                    if (i > 1) {\r\n                        let nextToken1 = tokenlist[i - 1];\r\n                        let nextToken2 = tokenlist[i - 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.newline:\r\n                    lastTokenWasNewLine = 2;\r\n                    if (i < tokenlist.length - 2) {\r\n\r\n                        let lastTokenIsOperator = this.isBinaryOperator(lastNonSpaceToken?.tt);\r\n                        let nextTokenIsOperator = this.isBinaryOperator(this.getNextNonSpaceToken(i, tokenlist).tt);\r\n\r\n                        let beginNextLine = tokenlist[i + 1];\r\n                        let token2 = tokenlist[i + 2];\r\n                        let currentIndentation = 0;\r\n\r\n                        if (beginNextLine.tt == TokenType.newline) {\r\n                            break;\r\n                        }\r\n\r\n                        let delta: number = 0;\r\n                        if (beginNextLine.tt == TokenType.space) {\r\n                            if (token2.tt == TokenType.newline) {\r\n                                break;\r\n                            }\r\n                            currentIndentation = beginNextLine.position.length;\r\n                            i++;\r\n                            if (token2.tt == TokenType.rightCurlyBracket) {\r\n                                delta = -1;\r\n                            }\r\n                        }\r\n\r\n                        if (beginNextLine.tt == TokenType.rightCurlyBracket) {\r\n                            delta = -1;\r\n                            // indentLevel--;\r\n                            // curlyBracesOpenAtLines.pop();\r\n                            // lastNonSpaceToken = beginNextLine;\r\n                            // i++;\r\n                        }\r\n\r\n                        if(nextTokenIsOperator || lastTokenIsOperator) delta = 1;\r\n\r\n                        let il = indentLevel + delta;\r\n                        if(roundBracketsOpen > 0){\r\n                            il++;\r\n                        }\r\n                        if (il < 0) il = 0;\r\n\r\n                        let correctIndentation = il * tabSize;\r\n\r\n                        if (correctIndentation > currentIndentation) {\r\n                            this.insertSpaces(edits, t.position.line + 1, 0, correctIndentation - currentIndentation);\r\n                        } else if (correctIndentation < currentIndentation) {\r\n                            this.deleteSpaces(edits, t.position.line + 1, 0, currentIndentation - correctIndentation);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.space:\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment) {\r\n                            if (i > 0) {\r\n                                let lastToken = tokenlist[i - 1];\r\n                                if (lastToken.tt != TokenType.newline) {\r\n                                    if (t.position.length > 1) {\r\n                                        this.deleteSpaces(edits, t.position.line, t.position.column, t.position.length - 1);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.comma:\r\n                case TokenType.semicolon:\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt != TokenType.newline && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.tt == TokenType.space && lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line,\r\n                                    lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment && nextToken.tt != TokenType.space && nextToken.tt != TokenType.newline) {\r\n                            this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightSquareBracket:\r\n                    if (lastNonSpaceToken != null && lastNonSpaceToken.tt == TokenType.leftSquareBracket) {\r\n                        this.replaceBetween(lastNonSpaceToken, t, edits, \"\");\r\n\r\n                    }\r\n                    break;\r\n\r\n            }\r\n\r\n            // binary operator?\r\n            if (this.isBinaryOperator(t.tt)) {\r\n\r\n                let lowerGeneric = t.tt == TokenType.lower && this.lowerBelongsToGenericExpression(i, tokenlist);\r\n                let greaterGeneric = t.tt == TokenType.greater && this.greaterBelongsToGenericExpression(i, tokenlist);\r\n\r\n                if (lastTokenWasNewLine <= 0 && lastNonSpaceToken != null && [TokenType.leftBracket, TokenType.comma].indexOf(lastNonSpaceToken.tt) < 0) {\r\n\r\n                    if (i > 0) {\r\n                        let tokenBefore = tokenlist[i - 1];\r\n                        let spaces = (lowerGeneric || greaterGeneric) ? 0 : 1;\r\n                        if (tokenBefore.tt == TokenType.space) {\r\n                            if (tokenBefore.position.length != spaces) {\r\n                                this.insertSpaces(edits, tokenBefore.position.line,\r\n                                    tokenBefore.position.column, spaces - tokenBefore.position.length);\r\n                            }\r\n                        } else {\r\n                            if (spaces == 1)\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        let spaces = (lowerGeneric) ? 0 : 1;\r\n                        if (nextToken.tt == TokenType.space) {\r\n                            if (greaterGeneric && i < tokenlist.length - 2 && tokenlist[i + 2].tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (nextToken.position.length != spaces) {\r\n                                this.insertSpaces(edits, nextToken.position.line,\r\n                                    nextToken.position.column, spaces - nextToken.position.length);\r\n                            }\r\n                        } else {\r\n                            if (greaterGeneric && nextToken.tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (spaces == 1) this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            if (t.tt != TokenType.space && t.tt != TokenType.newline) {\r\n                lastNonSpaceToken = t;\r\n            }\r\n\r\n        }\r\n\r\n        this.deleteOverlappingRanges(edits);\r\n\r\n        return edits;\r\n\r\n    }\r\n    getNextNonSpaceToken(currentIndex: number, tokenlist: TokenList):  Token {\r\n\r\n        if(currentIndex == tokenlist.length - 1) return tokenlist[currentIndex];\r\n\r\n        let j = currentIndex + 1;\r\n        while(j < tokenlist.length - 1 && (tokenlist[j].tt == TokenType.space )){\r\n            j++;\r\n        }\r\n        return tokenlist[j];\r\n\r\n    }\r\n\r\n    lowerBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position + 1;\r\n        while (i < tokenlist.length) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.greater) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i++;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    greaterBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position - 1;\r\n        while (i >= 0) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.lower) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i--;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isBinaryOperator(token: TokenType) {\r\n        return token != null && token >= TokenType.modulo && token <= TokenType.equal;\r\n    }\r\n\r\n    private replaceBetween(lastNonSpaceToken: Token, t: Token, edits: monaco.languages.TextEdit[], text: string) {\r\n        let positionFrom = {\r\n            line: lastNonSpaceToken.position.line,\r\n            column: lastNonSpaceToken.position.column + lastNonSpaceToken.position.length\r\n        };\r\n        let positionTo = {\r\n            line: t.position.line,\r\n            column: t.position.column\r\n        };\r\n        if (positionFrom.line != positionTo.line ||\r\n            positionTo.column - positionFrom.column != text.length) {\r\n            this.replace(edits, positionFrom, positionTo, text);\r\n        }\r\n    }\r\n\r\n    deleteSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column + numberOfSpaces + (column == 0 ? 1 : 0),\r\n                endLineNumber: line\r\n            },\r\n            text: \"\"\r\n        });\r\n    }\r\n\r\n    insertSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n\r\n        if (numberOfSpaces < 0) {\r\n            this.deleteSpaces(edits, line, column, -numberOfSpaces);\r\n            return;\r\n        }\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column,\r\n                endLineNumber: line\r\n            },\r\n            text: \" \".repeat(numberOfSpaces)\r\n        });\r\n    }\r\n\r\n    replace(edits: monaco.languages.TextEdit[], positionFrom: { line: number; column: number; }, positionTo: { line: number; column: number; }, text: string) {\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: positionFrom.column,\r\n                startLineNumber: positionFrom.line,\r\n                endColumn: positionTo.column,\r\n                endLineNumber: positionTo.line\r\n            },\r\n            text: text\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\n\r\nexport type Theme = {\r\n    name: string,\r\n    monacoTheme: string,\r\n    cssColors: { [color: string]: string }\r\n}\r\n\r\nexport class ThemeManager {\r\n\r\n    themes: Theme[] = [];\r\n\r\n    constructor() {\r\n        this.initThemes();\r\n    }\r\n\r\n    switchTheme(name: string) {\r\n        for (let theme of this.themes) {\r\n            if (theme.name == name) {\r\n                this.internalSwitchTheme(theme);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    internalSwitchTheme(theme: Theme) {\r\n        monaco.editor.setTheme(theme.monacoTheme);\r\n\r\n        let root = document.documentElement;\r\n        for (const key of Object.keys(theme.cssColors)) {\r\n            const value = theme.cssColors[key]\r\n\r\n            root.style.setProperty(key, value);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    initThemes() {\r\n\r\n        this.themes.push({\r\n            name: \"dark\",\r\n            monacoTheme: \"myCustomThemeDark\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"#1e1e1e\",\r\n                \"--backgroundLight\": \"#252526\",\r\n                \"--backgroundHeading\": \"#37373d\",\r\n                \"--backgroundSelected\": \"#2a2d2e\",\r\n                \"--fontColorNormal\": \"#c2cccc\",\r\n                \"--fontColorLight\": \"#e7e7e7\",\r\n                \"--slider\": \"#414141\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#1e1e1e\",\r\n                \"--scrollbar-thumb\": \"#3e3e3e\",\r\n                \"--scrollbar-thumb-hover\": \"#5e5e5e\",\r\n                \"--scrollbar-thumb-active\": \"#7e7e7e\",\r\n                \"--submenu-hover\": \"#094771\",\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#616162\",\r\n                \"--file-hover\": \"hsla(0, 0%, 38%, 0.125)\",\r\n                \"--file-active\": \"#094771\",\r\n                \"--file-active-hover\": \"rgba(9, 71, 113, 0.827)\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"blue\",\r\n                \"--contextmenu-background\": \"#3c3c3c\",\r\n                \"--contextmenu-color\": \"rgb(212,212,212)\",\r\n                \"--contextmenu-hover-background\": \"#094771\",\r\n                \"--contextmenu-hover-color\": \"#ffffff\",\r\n                \"--error-filename\": \"#2a709e\",\r\n                \"--error-line-ative\": \"#094771\",\r\n                \"--error-line-hover\": \"rgba(96, 96, 96, 0.125)\",\r\n                \"--error-position\": \"#c0802d\",\r\n                \"--linecolumn\": \"#14c714\",\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#2b2b7d2f\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"rgb(85,85,85)\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#383838\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#252526\",\r\n                \"--editorTooltip-border\": \"#454545\",\r\n\r\n                \"--renameInput-color\": \"#ffffff\",\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"white\",\r\n                \"--bottomdiv-tabheading-active\": \"rgb(97,97,255)\",\r\n                \"--noErrorMessage\": \"rgb(37, 211, 37)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"#1e1e1e\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"white\",\r\n                \"--consoleEntryIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"white\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 51, 51)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--deValue\": \"white\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#383838\",\r\n                \"--helper-border-color\": \"#d4d4d4\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#ffffff\",\r\n                \"--runInputColor\": \"#ffffff\",\r\n                \"--runBackgroundColor\": \"rgba(255, 255, 255, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n        let highlightColor = \"#8080ff\";\r\n\r\n        this.themes.push({\r\n            name: \"light\",\r\n            monacoTheme: \"myCustomThemeLight\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"white\",\r\n                \"--backgroundLight\": \"#f3f3f3\",\r\n                \"--backgroundHeading\": \"#dcdcdc\",\r\n                \"--backgroundSelected\": \"#e8e8e8\",\r\n                \"--fontColorNormal\": \"#756161\",\r\n                \"--fontColorLight\": \"#756161\",\r\n                \"--slider\": \"#b0b0b0\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#e3e3e3\",\r\n                \"--scrollbar-thumb\": \"#bababa\",\r\n                \"--scrollbar-thumb-hover\": \"#8e8e8e\",\r\n                \"--scrollbar-thumb-active\": \"#616161\",\r\n                \"--submenu-hover\": highlightColor,\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#cfcfcf\",\r\n                \"--file-hover\": \"#e8e8e8\",\r\n                \"--file-active\": highlightColor,\r\n                \"--file-active-hover\": \"#a0a0ff\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"white\",\r\n                \"--contextmenu-background\": \"white\",\r\n                \"--contextmenu-color\": \"#756161\",\r\n                \"--contextmenu-hover-background\": highlightColor,\r\n                \"--contextmenu-hover-color\": \"#a0a0ff\",\r\n                \"--error-filename\": \"#ff0000\",\r\n                \"--error-line-ative\": \"#ffa0a0\",\r\n                \"--error-line-hover\": \"#ffc0c0\",\r\n                \"--error-position\": \"#804040\",\r\n                \"--linecolumn\": \"#14c714\", // TODO\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#babaec80\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"#c0c0c0\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#e0e0e0\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#e0e0e0\",\r\n                \"--editorTooltip-border\": \"#9d9d9d\",\r\n\r\n                \"--renameInput-color\": \"#000000\",\r\n\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"#424242\",\r\n                \"--bottomdiv-tabheading-active\": \"#424242\",\r\n                \"--noErrorMessage\": \"rgb(17, 180, 17)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"white\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"#0000a0\",\r\n                \"--consoleEntryIdentifier\": \"black\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"#756161\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 21, 21)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"black\",\r\n                \"--deValue\": \"#0000a0\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#f3f3f3\",\r\n                \"--helper-border-color\": \"#606060\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#303030\",\r\n                \"--runInputColor\": \"#000000\",\r\n                \"--runBackgroundColor\": \"rgba(0, 0, 0, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { TokenType } from \"../lexer/Token.js\";\r\n\r\ntype CheckFunction = (columnIdentifier: string, parameterValues: number[]) => string;\r\ntype OutputFunction = (value: any, parameterValues: number[]) => string;\r\n\r\nexport abstract class SQLType {\r\n\r\n    abstract canCastTo(type2: SQLType): boolean;\r\n\r\n    abstract getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType;\r\n\r\n    abstract getUnaryResultType(operator: TokenType): SQLType;\r\n\r\n    abstract getBinaryResult(operator: TokenType, value1: any, value2: any): any;\r\n\r\n    abstract toString(): string;\r\n\r\n    abstract getBaseTypeName(): string;\r\n\r\n}\r\n\r\nexport class SQLBaseType extends SQLType {\r\n    // Map<tokenType, Map<SecondType, ResultType>>\r\n    binaryResultTypes: Map<TokenType, Map<SQLBaseType, SQLBaseType>> = new Map();\r\n\r\n    unaryOperators: TokenType[] = [];\r\n\r\n    static baseTypes: SQLBaseType[] = [];\r\n    static baseTypeMap: Map<string, SQLBaseType> = new Map();\r\n\r\n    public canCastToList: string[];\r\n\r\n    constructor(public name: string, public parameterDescriptions: string[],\r\n        public checkFunction: CheckFunction, public outputFunction: OutputFunction, canCastToList: string[]) {\r\n        super();\r\n        this.canCastToList = canCastToList.slice(0);\r\n        let ownIndex = this.canCastToList.indexOf(name);\r\n        if(ownIndex >= 0) this.canCastToList.splice(ownIndex, 1);\r\n    }\r\n\r\n    static fromConstantType(tt: TokenType): SQLBaseType {\r\n        switch (tt) {\r\n            case TokenType.stringConstant:\r\n                return this.baseTypeMap.get(\"text\");\r\n            case TokenType.integerConstant:\r\n                return this.baseTypeMap.get(\"integer\");\r\n            case TokenType.floatingPointConstant:\r\n                return this.baseTypeMap.get(\"float\");\r\n            case TokenType.charConstant:\r\n                return this.baseTypeMap.get(\"text\");\r\n            case TokenType.booleanConstant:\r\n                return this.baseTypeMap.get(\"boolean\");\r\n            case TokenType.keywordNull:\r\n                return this.baseTypeMap.get(\"null\");\r\n        \r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    getBaseTypeName(): string {\r\n        return this.name;\r\n    }\r\n\r\n    toString(): string {\r\n        return this.name;\r\n    }\r\n\r\n    static getBaseType(name: string) {\r\n        if(name == 'char') name = 'varchar';\r\n        return this.baseTypeMap.get(name.toLocaleLowerCase());\r\n    }\r\n\r\n    static addBaseTypes(baseTypes: SQLBaseType[]) {\r\n        SQLBaseType.baseTypes = SQLBaseType.baseTypes.concat(baseTypes);\r\n        baseTypes.forEach(t => SQLBaseType.baseTypeMap.set(t.name, t));\r\n    }\r\n\r\n    addBinaryOperation(tokenType: TokenType | TokenType[], secondType: SQLBaseType, resultType: SQLBaseType, isCommutative: boolean = true) {\r\n\r\n        if (!Array.isArray(tokenType)) tokenType = [tokenType];\r\n\r\n        tokenType.forEach(t => {\r\n            let map: Map<SQLBaseType, SQLBaseType> = this.binaryResultTypes.get(t);\r\n            if (map == null) {\r\n                map = new Map();\r\n                this.binaryResultTypes.set(t, map);\r\n            }\r\n            map.set(secondType, resultType);\r\n            if (isCommutative && secondType != this) {\r\n                secondType.addBinaryOperation(t, this, resultType, false);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    canCastTo(type2: SQLType): boolean {\r\n\r\n        let bt2: SQLBaseType = type2 instanceof SQLBaseType ? type2 : type2[\"baseType\"];\r\n\r\n        return this.canCastToList.indexOf(bt2.name) >= 0 || this.name == bt2.name;\r\n\r\n    }\r\n\r\n    getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType {\r\n\r\n\r\n        let map = this.binaryResultTypes.get(operator);\r\n        if (map == null) return null;\r\n\r\n        let bt2: SQLBaseType = secondType instanceof SQLBaseType ? secondType : secondType[\"baseType\"];\r\n\r\n        return map.get(bt2);\r\n\r\n    }\r\n\r\n    getUnaryResultType(operator: TokenType): SQLType {\r\n        if([TokenType.isNull, TokenType.isNotNull].indexOf(operator) >= 0) return booleanType;\r\n        if(this.unaryOperators.indexOf(operator)>= 0) return this;\r\n    }\r\n\r\n    getBinaryResult(operator: TokenType, value1: any, value2: any): any {\r\n        switch (operator) {\r\n            case TokenType.concatenation:\r\n                if (value1 != null && value2 != null) return value1 + value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.plus:\r\n                if (value1 != null && value2 != null) return value1 + value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.minus:\r\n                if (value1 != null && value2 != null) return value1 - value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.multiplication:\r\n                if (value1 != null && value2 != null) return value1 * value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.division:\r\n                if (value1 != null && value2 != null) return value1 * value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.keywordAnd:\r\n                if (value1 != null && value2 != null) return value1 * value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.keywordOr:\r\n                if (value1 != null && value2 != null) return Math.max(value1, value2);\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.lower:\r\n                if (value1 != null && value2 != null) return value1 < value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.greater:\r\n                if (value1 != null && value2 != null) return value1 >= value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.lowerOrEqual:\r\n                if (value1 != null && value2 != null) return value1 <= value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.greaterOrEqual:\r\n                if (value1 != null && value2 != null) return value1 >= value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.equal:\r\n                return value1 == value2;\r\n            case TokenType.notEqual:\r\n                return value1 != value2;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nlet tens: number[] = [1, 10, 100, 1000, 100000, 100000, 1000000, 10000000, 100000000, 1000000000];\r\n\r\nexport class SQLDerivedType extends SQLType {\r\n\r\n    name: string;\r\n\r\n    constructor(public baseType: SQLBaseType, public parameterValues: number[]) {\r\n        super();\r\n        let parameters = parameterValues.join(\", \");\r\n        this.name = baseType.name + \"(\" + parameters + \")\";\r\n    }\r\n\r\n    toString(): string {\r\n        return this.name;\r\n    }\r\n\r\n    getBaseTypeName(): string {\r\n        return this.baseType.name;\r\n    }\r\n\r\n\r\n    canCastTo(type2: SQLType): boolean {\r\n\r\n        let bt2: SQLBaseType = type2 instanceof SQLBaseType ? type2 : type2[\"baseType\"];\r\n\r\n        return this.baseType.canCastToList.indexOf(bt2.name) >= 0 || this.baseType.name == bt2.name;\r\n\r\n    }\r\n\r\n    getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType {\r\n\r\n\r\n        let map = this.baseType.binaryResultTypes.get(operator);\r\n        if (map == null) return null;\r\n\r\n        let bt2: SQLBaseType = secondType instanceof SQLBaseType ? secondType : secondType[\"baseType\"];\r\n\r\n        let returnBaseType = map.get(bt2);\r\n\r\n        if (this.baseType == bt2 && this.baseType == returnBaseType && secondType instanceof SQLDerivedType) {\r\n            if (this.baseType.name == \"varchar\" || operator == TokenType.concatenation) {\r\n                return new SQLDerivedType(this.baseType, [this.parameterValues[0] + secondType.parameterValues[0]]);\r\n            }\r\n            if (this.baseType.name == \"decimal\") {\r\n                return new SQLDerivedType(this.baseType, [Math.max(this.parameterValues[0], secondType.parameterValues[0]), Math.max(this.parameterValues[1], secondType.parameterValues[1])]);\r\n            }\r\n        }\r\n\r\n        return map.get(bt2);\r\n\r\n    }\r\n\r\n    getUnaryResultType(operator: TokenType): SQLType {\r\n        return this.baseType.getUnaryResultType(operator);\r\n    }\r\n\r\n    getBinaryResult(operator: TokenType, value1: any, value2: any): any {\r\n        let result = this.baseType.getBinaryResult(operator, value1, value2);\r\n        if (this.name = \"varchar\") return result == null ? null : (\"\" + result).substr(0, this.parameterValues[0]);\r\n        if (this.name == \"decimal\") {\r\n            if (result == null) return null;\r\n            return Math.round(result * tens[this.parameterValues[1]]) / tens[this.parameterValues[1]];\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nlet textTypes = [\"varchar\", \"text\" ,\"tinytext\", \"mediumtext\", \"longtext\"];\r\n\r\nvar varcharType = new SQLBaseType(\"varchar\", [\"Maximale Länge\"], (ci, pv) => `check(length(${ci}) <= ${pv[0]})`,\r\n    (v: string, pv) => v.substring(0, pv[0]), textTypes);\r\n\r\nvar textType = new SQLBaseType(\"text\", [\"Maximale Länge\"], (ci, pv) => \"\", (v: string, pv) => v, textTypes.concat([\"date\", \"datetime\", \"timestamp\"]));\r\nvar tinyTextType = new SQLBaseType(\"tinyText\", [], (ci, pv) => \"\", (v: string, pv) => v, textTypes);\r\nvar mediumTextType = new SQLBaseType(\"mediumText\", [], (ci, pv) => \"\", (v: string, pv) => v, textTypes);\r\nvar longTextType = new SQLBaseType(\"longText\", [], (ci, pv) => \"\", (v: string, pv) => v, textTypes);\r\n\r\nlet floatTypes = [\"decimal\", \"numeric\", \"double\", \"real\", \"float\"];\r\n\r\nvar decimalType = new SQLBaseType(\"decimal\", [\"Gesamtzahl der Stellen\", \"Nachkommastellen\"], (ci, pv) => \"\",\r\n    (v: number, pv) => { let vk = Math.trunc(v); let nk = v - vk; return \"\" + vk + (pv[1] > 0 ? \".\" + Math.round(nk * tens[pv[1]]) : \"\") },\r\n    floatTypes);\r\nvar numericType = new SQLBaseType(\"numeric\", [\"Gesamtzahl der Stellen\", \"Nachkommastellen\"], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\nvar doubleType = new SQLBaseType(\"double\", [\"Gesamtzahl der Stellen\", \"Nachkommastellen\"], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\nvar realType = new SQLBaseType(\"real\", [], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\nvar floatType = new SQLBaseType(\"float\", [], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\n\r\nlet inttypes = [\"int\", \"integer\", \"tinyint\", \"smallint\", \"mediumint\", \"bigint\"];\r\nlet numberTypes = inttypes.concat(floatTypes);\r\n\r\nvar intType = new SQLBaseType(\"int\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar integerType = new SQLBaseType(\"integer\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar tinyIntType = new SQLBaseType(\"tinyint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar smallIntType = new SQLBaseType(\"smallint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar mediumIntType = new SQLBaseType(\"mediumint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar bigIntType = new SQLBaseType(\"bigint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\n\r\nvar dateType = new SQLBaseType(\"date\", [], (ci, pv) => `check(isDate(${ci}))`, (v: string, pv) => v, []);\r\nvar dateTimeType = new SQLBaseType(\"datetime\", [], (ci, pv) => `check(isDateTime(${ci}))`, (v: string, pv) => v, [\"timestamp\"]);\r\nvar timestampType = new SQLBaseType(\"timestamp\", [], (ci, pv) => `check(isDateTime(${ci}))`, (v: string, pv) => v, [\"datetime\"]);\r\n\r\nvar booleanType = new SQLBaseType(\"boolean\", [], (ci, pv) => `check(${ci} == 0 or ${ci} == 1)`, (v, pv) => v == 1 ? \"true\" : \"false\",\r\n    [\"varchar\", \"text\", \"decimal\", \"numeric\"]);\r\n\r\nvar nullType = new SQLBaseType(\"null\", [], (ci, pv) => \"\", (v, pv) => v,\r\n    []);\r\n\r\nlet numericTypes = [decimalType, numericType, doubleType, realType, floatType, intType, integerType, tinyIntType, smallIntType, mediumIntType, bigIntType];\r\n\r\nlet baseTypes = [varcharType, textType, tinyTextType, mediumTextType, longTextType,\r\n    dateType, dateTimeType, timestampType, booleanType, nullType].concat(numericTypes);\r\n\r\nSQLBaseType.addBaseTypes(baseTypes);\r\n\r\nvarcharType.addBinaryOperation(TokenType.concatenation, varcharType, varcharType);\r\nvarcharType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\ntextType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\nvarcharType.addBinaryOperation(TokenType.keywordLike, varcharType, booleanType);\r\nvarcharType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\ntextType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\n\r\nlet numericBinaryOperators: TokenType[] = [TokenType.plus, TokenType.minus, TokenType.multiplication, TokenType.division, TokenType.modulo];\r\nlet comparisonOperators: TokenType[] = [TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual];\r\n\r\nfor (let i = 0; i < numericTypes.length; i++) {\r\n    for (let j = i; j < numericTypes.length; j++) {\r\n        numericTypes[i].addBinaryOperation(numericBinaryOperators, numericTypes[j], numericTypes[j]);\r\n        numericTypes[i].addBinaryOperation(comparisonOperators, numericTypes[j], booleanType);\r\n    }\r\n    numericTypes[i].unaryOperators = [TokenType.minus];\r\n}\r\n\r\ndecimalType.addBinaryOperation(numericBinaryOperators, decimalType, decimalType);\r\n\r\nlet characterTypes = [varcharType, textType];\r\nfor (let i = 0; i < characterTypes.length; i++) {\r\n    for (let j = i; j < characterTypes.length; j++) {\r\n        characterTypes[i].addBinaryOperation(TokenType.concatenation, characterTypes[j], characterTypes[j]);\r\n        characterTypes[i].addBinaryOperation(comparisonOperators, characterTypes[j], booleanType);\r\n    }\r\n}\r\nvarcharType.addBinaryOperation(TokenType.concatenation, varcharType, varcharType);\r\n\r\nlet booleanOperations = [TokenType.keywordAnd, TokenType.keywordOr];\r\nbooleanType.addBinaryOperation(booleanOperations, booleanType, booleanType);\r\n\r\nbooleanType.unaryOperators = [TokenType.keywordNot];\r\n\r\nbaseTypes.forEach(bt => bt.unaryOperators = bt.unaryOperators.concat([TokenType.isNull, TokenType.isNotNull]));","import { param, timers } from \"jquery\";\r\nimport { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenList, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { ASTNode, BracketsNode, SelectNode, TermNode, TableOrSubqueryNode, TableNode, SubqueryNode, GroupByNode, OrderByNode, LimitNode, IdentifierNode, DotNode, ListNode, ColumnNode, InsertNode, ConstantNode, UnaryOpNode, CreateTableNode, CreateTableColumnNode, ForeignKeyInfo, UpdateNode, DeleteNode, DropTableNode, AlterTableNode, AlterTableKind, OmittedStatementNode } from \"./AST.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { Column } from \"./SQLTable.js\";\r\nimport { SQLBaseType } from \"./SQLTypes.js\";\r\n\r\nexport type SQLStatement = {\r\n    ast: ASTNode,\r\n    from: TextPosition,\r\n    to: TextPosition,\r\n    hasErrors: boolean,\r\n    acceptedBySQLite: boolean,\r\n    sql?: string,\r\n    sqlCleaned?: string\r\n}\r\n\r\n\r\nexport class Parser {\r\n\r\n    static operatorPrecedence: TokenType[][] = [\r\n        [TokenType.keywordOr], [TokenType.keywordAnd],\r\n        [TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual, TokenType.keywordLike],\r\n        [TokenType.concatenation, TokenType.plus, TokenType.minus], [TokenType.multiplication, TokenType.division, TokenType.modulo],\r\n        [TokenType.keywordIn, TokenType.keywordNotIn]\r\n    ];\r\n\r\n    module: Module;\r\n\r\n    pos: number;\r\n    tokenList: TokenList;\r\n\r\n    errorList: Error[];\r\n\r\n    lookahead = 4;\r\n    ct: Token[];\r\n    lastToken: Token;\r\n    cct: Token;\r\n    tt: TokenType;\r\n    position: TextPosition;\r\n    lastComment: Token;\r\n\r\n    endToken: Token = {\r\n        position: { line: 0, column: 0, length: 1 },\r\n        tt: TokenType.endofSourcecode,\r\n        value: \"das Ende des Programms\"\r\n    };\r\n\r\n    beginStatementKeywords = [\"select\", \"insert into\", \"update\", \"create table\", \"delete from\", \"alter table\", \"drop table\"];\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    parse(m: Module) {\r\n\r\n        this.module = m;\r\n\r\n        this.tokenList = m.tokenList;\r\n        this.errorList = [];\r\n\r\n        m.completionHints = new Map();\r\n\r\n        if (this.tokenList.length == 0) {\r\n            this.module.sqlStatements = [];\r\n            this.module.errors[1] = this.errorList;\r\n            this.module.addCompletionHint({ line: 0, column: 0, length: 0 }, { line: 20000, column: 100, length: 0 }, false, false,\r\n                this.beginStatementKeywords);\r\n            return;\r\n        }\r\n\r\n        this.pos = 0;\r\n        this.initializeLookahead();\r\n\r\n\r\n        let lastToken = this.tokenList[this.tokenList.length - 1];\r\n        this.endToken.position = { line: lastToken.position.line, column: lastToken.position.column + lastToken.position.length, length: 1 };\r\n\r\n        this.module.sqlStatements = this.parseMain();\r\n\r\n        this.module.errors[1] = this.errorList;\r\n\r\n    }\r\n\r\n    initializeLookahead() {\r\n\r\n        this.ct = [];\r\n\r\n        for (let i = 0; i < this.lookahead; i++) {\r\n\r\n            let token: Token = this.endToken;\r\n\r\n            while (true) {\r\n\r\n                if (this.pos >= this.tokenList.length) break;\r\n\r\n                let token1 = this.tokenList[this.pos]\r\n                if (token1.tt == TokenType.comment) {\r\n                    this.lastComment = token1;\r\n                }\r\n\r\n                if (token1.tt != TokenType.newline && token1.tt != TokenType.space && token1.tt != TokenType.comment) {\r\n                    token = token1;\r\n                    if (this.lastComment != null) {\r\n                        token.commentBefore = this.lastComment;\r\n                        this.lastComment = null;\r\n                    }\r\n                    break;\r\n                }\r\n\r\n                this.pos++;\r\n\r\n            }\r\n\r\n            this.ct.push(token);\r\n\r\n            if (i < this.lookahead - 1) {\r\n                this.pos++;\r\n            }\r\n\r\n        }\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    nextToken() {\r\n\r\n        let token: Token;\r\n        this.lastToken = this.cct;\r\n\r\n        while (true) {\r\n\r\n            this.pos++;\r\n\r\n            if (this.pos >= this.tokenList.length) {\r\n                token = this.endToken;\r\n                break;\r\n            }\r\n\r\n            token = this.tokenList[this.pos]\r\n            if (token.tt == TokenType.comment) {\r\n                this.lastComment = token;\r\n            }\r\n\r\n            if (token.tt != TokenType.newline && token.tt != TokenType.space && token.tt != TokenType.comment) {\r\n                token.commentBefore = this.lastComment;\r\n                this.lastComment = null;\r\n                break;\r\n            }\r\n\r\n        }\r\n\r\n        for (let i = 0; i < this.lookahead - 1; i++) {\r\n            this.ct[i] = this.ct[i + 1];\r\n        }\r\n\r\n        this.ct[this.lookahead - 1] = token;\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position?: TextPosition, quickFix?: QuickFix) {\r\n        if (position == null) position = Object.assign({}, this.position);\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    skip(tt: TokenType | TokenType[]) {\r\n        if (!Array.isArray(tt)) tt = [tt];\r\n        if (tt.indexOf(this.tt) >= 0) this.nextToken();\r\n    }\r\n\r\n    expect(tt: TokenType | TokenType[], skip: boolean = true, invokeSemicolonAngel: boolean = false): boolean {\r\n        if (this.tt != tt && !(Array.isArray(tt) && tt.indexOf(this.tt) >= 0)) {\r\n            if (tt == TokenType.semicolon && this.tt == TokenType.endofSourcecode) {\r\n                return true;\r\n            }\r\n\r\n            let position: TextPosition = this.cct.position;\r\n            if (tt == TokenType.semicolon && this.lastToken != null) {\r\n\r\n                if (this.lastToken.position.line < position.line) {\r\n                    position = {\r\n                        line: this.lastToken.position.line,\r\n                        column: this.lastToken.position.column + this.lastToken.position.length,\r\n                        length: 1\r\n                    }\r\n                }\r\n            }\r\n\r\n            let quickFix: QuickFix = null;\r\n            if (tt == TokenType.semicolon && this.lastToken.position.line < this.cct.position.line &&\r\n                !this.isOperatorOrDot(this.lastToken.tt)\r\n            ) {\r\n                quickFix = {\r\n                    title: 'Strichpunkt hier einfügen',\r\n                    editsProvider: (uri) => {\r\n                        return [{\r\n                            resource: uri,\r\n                            edit: {\r\n                                range: {\r\n                                    startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position.column,\r\n                                    message: \"\",\r\n                                    severity: monaco.MarkerSeverity.Error\r\n                                },\r\n                                text: \";\"\r\n                            }\r\n                        }\r\n                        ];\r\n                    }\r\n                }\r\n\r\n                if (invokeSemicolonAngel) {\r\n                    this.module.main.getSemicolonAngel().register(position, this.module);\r\n                }\r\n            }\r\n\r\n            let expectedValuesArray: string[];\r\n\r\n            if (Array.isArray(tt)) {\r\n                expectedValuesArray = tt.map(token => TokenTypeReadable[token]);\r\n                let expectedTokens = expectedValuesArray.join(\", \");\r\n                this.pushError(\"Erwartet wird eines der folgenden: \" + expectedTokens + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            } else {\r\n                expectedValuesArray = [TokenTypeReadable[tt]];\r\n                this.pushError(\"Erwartet wird: \" + TokenTypeReadable[tt] + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            }\r\n\r\n            // if (!Array.isArray(tt) && tt != TokenType.identifier) {\r\n            //     this.module.addCompletionHint(this.getEndOfPosition(this.lastToken.position), this.getCurrentPositionPlus(1), false, false, expectedValuesArray);\r\n            // }\r\n\r\n            return false;\r\n        }\r\n\r\n        if (skip) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    getEndOfPosition(p: TextPosition): TextPosition {\r\n        return {\r\n            line: p.line,\r\n            column: p.column + p.length,\r\n            length: 0\r\n        }\r\n    }\r\n\r\n    isOperatorOrDot(tt: TokenType): boolean {\r\n        if (tt == TokenType.dot) return true;\r\n        for (let op of Parser.operatorPrecedence) {\r\n            for (let operator of op) {\r\n                if (tt == operator) return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    isEnd(): boolean {\r\n        return this.cct == this.endToken;\r\n    }\r\n\r\n    comesToken(token: TokenType | TokenType[], skip: boolean = false): boolean {\r\n\r\n        if (!Array.isArray(token)) {\r\n            let ret: boolean = this.tt == token;\r\n            if (ret && skip) this.nextToken();\r\n            return ret;\r\n        }\r\n\r\n        return token.indexOf(this.tt) >= 0;\r\n\r\n    }\r\n\r\n    getCurrentPosition(): TextPosition {\r\n        return Object.assign({}, this.position);\r\n    }\r\n\r\n    getCurrentPositionPlus(deltaColumns: number): TextPosition {\r\n\r\n        if (this.tt == TokenType.endofSourcecode) {\r\n            return {\r\n                line: this.endToken.position.line,\r\n                column: 100,\r\n                length: 1\r\n            }\r\n        }\r\n\r\n        // get Token in which new position falls:\r\n        let tpos = 0;\r\n        let deltaInsideToken = deltaColumns;\r\n        let length = 0;\r\n        while (tpos < this.lookahead - 1 && (length = this.ct[tpos].position.length) < deltaInsideToken) {\r\n            deltaInsideToken -= length;\r\n            tpos++;\r\n        }\r\n        let tokenPos = this.ct[tpos].position;\r\n        if (tokenPos == null) tokenPos = this.getCurrentPosition();\r\n\r\n        let pos: TextPosition = {\r\n            line: tokenPos.line,\r\n            column: tokenPos.column + deltaInsideToken,\r\n            length: 1\r\n        }\r\n\r\n        return pos;\r\n    }\r\n\r\n    getEndOfCurrentToken(): TextPosition {\r\n\r\n        let position = this.getCurrentPosition();\r\n        position.column = position.column + this.position.length;\r\n        position.length = 0;\r\n\r\n        return position;\r\n    }\r\n\r\n    parseMain(): SQLStatement[] {\r\n\r\n        let mainProgram: SQLStatement[] = [];\r\n\r\n        let mainProgramEnd: TextPosition = {\r\n            column: 0,\r\n            line: 10000,\r\n            length: 1\r\n        }\r\n\r\n        let afterLastStatement: TextPosition = {\r\n            column: 0,\r\n            line: 0,\r\n            length: 0\r\n        }\r\n\r\n        let semicolonAfterLastStatement: boolean = true;\r\n\r\n        this.module.addCompletionHint(afterLastStatement, this.getCurrentPositionPlus(8), false, false,\r\n            this.beginStatementKeywords);\r\n\r\n        while (!this.isEnd()) {\r\n\r\n            let oldPos = this.pos;\r\n\r\n            let errorsBeforeStatement: number = this.errorList.length;\r\n\r\n            while ([TokenType.space, TokenType.newline].indexOf(this.cct.tt) >= 0) {\r\n                this.nextToken();\r\n            }\r\n\r\n            let startPosition = this.getCurrentPosition();\r\n\r\n            let st = this.parseStatement();\r\n\r\n            afterLastStatement = {\r\n                line: this.lastToken.position.line + 1,\r\n                column: 0,\r\n                length: 0\r\n            }\r\n\r\n            semicolonAfterLastStatement = this.tt == TokenType.semicolon;\r\n            while (this.tt == TokenType.semicolon) {\r\n                this.nextToken();\r\n            }\r\n\r\n            let hasErrors: boolean = false;\r\n            for (let i = errorsBeforeStatement; i < this.errorList.length; i++) {\r\n                if (this.errorList[i].level == \"error\") hasErrors = true;\r\n            }\r\n\r\n            if (st != null) {\r\n                mainProgram.push({\r\n                    ast: st,\r\n                    from: startPosition,\r\n                    to: this.getEndOfPosition(this.lastToken.position),\r\n                    hasErrors: hasErrors,\r\n                    acceptedBySQLite: false\r\n                });\r\n            }\r\n            // console.log(mainProgram[mainProgram.length - 1]);\r\n\r\n            mainProgramEnd = this.getCurrentPosition();\r\n\r\n            // emergency-forward:\r\n            if (this.pos == oldPos) {\r\n                let beginStatementTokens: TokenType[] =\r\n                    [TokenType.keywordSelect, TokenType.keywordUpdate, TokenType.keywordCreate, TokenType.keywordInsert,\r\n                    TokenType.keywordDelete, TokenType.keywordDrop, TokenType.keywordAlter];\r\n\r\n                let firstBadToken: boolean = true;\r\n\r\n                while (!this.isEnd() && beginStatementTokens.indexOf(this.tt) < 0) {\r\n                    if ([TokenType.space, TokenType.newline].indexOf(this.tt) < 0 && firstBadToken) {\r\n                        this.pushError(\"Erwartet wird eines dieser Schlüsselwörter: \" + beginStatementTokens.map(t => TokenTypeReadable[t]).join(\", \")\r\n                            + \"; Gefunden wurde: \" + this.cct.value);\r\n                        firstBadToken = true;\r\n                    }\r\n                    this.nextToken();\r\n                }\r\n            }\r\n\r\n            if (semicolonAfterLastStatement || this.cct.position.line - afterLastStatement.line > 0) {\r\n                this.module.addCompletionHint(afterLastStatement, this.getCurrentPositionPlus(8), false, false,\r\n                    this.beginStatementKeywords);\r\n            }\r\n\r\n        }\r\n\r\n        this.module.addCompletionHint(afterLastStatement, { line: this.endToken.position.line + 1, column: 0, length: 0 }, false, false,\r\n            this.beginStatementKeywords);\r\n\r\n        return mainProgram;\r\n\r\n    }\r\n\r\n\r\n\r\n    parseStatement(expectSemicolon: boolean = true): ASTNode {\r\n\r\n        let retStatements: ASTNode = null;\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordSelect:\r\n                return this.parseSelect();\r\n            case TokenType.keywordInsert:\r\n                return this.parseInsert();\r\n            case TokenType.keywordCreate:\r\n                return this.parseCreateTableOrDatabase();\r\n            case TokenType.keywordUpdate:\r\n                return this.parseUpdate();\r\n            case TokenType.keywordDelete:\r\n                return this.parseDelete();\r\n            case TokenType.keywordDrop:\r\n                return this.parseDropTable();\r\n            case TokenType.keywordAlter:\r\n                return this.parseAlterTable();\r\n            case TokenType.keywordCommit:\r\n                this.pushError(\"Die Aweisung commit ist unnötig, da jede Anweisung automatisch commited wird.\", \"info\");\r\n                this.nextToken();\r\n                return null;\r\n            // Omitted statements:\r\n            case TokenType.keywordSet:\r\n                return this.parseSet();\r\n            case TokenType.keywordUse:\r\n                return this.parseUse();\r\n            case TokenType.keywordStart:\r\n                this.nextToken();\r\n                this.expect(TokenType.keywordTransaction, true);\r\n                return null;\r\n\r\n            default:\r\n                let s = TokenTypeReadable[this.tt];\r\n                if (s == null) s = \"\";\r\n                if (s != this.cct.value) s += \"(\" + this.cct.value + \")\";\r\n                s += \" wird hier nicht erwartet.\";\r\n                this.pushError(s);\r\n                this.nextToken();\r\n                break;\r\n        }\r\n\r\n\r\n        return retStatements;\r\n\r\n    }\r\n\r\n    parseSet(): OmittedStatementNode {\r\n\r\n        this.pushError(\"Das SET-Statement wird von SQLite nicht unterstützt. Diese Anweisung wird daher einfach überlesen.\", \"info\");\r\n\r\n        let node: OmittedStatementNode = {\r\n            type: TokenType.omittedeStatement,\r\n            position: this.getCurrentPosition(),\r\n            endPosition: null,\r\n            symbolTable: null\r\n        }\r\n\r\n        this.nextToken(); // skip 'set'\r\n        this.expect(TokenType.identifier, true);\r\n        this.expect(TokenType.equal, true);\r\n        this.expect([TokenType.identifier, TokenType.stringConstant, TokenType.integerConstant, TokenType.charConstant, TokenType.booleanConstant, TokenType.floatingPointConstant], true);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n    parseUse(): OmittedStatementNode {\r\n\r\n        this.pushError(\"Das USE-Statement wird von SQLite nicht unterstützt. Diese Anweisung wird daher einfach überlesen. Sie können eine andere Datenbank auswählen indem Sie in der Datenbankliste links darauf klicken.\", \"info\");\r\n\r\n        let node: OmittedStatementNode = {\r\n            type: TokenType.omittedeStatement,\r\n            position: this.getCurrentPosition(),\r\n            endPosition: null,\r\n            symbolTable: null\r\n        }\r\n\r\n        this.nextToken(); // skip 'use'\r\n        this.expect(TokenType.identifier, true);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n    parseAlterTable(): AlterTableNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"alter\"\r\n\r\n        let node: AlterTableNode = {\r\n            type: TokenType.keywordAlter,\r\n            kind: null,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n        }\r\n\r\n        if (!this.expect(TokenType.keywordTable, true)) {\r\n            this.addCompletionHintHere(false, false, [\"table\"], 1);\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1);\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        this.addCompletionHintHere(false, false, [\"rename to\", \"rename column\", \"add column\", \"drop column\"], 1);\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordRename: this.parseRenameTableOrColumn(node); break;\r\n            case TokenType.keywordAdd: this.parseAlterTableAdd(node); break;\r\n            case TokenType.keywordDrop: this.parseDropColumn(node); break;\r\n            default:\r\n                this.pushError(\"Erwartet wird rename to, rename column, add column oder drop column\");\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    parseRenameTableOrColumn(node: AlterTableNode) {\r\n\r\n        this.nextToken();\r\n        if (!this.comesToken(TokenType.keywordTo)) {\r\n            this.addCompletionHintHere(node.tableIdentifier, false, [\"column\", \"to\"], 3);\r\n        }\r\n        node.endPosition = this.getEndOfCurrentToken();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordTo:\r\n                this.nextToken();\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                node.kind = \"renameTable\";\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    node.newTableName = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    node.endPosition = this.getEndOfCurrentToken();\r\n                } else {\r\n                    this.pushError(\"Erwartet wird der neue Tabellenname.\");\r\n                }\r\n                return;\r\n            case TokenType.keywordColumn:\r\n                this.nextToken();\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                this.addCompletionHintHere(node.tableIdentifier, false, [], 3);\r\n                if (!this.comesToken(TokenType.identifier)) {\r\n                    this.pushError(\"Erwartet wird der Name einer Spalte der Tabelle \" + node.tableIdentifier + \".\");\r\n                    return;\r\n                }\r\n                node.kind = \"renameColumn\";\r\n                node.oldColumnName = <string>this.cct.value;\r\n                node.oldColumnPosition = this.getCurrentPosition();\r\n                this.nextToken();\r\n                this.addCompletionHintHere(false, false, [\"to\"], 3);\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                if (!this.expect(TokenType.keywordTo, true)) return;\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    node.newColumnName = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    node.endPosition = this.getEndOfCurrentToken();\r\n                } else {\r\n                    this.pushError(\"Erwartet wird der neue Spaltenname.\");\r\n                }\r\n                return;\r\n            default:\r\n                this.pushError(\"Erwartet wird das Schlüsselwort 'to' (zum Umbenennen der Tabelle) oder das Schlüsselwor 'column' (zum Umbenennen einer Spalte).\")\r\n                return;\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    parseDropColumn(node: AlterTableNode) {\r\n        this.nextToken(); // skip 'drop'\r\n        this.comesToken(TokenType.keywordColumn, true);\r\n        node.oldColumnPosition = this.getCurrentPosition();\r\n        this.addCompletionHintHere(node.tableIdentifier, false, [], 3);\r\n\r\n        node.kind = \"dropColumn\";\r\n        node.endPosition = this.getEndOfCurrentToken();\r\n\r\n        if (this.comesToken(TokenType.identifier)) {\r\n            node.oldColumnName = <string>this.cct.value;\r\n            this.nextToken();\r\n        } else {\r\n            this.pushError(\"Erwartet wird der Bezeichner der Spalte, die gelöscht werden soll.\");\r\n        }\r\n\r\n    }\r\n\r\n    parseAlterTableAdd(node: AlterTableNode) {\r\n        do {\r\n            this.nextToken(); // skip \"add\" or \",\"\r\n            let unique: boolean = false;\r\n            switch (this.tt) {\r\n                case TokenType.keywordColumn:\r\n                    this.parseAddColumn(node);\r\n                    break;\r\n                case TokenType.keywordPrimary:\r\n                    this.parseAddPrimaryKey(node);\r\n                    break;\r\n                case TokenType.keywordUnique:\r\n                    this.nextToken();\r\n                    unique = true;\r\n                    this.expect([TokenType.keywordIndex, TokenType.keywordKey], false);\r\n                case TokenType.keywordKey:\r\n                case TokenType.keywordIndex:\r\n                    this.parseAddIndex(node, unique);\r\n                    break;\r\n                case TokenType.keywordModify:\r\n                    this.parseModifyColumn(node);\r\n                    break;\r\n                case TokenType.keywordConstraint:\r\n                    this.parseAddConstraint(node);\r\n                    break;\r\n            }\r\n        } while (this.tt == TokenType.comma);\r\n    }\r\n\r\n    parseAddConstraint(node: AlterTableNode) {\r\n        this.nextToken(); // skip \"constraint\"\r\n        if (!this.expect(TokenType.identifier)) return;\r\n\r\n        if (this.comesToken(TokenType.keywordForeign)) {\r\n            let fki = this.parseForeignKeyDefinition();\r\n            if (fki != null) {\r\n                if (node.foreignKeys == null) node.foreignKeys = [];\r\n                node.foreignKeys.push(fki);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    parseForeignKeyDefinition(): ForeignKeyInfo {\r\n        let fki: ForeignKeyInfo = { column: \"\", referencesTable: \"\", referencesColumn: \"\", referencesPosition: this.getCurrentPosition() };\r\n        if (!this.expect(TokenType.keywordForeign)) return;\r\n        if (!this.expect(TokenType.keywordKey)) return;\r\n        if (!this.expect(TokenType.leftBracket)) return;\r\n\r\n        if (!this.comesToken(TokenType.identifier)) {\r\n            this.pushError(\"Der Bezeichner der Fremdschlüsselspalte wird erwartet.\");\r\n            return;\r\n        }\r\n\r\n        fki.column = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        if (!this.expect(TokenType.rightBracket)) return;\r\n        this.parseReferences(fki);\r\n    }\r\n\r\n    parseReferences(fki: ForeignKeyInfo) {\r\n\r\n        if (!this.expect(TokenType.keywordReferences)) return;\r\n\r\n        this.addCompletionHintHere(false, true, []);\r\n\r\n        if (!this.comesToken(TokenType.identifier)) {\r\n            this.pushError(\"Der Bezeichner der referenzierten Tabelle wird erwartet.\");\r\n            return;\r\n        }\r\n\r\n        fki.referencesTable = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        let pos0 = this.lastToken.position;\r\n        let pos1 = this.getCurrentPosition();\r\n        this.module.addCompletionHint(this.getEndOfPosition(pos0), pos1, fki.referencesTable, false, []);\r\n\r\n\r\n        if (!this.expect(TokenType.leftBracket)) return;\r\n        if (!this.comesToken(TokenType.identifier)) {\r\n            this.pushError(\"Der Bezeichner der referenzierten Spalte wird erwartet.\");\r\n            return;\r\n        }\r\n\r\n        fki.referencesColumn = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        if (!this.expect(TokenType.rightBracket)) return;\r\n\r\n        if (this.tt == TokenType.keywordOn) {\r\n            this.nextToken();\r\n            if (this.expect(TokenType.keywordDelete, true)) {\r\n                switch (this.tt) {\r\n                    //@ts-ignore\r\n                    case TokenType.keywordCascade:\r\n                    //@ts-ignore\r\n                    case TokenType.keywordRestrict:\r\n                        fki.onDelete = <string>this.cct.value;\r\n                        this.nextToken();\r\n                        return;\r\n                    //@ts-ignore\r\n                    case TokenType.keywordSet:\r\n                        fki.onDelete = \"set \";\r\n                        this.nextToken();\r\n                        if ([TokenType.keywordNull, TokenType.keywordDefault].indexOf(this.tt) >= 0) {\r\n                            this.nextToken();\r\n                            fki.onDelete += this.cct.value;\r\n                        } else {\r\n                            this.pushError(\"Nach 'on delete set' wird 'null' oder 'default' erwartet.\");\r\n                        }\r\n                        return;\r\n                    //@ts-ignore\r\n                    case TokenType.keywordNo:\r\n                        this.nextToken();\r\n                        if (this.expect(TokenType.keywordAction), true) {\r\n                            fki.onDelete = \"no action\";\r\n                        }\r\n                        return;\r\n                    default:\r\n                        this.pushError(\"Nach 'on delete' wird 'cascade', 'set null', 'set default' oder 'no action' erwartet.\");\r\n                        return;\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    parseModifyColumn(node: AlterTableNode) {\r\n        this.nextToken();\r\n        let modifyColumnInfo = this.parseColumnDefinition(false);\r\n        if (modifyColumnInfo != null) {\r\n            if (node.modifyColumnInfo == null) node.modifyColumnInfo = [];\r\n            node.modifyColumnInfo.push(modifyColumnInfo);\r\n        }\r\n    }\r\n\r\n    parseAddPrimaryKey(node: AlterTableNode) {\r\n        this.nextToken(); // skip \"primary\"\r\n        node.primaryKeys = [];\r\n        if (this.expect(TokenType.keywordKey, true) && this.expect(TokenType.leftBracket, false)) {\r\n            do {\r\n                this.nextToken();\r\n                if (this.tt == TokenType.identifier) {\r\n                    node.primaryKeys.push(<string>this.cct.value);\r\n                    this.nextToken();\r\n                }\r\n            } while (this.tt == TokenType.comma)\r\n        }\r\n        if (this.expect(TokenType.rightBracket, true)) {\r\n            node.kind = \"omittedKind\";\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    parseAddIndex(node: AlterTableNode, unique: boolean) {\r\n        this.nextToken(); // skip \"key\" | \"index\"\r\n\r\n        let index = { index_name: \"\", column: \"\", unique: unique }\r\n        if (this.tt == TokenType.identifier) {\r\n            index.index_name = <string>this.cct.value;\r\n            this.nextToken();\r\n        } else {\r\n            this.pushError(\"Erwartet wird der Bezeichner des Index.\");\r\n            return null;\r\n        }\r\n\r\n        if (!this.expect(TokenType.leftBracket, true)) return null;\r\n        if (this.tt == TokenType.identifier) {\r\n            index.column = <string>this.cct.value;\r\n            this.nextToken();\r\n            if (node.indices == null) node.indices = [];\r\n            node.indices.push(index);\r\n        } else {\r\n            this.pushError(\"Erwartet wird der Bezeichner der Spalte, für die ein Index erstellt werden soll.\");\r\n            return null;\r\n        }\r\n\r\n        node.kind = \"omittedKind\";\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        return null;\r\n    }\r\n\r\n    parseAddColumn(node: AlterTableNode) {\r\n        node.kind = \"addColumn\";\r\n        this.comesToken(TokenType.keywordColumn, true);\r\n        node.columnDefBegin = this.getCurrentPosition();\r\n        node.columnDef = this.parseColumnDefinition(false);\r\n    }\r\n\r\n    parseDropTable(): DropTableNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"Delete\"\r\n\r\n        let node: DropTableNode = {\r\n            type: TokenType.keywordDrop,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null\r\n        }\r\n\r\n        if (!this.expect(TokenType.keywordTable, true)) {\r\n            this.addCompletionHintHere(false, false, [\"table\"], 1);\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1, \"\", \";\");\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n\r\n    }\r\n\r\n    parseDelete(): DeleteNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"Delete\"\r\n\r\n        let node: DeleteNode = {\r\n            type: TokenType.keywordDelete,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n            whereNode: null,\r\n            whereNodeBegin: null,\r\n            whereNodeEnd: null\r\n        }\r\n\r\n        if (!this.expect(TokenType.keywordFrom, true)) {\r\n            this.addCompletionHintHere(false, false, [\"from\"], 1);\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1, \"\", \" where\\n\\t\");\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        this.addCompletionHintHere(false, false, [\"where\\n\\t\"], 1);\r\n        if (this.tt != TokenType.keywordWhere) return node;\r\n\r\n        this.nextToken(); // skip \"where\"\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n\r\n        node.whereNodeBegin = this.getEndOfPosition(this.lastToken.position);\r\n        node.whereNode = this.parseTerm();\r\n        node.whereNodeEnd = this.getCurrentPosition();\r\n\r\n        this.module.addCompletionHint(node.whereNodeBegin, this.getCurrentPositionPlus(3), node.tableIdentifier, false, []);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n        return node;\r\n\r\n    }\r\n\r\n    parseUpdate(): UpdateNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"update\"\r\n\r\n        let node: UpdateNode = {\r\n            type: TokenType.keywordUpdate,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n            columnIdentifiers: [],\r\n            columnIdentifierPositions: [],\r\n            values: [],\r\n            valuePosBegin: [],\r\n            valuePosEnd: [],\r\n            whereNode: null,\r\n            whereNodeBegin: null,\r\n            whereNodeEnd: null\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1, \"\", \" set\\n\\t\");\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        this.addCompletionHintHere(false, false, [\"set\\n\\t\"], 1);\r\n        if (!this.expect(TokenType.keywordSet)) return node;\r\n        let first: boolean = true;\r\n        do {\r\n            this.addCompletionHintHere(node.tableIdentifier, false, first ? [] : ['where'], 1, null, \" = \");\r\n            first = false;\r\n            if (this.tt != TokenType.identifier) {\r\n                this.pushError(\"Hier wird der Bezeichner derjenigen Spalte der Tabelle \" + node.tableIdentifier + \" erwaretet, deren Wert verändert werden soll.\", \"error\");\r\n                break;\r\n            }\r\n\r\n            node.columnIdentifiers.push(<string>this.cct.value);\r\n            node.columnIdentifierPositions.push(this.getCurrentPosition());\r\n            this.nextToken();\r\n\r\n            this.expect(TokenType.equal, true);\r\n\r\n            node.valuePosBegin.push(this.getCurrentPosition());\r\n            node.values.push(this.parseTerm());\r\n            node.valuePosEnd.push(this.getCurrentPosition());\r\n\r\n        } while (this.comesToken(TokenType.comma, true));\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        if (this.lastToken.tt != TokenType.comma || this.comesToken(TokenType.keywordWhere)) {\r\n            if (!this.expect(TokenType.keywordWhere, true)) return node;\r\n\r\n            node.whereNodeBegin = this.getEndOfPosition(this.lastToken.position);\r\n            node.whereNode = this.parseTerm();\r\n            node.whereNodeEnd = this.getCurrentPosition();\r\n\r\n            this.module.addCompletionHint(node.whereNodeBegin, node.whereNodeEnd, node.tableIdentifier, false, []);\r\n\r\n            node.endPosition = this.getCurrentPosition();\r\n        } else {\r\n            this.comesToken(TokenType.keywordWhere, true); // skip where, if present\r\n        }\r\n        return node;\r\n\r\n    }\r\n\r\n    parseCreateTableOrDatabase(): CreateTableNode | OmittedStatementNode {\r\n        switch (this.ct[1].tt) {\r\n            case TokenType.keywordDatabase:\r\n                return this.parseCreateDatabase();\r\n            case TokenType.keywordTable:\r\n                return this.parseCreateTable();\r\n            default:\r\n                this.nextToken();\r\n                this.pushError(\"Nach 'create' wird 'table' erwartet.\");\r\n                this.nextToken();\r\n                return null;\r\n        }\r\n    }\r\n\r\n    parseCreateDatabase(): OmittedStatementNode {\r\n        let node: OmittedStatementNode = {\r\n            type: TokenType.omittedeStatement,\r\n            position: this.getCurrentPosition(),\r\n            endPosition: null,\r\n            symbolTable: null\r\n        }\r\n\r\n        this.nextToken();\r\n        this.pushError(\"Die CREATE-DATABASE-Anweisung wird von der SQLite-Engine nicht unterstützt. Sie können eine neue Datenbank anlegen, indem Sie auf den entsprechenden Button oberhalb der Liste der Datenbanken (linke Seite des Fensters) klicken. Diese Anweisung wird überlesen.\", \"info\");\r\n        while (this.tt != TokenType.semicolon && this.tt != TokenType.endofSourcecode) {\r\n            node.endPosition = this.getEndOfCurrentToken();\r\n            this.nextToken();\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    parseCreateTable(): CreateTableNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"create\"\r\n\r\n        if (!this.expect(TokenType.keywordTable, true)) {\r\n            this.module.addCompletionHint(startPosition, this.getCurrentPositionPlus(3), false, false, [\"table\"]);\r\n        }\r\n\r\n        let ifNotExists: boolean = false;\r\n        if (this.comesToken(TokenType.keywordIf)) {\r\n            this.nextToken();\r\n            this.expect(TokenType.keywordNot, true);\r\n            this.expect(TokenType.keywordExists, true);\r\n            ifNotExists = true;\r\n        }\r\n\r\n        let identifier = \"\";\r\n        if (this.expect(TokenType.identifier, false)) {\r\n            identifier = <string>this.cct.value;\r\n            this.module.addCompletionHint(this.getCurrentPosition(), this.getCurrentPositionPlus(identifier.length + 3), false, false, [\"(\"]);\r\n            this.nextToken();\r\n        }\r\n\r\n        let node: CreateTableNode = {\r\n            type: TokenType.keywordCreate,\r\n            identifier: identifier,\r\n            position: startPosition,\r\n            endPosition: null,\r\n            columnList: [],\r\n            symbolTable: null,\r\n            combinedPrimaryKeyColumns: [],\r\n            foreignKeyInfoList: [],\r\n            ifNotExists: ifNotExists\r\n        }\r\n\r\n        if (!this.expect(TokenType.leftBracket, true)) return node;\r\n\r\n        let primaryKeyAlreadyDefined: boolean = false;\r\n        let first: boolean = true;\r\n\r\n        while (this.tt != TokenType.rightBracket) {\r\n            if (!first) this.expect(TokenType.comma, true);\r\n            first = false;\r\n            switch (this.tt) {\r\n                case TokenType.keywordPrimary:\r\n                    if (primaryKeyAlreadyDefined) this.pushError(\"Je Tabelle darf nur ein einziger Primärschlüssel definiert werden.\", \"error\", this.getCurrentPosition());\r\n                    this.parsePrimaryKeyTerm(primaryKeyAlreadyDefined, node);\r\n                    primaryKeyAlreadyDefined = true;\r\n                    break;\r\n                case TokenType.keywordForeign:\r\n                    let fki = this.parseForeignKeyDefinition();\r\n                    if (fki != null) {\r\n                        node.foreignKeyInfoList.push(fki);\r\n                    }\r\n                    break;\r\n                case TokenType.identifier:\r\n                    let columnNode = this.parseColumnDefinition(primaryKeyAlreadyDefined);\r\n                    node.columnList.push(columnNode);\r\n                    primaryKeyAlreadyDefined = primaryKeyAlreadyDefined || columnNode.isPrimary;\r\n                    break;\r\n                default:\r\n                    this.pushError(TokenTypeReadable[this.tt] + \" wird hier nicht erwartet.\", \"error\");\r\n                    break;\r\n            }\r\n            if (!this.comesToken(TokenType.comma)) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        while ([TokenType.keywordEngine, TokenType.keywordDefault, TokenType.keywordCollate].indexOf(this.tt) >= 0) {\r\n            switch (this.tt) {\r\n                case TokenType.keywordCollate:\r\n                    this.nextToken();\r\n                    this.skip(TokenType.equal);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordEngine:\r\n                    this.nextToken();\r\n                    this.skip(TokenType.equal);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordDefault:\r\n                    this.nextToken();\r\n                    this.expect(TokenType.keywordCharset, true);\r\n                    this.skip(TokenType.equal);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        for (let column of node.columnList) {\r\n            if (column.isAutoIncrement && !(column.isPrimary || node.combinedPrimaryKeyColumns.indexOf(column.identifier) >= 0)) {\r\n                this.pushError(\"autoincrement gibt es nur bei Primärschlüsseln, d.h. es fehlt wahrscheinlich 'primary key'.\", \"warning\", node.position);\r\n            }\r\n        }\r\n\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n\r\n    parsePrimaryKeyTerm(primaryKeyAlreadyDefined: boolean, node: CreateTableNode) {\r\n        if (primaryKeyAlreadyDefined) {\r\n            this.pushError(\"Die Tabelle kann nur einen einzigen Primärschlüssel haben.\");\r\n        }\r\n        this.nextToken(); // skip \"primary\"\r\n        this.expect(TokenType.keywordKey, true);\r\n\r\n        let columns: string[] = node.columnList.map(c => c.identifier);\r\n\r\n        this.addCompletionHintHere(false, false, columns);\r\n        if (this.comesToken(TokenType.leftBracket)) {\r\n            this.addCompletionHintHere(false, false, columns);\r\n            this.nextToken();\r\n\r\n            while (true) {\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    node.combinedPrimaryKeyColumns.push(<string>this.cct.value);\r\n                    this.nextToken();\r\n                    this.addCompletionHintHere(false, false, columns, 1);\r\n                    if (!this.comesToken(TokenType.comma)) {\r\n                        break;\r\n                    } else {\r\n                        this.nextToken();\r\n                        this.addCompletionHintHere(false, false, columns);\r\n                    }\r\n                } else {\r\n                    this.pushError(\"Der Bezeichner einer Spalte wird erwartet. Gefunden wurde: \" + this.cct.value);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        } else {\r\n            this.pushError(\"( erwartet.\");\r\n        }\r\n    }\r\n\r\n    parseColumnDefinition(primaryKeyAlreadyDefined: boolean): CreateTableColumnNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n        let identifier = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        let node: CreateTableColumnNode = {\r\n            type: TokenType.columnDef,\r\n            identifier: identifier,\r\n            isPrimary: false,\r\n            isAutoIncrement: false,\r\n            position: position,\r\n            baseType: null,\r\n            notNull: false\r\n        }\r\n\r\n        this.parseType(node, primaryKeyAlreadyDefined);\r\n\r\n        return node;\r\n\r\n    }\r\n\r\n    addCompletionHintHere(hintColumns: boolean | string, hintTables: boolean, hints: string[], additionalColumns: number = 0, praefix: string = \"\", suffix: string = \"\") {\r\n        let pos0 = this.lastToken.position;\r\n        let pos1 = this.getCurrentPosition();\r\n        pos1.column += 1 + additionalColumns\r\n        this.module.addCompletionHint(this.getEndOfPosition(pos0), pos1, hintColumns, hintTables, hints, null, praefix, suffix);\r\n    }\r\n\r\n    parseType(node: CreateTableColumnNode, primaryKeyAlreadyDefined: boolean) {\r\n\r\n        let datatypes = SQLBaseType.baseTypes.map(type => type.toString());\r\n        this.addCompletionHintHere(false, false, datatypes);\r\n\r\n        if (!this.expect(TokenType.identifier, false)) {\r\n            this.pushError(\"Erwartet wird ein Datentyp. Gefunden wurde: \" + this.cct.value);\r\n            return;\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n\r\n        let type = SQLBaseType.getBaseType(identifier);\r\n        if (type == null) {\r\n            this.pushError(\"Erwartet wird ein Datentyp. Gefunden wurde: \" + identifier);\r\n        }\r\n        node.baseType = type;\r\n        this.nextToken();\r\n\r\n        if (this.tt == TokenType.leftBracket) {\r\n            this.nextToken();\r\n            node.parameters = [];\r\n            //@ts-ignore\r\n            while (this.tt == TokenType.integerConstant) {\r\n                node.parameters.push(<number>this.cct.value);\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.comma) break;\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.integerConstant) {\r\n                    this.pushError(\"Erwartet wird eine ganze Zahl, gefunden wurde: \" + this.cct.value);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (type != null && node.parameters.length > type.parameterDescriptions.length) {\r\n                this.pushError(\"Der Datentyp \" + type.toString() + \" hat höchstens \" + type.parameterDescriptions.length + \" Parameter.\");\r\n            }\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        }\r\n\r\n        // primary key autoincrement\r\n        // references table(column)\r\n        // not null\r\n\r\n        this.addCompletionHintHere(false, false, [\"primary key\", \"references\", \"not null\"]);\r\n\r\n        let alreadySeenKeywords: TokenType[] = [];\r\n\r\n        while ([TokenType.keywordOn, TokenType.keywordCharacter, TokenType.keywordComment, TokenType.keywordAutoincrement, TokenType.keywordKey, TokenType.keywordPrimary, TokenType.keywordNot, TokenType.keywordReferences, TokenType.keywordCollate, TokenType.keywordDefault].indexOf(this.tt) >= 0) {\r\n            if (alreadySeenKeywords.indexOf(this.tt) >= 0) {\r\n                this.pushError('Das Schlüsselwort ' + TokenTypeReadable[this.tt] + \" darf bei der Definition einer Spalte nicht öfters als ein Mal vorkommen.\");\r\n            }\r\n\r\n            alreadySeenKeywords.push(this.tt);\r\n\r\n            switch (this.tt) {\r\n                case TokenType.keywordAutoincrement:\r\n                    this.nextToken();\r\n                    node.isAutoIncrement = true;\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.equal) {\r\n                        this.nextToken();\r\n                        this.expect(TokenType.integerConstant);\r\n                    } else {\r\n                        //@ts-ignore\r\n                        if (this.tt == TokenType.comma && this.ct[1].tt == TokenType.keywordAutoincrement) {\r\n                            this.nextToken();\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.keywordPrimary:\r\n                    if (primaryKeyAlreadyDefined) this.pushError(\"In einer Tabelle darf es nur einen einzigen primary key geben.\");\r\n                    this.nextToken(); // skip \"primary\"\r\n                    if (!this.expect(TokenType.keywordKey, true)) {\r\n                        this.addCompletionHintHere(false, false, [\"key\"]);\r\n                    } else {\r\n                        this.addCompletionHintHere(false, false, [\"autoincrement, \\n\"])\r\n                    }\r\n                    node.isPrimary = true;\r\n                    break;\r\n                case TokenType.keywordReferences:\r\n                    let fki: ForeignKeyInfo = { column: node.identifier, referencesColumn: \"\", referencesTable: \"\", referencesPosition: this.getCurrentPosition() };\r\n                    node.foreignKeyInfo = fki;\r\n                    this.parseReferences(fki);\r\n                    break;\r\n                case TokenType.keywordNot:\r\n                    this.nextToken();\r\n                    if (!this.expect(TokenType.keywordNull, true)) {\r\n                        this.addCompletionHintHere(false, false, [\"null\"]);\r\n                    } else {\r\n                        this.addCompletionHintHere(false, false, [\"references\"]);\r\n                    }\r\n                    node.notNull = true;\r\n                    break;\r\n                case TokenType.keywordCollate:\r\n                    this.nextToken();\r\n                    node.collate = <string>this.cct.value;\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordCharacter:\r\n                    this.nextToken();\r\n                    this.expect(TokenType.keywordSet, true);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordDefault:\r\n                    this.nextToken();\r\n\r\n                    if(this.ct[1].tt == TokenType.leftBracket && this.ct[2].tt == TokenType.rightBracket){\r\n                        this.nextToken();\r\n                        this.nextToken();\r\n                        this.nextToken();\r\n                        break;\r\n                    }\r\n\r\n                    node.defaultValue = <string>this.cct.value;\r\n                    if (typeof this.cct.value == \"string\") {\r\n                        node.defaultValue = \"'\" + node.defaultValue + \"'\";\r\n                    }\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.keywordNull) {\r\n                        this.nextToken();\r\n                        break;\r\n                    } else if ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.stringConstant].indexOf(this.tt) >= 0) {\r\n                        let constantType = SQLBaseType.fromConstantType(this.tt);\r\n                        if (!constantType.canCastTo(type)) {\r\n                            this.pushError(\"Die Konstante hinter 'default' passt nicht zum Datentyp der Spalte.\");\r\n                        }\r\n                        this.nextToken();\r\n                    }\r\n                    break;\r\n                case TokenType.keywordComment:\r\n                    this.nextToken(); // Skip \"comment\"\r\n                    this.expect(TokenType.stringConstant, true);\r\n                    break;\r\n                case TokenType.keywordOn:\r\n                    this.nextToken();\r\n                    this.expect([TokenType.keywordUpdate], true);\r\n                    while(!this.comesToken([TokenType.comma, TokenType.endofSourcecode, TokenType.rightBracket])) this.nextToken();\r\n                    //@ts-ignore\r\n                    if(this.lastToken.tt == TokenType.leftBracket && this.tt == TokenType.rightBracket) this.nextToken();\r\n                    break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    parseInsert(): InsertNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"insert\"\r\n\r\n        this.expect(TokenType.keywordInto, true);\r\n\r\n        let node: InsertNode = {\r\n            type: TokenType.keywordInsert,\r\n            position: startPosition,\r\n            endPosition: this.getCurrentPosition(),\r\n            valuesPosition: null,\r\n            columnsPosition: null,\r\n            symbolTable: null,\r\n            columnList: [],\r\n            values: [],\r\n            table: null\r\n        }\r\n\r\n        if (this.tt == TokenType.identifier) {\r\n            node.table = {\r\n                type: TokenType.table,\r\n                identifier: <string>this.cct.value,\r\n                alias: null,\r\n                position: this.getCurrentPosition()\r\n            }\r\n            node.columnsPosition = { line: node.table.position.line, column: node.table.position.column + node.table.position.length, length: 0 };\r\n            this.nextToken();\r\n        } else {\r\n            this.pushError(\"Hier wird der Bezeichner einer Tabelle erwartet. Gefunden wurde: \" + this.cct.value, \"error\");\r\n        }\r\n\r\n        if (this.tt == TokenType.leftBracket) {\r\n\r\n            this.nextToken();\r\n            let first: boolean = true;\r\n            //@ts-ignore\r\n            while (first || this.tt == TokenType.comma) {\r\n\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.identifier) {\r\n                    node.columnList.push({\r\n                        type: TokenType.identifier,\r\n                        identifier: this.cct.value + \"\",\r\n                        position: this.getCurrentPosition()\r\n                    })\r\n\r\n                } else {\r\n                    this.pushError(\"Erwartet wird der Bezeichner einer Spalte. Gefunden wurde: \" + this.cct.value, \"error\");\r\n                }\r\n                this.nextToken();\r\n            }\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        }\r\n\r\n        node.valuesPosition = this.getCurrentPosition();\r\n        this.expect(TokenType.keywordValues, true);\r\n\r\n        this.parseValueLists(node.values);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n    parseValueLists(values: ConstantNode[][]) {\r\n        let insideListTokens = [TokenType.keywordNull, TokenType.charConstant, TokenType.stringConstant, TokenType.booleanConstant, TokenType.floatingPointConstant, TokenType.integerConstant];\r\n\r\n        let outerFirst: boolean = true;\r\n\r\n        while (outerFirst || this.tt == TokenType.comma) {\r\n            if (!outerFirst) {\r\n                this.nextToken(); // consume comma\r\n            }\r\n            outerFirst = false;\r\n            let leftBracketPosition = this.getCurrentPosition();\r\n            if (!this.expect(TokenType.leftBracket, true)) {\r\n                break;\r\n            }\r\n            let line: ConstantNode[] = [];\r\n            let first: boolean = true;\r\n            //@ts-ignore\r\n            while (first || this.tt == TokenType.comma) {\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n                if (this.tt == TokenType.identifier && this.cct.isDoubleQuotedIdentifier) {\r\n                    this.tt = TokenType.stringConstant\r\n                }\r\n                //@ts-ignore\r\n                if (insideListTokens.indexOf(this.tt) < 0) {\r\n                    this.pushError(\"Erwartet wird eine Konstante oder null. Gefunden wurde: \" + this.cct.value, \"error\");\r\n                    this.nextToken();\r\n                } else {\r\n                    line.push({\r\n                        constantType: this.tt,\r\n                        position: this.getCurrentPosition(),\r\n                        constant: this.cct.value,\r\n                        type: TokenType.constantNode\r\n                    });\r\n                    this.nextToken();\r\n                }\r\n            }\r\n            this.expect(TokenType.rightBracket, true);\r\n            if (line.length == 0) {\r\n                this.pushError(\"Eine Zeile kann nur dann in die Tabelle eingefügt werden, wenn sie mindestens einen Spaltenwert besitzt.\", \"error\", leftBracketPosition);\r\n            } else {\r\n                values.push(line);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    parseConstant(): ConstantNode {\r\n        let constantNode: ConstantNode = {\r\n            constantType: this.tt,\r\n            position: this.getCurrentPosition(),\r\n            constant: this.cct.value,\r\n            type: TokenType.constantNode\r\n        }\r\n        this.nextToken();\r\n\r\n        return constantNode;\r\n    }\r\n\r\n    parseSelect(): SelectNode {\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"select\"\r\n\r\n        let columnListStart: TextPosition = {\r\n            line: startPosition.line,\r\n            column: startPosition.column + 6,\r\n            length: 1\r\n        };\r\n\r\n        let node: SelectNode = {\r\n            type: TokenType.keywordSelect,\r\n            position: startPosition,\r\n            endPosition: this.getCurrentPosition(),\r\n            symbolTable: null,\r\n            columnList: [],\r\n            fromNode: null,\r\n            whereNode: null,\r\n            parentStatement: null\r\n        }\r\n\r\n        node.columnList = this.parseColumnList([TokenType.keywordFrom], true);\r\n\r\n        let columnListKeywordArray = [\"distinct\", \"as\", \"*\"];\r\n        if (node.columnList.findIndex(c => c.type == TokenType.allColumns) >= 0) {\r\n            columnListKeywordArray.pop();\r\n        }\r\n\r\n        this.module.addCompletionHint(columnListStart, this.getCurrentPositionPlus(1), true, true, columnListKeywordArray)\r\n\r\n        // parse from ...\r\n        if (!this.expect(TokenType.keywordFrom, true)) {\r\n            columnListKeywordArray.unshift(\"from\");\r\n            return null;\r\n        }\r\n\r\n        node.fromStartPosition = { line: this.lastToken.position.line, column: this.lastToken.position.column + this.lastToken.position.length, length: 0 };\r\n\r\n        let dontHint: string[] = [];\r\n        node.fromNode = this.parseTableOrSubQuery(dontHint);\r\n\r\n        let fromListKeywordArray = [\"join\", \"left\", \"right\", \"inner\", \"outer\", \"natural\", \"on\", \"as\", \", \"];\r\n        fromListKeywordArray.splice(fromListKeywordArray.indexOf(this.lastToken.value + \"\"), 1);\r\n\r\n        let hintEndPosition = this.getCurrentPositionPlus(2);\r\n        if (this.comesToken(TokenType.semicolon)) {\r\n            hintEndPosition = this.getCurrentPosition();\r\n        }\r\n\r\n        this.module.addCompletionHint(node.fromStartPosition, hintEndPosition, false, true, fromListKeywordArray, dontHint)\r\n        node.fromEndPosition = this.getCurrentPosition();\r\n\r\n        // parse where...\r\n\r\n        let whereKeywordArray = [\"like\"];\r\n        if (this.tt == TokenType.keywordWhere) {\r\n            let position = this.getCurrentPosition();\r\n            let whereStart = this.getCurrentPosition();\r\n            this.nextToken();\r\n            node.whereNode = this.parseTerm();\r\n            this.module.addCompletionHint(whereStart, this.getCurrentPositionPlus(4), true, true, whereKeywordArray)\r\n            // if (node.whereNode != null) node.whereNode.position = position;\r\n        } else {\r\n            fromListKeywordArray.push(\"where\");\r\n        }\r\n\r\n        let groupKeywordArray = [];\r\n        if (this.tt == TokenType.keywordGroup) {\r\n            let groupStart = this.getCurrentPosition();\r\n            node.groupByNode = this.parseGroupBy();\r\n            this.module.addCompletionHint(groupStart, this.getCurrentPosition(), true, true, groupKeywordArray);\r\n        } else {\r\n            whereKeywordArray.push(\"group by\");\r\n        }\r\n\r\n        if (this.tt == TokenType.keywordOrder) {\r\n            let orderStart = this.getCurrentPosition();\r\n            node.orderByNode = this.parseOrderBy();\r\n            this.module.addCompletionHint(orderStart, this.getCurrentPosition(), true, true, [\"asc\", \"desc\"]);\r\n        } else {\r\n            whereKeywordArray.push(\"order by\");\r\n            groupKeywordArray.push(\"order by\");\r\n        }\r\n\r\n        if (this.tt == TokenType.keywordLimit) {\r\n            node.limitNode = this.parseLimit();\r\n        }\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n        node.endPosition.column += 3;\r\n\r\n        return node;\r\n    }\r\n\r\n    parseLimit(): LimitNode {\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n        let numberOfRows: TermNode = this.parseTerm();\r\n        let ln: LimitNode = {\r\n            type: TokenType.keywordLimit,\r\n            position: position,\r\n            numberOfRows: numberOfRows\r\n        }\r\n        if (this.tt == TokenType.keywordOffset) {\r\n            this.nextToken();\r\n            ln.offset = this.parseTerm();\r\n        }\r\n        return ln;\r\n    }\r\n\r\n    parseGroupBy(): GroupByNode {\r\n        let position = this.getCurrentPosition();\r\n        this.expect(TokenType.keywordGroup, true);\r\n        this.expect(TokenType.keywordBy, true);\r\n        let gbn: GroupByNode = {\r\n            type: TokenType.keywordGroup,\r\n            columnList: [],\r\n            position: position\r\n        }\r\n        let tokenTypesAfterGroupBy = [TokenType.keywordHaving, TokenType.keywordSelect, TokenType.keywordOrder, TokenType.keywordLimit, TokenType.rightBracket, TokenType.semicolon];\r\n        gbn.columnList = this.parseColumnList(tokenTypesAfterGroupBy, false).map(columnNode => columnNode.term);\r\n        if (this.tt == TokenType.keywordHaving) {\r\n            this.nextToken();\r\n            gbn.having = this.parseTerm();\r\n        }\r\n        return gbn;\r\n    }\r\n\r\n    parseOrderBy(): OrderByNode[] {\r\n        this.expect(TokenType.keywordOrder, true);\r\n        this.expect(TokenType.keywordBy, true);\r\n\r\n        let obnList: OrderByNode[] = [];\r\n        let first: boolean = true;\r\n\r\n        do {\r\n            if (first) {\r\n                first = false;\r\n            } else {\r\n                this.expect(TokenType.comma, true);\r\n            }\r\n            let column: TermNode = this.parseTerm();\r\n            let obn: OrderByNode = {\r\n                type: TokenType.keywordOrder,\r\n                position: this.getCurrentPosition(),\r\n                column: column\r\n            }\r\n            if ([TokenType.keywordAscending, TokenType.keywordDescending].indexOf(this.tt) >= 0) this.nextToken();\r\n            if (this.tt == TokenType.keywordNulls) {\r\n                this.nextToken();\r\n                this.expect([TokenType.keywordFirst, TokenType.keywordLast], true);\r\n            }\r\n            obnList.push(obn);\r\n        } while (this.tt == TokenType.comma);\r\n\r\n        return obnList;\r\n    }\r\n\r\n    parseTableOrSubQuery(dontHint: string[]): TableOrSubqueryNode {\r\n\r\n        let leftSide: TableOrSubqueryNode = this.parseAtomicTableOrSubQuery(dontHint);\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        while (this.parseJoinOperator()) {\r\n\r\n            let rightSide: TableOrSubqueryNode = this.parseAtomicTableOrSubQuery(dontHint);\r\n\r\n            leftSide = {\r\n                type: TokenType.keywordJoin,\r\n                firstOperand: leftSide,\r\n                secondOperand: rightSide,\r\n                position: position,\r\n            }\r\n\r\n            if (this.tt == TokenType.keywordOn) {\r\n                leftSide.on = this.parseTerm();\r\n            }\r\n\r\n        }\r\n\r\n        return leftSide;\r\n\r\n    }\r\n\r\n    parseJoinOperator(): boolean {\r\n        if (this.tt == TokenType.comma) {\r\n            this.nextToken();\r\n            return true;\r\n        }\r\n        if (this.tt == TokenType.keywordNatural) this.nextToken();\r\n        switch (this.tt) {\r\n            case TokenType.keywordLeft:\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.keywordOuter) this.nextToken();\r\n                return this.expect(TokenType.keywordJoin, true);\r\n            case TokenType.keywordInner:\r\n            case TokenType.keywordCross:\r\n                this.nextToken();\r\n                return this.expect(TokenType.keywordJoin, true);\r\n            case TokenType.keywordJoin:\r\n                this.nextToken();\r\n                return true;\r\n            default: return false;\r\n        }\r\n    }\r\n\r\n    parseAtomicTableOrSubQuery(dontHint: string[]): TableOrSubqueryNode {\r\n\r\n        if (!this.expect([TokenType.identifier, TokenType.leftBracket], false)) {\r\n            return null;\r\n        }\r\n\r\n        if (this.tt == TokenType.leftBracket) {\r\n            this.nextToken();\r\n            let ret: TableOrSubqueryNode;\r\n            //@ts-ignore\r\n            if (this.tt == TokenType.keywordSelect) {\r\n                let position = this.getCurrentPosition();\r\n                let selectStatement = this.parseSelect();\r\n                ret = {\r\n                    type: TokenType.subquery,\r\n                    alias: null,\r\n                    position: position,\r\n                    query: selectStatement\r\n                }\r\n            } else {\r\n                ret = this.parseTableOrSubQuery(dontHint);\r\n            }\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n\r\n            //@ts-ignore\r\n            if (this.tt == TokenType.keywordAs && ret.type == TokenType.subquery) {\r\n                this.nextToken();\r\n                if (this.expect(TokenType.identifier, false)) {\r\n                    ret.alias = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    dontHint.push(ret.alias);\r\n                }\r\n            }\r\n\r\n            return ret;\r\n        }\r\n\r\n        if (this.tt == TokenType.identifier) {\r\n            let node: TableNode = {\r\n                type: TokenType.table,\r\n                identifier: <string>this.cct.value,\r\n                alias: null,\r\n                position: this.getCurrentPosition()\r\n            }\r\n            dontHint.push(node.identifier);\r\n            this.nextToken();\r\n\r\n            //@ts-ignore\r\n            if (this.tt == TokenType.keywordAs) {\r\n                this.nextToken();\r\n                if (this.expect(TokenType.identifier, false)) {\r\n                    node.alias = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    dontHint.push(node.alias);\r\n                }\r\n\r\n            }\r\n\r\n            return node;\r\n        }\r\n\r\n    }\r\n\r\n    parseColumnList(tokenTypesAfterListEnd: TokenType[], allowAliases: boolean): ColumnNode[] {\r\n        let columns: ColumnNode[] = [];\r\n\r\n        while ([TokenType.identifier, TokenType.multiplication, TokenType.leftBracket].indexOf(this.tt) >= 0) {\r\n            if (this.tt == TokenType.multiplication) {\r\n                columns.push({\r\n                    term: null,\r\n                    alias: null,\r\n                    position: this.getCurrentPosition(),\r\n                    type: TokenType.allColumns\r\n                });\r\n                this.nextToken();\r\n            } else {\r\n                let columnTerm = this.parseTerm();\r\n                if (columnTerm != null) {\r\n                    let column: ColumnNode = {\r\n                        type: TokenType.column,\r\n                        term: columnTerm,\r\n                        position: columnTerm.position\r\n                    }\r\n                    columns.push(column);\r\n                    if (this.comesToken(TokenType.keywordAs)) {\r\n                        this.nextToken();\r\n                        if (this.expect(TokenType.identifier, false)) {\r\n                            column.alias = \"\" + this.cct.value;\r\n                        }\r\n                        this.nextToken();\r\n                    }\r\n                }\r\n            }\r\n            if (tokenTypesAfterListEnd.indexOf(this.tt) >= 0) {\r\n                break;\r\n            }\r\n            this.expect(TokenType.comma, true);\r\n        }\r\n\r\n        if (columns.length == 0) {\r\n            this.pushError(\"Es fehlt die kommaseparierte Liste der gewünschten Spalten.\", \"error\");\r\n        }\r\n\r\n        return columns;\r\n    }\r\n\r\n\r\n    parseTerm(): TermNode {\r\n        return this.parseTermBinary(0);\r\n    }\r\n\r\n    parseTermBinary(precedence: number): TermNode {\r\n\r\n        let left: TermNode;\r\n        if (precedence < Parser.operatorPrecedence.length - 1) {\r\n            left = this.parseTermBinary(precedence + 1);\r\n        } else {\r\n            left = this.parseUnary();\r\n        }\r\n\r\n        let operators = Parser.operatorPrecedence[precedence];\r\n\r\n        if (left == null || operators.indexOf(this.tt) < 0) {\r\n            return left;\r\n        }\r\n\r\n        let first = true;\r\n\r\n        while (first || operators.indexOf(this.tt) >= 0) {\r\n\r\n            let operator: TokenType = this.tt;\r\n\r\n            first = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            this.nextToken();\r\n            let right: TermNode;\r\n            if (precedence < Parser.operatorPrecedence.length - 1) {\r\n                right = this.parseTermBinary(precedence + 1);\r\n            } else {\r\n                right = this.parseUnary();\r\n            }\r\n\r\n            left = {\r\n                type: TokenType.binaryOp,\r\n                position: position,\r\n                operator: operator,\r\n                firstOperand: left,\r\n                secondOperand: right\r\n            };\r\n\r\n\r\n        }\r\n\r\n        return left;\r\n\r\n    }\r\n\r\n\r\n    // -, not, this, super, a.b.c[][].d, a.b(), b() (== this.b()), super.b(), super()\r\n    parseUnary(): TermNode {\r\n\r\n        let term: TermNode;\r\n        let position: TextPosition = this.getCurrentPosition();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n                return this.parseBracket();\r\n            case TokenType.minus:\r\n                // case TokenType.not:\r\n                position = position;\r\n                let tt1 = this.tt;\r\n                this.nextToken();\r\n                term = this.parseUnary();\r\n\r\n                return {\r\n                    type: TokenType.unaryOp,\r\n                    position: position,\r\n                    operand: term,\r\n                    operator: tt1\r\n                };\r\n\r\n            case TokenType.integerConstant:\r\n            case TokenType.charConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n                term = {\r\n                    type: TokenType.constantNode,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: this.tt,\r\n                    constant: this.cct.value\r\n                };\r\n                let isStringConstant = this.tt == TokenType.stringConstant;\r\n                this.nextToken();\r\n\r\n                if (isStringConstant) return this.parseDotOrArrayChains(term);\r\n\r\n                return term;\r\n            case TokenType.identifier: // attribute of current class or local variable\r\n\r\n                let identifier1 = <string>this.cct.value;\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    let rightBracketPosition = parameters.rightBracketPosition;\r\n\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position1,\r\n                        rightBracketPosition: rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        identifier: identifier1,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.identifier,\r\n                        identifier: identifier1,\r\n                        position: position\r\n                    }\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.dot) {\r\n                        let position = this.getCurrentPosition();\r\n                        this.nextToken();\r\n                        this.expect(TokenType.identifier, false);\r\n                        let secondIdentifier: IdentifierNode = {\r\n                            type: TokenType.identifier,\r\n                            identifier: <string>this.cct.value,\r\n                            position: this.getCurrentPosition()\r\n                        }\r\n                        this.nextToken();\r\n                        term = {\r\n                            type: TokenType.dot,\r\n                            identifierLeft: <IdentifierNode>term,\r\n                            identifierRight: secondIdentifier,\r\n                            position: position\r\n                        }\r\n\r\n                    } else if ([TokenType.isNull, TokenType.isNotNull].indexOf(this.tt) >= 0) {\r\n                        term = {\r\n                            type: TokenType.unaryOp,\r\n                            operand: term,\r\n                            operator: this.tt,\r\n                            position: position\r\n                        };\r\n                        this.nextToken();\r\n                    }\r\n                }\r\n\r\n                return term;\r\n            default:\r\n                this.pushError(\"Erwartet wird eine Variable, ein Methodenaufruf oder eine Konstante. Gefunden wurde: \" + this.cct.value);\r\n                return null;\r\n        }\r\n\r\n    }\r\n\r\n    parseList(): ListNode {\r\n        let node: ListNode = {\r\n            type: TokenType.list,\r\n            position: this.getCurrentPosition(),\r\n            elements: []\r\n        }\r\n\r\n        let constantTypes = [TokenType.charConstant, TokenType.stringConstant, TokenType.booleanConstant, TokenType.floatingPointConstant, TokenType.integerConstant];\r\n\r\n        while (constantTypes.indexOf(this.tt) >= 0) {\r\n            node.elements.push({\r\n                type: TokenType.constantNode,\r\n                constant: this.cct.value,\r\n                constantType: this.tt,\r\n                position: this.cct.position\r\n            });\r\n            this.nextToken();\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            }\r\n            this.nextToken();\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    parseBracket(): TermNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n        let tokenBeforeBracket = this.lastToken;\r\n        this.nextToken(); // consume (\r\n\r\n        if (this.tt == TokenType.keywordSelect) {\r\n            let selectNode = this.parseSelect();\r\n            this.expect(TokenType.rightBracket, true);\r\n            return selectNode;\r\n        } else if ([TokenType.comma, TokenType.rightBracket].indexOf(this.ct[1].tt) >= 0 &&\r\n            [TokenType.keywordIn, TokenType.keywordNotIn].indexOf(tokenBeforeBracket.tt) >= 0) {\r\n            let listNode = this.parseList();\r\n            this.expect(TokenType.rightBracket, true);\r\n            return listNode;\r\n        } else {\r\n            let term = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            let bracketsNode: BracketsNode = {\r\n                position: rightBracketPosition,\r\n                type: TokenType.rightBracket,\r\n                termInsideBrackets: term\r\n            }\r\n\r\n\r\n            return bracketsNode;\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    parseMethodCallParameters(): { rightBracketPosition: TextPosition, nodes: TermNode[], commaPositions: TextPosition[] } {\r\n        // Assumption: current token is (        \r\n        this.nextToken();\r\n        if (this.tt == TokenType.rightBracket) {\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n            return { rightBracketPosition: rightBracketPosition, nodes: [], commaPositions: [] };\r\n        }\r\n\r\n        let parameters: TermNode[] = [];\r\n        let commaPositions: TextPosition[] = [];\r\n\r\n        while (true) {\r\n            let pos = this.pos;\r\n\r\n            if (this.tt == TokenType.multiplication) {\r\n                this.nextToken();\r\n                parameters.push({\r\n                    type: TokenType.allColumns,\r\n                    position: this.getCurrentPosition(),\r\n                });\r\n            } else {\r\n                let parameter = this.parseTerm();\r\n                if (parameter != null) {\r\n                    parameters.push(parameter);\r\n                }\r\n            }\r\n\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            } else {\r\n                commaPositions.push(this.getCurrentPosition());\r\n                this.nextToken(); // consume comma\r\n            }\r\n\r\n            // emergency-step:\r\n            if (this.pos == pos) {\r\n                this.nextToken();\r\n            }\r\n\r\n        }\r\n\r\n        let position = this.getCurrentPosition();\r\n        let rightBracketFound = this.expect(TokenType.rightBracket, true);\r\n\r\n        return { rightBracketPosition: rightBracketFound ? position : null, nodes: parameters, commaPositions: commaPositions };\r\n\r\n    }\r\n\r\n    parseDotOrArrayChains(term: TermNode): TermNode {\r\n\r\n        if (term == null) return null;\r\n\r\n        while (this.comesToken([TokenType.dot, TokenType.leftSquareBracket])) {\r\n            if (this.tt == TokenType.dot) {\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.identifier) {\r\n                    this.pushError(\"Erwartet wird der Bezeichner eines Attributs oder einer Methode, gefunden wurde: \" + this.cct.value);\r\n                    return term;\r\n                }\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position,\r\n                        rightBracketPosition: parameters.rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        identifier: identifier,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                }\r\n                // else {\r\n                //     term = {\r\n                //         type: TokenType.pushAttribute,\r\n                //         position: position,\r\n                //         identifier: identifier,\r\n                //         object: term\r\n                //     }\r\n                // }\r\n\r\n            }\r\n        }\r\n\r\n        return term;\r\n    }\r\n\r\n\r\n}","import { ColumnStructure, TableStructure } from \"../../tools/DatabaseTools.js\";\nimport { SQLType, SQLBaseType, SQLDerivedType } from \"./SQLTypes.js\";\n\n\nexport class Column {\n\n    references: Column;\n    fromColumnStructure?: ColumnStructure;\n    notNull: boolean;\n\n    constructor(public identifier: string, public type: SQLType, public table: Table, public isPrimaryKey: boolean, public isNullable: boolean, public defaultValue: string, public isAutoIncrement){\n\n    }\n\n    static fromColumnStructure(cs: ColumnStructure, table: Table): Column {\n\n        let regex1 = /^(\\w*) *(?:\\((.*)\\))?.*$/;\n\n        let typeMatch1 = cs.completeTypeSQL.match(regex1);\n        let baseTypeIdentifier: string = typeMatch1[1];\n        let commaSeparatedParameters: string = typeMatch1[2];\n\n        let parameterValues: number[] = [];\n        if(commaSeparatedParameters != null){\n            parameterValues = commaSeparatedParameters.split(',').map(v => parseInt(v.trim()));           \n        }\n\n        let type: SQLType = SQLBaseType.getBaseType(baseTypeIdentifier);\n        if(parameterValues.length > 0 && type != null){\n            type = new SQLDerivedType(<SQLBaseType>type, parameterValues);\n        }\n\n        let column = new Column(cs.name, type, table, cs.isPrimaryKey, !cs.isPrimaryKey, cs.defaultValue, cs.isAutoIncrement);\n        column.notNull = cs.notNull;\n        \n        column.fromColumnStructure = cs;\n\n        return column;\n    }\n\n}\n\nexport class Table {\n    \n    public columns: Column[] = [];\n\n    public size: number;\n\n    constructor(public identifier: string){\n\n    }\n\n    private static fromTableStructure(ts: TableStructure): Table {\n        let table: Table = new Table(ts.name);\n        table.columns = ts.columns.map( column => Column.fromColumnStructure(column, table));\n        table.size = ts.size;\n        return table;\n    }\n\n    static fromTableStructureList(tsList: TableStructure[]): Table[]{\n\n        if(tsList == null) tsList = [];\n\n        let tables: Table[] = tsList.map(ts => Table.fromTableStructure(ts));\n\n        let columnStructureToColumnMap: Map<ColumnStructure, Column> = new Map();\n        for(let table of tables){\n            for(let column of table.columns){\n                columnStructureToColumnMap.set(column.fromColumnStructure, column);\n            }\n        }\n\n        for(let table of tables){\n            for(let column of table.columns){\n                let referencedCs = column.fromColumnStructure.references;\n                if(referencedCs != null){\n                    let referencedColumn = columnStructureToColumnMap.get(referencedCs);\n                    column.references = referencedColumn;\n                }\n            }\n        }\n\n        return tables;\n    }\n\n}","import { DatabaseStructure } from \"../../tools/DatabaseTools.js\";\r\nimport { TextPosition } from \"../lexer/Token.js\";\r\nimport { Table, Column } from \"./SQLTable.js\";\r\n\r\nexport type Symbol = {\r\n    identifier: string;\r\n    table?: Table;\r\n    column?: Column;\r\n    tableAlias?: string;\r\n    posOfDefinition: TextPosition;\r\n    referencedOnPositions: TextPosition[];\r\n}\r\n\r\nexport class SymbolTable {\r\n    parent: SymbolTable; // SymbolTable of parent scope\r\n    positionFrom: TextPosition;\r\n    positionTo: TextPosition;\r\n\r\n    childSymbolTables: SymbolTable[] = [];\r\n\r\n    private symbols: Map<string, Symbol[]> = new Map();\r\n    symbolList: Symbol[] = [];\r\n\r\n    constructor(parentSymbolTable: SymbolTable, positionFrom: TextPosition, positionTo: TextPosition) {\r\n\r\n        this.parent = parentSymbolTable;\r\n\r\n        this.positionFrom = positionFrom;\r\n        this.positionTo = positionTo;\r\n\r\n\r\n        if (this.parent != null) {\r\n            this.parent.childSymbolTables.push(this);\r\n        }\r\n    }\r\n\r\n    extractDatabaseStructure(databaseStructure: DatabaseStructure) {\r\n        for (let table of Table.fromTableStructureList(databaseStructure?.tables)) {\r\n\r\n            this.storeTableSymbols(table);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    storeTableSymbols(table: Table){\r\n        this.storeSymbol({\r\n            identifier: table.identifier,\r\n            posOfDefinition: null,\r\n            referencedOnPositions: [],\r\n            table: table\r\n        });\r\n\r\n        for (let column of table.columns) {\r\n            this.storeSymbol({\r\n                identifier: column.identifier,\r\n                posOfDefinition: null,\r\n                referencedOnPositions: [],\r\n                column: column\r\n            });\r\n        }\r\n    }\r\n\r\n    storeSymbol(symbol: Symbol) {\r\n        let list: Symbol[] = this.symbols.get(symbol.identifier);\r\n        if (list == null) {\r\n            list = [symbol];\r\n            this.symbols.set(symbol.identifier.toLowerCase(), list);\r\n        } else {\r\n            list.push(symbol);\r\n        }\r\n        this.symbolList.push(symbol);\r\n    }\r\n\r\n    findTableAtPosition(line: number, column: number): SymbolTable {\r\n\r\n        if (!this.containsPosition(line, column)) {\r\n            return null;\r\n        }\r\n\r\n        let shortestSymbolTableContainingPosition = null;\r\n        let shortestPosition = 10000000;\r\n\r\n        for (let st of this.childSymbolTables) {\r\n            if (st.containsPosition(line, column)) {\r\n                let st1 = st.findTableAtPosition(line, column);\r\n                if (st1.positionTo.line - st1.positionFrom.line < shortestPosition) {\r\n                    shortestSymbolTableContainingPosition = st1;\r\n                    shortestPosition = st1.positionTo.line - st1.positionFrom.line;\r\n                }\r\n            }\r\n            // if(st.containsPosition(line, column) && st.positionTo.line - st.positionFrom.line < shortestPosition){\r\n            //     shortestSymbolTableContainingPosition = st;\r\n            //     shortestPosition = st.positionTo.line - st.positionFrom.line;\r\n            // }\r\n        }\r\n\r\n        if (shortestSymbolTableContainingPosition != null) {\r\n            return shortestSymbolTableContainingPosition;\r\n        } else {\r\n            return this;\r\n        }\r\n\r\n    }\r\n\r\n    containsPosition(line: number, column: number) {\r\n        if (line < this.positionFrom.line || line > this.positionTo.line) {\r\n            return false;\r\n        }\r\n\r\n        if (line == this.positionFrom.line && column < this.positionFrom.column) return false;\r\n        if (line == this.positionTo.line && column > this.positionTo.column + 1) return false;\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    findTable(identifier: string): Table {\r\n        let tables = this.findTables(identifier);\r\n        if(tables.length == 0) return null;\r\n        return tables[0].table;\r\n    }\r\n\r\n    findTables(identifier: string): Symbol[] {\r\n\r\n        let symbolTable: SymbolTable = this;\r\n        while(symbolTable != null){\r\n\r\n            let symbols = symbolTable.symbols.get(identifier.toLowerCase());\r\n            if(symbols != null){\r\n                symbols = symbols.filter(s => s.table != null);\r\n                if(symbols.length > 0){\r\n                    return symbols;\r\n                }\r\n            }\r\n\r\n            symbolTable = symbolTable.parent;\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    findColumn(identifier: string): Symbol[] {\r\n\r\n        let symbolTable: SymbolTable = this;\r\n        while(symbolTable != null){\r\n\r\n            let symbols = symbolTable.symbols.get(identifier.toLowerCase());\r\n            if(symbols != null){\r\n                symbols = symbols.filter(s => s.column != null);\r\n                if(symbols.length > 0){\r\n                    return symbols;\r\n                }\r\n            }\r\n\r\n            symbolTable = symbolTable.parent;\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { SQLBaseType, SQLType } from \"./SQLTypes.js\";\r\n\r\nexport class SQLMethodParameter {\r\n    type: SQLType;\r\n    constructor(public identifier: string, type: string){\r\n        this.type = SQLBaseType.getBaseType(type);\r\n    }\r\n}\r\n\r\nexport class SQLMethod {\r\n    acceptsStarParameter: boolean = false;\r\n    public returnType: SQLType;\r\n    constructor(public identifier: string, public isAggregating: boolean, returnType: string, public parameters: SQLMethodParameter[]){\r\n        this.returnType = SQLBaseType.getBaseType(returnType);\r\n    }\r\n\r\n}\r\n\r\nexport class SQLMethodStore {\r\n\r\n    static instance: SQLMethodStore;\r\n    public methods: SQLMethod[] = [];\r\n\r\n    static getInstance():SQLMethodStore {\r\n        if(this.instance == null){\r\n            this.instance = new SQLMethodStore();\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    constructor(){\r\n        this.pushOneParameterMethod(\"max\" ,\"integer\", \"integer\");\r\n        this.pushOneParameterMethod(\"max\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"min\" ,\"integer\", \"integer\");\r\n        this.pushOneParameterMethod(\"min\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"avg\" ,\"integer\", \"integer\");\r\n        this.pushOneParameterMethod(\"avg\" ,\"float\", \"float\");\r\n\r\n        let countMethod = new SQLMethod(\"count\", true, \"integer\", [new SQLMethodParameter(\"spalte\", \"text\")]);\r\n        countMethod.acceptsStarParameter = true;\r\n        this.methods.push(countMethod);\r\n    }\r\n    \r\n    getMethods(identifier: string){\r\n        return this.methods.filter(m => m.identifier == identifier.toLowerCase());\r\n    }\r\n\r\n\r\n    pushOneParameterMethod(identifier: string, returnType: string, parameterType: string){\r\n        this.methods.push(new SQLMethod(identifier, true, returnType, [new SQLMethodParameter(\"spalte\", parameterType)]));\r\n\r\n    }\r\n}","export function hash(s: string){\r\n    let hash: number = 0;\r\n    let chr: number;\r\n    for (let i = 0; i < s.length; i++) {\r\n      chr   = s.charCodeAt(i);\r\n      hash  = ((hash << 5) - hash) + chr;\r\n      hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n\r\nexport function escapeHtml(unsafe: string): string {\r\n  return unsafe\r\n      .replace(/['\"]+/g, '')\r\n       .replace(/&/g, \"&amp;\")\r\n       .replace(/</g, \"&lt;\")\r\n       .replace(/>/g, \"&gt;\")\r\n       .replace(/\"/g, \"&quot;\")\r\n       .replace(/'/g, \"&#039;\");\r\n}\r\n\r\nexport function dateToString(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth() + 1)}.${date.getFullYear()}, ${twoDez(date.getHours())}:${twoDez(date.getMinutes())}`;\r\n}\r\n\r\nexport function dateToStringWithoutTime(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth())}.${date.getFullYear()}`;\r\n}\r\n\r\nfunction twoDez(z: number):string {\r\n  if(z < 10) return \"0\" + z;\r\n  return \"\" + z;\r\n}\r\n\r\nexport function stringToDate(text: string): Date {\r\n\r\n  let match = text.match(/^(\\d{2})\\.(\\d{2})\\.(\\d{4}), (\\d{2}):(\\d{2})$/);\r\n\r\n  let date: Date = new Date(Number.parseInt(match[3]), Number.parseInt(match[2]), Number.parseInt(match[1]), Number.parseInt(match[4]), Number.parseInt(match[5]) );\r\n\r\n  return date;\r\n}\r\n\r\nexport function stringWrap(s: string, length: number ): string{\r\n  return s.replace(\r\n    new RegExp(`(?![^\\\\n]{1,${length}}$)([^\\\\n]{1,${length}})\\\\s`, 'g'), '$1\\n'\r\n  );\r\n} \r\n\r\nexport function formatAsJavadocComment(s: string, indent: number|string = \"\"): string {\r\n  let indentString = \"\";\r\n\r\n  if(typeof indent == \"string\"){\r\n    indentString = indent;\r\n  } else {\r\n    for(let i = 0; i < indent; i++){\r\n      indentString += \" \";\r\n    }\r\n  }\r\n\r\n  s = stringWrap(s, 60);\r\n  if(s.length > 0) s = \"\\n\" + s;\r\n  s = indentString + \"/**\" + s.replace(/\\n/g, \"\\n\" + indentString + \" * \") + \"\\n\" + indentString + \" */\";\r\n  return s;\r\n}\r\n\r\n\r\nexport function isDate(inputText: string) {\r\n\r\n      if (inputText == null || typeof inputText != 'string') return false;\r\n\r\n      // var dateformat = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/;\r\n      var dateformat = /^\\d{4}[\\/\\-](0?[1-9]|1[012])[\\/\\-](0?[1-9]|[12][0-9]|3[01])$/;\r\n      // Match the date format through regular expression\r\n      if (inputText.match(dateformat)) {\r\n          //Test which seperator is used '/' or '-'\r\n          var opera1 = inputText.split('/');\r\n          var opera2 = inputText.split('-');\r\n          var lopera1 = opera1.length;\r\n          var lopera2 = opera2.length;\r\n          // Extract the string into month, date and year\r\n          if (lopera1 > 1) {\r\n              var pdate = inputText.split('/');\r\n          }\r\n          else if (lopera2 > 1) {\r\n              var pdate = inputText.split('-');\r\n          }\r\n          if (pdate.length != 3) return false;\r\n          var dd = parseInt(pdate[2]);\r\n          var mm = parseInt(pdate[1]);\r\n          var yy = parseInt(pdate[0]);\r\n          // Create list of days of a month [assume there is no leap year by default]\r\n          var ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n          if (mm == 1 || mm > 2) {\r\n              if (dd > ListofDays[mm - 1]) {\r\n                  return false;\r\n              }\r\n          }\r\n          if (mm == 2) {\r\n              var lyear = false;\r\n              if ((!(yy % 4) && yy % 100) || !(yy % 400)) {\r\n                  lyear = true;\r\n              }\r\n              if ((lyear == false) && (dd >= 29)) {\r\n                  return false;\r\n              }\r\n              if ((lyear == true) && (dd > 29)) {\r\n                  return false;\r\n              }\r\n              return true;\r\n          }\r\n\r\n          return true;\r\n\r\n      }\r\n      else {\r\n          return false;\r\n      }\r\n  }\r\n\r\n  export function isDateTime(inputText: string) {\r\n\r\n      if (inputText == null || typeof inputText != 'string') return false;\r\n\r\n      // var dateformat = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/;\r\n      var dateformat = /^\\d{4}[\\-](0[1-9]|1[012])[\\-](0[1-9]|[12][0-9]|3[01]) ([01][1-9]|2[0123]):([0-5][0-9]):([0-5][0-9])$/;\r\n      // Match the date format through regular expression\r\n      if (inputText.match(dateformat)) {\r\n          var splitStr = inputText.split(' ');\r\n          var dateStr = splitStr[0];\r\n          //var timeStr = splitStr[1];\r\n\r\n          if (dateStr.length != 10) return false;\r\n          var dd = parseInt(dateStr.substring(8,10));\r\n          var mm = parseInt(dateStr.substring(5, 7));\r\n          var yy = parseInt(dateStr.substring(0, 4));\r\n          // Create list of days of a month [assume there is no leap year by default]\r\n          var ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n          if (mm == 1 || mm > 2) {\r\n              if (dd > ListofDays[mm - 1]) {\r\n                  return false;\r\n              }\r\n          }\r\n          if (mm == 2) {\r\n              var lyear = false;\r\n              if ((!(yy % 4) && yy % 100) || !(yy % 400)) {\r\n                  lyear = true;\r\n              }\r\n              if ((lyear == false) && (dd >= 29)) {\r\n                  return false;\r\n              }\r\n              if ((lyear == true) && (dd > 29)) {\r\n                  return false;\r\n              }\r\n              return true;\r\n          }\r\n\r\n          return true;\r\n\r\n      }\r\n      else {\r\n          return false;\r\n      }\r\n  }\r\n","import { DatabaseTool } from \"../../tools/DatabaseTools.js\";\nimport { TextPosition, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\nimport { CompletionHint, Module } from \"./Module.js\";\nimport { Symbol, SymbolTable } from \"./SymbolTable.js\";\nimport { AlterTableNode, ASTNode, BinaryOpNode, CreateTableNode, DeleteNode, DotNode, DropTableNode, IdentifierNode, InsertNode, MethodcallNode, SelectNode, TableOrSubqueryNode, TermNode, UpdateNode } from \"./Ast.js\";\nimport { Error, ErrorLevel, QuickFix } from \"../lexer/Lexer.js\";\nimport { Column, Table } from \"./SQLTable.js\";\nimport { SQLBaseType, SQLType } from \"./SQLTypes.js\";\nimport { SQLMethodStore } from \"./SQLMethods.js\";\nimport { isDate, isDateTime } from \"../../tools/StringTools.js\";\n\n\nexport class SymbolResolver {\n\n    symbolTableStack: SymbolTable[] = [];\n    errorList: Error[];\n    module: Module;\n    databaseTool: DatabaseTool;\n    tables: Table[];\n\n    constructor(databaseTool: DatabaseTool) {\n        this.databaseTool = databaseTool;\n        this.tables = Table.fromTableStructureList(databaseTool.databaseStructure?.tables);\n    }\n\n    start(module: Module) {\n        this.module = module;\n        this.symbolTableStack = [];\n        this.errorList = [];\n\n        module.mainSymbolTable = new SymbolTable(null, { column: 0, line: 0, length: 0 }, { column: 0, line: 100000, length: 0 })\n\n        this.symbolTableStack.push(module.mainSymbolTable);\n\n        for (let statement of this.module.sqlStatements) {\n\n            let errorsBeforeStatement = this.errorList.length;\n\n            let astNode = statement.ast;\n            if (astNode == null) continue;\n\n            switch (astNode.type) {\n                case TokenType.keywordSelect:\n                    this.resolveSelect(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordInsert:\n                    this.resolveInsert(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordCreate:\n                    this.resolveCreateTable(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordUpdate:\n                    this.resolveUpdate(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordDelete:\n                    this.resolveDelete(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordDrop:\n                    this.resolveDropTable(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordAlter:\n                    this.resolveAlterTable(astNode)\n                    this.symbolTableStack.pop();\n                    break;\n\n                default:\n                    break;\n            }\n\n            statement.hasErrors = statement.hasErrors || this.errorList.length > errorsBeforeStatement;\n\n        }\n\n        module.errors[2] = this.errorList;\n\n    }\n\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position: TextPosition, quickFix?: QuickFix) {\n        // if (position == null) position = Object.assign({}, this.position);\n        this.errorList.push({\n            text: text,\n            position: position,\n            quickFix: quickFix,\n            level: errorLevel\n        });\n    }\n\n\n    getCurrentSymbolTable(): SymbolTable {\n        return this.symbolTableStack[this.symbolTableStack.length - 1];\n    }\n\n    pushNewSymbolTable(positionFrom: TextPosition, positionTo: TextPosition): SymbolTable {\n        if(positionTo == null) {\n            positionTo = {\n                line: 100000,\n                column: 1,\n                length: 1\n            }\n        };\n        let st: SymbolTable = new SymbolTable(this.getCurrentSymbolTable(), positionFrom, positionTo);\n        this.symbolTableStack.push(st);\n        return st;\n    }\n\n    resolveSelect(selectNode: SelectNode): Table {\n        let resultTable: Table = new Table(null);\n\n        selectNode.symbolTable = this.pushNewSymbolTable(selectNode.position, selectNode.endPosition);\n\n        // From\n        let joinedTables: Table[] = [];\n        this.resolveTableOrSubQuery(selectNode.fromNode, joinedTables);\n        if (selectNode.fromStartPosition != null) {\n            let fromSymbolTable = new SymbolTable(this.getCurrentSymbolTable(), selectNode.fromStartPosition, selectNode.fromEndPosition);\n            fromSymbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n        }\n\n        // Column list\n        for (let columnNode of selectNode.columnList) {\n            if (columnNode.type == TokenType.allColumns) {\n                for (let table of joinedTables) {\n                    for (let column of table.columns) {\n                        let c: Column = new Column(column.identifier, column.type, resultTable, false, true, column.defaultValue, column.isAutoIncrement);\n                        resultTable.columns.push(c);\n                    }\n                }\n            } else {\n                this.resolveTerm(columnNode.term);\n                let c1: Column = new Column(columnNode.alias, columnNode.term.sqlType, resultTable, false, true, null, false);\n                resultTable.columns.push(c1);\n                if (c1.identifier != null) {\n                    selectNode.symbolTable.storeSymbol({\n                        identifier: c1.identifier,\n                        posOfDefinition: columnNode.term.position,\n                        referencedOnPositions: [],\n                        column: c1\n                    })\n                }\n            }\n        }\n\n        // where...\n        if (selectNode.whereNode != null) {\n            let whereType = this.resolveTerm(selectNode.whereNode);\n            if (whereType != null && whereType.getBaseTypeName() != \"boolean\") {\n                this.pushError(\"Das Ergebnis des where-Teils einer select-Anweisung muss vom Typ boolean sein.\", \"error\", selectNode.whereNode.position);\n            }\n        }\n\n\n        // TODO: group by, order by\n\n        return resultTable;\n    }\n\n    resolveDropTable(node: DropTableNode) {\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        if (node.tableIdentifier == null) return;\n\n        let table = node.symbolTable.findTable(node.tableIdentifier);\n        if (table == null) this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\n\n    }\n\n    resolveDelete(node: DeleteNode) {\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        if (node.tableIdentifier == null) return;\n\n        let table = node.symbolTable.findTable(node.tableIdentifier);\n        if (table == null) this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\n\n\n        // if(node.whereNodeBegin != null){\n        //     let symbolTable = this.pushNewSymbolTable(node.whereNodeBegin, node.whereNodeEnd);\n        //     symbolTable.storeTableSymbols(table);\n        // }\n\n\n        if (node.whereNode != null) {\n            let whereSymbolTable = this.pushNewSymbolTable(node.whereNodeBegin, node.whereNodeEnd);\n            if(table != null) whereSymbolTable.storeTableSymbols(table);\n            this.resolveTerm(node.whereNode);\n            this.symbolTableStack.pop();\n        }\n\n\n\n    }\n\n\n    resolveAlterTable(node: AlterTableNode) {\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        if (node.tableIdentifier == null) {\n            return;\n        }\n\n        let table = node.symbolTable.findTable(node.tableIdentifier);\n        if (table == null) {\n            this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\n        }\n\n        let oldColumn: Column = null;\n        if (node.oldColumnName != null) {\n            oldColumn = table.columns.find(c => c.identifier.toLocaleLowerCase() == node.oldColumnName.toLocaleLowerCase());\n            if (oldColumn == null) {\n                this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" hat keine Spalte mit dem Bezeichner \" + node.oldColumnName, \"error\", node.oldColumnPosition);\n            }\n        }\n\n        switch (node.kind) {\n            case \"dropColumn\":\n                // nothing to do as node.oldColumnName is checked above\n                break;\n            case \"addColumn\":\n                let columnNode = node.columnDef;\n                if (columnNode == null) break;\n                if (columnNode.foreignKeyInfo != null && columnNode.baseType != null) {\n                    let fki = columnNode.foreignKeyInfo;\n                    let tables = this.getCurrentSymbolTable().findTables(fki.referencesTable);\n                    if (tables.length == 1) {\n                        let table = tables[0].table;\n                        let column = table.columns.find(c => c.identifier == fki.referencesColumn);\n                        if (column != null && column.type != null) {\n                            if (!column.isPrimaryKey) {\n                                this.pushError(\"Die referenzierte Spalte \" + fki.referencesTable + \".\" + fki.referencesColumn + \" ist kein Primärschlüssel.\", \"warning\", columnNode.referencesPosition);\n                            }\n                            if (!column.type.canCastTo(columnNode.baseType)) {\n                                this.pushError(\"Der Datentyp \" + columnNode.baseType.toString() + \" der Spalte \" + columnNode.identifier +\n                                    \" kann nich in den Datentyp \" + column.type.toString() + \" der referenzierten Spalte \" + table.identifier + \".\" +\n                                    column.identifier + \" umgewandelt werden.\", \"error\", columnNode.referencesPosition);\n                            }\n                        }\n                    }\n                }\n                break;\n            case \"renameColumn\":\n                // nothing to do as node.oldColumnName is checked above\n                break;\n            case \"renameTable\":\n                // nothing to do \n                break;\n            default:\n                break;\n        }\n    }\n\n    resolveUpdate(node: UpdateNode) {\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        if (node.tableIdentifier == null) {\n            return;\n        }\n\n        let table = node.symbolTable.findTable(node.tableIdentifier);\n        if (table == null) this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\n\n        for (let i = 0; i < node.columnIdentifiers.length; i++) {\n            let ci = node.columnIdentifiers[i];\n            let ciPos = node.columnIdentifierPositions[i];\n            let value = node.values[i];\n\n            if (ci == null) continue;\n            let column = table.columns.find(c => c.identifier == ci);\n\n            if (column == null) {\n                this.pushError(ci + \" ist kein Bezeichner einer Spalte der Tabelle \" + node.tableIdentifier + \".\", \"error\", ciPos);\n            }\n\n            if (value == null) continue;\n            let symbolTable = this.pushNewSymbolTable(node.valuePosBegin[i], node.valuePosEnd[i]);\n            symbolTable.storeTableSymbols(table);\n            this.resolveTerm(value);\n            this.symbolTableStack.pop();\n\n        }\n\n        if (node.whereNodeBegin != null) {\n            let symbolTable = this.pushNewSymbolTable(node.whereNodeBegin, node.whereNodeEnd);\n            symbolTable.storeTableSymbols(table);\n        }\n\n        if (node.whereNode != null) {\n            this.resolveTerm(node.whereNode);\n        }\n        this.symbolTableStack.pop();\n\n    }\n\n\n\n    resolveCreateTable(createTableNode: CreateTableNode) {\n\n        createTableNode.symbolTable = this.pushNewSymbolTable(createTableNode.position, createTableNode.endPosition);\n        createTableNode.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        let thisTable: Table = {\n            identifier: createTableNode.identifier,\n            columns: null,\n            size: 0\n        }\n\n        thisTable.columns = createTableNode.columnList.map(c => {\n            return {\n                identifier: c.identifier,\n                isNullable: false,\n                isPrimaryKey: c.isPrimary,\n                isAutoIncrement: c.isAutoIncrement,\n                notNull: false,\n                references: null,\n                table: thisTable,\n                type: c.baseType,\n                defaultValue: c.defaultValue\n            }\n        });\n\n        createTableNode.symbolTable.storeTableSymbols(thisTable);\n\n        for (let columnNode of createTableNode.columnList) {\n            if (createTableNode.columnList.filter(c => c.identifier.toLocaleLowerCase() == columnNode.identifier.toLocaleLowerCase()).length > 1) {\n                this.pushError(\"Der Spaltenbezeichner \" + columnNode.identifier + \" darf in einer Tabelle nur ein einziges Mal verwendet werden\", \"error\", columnNode.position);\n            }\n\n            if (columnNode.foreignKeyInfo != null && columnNode.baseType != null) {\n                let fki = columnNode.foreignKeyInfo;\n                let tables = this.getCurrentSymbolTable().findTables(fki.referencesTable);\n                if (tables.length == 1) {\n                    let table = tables[0].table;\n                    let column = table.columns.find(c => c.identifier == fki.referencesColumn);\n                    if (column != null && column.type != null) {\n                        if (!column.isPrimaryKey) {\n                            this.pushError(\"Die referenzierte Spalte \" + fki.referencesTable + \".\" + fki.referencesColumn + \" ist kein Primärschlüssel.\", \"warning\", columnNode.referencesPosition);\n                        }\n                        if (!column.type.canCastTo(columnNode.baseType)) {\n                            this.pushError(\"Der Datentyp \" + columnNode.baseType.toString() + \" der Spalte \" + columnNode.identifier +\n                                \" kann nich in den Datentyp \" + column.type.toString() + \" der referenzierten Spalte \" + table.identifier + \".\" +\n                                column.identifier + \" umgewandelt werden.\", \"error\", columnNode.referencesPosition);\n                        }\n                    }\n                }\n            }\n\n        }\n\n        for (let fki of createTableNode.foreignKeyInfoList) {\n\n            let columnNode = createTableNode.columnList.find(cn => cn.identifier == fki.column);\n            if (columnNode == null) continue;\n\n            let tables = this.getCurrentSymbolTable().findTables(fki.referencesTable);\n            if (tables.length == 1) {\n                let table = tables[0].table;\n                let column = table.columns.find(c => c.identifier == fki.referencesColumn);\n                if (column != null && column.type != null) {\n                    if (!column.isPrimaryKey) {\n                        this.pushError(\"Die referenzierte Spalte \" + fki.referencesTable + \".\" + fki.referencesColumn + \" ist kein Primärschlüssel.\", \"warning\", fki.referencesPosition);\n                    }\n                    if (!column.type.canCastTo(columnNode.baseType)) {\n                        this.pushError(\"Der Datentyp \" + columnNode.baseType.toString() + \" der Spalte \" + columnNode.identifier +\n                            \" kann nich in den Datentyp \" + column.type.toString() + \" der referenzierten Spalte \" + table.identifier + \".\" +\n                            column.identifier + \" umgewandelt werden.\", \"error\", fki.referencesPosition);\n                    }\n                }\n            }\n\n        }\n\n\n    }\n\n    resolveTableOrSubQuery(tosNode: TableOrSubqueryNode, joinedTables: Table[]) {\n        if (tosNode == null) return;\n\n        switch (tosNode.type) {\n            case TokenType.table:\n                let tableList = this.tables.filter(t => t.identifier.toLowerCase() == tosNode.identifier.toLowerCase());\n                if (tableList.length == 0) {\n                    this.pushError(tosNode.identifier + \" ist nicht der Name einer Tabelle.\", \"error\", tosNode.position);\n                } else if (tableList.length > 1) {\n                    this.pushError(\"Der Bezeichner \" + tosNode.identifier + \" ist hier nicht eindeutig.\", \"error\", tosNode.position);\n                } else {\n                    let table: Table = tableList[0];\n                    joinedTables.push(table);\n                    this.storeTableIntoSymbolTable(table, tosNode.position, tosNode.alias);\n                }\n\n                break;\n\n            case TokenType.keywordJoin:\n                this.resolveTableOrSubQuery(tosNode.firstOperand, joinedTables);\n                this.resolveTableOrSubQuery(tosNode.secondOperand, joinedTables);\n                break;\n\n            case TokenType.subquery:\n                tosNode.table = this.resolveSelect(tosNode.query);\n                joinedTables.push(tosNode.table);\n                if (tosNode.alias != null) {\n                    tosNode.table.identifier = tosNode.alias;\n                    this.storeTableIntoSymbolTable(tosNode.table, tosNode.position);\n                }\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    storeTableIntoSymbolTable(table: Table, position: TextPosition, alias?: string) {\n        let symbolTable = this.getCurrentSymbolTable();\n        symbolTable.storeSymbol({\n            identifier: alias == null ? table.identifier.toLowerCase() : alias.toLowerCase(),\n            posOfDefinition: position,\n            table: table,\n            referencedOnPositions: []\n        });\n        for (let column of table.columns) {\n            symbolTable.storeSymbol({\n                identifier: column.identifier.toLowerCase(),\n                posOfDefinition: null,\n                column: column,\n                tableAlias: alias,\n                referencedOnPositions: []\n            });\n        }\n    }\n\n    resolveTerm(node: TermNode): SQLType {\n        if (node == null) return null;\n\n        switch (node.type) {\n            case TokenType.binaryOp:\n                if ([TokenType.keywordIn, TokenType.keywordNotIn].indexOf(node.operator) >= 0) {\n                    return this.resolveNotIn(node);\n                }\n\n                let typeLeft = this.resolveTerm(node.firstOperand);\n                let typeRight = this.resolveTerm(node.secondOperand);\n                if (typeLeft != null && typeRight != null) {\n                    let resultType = typeLeft.getBinaryResultType(node.operator, typeRight);\n                    if (resultType == null) {\n                        this.pushError(\"Der Operator \" + TokenTypeReadable[node.operator] + \" ist für die Datentypen \" + typeLeft.toString() + \" und \" + typeRight.toString() + \" nicht definiert.\", \"error\", node.position);\n                    }\n                    return resultType;\n                } else {\n                    return null;\n                }\n                break;\n            case TokenType.unaryOp:\n                let operandType = this.resolveTerm(node.operand);\n                if (operandType != null) {\n                    let resultType1 = operandType.getUnaryResultType(node.operator);\n                    if (resultType1 == null) {\n                        this.pushError(\"Der Operator \" + TokenTypeReadable[node.operator] + \" ist für einen Operanden des Datentyps \" + operandType.toString() + \" nicht definiert.\", \"error\", node.position);\n                    }\n                    return resultType1;\n                } else {\n                    return null;\n                }\n                break;\n            case TokenType.callMethod:\n                return this.resolveMethodCall(node);\n                break;\n            //    ConstantNode | IdentifierNode | DotNode | SelectNode | BracketsNode | StarAttributeNode | SelectNode | ListNode;\n\n            case TokenType.constantNode:\n                node.sqlType = SQLBaseType.fromConstantType(node.constantType);\n                return node.sqlType;\n                break;\n            case TokenType.identifier:\n                return this.resolveIdentifier(node);\n                break;\n            case TokenType.dot:\n                return this.resolveDot(node);\n                break;\n            case TokenType.keywordSelect:\n                let selectTable = this.resolveSelect(node);\n                if (selectTable.columns.length != 1) {\n                    this.pushError(\"Die Ergebnistabelle einer Unterabfrage an dieser Stelle muss genau eine Spalte besitzen.\", \"error\", node.position);\n                    return null;\n                }\n                return selectTable.columns[0].type;\n                break;\n            case TokenType.rightBracket:   // BracketsNode\n                node.sqlType = this.resolveTerm(node.termInsideBrackets);\n                return node.sqlType;\n                break;\n            case TokenType.allColumns:\n                this.pushError(\"Das Zeichen * kann hier nicht verwendet werden.\", \"error\", node.position);\n                break;\n            case TokenType.list:\n                this.pushError(\"Eine Liste wird hier nicht erwartet.\", \"error\", node.position);\n                break;\n            default:\n                break;\n        }\n\n\n\n\n    }\n\n    resolveDot(node: DotNode): SQLType {\n        let tableSymbols = this.getCurrentSymbolTable().findTables(node.identifierLeft.identifier);\n        if (tableSymbols.length == 0) {\n            this.pushError(\"Die Tabelle \" + node.identifierLeft.identifier + \" kann nicht gefunden werden.\", \"error\", node.identifierLeft.position);\n            return null;\n        }\n        if (tableSymbols.length > 1) {\n            this.pushError(\"Der Tabellenbezeichner \" + node.identifierLeft.identifier + \" ist nicht eindeutig.\", \"error\", node.identifierLeft.position);\n            return null;\n        }\n        let table = tableSymbols[0].table;\n\n        let columns = table.columns.filter(c => c.identifier.toLowerCase() == node.identifierRight.identifier.toLowerCase());\n\n        if (columns.length == 0) {\n            this.pushError(\"Die Tabelle \" + node.identifierLeft.identifier + \" hat keine Spalte mit dem Bezeichner \" + node.identifierRight.identifier + \".\", \"error\", node.identifierRight.position);\n            return;\n        }\n\n        if (columns.length > 1) {\n            this.pushError(\"Die Tabelle \" + node.identifierLeft.identifier + \" hat mehrere Spalten mit dem Bezeichner \" + node.identifierRight.identifier + \".\", \"error\", node.identifierRight.position);\n            return;\n        }\n\n        let column = columns[0];\n        node.sqlType = column.type;\n        return column.type;\n\n    }\n\n    resolveIdentifier(node: IdentifierNode): SQLType {\n        let symbols = this.getCurrentSymbolTable().findColumn(node.identifier);\n        if (symbols.length == 0) {\n            this.pushError(\"Der Bezeichner \" + node.identifier + \" ist an dieser Stelle nicht bekannt.\", \"error\", node.position);\n            return null;\n        }\n        if (symbols.length > 1) {\n            this.pushError(\"Der Bezeichner \" + node.identifier + \" ist nicht eindeutig.\", \"error\", node.position);\n            return null;\n        }\n\n        let symbol = symbols[0];\n        node.sqlType = symbol.column.type;\n        return symbol.column.type;\n    }\n\n    resolveMethodCall(node: MethodcallNode): SQLType {\n\n        let methodStore = SQLMethodStore.getInstance();\n        let methods = methodStore.getMethods(node.identifier);\n\n        methods = methods.filter(m => m.parameters.length == node.operands.length);\n        if (node.operands.length == 1 && node.operands[0].type == TokenType.allColumns) {\n            methods = methods.filter(m => m.acceptsStarParameter);\n            node.sqlType = methods[0].returnType;\n            return node.sqlType;\n        }\n\n        if (methods.length == 0) {\n            this.pushError(\"Es gibt keine passende Methode mit dem Bezeichner '\" + node.identifier + \"'.\", \"error\", node.position);\n            return null;\n        }\n\n        for (let operand of node.operands) {\n            if (this.resolveTerm(operand) == null) {\n                node.sqlType = methods[0].returnType;\n                return node.sqlType;\n            }\n        }\n\n        for (let method of methods) {\n            let found = true;\n            for (let i = 0; i < method.parameters.length; i++) {\n                let methodParameter = method.parameters[i];\n                let operand = node.operands[i];\n                if (!operand.sqlType.canCastTo(methodParameter.type)) {\n                    found = false;\n                    break;\n                }\n            }\n            if (found) {\n                node.sqlType = method.returnType;\n                return node.sqlType;\n            }\n        }\n\n        this.pushError(\"Es gibt keine passende Methode mit dem Bezeichner '\" + node.identifier + \"'.\", \"error\", node.position);\n        return null;\n\n    }\n\n    resolveNotIn(node: BinaryOpNode): SQLType {\n\n        if (node.firstOperand == null || node.secondOperand == null) return null;\n\n        let operatorString = TokenTypeReadable[node.operator];\n\n        this.resolveTerm(node.firstOperand);\n        let leftType = node.firstOperand.sqlType;\n        if (leftType != null) {\n            if (node.secondOperand.type == TokenType.keywordSelect) {\n                let selectNode = node.secondOperand;\n                if (selectNode.columnList.length != 1) {\n                    this.pushError(\"Wenn rechts vom Operator '\" + operatorString + \"' eine Unterabfrage steht, muss die Ergebnistabelle dieser Unterabfrage genau eine Spalte haben.\", \"error\", selectNode.position);\n                }\n                this.resolveSelect(selectNode);\n                let pType = selectNode.columnList[0].term.sqlType;\n                if (!pType.canCastTo(leftType)) {\n                    this.pushError(\"Der Datentyp der Ergebnisspalte der Unterabfrage ist \" + pType.toString() + \". Dieser kann nicht in den Datentyp \" + leftType.toString() + \" umgewandelt werden.\", \"error\", selectNode.position);\n                }\n            } else if (node.secondOperand.type == TokenType.list) {\n                let listNode = node.secondOperand;\n                for (let element of listNode.elements) {\n                    let elementType = SQLBaseType.fromConstantType(element.constantType);\n                    element.sqlType = elementType;\n                    if (!elementType.canCastTo(leftType)) {\n                        this.pushError(\"Der Datentyp des Listenelements \" + element.constant + \" ist \" + elementType.toString() + \". Er kann nicht in den Datentype \" + leftType.toString() + \" des Operanden auf der linken Seite des Operators '\" + operatorString + \"' umgewandelt werden.\", \"error\", element.position);\n                    }\n                }\n            } else {\n                this.pushError(\"Der rechte Operand der Operatoren 'in' und 'not in' muss eine Unterabfrage oder eine Liste sein.\", \"error\", node.secondOperand.position);\n            }\n\n        }\n\n        return SQLBaseType.getBaseType(\"boolean\");\n    }\n\n    resolveInsert(astNode: InsertNode) {\n\n        let table: Table = null;\n        let symbolTable = this.pushNewSymbolTable(astNode.position, astNode.endPosition);\n        if (astNode.table != null) {\n            astNode.table.table = this.tables.find(t => t.identifier.toLowerCase() == astNode.table.identifier.toLocaleLowerCase());\n            if (astNode.table.table == null) {\n                this.pushError(\"Die Tabelle \" + astNode.table.identifier + \" gibt es nicht.\", \"error\", astNode.table.position);\n            } else {\n                table = astNode.table.table;\n                symbolTable.storeTableSymbols(table);\n            }\n        }\n\n        let tableCompletionTo = astNode.endPosition;\n        if (astNode.valuesPosition != null) tableCompletionTo = astNode.valuesPosition;\n        if (astNode.columnsPosition != null) tableCompletionTo = astNode.columnsPosition;\n\n        this.module.addCompletionHint(astNode.position, tableCompletionTo, false, true, [\"into\", \"values\"]);\n\n        if (table != null) {\n            this.module.addCompletionHint(tableCompletionTo, astNode.valuesPosition == null ? astNode.endPosition : astNode.valuesPosition, true, false, [\"values\"]);\n        }\n\n        let tableSymbolTable = this.pushNewSymbolTable(astNode.position, tableCompletionTo);\n        tableSymbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        let columns: Column[] = [];\n        // Parse column list\n        if (astNode.columnList.length == 0) {\n            if (table != null) {\n                columns = table.columns;\n            }\n        } else {\n            if (table != null) {\n                for (let columnNode of astNode.columnList) {\n                    let column = table.columns.find(c => c.identifier.toLowerCase() == columnNode.identifier.toLowerCase());\n                    if (column == null) {\n                        this.pushError(\"Die Tabelle \" + table.identifier + \" besitzt keine Spalte mit dem Bezeichner \" + columnNode.identifier + \".\", \"error\", columnNode.position);\n                    } else {\n                        columns.push(column);\n                    }\n                }\n            }\n        }\n\n        if (columns.length > 0) {\n            // Parse value lists\n            for (let valueList of astNode.values) {\n                if (valueList.length != columns.length && valueList.length > 0) {\n                    this.pushError(\"Erwartet werden \" + columns.length + \" Elemente, hier stehen aber \" + valueList.length + \" Elemente in der Liste.\", \"error\", valueList[0].position);\n                } else {\n                    for (let i = 0; i < valueList.length; i++) {\n                        let value = valueList[i];\n                        let column = columns[i];\n                        value.sqlType = SQLBaseType.fromConstantType(value.constantType);\n                        // constantType == 40 means: null\n                        // TODO: check if column is nullable!\n                        let destType = column.type.toString().toLocaleLowerCase();\n                        if (value.constantType == TokenType.keywordNull) {\n                            if (!column.isNullable || column.notNull) {\n                                this.pushError(\"Die Spalte \" + column.identifier + \" ist nicht nullable, daher kann null hier nicht eingefügt werden.\", \"error\", value.position);\n                            }\n                        } else if (!value.sqlType.canCastTo(column.type)) {\n                            let error: string = \"Der Wert \" + value.constant + \" vom Datentyp \" + value.sqlType.toString() + \" kann nicht in den Datentyp \" + column.type.toString() + \" der Spalte \" + column.identifier + \" umgewandelt werden.\";\n\n                            if(destType == \"date\") error += \"<br><b>Tipp: </b>Datumswerte haben die Form 'yyyy-mm-dd', also z.B. '2022-06-15'.\";\n                            if(destType == \"datetime\" || destType == \"timestamp\") error += \"<br><b>Tipp: </b>Timestamps haben die Form 'yyyy-mm-dd hh:min:ss', also z.B. '2022-06-15 07:56:22'.\";\n\n                            this.pushError(error, \"error\", value.position);\n                        } else if(destType == \"date\"){\n                            if(!isDate(value.constant)){\n                                let error: string = `'${value.constant}' ist kein date-Wert.<br><b>Tipp: </b>Datumswerte haben die Form 'yyyy-mm-dd', also z.B. '2022-06-15'.`;\n                                this.pushError(error, \"error\", value.position);\n                            }\n                        } else if(destType == \"datetime\" || destType == \"timestamp\"){\n                            if(!isDateTime(value.constant)){\n                                let error: string = `'${value.constant}' ist kein ${destType}-Wert.<br><b>Tipp: </b>Timestamps haben die Form 'yyyy-mm-dd hh:min:ss', also z.B. '2022-06-15 07:56:22'.`;\n                                this.pushError(error, \"error\", value.position);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        this.symbolTableStack.pop();\n\n    }\n\n\n\n}\n\n","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { SymbolResolver } from \"./parser/SymbolResolver.js\";\r\n\r\nexport enum CompilerStatus {\r\n    compiling, error, compiledButNothingToRun, readyToRun\r\n}\r\n\r\nexport class Compiler {\r\n\r\n    compilerStatus: CompilerStatus = CompilerStatus.compiledButNothingToRun;\r\n\r\n    atLeastOneModuleIsStartable: boolean;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    compile(moduleStore: ModuleStore): Error[] {\r\n\r\n        this.compilerStatus = CompilerStatus.compiling;\r\n\r\n        let t0 = performance.now();\r\n\r\n        let lexer = new Lexer();\r\n\r\n        // 1st pass: lexing\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.file.dirty = false;\r\n            m.clear();\r\n\r\n            let lexed = lexer.lex(m.getProgramTextFromMonacoModel());\r\n            m.errors[0] = lexed.errors;\r\n            m.tokenList = lexed.tokens;\r\n            m.bracketError = lexed.bracketError;\r\n            if(m.file.name == this.main.getCurrentlyEditedModule().file.name){\r\n                if(this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(lexed.bracketError);\r\n            }\r\n        }\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        this.main.getSemicolonAngel().startRegistering();\r\n\r\n        let parser: Parser = new Parser();\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            parser.parse(m);\r\n        }\r\n        \r\n        // 3rd pass: check symbols and types\r\n        let databaseTool = this.main.getDatabaseTool();\r\n        let symbolResolver: SymbolResolver = new SymbolResolver(databaseTool);\r\n\r\n        for(let m of moduleStore.getModules(false)){\r\n            symbolResolver.start(m);\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        let message = \"Compiled in \" + dt + \" ms.\";\r\n\r\n        this.main.getCurrentWorkspace().compilerMessage = message;\r\n\r\n        this.main.getSemicolonAngel().healSemicolons();\r\n\r\n        this.compilerStatus = CompilerStatus.readyToRun;\r\n\r\n        return null;\r\n    }\r\n\r\n}","import { FileData } from \"../../communication/Data.js\";\r\nimport { AccordionElement } from \"../../main/gui/Accordion.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenType, TextPositionWithoutLength } from \"../lexer/Token.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { ASTNode } from \"./AST.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\nimport { stringToDate } from \"../../tools/StringTools.js\";\r\nimport { SQLStatement } from \"./Parser.js\";\r\n\r\n\r\nexport type CompletionHint = {\r\n    fromLine: number,\r\n    fromColumn: number,\r\n    toLine: number, \r\n    toColumn: number,\r\n    hintColumns: boolean,\r\n    hintColumnsOfTable?: string,\r\n    hintTables: boolean,\r\n    hintKeywords: string[],\r\n    dontHint?: string[],\r\n    praefix?: string,\r\n    suffix?: string\r\n}\r\n\r\nexport type File = {\r\n    name: string,\r\n    id?: number,\r\n    text: string,\r\n\r\n    text_before_revision: string,\r\n    submitted_date: string,\r\n    student_edited_after_revision: boolean,\r\n\r\n    dirty: boolean,\r\n    saved: boolean,\r\n    version: number,\r\n    panelElement?: AccordionElement\r\n\r\n}\r\n\r\nexport type IdentifierPosition = {\r\n    position: TextPosition,\r\n    element: any;\r\n}\r\n\r\nexport type MethodCallPosition = {\r\n    identifierPosition: TextPosition,\r\n    possibleMethods: any[] | string, // string for print, println, ...\r\n    commaPositions: TextPosition[],\r\n    rightBracketPosition: TextPosition\r\n}\r\n\r\nexport class Module {\r\n    file: File;\r\n    static maxUriNumber: number = 0;\r\n    uri: monaco.Uri;\r\n    model: monaco.editor.ITextModel;\r\n    oldErrorDecorations: string[] = [];\r\n    lastSavedVersionId: number;\r\n    editorState: monaco.editor.ICodeEditorViewState;\r\n\r\n    errors: Error[][] = [[], [], [], []]; // 1st pass, 2nd pass, 3rd pass\r\n\r\n    // 1st pass: Lexer\r\n    tokenList: Token[];\r\n\r\n    // 2nd pass: ASTParser\r\n    sqlStatements: SQLStatement[];\r\n    mainSymbolTable: SymbolTable;\r\n\r\n\r\n    identifierPositions: { [line: number]: IdentifierPosition[] } = {};\r\n    methodCallPositions: { [line: number]: MethodCallPosition[] } = {};\r\n\r\n    static uriMap: { [name: string]: number } = {};\r\n    bracketError: string;\r\n\r\n    completionHints: Map<number, CompletionHint[]> = new Map(); // Map from line numbers to hints\r\n\r\n    constructor(file: File, public main: MainBase) {\r\n        if (file == null || this.main == null) return; // used by AdhocCompiler and ApiDoc\r\n\r\n        this.file = file;\r\n        // this.uri = monaco.Uri.from({ path: '/file' + (Module.maxUriNumber++) + '.learnJava', scheme: 'file' });\r\n        let path = file.name;\r\n\r\n        let uriCounter = Module.uriMap[path];\r\n        if (uriCounter == null) {\r\n            uriCounter = 0;\r\n        } else {\r\n            uriCounter++;\r\n        }\r\n        Module.uriMap[path] = uriCounter;\r\n\r\n        if (uriCounter > 0) path += \" (\" + uriCounter + \")\";\r\n        this.uri = monaco.Uri.from({ path: path, scheme: 'inmemory' });\r\n        this.model = monaco.editor.createModel(file.text, \"vscSQL\", this.uri);\r\n        this.model.updateOptions({ tabSize: 3 });\r\n\r\n        this.lastSavedVersionId = this.model.getAlternativeVersionId();\r\n\r\n        let that = this;\r\n\r\n        this.model.onDidChangeContent(() => {\r\n            let versionId = that.model.getAlternativeVersionId();\r\n\r\n            if (versionId != that.lastSavedVersionId) {\r\n                that.file.dirty = true;\r\n                that.file.saved = false;\r\n                that.lastSavedVersionId = versionId;\r\n            }\r\n\r\n            if(!that.main.isEmbedded()){\r\n                let main1: Main = <Main>main;\r\n                if (main1.workspacesOwnerId != main1.user.id) {\r\n                    if (that.file.text_before_revision == null || that.file.student_edited_after_revision) {\r\n                        that.file.student_edited_after_revision = false;\r\n                        that.file.text_before_revision = that.file.text;\r\n                        that.file.saved = false;\r\n                        main1.networkManager.sendUpdates(null, false);\r\n                        main1.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n                        main1.projectExplorer.renderHomeworkButton(that.file);\r\n                    }\r\n                } else {\r\n                    that.file.student_edited_after_revision = true;\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    addCompletionHint(fromPosition: TextPosition, toPosition: TextPosition, hintColumns: boolean|string, hintTables: boolean, \r\n        hintKeywords: string[], dontHint?: string[], praefix: string = \"\", suffix: string = \"\"){\r\n        let ch: CompletionHint = {\r\n            fromColumn: fromPosition.column,\r\n            fromLine: fromPosition.line,\r\n            toColumn: toPosition.column,\r\n            toLine: toPosition.line,\r\n            hintColumns: (typeof hintColumns == \"boolean\")? hintColumns : true, \r\n            hintColumnsOfTable: (typeof hintColumns == \"string\")? hintColumns : null,\r\n            hintTables: hintTables,\r\n            hintKeywords: hintKeywords,\r\n            dontHint: dontHint,\r\n            praefix: praefix,\r\n            suffix: suffix\r\n        }\r\n\r\n        for(let i = ch.fromLine; i <= ch.toLine; i++){\r\n            let chList = this.completionHints.get(i);\r\n            if(chList == null){\r\n                chList = [];\r\n                this.completionHints.set(i, chList);\r\n            }\r\n            chList.push(ch);\r\n        }\r\n    }\r\n\r\n    getSQLSTatementsAtSelection(sel: monaco.Selection): SQLStatement[] {\r\n        let selStart = {line: sel.startLineNumber, column: sel.startColumn};\r\n        let selEnd = {line: sel.endLineNumber, column: sel.endColumn};\r\n\r\n        if(this.sqlStatements == null){\r\n            return [];\r\n        }\r\n\r\n        return this.sqlStatements.filter(stmt => {\r\n            return !(this.compare(stmt.to, selStart) < 0 || this.compare(stmt.from, selEnd) > 0);\r\n        })\r\n\r\n    }\r\n\r\n    /**\r\n     * returns 1 if a > b, 0 if a == b and -1 if a < b\r\n     * @param a \r\n     * @param b \r\n     */\r\n    compare(a: {line: number, column: number}, b: {line: number, column: number}): number{\r\n        if(a.line > b.line) return 1;\r\n        if(a.line < b.line) return -1;\r\n        if(a.column > b.column) return 1;\r\n        if(a.column < b.column) return -1;\r\n        return 0;\r\n    }\r\n\r\n\r\n\r\n    getSQLStatementAtPosition(p: { lineNumber: number, column: number }): SQLStatement {\r\n\r\n        return this.sqlStatements.find(statement => {\r\n            if(statement.from.line > p.lineNumber ) return false;\r\n            if(statement.from.line == p.lineNumber && statement.from.column > p.column) return false;\r\n            if(statement.to.line < p.lineNumber) return false;\r\n            if(statement.to.line == p.lineNumber && statement.to.column < p.column) return false;\r\n            return true;\r\n        });        \r\n\r\n    }\r\n\r\n\r\n    getCompletionHint(line: number, column: number){\r\n        let chList = this.completionHints.get(line);\r\n        \r\n        if(chList == null || chList.length == 0){\r\n            return null;\r\n        }\r\n\r\n        let pos = line * 1000 + column;\r\n        chList = chList.filter(ch => pos >= ch.fromLine * 1000 + ch.fromColumn && pos <= ch.toLine * 1000 + ch.toColumn);\r\n        if(chList.length == 0){\r\n            return;\r\n        }\r\n\r\n        // take CompletionHint with smallest range:\r\n        let bestCh: CompletionHint = chList[0];\r\n        let bestRangeLength  = (bestCh.toLine - bestCh.fromLine)*1000 + (bestCh.toColumn - bestCh.fromColumn);\r\n\r\n        for(let i = 1; i < chList.length; i++){\r\n            let ch = chList[i];\r\n            let rangeLength = (ch.toLine - ch.fromLine) * 1000 + (ch.toColumn - ch.fromColumn);\r\n\r\n            if(rangeLength < bestRangeLength){\r\n                bestCh = ch;\r\n                bestRangeLength = rangeLength;\r\n            }\r\n\r\n        }\r\n\r\n        return bestCh;\r\n    }\r\n\r\n\r\n    static restoreFromData(f: FileData, main: MainBase): Module {\r\n\r\n        let f1: File = {\r\n            name: f.name,\r\n            text: f.text,\r\n            text_before_revision: f.text_before_revision,\r\n            submitted_date: f.submitted_date,\r\n            student_edited_after_revision: false,\r\n            dirty: true,\r\n            saved: true,\r\n            version: f.version,\r\n            id: f.id\r\n        }\r\n\r\n        let m: Module = new Module(f1, main);\r\n\r\n        return m;\r\n\r\n    }\r\n\r\n    getFileData(workspace: Workspace): FileData {\r\n        let file = this.file;\r\n        let fd: FileData = {\r\n            id: file.id,\r\n            name: file.name,\r\n            text: file.text,\r\n            text_before_revision: file.text_before_revision,\r\n            submitted_date: file.submitted_date,\r\n            student_edited_after_revision: file.student_edited_after_revision,\r\n            version: file.version,\r\n            workspace_id: workspace.id,\r\n            forceUpdate: false,\r\n            file_type: 11\r\n        }\r\n\r\n        return fd;\r\n    }\r\n\r\n\r\n    findSymbolTableAtPosition(line: number, column: number) {\r\n        if (this.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (line > this.mainSymbolTable.positionTo.line ||\r\n            line == this.mainSymbolTable.positionTo.line && column > this.mainSymbolTable.positionTo.column\r\n        ) {\r\n            line = this.mainSymbolTable.positionTo.line;\r\n            column = this.mainSymbolTable.positionTo.column - 1;\r\n        }\r\n\r\n        return this.mainSymbolTable.findTableAtPosition(line, column);\r\n    }\r\n\r\n    getErrorCount(): number {\r\n\r\n        let ec = 0;\r\n        for (let el of this.errors) {\r\n            el.forEach(error => ec += error.level == \"error\" ? 1 : 0);\r\n            // ec += el.length;\r\n        }\r\n\r\n        return ec;\r\n    }\r\n\r\n    getProgramTextFromMonacoModel(): string {\r\n        return this.model.getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n    }\r\n\r\n\r\n    addIdentifierPosition(position: TextPosition, element: any) {\r\n        let positionList: IdentifierPosition[] = this.identifierPositions[position.line];\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            this.identifierPositions[position.line] = positionList;\r\n        }\r\n        positionList.push({\r\n            position: position,\r\n            element: element\r\n        });\r\n    }\r\n\r\n    getElementAtPosition(line: number, column: number): any {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let bestFoundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column < p.position.column + p.position.length) {\r\n\r\n                if (p.position.length > 0) {\r\n                    if (bestFoundPosition == null) {\r\n                        bestFoundPosition = p;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bestFoundPosition == null ? null : <any>bestFoundPosition.element;\r\n    }\r\n\r\n    copy(): Module {\r\n        let m = new Module(this.file, this.main);\r\n        m.model = this.model;\r\n        m.mainSymbolTable = this.mainSymbolTable;\r\n        this.mainSymbolTable = null;\r\n\r\n        this.file.dirty = true;\r\n\r\n        return m;\r\n    }\r\n\r\n    clear() {\r\n\r\n        this.identifierPositions = {};\r\n\r\n        if (this.file != null && this.file.dirty) {\r\n            // Lexer\r\n            this.tokenList = null;\r\n            this.errors[0] = [];\r\n\r\n            // AST Parser\r\n            this.errors[1] = [];\r\n\r\n\r\n        }\r\n\r\n        // type resolver\r\n        this.errors[2] = [];\r\n\r\n        // Code generator\r\n        this.errors[3] = [];\r\n        this.mainSymbolTable = new SymbolTable(null, { line: 1, column: 1, length: 1 }, { line: 100000, column: 1, length: 0 });\r\n\r\n        this.methodCallPositions = {};\r\n\r\n    }\r\n\r\n    hasErrors() {\r\n\r\n        for (let el of this.errors) {\r\n            if (el.find(error => error.level == \"error\")) {\r\n                return true;\r\n            }\r\n            // if (el.length > 0) {\r\n            //     return true;\r\n            // }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getSortedAndFilteredErrors(): Error[] {\r\n\r\n        let list: Error[] = [];\r\n\r\n        for (let el of this.errors) {\r\n            list = list.concat(el);\r\n        }\r\n\r\n        list.sort((a, b) => {\r\n            if (a.position.line > b.position.line) {\r\n                return 1;\r\n            }\r\n            if (b.position.line > a.position.line) {\r\n                return -1;\r\n            }\r\n            if (a.position.column >= b.position.column) {\r\n                return 1;\r\n            }\r\n            return -1;\r\n        });\r\n\r\n        for (let i = 0; i < list.length - 1; i++) {\r\n            let e1 = list[i];\r\n            let e2 = list[i + 1];\r\n            if (e1.position.line == e2.position.line && e1.position.column + 10 > e2.position.column) {\r\n                if (this.errorLevelCompare(e1.level, e2.level) == 1) {\r\n                    list.splice(i + 1, 1);\r\n                } else {\r\n                    list.splice(i, 1);\r\n                }\r\n                i--;\r\n            }\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    errorLevelCompare(level1: ErrorLevel, level2: ErrorLevel): number {\r\n        if (level1 == \"error\") return 1;\r\n        if (level2 == \"error\") return 2;\r\n        if (level1 == \"warning\") return 1;\r\n        if (level2 == \"warning\") return 2;\r\n        return 1;\r\n    }\r\n}\r\n\r\n\r\nexport class ModuleStore {\r\n\r\n    private modules: Module[] = [];\r\n    private moduleMap: Map<string, Module> = new Map();\r\n\r\n    dirty: boolean = false;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    findModuleById(module_id: number): Module {\r\n        for (let module of this.modules) {\r\n            if (module.file.id == module_id) return module;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    copy(): ModuleStore {\r\n        let ms: ModuleStore = new ModuleStore(this.main);\r\n        for (let m of this.modules) {\r\n            ms.putModule(m.copy());\r\n        }\r\n        return ms;\r\n    }\r\n\r\n    findModuleByFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                return m;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        for (let m of this.modules) {\r\n            if (m.hasErrors()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getFirstModule(): Module {\r\n        if (this.modules.length > 0) {\r\n            for (let mo of this.modules) {\r\n                return mo;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    isDirty(): boolean {\r\n\r\n        if (this.dirty) {\r\n            this.dirty = false;\r\n            return true;\r\n        }\r\n\r\n        let dirty = false;\r\n        for (let m of this.modules) {\r\n            if (m.file.dirty) {\r\n                dirty = true;\r\n                break;\r\n            }\r\n        }\r\n        return dirty;\r\n    }\r\n\r\n\r\n    getModules(includeSystemModules: boolean, excludedModuleName?: String): Module[] {\r\n        let ret = [];\r\n        for (let m of this.modules) {\r\n            if (m.file.name != excludedModuleName) {\r\n                ret.push(m);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    putModule(module: Module) {\r\n        this.modules.push(module);\r\n        this.moduleMap[module.file.name] = module;\r\n    }\r\n\r\n    removeModuleWithFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                this.removeModule(m);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n\r\n        if (this.modules.indexOf(module) < 0) return;\r\n\r\n        this.modules.splice(this.modules.indexOf(module), 1);\r\n        this.moduleMap[module.file.name] = undefined;\r\n        this.dirty = true;\r\n    }\r\n\r\n    getModule(moduleName: string): Module {\r\n        return this.moduleMap[moduleName];\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type ButtonToggler = (state: boolean) => void;\r\n\r\nexport type Action = (name: string, buttonToggler?: ButtonToggler, pressed_key?: string) => void;\r\n\r\nexport type ActionEntry = {\r\n    text?: string,\r\n    keys: string[],\r\n    action: Action,\r\n    identifier: string, // name of Action is copied automatically to name of ActionEntry\r\n    active: boolean\r\n}\r\n\r\nexport class ActionManager {\r\n\r\n    actions: { [actionIdentifier: string]: ActionEntry } = { };\r\n\r\n    keyEntries: { [key: string]: ActionEntry[] } = {};\r\n\r\n    buttons: { [actionIdentifier: string]: JQuery<HTMLElement>[] } = {};\r\n\r\n    constructor(private $mainElement: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public init(){\r\n\r\n        let $element:JQuery<any> = this.$mainElement;\r\n        \r\n        if($element == null) $element = jQuery(document);\r\n\r\n        let that = this;\r\n        $element.on(\"keydown\", function (event: JQuery.KeyDownEvent) { \r\n            if(event != null){\r\n                that.executeKeyDownEvent(event); \r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    trigger(actionIdentifier: string) {\r\n        let ae = this.actions[actionIdentifier];\r\n        if(ae != null){\r\n            ae.action(actionIdentifier, null, \"\");\r\n        }\r\n    }\r\n\r\n\r\n    public registerAction(identifier: string, keys: string[], action: Action, text: string = \"\", button?: JQuery<HTMLElement>){\r\n        let ae: ActionEntry = {\r\n            action: action,\r\n            identifier: identifier,\r\n            keys: keys,\r\n            text: text,\r\n            active: true\r\n        };\r\n\r\n        this.actions[identifier] = ae;\r\n\r\n        for(let key of keys){\r\n            if(this.keyEntries[key.toLowerCase()] == null){\r\n                this.keyEntries[key.toLowerCase()] = [];\r\n            }\r\n            this.keyEntries[key.toLowerCase()].push(ae);\r\n        }\r\n\r\n        if(button != null){\r\n            if(this.buttons[identifier] == null){\r\n                this.buttons[identifier] = [];\r\n            }\r\n            this.buttons[identifier].push(button);\r\n\r\n            let t = text;\r\n            if(keys.length > 0){\r\n                t += \" [\" + keys.join(\", \") + \"]\";\r\n            }\r\n\r\n            button.attr(\"title\", t);\r\n\r\n            button.on('mousedown', () => {\r\n                if(ae.active){\r\n                    action(identifier, null, \"mousedown\");\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public isActive(actionIdentifier: string): boolean {\r\n\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae == null) return false;\r\n\r\n        return ae.active;\r\n    \r\n    }\r\n\r\n    public setActive(actionIdentifier: string, active: boolean){\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae != null){\r\n            ae.active = active;\r\n        }\r\n\r\n        let buttons = this.buttons[actionIdentifier];\r\n        if(buttons != null){\r\n            for(let button of buttons){\r\n                if(active){\r\n                    button.addClass('jo_active');\r\n                } else {\r\n                    button.removeClass('jo_active');\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public executeKeyDownEvent(event: JQuery.KeyDownEvent) {\r\n\r\n        if(document.activeElement.tagName.toLowerCase() == \"input\"){\r\n            return;\r\n        }\r\n\r\n        if (event.keyCode <= 18 && event.keyCode >= 16) {\r\n            return; // ctrl, alt, shift\r\n        }\r\n\r\n        let key: string = \"\";\r\n\r\n        if (event.ctrlKey) {\r\n            key += \"ctrl+\";\r\n        }\r\n\r\n        if (event.shiftKey) {\r\n            key += \"shift+\";\r\n        }\r\n\r\n        if (event.altKey) {\r\n            key += \"alt+\";\r\n        }\r\n\r\n        if(event.key != null){\r\n            key += event.key.toLowerCase();\r\n        }\r\n\r\n        let actionEntries = this.keyEntries[key];\r\n\r\n        if(actionEntries != null){\r\n            for(let actionEntry of actionEntries){\r\n                if (actionEntry.active) {\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    actionEntry.action(actionEntry.identifier, null, key);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { escapeHtml } from \"./StringTools.js\";\r\n\r\nexport function makeEditable(elementWithText: JQuery<HTMLElement>,\r\n    elementToReplace: JQuery<HTMLElement>,\r\n    renameDoneCallback: (newContent: string) => void, selectionRange: { start: number, end: number } = null) {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    if (elementToReplace == null) {\r\n        elementToReplace = elementWithText;\r\n    }\r\n\r\n    let $input = jQuery('<input type=\"text\" class=\"jo_inplaceeditor\" spellcheck=\"false\">');\r\n    $input.css({\r\n        width: elementToReplace.css('width'),\r\n        height: elementToReplace.css('height'),\r\n        color: elementToReplace.css('color'),\r\n        position: elementToReplace.css('position'),\r\n        \"background-color\": elementToReplace.css('background-color'),\r\n        \"font-size\": elementToReplace.css('font-size'),\r\n        \"font-weight\": elementToReplace.css('font-weight'),\r\n        \"box-sizing\": \"border-box\"\r\n    });\r\n    $input.val(elementWithText.text());\r\n    $input.on(mousePointer + \"down\", (e) => { e.stopPropagation(); })\r\n\r\n    if (selectionRange != null) {\r\n        (<HTMLInputElement>$input[0]).setSelectionRange(selectionRange.start, selectionRange.end);\r\n    }\r\n\r\n    elementToReplace.after($input);\r\n    elementToReplace.hide();\r\n    setTimeout(() => {\r\n        $input.focus();\r\n    }, 300);\r\n\r\n    $input.on(\"keydown.me\", (ev) => {\r\n        if (ev.key == \"Enter\" || ev.key == \"Escape\") {\r\n            $input.off(\"keydown.me\");\r\n            $input.off(\"focusout.me\");\r\n            $input.remove();\r\n            elementToReplace.show();\r\n            let newValue = escapeHtml(<string>$input.val());\r\n            renameDoneCallback(newValue);\r\n            return;\r\n        }\r\n    });\r\n\r\n    $input.on(\"focusout.me\", (ev) => {\r\n        $input.off(\"keydown.me\");\r\n        $input.off(\"focusout.me\");\r\n        $input.remove();\r\n        elementToReplace.show();\r\n        let newValue = escapeHtml(<string>$input.val());\r\n        renameDoneCallback(newValue);\r\n        return;\r\n    });\r\n\r\n}\r\n\r\nexport type ContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: () => void;\r\n    link?: string;\r\n    subMenu?: ContextMenuItem[]\r\n};\r\n\r\nexport function openContextMenu(items: ContextMenuItem[], x: number, y: number): JQuery<HTMLElement> {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    let $contextMenu = jQuery('<div class=\"jo_contextmenu\"></div>');\r\n\r\n    let $openSubMenu: JQuery<HTMLElement> = null;\r\n    let parentMenuItem: ContextMenuItem = null;\r\n\r\n    for (let mi of items) {\r\n        let caption: string = mi.caption;\r\n        if (mi.link != null) {\r\n            caption = `<a href=\"${mi.link}\" target=\"_blank\" class=\"jo_menulink\">${mi.caption}</a>`;\r\n        }\r\n        let $item = jQuery('<div>' + caption + (mi.subMenu != null ? '<span style=\"float: right\"> &nbsp; &nbsp; &gt;</span>' : \"\") + '</div>');\r\n        if (mi.color != null) {\r\n            $item.css('color', mi.color);\r\n        }\r\n        if (mi.link == null) {\r\n            $item.on(mousePointer + 'up.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n                jQuery('.jo_contextmenu').remove();\r\n                jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n                jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n                jQuery(document).off(\"keydown.contextmenu\");\r\n                mi.callback();\r\n            });\r\n            $item.on(mousePointer + 'down.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n            });\r\n        } else {\r\n            let $link = $item.find('a');\r\n            $link.on(mousePointer + \"up\", (event) => {\r\n                event.stopPropagation();\r\n                setTimeout(() => {\r\n                    $item.hide();\r\n                }, 500);\r\n            })\r\n            $link.on(mousePointer + \"down\", (event) => {\r\n                event.stopPropagation();\r\n            })\r\n\r\n        }\r\n\r\n        $item.on(mousePointer + 'move.contextmenu', () => {\r\n            if (mi != parentMenuItem && $openSubMenu != null) {\r\n                $openSubMenu.remove();\r\n                parentMenuItem = null;\r\n                $openSubMenu = null;\r\n            }\r\n            if (mi.subMenu != null) {\r\n                $openSubMenu = openContextMenu(mi.subMenu, $item.offset().left + $item.width(), $item.offset().top);\r\n            }\r\n        });\r\n\r\n        $contextMenu.append($item);\r\n    }\r\n\r\n    jQuery(document).on(mousePointer + \"down.contextmenu\", (e) => {\r\n        jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n        jQuery(document).off(\"keydown.contextmenu\");\r\n        jQuery('.jo_contextmenu').remove();\r\n    })\r\n\r\n    jQuery(document).on(\"keydown.contextmenu\", (ev) => {\r\n        if (ev.key == \"Escape\") {\r\n            jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n            jQuery(document).off(\"keydown.contextmenu\");\r\n            jQuery('.jo_contextmenu').remove();\r\n        }\r\n    });\r\n\r\n    let leftRight = x > window.innerWidth * 0.8 ? \"right\" : \"left\";\r\n    let xp = x > window.innerWidth * 0.8 ? window.innerWidth - x : x;\r\n    let topBottom = y > window.innerHeight * 0.8 ? \"bottom\" : \"top\";\r\n    let yp = y > window.innerHeight * 0.8 ? window.innerHeight - y : y;\r\n\r\n    let css = {};\r\n    css[leftRight] = xp + \"px\";\r\n    css[topBottom] = yp + \"px\";\r\n\r\n    $contextMenu.css(css);\r\n\r\n\r\n    jQuery(\"body\").append($contextMenu);\r\n    $contextMenu.show();\r\n\r\n    return $contextMenu;\r\n}\r\n\r\nexport function makeTabs(tabDiv: JQuery<HTMLElement>) {\r\n    let headings = tabDiv.find('.jo_tabheadings>div').not('.jo_noHeading');\r\n    let tabs = tabDiv.find('.jo_tabs>div');\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    headings.on(mousePointer + \"down\", (ev) => {\r\n        let target = jQuery(ev.target);\r\n        headings.removeClass('jo_active');\r\n        target.addClass('jo_active');\r\n        let tab = tabDiv.find('.' + target.data('target'));\r\n        tabs.removeClass('jo_active');\r\n        tabs.trigger('myhide');\r\n        tab.addClass('jo_active');\r\n        tab.trigger('myshow');\r\n    });\r\n\r\n}\r\n\r\nexport function convertPxToNumber(pxString: string): number {\r\n    pxString = pxString.replace('px', '').trim();\r\n    return Number.parseInt(pxString);\r\n}\r\n\r\nexport function makeDiv(id: string, klass: string = \"\", text: string = \"\", css?: { [id: string]: any }): JQuery<HTMLDivElement> {\r\n\r\n    let s = \"\";\r\n    if (id != null && id != \"\") s += ` id=\"${id}\"`;\r\n\r\n    if (klass != null && klass != \"\") s += ` class=\"${klass}\"`;\r\n\r\n    let div = jQuery(`<div${s}></div>`);\r\n\r\n    if (css != null) {\r\n        div.css(css);\r\n    }\r\n\r\n    if (text != null && text != \"\") {\r\n        div.text(text);\r\n    }\r\n\r\n    return <any>div;\r\n\r\n}\r\n\r\nexport type SelectItem = {\r\n    value: string | number,\r\n    object: any,\r\n    caption: string\r\n}\r\n\r\nexport function setSelectItems($selectElement: JQuery<HTMLSelectElement>, items: SelectItem[], activeItemValue?: string | number) {\r\n    $selectElement.empty();\r\n    items.forEach(item => {\r\n        let selected: string = (item.value == activeItemValue) ? ' selected=\"selected\"' : \"\";\r\n        let element = jQuery(`<option value=${item.value}${selected}>${item.caption}</option>`);\r\n        $selectElement.append(element);\r\n        element.data('object', item.object);\r\n    }\r\n    );\r\n\r\n    $selectElement.data('items', items);\r\n\r\n\r\n}\r\n\r\nexport function getSelectedObject($selectDiv: JQuery<HTMLSelectElement>) {\r\n\r\n    let items: SelectItem[] = $selectDiv.data('items');\r\n\r\n    let selectedValue = $selectDiv.val();\r\n\r\n    return items.find(item => item.value == selectedValue)?.object;\r\n\r\n}\r\n\r\nexport var jo_mouseDetected: boolean = false;\r\nexport function checkIfMousePresent() {\r\n    if (matchMedia('(pointer:fine)').matches) {\r\n        jo_mouseDetected = true;\r\n    }\r\n}\r\n\r\nexport function animateToTransparent($element: JQuery<HTMLElement>, cssProperty: string, startColorRgb: number[], duration: number) {\r\n    let colorPraefix = 'rgba(' + startColorRgb[0] + \", \" + startColorRgb[1] + \", \" + startColorRgb[2] + \", \";\r\n    let value = 1.0;\r\n    let delta = value / (duration / 20);\r\n\r\n    let animate = () => {\r\n        $element.css(cssProperty, colorPraefix + value + \")\");\r\n        value -= delta;\r\n        if (value < 0) {\r\n            $element.css(cssProperty, \"\");\r\n        } else {\r\n            setTimeout(animate, 20);\r\n        }\r\n    }\r\n\r\n    animate();\r\n}\r\n\r\nexport function downloadFile(obj: any, filename: string, isBlob: boolean = false) {\r\n    var blob = isBlob? obj : new Blob([JSON.stringify(obj)], { type: 'text/plain' });\r\n    //@ts-ignore\r\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n        //@ts-ignore\r\n        window.navigator.msSaveOrOpenBlob(blob, filename);\r\n    } else {\r\n        var e = document.createEvent('MouseEvents'),\r\n            a = document.createElement('a');\r\n        a.download = filename;\r\n        a.href = window.URL.createObjectURL(blob);\r\n        a.dataset.downloadurl = ['text/plain', a.download, a.href].join(':');\r\n        //@ts-ignore\r\n        e.initEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\r\n        a.dispatchEvent(e);\r\n        a.remove();\r\n    }\r\n}\r\n\r\n\r\nfunction fallbackCopyTextToClipboard(text) {\r\n    var textArea = document.createElement(\"textarea\");\r\n    textArea.value = text;\r\n\r\n    // Avoid scrolling to bottom\r\n    textArea.style.top = \"0\";\r\n    textArea.style.left = \"0\";\r\n    textArea.style.position = \"fixed\";\r\n\r\n    document.body.appendChild(textArea);\r\n    textArea.focus();\r\n    textArea.select();\r\n\r\n    try {\r\n        var successful = document.execCommand('copy');\r\n    } catch (err) {\r\n        console.error('Fallback: Oops, unable to copy', err);\r\n    }\r\n\r\n    document.body.removeChild(textArea);\r\n}\r\n\r\nexport function copyTextToClipboard(text) {\r\n    if (!navigator.clipboard) {\r\n        fallbackCopyTextToClipboard(text);\r\n        return;\r\n    }\r\n    navigator.clipboard.writeText(text).then(function () {\r\n    }, function (err) {\r\n        console.error('Async: Could not copy text: ', err);\r\n    });\r\n}\r\n","import { LoginRequest, PerformanceData } from \"./Data.js\";\r\n\r\n// export var credentials: { username: string, password: string } = { username: null, password: null };\r\n\r\nexport class PerformanceCollector {\r\n    static performanceData: PerformanceData[] = [];\r\n    static performanceDataCount: number = 0;\r\n    static lastTimeSent: number = performance.now();\r\n\r\n    static registerPerformanceEntry(url: string, startTime: number) {\r\n        let pe: PerformanceData = PerformanceCollector.performanceData.find(pe => pe.url == url);\r\n        if (pe == null) {\r\n            pe = { count: 0, sumTime: 0, url: url };\r\n            PerformanceCollector.performanceData.push(pe);\r\n        }\r\n        pe.count++;\r\n        let dt = Math.round(performance.now() - startTime);\r\n        pe.sumTime += dt;\r\n        PerformanceCollector.performanceDataCount++;\r\n        // console.log(\"Performance entry for path \" + pe.url + \": \" + dt + \" ms, aggregated: \" + pe.sumTime + \" for \" + pe.count + \" requests.\");\r\n    }\r\n\r\n    static sendDataToServer() {\r\n        if (performance.now() - PerformanceCollector.lastTimeSent > 3 * 60 * 1000) {\r\n            let request = {\r\n                data: PerformanceCollector.performanceData\r\n            }\r\n\r\n            PerformanceCollector.performanceData = [];\r\n            PerformanceCollector.performanceDataCount = 0;\r\n            PerformanceCollector.lastTimeSent = performance.now();\r\n\r\n            ajax(\"collectPerformanceData\", request, () => { })\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport function ajax(url: string, request: any, successCallback: (response: any) => void,\r\n\r\n    errorCallback?: (message: string) => void) {\r\n\r\n    showNetworkBusy(true);\r\n    let time = performance.now();\r\n\r\n    $.ajax({\r\n        type: 'POST',\r\n        async: true,\r\n        data: JSON.stringify(request),\r\n        contentType: 'application/json',\r\n        url: \"servlet/\" + url,\r\n        success: function (response: any) {\r\n\r\n            PerformanceCollector.registerPerformanceEntry(url, time);\r\n\r\n            showNetworkBusy(false);\r\n            if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n                let error = \"Fehler bei der Bearbeitung der Anfrage\"\r\n                if (response.message != null) error = response.message;\r\n\r\n                if (error == \"Not logged in\") {\r\n                    // setTimeout(() => newLogin(url, request, successCallback, errorCallback), 10000);\r\n                    // location.reload();\r\n                }\r\n\r\n                if (errorCallback) errorCallback(error);\r\n            } else {\r\n                successCallback(response);\r\n            }\r\n            return;\r\n\r\n        },\r\n        error: function (jqXHR, message) {\r\n            showNetworkBusy(false);\r\n            if (errorCallback) {\r\n                let statusText = \"Server nicht erreichbar.\"\r\n                if (jqXHR.status != 0) {\r\n                    statusText = \"\" + jqXHR.status\r\n                }\r\n                errorCallback(message + \": \" + statusText);\r\n                return;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function showNetworkBusy(busy: boolean) {\r\n    if (busy) {\r\n        jQuery('.jo_network-busy').css('visibility','visible');\r\n    } else {\r\n        jQuery('.jo_network-busy').css('visibility','hidden');\r\n    }\r\n}\r\n\r\n\r\n","import { DatabaseData } from \"../communication/Data.js\";\r\n\r\nexport class WDatabase {\r\n\r\n    id: number;\r\n    name: string;\r\n\r\n    templateDump: Uint8Array;\r\n    based_on_template_id: number;\r\n    templateName: string;\r\n\r\n    statements: string[];\r\n    published_to: number;\r\n    version: number;\r\n    description: string;\r\n    owner_id: number;\r\n\r\n    static fromDatabaseData(data: DatabaseData, version: number): WDatabase {\r\n\r\n        let db = new WDatabase();\r\n\r\n        db.id = data.id;\r\n        db.name = data.name;\r\n        db.statements = data.statements;\r\n        db.published_to = data.published_to;\r\n        db.version = version;\r\n        db.description = data.description;\r\n        db.templateDump = null;\r\n        db.based_on_template_id = data.based_on_template_id;\r\n        db.owner_id = data.owner_id;\r\n        return db;\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n","export class CacheManager {\r\n    \r\n    fetchTemplateFromCache(databaseId: number, callback: (templateDump: Uint8Array) => void) {\r\n        if(databaseId == null){callback(null); return;}\r\n        let that = this;\r\n        if(!this.cacheAvailable()) callback(null);\r\n        this.getCache((cache) => {\r\n            cache.match(that.databaseIdToCacheIdentifier(databaseId)).then(\r\n                (value)=>{\r\n                    value.arrayBuffer().then((buffer) => callback(new Uint8Array(buffer)));\r\n                })\r\n                .catch(() => callback(null));\r\n        })        \r\n    }\r\n\r\n    saveTemplateToCache(databaseId: number, templateDump: Uint8Array) {\r\n        if(!this.cacheAvailable()) return;\r\n        let that = this;\r\n        this.getCache((cache) => {\r\n            cache.put(that.databaseIdToCacheIdentifier(databaseId), new Response(templateDump));\r\n        })        \r\n    }\r\n\r\n    cacheAvailable(): boolean {\r\n        return 'caches' in self;\r\n    }\r\n\r\n    getCache(callback: (cache: Cache) => void) {\r\n        caches.open('my-cache').then(callback);\r\n    }\r\n\r\n    databaseIdToCacheIdentifier(databaseId: number): string {\r\n        return \"/onlineIdeTemplateDb\" + databaseId;\r\n    }\r\n\r\n}","import { Main } from \"../main/Main.js\";\nimport { ajax } from \"./AjaxHelper.js\";\nimport { GetWebSocketTokenResponse } from \"./Data.js\";\nimport { NetworkManager } from \"./NetworkManager.js\";\n\ntype SubscriptionMessageFromClient = {\n    command: number,  // 1 == \"subscribe\", 2 == \"disconnect\"\n    // 3 == \"keepalive request\"\n    token?: string   // when \"subscribe\"\n}\n\ntype SubscriptionMessageFromServer = {\n    command: number // 1 == Acknoledge Connection, 2 == Notify, 3 == disconnect, 4 == keep alive response\n}\n\ntype NotifierState = \"connecting\" | \"connected\" | \"subscribed\" | \"disconnected\";\n\nexport class NotifierClient {\n\n    connection: WebSocket;\n    state: NotifierState;\n\n    constructor(private main: Main, private networkManager: NetworkManager){\n        this.connect();\n    }\n\n    connect() {\n        this.state = \"connecting\";\n\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\n\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/subscriptionwebsocket\";\n            this.connection = new WebSocket(url);\n\n            this.connection.onerror = (error: Event) => { this.onError(error); }\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\n\n            this.connection.onopen = (event: Event) => {\n                let request: SubscriptionMessageFromClient = {\n                    command: 1,   // \"subscribe\"\n                    token: response.token\n                }\n\n                this.state = \"connected\";\n                this.sendIntern(JSON.stringify(request));\n\n            }\n\n            let that = this;\n            setTimeout(() => {\n                if(this.state != \"subscribed\"){\n                    this.networkManager.forcedUpdateEvery = 1;\n                    this.networkManager.counterTillForcedUpdate = 1;\n                }\n            }, 7000);\n\n        });\n    }\n\n    disconnect(){\n        let request: SubscriptionMessageFromClient = {\n            command: 2   // \"disconnect\"\n        }\n\n        this.state = \"connected\";\n        this.sendIntern(JSON.stringify(request));\n\n    }\n\n    unsentMessages: string[] = [];\n    sendIntern(message: string) {\n\n        if (this.state != \"disconnected\") {\n            try {\n                this.connection.send(message);\n            } catch (exception) {\n                console.log(exception);\n            }\n        }\n    }\n\n    onClose(event: CloseEvent) {\n        this.state = \"disconnected\";\n    }\n\n    onMessage(event: MessageEvent) {\n\n        let response: SubscriptionMessageFromClient = JSON.parse(event.data);\n        if (response.command == undefined) return;\n\n        // 1 == Acknoledge Connection, 2 == Notify, 3 == disconnect, 4 == keep alive response\n        switch (response.command) {\n            case 1: // Acknoledge Connection\n                this.state = \"subscribed\";\n                break;\n            case 2: // Notify\n                this.networkManager.sendUpdates(() => {}, true);\n                break;\n            case 3: // disconnect\n                this.state = \"disconnected\";\n                break;\n            case 4: // keep alive response\n                break;\n        }\n    }\n\n    onError(error: Event) {\n        console.log(\"Fehler beim Notifier-Websocket\");\n    }\n\n}","import { Main } from \"../main/Main.js\";\r\nimport { ajax } from \"./AjaxHelper.js\";\r\nimport { WorkspaceData, FileData, SendUpdatesRequest, SendUpdatesResponse, CreateOrDeleteFileOrWorkspaceRequest, CRUDResponse, UpdateUserSettingsRequest, UpdateUserSettingsResponse, DuplicateWorkspaceRequest, DuplicateWorkspaceResponse, ClassData, DistributeWorkspaceRequest, DistributeWorkspaceResponse, GetDatabaseRequest, getDatabaseResponse, GetNewStatementsRequest, GetNewStatementsResponse, AddDatabaseStatementsRequest, AddDatabaseStatementsResponse, TemplateListEntry, GetTemplateListRequest, GetTemplateListResponse, CreateWorkspaceData, GetDatabaseSettingsResponse, GetDatabaseSettingsRequest, setDatabaseSecretRequest as SetDatabaseSecretRequest, SetDatabaseSecretResponse, SetPublishedToRequest, SetPublishedToResponse, GetTemplateRequest, RollbackRequest, RollbackResponse } from \"./Data.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { WDatabase } from \"../workspace/WDatabase.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { CacheManager } from \"./CacheManager.js\";\r\nimport { NotifierClient } from \"./NotifierClient.js\";\r\n\r\nexport class NetworkManager {\r\n\r\n    timerhandle: any;\r\n\r\n    ownUpdateFrequencyInSeconds: number = 20;\r\n    teacherUpdateFrequencyInSeconds: number = 5;\r\n\r\n    updateFrequencyInSeconds: number = 20;\r\n    forcedUpdateEvery: number = 4;\r\n    counterTillForcedUpdate: number = 2;\r\n    secondsTillNextUpdate: number = this.updateFrequencyInSeconds;\r\n    errorHappened: boolean = false;\r\n\r\n    interval: any;\r\n\r\n    notifierClient: NotifierClient;\r\n\r\n    constructor(private main: Main, private $updateTimerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initializeTimer() {\r\n\r\n        let that = this;\r\n        this.$updateTimerDiv.find('svg').attr('width', that.updateFrequencyInSeconds);\r\n\r\n        if (this.interval != null) clearInterval(this.interval);\r\n\r\n        this.interval = setInterval(() => {\r\n\r\n            if (that.main.user == null) return; // don't call server if no user is logged in\r\n\r\n            that.secondsTillNextUpdate--;\r\n\r\n            if (that.secondsTillNextUpdate < 0) {\r\n                that.secondsTillNextUpdate = that.updateFrequencyInSeconds;\r\n                this.counterTillForcedUpdate--;\r\n                let forceUpdate = this.counterTillForcedUpdate == 0;\r\n                if (forceUpdate) this.counterTillForcedUpdate = this.forcedUpdateEvery;\r\n                that.sendUpdates(() => { }, forceUpdate);\r\n            }\r\n\r\n            let $rect = this.$updateTimerDiv.find('.jo_updateTimerRect');\r\n\r\n            $rect.attr('width', that.secondsTillNextUpdate + \"px\");\r\n\r\n            if (that.errorHappened) {\r\n                $rect.css('fill', '#c00000');\r\n                this.$updateTimerDiv.attr('title', \"Fehler beim letzten Speichervorgang -> Werd's wieder versuchen\");\r\n            } else {\r\n                $rect.css('fill', '#008000');\r\n                this.$updateTimerDiv.attr('title', that.secondsTillNextUpdate + \" Sekunden bis zum nächsten Speichern\");\r\n            }\r\n\r\n        }, 1000);\r\n\r\n    }\r\n\r\n    initializeNotifierClient(){\r\n        this.notifierClient = new NotifierClient(this.main, this);\r\n    }\r\n\r\n    sendUpdates(callback?: () => void, sendIfNothingIsDirty: boolean = false) {\r\n\r\n        if (this.main.user == null) return;\r\n\r\n        this.main.projectExplorer.writeEditorTextToFile();\r\n\r\n        let userSettings = this.main.user.settings;\r\n\r\n        let wdList: WorkspaceData[] = [];\r\n        let fdList: FileData[] = [];\r\n\r\n        for (let ws of this.main.workspaceList) {\r\n\r\n            if (!ws.saved) {\r\n                wdList.push(ws.getWorkspaceData(false));\r\n                ws.saved = true;\r\n            }\r\n\r\n            for (let m of ws.moduleStore.getModules(false)) {\r\n                if (!m.file.saved) {\r\n                    m.file.text = m.getProgramTextFromMonacoModel();\r\n                    fdList.push(m.getFileData(ws));\r\n                    // console.log(\"Save file \" + m.file.name);\r\n                    m.file.saved = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        let request: SendUpdatesRequest = {\r\n            workspacesWithoutFiles: wdList,\r\n            files: fdList,\r\n            owner_id: this.main.workspacesOwnerId,\r\n            userId: this.main.user.id,\r\n            language: 1,\r\n            currentWorkspaceId: this.main.getCurrentWorkspace()?.id,\r\n            getModifiedWorkspaces: false\r\n        }\r\n\r\n        let that = this;\r\n        if (wdList.length > 0 || fdList.length > 0 || sendIfNothingIsDirty) {\r\n            ajax('sendUpdates', request, (response: SendUpdatesResponse) => {\r\n                that.errorHappened = !response.success;\r\n                if (!that.errorHappened) {\r\n\r\n                    that.updateWorkspaces(request, response);\r\n\r\n                    if (callback != null) {\r\n                        callback();\r\n                        return;\r\n                    }\r\n                }\r\n            }, () => {\r\n                that.errorHappened = true;\r\n            });\r\n        } else {\r\n            if (callback != null) {\r\n                callback();\r\n                return;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    sendCreateWorkspace(wd: CreateWorkspaceData, owner_id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            wd.id = Math.round(Math.random() * 10000000);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"workspace\",\r\n            data: wd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            wd.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n\r\n    getDatabaseSettings(workspace_id: number, callback: (response: GetDatabaseSettingsResponse) => void) {\r\n        let request: GetDatabaseSettingsRequest = {\r\n            workspaceId: workspace_id\r\n        };\r\n        ajax(\"getDatabaseSettings\", request, (response: GetDatabaseSettingsResponse) => {\r\n            callback(response);\r\n        }, (message) => { alert(message) })\r\n    }\r\n\r\n    setNewSecret(workspace_id: number, kind: string, callback: (secret: string) => void) {\r\n        let request: SetDatabaseSecretRequest = {\r\n            workspaceId: workspace_id,\r\n            secretKind: kind\r\n        };\r\n        ajax(\"setNewSecret\", request, (response: SetDatabaseSecretResponse) => {\r\n            callback(response.secret);\r\n        }, (message) => { alert(message) })\r\n    }\r\n\r\n    setNameAndPublishedTo(workspace_id: number, name: string, published_to: number, description: string, callback: () => void) {\r\n        let request: SetPublishedToRequest = {\r\n            workspaceId: workspace_id,\r\n            databaseName: name,\r\n            publishedTo: published_to,\r\n            description: description\r\n        };\r\n\r\n        ajax(\"setPublishedTo\", request, (response: SetPublishedToResponse) => {\r\n            callback();\r\n        }, (message) => { alert(message) })\r\n    }\r\n\r\n\r\n\r\n    sendCreateFile(m: Module, ws: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        let fd: FileData = m.getFileData(ws);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"file\",\r\n            data: fd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            m.file.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDuplicateWorkspace(ws: Workspace, callback: (error: string, workspaceData?: WorkspaceData) => void) {\r\n\r\n        let request: DuplicateWorkspaceRequest = {\r\n            workspace_id: ws.id,\r\n            language: 1\r\n        }\r\n\r\n        ajax(\"duplicateWorkspace\", request, (response: DuplicateWorkspaceResponse) => {\r\n            callback(response.message, response.workspace)\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDistributeWorkspace(ws: Workspace, klasse: ClassData, student_ids: number[], callback: (error: string) => void) {\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request: DistributeWorkspaceRequest = {\r\n                workspace_id: ws.id,\r\n                class_id: klasse?.id,\r\n                student_ids: student_ids,\r\n                language: 1\r\n            }\r\n\r\n            ajax(\"distributeWorkspace\", request, (response: DistributeWorkspaceResponse) => {\r\n                callback(response.message)\r\n            }, callback);\r\n\r\n        }, false);\r\n\r\n    }\r\n\r\n\r\n    sendDeleteWorkspaceOrFile(type: \"workspace\" | \"file\", id: number, callback: (error: string) => void) {\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"delete\",\r\n            entity: type,\r\n            id: id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            if (response.success) {\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendUpdateUserSettings(callback: (error: string) => void) {\r\n\r\n        let request: UpdateUserSettingsRequest = {\r\n            settings: this.main.user.settings,\r\n            userId: this.main.user.id,\r\n            current_workspace_id: this.main.getCurrentWorkspace()?.id\r\n        }\r\n\r\n        ajax(\"updateUserSettings\", request, (response: UpdateUserSettingsResponse) => {\r\n            if (response.success) {\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n\r\n    getNewStatements(workspace: Workspace, callback: (statements: string[], firstNewStatementIndex: number) => void) {\r\n        let request: GetNewStatementsRequest = {\r\n            workspaceId: workspace.id,\r\n            version_before: workspace.database.version\r\n        }\r\n\r\n        ajax(\"getNewStatements\", request, (response: GetNewStatementsResponse) => {\r\n            if (response.success) {\r\n                callback(response.newStatements, response.firstNewStatementIndex);\r\n            }\r\n        });\r\n    }\r\n\r\n    AddDatabaseStatements(workspace: Workspace, statements: string[], callback: (statements_before: string[], new_version: number) => void) {\r\n        let request: AddDatabaseStatementsRequest = {\r\n            workspaceId: workspace.id,\r\n            version_before: workspace.database.version,\r\n            statements: statements\r\n        }\r\n\r\n        ajax(\"addDatabaseStatements\", request, (response: AddDatabaseStatementsResponse) => {\r\n            if (response.success) {\r\n                callback(response.statements_before, response.new_version);\r\n            }\r\n        });\r\n    }\r\n\r\n    fetchDatabase(workspace: Workspace, callback: (error: string) => void) {\r\n\r\n        let cacheManager: CacheManager = new CacheManager();\r\n\r\n        let request: GetDatabaseRequest = {\r\n            workspaceId: workspace.id\r\n        }\r\n\r\n        ajax(\"getDatabase\", request, (response: getDatabaseResponse) => {\r\n            if (response.success) {\r\n\r\n                workspace.database = WDatabase.fromDatabaseData(response.database, response.version)\r\n                cacheManager.fetchTemplateFromCache(workspace.database.based_on_template_id, (templateDump: Uint8Array) => {\r\n\r\n                    if (templateDump != null) {\r\n                        // @ts-ignore\r\n                        workspace.database.templateDump = pako.inflate(templateDump);\r\n                        callback(null);\r\n                        return;\r\n                    } else {\r\n                        if (workspace.database.based_on_template_id == null) {\r\n                            callback(null);\r\n                            return\r\n                        }\r\n                        this.fetchTemplate(workspace.id, (template) => {\r\n                            if (template != null) {\r\n                                cacheManager.saveTemplateToCache(workspace.database.based_on_template_id, template);\r\n                                // @ts-ignore\r\n                                workspace.database.templateDump = pako.inflate(template);\r\n                                callback(null);\r\n                                return;\r\n                            } else {\r\n                                callback(\"Konnte das Template nicht laden.\");\r\n                                return;\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    fetchTemplate(workspaceId: number, callback: (template: Uint8Array) => void) {\r\n        let request: GetTemplateRequest = {\r\n            workspaceId: workspaceId\r\n        }\r\n\r\n        $.ajax({\r\n            type: 'POST',\r\n            async: true,\r\n            data: JSON.stringify(request),\r\n            contentType: 'application/json',\r\n            url: \"servlet/getTemplate\",\r\n            xhrFields: { responseType: 'arraybuffer' },\r\n            success: function (response: any) {\r\n                callback(new Uint8Array(response));\r\n            },\r\n            error: function (jqXHR, message) {\r\n                alert(\"Konnte das Template nicht laden.\");\r\n                callback(null);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    fetchTemplateList(callback: (templateList: TemplateListEntry[]) => void) {\r\n        let request: GetTemplateListRequest = { user_id: this.main.user.id }\r\n\r\n        ajax(\"getTemplateList\", request, (response: GetTemplateListResponse) => {\r\n            if (response.success) {\r\n                callback(response.templateList);\r\n            } else {\r\n                callback([]);\r\n            }\r\n        }, (message) => {\r\n            alert(message);\r\n            callback([]);\r\n        })\r\n\r\n    }\r\n\r\n    updateWorkspaces(sendUpdatesRequest: SendUpdatesRequest, sendUpdatesResponse: SendUpdatesResponse) {\r\n\r\n        let idToRemoteWorkspaceDataMap: Map<number, WorkspaceData> = new Map();\r\n\r\n        let fileIdsSended = [];\r\n        sendUpdatesRequest.files.forEach(file => fileIdsSended.push(file.id));\r\n\r\n        sendUpdatesResponse.workspaces.workspaces.forEach(wd => idToRemoteWorkspaceDataMap.set(wd.id, wd));\r\n\r\n        let newWorkspaceNames: string[] = [];\r\n\r\n        for (let remoteWorkspace of sendUpdatesResponse.workspaces.workspaces) {\r\n\r\n            let localWorkspaces = this.main.workspaceList.filter(ws => ws.id == remoteWorkspace.id);\r\n\r\n            // Did student get a workspace from his/her teacher?\r\n            if (localWorkspaces.length == 0) {\r\n                newWorkspaceNames.push(remoteWorkspace.name);\r\n                this.createNewWorkspaceFromWorkspaceData(remoteWorkspace);\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        for (let workspace of this.main.workspaceList) {\r\n            let remoteWorkspace: WorkspaceData = idToRemoteWorkspaceDataMap.get(workspace.id);\r\n            if (remoteWorkspace != null) {\r\n                let idToRemoteFileDataMap: Map<number, FileData> = new Map();\r\n                remoteWorkspace.files.forEach(fd => idToRemoteFileDataMap.set(fd.id, fd));\r\n\r\n                let idToModuleMap: Map<number, Module> = new Map();\r\n                // update/delete files if necessary\r\n                for (let module of workspace.moduleStore.getModules(false)) {\r\n                    let fileId = module.file.id;\r\n                    idToModuleMap.set(fileId, module);\r\n                    let remoteFileData = idToRemoteFileDataMap.get(fileId);\r\n                    if (remoteFileData == null) {\r\n                        this.main.projectExplorer.fileListPanel.removeElement(module);\r\n                        this.main.currentWorkspace.moduleStore.removeModule(module);\r\n                    } else if (remoteFileData.version > module.file.version) {\r\n                        if (fileIdsSended.indexOf(fileId) < 0 || remoteFileData.forceUpdate) {\r\n                            module.file.text = remoteFileData.text;\r\n                            module.model.setValue(remoteFileData.text);\r\n\r\n                            module.file.saved = true;\r\n                            module.lastSavedVersionId = module.model.getAlternativeVersionId()\r\n                        }\r\n                        module.file.version = remoteFileData.version;\r\n                    }\r\n                }\r\n\r\n                // add files if necessary\r\n                for (let remoteFile of remoteWorkspace.files) {\r\n                    if (idToModuleMap.get(remoteFile.id) == null) {\r\n                        this.createFile(workspace, remoteFile);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (newWorkspaceNames.length > 0) {\r\n            let message: string = newWorkspaceNames.length > 1 ? \"Folgende Workspaces hat Deine Lehrkraft Dir gesendet: \" : \"Folgenden Workspace hat Deine Lehrkraft Dir gesendet: \";\r\n            message += newWorkspaceNames.join(\", \");\r\n            alert(message);\r\n        }\r\n\r\n        this.main.projectExplorer.workspaceListPanel.sortElements();\r\n        this.main.projectExplorer.fileListPanel.sortElements();\r\n\r\n    }\r\n\r\n    public createNewWorkspaceFromWorkspaceData(remoteWorkspace: WorkspaceData, withSort: boolean = false) {\r\n        let w = this.main.createNewWorkspace(remoteWorkspace.name, remoteWorkspace.owner_id);\r\n        w.id = remoteWorkspace.id;\r\n        w.sql_history = \"\";\r\n        w.path = remoteWorkspace.path;\r\n        w.isFolder = remoteWorkspace.isFolder;\r\n\r\n        this.main.workspaceList.push(w);\r\n        let path = remoteWorkspace.path.split(\"/\");\r\n        if (path.length == 1 && path[0] == \"\") path = [];\r\n\r\n        let panelElement: AccordionElement = {\r\n            name: remoteWorkspace.name,\r\n            externalElement: w,\r\n            iconClass: \"workspace\",\r\n            isFolder: remoteWorkspace.isFolder,\r\n            path: path\r\n        };\r\n\r\n        this.main.projectExplorer.workspaceListPanel.addElement(panelElement, true);\r\n        w.panelElement = panelElement;\r\n\r\n        for (let fileData of remoteWorkspace.files) {\r\n            this.createFile(w, fileData);\r\n        }\r\n\r\n        if (withSort) {\r\n            this.main.projectExplorer.workspaceListPanel.sortElements();\r\n            this.main.projectExplorer.fileListPanel.sortElements();\r\n        }\r\n    }\r\n\r\n    createFile(workspace: Workspace, remoteFile: FileData) {\r\n        let ae: any = null; //AccordionElement\r\n        if (workspace == this.main.currentWorkspace) {\r\n            ae = {\r\n                name: remoteFile.name,\r\n                externalElement: null\r\n            }\r\n\r\n            this.main.projectExplorer.fileListPanel.addElement(ae, true);\r\n        }\r\n\r\n        let f: any = { // File\r\n            id: remoteFile.id,\r\n            name: remoteFile.name,\r\n            dirty: false,\r\n            saved: true,\r\n            text: remoteFile.text,\r\n            version: remoteFile.version,\r\n            identical_to_repository_version: true,\r\n            workspace_id: workspace.id,\r\n            panelElement: ae\r\n        };\r\n        let m = this.main.projectExplorer.getNewModule(f); //new Module(f, this.main);\r\n        if (ae != null) ae.externalElement = m;\r\n        let modulStore = workspace.moduleStore;\r\n        modulStore.putModule(m);\r\n\r\n    }\r\n\r\n    rollback(callback: (error: string, rollbackLocalNeeded: boolean) => void) {\r\n        let workspace = this.main.currentWorkspace;\r\n        let request: RollbackRequest = { workspaceId: workspace.id, version: workspace.database.version }\r\n\r\n        ajax(\"rollback\", request, (response: RollbackResponse) => {\r\n            if (response.success) {\r\n                \r\n                callback(null, workspace.database.version > response.new_version);\r\n            } else {\r\n                alert(response.message);\r\n                callback(response.message, false);\r\n            }\r\n        }, (message) => {\r\n            alert(message);\r\n            callback(message, false);\r\n        })\r\n\r\n    }\r\n\r\n\r\n}","import { UploadTemplateResponse } from \"../communication/Data.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\n\r\nexport class TemplateUploader {\r\n\r\n    uploadCurrentDatabase(workspace_id: number, main: Main, dump: Uint8Array | null, \r\n        reason: \"publishDatabaseAsTemplate\" | \"uploadBaseTemplateForWorkspace\",\r\n        callback: (response: UploadTemplateResponse) => void = () => { }) {\r\n            \r\n        main.waitOverlay.show('Bitte warten, lade Vorlage auf den Server hoch ...');\r\n        if (workspace_id >= 0) {\r\n            let dbTool = main.getDatabaseTool();\r\n            dbTool.export((buffer) => {\r\n                // @ts-ignore\r\n                buffer = pako.deflate(buffer);\r\n                this.uploadIntern(buffer, workspace_id, reason, main, callback);\r\n            }, (error) => {\r\n                alert(\"Fehler beim Exportieren der Datenbank: \" + error)\r\n                main.waitOverlay.hide();\r\n            })\r\n        } else {\r\n            this.uploadIntern(dump, -1, reason, main, callback);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    private uploadIntern(buffer: Uint8Array, workspace_id: number,\r\n        reason: \"publishDatabaseAsTemplate\" | \"uploadBaseTemplateForWorkspace\",\r\n        main: Main, callback: (response: UploadTemplateResponse) => void) {\r\n\r\n        $.ajax({\r\n            type: 'POST',\r\n            async: true,\r\n            contentType: 'application/octet-stream',\r\n            data: buffer,\r\n            processData: false,\r\n            headers: { 'x-workspaceid': \"\" + workspace_id, \"x-reason\": reason },\r\n            url: \"servlet/uploadTemplate\",\r\n            success: function (response: UploadTemplateResponse) {\r\n                main.waitOverlay.hide();\r\n                callback(response);\r\n                return;\r\n\r\n            },\r\n            error: function (jqXHR, message) {\r\n                alert('message');\r\n                main.waitOverlay.hide();\r\n            }\r\n        }\r\n        );\r\n        return buffer;\r\n    }\r\n}","import { CreateWorkspaceData, WorkspaceData } from \"../../communication/Data.js\";\r\nimport { copyTextToClipboard, makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { TemplateUploader } from \"../../tools/TemplateUploader.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\nexport class DatabaseSettingsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private workspace: Workspace) {\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Datenbank-Einstellungen</div>\r\n            <div style=\"width: 100%; margin-left: 10px\">\r\n                <div class=\"jo_ds_settings\" style=\"margin-left: 0px\">\r\n                <div class=\"jo_ds_settings_caption\">Name der Datenbank:</div><div><input class=\"dialog-input jo_databasename\" value=\"Neue Datenbank\"></input></div>\r\n                </div>\r\n\r\n                <div class=\"jo_ds_settings_caption\" style=\"margin-top: 20px\">\r\n                Zugriffscodes für andere Benutzer:\r\n                </div>\r\n                                \r\n                <div>\r\n                    <table class=\"jo_ds_secret_table\">\r\n                    <tr>\r\n                        <td>Nur Lesen:</td><td class=\"jo_ds_secret jo_ds_secret_read\"></td><td id=\"copySecretTdread\"></td><td><button class=\"jo_small_button jo_button_code_read\">Neuen Code generieren</button></td>\r\n                    <tr>\r\n                        <td>Lesen und schreiben:</td><td class=\"jo_ds_secret jo_ds_secret_write\"></td><td id=\"copySecretTdwrite\"></td><td><button class=\"jo_small_button jo_button_code_write\">Neuen Code generieren</button></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Lesen, schreiben und Struktur verändern:</td><td class=\"jo_ds_secret jo_ds_secret_ddl\"></td><td id=\"copySecretTdddl\"></td><td><button class=\"jo_small_button jo_button_code_ddl\">Neuen Code generieren</button></td>\r\n                    </tr>\r\n                    </table>\r\n                </div>\r\n\r\n                <div class=\"jo_ds_settings_caption\" style=\"margin-top: 20px\">\r\n                Beschreibung:\r\n                </div>\r\n                <div>\r\n                <textarea class=\"jo_ds_settings_description\" maxlength=\"5000\"></textarea>\r\n                </div>\r\n\r\n                <div class=\"jo_ds_settings_caption\" style=\"margin-top: 20px\">\r\n                Datenbank freigeben als Vorlage für andere Benutzer:\r\n                </div>\r\n\r\n                <fieldset id=\"jo_ds_publishedTo\">\r\n                    <input type=\"radio\" id=\"b0\" name=\"publishedFilter\" value=\"0\" checked=\"checked\"><label for=\"b0\">Keine Freigabe</label>\r\n                    <input type=\"radio\" id=\"b1\" name=\"publishedFilter\" value=\"1\"><label for=\"b1\">Freigabe für meine Klasse(n)</label>\r\n                    <input type=\"radio\" id=\"b2\" name=\"publishedFilter\" value=\"2\" style=\"visibility: none\"><label id=\"lb2\" for=\"b2\" style=\"visibility: none\">Freigabe für meine Schule</label>\r\n                    <input type=\"radio\" id=\"b3\" name=\"publishedFilter\" value=\"3\" style=\"visibility: none\"><label id=\"lb3\" for=\"b3\" style=\"visibility: none\">Freigabe für alle Schulen</label>\r\n                </fieldset>\r\n\r\n                <div>\r\n                    <input type=\"checkbox\" id=\"jo_upload_db\" name=\"jo_upload_db\">\r\n                    <label for=\"jo_upload_db\">Aktuellen Zustand der Datenbank als Vorlage hochladen</label>\r\n                </div>\r\n            </div>\r\n\r\n\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_save_button\">Speichern</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n\r\n        let that = this;\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { this.showMainWindow(); });\r\n        jQuery('#jo_ds_save_button').on('click', () => { \r\n            this.saveNameAndPublishedTo();\r\n         })\r\n\r\n        this.setValues();\r\n\r\n        [\"read\", \"write\", \"ddl\"].forEach(kind => {\r\n            jQuery('.jo_button_code_' + kind).on('pointerdown', () => {\r\n                that.main.networkManager.setNewSecret(that.workspace.id, kind, (secret) => {\r\n                    jQuery('.jo_ds_secret_'+kind).text(secret);\r\n                })\r\n            })\r\n            let $copyButton = jQuery('<button class=\"jo_small_button jo_copy_secret_button jo_active\">Kopieren</button>')\r\n            jQuery('#copySecretTd' + kind).append($copyButton);\r\n            $copyButton.on('pointerdown', () => {\r\n                copyTextToClipboard(jQuery('.jo_ds_secret_'+kind).text());\r\n            })\r\n        })\r\n\r\n        jQuery('#jo_ds_publishedTo>input').on('change', (e) => {$('#jo_upload_db').prop('checked', !((<HTMLInputElement>jQuery('#b0')[0]).checked))});\r\n\r\n    }\r\n\r\n    saveNameAndPublishedTo(){\r\n        let published_to = 0;\r\n        jQuery('#jo_ds_publishedTo').find('input').each( (n, element) => {\r\n            let $element = jQuery(element);\r\n            //@ts-ignore\r\n            if(<HTMLInputElement>element.checked){\r\n                published_to = Number.parseInt(<string>$element.attr('value'));\r\n            }\r\n        })\r\n\r\n        this.main.networkManager.setNameAndPublishedTo(this.workspace.id, \r\n            <string>jQuery('.jo_databasename').val(), published_to, <string>jQuery('.jo_ds_settings_description').val(),\r\n             () => {\r\n                 if($('#jo_upload_db').prop('checked')){\r\n                    new TemplateUploader().uploadCurrentDatabase(this.workspace.id, this.main, null, \"publishDatabaseAsTemplate\");                    \r\n                 }\r\n                 this.showMainWindow(); \r\n                })\r\n    }\r\n\r\n    setValues(){\r\n        jQuery('.jo_databasename').val(this.workspace.name);\r\n        this.main.networkManager.getDatabaseSettings(this.workspace.id, (response) => {\r\n            [\"read\", \"write\", \"ddl\"].forEach(kind => {\r\n                jQuery('.jo_ds_secret_' + kind).text(response.secrets[kind]);\r\n            });\r\n            if(this.main.user.is_admin){\r\n                jQuery('#b3').css('visibility', 'visible');\r\n                jQuery('#lb3').css('visibility', 'visible');\r\n            }\r\n            if(this.main.user.is_schooladmin){\r\n                jQuery('#b2').css('visibility', 'visible');\r\n                jQuery('#lb2').css('visibility', 'visible');\r\n            }\r\n            // jQuery('#jo_ds_publishedTo input').attr('checked', '');\r\n            jQuery('#b'+response.publishedTo).prop('checked', true);\r\n\r\n            jQuery('#jo_upload_db').prop('checked', response.publishedTo != 0);\r\n\r\n            jQuery('.jo_ds_settings_description').val(this.workspace.database.description);\r\n        })\r\n    }\r\n\r\n    showMainWindow() {\r\n        jQuery('#main').css('visibility', 'visible');\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n    }\r\n\r\n\r\n\r\n}","import { WorkspaceData } from \"../communication/Data.js\";\r\nimport { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { DatabaseSettingsDialog } from \"../main/gui/DatabaseSettingsDialog.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { WDatabase } from \"./WDatabase.js\";\r\n\r\nexport class Workspace {\r\n    \r\n    name: string;\r\n    path: string;\r\n    isFolder: boolean;\r\n    id: number;\r\n    owner_id: number;\r\n\r\n    version: number;\r\n    \r\n    moduleStore: ModuleStore;\r\n    panelElement: AccordionElement;\r\n    currentlyOpenModule: Module;\r\n    saved: boolean = true;\r\n\r\n    compilerMessage: string;\r\n\r\n    databaseId: number;\r\n    database: WDatabase;\r\n\r\n    sql_history: string;\r\n\r\n    permissions: number;\r\n\r\n    constructor(name: string, private main: MainBase, owner_id: number){\r\n        this.name = name;\r\n        this.owner_id = owner_id;\r\n        this.moduleStore = new ModuleStore(main);\r\n        this.sql_history = \"\";\r\n    }\r\n    \r\n    getWorkspaceData(withFiles: boolean): WorkspaceData {\r\n        let wd: WorkspaceData = {\r\n            name: this.name,\r\n            id: this.id,\r\n            owner_id: this.owner_id,\r\n            currentFileId: this.currentlyOpenModule == null ? null : this.currentlyOpenModule.file.id,\r\n            files: [],\r\n            sql_history: this.sql_history,\r\n            path: \"\",\r\n            isFolder: false,  \r\n            permissions: this.permissions,\r\n            database_id: this.databaseId\r\n        }\r\n\r\n        if(withFiles){\r\n            for(let m of this.moduleStore.getModules(false)){\r\n    \r\n                wd.files.push(m.getFileData(this));\r\n    \r\n            }\r\n        }\r\n\r\n        return wd;\r\n    }\r\n\r\n    renderSettingsButton(panelElement: AccordionElement) {\r\n        let $buttonDiv = panelElement?.$htmlFirstLine?.find('.jo_additionalButtonSettings');\r\n        if ($buttonDiv == null) return;\r\n        \r\n        // let myMain: Main = <Main>this.main;\r\n\r\n            let $button = jQuery('<div class=\"jo_settingsButton img_settings jo_button jo_active\" title=\"Datenbank-Einstellungen...\"></div>');\r\n            $buttonDiv.append($button);\r\n            let that = this;\r\n            $button.on('mousedown', (e) => e.stopPropagation());\r\n            $button.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                new DatabaseSettingsDialog(<any>that.main, that);\r\n\r\n            });\r\n\r\n        // } else {\r\n        //     $buttonDiv.find('.jo_startButton').remove();\r\n        // }\r\n    }\r\n\r\n\r\n    static restoreFromData(ws: WorkspaceData, main: Main): Workspace {\r\n\r\n        let w = new Workspace(ws.name, main, ws.owner_id);\r\n        w.id = ws.id;\r\n        w.path = ws.path;\r\n        w.isFolder = ws.isFolder;\r\n        w.owner_id = ws.owner_id;\r\n        w.sql_history = ws.sql_history;\r\n        w.permissions = ws.permissions;\r\n        w.databaseId = ws.database_id;\r\n\r\n        for(let f of ws.files){\r\n\r\n            let m: Module = Module.restoreFromData(f, main);\r\n            w.moduleStore.putModule(m);\r\n\r\n            if(f.id == ws.currentFileId){\r\n                w.currentlyOpenModule = m;\r\n            }\r\n\r\n        }\r\n\r\n        return w;\r\n\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        \r\n        return this.moduleStore.hasErrors();\r\n        \r\n    }\r\n\r\n    getModuleByMonacoModel(model: monaco.editor.ITextModel): Module {\r\n        for(let m of this.moduleStore.getModules(false)){\r\n            if(m.model == model){\r\n                return m;\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    }\r\n}\r\n\r\n","import { Editor } from \"./Editor.js\";\r\nimport { CompletionHint, Module } from \"../../compiler/parser/Module.js\";\r\nimport { Symbol, SymbolTable } from \"../../compiler/parser/SymbolTable.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { Column, Table } from \"../../compiler/parser/SQLTable.js\";\r\n\r\nexport class MyCompletionItemProvider implements monaco.languages.CompletionItemProvider {\r\n\r\n    isConsole: boolean;\r\n\r\n    public triggerCharacters: string[] = ['.', 'abcdefghijklmnopqrstuvwxyzäöüß_ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜ', ' ', ',', '('];\r\n\r\n    public keywordCompletionItems: Map<string, monaco.languages.CompletionItem> = new Map();\r\n\r\n    constructor(private main: MainBase) {\r\n        this.setupKeywordCompletionItems();\r\n    }\r\n\r\n    first: boolean = true;\r\n    provideCompletionItems(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, \r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n\r\n\r\n        let module: Module =\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null || module.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n            let that = this;\r\n\r\n            let wfc = function waitForCompiler(){\r\n                if(module.file.dirty){\r\n                    setTimeout(() => {\r\n                        wfc();\r\n                    }, 100);\r\n                } else {\r\n                    resolve(that.provideCompletionItemsIntern(model, position, context, token));\r\n                }\r\n            }\r\n        \r\n            wfc();\r\n\r\n        })\r\n\r\n        // Promise.resolve({\r\n        //     suggestions: completionItems\r\n        // });\r\n    }\r\n\r\n    provideCompletionItemsIntern(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, \r\n        token: monaco.CancellationToken): monaco.languages.CompletionList {\r\n\r\n        setTimeout(() => {\r\n            //@ts-ignore\r\n            let sw = this.main.getMonacoEditor()._contentWidgets[\"editor.widget.suggestWidget\"].widget;\r\n            if (this.first) {\r\n                sw.toggleDetails();\r\n                this.first = false;\r\n            }\r\n        }, 500);\r\n\r\n        let module: Module =\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null || module.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (this.isStringLiteral(module, position)) return null;\r\n\r\n        let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let symbolTable = module.mainSymbolTable.findTableAtPosition(position.lineNumber, position.column);\r\n        let completionHint: CompletionHint = module.getCompletionHint(position.lineNumber, position.column);\r\n        if (completionHint == null) {\r\n            completionHint = {\r\n                fromColumn: 0,\r\n                toColumn: 0,\r\n                fromLine: 0,\r\n                toLine: 0,\r\n                hintColumns: false,\r\n                hintTables: false,\r\n                hintKeywords: []\r\n            }\r\n        }\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n        this.addKeywordCompletionItems(completionHint, completionItems);\r\n\r\n        let dotMatch = textUntilPosition.match(/.*\\s([\\wöäüÖÄÜß]*)(\\.)([\\wöäüÖÄÜß]*)$/);\r\n\r\n        let ibMatch = textAfterPosition.match(/^([\\wöäüÖÄÜß]*)/);\r\n        let identifierAndBracketAfterCursor = \"\";\r\n        if (ibMatch != null && ibMatch.length > 0) {\r\n            identifierAndBracketAfterCursor = ibMatch[0];\r\n        }\r\n\r\n        if (dotMatch == null) {\r\n            this.addIdentifierCompletionItems(completionHint, symbolTable, completionItems);\r\n        } else {\r\n            this.addDotCompletionItems(position, dotMatch, identifierAndBracketAfterCursor, symbolTable, completionItems);\r\n        }\r\n\r\n        let word = model.getWordUntilPosition(position);\r\n        let replaceWordRange = { startColumn: word.startColumn, startLineNumber: position.lineNumber, endColumn: word.endColumn, endLineNumber: position.lineNumber };\r\n        let insertAfterCursorRange = { startColumn: position.column, startLineNumber: position.lineNumber, endColumn: position.column, endLineNumber: position.lineNumber }\r\n\r\n        for (let item of completionItems) {\r\n            if (item.range == null) {\r\n                if (item.insertText.startsWith(\",\")) {\r\n                    item.range = insertAfterCursorRange;\r\n                } else {\r\n                    item.range = replaceWordRange;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (completionHint.dontHint != null) {\r\n            completionItems = completionItems.filter(item => completionHint.dontHint.indexOf(item.insertText) < 0);\r\n        }\r\n\r\n        return {\r\n            suggestions: completionItems\r\n        };\r\n    }\r\n\r\n\r\n    addDotCompletionItems(position: monaco.Position, dotMatch: RegExpMatchArray, identifierAndBracketAfterCursor: string,\r\n        symbolTable: SymbolTable, completionItems: monaco.languages.CompletionItem[]) {\r\n        let textAfterDot = dotMatch[3];\r\n        let textBeforeDot = dotMatch[1];\r\n        let dotColumn = position.column - textAfterDot.length - 1;\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - textAfterDot.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n        for (let symbol of symbolTable.symbolList) {\r\n            if (symbol.table != null) {\r\n                let identifier: string = symbol.table.identifier;\r\n                if (symbol.tableAlias != null) identifier = symbol.tableAlias;\r\n                if (identifier.toLowerCase() == textBeforeDot) {\r\n                    for (let column of symbol.table.columns) {\r\n                        completionItems.push({\r\n                            label: column.identifier,\r\n                            detail: \"Spalte \" + column.identifier + \" der Tabelle \" + symbol.table.identifier,\r\n                            filterText: column.identifier,\r\n                            insertText: column.identifier,\r\n                            insertTextRules: monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                            kind: monaco.languages.CompletionItemKind.Field,\r\n                            range: rangeToReplace\r\n                        })\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    addIdentifierCompletionItems(completionHint: CompletionHint, symbolTable: SymbolTable, completionItems: monaco.languages.CompletionItem[]) {\r\n        let praefix: string = completionHint.praefix == null ? \"\" : completionHint.praefix;\r\n        let suffix: string = completionHint.suffix == null ? \"\" : completionHint.suffix;\r\n\r\n        if (!(completionHint.hintTables || completionHint.hintColumns)) {\r\n            return;\r\n        }\r\n\r\n        let tableIdentifiers: { [identifier: string]: boolean } = {};\r\n\r\n        let st: SymbolTable = symbolTable;\r\n        let columns: { [identifier: string]: Symbol[] } = {};\r\n        let columnIdentifiers: string[] = [];\r\n\r\n        while (st != null) {\r\n            for (let symbol of st.symbolList) {\r\n                if (symbol.column != null) {\r\n                    let columnIdentifier = symbol.column.identifier;\r\n                    if (columns[columnIdentifier] == null) {\r\n                        columns[columnIdentifier] = [symbol];\r\n                        columnIdentifiers.push(columnIdentifier);\r\n                    } else {\r\n                        columns[columnIdentifier].push(symbol);\r\n                    }\r\n                } else if (symbol.table != null && completionHint.hintTables) {\r\n                    if (!tableIdentifiers[symbol.identifier]) {\r\n                        let insertText = praefix + symbol.identifier + suffix;\r\n                        completionItems.push({\r\n                            label: symbol.identifier,\r\n                            detail: \"Tabelle \" + symbol.table.identifier,\r\n                            filterText: symbol.identifier,\r\n                            insertText: insertText,\r\n                            insertTextRules: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                            kind: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemKind.Snippet : monaco.languages.CompletionItemKind.Class,\r\n                            range: undefined,\r\n                            sortText: \"aa\" + symbol.identifier\r\n                        });\r\n                        tableIdentifiers[symbol.identifier] = true;\r\n                    }\r\n                }\r\n            }\r\n            st = st.parent;\r\n        }\r\n\r\n        if (completionHint.hintColumns) {\r\n            for (let ci of columnIdentifiers) {\r\n                let columList = columns[ci];\r\n                let withTable = columList.length > 1 && completionHint.hintColumnsOfTable == null;\r\n                for (let cs of columList) {\r\n                    let text = cs.identifier;\r\n                    if (withTable && cs.identifier == cs.column.identifier.toLowerCase()) {\r\n                        text = (cs.tableAlias == null ? cs.column.table.identifier : cs.tableAlias) + \".\" + text;\r\n                    }\r\n                    if (completionHint.hintColumnsOfTable == null || cs.column?.table?.identifier == completionHint.hintColumnsOfTable) {\r\n                        let insertText = praefix + text + suffix;\r\n                        completionItems.push({\r\n                            label: text,\r\n                            detail: \"Die Spalte \" + cs.column.identifier + \" der Tabelle \" + cs.column.table.identifier,\r\n                            filterText: text,\r\n                            insertText: insertText,\r\n                            insertTextRules: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                            kind: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemKind.Snippet : monaco.languages.CompletionItemKind.Field,\r\n                            range: undefined\r\n                        })\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    keywordToSnippetMap: { [keyword: string]: string } = {\r\n        \"(\": \"(\\n\\t$0\\n)\",\r\n        \"varchar\": \"varchar($1) $0\",\r\n        \"decimal\": \"decimal($1, $2) $0\"\r\n    }\r\n\r\n    addKeywordCompletionItems(completionHint: CompletionHint, completionItems: monaco.languages.CompletionItem[]) {\r\n        let praefix: string = completionHint.praefix == null ? \"\" : completionHint.praefix;\r\n        let suffix: string = completionHint.suffix == null ? \"\" : completionHint.suffix;\r\n\r\n\r\n        for (let text of completionHint.hintKeywords) {\r\n            let insertText = praefix + text + suffix;\r\n            let snippet = this.keywordToSnippetMap[text];\r\n\r\n            let ci = this.keywordCompletionItems.get(text);\r\n            if (ci != null) {\r\n                completionItems.push(ci);\r\n            } else if (snippet != null) {\r\n                let label = snippet.replace(\"$0\", \"\").replace(\"$1\", \"\").replace(\"$2\", \"\").replace(/ /g, \"\").replace(/\\n/g, \"\").replace(/\\t/g, \"\");\r\n                completionItems.push({\r\n                    label: label,\r\n                    detail: \"\",\r\n                    filterText: text,\r\n                    insertText: snippet,\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                })\r\n            } else {\r\n                completionItems.push({\r\n                    label: text,\r\n                    detail: \"\",\r\n                    filterText: text,\r\n                    insertText: text,\r\n                    insertTextRules: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                    kind: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemKind.Snippet : monaco.languages.CompletionItemKind.Keyword,\r\n                    range: undefined,\r\n                    sortText: text == \"from\" ? \"*\" : undefined\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    isStringLiteral(module: Module, position: monaco.Position) {\r\n\r\n        let tokenList = module.tokenList;\r\n        if (tokenList == null || tokenList.length == 0) return false;\r\n\r\n        let posMin = 0;\r\n        let posMax = tokenList.length - 1;\r\n        let pos: number;\r\n\r\n        let watchDog = 1000;\r\n\r\n        while (true) {\r\n            let posOld = pos;\r\n            pos = Math.round((posMax + posMin) / 2);\r\n\r\n            if (posOld == pos) return false;\r\n\r\n            watchDog--;\r\n            if (watchDog == 0) return false;\r\n\r\n            let t = tokenList[pos];\r\n            let p = t.position;\r\n\r\n            if (p.line < position.lineNumber || p.line == position.lineNumber && p.column + p.length < position.column) {\r\n                posMin = pos;\r\n                continue;\r\n            }\r\n\r\n            if (p.line > position.lineNumber || p.line == position.lineNumber && p.column > position.column) {\r\n                posMax = pos;\r\n                continue;\r\n            }\r\n\r\n            return t.tt == TokenType.stringConstant;\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    setupKeywordCompletionItems() {\r\n        this.keywordCompletionItems.set(\"delete from\",\r\n            {\r\n                label: \"delete from <Tabelle> where <Bedingung>\",\r\n                detail: \"Anweisung zum Löschen von Datensätzen\",\r\n                filterText: `delete from`,\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `delete from `,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"drop table\",\r\n            {\r\n                label: \"drop table <Tabelle>\",\r\n                detail: \"Anweisung zum Löschen einer Tabelle\",\r\n                filterText: 'drop table',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `drop table `,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"alter\",\r\n            {\r\n                label: \"alter table <Tabelle> <rename to, rename column, add column, drop column>\",\r\n                detail: \"Anweisung zum Ändern des Schemas (alter table <Tabelle> <rename to, rename column, add column, drop column>)\",\r\n                filterText: 'alter',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `alter table `,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"select\",\r\n            {\r\n                label: \"select <Spalten> from <Tabellen> where <Bedingung>\",\r\n                detail: \"Select-Anweisung\",\r\n                filterText: 'select',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `select * from $1\\nwhere $0\\n`,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"create table\",\r\n            {\r\n                label: \"create table <Tabellenbezeichner> (<Spaltendefinitionen>)\",\r\n                detail: \"Create table-Anweisung (Erstellt eine neue Tabelle)\",\r\n                filterText: 'create',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `create table $1 (\\n\\t$0\\n);`,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        // this.keywordCompletionItems.set(\"from\",\r\n        //     {\r\n        //         label: \"from <Tabellen> where <Bedingung>\",\r\n        //         detail: \"from-Teil der select-Anweisung\",\r\n        //         filterText: 'from',\r\n        //         // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n        //         insertText: `from $1\\nwhere $0\\n`,\r\n        //         command: {\r\n        //             id: \"editor.action.triggerSuggest\",\r\n        //             title: '123',\r\n        //             arguments: []\r\n        //         },\r\n        //         insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n        //         kind: monaco.languages.CompletionItemKind.Snippet,\r\n        //         range: undefined\r\n        //     });\r\n\r\n    }\r\n\r\n\r\n}","import { Module, MethodCallPosition } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\n\r\n\r\nexport class MySignatureHelpProvider implements monaco.languages.SignatureHelpProvider {\r\n\r\n    signatureHelpTriggerCharacters?: readonly string[] = ['(', ',', ';', '<', '>', '=']; // semicolon, <, >, = for for-loop, if, while, ...\r\n    signatureHelpRetriggerCharacters?: readonly string[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    provideSignatureHelp(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let that = this;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            setTimeout(() => {\r\n\r\n                this.main.compileIfDirty();\r\n\r\n                resolve(that.provideSignatureHelpLater(model, position, token, context));\r\n\r\n            }, 300);\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    provideSignatureHelpLater(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model != this.main.getMonacoEditor().getModel());\r\n\r\n        let module: Module = \r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        // let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        // let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let methodCallPositions = module.methodCallPositions[position.lineNumber];\r\n\r\n        if (methodCallPositions == null) return null;\r\n\r\n        let methodCallPosition: MethodCallPosition = null;\r\n        let rightMostPosition: number = -1;\r\n\r\n        for (let i = methodCallPositions.length - 1; i >= 0; i--) {\r\n            let mcp = methodCallPositions[i];\r\n            if (mcp.identifierPosition.column + mcp.identifierPosition.length < position.column\r\n                && mcp.identifierPosition.column > rightMostPosition) {\r\n                if (mcp.rightBracketPosition == null ||\r\n                    (position.lineNumber <= mcp.rightBracketPosition.line && position.column <= mcp.rightBracketPosition.column)\r\n                    || (position.lineNumber < mcp.rightBracketPosition.line)) {\r\n                    methodCallPosition = mcp;\r\n                    rightMostPosition = mcp.identifierPosition.column;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (methodCallPosition == null) return null;\r\n\r\n        return this.getSignatureHelp(methodCallPosition, position);\r\n\r\n\r\n\r\n    }\r\n\r\n    getSignatureHelp(methodCallPosition: MethodCallPosition,\r\n        position: monaco.Position): monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let parameterIndex: number = 0;\r\n\r\n        for (let cp of methodCallPosition.commaPositions) {\r\n            if (cp.line < position.lineNumber || (cp.line == position.lineNumber && cp.column < position.column)) {\r\n                parameterIndex++;\r\n            }\r\n        }\r\n\r\n        let signatureInformationList: monaco.languages.SignatureInformation[] = [];\r\n\r\n        return Promise.resolve({\r\n            value: {\r\n                activeParameter: parameterIndex,\r\n                activeSignature: 0,\r\n                signatures: signatureInformationList\r\n            },\r\n            dispose: () => { }\r\n        });\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\n\r\n\r\n\r\nexport class MyHoverProvider {\r\n\r\n    private static keywordDescriptions: { [keyword: string]: string } = {\r\n        \"print\": \"Die Anweisung ```print``` gibt eine Zeichenkette aus.\",\r\n        \"new\": \"Das Schlüsselwort ```new``` bewirkt die Instanzierung (\\\"Erschaffung\\\") eines neuen Objektes einer Klasse.\",\r\n        \"println\": \"Die Anweisung ```println``` gibt eine Zeichenkette gefolgt von einem Zeilenumbruch aus.\",\r\n        \"while\": \"```\\nwhile (Bedingung) {Anweisungen}\\n```  \\nbewirkt die Wiederholung der Anweisungen solange ```Bedingung == true``` ist.\",\r\n        \"for\": \"```\\nfor(Startanweisung;Solange-Bedingung;Nach_jeder_Wiederholung){Anweisungen}\\n```  \\n\"\r\n            + \"führt zunächst die Startanweisung aus und wiederholt dann die Anweisungen solange ```Bedingung == true``` ist. Am Ende jeder wiederholung wird Nach_jeder_Wiederholung ausgeführt.\",\r\n        \"if\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.  \\nDer ```else```-Teil kann auch weggelassen werden.\",\r\n        \"else\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.\",\r\n        \"switch\": \"```\\nswitch(Selektor){ case Wert_1: Anweisungen_1; break; case Wert_2: Anweisungen_2; break; default: Default-Anweisungen } \\n```  \\nwertet den Selektor-Term aus und führt abhängig vom Termwert Anweisungen_1, Anweisungen_2, ... aus. Entspricht der Termwert keinem der Werte Wert_1, Wert_2, ..., so werden die Default-Anweisungen ausgeführt.\",\r\n        \"%\": \"```\\na % b\\n```  \\n (sprich: 'a modulo b') berechnet den **Rest** der ganzzahligen Division a/b.\",\r\n        \"==\": \"```\\na == b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` gleich sind.  \\nSind a und b **Objekte**, so ergibt ```a == b``` nur dann ```true```, wenn ```a``` und ```b``` auf das **identische** Objekt zeigen.  \\n```==``` nennt man **Vergleichsoperator**.\",\r\n        \"<=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` kleiner oder gleich dem Wert von ```b``` ist.\",\r\n        \">=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` größer oder gleich dem Wert von ```b``` ist.\",\r\n        \"!=\": \"```\\na != b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` **un**gleich sind.  \\nSind ```a``` und ```b``` **Objekte**, so ergibt ```a != b``` dann ```true```, wenn ```a``` und ```b``` **nicht** auf das **identische** Objekt zeigen.  \\n```!=``` nennt man **Ungleich-Operator**.\",\r\n        \"+=\": \"```\\na += b\\n(Kurzschreibweise für a = a + b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erhöht** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"-=\": \"```\\na -= b\\n(Kurzschreibweise für a = a - b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erniedrigt** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"*=\": \"```\\na *= b\\n(Kurzschreibweise für a = a * b)\\n```  \\nbewirkt, dass der Wert von ```a``` mit dem Wert von ```b``` **multipliziert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"/=\": \"```\\na /= b\\n(Kurzschreibweise für a = a / b)\\n```  \\nbewirkt, dass der Wert von ```a``` durch den Wert von ```b``` **dividiert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"++\": \"```\\na++\\n(Kurzschreibweise für a = a + 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins erhöht wird.\",\r\n        \"--\": \"```\\na--\\n(Kurzschreibweise für a = a - 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins eniedrigt wird.\",\r\n        \"=\": \"```\\na = Term\\n```  \\nberechnet den Wert des Terms und weist ihn der Variablen ```a``` zu.  \\n**Vorsicht:**  \\nVerwechsle ```=```(**Zuweisungsoperator**) nicht mit ```==```(**Vergleichsoperator**)!\",\r\n        \"!\": \"```\\n!a\\n```  \\nergibt genau dann ```true```, wenn ```a``` ```false``` ergibt.  \\n```!``` spricht man '**nicht**'.\",\r\n        \"public\": \"```\\npublic\\n```  \\nAttribute und Methoden, die als ```public``` deklariert werden, sind überall (auch außerhalb der Klasse) sichtbar.\",\r\n        \"private\": \"```\\nprivate\\n```  \\nAttribute und Methoden, die als ```private``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse sichtbar.\",\r\n        \"protected\": \"```\\nprotected\\n```  \\nAttribute und Methoden, die als ```protected``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse oder innerhalb von Methoden von Kindklassen sichtbar.\",\r\n        \"return\": \"```\\nreturn Term\\n```  \\nbewirkt, dass die Methode verlassen wird und der Wert des Terms an die aufrufende Stelle zurückgegeben wird.\",\r\n        \"break\": \"```\\nbreak;\\n```  \\ninnerhalb einer Schleife bewirkt, dass die Schleife sofort verlassen und mit den Anweisungen nach der Schleife fortgefahren wird.  \\n\"+\r\n        \"```break``` innerhalb einer ```switch```-Anweisung bewirkt, dass der Block der ```switch```-Anweisung verlassen wird.\",\r\n        \"class\": \"```\\nclass\\n```  \\nMit dem Schlüsselwort ```class``` werden Klassen definiert.\",\r\n        \"extends\": \"```\\nextends\\n```  \\n```class A extends B { ... }``` bedeutet, dass die Klasse A Unterklasse der Klasse B ist.\",\r\n        \"implements\": \"```\\nimplements\\n```  \\n```class A implements B { ... }``` bedeutet, dass die Klasse A das Interface B implementiert, d.h., dass sie alle Methoden besitzen muss, die in B definiert sind.\",\r\n        \"this\": \"```\\nthis\\n```  \\nInnerhalb einer Methodendefinition bezeichnet das Schlüsselwor ```this``` immer dasjenige Objekt, für das die Methode gerade ausgeführt wird.\",\r\n\r\n    }\r\n\r\n    constructor(private editor: Editor) {\r\n\r\n    }\r\n\r\n    provideHover(model: monaco.editor.ITextModel, position: monaco.Position, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Hover> {\r\n\r\n        let selection: monaco.Selection = this.editor.editor.getSelection();\r\n        \r\n        // if cursor is inside current selection then don't show hover, because editor.onDidChangeCursorPosition evaluates selected Text \r\n        // (see class Editor).\r\n        if(selection != null){\r\n            if(selection.startLineNumber != selection.endLineNumber || selection.startColumn != selection.endColumn){\r\n                if(\r\n                    (selection.startLineNumber < position.lineNumber || selection.startLineNumber == position.lineNumber && selection.startColumn <= position.column) && \r\n                    (selection.endLineNumber > position.lineNumber || selection.endLineNumber == position.lineNumber && selection.endColumn >= position.column) \r\n                ){\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        let module: Module = this.editor.main.getCurrentWorkspace()?.getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        for(let errorList of module.errors){\r\n            for(let error of errorList){\r\n                if(error.position.line == position.lineNumber && \r\n                    error.position.column <= position.column && \r\n                    error.position.column + error.position.length >= position.column){\r\n                        return null; // Show error-tooltip and don't show hover-tooltip\r\n                    }\r\n            }\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let declarationAsString = \"\";\r\n\r\n        if (element != null) {\r\n        } else {\r\n            let word = this.getWordUnderCursor(model, position);\r\n            let desc = MyHoverProvider.keywordDescriptions[word];\r\n            if (desc != null) {\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: desc }],\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getWordUnderCursor(model: monaco.editor.ITextModel, position: monaco.Position)\r\n         : string {\r\n        \r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let word = \"\";\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierOrArrayDescriptor(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        if (end - begin > 1) {\r\n            word = text.substring(begin, end);\r\n        } else {\r\n            end = pos;\r\n            while (end < text.length && this.isInsideOperator(text.charAt(end))) {\r\n                end++;\r\n            }\r\n    \r\n            begin = pos;\r\n            while (begin > 0 && this.isInsideOperator(text.charAt(begin - 1))) {\r\n                begin--;\r\n            }\r\n    \r\n            if (end - begin > 0) {\r\n                word = text.substring(begin, end);\r\n            }\r\n        }\r\n\r\n        return word;\r\n\r\n    }\r\n\r\n    widenDeclaration(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        identifier: string): string {\r\n\r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierChain(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        let lenght: number = identifier?.length == null ? 1 : identifier.length;\r\n\r\n        if (end - begin > length) {\r\n            return text.substring(begin, end);\r\n        }\r\n\r\n        return identifier;\r\n    }\r\n\r\n    isInsideIdentifierChain(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß_\\[\\]\\.]/i);\r\n\r\n    }\r\n\r\n    isInsideOperator(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[!%<>=\\+\\-\\*\\/]/i);\r\n\r\n    }\r\n\r\n    isInsideIdentifierOrArrayDescriptor(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß\\[\\]]/i);\r\n\r\n    }\r\n\r\n\r\n}","import { QuickFix } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyCodeActionProvider implements monaco.languages.CodeActionProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideCodeActions(model: monaco.editor.ITextModel, range: monaco.Range, context: monaco.languages.CodeActionContext, token: monaco.CancellationToken): monaco.languages.CodeActionList | Promise<monaco.languages.CodeActionList> {\r\n        const actions = context.markers.map(error => {\r\n            let quickFix: QuickFix = <any>error.relatedInformation;\r\n            if (quickFix == null) return null;\r\n\r\n            let codeAction: monaco.languages.CodeAction = {\r\n                title: quickFix.title,\r\n                diagnostics: [error],\r\n                kind: \"quickfix\",\r\n                edit: {\r\n                    edits: quickFix.editsProvider(model.uri)\r\n                },\r\n                isPreferred: true\r\n            };\r\n            return codeAction;\r\n        });\r\n        return {\r\n            actions: actions,\r\n            dispose: () => { }\r\n        }\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Editor } from \"./Editor.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyReferenceProvider implements monaco.languages.ReferenceProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideReferences(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.ReferenceContext, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Location[]> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) return null;\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let referencePositions: monaco.languages.Location[] = [];\r\n\r\n        usagePositions.forEach((upInCurrentModule, module) => {\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    referencePositions.push(\r\n                        {\r\n                            uri: module.uri,\r\n                            range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length }\r\n                        });\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        return referencePositions;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import { Main } from \"../Main.js\";\r\n\r\nexport type HelperDirection = \"top\" | \"bottom\" | \"left\" | \"right\";\r\n\r\nexport class Helper {\r\n\r\n    public static openHelper(text: string, targetElement: JQuery<HTMLElement>, direction: HelperDirection) {\r\n\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.removeClass(['jo_arrow_box_left', 'jo_arrow_box_right', 'jo_arrow_box_top', 'jo_arrow_box_bottom']);\r\n\r\n        $helper.addClass('jo_arrow_box_' + direction);\r\n\r\n        $helper.css({ left: '', right: '', top: '', bottom: '' });\r\n\r\n        let to = targetElement.offset();\r\n        let b = jQuery('body');\r\n\r\n        let delta: number = 34;\r\n\r\n        switch (direction) {\r\n            case \"bottom\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                bottom: b.height() - to.top + delta\r\n            });\r\n                break;\r\n            case \"top\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                top: to.top + targetElement.height() + 26\r\n            });\r\n                break;\r\n            case \"left\": $helper.css({\r\n                left: to.left + targetElement.width() + delta,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n            case \"right\": $helper.css({\r\n                right: b.width() - to.left,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n        }\r\n\r\n        $helper.find('span').html(text);\r\n\r\n        let $button = $helper.find('.jo_button');\r\n        $button.on('click', (e) => {\r\n            e.stopPropagation();\r\n            $button.off('click');\r\n            Helper.close();\r\n        });\r\n\r\n        $helper.fadeIn(800);\r\n\r\n    }\r\n\r\n    static close() {\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.fadeOut(800);\r\n    }\r\n\r\n\r\n    static showHelper(id: string, mainBase: Main, $element?: JQuery<HTMLElement>) {\r\n\r\n        let main: Main;\r\n        if(mainBase instanceof Main){\r\n            main = mainBase;\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        let helperHistory = main.user.settings!.helperHistory;\r\n\r\n        let flag = id + \"Done\";\r\n\r\n        if (helperHistory != null && (helperHistory[flag] == null || !helperHistory[flag])) {\r\n            helperHistory[flag] = true;\r\n            main.networkManager.sendUpdateUserSettings(() => { });\r\n\r\n            let text: string = \"\";\r\n            let direction: HelperDirection = \"left\";\r\n\r\n            switch (id) {\r\n                case \"newDatabaseHelper\":\r\n                    text = `Es gibt noch keine Datenbank. <br> Nutzen Sie den Button\r\n                        <span class='img_add-database-dark jo_inline-image'></span> um eine Datenbank anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                    case \"newSQLFileHelper\":\r\n                        text = `Es gibt noch keine Datei mit SQL-Anweisungen. <br> Nutzen Sie den Button \r\n                            <span class='img_add-file-dark jo_inline-image'></span> um eine neue Datei anzulegen.\r\n                            `;\r\n                        direction = \"left\";\r\n                        break;\r\n                case \"homeButtonHelper\":\r\n                    text = \"Mit dem Home-Button <span class='img_home-dark jo_inline-image'></span> können Sie wieder zu Ihren eigenen Workspaces wechseln.\";\r\n                    direction = \"top\";\r\n                    $element = jQuery('.img_home-dark');\r\n                    break;\r\n                case \"playButtonHelper\":\r\n                    text = `Mit dem \"Start-Button\"\r\n                        (<span class='img_start-dark jo_inline-image'></span>) \r\n                        oder der Tastenkombination &lt;Strg&gt;&nbsp;+&nbsp&lt;Enter&gt; \r\n                        wird die Anweisung ausgeführt, in der der Cursor gerade steht. \r\n                        <br> Wollen Sie mehrere Anweisungen hintereinander ausführen, so markieren \r\n                        Sie alle Anweisungen und klicken Sie dann auf <span class='img_start-dark jo_inline-image'></span>\r\n                        oder drücken Sie  &lt;Strg&gt;&nbsp;+&nbsp&lt;Enter&gt;. `;\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"consoleHelper\": \r\n                    text=`\r\n                        Hier können Sie Anweisungen oder Terme eingeben, die nach Bestätigung mit der Enter-Taste ausgeführt/ausgewertet werden. Das Ergebnis sehen Sie im Bereich über der Eingabezeile. <br>\r\n                        Falls das Programm gerade pausiert (z.B. bei Ausführung in Einzelschritten) können Sie auch auf die Variablen des aktuellen Sichtbarkeitsbereiches zugreifen.\r\n                    `;\r\n                    direction = \"bottom\";\r\n            }\r\n\r\n            if (text != \"\" && $element != null && $element.length > 0) {\r\n                Helper.openHelper(text, $element, direction);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MyCompletionItemProvider } from \"./MyCompletionItemProvider.js\";\r\nimport { defineMyJava } from \"./MyJava.js\";\r\nimport { MySignatureHelpProvider } from \"./MySignatureHelpProvider.js\";\r\nimport { MyHoverProvider } from \"./MyHoverProvider.js\";\r\nimport { MyCodeActionProvider } from \"./MyCodeActionProvider.js\";\r\nimport { MyReferenceProvider } from \"./MyReferenceProvider.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { defineVscSQL } from \"./VscSql.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\nexport class Editor {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n\r\n    cw: monaco.editor.IContentWidget = null;\r\n\r\n    dontPushNextCursorMove: number = 0;\r\n\r\n    constructor(public main: MainBase, private showMinimap: boolean, private isEmbedded: boolean) {\r\n    }\r\n\r\n    initGUI($element: JQuery<HTMLElement>) {\r\n\r\n\r\n\r\n        defineVscSQL();\r\n\r\n        monaco.editor.defineTheme('myCustomThemeDark', {\r\n            base: 'vs-dark', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'functions', foreground: 'dcdcaa', fontStyle: 'italic' },\r\n                { token: 'string.sql', foreground: '3DC9B0' },\r\n                { token: 'number', foreground: '7bef3f' },\r\n                { token: 'type', foreground: '499cd6' },\r\n                { token: 'identifier', foreground: 'effefe' },\r\n                { token: 'statement', foreground: '9cdcfe', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '619ceb', fontStyle: 'bold' },\r\n                { token: 'table', foreground: 'ff0000', fontStyle: 'bold' },\r\n                { token: 'delimiter', foreground: 'e8eb38' }\r\n                // { token: 'comment.js', foreground: '008800', fontStyle: 'bold italic underline' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#1e1e1e\",\r\n                \"jo_highlightStatementGreen\": \"#004000\",\r\n                \"jo_highlightStatementYellow\": \"#404000\",\r\n                \"jo_highlightStatementRed\": \"#402020\"\r\n            }\r\n        });\r\n\r\n        monaco.editor.defineTheme('myCustomThemeLight', {\r\n            base: 'vs', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'functions', foreground: '694E16', fontStyle: 'italic bold' },\r\n                { token: 'string.sql', foreground: 'a03030' },\r\n                { token: 'number', foreground: '404040' },\r\n                { token: 'type', foreground: '0000ff', fontStyle: 'bold' },\r\n                { token: 'identifier', foreground: '8000e0' },\r\n                { token: 'statement', foreground: '001080', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '00a000', fontStyle: 'bold' },\r\n                { token: 'comment', foreground: '808080', fontStyle: 'italic' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#FFFFFF\",\r\n                \"editor.foreground\": \"#000000\",\r\n                \"editor.inactiveSelectionBackground\": \"#E5EBF1\",\r\n                \"editorIndentGuide.background\": \"#D3D3D3\",\r\n                \"editorIndentGuide.activeBackground\": \"#939393\",\r\n                \"editor.selectionHighlightBackground\": \"#ADD6FF80\",\r\n                \"editorSuggestWidget.background\": \"#F3F3F3\",\r\n                \"activityBarBadge.background\": \"#007ACC\",\r\n                \"sideBarTitle.foreground\": \"#6F6F6F\",\r\n                \"list.hoverBackground\": \"#E8E8E8\",\r\n                \"input.placeholderForeground\": \"#767676\",\r\n                \"searchEditor.textInputBorder\": \"#CECECE\",\r\n                \"settings.textInputBorder\": \"#CECECE\",\r\n                \"settings.numberInputBorder\": \"#CECECE\",\r\n                \"statusBarItem.remoteForeground\": \"#FFF\",\r\n                \"statusBarItem.remoteBackground\": \"#16825D\",\r\n                \"jo_highlightStatementGreen\": \"#004000\",\r\n                \"jo_highlightStatementYellow\": \"#404000\",\r\n                \"jo_highlightStatementRed\": \"#400000\"\r\n            }\r\n        });\r\n\r\n\r\n        this.editor = monaco.editor.create($element[0], {\r\n            // value: [\r\n            //     'function x() {',\r\n            //     '\\tconsole.log(\"Hello world!\");',\r\n            //     '}'\r\n            // ].join('\\n'),\r\n            // language: 'myJava',\r\n            language: 'vscSQL',\r\n            lightbulb: {\r\n                enabled: true\r\n            },\r\n            // gotoLocation: {\r\n            //     multipleReferences: \"gotoAndPeek\"\r\n            // },\r\n            lineDecorationsWidth: 0,\r\n            peekWidgetDefaultFocus: \"tree\",\r\n            fixedOverflowWidgets: true,\r\n            quickSuggestions: true,\r\n            quickSuggestionsDelay: 10,\r\n            fontSize: 14,\r\n            fontFamily: \"Consolas, Roboto Mono\",\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            selectOnLineNumbers: false,\r\n            // selectionHighlight: false,\r\n            automaticLayout: true,\r\n            scrollBeyondLastLine: false,\r\n            occurrencesHighlight: false,\r\n            autoIndent: \"full\",\r\n            dragAndDrop: true,\r\n            formatOnType: true,\r\n            formatOnPaste: true,\r\n            suggestFontSize: 16,\r\n            suggestLineHeight: 22,\r\n            suggest: {\r\n                localityBonus: true,\r\n                insertMode: \"replace\"\r\n                // snippetsPreventQuickSuggestions: false\r\n            },\r\n            parameterHints: { enabled: true, cycle: true },\r\n            // //@ts-ignore\r\n            // contribInfo: {\r\n            //     suggestSelection: 'recentlyUsedByPrefix',\r\n            // },\r\n\r\n            mouseWheelZoom: this.isEmbedded,\r\n\r\n            minimap: {\r\n                enabled: this.showMinimap\r\n            },\r\n            scrollbar: {\r\n                vertical: 'auto',\r\n                horizontal: 'auto'\r\n            },\r\n            theme: \"myCustomThemeDark\",\r\n            // automaticLayout: true\r\n\r\n\r\n        }\r\n        );\r\n\r\n        let that = this;\r\n\r\n        let mouseWheelListener = (event: WheelEvent) => {\r\n            if (event.ctrlKey === true) {\r\n\r\n                that.changeEditorFontSize(Math.sign(event.deltaY), true);\r\n\r\n                event.preventDefault();\r\n            }\r\n        };\r\n\r\n\r\n        this.editor.onDidChangeConfiguration((event) => {\r\n            if (event.hasChanged(monaco.editor.EditorOption.fontInfo) && this.isEmbedded) {\r\n\r\n                this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n            }\r\n        });\r\n\r\n        this.editor.onDidChangeCursorPosition((event) => {\r\n\r\n            that.onDidChangeCursorPosition(event.position);\r\n\r\n        });\r\n\r\n        // We need this to set our model after user uses Strg+click on identifier\r\n        this.editor.onDidChangeModel((event) => {\r\n\r\n            let element: HTMLDivElement = <any>$element.find('.monaco-editor')[0];\r\n            element.removeEventListener(\"wheel\", mouseWheelListener);\r\n            element.addEventListener(\"wheel\", mouseWheelListener, { passive: false });\r\n\r\n            if (this.main.getCurrentWorkspace() == null) return;\r\n\r\n            let module = this.main.getCurrentWorkspace().getModuleByMonacoModel(this.editor.getModel());\r\n            if (this.main instanceof Main && module != null) {\r\n\r\n                this.main.projectExplorer.setActiveAfterExternalModelSet(module);\r\n            }\r\n        });\r\n\r\n        monaco.languages.registerHoverProvider('vscSQL', new MyHoverProvider(this));\r\n\r\n        monaco.languages.registerCompletionItemProvider('vscSQL', new MyCompletionItemProvider(this.main));\r\n        monaco.languages.registerCodeActionProvider('vscSQL', new MyCodeActionProvider(this.main));\r\n        monaco.languages.registerReferenceProvider('vscSQL', new MyReferenceProvider(this.main));\r\n\r\n\r\n        monaco.languages.registerSignatureHelpProvider('vscSQL', new MySignatureHelpProvider(this.main));\r\n\r\n        this.editor.onMouseDown((e: monaco.editor.IEditorMouseEvent) => {\r\n            const data = e.target.detail;\r\n            if (e.target.type !== monaco.editor.MouseTargetType.GUTTER_GLYPH_MARGIN &&\r\n                e.target.type !== monaco.editor.MouseTargetType.GUTTER_LINE_NUMBERS || data.isAfterLines) {\r\n                return;\r\n            }\r\n            that.onMarginMouseDown(e.target.position.lineNumber);\r\n            return;\r\n        });\r\n\r\n\r\n        // If editor is instantiated before fonts are loaded then indentation-lines\r\n        // are misplaced, see https://github.com/Microsoft/monaco-editor/issues/392\r\n        // so:\r\n        setTimeout(() => {\r\n            monaco.editor.remeasureFonts();\r\n        }, 2000);\r\n\r\n        this.addActions();\r\n\r\n        //@ts-ignore\r\n        this.editor.onDidType((text) => { that.onDidType(text) });\r\n\r\n        return this.editor;\r\n    }\r\n\r\n\r\n    onDidType(text: string) {\r\n        //        const endOfCommentText = \" * \\n */\";\r\n\r\n        const insertEndOfComment = (pos, insertText: string, newLine: number, newColumn: number) => {\r\n            const range = new monaco.Range(\r\n                pos.lineNumber,\r\n                pos.column,\r\n                pos.lineNumber,\r\n                pos.column\r\n            );\r\n            this.editor.executeEdits(\"new-bullets\", [\r\n                { range, text: insertText }\r\n            ]);\r\n\r\n            // Set position after bulletText\r\n            this.editor.setPosition({\r\n                lineNumber: newLine,\r\n                column: newColumn\r\n            });\r\n        };\r\n\r\n        if (text === \"\\n\") {\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            const prevLine = model.getLineContent(position.lineNumber - 1);\r\n            if (prevLine.trim().indexOf(\"/*\") === 0 && !prevLine.trimRight().endsWith(\"*/\")) {\r\n                const nextLine = position.lineNumber < model.getLineCount() ? model.getLineContent(position.lineNumber + 1) : \"\";\r\n                if (!nextLine.trim().startsWith(\"*\")) {\r\n                    let spacesAtBeginningOfLine: string = prevLine.substr(0, prevLine.length - prevLine.trimLeft().length);\r\n                    if (prevLine.trim().indexOf(\"/**\") === 0) {\r\n                        insertEndOfComment(position, \"\\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    } else {\r\n                        insertEndOfComment(position, \" * \\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    lastTime: number = 0;\r\n    setFontSize(fontSizePx: number) {\r\n\r\n        // console.log(\"Set font size: \" + fontSizePx);\r\n        let time = new Date().getTime();\r\n        if (time - this.lastTime < 150) return;\r\n        this.lastTime = time;\r\n\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (this.main instanceof Main) {\r\n            this.main.viewModeController.saveFontSize(fontSizePx);\r\n        }\r\n\r\n        if (fontSizePx != editorfs) {\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx\r\n            });\r\n\r\n            // editor does not set fontSizePx, but fontSizePx * zoomfactor with unknown zoom factor, so \r\n            // we have to do this dirty workaround:\r\n            let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n            let factor = newEditorfs / fontSizePx;\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx / factor\r\n            });\r\n\r\n        }\r\n\r\n        jQuery('.jo_editorFontSize').css('font-size', fontSizePx + \"px\");\r\n        jQuery('.jo_editorFontSize').css('line-height', (fontSizePx + 2) + \"px\");\r\n\r\n        document.documentElement.style.setProperty('--breakpoint-size', fontSizePx + 'px');\r\n        document.documentElement.style.setProperty('--breakpoint-radius', fontSizePx / 2 + 'px');\r\n\r\n\r\n        this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n    }\r\n\r\n    changeEditorFontSize(delta: number, dynamic: boolean = true) {\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (dynamic) {\r\n            if (editorfs < 10) {\r\n                delta *= 1;\r\n            } else if (editorfs < 20) {\r\n                delta *= 2;\r\n            } else {\r\n                delta *= 4;\r\n            }\r\n        }\r\n\r\n        let newEditorFs = editorfs + delta;\r\n        if (newEditorFs >= 6 && newEditorFs <= 80) {\r\n            this.setFontSize(newEditorFs);\r\n        }\r\n    }\r\n\r\n\r\n    addActions() {\r\n        let that = this;\r\n\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Find bracket',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'Finde korrespondierende Klammer',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.5,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                ed.getAction('editor.action.jumpToBracket').run();\r\n                return null;\r\n            }\r\n        });\r\n\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Execute statement',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'SQL-Anweisung ausführen',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.Enter],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.0,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                that.main.getActionManager().trigger('execute');\r\n                return null;\r\n            }\r\n        });\r\n\r\n        //console.log(this.editor.getSupportedActions());\r\n    }\r\n\r\n    onMarginMouseDown(lineNumber: number) {\r\n\r\n    }\r\n\r\n    elementDecoration: string[] = [];\r\n    onDidChangeCursorPosition(position: { lineNumber: number, column: number }) {\r\n\r\n        if (position == null) position = this.editor.getPosition();\r\n\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, []);\r\n            return;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        if (element != null) {\r\n            let usagePositions = element.usagePositions;\r\n            let upInCurrentModule = usagePositions.get(module);\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    decorations.push({\r\n                        range: { startColumn: up.column, startLineNumber: up.line, endColumn: up.column + up.length, endLineNumber: up.line },\r\n                        options: {\r\n                            className: 'jo_revealSyntaxElement', isWholeLine: false, overviewRuler: {\r\n                                color: { id: \"editorIndentGuide.background\" },\r\n                                darkColor: { id: \"editorIndentGuide.activeBackground\" },\r\n                                position: monaco.editor.OverviewRulerLane.Left\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        let executeActionActive = false;\r\n\r\n        for(let sqlStatement of module.getSQLSTatementsAtSelection(this.editor.getSelection())){\r\n\r\n            let classname = \"jo_highlightStatementGreen\";\r\n            if (sqlStatement != null) {\r\n                if (sqlStatement.hasErrors) {\r\n                    classname = \"jo_highlightStatementRed\";\r\n                    if (sqlStatement.acceptedBySQLite) {\r\n                        classname = \"jo_highlightStatementYellow\";\r\n                        executeActionActive = true;\r\n                    }\r\n                } else {\r\n                    executeActionActive = true;\r\n                }\r\n    \r\n                decorations.push({\r\n                    range: {\r\n                        startColumn: sqlStatement.from.column, startLineNumber: sqlStatement.from.line,\r\n                        endColumn: sqlStatement.to.column, endLineNumber: sqlStatement.to.line\r\n                    },\r\n                    options: {\r\n                        className: classname, isWholeLine: false, overviewRuler: {\r\n                            color: { id: classname },\r\n                            darkColor: { id: classname },\r\n                            position: monaco.editor.OverviewRulerLane.Left\r\n                        },\r\n                        minimap: {\r\n                            color: { id: classname },\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        },\r\n                        zIndex: -100\r\n                    }\r\n                })\r\n    \r\n            }\r\n        }\r\n\r\n\r\n        this.main.getActionManager().setActive('execute', executeActionActive);\r\n\r\n        if(executeActionActive && !this.main.isEmbedded()){\r\n            Helper.showHelper(\"playButtonHelper\", <any>this.main, jQuery('div.img_start-dark'));\r\n        }\r\n\r\n\r\n        this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, decorations);\r\n\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.main.getCurrentlyEditedModule();\r\n    }\r\n\r\n\r\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport function defineVscSQL() {\r\n    monaco.languages.register({\r\n        id: 'vscSQL',\r\n        extensions: ['.sql'],\r\n        //  mimetypes: [\"text/x-java-source\", \"text/x-java\"]  \r\n    });\r\n\r\n    let conf: monaco.languages.LanguageConfiguration = {\r\n        onEnterRules: [\r\n            {\r\n                // e.g. /** | */\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                afterText: /^\\s*\\*\\/$/,\r\n                action: { indentAction: monaco.languages.IndentAction.IndentOutdent, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g. /** ...|\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g.  * ...|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: '* ' }\r\n            },\r\n            {\r\n                // e.g.  */|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            },\r\n            {\r\n                // e.g.  *-----*/|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*[^/]*\\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            }\r\n        ],\r\n        comments: {\r\n            lineComment: '--',\r\n            blockComment: ['/*', '*/'],\r\n        },\r\n        brackets: [\r\n            ['{', '}'],\r\n            ['[', ']'],\r\n            ['(', ')']\r\n        ],\r\n        autoClosingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ],\r\n        surroundingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ]\r\n    };\r\n    let language = {\r\n\r\n        defaultToken: '',\r\n        tokenPostfix: '.sql',\r\n        ignoreCase: true,\r\n        brackets: [\r\n            { open: '[', close: ']', token: 'delimiter.square' },\r\n            { open: '(', close: ')', token: 'delimiter.parenthesis' }\r\n        ],\r\n        escapes: /\\\\(?:[abfnrtv\\\\\"'])/,\r\n        keywords: [\r\n            \"ABORT\", \"ACTION\", \"ADD\", \"AFTER\", \"ALL\", \"ALTER\", \"ANALYZE\", \"AND\", \"AS\", \"ASC\", \"ATTACH\", \"AUTOINCREMENT\", \"BEFORE\",\r\n            \"BEGIN\", \"BETWEEN\", \"BY\", \"CASCADE\", \"CASE\", \"CAST\", \"CHECK\", \"COLLATE\", \"COLUMN\", \"COMMIT\", \"CONFLICT\", \"CONSTRAINT\",\r\n            \"CREATE\", \"CROSS\", \"CURRENT_DATE\", \"CURRENT_TIME\", \"CURRENT_TIMESTAMP\", \"DATABASE\", \"DEFAULT\", \"DEFERRABLE\", \"DEFERRED\",\r\n            \"DELETE\", \"DESC\", \"DETACH\", \"DISTINCT\", \"DROP\", \"EACH\", \"ELSE\", \"END\", \"ESCAPE\", \"EXCEPT\", \"EXCLUSIVE\", \"EXISTS\", \"EXPLAIN\",\r\n            \"FAIL\", \"FOR\", \"FOREIGN\", \"FROM\", \"FULL\", \"GLOB\", \"GROUP\", \"HAVING\", \"IF\", \"IGNORE\", \"IMMEDIATE\", \"IN\", \"INDEX\", \"INDEXED\",\r\n            \"INITIALLY\", \"INNER\", \"INSERT\", \"INSTEAD\", \"INTERSECT\", \"INTO\", \"IS\", \"ISNULL\", \"JOIN\", \"KEY\", \"LEFT\", \"LIKE\", \"LIMIT\", \"MATCH\",\r\n            \"NATURAL\", \"NO\", \"NOT\", \"NOTNULL\", \"NULL\", \"OF\", \"OFFSET\", \"ON\", \"OR\", \"ORDER\", \"OUTER\", \"PLAN\", \"PRAGMA\", \"PRIMARY\", \"QUERY\",\r\n            \"RAISE\", \"RECURSIVE\", \"REFERENCES\", \"REGEXP\", \"REINDEX\", \"RELEASE\", \"RENAME\", \"REPLACE\", \"RESTRICT\", \"RIGHT\", \"ROLLBACK\", \"ROW\",\r\n            \"SAVEPOINT\", \"SELECT\", \"SET\", \"TABLE\", \"TEMP\", \"TEMPORARY\", \"THEN\", \"TO\", \"TRANSACTION\", \"TRIGGER\", \"UNION\", \"UNIQUE\", \"UPDATE\",\r\n            \"USING\", \"VACUUM\", \"VALUES\", \"VIEW\", \"VIRTUAL\", \"WHEN\", \"WHERE\", \"WITH\", \"WITHOUT\", \"ENGINE\", \"CHARSET\"\r\n        ],\r\n        operators: [\r\n            \"AND\", \"BETWEEN\", \"IN\", \"LIKE\", \"NOT\", \"OR\", \"IS\", \"NULL\", \"INTERSECT\", \"UNION\", \"INNER\", \"JOIN\", \"LEFT\", \"OUTER\", \"RIGHT\"\r\n        ],\r\n        builtinFunctions: [\r\n            \"abs\", \"changes\", \"char\", \"coalesce\", \"count\", \"glob\", \"hex\", \"ifnull\",\r\n            \"iif\", \"instr\", \"last_insert_rowid\", \"length\", \"like\", \"likelihood\", \"likely\",\r\n            \"lower\", \"ltrim\", \"max\", \"min\", \"nullif\", \"quote\", \"random\", \"randomblob\",\r\n            \"replace\", \"round\", \"rtrim\", \"sign\", \"soundex\", \"sqlite_version\", \"substr\", \"substring\",\r\n            \"total_changes\", \"trim\", \"typeof\", \"unicode\", \"unlikely\", \"upper\", \"zeroblob\"\r\n        ],\r\n        builtinVariables: [\r\n            // NOT SUPPORTED\r\n        ],\r\n        pseudoColumns: [\r\n            // NOT SUPPORTED\r\n        ],\r\n        tokenizer: {\r\n            root: [\r\n                { include: '@comments' },\r\n                { include: '@whitespace' },\r\n                { include: '@pseudoColumns' },\r\n                { include: '@numbers' },\r\n                { include: '@strings' },\r\n                { include: '@complexIdentifiers' },\r\n                { include: '@scopes' },\r\n                [/[;,.]/, 'delimiter'],\r\n                [/[()]/, '@brackets'],\r\n                [/[a-z_$äöü][\\w$äöüßÄÖÜ]*(?=\\()/, {\r\n                    cases: {\r\n                        '@builtinFunctions': 'functions',\r\n                        '@keywords': 'keyword',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[\\w@#$]+/, {\r\n                    cases: {\r\n                        '@keywords': 'keyword',\r\n                        '@operators': 'operator',\r\n                        '@builtinVariables': 'predefined',\r\n                        // '@builtinFunctions': 'functions',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[<>=!%&+\\-*/|~^]/, 'operator'],\r\n            ],\r\n            whitespace: [\r\n                [/\\s+/, 'white']\r\n            ],\r\n            comments: [\r\n                [/--+.*/, 'comment'],\r\n                [/\\/\\*/, { token: 'comment.quote', next: '@comment' }]\r\n            ],\r\n            comment: [\r\n                [/[^*/]+/, 'comment'],\r\n                // Not supporting nested comments, as nested comments seem to not be standard?\r\n                // i.e. http://stackoverflow.com/questions/728172/are-there-multiline-comment-delimiters-in-sql-that-are-vendor-agnostic\r\n                // [/\\/\\*/, { token: 'comment.quote', next: '@push' }],    // nested comment not allowed :-(\r\n                [/\\*\\//, { token: 'comment.quote', next: '@pop' }],\r\n                [/./, 'comment']\r\n            ],\r\n            pseudoColumns: [\r\n                [/[$][A-Za-z_][\\w@#$]*/, {\r\n                    cases: {\r\n                        '@pseudoColumns': 'predefined',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n            ],\r\n            numbers: [\r\n                [/0[xX][0-9a-fA-F]*/, 'number'],\r\n                [/[$][+-]*\\d*(\\.\\d*)?/, 'number'],\r\n                [/((\\d+(\\.\\d*)?)|(\\.\\d+))([eE][\\-+]?\\d+)?/, 'number']\r\n            ],\r\n            strings: [\r\n                [/'/, { token: 'string', next: '@string' }],\r\n            ],\r\n            string: [\r\n                [/[^\\\\']+/, 'string'],\r\n                [/\\\\./, 'string.escape.invalid'],\r\n                [/''/, 'string'],\r\n                [/'/, { token: 'string', next: '@pop' }]\r\n            ],\r\n            complexIdentifiers: [\r\n                [/\"/, { token: 'identifier.quote', next: '@quotedIdentifier' }]\r\n            ],\r\n            quotedIdentifier: [\r\n                [/[^\"]+/, 'identifier'],\r\n                [/\"\"/, 'identifier'],\r\n                [/\"/, { token: 'identifier.quote', next: '@pop' }]\r\n            ],\r\n            scopes: [\r\n                // NOT SUPPORTED\r\n            ]\r\n        }\r\n\r\n\r\n\r\n    };\r\n\r\n    //@ts-ignore\r\n    monaco.languages.setLanguageConfiguration('vscSQL', conf);\r\n    //@ts-ignore\r\n    monaco.languages.setMonarchTokensProvider('vscSQL', language);\r\n\r\n\r\n\r\n}","export class WorkerSim {\n\n    //@ts-ignore\n    initsql = initSqlJs({locateFile: (path, scriptDirectory) => \"https://embed.learn-sql.de/include/lib/sql.js/sql-wasm.wasm\"});\n    db;\n    SQL;\n\n    onmessage: (event: {data: any}) => void;\n\n    onError: (event: ErrorEvent) => void;\n\n    postMessageToClient(message: any) {\n        this.onmessage({data: message})\n    }\n\n    postMessage(data: any){\n        let that = this;\n        if (that.db == null) {\n            that.initsql.then((SQL1) => {\n                that.SQL = SQL1;\n                that.db = createDb(SQL1, undefined);\n                that.worker(data);\n            }).catch((err) => {\n                console.log(err);\n                //@ts-ignore\n                return that.postMessageToClient({\n                    id: this[\"data\"][\"id\"],\n                    error: err[\"message\"]\n                });\n            })\n        } else {\n            that.worker(data);\n        }\n    }\n\n    terminate() {\n\n    }\n\n    worker(data: any) {\n        var buff; var result;\n        var config = data[\"config\"] ? data[\"config\"] : {};\n        try {\n            switch (data && data[\"action\"]) {\n                case \"open\":\n                    buff = data[\"buffer\"];\n                    this.db = createDb(this.SQL, buff && new Uint8Array(buff));\n                    //@ts-ignore\n                    return this.postMessageToClient({\n                        id: data[\"id\"],\n                        ready: true\n                    });\n                case \"exec\":\n                    if (this.db === null) {\n                        this.db = createDb(this.SQL, undefined);\n                    }\n                    if (!data[\"sql\"]) {\n                        throw \"exec: Missing query string\";\n                    }\n                    //@ts-ignore\n                    return this.postMessageToClient({\n                        id: data[\"id\"],\n                        results: this.db.exec(data[\"sql\"], data[\"params\"], config)\n                    });\n                case \"each\":\n                    if (this.db === null) {\n                        this.db = createDb(this.SQL, undefined);\n                    }\n                    var callback = function callback(row) {\n                        //@ts-ignore\n                        return this.postMessage({\n                            id: data[\"id\"],\n                            row: row,\n                            finished: false\n                        });\n                    };\n                    var done = function done() {\n                        //@ts-ignore\n                        return this.postMessage({\n                            id: data[\"id\"],\n                            finished: true\n                        });\n                    };\n                    return this.db.each(data[\"sql\"], data[\"params\"], callback, done, config);\n                case \"export\":\n                    buff = this.db[\"export\"]();\n                    result = {\n                        id: data[\"id\"],\n                        results: [\n                            {\n                                buffer: buff\n                            }\n                        ]\n                    };\n                    try {\n                        //@ts-ignore\n                        return this.postMessageToClient(result);\n                    } catch (error) {\n                        //@ts-ignore\n                        return this.postMessageToClient(result);\n                    }\n                case \"close\":\n                    if (this.db) {\n                        this.db.close();\n                    }\n                    //@ts-ignore\n                    return this.postMessageToClient({\n                        id: data[\"id\"]\n                    });\n                default:\n                    throw new Error(\"Invalid action : \" + (data && data[\"action\"]));\n            }\n\n        } catch (err) {\n\n            //@ts-ignore\n            return this.postMessageToClient({\n                id: data[\"id\"],\n                error: err[\"message\"]\n            });\n        }\n\n    }\n\n\n}\n\n\n\n\n\n","import { MainBase } from \"../main/MainBase.js\";\r\nimport { WorkerSim } from \"../sqljs-worker/sqljsWorkerSim.js\";\r\n\r\nexport type DatabaseDumpType = \"binaryUncompressed\" | \"binaryCompressed\" | \"other\";\r\n\r\nexport type DatabaseDirectoryEntry = {\r\n    name: string,\r\n    description: string,\r\n    filename: string\r\n}\r\n\r\nexport type QueryResult = {\r\n    columns: string[],\r\n    values: any[][],\r\n    buffer?: Uint8Array\r\n}\r\n\r\nexport type QuerySuccessCallback = (results: QueryResult[]) => void;\r\nexport type QueryErrorCallback = (error: string) => void;\r\n\r\nexport type ColumnStructure = {\r\n    name: string;\r\n    table: TableStructure;\r\n\r\n    typeLengths?: number[]; // for varchar(5), ...\r\n    completeTypeSQL: string;\r\n\r\n    references?: ColumnStructure;\r\n    referencesRawData?: any[];\r\n    isPrimaryKey: boolean;\r\n    isAutoIncrement: boolean;\r\n\r\n    notNull: boolean;\r\n    defaultValue: string;\r\n\r\n    dumpValueFunction?: (any) => string\r\n}\r\n\r\nexport type TableStructure = {\r\n    name: string;\r\n    size: number;\r\n    columns: ColumnStructure[];\r\n    completeSQL: string;\r\n}\r\n\r\nexport type DatabaseStructure = {\r\n    tables: TableStructure[]\r\n}\r\n\r\n\r\nexport class DatabaseTool {\r\n\r\n    databaseDirectoryEntries: DatabaseDirectoryEntry[] = null;\r\n\r\n    worker: Worker;\r\n\r\n    queryId: number = 0;\r\n\r\n    querySuccessCallbacksMap: Map<number, QuerySuccessCallback> = new Map();\r\n    queryErrorCallbackMap: Map<number, QueryErrorCallback> = new Map();\r\n\r\n    databaseStructure: DatabaseStructure;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    initializeWorker(template: Uint8Array, queries: string[], callbackAfterInitializing?: (errors: string[]) => void,\r\n        callbackAfterRetrievingStructure?: () => void) {\r\n        \r\n        this.main.getWaitOverlay().show('Bitte warten, die Datenbank wird initialisiert...');\r\n        \r\n            if (this.worker != null) {\r\n            this.worker.terminate();\r\n        }\r\n\r\n        let t = performance.now();\r\n\r\n        // console.log(\"Starting worker...\");\r\n\r\n        let url: string = \"js/sqljs-worker/sqljsWorker.js\"\r\n        if(this.main.isEmbedded()){\r\n            //@ts-ignore\r\n            url = window.javaOnlineDir + url;\r\n        }\r\n\r\n        //@ts-ignore\r\n        if(window.jo_doc){\r\n            //@ts-ignore\r\n            this.worker = new WorkerSim();\r\n        } else {\r\n            this.worker = new Worker(url);\r\n        }\r\n        let that = this;\r\n\r\n        let errors: string[] = [];\r\n\r\n        this.worker.onmessage = () => {\r\n            // console.log(\"Database opened (\" + (performance.now() - t)/1000 + \" s)\");\r\n            that.worker.onmessage = event => {\r\n\r\n                // console.log(event.data);\r\n\r\n                let id = event.data.id;\r\n                if (event.data.error == null) {\r\n                    let querySuccessCallback = that.querySuccessCallbacksMap.get(id);\r\n                    if (querySuccessCallback != null) {\r\n                        querySuccessCallback(event.data.results);\r\n                    }\r\n                } else {\r\n                    let queryErrorCallback = that.queryErrorCallbackMap.get(id);\r\n                    if (queryErrorCallback != null) {\r\n                        queryErrorCallback(event.data.error);\r\n                    }\r\n                }\r\n\r\n                // if(event.data.buffer){\r\n                //     console.log(event.data.buffer);\r\n                // }\r\n\r\n\r\n                this.queryErrorCallbackMap.delete(id);\r\n                this.querySuccessCallbacksMap.delete(id);\r\n\r\n            };\r\n\r\n            if(queries == null) queries = [];\r\n            queries = queries.slice();\r\n            let queryCount = queries.length;\r\n\r\n            let execQuery = () => {\r\n                if (queries.length > 0) {\r\n                    this.main.getWaitOverlay().setProgress(`${Math.round((1-queries.length/queryCount)*100) + \" %\"}`)\r\n                    let query = queries.shift();\r\n                    that.executeQuery(query, (result) => {\r\n                        execQuery();\r\n                    }, (error) => {\r\n                        errors.push(\"Error while setting up database: \" + error + \", query: \" + query);\r\n                        console.log({\"error\": \"Error while setting up database: \" + error, \"query\": query});\r\n                        console.log()\r\n                        execQuery();\r\n                    })\r\n                } else {\r\n                    if (callbackAfterInitializing != null) callbackAfterInitializing(errors);\r\n                    that.retrieveDatabaseStructure(() => {\r\n                        // console.log(\"Database structure retrieved (\" + (performance.now() - t)/1000 + \" s)\");\r\n                        if (callbackAfterRetrievingStructure) callbackAfterRetrievingStructure();\r\n                        this.main.getWaitOverlay().hide();\r\n\r\n                    });\r\n                }\r\n            }\r\n\r\n            execQuery();\r\n\r\n            // that.executeQuery(sql, (result) => {\r\n            //     // console.log(\"Template written (\" + (performance.now() - t)/1000 + \" s)\");\r\n\r\n            //     if (callbackAfterInitializing != null) callbackAfterInitializing();\r\n            //     that.retrieveDatabaseStructure(() => {\r\n            //         // console.log(\"Database structure retrieved (\" + (performance.now() - t)/1000 + \" s)\");\r\n            //         if (callbackAfterRetrievingStructure) callbackAfterRetrievingStructure();\r\n            //         jQuery('#bitteWarten').css('display', 'none');\r\n\r\n            //     });\r\n            //     // that.executeQuery(\"select * from test\", (results: QueryResult[]) => {console.log(results)}, (error) => {console.log(\"Error:\" + error)});\r\n            // },\r\n            //     (error) => {\r\n            //         console.log(\"Error while setting up database: \" + error);\r\n            //     });\r\n\r\n            // that.worker.postMessage({\r\n            //     action: \"export\"\r\n            // })\r\n\r\n        };\r\n\r\n        this.worker.onerror = (e) => {\r\n            errors.push(\"Worker error: \" + e.error);\r\n            console.log(\"Worker error: \" + e.error);\r\n        }\r\n\r\n        this.worker.postMessage({\r\n            id: that.queryId++,\r\n            action: \"open\",\r\n            buffer: template, /*Optional. An ArrayBuffer representing an SQLite Database file*/\r\n        });\r\n\r\n    }\r\n\r\n    executeQuery(query: string, successCallback: QuerySuccessCallback, errorCallback: QueryErrorCallback) {\r\n\r\n        let id = this.queryId++;\r\n\r\n        this.querySuccessCallbacksMap.set(id, successCallback);\r\n        this.queryErrorCallbackMap.set(id, errorCallback);\r\n\r\n        this.worker.postMessage({\r\n            id: id,\r\n            action: \"exec\",\r\n            sql: query,\r\n            params: {}\r\n        });\r\n\r\n    }\r\n\r\n    export(successCallback: (buffer: Uint8Array) => void, errorCallback: QueryErrorCallback) {\r\n\r\n        let id = this.queryId++;\r\n\r\n        this.querySuccessCallbacksMap.set(id, (results) => { successCallback(results[0].buffer)  });\r\n        this.queryErrorCallbackMap.set(id, errorCallback);\r\n\r\n        this.worker.postMessage({\r\n            id: id,\r\n            action: \"export\",\r\n            params: {}\r\n        });\r\n\r\n    }\r\n\r\n    \r\n\r\n    getDirectoryEntries(callback: (entries: DatabaseDirectoryEntry[]) => void) {\r\n        if (this.databaseDirectoryEntries != null) {\r\n            callback(this.databaseDirectoryEntries);\r\n        } else {\r\n            jQuery.getJSON(\"assets/databases/directory.json\", function (entries: DatabaseDirectoryEntry[]) {\r\n                callback(entries);\r\n            });\r\n        }\r\n    }\r\n\r\n    retrieveDatabaseStructure(callback: (dbStructure: DatabaseStructure) => void) {\r\n\r\n        /*\r\n            @see https://stackoverflow.com/questions/6460671/sqlite-schema-information-metadata\r\n        */\r\n        let sql = `SELECT name, sql FROM sqlite_master WHERE type='table';`\r\n        let that = this;\r\n\r\n        this.executeQuery(sql, (result) => {\r\n            let sql1 = \"\";\r\n            result[0]?.values?.forEach(value => sql1 += `PRAGMA table_info(${value[0]});\\nPRAGMA foreign_key_list(${value[0]});\\nselect count(*) from ${value[0]};\\n\\n`)\r\n\r\n            if (sql1 != \"\") {\r\n                this.executeQuery(sql1, (result1) => {\r\n                    // console.log(\"DB structure: \");\r\n                    // console.log(result1);\r\n\r\n                    that.databaseStructure = that.parseDatabaseStructure(result, result1)\r\n\r\n                    callback(that.databaseStructure);\r\n\r\n                }, (error) => { console.log(error)});\r\n            } else {\r\n                that.databaseStructure = { tables: [] };\r\n                callback(that.databaseStructure);\r\n            }\r\n\r\n        }, (error) => { console.log(error) });\r\n\r\n\r\n    }\r\n\r\n    parseDatabaseStructure(tables: QueryResult[], columns: QueryResult[]): DatabaseStructure {\r\n        this.databaseStructure = {\r\n            tables: []\r\n        };\r\n\r\n        let tableNameToStructureMap: Map<string, TableStructure> = new Map();\r\n\r\n        let index = 0;\r\n        for (let i = 0; i < tables[0].values.length; i++) {\r\n            let tableName = tables[0].values[i][0];\r\n            let tableSQL = tables[0].values[i][1];\r\n\r\n            let tableStructure: TableStructure = {\r\n                name: tableName,\r\n                size: 0,\r\n                completeSQL: tableSQL,\r\n                columns: []\r\n            }\r\n\r\n            tableNameToStructureMap.set(tableName, tableStructure);\r\n\r\n            this.databaseStructure.tables.push(tableStructure);\r\n\r\n            let columnArray = columns[index].values;\r\n            let foreignKeyList: any[][] = null;\r\n            if (columns.length > index + 1 && columns[index + 1].columns[0] == \"id\") {\r\n                foreignKeyList = columns[index + 1].values;\r\n                index++;\r\n            }\r\n            index++;\r\n            let size: number = columns[index].values[0][0];\r\n            index++;\r\n\r\n            tableStructure.size = size;\r\n\r\n            columnArray.forEach(columnArray1 => {\r\n                let cid: number = columnArray1[0];\r\n                let name: string = columnArray1[1];\r\n                let type: string = columnArray1[2];\r\n                let notNull: boolean = columnArray1[3] == 1;\r\n                let dflt_value: string = columnArray1[4];\r\n                let isPrimaryKey: boolean = columnArray1[5] != 0;\r\n\r\n                let columnStructure: ColumnStructure = {\r\n                    name: name,\r\n                    isPrimaryKey: isPrimaryKey,\r\n                    isAutoIncrement: isPrimaryKey && tableSQL.toLowerCase().indexOf(\"autoincrement\") >= 0,\r\n                    completeTypeSQL: type,\r\n                    table: tableStructure,\r\n                    typeLengths: [],\r\n                    defaultValue: dflt_value,\r\n                    notNull: notNull\r\n                }\r\n                /*\r\n                    columns: (8) [\"id\", \"seq\", \"table\", \"from\", \"to\", \"on_update\", \"on_delete\", \"match\"]\r\n                    values: Array(1)\r\n                    0: (8) [0, 0, \"land\", \"LNR\", \"lnr\", \"NO ACTION\", \"NO ACTION\", \"NONE\"]\r\n                */\r\n\r\n                if (foreignKeyList != null) {\r\n                    let fkInfo: any[] = foreignKeyList.find(foreignKeyInfo => foreignKeyInfo[3].toLocaleLowerCase() == name.toLocaleLowerCase());\r\n                    if (fkInfo != null) {\r\n                        columnStructure.referencesRawData = fkInfo;\r\n                    }\r\n                }\r\n\r\n                tableStructure.columns.push(columnStructure);\r\n\r\n            });\r\n\r\n        }\r\n\r\n        for (let ts of this.databaseStructure.tables) {\r\n            for (let cs of ts.columns) {\r\n                if (cs.referencesRawData != null) {\r\n                    let table = tableNameToStructureMap.get(cs.referencesRawData[2]);\r\n                    // SQlite doesn't remove foreign key references to columns of a dropped table\r\n                    if(table == null) continue;\r\n                    let column = table.columns.find(c => c.name.toLocaleLowerCase() == cs.referencesRawData[4].toLocaleLowerCase());\r\n                    cs.references = column;\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log(this.databaseStructure);\r\n\r\n        return this.databaseStructure;\r\n\r\n    }\r\n\r\n    static getDumpType(dump: Uint8Array): DatabaseDumpType {\r\n\r\n        let sqliteMagicBytes: number[] = [0x53, 0x51, 0x4c, 0x69, 0x74, 0x65];\r\n        let zlibMagicByte: number = 0x78;\r\n\r\n        let found: boolean = true;\r\n        for (let i = 0; i < sqliteMagicBytes.length; i++) {\r\n            if (sqliteMagicBytes[i] != dump[i]) {\r\n                found = false;\r\n                break;\r\n            }\r\n        }\r\n        if (found) return \"binaryUncompressed\";\r\n\r\n        if (dump[0] == zlibMagicByte) return \"binaryCompressed\";\r\n\r\n        return \"other\";\r\n\r\n    }\r\n\r\n\r\n}","import { TokenType } from \"../lexer/Token.js\";\r\nimport { ASTNode, ConstantNode, CreateTableColumnNode, CreateTableNode, ForeignKeyInfo, InsertNode } from \"./AST.js\";\r\nimport { SQLStatement } from \"./Parser.js\";\r\n\r\nexport class StatementCleaner {\r\n\r\n    MaxRowsPerInsert: number = 300;\r\n\r\n    clean(statement: SQLStatement): string {\r\n        switch(statement.ast.type){\r\n            case TokenType.keywordCreate:   // Create Table statement\r\n                statement.sqlCleaned = this.cleanCreateTableStatement(statement.ast);\r\n                return statement.sqlCleaned;\r\n            case TokenType.keywordInsert:\r\n                statement.sqlCleaned = this.cleanInsertStatement(statement.ast);\r\n                return statement.sqlCleaned;\r\n            default:\r\n                return statement.sql;\r\n                break;\r\n        }\r\n    }\r\n\r\n    cleanInsertStatement(ast: InsertNode): string {\r\n        let statementHeader: string = `insert into ${ast.table.identifier}`;\r\n\r\n        if(ast.columnList != null && ast.columnList.length > 0){\r\n            statementHeader += `(${ast.columnList.map(c => c.identifier).join(\", \")})`;\r\n        }\r\n\r\n        statementHeader += '\\nvalues\\n';\r\n\r\n        let st = \"\";\r\n        \r\n        let lines: string[] = [];\r\n        if(ast.values != null && ast.values.length > 0){\r\n            for(let vline of ast.values){\r\n                lines.push(`\\n(${vline.map(v => this.cleanValue(v)).join(\", \")})`);\r\n            }\r\n            //st += lines.join(\",\\n\");\r\n        }\r\n\r\n        while(lines.length > 0){\r\n            st += statementHeader;\r\n            st += lines.splice(0, Math.max(this.MaxRowsPerInsert, lines.length)).join(\",\\n\");\r\n            st += \";\\n\";\r\n        }\r\n\r\n        return st;\r\n    }\r\n\r\n    cleanValue(v: ConstantNode){\r\n        if(v.constantType == TokenType.stringConstant){\r\n            let s: string = v.constant;\r\n            s = s.replace(/'/g, \"''\");\r\n            return `'${s}'`;\r\n        }else {\r\n            return v.constant;\r\n        }\r\n    }\r\n\r\n    cleanCreateTableStatement(ast: CreateTableNode): string {\r\n        let st: string = `create table ${ast.ifNotExists?\" if not exists\":\"\"} ${ast.identifier}(\\n   `;\r\n\r\n        st += ast.columnList.map( column => this.cleanColumnDef(column)).join(\",\\n   \");\r\n        if(ast.foreignKeyInfoList != null && ast.foreignKeyInfoList.length > 0){\r\n            st += \",\\n\" + ast.foreignKeyInfoList.map(fki => this.cleanForeignKeyInfo(fki)).join(\",\\n   \");\r\n        }\r\n\r\n        let pkc = ast.combinedPrimaryKeyColumns.slice().map(s => s.toLocaleLowerCase());\r\n        for(let column of ast.columnList){\r\n            let c = column.identifier.toLocaleLowerCase();\r\n            if(column.isAutoIncrement && pkc.indexOf(c) >= 0){\r\n                pkc.splice(pkc.indexOf(c), 1);\r\n            }\r\n        }\r\n\r\n        if(pkc.length > 0){\r\n            st += `,\\nprimary key(${pkc.join(\", \")})`;\r\n        }\r\n        st += '\\n);';\r\n\r\n        return st;\r\n    }\r\n\r\n    cleanForeignKeyInfo(fki: ForeignKeyInfo): string {\r\n        return `${fki.column} references ${fki.referencesTable}(${fki.referencesColumn})`;\r\n    }\r\n\r\n    cleanColumnDef(column: CreateTableColumnNode):string {\r\n\r\n        let type = column.baseType.toString();\r\n        if(type == \"int\" && column.isAutoIncrement){\r\n            type = \"integer\";\r\n        }\r\n\r\n        let st: string = `${column.identifier} ${type}`;\r\n        if(column.parameters != null && column.parameters.length > 0){\r\n            st += `(${column.parameters.join(\", \")})`;\r\n        }\r\n        if(column.notNull){\r\n            st += \" not null\";\r\n        }\r\n        if(column.defaultValue != null){\r\n            st += \" default \" + column.defaultValue;\r\n        }\r\n        if(column.isPrimary || column.isAutoIncrement){\r\n            st += \" primary key\";\r\n        }\r\n        if(column.isAutoIncrement){\r\n            st += \" autoincrement\";\r\n        }\r\n        if(column.foreignKeyInfo != null){\r\n            let fki = column.foreignKeyInfo;\r\n            let c: string = fki.referencesColumn;\r\n            if(fki.referencesTable) c = fki.referencesTable + \"(\" + c + \")\";\r\n            st += \" references \" + c;\r\n        }\r\n        if(column.collate != null){\r\n            let collate = column.collate.toLocaleLowerCase();\r\n            if([\"binary\", \"nocase\", \"rtrim\"].indexOf(collate) >= 0){\r\n                st += \" collate \" + collate;\r\n            }\r\n        }\r\n        let parameters = column.parameters? column.parameters : [0, 0];\r\n        let checkFunction = column.baseType.checkFunction(column.identifier, parameters);\r\n        if(checkFunction != \"\"){\r\n            st += \" \" + checkFunction;\r\n        }\r\n        return st;\r\n    }\r\n\r\n}","import { Lexer } from \"../compiler/lexer/Lexer.js\";\nimport { TokenType } from \"../compiler/lexer/Token.js\";\nimport { AlterTableNode, CreateTableNode, InsertNode } from \"../compiler/parser/AST.js\";\nimport { Module } from \"../compiler/parser/Module.js\";\nimport { Parser, SQLStatement } from \"../compiler/parser/Parser.js\";\nimport { StatementCleaner } from \"../compiler/parser/StatementCleaner.js\";\nimport { MainBase } from \"../main/MainBase.js\";\nimport { LoadableDatabase } from \"./DatabaseLoader.js\";\nimport { DatabaseTool } from \"./DatabaseTools.js\";\n\nexport class MySqlImporter {\n\n    private createTableNodes: CreateTableNode[];\n    private insertNodes: InsertNode[];\n    private tableModifyingNodes: AlterTableNode[];\n\n    constructor(private main: MainBase) {\n\n    }\n\n    async loadFromUrl(url: string): Promise<LoadableDatabase> {\n        if (url == null) return;\n\n        let text = null;\n        if (url.endsWith(\".zip\")) {\n            text = await this.unzipURL(url);\n        } else {\n            text = await (await fetch(url)).text();\n        }\n\n        return this.importFromText(text);\n    }\n\n    async loadFromFile(file: globalThis.File): Promise<LoadableDatabase> {\n        if (file == null) return;\n\n        if (file.name.endsWith(\".zip\")) {\n            let text = await this.unzipFile(file);\n            return this.importFromText(text);\n        } else {\n\n            return new Promise<LoadableDatabase>(\n                (resolve, reject) => {\n                    var reader = new FileReader();\n                    reader.onload = (event) => {\n                        let text = <string>event.target.result;\n                        resolve(this.importFromText(text));\n                    };\n                    reader.readAsText(file);\n                }\n            )\n\n\n        }\n    }\n\n    async unzipURL(url: string): Promise<string> {\n        //@ts-ignore\n        const reader = new zip.ZipReader(new zip.HttpReader(url));\n        return this.unzipIntern(reader);\n    }\n\n    async unzipFile(file: globalThis.File): Promise<string> {\n        // create a BlobReader to read with a ZipReader the zip from a Blob object\n        //@ts-ignore\n        const reader = new zip.ZipReader(new zip.BlobReader(file));\n        return this.unzipIntern(reader);\n    }\n\n    async unzipIntern(reader: any): Promise<string> {\n        // get all entries from the zip\n        let entries = await reader.getEntries();\n        entries = entries.filter(entry => entry.filename.endsWith(\".sql\"))\n        let text: string = null;\n        if (entries.length) {\n\n            // get first entry content as text by using a TextWriter\n            text = await entries[0].getData(\n                // writer\n                //@ts-ignore\n                new zip.TextWriter(),\n                // options\n                {\n                    onprogress: (index, max) => {\n                        // onprogress callback\n                    }\n                }\n            );\n        }\n\n        // close the ZipReader\n        await reader.close();\n\n        return text;\n    }\n\n    private async importFromText(text: string): Promise<LoadableDatabase> {\n        if (text == null) return null;\n\n        let lexer: Lexer = new Lexer();\n        let lexOutput = lexer.lex(text);\n\n        let parser: Parser = new Parser();\n        let m: Module = new Module({\n            dirty: false,\n            name: \"\",\n            saved: true,\n            student_edited_after_revision: false,\n            submitted_date: null,\n            text: text,\n            text_before_revision: null,\n            version: 0\n        }, this.main);\n        m.tokenList = lexOutput.tokens;\n\n        parser.parse(m);\n\n        this.createTableNodes = m.sqlStatements.filter(st => st.ast.type == TokenType.keywordCreate).map(st => <CreateTableNode>st.ast);\n        this.insertNodes = m.sqlStatements.filter(st => st.ast.type == TokenType.keywordInsert).map(st => <InsertNode>st.ast);\n        this.tableModifyingNodes = m.sqlStatements.filter(st => st.ast.type == TokenType.keywordAlter &&\n            (<AlterTableNode>st.ast).kind == \"omittedKind\").map(st => <AlterTableNode>st.ast);\n\n        for (let tmn of this.tableModifyingNodes) {\n            let createTableNode = this.findCreateTableNode(tmn.tableIdentifier);\n            if (createTableNode == null) continue;\n\n            if (tmn.primaryKeys != null) {\n                createTableNode.combinedPrimaryKeyColumns = tmn.primaryKeys;\n                createTableNode.columnList.forEach(c => c.isPrimary = false);\n            }\n\n            if (tmn.autoIncrementColumn != null) {\n                let pcn = this.findCreateTableColumnNode(createTableNode, tmn.autoIncrementColumn);\n                if (pcn != null) pcn.isPrimary = true;\n            }\n\n            if (tmn.modifyColumnInfo != null) {\n                for (let mci of tmn.modifyColumnInfo) {\n                    let mcn = this.findCreateTableColumnNode(createTableNode, mci.identifier);\n                    let index = createTableNode.columnList.indexOf(mcn);\n                    createTableNode.columnList.splice(index, 1, mci);\n                }\n            }\n\n            if (tmn.foreignKeys != null) {\n                for (let fk of tmn.foreignKeys) {\n                    createTableNode.foreignKeyInfoList.push(fk);\n                }\n            }\n\n            if (tmn.indices != null) {\n                for (let index of tmn.indices) {\n                    m.sqlStatements.push({\n                        acceptedBySQLite: true,\n                        from: null, to: null, hasErrors: false,\n                        ast: {\n                            type: TokenType.keywordIndex,\n                            columnIdentifier: index.column,\n                            indexIdentifier: index.index_name,\n                            tableIdentifier: tmn.tableIdentifier,\n                            unique: index.unique,\n                            position: null, endPosition: null, symbolTable: null\n                        },\n                        sql: `create ${index.unique ? 'unique ' : ''} index ${index.index_name} on ${tmn.tableIdentifier}(${index.column});`\n                    })\n                }\n            }\n        }\n\n        return this.makeDatabase(m.sqlStatements);\n    }\n\n    private findCreateTableNode(tableIdentifier: string): CreateTableNode {\n        tableIdentifier = tableIdentifier.toLocaleLowerCase();\n        return this.createTableNodes.find(node => node.identifier.toLocaleLowerCase() == tableIdentifier);\n    }\n\n    private findCreateTableColumnNode(tableNode: CreateTableNode, columnIdentifier: string) {\n        columnIdentifier = columnIdentifier.toLocaleLowerCase();\n        return tableNode.columnList.find(columnNode => columnNode.identifier.toLocaleLowerCase() == columnIdentifier)\n    }\n\n    private async makeDatabase(statements: SQLStatement[]): Promise<LoadableDatabase> {\n\n        let statementCleaner: StatementCleaner = new StatementCleaner();\n\n        let sqlStatements: string[] = statements.filter(st => st.ast.type != TokenType.omittedeStatement)\n            .map(st => statementCleaner.clean(st));\n        sqlStatements.unshift(\"PRAGMA foreign_keys = OFF;\");\n        sqlStatements.push(\"PRAGMA foreign_keys = ON;\")\n\n        let dbTool = new DatabaseTool(this.main);\n\n        let promise = new Promise<LoadableDatabase>((resolve, reject) => {\n            dbTool.initializeWorker(null, sqlStatements, () => {\n                dbTool.export((buffer) => {\n                    resolve({\n                        binDump: buffer\n                    })\n                }, (error) => {\n                    reject(error);\n                })\n            });\n\n        })\n\n        return promise;\n\n    }\n\n\n}","import { MainBase } from \"../main/MainBase.js\";\r\nimport { LoadableDatabase } from \"./DatabaseLoader.js\";\r\nimport { DatabaseTool } from \"./DatabaseTools.js\";\r\nimport { downloadFile } from \"./HtmlTools.js\";\r\nimport { MySqlImporter } from \"./MySqlImporter.js\";\r\n\r\nexport class DatabaseImportExport {\r\n\r\n    async loadFromFile(file: globalThis.File, main: MainBase): Promise<LoadableDatabase>{\r\n        let that = this;\r\n        if (file == null) return;\r\n        main.getWaitOverlay().show(\"Lese Datei ein...\");\r\n        if(file.name.endsWith(\".sql\") || file.name.endsWith(\".zip\")){\r\n            let ld = await new MySqlImporter(main).loadFromFile(file);\r\n            main.getWaitOverlay().hide();\r\n            return ld;\r\n        } else {\r\n            var reader = new FileReader();\r\n            return new Promise<LoadableDatabase>((resolve, reject) => {\r\n                reader.onload = (event) => {\r\n                    let ab: ArrayBuffer = <ArrayBuffer>event.target.result;\r\n                    let db: Uint8Array = new Uint8Array(ab);\r\n        \r\n                    //@ts-ignore\r\n                    if(DatabaseTool.getDumpType(db) == \"binaryCompressed\") db = pako.inflate(db);\r\n                    \r\n                    main.getWaitOverlay().hide();\r\n                    resolve({binDump: db});\r\n                };\r\n                reader.readAsArrayBuffer(file);\r\n    \r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    saveToFile(dbTool: DatabaseTool){\r\n        dbTool.export((db) => {\r\n            let filename: string = prompt(\"Bitte geben Sie den Dateinamen ein\", \"datenbank.sqLite\");\r\n            if (filename == null) {\r\n                alert(\"Der Dateiname ist leer, daher wird nichts gespeichert.\");\r\n                return;\r\n            }\r\n            if (!filename.endsWith(\".sqLite\")) filename = filename + \".sqLite\";\r\n            downloadFile(new Blob([db.buffer]), filename, true);\r\n        }, () => {});\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { CreateWorkspaceData, WorkspaceData } from \"../../communication/Data.js\";\r\nimport { DatabaseImportExport } from \"../../tools/DatabaseImportExport.js\";\r\nimport { LoadableDatabase } from \"../../tools/DatabaseLoader.js\";\r\nimport { DatabaseTool } from \"../../tools/DatabaseTools.js\";\r\nimport { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { TemplateUploader } from \"../../tools/TemplateUploader.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionElement } from \"./Accordion.js\";\r\n\r\ntype CreateMode = \"emptyDatabase\" | \"fromTemplate\" | \"useExistingDatabase\" | \"useDumpFile\";\r\n\r\nexport class NewDatabaseDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    database: LoadableDatabase;\r\n\r\n    constructor(private main: Main, private owner_id: number, private path: string[]) {\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Neue Datenbank anlegen</div>\r\n\r\n            <div class=\"jo_ds_settings\">\r\n               <div class=\"jo_ds_settings_caption\">Name der Datenbank:</div><div><input class=\"dialog-input jo_databasename\" value=\"Neue Datenbank\"></input></div>\r\n            </div>\r\n\r\n             <div class=\"jo_tabheadings jo_cdtabheading\">\r\n             <div class=\"jo_tabheading\" data-target=\"jo_createEmptyDatabaseTab\">Leere Datenbank</div>\r\n             <div class=\"jo_tabheading jo_active\" data-target=\"jo_createDatabaseFromTemplateTab\">Von Vorlage kopieren</div>\r\n             <div class=\"jo_tabheading\" data-target=\"jo_createDatabaseUseExistingTab\">Bestehende Datenbank mitnutzen</div>\r\n             <div class=\"jo_tabheading\" data-target=\"jo_createDatabaseUseDumpFile\">Import aus Dumpfile (SQLite- oder MySQL-Format)</div>\r\n             </div>\r\n             <div class=\"jo_tabs\" style=\"width: 100%; margin-top: 10px\">\r\n                 <div class=\"jo_createEmptyDatabaseTab\">\r\n                    <div class=\"jo_createDatabaseDescription\">\r\n                        Erstellt wird eine leere Datenbank.\r\n                    </div>\r\n                 </div>\r\n                 <div class=\"jo_createDatabaseFromTemplateTab jo_active\">\r\n                    <div class=\"jo_ds_settings\">\r\n                       <div class=\"jo_ds_settings_caption\">Vorlage suchen:</div><div><input class=\"dialog-input jo_templatename\"></input></div>\r\n                    </div>\r\n                    <div class=\"jo_scrollable jo_templatelist\"></div>\r\n                 </div>\r\n                <div class=\"jo_createDatabaseUseExistingTab\">\r\n                    <div class=\"jo_createDatabaseDescription\">Wenn Du die Datenbank einer anderen Nutzerin/eines anderen Nutzers mitnutzen möchtest, brauchst Du einen Zugriffscode von ihr/ihm. Er ist unter Datenbank->Einstellungen zu finden.            \r\n                    </div>\r\n                    <div class=\"jo_ds_settings\">\r\n                       <div class=\"jo_ds_settings_caption\">Zugriffscode:</div><div><input class=\"dialog-input jo_databasecodeinput\"></input></div>\r\n                    </div>\r\n                 </div>\r\n                <div class=\"jo_createDatabaseUseDumpFile\">\r\n                    <div class=\"jo_createDatabaseDescription\">Wähle hier die Datei mit dem Datenbank-Dump aus (Endung .sqLite (SQLite-Datenbankdatei) oder .zip (gepackter MySql-Dump) oder .sql (MySql-Dump)):</div>\r\n                    <input type=\"file\" class=\"jo_dumpfile\" name=\"dumpfile\" style=\"padding: 10px\"/>\r\n                    <div class=\"jo_databaseimport_dropzone\" style=\"width: 70vw; margin-left: 10px\">Alternativ: Datei in dieses Feld ziehen</div>\r\n                    <div class=\"jo_databaseimport_ok\"></div>\r\n                 </div>\r\n             </div>\r\n\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_create_database_button\">Datenbank anlegen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        makeTabs(this.$dialog);\r\n\r\n        let $templatelist = jQuery('.jo_templatelist');\r\n        this.main.networkManager.fetchTemplateList((templatelist) => {\r\n            templatelist.forEach(tle => {\r\n\r\n                let $tle = jQuery('<div class=\"jo_templateListEntry\"></div>')\r\n                $tle.append(jQuery(`<div class=\"jo_tle_firstline\">${tle.name} <span class=\"jo_tle_ownername\"> (von ${tle.ownerName})</span></div>`))\r\n                $tle.append(jQuery(`<div class=\"jo_tle_secondline\">${tle.description}</div>`))\r\n                $tle.data('templateId', tle.id);\r\n                $tle.data('name', tle.name);\r\n\r\n                $templatelist.append($tle);\r\n                tle.$tle = <JQuery<HTMLDivElement>>$tle;\r\n\r\n                $tle.on('pointerdown', () => {\r\n                    $templatelist.find('.jo_templateListEntry').removeClass('jo_active');\r\n                    $tle.addClass('jo_active');\r\n                })\r\n\r\n            })\r\n            let $templateName = <JQuery<HTMLInputElement>>jQuery('.jo_templatename');\r\n            $templateName.on('input', () => {\r\n                let s = <string>$templateName.val();\r\n                $templatelist.find('.jo_templateListEntry').hide();\r\n                templatelist.forEach(tle => {\r\n                    let tleString = tle.name + tle.ownerName + (tle.description ? tle.description : \"\");\r\n                    if (tleString.indexOf(s) >= 0) tle.$tle.show();\r\n                })\r\n            })\r\n        })\r\n\r\n        let $dropZone = jQuery('.jo_databaseimport_dropzone');\r\n\r\n        $dropZone.on('dragover', (evt) => {\r\n            evt.stopPropagation();\r\n            evt.preventDefault();\r\n            evt.originalEvent.dataTransfer.dropEffect = 'copy';\r\n        })\r\n        $dropZone.on('drop', (evt) => {\r\n            evt.stopPropagation();\r\n            evt.preventDefault();\r\n\r\n            var files = evt.originalEvent.dataTransfer.files;\r\n            this.importFile(files);\r\n        })\r\n\r\n        let $dumpFileInput = jQuery('.jo_dumpfile');\r\n        $dumpFileInput.on('change', (event) => {\r\n            //@ts-ignore\r\n            var files: FileList = event.originalEvent.target.files;\r\n            this.importFile(files).then(() => {\r\n                $dumpFileInput.val(null);\r\n            });\r\n\r\n        })\r\n\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { this.showMainWindow(); });\r\n        jQuery('#jo_ds_create_database_button').on('click', () => {\r\n            let createMode: CreateMode = \"emptyDatabase\";\r\n            if (jQuery('.jo_createDatabaseFromTemplateTab').hasClass('jo_active')) createMode = \"fromTemplate\";\r\n            if (jQuery('.jo_createDatabaseUseExistingTab').hasClass('jo_active')) createMode = \"useExistingDatabase\";\r\n            if (jQuery('.jo_createDatabaseUseDumpFile').hasClass('jo_active')) createMode = \"useDumpFile\";\r\n\r\n            let workspaceData: CreateWorkspaceData = {\r\n                id: null,\r\n                isFolder: false,\r\n                name: <string>jQuery('.dialog-input.jo_databasename').val(),\r\n                path: this.path.join(\"/\"),\r\n            }\r\n\r\n            switch (createMode) {\r\n                case \"emptyDatabase\":\r\n                    this.createWorkspace(workspaceData);\r\n                    break;\r\n                case \"fromTemplate\":\r\n                    let $template = jQuery('.jo_templateListEntry.jo_active');\r\n                    if ($template.length != 1) {\r\n                        alert('Bitte wählen Sie genau eine Vorlage aus.');\r\n                        return;\r\n                    } else {\r\n                        workspaceData.template_database_id = $template.data('templateId');\r\n                        if (workspaceData.name == \"Neue Datenbank\") workspaceData.name = $template.data('name');\r\n                        this.createWorkspace(workspaceData);\r\n                    }\r\n                    break;\r\n                case \"useExistingDatabase\":\r\n                    let code = <string>jQuery('.jo_databasecodeinput').val();\r\n                    let tIndex = code.indexOf(\"T\");\r\n                    if (tIndex == -1) {\r\n                        alert(\"Der Zugriffscode muss das Zeichen T enthalten.\");\r\n                        return;\r\n                    }\r\n                    workspaceData.otherDatabaseId = Number.parseInt(code.substring(0, tIndex));\r\n                    workspaceData.secret = code.substring(tIndex + 1);\r\n                    this.createWorkspace(workspaceData);\r\n                    break;\r\n                case \"useDumpFile\":\r\n                    if (this.database != null) {\r\n                        new TemplateUploader().uploadCurrentDatabase(-1, this.main, this.database.binDump,\r\n                            \"uploadBaseTemplateForWorkspace\",\r\n                            (response) => {\r\n                            workspaceData.template_id = response.newTemplateId;\r\n                            this.createWorkspace(workspaceData);\r\n                        });\r\n\r\n                    } else {\r\n                        alert('Bitte laden Sie zuerst den Binärdump einer Datenbank hoch.')\r\n                        return;\r\n                    }\r\n                    break;\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    private createWorkspace(workspaceData: CreateWorkspaceData) {\r\n        this.main.networkManager.sendCreateWorkspace(workspaceData, this.owner_id, (error?: string) => {\r\n            if (error != null) { alert(error); return; }\r\n\r\n            let w = this.main.createNewWorkspace(workspaceData.name, this.owner_id);\r\n            w.path = workspaceData.path;\r\n            w.id = workspaceData.id;\r\n            w.sql_history = \"\";\r\n\r\n            let projectExplorer = this.main.projectExplorer;\r\n\r\n            this.main.workspaceList.push(w);\r\n            let accordionElement: AccordionElement = {\r\n                name: workspaceData.name,\r\n                externalElement: w,\r\n                iconClass: \"workspace\",\r\n                isFolder: false,\r\n                path: this.path\r\n            };\r\n\r\n            projectExplorer.workspaceListPanel.addElement(accordionElement, true);\r\n\r\n            w.renderSettingsButton(accordionElement);\r\n\r\n            projectExplorer.workspaceListPanel.sortElements();\r\n            projectExplorer.fileListPanel.sortElements();\r\n\r\n            projectExplorer.setWorkspaceActive(w);\r\n\r\n            this.showMainWindow();\r\n\r\n        });\r\n    }\r\n\r\n    async importFile(files: FileList) {\r\n        let that = this;\r\n        let importer = new DatabaseImportExport();\r\n        let db: LoadableDatabase = await importer.loadFromFile(files[0], this.main)\r\n        let isDatabase: boolean = false;\r\n        let dumpFileType = DatabaseTool.getDumpType(db.binDump);\r\n        if (dumpFileType == \"binaryCompressed\") {\r\n            // @ts-ignore\r\n            let dbUncompressed = pako.inflate(db.binDump);\r\n            if (DatabaseTool.getDumpType(dbUncompressed) == \"binaryUncompressed\") {\r\n                isDatabase = true;\r\n            }\r\n        } else if (DatabaseTool.getDumpType(db.binDump) == \"binaryUncompressed\") {\r\n            //@ts-ignore\r\n            db.binDump = pako.deflate(db.binDump);\r\n            isDatabase = true;\r\n        }\r\n\r\n        if (isDatabase) {\r\n            that.database = db;\r\n            jQuery('.jo_databaseimport_ok').html(\"Die Datenbankdatei wurde erfolgreich von Datei eingelesen. Sie können die Datenbank jetzt durch Klick auf den Button unten erstellen.\");\r\n        } else {\r\n            alert(\"In der Datei befindet sich kein Binärdump einer Datenbank.\");\r\n        }\r\n    }\r\n\r\n    showMainWindow() {\r\n        jQuery('#main').css('visibility', 'visible');\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n    }\r\n\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { PasswordChanger } from \"./UserMenu.js\";\r\nimport { DatabaseSettingsDialog } from \"./DatabaseSettingsDialog.js\";\r\nimport { DatabaseImportExport } from \"../../tools/DatabaseImportExport.js\";\r\nimport { NewDatabaseDialog } from \"./NewDatabaseDialog.js\";\r\n\r\nexport type Action = (identifier: string) => void;\r\n\r\ntype Menu = {\r\n    items: MenuItem[];\r\n    $element?: JQuery<HTMLElement>;\r\n    level?: number;\r\n}\r\n\r\ntype MenuItem = {\r\n    identifier: string;\r\n    $element?: JQuery<HTMLElement>;\r\n    action?: Action;\r\n    link?: string;\r\n    subMenu?: Menu;\r\n}\r\n\r\nexport class MainMenu {\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n\r\n    currentSubmenu: { [level: number]: JQuery<HTMLElement> } = {};\r\n    openSubmenusOnMousemove: boolean = false;\r\n\r\n    initGUI(user: UserData) {\r\n\r\n        let that = this;\r\n        let editor = this.main.getMonacoEditor();\r\n\r\n        let mainMenu: Menu = {\r\n            items: [\r\n                {\r\n                    identifier: \"Datei\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Speichern und Beenden\",\r\n                                action: () => { jQuery('#buttonLogout').trigger(\"click\"); }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Bearbeiten\", subMenu:\r\n                    {\r\n                        items: [\r\n                            { identifier: \"Rückgängig (Strg + z)\", action: () => { editor.trigger(\".\", \"undo\", {}); } },\r\n                            { identifier: \"Wiederholen (Strg + y)\", action: () => { editor.trigger(\".\", \"redo\", {}); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Kopieren (Strg + c)\", action: () => { editor.getAction(\"editor.action.clipboardCopyAction\").run(); } },\r\n                            { identifier: \"Ausschneiden (Strg + x)\", action: () => { editor.getAction(\"editor.action.clipboardCutAction\").run(); } },\r\n                            { identifier: \"Nach oben kopieren (Alt + Shift + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.copyLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten kopieren (Alt + Shift + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.copyLinesDownAction\").run(); } },\r\n                            { identifier: \"Nach oben verschieben (Alt + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.moveLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten verschieben (Alt + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.moveLinesDownAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Suchen... (Strg + f)\", action: () => { editor.getAction(\"actions.find\").run(); } },\r\n                            { identifier: \"Ersetzen... (Strg + h)\", action: () => { editor.getAction(\"editor.action.startFindReplaceAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Aus-/Einkommentieren (Strg + #)\", action: () => { editor.getAction(\"editor.action.commentLine\").run(); } },\r\n                            { identifier: \"Dokument formatieren (Alt + Shift + f)\", action: () => { editor.getAction(\"editor.action.formatDocument\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Finde zugehörige Klammer (Strg + k)\", action: () => { editor.getAction(\"editor.action.jumpToBracket\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Alles zusammenfalten\", action: () => { editor.getAction(\"editor.foldAll\").run(); } },\r\n                            { identifier: \"Alles auffalten\", action: () => { editor.getAction(\"editor.unfoldAll\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Vorschlag auslösen (Strg + Leertaste)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.triggerSuggest\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n                            { identifier: \"Parameterhilfe (Strg + Shift + Leertaste)\", action: () => { editor.getAction(\"editor.action.triggerParameterHints\").run(); } },\r\n                            {\r\n                                identifier: \"Gehe zur Definition (Strg + Click)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.revealDefinition\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Ansicht\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Theme\",\r\n                                subMenu: {\r\n                                    items: [\r\n                                        {\r\n                                            identifier: \"Dark\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"dark\");\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            identifier: \"Light\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"light\");\r\n                                            }\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Hoher Kontrast im Editor ein/aus\", action: () => { editor.getAction(\"editor.action.toggleHighContrast\").run(); } },\r\n\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Zoom out (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(-4); } },\r\n                            { identifier: \"Zoom normal\", action: () => { this.main.editor.setFontSize(14); } },\r\n                            { identifier: \"Zoom in (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(4); } },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Datenbank\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Neue Datenbank anlegen...\", action: () => {\r\n                                    let owner_id: number = that.main.user.id;\r\n                                    if (that.main.workspacesOwnerId != null) {\r\n                                        owner_id = that.main.workspacesOwnerId;\r\n                                    }\r\n\r\n                                    new NewDatabaseDialog(that.main, owner_id, []);\r\n                                }\r\n                            },\r\n                            { identifier: \"Einstellungen...\", action: () => { new DatabaseSettingsDialog(this.main, this.main.currentWorkspace) } },\r\n                            {\r\n                                identifier: \"Export als Binärdump (.sqLite-File)...\", action: () => {\r\n                                    new DatabaseImportExport().saveToFile(this.main.getDatabaseTool());\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n\r\n            ]\r\n        };\r\n\r\n        jQuery('#mainmenu').empty();\r\n        this.initMenu(mainMenu, 0);\r\n    }\r\n\r\n    switchTheme(theme: string) {\r\n        this.main.viewModeController.setTheme(theme);\r\n    }\r\n\r\n    initMenu(menu: Menu, level?: number) {\r\n\r\n        menu.level = level;\r\n\r\n        if (level == 0) {\r\n            menu.$element = jQuery('#mainmenu');\r\n        } else {\r\n            menu.$element = jQuery('<div class=\"jo_submenu\"></div>');\r\n            jQuery('body').append(menu.$element);\r\n        }\r\n\r\n        menu.$element.data('model', menu);\r\n        for (let mi of menu.items) {\r\n            if (mi.identifier == '-') {\r\n                mi.$element = jQuery('<div class=\"jo_menuitemdivider\"></div>');\r\n            } else {\r\n                mi.$element = jQuery('<div>' + mi.identifier + '</div>');\r\n                if (mi.link != null) {\r\n                    let $link = jQuery('<a href=\"' + mi.link + '\" target=\"_blank\" class=\"jo_menulink\"></a>');\r\n                    $link.on(\"mousedown\", (event) => {\r\n                        event.stopPropagation();\r\n                        setTimeout(() => {\r\n                            menu.$element.hide();\r\n                        }, 500);\r\n                    })\r\n                    $link.append(mi.$element);\r\n                    mi.$element = $link;\r\n                }\r\n                if (mi.subMenu != null) {\r\n                    this.initMenu(mi.subMenu, level + 1);\r\n                }\r\n                this.initMenuitemCallbacks(menu, mi);\r\n                if (level == 0) {\r\n                    mi.$element.addClass('jo_mainmenuitem');\r\n                }\r\n            }\r\n            menu.$element.append(mi.$element);\r\n            mi.$element.data('model', mi);\r\n        }\r\n\r\n        let that = this;\r\n        jQuery(document).on('mousedown', () => {\r\n            for (let i = 0; i < 5; i++) {\r\n                if (that.currentSubmenu[i] != null) {\r\n                    that.currentSubmenu[i].hide();\r\n                    that.currentSubmenu[i] = null;\r\n                }\r\n            }\r\n            that.openSubmenusOnMousemove = false;\r\n        });\r\n\r\n    }\r\n\r\n    initMenuitemCallbacks(menu: Menu, mi: MenuItem) {\r\n        let that = this;\r\n\r\n        if (mi.action != null) {\r\n            mi.$element.on('mousedown', (ev) => { mi.action(mi.identifier); });\r\n        }\r\n\r\n        if (mi.subMenu != null) {\r\n            mi.$element.on('mousedown', (ev) => {\r\n                that.opensubmenu(mi);\r\n                that.openSubmenusOnMousemove = true;\r\n                ev.stopPropagation();\r\n            });\r\n\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.openSubmenusOnMousemove) {\r\n                    that.opensubmenu(mi);\r\n                } else {\r\n                    if (that.currentSubmenu[menu.level + 1] != null) {\r\n                        that.currentSubmenu[menu.level + 1].hide();\r\n                        that.currentSubmenu[menu.level + 1] = null;\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.currentSubmenu[menu.level + 1] != null) {\r\n                    that.currentSubmenu[menu.level + 1].hide();\r\n                    that.currentSubmenu[menu.level + 1] = null;\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    opensubmenu(mi: MenuItem) {\r\n\r\n        let subMenu = mi.subMenu;\r\n\r\n        let left: number;\r\n        let top: number;\r\n        if (subMenu.level == 1) {\r\n            left = mi.$element.position().left;\r\n            top = 30;\r\n        } else {\r\n            left = mi.$element.offset().left + mi.$element.width();\r\n            top = mi.$element.offset().top;\r\n        }\r\n\r\n        subMenu.$element.css({\r\n            top: \"\" + top + \"px\",\r\n            left: \"\" + left + \"px\"\r\n        })\r\n\r\n        if (this.currentSubmenu[subMenu.level] != null) {\r\n            this.currentSubmenu[subMenu.level].hide();\r\n        }\r\n\r\n        subMenu.$element.show();\r\n        this.currentSubmenu[subMenu.level] = subMenu.$element;\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { openContextMenu, makeEditable, ContextMenuItem, animateToTransparent, jo_mouseDetected } from \"../../tools/HtmlTools.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { escapeHtml } from \"../../tools/StringTools.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type AccordionElement = {\r\n    name: string;\r\n    sortName?: string;      // if sortName == null, then name will be used when sorting\r\n    externalElement?: any;\r\n    iconClass?: string;\r\n    $htmlFirstLine?: JQuery<HTMLElement>;\r\n    $htmlSecondLine?: JQuery<HTMLElement>;\r\n\r\n    isFolder: boolean;\r\n    path: string[];\r\n}\r\n\r\nexport type AccordionContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: (panel: AccordionElement) => void;\r\n    subMenu?: AccordionContextMenuItem[]\r\n}\r\n\r\nexport class AccordionPanel {\r\n\r\n    elements: AccordionElement[] = [];\r\n\r\n    $captionElement: JQuery<HTMLElement>;\r\n    $buttonNew: JQuery<HTMLElement>;\r\n    $listElement: JQuery<HTMLElement>;\r\n\r\n    private fixed: boolean;\r\n\r\n    dontSortElements: boolean = false;\r\n\r\n    static currentlyDraggedElement: AccordionElement;\r\n    static currentlyDraggedElementKind: string;\r\n\r\n    newFilesElementCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    newDatabaseElementCallback: (path: string[]) => void;\r\n    newFolderCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    renameCallback: (externalElement: any, newName: string) => string;\r\n    deleteCallback: (externalElement: any, callbackIfSuccessful: () => void) => void;\r\n    selectCallback: (externalElement: any) => void;\r\n    addElementActionCallback: (accordionElement: AccordionElement) => JQuery<HTMLElement>;\r\n    contextMenuProvider: (externalElement: any) => AccordionContextMenuItem[];\r\n    moveCallback: (ae: AccordionElement | AccordionElement[]) => void;\r\n    dropElementCallback: (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => void;\r\n\r\n    $newFolderAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private accordion: Accordion, private caption: string, private flexWeight: string,\r\n        private newButtonClass: string, private buttonNewTitle: string,\r\n        private defaultIconClass: string, private withDeleteButton: boolean, private withFolders: boolean,\r\n        private kind: \"workspace\" | \"file\" | \"class\" | \"student\", private enableDrag: boolean, private acceptDropKinds: string[]) {\r\n\r\n        accordion.addPanel(this);\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        if (withFolders) {\r\n            let that = this;\r\n            this.$newFolderAction = jQuery('<div class=\"img_add-folder-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Neuen Ordner auf oberster Ebene anlegen\">');\r\n            this.$newFolderAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                let pathArray: string[] = [];\r\n\r\n                this.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                    this.newFolderCallback(newElement, () => {\r\n                        this.sortElements();\r\n                        newElement.$htmlFirstLine[0].scrollIntoView();\r\n                        animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                    });\r\n                });\r\n\r\n            })\r\n\r\n            this.addAction(this.$newFolderAction);\r\n\r\n\r\n            let $collapseAllAction = jQuery('<div class=\"img_collapse-all-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Alle Ordner zusammenfalten\">');\r\n            $collapseAllAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                that.collapseAll();\r\n\r\n            })\r\n\r\n            this.addAction($collapseAllAction);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    collapseAll() {\r\n        for (let element of this.elements) {\r\n            if (element.isFolder) {\r\n                if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                    element.$htmlFirstLine.removeClass('jo_expanded');\r\n                    element.$htmlFirstLine.addClass('jo_collapsed');\r\n                }\r\n            }\r\n            if (element.path.length > 0) {\r\n                element.$htmlFirstLine.slideUp(200);\r\n            }\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        this.$captionElement.remove();\r\n        this.$listElement.remove();\r\n    }\r\n\r\n    setFixed(fixed: boolean) {\r\n        this.fixed = fixed;\r\n        if (this.fixed) {\r\n            this.grow();\r\n            this.$captionElement.addClass('jo_fixed');\r\n        } else {\r\n            this.$captionElement.removeClass('jo_fixed');\r\n        }\r\n\r\n    }\r\n\r\n    //     <div class=\"jo_leftpanelcaption expanded\" id=\"workspace\" data-panel=\"filelistouter\">\r\n    //     <span>WORKSPACE</span>\r\n    //     <div class=\"jo_actions\"><img id=\"buttonNewFile\" title=\"Neue Datei hinzufügen\"\r\n    //             src=\"assets/projectexplorer/add-file-dark.svg\"></div>\r\n    // </div>\r\n    // <div id=\"filelistouter\" class=\"jo_projectexplorerdiv scrollable\" data-grow=\"3\"\r\n    //     style=\"flex-grow: 3\">\r\n    //     <div id=\"filelist\"></div>\r\n    // </div>\r\n\r\n\r\n    enableNewButton(enabled: boolean) {\r\n        if (this.$buttonNew != null) {\r\n            if (enabled) {\r\n                this.$buttonNew.show();\r\n            } else {\r\n                this.$buttonNew.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    getCurrentlySelectedPath(): string[] {\r\n        let pathArray: string[] = [];\r\n        let selectedElement = this.getSelectedElement();\r\n        if (selectedElement != null) {\r\n            pathArray = selectedElement.path.slice(0);\r\n            if (selectedElement.isFolder) pathArray.push(selectedElement.name);\r\n        }\r\n        return pathArray;\r\n    }\r\n\r\n    compareWithPath(name1: string, path1: string[], isFolder1: boolean, name2: string, path2: string[], isFolder2: boolean) {\r\n\r\n        path1 = path1.slice();\r\n        path1.push(name1);\r\n        name1 = \"\";\r\n\r\n        path2 = path2.slice();\r\n        path2.push(name2);\r\n        name2 = \"\";\r\n\r\n        let i = 0;\r\n        while (i < path1.length && i < path2.length) {\r\n            let cmp = path1[i].localeCompare(path2[i]);\r\n            if (cmp != 0) return cmp;\r\n            i++;\r\n        }\r\n\r\n        if (path1.length < path2.length) return -1;\r\n        if (path1.length > path2.length) return 1;\r\n\r\n        return name1.localeCompare(name2);\r\n\r\n\r\n        // let nameWithPath1 = path1.join(\"/\");\r\n        // if (nameWithPath1 != \"\" && name1 != \"\") nameWithPath1 += \"/\";\r\n        // nameWithPath1 += name1;\r\n\r\n        // let nameWithPath2 = path2.join(\"/\");\r\n        // if (nameWithPath2 != \"\" && name2 != \"\") nameWithPath2 += \"/\";\r\n        // nameWithPath2 += name2;\r\n\r\n        // return nameWithPath1.localeCompare(nameWithPath2);\r\n    }\r\n\r\n\r\n    getElementIndex(name: string, path: string[], isFolder: boolean): number {\r\n\r\n        for (let i = 0; i < this.elements.length; i++) {\r\n            let element = this.elements[i];\r\n\r\n            if (this.compareWithPath(name, path, isFolder, element.name, element.path, element.isFolder) < 0) return i;\r\n\r\n        }\r\n        return this.elements.length;\r\n    }\r\n\r\n    insertElement(ae: AccordionElement) {\r\n        let insertIndex = this.getElementIndex(ae.name, ae.path, ae.isFolder);\r\n        // if (ae.path.length == 0) insertIndex = this.elements.length;\r\n        this.elements.splice(insertIndex, 0, ae);\r\n\r\n        let $elements = this.$listElement.find('.jo_file');\r\n\r\n        if (insertIndex == 0) {\r\n            this.$listElement.prepend(ae.$htmlFirstLine);\r\n        } else if(insertIndex == $elements.length){\r\n            this.$listElement.append(ae.$htmlFirstLine);\r\n        } else {\r\n            let elementAtIndex = $elements.get(insertIndex);\r\n            jQuery(elementAtIndex).before(ae.$htmlFirstLine);\r\n        }\r\n\r\n    }\r\n\r\n    addFolder(name: string, path: string[], callback: (newPanel: AccordionElement) => void) {\r\n\r\n        let ae: AccordionElement = {\r\n            name: name,\r\n            isFolder: true,\r\n            path: path\r\n        }\r\n\r\n        let $element = this.renderElement(ae, true);\r\n\r\n        this.insertElement(ae);\r\n\r\n        $element[0].scrollIntoView();\r\n\r\n        this.renameElement(ae, () => {\r\n\r\n            callback(ae);\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    renderOuterHtmlElements($accordionDiv: JQuery<HTMLElement>) {\r\n        let that = this;\r\n\r\n        this.$captionElement = jQuery(`<div class=\"jo_leftpanelcaption jo_expanded\">\r\n        <div class=\"jo_captiontext\">` + this.caption + `</div><div class=\"jo_actions\"></div></div>`);\r\n\r\n        if (this.newButtonClass != null) {\r\n            this.$buttonNew = jQuery('<div class=\"jo_button jo_active ' + this.newButtonClass + '\" title=\"' + this.buttonNewTitle + '\">');\r\n            this.$captionElement.find('.jo_actions').append(this.$buttonNew);\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n            this.$buttonNew.on(mousePointer + 'down', (ev) => {\r\n\r\n                Helper.close();\r\n                ev.stopPropagation();\r\n\r\n                let path = that.getCurrentlySelectedPath();\r\n\r\n                let ae: AccordionElement = {\r\n                    name: \"Neu\",\r\n                    isFolder: false,\r\n                    path: path\r\n                }\r\n\r\n                let insertIndex = this.getElementIndex(\"\", path, false);\r\n                this.elements.splice(insertIndex, 0, ae);\r\n                let $element = this.renderElement(ae, true);\r\n\r\n\r\n                if (insertIndex == 0) {\r\n                    this.$listElement.prepend($element);\r\n                } else {\r\n                    let elementAtIndex = this.$listElement.find('.jo_file').get(insertIndex - 1);\r\n                    jQuery(elementAtIndex).after($element);\r\n                }\r\n\r\n                $element[0].scrollIntoView();\r\n\r\n                that.renameElement(ae, () => {\r\n\r\n                    that.newFilesElementCallback(ae, (externalElement: any) => {\r\n\r\n                        ae.externalElement = externalElement;\r\n\r\n                        if (ae.$htmlSecondLine != null) {\r\n                            ae.$htmlSecondLine.insertAfter($element);\r\n                        }\r\n\r\n                        if (that.selectCallback != null) that.select(ae.externalElement);\r\n\r\n                    });\r\n\r\n                });\r\n\r\n            });\r\n\r\n        }\r\n\r\n        let $listOuter = jQuery('<div id=\"filelistouter\" class=\"jo_projectexplorerdiv jo_scrollable\" data-grow=\"'\r\n            + this.flexWeight + '\" style=\"flex-grow: ' + this.flexWeight + '\"></div>');\r\n        this.$listElement = jQuery('<div class=\"jo_filelist\"></div>')\r\n\r\n        $listOuter.append(this.$listElement);\r\n\r\n        $accordionDiv.append(this.$captionElement);\r\n        $accordionDiv.append($listOuter);\r\n\r\n        let $ce = this.$captionElement;\r\n        let $li = this.$listElement.parent();\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $ce.on(mousePointer + 'down', (ev) => {\r\n            if (ev.button != 0) {\r\n                return;\r\n            }\r\n\r\n            if (!this.fixed) {\r\n                let targetGrow = $li.data('grow');\r\n                if ($ce.hasClass('jo_expanded')) {\r\n                    if (that.accordion.parts.length > 1) {\r\n                        $li.animate({\r\n                            'flex-grow': 0.001\r\n                        }, 1000, () => { $ce.toggleClass('jo_expanded'); });\r\n                    }\r\n                } else {\r\n                    $ce.toggleClass('jo_expanded');\r\n                    $li.animate({\r\n                        'flex-grow': targetGrow\r\n                    }, 1000);\r\n                }\r\n            }\r\n        });\r\n\r\n        $ce.on('dragover', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                $ce.addClass('jo_file_dragover');\r\n                event.preventDefault();\r\n            }\r\n        })\r\n\r\n        $ce.on('dragleave', (event) => {\r\n            $ce.removeClass('jo_file_dragover');\r\n        })\r\n\r\n        $ce.on('drop', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                event.preventDefault();\r\n                $ce.removeClass('jo_file_dragover');\r\n                let element1 = AccordionPanel.currentlyDraggedElement;\r\n                if (element1 != null) {\r\n                    that.moveElement(element1, null);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    grow() {\r\n        let $li = this.$listElement.parent();\r\n        let targetGrow = $li.data('grow');\r\n        $li.css('flex-grow', targetGrow);\r\n        this.$captionElement.addClass('jo_expanded');\r\n    }\r\n\r\n    addElement(element: AccordionElement, expanded: boolean) {\r\n        // this.elements.push(element);\r\n        // element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        // this.$listElement.prepend(element.$htmlFirstLine);\r\n        element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        this.insertElement(element);\r\n    }\r\n\r\n    sortElements() {\r\n        if (this.dontSortElements) return;\r\n        this.elements.sort((a, b) => {\r\n            let aName = a.sortName ? a.sortName : a.name;\r\n            let bName = b.sortName ? b.sortName : b.name;\r\n\r\n            return this.compareWithPath(aName, a.path, a.isFolder, bName, b.path, b.isFolder);\r\n\r\n        });\r\n        this.elements.forEach((element) => { this.$listElement.append(element.$htmlFirstLine) });\r\n    }\r\n\r\n    setTextAfterFilename(element: AccordionElement, text: string, cssClass: string) {\r\n        if(element == null) return;\r\n        let $div = element.$htmlFirstLine.find('.jo_textAfterName');\r\n        $div.addClass(cssClass);\r\n        $div.html(text);\r\n    }\r\n\r\n    addAction($element: JQuery<HTMLElement>) {\r\n        this.$captionElement.find('.jo_actions').prepend($element);\r\n    }\r\n\r\n    renderElement(element: AccordionElement, expanded: boolean): JQuery<HTMLElement> {\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        let that = this;\r\n\r\n        let expandedCollapsed = \"\";\r\n\r\n        if (element.iconClass == null) element.iconClass = this.defaultIconClass;\r\n        if (element.isFolder) {\r\n            element.iconClass = \"folder\";\r\n            expandedCollapsed = expanded ? \" jo_expanded\" : \" jo_collapsed\";\r\n        }\r\n\r\n        let pathHtml = \"\";\r\n        if (element.path == null) element.path = [];\r\n        for (let i = 0; i < element.path.length; i++) {\r\n            pathHtml += '<div class=\"jo_folderline\"></div>';\r\n        }\r\n\r\n        element.$htmlFirstLine = jQuery(`<div class=\"jo_file jo_${element.iconClass} ${expandedCollapsed}\">\r\n        <div class=\"jo_folderlines\">${pathHtml}</div>\r\n           <div class=\"jo_fileimage\"></div>\r\n           <div class=\"jo_filename\">${escapeHtml(element.name)}</div>\r\n           <div class=\"jo_textAfterName\"></div>\r\n           <div class=\"jo_additionalButtonSettings\"></div>\r\n           ${this.withDeleteButton ? '<div class=\"jo_delete img_delete jo_button jo_active' + (false ? \" jo_delete_always\" : \"\") + '\"></div>' : \"\"}\r\n           ${!jo_mouseDetected ? '<div class=\"jo_settings_button img_ellipsis-dark jo_button jo_active\"></div>' : \"\"}\r\n           </div>`);\r\n\r\n        if (!expanded && element.path.length > 0) {\r\n            element.$htmlFirstLine.hide();\r\n        }\r\n\r\n        if (this.addElementActionCallback != null) {\r\n            let $elementAction = this.addElementActionCallback(element);\r\n            element.$htmlFirstLine.append($elementAction);\r\n        }\r\n\r\n        if (this.withFolders) {\r\n            if (element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            that.moveElement(element1, element);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withFolders || this.enableDrag) {\r\n            let $filedragpart = element.$htmlFirstLine.find('.jo_filename');\r\n            $filedragpart.attr('draggable', 'true');\r\n            $filedragpart.on('dragstart', (event) => {\r\n                AccordionPanel.currentlyDraggedElement = element;\r\n                AccordionPanel.currentlyDraggedElementKind = that.kind;\r\n                event.originalEvent.dataTransfer.effectAllowed = element.isFolder ? \"move\" : \"copyMove\";\r\n            })\r\n        }\r\n\r\n        if (this.acceptDropKinds != null && this.acceptDropKinds.length > 0) {\r\n            if (!element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n\r\n                        if (event.ctrlKey) {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"copy\";\r\n                        } else {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"move\";\r\n                        }\r\n\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            if (that.dropElementCallback != null) that.dropElementCallback(element, element1, event.ctrlKey ? \"copy\" : \"move\");\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        element.$htmlFirstLine.on(mousePointer + 'up', (ev) => {\r\n\r\n            if (ev.button == 0 && that.selectCallback != null) {\r\n                that.selectCallback(element.externalElement);\r\n\r\n                for (let ae of that.elements) {\r\n                    if (ae != element && ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                        ae.$htmlFirstLine.removeClass('jo_active');\r\n                    }\r\n                }\r\n\r\n                element.$htmlFirstLine.addClass('jo_active');\r\n\r\n                if (element.isFolder) {\r\n\r\n                    if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                        element.$htmlFirstLine.removeClass('jo_expanded');\r\n                        element.$htmlFirstLine.addClass('jo_collapsed');\r\n                    } else {\r\n                        element.$htmlFirstLine.addClass('jo_expanded');\r\n                        element.$htmlFirstLine.removeClass('jo_collapsed');\r\n                    }\r\n\r\n                    let pathIsCollapsed: { [path: string]: boolean } = {};\r\n                    for (let e of this.elements) {\r\n                        if (e.isFolder) {\r\n                            let path = e.path.join(\"/\");\r\n                            if (path != \"\") path += \"/\";\r\n                            path += e.name;\r\n                            pathIsCollapsed[path] = e.$htmlFirstLine.hasClass('jo_collapsed');\r\n                            if (pathIsCollapsed[e.path.join(\"/\")]) pathIsCollapsed[path] = true;\r\n                        }\r\n                    }\r\n                    pathIsCollapsed[\"\"] = false;\r\n\r\n                    for (let e of this.elements) {\r\n                        if (pathIsCollapsed[e.path.join(\"/\")]) {\r\n                            e.$htmlFirstLine.slideUp(200);\r\n                        } else {\r\n                            e.$htmlFirstLine.slideDown(200);\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n\r\n        let contextmenuHandler = function (event) {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [];\r\n            if (that.renameCallback != null) {\r\n                contextMenuItems.push({\r\n                    caption: \"Umbenennen\",\r\n                    callback: () => {\r\n                        that.renameElement(element);\r\n                    }\r\n                })\r\n            }\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n            if (element.isFolder) {\r\n                contextMenuItems = contextMenuItems.concat([\r\n                    {\r\n                        caption: \"Neuen Unterordner anlegen (unterhalb '\" + element.name + \"')...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            // that.$newFolderAction.trigger(mousePointer + 'down');\r\n                            let pathArray = that.getCurrentlySelectedPath();\r\n\r\n                            that.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                                that.newFolderCallback(newElement, () => {\r\n                                    that.sortElements();\r\n                                    newElement.$htmlFirstLine[0].scrollIntoView();\r\n                                    animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                                });\r\n                            });\r\n\r\n                        }\r\n                    }, {\r\n                        caption: \"Neue Datenbank...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n\r\n                            that.newDatabaseElementCallback(element.path.concat(element.name));\r\n\r\n                        }\r\n                    }\r\n                ])\r\n            }\r\n\r\n\r\n            if (that.contextMenuProvider != null && !element.isFolder) {\r\n\r\n                for (let cmi of that.contextMenuProvider(element)) {\r\n                    contextMenuItems.push({\r\n                        caption: cmi.caption,\r\n                        callback: () => {\r\n                            cmi.callback(element);\r\n                        },\r\n                        color: cmi.color,\r\n                        subMenu: cmi.subMenu == null ? null : cmi.subMenu.map((mi) => {\r\n                            return {\r\n                                caption: mi.caption,\r\n                                callback: () => {\r\n                                    mi.callback(element);\r\n                                },\r\n                                color: mi.color\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n\r\n            if (contextMenuItems.length > 0) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                openContextMenu(contextMenuItems, event.pageX, event.pageY);\r\n            }\r\n        };\r\n\r\n        element.$htmlFirstLine[0].addEventListener(\"contextmenu\", contextmenuHandler, false);\r\n\r\n        // long press for touch devices\r\n        let pressTimer: number;\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.on('pointerup', () => {\r\n                clearTimeout(pressTimer);\r\n                return false;\r\n            }).on('pointerdown', (event) => {\r\n                pressTimer = window.setTimeout(() => {\r\n                    contextmenuHandler(event);\r\n                }, 500);\r\n                return false;\r\n            });\r\n        }\r\n\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('pointerdown', (e) => {\r\n                contextmenuHandler(e);\r\n            });\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('mousedown click', (e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            });\r\n        }\r\n\r\n        if (that.withDeleteButton) {\r\n            element.$htmlFirstLine.find('.jo_delete').on(mousePointer + 'up', (ev) => {\r\n                ev.preventDefault();\r\n                openContextMenu([{\r\n                    caption: \"Abbrechen\",\r\n                    callback: () => {\r\n                        // nothing to do.\r\n                    }\r\n                }, {\r\n                    caption: \"Ich bin mir sicher: löschen!\",\r\n                    color: \"#ff6060\",\r\n                    callback: () => {\r\n\r\n                        if (element.isFolder) {\r\n                            if (that.getChildElements(element).length > 0) {\r\n                                alert('Dieser Ordner kann nicht gelöscht werden, da er nicht leer ist.');\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        that.deleteCallback(element.externalElement, () => {\r\n                            element.$htmlFirstLine.remove();\r\n                            if (element.$htmlSecondLine != null) element.$htmlSecondLine.remove();\r\n                            that.elements.splice(that.elements.indexOf(element), 1);\r\n\r\n                            if (that.selectCallback != null) {\r\n                                if (that.elements.length > 0) {\r\n                                    that.select(that.elements[0].externalElement);\r\n                                } else {\r\n                                    that.select(null);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }], ev.pageX + 2, ev.pageY + 2);\r\n                ev.stopPropagation();\r\n            });\r\n        }\r\n\r\n        return element.$htmlFirstLine;\r\n\r\n    }\r\n\r\n    moveElement(elementToMove: AccordionElement, destinationFolder: AccordionElement) {\r\n        let destinationPath: string[] = destinationFolder == null ? [] : destinationFolder.path.slice(0).concat([destinationFolder.name]);\r\n        if (elementToMove.isFolder) {\r\n            let movedElements: AccordionElement[] = [elementToMove];\r\n\r\n            let sourcePath = elementToMove.path.concat([elementToMove.name]).join(\"/\");\r\n\r\n            if(destinationPath.join('/').indexOf(sourcePath) == 0) return;\r\n\r\n            let oldPathLength = elementToMove.path.length;\r\n            elementToMove.path = destinationPath.slice(0);\r\n\r\n            for (let element of this.elements) {\r\n                if (element.path.join(\"/\").startsWith(sourcePath)) {\r\n                    element.path.splice(0, oldPathLength);\r\n                    element.path = destinationPath.concat(element.path);\r\n                    movedElements.push(element);\r\n                }\r\n            }\r\n\r\n            for (let el of movedElements) {\r\n                el.$htmlFirstLine.remove();\r\n                this.elements.splice(this.elements.indexOf(el), 1);\r\n            }\r\n            for (let el of movedElements) {\r\n                this.renderElement(el, true);\r\n                this.insertElement(el);\r\n            }\r\n\r\n            this.moveCallback(movedElements);\r\n        } else {\r\n            elementToMove.path = destinationPath;\r\n            elementToMove.$htmlFirstLine.remove();\r\n            this.elements.splice(this.elements.indexOf(elementToMove), 1);\r\n            this.renderElement(elementToMove, true);\r\n            this.insertElement(elementToMove);\r\n            this.select(elementToMove.externalElement);\r\n            elementToMove.$htmlFirstLine[0].scrollIntoView();\r\n            this.moveCallback(elementToMove);\r\n        }\r\n    }\r\n\r\n    getChildElements(folder: AccordionElement): AccordionElement[] {\r\n        let path = folder.path.slice(0).concat(folder.name).join(\"/\");\r\n        return this.elements.filter((element) => element.path.join(\"/\").startsWith(path));\r\n    }\r\n\r\n    renameElement(element: AccordionElement, callback?: () => void) {\r\n        let that = this;\r\n        let $div = element.$htmlFirstLine.find('.jo_filename');\r\n        let pointPos = element.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        this.dontSortElements = true;\r\n        makeEditable($div, $div, (newText: string) => {\r\n            if (element.externalElement != null) newText = that.renameCallback(element.externalElement, newText);\r\n            element.name = newText;\r\n            $div.html(element.name);\r\n            if (callback != null) callback();\r\n            that.sortElements();\r\n            $div[0].scrollIntoView();\r\n            this.dontSortElements = false;\r\n        }, selection);\r\n    }\r\n\r\n    select(externalElement: any, invokeCallback: boolean = true, scrollIntoView: boolean = false) {\r\n\r\n        if (externalElement == null) {\r\n            for (let ae1 of this.elements) {\r\n                if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n            }\r\n        } else {\r\n            let ae = this.findElement(externalElement);\r\n\r\n            if (ae != null) {\r\n                for (let ae1 of this.elements) {\r\n                    if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n                }\r\n\r\n                ae.$htmlFirstLine.addClass('jo_active');\r\n                if (scrollIntoView) {\r\n                    let pathString = ae.path.join(\"/\");\r\n                    for (let el of this.elements) {\r\n                        let elPath = el.path.slice(0);\r\n                        if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                            if (el.isFolder) {\r\n                                elPath.push(el.name);\r\n                                if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                                    el.$htmlFirstLine.removeClass(\"jo_collapsed\");\r\n                                    el.$htmlFirstLine.addClass(\"jo_expanded\");\r\n                                }\r\n                            }\r\n                            el.$htmlFirstLine.show();\r\n                        }\r\n\r\n                    }\r\n\r\n                    ae.$htmlFirstLine[0].scrollIntoView();\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (invokeCallback && this.selectCallback != null) this.selectCallback(externalElement);\r\n\r\n    }\r\n\r\n    getPathString(ae: AccordionElement) {\r\n        let ps: string = ae.path.join(\"/\");\r\n        if (ae.isFolder) {\r\n            if (ps != \"\") ps += \"/\";\r\n            ps += ae.name;\r\n        }\r\n        return ps;\r\n    }\r\n\r\n    setElementClass(element: AccordionElement, iconClass: string) {\r\n        if (element != null) {\r\n            element.$htmlFirstLine?.removeClass(\"jo_\" + element.iconClass).addClass(\"jo_\" + iconClass);\r\n            element.iconClass = iconClass;\r\n        }\r\n\r\n    }\r\n\r\n    findElement(externalElement: any): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                return ae;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    removeElement(externalElement: any) {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                ae.$htmlFirstLine.remove();\r\n                if (ae.$htmlSecondLine != null) ae.$htmlSecondLine.remove();\r\n                this.elements.splice(this.elements.indexOf(ae), 1);\r\n\r\n                if (this.selectCallback != null) {\r\n                    if (this.elements.length > 0) {\r\n                        this.select(this.elements[0].externalElement);\r\n                    } else {\r\n                        this.select(null);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.$listElement.empty();\r\n        this.elements = [];\r\n    }\r\n\r\n    setCaption(text: string) {\r\n        this.$captionElement.find('.jo_captiontext').html(text);\r\n    }\r\n\r\n    getSelectedElement(): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                return ae;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class Accordion {\r\n\r\n    parts: AccordionPanel[] = [];\r\n    $html: JQuery<HTMLElement>;\r\n\r\n    constructor(public main: MainBase, $html: JQuery<HTMLElement>) {\r\n        this.$html = $html;\r\n        $html.addClass('jo_leftpanelinner');\r\n    }\r\n\r\n    addPanel(panel: AccordionPanel) {\r\n        panel.renderOuterHtmlElements(this.$html);\r\n        this.parts.push(panel);\r\n    }\r\n\r\n}","import { ClassData, UserData } from \"../../communication/Data.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { isEmptyObject } from \"jquery\";\r\n\r\nexport class DistributeToStudentsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n    studentCount: number = 0;\r\n\r\n    constructor(private classes: ClassData[], private workspace: Workspace, private main: Main){\r\n        this.init();\r\n    }\r\n\r\n    private init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Austeilen eines Workspace an einzelne Schüler/innen</div>\r\n             <div class=\"jo_ds_settings\">\r\n                <div class=\"jo_ds_settings_caption\">Workspace:</div><div class=\"jo_ds_workspacename\">${this.workspace.name}</div>\r\n                <div class=\"jo_ds_settings_caption\">Liste filtern:</div><div class=\"jo_ds_filterdiv\"><input class=\"dialog-input\"></input></div>\r\n             </div>\r\n             <div class=\"jo_ds_student_list jo_scrollable\">\r\n             </div>\r\n             <div class=\"jo_ds_selected_message\"></div>\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_distribute_button\">Austeilen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        let $studentList = jQuery('.jo_ds_student_list');\r\n        let that = this;\r\n\r\n        for(let klass of this.classes){\r\n            for(let student of klass.students){\r\n                let $studentLine = jQuery('<div class=\"jo_ds_student_line\">');\r\n                let $studentClass = jQuery(`<div class=\"jo_ds_student_class\">${klass.name}</div>`);                \r\n                let $studentName = jQuery(`<div class=\"jo_ds_student_name\">${student.rufname} ${student.familienname}</div>`);\r\n                $studentLine.append($studentClass, $studentName);\r\n                $studentList.append($studentLine);\r\n                $studentLine.on('mousedown', () => {\r\n                    $studentLine.toggleClass('jo_active');\r\n                     that.studentCount += $studentLine.hasClass('jo_active') ? 1 : -1;\r\n                     jQuery('.jo_ds_selected_message').text(`${that.studentCount} Schüler/inn/en selektiert`);\r\n                });\r\n                $studentLine.data('student', student);\r\n                $studentLine.data('klass', klass);\r\n            }\r\n        }\r\n\r\n        jQuery('.jo_ds_filterdiv>input').on('input', () => {\r\n            let filterText = <string>jQuery('.jo_ds_filterdiv>input').val();\r\n            if(filterText == null || filterText == \"\"){\r\n                $('.jo_ds_student_line').show();\r\n            } else {\r\n                $('.jo_ds_student_line').each((index, element) => {\r\n                    let $element = jQuery(element);\r\n                    let klass:ClassData = $element.data('klass');\r\n                    let student: UserData = $element.data('student');\r\n                    let text = klass.name + \" \" + student.rufname + \" \" + student.familienname;\r\n                    if(text.indexOf(filterText) >= 0){\r\n                        $element.show();\r\n                    } else {\r\n                        $element.hide();\r\n                    }\r\n                });\r\n\r\n            }\r\n            \r\n        });\r\n\r\n\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { that.close() });\r\n        jQuery('#jo_ds_distribute_button').on('click', () => {that.distributeWorkspace();});\r\n\r\n    }\r\n\r\n    distributeWorkspace() {\r\n\r\n        let student_ids: number[] = [];\r\n        $('.jo_ds_student_line').each((index, element) => {\r\n            let $element = jQuery(element);\r\n            if($element.hasClass('jo_active')){\r\n                let student: UserData = $element.data('student');\r\n                student_ids.push(student.id);\r\n            }\r\n        });\r\n\r\n        this.close();\r\n\r\n        this.main.networkManager.sendDistributeWorkspace(this.workspace, null, student_ids, (error: string) => {\r\n            if (error == null) {\r\n                let networkManager = this.main.networkManager;\r\n                let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                alert(`Der Workspace ${this.workspace.name} wurde an ${student_ids.length} Schüler/innen ausgeteilt. Er wird in maximal ${dt} s bei jedem Schüler ankommen.`);\r\n            } else {\r\n                alert(error);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n    \r\n\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionPanel, Accordion, AccordionElement, AccordionContextMenuItem } from \"./Accordion.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { WorkspaceData, Workspaces, ClassData, CreateWorkspaceData } from \"../../communication/Data.js\";\r\nimport { dateToString } from \"../../tools/StringTools.js\";\r\nimport { DistributeToStudentsDialog } from \"./DistributeToStudentsDialog.js\";\r\nimport { NewDatabaseDialog } from \"./NewDatabaseDialog.js\";\r\n\r\n\r\nexport class ProjectExplorer {\r\n\r\n    programPointerModule: Module = null;\r\n    programPointerPosition: TextPosition;\r\n    programPointerDecoration: string[] = [];\r\n\r\n    accordion: Accordion;\r\n    fileListPanel: AccordionPanel;\r\n    workspaceListPanel: AccordionPanel;\r\n\r\n    $homeAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private $projectexplorerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.accordion = new Accordion(this.main, this.$projectexplorerDiv);\r\n\r\n        this.initFilelistPanel();\r\n\r\n        this.initWorkspacelistPanel();\r\n\r\n    }\r\n\r\n    initFilelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.fileListPanel = new AccordionPanel(this.accordion, \"Kein Workspace gewählt\", \"1\",\r\n            \"img_add-file-dark\", \"Neue Datei...\", \"java\", true, false, \"file\", true, []);\r\n\r\n        this.fileListPanel.newFilesElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                if (that.main.currentWorkspace == null) {\r\n                    alert('Bitte wählen Sie zuerst einen Workspace aus.');\r\n                    return null;\r\n                }\r\n\r\n                let f: File = {\r\n                    name: accordionElement.name,\r\n                    dirty: false,\r\n                    saved: true,\r\n                    text: \"\",\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    panelElement: accordionElement\r\n                };\r\n                let m = new Module(f, that.main);\r\n                let modulStore = that.main.currentWorkspace.moduleStore;\r\n                modulStore.putModule(m);\r\n                that.setModuleActive(m);\r\n                that.main.networkManager.sendCreateFile(m, that.main.currentWorkspace, that.main.workspacesOwnerId,\r\n                    (error: string) => {\r\n                        if (error == null) {\r\n                            successfulNetworkCommunicationCallback(m);\r\n                        } else {\r\n                            alert('Der Server ist nicht erreichbar!');\r\n\r\n                        }\r\n                    });\r\n\r\n            };\r\n\r\n        this.fileListPanel.renameCallback =\r\n            (module: Module, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                let file = module.file;\r\n\r\n                file.name = newName;\r\n                file.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.fileListPanel.deleteCallback =\r\n            (module: Module, callbackIfSuccessful: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.currentWorkspace.moduleStore.removeModule(module);\r\n                        callbackIfSuccessful();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.fileListPanel.contextMenuProvider = (accordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            if (!(that.main.user.is_teacher || that.main.user.is_admin || that.main.user.is_schooladmin)) {\r\n                let module: Module = <Module>accordionElement.externalElement;\r\n                let file = module.file;\r\n\r\n                // if (file.submitted_date == null) {\r\n                //     cmiList.push({\r\n                //         caption: \"Als Hausaufgabe markieren\",\r\n                //         callback: (element: AccordionElement) => {\r\n\r\n                //             let file = (<Module>element.externalElement).file;\r\n                //             file.submitted_date = dateToString(new Date());\r\n                //             file.saved = false;\r\n                //             that.main.networkManager.sendUpdates(null, true);\r\n                //             that.renderHomeworkButton(file);\r\n                //         }\r\n                //     });\r\n                // } else {\r\n                //     cmiList.push({\r\n                //         caption: \"Hausaufgabenmarkierung entfernen\",\r\n                //         callback: (element: AccordionElement) => {\r\n\r\n                //             let file = (<Module>element.externalElement).file;\r\n                //             file.submitted_date = null;\r\n                //             file.saved = false;\r\n                //             that.main.networkManager.sendUpdates(null, true);\r\n                //             that.renderHomeworkButton(file);\r\n\r\n                //         }\r\n                //     });\r\n                // }\r\n\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n\r\n\r\n        this.fileListPanel.selectCallback =\r\n            (module: Module) => {\r\n                that.setModuleActive(module);\r\n            }\r\n\r\n\r\n\r\n    }\r\n\r\n    renderHomeworkButton(file: File) {\r\n        let $buttonDiv = file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonHomework');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_homeworkButton').remove();\r\n\r\n        let klass: string = null;\r\n        let title: string = \"\";\r\n        if (file.submitted_date != null) {\r\n            klass = \"img_homework\";\r\n            title = \"Wurde als Hausaufgabe abgegeben: \" + file.submitted_date\r\n            if (file.text_before_revision) {\r\n                klass = \"img_homework-corrected\";\r\n                title = \"Korrektur liegt vor.\"\r\n            }\r\n        }\r\n\r\n        if (klass != null) {\r\n            let $homeworkButtonDiv = jQuery(`<div class=\"jo_homeworkButton ${klass}\" title=\"${title}\"></div>`);\r\n            $buttonDiv.prepend($homeworkButtonDiv);\r\n            if (klass.indexOf(\"jo_active\") >= 0) {\r\n                $homeworkButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n                $homeworkButtonDiv.on('click', (e) => {\r\n                    e.stopPropagation();\r\n                    // TODO\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initWorkspacelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.workspaceListPanel = new AccordionPanel(this.accordion, \"Datenbanken\", \"3\",\r\n            null, \"Neue Datenbank...\", \"workspace\", true, true, \"workspace\", false, [\"file\"]);\r\n\r\n        let $newWorkspaceAction = jQuery('<div class=\"img_add-database-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Neue Datenbank auf oberster Ordnerebene anlegen\">');\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $newWorkspaceAction.on(mousePointer + 'down', (e) => {\r\n            e.stopPropagation();\r\n\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            new NewDatabaseDialog(that.main, owner_id, this.workspaceListPanel.getCurrentlySelectedPath());\r\n\r\n        })\r\n\r\n        this.workspaceListPanel.addAction($newWorkspaceAction);\r\n        if(this.workspaceListPanel.$buttonNew != null){\r\n            this.workspaceListPanel.$buttonNew.hide();\r\n        }\r\n\r\n        this.workspaceListPanel.newDatabaseElementCallback = (path: string[]) => {\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            new NewDatabaseDialog(that.main, owner_id, path);\r\n\r\n        }\r\n\r\n\r\n        this.workspaceListPanel.renameCallback =\r\n            (workspace: Workspace, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                workspace.name = newName;\r\n                workspace.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.workspaceListPanel.deleteCallback =\r\n            (workspace: Workspace, successfulNetworkCommunicationCallback: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"workspace\", workspace.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.removeWorkspace(workspace);\r\n                        that.fileListPanel.enableNewButton(that.main.workspaceList.length > 0);\r\n                        that.fileListPanel.clear();\r\n                        that.main.databaseExplorer.clear();\r\n                        that.main.getResultsetPresenter().clear();\r\n                        successfulNetworkCommunicationCallback();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.workspaceListPanel.selectCallback =\r\n            (workspace: Workspace) => {\r\n                if(workspace.isFolder) return;\r\n                if (workspace != this.main.currentWorkspace) {\r\n                    that.main.networkManager.sendUpdates(() => {\r\n                        that.setWorkspaceActive(workspace);\r\n                    });\r\n                }\r\n            }\r\n\r\n        this.workspaceListPanel.newFolderCallback = (newElement: AccordionElement, successCallback) => {\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            let folder: Workspace = new Workspace(newElement.name, that.main, owner_id);\r\n            folder.isFolder = true;\r\n\r\n            folder.path = newElement.path.join(\"/\");\r\n            folder.panelElement = newElement;\r\n            newElement.externalElement = folder;\r\n            that.main.workspaceList.push(folder);\r\n\r\n            let wd: CreateWorkspaceData = {\r\n                id: -1,\r\n                isFolder: true,\r\n                name: folder.name,\r\n                path: folder.path\r\n            }\r\n\r\n            that.main.networkManager.sendCreateWorkspace(wd, that.main.workspacesOwnerId, (error: string) => {\r\n                if (error == null) {\r\n                    folder.id = wd.id;\r\n                    successCallback(folder);\r\n\r\n                } else {\r\n                    alert(\"Fehler: \" + error);\r\n                    that.workspaceListPanel.removeElement(newElement);\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        this.workspaceListPanel.moveCallback = (ae: AccordionElement | AccordionElement[]) => {\r\n            if (!Array.isArray(ae)) ae = [ae];\r\n            for (let a of ae) {\r\n                let ws: Workspace = a.externalElement;\r\n                ws.path = a.path.join(\"/\");\r\n                ws.saved = false;\r\n            }\r\n            this.main.networkManager.sendUpdates();\r\n        }\r\n\r\n        this.workspaceListPanel.dropElementCallback = (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => {\r\n            let workspace: Workspace = dest.externalElement;\r\n            let module: Module = droppedElement.externalElement;\r\n\r\n            if (workspace.moduleStore.getModules(false).indexOf(module) >= 0) return; // module is already in destination workspace\r\n\r\n            let f: File = {\r\n                name: module.file.name,\r\n                dirty: true,\r\n                saved: false,\r\n                text: module.file.text,\r\n                text_before_revision: null,\r\n                submitted_date: null,\r\n                student_edited_after_revision: false,\r\n                version: module.file.version,\r\n                panelElement: null\r\n            };\r\n\r\n            if (dropEffekt == \"move\") {\r\n                // move file\r\n                let oldWorkspace = that.main.currentWorkspace;\r\n                oldWorkspace.moduleStore.removeModule(module);\r\n                that.fileListPanel.removeElement(module);\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, () => { });\r\n            }\r\n\r\n            let m = new Module(f, that.main);\r\n            let modulStore = workspace.moduleStore;\r\n            modulStore.putModule(m);\r\n            that.main.networkManager.sendCreateFile(m, workspace, that.main.workspacesOwnerId,\r\n                (error: string) => {\r\n                    if (error == null) {\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n\r\n        }\r\n\r\n\r\n\r\n        this.$homeAction = jQuery('<div class=\"img_home-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Meine eigenen Workspaces anzeigen\">');\r\n\r\n        this.$homeAction.on(mousePointer +'down', (e) => {\r\n            e.stopPropagation();\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n                that.onHomeButtonClicked();\r\n            });\r\n\r\n            that.main.bottomDiv.hideHomeworkTab();\r\n\r\n        })\r\n\r\n        this.workspaceListPanel.addAction(this.$homeAction);\r\n        this.$homeAction.hide();\r\n\r\n        this.workspaceListPanel.contextMenuProvider = (workspaceAccordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            if (this.main.user.is_teacher && this.main.teacherExplorer.classPanel.elements.length > 0) {\r\n                cmiList.push({\r\n                    caption: \"An Klasse austeilen...\",\r\n                    callback: (element: AccordionElement) => { },\r\n                    subMenu: this.main.teacherExplorer.classPanel.elements.map((ae) => {\r\n                        return {\r\n                            caption: ae.name,\r\n                            callback: (element: AccordionElement) => {\r\n                                let klasse = <any>ae.externalElement;\r\n\r\n                                let workspace: Workspace = element.externalElement;\r\n\r\n                                this.main.networkManager.sendDistributeWorkspace(workspace, klasse, null, (error: string) => {\r\n                                    if (error == null) {\r\n                                        let networkManager = this.main.networkManager;\r\n                                        let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                                        alert(\"Der Workspace \" + workspace.name + \" wurde an die Klasse \" + klasse.name + \" ausgeteilt. Er wird in maximal \" +\r\n                                            dt + \" s bei jedem Schüler ankommen.\");\r\n                                    } else {\r\n                                        alert(error);\r\n                                    }\r\n                                });\r\n\r\n                            }\r\n                        }\r\n                    })\r\n                },\r\n                    {\r\n                        caption: \"An einzelne Schüler/innen austeilen...\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let classes: ClassData[] = this.main.teacherExplorer.classPanel.elements.map(ae => ae.externalElement);\r\n                            let workspace: Workspace = element.externalElement;\r\n                            new DistributeToStudentsDialog(classes, workspace, this.main);\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n    }\r\n\r\n    onHomeButtonClicked() {\r\n        this.main.teacherExplorer.restoreOwnWorkspaces();\r\n        this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.ownUpdateFrequencyInSeconds;\r\n        this.$homeAction.hide();\r\n        this.fileListPanel.enableNewButton(this.main.workspaceList.length > 0);\r\n    }\r\n\r\n    renderFiles(workspace: Workspace) {\r\n\r\n        let name = workspace == null ? \"Kein Workspace vorhanden\" : workspace.name;\r\n\r\n        this.fileListPanel.setCaption(name);\r\n        this.fileListPanel.clear();\r\n\r\n        if (this.main.getCurrentWorkspace() != null) {\r\n            for (let module of this.main.getCurrentWorkspace().moduleStore.getModules(false)) {\r\n                module.file.panelElement = null;\r\n            }\r\n        }\r\n\r\n        if (workspace != null) {\r\n            let moduleList: Module[] = [];\r\n\r\n            for (let m of workspace.moduleStore.getModules(false)) {\r\n                moduleList.push(m);\r\n            }\r\n\r\n            moduleList.sort((a, b) => { return a.file.name > b.file.name ? 1 : a.file.name < b.file.name ? -1 : 0 });\r\n\r\n            for (let m of moduleList) {\r\n\r\n                m.file.panelElement = {\r\n                    name: m.file.name,\r\n                    externalElement: m,\r\n                    isFolder: false,\r\n                    path: []\r\n                };\r\n\r\n                this.fileListPanel.addElement(m.file.panelElement, true);\r\n                this.renderHomeworkButton(m.file);\r\n            }\r\n\r\n            this.fileListPanel.sortElements();\r\n\r\n        }\r\n    }\r\n\r\n    renderWorkspaces(workspaceList: Workspace[]) {\r\n\r\n        this.fileListPanel.clear();\r\n        this.workspaceListPanel.clear();\r\n\r\n        for (let w of workspaceList) {\r\n            let path = w.path.split(\"/\");\r\n            if (path.length == 1 && path[0] == \"\") path = [];\r\n            w.panelElement = {\r\n                name: w.name,\r\n                externalElement: w,\r\n                iconClass: 'workspace',\r\n                isFolder: w.isFolder,\r\n                path: path\r\n            };\r\n\r\n            this.workspaceListPanel.addElement(w.panelElement, false);\r\n            w.renderSettingsButton(w.panelElement);\r\n        }\r\n\r\n        this.workspaceListPanel.sortElements();\r\n        this.fileListPanel.enableNewButton(workspaceList.length > 0);\r\n\r\n\r\n\r\n    }\r\n\r\n    renderErrorCount(workspace: Workspace, errorCountMap: Map<Module, number>) {\r\n        if (errorCountMap == null) return;\r\n        for (let m of workspace.moduleStore.getModules(false)) {\r\n            let errorCount: number = errorCountMap.get(m);\r\n            let errorCountS: string = ((errorCount == null || errorCount == 0) ? \"\" : \"(\" + errorCount + \")\");\r\n\r\n            this.fileListPanel.setTextAfterFilename(m.file.panelElement, errorCountS, 'jo_errorcount');\r\n        }\r\n    }\r\n\r\n    setWorkspaceActive(w: Workspace) {\r\n\r\n        if (w != null) {\r\n            this.fileListPanel.$buttonNew.show();\r\n        }\r\n\r\n        this.workspaceListPanel.select(w, false);\r\n\r\n        let callback = (error: string) => {this.initializeDatabaseTool(error, w)};\r\n\r\n        if (w.database == null) {\r\n            this.main.waitOverlay.show(\"Bitte warten, hole Datenbank vom Server ...\");\r\n\r\n            this.main.networkManager.fetchDatabase(w, callback);\r\n        } else {\r\n            callback(null);\r\n        }\r\n\r\n    }\r\n\r\n    initializeDatabaseTool(error: string, w: Workspace) {\r\n        if (error != null) {\r\n            alert(error);\r\n            return;\r\n        }\r\n\r\n        let dbTool = this.main.getDatabaseTool();\r\n\r\n        let statements: string[] = w.database.statements;\r\n        if (statements == null) statements = [];\r\n\r\n        dbTool.initializeWorker(w.database.templateDump, statements,\r\n            () => {\r\n                this.main.currentWorkspace = w;\r\n\r\n                if (this.main.user.id == w.owner_id) {\r\n                    this.main.user.currentWorkspace_id = w.id;\r\n                }\r\n\r\n                this.renderFiles(w);\r\n\r\n                if (w != null) {\r\n                    let nonSystemModules = w.moduleStore.getModules(false);\r\n\r\n                    if (w.currentlyOpenModule != null) {\r\n                        this.setModuleActive(w.currentlyOpenModule);\r\n                    } else if (nonSystemModules.length > 0) {\r\n                        this.setModuleActive(nonSystemModules[0]);\r\n                    } else {\r\n                        this.setModuleActive(null);\r\n                    }\r\n\r\n                    for (let m of nonSystemModules) {\r\n                        m.file.dirty = true;\r\n                    }\r\n\r\n                    if (nonSystemModules.length == 0) {\r\n\r\n                        Helper.showHelper(\"newSQLFileHelper\", this.main, this.fileListPanel.$captionElement);\r\n\r\n                    }\r\n\r\n                    this.main.notifier.connect(w);\r\n\r\n                } else {\r\n                    this.setModuleActive(null);\r\n                }\r\n\r\n            },\r\n            () => {\r\n                this.main.databaseExplorer.refreshAfterRetrievingDBStructure();\r\n                this.main.getHistoryViewer().clearAndShowStatements(w.database.statements);\r\n            });\r\n\r\n    }\r\n\r\n    writeEditorTextToFile() {\r\n        let cem = this.getCurrentlyEditedModule();\r\n        if (cem != null)\r\n            cem.file.text = cem.getProgramTextFromMonacoModel(); // 29.03. this.main.monaco.getValue();\r\n    }\r\n\r\n\r\n    lastOpenModule: Module = null;\r\n    setModuleActive(m: Module) {\r\n\r\n        this.main.bottomDiv.homeworkManager.hideRevision();\r\n\r\n        if (this.lastOpenModule != null) {\r\n            this.lastOpenModule.file.text = this.lastOpenModule.getProgramTextFromMonacoModel(); // this.main.monaco.getValue();\r\n            this.lastOpenModule.editorState = this.main.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (m == null) {\r\n            this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n        } else {\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.main.getMonacoEditor().setModel(m.model);\r\n            if (this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(m.bracketError);\r\n\r\n            if (m.file.text_before_revision != null) {\r\n                this.main.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n            } else {\r\n                this.main.bottomDiv.homeworkManager.hideHomeworkRevisionButton();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setActiveAfterExternalModelSet(m: Module) {\r\n        this.fileListPanel.select(m, false);\r\n\r\n        this.lastOpenModule = m;\r\n\r\n        if (m.editorState != null) {\r\n            this.main.editor.dontPushNextCursorMove++;\r\n            this.main.getMonacoEditor().restoreViewState(m.editorState);\r\n            this.main.editor.dontPushNextCursorMove--;\r\n        }\r\n\r\n        this.setCurrentlyEditedModule(m);\r\n\r\n        this.showProgramPointer();\r\n\r\n        setTimeout(() => {\r\n            if (!this.main.getMonacoEditor().getOptions().get(monaco.editor.EditorOption.readOnly)) {\r\n                this.main.getMonacoEditor().focus();\r\n            }\r\n        }, 300);\r\n\r\n    }\r\n\r\n\r\n    private showProgramPointer() {\r\n\r\n        if (this.programPointerModule == this.getCurrentlyEditedModule() && this.getCurrentlyEditedModule() != null) {\r\n            let position = this.programPointerPosition;\r\n            let range = {\r\n                startColumn: position.column, startLineNumber: position.line,\r\n                endColumn: position.column + position.length, endLineNumber: position.line\r\n            };\r\n\r\n            this.main.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n            this.programPointerDecoration = this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n                {\r\n                    range: range,\r\n                    options: {\r\n                        className: 'jo_revealProgramPointer', isWholeLine: true,\r\n                        overviewRuler: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.OverviewRulerLane.Center\r\n                        },\r\n                        minimap: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    range: range,\r\n                    options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n                }\r\n            ]);\r\n\r\n        }\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        // console statement execution:\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        let module = this.main.currentWorkspace.moduleStore.findModuleByFile(file);\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        this.programPointerModule = module;\r\n        this.programPointerPosition = position;\r\n\r\n        if (module != this.getCurrentlyEditedModule()) {\r\n            this.setModuleActive(module);\r\n        } else {\r\n            this.showProgramPointer();\r\n        }\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws == null) return null;\r\n\r\n        return ws.currentlyOpenModule;\r\n    }\r\n\r\n    setCurrentlyEditedModule(m: Module) {\r\n        if (m == null) return;\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws.currentlyOpenModule != m) {\r\n            ws.currentlyOpenModule = m;\r\n            ws.saved = false;\r\n            m.file.dirty = true;\r\n        }\r\n    }\r\n\r\n    setExplorerColor(color: string) {\r\n        let caption: string;\r\n\r\n        if (color == null) {\r\n            color = \"transparent\";\r\n            caption = \"Meine Datenbanken\";\r\n        } else {\r\n            caption = \"Schüler-DB\";\r\n        }\r\n\r\n        this.fileListPanel.$listElement.parent().css('background-color', color);\r\n        this.workspaceListPanel.$listElement.parent().css('background-color', color);\r\n\r\n        this.workspaceListPanel.setCaption(caption);\r\n    }\r\n\r\n    getNewModule(file: File): Module {\r\n        return new Module(file, this.main);\r\n    }\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class RightDiv {\r\n\r\n    isWholePage: boolean = false;\r\n\r\n    $tabs: JQuery<HTMLElement>;\r\n    $headings: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $rightDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$tabs = $rightDiv.find('.jo_tabs');\r\n        this.$headings = $rightDiv.find('.jo_tabheadings');\r\n        \r\n        let withClassDiagram = this.$headings.find('.jo_classDiagramTabHeading').length > 0;\r\n        let withObjectDiagram = this.$headings.find('.jo_objectDiagramTabHeading').length > 0;\r\n\r\n        let that = this;\r\n        let rightdiv_width: string = \"100%\";\r\n        $rightDiv.find('.jo_whole-window').on(\"click\", () => {\r\n\r\n            that.isWholePage = !that.isWholePage;\r\n            \r\n            let $wholeWindow = jQuery('.jo_whole-window');\r\n\r\n            if (!that.isWholePage) {\r\n                jQuery('#code').css('display', 'flex');\r\n                jQuery('#rightdiv').css('width', rightdiv_width);\r\n                // jQuery('#run').css('width', '');\r\n                $wholeWindow.removeClass('img_whole-window-back');\r\n                $wholeWindow.addClass('img_whole-window');\r\n                jQuery('#controls').insertAfter(jQuery('#view-mode'));\r\n                $wholeWindow.attr('title', 'Auf Fenstergröße vergrößern');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            } else {\r\n                jQuery('#code').css('display', 'none');\r\n                rightdiv_width = jQuery('#rightdiv').css('width');\r\n                jQuery('#rightdiv').css('width', '100%');\r\n                $wholeWindow.removeClass('img_whole-window');\r\n                $wholeWindow.addClass('img_whole-window-back');\r\n                // that.adjustWidthToWorld();\r\n                jQuery('.jo_control-container').append(jQuery('#controls'));\r\n                $wholeWindow.attr('title', 'Auf normale Größe zurückführen');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$rightDiv);\r\n    }\r\n\r\n\r\n\r\n}","import { jo_mouseDetected } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\nexport class Sliders {\r\n\r\n    main: Main;\r\n\r\n    constructor(main: Main) {\r\n        this.main = main;\r\n    }\r\n\r\n    initSliders() {\r\n        let that = this;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        jQuery('#slider1').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider1\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                \r\n                that.moveLeftPanel(dx);\r\n\r\n                x = mm.clientX;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider1\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider1\");\r\n                jQuery(document).off(mousePointer + \"up.slider1\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider2').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider2\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n\r\n                that.moveBottomDiv(dy);\r\n\r\n                y = mm.clientY;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider2\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider2\");\r\n                jQuery(document).off(mousePointer + \"up.slider2\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider3').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider3\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n\r\n                that.moveRightDiv(dx);\r\n\r\n                x = mm.clientX;\r\n                mm.stopPropagation();\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider3\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider3\");\r\n                jQuery(document).off(mousePointer + \"up.slider3\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        let sliderknobLeft = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"left: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobLeft);\r\n        sliderknobLeft.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopImmediatePropagation();\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobleft\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopImmediatePropagation();\r\n\r\n                that.moveLeftPanel(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobleft\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobleft\");\r\n                jQuery(document).off(mousePointer + \"up.knobleft\");\r\n            });\r\n\r\n        });\r\n\r\n        let sliderknobRight = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"right: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobRight);\r\n        sliderknobRight.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopImmediatePropagation();\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobright\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopImmediatePropagation();\r\n\r\n                that.moveRightDiv(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobright\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobright\");\r\n                jQuery(document).off(mousePointer + \"up.knobright\");\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n    \r\n    moveRightDiv(dx: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $rightDiv = jQuery('#rightdiv');\r\n\r\n        let width = Number.parseInt($rightDiv.css('width').replace('px', ''));\r\n        $rightDiv.css('width', (width - dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth + dx) + \"px\");\r\n        \r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n        jQuery('.jo_graphics').trigger('sizeChanged');\r\n        width += dx;\r\n}\r\n    moveBottomDiv(dy: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $bottomDiv = jQuery('#bottomdiv-outer');\r\n\r\n        let height = Number.parseInt($bottomDiv.css('height').replace('px', ''));\r\n        $bottomDiv.css('height', (height - dy) + \"px\");\r\n\r\n        let meheight = Number.parseInt($editor.css('height').replace('px', ''));\r\n        $editor.css('height', (meheight + dy) + \"px\");\r\n\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n}\r\n\r\n    moveLeftPanel(dx: number) {\r\n        let $leftPanel = jQuery('#leftpanel');\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n\r\n        let width = Number.parseInt($leftPanel.css('width').replace('px', ''));\r\n        $leftPanel.css('width', (width + dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth - dx) + \"px\");\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionPanel, AccordionElement } from \"./Accordion.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassData, UserData, CRUDUserRequest, CRUDClassRequest, GetWorkspacesResponse, GetWorkspacesRequest, Workspaces } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\nexport class TeacherExplorer {\r\n\r\n    studentPanel: AccordionPanel;\r\n    classPanel: AccordionPanel;\r\n\r\n    // save them here when displaying pupils workspaces:\r\n    ownWorkspaces: Workspace[];\r\n    currentOwnWorkspace: Workspace;\r\n\r\n    constructor(private main: Main, private classData: ClassData[]) {\r\n\r\n    }\r\n\r\n    removePanels() {\r\n        this.classPanel.remove();\r\n        this.studentPanel.remove();\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.initStudentPanel();\r\n\r\n        this.initClassPanel();\r\n\r\n        this.renderClasses(this.classData);\r\n\r\n    }\r\n\r\n    initStudentPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.studentPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Schüler/innen\", \"2\", null,\r\n            \"\", \"student\", false, false, \"student\", false, []);\r\n\r\n        this.studentPanel.selectCallback = (ae: UserData) => {\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let request: GetWorkspacesRequest = {\r\n                    ws_userId: ae.id,\r\n                    userId: this.main.user.id,\r\n                    language: 1\r\n                }\r\n\r\n                ajax(\"getWorkspaces\", request, (response: GetWorkspacesResponse) => {\r\n                    if (response.success == true) {\r\n\r\n                        if (that.main.workspacesOwnerId == that.main.user.id) {\r\n                            that.ownWorkspaces = that.main.workspaceList.slice();\r\n                            that.currentOwnWorkspace = that.main.currentWorkspace;\r\n                        }\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces);\r\n                        that.main.workspacesOwnerId = ae.id;\r\n                        that.main.projectExplorer.setExplorerColor(\"rgba(255, 0, 0, 0.2\");\r\n                        that.main.projectExplorer.$homeAction.show();\r\n                        Helper.showHelper(\"homeButtonHelper\", this.main);\r\n\r\n                        that.main.bottomDiv.showHomeworkTab();\r\n                        that.main.bottomDiv.homeworkManager.attachToWorkspaces(that.main.workspaceList);\r\n                    }\r\n\r\n                    this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n                    this.main.networkManager.secondsTillNextUpdate = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    restoreOwnWorkspaces() {\r\n        let main = this.main;\r\n\r\n        // main.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n        main.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        main.workspaceList = this.ownWorkspaces;\r\n        main.currentWorkspace = this.currentOwnWorkspace;\r\n        main.workspacesOwnerId = main.user.id;\r\n        main.projectExplorer.setExplorerColor(null);\r\n\r\n        main.projectExplorer.renderWorkspaces(main.workspaceList);\r\n\r\n        if (main.currentWorkspace == null && main.workspaceList.length > 0) {\r\n            main.currentWorkspace = main.workspaceList[0];\r\n        }\r\n\r\n        if (main.currentWorkspace != null) {\r\n            main.projectExplorer.setWorkspaceActive(main.currentWorkspace);\r\n        }\r\n\r\n        this.studentPanel.select(null, false);\r\n\r\n    }\r\n\r\n    initClassPanel() {\r\n        let that = this;\r\n\r\n        this.classPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Klassen\", \"1\", null, \"\", \"class\", false, false, \"class\", false, []);\r\n\r\n        this.classPanel.selectCallback = (ea) => {\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let classData = <ClassData>ea;\r\n                if (classData != null) {\r\n                    this.renderStudents(classData.students);\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    renderStudents(userDataList: UserData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        userDataList.sort((a, b) => {\r\n            if (a.familienname > b.familienname) return 1;\r\n            if (b.familienname > a.familienname) return -1;\r\n            if (a.rufname > b.rufname) return 1;\r\n            if (b.rufname > a.rufname) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let ud of userDataList) {\r\n            let ae: AccordionElement = {\r\n                name: ud.familienname + \", \" + ud.rufname,\r\n                sortName: ud.familienname + \" \" + ud.rufname,\r\n                externalElement: ud,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.studentPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n    renderClasses(classDataList: ClassData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        classDataList.sort((a, b) => {\r\n            if (a.name > b.name) return 1;\r\n            if (b.name > a.name) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let cd of classDataList) {\r\n            let ae: AccordionElement = {\r\n                name: cd.name,\r\n                externalElement: cd,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.classPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { openContextMenu, ContextMenuItem } from \"../../tools/HtmlTools.js\";\r\nimport { Dialog } from \"./Dialog.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\n\r\nexport class UserMenu {\r\n\r\n\r\n\r\n    constructor(private main: Main){\r\n        \r\n    }\r\n\r\n    init(){\r\n        let $userSettingsButton = jQuery('#buttonUserSettings');\r\n        let that = this;\r\n\r\n        // $userSettingsButton.on(\"click\", (e) => {\r\n\r\n        //     let contextMenuItems: ContextMenuItem[] = [\r\n        //         {\r\n        //             caption: \"Passwort ändern...\",\r\n        //             callback: () => {\r\n        //                 let passwortChanger = new PasswordChanger(that.main);\r\n        //                 passwortChanger.show();\r\n        //             }\r\n        //         }\r\n        //     ]\r\n\r\n\r\n        //     openContextMenu(contextMenuItems, $userSettingsButton.offset().left, $userSettingsButton.offset().top + $userSettingsButton.height());\r\n\r\n        // });\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class PasswordChanger {\r\n\r\n    dialog: Dialog;\r\n\r\n    constructor(private main: Main){\r\n\r\n        this.dialog = new Dialog();\r\n\r\n    }\r\n\r\n    show() {\r\n        this.dialog.init();\r\n        this.dialog.heading(\"Passwort ändern\");\r\n        this.dialog.description(\"Bitte geben Sie Ihr bisheriges Passwort und darunter zweimal Ihr neues Passwort ein. <br>\" + \r\n        \"Das Passwort muss mindestens 8 Zeichen lang sein und sowohl Buchstaben als auch Zahlen oder Sonderzeichen enthalten.\")\r\n        let $oldPassword = this.dialog.input(\"password\", \"Altes Passwort\");\r\n        let $newPassword1 = this.dialog.input(\"password\", \"Neues Passwort\");\r\n        let $newPassword2 = this.dialog.input(\"password\", \"Neues Passwort wiederholen\");\r\n        let $errorDiv = this.dialog.description(\"\", \"red\");\r\n        let waitDiv = this.dialog.waitMessage(\"Bitte warten...\")\r\n\r\n        this.dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {this.dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    if($newPassword1.val() != $newPassword2.val()){\r\n                        $errorDiv.text(\"Die zwei eingegebenen neuen Passwörter stimmen nicht überein.\")\r\n                    } else {\r\n                        waitDiv(true);\r\n                        ajax(\"changePassword\", {oldPassword: $oldPassword.val(), newPassword: $newPassword1.val()}, () => {\r\n                            waitDiv(false);\r\n                            alert(\"Das Passwort wurde erfolgreich geändert.\");\r\n                            this.dialog.close();\r\n                        }, (message) => {\r\n                            waitDiv(false);\r\n                            $errorDiv.text(message)\r\n                        })\r\n                    }\r\n\r\n                }\r\n            },\r\n        ])\r\n    }\r\n\r\n}","import { ajax } from \"../communication/AjaxHelper.js\";\r\nimport { LoginRequest, LoginResponse, LogoutRequest, UserData } from \"../communication/Data.js\";\r\nimport { Main } from \"./Main.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { userInfo } from \"os\";\r\nimport { UserMenu } from \"./gui/UserMenu.js\";\r\nimport { escapeHtml } from \"../tools/StringTools.js\";\r\n\r\nexport class Login {\r\n\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        let that = this;\r\n\r\n        let $loginSpinner = jQuery('#login-spinner>img');\r\n\r\n        jQuery('#login-username').focus();\r\n\r\n        jQuery('#login-username').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-password').focus();\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-button').focus();\r\n                jQuery('#login-button').addClass('jo_active');\r\n            }\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-button').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-username').focus();\r\n                jQuery('#login-button').removeClass('jo_active');\r\n            } else {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        // Avoid double login when user does doubleclick:\r\n        let loginHappened = false;\r\n        jQuery('#login-button').on('click', () => {\r\n\r\n            $loginSpinner.show();\r\n\r\n            if (loginHappened) return;\r\n            loginHappened = true;\r\n\r\n            setTimeout(() => {\r\n                loginHappened = false;\r\n            }, 1000);\r\n\r\n            let loginRequest: LoginRequest = {\r\n                username: <string>jQuery('#login-username').val(),\r\n                password: <string>jQuery('#login-password').val(),\r\n                language: 1\r\n            }\r\n\r\n            ajax('login', loginRequest, (response: LoginResponse) => {\r\n\r\n                if (!response.success) {\r\n                    jQuery('#login-message').html('Fehler: Benutzername und/oder Passwort ist falsch.');\r\n                } else {\r\n\r\n                    // We don't do this anymore for security reasons - see AjaxHelper.ts\r\n                    // Alternatively we now set a long expiry interval for cookie.\r\n                    // credentials.username = loginRequest.username;\r\n                    // credentials.password = loginRequest.password;\r\n\r\n                    jQuery('#login').hide();\r\n\r\n                    this.main.waitOverlay.show('Bitte warten...');\r\n\r\n                    let user: UserData = response.user;\r\n                    if (user.settings == null || user.settings.helperHistory == null) {\r\n                        user.settings = {\r\n                            helperHistory: {\r\n                            },\r\n                            viewModes: null,\r\n                            classDiagram: null\r\n                        }\r\n                    }\r\n\r\n                    this.main.waitForGUICallback = () => {\r\n\r\n                        that.main.mainMenu.initGUI(user);\r\n\r\n                        that.main.waitOverlay.hide();\r\n                        $loginSpinner.hide();\r\n                        jQuery('#menupanel-username').html(escapeHtml(user.rufname) + \" \" + escapeHtml(user.familienname));\r\n\r\n                        new UserMenu(that.main).init();\r\n\r\n                        if (user.is_teacher) {\r\n                            that.main.initTeacherExplorer(response.classdata);\r\n                        }\r\n\r\n                        that.main.user = user;\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces);\r\n                        that.main.workspacesOwnerId = user.id;\r\n\r\n                        that.main.networkManager.initializeTimer();\r\n\r\n                        that.main.projectExplorer.fileListPanel.setFixed(!user.is_teacher);\r\n                        that.main.projectExplorer.workspaceListPanel.setFixed(!user.is_teacher);\r\n\r\n                        that.main.viewModeController.initViewMode();\r\n                        that.main.bottomDiv.hideHomeworkTab();\r\n\r\n                        that.main.networkManager.initializeNotifierClient();\r\n\r\n                    }\r\n\r\n                    if (this.main.startupComplete == 0) {\r\n                        this.main.waitForGUICallback();\r\n                        this.main.waitForGUICallback = null;\r\n                    }\r\n\r\n                }\r\n\r\n            }, (errorMessage: string) => {\r\n                jQuery('#login-message').html('Login gescheitert: ' + errorMessage);\r\n                jQuery('#login-spinner>img').hide();\r\n            }\r\n            );\r\n\r\n        });\r\n\r\n        jQuery('#buttonLogout').on('click', () => {\r\n\r\n            this.main.waitOverlay.show('Bitte warten, der letzte Bearbeitungsstand wird noch gespeichert ...');\r\n\r\n            if (this.main.workspacesOwnerId != this.main.user.id) {\r\n                this.main.projectExplorer.onHomeButtonClicked();\r\n            }\r\n\r\n            this.main.networkManager.sendUpdates(() => {\r\n\r\n                let logoutRequest: LogoutRequest = {\r\n                    currentWorkspaceId: this.main.currentWorkspace?.id\r\n                }\r\n\r\n                ajax('logout', logoutRequest, () => {\r\n                    // window.location.href = 'index.html';\r\n                    this.main.networkManager.sendUpdateUserSettings(() => {});\r\n\r\n                    jQuery('#login').show();\r\n                    this.main.waitOverlay.hide();\r\n                    jQuery('#login-message').empty();\r\n                    this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"\", \"myJava\"));\r\n                    this.main.projectExplorer.fileListPanel.clear();\r\n                    this.main.projectExplorer.workspaceListPanel.clear();\r\n\r\n                    this.main.databaseExplorer.clear();\r\n                    this.main.resultsetPresenter.clear();\r\n\r\n                    if (this.main.user.is_teacher) {\r\n                        this.main.teacherExplorer.removePanels();\r\n                        this.main.teacherExplorer = null;\r\n                    }\r\n\r\n\r\n                    this.main.currentWorkspace = null;\r\n                    this.main.user = null;\r\n\r\n\r\n                });\r\n            }, true);\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\nimport { ViewModes, ViewMode } from \"../../communication/Data\";\r\n\r\nexport class ViewModeController {\r\n\r\n    $buttonEditorFullscreen: JQuery<HTMLElement>;\r\n    $buttonPresentationMode: JQuery<HTMLElement>;\r\n    $buttonMonitorMode: JQuery<HTMLElement>;\r\n\r\n    $buttonMap: { [key: string]: JQuery<HTMLElement> } = {};\r\n\r\n    highContrast: boolean = false;\r\n    editorHasFullWidth: boolean = false;\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private main: Main) {\r\n\r\n        this.$buttonEditorFullscreen = jQuery('<div title=\"Editor in voller Breite\" class=\"img_whole-window jo_button jo_active\" style=\"padding: 1px; margin-right: 20px\"></div>');\r\n        this.$buttonPresentationMode = jQuery('<div title=\"Präsentation (Beamer)\" class=\"img_presentation-mode jo_button jo_active\" syle=\"padding: 1px\"></div>');\r\n        this.$buttonMonitorMode = jQuery('<div title=\"Monitor\" class=\"img_monitor-mode jo_button jo_active\" style=\"margin-left: 5px; padding: 1px\"></div>');\r\n        $buttonsContainer.append(this.$buttonEditorFullscreen, this.$buttonPresentationMode, this.$buttonMonitorMode);\r\n\r\n        this.$buttonMap = {\r\n            \"presentation\": this.$buttonPresentationMode,\r\n            \"monitor\": this.$buttonMonitorMode\r\n        };\r\n\r\n        let am = this.main.actionManager;\r\n\r\n        am.registerAction(\"editor.fullwidth\", [],\r\n            () => {\r\n                this.toggleEditorFullwidth();\r\n            }, \"Editor auf die volle Breite erweitern\", this.$buttonEditorFullscreen);\r\n\r\n        am.registerAction(\"viewmode.presentation\", [],\r\n            () => {\r\n                this.setMode(\"presentation\");\r\n            }, \"Präsentationsansicht\", this.$buttonPresentationMode);\r\n\r\n        am.registerAction(\"viewmode.monitor\", [],\r\n            () => {\r\n                this.setMode(\"monitor\");\r\n            }, \"Monitoransicht\", this.$buttonMonitorMode);\r\n\r\n    }\r\n\r\n    toggleEditorFullwidth() {\r\n        if(this.editorHasFullWidth){\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in voller Breite');\r\n            jQuery('#rightdiv').show(600);\r\n            jQuery('#leftpanel').show(600);\r\n            jQuery('#controls').show();\r\n        } else {\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in normaler Breite');\r\n            jQuery('#rightdiv').hide(600);\r\n            jQuery('#leftpanel').hide(600);\r\n            jQuery('#controls').hide();\r\n        }\r\n\r\n        setTimeout(()=>{\r\n            this.main.getMonacoEditor().layout();\r\n        }, 800);\r\n\r\n        this.editorHasFullWidth = !this.editorHasFullWidth;\r\n    }\r\n\r\n    setMode(mode: \"presentation\" | \"monitor\", saveSettings: boolean = true) {\r\n\r\n        let otherMode = mode == \"presentation\" ? \"monitor\" : \"presentation\";\r\n\r\n        this.$buttonMap[mode].addClass(\"jo_pressed\");\r\n        this.$buttonMap[otherMode].removeClass(\"jo_pressed\");\r\n\r\n        let settings = this.main.user.settings;\r\n        let viewModes = settings.viewModes;\r\n\r\n        let viewMode = viewModes[mode];\r\n        viewModes.viewModeChosen = mode;\r\n\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n\r\n        this.main.editor.setFontSize(viewMode.fontSize);\r\n\r\n        if (this.highContrast != viewMode.highContrast) {\r\n            let editor = this.main.getMonacoEditor();\r\n            editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n            this.highContrast = !this.highContrast;\r\n        }\r\n\r\n        if (saveSettings) this.saveSettings();\r\n\r\n    }\r\n\r\n    saveFontSize(fontSizePx: number) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.fontSize = fontSizePx;\r\n        this.saveSettings();\r\n    }\r\n\r\n    setTheme(theme: string) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.theme = theme;\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n        this.saveSettings();\r\n    }\r\n\r\n    toggleHighContrast() {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.highContrast = !viewMode.highContrast;\r\n        let editor = this.main.getMonacoEditor();\r\n        editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n        this.saveSettings();\r\n    }\r\n\r\n    getChosenViewMode(): ViewMode {\r\n        let viewModes = this.main.user.settings.viewModes;\r\n        return viewModes[viewModes.viewModeChosen];\r\n    }\r\n\r\n    saveSettings() {\r\n        this.main.userDataDirty = true;\r\n    }\r\n\r\n    initViewMode() {\r\n        let settings = this.main.user.settings;\r\n\r\n        if (settings[\"viewModes\"] == null) {\r\n            settings[\"viewModes\"] = {\r\n                monitor: null,\r\n                presentation: null,\r\n                viewModeChosen: \"monitor\"\r\n            }\r\n        }\r\n\r\n        if (settings.viewModes.monitor == null) {\r\n            settings.viewModes.monitor = {\r\n                fontSize: 14,\r\n                highContrast: false,\r\n                theme: \"dark\"\r\n            };\r\n\r\n            settings.viewModes.presentation = {\r\n                fontSize: 18,\r\n                highContrast: false,\r\n                theme: \"light\"\r\n            }\r\n            this.saveSettings();\r\n        }\r\n        this.setMode(settings.viewModes.viewModeChosen, false);\r\n    }\r\n\r\n\r\n}","import { Main } from \"../../main/Main.js\";\r\nimport { TextPosition } from \"../lexer/Token\";\r\nimport { Module } from \"./Module\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype SemicolonPosition = {\r\n    position: TextPosition;\r\n    module: Module;\r\n    firstSeenMs: number;\r\n    isThereAgain: boolean;\r\n}\r\n\r\nexport class SemicolonAngel {\r\n    \r\n    semicolonPositions: SemicolonPosition[] = [];\r\n    time: number;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    startRegistering(){\r\n        this.semicolonPositions.forEach(p => p.isThereAgain = false);\r\n        this.time = new Date().getTime();\r\n    }\r\n\r\n    register(position: TextPosition, module: Module){\r\n        let oldEvidence = this.semicolonPositions.find(p => p.position.line == position.line && p.position.column == position.column);\r\n        if(oldEvidence){\r\n            oldEvidence.isThereAgain = true;\r\n        } else {\r\n            this.semicolonPositions.push({position: position, firstSeenMs: this.time, isThereAgain: true, module: module});\r\n        }\r\n    }\r\n\r\n    healSemicolons(){\r\n        let time = new Date().getTime();\r\n        this.semicolonPositions = this.semicolonPositions.filter(p => p.isThereAgain);\r\n\r\n        let currentlyEditedModule = this.main.getCurrentlyEditedModule();\r\n        let cursorLine = this.main.getMonacoEditor().getPosition().lineNumber;\r\n\r\n        this.semicolonPositions.filter(p => time - p.firstSeenMs > 2000).forEach(p => {\r\n\r\n            let isCurrentModule = p.module.file.id != null && p.module.file.id == currentlyEditedModule.file.id;\r\n\r\n            let editOperations: monaco.editor.IIdentifiedSingleEditOperation[] = [\r\n                {\r\n                    range: new monaco.Range(p.position.line, p.position.column, p.position.line, p.position.column),\r\n                    text: \";\",\r\n                    forceMoveMarkers: true\r\n                }\r\n            ]\r\n\r\n            if(isCurrentModule){\r\n                if(Math.abs(cursorLine - p.position.line) > 1){\r\n                    let editor = this.main.getMonacoEditor();\r\n                    const selection = editor.getSelection();\r\n                    editor.executeEdits('Semicolon-Angel', editOperations);\r\n                    editor.setSelection(selection);\r\n                    this.semicolonPositions.splice(this.semicolonPositions.indexOf(p), 1);\r\n                }\r\n            } \r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\nimport { Table, Column } from \"../../compiler/parser/SQLTable.js\";\nimport { DatabaseStructure } from \"../../tools/DatabaseTools.js\";\n\nexport class DatabaseExplorer {\n\n    collapsedTables: Map<string, boolean> = new Map();\n\n    constructor(private main: MainBase, public $mainDiv: JQuery<HTMLElement>) {\n\n    }\n\n    refresh() {\n\n        let dbTool = this.main.getDatabaseTool();\n\n        dbTool.retrieveDatabaseStructure((dbstructure: DatabaseStructure) => {\n\n            this.refreshAfterRetrievingDBStructure();\n        });\n\n    }\n\n    clear(){\n        this.$mainDiv.empty();\n    }\n\n    refreshAfterRetrievingDBStructure() {\n        let dbTool = this.main.getDatabaseTool();\n        let workspace = this.main.getCurrentWorkspace();\n        if (workspace != null) {\n            for (let m of workspace.moduleStore.getModules(false)) {\n                m.file.dirty = true;\n            }\n        }\n\n        let tables = Table.fromTableStructureList(dbTool.databaseStructure.tables);\n\n        this.$mainDiv.empty();\n\n        for (let table of tables) {\n            if(table.identifier != \"sqlite_sequence\"){\n                let $table = this.renderTable(table);\n                this.$mainDiv.append($table);\n            }\n        }\n\n    }\n\n    renderTable(table: Table): JQuery<HTMLElement> {\n        let isCollapsed = this.collapsedTables.get(table.identifier) != null;\n\n        let $table = jQuery(\n            `<div class=\"jo_table\">\n           <div class=\"jo_tableheader\">\n              <div class=\"${isCollapsed ? 'img_tree-collapsed-dark' : 'img_tree-expanded-dark'} jo_treeswitch jo_button jo_active\"></div>\n              <div class=\"jo_tableheaderlink\">\n                <div class=\"img_table\"></div>\n                <div>${table.identifier}</div></div><div class=\"jo_tablesize\">(${table.size}&nbsp;Datensätze)</div>\n              </div>\n            </div>\n        </div>`);\n\n        $table.find('.jo_tableheader').on('pointerup', () => {\n            this.main.getResultsetPresenter().showTable(table.identifier);\n\n        })\n\n        let $columns = jQuery('<div class=\"jo_columnlist\"></div>')\n\n        for (let column of table.columns) {\n            let image = column.isPrimaryKey ? \"img_key\" : \"img_column\";\n\n            let referencesHtml = \"\";\n            if (column.references != null) {\n                referencesHtml = `<div class=\"img_foreign_key\" style=\"margin-left: 5px\"></div><div class=\"jo_references\">${column.references.table.identifier}.${column.references.identifier}</div>`\n            }\n\n            let type = column.type == null ? \"\" : column.type.toString();\n            let notNull: string = column.notNull ? '<div class=\"jo_dbnotnull\">not null</div>' : \"\";\n            let defaultValue: string = column.defaultValue ? `<div class=\"jo_dbdefault\">default ${column.defaultValue}</div>` : \"\";\n            let autoincrement: string = column.isAutoIncrement ? `<div class=\"jo_dbautoincrement\">autoincrement</div>` : \"\";\n\n            let $column = jQuery(`\n            <div class=\"jo_column\">\n                <div class=\"${image}\"></div>\n                <div>${column.identifier}</div>\n                <div class=\"jo_dbtype\">${type}</div>\n                ${autoincrement}\n                ${referencesHtml}\n                ${notNull}\n                ${defaultValue}\n            </div>\n            `);\n            $columns.append($column);\n        }\n\n        $table.append($columns);\n\n        let $treeSwitch = $table.find('.jo_treeswitch');\n        let that = this;\n        $treeSwitch.on('pointerup', (e) => {\n            e.stopPropagation();\n            let $columnList = $treeSwitch.parents('.jo_table').find('.jo_columnlist');\n            let collapsed = $treeSwitch.hasClass('img_tree-collapsed-dark');\n            if (collapsed) {\n                $treeSwitch.removeClass('img_tree-collapsed-dark');\n                $treeSwitch.addClass('img_tree-expanded-dark');\n                $columnList.slideDown(300);\n                that.collapsedTables.delete(table.identifier);\n            } else {\n                $treeSwitch.removeClass('img_tree-expanded-dark');\n                $treeSwitch.addClass('img_tree-collapsed-dark');\n                $columnList.slideUp(300);\n                that.collapsedTables.set(table.identifier, true);\n            }\n        });\n\n        return $table;\n    }\n\n\n\n}","// <div id=\"controls\">\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n// </div>\r\n\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { ResultsetPresenter } from \"./ResultsetPresenter.js\";\r\n\r\n\r\nexport class ProgramControlButtons {\r\n\r\n    $buttonStart: JQuery<HTMLElement>;\r\n    // $buttonPause: JQuery<HTMLElement>;\r\n    // $buttonStop: JQuery<HTMLElement>;\r\n    // $buttonStepOver: JQuery<HTMLElement>;\r\n    // $buttonStepInto: JQuery<HTMLElement>;\r\n    // $buttonStepOut: JQuery<HTMLElement>;\r\n    // $buttonRestart: JQuery<HTMLElement>;\r\n\r\n    // $buttonEdit: JQuery<HTMLElement>;\r\n\r\n\r\n    constructor(private main: MainBase, private $buttonsContainer: JQuery<HTMLElement>) {\r\n\r\n        this.$buttonStart = jQuery('<div title=\"Start\" class=\"img_start-dark jo_button\"></div>');\r\n        let am = this.main.getActionManager();\r\n\r\n        am.registerAction(\"execute\", ['Strg + Enter'],\r\n            () => {\r\n                if (am.isActive(\"execute\")) {\r\n\r\n                    this.main.getResultsetPresenter().executeSelectedStatements();\r\n                }\r\n\r\n            }, \"SQL-Statement ausführen\", this.$buttonStart\r\n        );\r\n\r\n        am.setActive('execute',false);\r\n\r\n        // this.$buttonPause = jQuery('<div title=\"Pause\" class=\"img_pause-dark jo_button\"></div>');\r\n        // this.$buttonStop = jQuery('<div title=\"Stop\" class=\"img_stop-dark jo_button\"></div>');\r\n        // this.$buttonStepOver = jQuery('<div title=\"Step over\" class=\"img_step-over-dark jo_button\"></div>');\r\n        // this.$buttonStepInto = jQuery('<div title=\"Step into\" class=\"img_step-into-dark jo_button\"></div>');\r\n        // this.$buttonStepOut = jQuery('<div title=\"Step out\" class=\"img_step-out-dark jo_button\"></div>');\r\n        // this.$buttonRestart = jQuery('<div title=\"Restart\" class=\"img_restart-dark jo_button\"></div>');\r\n\r\n        // this.$buttonEdit = jQuery('<div class=\"jo_editButton\" title=\"Programm anhalten damit der Programmtext bearbeitbar wird\"></div>')\r\n        // $editorContainer.append(this.$buttonEdit);\r\n\r\n        $buttonsContainer.append(this.$buttonStart\r\n            // , this.$buttonPause, this.$buttonStop,\r\n            // this.$buttonStepOver, this.$buttonStepInto, this.$buttonStepOut, this.$buttonRestart\r\n        );\r\n\r\n        // <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n        // <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n        // <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n        // <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n        // <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n        // <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n        // <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n        // <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n\r\n\r\n\r\n    }\r\n\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { SQLStatement } from \"../../compiler/parser/Parser.js\";\r\nimport { StatementCleaner } from \"../../compiler/parser/StatementCleaner.js\";\r\nimport { QueryResult } from \"../../tools/DatabaseTools.js\";\r\nimport { WDatabase } from \"../../workspace/WDatabase.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\ntype RuntimeError = {\r\n    statement: SQLStatement,\r\n    message: string\r\n}\r\n\r\nexport interface WriteQueryListener {\r\n    notify(statements: SQLStatement[]): void;\r\n}\r\n\r\nexport class ResultsetPresenter {\r\n\r\n    $paginationDiv: JQuery<HTMLDivElement>;\r\n    $infoDiv: JQuery<HTMLDivElement>;\r\n    $arrowLeft: JQuery<HTMLDivElement>;\r\n    $arrowRight: JQuery<HTMLDivElement>;\r\n\r\n    paginationFrom: number;\r\n    paginationAll: number;\r\n\r\n    paginationSize: number = 1000;\r\n\r\n    result: QueryResult;\r\n\r\n    writeQueryListeners: WriteQueryListener[] = [];\r\n\r\n    public static StatementDelimiter: string = \";\\n\\n\"\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$paginationDiv = jQuery('.jo_pagination');\r\n        this.$arrowLeft = jQuery('<div class=\"jo_button img_arrow-left-dark jo_active\"></div>');\r\n        this.$infoDiv = jQuery('<div class=\"jo_pagination_info\"><span class=\"jo_pagination_fromto\">0001 - 1000</span> von <span class=\"jo_pagination_all\">5000</span></div>');\r\n        this.$arrowRight = jQuery('<div class=\"jo_button img_arrow-right-dark jo_active\"></div>');\r\n\r\n        this.$paginationDiv.append(this.$arrowLeft, this.$infoDiv, this.$arrowRight);\r\n\r\n        this.$paginationDiv.hide();\r\n\r\n        let mousePointer = (window.PointerEvent ? \"pointer\" : \"mouse\") + 'up';\r\n\r\n        let that = this;\r\n        this.$arrowLeft.on(mousePointer, (e) => {\r\n            if (that.paginationFrom > 1) {\r\n                that.paginationFrom = Math.max(that.paginationFrom - that.paginationSize, 1);\r\n                if (that.paginationFrom % 1000 != 1) {\r\n                    that.paginationFrom = (Math.floor(that.paginationFrom / that.paginationSize) + 1) * that.paginationSize + 1;\r\n                }\r\n                that.showResults();\r\n                that.activateButtons();\r\n            }\r\n        })\r\n\r\n        this.$arrowRight.on(mousePointer, (e) => {\r\n            if (that.paginationFrom < this.paginationAll - that.paginationSize + 1) {\r\n                that.paginationFrom = Math.min(that.paginationFrom + that.paginationSize, that.paginationAll - that.paginationSize + 1);\r\n                that.showResults();\r\n                that.activateButtons();\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    public addWriteQueryListener(listener: WriteQueryListener) {\r\n        this.writeQueryListeners.push(listener);\r\n    }\r\n\r\n    private activateButtons() {\r\n        this.$arrowLeft.toggleClass('jo_active', this.paginationFrom > 1);\r\n        this.$arrowRight.toggleClass('jo_active', this.paginationFrom < this.paginationAll - this.paginationSize + 1);\r\n    }\r\n\r\n    executeSelectedStatements() {\r\n\r\n        let statements = this.fetchSelectedStatements().filter(st => st.ast.type != TokenType.omittedeStatement);\r\n        \r\n        if (statements.length == 0) return;\r\n\r\n        let hasDDLStatements: boolean = statements.some(st => this.isDDLStatement(st));\r\n        let hasWriteStatements: boolean = statements.some(st => this.isWriteStatement(st));\r\n        let workspace = this.main.getCurrentWorkspace();\r\n        let database = workspace.database;\r\n\r\n        if (hasDDLStatements && workspace.permissions <= 2) {\r\n            alert(\"Der Benutzer hat keine Berechtigung zum Ändern der Tabellenstruktur.\");\r\n            return;\r\n        }\r\n\r\n        if (hasWriteStatements && workspace.permissions <= 1) {\r\n            alert(\"Der Benutzer hat keine Berechtigung zum Einfügen/Löschen/Ändern von Datensätzen.\");\r\n            return;\r\n        }\r\n\r\n        if (hasDDLStatements || hasWriteStatements) {\r\n            if (this.main.isEmbedded()) {\r\n                this.executeDDLWriteStatementsEmbedded(workspace, statements, database);\r\n\r\n            } else {\r\n                this.executeDDLWriteStatementsInOnlineIDE(workspace, statements, database);\r\n            }\r\n\r\n        } else {\r\n            this.executeStatements(statements, 0, [], () => { });\r\n        }\r\n\r\n    }\r\n\r\n    executeDDLWriteStatementsEmbedded(workspace: Workspace, statements: SQLStatement[], database: WDatabase) {\r\n        let sucessfullyExecutedModifyingStatements: SQLStatement[] = [];\r\n        this.executeStatements(statements, 0, sucessfullyExecutedModifyingStatements, () => {\r\n\r\n            if (sucessfullyExecutedModifyingStatements.length == 0)\r\n                return;\r\n\r\n            this.main.getDatabaseExplorer().refresh();\r\n\r\n            this.writeQueryListeners.forEach(listener => listener.notify(sucessfullyExecutedModifyingStatements))\r\n        })\r\n    }\r\n\r\n    private executeDDLWriteStatementsInOnlineIDE(workspace: Workspace, statements: SQLStatement[], database: WDatabase) {\r\n        let main: Main = <Main>this.main;\r\n        // Step 1: Update Database to newest version to avoid potential database reset\r\n        main.networkManager.getNewStatements(workspace, (new_statements, firstStatementIndex) => {\r\n\r\n            main.notifier.executeNewStatements(new_statements, firstStatementIndex, () => { },\r\n                () => {\r\n                    // Step 2: Execute new statements to see which are successful\r\n                    let sucessfullyExecutedModifyingStatements: SQLStatement[] = [];\r\n                    this.executeStatements(statements, 0, sucessfullyExecutedModifyingStatements, () => {\r\n\r\n                        if (sucessfullyExecutedModifyingStatements.length == 0)\r\n                            return;\r\n\r\n                        // Step 3: Send successful statements to server in order to retrieve new db-version-number\r\n                        main.networkManager.AddDatabaseStatements(workspace, sucessfullyExecutedModifyingStatements.map(st => st.sqlCleaned == null ? st.sql : st.sqlCleaned), (statements_before, new_version) => {\r\n\r\n                            // Step 4: If another user sent statements between steps 1 and 3 then they are in array statements_before.\r\n                            // Add all new statements to local statement list\r\n                            statements_before.forEach(st => database.statements.push(st));\r\n                            this.main.getHistoryViewer().appendStatements(statements_before);\r\n                            let modifyingStatements = sucessfullyExecutedModifyingStatements.map(st => st.sqlCleaned == null ? st.sql : st.sqlCleaned)\r\n                            database.statements = database.statements.concat(modifyingStatements);\r\n                            this.main.getHistoryViewer().appendStatements(modifyingStatements);\r\n                            database.version = new_version;\r\n\r\n                            // Step 5 (worst case): statements before is not empty, so the should be executed before the statements executed in step 2\r\n                            // => clear whole database and execute all statements in the right order, beginning with a empty database.\r\n                            if (statements_before.length > 0) {\r\n\r\n                                this.resetDatabase(database);\r\n\r\n                            } else {\r\n\r\n                                main.getDatabaseExplorer().refresh();\r\n\r\n                            }\r\n\r\n                        });\r\n                    });\r\n                }, false);\r\n        });\r\n    }\r\n\r\n    resetDatabase(database: WDatabase) {\r\n        this.main.getDatabaseTool().initializeWorker(database.templateDump, database.statements, () => {\r\n            this.main.getDatabaseExplorer().refresh();\r\n        })\r\n    }\r\n\r\n    executeStatementsString(statements: string[], fromIndex: number, callback: () => void) {\r\n        if (statements.length == 0) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (fromIndex < statements.length) {\r\n            this.main.getDatabaseTool().executeQuery(statements[fromIndex],\r\n                (results) => { this.executeStatementsString(statements, fromIndex + 1, callback) },\r\n                (error) => { console.log(\"Error when executing statement \" + statements[fromIndex] + \"\\nError : \" + error); this.executeStatementsString(statements, fromIndex + 1, callback) });\r\n        } else {\r\n            callback();\r\n        }\r\n    }\r\n\r\n\r\n    executeStatements(statements: SQLStatement[], index: number, successfullyExecutedModifyingStatements: SQLStatement[], callback: () => void, errors: RuntimeError[] = []) {\r\n\r\n        if (index >= statements.length) {\r\n            this.showErrors(errors);\r\n\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        let statement = statements[index];\r\n\r\n\r\n        let callback1 = () => {\r\n            this.executeStatements(statements, index + 1, successfullyExecutedModifyingStatements, callback, errors);\r\n        }\r\n\r\n        if (statement.ast == null) {\r\n            callback1();\r\n            return;\r\n        }\r\n\r\n        if (statement.ast.type == TokenType.keywordSelect) {\r\n            let laterSelectExists: boolean = false;\r\n            for (let j = index + 1; j < statements.length; j++) laterSelectExists = laterSelectExists || this.isSelectStatement(statements[j]);\r\n            if (laterSelectExists) {\r\n                callback1();\r\n            } else {\r\n                if (statement.ast.limitNode == null) {\r\n                    statement.sql.trimRight();\r\n                    while (statement.sql.endsWith(\";\") || statement.sql.endsWith(\"\\n\") || statement.sql.endsWith(\"\\r\")) {\r\n                        statement.sql = statement.sql.substring(0, statement.sql.length - 1);\r\n                        statement.sql.trimRight();\r\n                    }\r\n                    statement.sql += \" limit 100000\";\r\n                }\r\n                this.main.getDatabaseTool().executeQuery(statement.sql,\r\n                    (results) => { this.presentResultsIntern(statement.sql, results); callback1(); },\r\n                    (error) => { errors.push({ statement: statement, message: error }); callback1(); });\r\n            }\r\n        } else {\r\n            let sql = new StatementCleaner().clean(statement);\r\n            console.log(sql);\r\n            this.main.getDatabaseTool().executeQuery(sql, (results) => { successfullyExecutedModifyingStatements.push(statement); callback1(); }, (error) => { errors.push({ statement: statement, message: error }); callback1(); });\r\n        }\r\n\r\n    }\r\n\r\n    oldErrorDecorations: string[] = [];\r\n    showErrorDecorations(errors: RuntimeError[]) {\r\n\r\n        let minimapColors = {\r\n            \"error\": \"#bc1616\",\r\n            \"warning\": \"#cca700\",\r\n            \"info\": \"#75beff\"\r\n        }\r\n\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        let markers: monaco.editor.IMarkerData[] = [];\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n        for (let error of errors) {\r\n            let errorlevel = \"error\";\r\n\r\n            let linesDecorationsClassName: string;\r\n            let borderLeftClass: string;\r\n            let minimapColor: string = minimapColors[errorlevel];\r\n\r\n            switch (errorlevel) {\r\n                case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n            }\r\n\r\n            let severity: monaco.MarkerSeverity;\r\n            switch (errorlevel) {\r\n                case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n            }\r\n\r\n            markers.push({\r\n                startLineNumber: error.statement.from.line,\r\n                startColumn: error.statement.from.column,\r\n                endLineNumber: error.statement.to.line,\r\n                endColumn: error.statement.to.column,\r\n                message: error.message,\r\n                severity: severity\r\n            });\r\n\r\n            decorations.push({\r\n                range: {\r\n                    startLineNumber: error.statement.from.line,\r\n                    startColumn: error.statement.from.column,\r\n                    endLineNumber: error.statement.to.line,\r\n                    endColumn: error.statement.to.column,\r\n                },\r\n                options: {\r\n                    linesDecorationsClassName: linesDecorationsClassName,\r\n                    minimap: {\r\n                        position: monaco.editor.MinimapPosition.Inline,\r\n                        color: minimapColor\r\n                    }\r\n                }\r\n\r\n            });\r\n\r\n\r\n        }\r\n\r\n        let model = this.main.getCurrentlyEditedModule().model;\r\n        monaco.editor.setModelMarkers(model, 'test', markers);\r\n        this.oldErrorDecorations = model.deltaDecorations(this.oldErrorDecorations, decorations);\r\n\r\n    }\r\n\r\n    showTable(identifier: string) {\r\n        let statement = \"select * from \" + identifier + \";\";\r\n        this.main.getDatabaseTool().executeQuery(statement,\r\n            (results) => { this.presentResultsIntern(statement, results); },\r\n            (error) => { });\r\n    }\r\n\r\n\r\n\r\n    showErrors(errors: RuntimeError[]) {\r\n        let $runtimeErrorsTab = this.$bottomDiv.find('.jo_errorsTab');\r\n        let $runtimeErrorsTabHeading = this.$bottomDiv.find('.jo_errorsTabheading');\r\n\r\n        $runtimeErrorsTab.empty();\r\n        this.showErrorDecorations(errors);\r\n\r\n        if (errors.length == 0) return;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        $runtimeErrorsTabHeading.trigger(mousePointer + \"down\");\r\n\r\n        let $errorList = jQuery('<div class=\"jo_errorlist\"></div>');\r\n        $runtimeErrorsTab.append($errorList);\r\n\r\n        for (let error of errors) {\r\n            let query = error.statement.sql;\r\n            query = query.replace(/\\n/g, \" \");\r\n            query = query.replace(/\\s\\s+/g, ' ');\r\n\r\n            let $errorLine = $('<div class=\"jo_error-line\" style=\"flex-direction:column; width: fit-content\"></div>')\r\n            $errorList.append($errorLine);\r\n\r\n            $errorLine.on(mousePointer + 'down', () => {\r\n                let range = {\r\n                    startColumn: error.statement.from.column, startLineNumber: error.statement.from.line,\r\n                    endColumn: error.statement.to.column, endLineNumber: error.statement.to.line\r\n                };\r\n\r\n                this.main.getMonacoEditor().revealRangeInCenter(range);\r\n                $errorList.find('.jo_error-line').removeClass('jo_active');\r\n                $errorLine.addClass('jo_active');\r\n\r\n            })\r\n\r\n\r\n            let $sqlDiv = $('<div class=\"jo_sqlErrorStatement\"></div>');\r\n            $errorLine.append($sqlDiv);\r\n\r\n            monaco.editor.colorize(query, \"vscSQL\", {}).then(\r\n                (html) => { $sqlDiv.html(html) });\r\n\r\n            let $messageDiv = $('<div class=\"jo_sqlErrorMessage\">' + error.message + '</div>');\r\n            $errorLine.append($messageDiv);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    isSelectStatement(statement: SQLStatement): boolean {\r\n        return statement.ast != null && statement.ast.type == TokenType.keywordSelect;\r\n    }\r\n\r\n    isDDLStatement(statement: SQLStatement): boolean {\r\n        return statement.ast != null && [TokenType.keywordCreate, TokenType.keywordDrop, TokenType.keywordAlter].indexOf(statement.ast.type) >= 0;\r\n    }\r\n\r\n    isWriteStatement(statement: SQLStatement): boolean {\r\n        return statement.ast != null && [TokenType.keywordInsert, TokenType.keywordDelete, TokenType.keywordUpdate].indexOf(statement.ast.type) >= 0;\r\n    }\r\n\r\n    private presentResultsIntern(query: string, results: QueryResult[]) {\r\n        let $resultTabheading = this.$bottomDiv.find('.jo_resultTabheading');\r\n        let $resultHeader = this.$bottomDiv.find('.jo_result-header');\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        $resultTabheading.trigger(mousePointer + \"down\");\r\n        this.result = results.pop();\r\n\r\n        let headerDiv = $resultHeader;\r\n\r\n        query = query.replace(/\\n/g, \" \");\r\n        query = query.replace(/\\s\\s+/g, ' ');\r\n        query = query.replace(/limit 100000/g, '');\r\n\r\n        monaco.editor.colorize(query, \"vscSQL\", {}).then(\r\n            (html) => { headerDiv.html(html) });\r\n\r\n        this.paginationAll = this.result ? this.result.values.length : 0;\r\n        this.$infoDiv.find('.jo_pagination_all').html(`${this.paginationAll}`);\r\n        this.paginationFrom = 1;\r\n        this.$paginationDiv.show();\r\n        this.activateButtons();\r\n\r\n        this.showResults();\r\n\r\n    }\r\n\r\n    public clear() {\r\n        let $bodyDiv = this.$bottomDiv.find('.jo_result-body');\r\n        $bodyDiv.empty();\r\n        this.$paginationDiv.hide();\r\n    }\r\n\r\n    private showResultsBusy: boolean = false;\r\n    private showResultPending: boolean = false;\r\n\r\n    private showResults() {\r\n        let $bodyDiv = this.$bottomDiv.find('.jo_result-body');\r\n\r\n        if (this.result == null) {\r\n            this.$infoDiv.find('.jo_pagination_fromto').html('---');\r\n            $bodyDiv.html('Die Datenbank lieferte eine leere Ergebnistabelle.');\r\n            return;\r\n        }\r\n\r\n        let that = this;\r\n        let from = this.paginationAll == 0 ? 0 : this.paginationFrom;\r\n        let to = this.paginationAll == 0 ? 0 : Math.min(this.paginationFrom + this.paginationSize - 1, this.paginationAll);\r\n        this.$infoDiv.find('.jo_pagination_fromto').html(`${from} - ${to}`)\r\n\r\n        if (this.showResultsBusy) {\r\n            if (this.showResultPending) {\r\n                return;\r\n            }\r\n            this.showResultPending = true;\r\n            let waitFunction = () => {\r\n                if (that.showResultsBusy) {\r\n                    setTimeout(() => {\r\n                        waitFunction();\r\n                    }, 200);\r\n                } else {\r\n                    that.showResultPending = false;\r\n                    that.showResults();\r\n                }\r\n            }\r\n            setTimeout(waitFunction, 200);\r\n            return;\r\n        }\r\n\r\n        this.showResultsBusy = true;\r\n\r\n        let $table = jQuery('<table></table>');\r\n        let $header = jQuery('<tr></tr>');\r\n        $table.append($header);\r\n\r\n        this.result.columns.forEach((column) => { $header.append(jQuery(`<th><div>${column}</div></th>`)) });\r\n\r\n        let rows = this.result.values.slice(this.paginationFrom - 1, this.paginationFrom + this.paginationSize - 1);\r\n\r\n        let i = 0;\r\n        let f = () => {\r\n            if (i < rows.length) {\r\n                for (let j = i; j < Math.min(i + 200, rows.length); j++) {\r\n                    let row = rows[j];\r\n                    let $row = jQuery('<tr></tr>');\r\n                    $table.append($row);\r\n                    row.forEach((cell) => { $row.append(jQuery(`<td>${cell}</td>`)) });\r\n                }\r\n                i = Math.min(i + 200, rows.length);\r\n                if (i < rows.length) {\r\n                    setTimeout(f, 30);\r\n                } else {\r\n                    $bodyDiv.empty().append($table);\r\n                    this.showResultsBusy = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        f();\r\n\r\n        // rows.forEach((row) => {\r\n        //     let $row = jQuery('<tr></tr>');\r\n        //     $table.append($row);\r\n        //     row.forEach((cell) => {$row.append(jQuery(`<td>${cell}</td>`))});\r\n        // });\r\n\r\n        // bodyDiv.empty().append($table);\r\n\r\n    }\r\n\r\n\r\n    fetchSelectedStatements(): SQLStatement[] {\r\n        let module = this.main.getCurrentlyEditedModule();\r\n        if (module == null) return null;\r\n\r\n        let monacoEditor = this.main.getMonacoEditor();\r\n        // console.log(monacoEditor.getSelection());\r\n        // console.log(monacoEditor.getPosition());\r\n\r\n        let statements: SQLStatement[] = module.getSQLSTatementsAtSelection(monacoEditor.getSelection());\r\n        for (let statement of statements) {\r\n            statement.sql = monacoEditor.getModel().getValueInRange({\r\n                startColumn: statement.from.column,\r\n                startLineNumber: statement.from.line, endColumn: statement.to.column, endLineNumber: statement.to.line\r\n            });\r\n        }\r\n\r\n        // let sqlStatement = module.getSQLStatementAtPosition(monacoEditor.getPosition());\r\n\r\n        return statements;\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { Module } from \"../compiler/parser/Module.js\";\r\nimport { ResultsetPresenter } from \"../main/gui/ResultsetPresenter.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { WDatabase } from \"../workspace/WDatabase.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ajax } from \"./AjaxHelper.js\";\r\nimport { GetNewStatementsRequest, GetNewStatementsResponse, GetWebSocketTokenResponse, LongPollingListenerResponse, RegisterLongPollingListenerRequest, WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestGetNewStatements, WebSocketResponse } from \"./Data.js\";\r\n\r\nexport class Notifier {\r\n\r\n    connection: WebSocket;\r\n    isOpen: boolean = false;\r\n    workspace: Workspace;\r\n    database: WDatabase;\r\n\r\n    constructor(public main: Main) {\r\n        // Polling is not used. \r\n        // We try long polling (see below!)\r\n\r\n        // this.startPolling();\r\n    }\r\n\r\n    connect(workspace: Workspace) {\r\n\r\n        let that = this;\r\n        this.workspace = workspace;\r\n        this.database = workspace.database;\r\n\r\n        if (this.isOpen) {\r\n            this.connection.close();\r\n        }\r\n\r\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\r\n\r\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/websocket\";\r\n            this.connection = new WebSocket(url);\r\n\r\n            this.connection.onerror = (error: Event) => { this.onError(error); }\r\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\r\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\r\n\r\n            this.connection.onopen = (event: Event) => {\r\n                let request: WebSocketRequestConnect = {\r\n                    command: 1,\r\n                    token: response.token,\r\n                    workspaceId: workspace.id,\r\n                    databaseId: workspace.database.id,\r\n                    databaseVersion: workspace.database.version\r\n                }\r\n\r\n                this.isOpen = true;\r\n                this.sendIntern(JSON.stringify(request));\r\n                this.onOpen();\r\n\r\n            }\r\n\r\n            setTimeout(() => {\r\n                that.startLongPolling()\r\n            }, 2000);\r\n\r\n        });\r\n\r\n    }\r\n\r\n    unsentMessages: string[] = [];\r\n    sendIntern(message: string) {\r\n\r\n        if (!this.isOpen) {\r\n            this.unsentMessages.push(message);\r\n        } else {\r\n            try {\r\n                this.connection.send(message);\r\n            } catch (exception) {\r\n                console.log(exception);\r\n            }\r\n        }\r\n    }\r\n\r\n    onClose(event: CloseEvent) {\r\n        this.isOpen = false;\r\n    }\r\n\r\n\r\n    disconnect() {\r\n        let message: WebSocketRequestDisconnect = {\r\n            command: 4\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n        this.connection.close();\r\n        this.workspace = null;\r\n    }\r\n\r\n    onMessage(event: MessageEvent) {\r\n\r\n        let that = this;\r\n        let response: WebSocketResponse = JSON.parse(event.data);\r\n        if (response.command == undefined) return;\r\n\r\n        switch (response.command) {\r\n            case 2: // SendStatements\r\n                that.executeNewStatements(response.newStatements, response.firstNewStatementIndex, () => {\r\n                    let request: WebSocketRequestGetNewStatements = { command: 2, databaseVersion: that.database.version };\r\n                    that.sendIntern(JSON.stringify(request));\r\n                })\r\n                break;\r\n            case 3: // server initiated disconnect\r\n                this.isOpen = false;\r\n                this.database = null;\r\n                this.workspace = null;\r\n                break;\r\n            case 4: // keep alive\r\n                break;\r\n            case 5: // rollback\r\n                if (this.database.version > response.new_version) {\r\n                    this.main.getHistoryViewer().rollbackLocal();\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    executeNewStatements(newStatements: string[], firstNewStatementIndex: number, callbackIfTooFewStatements: () => void, callbackIfDone: () => void = () => { }, doRefreshDatabaseExplorer: boolean = true) {\r\n        if (this.database == null) return;\r\n        let that = this;\r\n        let delta = firstNewStatementIndex - (this.database.version + 1);\r\n        if (delta > 0) {\r\n            callbackIfTooFewStatements();\r\n            callbackIfDone();\r\n            return;\r\n        } else {\r\n            if (delta < 0) {\r\n                newStatements.splice(0, -delta);\r\n                firstNewStatementIndex -= delta;\r\n            }\r\n            let statements = newStatements;\r\n            if (statements.length > 0) {\r\n                this.main.resultsetPresenter.executeStatementsString(statements, 0, () => {\r\n                    that.main.getHistoryViewer().appendStatements(statements);\r\n                    that.database.statements = that.database.statements.concat(statements)\r\n                    that.database.version = firstNewStatementIndex + newStatements.length - 1;\r\n                    if (doRefreshDatabaseExplorer) {\r\n                        that.main.databaseExplorer.refresh();\r\n                    }\r\n                    callbackIfDone();\r\n                })\r\n            } else {\r\n                callbackIfDone();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    onError(error: Event) {\r\n    }\r\n\r\n    onOpen() {\r\n        this.isOpen = true;\r\n        if (this.unsentMessages.length > 0) {\r\n            this.unsentMessages.forEach(m => this.sendIntern(m));\r\n            this.unsentMessages = [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Polling is not used. \r\n     * We try long polling!\r\n     * (see below)\r\n     */\r\n    isPolling: boolean = false;\r\n    startPolling() {\r\n        if (this.isPolling) return;\r\n        this.isPolling = true;\r\n\r\n        this.poll();\r\n\r\n    }\r\n\r\n    /**\r\n     * Polling is not used.\r\n     * We try long polling!\r\n     * (see below)\r\n     */\r\n    counter: number = 0;\r\n    poll() {\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.poll();\r\n        }, 6000);\r\n\r\n        if (!that.isOpen && that.workspace != null) {\r\n            this.getNewStatementsHttp();\r\n\r\n            // retry connecting:\r\n            that.counter++;\r\n            if (that.counter == 10) {\r\n                that.counter = 0;\r\n                that.connect(that.workspace);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getNewStatementsHttp() {\r\n        let that = this;\r\n        if (this.workspace == null || this.database == null) return;\r\n\r\n        let request: GetNewStatementsRequest = {\r\n            workspaceId: this.workspace.id,\r\n            version_before: this.workspace.database.version\r\n        }\r\n\r\n        ajax('getNewStatements', request, (response: GetNewStatementsResponse) => {\r\n\r\n            that.executeNewStatements(response.newStatements, response.firstNewStatementIndex, () => {\r\n                that.getNewStatementsHttp();\r\n            })\r\n\r\n        });\r\n\r\n    }\r\n\r\n    isLongPolling: boolean = false;\r\n    startLongPolling() {\r\n        if (this.isLongPolling) return;\r\n        this.isLongPolling = true;\r\n\r\n        this.longPoll();\r\n\r\n    }\r\n\r\n    longPollCounter: number = 0;\r\n    longPoll() {\r\n        let that = this;\r\n\r\n        if (!that.isOpen && that.workspace != null) {\r\n            let request: RegisterLongPollingListenerRequest = {\r\n                workspaceId: that.workspace.id\r\n            }\r\n\r\n            $.ajax({\r\n                type: 'POST',\r\n                async: true,\r\n                data: JSON.stringify(request),\r\n                contentType: 'application/json',\r\n                url: \"servlet/registerLongPollingListener\",\r\n                success: function (resp: string) {\r\n                    let response: LongPollingListenerResponse = JSON.parse(resp);\r\n                    if (!that.isOpen && that.workspace?.id == request.workspaceId && response.success) {\r\n                        that.executeNewStatements(response.newStatements, response.firstNewStatementIndex, () => {\r\n                            that.getNewStatementsHttp();\r\n                        })\r\n\r\n                        let timeout: number = 1000;\r\n                        // retry connecting:\r\n                        that.longPollCounter++;\r\n                        if (that.longPollCounter == 10) {\r\n                            that.longPollCounter = 0;\r\n                            that.connect(that.workspace);\r\n                            timeout = 2000;\r\n                        }\r\n\r\n                        setTimeout(() => {\r\n                            that.longPoll();\r\n                        }, 2000);\r\n                    }\r\n                },\r\n                error: function (jqXHR, message) {\r\n                    if (!that.isOpen && that.workspace?.id == request.workspaceId) {\r\n                        setTimeout(() => {\r\n                            that.longPoll();\r\n                        }, 2000);\r\n                    }\r\n                }\r\n            });\r\n\r\n        } else {\r\n            setTimeout(() => {\r\n                that.longPoll();\r\n            }, 5000);\r\n        }\r\n\r\n    }\r\n\r\n}","export class WaitOverlay {\r\n\r\n    visible: boolean = false;\r\n    fadeOutPending: boolean = false;\r\n    $bitteWartenText: JQuery<HTMLElement>;\r\n    $bitteWartenProgress: JQuery<HTMLElement>;\r\n\r\n    constructor(private $waitDiv: JQuery<HTMLElement>){\r\n        this.$bitteWartenText = $waitDiv.find('.bitteWartenText');\r\n        this.$bitteWartenProgress = $waitDiv.find('.bitteWartenProgress');\r\n    }\r\n\r\n    show(message: string){\r\n        this.fadeOutPending = false;\r\n        this.$bitteWartenText.html(message);\r\n        this.$bitteWartenProgress.html('');\r\n        if(!this.visible){\r\n            this.visible = true;\r\n            this.$waitDiv.css('display', 'flex');\r\n            this.$waitDiv.hide();\r\n            this.$waitDiv.fadeIn(400);\r\n        }\r\n    }\r\n\r\n    setProgress(message: string){\r\n        this.$bitteWartenProgress.html(message);\r\n    }\r\n\r\n    hide(){\r\n        if(this.visible){\r\n            this.fadeOutPending = true;\r\n            setTimeout(() => {\r\n                if(this.fadeOutPending){\r\n                    this.fadeOutPending = false;\r\n                    this.$waitDiv.fadeOut(200, () => {\r\n                        this.$waitDiv.css('display', 'none');\r\n                    })\r\n                    this.visible = false;        \r\n                }                \r\n            }, 50);\r\n        }\r\n    }\r\n\r\n}","import { MainEmbedded } from \"../../embedded/MainEmbedded.js\";\r\nimport { copyTextToClipboard, openContextMenu } from \"../../tools/HtmlTools.js\";\r\nimport { WDatabase } from \"../../workspace/WDatabase.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\ntype HistoryPanelEntry = {\r\n    statement: string;\r\n    $div: JQuery<HTMLDivElement>;\r\n    $rollbackButton: JQuery<HTMLDivElement>;\r\n}\r\n\r\nexport class HistoryViewer {\r\n\r\n    panelEntries: HistoryPanelEntry[] = [];\r\n\r\n    constructor(private main: MainBase, private $historyPanel: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    clear() {\r\n        this.$historyPanel.empty();\r\n        this.panelEntries = [];\r\n    }\r\n\r\n    clearAndShowStatements(statements: string[]) {\r\n        this.clear();\r\n        this.appendStatements(statements);\r\n    }\r\n\r\n    appendStatements(statements: string[]) {\r\n        statements.forEach(stmt => {\r\n            let panelEntry = this.makePanelEntry(stmt, this.panelEntries.length + 1);\r\n            this.$historyPanel.prepend(panelEntry.$div);\r\n            this.panelEntries.unshift(panelEntry);\r\n        })\r\n\r\n        this.makeLastButtonActive();\r\n    }\r\n\r\n    makeLastButtonActive() {\r\n        this.panelEntries.forEach(pe => pe.$rollbackButton.removeClass('jo_active'));\r\n\r\n        if (this.panelEntries.length > 0) {\r\n            this.panelEntries[0].$rollbackButton.addClass('jo_active');\r\n        }\r\n    }\r\n\r\n    makePanelEntry(statement: string, index: number): HistoryPanelEntry {\r\n        let $div = <JQuery<HTMLDivElement>>jQuery(`<div class=\"jo_panelEntry\"></div>`);\r\n        let $index = jQuery(`<div class=\"jo_panelEntryIndex\">${index}.</div>`);\r\n        let $text = jQuery(`<div class=\"jo_panelEntryText\"></div>`);\r\n        let t: string = statement.substring(0, Math.min(400, statement.length));\r\n        if (statement.length > 400) {\r\n            t += \"...\";\r\n        }\r\n        $text.text(t);\r\n        let $copybutton = <JQuery<HTMLDivElement>>jQuery(`<div class=\"img_copy jo_panelEntryCopyButton jo_active jo_button\" title=\"In die Zwischenablage kopieren\"></div>`)\r\n        let $rollbackbutton = <JQuery<HTMLDivElement>>jQuery(`<div class=\"img_undo jo_panelEntryRollbackButton jo_button\" title=\"Rollback\"></div>`)\r\n        let that = this;\r\n\r\n        $copybutton.on('click', () => {\r\n            copyTextToClipboard(statement);\r\n        })\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $rollbackbutton.on(mousePointer + 'up', (ev) => {\r\n            ev.preventDefault();\r\n            openContextMenu([{\r\n                caption: \"Abbrechen\",\r\n                callback: () => {\r\n                }\r\n            }, {\r\n                caption: \"Ich bin mir sicher: rollback!\",\r\n                color: \"#ff6060\",\r\n                callback: () => {\r\n                    this.rollback();\r\n                }\r\n            }], ev.pageX + 2, ev.pageY + 2);\r\n            ev.stopPropagation();\r\n        })\r\n\r\n        $div.append($index, $text, $copybutton, $rollbackbutton);\r\n        return {\r\n            $div: $div,\r\n            statement: statement,\r\n            $rollbackButton: $rollbackbutton\r\n        }\r\n    }\r\n\r\n    rollback() {\r\n        if (this.panelEntries.length == 0) return;\r\n\r\n        if (this.main.isEmbedded()) {\r\n            this.rollbackEmbedded();\r\n        } else {\r\n            let main: Main = <Main>this.main;\r\n            main.networkManager.rollback((error: string, rollbackLocalNeeded: boolean) => {\r\n                if (error == null && rollbackLocalNeeded) {\r\n                    this.rollbackLocal();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    rollbackLocal() {\r\n        let database = this.main.getCurrentWorkspace().database;\r\n        database.statements.pop();\r\n        database.version--;\r\n        this.main.getDatabaseTool().initializeWorker(database.templateDump, database.statements, () => {\r\n\r\n        }, () => {\r\n            this.main.getDatabaseExplorer().refreshAfterRetrievingDBStructure();\r\n            let lastPanelEntry = this.panelEntries.shift();\r\n            lastPanelEntry.$div.remove();\r\n            this.makeLastButtonActive();\r\n        })\r\n    }\r\n\r\n    rollbackEmbedded() {\r\n        let main: MainEmbedded = <MainEmbedded>this.main;\r\n        main.writeQueryManager.rollback();\r\n\r\n        this.main.getDatabaseTool().initializeWorker(main.initialTemplateDump,\r\n            main.initialStatements.concat(main.writeQueryManager.writtenStatements), () => { },\r\n            () => {\r\n                this.main.getDatabaseExplorer().refreshAfterRetrievingDBStructure();\r\n                let lastPanelEntry = this.panelEntries.shift();\r\n                lastPanelEntry.$div.remove();\r\n                this.makeLastButtonActive();\r\n            })\r\n    }\r\n\r\n}","import { ClassData, UserData, Workspaces } from \"../communication/Data.js\";\r\nimport { NetworkManager } from \"../communication/NetworkManager.js\";\r\nimport { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ActionManager } from \"./gui/ActionManager.js\";\r\nimport { BottomDiv } from \"./gui/BottomDiv.js\";\r\nimport { Editor } from \"./gui/Editor.js\";\r\nimport { Formatter } from \"./gui/Formatter.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { MainMenu } from \"./gui/MainMenu.js\";\r\nimport { ProjectExplorer } from \"./gui/ProjectExplorer.js\";\r\nimport { RightDiv } from \"./gui/RightDiv.js\";\r\nimport { Sliders } from \"./gui/Sliders.js\";\r\nimport { TeacherExplorer } from \"./gui/TeacherExplorer.js\";\r\nimport { ThemeManager } from \"./gui/ThemeManager.js\";\r\nimport { Login } from \"./Login.js\";\r\nimport { Module, File } from \"../compiler/parser/Module.js\";\r\nimport { ViewModeController } from \"./gui/ViewModeController.js\";\r\nimport { ErrorManager } from \"./gui/ErrorManager.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { DatabaseTool } from \"../tools/DatabaseTools.js\";\r\nimport { MainBase } from \"./MainBase.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { DatabaseExplorer } from \"./gui/DatabaseExplorer.js\";\r\nimport { ProgramControlButtons } from \"./gui/ProgramControlButtons.js\";\r\nimport { ResultsetPresenter } from \"./gui/ResultsetPresenter.js\";\r\nimport { Notifier } from \"../communication/Notifier.js\";\r\nimport { checkIfMousePresent } from \"../tools/HtmlTools.js\";\r\nimport { WaitOverlay } from \"./gui/WaitOverlay.js\";\r\nimport { HistoryViewer } from \"./gui/HistoryViewer.js\";\r\n\r\nexport class Main implements MainBase {\r\n    isEmbedded(): boolean {\r\n        return false;\r\n    }\r\n\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    // VORSICHT: ggf. Module -> any\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.projectExplorer.getCurrentlyEditedModule();\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n        this.projectExplorer.setModuleActive(module);\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n    getDatabaseTool(): DatabaseTool {\r\n        return this.databaseTool;\r\n    }\r\n\r\n    getDatabaseExplorer():DatabaseExplorer {\r\n        return this.databaseExplorer;\r\n    }\r\n\r\n    getResultsetPresenter(): ResultsetPresenter {\r\n        return this.resultsetPresenter;\r\n    }\r\n\r\n    getWaitOverlay(): WaitOverlay {\r\n        return this.waitOverlay;\r\n    }\r\n\r\n    getHistoryViewer(): HistoryViewer {\r\n        return this.historyViewer;\r\n    }\r\n\r\n    workspaceList: Workspace[] = [];\r\n    workspacesOwnerId: number;\r\n\r\n    // monaco_editor: monaco.editor.IStandaloneCodeEditor;\r\n    editor: Editor;\r\n    currentWorkspace: Workspace;\r\n    projectExplorer: ProjectExplorer;\r\n    teacherExplorer: TeacherExplorer;\r\n    networkManager: NetworkManager;\r\n    actionManager: ActionManager;\r\n    mainMenu: MainMenu;\r\n\r\n    login: Login;\r\n\r\n    compiler: Compiler;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    bottomDiv: BottomDiv;\r\n\r\n    startupComplete = 2;\r\n    waitForGUICallback: () => void;\r\n\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    user: UserData;\r\n    userDataDirty: boolean = false;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    rightDiv: RightDiv;\r\n\r\n    viewModeController: ViewModeController;\r\n\r\n    databaseTool: DatabaseTool;\r\n\r\n    databaseExplorer: DatabaseExplorer;\r\n\r\n    resultsetPresenter: ResultsetPresenter;\r\n\r\n    notifier: Notifier;\r\n\r\n    waitOverlay: WaitOverlay = new WaitOverlay(jQuery('.bitteWarten'));\r\n    historyViewer: HistoryViewer = new HistoryViewer(this, jQuery('.jo_historyTab'));\r\n\r\n    initGUI() {\r\n\r\n        checkIfMousePresent();\r\n\r\n        this.login = new Login(this);\r\n        this.login.initGUI();\r\n\r\n        this.databaseTool = new DatabaseTool(this);\r\n        this.databaseExplorer = new DatabaseExplorer(this, jQuery(\".jo_db_tree\"));\r\n\r\n        this.actionManager = new ActionManager(null, this);\r\n        this.actionManager.init();\r\n\r\n        this.networkManager = new NetworkManager(this, jQuery('#bottomdiv-outer .jo_updateTimerDiv'));\r\n\r\n        let sliders = new Sliders(this);\r\n        sliders.initSliders();\r\n        this.mainMenu = new MainMenu(this);\r\n        this.projectExplorer = new ProjectExplorer(this, jQuery('#leftpanel>.jo_projectexplorer'));\r\n        this.projectExplorer.initGUI();\r\n\r\n        this.bottomDiv = new BottomDiv(this, jQuery('#bottomdiv-outer>.jo_bottomdiv-inner'), jQuery('body'));\r\n\r\n        this.rightDiv = new RightDiv(this, jQuery('#rightdiv-inner'));\r\n        this.rightDiv.initGUI();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.themeManager = new ThemeManager();\r\n\r\n        this.viewModeController = new ViewModeController(jQuery(\"#view-mode\"), this);\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n        new ProgramControlButtons(this, jQuery('#controls'));\r\n\r\n        this.resultsetPresenter = new ResultsetPresenter(this, jQuery('.jo_bottomdiv-inner'));\r\n\r\n        this.notifier = new Notifier(this);\r\n\r\n    }\r\n\r\n\r\n    initEditor() {\r\n        this.editor = new Editor(this, true, false);\r\n        new Formatter().init();\r\n        // this.monaco_editor = \r\n        this.editor.initGUI(jQuery('#editor'));\r\n\r\n        let that = this;\r\n        jQuery(window).on('resize', (event) => {\r\n            jQuery('#bottomdiv-outer').css('height', '450px');\r\n            jQuery('#editor').css('height', (window.innerHeight - 450 - 30 - 2) + \"px\");\r\n            that.editor.editor.layout();\r\n            jQuery('#editor').css('height', \"\");\r\n\r\n        });\r\n\r\n        jQuery(window).trigger('resize');\r\n\r\n        this.checkStartupComplete();\r\n    }\r\n\r\n    initTeacherExplorer(classdata: ClassData[]) {\r\n        this.teacherExplorer = new TeacherExplorer(this, classdata);\r\n        this.teacherExplorer.initGUI();\r\n    }\r\n\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    start() {\r\n\r\n        if (this.waitForGUICallback != null) {\r\n            this.waitForGUICallback();\r\n        }\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.getMonacoEditor().layout();\r\n        }, 200);\r\n\r\n        this.compiler = new Compiler(this);\r\n\r\n        this.startTimer();\r\n\r\n        $(window).on('unload', function() {\r\n            \r\n            if(navigator.sendBeacon && that.user != null){\r\n                that.networkManager.sendUpdates(null, false);\r\n                that.networkManager.sendUpdateUserSettings(() => {});\r\n            }\r\n            \r\n        });\r\n\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n                this.projectExplorer.renderErrorCount(this.currentWorkspace, errors);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                if (this.projectExplorer) {\r\n                    this.version++;\r\n                }\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    removeWorkspace(w: Workspace) {\r\n        this.workspaceList.splice(this.workspaceList.indexOf(w), 1);\r\n    }\r\n\r\n    restoreWorkspaces(workspaces: Workspaces) {\r\n\r\n        this.workspaceList = [];\r\n        this.currentWorkspace = null;\r\n        // this.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\" , \"text\"));\r\n        this.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        let currentWorkspace: Workspace = null;\r\n\r\n        for (let ws of workspaces.workspaces) {\r\n\r\n            let workspace: Workspace = Workspace.restoreFromData(ws, this);\r\n            this.workspaceList.push(workspace);\r\n            if (ws.id == this.user.currentWorkspace_id) {\r\n                currentWorkspace = workspace;\r\n            }\r\n        }\r\n\r\n        this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n\r\n        if (currentWorkspace == null && this.workspaceList.length > 0) {\r\n            currentWorkspace = this.workspaceList[0];\r\n        }\r\n\r\n        if (currentWorkspace != null) {\r\n            this.projectExplorer.setWorkspaceActive(currentWorkspace);\r\n        }\r\n\r\n        if (this.workspaceList.length == 0) {\r\n\r\n            Helper.showHelper(\"newDatabaseHelper\", this, this.projectExplorer.workspaceListPanel.$captionElement);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    createNewWorkspace(name: string, owner_id: number): Workspace {\r\n        return new Workspace(name, this, owner_id);\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class ErrorManager {\r\n\r\n    oldDecorations: string[] = [];\r\n    oldErrorDecorations: string[] = [];\r\n    $errorDiv: JQuery<HTMLElement>;\r\n\r\n    $bracket_warning: JQuery<HTMLElement>;\r\n\r\n    minimapColor: {[key: string]:string } = {};\r\n\r\n    lightBulbOnClickFunctionList: {class: string, onClickFunction: () => void, title: string}[] = [];\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>, private $mainDiv: JQuery<HTMLElement>) {\r\n        this.minimapColor[\"error\"] = \"#bc1616\";\r\n        this.minimapColor[\"warning\"] = \"#cca700\";\r\n        this.minimapColor[\"info\"] = \"#75beff\";\r\n\r\n        this.$bracket_warning = $mainDiv.find(\".jo_parenthesis_warning\");\r\n\r\n        this.$bracket_warning.attr('title', 'Klammeralarm!');\r\n        this.$bracket_warning.children().attr('title', 'Klammeralarm!');\r\n\r\n        let that = this;\r\n        $mainDiv.find(\".jo_pw_undo\").on(\"click\", () => {\r\n            let editor = that.main.getMonacoEditor();\r\n            editor.trigger(\".\", \"undo\", {});\r\n        }).attr('title', 'Undo');\r\n    }\r\n\r\n    showParenthesisWarning(error: string){\r\n        if(error != null){\r\n            this.$bracket_warning.css(\"visibility\", \"visible\");\r\n            this.$bracket_warning.find(\".jo_pw_heading\").text(error);\r\n        } else {\r\n            this.$bracket_warning.css(\"visibility\", \"hidden\");\r\n        }\r\n    }\r\n\r\n    showErrors(workspace: Workspace): Map<Module, number> {\r\n\r\n        this.lightBulbOnClickFunctionList = [];\r\n\r\n        let errorCountMap: Map<Module, number> = new Map();\r\n\r\n        this.$errorDiv = this.$bottomDiv.find('.jo_tabs>.jo_errorsTab');\r\n        this.$errorDiv.empty();\r\n\r\n        let hasErrors = false;\r\n\r\n        let ms = workspace.moduleStore;\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        for (let m of ms.getModules(false)) {\r\n            let markers: monaco.editor.IMarkerData[] = [];\r\n            let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n            let $errorList: JQuery<HTMLElement>[] = [];\r\n\r\n            let errors = m.getSortedAndFilteredErrors();\r\n            errorCountMap.set(m, m.getErrorCount());\r\n\r\n            for (let error of errors) {\r\n\r\n                let linesDecorationsClassName: string;\r\n                let borderLeftClass: string;\r\n                let minimapColor: string = this.minimapColor[error.level];\r\n\r\n                switch (error.level) {\r\n                    case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                    case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                    case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n                }\r\n\r\n                if (error.quickFix != null) {\r\n                    let quickFix = error.quickFix;\r\n                    let lightBulbClass = \"lb_\" + Math.trunc(Math.random() * 1000000);\r\n                    linesDecorationsClassName = 'jo_yellowLightBulb ' + borderLeftClass + \" \" + lightBulbClass;\r\n\r\n                    this.lightBulbOnClickFunctionList.push({class: '.' + lightBulbClass, \r\n                    onClickFunction: () => {\r\n\r\n                        let edits = quickFix.editsProvider(m.model.uri);\r\n                        editor.executeEdits(\"\", edits.map((edit) => {\r\n                            let r = edit.edit.range;\r\n                            return {\r\n                                range: new monaco.Range(r.startLineNumber, r.startColumn, r.endLineNumber, r.endColumn),\r\n                                text: edit.edit.text,\r\n                                forceMoveMarkers: true\r\n                            }\r\n                        }\r\n                        ));\r\n\r\n                    },\r\n                    title: quickFix.title\r\n                })\r\n\r\n\r\n                }\r\n\r\n                this.processError(error, m, $errorList);\r\n\r\n                let severity: monaco.MarkerSeverity;\r\n                switch (error.level) {\r\n                    case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                    case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                    case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n                }\r\n\r\n                markers.push({\r\n                    startLineNumber: error.position.line,\r\n                    startColumn: error.position.column,\r\n                    endLineNumber: error.position.line,\r\n                    endColumn: error.position.column + error.position.length,\r\n                    message: error.text,\r\n                    severity: severity,\r\n                    //@ts-ignore\r\n                    relatedInformation: error.quickFix\r\n                });\r\n\r\n                decorations.push({\r\n                    range: {\r\n                        startLineNumber: error.position.line,\r\n                        startColumn: error.position.column,\r\n                        endLineNumber: error.position.line,\r\n                        endColumn: error.position.column + error.position.length\r\n                    },\r\n                    options: {\r\n                        linesDecorationsClassName: linesDecorationsClassName,\r\n                        minimap: {\r\n                            position: monaco.editor.MinimapPosition.Inline,\r\n                            color: minimapColor\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n            }\r\n\r\n            monaco.editor.setModelMarkers(m.model, 'test', markers);\r\n            m.oldErrorDecorations = m.model.deltaDecorations(m.oldErrorDecorations, decorations);\r\n\r\n            // decorations used when user clicks on error in error-list:\r\n            this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, []);\r\n\r\n\r\n            if ($errorList.length > 0 && this.$errorDiv.length > 0) {\r\n                hasErrors = true;\r\n                let $file = jQuery('<div class=\"jo_error-filename\">' + m.file.name + '&nbsp;</div>');\r\n                this.$errorDiv.append($file);\r\n                for (let $error of $errorList) {\r\n                    this.$errorDiv.append($error);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasErrors && this.$errorDiv.length > 0) {\r\n            this.$errorDiv.append(jQuery('<div class=\"jo_noErrorMessage\">Keine Fehler gefunden :-)</div>'));\r\n        }\r\n\r\n        this.registerLightbulbOnClickFunctions();\r\n\r\n        return errorCountMap;\r\n\r\n    }\r\n\r\n    registerLightbulbOnClickFunctions() {\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            for(let locf of that.lightBulbOnClickFunctionList){\r\n                    jQuery(locf.class).off('click', locf.onClickFunction);\r\n                    jQuery(locf.class).on('click', locf.onClickFunction).attr('title', locf.title);\r\n            }            \r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    processError(error: Error, m: Module, $errorDivs: JQuery<HTMLElement>[]) {\r\n\r\n        let $div = jQuery('<div class=\"jo_error-line\"></div>');\r\n        let $lineColumn = jQuery('<span class=\"jo_error-position\">[Z&nbsp;<span class=\"jo_linecolumn\">' + error.position.line + '</span>' +\r\n            ' Sp&nbsp;<span class=\"jo_linecolumn\">' + error.position.column + '</span>]</span>:&nbsp;');\r\n        let category = \"\";\r\n        switch (error.level) {\r\n            case \"error\": break;\r\n            case \"warning\": category = '<span class=\"jo_warning_category\">Warnung: </span>'; break;\r\n            case \"info\": category = '<span class=\"jo_info_category\">Info: </span>'; break;\r\n        }\r\n        let $message = jQuery('<div class=\"jo_error-text\">' + category + error.text + \"</div>\");\r\n\r\n        $div.append($lineColumn).append($message);\r\n\r\n        let that = this;\r\n        $div.on(\"mousedown\", (ev) => {\r\n            this.$errorDiv.find('.jo_error-line').removeClass('jo_active');\r\n            $div.addClass('jo_active');\r\n            that.showError(m, error);\r\n        });\r\n\r\n        $errorDivs.push($div);\r\n    }\r\n\r\n    showError(m: Module, error: Error) {\r\n\r\n        if (this.main instanceof Main) {\r\n            if (m != this.main.projectExplorer.getCurrentlyEditedModule()) {\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n        let position = error.position;\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n\r\n        let className: string = \"\";\r\n        switch (error.level) {\r\n            case \"error\": className = \"jo_revealError\"; break;\r\n            case \"warning\": className = \"jo_revealWarning\"; break;\r\n            case \"info\": className = \"jo_revealInfo\"; break;\r\n        }\r\n\r\n\r\n        this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, [\r\n            {\r\n                range: range,\r\n                options: { className: className }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n}","import { makeDiv } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { stringToDate, dateToStringWithoutTime } from \"../../tools/StringTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\ntype ModuleWithWorkspace = {\r\n    module: Module,\r\n    workspace: Workspace\r\n}\r\n\r\ntype DayWithModules = {\r\n    date: Date;\r\n    day: string;\r\n    modules: ModuleWithWorkspace[];\r\n}\r\n\r\nexport class HomeworkManager {\r\n\r\n    $homeworkTab: JQuery<HTMLElement>;\r\n    $homeworkTabLeft: JQuery<HTMLElement>;\r\n    $homeworkTabRight: JQuery<HTMLElement>;\r\n\r\n    $showRevisionButton: JQuery<HTMLElement>;\r\n    showRevisionActive: boolean = false;\r\n\r\n    diffEditor: monaco.editor.IStandaloneDiffEditor;\r\n\r\n    constructor(private main: Main, public $bottomDiv: JQuery<HTMLElement>) {\r\n        this.$homeworkTab = $bottomDiv.find('.jo_tabs>.jo_homeworkTab');\r\n    }\r\n\r\n    initGUI() {\r\n        let that = this;\r\n        this.$homeworkTab.append(this.$homeworkTabLeft = makeDiv(\"\", \"jo_homeworkTabLeft jo_scrollable\"));\r\n        this.$homeworkTab.append(this.$homeworkTabRight = makeDiv(\"\", \"jo_homeworkTabRight jo_scrollable\"));\r\n        jQuery('#view-mode').prepend(this.$showRevisionButton = makeDiv(\"\", \"jo_button jo_active jo_homeworkRevisionButton\", \"\"));\r\n        this.$showRevisionButton.on(\"click\", () => {\r\n            if (this.showRevisionActive) {\r\n                this.hideRevision();\r\n            } else {\r\n                this.showRevision(that.main.getCurrentlyEditedModule());\r\n            }\r\n        });\r\n        this.$showRevisionButton.hide();\r\n        jQuery('#diffEditor').hide();\r\n    }\r\n\r\n    showHomeWorkRevisionButton() {\r\n        this.$showRevisionButton.text(this.showRevisionActive ? \"Normalansicht\" : \"Korrekturen zeigen\");\r\n        this.$showRevisionButton.show();\r\n    }\r\n\r\n    hideHomeworkRevisionButton() {\r\n        this.$showRevisionButton.hide();\r\n    }\r\n\r\n    showRevision(module: Module) {\r\n\r\n        module.file.text = module.getProgramTextFromMonacoModel();\r\n        let file = module.file;\r\n\r\n        jQuery('#editor').hide();\r\n        jQuery('#diffEditor').show();\r\n\r\n        var originalModel = monaco.editor.createModel(file.text_before_revision, \"myJava\");\r\n        var modifiedModel = monaco.editor.createModel(file.text, \"myJava\");\r\n\r\n        this.diffEditor = monaco.editor.createDiffEditor(document.getElementById(\"diffEditor\"), {\r\n            // You can optionally disable the resizing\r\n            enableSplitViewResizing: true,\r\n            originalEditable: false,\r\n            readOnly: true,\r\n            // Render the diff inline\r\n            renderSideBySide: true\r\n        });\r\n\r\n        this.diffEditor.setModel({\r\n            original: originalModel,\r\n            modified: modifiedModel\r\n        });\r\n\r\n        this.showRevisionActive = true;\r\n        this.showHomeWorkRevisionButton();\r\n    }\r\n\r\n    hideRevision() {\r\n        if (this.showRevisionActive) {\r\n\r\n            jQuery('#diffEditor').hide();\r\n            this.diffEditor.dispose();\r\n            this.diffEditor = null;\r\n            jQuery('#editor').show();\r\n\r\n            this.showRevisionActive = false;\r\n            this.showHomeWorkRevisionButton();\r\n        }\r\n    }\r\n\r\n\r\n    attachToWorkspaces(workspaces: Workspace[]) {\r\n\r\n        let daysWithModules: DayWithModules[] = [];\r\n        let map: { [day: string]: DayWithModules } = {};\r\n\r\n        workspaces.forEach(ws => {\r\n            ws.moduleStore.getModules(false).forEach(module => {\r\n\r\n                let dateString = module.file.submitted_date;\r\n                if (dateString != null) {\r\n\r\n                    let date: Date = stringToDate(dateString);\r\n                    let dateWithoutTime = dateToStringWithoutTime(date);\r\n                    let dwm: DayWithModules = map[dateWithoutTime];\r\n                    if (dwm == null) {\r\n                        dwm = {\r\n                            date: date,\r\n                            day: dateWithoutTime,\r\n                            modules: []\r\n                        };\r\n                        map[dateWithoutTime] = dwm;\r\n                        daysWithModules.push(dwm);\r\n                    }\r\n                    dwm.modules.push({module: module, workspace: ws});\r\n\r\n                }\r\n\r\n            });\r\n\r\n        });\r\n\r\n        this.$homeworkTabLeft.empty();\r\n        this.$homeworkTabRight.empty();\r\n\r\n        let that = this;\r\n\r\n        this.$homeworkTabLeft.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgabetage:\"));\r\n\r\n\r\n        daysWithModules.sort((a, b) => {\r\n            if (a.date.getFullYear() != b.date.getFullYear()) return -Math.sign(a.date.getFullYear() - b.date.getFullYear());\r\n            if (a.date.getMonth() != b.date.getMonth()) return -Math.sign(a.date.getMonth() - b.date.getMonth());\r\n            if (a.date.getDate() != b.date.getDate()) return -Math.sign(a.date.getDate() - b.date.getDate());\r\n            return 0;\r\n        });\r\n\r\n        let first: boolean = true;\r\n\r\n        daysWithModules.forEach(dwm => {\r\n\r\n            dwm.modules.sort((m1, m2) => m1.module.file.name.localeCompare(m2.module.file.name));\r\n\r\n            let $div = makeDiv(\"\", \"jo_homeworkDate\", dwm.day);\r\n            this.$homeworkTabLeft.append($div);\r\n\r\n            $div.on(\"click\", (e) => {\r\n                this.$homeworkTabLeft.find('.jo_homeworkDate').removeClass('active');\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            });\r\n\r\n            if (first) {\r\n                first = false;\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    select(dwm: DayWithModules) {\r\n        this.$homeworkTabRight.empty();\r\n        this.$homeworkTabRight.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgegebene Dateien:\"));\r\n        let that = this;\r\n        dwm.modules.forEach(moduleWithWorkspace => {\r\n            let $div = jQuery(`<div class=\"jo_homeworkEntry\">Workspace <span class=\"jo_homework-workspace\">\r\n                    ${moduleWithWorkspace.workspace.name}</span>, Datei <span class=\"jo_homework-file\">\r\n                    ${moduleWithWorkspace.module.file.name}</span> (Abgabe: ${moduleWithWorkspace.module.file.submitted_date} )</div>`);\r\n            that.$homeworkTabRight.append($div);\r\n            $div.on(\"click\", () => {\r\n                    that.main.projectExplorer.setWorkspaceActive(moduleWithWorkspace.workspace);\r\n                    that.main.projectExplorer.setModuleActive(moduleWithWorkspace.module);\r\n                    that.main.projectExplorer.fileListPanel.select(moduleWithWorkspace.module, false);\r\n            });\r\n        })\r\n        \r\n    }\r\n\r\n\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { ErrorManager } from \"./ErrorManager.js\";\r\nimport { HomeworkManager } from \"./HomeworkManager.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class BottomDiv {\r\n\r\n    errorManager: ErrorManager;\r\n    homeworkManager: HomeworkManager;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>, public $mainDiv: JQuery<HTMLElement>) {\r\n\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_homeworkTabheading').length > 0) {\r\n            this.homeworkManager = new HomeworkManager(<Main>main, $bottomDiv);\r\n        }\r\n\r\n        this.errorManager = new ErrorManager(main, $bottomDiv, $mainDiv);\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$bottomDiv);\r\n        if (this.homeworkManager != null) this.homeworkManager.initGUI();\r\n\r\n        this.$bottomDiv.find('.jo_tabs').children().first().trigger(\"click\");\r\n\r\n    }\r\n\r\n    showHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'visible');\r\n        jQuery('.jo_homeworkTabheading').trigger(\"mousedown\");\r\n\r\n    }\r\n\r\n    hideHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'hidden');\r\n        jQuery('.jo_tabheadings').children().first().trigger(\"mousedown\");\r\n\r\n    }\r\n\r\n\r\n}","\nexport class EmbeddedSlider {\n\n    $sliderDiv: JQuery<HTMLElement>;\n\n    /**\n     * A div contains $container and another div. Between the latter two \n     * a slider should get inserted.\n     * @param $container \n     * @param firstLast true, if $container is left/on top of other div; false if otherwise\n     * @param horVert true, if $container and other div are left/right of another; false if they are on top/below each other\n     * @param callback \n     * @param $otherDiv \n     */\n    constructor(private $container: JQuery<HTMLElement>, \n        private firstLast: boolean, private horVert: boolean,\n         private callback: (newLength: number) => void, private $otherDiv?: JQuery<HTMLElement>){\n            this.initSlider();\n    }\n\n    initSlider() {\n        let that = this;\n\n        if(this.$otherDiv == null){\n            this.$container.parent().children().each((index, element) => {\n                if(element != this.$container[0]){\n                    that.$otherDiv = jQuery(element);\n                }\n            });\n        }\n\n        this.$sliderDiv = jQuery('<div class=\"joe_slider\"></div>');\n\n        this.$sliderDiv.css({\n            width: this.horVert ? \"100%\" : \"4px\",\n            height: this.horVert ? \"4px\" : \"100%\",\n            cursor: this.horVert ? \"row-resize\" : \"col-resize\",\n        });\n\n        if(this.firstLast){\n            this.$sliderDiv.css({\n                top: \"0px\",\n                left: \"0px\"\n            });\n        } else {\n            if(this.horVert){\n                this.$sliderDiv.css({\n                    bottom: \"0px\",\n                    left: \"0px\"\n                });    \n            } else {\n                this.$sliderDiv.css({\n                    top: \"0px\",\n                    right: \"0px\"\n                });    \n            }\n        }\n\n        this.$container.append(this.$sliderDiv);\n\n        this.$sliderDiv.on(\"mousedown\", (md: JQuery.MouseDownEvent) => {\n\n            let x = md.clientX;\n            let y = md.clientY;\n\n            jQuery(document).on(\"mousemove.slider\", (mm: JQuery.MouseMoveEvent) => {\n                let dx = mm.clientX - x;\n                let dy = mm.clientY - y;\n\n                that.slide(dx, dy);\n                \n                x = mm.clientX;\n                y = mm.clientY;\n\n            });\n\n            jQuery(document).on(\"mouseup.slider\", () => {\n                jQuery(document).off(\"mousemove.slider\");\n                jQuery(document).off(\"mouseup.slider\");\n            });\n\n\n        });\n\n        setTimeout(() => {\n            that.slide(1, 1);\n        }, 600);\n\n    }\n\n    setColor(color: string){\n        this.$sliderDiv.css('background-color', color);\n    }\n\n    slide(dx: number, dy: number){\n        if(this.horVert){\n            let height = Number.parseInt(this.$container.css('height').replace('px', ''));\n            let otherHeight = Number.parseInt(this.$otherDiv.css('height').replace('px', ''));\n            let newHeight = this.firstLast ? height -= dy : height += dy;\n            let newOtherHeight = this.firstLast ? otherHeight += dy : otherHeight -= dy;\n            this.$container.css('height', newHeight + \"px\");\n            this.$otherDiv.css('height', newOtherHeight + \"px\");\n            this.callback(newHeight);\n        } else {\n            let width = Number.parseInt(this.$container.css('width').replace('px', ''));\n            let otherWidth = Number.parseInt(this.$otherDiv.css('width').replace('px', ''));\n            let newWidth = this.firstLast ? width -= dx : width += dx;\n            let newOtherWidth = this.firstLast ? otherWidth += dx : otherWidth -= dx;\n            this.$container.css('width', newWidth + \"px\");\n            this.$otherDiv.css('width', newOtherWidth + \"px\");\n            this.callback(newWidth);\n        }\n        this.$container.css('flex', \"0 1 auto\");\n\n    }\n\n\n}","import { Module, ModuleStore } from \"../compiler/parser/Module.js\";\nimport { MainEmbedded } from \"./MainEmbedded.js\";\nimport { openContextMenu, makeEditable } from \"../tools/HtmlTools.js\";\nimport { JOScript, ScriptType } from \"./EmbeddedStarter.js\";\n\ntype FileData = {\n    type: ScriptType,\n    module?: Module,\n    hint?: string,\n    $fileDiv: JQuery<HTMLElement>\n}\n\nexport class EmbeddedFileExplorer {\n\n    currentFile: FileData;\n    files: FileData[] = [];\n\n    constructor(private moduleStore: ModuleStore, private $fileListDiv: JQuery<HTMLElement>, private main: MainEmbedded) {\n\n        let that = this;\n\n        for (let module of moduleStore.getModules(false)) {\n\n            this.addModule(module);\n\n        }\n\n        let $filesDiv = $fileListDiv.parent();\n        let $addButton = jQuery('<div class=\"joe_addFileButton jo_button img_add-dark jo_active\" title=\"Datei hinzufügen\"></div>');\n        $filesDiv.append($addButton);\n\n        $addButton.on(\"click\", () => {\n\n            let module = this.main.addModule({ text: \"\", title: \"Neue Datei.java\", type: \"sql\" });\n            let fileData = this.addModule(module);\n\n            this.renameElement(fileData, () => {\n                // if there's no file yet and then one is added and subsequently renamed: select it!\n                if (that.currentFile != fileData) {\n                    that.selectFile(fileData);\n                }\n            });\n        });\n\n\n    }\n\n    removeAllFiles() {\n        this.files.forEach(f => this.removeFile(f));\n    }\n\n\n    addHint(script: JOScript): void {\n        let that = this;\n        let $fileDiv = jQuery('<div class=\"jo_file jo_hint\" ><div class=\"jo_fileimage\"></div><div class=\"jo_filename\" style=\"line-height: 22px\">' +\n            script.title + '</div><div class=\"jo_additionalButtons\"></div></div></div>');\n        this.$fileListDiv.append($fileDiv);\n\n        let fileData: FileData = {\n            module: null,\n            $fileDiv: $fileDiv,\n            type: \"hint\",\n            hint: script.text\n        };\n\n        this.files.push(fileData);\n\n        $fileDiv.on(\"click\", (event) => {\n            that.selectFile(fileData);\n        });\n\n    }\n\n\n    addModule(module: Module): FileData {\n        let that = this;\n        let $fileDiv = jQuery(`<div class=\"jo_file jo_java\" >\n        <div class=\"jo_fileimage\"></div>\n        <div class=\"jo_filename\" style=\"line-height: 22px\">${module.file.name}</div>\n        <div class=\"jo_additionalButtonStart\"></div>\n        <div class=\"jo_delete img_delete jo_button jo_active\" title=\"Datei löschen\"></div></div></div>`);\n        this.$fileListDiv.append($fileDiv);\n\n        let fileData: FileData = {\n            module: module,\n            $fileDiv: $fileDiv,\n            type: \"sql\"\n        };\n\n        this.files.push(fileData);\n\n        module.file.panelElement = {\n            name: module.file.name,\n            $htmlFirstLine: $fileDiv,\n            isFolder: false,\n            path: []\n        }\n\n        $fileDiv.find('.jo_delete').on(\"mousedown\", (e: JQuery.MouseDownEvent) => {\n            that.onDelete(fileData, e);\n        })\n\n        $fileDiv.find('.jo_delete').on(\"click\", (e) => { e.preventDefault(); e.stopPropagation() });\n\n        $fileDiv.on(\"click\", (event) => {\n            that.selectFile(fileData);\n        });\n\n        $fileDiv[0].addEventListener(\"contextmenu\", function (event) {\n            event.preventDefault();\n            openContextMenu([{\n                caption: \"Umbenennen\",\n                callback: () => {\n                    that.renameElement(fileData, () => { });\n                }\n            }], event.pageX, event.pageY);\n        }, false);\n\n        return fileData;\n\n    }\n\n    onDelete(fileData: FileData, ev: JQuery.MouseDownEvent) {\n        ev.preventDefault();\n        ev.stopPropagation();\n        let that = this;\n        openContextMenu([{\n            caption: \"Abbrechen\",\n            callback: () => {\n                // nothing to do.\n            }\n        }, {\n            caption: \"Ich bin mir sicher: löschen!\",\n            color: \"#ff6060\",\n            callback: () => {\n                that.removeFile(fileData);\n            }\n        }], ev.pageX + 2, ev.pageY + 2);\n\n    }\n\n    removeFile(fileData: FileData) {\n        fileData.$fileDiv.remove();\n        this.main.removeModule(fileData.module);\n        this.files = this.files.filter((fd) => fd != fileData);\n        if (this.currentFile == fileData) {\n            if (this.files.length > 0) {\n                this.selectFile(this.files[0]);\n            } else {\n                this.main.getMonacoEditor().setValue(\"Keine Datei vorhanden.\");\n                this.main.getMonacoEditor().updateOptions({ readOnly: true });\n            }\n        }\n\n        this.files.forEach((file) => {\n            if(file.module != null){                // Hints have module == null\n                file.module.file.saved = false;\n            }\n        });\n    }\n\n    removeModule(module: Module) {\n        for (let fileData of this.files) {\n            if (fileData.module == module) {\n                this.removeFile(fileData);\n            }\n        }\n    }\n\n    renameElement(fileData: FileData, callback: () => void) {\n        let that = this;\n        let $div = fileData.$fileDiv.find('.jo_filename');\n        let pointPos = fileData.module.file.name.indexOf('.');\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\n        makeEditable($div, $div, (newText: string) => {\n            fileData.module.file.name = newText;\n            $div.html(newText);\n            if (callback != null) callback();\n        }, selection);\n\n    }\n\n\n    setFirstFileActive() {\n        if (this.files.length > 0) {\n            this.selectFile(this.files[0]);\n        }\n    }\n\n    selectFile(fileData: FileData) {\n        if (fileData == null) return;\n        switch (fileData.type) {\n            case \"sql\":\n                this.main.$hintDiv.hide();\n                this.main.$monacoDiv.show();\n                this.main.setModuleActive(fileData.module);\n                this.main.getMonacoEditor().focus();\n                break;\n            case \"hint\":\n                this.main.$monacoDiv.hide();\n                this.main.$hintDiv.show();\n\n                let syntaxMap: { [code: string]: string } = {};\n                let code: string[] = [];\n\n                //@ts-ignore\n                let md1 = window.markdownit({\n                    highlight: function (str, lang) {\n                        code.push(str);\n                        return \"\";\n                    }\n                });\n\n                md1.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\n                    var token = tokens[idx];\n                    code.push(token.content);\n                    // pass token to default renderer.\n                    return \"\"; //md1.renderer.rules.code_block(tokens, idx, options, env, self);\n                };\n\n                md1.render(fileData.hint);\n\n                this.colorize(code, syntaxMap, () => {\n                    //@ts-ignore\n                    let md2 = window.markdownit({\n                        highlight: function (str, lang) {\n                            return syntaxMap[str];\n                        }\n                    });\n\n                    md2.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\n                        var token = tokens[idx];\n                        // pass token to default renderer.\n                        return syntaxMap[token.content].replace(\"<br/>\", \"\");\n                    };\n\n\n                    let html = md2.render(fileData.hint);\n                    this.main.$hintDiv.html(html);\n                });\n                this.$fileListDiv.find('.jo_file').removeClass('jo_active');\n                fileData.$fileDiv.addClass('jo_active');\n                break;\n        }\n    }\n\n    colorize(code: string[], codeMap: { [code: string]: string }, callback: () => void) {\n        let that = this;\n        if (code.length > 0) {\n            let uncoloredtext = code.pop();\n            monaco.editor.colorize(uncoloredtext, 'myJava', { tabSize: 3 }).then((text) => {\n                codeMap[uncoloredtext] = text;\n                that.colorize(code, codeMap, callback);\n            }\n            );\n        } else {\n            callback();\n        }\n\n    }\n\n\n    markFile(module: Module) {\n        this.$fileListDiv.find('.jo_file').removeClass('jo_active');\n\n        this.currentFile = this.files.find((fileData) => fileData.module == module);\n\n        if (this.currentFile != null) this.currentFile.$fileDiv.addClass('jo_active');\n\n    }\n\n\n\n}","export class EmbeddedIndexedDB {\n\n    private db: IDBDatabase;\n\n    constructor(private databaseIdentifier: string){\n\n    }\n\n    public open(successCallback: () => void) {\n\n        if (window.indexedDB) {\n\n            let request: IDBOpenDBRequest = window.indexedDB.open(this.databaseIdentifier, 1);\n\n            let that = this;\n\n            request.onerror = function (this: IDBRequest<IDBDatabase>, ev: Event) {\n                console.log(\"Couldn't open IndexedDB: \" + ev.type);\n            };\n\n            request.onsuccess = function (this: IDBRequest<IDBDatabase>, ev: Event) {\n                that.db = request.result;\n                that.db.onerror = function(event) {\n                    // Allgemeine Fehlerbehandlung, die für alle Anfragen an die Datenbank gilt. \n                    // @ts-ignore\n                    console.log(\"Datenbankfehler: \" + event.target.error.message);\n                  };\n                  successCallback();\n            };\n\n            request.onupgradeneeded = function(ev: Event){\n                // @ts-ignore\n                that.db = ev.target.result;\n                let objectStoreScripts = that.db.createObjectStore(\"scripts\", { keyPath: \"scriptId\", autoIncrement: false});\n                objectStoreScripts.transaction.oncomplete = function(event) {}\n\n                let objectStoreDatabases = that.db.createObjectStore(\"databases\", { keyPath: \"databaseId\", autoIncrement: false});\n                objectStoreScripts.transaction.oncomplete = function(event) {}\n\n            }\n\n        } else {\n            console.log(\"IndexedDB not available.\");\n        }\n\n    }\n\n\n    public writeScript(scriptId: string, script: string){\n\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\n\n        scriptObjectStore.put({\n            scriptId: scriptId,\n            script: script\n        });\n\n    }\n\n    public removeScript(scriptId: string){\n\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\n\n        scriptObjectStore.delete(scriptId);\n\n    }\n\n\n    public getScript(scriptId: string, callback: (script: string) => void){\n\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\n\n        let request = scriptObjectStore.get(scriptId);\n\n        request.onerror = (event) => {\n            callback(null);\n        }\n\n        request.onsuccess = (event) => {\n            if(request.result == null){\n                callback(null);\n            } else {\n                callback(request.result.script);\n            }\n        }\n\n    }\n\n    public writeDatabase(databaseID: string, database: string){\n\n        let databaseObjectStore = this.db.transaction(\"databases\", \"readwrite\").objectStore(\"databases\");\n\n        databaseObjectStore.put({\n            databaseId: databaseID,\n            database: database\n        });\n\n    }\n\n    public removeDatabase(databaseId: string){\n\n        let databaseObjectStore = this.db.transaction(\"databases\", \"readwrite\").objectStore(\"databases\");\n\n        databaseObjectStore.delete(databaseId);\n\n    }\n\n\n    public getDatabase(databaseId: string, callback: (database: string) => void){\n\n        let databaseObjectStore = this.db.transaction(\"databases\", \"readwrite\").objectStore(\"databases\");\n\n        let request = databaseObjectStore.get(databaseId);\n\n        request.onerror = (event) => {\n            callback(null);\n        }\n\n        request.onsuccess = (event) => {\n            if(request.result == null){\n                callback(null);\n            } else {\n                callback(request.result.database);\n            }\n        }\n\n    }\n\n\n}","import { SQLStatement } from \"../compiler/parser/Parser.js\";\r\nimport { WriteQueryListener } from \"../main/gui/ResultsetPresenter.js\";\r\nimport { DatabaseTool } from \"../tools/DatabaseTools.js\";\r\nimport { EmbeddedIndexedDB } from \"./EmbeddedIndexedDB.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\n\r\n\r\nexport class WriteQueryManager implements WriteQueryListener {\r\n\r\n    indexedDB: EmbeddedIndexedDB;\r\n    databaseTool: DatabaseTool;\r\n\r\n    statementsToExecute: string[] = [];\r\n\r\n    writtenStatements: string[] = [];\r\n\r\n    statementsToWrite: string[] = [];\r\n\r\n\r\n    constructor(private main: MainEmbedded, private databaseIdentifier: string) {\r\n\r\n    }\r\n\r\n    indexedDBReady(indexedDB: EmbeddedIndexedDB) {\r\n        this.indexedDB = indexedDB;\r\n        this.indexedDB.getDatabase(this.databaseIdentifier, (db: string) => {\r\n            if (db != null) {\r\n                this.writtenStatements = JSON.parse(db);\r\n                this.statementsToExecute = this.writtenStatements.slice();\r\n\r\n                this.main.historyViewer.clear();\r\n                this.main.historyViewer.appendStatements(this.statementsToExecute);\r\n\r\n                this.executeStatements();\r\n                this.writeStatementsIfNecessary();\r\n            }\r\n        })\r\n    }\r\n\r\n    reset() {\r\n        this.statementsToWrite = [];\r\n        this.writtenStatements = [];\r\n        this.statementsToExecute = [];\r\n        this.main.historyViewer.clear();\r\n    }\r\n\r\n    writeStatementsIfNecessary() {\r\n        if (this.indexedDB != null && this.statementsToWrite.length > 0) {\r\n            this.forceWriteStatements();\r\n        }\r\n    }\r\n\r\n    forceWriteStatements() {\r\n        this.writtenStatements = this.writtenStatements.concat(this.statementsToWrite);\r\n        this.statementsToWrite = [];\r\n        this.indexedDB.writeDatabase(this.databaseIdentifier, JSON.stringify(this.writtenStatements));\r\n    }\r\n\r\n    atLeastOneExecuted: boolean = false;\r\n    count: number;\r\n    executeStatements() {\r\n        if (this.databaseTool != null && this.statementsToExecute.length > 0) {\r\n            if (!this.atLeastOneExecuted) {\r\n                this.main.$databaseResetButton.fadeIn(200);\r\n                this.count = this.statementsToExecute.length;\r\n                this.main.waitOverlay.show(\"Schreibe lokale Datenbankänderungen ...\");\r\n            }\r\n            this.main.waitOverlay.setProgress(Math.round(100 * (1 - this.statementsToExecute.length / this.count)) + \" %\")\r\n            let statement = this.statementsToExecute.shift();\r\n            this.atLeastOneExecuted = true;\r\n            this.databaseTool.executeQuery(statement, () => { this.executeStatements() }, () => { this.executeStatements() });\r\n        } else {\r\n            if (this.atLeastOneExecuted) {\r\n                this.main.databaseExplorer.refresh();\r\n                this.atLeastOneExecuted = false;\r\n                this.main.waitOverlay.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    notify(statements: SQLStatement[]): void {\r\n        this.main.$databaseResetButton.fadeIn(200);\r\n        let statementsSql = statements.map(stmt => stmt.sqlCleaned == null ? stmt.sql : stmt.sqlCleaned);\r\n        this.statementsToWrite = this.statementsToWrite.concat(statementsSql);\r\n        this.main.historyViewer.appendStatements(statementsSql);\r\n        this.writeStatementsIfNecessary();\r\n    }\r\n\r\n    databaseReady(dbTool: DatabaseTool) {\r\n        this.databaseTool = dbTool;\r\n        this.executeStatements();\r\n    }\r\n\r\n    rollback() {\r\n        this.writeStatementsIfNecessary();\r\n        this.writtenStatements.pop();\r\n        this.forceWriteStatements();\r\n    }\r\n\r\n\r\n\r\n}","import { MainBase } from \"../main/MainBase.js\";\r\nimport { DatabaseTool } from \"./DatabaseTools.js\";\r\nimport { MySqlImporter } from \"./MySqlImporter.js\";\r\n\r\nexport type LoadableDatabase = {\r\n    binDump?: Uint8Array,\r\n    statements?: string[]\r\n}\r\n\r\nexport class DatabaseFetcher {\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    public async load(url: string): Promise<LoadableDatabase> {\r\n        let urlWithoutProtocol = url.replace(\"https://\", \"\")\r\n            .replace(\"http://\", \"\").toLocaleLowerCase();\r\n\r\n        let urlLowerCase = urlWithoutProtocol.toLocaleLowerCase();\r\n\r\n        let templateDump: Uint8Array = await this.fetchTemplateFromCache(urlWithoutProtocol);\r\n        if (templateDump != null) {\r\n            if (DatabaseTool.getDumpType(templateDump) == \"binaryCompressed\") {\r\n                // @ts-ignore\r\n                templateDump = pako.inflate(templateDump);\r\n            }\r\n            return { binDump: templateDump }\r\n        }\r\n\r\n        let db: LoadableDatabase;\r\n        if (urlLowerCase.endsWith(\".sqlite\")) {\r\n            db = await this.loadSqLiteDump(url, urlWithoutProtocol);\r\n        } else if (urlLowerCase.endsWith(\".zip\") || urlLowerCase.endsWith(\".sql\")) {\r\n            db = await this.loadMySql(url, urlWithoutProtocol);\r\n        }\r\n\r\n        this.saveDatabaseToCache(urlWithoutProtocol, db.binDump);\r\n\r\n        return db;\r\n\r\n    }\r\n\r\n    loadMySql(url: string, urlWithoutProtocol: string): LoadableDatabase | PromiseLike<LoadableDatabase> {\r\n        let mySqlImporter = new MySqlImporter(this.main);\r\n        return mySqlImporter.loadFromUrl(url);\r\n    }\r\n\r\n    async loadSqLiteDump(url: string, urlWithoutProtocol: string): Promise<LoadableDatabase> {\r\n\r\n        return new Promise((resolve, reject) => {\r\n            jQuery.ajax({\r\n                type: 'GET',\r\n                async: true,\r\n                url: url,\r\n                xhrFields: { responseType: 'arraybuffer' },\r\n                success: function (response: any) {\r\n                    let db = new Uint8Array(response);\r\n                    // @ts-ignore\r\n                    if (DatabaseTool.getDumpType(db) == \"binaryCompressed\") db = pako.inflate(db);\r\n                    resolve({ binDump: db });\r\n                },\r\n                error: function (jqXHR, message) {\r\n                    reject(message);\r\n                }\r\n            });\r\n\r\n        })\r\n\r\n    }\r\n\r\n    cutSqlToStatements(sql: string): string[] {\r\n        sql = sql.replace(/\\r\\n/g, \"\\n\");\r\n\r\n        let statements: string[] = [];\r\n        if (sql.indexOf(\"~@~\") >= 0) {\r\n            statements = sql.split(\"~@~\");\r\n        } else {\r\n            statements = sql.split(\";\\n\");\r\n        }\r\n        return statements;\r\n    }\r\n\r\n\r\n    async fetchTemplateFromCache(databaseIdentifier: string): Promise<Uint8Array> {\r\n        if (databaseIdentifier == null) { return null; }\r\n\r\n        if (!this.cacheAvailable()) return (null);\r\n\r\n        let cache = await caches.open('my-cache');\r\n\r\n        let value = await cache.match(databaseIdentifier);\r\n\r\n        if(value == null) return null;\r\n\r\n        let buffer = await value.arrayBuffer();\r\n\r\n        return new Uint8Array(buffer);\r\n\r\n    }\r\n\r\n    async saveDatabaseToCache(databaseIdentifier: string, templateDump: Uint8Array | string) {\r\n        if (!this.cacheAvailable()) return;\r\n\r\n        let cache = await caches.open('my-cache');\r\n\r\n        cache.put(databaseIdentifier, new Response(templateDump));\r\n    }\r\n\r\n    cacheAvailable(): boolean {\r\n        return 'caches' in self;\r\n    }\r\n\r\n}","import { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\nimport { Module, File } from \"../compiler/parser/Module.js\";\nimport { ActionManager } from \"../main/gui/ActionManager.js\";\nimport { BottomDiv } from \"../main/gui/BottomDiv.js\";\nimport { Editor } from \"../main/gui/Editor.js\";\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\nimport { RightDiv } from \"../main/gui/RightDiv.js\";\nimport { MainBase } from \"../main/MainBase.js\";\nimport { Workspace } from \"../workspace/Workspace.js\";\nimport { JOScript } from \"./EmbeddedStarter.js\";\nimport { makeDiv, makeTabs, openContextMenu } from \"../tools/HtmlTools.js\";\nimport { EmbeddedSlider } from \"./EmbeddedSlider.js\";\nimport { EmbeddedFileExplorer } from \"./EmbeddedFileExplorer.js\";\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\nimport { EmbeddedIndexedDB } from \"./EmbeddedIndexedDB.js\";\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\nimport { DatabaseTool } from \"../tools/DatabaseTools.js\";\nimport { DatabaseExplorer } from \"../main/gui/DatabaseExplorer.js\";\nimport { ResultsetPresenter } from \"../main/gui/ResultsetPresenter.js\";\nimport { WaitOverlay } from \"../main/gui/WaitOverlay.js\";\nimport { WriteQueryManager } from \"./WriteQueryManager.js\";\nimport { DatabaseFetcher } from \"../tools/DatabaseLoader.js\";\nimport { DatabaseImportExport } from \"../tools/DatabaseImportExport.js\";\nimport { HistoryViewer } from \"../main/gui/HistoryViewer.js\";\nimport { WDatabase } from \"../workspace/WDatabase.js\";\n\ntype JavaOnlineConfig = {\n    withFileList?: boolean,\n    withOutput?: boolean,\n    withErrorList?: boolean,\n    withBottomPanel?: boolean,\n    id?: string,\n    databaseURL?: string\n}\n\nexport class MainEmbedded implements MainBase {\n    isEmbedded(): boolean { return true; }\n\n    getCompiler(): Compiler {\n        return this.compiler;\n    }\n    getCurrentWorkspace(): Workspace {\n        return this.currentWorkspace;\n    }\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\n        return this.editor.editor;\n    }\n\n    getRightDiv(): RightDiv {\n        return this.rightDiv;\n    }\n\n    getBottomDiv(): BottomDiv {\n        return this.bottomDiv;\n    }\n\n    getActionManager(): ActionManager {\n        return this.actionManager;\n    }\n\n    getCurrentlyEditedModule(): Module {\n        if (this.config.withFileList) {\n            return this.fileExplorer.currentFile?.module;\n        } else {\n            return this.currentWorkspace.moduleStore.getFirstModule();\n        }\n    }\n\n    getDatabaseTool(): DatabaseTool {\n        return this.databaseTool;\n    }\n\n    getDatabaseExplorer(): DatabaseExplorer {\n        return this.databaseExplorer;\n    }\n\n    getResultsetPresenter(): ResultsetPresenter {\n        return this.resultsetPresenter;\n    }\n\n    getWaitOverlay(): WaitOverlay {\n        return this.waitOverlay;\n    }\n\n    getHistoryViewer(): HistoryViewer {\n        return this.historyViewer;\n    }\n\n    config: JavaOnlineConfig;\n\n    editor: Editor;\n    programPointerDecoration: string[] = [];\n    programPointerModule: Module;\n\n    currentWorkspace: Workspace;\n    actionManager: ActionManager;\n\n    compiler: Compiler;\n\n    $dbTreeDiv: JQuery<HTMLElement>;\n\n    $debuggerDiv: JQuery<HTMLElement>;\n\n    bottomDiv: BottomDiv;\n    $filesListDiv: JQuery<HTMLElement>;\n\n    $hintDiv: JQuery<HTMLElement>;\n    $monacoDiv: JQuery<HTMLElement>;\n    $codeResetButton: JQuery<HTMLElement>;\n    $databaseResetButton: JQuery<HTMLElement>;\n\n    programIsExecutable = false;\n    version: number = 0;\n\n    timerHandle: any;\n\n    rightDiv: RightDiv;\n    $rightDivInner: JQuery<HTMLElement>;\n\n    fileExplorer: EmbeddedFileExplorer;\n\n    debounceDiagramDrawing: any;\n\n    indexedDB: EmbeddedIndexedDB;\n\n    compileRunsAfterCodeReset: number = 0;\n\n    semicolonAngel: SemicolonAngel;\n\n    databaseTool: DatabaseTool;\n\n    databaseExplorer: DatabaseExplorer;\n\n    waitOverlay: WaitOverlay;\n\n    resultsetPresenter: ResultsetPresenter;\n\n    writeQueryManager: WriteQueryManager;\n\n    historyViewer: HistoryViewer;\n\n    initialTemplateDump: Uint8Array;\n    initialStatements: string[];\n\n    constructor($div: JQuery<HTMLElement>, private scriptList: JOScript[]) {\n\n        this.readConfig($div);\n\n        this.writeQueryManager = new WriteQueryManager(this, this.config.databaseURL);\n\n        this.initGUI($div);\n\n\n        this.databaseExplorer = new DatabaseExplorer(this, this.$dbTreeDiv);\n        this.databaseTool = new DatabaseTool(this);\n        if (this.config.databaseURL != null) {\n            new DatabaseFetcher(this).load(this.config.databaseURL).then((loadableDb) => {\n                this.initialTemplateDump = loadableDb.binDump;\n                this.initialStatements = loadableDb.statements == null ? [] : loadableDb.statements;\n                this.resetDatabase(() => {\n                    this.initScripts();\n\n                    this.indexedDB = new EmbeddedIndexedDB(\"SQL-IDE\");\n                    this.indexedDB.open(() => {\n\n                        if (this.config.id != null) {\n                            this.writeQueryManager.indexedDBReady(this.indexedDB);\n                            this.readScripts();\n                        }\n\n                    });\n\n                });\n            }).catch((error: string)=>{\n                alert('Fehler beim Landen der Datenbank: ' + error)\n            })\n        } else {\n            alert('Es wurde kein Parameter databaseURL angegeben.');\n        }\n\n\n        this.semicolonAngel = new SemicolonAngel(this);\n\n    }\n\n    resetDatabase(callback: () => void) {\n        this.databaseTool.initializeWorker(this.initialTemplateDump, this.initialStatements, () => { }, () => {\n            this.writeQueryManager.databaseReady(this.databaseTool);\n            this.databaseExplorer.refreshAfterRetrievingDBStructure();\n            callback();\n        })\n    }\n\n    initScripts() {\n\n        this.fileExplorer?.removeAllFiles();\n\n        this.initWorkspace(this.scriptList);\n\n        if (this.config.withFileList) {\n            this.fileExplorer = new EmbeddedFileExplorer(this.currentWorkspace.moduleStore, this.$filesListDiv, this);\n            this.fileExplorer.setFirstFileActive();\n            this.scriptList.filter((script) => script.type == \"hint\").forEach((script) => this.fileExplorer.addHint(script));\n        } else {\n            this.setModuleActive(this.currentWorkspace.moduleStore.getFirstModule());\n        }\n\n    }\n\n\n    readConfig($div: JQuery<HTMLElement>) {\n        let configJson: string | object = $div.data(\"sql-online\");\n        if (configJson != null && typeof configJson == \"string\") {\n            this.config = JSON.parse(configJson.split(\"'\").join('\"'));\n        } else {\n            this.config = {}\n        }\n\n        if (this.config.withFileList == null) this.config.withFileList = false;\n        if (this.config.withOutput == null) this.config.withOutput = true;\n        if (this.config.withErrorList == null) this.config.withErrorList = true;\n        if (this.config.withBottomPanel == null) this.config.withBottomPanel = true;\n\n        if (!(this.config.withOutput || this.config.withFileList || this.config.withErrorList)) {\n            this.config.withBottomPanel = false;\n        }\n\n        if (!this.config.withBottomPanel) {\n            this.config.withFileList = false;\n            this.config.withOutput = false;\n            this.config.withErrorList = false;\n        }\n\n        if(this.config.databaseURL != null){\n            ['http:', 'https:'].forEach(protocol => {\n                if(this.config.databaseURL.startsWith(protocol) && !this.config.databaseURL.startsWith(protocol + \"://\")){\n                    this.config.databaseURL = this.config.databaseURL.replace(protocol, protocol + \"//\");\n                }\n            })\n        }\n\n    }\n\n    setModuleActive(module: Module) {\n\n        if (this.config.withFileList && this.fileExplorer.currentFile != null) {\n            this.fileExplorer.currentFile.module.editorState = this.getMonacoEditor().saveViewState();\n        }\n\n        if (this.config.withFileList) {\n            this.fileExplorer.markFile(module);\n        }\n\n        /**\n         * WICHTIG: Die Reihenfolge der beiden Operationen ist extrem wichtig.\n         * Falls das Model im readonly-Zustand gesetzt wird, funktioniert <Strg + .> \n         * nicht und die Lightbulbs werden nicht angezeigt, selbst dann, wenn\n         * später readonly = false gesetzt wird.\n         */\n        this.getMonacoEditor().updateOptions({\n            readOnly: false,\n            lineNumbersMinChars: 4\n        });\n        this.editor.editor.setModel(module.model);\n\n\n        if (module.editorState != null) {\n            this.getMonacoEditor().restoreViewState(module.editorState);\n        }\n\n    }\n\n\n\n    readScripts() {\n\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\n\n        let that = this;\n\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\n            if (scriptListJSon == null) {\n                setInterval(() => {\n                    that.saveScripts();\n                }, 1000);\n            } else {\n\n                let scriptList: string[] = JSON.parse(scriptListJSon);\n                let countDown = scriptList.length;\n\n                for (let module of modules) {\n                    that.fileExplorer?.removeModule(module);\n                    that.removeModule(module);\n                }\n\n                for (let name of scriptList) {\n\n                    let scriptId = this.config.id + name;\n                    this.indexedDB.getScript(scriptId, (script) => {\n                        if (script != null) {\n\n                            let module = that.addModule({\n                                title: name,\n                                text: script,\n                                type: \"sql\"\n                            });\n\n                            that.fileExplorer?.addModule(module);\n                            that.$codeResetButton.fadeIn(1000);\n\n                            // console.log(\"Retrieving script \" + scriptId);\n                        }\n                        countDown--;\n                        if (countDown == 0) {\n                            setInterval(() => {\n                                that.saveScripts();\n                            }, 1000);\n                            that.fileExplorer?.setFirstFileActive();\n                            if (that.fileExplorer == null) {\n                                let modules = that.currentWorkspace.moduleStore.getModules(false);\n                                if (modules.length > 0) that.setModuleActive(modules[0]);\n                            }\n                        }\n                    })\n\n                }\n\n            }\n\n\n        });\n\n\n    }\n\n    saveScripts() {\n\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\n\n        let scriptList: string[] = [];\n        let oneNotSaved: boolean = false;\n\n        modules.forEach(m => oneNotSaved = oneNotSaved || !m.file.saved);\n\n        if (oneNotSaved) {\n\n            for (let module of modules) {\n                scriptList.push(module.file.name);\n                let scriptId = this.config.id + module.file.name;\n                this.indexedDB.writeScript(scriptId, module.getProgramTextFromMonacoModel());\n                module.file.saved = true;\n                // console.log(\"Saving script \" + scriptId);\n            }\n\n            this.indexedDB.writeScript(this.config.id, JSON.stringify(scriptList));\n        }\n\n    }\n\n    deleteScriptsInDB() {\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\n            if (scriptListJSon == null) {\n                return;\n            } else {\n\n                let scriptList: string[] = JSON.parse(scriptListJSon);\n\n                for (let name of scriptList) {\n\n                    let scriptId = this.config.id + name;\n                    this.indexedDB.removeScript(scriptId);\n                }\n\n                this.indexedDB.removeScript(this.config.id);\n\n            }\n\n\n        });\n\n    }\n\n    initWorkspace(scriptList: JOScript[]) {\n        this.currentWorkspace = new Workspace(\"Embedded-Workspace\", this, 0);\n\n        let i = 0;\n        for (let script of scriptList) {\n            if (script.type == \"sql\") {\n                this.addModule(script);\n            }\n\n        }\n\n    }\n\n    addModule(script: JOScript): Module {\n        let module: Module = Module.restoreFromData({\n            id: this.currentWorkspace.moduleStore.getModules(true).length,\n            name: script.title,\n            text: script.text,\n            text_before_revision: null,\n            submitted_date: null,\n            student_edited_after_revision: false,\n            version: 1,\n            workspace_id: 0,\n            forceUpdate: false,\n            file_type: 11\n        }, this);\n\n        this.currentWorkspace.moduleStore.putModule(module);\n\n        let that = this;\n\n        module.model.onDidChangeContent(() => {\n            that.considerShowingCodeResetButton();\n        });\n\n        return module;\n    }\n\n    removeModule(module: Module) {\n        this.currentWorkspace.moduleStore.removeModule(module);\n    }\n\n\n    initGUI($div: JQuery<HTMLElement>) {\n\n        // let $leftDiv = jQuery('<div class=\"joe_leftDiv\"></div>');\n\n        $div.css({\n            \"background-image\": \"none\",\n            \"background-size\": \"100%\"\n        })\n\n        let $centerDiv = jQuery('<div class=\"joe_centerDiv\"></div>');\n\n        // let $topDiv = jQuery('<div class=\"joe_topDiv\"></div>');\n        // $div.append($topDiv);\n        $div.append($centerDiv);\n\n        let $waitDiv = this.makeWaitDiv();\n        $div.append($waitDiv);\n        this.waitOverlay = new WaitOverlay($waitDiv);\n\n        let $codeResetModalWindow = this.makeCodeResetModalWindow($div);\n        let $databaseResetModalWindow = this.makeDatabaseResetModalWindow($div);\n\n        let $rightDiv = this.makeRightDiv();\n\n        let $editorDiv = jQuery('<div class=\"joe_editorDiv\"></div>');\n        this.$monacoDiv = jQuery('<div class=\"joe_monacoDiv\"></div>');\n        this.$hintDiv = jQuery('<div class=\"joe_hintDiv jo_scrollable\"></div>');\n        this.$codeResetButton = jQuery('<div class=\"joe_codeResetButton jo_button jo_active\" title=\"Code auf Ausgangszustand zurücksetzen\">Code Reset</div>');\n        this.$databaseResetButton = jQuery('<div class=\"joe_databaseResetButton jo_button jo_active\" title=\"Datenbank auf Ausgangszustand zurücksetzen\">Datenbank Reset</div>');\n\n        $editorDiv.append(this.$monacoDiv, this.$hintDiv, this.$databaseResetButton);\n        this.$monacoDiv.append(this.$codeResetButton);\n\n        let $bracketErrorDiv = this.makeBracketErrorDiv();\n        $editorDiv.append($bracketErrorDiv);\n\n        // $topDiv.append($editorDiv);\n\n        this.$codeResetButton.hide();\n\n        this.$codeResetButton.on(\"click\", () => { $codeResetModalWindow.show(); })\n\n        this.$databaseResetButton.hide();\n\n        this.$databaseResetButton.on(\"click\", () => { $databaseResetModalWindow.show(); })\n\n        this.$hintDiv.hide();\n\n        let $controlsDiv = jQuery('<div class=\"joe_controlsDiv\"></div>');\n        let $bottomDivInner = jQuery('<div class=\"joe_bottomDivInner\"></div>');\n\n\n        let $bottomDiv = jQuery('<div class=\"joe_bottomDiv\"></div>');\n        this.makeBottomDiv($bottomDivInner, $controlsDiv);\n        $bottomDiv.append($bottomDivInner);\n        if (this.config.withFileList) {\n            let $filesDiv = this.makeFilesDiv();\n            $bottomDiv.prepend($filesDiv);\n            new EmbeddedSlider($filesDiv, false, false, () => { });\n        }\n        makeTabs($bottomDivInner);\n        $div.append($bottomDiv);\n\n        $div.addClass('joe_javaOnlineDiv');\n\n        this.editor = new Editor(this, false, true);\n        this.editor.initGUI(this.$monacoDiv);\n        this.$monacoDiv.find('.monaco-editor').css('z-index', '10');\n\n        if ($div.attr('tabindex') == null) $div.attr('tabindex', \"0\");\n        this.actionManager = new ActionManager($div, this);\n        this.actionManager.init();\n\n        this.bottomDiv = new BottomDiv(this, $bottomDivInner, $div);\n        this.bottomDiv.initGUI();\n\n        this.rightDiv = new RightDiv(this, this.$rightDivInner);\n        this.rightDiv.initGUI();\n\n        $centerDiv.append($editorDiv, $bottomDiv)\n        $div.append($rightDiv);\n\n        let $rightSideContainer = jQuery('<div class=\"jo_rightdiv-rightside-container\"></div>');\n        let $infoButton = jQuery('<div class=\"jo_button jo_active img_ellipsis-dark\" style=\"margin-right: 10px\"></div>');\n\n        $controlsDiv.append($infoButton);\n\n        this.$rightDivInner.append($rightSideContainer);\n\n        new EmbeddedSlider($rightDiv, true, false, () => {\n            this.editor.editor.layout();\n        }, $centerDiv);\n\n        new EmbeddedSlider($bottomDiv, true, true, () => { this.editor.editor.layout(); });\n\n        $infoButton.on('mouseup', (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            openContextMenu([{\n                caption: \"Über die Online-IDE ...\",\n                link: \"https://learnj.de\",\n                callback: () => {\n                    // nothing to do.\n                }\n            }], ev.pageX + 2, ev.pageY + 2);\n        });\n\n\n        let $buttonOpen = jQuery('<label type=\"file\" class=\"img_open-file jo_button jo_active\"' +\n            'style=\"margin-right: 8px;\" title=\"Datenbank-Dump aus Datei laden\"><input type=\"file\" style=\"display:none\"></label>');\n\n        let that = this;\n\n        let $openInputButton = $buttonOpen.find('input');\n\n        $openInputButton.on('change', (event) => {\n            //@ts-ignore\n            var files: FileList = event.originalEvent.target.files;\n            that.loadDatabaseFromFile(files[0]).then(() => {\n                $openInputButton.val(null)\n            })\n        })\n\n        let $buttonSave = jQuery('<div class=\"img_save-dark jo_button jo_active\"' +\n            'style=\"margin-right: 8px;\" title=\"Datenbank-Dump in Datei speichern\"></div>');\n\n\n        $buttonSave.on('click', () => { that.saveDatabaseToFile() });\n\n        $controlsDiv.append($buttonOpen, $buttonSave);\n\n        this.resultsetPresenter = new ResultsetPresenter(this, $bottomDivInner);\n        this.resultsetPresenter.addWriteQueryListener(this.writeQueryManager);\n\n\n        new ProgramControlButtons(this, $controlsDiv);\n\n        this.historyViewer = new HistoryViewer(this, $div.find('.jo_historyTab'));\n\n        setTimeout(() => {\n            this.editor.editor.layout();\n            this.compiler = new Compiler(this);\n            this.startTimer();\n        }, 200);\n\n\n    }\n\n    saveDatabaseToFile() {\n        new DatabaseImportExport().saveToFile(this.databaseTool);\n    }\n\n    async loadDatabaseFromFile(file: globalThis.File) {\n        let dbImportExport = new DatabaseImportExport();\n        let db = await dbImportExport.loadFromFile(file, this);\n        if (db == null) {\n            alert('Es ist ein Fehler beim Import aufgetreten.');\n            return;\n        } else {\n            this.databaseTool.initializeWorker(db.binDump, [], (errors) => {\n                if (errors.length > 0) {\n                    alert('Es sind Fehler beim Import aufgetreten. Ausführliche Fehlermeldungen sehen Sie in der Konsole (F12).')\n                    console.log(errors)\n                }\n            }, () => {\n                this.databaseExplorer.refreshAfterRetrievingDBStructure()\n            })\n        }\n        return;\n    }\n\n    makeWaitDiv(): JQuery<HTMLElement> {\n\n        //@ts-ignore\n        let url = (window.javaOnlineDir == null ? '' : window.javaOnlineDir) + 'assets/projectexplorer/svg-loaders/grid.svg';\n\n        let waitHtml = `\n        <div class=\"bitteWarten\">\n        <div style=\"margin-bottom: 30px\">\n            <div class=\"bitteWartenText\" style=\"font-size: 20px\"></div>\n        </div>\n        <div>\n            <img src=\"${url}\" alt=\"\" style=\"height: 40px\">\n        </div>\n        <div class=\"bitteWartenProgress\" style=\"font-size: 20px\"></div>\n        </div>\n        `;\n        return jQuery(waitHtml);\n    }\n\n    makeBracketErrorDiv(): JQuery<HTMLElement> {\n        return jQuery(`\n        <div class=\"jo_parenthesis_warning\" title=\"Klammerwarnung!\" style=\"bottom: 55px\">\n        <div class=\"jo_warning_light\"></div>\n        <div class=\"jo_pw_heading\">{ }</div>\n        <div title=\"Letzten Schritt rückgängig\" \n            class=\"jo_pw_undo img_undo jo_button jo_active\"></div>\n        </div>\n        `);\n    }\n\n    makeCodeResetModalWindow($parent: JQuery<HTMLElement>): JQuery<HTMLElement> {\n        let $window = jQuery(\n            `\n            <div class=\"joe_codeResetModal\">\n            <div style=\"flex: 1\"></div>\n            <div style=\"display: flex\">\n                <div style=\"flex: 1\"></div>\n                <div style=\"padding-left: 30px;\">\n                <div style=\"color: red; margin-bottom: 10px; font-weight: bold\">Warnung:</div>\n                <div>Soll der Code wirklich auf den Ausgangszustand zurückgesetzt werden?</div>\n                <div>Alle von Dir gemachten Änderungen werden damit verworfen.</div>\n                </div>\n                <div style=\"flex: 1\"></div>\n            </div>\n            <div class=\"joe_codeResetModalButtons\">\n            <div class=\"joe_codeResetModalCancel jo_button jo_active\">Abbrechen</div>\n            <div class=\"joe_codeResetModalOK jo_button jo_active\">OK</div>\n            </div>\n            <div style=\"flex: 2\"></div>\n            </div>\n        `\n        );\n\n        $window.hide();\n\n        $parent.append($window);\n\n        $parent.find(\".joe_codeResetModalCancel\").on(\"click\", () => {\n            $window.hide();\n        });\n\n        $parent.find(\".joe_codeResetModalOK\").on(\"click\", () => {\n\n            this.initScripts();\n            this.deleteScriptsInDB();\n\n            $window.hide();\n            this.$codeResetButton.hide();\n            this.compileRunsAfterCodeReset = 1;\n\n        });\n\n        return $window;\n    }\n\n    makeDatabaseResetModalWindow($parent: JQuery<HTMLElement>): JQuery<HTMLElement> {\n        let $window = jQuery(\n            `\n            <div class=\"joe_databaseResetModal\">\n            <div style=\"flex: 1\"></div>\n            <div style=\"display: flex\">\n                <div style=\"flex: 1\"></div>\n                <div style=\"padding-left: 30px;\">\n                <div style=\"color: red; margin-bottom: 10px; font-weight: bold\">Warnung:</div>\n                <div>Soll die Datenbank wirklich auf den Ausgangszustand zurückgesetzt werden?</div>\n                <div>Alle bisher ausgeführten Anweisungen (siehe Tab Write History) werden dann rückgängig gemacht.</div>\n                </div>\n                <div style=\"flex: 1\"></div>\n            </div>\n            <div class=\"joe_databaseResetModalButtons\">\n            <div class=\"joe_databaseResetModalCancel jo_button jo_active\">Abbrechen</div>\n            <div class=\"joe_databaseResetModalOK jo_button jo_active\">OK</div>\n            </div>\n            <div style=\"flex: 2\"></div>\n            </div>\n        `\n        );\n\n        $window.hide();\n\n        $parent.append($window);\n\n        $parent.find(\".joe_databaseResetModalCancel\").on(\"click\", () => {\n            $window.hide();\n        });\n\n        $parent.find(\".joe_databaseResetModalOK\").on(\"click\", () => {\n\n            $window.hide();\n            this.resetDatabase(() => {\n                this.writeQueryManager.reset();\n            });\n\n            this.$databaseResetButton.hide();\n            this.compileRunsAfterCodeReset = 1;\n\n        });\n\n        return $window;\n    }\n\n    makeFilesDiv(): JQuery<HTMLElement> {\n\n\n        let $filesDiv = jQuery('<div class=\"joe_bottomDivFiles jo_scrollable\"></div>');\n\n        let $filesHeader = jQuery('<div class=\"joe_filesHeader jo_tabheading jo_active\"  style=\"line-height: 24px\">Dateien</div>');\n\n        this.$filesListDiv = jQuery('<div class=\"joe_filesList jo_scrollable\"></div>');\n\n        $filesDiv.append($filesHeader, this.$filesListDiv);\n\n        return $filesDiv;\n    }\n\n    startTimer() {\n        if (this.timerHandle != null) {\n            clearInterval(this.timerHandle);\n        }\n\n        let that = this;\n        this.timerHandle = setInterval(() => {\n\n            that.compileIfDirty();\n\n        }, 500);\n\n\n    }\n\n    compileIfDirty() {\n\n        if (this.currentWorkspace == null) return;\n\n        if (this.currentWorkspace.moduleStore.isDirty() &&\n            this.compiler.compilerStatus != CompilerStatus.compiling && this.getDatabaseTool().databaseStructure != null) {\n            try {\n\n                this.compiler.compile(this.currentWorkspace.moduleStore);\n\n                let errors = this.\n                    bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\n\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\n\n                this.version++;\n\n            } catch (e) {\n                console.error(e);\n                this.compiler.compilerStatus = CompilerStatus.error;\n            }\n\n        }\n\n    }\n    considerShowingCodeResetButton() {\n        this.compileRunsAfterCodeReset++;\n        if (this.compileRunsAfterCodeReset == 3) {\n            this.$codeResetButton.fadeIn(1000);\n        }\n    }\n\n    makeBottomDiv($bottomDiv: JQuery<HTMLElement>, $buttonDiv: JQuery<HTMLElement>) {\n\n        let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\n        $tabheadings.css('position', 'relative');\n        let $thLeftSide = jQuery('<div class=\"joe_tabheading-right jo_noHeading joe_controlsTabheading\"></div>');\n\n        $thLeftSide.append($buttonDiv);\n        $tabheadings.append($thLeftSide);\n\n        if (this.config.withErrorList) {\n            let $thErrors = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_errorsTab\" style=\"line-height: 24px\">Fehler</div>');\n            $tabheadings.append($thErrors);\n        }\n\n        if (this.config.withOutput) {\n            let $thPCode = jQuery('<div class=\"jo_tabheading jo_resultTabheading\" data-target=\"jo_resultTab\" style=\"line-height: 24px\">Ausgabe</div>');\n            $tabheadings.append($thPCode);\n        }\n\n        // let $thRuntimeError = jQuery('<div class=\"jo_tabheading jo_runtimeerrorsTabheading\" data-target=\"jo_runtimeerrorsTab\" style=\"line-height: 24px\">DB-Fehler</div>');\n        // $tabheadings.append($thRuntimeError);\n\n        let $thHistory = jQuery('<div class=\"jo_tabheading jo_historyTabheading\" data-target=\"jo_historyTab\" style=\"line-height: 24px\">Write History</div>');\n        $tabheadings.append($thHistory);\n\n        let $thRightSide = jQuery('<div class=\"joe_tabheading-right jo_noHeading joe_paginationHeading\"><div class=\"jo_pagination\"></div></div>');\n        $tabheadings.append($thRightSide);\n\n        $bottomDiv.append($tabheadings);\n\n        let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\n\n        if (this.config.withErrorList) {\n            let $tabError = jQuery('<div class=\"jo_active jo_scrollable jo_errorsTab\"></div>');\n            $tabs.append($tabError);\n        }\n\n        if (this.config.withOutput) {\n            let $tabPCode = jQuery(`<div class=\"jo_editorFontSize jo_resultTab\">\n            <div class=\"jo_result-inner\">\n                <div class=\"jo_result-header\"></div>\n                <div class=\"jo_scrollable jo_result-body\"></div>\n            </div>\n            </div>\n    `);\n            $tabs.append($tabPCode);\n        }\n\n        // let $tabRtErrors = jQuery('<div class=\"jo_scrollable jo_runtimeerrorsTab\"></div>');\n        // $tabs.append($tabRtErrors);\n\n        let $tabHistory = jQuery('<div class=\"jo_scrollable jo_historyTab\"></div>');\n        $tabs.append($tabHistory);\n\n\n        $bottomDiv.append($tabs);\n\n    }\n\n    makeRightDiv(): JQuery<HTMLElement> {\n\n        let $rightDiv = jQuery('<div class=\"joe_rightDiv\"></div>');\n        this.$rightDivInner = jQuery('<div class=\"joe_rightDivInner\"></div>');\n        $rightDiv.append(this.$rightDivInner);\n\n\n        let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\n        $tabheadings.css('position', 'relative');\n        let $thRun = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_db_tree\" style=\"line-height: 24px\">DB (Baum)</div>');\n        // let $thVariables = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_db_list\" style=\"line-height: 24px\">DB (Liste)</div>');\n        $tabheadings.append($thRun, //$thVariables\n        );\n        this.$rightDivInner.append($tabheadings);\n\n        let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\n        // let $vd = jQuery('<div class=\"jo_tab jo_scrollable jo_editorFontSize jo_db_list\">DB-Liste</div>');\n\n        this.$dbTreeDiv = jQuery(`<div class=\"jo_tab jo_scrollable jo_editorFontSize jo_active jo_db_tree\">DB-Baum</div>`);\n\n        $tabs.append(this.$dbTreeDiv //, $vd\n        );\n        this.$rightDivInner.append($tabs);\n\n        makeTabs($rightDiv);\n\n        return $rightDiv;\n    }\n\n    getSemicolonAngel(): SemicolonAngel {\n        return this.semicolonAngel;\n    }\n\n}\n\n\n","import { Formatter } from \"../main/gui/Formatter.js\";\nimport { ThemeManager } from \"../main/gui/ThemeManager.js\";\nimport { MainEmbedded } from \"./MainEmbedded.js\";\n\n// declare const require: any;\n\nexport type ScriptType = \"sql\" | \"hint\";\n\nexport type JOScript = {\n    type: ScriptType;\n    title: string;\n    text: string;\n}\n\nexport class EmbeddedStarter {\n\n\n    startupComplete = 2;\n\n    themeManager: ThemeManager;\n\n    mainEmbeddedList: MainEmbedded[] = [];\n\n    initGUI() {\n\n        this.checkStartupComplete();\n\n        this.themeManager = new ThemeManager();\n    }\n\n    initEditor() {\n        new Formatter().init();\n        this.checkStartupComplete();\n    }\n\n    checkStartupComplete() {\n        this.startupComplete--;\n        if (this.startupComplete == 0) {\n            this.start();\n        }\n    }\n\n    start() {\n\n        this.initJavaOnlineDivs();\n\n    }\n\n    initJavaOnlineDivs() {\n        \n        jQuery('.sql-online').each((index: number, element: HTMLElement) => {\n            let $div = jQuery(element);\n            let scriptList: JOScript[] = [];\n            $div.find('script').each((index: number, element: HTMLElement) => {\n                let $script = jQuery(element);\n                let type: ScriptType = \"sql\";\n                if($script.data('type') != null) type = <ScriptType>($script.data('type'));\n                let script: JOScript = {\n                    type: type,\n                    title: $script.attr('title'),\n                    text: $script.text().trim()\n                };\n                scriptList.push(script);\n            });\n\n            this.initDiv($div, scriptList);\n\n        });\n\n    }\n\n    initDiv($div: JQuery<HTMLElement>, scriptList: JOScript[]) {\n\n        let me: MainEmbedded = new MainEmbedded($div, scriptList);\n\n    }\n\n}\n\njQuery(function () {\n\n    let embeddedStarter = new EmbeddedStarter();\n\n    let prefix = \"\";\n    let editorPath = \"lib/monaco-editor/dev/vs\"\n    //@ts-ignore\n    if(window.javaOnlineDir != null){\n        //@ts-ignore\n        prefix = window.javaOnlineDir;\n    }\n\n    //@ts-ignore\n    if(window.monacoEditorPath != null){\n        //@ts-ignore\n        editorPath = window.monacoEditorPath;\n    }\n\n    //@ts-ignore\n    window.require.config({ paths: { 'vs': prefix + editorPath } });\n    //@ts-ignore\n    window.require.config({\n        'vs/nls': {\n            availableLanguages: {\n                '*': 'de'\n            }\n        },\n        ignoreDuplicateModules: [\"vs/editor/editor.main\"]\n    });\n    //@ts-ignore\n    window.require(['vs/editor/editor.main'], function () {\n\n        embeddedStarter.initEditor();\n        embeddedStarter.initGUI();\n\n    });\n\n});\n"],"sourceRoot":""}