{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../../../../src/client/compiler/lexer/Token.ts","webpack:///../../../../src/client/compiler/lexer/Lexer.ts","webpack:///../../../../src/client/main/gui/Formatter.ts","webpack:///../../../../src/client/main/gui/ThemeManager.ts","webpack:///../../../../src/client/compiler/parser/SQLTypes.ts","webpack:///../../../../src/client/compiler/parser/Parser.ts","webpack:///../../../../src/client/compiler/parser/SQLTable.ts","webpack:///../../../../src/client/compiler/parser/SymbolTable.ts","webpack:///../../../../src/client/compiler/parser/SQLMethods.ts","webpack:///../../../src/client/tools/StringTools.ts","webpack:///../../../../src/client/compiler/parser/SymbolResolver.ts","webpack:///../../../src/client/compiler/Compiler.ts","webpack:///../../../../src/client/compiler/parser/Module.ts","webpack:///../../../../src/client/main/gui/ActionManager.ts","webpack:///../../../src/client/tools/HtmlTools.ts","webpack:///../../../src/client/communication/AjaxHelper.ts","webpack:///../../../src/client/workspace/WDatabase.ts","webpack:///../../../src/client/communication/CacheManager.ts","webpack:///../../../src/client/communication/NetworkManager.ts","webpack:///../../../src/client/tools/TemplateUploader.ts","webpack:///../../../../src/client/main/gui/DatabaseSettingsDialog.ts","webpack:///../../../src/client/workspace/Workspace.ts","webpack:///../../../../src/client/main/gui/MyCompletionItemProvider.ts","webpack:///../../../../src/client/main/gui/MySignatureHelpProvider.ts","webpack:///../../../../src/client/main/gui/MyHoverProvider.ts","webpack:///../../../../src/client/main/gui/MyCodeActionProvider.ts","webpack:///../../../../src/client/main/gui/MyReferenceProvider.ts","webpack:///../../../../src/client/main/gui/Helper.ts","webpack:///../../../../src/client/main/gui/Editor.ts","webpack:///../../../../src/client/main/gui/VscSql.ts","webpack:///../../../src/client/tools/DatabaseTools.ts","webpack:///../../../src/client/tools/DatabaseImportExport.ts","webpack:///../../../../src/client/main/gui/MainMenu.ts","webpack:///../../../../src/client/main/gui/Accordion.ts","webpack:///../../../../src/client/main/gui/DistributeToStudentsDialog.ts","webpack:///../../../../src/client/main/gui/NewDatabaseDialog.ts","webpack:///../../../../src/client/main/gui/ProjectExplorer.ts","webpack:///../../../../src/client/main/gui/RightDiv.ts","webpack:///../../../../src/client/main/gui/Sliders.ts","webpack:///../../../../src/client/main/gui/TeacherExplorer.ts","webpack:///../../../../src/client/main/gui/Dialog.ts","webpack:///../../../../src/client/main/gui/UserMenu.ts","webpack:///../../../src/client/main/Login.ts","webpack:///../../../../src/client/main/gui/ViewModeController.ts","webpack:///../../../../src/client/compiler/parser/SemicolonAngel.ts","webpack:///../../../../src/client/main/gui/DatabaseExplorer.ts","webpack:///../../../../src/client/main/gui/ProgramControlButtons.ts","webpack:///../../../../src/client/compiler/parser/StatementCleaner.ts","webpack:///../../../../src/client/main/gui/ResultsetPresenter.ts","webpack:///../../../src/client/communication/Notifier.ts","webpack:///../../../../src/client/main/gui/WaitOverlay.ts","webpack:///../../../../src/client/main/gui/HistoryViewer.ts","webpack:///../../../src/client/main/Main.ts","webpack:///../../../../src/client/main/gui/ErrorManager.ts","webpack:///../../../../src/client/main/gui/HomeworkManager.ts","webpack:///../../../../src/client/main/gui/BottomDiv.ts","webpack:///../../../src/client/embedded/EmbeddedSlider.ts","webpack:///../../../src/client/embedded/EmbeddedFileExplorer.ts","webpack:///../../../src/client/embedded/EmbeddedIndexedDB.ts","webpack:///../../../src/client/embedded/WriteQueryManager.ts","webpack:///../../../src/client/tools/DatabaseLoader.ts","webpack:///../../../src/client/embedded/MainEmbedded.ts","webpack:///../../../src/client/embedded/EmbeddedStarter.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","TokenType","LexerState","TokenTypeReadable","identifier","integerConstant","floatingPointConstant","booleanConstant","stringConstant","charConstant","true","false","keywordRename","keywordTo","keywordAlter","keywordAdd","keywordDelete","keywordSelect","keywordInsert","keywordInto","keywordValues","keywordUpdate","keywordSet","keywordCreate","keywordReferences","keywordPrimary","keywordForeign","keywordTable","keywordColumn","keywordDrop","keywordKey","keywordAutoincrement","keywordFrom","keywordWhere","keywordGroup","keywordBy","keywordHaving","keywordOrder","keywordAscending","keywordDescending","keywordNulls","keywordFirst","keywordLast","keywordIs","keywordNull","keywordAnd","keywordOr","keywordNot","keywordJoin","keywordNatural","keywordLeft","keywordCross","keywordInner","keywordOuter","keywordOn","keywordAs","keywordLimit","keywordOffset","keywordIn","keywordNotIn","keywordLike","keywordCollate","keywordDefault","keywordEngine","keywordCharset","leftBracket","rightBracket","leftSquareBracket","rightSquareBracket","leftCurlyBracket","rightCurlyBracket","leftRightSquareBracket","dot","minus","modulo","plus","multiplication","division","singleQuote","doubleQuote","identifierQuote","lower","greater","equal","lowerOrEqual","greaterOrEqual","concatenation","semicolon","colon","comma","backslash","at","pipe","space","tab","newline","identifierChar","comment","endofSourcecode","specialCharList","'","notEqual","linefeed","keywordList","EscapeSequenceList","\"","spaceTokens","correspondingBracket","tokenTypesToMerge","first","second","merged","isNot","isNotNull","isNull","this","input","replace","tokenList","errorList","bracketError","bracketStack","pos","line","column","nonSpaceLastTokenType","nonSpaceLastToken","length","tokens","errors","currentChar","charAt","nextChar","mainState","bracketOpen","pop","bracketClosed","setBracketError","tt","openBracket","error","char","specialCharToken","pushToken","next","push","lexMultilineComment","checkClosingBracket","isDigit","indexOf","lexEndofLineComment","lexNumber","lexStringConstant","lexSpace","lexAnnotation","lexQuotedIdentifier","lexIdentifierOrKeyword","pushError","text","position","tripel","newLength","errorLevel","level","a","base","charCode","charCodeAt","posStart","posEnd","substring","escapeChar","beginChar","isDoubleQuotedIdentifier","lastCharWasNewline","sign","firstChar","radix","exponent","posExponentStart","exponentString","Number","parseInt","parseFloat","Math","pow","isSpace","toLowerCase","autoFormatTriggerCharacters","displayName","monaco","languages","registerDocumentFormattingEditProvider","registerOnTypeFormattingEditProvider","model","ch","options","token","edits","format","Promise","resolve","e","e1","range","endLineNumber","startLineNumber","endColumn","startColumn","splice","delta","substr","getValue","editor","EndOfLinePreference","LF","tokenlist","lex","lastNonSpaceToken","indentLevel","curlyBracesOpenAtLines","indentLevelAtSwitchStatements","switchHappend","lastTokenWasNewLine","roundBracketsOpen","replaceBetween","token1","insertSpaces","deleteSpaces","openedAtLine","repeat","nextToken1","nextToken2","lastToken1","lastToken2","isBinaryOperator","lastTokenIsOperator","nextTokenIsOperator","getNextNonSpaceToken","beginNextLine","token2","currentIndentation","il","correctIndentation","lowerGeneric","lowerBelongsToGenericExpression","greaterGeneric","greaterBelongsToGenericExpression","tokenBefore","spaces","deleteOverlappingRanges","currentIndex","j","positionFrom","positionTo","numberOfSpaces","ThemeManager","themes","initThemes","theme","internalSwitchTheme","setTheme","monacoTheme","root","document","documentElement","keys","cssColors","style","setProperty","SQLType","parameterDescriptions","checkFunction","outputFunction","canCastToList","binaryResultTypes","Map","unaryOperators","slice","ownIndex","tokenType","secondType","resultType","isCommutative","Array","isArray","forEach","map","set","addBinaryOperation","type2","bt2","SQLBaseType","operator","booleanType","value1","value2","max","baseTypeMap","toLocaleLowerCase","baseTypes","concat","tens","baseType","parameterValues","parameters","join","returnBaseType","SQLDerivedType","getUnaryResultType","result","getBinaryResult","round","textTypes","varcharType","ci","pv","v","textType","tinyTextType","mediumTextType","longTextType","floatTypes","decimalType","vk","trunc","nk","numericType","doubleType","realType","floatType","numberTypes","intType","integerType","tinyIntType","smallIntType","mediumIntType","bigIntType","dateType","dateTimeType","timestampType","nullType","numericTypes","addBaseTypes","numericBinaryOperators","comparisonOperators","characterTypes","booleanOperations","bt","isInConsoleMode","lookahead","endToken","beginStatementKeywords","completionHints","sqlStatements","addCompletionHint","initializeLookahead","lastToken","parseMain","ct","lastComment","commentBefore","cct","quickFix","assign","nextToken","skip","invokeSemicolonAngel","isOperatorOrDot","title","editsProvider","uri","resource","edit","message","severity","MarkerSeverity","Error","main","getSemicolonAngel","register","expectedTokens","Parser","operatorPrecedence","op","ret","deltaColumns","getCurrentPosition","mainProgram","mainProgramEnd","afterLastStatement","isEnd","oldPos","getCurrentPositionPlus","errorsBeforeStatement","startPosition","st","parseStatement","ast","from","to","getEndOfPosition","hasErrors","acceptedBySQLite","beginStatementTokens","firstBadToken","retStatements","parseSelect","parseInsert","parseCreateTable","parseUpdate","parseDelete","parseDropTable","parseAlterTable","node","type","kind","endPosition","symbolTable","tableIdentifier","tableIdentifierPosition","expect","addCompletionHintHere","parseRenameTableOrColumn","parseAddColumn","parseDropColumn","comesToken","getEndOfCurrentToken","newTableName","oldColumnName","oldColumnPosition","newColumnName","columnDefBegin","columnDef","parseColumnDefinition","whereNode","whereNodeBegin","whereNodeEnd","parseTerm","columnIdentifiers","columnIdentifierPositions","values","valuePosBegin","valuePosEnd","columnList","combinedPrimaryKeyColumns","foreignKeyInfoList","primaryKeyAlreadyDefined","parsePrimaryKeyTerm","parseForeignKeyTerm","columnNode","isPrimary","referencesPos","fki","referencesColumn","referencesTable","referencesPosition","pos0","pos1","columns","isAutoIncrement","notNull","parseType","hintColumns","hintTables","hints","additionalColumns","praefix","suffix","datatypes","toString","getBaseType","alreadySeenKeywords","collate","defaultValue","fromConstantType","canCastTo","valuesPosition","columnsPosition","table","alias","parseValueLists","insideListTokens","outerFirst","leftBracketPosition","constantType","constant","constantNode","columnListStart","fromNode","parentStatement","parseColumnList","columnListKeywordArray","findIndex","allColumns","unshift","fromStartPosition","dontHint","parseTableOrSubQuery","fromListKeywordArray","fromEndPosition","whereKeywordArray","whereStart","groupKeywordArray","groupStart","groupByNode","parseGroupBy","orderStart","orderByNode","parseOrderBy","limitNode","parseLimit","numberOfRows","ln","offset","gbn","tokenTypesAfterGroupBy","term","having","obnList","obn","leftSide","parseAtomicTableOrSubQuery","parseJoinOperator","rightSide","firstOperand","secondOperand","on","selectStatement","subquery","query","tokenTypesAfterListEnd","allowAliases","columnTerm","parseTermBinary","precedence","left","parseUnary","operators","right","binaryOp","parseBracket","tt1","unaryOp","operand","isStringConstant","parseDotOrArrayChains","identifier1","position1","parseMethodCallParameters","rightBracketPosition","callMethod","operands","nodes","commaPositions","secondIdentifier","identifierLeft","identifierRight","list","elements","constantTypes","tokenBeforeBracket","selectNode","listNode","parseList","termInsideBrackets","parameter","isPrimaryKey","isNullable","cs","typeMatch1","completeTypeSQL","match","baseTypeIdentifier","commaSeparatedParameters","split","trim","Column","fromColumnStructure","Table","ts","size","tsList","tables","fromTableStructure","columnStructureToColumnMap","referencedCs","references","referencedColumn","parentSymbolTable","childSymbolTables","symbols","symbolList","parent","databaseStructure","fromTableStructureList","storeTableSymbols","storeSymbol","posOfDefinition","referencedOnPositions","symbol","containsPosition","shortestSymbolTableContainingPosition","shortestPosition","st1","findTableAtPosition","findTables","filter","isAggregating","returnType","acceptsStarParameter","SQLMethodStore","methods","pushOneParameterMethod","countMethod","instance","parameterType","escapeHtml","unsafe","twoDez","z","isDate","inputText","opera1","opera2","lopera1","lopera2","pdate","dd","mm","yy","lyear","isDateTime","dateStr","CompilerStatus","databaseTool","symbolTableStack","mainSymbolTable","statement","astNode","resolveSelect","resolveInsert","resolveCreateTable","resolveUpdate","resolveDelete","resolveDropTable","resolveAlterTable","getCurrentSymbolTable","resultTable","pushNewSymbolTable","joinedTables","resolveTableOrSubQuery","extractDatabaseStructure","resolveTerm","c1","sqlType","whereType","getBaseTypeName","findTable","whereSymbolTable","find","ciPos","createTableNode","thisTable","cn","tosNode","tableList","storeTableIntoSymbolTable","tableAlias","resolveNotIn","typeLeft","typeRight","getBinaryResultType","operandType","resultType1","resolveMethodCall","resolveIdentifier","resolveDot","selectTable","tableSymbols","findColumn","getInstance","getMethods","method","found","methodParameter","operatorString","leftType","pType","element","elementType","tableCompletionTo","valueList","destType","compilerStatus","compiledButNothingToRun","moduleStore","compiling","t0","performance","now","lexer","getModules","file","dirty","clear","lexed","getProgramTextFromMonacoModel","getCurrentlyEditedModule","getBottomDiv","errorManager","showParenthesisWarning","startRegistering","parser","parse","getDatabaseTool","symbolResolver","start","dt","getCurrentWorkspace","compilerMessage","healSemicolons","readyToRun","oldErrorDecorations","identifierPositions","methodCallPositions","path","uriCounter","Module","uriMap","Uri","scheme","createModel","updateOptions","tabSize","lastSavedVersionId","getAlternativeVersionId","that","onDidChangeContent","versionId","saved","isEmbedded","main1","workspacesOwnerId","user","id","text_before_revision","student_edited_after_revision","networkManager","sendUpdates","bottomDiv","homeworkManager","showHomeWorkRevisionButton","projectExplorer","renderHomeworkButton","fromPosition","toPosition","hintKeywords","fromColumn","fromLine","toColumn","toLine","hintColumnsOfTable","chList","sel","selStart","selEnd","stmt","compare","b","lineNumber","bestCh","bestRangeLength","rangeLength","workspace","submitted_date","version","workspace_id","forceUpdate","file_type","ec","positionList","positionsOnLine","bestFoundPosition","el","sort","e2","errorLevelCompare","level1","level2","f","maxUriNumber","ModuleStore","moduleMap","module_id","ms","putModule","copy","includeSystemModules","excludedModuleName","removeModule","undefined","moduleName","ActionManager","$mainElement","actions","keyEntries","buttons","$element","jQuery","event","executeKeyDownEvent","actionIdentifier","ae","action","button","active","attr","addClass","removeClass","activeElement","tagName","keyCode","ctrlKey","shiftKey","altKey","actionEntries","actionEntry","stopPropagation","preventDefault","makeEditable","elementWithText","elementToReplace","renameDoneCallback","selectionRange","mousePointer","window","PointerEvent","$input","css","width","height","color","val","setSelectionRange","end","after","hide","setTimeout","focus","ev","off","remove","show","newValue","openContextMenu","items","x","y","$contextMenu","$openSubMenu","parentMenuItem","mi","caption","link","$item","subMenu","callback","$link","top","append","leftRight","innerWidth","xp","topBottom","innerHeight","yp","makeTabs","tabDiv","headings","not","tabs","target","data","trigger","makeDiv","klass","div","jo_mouseDetected","animateToTransparent","cssProperty","startColorRgb","duration","colorPraefix","animate","copyTextToClipboard","navigator","clipboard","writeText","then","err","console","textArea","createElement","body","appendChild","select","execCommand","removeChild","fallbackCopyTextToClipboard","PerformanceCollector","url","startTime","pe","performanceData","count","sumTime","performanceDataCount","lastTimeSent","request","ajax","successCallback","errorCallback","showNetworkBusy","time","$","async","JSON","stringify","contentType","success","response","registerPerformanceEntry","jqXHR","statusText","status","busy","WDatabase","db","statements","published_to","description","templateDump","templateId","template_id","owner_id","CacheManager","databaseId","cacheAvailable","getCache","cache","databaseIdToCacheIdentifier","arrayBuffer","buffer","Uint8Array","catch","put","Response","self","caches","open","$updateTimerDiv","ownUpdateFrequencyInSeconds","teacherUpdateFrequencyInSeconds","updateFrequencyInSeconds","forcedUpdateEvery","secondsTillNextUpdate","errorHappened","interval","clearInterval","counterTillForcedUpdate","setInterval","$rect","sendIfNothingIsDirty","writeEditorTextToFile","settings","wdList","fdList","workspaceList","ws","getWorkspaceData","getFileData","workspacesWithoutFiles","files","userId","language","currentWorkspaceId","getModifiedWorkspaces","updateWorkspaces","wd","is_testuser","random","entity","workspaceId","alert","secretKind","secret","databaseName","publishedTo","klasse","student_ids","class_id","current_workspace_id","version_before","database","newStatements","firstNewStatementIndex","statements_before","new_version","cacheManager","fromDatabaseData","fetchTemplateFromCache","pako","inflate","fetchTemplate","template","saveTemplateToCache","xhrFields","responseType","user_id","templateList","sendUpdatesRequest","sendUpdatesResponse","idToRemoteWorkspaceDataMap","fileIdsSended","workspaces","newWorkspaceNames","remoteWorkspace","createNewWorkspaceFromWorkspaceData","idToRemoteFileDataMap","fd","idToModuleMap","fileId","remoteFileData","fileListPanel","removeElement","currentWorkspace","setValue","remoteFile","createFile","workspaceListPanel","sortElements","withSort","w","createNewWorkspace","sql_history","isFolder","panelElement","externalElement","iconClass","addElement","fileData","identical_to_repository_version","getNewModule","TemplateUploader","dump","waitOverlay","dbTool","export","deflate","uploadIntern","processData","headers","init","$dialog","showMainWindow","saveNameAndPublishedTo","setValues","setNewSecret","prop","checked","each","setNameAndPublishedTo","uploadCurrentDatabase","getDatabaseSettings","secrets","is_admin","is_schooladmin","empty","Workspace","permissions","database_id","restoreFromData","currentFileId","currentlyOpenModule","withFiles","$buttonDiv","$htmlFirstLine","$button","triggerCharacters","keywordCompletionItems","keywordToSnippetMap","setupKeywordCompletionItems","context","getModuleByMonacoModel","reject","wfc","provideCompletionItemsIntern","sw","getMonacoEditor","_contentWidgets","widget","toggleDetails","isStringLiteral","textUntilPosition","getValueInRange","textAfterPosition","completionHint","getCompletionHint","completionItems","addKeywordCompletionItems","dotMatch","ibMatch","identifierAndBracketAfterCursor","addIdentifierCompletionItems","addDotCompletionItems","word","getWordUntilPosition","replaceWordRange","insertAfterCursorRange","item","insertText","startsWith","suggestions","textAfterDot","textBeforeDot","rangeToReplace","label","detail","filterText","insertTextRules","CompletionItemInsertTextRule","KeepWhitespace","CompletionItemKind","Field","tableIdentifiers","columnIdentifier","InsertAsSnippet","Snippet","Class","sortText","columList","withTable","snippet","Keyword","posMin","posMax","watchDog","command","arguments","MySignatureHelpProvider","signatureHelpTriggerCharacters","signatureHelpRetriggerCharacters","compileIfDirty","provideSignatureHelpLater","getModel","methodCallPosition","rightMostPosition","mcp","identifierPosition","getSignatureHelp","parameterIndex","cp","activeParameter","activeSignature","signatures","dispose","MyHoverProvider","selection","getSelection","getElementAtPosition","getWordUnderCursor","desc","keywordDescriptions","contents","getValueLengthInRange","isInsideIdentifierOrArrayDescriptor","begin","isInsideOperator","isInsideIdentifierChain","MyCodeActionProvider","markers","relatedInformation","diagnostics","isPreferred","MyReferenceProvider","usagePositions","referencePositions","upInCurrentModule","up","targetElement","direction","$helper","bottom","html","Helper","close","fadeIn","fadeOut","mainBase","helperHistory","flag","sendUpdateUserSettings","openHelper","showMinimap","cw","dontPushNextCursorMove","lastTime","elementDecoration","extensions","conf","onEnterRules","beforeText","afterText","indentAction","IndentAction","IndentOutdent","appendText","None","removeText","comments","lineComment","blockComment","brackets","autoClosingPairs","surroundingPairs","setLanguageConfiguration","setMonarchTokensProvider","defaultToken","tokenPostfix","ignoreCase","escapes","keywords","builtinFunctions","builtinVariables","pseudoColumns","tokenizer","include","cases","whitespace","numbers","strings","string","complexIdentifiers","quotedIdentifier","scopes","defineVscSQL","defineTheme","inherit","rules","foreground","fontStyle","colors","lightbulb","enabled","lineDecorationsWidth","peekWidgetDefaultFocus","fixedOverflowWidgets","quickSuggestions","quickSuggestionsDelay","fontSize","fontFamily","fontWeight","roundedSelection","selectOnLineNumbers","automaticLayout","scrollBeyondLastLine","occurrencesHighlight","autoIndent","dragAndDrop","formatOnType","formatOnPaste","suggestFontSize","suggestLineHeight","suggest","localityBonus","insertMode","parameterHints","cycle","mouseWheelZoom","minimap","scrollbar","vertical","horizontal","mouseWheelListener","changeEditorFontSize","deltaY","onDidChangeConfiguration","hasChanged","EditorOption","fontInfo","registerLightbulbOnClickFunctions","onDidChangeCursorPosition","onDidChangeModel","removeEventListener","addEventListener","passive","setActiveAfterExternalModelSet","registerHoverProvider","registerCompletionItemProvider","registerCodeActionProvider","registerReferenceProvider","registerSignatureHelpProvider","onMouseDown","MouseTargetType","GUTTER_GLYPH_MARGIN","GUTTER_LINE_NUMBERS","isAfterLines","onMarginMouseDown","remeasureFonts","addActions","onDidType","insertEndOfComment","newLine","newColumn","Range","executeEdits","setPosition","getPosition","prevLine","getLineContent","trimRight","endsWith","getLineCount","spacesAtBeginningOfLine","trimLeft","fontSizePx","Date","getTime","editorfs","getOptions","viewModeController","saveFontSize","factor","dynamic","newEditorFs","setFontSize","addAction","keybindings","KeyMod","CtrlCmd","KeyCode","KEY_K","precondition","keybindingContext","contextMenuGroupId","contextMenuOrder","run","ed","getAction","Enter","getActionManager","decorations","className","isWholeLine","overviewRuler","darkColor","OverviewRulerLane","Left","executeActionActive","getSQLSTatementsAtSelection","sqlStatement","classname","MinimapPosition","Inline","zIndex","setActive","showHelper","deltaDecorations","DatabaseTool","databaseDirectoryEntries","queryId","querySuccessCallbacksMap","queryErrorCallbackMap","sqliteMagicBytes","queries","callbackAfterInitializing","callbackAfterRetrievingStructure","getWaitOverlay","worker","terminate","javaOnlineDir","Worker","onmessage","querySuccessCallback","results","queryErrorCallback","delete","queryCount","execQuery","setProgress","shift","executeQuery","log","retrieveDatabaseStructure","onerror","postMessage","sql","params","getJSON","entries","sql1","result1","parseDatabaseStructure","tableNameToStructureMap","index","tableName","tableSQL","tableStructure","completeSQL","columnArray","foreignKeyList","columnArray1","dflt_value","columnStructure","typeLengths","fkInfo","foreignKeyInfo","referencesRawData","reader","FileReader","onload","ab","getDumpType","binDump","readAsArrayBuffer","filename","prompt","obj","isBlob","blob","Blob","msSaveOrOpenBlob","createEvent","download","href","URL","createObjectURL","dataset","downloadurl","initEvent","dispatchEvent","downloadFile","currentSubmenu","openSubmenusOnMousemove","mainMenu","switchTheme","saveToFile","initMenu","menu","initMenuitemCallbacks","opensubmenu","accordion","flexWeight","newButtonClass","buttonNewTitle","defaultIconClass","withDeleteButton","withFolders","enableDrag","acceptDropKinds","dontSortElements","addPanel","$newFolderAction","addFolder","newElement","newFolderCallback","scrollIntoView","$collapseAllAction","collapseAll","hasClass","slideUp","$captionElement","$listElement","fixed","grow","$buttonNew","pathArray","selectedElement","getSelectedElement","name1","path1","isFolder1","name2","path2","isFolder2","cmp","localeCompare","compareWithPath","insertIndex","getElementIndex","$elements","prepend","elementAtIndex","before","renderElement","insertElement","renameElement","$accordionDiv","getCurrentlySelectedPath","newElementCallback","$htmlSecondLine","insertAfter","selectCallback","$listOuter","$ce","$li","targetGrow","parts","toggleClass","AccordionPanel","currentlyDraggedElementKind","element1","currentlyDraggedElement","moveElement","expanded","aName","sortName","bName","cssClass","$div","expandedCollapsed","pathHtml","addElementActionCallback","$elementAction","$filedragpart","originalEvent","dataTransfer","effectAllowed","dropEffect","dropElementCallback","pathIsCollapsed","slideDown","pressTimer","contextmenuHandler","contextMenuItems","renameCallback","contextMenuProvider","cmi","pageX","pageY","clearTimeout","getChildElements","deleteCallback","elementToMove","destinationFolder","destinationPath","movedElements","sourcePath","oldPathLength","moveCallback","folder","pointPos","newText","invokeCallback","ae1","findElement","pathString","elPath","ps","Accordion","$html","panel","renderOuterHtmlElements","DistributeToStudentsDialog","classes","studentCount","$studentList","student","$studentLine","$studentClass","$studentName","rufname","familienname","students","$dialogMain","history","back","distributeWorkspace","sendDistributeWorkspace","$templatelist","fetchTemplateList","templatelist","tle","$tle","ownerName","$templateName","$dropZone","evt","importFile","createMode","workspaceData","createWorkspace","$template","template_database_id","code","tIndex","otherDatabaseId","newTemplateId","sendCreateWorkspace","accordionElement","renderSettingsButton","setWorkspaceActive","loadFromFile","isDatabase","dbUncompressed","$projectexplorerDiv","programPointerModule","programPointerDecoration","lastOpenModule","initFilelistPanel","initWorkspacelistPanel","successfulNetworkCommunicationCallback","setModuleActive","sendCreateFile","newName","callbackIfSuccessful","sendDeleteWorkspaceOrFile","cmiList","is_teacher","date","getDate","getMonth","getFullYear","getHours","getMinutes","$homeworkButtonDiv","$newWorkspaceAction","removeWorkspace","enableNewButton","databaseExplorer","getResultsetPresenter","dest","droppedElement","dropEffekt","$homeAction","onHomeButtonClicked","hideHomeworkTab","workspaceAccordionElement","teacherExplorer","classPanel","restoreOwnWorkspaces","setCaption","moduleList","errorCountMap","errorCount","errorCountS","setTextAfterFilename","initializeDatabaseTool","fetchDatabase","initializeWorker","currentWorkspace_id","renderFiles","nonSystemModules","notifier","connect","refreshAfterRetrievingDBStructure","getHistoryViewer","clearAndShowStatements","cem","hideRevision","editorState","saveViewState","setModel","readOnly","hideHomeworkRevisionButton","restoreViewState","setCurrentlyEditedModule","showProgramPointer","programPointerPosition","revealRangeInCenterIfOutsideViewport","Center","beforeContentClassName","findModuleByFile","$rightDiv","isWholePage","$tabs","$headings","rightdiv_width","$wholeWindow","Sliders","md","clientX","dx","moveLeftPanel","clientY","dy","moveBottomDiv","moveRightDiv","sliderknobLeft","stopImmediatePropagation","sliderknobRight","$editor","mewidth","layout","diffEditor","$bottomDiv","meheight","$leftPanel","classData","studentPanel","initStudentPanel","initClassPanel","renderClasses","ws_userId","ownWorkspaces","currentOwnWorkspace","restoreWorkspaces","setExplorerColor","showHomeworkTab","attachToWorkspaces","renderWorkspaces","ea","renderStudents","userDataList","ud","classDataList","cd","Dialog","colorStyle","placeholder","$buttonRow","$message","visible","visibility","$userSettingsButton","dialog","heading","$oldPassword","$newPassword1","$newPassword2","$errorDiv","waitDiv","waitMessage","oldPassword","newPassword","$loginSpinner","loginHappened","username","password","viewModes","classDiagram","waitForGUICallback","initGUI","initTeacherExplorer","classdata","initializeTimer","setFixed","initViewMode","startupComplete","errorMessage","resultsetPresenter","removePanels","ViewModeController","$buttonsContainer","$buttonMap","highContrast","editorHasFullWidth","$buttonEditorFullscreen","$buttonPresentationMode","$buttonMonitorMode","am","actionManager","registerAction","toggleEditorFullwidth","setMode","saveSettings","otherMode","viewMode","viewModeChosen","themeManager","getChosenViewMode","userDataDirty","monitor","presentation","SemicolonAngel","semicolonPositions","isThereAgain","oldEvidence","firstSeenMs","currentlyEditedModule","cursorLine","isCurrentModule","editOperations","forceMoveMarkers","abs","setSelection","$mainDiv","collapsedTables","dbstructure","$table","renderTable","isCollapsed","showTable","$columns","image","referencesHtml","autoincrement","$column","$treeSwitch","ProgramControlButtons","$buttonStart","isActive","executeSelectedStatements","sqlCleaned","cleanCreateTableStatement","cleanInsertStatement","lines","vline","cleanValue","cleanColumnDef","cleanForeignKeyInfo","paginationSize","writeQueryListeners","showResultsBusy","showResultPending","$paginationDiv","$arrowLeft","$infoDiv","$arrowRight","paginationFrom","floor","showResults","activateButtons","paginationAll","min","listener","fetchSelectedStatements","hasDDLStatements","some","isDDLStatement","hasWriteStatements","isWriteStatement","executeDDLWriteStatementsEmbedded","executeDDLWriteStatementsInOnlineIDE","executeStatements","sucessfullyExecutedModifyingStatements","getDatabaseExplorer","refresh","notify","getNewStatements","new_statements","firstStatementIndex","executeNewStatements","AddDatabaseStatements","appendStatements","modifyingStatements","resetDatabase","fromIndex","executeStatementsString","successfullyExecutedModifyingStatements","showErrors","callback1","laterSelectExists","isSelectStatement","presentResultsIntern","clean","minimapColors","linesDecorationsClassName","minimapColor","setModelMarkers","$runtimeErrorsTab","$runtimeErrorsTabHeading","showErrorDecorations","$errorList","$errorLine","revealRangeInCenter","$sqlDiv","colorize","$messageDiv","$resultTabheading","$resultHeader","headerDiv","$bodyDiv","waitFunction","$header","rows","row","$row","cell","monacoEditor","StatementDelimiter","isOpen","unsentMessages","isPolling","connection","location","protocol","host","WebSocket","onError","onclose","onClose","onMessage","onopen","databaseVersion","sendIntern","onOpen","startPolling","send","exception","rollbackLocal","callbackIfTooFewStatements","callbackIfDone","doRefreshDatabaseExplorer","poll","getNewStatementsHttp","WaitOverlay","$waitDiv","fadeOutPending","$bitteWartenText","$bitteWartenProgress","$historyPanel","panelEntries","panelEntry","makePanelEntry","makeLastButtonActive","$rollbackButton","$index","$text","$copybutton","$rollbackbutton","rollback","rollbackEmbedded","rollbackLocalNeeded","writeQueryManager","initialTemplateDump","initialStatements","writtenStatements","historyViewer","rightDiv","compiler","semicolonAngel","matchMedia","matches","login","initSliders","checkStartupComplete","startTimer","sendBeacon","timerHandle","isDirty","compile","renderErrorCount","oldDecorations","lightBulbOnClickFunctionList","$bracket_warning","children","getSortedAndFilteredErrors","getErrorCount","borderLeftClass","lightBulbClass","class","onClickFunction","processError","Warning","Info","$file","$error","locf","$errorDivs","$lineColumn","category","showError","showRevisionActive","$homeworkTab","$homeworkTabLeft","$homeworkTabRight","$showRevisionButton","showRevision","originalModel","modifiedModel","createDiffEditor","getElementById","enableSplitViewResizing","originalEditable","renderSideBySide","original","modified","daysWithModules","dateString","dateWithoutTime","dateToStringWithoutTime","dwm","day","m1","m2","moduleWithWorkspace","EmbeddedSlider","$container","firstLast","horVert","$otherDiv","initSlider","$sliderDiv","cursor","slide","otherHeight","newHeight","newOtherHeight","otherWidth","newWidth","newOtherWidth","$fileListDiv","addModule","$filesDiv","$addButton","currentFile","selectFile","removeFile","script","$fileDiv","hint","onDelete","$hintDiv","$monacoDiv","syntaxMap","md1","markdownit","highlight","str","lang","renderer","code_inline","idx","env","content","render","md2","codeMap","uncoloredtext","EmbeddedIndexedDB","databaseIdentifier","indexedDB","onsuccess","onupgradeneeded","objectStoreScripts","createObjectStore","keyPath","autoIncrement","transaction","oncomplete","scriptId","objectStore","databaseID","WriteQueryManager","statementsToExecute","statementsToWrite","atLeastOneExecuted","getDatabase","writeStatementsIfNecessary","forceWriteStatements","writeDatabase","$databaseResetButton","statementsSql","urlWithoutProtocol","loadBinary","loadSql","saveDatabaseToCache","cutSqlToStatements","isBinary","scriptList","programIsExecutable","compileRunsAfterCodeReset","readConfig","config","databaseFilename","$dbTreeDiv","load","loadableDb","initScripts","indexedDBReady","readScripts","withFileList","fileExplorer","getFirstModule","databaseReady","removeAllFiles","initWorkspace","$filesListDiv","setFirstFileActive","addHint","configJson","withOutput","withErrorList","withBottomPanel","markFile","lineNumbersMinChars","getScript","scriptListJSon","saveScripts","countDown","$codeResetButton","oneNotSaved","writeScript","removeScript","considerShowingCodeResetButton","$centerDiv","makeWaitDiv","$codeResetModalWindow","makeCodeResetModalWindow","$databaseResetModalWindow","makeDatabaseResetModalWindow","makeRightDiv","$editorDiv","$bracketErrorDiv","makeBracketErrorDiv","$controlsDiv","$bottomDivInner","makeBottomDiv","makeFilesDiv","$rightDivInner","$rightSideContainer","$infoButton","$buttonOpen","loadDatabaseFromFile","$buttonSave","saveDatabaseToFile","addWriteQueryListener","$parent","$window","deleteScriptsInDB","reset","$filesHeader","$tabheadings","$thLeftSide","$thErrors","$thPCode","$thHistory","$thRightSide","$tabError","$tabPCode","$tabHistory","$thRun","mainEmbeddedList","initJavaOnlineDivs","$script","initDiv","embeddedStarter","prefix","editorPath","monacoEditorPath","require","paths","availableLanguages","ignoreDuplicateModules","initEditor"],"mappings":"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","file":"sql-ide-embedded.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export enum TokenType {\r\n    identifier,\r\n    // constants\r\n    integerConstant,\r\n    floatingPointConstant,\r\n    booleanConstant,\r\n    stringConstant,\r\n    charConstant,\r\n    true,\r\n    false,\r\n    // keywords\r\n    keywordRename,\r\n    keywordTo,\r\n    keywordAlter,\r\n    keywordAdd,\r\n    keywordDelete,\r\n    keywordSelect,\r\n    keywordInsert,\r\n    keywordInto,\r\n    keywordValues,\r\n    keywordUpdate,\r\n    keywordSet,\r\n    keywordCreate,\r\n    keywordReferences,\r\n    keywordPrimary,\r\n    keywordForeign,\r\n    keywordTable,\r\n    keywordColumn,\r\n    keywordDrop,\r\n    keywordKey,\r\n    keywordAutoincrement,\r\n    keywordFrom,\r\n    keywordWhere,\r\n    keywordGroup,\r\n    keywordBy,\r\n    keywordHaving,\r\n    keywordOrder,\r\n    keywordAscending,\r\n    keywordDescending,\r\n    keywordNulls,\r\n    keywordFirst,\r\n    keywordLast,\r\n    keywordIs,\r\n    keywordNull,\r\n\r\n    keywordOr,\r\n    keywordAnd,\r\n    keywordNot,\r\n\r\n    keywordJoin,\r\n    keywordNatural,\r\n    keywordLeft,\r\n    keywordCross,\r\n    keywordInner,\r\n    keywordOuter,\r\n    keywordOn,\r\n    keywordAs,\r\n    keywordLimit,\r\n    keywordOffset,\r\n    keywordIn,\r\n    keywordNotIn,\r\n    keywordLike,\r\n    keywordCollate,\r\n    keywordDefault,\r\n    keywordEngine,\r\n    keywordCharset,\r\n\r\n    // brackets\r\n    leftBracket, // ()\r\n    rightBracket,\r\n    leftSquareBracket, // []\r\n    rightSquareBracket,\r\n    leftCurlyBracket, // {}\r\n    rightCurlyBracket,\r\n    leftRightSquareBracket, // []\r\n    \r\n    // binary operators\r\n    dot, //.\r\n    modulo,\r\n    minus, plus, multiplication, division,\r\n    singleQuote, doubleQuote, // ', \"\r\n    identifierQuote,\r\n    lower, greater, lowerOrEqual, greaterOrEqual, \r\n    concatenation,    \r\n    equal,\r\n    notEqual,\r\n\r\n    // semicolon\r\n    semicolon, // ;\r\n\r\n    colon, // :\r\n\r\n    // comma\r\n    comma, // ,\r\n\r\n    // backslash\r\n    backslash,\r\n\r\n    // @\r\n    pipe,\r\n\r\n    // @\r\n    at,\r\n\r\n    // whitespace\r\n    space,\r\n\r\n    tab,\r\n\r\n    // newline\r\n    newline,\r\n\r\n    // line feed\r\n    linefeed,\r\n\r\n    // only lexer-internal\r\n    identifierChar,  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    comment,\r\n\r\n    endofSourcecode, // will be generated after sourcecode end\r\n    \r\n    // Program statement types:\r\n    \r\n    // additional AST node types\r\n    constantNode,\r\n    callMethod,\r\n    unaryOp,\r\n    binaryOp,\r\n    table,\r\n    subquery,\r\n    list,\r\n    column,\r\n    columnDef,\r\n    allColumns, // *\r\n    isNull,\r\n    isNot, // used by lexer to lex \"is not null\" into one token\r\n    isNotNull,\r\n}\r\n\r\nexport var TokenTypeReadable: {[tt: number]: string} = {\r\n    [TokenType.identifier]: \"ein Bezeichner\",\r\n    // constants\r\n    [TokenType.integerConstant]: \"eine Integer-Konstante\",\r\n    [TokenType.floatingPointConstant]: \"eine Fließkomma-Konstante\",\r\n    [TokenType.booleanConstant]: \"eine boolesche Konstante\",\r\n    [TokenType.stringConstant]: \"eine Zeichenketten-Konstante\",\r\n    [TokenType.charConstant]: \"eine char-Konstante\",\r\n    [TokenType.true]: \"true\",\r\n    [TokenType.false]: \"false\",\r\n    // keywords\r\n    [TokenType.keywordRename]: \"rename\",\r\n    [TokenType.keywordTo]: \"to\",\r\n    [TokenType.keywordAlter]: \"alter\",\r\n    [TokenType.keywordAdd]: \"add\",\r\n    [TokenType.keywordDelete]: \"delete\",\r\n    [TokenType.keywordSelect]: \"select\",\r\n    [TokenType.keywordInsert]: \"insert\",\r\n    [TokenType.keywordInto]: \"into\",\r\n    [TokenType.keywordValues]: \"values\",\r\n    [TokenType.keywordUpdate]: \"update\",\r\n    [TokenType.keywordSet]: \"set\",\r\n    [TokenType.keywordCreate]: \"create\",\r\n    [TokenType.keywordReferences]: \"references\",\r\n    [TokenType.keywordPrimary]: \"primary\",\r\n    [TokenType.keywordForeign]: \"foreign\",\r\n    [TokenType.keywordTable]: \"table\",\r\n    [TokenType.keywordColumn]: \"column\",\r\n    [TokenType.keywordDrop]: \"drop\",\r\n    [TokenType.keywordKey]: \"key\",\r\n    [TokenType.keywordAutoincrement]: \"autoincrement\",\r\n    [TokenType.keywordFrom]: \"from\",\r\n    [TokenType.keywordWhere]: \"where\",\r\n    [TokenType.keywordGroup]: \"group\",\r\n    [TokenType.keywordBy]: \"by\",\r\n    [TokenType.keywordHaving]: \"having\",\r\n    [TokenType.keywordOrder]: \"order\",\r\n    [TokenType.keywordAscending]: \"ascending\",\r\n    [TokenType.keywordDescending]: \"descending\",\r\n    [TokenType.keywordNulls]: \"nulls\",\r\n    [TokenType.keywordFirst]: \"first\",\r\n    [TokenType.keywordLast]: \"last\",\r\n    [TokenType.keywordIs]: \"is\",\r\n    [TokenType.keywordNull]: \"null\",\r\n\r\n\r\n    [TokenType.keywordAnd]: \"and\",\r\n    [TokenType.keywordOr]: \"or\",\r\n    [TokenType.keywordNot]: \"not\",\r\n\r\n    [TokenType.keywordJoin]: \"join\",\r\n    [TokenType.keywordNatural]: \"natural\",\r\n    [TokenType.keywordLeft]: \"left\",\r\n    [TokenType.keywordCross]: \"cross\",\r\n    [TokenType.keywordInner]: \"inner\",\r\n    [TokenType.keywordOuter]: \"outer\",\r\n    [TokenType.keywordOn]: \"on\",\r\n    [TokenType.keywordAs]: \"as\",\r\n    [TokenType.keywordLimit]: \"limit\",\r\n    [TokenType.keywordOffset]: \"offset\",\r\n    [TokenType.keywordIn]: \"in\",\r\n    [TokenType.keywordNotIn]: \"not in\",\r\n    [TokenType.keywordLike]: \"like\",\r\n    [TokenType.keywordCollate]: \"collate\",\r\n    [TokenType.keywordDefault]: \"default\",\r\n    [TokenType.keywordEngine]: \"engine\",\r\n    [TokenType.keywordCharset]: \"charset\",\r\n\r\n    // brackets\r\n    [TokenType.leftBracket]: \"(\", // ()\r\n    [TokenType.rightBracket]: \")\",\r\n    [TokenType.leftSquareBracket]: \"[\", // []\r\n    [TokenType.rightSquareBracket]: \"]\",\r\n    [TokenType.leftCurlyBracket]: \"{\", // {}\r\n    [TokenType.rightCurlyBracket]: \"}\",\r\n    [TokenType.leftRightSquareBracket]: \"[]\", \r\n    \r\n    // operators\r\n    [TokenType.dot]: \".\", //.\r\n    [TokenType.minus]: \"-\", \r\n    [TokenType.modulo]: \"%\", \r\n    [TokenType.plus]: \"+\", \r\n    [TokenType.multiplication]: \"*\", \r\n    [TokenType.division]: \"/\",\r\n    [TokenType.singleQuote]: \"'\", \r\n    [TokenType.doubleQuote]: \"\\\"\", // ']: \"\", \"\r\n    [TokenType.identifierQuote]: \"`\",\r\n    [TokenType.lower]: \"<\", \r\n    [TokenType.greater]: \">\",\r\n    [TokenType.equal]: \"=\", \r\n    [TokenType.lowerOrEqual]: \"<=\", \r\n    [TokenType.greaterOrEqual]: \">=\", \r\n    [TokenType.concatenation]: \"||\", \r\n    \r\n    // semicolon\r\n    [TokenType.semicolon]: \";\", // ;\r\n    [TokenType.colon]: \":\", // ;\r\n\r\n    // comma\r\n    [TokenType.comma]: \",\", \r\n\r\n    // backslash\r\n    [TokenType.backslash]: \"\\\\\",\r\n\r\n    // at\r\n    [TokenType.at]: \"@\",\r\n    \r\n    // pipe\r\n    [TokenType.pipe]: \"|\",\r\n\r\n    // whitespace\r\n    [TokenType.space]: \"ein Leerzeichen\",\r\n    [TokenType.tab]: \"ein Tabulatorzeichen\",\r\n\r\n    // newline\r\n    [TokenType.newline]: \"ein Zeilenumbruch\",\r\n\r\n    // only lexer-internal\r\n    [TokenType.identifierChar]: \"eines der Zeichen a..z, A..Z, _\",  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    [TokenType.comment]: \"ein Kommentar\",\r\n\r\n    [TokenType.endofSourcecode]: \"das Ende des Programmes\"\r\n\r\n}\r\n\r\nexport var specialCharList: {[keyword: string]:TokenType} = {\r\n    '(': TokenType.leftBracket, // ()\r\n    ')': TokenType.rightBracket,\r\n    '[': TokenType.leftSquareBracket, // []\r\n    ']': TokenType.rightSquareBracket,\r\n    '{': TokenType.leftCurlyBracket, // {}\r\n    '}': TokenType.rightCurlyBracket,\r\n    \r\n    // operators\r\n    '.': TokenType.dot, //.\r\n    ',': TokenType.comma, //.\r\n    '-': TokenType.minus,\r\n    '%': TokenType.modulo,\r\n    '+': TokenType.plus, \r\n    '*': TokenType.multiplication, \r\n    '/': TokenType.division,\r\n    '\\\\': TokenType.backslash,\r\n    '@': TokenType.at,\r\n    '|': TokenType.pipe,\r\n    '\\'': TokenType.singleQuote, \r\n    '\"': TokenType.doubleQuote, // ', \"\r\n    '`': TokenType.identifierQuote, // ', \"\r\n    \"<\": TokenType.lower,\r\n    \">\": TokenType.greater,\r\n    \"=\": TokenType.equal,\r\n    \"<>\": TokenType.notEqual,\r\n    \r\n    ';': TokenType.semicolon, // ;\r\n    ':': TokenType.colon, // ;\r\n\r\n    // whitespace\r\n    ' ': TokenType.space,\r\n    '\\t': TokenType.tab,\r\n\r\n    // newline\r\n    '\\n': TokenType.newline,\r\n    '\\r': TokenType.linefeed\r\n}\r\n\r\nexport var keywordList: {[keyword: string]:TokenType} = {\r\n    \"rename\": TokenType.keywordRename,\r\n    \"to\": TokenType.keywordTo,\r\n    \"alter\": TokenType.keywordAlter,\r\n    \"add\": TokenType.keywordAdd,\r\n    \"delete\": TokenType.keywordDelete,\r\n    \"select\": TokenType.keywordSelect,\r\n    \"insert\": TokenType.keywordInsert,\r\n    \"into\": TokenType.keywordInto,\r\n    \"values\": TokenType.keywordValues,\r\n    \"update\": TokenType.keywordUpdate,\r\n    \"set\": TokenType.keywordSet,\r\n    \"create\": TokenType.keywordCreate,\r\n    \"references\": TokenType.keywordReferences,\r\n    \"primary\": TokenType.keywordPrimary,\r\n    \"foreign\": TokenType.keywordForeign,\r\n    \"table\": TokenType.keywordTable,\r\n    \"column\": TokenType.keywordColumn,\r\n    \"drop\": TokenType.keywordDrop,\r\n    \"key\": TokenType.keywordKey,\r\n    \"autoincrement\": TokenType.keywordAutoincrement,\r\n    \"from\": TokenType.keywordFrom,\r\n    \"where\": TokenType.keywordWhere,\r\n    \"true\": TokenType.true,\r\n    \"false\": TokenType.false,\r\n    \"group\": TokenType.keywordGroup,\r\n    \"by\": TokenType.keywordBy,\r\n    \"having\": TokenType.keywordHaving,\r\n    \"order\": TokenType.keywordOrder,\r\n    \"asc\": TokenType.keywordAscending,\r\n    \"desc\": TokenType.keywordDescending,\r\n    \"nulls\": TokenType.keywordNulls,\r\n    \"first\": TokenType.keywordFirst,\r\n    \"last\": TokenType.keywordLast,\r\n    \"is\": TokenType.keywordIs,\r\n    \"null\": TokenType.keywordNull,\r\n\r\n    \"or\": TokenType.keywordOr,\r\n    \"and\": TokenType.keywordAnd,\r\n    \"not\": TokenType.keywordNot,\r\n\r\n    \"join\": TokenType.keywordJoin,\r\n    \"natural\": TokenType.keywordNatural,\r\n    \"left\": TokenType.keywordLeft,\r\n    \"cross\": TokenType.keywordCross,\r\n    \"inner\": TokenType.keywordInner,\r\n    \"outer\": TokenType.keywordOuter,\r\n    \"on\": TokenType.keywordOn,\r\n    \"as\": TokenType.keywordAs,\r\n    \"limit\": TokenType.keywordLimit,\r\n    \"offset\": TokenType.keywordOffset,\r\n    \"in\": TokenType.keywordIn,\r\n    \"not in\": TokenType.keywordNotIn,\r\n    \"like\": TokenType.keywordLike,\r\n    \"collate\": TokenType.keywordCollate,\r\n    \"default\": TokenType.keywordDefault,\r\n    \"engine\": TokenType.keywordEngine,\r\n    \"charset\": TokenType.keywordCharset\r\n\r\n\r\n};\r\n\r\nexport var EscapeSequenceList: {[keyword: string]:string} = {\r\n    \"n\": \"\\n\",\r\n    \"r\": \"\\r\",\r\n    \"t\": \"\\t\",\r\n    \"\\\"\": \"\\\"\",\r\n    \"'\": \"'\",\r\n    \"\\\\\": \"\\\\\"\r\n}\r\n\r\nexport type TextPosition = {\r\n    line: number,\r\n    column: number, \r\n    length: number\r\n}\r\n\r\nexport type TextPositionWithoutLength = {\r\n    line: number,\r\n    column: number\r\n}\r\n\r\nexport type Token = {\r\n    tt: TokenType,\r\n    value: string|number|boolean,\r\n    position: TextPosition,\r\n    commentBefore?: Token,\r\n    isDoubleQuotedIdentifier?: boolean\r\n}\r\n\r\nexport type TokenList = Token[];\r\n\r\nfunction tokenToString(t: Token){\r\n    return \"<div><span style='font-weight: bold'>\" + TokenType[t.tt] + \"</span>\" +\r\n            \"<span style='color: blue'> &nbsp;'\" + t.value + \"'</span> (l&nbsp;\" + t.position.line + \", c&nbsp;\" + t.position.column + \")</div>\";\r\n}\r\n \r\nexport function tokenListToString(tl: TokenList):string{\r\n    let s = \"\";\r\n    for(let t of tl){\r\n        s += tokenToString(t) + \"\\n\";\r\n    }\r\n    return s;\r\n}","import { TokenList, specialCharList, TokenType, Token, EscapeSequenceList, keywordList, TextPosition, TokenTypeReadable } from \"./Token.js\";\r\n\r\nenum LexerState {\r\n    number, identifier, stringConstant, characterConstant, multilineComment, EndoflineComment\r\n}\r\n\r\nvar endChar = \"►\"; // \\u10000\r\n\r\nexport type QuickFix = {\r\n    title: string,\r\n    editsProvider: (uri: monaco.Uri) => monaco.languages.WorkspaceTextEdit[]\r\n}\r\n\r\nexport type ErrorLevel = \"info\" | \"error\" | \"warning\";\r\n\r\nexport type Error = {\r\n    position: TextPosition,\r\n    text: string,\r\n    quickFix?: QuickFix,\r\n    level: ErrorLevel\r\n}\r\n\r\nexport class Lexer {\r\n\r\n    tokenList: TokenList;\r\n    nonSpaceLastTokenType: TokenType;\r\n    nonSpaceLastToken: Token;\r\n\r\n    errorList: Error[];\r\n    pos: number;\r\n    line: number;\r\n    column: number;\r\n\r\n    currentChar: string;\r\n    nextChar: string;\r\n\r\n    input: string;\r\n\r\n    spaceTokens: TokenType[] = [\r\n        TokenType.space, TokenType.tab, TokenType.newline\r\n    ];\r\n\r\n    bracketStack: TokenType[];\r\n    bracketError: string;\r\n    correspondingBracket: { [key: number]: TokenType } = {};\r\n\r\n    tokenTypesToMerge: { first: TokenType, second: TokenType, merged: TokenType }[] = [\r\n        { first: TokenType.keywordNotIn, second: TokenType.keywordIn, merged: TokenType.keywordNotIn },\r\n        { first: TokenType.keywordIs, second: TokenType.keywordNot, merged: TokenType.isNot },\r\n        { first: TokenType.isNot, second: TokenType.keywordNull, merged: TokenType.isNotNull },\r\n        { first: TokenType.keywordIs, second: TokenType.keywordNull, merged: TokenType.isNull },\r\n    ]\r\n\r\n    constructor() {\r\n        this.correspondingBracket[TokenType.leftBracket] = TokenType.rightBracket;\r\n        this.correspondingBracket[TokenType.leftCurlyBracket] = TokenType.rightCurlyBracket;\r\n        this.correspondingBracket[TokenType.leftSquareBracket] = TokenType.rightSquareBracket;\r\n        this.correspondingBracket[TokenType.rightBracket] = TokenType.leftBracket;\r\n        this.correspondingBracket[TokenType.rightCurlyBracket] = TokenType.leftCurlyBracket;\r\n        this.correspondingBracket[TokenType.rightSquareBracket] = TokenType.leftSquareBracket;\r\n    }\r\n\r\n    lex(input: string): { tokens: TokenList, errors: Error[], bracketError: string } {\r\n\r\n        this.input = input.replace(\"\\u00a0\", \" \");\r\n        this.tokenList = [];\r\n        this.errorList = [];\r\n        this.bracketError = null;\r\n        this.bracketStack = [];\r\n        this.pos = 0;\r\n        this.line = 1;\r\n        this.column = 1;\r\n        this.nonSpaceLastTokenType = null;\r\n        this.nonSpaceLastToken = null;\r\n\r\n\r\n        if (input.length == 0) {\r\n            return { tokens: this.tokenList, errors: this.errorList, bracketError: null };\r\n        }\r\n\r\n        this.currentChar = input.charAt(0);\r\n\r\n        this.nextChar = input.length > 1 ? input.charAt(1) : endChar;\r\n\r\n\r\n        while (this.currentChar != endChar) {\r\n            this.mainState();\r\n        }\r\n\r\n        if (this.bracketStack.length > 0) {\r\n            let bracketOpen = this.bracketStack.pop();\r\n            let bracketClosed = this.correspondingBracket[bracketOpen];\r\n\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[bracketClosed]);\r\n        }\r\n\r\n        return {\r\n            tokens: this.tokenList,\r\n            errors: this.errorList,\r\n            bracketError: this.bracketError\r\n        };\r\n\r\n    }\r\n\r\n    checkClosingBracket(tt: TokenType) {\r\n        if (this.bracketStack.length == 0) {\r\n            let bracketOpen = this.correspondingBracket[tt];\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[tt]);\r\n            return;\r\n        }\r\n        let openBracket = this.bracketStack.pop();\r\n        let correspondingBracket = this.correspondingBracket[openBracket];\r\n        if (tt != correspondingBracket) {\r\n            this.setBracketError(TokenTypeReadable[openBracket] + \" \" + TokenTypeReadable[correspondingBracket]);\r\n        }\r\n    }\r\n\r\n    setBracketError(error: string) {\r\n        if (this.bracketError == null) this.bracketError = error;\r\n    }\r\n\r\n    next() {\r\n        this.pos++;\r\n        this.currentChar = this.nextChar;\r\n        if (this.pos + 1 < this.input.length) {\r\n            this.nextChar = this.input.charAt(this.pos + 1);\r\n        } else {\r\n            this.nextChar = endChar;\r\n        }\r\n        this.column++; // column of current char\r\n    }\r\n\r\n\r\n\r\n    mainState() {\r\n\r\n        let char = this.currentChar;\r\n\r\n        let specialCharToken = specialCharList[char];\r\n\r\n        if (specialCharToken != null) {\r\n            switch (specialCharToken) {\r\n                case TokenType.leftSquareBracket:\r\n                    if (this.nextChar == \"]\") {\r\n                        this.pushToken(TokenType.leftRightSquareBracket, \"[]\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.leftSquareBracket, \"[\");\r\n                        this.bracketStack.push(specialCharToken);\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.division:\r\n                    if (this.nextChar == '*') {\r\n                        this.lexMultilineComment();\r\n                        return;\r\n                    }\r\n                    this.pushToken(TokenType.division, '/');\r\n                    this.next();\r\n                    return;\r\n                case TokenType.pipe:\r\n                    if (this.nextChar == \"|\") {\r\n                        this.pushToken(TokenType.concatenation, '||');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.pipe, '|');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.lower:\r\n                    if (this.nextChar == \">\") {\r\n                        this.pushToken(TokenType.notEqual, '<>');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.lower, '<');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.rightSquareBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.minus:\r\n                    if (this.isDigit(this.nextChar, 10) && !\r\n                        ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.rightBracket].indexOf(this.nonSpaceLastTokenType) >= 0)\r\n                    ) {\r\n                        this.lexNumber();\r\n                        return;\r\n                    } else if (this.nextChar == '-') {\r\n                        this.lexEndofLineComment();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.minus, '-');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.singleQuote:\r\n                    this.lexStringConstant(\"'\");\r\n                    return;\r\n                case TokenType.doubleQuote:\r\n                    this.lexStringConstant('\"');\r\n                    return;\r\n                case TokenType.newline:\r\n                    this.pushToken(TokenType.newline, '\\n');\r\n                    this.line++;\r\n                    this.column = 0;\r\n                    this.next();\r\n                    return;\r\n                case TokenType.space:\r\n                case TokenType.tab:\r\n                    this.lexSpace();\r\n                    return;\r\n                case TokenType.linefeed:\r\n                    this.next();\r\n                    return;\r\n                case TokenType.at:\r\n                    this.lexAnnotation();\r\n                    return;\r\n                case TokenType.identifierQuote:\r\n                    this.lexQuotedIdentifier();\r\n                    return;\r\n            }\r\n\r\n            this.pushToken(specialCharToken, char);\r\n            this.next();\r\n            return;\r\n\r\n        }\r\n\r\n        // no special char. Number?\r\n\r\n        if (this.isDigit(char, 10)) {\r\n            this.lexNumber();\r\n            return;\r\n        }\r\n\r\n        this.lexIdentifierOrKeyword();\r\n\r\n    }\r\n\r\n\r\n    lexQuotedIdentifier() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let s: string = \"\";\r\n        this.next();\r\n        while(this.currentChar != '`' && this.currentChar != endChar){\r\n            s += this.currentChar;\r\n            this.next();\r\n        }\r\n        if(this.currentChar == endChar){\r\n            this.pushError(\"Innerhalb eines in `` eingeschlossenen Bezeichners wurde das Ende der Datei erreicht.\", s.length + 1, \"error\", line, column);\r\n        } else {\r\n            this.next(); // skip `\r\n            this.pushToken(TokenType.identifier, s, line, column);\r\n        }\r\n    }\r\n\r\n    pushToken(tt: TokenType, text: string | number | boolean, line: number = this.line, column: number = this.column, length: number = (\"\" + text).length) {\r\n        let t: Token = {\r\n            tt: tt,\r\n            value: text,\r\n            position: {\r\n                column: column,\r\n                line: line,\r\n                length: length\r\n            }\r\n        }\r\n\r\n        for (let tripel of this.tokenTypesToMerge) {\r\n            if (tt == tripel.second && this.nonSpaceLastTokenType == tripel.first) {\r\n                let newLength = column - this.nonSpaceLastToken.position.column + length;\r\n                this.nonSpaceLastToken.tt = tripel.merged;\r\n                this.nonSpaceLastToken.position = { column: this.nonSpaceLastToken.position.column, line: line, length: newLength };\r\n                this.nonSpaceLastToken.value = this.nonSpaceLastToken.value + \" \" + text;\r\n\r\n                this.nonSpaceLastTokenType = tripel.merged;\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (!(this.spaceTokens.indexOf(tt) >= 0)) {\r\n            this.nonSpaceLastTokenType = tt;\r\n            this.nonSpaceLastToken = t;\r\n        }\r\n\r\n        this.tokenList.push(t);\r\n    }\r\n\r\n    pushError(text: string, length: number, errorLevel: ErrorLevel = \"error\", line: number = this.line, column: number = this.column) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: {\r\n                line: line,\r\n                column: column,\r\n                length: length\r\n            },\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n\r\n\r\n    isDigit(a: string, base: number) {\r\n        var charCode = a.charCodeAt(0);\r\n\r\n        if (base == 10) return (charCode >= 48 && charCode <= 57); // 0 - 9\r\n        if (base == 2) return (charCode >= 48 && charCode <= 49); // 0, 1\r\n        if (base == 8) return (charCode >= 48 && charCode <= 55); // 0 - 7\r\n        if (base == 16) return (charCode >= 48 && charCode <= 57) || (charCode >= 97 && charCode <= 102) ||\r\n            (charCode >= 65 && charCode <= 70); // 0 - 9 || a - f || A - F\r\n    }\r\n\r\n    lexSpace() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n\r\n        let posStart = this.pos;\r\n        while (this.currentChar == \" \" || this.currentChar == \"\\t\") {\r\n            this.next();\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n        this.pushToken(TokenType.space, this.input.substring(posStart, posEnd), line, column);\r\n        return;\r\n\r\n    }\r\n\r\n    lexCharacterConstant() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n        this.next();\r\n        let char = this.currentChar;\r\n        if (char == \"\\\\\") {\r\n            let escapeChar = EscapeSequenceList[this.nextChar];\r\n            if (escapeChar == null) {\r\n                this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                if (this.nextChar != \"'\") {\r\n                    char = this.nextChar;\r\n                    this.next();\r\n                }\r\n            } else {\r\n                char = escapeChar;\r\n                this.next();\r\n            }\r\n        }\r\n        this.next();\r\n        if (this.currentChar != \"'\") {\r\n            this.pushError(\"Das Ende der char-Konstante wird erwartet (').\", 1);\r\n        } else {\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.charConstant, char, line, column);\r\n\r\n    }\r\n\r\n    lexStringConstant(beginChar: string) {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let text = \"\";\r\n\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\\\\") {\r\n                let escapeChar = EscapeSequenceList[this.nextChar];\r\n                if (escapeChar == null) {\r\n                    this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                } else {\r\n                    char = escapeChar;\r\n                    this.next();\r\n                }\r\n            } else if (char == beginChar) {\r\n                this.next();\r\n                break;\r\n            } else if (char == \"\\n\" || char == endChar) {\r\n                this.pushError('Innerhalb einer String-Konstante wurde das Zeilenende erreicht.', text.length + 1, \"error\", line, column);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        if (beginChar == \"'\") {\r\n            this.pushToken(TokenType.stringConstant, text, line, column, text.length + 2);\r\n        } else {\r\n            this.pushToken(TokenType.identifier, text, line, column, text.length + 2);\r\n            this.tokenList[this.tokenList.length - 1].isDoubleQuotedIdentifier = true;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    lexMultilineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let lastCharWasNewline: boolean = false;\r\n\r\n        let text = \"/*\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"*\" && this.nextChar == \"/\") {\r\n                this.next();\r\n                this.next();\r\n                text += \"*/\";\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                this.pushError(\"Innerhalb eines Mehrzeilenkommentars (/*... */) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            if (char == \"\\n\") {\r\n                this.line++;\r\n                this.column = 0;\r\n                lastCharWasNewline = true;\r\n                text += char;\r\n            } else if (!(lastCharWasNewline && char == \" \")) {\r\n                text += char;\r\n                lastCharWasNewline = false;\r\n            }\r\n\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n    lexEndofLineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let text = \"--\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\n\") {\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                // this.pushError(\"Innerhalb eines Einzeilenkommentars (//... ) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n\r\n    lexNumber() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let sign: number = 1;\r\n        if (this.currentChar == '-') {\r\n            sign = -1;\r\n            this.next();\r\n        }\r\n\r\n        let posStart = this.pos;\r\n\r\n        let firstChar = this.currentChar;\r\n\r\n        this.next();\r\n\r\n        let radix: number = 10;\r\n\r\n        if (firstChar == '0' && (['b', 'x', '0', '1', '2', '3', '4', '5', '6', '7'].indexOf(this.currentChar) >= 0)) {\r\n            if (this.currentChar == 'x') {\r\n                radix = 16;\r\n                this.next();\r\n            } else if (this.currentChar == 'b') {\r\n                radix = 2;\r\n                this.next();\r\n            } else radix = 8;\r\n            posStart = this.pos;\r\n        }\r\n\r\n        while (this.isDigit(this.currentChar, radix)) {\r\n            this.next();\r\n        }\r\n\r\n        let tt = TokenType.integerConstant;\r\n\r\n        if (this.currentChar == \".\") {\r\n            tt = TokenType.floatingPointConstant;\r\n\r\n            this.next();\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n\r\n        }\r\n\r\n        let base = this.input.substring(posStart, this.pos);\r\n\r\n        posStart = this.pos;\r\n        let exponent: number = 0;\r\n\r\n        let hasExponential: boolean = false;\r\n        //@ts-ignore\r\n        if (this.currentChar == \"e\") {\r\n            hasExponential = true;\r\n            this.next();\r\n            let posExponentStart: number = this.pos;\r\n\r\n            //@ts-ignore\r\n            if (this.currentChar == '-') {\r\n                this.next();\r\n            }\r\n\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n            let exponentString = this.input.substring(posExponentStart, this.pos);\r\n            exponent = Number.parseInt(exponentString);\r\n        }\r\n\r\n        if (this.currentChar == 'd' || this.currentChar == 'f') {\r\n            tt == TokenType.floatingPointConstant;\r\n            this.next();\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n        }\r\n\r\n        let value: number = (tt == TokenType.integerConstant) ? Number.parseInt(base, radix) : Number.parseFloat(base);\r\n        value *= sign;\r\n        if (exponent != 0) value *= Math.pow(10, exponent);\r\n\r\n        this.pushToken(tt, value, line, column);\r\n\r\n    }\r\n\r\n    lexAnnotation() {\r\n        let line = this.line;\r\n        let column = this.column - 1;\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n        this.next(); // skip@\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n        this.pushToken(TokenType.at, text, line, column, text.length + 1);\r\n    }\r\n\r\n    lexIdentifierOrKeyword() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n\r\n        let tt = keywordList[text.toLowerCase()];\r\n        if (tt != null && typeof tt == \"number\") {\r\n\r\n            switch (tt) {\r\n                case TokenType.true:\r\n                    this.pushToken(TokenType.booleanConstant, true, line, column);\r\n                    break;\r\n                case TokenType.false:\r\n                    this.pushToken(TokenType.booleanConstant, false, line, column);\r\n                    break;\r\n                default:\r\n                    this.pushToken(tt, text, line, column);\r\n                    break;\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        this.pushToken(TokenType.identifier, text, line, column);\r\n\r\n    }\r\n\r\n    isSpace(char: string): boolean {\r\n        return char == \" \" || char == \"\\n\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport function errorListToString(errorList: Error[]): string {\r\n    let s = \"\";\r\n\r\n    for (let error of errorList) {\r\n\r\n        s += \"Z \" + error.position.line + \", S \" + error.position.column + \": \";\r\n        s += error.text + \"<br>\";\r\n\r\n    }\r\n\r\n    return s;\r\n}","import { Lexer } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Token, TokenList, TokenType, tokenListToString } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class Formatter implements monaco.languages.DocumentFormattingEditProvider,\r\n    monaco.languages.OnTypeFormattingEditProvider {\r\n\r\n    autoFormatTriggerCharacters: string[] = ['\\n'];\r\n\r\n    displayName?: string = \"Java-Autoformat\";\r\n\r\n\r\n    constructor(\r\n        // private main: Main\r\n    ) {\r\n\r\n    }\r\n\r\n    init() {\r\n        monaco.languages.registerDocumentFormattingEditProvider('myJava', this);\r\n        monaco.languages.registerOnTypeFormattingEditProvider('myJava', this);\r\n    }\r\n\r\n    provideOnTypeFormattingEdits(model: monaco.editor.ITextModel, position: monaco.Position, ch: string, options: monaco.languages.FormattingOptions, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n    deleteOverlappingRanges(edits: monaco.languages.TextEdit[]) {\r\n        for (let i = 0; i < edits.length - 1; i++) {\r\n            let e = edits[i];\r\n            let e1 = edits[i + 1];\r\n            if (e.range.endLineNumber < e1.range.startLineNumber) continue;\r\n            if (e.range.endLineNumber == e1.range.startLineNumber) {\r\n                if (e.range.endColumn >= e1.range.startColumn) {\r\n                    edits.splice(i + 1, 1);\r\n                } else {\r\n                    if (e.range.endColumn == 0 && e.text.length > 0 && e1.range.startColumn == 1 && e1.range.endColumn > e1.range.startColumn && e1.text == \"\") {\r\n                        let delta = e.text.length - (e1.range.endColumn - e1.range.startColumn);\r\n                        if (delta > 0) { \r\n                            e.text = e.text.substr(0, delta);\r\n                            edits.splice(i+1, 1);\r\n                        }\r\n                        else if (delta < 0)\r\n                        { \r\n                            //@ts-ignore\r\n                            e1.range.endColumn = e1.range.startColumn - delta;\r\n                            edits.splice(i, 1);\r\n                            i--;\r\n\r\n                         }\r\n                        else {\r\n                            edits.splice(i, 2);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    provideDocumentFormattingEdits(model: monaco.editor.ITextModel,\r\n        options: monaco.languages.FormattingOptions,\r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n\r\n    format(model: monaco.editor.ITextModel): monaco.languages.TextEdit[] {\r\n\r\n        let edits: monaco.languages.TextEdit[] = [];\r\n\r\n        // if (this.main.currentWorkspace == null || this.main.currentWorkspace.currentlyOpenModule == null) {\r\n        //     return [];\r\n        // }\r\n\r\n        // let text = this.main.monaco_editor.getValue({ preserveBOM: false, lineEnding: \"\\n\" });\r\n\r\n        let text = model.getValue(monaco.editor.EndOfLinePreference.LF);\r\n\r\n        let tokenlist = new Lexer().lex(text).tokens;\r\n\r\n        // let tokenlist = this.main.currentWorkspace.currentlyOpenModule.tokenList;\r\n\r\n        if (tokenlist == null) return [];\r\n\r\n        // TODO:\r\n        // { at the end of line, with one space before; followed only by spaces and \\n\r\n        // indent lines according to { and }\r\n        // Beware: int i[] = { ... }\r\n        // exactly one space before/after binary operators\r\n        // no space after ( and no space before )\r\n        // (   ) -> ()\r\n        // (  ()) -> (())\r\n        // (()  ) -> (())\r\n\r\n        let lastNonSpaceToken: Token = null;\r\n        let indentLevel = 0;\r\n        let tabSize = 3;\r\n        let curlyBracesOpenAtLines: number[] = [];\r\n        let indentLevelAtSwitchStatements: number[] = [];\r\n        let switchHappend: boolean = false;\r\n        let lastTokenWasNewLine: number = 0;\r\n        let roundBracketsOpen: number = 0;\r\n\r\n        for (let i = 0; i < tokenlist.length; i++) {\r\n\r\n            let t = tokenlist[i];\r\n            lastTokenWasNewLine--;\r\n\r\n            switch (t.tt) {\r\n\r\n                case TokenType.leftCurlyBracket:\r\n                    if (switchHappend) {\r\n                        switchHappend = false;\r\n                        indentLevelAtSwitchStatements.push(indentLevel + 2);\r\n                        indentLevel++;\r\n                    }\r\n                    indentLevel++;\r\n                    curlyBracesOpenAtLines.push(t.position.line);\r\n                    if (lastNonSpaceToken != null) {\r\n                        let tt = lastNonSpaceToken.tt;\r\n                        if (tt == TokenType.rightBracket || tt == TokenType.identifier || tt == TokenType.leftRightSquareBracket) {\r\n                            this.replaceBetween(lastNonSpaceToken, t, edits, \" \");\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let token1 = tokenlist[i + 1];\r\n                        if (token1.tt != TokenType.newline && token1.tt != TokenType.space) {\r\n                            this.insertSpaces(edits, token1.position.line, token1.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    if (indentLevelAtSwitchStatements[indentLevelAtSwitchStatements.length - 1] == indentLevel) {\r\n                        indentLevelAtSwitchStatements.pop();\r\n                        indentLevel--;\r\n                        // if(t.position.column >= 3){\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                        // }    \r\n                    }\r\n                    indentLevel--;\r\n                    let openedAtLine = curlyBracesOpenAtLines.pop();\r\n                    if (openedAtLine != null && openedAtLine != t.position.line) {\r\n                        if (lastNonSpaceToken != null && lastNonSpaceToken.position.line == t.position.line) {\r\n                            this.replace(edits, t.position, t.position, \"\\n\" + \" \".repeat(indentLevel * tabSize));\r\n                        }\r\n                    } else {\r\n                        if (i > 0) {\r\n                            let token1 = tokenlist[i - 1];\r\n                            if (token1.tt != TokenType.space && token1.tt != TokenType.newline) {\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    roundBracketsOpen++;\r\n                    if (i < tokenlist.length - 2) {\r\n                        let nextToken1 = tokenlist[i + 1];\r\n                        let nextToken2 = tokenlist[i + 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                            i++;\r\n                            if (nextToken2.tt == TokenType.rightBracket) {\r\n                                i++;\r\n                                roundBracketsOpen--;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt == TokenType.space && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line, lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    roundBracketsOpen--;\r\n                    if (i > 1) {\r\n                        let nextToken1 = tokenlist[i - 1];\r\n                        let nextToken2 = tokenlist[i - 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.newline:\r\n                    lastTokenWasNewLine = 2;\r\n                    if (i < tokenlist.length - 2) {\r\n\r\n                        let lastTokenIsOperator = this.isBinaryOperator(lastNonSpaceToken?.tt);\r\n                        let nextTokenIsOperator = this.isBinaryOperator(this.getNextNonSpaceToken(i, tokenlist).tt);\r\n\r\n                        let beginNextLine = tokenlist[i + 1];\r\n                        let token2 = tokenlist[i + 2];\r\n                        let currentIndentation = 0;\r\n\r\n                        if (beginNextLine.tt == TokenType.newline) {\r\n                            break;\r\n                        }\r\n\r\n                        let delta: number = 0;\r\n                        if (beginNextLine.tt == TokenType.space) {\r\n                            if (token2.tt == TokenType.newline) {\r\n                                break;\r\n                            }\r\n                            currentIndentation = beginNextLine.position.length;\r\n                            i++;\r\n                            if (token2.tt == TokenType.rightCurlyBracket) {\r\n                                delta = -1;\r\n                            }\r\n                        }\r\n\r\n                        if (beginNextLine.tt == TokenType.rightCurlyBracket) {\r\n                            delta = -1;\r\n                            // indentLevel--;\r\n                            // curlyBracesOpenAtLines.pop();\r\n                            // lastNonSpaceToken = beginNextLine;\r\n                            // i++;\r\n                        }\r\n\r\n                        if(nextTokenIsOperator || lastTokenIsOperator) delta = 1;\r\n\r\n                        let il = indentLevel + delta;\r\n                        if(roundBracketsOpen > 0){\r\n                            il++;\r\n                        }\r\n                        if (il < 0) il = 0;\r\n\r\n                        let correctIndentation = il * tabSize;\r\n\r\n                        if (correctIndentation > currentIndentation) {\r\n                            this.insertSpaces(edits, t.position.line + 1, 0, correctIndentation - currentIndentation);\r\n                        } else if (correctIndentation < currentIndentation) {\r\n                            this.deleteSpaces(edits, t.position.line + 1, 0, currentIndentation - correctIndentation);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.space:\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment) {\r\n                            if (i > 0) {\r\n                                let lastToken = tokenlist[i - 1];\r\n                                if (lastToken.tt != TokenType.newline) {\r\n                                    if (t.position.length > 1) {\r\n                                        this.deleteSpaces(edits, t.position.line, t.position.column, t.position.length - 1);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.comma:\r\n                case TokenType.semicolon:\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt != TokenType.newline && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.tt == TokenType.space && lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line,\r\n                                    lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment && nextToken.tt != TokenType.space && nextToken.tt != TokenType.newline) {\r\n                            this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightSquareBracket:\r\n                    if (lastNonSpaceToken != null && lastNonSpaceToken.tt == TokenType.leftSquareBracket) {\r\n                        this.replaceBetween(lastNonSpaceToken, t, edits, \"\");\r\n\r\n                    }\r\n                    break;\r\n\r\n            }\r\n\r\n            // binary operator?\r\n            if (this.isBinaryOperator(t.tt)) {\r\n\r\n                let lowerGeneric = t.tt == TokenType.lower && this.lowerBelongsToGenericExpression(i, tokenlist);\r\n                let greaterGeneric = t.tt == TokenType.greater && this.greaterBelongsToGenericExpression(i, tokenlist);\r\n\r\n                if (lastTokenWasNewLine <= 0 && lastNonSpaceToken != null && [TokenType.leftBracket, TokenType.comma].indexOf(lastNonSpaceToken.tt) < 0) {\r\n\r\n                    if (i > 0) {\r\n                        let tokenBefore = tokenlist[i - 1];\r\n                        let spaces = (lowerGeneric || greaterGeneric) ? 0 : 1;\r\n                        if (tokenBefore.tt == TokenType.space) {\r\n                            if (tokenBefore.position.length != spaces) {\r\n                                this.insertSpaces(edits, tokenBefore.position.line,\r\n                                    tokenBefore.position.column, spaces - tokenBefore.position.length);\r\n                            }\r\n                        } else {\r\n                            if (spaces == 1)\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        let spaces = (lowerGeneric) ? 0 : 1;\r\n                        if (nextToken.tt == TokenType.space) {\r\n                            if (greaterGeneric && i < tokenlist.length - 2 && tokenlist[i + 2].tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (nextToken.position.length != spaces) {\r\n                                this.insertSpaces(edits, nextToken.position.line,\r\n                                    nextToken.position.column, spaces - nextToken.position.length);\r\n                            }\r\n                        } else {\r\n                            if (greaterGeneric && nextToken.tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (spaces == 1) this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            if (t.tt != TokenType.space && t.tt != TokenType.newline) {\r\n                lastNonSpaceToken = t;\r\n            }\r\n\r\n        }\r\n\r\n        this.deleteOverlappingRanges(edits);\r\n\r\n        return edits;\r\n\r\n    }\r\n    getNextNonSpaceToken(currentIndex: number, tokenlist: TokenList):  Token {\r\n\r\n        if(currentIndex == tokenlist.length - 1) return tokenlist[currentIndex];\r\n\r\n        let j = currentIndex + 1;\r\n        while(j < tokenlist.length - 1 && (tokenlist[j].tt == TokenType.space )){\r\n            j++;\r\n        }\r\n        return tokenlist[j];\r\n\r\n    }\r\n\r\n    lowerBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position + 1;\r\n        while (i < tokenlist.length) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.greater) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i++;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    greaterBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position - 1;\r\n        while (i >= 0) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.lower) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i--;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isBinaryOperator(token: TokenType) {\r\n        return token != null && token >= TokenType.modulo && token <= TokenType.equal;\r\n    }\r\n\r\n    private replaceBetween(lastNonSpaceToken: Token, t: Token, edits: monaco.languages.TextEdit[], text: string) {\r\n        let positionFrom = {\r\n            line: lastNonSpaceToken.position.line,\r\n            column: lastNonSpaceToken.position.column + lastNonSpaceToken.position.length\r\n        };\r\n        let positionTo = {\r\n            line: t.position.line,\r\n            column: t.position.column\r\n        };\r\n        if (positionFrom.line != positionTo.line ||\r\n            positionTo.column - positionFrom.column != text.length) {\r\n            this.replace(edits, positionFrom, positionTo, text);\r\n        }\r\n    }\r\n\r\n    deleteSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column + numberOfSpaces + (column == 0 ? 1 : 0),\r\n                endLineNumber: line\r\n            },\r\n            text: \"\"\r\n        });\r\n    }\r\n\r\n    insertSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n\r\n        if (numberOfSpaces < 0) {\r\n            this.deleteSpaces(edits, line, column, -numberOfSpaces);\r\n            return;\r\n        }\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column,\r\n                endLineNumber: line\r\n            },\r\n            text: \" \".repeat(numberOfSpaces)\r\n        });\r\n    }\r\n\r\n    replace(edits: monaco.languages.TextEdit[], positionFrom: { line: number; column: number; }, positionTo: { line: number; column: number; }, text: string) {\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: positionFrom.column,\r\n                startLineNumber: positionFrom.line,\r\n                endColumn: positionTo.column,\r\n                endLineNumber: positionTo.line\r\n            },\r\n            text: text\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\n\r\nexport type Theme = {\r\n    name: string,\r\n    monacoTheme: string,\r\n    cssColors: { [color: string]: string }\r\n}\r\n\r\nexport class ThemeManager {\r\n\r\n    themes: Theme[] = [];\r\n\r\n    constructor() {\r\n        this.initThemes();\r\n    }\r\n\r\n    switchTheme(name: string) {\r\n        for (let theme of this.themes) {\r\n            if (theme.name == name) {\r\n                this.internalSwitchTheme(theme);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    internalSwitchTheme(theme: Theme) {\r\n        monaco.editor.setTheme(theme.monacoTheme);\r\n\r\n        let root = document.documentElement;\r\n        for (const key of Object.keys(theme.cssColors)) {\r\n            const value = theme.cssColors[key]\r\n\r\n            root.style.setProperty(key, value);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    initThemes() {\r\n\r\n        this.themes.push({\r\n            name: \"dark\",\r\n            monacoTheme: \"myCustomThemeDark\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"#1e1e1e\",\r\n                \"--backgroundLight\": \"#252526\",\r\n                \"--backgroundHeading\": \"#37373d\",\r\n                \"--backgroundSelected\": \"#2a2d2e\",\r\n                \"--fontColorNormal\": \"#c2cccc\",\r\n                \"--fontColorLight\": \"#e7e7e7\",\r\n                \"--slider\": \"#414141\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#1e1e1e\",\r\n                \"--scrollbar-thumb\": \"#3e3e3e\",\r\n                \"--scrollbar-thumb-hover\": \"#5e5e5e\",\r\n                \"--scrollbar-thumb-active\": \"#7e7e7e\",\r\n                \"--submenu-hover\": \"#094771\",\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#616162\",\r\n                \"--file-hover\": \"hsla(0, 0%, 38%, 0.125)\",\r\n                \"--file-active\": \"#094771\",\r\n                \"--file-active-hover\": \"rgba(9, 71, 113, 0.827)\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"blue\",\r\n                \"--contextmenu-background\": \"#3c3c3c\",\r\n                \"--contextmenu-color\": \"rgb(212,212,212)\",\r\n                \"--contextmenu-hover-background\": \"#094771\",\r\n                \"--contextmenu-hover-color\": \"#ffffff\",\r\n                \"--error-filename\": \"#2a709e\",\r\n                \"--error-line-ative\": \"#094771\",\r\n                \"--error-line-hover\": \"rgba(96, 96, 96, 0.125)\",\r\n                \"--error-position\": \"#c0802d\",\r\n                \"--linecolumn\": \"#14c714\",\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#2b2b7d2f\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"rgb(85,85,85)\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#383838\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#252526\",\r\n                \"--editorTooltip-border\": \"#454545\",\r\n\r\n                \"--renameInput-color\": \"#ffffff\",\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"white\",\r\n                \"--bottomdiv-tabheading-active\": \"rgb(97,97,255)\",\r\n                \"--noErrorMessage\": \"rgb(37, 211, 37)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"#1e1e1e\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"white\",\r\n                \"--consoleEntryIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"white\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 51, 51)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--deValue\": \"white\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#383838\",\r\n                \"--helper-border-color\": \"#d4d4d4\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#ffffff\",\r\n                \"--runInputColor\": \"#ffffff\",\r\n                \"--runBackgroundColor\": \"rgba(255, 255, 255, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n        let highlightColor = \"#8080ff\";\r\n\r\n        this.themes.push({\r\n            name: \"light\",\r\n            monacoTheme: \"myCustomThemeLight\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"white\",\r\n                \"--backgroundLight\": \"#f3f3f3\",\r\n                \"--backgroundHeading\": \"#dcdcdc\",\r\n                \"--backgroundSelected\": \"#e8e8e8\",\r\n                \"--fontColorNormal\": \"#756161\",\r\n                \"--fontColorLight\": \"#756161\",\r\n                \"--slider\": \"#b0b0b0\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#e3e3e3\",\r\n                \"--scrollbar-thumb\": \"#bababa\",\r\n                \"--scrollbar-thumb-hover\": \"#8e8e8e\",\r\n                \"--scrollbar-thumb-active\": \"#616161\",\r\n                \"--submenu-hover\": highlightColor,\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#cfcfcf\",\r\n                \"--file-hover\": \"#e8e8e8\",\r\n                \"--file-active\": highlightColor,\r\n                \"--file-active-hover\": \"#a0a0ff\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"white\",\r\n                \"--contextmenu-background\": \"white\",\r\n                \"--contextmenu-color\": \"#756161\",\r\n                \"--contextmenu-hover-background\": highlightColor,\r\n                \"--contextmenu-hover-color\": \"#a0a0ff\",\r\n                \"--error-filename\": \"#ff0000\",\r\n                \"--error-line-ative\": \"#ffa0a0\",\r\n                \"--error-line-hover\": \"#ffc0c0\",\r\n                \"--error-position\": \"#804040\",\r\n                \"--linecolumn\": \"#14c714\", // TODO\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#babaec80\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"#c0c0c0\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#e0e0e0\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#e0e0e0\",\r\n                \"--editorTooltip-border\": \"#9d9d9d\",\r\n\r\n                \"--renameInput-color\": \"#000000\",\r\n\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"#424242\",\r\n                \"--bottomdiv-tabheading-active\": \"#424242\",\r\n                \"--noErrorMessage\": \"rgb(17, 180, 17)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"white\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"#0000a0\",\r\n                \"--consoleEntryIdentifier\": \"black\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"#756161\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 21, 21)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"black\",\r\n                \"--deValue\": \"#0000a0\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#f3f3f3\",\r\n                \"--helper-border-color\": \"#606060\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#303030\",\r\n                \"--runInputColor\": \"#000000\",\r\n                \"--runBackgroundColor\": \"rgba(0, 0, 0, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { TokenType } from \"../lexer/Token.js\";\r\n\r\ntype CheckFunction = (columnIdentifier: string, parameterValues: number[]) => string;\r\ntype OutputFunction = (value: any, parameterValues: number[]) => string;\r\n\r\nexport abstract class SQLType {\r\n\r\n    abstract canCastTo(type2: SQLType): boolean;\r\n\r\n    abstract getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType;\r\n\r\n    abstract getUnaryResultType(operator: TokenType): SQLType;\r\n\r\n    abstract getBinaryResult(operator: TokenType, value1: any, value2: any): any;\r\n\r\n    abstract toString(): string;\r\n\r\n    abstract getBaseTypeName(): string;\r\n\r\n}\r\n\r\nexport class SQLBaseType extends SQLType {\r\n    // Map<tokenType, Map<SecondType, ResultType>>\r\n    binaryResultTypes: Map<TokenType, Map<SQLBaseType, SQLBaseType>> = new Map();\r\n\r\n    unaryOperators: TokenType[] = [];\r\n\r\n    static baseTypes: SQLBaseType[] = [];\r\n    static baseTypeMap: Map<string, SQLBaseType> = new Map();\r\n\r\n    public canCastToList: string[];\r\n\r\n    constructor(public name: string, public parameterDescriptions: string[],\r\n        public checkFunction: CheckFunction, public outputFunction: OutputFunction, canCastToList: string[]) {\r\n        super();\r\n        this.canCastToList = canCastToList.slice(0);\r\n        let ownIndex = this.canCastToList.indexOf(name);\r\n        if(ownIndex >= 0) this.canCastToList.splice(ownIndex, 1);\r\n    }\r\n\r\n    static fromConstantType(tt: TokenType): SQLBaseType {\r\n        switch (tt) {\r\n            case TokenType.stringConstant:\r\n                return this.baseTypeMap.get(\"text\");\r\n            case TokenType.integerConstant:\r\n                return this.baseTypeMap.get(\"integer\");\r\n            case TokenType.floatingPointConstant:\r\n                return this.baseTypeMap.get(\"float\");\r\n            case TokenType.charConstant:\r\n                return this.baseTypeMap.get(\"text\");\r\n            case TokenType.booleanConstant:\r\n                return this.baseTypeMap.get(\"boolean\");\r\n            case TokenType.keywordNull:\r\n                return this.baseTypeMap.get(\"null\");\r\n        \r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    getBaseTypeName(): string {\r\n        return this.name;\r\n    }\r\n\r\n    toString(): string {\r\n        return this.name;\r\n    }\r\n\r\n    static getBaseType(name: string) {\r\n        if(name == 'char') name = 'varchar';\r\n        return this.baseTypeMap.get(name.toLocaleLowerCase());\r\n    }\r\n\r\n    static addBaseTypes(baseTypes: SQLBaseType[]) {\r\n        SQLBaseType.baseTypes = SQLBaseType.baseTypes.concat(baseTypes);\r\n        baseTypes.forEach(t => SQLBaseType.baseTypeMap.set(t.name, t));\r\n    }\r\n\r\n    addBinaryOperation(tokenType: TokenType | TokenType[], secondType: SQLBaseType, resultType: SQLBaseType, isCommutative: boolean = true) {\r\n\r\n        if (!Array.isArray(tokenType)) tokenType = [tokenType];\r\n\r\n        tokenType.forEach(t => {\r\n            let map: Map<SQLBaseType, SQLBaseType> = this.binaryResultTypes.get(t);\r\n            if (map == null) {\r\n                map = new Map();\r\n                this.binaryResultTypes.set(t, map);\r\n            }\r\n            map.set(secondType, resultType);\r\n            if (isCommutative && secondType != this) {\r\n                secondType.addBinaryOperation(t, this, resultType, false);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    canCastTo(type2: SQLType): boolean {\r\n\r\n        let bt2: SQLBaseType = type2 instanceof SQLBaseType ? type2 : type2[\"baseType\"];\r\n\r\n        return this.canCastToList.indexOf(bt2.name) >= 0 || this.name == bt2.name;\r\n\r\n    }\r\n\r\n    getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType {\r\n\r\n\r\n        let map = this.binaryResultTypes.get(operator);\r\n        if (map == null) return null;\r\n\r\n        let bt2: SQLBaseType = secondType instanceof SQLBaseType ? secondType : secondType[\"baseType\"];\r\n\r\n        return map.get(bt2);\r\n\r\n    }\r\n\r\n    getUnaryResultType(operator: TokenType): SQLType {\r\n        if([TokenType.isNull, TokenType.isNotNull].indexOf(operator) >= 0) return booleanType;\r\n        if(this.unaryOperators.indexOf(operator)>= 0) return this;\r\n    }\r\n\r\n    getBinaryResult(operator: TokenType, value1: any, value2: any): any {\r\n        switch (operator) {\r\n            case TokenType.concatenation:\r\n                if (value1 != null && value2 != null) return value1 + value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.plus:\r\n                if (value1 != null && value2 != null) return value1 + value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.minus:\r\n                if (value1 != null && value2 != null) return value1 - value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.multiplication:\r\n                if (value1 != null && value2 != null) return value1 * value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.division:\r\n                if (value1 != null && value2 != null) return value1 * value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.keywordAnd:\r\n                if (value1 != null && value2 != null) return value1 * value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.keywordOr:\r\n                if (value1 != null && value2 != null) return Math.max(value1, value2);\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.lower:\r\n                if (value1 != null && value2 != null) return value1 < value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.greater:\r\n                if (value1 != null && value2 != null) return value1 >= value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.lowerOrEqual:\r\n                if (value1 != null && value2 != null) return value1 <= value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.greaterOrEqual:\r\n                if (value1 != null && value2 != null) return value1 >= value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.equal:\r\n                return value1 == value2;\r\n            case TokenType.notEqual:\r\n                return value1 != value2;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nlet tens: number[] = [1, 10, 100, 1000, 100000, 100000, 1000000, 10000000, 100000000, 1000000000];\r\n\r\nexport class SQLDerivedType extends SQLType {\r\n\r\n    name: string;\r\n\r\n    constructor(public baseType: SQLBaseType, public parameterValues: number[]) {\r\n        super();\r\n        let parameters = parameterValues.join(\", \");\r\n        this.name = baseType.name + \"(\" + parameters + \")\";\r\n    }\r\n\r\n    toString(): string {\r\n        return this.name;\r\n    }\r\n\r\n    getBaseTypeName(): string {\r\n        return this.baseType.name;\r\n    }\r\n\r\n\r\n    canCastTo(type2: SQLType): boolean {\r\n\r\n        let bt2: SQLBaseType = type2 instanceof SQLBaseType ? type2 : type2[\"baseType\"];\r\n\r\n        return this.baseType.canCastToList.indexOf(bt2.name) >= 0 || this.baseType.name == bt2.name;\r\n\r\n    }\r\n\r\n    getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType {\r\n\r\n\r\n        let map = this.baseType.binaryResultTypes.get(operator);\r\n        if (map == null) return null;\r\n\r\n        let bt2: SQLBaseType = secondType instanceof SQLBaseType ? secondType : secondType[\"baseType\"];\r\n\r\n        let returnBaseType = map.get(bt2);\r\n\r\n        if (this.baseType == bt2 && this.baseType == returnBaseType && secondType instanceof SQLDerivedType) {\r\n            if (this.baseType.name == \"varchar\" || operator == TokenType.concatenation) {\r\n                return new SQLDerivedType(this.baseType, [this.parameterValues[0] + secondType.parameterValues[0]]);\r\n            }\r\n            if (this.baseType.name == \"decimal\") {\r\n                return new SQLDerivedType(this.baseType, [Math.max(this.parameterValues[0], secondType.parameterValues[0]), Math.max(this.parameterValues[1], secondType.parameterValues[1])]);\r\n            }\r\n        }\r\n\r\n        return map.get(bt2);\r\n\r\n    }\r\n\r\n    getUnaryResultType(operator: TokenType): SQLType {\r\n        return this.baseType.getUnaryResultType(operator);\r\n    }\r\n\r\n    getBinaryResult(operator: TokenType, value1: any, value2: any): any {\r\n        let result = this.baseType.getBinaryResult(operator, value1, value2);\r\n        if (this.name = \"varchar\") return result == null ? null : (\"\" + result).substr(0, this.parameterValues[0]);\r\n        if (this.name == \"decimal\") {\r\n            if (result == null) return null;\r\n            return Math.round(result * tens[this.parameterValues[1]]) / tens[this.parameterValues[1]];\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nlet textTypes = [\"varchar\", \"text\" ,\"tinytext\", \"mediumtext\", \"longtext\"];\r\n\r\nvar varcharType = new SQLBaseType(\"varchar\", [\"Maximale Länge\"], (ci, pv) => `check(length(${ci}) <= ${pv[0]})`,\r\n    (v: string, pv) => v.substring(0, pv[0]), textTypes);\r\n\r\nvar textType = new SQLBaseType(\"text\", [\"Maximale Länge\"], (ci, pv) => \"\", (v: string, pv) => v, textTypes.concat([\"date\", \"datetime\"]));\r\nvar tinyTextType = new SQLBaseType(\"tinyText\", [], (ci, pv) => \"\", (v: string, pv) => v, textTypes);\r\nvar mediumTextType = new SQLBaseType(\"mediumText\", [], (ci, pv) => \"\", (v: string, pv) => v, textTypes);\r\nvar longTextType = new SQLBaseType(\"longText\", [], (ci, pv) => \"\", (v: string, pv) => v, textTypes);\r\n\r\nlet floatTypes = [\"decimal\", \"numeric\", \"double\", \"real\", \"float\"];\r\n\r\nvar decimalType = new SQLBaseType(\"decimal\", [\"Gesamtzahl der Stellen\", \"Nachkommastellen\"], (ci, pv) => \"\",\r\n    (v: number, pv) => { let vk = Math.trunc(v); let nk = v - vk; return \"\" + vk + (pv[1] > 0 ? \".\" + Math.round(nk * tens[pv[1]]) : \"\") },\r\n    floatTypes);\r\nvar numericType = new SQLBaseType(\"numeric\", [\"Gesamtzahl der Stellen\", \"Nachkommastellen\"], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\nvar doubleType = new SQLBaseType(\"double\", [\"Gesamtzahl der Stellen\", \"Nachkommastellen\"], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\nvar realType = new SQLBaseType(\"real\", [], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\nvar floatType = new SQLBaseType(\"float\", [], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\n\r\nlet inttypes = [\"int\", \"integer\", \"tinyint\", \"smallint\", \"mediumint\", \"bigint\"];\r\nlet numberTypes = inttypes.concat(floatTypes);\r\n\r\nvar intType = new SQLBaseType(\"int\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar integerType = new SQLBaseType(\"integer\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar tinyIntType = new SQLBaseType(\"tinyint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar smallIntType = new SQLBaseType(\"smallint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar mediumIntType = new SQLBaseType(\"mediumint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar bigIntType = new SQLBaseType(\"bigint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\n\r\nvar dateType = new SQLBaseType(\"date\", [], (ci, pv) => `check(isDate(${ci}))`, (v: string, pv) => v, []);\r\nvar dateTimeType = new SQLBaseType(\"datetime\", [], (ci, pv) => `check(isDateTime(${ci}))`, (v: string, pv) => v, [\"timestamp\"]);\r\nvar timestampType = new SQLBaseType(\"timestamp\", [], (ci, pv) => `check(isDateTime(${ci}))`, (v: string, pv) => v, [\"datetime\"]);\r\n\r\nvar booleanType = new SQLBaseType(\"boolean\", [], (ci, pv) => `check(${ci} == 0 or ${ci} == 1)`, (v, pv) => v == 1 ? \"true\" : \"false\",\r\n    [\"varchar\", \"text\", \"decimal\", \"numeric\"]);\r\n\r\nvar nullType = new SQLBaseType(\"null\", [], (ci, pv) => \"\", (v, pv) => v,\r\n    []);\r\n\r\nlet numericTypes = [decimalType, numericType, doubleType, realType, floatType, intType, integerType, tinyIntType, smallIntType, mediumIntType, bigIntType];\r\n\r\nlet baseTypes = [varcharType, textType, tinyTextType, mediumTextType, longTextType,\r\n    dateType, dateTimeType, timestampType, booleanType, nullType].concat(numericTypes);\r\n\r\nSQLBaseType.addBaseTypes(baseTypes);\r\n\r\nvarcharType.addBinaryOperation(TokenType.concatenation, varcharType, varcharType);\r\nvarcharType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\ntextType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\nvarcharType.addBinaryOperation(TokenType.keywordLike, varcharType, booleanType);\r\nvarcharType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\ntextType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\n\r\nlet numericBinaryOperators: TokenType[] = [TokenType.plus, TokenType.minus, TokenType.multiplication, TokenType.division, TokenType.modulo];\r\nlet comparisonOperators: TokenType[] = [TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual];\r\n\r\nfor (let i = 0; i < numericTypes.length; i++) {\r\n    for (let j = i; j < numericTypes.length; j++) {\r\n        numericTypes[i].addBinaryOperation(numericBinaryOperators, numericTypes[j], numericTypes[j]);\r\n        numericTypes[i].addBinaryOperation(comparisonOperators, numericTypes[j], booleanType);\r\n    }\r\n    numericTypes[i].unaryOperators = [TokenType.minus];\r\n}\r\n\r\ndecimalType.addBinaryOperation(numericBinaryOperators, decimalType, decimalType);\r\n\r\nlet characterTypes = [varcharType, textType];\r\nfor (let i = 0; i < characterTypes.length; i++) {\r\n    for (let j = i; j < characterTypes.length; j++) {\r\n        characterTypes[i].addBinaryOperation(TokenType.concatenation, characterTypes[j], characterTypes[j]);\r\n        characterTypes[i].addBinaryOperation(comparisonOperators, characterTypes[j], booleanType);\r\n    }\r\n}\r\nvarcharType.addBinaryOperation(TokenType.concatenation, varcharType, varcharType);\r\n\r\nlet booleanOperations = [TokenType.keywordAnd, TokenType.keywordOr];\r\nbooleanType.addBinaryOperation(booleanOperations, booleanType, booleanType);\r\n\r\nbooleanType.unaryOperators = [TokenType.keywordNot];\r\n\r\nbaseTypes.forEach(bt => bt.unaryOperators = bt.unaryOperators.concat([TokenType.isNull, TokenType.isNotNull]));","import { param, timers } from \"jquery\";\r\nimport { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenList, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { ASTNode, BracketsNode, SelectNode, TermNode, TableOrSubqueryNode, TableNode, SubqueryNode, GroupByNode, OrderByNode, LimitNode, IdentifierNode, DotNode, ListNode, ColumnNode, InsertNode, ConstantNode, UnaryOpNode, CreateTableNode, CreateTableColumnNode, ForeignKeyInfo, UpdateNode, DeleteNode, DropTableNode, AlterTableNode, AlterTableKind } from \"./AST.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { Column } from \"./SQLTable.js\";\r\nimport { SQLBaseType } from \"./SQLTypes.js\";\r\n\r\ntype ASTNodes = ASTNode[];\r\n\r\ntype TokenTreeNode = {\r\n    type: \"sequence\" | \"alternatives\",\r\n    children: (TokenTreeNode | TokenType)[]\r\n} | TokenType;\r\n\r\nexport type SQLStatement = {\r\n    ast: ASTNode,\r\n    from: TextPosition,\r\n    to: TextPosition,\r\n    hasErrors: boolean,\r\n    acceptedBySQLite: boolean,\r\n    sql?: string,\r\n    sqlCleaned?: string\r\n}\r\n\r\n\r\nexport class Parser {\r\n\r\n    static operatorPrecedence: TokenType[][] = [\r\n        [TokenType.keywordOr], [TokenType.keywordAnd],\r\n        [TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual, TokenType.keywordLike],\r\n        [TokenType.concatenation, TokenType.plus, TokenType.minus], [TokenType.multiplication, TokenType.division, TokenType.modulo],\r\n        [TokenType.keywordIn, TokenType.keywordNotIn]\r\n    ];\r\n\r\n    module: Module;\r\n\r\n    pos: number;\r\n    tokenList: TokenList;\r\n\r\n    errorList: Error[];\r\n\r\n    lookahead = 4;\r\n    ct: Token[];\r\n    lastToken: Token;\r\n    cct: Token;\r\n    tt: TokenType;\r\n    position: TextPosition;\r\n    lastComment: Token;\r\n\r\n    endToken: Token = {\r\n        position: { line: 0, column: 0, length: 1 },\r\n        tt: TokenType.endofSourcecode,\r\n        value: \"das Ende des Programms\"\r\n    };\r\n\r\n    beginStatementKeywords = [\"select\", \"insert into\", \"update\", \"create table\", \"delete from\", \"alter table\", \"drop table\"];\r\n\r\n    constructor(private isInConsoleMode: boolean) {\r\n\r\n    }\r\n\r\n    parse(m: Module) {\r\n\r\n        this.module = m;\r\n\r\n        this.tokenList = m.tokenList;\r\n        this.errorList = [];\r\n\r\n        m.completionHints = new Map();\r\n\r\n        if (this.tokenList.length == 0) {\r\n            this.module.sqlStatements = [];\r\n            this.module.errors[1] = this.errorList;\r\n            this.module.addCompletionHint({ line: 0, column: 0, length: 0 }, { line: 20000, column: 100, length: 0 }, false, false, \r\n                this.beginStatementKeywords);\r\n            return;\r\n        }\r\n\r\n        this.pos = 0;\r\n        this.initializeLookahead();\r\n\r\n\r\n        let lastToken = this.tokenList[this.tokenList.length - 1];\r\n        this.endToken.position = { line: lastToken.position.line, column: lastToken.position.column + lastToken.position.length, length: 1 };\r\n\r\n        this.module.sqlStatements = this.parseMain();\r\n\r\n        this.module.errors[1] = this.errorList;\r\n\r\n    }\r\n\r\n    initializeLookahead() {\r\n\r\n        this.ct = [];\r\n\r\n        for (let i = 0; i < this.lookahead; i++) {\r\n\r\n            let token: Token = this.endToken;\r\n\r\n            while (true) {\r\n\r\n                if (this.pos >= this.tokenList.length) break;\r\n\r\n                let token1 = this.tokenList[this.pos]\r\n                if (token1.tt == TokenType.comment) {\r\n                    this.lastComment = token1;\r\n                }\r\n\r\n                if (token1.tt != TokenType.newline && token1.tt != TokenType.space && token1.tt != TokenType.comment) {\r\n                    token = token1;\r\n                    if (this.lastComment != null) {\r\n                        token.commentBefore = this.lastComment;\r\n                        this.lastComment = null;\r\n                    }\r\n                    break;\r\n                }\r\n\r\n                this.pos++;\r\n\r\n            }\r\n\r\n            this.ct.push(token);\r\n\r\n            if (i < this.lookahead - 1) {\r\n                this.pos++;\r\n            }\r\n\r\n        }\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    nextToken() {\r\n\r\n        let token: Token;\r\n        this.lastToken = this.cct;\r\n\r\n        while (true) {\r\n\r\n            this.pos++;\r\n\r\n            if (this.pos >= this.tokenList.length) {\r\n                token = this.endToken;\r\n                break;\r\n            }\r\n\r\n            token = this.tokenList[this.pos]\r\n            if (token.tt == TokenType.comment) {\r\n                this.lastComment = token;\r\n            }\r\n\r\n            if (token.tt != TokenType.newline && token.tt != TokenType.space && token.tt != TokenType.comment) {\r\n                token.commentBefore = this.lastComment;\r\n                this.lastComment = null;\r\n                break;\r\n            }\r\n\r\n        }\r\n\r\n        for (let i = 0; i < this.lookahead - 1; i++) {\r\n            this.ct[i] = this.ct[i + 1];\r\n        }\r\n\r\n        this.ct[this.lookahead - 1] = token;\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position?: TextPosition, quickFix?: QuickFix) {\r\n        if (position == null) position = Object.assign({}, this.position);\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    skip(tt: TokenType | TokenType[]){\r\n        if(!Array.isArray(tt)) tt = [tt];\r\n        if(tt.indexOf(this.tt) >= 0) this.nextToken();\r\n    }\r\n\r\n    expect(tt: TokenType | TokenType[], skip: boolean = true, invokeSemicolonAngel: boolean = false): boolean {\r\n        if (this.tt != tt && !(Array.isArray(tt) && tt.indexOf(this.tt) >= 0)) {\r\n            if (tt == TokenType.semicolon && this.tt == TokenType.endofSourcecode) {\r\n                return true;\r\n            }\r\n\r\n            let position: TextPosition = this.cct.position;\r\n            if (tt == TokenType.semicolon && this.lastToken != null) {\r\n\r\n                if (this.lastToken.position.line < position.line) {\r\n                    position = {\r\n                        line: this.lastToken.position.line,\r\n                        column: this.lastToken.position.column + this.lastToken.position.length,\r\n                        length: 1\r\n                    }\r\n                }\r\n            }\r\n\r\n            let quickFix: QuickFix = null;\r\n            if (tt == TokenType.semicolon && this.lastToken.position.line < this.cct.position.line &&\r\n                !this.isOperatorOrDot(this.lastToken.tt)\r\n            ) {\r\n                quickFix = {\r\n                    title: 'Strichpunkt hier einfügen',\r\n                    editsProvider: (uri) => {\r\n                        return [{\r\n                            resource: uri,\r\n                            edit: {\r\n                                range: {\r\n                                    startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position.column,\r\n                                    message: \"\",\r\n                                    severity: monaco.MarkerSeverity.Error\r\n                                },\r\n                                text: \";\"\r\n                            }\r\n                        }\r\n                        ];\r\n                    }\r\n                }\r\n\r\n                if (invokeSemicolonAngel) {\r\n                    this.module.main.getSemicolonAngel().register(position, this.module);\r\n                }\r\n            }\r\n\r\n            let expectedValuesArray: string[];\r\n\r\n            if (Array.isArray(tt)) {\r\n                expectedValuesArray = tt.map(token => TokenTypeReadable[token]);\r\n                let expectedTokens = expectedValuesArray.join(\", \");\r\n                this.pushError(\"Erwartet wird eines der folgenden: \" + expectedTokens + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            } else {\r\n                expectedValuesArray = [TokenTypeReadable[tt]];\r\n                this.pushError(\"Erwartet wird: \" + TokenTypeReadable[tt] + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            }\r\n\r\n            // if (!Array.isArray(tt) && tt != TokenType.identifier) {\r\n            //     this.module.addCompletionHint(this.getEndOfPosition(this.lastToken.position), this.getCurrentPositionPlus(1), false, false, expectedValuesArray);\r\n            // }\r\n\r\n            return false;\r\n        }\r\n\r\n        if (skip) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    getEndOfPosition(p: TextPosition): TextPosition {\r\n        return {\r\n            line: p.line,\r\n            column: p.column + p.length,\r\n            length: 0\r\n        }\r\n    }\r\n\r\n    isOperatorOrDot(tt: TokenType): boolean {\r\n        if (tt == TokenType.dot) return true;\r\n        for (let op of Parser.operatorPrecedence) {\r\n            for (let operator of op) {\r\n                if (tt == operator) return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    isEnd(): boolean {\r\n        return this.cct == this.endToken;\r\n    }\r\n\r\n    comesToken(token: TokenType | TokenType[], skip: boolean = false): boolean {\r\n\r\n        if (!Array.isArray(token)) {\r\n            let ret: boolean = this.tt == token;\r\n            if (ret && skip) this.nextToken();\r\n            return ret;\r\n        }\r\n\r\n        return token.indexOf(this.tt) >= 0;\r\n\r\n    }\r\n\r\n    getCurrentPosition(): TextPosition {\r\n        return Object.assign({}, this.position);\r\n    }\r\n\r\n    getCurrentPositionPlus(deltaColumns: number): TextPosition {\r\n        let pos = this.getCurrentPosition();\r\n        pos.column += deltaColumns;\r\n        return pos;\r\n    }\r\n\r\n    getEndOfCurrentToken(): TextPosition {\r\n\r\n        let position = this.getCurrentPosition();\r\n        position.column = position.column + this.position.length;\r\n        position.length = 0;\r\n\r\n        return position;\r\n    }\r\n\r\n    parseMain(): SQLStatement[] {\r\n\r\n        let mainProgram: SQLStatement[] = [];\r\n\r\n        let mainProgramEnd: TextPosition = {\r\n            column: 0,\r\n            line: 10000,\r\n            length: 1\r\n        }\r\n\r\n        let afterLastStatement: TextPosition = {\r\n            column: 0,\r\n            line: 0,\r\n            length: 0\r\n        }\r\n\r\n        while (!this.isEnd()) {\r\n\r\n            let oldPos = this.pos;\r\n\r\n            this.module.addCompletionHint(afterLastStatement, this.getCurrentPositionPlus(5), false, false, \r\n             this.beginStatementKeywords);\r\n\r\n            let errorsBeforeStatement: number = this.errorList.length;\r\n\r\n            while ([TokenType.space, TokenType.newline].indexOf(this.cct.tt) >= 0) {\r\n                this.nextToken();\r\n            }\r\n\r\n            let startPosition = this.getCurrentPosition();\r\n\r\n            let st = this.parseStatement();\r\n\r\n            afterLastStatement = {\r\n                line: this.lastToken.position.line + 1,\r\n                column: 0,\r\n                length: 0\r\n            }\r\n\r\n            while (this.tt == TokenType.semicolon) {\r\n                this.nextToken();\r\n            }\r\n\r\n            mainProgram.push({\r\n                ast: st,\r\n                from: startPosition,\r\n                to: this.getEndOfPosition(this.lastToken.position),\r\n                hasErrors: this.errorList.length > errorsBeforeStatement,\r\n                acceptedBySQLite: false\r\n            });\r\n            // console.log(mainProgram[mainProgram.length - 1]);\r\n\r\n            mainProgramEnd = this.getCurrentPosition();\r\n\r\n            // emergency-forward:\r\n            if (this.pos == oldPos) {\r\n                let beginStatementTokens: TokenType[] =\r\n                    [TokenType.keywordSelect, TokenType.keywordUpdate, TokenType.keywordCreate, TokenType.keywordInsert,\r\n                    TokenType.keywordDelete, TokenType.keywordDrop, TokenType.keywordAlter];\r\n\r\n                let firstBadToken: boolean = true;\r\n\r\n                while (!this.isEnd() && beginStatementTokens.indexOf(this.tt) < 0) {\r\n                    if ([TokenType.space, TokenType.newline].indexOf(this.tt) < 0 && firstBadToken) {\r\n                        this.pushError(\"Erwartet wird eines dieser Schlüsselwörter: \" + beginStatementTokens.map(t => TokenTypeReadable[t]).join(\", \")\r\n                            + \"; Gefunden wurde: \" + this.cct.value);\r\n                        firstBadToken = true;\r\n                    }\r\n                    this.nextToken();\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        this.module.addCompletionHint(afterLastStatement, { line: mainProgramEnd.line + 10, column: 0, length: 0 }, false, false, \r\n            this.beginStatementKeywords);\r\n\r\n        return mainProgram;\r\n\r\n    }\r\n\r\n\r\n\r\n    parseStatement(expectSemicolon: boolean = true): ASTNode {\r\n\r\n        let retStatements: ASTNode = null;\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordSelect:\r\n                return this.parseSelect();\r\n            case TokenType.keywordInsert:\r\n                return this.parseInsert();\r\n            case TokenType.keywordCreate:\r\n                return this.parseCreateTable();\r\n            case TokenType.keywordUpdate:\r\n                return this.parseUpdate();\r\n            case TokenType.keywordDelete:\r\n                return this.parseDelete();\r\n            case TokenType.keywordDrop:\r\n                return this.parseDropTable();\r\n            case TokenType.keywordAlter:\r\n                return this.parseAlterTable();\r\n            default:\r\n                let s = TokenTypeReadable[this.tt];\r\n                if (s == null) s = \"\";\r\n                if (s != this.cct.value) s += \"(\" + this.cct.value + \")\";\r\n                s += \" wird hier nicht erwartet.\";\r\n                this.pushError(s);\r\n                this.nextToken();\r\n                break;\r\n        }\r\n\r\n\r\n        return retStatements;\r\n\r\n    }\r\n\r\n\r\n    parseAlterTable(): AlterTableNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"alter\"\r\n\r\n        let node: AlterTableNode = {\r\n            type: TokenType.keywordAlter,\r\n            kind: null,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n        }\r\n\r\n        if (!this.expect(TokenType.keywordTable, true)) {\r\n            this.addCompletionHintHere(false, false, [\"table\"], 1);\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1);\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        this.addCompletionHintHere(false, false, [\"rename to\", \"rename column\", \"add column\", \"drop column\"], 1);\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordRename: this.parseRenameTableOrColumn(node); break;\r\n            case TokenType.keywordAdd: this.parseAddColumn(node); break;\r\n            case TokenType.keywordDrop: this.parseDropColumn(node); break;\r\n            default:\r\n                this.pushError(\"Erwartet wird rename to, rename column, add column oder drop column\");\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    parseRenameTableOrColumn(node: AlterTableNode) {\r\n\r\n        this.nextToken();\r\n        if (!this.comesToken(TokenType.keywordTo)) {\r\n            this.addCompletionHintHere(node.tableIdentifier, false, [\"column\", \"to\"], 3);\r\n        }\r\n        node.endPosition = this.getEndOfCurrentToken();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordTo:\r\n                this.nextToken();\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                node.kind = \"renameTable\";\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    node.newTableName = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    node.endPosition = this.getEndOfCurrentToken();\r\n                } else {\r\n                    this.pushError(\"Erwartet wird der neue Tabellenname.\");\r\n                }\r\n                return;\r\n            case TokenType.keywordColumn:\r\n                this.nextToken();\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                this.addCompletionHintHere(node.tableIdentifier, false, [], 3);\r\n                if (!this.comesToken(TokenType.identifier)) {\r\n                    this.pushError(\"Erwartet wird der Name einer Spalte der Tabelle \" + node.tableIdentifier + \".\");\r\n                    return;\r\n                }\r\n                node.kind = \"renameColumn\";\r\n                node.oldColumnName = <string>this.cct.value;\r\n                node.oldColumnPosition = this.getCurrentPosition();\r\n                this.nextToken();\r\n                this.addCompletionHintHere(false, false, [\"to\"], 3);\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                if (!this.expect(TokenType.keywordTo, true)) return;\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    node.newColumnName = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    node.endPosition = this.getEndOfCurrentToken();\r\n                } else {\r\n                    this.pushError(\"Erwartet wird der neue Spaltenname.\");\r\n                }\r\n                return;\r\n            default:\r\n                this.pushError(\"Erwartet wird das Schlüsselwort 'to' (zum Umbenennen der Tabelle) oder das Schlüsselwor 'column' (zum Umbenennen einer Spalte).\")\r\n                return;\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    parseDropColumn(node: AlterTableNode) {\r\n        this.nextToken(); // skip 'drop'\r\n        this.comesToken(TokenType.keywordColumn, true);\r\n        node.oldColumnPosition = this.getCurrentPosition();\r\n        this.addCompletionHintHere(node.tableIdentifier, false, [], 3);\r\n\r\n        node.kind = \"dropColumn\";\r\n        node.endPosition = this.getEndOfCurrentToken();\r\n\r\n        if (this.comesToken(TokenType.identifier)) {\r\n            node.oldColumnName = <string>this.cct.value;\r\n            this.nextToken();\r\n        } else {\r\n            this.pushError(\"Erwartet wird der Bezeichner der Spalte, die gelöscht werden soll.\");\r\n        }\r\n\r\n    }\r\n\r\n    parseAddColumn(node: AlterTableNode) {\r\n        this.nextToken(); // skip 'add'\r\n        node.kind = \"addColumn\";\r\n        this.comesToken(TokenType.keywordColumn, true);\r\n        node.columnDefBegin = this.getCurrentPosition();\r\n        node.columnDef = this.parseColumnDefinition(false);\r\n    }\r\n\r\n    parseDropTable(): DropTableNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"Delete\"\r\n\r\n        let node: DropTableNode = {\r\n            type: TokenType.keywordDrop,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null\r\n        }\r\n\r\n        if (!this.expect(TokenType.keywordTable, true)) {\r\n            this.addCompletionHintHere(false, false, [\"table\"], 1);\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1, \"\", \";\");\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n\r\n    }\r\n\r\n    parseDelete(): DeleteNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"Delete\"\r\n\r\n        let node: DeleteNode = {\r\n            type: TokenType.keywordDelete,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n            whereNode: null,\r\n            whereNodeBegin: null,\r\n            whereNodeEnd: null\r\n        }\r\n\r\n        if (!this.expect(TokenType.keywordFrom, true)) {\r\n            this.addCompletionHintHere(false, false, [\"from\"], 1);\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1, \"\", \" where\\n\\t\");\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        this.addCompletionHintHere(false, false, [\"where\\n\\t\"], 1);\r\n        if (!this.expect(TokenType.keywordWhere)) return node;\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n\r\n        node.whereNodeBegin = this.getEndOfPosition(this.lastToken.position);\r\n        node.whereNode = this.parseTerm();\r\n        node.whereNodeEnd = this.getCurrentPosition();\r\n\r\n        this.module.addCompletionHint(node.whereNodeBegin, this.getCurrentPositionPlus(3), node.tableIdentifier, false, []);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n        return node;\r\n\r\n    }\r\n\r\n    parseUpdate(): UpdateNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"update\"\r\n\r\n        let node: UpdateNode = {\r\n            type: TokenType.keywordUpdate,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n            columnIdentifiers: [],\r\n            columnIdentifierPositions: [],\r\n            values: [],\r\n            valuePosBegin: [],\r\n            valuePosEnd: [],\r\n            whereNode: null,\r\n            whereNodeBegin: null,\r\n            whereNodeEnd: null\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1, \"\", \" set\\n\\t\");\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        this.addCompletionHintHere(false, false, [\"set\\n\\t\"], 1);\r\n        if (!this.expect(TokenType.keywordSet)) return node;\r\n        let first: boolean = true;\r\n        do {\r\n            this.addCompletionHintHere(node.tableIdentifier, false, first ? [] : ['where'], 1, null, \" = \");\r\n            first = false;\r\n            if (this.tt != TokenType.identifier) {\r\n                this.pushError(\"Hier wird der Bezeichner derjenigen Spalte der Tabelle \" + node.tableIdentifier + \" erwaretet, deren Wert verändert werden soll.\", \"error\");\r\n                break;\r\n            }\r\n\r\n            node.columnIdentifiers.push(<string>this.cct.value);\r\n            node.columnIdentifierPositions.push(this.getCurrentPosition());\r\n            this.nextToken();\r\n\r\n            this.expect(TokenType.equal, true);\r\n\r\n            node.valuePosBegin.push(this.getCurrentPosition());\r\n            node.values.push(this.parseTerm());\r\n            node.valuePosEnd.push(this.getCurrentPosition());\r\n\r\n        } while (this.comesToken(TokenType.comma, true));\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        if (this.lastToken.tt != TokenType.comma || this.comesToken(TokenType.keywordWhere)) {\r\n            if (!this.expect(TokenType.keywordWhere, true)) return node;\r\n\r\n            node.whereNodeBegin = this.getEndOfPosition(this.lastToken.position);\r\n            node.whereNode = this.parseTerm();\r\n            node.whereNodeEnd = this.getCurrentPosition();\r\n\r\n            this.module.addCompletionHint(node.whereNodeBegin, node.whereNodeEnd, node.tableIdentifier, false, []);\r\n\r\n            node.endPosition = this.getCurrentPosition();\r\n        } else {\r\n            this.comesToken(TokenType.keywordWhere, true); // skip where, if present\r\n        }\r\n        return node;\r\n\r\n    }\r\n\r\n    parseCreateTable(): CreateTableNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"create\"\r\n\r\n        if(!this.expect(TokenType.keywordTable, true)){\r\n            this.module.addCompletionHint(startPosition, this.getCurrentPositionPlus(3), false, false, [\"table\"]);\r\n        }\r\n\r\n        let identifier = \"\";\r\n        if (this.expect(TokenType.identifier, false)) {\r\n            identifier = <string>this.cct.value;\r\n            this.module.addCompletionHint(this.getCurrentPosition(), this.getCurrentPositionPlus(identifier.length + 3), false, false, [\"(\"]);\r\n            this.nextToken();\r\n        }\r\n\r\n        let node: CreateTableNode = {\r\n            type: TokenType.keywordCreate,\r\n            identifier: identifier,\r\n            position: startPosition,\r\n            endPosition: null,\r\n            columnList: [],\r\n            symbolTable: null,\r\n            combinedPrimaryKeyColumns: [],\r\n            foreignKeyInfoList: []\r\n        }\r\n\r\n        if (!this.expect(TokenType.leftBracket, true)) return node;\r\n\r\n        let primaryKeyAlreadyDefined: boolean = false;\r\n        let first: boolean = true;\r\n\r\n        while (this.tt != TokenType.rightBracket) {\r\n            if (!first) this.expect(TokenType.comma, true);\r\n            first = false;\r\n            switch (this.tt) {\r\n                case TokenType.keywordPrimary:\r\n                    if (primaryKeyAlreadyDefined) this.pushError(\"Je Tabelle darf nur ein einziger Primärschlüssel definiert werden.\", \"error\", this.getCurrentPosition());\r\n                    this.parsePrimaryKeyTerm(primaryKeyAlreadyDefined, node);\r\n                    primaryKeyAlreadyDefined = true;\r\n                    break;\r\n                case TokenType.keywordForeign:\r\n                    this.parseForeignKeyTerm(node);\r\n                    break;\r\n                case TokenType.identifier:\r\n                    let columnNode = this.parseColumnDefinition(primaryKeyAlreadyDefined);\r\n                    node.columnList.push(columnNode);\r\n                    primaryKeyAlreadyDefined = primaryKeyAlreadyDefined || columnNode.isPrimary;\r\n                    break;\r\n                default:\r\n                    this.pushError(TokenTypeReadable[this.tt] + \" wird hier nicht erwartet.\", \"error\");\r\n                    break;\r\n            }\r\n            if (!this.comesToken(TokenType.comma)) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        while([TokenType.keywordEngine, TokenType.keywordDefault, TokenType.keywordCollate].indexOf(this.tt) >= 0){\r\n            switch (this.tt) {\r\n                case TokenType.keywordCollate:\r\n                    this.nextToken();\r\n                    this.skip(TokenType.equal);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordEngine:\r\n                    this.nextToken();\r\n                    this.skip(TokenType.equal);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordDefault:\r\n                    this.nextToken();\r\n                    this.expect(TokenType.keywordCharset, true);\r\n                    this.skip(TokenType.equal);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n            }\r\n\r\n        }\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n    parseForeignKeyTerm(node: CreateTableNode) {\r\n        let referencesPos = this.getCurrentPosition();\r\n        this.nextToken();\r\n        this.expect(TokenType.keywordKey);\r\n\r\n        if (this.comesToken(TokenType.identifier)) {\r\n            let fki: ForeignKeyInfo = {\r\n                column: <string>this.cct.value,\r\n                referencesColumn: null,\r\n                referencesTable: null,\r\n                referencesPosition: referencesPos\r\n            }\r\n            this.nextToken();\r\n            this.expect(TokenType.keywordReferences, false);\r\n            this.nextToken(); // skip \"references\"\r\n            this.addCompletionHintHere(false, true, []);\r\n            if (this.expect(TokenType.identifier, false)) {\r\n                fki.referencesTable = <string>this.cct.value;\r\n                this.nextToken();\r\n                let pos0 = this.lastToken.position;\r\n                let pos1 = this.getCurrentPosition();\r\n                this.module.addCompletionHint(this.getEndOfPosition(pos0), pos1, fki.referencesTable, false, []);\r\n\r\n                if (this.expect(TokenType.leftBracket, true)) {\r\n\r\n                    if (this.expect(TokenType.identifier, false)) {\r\n                        fki.referencesColumn = <string>this.cct.value;\r\n                        this.nextToken();\r\n                        node.foreignKeyInfoList.push(fki);\r\n                    } else {\r\n                        this.pushError(\"Erwartet wird der Bezeichner einer Spalte. Gefunden wurde: \" + this.cct.value);\r\n                    }\r\n\r\n                    this.expect(TokenType.rightBracket, true);\r\n                }\r\n            } else {\r\n                this.pushError(\"Erwartet wird der Bezeichner einer Tabelle. Gefunden wurde: \" + this.cct.value);\r\n            }\r\n\r\n        } else {\r\n            this.pushError(\"Erwartet wird der Bezeichner ein Spalte\");\r\n        }\r\n\r\n    }\r\n\r\n    parsePrimaryKeyTerm(primaryKeyAlreadyDefined: boolean, node: CreateTableNode) {\r\n        if (primaryKeyAlreadyDefined) {\r\n            this.pushError(\"Die Tabelle kann nur einen einzigen Primärschlüssel haben.\");\r\n        }\r\n        this.nextToken(); // skip \"primary\"\r\n        this.expect(TokenType.keywordKey, true);\r\n\r\n        let columns: string[] = node.columnList.map(c => c.identifier);\r\n\r\n        this.addCompletionHintHere(false, false, columns);\r\n        if (this.comesToken(TokenType.leftBracket)) {\r\n            this.addCompletionHintHere(false, false, columns);\r\n            this.nextToken();\r\n\r\n            while (true) {\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    node.combinedPrimaryKeyColumns.push(<string>this.cct.value);\r\n                    this.nextToken();\r\n                    this.addCompletionHintHere(false, false, columns, 1);\r\n                    if (!this.comesToken(TokenType.comma)) {\r\n                        break;\r\n                    } else {\r\n                        this.nextToken();\r\n                        this.addCompletionHintHere(false, false, columns);\r\n                    }\r\n                } else {\r\n                    this.pushError(\"Der Bezeichner einer Spalte wird erwartet. Gefunden wurde: \" + this.cct.value);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        } else {\r\n            this.pushError(\"( erwartet.\");\r\n        }\r\n    }\r\n\r\n    parseColumnDefinition(primaryKeyAlreadyDefined: boolean): CreateTableColumnNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n        let identifier = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        let node: CreateTableColumnNode = {\r\n            type: TokenType.columnDef,\r\n            identifier: identifier,\r\n            isPrimary: false,\r\n            isAutoIncrement: false,\r\n            position: position,\r\n            baseType: null,\r\n            notNull: false\r\n        }\r\n\r\n        this.parseType(node, primaryKeyAlreadyDefined);\r\n\r\n        return node;\r\n\r\n    }\r\n\r\n    addCompletionHintHere(hintColumns: boolean | string, hintTables: boolean, hints: string[], additionalColumns: number = 0, praefix: string = \"\", suffix: string = \"\") {\r\n        let pos0 = this.lastToken.position;\r\n        let pos1 = this.getCurrentPosition();\r\n        pos1.column += 1 + additionalColumns\r\n        this.module.addCompletionHint(this.getEndOfPosition(pos0), pos1, hintColumns, hintTables, hints, null, praefix, suffix);\r\n    }\r\n\r\n    parseType(node: CreateTableColumnNode, primaryKeyAlreadyDefined: boolean) {\r\n\r\n        let datatypes = SQLBaseType.baseTypes.map(type => type.toString());\r\n        this.addCompletionHintHere(false, false, datatypes);\r\n\r\n        if (!this.expect(TokenType.identifier, false)) {\r\n            this.pushError(\"Erwartet wird ein Datentyp. Gefunden wurde: \" + this.cct.value);\r\n            return;\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n\r\n        let type = SQLBaseType.getBaseType(identifier);\r\n        if (type == null) {\r\n            this.pushError(\"Erwartet wird ein Datentyp. Gefunden wurde: \" + identifier);\r\n        }\r\n        node.baseType = type;\r\n        this.nextToken();\r\n\r\n        if (this.tt == TokenType.leftBracket) {\r\n            this.nextToken();\r\n            node.parameters = [];\r\n            //@ts-ignore\r\n            while (this.tt == TokenType.integerConstant) {\r\n                node.parameters.push(<number>this.cct.value);\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.comma) break;\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.integerConstant) {\r\n                    this.pushError(\"Erwartet wird eine ganze Zahl, gefunden wurde: \" + this.cct.value);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (type != null && node.parameters.length > type.parameterDescriptions.length) {\r\n                this.pushError(\"Der Datentyp \" + type.toString() + \" hat höchstens \" + type.parameterDescriptions.length + \" Parameter.\");\r\n            }\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        }\r\n\r\n        // primary key autoincrement\r\n        // references table(column)\r\n        // not null\r\n\r\n        this.addCompletionHintHere(false, false, [\"primary key\", \"references\", \"not null\"]);\r\n\r\n        let alreadySeenKeywords: TokenType[] = [];\r\n\r\n        while ([TokenType.keywordAutoincrement, TokenType.keywordKey, TokenType.keywordPrimary, TokenType.keywordNot, TokenType.keywordReferences, TokenType.keywordCollate, TokenType.keywordDefault].indexOf(this.tt) >= 0) {\r\n            if(alreadySeenKeywords.indexOf(this.tt)>=0){\r\n                this.pushError('Das Schlüsselwort ' + TokenTypeReadable[this.tt] + \" darf bei der Definition einer Spalte nicht öfters als ein Mal vorkommen.\");\r\n            }\r\n\r\n            alreadySeenKeywords.push(this.tt);\r\n\r\n            switch (this.tt) {\r\n                case TokenType.keywordAutoincrement:\r\n                    this.nextToken();\r\n                    node.isAutoIncrement = true;\r\n                break;\r\n                case TokenType.keywordPrimary:\r\n                    if (primaryKeyAlreadyDefined) this.pushError(\"In einer Tabelle darf es nur einen einzigen primary key geben.\");\r\n                    this.nextToken(); // skip \"primary\"\r\n                    if (!this.expect(TokenType.keywordKey, true)) {\r\n                        this.addCompletionHintHere(false, false, [\"key\"]);\r\n                    } else {\r\n                        this.addCompletionHintHere(false, false, [\"autoincrement, \\n\"])\r\n                    }\r\n                    node.isPrimary = true;\r\n                    break;\r\n                case TokenType.keywordReferences:\r\n                    node.referencesPosition = this.getCurrentPosition();\r\n                    this.nextToken(); // skip \"references\"\r\n                    this.addCompletionHintHere(false, true, []);\r\n                    if (this.expect(TokenType.identifier, false)) {\r\n                        node.referencesTable = <string>this.cct.value;\r\n                        this.nextToken();\r\n                        let pos0 = this.lastToken.position;\r\n                        let pos1 = this.getCurrentPosition();\r\n                        this.module.addCompletionHint(this.getEndOfPosition(pos0), pos1, node.referencesTable, false, []);\r\n\r\n                        if (this.expect(TokenType.leftBracket, true)) {\r\n\r\n                            if (this.expect(TokenType.identifier, false)) {\r\n                                node.referencesColumn = <string>this.cct.value;\r\n                                this.nextToken();\r\n                            } else {\r\n                                this.pushError(\"Erwartet wird der Bezeichner einer Spalte. Gefunden wurde: \" + this.cct.value);\r\n                            }\r\n\r\n                            this.expect(TokenType.rightBracket, true);\r\n                        }\r\n                    } else {\r\n                        this.pushError(\"Erwartet wird der Bezeichner einer Tabelle. Gefunden wurde: \" + this.cct.value);\r\n                    }\r\n                    break;\r\n                case TokenType.keywordNot:\r\n                    this.nextToken();\r\n                    if (!this.expect(TokenType.keywordNull, true)) {\r\n                        this.addCompletionHintHere(false, false, [\"null\"]);\r\n                    } else {\r\n                        this.addCompletionHintHere(false, false, [\"references\"]);\r\n                    }\r\n                    node.notNull = true;\r\n                    break;\r\n                case TokenType.keywordCollate:\r\n                    this.nextToken();\r\n                    node.collate = <string>this.cct.value;\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordDefault:\r\n                    this.nextToken();\r\n                    node.defaultValue = <string>this.cct.value;\r\n                    //@ts-ignore\r\n                    if(this.tt == TokenType.keywordNull){\r\n                        this.nextToken();\r\n                        break;\r\n                    } else if([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.stringConstant].indexOf(this.tt) >= 0){\r\n                        let constantType = SQLBaseType.fromConstantType(this.tt);\r\n                        if(!constantType.canCastTo(type)){\r\n                            this.pushError(\"Die Konstante hinter 'default' passt nicht zum Datentyp der Spalte.\");\r\n                        }\r\n                        this.nextToken();                        \r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n\r\n        if(node.isAutoIncrement && !node.isPrimary){\r\n            this.pushError(\"autoincrement gibt es nur bei Primärschlüsseln, d.h. es fehlt wahrscheinlich 'primary key'.\", \"error\", node.position);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    parseInsert(): InsertNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"insert\"\r\n\r\n        this.expect(TokenType.keywordInto, true);\r\n\r\n        let node: InsertNode = {\r\n            type: TokenType.keywordInsert,\r\n            position: startPosition,\r\n            endPosition: this.getCurrentPosition(),\r\n            valuesPosition: null,\r\n            columnsPosition: null,\r\n            symbolTable: null,\r\n            columnList: [],\r\n            values: [],\r\n            table: null\r\n        }\r\n\r\n        if (this.tt == TokenType.identifier) {\r\n            node.table = {\r\n                type: TokenType.table,\r\n                identifier: <string>this.cct.value,\r\n                alias: null,\r\n                position: this.getCurrentPosition()\r\n            }\r\n            node.columnsPosition = { line: node.table.position.line, column: node.table.position.column + node.table.position.length, length: 0 };\r\n            this.nextToken();\r\n        } else {\r\n            this.pushError(\"Hier wird der Bezeichner einer Tabelle erwartet. Gefunden wurde: \" + this.cct.value, \"error\");\r\n        }\r\n\r\n        if (this.tt == TokenType.leftBracket) {\r\n\r\n            this.nextToken();\r\n            let first: boolean = true;\r\n            //@ts-ignore\r\n            while (first || this.tt == TokenType.comma) {\r\n\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.identifier) {\r\n                    node.columnList.push({\r\n                        type: TokenType.identifier,\r\n                        identifier: this.cct.value + \"\",\r\n                        position: this.getCurrentPosition()\r\n                    })\r\n\r\n                } else {\r\n                    this.pushError(\"Erwartet wird der Bezeichner einer Spalte. Gefunden wurde: \" + this.cct.value, \"error\");\r\n                }\r\n                this.nextToken();\r\n            }\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        }\r\n\r\n        node.valuesPosition = this.getCurrentPosition();\r\n        this.expect(TokenType.keywordValues, true);\r\n\r\n        this.parseValueLists(node.values);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n    parseValueLists(values: ConstantNode[][]) {\r\n        let insideListTokens = [TokenType.keywordNull, TokenType.charConstant, TokenType.stringConstant, TokenType.booleanConstant, TokenType.floatingPointConstant, TokenType.integerConstant];\r\n\r\n        let outerFirst: boolean = true;\r\n\r\n        while (outerFirst || this.tt == TokenType.comma) {\r\n            if (!outerFirst) {\r\n                this.nextToken(); // consume comma\r\n            }\r\n            outerFirst = false;\r\n            let leftBracketPosition = this.getCurrentPosition();\r\n            if (!this.expect(TokenType.leftBracket, true)) {\r\n                break;\r\n            }\r\n            let line: ConstantNode[] = [];\r\n            let first: boolean = true;\r\n            //@ts-ignore\r\n            while (first || this.tt == TokenType.comma) {\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n                if (this.tt == TokenType.identifier && this.cct.isDoubleQuotedIdentifier) {\r\n                    this.tt = TokenType.stringConstant\r\n                }\r\n                //@ts-ignore\r\n                if (insideListTokens.indexOf(this.tt) < 0) {\r\n                    this.pushError(\"Erwartet wird eine Konstante oder null. Gefunden wurde: \" + this.cct.value, \"error\");\r\n                    this.nextToken();\r\n                } else {\r\n                    line.push({\r\n                        constantType: this.tt,\r\n                        position: this.getCurrentPosition(),\r\n                        constant: this.cct.value,\r\n                        type: TokenType.constantNode\r\n                    });\r\n                    this.nextToken();\r\n                }\r\n            }\r\n            this.expect(TokenType.rightBracket, true);\r\n            if (line.length == 0) {\r\n                this.pushError(\"Eine Zeile kann nur dann in die Tabelle eingefügt werden, wenn sie mindestens einen Spaltenwert besitzt.\", \"error\", leftBracketPosition);\r\n            } else {\r\n                values.push(line);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    parseSelect(): SelectNode {\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"select\"\r\n\r\n        let columnListStart: TextPosition = {\r\n            line: startPosition.line,\r\n            column: startPosition.column + 6,\r\n            length: 1\r\n        };\r\n\r\n        let node: SelectNode = {\r\n            type: TokenType.keywordSelect,\r\n            position: startPosition,\r\n            endPosition: this.getCurrentPosition(),\r\n            symbolTable: null,\r\n            columnList: [],\r\n            fromNode: null,\r\n            whereNode: null,\r\n            parentStatement: null\r\n        }\r\n\r\n        node.columnList = this.parseColumnList([TokenType.keywordFrom], true);\r\n        \r\n        let columnListKeywordArray = [\"distinct\", \"as\", \"*\"];\r\n        if(node.columnList.findIndex(c => c.type == TokenType.allColumns) >= 0){\r\n            columnListKeywordArray.pop();\r\n        }\r\n\r\n        this.module.addCompletionHint(columnListStart, this.getCurrentPositionPlus(1), true, true, columnListKeywordArray)\r\n\r\n        // parse from ...\r\n        if (!this.expect(TokenType.keywordFrom, true)) {\r\n            columnListKeywordArray.unshift(\"from\");\r\n            return null;\r\n        }\r\n\r\n        node.fromStartPosition = { line: this.lastToken.position.line, column: this.lastToken.position.column + this.lastToken.position.length, length: 0 };\r\n\r\n        let dontHint: string[] = [];\r\n        node.fromNode = this.parseTableOrSubQuery(dontHint);\r\n\r\n        let fromListKeywordArray = [\"join\", \"left\", \"right\", \"inner\", \"outer\", \"natural\", \"on\", \"as\", \", \"];\r\n        fromListKeywordArray.splice(fromListKeywordArray.indexOf(this.lastToken.value + \"\"), 1);\r\n        this.module.addCompletionHint(node.fromStartPosition, this.getCurrentPositionPlus(2), false, true, fromListKeywordArray, dontHint)\r\n        node.fromEndPosition = this.getCurrentPosition();\r\n\r\n        // parse where...\r\n\r\n        let whereKeywordArray = [\"like\"];\r\n        if (this.tt == TokenType.keywordWhere) {\r\n            let position = this.getCurrentPosition();\r\n            let whereStart = this.getCurrentPosition();\r\n            this.nextToken();\r\n            node.whereNode = this.parseTerm();\r\n            this.module.addCompletionHint(whereStart, this.getCurrentPositionPlus(2), true, true, whereKeywordArray)\r\n            // if (node.whereNode != null) node.whereNode.position = position;\r\n        } else {\r\n            fromListKeywordArray.push(\"where\");\r\n        }\r\n\r\n        let groupKeywordArray = [];\r\n        if (this.tt == TokenType.keywordGroup) {\r\n            let groupStart = this.getCurrentPosition();\r\n            node.groupByNode = this.parseGroupBy();\r\n            this.module.addCompletionHint(groupStart, this.getCurrentPosition(), true, true, groupKeywordArray);\r\n        } else {\r\n            whereKeywordArray.push(\"group by\");\r\n        }\r\n\r\n        if (this.tt == TokenType.keywordOrder) {\r\n            let orderStart = this.getCurrentPosition();\r\n            node.orderByNode = this.parseOrderBy();\r\n            this.module.addCompletionHint(orderStart, this.getCurrentPosition(), true, true, [\"asc\", \"desc\"]);\r\n        } else {\r\n            whereKeywordArray.push(\"order by\");\r\n            groupKeywordArray.push(\"order by\");\r\n        }\r\n\r\n        if (this.tt == TokenType.keywordLimit) {\r\n            node.limitNode = this.parseLimit();\r\n        }\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n        node.endPosition.column += 3;\r\n\r\n        return node;\r\n    }\r\n\r\n    parseLimit(): LimitNode {\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n        let numberOfRows: TermNode = this.parseTerm();\r\n        let ln: LimitNode = {\r\n            type: TokenType.keywordLimit,\r\n            position: position,\r\n            numberOfRows: numberOfRows\r\n        }\r\n        if (this.tt == TokenType.keywordOffset) {\r\n            this.nextToken();\r\n            ln.offset = this.parseTerm();\r\n        }\r\n        return ln;\r\n    }\r\n\r\n    parseGroupBy(): GroupByNode {\r\n        let position = this.getCurrentPosition();\r\n        this.expect(TokenType.keywordGroup, true);\r\n        this.expect(TokenType.keywordBy, true);\r\n        let gbn: GroupByNode = {\r\n            type: TokenType.keywordGroup,\r\n            columnList: [],\r\n            position: position\r\n        }\r\n        let tokenTypesAfterGroupBy = [TokenType.keywordHaving, TokenType.keywordSelect, TokenType.keywordOrder, TokenType.keywordLimit, TokenType.rightBracket, TokenType.semicolon];\r\n        gbn.columnList = this.parseColumnList(tokenTypesAfterGroupBy, false).map(columnNode => columnNode.term);\r\n        if (this.tt == TokenType.keywordHaving) {\r\n            this.nextToken();\r\n            gbn.having = this.parseTerm();\r\n        }\r\n        return gbn;\r\n    }\r\n\r\n    parseOrderBy(): OrderByNode[] {\r\n        this.expect(TokenType.keywordOrder, true);\r\n        this.expect(TokenType.keywordBy, true);\r\n\r\n        let obnList: OrderByNode[] = [];\r\n        let first: boolean = true;\r\n\r\n        do {\r\n            if (first) {\r\n                first = false;\r\n            } else {\r\n                this.expect(TokenType.comma, true);\r\n            }\r\n            let column: TermNode = this.parseTerm();\r\n            let obn: OrderByNode = {\r\n                type: TokenType.keywordOrder,\r\n                position: this.getCurrentPosition(),\r\n                column: column\r\n            }\r\n            if ([TokenType.keywordAscending, TokenType.keywordDescending].indexOf(this.tt) >= 0) this.nextToken();\r\n            if (this.tt == TokenType.keywordNulls) {\r\n                this.nextToken();\r\n                this.expect([TokenType.keywordFirst, TokenType.keywordLast], true);\r\n            }\r\n            obnList.push(obn);\r\n        } while (this.tt == TokenType.comma);\r\n\r\n        return obnList;\r\n    }\r\n\r\n    parseTableOrSubQuery(dontHint: string[]): TableOrSubqueryNode {\r\n\r\n        let leftSide: TableOrSubqueryNode = this.parseAtomicTableOrSubQuery(dontHint);\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        while (this.parseJoinOperator()) {\r\n\r\n            let rightSide: TableOrSubqueryNode = this.parseAtomicTableOrSubQuery(dontHint);\r\n\r\n            leftSide = {\r\n                type: TokenType.keywordJoin,\r\n                firstOperand: leftSide,\r\n                secondOperand: rightSide,\r\n                position: position,\r\n            }\r\n\r\n            if (this.tt == TokenType.keywordOn) {\r\n                leftSide.on = this.parseTerm();\r\n            }\r\n\r\n        }\r\n\r\n        return leftSide;\r\n\r\n    }\r\n\r\n    parseJoinOperator(): boolean {\r\n        if (this.tt == TokenType.comma) {\r\n            this.nextToken();\r\n            return true;\r\n        }\r\n        if (this.tt == TokenType.keywordNatural) this.nextToken();\r\n        switch (this.tt) {\r\n            case TokenType.keywordLeft:\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.keywordOuter) this.nextToken();\r\n                return this.expect(TokenType.keywordJoin, true);\r\n            case TokenType.keywordInner:\r\n            case TokenType.keywordCross:\r\n                this.nextToken();\r\n                return this.expect(TokenType.keywordJoin, true);\r\n            case TokenType.keywordJoin:\r\n                this.nextToken();\r\n                return true;\r\n            default: return false;\r\n        }\r\n    }\r\n\r\n    parseAtomicTableOrSubQuery(dontHint: string[]): TableOrSubqueryNode {\r\n\r\n        if (!this.expect([TokenType.identifier, TokenType.leftBracket], false)) {\r\n            return null;\r\n        }\r\n\r\n        if (this.tt == TokenType.leftBracket) {\r\n            this.nextToken();\r\n            let ret: TableOrSubqueryNode;\r\n            //@ts-ignore\r\n            if (this.tt == TokenType.keywordSelect) {\r\n                let position = this.getCurrentPosition();\r\n                let selectStatement = this.parseSelect();\r\n                ret = {\r\n                    type: TokenType.subquery,\r\n                    alias: null,\r\n                    position: position,\r\n                    query: selectStatement\r\n                }\r\n            } else {\r\n                ret = this.parseTableOrSubQuery(dontHint);\r\n            }\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n\r\n            //@ts-ignore\r\n            if (this.tt == TokenType.keywordAs && ret.type == TokenType.subquery) {\r\n                this.nextToken();\r\n                if (this.expect(TokenType.identifier, false)) {\r\n                    ret.alias = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    dontHint.push(ret.alias);\r\n                }\r\n            }\r\n\r\n            return ret;\r\n        }\r\n\r\n        if (this.tt == TokenType.identifier) {\r\n            let node: TableNode = {\r\n                type: TokenType.table,\r\n                identifier: <string>this.cct.value,\r\n                alias: null,\r\n                position: this.getCurrentPosition()\r\n            }\r\n            dontHint.push(node.identifier);\r\n            this.nextToken();\r\n\r\n            //@ts-ignore\r\n            if (this.tt == TokenType.keywordAs) {\r\n                this.nextToken();\r\n                if (this.expect(TokenType.identifier, false)) {\r\n                    node.alias = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    dontHint.push(node.alias);\r\n                }\r\n\r\n            }\r\n\r\n            return node;\r\n        }\r\n\r\n    }\r\n\r\n    parseColumnList(tokenTypesAfterListEnd: TokenType[], allowAliases: boolean): ColumnNode[] {\r\n        let columns: ColumnNode[] = [];\r\n\r\n        while ([TokenType.identifier, TokenType.multiplication, TokenType.leftBracket].indexOf(this.tt) >= 0) {\r\n            if (this.tt == TokenType.multiplication) {\r\n                columns.push({\r\n                    term: null,\r\n                    alias: null,\r\n                    position: this.getCurrentPosition(),\r\n                    type: TokenType.allColumns\r\n                });\r\n                this.nextToken();\r\n            } else {\r\n                let columnTerm = this.parseTerm();\r\n                if (columnTerm != null) {\r\n                    let column: ColumnNode = {\r\n                        type: TokenType.column,\r\n                        term: columnTerm,\r\n                        position: columnTerm.position\r\n                    }\r\n                    columns.push(column);\r\n                    if (this.comesToken(TokenType.keywordAs)) {\r\n                        this.nextToken();\r\n                        if (this.expect(TokenType.identifier, false)) {\r\n                            column.alias = \"\" + this.cct.value;\r\n                        }\r\n                        this.nextToken();\r\n                    }\r\n                }\r\n            }\r\n            if (tokenTypesAfterListEnd.indexOf(this.tt) >= 0) {\r\n                break;\r\n            }\r\n            this.expect(TokenType.comma, true);\r\n        }\r\n\r\n        if (columns.length == 0) {\r\n            this.pushError(\"Es fehlt die kommaseparierte Liste der gewünschten Spalten.\", \"error\");\r\n        }\r\n\r\n        return columns;\r\n    }\r\n\r\n\r\n    parseTerm(): TermNode {\r\n        return this.parseTermBinary(0);\r\n    }\r\n\r\n    parseTermBinary(precedence: number): TermNode {\r\n\r\n        let left: TermNode;\r\n        if (precedence < Parser.operatorPrecedence.length - 1) {\r\n            left = this.parseTermBinary(precedence + 1);\r\n        } else {\r\n            left = this.parseUnary();\r\n        }\r\n\r\n        let operators = Parser.operatorPrecedence[precedence];\r\n\r\n        if (left == null || operators.indexOf(this.tt) < 0) {\r\n            return left;\r\n        }\r\n\r\n        let first = true;\r\n\r\n        while (first || operators.indexOf(this.tt) >= 0) {\r\n\r\n            let operator: TokenType = this.tt;\r\n\r\n            first = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            this.nextToken();\r\n            let right: TermNode;\r\n            if (precedence < Parser.operatorPrecedence.length - 1) {\r\n                right = this.parseTermBinary(precedence + 1);\r\n            } else {\r\n                right = this.parseUnary();\r\n            }\r\n\r\n            left = {\r\n                type: TokenType.binaryOp,\r\n                position: position,\r\n                operator: operator,\r\n                firstOperand: left,\r\n                secondOperand: right\r\n            };\r\n\r\n\r\n        }\r\n\r\n        return left;\r\n\r\n    }\r\n\r\n\r\n    // -, not, this, super, a.b.c[][].d, a.b(), b() (== this.b()), super.b(), super()\r\n    parseUnary(): TermNode {\r\n\r\n        let term: TermNode;\r\n        let position: TextPosition = this.getCurrentPosition();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n                return this.parseBracket();\r\n            case TokenType.minus:\r\n                // case TokenType.not:\r\n                position = position;\r\n                let tt1 = this.tt;\r\n                this.nextToken();\r\n                term = this.parseUnary();\r\n\r\n                return {\r\n                    type: TokenType.unaryOp,\r\n                    position: position,\r\n                    operand: term,\r\n                    operator: tt1\r\n                };\r\n\r\n            case TokenType.integerConstant:\r\n            case TokenType.charConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n                term = {\r\n                    type: TokenType.constantNode,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: this.tt,\r\n                    constant: this.cct.value\r\n                };\r\n                let isStringConstant = this.tt == TokenType.stringConstant;\r\n                this.nextToken();\r\n\r\n                if (isStringConstant) return this.parseDotOrArrayChains(term);\r\n\r\n                return term;\r\n            case TokenType.identifier: // attribute of current class or local variable\r\n\r\n                let identifier1 = <string>this.cct.value;\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    let rightBracketPosition = parameters.rightBracketPosition;\r\n\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position1,\r\n                        rightBracketPosition: rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        identifier: identifier1,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.identifier,\r\n                        identifier: identifier1,\r\n                        position: position\r\n                    }\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.dot) {\r\n                        let position = this.getCurrentPosition();\r\n                        this.nextToken();\r\n                        this.expect(TokenType.identifier, false);\r\n                        let secondIdentifier: IdentifierNode = {\r\n                            type: TokenType.identifier,\r\n                            identifier: <string>this.cct.value,\r\n                            position: this.getCurrentPosition()\r\n                        }\r\n                        this.nextToken();\r\n                        term = {\r\n                            type: TokenType.dot,\r\n                            identifierLeft: <IdentifierNode>term,\r\n                            identifierRight: secondIdentifier,\r\n                            position: position\r\n                        }\r\n\r\n                    } else if ([TokenType.isNull, TokenType.isNotNull].indexOf(this.tt) >= 0) {\r\n                        term = {\r\n                            type: TokenType.unaryOp,\r\n                            operand: term,\r\n                            operator: this.tt,\r\n                            position: position\r\n                        };\r\n                        this.nextToken();\r\n                    }\r\n                }\r\n\r\n                return term;\r\n            default:\r\n                this.pushError(\"Erwartet wird eine Variable, ein Methodenaufruf oder eine Konstante. Gefunden wurde: \" + this.cct.value);\r\n                return null;\r\n        }\r\n\r\n    }\r\n\r\n    parseList(): ListNode {\r\n        let node: ListNode = {\r\n            type: TokenType.list,\r\n            position: this.getCurrentPosition(),\r\n            elements: []\r\n        }\r\n\r\n        let constantTypes = [TokenType.charConstant, TokenType.stringConstant, TokenType.booleanConstant, TokenType.floatingPointConstant, TokenType.integerConstant];\r\n\r\n        while (constantTypes.indexOf(this.tt) >= 0) {\r\n            node.elements.push({\r\n                type: TokenType.constantNode,\r\n                constant: this.cct.value,\r\n                constantType: this.tt,\r\n                position: this.cct.position\r\n            });\r\n            this.nextToken();\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            }\r\n            this.nextToken();\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    parseBracket(): TermNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n        let tokenBeforeBracket = this.lastToken;\r\n        this.nextToken(); // consume (\r\n\r\n        if (this.tt == TokenType.keywordSelect) {\r\n            let selectNode = this.parseSelect();\r\n            this.expect(TokenType.rightBracket, true);\r\n            return selectNode;\r\n        } else if ([TokenType.comma, TokenType.rightBracket].indexOf(this.ct[1].tt) >= 0 &&\r\n            [TokenType.keywordIn, TokenType.keywordNotIn].indexOf(tokenBeforeBracket.tt) >= 0) {\r\n            let listNode = this.parseList();\r\n            this.expect(TokenType.rightBracket, true);\r\n            return listNode;\r\n        } else {\r\n            let term = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            let bracketsNode: BracketsNode = {\r\n                position: rightBracketPosition,\r\n                type: TokenType.rightBracket,\r\n                termInsideBrackets: term\r\n            }\r\n\r\n\r\n            return bracketsNode;\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    parseMethodCallParameters(): { rightBracketPosition: TextPosition, nodes: TermNode[], commaPositions: TextPosition[] } {\r\n        // Assumption: current token is (        \r\n        this.nextToken();\r\n        if (this.tt == TokenType.rightBracket) {\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n            return { rightBracketPosition: rightBracketPosition, nodes: [], commaPositions: [] };\r\n        }\r\n\r\n        let parameters: TermNode[] = [];\r\n        let commaPositions: TextPosition[] = [];\r\n\r\n        while (true) {\r\n            let pos = this.pos;\r\n\r\n            if (this.tt == TokenType.multiplication) {\r\n                this.nextToken();\r\n                parameters.push({\r\n                    type: TokenType.allColumns,\r\n                    position: this.getCurrentPosition(),\r\n                });\r\n            } else {\r\n                let parameter = this.parseTerm();\r\n                if (parameter != null) {\r\n                    parameters.push(parameter);\r\n                }\r\n            }\r\n\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            } else {\r\n                commaPositions.push(this.getCurrentPosition());\r\n                this.nextToken(); // consume comma\r\n            }\r\n\r\n            // emergency-step:\r\n            if (this.pos == pos) {\r\n                this.nextToken();\r\n            }\r\n\r\n        }\r\n\r\n        let position = this.getCurrentPosition();\r\n        let rightBracketFound = this.expect(TokenType.rightBracket, true);\r\n\r\n        return { rightBracketPosition: rightBracketFound ? position : null, nodes: parameters, commaPositions: commaPositions };\r\n\r\n    }\r\n\r\n    parseDotOrArrayChains(term: TermNode): TermNode {\r\n\r\n        if (term == null) return null;\r\n\r\n        while (this.comesToken([TokenType.dot, TokenType.leftSquareBracket])) {\r\n            if (this.tt == TokenType.dot) {\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.identifier) {\r\n                    this.pushError(\"Erwartet wird der Bezeichner eines Attributs oder einer Methode, gefunden wurde: \" + this.cct.value);\r\n                    return term;\r\n                }\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position,\r\n                        rightBracketPosition: parameters.rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        identifier: identifier,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                }\r\n                // else {\r\n                //     term = {\r\n                //         type: TokenType.pushAttribute,\r\n                //         position: position,\r\n                //         identifier: identifier,\r\n                //         object: term\r\n                //     }\r\n                // }\r\n\r\n            }\r\n        }\r\n\r\n        return term;\r\n    }\r\n\r\n\r\n}","import { ColumnStructure, TableStructure } from \"../../tools/DatabaseTools.js\";\nimport { SQLType, SQLBaseType, SQLDerivedType } from \"./SQLTypes.js\";\n\n\nexport class Column {\n\n    references: Column;\n    fromColumnStructure?: ColumnStructure;\n    notNull: boolean;\n\n    constructor(public identifier: string, public type: SQLType, public table: Table, public isPrimaryKey: boolean, public isNullable: boolean, public defaultValue: string, public isAutoIncrement){\n\n    }\n\n    static fromColumnStructure(cs: ColumnStructure, table: Table): Column {\n\n        let regex1 = /^(\\w*) *(?:\\((.*)\\))?.*$/;\n\n        let typeMatch1 = cs.completeTypeSQL.match(regex1);\n        let baseTypeIdentifier: string = typeMatch1[1];\n        let commaSeparatedParameters: string = typeMatch1[2];\n\n        let parameterValues: number[] = [];\n        if(commaSeparatedParameters != null){\n            parameterValues = commaSeparatedParameters.split(',').map(v => parseInt(v.trim()));           \n        }\n\n        let type: SQLType = SQLBaseType.getBaseType(baseTypeIdentifier);\n        if(parameterValues.length > 0 && type != null){\n            type = new SQLDerivedType(<SQLBaseType>type, parameterValues);\n        }\n\n        let column = new Column(cs.name, type, table, cs.isPrimaryKey, !cs.isPrimaryKey, cs.defaultValue, cs.isAutoIncrement);\n        column.notNull = cs.notNull;\n        \n        column.fromColumnStructure = cs;\n\n        return column;\n    }\n\n}\n\nexport class Table {\n    \n    public columns: Column[] = [];\n\n    public size: number;\n\n    constructor(public identifier: string){\n\n    }\n\n    private static fromTableStructure(ts: TableStructure): Table {\n        let table: Table = new Table(ts.name);\n        table.columns = ts.columns.map( column => Column.fromColumnStructure(column, table));\n        table.size = ts.size;\n        return table;\n    }\n\n    static fromTableStructureList(tsList: TableStructure[]): Table[]{\n\n        if(tsList == null) tsList = [];\n\n        let tables: Table[] = tsList.map(ts => Table.fromTableStructure(ts));\n\n        let columnStructureToColumnMap: Map<ColumnStructure, Column> = new Map();\n        for(let table of tables){\n            for(let column of table.columns){\n                columnStructureToColumnMap.set(column.fromColumnStructure, column);\n            }\n        }\n\n        for(let table of tables){\n            for(let column of table.columns){\n                let referencedCs = column.fromColumnStructure.references;\n                if(referencedCs != null){\n                    let referencedColumn = columnStructureToColumnMap.get(referencedCs);\n                    column.references = referencedColumn;\n                }\n            }\n        }\n\n        return tables;\n    }\n\n}","import { DatabaseStructure } from \"../../tools/DatabaseTools.js\";\r\nimport { TextPosition } from \"../lexer/Token.js\";\r\nimport { Table, Column } from \"./SQLTable.js\";\r\n\r\nexport type Symbol = {\r\n    identifier: string;\r\n    table?: Table;\r\n    column?: Column;\r\n    tableAlias?: string;\r\n    posOfDefinition: TextPosition;\r\n    referencedOnPositions: TextPosition[];\r\n}\r\n\r\nexport class SymbolTable {\r\n    parent: SymbolTable; // SymbolTable of parent scope\r\n    positionFrom: TextPosition;\r\n    positionTo: TextPosition;\r\n\r\n    childSymbolTables: SymbolTable[] = [];\r\n\r\n    private symbols: Map<string, Symbol[]> = new Map();\r\n    symbolList: Symbol[] = [];\r\n\r\n    constructor(parentSymbolTable: SymbolTable, positionFrom: TextPosition, positionTo: TextPosition) {\r\n\r\n        this.parent = parentSymbolTable;\r\n\r\n        this.positionFrom = positionFrom;\r\n        this.positionTo = positionTo;\r\n\r\n\r\n        if (this.parent != null) {\r\n            this.parent.childSymbolTables.push(this);\r\n        }\r\n    }\r\n\r\n    extractDatabaseStructure(databaseStructure: DatabaseStructure) {\r\n        for (let table of Table.fromTableStructureList(databaseStructure?.tables)) {\r\n\r\n            this.storeTableSymbols(table);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    storeTableSymbols(table: Table){\r\n        this.storeSymbol({\r\n            identifier: table.identifier,\r\n            posOfDefinition: null,\r\n            referencedOnPositions: [],\r\n            table: table\r\n        });\r\n\r\n        for (let column of table.columns) {\r\n            this.storeSymbol({\r\n                identifier: column.identifier,\r\n                posOfDefinition: null,\r\n                referencedOnPositions: [],\r\n                column: column\r\n            });\r\n        }\r\n    }\r\n\r\n    storeSymbol(symbol: Symbol) {\r\n        let list: Symbol[] = this.symbols.get(symbol.identifier);\r\n        if (list == null) {\r\n            list = [symbol];\r\n            this.symbols.set(symbol.identifier.toLowerCase(), list);\r\n        } else {\r\n            list.push(symbol);\r\n        }\r\n        this.symbolList.push(symbol);\r\n    }\r\n\r\n    findTableAtPosition(line: number, column: number): SymbolTable {\r\n\r\n        if (!this.containsPosition(line, column)) {\r\n            return null;\r\n        }\r\n\r\n        let shortestSymbolTableContainingPosition = null;\r\n        let shortestPosition = 10000000;\r\n\r\n        for (let st of this.childSymbolTables) {\r\n            if (st.containsPosition(line, column)) {\r\n                let st1 = st.findTableAtPosition(line, column);\r\n                if (st1.positionTo.line - st1.positionFrom.line < shortestPosition) {\r\n                    shortestSymbolTableContainingPosition = st1;\r\n                    shortestPosition = st1.positionTo.line - st1.positionFrom.line;\r\n                }\r\n            }\r\n            // if(st.containsPosition(line, column) && st.positionTo.line - st.positionFrom.line < shortestPosition){\r\n            //     shortestSymbolTableContainingPosition = st;\r\n            //     shortestPosition = st.positionTo.line - st.positionFrom.line;\r\n            // }\r\n        }\r\n\r\n        if (shortestSymbolTableContainingPosition != null) {\r\n            return shortestSymbolTableContainingPosition;\r\n        } else {\r\n            return this;\r\n        }\r\n\r\n    }\r\n\r\n    containsPosition(line: number, column: number) {\r\n        if (line < this.positionFrom.line || line > this.positionTo.line) {\r\n            return false;\r\n        }\r\n\r\n        if (line == this.positionFrom.line && column < this.positionFrom.column) return false;\r\n        if (line == this.positionTo.line && column > this.positionTo.column + 1) return false;\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    findTable(identifier: string): Table {\r\n        let tables = this.findTables(identifier);\r\n        if(tables.length == 0) return null;\r\n        return tables[0].table;\r\n    }\r\n\r\n    findTables(identifier: string): Symbol[] {\r\n\r\n        let symbolTable: SymbolTable = this;\r\n        while(symbolTable != null){\r\n\r\n            let symbols = symbolTable.symbols.get(identifier.toLowerCase());\r\n            if(symbols != null){\r\n                symbols = symbols.filter(s => s.table != null);\r\n                if(symbols.length > 0){\r\n                    return symbols;\r\n                }\r\n            }\r\n\r\n            symbolTable = symbolTable.parent;\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    findColumn(identifier: string): Symbol[] {\r\n\r\n        let symbolTable: SymbolTable = this;\r\n        while(symbolTable != null){\r\n\r\n            let symbols = symbolTable.symbols.get(identifier.toLowerCase());\r\n            if(symbols != null){\r\n                symbols = symbols.filter(s => s.column != null);\r\n                if(symbols.length > 0){\r\n                    return symbols;\r\n                }\r\n            }\r\n\r\n            symbolTable = symbolTable.parent;\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { SQLBaseType, SQLType } from \"./SQLTypes.js\";\r\n\r\nexport class SQLMethodParameter {\r\n    type: SQLType;\r\n    constructor(public identifier: string, type: string){\r\n        this.type = SQLBaseType.getBaseType(type);\r\n    }\r\n}\r\n\r\nexport class SQLMethod {\r\n    acceptsStarParameter: boolean = false;\r\n    public returnType: SQLType;\r\n    constructor(public identifier: string, public isAggregating: boolean, returnType: string, public parameters: SQLMethodParameter[]){\r\n        this.returnType = SQLBaseType.getBaseType(returnType);\r\n    }\r\n\r\n}\r\n\r\nexport class SQLMethodStore {\r\n\r\n    static instance: SQLMethodStore;\r\n    public methods: SQLMethod[] = [];\r\n\r\n    static getInstance():SQLMethodStore {\r\n        if(this.instance == null){\r\n            this.instance = new SQLMethodStore();\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    constructor(){\r\n        this.pushOneParameterMethod(\"max\" ,\"integer\", \"integer\");\r\n        this.pushOneParameterMethod(\"max\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"min\" ,\"integer\", \"integer\");\r\n        this.pushOneParameterMethod(\"min\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"avg\" ,\"integer\", \"integer\");\r\n        this.pushOneParameterMethod(\"avg\" ,\"float\", \"float\");\r\n\r\n        let countMethod = new SQLMethod(\"count\", true, \"integer\", [new SQLMethodParameter(\"spalte\", \"text\")]);\r\n        countMethod.acceptsStarParameter = true;\r\n        this.methods.push(countMethod);\r\n    }\r\n    \r\n    getMethods(identifier: string){\r\n        return this.methods.filter(m => m.identifier == identifier.toLowerCase());\r\n    }\r\n\r\n\r\n    pushOneParameterMethod(identifier: string, returnType: string, parameterType: string){\r\n        this.methods.push(new SQLMethod(identifier, true, returnType, [new SQLMethodParameter(\"spalte\", parameterType)]));\r\n\r\n    }\r\n}","export function hash(s: string){\r\n    let hash: number = 0;\r\n    let chr: number;\r\n    for (let i = 0; i < s.length; i++) {\r\n      chr   = s.charCodeAt(i);\r\n      hash  = ((hash << 5) - hash) + chr;\r\n      hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n\r\nexport function escapeHtml(unsafe: string): string {\r\n  return unsafe\r\n      .replace(/['\"]+/g, '')\r\n       .replace(/&/g, \"&amp;\")\r\n       .replace(/</g, \"&lt;\")\r\n       .replace(/>/g, \"&gt;\")\r\n       .replace(/\"/g, \"&quot;\")\r\n       .replace(/'/g, \"&#039;\");\r\n}\r\n\r\nexport function dateToString(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth() + 1)}.${date.getFullYear()}, ${twoDez(date.getHours())}:${twoDez(date.getMinutes())}`;\r\n}\r\n\r\nexport function dateToStringWithoutTime(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth())}.${date.getFullYear()}`;\r\n}\r\n\r\nfunction twoDez(z: number):string {\r\n  if(z < 10) return \"0\" + z;\r\n  return \"\" + z;\r\n}\r\n\r\nexport function stringToDate(text: string): Date {\r\n\r\n  let match = text.match(/^(\\d{2})\\.(\\d{2})\\.(\\d{4}), (\\d{2}):(\\d{2})$/);\r\n\r\n  let date: Date = new Date(Number.parseInt(match[3]), Number.parseInt(match[2]), Number.parseInt(match[1]), Number.parseInt(match[4]), Number.parseInt(match[5]) );\r\n\r\n  return date;\r\n}\r\n\r\nexport function stringWrap(s: string, length: number ): string{\r\n  return s.replace(\r\n    new RegExp(`(?![^\\\\n]{1,${length}}$)([^\\\\n]{1,${length}})\\\\s`, 'g'), '$1\\n'\r\n  );\r\n} \r\n\r\nexport function formatAsJavadocComment(s: string, indent: number|string = \"\"): string {\r\n  let indentString = \"\";\r\n\r\n  if(typeof indent == \"string\"){\r\n    indentString = indent;\r\n  } else {\r\n    for(let i = 0; i < indent; i++){\r\n      indentString += \" \";\r\n    }\r\n  }\r\n\r\n  s = stringWrap(s, 60);\r\n  if(s.length > 0) s = \"\\n\" + s;\r\n  s = indentString + \"/**\" + s.replace(/\\n/g, \"\\n\" + indentString + \" * \") + \"\\n\" + indentString + \" */\";\r\n  return s;\r\n}\r\n\r\n\r\nexport function isDate(inputText: string) {\r\n\r\n      if (inputText == null || typeof inputText != 'string') return false;\r\n\r\n      // var dateformat = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/;\r\n      var dateformat = /^\\d{4}[\\/\\-](0?[1-9]|1[012])[\\/\\-](0?[1-9]|[12][0-9]|3[01])$/;\r\n      // Match the date format through regular expression\r\n      if (inputText.match(dateformat)) {\r\n          //Test which seperator is used '/' or '-'\r\n          var opera1 = inputText.split('/');\r\n          var opera2 = inputText.split('-');\r\n          var lopera1 = opera1.length;\r\n          var lopera2 = opera2.length;\r\n          // Extract the string into month, date and year\r\n          if (lopera1 > 1) {\r\n              var pdate = inputText.split('/');\r\n          }\r\n          else if (lopera2 > 1) {\r\n              var pdate = inputText.split('-');\r\n          }\r\n          if (pdate.length != 3) return false;\r\n          var dd = parseInt(pdate[2]);\r\n          var mm = parseInt(pdate[1]);\r\n          var yy = parseInt(pdate[0]);\r\n          // Create list of days of a month [assume there is no leap year by default]\r\n          var ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n          if (mm == 1 || mm > 2) {\r\n              if (dd > ListofDays[mm - 1]) {\r\n                  return false;\r\n              }\r\n          }\r\n          if (mm == 2) {\r\n              var lyear = false;\r\n              if ((!(yy % 4) && yy % 100) || !(yy % 400)) {\r\n                  lyear = true;\r\n              }\r\n              if ((lyear == false) && (dd >= 29)) {\r\n                  return false;\r\n              }\r\n              if ((lyear == true) && (dd > 29)) {\r\n                  return false;\r\n              }\r\n              return true;\r\n          }\r\n\r\n          return true;\r\n\r\n      }\r\n      else {\r\n          return false;\r\n      }\r\n  }\r\n\r\n  export function isDateTime(inputText: string) {\r\n\r\n      if (inputText == null || typeof inputText != 'string') return false;\r\n\r\n      // var dateformat = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/;\r\n      var dateformat = /^\\d{4}[\\-](0[1-9]|1[012])[\\-](0[1-9]|[12][0-9]|3[01]) ([01][1-9]|2[0123]):([0-5][0-9]):([0-5][0-9])$/;\r\n      // Match the date format through regular expression\r\n      if (inputText.match(dateformat)) {\r\n          var splitStr = inputText.split(' ');\r\n          var dateStr = splitStr[0];\r\n          //var timeStr = splitStr[1];\r\n\r\n          if (dateStr.length != 10) return false;\r\n          var dd = parseInt(dateStr.substring(8,10));\r\n          var mm = parseInt(dateStr.substring(5, 7));\r\n          var yy = parseInt(dateStr.substring(0, 4));\r\n          // Create list of days of a month [assume there is no leap year by default]\r\n          var ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n          if (mm == 1 || mm > 2) {\r\n              if (dd > ListofDays[mm - 1]) {\r\n                  return false;\r\n              }\r\n          }\r\n          if (mm == 2) {\r\n              var lyear = false;\r\n              if ((!(yy % 4) && yy % 100) || !(yy % 400)) {\r\n                  lyear = true;\r\n              }\r\n              if ((lyear == false) && (dd >= 29)) {\r\n                  return false;\r\n              }\r\n              if ((lyear == true) && (dd > 29)) {\r\n                  return false;\r\n              }\r\n              return true;\r\n          }\r\n\r\n          return true;\r\n\r\n      }\r\n      else {\r\n          return false;\r\n      }\r\n  }\r\n","import { DatabaseTool } from \"../../tools/DatabaseTools.js\";\nimport { TextPosition, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\nimport { CompletionHint, Module } from \"./Module.js\";\nimport { Symbol, SymbolTable } from \"./SymbolTable.js\";\nimport { AlterTableNode, ASTNode, BinaryOpNode, CreateTableNode, DeleteNode, DotNode, DropTableNode, IdentifierNode, InsertNode, MethodcallNode, SelectNode, TableOrSubqueryNode, TermNode, UpdateNode } from \"./Ast.js\";\nimport { Error, ErrorLevel, QuickFix } from \"../lexer/Lexer.js\";\nimport { Column, Table } from \"./SQLTable.js\";\nimport { SQLBaseType, SQLType } from \"./SQLTypes.js\";\nimport { SQLMethodStore } from \"./SQLMethods.js\";\nimport { isDate, isDateTime } from \"../../tools/StringTools.js\";\n\n\nexport class SymbolResolver {\n\n    symbolTableStack: SymbolTable[] = [];\n    errorList: Error[];\n    module: Module;\n    databaseTool: DatabaseTool;\n    tables: Table[];\n\n    constructor(databaseTool: DatabaseTool) {\n        this.databaseTool = databaseTool;\n        this.tables = Table.fromTableStructureList(databaseTool.databaseStructure?.tables);\n    }\n\n    start(module: Module) {\n        this.module = module;\n        this.symbolTableStack = [];\n        this.errorList = [];\n\n        module.mainSymbolTable = new SymbolTable(null, { column: 0, line: 0, length: 0 }, { column: 0, line: 100000, length: 0 })\n\n        this.symbolTableStack.push(module.mainSymbolTable);\n\n        for (let statement of this.module.sqlStatements) {\n\n            let errorsBeforeStatement = this.errorList.length;\n\n            let astNode = statement.ast;\n            if (astNode == null) continue;\n\n            switch (astNode.type) {\n                case TokenType.keywordSelect:\n                    this.resolveSelect(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordInsert:\n                    this.resolveInsert(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordCreate:\n                    this.resolveCreateTable(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordUpdate:\n                    this.resolveUpdate(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordDelete:\n                    this.resolveDelete(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordDrop:\n                    this.resolveDropTable(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordAlter:\n                    this.resolveAlterTable(astNode)\n                    this.symbolTableStack.pop();\n                    break;\n\n                default:\n                    break;\n            }\n\n            statement.hasErrors = statement.hasErrors || this.errorList.length > errorsBeforeStatement;\n\n        }\n\n        module.errors[2] = this.errorList;\n\n    }\n\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position: TextPosition, quickFix?: QuickFix) {\n        // if (position == null) position = Object.assign({}, this.position);\n        this.errorList.push({\n            text: text,\n            position: position,\n            quickFix: quickFix,\n            level: errorLevel\n        });\n    }\n\n\n    getCurrentSymbolTable(): SymbolTable {\n        return this.symbolTableStack[this.symbolTableStack.length - 1];\n    }\n\n    pushNewSymbolTable(positionFrom: TextPosition, positionTo: TextPosition): SymbolTable {\n        if(positionTo == null) {\n            positionTo = {\n                line: 100000,\n                column: 1,\n                length: 1\n            }\n        };\n        let st: SymbolTable = new SymbolTable(this.getCurrentSymbolTable(), positionFrom, positionTo);\n        this.symbolTableStack.push(st);\n        return st;\n    }\n\n    resolveSelect(selectNode: SelectNode): Table {\n        let resultTable: Table = new Table(null);\n\n        selectNode.symbolTable = this.pushNewSymbolTable(selectNode.position, selectNode.endPosition);\n\n        // From\n        let joinedTables: Table[] = [];\n        this.resolveTableOrSubQuery(selectNode.fromNode, joinedTables);\n        if (selectNode.fromStartPosition != null) {\n            let fromSymbolTable = new SymbolTable(this.getCurrentSymbolTable(), selectNode.fromStartPosition, selectNode.fromEndPosition);\n            fromSymbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n        }\n\n        // Column list\n        for (let columnNode of selectNode.columnList) {\n            if (columnNode.type == TokenType.allColumns) {\n                for (let table of joinedTables) {\n                    for (let column of table.columns) {\n                        let c: Column = new Column(column.identifier, column.type, resultTable, false, true, column.defaultValue, column.isAutoIncrement);\n                        resultTable.columns.push(c);\n                    }\n                }\n            } else {\n                this.resolveTerm(columnNode.term);\n                let c1: Column = new Column(columnNode.alias, columnNode.term.sqlType, resultTable, false, true, null, false);\n                resultTable.columns.push(c1);\n                if (c1.identifier != null) {\n                    selectNode.symbolTable.storeSymbol({\n                        identifier: c1.identifier,\n                        posOfDefinition: columnNode.term.position,\n                        referencedOnPositions: [],\n                        column: c1\n                    })\n                }\n            }\n        }\n\n        // where...\n        if (selectNode.whereNode != null) {\n            let whereType = this.resolveTerm(selectNode.whereNode);\n            if (whereType != null && whereType.getBaseTypeName() != \"boolean\") {\n                this.pushError(\"Das Ergebnis des where-Teils einer select-Anweisung muss vom Typ boolean sein.\", \"error\", selectNode.whereNode.position);\n            }\n        }\n\n\n        // TODO: group by, order by\n\n        return resultTable;\n    }\n\n    resolveDropTable(node: DropTableNode) {\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        if (node.tableIdentifier == null) return;\n\n        let table = node.symbolTable.findTable(node.tableIdentifier);\n        if (table == null) this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\n\n    }\n\n    resolveDelete(node: DeleteNode) {\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        if (node.tableIdentifier == null) return;\n\n        let table = node.symbolTable.findTable(node.tableIdentifier);\n        if (table == null) this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\n\n\n        // if(node.whereNodeBegin != null){\n        //     let symbolTable = this.pushNewSymbolTable(node.whereNodeBegin, node.whereNodeEnd);\n        //     symbolTable.storeTableSymbols(table);\n        // }\n\n\n        if (node.whereNode != null) {\n            let whereSymbolTable = this.pushNewSymbolTable(node.whereNodeBegin, node.whereNodeEnd);\n            if(table != null) whereSymbolTable.storeTableSymbols(table);\n            this.resolveTerm(node.whereNode);\n            this.symbolTableStack.pop();\n        }\n\n\n\n    }\n\n\n    resolveAlterTable(node: AlterTableNode) {\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        if (node.tableIdentifier == null) {\n            return;\n        }\n\n        let table = node.symbolTable.findTable(node.tableIdentifier);\n        if (table == null) {\n            this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\n        }\n\n        let oldColumn: Column = null;\n        if (node.oldColumnName != null) {\n            oldColumn = table.columns.find(c => c.identifier.toLocaleLowerCase() == node.oldColumnName.toLocaleLowerCase());\n            if (oldColumn == null) {\n                this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" hat keine Spalte mit dem Bezeichner \" + node.oldColumnName, \"error\", node.oldColumnPosition);\n            }\n        }\n\n        switch (node.kind) {\n            case \"dropColumn\":\n                // nothing to do as node.oldColumnName is checked above\n                break;\n            case \"addColumn\":\n                let columnNode = node.columnDef;\n                if (columnNode == null) break;\n                if (columnNode.referencesTable != null && columnNode.baseType != null) {\n                    let tables = this.getCurrentSymbolTable().findTables(columnNode.referencesTable);\n                    if (tables.length == 1) {\n                        let table = tables[0].table;\n                        let column = table.columns.find(c => c.identifier == columnNode.referencesColumn);\n                        if (column != null && column.type != null) {\n                            if (!column.isPrimaryKey) {\n                                this.pushError(\"Die referenzierte Spalte \" + columnNode.referencesTable + \".\" + columnNode.referencesColumn + \" ist kein Primärschlüssel.\", \"warning\", columnNode.referencesPosition);\n                            }\n                            if (!column.type.canCastTo(columnNode.baseType)) {\n                                this.pushError(\"Der Datentyp \" + columnNode.baseType.toString() + \" der Spalte \" + columnNode.identifier +\n                                    \" kann nich in den Datentyp \" + column.type.toString() + \" der referenzierten Spalte \" + table.identifier + \".\" +\n                                    column.identifier + \" umgewandelt werden.\", \"error\", columnNode.referencesPosition);\n                            }\n                        }\n                    }\n                }\n                break;\n            case \"renameColumn\":\n                // nothing to do as node.oldColumnName is checked above\n                break;\n            case \"renameTable\":\n                // nothing to do \n                break;\n            default:\n                break;\n        }\n    }\n\n    resolveUpdate(node: UpdateNode) {\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        if (node.tableIdentifier == null) {\n            return;\n        }\n\n        let table = node.symbolTable.findTable(node.tableIdentifier);\n        if (table == null) this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\n\n        for (let i = 0; i < node.columnIdentifiers.length; i++) {\n            let ci = node.columnIdentifiers[i];\n            let ciPos = node.columnIdentifierPositions[i];\n            let value = node.values[i];\n\n            if (ci == null) continue;\n            let column = table.columns.find(c => c.identifier == ci);\n\n            if (column == null) {\n                this.pushError(ci + \" ist kein Bezeichner einer Spalte der Tabelle \" + node.tableIdentifier + \".\", \"error\", ciPos);\n            }\n\n            if (value == null) continue;\n            let symbolTable = this.pushNewSymbolTable(node.valuePosBegin[i], node.valuePosEnd[i]);\n            symbolTable.storeTableSymbols(table);\n            this.resolveTerm(value);\n            this.symbolTableStack.pop();\n\n        }\n\n        if (node.whereNodeBegin != null) {\n            let symbolTable = this.pushNewSymbolTable(node.whereNodeBegin, node.whereNodeEnd);\n            symbolTable.storeTableSymbols(table);\n        }\n\n        if (node.whereNode != null) {\n            this.resolveTerm(node.whereNode);\n        }\n        this.symbolTableStack.pop();\n\n    }\n\n\n\n    resolveCreateTable(createTableNode: CreateTableNode) {\n\n        createTableNode.symbolTable = this.pushNewSymbolTable(createTableNode.position, createTableNode.endPosition);\n        createTableNode.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        let thisTable: Table = {\n            identifier: createTableNode.identifier,\n            columns: null,\n            size: 0\n        }\n\n        thisTable.columns = createTableNode.columnList.map(c => {\n            return {\n                identifier: c.identifier,\n                isNullable: false,\n                isPrimaryKey: c.isPrimary,\n                isAutoIncrement: c.isAutoIncrement,\n                notNull: false,\n                references: null,\n                table: thisTable,\n                type: c.baseType,\n                defaultValue: c.defaultValue\n            }\n        });\n\n        createTableNode.symbolTable.storeTableSymbols(thisTable);\n\n        for (let columnNode of createTableNode.columnList) {\n            if (createTableNode.columnList.filter(c => c.identifier.toLocaleLowerCase() == columnNode.identifier.toLocaleLowerCase()).length > 1) {\n                this.pushError(\"Der Spaltenbezeichner \" + columnNode.identifier + \" darf in einer Tabelle nur ein einziges Mal verwendet werden\", \"error\", columnNode.position);\n            }\n\n            if (columnNode.referencesTable != null && columnNode.baseType != null) {\n                let tables = this.getCurrentSymbolTable().findTables(columnNode.referencesTable);\n                if (tables.length == 1) {\n                    let table = tables[0].table;\n                    let column = table.columns.find(c => c.identifier == columnNode.referencesColumn);\n                    if (column != null && column.type != null) {\n                        if (!column.isPrimaryKey) {\n                            this.pushError(\"Die referenzierte Spalte \" + columnNode.referencesTable + \".\" + columnNode.referencesColumn + \" ist kein Primärschlüssel.\", \"warning\", columnNode.referencesPosition);\n                        }\n                        if (!column.type.canCastTo(columnNode.baseType)) {\n                            this.pushError(\"Der Datentyp \" + columnNode.baseType.toString() + \" der Spalte \" + columnNode.identifier +\n                                \" kann nich in den Datentyp \" + column.type.toString() + \" der referenzierten Spalte \" + table.identifier + \".\" +\n                                column.identifier + \" umgewandelt werden.\", \"error\", columnNode.referencesPosition);\n                        }\n                    }\n                }\n            }\n\n        }\n\n        for (let fki of createTableNode.foreignKeyInfoList) {\n\n            let columnNode = createTableNode.columnList.find(cn => cn.identifier == fki.column);\n            if (columnNode == null) continue;\n\n            let tables = this.getCurrentSymbolTable().findTables(fki.referencesTable);\n            if (tables.length == 1) {\n                let table = tables[0].table;\n                let column = table.columns.find(c => c.identifier == fki.referencesColumn);\n                if (column != null && column.type != null) {\n                    if (!column.isPrimaryKey) {\n                        this.pushError(\"Die referenzierte Spalte \" + fki.referencesTable + \".\" + fki.referencesColumn + \" ist kein Primärschlüssel.\", \"warning\", fki.referencesPosition);\n                    }\n                    if (!column.type.canCastTo(columnNode.baseType)) {\n                        this.pushError(\"Der Datentyp \" + columnNode.baseType.toString() + \" der Spalte \" + columnNode.identifier +\n                            \" kann nich in den Datentyp \" + column.type.toString() + \" der referenzierten Spalte \" + table.identifier + \".\" +\n                            column.identifier + \" umgewandelt werden.\", \"error\", fki.referencesPosition);\n                    }\n                }\n            }\n\n        }\n\n\n    }\n\n    resolveTableOrSubQuery(tosNode: TableOrSubqueryNode, joinedTables: Table[]) {\n        if (tosNode == null) return;\n\n        switch (tosNode.type) {\n            case TokenType.table:\n                let tableList = this.tables.filter(t => t.identifier.toLowerCase() == tosNode.identifier.toLowerCase());\n                if (tableList.length == 0) {\n                    this.pushError(tosNode.identifier + \" ist nicht der Name einer Tabelle.\", \"error\", tosNode.position);\n                } else if (tableList.length > 1) {\n                    this.pushError(\"Der Bezeichner \" + tosNode.identifier + \" ist hier nicht eindeutig.\", \"error\", tosNode.position);\n                } else {\n                    let table: Table = tableList[0];\n                    joinedTables.push(table);\n                    this.storeTableIntoSymbolTable(table, tosNode.position, tosNode.alias);\n                }\n\n                break;\n\n            case TokenType.keywordJoin:\n                this.resolveTableOrSubQuery(tosNode.firstOperand, joinedTables);\n                this.resolveTableOrSubQuery(tosNode.secondOperand, joinedTables);\n                break;\n\n            case TokenType.subquery:\n                tosNode.table = this.resolveSelect(tosNode.query);\n                joinedTables.push(tosNode.table);\n                if (tosNode.alias != null) {\n                    tosNode.table.identifier = tosNode.alias;\n                    this.storeTableIntoSymbolTable(tosNode.table, tosNode.position);\n                }\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    storeTableIntoSymbolTable(table: Table, position: TextPosition, alias?: string) {\n        let symbolTable = this.getCurrentSymbolTable();\n        symbolTable.storeSymbol({\n            identifier: alias == null ? table.identifier.toLowerCase() : alias.toLowerCase(),\n            posOfDefinition: position,\n            table: table,\n            referencedOnPositions: []\n        });\n        for (let column of table.columns) {\n            symbolTable.storeSymbol({\n                identifier: column.identifier.toLowerCase(),\n                posOfDefinition: null,\n                column: column,\n                tableAlias: alias,\n                referencedOnPositions: []\n            });\n        }\n    }\n\n    resolveTerm(node: TermNode): SQLType {\n        if (node == null) return null;\n\n        switch (node.type) {\n            case TokenType.binaryOp:\n                if ([TokenType.keywordIn, TokenType.keywordNotIn].indexOf(node.operator) >= 0) {\n                    return this.resolveNotIn(node);\n                }\n\n                let typeLeft = this.resolveTerm(node.firstOperand);\n                let typeRight = this.resolveTerm(node.secondOperand);\n                if (typeLeft != null && typeRight != null) {\n                    let resultType = typeLeft.getBinaryResultType(node.operator, typeRight);\n                    if (resultType == null) {\n                        this.pushError(\"Der Operator \" + TokenTypeReadable[node.operator] + \" ist für die Datentypen \" + typeLeft.toString() + \" und \" + typeRight.toString() + \" nicht definiert.\", \"error\", node.position);\n                    }\n                    return resultType;\n                } else {\n                    return null;\n                }\n                break;\n            case TokenType.unaryOp:\n                let operandType = this.resolveTerm(node.operand);\n                if (operandType != null) {\n                    let resultType1 = operandType.getUnaryResultType(node.operator);\n                    if (resultType1 == null) {\n                        this.pushError(\"Der Operator \" + TokenTypeReadable[node.operator] + \" ist für einen Operanden des Datentyps \" + operandType.toString() + \" nicht definiert.\", \"error\", node.position);\n                    }\n                    return resultType1;\n                } else {\n                    return null;\n                }\n                break;\n            case TokenType.callMethod:\n                return this.resolveMethodCall(node);\n                break;\n            //    ConstantNode | IdentifierNode | DotNode | SelectNode | BracketsNode | StarAttributeNode | SelectNode | ListNode;\n\n            case TokenType.constantNode:\n                node.sqlType = SQLBaseType.fromConstantType(node.constantType);\n                return node.sqlType;\n                break;\n            case TokenType.identifier:\n                return this.resolveIdentifier(node);\n                break;\n            case TokenType.dot:\n                return this.resolveDot(node);\n                break;\n            case TokenType.keywordSelect:\n                let selectTable = this.resolveSelect(node);\n                if (selectTable.columns.length != 1) {\n                    this.pushError(\"Die Ergebnistabelle einer Unterabfrage an dieser Stelle muss genau eine Spalte besitzen.\", \"error\", node.position);\n                    return null;\n                }\n                return selectTable.columns[0].type;\n                break;\n            case TokenType.rightBracket:   // BracketsNode\n                node.sqlType = this.resolveTerm(node.termInsideBrackets);\n                return node.sqlType;\n                break;\n            case TokenType.allColumns:\n                this.pushError(\"Das Zeichen * kann hier nicht verwendet werden.\", \"error\", node.position);\n                break;\n            case TokenType.list:\n                this.pushError(\"Eine Liste wird hier nicht erwartet.\", \"error\", node.position);\n                break;\n            default:\n                break;\n        }\n\n\n\n\n    }\n\n    resolveDot(node: DotNode): SQLType {\n        let tableSymbols = this.getCurrentSymbolTable().findTables(node.identifierLeft.identifier);\n        if (tableSymbols.length == 0) {\n            this.pushError(\"Die Tabelle \" + node.identifierLeft.identifier + \" kann nicht gefunden werden.\", \"error\", node.identifierLeft.position);\n            return null;\n        }\n        if (tableSymbols.length > 1) {\n            this.pushError(\"Der Tabellenbezeichner \" + node.identifierLeft.identifier + \" ist nicht eindeutig.\", \"error\", node.identifierLeft.position);\n            return null;\n        }\n        let table = tableSymbols[0].table;\n\n        let columns = table.columns.filter(c => c.identifier.toLowerCase() == node.identifierRight.identifier.toLowerCase());\n\n        if (columns.length == 0) {\n            this.pushError(\"Die Tabelle \" + node.identifierLeft.identifier + \" hat keine Spalte mit dem Bezeichner \" + node.identifierRight.identifier + \".\", \"error\", node.identifierRight.position);\n            return;\n        }\n\n        if (columns.length > 1) {\n            this.pushError(\"Die Tabelle \" + node.identifierLeft.identifier + \" hat mehrere Spalten mit dem Bezeichner \" + node.identifierRight.identifier + \".\", \"error\", node.identifierRight.position);\n            return;\n        }\n\n        let column = columns[0];\n        node.sqlType = column.type;\n        return column.type;\n\n    }\n\n    resolveIdentifier(node: IdentifierNode): SQLType {\n        let symbols = this.getCurrentSymbolTable().findColumn(node.identifier);\n        if (symbols.length == 0) {\n            this.pushError(\"Der Bezeichner \" + node.identifier + \" ist an dieser Stelle nicht bekannt.\", \"error\", node.position);\n            return null;\n        }\n        if (symbols.length > 1) {\n            this.pushError(\"Der Bezeichner \" + node.identifier + \" ist nicht eindeutig.\", \"error\", node.position);\n            return null;\n        }\n\n        let symbol = symbols[0];\n        node.sqlType = symbol.column.type;\n        return symbol.column.type;\n    }\n\n    resolveMethodCall(node: MethodcallNode): SQLType {\n\n        let methodStore = SQLMethodStore.getInstance();\n        let methods = methodStore.getMethods(node.identifier);\n\n        methods = methods.filter(m => m.parameters.length == node.operands.length);\n        if (node.operands.length == 1 && node.operands[0].type == TokenType.allColumns) {\n            methods = methods.filter(m => m.acceptsStarParameter);\n            node.sqlType = methods[0].returnType;\n            return node.sqlType;\n        }\n\n        if (methods.length == 0) {\n            this.pushError(\"Es gibt keine passende Methode mit dem Bezeichner '\" + node.identifier + \"'.\", \"error\", node.position);\n            return null;\n        }\n\n        for (let operand of node.operands) {\n            if (this.resolveTerm(operand) == null) {\n                node.sqlType = methods[0].returnType;\n                return node.sqlType;\n            }\n        }\n\n        for (let method of methods) {\n            let found = true;\n            for (let i = 0; i < method.parameters.length; i++) {\n                let methodParameter = method.parameters[i];\n                let operand = node.operands[i];\n                if (!operand.sqlType.canCastTo(methodParameter.type)) {\n                    found = false;\n                    break;\n                }\n            }\n            if (found) {\n                node.sqlType = method.returnType;\n                return node.sqlType;\n            }\n        }\n\n        this.pushError(\"Es gibt keine passende Methode mit dem Bezeichner '\" + node.identifier + \"'.\", \"error\", node.position);\n        return null;\n\n    }\n\n    resolveNotIn(node: BinaryOpNode): SQLType {\n\n        if (node.firstOperand == null || node.secondOperand == null) return null;\n\n        let operatorString = TokenTypeReadable[node.operator];\n\n        this.resolveTerm(node.firstOperand);\n        let leftType = node.firstOperand.sqlType;\n        if (leftType != null) {\n            if (node.secondOperand.type == TokenType.keywordSelect) {\n                let selectNode = node.secondOperand;\n                if (selectNode.columnList.length != 1) {\n                    this.pushError(\"Wenn rechts vom Operator '\" + operatorString + \"' eine Unterabfrage steht, muss die Ergebnistabelle dieser Unterabfrage genau eine Spalte haben.\", \"error\", selectNode.position);\n                }\n                this.resolveSelect(selectNode);\n                let pType = selectNode.columnList[0].term.sqlType;\n                if (!pType.canCastTo(leftType)) {\n                    this.pushError(\"Der Datentyp der Ergebnisspalte der Unterabfrage ist \" + pType.toString() + \". Dieser kann nicht in den Datentyp \" + leftType.toString() + \" umgewandelt werden.\", \"error\", selectNode.position);\n                }\n            } else if (node.secondOperand.type == TokenType.list) {\n                let listNode = node.secondOperand;\n                for (let element of listNode.elements) {\n                    let elementType = SQLBaseType.fromConstantType(element.constantType);\n                    element.sqlType = elementType;\n                    if (!elementType.canCastTo(leftType)) {\n                        this.pushError(\"Der Datentyp des Listenelements \" + element.constant + \" ist \" + elementType.toString() + \". Er kann nicht in den Datentype \" + leftType.toString() + \" des Operanden auf der linken Seite des Operators '\" + operatorString + \"' umgewandelt werden.\", \"error\", element.position);\n                    }\n                }\n            } else {\n                this.pushError(\"Der rechte Operand der Operatoren 'in' und 'not in' muss eine Unterabfrage oder eine Liste sein.\", \"error\", node.secondOperand.position);\n            }\n\n        }\n\n        return SQLBaseType.getBaseType(\"boolean\");\n    }\n\n    resolveInsert(astNode: InsertNode) {\n\n        let table: Table = null;\n        let symbolTable = this.pushNewSymbolTable(astNode.position, astNode.endPosition);\n        if (astNode.table != null) {\n            astNode.table.table = this.tables.find(t => t.identifier.toLowerCase() == astNode.table.identifier.toLocaleLowerCase());\n            if (astNode.table.table == null) {\n                this.pushError(\"Die Tabelle \" + astNode.table.identifier + \" gibt es nicht.\", \"error\", astNode.table.position);\n            } else {\n                table = astNode.table.table;\n                symbolTable.storeTableSymbols(table);\n            }\n        }\n\n        let tableCompletionTo = astNode.endPosition;\n        if (astNode.valuesPosition != null) tableCompletionTo = astNode.valuesPosition;\n        if (astNode.columnsPosition != null) tableCompletionTo = astNode.columnsPosition;\n\n        this.module.addCompletionHint(astNode.position, tableCompletionTo, false, true, [\"into\", \"values\"]);\n\n        if (table != null) {\n            this.module.addCompletionHint(tableCompletionTo, astNode.valuesPosition == null ? astNode.endPosition : astNode.valuesPosition, true, false, [\"values\"]);\n        }\n\n        let tableSymbolTable = this.pushNewSymbolTable(astNode.position, tableCompletionTo);\n        tableSymbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        let columns: Column[] = [];\n        // Parse column list\n        if (astNode.columnList.length == 0) {\n            if (table != null) {\n                columns = table.columns;\n            }\n        } else {\n            if (table != null) {\n                for (let columnNode of astNode.columnList) {\n                    let column = table.columns.find(c => c.identifier.toLowerCase() == columnNode.identifier.toLowerCase());\n                    if (column == null) {\n                        this.pushError(\"Die Tabelle \" + table.identifier + \" besitzt keine Spalte mit dem Bezeichner \" + columnNode.identifier + \".\", \"error\", columnNode.position);\n                    } else {\n                        columns.push(column);\n                    }\n                }\n            }\n        }\n\n        if (columns.length > 0) {\n            // Parse value lists\n            for (let valueList of astNode.values) {\n                if (valueList.length != columns.length && valueList.length > 0) {\n                    this.pushError(\"Erwartet werden \" + columns.length + \" Elemente, hier stehen aber \" + valueList.length + \" Elemente in der Liste.\", \"error\", valueList[0].position);\n                } else {\n                    for (let i = 0; i < valueList.length; i++) {\n                        let value = valueList[i];\n                        let column = columns[i];\n                        value.sqlType = SQLBaseType.fromConstantType(value.constantType);\n                        // constantType == 40 means: null\n                        // TODO: check if column is nullable!\n                        let destType = column.type.toString().toLocaleLowerCase();\n                        if (value.constantType == TokenType.keywordNull) {\n                            if (!column.isNullable || column.notNull) {\n                                this.pushError(\"Die Spalte \" + column.identifier + \" ist nicht nullable, daher kann null hier nicht eingefügt werden.\", \"error\", value.position);\n                            }\n                        } else if (!value.sqlType.canCastTo(column.type)) {\n                            let error: string = \"Der Wert \" + value.constant + \" vom Datentyp \" + value.sqlType.toString() + \" kann nicht in den Datentyp \" + column.type.toString() + \" der Spalte \" + column.identifier + \" umgewandelt werden.\";\n\n                            if(destType == \"date\") error += \"<br><b>Tipp: </b>Datumswerte haben die Form 'yyyy-mm-dd', also z.B. '2022-06-15'.\";\n                            if(destType == \"datetime\") error += \"<br><b>Tipp: </b>Timestamps haben die Form 'yyyy-mm-dd hh:min:ss', also z.B. '2022-06-15 07:56:22'.\";\n\n                            this.pushError(error, \"error\", value.position);\n                        } else if(destType == \"date\"){\n                            if(!isDate(value.constant)){\n                                let error: string = `'${value.constant}' ist kein date-Wert.<br><b>Tipp: </b>Datumswerte haben die Form 'yyyy-mm-dd', also z.B. '2022-06-15'.`;\n                                this.pushError(error, \"error\", value.position);\n                            }\n                        } else if(destType == \"datetime\"){\n                            if(!isDateTime(value.constant)){\n                                let error: string = `'${value.constant}' ist kein datetime-Wert.<br><b>Tipp: </b>Timestamps haben die Form 'yyyy-mm-dd hh:min:ss', also z.B. '2022-06-15 07:56:22'.`;\n                                this.pushError(error, \"error\", value.position);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        this.symbolTableStack.pop();\n\n    }\n\n\n\n}\n\n","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { SymbolResolver } from \"./parser/SymbolResolver.js\";\r\n\r\nexport enum CompilerStatus {\r\n    compiling, error, compiledButNothingToRun, readyToRun\r\n}\r\n\r\nexport class Compiler {\r\n\r\n    compilerStatus: CompilerStatus = CompilerStatus.compiledButNothingToRun;\r\n\r\n    atLeastOneModuleIsStartable: boolean;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    compile(moduleStore: ModuleStore): Error[] {\r\n\r\n        this.compilerStatus = CompilerStatus.compiling;\r\n\r\n        let t0 = performance.now();\r\n\r\n        let lexer = new Lexer();\r\n\r\n        // 1st pass: lexing\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.file.dirty = false;\r\n            m.clear();\r\n\r\n            let lexed = lexer.lex(m.getProgramTextFromMonacoModel());\r\n            m.errors[0] = lexed.errors;\r\n            m.tokenList = lexed.tokens;\r\n            m.bracketError = lexed.bracketError;\r\n            if(m.file.name == this.main.getCurrentlyEditedModule().file.name){\r\n                if(this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(lexed.bracketError);\r\n            }\r\n        }\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        this.main.getSemicolonAngel().startRegistering();\r\n\r\n        let parser: Parser = new Parser(false);\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            parser.parse(m);\r\n        }\r\n        \r\n        // 3rd pass: check symbols and types\r\n        let databaseTool = this.main.getDatabaseTool();\r\n        let symbolResolver: SymbolResolver = new SymbolResolver(databaseTool);\r\n\r\n        for(let m of moduleStore.getModules(false)){\r\n            symbolResolver.start(m);\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        let message = \"Compiled in \" + dt + \" ms.\";\r\n\r\n        this.main.getCurrentWorkspace().compilerMessage = message;\r\n\r\n        this.main.getSemicolonAngel().healSemicolons();\r\n\r\n        this.compilerStatus = CompilerStatus.readyToRun;\r\n\r\n        return null;\r\n    }\r\n\r\n}","import { FileData } from \"../../communication/Data.js\";\r\nimport { AccordionElement } from \"../../main/gui/Accordion.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenType, TextPositionWithoutLength } from \"../lexer/Token.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { ASTNode } from \"./AST.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\nimport { stringToDate } from \"../../tools/StringTools.js\";\r\nimport { SQLStatement } from \"./Parser.js\";\r\n\r\n\r\nexport type CompletionHint = {\r\n    fromLine: number,\r\n    fromColumn: number,\r\n    toLine: number, \r\n    toColumn: number,\r\n    hintColumns: boolean,\r\n    hintColumnsOfTable?: string,\r\n    hintTables: boolean,\r\n    hintKeywords: string[],\r\n    dontHint?: string[],\r\n    praefix?: string,\r\n    suffix?: string\r\n}\r\n\r\nexport type File = {\r\n    name: string,\r\n    id?: number,\r\n    text: string,\r\n\r\n    text_before_revision: string,\r\n    submitted_date: string,\r\n    student_edited_after_revision: boolean,\r\n\r\n    dirty: boolean,\r\n    saved: boolean,\r\n    version: number,\r\n    panelElement?: AccordionElement\r\n\r\n}\r\n\r\nexport type IdentifierPosition = {\r\n    position: TextPosition,\r\n    element: any;\r\n}\r\n\r\nexport type MethodCallPosition = {\r\n    identifierPosition: TextPosition,\r\n    possibleMethods: any[] | string, // string for print, println, ...\r\n    commaPositions: TextPosition[],\r\n    rightBracketPosition: TextPosition\r\n}\r\n\r\nexport class Module {\r\n    file: File;\r\n    static maxUriNumber: number = 0;\r\n    uri: monaco.Uri;\r\n    model: monaco.editor.ITextModel;\r\n    oldErrorDecorations: string[] = [];\r\n    lastSavedVersionId: number;\r\n    editorState: monaco.editor.ICodeEditorViewState;\r\n\r\n    errors: Error[][] = [[], [], [], []]; // 1st pass, 2nd pass, 3rd pass\r\n\r\n    // 1st pass: Lexer\r\n    tokenList: Token[];\r\n\r\n    // 2nd pass: ASTParser\r\n    sqlStatements: SQLStatement[];\r\n    mainSymbolTable: SymbolTable;\r\n\r\n\r\n    identifierPositions: { [line: number]: IdentifierPosition[] } = {};\r\n    methodCallPositions: { [line: number]: MethodCallPosition[] } = {};\r\n\r\n    static uriMap: { [name: string]: number } = {};\r\n    bracketError: string;\r\n\r\n    completionHints: Map<number, CompletionHint[]> = new Map(); // Map from line numbers to hints\r\n\r\n    constructor(file: File, public main: MainBase) {\r\n        if (file == null || this.main == null) return; // used by AdhocCompiler and ApiDoc\r\n\r\n        this.file = file;\r\n        // this.uri = monaco.Uri.from({ path: '/file' + (Module.maxUriNumber++) + '.learnJava', scheme: 'file' });\r\n        let path = file.name;\r\n\r\n        let uriCounter = Module.uriMap[path];\r\n        if (uriCounter == null) {\r\n            uriCounter = 0;\r\n        } else {\r\n            uriCounter++;\r\n        }\r\n        Module.uriMap[path] = uriCounter;\r\n\r\n        if (uriCounter > 0) path += \" (\" + uriCounter + \")\";\r\n        this.uri = monaco.Uri.from({ path: path, scheme: 'inmemory' });\r\n        this.model = monaco.editor.createModel(file.text, \"vscSQL\", this.uri);\r\n        this.model.updateOptions({ tabSize: 3 });\r\n\r\n        this.lastSavedVersionId = this.model.getAlternativeVersionId();\r\n\r\n        let that = this;\r\n\r\n        this.model.onDidChangeContent(() => {\r\n            let versionId = that.model.getAlternativeVersionId();\r\n\r\n            if (versionId != that.lastSavedVersionId) {\r\n                that.file.dirty = true;\r\n                that.file.saved = false;\r\n                that.lastSavedVersionId = versionId;\r\n            }\r\n\r\n            if(!that.main.isEmbedded()){\r\n                let main1: Main = <Main>main;\r\n                if (main1.workspacesOwnerId != main1.user.id) {\r\n                    if (that.file.text_before_revision == null || that.file.student_edited_after_revision) {\r\n                        that.file.student_edited_after_revision = false;\r\n                        that.file.text_before_revision = that.file.text;\r\n                        that.file.saved = false;\r\n                        main1.networkManager.sendUpdates(null, false);\r\n                        main1.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n                        main1.projectExplorer.renderHomeworkButton(that.file);\r\n                    }\r\n                } else {\r\n                    that.file.student_edited_after_revision = true;\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    addCompletionHint(fromPosition: TextPosition, toPosition: TextPosition, hintColumns: boolean|string, hintTables: boolean, \r\n        hintKeywords: string[], dontHint?: string[], praefix: string = \"\", suffix: string = \"\"){\r\n        let ch: CompletionHint = {\r\n            fromColumn: fromPosition.column,\r\n            fromLine: fromPosition.line,\r\n            toColumn: toPosition.column,\r\n            toLine: toPosition.line,\r\n            hintColumns: (typeof hintColumns == \"boolean\")? hintColumns : true, \r\n            hintColumnsOfTable: (typeof hintColumns == \"string\")? hintColumns : null,\r\n            hintTables: hintTables,\r\n            hintKeywords: hintKeywords,\r\n            dontHint: dontHint,\r\n            praefix: praefix,\r\n            suffix: suffix\r\n        }\r\n\r\n        for(let i = ch.fromLine; i <= ch.toLine; i++){\r\n            let chList = this.completionHints.get(i);\r\n            if(chList == null){\r\n                chList = [];\r\n                this.completionHints.set(i, chList);\r\n            }\r\n            chList.push(ch);\r\n        }\r\n    }\r\n\r\n    getSQLSTatementsAtSelection(sel: monaco.Selection): SQLStatement[] {\r\n        let selStart = {line: sel.startLineNumber, column: sel.startColumn};\r\n        let selEnd = {line: sel.endLineNumber, column: sel.endColumn};\r\n\r\n        if(this.sqlStatements == null){\r\n            return [];\r\n        }\r\n\r\n        return this.sqlStatements.filter(stmt => {\r\n            return !(this.compare(stmt.to, selStart) < 0 || this.compare(stmt.from, selEnd) > 0);\r\n        })\r\n\r\n    }\r\n\r\n    /**\r\n     * returns 1 if a > b, 0 if a == b and -1 if a < b\r\n     * @param a \r\n     * @param b \r\n     */\r\n    compare(a: {line: number, column: number}, b: {line: number, column: number}): number{\r\n        if(a.line > b.line) return 1;\r\n        if(a.line < b.line) return -1;\r\n        if(a.column > b.column) return 1;\r\n        if(a.column < b.column) return -1;\r\n        return 0;\r\n    }\r\n\r\n\r\n\r\n    getSQLStatementAtPosition(p: { lineNumber: number, column: number }): SQLStatement {\r\n\r\n        return this.sqlStatements.find(statement => {\r\n            if(statement.from.line > p.lineNumber ) return false;\r\n            if(statement.from.line == p.lineNumber && statement.from.column > p.column) return false;\r\n            if(statement.to.line < p.lineNumber) return false;\r\n            if(statement.to.line == p.lineNumber && statement.to.column < p.column) return false;\r\n            return true;\r\n        });        \r\n\r\n    }\r\n\r\n\r\n    getCompletionHint(line: number, column: number){\r\n        let chList = this.completionHints.get(line);\r\n        \r\n        if(chList == null || chList.length == 0){\r\n            return null;\r\n        }\r\n\r\n        let pos = line * 1000 + column;\r\n        chList = chList.filter(ch => pos >= ch.fromLine * 1000 + ch.fromColumn && pos <= ch.toLine * 1000 + ch.toColumn);\r\n        if(chList.length == 0){\r\n            return;\r\n        }\r\n\r\n        // take CompletionHint with smallest range:\r\n        let bestCh: CompletionHint = chList[0];\r\n        let bestRangeLength  = (bestCh.toLine - bestCh.fromLine)*1000 + (bestCh.toColumn - bestCh.fromColumn);\r\n\r\n        for(let i = 1; i < chList.length; i++){\r\n            let ch = chList[i];\r\n            let rangeLength = (ch.toLine - ch.fromLine) * 1000 + (ch.toColumn - ch.fromColumn);\r\n\r\n            if(rangeLength < bestRangeLength){\r\n                bestCh = ch;\r\n                bestRangeLength = rangeLength;\r\n            }\r\n\r\n        }\r\n\r\n        return bestCh;\r\n    }\r\n\r\n\r\n    static restoreFromData(f: FileData, main: MainBase): Module {\r\n\r\n        let f1: File = {\r\n            name: f.name,\r\n            text: f.text,\r\n            text_before_revision: f.text_before_revision,\r\n            submitted_date: f.submitted_date,\r\n            student_edited_after_revision: false,\r\n            dirty: true,\r\n            saved: true,\r\n            version: f.version,\r\n            id: f.id\r\n        }\r\n\r\n        let m: Module = new Module(f1, main);\r\n\r\n        return m;\r\n\r\n    }\r\n\r\n    getFileData(workspace: Workspace): FileData {\r\n        let file = this.file;\r\n        let fd: FileData = {\r\n            id: file.id,\r\n            name: file.name,\r\n            text: file.text,\r\n            text_before_revision: file.text_before_revision,\r\n            submitted_date: file.submitted_date,\r\n            student_edited_after_revision: file.student_edited_after_revision,\r\n            version: file.version,\r\n            workspace_id: workspace.id,\r\n            forceUpdate: false,\r\n            file_type: 11\r\n        }\r\n\r\n        return fd;\r\n    }\r\n\r\n\r\n    findSymbolTableAtPosition(line: number, column: number) {\r\n        if (this.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (line > this.mainSymbolTable.positionTo.line ||\r\n            line == this.mainSymbolTable.positionTo.line && column > this.mainSymbolTable.positionTo.column\r\n        ) {\r\n            line = this.mainSymbolTable.positionTo.line;\r\n            column = this.mainSymbolTable.positionTo.column - 1;\r\n        }\r\n\r\n        return this.mainSymbolTable.findTableAtPosition(line, column);\r\n    }\r\n\r\n    getErrorCount(): number {\r\n\r\n        let ec = 0;\r\n        for (let el of this.errors) {\r\n            el.forEach(error => ec += error.level == \"error\" ? 1 : 0);\r\n            // ec += el.length;\r\n        }\r\n\r\n        return ec;\r\n    }\r\n\r\n    getProgramTextFromMonacoModel(): string {\r\n        return this.model.getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n    }\r\n\r\n\r\n    addIdentifierPosition(position: TextPosition, element: any) {\r\n        let positionList: IdentifierPosition[] = this.identifierPositions[position.line];\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            this.identifierPositions[position.line] = positionList;\r\n        }\r\n        positionList.push({\r\n            position: position,\r\n            element: element\r\n        });\r\n    }\r\n\r\n    getElementAtPosition(line: number, column: number): any {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let bestFoundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column < p.position.column + p.position.length) {\r\n\r\n                if (p.position.length > 0) {\r\n                    if (bestFoundPosition == null) {\r\n                        bestFoundPosition = p;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bestFoundPosition == null ? null : <any>bestFoundPosition.element;\r\n    }\r\n\r\n    copy(): Module {\r\n        let m = new Module(this.file, this.main);\r\n        m.model = this.model;\r\n        m.mainSymbolTable = this.mainSymbolTable;\r\n        this.mainSymbolTable = null;\r\n\r\n        this.file.dirty = true;\r\n\r\n        return m;\r\n    }\r\n\r\n    clear() {\r\n\r\n        this.identifierPositions = {};\r\n\r\n        if (this.file != null && this.file.dirty) {\r\n            // Lexer\r\n            this.tokenList = null;\r\n            this.errors[0] = [];\r\n\r\n            // AST Parser\r\n            this.errors[1] = [];\r\n\r\n\r\n        }\r\n\r\n        // type resolver\r\n        this.errors[2] = [];\r\n\r\n        // Code generator\r\n        this.errors[3] = [];\r\n        this.mainSymbolTable = new SymbolTable(null, { line: 1, column: 1, length: 1 }, { line: 100000, column: 1, length: 0 });\r\n\r\n        this.methodCallPositions = {};\r\n\r\n    }\r\n\r\n    hasErrors() {\r\n\r\n        for (let el of this.errors) {\r\n            if (el.find(error => error.level == \"error\")) {\r\n                return true;\r\n            }\r\n            // if (el.length > 0) {\r\n            //     return true;\r\n            // }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getSortedAndFilteredErrors(): Error[] {\r\n\r\n        let list: Error[] = [];\r\n\r\n        for (let el of this.errors) {\r\n            list = list.concat(el);\r\n        }\r\n\r\n        list.sort((a, b) => {\r\n            if (a.position.line > b.position.line) {\r\n                return 1;\r\n            }\r\n            if (b.position.line > a.position.line) {\r\n                return -1;\r\n            }\r\n            if (a.position.column >= b.position.column) {\r\n                return 1;\r\n            }\r\n            return -1;\r\n        });\r\n\r\n        for (let i = 0; i < list.length - 1; i++) {\r\n            let e1 = list[i];\r\n            let e2 = list[i + 1];\r\n            if (e1.position.line == e2.position.line && e1.position.column + 10 > e2.position.column) {\r\n                if (this.errorLevelCompare(e1.level, e2.level) == 1) {\r\n                    list.splice(i + 1, 1);\r\n                } else {\r\n                    list.splice(i, 1);\r\n                }\r\n                i--;\r\n            }\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    errorLevelCompare(level1: ErrorLevel, level2: ErrorLevel): number {\r\n        if (level1 == \"error\") return 1;\r\n        if (level2 == \"error\") return 2;\r\n        if (level1 == \"warning\") return 1;\r\n        if (level2 == \"warning\") return 2;\r\n        return 1;\r\n    }\r\n}\r\n\r\n\r\nexport class ModuleStore {\r\n\r\n    private modules: Module[] = [];\r\n    private moduleMap: Map<string, Module> = new Map();\r\n\r\n    dirty: boolean = false;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    findModuleById(module_id: number): Module {\r\n        for (let module of this.modules) {\r\n            if (module.file.id == module_id) return module;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    copy(): ModuleStore {\r\n        let ms: ModuleStore = new ModuleStore(this.main);\r\n        for (let m of this.modules) {\r\n            ms.putModule(m.copy());\r\n        }\r\n        return ms;\r\n    }\r\n\r\n    findModuleByFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                return m;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        for (let m of this.modules) {\r\n            if (m.hasErrors()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getFirstModule(): Module {\r\n        if (this.modules.length > 0) {\r\n            for (let mo of this.modules) {\r\n                return mo;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    isDirty(): boolean {\r\n\r\n        if (this.dirty) {\r\n            this.dirty = false;\r\n            return true;\r\n        }\r\n\r\n        let dirty = false;\r\n        for (let m of this.modules) {\r\n            if (m.file.dirty) {\r\n                dirty = true;\r\n                break;\r\n            }\r\n        }\r\n        return dirty;\r\n    }\r\n\r\n\r\n    getModules(includeSystemModules: boolean, excludedModuleName?: String): Module[] {\r\n        let ret = [];\r\n        for (let m of this.modules) {\r\n            if (m.file.name != excludedModuleName) {\r\n                ret.push(m);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    putModule(module: Module) {\r\n        this.modules.push(module);\r\n        this.moduleMap[module.file.name] = module;\r\n    }\r\n\r\n    removeModuleWithFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                this.removeModule(m);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n\r\n        if (this.modules.indexOf(module) < 0) return;\r\n\r\n        this.modules.splice(this.modules.indexOf(module), 1);\r\n        this.moduleMap[module.file.name] = undefined;\r\n        this.dirty = true;\r\n    }\r\n\r\n    getModule(moduleName: string): Module {\r\n        return this.moduleMap[moduleName];\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type ButtonToggler = (state: boolean) => void;\r\n\r\nexport type Action = (name: string, buttonToggler?: ButtonToggler, pressed_key?: string) => void;\r\n\r\nexport type ActionEntry = {\r\n    text?: string,\r\n    keys: string[],\r\n    action: Action,\r\n    identifier: string, // name of Action is copied automatically to name of ActionEntry\r\n    active: boolean\r\n}\r\n\r\nexport class ActionManager {\r\n\r\n    actions: { [actionIdentifier: string]: ActionEntry } = { };\r\n\r\n    keyEntries: { [key: string]: ActionEntry[] } = {};\r\n\r\n    buttons: { [actionIdentifier: string]: JQuery<HTMLElement>[] } = {};\r\n\r\n    constructor(private $mainElement: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public init(){\r\n\r\n        let $element:JQuery<any> = this.$mainElement;\r\n        \r\n        if($element == null) $element = jQuery(document);\r\n\r\n        let that = this;\r\n        $element.on(\"keydown\", function (event: JQuery.KeyDownEvent) { \r\n            if(event != null){\r\n                that.executeKeyDownEvent(event); \r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    trigger(actionIdentifier: string) {\r\n        let ae = this.actions[actionIdentifier];\r\n        if(ae != null){\r\n            ae.action(actionIdentifier, null, \"\");\r\n        }\r\n    }\r\n\r\n\r\n    public registerAction(identifier: string, keys: string[], action: Action, text: string = \"\", button?: JQuery<HTMLElement>){\r\n        let ae: ActionEntry = {\r\n            action: action,\r\n            identifier: identifier,\r\n            keys: keys,\r\n            text: text,\r\n            active: true\r\n        };\r\n\r\n        this.actions[identifier] = ae;\r\n\r\n        for(let key of keys){\r\n            if(this.keyEntries[key.toLowerCase()] == null){\r\n                this.keyEntries[key.toLowerCase()] = [];\r\n            }\r\n            this.keyEntries[key.toLowerCase()].push(ae);\r\n        }\r\n\r\n        if(button != null){\r\n            if(this.buttons[identifier] == null){\r\n                this.buttons[identifier] = [];\r\n            }\r\n            this.buttons[identifier].push(button);\r\n\r\n            let t = text;\r\n            if(keys.length > 0){\r\n                t += \" [\" + keys.join(\", \") + \"]\";\r\n            }\r\n\r\n            button.attr(\"title\", t);\r\n\r\n            button.on('mousedown', () => {\r\n                if(ae.active){\r\n                    action(identifier, null, \"mousedown\");\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public isActive(actionIdentifier: string): boolean {\r\n\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae == null) return false;\r\n\r\n        return ae.active;\r\n    \r\n    }\r\n\r\n    public setActive(actionIdentifier: string, active: boolean){\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae != null){\r\n            ae.active = active;\r\n        }\r\n\r\n        let buttons = this.buttons[actionIdentifier];\r\n        if(buttons != null){\r\n            for(let button of buttons){\r\n                if(active){\r\n                    button.addClass('jo_active');\r\n                } else {\r\n                    button.removeClass('jo_active');\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public executeKeyDownEvent(event: JQuery.KeyDownEvent) {\r\n\r\n        if(document.activeElement.tagName.toLowerCase() == \"input\"){\r\n            return;\r\n        }\r\n\r\n        if (event.keyCode <= 18 && event.keyCode >= 16) {\r\n            return; // ctrl, alt, shift\r\n        }\r\n\r\n        let key: string = \"\";\r\n\r\n        if (event.ctrlKey) {\r\n            key += \"ctrl+\";\r\n        }\r\n\r\n        if (event.shiftKey) {\r\n            key += \"shift+\";\r\n        }\r\n\r\n        if (event.altKey) {\r\n            key += \"alt+\";\r\n        }\r\n\r\n        if(event.key != null){\r\n            key += event.key.toLowerCase();\r\n        }\r\n\r\n        let actionEntries = this.keyEntries[key];\r\n\r\n        if(actionEntries != null){\r\n            for(let actionEntry of actionEntries){\r\n                if (actionEntry.active) {\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    actionEntry.action(actionEntry.identifier, null, key);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { escapeHtml } from \"./StringTools.js\";\r\n\r\nexport function makeEditable(elementWithText: JQuery<HTMLElement>,\r\n    elementToReplace: JQuery<HTMLElement>,\r\n    renameDoneCallback: (newContent: string) => void, selectionRange: { start: number, end: number } = null) {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    if (elementToReplace == null) {\r\n        elementToReplace = elementWithText;\r\n    }\r\n\r\n    let $input = jQuery('<input type=\"text\" class=\"jo_inplaceeditor\" spellcheck=\"false\">');\r\n    $input.css({\r\n        width: elementToReplace.css('width'),\r\n        height: elementToReplace.css('height'),\r\n        color: elementToReplace.css('color'),\r\n        position: elementToReplace.css('position'),\r\n        \"background-color\": elementToReplace.css('background-color'),\r\n        \"font-size\": elementToReplace.css('font-size'),\r\n        \"font-weight\": elementToReplace.css('font-weight'),\r\n        \"box-sizing\": \"border-box\"\r\n    });\r\n    $input.val(elementWithText.text());\r\n    $input.on(mousePointer + \"down\", (e) => { e.stopPropagation(); })\r\n\r\n    if (selectionRange != null) {\r\n        (<HTMLInputElement>$input[0]).setSelectionRange(selectionRange.start, selectionRange.end);\r\n    }\r\n\r\n    elementToReplace.after($input);\r\n    elementToReplace.hide();\r\n    setTimeout(() => {\r\n        $input.focus();\r\n    }, 300);\r\n\r\n    $input.on(\"keydown.me\", (ev) => {\r\n        if (ev.key == \"Enter\" || ev.key == \"Escape\") {\r\n            $input.off(\"keydown.me\");\r\n            $input.off(\"focusout.me\");\r\n            $input.remove();\r\n            elementToReplace.show();\r\n            let newValue = escapeHtml(<string>$input.val());\r\n            renameDoneCallback(newValue);\r\n            return;\r\n        }\r\n    });\r\n\r\n    $input.on(\"focusout.me\", (ev) => {\r\n        $input.off(\"keydown.me\");\r\n        $input.off(\"focusout.me\");\r\n        $input.remove();\r\n        elementToReplace.show();\r\n        let newValue = escapeHtml(<string>$input.val());\r\n        renameDoneCallback(newValue);\r\n        return;\r\n    });\r\n\r\n}\r\n\r\nexport type ContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: () => void;\r\n    link?: string;\r\n    subMenu?: ContextMenuItem[]\r\n};\r\n\r\nexport function openContextMenu(items: ContextMenuItem[], x: number, y: number): JQuery<HTMLElement> {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    let $contextMenu = jQuery('<div class=\"jo_contextmenu\"></div>');\r\n\r\n    let $openSubMenu: JQuery<HTMLElement> = null;\r\n    let parentMenuItem: ContextMenuItem = null;\r\n\r\n    for (let mi of items) {\r\n        let caption: string = mi.caption;\r\n        if (mi.link != null) {\r\n            caption = `<a href=\"${mi.link}\" target=\"_blank\" class=\"jo_menulink\">${mi.caption}</a>`;\r\n        }\r\n        let $item = jQuery('<div>' + caption + (mi.subMenu != null ? '<span style=\"float: right\"> &nbsp; &nbsp; &gt;</span>' : \"\") + '</div>');\r\n        if (mi.color != null) {\r\n            $item.css('color', mi.color);\r\n        }\r\n        if (mi.link == null) {\r\n            $item.on(mousePointer + 'up.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n                jQuery('.jo_contextmenu').remove();\r\n                jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n                jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n                jQuery(document).off(\"keydown.contextmenu\");\r\n                mi.callback();\r\n            });\r\n            $item.on(mousePointer + 'down.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n            });\r\n        } else {\r\n            let $link = $item.find('a');\r\n            $link.on(mousePointer + \"up\", (event) => {\r\n                event.stopPropagation();\r\n                setTimeout(() => {\r\n                    $item.hide();\r\n                }, 500);\r\n            })\r\n            $link.on(mousePointer + \"down\", (event) => {\r\n                event.stopPropagation();\r\n            })\r\n\r\n        }\r\n\r\n        $item.on(mousePointer + 'move.contextmenu', () => {\r\n            if (mi != parentMenuItem && $openSubMenu != null) {\r\n                $openSubMenu.remove();\r\n                parentMenuItem = null;\r\n                $openSubMenu = null;\r\n            }\r\n            if (mi.subMenu != null) {\r\n                $openSubMenu = openContextMenu(mi.subMenu, $item.offset().left + $item.width(), $item.offset().top);\r\n            }\r\n        });\r\n\r\n        $contextMenu.append($item);\r\n    }\r\n\r\n    jQuery(document).on(mousePointer + \"down.contextmenu\", (e) => {\r\n        jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n        jQuery(document).off(\"keydown.contextmenu\");\r\n        jQuery('.jo_contextmenu').remove();\r\n    })\r\n\r\n    jQuery(document).on(\"keydown.contextmenu\", (ev) => {\r\n        if (ev.key == \"Escape\") {\r\n            jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n            jQuery(document).off(\"keydown.contextmenu\");\r\n            jQuery('.jo_contextmenu').remove();\r\n        }\r\n    });\r\n\r\n    let leftRight = x > window.innerWidth * 0.8 ? \"right\" : \"left\";\r\n    let xp = x > window.innerWidth * 0.8 ? window.innerWidth - x : x;\r\n    let topBottom = y > window.innerHeight * 0.8 ? \"bottom\" : \"top\";\r\n    let yp = y > window.innerHeight * 0.8 ? window.innerHeight - y : y;\r\n\r\n    let css = {};\r\n    css[leftRight] = xp + \"px\";\r\n    css[topBottom] = yp + \"px\";\r\n\r\n    $contextMenu.css(css);\r\n\r\n\r\n    jQuery(\"body\").append($contextMenu);\r\n    $contextMenu.show();\r\n\r\n    return $contextMenu;\r\n}\r\n\r\nexport function makeTabs(tabDiv: JQuery<HTMLElement>) {\r\n    let headings = tabDiv.find('.jo_tabheadings>div').not('.jo_noHeading');\r\n    let tabs = tabDiv.find('.jo_tabs>div');\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    headings.on(mousePointer + \"down\", (ev) => {\r\n        let target = jQuery(ev.target);\r\n        headings.removeClass('jo_active');\r\n        target.addClass('jo_active');\r\n        let tab = tabDiv.find('.' + target.data('target'));\r\n        tabs.removeClass('jo_active');\r\n        tabs.trigger('myhide');\r\n        tab.addClass('jo_active');\r\n        tab.trigger('myshow');\r\n    });\r\n\r\n}\r\n\r\nexport function convertPxToNumber(pxString: string): number {\r\n    pxString = pxString.replace('px', '').trim();\r\n    return Number.parseInt(pxString);\r\n}\r\n\r\nexport function makeDiv(id: string, klass: string = \"\", text: string = \"\", css?: { [id: string]: any }): JQuery<HTMLDivElement> {\r\n\r\n    let s = \"\";\r\n    if (id != null && id != \"\") s += ` id=\"${id}\"`;\r\n\r\n    if (klass != null && klass != \"\") s += ` class=\"${klass}\"`;\r\n\r\n    let div = jQuery(`<div${s}></div>`);\r\n\r\n    if (css != null) {\r\n        div.css(css);\r\n    }\r\n\r\n    if (text != null && text != \"\") {\r\n        div.text(text);\r\n    }\r\n\r\n    return <any>div;\r\n\r\n}\r\n\r\nexport type SelectItem = {\r\n    value: string | number,\r\n    object: any,\r\n    caption: string\r\n}\r\n\r\nexport function setSelectItems($selectElement: JQuery<HTMLSelectElement>, items: SelectItem[], activeItemValue?: string | number) {\r\n    $selectElement.empty();\r\n    items.forEach(item => {\r\n        let selected: string = (item.value == activeItemValue) ? ' selected=\"selected\"' : \"\";\r\n        let element = jQuery(`<option value=${item.value}${selected}>${item.caption}</option>`);\r\n        $selectElement.append(element);\r\n        element.data('object', item.object);\r\n    }\r\n    );\r\n\r\n    $selectElement.data('items', items);\r\n\r\n\r\n}\r\n\r\nexport function getSelectedObject($selectDiv: JQuery<HTMLSelectElement>) {\r\n\r\n    let items: SelectItem[] = $selectDiv.data('items');\r\n\r\n    let selectedValue = $selectDiv.val();\r\n\r\n    return items.find(item => item.value == selectedValue)?.object;\r\n\r\n}\r\n\r\nexport var jo_mouseDetected: boolean = false;\r\nexport function checkIfMousePresent() {\r\n    if (matchMedia('(pointer:fine)').matches) {\r\n        jo_mouseDetected = true;\r\n    }\r\n}\r\n\r\nexport function animateToTransparent($element: JQuery<HTMLElement>, cssProperty: string, startColorRgb: number[], duration: number) {\r\n    let colorPraefix = 'rgba(' + startColorRgb[0] + \", \" + startColorRgb[1] + \", \" + startColorRgb[2] + \", \";\r\n    let value = 1.0;\r\n    let delta = value / (duration / 20);\r\n\r\n    let animate = () => {\r\n        $element.css(cssProperty, colorPraefix + value + \")\");\r\n        value -= delta;\r\n        if (value < 0) {\r\n            $element.css(cssProperty, \"\");\r\n        } else {\r\n            setTimeout(animate, 20);\r\n        }\r\n    }\r\n\r\n    animate();\r\n}\r\n\r\nexport function downloadFile(obj: any, filename: string, isBlob: boolean = false) {\r\n    var blob = isBlob? obj : new Blob([JSON.stringify(obj)], { type: 'text/plain' });\r\n    //@ts-ignore\r\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n        //@ts-ignore\r\n        window.navigator.msSaveOrOpenBlob(blob, filename);\r\n    } else {\r\n        var e = document.createEvent('MouseEvents'),\r\n            a = document.createElement('a');\r\n        a.download = filename;\r\n        a.href = window.URL.createObjectURL(blob);\r\n        a.dataset.downloadurl = ['text/plain', a.download, a.href].join(':');\r\n        //@ts-ignore\r\n        e.initEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\r\n        a.dispatchEvent(e);\r\n        a.remove();\r\n    }\r\n}\r\n\r\n\r\nfunction fallbackCopyTextToClipboard(text) {\r\n    var textArea = document.createElement(\"textarea\");\r\n    textArea.value = text;\r\n\r\n    // Avoid scrolling to bottom\r\n    textArea.style.top = \"0\";\r\n    textArea.style.left = \"0\";\r\n    textArea.style.position = \"fixed\";\r\n\r\n    document.body.appendChild(textArea);\r\n    textArea.focus();\r\n    textArea.select();\r\n\r\n    try {\r\n        var successful = document.execCommand('copy');\r\n    } catch (err) {\r\n        console.error('Fallback: Oops, unable to copy', err);\r\n    }\r\n\r\n    document.body.removeChild(textArea);\r\n}\r\n\r\nexport function copyTextToClipboard(text) {\r\n    if (!navigator.clipboard) {\r\n        fallbackCopyTextToClipboard(text);\r\n        return;\r\n    }\r\n    navigator.clipboard.writeText(text).then(function () {\r\n    }, function (err) {\r\n        console.error('Async: Could not copy text: ', err);\r\n    });\r\n}\r\n","import { LoginRequest, PerformanceData } from \"./Data.js\";\r\n\r\n// export var credentials: { username: string, password: string } = { username: null, password: null };\r\n\r\nexport class PerformanceCollector {\r\n    static performanceData: PerformanceData[] = [];\r\n    static performanceDataCount: number = 0;\r\n    static lastTimeSent: number = performance.now();\r\n\r\n    static registerPerformanceEntry(url: string, startTime: number) {\r\n        let pe: PerformanceData = PerformanceCollector.performanceData.find(pe => pe.url == url);\r\n        if (pe == null) {\r\n            pe = { count: 0, sumTime: 0, url: url };\r\n            PerformanceCollector.performanceData.push(pe);\r\n        }\r\n        pe.count++;\r\n        let dt = Math.round(performance.now() - startTime);\r\n        pe.sumTime += dt;\r\n        PerformanceCollector.performanceDataCount++;\r\n        // console.log(\"Performance entry for path \" + pe.url + \": \" + dt + \" ms, aggregated: \" + pe.sumTime + \" for \" + pe.count + \" requests.\");\r\n    }\r\n\r\n    static sendDataToServer() {\r\n        if (performance.now() - PerformanceCollector.lastTimeSent > 3 * 60 * 1000) {\r\n            let request = {\r\n                data: PerformanceCollector.performanceData\r\n            }\r\n\r\n            PerformanceCollector.performanceData = [];\r\n            PerformanceCollector.performanceDataCount = 0;\r\n            PerformanceCollector.lastTimeSent = performance.now();\r\n\r\n            ajax(\"collectPerformanceData\", request, () => { })\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport function ajax(url: string, request: any, successCallback: (response: any) => void,\r\n\r\n    errorCallback?: (message: string) => void) {\r\n\r\n    showNetworkBusy(true);\r\n    let time = performance.now();\r\n\r\n    $.ajax({\r\n        type: 'POST',\r\n        async: true,\r\n        data: JSON.stringify(request),\r\n        contentType: 'application/json',\r\n        url: \"servlet/\" + url,\r\n        success: function (response: any) {\r\n\r\n            PerformanceCollector.registerPerformanceEntry(url, time);\r\n\r\n            showNetworkBusy(false);\r\n            if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n                let error = \"Fehler bei der Bearbeitung der Anfrage\"\r\n                if (response.message != null) error = response.message;\r\n\r\n                if (error == \"Not logged in\") {\r\n                    // setTimeout(() => newLogin(url, request, successCallback, errorCallback), 10000);\r\n                    // location.reload();\r\n                }\r\n\r\n                if (errorCallback) errorCallback(error);\r\n            } else {\r\n                successCallback(response);\r\n            }\r\n            return;\r\n\r\n        },\r\n        error: function (jqXHR, message) {\r\n            showNetworkBusy(false);\r\n            if (errorCallback) {\r\n                let statusText = \"Server nicht erreichbar.\"\r\n                if (jqXHR.status != 0) {\r\n                    statusText = \"\" + jqXHR.status\r\n                }\r\n                errorCallback(message + \": \" + statusText);\r\n                return;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function showNetworkBusy(busy: boolean) {\r\n    if (busy) {\r\n        jQuery('.jo_network-busy').css('visibility','visible');\r\n    } else {\r\n        jQuery('.jo_network-busy').css('visibility','hidden');\r\n    }\r\n}\r\n\r\n\r\n","import { DatabaseData } from \"../communication/Data.js\";\r\n\r\nexport class WDatabase {\r\n\r\n    id: number;\r\n    name: string;\r\n\r\n    templateDump: Uint8Array;\r\n    templateId: number;\r\n    templateName: string;\r\n\r\n    statements: string[];\r\n    published_to: number;\r\n    version: number;\r\n    description: string;\r\n    owner_id: number;\r\n\r\n    static fromDatabaseData(data: DatabaseData): WDatabase {\r\n\r\n        let db = new WDatabase();\r\n\r\n        db.id = data.id;\r\n        db.name = data.name;\r\n        db.statements = data.statements;\r\n        db.published_to = data.published_to;\r\n        db.version = data.version;\r\n        db.description = data.description;\r\n        db.templateDump = null;\r\n        db.templateId = data.template_id;\r\n        db.owner_id = data.owner_id;\r\n        return db;\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n","export class CacheManager {\r\n    \r\n    fetchTemplateFromCache(databaseId: number, callback: (templateDump: Uint8Array) => void) {\r\n        if(databaseId == null){callback(null); return;}\r\n        let that = this;\r\n        if(!this.cacheAvailable()) callback(null);\r\n        this.getCache((cache) => {\r\n            cache.match(that.databaseIdToCacheIdentifier(databaseId)).then(\r\n                (value)=>{\r\n                    value.arrayBuffer().then((buffer) => callback(new Uint8Array(buffer)));\r\n                })\r\n                .catch(() => callback(null));\r\n        })        \r\n    }\r\n\r\n    saveTemplateToCache(databaseId: number, templateDump: Uint8Array) {\r\n        if(!this.cacheAvailable()) return;\r\n        let that = this;\r\n        this.getCache((cache) => {\r\n            cache.put(that.databaseIdToCacheIdentifier(databaseId), new Response(templateDump));\r\n        })        \r\n    }\r\n\r\n    cacheAvailable(): boolean {\r\n        return 'caches' in self;\r\n    }\r\n\r\n    getCache(callback: (cache: Cache) => void) {\r\n        caches.open('my-cache').then(callback);\r\n    }\r\n\r\n    databaseIdToCacheIdentifier(databaseId: number): string {\r\n        return \"/onlineIdeTemplateDb\" + databaseId;\r\n    }\r\n\r\n}","import { Main } from \"../main/Main.js\";\r\nimport { ajax } from \"./AjaxHelper.js\";\r\nimport { WorkspaceData, FileData, SendUpdatesRequest, SendUpdatesResponse, CreateOrDeleteFileOrWorkspaceRequest, CRUDResponse, UpdateUserSettingsRequest, UpdateUserSettingsResponse, DuplicateWorkspaceRequest, DuplicateWorkspaceResponse, ClassData, DistributeWorkspaceRequest, DistributeWorkspaceResponse, GetDatabaseRequest, getDatabaseResponse, GetNewStatementsRequest, GetNewStatementsResponse, AddDatabaseStatementsRequest, AddDatabaseStatementsResponse, TemplateListEntry, GetTemplateListRequest, GetTemplateListResponse, CreateWorkspaceData, GetDatabaseSettingsResponse, GetDatabaseSettingsRequest, setDatabaseSecretRequest as SetDatabaseSecretRequest, SetDatabaseSecretResponse, SetPublishedToRequest, SetPublishedToResponse, GetTemplateRequest, RollbackRequest, RollbackResponse } from \"./Data.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { WDatabase } from \"../workspace/WDatabase.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { CacheManager } from \"./CacheManager.js\";\r\n\r\nexport class NetworkManager {\r\n\r\n    timerhandle: any;\r\n\r\n    ownUpdateFrequencyInSeconds: number = 20;\r\n    teacherUpdateFrequencyInSeconds: number = 5;\r\n\r\n    updateFrequencyInSeconds: number = 20;\r\n    forcedUpdateEvery: number = 2;\r\n    secondsTillNextUpdate: number = this.updateFrequencyInSeconds;\r\n    errorHappened: boolean = false;\r\n\r\n    interval: any;\r\n\r\n    constructor(private main: Main, private $updateTimerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initializeTimer() {\r\n\r\n        let that = this;\r\n        this.$updateTimerDiv.find('svg').attr('width', that.updateFrequencyInSeconds);\r\n\r\n        if (this.interval != null) clearInterval(this.interval);\r\n\r\n        let counterTillForcedUpdate: number = this.forcedUpdateEvery;\r\n\r\n        this.interval = setInterval(() => {\r\n\r\n            if (that.main.user == null) return; // don't call server if no user is logged in\r\n\r\n            that.secondsTillNextUpdate--;\r\n\r\n            if (that.secondsTillNextUpdate < 0) {\r\n                that.secondsTillNextUpdate = that.updateFrequencyInSeconds;\r\n                counterTillForcedUpdate--;\r\n                let forceUpdate = counterTillForcedUpdate == 0;\r\n                if (forceUpdate) counterTillForcedUpdate = this.forcedUpdateEvery;\r\n                that.sendUpdates(() => { }, forceUpdate);\r\n            }\r\n\r\n            let $rect = this.$updateTimerDiv.find('.jo_updateTimerRect');\r\n\r\n            $rect.attr('width', that.secondsTillNextUpdate + \"px\");\r\n\r\n            if (that.errorHappened) {\r\n                $rect.css('fill', '#c00000');\r\n                this.$updateTimerDiv.attr('title', \"Fehler beim letzten Speichervorgang -> Werd's wieder versuchen\");\r\n            } else {\r\n                $rect.css('fill', '#008000');\r\n                this.$updateTimerDiv.attr('title', that.secondsTillNextUpdate + \" Sekunden bis zum nächsten Speichern\");\r\n            }\r\n\r\n        }, 1000);\r\n\r\n    }\r\n\r\n    sendUpdates(callback?: () => void, sendIfNothingIsDirty: boolean = false) {\r\n\r\n        if (this.main.user == null) return;\r\n\r\n        this.main.projectExplorer.writeEditorTextToFile();\r\n\r\n        let userSettings = this.main.user.settings;\r\n\r\n        let wdList: WorkspaceData[] = [];\r\n        let fdList: FileData[] = [];\r\n\r\n        for (let ws of this.main.workspaceList) {\r\n\r\n            if (!ws.saved) {\r\n                wdList.push(ws.getWorkspaceData(false));\r\n                ws.saved = true;\r\n            }\r\n\r\n            for (let m of ws.moduleStore.getModules(false)) {\r\n                if (!m.file.saved) {\r\n                    m.file.text = m.getProgramTextFromMonacoModel();\r\n                    fdList.push(m.getFileData(ws));\r\n                    // console.log(\"Save file \" + m.file.name);\r\n                    m.file.saved = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        let request: SendUpdatesRequest = {\r\n            workspacesWithoutFiles: wdList,\r\n            files: fdList,\r\n            owner_id: this.main.workspacesOwnerId,\r\n            userId: this.main.user.id,\r\n            language: 1,\r\n            currentWorkspaceId: this.main.getCurrentWorkspace()?.id,\r\n            getModifiedWorkspaces: false\r\n        }\r\n\r\n        let that = this;\r\n        if (wdList.length > 0 || fdList.length > 0 || sendIfNothingIsDirty) {\r\n            ajax('sendUpdates', request, (response: SendUpdatesResponse) => {\r\n                that.errorHappened = !response.success;\r\n                if (!that.errorHappened) {\r\n\r\n                    that.updateWorkspaces(request, response);\r\n\r\n                    if (callback != null) {\r\n                        callback();\r\n                        return;\r\n                    }\r\n                }\r\n            }, () => {\r\n                that.errorHappened = true;\r\n            });\r\n        } else {\r\n            if (callback != null) {\r\n                callback();\r\n                return;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    sendCreateWorkspace(wd: CreateWorkspaceData, owner_id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            wd.id = Math.round(Math.random() * 10000000);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"workspace\",\r\n            data: wd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            wd.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n\r\n    getDatabaseSettings(workspace_id: number, callback: (response: GetDatabaseSettingsResponse) => void) {\r\n        let request: GetDatabaseSettingsRequest = {\r\n            workspaceId: workspace_id\r\n        };\r\n        ajax(\"getDatabaseSettings\", request, (response: GetDatabaseSettingsResponse) => {\r\n            callback(response);\r\n        }, (message) => { alert(message) })\r\n    }\r\n\r\n    setNewSecret(workspace_id: number, kind: string, callback: (secret: string) => void) {\r\n        let request: SetDatabaseSecretRequest = {\r\n            workspaceId: workspace_id,\r\n            secretKind: kind\r\n        };\r\n        ajax(\"setNewSecret\", request, (response: SetDatabaseSecretResponse) => {\r\n            callback(response.secret);\r\n        }, (message) => { alert(message) })\r\n    }\r\n\r\n    setNameAndPublishedTo(workspace_id: number, name: string, published_to: number, description: string, callback: () => void) {\r\n        let request: SetPublishedToRequest = {\r\n            workspaceId: workspace_id,\r\n            databaseName: name,\r\n            publishedTo: published_to,\r\n            description: description\r\n        };\r\n\r\n        ajax(\"setPublishedTo\", request, (response: SetPublishedToResponse) => {\r\n            callback();\r\n        }, (message) => { alert(message) })\r\n    }\r\n\r\n\r\n\r\n    sendCreateFile(m: Module, ws: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        let fd: FileData = m.getFileData(ws);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"file\",\r\n            data: fd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            m.file.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDuplicateWorkspace(ws: Workspace, callback: (error: string, workspaceData?: WorkspaceData) => void) {\r\n\r\n        let request: DuplicateWorkspaceRequest = {\r\n            workspace_id: ws.id,\r\n            language: 1\r\n        }\r\n\r\n        ajax(\"duplicateWorkspace\", request, (response: DuplicateWorkspaceResponse) => {\r\n            callback(response.message, response.workspace)\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDistributeWorkspace(ws: Workspace, klasse: ClassData, student_ids: number[], callback: (error: string) => void) {\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request: DistributeWorkspaceRequest = {\r\n                workspace_id: ws.id,\r\n                class_id: klasse?.id,\r\n                student_ids: student_ids,\r\n                language: 1\r\n            }\r\n\r\n            ajax(\"distributeWorkspace\", request, (response: DistributeWorkspaceResponse) => {\r\n                callback(response.message)\r\n            }, callback);\r\n\r\n        }, false);\r\n\r\n    }\r\n\r\n\r\n    sendDeleteWorkspaceOrFile(type: \"workspace\" | \"file\", id: number, callback: (error: string) => void) {\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"delete\",\r\n            entity: type,\r\n            id: id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            if (response.success) {\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendUpdateUserSettings(callback: (error: string) => void) {\r\n\r\n        let request: UpdateUserSettingsRequest = {\r\n            settings: this.main.user.settings,\r\n            userId: this.main.user.id,\r\n            current_workspace_id: this.main.getCurrentWorkspace()?.id\r\n        }\r\n\r\n        ajax(\"updateUserSettings\", request, (response: UpdateUserSettingsResponse) => {\r\n            if (response.success) {\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n\r\n    getNewStatements(workspace: Workspace, callback: (statements: string[], firstNewStatementIndex: number) => void) {\r\n        let request: GetNewStatementsRequest = {\r\n            workspaceId: workspace.id,\r\n            version_before: workspace.database.version\r\n        }\r\n\r\n        ajax(\"getNewStatements\", request, (response: GetNewStatementsResponse) => {\r\n            if (response.success) {\r\n                callback(response.newStatements, response.firstNewStatementIndex);\r\n            }\r\n        });\r\n    }\r\n\r\n    AddDatabaseStatements(workspace: Workspace, statements: string[], callback: (statements_before: string[], new_version: number) => void) {\r\n        let request: AddDatabaseStatementsRequest = {\r\n            workspaceId: workspace.id,\r\n            version_before: workspace.database.version,\r\n            statements: statements\r\n        }\r\n\r\n        ajax(\"addDatabaseStatements\", request, (response: AddDatabaseStatementsResponse) => {\r\n            if (response.success) {\r\n                callback(response.statements_before, response.new_version);\r\n            }\r\n        });\r\n    }\r\n\r\n    fetchDatabase(workspace: Workspace, callback: (error: string) => void) {\r\n\r\n        let cacheManager: CacheManager = new CacheManager();\r\n\r\n        let request: GetDatabaseRequest = {\r\n            workspaceId: workspace.id\r\n        }\r\n\r\n        ajax(\"getDatabase\", request, (response: getDatabaseResponse) => {\r\n            if (response.success) {\r\n\r\n                workspace.database = WDatabase.fromDatabaseData(response.database)\r\n                cacheManager.fetchTemplateFromCache(workspace.database.templateId, (templateDump: Uint8Array) => {\r\n\r\n                    if (templateDump != null) {\r\n                        // @ts-ignore\r\n                        workspace.database.templateDump = pako.inflate(templateDump);\r\n                        callback(null);\r\n                        return;\r\n                    } else {\r\n                        if (workspace.database.templateId == null) {\r\n                            callback(null);\r\n                            return\r\n                        }\r\n                        this.fetchTemplate(workspace.id, (template) => {\r\n                            if (template != null) {\r\n                                cacheManager.saveTemplateToCache(workspace.database.templateId, template);\r\n                                // @ts-ignore\r\n                                workspace.database.templateDump = pako.inflate(template);\r\n                                callback(null);\r\n                                return;\r\n                            } else {\r\n                                callback(\"Konnte das Template nicht laden.\");\r\n                                return;\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    fetchTemplate(workspaceId: number, callback: (template: Uint8Array) => void) {\r\n        let request: GetTemplateRequest = {\r\n            workspaceId: workspaceId\r\n        }\r\n\r\n        $.ajax({\r\n            type: 'POST',\r\n            async: true,\r\n            data: JSON.stringify(request),\r\n            contentType: 'application/json',\r\n            url: \"servlet/getTemplate\",\r\n            xhrFields: { responseType: 'arraybuffer' },\r\n            success: function (response: any) {\r\n                callback(new Uint8Array(response));\r\n            },\r\n            error: function (jqXHR, message) {\r\n                alert(\"Konnte das Template nicht laden.\");\r\n                callback(null);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    fetchTemplateList(callback: (templateList: TemplateListEntry[]) => void) {\r\n        let request: GetTemplateListRequest = { user_id: this.main.user.id }\r\n\r\n        ajax(\"getTemplateList\", request, (response: GetTemplateListResponse) => {\r\n            if (response.success) {\r\n                callback(response.templateList);\r\n            } else {\r\n                callback([]);\r\n            }\r\n        }, (message) => {\r\n            alert(message);\r\n            callback([]);\r\n        })\r\n\r\n    }\r\n\r\n    updateWorkspaces(sendUpdatesRequest: SendUpdatesRequest, sendUpdatesResponse: SendUpdatesResponse) {\r\n\r\n        let idToRemoteWorkspaceDataMap: Map<number, WorkspaceData> = new Map();\r\n\r\n        let fileIdsSended = [];\r\n        sendUpdatesRequest.files.forEach(file => fileIdsSended.push(file.id));\r\n\r\n        sendUpdatesResponse.workspaces.workspaces.forEach(wd => idToRemoteWorkspaceDataMap.set(wd.id, wd));\r\n\r\n        let newWorkspaceNames: string[] = [];\r\n\r\n        for (let remoteWorkspace of sendUpdatesResponse.workspaces.workspaces) {\r\n\r\n            let localWorkspaces = this.main.workspaceList.filter(ws => ws.id == remoteWorkspace.id);\r\n\r\n            // Did student get a workspace from his/her teacher?\r\n            if (localWorkspaces.length == 0) {\r\n                newWorkspaceNames.push(remoteWorkspace.name);\r\n                this.createNewWorkspaceFromWorkspaceData(remoteWorkspace);\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        for (let workspace of this.main.workspaceList) {\r\n            let remoteWorkspace: WorkspaceData = idToRemoteWorkspaceDataMap.get(workspace.id);\r\n            if (remoteWorkspace != null) {\r\n                let idToRemoteFileDataMap: Map<number, FileData> = new Map();\r\n                remoteWorkspace.files.forEach(fd => idToRemoteFileDataMap.set(fd.id, fd));\r\n\r\n                let idToModuleMap: Map<number, Module> = new Map();\r\n                // update/delete files if necessary\r\n                for (let module of workspace.moduleStore.getModules(false)) {\r\n                    let fileId = module.file.id;\r\n                    idToModuleMap.set(fileId, module);\r\n                    let remoteFileData = idToRemoteFileDataMap.get(fileId);\r\n                    if (remoteFileData == null) {\r\n                        this.main.projectExplorer.fileListPanel.removeElement(module);\r\n                        this.main.currentWorkspace.moduleStore.removeModule(module);\r\n                    } else if (remoteFileData.version > module.file.version) {\r\n                        if (fileIdsSended.indexOf(fileId) < 0 || remoteFileData.forceUpdate) {\r\n                            module.file.text = remoteFileData.text;\r\n                            module.model.setValue(remoteFileData.text);\r\n\r\n                            module.file.saved = true;\r\n                            module.lastSavedVersionId = module.model.getAlternativeVersionId()\r\n                        }\r\n                        module.file.version = remoteFileData.version;\r\n                    }\r\n                }\r\n\r\n                // add files if necessary\r\n                for (let remoteFile of remoteWorkspace.files) {\r\n                    if (idToModuleMap.get(remoteFile.id) == null) {\r\n                        this.createFile(workspace, remoteFile);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (newWorkspaceNames.length > 0) {\r\n            let message: string = newWorkspaceNames.length > 1 ? \"Folgende Workspaces hat Deine Lehrkraft Dir gesendet: \" : \"Folgenden Workspace hat Deine Lehrkraft Dir gesendet: \";\r\n            message += newWorkspaceNames.join(\", \");\r\n            alert(message);\r\n        }\r\n\r\n        this.main.projectExplorer.workspaceListPanel.sortElements();\r\n        this.main.projectExplorer.fileListPanel.sortElements();\r\n\r\n    }\r\n\r\n    public createNewWorkspaceFromWorkspaceData(remoteWorkspace: WorkspaceData, withSort: boolean = false) {\r\n        let w = this.main.createNewWorkspace(remoteWorkspace.name, remoteWorkspace.owner_id);\r\n        w.id = remoteWorkspace.id;\r\n        w.sql_history = \"\";\r\n        w.path = remoteWorkspace.path;\r\n        w.isFolder = remoteWorkspace.isFolder;\r\n\r\n        this.main.workspaceList.push(w);\r\n        let path = remoteWorkspace.path.split(\"/\");\r\n        if (path.length == 1 && path[0] == \"\") path = [];\r\n\r\n        let panelElement: AccordionElement = {\r\n            name: remoteWorkspace.name,\r\n            externalElement: w,\r\n            iconClass: \"workspace\",\r\n            isFolder: remoteWorkspace.isFolder,\r\n            path: path\r\n        };\r\n\r\n        this.main.projectExplorer.workspaceListPanel.addElement(panelElement, true);\r\n        w.panelElement = panelElement;\r\n\r\n        for (let fileData of remoteWorkspace.files) {\r\n            this.createFile(w, fileData);\r\n        }\r\n\r\n        if (withSort) {\r\n            this.main.projectExplorer.workspaceListPanel.sortElements();\r\n            this.main.projectExplorer.fileListPanel.sortElements();\r\n        }\r\n    }\r\n\r\n    createFile(workspace: Workspace, remoteFile: FileData) {\r\n        let ae: any = null; //AccordionElement\r\n        if (workspace == this.main.currentWorkspace) {\r\n            ae = {\r\n                name: remoteFile.name,\r\n                externalElement: null\r\n            }\r\n\r\n            this.main.projectExplorer.fileListPanel.addElement(ae, true);\r\n        }\r\n\r\n        let f: any = { // File\r\n            id: remoteFile.id,\r\n            name: remoteFile.name,\r\n            dirty: false,\r\n            saved: true,\r\n            text: remoteFile.text,\r\n            version: remoteFile.version,\r\n            identical_to_repository_version: true,\r\n            workspace_id: workspace.id,\r\n            panelElement: ae\r\n        };\r\n        let m = this.main.projectExplorer.getNewModule(f); //new Module(f, this.main);\r\n        if (ae != null) ae.externalElement = m;\r\n        let modulStore = workspace.moduleStore;\r\n        modulStore.putModule(m);\r\n\r\n    }\r\n\r\n    rollback(callback: (error: string, rollbackLocalNeeded: boolean) => void) {\r\n        let workspace = this.main.currentWorkspace;\r\n        let request: RollbackRequest = { workspaceId: workspace.id, version: workspace.database.version }\r\n\r\n        ajax(\"rollback\", request, (response: RollbackResponse) => {\r\n            if (response.success) {\r\n                \r\n                callback(null, workspace.database.version > response.new_version);\r\n            } else {\r\n                alert(response.message);\r\n                callback(response.message, false);\r\n            }\r\n        }, (message) => {\r\n            alert(message);\r\n            callback(message, false);\r\n        })\r\n\r\n    }\r\n\r\n\r\n}","import { UploadTemplateResponse } from \"../communication/Data.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\n\r\nexport class TemplateUploader {\r\n\r\n    uploadCurrentDatabase(workspace_id: number, main: Main, dump?: Uint8Array, callback: (response: UploadTemplateResponse) => void = () => {}){\r\n        main.waitOverlay.show('Bitte warten, lade Vorlage auf den Server hoch ...');\r\n        if(workspace_id >= 0){\r\n            let dbTool = main.getDatabaseTool();\r\n            dbTool.export((buffer) => {\r\n                // @ts-ignore\r\n                buffer = pako.deflate(buffer);\r\n                this.uploadIntern(buffer, workspace_id, main, callback);        \r\n            }, (error)=>{\r\n                alert(\"Fehler beim Exportieren der Datenbank: \" + error)\r\n                main.waitOverlay.hide();\r\n            })\r\n        } else {\r\n            this.uploadIntern(dump, -1, main, callback);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    private uploadIntern(buffer: Uint8Array, workspace_id: number, main: Main, callback: (response: UploadTemplateResponse) => void) {\r\n        \r\n        $.ajax({\r\n            type: 'POST',\r\n            async: true,\r\n            contentType: 'application/octet-stream',\r\n            data: buffer,\r\n            processData: false,\r\n            headers: { 'x-workspaceid': \"\" + workspace_id },\r\n            url: \"servlet/uploadTemplate\",\r\n            success: function (response: UploadTemplateResponse) {\r\n                main.waitOverlay.hide();\r\n                callback(response);\r\n                return;\r\n\r\n            },\r\n            error: function (jqXHR, message) {\r\n                alert('message');\r\n                main.waitOverlay.hide();\r\n            }\r\n        }\r\n        );\r\n        return buffer;\r\n    }\r\n}","import { CreateWorkspaceData, WorkspaceData } from \"../../communication/Data.js\";\r\nimport { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { TemplateUploader } from \"../../tools/TemplateUploader.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\nexport class DatabaseSettingsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private workspace: Workspace) {\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Datenbank-Einstellungen</div>\r\n            <div style=\"width: 100%; margin-left: 10px\">\r\n                <div class=\"jo_ds_settings\" style=\"margin-left: 0px\">\r\n                <div class=\"jo_ds_settings_caption\">Name der Datenbank:</div><div><input class=\"dialog-input jo_databasename\" value=\"Neue Datenbank\"></input></div>\r\n                </div>\r\n\r\n                <div class=\"jo_ds_settings_caption\" style=\"margin-top: 20px\">\r\n                Zugriffscodes für andere Benutzer:\r\n                </div>\r\n                                \r\n                <div>\r\n                    <table class=\"jo_ds_secret_table\">\r\n                    <tr>\r\n                        <td>Nur Lesen:</td><td class=\"jo_ds_secret jo_ds_secret_read\"></td><td><button class=\"jo_small_button jo_button_code_read\">Neuen Code generieren</button></td>\r\n                    <tr>\r\n                        <td>Lesen und schreiben:</td><td class=\"jo_ds_secret jo_ds_secret_write\"></td><td><button class=\"jo_small_button jo_button_code_write\">Neuen Code generieren</button></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Lesen, schreiben und Struktur verändern:</td><td class=\"jo_ds_secret jo_ds_secret_ddl\"></td><td><button class=\"jo_small_button jo_button_code_ddl\">Neuen Code generieren</button></td>\r\n                    </tr>\r\n                    </table>\r\n                </div>\r\n\r\n                <div class=\"jo_ds_settings_caption\" style=\"margin-top: 20px\">\r\n                Beschreibung:\r\n                </div>\r\n                <div>\r\n                <textarea class=\"jo_ds_settings_description\" maxlength=\"5000\"></textarea>\r\n                </div>\r\n\r\n                <div class=\"jo_ds_settings_caption\" style=\"margin-top: 20px\">\r\n                Datenbank freigeben als Vorlage für andere Benutzer:\r\n                </div>\r\n\r\n                <fieldset id=\"jo_ds_publishedTo\">\r\n                    <input type=\"radio\" id=\"b0\" name=\"publishedFilter\" value=\"0\" checked=\"checked\"><label for=\"b0\">Keine Freigabe</label>\r\n                    <input type=\"radio\" id=\"b1\" name=\"publishedFilter\" value=\"1\"><label for=\"b1\">Freigabe für meine Klasse(n)</label>\r\n                    <input type=\"radio\" id=\"b2\" name=\"publishedFilter\" value=\"2\" style=\"visibility: none\"><label id=\"lb2\" for=\"b2\" style=\"visibility: none\">Freigabe für meine Schule</label>\r\n                    <input type=\"radio\" id=\"b3\" name=\"publishedFilter\" value=\"3\" style=\"visibility: none\"><label id=\"lb3\" for=\"b3\" style=\"visibility: none\">Freigabe für alle Schulen</label>\r\n                </fieldset>\r\n\r\n                <div>\r\n                    <input type=\"checkbox\" id=\"jo_upload_db\" name=\"jo_upload_db\">\r\n                    <label for=\"jo_upload_db\">Aktuellen Zustand der Datenbank als Vorlage hochladen</label>\r\n                </div>\r\n            </div>\r\n\r\n\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_save_button\">Speichern</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n\r\n        let that = this;\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { this.showMainWindow(); });\r\n        jQuery('#jo_ds_save_button').on('click', () => { \r\n            this.saveNameAndPublishedTo();\r\n         })\r\n\r\n        this.setValues();\r\n\r\n        [\"read\", \"write\", \"ddl\"].forEach(kind => {\r\n            jQuery('.jo_button_code_' + kind).on('pointerdown', () => {\r\n                that.main.networkManager.setNewSecret(that.workspace.id, kind, (secret) => {\r\n                    jQuery('.jo_ds_secret_'+kind).text(secret);\r\n                })\r\n            })\r\n        })\r\n\r\n        jQuery('#jo_ds_publishedTo>input').on('change', (e) => {$('#jo_upload_db').prop('checked', !((<HTMLInputElement>jQuery('#b0')[0]).checked))});\r\n\r\n    }\r\n\r\n    saveNameAndPublishedTo(){\r\n        let published_to = 0;\r\n        jQuery('#jo_ds_publishedTo').find('input').each( (n, element) => {\r\n            let $element = jQuery(element);\r\n            //@ts-ignore\r\n            if(<HTMLInputElement>element.checked){\r\n                published_to = Number.parseInt(<string>$element.attr('value'));\r\n            }\r\n        })\r\n\r\n        this.main.networkManager.setNameAndPublishedTo(this.workspace.id, \r\n            <string>jQuery('.jo_databasename').val(), published_to, <string>jQuery('.jo_ds_settings_description').val(),\r\n             () => {\r\n                 if($('#jo_upload_db').prop('checked')){\r\n                    new TemplateUploader().uploadCurrentDatabase(this.workspace.id, this.main);                    \r\n                 }\r\n                 this.showMainWindow(); \r\n                })\r\n    }\r\n\r\n    setValues(){\r\n        jQuery('.jo_databasename').val(this.workspace.name);\r\n        this.main.networkManager.getDatabaseSettings(this.workspace.id, (response) => {\r\n            [\"read\", \"write\", \"ddl\"].forEach(kind => {\r\n                jQuery('.jo_ds_secret_' + kind).text(response.secrets[kind]);\r\n            });\r\n            if(this.main.user.is_admin){\r\n                jQuery('#b3').css('visibility', 'visible');\r\n                jQuery('#lb3').css('visibility', 'visible');\r\n            }\r\n            if(this.main.user.is_schooladmin){\r\n                jQuery('#b2').css('visibility', 'visible');\r\n                jQuery('#lb2').css('visibility', 'visible');\r\n            }\r\n            // jQuery('#jo_ds_publishedTo input').attr('checked', '');\r\n            jQuery('#b'+response.publishedTo).prop('checked', true);\r\n\r\n            jQuery('#jo_upload_db').prop('checked', response.publishedTo != 0);\r\n\r\n            jQuery('.jo_ds_settings_description').val(this.workspace.database.description);\r\n        })\r\n    }\r\n\r\n    showMainWindow() {\r\n        jQuery('#main').css('visibility', 'visible');\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n    }\r\n\r\n\r\n\r\n}","import { WorkspaceData } from \"../communication/Data.js\";\r\nimport { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { DatabaseSettingsDialog } from \"../main/gui/DatabaseSettingsDialog.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { WDatabase } from \"./WDatabase.js\";\r\n\r\nexport class Workspace {\r\n    \r\n    name: string;\r\n    path: string;\r\n    isFolder: boolean;\r\n    id: number;\r\n    owner_id: number;\r\n\r\n    version: number;\r\n    \r\n    moduleStore: ModuleStore;\r\n    panelElement: AccordionElement;\r\n    currentlyOpenModule: Module;\r\n    saved: boolean = true;\r\n\r\n    compilerMessage: string;\r\n\r\n    databaseId: number;\r\n    database: WDatabase;\r\n\r\n    sql_history: string;\r\n\r\n    permissions: number;\r\n\r\n    constructor(name: string, private main: MainBase, owner_id: number){\r\n        this.name = name;\r\n        this.owner_id = owner_id;\r\n        this.moduleStore = new ModuleStore(main);\r\n        this.sql_history = \"\";\r\n    }\r\n    \r\n    getWorkspaceData(withFiles: boolean): WorkspaceData {\r\n        let wd: WorkspaceData = {\r\n            name: this.name,\r\n            id: this.id,\r\n            owner_id: this.owner_id,\r\n            currentFileId: this.currentlyOpenModule == null ? null : this.currentlyOpenModule.file.id,\r\n            files: [],\r\n            sql_history: this.sql_history,\r\n            path: \"\",\r\n            isFolder: false,  \r\n            permissions: this.permissions,\r\n            database_id: this.databaseId\r\n        }\r\n\r\n        if(withFiles){\r\n            for(let m of this.moduleStore.getModules(false)){\r\n    \r\n                wd.files.push(m.getFileData(this));\r\n    \r\n            }\r\n        }\r\n\r\n        return wd;\r\n    }\r\n\r\n    renderSettingsButton(panelElement: AccordionElement) {\r\n        let $buttonDiv = panelElement?.$htmlFirstLine?.find('.jo_additionalButtonSettings');\r\n        if ($buttonDiv == null) return;\r\n        \r\n        // let myMain: Main = <Main>this.main;\r\n\r\n            let $button = jQuery('<div class=\"jo_settingsButton img_settings jo_button jo_active\" title=\"Datenbank-Einstellungen...\"></div>');\r\n            $buttonDiv.append($button);\r\n            let that = this;\r\n            $button.on('mousedown', (e) => e.stopPropagation());\r\n            $button.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                new DatabaseSettingsDialog(<any>that.main, that);\r\n\r\n            });\r\n\r\n        // } else {\r\n        //     $buttonDiv.find('.jo_startButton').remove();\r\n        // }\r\n    }\r\n\r\n\r\n    static restoreFromData(ws: WorkspaceData, main: Main): Workspace {\r\n\r\n        let w = new Workspace(ws.name, main, ws.owner_id);\r\n        w.id = ws.id;\r\n        w.path = ws.path;\r\n        w.isFolder = ws.isFolder;\r\n        w.owner_id = ws.owner_id;\r\n        w.sql_history = ws.sql_history;\r\n        w.permissions = ws.permissions;\r\n        w.databaseId = ws.database_id;\r\n\r\n        for(let f of ws.files){\r\n\r\n            let m: Module = Module.restoreFromData(f, main);\r\n            w.moduleStore.putModule(m);\r\n\r\n            if(f.id == ws.currentFileId){\r\n                w.currentlyOpenModule = m;\r\n            }\r\n\r\n        }\r\n\r\n        return w;\r\n\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        \r\n        return this.moduleStore.hasErrors();\r\n        \r\n    }\r\n\r\n    getModuleByMonacoModel(model: monaco.editor.ITextModel): Module {\r\n        for(let m of this.moduleStore.getModules(false)){\r\n            if(m.model == model){\r\n                return m;\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    }\r\n}\r\n\r\n","import { Editor } from \"./Editor.js\";\r\nimport { CompletionHint, Module } from \"../../compiler/parser/Module.js\";\r\nimport { Symbol, SymbolTable } from \"../../compiler/parser/SymbolTable.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { Column, Table } from \"../../compiler/parser/SQLTable.js\";\r\n\r\nexport class MyCompletionItemProvider implements monaco.languages.CompletionItemProvider {\r\n\r\n    isConsole: boolean;\r\n\r\n    public triggerCharacters: string[] = ['.', 'abcdefghijklmnopqrstuvwxyzäöüß_ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜ', ' ', ',', '('];\r\n\r\n    public keywordCompletionItems: Map<string, monaco.languages.CompletionItem> = new Map();\r\n\r\n    constructor(private main: MainBase) {\r\n        this.setupKeywordCompletionItems();\r\n    }\r\n\r\n    first: boolean = true;\r\n    provideCompletionItems(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, \r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n\r\n\r\n        let module: Module =\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null || module.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n            let that = this;\r\n\r\n            let wfc = function waitForCompiler(){\r\n                if(module.file.dirty){\r\n                    setTimeout(() => {\r\n                        wfc();\r\n                    }, 100);\r\n                } else {\r\n                    resolve(that.provideCompletionItemsIntern(model, position, context, token));\r\n                }\r\n            }\r\n        \r\n            wfc();\r\n\r\n        })\r\n\r\n        // Promise.resolve({\r\n        //     suggestions: completionItems\r\n        // });\r\n    }\r\n\r\n    provideCompletionItemsIntern(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, \r\n        token: monaco.CancellationToken): monaco.languages.CompletionList {\r\n\r\n        setTimeout(() => {\r\n            //@ts-ignore\r\n            let sw = this.main.getMonacoEditor()._contentWidgets[\"editor.widget.suggestWidget\"].widget;\r\n            if (this.first) {\r\n                sw.toggleDetails();\r\n                this.first = false;\r\n            }\r\n        }, 500);\r\n\r\n        let module: Module =\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null || module.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (this.isStringLiteral(module, position)) return null;\r\n\r\n        let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let symbolTable = module.mainSymbolTable.findTableAtPosition(position.lineNumber, position.column);\r\n        let completionHint: CompletionHint = module.getCompletionHint(position.lineNumber, position.column);\r\n        if (completionHint == null) {\r\n            completionHint = {\r\n                fromColumn: 0,\r\n                toColumn: 0,\r\n                fromLine: 0,\r\n                toLine: 0,\r\n                hintColumns: false,\r\n                hintTables: false,\r\n                hintKeywords: []\r\n            }\r\n        }\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n        this.addKeywordCompletionItems(completionHint, completionItems);\r\n\r\n        let dotMatch = textUntilPosition.match(/.*\\s([\\wöäüÖÄÜß]*)(\\.)([\\wöäüÖÄÜß]*)$/);\r\n\r\n        let ibMatch = textAfterPosition.match(/^([\\wöäüÖÄÜß]*)/);\r\n        let identifierAndBracketAfterCursor = \"\";\r\n        if (ibMatch != null && ibMatch.length > 0) {\r\n            identifierAndBracketAfterCursor = ibMatch[0];\r\n        }\r\n\r\n        if (dotMatch == null) {\r\n            this.addIdentifierCompletionItems(completionHint, symbolTable, completionItems);\r\n        } else {\r\n            this.addDotCompletionItems(position, dotMatch, identifierAndBracketAfterCursor, symbolTable, completionItems);\r\n        }\r\n\r\n        let word = model.getWordUntilPosition(position);\r\n        let replaceWordRange = { startColumn: word.startColumn, startLineNumber: position.lineNumber, endColumn: word.endColumn, endLineNumber: position.lineNumber };\r\n        let insertAfterCursorRange = { startColumn: position.column, startLineNumber: position.lineNumber, endColumn: position.column, endLineNumber: position.lineNumber }\r\n\r\n        for (let item of completionItems) {\r\n            if (item.range == null) {\r\n                if (item.insertText.startsWith(\",\")) {\r\n                    item.range = insertAfterCursorRange;\r\n                } else {\r\n                    item.range = replaceWordRange;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (completionHint.dontHint != null) {\r\n            completionItems = completionItems.filter(item => completionHint.dontHint.indexOf(item.insertText) < 0);\r\n        }\r\n\r\n        return {\r\n            suggestions: completionItems\r\n        };\r\n    }\r\n\r\n\r\n    addDotCompletionItems(position: monaco.Position, dotMatch: RegExpMatchArray, identifierAndBracketAfterCursor: string,\r\n        symbolTable: SymbolTable, completionItems: monaco.languages.CompletionItem[]) {\r\n        let textAfterDot = dotMatch[3];\r\n        let textBeforeDot = dotMatch[1];\r\n        let dotColumn = position.column - textAfterDot.length - 1;\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - textAfterDot.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n        for (let symbol of symbolTable.symbolList) {\r\n            if (symbol.table != null) {\r\n                let identifier: string = symbol.table.identifier;\r\n                if (symbol.tableAlias != null) identifier = symbol.tableAlias;\r\n                if (identifier.toLowerCase() == textBeforeDot) {\r\n                    for (let column of symbol.table.columns) {\r\n                        completionItems.push({\r\n                            label: column.identifier,\r\n                            detail: \"Spalte \" + column.identifier + \" der Tabelle \" + symbol.table.identifier,\r\n                            filterText: column.identifier,\r\n                            insertText: column.identifier,\r\n                            insertTextRules: monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                            kind: monaco.languages.CompletionItemKind.Field,\r\n                            range: rangeToReplace\r\n                        })\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    addIdentifierCompletionItems(completionHint: CompletionHint, symbolTable: SymbolTable, completionItems: monaco.languages.CompletionItem[]) {\r\n        let praefix: string = completionHint.praefix == null ? \"\" : completionHint.praefix;\r\n        let suffix: string = completionHint.suffix == null ? \"\" : completionHint.suffix;\r\n\r\n        if (!(completionHint.hintTables || completionHint.hintColumns)) {\r\n            return;\r\n        }\r\n\r\n        let tableIdentifiers: { [identifier: string]: boolean } = {};\r\n\r\n        let st: SymbolTable = symbolTable;\r\n        let columns: { [identifier: string]: Symbol[] } = {};\r\n        let columnIdentifiers: string[] = [];\r\n\r\n        while (st != null) {\r\n            for (let symbol of st.symbolList) {\r\n                if (symbol.column != null) {\r\n                    let columnIdentifier = symbol.column.identifier;\r\n                    if (columns[columnIdentifier] == null) {\r\n                        columns[columnIdentifier] = [symbol];\r\n                        columnIdentifiers.push(columnIdentifier);\r\n                    } else {\r\n                        columns[columnIdentifier].push(symbol);\r\n                    }\r\n                } else if (symbol.table != null && completionHint.hintTables) {\r\n                    if (!tableIdentifiers[symbol.identifier]) {\r\n                        let insertText = praefix + symbol.identifier + suffix;\r\n                        completionItems.push({\r\n                            label: symbol.identifier,\r\n                            detail: \"Tabelle \" + symbol.table.identifier,\r\n                            filterText: symbol.identifier,\r\n                            insertText: insertText,\r\n                            insertTextRules: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                            kind: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemKind.Snippet : monaco.languages.CompletionItemKind.Class,\r\n                            range: undefined,\r\n                            sortText: \"aa\" + symbol.identifier\r\n                        });\r\n                        tableIdentifiers[symbol.identifier] = true;\r\n                    }\r\n                }\r\n            }\r\n            st = st.parent;\r\n        }\r\n\r\n        if (completionHint.hintColumns) {\r\n            for (let ci of columnIdentifiers) {\r\n                let columList = columns[ci];\r\n                let withTable = columList.length > 1 && completionHint.hintColumnsOfTable == null;\r\n                for (let cs of columList) {\r\n                    let text = cs.identifier;\r\n                    if (withTable && cs.identifier == cs.column.identifier.toLowerCase()) {\r\n                        text = (cs.tableAlias == null ? cs.column.table.identifier : cs.tableAlias) + \".\" + text;\r\n                    }\r\n                    if (completionHint.hintColumnsOfTable == null || cs.column?.table?.identifier == completionHint.hintColumnsOfTable) {\r\n                        let insertText = praefix + text + suffix;\r\n                        completionItems.push({\r\n                            label: text,\r\n                            detail: \"Die Spalte \" + cs.column.identifier + \" der Tabelle \" + cs.column.table.identifier,\r\n                            filterText: text,\r\n                            insertText: insertText,\r\n                            insertTextRules: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                            kind: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemKind.Snippet : monaco.languages.CompletionItemKind.Field,\r\n                            range: undefined\r\n                        })\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    keywordToSnippetMap: { [keyword: string]: string } = {\r\n        \"(\": \"(\\n\\t$0\\n)\",\r\n        \"varchar\": \"varchar($1) $0\",\r\n        \"decimal\": \"decimal($1, $2) $0\"\r\n    }\r\n\r\n    addKeywordCompletionItems(completionHint: CompletionHint, completionItems: monaco.languages.CompletionItem[]) {\r\n        let praefix: string = completionHint.praefix == null ? \"\" : completionHint.praefix;\r\n        let suffix: string = completionHint.suffix == null ? \"\" : completionHint.suffix;\r\n\r\n\r\n        for (let text of completionHint.hintKeywords) {\r\n            let insertText = praefix + text + suffix;\r\n            let snippet = this.keywordToSnippetMap[text];\r\n\r\n            let ci = this.keywordCompletionItems.get(text);\r\n            if (ci != null) {\r\n                completionItems.push(ci);\r\n            } else if (snippet != null) {\r\n                let label = snippet.replace(\"$0\", \"\").replace(\"$1\", \"\").replace(\"$2\", \"\").replace(/ /g, \"\").replace(/\\n/g, \"\").replace(/\\t/g, \"\");\r\n                completionItems.push({\r\n                    label: label,\r\n                    detail: \"\",\r\n                    filterText: text,\r\n                    insertText: snippet,\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                })\r\n            } else {\r\n                completionItems.push({\r\n                    label: text,\r\n                    detail: \"\",\r\n                    filterText: text,\r\n                    insertText: text,\r\n                    insertTextRules: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                    kind: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemKind.Snippet : monaco.languages.CompletionItemKind.Keyword,\r\n                    range: undefined,\r\n                    sortText: text == \"from\" ? \"*\" : undefined\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    isStringLiteral(module: Module, position: monaco.Position) {\r\n\r\n        let tokenList = module.tokenList;\r\n        if (tokenList == null || tokenList.length == 0) return false;\r\n\r\n        let posMin = 0;\r\n        let posMax = tokenList.length - 1;\r\n        let pos: number;\r\n\r\n        let watchDog = 1000;\r\n\r\n        while (true) {\r\n            let posOld = pos;\r\n            pos = Math.round((posMax + posMin) / 2);\r\n\r\n            if (posOld == pos) return false;\r\n\r\n            watchDog--;\r\n            if (watchDog == 0) return false;\r\n\r\n            let t = tokenList[pos];\r\n            let p = t.position;\r\n\r\n            if (p.line < position.lineNumber || p.line == position.lineNumber && p.column + p.length < position.column) {\r\n                posMin = pos;\r\n                continue;\r\n            }\r\n\r\n            if (p.line > position.lineNumber || p.line == position.lineNumber && p.column > position.column) {\r\n                posMax = pos;\r\n                continue;\r\n            }\r\n\r\n            return t.tt == TokenType.stringConstant;\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    setupKeywordCompletionItems() {\r\n        this.keywordCompletionItems.set(\"delete from\",\r\n            {\r\n                label: \"delete from <Tabelle> where <Bedingung>\",\r\n                detail: \"Anweisung zum Löschen von Datensätzen\",\r\n                filterText: `delete from`,\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `delete from `,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"drop table\",\r\n            {\r\n                label: \"drop table <Tabelle>\",\r\n                detail: \"Anweisung zum Löschen einer Tabelle\",\r\n                filterText: 'drop table',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `drop table `,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"alter\",\r\n            {\r\n                label: \"alter table <Tabelle> <rename to, rename column, add column, drop column>\",\r\n                detail: \"Anweisung zum Ändern des Schemas (alter table <Tabelle> <rename to, rename column, add column, drop column>)\",\r\n                filterText: 'alter',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `alter table `,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"select\",\r\n            {\r\n                label: \"select <Spalten> from <Tabellen> where <Bedingung>\",\r\n                detail: \"Select-Anweisung\",\r\n                filterText: 'select',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `select $2 from $1\\nwhere $0\\n`,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"create table\",\r\n            {\r\n                label: \"create table <Tabellenbezeichner> (<Spaltendefinitionen>)\",\r\n                detail: \"Create table-Anweisung (Erstellt eine neue Tabelle)\",\r\n                filterText: 'create',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `create table $1 (\\n\\t$0\\n);`,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        // this.keywordCompletionItems.set(\"from\",\r\n        //     {\r\n        //         label: \"from <Tabellen> where <Bedingung>\",\r\n        //         detail: \"from-Teil der select-Anweisung\",\r\n        //         filterText: 'from',\r\n        //         // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n        //         insertText: `from $1\\nwhere $0\\n`,\r\n        //         command: {\r\n        //             id: \"editor.action.triggerSuggest\",\r\n        //             title: '123',\r\n        //             arguments: []\r\n        //         },\r\n        //         insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n        //         kind: monaco.languages.CompletionItemKind.Snippet,\r\n        //         range: undefined\r\n        //     });\r\n\r\n    }\r\n\r\n\r\n}","import { Module, MethodCallPosition } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\n\r\n\r\nexport class MySignatureHelpProvider implements monaco.languages.SignatureHelpProvider {\r\n\r\n    signatureHelpTriggerCharacters?: readonly string[] = ['(', ',', ';', '<', '>', '=']; // semicolon, <, >, = for for-loop, if, while, ...\r\n    signatureHelpRetriggerCharacters?: readonly string[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    provideSignatureHelp(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let that = this;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            setTimeout(() => {\r\n\r\n                this.main.compileIfDirty();\r\n\r\n                resolve(that.provideSignatureHelpLater(model, position, token, context));\r\n\r\n            }, 300);\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    provideSignatureHelpLater(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model != this.main.getMonacoEditor().getModel());\r\n\r\n        let module: Module = \r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        // let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        // let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let methodCallPositions = module.methodCallPositions[position.lineNumber];\r\n\r\n        if (methodCallPositions == null) return null;\r\n\r\n        let methodCallPosition: MethodCallPosition = null;\r\n        let rightMostPosition: number = -1;\r\n\r\n        for (let i = methodCallPositions.length - 1; i >= 0; i--) {\r\n            let mcp = methodCallPositions[i];\r\n            if (mcp.identifierPosition.column + mcp.identifierPosition.length < position.column\r\n                && mcp.identifierPosition.column > rightMostPosition) {\r\n                if (mcp.rightBracketPosition == null ||\r\n                    (position.lineNumber <= mcp.rightBracketPosition.line && position.column <= mcp.rightBracketPosition.column)\r\n                    || (position.lineNumber < mcp.rightBracketPosition.line)) {\r\n                    methodCallPosition = mcp;\r\n                    rightMostPosition = mcp.identifierPosition.column;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (methodCallPosition == null) return null;\r\n\r\n        return this.getSignatureHelp(methodCallPosition, position);\r\n\r\n\r\n\r\n    }\r\n\r\n    getSignatureHelp(methodCallPosition: MethodCallPosition,\r\n        position: monaco.Position): monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let parameterIndex: number = 0;\r\n\r\n        for (let cp of methodCallPosition.commaPositions) {\r\n            if (cp.line < position.lineNumber || (cp.line == position.lineNumber && cp.column < position.column)) {\r\n                parameterIndex++;\r\n            }\r\n        }\r\n\r\n        let signatureInformationList: monaco.languages.SignatureInformation[] = [];\r\n\r\n        return Promise.resolve({\r\n            value: {\r\n                activeParameter: parameterIndex,\r\n                activeSignature: 0,\r\n                signatures: signatureInformationList\r\n            },\r\n            dispose: () => { }\r\n        });\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\n\r\n\r\n\r\nexport class MyHoverProvider {\r\n\r\n    private static keywordDescriptions: { [keyword: string]: string } = {\r\n        \"print\": \"Die Anweisung ```print``` gibt eine Zeichenkette aus.\",\r\n        \"new\": \"Das Schlüsselwort ```new``` bewirkt die Instanzierung (\\\"Erschaffung\\\") eines neuen Objektes einer Klasse.\",\r\n        \"println\": \"Die Anweisung ```println``` gibt eine Zeichenkette gefolgt von einem Zeilenumbruch aus.\",\r\n        \"while\": \"```\\nwhile (Bedingung) {Anweisungen}\\n```  \\nbewirkt die Wiederholung der Anweisungen solange ```Bedingung == true``` ist.\",\r\n        \"for\": \"```\\nfor(Startanweisung;Solange-Bedingung;Nach_jeder_Wiederholung){Anweisungen}\\n```  \\n\"\r\n            + \"führt zunächst die Startanweisung aus und wiederholt dann die Anweisungen solange ```Bedingung == true``` ist. Am Ende jeder wiederholung wird Nach_jeder_Wiederholung ausgeführt.\",\r\n        \"if\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.  \\nDer ```else```-Teil kann auch weggelassen werden.\",\r\n        \"else\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.\",\r\n        \"switch\": \"```\\nswitch(Selektor){ case Wert_1: Anweisungen_1; break; case Wert_2: Anweisungen_2; break; default: Default-Anweisungen } \\n```  \\nwertet den Selektor-Term aus und führt abhängig vom Termwert Anweisungen_1, Anweisungen_2, ... aus. Entspricht der Termwert keinem der Werte Wert_1, Wert_2, ..., so werden die Default-Anweisungen ausgeführt.\",\r\n        \"%\": \"```\\na % b\\n```  \\n (sprich: 'a modulo b') berechnet den **Rest** der ganzzahligen Division a/b.\",\r\n        \"==\": \"```\\na == b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` gleich sind.  \\nSind a und b **Objekte**, so ergibt ```a == b``` nur dann ```true```, wenn ```a``` und ```b``` auf das **identische** Objekt zeigen.  \\n```==``` nennt man **Vergleichsoperator**.\",\r\n        \"<=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` kleiner oder gleich dem Wert von ```b``` ist.\",\r\n        \">=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` größer oder gleich dem Wert von ```b``` ist.\",\r\n        \"!=\": \"```\\na != b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` **un**gleich sind.  \\nSind ```a``` und ```b``` **Objekte**, so ergibt ```a != b``` dann ```true```, wenn ```a``` und ```b``` **nicht** auf das **identische** Objekt zeigen.  \\n```!=``` nennt man **Ungleich-Operator**.\",\r\n        \"+=\": \"```\\na += b\\n(Kurzschreibweise für a = a + b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erhöht** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"-=\": \"```\\na -= b\\n(Kurzschreibweise für a = a - b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erniedrigt** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"*=\": \"```\\na *= b\\n(Kurzschreibweise für a = a * b)\\n```  \\nbewirkt, dass der Wert von ```a``` mit dem Wert von ```b``` **multipliziert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"/=\": \"```\\na /= b\\n(Kurzschreibweise für a = a / b)\\n```  \\nbewirkt, dass der Wert von ```a``` durch den Wert von ```b``` **dividiert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"++\": \"```\\na++\\n(Kurzschreibweise für a = a + 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins erhöht wird.\",\r\n        \"--\": \"```\\na--\\n(Kurzschreibweise für a = a - 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins eniedrigt wird.\",\r\n        \"=\": \"```\\na = Term\\n```  \\nberechnet den Wert des Terms und weist ihn der Variablen ```a``` zu.  \\n**Vorsicht:**  \\nVerwechsle ```=```(**Zuweisungsoperator**) nicht mit ```==```(**Vergleichsoperator**)!\",\r\n        \"!\": \"```\\n!a\\n```  \\nergibt genau dann ```true```, wenn ```a``` ```false``` ergibt.  \\n```!``` spricht man '**nicht**'.\",\r\n        \"public\": \"```\\npublic\\n```  \\nAttribute und Methoden, die als ```public``` deklariert werden, sind überall (auch außerhalb der Klasse) sichtbar.\",\r\n        \"private\": \"```\\nprivate\\n```  \\nAttribute und Methoden, die als ```private``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse sichtbar.\",\r\n        \"protected\": \"```\\nprotected\\n```  \\nAttribute und Methoden, die als ```protected``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse oder innerhalb von Methoden von Kindklassen sichtbar.\",\r\n        \"return\": \"```\\nreturn Term\\n```  \\nbewirkt, dass die Methode verlassen wird und der Wert des Terms an die aufrufende Stelle zurückgegeben wird.\",\r\n        \"break\": \"```\\nbreak;\\n```  \\ninnerhalb einer Schleife bewirkt, dass die Schleife sofort verlassen und mit den Anweisungen nach der Schleife fortgefahren wird.  \\n\"+\r\n        \"```break``` innerhalb einer ```switch```-Anweisung bewirkt, dass der Block der ```switch```-Anweisung verlassen wird.\",\r\n        \"class\": \"```\\nclass\\n```  \\nMit dem Schlüsselwort ```class``` werden Klassen definiert.\",\r\n        \"extends\": \"```\\nextends\\n```  \\n```class A extends B { ... }``` bedeutet, dass die Klasse A Unterklasse der Klasse B ist.\",\r\n        \"implements\": \"```\\nimplements\\n```  \\n```class A implements B { ... }``` bedeutet, dass die Klasse A das Interface B implementiert, d.h., dass sie alle Methoden besitzen muss, die in B definiert sind.\",\r\n        \"this\": \"```\\nthis\\n```  \\nInnerhalb einer Methodendefinition bezeichnet das Schlüsselwor ```this``` immer dasjenige Objekt, für das die Methode gerade ausgeführt wird.\",\r\n\r\n    }\r\n\r\n    constructor(private editor: Editor) {\r\n\r\n    }\r\n\r\n    provideHover(model: monaco.editor.ITextModel, position: monaco.Position, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Hover> {\r\n\r\n        let selection: monaco.Selection = this.editor.editor.getSelection();\r\n        \r\n        // if cursor is inside current selection then don't show hover, because editor.onDidChangeCursorPosition evaluates selected Text \r\n        // (see class Editor).\r\n        if(selection != null){\r\n            if(selection.startLineNumber != selection.endLineNumber || selection.startColumn != selection.endColumn){\r\n                if(\r\n                    (selection.startLineNumber < position.lineNumber || selection.startLineNumber == position.lineNumber && selection.startColumn <= position.column) && \r\n                    (selection.endLineNumber > position.lineNumber || selection.endLineNumber == position.lineNumber && selection.endColumn >= position.column) \r\n                ){\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        let module: Module = this.editor.main.getCurrentWorkspace()?.getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        for(let errorList of module.errors){\r\n            for(let error of errorList){\r\n                if(error.position.line == position.lineNumber && \r\n                    error.position.column <= position.column && \r\n                    error.position.column + error.position.length >= position.column){\r\n                        return null; // Show error-tooltip and don't show hover-tooltip\r\n                    }\r\n            }\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let declarationAsString = \"\";\r\n\r\n        if (element != null) {\r\n        } else {\r\n            let word = this.getWordUnderCursor(model, position);\r\n            let desc = MyHoverProvider.keywordDescriptions[word];\r\n            if (desc != null) {\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: desc }],\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getWordUnderCursor(model: monaco.editor.ITextModel, position: monaco.Position)\r\n         : string {\r\n        \r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let word = \"\";\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierOrArrayDescriptor(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        if (end - begin > 1) {\r\n            word = text.substring(begin, end);\r\n        } else {\r\n            end = pos;\r\n            while (end < text.length && this.isInsideOperator(text.charAt(end))) {\r\n                end++;\r\n            }\r\n    \r\n            begin = pos;\r\n            while (begin > 0 && this.isInsideOperator(text.charAt(begin - 1))) {\r\n                begin--;\r\n            }\r\n    \r\n            if (end - begin > 0) {\r\n                word = text.substring(begin, end);\r\n            }\r\n        }\r\n\r\n        return word;\r\n\r\n    }\r\n\r\n    widenDeclaration(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        identifier: string): string {\r\n\r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierChain(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        let lenght: number = identifier?.length == null ? 1 : identifier.length;\r\n\r\n        if (end - begin > length) {\r\n            return text.substring(begin, end);\r\n        }\r\n\r\n        return identifier;\r\n    }\r\n\r\n    isInsideIdentifierChain(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß_\\[\\]\\.]/i);\r\n\r\n    }\r\n\r\n    isInsideOperator(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[!%<>=\\+\\-\\*\\/]/i);\r\n\r\n    }\r\n\r\n    isInsideIdentifierOrArrayDescriptor(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß\\[\\]]/i);\r\n\r\n    }\r\n\r\n\r\n}","import { QuickFix } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyCodeActionProvider implements monaco.languages.CodeActionProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideCodeActions(model: monaco.editor.ITextModel, range: monaco.Range, context: monaco.languages.CodeActionContext, token: monaco.CancellationToken): monaco.languages.CodeActionList | Promise<monaco.languages.CodeActionList> {\r\n        const actions = context.markers.map(error => {\r\n            let quickFix: QuickFix = <any>error.relatedInformation;\r\n            if (quickFix == null) return null;\r\n\r\n            let codeAction: monaco.languages.CodeAction = {\r\n                title: quickFix.title,\r\n                diagnostics: [error],\r\n                kind: \"quickfix\",\r\n                edit: {\r\n                    edits: quickFix.editsProvider(model.uri)\r\n                },\r\n                isPreferred: true\r\n            };\r\n            return codeAction;\r\n        });\r\n        return {\r\n            actions: actions,\r\n            dispose: () => { }\r\n        }\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Editor } from \"./Editor.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyReferenceProvider implements monaco.languages.ReferenceProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideReferences(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.ReferenceContext, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Location[]> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) return null;\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let referencePositions: monaco.languages.Location[] = [];\r\n\r\n        usagePositions.forEach((upInCurrentModule, module) => {\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    referencePositions.push(\r\n                        {\r\n                            uri: module.uri,\r\n                            range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length }\r\n                        });\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        return referencePositions;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import { Main } from \"../Main.js\";\r\n\r\nexport type HelperDirection = \"top\" | \"bottom\" | \"left\" | \"right\";\r\n\r\nexport class Helper {\r\n\r\n    public static openHelper(text: string, targetElement: JQuery<HTMLElement>, direction: HelperDirection) {\r\n\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.removeClass(['jo_arrow_box_left', 'jo_arrow_box_right', 'jo_arrow_box_top', 'jo_arrow_box_bottom']);\r\n\r\n        $helper.addClass('jo_arrow_box_' + direction);\r\n\r\n        $helper.css({ left: '', right: '', top: '', bottom: '' });\r\n\r\n        let to = targetElement.offset();\r\n        let b = jQuery('body');\r\n\r\n        let delta: number = 34;\r\n\r\n        switch (direction) {\r\n            case \"bottom\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                bottom: b.height() - to.top + delta\r\n            });\r\n                break;\r\n            case \"top\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                top: to.top + targetElement.height() + 26\r\n            });\r\n                break;\r\n            case \"left\": $helper.css({\r\n                left: to.left + targetElement.width() + delta,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n            case \"right\": $helper.css({\r\n                right: b.width() - to.left,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n        }\r\n\r\n        $helper.find('span').html(text);\r\n\r\n        let $button = $helper.find('.jo_button');\r\n        $button.on('click', (e) => {\r\n            e.stopPropagation();\r\n            $button.off('click');\r\n            Helper.close();\r\n        });\r\n\r\n        $helper.fadeIn(800);\r\n\r\n    }\r\n\r\n    static close() {\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.fadeOut(800);\r\n    }\r\n\r\n\r\n    static showHelper(id: string, mainBase: Main, $element?: JQuery<HTMLElement>) {\r\n\r\n        let main: Main;\r\n        if(mainBase instanceof Main){\r\n            main = mainBase;\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        let helperHistory = main.user.settings!.helperHistory;\r\n\r\n        let flag = id + \"Done\";\r\n\r\n        if (helperHistory != null && (helperHistory[flag] == null || !helperHistory[flag])) {\r\n            helperHistory[flag] = true;\r\n            main.networkManager.sendUpdateUserSettings(() => { });\r\n\r\n            let text: string = \"\";\r\n            let direction: HelperDirection = \"left\";\r\n\r\n            switch (id) {\r\n                case \"newDatabaseHelper\":\r\n                    text = `Es gibt noch keine Datenbank. <br> Nutzen Sie den Button\r\n                        <span class='img_add-database-dark jo_inline-image'></span> um eine Datenbank anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                    case \"newSQLFileHelper\":\r\n                        text = `Es gibt noch keine Datei mit SQL-Anweisungen. <br> Nutzen Sie den Button \r\n                            <span class='img_add-file-dark jo_inline-image'></span> um eine neue Datei anzulegen.\r\n                            `;\r\n                        direction = \"left\";\r\n                        break;\r\n                case \"homeButtonHelper\":\r\n                    text = \"Mit dem Home-Button <span class='img_home-dark jo_inline-image'></span> können Sie wieder zu Ihren eigenen Workspaces wechseln.\";\r\n                    direction = \"top\";\r\n                    $element = jQuery('.img_home-dark');\r\n                    break;\r\n                case \"playButtonHelper\":\r\n                    text = `Mit dem \"Start-Button\"\r\n                        (<span class='img_start-dark jo_inline-image'></span>) \r\n                        oder der Tastenkombination &lt;Strg&gt;&nbsp;+&nbsp&lt;Enter&gt; \r\n                        wird die Anweisung ausgeführt, in der der Cursor gerade steht. \r\n                        <br> Wollen Sie mehrere Anweisungen hintereinander ausführen, so markieren \r\n                        Sie alle Anweisungen und klicken Sie dann auf <span class='img_start-dark jo_inline-image'></span>\r\n                        oder drücken Sie  &lt;Strg&gt;&nbsp;+&nbsp&lt;Enter&gt;. `;\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"consoleHelper\": \r\n                    text=`\r\n                        Hier können Sie Anweisungen oder Terme eingeben, die nach Bestätigung mit der Enter-Taste ausgeführt/ausgewertet werden. Das Ergebnis sehen Sie im Bereich über der Eingabezeile. <br>\r\n                        Falls das Programm gerade pausiert (z.B. bei Ausführung in Einzelschritten) können Sie auch auf die Variablen des aktuellen Sichtbarkeitsbereiches zugreifen.\r\n                    `;\r\n                    direction = \"bottom\";\r\n            }\r\n\r\n            if (text != \"\" && $element != null && $element.length > 0) {\r\n                Helper.openHelper(text, $element, direction);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MyCompletionItemProvider } from \"./MyCompletionItemProvider.js\";\r\nimport { defineMyJava } from \"./MyJava.js\";\r\nimport { MySignatureHelpProvider } from \"./MySignatureHelpProvider.js\";\r\nimport { MyHoverProvider } from \"./MyHoverProvider.js\";\r\nimport { MyCodeActionProvider } from \"./MyCodeActionProvider.js\";\r\nimport { MyReferenceProvider } from \"./MyReferenceProvider.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { defineVscSQL } from \"./VscSql.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\nexport class Editor {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n\r\n    cw: monaco.editor.IContentWidget = null;\r\n\r\n    dontPushNextCursorMove: number = 0;\r\n\r\n    constructor(public main: MainBase, private showMinimap: boolean, private isEmbedded: boolean) {\r\n    }\r\n\r\n    initGUI($element: JQuery<HTMLElement>) {\r\n\r\n\r\n\r\n        defineVscSQL();\r\n\r\n        monaco.editor.defineTheme('myCustomThemeDark', {\r\n            base: 'vs-dark', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'functions', foreground: 'dcdcaa', fontStyle: 'italic' },\r\n                { token: 'string.sql', foreground: '3DC9B0' },\r\n                { token: 'number', foreground: '7bef3f' },\r\n                { token: 'type', foreground: '499cd6' },\r\n                { token: 'identifier', foreground: 'effefe' },\r\n                { token: 'statement', foreground: '9cdcfe', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '619ceb', fontStyle: 'bold' },\r\n                { token: 'table', foreground: 'ff0000', fontStyle: 'bold' },\r\n                { token: 'delimiter', foreground: 'e8eb38' }\r\n                // { token: 'comment.js', foreground: '008800', fontStyle: 'bold italic underline' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#1e1e1e\",\r\n                \"jo_highlightStatementGreen\": \"#004000\",\r\n                \"jo_highlightStatementYellow\": \"#404000\",\r\n                \"jo_highlightStatementRed\": \"#402020\"\r\n            }\r\n        });\r\n\r\n        monaco.editor.defineTheme('myCustomThemeLight', {\r\n            base: 'vs', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'functions', foreground: '694E16', fontStyle: 'italic bold' },\r\n                { token: 'string.sql', foreground: 'a03030' },\r\n                { token: 'number', foreground: '404040' },\r\n                { token: 'type', foreground: '0000ff', fontStyle: 'bold' },\r\n                { token: 'identifier', foreground: '8000e0' },\r\n                { token: 'statement', foreground: '001080', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '00a000', fontStyle: 'bold' },\r\n                { token: 'comment', foreground: '808080', fontStyle: 'italic' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#FFFFFF\",\r\n                \"editor.foreground\": \"#000000\",\r\n                \"editor.inactiveSelectionBackground\": \"#E5EBF1\",\r\n                \"editorIndentGuide.background\": \"#D3D3D3\",\r\n                \"editorIndentGuide.activeBackground\": \"#939393\",\r\n                \"editor.selectionHighlightBackground\": \"#ADD6FF80\",\r\n                \"editorSuggestWidget.background\": \"#F3F3F3\",\r\n                \"activityBarBadge.background\": \"#007ACC\",\r\n                \"sideBarTitle.foreground\": \"#6F6F6F\",\r\n                \"list.hoverBackground\": \"#E8E8E8\",\r\n                \"input.placeholderForeground\": \"#767676\",\r\n                \"searchEditor.textInputBorder\": \"#CECECE\",\r\n                \"settings.textInputBorder\": \"#CECECE\",\r\n                \"settings.numberInputBorder\": \"#CECECE\",\r\n                \"statusBarItem.remoteForeground\": \"#FFF\",\r\n                \"statusBarItem.remoteBackground\": \"#16825D\",\r\n                \"jo_highlightStatementGreen\": \"#004000\",\r\n                \"jo_highlightStatementYellow\": \"#404000\",\r\n                \"jo_highlightStatementRed\": \"#400000\"\r\n            }\r\n        });\r\n\r\n\r\n        this.editor = monaco.editor.create($element[0], {\r\n            // value: [\r\n            //     'function x() {',\r\n            //     '\\tconsole.log(\"Hello world!\");',\r\n            //     '}'\r\n            // ].join('\\n'),\r\n            // language: 'myJava',\r\n            language: 'vscSQL',\r\n            lightbulb: {\r\n                enabled: true\r\n            },\r\n            // gotoLocation: {\r\n            //     multipleReferences: \"gotoAndPeek\"\r\n            // },\r\n            lineDecorationsWidth: 0,\r\n            peekWidgetDefaultFocus: \"tree\",\r\n            fixedOverflowWidgets: true,\r\n            quickSuggestions: true,\r\n            quickSuggestionsDelay: 10,\r\n            fontSize: 14,\r\n            fontFamily: \"Consolas, Roboto Mono\",\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            selectOnLineNumbers: false,\r\n            // selectionHighlight: false,\r\n            automaticLayout: true,\r\n            scrollBeyondLastLine: false,\r\n            occurrencesHighlight: false,\r\n            autoIndent: \"full\",\r\n            dragAndDrop: true,\r\n            formatOnType: true,\r\n            formatOnPaste: true,\r\n            suggestFontSize: 16,\r\n            suggestLineHeight: 22,\r\n            suggest: {\r\n                localityBonus: true,\r\n                insertMode: \"replace\"\r\n                // snippetsPreventQuickSuggestions: false\r\n            },\r\n            parameterHints: { enabled: true, cycle: true },\r\n            // //@ts-ignore\r\n            // contribInfo: {\r\n            //     suggestSelection: 'recentlyUsedByPrefix',\r\n            // },\r\n\r\n            mouseWheelZoom: this.isEmbedded,\r\n\r\n            minimap: {\r\n                enabled: this.showMinimap\r\n            },\r\n            scrollbar: {\r\n                vertical: 'auto',\r\n                horizontal: 'auto'\r\n            },\r\n            theme: \"myCustomThemeDark\",\r\n            // automaticLayout: true\r\n\r\n\r\n        }\r\n        );\r\n\r\n        let that = this;\r\n\r\n        let mouseWheelListener = (event: WheelEvent) => {\r\n            if (event.ctrlKey === true) {\r\n\r\n                that.changeEditorFontSize(Math.sign(event.deltaY), true);\r\n\r\n                event.preventDefault();\r\n            }\r\n        };\r\n\r\n\r\n        this.editor.onDidChangeConfiguration((event) => {\r\n            if (event.hasChanged(monaco.editor.EditorOption.fontInfo) && this.isEmbedded) {\r\n\r\n                this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n            }\r\n        });\r\n\r\n        this.editor.onDidChangeCursorPosition((event) => {\r\n\r\n            that.onDidChangeCursorPosition(event.position);\r\n\r\n        });\r\n\r\n        // We need this to set our model after user uses Strg+click on identifier\r\n        this.editor.onDidChangeModel((event) => {\r\n\r\n            let element: HTMLDivElement = <any>$element.find('.monaco-editor')[0];\r\n            element.removeEventListener(\"wheel\", mouseWheelListener);\r\n            element.addEventListener(\"wheel\", mouseWheelListener, { passive: false });\r\n\r\n            if (this.main.getCurrentWorkspace() == null) return;\r\n\r\n            let module = this.main.getCurrentWorkspace().getModuleByMonacoModel(this.editor.getModel());\r\n            if (this.main instanceof Main && module != null) {\r\n\r\n                this.main.projectExplorer.setActiveAfterExternalModelSet(module);\r\n            }\r\n        });\r\n\r\n        monaco.languages.registerHoverProvider('vscSQL', new MyHoverProvider(this));\r\n\r\n        monaco.languages.registerCompletionItemProvider('vscSQL', new MyCompletionItemProvider(this.main));\r\n        monaco.languages.registerCodeActionProvider('vscSQL', new MyCodeActionProvider(this.main));\r\n        monaco.languages.registerReferenceProvider('vscSQL', new MyReferenceProvider(this.main));\r\n\r\n\r\n        monaco.languages.registerSignatureHelpProvider('vscSQL', new MySignatureHelpProvider(this.main));\r\n\r\n        this.editor.onMouseDown((e: monaco.editor.IEditorMouseEvent) => {\r\n            const data = e.target.detail;\r\n            if (e.target.type !== monaco.editor.MouseTargetType.GUTTER_GLYPH_MARGIN &&\r\n                e.target.type !== monaco.editor.MouseTargetType.GUTTER_LINE_NUMBERS || data.isAfterLines) {\r\n                return;\r\n            }\r\n            that.onMarginMouseDown(e.target.position.lineNumber);\r\n            return;\r\n        });\r\n\r\n\r\n        // If editor is instantiated before fonts are loaded then indentation-lines\r\n        // are misplaced, see https://github.com/Microsoft/monaco-editor/issues/392\r\n        // so:\r\n        setTimeout(() => {\r\n            monaco.editor.remeasureFonts();\r\n        }, 2000);\r\n\r\n        this.addActions();\r\n\r\n        //@ts-ignore\r\n        this.editor.onDidType((text) => { that.onDidType(text) });\r\n\r\n        return this.editor;\r\n    }\r\n\r\n\r\n    onDidType(text: string) {\r\n        //        const endOfCommentText = \" * \\n */\";\r\n\r\n        const insertEndOfComment = (pos, insertText: string, newLine: number, newColumn: number) => {\r\n            const range = new monaco.Range(\r\n                pos.lineNumber,\r\n                pos.column,\r\n                pos.lineNumber,\r\n                pos.column\r\n            );\r\n            this.editor.executeEdits(\"new-bullets\", [\r\n                { range, text: insertText }\r\n            ]);\r\n\r\n            // Set position after bulletText\r\n            this.editor.setPosition({\r\n                lineNumber: newLine,\r\n                column: newColumn\r\n            });\r\n        };\r\n\r\n        if (text === \"\\n\") {\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            const prevLine = model.getLineContent(position.lineNumber - 1);\r\n            if (prevLine.trim().indexOf(\"/*\") === 0 && !prevLine.trimRight().endsWith(\"*/\")) {\r\n                const nextLine = position.lineNumber < model.getLineCount() ? model.getLineContent(position.lineNumber + 1) : \"\";\r\n                if (!nextLine.trim().startsWith(\"*\")) {\r\n                    let spacesAtBeginningOfLine: string = prevLine.substr(0, prevLine.length - prevLine.trimLeft().length);\r\n                    if (prevLine.trim().indexOf(\"/**\") === 0) {\r\n                        insertEndOfComment(position, \"\\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    } else {\r\n                        insertEndOfComment(position, \" * \\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    lastTime: number = 0;\r\n    setFontSize(fontSizePx: number) {\r\n\r\n        // console.log(\"Set font size: \" + fontSizePx);\r\n        let time = new Date().getTime();\r\n        if (time - this.lastTime < 150) return;\r\n        this.lastTime = time;\r\n\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (this.main instanceof Main) {\r\n            this.main.viewModeController.saveFontSize(fontSizePx);\r\n        }\r\n\r\n        if (fontSizePx != editorfs) {\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx\r\n            });\r\n\r\n            // editor does not set fontSizePx, but fontSizePx * zoomfactor with unknown zoom factor, so \r\n            // we have to do this dirty workaround:\r\n            let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n            let factor = newEditorfs / fontSizePx;\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx / factor\r\n            });\r\n\r\n        }\r\n\r\n        jQuery('.jo_editorFontSize').css('font-size', fontSizePx + \"px\");\r\n        jQuery('.jo_editorFontSize').css('line-height', (fontSizePx + 2) + \"px\");\r\n\r\n        document.documentElement.style.setProperty('--breakpoint-size', fontSizePx + 'px');\r\n        document.documentElement.style.setProperty('--breakpoint-radius', fontSizePx / 2 + 'px');\r\n\r\n\r\n        this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n    }\r\n\r\n    changeEditorFontSize(delta: number, dynamic: boolean = true) {\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (dynamic) {\r\n            if (editorfs < 10) {\r\n                delta *= 1;\r\n            } else if (editorfs < 20) {\r\n                delta *= 2;\r\n            } else {\r\n                delta *= 4;\r\n            }\r\n        }\r\n\r\n        let newEditorFs = editorfs + delta;\r\n        if (newEditorFs >= 6 && newEditorFs <= 80) {\r\n            this.setFontSize(newEditorFs);\r\n        }\r\n    }\r\n\r\n\r\n    addActions() {\r\n        let that = this;\r\n\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Find bracket',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'Finde korrespondierende Klammer',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.5,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                ed.getAction('editor.action.jumpToBracket').run();\r\n                return null;\r\n            }\r\n        });\r\n\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Execute statement',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'SQL-Anweisung ausführen',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.Enter],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.0,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                that.main.getActionManager().trigger('execute');\r\n                return null;\r\n            }\r\n        });\r\n\r\n        //console.log(this.editor.getSupportedActions());\r\n    }\r\n\r\n    onMarginMouseDown(lineNumber: number) {\r\n\r\n    }\r\n\r\n    elementDecoration: string[] = [];\r\n    onDidChangeCursorPosition(position: { lineNumber: number, column: number }) {\r\n\r\n        if (position == null) position = this.editor.getPosition();\r\n\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, []);\r\n            return;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        if (element != null) {\r\n            let usagePositions = element.usagePositions;\r\n            let upInCurrentModule = usagePositions.get(module);\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    decorations.push({\r\n                        range: { startColumn: up.column, startLineNumber: up.line, endColumn: up.column + up.length, endLineNumber: up.line },\r\n                        options: {\r\n                            className: 'jo_revealSyntaxElement', isWholeLine: false, overviewRuler: {\r\n                                color: { id: \"editorIndentGuide.background\" },\r\n                                darkColor: { id: \"editorIndentGuide.activeBackground\" },\r\n                                position: monaco.editor.OverviewRulerLane.Left\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        let executeActionActive = false;\r\n\r\n        for(let sqlStatement of module.getSQLSTatementsAtSelection(this.editor.getSelection())){\r\n\r\n            let classname = \"jo_highlightStatementGreen\";\r\n            if (sqlStatement != null) {\r\n                if (sqlStatement.hasErrors) {\r\n                    classname = \"jo_highlightStatementRed\";\r\n                    if (sqlStatement.acceptedBySQLite) {\r\n                        classname = \"jo_highlightStatementYellow\";\r\n                        executeActionActive = true;\r\n                    }\r\n                } else {\r\n                    executeActionActive = true;\r\n                }\r\n    \r\n                decorations.push({\r\n                    range: {\r\n                        startColumn: sqlStatement.from.column, startLineNumber: sqlStatement.from.line,\r\n                        endColumn: sqlStatement.to.column, endLineNumber: sqlStatement.to.line\r\n                    },\r\n                    options: {\r\n                        className: classname, isWholeLine: false, overviewRuler: {\r\n                            color: { id: classname },\r\n                            darkColor: { id: classname },\r\n                            position: monaco.editor.OverviewRulerLane.Left\r\n                        },\r\n                        minimap: {\r\n                            color: { id: classname },\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        },\r\n                        zIndex: -100\r\n                    }\r\n                })\r\n    \r\n            }\r\n        }\r\n\r\n\r\n        this.main.getActionManager().setActive('execute', executeActionActive);\r\n\r\n        if(executeActionActive && !this.main.isEmbedded()){\r\n            Helper.showHelper(\"playButtonHelper\", <any>this.main, jQuery('div.img_start-dark'));\r\n        }\r\n\r\n\r\n        this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, decorations);\r\n\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.main.getCurrentlyEditedModule();\r\n    }\r\n\r\n\r\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport function defineVscSQL() {\r\n    monaco.languages.register({\r\n        id: 'vscSQL',\r\n        extensions: ['.sql'],\r\n        //  mimetypes: [\"text/x-java-source\", \"text/x-java\"]  \r\n    });\r\n\r\n    let conf: monaco.languages.LanguageConfiguration = {\r\n        onEnterRules: [\r\n            {\r\n                // e.g. /** | */\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                afterText: /^\\s*\\*\\/$/,\r\n                action: { indentAction: monaco.languages.IndentAction.IndentOutdent, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g. /** ...|\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g.  * ...|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: '* ' }\r\n            },\r\n            {\r\n                // e.g.  */|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            },\r\n            {\r\n                // e.g.  *-----*/|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*[^/]*\\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            }\r\n        ],\r\n        comments: {\r\n            lineComment: '--',\r\n            blockComment: ['/*', '*/'],\r\n        },\r\n        brackets: [\r\n            ['{', '}'],\r\n            ['[', ']'],\r\n            ['(', ')']\r\n        ],\r\n        autoClosingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ],\r\n        surroundingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ]\r\n    };\r\n    let language = {\r\n\r\n        defaultToken: '',\r\n        tokenPostfix: '.sql',\r\n        ignoreCase: true,\r\n        brackets: [\r\n            { open: '[', close: ']', token: 'delimiter.square' },\r\n            { open: '(', close: ')', token: 'delimiter.parenthesis' }\r\n        ],\r\n        escapes: /\\\\(?:[abfnrtv\\\\\"'])/,\r\n        keywords: [\r\n            \"ABORT\", \"ACTION\", \"ADD\", \"AFTER\", \"ALL\", \"ALTER\", \"ANALYZE\", \"AND\", \"AS\", \"ASC\", \"ATTACH\", \"AUTOINCREMENT\", \"BEFORE\",\r\n            \"BEGIN\", \"BETWEEN\", \"BY\", \"CASCADE\", \"CASE\", \"CAST\", \"CHECK\", \"COLLATE\", \"COLUMN\", \"COMMIT\", \"CONFLICT\", \"CONSTRAINT\",\r\n            \"CREATE\", \"CROSS\", \"CURRENT_DATE\", \"CURRENT_TIME\", \"CURRENT_TIMESTAMP\", \"DATABASE\", \"DEFAULT\", \"DEFERRABLE\", \"DEFERRED\",\r\n            \"DELETE\", \"DESC\", \"DETACH\", \"DISTINCT\", \"DROP\", \"EACH\", \"ELSE\", \"END\", \"ESCAPE\", \"EXCEPT\", \"EXCLUSIVE\", \"EXISTS\", \"EXPLAIN\",\r\n            \"FAIL\", \"FOR\", \"FOREIGN\", \"FROM\", \"FULL\", \"GLOB\", \"GROUP\", \"HAVING\", \"IF\", \"IGNORE\", \"IMMEDIATE\", \"IN\", \"INDEX\", \"INDEXED\",\r\n            \"INITIALLY\", \"INNER\", \"INSERT\", \"INSTEAD\", \"INTERSECT\", \"INTO\", \"IS\", \"ISNULL\", \"JOIN\", \"KEY\", \"LEFT\", \"LIKE\", \"LIMIT\", \"MATCH\",\r\n            \"NATURAL\", \"NO\", \"NOT\", \"NOTNULL\", \"NULL\", \"OF\", \"OFFSET\", \"ON\", \"OR\", \"ORDER\", \"OUTER\", \"PLAN\", \"PRAGMA\", \"PRIMARY\", \"QUERY\",\r\n            \"RAISE\", \"RECURSIVE\", \"REFERENCES\", \"REGEXP\", \"REINDEX\", \"RELEASE\", \"RENAME\", \"REPLACE\", \"RESTRICT\", \"RIGHT\", \"ROLLBACK\", \"ROW\",\r\n            \"SAVEPOINT\", \"SELECT\", \"SET\", \"TABLE\", \"TEMP\", \"TEMPORARY\", \"THEN\", \"TO\", \"TRANSACTION\", \"TRIGGER\", \"UNION\", \"UNIQUE\", \"UPDATE\",\r\n            \"USING\", \"VACUUM\", \"VALUES\", \"VIEW\", \"VIRTUAL\", \"WHEN\", \"WHERE\", \"WITH\", \"WITHOUT\", \"ENGINE\", \"CHARSET\"\r\n        ],\r\n        operators: [\r\n            \"AND\", \"BETWEEN\", \"IN\", \"LIKE\", \"NOT\", \"OR\", \"IS\", \"NULL\", \"INTERSECT\", \"UNION\", \"INNER\", \"JOIN\", \"LEFT\", \"OUTER\", \"RIGHT\"\r\n        ],\r\n        builtinFunctions: [\r\n            \"abs\", \"changes\", \"char\", \"coalesce\", \"count\", \"glob\", \"hex\", \"ifnull\",\r\n            \"iif\", \"instr\", \"last_insert_rowid\", \"length\", \"like\", \"likelihood\", \"likely\",\r\n            \"lower\", \"ltrim\", \"max\", \"min\", \"nullif\", \"quote\", \"random\", \"randomblob\",\r\n            \"replace\", \"round\", \"rtrim\", \"sign\", \"soundex\", \"sqlite_version\", \"substr\", \"substring\",\r\n            \"total_changes\", \"trim\", \"typeof\", \"unicode\", \"unlikely\", \"upper\", \"zeroblob\"\r\n        ],\r\n        builtinVariables: [\r\n            // NOT SUPPORTED\r\n        ],\r\n        pseudoColumns: [\r\n            // NOT SUPPORTED\r\n        ],\r\n        tokenizer: {\r\n            root: [\r\n                { include: '@comments' },\r\n                { include: '@whitespace' },\r\n                { include: '@pseudoColumns' },\r\n                { include: '@numbers' },\r\n                { include: '@strings' },\r\n                { include: '@complexIdentifiers' },\r\n                { include: '@scopes' },\r\n                [/[;,.]/, 'delimiter'],\r\n                [/[()]/, '@brackets'],\r\n                [/[a-z_$äöü][\\w$äöüßÄÖÜ]*(?=\\()/, {\r\n                    cases: {\r\n                        '@builtinFunctions': 'functions',\r\n                        '@keywords': 'keyword',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[\\w@#$]+/, {\r\n                    cases: {\r\n                        '@keywords': 'keyword',\r\n                        '@operators': 'operator',\r\n                        '@builtinVariables': 'predefined',\r\n                        // '@builtinFunctions': 'functions',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[<>=!%&+\\-*/|~^]/, 'operator'],\r\n            ],\r\n            whitespace: [\r\n                [/\\s+/, 'white']\r\n            ],\r\n            comments: [\r\n                [/--+.*/, 'comment'],\r\n                [/\\/\\*/, { token: 'comment.quote', next: '@comment' }]\r\n            ],\r\n            comment: [\r\n                [/[^*/]+/, 'comment'],\r\n                // Not supporting nested comments, as nested comments seem to not be standard?\r\n                // i.e. http://stackoverflow.com/questions/728172/are-there-multiline-comment-delimiters-in-sql-that-are-vendor-agnostic\r\n                // [/\\/\\*/, { token: 'comment.quote', next: '@push' }],    // nested comment not allowed :-(\r\n                [/\\*\\//, { token: 'comment.quote', next: '@pop' }],\r\n                [/./, 'comment']\r\n            ],\r\n            pseudoColumns: [\r\n                [/[$][A-Za-z_][\\w@#$]*/, {\r\n                    cases: {\r\n                        '@pseudoColumns': 'predefined',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n            ],\r\n            numbers: [\r\n                [/0[xX][0-9a-fA-F]*/, 'number'],\r\n                [/[$][+-]*\\d*(\\.\\d*)?/, 'number'],\r\n                [/((\\d+(\\.\\d*)?)|(\\.\\d+))([eE][\\-+]?\\d+)?/, 'number']\r\n            ],\r\n            strings: [\r\n                [/'/, { token: 'string', next: '@string' }],\r\n            ],\r\n            string: [\r\n                [/[^\\\\']+/, 'string'],\r\n                [/\\\\./, 'string.escape.invalid'],\r\n                [/''/, 'string'],\r\n                [/'/, { token: 'string', next: '@pop' }]\r\n            ],\r\n            complexIdentifiers: [\r\n                [/\"/, { token: 'identifier.quote', next: '@quotedIdentifier' }]\r\n            ],\r\n            quotedIdentifier: [\r\n                [/[^\"]+/, 'identifier'],\r\n                [/\"\"/, 'identifier'],\r\n                [/\"/, { token: 'identifier.quote', next: '@pop' }]\r\n            ],\r\n            scopes: [\r\n                // NOT SUPPORTED\r\n            ]\r\n        }\r\n\r\n\r\n\r\n    };\r\n\r\n    //@ts-ignore\r\n    monaco.languages.setLanguageConfiguration('vscSQL', conf);\r\n    //@ts-ignore\r\n    monaco.languages.setMonarchTokensProvider('vscSQL', language);\r\n\r\n\r\n\r\n}","import { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport type DatabaseDumpType = \"binaryUncompressed\" | \"binaryCompressed\" | \"other\";\r\n\r\nexport type DatabaseDirectoryEntry = {\r\n    name: string,\r\n    description: string,\r\n    filename: string\r\n}\r\n\r\nexport type QueryResult = {\r\n    columns: string[],\r\n    values: any[][],\r\n    buffer?: Uint8Array\r\n}\r\n\r\nexport type QuerySuccessCallback = (results: QueryResult[]) => void;\r\nexport type QueryErrorCallback = (error: string) => void;\r\n\r\nexport type ColumnStructure = {\r\n    name: string;\r\n    table: TableStructure;\r\n\r\n    typeLengths?: number[]; // for varchar(5), ...\r\n    completeTypeSQL: string;\r\n\r\n    references?: ColumnStructure;\r\n    referencesRawData?: any[];\r\n    isPrimaryKey: boolean;\r\n    isAutoIncrement: boolean;\r\n\r\n    notNull: boolean;\r\n    defaultValue: string;\r\n\r\n    dumpValueFunction?: (any) => string\r\n}\r\n\r\nexport type TableStructure = {\r\n    name: string;\r\n    size: number;\r\n    columns: ColumnStructure[];\r\n    completeSQL: string;\r\n}\r\n\r\nexport type DatabaseStructure = {\r\n    tables: TableStructure[]\r\n}\r\n\r\n\r\nexport class DatabaseTool {\r\n\r\n    databaseDirectoryEntries: DatabaseDirectoryEntry[] = null;\r\n\r\n    worker: Worker;\r\n\r\n    queryId: number = 0;\r\n\r\n    querySuccessCallbacksMap: Map<number, QuerySuccessCallback> = new Map();\r\n    queryErrorCallbackMap: Map<number, QueryErrorCallback> = new Map();\r\n\r\n    databaseStructure: DatabaseStructure;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    initializeWorker(template: Uint8Array, queries: string[], callbackAfterInitializing?: (errors: string[]) => void,\r\n        callbackAfterRetrievingStructure?: () => void) {\r\n        \r\n        this.main.getWaitOverlay().show('Bitte warten, die Datenbank wird initialisiert...');\r\n        \r\n            if (this.worker != null) {\r\n            this.worker.terminate();\r\n        }\r\n\r\n        let t = performance.now();\r\n\r\n        // console.log(\"Starting worker...\");\r\n\r\n        let url: string = \"js/sqljs-worker/sqljsWorker.js\"\r\n        if(this.main.isEmbedded()){\r\n            //@ts-ignore\r\n            url = window.javaOnlineDir + url;\r\n        }\r\n\r\n        this.worker = new Worker(url);\r\n        // this.worker = new Worker(\"lib/sql.js/worker.sql-wasm.js\");\r\n        let that = this;\r\n\r\n        let errors: string[] = [];\r\n\r\n        this.worker.onmessage = () => {\r\n            // console.log(\"Database opened (\" + (performance.now() - t)/1000 + \" s)\");\r\n            that.worker.onmessage = event => {\r\n\r\n                // console.log(event.data);\r\n\r\n                let id = event.data.id;\r\n                if (event.data.error == null) {\r\n                    let querySuccessCallback = that.querySuccessCallbacksMap.get(id);\r\n                    if (querySuccessCallback != null) {\r\n                        querySuccessCallback(event.data.results);\r\n                    }\r\n                } else {\r\n                    let queryErrorCallback = that.queryErrorCallbackMap.get(id);\r\n                    if (queryErrorCallback != null) {\r\n                        queryErrorCallback(event.data.error);\r\n                    }\r\n                }\r\n\r\n                // if(event.data.buffer){\r\n                //     console.log(event.data.buffer);\r\n                // }\r\n\r\n\r\n                this.queryErrorCallbackMap.delete(id);\r\n                this.querySuccessCallbacksMap.delete(id);\r\n\r\n            };\r\n\r\n            if(queries == null) queries = [];\r\n            queries = queries.slice();\r\n            let queryCount = queries.length;\r\n\r\n            let execQuery = () => {\r\n                if (queries.length > 0) {\r\n                    this.main.getWaitOverlay().setProgress(`${Math.round((1-queries.length/queryCount)*100) + \" %\"}`)\r\n                    let query = queries.shift();\r\n                    that.executeQuery(query, (result) => {\r\n                        execQuery();\r\n                    }, (error) => {\r\n                        errors.push(\"Error while setting up database: \" + error + \", query: \" + query);\r\n                        console.log({\"error\": \"Error while setting up database: \" + error, \"query\": query});\r\n                        console.log()\r\n                        execQuery();\r\n                    })\r\n                } else {\r\n                    if (callbackAfterInitializing != null) callbackAfterInitializing(errors);\r\n                    that.retrieveDatabaseStructure(() => {\r\n                        // console.log(\"Database structure retrieved (\" + (performance.now() - t)/1000 + \" s)\");\r\n                        if (callbackAfterRetrievingStructure) callbackAfterRetrievingStructure();\r\n                        this.main.getWaitOverlay().hide();\r\n\r\n                    });\r\n                }\r\n            }\r\n\r\n            execQuery();\r\n\r\n            // that.executeQuery(sql, (result) => {\r\n            //     // console.log(\"Template written (\" + (performance.now() - t)/1000 + \" s)\");\r\n\r\n            //     if (callbackAfterInitializing != null) callbackAfterInitializing();\r\n            //     that.retrieveDatabaseStructure(() => {\r\n            //         // console.log(\"Database structure retrieved (\" + (performance.now() - t)/1000 + \" s)\");\r\n            //         if (callbackAfterRetrievingStructure) callbackAfterRetrievingStructure();\r\n            //         jQuery('#bitteWarten').css('display', 'none');\r\n\r\n            //     });\r\n            //     // that.executeQuery(\"select * from test\", (results: QueryResult[]) => {console.log(results)}, (error) => {console.log(\"Error:\" + error)});\r\n            // },\r\n            //     (error) => {\r\n            //         console.log(\"Error while setting up database: \" + error);\r\n            //     });\r\n\r\n            // that.worker.postMessage({\r\n            //     action: \"export\"\r\n            // })\r\n\r\n        };\r\n\r\n        this.worker.onerror = (e) => {\r\n            errors.push(\"Worker error: \" + e);\r\n            console.log(\"Worker error: \" + e);\r\n        }\r\n\r\n        this.worker.postMessage({\r\n            id: that.queryId++,\r\n            action: \"open\",\r\n            buffer: template, /*Optional. An ArrayBuffer representing an SQLite Database file*/\r\n        });\r\n\r\n    }\r\n\r\n    executeQuery(query: string, successCallback: QuerySuccessCallback, errorCallback: QueryErrorCallback) {\r\n\r\n        let id = this.queryId++;\r\n\r\n        this.querySuccessCallbacksMap.set(id, successCallback);\r\n        this.queryErrorCallbackMap.set(id, errorCallback);\r\n\r\n        this.worker.postMessage({\r\n            id: id,\r\n            action: \"exec\",\r\n            sql: query,\r\n            params: {}\r\n        });\r\n\r\n    }\r\n\r\n    export(successCallback: (buffer: Uint8Array) => void, errorCallback: QueryErrorCallback) {\r\n\r\n        let id = this.queryId++;\r\n\r\n        this.querySuccessCallbacksMap.set(id, (results) => { successCallback(results[0].buffer)  });\r\n        this.queryErrorCallbackMap.set(id, errorCallback);\r\n\r\n        this.worker.postMessage({\r\n            id: id,\r\n            action: \"export\",\r\n            params: {}\r\n        });\r\n\r\n    }\r\n\r\n    \r\n\r\n    getDirectoryEntries(callback: (entries: DatabaseDirectoryEntry[]) => void) {\r\n        if (this.databaseDirectoryEntries != null) {\r\n            callback(this.databaseDirectoryEntries);\r\n        } else {\r\n            jQuery.getJSON(\"assets/databases/directory.json\", function (entries: DatabaseDirectoryEntry[]) {\r\n                callback(entries);\r\n            });\r\n        }\r\n    }\r\n\r\n    retrieveDatabaseStructure(callback: (dbStructure: DatabaseStructure) => void) {\r\n\r\n        /*\r\n            @see https://stackoverflow.com/questions/6460671/sqlite-schema-information-metadata\r\n        */\r\n        let sql = `SELECT name, sql FROM sqlite_master WHERE type='table';`\r\n        let that = this;\r\n\r\n        this.executeQuery(sql, (result) => {\r\n            let sql1 = \"\";\r\n            result[0]?.values?.forEach(value => sql1 += `PRAGMA table_info(${value[0]});\\nPRAGMA foreign_key_list(${value[0]});\\nselect count(*) from ${value[0]};\\n\\n`)\r\n\r\n            if (sql1 != \"\") {\r\n                this.executeQuery(sql1, (result1) => {\r\n                    // console.log(\"DB structure: \");\r\n                    // console.log(result1);\r\n\r\n                    that.databaseStructure = that.parseDatabaseStructure(result, result1)\r\n\r\n                    callback(that.databaseStructure);\r\n\r\n                }, (error) => { console.log(error)});\r\n            } else {\r\n                that.databaseStructure = { tables: [] };\r\n                callback(that.databaseStructure);\r\n            }\r\n\r\n        }, (error) => { console.log(error) });\r\n\r\n\r\n    }\r\n\r\n    parseDatabaseStructure(tables: QueryResult[], columns: QueryResult[]): DatabaseStructure {\r\n        this.databaseStructure = {\r\n            tables: []\r\n        };\r\n\r\n        let tableNameToStructureMap: Map<string, TableStructure> = new Map();\r\n\r\n        let index = 0;\r\n        for (let i = 0; i < tables[0].values.length; i++) {\r\n            let tableName = tables[0].values[i][0];\r\n            let tableSQL = tables[0].values[i][1];\r\n\r\n            let tableStructure: TableStructure = {\r\n                name: tableName,\r\n                size: 0,\r\n                completeSQL: tableSQL,\r\n                columns: []\r\n            }\r\n\r\n            tableNameToStructureMap.set(tableName, tableStructure);\r\n\r\n            this.databaseStructure.tables.push(tableStructure);\r\n\r\n            let columnArray = columns[index].values;\r\n            let foreignKeyList: any[][] = null;\r\n            if (columns.length > index + 1 && columns[index + 1].columns[0] == \"id\") {\r\n                foreignKeyList = columns[index + 1].values;\r\n                index++;\r\n            }\r\n            index++;\r\n            let size: number = columns[index].values[0][0];\r\n            index++;\r\n\r\n            tableStructure.size = size;\r\n\r\n            columnArray.forEach(columnArray1 => {\r\n                let cid: number = columnArray1[0];\r\n                let name: string = columnArray1[1];\r\n                let type: string = columnArray1[2];\r\n                let notNull: boolean = columnArray1[3] == 1;\r\n                let dflt_value: string = columnArray1[4];\r\n                let isPrimaryKey: boolean = columnArray1[5] != 0;\r\n\r\n                let columnStructure: ColumnStructure = {\r\n                    name: name,\r\n                    isPrimaryKey: isPrimaryKey,\r\n                    isAutoIncrement: isPrimaryKey && tableSQL.toLowerCase().indexOf(\"autoincrement\") >= 0,\r\n                    completeTypeSQL: type,\r\n                    table: tableStructure,\r\n                    typeLengths: [],\r\n                    defaultValue: dflt_value,\r\n                    notNull: notNull\r\n                }\r\n                /*\r\n                    columns: (8) [\"id\", \"seq\", \"table\", \"from\", \"to\", \"on_update\", \"on_delete\", \"match\"]\r\n                    values: Array(1)\r\n                    0: (8) [0, 0, \"land\", \"LNR\", \"lnr\", \"NO ACTION\", \"NO ACTION\", \"NONE\"]\r\n                */\r\n\r\n                if (foreignKeyList != null) {\r\n                    let fkInfo: any[] = foreignKeyList.find(foreignKeyInfo => foreignKeyInfo[4].toLocaleLowerCase() == name.toLocaleLowerCase());\r\n                    if (fkInfo != null) {\r\n                        columnStructure.referencesRawData = fkInfo;\r\n                    }\r\n                }\r\n\r\n                tableStructure.columns.push(columnStructure);\r\n\r\n            });\r\n\r\n        }\r\n\r\n        for (let ts of this.databaseStructure.tables) {\r\n            for (let cs of ts.columns) {\r\n                if (cs.referencesRawData != null) {\r\n                    let table = tableNameToStructureMap.get(cs.referencesRawData[2]);\r\n                    let column = table.columns.find(c => c.name.toLocaleLowerCase() == cs.referencesRawData[3].toLocaleLowerCase());\r\n                    cs.references = column;\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log(this.databaseStructure);\r\n\r\n        return this.databaseStructure;\r\n\r\n    }\r\n\r\n    static getDumpType(dump: Uint8Array): DatabaseDumpType {\r\n\r\n        let sqliteMagicBytes: number[] = [0x53, 0x51, 0x4c, 0x69, 0x74, 0x65];\r\n        let zlibMagicByte: number = 0x78;\r\n\r\n        let found: boolean = true;\r\n        for (let i = 0; i < sqliteMagicBytes.length; i++) {\r\n            if (sqliteMagicBytes[i] != dump[i]) {\r\n                found = false;\r\n                break;\r\n            }\r\n        }\r\n        if (found) return \"binaryUncompressed\";\r\n\r\n        if (dump[0] == zlibMagicByte) return \"binaryCompressed\";\r\n\r\n        return \"other\";\r\n\r\n    }\r\n\r\n\r\n}","import { LoadableDatabase } from \"./DatabaseLoader.js\";\r\nimport { DatabaseTool } from \"./DatabaseTools.js\";\r\nimport { downloadFile } from \"./HtmlTools.js\";\r\n\r\nexport class DatabaseImportExport {\r\n\r\n    loadFromFile(file: globalThis.File, callback: (db: LoadableDatabase) => void){\r\n        let that = this;\r\n        if (file == null) return;\r\n        var reader = new FileReader();\r\n        reader.onload = (event) => {\r\n            let ab: ArrayBuffer = <ArrayBuffer>event.target.result;\r\n            let db: Uint8Array = new Uint8Array(ab);\r\n\r\n            //@ts-ignore\r\n            if(DatabaseTool.getDumpType(db) == \"binaryCompressed\") db = pako.inflate(db);\r\n            callback({binDump: db});\r\n\r\n        };\r\n        reader.readAsArrayBuffer(file);\r\n    }\r\n\r\n    saveToFile(dbTool: DatabaseTool){\r\n        dbTool.export((db) => {\r\n            //@ts-ignore\r\n            db = pako.deflate(db);\r\n            let filename: string = prompt(\"Bitte geben Sie den Dateinamen ein\", \"datenbank.dbDump\");\r\n            if (filename == null) {\r\n                alert(\"Der Dateiname ist leer, daher wird nichts gespeichert.\");\r\n                return;\r\n            }\r\n            if (!filename.endsWith(\".dbDump\")) filename = filename + \".dbDump\";\r\n            downloadFile(new Blob([db.buffer]), filename, true);\r\n        }, () => {});\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { PasswordChanger } from \"./UserMenu.js\";\r\nimport { DatabaseSettingsDialog } from \"./DatabaseSettingsDialog.js\";\r\nimport { DatabaseImportExport } from \"../../tools/DatabaseImportExport.js\";\r\n\r\nexport type Action = (identifier: string) => void;\r\n\r\ntype Menu = {\r\n    items: MenuItem[];\r\n    $element?: JQuery<HTMLElement>;\r\n    level?: number;\r\n}\r\n\r\ntype MenuItem = {\r\n    identifier: string;\r\n    $element?: JQuery<HTMLElement>;\r\n    action?: Action;\r\n    link?: string;\r\n    subMenu?: Menu;\r\n}\r\n\r\nexport class MainMenu {\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n\r\n    currentSubmenu: { [level: number]: JQuery<HTMLElement> } = {};\r\n    openSubmenusOnMousemove: boolean = false;\r\n\r\n    initGUI(user: UserData) {\r\n\r\n        let that = this;\r\n        let editor = this.main.getMonacoEditor();\r\n\r\n        let mainMenu: Menu = {\r\n            items: [\r\n                {\r\n                    identifier: \"Datei\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Speichern und Beenden\",\r\n                                action: () => { jQuery('#buttonLogout').trigger(\"click\"); }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Bearbeiten\", subMenu:\r\n                    {\r\n                        items: [\r\n                            { identifier: \"Rückgängig (Strg + z)\", action: () => { editor.trigger(\".\", \"undo\", {}); } },\r\n                            { identifier: \"Wiederholen (Strg + y)\", action: () => { editor.trigger(\".\", \"redo\", {}); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Kopieren (Strg + c)\", action: () => { editor.getAction(\"editor.action.clipboardCopyAction\").run(); } },\r\n                            { identifier: \"Ausschneiden (Strg + x)\", action: () => { editor.getAction(\"editor.action.clipboardCutAction\").run(); } },\r\n                            { identifier: \"Nach oben kopieren (Alt + Shift + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.copyLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten kopieren (Alt + Shift + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.copyLinesDownAction\").run(); } },\r\n                            { identifier: \"Nach oben verschieben (Alt + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.moveLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten verschieben (Alt + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.moveLinesDownAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Suchen... (Strg + f)\", action: () => { editor.getAction(\"actions.find\").run(); } },\r\n                            { identifier: \"Ersetzen... (Strg + h)\", action: () => { editor.getAction(\"editor.action.startFindReplaceAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Aus-/Einkommentieren (Strg + #)\", action: () => { editor.getAction(\"editor.action.commentLine\").run(); } },\r\n                            { identifier: \"Dokument formatieren (Alt + Shift + f)\", action: () => { editor.getAction(\"editor.action.formatDocument\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Finde zugehörige Klammer (Strg + k)\", action: () => { editor.getAction(\"editor.action.jumpToBracket\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Alles zusammenfalten\", action: () => { editor.getAction(\"editor.foldAll\").run(); } },\r\n                            { identifier: \"Alles auffalten\", action: () => { editor.getAction(\"editor.unfoldAll\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Vorschlag auslösen (Strg + Leertaste)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.triggerSuggest\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n                            { identifier: \"Parameterhilfe (Strg + Shift + Leertaste)\", action: () => { editor.getAction(\"editor.action.triggerParameterHints\").run(); } },\r\n                            {\r\n                                identifier: \"Gehe zur Definition (Strg + Click)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.revealDefinition\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Ansicht\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Theme\",\r\n                                subMenu: {\r\n                                    items: [\r\n                                        {\r\n                                            identifier: \"Dark\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"dark\");\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            identifier: \"Light\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"light\");\r\n                                            }\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Hoher Kontrast im Editor ein/aus\", action: () => { editor.getAction(\"editor.action.toggleHighContrast\").run(); } },\r\n\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Zoom out (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(-4); } },\r\n                            { identifier: \"Zoom normal\", action: () => { this.main.editor.setFontSize(14); }},\r\n                            { identifier: \"Zoom in (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(4); } },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Datenbank\", subMenu:\r\n                    {\r\n                        items: [\r\n                            { identifier: \"Einstellungen...\", action: () => { new DatabaseSettingsDialog(this.main, this.main.currentWorkspace) } },\r\n                            { identifier: \"Export als Binärdump (.dbDump-File)...\", action: () => {  new DatabaseImportExport().saveToFile(this.main.getDatabaseTool());\r\n                            } },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n\r\n            ]\r\n        };\r\n\r\n        jQuery('#mainmenu').empty();\r\n        this.initMenu(mainMenu, 0);\r\n    }\r\n\r\n    switchTheme(theme: string) {\r\n        this.main.viewModeController.setTheme(theme);\r\n    }\r\n\r\n    initMenu(menu: Menu, level?: number) {\r\n\r\n        menu.level = level;\r\n\r\n        if (level == 0) {\r\n            menu.$element = jQuery('#mainmenu');\r\n        } else {\r\n            menu.$element = jQuery('<div class=\"jo_submenu\"></div>');\r\n            jQuery('body').append(menu.$element);\r\n        }\r\n\r\n        menu.$element.data('model', menu);\r\n        for (let mi of menu.items) {\r\n            if (mi.identifier == '-') {\r\n                mi.$element = jQuery('<div class=\"jo_menuitemdivider\"></div>');\r\n            } else {\r\n                mi.$element = jQuery('<div>' + mi.identifier + '</div>');\r\n                if (mi.link != null) {\r\n                    let $link = jQuery('<a href=\"' + mi.link + '\" target=\"_blank\" class=\"jo_menulink\"></a>');\r\n                    $link.on(\"mousedown\", (event) => {\r\n                        event.stopPropagation();\r\n                        setTimeout(() => {\r\n                            menu.$element.hide();\r\n                        }, 500);\r\n                    })\r\n                    $link.append(mi.$element);\r\n                    mi.$element = $link;\r\n                }\r\n                if (mi.subMenu != null) {\r\n                    this.initMenu(mi.subMenu, level + 1);\r\n                }\r\n                this.initMenuitemCallbacks(menu, mi);\r\n                if (level == 0) {\r\n                    mi.$element.addClass('jo_mainmenuitem');\r\n                }\r\n            }\r\n            menu.$element.append(mi.$element);\r\n            mi.$element.data('model', mi);\r\n        }\r\n\r\n        let that = this;\r\n        jQuery(document).on('mousedown', () => {\r\n            for (let i = 0; i < 5; i++) {\r\n                if (that.currentSubmenu[i] != null) {\r\n                    that.currentSubmenu[i].hide();\r\n                    that.currentSubmenu[i] = null;\r\n                }\r\n            }\r\n            that.openSubmenusOnMousemove = false;\r\n        });\r\n\r\n    }\r\n\r\n    initMenuitemCallbacks(menu: Menu, mi: MenuItem) {\r\n        let that = this;\r\n\r\n        if (mi.action != null) {\r\n            mi.$element.on('mousedown', (ev) => { mi.action(mi.identifier); });\r\n        }\r\n\r\n        if (mi.subMenu != null) {\r\n            mi.$element.on('mousedown', (ev) => {\r\n                that.opensubmenu(mi);\r\n                that.openSubmenusOnMousemove = true;\r\n                ev.stopPropagation();\r\n            });\r\n\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.openSubmenusOnMousemove) {\r\n                    that.opensubmenu(mi);\r\n                } else {\r\n                    if (that.currentSubmenu[menu.level + 1] != null) {\r\n                        that.currentSubmenu[menu.level + 1].hide();\r\n                        that.currentSubmenu[menu.level + 1] = null;\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.currentSubmenu[menu.level + 1] != null) {\r\n                    that.currentSubmenu[menu.level + 1].hide();\r\n                    that.currentSubmenu[menu.level + 1] = null;\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    opensubmenu(mi: MenuItem) {\r\n\r\n        let subMenu = mi.subMenu;\r\n\r\n        let left: number;\r\n        let top: number;\r\n        if (subMenu.level == 1) {\r\n            left = mi.$element.position().left;\r\n            top = 30;\r\n        } else {\r\n            left = mi.$element.offset().left + mi.$element.width();\r\n            top = mi.$element.offset().top;\r\n        }\r\n\r\n        subMenu.$element.css({\r\n            top: \"\" + top + \"px\",\r\n            left: \"\" + left + \"px\"\r\n        })\r\n\r\n        if (this.currentSubmenu[subMenu.level] != null) {\r\n            this.currentSubmenu[subMenu.level].hide();\r\n        }\r\n\r\n        subMenu.$element.show();\r\n        this.currentSubmenu[subMenu.level] = subMenu.$element;\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { openContextMenu, makeEditable, ContextMenuItem, animateToTransparent, jo_mouseDetected } from \"../../tools/HtmlTools.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { escapeHtml } from \"../../tools/StringTools.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type AccordionElement = {\r\n    name: string;\r\n    sortName?: string;      // if sortName == null, then name will be used when sorting\r\n    externalElement?: any;\r\n    iconClass?: string;\r\n    $htmlFirstLine?: JQuery<HTMLElement>;\r\n    $htmlSecondLine?: JQuery<HTMLElement>;\r\n\r\n    isFolder: boolean;\r\n    path: string[];\r\n}\r\n\r\nexport type AccordionContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: (panel: AccordionElement) => void;\r\n    subMenu?: AccordionContextMenuItem[]\r\n}\r\n\r\nexport class AccordionPanel {\r\n\r\n    elements: AccordionElement[] = [];\r\n\r\n    $captionElement: JQuery<HTMLElement>;\r\n    $buttonNew: JQuery<HTMLElement>;\r\n    $listElement: JQuery<HTMLElement>;\r\n\r\n    private fixed: boolean;\r\n\r\n    dontSortElements: boolean = false;\r\n\r\n    static currentlyDraggedElement: AccordionElement;\r\n    static currentlyDraggedElementKind: string;\r\n\r\n    newElementCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    newFolderCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    renameCallback: (externalElement: any, newName: string) => string;\r\n    deleteCallback: (externalElement: any, callbackIfSuccessful: () => void) => void;\r\n    selectCallback: (externalElement: any) => void;\r\n    addElementActionCallback: (accordionElement: AccordionElement) => JQuery<HTMLElement>;\r\n    contextMenuProvider: (externalElement: any) => AccordionContextMenuItem[];\r\n    moveCallback: (ae: AccordionElement | AccordionElement[]) => void;\r\n    dropElementCallback: (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => void;\r\n\r\n    $newFolderAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private accordion: Accordion, private caption: string, private flexWeight: string,\r\n        private newButtonClass: string, private buttonNewTitle: string,\r\n        private defaultIconClass: string, private withDeleteButton: boolean, private withFolders: boolean,\r\n        private kind: \"workspace\" | \"file\" | \"class\" | \"student\", private enableDrag: boolean, private acceptDropKinds: string[]) {\r\n\r\n        accordion.addPanel(this);\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        if (withFolders) {\r\n            let that = this;\r\n            this.$newFolderAction = jQuery('<div class=\"img_add-folder-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Neuen Ordner auf oberster Ebene anlegen\">');\r\n            this.$newFolderAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                let pathArray: string[] = [];\r\n\r\n                this.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                    this.newFolderCallback(newElement, () => {\r\n                        this.sortElements();\r\n                        newElement.$htmlFirstLine[0].scrollIntoView();\r\n                        animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                    });\r\n                });\r\n\r\n            })\r\n\r\n            this.addAction(this.$newFolderAction);\r\n\r\n\r\n            let $collapseAllAction = jQuery('<div class=\"img_collapse-all-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Alle Ordner zusammenfalten\">');\r\n            $collapseAllAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                that.collapseAll();\r\n\r\n            })\r\n\r\n            this.addAction($collapseAllAction);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    collapseAll() {\r\n        for (let element of this.elements) {\r\n            if (element.isFolder) {\r\n                if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                    element.$htmlFirstLine.removeClass('jo_expanded');\r\n                    element.$htmlFirstLine.addClass('jo_collapsed');\r\n                }\r\n            }\r\n            if (element.path.length > 0) {\r\n                element.$htmlFirstLine.slideUp(200);\r\n            }\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        this.$captionElement.remove();\r\n        this.$listElement.remove();\r\n    }\r\n\r\n    setFixed(fixed: boolean) {\r\n        this.fixed = fixed;\r\n        if (this.fixed) {\r\n            this.grow();\r\n            this.$captionElement.addClass('jo_fixed');\r\n        } else {\r\n            this.$captionElement.removeClass('jo_fixed');\r\n        }\r\n\r\n    }\r\n\r\n    //     <div class=\"jo_leftpanelcaption expanded\" id=\"workspace\" data-panel=\"filelistouter\">\r\n    //     <span>WORKSPACE</span>\r\n    //     <div class=\"jo_actions\"><img id=\"buttonNewFile\" title=\"Neue Datei hinzufügen\"\r\n    //             src=\"assets/projectexplorer/add-file-dark.svg\"></div>\r\n    // </div>\r\n    // <div id=\"filelistouter\" class=\"jo_projectexplorerdiv scrollable\" data-grow=\"3\"\r\n    //     style=\"flex-grow: 3\">\r\n    //     <div id=\"filelist\"></div>\r\n    // </div>\r\n\r\n\r\n    enableNewButton(enabled: boolean) {\r\n        if (this.$buttonNew != null) {\r\n            if (enabled) {\r\n                this.$buttonNew.show();\r\n            } else {\r\n                this.$buttonNew.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    getCurrentlySelectedPath(): string[] {\r\n        let pathArray: string[] = [];\r\n        let selectedElement = this.getSelectedElement();\r\n        if (selectedElement != null) {\r\n            pathArray = selectedElement.path.slice(0);\r\n            if (selectedElement.isFolder) pathArray.push(selectedElement.name);\r\n        }\r\n        return pathArray;\r\n    }\r\n\r\n    compareWithPath(name1: string, path1: string[], isFolder1: boolean, name2: string, path2: string[], isFolder2: boolean) {\r\n\r\n        path1 = path1.slice();\r\n        path1.push(name1);\r\n        name1 = \"\";\r\n\r\n        path2 = path2.slice();\r\n        path2.push(name2);\r\n        name2 = \"\";\r\n\r\n        let i = 0;\r\n        while (i < path1.length && i < path2.length) {\r\n            let cmp = path1[i].localeCompare(path2[i]);\r\n            if (cmp != 0) return cmp;\r\n            i++;\r\n        }\r\n\r\n        if (path1.length < path2.length) return -1;\r\n        if (path1.length > path2.length) return 1;\r\n\r\n        return name1.localeCompare(name2);\r\n\r\n\r\n        // let nameWithPath1 = path1.join(\"/\");\r\n        // if (nameWithPath1 != \"\" && name1 != \"\") nameWithPath1 += \"/\";\r\n        // nameWithPath1 += name1;\r\n\r\n        // let nameWithPath2 = path2.join(\"/\");\r\n        // if (nameWithPath2 != \"\" && name2 != \"\") nameWithPath2 += \"/\";\r\n        // nameWithPath2 += name2;\r\n\r\n        // return nameWithPath1.localeCompare(nameWithPath2);\r\n    }\r\n\r\n\r\n    getElementIndex(name: string, path: string[], isFolder: boolean): number {\r\n\r\n        for (let i = 0; i < this.elements.length; i++) {\r\n            let element = this.elements[i];\r\n\r\n            if (this.compareWithPath(name, path, isFolder, element.name, element.path, element.isFolder) < 0) return i;\r\n\r\n        }\r\n        return this.elements.length;\r\n    }\r\n\r\n    insertElement(ae: AccordionElement) {\r\n        let insertIndex = this.getElementIndex(ae.name, ae.path, ae.isFolder);\r\n        // if (ae.path.length == 0) insertIndex = this.elements.length;\r\n        this.elements.splice(insertIndex, 0, ae);\r\n\r\n        let $elements = this.$listElement.find('.jo_file');\r\n\r\n        if (insertIndex == 0) {\r\n            this.$listElement.prepend(ae.$htmlFirstLine);\r\n        } else if(insertIndex == $elements.length){\r\n            this.$listElement.append(ae.$htmlFirstLine);\r\n        } else {\r\n            let elementAtIndex = $elements.get(insertIndex);\r\n            jQuery(elementAtIndex).before(ae.$htmlFirstLine);\r\n        }\r\n\r\n    }\r\n\r\n    addFolder(name: string, path: string[], callback: (newPanel: AccordionElement) => void) {\r\n\r\n        let ae: AccordionElement = {\r\n            name: name,\r\n            isFolder: true,\r\n            path: path\r\n        }\r\n\r\n        let $element = this.renderElement(ae, true);\r\n\r\n        this.insertElement(ae);\r\n\r\n        $element[0].scrollIntoView();\r\n\r\n        this.renameElement(ae, () => {\r\n\r\n            callback(ae);\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    renderOuterHtmlElements($accordionDiv: JQuery<HTMLElement>) {\r\n        let that = this;\r\n\r\n        this.$captionElement = jQuery(`<div class=\"jo_leftpanelcaption jo_expanded\">\r\n        <div class=\"jo_captiontext\">` + this.caption + `</div><div class=\"jo_actions\"></div></div>`);\r\n\r\n        if (this.newButtonClass != null) {\r\n            this.$buttonNew = jQuery('<div class=\"jo_button jo_active ' + this.newButtonClass + '\" title=\"' + this.buttonNewTitle + '\">');\r\n            this.$captionElement.find('.jo_actions').append(this.$buttonNew);\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n            this.$buttonNew.on(mousePointer + 'down', (ev) => {\r\n\r\n                Helper.close();\r\n                ev.stopPropagation();\r\n\r\n                let path = that.getCurrentlySelectedPath();\r\n\r\n                let ae: AccordionElement = {\r\n                    name: \"Neu\",\r\n                    isFolder: false,\r\n                    path: path\r\n                }\r\n\r\n                let insertIndex = this.getElementIndex(\"\", path, false);\r\n                this.elements.splice(insertIndex, 0, ae);\r\n                let $element = this.renderElement(ae, true);\r\n\r\n\r\n                if (insertIndex == 0) {\r\n                    this.$listElement.prepend($element);\r\n                } else {\r\n                    let elementAtIndex = this.$listElement.find('.jo_file').get(insertIndex - 1);\r\n                    jQuery(elementAtIndex).after($element);\r\n                }\r\n\r\n                $element[0].scrollIntoView();\r\n\r\n                that.renameElement(ae, () => {\r\n\r\n                    that.newElementCallback(ae, (externalElement: any) => {\r\n\r\n                        ae.externalElement = externalElement;\r\n\r\n                        if (ae.$htmlSecondLine != null) {\r\n                            ae.$htmlSecondLine.insertAfter($element);\r\n                        }\r\n\r\n                        if (that.selectCallback != null) that.select(ae.externalElement);\r\n\r\n                    });\r\n\r\n                });\r\n\r\n            });\r\n\r\n        }\r\n\r\n        let $listOuter = jQuery('<div id=\"filelistouter\" class=\"jo_projectexplorerdiv jo_scrollable\" data-grow=\"'\r\n            + this.flexWeight + '\" style=\"flex-grow: ' + this.flexWeight + '\"></div>');\r\n        this.$listElement = jQuery('<div class=\"jo_filelist\"></div>')\r\n\r\n        $listOuter.append(this.$listElement);\r\n\r\n        $accordionDiv.append(this.$captionElement);\r\n        $accordionDiv.append($listOuter);\r\n\r\n        let $ce = this.$captionElement;\r\n        let $li = this.$listElement.parent();\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $ce.on(mousePointer + 'down', (ev) => {\r\n            if (ev.button != 0) {\r\n                return;\r\n            }\r\n\r\n            if (!this.fixed) {\r\n                let targetGrow = $li.data('grow');\r\n                if ($ce.hasClass('jo_expanded')) {\r\n                    if (that.accordion.parts.length > 1) {\r\n                        $li.animate({\r\n                            'flex-grow': 0.001\r\n                        }, 1000, () => { $ce.toggleClass('jo_expanded'); });\r\n                    }\r\n                } else {\r\n                    $ce.toggleClass('jo_expanded');\r\n                    $li.animate({\r\n                        'flex-grow': targetGrow\r\n                    }, 1000);\r\n                }\r\n            }\r\n        });\r\n\r\n        $ce.on('dragover', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                $ce.addClass('jo_file_dragover');\r\n                event.preventDefault();\r\n            }\r\n        })\r\n\r\n        $ce.on('dragleave', (event) => {\r\n            $ce.removeClass('jo_file_dragover');\r\n        })\r\n\r\n        $ce.on('drop', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                event.preventDefault();\r\n                $ce.removeClass('jo_file_dragover');\r\n                let element1 = AccordionPanel.currentlyDraggedElement;\r\n                if (element1 != null) {\r\n                    that.moveElement(element1, null);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    grow() {\r\n        let $li = this.$listElement.parent();\r\n        let targetGrow = $li.data('grow');\r\n        $li.css('flex-grow', targetGrow);\r\n        this.$captionElement.addClass('jo_expanded');\r\n    }\r\n\r\n    addElement(element: AccordionElement, expanded: boolean) {\r\n        // this.elements.push(element);\r\n        // element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        // this.$listElement.prepend(element.$htmlFirstLine);\r\n        element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        this.insertElement(element);\r\n    }\r\n\r\n    sortElements() {\r\n        if (this.dontSortElements) return;\r\n        this.elements.sort((a, b) => {\r\n            let aName = a.sortName ? a.sortName : a.name;\r\n            let bName = b.sortName ? b.sortName : b.name;\r\n\r\n            return this.compareWithPath(aName, a.path, a.isFolder, bName, b.path, b.isFolder);\r\n\r\n        });\r\n        this.elements.forEach((element) => { this.$listElement.append(element.$htmlFirstLine) });\r\n    }\r\n\r\n    setTextAfterFilename(element: AccordionElement, text: string, cssClass: string) {\r\n        if(element == null) return;\r\n        let $div = element.$htmlFirstLine.find('.jo_textAfterName');\r\n        $div.addClass(cssClass);\r\n        $div.html(text);\r\n    }\r\n\r\n    addAction($element: JQuery<HTMLElement>) {\r\n        this.$captionElement.find('.jo_actions').prepend($element);\r\n    }\r\n\r\n    renderElement(element: AccordionElement, expanded: boolean): JQuery<HTMLElement> {\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        let that = this;\r\n\r\n        let expandedCollapsed = \"\";\r\n\r\n        if (element.iconClass == null) element.iconClass = this.defaultIconClass;\r\n        if (element.isFolder) {\r\n            element.iconClass = \"folder\";\r\n            expandedCollapsed = expanded ? \" jo_expanded\" : \" jo_collapsed\";\r\n        }\r\n\r\n        let pathHtml = \"\";\r\n        if (element.path == null) element.path = [];\r\n        for (let i = 0; i < element.path.length; i++) {\r\n            pathHtml += '<div class=\"jo_folderline\"></div>';\r\n        }\r\n\r\n        element.$htmlFirstLine = jQuery(`<div class=\"jo_file jo_${element.iconClass} ${expandedCollapsed}\">\r\n        <div class=\"jo_folderlines\">${pathHtml}</div>\r\n           <div class=\"jo_fileimage\"></div>\r\n           <div class=\"jo_filename\">${escapeHtml(element.name)}</div>\r\n           <div class=\"jo_textAfterName\"></div>\r\n           <div class=\"jo_additionalButtonSettings\"></div>\r\n           ${this.withDeleteButton ? '<div class=\"jo_delete img_delete jo_button jo_active' + (false ? \" jo_delete_always\" : \"\") + '\"></div>' : \"\"}\r\n           ${!jo_mouseDetected ? '<div class=\"jo_settings_button img_ellipsis-dark jo_button jo_active\"></div>' : \"\"}\r\n           </div>`);\r\n\r\n        if (!expanded && element.path.length > 0) {\r\n            element.$htmlFirstLine.hide();\r\n        }\r\n\r\n        if (this.addElementActionCallback != null) {\r\n            let $elementAction = this.addElementActionCallback(element);\r\n            element.$htmlFirstLine.append($elementAction);\r\n        }\r\n\r\n        if (this.withFolders) {\r\n            if (element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            that.moveElement(element1, element);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withFolders || this.enableDrag) {\r\n            let $filedragpart = element.$htmlFirstLine.find('.jo_filename');\r\n            $filedragpart.attr('draggable', 'true');\r\n            $filedragpart.on('dragstart', (event) => {\r\n                AccordionPanel.currentlyDraggedElement = element;\r\n                AccordionPanel.currentlyDraggedElementKind = that.kind;\r\n                event.originalEvent.dataTransfer.effectAllowed = element.isFolder ? \"move\" : \"copyMove\";\r\n            })\r\n        }\r\n\r\n        if (this.acceptDropKinds != null && this.acceptDropKinds.length > 0) {\r\n            if (!element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n\r\n                        if (event.ctrlKey) {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"copy\";\r\n                        } else {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"move\";\r\n                        }\r\n\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            if (that.dropElementCallback != null) that.dropElementCallback(element, element1, event.ctrlKey ? \"copy\" : \"move\");\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        element.$htmlFirstLine.on(mousePointer + 'up', (ev) => {\r\n\r\n            if (ev.button == 0 && that.selectCallback != null) {\r\n                that.selectCallback(element.externalElement);\r\n\r\n                for (let ae of that.elements) {\r\n                    if (ae != element && ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                        ae.$htmlFirstLine.removeClass('jo_active');\r\n                    }\r\n                }\r\n\r\n                element.$htmlFirstLine.addClass('jo_active');\r\n\r\n                if (element.isFolder) {\r\n\r\n                    if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                        element.$htmlFirstLine.removeClass('jo_expanded');\r\n                        element.$htmlFirstLine.addClass('jo_collapsed');\r\n                    } else {\r\n                        element.$htmlFirstLine.addClass('jo_expanded');\r\n                        element.$htmlFirstLine.removeClass('jo_collapsed');\r\n                    }\r\n\r\n                    let pathIsCollapsed: { [path: string]: boolean } = {};\r\n                    for (let e of this.elements) {\r\n                        if (e.isFolder) {\r\n                            let path = e.path.join(\"/\");\r\n                            if (path != \"\") path += \"/\";\r\n                            path += e.name;\r\n                            pathIsCollapsed[path] = e.$htmlFirstLine.hasClass('jo_collapsed');\r\n                            if (pathIsCollapsed[e.path.join(\"/\")]) pathIsCollapsed[path] = true;\r\n                        }\r\n                    }\r\n                    pathIsCollapsed[\"\"] = false;\r\n\r\n                    for (let e of this.elements) {\r\n                        if (pathIsCollapsed[e.path.join(\"/\")]) {\r\n                            e.$htmlFirstLine.slideUp(200);\r\n                        } else {\r\n                            e.$htmlFirstLine.slideDown(200);\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n\r\n        let contextmenuHandler = function (event) {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [];\r\n            if (that.renameCallback != null) {\r\n                contextMenuItems.push({\r\n                    caption: \"Umbenennen\",\r\n                    callback: () => {\r\n                        that.renameElement(element);\r\n                    }\r\n                })\r\n            }\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n            if (element.isFolder) {\r\n                contextMenuItems = contextMenuItems.concat([\r\n                    {\r\n                        caption: \"Neuen Unterordner anlegen (unterhalb '\" + element.name + \"')...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            // that.$newFolderAction.trigger(mousePointer + 'down');\r\n                            let pathArray = that.getCurrentlySelectedPath();\r\n\r\n                            that.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                                that.newFolderCallback(newElement, () => {\r\n                                    that.sortElements();\r\n                                    newElement.$htmlFirstLine[0].scrollIntoView();\r\n                                    animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                                });\r\n                            });\r\n\r\n                        }\r\n                    }, {\r\n                        caption: \"Neue Datenbank...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            that.$buttonNew.trigger(mousePointer + 'down');\r\n                        }\r\n                    }\r\n                ])\r\n            }\r\n\r\n\r\n            if (that.contextMenuProvider != null && !element.isFolder) {\r\n\r\n                for (let cmi of that.contextMenuProvider(element)) {\r\n                    contextMenuItems.push({\r\n                        caption: cmi.caption,\r\n                        callback: () => {\r\n                            cmi.callback(element);\r\n                        },\r\n                        color: cmi.color,\r\n                        subMenu: cmi.subMenu == null ? null : cmi.subMenu.map((mi) => {\r\n                            return {\r\n                                caption: mi.caption,\r\n                                callback: () => {\r\n                                    mi.callback(element);\r\n                                },\r\n                                color: mi.color\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n\r\n            if (contextMenuItems.length > 0) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                openContextMenu(contextMenuItems, event.pageX, event.pageY);\r\n            }\r\n        };\r\n\r\n        element.$htmlFirstLine[0].addEventListener(\"contextmenu\", contextmenuHandler, false);\r\n\r\n        // long press for touch devices\r\n        let pressTimer: number;\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.on('pointerup', () => {\r\n                clearTimeout(pressTimer);\r\n                return false;\r\n            }).on('pointerdown', (event) => {\r\n                pressTimer = window.setTimeout(() => {\r\n                    contextmenuHandler(event);\r\n                }, 500);\r\n                return false;\r\n            });\r\n        }\r\n\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('pointerdown', (e) => {\r\n                contextmenuHandler(e);\r\n            });\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('mousedown click', (e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            });\r\n        }\r\n\r\n        if (that.withDeleteButton) {\r\n            element.$htmlFirstLine.find('.jo_delete').on(mousePointer + 'up', (ev) => {\r\n                ev.preventDefault();\r\n                openContextMenu([{\r\n                    caption: \"Abbrechen\",\r\n                    callback: () => {\r\n                        // nothing to do.\r\n                    }\r\n                }, {\r\n                    caption: \"Ich bin mir sicher: löschen!\",\r\n                    color: \"#ff6060\",\r\n                    callback: () => {\r\n\r\n                        if (element.isFolder) {\r\n                            if (that.getChildElements(element).length > 0) {\r\n                                alert('Dieser Ordner kann nicht gelöscht werden, da er nicht leer ist.');\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        that.deleteCallback(element.externalElement, () => {\r\n                            element.$htmlFirstLine.remove();\r\n                            if (element.$htmlSecondLine != null) element.$htmlSecondLine.remove();\r\n                            that.elements.splice(that.elements.indexOf(element), 1);\r\n\r\n                            if (that.selectCallback != null) {\r\n                                if (that.elements.length > 0) {\r\n                                    that.select(that.elements[0].externalElement);\r\n                                } else {\r\n                                    that.select(null);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }], ev.pageX + 2, ev.pageY + 2);\r\n                ev.stopPropagation();\r\n            });\r\n        }\r\n\r\n        return element.$htmlFirstLine;\r\n\r\n    }\r\n\r\n    moveElement(elementToMove: AccordionElement, destinationFolder: AccordionElement) {\r\n        let destinationPath: string[] = destinationFolder == null ? [] : destinationFolder.path.slice(0).concat([destinationFolder.name]);\r\n        if (elementToMove.isFolder) {\r\n            let movedElements: AccordionElement[] = [elementToMove];\r\n\r\n            let sourcePath = elementToMove.path.concat([elementToMove.name]).join(\"/\");\r\n\r\n            if(destinationPath.join('/').indexOf(sourcePath) == 0) return;\r\n\r\n            let oldPathLength = elementToMove.path.length;\r\n            elementToMove.path = destinationPath.slice(0);\r\n\r\n            for (let element of this.elements) {\r\n                if (element.path.join(\"/\").startsWith(sourcePath)) {\r\n                    element.path.splice(0, oldPathLength);\r\n                    element.path = destinationPath.concat(element.path);\r\n                    movedElements.push(element);\r\n                }\r\n            }\r\n\r\n            for (let el of movedElements) {\r\n                el.$htmlFirstLine.remove();\r\n                this.elements.splice(this.elements.indexOf(el), 1);\r\n            }\r\n            for (let el of movedElements) {\r\n                this.renderElement(el, true);\r\n                this.insertElement(el);\r\n            }\r\n\r\n            this.moveCallback(movedElements);\r\n        } else {\r\n            elementToMove.path = destinationPath;\r\n            elementToMove.$htmlFirstLine.remove();\r\n            this.elements.splice(this.elements.indexOf(elementToMove), 1);\r\n            this.renderElement(elementToMove, true);\r\n            this.insertElement(elementToMove);\r\n            this.select(elementToMove.externalElement);\r\n            elementToMove.$htmlFirstLine[0].scrollIntoView();\r\n            this.moveCallback(elementToMove);\r\n        }\r\n    }\r\n\r\n    getChildElements(folder: AccordionElement): AccordionElement[] {\r\n        let path = folder.path.slice(0).concat(folder.name).join(\"/\");\r\n        return this.elements.filter((element) => element.path.join(\"/\").startsWith(path));\r\n    }\r\n\r\n    renameElement(element: AccordionElement, callback?: () => void) {\r\n        let that = this;\r\n        let $div = element.$htmlFirstLine.find('.jo_filename');\r\n        let pointPos = element.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        this.dontSortElements = true;\r\n        makeEditable($div, $div, (newText: string) => {\r\n            if (element.externalElement != null) newText = that.renameCallback(element.externalElement, newText);\r\n            element.name = newText;\r\n            $div.html(element.name);\r\n            if (callback != null) callback();\r\n            that.sortElements();\r\n            $div[0].scrollIntoView();\r\n            this.dontSortElements = false;\r\n        }, selection);\r\n    }\r\n\r\n    select(externalElement: any, invokeCallback: boolean = true, scrollIntoView: boolean = false) {\r\n\r\n        if (externalElement == null) {\r\n            for (let ae1 of this.elements) {\r\n                if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n            }\r\n        } else {\r\n            let ae = this.findElement(externalElement);\r\n\r\n            if (ae != null) {\r\n                for (let ae1 of this.elements) {\r\n                    if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n                }\r\n\r\n                ae.$htmlFirstLine.addClass('jo_active');\r\n                if (scrollIntoView) {\r\n                    let pathString = ae.path.join(\"/\");\r\n                    for (let el of this.elements) {\r\n                        let elPath = el.path.slice(0);\r\n                        if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                            if (el.isFolder) {\r\n                                elPath.push(el.name);\r\n                                if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                                    el.$htmlFirstLine.removeClass(\"jo_collapsed\");\r\n                                    el.$htmlFirstLine.addClass(\"jo_expanded\");\r\n                                }\r\n                            }\r\n                            el.$htmlFirstLine.show();\r\n                        }\r\n\r\n                    }\r\n\r\n                    ae.$htmlFirstLine[0].scrollIntoView();\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (invokeCallback && this.selectCallback != null) this.selectCallback(externalElement);\r\n\r\n    }\r\n\r\n    getPathString(ae: AccordionElement) {\r\n        let ps: string = ae.path.join(\"/\");\r\n        if (ae.isFolder) {\r\n            if (ps != \"\") ps += \"/\";\r\n            ps += ae.name;\r\n        }\r\n        return ps;\r\n    }\r\n\r\n    setElementClass(element: AccordionElement, iconClass: string) {\r\n        if (element != null) {\r\n            element.$htmlFirstLine?.removeClass(\"jo_\" + element.iconClass).addClass(\"jo_\" + iconClass);\r\n            element.iconClass = iconClass;\r\n        }\r\n\r\n    }\r\n\r\n    findElement(externalElement: any): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                return ae;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    removeElement(externalElement: any) {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                ae.$htmlFirstLine.remove();\r\n                if (ae.$htmlSecondLine != null) ae.$htmlSecondLine.remove();\r\n                this.elements.splice(this.elements.indexOf(ae), 1);\r\n\r\n                if (this.selectCallback != null) {\r\n                    if (this.elements.length > 0) {\r\n                        this.select(this.elements[0].externalElement);\r\n                    } else {\r\n                        this.select(null);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.$listElement.empty();\r\n        this.elements = [];\r\n    }\r\n\r\n    setCaption(text: string) {\r\n        this.$captionElement.find('.jo_captiontext').html(text);\r\n    }\r\n\r\n    getSelectedElement(): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                return ae;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class Accordion {\r\n\r\n    parts: AccordionPanel[] = [];\r\n    $html: JQuery<HTMLElement>;\r\n\r\n    constructor(public main: MainBase, $html: JQuery<HTMLElement>) {\r\n        this.$html = $html;\r\n        $html.addClass('jo_leftpanelinner');\r\n    }\r\n\r\n    addPanel(panel: AccordionPanel) {\r\n        panel.renderOuterHtmlElements(this.$html);\r\n        this.parts.push(panel);\r\n    }\r\n\r\n}","import { ClassData, UserData } from \"../../communication/Data.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { isEmptyObject } from \"jquery\";\r\n\r\nexport class DistributeToStudentsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n    studentCount: number = 0;\r\n\r\n    constructor(private classes: ClassData[], private workspace: Workspace, private main: Main){\r\n        this.init();\r\n    }\r\n\r\n    private init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Austeilen eines Workspace an einzelne Schüler/innen</div>\r\n             <div class=\"jo_ds_settings\">\r\n                <div class=\"jo_ds_settings_caption\">Workspace:</div><div class=\"jo_ds_workspacename\">${this.workspace.name}</div>\r\n                <div class=\"jo_ds_settings_caption\">Liste filtern:</div><div class=\"jo_ds_filterdiv\"><input class=\"dialog-input\"></input></div>\r\n             </div>\r\n             <div class=\"jo_ds_student_list jo_scrollable\">\r\n             </div>\r\n             <div class=\"jo_ds_selected_message\"></div>\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_distribute_button\">Austeilen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        let $studentList = jQuery('.jo_ds_student_list');\r\n        let that = this;\r\n\r\n        for(let klass of this.classes){\r\n            for(let student of klass.students){\r\n                let $studentLine = jQuery('<div class=\"jo_ds_student_line\">');\r\n                let $studentClass = jQuery(`<div class=\"jo_ds_student_class\">${klass.name}</div>`);                \r\n                let $studentName = jQuery(`<div class=\"jo_ds_student_name\">${student.rufname} ${student.familienname}</div>`);\r\n                $studentLine.append($studentClass, $studentName);\r\n                $studentList.append($studentLine);\r\n                $studentLine.on('mousedown', () => {\r\n                    $studentLine.toggleClass('jo_active');\r\n                     that.studentCount += $studentLine.hasClass('jo_active') ? 1 : -1;\r\n                     jQuery('.jo_ds_selected_message').text(`${that.studentCount} Schüler/inn/en selektiert`);\r\n                });\r\n                $studentLine.data('student', student);\r\n                $studentLine.data('klass', klass);\r\n            }\r\n        }\r\n\r\n        jQuery('.jo_ds_filterdiv>input').on('input', () => {\r\n            let filterText = <string>jQuery('.jo_ds_filterdiv>input').val();\r\n            if(filterText == null || filterText == \"\"){\r\n                $('.jo_ds_student_line').show();\r\n            } else {\r\n                $('.jo_ds_student_line').each((index, element) => {\r\n                    let $element = jQuery(element);\r\n                    let klass:ClassData = $element.data('klass');\r\n                    let student: UserData = $element.data('student');\r\n                    let text = klass.name + \" \" + student.rufname + \" \" + student.familienname;\r\n                    if(text.indexOf(filterText) >= 0){\r\n                        $element.show();\r\n                    } else {\r\n                        $element.hide();\r\n                    }\r\n                });\r\n\r\n            }\r\n            \r\n        });\r\n\r\n\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { window.history.back(); });\r\n        jQuery('#jo_ds_distribute_button').on('click', () => {that.distributeWorkspace();});\r\n\r\n    }\r\n\r\n    distributeWorkspace() {\r\n\r\n        let student_ids: number[] = [];\r\n        $('.jo_ds_student_line').each((index, element) => {\r\n            let $element = jQuery(element);\r\n            if($element.hasClass('jo_active')){\r\n                let student: UserData = $element.data('student');\r\n                student_ids.push(student.id);\r\n            }\r\n        });\r\n\r\n        window.history.back();\r\n\r\n        this.main.networkManager.sendDistributeWorkspace(this.workspace, null, student_ids, (error: string) => {\r\n            if (error == null) {\r\n                let networkManager = this.main.networkManager;\r\n                let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                alert(`Der Workspace ${this.workspace.name} wurde an ${student_ids.length} Schüler/innen ausgeteilt. Er wird in maximal ${dt} s bei jedem Schüler ankommen.`);\r\n            } else {\r\n                alert(error);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n\r\n}","import { CreateWorkspaceData, WorkspaceData } from \"../../communication/Data.js\";\r\nimport { DatabaseImportExport } from \"../../tools/DatabaseImportExport.js\";\r\nimport { LoadableDatabase } from \"../../tools/DatabaseLoader.js\";\r\nimport { DatabaseTool } from \"../../tools/DatabaseTools.js\";\r\nimport { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { TemplateUploader } from \"../../tools/TemplateUploader.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionElement } from \"./Accordion.js\";\r\n\r\ntype CreateMode = \"emptyDatabase\" | \"fromTemplate\" | \"useExistingDatabase\" | \"useDumpFile\";\r\n\r\nexport class NewDatabaseDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    database: LoadableDatabase;\r\n\r\n    constructor(private main: Main, private owner_id: number) {\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Neue Datenbank anlegen</div>\r\n\r\n            <div class=\"jo_ds_settings\">\r\n               <div class=\"jo_ds_settings_caption\">Name der Datenbank:</div><div><input class=\"dialog-input jo_databasename\" value=\"Neue Datenbank\"></input></div>\r\n            </div>\r\n\r\n             <div class=\"jo_tabheadings jo_cdtabheading\">\r\n             <div class=\"jo_tabheading\" data-target=\"jo_createEmptyDatabaseTab\">Leere Datenbank</div>\r\n             <div class=\"jo_tabheading jo_active\" data-target=\"jo_createDatabaseFromTemplateTab\">Von Vorlage kopieren</div>\r\n             <div class=\"jo_tabheading\" data-target=\"jo_createDatabaseUseExistingTab\">Bestehende Datenbank mitnutzen</div>\r\n             <div class=\"jo_tabheading\" data-target=\"jo_createDatabaseUseDumpFile\">Import aus Binärdump (.dbDump-File)</div>\r\n             </div>\r\n             <div class=\"jo_tabs\" style=\"width: 100%; margin-top: 10px\">\r\n                 <div class=\"jo_createEmptyDatabaseTab\">\r\n                    <div class=\"jo_createDatabaseDescription\">\r\n                        Erstellt wird eine leere Datenbank.\r\n                    </div>\r\n                 </div>\r\n                 <div class=\"jo_createDatabaseFromTemplateTab jo_active\">\r\n                    <div class=\"jo_ds_settings\">\r\n                       <div class=\"jo_ds_settings_caption\">Vorlage suchen:</div><div><input class=\"dialog-input jo_templatename\"></input></div>\r\n                    </div>\r\n                    <div class=\"jo_scrollable jo_templatelist\"></div>\r\n                 </div>\r\n                <div class=\"jo_createDatabaseUseExistingTab\">\r\n                    <div class=\"jo_createDatabaseDescription\">Wenn Du die Datenbank einer anderen Nutzerin/eines anderen Nutzers mitnutzen möchtest, brauchst Du einen Zugriffscode von ihr/ihm. Er ist unter Datenbank->Einstellungen zu finden.            \r\n                    </div>\r\n                    <div class=\"jo_ds_settings\">\r\n                       <div class=\"jo_ds_settings_caption\">Zugriffscode:</div><div><input class=\"dialog-input jo_databasecodeinput\"></input></div>\r\n                    </div>\r\n                 </div>\r\n                <div class=\"jo_createDatabaseUseDumpFile\">\r\n                    <div class=\"jo_createDatabaseDescription\">Wähle hier die Datei mit dem Datenbank-Dump aus (Endung .dbDump):</div>\r\n                    <input type=\"file\" class=\"jo_dumpfile\" name=\"dumpfile\" style=\"padding: 10px\"/>\r\n                    <div class=\"jo_databaseimport_dropzone\" style=\"width: 70vw; margin-left: 10px\">Alternativ: Datei in dieses Feld ziehen</div>\r\n                    <div class=\"jo_databaseimport_ok\"></div>\r\n                 </div>\r\n             </div>\r\n\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_create_database_button\">Datenbank anlegen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        makeTabs(this.$dialog);\r\n\r\n        let $templatelist = jQuery('.jo_templatelist');\r\n        this.main.networkManager.fetchTemplateList((templatelist) => {\r\n            templatelist.forEach(tle => {\r\n\r\n                let $tle = jQuery('<div class=\"jo_templateListEntry\"></div>')\r\n                $tle.append(jQuery(`<div class=\"jo_tle_firstline\">${tle.name} <span class=\"jo_tle_ownername\"> (von ${tle.ownerName})</span></div>`))\r\n                $tle.append(jQuery(`<div class=\"jo_tle_secondline\">${tle.description}</div>`))\r\n                $tle.data('templateId', tle.id);\r\n                $tle.data('name', tle.name);\r\n\r\n                $templatelist.append($tle);\r\n                tle.$tle = <JQuery<HTMLDivElement>>$tle;\r\n\r\n                $tle.on('pointerdown', () => {\r\n                    $templatelist.find('.jo_templateListEntry').removeClass('jo_active');\r\n                    $tle.addClass('jo_active');\r\n                })\r\n\r\n            })\r\n            let $templateName = <JQuery<HTMLInputElement>>jQuery('.jo_templatename');\r\n            $templateName.on('input', () => {\r\n                let s = <string>$templateName.val();\r\n                $templatelist.find('.jo_templateListEntry').hide();\r\n                templatelist.forEach(tle => {\r\n                    let tleString = tle.name + tle.ownerName + (tle.description ? tle.description : \"\");\r\n                    if (tleString.indexOf(s) >= 0) tle.$tle.show();\r\n                })\r\n            })\r\n        })\r\n\r\n        let $dropZone = jQuery('.jo_databaseimport_dropzone');\r\n\r\n        $dropZone.on('dragover', (evt) => {\r\n            evt.stopPropagation();\r\n            evt.preventDefault();\r\n            evt.originalEvent.dataTransfer.dropEffect = 'copy';\r\n        })\r\n        $dropZone.on('drop', (evt) => {\r\n            evt.stopPropagation();\r\n            evt.preventDefault();\r\n\r\n            var files = evt.originalEvent.dataTransfer.files;\r\n            this.importFile(files);\r\n        })\r\n\r\n        jQuery('.jo_dumpfile').on('change', (event) => {\r\n            //@ts-ignore\r\n            var files: FileList = event.originalEvent.target.files;\r\n            this.importFile(files);\r\n        })\r\n\r\n\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { this.showMainWindow(); });\r\n        jQuery('#jo_ds_create_database_button').on('click', () => {\r\n            let createMode: CreateMode = \"emptyDatabase\";\r\n            if (jQuery('.jo_createDatabaseFromTemplateTab').hasClass('jo_active')) createMode = \"fromTemplate\";\r\n            if (jQuery('.jo_createDatabaseUseExistingTab').hasClass('jo_active')) createMode = \"useExistingDatabase\";\r\n            if (jQuery('.jo_createDatabaseUseDumpFile').hasClass('jo_active')) createMode = \"useDumpFile\";\r\n\r\n            let workspaceData: CreateWorkspaceData = {\r\n                id: null,\r\n                isFolder: false,\r\n                name: <string>jQuery('.dialog-input.jo_databasename').val(),\r\n                path: \"\",\r\n            }\r\n\r\n            switch (createMode) {\r\n                case \"emptyDatabase\":\r\n                    this.createWorkspace(workspaceData);\r\n                    break;\r\n                case \"fromTemplate\":\r\n                    let $template = jQuery('.jo_templateListEntry.jo_active');\r\n                    if ($template.length != 1) {\r\n                        alert('Bitte wählen Sie genau eine Vorlage aus.');\r\n                        return;\r\n                    } else {\r\n                        workspaceData.template_database_id = $template.data('templateId');\r\n                        if (workspaceData.name == \"Neue Datenbank\") workspaceData.name = $template.data('name');\r\n                        this.createWorkspace(workspaceData);\r\n                    }\r\n                    break;\r\n                case \"useExistingDatabase\":\r\n                    let code = <string>jQuery('.jo_databasecodeinput').val();\r\n                    let tIndex = code.indexOf(\"T\");\r\n                    if (tIndex == -1) {\r\n                        alert(\"Der Zugriffscode muss das Zeichen T enthalten.\");\r\n                        return;\r\n                    }\r\n                    workspaceData.otherDatabaseId = Number.parseInt(code.substring(0, tIndex));\r\n                    workspaceData.secret = code.substring(tIndex + 1);\r\n                    this.createWorkspace(workspaceData);\r\n                    break;\r\n                case \"useDumpFile\":\r\n                    if(this.database != null){\r\n                        new TemplateUploader().uploadCurrentDatabase(-1, this.main, this.database.binDump, (response) => {\r\n                            workspaceData.template_database_id = response.newTemplateId;\r\n                            this.createWorkspace(workspaceData);\r\n                        });\r\n\r\n                    } else {\r\n                        alert('Bitte laden Sie zuerst den Binärdump einer Datenbank hoch.')\r\n                        return;\r\n                    }\r\n                    break;\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    private createWorkspace(workspaceData: CreateWorkspaceData) {\r\n        this.main.networkManager.sendCreateWorkspace(workspaceData, this.owner_id, (error?: string) => {\r\n            if (error != null) { alert(error); return; }\r\n\r\n            let w = this.main.createNewWorkspace(workspaceData.name, this.owner_id);\r\n            w.id = workspaceData.id;\r\n            w.sql_history = \"\";\r\n\r\n            let projectExplorer = this.main.projectExplorer;\r\n\r\n            this.main.workspaceList.push(w);\r\n            let accordionElement: AccordionElement = {\r\n                name: workspaceData.name,\r\n                externalElement: w,\r\n                iconClass: \"workspace\",\r\n                isFolder: false,\r\n                path: []\r\n            };\r\n\r\n            projectExplorer.workspaceListPanel.addElement(accordionElement, true);\r\n\r\n            w.renderSettingsButton(accordionElement);\r\n\r\n            projectExplorer.workspaceListPanel.sortElements();\r\n            projectExplorer.fileListPanel.sortElements();\r\n\r\n            projectExplorer.setWorkspaceActive(w);\r\n\r\n            this.showMainWindow();\r\n\r\n        });\r\n    }\r\n\r\n    importFile(files: FileList) {\r\n        let that = this;\r\n        new DatabaseImportExport().loadFromFile(files[0], (db: LoadableDatabase) => {\r\n            let isDatabase: boolean = false;\r\n            if(DatabaseTool.getDumpType(db.binDump) == \"binaryCompressed\"){\r\n                // @ts-ignore\r\n                let dbUncompressed = pako.inflate(db.binDump);\r\n                if(DatabaseTool.getDumpType(dbUncompressed) == \"binaryUncompressed\"){\r\n                    isDatabase = true;\r\n                }\r\n            } else if(DatabaseTool.getDumpType(db.binDump) == \"binaryUncompressed\"){\r\n                //@ts-ignore\r\n                db.binDump = pako.deflate(db.binDump);\r\n                isDatabase = true;\r\n            }\r\n\r\n            if(isDatabase){\r\n                that.database = db;\r\n                jQuery('.jo_databaseimport_ok').html(\"Die Datenbankdatei wurde erfolgreich von Datei eingelesen. Sie können die Datenbank jetzt durch Klick auf den Button unten erstellen.\");\r\n            } else {\r\n                alert(\"In der Datei befindet sich kein Binärdump einer Datenbank.\");\r\n            }\r\n        });\r\n    }\r\n\r\n    showMainWindow() {\r\n        jQuery('#main').css('visibility', 'visible');\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n    }\r\n\r\n\r\n\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionPanel, Accordion, AccordionElement, AccordionContextMenuItem } from \"./Accordion.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { WorkspaceData, Workspaces, ClassData, CreateWorkspaceData } from \"../../communication/Data.js\";\r\nimport { dateToString } from \"../../tools/StringTools.js\";\r\nimport { DistributeToStudentsDialog } from \"./DistributeToStudentsDialog.js\";\r\nimport { NewDatabaseDialog } from \"./NewDatabaseDialog.js\";\r\n\r\n\r\nexport class ProjectExplorer {\r\n\r\n    programPointerModule: Module = null;\r\n    programPointerPosition: TextPosition;\r\n    programPointerDecoration: string[] = [];\r\n\r\n    accordion: Accordion;\r\n    fileListPanel: AccordionPanel;\r\n    workspaceListPanel: AccordionPanel;\r\n\r\n    $homeAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private $projectexplorerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.accordion = new Accordion(this.main, this.$projectexplorerDiv);\r\n\r\n        this.initFilelistPanel();\r\n\r\n        this.initWorkspacelistPanel();\r\n\r\n    }\r\n\r\n    initFilelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.fileListPanel = new AccordionPanel(this.accordion, \"Kein Workspace gewählt\", \"1\",\r\n            \"img_add-file-dark\", \"Neue Datei...\", \"java\", true, false, \"file\", true, []);\r\n\r\n        this.fileListPanel.newElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                if (that.main.currentWorkspace == null) {\r\n                    alert('Bitte wählen Sie zuerst einen Workspace aus.');\r\n                    return null;\r\n                }\r\n\r\n                let f: File = {\r\n                    name: accordionElement.name,\r\n                    dirty: false,\r\n                    saved: true,\r\n                    text: \"\",\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    panelElement: accordionElement\r\n                };\r\n                let m = new Module(f, that.main);\r\n                let modulStore = that.main.currentWorkspace.moduleStore;\r\n                modulStore.putModule(m);\r\n                that.setModuleActive(m);\r\n                that.main.networkManager.sendCreateFile(m, that.main.currentWorkspace, that.main.workspacesOwnerId,\r\n                    (error: string) => {\r\n                        if (error == null) {\r\n                            successfulNetworkCommunicationCallback(m);\r\n                        } else {\r\n                            alert('Der Server ist nicht erreichbar!');\r\n\r\n                        }\r\n                    });\r\n\r\n            };\r\n\r\n        this.fileListPanel.renameCallback =\r\n            (module: Module, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                let file = module.file;\r\n\r\n                file.name = newName;\r\n                file.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.fileListPanel.deleteCallback =\r\n            (module: Module, callbackIfSuccessful: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.currentWorkspace.moduleStore.removeModule(module);\r\n                        callbackIfSuccessful();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.fileListPanel.contextMenuProvider = (accordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            if (!(that.main.user.is_teacher || that.main.user.is_admin || that.main.user.is_schooladmin)) {\r\n                let module: Module = <Module>accordionElement.externalElement;\r\n                let file = module.file;\r\n\r\n                if (file.submitted_date == null) {\r\n                    cmiList.push({\r\n                        caption: \"Als Hausaufgabe markieren\",\r\n                        callback: (element: AccordionElement) => {\r\n\r\n                            let file = (<Module>element.externalElement).file;\r\n                            file.submitted_date = dateToString(new Date());\r\n                            file.saved = false;\r\n                            that.main.networkManager.sendUpdates(null, true);\r\n                            that.renderHomeworkButton(file);\r\n                        }\r\n                    });\r\n                } else {\r\n                    cmiList.push({\r\n                        caption: \"Hausaufgabenmarkierung entfernen\",\r\n                        callback: (element: AccordionElement) => {\r\n\r\n                            let file = (<Module>element.externalElement).file;\r\n                            file.submitted_date = null;\r\n                            file.saved = false;\r\n                            that.main.networkManager.sendUpdates(null, true);\r\n                            that.renderHomeworkButton(file);\r\n\r\n                        }\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n\r\n\r\n        this.fileListPanel.selectCallback =\r\n            (module: Module) => {\r\n                that.setModuleActive(module);\r\n            }\r\n\r\n\r\n\r\n    }\r\n\r\n    renderHomeworkButton(file: File) {\r\n        let $buttonDiv = file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonHomework');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_homeworkButton').remove();\r\n\r\n        let klass: string = null;\r\n        let title: string = \"\";\r\n        if (file.submitted_date != null) {\r\n            klass = \"img_homework\";\r\n            title = \"Wurde als Hausaufgabe abgegeben: \" + file.submitted_date\r\n            if (file.text_before_revision) {\r\n                klass = \"img_homework-corrected\";\r\n                title = \"Korrektur liegt vor.\"\r\n            }\r\n        }\r\n\r\n        if (klass != null) {\r\n            let $homeworkButtonDiv = jQuery(`<div class=\"jo_homeworkButton ${klass}\" title=\"${title}\"></div>`);\r\n            $buttonDiv.prepend($homeworkButtonDiv);\r\n            if (klass.indexOf(\"jo_active\") >= 0) {\r\n                $homeworkButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n                $homeworkButtonDiv.on('click', (e) => {\r\n                    e.stopPropagation();\r\n                    // TODO\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initWorkspacelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.workspaceListPanel = new AccordionPanel(this.accordion, \"Datenbanken\", \"3\",\r\n            \"img_add-database-dark\", \"Neue Datenbank...\", \"workspace\", true, true, \"workspace\", false, [\"file\"]);\r\n\r\n        let $newWorkspaceAction = jQuery('<div class=\"img_add-database-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Neue Datenbank anlegen\">');\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $newWorkspaceAction.on(mousePointer + 'down', (e) => {\r\n            e.stopPropagation();\r\n\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            new NewDatabaseDialog(that.main, owner_id);\r\n\r\n        })\r\n\r\n        this.workspaceListPanel.addAction($newWorkspaceAction);\r\n        this.workspaceListPanel.$buttonNew.hide();\r\n\r\n\r\n        this.workspaceListPanel.renameCallback =\r\n            (workspace: Workspace, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                workspace.name = newName;\r\n                workspace.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.workspaceListPanel.deleteCallback =\r\n            (workspace: Workspace, successfulNetworkCommunicationCallback: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"workspace\", workspace.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.removeWorkspace(workspace);\r\n                        that.fileListPanel.enableNewButton(that.main.workspaceList.length > 0);\r\n                        that.fileListPanel.clear();\r\n                        that.main.databaseExplorer.clear();\r\n                        that.main.getResultsetPresenter().clear();\r\n                        successfulNetworkCommunicationCallback();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.workspaceListPanel.selectCallback =\r\n            (workspace: Workspace) => {\r\n                if (workspace != this.main.currentWorkspace) {\r\n                    that.main.networkManager.sendUpdates(() => {\r\n                        that.setWorkspaceActive(workspace);\r\n                    });\r\n                }\r\n            }\r\n\r\n        this.workspaceListPanel.newFolderCallback = (newElement: AccordionElement, successCallback) => {\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            let folder: Workspace = new Workspace(newElement.name, that.main, owner_id);\r\n            folder.isFolder = true;\r\n\r\n            folder.path = newElement.path.join(\"/\");\r\n            folder.panelElement = newElement;\r\n            newElement.externalElement = folder;\r\n            that.main.workspaceList.push(folder);\r\n\r\n            let wd: CreateWorkspaceData = {\r\n                id: -1,\r\n                isFolder: true,\r\n                name: folder.name,\r\n                path: folder.path\r\n            }\r\n\r\n            that.main.networkManager.sendCreateWorkspace(wd, that.main.workspacesOwnerId, (error: string) => {\r\n                if (error == null) {\r\n                    folder.id = wd.id;\r\n                    successCallback(folder);\r\n\r\n                } else {\r\n                    alert(\"Fehler: \" + error);\r\n                    that.workspaceListPanel.removeElement(newElement);\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        this.workspaceListPanel.moveCallback = (ae: AccordionElement | AccordionElement[]) => {\r\n            if (!Array.isArray(ae)) ae = [ae];\r\n            for (let a of ae) {\r\n                let ws: Workspace = a.externalElement;\r\n                ws.path = a.path.join(\"/\");\r\n                ws.saved = false;\r\n            }\r\n            this.main.networkManager.sendUpdates();\r\n        }\r\n\r\n        this.workspaceListPanel.dropElementCallback = (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => {\r\n            let workspace: Workspace = dest.externalElement;\r\n            let module: Module = droppedElement.externalElement;\r\n\r\n            if (workspace.moduleStore.getModules(false).indexOf(module) >= 0) return; // module is already in destination workspace\r\n\r\n            let f: File = {\r\n                name: module.file.name,\r\n                dirty: true,\r\n                saved: false,\r\n                text: module.file.text,\r\n                text_before_revision: null,\r\n                submitted_date: null,\r\n                student_edited_after_revision: false,\r\n                version: module.file.version,\r\n                panelElement: null\r\n            };\r\n\r\n            if (dropEffekt == \"move\") {\r\n                // move file\r\n                let oldWorkspace = that.main.currentWorkspace;\r\n                oldWorkspace.moduleStore.removeModule(module);\r\n                that.fileListPanel.removeElement(module);\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, () => { });\r\n            }\r\n\r\n            let m = new Module(f, that.main);\r\n            let modulStore = workspace.moduleStore;\r\n            modulStore.putModule(m);\r\n            that.main.networkManager.sendCreateFile(m, workspace, that.main.workspacesOwnerId,\r\n                (error: string) => {\r\n                    if (error == null) {\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n\r\n        }\r\n\r\n\r\n\r\n        this.$homeAction = jQuery('<div class=\"img_home-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Meine eigenen Workspaces anzeigen\">');\r\n\r\n        this.$homeAction.on(mousePointer +'down', (e) => {\r\n            e.stopPropagation();\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n                that.onHomeButtonClicked();\r\n            });\r\n\r\n            that.main.bottomDiv.hideHomeworkTab();\r\n\r\n        })\r\n\r\n        this.workspaceListPanel.addAction(this.$homeAction);\r\n        this.$homeAction.hide();\r\n\r\n        this.workspaceListPanel.contextMenuProvider = (workspaceAccordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            if (this.main.user.is_teacher && this.main.teacherExplorer.classPanel.elements.length > 0) {\r\n                cmiList.push({\r\n                    caption: \"An Klasse austeilen...\",\r\n                    callback: (element: AccordionElement) => { },\r\n                    subMenu: this.main.teacherExplorer.classPanel.elements.map((ae) => {\r\n                        return {\r\n                            caption: ae.name,\r\n                            callback: (element: AccordionElement) => {\r\n                                let klasse = <any>ae.externalElement;\r\n\r\n                                let workspace: Workspace = element.externalElement;\r\n\r\n                                this.main.networkManager.sendDistributeWorkspace(workspace, klasse, null, (error: string) => {\r\n                                    if (error == null) {\r\n                                        let networkManager = this.main.networkManager;\r\n                                        let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                                        alert(\"Der Workspace \" + workspace.name + \" wurde an die Klasse \" + klasse.name + \" ausgeteilt. Er wird in maximal \" +\r\n                                            dt + \" s bei jedem Schüler ankommen.\");\r\n                                    } else {\r\n                                        alert(error);\r\n                                    }\r\n                                });\r\n\r\n                            }\r\n                        }\r\n                    })\r\n                },\r\n                    {\r\n                        caption: \"An einzelne Schüler/innen austeilen...\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let classes: ClassData[] = this.main.teacherExplorer.classPanel.elements.map(ae => ae.externalElement);\r\n                            let workspace: Workspace = element.externalElement;\r\n                            new DistributeToStudentsDialog(classes, workspace, this.main);\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n    }\r\n\r\n    onHomeButtonClicked() {\r\n        this.main.teacherExplorer.restoreOwnWorkspaces();\r\n        this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.ownUpdateFrequencyInSeconds;\r\n        this.$homeAction.hide();\r\n        this.fileListPanel.enableNewButton(this.main.workspaceList.length > 0);\r\n    }\r\n\r\n    renderFiles(workspace: Workspace) {\r\n\r\n        let name = workspace == null ? \"Kein Workspace vorhanden\" : workspace.name;\r\n\r\n        this.fileListPanel.setCaption(name);\r\n        this.fileListPanel.clear();\r\n\r\n        if (this.main.getCurrentWorkspace() != null) {\r\n            for (let module of this.main.getCurrentWorkspace().moduleStore.getModules(false)) {\r\n                module.file.panelElement = null;\r\n            }\r\n        }\r\n\r\n        if (workspace != null) {\r\n            let moduleList: Module[] = [];\r\n\r\n            for (let m of workspace.moduleStore.getModules(false)) {\r\n                moduleList.push(m);\r\n            }\r\n\r\n            moduleList.sort((a, b) => { return a.file.name > b.file.name ? 1 : a.file.name < b.file.name ? -1 : 0 });\r\n\r\n            for (let m of moduleList) {\r\n\r\n                m.file.panelElement = {\r\n                    name: m.file.name,\r\n                    externalElement: m,\r\n                    isFolder: false,\r\n                    path: []\r\n                };\r\n\r\n                this.fileListPanel.addElement(m.file.panelElement, true);\r\n                this.renderHomeworkButton(m.file);\r\n            }\r\n\r\n            this.fileListPanel.sortElements();\r\n\r\n        }\r\n    }\r\n\r\n    renderWorkspaces(workspaceList: Workspace[]) {\r\n\r\n        this.fileListPanel.clear();\r\n        this.workspaceListPanel.clear();\r\n\r\n        for (let w of workspaceList) {\r\n            let path = w.path.split(\"/\");\r\n            if (path.length == 1 && path[0] == \"\") path = [];\r\n            w.panelElement = {\r\n                name: w.name,\r\n                externalElement: w,\r\n                iconClass: 'workspace',\r\n                isFolder: w.isFolder,\r\n                path: path\r\n            };\r\n\r\n            this.workspaceListPanel.addElement(w.panelElement, false);\r\n            w.renderSettingsButton(w.panelElement);\r\n        }\r\n\r\n        this.workspaceListPanel.sortElements();\r\n        this.fileListPanel.enableNewButton(workspaceList.length > 0);\r\n\r\n\r\n\r\n    }\r\n\r\n    renderErrorCount(workspace: Workspace, errorCountMap: Map<Module, number>) {\r\n        if (errorCountMap == null) return;\r\n        for (let m of workspace.moduleStore.getModules(false)) {\r\n            let errorCount: number = errorCountMap.get(m);\r\n            let errorCountS: string = ((errorCount == null || errorCount == 0) ? \"\" : \"(\" + errorCount + \")\");\r\n\r\n            this.fileListPanel.setTextAfterFilename(m.file.panelElement, errorCountS, 'jo_errorcount');\r\n        }\r\n    }\r\n\r\n    setWorkspaceActive(w: Workspace) {\r\n\r\n        if (w != null) {\r\n            this.fileListPanel.$buttonNew.show();\r\n        }\r\n\r\n        this.workspaceListPanel.select(w, false);\r\n\r\n        let callback = (error: string) => {this.initializeDatabaseTool(error, w)};\r\n\r\n        if (w.database == null) {\r\n            this.main.waitOverlay.show(\"Bitte warten, hole Datenbank vom Server ...\");\r\n\r\n            this.main.networkManager.fetchDatabase(w, callback);\r\n        } else {\r\n            callback(null);\r\n        }\r\n\r\n    }\r\n\r\n    initializeDatabaseTool(error: string, w: Workspace) {\r\n        if (error != null) {\r\n            alert(error);\r\n            return;\r\n        }\r\n\r\n        let dbTool = this.main.getDatabaseTool();\r\n\r\n        let statements: string[] = w.database.statements;\r\n        if (statements == null) statements = [];\r\n\r\n        dbTool.initializeWorker(w.database.templateDump, statements,\r\n            () => {\r\n                this.main.currentWorkspace = w;\r\n\r\n                if (this.main.user.id == w.owner_id) {\r\n                    this.main.user.currentWorkspace_id = w.id;\r\n                }\r\n\r\n                this.renderFiles(w);\r\n\r\n                if (w != null) {\r\n                    let nonSystemModules = w.moduleStore.getModules(false);\r\n\r\n                    if (w.currentlyOpenModule != null) {\r\n                        this.setModuleActive(w.currentlyOpenModule);\r\n                    } else if (nonSystemModules.length > 0) {\r\n                        this.setModuleActive(nonSystemModules[0]);\r\n                    } else {\r\n                        this.setModuleActive(null);\r\n                    }\r\n\r\n                    for (let m of nonSystemModules) {\r\n                        m.file.dirty = true;\r\n                    }\r\n\r\n                    if (nonSystemModules.length == 0) {\r\n\r\n                        Helper.showHelper(\"newSQLFileHelper\", this.main, this.fileListPanel.$captionElement);\r\n\r\n                    }\r\n\r\n                    this.main.notifier.connect(w);\r\n\r\n                } else {\r\n                    this.setModuleActive(null);\r\n                }\r\n\r\n            },\r\n            () => {\r\n                this.main.databaseExplorer.refreshAfterRetrievingDBStructure();\r\n                this.main.getHistoryViewer().clearAndShowStatements(w.database.statements);\r\n            });\r\n\r\n    }\r\n\r\n    writeEditorTextToFile() {\r\n        let cem = this.getCurrentlyEditedModule();\r\n        if (cem != null)\r\n            cem.file.text = cem.getProgramTextFromMonacoModel(); // 29.03. this.main.monaco.getValue();\r\n    }\r\n\r\n\r\n    lastOpenModule: Module = null;\r\n    setModuleActive(m: Module) {\r\n\r\n        this.main.bottomDiv.homeworkManager.hideRevision();\r\n\r\n        if (this.lastOpenModule != null) {\r\n            this.lastOpenModule.file.text = this.lastOpenModule.getProgramTextFromMonacoModel(); // this.main.monaco.getValue();\r\n            this.lastOpenModule.editorState = this.main.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (m == null) {\r\n            this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n        } else {\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.main.getMonacoEditor().setModel(m.model);\r\n            if (this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(m.bracketError);\r\n\r\n            if (m.file.text_before_revision != null) {\r\n                this.main.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n            } else {\r\n                this.main.bottomDiv.homeworkManager.hideHomeworkRevisionButton();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setActiveAfterExternalModelSet(m: Module) {\r\n        this.fileListPanel.select(m, false);\r\n\r\n        this.lastOpenModule = m;\r\n\r\n        if (m.editorState != null) {\r\n            this.main.editor.dontPushNextCursorMove++;\r\n            this.main.getMonacoEditor().restoreViewState(m.editorState);\r\n            this.main.editor.dontPushNextCursorMove--;\r\n        }\r\n\r\n        this.setCurrentlyEditedModule(m);\r\n\r\n        this.showProgramPointer();\r\n\r\n        setTimeout(() => {\r\n            if (!this.main.getMonacoEditor().getOptions().get(monaco.editor.EditorOption.readOnly)) {\r\n                this.main.getMonacoEditor().focus();\r\n            }\r\n        }, 300);\r\n\r\n    }\r\n\r\n\r\n    private showProgramPointer() {\r\n\r\n        if (this.programPointerModule == this.getCurrentlyEditedModule() && this.getCurrentlyEditedModule() != null) {\r\n            let position = this.programPointerPosition;\r\n            let range = {\r\n                startColumn: position.column, startLineNumber: position.line,\r\n                endColumn: position.column + position.length, endLineNumber: position.line\r\n            };\r\n\r\n            this.main.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n            this.programPointerDecoration = this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n                {\r\n                    range: range,\r\n                    options: {\r\n                        className: 'jo_revealProgramPointer', isWholeLine: true,\r\n                        overviewRuler: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.OverviewRulerLane.Center\r\n                        },\r\n                        minimap: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    range: range,\r\n                    options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n                }\r\n            ]);\r\n\r\n        }\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        // console statement execution:\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        let module = this.main.currentWorkspace.moduleStore.findModuleByFile(file);\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        this.programPointerModule = module;\r\n        this.programPointerPosition = position;\r\n\r\n        if (module != this.getCurrentlyEditedModule()) {\r\n            this.setModuleActive(module);\r\n        } else {\r\n            this.showProgramPointer();\r\n        }\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws == null) return null;\r\n\r\n        return ws.currentlyOpenModule;\r\n    }\r\n\r\n    setCurrentlyEditedModule(m: Module) {\r\n        if (m == null) return;\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws.currentlyOpenModule != m) {\r\n            ws.currentlyOpenModule = m;\r\n            ws.saved = false;\r\n            m.file.dirty = true;\r\n        }\r\n    }\r\n\r\n    setExplorerColor(color: string) {\r\n        let caption: string;\r\n\r\n        if (color == null) {\r\n            color = \"transparent\";\r\n            caption = \"Meine Datenbanken\";\r\n        } else {\r\n            caption = \"Schüler-DB\";\r\n        }\r\n\r\n        this.fileListPanel.$listElement.parent().css('background-color', color);\r\n        this.workspaceListPanel.$listElement.parent().css('background-color', color);\r\n\r\n        this.workspaceListPanel.setCaption(caption);\r\n    }\r\n\r\n    getNewModule(file: File): Module {\r\n        return new Module(file, this.main);\r\n    }\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class RightDiv {\r\n\r\n    isWholePage: boolean = false;\r\n\r\n    $tabs: JQuery<HTMLElement>;\r\n    $headings: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $rightDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$tabs = $rightDiv.find('.jo_tabs');\r\n        this.$headings = $rightDiv.find('.jo_tabheadings');\r\n        \r\n        let withClassDiagram = this.$headings.find('.jo_classDiagramTabHeading').length > 0;\r\n        let withObjectDiagram = this.$headings.find('.jo_objectDiagramTabHeading').length > 0;\r\n\r\n        let that = this;\r\n        let rightdiv_width: string = \"100%\";\r\n        $rightDiv.find('.jo_whole-window').on(\"click\", () => {\r\n\r\n            that.isWholePage = !that.isWholePage;\r\n            \r\n            let $wholeWindow = jQuery('.jo_whole-window');\r\n\r\n            if (!that.isWholePage) {\r\n                jQuery('#code').css('display', 'flex');\r\n                jQuery('#rightdiv').css('width', rightdiv_width);\r\n                // jQuery('#run').css('width', '');\r\n                $wholeWindow.removeClass('img_whole-window-back');\r\n                $wholeWindow.addClass('img_whole-window');\r\n                jQuery('#controls').insertAfter(jQuery('#view-mode'));\r\n                $wholeWindow.attr('title', 'Auf Fenstergröße vergrößern');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            } else {\r\n                jQuery('#code').css('display', 'none');\r\n                rightdiv_width = jQuery('#rightdiv').css('width');\r\n                jQuery('#rightdiv').css('width', '100%');\r\n                $wholeWindow.removeClass('img_whole-window');\r\n                $wholeWindow.addClass('img_whole-window-back');\r\n                // that.adjustWidthToWorld();\r\n                jQuery('.jo_control-container').append(jQuery('#controls'));\r\n                $wholeWindow.attr('title', 'Auf normale Größe zurückführen');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$rightDiv);\r\n    }\r\n\r\n\r\n\r\n}","import { jo_mouseDetected } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\nexport class Sliders {\r\n\r\n    main: Main;\r\n\r\n    constructor(main: Main) {\r\n        this.main = main;\r\n    }\r\n\r\n    initSliders() {\r\n        let that = this;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        jQuery('#slider1').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider1\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                \r\n                that.moveLeftPanel(dx);\r\n\r\n                x = mm.clientX;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider1\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider1\");\r\n                jQuery(document).off(mousePointer + \"up.slider1\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider2').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider2\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n\r\n                that.moveBottomDiv(dy);\r\n\r\n                y = mm.clientY;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider2\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider2\");\r\n                jQuery(document).off(mousePointer + \"up.slider2\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider3').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider3\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n\r\n                that.moveRightDiv(dx);\r\n\r\n                x = mm.clientX;\r\n                mm.stopPropagation();\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider3\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider3\");\r\n                jQuery(document).off(mousePointer + \"up.slider3\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        let sliderknobLeft = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"left: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobLeft);\r\n        sliderknobLeft.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopImmediatePropagation();\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobleft\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopImmediatePropagation();\r\n\r\n                that.moveLeftPanel(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobleft\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobleft\");\r\n                jQuery(document).off(mousePointer + \"up.knobleft\");\r\n            });\r\n\r\n        });\r\n\r\n        let sliderknobRight = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"right: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobRight);\r\n        sliderknobRight.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopImmediatePropagation();\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobright\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopImmediatePropagation();\r\n\r\n                that.moveRightDiv(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobright\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobright\");\r\n                jQuery(document).off(mousePointer + \"up.knobright\");\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n    \r\n    moveRightDiv(dx: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $rightDiv = jQuery('#rightdiv');\r\n\r\n        let width = Number.parseInt($rightDiv.css('width').replace('px', ''));\r\n        $rightDiv.css('width', (width - dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth + dx) + \"px\");\r\n        \r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n        jQuery('.jo_graphics').trigger('sizeChanged');\r\n        width += dx;\r\n}\r\n    moveBottomDiv(dy: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $bottomDiv = jQuery('#bottomdiv-outer');\r\n\r\n        let height = Number.parseInt($bottomDiv.css('height').replace('px', ''));\r\n        $bottomDiv.css('height', (height - dy) + \"px\");\r\n\r\n        let meheight = Number.parseInt($editor.css('height').replace('px', ''));\r\n        $editor.css('height', (meheight + dy) + \"px\");\r\n\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n}\r\n\r\n    moveLeftPanel(dx: number) {\r\n        let $leftPanel = jQuery('#leftpanel');\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n\r\n        let width = Number.parseInt($leftPanel.css('width').replace('px', ''));\r\n        $leftPanel.css('width', (width + dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth - dx) + \"px\");\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionPanel, AccordionElement } from \"./Accordion.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassData, UserData, CRUDUserRequest, CRUDClassRequest, GetWorkspacesResponse, GetWorkspacesRequest, Workspaces } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\nexport class TeacherExplorer {\r\n\r\n    studentPanel: AccordionPanel;\r\n    classPanel: AccordionPanel;\r\n\r\n    // save them here when displaying pupils workspaces:\r\n    ownWorkspaces: Workspace[];\r\n    currentOwnWorkspace: Workspace;\r\n\r\n    constructor(private main: Main, private classData: ClassData[]) {\r\n\r\n    }\r\n\r\n    removePanels() {\r\n        this.classPanel.remove();\r\n        this.studentPanel.remove();\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.initStudentPanel();\r\n\r\n        this.initClassPanel();\r\n\r\n        this.renderClasses(this.classData);\r\n\r\n    }\r\n\r\n    initStudentPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.studentPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Schüler/innen\", \"2\", null,\r\n            \"\", \"student\", false, false, \"student\", false, []);\r\n\r\n        this.studentPanel.selectCallback = (ae: UserData) => {\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let request: GetWorkspacesRequest = {\r\n                    ws_userId: ae.id,\r\n                    userId: this.main.user.id,\r\n                    language: 1\r\n                }\r\n\r\n                ajax(\"getWorkspaces\", request, (response: GetWorkspacesResponse) => {\r\n                    if (response.success == true) {\r\n\r\n                        if (that.main.workspacesOwnerId == that.main.user.id) {\r\n                            that.ownWorkspaces = that.main.workspaceList.slice();\r\n                            that.currentOwnWorkspace = that.main.currentWorkspace;\r\n                        }\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces);\r\n                        that.main.workspacesOwnerId = ae.id;\r\n                        that.main.projectExplorer.setExplorerColor(\"rgba(255, 0, 0, 0.2\");\r\n                        that.main.projectExplorer.$homeAction.show();\r\n                        Helper.showHelper(\"homeButtonHelper\", this.main);\r\n\r\n                        that.main.bottomDiv.showHomeworkTab();\r\n                        that.main.bottomDiv.homeworkManager.attachToWorkspaces(that.main.workspaceList);\r\n                    }\r\n\r\n                    this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n                    this.main.networkManager.secondsTillNextUpdate = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    restoreOwnWorkspaces() {\r\n        let main = this.main;\r\n\r\n        // main.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n        main.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        main.workspaceList = this.ownWorkspaces;\r\n        main.currentWorkspace = this.currentOwnWorkspace;\r\n        main.workspacesOwnerId = main.user.id;\r\n        main.projectExplorer.setExplorerColor(null);\r\n\r\n        main.projectExplorer.renderWorkspaces(main.workspaceList);\r\n\r\n        if (main.currentWorkspace == null && main.workspaceList.length > 0) {\r\n            main.currentWorkspace = main.workspaceList[0];\r\n        }\r\n\r\n        if (main.currentWorkspace != null) {\r\n            main.projectExplorer.setWorkspaceActive(main.currentWorkspace);\r\n        }\r\n\r\n        this.studentPanel.select(null, false);\r\n\r\n    }\r\n\r\n    initClassPanel() {\r\n        let that = this;\r\n\r\n        this.classPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Klassen\", \"1\", null, \"\", \"class\", false, false, \"class\", false, []);\r\n\r\n        this.classPanel.selectCallback = (ea) => {\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let classData = <ClassData>ea;\r\n                if (classData != null) {\r\n                    this.renderStudents(classData.students);\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    renderStudents(userDataList: UserData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        userDataList.sort((a, b) => {\r\n            if (a.familienname > b.familienname) return 1;\r\n            if (b.familienname > a.familienname) return -1;\r\n            if (a.rufname > b.rufname) return 1;\r\n            if (b.rufname > a.rufname) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let ud of userDataList) {\r\n            let ae: AccordionElement = {\r\n                name: ud.familienname + \", \" + ud.rufname,\r\n                sortName: ud.familienname + \" \" + ud.rufname,\r\n                externalElement: ud,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.studentPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n    renderClasses(classDataList: ClassData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        classDataList.sort((a, b) => {\r\n            if (a.name > b.name) return 1;\r\n            if (b.name > a.name) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let cd of classDataList) {\r\n            let ae: AccordionElement = {\r\n                name: cd.name,\r\n                externalElement: cd,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.classPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","export type DialogButton = {\r\n    caption: string,\r\n    color: string,\r\n    callback: () => void\r\n}\r\n\r\nexport class Dialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            '<div style=\"flex: 1\"></div>' +\r\n            '<div class=\"dialog-main\"></div>' +\r\n            '<div style=\"flex: 4\"></div>'\r\n        ));\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n    }\r\n\r\n    heading(text: string) {\r\n        let $div = jQuery('<div class=\"dialog-heading\">' + text + \"</div>\")\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    description(text: string, color?: string) {\r\n        let colorStyle = color == null ? \"\" : `style=\"color: ${color}\"`;\r\n        let $div = jQuery(`<div class=\"dialog-description\" ${colorStyle}>${text}</div>`)\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    input(type: string, placeholder: string):JQuery<HTMLInputElement> {\r\n        let $div = jQuery(`<input class=\"dialog-input\" type=\"${type}\" placeholder=\"${placeholder}\"></input>`)\r\n        this.$dialogMain.append($div);\r\n        return <any>$div;\r\n    }\r\n\r\n    buttons(buttons: DialogButton[]){\r\n\r\n        let $buttonRow = jQuery('<div class=\"dialog-buttonRow\"></div>')\r\n        this.$dialogMain.append($buttonRow);\r\n\r\n        for(let button of buttons){\r\n\r\n            let $button = jQuery(`<button style=\"background-color: ${button.color};margin-left: 20px\">${button.caption}</button>`)\r\n            $button.on(\"click\", () => {button.callback()})\r\n            $buttonRow.append($button);\r\n        }\r\n    }\r\n\r\n    waitMessage(text: string): (visible: boolean) => void {\r\n\r\n        let $message = jQuery(`<div class=\"dialog-wait\">${text}<img src=\"assets/projectexplorer/svg-loaders/ball-triangle.svg\"></div>`)\r\n        this.$dialogMain.append($message);\r\n\r\n        return (visible: boolean) => {\r\n            let visibility = visible ? \"visible\" : \"hidden\";\r\n            $message.css(\"visibility\", visibility);\r\n        }\r\n\r\n    }\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { openContextMenu, ContextMenuItem } from \"../../tools/HtmlTools.js\";\r\nimport { Dialog } from \"./Dialog.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\n\r\nexport class UserMenu {\r\n\r\n\r\n\r\n    constructor(private main: Main){\r\n        \r\n    }\r\n\r\n    init(){\r\n        let $userSettingsButton = jQuery('#buttonUserSettings');\r\n        let that = this;\r\n\r\n        $userSettingsButton.on(\"click\", (e) => {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [\r\n                {\r\n                    caption: \"Passwort ändern...\",\r\n                    callback: () => {\r\n                        let passwortChanger = new PasswordChanger(that.main);\r\n                        passwortChanger.show();\r\n                    }\r\n                }\r\n            ]\r\n\r\n\r\n            openContextMenu(contextMenuItems, $userSettingsButton.offset().left, $userSettingsButton.offset().top + $userSettingsButton.height());\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class PasswordChanger {\r\n\r\n    dialog: Dialog;\r\n\r\n    constructor(private main: Main){\r\n\r\n        this.dialog = new Dialog();\r\n\r\n    }\r\n\r\n    show() {\r\n        this.dialog.init();\r\n        this.dialog.heading(\"Passwort ändern\");\r\n        this.dialog.description(\"Bitte geben Sie Ihr bisheriges Passwort und darunter zweimal Ihr neues Passwort ein. <br>\" + \r\n        \"Das Passwort muss mindestens 8 Zeichen lang sein und sowohl Buchstaben als auch Zahlen oder Sonderzeichen enthalten.\")\r\n        let $oldPassword = this.dialog.input(\"password\", \"Altes Passwort\");\r\n        let $newPassword1 = this.dialog.input(\"password\", \"Neues Passwort\");\r\n        let $newPassword2 = this.dialog.input(\"password\", \"Neues Passwort wiederholen\");\r\n        let $errorDiv = this.dialog.description(\"\", \"red\");\r\n        let waitDiv = this.dialog.waitMessage(\"Bitte warten...\")\r\n\r\n        this.dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {this.dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    if($newPassword1.val() != $newPassword2.val()){\r\n                        $errorDiv.text(\"Die zwei eingegebenen neuen Passwörter stimmen nicht überein.\")\r\n                    } else {\r\n                        waitDiv(true);\r\n                        ajax(\"changePassword\", {oldPassword: $oldPassword.val(), newPassword: $newPassword1.val()}, () => {\r\n                            waitDiv(false);\r\n                            alert(\"Das Passwort wurde erfolgreich geändert.\");\r\n                            this.dialog.close();\r\n                        }, (message) => {\r\n                            waitDiv(false);\r\n                            $errorDiv.text(message)\r\n                        })\r\n                    }\r\n\r\n                }\r\n            },\r\n        ])\r\n    }\r\n\r\n}","import { ajax } from \"../communication/AjaxHelper.js\";\r\nimport { LoginRequest, LoginResponse, LogoutRequest, UserData } from \"../communication/Data.js\";\r\nimport { Main } from \"./Main.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { userInfo } from \"os\";\r\nimport { UserMenu } from \"./gui/UserMenu.js\";\r\nimport { escapeHtml } from \"../tools/StringTools.js\";\r\n\r\nexport class Login {\r\n\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        let that = this;\r\n\r\n        let $loginSpinner = jQuery('#login-spinner>img');\r\n\r\n        jQuery('#login-username').focus();\r\n\r\n        jQuery('#login-username').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-password').focus();\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-button').focus();\r\n                jQuery('#login-button').addClass('jo_active');\r\n            }\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-button').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-username').focus();\r\n                jQuery('#login-button').removeClass('jo_active');\r\n            } else {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        // Avoid double login when user does doubleclick:\r\n        let loginHappened = false;\r\n        jQuery('#login-button').on('click', () => {\r\n\r\n            $loginSpinner.show();\r\n\r\n            if (loginHappened) return;\r\n            loginHappened = true;\r\n\r\n            setTimeout(() => {\r\n                loginHappened = false;\r\n            }, 1000);\r\n\r\n            let loginRequest: LoginRequest = {\r\n                username: <string>jQuery('#login-username').val(),\r\n                password: <string>jQuery('#login-password').val(),\r\n                language: 1\r\n            }\r\n\r\n            ajax('login', loginRequest, (response: LoginResponse) => {\r\n\r\n                if (!response.success) {\r\n                    jQuery('#login-message').html('Fehler: Benutzername und/oder Passwort ist falsch.');\r\n                } else {\r\n\r\n                    // We don't do this anymore for security reasons - see AjaxHelper.ts\r\n                    // Alternatively we now set a long expiry interval for cookie.\r\n                    // credentials.username = loginRequest.username;\r\n                    // credentials.password = loginRequest.password;\r\n\r\n                    jQuery('#login').hide();\r\n\r\n                    this.main.waitOverlay.show('Bitte warten...');\r\n\r\n                    let user: UserData = response.user;\r\n                    if (user.settings == null || user.settings.helperHistory == null) {\r\n                        user.settings = {\r\n                            helperHistory: {\r\n                            },\r\n                            viewModes: null,\r\n                            classDiagram: null\r\n                        }\r\n                    }\r\n\r\n                    this.main.waitForGUICallback = () => {\r\n\r\n                        that.main.mainMenu.initGUI(user);\r\n\r\n                        that.main.waitOverlay.hide();\r\n                        $loginSpinner.hide();\r\n                        jQuery('#menupanel-username').html(escapeHtml(user.rufname) + \" \" + escapeHtml(user.familienname));\r\n\r\n                        new UserMenu(that.main).init();\r\n\r\n                        if (user.is_teacher) {\r\n                            that.main.initTeacherExplorer(response.classdata);\r\n                        }\r\n\r\n                        that.main.user = user;\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces);\r\n                        that.main.workspacesOwnerId = user.id;\r\n\r\n                        that.main.networkManager.initializeTimer();\r\n\r\n                        that.main.projectExplorer.fileListPanel.setFixed(!user.is_teacher);\r\n                        that.main.projectExplorer.workspaceListPanel.setFixed(!user.is_teacher);\r\n\r\n                        that.main.viewModeController.initViewMode();\r\n                        that.main.bottomDiv.hideHomeworkTab();\r\n\r\n                    }\r\n\r\n                    if (this.main.startupComplete == 0) {\r\n                        this.main.waitForGUICallback();\r\n                        this.main.waitForGUICallback = null;\r\n                    }\r\n\r\n                }\r\n\r\n            }, (errorMessage: string) => {\r\n                jQuery('#login-message').html('Login gescheitert: ' + errorMessage);\r\n            }\r\n            );\r\n\r\n        });\r\n\r\n        jQuery('#buttonLogout').on('click', () => {\r\n\r\n            this.main.waitOverlay.show('Bitte warten, der letzte Bearbeitungsstand wird noch gespeichert ...');\r\n\r\n            if (this.main.workspacesOwnerId != this.main.user.id) {\r\n                this.main.projectExplorer.onHomeButtonClicked();\r\n            }\r\n\r\n            this.main.networkManager.sendUpdates(() => {\r\n\r\n                let logoutRequest: LogoutRequest = {\r\n                    currentWorkspaceId: this.main.currentWorkspace?.id\r\n                }\r\n\r\n                ajax('logout', logoutRequest, () => {\r\n                    // window.location.href = 'index.html';\r\n                    this.main.networkManager.sendUpdateUserSettings(() => {});\r\n\r\n                    jQuery('#login').show();\r\n                    this.main.waitOverlay.hide();\r\n                    jQuery('#login-message').empty();\r\n                    this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"\", \"myJava\"));\r\n                    this.main.projectExplorer.fileListPanel.clear();\r\n                    this.main.projectExplorer.workspaceListPanel.clear();\r\n\r\n                    this.main.databaseExplorer.clear();\r\n                    this.main.resultsetPresenter.clear();\r\n\r\n                    if (this.main.user.is_teacher) {\r\n                        this.main.teacherExplorer.removePanels();\r\n                        this.main.teacherExplorer = null;\r\n                    }\r\n\r\n\r\n                    this.main.currentWorkspace = null;\r\n                    this.main.user = null;\r\n\r\n\r\n                });\r\n            });\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\nimport { ViewModes, ViewMode } from \"../../communication/Data\";\r\n\r\nexport class ViewModeController {\r\n\r\n    $buttonEditorFullscreen: JQuery<HTMLElement>;\r\n    $buttonPresentationMode: JQuery<HTMLElement>;\r\n    $buttonMonitorMode: JQuery<HTMLElement>;\r\n\r\n    $buttonMap: { [key: string]: JQuery<HTMLElement> } = {};\r\n\r\n    highContrast: boolean = false;\r\n    editorHasFullWidth: boolean = false;\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private main: Main) {\r\n\r\n        this.$buttonEditorFullscreen = jQuery('<div title=\"Editor in voller Breite\" class=\"img_whole-window jo_button jo_active\" style=\"padding: 1px; margin-right: 20px\"></div>');\r\n        this.$buttonPresentationMode = jQuery('<div title=\"Präsentation (Beamer)\" class=\"img_presentation-mode jo_button jo_active\" syle=\"padding: 1px\"></div>');\r\n        this.$buttonMonitorMode = jQuery('<div title=\"Monitor\" class=\"img_monitor-mode jo_button jo_active\" style=\"margin-left: 5px; padding: 1px\"></div>');\r\n        $buttonsContainer.append(this.$buttonEditorFullscreen, this.$buttonPresentationMode, this.$buttonMonitorMode);\r\n\r\n        this.$buttonMap = {\r\n            \"presentation\": this.$buttonPresentationMode,\r\n            \"monitor\": this.$buttonMonitorMode\r\n        };\r\n\r\n        let am = this.main.actionManager;\r\n\r\n        am.registerAction(\"editor.fullwidth\", [],\r\n            () => {\r\n                this.toggleEditorFullwidth();\r\n            }, \"Editor auf die volle Breite erweitern\", this.$buttonEditorFullscreen);\r\n\r\n        am.registerAction(\"viewmode.presentation\", [],\r\n            () => {\r\n                this.setMode(\"presentation\");\r\n            }, \"Präsentationsansicht\", this.$buttonPresentationMode);\r\n\r\n        am.registerAction(\"viewmode.monitor\", [],\r\n            () => {\r\n                this.setMode(\"monitor\");\r\n            }, \"Monitoransicht\", this.$buttonMonitorMode);\r\n\r\n    }\r\n\r\n    toggleEditorFullwidth() {\r\n        if(this.editorHasFullWidth){\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in voller Breite');\r\n            jQuery('#rightdiv').show(600);\r\n            jQuery('#leftpanel').show(600);\r\n            jQuery('#controls').show();\r\n        } else {\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in normaler Breite');\r\n            jQuery('#rightdiv').hide(600);\r\n            jQuery('#leftpanel').hide(600);\r\n            jQuery('#controls').hide();\r\n        }\r\n\r\n        setTimeout(()=>{\r\n            this.main.getMonacoEditor().layout();\r\n        }, 800);\r\n\r\n        this.editorHasFullWidth = !this.editorHasFullWidth;\r\n    }\r\n\r\n    setMode(mode: \"presentation\" | \"monitor\", saveSettings: boolean = true) {\r\n\r\n        let otherMode = mode == \"presentation\" ? \"monitor\" : \"presentation\";\r\n\r\n        this.$buttonMap[mode].addClass(\"jo_pressed\");\r\n        this.$buttonMap[otherMode].removeClass(\"jo_pressed\");\r\n\r\n        let settings = this.main.user.settings;\r\n        let viewModes = settings.viewModes;\r\n\r\n        let viewMode = viewModes[mode];\r\n        viewModes.viewModeChosen = mode;\r\n\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n\r\n        this.main.editor.setFontSize(viewMode.fontSize);\r\n\r\n        if (this.highContrast != viewMode.highContrast) {\r\n            let editor = this.main.getMonacoEditor();\r\n            editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n            this.highContrast = !this.highContrast;\r\n        }\r\n\r\n        if (saveSettings) this.saveSettings();\r\n\r\n    }\r\n\r\n    saveFontSize(fontSizePx: number) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.fontSize = fontSizePx;\r\n        this.saveSettings();\r\n    }\r\n\r\n    setTheme(theme: string) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.theme = theme;\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n        this.saveSettings();\r\n    }\r\n\r\n    toggleHighContrast() {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.highContrast = !viewMode.highContrast;\r\n        let editor = this.main.getMonacoEditor();\r\n        editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n        this.saveSettings();\r\n    }\r\n\r\n    getChosenViewMode(): ViewMode {\r\n        let viewModes = this.main.user.settings.viewModes;\r\n        return viewModes[viewModes.viewModeChosen];\r\n    }\r\n\r\n    saveSettings() {\r\n        this.main.userDataDirty = true;\r\n    }\r\n\r\n    initViewMode() {\r\n        let settings = this.main.user.settings;\r\n\r\n        if (settings[\"viewModes\"] == null) {\r\n            settings[\"viewModes\"] = {\r\n                monitor: null,\r\n                presentation: null,\r\n                viewModeChosen: \"monitor\"\r\n            }\r\n        }\r\n\r\n        if (settings.viewModes.monitor == null) {\r\n            settings.viewModes.monitor = {\r\n                fontSize: 14,\r\n                highContrast: false,\r\n                theme: \"dark\"\r\n            };\r\n\r\n            settings.viewModes.presentation = {\r\n                fontSize: 18,\r\n                highContrast: false,\r\n                theme: \"light\"\r\n            }\r\n            this.saveSettings();\r\n        }\r\n        this.setMode(settings.viewModes.viewModeChosen, false);\r\n    }\r\n\r\n\r\n}","import { Main } from \"../../main/Main.js\";\r\nimport { TextPosition } from \"../lexer/Token\";\r\nimport { Module } from \"./Module\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype SemicolonPosition = {\r\n    position: TextPosition;\r\n    module: Module;\r\n    firstSeenMs: number;\r\n    isThereAgain: boolean;\r\n}\r\n\r\nexport class SemicolonAngel {\r\n    \r\n    semicolonPositions: SemicolonPosition[] = [];\r\n    time: number;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    startRegistering(){\r\n        this.semicolonPositions.forEach(p => p.isThereAgain = false);\r\n        this.time = new Date().getTime();\r\n    }\r\n\r\n    register(position: TextPosition, module: Module){\r\n        let oldEvidence = this.semicolonPositions.find(p => p.position.line == position.line && p.position.column == position.column);\r\n        if(oldEvidence){\r\n            oldEvidence.isThereAgain = true;\r\n        } else {\r\n            this.semicolonPositions.push({position: position, firstSeenMs: this.time, isThereAgain: true, module: module});\r\n        }\r\n    }\r\n\r\n    healSemicolons(){\r\n        let time = new Date().getTime();\r\n        this.semicolonPositions = this.semicolonPositions.filter(p => p.isThereAgain);\r\n\r\n        let currentlyEditedModule = this.main.getCurrentlyEditedModule();\r\n        let cursorLine = this.main.getMonacoEditor().getPosition().lineNumber;\r\n\r\n        this.semicolonPositions.filter(p => time - p.firstSeenMs > 2000).forEach(p => {\r\n\r\n            let isCurrentModule = p.module.file.id != null && p.module.file.id == currentlyEditedModule.file.id;\r\n\r\n            let editOperations: monaco.editor.IIdentifiedSingleEditOperation[] = [\r\n                {\r\n                    range: new monaco.Range(p.position.line, p.position.column, p.position.line, p.position.column),\r\n                    text: \";\",\r\n                    forceMoveMarkers: true\r\n                }\r\n            ]\r\n\r\n            if(isCurrentModule){\r\n                if(Math.abs(cursorLine - p.position.line) > 1){\r\n                    let editor = this.main.getMonacoEditor();\r\n                    const selection = editor.getSelection();\r\n                    editor.executeEdits('Semicolon-Angel', editOperations);\r\n                    editor.setSelection(selection);\r\n                    this.semicolonPositions.splice(this.semicolonPositions.indexOf(p), 1);\r\n                }\r\n            } \r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\nimport { Table, Column } from \"../../compiler/parser/SQLTable.js\";\nimport { DatabaseStructure } from \"../../tools/DatabaseTools.js\";\n\nexport class DatabaseExplorer {\n\n    collapsedTables: Map<string, boolean> = new Map();\n\n    constructor(private main: MainBase, public $mainDiv: JQuery<HTMLElement>) {\n\n    }\n\n    refresh() {\n\n        let dbTool = this.main.getDatabaseTool();\n\n        dbTool.retrieveDatabaseStructure((dbstructure: DatabaseStructure) => {\n\n            this.refreshAfterRetrievingDBStructure();\n        });\n\n    }\n\n    clear(){\n        this.$mainDiv.empty();\n    }\n\n    refreshAfterRetrievingDBStructure() {\n        let dbTool = this.main.getDatabaseTool();\n        let workspace = this.main.getCurrentWorkspace();\n        if (workspace != null) {\n            for (let m of workspace.moduleStore.getModules(false)) {\n                m.file.dirty = true;\n            }\n        }\n\n        let tables = Table.fromTableStructureList(dbTool.databaseStructure.tables);\n\n        this.$mainDiv.empty();\n\n        for (let table of tables) {\n            if(table.identifier != \"sqlite_sequence\"){\n                let $table = this.renderTable(table);\n                this.$mainDiv.append($table);\n            }\n        }\n\n    }\n\n    renderTable(table: Table): JQuery<HTMLElement> {\n        let isCollapsed = this.collapsedTables.get(table.identifier) != null;\n\n        let $table = jQuery(\n            `<div class=\"jo_table\">\n           <div class=\"jo_tableheader\">\n              <div class=\"${isCollapsed ? 'img_tree-collapsed-dark' : 'img_tree-expanded-dark'} jo_treeswitch jo_button jo_active\"></div>\n              <div class=\"jo_tableheaderlink\">\n                <div class=\"img_table\"></div>\n                <div>${table.identifier}</div></div><div class=\"jo_tablesize\">(${table.size}&nbsp;Datensätze)</div>\n              </div>\n            </div>\n        </div>`);\n\n        $table.find('.jo_tableheader').on('pointerdown', () => {\n            this.main.getResultsetPresenter().showTable(table.identifier);\n\n        })\n\n        let $columns = jQuery('<div class=\"jo_columnlist\"></div>')\n\n        for (let column of table.columns) {\n            let image = column.isPrimaryKey ? \"img_key\" : \"img_column\";\n\n            let referencesHtml = \"\";\n            if (column.references != null) {\n                referencesHtml = `<div class=\"img_foreign_key\" style=\"margin-left: 5px\"></div><div class=\"jo_references\">${column.references.table.identifier}.${column.references.identifier}</div>`\n            }\n\n            let type = column.type == null ? \"\" : column.type.toString();\n            let notNull: string = column.notNull ? '<div class=\"jo_dbnotnull\">not null</div>' : \"\";\n            let defaultValue: string = column.defaultValue ? `<div class=\"jo_dbdefault\">default ${column.defaultValue}</div>` : \"\";\n            let autoincrement: string = column.isAutoIncrement ? `<div class=\"jo_dbautoincrement\">autoincrement</div>` : \"\";\n\n            let $column = jQuery(`\n            <div class=\"jo_column\">\n                <div class=\"${image}\"></div>\n                <div>${column.identifier}</div>\n                <div class=\"jo_dbtype\">${type}</div>\n                ${autoincrement}\n                ${referencesHtml}\n                ${notNull}\n                ${defaultValue}\n            </div>\n            `);\n            $columns.append($column);\n        }\n\n        $table.append($columns);\n\n        let $treeSwitch = $table.find('.jo_treeswitch');\n        let that = this;\n        $treeSwitch.on('click', () => {\n            let collapsed = $treeSwitch.hasClass('img_tree-collapsed-dark');\n            if (collapsed) {\n                $treeSwitch.removeClass('img_tree-collapsed-dark');\n                $treeSwitch.addClass('img_tree-expanded-dark');\n                $columns.slideDown(300);\n                that.collapsedTables.delete(table.identifier);\n            } else {\n                $treeSwitch.removeClass('img_tree-expanded-dark');\n                $treeSwitch.addClass('img_tree-collapsed-dark');\n                $columns.slideUp(300);\n                that.collapsedTables.set(table.identifier, true);\n            }\n        });\n\n        return $table;\n    }\n\n\n\n}","// <div id=\"controls\">\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n// </div>\r\n\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { ResultsetPresenter } from \"./ResultsetPresenter.js\";\r\n\r\n\r\nexport class ProgramControlButtons {\r\n\r\n    $buttonStart: JQuery<HTMLElement>;\r\n    // $buttonPause: JQuery<HTMLElement>;\r\n    // $buttonStop: JQuery<HTMLElement>;\r\n    // $buttonStepOver: JQuery<HTMLElement>;\r\n    // $buttonStepInto: JQuery<HTMLElement>;\r\n    // $buttonStepOut: JQuery<HTMLElement>;\r\n    // $buttonRestart: JQuery<HTMLElement>;\r\n\r\n    // $buttonEdit: JQuery<HTMLElement>;\r\n\r\n\r\n    constructor(private main: MainBase, private $buttonsContainer: JQuery<HTMLElement>) {\r\n\r\n        this.$buttonStart = jQuery('<div title=\"Start\" class=\"img_start-dark jo_button\"></div>');\r\n        let am = this.main.getActionManager();\r\n\r\n        am.registerAction(\"execute\", ['Strg + Enter'],\r\n            () => {\r\n                if (am.isActive(\"execute\")) {\r\n\r\n                    this.main.getResultsetPresenter().executeSelectedStatements();\r\n                }\r\n\r\n            }, \"SQL-Statement ausführen\", this.$buttonStart\r\n        );\r\n\r\n        am.setActive('execute',false);\r\n\r\n        // this.$buttonPause = jQuery('<div title=\"Pause\" class=\"img_pause-dark jo_button\"></div>');\r\n        // this.$buttonStop = jQuery('<div title=\"Stop\" class=\"img_stop-dark jo_button\"></div>');\r\n        // this.$buttonStepOver = jQuery('<div title=\"Step over\" class=\"img_step-over-dark jo_button\"></div>');\r\n        // this.$buttonStepInto = jQuery('<div title=\"Step into\" class=\"img_step-into-dark jo_button\"></div>');\r\n        // this.$buttonStepOut = jQuery('<div title=\"Step out\" class=\"img_step-out-dark jo_button\"></div>');\r\n        // this.$buttonRestart = jQuery('<div title=\"Restart\" class=\"img_restart-dark jo_button\"></div>');\r\n\r\n        // this.$buttonEdit = jQuery('<div class=\"jo_editButton\" title=\"Programm anhalten damit der Programmtext bearbeitbar wird\"></div>')\r\n        // $editorContainer.append(this.$buttonEdit);\r\n\r\n        $buttonsContainer.append(this.$buttonStart\r\n            // , this.$buttonPause, this.$buttonStop,\r\n            // this.$buttonStepOver, this.$buttonStepInto, this.$buttonStepOut, this.$buttonRestart\r\n        );\r\n\r\n        // <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n        // <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n        // <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n        // <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n        // <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n        // <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n        // <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n        // <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n\r\n\r\n\r\n    }\r\n\r\n}","import { TokenType } from \"../lexer/Token.js\";\r\nimport { ASTNode, ConstantNode, CreateTableColumnNode, CreateTableNode, ForeignKeyInfo, InsertNode } from \"./AST.js\";\r\nimport { SQLStatement } from \"./Parser.js\";\r\n\r\nexport class StatementCleaner {\r\n\r\n    clean(statement: SQLStatement): string {\r\n        switch(statement.ast.type){\r\n            case TokenType.keywordCreate:   // Create Table statement\r\n                statement.sqlCleaned = this.cleanCreateTableStatement(statement.ast);\r\n                return statement.sqlCleaned;\r\n            case TokenType.keywordInsert:\r\n                statement.sqlCleaned = this.cleanInsertStatement(statement.ast);\r\n                return statement.sqlCleaned;\r\n            default:\r\n                return statement.sql;\r\n                break;\r\n        }\r\n    }\r\n\r\n    cleanInsertStatement(ast: InsertNode): string {\r\n        let st: string = `insert into ${ast.table.identifier}`;\r\n\r\n        if(ast.columnList != null && ast.columnList.length > 0){\r\n            st += `(${ast.columnList.map(c => c.identifier).join(\", \")})`;\r\n        }\r\n\r\n        if(ast.values != null && ast.values.length > 0){\r\n            st += '\\nvalues';\r\n            let lines: string[] = [];\r\n            for(let vline of ast.values){\r\n                lines.push(`\\n(${vline.map(v => this.cleanValue(v)).join(\", \")})`);\r\n            }\r\n            st += lines.join(\", \");\r\n        }\r\n\r\n        return st + \";\";\r\n    }\r\n\r\n    cleanValue(v: ConstantNode){\r\n        if(v.constantType == TokenType.stringConstant){\r\n            let s: string = v.constant;\r\n            s = s.replace(/'/g, \"''\");\r\n            return `'${s}'`;\r\n        }else {\r\n            return v.constant;\r\n        }\r\n    }\r\n\r\n    cleanCreateTableStatement(ast: CreateTableNode): string {\r\n        let st: string = `create table ${ast.identifier}(\\n   `;\r\n\r\n        st += ast.columnList.map( column => this.cleanColumnDef(column)).join(\",\\n   \");\r\n        if(ast.foreignKeyInfoList != null && ast.foreignKeyInfoList.length > 0){\r\n            st += \",\\n\" + ast.foreignKeyInfoList.map(fki => this.cleanForeignKeyInfo(fki)).join(\",\\n   \");\r\n        }\r\n        if(ast.combinedPrimaryKeyColumns!= null && ast.combinedPrimaryKeyColumns.length > 0){\r\n            st += `,\\nprimary key(${ast.combinedPrimaryKeyColumns.join(\", \")})`;\r\n        }\r\n        st += '\\n);';\r\n\r\n        return st;\r\n    }\r\n\r\n    cleanForeignKeyInfo(fki: ForeignKeyInfo): string {\r\n        return `${fki.column} references ${fki.referencesTable}(${fki.referencesColumn})`;\r\n    }\r\n\r\n    cleanColumnDef(column: CreateTableColumnNode):string {\r\n\r\n        let type = column.baseType.toString();\r\n        if(type == \"int\" && column.isAutoIncrement){\r\n            type = \"integer\";\r\n        }\r\n\r\n        let st: string = `${column.identifier} ${type}`;\r\n        if(column.parameters != null && column.parameters.length > 0){\r\n            st += `(${column.parameters.join(\", \")})`;\r\n        }\r\n        if(column.notNull){\r\n            st += \" not null\";\r\n        }\r\n        if(column.defaultValue != null){\r\n            st += \" default \" + column.defaultValue;\r\n        }\r\n        if(column.isPrimary){\r\n            st += \" primary key\";\r\n        }\r\n        if(column.isAutoIncrement){\r\n            st += \" autoincrement\";\r\n        }\r\n        if(column.referencesColumn != null){\r\n            let c: string = column.referencesColumn;\r\n            if(column.referencesTable) c = column.referencesTable + \"(\" + c + \")\";\r\n            st += \" references \" + c;\r\n        }\r\n        if(column.collate != null){\r\n            let collate = column.collate.toLocaleLowerCase();\r\n            if([\"binary\", \"nocase\", \"rtrim\"].indexOf(collate) >= 0){\r\n                st += \" collate \" + collate;\r\n            }\r\n        }\r\n        let parameters = column.parameters? column.parameters : [0, 0];\r\n        let checkFunction = column.baseType.checkFunction(column.identifier, parameters);\r\n        if(checkFunction != \"\"){\r\n            st += \" \" + checkFunction;\r\n        }\r\n        return st;\r\n    }\r\n\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { SQLStatement } from \"../../compiler/parser/Parser.js\";\r\nimport { StatementCleaner } from \"../../compiler/parser/StatementCleaner.js\";\r\nimport { QueryResult } from \"../../tools/DatabaseTools.js\";\r\nimport { WDatabase } from \"../../workspace/WDatabase.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\ntype RuntimeError = {\r\n    statement: SQLStatement,\r\n    message: string\r\n}\r\n\r\nexport interface WriteQueryListener {\r\n    notify(statements: SQLStatement[]): void;\r\n}\r\n\r\nexport class ResultsetPresenter {\r\n\r\n    $paginationDiv: JQuery<HTMLDivElement>;\r\n    $infoDiv: JQuery<HTMLDivElement>;\r\n    $arrowLeft: JQuery<HTMLDivElement>;\r\n    $arrowRight: JQuery<HTMLDivElement>;\r\n\r\n    paginationFrom: number;\r\n    paginationAll: number;\r\n\r\n    paginationSize: number = 1000;\r\n\r\n    result: QueryResult;\r\n\r\n    writeQueryListeners: WriteQueryListener[] = [];\r\n\r\n    public static StatementDelimiter: string = \";\\n\\n\"\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$paginationDiv = jQuery('.jo_pagination');\r\n        this.$arrowLeft = jQuery('<div class=\"jo_button img_arrow-left-dark jo_active\"></div>');\r\n        this.$infoDiv = jQuery('<div class=\"jo_pagination_info\"><span class=\"jo_pagination_fromto\">0001 - 1000</span> von <span class=\"jo_pagination_all\">5000</span></div>');\r\n        this.$arrowRight = jQuery('<div class=\"jo_button img_arrow-right-dark jo_active\"></div>');\r\n\r\n        this.$paginationDiv.append(this.$arrowLeft, this.$infoDiv, this.$arrowRight);\r\n\r\n        this.$paginationDiv.hide();\r\n\r\n        let mousePointer = (window.PointerEvent ? \"pointer\" : \"mouse\") + 'up';\r\n\r\n        let that = this;\r\n        this.$arrowLeft.on(mousePointer, (e) => {\r\n            if (that.paginationFrom > 1) {\r\n                that.paginationFrom = Math.max(that.paginationFrom - that.paginationSize, 1);\r\n                if (that.paginationFrom % 1000 != 1) {\r\n                    that.paginationFrom = (Math.floor(that.paginationFrom / that.paginationSize) + 1) * that.paginationSize + 1;\r\n                }\r\n                that.showResults();\r\n                that.activateButtons();\r\n            }\r\n        })\r\n\r\n        this.$arrowRight.on(mousePointer, (e) => {\r\n            if (that.paginationFrom < this.paginationAll - that.paginationSize + 1) {\r\n                that.paginationFrom = Math.min(that.paginationFrom + that.paginationSize, that.paginationAll - that.paginationSize + 1);\r\n                that.showResults();\r\n                that.activateButtons();\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    public addWriteQueryListener(listener: WriteQueryListener) {\r\n        this.writeQueryListeners.push(listener);\r\n    }\r\n\r\n    private activateButtons() {\r\n        this.$arrowLeft.toggleClass('jo_active', this.paginationFrom > 1);\r\n        this.$arrowRight.toggleClass('jo_active', this.paginationFrom < this.paginationAll - this.paginationSize + 1);\r\n    }\r\n\r\n    executeSelectedStatements() {\r\n\r\n        let statements = this.fetchSelectedStatements();\r\n        if (statements.length == 0) return;\r\n\r\n        let hasDDLStatements: boolean = statements.some(st => this.isDDLStatement(st));\r\n        let hasWriteStatements: boolean = statements.some(st => this.isWriteStatement(st));\r\n        let workspace = this.main.getCurrentWorkspace();\r\n        let database = workspace.database;\r\n\r\n        if (hasDDLStatements && workspace.permissions <= 2) {\r\n            alert(\"Der Benutzer hat keine Berechtigung zum Ändern der Tabellenstruktur.\");\r\n            return;\r\n        }\r\n\r\n        if (hasWriteStatements && workspace.permissions <= 1) {\r\n            alert(\"Der Benutzer hat keine Berechtigung zum Einfügen/Löschen/Ändern von Datensätzen.\");\r\n            return;\r\n        }\r\n\r\n        if (hasDDLStatements || hasWriteStatements) {\r\n            if (this.main.isEmbedded()) {\r\n                this.executeDDLWriteStatementsEmbedded(workspace, statements, database);\r\n\r\n            } else {\r\n                this.executeDDLWriteStatementsInOnlineIDE(workspace, statements, database);\r\n            }\r\n\r\n        } else {\r\n            this.executeStatements(statements, 0, [], () => { });\r\n        }\r\n\r\n    }\r\n\r\n    executeDDLWriteStatementsEmbedded(workspace: Workspace, statements: SQLStatement[], database: WDatabase) {\r\n        let sucessfullyExecutedModifyingStatements: SQLStatement[] = [];\r\n        this.executeStatements(statements, 0, sucessfullyExecutedModifyingStatements, () => {\r\n\r\n            if (sucessfullyExecutedModifyingStatements.length == 0)\r\n                return;\r\n\r\n            this.main.getDatabaseExplorer().refresh();\r\n\r\n            this.writeQueryListeners.forEach(listener => listener.notify(sucessfullyExecutedModifyingStatements))\r\n        })\r\n    }\r\n\r\n    private executeDDLWriteStatementsInOnlineIDE(workspace: Workspace, statements: SQLStatement[], database: WDatabase) {\r\n        let main: Main = <Main>this.main;\r\n        // Step 1: Update Database to newest version to avoid potential database reset\r\n        main.networkManager.getNewStatements(workspace, (new_statements, firstStatementIndex) => {\r\n\r\n            main.notifier.executeNewStatements(new_statements, firstStatementIndex, () => { },\r\n                () => {\r\n                    // Step 2: Execute new statements to see which are successful\r\n                    let sucessfullyExecutedModifyingStatements: SQLStatement[] = [];\r\n                    this.executeStatements(statements, 0, sucessfullyExecutedModifyingStatements, () => {\r\n\r\n                        if (sucessfullyExecutedModifyingStatements.length == 0)\r\n                            return;\r\n\r\n                        // Step 3: Send successful statements to server in order to retrieve new db-version-number\r\n                        main.networkManager.AddDatabaseStatements(workspace, sucessfullyExecutedModifyingStatements.map(st => st.sqlCleaned == null ? st.sql : st.sqlCleaned), (statements_before, new_version) => {\r\n\r\n                            // Step 4: If another user sent statements between steps 1 and 3 then they are in array statements_before.\r\n                            // Add all new statements to local statement list\r\n                            statements_before.forEach(st => database.statements.push(st));\r\n                            this.main.getHistoryViewer().appendStatements(statements_before);\r\n                            let modifyingStatements = sucessfullyExecutedModifyingStatements.map(st => st.sqlCleaned == null ? st.sql : st.sqlCleaned)\r\n                            database.statements = database.statements.concat(modifyingStatements);\r\n                            this.main.getHistoryViewer().appendStatements(modifyingStatements);\r\n                            database.version = new_version;\r\n\r\n                            // Step 5 (worst case): statements before is not empty, so the should be executed before the statements executed in step 2\r\n                            // => clear whole database and execute all statements in the right order, beginning with a empty database.\r\n                            if (statements_before.length > 0) {\r\n\r\n                                this.resetDatabase(database);\r\n\r\n                            } else {\r\n\r\n                                main.getDatabaseExplorer().refresh();\r\n\r\n                            }\r\n\r\n                        });\r\n                    });\r\n                }, false);\r\n        });\r\n    }\r\n\r\n    resetDatabase(database: WDatabase) {\r\n        this.main.getDatabaseTool().initializeWorker(database.templateDump, database.statements, () => {\r\n            this.main.getDatabaseExplorer().refresh();\r\n        })\r\n    }\r\n\r\n    executeStatementsString(statements: string[], fromIndex: number, callback: () => void) {\r\n        if (statements.length == 0) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (fromIndex < statements.length) {\r\n            this.main.getDatabaseTool().executeQuery(statements[fromIndex],\r\n                (results) => { this.executeStatementsString(statements, fromIndex + 1, callback) },\r\n                (error) => { console.log(\"Error when executing statement \" + statements[fromIndex] + \"\\nError : \" + error); this.executeStatementsString(statements, fromIndex + 1, callback) });\r\n        } else {\r\n            callback();\r\n        }\r\n    }\r\n\r\n\r\n    executeStatements(statements: SQLStatement[], index: number, successfullyExecutedModifyingStatements: SQLStatement[], callback: () => void, errors: RuntimeError[] = []) {\r\n\r\n        if (index >= statements.length) {\r\n            this.showErrors(errors);\r\n\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        let statement = statements[index];\r\n\r\n\r\n        let callback1 = () => {\r\n            this.executeStatements(statements, index + 1, successfullyExecutedModifyingStatements, callback, errors);\r\n        }\r\n\r\n        if (statement.ast == null) {\r\n            callback1();\r\n            return;\r\n        }\r\n\r\n        if (statement.ast.type == TokenType.keywordSelect) {\r\n            let laterSelectExists: boolean = false;\r\n            for (let j = index + 1; j < statements.length; j++) laterSelectExists = laterSelectExists || this.isSelectStatement(statements[j]);\r\n            if (laterSelectExists) {\r\n                callback1();\r\n            } else {\r\n                if (statement.ast.limitNode == null) {\r\n                    statement.sql.trimRight();\r\n                    while (statement.sql.endsWith(\";\") || statement.sql.endsWith(\"\\n\") || statement.sql.endsWith(\"\\r\")) {\r\n                        statement.sql = statement.sql.substring(0, statement.sql.length - 1);\r\n                        statement.sql.trimRight();\r\n                    }\r\n                    statement.sql += \" limit 100000\";\r\n                }\r\n                this.main.getDatabaseTool().executeQuery(statement.sql,\r\n                    (results) => { this.presentResultsIntern(statement.sql, results); callback1(); },\r\n                    (error) => { errors.push({ statement: statement, message: error }); callback1(); });\r\n            }\r\n        } else {\r\n            let sql = new StatementCleaner().clean(statement);\r\n            console.log(sql);\r\n            this.main.getDatabaseTool().executeQuery(sql, (results) => { successfullyExecutedModifyingStatements.push(statement); callback1(); }, (error) => { errors.push({ statement: statement, message: error }); callback1(); });\r\n        }\r\n\r\n    }\r\n\r\n    oldErrorDecorations: string[] = [];\r\n    showErrorDecorations(errors: RuntimeError[]) {\r\n\r\n        let minimapColors = {\r\n            \"error\": \"#bc1616\",\r\n            \"warning\": \"#cca700\",\r\n            \"info\": \"#75beff\"\r\n        }\r\n\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        let markers: monaco.editor.IMarkerData[] = [];\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n        for (let error of errors) {\r\n            let errorlevel = \"error\";\r\n\r\n            let linesDecorationsClassName: string;\r\n            let borderLeftClass: string;\r\n            let minimapColor: string = minimapColors[errorlevel];\r\n\r\n            switch (errorlevel) {\r\n                case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n            }\r\n\r\n            let severity: monaco.MarkerSeverity;\r\n            switch (errorlevel) {\r\n                case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n            }\r\n\r\n            markers.push({\r\n                startLineNumber: error.statement.from.line,\r\n                startColumn: error.statement.from.column,\r\n                endLineNumber: error.statement.to.line,\r\n                endColumn: error.statement.to.column,\r\n                message: error.message,\r\n                severity: severity\r\n            });\r\n\r\n            decorations.push({\r\n                range: {\r\n                    startLineNumber: error.statement.from.line,\r\n                    startColumn: error.statement.from.column,\r\n                    endLineNumber: error.statement.to.line,\r\n                    endColumn: error.statement.to.column,\r\n                },\r\n                options: {\r\n                    linesDecorationsClassName: linesDecorationsClassName,\r\n                    minimap: {\r\n                        position: monaco.editor.MinimapPosition.Inline,\r\n                        color: minimapColor\r\n                    }\r\n                }\r\n\r\n            });\r\n\r\n\r\n        }\r\n\r\n        let model = this.main.getCurrentlyEditedModule().model;\r\n        monaco.editor.setModelMarkers(model, 'test', markers);\r\n        this.oldErrorDecorations = model.deltaDecorations(this.oldErrorDecorations, decorations);\r\n\r\n    }\r\n\r\n    showTable(identifier: string) {\r\n        let statement = \"select * from \" + identifier + \";\";\r\n        this.main.getDatabaseTool().executeQuery(statement,\r\n            (results) => { this.presentResultsIntern(statement, results); },\r\n            (error) => { });\r\n    }\r\n\r\n\r\n\r\n    showErrors(errors: RuntimeError[]) {\r\n        let $runtimeErrorsTab = this.$bottomDiv.find('.jo_errorsTab');\r\n        let $runtimeErrorsTabHeading = this.$bottomDiv.find('.jo_errorsTabheading');\r\n\r\n        $runtimeErrorsTab.empty();\r\n        this.showErrorDecorations(errors);\r\n\r\n        if (errors.length == 0) return;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        $runtimeErrorsTabHeading.trigger(mousePointer + \"down\");\r\n\r\n        let $errorList = jQuery('<div class=\"jo_errorlist\"></div>');\r\n        $runtimeErrorsTab.append($errorList);\r\n\r\n        for (let error of errors) {\r\n            let query = error.statement.sql;\r\n            query = query.replace(/\\n/g, \" \");\r\n            query = query.replace(/\\s\\s+/g, ' ');\r\n\r\n            let $errorLine = $('<div class=\"jo_error-line\" style=\"flex-direction:column; width: fit-content\"></div>')\r\n            $errorList.append($errorLine);\r\n\r\n            $errorLine.on(mousePointer + 'down', () => {\r\n                let range = {\r\n                    startColumn: error.statement.from.column, startLineNumber: error.statement.from.line,\r\n                    endColumn: error.statement.to.column, endLineNumber: error.statement.to.line\r\n                };\r\n\r\n                this.main.getMonacoEditor().revealRangeInCenter(range);\r\n                $errorList.find('.jo_error-line').removeClass('jo_active');\r\n                $errorLine.addClass('jo_active');\r\n\r\n            })\r\n\r\n\r\n            let $sqlDiv = $('<div class=\"jo_sqlErrorStatement\"></div>');\r\n            $errorLine.append($sqlDiv);\r\n\r\n            monaco.editor.colorize(query, \"vscSQL\", {}).then(\r\n                (html) => { $sqlDiv.html(html) });\r\n\r\n            let $messageDiv = $('<div class=\"jo_sqlErrorMessage\">' + error.message + '</div>');\r\n            $errorLine.append($messageDiv);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    isSelectStatement(statement: SQLStatement): boolean {\r\n        return statement.ast != null && statement.ast.type == TokenType.keywordSelect;\r\n    }\r\n\r\n    isDDLStatement(statement: SQLStatement): boolean {\r\n        return statement.ast != null && [TokenType.keywordCreate, TokenType.keywordDrop, TokenType.keywordAlter].indexOf(statement.ast.type) >= 0;\r\n    }\r\n\r\n    isWriteStatement(statement: SQLStatement): boolean {\r\n        return statement.ast != null && [TokenType.keywordInsert, TokenType.keywordDelete, TokenType.keywordUpdate].indexOf(statement.ast.type) >= 0;\r\n    }\r\n\r\n    private presentResultsIntern(query: string, results: QueryResult[]) {\r\n        let $resultTabheading = this.$bottomDiv.find('.jo_resultTabheading');\r\n        let $resultHeader = this.$bottomDiv.find('.jo_result-header');\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        $resultTabheading.trigger(mousePointer + \"down\");\r\n        this.result = results.pop();\r\n\r\n        let headerDiv = $resultHeader;\r\n\r\n        query = query.replace(/\\n/g, \" \");\r\n        query = query.replace(/\\s\\s+/g, ' ');\r\n        query = query.replace(/limit 100000/g, '');\r\n\r\n        monaco.editor.colorize(query, \"vscSQL\", {}).then(\r\n            (html) => { headerDiv.html(html) });\r\n\r\n        this.paginationAll = this.result ? this.result.values.length : 0;\r\n        this.$infoDiv.find('.jo_pagination_all').html(`${this.paginationAll}`);\r\n        this.paginationFrom = 1;\r\n        this.$paginationDiv.show();\r\n        this.activateButtons();\r\n\r\n        this.showResults();\r\n\r\n    }\r\n\r\n    public clear() {\r\n        let $bodyDiv = this.$bottomDiv.find('.jo_result-body');\r\n        $bodyDiv.empty();\r\n        this.$paginationDiv.hide();\r\n    }\r\n\r\n    private showResultsBusy: boolean = false;\r\n    private showResultPending: boolean = false;\r\n\r\n    private showResults() {\r\n        let $bodyDiv = this.$bottomDiv.find('.jo_result-body');\r\n\r\n        if (this.result == null) {\r\n            this.$infoDiv.find('.jo_pagination_fromto').html('---');\r\n            $bodyDiv.html('Die Datenbank lieferte eine leere Ergebnistabelle.');\r\n            return;\r\n        }\r\n\r\n        let that = this;\r\n        let from = this.paginationAll == 0 ? 0 : this.paginationFrom;\r\n        let to = this.paginationAll == 0 ? 0 : Math.min(this.paginationFrom + this.paginationSize - 1, this.paginationAll);\r\n        this.$infoDiv.find('.jo_pagination_fromto').html(`${from} - ${to}`)\r\n\r\n        if (this.showResultsBusy) {\r\n            if (this.showResultPending) {\r\n                return;\r\n            }\r\n            this.showResultPending = true;\r\n            let waitFunction = () => {\r\n                if (that.showResultsBusy) {\r\n                    setTimeout(() => {\r\n                        waitFunction();\r\n                    }, 200);\r\n                } else {\r\n                    that.showResultPending = false;\r\n                    that.showResults();\r\n                }\r\n            }\r\n            setTimeout(waitFunction, 200);\r\n            return;\r\n        }\r\n\r\n        this.showResultsBusy = true;\r\n\r\n        let $table = jQuery('<table></table>');\r\n        let $header = jQuery('<tr></tr>');\r\n        $table.append($header);\r\n\r\n        this.result.columns.forEach((column) => { $header.append(jQuery(`<th><div>${column}</div></th>`)) });\r\n\r\n        let rows = this.result.values.slice(this.paginationFrom - 1, this.paginationFrom + this.paginationSize - 1);\r\n\r\n        let i = 0;\r\n        let f = () => {\r\n            if (i < rows.length) {\r\n                for (let j = i; j < Math.min(i + 200, rows.length); j++) {\r\n                    let row = rows[j];\r\n                    let $row = jQuery('<tr></tr>');\r\n                    $table.append($row);\r\n                    row.forEach((cell) => { $row.append(jQuery(`<td>${cell}</td>`)) });\r\n                }\r\n                i = Math.min(i + 200, rows.length);\r\n                if (i < rows.length) {\r\n                    setTimeout(f, 30);\r\n                } else {\r\n                    $bodyDiv.empty().append($table);\r\n                    this.showResultsBusy = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        f();\r\n\r\n        // rows.forEach((row) => {\r\n        //     let $row = jQuery('<tr></tr>');\r\n        //     $table.append($row);\r\n        //     row.forEach((cell) => {$row.append(jQuery(`<td>${cell}</td>`))});\r\n        // });\r\n\r\n        // bodyDiv.empty().append($table);\r\n\r\n    }\r\n\r\n\r\n    fetchSelectedStatements(): SQLStatement[] {\r\n        let module = this.main.getCurrentlyEditedModule();\r\n        if (module == null) return null;\r\n\r\n        let monacoEditor = this.main.getMonacoEditor();\r\n        // console.log(monacoEditor.getSelection());\r\n        // console.log(monacoEditor.getPosition());\r\n\r\n        let statements: SQLStatement[] = module.getSQLSTatementsAtSelection(monacoEditor.getSelection());\r\n        for (let statement of statements) {\r\n            statement.sql = monacoEditor.getModel().getValueInRange({\r\n                startColumn: statement.from.column,\r\n                startLineNumber: statement.from.line, endColumn: statement.to.column, endLineNumber: statement.to.line\r\n            });\r\n        }\r\n\r\n        // let sqlStatement = module.getSQLStatementAtPosition(monacoEditor.getPosition());\r\n\r\n        return statements;\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { Module } from \"../compiler/parser/Module.js\";\r\nimport { ResultsetPresenter } from \"../main/gui/ResultsetPresenter.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { WDatabase } from \"../workspace/WDatabase.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ajax } from \"./AjaxHelper.js\";\r\nimport { GetNewStatementsRequest, GetNewStatementsResponse, GetWebSocketTokenResponse, WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestGetNewStatements, WebSocketResponse } from \"./Data.js\";\r\n\r\nexport class Notifier {\r\n\r\n    connection: WebSocket;\r\n    isOpen: boolean = false;\r\n    workspace: Workspace;\r\n    database: WDatabase;\r\n\r\n    constructor(public main: Main) {\r\n\r\n    }\r\n\r\n    connect(workspace: Workspace) {\r\n\r\n        let that = this;\r\n        this.workspace = workspace;\r\n        this.database = workspace.database;\r\n\r\n        if(this.isOpen){\r\n            this.connection.close();\r\n        }\r\n\r\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\r\n\r\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/websocket\";\r\n            this.connection = new WebSocket(url);\r\n\r\n            this.connection.onerror = (error: Event) => { this.onError(error); }\r\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\r\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\r\n\r\n            this.connection.onopen = (event: Event) => {\r\n                let request: WebSocketRequestConnect = {\r\n                    command: 1,\r\n                    token: response.token,\r\n                    workspaceId: workspace.id,\r\n                    databaseId: workspace.database.id,\r\n                    databaseVersion: workspace.database.version\r\n                }\r\n\r\n                this.isOpen = true;\r\n                this.sendIntern(JSON.stringify(request));\r\n                this.onOpen();\r\n\r\n            }\r\n\r\n            // Now let's hope that websocket connection can be established.\r\n            // We setup http-polling as fallback solution\r\n\r\n            this.startPolling();\r\n\r\n        });\r\n\r\n    }\r\n\r\n    unsentMessages: string[] = [];\r\n    sendIntern(message: string) {\r\n\r\n        if (!this.isOpen) {\r\n            this.unsentMessages.push(message);\r\n        } else {\r\n            try {\r\n                this.connection.send(message);\r\n            } catch (exception) {\r\n                console.log(exception);\r\n            }\r\n        }\r\n    }\r\n\r\n    onClose(event: CloseEvent) {\r\n        this.isOpen = false;\r\n    }\r\n\r\n\r\n    disconnect() {\r\n        let message: WebSocketRequestDisconnect = {\r\n            command: 4\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n        this.connection.close();\r\n    }\r\n\r\n    onMessage(event: MessageEvent) {\r\n\r\n        let that = this;\r\n        let response: WebSocketResponse = JSON.parse(event.data);\r\n        if (response.command == undefined) return;\r\n\r\n        switch (response.command) {\r\n            case 2: // SendStatements\r\n                that.executeNewStatements(response.newStatements, response.firstNewStatementIndex, () => {\r\n                    let request: WebSocketRequestGetNewStatements = { command: 2, databaseVersion: that.database.version };\r\n                    that.sendIntern(JSON.stringify(request));\r\n                })\r\n                break;\r\n            case 3: // server initiated disconnect\r\n                this.isOpen = false;\r\n                this.database = null;\r\n                this.workspace = null;\r\n                break;\r\n            case 4: // keep alive\r\n                break;\r\n            case 5: // rollback\r\n                if(this.database.version > response.new_version){\r\n                    this.main.getHistoryViewer().rollbackLocal();\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    executeNewStatements(newStatements: string[], firstNewStatementIndex: number, callbackIfTooFewStatements: () => void, callbackIfDone: () => void = () => {}, doRefreshDatabaseExplorer: boolean = true) {\r\n        if(this.database == null) return;\r\n        let that = this;\r\n        let delta = firstNewStatementIndex - (this.database.version + 1);\r\n        if (delta > 0) {\r\n            callbackIfTooFewStatements();\r\n            callbackIfDone();\r\n            return;\r\n        } else {\r\n            if (delta < 0) {\r\n                newStatements.splice(0, -delta);\r\n                firstNewStatementIndex -= delta;\r\n            }\r\n            let statements = newStatements;\r\n            if(statements.length > 0){\r\n                this.main.resultsetPresenter.executeStatementsString(statements, 0, () => {\r\n                    that.main.getHistoryViewer().appendStatements(statements);\r\n                    that.database.statements = that.database.statements.concat(statements)\r\n                    that.database.version = firstNewStatementIndex + newStatements.length - 1;\r\n                    if(doRefreshDatabaseExplorer){\r\n                        that.main.databaseExplorer.refresh();\r\n                    }\r\n                    callbackIfDone();\r\n                })\r\n            } else {\r\n                callbackIfDone();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    onError(error: Event) {\r\n    }\r\n\r\n    onOpen() {\r\n        this.isOpen = true;\r\n        if (this.unsentMessages.length > 0) {\r\n            this.unsentMessages.forEach(m => this.sendIntern(m));\r\n            this.unsentMessages = [];\r\n        }\r\n    }\r\n\r\n    isPolling: boolean = false;\r\n    startPolling() {\r\n        if (this.isPolling) return;\r\n        this.isPolling = true;\r\n\r\n        this.poll();\r\n\r\n    }\r\n\r\n    poll() {\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.poll();\r\n        }, 5000);\r\n\r\n        if (!that.isOpen) {\r\n            this.getNewStatementsHttp();\r\n        }\r\n\r\n    }\r\n\r\n    getNewStatementsHttp() {\r\n        let that = this;\r\n        if (this.workspace == null || this.database == null) return;\r\n\r\n        let request: GetNewStatementsRequest = {\r\n            workspaceId: this.workspace.id,\r\n            version_before: this.workspace.database.version\r\n        }\r\n\r\n        ajax('getNewStatements', request, (response: GetNewStatementsResponse) => {\r\n\r\n            that.executeNewStatements(response.newStatements, response.firstNewStatementIndex, () => {\r\n                that.getNewStatementsHttp();\r\n            })\r\n\r\n        });\r\n\r\n    }\r\n\r\n}","export class WaitOverlay {\r\n\r\n    visible: boolean = false;\r\n    fadeOutPending: boolean = false;\r\n    $bitteWartenText: JQuery<HTMLElement>;\r\n    $bitteWartenProgress: JQuery<HTMLElement>;\r\n\r\n    constructor(private $waitDiv: JQuery<HTMLElement>){\r\n        this.$bitteWartenText = $waitDiv.find('.bitteWartenText');\r\n        this.$bitteWartenProgress = $waitDiv.find('.bitteWartenProgress');\r\n    }\r\n\r\n    show(message: string){\r\n        this.fadeOutPending = false;\r\n        this.$bitteWartenText.html(message);\r\n        this.$bitteWartenProgress.html('');\r\n        if(!this.visible){\r\n            this.visible = true;\r\n            this.$waitDiv.css('display', 'flex');\r\n            this.$waitDiv.hide();\r\n            this.$waitDiv.fadeIn(400);\r\n        }\r\n    }\r\n\r\n    setProgress(message: string){\r\n        this.$bitteWartenProgress.html(message);\r\n    }\r\n\r\n    hide(){\r\n        if(this.visible){\r\n            this.fadeOutPending = true;\r\n            setTimeout(() => {\r\n                if(this.fadeOutPending){\r\n                    this.fadeOutPending = false;\r\n                    this.$waitDiv.fadeOut(200, () => {\r\n                        this.$waitDiv.css('display', 'none');\r\n                    })\r\n                    this.visible = false;        \r\n                }                \r\n            }, 50);\r\n        }\r\n    }\r\n\r\n}","import { MainEmbedded } from \"../../embedded/MainEmbedded.js\";\r\nimport { copyTextToClipboard, openContextMenu } from \"../../tools/HtmlTools.js\";\r\nimport { WDatabase } from \"../../workspace/WDatabase.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\ntype HistoryPanelEntry = {\r\n    statement: string;\r\n    $div: JQuery<HTMLDivElement>;\r\n    $rollbackButton: JQuery<HTMLDivElement>;\r\n}\r\n\r\nexport class HistoryViewer {\r\n\r\n    panelEntries: HistoryPanelEntry[] = [];\r\n\r\n    constructor(private main: MainBase, private $historyPanel: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    clear() {\r\n        this.$historyPanel.empty();\r\n        this.panelEntries = [];\r\n    }\r\n\r\n    clearAndShowStatements(statements: string[]) {\r\n        this.clear();\r\n        this.appendStatements(statements);\r\n    }\r\n\r\n    appendStatements(statements: string[]) {\r\n        statements.forEach(stmt => {\r\n            let panelEntry = this.makePanelEntry(stmt, this.panelEntries.length + 1);\r\n            this.$historyPanel.prepend(panelEntry.$div);\r\n            this.panelEntries.unshift(panelEntry);\r\n        })\r\n\r\n        this.makeLastButtonActive();\r\n    }\r\n\r\n    makeLastButtonActive() {\r\n        this.panelEntries.forEach(pe => pe.$rollbackButton.removeClass('jo_active'));\r\n\r\n        if (this.panelEntries.length > 0) {\r\n            this.panelEntries[0].$rollbackButton.addClass('jo_active');\r\n        }\r\n    }\r\n\r\n    makePanelEntry(statement: string, index: number): HistoryPanelEntry {\r\n        let $div = <JQuery<HTMLDivElement>>jQuery(`<div class=\"jo_panelEntry\"></div>`);\r\n        let $index = jQuery(`<div class=\"jo_panelEntryIndex\">${index}.</div>`);\r\n        let $text = jQuery(`<div class=\"jo_panelEntryText\"></div>`);\r\n        let t: string = statement.substring(0, Math.min(400, statement.length));\r\n        if (statement.length > 400) {\r\n            t += \"...\";\r\n        }\r\n        $text.text(t);\r\n        let $copybutton = <JQuery<HTMLDivElement>>jQuery(`<div class=\"img_copy jo_panelEntryCopyButton jo_active jo_button\" title=\"In die Zwischenablage kopieren\"></div>`)\r\n        let $rollbackbutton = <JQuery<HTMLDivElement>>jQuery(`<div class=\"img_undo jo_panelEntryRollbackButton jo_button\" title=\"Rollback\"></div>`)\r\n        let that = this;\r\n\r\n        $copybutton.on('click', () => {\r\n            copyTextToClipboard(statement);\r\n        })\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $rollbackbutton.on(mousePointer + 'up', (ev) => {\r\n            ev.preventDefault();\r\n            openContextMenu([{\r\n                caption: \"Abbrechen\",\r\n                callback: () => {\r\n                }\r\n            }, {\r\n                caption: \"Ich bin mir sicher: rollback!\",\r\n                color: \"#ff6060\",\r\n                callback: () => {\r\n                    this.rollback();\r\n                }\r\n            }], ev.pageX + 2, ev.pageY + 2);\r\n            ev.stopPropagation();\r\n        })\r\n\r\n        $div.append($index, $text, $copybutton, $rollbackbutton);\r\n        return {\r\n            $div: $div,\r\n            statement: statement,\r\n            $rollbackButton: $rollbackbutton\r\n        }\r\n    }\r\n\r\n    rollback() {\r\n        if (this.panelEntries.length == 0) return;\r\n\r\n        if (this.main.isEmbedded()) {\r\n            this.rollbackEmbedded();\r\n        } else {\r\n            let main: Main = <Main>this.main;\r\n            main.networkManager.rollback((error: string, rollbackLocalNeeded: boolean) => {\r\n                if (error == null && rollbackLocalNeeded) {\r\n                    this.rollbackLocal();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    rollbackLocal() {\r\n        let database = this.main.getCurrentWorkspace().database;\r\n        database.statements.pop();\r\n        database.version--;\r\n        this.main.getDatabaseTool().initializeWorker(database.templateDump, database.statements, () => {\r\n\r\n        }, () => {\r\n            this.main.getDatabaseExplorer().refreshAfterRetrievingDBStructure();\r\n            let lastPanelEntry = this.panelEntries.shift();\r\n            lastPanelEntry.$div.remove();\r\n            this.makeLastButtonActive();\r\n        })\r\n    }\r\n\r\n    rollbackEmbedded() {\r\n        let main: MainEmbedded = <MainEmbedded>this.main;\r\n        main.writeQueryManager.rollback();\r\n\r\n        this.main.getDatabaseTool().initializeWorker(main.initialTemplateDump,\r\n            main.initialStatements.concat(main.writeQueryManager.writtenStatements), () => { },\r\n            () => {\r\n                this.main.getDatabaseExplorer().refreshAfterRetrievingDBStructure();\r\n                let lastPanelEntry = this.panelEntries.shift();\r\n                lastPanelEntry.$div.remove();\r\n                this.makeLastButtonActive();\r\n            })\r\n    }\r\n\r\n}","import { ClassData, UserData, Workspaces } from \"../communication/Data.js\";\r\nimport { NetworkManager } from \"../communication/NetworkManager.js\";\r\nimport { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ActionManager } from \"./gui/ActionManager.js\";\r\nimport { BottomDiv } from \"./gui/BottomDiv.js\";\r\nimport { Editor } from \"./gui/Editor.js\";\r\nimport { Formatter } from \"./gui/Formatter.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { MainMenu } from \"./gui/MainMenu.js\";\r\nimport { ProjectExplorer } from \"./gui/ProjectExplorer.js\";\r\nimport { RightDiv } from \"./gui/RightDiv.js\";\r\nimport { Sliders } from \"./gui/Sliders.js\";\r\nimport { TeacherExplorer } from \"./gui/TeacherExplorer.js\";\r\nimport { ThemeManager } from \"./gui/ThemeManager.js\";\r\nimport { Login } from \"./Login.js\";\r\nimport { Module, File } from \"../compiler/parser/Module.js\";\r\nimport { ViewModeController } from \"./gui/ViewModeController.js\";\r\nimport { ErrorManager } from \"./gui/ErrorManager.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { DatabaseTool } from \"../tools/DatabaseTools.js\";\r\nimport { MainBase } from \"./MainBase.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { DatabaseExplorer } from \"./gui/DatabaseExplorer.js\";\r\nimport { ProgramControlButtons } from \"./gui/ProgramControlButtons.js\";\r\nimport { ResultsetPresenter } from \"./gui/ResultsetPresenter.js\";\r\nimport { Notifier } from \"../communication/Notifier.js\";\r\nimport { checkIfMousePresent } from \"../tools/HtmlTools.js\";\r\nimport { WaitOverlay } from \"./gui/WaitOverlay.js\";\r\nimport { HistoryViewer } from \"./gui/HistoryViewer.js\";\r\n\r\nexport class Main implements MainBase {\r\n    isEmbedded(): boolean {\r\n        return false;\r\n    }\r\n\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    // VORSICHT: ggf. Module -> any\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.projectExplorer.getCurrentlyEditedModule();\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n        this.projectExplorer.setModuleActive(module);\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n    getDatabaseTool(): DatabaseTool {\r\n        return this.databaseTool;\r\n    }\r\n\r\n    getDatabaseExplorer():DatabaseExplorer {\r\n        return this.databaseExplorer;\r\n    }\r\n\r\n    getResultsetPresenter(): ResultsetPresenter {\r\n        return this.resultsetPresenter;\r\n    }\r\n\r\n    getWaitOverlay(): WaitOverlay {\r\n        return this.waitOverlay;\r\n    }\r\n\r\n    getHistoryViewer(): HistoryViewer {\r\n        return this.historyViewer;\r\n    }\r\n\r\n    workspaceList: Workspace[] = [];\r\n    workspacesOwnerId: number;\r\n\r\n    // monaco_editor: monaco.editor.IStandaloneCodeEditor;\r\n    editor: Editor;\r\n    currentWorkspace: Workspace;\r\n    projectExplorer: ProjectExplorer;\r\n    teacherExplorer: TeacherExplorer;\r\n    networkManager: NetworkManager;\r\n    actionManager: ActionManager;\r\n    mainMenu: MainMenu;\r\n\r\n    login: Login;\r\n\r\n    compiler: Compiler;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    bottomDiv: BottomDiv;\r\n\r\n    startupComplete = 2;\r\n    waitForGUICallback: () => void;\r\n\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    user: UserData;\r\n    userDataDirty: boolean = false;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    rightDiv: RightDiv;\r\n\r\n    viewModeController: ViewModeController;\r\n\r\n    databaseTool: DatabaseTool;\r\n\r\n    databaseExplorer: DatabaseExplorer;\r\n\r\n    resultsetPresenter: ResultsetPresenter;\r\n\r\n    notifier: Notifier;\r\n\r\n    waitOverlay: WaitOverlay = new WaitOverlay(jQuery('.bitteWarten'));\r\n    historyViewer: HistoryViewer = new HistoryViewer(this, jQuery('.jo_historyTab'));\r\n\r\n    initGUI() {\r\n\r\n        checkIfMousePresent();\r\n\r\n        this.login = new Login(this);\r\n        this.login.initGUI();\r\n\r\n        this.databaseTool = new DatabaseTool(this);\r\n        this.databaseExplorer = new DatabaseExplorer(this, jQuery(\".jo_db_tree\"));\r\n\r\n        this.actionManager = new ActionManager(null, this);\r\n        this.actionManager.init();\r\n\r\n        this.networkManager = new NetworkManager(this, jQuery('#bottomdiv-outer .jo_updateTimerDiv'));\r\n\r\n        let sliders = new Sliders(this);\r\n        sliders.initSliders();\r\n        this.mainMenu = new MainMenu(this);\r\n        this.projectExplorer = new ProjectExplorer(this, jQuery('#leftpanel>.jo_projectexplorer'));\r\n        this.projectExplorer.initGUI();\r\n\r\n        this.bottomDiv = new BottomDiv(this, jQuery('#bottomdiv-outer>.jo_bottomdiv-inner'), jQuery('body'));\r\n\r\n        this.rightDiv = new RightDiv(this, jQuery('#rightdiv-inner'));\r\n        this.rightDiv.initGUI();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.themeManager = new ThemeManager();\r\n\r\n        this.viewModeController = new ViewModeController(jQuery(\"#view-mode\"), this);\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n        new ProgramControlButtons(this, jQuery('#controls'));\r\n\r\n        this.resultsetPresenter = new ResultsetPresenter(this, jQuery('.jo_bottomdiv-inner'));\r\n\r\n        this.notifier = new Notifier(this);\r\n\r\n    }\r\n\r\n\r\n    initEditor() {\r\n        this.editor = new Editor(this, true, false);\r\n        new Formatter().init();\r\n        // this.monaco_editor = \r\n        this.editor.initGUI(jQuery('#editor'));\r\n\r\n        let that = this;\r\n        jQuery(window).on('resize', (event) => {\r\n            jQuery('#bottomdiv-outer').css('height', '450px');\r\n            jQuery('#editor').css('height', (window.innerHeight - 450 - 30 - 2) + \"px\");\r\n            that.editor.editor.layout();\r\n            jQuery('#editor').css('height', \"\");\r\n\r\n        });\r\n\r\n        jQuery(window).trigger('resize');\r\n\r\n        this.checkStartupComplete();\r\n    }\r\n\r\n    initTeacherExplorer(classdata: ClassData[]) {\r\n        this.teacherExplorer = new TeacherExplorer(this, classdata);\r\n        this.teacherExplorer.initGUI();\r\n    }\r\n\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    start() {\r\n\r\n        if (this.waitForGUICallback != null) {\r\n            this.waitForGUICallback();\r\n        }\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.getMonacoEditor().layout();\r\n        }, 200);\r\n\r\n        this.compiler = new Compiler(this);\r\n\r\n        this.startTimer();\r\n\r\n        $(window).on('unload', function() {\r\n            \r\n            if(navigator.sendBeacon && that.user != null){\r\n                that.networkManager.sendUpdates(null, false);\r\n                that.networkManager.sendUpdateUserSettings(() => {});\r\n            }\r\n            \r\n        });\r\n\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n                this.projectExplorer.renderErrorCount(this.currentWorkspace, errors);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                if (this.projectExplorer) {\r\n                    this.version++;\r\n                }\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    removeWorkspace(w: Workspace) {\r\n        this.workspaceList.splice(this.workspaceList.indexOf(w), 1);\r\n    }\r\n\r\n    restoreWorkspaces(workspaces: Workspaces) {\r\n\r\n        this.workspaceList = [];\r\n        this.currentWorkspace = null;\r\n        // this.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\" , \"text\"));\r\n        this.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        for (let ws of workspaces.workspaces) {\r\n\r\n            let workspace: Workspace = Workspace.restoreFromData(ws, this);\r\n            this.workspaceList.push(workspace);\r\n            if (ws.id == this.user.currentWorkspace_id) {\r\n                this.currentWorkspace = workspace;\r\n            }\r\n        }\r\n\r\n        this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n\r\n        if (this.currentWorkspace == null && this.workspaceList.length > 0) {\r\n            this.currentWorkspace = this.workspaceList[0];\r\n        }\r\n\r\n        if (this.currentWorkspace != null) {\r\n            this.projectExplorer.setWorkspaceActive(this.currentWorkspace);\r\n        }\r\n\r\n        if (this.workspaceList.length == 0) {\r\n\r\n            Helper.showHelper(\"newDatabaseHelper\", this, this.projectExplorer.workspaceListPanel.$captionElement);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    createNewWorkspace(name: string, owner_id: number): Workspace {\r\n        return new Workspace(name, this, owner_id);\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class ErrorManager {\r\n\r\n    oldDecorations: string[] = [];\r\n    oldErrorDecorations: string[] = [];\r\n    $errorDiv: JQuery<HTMLElement>;\r\n\r\n    $bracket_warning: JQuery<HTMLElement>;\r\n\r\n    minimapColor: {[key: string]:string } = {};\r\n\r\n    lightBulbOnClickFunctionList: {class: string, onClickFunction: () => void, title: string}[] = [];\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>, private $mainDiv: JQuery<HTMLElement>) {\r\n        this.minimapColor[\"error\"] = \"#bc1616\";\r\n        this.minimapColor[\"warning\"] = \"#cca700\";\r\n        this.minimapColor[\"info\"] = \"#75beff\";\r\n\r\n        this.$bracket_warning = $mainDiv.find(\".jo_parenthesis_warning\");\r\n\r\n        this.$bracket_warning.attr('title', 'Klammeralarm!');\r\n        this.$bracket_warning.children().attr('title', 'Klammeralarm!');\r\n\r\n        let that = this;\r\n        $mainDiv.find(\".jo_pw_undo\").on(\"click\", () => {\r\n            let editor = that.main.getMonacoEditor();\r\n            editor.trigger(\".\", \"undo\", {});\r\n        }).attr('title', 'Undo');\r\n    }\r\n\r\n    showParenthesisWarning(error: string){\r\n        if(error != null){\r\n            this.$bracket_warning.css(\"visibility\", \"visible\");\r\n            this.$bracket_warning.find(\".jo_pw_heading\").text(error);\r\n        } else {\r\n            this.$bracket_warning.css(\"visibility\", \"hidden\");\r\n        }\r\n    }\r\n\r\n    showErrors(workspace: Workspace): Map<Module, number> {\r\n\r\n        this.lightBulbOnClickFunctionList = [];\r\n\r\n        let errorCountMap: Map<Module, number> = new Map();\r\n\r\n        this.$errorDiv = this.$bottomDiv.find('.jo_tabs>.jo_errorsTab');\r\n        this.$errorDiv.empty();\r\n\r\n        let hasErrors = false;\r\n\r\n        let ms = workspace.moduleStore;\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        for (let m of ms.getModules(false)) {\r\n            let markers: monaco.editor.IMarkerData[] = [];\r\n            let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n            let $errorList: JQuery<HTMLElement>[] = [];\r\n\r\n            let errors = m.getSortedAndFilteredErrors();\r\n            errorCountMap.set(m, m.getErrorCount());\r\n\r\n            for (let error of errors) {\r\n\r\n                let linesDecorationsClassName: string;\r\n                let borderLeftClass: string;\r\n                let minimapColor: string = this.minimapColor[error.level];\r\n\r\n                switch (error.level) {\r\n                    case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                    case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                    case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n                }\r\n\r\n                if (error.quickFix != null) {\r\n                    let quickFix = error.quickFix;\r\n                    let lightBulbClass = \"lb_\" + Math.trunc(Math.random() * 1000000);\r\n                    linesDecorationsClassName = 'jo_yellowLightBulb ' + borderLeftClass + \" \" + lightBulbClass;\r\n\r\n                    this.lightBulbOnClickFunctionList.push({class: '.' + lightBulbClass, \r\n                    onClickFunction: () => {\r\n\r\n                        let edits = quickFix.editsProvider(m.model.uri);\r\n                        editor.executeEdits(\"\", edits.map((edit) => {\r\n                            let r = edit.edit.range;\r\n                            return {\r\n                                range: new monaco.Range(r.startLineNumber, r.startColumn, r.endLineNumber, r.endColumn),\r\n                                text: edit.edit.text,\r\n                                forceMoveMarkers: true\r\n                            }\r\n                        }\r\n                        ));\r\n\r\n                    },\r\n                    title: quickFix.title\r\n                })\r\n\r\n\r\n                }\r\n\r\n                this.processError(error, m, $errorList);\r\n\r\n                let severity: monaco.MarkerSeverity;\r\n                switch (error.level) {\r\n                    case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                    case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                    case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n                }\r\n\r\n                markers.push({\r\n                    startLineNumber: error.position.line,\r\n                    startColumn: error.position.column,\r\n                    endLineNumber: error.position.line,\r\n                    endColumn: error.position.column + error.position.length,\r\n                    message: error.text,\r\n                    severity: severity,\r\n                    //@ts-ignore\r\n                    relatedInformation: error.quickFix\r\n                });\r\n\r\n                decorations.push({\r\n                    range: {\r\n                        startLineNumber: error.position.line,\r\n                        startColumn: error.position.column,\r\n                        endLineNumber: error.position.line,\r\n                        endColumn: error.position.column + error.position.length\r\n                    },\r\n                    options: {\r\n                        linesDecorationsClassName: linesDecorationsClassName,\r\n                        minimap: {\r\n                            position: monaco.editor.MinimapPosition.Inline,\r\n                            color: minimapColor\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n            }\r\n\r\n            monaco.editor.setModelMarkers(m.model, 'test', markers);\r\n            m.oldErrorDecorations = m.model.deltaDecorations(m.oldErrorDecorations, decorations);\r\n\r\n            // decorations used when user clicks on error in error-list:\r\n            this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, []);\r\n\r\n\r\n            if ($errorList.length > 0 && this.$errorDiv.length > 0) {\r\n                hasErrors = true;\r\n                let $file = jQuery('<div class=\"jo_error-filename\">' + m.file.name + '&nbsp;</div>');\r\n                this.$errorDiv.append($file);\r\n                for (let $error of $errorList) {\r\n                    this.$errorDiv.append($error);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasErrors && this.$errorDiv.length > 0) {\r\n            this.$errorDiv.append(jQuery('<div class=\"jo_noErrorMessage\">Keine Fehler gefunden :-)</div>'));\r\n        }\r\n\r\n        this.registerLightbulbOnClickFunctions();\r\n\r\n        return errorCountMap;\r\n\r\n    }\r\n\r\n    registerLightbulbOnClickFunctions() {\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            for(let locf of that.lightBulbOnClickFunctionList){\r\n                    jQuery(locf.class).off('click', locf.onClickFunction);\r\n                    jQuery(locf.class).on('click', locf.onClickFunction).attr('title', locf.title);\r\n            }            \r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    processError(error: Error, m: Module, $errorDivs: JQuery<HTMLElement>[]) {\r\n\r\n        let $div = jQuery('<div class=\"jo_error-line\"></div>');\r\n        let $lineColumn = jQuery('<span class=\"jo_error-position\">[Z&nbsp;<span class=\"jo_linecolumn\">' + error.position.line + '</span>' +\r\n            ' Sp&nbsp;<span class=\"jo_linecolumn\">' + error.position.column + '</span>]</span>:&nbsp;');\r\n        let category = \"\";\r\n        switch (error.level) {\r\n            case \"error\": break;\r\n            case \"warning\": category = '<span class=\"jo_warning_category\">Warnung: </span>'; break;\r\n            case \"info\": category = '<span class=\"jo_info_category\">Info: </span>'; break;\r\n        }\r\n        let $message = jQuery('<div class=\"jo_error-text\">' + category + error.text + \"</div>\");\r\n\r\n        $div.append($lineColumn).append($message);\r\n\r\n        let that = this;\r\n        $div.on(\"mousedown\", (ev) => {\r\n            this.$errorDiv.find('.jo_error-line').removeClass('jo_active');\r\n            $div.addClass('jo_active');\r\n            that.showError(m, error);\r\n        });\r\n\r\n        $errorDivs.push($div);\r\n    }\r\n\r\n    showError(m: Module, error: Error) {\r\n\r\n        if (this.main instanceof Main) {\r\n            if (m != this.main.projectExplorer.getCurrentlyEditedModule()) {\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n        let position = error.position;\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n\r\n        let className: string = \"\";\r\n        switch (error.level) {\r\n            case \"error\": className = \"jo_revealError\"; break;\r\n            case \"warning\": className = \"jo_revealWarning\"; break;\r\n            case \"info\": className = \"jo_revealInfo\"; break;\r\n        }\r\n\r\n\r\n        this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, [\r\n            {\r\n                range: range,\r\n                options: { className: className }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n}","import { makeDiv } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { stringToDate, dateToStringWithoutTime } from \"../../tools/StringTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\ntype ModuleWithWorkspace = {\r\n    module: Module,\r\n    workspace: Workspace\r\n}\r\n\r\ntype DayWithModules = {\r\n    date: Date;\r\n    day: string;\r\n    modules: ModuleWithWorkspace[];\r\n}\r\n\r\nexport class HomeworkManager {\r\n\r\n    $homeworkTab: JQuery<HTMLElement>;\r\n    $homeworkTabLeft: JQuery<HTMLElement>;\r\n    $homeworkTabRight: JQuery<HTMLElement>;\r\n\r\n    $showRevisionButton: JQuery<HTMLElement>;\r\n    showRevisionActive: boolean = false;\r\n\r\n    diffEditor: monaco.editor.IStandaloneDiffEditor;\r\n\r\n    constructor(private main: Main, public $bottomDiv: JQuery<HTMLElement>) {\r\n        this.$homeworkTab = $bottomDiv.find('.jo_tabs>.jo_homeworkTab');\r\n    }\r\n\r\n    initGUI() {\r\n        let that = this;\r\n        this.$homeworkTab.append(this.$homeworkTabLeft = makeDiv(\"\", \"jo_homeworkTabLeft jo_scrollable\"));\r\n        this.$homeworkTab.append(this.$homeworkTabRight = makeDiv(\"\", \"jo_homeworkTabRight jo_scrollable\"));\r\n        jQuery('#view-mode').prepend(this.$showRevisionButton = makeDiv(\"\", \"jo_button jo_active jo_homeworkRevisionButton\", \"\"));\r\n        this.$showRevisionButton.on(\"click\", () => {\r\n            if (this.showRevisionActive) {\r\n                this.hideRevision();\r\n            } else {\r\n                this.showRevision(that.main.getCurrentlyEditedModule());\r\n            }\r\n        });\r\n        this.$showRevisionButton.hide();\r\n        jQuery('#diffEditor').hide();\r\n    }\r\n\r\n    showHomeWorkRevisionButton() {\r\n        this.$showRevisionButton.text(this.showRevisionActive ? \"Normalansicht\" : \"Korrekturen zeigen\");\r\n        this.$showRevisionButton.show();\r\n    }\r\n\r\n    hideHomeworkRevisionButton() {\r\n        this.$showRevisionButton.hide();\r\n    }\r\n\r\n    showRevision(module: Module) {\r\n\r\n        module.file.text = module.getProgramTextFromMonacoModel();\r\n        let file = module.file;\r\n\r\n        jQuery('#editor').hide();\r\n        jQuery('#diffEditor').show();\r\n\r\n        var originalModel = monaco.editor.createModel(file.text_before_revision, \"myJava\");\r\n        var modifiedModel = monaco.editor.createModel(file.text, \"myJava\");\r\n\r\n        this.diffEditor = monaco.editor.createDiffEditor(document.getElementById(\"diffEditor\"), {\r\n            // You can optionally disable the resizing\r\n            enableSplitViewResizing: true,\r\n            originalEditable: false,\r\n            readOnly: true,\r\n            // Render the diff inline\r\n            renderSideBySide: true\r\n        });\r\n\r\n        this.diffEditor.setModel({\r\n            original: originalModel,\r\n            modified: modifiedModel\r\n        });\r\n\r\n        this.showRevisionActive = true;\r\n        this.showHomeWorkRevisionButton();\r\n    }\r\n\r\n    hideRevision() {\r\n        if (this.showRevisionActive) {\r\n\r\n            jQuery('#diffEditor').hide();\r\n            this.diffEditor.dispose();\r\n            this.diffEditor = null;\r\n            jQuery('#editor').show();\r\n\r\n            this.showRevisionActive = false;\r\n            this.showHomeWorkRevisionButton();\r\n        }\r\n    }\r\n\r\n\r\n    attachToWorkspaces(workspaces: Workspace[]) {\r\n\r\n        let daysWithModules: DayWithModules[] = [];\r\n        let map: { [day: string]: DayWithModules } = {};\r\n\r\n        workspaces.forEach(ws => {\r\n            ws.moduleStore.getModules(false).forEach(module => {\r\n\r\n                let dateString = module.file.submitted_date;\r\n                if (dateString != null) {\r\n\r\n                    let date: Date = stringToDate(dateString);\r\n                    let dateWithoutTime = dateToStringWithoutTime(date);\r\n                    let dwm: DayWithModules = map[dateWithoutTime];\r\n                    if (dwm == null) {\r\n                        dwm = {\r\n                            date: date,\r\n                            day: dateWithoutTime,\r\n                            modules: []\r\n                        };\r\n                        map[dateWithoutTime] = dwm;\r\n                        daysWithModules.push(dwm);\r\n                    }\r\n                    dwm.modules.push({module: module, workspace: ws});\r\n\r\n                }\r\n\r\n            });\r\n\r\n        });\r\n\r\n        this.$homeworkTabLeft.empty();\r\n        this.$homeworkTabRight.empty();\r\n\r\n        let that = this;\r\n\r\n        this.$homeworkTabLeft.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgabetage:\"));\r\n\r\n\r\n        daysWithModules.sort((a, b) => {\r\n            if (a.date.getFullYear() != b.date.getFullYear()) return -Math.sign(a.date.getFullYear() - b.date.getFullYear());\r\n            if (a.date.getMonth() != b.date.getMonth()) return -Math.sign(a.date.getMonth() - b.date.getMonth());\r\n            if (a.date.getDate() != b.date.getDate()) return -Math.sign(a.date.getDate() - b.date.getDate());\r\n            return 0;\r\n        });\r\n\r\n        let first: boolean = true;\r\n\r\n        daysWithModules.forEach(dwm => {\r\n\r\n            dwm.modules.sort((m1, m2) => m1.module.file.name.localeCompare(m2.module.file.name));\r\n\r\n            let $div = makeDiv(\"\", \"jo_homeworkDate\", dwm.day);\r\n            this.$homeworkTabLeft.append($div);\r\n\r\n            $div.on(\"click\", (e) => {\r\n                this.$homeworkTabLeft.find('.jo_homeworkDate').removeClass('active');\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            });\r\n\r\n            if (first) {\r\n                first = false;\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    select(dwm: DayWithModules) {\r\n        this.$homeworkTabRight.empty();\r\n        this.$homeworkTabRight.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgegebene Dateien:\"));\r\n        let that = this;\r\n        dwm.modules.forEach(moduleWithWorkspace => {\r\n            let $div = jQuery(`<div class=\"jo_homeworkEntry\">Workspace <span class=\"jo_homework-workspace\">\r\n                    ${moduleWithWorkspace.workspace.name}</span>, Datei <span class=\"jo_homework-file\">\r\n                    ${moduleWithWorkspace.module.file.name}</span> (Abgabe: ${moduleWithWorkspace.module.file.submitted_date} )</div>`);\r\n            that.$homeworkTabRight.append($div);\r\n            $div.on(\"click\", () => {\r\n                    that.main.projectExplorer.setWorkspaceActive(moduleWithWorkspace.workspace);\r\n                    that.main.projectExplorer.setModuleActive(moduleWithWorkspace.module);\r\n                    that.main.projectExplorer.fileListPanel.select(moduleWithWorkspace.module, false);\r\n            });\r\n        })\r\n        \r\n    }\r\n\r\n\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { ErrorManager } from \"./ErrorManager.js\";\r\nimport { HomeworkManager } from \"./HomeworkManager.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class BottomDiv {\r\n\r\n    errorManager: ErrorManager;\r\n    homeworkManager: HomeworkManager;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>, public $mainDiv: JQuery<HTMLElement>) {\r\n\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_homeworkTabheading').length > 0) {\r\n            this.homeworkManager = new HomeworkManager(<Main>main, $bottomDiv);\r\n        }\r\n\r\n        this.errorManager = new ErrorManager(main, $bottomDiv, $mainDiv);\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$bottomDiv);\r\n        if (this.homeworkManager != null) this.homeworkManager.initGUI();\r\n\r\n        this.$bottomDiv.find('.jo_tabs').children().first().trigger(\"click\");\r\n\r\n    }\r\n\r\n    showHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'visible');\r\n        jQuery('.jo_homeworkTabheading').trigger(\"mousedown\");\r\n\r\n    }\r\n\r\n    hideHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'hidden');\r\n        jQuery('.jo_tabheadings').children().first().trigger(\"mousedown\");\r\n\r\n    }\r\n\r\n\r\n}","\nexport class EmbeddedSlider {\n\n    $sliderDiv: JQuery<HTMLElement>;\n\n    /**\n     * A div contains $container and another div. Between the latter two \n     * a slider should get inserted.\n     * @param $container \n     * @param firstLast true, if $container is left/on top of other div; false if otherwise\n     * @param horVert true, if $container and other div are left/right of another; false if they are on top/below each other\n     * @param callback \n     * @param $otherDiv \n     */\n    constructor(private $container: JQuery<HTMLElement>, \n        private firstLast: boolean, private horVert: boolean,\n         private callback: (newLength: number) => void, private $otherDiv?: JQuery<HTMLElement>){\n            this.initSlider();\n    }\n\n    initSlider() {\n        let that = this;\n\n        if(this.$otherDiv == null){\n            this.$container.parent().children().each((index, element) => {\n                if(element != this.$container[0]){\n                    that.$otherDiv = jQuery(element);\n                }\n            });\n        }\n\n        this.$sliderDiv = jQuery('<div class=\"joe_slider\"></div>');\n\n        this.$sliderDiv.css({\n            width: this.horVert ? \"100%\" : \"4px\",\n            height: this.horVert ? \"4px\" : \"100%\",\n            cursor: this.horVert ? \"row-resize\" : \"col-resize\",\n        });\n\n        if(this.firstLast){\n            this.$sliderDiv.css({\n                top: \"0px\",\n                left: \"0px\"\n            });\n        } else {\n            if(this.horVert){\n                this.$sliderDiv.css({\n                    bottom: \"0px\",\n                    left: \"0px\"\n                });    \n            } else {\n                this.$sliderDiv.css({\n                    top: \"0px\",\n                    right: \"0px\"\n                });    \n            }\n        }\n\n        this.$container.append(this.$sliderDiv);\n\n        this.$sliderDiv.on(\"mousedown\", (md: JQuery.MouseDownEvent) => {\n\n            let x = md.clientX;\n            let y = md.clientY;\n\n            jQuery(document).on(\"mousemove.slider\", (mm: JQuery.MouseMoveEvent) => {\n                let dx = mm.clientX - x;\n                let dy = mm.clientY - y;\n\n                that.slide(dx, dy);\n                \n                x = mm.clientX;\n                y = mm.clientY;\n\n            });\n\n            jQuery(document).on(\"mouseup.slider\", () => {\n                jQuery(document).off(\"mousemove.slider\");\n                jQuery(document).off(\"mouseup.slider\");\n            });\n\n\n        });\n\n        setTimeout(() => {\n            that.slide(1, 1);\n        }, 600);\n\n    }\n\n    setColor(color: string){\n        this.$sliderDiv.css('background-color', color);\n    }\n\n    slide(dx: number, dy: number){\n        if(this.horVert){\n            let height = Number.parseInt(this.$container.css('height').replace('px', ''));\n            let otherHeight = Number.parseInt(this.$otherDiv.css('height').replace('px', ''));\n            let newHeight = this.firstLast ? height -= dy : height += dy;\n            let newOtherHeight = this.firstLast ? otherHeight += dy : otherHeight -= dy;\n            this.$container.css('height', newHeight + \"px\");\n            this.$otherDiv.css('height', newOtherHeight + \"px\");\n            this.callback(newHeight);\n        } else {\n            let width = Number.parseInt(this.$container.css('width').replace('px', ''));\n            let otherWidth = Number.parseInt(this.$otherDiv.css('width').replace('px', ''));\n            let newWidth = this.firstLast ? width -= dx : width += dx;\n            let newOtherWidth = this.firstLast ? otherWidth += dx : otherWidth -= dx;\n            this.$container.css('width', newWidth + \"px\");\n            this.$otherDiv.css('width', newOtherWidth + \"px\");\n            this.callback(newWidth);\n        }\n        this.$container.css('flex', \"0 1 auto\");\n\n    }\n\n\n}","import { Module, ModuleStore } from \"../compiler/parser/Module.js\";\nimport { MainEmbedded } from \"./MainEmbedded.js\";\nimport { openContextMenu, makeEditable } from \"../tools/HtmlTools.js\";\nimport { JOScript, ScriptType } from \"./EmbeddedStarter.js\";\n\ntype FileData = {\n    type: ScriptType,\n    module?: Module,\n    hint?: string,\n    $fileDiv: JQuery<HTMLElement>\n}\n\nexport class EmbeddedFileExplorer {\n\n    currentFile: FileData;\n    files: FileData[] = [];\n\n    constructor(private moduleStore: ModuleStore, private $fileListDiv: JQuery<HTMLElement>, private main: MainEmbedded) {\n\n        let that = this;\n\n        for (let module of moduleStore.getModules(false)) {\n\n            this.addModule(module);\n\n        }\n\n        let $filesDiv = $fileListDiv.parent();\n        let $addButton = jQuery('<div class=\"joe_addFileButton jo_button img_add-dark jo_active\" title=\"Datei hinzufügen\"></div>');\n        $filesDiv.append($addButton);\n\n        $addButton.on(\"click\", () => {\n\n            let module = this.main.addModule({ text: \"\", title: \"Neue Datei.java\", type: \"sql\" });\n            let fileData = this.addModule(module);\n\n            this.renameElement(fileData, () => {\n                // if there's no file yet and then one is added and subsequently renamed: select it!\n                if (that.currentFile != fileData) {\n                    that.selectFile(fileData);\n                }\n            });\n        });\n\n\n    }\n\n    removeAllFiles() {\n        this.files.forEach(f => this.removeFile(f));\n    }\n\n\n    addHint(script: JOScript): void {\n        let that = this;\n        let $fileDiv = jQuery('<div class=\"jo_file jo_hint\" ><div class=\"jo_fileimage\"></div><div class=\"jo_filename\" style=\"line-height: 22px\">' +\n            script.title + '</div><div class=\"jo_additionalButtons\"></div></div></div>');\n        this.$fileListDiv.append($fileDiv);\n\n        let fileData: FileData = {\n            module: null,\n            $fileDiv: $fileDiv,\n            type: \"hint\",\n            hint: script.text\n        };\n\n        this.files.push(fileData);\n\n        $fileDiv.on(\"click\", (event) => {\n            that.selectFile(fileData);\n        });\n\n    }\n\n\n    addModule(module: Module): FileData {\n        let that = this;\n        let $fileDiv = jQuery(`<div class=\"jo_file jo_java\" >\n        <div class=\"jo_fileimage\"></div>\n        <div class=\"jo_filename\" style=\"line-height: 22px\">${module.file.name}</div>\n        <div class=\"jo_additionalButtonStart\"></div>\n        <div class=\"jo_delete img_delete jo_button jo_active\" title=\"Datei löschen\"></div></div></div>`);\n        this.$fileListDiv.append($fileDiv);\n\n        let fileData: FileData = {\n            module: module,\n            $fileDiv: $fileDiv,\n            type: \"sql\"\n        };\n\n        this.files.push(fileData);\n\n        module.file.panelElement = {\n            name: module.file.name,\n            $htmlFirstLine: $fileDiv,\n            isFolder: false,\n            path: []\n        }\n\n        $fileDiv.find('.jo_delete').on(\"mousedown\", (e: JQuery.MouseDownEvent) => {\n            that.onDelete(fileData, e);\n        })\n\n        $fileDiv.find('.jo_delete').on(\"click\", (e) => { e.preventDefault(); e.stopPropagation() });\n\n        $fileDiv.on(\"click\", (event) => {\n            that.selectFile(fileData);\n        });\n\n        $fileDiv[0].addEventListener(\"contextmenu\", function (event) {\n            event.preventDefault();\n            openContextMenu([{\n                caption: \"Umbenennen\",\n                callback: () => {\n                    that.renameElement(fileData, () => { });\n                }\n            }], event.pageX, event.pageY);\n        }, false);\n\n        return fileData;\n\n    }\n\n    onDelete(fileData: FileData, ev: JQuery.MouseDownEvent) {\n        ev.preventDefault();\n        ev.stopPropagation();\n        let that = this;\n        openContextMenu([{\n            caption: \"Abbrechen\",\n            callback: () => {\n                // nothing to do.\n            }\n        }, {\n            caption: \"Ich bin mir sicher: löschen!\",\n            color: \"#ff6060\",\n            callback: () => {\n                that.removeFile(fileData);\n            }\n        }], ev.pageX + 2, ev.pageY + 2);\n\n    }\n\n    removeFile(fileData: FileData) {\n        fileData.$fileDiv.remove();\n        this.main.removeModule(fileData.module);\n        this.files = this.files.filter((fd) => fd != fileData);\n        if (this.currentFile == fileData) {\n            if (this.files.length > 0) {\n                this.selectFile(this.files[0]);\n            } else {\n                this.main.getMonacoEditor().setValue(\"Keine Datei vorhanden.\");\n                this.main.getMonacoEditor().updateOptions({ readOnly: true });\n            }\n        }\n\n        this.files.forEach((file) => {\n            if(file.module != null){                // Hints have module == null\n                file.module.file.saved = false;\n            }\n        });\n    }\n\n    removeModule(module: Module) {\n        for (let fileData of this.files) {\n            if (fileData.module == module) {\n                this.removeFile(fileData);\n            }\n        }\n    }\n\n    renameElement(fileData: FileData, callback: () => void) {\n        let that = this;\n        let $div = fileData.$fileDiv.find('.jo_filename');\n        let pointPos = fileData.module.file.name.indexOf('.');\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\n        makeEditable($div, $div, (newText: string) => {\n            fileData.module.file.name = newText;\n            $div.html(newText);\n            if (callback != null) callback();\n        }, selection);\n\n    }\n\n\n    setFirstFileActive() {\n        if (this.files.length > 0) {\n            this.selectFile(this.files[0]);\n        }\n    }\n\n    selectFile(fileData: FileData) {\n        if (fileData == null) return;\n        switch (fileData.type) {\n            case \"sql\":\n                this.main.$hintDiv.hide();\n                this.main.$monacoDiv.show();\n                this.main.setModuleActive(fileData.module);\n                this.main.getMonacoEditor().focus();\n                break;\n            case \"hint\":\n                this.main.$monacoDiv.hide();\n                this.main.$hintDiv.show();\n\n                let syntaxMap: { [code: string]: string } = {};\n                let code: string[] = [];\n\n                //@ts-ignore\n                let md1 = window.markdownit({\n                    highlight: function (str, lang) {\n                        code.push(str);\n                        return \"\";\n                    }\n                });\n\n                md1.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\n                    var token = tokens[idx];\n                    code.push(token.content);\n                    // pass token to default renderer.\n                    return \"\"; //md1.renderer.rules.code_block(tokens, idx, options, env, self);\n                };\n\n                md1.render(fileData.hint);\n\n                this.colorize(code, syntaxMap, () => {\n                    //@ts-ignore\n                    let md2 = window.markdownit({\n                        highlight: function (str, lang) {\n                            return syntaxMap[str];\n                        }\n                    });\n\n                    md2.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\n                        var token = tokens[idx];\n                        // pass token to default renderer.\n                        return syntaxMap[token.content].replace(\"<br/>\", \"\");\n                    };\n\n\n                    let html = md2.render(fileData.hint);\n                    this.main.$hintDiv.html(html);\n                });\n                this.$fileListDiv.find('.jo_file').removeClass('jo_active');\n                fileData.$fileDiv.addClass('jo_active');\n                break;\n        }\n    }\n\n    colorize(code: string[], codeMap: { [code: string]: string }, callback: () => void) {\n        let that = this;\n        if (code.length > 0) {\n            let uncoloredtext = code.pop();\n            monaco.editor.colorize(uncoloredtext, 'myJava', { tabSize: 3 }).then((text) => {\n                codeMap[uncoloredtext] = text;\n                that.colorize(code, codeMap, callback);\n            }\n            );\n        } else {\n            callback();\n        }\n\n    }\n\n\n    markFile(module: Module) {\n        this.$fileListDiv.find('.jo_file').removeClass('jo_active');\n\n        this.currentFile = this.files.find((fileData) => fileData.module == module);\n\n        if (this.currentFile != null) this.currentFile.$fileDiv.addClass('jo_active');\n\n    }\n\n\n\n}","export class EmbeddedIndexedDB {\n\n    private db: IDBDatabase;\n\n    constructor(private databaseIdentifier: string){\n\n    }\n\n    public open(successCallback: () => void) {\n\n        if (window.indexedDB) {\n\n            let request: IDBOpenDBRequest = window.indexedDB.open(this.databaseIdentifier, 1);\n\n            let that = this;\n\n            request.onerror = function (this: IDBRequest<IDBDatabase>, ev: Event) {\n                console.log(\"Couldn't open IndexedDB: \" + ev.type);\n            };\n\n            request.onsuccess = function (this: IDBRequest<IDBDatabase>, ev: Event) {\n                that.db = request.result;\n                that.db.onerror = function(event) {\n                    // Allgemeine Fehlerbehandlung, die für alle Anfragen an die Datenbank gilt. \n                    // @ts-ignore\n                    console.log(\"Datenbankfehler: \" + event.target.error.message);\n                  };\n                  successCallback();\n            };\n\n            request.onupgradeneeded = function(ev: Event){\n                // @ts-ignore\n                that.db = ev.target.result;\n                let objectStoreScripts = that.db.createObjectStore(\"scripts\", { keyPath: \"scriptId\", autoIncrement: false});\n                objectStoreScripts.transaction.oncomplete = function(event) {}\n\n                let objectStoreDatabases = that.db.createObjectStore(\"databases\", { keyPath: \"databaseId\", autoIncrement: false});\n                objectStoreScripts.transaction.oncomplete = function(event) {}\n\n            }\n\n        } else {\n            console.log(\"IndexedDB not available.\");\n        }\n\n    }\n\n\n    public writeScript(scriptId: string, script: string){\n\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\n\n        scriptObjectStore.put({\n            scriptId: scriptId,\n            script: script\n        });\n\n    }\n\n    public removeScript(scriptId: string){\n\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\n\n        scriptObjectStore.delete(scriptId);\n\n    }\n\n\n    public getScript(scriptId: string, callback: (script: string) => void){\n\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\n\n        let request = scriptObjectStore.get(scriptId);\n\n        request.onerror = (event) => {\n            callback(null);\n        }\n\n        request.onsuccess = (event) => {\n            if(request.result == null){\n                callback(null);\n            } else {\n                callback(request.result.script);\n            }\n        }\n\n    }\n\n    public writeDatabase(databaseID: string, database: string){\n\n        let databaseObjectStore = this.db.transaction(\"databases\", \"readwrite\").objectStore(\"databases\");\n\n        databaseObjectStore.put({\n            databaseId: databaseID,\n            database: database\n        });\n\n    }\n\n    public removeDatabase(databaseId: string){\n\n        let databaseObjectStore = this.db.transaction(\"databases\", \"readwrite\").objectStore(\"databases\");\n\n        databaseObjectStore.delete(databaseId);\n\n    }\n\n\n    public getDatabase(databaseId: string, callback: (database: string) => void){\n\n        let databaseObjectStore = this.db.transaction(\"databases\", \"readwrite\").objectStore(\"databases\");\n\n        let request = databaseObjectStore.get(databaseId);\n\n        request.onerror = (event) => {\n            callback(null);\n        }\n\n        request.onsuccess = (event) => {\n            if(request.result == null){\n                callback(null);\n            } else {\n                callback(request.result.database);\n            }\n        }\n\n    }\n\n\n}","import { SQLStatement } from \"../compiler/parser/Parser.js\";\r\nimport { WriteQueryListener } from \"../main/gui/ResultsetPresenter.js\";\r\nimport { DatabaseTool } from \"../tools/DatabaseTools.js\";\r\nimport { EmbeddedIndexedDB } from \"./EmbeddedIndexedDB.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\n\r\n\r\nexport class WriteQueryManager implements WriteQueryListener {\r\n\r\n    indexedDB: EmbeddedIndexedDB;\r\n    databaseTool: DatabaseTool;\r\n\r\n    statementsToExecute: string[] = [];\r\n\r\n    writtenStatements: string[] = [];\r\n\r\n    statementsToWrite: string[] = [];\r\n\r\n\r\n    constructor(private main: MainEmbedded, private databaseIdentifier: string) {\r\n\r\n    }\r\n\r\n    indexedDBReady(indexedDB: EmbeddedIndexedDB) {\r\n        this.indexedDB = indexedDB;\r\n        this.indexedDB.getDatabase(this.databaseIdentifier, (db: string) => {\r\n            if (db != null) {\r\n                this.writtenStatements = JSON.parse(db);\r\n                this.statementsToExecute = this.writtenStatements.slice();\r\n\r\n                this.main.historyViewer.clear();\r\n                this.main.historyViewer.appendStatements(this.statementsToExecute);\r\n\r\n                this.executeStatements();\r\n                this.writeStatementsIfNecessary();\r\n            }\r\n        })\r\n    }\r\n\r\n    reset() {\r\n        this.statementsToWrite = [];\r\n        this.writtenStatements = [];\r\n        this.statementsToExecute = [];\r\n        this.main.historyViewer.clear();\r\n    }\r\n\r\n    writeStatementsIfNecessary() {\r\n        if (this.indexedDB != null && this.statementsToWrite.length > 0) {\r\n            this.forceWriteStatements();\r\n        }\r\n    }\r\n\r\n    forceWriteStatements() {\r\n        this.writtenStatements = this.writtenStatements.concat(this.statementsToWrite);\r\n        this.statementsToWrite = [];\r\n        this.indexedDB.writeDatabase(this.databaseIdentifier, JSON.stringify(this.writtenStatements));\r\n    }\r\n\r\n    atLeastOneExecuted: boolean = false;\r\n    count: number;\r\n    executeStatements() {\r\n        if (this.databaseTool != null && this.statementsToExecute.length > 0) {\r\n            if (!this.atLeastOneExecuted) {\r\n                this.main.$databaseResetButton.fadeIn(200);\r\n                this.count = this.statementsToExecute.length;\r\n                this.main.waitOverlay.show(\"Schreibe lokale Datenbankänderungen ...\");\r\n            }\r\n            this.main.waitOverlay.setProgress(Math.round(100 * (1 - this.statementsToExecute.length / this.count)) + \" %\")\r\n            let statement = this.statementsToExecute.shift();\r\n            this.databaseTool.executeQuery(statement, () => { this.executeStatements() }, () => { this.executeStatements });\r\n            this.atLeastOneExecuted = true;\r\n        } else {\r\n            if (this.atLeastOneExecuted) {\r\n                this.main.databaseExplorer.refresh();\r\n                this.atLeastOneExecuted = false;\r\n                this.main.waitOverlay.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    notify(statements: SQLStatement[]): void {\r\n        this.main.$databaseResetButton.fadeIn(200);\r\n        let statementsSql = statements.map(stmt => stmt.sqlCleaned == null ? stmt.sql : stmt.sqlCleaned);\r\n        this.statementsToWrite = this.statementsToWrite.concat(statementsSql);\r\n        this.main.historyViewer.appendStatements(statementsSql);\r\n        this.writeStatementsIfNecessary();\r\n    }\r\n\r\n    databaseReady(dbTool: DatabaseTool) {\r\n        this.databaseTool = dbTool;\r\n        this.executeStatements();\r\n    }\r\n\r\n    rollback() {\r\n        this.writeStatementsIfNecessary();\r\n        this.writtenStatements.pop();\r\n        this.forceWriteStatements();\r\n    }\r\n\r\n\r\n\r\n}","import { DatabaseTool } from \"./DatabaseTools.js\";\r\n\r\nexport type LoadableDatabase = {\r\n    binDump?: Uint8Array,\r\n    statements?: string[]\r\n}\r\n\r\nexport class Databaseloader {\r\n\r\n    public load(url: string, callback: (db: LoadableDatabase) => void) {\r\n        let urlWithoutProtocol = url.replace(\"https://\", \"\")\r\n            .replace(\"http://\", \"\").toLocaleLowerCase();\r\n\r\n        let isBinary = urlWithoutProtocol.endsWith(\".dbdump\");\r\n\r\n        if (isBinary) {\r\n            this.loadBinary(url, urlWithoutProtocol, callback);\r\n        } else {\r\n            this.loadSql(url, urlWithoutProtocol, callback);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    loadBinary(url: string, urlWithoutProtocol: string, callback: (db: LoadableDatabase) => void) {\r\n\r\n        this.fetchTemplateFromCache(urlWithoutProtocol, true, (templateDump: Uint8Array) => {\r\n\r\n            if (templateDump != null) {\r\n                // @ts-ignore\r\n                if (DatabaseTool.getDumpType(templateDump) == \"binaryCompressed\") templateDump = pako.inflate(templateDump);\r\n                callback({ binDump: templateDump })\r\n            }\r\n\r\n            let that = this;\r\n\r\n            jQuery.ajax({\r\n                type: 'GET',\r\n                async: true,\r\n                url: url,\r\n                xhrFields: { responseType: 'arraybuffer' },\r\n                success: function (response: any) {\r\n                    let db = new Uint8Array(response);\r\n                    // @ts-ignore\r\n                    if (DatabaseTool.getDumpType(db) == \"binaryCompressed\") db = pako.inflate(db);\r\n                    that.saveDatabaseToCache(urlWithoutProtocol, db);\r\n                    callback({ binDump: db });\r\n                },\r\n                error: function (jqXHR, message) {\r\n                    callback(null);\r\n                }\r\n            });\r\n\r\n\r\n        })\r\n\r\n    }\r\n\r\n    loadSql(url: string, urlWithoutProtocol: string, callback: (db: LoadableDatabase) => void) {\r\n\r\n        this.fetchTemplateFromCache(urlWithoutProtocol, false, (sql: string) => {\r\n            let that = this;\r\n            if (sql != null) callback({ statements: that.cutSqlToStatements(sql) })\r\n\r\n            jQuery.get(url, (sql: string) => {\r\n                that.saveDatabaseToCache(urlWithoutProtocol, sql);\r\n                callback({ statements: that.cutSqlToStatements(sql) });\r\n            }, \"text\")\r\n        });\r\n\r\n    }\r\n\r\n    cutSqlToStatements(sql: string): string[] {\r\n        sql = sql.replace(/\\r\\n/g, \"\\n\");\r\n\r\n        let statements: string[] = [];\r\n        if (sql.indexOf(\"~@~\") >= 0) {\r\n            statements = sql.split(\"~@~\");\r\n        } else {\r\n            statements = sql.split(\";\\n\");\r\n        }\r\n        return statements;\r\n    }\r\n\r\n\r\n    fetchTemplateFromCache(databaseIdentifier: string, isBinary: boolean, callback: (templateDump: Uint8Array | string) => void) {\r\n        if (databaseIdentifier == null) { callback(null); return; }\r\n        let that = this;\r\n        if (!this.cacheAvailable()) callback(null);\r\n        this.getCache((cache) => {\r\n            cache.match(databaseIdentifier).then(\r\n                (value) => {\r\n                    if (isBinary) {\r\n                        value.arrayBuffer().then((buffer) => callback(new Uint8Array(buffer)));\r\n                    } else {\r\n                        value.text().then((text) => callback(text));\r\n                    }\r\n                })\r\n                .catch(() => callback(null));\r\n        })\r\n    }\r\n\r\n    saveDatabaseToCache(databaseIdentifier: string, templateDump: Uint8Array | string) {\r\n        if (!this.cacheAvailable()) return;\r\n        let that = this;\r\n        this.getCache((cache) => {\r\n            cache.put(databaseIdentifier, new Response(templateDump));\r\n        })\r\n    }\r\n\r\n    cacheAvailable(): boolean {\r\n        return 'caches' in self;\r\n    }\r\n\r\n    getCache(callback: (cache: Cache) => void) {\r\n        caches.open('my-cache').then(callback);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\nimport { Module, File } from \"../compiler/parser/Module.js\";\nimport { ActionManager } from \"../main/gui/ActionManager.js\";\nimport { BottomDiv } from \"../main/gui/BottomDiv.js\";\nimport { Editor } from \"../main/gui/Editor.js\";\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\nimport { RightDiv } from \"../main/gui/RightDiv.js\";\nimport { MainBase } from \"../main/MainBase.js\";\nimport { Workspace } from \"../workspace/Workspace.js\";\nimport { JOScript } from \"./EmbeddedStarter.js\";\nimport { makeDiv, makeTabs, openContextMenu } from \"../tools/HtmlTools.js\";\nimport { EmbeddedSlider } from \"./EmbeddedSlider.js\";\nimport { EmbeddedFileExplorer } from \"./EmbeddedFileExplorer.js\";\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\nimport { EmbeddedIndexedDB } from \"./EmbeddedIndexedDB.js\";\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\nimport { DatabaseTool } from \"../tools/DatabaseTools.js\";\nimport { DatabaseExplorer } from \"../main/gui/DatabaseExplorer.js\";\nimport { ResultsetPresenter } from \"../main/gui/ResultsetPresenter.js\";\nimport { WaitOverlay } from \"../main/gui/WaitOverlay.js\";\nimport { WriteQueryManager } from \"./WriteQueryManager.js\";\nimport { Databaseloader } from \"../tools/DatabaseLoader.js\";\nimport { DatabaseImportExport } from \"../tools/DatabaseImportExport.js\";\nimport { HistoryViewer } from \"../main/gui/HistoryViewer.js\";\nimport { WDatabase } from \"../workspace/WDatabase.js\";\n\ntype JavaOnlineConfig = {\n    withFileList?: boolean,\n    withOutput?: boolean,\n    withErrorList?: boolean,\n    withBottomPanel?: boolean,\n    id?: string,\n    databaseFilename?: string\n}\n\nexport class MainEmbedded implements MainBase {\n    isEmbedded(): boolean { return true; }\n\n    getCompiler(): Compiler {\n        return this.compiler;\n    }\n    getCurrentWorkspace(): Workspace {\n        return this.currentWorkspace;\n    }\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\n        return this.editor.editor;\n    }\n\n    getRightDiv(): RightDiv {\n        return this.rightDiv;\n    }\n\n    getBottomDiv(): BottomDiv {\n        return this.bottomDiv;\n    }\n\n    getActionManager(): ActionManager {\n        return this.actionManager;\n    }\n\n    getCurrentlyEditedModule(): Module {\n        if (this.config.withFileList) {\n            return this.fileExplorer.currentFile?.module;\n        } else {\n            return this.currentWorkspace.moduleStore.getFirstModule();\n        }\n    }\n\n    getDatabaseTool(): DatabaseTool {\n        return this.databaseTool;\n    }\n\n    getDatabaseExplorer(): DatabaseExplorer {\n        return this.databaseExplorer;\n    }\n\n    getResultsetPresenter(): ResultsetPresenter {\n        return this.resultsetPresenter;\n    }\n\n    getWaitOverlay(): WaitOverlay {\n        return this.waitOverlay;\n    }\n\n    getHistoryViewer(): HistoryViewer {\n        return this.historyViewer;\n    }\n\n    config: JavaOnlineConfig;\n\n    editor: Editor;\n    programPointerDecoration: string[] = [];\n    programPointerModule: Module;\n\n    currentWorkspace: Workspace;\n    actionManager: ActionManager;\n\n    compiler: Compiler;\n\n    $dbTreeDiv: JQuery<HTMLElement>;\n\n    $debuggerDiv: JQuery<HTMLElement>;\n\n    bottomDiv: BottomDiv;\n    $filesListDiv: JQuery<HTMLElement>;\n\n    $hintDiv: JQuery<HTMLElement>;\n    $monacoDiv: JQuery<HTMLElement>;\n    $codeResetButton: JQuery<HTMLElement>;\n    $databaseResetButton: JQuery<HTMLElement>;\n\n    programIsExecutable = false;\n    version: number = 0;\n\n    timerHandle: any;\n\n    rightDiv: RightDiv;\n    $rightDivInner: JQuery<HTMLElement>;\n\n    fileExplorer: EmbeddedFileExplorer;\n\n    debounceDiagramDrawing: any;\n\n    indexedDB: EmbeddedIndexedDB;\n\n    compileRunsAfterCodeReset: number = 0;\n\n    semicolonAngel: SemicolonAngel;\n\n    databaseTool: DatabaseTool;\n\n    databaseExplorer: DatabaseExplorer;\n\n    waitOverlay: WaitOverlay;\n\n    resultsetPresenter: ResultsetPresenter;\n\n    writeQueryManager: WriteQueryManager;\n\n    historyViewer: HistoryViewer;\n\n    initialTemplateDump: Uint8Array;\n    initialStatements: string[];\n\n    constructor($div: JQuery<HTMLElement>, private scriptList: JOScript[]) {\n\n        this.readConfig($div);\n\n        this.writeQueryManager = new WriteQueryManager(this, this.config.databaseFilename);\n\n        this.initGUI($div);\n\n\n        this.databaseExplorer = new DatabaseExplorer(this, this.$dbTreeDiv);\n        this.databaseTool = new DatabaseTool(this);\n        if (this.config.databaseFilename != null) {\n            new Databaseloader().load(this.config.databaseFilename, (loadableDb) => {\n                this.initialTemplateDump = loadableDb.binDump;\n                this.initialStatements = loadableDb.statements == null ? [] : loadableDb.statements;\n                this.resetDatabase(() => {\n                    this.initScripts();\n\n                    this.indexedDB = new EmbeddedIndexedDB(\"SQL-IDE\");\n                    this.indexedDB.open(() => {\n\n                        if (this.config.id != null) {\n                            this.writeQueryManager.indexedDBReady(this.indexedDB);\n                            this.readScripts();\n                        }\n\n                    });\n\n                });\n            })\n        }\n\n\n        this.semicolonAngel = new SemicolonAngel(this);\n\n    }\n\n    resetDatabase(callback: () => void) {\n        this.databaseTool.initializeWorker(this.initialTemplateDump, this.initialStatements, () => { }, () => {\n            this.writeQueryManager.databaseReady(this.databaseTool);\n            this.databaseExplorer.refreshAfterRetrievingDBStructure();\n            callback();\n        })\n    }\n\n    initScripts() {\n\n        this.fileExplorer?.removeAllFiles();\n\n        this.initWorkspace(this.scriptList);\n\n        if (this.config.withFileList) {\n            this.fileExplorer = new EmbeddedFileExplorer(this.currentWorkspace.moduleStore, this.$filesListDiv, this);\n            this.fileExplorer.setFirstFileActive();\n            this.scriptList.filter((script) => script.type == \"hint\").forEach((script) => this.fileExplorer.addHint(script));\n        } else {\n            this.setModuleActive(this.currentWorkspace.moduleStore.getFirstModule());\n        }\n\n    }\n\n\n    readConfig($div: JQuery<HTMLElement>) {\n        let configJson: string | object = $div.data(\"sql-online\");\n        if (configJson != null && typeof configJson == \"string\") {\n            this.config = JSON.parse(configJson.split(\"'\").join('\"'));\n        } else {\n            this.config = {}\n        }\n\n        if (this.config.withFileList == null) this.config.withFileList = false;\n        if (this.config.withOutput == null) this.config.withOutput = true;\n        if (this.config.withErrorList == null) this.config.withErrorList = true;\n        if (this.config.withBottomPanel == null) this.config.withBottomPanel = true;\n\n        if (!(this.config.withOutput || this.config.withFileList || this.config.withErrorList)) {\n            this.config.withBottomPanel = false;\n        }\n\n        if (!this.config.withBottomPanel) {\n            this.config.withFileList = false;\n            this.config.withOutput = false;\n            this.config.withErrorList = false;\n        }\n\n\n    }\n\n    setModuleActive(module: Module) {\n\n        if (this.config.withFileList && this.fileExplorer.currentFile != null) {\n            this.fileExplorer.currentFile.module.editorState = this.getMonacoEditor().saveViewState();\n        }\n\n        if (this.config.withFileList) {\n            this.fileExplorer.markFile(module);\n        }\n\n        /**\n         * WICHTIG: Die Reihenfolge der beiden Operationen ist extrem wichtig.\n         * Falls das Model im readonly-Zustand gesetzt wird, funktioniert <Strg + .> \n         * nicht und die Lightbulbs werden nicht angezeigt, selbst dann, wenn\n         * später readonly = false gesetzt wird.\n         */\n        this.getMonacoEditor().updateOptions({\n            readOnly: false,\n            lineNumbersMinChars: 4\n        });\n        this.editor.editor.setModel(module.model);\n\n\n        if (module.editorState != null) {\n            this.getMonacoEditor().restoreViewState(module.editorState);\n        }\n\n    }\n\n\n\n    readScripts() {\n\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\n\n        let that = this;\n\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\n            if (scriptListJSon == null) {\n                setInterval(() => {\n                    that.saveScripts();\n                }, 1000);\n            } else {\n\n                let scriptList: string[] = JSON.parse(scriptListJSon);\n                let countDown = scriptList.length;\n\n                for (let module of modules) {\n                    that.fileExplorer?.removeModule(module);\n                    that.removeModule(module);\n                }\n\n                for (let name of scriptList) {\n\n                    let scriptId = this.config.id + name;\n                    this.indexedDB.getScript(scriptId, (script) => {\n                        if (script != null) {\n\n                            let module = that.addModule({\n                                title: name,\n                                text: script,\n                                type: \"sql\"\n                            });\n\n                            that.fileExplorer?.addModule(module);\n                            that.$codeResetButton.fadeIn(1000);\n\n                            // console.log(\"Retrieving script \" + scriptId);\n                        }\n                        countDown--;\n                        if (countDown == 0) {\n                            setInterval(() => {\n                                that.saveScripts();\n                            }, 1000);\n                            that.fileExplorer?.setFirstFileActive();\n                            if (that.fileExplorer == null) {\n                                let modules = that.currentWorkspace.moduleStore.getModules(false);\n                                if (modules.length > 0) that.setModuleActive(modules[0]);\n                            }\n                        }\n                    })\n\n                }\n\n            }\n\n\n        });\n\n\n    }\n\n    saveScripts() {\n\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\n\n        let scriptList: string[] = [];\n        let oneNotSaved: boolean = false;\n\n        modules.forEach(m => oneNotSaved = oneNotSaved || !m.file.saved);\n\n        if (oneNotSaved) {\n\n            for (let module of modules) {\n                scriptList.push(module.file.name);\n                let scriptId = this.config.id + module.file.name;\n                this.indexedDB.writeScript(scriptId, module.getProgramTextFromMonacoModel());\n                module.file.saved = true;\n                // console.log(\"Saving script \" + scriptId);\n            }\n\n            this.indexedDB.writeScript(this.config.id, JSON.stringify(scriptList));\n        }\n\n    }\n\n    deleteScriptsInDB() {\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\n            if (scriptListJSon == null) {\n                return;\n            } else {\n\n                let scriptList: string[] = JSON.parse(scriptListJSon);\n\n                for (let name of scriptList) {\n\n                    let scriptId = this.config.id + name;\n                    this.indexedDB.removeScript(scriptId);\n                }\n\n                this.indexedDB.removeScript(this.config.id);\n\n            }\n\n\n        });\n\n    }\n\n    initWorkspace(scriptList: JOScript[]) {\n        this.currentWorkspace = new Workspace(\"Embedded-Workspace\", this, 0);\n\n        let i = 0;\n        for (let script of scriptList) {\n            if (script.type == \"sql\") {\n                this.addModule(script);\n            }\n\n        }\n\n    }\n\n    addModule(script: JOScript): Module {\n        let module: Module = Module.restoreFromData({\n            id: this.currentWorkspace.moduleStore.getModules(true).length,\n            name: script.title,\n            text: script.text,\n            text_before_revision: null,\n            submitted_date: null,\n            student_edited_after_revision: false,\n            version: 1,\n            workspace_id: 0,\n            forceUpdate: false,\n            file_type: 11\n        }, this);\n\n        this.currentWorkspace.moduleStore.putModule(module);\n\n        let that = this;\n\n        module.model.onDidChangeContent(() => {\n            that.considerShowingCodeResetButton();\n        });\n\n        return module;\n    }\n\n    removeModule(module: Module) {\n        this.currentWorkspace.moduleStore.removeModule(module);\n    }\n\n\n    initGUI($div: JQuery<HTMLElement>) {\n\n        // let $leftDiv = jQuery('<div class=\"joe_leftDiv\"></div>');\n\n        $div.css({\n            \"background-image\": \"none\",\n            \"background-size\": \"100%\"\n        })\n\n        let $centerDiv = jQuery('<div class=\"joe_centerDiv\"></div>');\n\n        // let $topDiv = jQuery('<div class=\"joe_topDiv\"></div>');\n        // $div.append($topDiv);\n        $div.append($centerDiv);\n\n        let $waitDiv = this.makeWaitDiv();\n        $div.append($waitDiv);\n        this.waitOverlay = new WaitOverlay($waitDiv);\n\n        let $codeResetModalWindow = this.makeCodeResetModalWindow($div);\n        let $databaseResetModalWindow = this.makeDatabaseResetModalWindow($div);\n\n        let $rightDiv = this.makeRightDiv();\n\n        let $editorDiv = jQuery('<div class=\"joe_editorDiv\"></div>');\n        this.$monacoDiv = jQuery('<div class=\"joe_monacoDiv\"></div>');\n        this.$hintDiv = jQuery('<div class=\"joe_hintDiv jo_scrollable\"></div>');\n        this.$codeResetButton = jQuery('<div class=\"joe_codeResetButton jo_button jo_active\" title=\"Code auf Ausgangszustand zurücksetzen\">Code Reset</div>');\n        this.$databaseResetButton = jQuery('<div class=\"joe_databaseResetButton jo_button jo_active\" title=\"Datenbank auf Ausgangszustand zurücksetzen\">Datenbank Reset</div>');\n\n        $editorDiv.append(this.$monacoDiv, this.$hintDiv, this.$databaseResetButton);\n        this.$monacoDiv.append(this.$codeResetButton);\n\n        let $bracketErrorDiv = this.makeBracketErrorDiv();\n        $editorDiv.append($bracketErrorDiv);\n\n        // $topDiv.append($editorDiv);\n\n        this.$codeResetButton.hide();\n\n        this.$codeResetButton.on(\"click\", () => { $codeResetModalWindow.show(); })\n\n        this.$databaseResetButton.hide();\n\n        this.$databaseResetButton.on(\"click\", () => { $databaseResetModalWindow.show(); })\n\n        this.$hintDiv.hide();\n\n        let $controlsDiv = jQuery('<div class=\"joe_controlsDiv\"></div>');\n        let $bottomDivInner = jQuery('<div class=\"joe_bottomDivInner\"></div>');\n\n\n        let $bottomDiv = jQuery('<div class=\"joe_bottomDiv\"></div>');\n        this.makeBottomDiv($bottomDivInner, $controlsDiv);\n        $bottomDiv.append($bottomDivInner);\n        if (this.config.withFileList) {\n            let $filesDiv = this.makeFilesDiv();\n            $bottomDiv.prepend($filesDiv);\n            new EmbeddedSlider($filesDiv, false, false, () => { });\n        }\n        makeTabs($bottomDivInner);\n        $div.append($bottomDiv);\n\n        $div.addClass('joe_javaOnlineDiv');\n\n        this.editor = new Editor(this, false, true);\n        this.editor.initGUI(this.$monacoDiv);\n        this.$monacoDiv.find('.monaco-editor').css('z-index', '10');\n\n        if ($div.attr('tabindex') == null) $div.attr('tabindex', \"0\");\n        this.actionManager = new ActionManager($div, this);\n        this.actionManager.init();\n\n        this.bottomDiv = new BottomDiv(this, $bottomDivInner, $div);\n        this.bottomDiv.initGUI();\n\n        this.rightDiv = new RightDiv(this, this.$rightDivInner);\n        this.rightDiv.initGUI();\n\n        $centerDiv.append($editorDiv, $bottomDiv)\n        $div.append($rightDiv);\n\n        let $rightSideContainer = jQuery('<div class=\"jo_rightdiv-rightside-container\"></div>');\n        let $infoButton = jQuery('<div class=\"jo_button jo_active img_ellipsis-dark\" style=\"margin-right: 10px\"></div>');\n\n        $controlsDiv.append($infoButton);\n\n        this.$rightDivInner.append($rightSideContainer);\n\n        new EmbeddedSlider($rightDiv, true, false, () => {\n            this.editor.editor.layout();\n        }, $centerDiv);\n\n        new EmbeddedSlider($bottomDiv, true, true, () => { this.editor.editor.layout(); });\n\n        $infoButton.on('mouseup', (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            openContextMenu([{\n                caption: \"Über die Online-IDE ...\",\n                link: \"https://learnj.de\",\n                callback: () => {\n                    // nothing to do.\n                }\n            }], ev.pageX + 2, ev.pageY + 2);\n        });\n\n\n        let $buttonOpen = jQuery('<label type=\"file\" class=\"img_open-file jo_button jo_active\"' +\n            'style=\"margin-right: 8px;\" title=\"Workspace aus Datei laden\"><input type=\"file\" style=\"display:none\"></label>');\n\n        let that = this;\n\n        $buttonOpen.find('input').on('change', (event) => {\n            //@ts-ignore\n            var files: FileList = event.originalEvent.target.files;\n            that.loadDatabaseFromFile(files[0]);\n        })\n\n        let $buttonSave = jQuery('<div class=\"img_save-dark jo_button jo_active\"' +\n            'style=\"margin-right: 8px;\" title=\"Workspace in Datei speichern\"></div>');\n\n\n        $buttonSave.on('click', () => { that.saveDatabaseToFile() });\n\n        $controlsDiv.append($buttonOpen, $buttonSave);\n\n        this.resultsetPresenter = new ResultsetPresenter(this, $bottomDivInner);\n        this.resultsetPresenter.addWriteQueryListener(this.writeQueryManager);\n\n\n        new ProgramControlButtons(this, $controlsDiv);\n\n        this.historyViewer = new HistoryViewer(this, $div.find('.jo_historyTab'));\n\n        setTimeout(() => {\n            this.editor.editor.layout();\n            this.compiler = new Compiler(this);\n            this.startTimer();\n        }, 200);\n\n\n    }\n\n    saveDatabaseToFile() {\n        new DatabaseImportExport().saveToFile(this.databaseTool);\n    }\n\n    loadDatabaseFromFile(file: globalThis.File) {\n        new DatabaseImportExport().loadFromFile(file, (db) => {\n            if (db == null) {\n                alert('Es ist ein Fehler beim Import aufgetreten.');\n                return;\n            }\n            this.databaseTool.initializeWorker(db.binDump, [], (errors) => {\n                if (errors.length > 0) {\n                    alert('Es sind Fehler beim Import aufgetreten. Ausführliche Fehlermeldungen sehen Sie in der Konsole (F12).')\n                    console.log(errors)\n                }\n            }, () => {\n                this.databaseExplorer.refreshAfterRetrievingDBStructure()\n            })\n        })\n    }\n\n    makeWaitDiv(): JQuery<HTMLElement> {\n        let waitHtml = `\n        <div class=\"bitteWarten\">\n        <div style=\"margin-bottom: 30px\">\n            <div class=\"bitteWartenText\" style=\"font-size: 20px\"></div>\n        </div>\n        <div>\n            <img src=\"assets/projectexplorer/svg-loaders/grid.svg\" alt=\"\" style=\"height: 40px\">\n        </div>\n        <div class=\"bitteWartenProgress\" style=\"font-size: 20px\"></div>\n        </div>\n        `;\n        return jQuery(waitHtml);\n    }\n\n    makeBracketErrorDiv(): JQuery<HTMLElement> {\n        return jQuery(`\n        <div class=\"jo_parenthesis_warning\" title=\"Klammerwarnung!\" style=\"bottom: 55px\">\n        <div class=\"jo_warning_light\"></div>\n        <div class=\"jo_pw_heading\">{ }</div>\n        <div title=\"Letzten Schritt rückgängig\" \n            class=\"jo_pw_undo img_undo jo_button jo_active\"></div>\n        </div>\n        `);\n    }\n\n    makeCodeResetModalWindow($parent: JQuery<HTMLElement>): JQuery<HTMLElement> {\n        let $window = jQuery(\n            `\n            <div class=\"joe_codeResetModal\">\n            <div style=\"flex: 1\"></div>\n            <div style=\"display: flex\">\n                <div style=\"flex: 1\"></div>\n                <div style=\"padding-left: 30px;\">\n                <div style=\"color: red; margin-bottom: 10px; font-weight: bold\">Warnung:</div>\n                <div>Soll der Code wirklich auf den Ausgangszustand zurückgesetzt werden?</div>\n                <div>Alle von Dir gemachten Änderungen werden damit verworfen.</div>\n                </div>\n                <div style=\"flex: 1\"></div>\n            </div>\n            <div class=\"joe_codeResetModalButtons\">\n            <div class=\"joe_codeResetModalCancel jo_button jo_active\">Abbrechen</div>\n            <div class=\"joe_codeResetModalOK jo_button jo_active\">OK</div>\n            </div>\n            <div style=\"flex: 2\"></div>\n            </div>\n        `\n        );\n\n        $window.hide();\n\n        $parent.append($window);\n\n        $parent.find(\".joe_codeResetModalCancel\").on(\"click\", () => {\n            $window.hide();\n        });\n\n        $parent.find(\".joe_codeResetModalOK\").on(\"click\", () => {\n\n            this.initScripts();\n            this.deleteScriptsInDB();\n\n            $window.hide();\n            this.$codeResetButton.hide();\n            this.compileRunsAfterCodeReset = 1;\n\n        });\n\n        return $window;\n    }\n\n    makeDatabaseResetModalWindow($parent: JQuery<HTMLElement>): JQuery<HTMLElement> {\n        let $window = jQuery(\n            `\n            <div class=\"joe_databaseResetModal\">\n            <div style=\"flex: 1\"></div>\n            <div style=\"display: flex\">\n                <div style=\"flex: 1\"></div>\n                <div style=\"padding-left: 30px;\">\n                <div style=\"color: red; margin-bottom: 10px; font-weight: bold\">Warnung:</div>\n                <div>Soll die Datenbank wirklich auf den Ausgangszustand zurückgesetzt werden?</div>\n                <div>Alle bisher ausgeführten Anweisungen (siehe Tab Write History) werden dann rückgängig gemacht.</div>\n                </div>\n                <div style=\"flex: 1\"></div>\n            </div>\n            <div class=\"joe_databaseResetModalButtons\">\n            <div class=\"joe_databaseResetModalCancel jo_button jo_active\">Abbrechen</div>\n            <div class=\"joe_databaseResetModalOK jo_button jo_active\">OK</div>\n            </div>\n            <div style=\"flex: 2\"></div>\n            </div>\n        `\n        );\n\n        $window.hide();\n\n        $parent.append($window);\n\n        $parent.find(\".joe_databaseResetModalCancel\").on(\"click\", () => {\n            $window.hide();\n        });\n\n        $parent.find(\".joe_databaseResetModalOK\").on(\"click\", () => {\n\n            $window.hide();\n            this.resetDatabase(() => {\n                this.writeQueryManager.reset();\n            });\n\n            this.$databaseResetButton.hide();\n            this.compileRunsAfterCodeReset = 1;\n\n        });\n\n        return $window;\n    }\n\n    makeFilesDiv(): JQuery<HTMLElement> {\n\n\n        let $filesDiv = jQuery('<div class=\"joe_bottomDivFiles jo_scrollable\"></div>');\n\n        let $filesHeader = jQuery('<div class=\"joe_filesHeader jo_tabheading jo_active\"  style=\"line-height: 24px\">Dateien</div>');\n\n        this.$filesListDiv = jQuery('<div class=\"joe_filesList jo_scrollable\"></div>');\n\n        $filesDiv.append($filesHeader, this.$filesListDiv);\n\n        return $filesDiv;\n    }\n\n    startTimer() {\n        if (this.timerHandle != null) {\n            clearInterval(this.timerHandle);\n        }\n\n        let that = this;\n        this.timerHandle = setInterval(() => {\n\n            that.compileIfDirty();\n\n        }, 500);\n\n\n    }\n\n    compileIfDirty() {\n\n        if (this.currentWorkspace == null) return;\n\n        if (this.currentWorkspace.moduleStore.isDirty() &&\n            this.compiler.compilerStatus != CompilerStatus.compiling && this.getDatabaseTool().databaseStructure != null) {\n            try {\n\n                this.compiler.compile(this.currentWorkspace.moduleStore);\n\n                let errors = this.\n                    bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\n\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\n\n                this.version++;\n\n            } catch (e) {\n                console.error(e);\n                this.compiler.compilerStatus = CompilerStatus.error;\n            }\n\n        }\n\n    }\n    considerShowingCodeResetButton() {\n        this.compileRunsAfterCodeReset++;\n        if (this.compileRunsAfterCodeReset == 3) {\n            this.$codeResetButton.fadeIn(1000);\n        }\n    }\n\n    makeBottomDiv($bottomDiv: JQuery<HTMLElement>, $buttonDiv: JQuery<HTMLElement>) {\n\n        let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\n        $tabheadings.css('position', 'relative');\n        let $thLeftSide = jQuery('<div class=\"joe_tabheading-right jo_noHeading joe_controlsTabheading\"></div>');\n\n        $thLeftSide.append($buttonDiv);\n        $tabheadings.append($thLeftSide);\n\n        if (this.config.withErrorList) {\n            let $thErrors = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_errorsTab\" style=\"line-height: 24px\">Fehler</div>');\n            $tabheadings.append($thErrors);\n        }\n\n        if (this.config.withOutput) {\n            let $thPCode = jQuery('<div class=\"jo_tabheading jo_resultTabheading\" data-target=\"jo_resultTab\" style=\"line-height: 24px\">Ausgabe</div>');\n            $tabheadings.append($thPCode);\n        }\n\n        // let $thRuntimeError = jQuery('<div class=\"jo_tabheading jo_runtimeerrorsTabheading\" data-target=\"jo_runtimeerrorsTab\" style=\"line-height: 24px\">DB-Fehler</div>');\n        // $tabheadings.append($thRuntimeError);\n\n        let $thHistory = jQuery('<div class=\"jo_tabheading jo_historyTabheading\" data-target=\"jo_historyTab\" style=\"line-height: 24px\">Write History</div>');\n        $tabheadings.append($thHistory);\n\n        let $thRightSide = jQuery('<div class=\"joe_tabheading-right jo_noHeading joe_paginationHeading\"><div class=\"jo_pagination\"></div></div>');\n        $tabheadings.append($thRightSide);\n\n        $bottomDiv.append($tabheadings);\n\n        let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\n\n        if (this.config.withErrorList) {\n            let $tabError = jQuery('<div class=\"jo_active jo_scrollable jo_errorsTab\"></div>');\n            $tabs.append($tabError);\n        }\n\n        if (this.config.withOutput) {\n            let $tabPCode = jQuery(`<div class=\"jo_editorFontSize jo_resultTab\">\n            <div class=\"jo_result-inner\">\n                <div class=\"jo_result-header\"></div>\n                <div class=\"jo_scrollable jo_result-body\"></div>\n            </div>\n            </div>\n    `);\n            $tabs.append($tabPCode);\n        }\n\n        // let $tabRtErrors = jQuery('<div class=\"jo_scrollable jo_runtimeerrorsTab\"></div>');\n        // $tabs.append($tabRtErrors);\n\n        let $tabHistory = jQuery('<div class=\"jo_scrollable jo_historyTab\"></div>');\n        $tabs.append($tabHistory);\n\n\n        $bottomDiv.append($tabs);\n\n    }\n\n    makeRightDiv(): JQuery<HTMLElement> {\n\n        let $rightDiv = jQuery('<div class=\"joe_rightDiv\"></div>');\n        this.$rightDivInner = jQuery('<div class=\"joe_rightDivInner\"></div>');\n        $rightDiv.append(this.$rightDivInner);\n\n\n        let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\n        $tabheadings.css('position', 'relative');\n        let $thRun = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_db_tree\" style=\"line-height: 24px\">DB (Baum)</div>');\n        // let $thVariables = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_db_list\" style=\"line-height: 24px\">DB (Liste)</div>');\n        $tabheadings.append($thRun, //$thVariables\n            );\n        this.$rightDivInner.append($tabheadings);\n\n        let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\n        // let $vd = jQuery('<div class=\"jo_tab jo_scrollable jo_editorFontSize jo_db_list\">DB-Liste</div>');\n\n        this.$dbTreeDiv = jQuery(`<div class=\"jo_tab jo_scrollable jo_editorFontSize jo_active jo_db_tree\">DB-Baum</div>`);\n\n        $tabs.append(this.$dbTreeDiv //, $vd\n            );\n        this.$rightDivInner.append($tabs);\n\n        makeTabs($rightDiv);\n\n        return $rightDiv;\n    }\n\n    getSemicolonAngel(): SemicolonAngel {\n        return this.semicolonAngel;\n    }\n\n}\n\n\n","import { Formatter } from \"../main/gui/Formatter.js\";\nimport { ThemeManager } from \"../main/gui/ThemeManager.js\";\nimport { MainEmbedded } from \"./MainEmbedded.js\";\n\n// declare const require: any;\n\nexport type ScriptType = \"sql\" | \"hint\";\n\nexport type JOScript = {\n    type: ScriptType;\n    title: string;\n    text: string;\n}\n\nexport class EmbeddedStarter {\n\n\n    startupComplete = 2;\n\n    themeManager: ThemeManager;\n\n    mainEmbeddedList: MainEmbedded[] = [];\n\n    initGUI() {\n\n        this.checkStartupComplete();\n\n        this.themeManager = new ThemeManager();\n    }\n\n    initEditor() {\n        new Formatter().init();\n        this.checkStartupComplete();\n    }\n\n    checkStartupComplete() {\n        this.startupComplete--;\n        if (this.startupComplete == 0) {\n            this.start();\n        }\n    }\n\n    start() {\n\n        this.initJavaOnlineDivs();\n\n    }\n\n    initJavaOnlineDivs() {\n        \n        jQuery('.sql-online').each((index: number, element: HTMLElement) => {\n            let $div = jQuery(element);\n            let scriptList: JOScript[] = [];\n            $div.find('script').each((index: number, element: HTMLElement) => {\n                let $script = jQuery(element);\n                let type: ScriptType = \"sql\";\n                if($script.data('type') != null) type = <ScriptType>($script.data('type'));\n                let script: JOScript = {\n                    type: type,\n                    title: $script.attr('title'),\n                    text: $script.text().trim()\n                };\n                scriptList.push(script);\n            });\n\n            this.initDiv($div, scriptList);\n\n        });\n\n    }\n\n    initDiv($div: JQuery<HTMLElement>, scriptList: JOScript[]) {\n\n        let me: MainEmbedded = new MainEmbedded($div, scriptList);\n\n    }\n\n}\n\njQuery(function () {\n\n    let embeddedStarter = new EmbeddedStarter();\n\n    let prefix = \"\";\n    let editorPath = \"lib/monaco-editor/dev/vs\"\n    //@ts-ignore\n    if(window.javaOnlineDir != null){\n        //@ts-ignore\n        prefix = window.javaOnlineDir;\n    }\n\n    //@ts-ignore\n    if(window.monacoEditorPath != null){\n        //@ts-ignore\n        editorPath = window.monacoEditorPath;\n    }\n\n    //@ts-ignore\n    window.require.config({ paths: { 'vs': prefix + editorPath } });\n    //@ts-ignore\n    window.require.config({\n        'vs/nls': {\n            availableLanguages: {\n                '*': 'de'\n            }\n        },\n        ignoreDuplicateModules: [\"vs/editor/editor.main\"]\n    });\n    //@ts-ignore\n    window.require(['vs/editor/editor.main'], function () {\n\n        embeddedStarter.initEditor();\n        embeddedStarter.initGUI();\n\n    });\n\n});\n"],"sourceRoot":""}