{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../node_modules/regenerator-runtime/runtime.js","webpack:///../../../../src/client/compiler/lexer/Token.ts","webpack:///../../../../src/client/compiler/lexer/Lexer.ts","webpack:///../../../../src/client/main/gui/Formatter.ts","webpack:///../../../../src/client/main/gui/ThemeManager.ts","webpack:///../../../../src/client/compiler/parser/SQLTypes.ts","webpack:///../../../../src/client/compiler/parser/Parser.ts","webpack:///../../../../src/client/compiler/parser/SQLTable.ts","webpack:///../../../../src/client/compiler/parser/SymbolTable.ts","webpack:///../../../../src/client/compiler/parser/SQLMethods.ts","webpack:///../../../src/client/tools/StringTools.ts","webpack:///../../../../src/client/compiler/parser/SymbolResolver.ts","webpack:///../../../src/client/compiler/Compiler.ts","webpack:///../../../../src/client/compiler/parser/Module.ts","webpack:///../../../../src/client/main/gui/ActionManager.ts","webpack:///../../../src/client/tools/HtmlTools.ts","webpack:///../../../src/client/communication/AjaxHelper.ts","webpack:///../../../src/client/workspace/WDatabase.ts","webpack:///../../../src/client/communication/CacheManager.ts","webpack:///../../../src/client/communication/NotifierClient.ts","webpack:///../../../src/client/communication/NetworkManager.ts","webpack:///../../../src/client/tools/TemplateUploader.ts","webpack:///../../../../src/client/main/gui/DatabaseSettingsDialog.ts","webpack:///../../../src/client/workspace/Workspace.ts","webpack:///../../../../src/client/main/gui/MyCompletionItemProvider.ts","webpack:///../../../../src/client/main/gui/MySignatureHelpProvider.ts","webpack:///../../../../src/client/main/gui/MyHoverProvider.ts","webpack:///../../../../src/client/main/gui/MyCodeActionProvider.ts","webpack:///../../../../src/client/main/gui/MyReferenceProvider.ts","webpack:///../../../../src/client/main/gui/Helper.ts","webpack:///../../../../src/client/main/gui/Editor.ts","webpack:///../../../../src/client/main/gui/VscSql.ts","webpack:///../../../src/client/sqljs-worker/sqljsWorkerSim.ts","webpack:///../../../src/client/tools/DatabaseTools.ts","webpack:///../../../../src/client/compiler/parser/StatementCleaner.ts","webpack:///../../../src/client/tools/MySqlImporter.ts","webpack:///../../../src/client/tools/DatabaseImportExport.ts","webpack:///../../../../src/client/main/gui/NewDatabaseDialog.ts","webpack:///../../../../src/client/main/gui/MainMenu.ts","webpack:///../../../../src/client/main/gui/Accordion.ts","webpack:///../../../../src/client/main/gui/DistributeToStudentsDialog.ts","webpack:///../../../../src/client/main/gui/ProjectExplorer.ts","webpack:///../../../../src/client/main/gui/RightDiv.ts","webpack:///../../../../src/client/main/gui/Sliders.ts","webpack:///../../../../src/client/main/gui/TeacherExplorer.ts","webpack:///../../../../src/client/main/gui/UserMenu.ts","webpack:///../../../src/client/main/Login.ts","webpack:///../../../../src/client/main/gui/ViewModeController.ts","webpack:///../../../../src/client/compiler/parser/SemicolonAngel.ts","webpack:///../../../../src/client/main/gui/DatabaseExplorer.ts","webpack:///../../../../src/client/main/gui/ProgramControlButtons.ts","webpack:///../../../../src/client/main/gui/ResultsetPresenter.ts","webpack:///../../../src/client/communication/Notifier.ts","webpack:///../../../../src/client/main/gui/WaitOverlay.ts","webpack:///../../../../src/client/main/gui/HistoryViewer.ts","webpack:///../../../src/client/main/Main.ts","webpack:///../../../../src/client/main/gui/ErrorManager.ts","webpack:///../../../../src/client/main/gui/HomeworkManager.ts","webpack:///../../../../src/client/main/gui/BottomDiv.ts","webpack:///../../../src/client/embedded/EmbeddedSlider.ts","webpack:///../../../src/client/embedded/EmbeddedFileExplorer.ts","webpack:///../../../src/client/embedded/EmbeddedIndexedDB.ts","webpack:///../../../src/client/embedded/WriteQueryManager.ts","webpack:///../../../src/client/tools/DatabaseLoader.ts","webpack:///../../../src/client/embedded/MainEmbedded.ts","webpack:///../../../src/client/embedded/EmbeddedStarter.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","runtime","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","define","obj","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","state","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","makeInvokeMethod","fn","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","undefined","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","Function","TokenType","LexerState","TokenTypeReadable","identifier","integerConstant","floatingPointConstant","booleanConstant","stringConstant","charConstant","true","false","keywordRename","keywordDistinct","keywordTo","keywordAlter","keywordCommit","keywordAdd","keywordDelete","keywordSelect","keywordInsert","keywordInto","keywordValues","keywordUpdate","keywordSet","keywordNo","keywordUse","keywordCreate","keywordReferences","keywordPrimary","keywordForeign","keywordTable","keywordTables","keywordColumn","keywordDrop","keywordUnique","keywordKey","keywordIndex","keywordConstraint","keywordModify","keywordCascade","keywordRestrict","keywordAction","keywordAutoincrement","keywordFrom","keywordWhere","keywordGroup","keywordBy","keywordHaving","keywordOrder","keywordAscending","keywordDescending","keywordNulls","keywordFirst","keywordLast","keywordIs","keywordNull","keywordDatabase","keywordAnd","keywordOr","keywordNot","keywordJoin","keywordNatural","keywordLeft","keywordCross","keywordInner","keywordOuter","keywordOn","keywordAs","keywordLimit","keywordOffset","keywordIn","keywordNotIn","keywordLike","keywordCollate","keywordDefault","keywordComment","keywordEngine","keywordCharset","keywordCharacter","keywordStart","keywordTransaction","keywordIf","keywordExists","keywordLock","keywordUnlock","keywordWrite","keywordRead","leftBracket","rightBracket","leftSquareBracket","rightSquareBracket","leftCurlyBracket","rightCurlyBracket","leftRightSquareBracket","dot","minus","modulo","plus","multiplication","division","singleQuote","doubleQuote","identifierQuote","lower","greater","equal","lowerOrEqual","greaterOrEqual","concatenation","semicolon","colon","comma","backslash","at","hash","pipe","space","tab","newline","identifierChar","comment","endofSourcecode","specialCharList","'","notEqual","linefeed","keywordList","EscapeSequenceList","\"","Lexer","spaceTokens","correspondingBracket","tokenTypesToMerge","first","second","merged","isNot","isNotNull","isNull","input","replace","tokenList","errorList","bracketError","bracketStack","pos","line","column","nonSpaceLastTokenType","nonSpaceLastToken","tokens","errors","currentChar","nextChar","mainState","bracketOpen","bracketClosed","setBracketError","tt","openBracket","char","specialCharToken","pushToken","lexMultilineComment","checkClosingBracket","isDigit","indexOf","lexEndofLineComment","lexNumber","position","lexStringConstant","lexSpace","lexAnnotation","lexQuotedIdentifier","lexIdentifierOrKeyword","pushError","text","tripel","newLength","errorLevel","level","a","base","charCode","charCodeAt","posStart","posEnd","substring","escapeChar","beginChar","isDoubleQuotedIdentifier","lastCharWasNewline","commentStart","sign","firstChar","radix","exponent","posExponentStart","exponentString","Number","parseInt","parseFloat","Math","pow","isSpace","toLowerCase","Formatter","autoFormatTriggerCharacters","monaco","languages","registerDocumentFormattingEditProvider","registerOnTypeFormattingEditProvider","model","ch","options","token","edits","format","e","e1","range","endLineNumber","startLineNumber","endColumn","startColumn","splice","delta","substr","getValue","editor","EndOfLinePreference","LF","tokenlist","lex","lastNonSpaceToken","indentLevel","curlyBracesOpenAtLines","indentLevelAtSwitchStatements","switchHappend","lastTokenWasNewLine","roundBracketsOpen","replaceBetween","token1","insertSpaces","deleteSpaces","openedAtLine","repeat","nextToken1","nextToken2","lastToken1","lastToken2","isBinaryOperator","lastTokenIsOperator","nextTokenIsOperator","getNextNonSpaceToken","beginNextLine","token2","currentIndentation","il","correctIndentation","nextToken","lowerGeneric","lowerBelongsToGenericExpression","greaterGeneric","greaterBelongsToGenericExpression","tokenBefore","spaces","deleteOverlappingRanges","currentIndex","j","positionFrom","positionTo","numberOfSpaces","ThemeManager","themes","initThemes","theme","internalSwitchTheme","setTheme","monacoTheme","root","document","documentElement","cssColors","style","setProperty","SQLType","SQLBaseType","parameterDescriptions","checkFunction","outputFunction","canCastToList","binaryResultTypes","Map","unaryOperators","ownIndex","tokenType","secondType","resultType","isCommutative","Array","isArray","map","set","addBinaryOperation","type2","bt2","operator","booleanType","value1","value2","max","baseTypeMap","toLocaleLowerCase","baseTypes","concat","tens","SQLDerivedType","baseType","parameterValues","parameters","join","returnBaseType","getUnaryResultType","getBinaryResult","round","textTypes","varcharType","ci","pv","v","charType","textType","tinyTextType","mediumTextType","longTextType","floatTypes","decimalType","vk","trunc","nk","numericType","doubleType","realType","floatType","numberTypes","intType","integerType","tinyIntType","smallIntType","mediumIntType","bigIntType","timeType","dateType","dateTimeType","timestampType","nullType","numericTypes","timeTypes","addBaseTypes","numericBinaryOperators","comparisonOperators","characterTypes","booleanOperations","bt","Parser","lookahead","endToken","beginStatementKeywords","completionHints","sqlStatements","addCompletionHint","initializeLookahead","lastToken","parseMain","ct","lastComment","commentBefore","cct","quickFix","assign","skip","invokeSemicolonAngel","isOperatorOrDot","title","editsProvider","uri","resource","edit","message","severity","MarkerSeverity","main","getSemicolonAngel","register","expectedTokens","operatorPrecedence","ret","deltaColumns","tpos","deltaInsideToken","tokenPos","getCurrentPosition","mainProgram","afterLastStatement","semicolonAfterLastStatement","getCurrentPositionPlus","isEnd","oldPos","errorsBeforeStatement","startPosition","st","parseStatement","hasErrors","ast","from","to","getEndOfPosition","acceptedBySQLite","beginStatementTokens","firstBadToken","retStatements","parseSelect","parseInsert","parseCreateTableOrDatabase","parseUpdate","parseDelete","parseDropTable","parseAlterTable","parseSet","parseUse","expect","parseLockUnlock","node","omittedeStatement","endPosition","symbolTable","kind","tableIdentifier","tableIdentifierPosition","addCompletionHintHere","parseRenameTableOrColumn","parseAlterTableAdd","parseDropColumn","comesToken","getEndOfCurrentToken","newTableName","oldColumnName","oldColumnPosition","newColumnName","unique","parseAddColumn","parseAddPrimaryKey","parseAddIndex","parseModifyColumn","parseAddConstraint","fki","parseForeignKeyDefinition","foreignKeys","referencesTable","referencesColumn","referencesPosition","parseReferences","pos0","pos1","modifyColumnInfo","parseColumnDefinition","primaryKeys","index","index_name","indices","columnDefBegin","columnDef","ifExists","whereNode","whereNodeBegin","whereNodeEnd","parseTerm","columnIdentifiers","columnIdentifierPositions","valuePosBegin","valuePosEnd","parseCreateDatabase","parseCreateTable","ifNotExists","pos2","columnList","combinedPrimaryKeyColumns","foreignKeyInfoList","uniqueConstraints","primaryKeyAlreadyDefined","parsePrimaryKeyTerm","parseUniqueTerm","columnNode","isPrimary","isAutoIncrement","columns","uniqueConstraint","notNull","parseType","hintColumns","hintTables","hints","additionalColumns","praefix","suffix","datatypes","toString","getBaseType","alreadySeenKeywords","foreignKeyInfo","collate","defaultValue","fromConstantType","canCastTo","rightBracketPosition","valuesPosition","columnsPosition","table","alias","parseValueLists","selectNode","select","insideListTokens","outerFirst","leftBracketPosition","constantType","constant","constantNode","columnListStart","fromNode","parentStatement","parseColumnList","columnListKeywordArray","findIndex","allColumns","fromListKeywordArray","fromStartPosition","dontHint","parseTableOrSubQuery","hintEndPosition","fromEndPosition","unshift","whereKeywordArray","whereStart","groupKeywordArray","groupStart","groupByNode","parseGroupBy","orderStart","orderByNode","parseOrderBy","limitNode","parseLimit","numberOfRows","ln","offset","gbn","tokenTypesAfterGroupBy","term","having","obnList","obn","leftSide","parseAtomicTableOrSubQuery","parseJoinOperator","rightSide","firstOperand","secondOperand","on","selectStatement","subquery","query","tokenTypesAfterListEnd","allowAliases","distinct","columnTerm","parseTermBinary","precedence","left","parseUnary","operators","right","binaryOp","parseBracket","unaryOp","operand","tt1","isStringConstant","parseDotOrArrayChains","identifier1","position1","parseMethodCallParameters","callMethod","operands","nodes","commaPositions","secondIdentifier","identifierLeft","identifierRight","list","elements","constantTypes","tokenBeforeBracket","listNode","parseList","termInsideBrackets","parameter","Column","isPrimaryKey","isNullable","cs","typeMatch1","completeTypeSQL","match","baseTypeIdentifier","commaSeparatedParameters","split","trim","fromColumnStructure","Table","ts","size","tsList","tables","fromTableStructure","columnStructureToColumnMap","referencedCs","references","referencedColumn","SymbolTable","parentSymbolTable","childSymbolTables","symbols","symbolList","parent","databaseStructure","fromTableStructureList","storeTableSymbols","storeSymbol","posOfDefinition","referencedOnPositions","symbol","containsPosition","shortestSymbolTableContainingPosition","shortestPosition","st1","findTableAtPosition","findTables","filter","SQLMethodParameter","SQLMethod","isAggregating","returnType","acceptsStarParameter","SQLMethodStore","methods","pushOneParameterMethod","countMethod","parameterType","instance","escapeHtml","unsafe","twoDez","z","isDate","inputText","opera1","opera2","lopera1","lopera2","pdate","dd","mm","yy","lyear","isDateTime","dateStr","isTime","CompilerStatus","SymbolResolver","databaseTool","symbolTableStack","_a","mainSymbolTable","statement","astNode","resolveSelect","resolveInsert","resolveCreateTable","resolveUpdate","resolveDelete","resolveDropTable","resolveAlterTable","getCurrentSymbolTable","resultTable","pushNewSymbolTable","joinedTables","resolveTableOrSubQuery","extractDatabaseStructure","resolveTerm","c1","sqlType","whereType","getBaseTypeName","findTable","whereSymbolTable","find","ciPos","createTableNode","thisTable","cn","tosNode","tableList","storeTableIntoSymbolTable","tableAlias","resolveNotIn","typeLeft","typeRight","getBinaryResultType","operandType","resultType1","resolveMethodCall","resolveIdentifier","resolveDot","selectTable","tableSymbols","findColumn","getInstance","getMethods","found","methodParameter","operatorString","leftType","pType","element","elementType","tableCompletionTo","insertColumn","selectColumn","valueList","destType","Compiler","compilerStatus","compiledButNothingToRun","moduleStore","compiling","t0","performance","now","lexer","getModules","file","dirty","clear","lexed","getProgramTextFromMonacoModel","getCurrentlyEditedModule","getBottomDiv","errorManager","showParenthesisWarning","startRegistering","parser","parse","getDatabaseTool","symbolResolver","start","dt","getCurrentWorkspace","compilerMessage","healSemicolons","readyToRun","Module","oldErrorDecorations","identifierPositions","methodCallPositions","path","uriCounter","uriMap","Uri","scheme","createModel","updateOptions","tabSize","lastSavedVersionId","getAlternativeVersionId","that","onDidChangeContent","versionId","saved","isEmbedded","main1","workspacesOwnerId","user","id","text_before_revision","student_edited_after_revision","networkManager","sendUpdates","bottomDiv","homeworkManager","showHomeWorkRevisionButton","projectExplorer","renderHomeworkButton","fromPosition","toPosition","hintKeywords","fromColumn","fromLine","toColumn","toLine","hintColumnsOfTable","toUpperCase","chList","sel","selStart","selEnd","stmt","compare","b","lineNumber","bestCh","bestRangeLength","rangeLength","workspace","submitted_date","version","workspace_id","forceUpdate","file_type","ec","positionList","positionsOnLine","bestFoundPosition","el","sort","e2","errorLevelCompare","level1","level2","f","ModuleStore","moduleMap","module_id","ms","putModule","copy","includeSystemModules","excludedModuleName","removeModule","moduleName","ActionManager","$mainElement","actions","keyEntries","buttons","$element","jQuery","event","executeKeyDownEvent","actionIdentifier","ae","action","button","active","attr","addClass","removeClass","activeElement","tagName","keyCode","ctrlKey","shiftKey","altKey","actionEntries","actionEntry","stopPropagation","preventDefault","makeEditable","elementWithText","elementToReplace","renameDoneCallback","selectionRange","mousePointer","window","PointerEvent","$input","css","width","height","color","val","setSelectionRange","end","after","hide","setTimeout","focus","ev","off","remove","show","newValue","openContextMenu","items","x","y","$contextMenu","$openSubMenu","parentMenuItem","mi","caption","link","$item","subMenu","callback","$link","top","append","leftRight","innerWidth","xp","topBottom","innerHeight","yp","makeTabs","tabDiv","headings","not","tabs","target","data","trigger","makeDiv","klass","div","jo_mouseDetected","animateToTransparent","cssProperty","startColorRgb","duration","colorPraefix","animate","copyTextToClipboard","navigator","clipboard","writeText","console","textArea","createElement","body","appendChild","execCommand","removeChild","fallbackCopyTextToClipboard","PerformanceCollector","url","startTime","pe","performanceData","count","sumTime","performanceDataCount","lastTimeSent","request","ajax","successCallback","errorCallback","showNetworkBusy","time","$","JSON","stringify","contentType","success","response","registerPerformanceEntry","jqXHR","statusText","status","busy","WDatabase","db","statements","published_to","description","templateDump","based_on_template_id","owner_id","CacheManager","databaseId","cacheAvailable","getCache","cache","databaseIdToCacheIdentifier","arrayBuffer","buffer","Uint8Array","catch","put","Response","caches","open","NotifierClient","unsentMessages","connect","location","protocol","startsWith","host","connection","WebSocket","onerror","onError","onclose","onClose","onmessage","onMessage","onopen","command","sendIntern","forcedUpdateEvery","counterTillForcedUpdate","send","log","NetworkManager","$updateTimerDiv","ownUpdateFrequencyInSeconds","teacherUpdateFrequencyInSeconds","updateFrequencyInSeconds","secondsTillNextUpdate","errorHappened","interval","clearInterval","setInterval","$rect","notifierClient","sendIfNothingIsDirty","writeEditorTextToFile","userDataDirty","sendUpdateUserSettings","wdList","fdList","workspaceList","ws","getWorkspaceData","getFileData","workspacesWithoutFiles","files","userId","language","currentWorkspaceId","getModifiedWorkspaces","updateWorkspaces","wd","is_testuser","random","entity","workspaceId","alert","secretKind","secret","databaseName","publishedTo","klasse","student_ids","class_id","settings","current_workspace_id","version_before","database","newStatements","firstNewStatementIndex","statements_before","new_version","cacheManager","fromDatabaseData","fetchTemplateFromCache","fetchTemplate","template","saveTemplateToCache","pako","inflate","xhrFields","responseType","user_id","templateList","sendUpdatesRequest","sendUpdatesResponse","idToRemoteWorkspaceDataMap","fileIdsSended","workspaces","newWorkspaceNames","remoteWorkspace","createNewWorkspaceFromWorkspaceData","idToRemoteFileDataMap","fd","idToModuleMap","fileId","remoteFileData","fileListPanel","removeElement","currentWorkspace","setValue","remoteFile","createFile","workspaceListPanel","sortElements","withSort","w","createNewWorkspace","sql_history","isFolder","panelElement","externalElement","iconClass","addElement","fileData","identical_to_repository_version","getNewModule","TemplateUploader","dump","reason","waitOverlay","dbTool","export","deflate","uploadIntern","processData","headers","DatabaseSettingsDialog","init","$dialog","showMainWindow","saveNameAndPublishedTo","setValues","setNewSecret","$copyButton","prop","checked","each","setNameAndPublishedTo","uploadCurrentDatabase","getDatabaseSettings","secrets","is_admin","is_schooladmin","empty","Workspace","permissions","database_id","restoreFromData","currentFileId","currentlyOpenModule","withFiles","$buttonDiv","$htmlFirstLine","$button","MyCompletionItemProvider","triggerCharacters","keywordCompletionItems","keywordToSnippetMap","setupKeywordCompletionItems","getModuleByMonacoModel","wfc","provideCompletionItemsIntern","sw","getMonacoEditor","_contentWidgets","widget","toggleDetails","isStringLiteral","textUntilPosition","getValueInRange","textAfterPosition","completionHint","getCompletionHint","completionItems","addKeywordCompletionItems","dotMatch","ibMatch","identifierAndBracketAfterCursor","addIdentifierCompletionItems","addDotCompletionItems","word","getWordUntilPosition","replaceWordRange","insertAfterCursorRange","item","insertText","suggestions","textAfterDot","textBeforeDot","rangeToReplace","label","detail","filterText","insertTextRules","CompletionItemInsertTextRule","KeepWhitespace","CompletionItemKind","Field","tableIdentifiers","columnIdentifier","InsertAsSnippet","Snippet","Class","sortText","columList","withTable","_b","snippet","Keyword","posMin","posMax","watchDog","arguments","MySignatureHelpProvider","signatureHelpTriggerCharacters","signatureHelpRetriggerCharacters","compileIfDirty","provideSignatureHelpLater","getModel","methodCallPosition","rightMostPosition","mcp","identifierPosition","getSignatureHelp","parameterIndex","cp","activeParameter","activeSignature","signatures","dispose","MyHoverProvider","selection","getSelection","getElementAtPosition","getWordUnderCursor","desc","keywordDescriptions","contents","getValueLengthInRange","isInsideIdentifierOrArrayDescriptor","begin","isInsideOperator","isInsideIdentifierChain","MyCodeActionProvider","markers","relatedInformation","diagnostics","isPreferred","MyReferenceProvider","usagePositions","referencePositions","upInCurrentModule","up","Helper","targetElement","direction","$helper","bottom","html","close","fadeIn","fadeOut","mainBase","Main","helperHistory","flag","openHelper","Editor","showMinimap","cw","dontPushNextCursorMove","lastTime","elementDecoration","extensions","conf","onEnterRules","beforeText","afterText","indentAction","IndentAction","IndentOutdent","appendText","None","removeText","comments","lineComment","blockComment","brackets","autoClosingPairs","surroundingPairs","setLanguageConfiguration","setMonarchTokensProvider","defaultToken","tokenPostfix","ignoreCase","escapes","keywords","builtinFunctions","builtinVariables","pseudoColumns","tokenizer","include","cases","whitespace","numbers","strings","string","complexIdentifiers","quotedIdentifier","scopes","defineVscSQL","defineTheme","inherit","rules","foreground","fontStyle","colors","lightbulb","enabled","lineDecorationsWidth","peekWidgetDefaultFocus","fixedOverflowWidgets","quickSuggestions","quickSuggestionsDelay","fontSize","fontFamily","fontWeight","roundedSelection","selectOnLineNumbers","automaticLayout","scrollBeyondLastLine","occurrencesHighlight","autoIndent","dragAndDrop","formatOnType","formatOnPaste","suggestFontSize","suggestLineHeight","suggest","localityBonus","insertMode","parameterHints","cycle","mouseWheelZoom","minimap","scrollbar","vertical","horizontal","mouseWheelListener","changeEditorFontSize","deltaY","onDidChangeConfiguration","hasChanged","EditorOption","fontInfo","registerLightbulbOnClickFunctions","onDidChangeCursorPosition","onDidChangeModel","removeEventListener","addEventListener","passive","setActiveAfterExternalModelSet","registerHoverProvider","registerCompletionItemProvider","registerCodeActionProvider","registerReferenceProvider","registerSignatureHelpProvider","onMouseDown","MouseTargetType","GUTTER_GLYPH_MARGIN","GUTTER_LINE_NUMBERS","isAfterLines","onMarginMouseDown","remeasureFonts","addActions","onDidType","insertEndOfComment","newLine","newColumn","Range","executeEdits","setPosition","getPosition","prevLine","getLineContent","trimRight","endsWith","getLineCount","spacesAtBeginningOfLine","trimLeft","fontSizePx","Date","getTime","editorfs","getOptions","viewModeController","saveFontSize","factor","dynamic","newEditorFs","setFontSize","addAction","keybindings","KeyMod","CtrlCmd","KeyCode","KEY_K","precondition","keybindingContext","contextMenuGroupId","contextMenuOrder","run","ed","getAction","Enter","getActionManager","decorations","className","isWholeLine","overviewRuler","darkColor","OverviewRulerLane","Left","executeActionActive","getSQLSTatementsAtSelection","sqlStatement","classname","MinimapPosition","Inline","zIndex","setActive","showHelper","deltaDecorations","WorkerSim","initsql","initSqlJs","locateFile","scriptDirectory","SQL1","SQL","createDb","worker","postMessageToClient","buff","config","ready","results","exec","row","postMessage","finished","DatabaseTool","databaseDirectoryEntries","queryId","querySuccessCallbacksMap","queryErrorCallbackMap","sqliteMagicBytes","queries","callbackAfterInitializing","callbackAfterRetrievingStructure","getWaitOverlay","terminate","javaOnlineDir","jo_doc","Worker","querySuccessCallback","queryErrorCallback","delete","queryCount","execQuery","setProgress","shift","executeQuery","retrieveDatabaseStructure","sql","params","getJSON","entries","sql1","result1","parseDatabaseStructure","tableNameToStructureMap","tableName","tableSQL","tableStructure","completeSQL","columnArray","foreignKeyList","columnArray1","dflt_value","columnStructure","typeLengths","fkInfo","referencesRawData","StatementCleaner","MaxRowsPerInsert","sqlCleaned","cleanCreateTableStatement","cleanInsertStatement","statementHeader","lines","vline","cleanValue","cleanColumnDef","cleanForeignKeyInfo","pkc","uk","fkiString","onDelete","onUpdate","MySqlImporter","unzipURL","fetch","importFromText","unzipFile","reader","FileReader","onload","readAsText","zip","ZipReader","HttpReader","unzipIntern","BlobReader","getEntries","filename","getData","TextWriter","onprogress","lexOutput","createTableNodes","insertNodes","tableModifyingNodes","tmn","findCreateTableNode","autoIncrementColumn","pcn","findCreateTableColumnNode","mci","mcn","fk","indexIdentifier","makeDatabase","tableNode","statementCleaner","clean","promise","initializeWorker","binDump","DatabaseImportExport","loadFromFile","ld","ab","getDumpType","readAsArrayBuffer","prompt","isBlob","blob","Blob","msSaveOrOpenBlob","createEvent","download","href","URL","createObjectURL","dataset","downloadurl","initEvent","dispatchEvent","downloadFile","NewDatabaseDialog","$templatelist","fetchTemplateList","templatelist","tle","$tle","ownerName","$templateName","$dropZone","evt","originalEvent","dataTransfer","dropEffect","importFile","$dumpFileInput","createMode","hasClass","workspaceData","createWorkspace","$template","template_database_id","code","tIndex","otherDatabaseId","template_id","newTemplateId","sendCreateWorkspace","accordionElement","renderSettingsButton","setWorkspaceActive","importer","isDatabase","dbUncompressed","MainMenu","currentSubmenu","openSubmenusOnMousemove","mainMenu","switchTheme","saveToFile","initMenu","menu","initMenuitemCallbacks","opensubmenu","AccordionPanel","accordion","flexWeight","newButtonClass","buttonNewTitle","defaultIconClass","withDeleteButton","withFolders","enableDrag","acceptDropKinds","dontSortElements","addPanel","$newFolderAction","addFolder","newElement","newFolderCallback","scrollIntoView","$collapseAllAction","collapseAll","slideUp","$captionElement","$listElement","fixed","grow","$buttonNew","pathArray","selectedElement","getSelectedElement","name1","path1","isFolder1","name2","path2","isFolder2","cmp","localeCompare","compareWithPath","insertIndex","getElementIndex","$elements","prepend","elementAtIndex","before","renderElement","insertElement","renameElement","$accordionDiv","getCurrentlySelectedPath","newFilesElementCallback","$htmlSecondLine","insertAfter","selectCallback","$listOuter","$ce","$li","targetGrow","parts","toggleClass","currentlyDraggedElementKind","element1","currentlyDraggedElement","moveElement","expanded","aName","sortName","bName","cssClass","$div","expandedCollapsed","pathHtml","addElementActionCallback","$elementAction","$filedragpart","effectAllowed","dropElementCallback","pathIsCollapsed","slideDown","pressTimer","contextmenuHandler","contextMenuItems","renameCallback","newDatabaseElementCallback","contextMenuProvider","cmi","pageX","pageY","clearTimeout","getChildElements","deleteCallback","elementToMove","destinationFolder","destinationPath","movedElements","sourcePath","oldPathLength","moveCallback","folder","pointPos","newText","invokeCallback","ae1","findElement","pathString","elPath","ps","Accordion","$html","panel","renderOuterHtmlElements","DistributeToStudentsDialog","classes","studentCount","$studentList","students","student","$studentLine","$studentClass","$studentName","rufname","familienname","$dialogMain","distributeWorkspace","sendDistributeWorkspace","ProjectExplorer","$projectexplorerDiv","programPointerModule","programPointerDecoration","lastOpenModule","initFilelistPanel","initWorkspacelistPanel","successfulNetworkCommunicationCallback","setModuleActive","sendCreateFile","newName","callbackIfSuccessful","sendDeleteWorkspaceOrFile","is_teacher","$homeworkButtonDiv","$newWorkspaceAction","removeWorkspace","enableNewButton","databaseExplorer","getResultsetPresenter","dest","droppedElement","dropEffekt","$homeAction","onHomeButtonClicked","hideHomeworkTab","workspaceAccordionElement","cmiList","teacherExplorer","classPanel","restoreOwnWorkspaces","setCaption","moduleList","errorCountMap","errorCount","errorCountS","setTextAfterFilename","initializeDatabaseTool","fetchDatabase","currentWorkspace_id","renderFiles","nonSystemModules","notifier","refreshAfterRetrievingDBStructure","getHistoryViewer","clearAndShowStatements","cem","hideRevision","editorState","saveViewState","setModel","readOnly","hideHomeworkRevisionButton","restoreViewState","setCurrentlyEditedModule","showProgramPointer","programPointerPosition","revealRangeInCenterIfOutsideViewport","Center","beforeContentClassName","findModuleByFile","RightDiv","$rightDiv","isWholePage","$tabs","$headings","rightdiv_width","$wholeWindow","Sliders","md","clientX","dx","moveLeftPanel","clientY","dy","moveBottomDiv","moveRightDiv","sliderknobLeft","stopImmediatePropagation","sliderknobRight","$editor","mewidth","layout","diffEditor","$bottomDiv","meheight","$leftPanel","TeacherExplorer","classData","studentPanel","initStudentPanel","initClassPanel","renderClasses","ws_userId","ownWorkspaces","currentOwnWorkspace","restoreWorkspaces","setExplorerColor","showHomeworkTab","attachToWorkspaces","renderWorkspaces","ea","renderStudents","userDataList","ud","classDataList","cd","UserMenu","Login","$loginSpinner","loginHappened","username","password","viewModes","classDiagram","waitForGUICallback","initGUI","initTeacherExplorer","classdata","initializeTimer","setFixed","initViewMode","initializeNotifierClient","startupComplete","errorMessage","resultsetPresenter","removePanels","ViewModeController","$buttonsContainer","$buttonMap","highContrast","editorHasFullWidth","$buttonEditorFullscreen","$buttonPresentationMode","$buttonMonitorMode","am","actionManager","registerAction","toggleEditorFullwidth","setMode","saveSettings","otherMode","viewMode","viewModeChosen","themeManager","getChosenViewMode","monitor","presentation","SemicolonAngel","semicolonPositions","isThereAgain","oldEvidence","firstSeenMs","currentlyEditedModule","cursorLine","isCurrentModule","editOperations","forceMoveMarkers","abs","setSelection","DatabaseExplorer","$mainDiv","collapsedTables","dbstructure","$table","renderTable","isCollapsed","showTable","$columns","image","referencesHtml","autoincrement","$column","$treeSwitch","$columnList","parents","ProgramControlButtons","$buttonStart","$buttonRollback","isActive","executeSelectedStatements","rollback","ResultsetPresenter","paginationSize","writeQueryListeners","showResultsBusy","showResultPending","$paginationDiv","$arrowLeft","$infoDiv","$arrowRight","paginationFrom","floor","showResults","activateButtons","paginationAll","min","listener","fetchSelectedStatements","hasDDLStatements","some","isDDLStatement","hasWriteStatements","isWriteStatement","executeDDLWriteStatementsEmbedded","executeDDLWriteStatementsInOnlineIDE","executeStatements","sucessfullyExecutedModifyingStatements","getDatabaseExplorer","refresh","notify","getNewStatements","new_statements","firstStatementIndex","executeNewStatements","AddDatabaseStatements","appendStatements","modifyingStatements","resetDatabase","fromIndex","executeStatementsString","successfullyExecutedModifyingStatements","showErrors","callback1","laterSelectExists","isSelectStatement","presentResultsIntern","minimapColors","linesDecorationsClassName","minimapColor","setModelMarkers","$runtimeErrorsTab","$runtimeErrorsTabHeading","showErrorDecorations","$errorList","$errorLine","revealRangeInCenter","$sqlDiv","colorize","$messageDiv","$resultTabheading","$resultHeader","headerDiv","$bodyDiv","waitFunction","$header","rows","$row","cell","monacoEditor","Notifier","isOpen","isPolling","counter","isLongPolling","longPollCounter","databaseVersion","onOpen","startLongPolling","rollbackLocal","callbackIfTooFewStatements","callbackIfDone","doRefreshDatabaseExplorer","poll","getNewStatementsHttp","rollbackToVersion","longPoll","resp","WaitOverlay","$waitDiv","visible","fadeOutPending","$bitteWartenText","$bitteWartenProgress","HistoryViewer","$historyPanel","panelEntries","panelEntry","makePanelEntry","makeLastButtonActive","$rollbackButton","$index","$text","$copybutton","$rollbackbutton","rollbackEmbedded","rollbackLocalNeeded","writeQueryManager","initialTemplateDump","initialStatements","writtenStatements","historyViewer","rightDiv","compiler","semicolonAngel","matchMedia","matches","login","initSliders","BottomDiv","checkStartupComplete","startTimer","sendBeacon","timerHandle","isDirty","compile","renderErrorCount","ErrorManager","oldDecorations","lightBulbOnClickFunctionList","$bracket_warning","children","$errorDiv","getSortedAndFilteredErrors","getErrorCount","borderLeftClass","lightBulbClass","class","onClickFunction","processError","Warning","Info","$file","$error","locf","$errorDivs","$lineColumn","category","$message","showError","HomeworkManager","showRevisionActive","$homeworkTab","$homeworkTabLeft","$homeworkTabRight","$showRevisionButton","showRevision","originalModel","modifiedModel","createDiffEditor","getElementById","enableSplitViewResizing","originalEditable","renderSideBySide","original","modified","daysWithModules","dateString","date","dateWithoutTime","getDate","getMonth","getFullYear","dateToStringWithoutTime","dwm","day","m1","m2","moduleWithWorkspace","EmbeddedSlider","$container","firstLast","horVert","$otherDiv","initSlider","$sliderDiv","cursor","slide","otherHeight","newHeight","newOtherHeight","otherWidth","newWidth","newOtherWidth","EmbeddedFileExplorer","$fileListDiv","addModule","$filesDiv","$addButton","currentFile","selectFile","removeFile","script","$fileDiv","hint","$hintDiv","$monacoDiv","syntaxMap","md1","markdownit","highlight","str","lang","renderer","code_inline","idx","env","content","render","md2","codeMap","uncoloredtext","EmbeddedIndexedDB","databaseIdentifier","indexedDB","onsuccess","onupgradeneeded","objectStoreScripts","createObjectStore","keyPath","autoIncrement","transaction","oncomplete","scriptId","objectStore","databaseID","WriteQueryManager","statementsToExecute","statementsToWrite","atLeastOneExecuted","getDatabase","writeStatementsIfNecessary","forceWriteStatements","writeDatabase","$databaseResetButton","statementsSql","DatabaseFetcher","urlWithoutProtocol","urlLowerCase","loadSqLiteDump","loadMySql","saveDatabaseToCache","loadFromUrl","MainEmbedded","scriptList","programIsExecutable","compileRunsAfterCodeReset","readConfig","databaseURL","$dbTreeDiv","load","loadableDb","initDatabase","withFileList","fileExplorer","getFirstModule","initScripts","indexedDBReady","readScripts","databaseReady","removeAllFiles","initWorkspace","$filesListDiv","setFirstFileActive","addHint","configJson","withOutput","withErrorList","withBottomPanel","markFile","lineNumbersMinChars","getScript","scriptListJSon","saveScripts","countDown","$codeResetButton","oneNotSaved","writeScript","removeScript","considerShowingCodeResetButton","$centerDiv","makeWaitDiv","$codeResetModalWindow","makeCodeResetModalWindow","$databaseResetModalWindow","makeDatabaseResetModalWindow","makeRightDiv","$editorDiv","$bracketErrorDiv","makeBracketErrorDiv","$controlsDiv","$bottomDivInner","makeBottomDiv","makeFilesDiv","$rightDivInner","$rightSideContainer","$infoButton","$buttonOpen","$openInputButton","loadDatabaseFromFile","$buttonSave","saveDatabaseToFile","addWriteQueryListener","dbImportExport","waitHtml","$parent","$window","deleteScriptsInDB","$filesHeader","$tabheadings","$thLeftSide","$thErrors","$thPCode","$thHistory","$thRightSide","$tabError","$tabPCode","$tabHistory","$thRun","EmbeddedStarter","mainEmbeddedList","initJavaOnlineDivs","$script","initDiv","embeddedStarter","prefix","editorPath","monacoEditorPath","require","paths","availableLanguages","ignoreDuplicateModules","initEditor"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,G,0FC3ErD,IAAIC,EAAW,SAAUlC,GACvB,aAEA,IAAImC,EAAKvB,OAAOkB,UACZM,EAASD,EAAGJ,eAEZM,EAA4B,mBAAXpB,OAAwBA,OAAS,GAClDqB,EAAiBD,EAAQE,UAAY,aACrCC,EAAsBH,EAAQI,eAAiB,kBAC/CC,EAAoBL,EAAQnB,aAAe,gBAE/C,SAASyB,EAAOC,EAAKnB,EAAKN,GAOxB,OANAP,OAAOC,eAAe+B,EAAKnB,EAAK,CAC9BN,MAAOA,EACPL,YAAY,EACZ+B,cAAc,EACdC,UAAU,IAELF,EAAInB,GAEb,IAEEkB,EAAO,GAAI,IACX,MAAOI,GACPJ,EAAS,SAASC,EAAKnB,EAAKN,GAC1B,OAAOyB,EAAInB,GAAON,GAItB,SAAS6B,EAAKC,EAASC,EAASC,EAAMC,GAEpC,IAAIC,EAAiBH,GAAWA,EAAQpB,qBAAqBwB,EAAYJ,EAAUI,EAC/EC,EAAY3C,OAAOY,OAAO6B,EAAevB,WACzC0B,EAAU,IAAIC,EAAQL,GAAe,IAMzC,OAFAG,EAAUG,QAuMZ,SAA0BT,EAASE,EAAMK,GACvC,IAAIG,EAhLuB,iBAkL3B,OAAO,SAAgBC,EAAQC,GAC7B,GAjLoB,cAiLhBF,EACF,MAAM,IAAIG,MAAM,gCAGlB,GApLoB,cAoLhBH,EAA6B,CAC/B,GAAe,UAAXC,EACF,MAAMC,EAKR,OAAOE,IAMT,IAHAP,EAAQI,OAASA,EACjBJ,EAAQK,IAAMA,IAED,CACX,IAAIG,EAAWR,EAAQQ,SACvB,GAAIA,EAAU,CACZ,IAAIC,EAAiBC,EAAoBF,EAAUR,GACnD,GAAIS,EAAgB,CAClB,GAAIA,IAAmBE,EAAkB,SACzC,OAAOF,GAIX,GAAuB,SAAnBT,EAAQI,OAGVJ,EAAQY,KAAOZ,EAAQa,MAAQb,EAAQK,SAElC,GAAuB,UAAnBL,EAAQI,OAAoB,CACrC,GApNqB,mBAoNjBD,EAEF,MADAA,EAlNc,YAmNRH,EAAQK,IAGhBL,EAAQc,kBAAkBd,EAAQK,SAEN,WAAnBL,EAAQI,QACjBJ,EAAQe,OAAO,SAAUf,EAAQK,KAGnCF,EA7NkB,YA+NlB,IAAIa,EAASC,EAASxB,EAASE,EAAMK,GACrC,GAAoB,WAAhBgB,EAAOE,KAAmB,CAO5B,GAJAf,EAAQH,EAAQmB,KAlOA,YAFK,iBAwOjBH,EAAOX,MAAQM,EACjB,SAGF,MAAO,CACLhD,MAAOqD,EAAOX,IACdc,KAAMnB,EAAQmB,MAGS,UAAhBH,EAAOE,OAChBf,EAhPgB,YAmPhBH,EAAQI,OAAS,QACjBJ,EAAQK,IAAMW,EAAOX,OA/QPe,CAAiB3B,EAASE,EAAMK,GAE7CD,EAcT,SAASkB,EAASI,EAAIjC,EAAKiB,GACzB,IACE,MAAO,CAAEa,KAAM,SAAUb,IAAKgB,EAAGxE,KAAKuC,EAAKiB,IAC3C,MAAOd,GACP,MAAO,CAAE2B,KAAM,QAASb,IAAKd,IAhBjC/C,EAAQgD,KAAOA,EAoBf,IAOImB,EAAmB,GAMvB,SAASb,KACT,SAASwB,KACT,SAASC,KAIT,IAAIC,EAAoB,GACxBrC,EAAOqC,EAAmB1C,GAAgB,WACxC,OAAO2C,QAGT,IAAIC,EAAWtE,OAAOuE,eAClBC,EAA0BF,GAAYA,EAASA,EAASG,EAAO,MAC/DD,GACAA,IAA4BjD,GAC5BC,EAAO/B,KAAK+E,EAAyB9C,KAGvC0C,EAAoBI,GAGtB,IAAIE,EAAKP,EAA2BjD,UAClCwB,EAAUxB,UAAYlB,OAAOY,OAAOwD,GAYtC,SAASO,EAAsBzD,GAC7B,CAAC,OAAQ,QAAS,UAAU0D,SAAQ,SAAS5B,GAC3CjB,EAAOb,EAAW8B,GAAQ,SAASC,GACjC,OAAOoB,KAAKvB,QAAQE,EAAQC,SAkClC,SAAS4B,EAAclC,EAAWmC,GAgChC,IAAIC,EAgCJV,KAAKvB,QA9BL,SAAiBE,EAAQC,GACvB,SAAS+B,IACP,OAAO,IAAIF,GAAY,SAASG,EAASC,IAnC7C,SAASC,EAAOnC,EAAQC,EAAKgC,EAASC,GACpC,IAAItB,EAASC,EAASlB,EAAUK,GAASL,EAAWM,GACpD,GAAoB,UAAhBW,EAAOE,KAEJ,CACL,IAAIsB,EAASxB,EAAOX,IAChB1C,EAAQ6E,EAAO7E,MACnB,OAAIA,GACiB,iBAAVA,GACPiB,EAAO/B,KAAKc,EAAO,WACduE,EAAYG,QAAQ1E,EAAM8E,SAASC,MAAK,SAAS/E,GACtD4E,EAAO,OAAQ5E,EAAO0E,EAASC,MAC9B,SAAS/C,GACVgD,EAAO,QAAShD,EAAK8C,EAASC,MAI3BJ,EAAYG,QAAQ1E,GAAO+E,MAAK,SAASC,GAI9CH,EAAO7E,MAAQgF,EACfN,EAAQG,MACP,SAASI,GAGV,OAAOL,EAAO,QAASK,EAAOP,EAASC,MAvBzCA,EAAOtB,EAAOX,KAiCZkC,CAAOnC,EAAQC,EAAKgC,EAASC,MAIjC,OAAOH,EAaLA,EAAkBA,EAAgBO,KAChCN,EAGAA,GACEA,KAkHV,SAAS1B,EAAoBF,EAAUR,GACrC,IAAII,EAASI,EAASzB,SAASiB,EAAQI,QACvC,QA3TEyC,IA2TEzC,EAAsB,CAKxB,GAFAJ,EAAQQ,SAAW,KAEI,UAAnBR,EAAQI,OAAoB,CAE9B,GAAII,EAASzB,SAAiB,SAG5BiB,EAAQI,OAAS,SACjBJ,EAAQK,SAtUZwC,EAuUInC,EAAoBF,EAAUR,GAEP,UAAnBA,EAAQI,QAGV,OAAOO,EAIXX,EAAQI,OAAS,QACjBJ,EAAQK,IAAM,IAAIyC,UAChB,kDAGJ,OAAOnC,EAGT,IAAIK,EAASC,EAASb,EAAQI,EAASzB,SAAUiB,EAAQK,KAEzD,GAAoB,UAAhBW,EAAOE,KAIT,OAHAlB,EAAQI,OAAS,QACjBJ,EAAQK,IAAMW,EAAOX,IACrBL,EAAQQ,SAAW,KACZG,EAGT,IAAIoC,EAAO/B,EAAOX,IAElB,OAAM0C,EAOFA,EAAK5B,MAGPnB,EAAQQ,EAASwC,YAAcD,EAAKpF,MAGpCqC,EAAQiD,KAAOzC,EAAS0C,QAQD,WAAnBlD,EAAQI,SACVJ,EAAQI,OAAS,OACjBJ,EAAQK,SA1XVwC,GAoYF7C,EAAQQ,SAAW,KACZG,GANEoC,GA3BP/C,EAAQI,OAAS,QACjBJ,EAAQK,IAAM,IAAIyC,UAAU,oCAC5B9C,EAAQQ,SAAW,KACZG,GAoDX,SAASwC,EAAaC,GACpB,IAAIC,EAAQ,CAAEC,OAAQF,EAAK,IAEvB,KAAKA,IACPC,EAAME,SAAWH,EAAK,IAGpB,KAAKA,IACPC,EAAMG,WAAaJ,EAAK,GACxBC,EAAMI,SAAWL,EAAK,IAGxB3B,KAAKiC,WAAWC,KAAKN,GAGvB,SAASO,EAAcP,GACrB,IAAIrC,EAASqC,EAAMQ,YAAc,GACjC7C,EAAOE,KAAO,gBACPF,EAAOX,IACdgD,EAAMQ,WAAa7C,EAGrB,SAASf,EAAQL,GAIf6B,KAAKiC,WAAa,CAAC,CAAEJ,OAAQ,SAC7B1D,EAAYoC,QAAQmB,EAAc1B,MAClCA,KAAKqC,OAAM,GA8Bb,SAASjC,EAAOkC,GACd,GAAIA,EAAU,CACZ,IAAIC,EAAiBD,EAASjF,GAC9B,GAAIkF,EACF,OAAOA,EAAenH,KAAKkH,GAG7B,GAA6B,mBAAlBA,EAASd,KAClB,OAAOc,EAGT,IAAKE,MAAMF,EAASG,QAAS,CAC3B,IAAIxH,GAAK,EAAGuG,EAAO,SAASA,IAC1B,OAASvG,EAAIqH,EAASG,QACpB,GAAItF,EAAO/B,KAAKkH,EAAUrH,GAGxB,OAFAuG,EAAKtF,MAAQoG,EAASrH,GACtBuG,EAAK9B,MAAO,EACL8B,EAOX,OAHAA,EAAKtF,WA1eTkF,EA2eII,EAAK9B,MAAO,EAEL8B,GAGT,OAAOA,EAAKA,KAAOA,GAKvB,MAAO,CAAEA,KAAM1C,GAIjB,SAASA,IACP,MAAO,CAAE5C,WA1fPkF,EA0fyB1B,MAAM,GA+MnC,OA7mBAG,EAAkBhD,UAAYiD,EAC9BpC,EAAO2C,EAAI,cAAeP,GAC1BpC,EAAOoC,EAA4B,cAAeD,GAClDA,EAAkB6C,YAAchF,EAC9BoC,EACArC,EACA,qBAaF1C,EAAQ4H,oBAAsB,SAASC,GACrC,IAAIC,EAAyB,mBAAXD,GAAyBA,EAAOE,YAClD,QAAOD,IACHA,IAAShD,GAG2B,uBAAnCgD,EAAKH,aAAeG,EAAKrH,QAIhCT,EAAQgI,KAAO,SAASH,GAQtB,OAPIjH,OAAOqH,eACTrH,OAAOqH,eAAeJ,EAAQ9C,IAE9B8C,EAAOK,UAAYnD,EACnBpC,EAAOkF,EAAQnF,EAAmB,sBAEpCmF,EAAO/F,UAAYlB,OAAOY,OAAO8D,GAC1BuC,GAOT7H,EAAQmI,MAAQ,SAAStE,GACvB,MAAO,CAAEoC,QAASpC,IAsEpB0B,EAAsBE,EAAc3D,WACpCa,EAAO8C,EAAc3D,UAAWU,GAAqB,WACnD,OAAOyC,QAETjF,EAAQyF,cAAgBA,EAKxBzF,EAAQoI,MAAQ,SAASnF,EAASC,EAASC,EAAMC,EAAasC,QACxC,IAAhBA,IAAwBA,EAAc2C,SAE1C,IAAIC,EAAO,IAAI7C,EACbzC,EAAKC,EAASC,EAASC,EAAMC,GAC7BsC,GAGF,OAAO1F,EAAQ4H,oBAAoB1E,GAC/BoF,EACAA,EAAK7B,OAAOP,MAAK,SAASF,GACxB,OAAOA,EAAOrB,KAAOqB,EAAO7E,MAAQmH,EAAK7B,WAuKjDlB,EAAsBD,GAEtB3C,EAAO2C,EAAI5C,EAAmB,aAO9BC,EAAO2C,EAAIhD,GAAgB,WACzB,OAAO2C,QAGTtC,EAAO2C,EAAI,YAAY,WACrB,MAAO,wBAkCTtF,EAAQuI,KAAO,SAAS3G,GACtB,IAAI2G,EAAO,GACX,IAAK,IAAI9G,KAAOG,EACd2G,EAAKpB,KAAK1F,GAMZ,OAJA8G,EAAKC,UAIE,SAAS/B,IACd,KAAO8B,EAAKb,QAAQ,CAClB,IAAIjG,EAAM8G,EAAKE,MACf,GAAIhH,KAAOG,EAGT,OAFA6E,EAAKtF,MAAQM,EACbgF,EAAK9B,MAAO,EACL8B,EAQX,OADAA,EAAK9B,MAAO,EACL8B,IAsCXzG,EAAQqF,OAASA,EAMjB5B,EAAQ3B,UAAY,CAClBiG,YAAatE,EAEb6D,MAAO,SAASoB,GAcd,GAbAzD,KAAK0D,KAAO,EACZ1D,KAAKwB,KAAO,EAGZxB,KAAKb,KAAOa,KAAKZ,WArgBjBgC,EAsgBApB,KAAKN,MAAO,EACZM,KAAKjB,SAAW,KAEhBiB,KAAKrB,OAAS,OACdqB,KAAKpB,SA1gBLwC,EA4gBApB,KAAKiC,WAAW1B,QAAQ4B,IAEnBsB,EACH,IAAK,IAAIjI,KAAQwE,KAEQ,MAAnBxE,EAAKmI,OAAO,IACZxG,EAAO/B,KAAK4E,KAAMxE,KACjBgH,OAAOhH,EAAKoI,MAAM,MACrB5D,KAAKxE,QAphBX4F,IA0hBFyC,KAAM,WACJ7D,KAAKN,MAAO,EAEZ,IACIoE,EADY9D,KAAKiC,WAAW,GACLG,WAC3B,GAAwB,UAApB0B,EAAWrE,KACb,MAAMqE,EAAWlF,IAGnB,OAAOoB,KAAK+D,MAGd1E,kBAAmB,SAAS2E,GAC1B,GAAIhE,KAAKN,KACP,MAAMsE,EAGR,IAAIzF,EAAUyB,KACd,SAASiE,EAAOC,EAAKC,GAYnB,OAXA5E,EAAOE,KAAO,QACdF,EAAOX,IAAMoF,EACbzF,EAAQiD,KAAO0C,EAEXC,IAGF5F,EAAQI,OAAS,OACjBJ,EAAQK,SArjBZwC,KAwjBY+C,EAGZ,IAAK,IAAIlJ,EAAI+E,KAAKiC,WAAWQ,OAAS,EAAGxH,GAAK,IAAKA,EAAG,CACpD,IAAI2G,EAAQ5B,KAAKiC,WAAWhH,GACxBsE,EAASqC,EAAMQ,WAEnB,GAAqB,SAAjBR,EAAMC,OAIR,OAAOoC,EAAO,OAGhB,GAAIrC,EAAMC,QAAU7B,KAAK0D,KAAM,CAC7B,IAAIU,EAAWjH,EAAO/B,KAAKwG,EAAO,YAC9ByC,EAAalH,EAAO/B,KAAKwG,EAAO,cAEpC,GAAIwC,GAAYC,EAAY,CAC1B,GAAIrE,KAAK0D,KAAO9B,EAAME,SACpB,OAAOmC,EAAOrC,EAAME,UAAU,GACzB,GAAI9B,KAAK0D,KAAO9B,EAAMG,WAC3B,OAAOkC,EAAOrC,EAAMG,iBAGjB,GAAIqC,GACT,GAAIpE,KAAK0D,KAAO9B,EAAME,SACpB,OAAOmC,EAAOrC,EAAME,UAAU,OAG3B,KAAIuC,EAMT,MAAM,IAAIxF,MAAM,0CALhB,GAAImB,KAAK0D,KAAO9B,EAAMG,WACpB,OAAOkC,EAAOrC,EAAMG,gBAU9BzC,OAAQ,SAASG,EAAMb,GACrB,IAAK,IAAI3D,EAAI+E,KAAKiC,WAAWQ,OAAS,EAAGxH,GAAK,IAAKA,EAAG,CACpD,IAAI2G,EAAQ5B,KAAKiC,WAAWhH,GAC5B,GAAI2G,EAAMC,QAAU7B,KAAK0D,MACrBvG,EAAO/B,KAAKwG,EAAO,eACnB5B,KAAK0D,KAAO9B,EAAMG,WAAY,CAChC,IAAIuC,EAAe1C,EACnB,OAIA0C,IACU,UAAT7E,GACS,aAATA,IACD6E,EAAazC,QAAUjD,GACvBA,GAAO0F,EAAavC,aAGtBuC,EAAe,MAGjB,IAAI/E,EAAS+E,EAAeA,EAAalC,WAAa,GAItD,OAHA7C,EAAOE,KAAOA,EACdF,EAAOX,IAAMA,EAET0F,GACFtE,KAAKrB,OAAS,OACdqB,KAAKwB,KAAO8C,EAAavC,WAClB7C,GAGFc,KAAKuE,SAAShF,IAGvBgF,SAAU,SAAShF,EAAQyC,GACzB,GAAoB,UAAhBzC,EAAOE,KACT,MAAMF,EAAOX,IAcf,MAXoB,UAAhBW,EAAOE,MACS,aAAhBF,EAAOE,KACTO,KAAKwB,KAAOjC,EAAOX,IACM,WAAhBW,EAAOE,MAChBO,KAAK+D,KAAO/D,KAAKpB,IAAMW,EAAOX,IAC9BoB,KAAKrB,OAAS,SACdqB,KAAKwB,KAAO,OACa,WAAhBjC,EAAOE,MAAqBuC,IACrChC,KAAKwB,KAAOQ,GAGP9C,GAGTsF,OAAQ,SAASzC,GACf,IAAK,IAAI9G,EAAI+E,KAAKiC,WAAWQ,OAAS,EAAGxH,GAAK,IAAKA,EAAG,CACpD,IAAI2G,EAAQ5B,KAAKiC,WAAWhH,GAC5B,GAAI2G,EAAMG,aAAeA,EAGvB,OAFA/B,KAAKuE,SAAS3C,EAAMQ,WAAYR,EAAMI,UACtCG,EAAcP,GACP1C,IAKb,MAAS,SAAS2C,GAChB,IAAK,IAAI5G,EAAI+E,KAAKiC,WAAWQ,OAAS,EAAGxH,GAAK,IAAKA,EAAG,CACpD,IAAI2G,EAAQ5B,KAAKiC,WAAWhH,GAC5B,GAAI2G,EAAMC,SAAWA,EAAQ,CAC3B,IAAItC,EAASqC,EAAMQ,WACnB,GAAoB,UAAhB7C,EAAOE,KAAkB,CAC3B,IAAIgF,EAASlF,EAAOX,IACpBuD,EAAcP,GAEhB,OAAO6C,GAMX,MAAM,IAAI5F,MAAM,0BAGlB6F,cAAe,SAASpC,EAAUf,EAAYE,GAa5C,OAZAzB,KAAKjB,SAAW,CACdzB,SAAU8C,EAAOkC,GACjBf,WAAYA,EACZE,QAASA,GAGS,SAAhBzB,KAAKrB,SAGPqB,KAAKpB,SA9rBPwC,GAisBOlC,IAQJnE,EA9sBK,CAqtBiBC,EAAOD,SAGtC,IACE4J,mBAAqB1H,EACrB,MAAO2H,GAWmB,iBAAfC,WACTA,WAAWF,mBAAqB1H,EAEhC6H,SAAS,IAAK,yBAAdA,CAAwC7H,K,iKC/uBhC8H,E,+HAAZ,SAAYA,GACRA,+BAEAA,yCACAA,qDACAA,yCACAA,uCACAA,mCACAA,mBACAA,qBAEAA,qCACAA,yCACAA,8BACAA,oCACAA,sCACAA,gCACAA,sCACAA,sCACAA,sCACAA,kCACAA,sCACAA,sCACAA,gCACAA,8BACAA,gCACAA,sCACAA,8CACAA,wCACAA,wCACAA,oCACAA,sCACAA,sCACAA,kCACAA,sCACAA,gCACAA,oCACAA,8CACAA,sCACAA,wCACAA,0CACAA,sCACAA,oDACAA,kCACAA,oCACAA,oCACAA,8BACAA,sCACAA,oCACAA,4CACAA,8CACAA,oCACAA,oCACAA,kCACAA,8BACAA,kCACAA,0CAEAA,8BACAA,gCACAA,gCAEAA,kCACAA,wCACAA,kCACAA,oCACAA,oCACAA,oCACAA,8BACAA,8BACAA,oCACAA,sCACAA,8BACAA,oCACAA,kCACAA,wCACAA,wCACAA,wCACAA,sCACAA,wCACAA,4CAEAA,oCACAA,gDACAA,8BACAA,sCAEAA,kCACAA,sCACAA,oCACAA,kCAGAA,kCACAA,oCACAA,8CACAA,gDACAA,4CACAA,8CACAA,wDAGAA,kBACAA,wBACAA,sBAAOA,oBAAMA,wCAAgBA,4BAC7BA,kCAAaA,kCACbA,0CACAA,uBAAOA,2BAASA,qCAAcA,yCAC9BA,uCACAA,uBACAA,6BAGAA,+BAEAA,uBAGAA,uBAGAA,+BAGAA,qBAGAA,iBAGAA,qBAGAA,uBAEAA,mBAGAA,2BAGAA,6BAGAA,yCAGAA,2BAEAA,2CAKAA,qCACAA,iCACAA,2BACAA,6BACAA,uBACAA,6BACAA,qBACAA,yBACAA,+BACAA,iCACAA,yBACAA,uBACAA,+BACAA,+CAvKJ,CAAYA,MAAS,KA0Kd,ICxKFC,EDwKMC,GAAiB,OACvBF,EAAUG,WAAa,kBADA,IAGvBH,EAAUI,gBAAkB,0BAHL,IAIvBJ,EAAUK,sBAAwB,6BAJX,IAKvBL,EAAUM,gBAAkB,4BALL,IAMvBN,EAAUO,eAAiB,gCANJ,IAOvBP,EAAUQ,aAAe,uBAPF,IAQvBR,EAAUS,KAAO,QARM,IASvBT,EAAUU,MAAQ,SATK,IAWvBV,EAAUW,cAAgB,UAXH,IAYvBX,EAAUY,gBAAkB,YAZL,IAavBZ,EAAUa,UAAY,MAbC,IAcvBb,EAAUc,aAAe,SAdF,IAevBd,EAAUe,cAAgB,UAfH,IAgBvBf,EAAUgB,WAAa,OAhBA,IAiBvBhB,EAAUiB,cAAgB,UAjBH,IAkBvBjB,EAAUkB,cAAgB,UAlBH,IAmBvBlB,EAAUmB,cAAgB,UAnBH,IAoBvBnB,EAAUoB,YAAc,QApBD,IAqBvBpB,EAAUqB,cAAgB,UArBH,IAsBvBrB,EAAUsB,cAAgB,UAtBH,IAuBvBtB,EAAUuB,WAAa,OAvBA,IAwBvBvB,EAAUwB,UAAY,MAxBC,IAyBvBxB,EAAUyB,WAAa,OAzBA,IA0BvBzB,EAAU0B,cAAgB,UA1BH,IA2BvB1B,EAAU2B,kBAAoB,cA3BP,IA4BvB3B,EAAU4B,eAAiB,WA5BJ,IA6BvB5B,EAAU6B,eAAiB,WA7BJ,IA8BvB7B,EAAU8B,aAAe,SA9BF,IA+BvB9B,EAAU+B,cAAgB,UA/BH,IAgCvB/B,EAAUgC,cAAgB,UAhCH,IAiCvBhC,EAAUiC,YAAc,QAjCD,IAkCvBjC,EAAUkC,cAAgB,UAlCH,IAmCvBlC,EAAUmC,WAAa,OAnCA,IAoCvBnC,EAAUoC,aAAe,SApCF,IAqCvBpC,EAAUqC,kBAAoB,cArCP,IAsCvBrC,EAAUsC,cAAgB,UAtCH,IAuCvBtC,EAAUuC,eAAiB,WAvCJ,IAwCvBvC,EAAUwC,gBAAkB,YAxCL,IAyCvBxC,EAAUyC,cAAgB,UAzCH,IA0CvBzC,EAAU0C,qBAAuB,iBA1CV,IA2CvB1C,EAAU2C,YAAc,QA3CD,IA4CvB3C,EAAU4C,aAAe,SA5CF,IA6CvB5C,EAAU6C,aAAe,SA7CF,IA8CvB7C,EAAU8C,UAAY,MA9CC,IA+CvB9C,EAAU+C,cAAgB,UA/CH,IAgDvB/C,EAAUgD,aAAe,SAhDF,IAiDvBhD,EAAUiD,iBAAmB,aAjDN,IAkDvBjD,EAAUkD,kBAAoB,cAlDP,IAmDvBlD,EAAUmD,aAAe,SAnDF,IAoDvBnD,EAAUoD,aAAe,SApDF,IAqDvBpD,EAAUqD,YAAc,QArDD,IAsDvBrD,EAAUsD,UAAY,MAtDC,IAuDvBtD,EAAUuD,YAAc,QAvDD,IAwDvBvD,EAAUwD,gBAAkB,YAxDL,IA2DvBxD,EAAUyD,WAAa,OA3DA,IA4DvBzD,EAAU0D,UAAY,MA5DC,IA6DvB1D,EAAU2D,WAAa,OA7DA,IA+DvB3D,EAAU4D,YAAc,QA/DD,IAgEvB5D,EAAU6D,eAAiB,WAhEJ,IAiEvB7D,EAAU8D,YAAc,QAjED,IAkEvB9D,EAAU+D,aAAe,SAlEF,IAmEvB/D,EAAUgE,aAAe,SAnEF,IAoEvBhE,EAAUiE,aAAe,SApEF,IAqEvBjE,EAAUkE,UAAY,MArEC,IAsEvBlE,EAAUmE,UAAY,MAtEC,IAuEvBnE,EAAUoE,aAAe,SAvEF,IAwEvBpE,EAAUqE,cAAgB,UAxEH,IAyEvBrE,EAAUsE,UAAY,MAzEC,IA0EvBtE,EAAUuE,aAAe,UA1EF,IA2EvBvE,EAAUwE,YAAc,QA3ED,IA4EvBxE,EAAUyE,eAAiB,WA5EJ,IA6EvBzE,EAAU0E,eAAiB,WA7EJ,IA8EvB1E,EAAU2E,eAAiB,WA9EJ,IA+EvB3E,EAAU4E,cAAgB,UA/EH,IAgFvB5E,EAAU6E,eAAiB,WAhFJ,IAiFvB7E,EAAU8E,iBAAmB,aAjFN,IAkFvB9E,EAAU+E,aAAe,SAlFF,IAmFvB/E,EAAUgF,mBAAqB,eAnFR,IAoFvBhF,EAAUiF,UAAY,MApFC,IAqFvBjF,EAAUkF,cAAgB,UArFH,IAsFvBlF,EAAUmF,YAAc,QAtFD,IAuFvBnF,EAAUoF,cAAgB,UAvFH,IAwFvBpF,EAAUqF,aAAe,SAxFF,IAyFvBrF,EAAUsF,YAAc,QAzFD,IA4FvBtF,EAAUuF,YAAc,KA5FD,IA6FvBvF,EAAUwF,aAAe,KA7FF,IA8FvBxF,EAAUyF,kBAAoB,KA9FP,IA+FvBzF,EAAU0F,mBAAqB,KA/FR,IAgGvB1F,EAAU2F,iBAAmB,KAhGN,IAiGvB3F,EAAU4F,kBAAoB,KAjGP,IAkGvB5F,EAAU6F,uBAAyB,MAlGZ,IAqGvB7F,EAAU8F,IAAM,KArGO,IAsGvB9F,EAAU+F,MAAQ,KAtGK,IAuGvB/F,EAAUgG,OAAS,KAvGI,IAwGvBhG,EAAUiG,KAAO,KAxGM,IAyGvBjG,EAAUkG,eAAiB,KAzGJ,IA0GvBlG,EAAUmG,SAAW,KA1GE,IA2GvBnG,EAAUoG,YAAc,KA3GD,IA4GvBpG,EAAUqG,YAAc,KA5GD,IA6GvBrG,EAAUsG,gBAAkB,KA7GL,IA8GvBtG,EAAUuG,MAAQ,KA9GK,IA+GvBvG,EAAUwG,QAAU,KA/GG,IAgHvBxG,EAAUyG,MAAQ,KAhHK,IAiHvBzG,EAAU0G,aAAe,MAjHF,IAkHvB1G,EAAU2G,eAAiB,MAlHJ,IAmHvB3G,EAAU4G,cAAgB,MAnHH,IAsHvB5G,EAAU6G,UAAY,KAtHC,IAuHvB7G,EAAU8G,MAAQ,KAvHK,IA0HvB9G,EAAU+G,MAAQ,KA1HK,IA6HvB/G,EAAUgH,UAAY,MA7HC,IAgIvBhH,EAAUiH,GAAK,KAhIQ,IAmIvBjH,EAAUkH,KAAO,KAnIM,IAsIvBlH,EAAUmH,KAAO,KAtIM,IAyIvBnH,EAAUoH,MAAQ,mBAzIK,IA0IvBpH,EAAUqH,IAAM,wBA1IO,IA6IvBrH,EAAUsH,QAAU,qBA7IG,IAgJvBtH,EAAUuH,eAAiB,mCAhJJ,IAmJvBvH,EAAUwH,QAAU,iBAnJG,IAqJvBxH,EAAUyH,gBAAkB,2BArJL,GAyJjBC,EAAiD,CACxD,IAAK1H,EAAUuF,YACf,IAAKvF,EAAUwF,aACf,IAAKxF,EAAUyF,kBACf,IAAKzF,EAAU0F,mBACf,IAAK1F,EAAU2F,iBACf,IAAK3F,EAAU4F,kBAGf,IAAK5F,EAAU8F,IACf,IAAK9F,EAAU+G,MACf,IAAK/G,EAAU+F,MACf,IAAK/F,EAAUgG,OACf,IAAKhG,EAAUiG,KACf,IAAKjG,EAAUkG,eACf,IAAKlG,EAAUmG,SACf,KAAMnG,EAAUgH,UAChB,IAAKhH,EAAUiH,GACf,IAAKjH,EAAUkH,KACf,IAAKlH,EAAUmH,KACfQ,IAAM3H,EAAUoG,YAChB,IAAKpG,EAAUqG,YACf,IAAKrG,EAAUsG,gBACf,IAAKtG,EAAUuG,MACf,IAAKvG,EAAUwG,QACf,IAAKxG,EAAUyG,MACf,KAAMzG,EAAU4H,SAEhB,IAAK5H,EAAU6G,UACf,IAAK7G,EAAU8G,MAGf,IAAK9G,EAAUoH,MACf,KAAMpH,EAAUqH,IAGhB,KAAMrH,EAAUsH,QAChB,KAAMtH,EAAU6H,UAGTC,EAA6C,CACpD,OAAU9H,EAAUW,cACpB,SAAYX,EAAUY,gBACtB,GAAMZ,EAAUa,UAChB,MAASb,EAAUc,aACnB,OAAUd,EAAUe,cACpB,IAAOf,EAAUgB,WACjB,OAAUhB,EAAUiB,cACpB,OAAUjB,EAAUkB,cACpB,OAAUlB,EAAUmB,cACpB,KAAQnB,EAAUoB,YAClB,OAAUpB,EAAUqB,cACpB,OAAUrB,EAAUsB,cACpB,IAAOtB,EAAUuB,WACjB,GAAMvB,EAAUwB,UAChB,IAAOxB,EAAUyB,WACjB,OAAUzB,EAAU0B,cACpB,WAAc1B,EAAU2B,kBACxB,QAAW3B,EAAU4B,eACrB,QAAW5B,EAAU6B,eACrB,MAAS7B,EAAU8B,aACnB,OAAU9B,EAAU+B,cACpB,OAAU/B,EAAUgC,cACpB,KAAQhC,EAAUiC,YAClB,OAAUjC,EAAUkC,cACpB,IAAOlC,EAAUmC,WACjB,MAASnC,EAAUoC,aACnB,WAAcpC,EAAUqC,kBACxB,OAAUrC,EAAUsC,cACpB,QAAWtC,EAAUuC,eACrB,SAAYvC,EAAUwC,gBACtB,OAAUxC,EAAUyC,cACpB,cAAiBzC,EAAU0C,qBAC3B,eAAkB1C,EAAU0C,qBAC5B,KAAQ1C,EAAU2C,YAClB,MAAS3C,EAAU4C,aACnB,KAAQ5C,EAAUS,KAClB,MAAST,EAAUU,MACnB,MAASV,EAAU6C,aACnB,GAAM7C,EAAU8C,UAChB,OAAU9C,EAAU+C,cACpB,MAAS/C,EAAUgD,aACnB,IAAOhD,EAAUiD,iBACjB,KAAQjD,EAAUkD,kBAClB,MAASlD,EAAUmD,aACnB,MAASnD,EAAUoD,aACnB,KAAQpD,EAAUqD,YAClB,GAAMrD,EAAUsD,UAChB,KAAQtD,EAAUuD,YAClB,SAAYvD,EAAUwD,gBAEtB,GAAMxD,EAAU0D,UAChB,IAAO1D,EAAUyD,WACjB,IAAOzD,EAAU2D,WAEjB,KAAQ3D,EAAU4D,YAClB,QAAW5D,EAAU6D,eACrB,KAAQ7D,EAAU8D,YAClB,MAAS9D,EAAU+D,aACnB,MAAS/D,EAAUgE,aACnB,MAAShE,EAAUiE,aACnB,GAAMjE,EAAUkE,UAChB,GAAMlE,EAAUmE,UAChB,MAASnE,EAAUoE,aACnB,OAAUpE,EAAUqE,cACpB,GAAMrE,EAAUsE,UAChB,SAAUtE,EAAUuE,aACpB,KAAQvE,EAAUwE,YAClB,QAAWxE,EAAUyE,eACrB,QAAWzE,EAAU0E,eACrB,QAAW1E,EAAU2E,eACrB,OAAU3E,EAAU4E,cACpB,QAAW5E,EAAU6E,eACrB,UAAa7E,EAAU8E,iBACvB,MAAS9E,EAAU+E,aACnB,YAAe/E,EAAUgF,mBACzB,GAAMhF,EAAUiF,UAChB,OAAUjF,EAAUkF,cACpB,KAAQlF,EAAUmF,YAClB,OAAUnF,EAAUoF,cACpB,MAASpF,EAAUqF,aACnB,KAAQrF,EAAUsF,aAKXyC,EAAiD,CACxD,EAAK,KACL,EAAK,KACL,EAAK,KACLC,IAAM,IACN,IAAK,IACL,KAAM,M,2rCCrcV,SAAK/H,GACDA,uBAAQA,+BAAYA,uCAAgBA,6CAAmBA,2CAAkBA,2CAD7E,CAAKA,MAAU,KAIf,IAgBagI,EAAb,WA+BI,c,4FAAA,SAfA,KAAAC,YAA2B,CACvBlI,EAAUoH,MAAOpH,EAAUqH,IAAKrH,EAAUsH,SAK9C,KAAAa,qBAAqD,GAErD,KAAAC,kBAAkF,CAC9E,CAAEC,MAAOrI,EAAUuE,aAAc+D,OAAQtI,EAAUsE,UAAWiE,OAAQvI,EAAUuE,cAChF,CAAE8D,MAAOrI,EAAUsD,UAAWgF,OAAQtI,EAAU2D,WAAY4E,OAAQvI,EAAUwI,OAC9E,CAAEH,MAAOrI,EAAUwI,MAAOF,OAAQtI,EAAUuD,YAAagF,OAAQvI,EAAUyI,WAC3E,CAAEJ,MAAOrI,EAAUsD,UAAWgF,OAAQtI,EAAUuD,YAAagF,OAAQvI,EAAU0I,SAI/EzN,KAAKkN,qBAAqBnI,EAAUuF,aAAevF,EAAUwF,aAC7DvK,KAAKkN,qBAAqBnI,EAAU2F,kBAAoB3F,EAAU4F,kBAClE3K,KAAKkN,qBAAqBnI,EAAUyF,mBAAqBzF,EAAU0F,mBACnEzK,KAAKkN,qBAAqBnI,EAAUwF,cAAgBxF,EAAUuF,YAC9DtK,KAAKkN,qBAAqBnI,EAAU4F,mBAAqB5F,EAAU2F,iBACnE1K,KAAKkN,qBAAqBnI,EAAU0F,oBAAsB1F,EAAUyF,kB,UArC5E,O,EAAA,G,EAAA,kBAwCI,SAAIkD,GAcA,GAZA1N,KAAK0N,MAAQA,EAAMC,QAAQ,IAAU,KACrC3N,KAAK4N,UAAY,GACjB5N,KAAK6N,UAAY,GACjB7N,KAAK8N,aAAe,KACpB9N,KAAK+N,aAAe,GACpB/N,KAAKgO,IAAM,EACXhO,KAAKiO,KAAO,EACZjO,KAAKkO,OAAS,EACdlO,KAAKmO,sBAAwB,KAC7BnO,KAAKoO,kBAAoB,KAGL,GAAhBV,EAAMjL,OACN,MAAO,CAAE4L,OAAQrO,KAAK4N,UAAWU,OAAQtO,KAAK6N,UAAWC,aAAc,MAQ3E,IALA9N,KAAKuO,YAAcb,EAAM/J,OAAO,GAEhC3D,KAAKwO,SAAWd,EAAMjL,OAAS,EAAIiL,EAAM/J,OAAO,GA5E1C,SA+EC3D,KAAKuO,aACRvO,KAAKyO,YAGT,GAAIzO,KAAK+N,aAAatL,OAAS,EAAG,CAC9B,IAAIiM,EAAc1O,KAAK+N,aAAavK,MAChCmL,EAAgB3O,KAAKkN,qBAAqBwB,GAE9C1O,KAAK4O,gBAAgB3J,EAAkByJ,GAAe,IAAMzJ,EAAkB0J,IAGlF,MAAO,CACHN,OAAQrO,KAAK4N,UACbU,OAAQtO,KAAK6N,UACbC,aAAc9N,KAAK8N,gBA7E/B,iCAkFI,SAAoBe,GAChB,GAAgC,GAA5B7O,KAAK+N,aAAatL,OAAtB,CAKA,IAAIqM,EAAc9O,KAAK+N,aAAavK,MAChC0J,EAAuBlN,KAAKkN,qBAAqB4B,GACjDD,GAAM3B,GACNlN,KAAK4O,gBAAgB3J,EAAkB6J,GAAe,IAAM7J,EAAkBiI,QARlF,CACI,IAAIwB,EAAc1O,KAAKkN,qBAAqB2B,GAC5C7O,KAAK4O,gBAAgB3J,EAAkByJ,GAAe,IAAMzJ,EAAkB4J,OArF1F,6BA+FI,SAAgB1N,GACa,MAArBnB,KAAK8N,eAAsB9N,KAAK8N,aAAe3M,KAhG3D,kBAmGI,WACInB,KAAKgO,MACLhO,KAAKuO,YAAcvO,KAAKwO,SACpBxO,KAAKgO,IAAM,EAAIhO,KAAK0N,MAAMjL,OAC1BzC,KAAKwO,SAAWxO,KAAK0N,MAAM/J,OAAO3D,KAAKgO,IAAM,GAE7ChO,KAAKwO,SAzHH,IA2HNxO,KAAKkO,WA3Gb,uBAgHI,WAEI,IAAIa,EAAO/O,KAAKuO,YAEZS,EAAmBvC,EAAgBsC,GAEvC,GAAwB,MAApBC,EAA0B,CAC1B,OAAQA,GACJ,KAAKjK,EAAUyF,kBACX,MAAqB,KAAjBxK,KAAKwO,UACLxO,KAAKiP,UAAUlK,EAAU6F,uBAAwB,MACjD5K,KAAKwB,YACLxB,KAAKwB,SAGLxB,KAAKiP,UAAUlK,EAAUyF,kBAAmB,KAC5CxK,KAAK+N,aAAa7L,KAAK8M,QACvBhP,KAAKwB,QAGb,KAAKuD,EAAUmG,SACX,MAAqB,KAAjBlL,KAAKwO,cACLxO,KAAKkP,uBAGTlP,KAAKiP,UAAUlK,EAAUmG,SAAU,UACnClL,KAAKwB,QAET,KAAKuD,EAAUmH,KACX,MAAqB,KAAjBlM,KAAKwO,UACLxO,KAAKiP,UAAUlK,EAAU4G,cAAe,MACxC3L,KAAKwB,YACLxB,KAAKwB,SAGLxB,KAAKiP,UAAUlK,EAAUmH,KAAM,UAC/BlM,KAAKwB,QAGb,KAAKuD,EAAUuG,MACX,MAAqB,KAAjBtL,KAAKwO,UACLxO,KAAKiP,UAAUlK,EAAU4H,SAAU,MACnC3M,KAAKwB,YACLxB,KAAKwB,QAEmB,KAAjBxB,KAAKwO,UACZxO,KAAKiP,UAAUlK,EAAU0G,aAAc,MACvCzL,KAAKwB,YACLxB,KAAKwB,SAILxB,KAAKiP,UAAUlK,EAAUuG,MAAO,UAChCtL,KAAKwB,QAGb,KAAKuD,EAAUwG,QACX,MAAqB,KAAjBvL,KAAKwO,UACLxO,KAAKiP,UAAUlK,EAAU2G,eAAgB,MACzC1L,KAAKwB,YACLxB,KAAKwB,SAILxB,KAAKiP,UAAUlK,EAAUwG,QAAS,UAClCvL,KAAKwB,QAGb,KAAKuD,EAAU0F,mBACXzK,KAAKmP,oBAAoBH,GACzB,MACJ,KAAKjK,EAAUuF,YACXtK,KAAK+N,aAAa7L,KAAK8M,GACvB,MACJ,KAAKjK,EAAUwF,aACXvK,KAAKmP,oBAAoBH,GACzB,MACJ,KAAKjK,EAAU2F,iBACX1K,KAAK+N,aAAa7L,KAAK8M,GACvB,MACJ,KAAKjK,EAAU4F,kBACX3K,KAAKmP,oBAAoBH,GACzB,MACJ,KAAKjK,EAAU+F,MACX,OAAI9K,KAAKoP,QAAQpP,KAAKwO,SAAU,KAC3B,CAACzJ,EAAUG,WAAYH,EAAUI,gBAAiBJ,EAAUK,sBAAuBL,EAAUwF,cAAc8E,QAAQrP,KAAKmO,wBAA0B,EAI3H,KAAjBnO,KAAKwO,cACZxO,KAAKsP,oBAAoB,OAGzBtP,KAAKiP,UAAUlK,EAAU+F,MAAO,UAChC9K,KAAKwB,aAPLxB,KAAKuP,YAUb,KAAKxK,EAAUkH,KACX,GAA6B,MAA1BjM,KAAKoO,mBAA6BpO,KAAKoO,kBAAkBoB,SAASvB,KAAOjO,KAAKiO,KAE7E,YADAjO,KAAKsP,oBAAoB,KAGzBtP,KAAKiP,UAAUlK,EAAUkH,KAAM,KAC/BjM,KAAKwB,OAET,MACJ,KAAKuD,EAAUoG,YAEX,YADAnL,KAAKyP,kBAAkB,KAE3B,KAAK1K,EAAUqG,YAEX,YADApL,KAAKyP,kBAAkB,KAE3B,KAAK1K,EAAUsH,QAKX,OAJArM,KAAKiP,UAAUlK,EAAUsH,QAAS,MAClCrM,KAAKiO,OACLjO,KAAKkO,OAAS,OACdlO,KAAKwB,OAET,KAAKuD,EAAUoH,MACf,KAAKpH,EAAUqH,IAEX,YADApM,KAAK0P,WAET,KAAK3K,EAAU6H,SAEX,YADA5M,KAAKwB,OAET,KAAKuD,EAAUiH,GAEX,YADAhM,KAAK2P,gBAET,KAAK5K,EAAUsG,gBAEX,YADArL,KAAK4P,sBAOb,OAFA5P,KAAKiP,UAAUD,EAAkBD,QACjC/O,KAAKwB,OAOLxB,KAAKoP,QAAQL,EAAM,IACnB/O,KAAKuP,YAITvP,KAAK6P,2BAnQb,iCAwQI,WACI,IAAI5B,EAAOjO,KAAKiO,KACZC,EAASlO,KAAKkO,OAEdlR,EAAY,GAEhB,IADAgD,KAAKwB,OACqB,KAApBxB,KAAKuO,aA9RL,KA8R2BvO,KAAKuO,aAClCvR,GAAKgD,KAAKuO,YACVvO,KAAKwB,OAhSH,KAkSHxB,KAAKuO,YACJvO,KAAK8P,UAAU,wFAAyF9S,EAAEyF,OAAS,EAAG,QAASwL,EAAMC,IAErIlO,KAAKwB,OACLxB,KAAKiP,UAAUlK,EAAUG,WAAYlI,EAAGiR,EAAMC,MAtR1D,uBA0RI,SAAUW,EAAekB,GAA4H,MAA3F9B,EAA2F,uDAA5EjO,KAAKiO,KAAMC,EAAiE,uDAAhDlO,KAAKkO,OAAQzL,EAAmC,wDAAjB,GAAKsN,GAAMtN,OACvItG,EAAW,CACX0S,GAAIA,EACJ3S,MAAO6T,EACPP,SAAU,CACNtB,OAAQA,EACRD,KAAMA,EACNxL,OAAQA,IAPiI,IAW9HzC,KAAKmN,mBAXyH,IAWjJ,2BAA2C,KAAlC6C,EAAkC,QACvC,GAAInB,GAAMmB,EAAO3C,QAAUrN,KAAKmO,uBAAyB6B,EAAO5C,MAAO,CACnE,IAAI6C,EAAY/B,EAASlO,KAAKoO,kBAAkBoB,SAAStB,OAASzL,EAMlE,OALAzC,KAAKoO,kBAAkBS,GAAKmB,EAAO1C,OACnCtN,KAAKoO,kBAAkBoB,SAAW,CAAEtB,OAAQlO,KAAKoO,kBAAkBoB,SAAStB,OAAQD,KAAMA,EAAMxL,OAAQwN,GACxGjQ,KAAKoO,kBAAkBlS,MAAQ8D,KAAKoO,kBAAkBlS,MAAQ,IAAM6T,OAEpE/P,KAAKmO,sBAAwB6B,EAAO1C,UAlBqG,8BAuB3ItN,KAAKiN,YAAYoC,QAAQR,IAAO,IAClC7O,KAAKmO,sBAAwBU,EAC7B7O,KAAKoO,kBAAoBjS,GAG7B6D,KAAK4N,UAAU1L,KAAK/F,KAtT5B,uBAyTI,SAAU4T,EAActN,GAAwG,IAAxFyN,EAAwF,uDAA/D,QAASjC,EAAsD,uDAAvCjO,KAAKiO,KAAMC,EAA4B,uDAAXlO,KAAKkO,OACtHlO,KAAK6N,UAAU3L,KAAK,CAChB6N,KAAMA,EACNP,SAAU,CACNvB,KAAMA,EACNC,OAAQA,EACRzL,OAAQA,GAEZ0N,MAAOD,MAjUnB,qBAuUI,SAAQE,EAAWC,GACf,IAAIC,EAAWF,EAAEG,WAAW,GAE5B,OAAY,IAARF,EAAoBC,GAAY,IAAMA,GAAY,GAC1C,GAARD,EAAmBC,GAAY,IAAMA,GAAY,GACzC,GAARD,EAAmBC,GAAY,IAAMA,GAAY,GACzC,IAARD,EAAoBC,GAAY,IAAMA,GAAY,IAAQA,GAAY,IAAMA,GAAY,KACvFA,GAAY,IAAMA,GAAY,QADnC,IA7UR,sBAiVI,WAKI,IAJA,IAAIpC,EAASlO,KAAKkO,OACdD,EAAOjO,KAAKiO,KAEZuC,EAAWxQ,KAAKgO,IACO,KAApBhO,KAAKuO,aAA0C,MAApBvO,KAAKuO,aACnCvO,KAAKwB,OAGT,IAAIiP,EAASzQ,KAAKgO,IAClBhO,KAAKiP,UAAUlK,EAAUoH,MAAOnM,KAAK0N,MAAMgD,UAAUF,EAAUC,GAASxC,EAAMC,KA3VtF,kCAgWI,WACI,IAAIA,EAASlO,KAAKkO,OACdD,EAAOjO,KAAKiO,KAChBjO,KAAKwB,OACL,IAAIuN,EAAO/O,KAAKuO,YAChB,GAAY,MAARQ,EAAc,CACd,IAAI4B,EAAa7D,EAAmB9M,KAAKwO,UACvB,MAAdmC,GACA3Q,KAAK8P,UAAU,wBAA0B9P,KAAKwO,SAAW,kBAAmB,GACvD,KAAjBxO,KAAKwO,WACLO,EAAO/O,KAAKwO,SACZxO,KAAKwB,UAGTuN,EAAO4B,EACP3Q,KAAKwB,QAGbxB,KAAKwB,OACmB,KAApBxB,KAAKuO,YACLvO,KAAK8P,UAAU,iDAAkD,GAEjE9P,KAAKwB,OAGTxB,KAAKiP,UAAUlK,EAAUQ,aAAcwJ,EAAMd,EAAMC,KAzX3D,+BA6XI,SAAkB0C,GACd,IAAI3C,EAAOjO,KAAKiO,KACZC,EAASlO,KAAKkO,OACd6B,EAAO,GAIX,IAFA/P,KAAKwB,SAEQ,CACT,IAAIuN,EAAO/O,KAAKuO,YAChB,GAAY,MAARQ,EAAc,CACd,IAAI4B,EAAa7D,EAAmB9M,KAAKwO,UACvB,MAAdmC,EACA3Q,KAAK8P,UAAU,wBAA0B9P,KAAKwO,SAAW,kBAAmB,IAE5EO,EAAO4B,EACP3Q,KAAKwB,aAEN,GAAIuN,GAAQ6B,EAAW,CAE1B,GADA5Q,KAAKwB,OACFxB,KAAKuO,aAAeqC,EACnB,MAEJb,GAAQa,OACL,GAAY,MAAR7B,GApaT,KAoayBA,EAAiB,CACxC/O,KAAK8P,UAAU,kEAAmEC,EAAKtN,OAAS,EAAG,QAASwL,EAAMC,GAClH,MAEJ6B,GAAQhB,EACR/O,KAAKwB,OAGQ,KAAboP,EACA5Q,KAAKiP,UAAUlK,EAAUO,eAAgByK,EAAM9B,EAAMC,EAAQ6B,EAAKtN,OAAS,IAE3EzC,KAAKiP,UAAUlK,EAAUG,WAAY6K,EAAM9B,EAAMC,EAAQ6B,EAAKtN,OAAS,GACvEzC,KAAK4N,UAAU5N,KAAK4N,UAAUnL,OAAS,GAAGoO,0BAA2B,KAhajF,iCAsaI,WACI,IAAI5C,EAAOjO,KAAKiO,KACZC,EAASlO,KAAKkO,OACd4C,GAA8B,EAE9Bf,EAAO,KAIX,IAHA/P,KAAKwB,OACLxB,KAAKwB,SAEQ,CACT,IAAIuN,EAAO/O,KAAKuO,YAChB,GAAY,KAARQ,GAAgC,KAAjB/O,KAAKwO,SAAiB,CACrCxO,KAAKwB,OACLxB,KAAKwB,OACLuO,GAAQ,KACR,MAEJ,GAvcE,KAucEhB,EAAiB,CACjB/O,KAAK8P,UAAU,gFAAiF,GAChG,MAEQ,MAARf,GACA/O,KAAKiO,OACLjO,KAAKkO,OAAS,EACd4C,GAAqB,EACrBf,GAAQhB,GACC+B,GAA8B,KAAR/B,IAC/BgB,GAAQhB,EACR+B,GAAqB,GAGzB9Q,KAAKwB,OAGTxB,KAAKiP,UAAUlK,EAAUwH,QAASwD,EAAM9B,EAAMC,KAxctD,iCA4cI,SAAoB6C,GAKhB,IAJA,IAAI9C,EAAOjO,KAAKiO,KACZC,EAASlO,KAAKkO,OAEd6B,EAAOgB,EACH9V,EAAI,EAAGA,EAAI8V,EAAatO,OAAQxH,IACpC+E,KAAKwB,OAGT,OAAa,CACT,IAAIuN,EAAO/O,KAAKuO,YAChB,GAAY,MAARQ,EACA,MAEJ,GA1eE,KA0eEA,EAEA,MAEJgB,GAAQhB,EACR/O,KAAKwB,OAGTxB,KAAKiP,UAAUlK,EAAUwH,QAASwD,EAAM9B,EAAMC,KAletD,uBAueI,WACI,IAAID,EAAOjO,KAAKiO,KACZC,EAASlO,KAAKkO,OAEd8C,EAAe,EACK,KAApBhR,KAAKuO,cACLyC,GAAQ,EACRhR,KAAKwB,QAGT,IAAIgP,EAAWxQ,KAAKgO,IAEhBiD,EAAYjR,KAAKuO,YAErBvO,KAAKwB,OAEL,IAAI0P,EAAgB,GAapB,IAXiB,KAAbD,GAAqB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAK5B,QAAQrP,KAAKuO,cAAgB,IAC7E,KAApBvO,KAAKuO,aACL2C,EAAQ,GACRlR,KAAKwB,QACsB,KAApBxB,KAAKuO,aACZ2C,EAAQ,EACRlR,KAAKwB,QACF0P,EAAQ,EACfV,EAAWxQ,KAAKgO,KAGbhO,KAAKoP,QAAQpP,KAAKuO,YAAa2C,IAClClR,KAAKwB,OAGT,IAAIqN,EAAK9J,EAAUI,gBAEnB,GAAwB,KAApBnF,KAAKuO,YAAoB,CAIzB,IAHAM,EAAK9J,EAAUK,sBAEfpF,KAAKwB,OACExB,KAAKoP,QAAQpP,KAAKuO,YAAa,KAClCvO,KAAKwB,OAGI,IAAT0P,GACAlR,KAAK8P,UAAU,qEAAsE9P,KAAKgO,IAAMwC,EAAU,QAASxQ,KAAKiO,KAAMjO,KAAKkO,QAAUlO,KAAKgO,IAAMwC,IAKhK,IAAIH,EAAOrQ,KAAK0N,MAAMgD,UAAUF,EAAUxQ,KAAKgO,KAE/CwC,EAAWxQ,KAAKgO,IAChB,IAAImD,EAAmB,EAIvB,GAAwB,KAApBnR,KAAKuO,YAAoB,CAEzBvO,KAAKwB,OACL,IAAI4P,EAA2BpR,KAAKgO,IAOpC,IAJwB,KAApBhO,KAAKuO,aACLvO,KAAKwB,OAGFxB,KAAKoP,QAAQpP,KAAKuO,YAAa,KAClCvO,KAAKwB,OAEI,IAAT0P,GACAlR,KAAK8P,UAAU,qEAAsE9P,KAAKgO,IAAMwC,EAAU,QAASxQ,KAAKiO,KAAMjO,KAAKkO,QAAUlO,KAAKgO,IAAMwC,IAE5J,IAAIa,EAAiBrR,KAAK0N,MAAMgD,UAAUU,EAAkBpR,KAAKgO,KACjEmD,EAAWG,OAAOC,SAASF,GAGP,KAApBrR,KAAKuO,aAA0C,KAApBvO,KAAKuO,cAC1BxJ,EAAUK,sBAChBpF,KAAKwB,OACQ,IAAT0P,GACAlR,KAAK8P,UAAU,qEAAsE9P,KAAKgO,IAAMwC,EAAU,QAASxQ,KAAKiO,KAAMjO,KAAKkO,QAAUlO,KAAKgO,IAAMwC,KAIhK,IAAItU,EAAiB2S,GAAM9J,EAAUI,gBAAmBmM,OAAOC,SAASlB,EAAMa,GAASI,OAAOE,WAAWnB,GACzGnU,GAAS8U,EACO,GAAZG,IAAejV,GAASuV,KAAKC,IAAI,GAAIP,IAEzCnR,KAAKiP,UAAUJ,EAAI3S,EAAO+R,EAAMC,KA/jBxC,2BAmkBI,WACI,IAAID,EAAOjO,KAAKiO,KACZC,EAASlO,KAAKkO,OAAS,EACvBsC,EAAWxQ,KAAKgO,IAChBe,EAAO/O,KAAKuO,YAGhB,IAFAvO,KAAKwB,OAE2B,MAAzBiL,EAAgBsC,KAAkB/O,KAAK2R,QAAQ5C,IA1lBhD,KA0lB2DA,GAC7D/O,KAAKwB,OACLuN,EAAO/O,KAAKuO,YAGhB,IAAIkC,EAASzQ,KAAKgO,IAEd+B,EAAO/P,KAAK0N,MAAMgD,UAAUF,EAAUC,GAC1CzQ,KAAKiP,UAAUlK,EAAUiH,GAAI+D,EAAM9B,EAAMC,EAAQ6B,EAAKtN,OAAS,KAllBvE,oCAqlBI,WAOI,IANA,IAAIwL,EAAOjO,KAAKiO,KACZC,EAASlO,KAAKkO,OAEdsC,EAAWxQ,KAAKgO,IAChBe,EAAO/O,KAAKuO,YAEgB,MAAzB9B,EAAgBsC,KAAkB/O,KAAK2R,QAAQ5C,IA5mBhD,KA4mB2DA,GAC7D/O,KAAKwB,OACLuN,EAAO/O,KAAKuO,YAGhB,IAAIkC,EAASzQ,KAAKgO,IAEd+B,EAAO/P,KAAK0N,MAAMgD,UAAUF,EAAUC,GAEtC5B,EAAKhC,EAAYkD,EAAK6B,eAC1B,GAAU,MAAN/C,GAA2B,iBAANA,EAiBzB7O,KAAKiP,UAAUlK,EAAUG,WAAY6K,EAAM9B,EAAMC,QAf7C,OAAQW,GACJ,KAAK9J,EAAUS,KACXxF,KAAKiP,UAAUlK,EAAUM,iBAAiB,EAAM4I,EAAMC,GACtD,MACJ,KAAKnJ,EAAUU,MACXzF,KAAKiP,UAAUlK,EAAUM,iBAAiB,EAAO4I,EAAMC,GACvD,MACJ,QACIlO,KAAKiP,UAAUJ,EAAIkB,EAAM9B,EAAMC,MAhnBnD,qBA2nBI,SAAQa,GACJ,MAAe,KAARA,GAAuB,MAARA,O,8EA5nB9B,K,sKCnBO,IAAM8C,EAAb,WAQI,c,qGALA,KAAAC,4BAAwC,CAAC,MAEzC,KAAApP,YAAuB,kB,UAL3B,O,EAAA,G,EAAA,mBAcI,WACIqP,OAAOC,UAAUC,uCAAuC,SAAUjS,MAClE+R,OAAOC,UAAUE,qCAAqC,SAAUlS,QAhBxE,0CAmBI,SAA6BmS,EAAiC3C,EAA2B4C,EAAYC,EAA6CC,GAE9I,IAAIC,EAAqCvS,KAAKwS,OAAOL,GAErD,OAAO/O,QAAQxC,QACX2R,KAxBZ,qCA4BI,SAAwBA,GACpB,IAAK,IAAItX,EAAI,EAAGA,EAAIsX,EAAM9P,OAAS,EAAGxH,IAAK,CACvC,IAAIwX,EAAIF,EAAMtX,GACVyX,EAAKH,EAAMtX,EAAI,GACnB,KAAIwX,EAAEE,MAAMC,cAAgBF,EAAGC,MAAME,kBACjCJ,EAAEE,MAAMC,eAAiBF,EAAGC,MAAME,gBAClC,GAAIJ,EAAEE,MAAMG,WAAaJ,EAAGC,MAAMI,YAC9BR,EAAMS,OAAO/X,EAAI,EAAG,QAEpB,GAAyB,GAArBwX,EAAEE,MAAMG,WAAkBL,EAAE1C,KAAKtN,OAAS,GAA6B,GAAxBiQ,EAAGC,MAAMI,aAAoBL,EAAGC,MAAMG,UAAYJ,EAAGC,MAAMI,aAA0B,IAAXL,EAAG3C,KAAY,CACxI,IAAIkD,EAAQR,EAAE1C,KAAKtN,QAAUiQ,EAAGC,MAAMG,UAAYJ,EAAGC,MAAMI,aACvDE,EAAQ,GACRR,EAAE1C,KAAO0C,EAAE1C,KAAKmD,OAAO,EAAGD,GAC1BV,EAAMS,OAAO/X,EAAE,EAAG,IAEbgY,EAAQ,GAGbP,EAAGC,MAAMG,UAAYJ,EAAGC,MAAMI,YAAcE,EAC5CV,EAAMS,OAAO/X,EAAG,GAChBA,MAIAsX,EAAMS,OAAO/X,EAAG,GAChBA,SArD5B,4CA8DI,SAA+BkX,EAC3BE,EACAC,GAEA,IAAIC,EAAqCvS,KAAKwS,OAAOL,GAErD,OAAO/O,QAAQxC,QACX2R,KArEZ,oBA0EI,SAAOJ,GAEH,IAAII,EAAqC,GAQrCxC,EAAOoC,EAAMgB,SAASpB,OAAOqB,OAAOC,oBAAoBC,IAExDC,GAAY,IAAIvG,GAAQwG,IAAIzD,GAAM1B,OAItC,GAAiB,MAAbkF,EAAmB,MAAO,GAqB9B,IATA,IAAIE,EAA2B,KAC3BC,EAAc,EAEdC,EAAmC,GACnCC,EAA0C,GAC1CC,GAAyB,EACzBC,EAA8B,EAC9BC,EAA4B,EAEvB9Y,EAAI,EAAGA,EAAIsY,EAAU9Q,OAAQxH,IAAK,CAEvC,IAAIkB,EAAIoX,EAAUtY,GAGlB,OAFA6Y,IAEQ3X,EAAE0S,IAEN,KAAK9J,EAAU2F,iBAQX,GAPImJ,IACAA,GAAgB,EAChBD,EAA8B1R,KAAKwR,EAAc,GACjDA,KAEJA,IACAC,EAAuBzR,KAAK/F,EAAEqT,SAASvB,MACd,MAArBwF,EAA2B,CAC3B,IAAI5E,EAAK4E,EAAkB5E,GACvBA,GAAM9J,EAAUwF,cAAgBsE,GAAM9J,EAAUG,YAAc2J,GAAM9J,EAAU6F,wBAC9E5K,KAAKgU,eAAeP,EAAmBtX,EAAGoW,EAAO,KAGzD,GAAItX,EAAIsY,EAAU9Q,OAAS,EAAG,CAC1B,IAAIwR,EAASV,EAAUtY,EAAI,GACvBgZ,EAAOpF,IAAM9J,EAAUsH,SAAW4H,EAAOpF,IAAM9J,EAAUoH,OACzDnM,KAAKkU,aAAa3B,EAAO0B,EAAOzE,SAASvB,KAAMgG,EAAOzE,SAAStB,OAAQ,GAG/E,MACJ,KAAKnJ,EAAU4F,kBACPiJ,EAA8BA,EAA8BnR,OAAS,IAAMiR,IAC3EE,EAA8BpQ,MAC9BkQ,IAEA1T,KAAKmU,aAAa5B,EAAOpW,EAAEqT,SAASvB,KAAM,EAAG,IAGjDyF,IACA,IAAIU,EAAeT,EAAuBnQ,MAC1C,GAAoB,MAAhB4Q,GAAwBA,GAAgBjY,EAAEqT,SAASvB,KAC1B,MAArBwF,GAA6BA,EAAkBjE,SAASvB,MAAQ9R,EAAEqT,SAASvB,MAC3EjO,KAAK2N,QAAQ4E,EAAOpW,EAAEqT,SAAUrT,EAAEqT,SAAU,KAAO,IAAI6E,OA/C7D,EA+CoEX,SAGlE,GAAIzY,EAAI,EAAG,CACP,IAAIgZ,EAASV,EAAUtY,EAAI,GACvBgZ,EAAOpF,IAAM9J,EAAUoH,OAAS8H,EAAOpF,IAAM9J,EAAUsH,SACvDrM,KAAKkU,aAAa3B,EAAOpW,EAAEqT,SAASvB,KAAM9R,EAAEqT,SAAStB,OAAQ,GAIzE,MACJ,KAAKnJ,EAAUuF,YAEX,GADAyJ,IACI9Y,EAAIsY,EAAU9Q,OAAS,EAAG,CAC1B,IAAI6R,EAAaf,EAAUtY,EAAI,GAC3BsZ,EAAahB,EAAUtY,EAAI,GAC3BqZ,EAAWzF,IAAM9J,EAAUoH,OAASoI,EAAW1F,IAAM9J,EAAUsH,UAC/DrM,KAAKmU,aAAa5B,EAAO+B,EAAW9E,SAASvB,KAAMqG,EAAW9E,SAAStB,OAAQoG,EAAW9E,SAAS/M,QACnGxH,IACIsZ,EAAW1F,IAAM9J,EAAUwF,eAC3BtP,IACA8Y,MAIZ,GAAI9Y,EAAI,EAAG,CACP,IAAIuZ,EAAajB,EAAUtY,EAAI,GAC3BwZ,EAAalB,EAAUtY,EAAI,GAC3BuZ,EAAW3F,IAAM9J,EAAUoH,OAASsI,EAAW5F,IAAM9J,EAAUsH,SAAYrM,KAAK0U,iBAAiBD,EAAW5F,KAC1E,GAA9B2F,EAAWhF,SAAS/M,QACpBzC,KAAKmU,aAAa5B,EAAOiC,EAAWhF,SAASvB,KAAMuG,EAAWhF,SAAStB,OAAQ,GAI3F,MACJ,KAAKnJ,EAAUwF,aAEX,GADAwJ,IACI9Y,EAAI,EAAG,CACP,IAAIqZ,EAAaf,EAAUtY,EAAI,GAC3BsZ,EAAahB,EAAUtY,EAAI,GAC3BqZ,EAAWzF,IAAM9J,EAAUoH,OAASoI,EAAW1F,IAAM9J,EAAUsH,SAC/DrM,KAAKmU,aAAa5B,EAAO+B,EAAW9E,SAASvB,KAAMqG,EAAW9E,SAAStB,OAAQoG,EAAW9E,SAAS/M,QAG3G,MACJ,KAAKsC,EAAUsH,QAEX,GADAyH,EAAsB,EAClB7Y,EAAIsY,EAAU9Q,OAAS,EAAG,CAE1B,IAAIkS,EAAsB3U,KAAK0U,iBAAiBjB,aAAiB,EAAjBA,EAAmB5E,IAC/D+F,EAAsB5U,KAAK0U,iBAAiB1U,KAAK6U,qBAAqB5Z,EAAGsY,GAAW1E,IAEpFiG,EAAgBvB,EAAUtY,EAAI,GAC9B8Z,EAASxB,EAAUtY,EAAI,GACvB+Z,EAAqB,EAEzB,GAAIF,EAAcjG,IAAM9J,EAAUsH,QAC9B,MAGJ,IAAI4G,EAAgB,EACpB,GAAI6B,EAAcjG,IAAM9J,EAAUoH,MAAO,CACrC,GAAI4I,EAAOlG,IAAM9J,EAAUsH,QACvB,MAEJ2I,EAAqBF,EAActF,SAAS/M,OAC5CxH,IACI8Z,EAAOlG,IAAM9J,EAAU4F,oBACvBsI,GAAS,GAIb6B,EAAcjG,IAAM9J,EAAU4F,oBAC9BsI,GAAS,IAOV2B,GAAuBD,KAAqB1B,EAAQ,GAEvD,IAAIgC,EAAKvB,EAAcT,EACpBc,EAAoB,GACnBkB,IAEAA,EAAK,IAAGA,EAAK,GAEjB,IAAIC,EAvIN,EAuI2BD,EAErBC,EAAqBF,EACrBhV,KAAKkU,aAAa3B,EAAOpW,EAAEqT,SAASvB,KAAO,EAAG,EAAGiH,EAAqBF,GAC/DE,EAAqBF,GAC5BhV,KAAKmU,aAAa5B,EAAOpW,EAAEqT,SAASvB,KAAO,EAAG,EAAG+G,EAAqBE,GAG9E,MACJ,KAAKnQ,EAAUoH,MACPlR,EAAIsY,EAAU9Q,OAAS,GACP8Q,EAAUtY,EAAI,GAChB4T,IAAM9J,EAAUwH,SACtBtR,EAAI,GACYsY,EAAUtY,EAAI,GAChB4T,IAAM9J,EAAUsH,SACtBlQ,EAAEqT,SAAS/M,OAAS,GACpBzC,KAAKmU,aAAa5B,EAAOpW,EAAEqT,SAASvB,KAAM9R,EAAEqT,SAAStB,OAAQ/R,EAAEqT,SAAS/M,OAAS,GAMrG,MACJ,KAAKsC,EAAU+G,MACf,KAAK/G,EAAU6G,UACX,GAAI3Q,EAAI,EAAG,CACP,IAAIuZ,EAAajB,EAAUtY,EAAI,GAC3BwZ,EAAalB,EAAUtY,EAAI,GAC3BuZ,EAAW3F,IAAM9J,EAAUsH,SAAWoI,EAAW5F,IAAM9J,EAAUsH,SAAYrM,KAAK0U,iBAAiBD,EAAW5F,KAC1G2F,EAAW3F,IAAM9J,EAAUoH,OAAuC,GAA9BqI,EAAWhF,SAAS/M,QACxDzC,KAAKmU,aAAa5B,EAAOiC,EAAWhF,SAASvB,KACzCuG,EAAWhF,SAAStB,OAAQ,GAI5C,GAAIjT,EAAIsY,EAAU9Q,OAAS,EAAG,CAC1B,IAAI0S,EAAY5B,EAAUtY,EAAI,GAC1Bka,EAAUtG,IAAM9J,EAAUwH,SAAW4I,EAAUtG,IAAM9J,EAAUoH,OAASgJ,EAAUtG,IAAM9J,EAAUsH,SAClGrM,KAAKkU,aAAa3B,EAAO4C,EAAU3F,SAASvB,KAAMkH,EAAU3F,SAAStB,OAAQ,GAGrF,MACJ,KAAKnJ,EAAU0F,mBACc,MAArBgJ,GAA6BA,EAAkB5E,IAAM9J,EAAUyF,mBAC/DxK,KAAKgU,eAAeP,EAAmBtX,EAAGoW,EAAO,IAQ7D,GAAIvS,KAAK0U,iBAAiBvY,EAAE0S,IAAK,CAE7B,IAAIuG,EAAejZ,EAAE0S,IAAM9J,EAAUuG,OAAStL,KAAKqV,gCAAgCpa,EAAGsY,GAClF+B,EAAiBnZ,EAAE0S,IAAM9J,EAAUwG,SAAWvL,KAAKuV,kCAAkCta,EAAGsY,GAE5F,GAAIO,GAAuB,GAA0B,MAArBL,GAA6B,CAAC1O,EAAUuF,YAAavF,EAAU+G,OAAOuD,QAAQoE,EAAkB5E,IAAM,EAAG,CAErI,GAAI5T,EAAI,EAAG,CACP,IAAIua,EAAcjC,EAAUtY,EAAI,GAC5Bwa,EAAUL,GAAgBE,EAAkB,EAAI,EAChDE,EAAY3G,IAAM9J,EAAUoH,MACxBqJ,EAAYhG,SAAS/M,QAAUgT,GAC/BzV,KAAKkU,aAAa3B,EAAOiD,EAAYhG,SAASvB,KAC1CuH,EAAYhG,SAAStB,OAAQuH,EAASD,EAAYhG,SAAS/M,QAGrD,GAAVgT,GACAzV,KAAKkU,aAAa3B,EAAOpW,EAAEqT,SAASvB,KAAM9R,EAAEqT,SAAStB,OAAQ,GAIzE,GAAIjT,EAAIsY,EAAU9Q,OAAS,EAAG,CAC1B,IAAI0S,EAAY5B,EAAUtY,EAAI,GAC1Bwa,EAAUL,EAAgB,EAAI,EAC9BD,EAAUtG,IAAM9J,EAAUoH,OACtBmJ,GAAkBra,EAAIsY,EAAU9Q,OAAS,GAAK8Q,EAAUtY,EAAI,GAAG4T,IAAM9J,EAAUuF,cAC/EmL,EAAS,GAETN,EAAU3F,SAAS/M,QAAUgT,GAC7BzV,KAAKkU,aAAa3B,EAAO4C,EAAU3F,SAASvB,KACxCkH,EAAU3F,SAAStB,OAAQuH,EAASN,EAAU3F,SAAS/M,UAG3D6S,GAAkBH,EAAUtG,IAAM9J,EAAUuF,cAC5CmL,EAAS,GAEC,GAAVA,GAAazV,KAAKkU,aAAa3B,EAAO4C,EAAU3F,SAASvB,KAAMkH,EAAU3F,SAAStB,OAAQ,MAO1G/R,EAAE0S,IAAM9J,EAAUoH,OAAShQ,EAAE0S,IAAM9J,EAAUsH,UAC7CoH,EAAoBtX,GAO5B,OAFA6D,KAAK0V,wBAAwBnD,GAEtBA,IAvVf,kCA0VI,SAAqBoD,EAAsBpC,GAEvC,GAAGoC,GAAgBpC,EAAU9Q,OAAS,EAAG,OAAO8Q,EAAUoC,GAG1D,IADA,IAAIC,EAAID,EAAe,EACjBC,EAAIrC,EAAU9Q,OAAS,GAAM8Q,EAAUqC,GAAG/G,IAAM9J,EAAUoH,OAC5DyJ,IAEJ,OAAOrC,EAAUqC,KAlWzB,6CAsWI,SAAgCpG,EAAkB+D,GAE9C,IADA,IAAItY,EAAIuU,EAAW,EACZvU,EAAIsY,EAAU9Q,QAAQ,CACzB,IAAIoM,EAAK0E,EAAUtY,GAAG4T,GACtB,GAAIA,GAAM9J,EAAUwG,QAChB,OAAO,EAEX,GAAI,CAACxG,EAAUoH,MAAOpH,EAAU+G,MAAO/G,EAAUG,YAAYmK,QAAQR,GAAM,EACvE,OAAO,EAEX5T,IAEJ,OAAO,IAlXf,+CAqXI,SAAkCuU,EAAkB+D,GAEhD,IADA,IAAItY,EAAIuU,EAAW,EACZvU,GAAK,GAAG,CACX,IAAI4T,EAAK0E,EAAUtY,GAAG4T,GACtB,GAAIA,GAAM9J,EAAUuG,MAChB,OAAO,EAEX,GAAI,CAACvG,EAAUoH,MAAOpH,EAAU+G,MAAO/G,EAAUG,YAAYmK,QAAQR,GAAM,EACvE,OAAO,EAEX5T,IAEJ,OAAO,IAjYf,8BAoYI,SAAiBqX,GACb,OAAgB,MAATA,GAAiBA,GAASvN,EAAUgG,QAAUuH,GAASvN,EAAUyG,QArYhF,4BAwYY,SAAeiI,EAA0BtX,EAAUoW,EAAoCxC,GAC3F,IAAI8F,EAAe,CACf5H,KAAMwF,EAAkBjE,SAASvB,KACjCC,OAAQuF,EAAkBjE,SAAStB,OAASuF,EAAkBjE,SAAS/M,QAEvEqT,EAAa,CACb7H,KAAM9R,EAAEqT,SAASvB,KACjBC,OAAQ/R,EAAEqT,SAAStB,QAEnB2H,EAAa5H,MAAQ6H,EAAW7H,MAChC6H,EAAW5H,OAAS2H,EAAa3H,QAAU6B,EAAKtN,QAChDzC,KAAK2N,QAAQ4E,EAAOsD,EAAcC,EAAY/F,KAnZ1D,0BAuZI,SAAawC,EAAoCtE,EAAcC,EAAgB6H,GAC3ExD,EAAMrQ,KAAK,CACPyQ,MAAO,CACHI,YAAa7E,EACb2E,gBAAiB5E,EACjB6E,UAAW5E,EAAS6H,GAA4B,GAAV7H,EAAc,EAAI,GACxD0E,cAAe3E,GAEnB8B,KAAM,OA/ZlB,0BAmaI,SAAawC,EAAoCtE,EAAcC,EAAgB6H,GAEvEA,EAAiB,EACjB/V,KAAKmU,aAAa5B,EAAOtE,EAAMC,GAAS6H,GAI5CxD,EAAMrQ,KAAK,CACPyQ,MAAO,CACHI,YAAa7E,EACb2E,gBAAiB5E,EACjB6E,UAAW5E,EACX0E,cAAe3E,GAEnB8B,KAAM,IAAIsE,OAAO0B,OAjb7B,qBAqbI,SAAQxD,EAAoCsD,EAAiDC,EAA+C/F,GAExIwC,EAAMrQ,KAAK,CACPyQ,MAAO,CACHI,YAAa8C,EAAa3H,OAC1B2E,gBAAiBgD,EAAa5H,KAC9B6E,UAAWgD,EAAW5H,OACtB0E,cAAekD,EAAW7H,MAE9B8B,KAAMA,S,8EA9blB,K,0rCCKO,IAAMiG,EAAb,WAII,c,4FAAA,SAFA,KAAAC,OAAkB,GAGdjW,KAAKkW,a,UALb,O,EAAA,G,EAAA,0BAQI,SAAY1a,GAAY,UACFwE,KAAKiW,QADH,IACpB,2BAA+B,KAAtBE,EAAsB,QAC3B,GAAIA,EAAM3a,MAAQA,EAAM,CACpBwE,KAAKoW,oBAAoBD,GACzB,QAJY,iCAR5B,iCAiBY,SAAoBA,GACxBpE,OAAOqB,OAAOiD,SAASF,EAAMG,aAG7B,IADA,IAAIC,EAAOC,SAASC,gBACpB,MAAkB9a,OAAO2H,KAAK6S,EAAMO,WAApC,eAAgD,CAA3C,IAAMla,EAAG,KACJN,EAAQia,EAAMO,UAAUla,GAE9B+Z,EAAKI,MAAMC,YAAYpa,EAAKN,MAxBxC,wBA8BI,WAEI8D,KAAKiW,OAAO/T,KAAK,CACb1G,KAAM,OACN8a,YAAa,oBACbI,UAAW,CACP,mBAAoB,UACpB,oBAAqB,UACrB,sBAAuB,UACvB,uBAAwB,UACxB,oBAAqB,UACrB,mBAAoB,UACpB,WAAY,UACZ,yBAA0B,UAC1B,yBAA0B,UAC1B,sBAAuB,mBACvB,qBAAsB,UACtB,sBAAuB,UACvB,cAAe,UACf,oBAAqB,UACrB,0BAA2B,UAC3B,2BAA4B,UAC5B,kBAAmB,UACnB,kBAAmB,UACnB,qBAAsB,UACtB,eAAgB,0BAChB,gBAAiB,UACjB,sBAAuB,0BACvB,oBAAqB,MACrB,mBAAoB,OACpB,2BAA4B,UAC5B,sBAAuB,mBACvB,iCAAkC,UAClC,4BAA6B,UAC7B,mBAAoB,UACpB,qBAAsB,UACtB,qBAAsB,0BACtB,mBAAoB,UACpB,eAAgB,UAChB,iBAAkB,6BAClB,kBAAmB,YACnB,gCAAiC,MACjC,4BAA6B,yBAC7B,0BAA2B,4BAC3B,yBAA0B,gBAC1B,sBAAuB,yBACvB,qBAAsB,UACtB,sBAAuB,UACvB,4BAA6B,UAC7B,oCAAqC,UACrC,gCAAiC,UACjC,6BAA8B,UAC9B,yBAA0B,UAE1B,sBAAuB,UAGvB,+BAAgC,QAChC,gCAAiC,iBACjC,mBAAoB,mBACpB,6BAA8B,UAC9B,2BAA4B,UAC5B,4BAA6B,UAC7B,sBAAuB,QACvB,2BAA4B,qBAC5B,wBAAyB,OACzB,wBAAyB,QACzB,kBAAmB,qBACnB,kBAAmB,mBAGnB,iBAAkB,qBAClB,YAAa,QAGb,4BAA6B,UAC7B,wBAAyB,UACzB,mCAAoC,UACpC,+BAAgC,UAChC,8BAA+B,QAC/B,qCAAsC,UACtC,mBAAoB,yBACpB,oBAAqB,yBAGrB,uBAAwB,UACxB,kBAAmB,UACnB,uBAAwB,2BAGxB,eAAgB,OAChB,kBAAmB,aAQ3B1W,KAAKiW,OAAO/T,KAAK,CACb1G,KAAM,QACN8a,YAAa,qBACbI,UAAW,CACP,mBAAoB,QACpB,oBAAqB,UACrB,sBAAuB,UACvB,uBAAwB,UACxB,oBAAqB,OACrB,mBAAoB,UACpB,WAAY,UACZ,yBAA0B,UAC1B,yBAA0B,UAC1B,sBAAuB,mBACvB,qBAAsB,UACtB,sBAAuB,UACvB,cAAe,UACf,oBAAqB,UACrB,0BAA2B,UAC3B,2BAA4B,UAC5B,kBAtBa,UAuBb,kBAAmB,UACnB,qBAAsB,UACtB,eAAgB,UAChB,gBA1Ba,UA2Bb,sBAAuB,UACvB,oBAAqB,MACrB,mBAAoB,QACpB,2BAA4B,QAC5B,sBAAuB,UACvB,iCAhCa,UAiCb,4BAA6B,UAC7B,mBAAoB,UACpB,qBAAsB,UACtB,qBAAsB,UACtB,mBAAoB,UACpB,eAAgB,UAChB,iBAAkB,6BAClB,kBAAmB,YACnB,gCAAiC,MACjC,4BAA6B,yBAC7B,0BAA2B,4BAC3B,yBAA0B,UAC1B,sBAAuB,yBACvB,qBAAsB,UACtB,sBAAuB,UACvB,4BAA6B,UAC7B,oCAAqC,UACrC,gCAAiC,UACjC,6BAA8B,UAC9B,yBAA0B,UAE1B,sBAAuB,UAIvB,+BAAgC,UAChC,gCAAiC,UACjC,mBAAoB,mBACpB,6BAA8B,UAC9B,2BAA4B,QAC5B,4BAA6B,UAC7B,sBAAuB,UACvB,2BAA4B,QAC5B,wBAAyB,OACzB,wBAAyB,UACzB,kBAAmB,qBACnB,kBAAmB,mBAGnB,iBAAkB,QAClB,YAAa,UAGb,4BAA6B,UAC7B,wBAAyB,UACzB,mCAAoC,UACpC,+BAAgC,UAChC,8BAA+B,QAC/B,qCAAsC,UACtC,mBAAoB,yBACpB,oBAAqB,yBAGrB,uBAAwB,UACxB,kBAAmB,UACnB,uBAAwB,qBAGxB,eAAgB,UAChB,kBAAmB,kB,8EA3NnC,K,yxDCHO,IAAeG,EAAtB,6BAgBaC,EAAb,8BAWI,WAAmBtb,EAAqBub,EAC7BC,EAAqCC,EAAgCC,GAAuB,iBACnG,gBAFe1b,OAAqB,EAAAub,wBAC7B,EAAAC,gBAAqC,EAAAC,iBAVhD,EAAAE,kBAAmE,IAAIC,IAEvE,EAAAC,eAA8B,GAU1B,EAAKH,cAAgBA,EAActT,MAAM,GACzC,IAAI0T,EAAW,EAAKJ,cAAc7H,QAAQ7T,GAHyD,OAIhG8b,GAAY,GAAG,EAAKJ,cAAclE,OAAOsE,EAAU,GAJ6C,EAZ3G,yCAuCI,WACI,OAAOtX,KAAKxE,OAxCpB,sBA2CI,WACI,OAAOwE,KAAKxE,OA5CpB,gCA4DI,SAAmB+b,EAAoCC,EAAyBC,GAAsD,WAA7BC,IAA6B,yDAE7HC,MAAMC,QAAQL,KAAYA,EAAY,CAACA,IAE5CA,EAAUhX,SAAQ,SAAApE,GACd,IAAI0b,EAAqC,EAAKV,kBAAkBrb,IAAIK,GACzD,MAAP0b,IACAA,EAAM,IAAIT,IACV,EAAKD,kBAAkBW,IAAI3b,EAAG0b,IAElCA,EAAIC,IAAIN,EAAYC,GAChBC,GAAiBF,GAAc,GAC/BA,EAAWO,mBAAmB5b,EAAG,EAAMsb,GAAY,QAxEnE,uBA8EI,SAAUO,GAEN,IAAIC,EAAmBD,aAAiBlB,EAAckB,EAAQA,EAAK,SAEnE,OAAOhY,KAAKkX,cAAc7H,QAAQ4I,EAAIzc,OAAS,GAAKwE,KAAKxE,MAAQyc,EAAIzc,OAlF7E,iCAsFI,SAAoB0c,EAAqBV,GAGrC,IAAIK,EAAM7X,KAAKmX,kBAAkBrb,IAAIoc,GACrC,GAAW,MAAPL,EAAa,OAAO,KAExB,IAAII,EAAmBT,aAAsBV,EAAcU,EAAaA,EAAU,SAElF,OAAOK,EAAI/b,IAAImc,KA9FvB,gCAkGI,SAAmBC,GACf,MAAG,CAACnT,EAAU0I,OAAQ1I,EAAUyI,WAAW6B,QAAQ6I,IAAa,EAAUC,GACvEnY,KAAKqX,eAAehI,QAAQ6I,IAAY,EAAUlY,UAArD,IApGR,6BAuGI,SAAgBkY,EAAqBE,EAAaC,GAC9C,OAAQH,GACJ,KAAKnT,EAAU4G,cAGf,KAAK5G,EAAUiG,KACX,OAAc,MAAVoN,GAA4B,MAAVC,EAAuBD,EAASC,EACrC,MAAVD,EAAiBA,EAASC,EACrC,KAAKtT,EAAU+F,MACX,OAAc,MAAVsN,GAA4B,MAAVC,EAAuBD,EAASC,EACrC,MAAVD,EAAiBA,EAASC,EACrC,KAAKtT,EAAUkG,eAGf,KAAKlG,EAAUmG,SAGf,KAAKnG,EAAUyD,WACX,OAAc,MAAV4P,GAA4B,MAAVC,EAAuBD,EAASC,EACrC,MAAVD,EAAiBA,EAASC,EACrC,KAAKtT,EAAU0D,UACX,OAAc,MAAV2P,GAA4B,MAAVC,EAAuB5G,KAAK6G,IAAIF,EAAQC,GAC7C,MAAVD,EAAiBA,EAASC,EACrC,KAAKtT,EAAUuG,MACX,OAAc,MAAV8M,GAA4B,MAAVC,EAAuBD,EAASC,EACrC,MAAVD,EACX,KAAKrT,EAAUwG,QACX,OAAc,MAAV6M,GAA4B,MAAVC,EAAuBD,GAAUC,EACtC,MAAVD,EACX,KAAKrT,EAAU0G,aACX,OAAc,MAAV2M,GAA4B,MAAVC,EAAuBD,GAAUC,EACtC,MAAVD,EACX,KAAKrT,EAAU2G,eACX,OAAc,MAAV0M,GAA4B,MAAVC,EAAuBD,GAAUC,EACtC,MAAVD,EACX,KAAKrT,EAAUyG,MACX,OAAO4M,GAAUC,EACrB,KAAKtT,EAAU4H,SACX,OAAOyL,GAAUC,MA7IjC,+BAmBI,SAAwBxJ,GACpB,OAAQA,GACJ,KAAK9J,EAAUO,eACX,OAAOtF,KAAKuY,YAAYzc,IAAI,QAChC,KAAKiJ,EAAUI,gBACX,OAAOnF,KAAKuY,YAAYzc,IAAI,WAChC,KAAKiJ,EAAUK,sBACX,OAAOpF,KAAKuY,YAAYzc,IAAI,SAChC,KAAKiJ,EAAUQ,aACX,OAAOvF,KAAKuY,YAAYzc,IAAI,QAChC,KAAKiJ,EAAUM,gBACX,OAAOrF,KAAKuY,YAAYzc,IAAI,WAChC,KAAKiJ,EAAUuD,YACX,OAAOtI,KAAKuY,YAAYzc,IAAI,WAhC5C,yBA+CI,SAAmBN,GAKf,OAJW,MAARA,GAA4C,QAA5BA,EAAKgd,sBACpBhd,EAAO,WAGJwE,KAAKuY,YAAYzc,IAAIN,EAAKgd,uBApDzC,0BAuDI,SAAoBC,GAChB3B,EAAY2B,UAAY3B,EAAY2B,UAAUC,OAAOD,GACrDA,EAAUlY,SAAQ,SAAApE,GAAC,OAAI2a,EAAYyB,YAAYT,IAAI3b,EAAEX,KAAMW,UAzDnE,GAAiC0a,GAMtBC,YAA2B,GAC3BA,cAAwC,IAAIM,IA6IvD,IAAIuB,EAAiB,CAAC,EAAG,GAAI,IAAK,IAAM,IAAQ,IAAQ,IAAS,IAAU,IAAW,KAEzEC,EAAb,8BAII,WAAmBC,EAA8BC,GAAyB,iBACtE,gBADeD,WAA8B,EAAAC,kBAE7C,IAAIC,EAAaD,EAAgBE,KAAK,MAFgC,OAGtE,EAAKxd,KAAOqd,EAASrd,KAAO,IAAMud,EAAa,IAHuB,EAJ9E,kCAUI,WACI,OAAO/Y,KAAKxE,OAXpB,6BAcI,WACI,OAAOwE,KAAK6Y,SAASrd,OAf7B,uBAmBI,SAAUwc,GAEN,IAAIC,EAAmBD,aAAiBlB,EAAckB,EAAQA,EAAK,SAEnE,OAAOhY,KAAK6Y,SAAS3B,cAAc7H,QAAQ4I,EAAIzc,OAAS,GAAKwE,KAAK6Y,SAASrd,MAAQyc,EAAIzc,OAvB/F,iCA2BI,SAAoB0c,EAAqBV,GAGrC,IAAIK,EAAM7X,KAAK6Y,SAAS1B,kBAAkBrb,IAAIoc,GAC9C,GAAW,MAAPL,EAAa,OAAO,KAExB,IAAII,EAAmBT,aAAsBV,EAAcU,EAAaA,EAAU,SAE9EyB,EAAiBpB,EAAI/b,IAAImc,GAE7B,GAAIjY,KAAK6Y,UAAYZ,GAAOjY,KAAK6Y,UAAYI,GAAkBzB,aAAsBoB,EAAgB,CACjG,GAA0B,WAAtB5Y,KAAK6Y,SAASrd,MAAqB0c,GAAYnT,EAAU4G,cACzD,OAAO,IAAIiN,EAAe5Y,KAAK6Y,SAAU,CAAC7Y,KAAK8Y,gBAAgB,GAAKtB,EAAWsB,gBAAgB,KAEnG,GAA0B,WAAtB9Y,KAAK6Y,SAASrd,KACd,OAAO,IAAIod,EAAe5Y,KAAK6Y,SAAU,CAACpH,KAAK6G,IAAItY,KAAK8Y,gBAAgB,GAAItB,EAAWsB,gBAAgB,IAAKrH,KAAK6G,IAAItY,KAAK8Y,gBAAgB,GAAItB,EAAWsB,gBAAgB,MAIjL,OAAOjB,EAAI/b,IAAImc,KA9CvB,gCAkDI,SAAmBC,GACf,OAAOlY,KAAK6Y,SAASK,mBAAmBhB,KAnDhD,6BAsDI,SAAgBA,EAAqBE,EAAaC,GAC9C,IAAItX,EAASf,KAAK6Y,SAASM,gBAAgBjB,EAAUE,EAAQC,GAC7D,OAAIrY,KAAKxE,KAAO,WAA4B,MAAVuF,EAAiB,MAAQ,GAAKA,GAAQmS,OAAO,EAAGlT,KAAK8Y,gBAAgB,IACtF,WAAb9Y,KAAKxE,KACS,MAAVuF,EAAuB,KACpB0Q,KAAK2H,MAAMrY,EAAS4X,EAAK3Y,KAAK8Y,gBAAgB,KAAOH,EAAK3Y,KAAK8Y,gBAAgB,IAGnF/X,MA9Df,GAAoC8V,GAkEhCwC,EAAY,CAAC,UAAW,OAAQ,OAAQ,WAAY,aAAc,YAElEC,EAAc,IAAIxC,EAAY,UAAW,CAAC,mBAAmB,SAACyC,EAAIC,GAAL,6BAA4BD,EAA5B,gBAAsC9H,KAAK6G,IAAIkB,EAAG,GAAI,GAAtD,QAC7D,SAACC,EAAWD,GAAZ,OAAmBC,EAAE/I,UAAU,EAAGe,KAAK6G,IAAIkB,EAAG,GAAI,MAAKH,GAEvDK,EAAW,IAAI5C,EAAY,OAAQ,CAAC,mBAAmB,SAACyC,EAAIC,GAAL,6BAA4BD,EAA5B,gBAAsC9H,KAAK6G,IAAIkB,EAAG,GAAI,GAAtD,QACvD,SAACC,EAAWD,GAAZ,OAAmBC,EAAE/I,UAAU,EAAGe,KAAK6G,IAAIkB,EAAG,GAAI,MAAKH,GAEvDM,EAAW,IAAI7C,EAAY,OAAQ,CAAC,mBAAmB,SAACyC,EAAIC,GAAL,MAAY,MAAI,SAACC,EAAWD,GAAZ,OAAmBC,IAAGJ,EAAUX,OAAO,CAAC,OAAQ,OAAQ,WAAY,eAC3IkB,EAAe,IAAI9C,EAAY,WAAY,IAAI,SAACyC,EAAIC,GAAL,MAAY,MAAI,SAACC,EAAWD,GAAZ,OAAmBC,IAAGJ,GACrFQ,EAAiB,IAAI/C,EAAY,aAAc,IAAI,SAACyC,EAAIC,GAAL,MAAY,MAAI,SAACC,EAAWD,GAAZ,OAAmBC,IAAGJ,GACzFS,EAAe,IAAIhD,EAAY,WAAY,IAAI,SAACyC,EAAIC,GAAL,MAAY,MAAI,SAACC,EAAWD,GAAZ,OAAmBC,IAAGJ,GAErFU,EAAa,CAAC,UAAW,UAAW,SAAU,OAAQ,SAEtDC,EAAc,IAAIlD,EAAY,UAAW,CAAC,yBAA0B,qBAAqB,SAACyC,EAAIC,GAAL,MAAY,MACrG,SAACC,EAAWD,GAAS,IAAIS,EAAKxI,KAAKyI,MAAMT,GAAQU,EAAKV,EAAIQ,EAAI,OAAYA,GAAMT,EAAG,GAAK,EAAI,IAAM/H,KAAK2H,MAAMe,EAAKxB,EAAKa,EAAG,KAAO,MACjIO,GACAK,EAAc,IAAItD,EAAY,UAAW,CAAC,yBAA0B,qBAAqB,SAACyC,EAAIC,GAAL,MAAY,MAAI,SAACC,EAAWD,GAAZ,MAAmB,GAAKC,IAAGM,GACpIM,EAAa,IAAIvD,EAAY,SAAU,CAAC,yBAA0B,qBAAqB,SAACyC,EAAIC,GAAL,MAAY,MAAI,SAACC,EAAWD,GAAZ,MAAmB,GAAKC,IAAGM,GAClIO,EAAW,IAAIxD,EAAY,OAAQ,IAAI,SAACyC,EAAIC,GAAL,MAAY,MAAI,SAACC,EAAWD,GAAZ,MAAmB,GAAKC,IAAGM,GAClFQ,EAAY,IAAIzD,EAAY,QAAS,IAAI,SAACyC,EAAIC,GAAL,MAAY,MAAI,SAACC,EAAWD,GAAZ,MAAmB,GAAKC,IAAGM,GAGpFS,EADW,CAAC,MAAO,UAAW,UAAW,WAAY,YAAa,UAC3C9B,OAAOqB,GAE9BU,EAAU,IAAI3D,EAAY,MAAO,CAAC,gCAAgC,SAACyC,EAAIC,GAAL,4BAA2BD,EAA3B,eAAoCA,EAApC,QAA2C,SAACE,EAAWD,GAAZ,MAAmB,GAAK/H,KAAK2H,MAAMK,KAAIe,GACpJE,EAAc,IAAI5D,EAAY,UAAW,CAAC,gCAAgC,SAACyC,EAAIC,GAAL,4BAA2BD,EAA3B,eAAoCA,EAApC,QAA2C,SAACE,EAAWD,GAAZ,MAAmB,GAAK/H,KAAK2H,MAAMK,KAAIe,GAC5JG,EAAc,IAAI7D,EAAY,UAAW,CAAC,gCAAgC,SAACyC,EAAIC,GAAL,4BAA2BD,EAA3B,eAAoCA,EAApC,QAA2C,SAACE,EAAWD,GAAZ,MAAmB,GAAK/H,KAAK2H,MAAMK,KAAIe,GAC5JI,EAAe,IAAI9D,EAAY,WAAY,CAAC,gCAAgC,SAACyC,EAAIC,GAAL,4BAA2BD,EAA3B,eAAoCA,EAApC,QAA2C,SAACE,EAAWD,GAAZ,MAAmB,GAAK/H,KAAK2H,MAAMK,KAAIe,GAC9JK,EAAgB,IAAI/D,EAAY,YAAa,CAAC,gCAAgC,SAACyC,EAAIC,GAAL,4BAA2BD,EAA3B,eAAoCA,EAApC,QAA2C,SAACE,EAAWD,GAAZ,MAAmB,GAAK/H,KAAK2H,MAAMK,KAAIe,GAChKM,GAAa,IAAIhE,EAAY,SAAU,CAAC,gCAAgC,SAACyC,EAAIC,GAAL,4BAA2BD,EAA3B,eAAoCA,EAApC,QAA2C,SAACE,EAAWD,GAAZ,MAAmB,GAAK/H,KAAK2H,MAAMK,KAAIe,GAE1JO,GAAW,IAAIjE,EAAY,OAAQ,IAAI,SAACyC,EAAIC,GAAL,6BAA4BD,EAA5B,SAAoC,SAACE,EAAWD,GAAZ,OAAmBC,IAAG,IACjGuB,GAAW,IAAIlE,EAAY,OAAQ,IAAI,SAACyC,EAAIC,GAAL,6BAA4BD,EAA5B,SAAoC,SAACE,EAAWD,GAAZ,OAAmBC,IAAG,IACjGwB,GAAe,IAAInE,EAAY,WAAY,IAAI,SAACyC,EAAIC,GAAL,iCAAgCD,EAAhC,SAAwC,SAACE,EAAWD,GAAZ,OAAmBC,IAAG,CAAC,cAC9GyB,GAAgB,IAAIpE,EAAY,YAAa,IAAI,SAACyC,EAAIC,GAAL,iCAAgCD,EAAhC,SAAwC,SAACE,EAAWD,GAAZ,OAAmBC,IAAG,CAAC,aAGhHtB,GAAc,IAAIrB,EAAY,UAAW,IAAI,SAACyC,EAAIC,GAAL,sBAAqBD,EAArB,oBAAmCA,EAAnC,aAA+C,SAACE,EAAGD,GAAJ,OAAgB,GAALC,EAAS,OAAS,UACzH,CAAC,UAAW,OAAQ,UAAW,YAE/B0B,GAAW,IAAIrE,EAAY,OAAQ,IAAI,SAACyC,EAAIC,GAAL,MAAY,MAAI,SAACC,EAAGD,GAAJ,OAAWC,IAClE,IAEA2B,GAAe,CAACpB,EAAaI,EAAaC,EAAYC,EAAUC,EAAWE,EAASC,EAAaC,EAAaC,EAAcC,EAAeC,IAE3IrC,GAAY,CAACa,EAAaI,EAAUC,EAAUC,EAAcC,EAAgBC,EAC5EiB,GAAUC,GAAUC,GAAcC,GAAe/C,GAAagD,IAAUzC,OAAO0C,IAE/EC,GAAY,CAACN,GAAUC,GAAUC,GAAcC,IAEnDpE,EAAYwE,aAAa7C,IAEzBa,EAAYvB,mBAAmBhT,EAAU4G,cAAe2N,EAAaA,GACrEA,EAAYvB,mBAAmBhT,EAAU4G,cAAe+N,EAAUJ,GAClEA,EAAYvB,mBAAmBhT,EAAU4G,cAAegO,EAAUA,GAClEA,EAAS5B,mBAAmBhT,EAAU4G,cAAegO,EAAUA,GAC/DL,EAAYvB,mBAAmBhT,EAAUwE,YAAa+P,EAAanB,IACnEmB,EAAYvB,mBAAmBhT,EAAUwE,YAAaoQ,EAAUxB,IAChEwB,EAAS5B,mBAAmBhT,EAAUwE,YAAaoQ,EAAUxB,IAE7DuB,EAAS3B,mBAAmBhT,EAAU4G,cAAe+N,EAAUA,GAC/DA,EAAS3B,mBAAmBhT,EAAU4G,cAAe2N,EAAaI,GAClEA,EAAS3B,mBAAmBhT,EAAU4G,cAAegO,EAAUA,GAC/DA,EAAS5B,mBAAmBhT,EAAU4G,cAAegO,EAAUA,GAC/DD,EAAS3B,mBAAmBhT,EAAUwE,YAAamQ,EAAUvB,IAC7DuB,EAAS3B,mBAAmBhT,EAAUwE,YAAaoQ,EAAUxB,IAC7DwB,EAAS5B,mBAAmBhT,EAAUwE,YAAaoQ,EAAUxB,IAK7D,IAHA,IAAIoD,GAAsC,CAACxW,EAAUiG,KAAMjG,EAAU+F,MAAO/F,EAAUkG,eAAgBlG,EAAUmG,SAAUnG,EAAUgG,QAChIyQ,GAAmC,CAACzW,EAAUuG,MAAOvG,EAAU0G,aAAc1G,EAAUwG,QAASxG,EAAU2G,eAAgB3G,EAAUyG,MAAOzG,EAAU4H,UAEhJ1R,GAAI,EAAGA,GAAImgB,GAAa3Y,OAAQxH,KAAK,CAC1C,IAAK,IAAI2a,GAAI3a,GAAG2a,GAAIwF,GAAa3Y,OAAQmT,KACrCwF,GAAangB,IAAG8c,mBAAmBwD,GAAwBH,GAAaxF,IAAIwF,GAAaxF,KACzFwF,GAAangB,IAAG8c,mBAAmByD,GAAqBJ,GAAaxF,IAAIuC,IAE7EiD,GAAangB,IAAGoc,eAAiB,CAACtS,EAAU+F,OAGhDkP,EAAYjC,mBAAmBwD,GAAwBvB,EAAaA,GAGpE,IADA,IAAIyB,GAAiB,CAACnC,EAAaK,GAC1B1e,GAAI,EAAGA,GAAIwgB,GAAehZ,OAAQxH,KACvC,IAAK,IAAI2a,GAAI3a,GAAG2a,GAAI6F,GAAehZ,OAAQmT,KACvC6F,GAAexgB,IAAG8c,mBAAmBhT,EAAU4G,cAAe8P,GAAe7F,IAAI6F,GAAe7F,KAChG6F,GAAexgB,IAAG8c,mBAAmByD,GAAqBC,GAAe7F,IAAIuC,IAIrF,IAAI,IAAIld,GAAI,EAAGA,GAAIogB,GAAU5Y,OAAQxH,KAAI,CACrCogB,GAAUpgB,IAAG8c,mBAAmByD,GAAqBH,GAAUpgB,IAAIkd,IACnE,IAAI,IAAIvC,GAAI,EAAGA,GAAI6F,GAAehZ,OAAQmT,KACtCyF,GAAUpgB,IAAG8c,mBAAmByD,GAAqBC,GAAe7F,IAAIuC,IACxEsD,GAAe7F,IAAGmC,mBAAmByD,GAAqBH,GAAUpgB,IAAIkd,IAIhF,IAAIuD,GAAoB,CAAC3W,EAAUyD,WAAYzD,EAAU0D,W,+rCACzD0P,GAAYJ,mBAAmB2D,GAAmBvD,GAAaA,IAE/DA,GAAYd,eAAiB,CAACtS,EAAU2D,YAExC+P,GAAUlY,SAAQ,SAAAob,GAAE,OAAIA,EAAGtE,eAAiBsE,EAAGtE,eAAeqB,OAAO,CAAC3T,EAAU0I,OAAQ1I,EAAUyI,eClU3F,IAAMoO,GAAb,WAgCI,c,4FAAA,SAhBA,KAAAC,UAAY,EAQZ,KAAAC,SAAkB,CACdtM,SAAU,CAAEvB,KAAM,EAAGC,OAAQ,EAAGzL,OAAQ,GACxCoM,GAAI9J,EAAUyH,gBACdtQ,MAAO,0BAGX,KAAA6f,uBAAyB,CAAC,SAAU,cAAe,SAAU,eAAgB,cAAe,cAAe,c,UA9B/G,O,EAAA,G,EAAA,oBAoCI,SAAM1gB,GASF,GAPA2E,KAAKhF,OAASK,EAEd2E,KAAK4N,UAAYvS,EAAEuS,UACnB5N,KAAK6N,UAAY,GAEjBxS,EAAE2gB,gBAAkB,IAAI5E,IAEK,GAAzBpX,KAAK4N,UAAUnL,OAKf,OAJAzC,KAAKhF,OAAOihB,cAAgB,GAC5Bjc,KAAKhF,OAAOsT,OAAO,GAAKtO,KAAK6N,eAC7B7N,KAAKhF,OAAOkhB,kBAAkB,CAAEjO,KAAM,EAAGC,OAAQ,EAAGzL,OAAQ,GAAK,CAAEwL,KAAM,IAAOC,OAAQ,IAAKzL,OAAQ,IAAK,GAAO,EAC7GzC,KAAK+b,wBAIb/b,KAAKgO,IAAM,EACXhO,KAAKmc,sBAGL,IAAIC,EAAYpc,KAAK4N,UAAU5N,KAAK4N,UAAUnL,OAAS,GACvDzC,KAAK8b,SAAStM,SAAW,CAAEvB,KAAMmO,EAAU5M,SAASvB,KAAMC,OAAQkO,EAAU5M,SAAStB,OAASkO,EAAU5M,SAAS/M,OAAQA,OAAQ,GAEjIzC,KAAKhF,OAAOihB,cAAgBjc,KAAKqc,YAEjCrc,KAAKhF,OAAOsT,OAAO,GAAKtO,KAAK6N,YA9DrC,iCAkEI,WAEI7N,KAAKsc,GAAK,GAEV,IAAK,IAAIrhB,EAAI,EAAGA,EAAI+E,KAAK6b,UAAW5gB,IAAK,CAIrC,IAFA,IAAIqX,EAAetS,KAAK8b,WAIhB9b,KAAKgO,KAAOhO,KAAK4N,UAAUnL,SAFtB,CAIT,IAAIwR,EAASjU,KAAK4N,UAAU5N,KAAKgO,KAKjC,GAJIiG,EAAOpF,IAAM9J,EAAUwH,UACvBvM,KAAKuc,YAActI,GAGnBA,EAAOpF,IAAM9J,EAAUsH,SAAW4H,EAAOpF,IAAM9J,EAAUoH,OAAS8H,EAAOpF,IAAM9J,EAAUwH,QAAS,CAClG+F,EAAQ2B,EACgB,MAApBjU,KAAKuc,cACLjK,EAAMkK,cAAgBxc,KAAKuc,YAC3Bvc,KAAKuc,YAAc,MAEvB,MAGJvc,KAAKgO,MAIThO,KAAKsc,GAAGpa,KAAKoQ,GAETrX,EAAI+E,KAAK6b,UAAY,GACrB7b,KAAKgO,MAKbhO,KAAKyc,IAAMzc,KAAKsc,GAAG,GACnBtc,KAAK6O,GAAK7O,KAAKyc,IAAI5N,GACnB7O,KAAKwP,SAAWxP,KAAKyc,IAAIjN,WA1GjC,uBA8GI,WAEI,IAAI8C,EAGJ,IAFAtS,KAAKoc,UAAYpc,KAAKyc,MAET,CAIT,GAFAzc,KAAKgO,MAEDhO,KAAKgO,KAAOhO,KAAK4N,UAAUnL,OAAQ,CACnC6P,EAAQtS,KAAK8b,SACb,MAQJ,IALAxJ,EAAQtS,KAAK4N,UAAU5N,KAAKgO,MAClBa,IAAM9J,EAAUwH,UACtBvM,KAAKuc,YAAcjK,GAGnBA,EAAMzD,IAAM9J,EAAUsH,SAAWiG,EAAMzD,IAAM9J,EAAUoH,OAASmG,EAAMzD,IAAM9J,EAAUwH,QAAS,CAC/F+F,EAAMkK,cAAgBxc,KAAKuc,YAC3Bvc,KAAKuc,YAAc,KACnB,OAKR,IAAK,IAAIthB,EAAI,EAAGA,EAAI+E,KAAK6b,UAAY,EAAG5gB,IACpC+E,KAAKsc,GAAGrhB,GAAK+E,KAAKsc,GAAGrhB,EAAI,GAG7B+E,KAAKsc,GAAGtc,KAAK6b,UAAY,GAAKvJ,EAE9BtS,KAAKyc,IAAMzc,KAAKsc,GAAG,GACnBtc,KAAK6O,GAAK7O,KAAKyc,IAAI5N,GACnB7O,KAAKwP,SAAWxP,KAAKyc,IAAIjN,WAjJjC,uBAqJI,SAAUO,GAA4F,IAA9EG,EAA8E,uDAArD,QAASV,EAA4C,uCAAnBkN,EAAmB,uCAClF,MAAZlN,IAAkBA,EAAW7T,OAAOghB,OAAO,GAAI3c,KAAKwP,WACxDxP,KAAK6N,UAAU3L,KAAK,CAChB6N,KAAMA,EACNP,SAAUA,EACVkN,SAAUA,EACVvM,MAAOD,MA3JnB,kBA+JI,SAAKrB,GACI8I,MAAMC,QAAQ/I,KAAKA,EAAK,CAACA,IAC1BA,EAAGQ,QAAQrP,KAAK6O,KAAO,GAAG7O,KAAKmV,cAjK3C,oBAoKI,SAAOtG,GAAwF,IAA3D+N,IAA2D,yDAArCC,EAAqC,wDAC3F,GAAI7c,KAAK6O,IAAMA,KAAQ8I,MAAMC,QAAQ/I,IAAOA,EAAGQ,QAAQrP,KAAK6O,KAAO,GAAI,CACnE,GAAIA,GAAM9J,EAAU6G,WAAa5L,KAAK6O,IAAM9J,EAAUyH,gBAClD,OAAO,EAGX,IAAIgD,EAAyBxP,KAAKyc,IAAIjN,SAClCX,GAAM9J,EAAU6G,WAA+B,MAAlB5L,KAAKoc,WAE9Bpc,KAAKoc,UAAU5M,SAASvB,KAAOuB,EAASvB,OACxCuB,EAAW,CACPvB,KAAMjO,KAAKoc,UAAU5M,SAASvB,KAC9BC,OAAQlO,KAAKoc,UAAU5M,SAAStB,OAASlO,KAAKoc,UAAU5M,SAAS/M,OACjEA,OAAQ,IAKpB,IAAIia,EAAqB,KA6BzB,GA5BI7N,GAAM9J,EAAU6G,WAAa5L,KAAKoc,UAAU5M,SAASvB,KAAOjO,KAAKyc,IAAIjN,SAASvB,OAC7EjO,KAAK8c,gBAAgB9c,KAAKoc,UAAUvN,MAErC6N,EAAW,CACPK,MAAO,4BACPC,cAAe,SAACC,GACZ,MAAO,CAAC,CACJC,SAAUD,EACVE,KAAM,CACFxK,MAAO,CACHE,gBAAiBrD,EAASvB,KAAM8E,YAAavD,EAAStB,OAAQ0E,cAAepD,EAASvB,KAAM6E,UAAWtD,EAAStB,OAChHkP,QAAS,GACTC,SAAUtL,OAAOuL,eAAeze,OAEpCkR,KAAM,SAOlB8M,GACA7c,KAAKhF,OAAOuiB,KAAKC,oBAAoBC,SAASjO,EAAUxP,KAAKhF,SAMjE2c,MAAMC,QAAQ/I,GAAK,CAEnB,IAAI6O,EADkB7O,EAAGgJ,KAAI,SAAAvF,GAAK,OAAIrN,EAAkBqN,MACf0G,KAAK,MAC9ChZ,KAAK8P,UAAU,sCAAwC4N,EAAiB,sBAAwBzY,EAAkBjF,KAAK6O,IAAK,QAASW,EAAUkN,QAG/I1c,KAAK8P,UAAU,kBAAoB7K,EAAkB4J,GAAM,sBAAwB5J,EAAkBjF,KAAK6O,IAAK,QAASW,EAAUkN,GAOtI,OAAO,EAOX,OAJIE,GACA5c,KAAKmV,aAGF,IAvOf,8BA0OI,SAAiBpY,GACb,MAAO,CACHkR,KAAMlR,EAAEkR,KACRC,OAAQnR,EAAEmR,OAASnR,EAAE0F,OACrBA,OAAQ,KA9OpB,6BAkPI,SAAgBoM,GACZ,GAAIA,GAAM9J,EAAU8F,IAAK,OAAO,EADP,WAEV+Q,EAAO+B,oBAFG,IAEzB,2BAA0C,yBACtC,2BACI,GAAI9O,GADiB,QACD,OAAO,EAFO,gCAFjB,iCAlPjC,mBA2PI,WACI,OAAO7O,KAAKyc,KAAOzc,KAAK8b,WA5PhC,wBA+PI,SAAWxJ,GAAqD,IAArBsK,EAAqB,wDAE5D,IAAKjF,MAAMC,QAAQtF,GAAQ,CACvB,IAAIsL,EAAe5d,KAAK6O,IAAMyD,EAE9B,OADIsL,GAAOhB,GAAM5c,KAAKmV,YACfyI,EAGX,OAAOtL,EAAMjD,QAAQrP,KAAK6O,KAAO,IAvQzC,gCA2QI,WACI,OAAOlT,OAAOghB,OAAO,GAAI3c,KAAKwP,YA5QtC,oCA+QI,SAAuBqO,GAEnB,GAAI7d,KAAK6O,IAAM9J,EAAUyH,gBACrB,MAAO,CACHyB,KAAMjO,KAAK8b,SAAStM,SAASvB,KAC7BC,OAAQ,IACRzL,OAAQ,GAQhB,IAHA,IAAIqb,EAAO,EACPC,EAAmBF,EACnBpb,EAAS,EACNqb,EAAO9d,KAAK6b,UAAY,IAAMpZ,EAASzC,KAAKsc,GAAGwB,GAAMtO,SAAS/M,QAAUsb,GAC3EA,GAAoBtb,EACpBqb,IAEJ,IAAIE,EAAWhe,KAAKsc,GAAGwB,GAAMtO,SAS7B,OARgB,MAAZwO,IAAkBA,EAAWhe,KAAKie,sBAEd,CACpBhQ,KAAM+P,EAAS/P,KACfC,OAAQ8P,EAAS9P,OAAS6P,EAC1Btb,OAAQ,KAvSpB,kCA6SI,WAEI,IAAI+M,EAAWxP,KAAKie,qBAIpB,OAHAzO,EAAStB,OAASsB,EAAStB,OAASlO,KAAKwP,SAAS/M,OAClD+M,EAAS/M,OAAS,EAEX+M,IAnTf,uBAsTI,WAEI,IAAI0O,EAA8B,GAQ9BC,EAAmC,CACnCjQ,OAAQ,EACRD,KAAM,EACNxL,OAAQ,GAGR2b,GAAuC,EAK3C,IAHApe,KAAKhF,OAAOkhB,kBAAkBiC,EAAoBne,KAAKqe,uBAAuB,IAAI,GAAO,EACrFre,KAAK+b,yBAED/b,KAAKse,SAAS,CAMlB,IAJA,IAAIC,EAASve,KAAKgO,IAEdwQ,EAAgCxe,KAAK6N,UAAUpL,OAE5C,CAACsC,EAAUoH,MAAOpH,EAAUsH,QAAStH,EAAUwH,QAASxH,EAAU6G,WAAWyD,QAAQrP,KAAKyc,IAAI5N,KAAO,GACxG7O,KAAKmV,YAGT,IAAIsJ,EAAgBze,KAAKie,qBAErBS,EAAK1e,KAAK2e,iBASd,IAPAR,EAAqB,CACjBlQ,KAAMjO,KAAKoc,UAAU5M,SAASvB,KAAO,EACrCC,OAAQ,EACRzL,OAAQ,GAGZ2b,EAA8Bpe,KAAK6O,IAAM9J,EAAU6G,UAC5C5L,KAAK6O,IAAM9J,EAAU6G,WACxB5L,KAAKmV,YAIT,IADA,IAAIyJ,GAAqB,EAChB3jB,EAAIujB,EAAuBvjB,EAAI+E,KAAK6N,UAAUpL,OAAQxH,IAC5B,SAA3B+E,KAAK6N,UAAU5S,GAAGkV,QAAkByO,GAAY,GAiBxD,GAdU,MAANF,GACAR,EAAYhc,KAAK,CACb2c,IAAKH,EACLI,KAAML,EACNM,GAAI/e,KAAKgf,iBAAiBhf,KAAKoc,UAAU5M,UACzCoP,UAAWA,EACXK,kBAAkB,IAKTjf,KAAKie,qBAGlBje,KAAKgO,KAAOuQ,EAOZ,IANA,IAAIW,EACA,CAACna,EAAUkB,cAAelB,EAAUsB,cAAetB,EAAU0B,cAAe1B,EAAUmB,cACtFnB,EAAUiB,cAAejB,EAAUiC,YAAajC,EAAUc,cAE1DsZ,GAAyB,GAErBnf,KAAKse,SAAWY,EAAqB7P,QAAQrP,KAAK6O,IAAM,GACxD,CAAC9J,EAAUoH,MAAOpH,EAAUsH,SAASgD,QAAQrP,KAAK6O,IAAM,GAAKsQ,IAC7Dnf,KAAK8P,UAAU,+CAAiDoP,EAAqBrH,KAAI,SAAA1b,GAAC,OAAI8I,EAAkB9I,MAAI6c,KAAK,MACnH,qBAAuBhZ,KAAKyc,IAAIvgB,OACtCijB,GAAgB,GAEpBnf,KAAKmV,aAITiJ,GAA+Bpe,KAAKyc,IAAIjN,SAASvB,KAAOkQ,EAAmBlQ,KAAO,IAClFjO,KAAKhF,OAAOkhB,kBAAkBiC,EAAoBne,KAAKqe,uBAAuB,IAAI,GAAO,EACrFre,KAAK+b,wBAQjB,OAHA/b,KAAKhF,OAAOkhB,kBAAkBiC,EAAoB,CAAElQ,KAAMjO,KAAK8b,SAAStM,SAASvB,KAAO,EAAGC,OAAQ,EAAGzL,OAAQ,IAAK,GAAO,EACtHzC,KAAK+b,wBAEFmC,IAlZf,4BAwZI,aAA8C,6DAEtCkB,EAAyB,KAE7B,OAAQpf,KAAK6O,IACT,KAAK9J,EAAUkB,cACX,OAAOjG,KAAKqf,cAChB,KAAKta,EAAUmB,cACX,OAAOlG,KAAKsf,cAChB,KAAKva,EAAU0B,cACX,OAAOzG,KAAKuf,6BAChB,KAAKxa,EAAUsB,cACX,OAAOrG,KAAKwf,cAChB,KAAKza,EAAUiB,cACX,OAAOhG,KAAKyf,cAChB,KAAK1a,EAAUiC,YACX,OAAOhH,KAAK0f,iBAChB,KAAK3a,EAAUc,aACX,OAAO7F,KAAK2f,kBAChB,KAAK5a,EAAUe,cAGX,OAFA9F,KAAK8P,UAAU,gFAAiF,QAChG9P,KAAKmV,YACE,KAEX,KAAKpQ,EAAUuB,WACX,OAAOtG,KAAK4f,WAChB,KAAK7a,EAAUyB,WACX,OAAOxG,KAAK6f,WAChB,KAAK9a,EAAU+E,aAIX,OAHA9J,KAAK8P,UAAU,6FAA8F,QAC7G9P,KAAKmV,YACLnV,KAAK8f,OAAO/a,EAAUgF,oBAAoB,GACnC,KACX,KAAKhF,EAAUmF,YACf,KAAKnF,EAAUoF,cAEX,OADAnK,KAAK+f,kBACE,KAEX,QACI,IAAI/iB,EAAIiI,EAAkBjF,KAAK6O,IACtB,MAAL7R,IAAWA,EAAI,IACfA,GAAKgD,KAAKyc,IAAIvgB,QAAOc,GAAK,IAAMgD,KAAKyc,IAAIvgB,MAAQ,KACrDc,GAAK,6BACLgD,KAAK8P,UAAU9S,GACfgD,KAAKmV,YAKb,OAAOiK,IAzcf,6BA6cI,WACIpf,KAAKmV,YACLnV,KAAK8f,OAAO/a,EAAU+B,eAAe,GACrC9G,KAAK4c,KAAK7X,EAAUG,YACpBlF,KAAK4c,KAAK,CAAC7X,EAAUqF,aAAcrF,EAAUsF,cAC7CrK,KAAK4c,KAAK7X,EAAU6G,aAld5B,sBAqdI,WAEI5L,KAAK8P,UAAU,qGAAsG,QAErH,IAAIkQ,EAA6B,CAC7BvgB,KAAMsF,EAAUkb,kBAChBzQ,SAAUxP,KAAKie,qBACfiC,YAAa,KACbC,YAAa,MAUjB,OAPAngB,KAAKmV,YACLnV,KAAK8f,OAAO/a,EAAUG,YAAY,GAClClF,KAAK8f,OAAO/a,EAAUyG,OAAO,GAC7BxL,KAAK8f,OAAO,CAAC/a,EAAUG,WAAYH,EAAUO,eAAgBP,EAAUI,gBAAiBJ,EAAUQ,aAAcR,EAAUM,gBAAiBN,EAAUK,wBAAwB,GAE7K4a,EAAKE,YAAclgB,KAAKie,qBAEjB+B,IAvef,sBA0eI,WAEIhgB,KAAK8P,UAAU,sMAAuM,QAEtN,IAAIkQ,EAA6B,CAC7BvgB,KAAMsF,EAAUkb,kBAChBzQ,SAAUxP,KAAKie,qBACfiC,YAAa,KACbC,YAAa,MAQjB,OALAngB,KAAKmV,YACLnV,KAAK8f,OAAO/a,EAAUG,YAAY,GAElC8a,EAAKE,YAAclgB,KAAKie,qBAEjB+B,IA1ff,6BA6fI,WAEI,IAAIvB,EAAgBze,KAAKie,qBACzBje,KAAKmV,YAEL,IAAI6K,EAAuB,CACvBvgB,KAAMsF,EAAUc,aAChBua,KAAM,KACN5Q,SAAUiP,EACVyB,YAAalgB,KAAKgf,iBAAiBhf,KAAKie,sBACxCkC,YAAa,KACbE,gBAAiB,KACjBC,wBAAyB,MAQ7B,GALKtgB,KAAK8f,OAAO/a,EAAU8B,cAAc,IACrC7G,KAAKugB,uBAAsB,GAAO,EAAO,CAAC,SAAU,GAGxDvgB,KAAKugB,uBAAsB,GAAO,EAAM,GAAI,IACvCvgB,KAAK8f,OAAO/a,EAAUG,YAAY,GAAQ,OAAO8a,EAStD,OAPAA,EAAKK,gBAA0BrgB,KAAKyc,IAAIvgB,MACxC8jB,EAAKM,wBAA0BtgB,KAAKie,qBACpCje,KAAKmV,YACL6K,EAAKE,YAAclgB,KAAKie,qBAExBje,KAAKugB,uBAAsB,GAAO,EAAO,CAAC,YAAa,gBAAiB,aAAc,eAAgB,GAE9FvgB,KAAK6O,IACT,KAAK9J,EAAUW,cAAe1F,KAAKwgB,yBAAyBR,GAAO,MACnE,KAAKjb,EAAUgB,WAAY/F,KAAKygB,mBAAmBT,GAAO,MAC1D,KAAKjb,EAAUiC,YAAahH,KAAK0gB,gBAAgBV,GAAO,MACxD,QACIhgB,KAAK8P,UAAU,uEAGvB,OAAOkQ,IAliBf,sCAqiBI,SAAyBA,GAQrB,OANAhgB,KAAKmV,YACAnV,KAAK2gB,WAAW5b,EAAUa,YAC3B5F,KAAKugB,sBAAsBP,EAAKK,iBAAiB,EAAO,CAAC,SAAU,MAAO,GAE9EL,EAAKE,YAAclgB,KAAK4gB,uBAEhB5gB,KAAK6O,IACT,KAAK9J,EAAUa,UAWX,OAVA5F,KAAKmV,YACL6K,EAAKE,YAAclgB,KAAK4gB,uBACxBZ,EAAKI,KAAO,mBACRpgB,KAAK2gB,WAAW5b,EAAUG,aAC1B8a,EAAKa,aAAuB7gB,KAAKyc,IAAIvgB,MACrC8D,KAAKmV,YACL6K,EAAKE,YAAclgB,KAAK4gB,wBAExB5gB,KAAK8P,UAAU,yCAGvB,KAAK/K,EAAUgC,cAIX,GAHA/G,KAAKmV,YACL6K,EAAKE,YAAclgB,KAAK4gB,uBACxB5gB,KAAKugB,sBAAsBP,EAAKK,iBAAiB,EAAO,GAAI,IACvDrgB,KAAK2gB,WAAW5b,EAAUG,YAE3B,YADAlF,KAAK8P,UAAU,mDAAqDkQ,EAAKK,gBAAkB,KAS/F,GANAL,EAAKI,KAAO,eACZJ,EAAKc,cAAwB9gB,KAAKyc,IAAIvgB,MACtC8jB,EAAKe,kBAAoB/gB,KAAKie,qBAC9Bje,KAAKmV,YACLnV,KAAKugB,uBAAsB,GAAO,EAAO,CAAC,MAAO,GACjDP,EAAKE,YAAclgB,KAAK4gB,wBACnB5gB,KAAK8f,OAAO/a,EAAUa,WAAW,GAAO,OAS7C,OARAoa,EAAKE,YAAclgB,KAAK4gB,4BACpB5gB,KAAK2gB,WAAW5b,EAAUG,aAC1B8a,EAAKgB,cAAwBhhB,KAAKyc,IAAIvgB,MACtC8D,KAAKmV,YACL6K,EAAKE,YAAclgB,KAAK4gB,wBAExB5gB,KAAK8P,UAAU,wCAGvB,QAEI,YADA9P,KAAK8P,UAAU,sIAnlB/B,6BA4lBI,SAAgBkQ,GACZhgB,KAAKmV,YACLnV,KAAK2gB,WAAW5b,EAAUgC,eAAe,GACzCiZ,EAAKe,kBAAoB/gB,KAAKie,qBAC9Bje,KAAKugB,sBAAsBP,EAAKK,iBAAiB,EAAO,GAAI,GAE5DL,EAAKI,KAAO,aACZJ,EAAKE,YAAclgB,KAAK4gB,uBAEpB5gB,KAAK2gB,WAAW5b,EAAUG,aAC1B8a,EAAKc,cAAwB9gB,KAAKyc,IAAIvgB,MACtC8D,KAAKmV,aAELnV,KAAK8P,UAAU,wEAzmB3B,gCA8mBI,SAAmBkQ,GACf,EAAG,CACChgB,KAAKmV,YACLnV,KAAK2gB,WAAW5b,EAAUgB,YAAY,GACtC,IAAIkb,GAAkB,EACtB,OAAQjhB,KAAK6O,IACT,KAAK9J,EAAUgC,cACX/G,KAAKkhB,eAAelB,GACpB,MACJ,KAAKjb,EAAU4B,eACX3G,KAAKmhB,mBAAmBnB,GACxB,MACJ,KAAKjb,EAAUkC,cACXjH,KAAKmV,YACL8L,GAAS,EACTjhB,KAAK8f,OAAO,CAAC/a,EAAUoC,aAAcpC,EAAUmC,aAAa,GAChE,KAAKnC,EAAUmC,WACf,KAAKnC,EAAUoC,aACXnH,KAAKohB,cAAcpB,EAAMiB,GACzB,MACJ,KAAKlc,EAAUsC,cACXrH,KAAKqhB,kBAAkBrB,GACvB,MACJ,KAAKjb,EAAUqC,kBACXpH,KAAKshB,mBAAmBtB,UAG3BhgB,KAAK6O,IAAM9J,EAAU+G,SAzoBtC,gCA4oBI,SAAmBkU,GAEf,GADAhgB,KAAKmV,YACAnV,KAAK8f,OAAO/a,EAAUG,aAEvBlF,KAAK2gB,WAAW5b,EAAU6B,gBAAiB,CAC3C,IAAI2a,EAAMvhB,KAAKwhB,4BACJ,MAAPD,IACwB,MAApBvB,EAAKyB,cAAqBzB,EAAKyB,YAAc,IACjDzB,EAAKyB,YAAYvf,KAAKqf,GACtBvB,EAAKI,KAAO,kBArpB5B,uCA2pBI,WACI,IAAImB,EAAsB,CAAErT,OAAQ,GAAIwT,gBAAiB,GAAIC,iBAAkB,GAAIC,mBAAoB5hB,KAAKie,sBAC5G,GAAKje,KAAK8f,OAAO/a,EAAU6B,iBACtB5G,KAAK8f,OAAO/a,EAAUmC,aACtBlH,KAAK8f,OAAO/a,EAAUuF,aAE3B,GAAKtK,KAAK2gB,WAAW5b,EAAUG,aAQ/B,GAHAqc,EAAIrT,OAAiBlO,KAAKyc,IAAIvgB,MAC9B8D,KAAKmV,YAEAnV,KAAK8f,OAAO/a,EAAUwF,cAE3B,OADAvK,KAAK6hB,gBAAgBN,GACdA,OATHvhB,KAAK8P,UAAU,4DAlqB3B,6BA8qBI,SAAgByR,GAEZ,GAAKvhB,KAAK8f,OAAO/a,EAAU2B,mBAI3B,GAFA1G,KAAKugB,uBAAsB,GAAO,EAAM,IAEnCvgB,KAAK2gB,WAAW5b,EAAUG,YAA/B,CAKAqc,EAAIG,gBAA0B1hB,KAAKyc,IAAIvgB,MACvC8D,KAAKmV,YAEL,IAAI2M,EAAO9hB,KAAKoc,UAAU5M,SACtBuS,EAAO/hB,KAAKie,qBAIhB,GAHAje,KAAKhF,OAAOkhB,kBAAkBlc,KAAKgf,iBAAiB8C,GAAOC,EAAMR,EAAIG,iBAAiB,EAAO,IAGxF1hB,KAAK8f,OAAO/a,EAAUuF,aAC3B,GAAKtK,KAAK2gB,WAAW5b,EAAUG,aAQ/B,GAHAqc,EAAII,iBAA2B3hB,KAAKyc,IAAIvgB,MACxC8D,KAAKmV,YAEAnV,KAAK8f,OAAO/a,EAAUwF,cAE3B,KAAOvK,KAAK6O,IAAM9J,EAAUkE,WAAW,CACnCjJ,KAAKmV,YACL,IAAIiL,EAAqC,GAEzC,OAAQpgB,KAAK6O,IAET,KAAK9J,EAAUiB,cACXoa,EAAO,WACP,MAEJ,KAAKrb,EAAUsB,cACX+Z,EAAO,WAcf,OAVY,IAARA,GACApgB,KAAK8P,UAAU,mDACV9P,KAAK2gB,WAAW,CAAC5b,EAAUuC,eAAgBvC,EAAUwC,gBAAiBxC,EAAUuB,WAAYvB,EAAUwB,cACvGvG,KAAKmV,YACLiL,EAAO,aAGXpgB,KAAKmV,YAGDnV,KAAK6O,IAET,KAAK9J,EAAUuC,eAEf,KAAKvC,EAAUwC,gBACXga,EAAInB,GAAgBpgB,KAAKyc,IAAIvgB,MAC7B8D,KAAKmV,YACL,MAEJ,KAAKpQ,EAAUuB,WACXib,EAAInB,GAAQ,OACZpgB,KAAKmV,YACD,CAACpQ,EAAUuD,YAAavD,EAAU0E,gBAAgB4F,QAAQrP,KAAK6O,KAAO,GACtE0S,EAAInB,IAASpgB,KAAKyc,IAAIvgB,MACtB8D,KAAKmV,aAELnV,KAAK8P,UAAU,oEAEnB,MAEJ,KAAK/K,EAAUwB,UACXvG,KAAKmV,YACDnV,KAAK8f,OAAO/a,EAAUyC,eACtB+Z,EAAInB,GAAQ,YAEhB,MACJ,QACIpgB,KAAK8P,UAAU,uGA7DvB9P,KAAK8P,UAAU,gEAdf9P,KAAK8P,UAAU,8DArrB3B,+BAywBI,SAAkBkQ,GACdhgB,KAAKmV,YACL,IAAI6M,EAAmBhiB,KAAKiiB,uBAAsB,GAC1B,MAApBD,IAC6B,MAAzBhC,EAAKgC,mBAA0BhC,EAAKgC,iBAAmB,IAC3DhC,EAAKgC,iBAAiB9f,KAAK8f,MA9wBvC,gCAkxBI,SAAmBhC,GAGf,GAFAhgB,KAAKmV,YACL6K,EAAKkC,YAAc,GACfliB,KAAK8f,OAAO/a,EAAUmC,YAAY,IAASlH,KAAK8f,OAAO/a,EAAUuF,aAAa,GAC9E,GACItK,KAAKmV,YACDnV,KAAK6O,IAAM9J,EAAUG,aACrB8a,EAAKkC,YAAYhgB,KAAalC,KAAKyc,IAAIvgB,OACvC8D,KAAKmV,mBAEJnV,KAAK6O,IAAM9J,EAAU+G,OAElC,OAAI9L,KAAK8f,OAAO/a,EAAUwF,cAAc,IACpCyV,EAAKI,KAAO,cACLJ,GAGJ,OAnyBf,2BAsyBI,SAAcA,EAAsBiB,GAChCjhB,KAAKmV,YAEL,IAAIgN,EAAQ,CAAEC,WAAY,GAAIlU,OAAQ,GAAI+S,OAAQA,GAClD,OAAIjhB,KAAK6O,IAAM9J,EAAUG,YAIrBlF,KAAK8P,UAAU,2CACR,OAJPqS,EAAMC,WAAqBpiB,KAAKyc,IAAIvgB,MACpC8D,KAAKmV,YAMJnV,KAAK8f,OAAO/a,EAAUuF,aAAa,GACpCtK,KAAK6O,IAAM9J,EAAUG,YAMrBlF,KAAK8P,UAAU,oFACR,OANPqS,EAAMjU,OAAiBlO,KAAKyc,IAAIvgB,MAChC8D,KAAKmV,YACe,MAAhB6K,EAAKqC,UAAiBrC,EAAKqC,QAAU,IACzCrC,EAAKqC,QAAQngB,KAAKigB,GAMtBnC,EAAKI,KAAO,cACZpgB,KAAK8f,OAAO/a,EAAUwF,cAAc,GAE7B,MAd+C,QAlzB9D,4BAm0BI,SAAeyV,GACXA,EAAKI,KAAO,YACZpgB,KAAK2gB,WAAW5b,EAAUgC,eAAe,GACzCiZ,EAAKsC,eAAiBtiB,KAAKie,qBAC3B+B,EAAKuC,UAAYviB,KAAKiiB,uBAAsB,KAv0BpD,4BA00BI,WAEI,IAAIxD,EAAgBze,KAAKie,qBACzBje,KAAKmV,YAEL,IAAI6K,EAAsB,CACtBvgB,KAAMsF,EAAUiC,YAChBwI,SAAUiP,EACVyB,YAAalgB,KAAKgf,iBAAiBhf,KAAKie,sBACxCkC,YAAa,KACbE,gBAAiB,KACjBC,wBAAyB,KACzBkC,UAAU,GAad,OAVKxiB,KAAK8f,OAAO/a,EAAU8B,cAAc,IACrC7G,KAAKugB,uBAAsB,GAAO,EAAO,CAAC,SAAU,GAGpDvgB,KAAK2gB,WAAW5b,EAAUiF,WAAW,KACrCgW,EAAKwC,UAAW,EAChBxiB,KAAK8f,OAAO/a,EAAUkF,eAAe,IAGzCjK,KAAKugB,uBAAsB,GAAO,EAAM,GAAI,EAAG,GAAI,KAC9CvgB,KAAK8f,OAAO/a,EAAUG,YAAY,IAEvC8a,EAAKK,gBAA0BrgB,KAAKyc,IAAIvgB,MACxC8jB,EAAKM,wBAA0BtgB,KAAKie,qBACpCje,KAAKmV,YACL6K,EAAKE,YAAclgB,KAAKie,qBAEjB+B,GAP+CA,IAn2B9D,yBA82BI,WAEI,IAAIvB,EAAgBze,KAAKie,qBACzBje,KAAKmV,YAEL,IAAI6K,EAAmB,CACnBvgB,KAAMsF,EAAUiB,cAChBwJ,SAAUiP,EACVyB,YAAalgB,KAAKgf,iBAAiBhf,KAAKie,sBACxCkC,YAAa,KACbE,gBAAiB,KACjBC,wBAAyB,KACzBmC,UAAW,KACXC,eAAgB,KAChBC,aAAc,MAQlB,OALK3iB,KAAK8f,OAAO/a,EAAU2C,aAAa,IACpC1H,KAAKugB,uBAAsB,GAAO,EAAO,CAAC,QAAS,GAGvDvgB,KAAKugB,uBAAsB,GAAO,EAAM,GAAI,EAAG,GAAI,cAC9CvgB,KAAK8f,OAAO/a,EAAUG,YAAY,IAEvC8a,EAAKK,gBAA0BrgB,KAAKyc,IAAIvgB,MACxC8jB,EAAKM,wBAA0BtgB,KAAKie,qBACpCje,KAAKmV,YACL6K,EAAKE,YAAclgB,KAAKie,qBAExBje,KAAKugB,uBAAsB,GAAO,EAAO,CAAC,aAAc,GACpDvgB,KAAK6O,IAAM9J,EAAU4C,eAEzB3H,KAAKmV,YAEL6K,EAAKE,YAAclgB,KAAKie,qBAGxB+B,EAAK0C,eAAiB1iB,KAAKgf,iBAAiBhf,KAAKoc,UAAU5M,UAC3DwQ,EAAKyC,UAAYziB,KAAK4iB,YACtB5C,EAAK2C,aAAe3iB,KAAKie,qBAEzBje,KAAKhF,OAAOkhB,kBAAkB8D,EAAK0C,eAAgB1iB,KAAKqe,uBAAuB,GAAI2B,EAAKK,iBAAiB,EAAO,IAEhHL,EAAKE,YAAclgB,KAAKie,sBAbsB+B,GARQA,IAp4B9D,yBA85BI,WAEI,IAAIvB,EAAgBze,KAAKie,qBACzBje,KAAKmV,YAEL,IAAI6K,EAAmB,CACnBvgB,KAAMsF,EAAUsB,cAChBmJ,SAAUiP,EACVyB,YAAalgB,KAAKgf,iBAAiBhf,KAAKie,sBACxCkC,YAAa,KACbE,gBAAiB,KACjBC,wBAAyB,KACzBuC,kBAAmB,GACnBC,0BAA2B,GAC3B1iB,OAAQ,GACR2iB,cAAe,GACfC,YAAa,GACbP,UAAW,KACXC,eAAgB,KAChBC,aAAc,MAIlB,GADA3iB,KAAKugB,uBAAsB,GAAO,EAAM,GAAI,EAAG,GAAI,aAC9CvgB,KAAK8f,OAAO/a,EAAUG,YAAY,GAAQ,OAAO8a,EAQtD,GANAA,EAAKK,gBAA0BrgB,KAAKyc,IAAIvgB,MACxC8jB,EAAKM,wBAA0BtgB,KAAKie,qBACpCje,KAAKmV,YACL6K,EAAKE,YAAclgB,KAAKie,qBAExBje,KAAKugB,uBAAsB,GAAO,EAAO,CAAC,WAAY,IACjDvgB,KAAK8f,OAAO/a,EAAUuB,YAAa,OAAO0Z,EAC/C,IAAI5S,GAAiB,EACrB,EAAG,CAGC,GAFApN,KAAKugB,sBAAsBP,EAAKK,iBAAiB,EAAOjT,EAAQ,GAAK,CAAC,SAAU,EAAG,KAAM,OACzFA,GAAQ,EACJpN,KAAK6O,IAAM9J,EAAUG,WAAY,CACjClF,KAAK8P,UAAU,0DAA4DkQ,EAAKK,gBAAkB,gDAAiD,SACnJ,MAGJL,EAAK6C,kBAAkB3gB,KAAalC,KAAKyc,IAAIvgB,OAC7C8jB,EAAK8C,0BAA0B5gB,KAAKlC,KAAKie,sBACzCje,KAAKmV,YAELnV,KAAK8f,OAAO/a,EAAUyG,OAAO,GAE7BwU,EAAK+C,cAAc7gB,KAAKlC,KAAKie,sBAC7B+B,EAAK5f,OAAO8B,KAAKlC,KAAK4iB,aACtB5C,EAAKgD,YAAY9gB,KAAKlC,KAAKie,4BAEtBje,KAAK2gB,WAAW5b,EAAU+G,OAAO,IAI1C,GAFAkU,EAAKE,YAAclgB,KAAKie,qBAEpBje,KAAKoc,UAAUvN,IAAM9J,EAAU+G,OAAS9L,KAAK2gB,WAAW5b,EAAU4C,cAAe,CACjF,IAAK3H,KAAK8f,OAAO/a,EAAU4C,cAAc,GAAO,OAAOqY,EAEvDA,EAAK0C,eAAiB1iB,KAAKgf,iBAAiBhf,KAAKoc,UAAU5M,UAC3DwQ,EAAKyC,UAAYziB,KAAK4iB,YACtB5C,EAAK2C,aAAe3iB,KAAKie,qBAEzBje,KAAKhF,OAAOkhB,kBAAkB8D,EAAK0C,eAAgB1C,EAAK2C,aAAc3C,EAAKK,iBAAiB,EAAO,IAEnGL,EAAKE,YAAclgB,KAAKie,0BAExBje,KAAK2gB,WAAW5b,EAAU4C,cAAc,GAE5C,OAAOqY,IAl+Bf,wCAs+BI,WACI,OAAQhgB,KAAKsc,GAAG,GAAGzN,IACf,KAAK9J,EAAUwD,gBACX,OAAOvI,KAAKijB,sBAChB,KAAKle,EAAU8B,aACX,OAAO7G,KAAKkjB,mBAChB,QAII,OAHAljB,KAAKmV,YACLnV,KAAK8P,UAAU,wCACf9P,KAAKmV,YACE,QAh/BvB,iCAo/BI,WACI,IAAI6K,EAA6B,CAC7BvgB,KAAMsF,EAAUkb,kBAChBzQ,SAAUxP,KAAKie,qBACfiC,YAAa,KACbC,YAAa,MAKjB,IAFAngB,KAAKmV,YACLnV,KAAK8P,UAAU,qQAAsQ,QAC9Q9P,KAAK6O,IAAM9J,EAAU6G,WAAa5L,KAAK6O,IAAM9J,EAAUyH,iBAC1DwT,EAAKE,YAAclgB,KAAK4gB,uBACxB5gB,KAAKmV,YAGT,OAAO6K,IAngCf,8BAsgCI,WAEI,IAAIvB,EAAgBze,KAAKie,qBACzBje,KAAKmV,YAEAnV,KAAK8f,OAAO/a,EAAU8B,cAAc,IACrC7G,KAAKhF,OAAOkhB,kBAAkBuC,EAAeze,KAAKqe,uBAAuB,IAAI,GAAO,EAAO,CAAC,UAGhG,IAAI8E,GAAuB,EACvBnjB,KAAK2gB,WAAW5b,EAAUiF,aAC1BhK,KAAKmV,YACLnV,KAAK8f,OAAO/a,EAAU2D,YAAY,GAClC1I,KAAK8f,OAAO/a,EAAUkF,eAAe,GACrCkZ,GAAc,GAGlB,IAAIje,EAAa,GACjB,GAAIlF,KAAK8f,OAAO/a,EAAUG,YAAY,GAAQ,CAC1CA,EAAqBlF,KAAKyc,IAAIvgB,MAC9B,IAAI6lB,EAAO/hB,KAAKie,qBACZmF,EAAOpjB,KAAKqe,uBAAuBnZ,EAAWzC,OAAS,GAC3DzC,KAAKmV,YACAnV,KAAK2gB,WAAW5b,EAAUuF,cAC3BtK,KAAKhF,OAAOkhB,kBAAkB6F,EAAMqB,GAAM,GAAO,EAAO,CAAC,MAIjE,IAAIpD,EAAwB,CACxBvgB,KAAMsF,EAAU0B,cAChBvB,WAAYA,EACZsK,SAAUiP,EACVyB,YAAa,KACbmD,WAAY,GACZlD,YAAa,KACbmD,0BAA2B,GAC3BC,mBAAoB,GACpBJ,YAAaA,EACbK,kBAAmB,IAGvB,IAAKxjB,KAAK8f,OAAO/a,EAAUuF,aAAa,GAAO,OAAO0V,EAKtD,IAHA,IAAIyD,GAAoC,EACpCrW,GAAiB,EAEdpN,KAAK6O,IAAM9J,EAAUwF,cAAc,CAQtC,OAPK6C,GAAOpN,KAAK8f,OAAO/a,EAAU+G,OAAO,GACzCsB,GAAQ,EACJpN,KAAK2gB,WAAW5b,EAAUqC,mBAAmB,KAC7CpH,KAAK8f,OAAO/a,EAAUG,YAAY,GAClClF,KAAK8f,OAAO,CAAC/a,EAAU6B,eAAgB7B,EAAU4B,eAAgB5B,EAAUkC,gBAAgB,IAGvFjH,KAAK6O,IACT,KAAK9J,EAAU4B,eACP8c,GAA0BzjB,KAAK8P,UAAU,qEAAsE,QAAS9P,KAAKie,sBACjIje,KAAK0jB,oBAAoBD,EAA0BzD,GACnDyD,GAA2B,EAC3B,MACJ,KAAK1e,EAAUkC,cACXjH,KAAK2jB,gBAAgB3D,GACrB,MACJ,KAAKjb,EAAU6B,eACX,IAAI2a,EAAMvhB,KAAKwhB,4BACJ,MAAPD,GACAvB,EAAKuD,mBAAmBrhB,KAAKqf,GAEjC,MACJ,KAAKxc,EAAUG,WACX,IAAI0e,EAAa5jB,KAAKiiB,sBAAsBwB,GAC5CzD,EAAKqD,WAAWnhB,KAAK0hB,GACrBH,EAA2BA,GAA4BG,EAAWC,UAClE,MACJ,QACI7jB,KAAK8P,UAAU7K,EAAkBjF,KAAK6O,IAAM,6BAA8B,SAGlF,IAAK7O,KAAK2gB,WAAW5b,EAAU+G,OAC3B,MAMR,IAFA9L,KAAK8f,OAAO/a,EAAUwF,cAAc,GAE7B,CAACxF,EAAU0C,qBAAsB1C,EAAU4E,cAAe5E,EAAU0E,eAAgB1E,EAAUyE,gBAAgB6F,QAAQrP,KAAK6O,KAAO,GACrI,OAAQ7O,KAAK6O,IACT,KAAK9J,EAAUyE,eAKf,KAAKzE,EAAU4E,cACX3J,KAAKmV,YACLnV,KAAK4c,KAAK7X,EAAUyG,OACpBxL,KAAK8f,OAAO/a,EAAUG,YAAY,GAClC,MACJ,KAAKH,EAAU0E,eACXzJ,KAAKmV,YACLnV,KAAK8f,OAAO,CAAC/a,EAAU6E,eAAgB7E,EAAU8E,mBAAmB,GACpE7J,KAAK4c,KAAK7X,EAAUuB,YACpBtG,KAAK4c,KAAK7X,EAAUyG,OACpBxL,KAAK8f,OAAO/a,EAAUG,YAAY,GAClC,MACJ,KAAKH,EAAU0C,qBACXzH,KAAKmV,YACLnV,KAAK8f,OAAO/a,EAAUyG,OAAO,GAC7BxL,KAAK8f,OAAO/a,EAAUI,iBAAiB,GA3GvC,WAiHO6a,EAAKqD,YAjHZ,IAiHZ,2BAAoC,KAA3BnV,EAA2B,QAC5BA,EAAO4V,mBAAqB5V,EAAO2V,WAAa7D,EAAKsD,0BAA0BjU,QAAQnB,EAAOhJ,aAAe,IAC7GlF,KAAK8P,UAAU,8FAA+F,UAAWkQ,EAAKxQ,WAnH1H,8BA0HZ,OAFAwQ,EAAKE,YAAclgB,KAAKie,qBAEjB+B,IAhoCf,iCAooCI,SAAoByD,EAAmCzD,GAC/CyD,GACAzjB,KAAK8P,UAAU,8DAEnB9P,KAAKmV,YACLnV,KAAK8f,OAAO/a,EAAUmC,YAAY,GAElC,IAAI6c,EAAoB/D,EAAKqD,WAAWxL,KAAI,SAAAvc,GAAC,OAAIA,EAAE4J,cAGnD,GADAlF,KAAKugB,uBAAsB,GAAO,EAAOwD,GACrC/jB,KAAK2gB,WAAW5b,EAAUuF,aAAc,CAIxC,IAHAtK,KAAKugB,uBAAsB,GAAO,EAAOwD,GACzC/jB,KAAKmV,cAEQ,CACT,IAAInV,KAAK2gB,WAAW5b,EAAUG,YAUvB,CACHlF,KAAK8P,UAAU,8DAAgE9P,KAAKyc,IAAIvgB,OACxF,MARA,GAHA8jB,EAAKsD,0BAA0BphB,KAAalC,KAAKyc,IAAIvgB,OACrD8D,KAAKmV,YACLnV,KAAKugB,uBAAsB,GAAO,EAAOwD,EAAS,IAC7C/jB,KAAK2gB,WAAW5b,EAAU+G,OAC3B,MAEA9L,KAAKmV,YACLnV,KAAKugB,uBAAsB,GAAO,EAAOwD,GAQrD/jB,KAAK8f,OAAO/a,EAAUwF,cAAc,QAEpCvK,KAAK8P,UAAU,iBArqC3B,6BAyqCI,SAAgBkQ,GACZhgB,KAAKmV,YAEL,IAAI4O,EAAoB/D,EAAKqD,WAAWxL,KAAI,SAAAvc,GAAC,OAAIA,EAAE4J,cAC/C8e,EAA6B,GAIjC,GAHAhE,EAAKwD,kBAAkBthB,KAAK8hB,GAE5BhkB,KAAKugB,uBAAsB,GAAO,EAAOwD,GACrC/jB,KAAK2gB,WAAW5b,EAAUuF,aAAc,CAIxC,IAHAtK,KAAKugB,uBAAsB,GAAO,EAAOwD,GACzC/jB,KAAKmV,cAEQ,CACT,IAAInV,KAAK2gB,WAAW5b,EAAUG,YAUvB,CACHlF,KAAK8P,UAAU,8DAAgE9P,KAAKyc,IAAIvgB,OACxF,MARA,GAHA8nB,EAAiB9hB,KAAalC,KAAKyc,IAAIvgB,OACvC8D,KAAKmV,YACLnV,KAAKugB,uBAAsB,GAAO,EAAOwD,EAAS,IAC7C/jB,KAAK2gB,WAAW5b,EAAU+G,OAC3B,MAEA9L,KAAKmV,YACLnV,KAAKugB,uBAAsB,GAAO,EAAOwD,GAQrD/jB,KAAK8f,OAAO/a,EAAUwF,cAAc,QAEpCvK,KAAK8P,UAAU,iBAxsC3B,mCA4sCI,SAAsB2T,GAElB,IAAIjU,EAAWxP,KAAKie,qBAChB/Y,EAAqBlF,KAAKyc,IAAIvgB,MAClC8D,KAAKmV,YAEL,IAAI6K,EAA8B,CAC9BvgB,KAAMsF,EAAUwd,UAChBrd,WAAYA,EACZ2e,WAAW,EACXC,iBAAiB,EACjBtU,SAAUA,EACVqJ,SAAU,KACVoL,SAAS,GAKb,OAFAjkB,KAAKkkB,UAAUlE,EAAMyD,GAEdzD,IA9tCf,mCAkuCI,SAAsBmE,EAA+BC,EAAqBC,GAAyF,IAAxEC,EAAwE,uDAA5C,EAAGC,EAAyC,uDAAvB,GAAIC,EAAmB,uDAAF,GACzJ1C,EAAO9hB,KAAKoc,UAAU5M,SACtBuS,EAAO/hB,KAAKie,qBAChB8D,EAAK7T,QAAU,EAAIoW,EACnBtkB,KAAKhF,OAAOkhB,kBAAkBlc,KAAKgf,iBAAiB8C,GAAOC,EAAMoC,EAAaC,EAAYC,EAAO,KAAME,EAASC,KAtuCxH,uBAyuCI,SAAUxE,EAA6ByD,GAEnC,IAAIgB,EAAY3N,EAAY2B,UAAUZ,KAAI,SAAApY,GAAI,OAAIA,EAAKilB,cAGvD,GAFA1kB,KAAKugB,uBAAsB,GAAO,EAAOkE,GAEpCzkB,KAAK8f,OAAO/a,EAAUG,YAAY,GAAvC,CAKA,IAAIA,EAAqBlF,KAAKyc,IAAIvgB,MACF,QAA5BgJ,EAAW0M,gBACX1M,EAAa,OAGjB,IAAIzF,EAAOqX,EAAY6N,YAAYzf,GAOnC,GANY,MAARzF,GACAO,KAAK8P,UAAU,+CAAiD5K,GAEpE8a,EAAKnH,SAAWpZ,EAChBO,KAAKmV,YAEDnV,KAAK6O,IAAM9J,EAAUuF,YAAa,CAIlC,IAHAtK,KAAKmV,YACL6K,EAAKjH,WAAa,GAEX/Y,KAAK6O,IAAM9J,EAAUI,kBACxB6a,EAAKjH,WAAW7W,KAAalC,KAAKyc,IAAIvgB,OACtC8D,KAAKmV,YAEDnV,KAAK6O,IAAM9J,EAAU+G,QAGzB,GAFA9L,KAAKmV,YAEDnV,KAAK6O,IAAM9J,EAAUI,gBAAiB,CACtCnF,KAAK8P,UAAU,kDAAoD9P,KAAKyc,IAAIvgB,OAC5E,MAII,MAARuD,GAAgBugB,EAAKjH,WAAWtW,OAAShD,EAAKsX,sBAAsBtU,QACpEzC,KAAK8P,UAAU,gBAAkBrQ,EAAKilB,WAAa,kBAAoBjlB,EAAKsX,sBAAsBtU,OAAS,eAG/GzC,KAAK8f,OAAO/a,EAAUwF,cAAc,GAGtB,MAAdrF,GAAwD,QAAlCA,EAAWsT,qBAAoD,MAAnBwH,EAAKjH,aACvEiH,EAAKjH,WAAa,CAAC,IAOvB/Y,KAAKugB,uBAAsB,GAAO,EAAO,CAAC,cAAe,aAAc,aAIvE,IAFA,IAAIqE,EAAmC,GAEhC,CAAC7f,EAAUkE,UAAWlE,EAAU8E,iBAAkB9E,EAAU2E,eAAgB3E,EAAU0C,qBAAsB1C,EAAUmC,WAAYnC,EAAU4B,eAAgB5B,EAAU2D,WAAY3D,EAAU2B,kBAAmB3B,EAAUyE,eAAgBzE,EAAU0E,gBAAgB4F,QAAQrP,KAAK6O,KAAO,GAO1R,OANI+V,EAAoBvV,QAAQrP,KAAK6O,KAAO,GACxC7O,KAAK8P,UAAU,qBAAuB7K,EAAkBjF,KAAK6O,IAAM,6EAGvE+V,EAAoB1iB,KAAKlC,KAAK6O,IAEtB7O,KAAK6O,IACT,KAAK9J,EAAU0C,qBACXzH,KAAKmV,YACL6K,EAAK8D,iBAAkB,EAEnB9jB,KAAK6O,IAAM9J,EAAUyG,OACrBxL,KAAKmV,YACLnV,KAAK8f,OAAO/a,EAAUI,kBAGlBnF,KAAK6O,IAAM9J,EAAU+G,OAAS9L,KAAKsc,GAAG,GAAGzN,IAAM9J,EAAU0C,sBACzDzH,KAAKmV,YAGb,MACJ,KAAKpQ,EAAU4B,eACP8c,GAA0BzjB,KAAK8P,UAAU,kEAC7C9P,KAAKmV,YACAnV,KAAK8f,OAAO/a,EAAUmC,YAAY,GAGnClH,KAAKugB,uBAAsB,GAAO,EAAO,CAAC,sBAF1CvgB,KAAKugB,uBAAsB,GAAO,EAAO,CAAC,QAI9CP,EAAK6D,WAAY,EACjB,MACJ,KAAK9e,EAAU2B,kBACX,IAAI6a,EAAsB,CAAErT,OAAQ8R,EAAK9a,WAAYyc,iBAAkB,GAAID,gBAAiB,GAAIE,mBAAoB5hB,KAAKie,sBACzH+B,EAAK6E,eAAiBtD,EACtBvhB,KAAK6hB,gBAAgBN,GACrB,MACJ,KAAKxc,EAAU2D,WACX1I,KAAKmV,YACAnV,KAAK8f,OAAO/a,EAAUuD,aAAa,GAGpCtI,KAAKugB,uBAAsB,GAAO,EAAO,CAAC,eAF1CvgB,KAAKugB,uBAAsB,GAAO,EAAO,CAAC,SAI9CP,EAAKiE,SAAU,EACf,MACJ,KAAKlf,EAAUyE,eACXxJ,KAAKmV,YACL6K,EAAK8E,QAAkB9kB,KAAKyc,IAAIvgB,MAChC8D,KAAK8f,OAAO/a,EAAUG,YAAY,GAClC,MACJ,KAAKH,EAAU8E,iBACX7J,KAAKmV,YACLnV,KAAK8f,OAAO/a,EAAUuB,YAAY,GAClCtG,KAAK8f,OAAO/a,EAAUG,YAAY,GAClC,MACJ,KAAKH,EAAU0E,eAGX,GAFAzJ,KAAKmV,YAEDnV,KAAKsc,GAAG,GAAGzN,IAAM9J,EAAUuF,aAAetK,KAAKsc,GAAG,GAAGzN,IAAM9J,EAAUwF,aAAc,CACnFvK,KAAKmV,YACLnV,KAAKmV,YACLnV,KAAKmV,YACL,MAQJ,GALA6K,EAAK+E,aAAuB/kB,KAAKyc,IAAIvgB,MACR,iBAAlB8D,KAAKyc,IAAIvgB,QAChB8jB,EAAK+E,aAAe,IAAM/E,EAAK+E,aAAe,KAG9C/kB,KAAK6O,IAAM9J,EAAUuD,YAAa,CAClCtI,KAAKmV,YACL,MACO,CAACpQ,EAAUG,WAAYH,EAAUI,gBAAiBJ,EAAUK,sBAAuBL,EAAUO,gBAAgB+J,QAAQrP,KAAK6O,KAAO,IACrHiI,EAAYkO,iBAAiBhlB,KAAK6O,IACnCoW,UAAUxlB,IACxBO,KAAK8P,UAAU,uEAEnB9P,KAAKmV,aAET,MACJ,KAAKpQ,EAAU2E,eACX1J,KAAKmV,YACLnV,KAAK8f,OAAO/a,EAAUO,gBAAgB,GACtC,MACJ,KAAKP,EAAUkE,UAGX,IAFAjJ,KAAKmV,YACLnV,KAAK8f,OAAO,CAAC/a,EAAUsB,gBAAgB,IAC/BrG,KAAK2gB,WAAW,CAAC5b,EAAU+G,MAAO/G,EAAUyH,gBAAiBzH,EAAUwF,gBAAgBvK,KAAKmV,YAEhGnV,KAAKoc,UAAUvN,IAAM9J,EAAUuF,aAAetK,KAAK6O,IAAM9J,EAAUwF,cAAcvK,KAAKmV,kBA/IlGnV,KAAK8P,UAAU,+CAAiD9P,KAAKyc,IAAIvgB,SA/uCrF,yBAs4CI,WAEI,IAAIuiB,EAAgBze,KAAKie,qBACrBiH,EAAsBzG,EAC1Bze,KAAKmV,YAELnV,KAAK8f,OAAO/a,EAAUoB,aAAa,GAEnC,IAAI6Z,EAAmB,CACnBvgB,KAAMsF,EAAUmB,cAChBsJ,SAAUiP,EACVyB,YAAalgB,KAAKie,qBAClBkH,eAAgB,KAChBC,gBAAiB,KACjBjF,YAAa,KACbkD,WAAY,GACZjjB,OAAQ,GACRilB,MAAO,MAgBX,GAbIrlB,KAAK6O,IAAM9J,EAAUG,YACrB8a,EAAKqF,MAAQ,CACT5lB,KAAMsF,EAAUsgB,MAChBngB,WAAoBlF,KAAKyc,IAAIvgB,MAC7BopB,MAAO,KACP9V,SAAUxP,KAAKie,sBAEnB+B,EAAKoF,gBAAkB,CAAEnX,KAAM+R,EAAKqF,MAAM7V,SAASvB,KAAMC,OAAQ8R,EAAKqF,MAAM7V,SAAStB,OAAS8R,EAAKqF,MAAM7V,SAAS/M,OAAQA,OAAQ,GAClIzC,KAAKmV,aAELnV,KAAK8P,UAAU,oEAAsE9P,KAAKyc,IAAIvgB,MAAO,SAGrG8D,KAAK6O,IAAM9J,EAAUuF,YAAa,CAElCtK,KAAKmV,YAGL,IAFA,IAAI/H,GAAiB,EAEdA,GAASpN,KAAK6O,IAAM9J,EAAU+G,OAE5BsB,GACDpN,KAAKmV,YAET/H,GAAQ,EAGJpN,KAAK6O,IAAM9J,EAAUG,WACrB8a,EAAKqD,WAAWnhB,KAAK,CACjBzC,KAAMsF,EAAUG,WAChBA,WAAYlF,KAAKyc,IAAIvgB,MAAQ,GAC7BsT,SAAUxP,KAAKie,uBAInBje,KAAK8P,UAAU,8DAAgE9P,KAAKyc,IAAIvgB,MAAO,SAEnG8D,KAAKmV,YAET+P,EAAuBllB,KAAKie,qBAC5Bje,KAAK8f,OAAO/a,EAAUwF,cAAc,GAMxC,OAHAyV,EAAKmF,eAAiBnlB,KAAKie,qBAGnBje,KAAK6O,IACT,KAAK9J,EAAUqB,cACXpG,KAAKmV,YACLnV,KAAKulB,gBAAgBvF,EAAK5f,QAC1B,MACJ,KAAK2E,EAAUkB,cACf,KAAKlB,EAAUuF,YACX,GAAGtK,KAAKie,qBAAqBhQ,MAAQiX,EAAqBjX,KAAO,EAAE,CAC/D,IAAIuX,EAAaxlB,KAAKqf,cACtBW,EAAKyF,OAASD,GAiB1B,OAFAxF,EAAKE,YAAclgB,KAAKie,qBAEjB+B,IAj+Cf,6BAq+CI,SAAgB5f,GAKZ,IAJA,IAAIslB,EAAmB,CAAC3gB,EAAUuD,YAAavD,EAAUQ,aAAcR,EAAUO,eAAgBP,EAAUM,gBAAiBN,EAAUK,sBAAuBL,EAAUI,iBAEnKwgB,GAAsB,EAEnBA,GAAc3lB,KAAK6O,IAAM9J,EAAU+G,OAAO,CACxC6Z,GACD3lB,KAAKmV,YAETwQ,GAAa,EACb,IAAIC,EAAsB5lB,KAAKie,qBAC/B,IAAKje,KAAK8f,OAAO/a,EAAUuF,aAAa,GACpC,MAKJ,IAHA,IAAI2D,EAAuB,GACvBb,GAAiB,EAEdA,GAASpN,KAAK6O,IAAM9J,EAAU+G,OAC5BsB,GACDpN,KAAKmV,YAET/H,GAAQ,EACJpN,KAAK6O,IAAM9J,EAAUG,aACjBlF,KAAKyc,IAAI5L,yBACT7Q,KAAK6O,GAAK9J,EAAUO,eACgC,SAA5CtF,KAAKyc,IAAIvgB,MAAQ,IAAIsc,qBAC7BxY,KAAKmV,aAOTuQ,EAAiBrW,QAAQrP,KAAK6O,IAAM,GACpC7O,KAAK8P,UAAU,2DAA6D9P,KAAKyc,IAAIvgB,MAAO,SAC5F8D,KAAKmV,cAELlH,EAAK/L,KAAK,CACN2jB,aAAc7lB,KAAK6O,GACnBW,SAAUxP,KAAKie,qBACf6H,SAAU9lB,KAAKyc,IAAIvgB,MACnBuD,KAAMsF,EAAUghB,eAEpB/lB,KAAKmV,aAGbnV,KAAK8f,OAAO/a,EAAUwF,cAAc,GACjB,GAAf0D,EAAKxL,OACLzC,KAAK8P,UAAU,2GAA4G,QAAS8V,GAEpIxlB,EAAO8B,KAAK+L,MAvhD5B,2BA6hDI,WACI,IAAI8X,EAA6B,CAC7BF,aAAc7lB,KAAK6O,GACnBW,SAAUxP,KAAKie,qBACf6H,SAAU9lB,KAAKyc,IAAIvgB,MACnBuD,KAAMsF,EAAUghB,cAIpB,OAFA/lB,KAAKmV,YAEE4Q,IAtiDf,yBAyiDI,WACI,IAAItH,EAAgBze,KAAKie,qBACzBje,KAAKmV,YAEL,IAAI6Q,EAAgC,CAChC/X,KAAMwQ,EAAcxQ,KACpBC,OAAQuQ,EAAcvQ,OAAS,EAC/BzL,OAAQ,GAGRud,EAAmB,CACnBvgB,KAAMsF,EAAUkB,cAChBuJ,SAAUiP,EACVyB,YAAalgB,KAAKie,qBAClBkC,YAAa,KACbkD,WAAY,GACZ4C,SAAU,KACVxD,UAAW,KACXyD,gBAAiB,MAGrBlG,EAAKqD,WAAarjB,KAAKmmB,gBAAgB,CAACphB,EAAU2C,YAAa3C,EAAU6G,UAAW7G,EAAUyH,kBAAkB,GAEhH,IAAI4Z,EAAyB,CAAC,WAAY,KAAM,IAAK,QACjDpG,EAAKqD,WAAWgD,WAAU,SAAA/qB,GAAC,OAAIA,EAAEmE,MAAQsF,EAAUuhB,eAAe,IAClEF,EAAyB,CAAC,SAG9BpmB,KAAKhF,OAAOkhB,kBAAkB8J,EAAiBhmB,KAAKqe,uBAAuB,IAAI,GAAM,EAAM+H,GAE3F,IACIG,EAAuB,CAAC,QAAS,OAAQ,OAAQ,QAAS,QAAS,QAAS,UAAW,KAAM,KAAM,MAEvG,GAHcvmB,KAAK2gB,WAAW5b,EAAU2C,aAAa,GAK9C,CACHsY,EAAKwG,kBAAoB,CAAEvY,KAAMjO,KAAKoc,UAAU5M,SAASvB,KAAMC,OAAQlO,KAAKoc,UAAU5M,SAAStB,OAASlO,KAAKoc,UAAU5M,SAAS/M,OAAQA,OAAQ,GAEhJ,IAAIgkB,EAAqB,GACzBzG,EAAKiG,SAAWjmB,KAAK0mB,qBAAqBD,GAE1CF,EAAqBvT,OAAOuT,EAAqBlX,QAAQrP,KAAKoc,UAAUlgB,MAAQ,IAAK,GAErF,IAAIyqB,EAAkB3mB,KAAKqe,uBAAuB,GAC9Cre,KAAK2gB,WAAW5b,EAAU6G,aAC1B+a,EAAkB3mB,KAAKie,sBAG3Bje,KAAKhF,OAAOkhB,kBAAkB8D,EAAKwG,kBAAmBG,GAAiB,GAAO,EAAMJ,EAAsBE,GAC1GzG,EAAK4G,gBAAkB5mB,KAAKie,0BAf5BmI,EAAuBS,QAAQ,QAoBnC,IAAIC,EAAoB,CAAC,QACzB,GAAI9mB,KAAK6O,IAAM9J,EAAU4C,aAAc,CACpB3H,KAAKie,qBAApB,IACI8I,EAAa/mB,KAAKie,qBACtBje,KAAKmV,YACL6K,EAAKyC,UAAYziB,KAAK4iB,YACtB5iB,KAAKhF,OAAOkhB,kBAAkB6K,EAAY/mB,KAAKqe,uBAAuB,IAAI,GAAM,EAAMyI,QAGtFP,EAAqBrkB,KAAK,SAG9B,IAAI8kB,EAAoB,GACxB,GAAIhnB,KAAK6O,IAAM9J,EAAU6C,aAAc,CACnC,IAAIqf,EAAajnB,KAAKie,qBACtB+B,EAAKkH,YAAclnB,KAAKmnB,eACxBnnB,KAAKhF,OAAOkhB,kBAAkB+K,EAAYjnB,KAAKie,sBAAsB,GAAM,EAAM+I,QAEjFF,EAAkB5kB,KAAK,YAG3B,GAAIlC,KAAK6O,IAAM9J,EAAUgD,aAAc,CACnC,IAAIqf,EAAapnB,KAAKie,qBACtB+B,EAAKqH,YAAcrnB,KAAKsnB,eACxBtnB,KAAKhF,OAAOkhB,kBAAkBkL,EAAYpnB,KAAKie,sBAAsB,GAAM,EAAM,CAAC,MAAO,cAEzF6I,EAAkB5kB,KAAK,YACvB8kB,EAAkB9kB,KAAK,YAU3B,OAPIlC,KAAK6O,IAAM9J,EAAUoE,eACrB6W,EAAKuH,UAAYvnB,KAAKwnB,cAG1BxH,EAAKE,YAAclgB,KAAKie,qBACxB+B,EAAKE,YAAYhS,QAAU,EAEpB8R,IApoDf,wBAuoDI,WACI,IAAIxQ,EAAWxP,KAAKie,qBACpBje,KAAKmV,YACL,IAAIsS,EAAyBznB,KAAK4iB,YAC9B8E,EAAgB,CAChBjoB,KAAMsF,EAAUoE,aAChBqG,SAAUA,EACViY,aAAcA,GAMlB,OAJIznB,KAAK6O,IAAM9J,EAAUqE,gBACrBpJ,KAAKmV,YACLuS,EAAGC,OAAS3nB,KAAK4iB,aAEd8E,IAppDf,0BAupDI,WACI,IAAIlY,EAAWxP,KAAKie,qBACpBje,KAAK8f,OAAO/a,EAAU6C,cAAc,GACpC5H,KAAK8f,OAAO/a,EAAU8C,WAAW,GACjC,IAAI+f,EAAmB,CACnBnoB,KAAMsF,EAAU6C,aAChByb,WAAY,GACZ7T,SAAUA,GAEVqY,EAAyB,CAAC9iB,EAAU+C,cAAe/C,EAAUkB,cAAelB,EAAUgD,aAAchD,EAAUoE,aAAcpE,EAAUwF,aAAcxF,EAAU6G,WAMlK,OALAgc,EAAIvE,WAAarjB,KAAKmmB,gBAAgB0B,GAAwB,GAAOhQ,KAAI,SAAA+L,GAAU,OAAIA,EAAWkE,QAC9F9nB,KAAK6O,IAAM9J,EAAU+C,gBACrB9H,KAAKmV,YACLyS,EAAIG,OAAS/nB,KAAK4iB,aAEfgF,IAtqDf,0BAyqDI,WACI5nB,KAAK8f,OAAO/a,EAAUgD,cAAc,GACpC/H,KAAK8f,OAAO/a,EAAU8C,WAAW,GAEjC,IAAImgB,EAAyB,GACzB5a,GAAiB,EAErB,EAAG,CACKA,EACAA,GAAQ,EAERpN,KAAK8f,OAAO/a,EAAU+G,OAAO,GAEjC,IAAIoC,EAAmBlO,KAAK4iB,YACxBqF,EAAmB,CACnBxoB,KAAMsF,EAAUgD,aAChByH,SAAUxP,KAAKie,qBACf/P,OAAQA,GAER,CAACnJ,EAAUiD,iBAAkBjD,EAAUkD,mBAAmBoH,QAAQrP,KAAK6O,KAAO,GAAG7O,KAAKmV,YACtFnV,KAAK6O,IAAM9J,EAAUmD,eACrBlI,KAAKmV,YACLnV,KAAK8f,OAAO,CAAC/a,EAAUoD,aAAcpD,EAAUqD,cAAc,IAEjE4f,EAAQ9lB,KAAK+lB,SACRjoB,KAAK6O,IAAM9J,EAAU+G,OAE9B,OAAOkc,IApsDf,kCAusDI,SAAqBvB,GAMjB,IAJA,IAAIyB,EAAgCloB,KAAKmoB,2BAA2B1B,GAEhEjX,EAAWxP,KAAKie,qBAEbje,KAAKooB,qBAAqB,CAE7B,IAAIC,EAAiCroB,KAAKmoB,2BAA2B1B,GAErEyB,EAAW,CACPzoB,KAAMsF,EAAU4D,YAChB2f,aAAcJ,EACdK,cAAeF,EACf7Y,SAAUA,GAGVxP,KAAK6O,IAAM9J,EAAUkE,YACrBif,EAASM,GAAKxoB,KAAK4iB,aAK3B,OAAOsF,IA9tDf,+BAkuDI,WACI,GAAIloB,KAAK6O,IAAM9J,EAAU+G,MAErB,OADA9L,KAAKmV,aACE,EAGX,OADInV,KAAK6O,IAAM9J,EAAU6D,gBAAgB5I,KAAKmV,YACtCnV,KAAK6O,IACT,KAAK9J,EAAU8D,YAIX,OAHA7I,KAAKmV,YAEDnV,KAAK6O,IAAM9J,EAAUiE,cAAchJ,KAAKmV,YACrCnV,KAAK8f,OAAO/a,EAAU4D,aAAa,GAC9C,KAAK5D,EAAUgE,aACf,KAAKhE,EAAU+D,aAEX,OADA9I,KAAKmV,YACEnV,KAAK8f,OAAO/a,EAAU4D,aAAa,GAC9C,KAAK5D,EAAU4D,YAEX,OADA3I,KAAKmV,aACE,EACX,QAAS,OAAO,KArvD5B,wCAyvDI,SAA2BsR,GAEvB,IAAKzmB,KAAK8f,OAAO,CAAC/a,EAAUG,WAAYH,EAAUuF,cAAc,GAC5D,OAAO,KAGX,GAAItK,KAAK6O,IAAM9J,EAAUuF,YAAa,CAElC,IAAIsT,EAEJ,GAHA5d,KAAKmV,YAGDnV,KAAK6O,IAAM9J,EAAUkB,cAAe,CACpC,IAAIuJ,EAAWxP,KAAKie,qBAChBwK,EAAkBzoB,KAAKqf,cAC3BzB,EAAM,CACFne,KAAMsF,EAAU2jB,SAChBpD,MAAO,KACP9V,SAAUA,EACVmZ,MAAOF,QAGX7K,EAAM5d,KAAK0mB,qBAAqBD,GAepC,OAbAzmB,KAAK8f,OAAO/a,EAAUwF,cAAc,GAIhCvK,KAAK6O,IAAM9J,EAAUmE,WAAa0U,EAAIne,MAAQsF,EAAU2jB,WACxD1oB,KAAKmV,YACDnV,KAAK8f,OAAO/a,EAAUG,YAAY,KAClC0Y,EAAI0H,MAAgBtlB,KAAKyc,IAAIvgB,MAC7B8D,KAAKmV,YACLsR,EAASvkB,KAAK0b,EAAI0H,SAInB1H,EAGX,GAAI5d,KAAK6O,IAAM9J,EAAUG,WAAY,CACjC,IAAI8a,EAAkB,CAClBvgB,KAAMsF,EAAUsgB,MAChBngB,WAAoBlF,KAAKyc,IAAIvgB,MAC7BopB,MAAO,KACP9V,SAAUxP,KAAKie,sBAgBnB,OAdAwI,EAASvkB,KAAK8d,EAAK9a,YACnBlF,KAAKmV,YAGDnV,KAAK6O,IAAM9J,EAAUmE,YACrBlJ,KAAKmV,YACDnV,KAAK8f,OAAO/a,EAAUG,YAAY,KAClC8a,EAAKsF,MAAgBtlB,KAAKyc,IAAIvgB,MAC9B8D,KAAKmV,YACLsR,EAASvkB,KAAK8d,EAAKsF,SAKpBtF,KApzDnB,6BAyzDI,SAAgB4I,EAAqCC,GAGjD,IAFA,IAAI9E,EAAwB,GAErB,CAAChf,EAAUO,eAAgBP,EAAUI,gBAAiBJ,EAAUK,sBAAuBL,EAAUM,gBACxGN,EAAUG,WAAYH,EAAUkG,eAAgBlG,EAAUuF,YAAavF,EAAUY,iBAAiB0J,QAAQrP,KAAK6O,KAAO,GAAG,CACrH,GAAI7O,KAAK6O,IAAM9J,EAAUkG,eACrB8Y,EAAQ7hB,KAAK,CACT4lB,KAAM,KACNxC,MAAO,KACPwD,UAAU,EACVtZ,SAAUxP,KAAKie,qBACfxe,KAAMsF,EAAUuhB,aAEpBtmB,KAAKmV,gBACF,CACH,IAAI2T,EAAW9oB,KAAK2gB,WAAW5b,EAAUY,iBAAiB,GACtDojB,EAAa/oB,KAAK4iB,YACtB,GAAkB,MAAdmG,EAAoB,CACpB,IAAI7a,EAAqB,CACrBzO,KAAMsF,EAAUmJ,OAChB4Z,KAAMiB,EACND,SAAUA,EACVtZ,SAAUuZ,EAAWvZ,UAEzBuU,EAAQ7hB,KAAKgM,GACTlO,KAAK2gB,WAAW5b,EAAUmE,aAC1BlJ,KAAKmV,YACDnV,KAAK8f,OAAO/a,EAAUG,YAAY,KAClCgJ,EAAOoX,MAAQ,GAAKtlB,KAAKyc,IAAIvgB,OAEjC8D,KAAKmV,cAIjB,GAAIyT,EAAuBvZ,QAAQrP,KAAK6O,KAAO,GAAK7O,KAAKse,QACrD,MAEJte,KAAK8f,OAAO/a,EAAU+G,OAAO,GAOjC,OAJsB,GAAlBiY,EAAQthB,QACRzC,KAAK8P,UAAU,8DAA+D,SAG3EiU,IAr2Df,uBAy2DI,WACI,OAAO/jB,KAAKgpB,gBAAgB,KA12DpC,6BA62DI,SAAgBC,GAEZ,IAAIC,EAEAA,EADAD,EAAarN,EAAO+B,mBAAmBlb,OAAS,EACzCzC,KAAKgpB,gBAAgBC,EAAa,GAElCjpB,KAAKmpB,aAGhB,IAAIC,EAAYxN,EAAO+B,mBAAmBsL,GAE1C,GAAY,MAARC,GAAgBE,EAAU/Z,QAAQrP,KAAK6O,IAAM,EAC7C,OAAOqa,EAKX,IAFA,IAAI9b,GAAQ,EAELA,GAASgc,EAAU/Z,QAAQrP,KAAK6O,KAAO,GAAG,CAE7C,IAAIqJ,EAAsBlY,KAAK6O,GAE/BzB,GAAQ,EACR,IAAIoC,EAAWxP,KAAKie,qBAEpBje,KAAKmV,YACL,IAAIkU,OAAe,EAEfA,EADAJ,EAAarN,EAAO+B,mBAAmBlb,OAAS,EACxCzC,KAAKgpB,gBAAgBC,EAAa,GAElCjpB,KAAKmpB,aAGjBD,EAAO,CACHzpB,KAAMsF,EAAUukB,SAChB9Z,SAAUA,EACV0I,SAAUA,EACVoQ,aAAcY,EACdX,cAAec,GAMvB,OAAOH,IAx5Df,wBA85DI,WAEI,IAAIpB,EACAtY,EAAyBxP,KAAKie,qBAElC,OAAQje,KAAK6O,IACT,KAAK9J,EAAUuF,YACX,OAAOtK,KAAKupB,eAChB,KAAKxkB,EAAU2D,WAIX,OAHA8G,EAAWA,EACXxP,KAAKmV,YACL2S,EAAO9nB,KAAKgpB,gBAAgB,GACrB,CACHvpB,KAAMsF,EAAUykB,QAChBha,SAAUA,EACVia,QAAS3B,EACT5P,SAAUnT,EAAU2D,YAE5B,KAAK3D,EAAU+F,MAEX0E,EAAWA,EACX,IAAIka,EAAM1pB,KAAK6O,GAIf,OAHA7O,KAAKmV,YACL2S,EAAO9nB,KAAKmpB,aAEL,CACH1pB,KAAMsF,EAAUykB,QAChBha,SAAUA,EACVia,QAAS3B,EACT5P,SAAUwR,GAGlB,KAAK3kB,EAAUI,gBACf,KAAKJ,EAAUQ,aACf,KAAKR,EAAUK,sBACf,KAAKL,EAAUO,eACf,KAAKP,EAAUM,gBACXyiB,EAAO,CACHroB,KAAMsF,EAAUghB,aAChBvW,SAAUxP,KAAKie,qBACf4H,aAAc7lB,KAAK6O,GACnBiX,SAAU9lB,KAAKyc,IAAIvgB,OAEvB,IAAIytB,EAAmB3pB,KAAK6O,IAAM9J,EAAUO,eAG5C,OAFAtF,KAAKmV,YAEDwU,EAAyB3pB,KAAK4pB,sBAAsB9B,GAEjDA,EACX,KAAK/iB,EAAUG,WAEX,IAAI2kB,EAAsB7pB,KAAKyc,IAAIvgB,MAC/B4tB,EAAY9pB,KAAKie,qBAIrB,GAFAje,KAAKmV,YAEDnV,KAAK6O,IAAM9J,EAAUuF,YAAa,CAClC,IAAIyO,EAAa/Y,KAAK+pB,4BAClB7E,EAAuBnM,EAAWmM,qBAEtC4C,EAAO,CACHroB,KAAMsF,EAAUilB,WAChBxa,SAAUsa,EACV5E,qBAAsBA,EACtB+E,SAAUlR,EAAWmR,MACrBhlB,WAAY2kB,EACZM,eAAgBpR,EAAWoR,qBAS/B,GANArC,EAAO,CACHroB,KAAMsF,EAAUG,WAChBA,WAAY2kB,EACZra,SAAUA,GAGVxP,KAAK6O,IAAM9J,EAAU8F,IAAK,CAC1B,IAAI2E,EAAWxP,KAAKie,qBACpBje,KAAKmV,YACLnV,KAAK8f,OAAO/a,EAAUG,YAAY,GAClC,IAAIklB,EAAmC,CACnC3qB,KAAMsF,EAAUG,WAChBA,WAAoBlF,KAAKyc,IAAIvgB,MAC7BsT,SAAUxP,KAAKie,sBAEnBje,KAAKmV,YACL2S,EAAO,CACHroB,KAAMsF,EAAU8F,IAChBwf,eAAgCvC,EAChCwC,gBAAiBF,EACjB5a,SAAUA,OAGP,CAACzK,EAAU0I,OAAQ1I,EAAUyI,WAAW6B,QAAQrP,KAAK6O,KAAO,IACnEiZ,EAAO,CACHroB,KAAMsF,EAAUykB,QAChBC,QAAS3B,EACT5P,SAAUlY,KAAK6O,GACfW,SAAUA,GAEdxP,KAAKmV,aAIb,OAAO2S,EACX,QAEI,OADA9nB,KAAK8P,UAAU,wFAA0F9P,KAAKyc,IAAIvgB,OAC3G,QAxgEvB,uBA6gEI,WASI,IARA,IAAI8jB,EAAiB,CACjBvgB,KAAMsF,EAAUwlB,KAChB/a,SAAUxP,KAAKie,qBACfuM,SAAU,IAGVC,EAAgB,CAAC1lB,EAAUQ,aAAcR,EAAUO,eAAgBP,EAAUM,gBAAiBN,EAAUK,sBAAuBL,EAAUI,iBAEtIslB,EAAcpb,QAAQrP,KAAK6O,KAAO,IACrCmR,EAAKwK,SAAStoB,KAAK,CACfzC,KAAMsF,EAAUghB,aAChBD,SAAU9lB,KAAKyc,IAAIvgB,MACnB2pB,aAAc7lB,KAAK6O,GACnBW,SAAUxP,KAAKyc,IAAIjN,WAEvBxP,KAAKmV,YACDnV,KAAK6O,IAAM9J,EAAU+G,QAGzB9L,KAAKmV,YAGT,OAAO6K,IApiEf,0BAuiEI,WAEmBhgB,KAAKie,qBAApB,IACIyM,EAAqB1qB,KAAKoc,UAG9B,GAFApc,KAAKmV,YAEDnV,KAAK6O,IAAM9J,EAAUkB,cAAe,CACpC,IAAIuf,EAAaxlB,KAAKqf,cAEtB,OADArf,KAAK8f,OAAO/a,EAAUwF,cAAc,GAC7Bib,EACJ,GAAI,CAACzgB,EAAU+G,MAAO/G,EAAUwF,cAAc8E,QAAQrP,KAAKsc,GAAG,GAAGzN,KAAO,GAC3E,CAAC9J,EAAUsE,UAAWtE,EAAUuE,cAAc+F,QAAQqb,EAAmB7b,KAAO,EAAG,CACnF,IAAI8b,EAAW3qB,KAAK4qB,YAEpB,OADA5qB,KAAK8f,OAAO/a,EAAUwF,cAAc,GAC7BogB,EAEP,IAAI7C,EAAO9nB,KAAK4iB,YACZsC,EAAuBllB,KAAKie,qBAUhC,OATAje,KAAK8f,OAAO/a,EAAUwF,cAAc,GAEH,CAC7BiF,SAAU0V,EACVzlB,KAAMsF,EAAUwF,aAChBsgB,mBAAoB/C,KA9jEpC,uCA0kEI,WAGI,GADA9nB,KAAKmV,YACDnV,KAAK6O,IAAM9J,EAAUwF,aAAc,CACnC,IAAI2a,EAAuBllB,KAAKie,qBAEhC,OADAje,KAAKmV,YACE,CAAE+P,qBAAsBA,EAAsBgF,MAAO,GAAIC,eAAgB,IAMpF,IAHA,IAAIpR,EAAyB,GACzBoR,EAAiC,KAExB,CACT,IAAInc,EAAMhO,KAAKgO,IAEf,GAAIhO,KAAK6O,IAAM9J,EAAUkG,eACrBjL,KAAKmV,YACL4D,EAAW7W,KAAK,CACZzC,KAAMsF,EAAUuhB,WAChB9W,SAAUxP,KAAKie,2BAEhB,CACH,IAAI6M,EAAY9qB,KAAK4iB,YACJ,MAAbkI,GACA/R,EAAW7W,KAAK4oB,GAIxB,GAAI9qB,KAAK6O,IAAM9J,EAAU+G,MACrB,MAEAqe,EAAejoB,KAAKlC,KAAKie,sBACzBje,KAAKmV,YAILnV,KAAKgO,KAAOA,GACZhO,KAAKmV,YAKb,IAAI3F,EAAWxP,KAAKie,qBAGpB,MAAO,CAAEiH,qBAFellB,KAAK8f,OAAO/a,EAAUwF,cAAc,GAETiF,EAAW,KAAM0a,MAAOnR,EAAYoR,eAAgBA,KAvnE/G,mCA2nEI,SAAsBrC,GAElB,GAAY,MAARA,EAAc,OAAO,KAEzB,KAAO9nB,KAAK2gB,WAAW,CAAC5b,EAAU8F,IAAK9F,EAAUyF,qBAC7C,GAAIxK,KAAK6O,IAAM9J,EAAU8F,IAAK,CAI1B,GAFA7K,KAAKmV,YAEDnV,KAAK6O,IAAM9J,EAAUG,WAErB,OADAlF,KAAK8P,UAAU,oFAAsF9P,KAAKyc,IAAIvgB,OACvG4rB,EAGX,IAAI5iB,EAAqBlF,KAAKyc,IAAIvgB,MAC9BsT,EAAWxP,KAAKie,qBAGpB,GAFAje,KAAKmV,YAEDnV,KAAK6O,IAAM9J,EAAUuF,YAAa,CAClC,IAAIyO,EAAa/Y,KAAK+pB,4BACtBjC,EAAO,CACHroB,KAAMsF,EAAUilB,WAChBxa,SAAUA,EACV0V,qBAAsBnM,EAAWmM,qBACjC+E,SAAUlR,EAAWmR,MACrBhlB,WAAYA,EACZilB,eAAgBpR,EAAWoR,iBAe3C,OAAOrC,O,gFApqEf,K,64CAEWlM,sBAAoC,CACvC,CAAC7W,EAAU0D,WAAY,CAAC1D,EAAUyD,YAClC,CAACzD,EAAUuG,MAAOvG,EAAU0G,aAAc1G,EAAUwG,QAASxG,EAAU2G,eAAgB3G,EAAUyG,MAAOzG,EAAU4H,SAAU5H,EAAUwE,aACtI,CAACxE,EAAU4G,cAAe5G,EAAUiG,KAAMjG,EAAU+F,OAAQ,CAAC/F,EAAUkG,eAAgBlG,EAAUmG,SAAUnG,EAAUgG,QACrH,CAAChG,EAAUsE,UAAWtE,EAAUuE,eCrBjC,IAAMyhB,GAAb,WAMI,WAAmB7lB,EAA2BzF,EAAsB4lB,EAAqB2F,EAA8BC,EAA4BlG,EAA6BjB,GAAe,WAA5K,KAAA5e,aAA2B,KAAAzF,OAAsB,KAAA4lB,QAAqB,KAAA2F,eAA8B,KAAAC,aAA4B,KAAAlG,eAA6B,KAAAjB,kBANpL,mDAUI,SAA2BoH,EAAqB7F,GAE5C,IAEI8F,EAAaD,EAAGE,gBAAgBC,MAFvB,4BAGTC,EAA6BH,EAAW,GACxCI,EAAmCJ,EAAW,GAE9CrS,EAA4B,GACD,MAA5ByS,IACCzS,EAAkByS,EAAyBC,MAAM,KAAK3T,KAAI,SAAA4B,GAAC,OAAIlI,SAASkI,EAAEgS,YAG9E,IAAIhsB,EAAgBqX,EAAY6N,YAAY2G,GACzCxS,EAAgBrW,OAAS,GAAa,MAARhD,IAC7BA,EAAO,IAAImZ,EAA4BnZ,EAAMqZ,IAGjD,IAAI5K,EAAS,IAAI6c,EAAOG,EAAG1vB,KAAMiE,EAAM4lB,EAAO6F,EAAGF,cAAeE,EAAGF,aAAcE,EAAGnG,aAAcmG,EAAGpH,iBAKrG,OAJA5V,EAAO+V,QAAUiH,EAAGjH,QAEpB/V,EAAOwd,oBAAsBR,EAEtBhd,MAjCf,KAsCayd,GAAb,WAMI,WAAmBzmB,GAAkB,WAAlB,KAAAA,aAJZ,KAAA6e,QAAoB,GAF/B,kDAUY,SAA0B6H,GAC9B,IAAIvG,EAAe,IAAIsG,EAAMC,EAAGpwB,MAGhC,OAFA6pB,EAAMtB,QAAU6H,EAAG7H,QAAQlM,KAAK,SAAA3J,GAAM,OAAI6c,GAAOW,oBAAoBxd,EAAQmX,MAC7EA,EAAMwG,KAAOD,EAAGC,KACTxG,IAdf,oCAiBI,SAA8ByG,GAEb,MAAVA,IAAgBA,EAAS,IAE5B,IAJkD,EAI9CC,EAAkBD,EAAOjU,KAAI,SAAA+T,GAAE,OAAID,EAAMK,mBAAmBJ,MAE5DK,EAA2D,IAAI7U,IANjB,KAOjC2U,GAPiC,IAOlD,2BAAwB,oBACIhI,SADJ,IACpB,2BAAgC,KAAxB7V,EAAwB,QAC5B+d,EAA2BnU,IAAI5J,EAAOwd,oBAAqBxd,IAF3C,gCAP0B,yCAajC6d,GAbiC,IAalD,2BAAwB,oBACIhI,SADJ,IACpB,2BAAgC,KAAxB7V,EAAwB,QACxBge,EAAehe,EAAOwd,oBAAoBS,WAC9C,GAAmB,MAAhBD,EAAqB,CACpB,IAAIE,EAAmBH,EAA2BnwB,IAAIowB,GACtDhe,EAAOie,WAAaC,IALR,gCAb0B,8BAuBlD,OAAOL,MAxCf,K,+rCC7BO,IAAMM,GAAb,WAUI,WAAYC,EAAgCzW,EAA4BC,I,4FAAwB,SALhG,KAAAyW,kBAAmC,GAE3B,KAAAC,QAAiC,IAAIpV,IAC7C,KAAAqV,WAAuB,GAInBzsB,KAAK0sB,OAASJ,EAEdtsB,KAAK6V,aAAeA,EACpB7V,KAAK8V,WAAaA,EAGC,MAAf9V,KAAK0sB,QACL1sB,KAAK0sB,OAAOH,kBAAkBrqB,KAAKlC,M,UAnB/C,O,EAAA,G,EAAA,uCAuBI,SAAyB2sB,GAAoC,WACvChB,GAAMiB,uBAAuBD,aAAiB,EAAjBA,EAAmBZ,SADT,IACzD,2BAA2E,KAAlE1G,EAAkE,QAEvErlB,KAAK6sB,kBAAkBxH,IAH8B,iCAvBjE,+BAiCI,SAAkBA,GACdrlB,KAAK8sB,YAAY,CACb5nB,WAAYmgB,EAAMngB,WAClB6nB,gBAAiB,KACjBC,sBAAuB,GACvB3H,MAAOA,IALe,WAQPA,EAAMtB,SARC,IAQ1B,2BAAkC,KAAzB7V,EAAyB,QAC9BlO,KAAK8sB,YAAY,CACb5nB,WAAYgJ,EAAOhJ,WACnB6nB,gBAAiB,KACjBC,sBAAuB,GACvB9e,OAAQA,KAbU,iCAjClC,yBAmDI,SAAY+e,GACR,IAAI1C,EAAiBvqB,KAAKwsB,QAAQ1wB,IAAImxB,EAAO/nB,WAAW0M,eAC5C,MAAR2Y,GACAA,EAAO,CAAC0C,GACRjtB,KAAKwsB,QAAQ1U,IAAImV,EAAO/nB,WAAW0M,cAAe2Y,IAElDA,EAAKroB,KAAK+qB,GAEdjtB,KAAKysB,WAAWvqB,KAAK+qB,KA3D7B,iCA8DI,SAAoBhf,EAAcC,GAE9B,IAAKlO,KAAKktB,iBAAiBjf,EAAMC,GAC7B,OAAO,KAGX,IAN4C,EAMxCif,EAAwC,KACxCC,EAAmB,IAPqB,KAS7BptB,KAAKusB,mBATwB,IAS5C,2BAAuC,KAA9B7N,EAA8B,QACnC,GAAIA,EAAGwO,iBAAiBjf,EAAMC,GAAS,CACnC,IAAImf,EAAM3O,EAAG4O,oBAAoBrf,EAAMC,GACnCmf,EAAIvX,WAAW7H,KAAOof,EAAIxX,aAAa5H,KAAOmf,IAC9CD,EAAwCE,EACxCD,EAAmBC,EAAIvX,WAAW7H,KAAOof,EAAIxX,aAAa5H,QAd1B,8BAuB5C,OAA6C,MAAzCkf,EACOA,EAEAntB,OAxFnB,8BA6FI,SAAiBiO,EAAcC,GAC3B,QAAID,EAAOjO,KAAK6V,aAAa5H,MAAQA,EAAOjO,KAAK8V,WAAW7H,MAIxDA,GAAQjO,KAAK6V,aAAa5H,MAAQC,EAASlO,KAAK6V,aAAa3H,QAC7DD,GAAQjO,KAAK8V,WAAW7H,MAAQC,EAASlO,KAAK8V,WAAW5H,OAAS,KAnG9E,uBAyGI,SAAUhJ,GACN,IAAI6mB,EAAS/rB,KAAKutB,WAAWroB,GAC7B,OAAoB,GAAjB6mB,EAAOtpB,OAAoB,KACvBspB,EAAO,GAAG1G,QA5GzB,wBA+GI,SAAWngB,GAGP,IADA,IAAIib,EAA2BngB,KACV,MAAfmgB,GAAoB,CAEtB,IAAIqM,EAAUrM,EAAYqM,QAAQ1wB,IAAIoJ,EAAW0M,eACjD,GAAc,MAAX4a,IACCA,EAAUA,EAAQgB,QAAO,SAAAxwB,GAAC,OAAe,MAAXA,EAAEqoB,UACrB5iB,OAAS,EAChB,OAAO+pB,EAIfrM,EAAcA,EAAYuM,OAG9B,MAAO,KA/Hf,wBAmII,SAAWxnB,GAGP,IADA,IAAIib,EAA2BngB,KACV,MAAfmgB,GAAoB,CAEtB,IAAIqM,EAAUrM,EAAYqM,QAAQ1wB,IAAIoJ,EAAW0M,eACjD,GAAc,MAAX4a,IACCA,EAAUA,EAAQgB,QAAO,SAAAxwB,GAAC,OAAgB,MAAZA,EAAEkR,WACrBzL,OAAS,EAChB,OAAO+pB,EAIfrM,EAAcA,EAAYuM,OAG9B,MAAO,Q,gFAnJf,K,qXCXO,IAAMe,GAAb,IAEI,WAAmBvoB,EAAoBzF,GAAY,WAAhC,KAAAyF,aACflF,KAAKP,KAAOqX,EAAY6N,YAAYllB,MAI/BiuB,GAAb,IAGI,WAAmBxoB,EAA2ByoB,EAAwBC,EAA2B7U,GAAgC,WAA9G,KAAA7T,aAA2B,KAAAyoB,gBAAmD,KAAA5U,aAFjG,KAAA8U,sBAAgC,EAG5B7tB,KAAK4tB,WAAa9W,EAAY6N,YAAYiJ,MAKrCE,GAAb,WAYI,wBATO,KAAAC,QAAuB,GAU1B/tB,KAAKguB,uBAAuB,MAAO,UAAW,WAC9ChuB,KAAKguB,uBAAuB,MAAO,QAAS,SAC5ChuB,KAAKguB,uBAAuB,MAAO,UAAW,WAC9ChuB,KAAKguB,uBAAuB,MAAO,QAAS,SAC5ChuB,KAAKguB,uBAAuB,MAAO,UAAW,WAC9ChuB,KAAKguB,uBAAuB,MAAO,QAAS,SAC5ChuB,KAAKguB,uBAAuB,MAAO,QAAS,SAC5ChuB,KAAKguB,uBAAuB,MAAO,UAAW,WAE9C,IAAIC,EAAc,IAAIP,GAAU,SAAS,EAAM,UAAW,CAAC,IAAID,GAAmB,SAAU,UAC5FQ,EAAYJ,sBAAuB,EACnC7tB,KAAK+tB,QAAQ7rB,KAAK+rB,GAxB1B,qCA2BI,SAAW/oB,GACP,OAAOlF,KAAK+tB,QAAQP,QAAO,SAAAnyB,GAAC,OAAIA,EAAE6J,YAAcA,EAAW0M,mBA5BnE,oCAgCI,SAAuB1M,EAAoB0oB,EAAoBM,GAC3DluB,KAAK+tB,QAAQ7rB,KAAK,IAAIwrB,GAAUxoB,GAAY,EAAM0oB,EAAY,CAAC,IAAIH,GAAmB,SAAUS,SAjCxG,0BAKI,WAII,OAHoB,MAAjBluB,KAAKmuB,WACJnuB,KAAKmuB,SAAW,IAAIL,GAEjB9tB,KAAKmuB,aATpB,KCPM,SAAUC,GAAWC,GACzB,OAAOA,EACF1gB,QAAQ,SAAU,IACjBA,QAAQ,KAAM,SACdA,QAAQ,KAAM,QACdA,QAAQ,KAAM,QACdA,QAAQ,KAAM,UACdA,QAAQ,KAAM,UAWtB,SAAS2gB,GAAOC,GACd,OAAGA,EAAI,GAAW,IAAMA,EACjB,GAAKA,EAoCR,SAAUC,GAAOC,GAEjB,GAAiB,MAAbA,GAAyC,iBAAbA,EAAuB,OAAO,EAK9D,GAAIA,EAAUpD,MAFG,gEAEgB,CAE7B,IAAIqD,EAASD,EAAUjD,MAAM,KACzBmD,EAASF,EAAUjD,MAAM,KACzBoD,EAAUF,EAAOjsB,OACjBosB,EAAUF,EAAOlsB,OAErB,GAAImsB,EAAU,EACV,IAAIE,EAAQL,EAAUjD,MAAM,UAE3B,GAAIqD,EAAU,EACXC,EAAQL,EAAUjD,MAAM,KAEhC,GAAoB,GAAhBsD,EAAMrsB,OAAa,OAAO,EAC9B,IAAIssB,EAAKxd,SAASud,EAAM,IACpBE,EAAKzd,SAASud,EAAM,IACpBG,EAAK1d,SAASud,EAAM,IAGxB,IAAU,GAANE,GAAWA,EAAK,IACZD,EAFS,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAEtCC,EAAK,GACrB,OAAO,EAGf,GAAU,GAANA,EAAS,CACT,IAAIE,GAAQ,EAIZ,OAHOD,EAAK,KAAMA,EAAK,OAAUA,EAAK,MAClCC,GAAQ,KAEE,GAATA,GAAoBH,GAAM,OAGjB,GAATG,GAAmBH,EAAK,IAMjC,OAAO,EAIP,OAAO,EAIT,SAAUI,GAAWV,GAEvB,GAAiB,MAAbA,GAAyC,iBAAbA,EAAuB,OAAO,EAK9D,GAAIA,EAAUpD,MAFG,wGAEgB,CAC7B,IACI+D,EADWX,EAAUjD,MAAM,KACR,GAGvB,GAAsB,IAAlB4D,EAAQ3sB,OAAc,OAAO,EACjC,IAAIssB,EAAKxd,SAAS6d,EAAQ1e,UAAU,EAAE,KAClCse,EAAKzd,SAAS6d,EAAQ1e,UAAU,EAAG,IACnCue,EAAK1d,SAAS6d,EAAQ1e,UAAU,EAAG,IAGvC,IAAU,GAANse,GAAWA,EAAK,IACZD,EAFS,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAEtCC,EAAK,GACrB,OAAO,EAGf,GAAU,GAANA,EAAS,CACT,IAAIE,GAAQ,EAIZ,OAHOD,EAAK,KAAMA,EAAK,OAAUA,EAAK,MAClCC,GAAQ,KAEE,GAATA,GAAoBH,GAAM,OAGjB,GAATG,GAAmBH,EAAK,IAMjC,OAAO,EAIP,OAAO,EAGT,SAAUM,GAAOZ,GAEnB,GAAiB,MAAbA,GAAyC,iBAAbA,EAAuB,OAAO,EAI9D,OAAsC,MAA/BA,EAAUpD,MAFA,mD,+rCC5JhB,ICLKiE,GDKCC,GAAb,WAQI,WAAYC,G,mGAA0B,SANtC,KAAAC,iBAAkC,GAO9BzvB,KAAKwvB,aAAeA,EACpBxvB,KAAK+rB,OAASJ,GAAMiB,uBAAqD,QAA9B,EAAA4C,EAAa7C,yBAAiB+C,WAAA,EAAAA,EAAE3D,Q,UAVnF,O,EAAA,G,EAAA,oBAaI,SAAM/wB,GACFgF,KAAKhF,OAASA,EACdgF,KAAKyvB,iBAAmB,GACxBzvB,KAAK6N,UAAY,GAEjB7S,EAAO20B,gBAAkB,IAAItD,GAAY,KAAM,CAAEne,OAAQ,EAAGD,KAAM,EAAGxL,OAAQ,GAAK,CAAEyL,OAAQ,EAAGD,KAAM,IAAQxL,OAAQ,IAErHzC,KAAKyvB,iBAAiBvtB,KAAKlH,EAAO20B,iBAPlB,WASM3vB,KAAKhF,OAAOihB,eATlB,IAShB,2BAAiD,KAAxC2T,EAAwC,QAEzCpR,EAAwBxe,KAAK6N,UAAUpL,OAEvCotB,EAAUD,EAAU/Q,IACxB,GAAe,MAAXgR,EAAJ,CAEA,OAAQA,EAAQpwB,MACZ,KAAKsF,EAAUkB,cACXjG,KAAK8vB,cAAcD,GACnB7vB,KAAKyvB,iBAAiBjsB,MACtB,MACJ,KAAKuB,EAAUmB,cACXlG,KAAK+vB,cAAcF,GACnB7vB,KAAKyvB,iBAAiBjsB,MACtB,MACJ,KAAKuB,EAAU0B,cACXzG,KAAKgwB,mBAAmBH,GACxB7vB,KAAKyvB,iBAAiBjsB,MACtB,MACJ,KAAKuB,EAAUsB,cACXrG,KAAKiwB,cAAcJ,GACnB7vB,KAAKyvB,iBAAiBjsB,MACtB,MACJ,KAAKuB,EAAUiB,cACXhG,KAAKkwB,cAAcL,GACnB7vB,KAAKyvB,iBAAiBjsB,MACtB,MACJ,KAAKuB,EAAUiC,YACXhH,KAAKmwB,iBAAiBN,GACtB7vB,KAAKyvB,iBAAiBjsB,MACtB,MACJ,KAAKuB,EAAUc,aACX7F,KAAKowB,kBAAkBP,GACvB7vB,KAAKyvB,iBAAiBjsB,MAO9BosB,EAAUhR,UAAYgR,EAAUhR,WAAa5e,KAAK6N,UAAUpL,OAAS+b,IAlDzD,8BAsDhBxjB,EAAOsT,OAAO,GAAKtO,KAAK6N,YAnEhC,uBAuEI,SAAUkC,GAA2F,IAA7EG,EAA6E,uDAApD,QAASV,EAA2C,uCAAnBkN,EAAmB,uCAEjG1c,KAAK6N,UAAU3L,KAAK,CAChB6N,KAAMA,EACNP,SAAUA,EACVkN,SAAUA,EACVvM,MAAOD,MA7EnB,mCAkFI,WACI,OAAOlQ,KAAKyvB,iBAAiBzvB,KAAKyvB,iBAAiBhtB,OAAS,KAnFpE,gCAsFI,SAAmBoT,EAA4BC,GACzB,MAAdA,IACAA,EAAa,CACT7H,KAAM,IACNC,OAAQ,EACRzL,OAAQ,IAGhB,IAAIic,EAAkB,IAAI2N,GAAYrsB,KAAKqwB,wBAAyBxa,EAAcC,GAElF,OADA9V,KAAKyvB,iBAAiBvtB,KAAKwc,GACpBA,IAhGf,2BAmGI,SAAc8G,GACV,IAAI8K,EAAqB,IAAI3E,GAAM,MAEnCnG,EAAWrF,YAAcngB,KAAKuwB,mBAAmB/K,EAAWhW,SAAUgW,EAAWtF,aAGjF,IAAIsQ,EAAwB,GAC5BxwB,KAAKywB,uBAAuBjL,EAAWS,SAAUuK,GACb,MAAhChL,EAAWgB,mBACW,IAAI6F,GAAYrsB,KAAKqwB,wBAAyB7K,EAAWgB,kBAAmBhB,EAAWoB,iBAC7F8J,yBAAyB1wB,KAAKwvB,aAAa7C,mBAV/B,WAcTnH,EAAWnC,YAdF,IAchC,2BAA8C,KAArCO,EAAqC,QAC1C,GAAIA,EAAWnkB,MAAQsF,EAAUuhB,WAAY,YACvBkK,GADuB,IACzC,2BAAgC,oBACHzM,SADG,IAC5B,2BAAkC,KAAzB7V,EAAyB,QAC1B5S,EAAY,IAAIyvB,GAAO7c,EAAOhJ,WAAYgJ,EAAOzO,KAAM6wB,GAAa,GAAO,EAAMpiB,EAAO6W,aAAc7W,EAAO4V,iBACjHwM,EAAYvM,QAAQ7hB,KAAK5G,IAHD,gCADS,mCAOtC,CACH0E,KAAK2wB,YAAY/M,EAAWkE,MAC5B,IAAI8I,EAAa,IAAI7F,GAAOnH,EAAW0B,MAAO1B,EAAWkE,KAAK+I,QAASP,GAAa,GAAO,EAAM,MAAM,GACvGA,EAAYvM,QAAQ7hB,KAAK0uB,GACJ,MAAjBA,EAAG1rB,YACHsgB,EAAWrF,YAAY2M,YAAY,CAC/B5nB,WAAY0rB,EAAG1rB,WACf6nB,gBAAiBnJ,EAAWkE,KAAKtY,SACjCwd,sBAAuB,GACvB9e,OAAQ0iB,MA/BQ,8BAsChC,GAA4B,MAAxBpL,EAAW/C,UAAmB,CAC9B,IAAIqO,EAAY9wB,KAAK2wB,YAAYnL,EAAW/C,WAC3B,MAAbqO,GAAoD,WAA/BA,EAAUC,mBAC/B/wB,KAAK8P,UAAU,iFAAkF,QAAS0V,EAAW/C,UAAUjT,UAOvI,OAAO8gB,IAnJf,8BAsJI,SAAiBtQ,GACbA,EAAKG,YAAcngB,KAAKuwB,mBAAmBvQ,EAAKxQ,SAAUwQ,EAAKE,aAC/DF,EAAKG,YAAYuQ,yBAAyB1wB,KAAKwvB,aAAa7C,mBAEhC,MAAxB3M,EAAKK,kBAEJL,EAAKwC,UAEO,MADDxC,EAAKG,YAAY6Q,UAAUhR,EAAKK,kBACzBrgB,KAAK8P,UAAU,eAAiBkQ,EAAKK,gBAAkB,sBAAuB,QAASL,EAAKM,4BA9J3H,2BAmKI,SAAcN,GAIV,GAHAA,EAAKG,YAAcngB,KAAKuwB,mBAAmBvQ,EAAKxQ,SAAUwQ,EAAKE,aAC/DF,EAAKG,YAAYuQ,yBAAyB1wB,KAAKwvB,aAAa7C,mBAEhC,MAAxB3M,EAAKK,gBAAT,CAEA,IAAIgF,EAAQrF,EAAKG,YAAY6Q,UAAUhR,EAAKK,iBAU5C,GATa,MAATgF,GAAerlB,KAAK8P,UAAU,eAAiBkQ,EAAKK,gBAAkB,sBAAuB,QAASL,EAAKM,yBASzF,MAAlBN,EAAKyC,UAAmB,CACxB,IAAIwO,EAAmBjxB,KAAKuwB,mBAAmBvQ,EAAK0C,eAAgB1C,EAAK2C,cAC5D,MAAT0C,GAAe4L,EAAiBpE,kBAAkBxH,GACtDrlB,KAAK2wB,YAAY3Q,EAAKyC,WACtBziB,KAAKyvB,iBAAiBjsB,UAvLlC,+BA+LI,SAAkBwc,GAId,GAHAA,EAAKG,YAAcngB,KAAKuwB,mBAAmBvQ,EAAKxQ,SAAUwQ,EAAKE,aAC/DF,EAAKG,YAAYuQ,yBAAyB1wB,KAAKwvB,aAAa7C,mBAEhC,MAAxB3M,EAAKK,gBAAT,CAIA,IAAIgF,EAAQrF,EAAKG,YAAY6Q,UAAUhR,EAAKK,iBAa5C,OAZa,MAATgF,GACArlB,KAAK8P,UAAU,eAAiBkQ,EAAKK,gBAAkB,sBAAuB,QAASL,EAAKM,yBAItE,MAAtBN,EAAKc,eAEY,MADLuE,EAAMtB,QAAQmN,MAAK,SAAA51B,GAAC,OAAIA,EAAE4J,WAAWsT,qBAAuBwH,EAAKc,cAActI,wBAEvFxY,KAAK8P,UAAU,eAAiBkQ,EAAKK,gBAAkB,wCAA0CL,EAAKc,cAAe,QAASd,EAAKe,mBAInIf,EAAKI,MACT,IAAK,aAED,MACJ,IAAK,YACD,IAAIwD,EAAa5D,EAAKuC,UACtB,GAAkB,MAAdqB,EAAoB,MACxB,GAAiC,MAA7BA,EAAWiB,gBAAiD,MAAvBjB,EAAW/K,SAAkB,CAClE,IAAI0I,EAAMqC,EAAWiB,eACjBkH,EAAS/rB,KAAKqwB,wBAAwB9C,WAAWhM,EAAIG,iBACzD,GAAqB,GAAjBqK,EAAOtpB,OAAa,CACpB,IAAI4iB,EAAQ0G,EAAO,GAAG1G,MAClBnX,EAASmX,EAAMtB,QAAQmN,MAAK,SAAA51B,GAAC,OAAIA,EAAE4J,YAAcqc,EAAII,oBAC3C,MAAVzT,GAAiC,MAAfA,EAAOzO,OACpByO,EAAO8c,cACRhrB,KAAK8P,UAAU,4BAA8ByR,EAAIG,gBAAkB,IAAMH,EAAII,iBAAmB,6BAA8B,UAAWiC,EAAWhC,oBAEnJ1T,EAAOzO,KAAKwlB,UAAUrB,EAAW/K,WAClC7Y,KAAK8P,UAAU,gBAAkB8T,EAAW/K,SAAS6L,WAAa,eAAiBd,EAAW1e,WAC1F,8BAAgCgJ,EAAOzO,KAAKilB,WAAa,8BAAgCW,EAAMngB,WAAa,IAC5GgJ,EAAOhJ,WAAa,uBAAwB,QAAS0e,EAAWhC,2BAxOpG,2BAyPI,SAAc5B,GAAgB,WAI1B,GAHAA,EAAKG,YAAcngB,KAAKuwB,mBAAmBvQ,EAAKxQ,SAAUwQ,EAAKE,aAC/DF,EAAKG,YAAYuQ,yBAAyB1wB,KAAKwvB,aAAa7C,mBAEhC,MAAxB3M,EAAKK,gBAAT,CAIA,IAAIgF,EAAQrF,EAAKG,YAAY6Q,UAAUhR,EAAKK,iBAC/B,MAATgF,GAAerlB,KAAK8P,UAAU,eAAiBkQ,EAAKK,gBAAkB,sBAAuB,QAASL,EAAKM,yBAE/G,IAX0B,eAWjBrlB,GACL,IAAIse,EAAKyG,EAAK6C,kBAAkB5nB,GAC5Bk2B,EAAQnR,EAAK8C,0BAA0B7nB,GACvCiB,EAAQ8jB,EAAK5f,OAAOnF,GAExB,OAAU,MAANse,EAAY,YAGF,MAFD8L,EAAMtB,QAAQmN,MAAK,SAAA51B,GAAC,OAAIA,EAAE4J,YAAcqU,MAGjD,EAAKzJ,UAAUyJ,EAAK,iDAAmDyG,EAAKK,gBAAkB,IAAK,QAAS8Q,GAGnG,MAATj1B,EAAe,YACD,EAAKq0B,mBAAmBvQ,EAAK+C,cAAc9nB,GAAI+kB,EAAKgD,YAAY/nB,IACtE4xB,kBAAkBxH,GAC9B,EAAKsL,YAAYz0B,QACjB,EAAKuzB,iBAAiBjsB,SAhBjBvI,EAAI,EAAGA,EAAI+kB,EAAK6C,kBAAkBpgB,OAAQxH,IAAK,EAA/CA,GAoBkB,MAAvB+kB,EAAK0C,gBACa1iB,KAAKuwB,mBAAmBvQ,EAAK0C,eAAgB1C,EAAK2C,cACxDkK,kBAAkBxH,GAGZ,MAAlBrF,EAAKyC,WACLziB,KAAK2wB,YAAY3Q,EAAKyC,WAE1BziB,KAAKyvB,iBAAiBjsB,SAhS9B,gCAsSI,SAAmB4tB,GAAgC,WAE/CA,EAAgBjR,YAAcngB,KAAKuwB,mBAAmBa,EAAgB5hB,SAAU4hB,EAAgBlR,aAChGkR,EAAgBjR,YAAYuQ,yBAAyB1wB,KAAKwvB,aAAa7C,mBAEvE,IAAI0E,EAAmB,CACnBnsB,WAAYksB,EAAgBlsB,WAC5B6e,QAAS,KACT8H,KAAM,GAGVwF,EAAUtN,QAAUqN,EAAgB/N,WAAWxL,KAAI,SAAAvc,GAC/C,MAAO,CACH4J,WAAY5J,EAAE4J,WACd+lB,YAAY,EACZD,aAAc1vB,EAAEuoB,UAChBC,gBAAiBxoB,EAAEwoB,gBACnBG,SAAS,EACTkI,WAAY,KACZ9G,MAAOgM,EACP5xB,KAAMnE,EAAEud,SACRkM,aAAczpB,EAAEypB,iBAIxBqM,EAAgBjR,YAAY0M,kBAAkBwE,GAzBC,WA2BxBD,EAAgB/N,YA3BQ,yBA2BtCO,EA3BsC,QAgC3C,GAJIwN,EAAgB/N,WAAWmK,QAAO,SAAAlyB,GAAC,OAAIA,EAAE4J,WAAWsT,qBAAuBoL,EAAW1e,WAAWsT,uBAAqB/V,OAAS,GAC/H,EAAKqN,UAAU,yBAA2B8T,EAAW1e,WAAa,+DAAgE,QAAS0e,EAAWpU,UAGzH,MAA7BoU,EAAWiB,gBAAiD,MAAvBjB,EAAW/K,SAAkB,CAClE,IAAI0I,EAAMqC,EAAWiB,eACjBkH,EAAS,EAAKsE,wBAAwB9C,WAAWhM,EAAIG,iBACzD,GAAqB,GAAjBqK,EAAOtpB,OAAa,CACpB,IAAI4iB,EAAQ0G,EAAO,GAAG1G,MAClBnX,EAASmX,EAAMtB,QAAQmN,MAAK,SAAA51B,GAAC,OAAIA,EAAE4J,YAAcqc,EAAII,oBAC3C,MAAVzT,GAAiC,MAAfA,EAAOzO,OACpByO,EAAO8c,cACR,EAAKlb,UAAU,4BAA8ByR,EAAIG,gBAAkB,IAAMH,EAAII,iBAAmB,6BAA8B,UAAWiC,EAAWhC,oBAEnJ1T,EAAOzO,KAAKwlB,UAAUrB,EAAW/K,WAClC,EAAK/I,UAAU,gBAAkB8T,EAAW/K,SAAS6L,WAAa,eAAiBd,EAAW1e,WAC1F,8BAAgCgJ,EAAOzO,KAAKilB,WAAa,8BAAgCW,EAAMngB,WAAa,IAC5GgJ,EAAOhJ,WAAa,uBAAwB,QAAS0e,EAAWhC,wBAlBxF,2BAAmD,IA3BJ,yCAqD/BwP,EAAgB7N,oBArDe,yBAqDtChC,EArDsC,QAuDvCqC,EAAawN,EAAgB/N,WAAW6N,MAAK,SAAAI,GAAE,OAAIA,EAAGpsB,YAAcqc,EAAIrT,UAC5E,GAAkB,MAAd0V,EAAoB,iBAExB,IAAImI,EAAS,EAAKsE,wBAAwB9C,WAAWhM,EAAIG,iBACzD,GAAqB,GAAjBqK,EAAOtpB,OAAa,CACpB,IAAI4iB,EAAQ0G,EAAO,GAAG1G,MAClBnX,EAASmX,EAAMtB,QAAQmN,MAAK,SAAA51B,GAAC,OAAIA,EAAE4J,YAAcqc,EAAII,oBAC3C,MAAVzT,GAAiC,MAAfA,EAAOzO,OACpByO,EAAO8c,cACR,EAAKlb,UAAU,4BAA8ByR,EAAIG,gBAAkB,IAAMH,EAAII,iBAAmB,6BAA8B,UAAWJ,EAAIK,oBAE5I1T,EAAOzO,KAAKwlB,UAAUrB,EAAW/K,WAClC,EAAK/I,UAAU,gBAAkB8T,EAAW/K,SAAS6L,WAAa,eAAiBd,EAAW1e,WAC1F,8BAAgCgJ,EAAOzO,KAAKilB,WAAa,8BAAgCW,EAAMngB,WAAa,IAC5GgJ,EAAOhJ,WAAa,uBAAwB,QAASqc,EAAIK,uBAhB7E,2BAAoD,IArDL,iCAtSvD,oCAqXI,SAAuB2P,EAA8Bf,GACjD,GAAe,MAAXe,EAEJ,OAAQA,EAAQ9xB,MACZ,KAAKsF,EAAUsgB,MACX,IAAImM,EAAYxxB,KAAK+rB,OAAOyB,QAAO,SAAArxB,GAAC,OAAIA,EAAE+I,WAAW0M,eAAiB2f,EAAQrsB,WAAW0M,iBACzF,GAAwB,GAApB4f,EAAU/uB,OACVzC,KAAK8P,UAAUyhB,EAAQrsB,WAAa,qCAAsC,QAASqsB,EAAQ/hB,eACxF,GAAIgiB,EAAU/uB,OAAS,EAC1BzC,KAAK8P,UAAU,kBAAoByhB,EAAQrsB,WAAa,6BAA8B,QAASqsB,EAAQ/hB,cACpG,CACH,IAAI6V,EAAemM,EAAU,GAC7BhB,EAAatuB,KAAKmjB,GAClBrlB,KAAKyxB,0BAA0BpM,EAAOkM,EAAQ/hB,SAAU+hB,EAAQjM,OAGpE,MAEJ,KAAKvgB,EAAU4D,YACX3I,KAAKywB,uBAAuBc,EAAQjJ,aAAckI,GAClDxwB,KAAKywB,uBAAuBc,EAAQhJ,cAAeiI,GACnD,MAEJ,KAAKzrB,EAAU2jB,SACX6I,EAAQlM,MAAQrlB,KAAK8vB,cAAcyB,EAAQ5I,OAC3C6H,EAAatuB,KAAKqvB,EAAQlM,OACL,MAAjBkM,EAAQjM,QACRiM,EAAQlM,MAAMngB,WAAaqsB,EAAQjM,MACnCtlB,KAAKyxB,0BAA0BF,EAAQlM,MAAOkM,EAAQ/hB,cAjZ1E,uCA0ZI,SAA0B6V,EAAc7V,EAAwB8V,GAC5D,IAAInF,EAAcngB,KAAKqwB,wBACvBlQ,EAAY2M,YAAY,CACpB5nB,WAAqB,MAATogB,EAAgBD,EAAMngB,WAAW0M,cAAgB0T,EAAM1T,cACnEmb,gBAAiBvd,EACjB6V,MAAOA,EACP2H,sBAAuB,KAN+C,WAQvD3H,EAAMtB,SARiD,IAQ1E,2BAAkC,KAAzB7V,EAAyB,QAC9BiS,EAAY2M,YAAY,CACpB5nB,WAAYgJ,EAAOhJ,WAAW0M,cAC9Bmb,gBAAiB,KACjB7e,OAAQA,EACRwjB,WAAYpM,EACZ0H,sBAAuB,MAd2C,iCA1ZlF,yBA6aI,SAAYhN,GACR,GAAY,MAARA,EAAc,OAAO,KAEzB,OAAQA,EAAKvgB,MACT,KAAKsF,EAAUukB,SACX,GAAI,CAACvkB,EAAUsE,UAAWtE,EAAUuE,cAAc+F,QAAQ2Q,EAAK9H,WAAa,EACxE,OAAOlY,KAAK2xB,aAAa3R,GAG7B,IAAI4R,EAAW5xB,KAAK2wB,YAAY3Q,EAAKsI,cACjCuJ,EAAY7xB,KAAK2wB,YAAY3Q,EAAKuI,eACtC,GAAgB,MAAZqJ,GAAiC,MAAbC,EAAmB,CACvC,IAAIpa,EAAama,EAASE,oBAAoB9R,EAAK9H,SAAU2Z,GAK7D,OAJkB,MAAdpa,GACAzX,KAAK8P,UAAU,gBAAkB7K,EAAkB+a,EAAK9H,UAAY,2BAA6B0Z,EAASlN,WAAa,QAAUmN,EAAUnN,WAAa,oBAAqB,QAAS1E,EAAKxQ,UAE/LwQ,EAAK6Q,QAAUpZ,EACRA,EAEP,OAAO,KAGf,KAAK1S,EAAUykB,QACX,IAAIuI,EAAc/xB,KAAK2wB,YAAY3Q,EAAKyJ,SACxC,GAAmB,MAAfsI,EAAqB,CACrB,IAAIC,EAAcD,EAAY7Y,mBAAmB8G,EAAK9H,UAKtD,OAJmB,MAAf8Z,GACAhyB,KAAK8P,UAAU,gBAAkB7K,EAAkB+a,EAAK9H,UAAY,0CAA4C6Z,EAAYrN,WAAa,oBAAqB,QAAS1E,EAAKxQ,UAEhLwQ,EAAK6Q,QAAUmB,EACRA,EAEP,OAAO,KAGf,KAAKjtB,EAAUilB,WACX,OAAOhqB,KAAKiyB,kBAAkBjS,GAIlC,KAAKjb,EAAUghB,aAEX,OADA/F,EAAK6Q,QAAU/Z,EAAYkO,iBAAiBhF,EAAK6F,cAC1C7F,EAAK6Q,QAEhB,KAAK9rB,EAAUG,WACX,OAAOlF,KAAKkyB,kBAAkBlS,GAElC,KAAKjb,EAAU8F,IACX,OAAO7K,KAAKmyB,WAAWnS,GAE3B,KAAKjb,EAAUkB,cACX,IAAImsB,EAAcpyB,KAAK8vB,cAAc9P,GACrC,OAAkC,GAA9BoS,EAAYrO,QAAQthB,QACpBzC,KAAK8P,UAAU,2FAA4F,QAASkQ,EAAKxQ,UAClH,MAEJ4iB,EAAYrO,QAAQ,GAAGtkB,KAElC,KAAKsF,EAAUwF,aAEX,OADAyV,EAAK6Q,QAAU7wB,KAAK2wB,YAAY3Q,EAAK6K,oBAC9B7K,EAAK6Q,QAEhB,KAAK9rB,EAAUuhB,WACXtmB,KAAK8P,UAAU,kDAAmD,QAASkQ,EAAKxQ,UAChF,MACJ,KAAKzK,EAAUwlB,KACXvqB,KAAK8P,UAAU,uCAAwC,QAASkQ,EAAKxQ,aA/erF,wBA0fI,SAAWwQ,GACP,IAAIqS,EAAeryB,KAAKqwB,wBAAwB9C,WAAWvN,EAAKqK,eAAenlB,YAC/E,GAA2B,GAAvBmtB,EAAa5vB,OAEb,OADAzC,KAAK8P,UAAU,eAAiBkQ,EAAKqK,eAAenlB,WAAa,+BAAgC,QAAS8a,EAAKqK,eAAe7a,UACvH,KAEX,GAAI6iB,EAAa5vB,OAAS,EAEtB,OADAzC,KAAK8P,UAAU,0BAA4BkQ,EAAKqK,eAAenlB,WAAa,wBAAyB,QAAS8a,EAAKqK,eAAe7a,UAC3H,KAEX,IAEIuU,EAFQsO,EAAa,GAAGhN,MAERtB,QAAQyJ,QAAO,SAAAlyB,GAAC,OAAIA,EAAE4J,WAAW0M,eAAiBoO,EAAKsK,gBAAgBplB,WAAW0M,iBAEtG,GAAsB,GAAlBmS,EAAQthB,OAAZ,CAKA,KAAIshB,EAAQthB,OAAS,GAArB,CAKA,IAAIyL,EAAS6V,EAAQ,GAErB,OADA/D,EAAK6Q,QAAU3iB,EAAOzO,KACfyO,EAAOzO,KANVO,KAAK8P,UAAU,eAAiBkQ,EAAKqK,eAAenlB,WAAa,2CAA6C8a,EAAKsK,gBAAgBplB,WAAa,IAAK,QAAS8a,EAAKsK,gBAAgB9a,eALnLxP,KAAK8P,UAAU,eAAiBkQ,EAAKqK,eAAenlB,WAAa,wCAA0C8a,EAAKsK,gBAAgBplB,WAAa,IAAK,QAAS8a,EAAKsK,gBAAgB9a,YAzgB5L,+BAwhBI,SAAkBwQ,GACd,IAAIwM,EAAUxsB,KAAKqwB,wBAAwBiC,WAAWtS,EAAK9a,YAC3D,GAAsB,GAAlBsnB,EAAQ/pB,OAER,OADAzC,KAAK8P,UAAU,kBAAoBkQ,EAAK9a,WAAa,uCAAwC,QAAS8a,EAAKxQ,UACpG,KAEX,GAAIgd,EAAQ/pB,OAAS,EAEjB,OADAzC,KAAK8P,UAAU,kBAAoBkQ,EAAK9a,WAAa,wBAAyB,QAAS8a,EAAKxQ,UACrF,KAGX,IAAIyd,EAAST,EAAQ,GAErB,OADAxM,EAAK6Q,QAAU5D,EAAO/e,OAAOzO,KACtBwtB,EAAO/e,OAAOzO,OAriB7B,+BAwiBI,SAAkBugB,GAEd,IACI+N,EADcD,GAAeyE,cACPC,WAAWxS,EAAK9a,YAG1C,GADA6oB,EAAUA,EAAQP,QAAO,SAAAnyB,GAAC,OAAIA,EAAE0d,WAAWtW,QAAUud,EAAKiK,SAASxnB,UACvC,GAAxBud,EAAKiK,SAASxnB,QAAeud,EAAKiK,SAAS,GAAGxqB,MAAQsF,EAAUuhB,WAGhE,OAFAyH,EAAUA,EAAQP,QAAO,SAAAnyB,GAAC,OAAIA,EAAEwyB,wBAChC7N,EAAK6Q,QAAU9C,EAAQ,GAAGH,WACnB5N,EAAK6Q,QAGhB,GAAsB,GAAlB9C,EAAQtrB,OAER,OADAzC,KAAK8P,UAAU,sDAAwDkQ,EAAK9a,WAAa,KAAM,QAAS8a,EAAKxQ,UACtG,KAduB,WAiBdwQ,EAAKiK,UAjBS,IAiBlC,2BAAmC,KAA1BR,EAA0B,QAC/B,GAAiC,MAA7BzpB,KAAK2wB,YAAYlH,GAEjB,OADAzJ,EAAK6Q,QAAU9C,EAAQ,GAAGH,WACnB5N,EAAK6Q,SApBc,yCAwBf9C,GAxBe,IAwBlC,2BAA4B,CAExB,IAFwB,IAAnBpvB,EAAmB,QACpB8zB,GAAQ,EACHx3B,EAAI,EAAGA,EAAI0D,EAAOoa,WAAWtW,OAAQxH,IAAK,CAC/C,IAAIy3B,EAAkB/zB,EAAOoa,WAAW9d,GAExC,IADc+kB,EAAKiK,SAAShvB,GACf41B,QAAQ5L,UAAUyN,EAAgBjzB,MAAO,CAClDgzB,GAAQ,EACR,OAGR,GAAIA,EAEA,OADAzS,EAAK6Q,QAAUlyB,EAAOivB,WACf5N,EAAK6Q,SApCc,8BAyClC,OADA7wB,KAAK8P,UAAU,sDAAwDkQ,EAAK9a,WAAa,KAAM,QAAS8a,EAAKxQ,UACtG,OAjlBf,0BAqlBI,SAAawQ,GAET,GAAyB,MAArBA,EAAKsI,cAA8C,MAAtBtI,EAAKuI,cAAuB,OAAO,KAEpE,IAAIoK,EAAiB1tB,EAAkB+a,EAAK9H,UAE5ClY,KAAK2wB,YAAY3Q,EAAKsI,cACtB,IAAIsK,EAAW5S,EAAKsI,aAAauI,QACjC,GAAgB,MAAZ+B,EACA,GAAI5S,EAAKuI,cAAc9oB,MAAQsF,EAAUkB,cAAe,CACpD,IAAIuf,EAAaxF,EAAKuI,cACc,GAAhC/C,EAAWnC,WAAW5gB,QACtBzC,KAAK8P,UAAU,6BAA+B6iB,EAAiB,mGAAoG,QAASnN,EAAWhW,UAE3LxP,KAAK8vB,cAActK,GACnB,IAAIqN,EAAQrN,EAAWnC,WAAW,GAAGyE,KAAK+I,QACrCgC,EAAM5N,UAAU2N,IACjB5yB,KAAK8P,UAAU,wDAA0D+iB,EAAMnO,WAAa,uCAAyCkO,EAASlO,WAAa,uBAAwB,QAASc,EAAWhW,eAExM,GAAIwQ,EAAKuI,cAAc9oB,MAAQsF,EAAUwlB,KAAM,CAClD,IADkD,OACnCvK,EAAKuI,cACSiC,UAFqB,IAElD,2BAAuC,KAA9BsI,EAA8B,QAC/BC,EAAcjc,EAAYkO,iBAAiB8N,EAAQjN,cACvDiN,EAAQjC,QAAUkC,EACbA,EAAY9N,UAAU2N,IACvB5yB,KAAK8P,UAAU,mCAAqCgjB,EAAQhN,SAAW,QAAUiN,EAAYrO,WAAa,oCAAsCkO,EAASlO,WAAa,sDAAwDiO,EAAiB,wBAAyB,QAASG,EAAQtjB,WAN/O,oCAUlDxP,KAAK8P,UAAU,mGAAoG,QAASkQ,EAAKuI,cAAc/Y,UAKvJ,OAAOsH,EAAY6N,YAAY,aAvnBvC,2BA0nBI,SAAckL,GAAmB,WAEzBxK,EAAe,KACflF,EAAcngB,KAAKuwB,mBAAmBV,EAAQrgB,SAAUqgB,EAAQ3P,aAC/C,MAAjB2P,EAAQxK,QACRwK,EAAQxK,MAAMA,MAAQrlB,KAAK+rB,OAAOmF,MAAK,SAAA/0B,GAAC,OAAIA,EAAE+I,WAAW0M,eAAiBie,EAAQxK,MAAMngB,WAAWsT,uBACxE,MAAvBqX,EAAQxK,MAAMA,MACdrlB,KAAK8P,UAAU,eAAiB+f,EAAQxK,MAAMngB,WAAa,kBAAmB,QAAS2qB,EAAQxK,MAAM7V,WAErG6V,EAAQwK,EAAQxK,MAAMA,MACtBlF,EAAY0M,kBAAkBxH,KAItC,IAAI2N,EAAoBnD,EAAQ3P,YACF,MAA1B2P,EAAQ1K,iBAAwB6N,EAAoBnD,EAAQ1K,gBACjC,MAA3B0K,EAAQzK,kBAAyB4N,EAAoBnD,EAAQzK,iBAEjEplB,KAAKhF,OAAOkhB,kBAAkB2T,EAAQrgB,SAAUwjB,GAAmB,GAAO,EAAM,CAAC,OAAQ,WAE5E,MAAT3N,GACArlB,KAAKhF,OAAOkhB,kBAAkB8W,EAA6C,MAA1BnD,EAAQ1K,eAAyB0K,EAAQ3P,YAAc2P,EAAQ1K,gBAAgB,GAAM,EAAO,CAAC,WAG3HnlB,KAAKuwB,mBAAmBV,EAAQrgB,SAAUwjB,GAChDtC,yBAAyB1wB,KAAKwvB,aAAa7C,mBAE5D,IAAI5I,EAAoB,GAExB,GAAiC,GAA7B8L,EAAQxM,WAAW5gB,OACN,MAAT4iB,IACAtB,EAAUsB,EAAMtB,cAGpB,GAAa,MAATsB,EAAe,YACQwK,EAAQxM,YADhB,yBACNO,EADM,QAEP1V,EAASmX,EAAMtB,QAAQmN,MAAK,SAAA51B,GAAC,OAAIA,EAAE4J,WAAW0M,eAAiBgS,EAAW1e,WAAW0M,iBAC3E,MAAV1D,EACA,EAAK4B,UAAU,eAAiBuV,EAAMngB,WAAa,4CAA8C0e,EAAW1e,WAAa,IAAK,QAAS0e,EAAWpU,UAElJuU,EAAQ7hB,KAAKgM,IALrB,2BAA2C,IAD5B,+BAYvB,GAAI6V,EAAQthB,OAAS,EACjB,GAAsB,MAAlBotB,EAAQpK,OAAgB,CACxB,IAAIJ,EAAQrlB,KAAK8vB,cAAcD,EAAQpK,QACvC,GAAqB,OAAlB,aAAK,EAAL,EAAO1B,SACN,GAAGA,EAAQthB,QAAU4iB,EAAMtB,QAAQthB,OAC/BzC,KAAK8P,UAAU,iCAAmCiU,EAAQthB,OAAS,0DAA4D4iB,EAAMtB,QAAQthB,OAAS,IAAK,QAASotB,EAAQrgB,eAE5K,IAAI,IAAIvU,EAAI,EAAGA,EAAI8oB,EAAQthB,OAAQxH,IAAI,CACnC,IAAIg4B,EAAelP,EAAQ9oB,GACvBi4B,EAAe7N,EAAMtB,QAAQ9oB,GACT,MAArBg4B,EAAaxzB,MAAqC,MAArByzB,EAAazzB,OACrCyzB,EAAazzB,KAAKwlB,UAAUgO,EAAaxzB,OACzCO,KAAK8P,UAAU,gBAAkBojB,EAAazzB,KAAKilB,WAAa,SAC7DzpB,EAAE,GAAK,2DACVg4B,EAAaxzB,KAAKilB,WAAa,sEAAuE,QAASmL,EAAQrgB,gBAQxI,YAEmBqgB,EAAQzvB,QAF3B,IAEH,2BAAsC,KAA7B+yB,EAA6B,QAClC,GAAIA,EAAU1wB,QAAUshB,EAAQthB,QAAU0wB,EAAU1wB,OAAS,EACzDzC,KAAK8P,UAAU,mBAAqBiU,EAAQthB,OAAS,+BAAiC0wB,EAAU1wB,OAAS,0BAA2B,QAAS0wB,EAAU,GAAG3jB,eAE1J,IAAK,IAAIvU,EAAI,EAAGA,EAAIk4B,EAAU1wB,OAAQxH,IAAK,CACvC,IAAIiB,EAAQi3B,EAAUl4B,GAClBiT,EAAS6V,EAAQ9oB,GACrBiB,EAAM20B,QAAU/Z,EAAYkO,iBAAiB9oB,EAAM2pB,cAGnD,IAAIuN,EAAWllB,EAAOzO,KAAKilB,WAAWlM,oBACtC,GAAItc,EAAM2pB,cAAgB9gB,EAAUuD,YAC3B4F,EAAO+c,aAAc/c,EAAO+V,SAC7BjkB,KAAK8P,UAAU,cAAgB5B,EAAOhJ,WAAa,oEAAqE,QAAShJ,EAAMsT,eAExI,GAAKtT,EAAM20B,QAAQ5L,UAAU/W,EAAOzO,OAOpC,GAAgB,QAAZ2zB,GACP,IAAK5E,GAAOtyB,EAAM4pB,UAAW,CACzB,IAAI3kB,EAAK,WAAejF,EAAM4pB,SAArB,0GACT9lB,KAAK8P,UAAU3O,EAAO,QAASjF,EAAMsT,gBAEtC,GAAgB,YAAZ4jB,GAAsC,aAAZA,GACjC,IAAKjE,GAAWjzB,EAAM4pB,UAAW,CAC7B,IAAI3kB,EAAK,WAAejF,EAAM4pB,SAArB,sBAA2CsN,EAA3C,6GACTpzB,KAAK8P,UAAU3O,EAAO,QAASjF,EAAMsT,gBAEtC,GAAgB,QAAZ4jB,IACF/D,GAAOnzB,EAAM4pB,UAAW,CACzB,IAAI3kB,EAAK,WAAejF,EAAM4pB,SAArB,sBAA2CsN,EAA3C,uFACTpzB,KAAK8P,UAAU3O,EAAO,QAASjF,EAAMsT,eApBK,CAC9C,IAAIrO,EAAgB,YAAcjF,EAAM4pB,SAAW,iBAAmB5pB,EAAM20B,QAAQnM,WAAa,+BAAiCxW,EAAOzO,KAAKilB,WAAa,eAAiBxW,EAAOhJ,WAAa,uBAEhL,QAAZkuB,IAAoBjyB,GAAS,qFACjB,YAAZiyB,GAAsC,aAAZA,IAAyBjyB,GAAS,uGAEhEnB,KAAK8P,UAAU3O,EAAO,QAASjF,EAAMsT,aAvBlD,+BA+CXxP,KAAKyvB,iBAAiBjsB,W,gFA7uB9B,K,gsCCLA,SAAY8rB,GACRA,6BAAWA,qBAAOA,yDAAyBA,+BAD/C,CAAYA,QAAc,KAInB,IAAM+D,GAAb,WAMI,WAAoB9V,I,4FAAc,SAAd,KAAAA,OAJpB,KAAA+V,eAAiChE,GAAeiE,wB,UAFpD,O,EAAA,G,EAAA,sBASI,SAAQC,GAEJxzB,KAAKszB,eAAiBhE,GAAemE,UAErC,IAJ4B,EAIxBC,EAAKC,YAAYC,MAEjBC,EAAQ,IAAI7mB,EANY,KASdwmB,EAAYM,YAAW,IATT,IAS5B,2BAA6C,KAApCz4B,EAAoC,QACzCA,EAAE04B,KAAKC,OAAQ,EACf34B,EAAE44B,QAEF,IAAIC,EAAQL,EAAMrgB,IAAInY,EAAE84B,iCACxB94B,EAAEiT,OAAO,GAAK4lB,EAAM5lB,OACpBjT,EAAEuS,UAAYsmB,EAAM7lB,OACpBhT,EAAEyS,aAAeomB,EAAMpmB,aACpBzS,EAAE04B,KAAKv4B,MAAQwE,KAAKud,KAAK6W,2BAA2BL,KAAKv4B,MACzB,MAA5BwE,KAAKud,KAAK8W,gBAAwBr0B,KAAKud,KAAK8W,eAAeC,aAAaC,uBAAuBL,EAAMpmB,eAlBpF,8BAwB5B9N,KAAKud,KAAKC,oBAAoBgX,mBAE9B,IA1B4B,EA0BxBC,EAAiB,IAAI7Y,GA1BG,KA4Bd4X,EAAYM,YAAW,IA5BT,IA4B5B,2BAA6C,KAApCz4B,EAAoC,QACzCo5B,EAAOC,MAAMr5B,IA7BW,8BAiC5B,IAjC4B,EAiCxBm0B,EAAexvB,KAAKud,KAAKoX,kBACzBC,EAAiC,IAAIrF,GAAeC,GAlC5B,KAoCfgE,EAAYM,YAAW,IApCR,IAoC5B,2BAA2C,KAAnCz4B,EAAmC,QACvCu5B,EAAeC,MAAMx5B,IArCG,8BAwC5B,IAAIy5B,EAAKnB,YAAYC,MAAQF,EAGzBtW,EAAU,gBAFd0X,EAAKrjB,KAAK2H,MAAW,IAAL0b,GAAY,KAEQ,OAQpC,OANA90B,KAAKud,KAAKwX,sBAAsBC,gBAAkB5X,EAElDpd,KAAKud,KAAKC,oBAAoByX,iBAE9Bj1B,KAAKszB,eAAiBhE,GAAe4F,WAE9B,U,gFA5Df,K,64CC4CO,IAAMC,GAAb,WA2BI,WAAYpB,EAAmBxW,GAC3B,GADyC,WAAd,KAAAA,OAtB/B,KAAA6X,oBAAgC,GAIhC,KAAA9mB,OAAoB,CAAC,GAAI,GAAI,GAAI,IAUjC,KAAA+mB,oBAAgE,GAChE,KAAAC,oBAAgE,GAKhE,KAAAtZ,gBAAiD,IAAI5E,IAGrC,MAAR2c,GAA6B,MAAb/zB,KAAKud,KAAzB,CAEAvd,KAAK+zB,KAAOA,EAEZ,IAAIwB,EAAOxB,EAAKv4B,KAEZg6B,EAAaL,EAAOM,OAAOF,GACb,MAAdC,EACAA,EAAa,EAEbA,IAEJL,EAAOM,OAAOF,GAAQC,EAElBA,EAAa,IAAGD,GAAQ,KAAOC,EAAa,KAChDx1B,KAAKid,IAAMlL,OAAO2jB,IAAI5W,KAAK,CAAEyW,KAAMA,EAAMI,OAAQ,aACjD31B,KAAKmS,MAAQJ,OAAOqB,OAAOwiB,YAAY7B,EAAKhkB,KAAM,SAAU/P,KAAKid,KACjEjd,KAAKmS,MAAM0jB,cAAc,CAAEC,QAAS,IAEpC91B,KAAK+1B,mBAAqB/1B,KAAKmS,MAAM6jB,0BAErC,IAAIC,EAAOj2B,KAEXA,KAAKmS,MAAM+jB,oBAAmB,WAC1B,IAAIC,EAAYF,EAAK9jB,MAAM6jB,0BAQ3B,GANIG,GAAaF,EAAKF,qBAClBE,EAAKlC,KAAKC,OAAQ,EAClBiC,EAAKlC,KAAKqC,OAAQ,EAClBH,EAAKF,mBAAqBI,IAG1BF,EAAK1Y,KAAK8Y,aAAa,CACvB,IAAIC,EAAoB/Y,EACpB+Y,EAAMC,mBAAqBD,EAAME,KAAKC,IACA,MAAlCR,EAAKlC,KAAK2C,sBAAgCT,EAAKlC,KAAK4C,iCACpDV,EAAKlC,KAAK4C,+BAAgC,EAC1CV,EAAKlC,KAAK2C,qBAAuBT,EAAKlC,KAAKhkB,KAC3CkmB,EAAKlC,KAAKqC,OAAQ,EAClBE,EAAMM,eAAeC,YAAY,MAAM,GACvCP,EAAMQ,UAAUC,gBAAgBC,6BAChCV,EAAMW,gBAAgBC,qBAAqBjB,EAAKlC,OAGpDkC,EAAKlC,KAAK4C,+BAAgC,OAxE9D,4CA+EI,SAAkBQ,EAA4BC,EAA0BjT,EAA6BC,EACjGiT,EAAwB5Q,GAexB,IAfsF,IAAzClC,EAAyC,uDAAvB,GAAIC,EAAmB,uDAAF,GAChFpS,EAAqB,CACrBklB,WAAYH,EAAajpB,OACzBqpB,SAAUJ,EAAalpB,KACvBupB,SAAUJ,EAAWlpB,OACrBupB,OAAQL,EAAWnpB,KACnBkW,YAAoC,kBAAfA,GAA2BA,EAChDuT,mBAA2C,iBAAfvT,EAA0BA,EAAc,KACpEC,WAAYA,EACZiT,aAA8B,MAAhBA,EAAuB,KAAOA,EAAaxf,KAAI,SAAA7a,GAAC,OAAIA,EAAE26B,iBACpElR,SAAUA,EACVlC,QAASA,EACTC,OAAQA,GAGJvpB,EAAImX,EAAGmlB,SAAUt8B,GAAKmX,EAAGqlB,OAAQx8B,IAAI,CACzC,IAAI28B,EAAS53B,KAAKgc,gBAAgBlgB,IAAIb,GACzB,MAAV28B,IACCA,EAAS,GACT53B,KAAKgc,gBAAgBlE,IAAI7c,EAAG28B,IAEhCA,EAAO11B,KAAKkQ,MArGxB,yCAyGI,SAA4BylB,GAAqB,WACzCC,EAAW,CAAC7pB,KAAM4pB,EAAIhlB,gBAAiB3E,OAAQ2pB,EAAI9kB,aACnDglB,EAAS,CAAC9pB,KAAM4pB,EAAIjlB,cAAe1E,OAAQ2pB,EAAI/kB,WAEnD,OAAyB,MAAtB9S,KAAKic,cACG,GAGJjc,KAAKic,cAAcuR,QAAO,SAAAwK,GAC7B,QAAS,EAAKC,QAAQD,EAAKjZ,GAAI+Y,GAAY,GAAK,EAAKG,QAAQD,EAAKlZ,KAAMiZ,GAAU,QAlH9F,qBA4HI,SAAQ3nB,EAAmC8nB,GACvC,OAAG9nB,EAAEnC,KAAOiqB,EAAEjqB,KAAa,EACxBmC,EAAEnC,KAAOiqB,EAAEjqB,MAAc,EACzBmC,EAAElC,OAASgqB,EAAEhqB,OAAe,EAC5BkC,EAAElC,OAASgqB,EAAEhqB,QAAgB,EACzB,IAjIf,uCAsII,SAA0BnR,GAEtB,OAAOiD,KAAKic,cAAciV,MAAK,SAAAtB,GAC3B,QAAGA,EAAU9Q,KAAK7Q,KAAOlR,EAAEo7B,gBACxBvI,EAAU9Q,KAAK7Q,MAAQlR,EAAEo7B,YAAcvI,EAAU9Q,KAAK5Q,OAASnR,EAAEmR,YACjE0hB,EAAU7Q,GAAG9Q,KAAOlR,EAAEo7B,eACtBvI,EAAU7Q,GAAG9Q,MAAQlR,EAAEo7B,YAAcvI,EAAU7Q,GAAG7Q,OAASnR,EAAEmR,eA5I5E,+BAmJI,SAAkBD,EAAcC,GAC5B,IAAI0pB,EAAS53B,KAAKgc,gBAAgBlgB,IAAImS,GAEtC,GAAa,MAAV2pB,GAAmC,GAAjBA,EAAOn1B,OACxB,OAAO,KAGX,IAAIuL,EAAa,IAAPC,EAAcC,EAExB,GAAoB,IADpB0pB,EAASA,EAAOpK,QAAO,SAAApb,GAAE,OAAIpE,GAAqB,IAAdoE,EAAGmlB,SAAkBnlB,EAAGklB,YAActpB,GAAmB,IAAZoE,EAAGqlB,OAAgBrlB,EAAGolB,aAC7F/0B,OAAV,CAQA,IAHA,IAAI21B,EAAyBR,EAAO,GAChCS,EAAqD,KAAjCD,EAAOX,OAASW,EAAOb,WAAkBa,EAAOZ,SAAWY,EAAOd,YAElFr8B,EAAI,EAAGA,EAAI28B,EAAOn1B,OAAQxH,IAAI,CAClC,IAAImX,EAAKwlB,EAAO38B,GACZq9B,EAA0C,KAA3BlmB,EAAGqlB,OAASrlB,EAAGmlB,WAAoBnlB,EAAGolB,SAAWplB,EAAGklB,YAEpEgB,EAAcD,IACbD,EAAShmB,EACTimB,EAAkBC,GAK1B,OAAOF,KA/Kf,yBAuMI,SAAYG,GACR,IAAIxE,EAAO/zB,KAAK+zB,KAchB,MAbmB,CACf0C,GAAI1C,EAAK0C,GACTj7B,KAAMu4B,EAAKv4B,KACXuU,KAAMgkB,EAAKhkB,KACX2mB,qBAAsB3C,EAAK2C,qBAC3B8B,eAAgBzE,EAAKyE,eACrB7B,8BAA+B5C,EAAK4C,8BACpC8B,QAAS1E,EAAK0E,QACdC,aAAcH,EAAU9B,GACxBkC,aAAa,EACbC,UAAW,MAnNvB,uCA0NI,SAA0B3qB,EAAcC,GACpC,OAA4B,MAAxBlO,KAAK2vB,gBACE,OAGP1hB,EAAOjO,KAAK2vB,gBAAgB7Z,WAAW7H,MACvCA,GAAQjO,KAAK2vB,gBAAgB7Z,WAAW7H,MAAQC,EAASlO,KAAK2vB,gBAAgB7Z,WAAW5H,UAEzFD,EAAOjO,KAAK2vB,gBAAgB7Z,WAAW7H,KACvCC,EAASlO,KAAK2vB,gBAAgB7Z,WAAW5H,OAAS,GAG/ClO,KAAK2vB,gBAAgBrC,oBAAoBrf,EAAMC,MAtO9D,2BAyOI,WAEI,IAFS,EAEL2qB,EAAK,EAFA,KAGM74B,KAAKsO,QAHX,IAGT,2BAA4B,SACrB/N,SAAQ,SAAAY,GAAK,OAAI03B,GAAqB,SAAf13B,EAAMgP,MAAmB,EAAI,MAJlD,8BAQT,OAAO0oB,IAjPf,2CAoPI,WACI,OAAO74B,KAAKmS,MAAMgB,SAASpB,OAAOqB,OAAOC,oBAAoBC,IAAI,KArPzE,mCAyPI,SAAsB9D,EAAwBsjB,GAC1C,IAAIgG,EAAqC94B,KAAKq1B,oBAAoB7lB,EAASvB,MACvD,MAAhB6qB,IACAA,EAAe,GACf94B,KAAKq1B,oBAAoB7lB,EAASvB,MAAQ6qB,GAE9CA,EAAa52B,KAAK,CACdsN,SAAUA,EACVsjB,QAASA,MAjQrB,kCAqQI,SAAqB7kB,EAAcC,GAE/B,IAAI6qB,EAAkB/4B,KAAKq1B,oBAAoBpnB,GAC/C,GAAuB,MAAnB8qB,EAAyB,OAAO,KAEpC,IAL6C,EAKzCC,EAAwC,KALC,KAM/BD,GAN+B,IAM7C,2BAA+B,KAAtBh8B,EAAsB,QACvBmR,GAAUnR,EAAEyS,SAAStB,QAAUA,EAASnR,EAAEyS,SAAStB,OAASnR,EAAEyS,SAAS/M,QAEnE1F,EAAEyS,SAAS/M,OAAS,GACK,MAArBu2B,IACAA,EAAoBj8B,IAXS,8BAiB7C,OAA4B,MAArBi8B,EAA4B,KAAYA,EAAkBlG,UAtRzE,kBAyRI,WACI,IAAIz3B,EAAI,IAAI85B,EAAOn1B,KAAK+zB,KAAM/zB,KAAKud,MAOnC,OANAliB,EAAE8W,MAAQnS,KAAKmS,MACf9W,EAAEs0B,gBAAkB3vB,KAAK2vB,gBACzB3vB,KAAK2vB,gBAAkB,KAEvB3vB,KAAK+zB,KAAKC,OAAQ,EAEX34B,IAjSf,mBAoSI,WAEI2E,KAAKq1B,oBAAsB,GAEV,MAAbr1B,KAAK+zB,MAAgB/zB,KAAK+zB,KAAKC,QAE/Bh0B,KAAK4N,UAAY,KACjB5N,KAAKsO,OAAO,GAAK,GAGjBtO,KAAKsO,OAAO,GAAK,IAMrBtO,KAAKsO,OAAO,GAAK,GAGjBtO,KAAKsO,OAAO,GAAK,GACjBtO,KAAK2vB,gBAAkB,IAAItD,GAAY,KAAM,CAAEpe,KAAM,EAAGC,OAAQ,EAAGzL,OAAQ,GAAK,CAAEwL,KAAM,IAAQC,OAAQ,EAAGzL,OAAQ,IAEnHzC,KAAKs1B,oBAAsB,KA1TnC,uBA8TI,WAAS,WAEUt1B,KAAKsO,QAFf,IAEL,2BAA4B,CACxB,GADwB,QACjB4iB,MAAK,SAAA/vB,GAAK,MAAmB,SAAfA,EAAMgP,SACvB,OAAO,GAJV,8BAWL,OAAO,IAzUf,wCA6UI,WAEI,IAFsB,EAElBoa,EAAgB,GAFE,KAIPvqB,KAAKsO,QAJE,IAItB,2BAA4B,KAAnB2qB,EAAmB,QACxB1O,EAAOA,EAAK7R,OAAOugB,IALD,8BAQtB1O,EAAK2O,MAAK,SAAC9oB,EAAG8nB,GACV,OAAI9nB,EAAEZ,SAASvB,KAAOiqB,EAAE1oB,SAASvB,KACtB,EAEPiqB,EAAE1oB,SAASvB,KAAOmC,EAAEZ,SAASvB,MACrB,EAERmC,EAAEZ,SAAStB,QAAUgqB,EAAE1oB,SAAStB,OACzB,GAEH,KAGZ,IAAK,IAAIjT,EAAI,EAAGA,EAAIsvB,EAAK9nB,OAAS,EAAGxH,IAAK,CACtC,IAAIyX,EAAK6X,EAAKtvB,GACVk+B,EAAK5O,EAAKtvB,EAAI,GACdyX,EAAGlD,SAASvB,MAAQkrB,EAAG3pB,SAASvB,MAAQyE,EAAGlD,SAAStB,OAAS,GAAKirB,EAAG3pB,SAAStB,SAC5B,GAA9ClO,KAAKo5B,kBAAkB1mB,EAAGvC,MAAOgpB,EAAGhpB,OACpCoa,EAAKvX,OAAO/X,EAAI,EAAG,GAEnBsvB,EAAKvX,OAAO/X,EAAG,GAEnBA,KAIR,OAAOsvB,IA/Wf,+BAkXI,SAAkB8O,EAAoBC,GAClC,MAAc,SAAVD,EAA0B,EAChB,SAAVC,EAA0B,EAChB,WAAVD,EAA4B,EAClB,WAAVC,EAA4B,EACzB,KAvXf,8BAmLI,SAAuBC,EAAahc,GAgBhC,OAFgB,IAAI4X,EAZL,CACX35B,KAAM+9B,EAAE/9B,KACRuU,KAAMwpB,EAAExpB,KACR2mB,qBAAsB6C,EAAE7C,qBACxB8B,eAAgBe,EAAEf,eAClB7B,+BAA+B,EAC/B3C,OAAO,EACPoC,OAAO,EACPqC,QAASc,EAAEd,QACXhC,GAAI8C,EAAE9C,IAGqBlZ,OAjMvC,KAEW4X,gBAAuB,EAoBvBA,UAAqC,GAsWzC,IAAMqE,GAAb,WAOI,WAAoBjc,GAAc,WAAd,KAAAA,OALZ,KAAApiB,QAAoB,GACpB,KAAAs+B,UAAiC,IAAIriB,IAE7C,KAAA4c,OAAiB,EALrB,yCAUI,SAAe0F,GAAiB,WACT15B,KAAK7E,SADI,IAC5B,2BAAiC,KAAxBH,EAAwB,QAC7B,GAAIA,EAAO+4B,KAAK0C,IAAMiD,EAAW,OAAO1+B,GAFhB,8BAI5B,OAAO,OAdf,kBAiBI,WACI,IADA,EACI2+B,EAAkB,IAAIH,EAAYx5B,KAAKud,MAD3C,KAEcvd,KAAK7E,SAFnB,IAEA,2BAA4B,KAAnBE,EAAmB,QACxBs+B,EAAGC,UAAUv+B,EAAEw+B,SAHnB,8BAKA,OAAOF,IAtBf,8BAyBI,SAAiB5F,GAAU,WACT/zB,KAAK7E,SADI,IACvB,2BAA4B,KAAnBE,EAAmB,QACxB,GAAIA,EAAE04B,MAAQA,EACV,OAAO14B,GAHQ,8BAMvB,OAAO,OA/Bf,uBAkCI,WAAS,WACS2E,KAAK7E,SADd,IACL,2BAA4B,CACxB,GADwB,QAClByjB,YACF,OAAO,GAHV,8BAML,OAAO,IAxCf,4BA2CI,WACI,GAAI5e,KAAK7E,QAAQsH,OAAS,EAAG,YACVzC,KAAK7E,SADK,IACzB,2BAA6B,CACzB,OADyB,SADJ,+BAK7B,OAAO,OAjDf,qBAoDI,WAEI,GAAI6E,KAAKg0B,MAEL,OADAh0B,KAAKg0B,OAAQ,GACN,EAGX,IAPG,EAOCA,GAAQ,EAPT,KAQWh0B,KAAK7E,SARhB,IAQH,2BAA4B,CACxB,GADwB,QAClB44B,KAAKC,MAAO,CACdA,GAAQ,EACR,QAXL,8BAcH,OAAOA,IAlEf,wBAsEI,SAAW8F,EAA+BC,GACtC,IADiE,EAC7Dnc,EAAM,GADuD,KAEnD5d,KAAK7E,SAF8C,IAEjE,2BAA4B,KAAnBE,EAAmB,QACpBA,EAAE04B,KAAKv4B,MAAQu+B,GACfnc,EAAI1b,KAAK7G,IAJgD,8BAOjE,OAAOuiB,IA7Ef,uBAgFI,SAAU5iB,GACNgF,KAAK7E,QAAQ+G,KAAKlH,GAClBgF,KAAKy5B,UAAUz+B,EAAO+4B,KAAKv4B,MAAQR,IAlF3C,kCAqFI,SAAqB+4B,GAAU,WACb/zB,KAAK7E,SADQ,IAC3B,2BAA4B,KAAnBE,EAAmB,QACxB,GAAIA,EAAE04B,MAAQA,EAAM,CAChB/zB,KAAKg6B,aAAa3+B,GAClB,QAJmB,iCArFnC,0BA8FI,SAAaL,GAELgF,KAAK7E,QAAQkU,QAAQrU,GAAU,IAEnCgF,KAAK7E,QAAQ6X,OAAOhT,KAAK7E,QAAQkU,QAAQrU,GAAS,GAClDgF,KAAKy5B,UAAUz+B,EAAO+4B,KAAKv4B,WAAQ4F,EACnCpB,KAAKg0B,OAAQ,KApGrB,uBAuGI,SAAUiG,GACN,OAAOj6B,KAAKy5B,UAAUQ,OAxG9B,K,+rCCpaO,IAAMC,GAAb,WAQI,WAAoBC,EAA2C5c,I,4FAAc,SAAzD,KAAA4c,eAA2C,KAAA5c,OAN/D,KAAA6c,QAAuD,GAEvD,KAAAC,WAA+C,GAE/C,KAAAC,QAAiE,G,UANrE,O,EAAA,G,EAAA,mBAYW,WAEH,IAAIC,EAAuBv6B,KAAKm6B,aAEjB,MAAZI,IAAkBA,EAAWC,OAAOhkB,WAEvC,IAAIyf,EAAOj2B,KACXu6B,EAAS/R,GAAG,WAAW,SAAUiS,GACjB,MAATA,GACCxE,EAAKyE,oBAAoBD,QArBzC,qBA2BI,SAAQE,GACJ,IAAIC,EAAK56B,KAAKo6B,QAAQO,GACb,MAANC,GACCA,EAAGC,OAAOF,EAAkB,KAAM,MA9B9C,4BAmCW,SAAez1B,EAAoB5B,EAAgBu3B,GAA+D,IAA/C9qB,EAA+C,uDAAhC,GAAI+qB,EAA4B,uCACjHF,EAAkB,CAClBC,OAAQA,EACR31B,WAAYA,EACZ5B,KAAMA,EACNyM,KAAMA,EACNgrB,QAAQ,GAGZ/6B,KAAKo6B,QAAQl1B,GAAc01B,EAT0F,WAWtGt3B,GAXsG,IAWrH,2BAAoB,KAAZ9G,EAAY,QACyB,MAAtCwD,KAAKq6B,WAAW79B,EAAIoV,iBACnB5R,KAAKq6B,WAAW79B,EAAIoV,eAAiB,IAEzC5R,KAAKq6B,WAAW79B,EAAIoV,eAAe1P,KAAK04B,IAfyE,8BAkBrH,GAAa,MAAVE,EAAe,CACiB,MAA5B96B,KAAKs6B,QAAQp1B,KACZlF,KAAKs6B,QAAQp1B,GAAc,IAE/BlF,KAAKs6B,QAAQp1B,GAAYhD,KAAK44B,GAE9B,IAAI3+B,EAAI4T,EACLzM,EAAKb,OAAS,IACbtG,GAAK,KAAOmH,EAAK0V,KAAK,MAAQ,KAGlC8hB,EAAOE,KAAK,QAAS7+B,GAErB2+B,EAAOtS,GAAG,aAAa,WAChBoS,EAAGG,QACFF,EAAO31B,EAAY,KAAM,mBApE7C,sBA4EW,SAASy1B,GAEZ,IAAIC,EAAkB56B,KAAKo6B,QAAQO,GAEnC,OAAS,MAANC,GAEIA,EAAGG,SAlFlB,uBAsFW,SAAUJ,EAA0BI,GACvC,IAAIH,EAAkB56B,KAAKo6B,QAAQO,GAE1B,MAANC,IACCA,EAAGG,OAASA,GAGhB,IAAIT,EAAUt6B,KAAKs6B,QAAQK,GAC3B,GAAc,MAAXL,EAAgB,YACGA,GADH,IACf,2BAA0B,KAAlBQ,EAAkB,QACnBC,EACCD,EAAOG,SAAS,aAEhBH,EAAOI,YAAY,cALZ,kCA9F3B,iCA0GW,SAAoBT,GAEvB,GAAmD,SAAhDjkB,SAAS2kB,cAAcC,QAAQxpB,iBAI9B6oB,EAAMY,SAAW,IAAMZ,EAAMY,SAAW,IAA5C,CAIA,IAAI7+B,EAAc,GAEdi+B,EAAMa,UACN9+B,GAAO,SAGPi+B,EAAMc,WACN/+B,GAAO,UAGPi+B,EAAMe,SACNh/B,GAAO,QAGK,MAAbi+B,EAAMj+B,MACLA,GAAOi+B,EAAMj+B,IAAIoV,eAGrB,IAAI6pB,EAAgBz7B,KAAKq6B,WAAW79B,GAEpC,GAAoB,MAAjBi/B,EAAsB,YACEA,GADF,IACrB,2BAAqC,KAA7BC,EAA6B,QACjC,GAAIA,EAAYX,OAAQ,CACpBN,EAAMkB,kBACNlB,EAAMmB,iBACNF,EAAYb,OAAOa,EAAYx2B,WAAY,KAAM1I,GACjD,QANa,sC,gFAxIjC,K,whCCbM,SAAUq/B,GAAaC,EACzBC,EACAC,GAAuG,IAArDC,EAAqD,uDAAJ,KAE/FC,EAAeC,OAAOC,aAAe,UAAY,QAE7B,MAApBL,IACAA,EAAmBD,GAGvB,IAAIO,EAAS7B,OAAO,mEACpB6B,EAAOC,IAAI,CACPC,MAAOR,EAAiBO,IAAI,SAC5BE,OAAQT,EAAiBO,IAAI,UAC7BG,MAAOV,EAAiBO,IAAI,SAC5B9sB,SAAUusB,EAAiBO,IAAI,YAC/B,mBAAoBP,EAAiBO,IAAI,oBACzC,YAAaP,EAAiBO,IAAI,aAClC,cAAeP,EAAiBO,IAAI,eACpC,aAAc,eAElBD,EAAOK,IAAIZ,EAAgB/rB,QAC3BssB,EAAO7T,GAAG0T,EAAe,QAAQ,SAACzpB,GAAQA,EAAEkpB,qBAEtB,MAAlBM,GACmBI,EAAO,GAAIM,kBAAkBV,EAAepH,MAAOoH,EAAeW,KAGzFb,EAAiBc,MAAMR,GACvBN,EAAiBe,OACjBC,YAAW,WACPV,EAAOW,UACR,KAEHX,EAAO7T,GAAG,cAAc,SAACyU,GACrB,GAAc,SAAVA,EAAGzgC,KAA4B,UAAVygC,EAAGzgC,SAA5B,CACI6/B,EAAOa,IAAI,cACXb,EAAOa,IAAI,eACXb,EAAOc,SACPpB,EAAiBqB,OACjB,IAAIC,EAAWjP,GAAmBiO,EAAOK,OACzCV,EAAmBqB,OAK3BhB,EAAO7T,GAAG,eAAe,SAACyU,GACtBZ,EAAOa,IAAI,cACXb,EAAOa,IAAI,eACXb,EAAOc,SACPpB,EAAiBqB,OACjB,IAAIC,EAAWjP,GAAmBiO,EAAOK,OACzCV,EAAmBqB,MAcrB,SAAUC,GAAgBC,EAA0BC,EAAWC,GAEjE,IAF0E,EAEtEvB,EAAeC,OAAOC,aAAe,UAAY,QAEjDsB,EAAelD,OAAO,sCAEtBmD,EAAoC,KACpCC,EAAkC,KAPoC,KAS3DL,GAT2D,yBASjEM,EATiE,QAUlEC,EAAkBD,EAAGC,QACV,MAAXD,EAAGE,OACHD,EAAU,YAAH,OAAeD,EAAGE,KAAlB,iDAA+DF,EAAGC,QAAlE,SAEX,IAAIE,EAAQxD,OAAO,QAAUsD,GAAyB,MAAdD,EAAGI,QAAkB,wDAA0D,IAAM,UAI7H,GAHgB,MAAZJ,EAAGpB,OACHuB,EAAM1B,IAAI,QAASuB,EAAGpB,OAEX,MAAXoB,EAAGE,KACHC,EAAMxV,GAAG0T,EAAe,kBAAkB,SAACe,GACvCA,EAAGtB,kBACHnB,OAAO,mBAAmB2C,SAC1B3C,OAAOhkB,UAAU0mB,IAAIhB,EAAe,kBACpC1B,OAAOhkB,UAAU0mB,IAAIhB,EAAe,oBACpC1B,OAAOhkB,UAAU0mB,IAAI,uBACrBW,EAAGK,cAEPF,EAAMxV,GAAG0T,EAAe,oBAAoB,SAACe,GACzCA,EAAGtB,yBAEJ,CACH,IAAIwC,EAAQH,EAAM9M,KAAK,KACvBiN,EAAM3V,GAAG0T,EAAe,MAAM,SAACzB,GAC3BA,EAAMkB,kBACNoB,YAAW,WACPiB,EAAMlB,SACP,QAEPqB,EAAM3V,GAAG0T,EAAe,QAAQ,SAACzB,GAC7BA,EAAMkB,qBAKdqC,EAAMxV,GAAG0T,EAAe,oBAAoB,WACpC2B,GAAMD,GAAkC,MAAhBD,IACxBA,EAAaR,SACbS,EAAiB,KACjBD,EAAe,MAED,MAAdE,EAAGI,UACHN,EAAeL,GAAgBO,EAAGI,QAASD,EAAMrW,SAASuB,KAAO8U,EAAMzB,QAASyB,EAAMrW,SAASyW,SAIvGV,EAAaW,OAAOL,IA9CxB,2BAAsB,IAToD,8BA0D1ExD,OAAOhkB,UAAUgS,GAAG0T,EAAe,oBAAoB,SAACzpB,GACpD+nB,OAAOhkB,UAAU0mB,IAAIhB,EAAe,oBACpC1B,OAAOhkB,UAAU0mB,IAAI,uBACrB1C,OAAO,mBAAmB2C,YAG9B3C,OAAOhkB,UAAUgS,GAAG,uBAAuB,SAACyU,GAC1B,UAAVA,EAAGzgC,MACHg+B,OAAOhkB,UAAU0mB,IAAIhB,EAAe,kBACpC1B,OAAOhkB,UAAU0mB,IAAI,uBACrB1C,OAAO,mBAAmB2C,aAIlC,IAAImB,EAAYd,EAAwB,GAApBrB,OAAOoC,WAAmB,QAAU,OACpDC,EAAKhB,EAAwB,GAApBrB,OAAOoC,WAAmBpC,OAAOoC,WAAaf,EAAIA,EAC3DiB,EAAYhB,EAAyB,GAArBtB,OAAOuC,YAAoB,SAAW,MACtDC,EAAKlB,EAAyB,GAArBtB,OAAOuC,YAAoBvC,OAAOuC,YAAcjB,EAAIA,EAE7DnB,EAAM,GAUV,OATAA,EAAIgC,GAAaE,EAAK,KACtBlC,EAAImC,GAAaE,EAAK,KAEtBjB,EAAapB,IAAIA,GAGjB9B,OAAO,QAAQ6D,OAAOX,GACtBA,EAAaN,OAENM,EAGL,SAAUkB,GAASC,GACrB,IAAIC,EAAWD,EAAO3N,KAAK,uBAAuB6N,IAAI,iBAClDC,EAAOH,EAAO3N,KAAK,gBAEnBgL,EAAeC,OAAOC,aAAe,UAAY,QAErD0C,EAAStW,GAAG0T,EAAe,QAAQ,SAACe,GAChC,IAAIgC,EAASzE,OAAOyC,EAAGgC,QACvBH,EAAS5D,YAAY,aACrB+D,EAAOhE,SAAS,aAChB,IAAI7uB,EAAMyyB,EAAO3N,KAAK,IAAM+N,EAAOC,KAAK,WACxCF,EAAK9D,YAAY,aACjB8D,EAAKG,QAAQ,UACb/yB,EAAI6uB,SAAS,aACb7uB,EAAI+yB,QAAQ,aAUd,SAAUC,GAAQ3I,GAA8E,IAAlE4I,EAAkE,uDAAlD,GAAItvB,EAA8C,uDAA/B,GAAIusB,EAA2B,uCAE9Ft/B,EAAI,GACE,MAANy5B,GAAoB,IAANA,IAAUz5B,GAAK,QAAJ,OAAYy5B,EAAZ,MAEhB,MAAT4I,GAA0B,IAATA,IAAariC,GAAK,WAAJ,OAAeqiC,EAAf,MAEnC,IAAIC,EAAM9E,OAAO,OAAD,OAAQx9B,EAAR,YAUhB,OARW,MAAPs/B,GACAgD,EAAIhD,IAAIA,GAGA,MAARvsB,GAAwB,IAARA,GAChBuvB,EAAIvvB,KAAKA,GAGDuvB,EAmCT,IAAIC,IAA4B,EAOjC,SAAUC,GAAqBjF,EAA+BkF,EAAqBC,EAAyBC,GAC9G,IAAIC,EAAe,QAAUF,EAAc,GAAK,KAAOA,EAAc,GAAK,KAAOA,EAAc,GAAK,KAChGxjC,EAAQ,EACR+W,EAAQ/W,GAASyjC,EAAW,KAElB,SAAVE,IACAtF,EAAS+B,IAAImD,EAAaG,EAAe1jC,EAAQ,MACjDA,GAAS+W,GACG,EACRsnB,EAAS+B,IAAImD,EAAa,IAE1B1C,WAAW8C,EAAS,IAI5BA,GA6CE,SAAUC,GAAoB/vB,GAC3BgwB,UAAUC,UAIfD,UAAUC,UAAUC,UAAUlwB,GAAM9O,MAAK,eACtC,SAAUnD,GACToiC,QAAQ/+B,MAAM,+BAAgCrD,MA7BtD,SAAqCiS,GACjC,IAAIowB,EAAW3pB,SAAS4pB,cAAc,YACtCD,EAASjkC,MAAQ6T,EAGjBowB,EAASxpB,MAAMynB,IAAM,IACrB+B,EAASxpB,MAAMuS,KAAO,IACtBiX,EAASxpB,MAAMnH,SAAW,QAE1BgH,SAAS6pB,KAAKC,YAAYH,GAC1BA,EAASnD,QACTmD,EAAS1a,SAET,IACqBjP,SAAS+pB,YAAY,QACxC,MAAOziC,GACLoiC,QAAQ/+B,MAAM,iCAAkCrD,GAGpD0Y,SAAS6pB,KAAKG,YAAYL,GAKtBM,CAA4B1wB,G,uKC3S7B,IAAM2wB,GAAb,yB,4FAAA,S,UAAA,O,EAAA,E,EAAA,uCAKI,SAAgCC,EAAaC,GACzC,IAAIC,EAAsBH,EAAqBI,gBAAgB5P,MAAK,SAAA2P,GAAE,OAAIA,EAAGF,KAAOA,KAC1E,MAANE,IACAA,EAAK,CAAEE,MAAO,EAAGC,QAAS,EAAGL,IAAKA,GAClCD,EAAqBI,gBAAgB5+B,KAAK2+B,IAE9CA,EAAGE,QACH,IAAIjM,EAAKrjB,KAAK2H,MAAMua,YAAYC,MAAQgN,GACxCC,EAAGG,SAAWlM,EACd4L,EAAqBO,yBAd7B,8BAkBI,WACI,GAAItN,YAAYC,MAAQ8M,EAAqBQ,aAAe,KAAe,CACvE,IAAIC,EAAU,CACVjC,KAAMwB,EAAqBI,iBAG/BJ,EAAqBI,gBAAkB,GACvCJ,EAAqBO,qBAAuB,EAC5CP,EAAqBQ,aAAevN,YAAYC,MAEhDwN,GAAK,yBAA0BD,GAAS,oB,EA5BpD,O,gFAAA,KAsCM,SAAUC,GAAKT,EAAaQ,EAAcE,EAE5CC,GAEAC,IAAgB,GAChB,IAAIC,EAAO7N,YAAYC,MAEvB6N,EAAEL,KAAK,CACH3hC,KAAM,OACN0D,OAAO,EACP+7B,KAAMwC,KAAKC,UAAUR,GACrBS,YAAa,mBACbjB,IAAK,WAAaA,EAClBkB,QAAS,SAAUC,GAKf,GAHApB,GAAqBqB,yBAAyBpB,EAAKa,GAEnDD,IAAgB,GACQ,MAApBO,EAASD,SAAuC,GAApBC,EAASD,SAAyC,iBAAbC,GAAqC,IAAZA,EAAgB,CAC1G,IAAI3gC,EAAQ,yCACY,MAApB2gC,EAAS1kB,UAAiBjc,EAAQ2gC,EAAS1kB,SAO3CkkB,GAAeA,EAAcngC,QAEjCkgC,EAAgBS,IAKxB3gC,MAAO,SAAU6gC,EAAO5kB,GAEpB,GADAmkB,IAAgB,GACZD,EAAe,CACf,IAAIW,EAAa,2BAKjB,OAJoB,GAAhBD,EAAME,SACND,EAAa,GAAKD,EAAME,aAE5BZ,EAAclkB,EAAU,KAAO6kB,OAOzC,SAAUV,GAAgBY,GACxBA,EACA3H,OAAO,oBAAoB8B,IAAI,aAAa,WAE5C9B,OAAO,oBAAoB8B,IAAI,aAAa,U,uKAzFzCoE,mBAAqC,GACrCA,wBAA+B,EAC/BA,gBAAuB/M,YAAYC,MCLvC,IAAMwO,GAAb,yB,4FAAA,S,UAAA,O,EAAA,E,EAAA,+BAeI,SAAwBlD,EAAoBzG,GAExC,IAAI4J,EAAK,IAAID,EAWb,OATAC,EAAG5L,GAAKyI,EAAKzI,GACb4L,EAAG7mC,KAAO0jC,EAAK1jC,KACf6mC,EAAGC,WAAapD,EAAKoD,WACrBD,EAAGE,aAAerD,EAAKqD,aACvBF,EAAG5J,QAAUA,EACb4J,EAAGG,YAActD,EAAKsD,YACtBH,EAAGI,aAAe,KAClBJ,EAAGK,qBAAuBxD,EAAKwD,qBAC/BL,EAAGM,SAAWzD,EAAKyD,SACZN,M,EA5Bf,O,gFAAA,K,uKCFO,IAAMO,GAAb,yB,4FAAA,S,UAAA,O,EAAA,G,EAAA,qCAEI,SAAuBC,EAAoB3E,GACvC,GAAiB,MAAd2E,EAAH,CACA,IAAI5M,EAAOj2B,KACPA,KAAK8iC,kBAAkB5E,EAAS,MACpCl+B,KAAK+iC,UAAS,SAACC,GACXA,EAAM3X,MAAM4K,EAAKgN,4BAA4BJ,IAAa5hC,MACtD,SAAC/E,GACGA,EAAMgnC,cAAcjiC,MAAK,SAACkiC,GAAD,OAAYjF,EAAS,IAAIkF,WAAWD,UAEhEE,OAAM,kBAAMnF,EAAS,iBARPA,EAAS,QAHxC,iCAeI,SAAoB2E,EAAoBJ,GACpC,GAAIziC,KAAK8iC,iBAAT,CACA,IAAI7M,EAAOj2B,KACXA,KAAK+iC,UAAS,SAACC,GACXA,EAAMM,IAAIrN,EAAKgN,4BAA4BJ,GAAa,IAAIU,SAASd,UAnBjF,4BAuBI,WACI,MAAO,WAAYvkC,OAxB3B,sBA2BI,SAASggC,GACLsF,OAAOC,KAAK,YAAYxiC,KAAKi9B,KA5BrC,yCA+BI,SAA4B2E,GACxB,MAAO,uBAAyBA,O,gFAhCxC,K,uKCiBO,IAAMa,GAAb,WAKI,WAAoBnmB,EAAoBqZ,I,4FAA8B,SAAlD,KAAArZ,OAAoB,KAAAqZ,iBAgDxC,KAAA+M,eAA2B,GA/CvB3jC,KAAK4jC,U,UANb,O,EAAA,G,EAAA,sBASI,WAAO,WACH5jC,KAAKtB,MAAQ,aAEb0iC,GAAK,oBAAqB,IAAI,SAACU,GAE3B,IAAInB,GAAexE,OAAO0H,SAASC,SAASC,WAAW,SAAW,SAAW,SAAW5H,OAAO0H,SAASG,KAAO,iCAC/G,EAAKC,WAAa,IAAIC,UAAUvD,GAEhC,EAAKsD,WAAWE,QAAU,SAAChjC,GAAmB,EAAKijC,QAAQjjC,IAC3D,EAAK8iC,WAAWI,QAAU,SAAC5J,GAAwB,EAAK6J,QAAQ7J,IAChE,EAAKwJ,WAAWM,UAAY,SAAC9J,GAA0B,EAAK+J,UAAU/J,IAEtE,EAAKwJ,WAAWQ,OAAS,SAAChK,GACtB,IAAI0G,EAAyC,CACzCuD,QAAS,EACTpyB,MAAOwvB,EAASxvB,OAGpB,EAAK5T,MAAQ,YACb,EAAKimC,WAAWjD,KAAKC,UAAUR,KAKnCpE,YAAW,WACU,cAAd,EAAKr+B,QACJ,EAAKk4B,eAAegO,kBAAoB,EACxC,EAAKhO,eAAeiO,wBAA0B,KAEnD,UAtCf,wBA2CI,WAKI7kC,KAAKtB,MAAQ,YACbsB,KAAK2kC,WAAWjD,KAAKC,UALwB,CACzC+C,QAAS,OA7CrB,wBAsDI,SAAWtnB,GAEP,GAAkB,gBAAdpd,KAAKtB,MACL,IACIsB,KAAKikC,WAAWa,KAAK1nB,GACvB,MAAOpZ,GACLk8B,QAAQ6E,IAAI/gC,MA5D5B,qBAiEI,SAAQy2B,GACJz6B,KAAKtB,MAAQ,iBAlErB,uBAqEI,SAAU+7B,GAEN,IAAIqH,EAA0CJ,KAAKhN,MAAM+F,EAAMyE,MAC/D,GAAwB99B,MAApB0gC,EAAS4C,QAGb,OAAQ5C,EAAS4C,SACb,KAAK,EACD1kC,KAAKtB,MAAQ,aACb,MACJ,KAAK,EACDsB,KAAK42B,eAAeC,aAAY,eAAU,GAC1C,MACJ,KAAK,EACD72B,KAAKtB,MAAQ,kBAnF7B,qBA0FI,SAAQyC,GACJ++B,QAAQ6E,IAAI,uC,gFA3FpB,K,+rCCPO,IAAMC,GAAb,WAiBI,WAAoBznB,EAAoB0nB,I,4FAAoC,SAAxD,KAAA1nB,OAAoB,KAAA0nB,kBAbxC,KAAAC,4BAAsC,GACtC,KAAAC,gCAA0C,EAE1C,KAAAC,yBAAmC,GACnC,KAAAR,kBAA4B,EAC5B,KAAAC,wBAAkC,EAClC,KAAAQ,sBAAgCrlC,KAAKolC,yBACrC,KAAAE,eAAyB,E,UAX7B,O,EAAA,G,EAAA,8BAqBI,WAAe,WAEPrP,EAAOj2B,KACXA,KAAKilC,gBAAgB/T,KAAK,OAAO8J,KAAK,QAAS/E,EAAKmP,0BAE/B,MAAjBplC,KAAKulC,UAAkBC,cAAcxlC,KAAKulC,UAE9CvlC,KAAKulC,SAAWE,aAAY,WAExB,GAAsB,MAAlBxP,EAAK1Y,KAAKiZ,KAAd,CAIA,GAFAP,EAAKoP,wBAEDpP,EAAKoP,sBAAwB,EAAG,CAChCpP,EAAKoP,sBAAwBpP,EAAKmP,yBAClC,EAAKP,0BACL,IAAIlM,EAA8C,GAAhC,EAAKkM,wBACnBlM,IAAa,EAAKkM,wBAA0B,EAAKD,mBACrD3O,EAAKY,aAAY,cAAW8B,GAGhC,IAAI+M,EAAQ,EAAKT,gBAAgB/T,KAAK,uBAEtCwU,EAAM1K,KAAK,QAAS/E,EAAKoP,sBAAwB,MAE7CpP,EAAKqP,eACLI,EAAMpJ,IAAI,OAAQ,WAClB,EAAK2I,gBAAgBjK,KAAK,QAAS,oEAEnC0K,EAAMpJ,IAAI,OAAQ,WAClB,EAAK2I,gBAAgBjK,KAAK,QAAS/E,EAAKoP,sBAAwB,4CAGrE,OAtDX,sCA0DI,WACIrlC,KAAK2lC,eAAiB,IAAIjC,GAAe1jC,KAAKud,KAAMvd,QA3D5D,yBA8DI,SAAYk+B,GAA4D,I,EAArC0H,EAAqC,wDAEpE,GAAsB,MAAlB5lC,KAAKud,KAAKiZ,KAAd,CAEAx2B,KAAKud,KAAK0Z,gBAAgB4O,wBAEtB7lC,KAAKud,KAAKuoB,gBAEV9lC,KAAKud,KAAKuoB,eAAgB,EAC1B9lC,KAAK+lC,wBAAuB,gBAIhC,IAboE,EAahEC,EAA0B,GAC1BC,EAAqB,GAd2C,KAgBrDjmC,KAAKud,KAAK2oB,eAhB2C,IAgBpE,2BAAwC,KAA/BC,EAA+B,QAE/BA,EAAG/P,QACJ4P,EAAO9jC,KAAKikC,EAAGC,kBAAiB,IAChCD,EAAG/P,OAAQ,GAJqB,WAOtB+P,EAAG3S,YAAYM,YAAW,IAPJ,IAOpC,2BAAgD,KAAvCz4B,EAAuC,QACvCA,EAAE04B,KAAKqC,QACR/6B,EAAE04B,KAAKhkB,KAAO1U,EAAE84B,gCAChB8R,EAAO/jC,KAAK7G,EAAEgrC,YAAYF,IAE1B9qC,EAAE04B,KAAKqC,OAAQ,IAZa,gCAhB4B,8BAiCpE,IAAI+K,EAA8B,CAC9BmF,uBAAwBN,EACxBO,MAAON,EACPtD,SAAU3iC,KAAKud,KAAKgZ,kBACpBiQ,OAAQxmC,KAAKud,KAAKiZ,KAAKC,GACvBgQ,SAAU,EACVC,mBAAmD,QAAjC,EAAE1mC,KAAKud,KAAKwX,6BAAqBrF,WAAA,EAAAA,EAAE+G,GACrDkQ,uBAAuB,GAGvB1Q,EAAOj2B,KACX,GAAIgmC,EAAOvjC,OAAS,GAAKwjC,EAAOxjC,OAAS,GAAKmjC,EAC1CxE,GAAK,cAAeD,GAAS,SAACW,GAC1B7L,EAAKqP,eAAiBxD,EAASD,QAC1B5L,EAAKqP,gBAENrP,EAAK2Q,iBAAiBzF,EAASW,GAEf,MAAZ5D,IACAA,OAIT,WACCjI,EAAKqP,eAAgB,UAGzB,GAAgB,MAAZpH,EAEA,YADAA,OA3HhB,iCAkII,SAAoB2I,EAAyBlE,EAAkBzE,GAE3D,GAAIl+B,KAAKud,KAAKiZ,KAAKsQ,YAGf,OAFAD,EAAGpQ,GAAKhlB,KAAK2H,MAAsB,IAAhB3H,KAAKs1B,eACxB7I,EAAS,MAYbkD,GAAK,gCAR+C,CAChD3hC,KAAM,SACNunC,OAAQ,YACR9H,KAAM2H,EACNlE,SAAUA,EACV6D,OAAQxmC,KAAKud,KAAKiZ,KAAKC,KAGoB,SAACqL,GAC5C+E,EAAGpQ,GAAKqL,EAASrL,GACjByH,EAAS,QACVA,KArJX,iCA0JI,SAAoBxF,EAAsBwF,GAItCkD,GAAK,sBAHqC,CACtC6F,YAAavO,IAEoB,SAACoJ,GAClC5D,EAAS4D,MACV,SAAC1kB,GAAc8pB,MAAM9pB,QAhKhC,0BAmKI,SAAasb,EAAsBtY,EAAc8d,GAK7CkD,GAAK,eAJmC,CACpC6F,YAAavO,EACbyO,WAAY/mB,IAEc,SAAC0hB,GAC3B5D,EAAS4D,EAASsF,WACnB,SAAChqB,GAAc8pB,MAAM9pB,QA1KhC,mCA6KI,SAAsBsb,EAAsBl9B,EAAc+mC,EAAsBC,EAAqBtE,GAQjGkD,GAAK,iBAPgC,CACjC6F,YAAavO,EACb2O,aAAc7rC,EACd8rC,YAAa/E,EACbC,YAAaA,IAGe,SAACV,GAC7B5D,OACD,SAAC9gB,GAAc8pB,MAAM9pB,QAvLhC,4BA4LI,SAAe/hB,EAAW8qC,EAAexD,EAAkBzE,GAWvDkD,GAAK,gCAR+C,CAChD3hC,KAAM,SACNunC,OAAQ,OACR9H,KAJe7jC,EAAEgrC,YAAYF,GAK7BxD,SAAUA,EACV6D,OAAQxmC,KAAKud,KAAKiZ,KAAKC,KAGoB,SAACqL,GAC5CzmC,EAAE04B,KAAK0C,GAAKqL,EAASrL,GACrByH,EAAS,QACVA,KA1MX,oCA8MI,SAAuBiI,EAAejI,GAOlCkD,GAAK,qBALoC,CACrC1I,aAAcyN,EAAG1P,GACjBgQ,SAAU,IAGsB,SAAC3E,GACjC5D,EAAS4D,EAAS1kB,QAAS0kB,EAASvJ,aACrC2F,KAvNX,qCA2NI,SAAwBiI,EAAeoB,EAAmBC,EAAuBtJ,GAE7El+B,KAAK62B,aAAY,WASbuK,GAAK,sBAPqC,CACtC1I,aAAcyN,EAAG1P,GACjBgR,SAAUF,aAAM,EAANA,EAAQ9Q,GAClB+Q,YAAaA,EACbf,SAAU,IAGuB,SAAC3E,GAClC5D,EAAS4D,EAAS1kB,WACnB8gB,MAEJ,KA1OX,uCA+OI,SAA0Bz+B,EAA4Bg3B,EAAYyH,GAS9DkD,GAAK,gCAP+C,CAChD3hC,KAAM,SACNunC,OAAQvnC,EACRg3B,GAAIA,EACJ+P,OAAQxmC,KAAKud,KAAKiZ,KAAKC,KAGoB,SAACqL,GACxCA,EAASD,QACT3D,EAAS,MAETA,EAAS,qBAEdA,KA9PX,oCAkQI,SAAuBA,G,MAQnBkD,GAAK,qBANoC,CACrCsG,SAAU1nC,KAAKud,KAAKiZ,KAAKkR,SACzBlB,OAAQxmC,KAAKud,KAAKiZ,KAAKC,GACvBkR,qBAAqD,QAAjC,EAAE3nC,KAAKud,KAAKwX,6BAAqBrF,WAAA,EAAAA,EAAE+G,KAGvB,SAACqL,GAC7BA,EAASD,QACT3D,EAAS,MAETA,EAAS,qBAEdA,KAhRX,8BAqRI,SAAiB3F,EAAsB2F,GAMnCkD,GAAK,mBALkC,CACnC6F,YAAa1O,EAAU9B,GACvBmR,eAAgBrP,EAAUsP,SAASpP,UAGL,SAACqJ,GAC3BA,EAASD,SACT3D,EAAS4D,EAASgG,cAAehG,EAASiG,6BA7R1D,mCAkSI,SAAsBxP,EAAsB+J,EAAsBpE,GAO9DkD,GAAK,wBANuC,CACxC6F,YAAa1O,EAAU9B,GACvBmR,eAAgBrP,EAAUsP,SAASpP,QACnC6J,WAAYA,IAGuB,SAACR,GAChCA,EAASD,SACT3D,EAAS4D,EAASkG,kBAAmBlG,EAASmG,kBA3S9D,2BAgTI,SAAc1P,EAAsB2F,GAAiC,WAE7DgK,EAA6B,IAAItF,GAMrCxB,GAAK,cAJ6B,CAC9B6F,YAAa1O,EAAU9B,KAGE,SAACqL,GACtBA,EAASD,SAETtJ,EAAUsP,SAAWzF,GAAU+F,iBAAiBrG,EAAS+F,SAAU/F,EAASrJ,SAC5EyP,EAAaE,uBAAuB7P,EAAUsP,SAASnF,sBAAsB,SAACD,GAE1E,GAAoB,MAAhBA,EAY+C,MAA3ClK,EAAUsP,SAASnF,qBAIvB,EAAK2F,cAAc9P,EAAU9B,IAAI,SAAC6R,GAC9B,OAAgB,MAAZA,GACAJ,EAAaK,oBAAoBhQ,EAAUsP,SAASnF,qBAAsB4F,GAE1E/P,EAAUsP,SAASpF,aAAe+F,KAAKC,QAAQH,QAC/CpK,EAAS,YAGTA,EAAS,uCAXbA,EAAS,UAbjB,CACI,IAEI3F,EAAUsP,SAASpF,aAAe+F,KAAKC,QAAQhG,GACjD,MAAM3kC,GACJoiC,QAAQ6E,IAAIjnC,GACZoiC,QAAQ6E,IAAI,sCACZxM,EAAUsP,SAASpF,aAAeA,EAEtCvE,EAAS,WAsBjBA,EAAS,wBA7VzB,2BAqWI,SAAc+I,EAAqB/I,GAC/B,IAAIiD,EAA8B,CAC9B8F,YAAaA,GAGjBxF,EAAEL,KAAK,CACH3hC,KAAM,OACN0D,OAAO,EACP+7B,KAAMwC,KAAKC,UAAUR,GACrBS,YAAa,mBACbjB,IAAK,sBACL+H,UAAW,CAAEC,aAAc,eAC3B9G,QAAS,SAAUC,GACf5D,EAAS,IAAIkF,WAAWtB,KAE5B3gC,MAAO,SAAU6gC,EAAO5kB,GACpB8pB,MAAM,oCACNhJ,EAAS,WAtXzB,+BA4XI,SAAkBA,GAGdkD,GAAK,kBAFiC,CAAEwH,QAAS5oC,KAAKud,KAAKiZ,KAAKC,KAE/B,SAACqL,GAC1BA,EAASD,QACT3D,EAAS4D,EAAS+G,cAElB3K,EAAS,OAEd,SAAC9gB,GACA8pB,MAAM9pB,GACN8gB,EAAS,SAvYrB,8BA4YI,SAAiB4K,EAAwCC,GAAwC,WAEzFC,EAAyD,IAAI5xB,IAE7D6xB,EAAgB,GACpBH,EAAmBvC,MAAMhmC,SAAQ,SAAAwzB,GAAI,OAAIkV,EAAc/mC,KAAK6xB,EAAK0C,OAEjEsS,EAAoBG,WAAWA,WAAW3oC,SAAQ,SAAAsmC,GAAE,OAAImC,EAA2BlxB,IAAI+uB,EAAGpQ,GAAIoQ,MAE9F,IAT6F,EASzFsC,EAA8B,GAT2D,KAWjEJ,EAAoBG,WAAWA,YAXkC,yBAWpFE,EAXoF,QAgB3D,GAHR,EAAK7rB,KAAK2oB,cAAc1Y,QAAO,SAAA2Y,GAAE,OAAIA,EAAG1P,IAAM2S,EAAgB3S,MAGhEh0B,SAChB0mC,EAAkBjnC,KAAKknC,EAAgB5tC,MACvC,EAAK6tC,oCAAoCD,KAPjD,2BAAuE,IAXsB,yCAyBvEppC,KAAKud,KAAK2oB,eAzB6D,IAyB7F,2BAA+C,KAAtC3N,EAAsC,QACvC6Q,EAAiCJ,EAA2BltC,IAAIy8B,EAAU9B,IACvD,MAAnB2S,GAAyB,WACzB,IAAIE,EAA+C,IAAIlyB,IACvDgyB,EAAgB7C,MAAMhmC,SAAQ,SAAAgpC,GAAE,OAAID,EAAsBxxB,IAAIyxB,EAAG9S,GAAI8S,MAErE,IAJyB,EAIrBC,EAAqC,IAAIpyB,IAJpB,KAMNmhB,EAAU/E,YAAYM,YAAW,IAN3B,IAMzB,2BAA4D,KAAnD94B,EAAmD,QACpDyuC,EAASzuC,EAAO+4B,KAAK0C,GACzB+S,EAAc1xB,IAAI2xB,EAAQzuC,GAC1B,IAAI0uC,EAAiBJ,EAAsBxtC,IAAI2tC,GACzB,MAAlBC,GACA,EAAKnsB,KAAK0Z,gBAAgB0S,cAAcC,cAAc5uC,GACtD,EAAKuiB,KAAKssB,iBAAiBrW,YAAYwG,aAAah/B,IAC7C0uC,EAAejR,QAAUz9B,EAAO+4B,KAAK0E,WACxCwQ,EAAc55B,QAAQo6B,GAAU,GAAKC,EAAe/Q,eACpD39B,EAAO+4B,KAAKhkB,KAAO25B,EAAe35B,KAClC/U,EAAOmX,MAAM23B,SAASJ,EAAe35B,MAErC/U,EAAO+4B,KAAKqC,OAAQ,EACpBp7B,EAAO+6B,mBAAqB/6B,EAAOmX,MAAM6jB,2BAE7Ch7B,EAAO+4B,KAAK0E,QAAUiR,EAAejR,UArBpB,yCA0BF2Q,EAAgB7C,OA1Bd,IA0BzB,2BAA8C,KAArCwD,EAAqC,QACF,MAApCP,EAAc1tC,IAAIiuC,EAAWtT,KAC7B,EAAKuT,WAAWzR,EAAWwR,IA5BV,mCA3B4D,8BA6D7F,GAAIZ,EAAkB1mC,OAAS,EAAG,CAC9B,IAAI2a,EAAkB+rB,EAAkB1mC,OAAS,EAAI,yDAA2D,yDAChH2a,GAAW+rB,EAAkBnwB,KAAK,MAClCkuB,MAAM9pB,GAGVpd,KAAKud,KAAK0Z,gBAAgBgT,mBAAmBC,eAC7ClqC,KAAKud,KAAK0Z,gBAAgB0S,cAAcO,iBAhdhD,iDAodW,SAAoCd,GAAyD,IAAzBe,EAAyB,wDAC5FC,EAAIpqC,KAAKud,KAAK8sB,mBAAmBjB,EAAgB5tC,KAAM4tC,EAAgBzG,UAC3EyH,EAAE3T,GAAK2S,EAAgB3S,GACvB2T,EAAEE,YAAc,GAChBF,EAAE7U,KAAO6T,EAAgB7T,KACzB6U,EAAEG,SAAWnB,EAAgBmB,SAE7BvqC,KAAKud,KAAK2oB,cAAchkC,KAAKkoC,GAC7B,IAAI7U,EAAO6T,EAAgB7T,KAAK/J,MAAM,KACnB,GAAf+J,EAAK9yB,QAA0B,IAAX8yB,EAAK,KAAUA,EAAO,IAE9C,IAAIiV,EAAiC,CACjChvC,KAAM4tC,EAAgB5tC,KACtBivC,gBAAiBL,EACjBM,UAAW,YACXH,SAAUnB,EAAgBmB,SAC1BhV,KAAMA,GAGVv1B,KAAKud,KAAK0Z,gBAAgBgT,mBAAmBU,WAAWH,GAAc,GACtEJ,EAAEI,aAAeA,EApB+E,WAsB3EpB,EAAgB7C,OAtB2D,IAsBhG,2BAA4C,KAAnCqE,EAAmC,QACxC5qC,KAAKgqC,WAAWI,EAAGQ,IAvByE,8BA0B5FT,IACAnqC,KAAKud,KAAK0Z,gBAAgBgT,mBAAmBC,eAC7ClqC,KAAKud,KAAK0Z,gBAAgB0S,cAAcO,kBAhfpD,wBAofI,SAAW3R,EAAsBwR,GAC7B,IAAInP,EAAU,KACVrC,GAAav4B,KAAKud,KAAKssB,mBACvBjP,EAAK,CACDp/B,KAAMuuC,EAAWvuC,KACjBivC,gBAAiB,MAGrBzqC,KAAKud,KAAK0Z,gBAAgB0S,cAAcgB,WAAW/P,GAAI,IAG3D,IAAIrB,EAAS,CACT9C,GAAIsT,EAAWtT,GACfj7B,KAAMuuC,EAAWvuC,KACjBw4B,OAAO,EACPoC,OAAO,EACPrmB,KAAMg6B,EAAWh6B,KACjB0oB,QAASsR,EAAWtR,QACpBoS,iCAAiC,EACjCnS,aAAcH,EAAU9B,GACxB+T,aAAc5P,GAEdv/B,EAAI2E,KAAKud,KAAK0Z,gBAAgB6T,aAAavR,GACrC,MAANqB,IAAYA,EAAG6P,gBAAkBpvC,GACpBk9B,EAAU/E,YAChBoG,UAAUv+B,KA7gB7B,sBAihBI,SAAS6iC,GACL,IAAI3F,EAAYv4B,KAAKud,KAAKssB,iBAG1BzI,GAAK,WAF0B,CAAE6F,YAAa1O,EAAU9B,GAAIgC,QAASF,EAAUsP,SAASpP,UAE9D,SAACqJ,GACnBA,EAASD,QAET3D,EAAS,KAAM3F,EAAUsP,SAASpP,QAAUqJ,EAASmG,cAErDf,MAAMpF,EAAS1kB,SACf8gB,EAAS4D,EAAS1kB,SAAS,OAEhC,SAACA,GACA8pB,MAAM9pB,GACN8gB,EAAS9gB,GAAS,W,gFA/hB9B,K,uKCNO,IAAM2tB,GAAb,yB,4FAAA,S,UAAA,O,EAAA,G,EAAA,oCAEI,SAAsBrS,EAAsBnb,EAAYytB,EACpDC,GACgE,WAAhE/M,EAAgE,uDAAT,aAGvD,GADA3gB,EAAK2tB,YAAY9N,KAAK,sDAClB1E,GAAgB,EAAG,CACnB,IAAIyS,EAAS5tB,EAAKoX,kBAClBwW,EAAOC,QAAO,SAACjI,GAEXA,EAASqF,KAAK6C,QAAQlI,GACtB,EAAKmI,aAAanI,EAAQzK,EAAcuS,EAAQ1tB,EAAM2gB,MACvD,SAAC/8B,GACA+lC,MAAM,0CAA4C/lC,GAClDoc,EAAK2tB,YAAYpO,eAGrB98B,KAAKsrC,aAAaN,GAAO,EAAGC,EAAQ1tB,EAAM2gB,KAlBtD,0BAwBY,SAAaiF,EAAoBzK,EACrCuS,EACA1tB,EAAY2gB,GAsBZ,OApBAuD,EAAEL,KAAK,CACH3hC,KAAM,OACN0D,OAAO,EACPy+B,YAAa,2BACb1C,KAAMiE,EACNoI,aAAa,EACbC,QAAS,CAAE,gBAAiB,GAAK9S,EAAc,WAAYuS,GAC3DtK,IAAK,yBACLkB,QAAS,SAAUC,GACfvkB,EAAK2tB,YAAYpO,OACjBoB,EAAS4D,IAIb3gC,MAAO,SAAU6gC,EAAO5kB,GACpB8pB,MAAM,WACN3pB,EAAK2tB,YAAYpO,UAIlBqG,O,gFAhDf,K,uKCEO,IAAMsI,GAAb,WAII,WAAoBluB,EAAoBgb,I,4FAAoB,SAAxC,KAAAhb,OAAoB,KAAAgb,YACpCv4B,KAAK0rC,O,UALb,O,EAAA,G,EAAA,mBAQI,WAAI,WACA1rC,KAAK2rC,QAAUnR,OAAO,WACtBA,OAAO,SAAS8B,IAAI,aAAc,UAElCt8B,KAAK2rC,QAAQtN,OAAO7D,OAAO,ooGAyD3B,IAAIvE,EAAOj2B,KACXA,KAAK2rC,QAAQrP,IAAI,aAAc,WAE/B9B,OAAO,wBAAwBhS,GAAG,SAAS,WAAQ,EAAKojB,oBACxDpR,OAAO,sBAAsBhS,GAAG,SAAS,WACrC,EAAKqjB,4BAGT7rC,KAAK8rC,YAEL,CAAC,OAAQ,QAAS,OAAOvrC,SAAQ,SAAA6f,GAC7Boa,OAAO,mBAAqBpa,GAAMoI,GAAG,eAAe,WAChDyN,EAAK1Y,KAAKqZ,eAAemV,aAAa9V,EAAKsC,UAAU9B,GAAIrW,GAAM,SAACgnB,GAC5D5M,OAAO,iBAAiBpa,GAAMrQ,KAAKq3B,SAG3C,IAAI4E,EAAcxR,OAAO,qFACzBA,OAAO,gBAAkBpa,GAAMie,OAAO2N,GACtCA,EAAYxjB,GAAG,eAAe,WAC1BsX,GAAoBtF,OAAO,iBAAiBpa,GAAMrQ,cAI1DyqB,OAAO,4BAA4BhS,GAAG,UAAU,SAAC/V,GAAOgvB,EAAE,iBAAiBwK,KAAK,WAAgCzR,OAAO,OAAO,GAAI0R,cA5F1I,oCAgGI,WAAsB,WACd3J,EAAe,EACnB/H,OAAO,sBAAsBtJ,KAAK,SAASib,MAAM,SAACzvC,EAAGo2B,GACjD,IAAIyH,EAAWC,OAAO1H,GAEDA,EAAQoZ,UACzB3J,EAAejxB,OAAOC,SAAiBgpB,EAASS,KAAK,cAI7Dh7B,KAAKud,KAAKqZ,eAAewV,sBAAsBpsC,KAAKu4B,UAAU9B,GAClD+D,OAAO,oBAAoBkC,MAAO6F,EAAsB/H,OAAO,+BAA+BkC,OACrG,WACO+E,EAAE,iBAAiBwK,KAAK,aACxB,IAAIlB,IAAmBsB,sBAAsB,EAAK9T,UAAU9B,GAAI,EAAKlZ,KAAM,KAAM,6BAEpF,EAAKquB,sBAhHtB,uBAoHI,WAAS,WACLpR,OAAO,oBAAoBkC,IAAI18B,KAAKu4B,UAAU/8B,MAC9CwE,KAAKud,KAAKqZ,eAAe0V,oBAAoBtsC,KAAKu4B,UAAU9B,IAAI,SAACqL,GAC7D,CAAC,OAAQ,QAAS,OAAOvhC,SAAQ,SAAA6f,GAC7Boa,OAAO,iBAAmBpa,GAAMrQ,KAAK+xB,EAASyK,QAAQnsB,OAEvD,EAAK7C,KAAKiZ,KAAKgW,WACdhS,OAAO,OAAO8B,IAAI,aAAc,WAChC9B,OAAO,QAAQ8B,IAAI,aAAc,YAElC,EAAK/e,KAAKiZ,KAAKiW,iBACdjS,OAAO,OAAO8B,IAAI,aAAc,WAChC9B,OAAO,QAAQ8B,IAAI,aAAc,YAGrC9B,OAAO,KAAKsH,EAASwF,aAAa2E,KAAK,WAAW,GAElDzR,OAAO,iBAAiByR,KAAK,UAAmC,GAAxBnK,EAASwF,aAEjD9M,OAAO,+BAA+BkC,IAAI,EAAKnE,UAAUsP,SAASrF,kBAvI9E,4BA2II,WACIhI,OAAO,SAAS8B,IAAI,aAAc,WAClCt8B,KAAK2rC,QAAQrP,IAAI,aAAc,UAC/Bt8B,KAAK2rC,QAAQe,a,gFA9IrB,K,+rCCEO,IAAMC,GAAb,WAwBI,WAAYnxC,EAAsB+hB,EAAgBolB,I,4FAAgB,SAAhC,KAAAplB,OArBlC,KAAAgY,KAAe,GAUf,KAAAa,OAAiB,EAYbp2B,KAAKxE,KAAOA,EACZwE,KAAK2iC,SAAWA,EAChB3iC,KAAKwzB,YAAc,IAAIgG,GAAYjc,GACnCvd,KAAKsqC,YAAc,G,UA5B3B,O,EAAA,E,EAAA,8BA+EI,SAAuBnE,EAAmB5oB,GAEtC,IAAI6sB,EAAI,IAAIuC,EAAUxG,EAAG3qC,KAAM+hB,EAAM4oB,EAAGxD,UACxCyH,EAAE3T,GAAK0P,EAAG1P,GACV2T,EAAE7U,KAAO4Q,EAAG5Q,KACZ6U,EAAEG,SAAWpE,EAAGoE,SAChBH,EAAEzH,SAAWwD,EAAGxD,SAChByH,EAAEE,YAAcnE,EAAGmE,YACnBF,EAAEwC,YAAczG,EAAGyG,YACnBxC,EAAEvH,WAAasD,EAAG0G,YAT8B,WAWnC1G,EAAGI,OAXgC,IAWhD,2BAAsB,KAAdhN,EAAc,QAEdl+B,EAAY85B,GAAO2X,gBAAgBvT,EAAGhc,GAC1C6sB,EAAE5W,YAAYoG,UAAUv+B,GAErBk+B,EAAE9C,IAAM0P,EAAG4G,gBACV3C,EAAE4C,oBAAsB3xC,IAjBgB,8BAsBhD,OAAO+uC,M,EArGf,+BA+BI,SAAiB6C,GACb,IAAIpG,EAAoB,CACpBrrC,KAAMwE,KAAKxE,KACXi7B,GAAIz2B,KAAKy2B,GACTkM,SAAU3iC,KAAK2iC,SACfoK,cAA2C,MAA5B/sC,KAAKgtC,oBAA8B,KAAOhtC,KAAKgtC,oBAAoBjZ,KAAK0C,GACvF8P,MAAO,GACP+D,YAAatqC,KAAKsqC,YAClB/U,KAAMv1B,KAAKu1B,KACXgV,UAAU,EACVqC,YAAa5sC,KAAK4sC,YAClBC,YAAa7sC,KAAK6iC,YAGtB,GAAGoK,EAAU,YACIjtC,KAAKwzB,YAAYM,YAAW,IADhC,IACT,2BAAgD,KAAxCz4B,EAAwC,QAE5CwrC,EAAGN,MAAMrkC,KAAK7G,EAAEgrC,YAAYrmC,QAHvB,+BAQb,OAAO6mC,IArDf,kCAwDI,SAAqB2D,G,MACb0C,EAAyC,QAA/B,EAAG1C,aAAY,EAAZA,EAAc2C,sBAAczd,WAAA,EAAAA,EAAEwB,KAAK,gCACpD,GAAkB,MAAdgc,EAAJ,CAII,IAAIE,EAAU5S,OAAO,6GACrB0S,EAAW7O,OAAO+O,GAClB,IAAInX,EAAOj2B,KACXotC,EAAQ5kB,GAAG,aAAa,SAAC/V,GAAD,OAAOA,EAAEkpB,qBACjCyR,EAAQ5kB,GAAG,SAAS,SAAC/V,GACjBA,EAAEkpB,kBAEF,IAAI8P,GAA4BxV,EAAK1Y,KAAM0Y,SArE3D,uBAyGI,WAEI,OAAOj2B,KAAKwzB,YAAY5U,cA3GhC,oCA+GI,SAAuBzM,GAA+B,WACrCnS,KAAKwzB,YAAYM,YAAW,IADS,IAClD,2BAAgD,KAAxCz4B,EAAwC,QAC5C,GAAGA,EAAE8W,OAASA,EACV,OAAO9W,GAHmC,8BAOlD,OAAO,U,gFAtHf,K,+rCCAO,IAAMgyC,GAAb,WAQI,WAAoB9vB,I,4FAAc,SAAd,KAAAA,OAJb,KAAA+vB,kBAA8B,CAAC,IAAK,+DAAgE,IAAK,IAAK,KAE9G,KAAAC,uBAAuE,IAAIn2B,IAMlF,KAAAhK,OAAiB,EA0NjB,KAAAogC,oBAAqD,CACjD,IAAK,aACL,QAAW,iBACX,QAAW,sBAhOXxtC,KAAKytC,8B,UATb,O,EAAA,G,EAAA,qCAaI,SAAuBt7B,EAAiC3C,EAA2BjR,EAC/E+T,GAA+B,WAG3BtX,EACAgF,KAAKud,KAAKwX,sBAAsB2Y,uBAAuBv7B,GAE3D,OAAc,MAAVnX,GAA4C,MAA1BA,EAAO20B,gBAClB,KAGJ,IAAIvsB,SAAQ,SAACxC,EAASC,GACzB,IAAIo1B,EAAO,EAEP0X,EAAM,WACH3yC,EAAO+4B,KAAKC,MACX+I,YAAW,WACP4Q,MACD,KAEH/sC,EAAQq1B,EAAK2X,6BAA6Bz7B,EAAO3C,EAAUjR,EAAS+T,KAI5Eq7B,SArCZ,0CA8CI,SAA6Bx7B,EAAiC3C,EAA2BjR,EACrF+T,GAA+B,WAE/ByqB,YAAW,WAEP,IAAI8Q,EAAK,EAAKtwB,KAAKuwB,kBAAkBC,gBAAgB,+BAA+BC,OAChF,EAAK5gC,QACLygC,EAAGI,gBACH,EAAK7gC,OAAQ,KAElB,KAEH,IAAIpS,EACAgF,KAAKud,KAAKwX,sBAAsB2Y,uBAAuBv7B,GAE3D,GAAc,MAAVnX,GAA4C,MAA1BA,EAAO20B,gBACzB,OAAO,KAGX,GAAI3vB,KAAKkuC,gBAAgBlzC,EAAQwU,GAAW,OAAO,KAEnD,IAAI2+B,EAAoBh8B,EAAMi8B,gBAAgB,CAAEv7B,gBAAiB,EAAGE,YAAa,EAAGH,cAAepD,EAAS2oB,WAAYrlB,UAAWtD,EAAStB,SACxImgC,EAAoBl8B,EAAMi8B,gBAAgB,CAAEv7B,gBAAiBrD,EAAS2oB,WAAYplB,YAAavD,EAAStB,OAAQ0E,cAAepD,EAAS2oB,WAAa,EAAGrlB,UAAW,IAEnKqN,EAAcnlB,EAAO20B,gBAAgBrC,oBAAoB9d,EAAS2oB,WAAY3oB,EAAStB,QACvFogC,EAAiCtzC,EAAOuzC,kBAAkB/+B,EAAS2oB,WAAY3oB,EAAStB,QACtE,MAAlBogC,IACAA,EAAiB,CACbhX,WAAY,EACZE,SAAU,EACVD,SAAU,EACVE,OAAQ,EACRtT,aAAa,EACbC,YAAY,EACZiT,aAAc,KAItB,IAAImX,EAAqD,GACzDxuC,KAAKyuC,0BAA0BH,EAAgBE,GAE/C,IAAIE,EAAWP,EAAkB9iB,MAAM,yCAEnCsjB,EAAUN,EAAkBhjB,MAAM,mBAClCujB,EAAkC,GACvB,MAAXD,GAAmBA,EAAQlsC,OAAS,IACpCmsC,EAAkCD,EAAQ,IAG9B,MAAZD,EACA1uC,KAAK6uC,6BAA6BP,EAAgBnuB,EAAaquB,GAE/DxuC,KAAK8uC,sBAAsBt/B,EAAUk/B,EAAUE,EAAiCzuB,EAAaquB,GAGjG,IAtD+B,EAsD3BO,EAAO58B,EAAM68B,qBAAqBx/B,GAClCy/B,EAAmB,CAAEl8B,YAAag8B,EAAKh8B,YAAaF,gBAAiBrD,EAAS2oB,WAAYrlB,UAAWi8B,EAAKj8B,UAAWF,cAAepD,EAAS2oB,YAC7I+W,EAAyB,CAAEn8B,YAAavD,EAAStB,OAAQ2E,gBAAiBrD,EAAS2oB,WAAYrlB,UAAWtD,EAAStB,OAAQ0E,cAAepD,EAAS2oB,YAxDxH,KA0DdqW,GA1Dc,IA0D/B,2BAAkC,KAAzBW,EAAyB,QACZ,MAAdA,EAAKx8B,QACDw8B,EAAKC,WAAWrL,WAAW,KAC3BoL,EAAKx8B,MAAQu8B,EAEbC,EAAKx8B,MAAQs8B,IA/DM,8BAwE/B,OAJ+B,MAA3BX,EAAe7nB,WACf+nB,EAAkBA,EAAgBhhB,QAAO,SAAA2hB,GAAI,OAAIb,EAAe7nB,SAASpX,QAAQ8/B,EAAKC,YAAc,MAGjG,CACHC,YAAab,KAxHzB,mCA6HI,SAAsBh/B,EAA2Bk/B,EAA4BE,EACzEzuB,EAA0BquB,GAC1B,IAD4E,EACxEc,EAAeZ,EAAS,GACxBa,EAAgBb,EAAS,GAEzBc,GADYhgC,EAAStB,OAASohC,EAAa7sC,OAE/C,CACIoQ,gBAAiBrD,EAAS2oB,WAAYplB,YAAavD,EAAStB,OAASohC,EAAa7sC,OAClFmQ,cAAepD,EAAS2oB,WAAYrlB,UAAWtD,EAAStB,OAAS0gC,EAAgCnsC,SAPzB,KAUzD0d,EAAYsM,YAV6C,IAU5E,2BAA2C,KAAlCQ,EAAkC,QACvC,GAAoB,MAAhBA,EAAO5H,MAAe,CACtB,IAAIngB,EAAqB+nB,EAAO5H,MAAMngB,WAEtC,GADyB,MAArB+nB,EAAOyE,aAAoBxsB,EAAa+nB,EAAOyE,YAC/CxsB,EAAW0M,eAAiB29B,EAAe,YACxBtiB,EAAO5H,MAAMtB,SADW,IAC3C,2BAAyC,KAAhC7V,EAAgC,QACrCsgC,EAAgBtsC,KAAK,CACjButC,MAAOvhC,EAAOhJ,WACdwqC,OAAQ,UAAYxhC,EAAOhJ,WAAa,gBAAkB+nB,EAAO5H,MAAMngB,WACvEyqC,WAAYzhC,EAAOhJ,WACnBkqC,WAAYlhC,EAAOhJ,WACnB0qC,gBAAiB79B,OAAOC,UAAU69B,6BAA6BC,eAC/D1vB,KAAMrO,OAAOC,UAAU+9B,mBAAmBC,MAC1Cr9B,MAAO68B,KAT4B,kCAdqB,iCA9HpF,0CA+JI,SAA6BlB,EAAgCnuB,EAA0BquB,G,QAC/EjqB,EAA4C,MAA1B+pB,EAAe/pB,QAAkB,GAAK+pB,EAAe/pB,QACvEC,EAA0C,MAAzB8pB,EAAe9pB,OAAiB,GAAK8pB,EAAe9pB,OAEzE,GAAM8pB,EAAelqB,YAAckqB,EAAenqB,YAAlD,CAUA,IANA,IAAI8rB,EAAsD,GAEtDvxB,EAAkByB,EAClB4D,EAA8C,GAC9ClB,EAA8B,GAErB,MAANnE,GAAY,YACIA,EAAG+N,YADP,IACf,2BAAkC,KAAzBQ,EAAyB,QAC9B,GAAqB,MAAjBA,EAAO/e,OAAgB,CACvB,IAAIgiC,EAAmBjjB,EAAO/e,OAAOhJ,WACJ,MAA7B6e,EAAQmsB,IACRnsB,EAAQmsB,GAAoB,CAACjjB,GAC7BpK,EAAkB3gB,KAAKguC,IAEvBnsB,EAAQmsB,GAAkBhuC,KAAK+qB,QAEhC,GAAoB,MAAhBA,EAAO5H,OAAiBipB,EAAelqB,aACzC6rB,EAAiBhjB,EAAO/nB,YAAa,CACtC,IAAIkqC,EAAa7qB,EAAU0I,EAAO/nB,WAAasf,EAC/CgqB,EAAgBtsC,KAAK,CACjButC,MAAOxiB,EAAO/nB,WACdwqC,OAAQ,WAAaziB,EAAO5H,MAAMngB,WAClCyqC,WAAY1iB,EAAO/nB,WACnBkqC,WAAYA,EACZQ,gBAAiBR,EAAW//B,QAAQ,MAAQ,EAAI0C,OAAOC,UAAU69B,6BAA6BM,gBAAkBp+B,OAAOC,UAAU69B,6BAA6BC,eAC9J1vB,KAAMgvB,EAAW//B,QAAQ,MAAQ,EAAI0C,OAAOC,UAAU+9B,mBAAmBK,QAAUr+B,OAAOC,UAAU+9B,mBAAmBM,MACvH19B,WAAOvR,EACPkvC,SAAU,KAAOrjB,EAAO/nB,aAE5B+qC,EAAiBhjB,EAAO/nB,aAAc,IAvBnC,8BA2BfwZ,EAAKA,EAAGgO,OAGZ,GAAI4hB,EAAenqB,YAAa,YACbtB,GADa,IAC5B,2BAAkC,OAC1B0tB,EAAYxsB,EADc,SAE1BysB,EAAYD,EAAU9tC,OAAS,GAA0C,MAArC6rC,EAAe5W,mBAFzB,KAGf6Y,GAHe,IAG9B,2BAA0B,KAAjBrlB,EAAiB,QAClBnb,EAAOmb,EAAGhmB,WAId,GAHIsrC,GAAatlB,EAAGhmB,YAAcgmB,EAAGhd,OAAOhJ,WAAW0M,gBACnD7B,GAAyB,MAAjBmb,EAAGwG,WAAqBxG,EAAGhd,OAAOmX,MAAMngB,WAAagmB,EAAGwG,YAAc,IAAM3hB,GAE/C,MAArCu+B,EAAe5W,qBAA8C,QAAhB,EAAS,QAAT,EAAAxM,EAAGhd,cAAMwhB,WAAA,EAAAA,EAAErK,aAAKorB,WAAA,EAAAA,EAAEvrC,aAAcopC,EAAe5W,mBAAoB,CAChH,IAAI0X,EAAa7qB,EAAUxU,EAAOyU,EAClCgqB,EAAgBtsC,KAAK,CACjButC,MAAO1/B,EACP2/B,OAAQ,cAAgBxkB,EAAGhd,OAAOhJ,WAAa,gBAAkBgmB,EAAGhd,OAAOmX,MAAMngB,WACjFyqC,WAAY5/B,EACZq/B,WAAYA,EACZQ,gBAAiBR,EAAW//B,QAAQ,MAAQ,EAAI0C,OAAOC,UAAU69B,6BAA6BM,gBAAkBp+B,OAAOC,UAAU69B,6BAA6BC,eAC9J1vB,KAAMgvB,EAAW//B,QAAQ,MAAQ,EAAI0C,OAAOC,UAAU+9B,mBAAmBK,QAAUr+B,OAAOC,UAAU+9B,mBAAmBC,MACvHr9B,WAAOvR,MAjBW,gCADN,mCA3MxC,uCA4OI,SAA0BktC,EAAgCE,GACtD,IADwG,EACpGjqB,EAA4C,MAA1B+pB,EAAe/pB,QAAkB,GAAK+pB,EAAe/pB,QACvEC,EAA0C,MAAzB8pB,EAAe9pB,OAAiB,GAAK8pB,EAAe9pB,OAF+B,KAKvF8pB,EAAejX,cALwE,IAKxG,2BAA8C,KAArCtnB,EAAqC,QACtCq/B,EAAa7qB,EAAUxU,EAAOyU,EAC9BksB,EAAU1wC,KAAKwtC,oBAAoBz9B,GAEnCwJ,EAAKvZ,KAAKutC,uBAAuBzxC,IAAIiU,GACzC,GAAU,MAANwJ,EACAi1B,EAAgBtsC,KAAKqX,QAClB,GAAe,MAAXm3B,EAAiB,CACxB,IAAIjB,EAAQiB,EAAQ/iC,QAAQ,KAAM,IAAIA,QAAQ,KAAM,IAAIA,QAAQ,KAAM,IAAIA,QAAQ,KAAM,IAAIA,QAAQ,MAAO,IAAIA,QAAQ,MAAO,IAC9H6gC,EAAgBtsC,KAAK,CACjButC,MAAOA,EACPC,OAAQ,GACRC,WAAY5/B,EACZq/B,WAAYsB,EACZd,gBAAiB79B,OAAOC,UAAU69B,6BAA6BM,gBAC/D/vB,KAAMrO,OAAOC,UAAU+9B,mBAAmBK,QAC1Cz9B,WAAOvR,SAGXotC,EAAgBtsC,KAAK,CACjButC,MAAO1/B,EACP2/B,OAAQ,GACRC,WAAY5/B,EACZq/B,WAAYr/B,EACZ6/B,gBAAiBR,EAAW//B,QAAQ,MAAQ,EAAI0C,OAAOC,UAAU69B,6BAA6BM,gBAAkBp+B,OAAOC,UAAU69B,6BAA6BC,eAC9J1vB,KAAMgvB,EAAW//B,QAAQ,MAAQ,EAAI0C,OAAOC,UAAU+9B,mBAAmBK,QAAUr+B,OAAOC,UAAU+9B,mBAAmBY,QACvHh+B,WAAOvR,EACPkvC,SAAkB,QAARvgC,EAAiB,SAAM3O,KAhC2D,iCA5OhH,6BAsRI,SAAgBpG,EAAgBwU,GAE5B,IAAI5B,EAAY5S,EAAO4S,UACvB,GAAiB,MAAbA,GAAyC,GAApBA,EAAUnL,OAAa,OAAO,EAQvD,IANA,IAEIuL,EAFA4iC,EAAS,EACTC,EAASjjC,EAAUnL,OAAS,EAG5BquC,EAAW,MAEF,CAIT,GAHa9iC,IACbA,EAAMyD,KAAK2H,OAAOy3B,EAASD,GAAU,IAElB,OAAO,EAG1B,GAAgB,KADhBE,EACmB,OAAO,EAE1B,IAAI30C,EAAIyR,EAAUI,GACdjR,EAAIZ,EAAEqT,SAEV,GAAIzS,EAAEkR,KAAOuB,EAAS2oB,YAAcp7B,EAAEkR,MAAQuB,EAAS2oB,YAAcp7B,EAAEmR,OAASnR,EAAE0F,OAAS+M,EAAStB,OAChG0iC,EAAS5iC,MADb,CAKA,KAAIjR,EAAEkR,KAAOuB,EAAS2oB,YAAcp7B,EAAEkR,MAAQuB,EAAS2oB,YAAcp7B,EAAEmR,OAASsB,EAAStB,QAKzF,OAAO/R,EAAE0S,IAAM9J,EAAUO,eAJrBurC,EAAS7iC,MAnTzB,yCA8TI,WACIhO,KAAKutC,uBAAuBz1B,IAAI,cAC5B,CACI23B,MAAO,0CACPC,OAAQ,wCACRC,WAAY,cAEZP,WAAY,eACZ1K,QAAS,CACLjO,GAAI,+BACJ1Z,MAAO,MACPg0B,UAAW,IAEfnB,gBAAiB79B,OAAOC,UAAU69B,6BAA6BM,gBAC/D/vB,KAAMrO,OAAOC,UAAU+9B,mBAAmBK,QAC1Cz9B,WAAOvR,IAGfpB,KAAKutC,uBAAuBz1B,IAAI,aAC5B,CACI23B,MAAO,uBACPC,OAAQ,sCACRC,WAAY,aAEZP,WAAY,cACZ1K,QAAS,CACLjO,GAAI,+BACJ1Z,MAAO,MACPg0B,UAAW,IAEf3wB,KAAMrO,OAAOC,UAAU+9B,mBAAmBK,QAC1Cz9B,WAAOvR,IAGfpB,KAAKutC,uBAAuBz1B,IAAI,QAC5B,CACI23B,MAAO,4EACPC,OAAQ,+GACRC,WAAY,QAEZP,WAAY,eACZ1K,QAAS,CACLjO,GAAI,+BACJ1Z,MAAO,MACPg0B,UAAW,IAEf3wB,KAAMrO,OAAOC,UAAU+9B,mBAAmBK,QAC1Cz9B,WAAOvR,IAGfpB,KAAKutC,uBAAuBz1B,IAAI,SAC5B,CACI23B,MAAO,qDACPC,OAAQ,mBACRC,WAAY,SAEZP,WAAY,+BACZ1K,QAAS,CACLjO,GAAI,+BACJ1Z,MAAO,MACPg0B,UAAW,IAEfnB,gBAAiB79B,OAAOC,UAAU69B,6BAA6BM,gBAC/D/vB,KAAMrO,OAAOC,UAAU+9B,mBAAmBK,QAC1Cz9B,WAAOvR,IAGfpB,KAAKutC,uBAAuBz1B,IAAI,eAC5B,CACI23B,MAAO,4DACPC,OAAQ,sDACRC,WAAY,SAEZP,WAAY,8BACZ1K,QAAS,CACLjO,GAAI,+BACJ1Z,MAAO,MACPg0B,UAAW,IAEfnB,gBAAiB79B,OAAOC,UAAU69B,6BAA6BM,gBAC/D/vB,KAAMrO,OAAOC,UAAU+9B,mBAAmBK,QAC1Cz9B,WAAOvR,S,gFA/YvB,K,+rCCFO,IAAM4vC,GAAb,WAKI,WAAoBzzB,I,4FAAc,SAAd,KAAAA,OAHpB,KAAA0zB,+BAAqD,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAC/E,KAAAC,iCAAuD,G,UAH3D,O,EAAA,G,EAAA,mCAQI,SAAqB/+B,EAAiC3C,EAClD8C,EACA/T,GAA8C,WAG1C03B,EAAOj2B,KAEX,OAAO,IAAIoD,SAAQ,SAACxC,EAASC,GAEzBk8B,YAAW,WAEP,EAAKxf,KAAK4zB,iBAEVvwC,EAAQq1B,EAAKmb,0BAA0Bj/B,EAAO3C,EAAU8C,EAAO/T,MAEhE,UAvBf,uCA8BI,SAA0B4T,EAAiC3C,EACvD8C,EACA/T,GAG0ByB,KAAKud,KAAKuwB,kBAAkBuD,WAAtD,IAEIr2C,EACAgF,KAAKud,KAAKwX,sBAAsB2Y,uBAAuBv7B,GAE3D,GAAc,MAAVnX,EACA,OAAO,KAMX,IAAIs6B,EAAsBt6B,EAAOs6B,oBAAoB9lB,EAAS2oB,YAE9D,GAA2B,MAAvB7C,EAA6B,OAAO,KAKxC,IAHA,IAAIgc,EAAyC,KACzCC,GAA6B,EAExBt2C,EAAIq6B,EAAoB7yB,OAAS,EAAGxH,GAAK,EAAGA,IAAK,CACtD,IAAIu2C,EAAMlc,EAAoBr6B,GAC1Bu2C,EAAIC,mBAAmBvjC,OAASsjC,EAAIC,mBAAmBhvC,OAAS+M,EAAStB,QACtEsjC,EAAIC,mBAAmBvjC,OAASqjC,IACH,MAA5BC,EAAItsB,sBACH1V,EAAS2oB,YAAcqZ,EAAItsB,qBAAqBjX,MAAQuB,EAAStB,QAAUsjC,EAAItsB,qBAAqBhX,QACjGsB,EAAS2oB,WAAaqZ,EAAItsB,qBAAqBjX,QACnDqjC,EAAqBE,EACrBD,EAAoBC,EAAIC,mBAAmBvjC,QAKvD,OAA0B,MAAtBojC,EAAmC,KAEhCtxC,KAAK0xC,iBAAiBJ,EAAoB9hC,KArEzD,8BA2EI,SAAiB8hC,EACb9hC,GAEA,IAFyB,EAErBmiC,EAAyB,EAFJ,KAIVL,EAAmBnnB,gBAJT,IAIzB,2BAAkD,KAAzCynB,EAAyC,SAC1CA,EAAG3jC,KAAOuB,EAAS2oB,YAAeyZ,EAAG3jC,MAAQuB,EAAS2oB,YAAcyZ,EAAG1jC,OAASsB,EAAStB,SACzFyjC,KANiB,8BAYzB,OAAOvuC,QAAQxC,QAAQ,CACnB1E,MAAO,CACH21C,gBAAiBF,EACjBG,gBAAiB,EACjBC,WANgE,IAQpEC,QAAS,oB,gFA9FrB,K,+rCCDO,IAAMC,GAAb,WAsCI,WAAoB7+B,I,4FAAc,SAAd,KAAAA,S,UAtCxB,O,EAAA,G,EAAA,2BA0CI,SAAajB,EAAiC3C,EAA2B8C,G,MAGjE4/B,EAA8BlyC,KAAKoT,OAAOA,OAAO++B,eAIrD,GAAgB,MAAbD,GACIA,EAAUr/B,iBAAmBq/B,EAAUt/B,eAAiBs/B,EAAUn/B,aAAem/B,EAAUp/B,aAErFo/B,EAAUr/B,gBAAkBrD,EAAS2oB,YAAc+Z,EAAUr/B,iBAAmBrD,EAAS2oB,YAAc+Z,EAAUn/B,aAAevD,EAAStB,WACzIgkC,EAAUt/B,cAAgBpD,EAAS2oB,YAAc+Z,EAAUt/B,eAAiBpD,EAAS2oB,YAAc+Z,EAAUp/B,WAAatD,EAAStB,QAJhJ,CAWA,IAAIlT,EAAuD,QAAjD,EAAWgF,KAAKoT,OAAOmK,KAAKwX,6BAAqBrF,WAAA,EAAAA,EAAEge,uBAAuBv7B,GAEpF,GAAc,MAAVnX,EACA,OAAO,KArByF,WAwB/EA,EAAOsT,QAxBwE,IAwBpG,2BAAmC,yBAC/B,2BAA2B,KAAnBnN,EAAmB,QACvB,GAAGA,EAAMqO,SAASvB,MAAQuB,EAAS2oB,YAC/Bh3B,EAAMqO,SAAStB,QAAUsB,EAAStB,QAClC/M,EAAMqO,SAAStB,OAAS/M,EAAMqO,SAAS/M,QAAU+M,EAAStB,OACtD,OAAO,MALY,gCAxBiE,8BAsCpG,GAAe,MAJDlT,EAAOo3C,qBAAqB5iC,EAAS2oB,WAAY3oB,EAAStB,aAKjE,CACH,IAAI6gC,EAAO/uC,KAAKqyC,mBAAmBlgC,EAAO3C,GACtC8iC,EAAOL,EAAgBM,oBAAoBxD,GAC/C,GAAY,MAARuD,EACA,MAAO,CACH3/B,MAAO,KACP6/B,SAAU,CAAC,CAAEt2C,MAAOo2C,SAvFxC,gCA+FI,SAAmBngC,EAAiC3C,GAehD,IAZA,IAAIxB,EAAMmE,EAAMsgC,sBAAsB,CAClC1/B,YAAa,EACbF,gBAAiB,EACjBD,cAAepD,EAAS2oB,WACxBrlB,UAAWtD,EAAStB,SAGpB6B,EAAOoC,EAAMgB,WAEb47B,EAAO,GAEPnS,EAAM5uB,EACH4uB,EAAM7sB,EAAKtN,QAAUzC,KAAK0yC,oCAAoC3iC,EAAKpM,OAAOi5B,KAC7EA,IAIJ,IADA,IAAI+V,EAAQ3kC,EACL2kC,EAAQ,GAAK3yC,KAAK0yC,oCAAoC3iC,EAAKpM,OAAOgvC,EAAQ,KAC7EA,IAGJ,GAAI/V,EAAM+V,EAAQ,EACd5D,EAAOh/B,EAAKW,UAAUiiC,EAAO/V,OAC1B,CAEH,IADAA,EAAM5uB,EACC4uB,EAAM7sB,EAAKtN,QAAUzC,KAAK4yC,iBAAiB7iC,EAAKpM,OAAOi5B,KAC1DA,IAIJ,IADA+V,EAAQ3kC,EACD2kC,EAAQ,GAAK3yC,KAAK4yC,iBAAiB7iC,EAAKpM,OAAOgvC,EAAQ,KAC1DA,IAGA/V,EAAM+V,EAAQ,IACd5D,EAAOh/B,EAAKW,UAAUiiC,EAAO/V,IAIrC,OAAOmS,IAzIf,8BA6II,SAAiB58B,EAAiC3C,EAC9CtK,GAYA,IAVA,IAAI8I,EAAMmE,EAAMsgC,sBAAsB,CAClC1/B,YAAa,EACbF,gBAAiB,EACjBD,cAAepD,EAAS2oB,WACxBrlB,UAAWtD,EAAStB,SAGpB6B,EAAOoC,EAAMgB,WAEbypB,EAAM5uB,EACH4uB,EAAM7sB,EAAKtN,QAAUzC,KAAK0yC,oCAAoC3iC,EAAKpM,OAAOi5B,KAC7EA,IAIJ,IADA,IAAI+V,EAAQ3kC,EACL2kC,EAAQ,GAAK3yC,KAAK6yC,wBAAwB9iC,EAAKpM,OAAOgvC,EAAQ,KACjEA,IAKJ,OAF2C,OAAtBztC,aAAU,EAAVA,EAAYzC,SAAqByC,EAAWzC,OAE7Dm6B,EAAM+V,EAAQlwC,OACPsN,EAAKW,UAAUiiC,EAAO/V,GAG1B13B,IAzKf,qCA4KI,SAAwB/I,GAEpB,OAAOA,EAAEqc,oBAAoB6S,MAAM,0BA9K3C,8BAkLI,SAAiBlvB,GAEb,OAAOA,EAAEqc,oBAAoB6S,MAAM,sBApL3C,iDAwLI,SAAoClvB,GAEhC,OAAOA,EAAEqc,oBAAoB6S,MAAM,0B,gFA1L3C,K,uKAEmB4mB,uBAAqD,CAChE,MAAS,wDACT,IAAO,2GACP,QAAW,0FACX,MAAS,6HACT,IAAO,6QAEP,GAAM,0RACN,KAAQ,qOACR,OAAU,uVACV,IAAK,mGACL,KAAM,gRACN,KAAM,4HACN,KAAM,2HACN,KAAM,uSACN,KAAM,2LACN,KAAM,+LACN,KAAM,mMACN,KAAM,iMACN,KAAM,6GACN,KAAM,gHACN,IAAK,wMACL,IAAK,qHACL,OAAU,yIACV,QAAW,mJACX,UAAa,mMACb,OAAU,wIACV,MAAS,iRAET,MAAS,iFACT,QAAW,iHACX,WAAc,6LACd,KAAQ,mKCnCT,IAAMa,GAAb,WAEI,WAAoBv1B,I,4FAAc,SAAd,KAAAA,O,UAFxB,O,EAAA,G,EAAA,iCAMI,SAAmBpL,EAAiCQ,EAAqBpU,EAA6C+T,GAgBlH,MAAO,CACH8nB,QAhBY77B,EAAQw0C,QAAQl7B,KAAI,SAAA1W,GAChC,IAAIub,EAA0Bvb,EAAM6xC,mBACpC,OAAgB,MAAZt2B,EAAyB,KAEiB,CAC1CK,MAAOL,EAASK,MAChBk2B,YAAa,CAAC9xC,GACdif,KAAM,WACNjD,KAAM,CACF5K,MAAOmK,EAASM,cAAc7K,EAAM8K,MAExCi2B,aAAa,MAMjBlB,QAAS,mB,gFAxBrB,K,+rCCCO,IAAMmB,GAAb,WAEI,WAAoB51B,I,4FAAc,SAAd,KAAAA,O,UAFxB,O,EAAA,G,EAAA,gCAMI,SAAkBpL,EAAiC3C,EAA2BjR,EAA4C+T,GAGtH,IAAItX,EAAiBgF,KAAKud,KAAKwX,sBAAsB2Y,uBAAuBv7B,GAE5E,GAAc,MAAVnX,EAAgB,OAAO,KAE3B,IAAI83B,EAAU93B,EAAOo3C,qBAAqB5iC,EAAS2oB,WAAY3oB,EAAStB,QACxE,GAAe,MAAX4kB,EAAJ,CAIA,IAAIsgB,EAAiBtgB,EAAQsgB,eAGzBC,EAAkD,GAetD,OAbAD,EAAe7yC,SAAQ,SAAC+yC,EAAmBt4C,GACvC,GAAyB,MAArBs4C,EAA2B,YACZA,GADY,IAC3B,2BAAkC,KAAzBC,EAAyB,QAC9BF,EAAmBnxC,KACf,CACI+a,IAAKjiB,EAAOiiB,IACZtK,MAAO,CAAEI,YAAawgC,EAAGrlC,OAAQ2E,gBAAiB0gC,EAAGtlC,KAAM2E,cAAe2gC,EAAGtlC,KAAM6E,UAAWygC,EAAGrlC,OAASqlC,EAAG9wC,WAL9F,mCAY5B4wC,Q,gFApCf,K,uKCDO,IAAMG,GAAb,yB,4FAAA,S,UAAA,O,EAAA,E,EAAA,yBAEW,SAAkBzjC,EAAc0jC,EAAoCC,GAEvE,IAAIC,EAAUnZ,OAAO,iBACrBmZ,EAAQzY,YAAY,CAAC,oBAAqB,qBAAsB,mBAAoB,wBAEpFyY,EAAQ1Y,SAAS,gBAAkByY,GAEnCC,EAAQrX,IAAI,CAAEpT,KAAM,GAAIG,MAAO,GAAI+U,IAAK,GAAIwV,OAAQ,KAEpD,IAAI70B,EAAK00B,EAAc9rB,SACnBuQ,EAAIsC,OAAO,QAIf,OAAQkZ,GACJ,IAAK,SAAUC,EAAQrX,IAAI,CACvBpT,KAAMnK,EAAGmK,KAAOuqB,EAAclX,QAAU,EAJ5B,GAKZqX,OAAQ1b,EAAEsE,SAAWzd,EAAGqf,IALZ,KAOZ,MACJ,IAAK,MAAOuV,EAAQrX,IAAI,CACpBpT,KAAMnK,EAAGmK,KAAOuqB,EAAclX,QAAU,EAT5B,GAUZ6B,IAAKrf,EAAGqf,IAAMqV,EAAcjX,SAAW,KAEvC,MACJ,IAAK,OAAQmX,EAAQrX,IAAI,CACrBpT,KAAMnK,EAAGmK,KAAOuqB,EAAclX,QAdlB,GAeZ6B,IAAKrf,EAAGqf,IAAMqV,EAAcjX,SAAW,EAf3B,KAiBZ,MACJ,IAAK,QAASmX,EAAQrX,IAAI,CACtBjT,MAAO6O,EAAEqE,QAAUxd,EAAGmK,KACtBkV,IAAKrf,EAAGqf,IAAMqV,EAAcjX,SAAW,EApB3B,KAyBpBmX,EAAQziB,KAAK,QAAQ2iB,KAAK9jC,GAE1B,IAAIq9B,EAAUuG,EAAQziB,KAAK,cAC3Bkc,EAAQ5kB,GAAG,SAAS,SAAC/V,GACjBA,EAAEkpB,kBACFyR,EAAQlQ,IAAI,SACZsW,EAAOM,WAGXH,EAAQI,OAAO,OAhDvB,mBAoDI,WACkBvZ,OAAO,iBACbwZ,QAAQ,OAtDxB,wBA0DI,SAAkBvd,EAAYwd,EAAgB1Z,GAE1C,IAAIhd,EACJ,GAAG02B,aAAoBC,GAAvB,CAMA,IAAIC,GALA52B,EAAO02B,GAKczd,KAAKkR,SAAUyM,cAEpCC,EAAO3d,EAAK,OAEhB,GAAqB,MAAjB0d,IAAiD,MAAvBA,EAAcC,KAAkBD,EAAcC,IAAQ,CAChFD,EAAcC,IAAQ,EACtB72B,EAAKqZ,eAAemP,wBAAuB,eAE3C,IAAIh2B,EAAe,GACf2jC,EAA6B,OAEjC,OAAQjd,GACJ,IAAK,oBACD1mB,EAAO,uMAGP2jC,EAAY,OACZ,MACA,IAAK,mBACD3jC,EAAO,6NAGP2jC,EAAY,OACZ,MACR,IAAK,mBACD3jC,EAAO,kIACP2jC,EAAY,MACZnZ,EAAWC,OAAO,kBAClB,MACJ,IAAK,mBACDzqB,EAAO,olBAOP2jC,EAAY,MACZ,MACJ,IAAK,gBACD3jC,EAAI,gaAIJ2jC,EAAY,SAGR,IAAR3jC,GAA0B,MAAZwqB,GAAoBA,EAAS93B,OAAS,GACpD+wC,EAAOa,WAAWtkC,EAAMwqB,EAAUmZ,S,EAnHlD,O,gFAAA,K,+rCCSO,IAAMY,GAAb,WAQI,WAAmB/2B,EAAwBg3B,EAA8Ble,I,4FAAmB,SAAzE,KAAA9Y,OAAwB,KAAAg3B,cAA8B,KAAAle,aAJzE,KAAAme,GAAmC,KAEnC,KAAAC,uBAAiC,EA2PjC,KAAAC,SAAmB,EAgInB,KAAAC,kBAA8B,G,UAjYlC,O,EAAA,G,EAAA,sBAWI,SAAQpa,GAA6B,YCpBnC,WACFxoB,OAAOC,UAAUyL,SAAS,CACtBgZ,GAAI,SACJme,WAAY,CAAC,UAIjB,IAAIC,EAA+C,CAC/CC,aAAc,CACV,CAEIC,WAAY,qCACZC,UAAW,YACXna,OAAQ,CAAEoa,aAAcljC,OAAOC,UAAUkjC,aAAaC,cAAeC,WAAY,QAErF,CAEIL,WAAY,qCACZla,OAAQ,CAAEoa,aAAcljC,OAAOC,UAAUkjC,aAAaG,KAAMD,WAAY,QAE5E,CAEIL,WAAY,2CACZla,OAAQ,CAAEoa,aAAcljC,OAAOC,UAAUkjC,aAAaG,KAAMD,WAAY,OAE5E,CAEIL,WAAY,0BACZla,OAAQ,CAAEoa,aAAcljC,OAAOC,UAAUkjC,aAAaG,KAAMC,WAAY,IAE5E,CAEIP,WAAY,iCACZla,OAAQ,CAAEoa,aAAcljC,OAAOC,UAAUkjC,aAAaG,KAAMC,WAAY,KAGhFC,SAAU,CACNC,YAAa,KACbC,aAAc,CAAC,KAAM,OAEzBC,SAAU,CACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,MAEVC,iBAAkB,CACd,CAAElS,KAAM,IAAKqQ,MAAO,KACpB,CAAErQ,KAAM,IAAKqQ,MAAO,KACpB,CAAErQ,KAAM,IAAKqQ,MAAO,KACpB,CAAErQ,KAAM,IAAKqQ,MAAO,KACpB,CAAErQ,KAAM,IAAMqQ,MAAO,MAEzB8B,iBAAkB,CACd,CAAEnS,KAAM,IAAKqQ,MAAO,KACpB,CAAErQ,KAAM,IAAKqQ,MAAO,KACpB,CAAErQ,KAAM,IAAKqQ,MAAO,KACpB,CAAErQ,KAAM,IAAKqQ,MAAO,KACpB,CAAErQ,KAAM,IAAMqQ,MAAO,OA6H7B/hC,OAAOC,UAAU6jC,yBAAyB,SAAUhB,GAEpD9iC,OAAOC,UAAU8jC,yBAAyB,SA5H3B,CAEXC,aAAc,GACdC,aAAc,OACdC,YAAY,EACZP,SAAU,CACN,CAAEjS,KAAM,IAAKqQ,MAAO,IAAKxhC,MAAO,oBAChC,CAAEmxB,KAAM,IAAKqQ,MAAO,IAAKxhC,MAAO,0BAEpC4jC,QAAS,sBACTC,SAAU,CACN,QAAS,SAAU,MAAO,QAAS,MAAO,QAAS,UAAW,MAAO,KAAM,MAAO,SAAU,gBAAiB,SAC7G,QAAS,UAAW,KAAM,UAAW,OAAQ,OAAQ,QAAS,UAAW,SAAU,SAAU,WAAY,aACzG,SAAU,QAAS,eAAgB,eAAgB,oBAAqB,WAAY,UAAW,aAAc,WAC7G,SAAU,OAAQ,SAAU,WAAY,OAAQ,OAAQ,OAAQ,MAAO,SAAU,SAAU,YAAa,SAAU,UAClH,OAAQ,MAAO,UAAW,OAAQ,OAAQ,OAAQ,QAAS,SAAU,KAAM,SAAU,YAAa,KAAM,QAAS,UACjH,YAAa,QAAS,SAAU,UAAW,YAAa,OAAQ,KAAM,SAAU,OAAQ,MAAO,OAAQ,OAAQ,QAAS,QACxH,UAAW,KAAM,MAAO,UAAW,OAAQ,KAAM,SAAU,KAAM,KAAM,QAAS,QAAS,OAAQ,SAAU,UAAW,QACtH,QAAS,YAAa,aAAc,SAAU,UAAW,UAAW,SAAU,UAAW,WAAY,QAAS,WAAY,MAC1H,YAAa,SAAU,MAAO,QAAS,OAAQ,YAAa,OAAQ,KAAM,cAAe,UAAW,QAAS,SAAU,SACvH,QAAS,SAAU,SAAU,OAAQ,UAAW,OAAQ,QAAS,OAAQ,UAAW,SAAU,WAElG/sB,UAAW,CACP,MAAO,UAAW,KAAM,OAAQ,MAAO,KAAM,KAAM,OAAQ,YAAa,QAAS,QAAS,OAAQ,OAAQ,QAAS,SAEvHgtB,iBAAkB,CACd,MAAO,UAAW,OAAQ,WAAY,QAAS,OAAQ,MAAO,SAC9D,MAAO,QAAS,oBAAqB,SAAU,OAAQ,aAAc,SACrE,QAAS,QAAS,MAAO,MAAO,SAAU,QAAS,SAAU,aAC7D,UAAW,QAAS,QAAS,OAAQ,UAAW,iBAAkB,SAAU,YAC5E,gBAAiB,OAAQ,SAAU,UAAW,WAAY,QAAS,YAEvEC,iBAAkB,GAGlBC,cAAe,GAGfC,UAAW,CACPhgC,KAAM,CACF,CAAEigC,QAAS,aACX,CAAEA,QAAS,eACX,CAAEA,QAAS,kBACX,CAAEA,QAAS,YACX,CAAEA,QAAS,YACX,CAAEA,QAAS,uBACX,CAAEA,QAAS,WACX,CAAC,QAAS,aACV,CAAC,OAAQ,aACT,CAAC,gCAAiC,CAC9BC,MAAO,CACH,oBAAqB,YACrB,YAAa,UACb,WAAY,gBAGpB,CAAC,WAAY,CACTA,MAAO,CACH,YAAa,UACb,aAAc,WACd,oBAAqB,aAErB,WAAY,gBAGpB,CAAC,mBAAoB,aAEzBC,WAAY,CACR,CAAC,MAAO,UAEZnB,SAAU,CACN,CAAC,QAAS,WACV,CAAC,OAAQ,CAAEjjC,MAAO,gBAAiB9Q,KAAM,cAE7C+K,QAAS,CACL,CAAC,SAAU,WAIX,CAAC,OAAQ,CAAE+F,MAAO,gBAAiB9Q,KAAM,SACzC,CAAC,IAAK,YAEV80C,cAAe,CACX,CAAC,uBAAwB,CACrBG,MAAO,CACH,iBAAkB,aAClB,WAAY,iBAIxBE,QAAS,CACL,CAAC,oBAAqB,UACtB,CAAC,sBAAuB,UACxB,CAAC,0CAA2C,WAEhDC,QAAS,CACL,CAAC,IAAK,CAAEtkC,MAAO,SAAU9Q,KAAM,aAEnCq1C,OAAQ,CACJ,CAAC,UAAW,UACZ,CAAC,MAAO,yBACR,CAAC,KAAM,UACP,CAAC,IAAK,CAAEvkC,MAAO,SAAU9Q,KAAM,UAEnCs1C,mBAAoB,CAChB,CAAC,IAAK,CAAExkC,MAAO,mBAAoB9Q,KAAM,uBAE7Cu1C,iBAAkB,CACd,CAAC,QAAS,cACV,CAAC,KAAM,cACP,CAAC,IAAK,CAAEzkC,MAAO,mBAAoB9Q,KAAM,UAE7Cw1C,OAAQ,MDpJZC,GAEAllC,OAAOqB,OAAO8jC,YAAY,oBAAqB,CAC3C7mC,KAAM,UACN8mC,SAAS,EACTC,MAAO,CACH,CAAE9kC,MAAO,YAAa+kC,WAAY,SAAUC,UAAW,UACvD,CAAEhlC,MAAO,aAAc+kC,WAAY,UACnC,CAAE/kC,MAAO,SAAU+kC,WAAY,UAC/B,CAAE/kC,MAAO,OAAQ+kC,WAAY,UAC7B,CAAE/kC,MAAO,aAAc+kC,WAAY,UACnC,CAAE/kC,MAAO,YAAa+kC,WAAY,SAAUC,UAAW,QACvD,CAAEhlC,MAAO,UAAW+kC,WAAY,SAAUC,UAAW,QACrD,CAAEhlC,MAAO,QAAS+kC,WAAY,SAAUC,UAAW,QACnD,CAAEhlC,MAAO,YAAa+kC,WAAY,WAGtCE,OAAQ,CACJ,oBAAqB,UACrB,2BAA8B,UAC9B,4BAA+B,UAC/B,yBAA4B,aAIpCxlC,OAAOqB,OAAO8jC,YAAY,qBAAsB,CAC5C7mC,KAAM,KACN8mC,SAAS,EACTC,MAAO,CACH,CAAE9kC,MAAO,YAAa+kC,WAAY,SAAUC,UAAW,eACvD,CAAEhlC,MAAO,aAAc+kC,WAAY,UACnC,CAAE/kC,MAAO,SAAU+kC,WAAY,UAC/B,CAAE/kC,MAAO,OAAQ+kC,WAAY,SAAUC,UAAW,QAClD,CAAEhlC,MAAO,aAAc+kC,WAAY,UACnC,CAAE/kC,MAAO,YAAa+kC,WAAY,SAAUC,UAAW,QACvD,CAAEhlC,MAAO,UAAW+kC,WAAY,SAAUC,UAAW,QACrD,CAAEhlC,MAAO,UAAW+kC,WAAY,SAAUC,UAAW,WAEzDC,OAAQ,CACJ,oBAAqB,UACrB,oBAAqB,UACrB,qCAAsC,UACtC,+BAAgC,UAChC,qCAAsC,UACtC,sCAAuC,YACvC,iCAAkC,UAClC,8BAA+B,UAC/B,0BAA2B,UAC3B,uBAAwB,UACxB,8BAA+B,UAC/B,+BAAgC,UAChC,2BAA4B,UAC5B,6BAA8B,UAC9B,iCAAkC,OAClC,iCAAkC,UAClC,2BAA8B,UAC9B,4BAA+B,UAC/B,yBAA4B,aAKpCv3C,KAAKoT,OAASrB,OAAOqB,OAAO7W,OAAOg+B,EAAS,GAAI,CAO5CkM,SAAU,SACV+Q,UAAW,CACPC,SAAS,GAKbC,qBAAsB,EACtBC,uBAAwB,OACxBC,sBAAsB,EACtBC,kBAAkB,EAClBC,sBAAuB,GACvBC,SAAU,GACVC,WAAY,wBACZC,WAAY,MACZC,kBAAkB,EAClBC,qBAAqB,EAErBC,iBAAiB,EACjBC,sBAAsB,EACtBC,sBAAsB,EACtBC,WAAY,OACZC,aAAa,EACbC,cAAc,EACdC,eAAe,EACfC,gBAAiB,GACjBC,kBAAmB,GACnBC,QAAS,CACLC,eAAe,EACfC,WAAY,WAGhBC,eAAgB,CAAEvB,SAAS,EAAMwB,OAAO,GAMxCC,eAAgBl5C,KAAKq2B,WAErB8iB,QAAS,CACL1B,QAASz3C,KAAKu0C,aAElB6E,UAAW,CACPC,SAAU,OACVC,WAAY,QAEhBnjC,MAAO,sBAOX,IAAI8f,EAAOj2B,KAEPu5C,EAAqB,SAAC9e,IACA,IAAlBA,EAAMa,UAENrF,EAAKujB,qBAAqB/nC,KAAKT,KAAKypB,EAAMgf,SAAS,GAEnDhf,EAAMmB,mBAmEd,OA9DA57B,KAAKoT,OAAOsmC,0BAAyB,SAACjf,GAC9BA,EAAMkf,WAAW5nC,OAAOqB,OAAOwmC,aAAaC,WAAa,EAAKxjB,YAE9D,EAAK9Y,KAAK8W,eAAeC,aAAawlB,uCAK9C95C,KAAKoT,OAAO2mC,2BAA0B,SAACtf,GAEnCxE,EAAK8jB,0BAA0Btf,EAAMjrB,aAKzCxP,KAAKoT,OAAO4mC,kBAAiB,SAACvf,GAE1B,IAAI3H,EAA+ByH,EAASrJ,KAAK,kBAAkB,GAInE,GAHA4B,EAAQmnB,oBAAoB,QAASV,GACrCzmB,EAAQonB,iBAAiB,QAASX,EAAoB,CAAEY,SAAS,IAE1B,MAAnC,EAAK58B,KAAKwX,sBAAd,CAEA,IAAI/5B,EAAS,EAAKuiB,KAAKwX,sBAAsB2Y,uBAAuB,EAAKt6B,OAAOi+B,YAC5E,EAAK9zB,gBAAgB22B,IAAkB,MAAVl5C,GAE7B,EAAKuiB,KAAK0Z,gBAAgBmjB,+BAA+Bp/C,OAIjE+W,OAAOC,UAAUqoC,sBAAsB,SAAU,IAAIpI,GAAgBjyC,OAErE+R,OAAOC,UAAUsoC,+BAA+B,SAAU,IAAIjN,GAAyBrtC,KAAKud,OAC5FxL,OAAOC,UAAUuoC,2BAA2B,SAAU,IAAIzH,GAAqB9yC,KAAKud,OACpFxL,OAAOC,UAAUwoC,0BAA0B,SAAU,IAAIrH,GAAoBnzC,KAAKud,OAGlFxL,OAAOC,UAAUyoC,8BAA8B,SAAU,IAAIzJ,GAAwBhxC,KAAKud,OAE1Fvd,KAAKoT,OAAOsnC,aAAY,SAACjoC,GACrB,IAAMysB,EAAOzsB,EAAEwsB,OAAOyQ,OAClBj9B,EAAEwsB,OAAOx/B,OAASsS,OAAOqB,OAAOunC,gBAAgBC,qBAChDnoC,EAAEwsB,OAAOx/B,OAASsS,OAAOqB,OAAOunC,gBAAgBE,qBAAuB3b,EAAK4b,cAGhF7kB,EAAK8kB,kBAAkBtoC,EAAEwsB,OAAOzvB,SAAS2oB,eAQ7C4E,YAAW,WACPhrB,OAAOqB,OAAO4nC,mBACf,KAEHh7C,KAAKi7C,aAGLj7C,KAAKoT,OAAO8nC,WAAU,SAACnrC,GAAWkmB,EAAKilB,UAAUnrC,MAE1C/P,KAAKoT,SApNpB,uBAwNI,SAAUrD,GAAY,WAGZorC,EAAqB,SAACntC,EAAKohC,EAAoBgM,EAAiBC,GAClE,IAAM1oC,EAAQ,IAAIZ,OAAOupC,MACrBttC,EAAImqB,WACJnqB,EAAIE,OACJF,EAAImqB,WACJnqB,EAAIE,QAER,EAAKkF,OAAOmoC,aAAa,cAAe,CACpC,CAAE5oC,QAAO5C,KAAMq/B,KAInB,EAAKh8B,OAAOooC,YAAY,CACpBrjB,WAAYijB,EACZltC,OAAQmtC,KAIhB,GAAa,OAATtrC,EAAe,CACf,IAAMoC,EAAQnS,KAAKoT,OAAOi+B,WACpB7hC,EAAWxP,KAAKoT,OAAOqoC,cACvBC,EAAWvpC,EAAMwpC,eAAensC,EAAS2oB,WAAa,GAC5D,GAAsC,IAAlCujB,EAASjwB,OAAOpc,QAAQ,QAAgBqsC,EAASE,YAAYC,SAAS,SACrDrsC,EAAS2oB,WAAahmB,EAAM2pC,eAAiB3pC,EAAMwpC,eAAensC,EAAS2oB,WAAa,GAAK,IAChG1M,OAAOsY,WAAW,KAAM,CAClC,IAAIgY,EAAkCL,EAASxoC,OAAO,EAAGwoC,EAASj5C,OAASi5C,EAASM,WAAWv5C,QACxD,IAAnCi5C,EAASjwB,OAAOpc,QAAQ,OACxB8rC,EAAmB3rC,EAAU,KAAOusC,EAA0B,MAAOvsC,EAAS2oB,WAAY3oB,EAAStB,OAAS,EAAI6tC,EAAwBt5C,QAExI04C,EAAmB3rC,EAAU,QAAUusC,EAA0B,MAAOvsC,EAAS2oB,WAAY3oB,EAAStB,OAAS,EAAI6tC,EAAwBt5C,YAxPnK,yBAkQI,SAAYw5C,GAGR,IAAIza,GAAO,IAAI0a,MAAOC,UACtB,KAAI3a,EAAOxhC,KAAK00C,SAAW,KAA3B,CACA10C,KAAK00C,SAAWlT,EAEhB,IAAI4a,EAAWp8C,KAAKoT,OAAOipC,aAAavgD,IAAIiW,OAAOqB,OAAOwmC,aAAa7B,UAMvE,GAJI/3C,KAAKud,gBAAgB22B,IACrBl0C,KAAKud,KAAK++B,mBAAmBC,aAAaN,GAG1CA,GAAcG,EAAU,CACxBp8C,KAAKoT,OAAOyiB,cAAc,CACtBkiB,SAAUkE,IAKd,IACIO,EADcx8C,KAAKoT,OAAOipC,aAAavgD,IAAIiW,OAAOqB,OAAOwmC,aAAa7B,UAC/CkE,EAC3Bj8C,KAAKoT,OAAOyiB,cAAc,CACtBkiB,SAAUkE,EAAaO,IAK/BhiB,OAAO,sBAAsB8B,IAAI,YAAa2f,EAAa,MAC3DzhB,OAAO,sBAAsB8B,IAAI,cAAgB2f,EAAa,EAAK,MAEnEzlC,SAASC,gBAAgBE,MAAMC,YAAY,oBAAqBqlC,EAAa,MAC7EzlC,SAASC,gBAAgBE,MAAMC,YAAY,sBAAuBqlC,EAAa,EAAI,MAGnFj8C,KAAKud,KAAK8W,eAAeC,aAAawlB,uCArS9C,kCAySI,SAAqB7mC,GAAsC,IAAvBwpC,IAAuB,yDACnDL,EAAWp8C,KAAKoT,OAAOipC,aAAavgD,IAAIiW,OAAOqB,OAAOwmC,aAAa7B,UAEnE0E,IAEIxpC,GADAmpC,EAAW,GACF,EACFA,EAAW,GACT,EAEA,GAIjB,IAAIM,EAAcN,EAAWnpC,EACzBypC,GAAe,GAAKA,GAAe,IACnC18C,KAAK28C,YAAYD,KAxT7B,wBA6TI,WACI,IAAIzmB,EAAOj2B,KAEXA,KAAKoT,OAAOwpC,UAAU,CAElBnmB,GAAI,eAGJgZ,MAAO,kCAGPoN,YAAa,CACT9qC,OAAO+qC,OAAOC,QAAUhrC,OAAOirC,QAAQC,OAG3CC,aAAc,KAGdC,kBAAmB,KAEnBC,mBAAoB,aAEpBC,iBAAkB,IAIlBC,IAAK,SAAUC,GAEX,OADAA,EAAGC,UAAU,+BAA+BF,MACrC,QAIft9C,KAAKoT,OAAOwpC,UAAU,CAElBnmB,GAAI,oBAGJgZ,MAAO,0BAGPoN,YAAa,CACT9qC,OAAO+qC,OAAOC,QAAUhrC,OAAOirC,QAAQS,OAG3CP,aAAc,KAGdC,kBAAmB,KAEnBC,mBAAoB,aAEpBC,iBAAkB,EAIlBC,IAAK,SAAUC,GAEX,OADAtnB,EAAK1Y,KAAKmgC,mBAAmBve,QAAQ,WAC9B,UAtXvB,+BA6XI,SAAkBhH,MA7XtB,uCAkYI,SAA0B3oB,GAEN,MAAZA,IAAkBA,EAAWxP,KAAKoT,OAAOqoC,eAE7C,IAAIzgD,EAASgF,KAAKo0B,2BAClB,GAAc,MAAVp5B,EAAJ,CAKA,IAAI83B,EAAU93B,EAAOo3C,qBAAqB5iC,EAAS2oB,WAAY3oB,EAAStB,QAEpEyvC,EAAqD,GAEzD,GAAe,MAAX7qB,EAAiB,CACjB,IACIwgB,EADiBxgB,EAAQsgB,eACUt3C,IAAId,GAC3C,GAAyB,MAArBs4C,EAA2B,YACZA,GADY,IAC3B,2BAAkC,KAAzBC,EAAyB,QAC9BoK,EAAYz7C,KAAK,CACbyQ,MAAO,CAAEI,YAAawgC,EAAGrlC,OAAQ2E,gBAAiB0gC,EAAGtlC,KAAM6E,UAAWygC,EAAGrlC,OAASqlC,EAAG9wC,OAAQmQ,cAAe2gC,EAAGtlC,MAC/GoE,QAAS,CACLurC,UAAW,yBAA0BC,aAAa,EAAOC,cAAe,CACpErhB,MAAO,CAAEhG,GAAI,gCACbsnB,UAAW,CAAEtnB,GAAI,sCACjBjnB,SAAUuC,OAAOqB,OAAO4qC,kBAAkBC,UAR/B,gCAmBnC,IApCsE,EAoClEC,GAAsB,EApC4C,KAsC9CljD,EAAOmjD,4BAA4Bn+C,KAAKoT,OAAO++B,iBAtCD,IAsCtE,2BAAuF,KAA/EiM,EAA+E,QAE/EC,EAAY,6BACI,MAAhBD,IACIA,EAAax/B,WACby/B,EAAY,2BACRD,EAAan/B,mBACbo/B,EAAY,8BACZH,GAAsB,IAG1BA,GAAsB,EAG1BP,EAAYz7C,KAAK,CACbyQ,MAAO,CACHI,YAAaqrC,EAAat/B,KAAK5Q,OAAQ2E,gBAAiBurC,EAAat/B,KAAK7Q,KAC1E6E,UAAWsrC,EAAar/B,GAAG7Q,OAAQ0E,cAAewrC,EAAar/B,GAAG9Q,MAEtEoE,QAAS,CACLurC,UAAWS,EAAWR,aAAa,EAAOC,cAAe,CACrDrhB,MAAO,CAAEhG,GAAI4nB,GACbN,UAAW,CAAEtnB,GAAI4nB,GACjB7uC,SAAUuC,OAAOqB,OAAO4qC,kBAAkBC,MAE9C9E,QAAS,CACL1c,MAAO,CAAEhG,GAAI4nB,GACb7uC,SAAUuC,OAAOqB,OAAOkrC,gBAAgBC,QAE5CC,QAAS,SAnE6C,8BA2EtEx+C,KAAKud,KAAKmgC,mBAAmBe,UAAU,UAAWP,GAE/CA,IAAwBl+C,KAAKud,KAAK8Y,cACjCmd,GAAOkL,WAAW,mBAAyB1+C,KAAKud,KAAMid,OAAO,uBAIjEx6B,KAAK20C,kBAAoB30C,KAAKoT,OAAOurC,iBAAiB3+C,KAAK20C,kBAAmBgJ,QA5E1E39C,KAAK20C,kBAAoB30C,KAAKoT,OAAOurC,iBAAiB3+C,KAAK20C,kBAAmB,MAxY1F,sCAwdI,WACI,OAAO30C,KAAKud,KAAK6W,gC,gFAzdzB,K,uKEbO,IAAMwqB,GAAb,yB,4FAAA,SAGI,KAAAC,QAAUC,UAAU,CAACC,WAAY,SAACxpB,EAAMypB,GAAP,MAA2B,iE,UAHhE,O,EAAA,G,EAAA,kCAWI,SAAoB5hC,GAChBpd,KAAKukC,UAAU,CAACrF,KAAM9hB,MAZ9B,yBAeI,SAAY8hB,GAAS,WACbjJ,EAAOj2B,KACI,MAAXi2B,EAAKoM,GACLpM,EAAK4oB,QAAQ59C,MAAK,SAACg+C,GACfhpB,EAAKipB,IAAMD,EACXhpB,EAAKoM,GAAK8c,SAASF,OAAM79C,GACzB60B,EAAKmpB,OAAOlgB,MACbmE,OAAM,SAACvlC,GAGN,OAFAoiC,QAAQ6E,IAAIjnC,GAELm4B,EAAKopB,oBAAoB,CAC5B5oB,GAAI,EAAI,KAAJ,GACJt1B,MAAOrD,EAAG,aAIlBm4B,EAAKmpB,OAAOlgB,KA/BxB,uBAmCI,cAnCJ,oBAuCI,SAAOA,GACH,IAAIogB,EAAUv+C,EACVw+C,EAASrgB,EAAI,OAAaA,EAAI,OAAa,GAC/C,IACI,OAAQA,GAAQA,EAAI,QAChB,IAAK,OAID,OAHAogB,EAAOpgB,EAAI,OACXl/B,KAAKqiC,GAAK8c,SAASn/C,KAAKk/C,IAAKI,GAAQ,IAAIlc,WAAWkc,IAE7Ct/C,KAAKq/C,oBAAoB,CAC5B5oB,GAAIyI,EAAI,GACRsgB,OAAO,IAEf,IAAK,OAID,GAHgB,OAAZx/C,KAAKqiC,KACLriC,KAAKqiC,GAAK8c,SAASn/C,KAAKk/C,SAAK99C,KAE5B89B,EAAI,IACL,KAAM,6BAGV,OAAOl/B,KAAKq/C,oBAAoB,CAC5B5oB,GAAIyI,EAAI,GACRugB,QAASz/C,KAAKqiC,GAAGqd,KAAKxgB,EAAI,IAASA,EAAI,OAAYqgB,KAE3D,IAAK,OAmBD,OAlBgB,OAAZv/C,KAAKqiC,KACLriC,KAAKqiC,GAAK8c,SAASn/C,KAAKk/C,SAAK99C,IAiB1BpB,KAAKqiC,GAAG8J,KAAKjN,EAAI,IAASA,EAAI,QAftB,SAAkBygB,GAE7B,OAAO3/C,KAAK4/C,YAAY,CACpBnpB,GAAIyI,EAAI,GACRygB,IAAKA,EACLE,UAAU,OAGP,WAEP,OAAO7/C,KAAK4/C,YAAY,CACpBnpB,GAAIyI,EAAI,GACR2gB,UAAU,MAG+CN,GACrE,IAAK,SACDD,EAAOt/C,KAAKqiC,GAAL,SACPthC,EAAS,CACL01B,GAAIyI,EAAI,GACRugB,QAAS,CACL,CACItc,OAAQmc,KAIpB,IAEI,OAAOt/C,KAAKq/C,oBAAoBt+C,GAClC,MAAOI,GAEL,OAAOnB,KAAKq/C,oBAAoBt+C,GAExC,IAAK,QAKD,OAJIf,KAAKqiC,IACLriC,KAAKqiC,GAAGyR,QAGL9zC,KAAKq/C,oBAAoB,CAC5B5oB,GAAIyI,EAAI,KAEhB,QACI,MAAM,IAAIrgC,MAAM,qBAAuBqgC,GAAQA,EAAI,UAG7D,MAAOphC,GAGL,OAAOkC,KAAKq/C,oBAAoB,CAC5B5oB,GAAIyI,EAAI,GACR/9B,MAAOrD,EAAG,gB,gFAtH1B,K,+rCCkDO,IAAMgiD,GAAb,WAaI,WAAoBviC,I,4FAAc,SAAd,KAAAA,OAXpB,KAAAwiC,yBAAqD,KAIrD,KAAAC,QAAkB,EAElB,KAAAC,yBAA8D,IAAI7oC,IAClE,KAAA8oC,sBAAyD,IAAI9oC,I,UATjE,O,EAAA,E,EAAA,0BAmTI,SAAmB4zB,GAMf,IAJA,IAAImV,EAA6B,CAAC,GAAM,GAAM,GAAM,IAAM,IAAM,KAG5D1tB,GAAiB,EACZx3B,EAAI,EAAGA,EAAIklD,EAAiB19C,OAAQxH,IACzC,GAAIklD,EAAiBllD,IAAM+vC,EAAK/vC,GAAI,CAChCw3B,GAAQ,EACR,MAGR,OAAIA,EAAc,qBATU,KAWxBuY,EAAK,GAA4B,mBAE9B,Y,EAnUf,+BAiBI,SAAiB1C,EAAsB8X,EAAmBC,EACtDC,GAA6C,WAE7CtgD,KAAKud,KAAKgjC,iBAAiBnjB,KAAK,qDAET,MAAfp9B,KAAKo/C,QACTp/C,KAAKo/C,OAAOoB,YAGR7sB,YAAYC,MAApB,IAII+M,EAAc,iCACf3gC,KAAKud,KAAK8Y,eAETsK,EAAMxE,OAAOskB,cAAgB9f,GAI9BxE,OAAOukB,OAEN1gD,KAAKo/C,OAAS,IAAIR,GAElB5+C,KAAKo/C,OAAS,IAAIuB,OAAOhgB,GAE7B,IAAI1K,EAAOj2B,KAEPsO,EAAmB,GAEvBtO,KAAKo/C,OAAO7a,UAAY,WAEpBtO,EAAKmpB,OAAO7a,UAAY,SAAA9J,GAIpB,IAAIhE,EAAKgE,EAAMyE,KAAKzI,GACpB,GAAwB,MAApBgE,EAAMyE,KAAK/9B,MAAe,CAC1B,IAAIy/C,EAAuB3qB,EAAKgqB,yBAAyBnkD,IAAI26B,GACjC,MAAxBmqB,GACAA,EAAqBnmB,EAAMyE,KAAKugB,aAEjC,CACH,IAAIoB,EAAqB5qB,EAAKiqB,sBAAsBpkD,IAAI26B,GAC9B,MAAtBoqB,GACAA,EAAmBpmB,EAAMyE,KAAK/9B,OAStC,EAAK++C,sBAAsBY,OAAOrqB,GAClC,EAAKwpB,yBAAyBa,OAAOrqB,IAI3B,MAAX2pB,IAAiBA,EAAU,KAC9BA,EAAUA,EAAQx8C,SACVijB,QAAQ,8BAChBu5B,EAAQl+C,KAAK,6BACb,IAAI6+C,EAAaX,EAAQ39C,QAET,SAAZu+C,IACA,GAAIZ,EAAQ39C,OAAS,EAAG,CACpB,EAAK8a,KAAKgjC,iBAAiBU,YAA3B,UAA0CxvC,KAAK2H,MAAoC,KAA7B,EAAEgnC,EAAQ39C,OAAOs+C,IAAmB,OAC1F,IAAIp4B,EAAQy3B,EAAQc,QACpBjrB,EAAKkrB,aAAax4B,GAAO,SAAC5nB,GACtBigD,OACD,SAAC7/C,GACAmN,EAAOpM,KAAK,oCAAsCf,EAAQ,YAAcwnB,GACxEuX,QAAQ6E,IAAI,CAAC,MAAS,oCAAsC5jC,EAAO,MAASwnB,IAC5EuX,QAAQ6E,MACRic,YAG6B,MAA7BX,GAAmCA,EAA0B/xC,GACjE2nB,EAAKmrB,2BAA0B,WAEvBd,GAAkCA,IACtC,EAAK/iC,KAAKgjC,iBAAiBzjB,UAMvCkkB,IAwBJhhD,KAAKo/C,OAAOjb,QAAU,SAAC1xB,GACnBnE,EAAOpM,KAAK,iBAAmBuQ,EAAEtR,OACjC++B,QAAQ6E,IAAI,iBAAmBtyB,EAAEtR,QAGrCnB,KAAKo/C,OAAOQ,YAAY,CACpBnpB,GAAIR,EAAK+pB,UACTnlB,OAAQ,OACRsI,OAAQmF,MAzIpB,0BA8II,SAAa3f,EAAe0Y,EAAuCC,GAE/D,IAAI7K,EAAKz2B,KAAKggD,UAEdhgD,KAAKigD,yBAAyBnoC,IAAI2e,EAAI4K,GACtCrhC,KAAKkgD,sBAAsBpoC,IAAI2e,EAAI6K,GAEnCthC,KAAKo/C,OAAOQ,YAAY,CACpBnpB,GAAIA,EACJoE,OAAQ,OACRwmB,IAAK14B,EACL24B,OAAQ,OAzJpB,oBA8JI,SAAOjgB,EAA+CC,GAElD,IAAI7K,EAAKz2B,KAAKggD,UAEdhgD,KAAKigD,yBAAyBnoC,IAAI2e,GAAI,SAACgpB,GAAcpe,EAAgBoe,EAAQ,GAAGtc,WAChFnjC,KAAKkgD,sBAAsBpoC,IAAI2e,EAAI6K,GAEnCthC,KAAKo/C,OAAOQ,YAAY,CACpBnpB,GAAIA,EACJoE,OAAQ,SACRymB,OAAQ,OAxKpB,iCA+KI,SAAoBpjB,GACqB,MAAjCl+B,KAAK+/C,yBACL7hB,EAASl+B,KAAK+/C,0BAEdvlB,OAAO+mB,QAAQ,mCAAmC,SAAUC,GACxDtjB,EAASsjB,QApLzB,uCAyLI,SAA0BtjB,GAAkD,WAMpEjI,EAAOj2B,KAEXA,KAAKmhD,aAHK,2DAGa,SAACpgD,G,QAChB0gD,EAAO,GACM,QAAjB,EAAS,QAAT,EAAA1gD,EAAO,UAAE2uB,WAAA,EAAAA,EAAEtvB,cAAMqwC,SAAElwC,SAAQ,SAAArE,GAAK,OAAIulD,GAAQ,qBAAJ,OAAyBvlD,EAAM,GAA/B,uCAAgEA,EAAM,GAAtE,oCAAoGA,EAAM,GAA1G,YAE5B,IAARulD,EACA,EAAKN,aAAaM,GAAM,SAACC,GAIrBzrB,EAAKtJ,kBAAoBsJ,EAAK0rB,uBAAuB5gD,EAAQ2gD,GAE7DxjB,EAASjI,EAAKtJ,sBAEf,SAACxrB,GAAY++B,QAAQ6E,IAAI5jC,OAE5B80B,EAAKtJ,kBAAoB,CAAEZ,OAAQ,IACnCmS,EAASjI,EAAKtJ,uBAGnB,SAACxrB,GAAY++B,QAAQ6E,IAAI5jC,QApNpC,oCAyNI,SAAuB4qB,EAAuBhI,GAAsB,WAChE/jB,KAAK2sB,kBAAoB,CACrBZ,OAAQ,IAMZ,IAHA,IAAI61B,EAAuD,IAAIxqC,IAE3D+K,EAAQ,EAPoD,WAQvDlnB,GACL,IAAI4mD,EAAY91B,EAAO,GAAG3rB,OAAOnF,GAAG,GAChC6mD,EAAW/1B,EAAO,GAAG3rB,OAAOnF,GAAG,GAE/B8mD,EAAiC,CACjCvmD,KAAMqmD,EACNh2B,KAAM,EACNm2B,YAAaF,EACb/9B,QAAS,IAGb69B,EAAwB9pC,IAAI+pC,EAAWE,GAEvC,EAAKp1B,kBAAkBZ,OAAO7pB,KAAK6/C,GAEnC,IAAIE,EAAcl+B,EAAQ5B,GAAO/hB,OAC7B8hD,EAA0B,KAC1Bn+B,EAAQthB,OAAS0f,EAAQ,GAAsC,MAAjC4B,EAAQ5B,EAAQ,GAAG4B,QAAQ,KACzDm+B,EAAiBn+B,EAAQ5B,EAAQ,GAAG/hB,OACpC+hB,KAEJA,IACA,IAAI0J,EAAe9H,EAAQ5B,GAAO/hB,OAAO,GAAG,GAC5C+hB,IAEA4/B,EAAel2B,KAAOA,EAEtBo2B,EAAY1hD,SAAQ,SAAA4hD,GACEA,EAAa,GAA/B,IACI3mD,EAAe2mD,EAAa,GAC5B1iD,EAAe0iD,EAAa,GAC5Bl+B,EAAsC,GAAnBk+B,EAAa,GAChCC,EAAqBD,EAAa,GAClCn3B,EAA2C,GAAnBm3B,EAAa,GAErCE,EAAmC,CACnC7mD,KAAMA,EACNwvB,aAAcA,EACdlH,gBAAiBkH,GAAgB82B,EAASlwC,cAAcvC,QAAQ,kBAAoB,EACpF+b,gBAAiB3rB,EACjB4lB,MAAO08B,EACPO,YAAa,GACbv9B,aAAcq9B,EACdn+B,QAASA,GAQb,GAAsB,MAAlBi+B,EAAwB,CACxB,IAAIK,EAAgBL,EAAehxB,MAAK,SAAArM,GAAc,OAAIA,EAAe,GAAGrM,qBAAuBhd,EAAKgd,uBAC1F,MAAV+pC,IACAF,EAAgBG,kBAAoBD,GAI5CR,EAAeh+B,QAAQ7hB,KAAKmgD,OA1D3BpnD,EAAI,EAAGA,EAAI8wB,EAAO,GAAG3rB,OAAOqC,OAAQxH,IAAK,EAAzCA,GARuD,WAwEjD+E,KAAK2sB,kBAAkBZ,QAxE0B,IAwEhE,2BAA8C,oBACxBhI,SADwB,yBACjCmH,EADiC,QAEtC,GAA4B,MAAxBA,EAAGs3B,kBAA2B,CAC9B,IAAIn9B,EAAQu8B,EAAwB9lD,IAAIovB,EAAGs3B,kBAAkB,IAE7D,GAAY,MAATn9B,EAAe,iBAClB,IAAInX,EAASmX,EAAMtB,QAAQmN,MAAK,SAAA51B,GAAC,OAAIA,EAAEE,KAAKgd,qBAAuB0S,EAAGs3B,kBAAkB,GAAGhqC,uBAC3F0S,EAAGiB,WAAaje,IANxB,2BAA2B,IADe,gCAxEkB,8BAsFhE,OAAOlO,KAAK2sB,uB,gFA/SpB,K,+rCC9CO,IAAM81B,GAAb,yB,4FAAA,SAEI,KAAAC,iBAA2B,I,UAF/B,O,EAAA,G,EAAA,oBAII,SAAM9yB,GACF,OAAQA,EAAU/Q,IAAIpf,MAClB,KAAKsF,EAAU0B,cAEX,OADAmpB,EAAU+yB,WAAa3iD,KAAK4iD,0BAA0BhzB,EAAU/Q,KACzD+Q,EAAU+yB,WACrB,KAAK59C,EAAUmB,cACX,OAA2B,MAAxB0pB,EAAU/Q,IAAI4G,OACNmK,EAAUyxB,KAEjBzxB,EAAU+yB,WAAa3iD,KAAK6iD,qBAAqBjzB,EAAU/Q,KACpD+Q,EAAU+yB,YAEzB,QACI,OAAO/yB,EAAUyxB,OAjBjC,kCAsBI,SAAqBxiC,GAAe,WAC5BikC,EAAe,sBAA0BjkC,EAAIwG,MAAMngB,YAEjC,MAAlB2Z,EAAIwE,YAAsBxE,EAAIwE,WAAW5gB,OAAS,IAClDqgD,GAAmB,IAAJ,OAAQjkC,EAAIwE,WAAWxL,KAAI,SAAAvc,GAAC,OAAIA,EAAE4J,cAAY8T,KAAK,MAAnD,MAGnB8pC,GAAmB,aAEnB,IAAIpkC,EAAK,GAELqkC,EAAkB,GACtB,GAAkB,MAAdlkC,EAAIze,QAAkBye,EAAIze,OAAOqC,OAAS,EAAG,YAC3Boc,EAAIze,QADuB,IAC7C,2BAA8B,KAArB4iD,EAAqB,QAC1BD,EAAM7gD,KAAN,aAAiB8gD,EAAMnrC,KAAI,SAAA4B,GAAC,OAAI,EAAKwpC,WAAWxpC,MAAIT,KAAK,MAAzD,OAFyC,+BAOjD,KAAO+pC,EAAMtgD,OAAS,GAClBic,GAAMokC,EACNpkC,GAAMqkC,EAAM/vC,OAAO,EAAGvB,KAAK6G,IAAItY,KAAK0iD,iBAAkBK,EAAMtgD,SAASuW,KAAK,OAC1E0F,GAAM,MAGV,OAAOA,IA/Cf,wBAmDI,SAAWjF,GACP,GAAIA,EAAEoM,cAAgB9gB,EAAUO,eAAgB,CAC5C,IAAItI,EAAYyc,EAAEqM,SAElB,OADA9oB,EAAIA,EAAE2Q,QAAQ,KAAM,MACpB,WAAW3Q,EAAX,KAEA,OAAOyc,EAAEqM,WAzDrB,uCA6DI,SAA0BjH,GAAoB,WACtCH,EAAE,uBAA2BG,EAAIsE,YAAc,iBAAmB,GAAhE,YAAsEtE,EAAI3Z,WAA1E,UAENwZ,GAAMG,EAAIwE,WAAWxL,KAAI,SAAA3J,GAAM,OAAI,EAAKg1C,eAAeh1C,MAAS8K,KAAK,UACvC,MAA1B6F,EAAI0E,oBAA8B1E,EAAI0E,mBAAmB9gB,OAAS,IAClEic,GAAM,SAAWG,EAAI0E,mBAAmB1L,KAAI,SAAA0J,GAAG,OAAI,EAAK4hC,oBAAoB5hC,MAAMvI,KAAK,WAG3F,IAR0C,EAQtCoqC,EAAMvkC,EAAIyE,0BAA0B1f,QAAQiU,KAAI,SAAA7a,GAAC,OAAIA,EAAEwb,uBARjB,KASvBqG,EAAIwE,YATmB,IAS1C,2BAAmC,KAA1BnV,EAA0B,QAC3B5S,EAAI4S,EAAOhJ,WAAWsT,oBACtBtK,EAAO4V,iBAAmBs/B,EAAI/zC,QAAQ/T,IAAM,GAC5C8nD,EAAIpwC,OAAOowC,EAAI/zC,QAAQ/T,GAAI,IAZO,8BA0B1C,OAVI8nD,EAAI3gD,OAAS,IACbic,GAAM,qBAAJ,OAAyB0kC,EAAIpqC,KAAK,MAAlC,MAGF6F,EAAI2E,kBAAkB/gB,OAAS,IAC/Bic,GAAM,SAAWG,EAAI2E,kBAAkB3L,KAAI,SAAAwrC,GAAE,MAAI,UAAYA,EAAGrqC,KAAK,MAAQ,OAAKA,KAAK,WAG3F0F,GAAM,SArFd,iCA0FI,SAAoB6C,GAChB,IAAI+hC,EAAY,gBAAH,OAAmB/hC,EAAIrT,OAAvB,wBAA6CqT,EAAIG,gBAAjD,YAAoEH,EAAII,iBAAxE,KAOb,OANIJ,EAAIgiC,WACJD,GAAa,cAAgB/hC,EAAIgiC,UAEjChiC,EAAIiiC,WACJF,GAAa,cAAgB/hC,EAAIiiC,UAE9BF,IAlGf,4BAqGI,SAAep1C,GAEX,IAAIzO,EAAOyO,EAAO2K,SAAS6L,WACf,OAARjlB,GAAiByO,EAAO4V,kBACxBrkB,EAAO,WAGX,IAAIif,EAAE,UAAcxQ,EAAOhJ,WAArB,YAAmCzF,GAgBzC,GAfyB,MAArByO,EAAO6K,YAAsB7K,EAAO6K,WAAWtW,OAAS,IAAMyL,EAAO4V,kBACrEpF,GAAM,IAAJ,OAAQxQ,EAAO6K,WAAWC,KAAK,MAA/B,MAEF9K,EAAO+V,UACPvF,GAAM,aAEiB,MAAvBxQ,EAAO6W,eACPrG,GAAM,YAAcxQ,EAAO6W,eAE3B7W,EAAO2V,WAAa3V,EAAO4V,mBAC3BpF,GAAM,gBAENxQ,EAAO4V,kBACPpF,GAAM,kBAEmB,MAAzBxQ,EAAO2W,eAAwB,CAC/B,IAAItD,EAAMrT,EAAO2W,eACbvpB,EAAYimB,EAAII,iBAChBJ,EAAIG,kBAAiBpmB,EAAIimB,EAAIG,gBAAkB,IAAMpmB,EAAI,KAC7DojB,GAAM,eAAiBpjB,EAE3B,GAAsB,MAAlB4S,EAAO4W,QAAiB,CACxB,IAAIA,EAAU5W,EAAO4W,QAAQtM,oBACzB,CAAC,SAAU,SAAU,SAASnJ,QAAQyV,IAAY,IAClDpG,GAAM,YAAcoG,GAG5B,IAAI/L,EAAa7K,EAAO6K,WAAa7K,EAAO6K,WAAa,CAAC,EAAG,GACzD/B,EAAgB9I,EAAO2K,SAAS7B,cAAc9I,EAAOhJ,WAAY6T,GAIrE,MAHqB,IAAjB/B,IACA0H,GAAM,IAAM1H,GAET0H,O,gFA7If,K,0+CCMa+kC,GAAb,WAMI,WAAoBlmC,I,4FAAc,SAAd,KAAAA,O,UANxB,O,EAAA,G,EAAA,0BAUU,SAAYojB,G,4JACH,MAAPA,EAAO,C,mDAEP5wB,EAAO,MACP4wB,EAAIkb,SAAS,QAAb,C,eACO,O,SAAM77C,KAAK0jD,SAAS/iB,G,OAA3B5wB,S,uBAEc,O,UAAM4zC,MAAMhjB,G,QAAnB,O,UAAA,OAAyB5wB,O,QAAhCA,S,iCAGG/P,KAAK4jD,eAAe7zC,I,mDApBnC,0BAuBU,SAAagkB,G,mKACH,MAARA,EAAQ,C,oDAERA,EAAKv4B,KAAKqgD,SAAS,QAAnB,C,eACW,O,SAAM77C,KAAK6jD,UAAU9vB,G,cAA5BhkB,S,kBACG/P,KAAK4jD,eAAe7zC,I,gCAGpB,IAAI3M,SACP,SAACxC,EAASC,GACN,IAAIijD,EAAS,IAAIC,WACjBD,EAAOE,OAAS,SAACvpB,GACb,IAAI1qB,EAAe0qB,EAAMwE,OAAOl+B,OAChCH,EAAQ,EAAKgjD,eAAe7zC,KAEhC+zC,EAAOG,WAAWlwB,O,mDAtCtC,sBA8CU,SAAS4M,G,gKAELmjB,EAAS,IAAII,IAAIC,UAAU,IAAID,IAAIE,WAAWzjB,I,kBAC7C3gC,KAAKqkD,YAAYP,I,kDAjDhC,uBAoDU,SAAU/vB,G,gKAGN+vB,EAAS,IAAII,IAAIC,UAAU,IAAID,IAAII,WAAWvwB,I,kBAC7C/zB,KAAKqkD,YAAYP,I,kDAxDhC,yBA2DU,SAAYA,G,2JAEA,O,SAAMA,EAAOS,a,UAC3B/C,GADIA,UACch0B,QAAO,SAAA5rB,GAAK,OAAIA,EAAM4iD,SAAS3I,SAAS,WACtD9rC,EAAe,MACfyxC,EAAQ/+C,OAAQA,C,eAGT,O,SAAM++C,EAAQ,GAAGiD,QAGpB,IAAIP,IAAIQ,WAER,CACIC,WAAY,SAACxiC,EAAO7J,O,OAN5BvI,S,OAcJ,O,UAAM+zC,EAAOhQ,Q,iCAEN/jC,G,8CAnFf,4BAsFkB,SAAeA,G,kMACb,MAARA,EAAQ,C,wCAAa,M,OAErB8jB,EAAe,IAAI7mB,EACnB43C,EAAY/wB,EAAMrgB,IAAIzD,GAEtB0kB,EAAiB,IAAI7Y,IACrBvgB,EAAY,IAAI85B,GAAO,CACvBnB,OAAO,EACPx4B,KAAM,GACN46B,OAAO,EACPO,+BAA+B,EAC/B6B,eAAgB,KAChBzoB,KAAMA,EACN2mB,qBAAsB,KACtB+B,QAAS,GACVz4B,KAAKud,OACN3P,UAAYg3C,EAAUv2C,OAExBomB,EAAOC,MAAMr5B,GAEb2E,KAAK6kD,iBAAmBxpD,EAAE4gB,cAAcuR,QAAO,SAAA9O,GAAE,OAAIA,EAAGG,IAAIpf,MAAQsF,EAAU0B,iBAAeoR,KAAI,SAAA6G,GAAE,OAAqBA,EAAGG,OAC3H7e,KAAK8kD,YAAczpD,EAAE4gB,cAAcuR,QAAO,SAAA9O,GAAE,OAAIA,EAAGG,IAAIpf,MAAQsF,EAAUmB,iBAAe2R,KAAI,SAAA6G,GAAE,OAAgBA,EAAGG,OACjH7e,KAAK+kD,oBAAsB1pD,EAAE4gB,cAAcuR,QAAO,SAAA9O,GAAE,OAAIA,EAAGG,IAAIpf,MAAQsF,EAAUc,cAC5C,eAAhB6Y,EAAGG,IAAKuB,QAAuBvI,KAAI,SAAA6G,GAAE,OAAoBA,EAAGG,O,KAEjE7e,KAAK+kD,qB,8DAAZC,UAEkB,OADnB5zB,EAAkBpxB,KAAKilD,oBAAoBD,EAAI3kC,kBAC5B,C,uDAYvB,GAVuB,MAAnB2kC,EAAI9iC,cACJkP,EAAgB9N,0BAA4B0hC,EAAI9iC,YAChDkP,EAAgB/N,WAAW9iB,SAAQ,SAAAjF,GAAC,OAAIA,EAAEuoB,WAAY,MAG3B,MAA3BmhC,EAAIE,qBAEO,OADPC,EAAMnlD,KAAKolD,0BAA0Bh0B,EAAiB4zB,EAAIE,wBAC7CC,EAAIthC,WAAY,GAGT,MAAxBmhC,EAAIhjC,iBAA0B,MACdgjC,EAAIhjC,kBADU,IAC9B,2BAASqjC,EAA6B,QAC9BC,EAAMtlD,KAAKolD,0BAA0Bh0B,EAAiBi0B,EAAIngD,YAC1Did,EAAQiP,EAAgB/N,WAAWhU,QAAQi2C,GAC/Cl0B,EAAgB/N,WAAWrQ,OAAOmP,EAAO,EAAGkjC,GAJlB,+BAQlC,GAAuB,MAAnBL,EAAIvjC,YAAqB,MACVujC,EAAIvjC,aADM,IACzB,2BAAS8jC,EAAuB,QAC5Bn0B,EAAgB7N,mBAAmBrhB,KAAKqjD,GAFnB,+BAM7B,GAAmB,MAAfP,EAAI3iC,QAAiB,MACH2iC,EAAI3iC,SADD,IACrB,2BAASF,EAAsB,QAC3B9mB,EAAE4gB,cAAc/Z,KAAK,CACjB+c,kBAAkB,EAClBH,KAAM,KAAMC,GAAI,KAAMH,WAAW,EACjCC,IAAK,CACDpf,KAAMsF,EAAUoC,aAChB+oC,iBAAkB/tB,EAAMjU,OACxBs3C,gBAAiBrjC,EAAMC,WACvB/B,gBAAiB2kC,EAAI3kC,gBACrBY,OAAQkB,EAAMlB,OACdzR,SAAU,KAAM0Q,YAAa,KAAMC,YAAa,MAEpDkhC,IAAK,UAAF,OAAYl/B,EAAMlB,OAAS,UAAY,GAAvC,kBAAmDkB,EAAMC,WAAzD,eAA0E4iC,EAAI3kC,gBAA9E,YAAiG8B,EAAMjU,OAAvG,QAbU,+B,0KAmBtBlO,KAAKylD,aAAapqD,EAAE4gB,gB,mEA/JnC,iCAkKY,SAAoBoE,GAExB,OADAA,EAAkBA,EAAgB7H,oBAC3BxY,KAAK6kD,iBAAiB3zB,MAAK,SAAAlR,GAAI,OAAIA,EAAK9a,WAAWsT,qBAAuB6H,OApKzF,uCAuKY,SAA0BqlC,EAA4BxV,GAE1D,OADAA,EAAmBA,EAAiB13B,oBAC7BktC,EAAUriC,WAAW6N,MAAK,SAAAtN,GAAU,OAAIA,EAAW1e,WAAWsT,qBAAuB03B,OAzKpG,0BA4KkB,SAAa5N,G,sKAEnBqjB,EAAqC,IAAIlD,IAEzCxmC,EAA0BqmB,EAAW9U,QAAO,SAAA9O,GAAE,OAAIA,EAAGG,IAAIpf,MAAQsF,EAAUkb,qBAC1EpI,KAAI,SAAA6G,GAAE,OAAIinC,EAAiBC,MAAMlnC,OACxBmI,QAAQ,8BACtB5K,EAAc/Z,KAAK,6BAEfipC,EAAS,IAAI2U,GAAa9/C,KAAKud,MAE/BsoC,EAAU,IAAIziD,SAA0B,SAACxC,EAASC,GAClDsqC,EAAO2a,iBAAiB,KAAM7pC,GAAe,WACzCkvB,EAAOC,QAAO,SAACjI,GACXviC,EAAQ,CACJmlD,QAAS5iB,OAEd,SAAChiC,GACAN,EAAOM,Y,kBAMZ0kD,G,qIApMf,K,kdCJaG,GAAb,yB,4FAAA,S,UAAA,O,EAAA,G,EAAA,2BAEU,SAAajyB,EAAuBxW,G,8JAE1B,MAARwW,EAAQ,C,mDACZxW,EAAKgjC,iBAAiBnjB,KAAK,sBACxBrJ,EAAKv4B,KAAKqgD,SAAS,UAAW9nB,EAAKv4B,KAAKqgD,SAAS,QAAnB,C,gBACpB,O,SAAM,IAAI4H,GAAclmC,GAAM0oC,aAAalyB,G,cAAhDmyB,SACJ3oC,EAAKgjC,iBAAiBzjB,O,kBACfopB,G,eAEHpC,EAAS,IAAIC,W,kBACV,IAAI3gD,SAA0B,SAACxC,EAASC,GAC3CijD,EAAOE,OAAS,SAACvpB,GACb,IAAI0rB,EAA+B1rB,EAAMwE,OAAOl+B,OAC5CshC,EAAiB,IAAIe,WAAW+iB,GAGD,oBAAhCrG,GAAasG,YAAY/jB,KAA2BA,EAAKmG,KAAKC,QAAQpG,IAEzE9kB,EAAKgjC,iBAAiBzjB,OACtBl8B,EAAQ,CAACmlD,QAAS1jB,KAEtByhB,EAAOuC,kBAAkBtyB,O,mDAvBzC,wBA+BI,SAAWoX,GACPA,EAAOC,QAAO,SAAC/I,GACX,IAAImiB,EAAmB8B,OAAO,qCAAsC,oBACpD,MAAZ9B,GAICA,EAAS3I,SAAS,aAAY2I,GAAsB,WrBuN/D,SAAuB7mD,EAAU6mD,GAAyC,IAAvB+B,EAAuB,wDACxEC,EAAOD,EAAQ5oD,EAAM,IAAI8oD,KAAK,CAAC/kB,KAAKC,UAAUhkC,IAAO,CAAE8B,KAAM,eAEjE,GAAI08B,OAAO4D,WAAa5D,OAAO4D,UAAU2mB,iBAErCvqB,OAAO4D,UAAU2mB,iBAAiBF,EAAMhC,OACrC,CACH,IAAI/xC,EAAI+D,SAASmwC,YAAY,eACzBv2C,EAAIoG,SAAS4pB,cAAc,KAC/BhwB,EAAEw2C,SAAWpC,EACbp0C,EAAEy2C,KAAO1qB,OAAO2qB,IAAIC,gBAAgBP,GACpCp2C,EAAE42C,QAAQC,YAAc,CAAC,aAAc72C,EAAEw2C,SAAUx2C,EAAEy2C,MAAM7tC,KAAK,KAEhEvG,EAAEy0C,UAAU,SAAS,GAAM,EAAO/qB,OAAQ,EAAG,EAAG,EAAG,EAAG,GAAG,GAAO,GAAO,GAAO,EAAO,EAAG,MACxF/rB,EAAE+2C,cAAc10C,GAChBrC,EAAE+sB,UqBrOEiqB,CAAa,IAAIX,KAAK,CAACpkB,EAAGc,SAAUqhB,GAAU,IAJ1Ctd,MAAM,6DAKX,oB,gFAxCX,K,kdCMamgB,GAAb,WAKI,WAAoB9pC,EAAoBolB,EAA0BpN,I,4FAAc,SAA5D,KAAAhY,OAAoB,KAAAolB,WAA0B,KAAApN,OAC9Dv1B,KAAK0rC,O,UANb,O,EAAA,G,EAAA,mBASI,WAAI,WACA1rC,KAAK2rC,QAAUnR,OAAO,WACtBA,OAAO,SAAS8B,IAAI,aAAc,UAElCt8B,KAAK2rC,QAAQtN,OAAO7D,OAAO,m+FA+C3BoE,GAAS5+B,KAAK2rC,SAEd,IAAI2b,EAAgB9sB,OAAO,oBAC3Bx6B,KAAKud,KAAKqZ,eAAe2wB,mBAAkB,SAACC,GACxCA,EAAajnD,SAAQ,SAAAknD,GAEjB,IAAIC,EAAOltB,OAAO,4CAClBktB,EAAKrpB,OAAO7D,OAAO,iCAAD,OAAkCitB,EAAIjsD,KAAtC,iDAAmFisD,EAAIE,UAAvF,oBAClBD,EAAKrpB,OAAO7D,OAAO,kCAAD,OAAmCitB,EAAIjlB,YAAvC,YAClBklB,EAAKxoB,KAAK,aAAcuoB,EAAIhxB,IAC5BixB,EAAKxoB,KAAK,OAAQuoB,EAAIjsD,MAEtB8rD,EAAcjpB,OAAOqpB,GACrBD,EAAIC,KAA+BA,EAEnCA,EAAKl/B,GAAG,eAAe,WACnB8+B,EAAcp2B,KAAK,yBAAyBgK,YAAY,aACxDwsB,EAAKzsB,SAAS,mBAItB,IAAI2sB,EAA0CptB,OAAO,oBACrDotB,EAAcp/B,GAAG,SAAS,WACtB,IAAIxrB,EAAY4qD,EAAclrB,MAC9B4qB,EAAcp2B,KAAK,yBAAyB4L,OAC5C0qB,EAAajnD,SAAQ,SAAAknD,IACDA,EAAIjsD,KAAOisD,EAAIE,WAAaF,EAAIjlB,YAAcilB,EAAIjlB,YAAc,KAClEnzB,QAAQrS,IAAM,GAAGyqD,EAAIC,KAAKtqB,gBAKpD,IAAIyqB,EAAYrtB,OAAO,+BAEvBqtB,EAAUr/B,GAAG,YAAY,SAACs/B,GACtBA,EAAInsB,kBACJmsB,EAAIlsB,iBACJksB,EAAIC,cAAcC,aAAaC,WAAa,UAEhDJ,EAAUr/B,GAAG,QAAQ,SAACs/B,GAClBA,EAAInsB,kBACJmsB,EAAIlsB,iBAEJ,IAAI2K,EAAQuhB,EAAIC,cAAcC,aAAazhB,MAC3C,EAAK2hB,WAAW3hB,MAGpB,IAAI4hB,EAAiB3tB,OAAO,gBAC5B2tB,EAAe3/B,GAAG,UAAU,SAACiS,GAEzB,IAAI8L,EAAkB9L,EAAMstB,cAAc9oB,OAAOsH,MACjD,EAAK2hB,WAAW3hB,GAAOtlC,MAAK,WACxBknD,EAAezrB,IAAI,YAK3B18B,KAAK2rC,QAAQrP,IAAI,aAAc,WAE/B9B,OAAO,wBAAwBhS,GAAG,SAAS,WAAQ,EAAKojB,oBACxDpR,OAAO,iCAAiChS,GAAG,SAAS,WAChD,IAAI4/B,EAAyB,gBACzB5tB,OAAO,qCAAqC6tB,SAAS,eAAcD,EAAa,gBAChF5tB,OAAO,oCAAoC6tB,SAAS,eAAcD,EAAa,uBAC/E5tB,OAAO,iCAAiC6tB,SAAS,eAAcD,EAAa,eAEhF,IAAIE,EAAqC,CACrC7xB,GAAI,KACJ8T,UAAU,EACV/uC,KAAcg/B,OAAO,iCAAiCkC,MACtDnH,KAAM,EAAKA,KAAKvc,KAAK,MAGzB,OAAQovC,GACJ,IAAK,gBACD,EAAKG,gBAAgBD,GACrB,MACJ,IAAK,eACD,IAAIE,EAAYhuB,OAAO,mCACvB,GAAwB,GAApBguB,EAAU/lD,OAEV,YADAykC,MAAM,4CAGNohB,EAAcG,qBAAuBD,EAAUtpB,KAAK,cAC1B,kBAAtBopB,EAAc9sD,OAA0B8sD,EAAc9sD,KAAOgtD,EAAUtpB,KAAK,SAChF,EAAKqpB,gBAAgBD,GAEzB,MACJ,IAAK,sBACD,IAAII,EAAeluB,OAAO,yBAAyBkC,MAC/CisB,EAASD,EAAKr5C,QAAQ,KAC1B,IAAe,GAAXs5C,EAEA,YADAzhB,MAAM,kDAGVohB,EAAcM,gBAAkBt3C,OAAOC,SAASm3C,EAAKh4C,UAAU,EAAGi4C,IAClEL,EAAclhB,OAASshB,EAAKh4C,UAAUi4C,EAAS,GAC/C,EAAKJ,gBAAgBD,GACrB,MACJ,IAAK,cACD,GAAqB,MAAjB,EAAKzgB,SAUL,YADAX,MAAM,+DARN,IAAI6D,IAAmBsB,uBAAuB,EAAG,EAAK9uB,KAAM,EAAKsqB,SAASke,QACtE,kCACA,SAACjkB,GACDwmB,EAAcO,YAAc/mB,EAASgnB,cACrC,EAAKP,gBAAgBD,YArKjD,6BAmLY,SAAgBA,GAAkC,WACtDtoD,KAAKud,KAAKqZ,eAAemyB,oBAAoBT,EAAetoD,KAAK2iC,UAAU,SAACxhC,GACxE,GAAa,MAATA,EAAJ,CAEA,IAAIipC,EAAI,EAAK7sB,KAAK8sB,mBAAmBie,EAAc9sD,KAAM,EAAKmnC,UAC9DyH,EAAE7U,KAAO+yB,EAAc/yB,KACvB6U,EAAE3T,GAAK6xB,EAAc7xB,GACrB2T,EAAEE,YAAc,GAEhB,IAAIrT,EAAkB,EAAK1Z,KAAK0Z,gBAEhC,EAAK1Z,KAAK2oB,cAAchkC,KAAKkoC,GAC7B,IAAI4e,EAAqC,CACrCxtD,KAAM8sD,EAAc9sD,KACpBivC,gBAAiBL,EACjBM,UAAW,YACXH,UAAU,EACVhV,KAAM,EAAKA,MAGf0B,EAAgBgT,mBAAmBU,WAAWqe,GAAkB,GAEhE5e,EAAE6e,qBAAqBD,GAEvB/xB,EAAgBgT,mBAAmBC,eACnCjT,EAAgB0S,cAAcO,eAE9BjT,EAAgBiyB,mBAAmB9e,GAEnC,EAAKwB,sBA3BgB1E,MAAM/lC,QArLvC,wBAqNU,SAAWolC,G,iKAGc,OAFvBtQ,EAAOj2B,KACPmpD,EAAW,IAAInD,G,SACcmD,EAASlD,aAAa1f,EAAM,GAAIvmC,KAAKud,M,OAAlE8kB,SACA+mB,GAAsB,EAEN,oBADDtJ,GAAasG,YAAY/jB,EAAG0jB,UAGvCsD,EAAiB7gB,KAAKC,QAAQpG,EAAG0jB,SACW,sBAA5CjG,GAAasG,YAAYiD,KACzBD,GAAa,IAE8B,sBAAxCtJ,GAAasG,YAAY/jB,EAAG0jB,WAEnC1jB,EAAG0jB,QAAUvd,KAAK6C,QAAQhJ,EAAG0jB,SAC7BqD,GAAa,GAGbA,GACAnzB,EAAK4R,SAAWxF,EAChB7H,OAAO,yBAAyBqZ,KAAK,0IAErC3M,MAAM,8D,kDA3OlB,4BA+OI,WACI1M,OAAO,SAAS8B,IAAI,aAAc,WAClCt8B,KAAK2rC,QAAQrP,IAAI,aAAc,UAC/Bt8B,KAAK2rC,QAAQe,a,gFAlPrB,K,+rCCWO,IAAM4c,GAAb,WAEI,WAAoB/rC,I,4FAAU,SAAV,KAAAA,OAKpB,KAAAgsC,eAA2D,GAC3D,KAAAC,yBAAmC,E,UARvC,O,EAAA,G,EAAA,sBAUI,SAAQhzB,GAAc,WAEdP,EAAOj2B,KACPoT,EAASpT,KAAKud,KAAKuwB,kBAEnB2b,EAAiB,CACjBlsB,MAAO,CACH,CACIr4B,WAAY,QAAS+4B,QACrB,CACIV,MAAO,CACH,CACIr4B,WAAY,wBACZ21B,OAAQ,WAAQL,OAAO,iBAAiB2E,QAAQ,cAMhE,CACIj6B,WAAY,aAAc+4B,QAC1B,CACIV,MAAO,CACH,CAAEr4B,WAAY,wBAAyB21B,OAAQ,WAAQznB,EAAO+rB,QAAQ,IAAK,OAAQ,MACnF,CAAEj6B,WAAY,yBAA0B21B,OAAQ,WAAQznB,EAAO+rB,QAAQ,IAAK,OAAQ,MACpF,CAAEj6B,WAAY,KACd,CAAEA,WAAY,sBAAuB21B,OAAQ,WAAQznB,EAAOoqC,UAAU,qCAAqCF,QAC3G,CAAEp4C,WAAY,0BAA2B21B,OAAQ,WAAQznB,EAAOoqC,UAAU,oCAAoCF,QAC9G,CAAEp4C,WAAY,gDAAiD21B,OAAQ,WAAQznB,EAAOoqC,UAAU,mCAAmCF,QACnI,CAAEp4C,WAAY,mDAAoD21B,OAAQ,WAAQznB,EAAOoqC,UAAU,qCAAqCF,QACxI,CAAEp4C,WAAY,2CAA4C21B,OAAQ,WAAQznB,EAAOoqC,UAAU,mCAAmCF,QAC9H,CAAEp4C,WAAY,8CAA+C21B,OAAQ,WAAQznB,EAAOoqC,UAAU,qCAAqCF,QACnI,CAAEp4C,WAAY,KACd,CAAEA,WAAY,uBAAwB21B,OAAQ,WAAQznB,EAAOoqC,UAAU,gBAAgBF,QACvF,CAAEp4C,WAAY,yBAA0B21B,OAAQ,WAAQznB,EAAOoqC,UAAU,wCAAwCF,QACjH,CAAEp4C,WAAY,KACd,CAAEA,WAAY,kCAAmC21B,OAAQ,WAAQznB,EAAOoqC,UAAU,6BAA6BF,QAC/G,CAAEp4C,WAAY,yCAA0C21B,OAAQ,WAAQznB,EAAOoqC,UAAU,gCAAgCF,QACzH,CAAEp4C,WAAY,KACd,CAAEA,WAAY,sCAAuC21B,OAAQ,WAAQznB,EAAOoqC,UAAU,+BAA+BF,QACrH,CAAEp4C,WAAY,KACd,CAAEA,WAAY,uBAAwB21B,OAAQ,WAAQznB,EAAOoqC,UAAU,kBAAkBF,QACzF,CAAEp4C,WAAY,kBAAmB21B,OAAQ,WAAQznB,EAAOoqC,UAAU,oBAAoBF,QACtF,CAAEp4C,WAAY,KACd,CACIA,WAAY,wCAAyC21B,OAAQ,WACzDznB,EAAO4pB,QACPD,YAAW,WACP3pB,EAAOoqC,UAAU,gCAAgCF,QAClD,OAGX,CAAEp4C,WAAY,4CAA6C21B,OAAQ,WAAQznB,EAAOoqC,UAAU,uCAAuCF,QACnI,CACIp4C,WAAY,qCAAsC21B,OAAQ,WACtDznB,EAAO4pB,QACPD,YAAW,WACP3pB,EAAOoqC,UAAU,kCAAkCF,QACpD,UAOvB,CACIp4C,WAAY,UAAW+4B,QACvB,CACIV,MAAO,CACH,CACIr4B,WAAY,QACZ+4B,QAAS,CACLV,MAAO,CACH,CACIr4B,WAAY,OACZ21B,OAAQ,WACJ5E,EAAKyzB,YAAY,UAGzB,CACIxkD,WAAY,QACZ21B,OAAQ,WACJ5E,EAAKyzB,YAAY,cAMrC,CAAExkD,WAAY,KACd,CAAEA,WAAY,mCAAoC21B,OAAQ,WAAQznB,EAAOoqC,UAAU,oCAAoCF,QAEvH,CAAEp4C,WAAY,KACd,CAAEA,WAAY,4BAA6B21B,OAAQ,WAAQ,EAAKtd,KAAKnK,OAAOomC,sBAAsB,KAClG,CAAEt0C,WAAY,cAAe21B,OAAQ,WAAQ,EAAKtd,KAAKnK,OAAOupC,YAAY,MAC1E,CAAEz3C,WAAY,2BAA4B21B,OAAQ,WAAQ,EAAKtd,KAAKnK,OAAOomC,qBAAqB,QAK5G,CACIt0C,WAAY,YAAa+4B,QACzB,CACIV,MAAO,CACH,CACIr4B,WAAY,4BAA6B21B,OAAQ,WAC7C,IAAI8H,EAAmB1M,EAAK1Y,KAAKiZ,KAAKC,GACH,MAA/BR,EAAK1Y,KAAKgZ,oBACVoM,EAAW1M,EAAK1Y,KAAKgZ,mBAGzB,IAAI8wB,GAAkBpxB,EAAK1Y,KAAMolB,EAAU,MAGnD,CAAEz9B,WAAY,mBAAoB21B,OAAQ,WAAQ,IAAI4Q,GAAuB,EAAKluB,KAAM,EAAKA,KAAKssB,oBAClG,CACI3kC,WAAY,yCAA0C21B,OAAQ,YAC1D,IAAImrB,IAAuB2D,WAAW,EAAKpsC,KAAKoX,0BAW5E6F,OAAO,aAAakS,QACpB1sC,KAAK4pD,SAASH,EAAU,KA1IhC,yBA6II,SAAYtzC,GACRnW,KAAKud,KAAK++B,mBAAmBjmC,SAASF,KA9I9C,sBAiJI,SAAS0zC,EAAY15C,GAEjB05C,EAAK15C,MAAQA,EAEA,GAATA,EACA05C,EAAKtvB,SAAWC,OAAO,cAEvBqvB,EAAKtvB,SAAWC,OAAO,kCACvBA,OAAO,QAAQ6D,OAAOwrB,EAAKtvB,WAG/BsvB,EAAKtvB,SAAS2E,KAAK,QAAS2qB,GAXG,WAYhBA,EAAKtsB,OAZW,IAY/B,2BAA2B,KAAlBM,EAAkB,QACvB,GAAqB,KAAjBA,EAAG34B,WACH24B,EAAGtD,SAAWC,OAAO,8CAClB,CAEH,GADAqD,EAAGtD,SAAWC,OAAO,QAAUqD,EAAG34B,WAAa,UAChC,MAAX24B,EAAGE,KAAc,CACjB,IAAII,EAAQ3D,OAAO,YAAcqD,EAAGE,KAAO,8CAC3CI,EAAM3V,GAAG,aAAa,SAACiS,GACnBA,EAAMkB,kBACNoB,YAAW,WACP8sB,EAAKtvB,SAASuC,SACf,QAEPqB,EAAME,OAAOR,EAAGtD,UAChBsD,EAAGtD,SAAW4D,EAEA,MAAdN,EAAGI,SACHj+B,KAAK4pD,SAAS/rB,EAAGI,QAAS9tB,EAAQ,GAEtCnQ,KAAK8pD,sBAAsBD,EAAMhsB,GACpB,GAAT1tB,GACA0tB,EAAGtD,SAASU,SAAS,mBAG7B4uB,EAAKtvB,SAAS8D,OAAOR,EAAGtD,UACxBsD,EAAGtD,SAAS2E,KAAK,QAASrB,IArCC,8BAwC/B,IAAI5H,EAAOj2B,KACXw6B,OAAOhkB,UAAUgS,GAAG,aAAa,WAC7B,IAAK,IAAIvtB,EAAI,EAAGA,EAAI,EAAGA,IACW,MAA1Bg7B,EAAKszB,eAAetuD,KACpBg7B,EAAKszB,eAAetuD,GAAG6hC,OACvB7G,EAAKszB,eAAetuD,GAAK,MAGjCg7B,EAAKuzB,yBAA0B,OAjM3C,mCAsMI,SAAsBK,EAAYhsB,GAC9B,IAAI5H,EAAOj2B,KAEM,MAAb69B,EAAGhD,QACHgD,EAAGtD,SAAS/R,GAAG,aAAa,SAACyU,GAASY,EAAGhD,OAAOgD,EAAG34B,eAGrC,MAAd24B,EAAGI,SACHJ,EAAGtD,SAAS/R,GAAG,aAAa,SAACyU,GACzBhH,EAAK8zB,YAAYlsB,GACjB5H,EAAKuzB,yBAA0B,EAC/BvsB,EAAGtB,qBAGPkC,EAAGtD,SAAS/R,GAAG,sBAAsB,WAC7ByN,EAAKuzB,wBACLvzB,EAAK8zB,YAAYlsB,GAE0B,MAAvC5H,EAAKszB,eAAeM,EAAK15C,MAAQ,KACjC8lB,EAAKszB,eAAeM,EAAK15C,MAAQ,GAAG2sB,OACpC7G,EAAKszB,eAAeM,EAAK15C,MAAQ,GAAK,UAKlD0tB,EAAGtD,SAAS/R,GAAG,sBAAsB,WACU,MAAvCyN,EAAKszB,eAAeM,EAAK15C,MAAQ,KACjC8lB,EAAKszB,eAAeM,EAAK15C,MAAQ,GAAG2sB,OACpC7G,EAAKszB,eAAeM,EAAK15C,MAAQ,GAAK,WAlO1D,yBAyOI,SAAY0tB,GAER,IAEI3U,EACAkV,EAHAH,EAAUJ,EAAGI,QAII,GAAjBA,EAAQ9tB,OACR+Y,EAAO2U,EAAGtD,SAAS/qB,WAAW0Z,KAC9BkV,EAAM,KAENlV,EAAO2U,EAAGtD,SAAS5S,SAASuB,KAAO2U,EAAGtD,SAASgC,QAC/C6B,EAAMP,EAAGtD,SAAS5S,SAASyW,KAG/BH,EAAQ1D,SAAS+B,IAAI,CACjB8B,IAAUA,EAAM,KAChBlV,KAAWA,EAAO,OAGoB,MAAtClpB,KAAKupD,eAAetrB,EAAQ9tB,QAC5BnQ,KAAKupD,eAAetrB,EAAQ9tB,OAAO2sB,OAGvCmB,EAAQ1D,SAAS6C,OACjBp9B,KAAKupD,eAAetrB,EAAQ9tB,OAAS8tB,EAAQ1D,c,gFAjQrD,K,64CCCO,IAAMyvB,GAAb,WA4BI,WAAoBC,EAA8BnsB,EAAyBosB,EAC/DC,EAAgCC,EAChCC,EAAkCC,EAAmCC,EACrEnqC,EAA0DoqC,EAA6BC,GAAyB,sBAHxG,KAAAR,YAA8B,KAAAnsB,UAAyB,KAAAosB,aAC/D,KAAAC,iBAAgC,KAAAC,iBAChC,KAAAC,mBAAkC,KAAAC,mBAAmC,KAAAC,cACrE,KAAAnqC,OAA0D,KAAAoqC,aAA6B,KAAAC,kBA7BnG,KAAAjgC,SAA+B,GAQ/B,KAAAkgC,kBAA4B,EAuBxBT,EAAUU,SAAS3qD,MAEnB,IAAIk8B,EAAeC,OAAOC,aAAe,UAAY,QAErD,GAAImuB,EAAa,CACb,IAAIt0B,EAAOj2B,KACXA,KAAK4qD,iBAAmBpwB,OAAO,mIAE/Bx6B,KAAK4qD,iBAAiBpiC,GAAG0T,EAAe,QAAQ,SAACzpB,GAC7CA,EAAEkpB,kBACFlpB,EAAEmpB,iBAIF,EAAKivB,UAAU,eAFW,IAEgB,SAACC,GACvC,EAAKC,kBAAkBD,GAAY,WAC/B,EAAK5gB,eACL4gB,EAAW3d,eAAe,GAAG6d,iBAC7BxrB,GAAqBsrB,EAAW3d,eAAejc,KAAK,gBAAiB,mBAAoB,CAAC,EAAG,IAAK,GAAI,cAMlHlxB,KAAK48C,UAAU58C,KAAK4qD,kBAGpB,IAAIK,EAAqBzwB,OAAO,wHAEhCywB,EAAmBziC,GAAG0T,EAAe,QAAQ,SAACzpB,GAC1CA,EAAEkpB,kBACFlpB,EAAEmpB,iBAEF3F,EAAKi1B,iBAITlrD,KAAK48C,UAAUqO,IAtE3B,sCA6EI,WAAW,WACajrD,KAAKwqB,UADlB,IACP,2BAAmC,KAA1BsI,EAA0B,QAC3BA,EAAQyX,UACJzX,EAAQqa,eAAekb,SAAS,iBAChCv1B,EAAQqa,eAAejS,YAAY,eACnCpI,EAAQqa,eAAelS,SAAS,iBAGpCnI,EAAQyC,KAAK9yB,OAAS,GACtBqwB,EAAQqa,eAAege,QAAQ,MAThC,iCA7Ef,oBA2FI,WACInrD,KAAKorD,gBAAgBjuB,SACrBn9B,KAAKqrD,aAAaluB,WA7F1B,sBAgGI,SAASmuB,GACLtrD,KAAKsrD,MAAQA,EACTtrD,KAAKsrD,OACLtrD,KAAKurD,OACLvrD,KAAKorD,gBAAgBnwB,SAAS,aAE9Bj7B,KAAKorD,gBAAgBlwB,YAAY,cAtG7C,6BAsHI,SAAgBuc,GACW,MAAnBz3C,KAAKwrD,aACD/T,EACAz3C,KAAKwrD,WAAWpuB,OAEhBp9B,KAAKwrD,WAAW1uB,UA3HhC,sCAgII,WACI,IAAI2uB,EAAsB,GACtBC,EAAkB1rD,KAAK2rD,qBAK3B,OAJuB,MAAnBD,IACAD,EAAYC,EAAgBn2B,KAAK3xB,MAAM,GACnC8nD,EAAgBnhB,UAAUkhB,EAAUvpD,KAAKwpD,EAAgBlwD,OAE1DiwD,IAvIf,6BA0II,SAAgBG,EAAeC,EAAiBC,EAAoBC,EAAeC,EAAiBC,IAEhGJ,EAAQA,EAAMjoD,SACR1B,KAAK0pD,GACXA,EAAQ,IAERI,EAAQA,EAAMpoD,SACR1B,KAAK6pD,GACXA,EAAQ,GAGR,IADA,IAAI9wD,EAAI,EACDA,EAAI4wD,EAAMppD,QAAUxH,EAAI+wD,EAAMvpD,QAAQ,CACzC,IAAIypD,EAAML,EAAM5wD,GAAGkxD,cAAcH,EAAM/wD,IACvC,GAAW,GAAPixD,EAAU,OAAOA,EACrBjxD,IAGJ,OAAI4wD,EAAMppD,OAASupD,EAAMvpD,QAAgB,EACrCopD,EAAMppD,OAASupD,EAAMvpD,OAAe,EAEjCmpD,EAAMO,cAAcJ,KA9JnC,6BA6KI,SAAgBvwD,EAAc+5B,EAAgBgV,GAE1C,IAAK,IAAItvC,EAAI,EAAGA,EAAI+E,KAAKwqB,SAAS/nB,OAAQxH,IAAK,CAC3C,IAAI63B,EAAU9yB,KAAKwqB,SAASvvB,GAE5B,GAAI+E,KAAKosD,gBAAgB5wD,EAAM+5B,EAAMgV,EAAUzX,EAAQt3B,KAAMs3B,EAAQyC,KAAMzC,EAAQyX,UAAY,EAAG,OAAOtvC,EAG7G,OAAO+E,KAAKwqB,SAAS/nB,SArL7B,2BAwLI,SAAcm4B,GACV,IAAIyxB,EAAcrsD,KAAKssD,gBAAgB1xB,EAAGp/B,KAAMo/B,EAAGrF,KAAMqF,EAAG2P,UAE5DvqC,KAAKwqB,SAASxX,OAAOq5C,EAAa,EAAGzxB,GAErC,IAAI2xB,EAAYvsD,KAAKqrD,aAAan6B,KAAK,YAEvC,GAAmB,GAAfm7B,EACArsD,KAAKqrD,aAAamB,QAAQ5xB,EAAGuS,qBAC1B,GAAGkf,GAAeE,EAAU9pD,OAC/BzC,KAAKqrD,aAAahtB,OAAOzD,EAAGuS,oBACzB,CACH,IAAIsf,EAAiBF,EAAUzwD,IAAIuwD,GACnC7xB,OAAOiyB,GAAgBC,OAAO9xB,EAAGuS,mBArM7C,uBA0MI,SAAU3xC,EAAc+5B,EAAgB2I,GAEpC,IAAItD,EAAuB,CACvBp/B,KAAMA,EACN+uC,UAAU,EACVhV,KAAMA,GAGNgF,EAAWv6B,KAAK2sD,cAAc/xB,GAAI,GAEtC56B,KAAK4sD,cAAchyB,GAEnBL,EAAS,GAAGywB,iBAEZhrD,KAAK6sD,cAAcjyB,GAAI,WAEnBsD,EAAStD,QA1NrB,qCAiOI,SAAwBkyB,GAAkC,WAClD72B,EAAOj2B,KAKX,GAHAA,KAAKorD,gBAAkB5wB,OAAO,sFACEx6B,KAAK89B,QADP,8CAGH,MAAvB99B,KAAKmqD,eAAwB,CAC7BnqD,KAAKwrD,WAAahxB,OAAO,mCAAqCx6B,KAAKmqD,eAAiB,YAAcnqD,KAAKoqD,eAAiB,MACxHpqD,KAAKorD,gBAAgBl6B,KAAK,eAAemN,OAAOr+B,KAAKwrD,YAErD,IAAItvB,EAAeC,OAAOC,aAAe,UAAY,QACrDp8B,KAAKwrD,WAAWhjC,GAAG0T,EAAe,QAAQ,SAACe,GAEvCuW,GAAOM,QACP7W,EAAGtB,kBAEH,IAAIpG,EAAOU,EAAK82B,2BAEZnyB,EAAuB,CACvBp/B,KAAM,MACN+uC,UAAU,EACVhV,KAAMA,GAGN82B,EAAc,EAAKC,gBAAgB,GAAI/2B,GAAM,GACjD,EAAK/K,SAASxX,OAAOq5C,EAAa,EAAGzxB,GACrC,IAAIL,EAAW,EAAKoyB,cAAc/xB,GAAI,GAGtC,GAAmB,GAAfyxB,EACA,EAAKhB,aAAamB,QAAQjyB,OACvB,CACH,IAAIkyB,EAAiB,EAAKpB,aAAan6B,KAAK,YAAYp1B,IAAIuwD,EAAc,GAC1E7xB,OAAOiyB,GAAgB5vB,MAAMtC,GAGjCA,EAAS,GAAGywB,iBAEZ/0B,EAAK42B,cAAcjyB,GAAI,WAEnB3E,EAAK+2B,wBAAwBpyB,GAAI,SAAC6P,GAE9B7P,EAAG6P,gBAAkBA,EAEK,MAAtB7P,EAAGqyB,iBACHryB,EAAGqyB,gBAAgBC,YAAY3yB,GAGR,MAAvBtE,EAAKk3B,gBAAwBl3B,EAAKxQ,OAAOmV,EAAG6P,0BAUhE,IAAI2iB,EAAa5yB,OAAO,kFAClBx6B,KAAKkqD,WAAa,uBAAyBlqD,KAAKkqD,WAAa,YACnElqD,KAAKqrD,aAAe7wB,OAAO,mCAE3B4yB,EAAW/uB,OAAOr+B,KAAKqrD,cAEvByB,EAAczuB,OAAOr+B,KAAKorD,iBAC1B0B,EAAczuB,OAAO+uB,GAErB,IAAIC,EAAMrtD,KAAKorD,gBACXkC,EAAMttD,KAAKqrD,aAAa3+B,SACxBwP,EAAeC,OAAOC,aAAe,UAAY,QAErDixB,EAAI7kC,GAAG0T,EAAe,QAAQ,SAACe,GAC3B,GAAiB,GAAbA,EAAGnC,SAIF,EAAKwwB,MAAO,CACb,IAAIiC,EAAaD,EAAIpuB,KAAK,QACtBmuB,EAAIhF,SAAS,eACTpyB,EAAKg0B,UAAUuD,MAAM/qD,OAAS,GAC9B6qD,EAAIztB,QAAQ,CACR,YAAa,MACd,KAAM,WAAQwtB,EAAII,YAAY,mBAGrCJ,EAAII,YAAY,eAChBH,EAAIztB,QAAQ,CACR,YAAa0tB,GACd,UAKfF,EAAI7kC,GAAG,YAAY,SAACiS,GACZuvB,EAAe0D,6BAA+Bz3B,EAAK7V,OACnDitC,EAAIpyB,SAAS,oBACbR,EAAMmB,qBAIdyxB,EAAI7kC,GAAG,aAAa,SAACiS,GACjB4yB,EAAInyB,YAAY,uBAGpBmyB,EAAI7kC,GAAG,QAAQ,SAACiS,GACZ,GAAIuvB,EAAe0D,6BAA+Bz3B,EAAK7V,KAAM,CACzDqa,EAAMmB,iBACNyxB,EAAInyB,YAAY,oBAChB,IAAIyyB,EAAW3D,EAAe4D,wBACd,MAAZD,GACA13B,EAAK43B,YAAYF,EAAU,YA/U/C,kBAwVI,WACI,IAAIL,EAAMttD,KAAKqrD,aAAa3+B,SACxB6gC,EAAaD,EAAIpuB,KAAK,QAC1BouB,EAAIhxB,IAAI,YAAaixB,GACrBvtD,KAAKorD,gBAAgBnwB,SAAS,iBA5VtC,wBA+VI,SAAWnI,EAA2Bg7B,GAIlCh7B,EAAQqa,eAAiBntC,KAAK2sD,cAAc75B,EAASg7B,GACrD9tD,KAAK4sD,cAAc95B,KApW3B,0BAuWI,WAAY,WACJ9yB,KAAK0qD,mBACT1qD,KAAKwqB,SAAS0O,MAAK,SAAC9oB,EAAG8nB,GACnB,IAAI61B,EAAQ39C,EAAE49C,SAAW59C,EAAE49C,SAAW59C,EAAE5U,KACpCyyD,EAAQ/1B,EAAE81B,SAAW91B,EAAE81B,SAAW91B,EAAE18B,KAExC,OAAO,EAAK4wD,gBAAgB2B,EAAO39C,EAAEmlB,KAAMnlB,EAAEm6B,SAAU0jB,EAAO/1B,EAAE3C,KAAM2C,EAAEqS,aAG5EvqC,KAAKwqB,SAASjqB,SAAQ,SAACuyB,GAAc,EAAKu4B,aAAahtB,OAAOvL,EAAQqa,sBAhX9E,kCAmXI,SAAqBra,EAA2B/iB,EAAcm+C,GAC1D,GAAc,MAAXp7B,EAAH,CACA,IAAIq7B,EAAOr7B,EAAQqa,eAAejc,KAAK,qBACvCi9B,EAAKlzB,SAASizB,GACdC,EAAKta,KAAK9jC,MAvXlB,uBA0XI,SAAUwqB,GACNv6B,KAAKorD,gBAAgBl6B,KAAK,eAAes7B,QAAQjyB,KA3XzD,2BA8XI,SAAczH,EAA2Bg7B,GAAiB,WAElD5xB,EAAeC,OAAOC,aAAe,UAAY,QACjDnG,EAAOj2B,KAEPouD,EAAoB,GAEC,MAArBt7B,EAAQ4X,YAAmB5X,EAAQ4X,UAAY1qC,KAAKqqD,kBACpDv3B,EAAQyX,WACRzX,EAAQ4X,UAAY,SACpB0jB,EAAoBN,EAAW,eAAiB,iBAGpD,IAAIO,EAAW,GACK,MAAhBv7B,EAAQyC,OAAczC,EAAQyC,KAAO,IACzC,IAAK,IAAIt6B,EAAI,EAAGA,EAAI63B,EAAQyC,KAAK9yB,OAAQxH,IACrCozD,GAAY,oCAiBhB,GAdAv7B,EAAQqa,eAAiB3S,OAAO,0BAAD,OAA2B1H,EAAQ4X,UAAnC,YAAgD0jB,EAAhD,mDACDC,EADC,oGAGDjgC,GAAW0E,EAAQt3B,MAHlB,2IAM1BwE,KAAKsqD,iBAAmB,+DAA2G,GANzG,wBAOzB/qB,GAAoG,GAAjF,+EAPM,yBAU1BuuB,GAAYh7B,EAAQyC,KAAK9yB,OAAS,GACnCqwB,EAAQqa,eAAerQ,OAGU,MAAjC98B,KAAKsuD,yBAAkC,CACvC,IAAIC,EAAiBvuD,KAAKsuD,yBAAyBx7B,GACnDA,EAAQqa,eAAe9O,OAAOkwB,GA8BlC,GA3BIvuD,KAAKuqD,aACDz3B,EAAQyX,WACRzX,EAAQqa,eAAe3kB,GAAG,YAAY,SAACiS,GAC/BuvB,EAAe0D,6BAA+Bz3B,EAAK7V,OACnD0S,EAAQqa,eAAelS,SAAS,oBAChCR,EAAMmB,qBAId9I,EAAQqa,eAAe3kB,GAAG,aAAa,SAACiS,GACpC3H,EAAQqa,eAAejS,YAAY,uBAGvCpI,EAAQqa,eAAe3kB,GAAG,QAAQ,SAACiS,GAC/B,GAAIuvB,EAAe0D,6BAA+Bz3B,EAAK7V,KAAM,CACzDqa,EAAMmB,iBACN9I,EAAQqa,eAAejS,YAAY,oBACnC,IAAIyyB,EAAW3D,EAAe4D,wBAC9B5D,EAAe4D,wBAA0B,KACzB,MAAZD,GACA13B,EAAK43B,YAAYF,EAAU76B,QAO3C9yB,KAAKuqD,aAAevqD,KAAKwqD,WAAY,CACrC,IAAIgE,EAAgB17B,EAAQqa,eAAejc,KAAK,gBAChDs9B,EAAcxzB,KAAK,YAAa,QAChCwzB,EAAchmC,GAAG,aAAa,SAACiS,GAC3BuvB,EAAe4D,wBAA0B96B,EACzCk3B,EAAe0D,4BAA8Bz3B,EAAK7V,KAClDqa,EAAMstB,cAAcC,aAAayG,cAAgB37B,EAAQyX,SAAW,OAAS,cAIzD,MAAxBvqC,KAAKyqD,iBAA2BzqD,KAAKyqD,gBAAgBhoD,OAAS,IACzDqwB,EAAQyX,WACTzX,EAAQqa,eAAe3kB,GAAG,YAAY,SAACiS,GAC/B,EAAKgwB,gBAAgBp7C,QAAQ26C,EAAe0D,8BAAgC,IAC5E56B,EAAQqa,eAAelS,SAAS,oBAE5BR,EAAMa,QACNb,EAAMstB,cAAcC,aAAaC,WAAa,OAE9CxtB,EAAMstB,cAAcC,aAAaC,WAAa,OAGlDxtB,EAAMmB,qBAId9I,EAAQqa,eAAe3kB,GAAG,aAAa,SAACiS,GACpC3H,EAAQqa,eAAejS,YAAY,uBAGvCpI,EAAQqa,eAAe3kB,GAAG,QAAQ,SAACiS,GAC/B,GAAI,EAAKgwB,gBAAgBp7C,QAAQ26C,EAAe0D,8BAAgC,EAAG,CAC/EjzB,EAAMmB,iBACN9I,EAAQqa,eAAejS,YAAY,oBAEnC,IAAIyyB,EAAW3D,EAAe4D,wBAC9B5D,EAAe4D,wBAA0B,KACzB,MAAZD,GACgC,MAA5B13B,EAAKy4B,qBAA6Bz4B,EAAKy4B,oBAAoB57B,EAAS66B,EAAUlzB,EAAMa,QAAU,OAAS,cAQ/HxI,EAAQqa,eAAe3kB,GAAG0T,EAAe,MAAM,SAACe,GAE5C,GAAiB,GAAbA,EAAGnC,QAAsC,MAAvB7E,EAAKk3B,eAAwB,CAC/Cl3B,EAAKk3B,eAAer6B,EAAQ2X,iBADmB,WAGhCxU,EAAKzL,UAH2B,IAG/C,2BAA8B,KAArBoQ,EAAqB,QACtBA,GAAM9H,GAAW8H,EAAGuS,eAAekb,SAAS,cAC5CztB,EAAGuS,eAAejS,YAAY,cALS,8BAW/C,GAFApI,EAAQqa,eAAelS,SAAS,aAE5BnI,EAAQyX,SAAU,CAEdzX,EAAQqa,eAAekb,SAAS,gBAChCv1B,EAAQqa,eAAejS,YAAY,eACnCpI,EAAQqa,eAAelS,SAAS,kBAEhCnI,EAAQqa,eAAelS,SAAS,eAChCnI,EAAQqa,eAAejS,YAAY,iBAGvC,IAVkB,EAUdyzB,EAA+C,GAVjC,KAWJ,EAAKnkC,UAXD,IAWlB,2BAA6B,KAApB/X,EAAoB,QACzB,GAAIA,EAAE83B,SAAU,CACZ,IAAIhV,EAAO9iB,EAAE8iB,KAAKvc,KAAK,KACX,IAARuc,IAAYA,GAAQ,KAExBo5B,EADAp5B,GAAQ9iB,EAAEjX,MACciX,EAAE06B,eAAekb,SAAS,gBAC9CsG,EAAgBl8C,EAAE8iB,KAAKvc,KAAK,QAAO21C,EAAgBp5B,IAAQ,KAjBrD,8BAoBlBo5B,EAAgB,KAAM,EApBJ,WAsBJ,EAAKnkC,UAtBD,IAsBlB,2BAA6B,KAApB/X,EAAoB,QACrBk8C,EAAgBl8C,EAAE8iB,KAAKvc,KAAK,MAC5BvG,EAAE06B,eAAege,QAAQ,KAEzB14C,EAAE06B,eAAeyhB,UAAU,MA1BjB,oCAoC9B,IA6EIC,EA7EAC,EAAqB,SAAUr0B,GAE/B,IAAIs0B,EAAsC,GACf,MAAvB94B,EAAK+4B,gBACLD,EAAiB7sD,KAAK,CAClB47B,QAAS,aACTI,SAAU,WACNjI,EAAK42B,cAAc/5B,MAKZqJ,OAAOC,aAiC1B,GA/BItJ,EAAQyX,WACRwkB,EAAmBA,EAAiBr2C,OAAO,CACvC,CACIolB,QAAS,yCAA2ChL,EAAQt3B,KAAO,QACnE0iC,SAAU,WACNjI,EAAKxQ,OAAOqN,EAAQ2X,iBAEpB,IAAIghB,EAAYx1B,EAAK82B,2BAErB92B,EAAK40B,UAAU,eAAgBY,GAAW,SAACX,GACvC70B,EAAK80B,kBAAkBD,GAAY,WAC/B70B,EAAKiU,eACL4gB,EAAW3d,eAAe,GAAG6d,iBAC7BxrB,GAAqBsrB,EAAW3d,eAAejc,KAAK,gBAAiB,mBAAoB,CAAC,EAAG,IAAK,GAAI,aAKnH,CACC4M,QAAS,oBACTI,SAAU,WACNjI,EAAKxQ,OAAOqN,EAAQ2X,iBAEpBxU,EAAKg5B,2BAA2Bn8B,EAAQyC,KAAK7c,OAAOoa,EAAQt3B,YAQ5C,MAA5By6B,EAAKi5B,sBAAgCp8B,EAAQyX,SAAU,YAEvCtU,EAAKi5B,oBAAoBp8B,IAFc,yBAE9Cq8B,EAF8C,QAGnDJ,EAAiB7sD,KAAK,CAClB47B,QAASqxB,EAAIrxB,QACbI,SAAU,WACNixB,EAAIjxB,SAASpL,IAEjB2J,MAAO0yB,EAAI1yB,MACXwB,QAAwB,MAAfkxB,EAAIlxB,QAAkB,KAAOkxB,EAAIlxB,QAAQpmB,KAAI,SAACgmB,GACnD,MAAO,CACHC,QAASD,EAAGC,QACZI,SAAU,WACNL,EAAGK,SAASpL,IAEhB2J,MAAOoB,EAAGpB,aAb1B,2BAAmD,IAFI,+BAsBvDsyB,EAAiBtsD,OAAS,IAC1Bg4B,EAAMmB,iBACNnB,EAAMkB,kBACN2B,GAAgByxB,EAAkBt0B,EAAM20B,MAAO30B,EAAM40B,SAqE7D,OAjEAv8B,EAAQqa,eAAe,GAAG+M,iBAAiB,cAAe4U,GAAoB,GAIzEvvB,IACDzM,EAAQqa,eAAe3kB,GAAG,aAAa,WAEnC,OADA8mC,aAAaT,IACN,KACRrmC,GAAG,eAAe,SAACiS,GAIlB,OAHAo0B,EAAa1yB,OAAOY,YAAW,WAC3B+xB,EAAmBr0B,KACpB,MACI,KAIV8E,KACDzM,EAAQqa,eAAejc,KAAK,uBAAuB1I,GAAG,eAAe,SAAC/V,GAClEq8C,EAAmBr8C,MAEvBqgB,EAAQqa,eAAejc,KAAK,uBAAuB1I,GAAG,mBAAmB,SAAC/V,GACtEA,EAAEmpB,iBACFnpB,EAAEkpB,sBAIN1F,EAAKq0B,kBACLx3B,EAAQqa,eAAejc,KAAK,cAAc1I,GAAG0T,EAAe,MAAM,SAACe,GAC/DA,EAAGrB,iBACH0B,GAAgB,CAAC,CACbQ,QAAS,YACTI,SAAU,cAGX,CACCJ,QAAS,+BACTrB,MAAO,UACPyB,SAAU,WAEFpL,EAAQyX,UACJtU,EAAKs5B,iBAAiBz8B,GAASrwB,OAAS,EACxCykC,MAAM,mEAKdjR,EAAKu5B,eAAe18B,EAAQ2X,iBAAiB,WACzC3X,EAAQqa,eAAehQ,SACQ,MAA3BrK,EAAQm6B,iBAAyBn6B,EAAQm6B,gBAAgB9vB,SAC7DlH,EAAKzL,SAASxX,OAAOijB,EAAKzL,SAASnb,QAAQyjB,GAAU,GAE1B,MAAvBmD,EAAKk3B,iBACDl3B,EAAKzL,SAAS/nB,OAAS,EACvBwzB,EAAKxQ,OAAOwQ,EAAKzL,SAAS,GAAGigB,iBAE7BxU,EAAKxQ,OAAO,aAK5BwX,EAAGmyB,MAAQ,EAAGnyB,EAAGoyB,MAAQ,GAC7BpyB,EAAGtB,qBAIJ7I,EAAQqa,iBAzqBvB,yBA6qBI,SAAYsiB,EAAiCC,GACzC,IAAIC,EAAiD,MAArBD,EAA4B,GAAKA,EAAkBn6B,KAAK3xB,MAAM,GAAG8U,OAAO,CAACg3C,EAAkBl0D,OAC3H,GAAIi0D,EAAcllB,SAAU,CACxB,IAAIqlB,EAAoC,CAACH,GAErCI,EAAaJ,EAAcl6B,KAAK7c,OAAO,CAAC+2C,EAAcj0D,OAAOwd,KAAK,KAEtE,GAAoD,GAAjD22C,EAAgB32C,KAAK,KAAK3J,QAAQwgD,GAAkB,OAEvD,IAAIC,EAAgBL,EAAcl6B,KAAK9yB,OACvCgtD,EAAcl6B,KAAOo6B,EAAgB/rD,MAAM,GARnB,WAUJ5D,KAAKwqB,UAVD,IAUxB,2BAAmC,KAA1BsI,EAA0B,QAC3BA,EAAQyC,KAAKvc,KAAK,KAAK+qB,WAAW8rB,KAClC/8B,EAAQyC,KAAKviB,OAAO,EAAG88C,GACvBh9B,EAAQyC,KAAOo6B,EAAgBj3C,OAAOoa,EAAQyC,MAC9Cq6B,EAAc1tD,KAAK4wB,KAdH,8BAkBxB,cAAe88B,EAAf,eAA8B,CAAzB,IAAI32B,EAAE,KACPA,EAAGkU,eAAehQ,SAClBn9B,KAAKwqB,SAASxX,OAAOhT,KAAKwqB,SAASnb,QAAQ4pB,GAAK,GAEpD,cAAe22B,EAAf,eAA8B,CAAzB,IAAI32B,EAAE,KACPj5B,KAAK2sD,cAAc1zB,GAAI,GACvBj5B,KAAK4sD,cAAc3zB,GAGvBj5B,KAAK+vD,aAAaH,QAElBH,EAAcl6B,KAAOo6B,EACrBF,EAActiB,eAAehQ,SAC7Bn9B,KAAKwqB,SAASxX,OAAOhT,KAAKwqB,SAASnb,QAAQogD,GAAgB,GAC3DzvD,KAAK2sD,cAAc8C,GAAe,GAClCzvD,KAAK4sD,cAAc6C,GACnBzvD,KAAKylB,OAAOgqC,EAAchlB,iBAC1BglB,EAActiB,eAAe,GAAG6d,iBAChChrD,KAAK+vD,aAAaN,KAntB9B,8BAutBI,SAAiBO,GACb,IAAIz6B,EAAOy6B,EAAOz6B,KAAK3xB,MAAM,GAAG8U,OAAOs3C,EAAOx0D,MAAMwd,KAAK,KACzD,OAAOhZ,KAAKwqB,SAASgD,QAAO,SAACsF,GAAD,OAAaA,EAAQyC,KAAKvc,KAAK,KAAK+qB,WAAWxO,QAztBnF,2BA4tBI,SAAczC,EAA2BoL,GAAqB,WACtDjI,EAAOj2B,KACPmuD,EAAOr7B,EAAQqa,eAAejc,KAAK,gBACnC++B,EAAWn9B,EAAQt3B,KAAK6T,QAAQ,KAChC6iC,EAAwB,MAAZ+d,EAAmB,KAAO,CAAEp7B,MAAO,EAAG+H,IAAKqzB,GAC3DjwD,KAAK0qD,kBAAmB,EACxB7uB,GAAasyB,EAAMA,GAAM,SAAC+B,GACS,MAA3Bp9B,EAAQ2X,kBAAyBylB,EAAUj6B,EAAK+4B,eAAel8B,EAAQ2X,gBAAiBylB,IAC5Fp9B,EAAQt3B,KAAO00D,EACf/B,EAAKta,KAAK/gB,EAAQt3B,MACF,MAAZ0iC,GAAkBA,IACtBjI,EAAKiU,eACLikB,EAAK,GAAGnD,iBACR,EAAKN,kBAAmB,IACzBxY,KA1uBX,oBA6uBI,SAAOzH,GAAqF,IAA/D0lB,IAA+D,yDAA/BnF,EAA+B,wDAExF,GAAuB,MAAnBvgB,EAAyB,YACTzqC,KAAKwqB,UADI,IACzB,2BAA+B,KAAtB4lC,EAAsB,QACvBA,EAAIjjB,eAAekb,SAAS,cAAc+H,EAAIjjB,eAAejS,YAAY,cAFxD,mCAItB,CACH,IAAIN,EAAK56B,KAAKqwD,YAAY5lB,GAE1B,GAAU,MAAN7P,EAAY,YACI56B,KAAKwqB,UADT,IACZ,2BAA+B,KAAtB4lC,EAAsB,QACvBA,EAAIjjB,eAAekb,SAAS,cAAc+H,EAAIjjB,eAAejS,YAAY,cAFrE,8BAMZ,GADAN,EAAGuS,eAAelS,SAAS,aACvB+vB,EAAgB,CAChB,IADgB,EACZsF,EAAa11B,EAAGrF,KAAKvc,KAAK,KADd,KAEDhZ,KAAKwqB,UAFJ,IAEhB,2BAA8B,KAArByO,EAAqB,QACtBs3B,EAASt3B,EAAG1D,KAAK3xB,MAAM,GACvB0sD,EAAWvsB,WAAWwsB,EAAOv3C,KAAK,QAC9BigB,EAAGsR,WACHgmB,EAAOruD,KAAK+2B,EAAGz9B,MACX80D,EAAWvsB,WAAWwsB,EAAOv3C,KAAK,QAClCigB,EAAGkU,eAAejS,YAAY,gBAC9BjC,EAAGkU,eAAelS,SAAS,iBAGnChC,EAAGkU,eAAe/P,SAZV,8BAiBhBxC,EAAGuS,eAAe,GAAG6d,mBAM7BmF,GAAyC,MAAvBnwD,KAAKmtD,gBAAwBntD,KAAKmtD,eAAe1iB,KAnxB/E,2BAuxBI,SAAc7P,GACV,IAAI41B,EAAa51B,EAAGrF,KAAKvc,KAAK,KAK9B,OAJI4hB,EAAG2P,WACO,IAANimB,IAAUA,GAAM,KACpBA,GAAM51B,EAAGp/B,MAENg1D,IA7xBf,6BAgyBI,SAAgB19B,EAA2B4X,G,MACxB,MAAX5X,IACsB,QAAtB,EAAAA,EAAQqa,sBAAczd,SAAEwL,YAAY,MAAQpI,EAAQ4X,WAAWzP,SAAS,MAAQyP,GAChF5X,EAAQ4X,UAAYA,KAnyBhC,yBAwyBI,SAAYD,GAAoB,WACbzqC,KAAKwqB,UADQ,IAC5B,2BAA8B,KAArBoQ,EAAqB,QAC1B,GAAIA,EAAG6P,iBAAmBA,EACtB,OAAO7P,GAHa,8BAO5B,OAAO,OA/yBf,2BAmzBI,SAAc6P,GAAoB,WACfzqC,KAAKwqB,UADU,IAC9B,2BAA8B,KAArBoQ,EAAqB,QAC1B,GAAIA,EAAG6P,iBAAmBA,EAYtB,OAXA7P,EAAGuS,eAAehQ,SACQ,MAAtBvC,EAAGqyB,iBAAyBryB,EAAGqyB,gBAAgB9vB,SACnDn9B,KAAKwqB,SAASxX,OAAOhT,KAAKwqB,SAASnb,QAAQurB,GAAK,QAErB,MAAvB56B,KAAKmtD,iBACDntD,KAAKwqB,SAAS/nB,OAAS,EACvBzC,KAAKylB,OAAOzlB,KAAKwqB,SAAS,GAAGigB,iBAE7BzqC,KAAKylB,OAAO,SAXE,iCAnzBtC,mBAs0BI,WACIzlB,KAAKqrD,aAAa3e,QAClB1sC,KAAKwqB,SAAW,KAx0BxB,wBA20BI,SAAWza,GACP/P,KAAKorD,gBAAgBl6B,KAAK,mBAAmB2iB,KAAK9jC,KA50B1D,gCA+0BI,WAAkB,WACC/P,KAAKwqB,UADN,IACd,2BAA8B,KAArBoQ,EAAqB,QAC1B,GAAIA,EAAGuS,eAAekb,SAAS,aAC3B,OAAOztB,GAHD,8BAMd,OAAO,SAr1Bf,KA21Ba61B,GAAb,WAKI,WAAmBlzC,EAAgBmzC,GAA0B,WAA1C,KAAAnzC,OAHnB,KAAAiwC,MAA0B,GAItBxtD,KAAK0wD,MAAQA,EACbA,EAAMz1B,SAAS,qBAPvB,mCAUI,SAAS01B,GACLA,EAAMC,wBAAwB5wD,KAAK0wD,OACnC1wD,KAAKwtD,MAAMtrD,KAAKyuD,OAZxB,K,+rCC92BO,IAAME,GAAb,WAMI,WAAoBC,EAA8Bv4B,EAA8Bhb,I,4FAAU,SAAtE,KAAAuzC,UAA8B,KAAAv4B,YAA8B,KAAAhb,OAFhF,KAAAwzC,aAAuB,EAGnB/wD,KAAK0rC,O,UAPb,O,EAAA,G,EAAA,mBAUY,WACJ1rC,KAAK2rC,QAAUnR,OAAO,WACtBA,OAAO,SAAS8B,IAAI,aAAc,UAClCt8B,KAAK2rC,QAAQtN,OAAO7D,OAAO,yOAAD,OAGqEx6B,KAAKu4B,UAAU/8B,KAHpF,2iBAgB1B,IAnBQ,EAmBJw1D,EAAex2B,OAAO,uBACtBvE,EAAOj2B,KApBH,KAsBSA,KAAK8wD,SAtBd,IAsBR,2BAA8B,OAAtBzxB,EAAsB,aACPA,EAAM4xB,UADC,yBAClBC,EADkB,QAElBC,EAAe32B,OAAO,oCACtB42B,EAAgB52B,OAAO,oCAAD,OAAqC6E,EAAM7jC,KAA3C,WACtB61D,EAAe72B,OAAO,mCAAD,OAAoC02B,EAAQI,QAA5C,YAAuDJ,EAAQK,aAA/D,WACzBJ,EAAa9yB,OAAO+yB,EAAeC,GACnCL,EAAa3yB,OAAO8yB,GACpBA,EAAa3oC,GAAG,aAAa,WACzB2oC,EAAa1D,YAAY,aACxBx3B,EAAK86B,cAAgBI,EAAa9I,SAAS,aAAe,GAAK,EAC/D7tB,OAAO,2BAA2BzqB,KAAlC,UAA0CkmB,EAAK86B,aAA/C,kCAELI,EAAajyB,KAAK,UAAWgyB,GAC7BC,EAAajyB,KAAK,QAASG,IAZ/B,2BAAkC,IADR,gCAtBtB,8BAuCR7E,OAAO,0BAA0BhS,GAAG,SAAS,WACzC,IAAImnB,EAAqBnV,OAAO,0BAA0BkC,MACzC,MAAdiT,GAAoC,IAAdA,EACrBlO,EAAE,uBAAuBrE,OAEzBqE,EAAE,uBAAuB0K,MAAK,SAAChqB,EAAO2Q,GAClC,IAAIyH,EAAWC,OAAO1H,GAClBuM,EAAkB9E,EAAS2E,KAAK,SAChCgyB,EAAoB32B,EAAS2E,KAAK,YAC3BG,EAAM7jC,KAAO,IAAM01D,EAAQI,QAAU,IAAMJ,EAAQK,cACtDliD,QAAQsgC,IAAe,EAC3BpV,EAAS6C,OAET7C,EAASuC,aASzB98B,KAAKwxD,YAAcxxD,KAAK2rC,QAAQza,KAAK,gBACrClxB,KAAK2rC,QAAQrP,IAAI,aAAc,WAE/B9B,OAAO,wBAAwBhS,GAAG,SAAS,WAAQyN,EAAK6d,WACxDtZ,OAAO,4BAA4BhS,GAAG,SAAS,WAAOyN,EAAKw7B,2BA3EnE,iCA+EI,WAAmB,WAEXjqB,EAAwB,GAC5B/F,EAAE,uBAAuB0K,MAAK,SAAChqB,EAAO2Q,GAClC,IAAIyH,EAAWC,OAAO1H,GACtB,GAAGyH,EAAS8tB,SAAS,aAAa,CAC9B,IAAI6I,EAAoB32B,EAAS2E,KAAK,WACtCsI,EAAYtlC,KAAKgvD,EAAQz6B,QAIjCz2B,KAAK8zC,QAEL9zC,KAAKud,KAAKqZ,eAAe86B,wBAAwB1xD,KAAKu4B,UAAW,KAAMiP,GAAa,SAACrmC,GACjF,GAAa,MAATA,EAAe,CACf,IAAIy1B,EAAiB,EAAKrZ,KAAKqZ,eAC3B9B,EAAK8B,EAAewO,yBAA2BxO,EAAegO,kBAClEsC,MAAM,iBAAD,OAAkB,EAAK3O,UAAU/8B,KAAjC,qBAAkDgsC,EAAY/kC,OAA9D,yDAAqHqyB,EAArH,wCAELoS,MAAM/lC,QAlGtB,mBAyGI,WACInB,KAAK2rC,QAAQrP,IAAI,aAAc,UAC/Bt8B,KAAK2rC,QAAQe,QACblS,OAAO,SAAS8B,IAAI,aAAc,gB,gFA5G1C,K,+rCCQO,IAAMq1B,GAAb,WAYI,WAAoBp0C,EAAoBq0C,I,4FAAwC,SAA5D,KAAAr0C,OAAoB,KAAAq0C,sBAVxC,KAAAC,qBAA+B,KAE/B,KAAAC,yBAAqC,GAsjBrC,KAAAC,eAAyB,K,UA1jB7B,O,EAAA,G,EAAA,sBAgBI,WAEI/xD,KAAKiqD,UAAY,IAAIwG,GAAUzwD,KAAKud,KAAMvd,KAAK4xD,qBAE/C5xD,KAAKgyD,oBAELhyD,KAAKiyD,2BAtBb,+BA0BI,WAEI,IAAIh8B,EAAOj2B,KAEXA,KAAK2pC,cAAgB,IAAIqgB,GAAehqD,KAAKiqD,UAAW,yBAA0B,IAC9E,oBAAqB,gBAAiB,QAAQ,GAAM,EAAO,QAAQ,EAAM,IAE7EjqD,KAAK2pC,cAAcqjB,wBAEf,SAAChE,EAAkBkJ,GAEf,GAAkC,MAA9Bj8B,EAAK1Y,KAAKssB,iBAEV,OADA3C,MAAM,gDACC,KAGX,IAAI3N,EAAU,CACV/9B,KAAMwtD,EAAiBxtD,KACvBw4B,OAAO,EACPoC,OAAO,EACPrmB,KAAM,GACN2mB,qBAAsB,KACtB8B,eAAgB,KAChB7B,+BAA+B,EAC/B8B,QAAS,EACT+R,aAAcwe,GAEd3tD,EAAI,IAAI85B,GAAOoE,EAAGtD,EAAK1Y,MACV0Y,EAAK1Y,KAAKssB,iBAAiBrW,YACjCoG,UAAUv+B,GACrB46B,EAAKk8B,gBAAgB92D,GACrB46B,EAAK1Y,KAAKqZ,eAAew7B,eAAe/2D,EAAG46B,EAAK1Y,KAAKssB,iBAAkB5T,EAAK1Y,KAAKgZ,mBAC7E,SAACp1B,GACgB,MAATA,EACA+wD,EAAuC72D,GAEvC6rC,MAAM,wCAO1BlnC,KAAK2pC,cAAcqlB,eACf,SAACh0D,EAAgBq3D,GACbA,EAAUA,EAAQn/C,OAAO,EAAG,IAC5B,IAAI6gB,EAAO/4B,EAAO+4B,KAKlB,OAHAA,EAAKv4B,KAAO62D,EACZt+B,EAAKqC,OAAQ,EACbH,EAAK1Y,KAAKqZ,eAAeC,cAClBw7B,GAGfryD,KAAK2pC,cAAc6lB,eACf,SAACx0D,EAAgBs3D,GACbr8B,EAAK1Y,KAAKqZ,eAAe27B,0BAA0B,OAAQv3D,EAAO+4B,KAAK0C,IAAI,SAACt1B,GAC3D,MAATA,GACA80B,EAAK1Y,KAAKssB,iBAAiBrW,YAAYwG,aAAah/B,GACpDs3D,KAEAprB,MAAM,wCAMtBlnC,KAAK2pC,cAAculB,oBAAsB,SAAClG,GAqCtC,OAjCM/yB,EAAK1Y,KAAKiZ,KAAKg8B,YAAcv8B,EAAK1Y,KAAKiZ,KAAKgW,UAAYvW,EAAK1Y,KAAKiZ,KAAKiW,gBAC5Cuc,EAAiBve,gBAC5B1W,KAJoB,IAwC9C/zB,KAAK2pC,cAAcwjB,eACf,SAACnyD,GACGi7B,EAAKk8B,gBAAgBn3D,MAzIrC,kCAgJI,SAAqB+4B,G,QACbmZ,EAA+C,QAArC,EAAqB,QAArB,EAAGnZ,aAAI,EAAJA,EAAMyW,oBAAY9a,WAAA,EAAAA,EAAEyd,sBAAcsD,WAAA,EAAAA,EAAEvf,KAAK,gCAC1D,GAAkB,MAAdgc,EAAJ,CAEAA,EAAWhc,KAAK,sBAAsBiM,SAEtC,IAAIkC,EAAgB,KAChBtiB,EAAgB,GAUpB,GAT2B,MAAvBgX,EAAKyE,iBACL6G,EAAQ,eACRtiB,EAAQ,oCAAsCgX,EAAKyE,eAC/CzE,EAAK2C,uBACL2I,EAAQ,yBACRtiB,EAAQ,yBAIH,MAATsiB,EAAe,CACf,IAAIozB,EAAqBj4B,OAAO,iCAAD,OAAkC6E,EAAlC,oBAAmDtiB,EAAnD,aAC/BmwB,EAAWsf,QAAQiG,GACfpzB,EAAMhwB,QAAQ,cAAgB,IAC9BojD,EAAmBjqC,GAAG,aAAa,SAAC/V,GAAD,OAAOA,EAAEkpB,qBAC5C82B,EAAmBjqC,GAAG,SAAS,SAAC/V,GAC5BA,EAAEkpB,0BAvKtB,oCAiLI,WAAsB,WAEd1F,EAAOj2B,KAEXA,KAAKiqC,mBAAqB,IAAI+f,GAAehqD,KAAKiqD,UAAW,cAAe,IACxE,KAAM,oBAAqB,aAAa,GAAM,EAAM,aAAa,EAAO,CAAC,SAE7E,IAAIyI,EAAsBl4B,OAAO,6IAG7B0B,EAAeC,OAAOC,aAAe,UAAY,QAErDs2B,EAAoBlqC,GAAG0T,EAAe,QAAQ,SAACzpB,GAC3CA,EAAEkpB,kBAEF,IAAIgH,EAAmB1M,EAAK1Y,KAAKiZ,KAAKC,GACH,MAA/BR,EAAK1Y,KAAKgZ,oBACVoM,EAAW1M,EAAK1Y,KAAKgZ,mBAGzB,IAAI8wB,GAAkBpxB,EAAK1Y,KAAMolB,EAAU,EAAKsH,mBAAmB8iB,+BAIvE/sD,KAAKiqC,mBAAmB2S,UAAU8V,GACO,MAAtC1yD,KAAKiqC,mBAAmBuhB,YACvBxrD,KAAKiqC,mBAAmBuhB,WAAW1uB,OAGvC98B,KAAKiqC,mBAAmBglB,2BAA6B,SAAC15B,GAClD,IAAIoN,EAAmB1M,EAAK1Y,KAAKiZ,KAAKC,GACH,MAA/BR,EAAK1Y,KAAKgZ,oBACVoM,EAAW1M,EAAK1Y,KAAKgZ,mBAGzB,IAAI8wB,GAAkBpxB,EAAK1Y,KAAMolB,EAAUpN,IAK/Cv1B,KAAKiqC,mBAAmB+kB,eACpB,SAACz2B,EAAsB85B,GAKnB,OAJAA,EAAUA,EAAQn/C,OAAO,EAAG,IAC5BqlB,EAAU/8B,KAAO62D,EACjB95B,EAAUnC,OAAQ,EAClBH,EAAK1Y,KAAKqZ,eAAeC,cAClBw7B,GAGfryD,KAAKiqC,mBAAmBulB,eACpB,SAACj3B,EAAsB25B,GACnBj8B,EAAK1Y,KAAKqZ,eAAe27B,0BAA0B,YAAah6B,EAAU9B,IAAI,SAACt1B,GAC9D,MAATA,GACA80B,EAAK1Y,KAAKo1C,gBAAgBp6B,GAC1BtC,EAAK0T,cAAcipB,gBAAgB38B,EAAK1Y,KAAK2oB,cAAczjC,OAAS,GACpEwzB,EAAK0T,cAAc1V,QACnBgC,EAAK1Y,KAAKs1C,iBAAiB5+B,QAC3BgC,EAAK1Y,KAAKu1C,wBAAwB7+B,QAClCi+B,KAEAhrB,MAAM,wCAMtBlnC,KAAKiqC,mBAAmBkjB,eACpB,SAAC50B,GACMA,EAAUgS,UACThS,GAAa,EAAKhb,KAAKssB,kBACvB5T,EAAK1Y,KAAKqZ,eAAeC,aAAY,WACjCZ,EAAKizB,mBAAmB3wB,OAKxCv4B,KAAKiqC,mBAAmB8gB,kBAAoB,SAACD,EAA8BzpB,GACvE,IAAIsB,EAAmB1M,EAAK1Y,KAAKiZ,KAAKC,GACH,MAA/BR,EAAK1Y,KAAKgZ,oBACVoM,EAAW1M,EAAK1Y,KAAKgZ,mBAGzB,IAAIy5B,EAAoB,IAAIrjB,GAAUme,EAAWtvD,KAAMy6B,EAAK1Y,KAAMolB,GAClEqtB,EAAOzlB,UAAW,EAElBylB,EAAOz6B,KAAOu1B,EAAWv1B,KAAKvc,KAAK,KACnCg3C,EAAOxlB,aAAesgB,EACtBA,EAAWrgB,gBAAkBulB,EAC7B/5B,EAAK1Y,KAAK2oB,cAAchkC,KAAK8tD,GAE7B,IAAInpB,EAA0B,CAC1BpQ,IAAK,EACL8T,UAAU,EACV/uC,KAAMw0D,EAAOx0D,KACb+5B,KAAMy6B,EAAOz6B,MAGjBU,EAAK1Y,KAAKqZ,eAAemyB,oBAAoBliB,EAAI5Q,EAAK1Y,KAAKgZ,mBAAmB,SAACp1B,GAC9D,MAATA,GACA6uD,EAAOv5B,GAAKoQ,EAAGpQ,GACf4K,EAAgB2uB,KAGhB9oB,MAAM,WAAa/lC,GACnB80B,EAAKgU,mBAAmBL,cAAckhB,QAMlD9qD,KAAKiqC,mBAAmB8lB,aAAe,SAACn1B,GAC/BjjB,MAAMC,QAAQgjB,KAAKA,EAAK,CAACA,IADmD,WAEnEA,GAFmE,IAEjF,2BAAkB,KAATxqB,EAAS,QACV+1B,EAAgB/1B,EAAEq6B,gBACtBtE,EAAG5Q,KAAOnlB,EAAEmlB,KAAKvc,KAAK,KACtBmtB,EAAG/P,OAAQ,GALkE,8BAOjF,EAAK7Y,KAAKqZ,eAAeC,eAG7B72B,KAAKiqC,mBAAmBykB,oBAAsB,SAACqE,EAAwBC,EAAkCC,GACrG,IAAI16B,EAAuBw6B,EAAKtoB,gBAC5BzvC,EAAiBg4D,EAAevoB,gBAEpC,KAAIlS,EAAU/E,YAAYM,YAAW,GAAOzkB,QAAQrU,IAAW,GAA/D,CAEA,IAAIu+B,EAAU,CACV/9B,KAAMR,EAAO+4B,KAAKv4B,KAClBw4B,OAAO,EACPoC,OAAO,EACPrmB,KAAM/U,EAAO+4B,KAAKhkB,KAClB2mB,qBAAsB,KACtB8B,eAAgB,KAChB7B,+BAA+B,EAC/B8B,QAASz9B,EAAO+4B,KAAK0E,QACrB+R,aAAc,MAGA,QAAdyoB,IAEmBh9B,EAAK1Y,KAAKssB,iBAChBrW,YAAYwG,aAAah/B,GACtCi7B,EAAK0T,cAAcC,cAAc5uC,GACjCi7B,EAAK1Y,KAAKqZ,eAAe27B,0BAA0B,OAAQv3D,EAAO+4B,KAAK0C,IAAI,gBAG/E,IAAIp7B,EAAI,IAAI85B,GAAOoE,EAAGtD,EAAK1Y,MACVgb,EAAU/E,YAChBoG,UAAUv+B,GACrB46B,EAAK1Y,KAAKqZ,eAAew7B,eAAe/2D,EAAGk9B,EAAWtC,EAAK1Y,KAAKgZ,mBAC5D,SAACp1B,GACgB,MAATA,GAEA+lC,MAAM,yCAStBlnC,KAAKkzD,YAAc14B,OAAO,uHAG1Bx6B,KAAKkzD,YAAY1qC,GAAG0T,EAAc,QAAQ,SAACzpB,GACvCA,EAAEkpB,kBAEF1F,EAAK1Y,KAAKqZ,eAAeC,aAAY,WACjCZ,EAAKk9B,yBAGTl9B,EAAK1Y,KAAKuZ,UAAUs8B,qBAIxBpzD,KAAKiqC,mBAAmB2S,UAAU58C,KAAKkzD,aACvClzD,KAAKkzD,YAAYp2B,OAEjB98B,KAAKiqC,mBAAmBilB,oBAAsB,SAACmE,GAE3C,IAAIC,EAAsC,GAwC1C,OAtCI,EAAK/1C,KAAKiZ,KAAKg8B,YAAc,EAAKj1C,KAAKg2C,gBAAgBC,WAAWhpC,SAAS/nB,OAAS,GACpF6wD,EAAQpxD,KAAK,CACT47B,QAAS,yBACTI,SAAU,SAACpL,KACXmL,QAAS,EAAK1gB,KAAKg2C,gBAAgBC,WAAWhpC,SAAS3S,KAAI,SAAC+iB,GACxD,MAAO,CACHkD,QAASlD,EAAGp/B,KACZ0iC,SAAU,SAACpL,GACP,IAAIyU,EAAc3M,EAAG6P,gBAEjBlS,EAAuBzF,EAAQ2X,gBAEnC,EAAKltB,KAAKqZ,eAAe86B,wBAAwBn5B,EAAWgP,EAAQ,MAAM,SAACpmC,GACvE,GAAa,MAATA,EAAe,CACf,IAAIy1B,EAAiB,EAAKrZ,KAAKqZ,eAC3B9B,EAAK8B,EAAewO,yBAA2BxO,EAAegO,kBAClEsC,MAAM,iBAAmB3O,EAAU/8B,KAAO,wBAA0B+rC,EAAO/rC,KAAO,mCAC9Es5B,EAAK,uCAEToS,MAAM/lC,YAQ1B,CACI28B,QAAS,yCACTI,SAAU,SAACpL,GACP,IAAIg+B,EAAuB,EAAKvzC,KAAKg2C,gBAAgBC,WAAWhpC,SAAS3S,KAAI,SAAA+iB,GAAE,OAAIA,EAAG6P,mBAClFlS,EAAuBzF,EAAQ2X,gBACnC,IAAIomB,GAA2BC,EAASv4B,EAAW,EAAKhb,SAMjE+1C,KA9YnB,iCAmZI,WACItzD,KAAKud,KAAKg2C,gBAAgBE,uBAC1BzzD,KAAKud,KAAKqZ,eAAewO,yBAA2BplC,KAAKud,KAAKqZ,eAAesO,4BAC7EllC,KAAKkzD,YAAYp2B,OACjB98B,KAAK2pC,cAAcipB,gBAAgB5yD,KAAKud,KAAK2oB,cAAczjC,OAAS,KAvZ5E,yBA0ZI,SAAY81B,GAER,IAAI/8B,EAAoB,MAAb+8B,EAAoB,2BAA6BA,EAAU/8B,KAKtE,GAHAwE,KAAK2pC,cAAc+pB,WAAWl4D,GAC9BwE,KAAK2pC,cAAc1V,QAEoB,MAAnCj0B,KAAKud,KAAKwX,sBAA+B,YACtB/0B,KAAKud,KAAKwX,sBAAsBvB,YAAYM,YAAW,IADjC,IACzC,2BAAkF,QACvEC,KAAKyW,aAAe,KAFU,+BAM7C,GAAiB,MAAbjS,EAAmB,CACnB,IADmB,EACfo7B,EAAuB,GADR,KAGLp7B,EAAU/E,YAAYM,YAAW,IAH5B,IAGnB,2BAAuD,KAA9Cz4B,EAA8C,QACnDs4D,EAAWzxD,KAAK7G,IAJD,8BAOnBs4D,EAAWz6B,MAAK,SAAC9oB,EAAG8nB,GAAQ,OAAO9nB,EAAE2jB,KAAKv4B,KAAO08B,EAAEnE,KAAKv4B,KAAO,EAAI4U,EAAE2jB,KAAKv4B,KAAO08B,EAAEnE,KAAKv4B,MAAQ,EAAI,KAEpG,cAAcm4D,EAAd,eAA0B,CAArB,IAAIt4D,EAAC,KAENA,EAAE04B,KAAKyW,aAAe,CAClBhvC,KAAMH,EAAE04B,KAAKv4B,KACbivC,gBAAiBpvC,EACjBkvC,UAAU,EACVhV,KAAM,IAGVv1B,KAAK2pC,cAAcgB,WAAWtvC,EAAE04B,KAAKyW,cAAc,GACnDxqC,KAAKk3B,qBAAqB77B,EAAE04B,MAGhC/zB,KAAK2pC,cAAcO,kBA7b/B,8BAkcI,SAAiBhE,GAEblmC,KAAK2pC,cAAc1V,QACnBj0B,KAAKiqC,mBAAmBhW,QAHe,WAKzBiS,GALyB,IAKvC,2BAA6B,KAApBkE,EAAoB,QACrB7U,EAAO6U,EAAE7U,KAAK/J,MAAM,KACL,GAAf+J,EAAK9yB,QAA0B,IAAX8yB,EAAK,KAAUA,EAAO,IAC9C6U,EAAEI,aAAe,CACbhvC,KAAM4uC,EAAE5uC,KACRivC,gBAAiBL,EACjBM,UAAW,YACXH,SAAUH,EAAEG,SACZhV,KAAMA,GAGVv1B,KAAKiqC,mBAAmBU,WAAWP,EAAEI,cAAc,GACnDJ,EAAE6e,qBAAqB7e,EAAEI,eAjBU,8BAoBvCxqC,KAAKiqC,mBAAmBC,eACxBlqC,KAAK2pC,cAAcipB,gBAAgB1sB,EAAczjC,OAAS,KAvdlE,8BA6dI,SAAiB81B,EAAsBq7B,GACnC,GAAqB,MAAjBA,EAAJ,CADqE,WAEvDr7B,EAAU/E,YAAYM,YAAW,IAFsB,IAErE,2BAAuD,KAA9Cz4B,EAA8C,QAC/Cw4D,EAAqBD,EAAc93D,IAAIT,GACvCy4D,EAAsC,MAAdD,GAAoC,GAAdA,EAAmB,GAAK,IAAMA,EAAa,IAE7F7zD,KAAK2pC,cAAcoqB,qBAAqB14D,EAAE04B,KAAKyW,aAAcspB,EAAa,kBANT,kCA7d7E,gCAueI,SAAmB1pB,GAAY,WAElB,MAALA,GACApqC,KAAK2pC,cAAc6hB,WAAWpuB,OAGlCp9B,KAAKiqC,mBAAmBxkB,OAAO2kB,GAAG,GAElC,IAAIlM,EAAW,SAAC/8B,GAAmB,EAAK6yD,uBAAuB7yD,EAAOipC,IAEpD,MAAdA,EAAEvC,UACF7nC,KAAKud,KAAK2tB,YAAY9N,KAAK,+CAE3Bp9B,KAAKud,KAAKqZ,eAAeq9B,cAAc7pB,EAAGlM,IAE1CA,EAAS,QAtfrB,oCA2fI,SAAuB/8B,EAAeipC,GAAY,WAC9C,GAAa,MAATjpC,EAAJ,CAKA,IAAIgqC,EAASnrC,KAAKud,KAAKoX,kBAEnB2N,EAAuB8H,EAAEvC,SAASvF,WACpB,MAAdA,IAAoBA,EAAa,IAErC6I,EAAO2a,iBAAiB1b,EAAEvC,SAASpF,aAAcH,GAC7C,WASI,GARA,EAAK/kB,KAAKssB,iBAAmBO,EAEzB,EAAK7sB,KAAKiZ,KAAKC,IAAM2T,EAAEzH,WACvB,EAAKplB,KAAKiZ,KAAK09B,oBAAsB9pB,EAAE3T,IAG3C,EAAK09B,YAAY/pB,GAER,MAALA,EAAW,CACX,IAAIgqB,EAAmBhqB,EAAE5W,YAAYM,YAAW,GAEnB,MAAzBsW,EAAE4C,oBACF,EAAKmlB,gBAAgB/nB,EAAE4C,qBAChBonB,EAAiB3xD,OAAS,EACjC,EAAK0vD,gBAAgBiC,EAAiB,IAEtC,EAAKjC,gBAAgB,MARd,WAWGiC,GAXH,IAWX,2BAAgC,QAC1BrgC,KAAKC,OAAQ,EAZR,8BAeoB,GAA3BogC,EAAiB3xD,QAEjB+wC,GAAOkL,WAAW,mBAAoB,EAAKnhC,KAAM,EAAKosB,cAAcyhB,iBAIxE,EAAK7tC,KAAK82C,SAASzwB,QAAQwG,QAG3B,EAAK+nB,gBAAgB,SAI7B,WACI,EAAK50C,KAAKs1C,iBAAiByB,oCAC3B,EAAK/2C,KAAKg3C,mBAAmBC,uBAAuBpqB,EAAEvC,SAASvF,oBAjDnE4E,MAAM/lC,KA7flB,mCAmjBI,WACI,IAAIszD,EAAMz0D,KAAKo0B,2BACJ,MAAPqgC,IACAA,EAAI1gC,KAAKhkB,KAAO0kD,EAAItgC,mCAtjBhC,6BA2jBI,SAAgB94B,GAEZ2E,KAAKud,KAAKuZ,UAAUC,gBAAgB29B,eAET,MAAvB10D,KAAK+xD,iBACL/xD,KAAK+xD,eAAeh+B,KAAKhkB,KAAO/P,KAAK+xD,eAAe59B,gCACpDn0B,KAAK+xD,eAAe4C,YAAc30D,KAAKud,KAAKuwB,kBAAkB8mB,iBAGzD,MAALv5D,GACA2E,KAAKud,KAAKuwB,kBAAkB+mB,SAAS9iD,OAAOqB,OAAOwiB,YAAY,yBAA0B,SACzF51B,KAAKud,KAAKuwB,kBAAkBjY,cAAc,CAAEi/B,UAAU,MAEtD90D,KAAKud,KAAKuwB,kBAAkBjY,cAAc,CAAEi/B,UAAU,IACtD90D,KAAKud,KAAKuwB,kBAAkB+mB,SAASx5D,EAAE8W,OACP,MAA5BnS,KAAKud,KAAK8W,gBAAwBr0B,KAAKud,KAAK8W,eAAeC,aAAaC,uBAAuBl5B,EAAEyS,cAElE,MAA/BzS,EAAE04B,KAAK2C,qBACP12B,KAAKud,KAAKuZ,UAAUC,gBAAgBC,6BAEpCh3B,KAAKud,KAAKuZ,UAAUC,gBAAgBg+B,gCA/kBpD,4CAslBI,SAA+B15D,GAAS,WACpC2E,KAAK2pC,cAAclkB,OAAOpqB,GAAG,GAE7B2E,KAAK+xD,eAAiB12D,EAED,MAAjBA,EAAEs5D,cACF30D,KAAKud,KAAKnK,OAAOqhC,yBACjBz0C,KAAKud,KAAKuwB,kBAAkBknB,iBAAiB35D,EAAEs5D,aAC/C30D,KAAKud,KAAKnK,OAAOqhC,0BAGrBz0C,KAAKi1D,yBAAyB55D,GAE9B2E,KAAKk1D,qBAELn4B,YAAW,WACF,EAAKxf,KAAKuwB,kBAAkBuO,aAAavgD,IAAIiW,OAAOqB,OAAOwmC,aAAakb,WACzE,EAAKv3C,KAAKuwB,kBAAkB9Q,UAEjC,OAzmBX,gCA8mBY,WAEJ,GAAIh9B,KAAK6xD,sBAAwB7xD,KAAKo0B,4BAAiE,MAAnCp0B,KAAKo0B,2BAAoC,CACzG,IAAI5kB,EAAWxP,KAAKm1D,uBAChBxiD,EAAQ,CACRI,YAAavD,EAAStB,OAAQ2E,gBAAiBrD,EAASvB,KACxD6E,UAAWtD,EAAStB,OAASsB,EAAS/M,OAAQmQ,cAAepD,EAASvB,MAG1EjO,KAAKud,KAAKuwB,kBAAkBsnB,qCAAqCziD,GACjE3S,KAAK8xD,yBAA2B9xD,KAAKud,KAAKuwB,kBAAkB6Q,iBAAiB3+C,KAAK8xD,yBAA0B,CACxG,CACIn/C,MAAOA,EACPN,QAAS,CACLurC,UAAW,0BAA2BC,aAAa,EACnDC,cAAe,CACXrhB,MAAO,UACPjtB,SAAUuC,OAAOqB,OAAO4qC,kBAAkBqX,QAE9Clc,QAAS,CACL1c,MAAO,UACPjtB,SAAUuC,OAAOqB,OAAOkrC,gBAAgBC,UAIpD,CACI5rC,MAAOA,EACPN,QAAS,CAAEijD,uBAAwB,uCAzoBvD,wCAgpBI,SAA2BvhC,EAAYvkB,GAGnC,GAAY,MAARukB,EAAJ,CAIA,IAAI/4B,EAASgF,KAAKud,KAAKssB,iBAAiBrW,YAAY+hC,iBAAiBxhC,GACvD,MAAV/4B,IAIJgF,KAAK6xD,qBAAuB72D,EAC5BgF,KAAKm1D,uBAAyB3lD,EAE1BxU,GAAUgF,KAAKo0B,2BACfp0B,KAAKmyD,gBAAgBn3D,GAErBgF,KAAKk1D,yBAlqBjB,wCAuqBI,WACQl1D,KAAKo0B,4BAA8Bp0B,KAAK6xD,sBACxC7xD,KAAKud,KAAKuwB,kBAAkB6Q,iBAAiB3+C,KAAK8xD,yBAA0B,IAEhF9xD,KAAK6xD,qBAAuB,KAC5B7xD,KAAK8xD,yBAA2B,KA5qBxC,sCA+qBI,WACI,IAAI3rB,EAAKnmC,KAAKud,KAAKssB,iBACnB,OAAU,MAAN1D,EAAmB,KAEhBA,EAAG6G,sBAnrBlB,sCAsrBI,SAAyB3xC,GACrB,GAAS,MAALA,EAAJ,CACA,IAAI8qC,EAAKnmC,KAAKud,KAAKssB,iBACf1D,EAAG6G,qBAAuB3xC,IAC1B8qC,EAAG6G,oBAAsB3xC,EACzB8qC,EAAG/P,OAAQ,EACX/6B,EAAE04B,KAAKC,OAAQ,MA5rB3B,8BAgsBI,SAAiByI,GACb,IAAIqB,EAES,MAATrB,GACAA,EAAQ,cACRqB,EAAU,qBAEVA,EAAU,aAGd99B,KAAK2pC,cAAc0hB,aAAa3+B,SAAS4P,IAAI,mBAAoBG,GACjEz8B,KAAKiqC,mBAAmBohB,aAAa3+B,SAAS4P,IAAI,mBAAoBG,GAEtEz8B,KAAKiqC,mBAAmBypB,WAAW51B,KA7sB3C,0BAgtBI,SAAa/J,GACT,OAAO,IAAIoB,GAAOpB,EAAM/zB,KAAKud,W,gFAjtBrC,K,uKCTO,IAAMi4C,GAAb,WAOI,WAAoBj4C,EAAuBk4C,I,4FAA8B,SAArD,KAAAl4C,OAAuB,KAAAk4C,YAL3C,KAAAC,aAAuB,EAOnB11D,KAAK21D,MAAQF,EAAUvkC,KAAK,YAC5BlxB,KAAK41D,UAAYH,EAAUvkC,KAAK,mBAETlxB,KAAK41D,UAAU1kC,KAAK,8BAA8BzuB,OACjDzC,KAAK41D,UAAU1kC,KAAK,+BAA+BzuB,OAD3E,IAGIwzB,EAAOj2B,KACP61D,EAAyB,OAC7BJ,EAAUvkC,KAAK,oBAAoB1I,GAAG,SAAS,WAE3CyN,EAAKy/B,aAAez/B,EAAKy/B,YAEzB,IAAII,EAAet7B,OAAO,oBAErBvE,EAAKy/B,aAUNl7B,OAAO,SAAS8B,IAAI,UAAW,QAC/Bu5B,EAAiBr7B,OAAO,aAAa8B,IAAI,SACzC9B,OAAO,aAAa8B,IAAI,QAAS,QACjCw5B,EAAa56B,YAAY,oBACzB46B,EAAa76B,SAAS,yBAEtBT,OAAO,yBAAyB6D,OAAO7D,OAAO,cAC9Cs7B,EAAa96B,KAAK,QAAS,kCAC3BR,OAAO,gBAAgB2E,QAAQ,iBAjB/B3E,OAAO,SAAS8B,IAAI,UAAW,QAC/B9B,OAAO,aAAa8B,IAAI,QAASu5B,GAEjCC,EAAa56B,YAAY,yBACzB46B,EAAa76B,SAAS,oBACtBT,OAAO,aAAa0yB,YAAY1yB,OAAO,eACvCs7B,EAAa96B,KAAK,QAAS,+BAC3BR,OAAO,gBAAgB2E,QAAQ,mB,UA/B/C,O,EAAA,G,EAAA,sBA+CI,WACIP,GAAS5+B,KAAKy1D,gB,gFAhDtB,K,uKCDO,IAAMM,GAAb,WAII,WAAYx4C,I,4FAAU,SAClBvd,KAAKud,KAAOA,E,UALpB,O,EAAA,G,EAAA,0BAQI,WACI,IAAI0Y,EAAOj2B,KAEPk8B,EAAeC,OAAOC,aAAe,UAAY,QAErD5B,OAAO,YAAYhS,GAAG0T,EAAe,QAAQ,SAAC85B,GAE1C,IAAIx4B,EAAIw4B,EAAGC,QAEXz7B,OAAOhkB,UAAUgS,GAAG0T,EAAe,gBAAgB,SAAClN,GAChD,IAAIknC,EAAKlnC,EAAGinC,QAAUz4B,EAEtBvH,EAAKkgC,cAAcD,GAEnB14B,EAAIxO,EAAGinC,WAGXz7B,OAAOhkB,UAAUgS,GAAG0T,EAAe,cAAc,WAC7C1B,OAAOhkB,UAAU0mB,IAAIhB,EAAe,gBACpC1B,OAAOhkB,UAAU0mB,IAAIhB,EAAe,oBAM5C1B,OAAO,YAAYhS,GAAG0T,EAAe,QAAQ,SAAC85B,GAE1C,IAAIv4B,EAAIu4B,EAAGI,QAEX57B,OAAOhkB,UAAUgS,GAAG0T,EAAe,gBAAgB,SAAClN,GAChD,IAAIqnC,EAAKrnC,EAAGonC,QAAU34B,EAEtBxH,EAAKqgC,cAAcD,GAEnB54B,EAAIzO,EAAGonC,WAGX57B,OAAOhkB,UAAUgS,GAAG0T,EAAe,cAAc,WAC7C1B,OAAOhkB,UAAU0mB,IAAIhB,EAAe,gBACpC1B,OAAOhkB,UAAU0mB,IAAIhB,EAAe,oBAM5C1B,OAAO,YAAYhS,GAAG0T,EAAe,QAAQ,SAAC85B,GAE1C,IAAIx4B,EAAIw4B,EAAGC,QAEXz7B,OAAOhkB,UAAUgS,GAAG0T,EAAe,gBAAgB,SAAClN,GAChD,IAAIknC,EAAKlnC,EAAGinC,QAAUz4B,EAEtBvH,EAAKsgC,aAAaL,GAElB14B,EAAIxO,EAAGinC,QACPjnC,EAAG2M,qBAGPnB,OAAOhkB,UAAUgS,GAAG0T,EAAe,cAAc,WAC7C1B,OAAOhkB,UAAU0mB,IAAIhB,EAAe,gBACpC1B,OAAOhkB,UAAU0mB,IAAIhB,EAAe,oBAM5C,IAAIs6B,EAAiBh8B,OAAO,uGAC5BA,OAAO,YAAY6D,OAAOm4B,GAC1BA,EAAehuC,GAAG0T,EAAe,QAAQ,SAAC85B,GACtC,IAAIv4B,EAAIu4B,EAAGI,QACP54B,EAAIw4B,EAAGC,QAEXD,EAAGS,2BAEHj8B,OAAOhkB,UAAUgS,GAAG0T,EAAe,iBAAiB,SAAClN,GACjD,IAAIqnC,EAAKrnC,EAAGonC,QAAU34B,EAClBy4B,EAAKlnC,EAAGinC,QAAUz4B,EACtBxO,EAAGynC,2BAEHxgC,EAAKkgC,cAAcD,GACnBjgC,EAAKqgC,cAAcD,GAEnB74B,GAAK04B,EACLz4B,GAAK44B,KAGT77B,OAAOhkB,UAAUgS,GAAG0T,EAAe,eAAe,WAC9C1B,OAAOhkB,UAAU0mB,IAAIhB,EAAe,iBACpC1B,OAAOhkB,UAAU0mB,IAAIhB,EAAe,qBAK5C,IAAIw6B,EAAkBl8B,OAAO,wGAC7BA,OAAO,YAAY6D,OAAOq4B,GAC1BA,EAAgBluC,GAAG0T,EAAe,QAAQ,SAAC85B,GACvC,IAAIv4B,EAAIu4B,EAAGI,QACP54B,EAAIw4B,EAAGC,QAEXD,EAAGS,2BAEHj8B,OAAOhkB,UAAUgS,GAAG0T,EAAe,kBAAkB,SAAClN,GAClD,IAAIqnC,EAAKrnC,EAAGonC,QAAU34B,EAClBy4B,EAAKlnC,EAAGinC,QAAUz4B,EACtBxO,EAAGynC,2BAEHxgC,EAAKsgC,aAAaL,GAClBjgC,EAAKqgC,cAAcD,GAEnB74B,GAAK04B,EACLz4B,GAAK44B,KAGT77B,OAAOhkB,UAAUgS,GAAG0T,EAAe,gBAAgB,WAC/C1B,OAAOhkB,UAAU0mB,IAAIhB,EAAe,kBACpC1B,OAAOhkB,UAAU0mB,IAAIhB,EAAe,wBA3HpD,0BAkII,SAAag6B,GACT,IAAIS,EAAUn8B,OAAO,0BACjBi7B,EAAYj7B,OAAO,aAEnB+B,EAAQjrB,OAAOC,SAASkkD,EAAUn5B,IAAI,SAAS3uB,QAAQ,KAAM,KACjE8nD,EAAUn5B,IAAI,QAAUC,EAAQ25B,EAAM,MAEtC,IAAIU,EAAUtlD,OAAOC,SAASolD,EAAQr6B,IAAI,SAAS3uB,QAAQ,KAAM,KACjEgpD,EAAQr6B,IAAI,QAAUs6B,EAAUV,EAAM,MAEtCl2D,KAAKud,KAAKuwB,kBAAkB+oB,SACyB,MAAlD72D,KAAKud,KAAKuZ,UAAUC,gBAAgB+/B,YACnC92D,KAAKud,KAAKuZ,UAAUC,gBAAgB+/B,WAAWD,SAGnDr8B,OAAO,gBAAgB2E,QAAQ,eAC/B5C,GAAS25B,IAlJjB,2BAoJI,SAAcG,GACV,IAAIM,EAAUn8B,OAAO,0BACjBu8B,EAAav8B,OAAO,oBAEpBgC,EAASlrB,OAAOC,SAASwlD,EAAWz6B,IAAI,UAAU3uB,QAAQ,KAAM,KACpEopD,EAAWz6B,IAAI,SAAWE,EAAS65B,EAAM,MAEzC,IAAIW,EAAW1lD,OAAOC,SAASolD,EAAQr6B,IAAI,UAAU3uB,QAAQ,KAAM,KACnEgpD,EAAQr6B,IAAI,SAAW06B,EAAWX,EAAM,MAExCr2D,KAAKud,KAAKuwB,kBAAkB+oB,SACyB,MAAlD72D,KAAKud,KAAKuZ,UAAUC,gBAAgB+/B,YACnC92D,KAAKud,KAAKuZ,UAAUC,gBAAgB+/B,WAAWD,WAhK3D,2BAoKI,SAAcX,GACV,IAAIe,EAAaz8B,OAAO,cACpBm8B,EAAUn8B,OAAO,0BAEjB+B,EAAQjrB,OAAOC,SAAS0lD,EAAW36B,IAAI,SAAS3uB,QAAQ,KAAM,KAClEspD,EAAW36B,IAAI,QAAUC,EAAQ25B,EAAM,MAEvC,IAAIU,EAAUtlD,OAAOC,SAASolD,EAAQr6B,IAAI,SAAS3uB,QAAQ,KAAM,KACjEgpD,EAAQr6B,IAAI,QAAUs6B,EAAUV,EAAM,MACtCl2D,KAAKud,KAAKuwB,kBAAkB+oB,SACyB,MAAlD72D,KAAKud,KAAKuZ,UAAUC,gBAAgB+/B,YACnC92D,KAAKud,KAAKuZ,UAAUC,gBAAgB+/B,WAAWD,c,gFA/K3D,K,+rCCIO,IAAMK,GAAb,WASI,WAAoB35C,EAAoB45C,I,4FAAsB,SAA1C,KAAA55C,OAAoB,KAAA45C,Y,UAT5C,O,EAAA,G,EAAA,2BAaI,WACIn3D,KAAKwzD,WAAWr2B,SAChBn9B,KAAKo3D,aAAaj6B,WAf1B,qBAkBI,WAEIn9B,KAAKq3D,mBAELr3D,KAAKs3D,iBAELt3D,KAAKu3D,cAAcv3D,KAAKm3D,aAxBhC,8BA4BI,WAAgB,WAERlhC,EAAOj2B,KAEXA,KAAKo3D,aAAe,IAAIpN,GAAehqD,KAAKud,KAAK0Z,gBAAgBgzB,UAC7D,gBAAiB,IAAK,KACtB,GAAI,WAAW,GAAO,EAAO,WAAW,EAAO,IAEnDjqD,KAAKo3D,aAAajK,eAAiB,SAACvyB,GAEhC3E,EAAK1Y,KAAKqZ,eAAeC,aAAY,WAQjCuK,GAAK,gBAN+B,CAChCo2B,UAAW58B,EAAGnE,GACd+P,OAAQ,EAAKjpB,KAAKiZ,KAAKC,GACvBgQ,SAAU,IAGiB,SAAC3E,GACJ,GAApBA,EAASD,UAEL5L,EAAK1Y,KAAKgZ,mBAAqBN,EAAK1Y,KAAKiZ,KAAKC,KAC9CR,EAAKwhC,cAAgBxhC,EAAK1Y,KAAK2oB,cAActiC,QAC7CqyB,EAAKyhC,oBAAsBzhC,EAAK1Y,KAAKssB,kBAGzC5T,EAAK1Y,KAAKo6C,kBAAkB71B,EAASoH,YACrCjT,EAAK1Y,KAAKgZ,kBAAoBqE,EAAGnE,GACjCR,EAAK1Y,KAAK0Z,gBAAgB2gC,iBAAiB,uBAC3C3hC,EAAK1Y,KAAK0Z,gBAAgBi8B,YAAY91B,OACtCoW,GAAOkL,WAAW,mBAAoB,EAAKnhC,MAE3C0Y,EAAK1Y,KAAKuZ,UAAU+gC,kBACpB5hC,EAAK1Y,KAAKuZ,UAAUC,gBAAgB+gC,mBAAmB7hC,EAAK1Y,KAAK2oB,gBAGrE,EAAK3oB,KAAKqZ,eAAewO,yBAA2B,EAAK7nB,KAAKqZ,eAAeuO,gCAC7E,EAAK5nB,KAAKqZ,eAAeyO,sBAAwB,EAAK9nB,KAAKqZ,eAAeuO,yCAjE9F,kCA0EI,WACI,IAAI5nB,EAAOvd,KAAKud,KAGhBA,EAAKuwB,kBAAkBjY,cAAc,CAAEi/B,UAAU,IAEjDv3C,EAAK2oB,cAAgBlmC,KAAKy3D,cAC1Bl6C,EAAKssB,iBAAmB7pC,KAAK03D,oBAC7Bn6C,EAAKgZ,kBAAoBhZ,EAAKiZ,KAAKC,GACnClZ,EAAK0Z,gBAAgB2gC,iBAAiB,MAEtCr6C,EAAK0Z,gBAAgB8gC,iBAAiBx6C,EAAK2oB,eAEd,MAAzB3oB,EAAKssB,kBAA4BtsB,EAAK2oB,cAAczjC,OAAS,IAC7D8a,EAAKssB,iBAAmBtsB,EAAK2oB,cAAc,IAGlB,MAAzB3oB,EAAKssB,kBACLtsB,EAAK0Z,gBAAgBiyB,mBAAmB3rC,EAAKssB,kBAGjD7pC,KAAKo3D,aAAa3xC,OAAO,MAAM,KA/FvC,4BAmGI,WAAc,WACNwQ,EAAOj2B,KAEXA,KAAKwzD,WAAa,IAAIxJ,GAAehqD,KAAKud,KAAK0Z,gBAAgBgzB,UAC3D,UAAW,IAAK,KAAM,GAAI,SAAS,GAAO,EAAO,SAAS,EAAO,IAErEjqD,KAAKwzD,WAAWrG,eAAiB,SAAC6K,GAC9B/hC,EAAK1Y,KAAKqZ,eAAeC,aAAY,WAEjC,IAAIsgC,EAAuBa,EACV,MAAbb,GACA,EAAKc,eAAed,EAAUlG,gBA9GlD,4BAuHI,SAAeiH,GACXl4D,KAAKo3D,aAAanjC,QAElBikC,EAAah/B,MAAK,SAAC9oB,EAAG8nB,GAClB,OAAI9nB,EAAEmhD,aAAer5B,EAAEq5B,aAAqB,EACxCr5B,EAAEq5B,aAAenhD,EAAEmhD,cAAsB,EACzCnhD,EAAEkhD,QAAUp5B,EAAEo5B,QAAgB,EAC9Bp5B,EAAEo5B,QAAUlhD,EAAEkhD,SAAiB,EAC5B,KARwB,WAWpB4G,GAXoB,IAWnC,2BAA6B,KAApBC,EAAoB,QACrBv9B,EAAuB,CACvBp/B,KAAM28D,EAAG5G,aAAe,KAAO4G,EAAG7G,QAClCtD,SAAUmK,EAAG5G,aAAe,IAAM4G,EAAG7G,QACrC7mB,gBAAiB0tB,EACjB5tB,UAAU,EACVhV,KAAM,IAEVv1B,KAAKo3D,aAAazsB,WAAW/P,GAAI,IAnBF,iCAvH3C,2BA+II,SAAcw9B,GACVp4D,KAAKo3D,aAAanjC,QAElBmkC,EAAcl/B,MAAK,SAAC9oB,EAAG8nB,GACnB,OAAI9nB,EAAE5U,KAAO08B,EAAE18B,KAAa,EACxB08B,EAAE18B,KAAO4U,EAAE5U,MAAc,EACtB,KANyB,WASrB48D,GATqB,IASpC,2BAA8B,KAArBC,EAAqB,QACtBz9B,EAAuB,CACvBp/B,KAAM68D,EAAG78D,KACTivC,gBAAiB4tB,EACjB9tB,UAAU,EACVhV,KAAM,IAEVv1B,KAAKwzD,WAAW7oB,WAAW/P,GAAI,IAhBC,oC,gFA/I5C,K,qXCFO,IAAM09B,GAAb,WAII,WAAoB/6C,GAAU,WAAV,KAAAA,OAJxB,+BAQI,WAC8Bid,OAAO,2BATzC,K,uKCGO,IAAM+9B,GAAb,WAGI,WAAoBh7C,I,4FAAU,SAAV,KAAAA,O,UAHxB,O,EAAA,G,EAAA,sBAOI,WAAO,WAEC0Y,EAAOj2B,KAEPw4D,EAAgBh+B,OAAO,sBAE3BA,OAAO,mBAAmBwC,QAE1BxC,OAAO,mBAAmBhS,GAAG,WAAW,SAAC/V,GACxB,SAATA,EAAEjW,KACFg+B,OAAO,mBAAmBwC,WAIlCxC,OAAO,mBAAmBhS,GAAG,WAAW,SAAC/V,GACxB,SAATA,EAAEjW,KACFg+B,OAAO,iBAAiB2E,QAAQ,YAIxC3E,OAAO,mBAAmBhS,GAAG,WAAW,SAAC/V,GACxB,OAATA,EAAEjW,MACFiW,EAAEmpB,iBACFpB,OAAO,iBAAiBwC,QACxBxC,OAAO,iBAAiBS,SAAS,cAExB,SAATxoB,EAAEjW,KACFg+B,OAAO,iBAAiB2E,QAAQ,YAIxC3E,OAAO,iBAAiBhS,GAAG,WAAW,SAAC/V,GACtB,OAATA,EAAEjW,KACFiW,EAAEmpB,iBACFpB,OAAO,mBAAmBwC,QAC1BxC,OAAO,iBAAiBU,YAAY,cAEpCV,OAAO,iBAAiB2E,QAAQ,YAKxC,IAAIs5B,GAAgB,EACpBj+B,OAAO,iBAAiBhS,GAAG,SAAS,WAEhCgwC,EAAcp7B,OAEVq7B,IACJA,GAAgB,EAEhB17B,YAAW,WACP07B,GAAgB,IACjB,KAQHr3B,GAAK,QAN4B,CAC7Bs3B,SAAkBl+B,OAAO,mBAAmBkC,MAC5Ci8B,SAAkBn+B,OAAO,mBAAmBkC,MAC5C+J,SAAU,IAGc,SAAC3E,GAEzB,GAAKA,EAASD,QAEP,CAOHrH,OAAO,UAAUsC,OAEjB,EAAKvf,KAAK2tB,YAAY9N,KAAK,mBAE3B,IAAI5G,EAAiBsL,EAAStL,KACT,MAAjBA,EAAKkR,UAAmD,MAA/BlR,EAAKkR,SAASyM,gBACvC3d,EAAKkR,SAAW,CACZyM,cAAe,GAEfykB,UAAW,KACXC,aAAc,OAItB,EAAKt7C,KAAKu7C,mBAAqB,WAE3B7iC,EAAK1Y,KAAKksC,SAASsP,QAAQviC,GAE3BP,EAAK1Y,KAAK2tB,YAAYpO,OACtB07B,EAAc17B,OACdtC,OAAO,uBAAuBqZ,KAAKzlB,GAAWoI,EAAK86B,SAAW,IAAMljC,GAAWoI,EAAK+6B,eAEpF,IAAI+G,GAASriC,EAAK1Y,MAAMmuB,OAEpBlV,EAAKg8B,YACLv8B,EAAK1Y,KAAKy7C,oBAAoBl3B,EAASm3B,WAG3ChjC,EAAK1Y,KAAKiZ,KAAOA,EAEjBP,EAAK1Y,KAAKo6C,kBAAkB71B,EAASoH,YACrCjT,EAAK1Y,KAAKgZ,kBAAoBC,EAAKC,GAEnCR,EAAK1Y,KAAKqZ,eAAesiC,kBAEzBjjC,EAAK1Y,KAAK0Z,gBAAgB0S,cAAcwvB,UAAU3iC,EAAKg8B,YACvDv8B,EAAK1Y,KAAK0Z,gBAAgBgT,mBAAmBkvB,UAAU3iC,EAAKg8B,YAE5Dv8B,EAAK1Y,KAAK++B,mBAAmB8c,eAC7BnjC,EAAK1Y,KAAKuZ,UAAUs8B,kBAEpBn9B,EAAK1Y,KAAKqZ,eAAeyiC,4BAII,GAA7B,EAAK97C,KAAK+7C,kBACV,EAAK/7C,KAAKu7C,qBACV,EAAKv7C,KAAKu7C,mBAAqB,WAvDnCt+B,OAAO,kBAAkBqZ,KAAK,yDA4DnC,SAAC0lB,GACA/+B,OAAO,kBAAkBqZ,KAAK,sBAAwB0lB,GACtD/+B,OAAO,sBAAsBsC,cAMrCtC,OAAO,iBAAiBhS,GAAG,SAAS,WAEhC,EAAKjL,KAAK2tB,YAAY9N,KAAK,wEAEvB,EAAK7f,KAAKgZ,mBAAqB,EAAKhZ,KAAKiZ,KAAKC,IAC9C,EAAKlZ,KAAK0Z,gBAAgBk8B,sBAG9B,EAAK51C,KAAKqZ,eAAeC,aAAY,W,MAMjCuK,GAAK,SAJ8B,CAC/BsF,mBAA8C,QAA5B,EAAE,EAAKnpB,KAAKssB,wBAAgBna,WAAA,EAAAA,EAAE+G,KAGtB,WAE1B,EAAKlZ,KAAKqZ,eAAemP,wBAAuB,eAEhDvL,OAAO,UAAU4C,OACjB,EAAK7f,KAAK2tB,YAAYpO,OACtBtC,OAAO,kBAAkBkS,QACzB,EAAKnvB,KAAKuwB,kBAAkB+mB,SAAS9iD,OAAOqB,OAAOwiB,YAAY,GAAI,WACnE,EAAKrY,KAAK0Z,gBAAgB0S,cAAc1V,QACxC,EAAK1W,KAAK0Z,gBAAgBgT,mBAAmBhW,QAE7C,EAAK1W,KAAKs1C,iBAAiB5+B,QAC3B,EAAK1W,KAAKi8C,mBAAmBvlC,QAEzB,EAAK1W,KAAKiZ,KAAKg8B,aACf,EAAKj1C,KAAKg2C,gBAAgBkG,eAC1B,EAAKl8C,KAAKg2C,gBAAkB,MAIhC,EAAKh2C,KAAKssB,iBAAmB,KAC7B,EAAKtsB,KAAKiZ,KAAO,WAItB,W,gFAjLf,K,uKCLO,IAAMkjC,GAAb,WAWI,WAAoBC,EAAgDp8C,GAAU,Y,4FAAA,SAA1D,KAAAo8C,oBAAgD,KAAAp8C,OALpE,KAAAq8C,WAAqD,GAErD,KAAAC,cAAwB,EACxB,KAAAC,oBAA8B,EAI1B95D,KAAK+5D,wBAA0Bv/B,OAAO,qIACtCx6B,KAAKg6D,wBAA0Bx/B,OAAO,mHACtCx6B,KAAKi6D,mBAAqBz/B,OAAO,mHACjCm/B,EAAkBt7B,OAAOr+B,KAAK+5D,wBAAyB/5D,KAAKg6D,wBAAyBh6D,KAAKi6D,oBAE1Fj6D,KAAK45D,WAAa,CACd,aAAgB55D,KAAKg6D,wBACrB,QAAWh6D,KAAKi6D,oBAGpB,IAAIC,EAAKl6D,KAAKud,KAAK48C,cAEnBD,EAAGE,eAAe,mBAAoB,IAClC,WACI,EAAKC,0BACN,wCAAyCr6D,KAAK+5D,yBAErDG,EAAGE,eAAe,wBAAyB,IACvC,WACI,EAAKE,QAAQ,kBACd,uBAAwBt6D,KAAKg6D,yBAEpCE,EAAGE,eAAe,mBAAoB,IAClC,WACI,EAAKE,QAAQ,aACd,iBAAkBt6D,KAAKi6D,oB,UAtCtC,O,EAAA,G,EAAA,oCA0CI,WAAqB,WACdj6D,KAAK85D,oBACJ95D,KAAK+5D,wBAAwB7+B,YAAY,yBACzCl7B,KAAK+5D,wBAAwB9+B,SAAS,oBACtCj7B,KAAK+5D,wBAAwB/+B,KAAK,QAAS,2BAC3CR,OAAO,aAAa4C,KAAK,KACzB5C,OAAO,cAAc4C,KAAK,KAC1B5C,OAAO,aAAa4C,SAEpBp9B,KAAK+5D,wBAAwB7+B,YAAY,oBACzCl7B,KAAK+5D,wBAAwB9+B,SAAS,yBACtCj7B,KAAK+5D,wBAAwB/+B,KAAK,QAAS,6BAC3CR,OAAO,aAAasC,KAAK,KACzBtC,OAAO,cAAcsC,KAAK,KAC1BtC,OAAO,aAAasC,QAGxBC,YAAW,WACP,EAAKxf,KAAKuwB,kBAAkB+oB,WAC7B,KAEH72D,KAAK85D,oBAAsB95D,KAAK85D,qBA/DxC,qBAkEI,SAAQ19D,GAA8D,IAA5Bm+D,IAA4B,yDAE9DC,EAAoB,gBAARp+D,EAAyB,UAAY,eAErD4D,KAAK45D,WAAWx9D,GAAM6+B,SAAS,cAC/Bj7B,KAAK45D,WAAWY,GAAWt/B,YAAY,cAEvC,IAAIwM,EAAW1nC,KAAKud,KAAKiZ,KAAKkR,SAC1BkxB,EAAYlxB,EAASkxB,UAErB6B,EAAW7B,EAAUx8D,GAOzB,GANAw8D,EAAU8B,eAAiBt+D,EAE3B4D,KAAKud,KAAKo9C,aAAajR,YAAY+Q,EAAStkD,OAE5CnW,KAAKud,KAAKnK,OAAOupC,YAAY8d,EAAS1iB,UAElC/3C,KAAK65D,cAAgBY,EAASZ,aAAc,CAC5C,IAAIzmD,EAASpT,KAAKud,KAAKuwB,kBACvB16B,EAAOoqC,UAAU,oCAAoCF,MACrDt9C,KAAK65D,cAAgB75D,KAAK65D,aAG1BU,GAAcv6D,KAAKu6D,iBAzF/B,0BA6FI,SAAate,GACMj8C,KAAK46D,oBACX7iB,SAAWkE,EACpBj8C,KAAKu6D,iBAhGb,sBAmGI,SAASpkD,GACL,IAAIskD,EAAWz6D,KAAK46D,oBACpBH,EAAStkD,MAAQA,EACjBnW,KAAKud,KAAKo9C,aAAajR,YAAY+Q,EAAStkD,OAC5CnW,KAAKu6D,iBAvGb,gCA0GI,WACI,IAAIE,EAAWz6D,KAAK46D,oBACpBH,EAASZ,cAAgBY,EAASZ,aACrB75D,KAAKud,KAAKuwB,kBAChB0P,UAAU,oCAAoCF,MACrDt9C,KAAKu6D,iBA/Gb,+BAkHI,WACI,IAAI3B,EAAY54D,KAAKud,KAAKiZ,KAAKkR,SAASkxB,UACxC,OAAOA,EAAUA,EAAU8B,kBApHnC,0BAuHI,WACI16D,KAAKud,KAAKuoB,eAAgB,IAxHlC,0BA2HI,WACI,IAAI4B,EAAW1nC,KAAKud,KAAKiZ,KAAKkR,SAED,MAAzBA,EAAQ,YACRA,EAAQ,UAAgB,CACpBmzB,QAAS,KACTC,aAAc,KACdJ,eAAgB,YAIU,MAA9BhzB,EAASkxB,UAAUiC,UACnBnzB,EAASkxB,UAAUiC,QAAU,CACzB9iB,SAAU,GACV8hB,cAAc,EACd1jD,MAAO,QAGXuxB,EAASkxB,UAAUkC,aAAe,CAC9B/iB,SAAU,GACV8hB,cAAc,EACd1jD,MAAO,SAEXnW,KAAKu6D,gBAETv6D,KAAKs6D,QAAQ5yB,EAASkxB,UAAU8B,gBAAgB,Q,gFApJxD,K,uKCSO,IAAMK,GAAb,WAKI,WAAoBx9C,I,4FAAc,SAAd,KAAAA,OAHpB,KAAAy9C,mBAA0C,G,UAF9C,O,EAAA,G,EAAA,+BASI,WACIh7D,KAAKg7D,mBAAmBz6D,SAAQ,SAAAxD,GAAC,OAAIA,EAAEk+D,cAAe,KACtDj7D,KAAKwhC,MAAO,IAAI0a,MAAOC,YAX/B,sBAcI,SAAS3sC,EAAwBxU,GAC7B,IAAIkgE,EAAcl7D,KAAKg7D,mBAAmB9pC,MAAK,SAAAn0B,GAAC,OAAIA,EAAEyS,SAASvB,MAAQuB,EAASvB,MAAQlR,EAAEyS,SAAStB,QAAUsB,EAAStB,UACnHgtD,EACCA,EAAYD,cAAe,EAE3Bj7D,KAAKg7D,mBAAmB94D,KAAK,CAACsN,SAAUA,EAAU2rD,YAAan7D,KAAKwhC,KAAMy5B,cAAc,EAAMjgE,OAAQA,MAnBlH,4BAuBI,WAAc,WACNwmC,GAAO,IAAI0a,MAAOC,UACtBn8C,KAAKg7D,mBAAqBh7D,KAAKg7D,mBAAmBxtC,QAAO,SAAAzwB,GAAC,OAAIA,EAAEk+D,gBAEhE,IAAIG,EAAwBp7D,KAAKud,KAAK6W,2BAClCinC,EAAar7D,KAAKud,KAAKuwB,kBAAkB2N,cAActjB,WAE3Dn4B,KAAKg7D,mBAAmBxtC,QAAO,SAAAzwB,GAAC,OAAIykC,EAAOzkC,EAAEo+D,YAAc,OAAM56D,SAAQ,SAAAxD,GAErE,IAAIu+D,EAAsC,MAApBv+D,EAAE/B,OAAO+4B,KAAK0C,IAAc15B,EAAE/B,OAAO+4B,KAAK0C,IAAM2kC,EAAsBrnC,KAAK0C,GAE7F8kC,EAAiE,CACjE,CACI5oD,MAAO,IAAIZ,OAAOupC,MAAMv+C,EAAEyS,SAASvB,KAAMlR,EAAEyS,SAAStB,OAAQnR,EAAEyS,SAASvB,KAAMlR,EAAEyS,SAAStB,QACxF6B,KAAM,IACNyrD,kBAAkB,IAI1B,GAAGF,GACI7pD,KAAKgqD,IAAIJ,EAAat+D,EAAEyS,SAASvB,MAAQ,EAAE,CAC1C,IAAImF,EAAS,EAAKmK,KAAKuwB,kBACjBoE,EAAY9+B,EAAO++B,eACzB/+B,EAAOmoC,aAAa,kBAAmBggB,GACvCnoD,EAAOsoD,aAAaxpB,GACpB,EAAK8oB,mBAAmBhoD,OAAO,EAAKgoD,mBAAmB3rD,QAAQtS,GAAI,Y,gFAhDvF,K,+rCCRO,IAAM4+D,GAAb,WAII,WAAoBp+C,EAAuBq+C,I,4FAA6B,SAApD,KAAAr+C,OAAuB,KAAAq+C,WAF3C,KAAAC,gBAAwC,IAAIzkD,I,UAFhD,O,EAAA,G,EAAA,sBAQI,WAAO,WAEUpX,KAAKud,KAAKoX,kBAEhBysB,2BAA0B,SAAC0a,GAE9B,EAAKxH,yCAdjB,mBAmBI,WACIt0D,KAAK47D,SAASlvB,UApBtB,+CAuBI,WACI,IAAIvB,EAASnrC,KAAKud,KAAKoX,kBACnB4D,EAAYv4B,KAAKud,KAAKwX,sBAC1B,GAAiB,MAAbwD,EAAmB,YACLA,EAAU/E,YAAYM,YAAW,IAD5B,IACnB,2BAAuD,QACjDC,KAAKC,OAAQ,EAFA,+BAMvB,IAAIjI,EAASJ,GAAMiB,uBAAuBue,EAAOxe,kBAAkBZ,QAEnE/rB,KAAK47D,SAASlvB,QAXe,WAaX3gB,GAbW,IAa7B,2BAA0B,KAAjB1G,EAAiB,QACtB,GAAuB,mBAApBA,EAAMngB,WAAgC,CACrC,IAAI62D,EAAS/7D,KAAKg8D,YAAY32C,GAC9BrlB,KAAK47D,SAASv9B,OAAO09B,KAhBA,iCAvBrC,yBA6CI,SAAY12C,GAAY,WAChB42C,EAA4D,MAA9Cj8D,KAAK67D,gBAAgB//D,IAAIupB,EAAMngB,YAE7C62D,EAASvhC,OAAO,8FAAD,OAGCyhC,EAAc,0BAA4B,yBAH3C,2KAMJ52C,EAAMngB,WANF,kDAMsDmgB,EAAMwG,KAN5D,sFAWnBkwC,EAAO7qC,KAAK,mBAAmB1I,GAAG,aAAa,WAC3C,EAAKjL,KAAKu1C,wBAAwBoJ,UAAU72C,EAAMngB,eAItD,IAnBoB,EAmBhBi3D,EAAW3hC,OAAO,qCAnBF,KAqBDnV,EAAMtB,SArBL,IAqBpB,2BAAkC,KAAzB7V,EAAyB,QAC1BkuD,EAAQluD,EAAO8c,aAAe,UAAY,aAE1CqxC,EAAiB,GACI,MAArBnuD,EAAOie,aACPkwC,EAAiB,0FAAH,OAA6FnuD,EAAOie,WAAW9G,MAAMngB,WAArH,YAAmIgJ,EAAOie,WAAWjnB,WAArJ,WAGlB,IAAIzF,EAAsB,MAAfyO,EAAOzO,KAAe,GAAKyO,EAAOzO,KAAKilB,WAC9CT,EAAkB/V,EAAO+V,QAAU,2CAA6C,GAChFc,EAAuB7W,EAAO6W,aAAP,4CAA2D7W,EAAO6W,aAAlE,UAAyF,GAChHu3C,EAAwBpuD,EAAO4V,gBAAP,sDAAiF,GAEzGy4C,EAAU/hC,OAAO,sEAAD,OAEF4hC,EAFE,0CAGTluD,EAAOhJ,WAHE,0DAISzF,EAJT,mCAKd68D,EALc,6BAMdD,EANc,6BAOdp4C,EAPc,6BAQdc,EARc,uCAWpBo3C,EAAS99B,OAAOk+B,IA7CA,8BAgDpBR,EAAO19B,OAAO89B,GAEd,IAAIK,EAAcT,EAAO7qC,KAAK,kBAC1B+E,EAAOj2B,KAkBX,OAjBAw8D,EAAYh0C,GAAG,aAAa,SAAC/V,GACzBA,EAAEkpB,kBACF,IAAI8gC,EAAcD,EAAYE,QAAQ,aAAaxrC,KAAK,kBACxCsrC,EAAYnU,SAAS,4BAEjCmU,EAAYthC,YAAY,2BACxBshC,EAAYvhC,SAAS,0BACrBwhC,EAAY7N,UAAU,KACtB34B,EAAK4lC,gBAAgB/a,OAAOz7B,EAAMngB,cAElCs3D,EAAYthC,YAAY,0BACxBshC,EAAYvhC,SAAS,2BACrBwhC,EAAYtR,QAAQ,KACpBl1B,EAAK4lC,gBAAgB/jD,IAAIuN,EAAMngB,YAAY,OAI5C62D,O,gFAlHf,K,sRCkBO,IAAMY,GAAb,IAcI,WAAoBp/C,EAAwBo8C,GAAsC,Y,4FAAA,SAA9D,KAAAp8C,OAAwB,KAAAo8C,oBAExC35D,KAAK48D,aAAepiC,OAAO,8DAC3Bx6B,KAAK68D,gBAAkBriC,OAAO,2DAE9B,IAAI0/B,EAAKl6D,KAAKud,KAAKmgC,mBAEnBwc,EAAGE,eAAe,UAAW,CAAC,iBAC1B,WACQF,EAAG4C,SAAS,YAEZ,EAAKv/C,KAAKu1C,wBAAwBiK,8BAGvC,0BAA2B/8D,KAAK48D,cAGvC1C,EAAGzb,UAAU,WAAU,GAEvByb,EAAGE,eAAe,WAAY,CAAC,qBAC3B,WACQF,EAAG4C,SAAS,aAEZ,EAAKv/C,KAAKg3C,mBAAmByI,aAGlC,uDAAwDh9D,KAAK68D,iBAGpE3C,EAAGzb,UAAU,YAAW,GAYxBkb,EAAkBt7B,OAAOr+B,KAAK48D,aAAc58D,KAAK68D,oB,+rCC1DlD,IAAMI,GAAb,WAkBI,WAAoB1/C,EAAwBw5C,GAA+B,Y,4FAAA,SAAvD,KAAAx5C,OAAwB,KAAAw5C,aAR5C,KAAAmG,eAAyB,IAIzB,KAAAC,oBAA4C,GAkN5C,KAAA/nC,oBAAgC,GA2KxB,KAAAgoC,iBAA2B,EAC3B,KAAAC,mBAA6B,EAxXjCr9D,KAAKs9D,eAAsBvG,EAAW7lC,KAAK,kBAC3ClxB,KAAKu9D,WAAa/iC,OAAO,+DACzBx6B,KAAKw9D,SAAWhjC,OAAO,yIACvBx6B,KAAKy9D,YAAcjjC,OAAO,gEAE1Bx6B,KAAKs9D,eAAe5wB,QACpB1sC,KAAKs9D,eAAej/B,OAAOr+B,KAAKu9D,WAAYv9D,KAAKw9D,SAAUx9D,KAAKy9D,aAEhEz9D,KAAKs9D,eAAexgC,OAEpB,IAAIZ,GAAgBC,OAAOC,aAAe,UAAY,SAAW,KAE7DnG,EAAOj2B,KACXA,KAAKu9D,WAAW/0C,GAAG0T,GAAc,SAACzpB,GAC1BwjB,EAAKynC,eAAiB,IACtBznC,EAAKynC,eAAiBjsD,KAAK6G,IAAI2d,EAAKynC,eAAiBznC,EAAKinC,eAAgB,GACtEjnC,EAAKynC,eAAiB,KAAQ,IAC9BznC,EAAKynC,gBAAkBjsD,KAAKksD,MAAM1nC,EAAKynC,eAAiBznC,EAAKinC,gBAAkB,GAAKjnC,EAAKinC,eAAiB,GAE9GjnC,EAAK2nC,cACL3nC,EAAK4nC,sBAIb79D,KAAKy9D,YAAYj1C,GAAG0T,GAAc,SAACzpB,GAC3BwjB,EAAKynC,eAAiB,EAAKI,cAAgB7nC,EAAKinC,eAAiB,IACjEjnC,EAAKynC,eAAiBjsD,KAAKssD,IAAI9nC,EAAKynC,eAAiBznC,EAAKinC,eAAgBjnC,EAAK6nC,cAAgB7nC,EAAKinC,eAAiB,GACrHjnC,EAAK2nC,cACL3nC,EAAK4nC,sB,UAhDrB,O,EAAA,G,EAAA,oCAsDW,SAAsBG,GACzBh+D,KAAKm9D,oBAAoBj7D,KAAK87D,KAvDtC,6BA0DY,WACJh+D,KAAKu9D,WAAW9P,YAAY,YAAaztD,KAAK09D,eAAiB,GAC/D19D,KAAKy9D,YAAYhQ,YAAY,YAAaztD,KAAK09D,eAAiB19D,KAAK89D,cAAgB99D,KAAKk9D,eAAiB,KA5DnH,uCA+DI,WAAyB,WAEjB56B,EAAatiC,KAAKi+D,0BAA0BzwC,QAAO,SAAA9O,GAAE,OAAIA,EAAGG,IAAIpf,MAAQsF,EAAUkb,qBAEtF,GAAyB,GAArBqiB,EAAW7/B,OAAf,CAEA,IAAIy7D,EAA4B57B,EAAW67B,MAAK,SAAAz/C,GAAE,OAAI,EAAK0/C,eAAe1/C,MACtE2/C,EAA8B/7B,EAAW67B,MAAK,SAAAz/C,GAAE,OAAI,EAAK4/C,iBAAiB5/C,MAC1E6Z,EAAYv4B,KAAKud,KAAKwX,sBACtB8S,EAAWtP,EAAUsP,SAErBq2B,GAAoB3lC,EAAUqU,aAAe,EAC7C1F,MAAM,wEAINm3B,GAA+C,GAAzB9lC,EAAUqU,YAChC1F,MAAM,oFAINg3B,GAAoBG,EAChBr+D,KAAKud,KAAK8Y,aACVr2B,KAAKu+D,kCAAkChmC,EAAW+J,EAAYuF,GAG9D7nC,KAAKw+D,qCAAqCjmC,EAAW+J,EAAYuF,GAIrE7nC,KAAKy+D,kBAAkBn8B,EAAY,EAAG,IAAI,kBA7FtD,+CAkGI,SAAkC/J,EAAsB+J,EAA4BuF,GAAmB,WAC/F62B,EAAyD,GAC7D1+D,KAAKy+D,kBAAkBn8B,EAAY,EAAGo8B,GAAwC,WAErB,GAAjDA,EAAuCj8D,SAG3C,EAAK8a,KAAKohD,sBAAsBC,UAEhC,EAAKzB,oBAAoB58D,SAAQ,SAAAy9D,GAAQ,OAAIA,EAASa,OAAOH,YA3GzE,kDA+GY,SAAqCnmC,EAAsB+J,EAA4BuF,GAAmB,WAC1GtqB,EAAmBvd,KAAKud,KAE5BA,EAAKqZ,eAAekoC,iBAAiBvmC,GAAW,SAACwmC,EAAgBC,GAE7DzhD,EAAK82C,SAAS4K,qBAAqBF,EAAgBC,GAAqB,eACpE,WAEI,IAAIN,EAAyD,GAC7D,EAAKD,kBAAkBn8B,EAAY,EAAGo8B,GAAwC,WAErB,GAAjDA,EAAuCj8D,QAI3C8a,EAAKqZ,eAAesoC,sBAAsB3mC,EAAWmmC,EAAuC7mD,KAAI,SAAA6G,GAAE,OAAqB,MAAjBA,EAAGikC,WAAqBjkC,EAAG2iC,IAAM3iC,EAAGikC,eAAa,SAAC3a,EAAmBC,GAIvKD,EAAkBznC,SAAQ,SAAAme,GAAE,OAAImpB,EAASvF,WAAWpgC,KAAKwc,MACzD,EAAKnB,KAAKg3C,mBAAmB4K,iBAAiBn3B,GAC9C,IAAIo3B,EAAsBV,EAAuC7mD,KAAI,SAAA6G,GAAE,OAAqB,MAAjBA,EAAGikC,WAAqBjkC,EAAG2iC,IAAM3iC,EAAGikC,cAC/G9a,EAASvF,WAAauF,EAASvF,WAAW5pB,OAAO0mD,GACjD,EAAK7hD,KAAKg3C,mBAAmB4K,iBAAiBC,GAC9Cv3B,EAASpP,QAAUwP,EAIfD,EAAkBvlC,OAAS,EAE3B,EAAK48D,cAAcx3B,GAInBtqB,EAAKohD,sBAAsBC,mBAMxC,QAvJnB,2BA2JI,SAAc/2B,GAAmB,WAC7B7nC,KAAKud,KAAKoX,kBAAkBmxB,iBAAiBje,EAASpF,aAAcoF,EAASvF,YAAY,WACrF,EAAK/kB,KAAKohD,sBAAsBC,eA7J5C,qCAiKI,SAAwBt8B,EAAsBg9B,EAAmBphC,GAAoB,WACxD,GAArBoE,EAAW7/B,QAKX68D,EAAYh9B,EAAW7/B,OACvBzC,KAAKud,KAAKoX,kBAAkBwsB,aAAa7e,EAAWg9B,IAChD,SAAC7f,GAAc,EAAK8f,wBAAwBj9B,EAAYg9B,EAAY,EAAGphC,MACvE,SAAC/8B,GAAY++B,QAAQ6E,IAAI,kCAAoCzC,EAAWg9B,GAAa,aAAen+D,GAAQ,EAAKo+D,wBAAwBj9B,EAAYg9B,EAAY,EAAGphC,MAPxKA,MAnKZ,+BAiLI,SAAkBoE,EAA4BngB,EAAeq9C,EAAyDthC,GAAiD,WAA3B5vB,EAA2B,uDAAF,GAEjK,GAAI6T,GAASmgB,EAAW7/B,OAIpB,OAHAzC,KAAKy/D,WAAWnxD,QAEhB4vB,IAIJ,IAAItO,EAAY0S,EAAWngB,GAGvBu9C,EAAY,WACZ,EAAKjB,kBAAkBn8B,EAAYngB,EAAQ,EAAGq9C,EAAyCthC,EAAU5vB,IAGrG,GAAqB,MAAjBshB,EAAU/Q,IAKd,GAAI+Q,EAAU/Q,IAAIpf,MAAQsF,EAAUkB,cAAe,CAE/C,IADA,IAAI05D,GAA6B,EACxB/pD,EAAIuM,EAAQ,EAAGvM,EAAI0sB,EAAW7/B,OAAQmT,IAAK+pD,EAAoBA,GAAqB3/D,KAAK4/D,kBAAkBt9B,EAAW1sB,IAC/H,GAAI+pD,EACAD,QACG,CACH,GAA+B,MAA3B9vC,EAAU/Q,IAAI0I,UAAmB,CAEjC,IADAqI,EAAUyxB,IAAIzF,YACPhsB,EAAUyxB,IAAIxF,SAAS,MAAQjsB,EAAUyxB,IAAIxF,SAAS,OAASjsB,EAAUyxB,IAAIxF,SAAS,OACzFjsB,EAAUyxB,IAAMzxB,EAAUyxB,IAAI3wC,UAAU,EAAGkf,EAAUyxB,IAAI5+C,OAAS,GAClEmtB,EAAUyxB,IAAIzF,YAElBhsB,EAAUyxB,KAAO,gBAErBrhD,KAAKud,KAAKoX,kBAAkBwsB,aAAavxB,EAAUyxB,KAC/C,SAAC5B,GAAc,EAAKogB,qBAAqBjwC,EAAUyxB,IAAK5B,GAAUigB,OAClE,SAACv+D,GAAYmN,EAAOpM,KAAK,CAAE0tB,UAAWA,EAAWxS,QAASjc,IAAUu+D,YAEzE,CACH,IAAIre,GAAM,IAAIoB,IAAmBmD,MAAMh2B,GACvCsQ,QAAQ6E,IAAIsc,GACZrhD,KAAKud,KAAKoX,kBAAkBwsB,aAAaE,GAAK,SAAC5B,GAAc+f,EAAwCt9D,KAAK0tB,GAAY8vC,OAAgB,SAACv+D,GAAYmN,EAAOpM,KAAK,CAAE0tB,UAAWA,EAAWxS,QAASjc,IAAUu+D,YAzB1MA,MAlMZ,kCAiOI,SAAqBpxD,GAEjB,IAFuC,EAEnCwxD,EAAgB,CAChB,MAAS,UACT,QAAW,UACX,KAAQ,WAKR/sB,GAF8C/yC,KAAKud,KAAKuwB,kBAEjB,IACvC6P,EAAqD,GAXlB,KAYrBrvC,GAZqB,IAYvC,2BAA0B,KAAjBnN,EAAiB,QAGlB4+D,OAAiC,EAEjCC,EAAuBF,EAAa,MAGtBC,EAA4B,qBAK9C,IAAI1iD,OAA+B,EAEjBA,EAAWtL,OAAOuL,eAAeze,MAKnDk0C,EAAQ7wC,KAAK,CACT2Q,gBAAiB1R,EAAMyuB,UAAU9Q,KAAK7Q,KACtC8E,YAAa5R,EAAMyuB,UAAU9Q,KAAK5Q,OAClC0E,cAAezR,EAAMyuB,UAAU7Q,GAAG9Q,KAClC6E,UAAW3R,EAAMyuB,UAAU7Q,GAAG7Q,OAC9BkP,QAASjc,EAAMic,QACfC,SAAUA,IAGdsgC,EAAYz7C,KAAK,CACbyQ,MAAO,CACHE,gBAAiB1R,EAAMyuB,UAAU9Q,KAAK7Q,KACtC8E,YAAa5R,EAAMyuB,UAAU9Q,KAAK5Q,OAClC0E,cAAezR,EAAMyuB,UAAU7Q,GAAG9Q,KAClC6E,UAAW3R,EAAMyuB,UAAU7Q,GAAG7Q,QAElCmE,QAAS,CACL0tD,0BAA2BA,EAC3B5mB,QAAS,CACL3pC,SAAUuC,OAAOqB,OAAOkrC,gBAAgBC,OACxC9hB,MAAOujC,OApDgB,8BA6DvC,IAAI7tD,EAAQnS,KAAKud,KAAK6W,2BAA2BjiB,MACjDJ,OAAOqB,OAAO6sD,gBAAgB9tD,EAAO,OAAQ4gC,GAC7C/yC,KAAKo1B,oBAAsBjjB,EAAMwsC,iBAAiB3+C,KAAKo1B,oBAAqBuoB,KAhSpF,uBAoSI,SAAUz4C,GAAkB,WACpB0qB,EAAY,iBAAmB1qB,EAAa,IAChDlF,KAAKud,KAAKoX,kBAAkBwsB,aAAavxB,GACrC,SAAC6vB,GAAc,EAAKogB,qBAAqBjwC,EAAW6vB,MACpD,SAACt+C,SAxSb,wBA6SI,SAAWmN,GAAsB,WACzB4xD,EAAoBlgE,KAAK+2D,WAAW7lC,KAAK,iBACzCivC,EAA2BngE,KAAK+2D,WAAW7lC,KAAK,wBAKpD,GAHAgvC,EAAkBxzB,QAClB1sC,KAAKogE,qBAAqB9xD,GAEL,GAAjBA,EAAO7L,OAAX,CAEA,IAAIy5B,EAAeC,OAAOC,aAAe,UAAY,QACrD+jC,EAAyBhhC,QAAQjD,EAAe,QAEhD,IAAImkC,EAAa7lC,OAAO,oCACxB0lC,EAAkB7hC,OAAOgiC,GAbI,WAeX/xD,GAfW,yBAepBnN,EAfoB,QAgBrBwnB,EAAQxnB,EAAMyuB,UAAUyxB,IAE5B14B,GADAA,EAAQA,EAAMhb,QAAQ,MAAO,MACfA,QAAQ,SAAU,KAEhC,IAAI2yD,EAAa7+B,EAAE,uFACnB4+B,EAAWhiC,OAAOiiC,GAElBA,EAAW93C,GAAG0T,EAAe,QAAQ,WACjC,IAAIvpB,EAAQ,CACRI,YAAa5R,EAAMyuB,UAAU9Q,KAAK5Q,OAAQ2E,gBAAiB1R,EAAMyuB,UAAU9Q,KAAK7Q,KAChF6E,UAAW3R,EAAMyuB,UAAU7Q,GAAG7Q,OAAQ0E,cAAezR,EAAMyuB,UAAU7Q,GAAG9Q,MAG5E,EAAKsP,KAAKuwB,kBAAkByyB,oBAAoB5tD,GAChD0tD,EAAWnvC,KAAK,kBAAkBgK,YAAY,aAC9ColC,EAAWrlC,SAAS,gBAKxB,IAAIulC,EAAU/+B,EAAE,4CAChB6+B,EAAWjiC,OAAOmiC,GAElBzuD,OAAOqB,OAAOqtD,SAAS93C,EAAO,SAAU,IAAI1nB,MACxC,SAAC4yC,GAAW2sB,EAAQ3sB,KAAKA,MAE7B,IAAI6sB,EAAcj/B,EAAE,mCAAqCtgC,EAAMic,QAAU,UACzEkjD,EAAWjiC,OAAOqiC,IA5BtB,2BAA0B,IAfG,kCA7SrC,+BA8VI,SAAkB9wC,GACd,OAAwB,MAAjBA,EAAU/Q,KAAe+Q,EAAU/Q,IAAIpf,MAAQsF,EAAUkB,gBA/VxE,4BAkWI,SAAe2pB,GACX,OAAwB,MAAjBA,EAAU/Q,KAAe,CAAC9Z,EAAU0B,cAAe1B,EAAUiC,YAAajC,EAAUc,cAAcwJ,QAAQugB,EAAU/Q,IAAIpf,OAAS,IAnWhJ,8BAsWI,SAAiBmwB,GACb,OAAwB,MAAjBA,EAAU/Q,KAAe,CAAC9Z,EAAUmB,cAAenB,EAAUiB,cAAejB,EAAUsB,eAAegJ,QAAQugB,EAAU/Q,IAAIpf,OAAS,IAvWnJ,kCA0WY,SAAqBkpB,EAAe82B,GACxC,IAAIkhB,EAAoB3gE,KAAK+2D,WAAW7lC,KAAK,wBACzC0vC,EAAgB5gE,KAAK+2D,WAAW7lC,KAAK,qBAErCgL,EAAeC,OAAOC,aAAe,UAAY,QACrDukC,EAAkBxhC,QAAQjD,EAAe,QACzCl8B,KAAKe,OAAS0+C,EAAQj8C,MAEtB,IAAIq9D,EAAYD,EAIhBj4C,GADAA,GADAA,EAAQA,EAAMhb,QAAQ,MAAO,MACfA,QAAQ,SAAU,MAClBA,QAAQ,gBAAiB,IAEvCoE,OAAOqB,OAAOqtD,SAAS93C,EAAO,SAAU,IAAI1nB,MACxC,SAAC4yC,GAAWgtB,EAAUhtB,KAAKA,MAE/B7zC,KAAK89D,cAAgB99D,KAAKe,OAASf,KAAKe,OAAOX,OAAOqC,OAAS,EAC/DzC,KAAKw9D,SAAStsC,KAAK,sBAAsB2iB,KAAzC,UAAiD7zC,KAAK89D,gBACtD99D,KAAK09D,eAAiB,EACtB19D,KAAKs9D,eAAelgC,OACpBp9B,KAAK69D,kBAEL79D,KAAK49D,gBAjYb,mBAqYW,WACY59D,KAAK+2D,WAAW7lC,KAAK,mBAC3Bwb,QACT1sC,KAAKs9D,eAAexgC,SAxY5B,yBA8YY,WAAW,WACXgkC,EAAW9gE,KAAK+2D,WAAW7lC,KAAK,mBAEpC,GAAmB,MAAflxB,KAAKe,OAGL,OAFAf,KAAKw9D,SAAStsC,KAAK,yBAAyB2iB,KAAK,YACjDitB,EAASjtB,KAAK,sDAIlB,IAAI5d,EAAOj2B,KACP8e,EAA6B,GAAtB9e,KAAK89D,cAAqB,EAAI99D,KAAK09D,eAC1C3+C,EAA2B,GAAtB/e,KAAK89D,cAAqB,EAAIrsD,KAAKssD,IAAI/9D,KAAK09D,eAAiB19D,KAAKk9D,eAAiB,EAAGl9D,KAAK89D,eAGpG,GAFA99D,KAAKw9D,SAAStsC,KAAK,yBAAyB2iB,KAA5C,UAAoD/0B,EAApD,YAA4DC,IAExD/e,KAAKo9D,gBAAT,CACI,GAAIp9D,KAAKq9D,kBACL,OAEJr9D,KAAKq9D,mBAAoB,EAWzBtgC,YAVmB,SAAfgkC,IACI9qC,EAAKmnC,gBACLrgC,YAAW,WACPgkC,MACD,MAEH9qC,EAAKonC,mBAAoB,EACzBpnC,EAAK2nC,iBAGY,SAf7B,CAmBA59D,KAAKo9D,iBAAkB,EAEvB,IAAIrB,EAASvhC,OAAO,mBAChBwmC,EAAUxmC,OAAO,aACrBuhC,EAAO19B,OAAO2iC,GAEdhhE,KAAKe,OAAOgjB,QAAQxjB,SAAQ,SAAC2N,GAAa8yD,EAAQ3iC,OAAO7D,OAAO,YAAD,OAAatsB,EAAb,oBAE/D,IAAI+yD,EAAOjhE,KAAKe,OAAOX,OAAOwD,MAAM5D,KAAK09D,eAAiB,EAAG19D,KAAK09D,eAAiB19D,KAAKk9D,eAAiB,GAErGjiE,EAAI,GACA,SAAJs+B,IACA,GAAIt+B,EAAIgmE,EAAKx+D,OAAQ,CACjB,IADiB,eACRmT,GACL,IAAI+pC,EAAMshB,EAAKrrD,GACXsrD,EAAO1mC,OAAO,aAClBuhC,EAAO19B,OAAO6iC,GACdvhB,EAAIp/C,SAAQ,SAAC4gE,GAAWD,EAAK7iC,OAAO7D,OAAO,OAAD,OAAQ2mC,EAAR,eAJrCvrD,EAAI3a,EAAG2a,EAAInE,KAAKssD,IAAI9iE,EAAI,IAAKgmE,EAAKx+D,QAASmT,IAAK,EAAhDA,IAMT3a,EAAIwW,KAAKssD,IAAI9iE,EAAI,IAAKgmE,EAAKx+D,SACnBw+D,EAAKx+D,OACTs6B,WAAWxD,EAAG,KAEdunC,EAASp0B,QAAQrO,OAAO09B,GACxB,EAAKqB,iBAAkB,IAKnC7jC,MA5cR,qCAydI,WACI,IAAIv+B,EAASgF,KAAKud,KAAK6W,2BACvB,GAAc,MAAVp5B,EAAgB,OAAO,KAE3B,IAJmB,EAIfomE,EAAephE,KAAKud,KAAKuwB,kBAIzBxL,EAA6BtnC,EAAOmjD,4BAA4BijB,EAAajvB,gBAR9D,KASG7P,GATH,IASnB,2BAAkC,KAAzB1S,EAAyB,QAC9BA,EAAUyxB,IAAM+f,EAAa/vB,WAAWjD,gBAAgB,CACpDr7B,YAAa6c,EAAU9Q,KAAK5Q,OAC5B2E,gBAAiB+c,EAAU9Q,KAAK7Q,KAAM6E,UAAW8c,EAAU7Q,GAAG7Q,OAAQ0E,cAAegd,EAAU7Q,GAAG9Q,QAZvF,8BAkBnB,OAAOq0B,O,gFA3ef,K,uKAgBkB26B,sBAA6B,QC3BxC,IAAMoE,GAAb,WAOI,WAAmB9jD,I,4FAAU,SAAV,KAAAA,OAJnB,KAAA+jD,QAAkB,EAqDlB,KAAA39B,eAA2B,GAwG3B,KAAA49B,WAAqB,EAcrB,KAAAC,QAAkB,EA2ClB,KAAAC,eAAyB,EASzB,KAAAC,gBAA0B,E,UAlO9B,O,EAAA,G,EAAA,sBAcI,SAAQnpC,GAAoB,WAEpBtC,EAAOj2B,KACXA,KAAKu4B,UAAYA,EACjBv4B,KAAK6nC,SAAWtP,EAAUsP,SAEtB7nC,KAAKshE,QACLthE,KAAKikC,WAAW6P,QAGpB1S,GAAK,oBAAqB,IAAI,SAACU,GAE3B,IAAInB,GAAexE,OAAO0H,SAASC,SAASC,WAAW,SAAW,SAAW,SAAW5H,OAAO0H,SAASG,KAAO,qBAC/G,EAAKC,WAAa,IAAIC,UAAUvD,GAEhC,EAAKsD,WAAWE,QAAU,SAAChjC,GAAmB,EAAKijC,QAAQjjC,IAC3D,EAAK8iC,WAAWI,QAAU,SAAC5J,GAAwB,EAAK6J,QAAQ7J,IAChE,EAAKwJ,WAAWM,UAAY,SAAC9J,GAA0B,EAAK+J,UAAU/J,IAEtE,EAAKwJ,WAAWQ,OAAS,SAAChK,GACtB,IAAI0G,EAAmC,CACnCuD,QAAS,EACTpyB,MAAOwvB,EAASxvB,MAChB20B,YAAa1O,EAAU9B,GACvBoM,WAAYtK,EAAUsP,SAASpR,GAC/BkrC,gBAAiBppC,EAAUsP,SAASpP,SAGxC,EAAK6oC,QAAS,EACd,EAAK38B,WAAWjD,KAAKC,UAAUR,IAC/B,EAAKygC,UAIT7kC,YAAW,WACP9G,EAAK4rC,qBACN,UAlDf,wBAyDI,SAAWzkD,GAEP,GAAKpd,KAAKshE,OAGN,IACIthE,KAAKikC,WAAWa,KAAK1nB,GACvB,MAAOpZ,GACLk8B,QAAQ6E,IAAI/gC,QALhBhE,KAAK2jC,eAAezhC,KAAKkb,KA5DrC,qBAsEI,SAAQqd,GACJz6B,KAAKshE,QAAS,IAvEtB,wBA2EI,WAIIthE,KAAK2kC,WAAWjD,KAAKC,UAHqB,CACtC+C,QAAS,KAGb1kC,KAAKikC,WAAW6P,QAChB9zC,KAAKu4B,UAAY,OAjFzB,uBAoFI,SAAUkC,GAEN,IAAIxE,EAAOj2B,KACP8hC,EAA8BJ,KAAKhN,MAAM+F,EAAMyE,MACnD,GAAwB99B,MAApB0gC,EAAS4C,QAEb,OAAQ5C,EAAS4C,SACb,KAAK,EACDzO,EAAKgpC,qBAAqBn9B,EAASgG,cAAehG,EAASiG,wBAAwB,WAC/E,IAAI5G,EAA4C,CAAEuD,QAAS,EAAGi9B,gBAAiB1rC,EAAK4R,SAASpP,SAC7FxC,EAAK0O,WAAWjD,KAAKC,UAAUR,OAEnC,MACJ,KAAK,EACDnhC,KAAKshE,QAAS,EACdthE,KAAK6nC,SAAW,KAChB7nC,KAAKu4B,UAAY,KACjB,MACJ,KAAK,EACD,MACJ,KAAK,EACGv4B,KAAK6nC,SAASpP,QAAUqJ,EAASmG,aACjCjoC,KAAKud,KAAKg3C,mBAAmBuN,cAAchgC,EAASmG,gBA1GxE,kCAgHI,SAAqBH,EAAyBC,EAAgCg6B,GAAyH,IAAjFC,EAAiF,uDAApD,aAAWC,IAAyC,yDACnM,GAAqB,MAAjBjiE,KAAK6nC,SAAT,CACA,IAAI5R,EAAOj2B,KACPiT,EAAQ80B,GAA0B/nC,KAAK6nC,SAASpP,QAAU,GAC9D,GAAIxlB,EAAQ,EAGR,OAFA8uD,SACAC,IAGI/uD,EAAQ,IACR60B,EAAc90B,OAAO,GAAIC,GACzB80B,GAA0B90B,GAE9B,IAAIqvB,EAAawF,EACbxF,EAAW7/B,OAAS,EACpBzC,KAAKud,KAAKi8C,mBAAmB+F,wBAAwBj9B,EAAY,GAAG,WAChErM,EAAK1Y,KAAKg3C,mBAAmB4K,iBAAiB78B,GAC9CrM,EAAK4R,SAASvF,WAAarM,EAAK4R,SAASvF,WAAW5pB,OAAO4pB,GAC3DrM,EAAK4R,SAASpP,QAAUsP,EAAyBD,EAAcrlC,OAAS,EACpEw/D,GACAhsC,EAAK1Y,KAAKs1C,iBAAiB+L,UAE/BoD,OAGJA,OAzIhB,qBAgJI,SAAQ7gE,MAhJZ,oBAmJI,WAAM,WACFnB,KAAKshE,QAAS,EACVthE,KAAK2jC,eAAelhC,OAAS,IAC7BzC,KAAK2jC,eAAepjC,SAAQ,SAAAlF,GAAC,OAAI,EAAKspC,WAAWtpC,MACjD2E,KAAK2jC,eAAiB,MAvJlC,0BAiKI,WACQ3jC,KAAKuhE,YACTvhE,KAAKuhE,WAAY,EAEjBvhE,KAAKkiE,UArKb,kBA+KI,WACI,IAAIjsC,EAAOj2B,KACX+8B,YAAW,WACP9G,EAAKisC,SACN,KAEEjsC,EAAKqrC,QAA4B,MAAlBrrC,EAAKsC,YACrBv4B,KAAKmiE,uBAGLlsC,EAAKurC,UACe,IAAhBvrC,EAAKurC,UACLvrC,EAAKurC,QAAU,EACfvrC,EAAK2N,QAAQ3N,EAAKsC,eA5LlC,kCAkMI,WACI,IAAItC,EAAOj2B,KACW,MAAlBA,KAAKu4B,WAAsC,MAAjBv4B,KAAK6nC,UAOnCzG,GAAK,mBALkC,CACnC6F,YAAajnC,KAAKu4B,UAAU9B,GAC5BmR,eAAgB5nC,KAAKu4B,UAAUsP,SAASpP,UAGV,SAACqJ,GAEE,MAA9BA,EAASsgC,kBACRnsC,EAAK1Y,KAAKg3C,mBAAmBuN,cAAchgC,EAASsgC,mBAEpDnsC,EAAKgpC,qBAAqBn9B,EAASgG,cAAehG,EAASiG,wBAAwB,WAC/E9R,EAAKksC,+BAjNzB,8BA0NI,WACQniE,KAAKyhE,gBACTzhE,KAAKyhE,eAAgB,EAErBzhE,KAAKqiE,cA9Nb,sBAmOI,WACI,IAAIpsC,EAAOj2B,KAEX,GAAKi2B,EAAKqrC,QAA4B,MAAlBrrC,EAAKsC,UA2CrBwE,YAAW,WACP9G,EAAKosC,aACN,SA7CqC,CACxC,IAAIlhC,EAA8C,CAC9C8F,YAAahR,EAAKsC,UAAU9B,IAGhCgL,EAAEL,KAAK,CACH3hC,KAAM,OACN0D,OAAO,EACP+7B,KAAMwC,KAAKC,UAAUR,GACrBS,YAAa,mBACbjB,IAAK,sCACLkB,QAAS,SAAUygC,G,MACfpiC,QAAQ6E,IAAIu9B,GACZ,IAAIxgC,EAAuD,iBAARwgC,EAAmB5gC,KAAKhN,MAAM4tC,GAAQA,EAC7E,MAARA,IAAiBrsC,EAAKqrC,SAAwB,QAAd,EAAArrC,EAAKsC,iBAAS7I,WAAA,EAAAA,EAAE+G,KAAM0K,EAAQ8F,aAAenF,EAASD,UACtF5L,EAAKgpC,qBAAqBn9B,EAASgG,cAAehG,EAASiG,wBAAwB,WAC/E9R,EAAKksC,0BAKTlsC,EAAKyrC,kBACuB,IAAxBzrC,EAAKyrC,kBACLzrC,EAAKyrC,gBAAkB,EACvBzrC,EAAK2N,QAAQ3N,EAAKsC,YAItBwE,YAAW,WACP9G,EAAKosC,aACN,OAGXlhE,MAAO,SAAU6gC,EAAO5kB,G,MACf6Y,EAAKqrC,SAAwB,QAAd,EAAArrC,EAAKsC,iBAAS7I,WAAA,EAAAA,EAAE+G,KAAM0K,EAAQ8F,aAC9ClK,YAAW,WACP9G,EAAKosC,aACN,c,gFA3Q3B,K,uKCRO,IAAME,GAAb,WAOI,WAAoBC,I,4FAA6B,SAA7B,KAAAA,WALpB,KAAAC,SAAmB,EACnB,KAAAC,gBAA0B,EAKtB1iE,KAAK2iE,iBAAmBH,EAAStxC,KAAK,oBACtClxB,KAAK4iE,qBAAuBJ,EAAStxC,KAAK,wB,UATlD,O,EAAA,G,EAAA,mBAYI,SAAK9T,GACDpd,KAAK0iE,gBAAiB,EACtB1iE,KAAK2iE,iBAAiB9uB,KAAKz2B,GAC3Bpd,KAAK4iE,qBAAqB/uB,KAAK,IAC3B7zC,KAAKyiE,UACLziE,KAAKyiE,SAAU,EACfziE,KAAKwiE,SAASlmC,IAAI,UAAW,QAC7Bt8B,KAAKwiE,SAAS1lC,OACd98B,KAAKwiE,SAASzuB,OAAO,QApBjC,yBAwBI,SAAY32B,GACRpd,KAAK4iE,qBAAqB/uB,KAAKz2B,KAzBvC,kBA4BI,WAAI,WACGpd,KAAKyiE,UACJziE,KAAK0iE,gBAAiB,EACtB3lC,YAAW,WACJ,EAAK2lC,iBACJ,EAAKA,gBAAiB,EACtB,EAAKF,SAASxuB,QAAQ,KAAK,WACvB,EAAKwuB,SAASlmC,IAAI,UAAW,WAEjC,EAAKmmC,SAAU,KAEpB,U,gFAvCf,K,uKCYO,IAAMI,GAAb,WAII,WAAoBtlD,EAAwBulD,I,4FAAkC,SAA1D,KAAAvlD,OAAwB,KAAAulD,gBAF5C,KAAAC,aAAoC,G,UAFxC,O,EAAA,G,EAAA,oBAQI,WACI/iE,KAAK8iE,cAAcp2B,QACnB1sC,KAAKud,KAAKmgC,mBAAmBe,UAAU,YAAY,GACnDz+C,KAAK+iE,aAAe,KAX5B,oCAcI,SAAuBzgC,GACnBtiC,KAAKi0B,QACLj0B,KAAKm/D,iBAAiB78B,GACtBtiC,KAAKud,KAAKmgC,mBAAmBe,UAAU,WAAYnc,EAAW7/B,OAAS,KAjB/E,8BAoBI,SAAiB6/B,GAAoB,WACjCA,EAAW/hC,SAAQ,SAAAy3B,GACf,IAAIgrC,EAAa,EAAKC,eAAejrC,EAAM,EAAK+qC,aAAatgE,OAAS,GACtE,EAAKqgE,cAActW,QAAQwW,EAAW7U,MACtC,EAAK4U,aAAal8C,QAAQm8C,MAG3B1gC,EAAW7/B,OAAS,GACnBzC,KAAKud,KAAKmgC,mBAAmBe,UAAU,YAAY,GAGvDz+C,KAAKkjE,yBA/Bb,kCAkCI,WACIljE,KAAK+iE,aAAaxiE,SAAQ,SAAAsgC,GAAE,OAAIA,EAAGsiC,gBAAgBjoC,YAAY,gBAE3Dl7B,KAAK+iE,aAAatgE,OAAS,GAC3BzC,KAAK+iE,aAAa,GAAGI,gBAAgBloC,SAAS,eAtC1D,4BA0CI,SAAerL,EAAmBzN,GAAa,WACvCgsC,EAA+B3zB,OAAO,qCACtC4oC,EAAS5oC,OAAO,mCAAD,OAAoCrY,EAApC,YACfkhD,EAAQ7oC,OAAO,yCACfr+B,EAAYyzB,EAAUlf,UAAU,EAAGe,KAAKssD,IAAI,IAAKnuC,EAAUntB,SAC3DmtB,EAAUntB,OAAS,MACnBtG,GAAK,OAETknE,EAAMtzD,KAAK5T,GACX,IAAImnE,EAAsC9oC,OAAO,mHAC7C+oC,EAA0C/oC,OAAO,uFAGrD8oC,EAAY96C,GAAG,SAAS,WACpBsX,GAAoBlQ,MAGxB,IAAIsM,EAAeC,OAAOC,aAAe,UAAY,QAmBrD,OAjBAmnC,EAAgB/6C,GAAG0T,EAAe,MAAM,SAACe,GACrCA,EAAGrB,iBACH0B,GAAgB,CAAC,CACbQ,QAAS,YACTI,SAAU,cAEX,CACCJ,QAAS,gCACTrB,MAAO,UACPyB,SAAU,WACN,EAAK8+B,cAET//B,EAAGmyB,MAAQ,EAAGnyB,EAAGoyB,MAAQ,GAC7BpyB,EAAGtB,qBAGPwyB,EAAK9vB,OAAO+kC,EAAQC,EAAOC,EAAaC,GACjC,CACHpV,KAAMA,EACNv+B,UAAWA,EACXuzC,gBAAiBI,KAjF7B,sBAqFI,WAAQ,WAC4B,GAA5BvjE,KAAK+iE,aAAatgE,SAElBzC,KAAKud,KAAK8Y,cACVr2B,KAAKwjE,mBACLxjE,KAAKud,KAAKmgC,mBAAmBe,UAAU,WAAYz+C,KAAK+iE,aAAatgE,OAAS,IAEvDzC,KAAKud,KACvBqZ,eAAeomC,UAAS,SAAC77D,EAAesiE,GAC5B,MAATtiE,GAAiBsiE,GACjB,EAAK3B,sBA/FzB,2BAuGI,SAAc75B,GAAoB,WAC1BJ,EAAW7nC,KAAKud,KAAKwX,sBAAsB8S,SAG/C,IAFkB,MAAfI,IAAqBA,EAAcJ,EAASpP,QAAU,GAEnDoP,EAASpP,QAAUwP,GACrBJ,EAASvF,WAAW9+B,MACpBqkC,EAASpP,UAEbz4B,KAAKud,KAAKoX,kBAAkBmxB,iBAAiBje,EAASpF,aAAcoF,EAASvF,YAAY,eAEtF,WACC,EAAK/kB,KAAKohD,sBAAsBrK,oCACX,EAAKyO,aAAa7hB,QACxBiN,KAAKhxB,SACpB,EAAK+lC,uBACL,EAAK3lD,KAAKmgC,mBAAmBe,UAAU,WAAY,EAAKskB,aAAatgE,OAAS,QAtH1F,8BA0HI,WAAgB,WACR8a,EAAmCvd,KAAKud,KAC5CA,EAAKmmD,kBAAkB1G,WAEvBh9D,KAAKud,KAAKoX,kBAAkBmxB,iBAAiBvoC,EAAKomD,oBAC9CpmD,EAAKqmD,kBAAkBlrD,OAAO6E,EAAKmmD,kBAAkBG,oBAAoB,eACzE,WACI,EAAKtmD,KAAKohD,sBAAsBrK,oCACX,EAAKyO,aAAa7hB,QACxBiN,KAAKhxB,SACpB,EAAK+lC,+B,gFApIrB,K,+rCCmBO,IAAMhvB,GAAb,yB,4FAAA,SA6DI,KAAAhO,cAA6B,GAoB7B,KAAAozB,gBAAkB,EAGlB,KAAA7gC,QAAkB,EAKlB,KAAAqN,eAAyB,EAgBzB,KAAAoF,YAA2B,IAAIq3B,GAAY/nC,OAAO,iBAClD,KAAAspC,cAA+B,IAAIjB,GAAc7iE,KAAMw6B,OAAO,mB,UA1GlE,O,EAAA,G,EAAA,yBACI,WACI,OAAO,IAFf,iCAKI,WACI,OAAOx6B,KAAK6pC,mBANpB,6BAQI,WACI,OAAO7pC,KAAKoT,OAAOA,SAT3B,yBAYI,WACI,OAAOpT,KAAK+jE,WAbpB,0BAgBI,WACI,OAAO/jE,KAAK82B,YAjBpB,sCAqBI,WACI,OAAO92B,KAAKi3B,gBAAgB7C,6BAtBpC,8BAyBI,WACI,OAAOp0B,KAAKm6D,gBA1BpB,yBA6BI,WACI,OAAOn6D,KAAKgkE,WA9BpB,6BAiCI,SAAgBhpE,GACZgF,KAAKi3B,gBAAgBk7B,gBAAgBn3D,KAlC7C,+BAqCI,WACI,OAAOgF,KAAKikE,iBAtCpB,6BAyCI,WACI,OAAOjkE,KAAKwvB,eA1CpB,iCA6CI,WACI,OAAOxvB,KAAK6yD,mBA9CpB,mCAiDI,WACI,OAAO7yD,KAAKw5D,qBAlDpB,4BAqDI,WACI,OAAOx5D,KAAKkrC,cAtDpB,8BAyDI,WACI,OAAOlrC,KAAK8jE,gBA1DpB,qBA4GI,WxCiGII,WAAW,kBAAkBC,UAC7B5kC,IAAmB,GwC9FnBv/B,KAAKokE,MAAQ,IAAI7L,GAAMv4D,MACvBA,KAAKokE,MAAMrL,UAEX/4D,KAAKwvB,aAAe,IAAIswB,GAAa9/C,MACrCA,KAAK6yD,iBAAmB,IAAI8I,GAAiB37D,KAAMw6B,OAAO,gBAE1Dx6B,KAAKm6D,cAAgB,IAAIjgC,GAAc,KAAMl6B,MAC7CA,KAAKm6D,cAAczuB,OAEnB1rC,KAAK42B,eAAiB,IAAIoO,GAAehlC,KAAMw6B,OAAO,wCAExC,IAAIu7B,GAAQ/1D,MAClBqkE,cACRrkE,KAAKypD,SAAW,IAAIH,GAAStpD,MAC7BA,KAAKi3B,gBAAkB,IAAI06B,GAAgB3xD,KAAMw6B,OAAO,mCACxDx6B,KAAKi3B,gBAAgB8hC,UAErB/4D,KAAK82B,UAAY,IAAIwtC,GAAUtkE,KAAMw6B,OAAO,wCAAyCA,OAAO,SAE5Fx6B,KAAK+jE,SAAW,IAAIvO,GAASx1D,KAAMw6B,OAAO,oBAC1Cx6B,KAAK+jE,SAAShL,UAEd/4D,KAAKukE,uBAELvkE,KAAK26D,aAAe,IAAI3kD,EAExBhW,KAAKs8C,mBAAqB,IAAIod,GAAmBl/B,OAAO,cAAex6B,MAEvEA,KAAKikE,eAAiB,IAAIlJ,GAAe/6D,MAEzC,IAAI28D,GAAsB38D,KAAMw6B,OAAO,cAEvCx6B,KAAKw5D,mBAAqB,IAAIyD,GAAmBj9D,KAAMw6B,OAAO,wBAE9Dx6B,KAAKq0D,SAAW,IAAIgN,GAASrhE,QAlJrC,wBAuJI,WACIA,KAAKoT,OAAS,IAAIkhC,GAAOt0C,MAAM,GAAM,IACrC,IAAI6R,GAAY65B,OAEhB1rC,KAAKoT,OAAO2lD,QAAQv+B,OAAO,YAE3B,IAAIvE,EAAOj2B,KACXw6B,OAAO2B,QAAQ3T,GAAG,UAAU,SAACiS,GACzBD,OAAO,oBAAoB8B,IAAI,SAAU,SACzC9B,OAAO,WAAW8B,IAAI,SAAWH,OAAOuC,YAAc,IAAM,GAAK,EAAK,MACtEzI,EAAK7iB,OAAOA,OAAOyjD,SACnBr8B,OAAO,WAAW8B,IAAI,SAAU,OAIpC9B,OAAO2B,QAAQgD,QAAQ,UAEvBn/B,KAAKukE,yBAxKb,iCA2KI,SAAoBtL,GAChBj5D,KAAKuzD,gBAAkB,IAAI2D,GAAgBl3D,KAAMi5D,GACjDj5D,KAAKuzD,gBAAgBwF,YA7K7B,kCAiLI,WACI/4D,KAAKs5D,kBACuB,GAAxBt5D,KAAKs5D,iBACLt5D,KAAK60B,UApLjB,mBAwLI,WAEmC,MAA3B70B,KAAK84D,oBACL94D,KAAK84D,qBAGT,IAAI7iC,EAAOj2B,KACX+8B,YAAW,WACP9G,EAAK6X,kBAAkB+oB,WACxB,KAEH72D,KAAKgkE,SAAW,IAAI3wC,GAASrzB,MAE7BA,KAAKwkE,aAEL/iC,EAAEtF,QAAQ3T,GAAG,UAAU,WAEhBuX,UAAU0kC,YAA2B,MAAbxuC,EAAKO,OAC5BP,EAAKW,eAAeC,YAAY,MAAM,GACtCZ,EAAKW,eAAemP,wBAAuB,qBA3M3D,wBAmNI,WAC4B,MAApB/lC,KAAK0kE,aACLl/B,cAAcxlC,KAAK0kE,aAGvB,IAAIzuC,EAAOj2B,KACXA,KAAK0kE,YAAcj/B,aAAY,WAE3BxP,EAAKkb,mBAEN,OA7NX,4BAkOI,W,QAEI,GAA6B,MAAzBnxC,KAAK6pC,kBAEL7pC,KAAK6pC,iBAAiBrW,YAAYmxC,WAClC3kE,KAAKgkE,SAAS1wC,gBAAkBhE,GAAemE,UAC/C,IAEIzzB,KAAKgkE,SAASY,QAAQ5kE,KAAK6pC,iBAAiBrW,aAE5C,IAAIllB,EAAqC,QAA/B,EAAiB,QAAjB,EAAGtO,KAAK82B,iBAASpH,WAAA,EAAAA,EAAE4E,oBAAYmc,WAAA,EAAAA,EAAEgvB,WAAWz/D,KAAK6pC,kBAC3D7pC,KAAKi3B,gBAAgB4tC,iBAAiB7kE,KAAK6pC,iBAAkBv7B,GAE7DtO,KAAKoT,OAAO2mC,0BAA0B,MAElC/5C,KAAKi3B,iBACLj3B,KAAKy4B,UAGX,MAAOhmB,GACLytB,QAAQ/+B,MAAMsR,GACdzS,KAAKgkE,SAAS1wC,eAAiBhE,GAAenuB,SAvP9D,6BA8PI,SAAgBipC,GACZpqC,KAAKkmC,cAAclzB,OAAOhT,KAAKkmC,cAAc72B,QAAQ+6B,GAAI,KA/PjE,+BAkQI,SAAkBlB,GAEdlpC,KAAKkmC,cAAgB,GACrBlmC,KAAK6pC,iBAAmB,KAExB7pC,KAAK8tC,kBAAkBjY,cAAc,CAAEi/B,UAAU,IAEjD,IAPoC,EAOhCjrB,EAA8B,KAPE,KASrBX,EAAWA,YATU,IASpC,2BAAsC,KAA7B/C,EAA6B,QAE9B5N,EAAuBoU,GAAUG,gBAAgB3G,EAAInmC,MACzDA,KAAKkmC,cAAchkC,KAAKq2B,GACpB4N,EAAG1P,IAAMz2B,KAAKw2B,KAAK09B,sBACnBrqB,EAAmBtR,IAdS,8BAkBpCv4B,KAAKi3B,gBAAgB8gC,iBAAiB/3D,KAAKkmC,eAEnB,MAApB2D,GAA4B7pC,KAAKkmC,cAAczjC,OAAS,IACxDonC,EAAmB7pC,KAAKkmC,cAAc,IAGlB,MAApB2D,GACA7pC,KAAKi3B,gBAAgBiyB,mBAAmBrf,GAGX,GAA7B7pC,KAAKkmC,cAAczjC,QAEnB+wC,GAAOkL,WAAW,oBAAqB1+C,KAAMA,KAAKi3B,gBAAgBgT,mBAAmBmhB,mBAhSjG,gCAuSI,SAAmB5vD,EAAcmnC,GAC7B,OAAO,IAAIgK,GAAUnxC,EAAMwE,KAAM2iC,Q,gFAxSzC,K,+rCCzBO,IAAMmiC,GAAb,WAYI,WAAoBvnD,EAAwBw5C,EAAyC6E,I,4FAA6B,SAA9F,KAAAr+C,OAAwB,KAAAw5C,aAAyC,KAAA6E,WAVrF,KAAAmJ,eAA2B,GAC3B,KAAA3vC,oBAAgC,GAKhC,KAAA4qC,aAAwC,GAExC,KAAAgF,6BAA8F,GAG1FhlE,KAAKggE,aAAL,MAA6B,UAC7BhgE,KAAKggE,aAAL,QAA+B,UAC/BhgE,KAAKggE,aAAL,KAA4B,UAE5BhgE,KAAKilE,iBAAmBrJ,EAAS1qC,KAAK,2BAEtClxB,KAAKilE,iBAAiBjqC,KAAK,QAAS,iBACpCh7B,KAAKilE,iBAAiBC,WAAWlqC,KAAK,QAAS,iBAE/C,IAAI/E,EAAOj2B,KACX47D,EAAS1qC,KAAK,eAAe1I,GAAG,SAAS,WACxByN,EAAK1Y,KAAKuwB,kBAChB3O,QAAQ,IAAK,OAAQ,OAC7BnE,KAAK,QAAS,Q,UA1BzB,O,EAAA,G,EAAA,qCA6BI,SAAuB75B,GACP,MAATA,GACCnB,KAAKilE,iBAAiB3oC,IAAI,aAAc,WACxCt8B,KAAKilE,iBAAiB/zC,KAAK,kBAAkBnhB,KAAK5O,IAElDnB,KAAKilE,iBAAiB3oC,IAAI,aAAc,YAlCpD,wBAsCI,SAAW/D,GAAoB,WAE3Bv4B,KAAKglE,6BAA+B,GAEpC,IAAIpR,EAAqC,IAAIx8C,IAE7CpX,KAAKmlE,UAAYnlE,KAAK+2D,WAAW7lC,KAAK,0BACtClxB,KAAKmlE,UAAUz4B,QAEf,IAT2B,EASvB9tB,GAAY,EAEZ+a,EAAKpB,EAAU/E,YACfpgB,EAA8CpT,KAAKud,KAAKuwB,kBAZjC,KAcbnU,EAAG7F,YAAW,IAdD,yBAclBz4B,EAdkB,QAenB03C,EAAuC,GACvC4K,EAAqD,GACrD0iB,EAAoC,GAEpC/xD,EAASjT,EAAE+pE,6BACfxR,EAAc97C,IAAIzc,EAAGA,EAAEgqE,iBApBA,WAsBL/2D,GAtBK,IAsBvB,2BAA0B,KAAjBnN,EAAiB,QAElB4+D,OAAiC,EACjCuF,OAAuB,EACvBtF,EAAuB,EAAKA,aAAa7+D,EAAMgP,OAEnD,OAAQhP,EAAMgP,OACV,IAAK,QAAS4vD,EAA4B,qBAAsBuF,EAAkB,qBAAsB,MACxG,IAAK,UAAWvF,EAA4B,uBAAwBuF,EAAkB,uBAAwB,MAC9G,IAAK,OAAQvF,EAA4B,oBAAqBuF,EAAkB,oBAG9D,MAAlBnkE,EAAMub,UAAkB,WACxB,IAAIA,EAAWvb,EAAMub,SACjB6oD,EAAiB,MAAQ9zD,KAAKyI,MAAsB,IAAhBzI,KAAKs1B,UAC7Cg5B,EAA4B,sBAAwBuF,EAAkB,IAAMC,EAE5E,EAAKP,6BAA6B9iE,KAAK,CAACsjE,MAAO,IAAMD,EACrDE,gBAAiB,WAEb,IAAIlzD,EAAQmK,EAASM,cAAc3hB,EAAE8W,MAAM8K,KAC3C7J,EAAOmoC,aAAa,GAAIhpC,EAAMsF,KAAI,SAACsF,GAC/B,IAAIphB,EAAIohB,EAAKA,KAAKxK,MAClB,MAAO,CACHA,MAAO,IAAIZ,OAAOupC,MAAMv/C,EAAE8W,gBAAiB9W,EAAEgX,YAAahX,EAAE6W,cAAe7W,EAAE+W,WAC7E/C,KAAMoN,EAAKA,KAAKpN,KAChByrD,kBAAkB,QAM9Bz+C,MAAOL,EAASK,QApBQ,GA0B5B,EAAK2oD,aAAavkE,EAAO9F,EAAGglE,GAE5B,IAAIhjD,OAA+B,EACnC,OAAQlc,EAAMgP,OACV,IAAK,QAASkN,EAAWtL,OAAOuL,eAAeze,MAAO,MACtD,IAAK,UAAWwe,EAAWtL,OAAOuL,eAAeqoD,QAAS,MAC1D,IAAK,OAAQtoD,EAAWtL,OAAOuL,eAAesoD,KAGlD7yB,EAAQ7wC,KAAK,CACT2Q,gBAAiB1R,EAAMqO,SAASvB,KAChC8E,YAAa5R,EAAMqO,SAAStB,OAC5B0E,cAAezR,EAAMqO,SAASvB,KAC9B6E,UAAW3R,EAAMqO,SAAStB,OAAS/M,EAAMqO,SAAS/M,OAClD2a,QAASjc,EAAM4O,KACfsN,SAAUA,EAEV21B,mBAAoB7xC,EAAMub,WAG9BihC,EAAYz7C,KAAK,CACbyQ,MAAO,CACHE,gBAAiB1R,EAAMqO,SAASvB,KAChC8E,YAAa5R,EAAMqO,SAAStB,OAC5B0E,cAAezR,EAAMqO,SAASvB,KAC9B6E,UAAW3R,EAAMqO,SAAStB,OAAS/M,EAAMqO,SAAS/M,QAEtD4P,QAAS,CACL0tD,0BAA2BA,EAC3B5mB,QAAS,CACL3pC,SAAUuC,OAAOqB,OAAOkrC,gBAAgBC,OACxC9hB,MAAOujC,OA3FA,8BA2GvB,GAPAjuD,OAAOqB,OAAO6sD,gBAAgB5kE,EAAE8W,MAAO,OAAQ4gC,GAC/C13C,EAAE+5B,oBAAsB/5B,EAAE8W,MAAMwsC,iBAAiBtjD,EAAE+5B,oBAAqBuoB,GAGxE,EAAKonB,eAAiB,EAAKxnD,KAAKuwB,kBAAkB6Q,iBAAiB,EAAKomB,eAAgB,IAGpF1E,EAAW59D,OAAS,GAAK,EAAK0iE,UAAU1iE,OAAS,EAAG,CACpDmc,GAAY,EACZ,IAAIinD,EAAQrrC,OAAO,kCAAoCn/B,EAAE04B,KAAKv4B,KAAO,gBACrE,EAAK2pE,UAAU9mC,OAAOwnC,GAH8B,WAIjCxF,GAJiC,IAIpD,2BAA+B,KAAtByF,EAAsB,QAC3B,EAAKX,UAAU9mC,OAAOynC,IAL0B,iCA7F5D,2BAAoC,IAdT,8BA4H3B,OANKlnD,GAAa5e,KAAKmlE,UAAU1iE,OAAS,GACtCzC,KAAKmlE,UAAU9mC,OAAO7D,OAAO,mEAGjCx6B,KAAK85C,oCAEE8Z,IAlKf,+CAsKI,WAEI,IAAI39B,EAAOj2B,KACX+8B,YAAW,WAAK,WACI9G,EAAK+uC,8BADT,IACZ,2BAAkD,KAA1Ce,EAA0C,QAC1CvrC,OAAOurC,EAAKP,OAAOtoC,IAAI,QAAS6oC,EAAKN,iBACrCjrC,OAAOurC,EAAKP,OAAOh9C,GAAG,QAASu9C,EAAKN,iBAAiBzqC,KAAK,QAAS+qC,EAAKhpD,QAHpE,iCAKb,OA9KX,0BAmLI,SAAa5b,EAAc9F,EAAW2qE,GAAiC,WAE/D7X,EAAO3zB,OAAO,qCACdyrC,EAAczrC,OAAO,uEAAyEr5B,EAAMqO,SAASvB,KAAO,+CAC1E9M,EAAMqO,SAAStB,OAAS,0BAClEg4D,EAAW,GACf,OAAQ/kE,EAAMgP,OACV,IAAK,QAAS,MACd,IAAK,UAAW+1D,EAAW,qDAAsD,MACjF,IAAK,OAAQA,EAAW,+CAE5B,IAAIC,EAAW3rC,OAAO,8BAAgC0rC,EAAW/kE,EAAM4O,KAAO,UAE9Eo+C,EAAK9vB,OAAO4nC,GAAa5nC,OAAO8nC,GAEhC,IAAIlwC,EAAOj2B,KACXmuD,EAAK3lC,GAAG,aAAa,SAACyU,GAClB,EAAKkoC,UAAUj0C,KAAK,kBAAkBgK,YAAY,aAClDizB,EAAKlzB,SAAS,aACdhF,EAAKmwC,UAAU/qE,EAAG8F,MAGtB6kE,EAAW9jE,KAAKisD,KAzMxB,uBA4MI,SAAU9yD,EAAW8F,GAEbnB,KAAKud,gBAAgB22B,IACjB74C,GAAK2E,KAAKud,KAAK0Z,gBAAgB7C,4BAC/Bp0B,KAAKud,KAAK0Z,gBAAgBk7B,gBAAgB92D,GAGlD,IAAImU,EAAWrO,EAAMqO,SACjBmD,EAAQ,CACRI,YAAavD,EAAStB,OAAQ2E,gBAAiBrD,EAASvB,KACxD6E,UAAWtD,EAAStB,OAASsB,EAAS/M,OAAQmQ,cAAepD,EAASvB,MAG1EjO,KAAKud,KAAKuwB,kBAAkByyB,oBAAoB5tD,GAEhD,IAAIirC,EAAoB,GACxB,OAAQz8C,EAAMgP,OACV,IAAK,QAASytC,EAAY,iBAAkB,MAC5C,IAAK,UAAWA,EAAY,mBAAoB,MAChD,IAAK,OAAQA,EAAY,gBAI7B59C,KAAK+kE,eAAiB/kE,KAAKud,KAAKuwB,kBAAkB6Q,iBAAiB3+C,KAAK+kE,eAAgB,CACpF,CACIpyD,MAAOA,EACPN,QAAS,CAAEurC,UAAWA,W,gFAtOtC,K,uKCWO,IAAMyoB,GAAb,WAWI,WAAoB9oD,EAAmBw5C,I,4FAA+B,SAAlD,KAAAx5C,OAAmB,KAAAw5C,aAJvC,KAAAuP,oBAA8B,EAK1BtmE,KAAKumE,aAAexP,EAAW7lC,KAAK,4B,UAZ5C,O,EAAA,G,EAAA,sBAeI,WAAO,WACC+E,EAAOj2B,KACXA,KAAKumE,aAAaloC,OAAOr+B,KAAKwmE,iBAAmBpnC,GAAQ,GAAI,qCAC7Dp/B,KAAKumE,aAAaloC,OAAOr+B,KAAKymE,kBAAoBrnC,GAAQ,GAAI,sCAC9D5E,OAAO,cAAcgyB,QAAQxsD,KAAK0mE,oBAAsBtnC,GAAQ,GAAI,gDAAiD,KACrHp/B,KAAK0mE,oBAAoBl+C,GAAG,SAAS,WAC7B,EAAK89C,mBACL,EAAK5R,eAEL,EAAKiS,aAAa1wC,EAAK1Y,KAAK6W,+BAGpCp0B,KAAK0mE,oBAAoB5pC,OACzBtC,OAAO,eAAesC,SA5B9B,wCA+BI,WACI98B,KAAK0mE,oBAAoB32D,KAAK/P,KAAKsmE,mBAAqB,gBAAkB,sBAC1EtmE,KAAK0mE,oBAAoBtpC,SAjCjC,wCAoCI,WACIp9B,KAAK0mE,oBAAoB5pC,SArCjC,0BAwCI,SAAa9hC,GAETA,EAAO+4B,KAAKhkB,KAAO/U,EAAOm5B,gCAC1B,IAAIJ,EAAO/4B,EAAO+4B,KAElByG,OAAO,WAAWsC,OAClBtC,OAAO,eAAe4C,OAEtB,IAAIwpC,EAAgB70D,OAAOqB,OAAOwiB,YAAY7B,EAAK2C,qBAAsB,UACrEmwC,EAAgB90D,OAAOqB,OAAOwiB,YAAY7B,EAAKhkB,KAAM,UAEzD/P,KAAK82D,WAAa/kD,OAAOqB,OAAO0zD,iBAAiBtwD,SAASuwD,eAAe,cAAe,CAEpFC,yBAAyB,EACzBC,kBAAkB,EAClBnS,UAAU,EAEVoS,kBAAkB,IAGtBlnE,KAAK82D,WAAWjC,SAAS,CACrBsS,SAAUP,EACVQ,SAAUP,IAGd7mE,KAAKsmE,oBAAqB,EAC1BtmE,KAAKg3B,+BAlEb,0BAqEI,WACQh3B,KAAKsmE,qBAEL9rC,OAAO,eAAesC,OACtB98B,KAAK82D,WAAW9kB,UAChBhyC,KAAK82D,WAAa,KAClBt8B,OAAO,WAAW4C,OAElBp9B,KAAKsmE,oBAAqB,EAC1BtmE,KAAKg3B,gCA9EjB,gCAmFI,SAAmBkS,GAAuB,WAElCm+B,EAAoC,GACpCxvD,EAAyC,GAE7CqxB,EAAW3oC,SAAQ,SAAA4lC,GACfA,EAAG3S,YAAYM,YAAW,GAAOvzB,SAAQ,SAAAvF,GAErC,I/CxEVqwB,E+CwEci8C,EAAatsE,EAAO+4B,KAAKyE,eAC7B,GAAkB,MAAd8uC,EAAoB,CAEpB,IAAIC,G/C3ElBl8C,E+C2E4Ci8C,E/C3E/Bj8C,MAAM,gDAEN,IAAI6wB,KAAK5qC,OAAOC,SAAS8Z,EAAM,IAAK/Z,OAAOC,SAAS8Z,EAAM,IAAK/Z,OAAOC,SAAS8Z,EAAM,IAAK/Z,OAAOC,SAAS8Z,EAAM,IAAK/Z,OAAOC,SAAS8Z,EAAM,M+C0EtIm8C,E/CvFlB,SAAkCD,GACtC,gBAAUj5C,GAAOi5C,EAAKE,WAAtB,YAAoCn5C,GAAOi5C,EAAKG,YAAhD,YAA+DH,EAAKI,e+CsF5BC,CAAwBL,GAC1CM,EAAsBhwD,EAAI2vD,GACnB,MAAPK,IACAA,EAAM,CACFN,KAAMA,EACNO,IAAKN,EACLrsE,QAAS,IAEb0c,EAAI2vD,GAAmBK,EACvBR,EAAgBnlE,KAAK2lE,IAEzBA,EAAI1sE,QAAQ+G,KAAK,CAAClH,OAAQA,EAAQu9B,UAAW4N,WAQzDnmC,KAAKwmE,iBAAiB95B,QACtB1sC,KAAKymE,kBAAkB/5B,QAEvB,IAAIzW,EAAOj2B,KAEXA,KAAKwmE,iBAAiBnoC,OAAOe,GAAQ,GAAI,qBAAsB,gBAG/DioC,EAAgBnuC,MAAK,SAAC9oB,EAAG8nB,GACrB,OAAI9nB,EAAEm3D,KAAKI,eAAiBzvC,EAAEqvC,KAAKI,eAAuBl2D,KAAKT,KAAKZ,EAAEm3D,KAAKI,cAAgBzvC,EAAEqvC,KAAKI,eAC9Fv3D,EAAEm3D,KAAKG,YAAcxvC,EAAEqvC,KAAKG,YAAoBj2D,KAAKT,KAAKZ,EAAEm3D,KAAKG,WAAaxvC,EAAEqvC,KAAKG,YACrFt3D,EAAEm3D,KAAKE,WAAavvC,EAAEqvC,KAAKE,WAAmBh2D,KAAKT,KAAKZ,EAAEm3D,KAAKE,UAAYvvC,EAAEqvC,KAAKE,WAC/E,KAGX,IAAIr6D,GAAiB,EAErBi6D,EAAgB9mE,SAAQ,SAAAsnE,GAEpBA,EAAI1sE,QAAQ+9B,MAAK,SAAC6uC,EAAIC,GAAL,OAAYD,EAAG/sE,OAAO+4B,KAAKv4B,KAAK2wD,cAAc6b,EAAGhtE,OAAO+4B,KAAKv4B,SAE9E,IAAI2yD,EAAO/uB,GAAQ,GAAI,kBAAmByoC,EAAIC,KAC9C,EAAKtB,iBAAiBnoC,OAAO8vB,GAE7BA,EAAK3lC,GAAG,SAAS,SAAC/V,GACd,EAAK+zD,iBAAiBt1C,KAAK,oBAAoBgK,YAAY,UAC3DizB,EAAKlzB,SAAS,aACdhF,EAAKxQ,OAAOoiD,MAGZz6D,IACAA,GAAQ,EACR+gD,EAAKlzB,SAAS,aACdhF,EAAKxQ,OAAOoiD,SAnJ5B,oBA0JI,SAAOA,GACH7nE,KAAKymE,kBAAkB/5B,QACvB1sC,KAAKymE,kBAAkBpoC,OAAOe,GAAQ,GAAI,qBAAsB,wBAChE,IAAInJ,EAAOj2B,KACX6nE,EAAI1sE,QAAQoF,SAAQ,SAAA0nE,GAChB,IAAI9Z,EAAO3zB,OAAO,qGAAD,OACPytC,EAAoB1vC,UAAU/8B,KADvB,+EAEPysE,EAAoBjtE,OAAO+4B,KAAKv4B,KAFzB,4BAEiDysE,EAAoBjtE,OAAO+4B,KAAKyE,eAFjF,aAGjBvC,EAAKwwC,kBAAkBpoC,OAAO8vB,GAC9BA,EAAK3lC,GAAG,SAAS,WACTyN,EAAK1Y,KAAK0Z,gBAAgBiyB,mBAAmB+e,EAAoB1vC,WACjEtC,EAAK1Y,KAAK0Z,gBAAgBk7B,gBAAgB8V,EAAoBjtE,QAC9Di7B,EAAK1Y,KAAK0Z,gBAAgB0S,cAAclkB,OAAOwiD,EAAoBjtE,QAAQ,c,gFAtK/F,K,uKCTO,IAAMspE,GAAb,WAKI,WAAoB/mD,EAAuBw5C,EAAwC6E,I,4FAA6B,SAA5F,KAAAr+C,OAAuB,KAAAw5C,aAAwC,KAAA6E,WAG3E57D,KAAK+2D,WAAW7lC,KAAK,0CAA0CzuB,OAAS,IACxEzC,KAAK+2B,gBAAkB,IAAIsvC,GAAsB9oD,EAAMw5C,IAG3D/2D,KAAKs0B,aAAe,IAAIwwC,GAAavnD,EAAMw5C,EAAY6E,G,UAZ/D,O,EAAA,G,EAAA,sBAeI,WACIh9B,GAAS5+B,KAAK+2D,YACc,MAAxB/2D,KAAK+2B,iBAAyB/2B,KAAK+2B,gBAAgBgiC,UAEvD/4D,KAAK+2D,WAAW7lC,KAAK,YAAYg0C,WAAW93D,QAAQ+xB,QAAQ,WAnBpE,6BAuBI,WAEI3E,OAAO,0BAA0B8B,IAAI,aAAc,WACnD9B,OAAO,0BAA0B2E,QAAQ,eA1BjD,6BA8BI,WAEI3E,OAAO,0BAA0B8B,IAAI,aAAc,UACnD9B,OAAO,mBAAmB0qC,WAAW93D,QAAQ+xB,QAAQ,kB,gFAjC7D,K,uKCPO,IAAM+oC,GAAb,WAaI,WAAoBC,EACRC,EAA4BC,EAC3BnqC,EAA+CoqC,I,4FAA+B,SAFvE,KAAAH,aACR,KAAAC,YAA4B,KAAAC,UAC3B,KAAAnqC,WAA+C,KAAAoqC,YACpDtoE,KAAKuoE,a,UAhBjB,O,EAAA,G,EAAA,yBAmBI,WAAU,WACFtyC,EAAOj2B,KAEU,MAAlBA,KAAKsoE,WACJtoE,KAAKmoE,WAAWz7C,SAASw4C,WAAW/4B,MAAK,SAAChqB,EAAO2Q,GAC1CA,GAAW,EAAKq1C,WAAW,KAC1BlyC,EAAKqyC,UAAY9tC,OAAO1H,OAKpC9yB,KAAKwoE,WAAahuC,OAAO,kCAEzBx6B,KAAKwoE,WAAWlsC,IAAI,CAChBC,MAAOv8B,KAAKqoE,QAAU,OAAS,MAC/B7rC,OAAQx8B,KAAKqoE,QAAU,MAAQ,OAC/BI,OAAQzoE,KAAKqoE,QAAU,aAAe,eAGvCroE,KAAKooE,UACJpoE,KAAKwoE,WAAWlsC,IAAI,CAChB8B,IAAK,MACLlV,KAAM,QAGPlpB,KAAKqoE,QACJroE,KAAKwoE,WAAWlsC,IAAI,CAChBsX,OAAQ,MACR1qB,KAAM,QAGVlpB,KAAKwoE,WAAWlsC,IAAI,CAChB8B,IAAK,MACL/U,MAAO,QAKnBrpB,KAAKmoE,WAAW9pC,OAAOr+B,KAAKwoE,YAE5BxoE,KAAKwoE,WAAWhgD,GAAG,aAAa,SAACwtC,GAE7B,IAAIx4B,EAAIw4B,EAAGC,QACPx4B,EAAIu4B,EAAGI,QAEX57B,OAAOhkB,UAAUgS,GAAG,oBAAoB,SAACwG,GACrC,IAAIknC,EAAKlnC,EAAGinC,QAAUz4B,EAClB64B,EAAKrnC,EAAGonC,QAAU34B,EAEtBxH,EAAKyyC,MAAMxS,EAAIG,GAEf74B,EAAIxO,EAAGinC,QACPx4B,EAAIzO,EAAGonC,WAIX57B,OAAOhkB,UAAUgS,GAAG,kBAAkB,WAClCgS,OAAOhkB,UAAU0mB,IAAI,oBACrB1C,OAAOhkB,UAAU0mB,IAAI,wBAM7BH,YAAW,WACP9G,EAAKyyC,MAAM,EAAG,KACf,OArFX,sBAyFI,SAASjsC,GACLz8B,KAAKwoE,WAAWlsC,IAAI,mBAAoBG,KA1FhD,mBA6FI,SAAMy5B,EAAYG,GACd,GAAGr2D,KAAKqoE,QAAQ,CACZ,IAAI7rC,EAASlrB,OAAOC,SAASvR,KAAKmoE,WAAW7rC,IAAI,UAAU3uB,QAAQ,KAAM,KACrEg7D,EAAcr3D,OAAOC,SAASvR,KAAKsoE,UAAUhsC,IAAI,UAAU3uB,QAAQ,KAAM,KACzEi7D,EAAY5oE,KAAKooE,UAAY5rC,GAAU65B,EAAK75B,GAAU65B,EACtDwS,EAAiB7oE,KAAKooE,UAAYO,GAAetS,EAAKsS,GAAetS,EACzEr2D,KAAKmoE,WAAW7rC,IAAI,SAAUssC,EAAY,MAC1C5oE,KAAKsoE,UAAUhsC,IAAI,SAAUusC,EAAiB,MAC9C7oE,KAAKk+B,SAAS0qC,OACX,CACH,IAAIrsC,EAAQjrB,OAAOC,SAASvR,KAAKmoE,WAAW7rC,IAAI,SAAS3uB,QAAQ,KAAM,KACnEm7D,EAAax3D,OAAOC,SAASvR,KAAKsoE,UAAUhsC,IAAI,SAAS3uB,QAAQ,KAAM,KACvEo7D,EAAW/oE,KAAKooE,UAAY7rC,GAAS25B,EAAK35B,GAAS25B,EACnD8S,EAAgBhpE,KAAKooE,UAAYU,GAAc5S,EAAK4S,GAAc5S,EACtEl2D,KAAKmoE,WAAW7rC,IAAI,QAASysC,EAAW,MACxC/oE,KAAKsoE,UAAUhsC,IAAI,QAAS0sC,EAAgB,MAC5ChpE,KAAKk+B,SAAS6qC,GAElB/oE,KAAKmoE,WAAW7rC,IAAI,OAAQ,iB,gFA/GpC,K,+rCCWO,IAAM2sC,GAAb,WAKI,WAAoBz1C,EAAkC01C,EAA2C3rD,GAAkB,Y,4FAAA,SAA/F,KAAAiW,cAAkC,KAAA01C,eAA2C,KAAA3rD,OAFjG,KAAAgpB,MAAoB,GAIhB,IAF+G,EAE3GtQ,EAAOj2B,KAFoG,KAI5FwzB,EAAYM,YAAW,IAJqE,IAI/G,2BAAkD,KAAzC94B,EAAyC,QAE9CgF,KAAKmpE,UAAUnuE,IAN4F,8BAU/G,IAAIouE,EAAYF,EAAax8C,SACzB28C,EAAa7uC,OAAO,mGACxB4uC,EAAU/qC,OAAOgrC,GAEjBA,EAAW7gD,GAAG,SAAS,WAEnB,IAAIxtB,EAAS,EAAKuiB,KAAK4rD,UAAU,CAAEp5D,KAAM,GAAIgN,MAAO,kBAAmBtd,KAAM,QACzEmrC,EAAW,EAAKu+B,UAAUnuE,GAE9B,EAAK6xD,cAAcjiB,GAAU,WAErB3U,EAAKqzC,aAAe1+B,GACpB3U,EAAKszC,WAAW3+B,S,UA3BpC,O,EAAA,G,EAAA,6BAmCI,WAAc,WACV5qC,KAAKumC,MAAMhmC,SAAQ,SAAAg5B,GAAC,OAAI,EAAKiwC,WAAWjwC,QApChD,qBAwCI,SAAQkwC,GACJ,IAAIxzC,EAAOj2B,KACP0pE,EAAWlvC,OAAO,oHAClBivC,EAAO1sD,MAAQ,8DACnB/c,KAAKkpE,aAAa7qC,OAAOqrC,GAEzB,IAAI9+B,EAAqB,CACrB5vC,OAAQ,KACR0uE,SAAUA,EACVjqE,KAAM,OACNkqE,KAAMF,EAAO15D,MAGjB/P,KAAKumC,MAAMrkC,KAAK0oC,GAEhB8+B,EAASlhD,GAAG,SAAS,SAACiS,GAClBxE,EAAKszC,WAAW3+B,QAxD5B,uBA8DI,SAAU5vC,GACN,IAAIi7B,EAAOj2B,KACP0pE,EAAWlvC,OAAO,wIAAD,OAEgCx/B,EAAO+4B,KAAKv4B,KAF5C,yKAKrBwE,KAAKkpE,aAAa7qC,OAAOqrC,GAEzB,IAAI9+B,EAAqB,CACrB5vC,OAAQA,EACR0uE,SAAUA,EACVjqE,KAAM,OAgCV,OA7BAO,KAAKumC,MAAMrkC,KAAK0oC,GAEhB5vC,EAAO+4B,KAAKyW,aAAe,CACvBhvC,KAAMR,EAAO+4B,KAAKv4B,KAClB2xC,eAAgBu8B,EAChBn/B,UAAU,EACVhV,KAAM,IAGVm0C,EAASx4C,KAAK,cAAc1I,GAAG,aAAa,SAAC/V,GACzCwjB,EAAKstB,SAAS3Y,EAAUn4B,MAG5Bi3D,EAASx4C,KAAK,cAAc1I,GAAG,SAAS,SAAC/V,GAAQA,EAAEmpB,iBAAkBnpB,EAAEkpB,qBAEvE+tC,EAASlhD,GAAG,SAAS,SAACiS,GAClBxE,EAAKszC,WAAW3+B,MAGpB8+B,EAAS,GAAGxvB,iBAAiB,eAAe,SAAUzf,GAClDA,EAAMmB,iBACN0B,GAAgB,CAAC,CACbQ,QAAS,aACTI,SAAU,WACNjI,EAAK42B,cAAcjiB,GAAU,kBAEjCnQ,EAAM20B,MAAO30B,EAAM40B,UACxB,GAEIzkB,IA1Gf,sBA8GI,SAASA,EAAoB3N,GACzBA,EAAGrB,iBACHqB,EAAGtB,kBACH,IAAI1F,EAAOj2B,KACXs9B,GAAgB,CAAC,CACbQ,QAAS,YACTI,SAAU,cAGX,CACCJ,QAAS,+BACTrB,MAAO,UACPyB,SAAU,WACNjI,EAAKuzC,WAAW5+B,MAEpB3N,EAAGmyB,MAAQ,EAAGnyB,EAAGoyB,MAAQ,KA7HrC,wBAiII,SAAWzkB,GACPA,EAAS8+B,SAASvsC,SAClBn9B,KAAKud,KAAKyc,aAAa4Q,EAAS5vC,QAChCgF,KAAKumC,MAAQvmC,KAAKumC,MAAM/Y,QAAO,SAAC+b,GAAD,OAAQA,GAAMqB,KACzC5qC,KAAKspE,aAAe1+B,IAChB5qC,KAAKumC,MAAM9jC,OAAS,EACpBzC,KAAKupE,WAAWvpE,KAAKumC,MAAM,KAE3BvmC,KAAKud,KAAKuwB,kBAAkBhE,SAAS,0BACrC9pC,KAAKud,KAAKuwB,kBAAkBjY,cAAc,CAAEi/B,UAAU,MAI9D90D,KAAKumC,MAAMhmC,SAAQ,SAACwzB,GACE,MAAfA,EAAK/4B,SACJ+4B,EAAK/4B,OAAO+4B,KAAKqC,OAAQ,QAhJzC,0BAqJI,SAAap7B,GAAc,WACFgF,KAAKumC,OADH,IACvB,2BAAiC,KAAxBqE,EAAwB,QACzBA,EAAS5vC,QAAUA,GACnBgF,KAAKwpE,WAAW5+B,IAHD,iCArJ/B,2BA6JI,SAAcA,EAAoB1M,GAC9B,IACIiwB,EAAOvjB,EAAS8+B,SAASx4C,KAAK,gBAC9B++B,EAAWrlB,EAAS5vC,OAAO+4B,KAAKv4B,KAAK6T,QAAQ,KAEjDwsB,GAAasyB,EAAMA,GAAM,SAAC+B,GACtBtlB,EAAS5vC,OAAO+4B,KAAKv4B,KAAO00D,EAC5B/B,EAAKta,KAAKqc,GACM,MAAZhyB,GAAkBA,MAJE,MAAZ+xB,EAAmB,KAAO,CAAEp7B,MAAO,EAAG+H,IAAKqzB,MAjKnE,gCA2KI,WACQjwD,KAAKumC,MAAM9jC,OAAS,GACpBzC,KAAKupE,WAAWvpE,KAAKumC,MAAM,MA7KvC,wBAiLI,SAAWqE,GAAkB,WACzB,GAAgB,MAAZA,EACJ,OAAQA,EAASnrC,MACb,IAAK,MACDO,KAAKud,KAAKqsD,SAAS9sC,OACnB98B,KAAKud,KAAKssD,WAAWzsC,OACrBp9B,KAAKud,KAAK40C,gBAAgBvnB,EAAS5vC,QACnCgF,KAAKud,KAAKuwB,kBAAkB9Q,QAC5B,MACJ,IAAK,OACDh9B,KAAKud,KAAKssD,WAAW/sC,OACrB98B,KAAKud,KAAKqsD,SAASxsC,OAEnB,IAAI0sC,EAAwC,GACxCphB,EAAiB,GAGjBqhB,EAAM5tC,OAAO6tC,WAAW,CACxBC,UAAW,SAAUC,EAAKC,GAEtB,OADAzhB,EAAKxmD,KAAKgoE,GACH,MAIfH,EAAIK,SAAShzB,MAAMizB,YAAc,SAAUh8D,EAAQi8D,EAAKj4D,EAASk4D,EAAKrsE,GAClE,IAAIoU,EAAQjE,EAAOi8D,GAGnB,OAFA5hB,EAAKxmD,KAAKoQ,EAAMk4D,SAET,IAGXT,EAAIU,OAAO7/B,EAAS++B,MAEpB3pE,KAAKygE,SAAS/X,EAAMohB,GAAW,WAE3B,IAAIY,EAAMvuC,OAAO6tC,WAAW,CACxBC,UAAW,SAAUC,EAAKC,GACtB,OAAOL,EAAUI,MAIzBQ,EAAIN,SAAShzB,MAAMizB,YAAc,SAAUh8D,EAAQi8D,EAAKj4D,EAASk4D,EAAKrsE,GAClE,IAAIoU,EAAQjE,EAAOi8D,GAEnB,OAAOR,EAAUx3D,EAAMk4D,SAAS78D,QAAQ,QAAS,KAIrD,IAAIkmC,EAAO62B,EAAID,OAAO7/B,EAAS++B,MAC/B,EAAKpsD,KAAKqsD,SAAS/1B,KAAKA,MAE5B7zC,KAAKkpE,aAAah4C,KAAK,YAAYgK,YAAY,aAC/C0P,EAAS8+B,SAASzuC,SAAS,gBArO3C,sBA0OI,SAASytB,EAAgBiiB,EAAqCzsC,GAC1D,IAAIjI,EAAOj2B,KACX,GAAI0oD,EAAKjmD,OAAS,EAAG,CACjB,IAAImoE,EAAgBliB,EAAKllD,MACzBuO,OAAOqB,OAAOqtD,SAASmK,EAAe,SAAU,CAAE90C,QAAS,IAAK70B,MAAK,SAAC8O,GAClE46D,EAAQC,GAAiB76D,EACzBkmB,EAAKwqC,SAAS/X,EAAMiiB,EAASzsC,WAIjCA,MApPZ,sBA0PI,SAASljC,GACLgF,KAAKkpE,aAAah4C,KAAK,YAAYgK,YAAY,aAE/Cl7B,KAAKspE,YAActpE,KAAKumC,MAAMrV,MAAK,SAAC0Z,GAAD,OAAcA,EAAS5vC,QAAUA,KAE5C,MAApBgF,KAAKspE,aAAqBtpE,KAAKspE,YAAYI,SAASzuC,SAAS,kB,gFA/PzE,K,uKCZO,IAAM4vC,GAAb,WAII,WAAoBC,I,4FAA0B,SAA1B,KAAAA,qB,UAJxB,O,EAAA,G,EAAA,mBAQW,SAAKzpC,GAER,GAAIlF,OAAO4uC,UAAW,CAElB,IAAI5pC,EAA4BhF,OAAO4uC,UAAUtnC,KAAKzjC,KAAK8qE,mBAAoB,GAE3E70C,EAAOj2B,KAEXmhC,EAAQgD,QAAU,SAAyClH,GACvDiD,QAAQ6E,IAAI,4BAA8B9H,EAAGx9B,OAGjD0hC,EAAQ6pC,UAAY,SAAyC/tC,GACzDhH,EAAKoM,GAAKlB,EAAQpgC,OAClBk1B,EAAKoM,GAAG8B,QAAU,SAAS1J,GAGvByF,QAAQ6E,IAAI,oBAAsBtK,EAAMwE,OAAO99B,MAAMic,UAEvDikB,KAGNF,EAAQ8pC,gBAAkB,SAAShuC,GAE/BhH,EAAKoM,GAAKpF,EAAGgC,OAAOl+B,OACpB,IAAImqE,EAAqBj1C,EAAKoM,GAAG8oC,kBAAkB,UAAW,CAAEC,QAAS,WAAYC,eAAe,IACpGH,EAAmBI,YAAYC,WAAa,SAAS9wC,KAE1BxE,EAAKoM,GAAG8oC,kBAAkB,YAAa,CAAEC,QAAS,aAAcC,eAAe,IAC1GH,EAAmBI,YAAYC,WAAa,SAAS9wC,WAKzDyF,QAAQ6E,IAAI,8BA1CxB,yBAgDW,SAAYymC,EAAkB/B,GAETzpE,KAAKqiC,GAAGipC,YAAY,UAAW,aAAaG,YAAY,WAE9DnoC,IAAI,CAClBkoC,SAAUA,EACV/B,OAAQA,MAtDpB,0BA2DW,SAAa+B,GAEQxrE,KAAKqiC,GAAGipC,YAAY,UAAW,aAAaG,YAAY,WAE9D3qB,OAAO0qB,KA/DjC,uBAoEW,SAAUA,EAAkBttC,GAE/B,IAEIiD,EAFoBnhC,KAAKqiC,GAAGipC,YAAY,UAAW,aAAaG,YAAY,WAEhD3vE,IAAI0vE,GAEpCrqC,EAAQgD,QAAU,SAAC1J,GACfyD,EAAS,OAGbiD,EAAQ6pC,UAAY,SAACvwC,GACI,MAAlB0G,EAAQpgC,OACPm9B,EAAS,MAETA,EAASiD,EAAQpgC,OAAO0oE,WAlFxC,2BAwFW,SAAciC,EAAoB7jC,GAEX7nC,KAAKqiC,GAAGipC,YAAY,YAAa,aAAaG,YAAY,aAEhEnoC,IAAI,CACpBT,WAAY6oC,EACZ7jC,SAAUA,MA9FtB,4BAmGW,SAAehF,GAEQ7iC,KAAKqiC,GAAGipC,YAAY,YAAa,aAAaG,YAAY,aAEhE3qB,OAAOje,KAvGnC,yBA4GW,SAAYA,EAAoB3E,GAEnC,IAEIiD,EAFsBnhC,KAAKqiC,GAAGipC,YAAY,YAAa,aAAaG,YAAY,aAElD3vE,IAAI+mC,GAEtC1B,EAAQgD,QAAU,SAAC1J,GACfyD,EAAS,OAGbiD,EAAQ6pC,UAAY,SAACvwC,GACI,MAAlB0G,EAAQpgC,OACPm9B,EAAS,MAETA,EAASiD,EAAQpgC,OAAO8mC,gB,gFA1HxC,K,uKCOO,IAAM8jC,GAAb,WAYI,WAAoBpuD,EAA4ButD,I,4FAA0B,SAAtD,KAAAvtD,OAA4B,KAAAutD,qBAPhD,KAAAc,oBAAgC,GAEhC,KAAA/H,kBAA8B,GAE9B,KAAAgI,kBAA8B,GA0C9B,KAAAC,oBAA8B,E,UAnDlC,O,EAAA,G,EAAA,6BAgBI,SAAef,GAA4B,WACvC/qE,KAAK+qE,UAAYA,EACjB/qE,KAAK+qE,UAAUgB,YAAY/rE,KAAK8qE,oBAAoB,SAACzoC,GACvC,MAANA,IACA,EAAKwhC,kBAAoBniC,KAAKhN,MAAM2N,GACpC,EAAKupC,oBAAsB,EAAK/H,kBAAkBjgE,QAElD,EAAK2Z,KAAKumD,cAAc7vC,QACxB,EAAK1W,KAAKumD,cAAc3E,iBAAiB,EAAKyM,qBAE9C,EAAKnN,oBACL,EAAKuN,mCA3BrB,mBAgCI,WACIhsE,KAAK6rE,kBAAoB,GACzB7rE,KAAK6jE,kBAAoB,GACzB7jE,KAAK4rE,oBAAsB,GAC3B5rE,KAAKud,KAAKumD,cAAc7vC,UApChC,wCAuCI,WAC0B,MAAlBj0B,KAAK+qE,WAAqB/qE,KAAK6rE,kBAAkBppE,OAAS,GAC1DzC,KAAKisE,yBAzCjB,kCA6CI,WACIjsE,KAAK6jE,kBAAoB7jE,KAAK6jE,kBAAkBnrD,OAAO1Y,KAAK6rE,mBAC5D7rE,KAAK6rE,kBAAoB,GACzB7rE,KAAK+qE,UAAUmB,cAAclsE,KAAK8qE,mBAAoBppC,KAAKC,UAAU3hC,KAAK6jE,sBAhDlF,+BAqDI,WAAiB,WACb,GAAyB,MAArB7jE,KAAKwvB,cAAwBxvB,KAAK4rE,oBAAoBnpE,OAAS,EAAG,CAC7DzC,KAAK8rE,qBACN9rE,KAAKud,KAAK4uD,qBAAqBp4B,OAAO,KACtC/zC,KAAK+gC,MAAQ/gC,KAAK4rE,oBAAoBnpE,OACtCzC,KAAKud,KAAK2tB,YAAY9N,KAAK,4CAE/Bp9B,KAAKud,KAAK2tB,YAAY+V,YAAYxvC,KAAK2H,MAAM,KAAO,EAAIpZ,KAAK4rE,oBAAoBnpE,OAASzC,KAAK+gC,QAAU,MACzG,IAAInR,EAAY5vB,KAAK4rE,oBAAoB1qB,QACzClhD,KAAK8rE,oBAAqB,EAC1B9rE,KAAKwvB,aAAa2xB,aAAavxB,GAAW,WAAQ,EAAK6uC,uBAAuB,WAAQ,EAAKA,4BAEvFz+D,KAAK8rE,qBACL9rE,KAAKud,KAAKs1C,iBAAiB+L,UAC3B5+D,KAAK8rE,oBAAqB,EAC1B9rE,KAAKud,KAAK2tB,YAAYpO,UApEtC,oBAyEI,SAAOwF,GACHtiC,KAAKud,KAAK4uD,qBAAqBp4B,OAAO,KACtC,IAAIq4B,EAAgB9pC,EAAWzqB,KAAI,SAAAmgB,GAAI,OAAuB,MAAnBA,EAAK2qB,WAAqB3qB,EAAKqpB,IAAMrpB,EAAK2qB,cACrF3iD,KAAK6rE,kBAAoB7rE,KAAK6rE,kBAAkBnzD,OAAO0zD,GACvDpsE,KAAKud,KAAKumD,cAAc3E,iBAAiBiN,GACzCpsE,KAAKgsE,+BA9Eb,2BAiFI,SAAc7gC,GACVnrC,KAAKwvB,aAAe2b,EACpBnrC,KAAKy+D,sBAnFb,sBAsFI,WACIz+D,KAAKgsE,6BACLhsE,KAAK6jE,kBAAkBrgE,MACvBxD,KAAKisE,4B,gFAzFb,K,kdCEaI,GAAb,WAEI,WAAoB9uD,I,4FAAc,SAAd,KAAAA,O,UAFxB,O,EAAA,G,EAAA,mBAMiB,SAAKojB,G,+JAMiB,OAL3B2rC,EAAqB3rC,EAAIhzB,QAAQ,WAAY,IAC5CA,QAAQ,UAAW,IAAI6K,oBAExB+zD,EAAeD,EAAmB9zD,oB,SAEDxY,KAAKooC,uBAAuBkkC,G,UAC7C,OADhB7pC,UACgB,C,qBAC8B,oBAA1Cqd,GAAasG,YAAY3jB,KAEzBA,EAAe+F,KAAKC,QAAQhG,I,kBAEzB,CAAEsjB,QAAStjB,I,WAIlB8pC,EAAa1wB,SAAS,WAAtB,C,gBACK,O,UAAM77C,KAAKwsE,eAAe7rC,EAAK2rC,G,QAApCjqC,S,4BACOkqC,EAAa1wB,SAAS,UAAW0wB,EAAa1wB,SAAS,QAAtB,C,gBACnC,O,UAAM77C,KAAKysE,UAAU9rC,EAAK2rC,G,QAA/BjqC,S,eAGJriC,KAAK0sE,oBAAoBJ,EAAoBjqC,EAAG0jB,S,kBAEzC1jB,G,mDA9Bf,uBAkCI,SAAU1B,EAAa2rC,GAEnB,OADoB,IAAI7oB,GAAczjD,KAAKud,MACtBovD,YAAYhsC,KApCzC,4BAuCU,SAAeA,EAAa2rC,G,4KAEvB,IAAIlpE,SAAQ,SAACxC,EAASC,GACzB25B,OAAO4G,KAAK,CACR3hC,KAAM,MACN0D,OAAO,EACPw9B,IAAKA,EACL+H,UAAW,CAAEC,aAAc,eAC3B9G,QAAS,SAAUC,GACf,IAAIO,EAAK,IAAIe,WAAWtB,GAEY,oBAAhCge,GAAasG,YAAY/jB,KAA2BA,EAAKmG,KAAKC,QAAQpG,IAC1EzhC,EAAQ,CAAEmlD,QAAS1jB,KAEvBlhC,MAAO,SAAU6gC,EAAO5kB,GACpBvc,EAAOuc,U,6CAtD3B,gCA8DI,SAAmBikC,GASf,OARAA,EAAMA,EAAI1zC,QAAQ,QAAS,OAGnB0B,QAAQ,QAAU,EACTgyC,EAAI71B,MAAM,OAEV61B,EAAI71B,MAAM,SArEnC,oCA2EU,SAAuBs/C,G,gKACC,MAAtBA,EAAsB,C,wCAAe,M,UAEpC9qE,KAAK8iC,iBAAL,C,wCAA+B,M,OAExB,O,SAAMU,OAAOC,KAAK,Y,OAElB,OAFRT,S,SAEcA,EAAM3X,MAAMy/C,G,UAElB,OAFR5uE,UAEQ,C,yCAAa,M,QAEZ,O,UAAMA,EAAMgnC,c,eAArBC,S,kBAEG,IAAIC,WAAWD,I,mDAxF9B,iCA4FU,SAAoB2nC,EAA4BroC,G,sJAC7CziC,KAAK8iC,iBAAL,C,gDAEO,O,SAAMU,OAAOC,KAAK,Y,OAA1BT,OAEEM,IAAIwnC,EAAoB,IAAIvnC,SAASd,I,kDAjGnD,4BAoGI,WACI,MAAO,WAAYvkC,U,gFArG3B,K,0+CC0Ba0uE,GAAb,WA6GI,WAAYze,EAAmC0e,GAAsB,Y,4FAAA,SAAtB,KAAAA,aArD/C,KAAA/a,yBAAqC,GAoBrC,KAAAgb,qBAAsB,EACtB,KAAAr0C,QAAkB,EAalB,KAAAs0C,0BAAoC,EAqBhC/sE,KAAKgtE,WAAW7e,GAEhBnuD,KAAK0jE,kBAAoB,IAAIiI,GAAkB3rE,KAAiC,MAA3BA,KAAKu/C,OAAO0tB,YAAsB,iBAAmBjtE,KAAKu/C,OAAO0tB,aAEtHjtE,KAAK+4D,QAAQ5K,GAGbnuD,KAAK6yD,iBAAmB,IAAI8I,GAAiB37D,KAAMA,KAAKktE,YACxDltE,KAAKwvB,aAAe,IAAIswB,GAAa9/C,MACN,MAA3BA,KAAKu/C,OAAO0tB,YACZ,IAAIZ,GAAgBrsE,MAAMmtE,KAAKntE,KAAKu/C,OAAO0tB,aAAahsE,MAAK,SAACmsE,GAC1D,EAAKzJ,oBAAsByJ,EAAWrnB,QACtC,EAAK6d,kBAA6C,MAAzBwJ,EAAW9qC,WAAqB,GAAK8qC,EAAW9qC,WACzE,EAAK+qC,kBACNhqC,OAAM,SAACliC,GACN+lC,MAAM,qCAAuC/lC,MAGjDnB,KAAKqtE,eAGTrtE,KAAKikE,eAAiB,IAAIlJ,GAAe/6D,M,UApIjD,O,EAAA,G,EAAA,yBACI,WAAwB,OAAO,IADnC,yBAGI,WACI,OAAOA,KAAKgkE,WAJpB,iCAMI,WACI,OAAOhkE,KAAK6pC,mBAPpB,6BASI,WACI,OAAO7pC,KAAKoT,OAAOA,SAV3B,yBAaI,WACI,OAAOpT,KAAK+jE,WAdpB,0BAiBI,WACI,OAAO/jE,KAAK82B,YAlBpB,8BAqBI,WACI,OAAO92B,KAAKm6D,gBAtBpB,sCAyBI,W,MACI,OAAIn6D,KAAKu/C,OAAO+tB,aACwB,QAApC,EAAOttE,KAAKutE,aAAajE,mBAAW55C,WAAA,EAAAA,EAAE10B,OAE/BgF,KAAK6pC,iBAAiBrW,YAAYg6C,mBA7BrD,6BAiCI,WACI,OAAOxtE,KAAKwvB,eAlCpB,iCAqCI,WACI,OAAOxvB,KAAK6yD,mBAtCpB,mCAyCI,WACI,OAAO7yD,KAAKw5D,qBA1CpB,4BA6CI,WACI,OAAOx5D,KAAKkrC,cA9CpB,8BAiDI,WACI,OAAOlrC,KAAK8jE,gBAlDpB,0BAwII,WAAY,WACR9jE,KAAKq/D,eAAc,WACf,EAAKoO,cAEL,EAAK1C,UAAY,IAAIF,GAAkB,WACvC,EAAKE,UAAUtnC,MAAK,WAEM,MAAlB,EAAK8b,OAAO9oB,KACZ,EAAKitC,kBAAkBgK,eAAe,EAAK3C,WAC3C,EAAK4C,uBAjJzB,2BAyJI,SAAczvC,GAAoB,WAC9Bl+B,KAAKwvB,aAAas2B,iBAAiB9lD,KAAK2jE,oBAAqB3jE,KAAK4jE,mBAAmB,eAAW,WAC5F,EAAKF,kBAAkBkK,cAAc,EAAKp+C,cAC1C,EAAKqjC,iBAAiByB,oCACtBp2B,SA7JZ,yBAiKI,WAAW,I,EAAA,OAEU,QAAjB,EAAAl+B,KAAKutE,oBAAY79C,SAAEm+C,iBAEnB7tE,KAAK8tE,cAAc9tE,KAAK6sE,YAEpB7sE,KAAKu/C,OAAO+tB,cACZttE,KAAKutE,aAAe,IAAItE,GAAqBjpE,KAAK6pC,iBAAiBrW,YAAaxzB,KAAK+tE,cAAe/tE,MACpGA,KAAKutE,aAAaS,qBAClBhuE,KAAK6sE,WAAWr/C,QAAO,SAACi8C,GAAD,MAA2B,QAAfA,EAAOhqE,QAAgBc,SAAQ,SAACkpE,GAAD,OAAY,EAAK8D,aAAaU,QAAQxE,OAExGzpE,KAAKmyD,gBAAgBnyD,KAAK6pC,iBAAiBrW,YAAYg6C,oBA5KnE,wBAkLI,SAAWrf,GAAyB,WAC5B+f,EAA8B/f,EAAKjvB,KAAK,cAExCl/B,KAAKu/C,OADS,MAAd2uB,GAA2C,iBAAdA,EACfxsC,KAAKhN,MAAMw5C,EAAW1iD,MAAM,KAAKxS,KAAK,MAEtC,GAGc,MAA5BhZ,KAAKu/C,OAAO+tB,eAAsBttE,KAAKu/C,OAAO+tB,cAAe,GACnC,MAA1BttE,KAAKu/C,OAAO4uB,aAAoBnuE,KAAKu/C,OAAO4uB,YAAa,GAC5B,MAA7BnuE,KAAKu/C,OAAO6uB,gBAAuBpuE,KAAKu/C,OAAO6uB,eAAgB,GAChC,MAA/BpuE,KAAKu/C,OAAO8uB,kBAAyBruE,KAAKu/C,OAAO8uB,iBAAkB,GAEjEruE,KAAKu/C,OAAO4uB,YAAcnuE,KAAKu/C,OAAO+tB,cAAgBttE,KAAKu/C,OAAO6uB,gBACpEpuE,KAAKu/C,OAAO8uB,iBAAkB,GAG7BruE,KAAKu/C,OAAO8uB,kBACbruE,KAAKu/C,OAAO+tB,cAAe,EAC3BttE,KAAKu/C,OAAO4uB,YAAa,EACzBnuE,KAAKu/C,OAAO6uB,eAAgB,GAGF,MAA3BpuE,KAAKu/C,OAAO0tB,aACX,CAAC,QAAS,UAAU1sE,SAAQ,SAAAujC,GACrB,EAAKyb,OAAO0tB,YAAYlpC,WAAWD,KAAc,EAAKyb,OAAO0tB,YAAYlpC,WAAWD,EAAW,SAC9F,EAAKyb,OAAO0tB,YAAc,EAAK1tB,OAAO0tB,YAAYt/D,QAAQm2B,EAAUA,EAAW,YA5MnG,6BAmNI,SAAgB9oC,GAERgF,KAAKu/C,OAAO+tB,cAAiD,MAAjCttE,KAAKutE,aAAajE,cAC9CtpE,KAAKutE,aAAajE,YAAYtuE,OAAO25D,YAAc30D,KAAK8tC,kBAAkB8mB,iBAG1E50D,KAAKu/C,OAAO+tB,cACZttE,KAAKutE,aAAae,SAAStzE,GAS/BgF,KAAK8tC,kBAAkBjY,cAAc,CACjCi/B,UAAU,EACVyZ,oBAAqB,IAEzBvuE,KAAKoT,OAAOA,OAAOyhD,SAAS75D,EAAOmX,OAGT,MAAtBnX,EAAO25D,aACP30D,KAAK8tC,kBAAkBknB,iBAAiBh6D,EAAO25D,eA3O3D,yBAkPI,WAAW,WAEHx5D,EAAU6E,KAAK6pC,iBAAiBrW,YAAYM,YAAW,GAEvDmC,EAAOj2B,KAEXA,KAAK+qE,UAAUyD,UAAUxuE,KAAKu/C,OAAO9oB,IAAI,SAACg4C,G,MAChB,MAAlBA,EACAhpC,aAAY,WACRxP,EAAKy4C,gBACN,KACA,WAEH,IAFG,EAEC7B,EAAuBnrC,KAAKhN,MAAM+5C,GAClCE,EAAY9B,EAAWpqE,OAHxB,KAKgBtH,GALhB,IAKH,2BAA4B,KAAnBH,EAAmB,QACP,QAAjB,EAAAi7B,EAAKs3C,oBAAY79C,SAAEsK,aAAah/B,GAChCi7B,EAAK+D,aAAah/B,IAPnB,yCAUc6xE,GAVd,yBAUMrxE,EAVN,QAYKgwE,EAAW,EAAKjsB,OAAO9oB,GAAKj7B,EAChC,EAAKuvE,UAAUyD,UAAUhD,GAAU,SAAC/B,G,QAChC,GAAc,MAAVA,EAAgB,CAEhB,IAAIzuE,EAASi7B,EAAKkzC,UAAU,CACxBpsD,MAAOvhB,EACPuU,KAAM05D,EACNhqE,KAAM,QAGO,QAAjB,EAAAw2B,EAAKs3C,oBAAY79C,SAAEy5C,UAAUnuE,GAC7Bi7B,EAAK24C,iBAAiB76B,OAAO,KAKjC,GAAiB,KADjB46B,IAEIlpC,aAAY,WACRxP,EAAKy4C,gBACN,KACc,QAAjB,EAAAz4C,EAAKs3C,oBAAY98B,SAAEu9B,qBACM,MAArB/3C,EAAKs3C,cAAsB,CAC3B,IAAIpyE,EAAU86B,EAAK4T,iBAAiBrW,YAAYM,YAAW,GACvD34B,EAAQsH,OAAS,GAAGwzB,EAAKk8B,gBAAgBh3D,EAAQ,SAzBrE,2BAA6B,IAV1B,uCA7PnB,yBA+SI,WAEI,IAAIA,EAAU6E,KAAK6pC,iBAAiBrW,YAAYM,YAAW,GAEvD+4C,EAAuB,GACvBgC,GAAuB,EAI3B,GAFA1zE,EAAQoF,SAAQ,SAAAlF,GAAC,OAAIwzE,EAAcA,IAAgBxzE,EAAE04B,KAAKqC,SAEtDy4C,EAAa,YAEM1zE,GAFN,IAEb,2BAA4B,KAAnBH,EAAmB,QACxB6xE,EAAW3qE,KAAKlH,EAAO+4B,KAAKv4B,MAC5B,IAAIgwE,EAAWxrE,KAAKu/C,OAAO9oB,GAAKz7B,EAAO+4B,KAAKv4B,KAC5CwE,KAAK+qE,UAAU+D,YAAYtD,EAAUxwE,EAAOm5B,iCAC5Cn5B,EAAO+4B,KAAKqC,OAAQ,GANX,8BAUbp2B,KAAK+qE,UAAU+D,YAAY9uE,KAAKu/C,OAAO9oB,GAAIiL,KAAKC,UAAUkrC,OAlUtE,+BAuUI,WAAiB,WACb7sE,KAAK+qE,UAAUyD,UAAUxuE,KAAKu/C,OAAO9oB,IAAI,SAACg4C,GACtC,GAAsB,MAAlBA,EAAJ,CAII,IAFG,OAEwB/sC,KAAKhN,MAAM+5C,IAFnC,IAIH,2BAA6B,KAApBjzE,EAAoB,QAErBgwE,EAAW,EAAKjsB,OAAO9oB,GAAKj7B,EAChC,EAAKuvE,UAAUgE,aAAavD,IAP7B,8BAUH,EAAKT,UAAUgE,aAAa,EAAKxvB,OAAO9oB,UArVxD,2BA8VI,SAAco2C,GACV7sE,KAAK6pC,iBAAmB,IAAI8C,GAAU,qBAAsB3sC,KAAM,GAElE,IAHgC,OAIb6sE,GAJa,IAIhC,2BAA+B,KAAtBpD,EAAsB,QACR,OAAfA,EAAOhqE,MACPO,KAAKmpE,UAAUM,IANS,iCA9VxC,uBA2WI,SAAUA,GACN,IAAIzuE,EAAiBm6B,GAAO2X,gBAAgB,CACxCrW,GAAIz2B,KAAK6pC,iBAAiBrW,YAAYM,YAAW,GAAMrxB,OACvDjH,KAAMiuE,EAAO1sD,MACbhN,KAAM05D,EAAO15D,KACb2mB,qBAAsB,KACtB8B,eAAgB,KAChB7B,+BAA+B,EAC/B8B,QAAS,EACTC,aAAc,EACdC,aAAa,EACbC,UAAW,IACZ54B,MAEHA,KAAK6pC,iBAAiBrW,YAAYoG,UAAU5+B,GAE5C,IAAIi7B,EAAOj2B,KAMX,OAJAhF,EAAOmX,MAAM+jB,oBAAmB,WAC5BD,EAAK+4C,oCAGFh0E,IAjYf,0BAoYI,SAAaA,GACTgF,KAAK6pC,iBAAiBrW,YAAYwG,aAAah/B,KArYvD,qBAyYI,SAAQmzD,GAAyB,WAI7BA,EAAK7xB,IAAI,CACL,mBAAoB,OACpB,kBAAmB,SAGvB,IAAI2yC,EAAaz0C,OAAO,qCAIxB2zB,EAAK9vB,OAAO4wC,GAEZ,IAAIzM,EAAWxiE,KAAKkvE,cACpB/gB,EAAK9vB,OAAOmkC,GACZxiE,KAAKkrC,YAAc,IAAIq3B,GAAYC,GAEnC,IAAI2M,EAAwBnvE,KAAKovE,yBAAyBjhB,GACtDkhB,EAA4BrvE,KAAKsvE,6BAA6BnhB,GAE9DsH,EAAYz1D,KAAKuvE,eAEjBC,EAAah1C,OAAO,qCACxBx6B,KAAK6pE,WAAarvC,OAAO,qCACzBx6B,KAAK4pE,SAAWpvC,OAAO,iDACvBx6B,KAAK4uE,iBAAmBp0C,OAAO,uHAC/Bx6B,KAAKmsE,qBAAuB3xC,OAAO,qIAEnCg1C,EAAWnxC,OAAOr+B,KAAK6pE,WAAY7pE,KAAK4pE,SAAU5pE,KAAKmsE,sBACvDnsE,KAAK6pE,WAAWxrC,OAAOr+B,KAAK4uE,kBAE5B,IAAIa,EAAmBzvE,KAAK0vE,sBAC5BF,EAAWnxC,OAAOoxC,GAIlBzvE,KAAK4uE,iBAAiB9xC,OAEtB98B,KAAK4uE,iBAAiBpmD,GAAG,SAAS,WAAQ2mD,EAAsB/xC,UAEhEp9B,KAAKmsE,qBAAqBrvC,OAE1B98B,KAAKmsE,qBAAqB3jD,GAAG,SAAS,WAAQ6mD,EAA0BjyC,UAExEp9B,KAAK4pE,SAAS9sC,OAEd,IAAI6yC,EAAen1C,OAAO,uCACtBo1C,EAAkBp1C,OAAO,0CAGzBu8B,EAAav8B,OAAO,qCAGxB,GAFAx6B,KAAK6vE,cAAcD,EAAiBD,GACpC5Y,EAAW14B,OAAOuxC,GACd5vE,KAAKu/C,OAAO+tB,aAAc,CAC1B,IAAIlE,EAAYppE,KAAK8vE,eACrB/Y,EAAWvK,QAAQ4c,GACnB,IAAIlB,GAAekB,GAAW,GAAO,GAAO,eAEhDxqC,GAASgxC,GACTzhB,EAAK9vB,OAAO04B,GAEZ5I,EAAKlzB,SAAS,qBAEdj7B,KAAKoT,OAAS,IAAIkhC,GAAOt0C,MAAM,GAAO,GACtCA,KAAKoT,OAAO2lD,QAAQ/4D,KAAK6pE,YACzB7pE,KAAK6pE,WAAW34C,KAAK,kBAAkBoL,IAAI,UAAW,MAEzB,MAAzB6xB,EAAKnzB,KAAK,aAAqBmzB,EAAKnzB,KAAK,WAAY,KACzDh7B,KAAKm6D,cAAgB,IAAIjgC,GAAci0B,EAAMnuD,MAC7CA,KAAKm6D,cAAczuB,OAEnB1rC,KAAK82B,UAAY,IAAIwtC,GAAUtkE,KAAM4vE,EAAiBzhB,GACtDnuD,KAAK82B,UAAUiiC,UAEf/4D,KAAK+jE,SAAW,IAAIvO,GAASx1D,KAAMA,KAAK+vE,gBACxC/vE,KAAK+jE,SAAShL,UAEdkW,EAAW5wC,OAAOmxC,EAAYzY,GAC9B5I,EAAK9vB,OAAOo3B,GAEZ,IAAIua,EAAsBx1C,OAAO,uDAC7By1C,EAAcz1C,OAAO,wFAEzBm1C,EAAatxC,OAAO4xC,GAEpBjwE,KAAK+vE,eAAe1xC,OAAO2xC,GAE3B,IAAI9H,GAAezS,GAAW,GAAM,GAAO,WACvC,EAAKriD,OAAOA,OAAOyjD,WACpBoY,GAEH,IAAI/G,GAAenR,GAAY,GAAM,GAAM,WAAQ,EAAK3jD,OAAOA,OAAOyjD,YAEtEoZ,EAAYznD,GAAG,WAAW,SAACyU,GACvBA,EAAGrB,iBACHqB,EAAGtB,kBACH2B,GAAgB,CAAC,CACbQ,QAAS,0BACTC,KAAM,oBACNG,SAAU,eAGVjB,EAAGmyB,MAAQ,EAAGnyB,EAAGoyB,MAAQ,MAIjC,IAAI6gB,EAAc11C,OAAO,kLAGrBvE,EAAOj2B,KAEPmwE,EAAmBD,EAAYh/C,KAAK,SAExCi/C,EAAiB3nD,GAAG,UAAU,SAACiS,GAE3B,IAAI8L,EAAkB9L,EAAMstB,cAAc9oB,OAAOsH,MACjDtQ,EAAKm6C,qBAAqB7pC,EAAM,IAAItlC,MAAK,WACrCkvE,EAAiBzzC,IAAI,YAI7B,IAAI2zC,EAAc71C,OAAO,6HAIzB61C,EAAY7nD,GAAG,SAAS,WAAQyN,EAAKq6C,wBAErCX,EAAatxC,OAAO6xC,EAAaG,GAEjCrwE,KAAKw5D,mBAAqB,IAAIyD,GAAmBj9D,KAAM4vE,GACvD5vE,KAAKw5D,mBAAmB+W,sBAAsBvwE,KAAK0jE,mBAGnD,IAAI/G,GAAsB38D,KAAM2vE,GAEhC3vE,KAAK8jE,cAAgB,IAAIjB,GAAc7iE,KAAMmuD,EAAKj9B,KAAK,mBAEvD6L,YAAW,WACP,EAAK3pB,OAAOA,OAAOyjD,SACnB,EAAKmN,SAAW,IAAI3wC,GAAS,GAC7B,EAAKmxC,eACN,OAxhBX,gCA6hBI,YACI,IAAIxe,IAAuB2D,WAAW3pD,KAAKwvB,gBA9hBnD,kCAiiBU,SAAqBuE,G,kKAEd,OADLy8C,EAAiB,IAAIxqB,G,SACVwqB,EAAevqB,aAAalyB,EAAM/zB,M,UACvC,OADNqiC,UACM,C,sBACN6E,MAAM,8C,0BAGNlnC,KAAKwvB,aAAas2B,iBAAiBzjB,EAAG0jB,QAAS,IAAI,SAACz3C,GAC5CA,EAAO7L,OAAS,IAChBykC,MAAM,wGACNhH,QAAQ6E,IAAIz2B,OAEjB,WACC,EAAKukD,iBAAiByB,uC,qFA9iBtC,yBAojBI,WAGI,IAAI3zB,GAA+B,MAAxBxE,OAAOskB,cAAwB,GAAKtkB,OAAOskB,eAAiB,8CAEnEgwB,EAAW,iNAAH,OAMI9vC,EANJ,qJAWZ,OAAOnG,OAAOi2C,KApkBtB,iCAukBI,WACI,OAAOj2C,OAAO,6UAxkBtB,sCAklBI,SAAyBk2C,GAA4B,WAC7CC,EAAUn2C,OAAO,u4BAyCrB,OAnBAm2C,EAAQ7zC,OAER4zC,EAAQryC,OAAOsyC,GAEfD,EAAQx/C,KAAK,6BAA6B1I,GAAG,SAAS,WAClDmoD,EAAQ7zC,UAGZ4zC,EAAQx/C,KAAK,yBAAyB1I,GAAG,SAAS,WAE9C,EAAKilD,cACL,EAAKmD,oBAELD,EAAQ7zC,OACR,EAAK8xC,iBAAiB9xC,OACtB,EAAKiwC,0BAA4B,KAI9B4D,IA5nBf,0CA+nBI,SAA6BD,GAA4B,WACjDC,EAAUn2C,OAAO,i8BA0CrB,OApBAm2C,EAAQ7zC,OAER4zC,EAAQryC,OAAOsyC,GAEfD,EAAQx/C,KAAK,iCAAiC1I,GAAG,SAAS,WACtDmoD,EAAQ7zC,UAGZ4zC,EAAQx/C,KAAK,6BAA6B1I,GAAG,SAAS,WAElDmoD,EAAQ7zC,OACR,EAAKuiC,eAAc,WACf,EAAKqE,kBAAkBrhE,WAG3B,EAAK8pE,qBAAqBrvC,OAC1B,EAAKiwC,0BAA4B,KAI9B4D,IA1qBf,0BA6qBI,WAGI,IAAIvH,EAAY5uC,OAAO,wDAEnBq2C,EAAer2C,OAAO,iGAM1B,OAJAx6B,KAAK+tE,cAAgBvzC,OAAO,mDAE5B4uC,EAAU/qC,OAAOwyC,EAAc7wE,KAAK+tE,eAE7B3E,IAxrBf,wBA2rBI,WAC4B,MAApBppE,KAAK0kE,aACLl/B,cAAcxlC,KAAK0kE,aAGvB,IAAIzuC,EAAOj2B,KACXA,KAAK0kE,YAAcj/B,aAAY,WAE3BxP,EAAKkb,mBAEN,OArsBX,4BA0sBI,W,QAEI,GAA6B,MAAzBnxC,KAAK6pC,kBAEL7pC,KAAK6pC,iBAAiBrW,YAAYmxC,WAClC3kE,KAAKgkE,SAAS1wC,gBAAkBhE,GAAemE,WAAyD,MAA5CzzB,KAAK20B,kBAAkBhI,kBACnF,IAEI3sB,KAAKgkE,SAASY,QAAQ5kE,KAAK6pC,iBAAiBrW,aAGjB,QADjB,EACG,QADH,EAAGxzB,KACT82B,iBAASpH,WAAA,EAAAA,EAAE4E,oBAAYmc,SAAEgvB,WAAWz/D,KAAK6pC,kBAE7C7pC,KAAKoT,OAAO2mC,0BAA0B,MAEtC/5C,KAAKy4B,UAEP,MAAOhmB,GACLytB,QAAQ/+B,MAAMsR,GACdzS,KAAKgkE,SAAS1wC,eAAiBhE,GAAenuB,SA7tB9D,4CAmuBI,WACInB,KAAK+sE,4BACiC,GAAlC/sE,KAAK+sE,2BACL/sE,KAAK4uE,iBAAiB76B,OAAO,OAtuBzC,2BA0uBI,SAAcgjB,EAAiC7pB,GAE3C,IAAI4jC,EAAet2C,OAAO,sCAC1Bs2C,EAAax0C,IAAI,WAAY,YAC7B,IAAIy0C,EAAcv2C,OAAO,gFAKzB,GAHAu2C,EAAY1yC,OAAO6O,GACnB4jC,EAAazyC,OAAO0yC,GAEhB/wE,KAAKu/C,OAAO6uB,cAAe,CAC3B,IAAI4C,EAAYx2C,OAAO,0GACvBs2C,EAAazyC,OAAO2yC,GAGxB,GAAIhxE,KAAKu/C,OAAO4uB,WAAY,CACxB,IAAI8C,EAAWz2C,OAAO,qHACtBs2C,EAAazyC,OAAO4yC,GAMxB,IAAIC,EAAa12C,OAAO,uHACxBs2C,EAAazyC,OAAO6yC,GAEpB,IAAIC,EAAe32C,OAAO,gHAC1Bs2C,EAAazyC,OAAO8yC,GAEpBpa,EAAW14B,OAAOyyC,GAElB,IAAInb,EAAQn7B,OAAO,6CAEnB,GAAIx6B,KAAKu/C,OAAO6uB,cAAe,CAC3B,IAAIgD,EAAY52C,OAAO,4DACvBm7B,EAAMt3B,OAAO+yC,GAGjB,GAAIpxE,KAAKu/C,OAAO4uB,WAAY,CACxB,IAAIkD,EAAY72C,OAAO,iQAOvBm7B,EAAMt3B,OAAOgzC,GAMjB,IAAIC,EAAc92C,OAAO,mDACzBm7B,EAAMt3B,OAAOizC,GAGbva,EAAW14B,OAAOs3B,KAjyB1B,0BAqyBI,WAEI,IAAIF,EAAYj7B,OAAO,oCACvBx6B,KAAK+vE,eAAiBv1C,OAAO,yCAC7Bi7B,EAAUp3B,OAAOr+B,KAAK+vE,gBAGtB,IAAIe,EAAet2C,OAAO,sCAC1Bs2C,EAAax0C,IAAI,WAAY,YAC7B,IAAIi1C,EAAS/2C,OAAO,2GAEpBs2C,EAAazyC,OAAOkzC,GAEpBvxE,KAAK+vE,eAAe1xC,OAAOyyC,GAE3B,IAAInb,EAAQn7B,OAAO,6CAWnB,OARAx6B,KAAKktE,WAAa1yC,OAAO,0FAEzBm7B,EAAMt3B,OAAOr+B,KAAKktE,YAElBltE,KAAK+vE,eAAe1xC,OAAOs3B,GAE3B/2B,GAAS62B,GAEFA,IA/zBf,+BAk0BI,WACI,OAAOz1D,KAAKikE,oB,gFAn0BpB,K,wNCrBO,IAAMuN,GAAb,yB,4FAAA,SAGI,KAAAlY,gBAAkB,EAIlB,KAAAmY,iBAAmC,G,UAPvC,O,EAAA,G,EAAA,sBASI,WAEIzxE,KAAKukE,uBAELvkE,KAAK26D,aAAe,IAAI3kD,IAbhC,wBAgBI,YACI,IAAInE,GAAY65B,OAChB1rC,KAAKukE,yBAlBb,kCAqBI,WACIvkE,KAAKs5D,kBACuB,GAAxBt5D,KAAKs5D,iBACLt5D,KAAK60B,UAxBjB,mBA4BI,WAEI70B,KAAK0xE,uBA9Bb,gCAkCI,WAAkB,WAEdl3C,OAAO,eAAe2R,MAAK,SAAChqB,EAAe2Q,GACvC,IAAIq7B,EAAO3zB,OAAO1H,GACd+5C,EAAyB,GAC7B1e,EAAKj9B,KAAK,UAAUib,MAAK,SAAChqB,EAAe2Q,GACrC,IAAI6+C,EAAUn3C,OAAO1H,GACjBrzB,EAAmB,MACI,MAAxBkyE,EAAQzyC,KAAK,UAAiBz/B,EAAoBkyE,EAAQzyC,KAAK,SAClE,IAAIuqC,EAAmB,CACnBhqE,KAAMA,EACNsd,MAAO40D,EAAQ32C,KAAK,SACpBjrB,KAAM4hE,EAAQ5hE,OAAO0b,QAEzBohD,EAAW3qE,KAAKunE,MAGpB,EAAKmI,QAAQzjB,EAAM0e,QAnD/B,qBAyDI,SAAQ1e,EAA2B0e,GAER,IAAID,GAAaze,EAAM0e,Q,gFA3DtD,KAiEAryC,QAAO,WAEH,IAAIq3C,EAAkB,IAAIL,GAEtBM,EAAS,GACTC,EAAa,2BAEU,MAAxB51C,OAAOskB,gBAENqxB,EAAS31C,OAAOskB,eAIU,MAA3BtkB,OAAO61C,mBAEND,EAAa51C,OAAO61C,kBAIxB71C,OAAO81C,QAAQ1yB,OAAO,CAAE2yB,MAAO,CAAE,GAAMJ,EAASC,KAEhD51C,OAAO81C,QAAQ1yB,OAAO,CAClB,SAAU,CACN4yB,mBAAoB,CAChB,IAAK,OAGbC,uBAAwB,CAAC,2BAG7Bj2C,OAAO81C,QAAQ,CAAC,0BAA0B,WAEtCJ,EAAgBQ,aAChBR,EAAgB9Y","file":"sql-ide-embedded.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","export enum TokenType {\r\n    identifier,\r\n    // constants\r\n    integerConstant,\r\n    floatingPointConstant,\r\n    booleanConstant,\r\n    stringConstant,\r\n    charConstant,\r\n    true,\r\n    false,\r\n    // keywords\r\n    keywordRename,\r\n    keywordDistinct,\r\n    keywordTo,\r\n    keywordAlter,\r\n    keywordCommit,\r\n    keywordAdd,\r\n    keywordDelete,\r\n    keywordSelect,\r\n    keywordInsert,\r\n    keywordInto,\r\n    keywordValues,\r\n    keywordUpdate,\r\n    keywordSet,\r\n    keywordNo,\r\n    keywordUse,\r\n    keywordCreate,\r\n    keywordReferences,\r\n    keywordPrimary,\r\n    keywordForeign,\r\n    keywordTable,\r\n    keywordTables,\r\n    keywordColumn,\r\n    keywordDrop,\r\n    keywordUnique,\r\n    keywordKey,\r\n    keywordIndex,\r\n    keywordConstraint,\r\n    keywordModify,\r\n    keywordCascade,\r\n    keywordRestrict,\r\n    keywordAction,\r\n    keywordAutoincrement,\r\n    keywordFrom,\r\n    keywordWhere,\r\n    keywordGroup,\r\n    keywordBy,\r\n    keywordHaving,\r\n    keywordOrder,\r\n    keywordAscending,\r\n    keywordDescending,\r\n    keywordNulls,\r\n    keywordFirst,\r\n    keywordLast,\r\n    keywordIs,\r\n    keywordNull,\r\n    keywordDatabase,\r\n\r\n    keywordOr,\r\n    keywordAnd,\r\n    keywordNot,\r\n\r\n    keywordJoin,\r\n    keywordNatural,\r\n    keywordLeft,\r\n    keywordCross,\r\n    keywordInner,\r\n    keywordOuter,\r\n    keywordOn,\r\n    keywordAs,\r\n    keywordLimit,\r\n    keywordOffset,\r\n    keywordIn,\r\n    keywordNotIn,\r\n    keywordLike,\r\n    keywordCollate,\r\n    keywordDefault,\r\n    keywordComment,\r\n    keywordEngine,\r\n    keywordCharset,\r\n    keywordCharacter,\r\n    \r\n    keywordStart,\r\n    keywordTransaction,\r\n    keywordIf,\r\n    keywordExists,\r\n\r\n    keywordLock,\r\n    keywordUnlock,\r\n    keywordWrite,\r\n    keywordRead,\r\n\r\n    // brackets\r\n    leftBracket, // ()\r\n    rightBracket,\r\n    leftSquareBracket, // []\r\n    rightSquareBracket,\r\n    leftCurlyBracket, // {}\r\n    rightCurlyBracket,\r\n    leftRightSquareBracket, // []\r\n    \r\n    // binary operators\r\n    dot, //.\r\n    modulo,\r\n    minus, plus, multiplication, division,\r\n    singleQuote, doubleQuote, // ', \"\r\n    identifierQuote,\r\n    lower, greater, lowerOrEqual, greaterOrEqual, \r\n    concatenation,    \r\n    equal,\r\n    notEqual,\r\n\r\n    // semicolon\r\n    semicolon, // ;\r\n\r\n    colon, // :\r\n\r\n    // comma\r\n    comma, // ,\r\n\r\n    // backslash\r\n    backslash,\r\n\r\n    // |\r\n    pipe,\r\n\r\n    // @\r\n    at,\r\n\r\n    // #\r\n    hash,\r\n\r\n    // whitespace\r\n    space,\r\n\r\n    tab,\r\n\r\n    // newline\r\n    newline,\r\n\r\n    // line feed\r\n    linefeed,\r\n\r\n    // only lexer-internal\r\n    identifierChar,  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    comment,\r\n\r\n    endofSourcecode, // will be generated after sourcecode end\r\n    \r\n    // Program statement types:\r\n    \r\n    // additional AST node types\r\n    constantNode,\r\n    callMethod,\r\n    unaryOp,\r\n    binaryOp,\r\n    table,\r\n    subquery,\r\n    list,\r\n    column,\r\n    columnDef,\r\n    allColumns, // *\r\n    isNull,\r\n    isNot, // used by lexer to lex \"is not null\" into one token\r\n    isNotNull,\r\n    omittedeStatement\r\n}\r\n\r\nexport var TokenTypeReadable: {[tt: number]: string} = {\r\n    [TokenType.identifier]: \"ein Bezeichner\",\r\n    // constants\r\n    [TokenType.integerConstant]: \"eine Integer-Konstante\",\r\n    [TokenType.floatingPointConstant]: \"eine Fließkomma-Konstante\",\r\n    [TokenType.booleanConstant]: \"eine boolesche Konstante\",\r\n    [TokenType.stringConstant]: \"eine Zeichenketten-Konstante\",\r\n    [TokenType.charConstant]: \"eine char-Konstante\",\r\n    [TokenType.true]: \"true\",\r\n    [TokenType.false]: \"false\",\r\n    // keywords\r\n    [TokenType.keywordRename]: \"rename\",\r\n    [TokenType.keywordDistinct]: \"distinct\",\r\n    [TokenType.keywordTo]: \"to\",\r\n    [TokenType.keywordAlter]: \"alter\",\r\n    [TokenType.keywordCommit]: \"commit\",\r\n    [TokenType.keywordAdd]: \"add\",\r\n    [TokenType.keywordDelete]: \"delete\",\r\n    [TokenType.keywordSelect]: \"select\",\r\n    [TokenType.keywordInsert]: \"insert\",\r\n    [TokenType.keywordInto]: \"into\",\r\n    [TokenType.keywordValues]: \"values\",\r\n    [TokenType.keywordUpdate]: \"update\",\r\n    [TokenType.keywordSet]: \"set\",\r\n    [TokenType.keywordNo]: \"no\",\r\n    [TokenType.keywordUse]: \"use\",\r\n    [TokenType.keywordCreate]: \"create\",\r\n    [TokenType.keywordReferences]: \"references\",\r\n    [TokenType.keywordPrimary]: \"primary\",\r\n    [TokenType.keywordForeign]: \"foreign\",\r\n    [TokenType.keywordTable]: \"table\",\r\n    [TokenType.keywordTables]: \"tables\",\r\n    [TokenType.keywordColumn]: \"column\",\r\n    [TokenType.keywordDrop]: \"drop\",\r\n    [TokenType.keywordUnique]: \"unique\",\r\n    [TokenType.keywordKey]: \"key\",\r\n    [TokenType.keywordIndex]: \"index\",\r\n    [TokenType.keywordConstraint]: \"constraint\",\r\n    [TokenType.keywordModify]: \"modify\",\r\n    [TokenType.keywordCascade]: \"cascade\",\r\n    [TokenType.keywordRestrict]: \"restrict\",\r\n    [TokenType.keywordAction]: \"action\",\r\n    [TokenType.keywordAutoincrement]: \"autoincrement\",\r\n    [TokenType.keywordFrom]: \"from\",\r\n    [TokenType.keywordWhere]: \"where\",\r\n    [TokenType.keywordGroup]: \"group\",\r\n    [TokenType.keywordBy]: \"by\",\r\n    [TokenType.keywordHaving]: \"having\",\r\n    [TokenType.keywordOrder]: \"order\",\r\n    [TokenType.keywordAscending]: \"ascending\",\r\n    [TokenType.keywordDescending]: \"descending\",\r\n    [TokenType.keywordNulls]: \"nulls\",\r\n    [TokenType.keywordFirst]: \"first\",\r\n    [TokenType.keywordLast]: \"last\",\r\n    [TokenType.keywordIs]: \"is\",\r\n    [TokenType.keywordNull]: \"null\",\r\n    [TokenType.keywordDatabase]: \"database\",\r\n\r\n\r\n    [TokenType.keywordAnd]: \"and\",\r\n    [TokenType.keywordOr]: \"or\",\r\n    [TokenType.keywordNot]: \"not\",\r\n\r\n    [TokenType.keywordJoin]: \"join\",\r\n    [TokenType.keywordNatural]: \"natural\",\r\n    [TokenType.keywordLeft]: \"left\",\r\n    [TokenType.keywordCross]: \"cross\",\r\n    [TokenType.keywordInner]: \"inner\",\r\n    [TokenType.keywordOuter]: \"outer\",\r\n    [TokenType.keywordOn]: \"on\",\r\n    [TokenType.keywordAs]: \"as\",\r\n    [TokenType.keywordLimit]: \"limit\",\r\n    [TokenType.keywordOffset]: \"offset\",\r\n    [TokenType.keywordIn]: \"in\",\r\n    [TokenType.keywordNotIn]: \"not in\",\r\n    [TokenType.keywordLike]: \"like\",\r\n    [TokenType.keywordCollate]: \"collate\",\r\n    [TokenType.keywordDefault]: \"default\",\r\n    [TokenType.keywordComment]: \"comment\",\r\n    [TokenType.keywordEngine]: \"engine\",\r\n    [TokenType.keywordCharset]: \"charset\",\r\n    [TokenType.keywordCharacter]: \"character\",\r\n    [TokenType.keywordStart]: \"start\",\r\n    [TokenType.keywordTransaction]: \"transaction\",\r\n    [TokenType.keywordIf]: \"if\",\r\n    [TokenType.keywordExists]: \"exists\",\r\n    [TokenType.keywordLock]: \"lock\",\r\n    [TokenType.keywordUnlock]: \"unlock\",\r\n    [TokenType.keywordWrite]: \"write\",\r\n    [TokenType.keywordRead]: \"read\",\r\n\r\n    // brackets\r\n    [TokenType.leftBracket]: \"(\", // ()\r\n    [TokenType.rightBracket]: \")\",\r\n    [TokenType.leftSquareBracket]: \"[\", // []\r\n    [TokenType.rightSquareBracket]: \"]\",\r\n    [TokenType.leftCurlyBracket]: \"{\", // {}\r\n    [TokenType.rightCurlyBracket]: \"}\",\r\n    [TokenType.leftRightSquareBracket]: \"[]\", \r\n    \r\n    // operators\r\n    [TokenType.dot]: \".\", //.\r\n    [TokenType.minus]: \"-\", \r\n    [TokenType.modulo]: \"%\", \r\n    [TokenType.plus]: \"+\", \r\n    [TokenType.multiplication]: \"*\", \r\n    [TokenType.division]: \"/\",\r\n    [TokenType.singleQuote]: \"'\", \r\n    [TokenType.doubleQuote]: \"\\\"\", // ']: \"\", \"\r\n    [TokenType.identifierQuote]: \"`\",\r\n    [TokenType.lower]: \"<\", \r\n    [TokenType.greater]: \">\",\r\n    [TokenType.equal]: \"=\", \r\n    [TokenType.lowerOrEqual]: \"<=\", \r\n    [TokenType.greaterOrEqual]: \">=\", \r\n    [TokenType.concatenation]: \"||\", \r\n    \r\n    // semicolon\r\n    [TokenType.semicolon]: \";\", // ;\r\n    [TokenType.colon]: \":\", // ;\r\n\r\n    // comma\r\n    [TokenType.comma]: \",\", \r\n\r\n    // backslash\r\n    [TokenType.backslash]: \"\\\\\",\r\n\r\n    // at\r\n    [TokenType.at]: \"@\",\r\n\r\n    // hash\r\n    [TokenType.hash]: \"#\",\r\n    \r\n    // pipe\r\n    [TokenType.pipe]: \"|\",\r\n\r\n    // whitespace\r\n    [TokenType.space]: \"ein Leerzeichen\",\r\n    [TokenType.tab]: \"ein Tabulatorzeichen\",\r\n\r\n    // newline\r\n    [TokenType.newline]: \"ein Zeilenumbruch\",\r\n\r\n    // only lexer-internal\r\n    [TokenType.identifierChar]: \"eines der Zeichen a..z, A..Z, _\",  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    [TokenType.comment]: \"ein Kommentar\",\r\n\r\n    [TokenType.endofSourcecode]: \"das Ende des Programmes\"\r\n\r\n}\r\n\r\nexport var specialCharList: {[keyword: string]:TokenType} = {\r\n    '(': TokenType.leftBracket, // ()\r\n    ')': TokenType.rightBracket,\r\n    '[': TokenType.leftSquareBracket, // []\r\n    ']': TokenType.rightSquareBracket,\r\n    '{': TokenType.leftCurlyBracket, // {}\r\n    '}': TokenType.rightCurlyBracket,\r\n    \r\n    // operators\r\n    '.': TokenType.dot, //.\r\n    ',': TokenType.comma, //.\r\n    '-': TokenType.minus,\r\n    '%': TokenType.modulo,\r\n    '+': TokenType.plus, \r\n    '*': TokenType.multiplication, \r\n    '/': TokenType.division,\r\n    '\\\\': TokenType.backslash,\r\n    '@': TokenType.at,\r\n    '#': TokenType.hash,\r\n    '|': TokenType.pipe,\r\n    '\\'': TokenType.singleQuote, \r\n    '\"': TokenType.doubleQuote, // ', \"\r\n    '`': TokenType.identifierQuote, // ', \"\r\n    \"<\": TokenType.lower,\r\n    \">\": TokenType.greater,\r\n    \"=\": TokenType.equal,\r\n    \"<>\": TokenType.notEqual,\r\n    \r\n    ';': TokenType.semicolon, // ;\r\n    ':': TokenType.colon, // ;\r\n\r\n    // whitespace\r\n    ' ': TokenType.space,\r\n    '\\t': TokenType.tab,\r\n\r\n    // newline\r\n    '\\n': TokenType.newline,\r\n    '\\r': TokenType.linefeed\r\n}\r\n\r\nexport var keywordList: {[keyword: string]:TokenType} = {\r\n    \"rename\": TokenType.keywordRename,\r\n    \"distinct\": TokenType.keywordDistinct,\r\n    \"to\": TokenType.keywordTo,\r\n    \"alter\": TokenType.keywordAlter,\r\n    \"commit\": TokenType.keywordCommit,\r\n    \"add\": TokenType.keywordAdd,\r\n    \"delete\": TokenType.keywordDelete,\r\n    \"select\": TokenType.keywordSelect,\r\n    \"insert\": TokenType.keywordInsert,\r\n    \"into\": TokenType.keywordInto,\r\n    \"values\": TokenType.keywordValues,\r\n    \"update\": TokenType.keywordUpdate,\r\n    \"set\": TokenType.keywordSet,\r\n    \"no\": TokenType.keywordNo,\r\n    \"use\": TokenType.keywordUse,\r\n    \"create\": TokenType.keywordCreate,\r\n    \"references\": TokenType.keywordReferences,\r\n    \"primary\": TokenType.keywordPrimary,\r\n    \"foreign\": TokenType.keywordForeign,\r\n    \"table\": TokenType.keywordTable,\r\n    \"tables\": TokenType.keywordTables,\r\n    \"column\": TokenType.keywordColumn,\r\n    \"drop\": TokenType.keywordDrop,\r\n    \"unique\": TokenType.keywordUnique,\r\n    \"key\": TokenType.keywordKey,\r\n    \"index\": TokenType.keywordIndex,\r\n    \"constraint\": TokenType.keywordConstraint,\r\n    \"modify\": TokenType.keywordModify,\r\n    \"cascade\": TokenType.keywordCascade,\r\n    \"restrict\": TokenType.keywordRestrict,\r\n    \"action\": TokenType.keywordAction,\r\n    \"autoincrement\": TokenType.keywordAutoincrement,\r\n    \"auto_increment\": TokenType.keywordAutoincrement,\r\n    \"from\": TokenType.keywordFrom,\r\n    \"where\": TokenType.keywordWhere,\r\n    \"true\": TokenType.true,\r\n    \"false\": TokenType.false,\r\n    \"group\": TokenType.keywordGroup,\r\n    \"by\": TokenType.keywordBy,\r\n    \"having\": TokenType.keywordHaving,\r\n    \"order\": TokenType.keywordOrder,\r\n    \"asc\": TokenType.keywordAscending,\r\n    \"desc\": TokenType.keywordDescending,\r\n    \"nulls\": TokenType.keywordNulls,\r\n    \"first\": TokenType.keywordFirst,\r\n    \"last\": TokenType.keywordLast,\r\n    \"is\": TokenType.keywordIs,\r\n    \"null\": TokenType.keywordNull,\r\n    \"database\": TokenType.keywordDatabase,\r\n\r\n    \"or\": TokenType.keywordOr,\r\n    \"and\": TokenType.keywordAnd,\r\n    \"not\": TokenType.keywordNot,\r\n\r\n    \"join\": TokenType.keywordJoin,\r\n    \"natural\": TokenType.keywordNatural,\r\n    \"left\": TokenType.keywordLeft,\r\n    \"cross\": TokenType.keywordCross,\r\n    \"inner\": TokenType.keywordInner,\r\n    \"outer\": TokenType.keywordOuter,\r\n    \"on\": TokenType.keywordOn,\r\n    \"as\": TokenType.keywordAs,\r\n    \"limit\": TokenType.keywordLimit,\r\n    \"offset\": TokenType.keywordOffset,\r\n    \"in\": TokenType.keywordIn,\r\n    \"not in\": TokenType.keywordNotIn,\r\n    \"like\": TokenType.keywordLike,\r\n    \"collate\": TokenType.keywordCollate,\r\n    \"default\": TokenType.keywordDefault,\r\n    \"comment\": TokenType.keywordComment,\r\n    \"engine\": TokenType.keywordEngine,\r\n    \"charset\": TokenType.keywordCharset,\r\n    \"character\": TokenType.keywordCharacter,\r\n    \"start\": TokenType.keywordStart,\r\n    \"transaction\": TokenType.keywordTransaction,\r\n    \"if\": TokenType.keywordIf,\r\n    \"exists\": TokenType.keywordExists,\r\n    \"lock\": TokenType.keywordLock,\r\n    \"unlock\": TokenType.keywordUnlock,\r\n    \"write\": TokenType.keywordWrite,\r\n    \"read\": TokenType.keywordRead\r\n\r\n\r\n};\r\n\r\nexport var EscapeSequenceList: {[keyword: string]:string} = {\r\n    \"n\": \"\\n\",\r\n    \"r\": \"\\r\",\r\n    \"t\": \"\\t\",\r\n    \"\\\"\": \"\\\"\",\r\n    \"'\": \"'\",\r\n    \"\\\\\": \"\\\\\"\r\n}\r\n\r\nexport type TextPosition = {\r\n    line: number,\r\n    column: number, \r\n    length: number\r\n}\r\n\r\nexport type TextPositionWithoutLength = {\r\n    line: number,\r\n    column: number\r\n}\r\n\r\nexport type Token = {\r\n    tt: TokenType,\r\n    value: string|number|boolean,\r\n    position: TextPosition,\r\n    commentBefore?: Token,\r\n    isDoubleQuotedIdentifier?: boolean\r\n}\r\n\r\nexport type TokenList = Token[];\r\n\r\nfunction tokenToString(t: Token){\r\n    return \"<div><span style='font-weight: bold'>\" + TokenType[t.tt] + \"</span>\" +\r\n            \"<span style='color: blue'> &nbsp;'\" + t.value + \"'</span> (l&nbsp;\" + t.position.line + \", c&nbsp;\" + t.position.column + \")</div>\";\r\n}\r\n \r\nexport function tokenListToString(tl: TokenList):string{\r\n    let s = \"\";\r\n    for(let t of tl){\r\n        s += tokenToString(t) + \"\\n\";\r\n    }\r\n    return s;\r\n}","import { TokenList, specialCharList, TokenType, Token, EscapeSequenceList, keywordList, TextPosition, TokenTypeReadable } from \"./Token.js\";\r\n\r\nenum LexerState {\r\n    number, identifier, stringConstant, characterConstant, multilineComment, EndoflineComment\r\n}\r\n\r\nvar endChar = \"►\"; // \\u10000\r\n\r\nexport type QuickFix = {\r\n    title: string,\r\n    editsProvider: (uri: monaco.Uri) => monaco.languages.WorkspaceTextEdit[]\r\n}\r\n\r\nexport type ErrorLevel = \"info\" | \"error\" | \"warning\";\r\n\r\nexport type Error = {\r\n    position: TextPosition,\r\n    text: string,\r\n    quickFix?: QuickFix,\r\n    level: ErrorLevel\r\n}\r\n\r\nexport class Lexer {\r\n\r\n    tokenList: TokenList;\r\n    nonSpaceLastTokenType: TokenType;\r\n    nonSpaceLastToken: Token;\r\n\r\n    errorList: Error[];\r\n    pos: number;\r\n    line: number;\r\n    column: number;\r\n\r\n    currentChar: string;\r\n    nextChar: string;\r\n\r\n    input: string;\r\n\r\n    spaceTokens: TokenType[] = [\r\n        TokenType.space, TokenType.tab, TokenType.newline\r\n    ];\r\n\r\n    bracketStack: TokenType[];\r\n    bracketError: string;\r\n    correspondingBracket: { [key: number]: TokenType } = {};\r\n\r\n    tokenTypesToMerge: { first: TokenType, second: TokenType, merged: TokenType }[] = [\r\n        { first: TokenType.keywordNotIn, second: TokenType.keywordIn, merged: TokenType.keywordNotIn },\r\n        { first: TokenType.keywordIs, second: TokenType.keywordNot, merged: TokenType.isNot },\r\n        { first: TokenType.isNot, second: TokenType.keywordNull, merged: TokenType.isNotNull },\r\n        { first: TokenType.keywordIs, second: TokenType.keywordNull, merged: TokenType.isNull },\r\n    ]\r\n\r\n    constructor() {\r\n        this.correspondingBracket[TokenType.leftBracket] = TokenType.rightBracket;\r\n        this.correspondingBracket[TokenType.leftCurlyBracket] = TokenType.rightCurlyBracket;\r\n        this.correspondingBracket[TokenType.leftSquareBracket] = TokenType.rightSquareBracket;\r\n        this.correspondingBracket[TokenType.rightBracket] = TokenType.leftBracket;\r\n        this.correspondingBracket[TokenType.rightCurlyBracket] = TokenType.leftCurlyBracket;\r\n        this.correspondingBracket[TokenType.rightSquareBracket] = TokenType.leftSquareBracket;\r\n    }\r\n\r\n    lex(input: string): { tokens: TokenList, errors: Error[], bracketError: string } {\r\n\r\n        this.input = input.replace(\"\\u00a0\", \" \");\r\n        this.tokenList = [];\r\n        this.errorList = [];\r\n        this.bracketError = null;\r\n        this.bracketStack = [];\r\n        this.pos = 0;\r\n        this.line = 1;\r\n        this.column = 1;\r\n        this.nonSpaceLastTokenType = null;\r\n        this.nonSpaceLastToken = null;\r\n\r\n\r\n        if (input.length == 0) {\r\n            return { tokens: this.tokenList, errors: this.errorList, bracketError: null };\r\n        }\r\n\r\n        this.currentChar = input.charAt(0);\r\n\r\n        this.nextChar = input.length > 1 ? input.charAt(1) : endChar;\r\n\r\n\r\n        while (this.currentChar != endChar) {\r\n            this.mainState();\r\n        }\r\n\r\n        if (this.bracketStack.length > 0) {\r\n            let bracketOpen = this.bracketStack.pop();\r\n            let bracketClosed = this.correspondingBracket[bracketOpen];\r\n\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[bracketClosed]);\r\n        }\r\n\r\n        return {\r\n            tokens: this.tokenList,\r\n            errors: this.errorList,\r\n            bracketError: this.bracketError\r\n        };\r\n\r\n    }\r\n\r\n    checkClosingBracket(tt: TokenType) {\r\n        if (this.bracketStack.length == 0) {\r\n            let bracketOpen = this.correspondingBracket[tt];\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[tt]);\r\n            return;\r\n        }\r\n        let openBracket = this.bracketStack.pop();\r\n        let correspondingBracket = this.correspondingBracket[openBracket];\r\n        if (tt != correspondingBracket) {\r\n            this.setBracketError(TokenTypeReadable[openBracket] + \" \" + TokenTypeReadable[correspondingBracket]);\r\n        }\r\n    }\r\n\r\n    setBracketError(error: string) {\r\n        if (this.bracketError == null) this.bracketError = error;\r\n    }\r\n\r\n    next() {\r\n        this.pos++;\r\n        this.currentChar = this.nextChar;\r\n        if (this.pos + 1 < this.input.length) {\r\n            this.nextChar = this.input.charAt(this.pos + 1);\r\n        } else {\r\n            this.nextChar = endChar;\r\n        }\r\n        this.column++; // column of current char\r\n    }\r\n\r\n\r\n\r\n    mainState() {\r\n\r\n        let char = this.currentChar;\r\n\r\n        let specialCharToken = specialCharList[char];\r\n\r\n        if (specialCharToken != null) {\r\n            switch (specialCharToken) {\r\n                case TokenType.leftSquareBracket:\r\n                    if (this.nextChar == \"]\") {\r\n                        this.pushToken(TokenType.leftRightSquareBracket, \"[]\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.leftSquareBracket, \"[\");\r\n                        this.bracketStack.push(specialCharToken);\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.division:\r\n                    if (this.nextChar == '*') {\r\n                        this.lexMultilineComment();\r\n                        return;\r\n                    }\r\n                    this.pushToken(TokenType.division, '/');\r\n                    this.next();\r\n                    return;\r\n                case TokenType.pipe:\r\n                    if (this.nextChar == \"|\") {\r\n                        this.pushToken(TokenType.concatenation, '||');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.pipe, '|');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.lower:\r\n                    if (this.nextChar == \">\") {\r\n                        this.pushToken(TokenType.notEqual, '<>');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == \"=\"){\r\n                        this.pushToken(TokenType.lowerOrEqual, '<=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                    else {\r\n                        this.pushToken(TokenType.lower, '<');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.greater:\r\n                    if (this.nextChar == \"=\"){\r\n                        this.pushToken(TokenType.greaterOrEqual, '>=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                    else {\r\n                        this.pushToken(TokenType.greater, '>');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.rightSquareBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.minus:\r\n                    if (this.isDigit(this.nextChar, 10) && !\r\n                        ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.rightBracket].indexOf(this.nonSpaceLastTokenType) >= 0)\r\n                    ) {\r\n                        this.lexNumber();\r\n                        return;\r\n                    } else if (this.nextChar == '-') {\r\n                        this.lexEndofLineComment(\"--\");\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.minus, '-');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.hash:\r\n                    if(this.nonSpaceLastToken == null || this.nonSpaceLastToken.position.line < this.line){\r\n                        this.lexEndofLineComment('#');\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.hash, \"#\");\r\n                        this.next();\r\n                    }\r\n                    break;\r\n                case TokenType.singleQuote:\r\n                    this.lexStringConstant(\"'\");\r\n                    return;\r\n                case TokenType.doubleQuote:\r\n                    this.lexStringConstant('\"');\r\n                    return;\r\n                case TokenType.newline:\r\n                    this.pushToken(TokenType.newline, '\\n');\r\n                    this.line++;\r\n                    this.column = 0;\r\n                    this.next();\r\n                    return;\r\n                case TokenType.space:\r\n                case TokenType.tab:\r\n                    this.lexSpace();\r\n                    return;\r\n                case TokenType.linefeed:\r\n                    this.next();\r\n                    return;\r\n                case TokenType.at:\r\n                    this.lexAnnotation();\r\n                    return;\r\n                case TokenType.identifierQuote:\r\n                    this.lexQuotedIdentifier();\r\n                    return;\r\n                \r\n            }\r\n\r\n            this.pushToken(specialCharToken, char);\r\n            this.next();\r\n            return;\r\n\r\n        }\r\n\r\n        // no special char. Number?\r\n\r\n        if (this.isDigit(char, 10)) {\r\n            this.lexNumber();\r\n            return;\r\n        }\r\n\r\n        this.lexIdentifierOrKeyword();\r\n\r\n    }\r\n\r\n\r\n    lexQuotedIdentifier() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let s: string = \"\";\r\n        this.next();\r\n        while(this.currentChar != '`' && this.currentChar != endChar){\r\n            s += this.currentChar;\r\n            this.next();\r\n        }\r\n        if(this.currentChar == endChar){\r\n            this.pushError(\"Innerhalb eines in `` eingeschlossenen Bezeichners wurde das Ende der Datei erreicht.\", s.length + 1, \"error\", line, column);\r\n        } else {\r\n            this.next(); // skip `\r\n            this.pushToken(TokenType.identifier, s, line, column);\r\n        }\r\n    }\r\n\r\n    pushToken(tt: TokenType, text: string | number | boolean, line: number = this.line, column: number = this.column, length: number = (\"\" + text).length) {\r\n        let t: Token = {\r\n            tt: tt,\r\n            value: text,\r\n            position: {\r\n                column: column,\r\n                line: line,\r\n                length: length\r\n            }\r\n        }\r\n\r\n        for (let tripel of this.tokenTypesToMerge) {\r\n            if (tt == tripel.second && this.nonSpaceLastTokenType == tripel.first) {\r\n                let newLength = column - this.nonSpaceLastToken.position.column + length;\r\n                this.nonSpaceLastToken.tt = tripel.merged;\r\n                this.nonSpaceLastToken.position = { column: this.nonSpaceLastToken.position.column, line: line, length: newLength };\r\n                this.nonSpaceLastToken.value = this.nonSpaceLastToken.value + \" \" + text;\r\n\r\n                this.nonSpaceLastTokenType = tripel.merged;\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (!(this.spaceTokens.indexOf(tt) >= 0)) {\r\n            this.nonSpaceLastTokenType = tt;\r\n            this.nonSpaceLastToken = t;\r\n        }\r\n\r\n        this.tokenList.push(t);\r\n    }\r\n\r\n    pushError(text: string, length: number, errorLevel: ErrorLevel = \"error\", line: number = this.line, column: number = this.column) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: {\r\n                line: line,\r\n                column: column,\r\n                length: length\r\n            },\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n\r\n\r\n    isDigit(a: string, base: number) {\r\n        var charCode = a.charCodeAt(0);\r\n\r\n        if (base == 10) return (charCode >= 48 && charCode <= 57); // 0 - 9\r\n        if (base == 2) return (charCode >= 48 && charCode <= 49); // 0, 1\r\n        if (base == 8) return (charCode >= 48 && charCode <= 55); // 0 - 7\r\n        if (base == 16) return (charCode >= 48 && charCode <= 57) || (charCode >= 97 && charCode <= 102) ||\r\n            (charCode >= 65 && charCode <= 70); // 0 - 9 || a - f || A - F\r\n    }\r\n\r\n    lexSpace() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n\r\n        let posStart = this.pos;\r\n        while (this.currentChar == \" \" || this.currentChar == \"\\t\") {\r\n            this.next();\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n        this.pushToken(TokenType.space, this.input.substring(posStart, posEnd), line, column);\r\n        return;\r\n\r\n    }\r\n\r\n    lexCharacterConstant() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n        this.next();\r\n        let char = this.currentChar;\r\n        if (char == \"\\\\\") {\r\n            let escapeChar = EscapeSequenceList[this.nextChar];\r\n            if (escapeChar == null) {\r\n                this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                if (this.nextChar != \"'\") {\r\n                    char = this.nextChar;\r\n                    this.next();\r\n                }\r\n            } else {\r\n                char = escapeChar;\r\n                this.next();\r\n            }\r\n        }\r\n        this.next();\r\n        if (this.currentChar != \"'\") {\r\n            this.pushError(\"Das Ende der char-Konstante wird erwartet (').\", 1);\r\n        } else {\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.charConstant, char, line, column);\r\n\r\n    }\r\n\r\n    lexStringConstant(beginChar: string) {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let text = \"\";\r\n\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\\\\") {\r\n                let escapeChar = EscapeSequenceList[this.nextChar];\r\n                if (escapeChar == null) {\r\n                    this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                } else {\r\n                    char = escapeChar;\r\n                    this.next();\r\n                }\r\n            } else if (char == beginChar) {\r\n                this.next();\r\n                if(this.currentChar != beginChar){\r\n                    break;\r\n                }\r\n                text += beginChar;\r\n            } else if (char == \"\\n\" || char == endChar) {\r\n                this.pushError('Innerhalb einer String-Konstante wurde das Zeilenende erreicht.', text.length + 1, \"error\", line, column);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        if (beginChar == \"'\") {\r\n            this.pushToken(TokenType.stringConstant, text, line, column, text.length + 2);\r\n        } else {\r\n            this.pushToken(TokenType.identifier, text, line, column, text.length + 2);\r\n            this.tokenList[this.tokenList.length - 1].isDoubleQuotedIdentifier = true;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    lexMultilineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let lastCharWasNewline: boolean = false;\r\n\r\n        let text = \"/*\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"*\" && this.nextChar == \"/\") {\r\n                this.next();\r\n                this.next();\r\n                text += \"*/\";\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                this.pushError(\"Innerhalb eines Mehrzeilenkommentars (/*... */) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            if (char == \"\\n\") {\r\n                this.line++;\r\n                this.column = 0;\r\n                lastCharWasNewline = true;\r\n                text += char;\r\n            } else if (!(lastCharWasNewline && char == \" \")) {\r\n                text += char;\r\n                lastCharWasNewline = false;\r\n            }\r\n\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n    lexEndofLineComment(commentStart: string) {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let text = commentStart;\r\n        for(let i = 0; i < commentStart.length; i++){\r\n            this.next();\r\n        }\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\n\") {\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                // this.pushError(\"Innerhalb eines Einzeilenkommentars (//... ) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n\r\n    lexNumber() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let sign: number = 1;\r\n        if (this.currentChar == '-') {\r\n            sign = -1;\r\n            this.next();\r\n        }\r\n\r\n        let posStart = this.pos;\r\n\r\n        let firstChar = this.currentChar;\r\n\r\n        this.next();\r\n\r\n        let radix: number = 10;\r\n\r\n        if (firstChar == '0' && (['b', 'x', '0', '1', '2', '3', '4', '5', '6', '7'].indexOf(this.currentChar) >= 0)) {\r\n            if (this.currentChar == 'x') {\r\n                radix = 16;\r\n                this.next();\r\n            } else if (this.currentChar == 'b') {\r\n                radix = 2;\r\n                this.next();\r\n            } else radix = 8;\r\n            posStart = this.pos;\r\n        }\r\n\r\n        while (this.isDigit(this.currentChar, radix)) {\r\n            this.next();\r\n        }\r\n\r\n        let tt = TokenType.integerConstant;\r\n\r\n        if (this.currentChar == \".\") {\r\n            tt = TokenType.floatingPointConstant;\r\n\r\n            this.next();\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n\r\n        }\r\n\r\n        let base = this.input.substring(posStart, this.pos);\r\n\r\n        posStart = this.pos;\r\n        let exponent: number = 0;\r\n\r\n        let hasExponential: boolean = false;\r\n        //@ts-ignore\r\n        if (this.currentChar == \"e\") {\r\n            hasExponential = true;\r\n            this.next();\r\n            let posExponentStart: number = this.pos;\r\n\r\n            //@ts-ignore\r\n            if (this.currentChar == '-') {\r\n                this.next();\r\n            }\r\n\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n            let exponentString = this.input.substring(posExponentStart, this.pos);\r\n            exponent = Number.parseInt(exponentString);\r\n        }\r\n\r\n        if (this.currentChar == 'd' || this.currentChar == 'f') {\r\n            tt == TokenType.floatingPointConstant;\r\n            this.next();\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n        }\r\n\r\n        let value: number = (tt == TokenType.integerConstant) ? Number.parseInt(base, radix) : Number.parseFloat(base);\r\n        value *= sign;\r\n        if (exponent != 0) value *= Math.pow(10, exponent);\r\n\r\n        this.pushToken(tt, value, line, column);\r\n\r\n    }\r\n\r\n    lexAnnotation() {\r\n        let line = this.line;\r\n        let column = this.column - 1;\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n        this.next(); // skip@\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n        this.pushToken(TokenType.at, text, line, column, text.length + 1);\r\n    }\r\n\r\n    lexIdentifierOrKeyword() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n\r\n        let tt = keywordList[text.toLowerCase()];\r\n        if (tt != null && typeof tt == \"number\") {\r\n\r\n            switch (tt) {\r\n                case TokenType.true:\r\n                    this.pushToken(TokenType.booleanConstant, true, line, column);\r\n                    break;\r\n                case TokenType.false:\r\n                    this.pushToken(TokenType.booleanConstant, false, line, column);\r\n                    break;\r\n                default:\r\n                    this.pushToken(tt, text, line, column);\r\n                    break;\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        this.pushToken(TokenType.identifier, text, line, column);\r\n\r\n    }\r\n\r\n    isSpace(char: string): boolean {\r\n        return char == \" \" || char == \"\\n\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport function errorListToString(errorList: Error[]): string {\r\n    let s = \"\";\r\n\r\n    for (let error of errorList) {\r\n\r\n        s += \"Z \" + error.position.line + \", S \" + error.position.column + \": \";\r\n        s += error.text + \"<br>\";\r\n\r\n    }\r\n\r\n    return s;\r\n}","import { Lexer } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Token, TokenList, TokenType, tokenListToString } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class Formatter implements monaco.languages.DocumentFormattingEditProvider,\r\n    monaco.languages.OnTypeFormattingEditProvider {\r\n\r\n    autoFormatTriggerCharacters: string[] = ['\\n'];\r\n\r\n    displayName?: string = \"Java-Autoformat\";\r\n\r\n\r\n    constructor(\r\n        // private main: Main\r\n    ) {\r\n\r\n    }\r\n\r\n    init() {\r\n        monaco.languages.registerDocumentFormattingEditProvider('myJava', this);\r\n        monaco.languages.registerOnTypeFormattingEditProvider('myJava', this);\r\n    }\r\n\r\n    provideOnTypeFormattingEdits(model: monaco.editor.ITextModel, position: monaco.Position, ch: string, options: monaco.languages.FormattingOptions, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n    deleteOverlappingRanges(edits: monaco.languages.TextEdit[]) {\r\n        for (let i = 0; i < edits.length - 1; i++) {\r\n            let e = edits[i];\r\n            let e1 = edits[i + 1];\r\n            if (e.range.endLineNumber < e1.range.startLineNumber) continue;\r\n            if (e.range.endLineNumber == e1.range.startLineNumber) {\r\n                if (e.range.endColumn >= e1.range.startColumn) {\r\n                    edits.splice(i + 1, 1);\r\n                } else {\r\n                    if (e.range.endColumn == 0 && e.text.length > 0 && e1.range.startColumn == 1 && e1.range.endColumn > e1.range.startColumn && e1.text == \"\") {\r\n                        let delta = e.text.length - (e1.range.endColumn - e1.range.startColumn);\r\n                        if (delta > 0) { \r\n                            e.text = e.text.substr(0, delta);\r\n                            edits.splice(i+1, 1);\r\n                        }\r\n                        else if (delta < 0)\r\n                        { \r\n                            //@ts-ignore\r\n                            e1.range.endColumn = e1.range.startColumn - delta;\r\n                            edits.splice(i, 1);\r\n                            i--;\r\n\r\n                         }\r\n                        else {\r\n                            edits.splice(i, 2);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    provideDocumentFormattingEdits(model: monaco.editor.ITextModel,\r\n        options: monaco.languages.FormattingOptions,\r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n\r\n    format(model: monaco.editor.ITextModel): monaco.languages.TextEdit[] {\r\n\r\n        let edits: monaco.languages.TextEdit[] = [];\r\n\r\n        // if (this.main.currentWorkspace == null || this.main.currentWorkspace.currentlyOpenModule == null) {\r\n        //     return [];\r\n        // }\r\n\r\n        // let text = this.main.monaco_editor.getValue({ preserveBOM: false, lineEnding: \"\\n\" });\r\n\r\n        let text = model.getValue(monaco.editor.EndOfLinePreference.LF);\r\n\r\n        let tokenlist = new Lexer().lex(text).tokens;\r\n\r\n        // let tokenlist = this.main.currentWorkspace.currentlyOpenModule.tokenList;\r\n\r\n        if (tokenlist == null) return [];\r\n\r\n        // TODO:\r\n        // { at the end of line, with one space before; followed only by spaces and \\n\r\n        // indent lines according to { and }\r\n        // Beware: int i[] = { ... }\r\n        // exactly one space before/after binary operators\r\n        // no space after ( and no space before )\r\n        // (   ) -> ()\r\n        // (  ()) -> (())\r\n        // (()  ) -> (())\r\n\r\n        let lastNonSpaceToken: Token = null;\r\n        let indentLevel = 0;\r\n        let tabSize = 3;\r\n        let curlyBracesOpenAtLines: number[] = [];\r\n        let indentLevelAtSwitchStatements: number[] = [];\r\n        let switchHappend: boolean = false;\r\n        let lastTokenWasNewLine: number = 0;\r\n        let roundBracketsOpen: number = 0;\r\n\r\n        for (let i = 0; i < tokenlist.length; i++) {\r\n\r\n            let t = tokenlist[i];\r\n            lastTokenWasNewLine--;\r\n\r\n            switch (t.tt) {\r\n\r\n                case TokenType.leftCurlyBracket:\r\n                    if (switchHappend) {\r\n                        switchHappend = false;\r\n                        indentLevelAtSwitchStatements.push(indentLevel + 2);\r\n                        indentLevel++;\r\n                    }\r\n                    indentLevel++;\r\n                    curlyBracesOpenAtLines.push(t.position.line);\r\n                    if (lastNonSpaceToken != null) {\r\n                        let tt = lastNonSpaceToken.tt;\r\n                        if (tt == TokenType.rightBracket || tt == TokenType.identifier || tt == TokenType.leftRightSquareBracket) {\r\n                            this.replaceBetween(lastNonSpaceToken, t, edits, \" \");\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let token1 = tokenlist[i + 1];\r\n                        if (token1.tt != TokenType.newline && token1.tt != TokenType.space) {\r\n                            this.insertSpaces(edits, token1.position.line, token1.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    if (indentLevelAtSwitchStatements[indentLevelAtSwitchStatements.length - 1] == indentLevel) {\r\n                        indentLevelAtSwitchStatements.pop();\r\n                        indentLevel--;\r\n                        // if(t.position.column >= 3){\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                        // }    \r\n                    }\r\n                    indentLevel--;\r\n                    let openedAtLine = curlyBracesOpenAtLines.pop();\r\n                    if (openedAtLine != null && openedAtLine != t.position.line) {\r\n                        if (lastNonSpaceToken != null && lastNonSpaceToken.position.line == t.position.line) {\r\n                            this.replace(edits, t.position, t.position, \"\\n\" + \" \".repeat(indentLevel * tabSize));\r\n                        }\r\n                    } else {\r\n                        if (i > 0) {\r\n                            let token1 = tokenlist[i - 1];\r\n                            if (token1.tt != TokenType.space && token1.tt != TokenType.newline) {\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    roundBracketsOpen++;\r\n                    if (i < tokenlist.length - 2) {\r\n                        let nextToken1 = tokenlist[i + 1];\r\n                        let nextToken2 = tokenlist[i + 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                            i++;\r\n                            if (nextToken2.tt == TokenType.rightBracket) {\r\n                                i++;\r\n                                roundBracketsOpen--;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt == TokenType.space && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line, lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    roundBracketsOpen--;\r\n                    if (i > 1) {\r\n                        let nextToken1 = tokenlist[i - 1];\r\n                        let nextToken2 = tokenlist[i - 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.newline:\r\n                    lastTokenWasNewLine = 2;\r\n                    if (i < tokenlist.length - 2) {\r\n\r\n                        let lastTokenIsOperator = this.isBinaryOperator(lastNonSpaceToken?.tt);\r\n                        let nextTokenIsOperator = this.isBinaryOperator(this.getNextNonSpaceToken(i, tokenlist).tt);\r\n\r\n                        let beginNextLine = tokenlist[i + 1];\r\n                        let token2 = tokenlist[i + 2];\r\n                        let currentIndentation = 0;\r\n\r\n                        if (beginNextLine.tt == TokenType.newline) {\r\n                            break;\r\n                        }\r\n\r\n                        let delta: number = 0;\r\n                        if (beginNextLine.tt == TokenType.space) {\r\n                            if (token2.tt == TokenType.newline) {\r\n                                break;\r\n                            }\r\n                            currentIndentation = beginNextLine.position.length;\r\n                            i++;\r\n                            if (token2.tt == TokenType.rightCurlyBracket) {\r\n                                delta = -1;\r\n                            }\r\n                        }\r\n\r\n                        if (beginNextLine.tt == TokenType.rightCurlyBracket) {\r\n                            delta = -1;\r\n                            // indentLevel--;\r\n                            // curlyBracesOpenAtLines.pop();\r\n                            // lastNonSpaceToken = beginNextLine;\r\n                            // i++;\r\n                        }\r\n\r\n                        if(nextTokenIsOperator || lastTokenIsOperator) delta = 1;\r\n\r\n                        let il = indentLevel + delta;\r\n                        if(roundBracketsOpen > 0){\r\n                            il++;\r\n                        }\r\n                        if (il < 0) il = 0;\r\n\r\n                        let correctIndentation = il * tabSize;\r\n\r\n                        if (correctIndentation > currentIndentation) {\r\n                            this.insertSpaces(edits, t.position.line + 1, 0, correctIndentation - currentIndentation);\r\n                        } else if (correctIndentation < currentIndentation) {\r\n                            this.deleteSpaces(edits, t.position.line + 1, 0, currentIndentation - correctIndentation);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.space:\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment) {\r\n                            if (i > 0) {\r\n                                let lastToken = tokenlist[i - 1];\r\n                                if (lastToken.tt != TokenType.newline) {\r\n                                    if (t.position.length > 1) {\r\n                                        this.deleteSpaces(edits, t.position.line, t.position.column, t.position.length - 1);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.comma:\r\n                case TokenType.semicolon:\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt != TokenType.newline && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.tt == TokenType.space && lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line,\r\n                                    lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment && nextToken.tt != TokenType.space && nextToken.tt != TokenType.newline) {\r\n                            this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightSquareBracket:\r\n                    if (lastNonSpaceToken != null && lastNonSpaceToken.tt == TokenType.leftSquareBracket) {\r\n                        this.replaceBetween(lastNonSpaceToken, t, edits, \"\");\r\n\r\n                    }\r\n                    break;\r\n\r\n            }\r\n\r\n            // binary operator?\r\n            if (this.isBinaryOperator(t.tt)) {\r\n\r\n                let lowerGeneric = t.tt == TokenType.lower && this.lowerBelongsToGenericExpression(i, tokenlist);\r\n                let greaterGeneric = t.tt == TokenType.greater && this.greaterBelongsToGenericExpression(i, tokenlist);\r\n\r\n                if (lastTokenWasNewLine <= 0 && lastNonSpaceToken != null && [TokenType.leftBracket, TokenType.comma].indexOf(lastNonSpaceToken.tt) < 0) {\r\n\r\n                    if (i > 0) {\r\n                        let tokenBefore = tokenlist[i - 1];\r\n                        let spaces = (lowerGeneric || greaterGeneric) ? 0 : 1;\r\n                        if (tokenBefore.tt == TokenType.space) {\r\n                            if (tokenBefore.position.length != spaces) {\r\n                                this.insertSpaces(edits, tokenBefore.position.line,\r\n                                    tokenBefore.position.column, spaces - tokenBefore.position.length);\r\n                            }\r\n                        } else {\r\n                            if (spaces == 1)\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        let spaces = (lowerGeneric) ? 0 : 1;\r\n                        if (nextToken.tt == TokenType.space) {\r\n                            if (greaterGeneric && i < tokenlist.length - 2 && tokenlist[i + 2].tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (nextToken.position.length != spaces) {\r\n                                this.insertSpaces(edits, nextToken.position.line,\r\n                                    nextToken.position.column, spaces - nextToken.position.length);\r\n                            }\r\n                        } else {\r\n                            if (greaterGeneric && nextToken.tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (spaces == 1) this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            if (t.tt != TokenType.space && t.tt != TokenType.newline) {\r\n                lastNonSpaceToken = t;\r\n            }\r\n\r\n        }\r\n\r\n        this.deleteOverlappingRanges(edits);\r\n\r\n        return edits;\r\n\r\n    }\r\n    getNextNonSpaceToken(currentIndex: number, tokenlist: TokenList):  Token {\r\n\r\n        if(currentIndex == tokenlist.length - 1) return tokenlist[currentIndex];\r\n\r\n        let j = currentIndex + 1;\r\n        while(j < tokenlist.length - 1 && (tokenlist[j].tt == TokenType.space )){\r\n            j++;\r\n        }\r\n        return tokenlist[j];\r\n\r\n    }\r\n\r\n    lowerBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position + 1;\r\n        while (i < tokenlist.length) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.greater) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i++;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    greaterBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position - 1;\r\n        while (i >= 0) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.lower) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i--;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isBinaryOperator(token: TokenType) {\r\n        return token != null && token >= TokenType.modulo && token <= TokenType.equal;\r\n    }\r\n\r\n    private replaceBetween(lastNonSpaceToken: Token, t: Token, edits: monaco.languages.TextEdit[], text: string) {\r\n        let positionFrom = {\r\n            line: lastNonSpaceToken.position.line,\r\n            column: lastNonSpaceToken.position.column + lastNonSpaceToken.position.length\r\n        };\r\n        let positionTo = {\r\n            line: t.position.line,\r\n            column: t.position.column\r\n        };\r\n        if (positionFrom.line != positionTo.line ||\r\n            positionTo.column - positionFrom.column != text.length) {\r\n            this.replace(edits, positionFrom, positionTo, text);\r\n        }\r\n    }\r\n\r\n    deleteSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column + numberOfSpaces + (column == 0 ? 1 : 0),\r\n                endLineNumber: line\r\n            },\r\n            text: \"\"\r\n        });\r\n    }\r\n\r\n    insertSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n\r\n        if (numberOfSpaces < 0) {\r\n            this.deleteSpaces(edits, line, column, -numberOfSpaces);\r\n            return;\r\n        }\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column,\r\n                endLineNumber: line\r\n            },\r\n            text: \" \".repeat(numberOfSpaces)\r\n        });\r\n    }\r\n\r\n    replace(edits: monaco.languages.TextEdit[], positionFrom: { line: number; column: number; }, positionTo: { line: number; column: number; }, text: string) {\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: positionFrom.column,\r\n                startLineNumber: positionFrom.line,\r\n                endColumn: positionTo.column,\r\n                endLineNumber: positionTo.line\r\n            },\r\n            text: text\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\n\r\nexport type Theme = {\r\n    name: string,\r\n    monacoTheme: string,\r\n    cssColors: { [color: string]: string }\r\n}\r\n\r\nexport class ThemeManager {\r\n\r\n    themes: Theme[] = [];\r\n\r\n    constructor() {\r\n        this.initThemes();\r\n    }\r\n\r\n    switchTheme(name: string) {\r\n        for (let theme of this.themes) {\r\n            if (theme.name == name) {\r\n                this.internalSwitchTheme(theme);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    \r\n    private internalSwitchTheme(theme: Theme) {\r\n        monaco.editor.setTheme(theme.monacoTheme);\r\n\r\n        let root = document.documentElement;\r\n        for (const key of Object.keys(theme.cssColors)) {\r\n            const value = theme.cssColors[key]\r\n\r\n            root.style.setProperty(key, value);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    initThemes() {\r\n\r\n        this.themes.push({\r\n            name: \"dark\",\r\n            monacoTheme: \"myCustomThemeDark\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"#1e1e1e\",\r\n                \"--backgroundLight\": \"#252526\",\r\n                \"--backgroundHeading\": \"#37373d\",\r\n                \"--backgroundSelected\": \"#2a2d2e\",\r\n                \"--fontColorNormal\": \"#c2cccc\",\r\n                \"--fontColorLight\": \"#e7e7e7\",\r\n                \"--slider\": \"#414141\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#1e1e1e\",\r\n                \"--scrollbar-thumb\": \"#3e3e3e\",\r\n                \"--scrollbar-thumb-hover\": \"#5e5e5e\",\r\n                \"--scrollbar-thumb-active\": \"#7e7e7e\",\r\n                \"--submenu-hover\": \"#094771\",\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#616162\",\r\n                \"--file-hover\": \"hsla(0, 0%, 38%, 0.125)\",\r\n                \"--file-active\": \"#094771\",\r\n                \"--file-active-hover\": \"rgba(9, 71, 113, 0.827)\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"blue\",\r\n                \"--contextmenu-background\": \"#3c3c3c\",\r\n                \"--contextmenu-color\": \"rgb(212,212,212)\",\r\n                \"--contextmenu-hover-background\": \"#094771\",\r\n                \"--contextmenu-hover-color\": \"#ffffff\",\r\n                \"--error-filename\": \"#2a709e\",\r\n                \"--error-line-ative\": \"#094771\",\r\n                \"--error-line-hover\": \"rgba(96, 96, 96, 0.125)\",\r\n                \"--error-position\": \"#c0802d\",\r\n                \"--linecolumn\": \"#14c714\",\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#2b2b7d2f\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"rgb(85,85,85)\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#383838\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#252526\",\r\n                \"--editorTooltip-border\": \"#454545\",\r\n\r\n                \"--renameInput-color\": \"#ffffff\",\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"white\",\r\n                \"--bottomdiv-tabheading-active\": \"rgb(97,97,255)\",\r\n                \"--noErrorMessage\": \"rgb(37, 211, 37)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"#1e1e1e\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"white\",\r\n                \"--consoleEntryIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"white\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 51, 51)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--deValue\": \"white\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#383838\",\r\n                \"--helper-border-color\": \"#d4d4d4\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#ffffff\",\r\n                \"--runInputColor\": \"#ffffff\",\r\n                \"--runBackgroundColor\": \"rgba(255, 255, 255, 0.2)\",\r\n\r\n                // table\r\n                \"--table-even\": \"#222\", /*#d1d2e4*/\r\n                \"--table-heading\": \"#202060\", /*#c3f2b9*/\r\n\r\n\r\n            }\r\n        });\r\n\r\n        let highlightColor = \"#8080ff\";\r\n\r\n        this.themes.push({\r\n            name: \"light\",\r\n            monacoTheme: \"myCustomThemeLight\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"white\",\r\n                \"--backgroundLight\": \"#f3f3f3\",\r\n                \"--backgroundHeading\": \"#dcdcdc\",\r\n                \"--backgroundSelected\": \"#e8e8e8\",\r\n                \"--fontColorNormal\": \"#000\",\r\n                \"--fontColorLight\": \"#303030\",\r\n                \"--slider\": \"#b0b0b0\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#e3e3e3\",\r\n                \"--scrollbar-thumb\": \"#bababa\",\r\n                \"--scrollbar-thumb-hover\": \"#8e8e8e\",\r\n                \"--scrollbar-thumb-active\": \"#616161\",\r\n                \"--submenu-hover\": highlightColor,\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#cfcfcf\",\r\n                \"--file-hover\": \"#e8e8e8\",\r\n                \"--file-active\": highlightColor,\r\n                \"--file-active-hover\": \"#a0a0ff\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"white\",\r\n                \"--contextmenu-background\": \"white\",\r\n                \"--contextmenu-color\": \"#756161\",\r\n                \"--contextmenu-hover-background\": highlightColor,\r\n                \"--contextmenu-hover-color\": \"#a0a0ff\",\r\n                \"--error-filename\": \"#ff0000\",\r\n                \"--error-line-ative\": \"#ffa0a0\",\r\n                \"--error-line-hover\": \"#ffc0c0\",\r\n                \"--error-position\": \"#804040\",\r\n                \"--linecolumn\": \"#14c714\", // TODO\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#babaec80\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"#c0c0c0\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#e0e0e0\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#e0e0e0\",\r\n                \"--editorTooltip-border\": \"#9d9d9d\",\r\n\r\n                \"--renameInput-color\": \"#000000\",\r\n\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"#424242\",\r\n                \"--bottomdiv-tabheading-active\": \"#424242\",\r\n                \"--noErrorMessage\": \"rgb(17, 180, 17)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"white\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"#0000a0\",\r\n                \"--consoleEntryIdentifier\": \"black\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"#756161\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 21, 21)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"black\",\r\n                \"--deValue\": \"#0000a0\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#f3f3f3\",\r\n                \"--helper-border-color\": \"#606060\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#303030\",\r\n                \"--runInputColor\": \"#000000\",\r\n                \"--runBackgroundColor\": \"rgba(0, 0, 0, 0.2)\",\r\n\r\n                // table\r\n                \"--table-even\": \"#d1d2e4\", /*#d1d2e4*/\r\n                \"--table-heading\": \"#c3f2b9\", /*#c3f2b9*/\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { TokenType } from \"../lexer/Token.js\";\r\n\r\ntype CheckFunction = (columnIdentifier: string, parameterValues: number[]) => string;\r\ntype OutputFunction = (value: any, parameterValues: number[]) => string;\r\n\r\nexport abstract class SQLType {\r\n\r\n    abstract canCastTo(type2: SQLType): boolean;\r\n\r\n    abstract getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType;\r\n\r\n    abstract getUnaryResultType(operator: TokenType): SQLType;\r\n\r\n    abstract getBinaryResult(operator: TokenType, value1: any, value2: any): any;\r\n\r\n    abstract toString(): string;\r\n\r\n    abstract getBaseTypeName(): string;\r\n\r\n}\r\n\r\nexport class SQLBaseType extends SQLType {\r\n    // Map<tokenType, Map<SecondType, ResultType>>\r\n    binaryResultTypes: Map<TokenType, Map<SQLBaseType, SQLBaseType>> = new Map();\r\n\r\n    unaryOperators: TokenType[] = [];\r\n\r\n    static baseTypes: SQLBaseType[] = [];\r\n    static baseTypeMap: Map<string, SQLBaseType> = new Map();\r\n\r\n    public canCastToList: string[];\r\n\r\n    constructor(public name: string, public parameterDescriptions: string[],\r\n        public checkFunction: CheckFunction, public outputFunction: OutputFunction, canCastToList: string[]) {\r\n        super();\r\n        this.canCastToList = canCastToList.slice(0);\r\n        let ownIndex = this.canCastToList.indexOf(name);\r\n        if(ownIndex >= 0) this.canCastToList.splice(ownIndex, 1);\r\n    }\r\n\r\n    static fromConstantType(tt: TokenType): SQLBaseType {\r\n        switch (tt) {\r\n            case TokenType.stringConstant:\r\n                return this.baseTypeMap.get(\"text\");\r\n            case TokenType.integerConstant:\r\n                return this.baseTypeMap.get(\"integer\");\r\n            case TokenType.floatingPointConstant:\r\n                return this.baseTypeMap.get(\"float\");\r\n            case TokenType.charConstant:\r\n                return this.baseTypeMap.get(\"text\");\r\n            case TokenType.booleanConstant:\r\n                return this.baseTypeMap.get(\"boolean\");\r\n            case TokenType.keywordNull:\r\n                return this.baseTypeMap.get(\"null\");\r\n        \r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    getBaseTypeName(): string {\r\n        return this.name;\r\n    }\r\n\r\n    toString(): string {\r\n        return this.name;\r\n    }\r\n\r\n    static getBaseType(name: string) {\r\n        if(name != null && name.toLocaleLowerCase() == 'char'){\r\n            name = 'varchar';\r\n            \r\n        } \r\n        return this.baseTypeMap.get(name.toLocaleLowerCase());\r\n    }\r\n\r\n    static addBaseTypes(baseTypes: SQLBaseType[]) {\r\n        SQLBaseType.baseTypes = SQLBaseType.baseTypes.concat(baseTypes);\r\n        baseTypes.forEach(t => SQLBaseType.baseTypeMap.set(t.name, t));\r\n    }\r\n\r\n    addBinaryOperation(tokenType: TokenType | TokenType[], secondType: SQLBaseType, resultType: SQLBaseType, isCommutative: boolean = true) {\r\n\r\n        if (!Array.isArray(tokenType)) tokenType = [tokenType];\r\n\r\n        tokenType.forEach(t => {\r\n            let map: Map<SQLBaseType, SQLBaseType> = this.binaryResultTypes.get(t);\r\n            if (map == null) {\r\n                map = new Map();\r\n                this.binaryResultTypes.set(t, map);\r\n            }\r\n            map.set(secondType, resultType);\r\n            if (isCommutative && secondType != this) {\r\n                secondType.addBinaryOperation(t, this, resultType, false);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    canCastTo(type2: SQLType): boolean {\r\n\r\n        let bt2: SQLBaseType = type2 instanceof SQLBaseType ? type2 : type2[\"baseType\"];\r\n\r\n        return this.canCastToList.indexOf(bt2.name) >= 0 || this.name == bt2.name;\r\n\r\n    }\r\n\r\n    getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType {\r\n\r\n\r\n        let map = this.binaryResultTypes.get(operator);\r\n        if (map == null) return null;\r\n\r\n        let bt2: SQLBaseType = secondType instanceof SQLBaseType ? secondType : secondType[\"baseType\"];\r\n\r\n        return map.get(bt2);\r\n\r\n    }\r\n\r\n    getUnaryResultType(operator: TokenType): SQLType {\r\n        if([TokenType.isNull, TokenType.isNotNull].indexOf(operator) >= 0) return booleanType;\r\n        if(this.unaryOperators.indexOf(operator)>= 0) return this;\r\n    }\r\n\r\n    getBinaryResult(operator: TokenType, value1: any, value2: any): any {\r\n        switch (operator) {\r\n            case TokenType.concatenation:\r\n                if (value1 != null && value2 != null) return value1 + value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.plus:\r\n                if (value1 != null && value2 != null) return value1 + value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.minus:\r\n                if (value1 != null && value2 != null) return value1 - value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.multiplication:\r\n                if (value1 != null && value2 != null) return value1 * value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.division:\r\n                if (value1 != null && value2 != null) return value1 * value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.keywordAnd:\r\n                if (value1 != null && value2 != null) return value1 * value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.keywordOr:\r\n                if (value1 != null && value2 != null) return Math.max(value1, value2);\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.lower:\r\n                if (value1 != null && value2 != null) return value1 < value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.greater:\r\n                if (value1 != null && value2 != null) return value1 >= value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.lowerOrEqual:\r\n                if (value1 != null && value2 != null) return value1 <= value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.greaterOrEqual:\r\n                if (value1 != null && value2 != null) return value1 >= value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.equal:\r\n                return value1 == value2;\r\n            case TokenType.notEqual:\r\n                return value1 != value2;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nlet tens: number[] = [1, 10, 100, 1000, 100000, 100000, 1000000, 10000000, 100000000, 1000000000];\r\n\r\nexport class SQLDerivedType extends SQLType {\r\n\r\n    name: string;\r\n\r\n    constructor(public baseType: SQLBaseType, public parameterValues: number[]) {\r\n        super();\r\n        let parameters = parameterValues.join(\", \");\r\n        this.name = baseType.name + \"(\" + parameters + \")\";\r\n    }\r\n\r\n    toString(): string {\r\n        return this.name;\r\n    }\r\n\r\n    getBaseTypeName(): string {\r\n        return this.baseType.name;\r\n    }\r\n\r\n\r\n    canCastTo(type2: SQLType): boolean {\r\n\r\n        let bt2: SQLBaseType = type2 instanceof SQLBaseType ? type2 : type2[\"baseType\"];\r\n\r\n        return this.baseType.canCastToList.indexOf(bt2.name) >= 0 || this.baseType.name == bt2.name;\r\n\r\n    }\r\n\r\n    getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType {\r\n\r\n\r\n        let map = this.baseType.binaryResultTypes.get(operator);\r\n        if (map == null) return null;\r\n\r\n        let bt2: SQLBaseType = secondType instanceof SQLBaseType ? secondType : secondType[\"baseType\"];\r\n\r\n        let returnBaseType = map.get(bt2);\r\n\r\n        if (this.baseType == bt2 && this.baseType == returnBaseType && secondType instanceof SQLDerivedType) {\r\n            if (this.baseType.name == \"varchar\" || operator == TokenType.concatenation) {\r\n                return new SQLDerivedType(this.baseType, [this.parameterValues[0] + secondType.parameterValues[0]]);\r\n            }\r\n            if (this.baseType.name == \"decimal\") {\r\n                return new SQLDerivedType(this.baseType, [Math.max(this.parameterValues[0], secondType.parameterValues[0]), Math.max(this.parameterValues[1], secondType.parameterValues[1])]);\r\n            }\r\n        }\r\n\r\n        return map.get(bt2);\r\n\r\n    }\r\n\r\n    getUnaryResultType(operator: TokenType): SQLType {\r\n        return this.baseType.getUnaryResultType(operator);\r\n    }\r\n\r\n    getBinaryResult(operator: TokenType, value1: any, value2: any): any {\r\n        let result = this.baseType.getBinaryResult(operator, value1, value2);\r\n        if (this.name = \"varchar\") return result == null ? null : (\"\" + result).substr(0, this.parameterValues[0]);\r\n        if (this.name == \"decimal\") {\r\n            if (result == null) return null;\r\n            return Math.round(result * tens[this.parameterValues[1]]) / tens[this.parameterValues[1]];\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nlet textTypes = [\"varchar\", \"char\", \"text\" ,\"tinytext\", \"mediumtext\", \"longtext\"];\r\n\r\nvar varcharType = new SQLBaseType(\"varchar\", [\"Maximale Länge\"], (ci, pv) => `check(length(${ci}) <= ${Math.max(pv[0], 1)})`,\r\n    (v: string, pv) => v.substring(0, Math.max(pv[0], 1)), textTypes);\r\n    \r\nvar charType = new SQLBaseType(\"char\", [\"Maximale Länge\"], (ci, pv) => `check(length(${ci}) <= ${Math.max(pv[0], 1)})`,\r\n    (v: string, pv) => v.substring(0, Math.max(pv[0], 1)), textTypes);\r\n\r\nvar textType = new SQLBaseType(\"text\", [\"Maximale Länge\"], (ci, pv) => \"\", (v: string, pv) => v, textTypes.concat([\"time\", \"date\", \"datetime\", \"timestamp\"]));\r\nvar tinyTextType = new SQLBaseType(\"tinyText\", [], (ci, pv) => \"\", (v: string, pv) => v, textTypes);\r\nvar mediumTextType = new SQLBaseType(\"mediumText\", [], (ci, pv) => \"\", (v: string, pv) => v, textTypes);\r\nvar longTextType = new SQLBaseType(\"longText\", [], (ci, pv) => \"\", (v: string, pv) => v, textTypes);\r\n\r\nlet floatTypes = [\"decimal\", \"numeric\", \"double\", \"real\", \"float\"];\r\n\r\nvar decimalType = new SQLBaseType(\"decimal\", [\"Gesamtzahl der Stellen\", \"Nachkommastellen\"], (ci, pv) => \"\",\r\n    (v: number, pv) => { let vk = Math.trunc(v); let nk = v - vk; return \"\" + vk + (pv[1] > 0 ? \".\" + Math.round(nk * tens[pv[1]]) : \"\") },\r\n    floatTypes);\r\nvar numericType = new SQLBaseType(\"numeric\", [\"Gesamtzahl der Stellen\", \"Nachkommastellen\"], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\nvar doubleType = new SQLBaseType(\"double\", [\"Gesamtzahl der Stellen\", \"Nachkommastellen\"], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\nvar realType = new SQLBaseType(\"real\", [], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\nvar floatType = new SQLBaseType(\"float\", [], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\n\r\nlet inttypes = [\"int\", \"integer\", \"tinyint\", \"smallint\", \"mediumint\", \"bigint\"];\r\nlet numberTypes = inttypes.concat(floatTypes);\r\n\r\nvar intType = new SQLBaseType(\"int\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar integerType = new SQLBaseType(\"integer\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar tinyIntType = new SQLBaseType(\"tinyint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar smallIntType = new SQLBaseType(\"smallint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar mediumIntType = new SQLBaseType(\"mediumint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar bigIntType = new SQLBaseType(\"bigint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\n\r\nvar timeType = new SQLBaseType(\"time\", [], (ci, pv) => `check(isTime(${ci}))`, (v: string, pv) => v, []);\r\nvar dateType = new SQLBaseType(\"date\", [], (ci, pv) => `check(isDate(${ci}))`, (v: string, pv) => v, []);\r\nvar dateTimeType = new SQLBaseType(\"datetime\", [], (ci, pv) => `check(isDateTime(${ci}))`, (v: string, pv) => v, [\"timestamp\"]);\r\nvar timestampType = new SQLBaseType(\"timestamp\", [], (ci, pv) => `check(isDateTime(${ci}))`, (v: string, pv) => v, [\"datetime\"]);\r\n\r\n\r\nvar booleanType = new SQLBaseType(\"boolean\", [], (ci, pv) => `check(${ci} == 0 or ${ci} == 1)`, (v, pv) => v == 1 ? \"true\" : \"false\",\r\n    [\"varchar\", \"text\", \"decimal\", \"numeric\"]);\r\n\r\nvar nullType = new SQLBaseType(\"null\", [], (ci, pv) => \"\", (v, pv) => v,\r\n    []);\r\n\r\nlet numericTypes = [decimalType, numericType, doubleType, realType, floatType, intType, integerType, tinyIntType, smallIntType, mediumIntType, bigIntType];\r\n\r\nlet baseTypes = [varcharType, charType, textType, tinyTextType, mediumTextType, longTextType,\r\n    timeType, dateType, dateTimeType, timestampType, booleanType, nullType].concat(numericTypes);\r\n\r\nlet timeTypes = [timeType, dateType, dateTimeType, timestampType];\r\n\r\nSQLBaseType.addBaseTypes(baseTypes);\r\n\r\nvarcharType.addBinaryOperation(TokenType.concatenation, varcharType, varcharType);\r\nvarcharType.addBinaryOperation(TokenType.concatenation, charType, varcharType);\r\nvarcharType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\ntextType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\nvarcharType.addBinaryOperation(TokenType.keywordLike, varcharType, booleanType);\r\nvarcharType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\ntextType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\n\r\ncharType.addBinaryOperation(TokenType.concatenation, charType, charType);\r\ncharType.addBinaryOperation(TokenType.concatenation, varcharType, charType);\r\ncharType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\ntextType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\ncharType.addBinaryOperation(TokenType.keywordLike, charType, booleanType);\r\ncharType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\ntextType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\n\r\nlet numericBinaryOperators: TokenType[] = [TokenType.plus, TokenType.minus, TokenType.multiplication, TokenType.division, TokenType.modulo];\r\nlet comparisonOperators: TokenType[] = [TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual];\r\n\r\nfor (let i = 0; i < numericTypes.length; i++) {\r\n    for (let j = i; j < numericTypes.length; j++) {\r\n        numericTypes[i].addBinaryOperation(numericBinaryOperators, numericTypes[j], numericTypes[j]);\r\n        numericTypes[i].addBinaryOperation(comparisonOperators, numericTypes[j], booleanType);\r\n    }\r\n    numericTypes[i].unaryOperators = [TokenType.minus];\r\n}\r\n\r\ndecimalType.addBinaryOperation(numericBinaryOperators, decimalType, decimalType);\r\n\r\nlet characterTypes = [varcharType, textType];\r\nfor (let i = 0; i < characterTypes.length; i++) {\r\n    for (let j = i; j < characterTypes.length; j++) {\r\n        characterTypes[i].addBinaryOperation(TokenType.concatenation, characterTypes[j], characterTypes[j]);\r\n        characterTypes[i].addBinaryOperation(comparisonOperators, characterTypes[j], booleanType);\r\n    }\r\n}\r\n\r\nfor(let i = 0; i < timeTypes.length; i++){\r\n    timeTypes[i].addBinaryOperation(comparisonOperators, timeTypes[i], booleanType);\r\n    for(let j = 0; j < characterTypes.length; j++){\r\n        timeTypes[i].addBinaryOperation(comparisonOperators, characterTypes[j], booleanType);\r\n        characterTypes[j].addBinaryOperation(comparisonOperators, timeTypes[i], booleanType);\r\n    }\r\n}\r\n\r\nlet booleanOperations = [TokenType.keywordAnd, TokenType.keywordOr];\r\nbooleanType.addBinaryOperation(booleanOperations, booleanType, booleanType);\r\n\r\nbooleanType.unaryOperators = [TokenType.keywordNot];\r\n\r\nbaseTypes.forEach(bt => bt.unaryOperators = bt.unaryOperators.concat([TokenType.isNull, TokenType.isNotNull]));","import { param, timers } from \"jquery\";\r\nimport { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenList, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { ASTNode, BracketsNode, SelectNode, TermNode, TableOrSubqueryNode, TableNode, SubqueryNode, GroupByNode, OrderByNode, LimitNode, IdentifierNode, DotNode, ListNode, ColumnNode, InsertNode, ConstantNode, UnaryOpNode, CreateTableNode, CreateTableColumnNode, ForeignKeyInfo, UpdateNode, DeleteNode, DropTableNode, AlterTableNode, AlterTableKind, OmittedStatementNode } from \"./AST.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { Column } from \"./SQLTable.js\";\r\nimport { SQLBaseType } from \"./SQLTypes.js\";\r\n\r\nexport type SQLStatement = {\r\n    ast: ASTNode,\r\n    from: TextPosition,\r\n    to: TextPosition,\r\n    hasErrors: boolean,\r\n    acceptedBySQLite: boolean,\r\n    sql?: string,\r\n    sqlCleaned?: string\r\n}\r\n\r\n\r\nexport class Parser {\r\n\r\n    static operatorPrecedence: TokenType[][] = [\r\n        [TokenType.keywordOr], [TokenType.keywordAnd],\r\n        [TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual, TokenType.keywordLike],\r\n        [TokenType.concatenation, TokenType.plus, TokenType.minus], [TokenType.multiplication, TokenType.division, TokenType.modulo],\r\n        [TokenType.keywordIn, TokenType.keywordNotIn]\r\n    ];\r\n\r\n    module: Module;\r\n\r\n    pos: number;\r\n    tokenList: TokenList;\r\n\r\n    errorList: Error[];\r\n\r\n    lookahead = 4;\r\n    ct: Token[];\r\n    lastToken: Token;\r\n    cct: Token;\r\n    tt: TokenType;\r\n    position: TextPosition;\r\n    lastComment: Token;\r\n\r\n    endToken: Token = {\r\n        position: { line: 0, column: 0, length: 1 },\r\n        tt: TokenType.endofSourcecode,\r\n        value: \"das Ende des Programms\"\r\n    };\r\n\r\n    beginStatementKeywords = [\"select\", \"insert into\", \"update\", \"create table\", \"delete from\", \"alter table\", \"drop table\"];\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    parse(m: Module) {\r\n\r\n        this.module = m;\r\n\r\n        this.tokenList = m.tokenList;\r\n        this.errorList = [];\r\n\r\n        m.completionHints = new Map();\r\n\r\n        if (this.tokenList.length == 0) {\r\n            this.module.sqlStatements = [];\r\n            this.module.errors[1] = this.errorList;\r\n            this.module.addCompletionHint({ line: 0, column: 0, length: 0 }, { line: 20000, column: 100, length: 0 }, false, false,\r\n                this.beginStatementKeywords);\r\n            return;\r\n        }\r\n\r\n        this.pos = 0;\r\n        this.initializeLookahead();\r\n\r\n\r\n        let lastToken = this.tokenList[this.tokenList.length - 1];\r\n        this.endToken.position = { line: lastToken.position.line, column: lastToken.position.column + lastToken.position.length, length: 1 };\r\n\r\n        this.module.sqlStatements = this.parseMain();\r\n\r\n        this.module.errors[1] = this.errorList;\r\n\r\n    }\r\n\r\n    initializeLookahead() {\r\n\r\n        this.ct = [];\r\n\r\n        for (let i = 0; i < this.lookahead; i++) {\r\n\r\n            let token: Token = this.endToken;\r\n\r\n            while (true) {\r\n\r\n                if (this.pos >= this.tokenList.length) break;\r\n\r\n                let token1 = this.tokenList[this.pos]\r\n                if (token1.tt == TokenType.comment) {\r\n                    this.lastComment = token1;\r\n                }\r\n\r\n                if (token1.tt != TokenType.newline && token1.tt != TokenType.space && token1.tt != TokenType.comment) {\r\n                    token = token1;\r\n                    if (this.lastComment != null) {\r\n                        token.commentBefore = this.lastComment;\r\n                        this.lastComment = null;\r\n                    }\r\n                    break;\r\n                }\r\n\r\n                this.pos++;\r\n\r\n            }\r\n\r\n            this.ct.push(token);\r\n\r\n            if (i < this.lookahead - 1) {\r\n                this.pos++;\r\n            }\r\n\r\n        }\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    nextToken() {\r\n\r\n        let token: Token;\r\n        this.lastToken = this.cct;\r\n\r\n        while (true) {\r\n\r\n            this.pos++;\r\n\r\n            if (this.pos >= this.tokenList.length) {\r\n                token = this.endToken;\r\n                break;\r\n            }\r\n\r\n            token = this.tokenList[this.pos]\r\n            if (token.tt == TokenType.comment) {\r\n                this.lastComment = token;\r\n            }\r\n\r\n            if (token.tt != TokenType.newline && token.tt != TokenType.space && token.tt != TokenType.comment) {\r\n                token.commentBefore = this.lastComment;\r\n                this.lastComment = null;\r\n                break;\r\n            }\r\n\r\n        }\r\n\r\n        for (let i = 0; i < this.lookahead - 1; i++) {\r\n            this.ct[i] = this.ct[i + 1];\r\n        }\r\n\r\n        this.ct[this.lookahead - 1] = token;\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position?: TextPosition, quickFix?: QuickFix) {\r\n        if (position == null) position = Object.assign({}, this.position);\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    skip(tt: TokenType | TokenType[]) {\r\n        if (!Array.isArray(tt)) tt = [tt];\r\n        if (tt.indexOf(this.tt) >= 0) this.nextToken();\r\n    }\r\n\r\n    expect(tt: TokenType | TokenType[], skip: boolean = true, invokeSemicolonAngel: boolean = false): boolean {\r\n        if (this.tt != tt && !(Array.isArray(tt) && tt.indexOf(this.tt) >= 0)) {\r\n            if (tt == TokenType.semicolon && this.tt == TokenType.endofSourcecode) {\r\n                return true;\r\n            }\r\n\r\n            let position: TextPosition = this.cct.position;\r\n            if (tt == TokenType.semicolon && this.lastToken != null) {\r\n\r\n                if (this.lastToken.position.line < position.line) {\r\n                    position = {\r\n                        line: this.lastToken.position.line,\r\n                        column: this.lastToken.position.column + this.lastToken.position.length,\r\n                        length: 1\r\n                    }\r\n                }\r\n            }\r\n\r\n            let quickFix: QuickFix = null;\r\n            if (tt == TokenType.semicolon && this.lastToken.position.line < this.cct.position.line &&\r\n                !this.isOperatorOrDot(this.lastToken.tt)\r\n            ) {\r\n                quickFix = {\r\n                    title: 'Strichpunkt hier einfügen',\r\n                    editsProvider: (uri) => {\r\n                        return [{\r\n                            resource: uri,\r\n                            edit: {\r\n                                range: {\r\n                                    startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position.column,\r\n                                    message: \"\",\r\n                                    severity: monaco.MarkerSeverity.Error\r\n                                },\r\n                                text: \";\"\r\n                            }\r\n                        }\r\n                        ];\r\n                    }\r\n                }\r\n\r\n                if (invokeSemicolonAngel) {\r\n                    this.module.main.getSemicolonAngel().register(position, this.module);\r\n                }\r\n            }\r\n\r\n            let expectedValuesArray: string[];\r\n\r\n            if (Array.isArray(tt)) {\r\n                expectedValuesArray = tt.map(token => TokenTypeReadable[token]);\r\n                let expectedTokens = expectedValuesArray.join(\", \");\r\n                this.pushError(\"Erwartet wird eines der folgenden: \" + expectedTokens + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            } else {\r\n                expectedValuesArray = [TokenTypeReadable[tt]];\r\n                this.pushError(\"Erwartet wird: \" + TokenTypeReadable[tt] + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            }\r\n\r\n            // if (!Array.isArray(tt) && tt != TokenType.identifier) {\r\n            //     this.module.addCompletionHint(this.getEndOfPosition(this.lastToken.position), this.getCurrentPositionPlus(1), false, false, expectedValuesArray);\r\n            // }\r\n\r\n            return false;\r\n        }\r\n\r\n        if (skip) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    getEndOfPosition(p: TextPosition): TextPosition {\r\n        return {\r\n            line: p.line,\r\n            column: p.column + p.length,\r\n            length: 0\r\n        }\r\n    }\r\n\r\n    isOperatorOrDot(tt: TokenType): boolean {\r\n        if (tt == TokenType.dot) return true;\r\n        for (let op of Parser.operatorPrecedence) {\r\n            for (let operator of op) {\r\n                if (tt == operator) return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    isEnd(): boolean {\r\n        return this.cct == this.endToken;\r\n    }\r\n\r\n    comesToken(token: TokenType | TokenType[], skip: boolean = false): boolean {\r\n\r\n        if (!Array.isArray(token)) {\r\n            let ret: boolean = this.tt == token;\r\n            if (ret && skip) this.nextToken();\r\n            return ret;\r\n        }\r\n\r\n        return token.indexOf(this.tt) >= 0;\r\n\r\n    }\r\n\r\n    getCurrentPosition(): TextPosition {\r\n        return Object.assign({}, this.position);\r\n    }\r\n\r\n    getCurrentPositionPlus(deltaColumns: number): TextPosition {\r\n\r\n        if (this.tt == TokenType.endofSourcecode) {\r\n            return {\r\n                line: this.endToken.position.line,\r\n                column: 100,\r\n                length: 1\r\n            }\r\n        }\r\n\r\n        // get Token in which new position falls:\r\n        let tpos = 0;\r\n        let deltaInsideToken = deltaColumns;\r\n        let length = 0;\r\n        while (tpos < this.lookahead - 1 && (length = this.ct[tpos].position.length) < deltaInsideToken) {\r\n            deltaInsideToken -= length;\r\n            tpos++;\r\n        }\r\n        let tokenPos = this.ct[tpos].position;\r\n        if (tokenPos == null) tokenPos = this.getCurrentPosition();\r\n\r\n        let pos: TextPosition = {\r\n            line: tokenPos.line,\r\n            column: tokenPos.column + deltaInsideToken,\r\n            length: 1\r\n        }\r\n\r\n        return pos;\r\n    }\r\n\r\n    getEndOfCurrentToken(): TextPosition {\r\n\r\n        let position = this.getCurrentPosition();\r\n        position.column = position.column + this.position.length;\r\n        position.length = 0;\r\n\r\n        return position;\r\n    }\r\n\r\n    parseMain(): SQLStatement[] {\r\n\r\n        let mainProgram: SQLStatement[] = [];\r\n\r\n        let mainProgramEnd: TextPosition = {\r\n            column: 0,\r\n            line: 10000,\r\n            length: 1\r\n        }\r\n\r\n        let afterLastStatement: TextPosition = {\r\n            column: 0,\r\n            line: 0,\r\n            length: 0\r\n        }\r\n\r\n        let semicolonAfterLastStatement: boolean = true;\r\n\r\n        this.module.addCompletionHint(afterLastStatement, this.getCurrentPositionPlus(8), false, false,\r\n            this.beginStatementKeywords);\r\n\r\n        while (!this.isEnd()) {\r\n\r\n            let oldPos = this.pos;\r\n\r\n            let errorsBeforeStatement: number = this.errorList.length;\r\n\r\n            while ([TokenType.space, TokenType.newline, TokenType.comment, TokenType.semicolon].indexOf(this.cct.tt) >= 0) {\r\n                this.nextToken();\r\n            }\r\n\r\n            let startPosition = this.getCurrentPosition();\r\n\r\n            let st = this.parseStatement();\r\n\r\n            afterLastStatement = {\r\n                line: this.lastToken.position.line + 1,\r\n                column: 0,\r\n                length: 0\r\n            }\r\n\r\n            semicolonAfterLastStatement = this.tt == TokenType.semicolon;\r\n            while (this.tt == TokenType.semicolon) {\r\n                this.nextToken();\r\n            }\r\n\r\n            let hasErrors: boolean = false;\r\n            for (let i = errorsBeforeStatement; i < this.errorList.length; i++) {\r\n                if (this.errorList[i].level == \"error\") hasErrors = true;\r\n            }\r\n\r\n            if (st != null) {\r\n                mainProgram.push({\r\n                    ast: st,\r\n                    from: startPosition,\r\n                    to: this.getEndOfPosition(this.lastToken.position),\r\n                    hasErrors: hasErrors,\r\n                    acceptedBySQLite: false\r\n                });\r\n            }\r\n            // console.log(mainProgram[mainProgram.length - 1]);\r\n\r\n            mainProgramEnd = this.getCurrentPosition();\r\n\r\n            // emergency-forward:\r\n            if (this.pos == oldPos) {\r\n                let beginStatementTokens: TokenType[] =\r\n                    [TokenType.keywordSelect, TokenType.keywordUpdate, TokenType.keywordCreate, TokenType.keywordInsert,\r\n                    TokenType.keywordDelete, TokenType.keywordDrop, TokenType.keywordAlter];\r\n\r\n                let firstBadToken: boolean = true;\r\n\r\n                while (!this.isEnd() && beginStatementTokens.indexOf(this.tt) < 0) {\r\n                    if ([TokenType.space, TokenType.newline].indexOf(this.tt) < 0 && firstBadToken) {\r\n                        this.pushError(\"Erwartet wird eines dieser Schlüsselwörter: \" + beginStatementTokens.map(t => TokenTypeReadable[t]).join(\", \")\r\n                            + \"; Gefunden wurde: \" + this.cct.value);\r\n                        firstBadToken = true;\r\n                    }\r\n                    this.nextToken();\r\n                }\r\n            }\r\n\r\n            if (semicolonAfterLastStatement || this.cct.position.line - afterLastStatement.line > 0) {\r\n                this.module.addCompletionHint(afterLastStatement, this.getCurrentPositionPlus(8), false, false,\r\n                    this.beginStatementKeywords);\r\n            }\r\n\r\n        }\r\n\r\n        this.module.addCompletionHint(afterLastStatement, { line: this.endToken.position.line + 1, column: 0, length: 0 }, false, false,\r\n            this.beginStatementKeywords);\r\n\r\n        return mainProgram;\r\n\r\n    }\r\n\r\n\r\n\r\n    parseStatement(expectSemicolon: boolean = true): ASTNode {\r\n\r\n        let retStatements: ASTNode = null;\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordSelect:\r\n                return this.parseSelect();\r\n            case TokenType.keywordInsert:\r\n                return this.parseInsert();\r\n            case TokenType.keywordCreate:\r\n                return this.parseCreateTableOrDatabase();\r\n            case TokenType.keywordUpdate:\r\n                return this.parseUpdate();\r\n            case TokenType.keywordDelete:\r\n                return this.parseDelete();\r\n            case TokenType.keywordDrop:\r\n                return this.parseDropTable();\r\n            case TokenType.keywordAlter:\r\n                return this.parseAlterTable();\r\n            case TokenType.keywordCommit:\r\n                this.pushError(\"Die Aweisung commit ist unnötig, da jede Anweisung automatisch commited wird.\", \"info\");\r\n                this.nextToken();\r\n                return null;\r\n            // Omitted statements:\r\n            case TokenType.keywordSet:\r\n                return this.parseSet();\r\n            case TokenType.keywordUse:\r\n                return this.parseUse();\r\n            case TokenType.keywordStart:\r\n                this.pushError(\"Die Aweisung 'start transaction' ist unnötig, da jede Anweisung automatisch commited wird.\", \"info\");\r\n                this.nextToken();\r\n                this.expect(TokenType.keywordTransaction, true);\r\n                return null;\r\n            case TokenType.keywordLock:\r\n            case TokenType.keywordUnlock:\r\n                this.parseLockUnlock();\r\n                return null;\r\n\r\n            default:\r\n                let s = TokenTypeReadable[this.tt];\r\n                if (s == null) s = \"\";\r\n                if (s != this.cct.value) s += \"(\" + this.cct.value + \")\";\r\n                s += \" wird hier nicht erwartet.\";\r\n                this.pushError(s);\r\n                this.nextToken();\r\n                break;\r\n        }\r\n\r\n\r\n        return retStatements;\r\n\r\n    }\r\n\r\n    parseLockUnlock() {\r\n        this.nextToken();\r\n        this.expect(TokenType.keywordTables, true);\r\n        this.skip(TokenType.identifier);\r\n        this.skip([TokenType.keywordWrite, TokenType.keywordRead]);\r\n        this.skip(TokenType.semicolon);\r\n    }\r\n\r\n    parseSet(): OmittedStatementNode {\r\n\r\n        this.pushError(\"Das SET-Statement wird von SQLite nicht unterstützt. Diese Anweisung wird daher einfach überlesen.\", \"info\");\r\n\r\n        let node: OmittedStatementNode = {\r\n            type: TokenType.omittedeStatement,\r\n            position: this.getCurrentPosition(),\r\n            endPosition: null,\r\n            symbolTable: null\r\n        }\r\n\r\n        this.nextToken(); // skip 'set'\r\n        this.expect(TokenType.identifier, true);\r\n        this.expect(TokenType.equal, true);\r\n        this.expect([TokenType.identifier, TokenType.stringConstant, TokenType.integerConstant, TokenType.charConstant, TokenType.booleanConstant, TokenType.floatingPointConstant], true);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n    parseUse(): OmittedStatementNode {\r\n\r\n        this.pushError(\"Das USE-Statement wird von SQLite nicht unterstützt. Diese Anweisung wird daher einfach überlesen. Sie können eine andere Datenbank auswählen indem Sie in der Datenbankliste links darauf klicken.\", \"info\");\r\n\r\n        let node: OmittedStatementNode = {\r\n            type: TokenType.omittedeStatement,\r\n            position: this.getCurrentPosition(),\r\n            endPosition: null,\r\n            symbolTable: null\r\n        }\r\n\r\n        this.nextToken(); // skip 'use'\r\n        this.expect(TokenType.identifier, true);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n    parseAlterTable(): AlterTableNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"alter\"\r\n\r\n        let node: AlterTableNode = {\r\n            type: TokenType.keywordAlter,\r\n            kind: null,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n        }\r\n\r\n        if (!this.expect(TokenType.keywordTable, true)) {\r\n            this.addCompletionHintHere(false, false, [\"table\"], 1);\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1);\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        this.addCompletionHintHere(false, false, [\"rename to\", \"rename column\", \"add column\", \"drop column\"], 1);\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordRename: this.parseRenameTableOrColumn(node); break;\r\n            case TokenType.keywordAdd: this.parseAlterTableAdd(node); break;\r\n            case TokenType.keywordDrop: this.parseDropColumn(node); break;\r\n            default:\r\n                this.pushError(\"Erwartet wird rename to, rename column, add column oder drop column\");\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    parseRenameTableOrColumn(node: AlterTableNode) {\r\n\r\n        this.nextToken();\r\n        if (!this.comesToken(TokenType.keywordTo)) {\r\n            this.addCompletionHintHere(node.tableIdentifier, false, [\"column\", \"to\"], 3);\r\n        }\r\n        node.endPosition = this.getEndOfCurrentToken();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordTo:\r\n                this.nextToken();\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                node.kind = \"renameTable\";\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    node.newTableName = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    node.endPosition = this.getEndOfCurrentToken();\r\n                } else {\r\n                    this.pushError(\"Erwartet wird der neue Tabellenname.\");\r\n                }\r\n                return;\r\n            case TokenType.keywordColumn:\r\n                this.nextToken();\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                this.addCompletionHintHere(node.tableIdentifier, false, [], 3);\r\n                if (!this.comesToken(TokenType.identifier)) {\r\n                    this.pushError(\"Erwartet wird der Name einer Spalte der Tabelle \" + node.tableIdentifier + \".\");\r\n                    return;\r\n                }\r\n                node.kind = \"renameColumn\";\r\n                node.oldColumnName = <string>this.cct.value;\r\n                node.oldColumnPosition = this.getCurrentPosition();\r\n                this.nextToken();\r\n                this.addCompletionHintHere(false, false, [\"to\"], 3);\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                if (!this.expect(TokenType.keywordTo, true)) return;\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    node.newColumnName = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    node.endPosition = this.getEndOfCurrentToken();\r\n                } else {\r\n                    this.pushError(\"Erwartet wird der neue Spaltenname.\");\r\n                }\r\n                return;\r\n            default:\r\n                this.pushError(\"Erwartet wird das Schlüsselwort 'to' (zum Umbenennen der Tabelle) oder das Schlüsselwor 'column' (zum Umbenennen einer Spalte).\")\r\n                return;\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    parseDropColumn(node: AlterTableNode) {\r\n        this.nextToken(); // skip 'drop'\r\n        this.comesToken(TokenType.keywordColumn, true);\r\n        node.oldColumnPosition = this.getCurrentPosition();\r\n        this.addCompletionHintHere(node.tableIdentifier, false, [], 3);\r\n\r\n        node.kind = \"dropColumn\";\r\n        node.endPosition = this.getEndOfCurrentToken();\r\n\r\n        if (this.comesToken(TokenType.identifier)) {\r\n            node.oldColumnName = <string>this.cct.value;\r\n            this.nextToken();\r\n        } else {\r\n            this.pushError(\"Erwartet wird der Bezeichner der Spalte, die gelöscht werden soll.\");\r\n        }\r\n\r\n    }\r\n\r\n    parseAlterTableAdd(node: AlterTableNode) {\r\n        do {\r\n            this.nextToken(); // skip \"add\" or \",\"\r\n            this.comesToken(TokenType.keywordAdd, true);\r\n            let unique: boolean = false;\r\n            switch (this.tt) {\r\n                case TokenType.keywordColumn:\r\n                    this.parseAddColumn(node);\r\n                    break;\r\n                case TokenType.keywordPrimary:\r\n                    this.parseAddPrimaryKey(node);\r\n                    break;\r\n                case TokenType.keywordUnique:\r\n                    this.nextToken();\r\n                    unique = true;\r\n                    this.expect([TokenType.keywordIndex, TokenType.keywordKey], false);\r\n                case TokenType.keywordKey:\r\n                case TokenType.keywordIndex:\r\n                    this.parseAddIndex(node, unique);\r\n                    break;\r\n                case TokenType.keywordModify:\r\n                    this.parseModifyColumn(node);\r\n                    break;\r\n                case TokenType.keywordConstraint:\r\n                    this.parseAddConstraint(node);\r\n                    break;\r\n            }\r\n        } while (this.tt == TokenType.comma);\r\n    }\r\n\r\n    parseAddConstraint(node: AlterTableNode) {\r\n        this.nextToken(); // skip \"constraint\"\r\n        if (!this.expect(TokenType.identifier)) return;\r\n\r\n        if (this.comesToken(TokenType.keywordForeign)) {\r\n            let fki = this.parseForeignKeyDefinition();\r\n            if (fki != null) {\r\n                if (node.foreignKeys == null) node.foreignKeys = [];\r\n                node.foreignKeys.push(fki);\r\n                node.kind = \"omittedKind\";\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    parseForeignKeyDefinition(): ForeignKeyInfo {\r\n        let fki: ForeignKeyInfo = { column: \"\", referencesTable: \"\", referencesColumn: \"\", referencesPosition: this.getCurrentPosition() };\r\n        if (!this.expect(TokenType.keywordForeign)) return;\r\n        if (!this.expect(TokenType.keywordKey)) return;\r\n        if (!this.expect(TokenType.leftBracket)) return;\r\n\r\n        if (!this.comesToken(TokenType.identifier)) {\r\n            this.pushError(\"Der Bezeichner der Fremdschlüsselspalte wird erwartet.\");\r\n            return;\r\n        }\r\n\r\n        fki.column = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        if (!this.expect(TokenType.rightBracket)) return;\r\n        this.parseReferences(fki);\r\n        return fki;\r\n    }\r\n\r\n    parseReferences(fki: ForeignKeyInfo) {\r\n\r\n        if (!this.expect(TokenType.keywordReferences)) return;\r\n\r\n        this.addCompletionHintHere(false, true, []);\r\n\r\n        if (!this.comesToken(TokenType.identifier)) {\r\n            this.pushError(\"Der Bezeichner der referenzierten Tabelle wird erwartet.\");\r\n            return;\r\n        }\r\n\r\n        fki.referencesTable = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        let pos0 = this.lastToken.position;\r\n        let pos1 = this.getCurrentPosition();\r\n        this.module.addCompletionHint(this.getEndOfPosition(pos0), pos1, fki.referencesTable, false, []);\r\n\r\n\r\n        if (!this.expect(TokenType.leftBracket)) return;\r\n        if (!this.comesToken(TokenType.identifier)) {\r\n            this.pushError(\"Der Bezeichner der referenzierten Spalte wird erwartet.\");\r\n            return;\r\n        }\r\n\r\n        fki.referencesColumn = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        if (!this.expect(TokenType.rightBracket)) return;\r\n\r\n        while (this.tt == TokenType.keywordOn) {\r\n            this.nextToken();\r\n            let kind: \"onDelete\" | \"onUpdate\" | \"\" = \"\";\r\n\r\n            switch (this.tt) {\r\n                //@ts-ignore\r\n                case TokenType.keywordDelete:\r\n                    kind = \"onDelete\";\r\n                    break;\r\n                //@ts-ignore\r\n                case TokenType.keywordUpdate:\r\n                    kind = \"onUpdate\";\r\n                    break;\r\n            }\r\n\r\n            if (kind == \"\") {\r\n                this.pushError(\"Nach 'on' wird 'delete' oder 'update' erwartet.\");\r\n                if (!this.comesToken([TokenType.keywordCascade, TokenType.keywordRestrict, TokenType.keywordSet, TokenType.keywordNo])) {\r\n                    this.nextToken();\r\n                    kind = \"onDelete\";\r\n                }\r\n            } else {\r\n                this.nextToken();\r\n            }\r\n\r\n            switch (this.tt) {\r\n                //@ts-ignore\r\n                case TokenType.keywordCascade:\r\n                //@ts-ignore\r\n                case TokenType.keywordRestrict:\r\n                    fki[kind] = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    break;\r\n                //@ts-ignore\r\n                case TokenType.keywordSet:\r\n                    fki[kind] = \"set \";\r\n                    this.nextToken();\r\n                    if ([TokenType.keywordNull, TokenType.keywordDefault].indexOf(this.tt) >= 0) {\r\n                        fki[kind] += this.cct.value;\r\n                        this.nextToken();\r\n                    } else {\r\n                        this.pushError(\"Nach 'on delete/update set' wird 'null' oder 'default' erwartet.\");\r\n                    }\r\n                    break;\r\n                //@ts-ignore\r\n                case TokenType.keywordNo:\r\n                    this.nextToken();\r\n                    if (this.expect(TokenType.keywordAction), true) {\r\n                        fki[kind] = \"no action\";\r\n                    }\r\n                    break;\r\n                default:\r\n                    this.pushError(\"Nach 'on delete/update' wird 'cascade', 'set null', 'set default' oder 'no action' erwartet.\");\r\n                    break;\r\n\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    parseModifyColumn(node: AlterTableNode) {\r\n        this.nextToken();\r\n        let modifyColumnInfo = this.parseColumnDefinition(false);\r\n        if (modifyColumnInfo != null) {\r\n            if (node.modifyColumnInfo == null) node.modifyColumnInfo = [];\r\n            node.modifyColumnInfo.push(modifyColumnInfo);\r\n        }\r\n    }\r\n\r\n    parseAddPrimaryKey(node: AlterTableNode) {\r\n        this.nextToken(); // skip \"primary\"\r\n        node.primaryKeys = [];\r\n        if (this.expect(TokenType.keywordKey, true) && this.expect(TokenType.leftBracket, false)) {\r\n            do {\r\n                this.nextToken();\r\n                if (this.tt == TokenType.identifier) {\r\n                    node.primaryKeys.push(<string>this.cct.value);\r\n                    this.nextToken();\r\n                }\r\n            } while (this.tt == TokenType.comma)\r\n        }\r\n        if (this.expect(TokenType.rightBracket, true)) {\r\n            node.kind = \"omittedKind\";\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    parseAddIndex(node: AlterTableNode, unique: boolean) {\r\n        this.nextToken(); // skip \"key\" | \"index\"\r\n\r\n        let index = { index_name: \"\", column: \"\", unique: unique }\r\n        if (this.tt == TokenType.identifier) {\r\n            index.index_name = <string>this.cct.value;\r\n            this.nextToken();\r\n        } else {\r\n            this.pushError(\"Erwartet wird der Bezeichner des Index.\");\r\n            return null;\r\n        }\r\n\r\n        if (!this.expect(TokenType.leftBracket, true)) return null;\r\n        if (this.tt == TokenType.identifier) {\r\n            index.column = <string>this.cct.value;\r\n            this.nextToken();\r\n            if (node.indices == null) node.indices = [];\r\n            node.indices.push(index);\r\n        } else {\r\n            this.pushError(\"Erwartet wird der Bezeichner der Spalte, für die ein Index erstellt werden soll.\");\r\n            return null;\r\n        }\r\n\r\n        node.kind = \"omittedKind\";\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        return null;\r\n    }\r\n\r\n    parseAddColumn(node: AlterTableNode) {\r\n        node.kind = \"addColumn\";\r\n        this.comesToken(TokenType.keywordColumn, true);\r\n        node.columnDefBegin = this.getCurrentPosition();\r\n        node.columnDef = this.parseColumnDefinition(false);\r\n    }\r\n\r\n    parseDropTable(): DropTableNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"Delete\"\r\n\r\n        let node: DropTableNode = {\r\n            type: TokenType.keywordDrop,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n            ifExists: false\r\n        }\r\n\r\n        if (!this.expect(TokenType.keywordTable, true)) {\r\n            this.addCompletionHintHere(false, false, [\"table\"], 1);\r\n        }\r\n\r\n        if (this.comesToken(TokenType.keywordIf, true)) {\r\n            node.ifExists = true;\r\n            this.expect(TokenType.keywordExists, true);\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1, \"\", \";\");\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n\r\n    }\r\n\r\n    parseDelete(): DeleteNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"Delete\"\r\n\r\n        let node: DeleteNode = {\r\n            type: TokenType.keywordDelete,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n            whereNode: null,\r\n            whereNodeBegin: null,\r\n            whereNodeEnd: null\r\n        }\r\n\r\n        if (!this.expect(TokenType.keywordFrom, true)) {\r\n            this.addCompletionHintHere(false, false, [\"from\"], 1);\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1, \"\", \" where\\n\\t\");\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        this.addCompletionHintHere(false, false, [\"where\\n\\t\"], 1);\r\n        if (this.tt != TokenType.keywordWhere) return node;\r\n\r\n        this.nextToken(); // skip \"where\"\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n\r\n        node.whereNodeBegin = this.getEndOfPosition(this.lastToken.position);\r\n        node.whereNode = this.parseTerm();\r\n        node.whereNodeEnd = this.getCurrentPosition();\r\n\r\n        this.module.addCompletionHint(node.whereNodeBegin, this.getCurrentPositionPlus(3), node.tableIdentifier, false, []);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n        return node;\r\n\r\n    }\r\n\r\n    parseUpdate(): UpdateNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"update\"\r\n\r\n        let node: UpdateNode = {\r\n            type: TokenType.keywordUpdate,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n            columnIdentifiers: [],\r\n            columnIdentifierPositions: [],\r\n            values: [],\r\n            valuePosBegin: [],\r\n            valuePosEnd: [],\r\n            whereNode: null,\r\n            whereNodeBegin: null,\r\n            whereNodeEnd: null\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1, \"\", \" set\\n\\t\");\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        this.addCompletionHintHere(false, false, [\"set\\n\\t\"], 1);\r\n        if (!this.expect(TokenType.keywordSet)) return node;\r\n        let first: boolean = true;\r\n        do {\r\n            this.addCompletionHintHere(node.tableIdentifier, false, first ? [] : ['where'], 1, null, \" = \");\r\n            first = false;\r\n            if (this.tt != TokenType.identifier) {\r\n                this.pushError(\"Hier wird der Bezeichner derjenigen Spalte der Tabelle \" + node.tableIdentifier + \" erwaretet, deren Wert verändert werden soll.\", \"error\");\r\n                break;\r\n            }\r\n\r\n            node.columnIdentifiers.push(<string>this.cct.value);\r\n            node.columnIdentifierPositions.push(this.getCurrentPosition());\r\n            this.nextToken();\r\n\r\n            this.expect(TokenType.equal, true);\r\n\r\n            node.valuePosBegin.push(this.getCurrentPosition());\r\n            node.values.push(this.parseTerm());\r\n            node.valuePosEnd.push(this.getCurrentPosition());\r\n\r\n        } while (this.comesToken(TokenType.comma, true));\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        if (this.lastToken.tt != TokenType.comma || this.comesToken(TokenType.keywordWhere)) {\r\n            if (!this.expect(TokenType.keywordWhere, true)) return node;\r\n\r\n            node.whereNodeBegin = this.getEndOfPosition(this.lastToken.position);\r\n            node.whereNode = this.parseTerm();\r\n            node.whereNodeEnd = this.getCurrentPosition();\r\n\r\n            this.module.addCompletionHint(node.whereNodeBegin, node.whereNodeEnd, node.tableIdentifier, false, []);\r\n\r\n            node.endPosition = this.getCurrentPosition();\r\n        } else {\r\n            this.comesToken(TokenType.keywordWhere, true); // skip where, if present\r\n        }\r\n        return node;\r\n\r\n    }\r\n\r\n    parseCreateTableOrDatabase(): CreateTableNode | OmittedStatementNode {\r\n        switch (this.ct[1].tt) {\r\n            case TokenType.keywordDatabase:\r\n                return this.parseCreateDatabase();\r\n            case TokenType.keywordTable:\r\n                return this.parseCreateTable();\r\n            default:\r\n                this.nextToken();\r\n                this.pushError(\"Nach 'create' wird 'table' erwartet.\");\r\n                this.nextToken();\r\n                return null;\r\n        }\r\n    }\r\n\r\n    parseCreateDatabase(): OmittedStatementNode {\r\n        let node: OmittedStatementNode = {\r\n            type: TokenType.omittedeStatement,\r\n            position: this.getCurrentPosition(),\r\n            endPosition: null,\r\n            symbolTable: null\r\n        }\r\n\r\n        this.nextToken();\r\n        this.pushError(\"Die CREATE-DATABASE-Anweisung wird von der SQLite-Engine nicht unterstützt. Sie können eine neue Datenbank anlegen, indem Sie auf den entsprechenden Button oberhalb der Liste der Datenbanken (linke Seite des Fensters) klicken. Diese Anweisung wird überlesen.\", \"info\");\r\n        while (this.tt != TokenType.semicolon && this.tt != TokenType.endofSourcecode) {\r\n            node.endPosition = this.getEndOfCurrentToken();\r\n            this.nextToken();\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    parseCreateTable(): CreateTableNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"create\"\r\n\r\n        if (!this.expect(TokenType.keywordTable, true)) {\r\n            this.module.addCompletionHint(startPosition, this.getCurrentPositionPlus(3), false, false, [\"table\"]);\r\n        }\r\n\r\n        let ifNotExists: boolean = false;\r\n        if (this.comesToken(TokenType.keywordIf)) {\r\n            this.nextToken();\r\n            this.expect(TokenType.keywordNot, true);\r\n            this.expect(TokenType.keywordExists, true);\r\n            ifNotExists = true;\r\n        }\r\n\r\n        let identifier = \"\";\r\n        if (this.expect(TokenType.identifier, false)) {\r\n            identifier = <string>this.cct.value;\r\n            let pos1 = this.getCurrentPosition();\r\n            let pos2 = this.getCurrentPositionPlus(identifier.length + 3);\r\n            this.nextToken();\r\n            if (!this.comesToken(TokenType.leftBracket)) {\r\n                this.module.addCompletionHint(pos1, pos2, false, false, [\"(\"]);\r\n            }\r\n        }\r\n\r\n        let node: CreateTableNode = {\r\n            type: TokenType.keywordCreate,\r\n            identifier: identifier,\r\n            position: startPosition,\r\n            endPosition: null,\r\n            columnList: [],\r\n            symbolTable: null,\r\n            combinedPrimaryKeyColumns: [],\r\n            foreignKeyInfoList: [],\r\n            ifNotExists: ifNotExists,\r\n            uniqueConstraints: []\r\n        }\r\n\r\n        if (!this.expect(TokenType.leftBracket, true)) return node;\r\n\r\n        let primaryKeyAlreadyDefined: boolean = false;\r\n        let first: boolean = true;\r\n\r\n        while (this.tt != TokenType.rightBracket) {\r\n            if (!first) this.expect(TokenType.comma, true);\r\n            first = false;\r\n            if (this.comesToken(TokenType.keywordConstraint, true)) {\r\n                this.expect(TokenType.identifier, true);\r\n                this.expect([TokenType.keywordForeign, TokenType.keywordPrimary, TokenType.keywordUnique], false);\r\n            }\r\n\r\n            switch (this.tt) {\r\n                case TokenType.keywordPrimary:\r\n                    if (primaryKeyAlreadyDefined) this.pushError(\"Je Tabelle darf nur ein einziger Primärschlüssel definiert werden.\", \"error\", this.getCurrentPosition());\r\n                    this.parsePrimaryKeyTerm(primaryKeyAlreadyDefined, node);\r\n                    primaryKeyAlreadyDefined = true;\r\n                    break;\r\n                case TokenType.keywordUnique:\r\n                    this.parseUniqueTerm(node);\r\n                    break;\r\n                case TokenType.keywordForeign:\r\n                    let fki = this.parseForeignKeyDefinition();\r\n                    if (fki != null) {\r\n                        node.foreignKeyInfoList.push(fki);\r\n                    }\r\n                    break;\r\n                case TokenType.identifier:\r\n                    let columnNode = this.parseColumnDefinition(primaryKeyAlreadyDefined);\r\n                    node.columnList.push(columnNode);\r\n                    primaryKeyAlreadyDefined = primaryKeyAlreadyDefined || columnNode.isPrimary;\r\n                    break;\r\n                default:\r\n                    this.pushError(TokenTypeReadable[this.tt] + \" wird hier nicht erwartet.\", \"error\");\r\n                    break;\r\n            }\r\n            if (!this.comesToken(TokenType.comma)) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        while ([TokenType.keywordAutoincrement, TokenType.keywordEngine, TokenType.keywordDefault, TokenType.keywordCollate].indexOf(this.tt) >= 0) {\r\n            switch (this.tt) {\r\n                case TokenType.keywordCollate:\r\n                    this.nextToken();\r\n                    this.skip(TokenType.equal);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordEngine:\r\n                    this.nextToken();\r\n                    this.skip(TokenType.equal);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordDefault:\r\n                    this.nextToken();\r\n                    this.expect([TokenType.keywordCharset, TokenType.keywordCharacter], true);\r\n                    this.skip(TokenType.keywordSet);\r\n                    this.skip(TokenType.equal);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordAutoincrement:\r\n                    this.nextToken();\r\n                    this.expect(TokenType.equal, true);\r\n                    this.expect(TokenType.integerConstant, true);\r\n                    break;\r\n            }\r\n\r\n        }\r\n\r\n        for (let column of node.columnList) {\r\n            if (column.isAutoIncrement && !(column.isPrimary || node.combinedPrimaryKeyColumns.indexOf(column.identifier) >= 0)) {\r\n                this.pushError(\"autoincrement gibt es nur bei Primärschlüsseln, d.h. es fehlt wahrscheinlich 'primary key'.\", \"warning\", node.position);\r\n            }\r\n        }\r\n\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n\r\n    parsePrimaryKeyTerm(primaryKeyAlreadyDefined: boolean, node: CreateTableNode) {\r\n        if (primaryKeyAlreadyDefined) {\r\n            this.pushError(\"Die Tabelle kann nur einen einzigen Primärschlüssel haben.\");\r\n        }\r\n        this.nextToken(); // skip \"primary\"\r\n        this.expect(TokenType.keywordKey, true);\r\n\r\n        let columns: string[] = node.columnList.map(c => c.identifier);\r\n\r\n        this.addCompletionHintHere(false, false, columns);\r\n        if (this.comesToken(TokenType.leftBracket)) {\r\n            this.addCompletionHintHere(false, false, columns);\r\n            this.nextToken();\r\n\r\n            while (true) {\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    node.combinedPrimaryKeyColumns.push(<string>this.cct.value);\r\n                    this.nextToken();\r\n                    this.addCompletionHintHere(false, false, columns, 1);\r\n                    if (!this.comesToken(TokenType.comma)) {\r\n                        break;\r\n                    } else {\r\n                        this.nextToken();\r\n                        this.addCompletionHintHere(false, false, columns);\r\n                    }\r\n                } else {\r\n                    this.pushError(\"Der Bezeichner einer Spalte wird erwartet. Gefunden wurde: \" + this.cct.value);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        } else {\r\n            this.pushError(\"( erwartet.\");\r\n        }\r\n    }\r\n\r\n    parseUniqueTerm(node: CreateTableNode) {\r\n        this.nextToken(); // skip \"unique\"\r\n\r\n        let columns: string[] = node.columnList.map(c => c.identifier);\r\n        let uniqueConstraint: string[] = [];\r\n        node.uniqueConstraints.push(uniqueConstraint);\r\n\r\n        this.addCompletionHintHere(false, false, columns);\r\n        if (this.comesToken(TokenType.leftBracket)) {\r\n            this.addCompletionHintHere(false, false, columns);\r\n            this.nextToken();\r\n\r\n            while (true) {\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    uniqueConstraint.push(<string>this.cct.value);\r\n                    this.nextToken();\r\n                    this.addCompletionHintHere(false, false, columns, 1);\r\n                    if (!this.comesToken(TokenType.comma)) {\r\n                        break;\r\n                    } else {\r\n                        this.nextToken();\r\n                        this.addCompletionHintHere(false, false, columns);\r\n                    }\r\n                } else {\r\n                    this.pushError(\"Der Bezeichner einer Spalte wird erwartet. Gefunden wurde: \" + this.cct.value);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        } else {\r\n            this.pushError(\"( erwartet.\");\r\n        }\r\n    }\r\n\r\n    parseColumnDefinition(primaryKeyAlreadyDefined: boolean): CreateTableColumnNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n        let identifier = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        let node: CreateTableColumnNode = {\r\n            type: TokenType.columnDef,\r\n            identifier: identifier,\r\n            isPrimary: false,\r\n            isAutoIncrement: false,\r\n            position: position,\r\n            baseType: null,\r\n            notNull: false\r\n        }\r\n\r\n        this.parseType(node, primaryKeyAlreadyDefined);\r\n\r\n        return node;\r\n\r\n    }\r\n\r\n    addCompletionHintHere(hintColumns: boolean | string, hintTables: boolean, hints: string[], additionalColumns: number = 0, praefix: string = \"\", suffix: string = \"\") {\r\n        let pos0 = this.lastToken.position;\r\n        let pos1 = this.getCurrentPosition();\r\n        pos1.column += 1 + additionalColumns\r\n        this.module.addCompletionHint(this.getEndOfPosition(pos0), pos1, hintColumns, hintTables, hints, null, praefix, suffix);\r\n    }\r\n\r\n    parseType(node: CreateTableColumnNode, primaryKeyAlreadyDefined: boolean) {\r\n\r\n        let datatypes = SQLBaseType.baseTypes.map(type => type.toString());\r\n        this.addCompletionHintHere(false, false, datatypes);\r\n\r\n        if (!this.expect(TokenType.identifier, false)) {\r\n            this.pushError(\"Erwartet wird ein Datentyp. Gefunden wurde: \" + this.cct.value);\r\n            return;\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n        if (identifier.toLowerCase() == 'year') {\r\n            identifier = 'int';\r\n        }\r\n\r\n        let type = SQLBaseType.getBaseType(identifier);\r\n        if (type == null) {\r\n            this.pushError(\"Erwartet wird ein Datentyp. Gefunden wurde: \" + identifier);\r\n        }\r\n        node.baseType = type;\r\n        this.nextToken();\r\n\r\n        if (this.tt == TokenType.leftBracket) {\r\n            this.nextToken();\r\n            node.parameters = [];\r\n            //@ts-ignore\r\n            while (this.tt == TokenType.integerConstant) {\r\n                node.parameters.push(<number>this.cct.value);\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.comma) break;\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.integerConstant) {\r\n                    this.pushError(\"Erwartet wird eine ganze Zahl, gefunden wurde: \" + this.cct.value);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (type != null && node.parameters.length > type.parameterDescriptions.length) {\r\n                this.pushError(\"Der Datentyp \" + type.toString() + \" hat höchstens \" + type.parameterDescriptions.length + \" Parameter.\");\r\n            }\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        }\r\n\r\n        if (identifier != null && identifier.toLocaleLowerCase() == \"char\" && node.parameters == null) {\r\n            node.parameters = [1];\r\n        }\r\n\r\n        // primary key autoincrement\r\n        // references table(column)\r\n        // not null\r\n\r\n        this.addCompletionHintHere(false, false, [\"primary key\", \"references\", \"not null\"]);\r\n\r\n        let alreadySeenKeywords: TokenType[] = [];\r\n\r\n        while ([TokenType.keywordOn, TokenType.keywordCharacter, TokenType.keywordComment, TokenType.keywordAutoincrement, TokenType.keywordKey, TokenType.keywordPrimary, TokenType.keywordNot, TokenType.keywordReferences, TokenType.keywordCollate, TokenType.keywordDefault].indexOf(this.tt) >= 0) {\r\n            if (alreadySeenKeywords.indexOf(this.tt) >= 0) {\r\n                this.pushError('Das Schlüsselwort ' + TokenTypeReadable[this.tt] + \" darf bei der Definition einer Spalte nicht öfters als ein Mal vorkommen.\");\r\n            }\r\n\r\n            alreadySeenKeywords.push(this.tt);\r\n\r\n            switch (this.tt) {\r\n                case TokenType.keywordAutoincrement:\r\n                    this.nextToken();\r\n                    node.isAutoIncrement = true;\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.equal) {\r\n                        this.nextToken();\r\n                        this.expect(TokenType.integerConstant);\r\n                    } else {\r\n                        //@ts-ignore\r\n                        if (this.tt == TokenType.comma && this.ct[1].tt == TokenType.keywordAutoincrement) {\r\n                            this.nextToken();\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.keywordPrimary:\r\n                    if (primaryKeyAlreadyDefined) this.pushError(\"In einer Tabelle darf es nur einen einzigen primary key geben.\");\r\n                    this.nextToken(); // skip \"primary\"\r\n                    if (!this.expect(TokenType.keywordKey, true)) {\r\n                        this.addCompletionHintHere(false, false, [\"key\"]);\r\n                    } else {\r\n                        this.addCompletionHintHere(false, false, [\"autoincrement, \\n\"])\r\n                    }\r\n                    node.isPrimary = true;\r\n                    break;\r\n                case TokenType.keywordReferences:\r\n                    let fki: ForeignKeyInfo = { column: node.identifier, referencesColumn: \"\", referencesTable: \"\", referencesPosition: this.getCurrentPosition() };\r\n                    node.foreignKeyInfo = fki;\r\n                    this.parseReferences(fki);\r\n                    break;\r\n                case TokenType.keywordNot:\r\n                    this.nextToken();\r\n                    if (!this.expect(TokenType.keywordNull, true)) {\r\n                        this.addCompletionHintHere(false, false, [\"null\"]);\r\n                    } else {\r\n                        this.addCompletionHintHere(false, false, [\"references\"]);\r\n                    }\r\n                    node.notNull = true;\r\n                    break;\r\n                case TokenType.keywordCollate:\r\n                    this.nextToken();\r\n                    node.collate = <string>this.cct.value;\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordCharacter:\r\n                    this.nextToken();\r\n                    this.expect(TokenType.keywordSet, true);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordDefault:\r\n                    this.nextToken();\r\n\r\n                    if (this.ct[1].tt == TokenType.leftBracket && this.ct[2].tt == TokenType.rightBracket) {\r\n                        this.nextToken();\r\n                        this.nextToken();\r\n                        this.nextToken();\r\n                        break;\r\n                    }\r\n\r\n                    node.defaultValue = <string>this.cct.value;\r\n                    if (typeof this.cct.value == \"string\") {\r\n                        node.defaultValue = \"'\" + node.defaultValue + \"'\";\r\n                    }\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.keywordNull) {\r\n                        this.nextToken();\r\n                        break;\r\n                    } else if ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.stringConstant].indexOf(this.tt) >= 0) {\r\n                        let constantType = SQLBaseType.fromConstantType(this.tt);\r\n                        if (!constantType.canCastTo(type)) {\r\n                            this.pushError(\"Die Konstante hinter 'default' passt nicht zum Datentyp der Spalte.\");\r\n                        }\r\n                        this.nextToken();\r\n                    }\r\n                    break;\r\n                case TokenType.keywordComment:\r\n                    this.nextToken(); // Skip \"comment\"\r\n                    this.expect(TokenType.stringConstant, true);\r\n                    break;\r\n                case TokenType.keywordOn:\r\n                    this.nextToken();\r\n                    this.expect([TokenType.keywordUpdate], true);\r\n                    while (!this.comesToken([TokenType.comma, TokenType.endofSourcecode, TokenType.rightBracket])) this.nextToken();\r\n                    //@ts-ignore\r\n                    if (this.lastToken.tt == TokenType.leftBracket && this.tt == TokenType.rightBracket) this.nextToken();\r\n                    break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    parseInsert(): InsertNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        let rightBracketPosition =startPosition;\r\n        this.nextToken(); // skip \"insert\"\r\n\r\n        this.expect(TokenType.keywordInto, true);\r\n\r\n        let node: InsertNode = {\r\n            type: TokenType.keywordInsert,\r\n            position: startPosition,\r\n            endPosition: this.getCurrentPosition(),\r\n            valuesPosition: null,\r\n            columnsPosition: null,\r\n            symbolTable: null,\r\n            columnList: [],\r\n            values: [],\r\n            table: null\r\n        }\r\n\r\n        if (this.tt == TokenType.identifier) {\r\n            node.table = {\r\n                type: TokenType.table,\r\n                identifier: <string>this.cct.value,\r\n                alias: null,\r\n                position: this.getCurrentPosition()\r\n            }\r\n            node.columnsPosition = { line: node.table.position.line, column: node.table.position.column + node.table.position.length, length: 0 };\r\n            this.nextToken();\r\n        } else {\r\n            this.pushError(\"Hier wird der Bezeichner einer Tabelle erwartet. Gefunden wurde: \" + this.cct.value, \"error\");\r\n        }\r\n\r\n        if (this.tt == TokenType.leftBracket) {\r\n\r\n            this.nextToken();\r\n            let first: boolean = true;\r\n            //@ts-ignore\r\n            while (first || this.tt == TokenType.comma) {\r\n\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.identifier) {\r\n                    node.columnList.push({\r\n                        type: TokenType.identifier,\r\n                        identifier: this.cct.value + \"\",\r\n                        position: this.getCurrentPosition()\r\n                    })\r\n\r\n                } else {\r\n                    this.pushError(\"Erwartet wird der Bezeichner einer Spalte. Gefunden wurde: \" + this.cct.value, \"error\");\r\n                }\r\n                this.nextToken();\r\n            }\r\n            rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n        }\r\n\r\n        node.valuesPosition = this.getCurrentPosition();\r\n\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordValues:\r\n                this.nextToken();\r\n                this.parseValueLists(node.values);\r\n                break;\r\n            case TokenType.keywordSelect:\r\n            case TokenType.leftBracket:\r\n                if(this.getCurrentPosition().line <= rightBracketPosition.line + 1){\r\n                    let selectNode = this.parseSelect();\r\n                    node.select = selectNode;\r\n                    // if(selectNode != null){\r\n                    //     if(node.columnList != null && selectNode.columnList != null){\r\n                    //         if(node.columnList.length != selectNode.columnList.length){\r\n                    //             this.pushError(\"Die insert-Anweisung erwartet \" + node.columnList.length + \" Werte je Datensatz, der nachfolgende select-Term liefert aber \" + selectNode.columnList.length + \" Werte je Datensatz.\");                        \r\n                    //         } \r\n                    //         node.select = selectNode;\r\n                    //     }\r\n                    // }\r\n                }\r\n                break;\r\n        }\r\n\r\n\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n\r\n    parseValueLists(values: ConstantNode[][]) {\r\n        let insideListTokens = [TokenType.keywordNull, TokenType.charConstant, TokenType.stringConstant, TokenType.booleanConstant, TokenType.floatingPointConstant, TokenType.integerConstant];\r\n\r\n        let outerFirst: boolean = true;\r\n\r\n        while (outerFirst || this.tt == TokenType.comma) {\r\n            if (!outerFirst) {\r\n                this.nextToken(); // consume comma\r\n            }\r\n            outerFirst = false;\r\n            let leftBracketPosition = this.getCurrentPosition();\r\n            if (!this.expect(TokenType.leftBracket, true)) {\r\n                break;\r\n            }\r\n            let line: ConstantNode[] = [];\r\n            let first: boolean = true;\r\n            //@ts-ignore\r\n            while (first || this.tt == TokenType.comma) {\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n                if (this.tt == TokenType.identifier) {\r\n                    if (this.cct.isDoubleQuotedIdentifier) {\r\n                        this.tt = TokenType.stringConstant\r\n                    } else if ((this.cct.value + \"\").toLocaleLowerCase() == \"date\") {\r\n                        this.nextToken();\r\n                    }\r\n                }\r\n\r\n\r\n\r\n                //@ts-ignore\r\n                if (insideListTokens.indexOf(this.tt) < 0) {\r\n                    this.pushError(\"Erwartet wird eine Konstante oder null. Gefunden wurde: \" + this.cct.value, \"error\");\r\n                    this.nextToken();\r\n                } else {\r\n                    line.push({\r\n                        constantType: this.tt,\r\n                        position: this.getCurrentPosition(),\r\n                        constant: this.cct.value,\r\n                        type: TokenType.constantNode\r\n                    });\r\n                    this.nextToken();\r\n                }\r\n            }\r\n            this.expect(TokenType.rightBracket, true);\r\n            if (line.length == 0) {\r\n                this.pushError(\"Eine Zeile kann nur dann in die Tabelle eingefügt werden, wenn sie mindestens einen Spaltenwert besitzt.\", \"error\", leftBracketPosition);\r\n            } else {\r\n                values.push(line);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    parseConstant(): ConstantNode {\r\n        let constantNode: ConstantNode = {\r\n            constantType: this.tt,\r\n            position: this.getCurrentPosition(),\r\n            constant: this.cct.value,\r\n            type: TokenType.constantNode\r\n        }\r\n        this.nextToken();\r\n\r\n        return constantNode;\r\n    }\r\n\r\n    parseSelect(): SelectNode {\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"select\"\r\n\r\n        let columnListStart: TextPosition = {\r\n            line: startPosition.line,\r\n            column: startPosition.column + 6,\r\n            length: 1\r\n        };\r\n\r\n        let node: SelectNode = {\r\n            type: TokenType.keywordSelect,\r\n            position: startPosition,\r\n            endPosition: this.getCurrentPosition(),\r\n            symbolTable: null,\r\n            columnList: [],\r\n            fromNode: null,\r\n            whereNode: null,\r\n            parentStatement: null\r\n        }\r\n\r\n        node.columnList = this.parseColumnList([TokenType.keywordFrom, TokenType.semicolon, TokenType.endofSourcecode], true);\r\n\r\n        let columnListKeywordArray = [\"distinct\", \"as\", \"*\", \"from\"];\r\n        if (node.columnList.findIndex(c => c.type == TokenType.allColumns) >= 0) {\r\n            columnListKeywordArray = [\"from\"];\r\n        }\r\n\r\n        this.module.addCompletionHint(columnListStart, this.getCurrentPositionPlus(2), true, true, columnListKeywordArray)\r\n\r\n        let hasFrom = this.comesToken(TokenType.keywordFrom, true);\r\n        let fromListKeywordArray = [\"where\", \"join\", \"left\", \"right\", \"inner\", \"outer\", \"natural\", \"on\", \"as\", \", \"];\r\n        // parse from ...\r\n        if (!hasFrom) {\r\n            columnListKeywordArray.unshift(\"from\");\r\n        } else {\r\n            node.fromStartPosition = { line: this.lastToken.position.line, column: this.lastToken.position.column + this.lastToken.position.length, length: 0 };\r\n\r\n            let dontHint: string[] = [];\r\n            node.fromNode = this.parseTableOrSubQuery(dontHint);\r\n\r\n            fromListKeywordArray.splice(fromListKeywordArray.indexOf(this.lastToken.value + \"\"), 1);\r\n\r\n            let hintEndPosition = this.getCurrentPositionPlus(2);\r\n            if (this.comesToken(TokenType.semicolon)) {\r\n                hintEndPosition = this.getCurrentPosition();\r\n            }\r\n\r\n            this.module.addCompletionHint(node.fromStartPosition, hintEndPosition, false, true, fromListKeywordArray, dontHint)\r\n            node.fromEndPosition = this.getCurrentPosition();\r\n        }\r\n\r\n        // parse where...\r\n\r\n        let whereKeywordArray = [\"like\"];\r\n        if (this.tt == TokenType.keywordWhere) {\r\n            let position = this.getCurrentPosition();\r\n            let whereStart = this.getCurrentPosition();\r\n            this.nextToken();\r\n            node.whereNode = this.parseTerm();\r\n            this.module.addCompletionHint(whereStart, this.getCurrentPositionPlus(4), true, true, whereKeywordArray)\r\n            // if (node.whereNode != null) node.whereNode.position = position;\r\n        } else {\r\n            fromListKeywordArray.push(\"where\");\r\n        }\r\n\r\n        let groupKeywordArray = [];\r\n        if (this.tt == TokenType.keywordGroup) {\r\n            let groupStart = this.getCurrentPosition();\r\n            node.groupByNode = this.parseGroupBy();\r\n            this.module.addCompletionHint(groupStart, this.getCurrentPosition(), true, true, groupKeywordArray);\r\n        } else {\r\n            whereKeywordArray.push(\"group by\");\r\n        }\r\n\r\n        if (this.tt == TokenType.keywordOrder) {\r\n            let orderStart = this.getCurrentPosition();\r\n            node.orderByNode = this.parseOrderBy();\r\n            this.module.addCompletionHint(orderStart, this.getCurrentPosition(), true, true, [\"asc\", \"desc\"]);\r\n        } else {\r\n            whereKeywordArray.push(\"order by\");\r\n            groupKeywordArray.push(\"order by\");\r\n        }\r\n\r\n        if (this.tt == TokenType.keywordLimit) {\r\n            node.limitNode = this.parseLimit();\r\n        }\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n        node.endPosition.column += 3;\r\n\r\n        return node;\r\n    }\r\n\r\n    parseLimit(): LimitNode {\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n        let numberOfRows: TermNode = this.parseTerm();\r\n        let ln: LimitNode = {\r\n            type: TokenType.keywordLimit,\r\n            position: position,\r\n            numberOfRows: numberOfRows\r\n        }\r\n        if (this.tt == TokenType.keywordOffset) {\r\n            this.nextToken();\r\n            ln.offset = this.parseTerm();\r\n        }\r\n        return ln;\r\n    }\r\n\r\n    parseGroupBy(): GroupByNode {\r\n        let position = this.getCurrentPosition();\r\n        this.expect(TokenType.keywordGroup, true);\r\n        this.expect(TokenType.keywordBy, true);\r\n        let gbn: GroupByNode = {\r\n            type: TokenType.keywordGroup,\r\n            columnList: [],\r\n            position: position\r\n        }\r\n        let tokenTypesAfterGroupBy = [TokenType.keywordHaving, TokenType.keywordSelect, TokenType.keywordOrder, TokenType.keywordLimit, TokenType.rightBracket, TokenType.semicolon];\r\n        gbn.columnList = this.parseColumnList(tokenTypesAfterGroupBy, false).map(columnNode => columnNode.term);\r\n        if (this.tt == TokenType.keywordHaving) {\r\n            this.nextToken();\r\n            gbn.having = this.parseTerm();\r\n        }\r\n        return gbn;\r\n    }\r\n\r\n    parseOrderBy(): OrderByNode[] {\r\n        this.expect(TokenType.keywordOrder, true);\r\n        this.expect(TokenType.keywordBy, true);\r\n\r\n        let obnList: OrderByNode[] = [];\r\n        let first: boolean = true;\r\n\r\n        do {\r\n            if (first) {\r\n                first = false;\r\n            } else {\r\n                this.expect(TokenType.comma, true);\r\n            }\r\n            let column: TermNode = this.parseTerm();\r\n            let obn: OrderByNode = {\r\n                type: TokenType.keywordOrder,\r\n                position: this.getCurrentPosition(),\r\n                column: column\r\n            }\r\n            if ([TokenType.keywordAscending, TokenType.keywordDescending].indexOf(this.tt) >= 0) this.nextToken();\r\n            if (this.tt == TokenType.keywordNulls) {\r\n                this.nextToken();\r\n                this.expect([TokenType.keywordFirst, TokenType.keywordLast], true);\r\n            }\r\n            obnList.push(obn);\r\n        } while (this.tt == TokenType.comma);\r\n\r\n        return obnList;\r\n    }\r\n\r\n    parseTableOrSubQuery(dontHint: string[]): TableOrSubqueryNode {\r\n\r\n        let leftSide: TableOrSubqueryNode = this.parseAtomicTableOrSubQuery(dontHint);\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        while (this.parseJoinOperator()) {\r\n\r\n            let rightSide: TableOrSubqueryNode = this.parseAtomicTableOrSubQuery(dontHint);\r\n\r\n            leftSide = {\r\n                type: TokenType.keywordJoin,\r\n                firstOperand: leftSide,\r\n                secondOperand: rightSide,\r\n                position: position,\r\n            }\r\n\r\n            if (this.tt == TokenType.keywordOn) {\r\n                leftSide.on = this.parseTerm();\r\n            }\r\n\r\n        }\r\n\r\n        return leftSide;\r\n\r\n    }\r\n\r\n    parseJoinOperator(): boolean {\r\n        if (this.tt == TokenType.comma) {\r\n            this.nextToken();\r\n            return true;\r\n        }\r\n        if (this.tt == TokenType.keywordNatural) this.nextToken();\r\n        switch (this.tt) {\r\n            case TokenType.keywordLeft:\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.keywordOuter) this.nextToken();\r\n                return this.expect(TokenType.keywordJoin, true);\r\n            case TokenType.keywordInner:\r\n            case TokenType.keywordCross:\r\n                this.nextToken();\r\n                return this.expect(TokenType.keywordJoin, true);\r\n            case TokenType.keywordJoin:\r\n                this.nextToken();\r\n                return true;\r\n            default: return false;\r\n        }\r\n    }\r\n\r\n    parseAtomicTableOrSubQuery(dontHint: string[]): TableOrSubqueryNode {\r\n\r\n        if (!this.expect([TokenType.identifier, TokenType.leftBracket], false)) {\r\n            return null;\r\n        }\r\n\r\n        if (this.tt == TokenType.leftBracket) {\r\n            this.nextToken();\r\n            let ret: TableOrSubqueryNode;\r\n            //@ts-ignore\r\n            if (this.tt == TokenType.keywordSelect) {\r\n                let position = this.getCurrentPosition();\r\n                let selectStatement = this.parseSelect();\r\n                ret = {\r\n                    type: TokenType.subquery,\r\n                    alias: null,\r\n                    position: position,\r\n                    query: selectStatement\r\n                }\r\n            } else {\r\n                ret = this.parseTableOrSubQuery(dontHint);\r\n            }\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n\r\n            //@ts-ignore\r\n            if (this.tt == TokenType.keywordAs && ret.type == TokenType.subquery) {\r\n                this.nextToken();\r\n                if (this.expect(TokenType.identifier, false)) {\r\n                    ret.alias = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    dontHint.push(ret.alias);\r\n                }\r\n            }\r\n\r\n            return ret;\r\n        }\r\n\r\n        if (this.tt == TokenType.identifier) {\r\n            let node: TableNode = {\r\n                type: TokenType.table,\r\n                identifier: <string>this.cct.value,\r\n                alias: null,\r\n                position: this.getCurrentPosition()\r\n            }\r\n            dontHint.push(node.identifier);\r\n            this.nextToken();\r\n\r\n            //@ts-ignore\r\n            if (this.tt == TokenType.keywordAs) {\r\n                this.nextToken();\r\n                if (this.expect(TokenType.identifier, false)) {\r\n                    node.alias = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    dontHint.push(node.alias);\r\n                }\r\n\r\n            }\r\n\r\n            return node;\r\n        }\r\n\r\n    }\r\n\r\n    parseColumnList(tokenTypesAfterListEnd: TokenType[], allowAliases: boolean): ColumnNode[] {\r\n        let columns: ColumnNode[] = [];\r\n\r\n        while ([TokenType.stringConstant, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.booleanConstant,\r\n        TokenType.identifier, TokenType.multiplication, TokenType.leftBracket, TokenType.keywordDistinct].indexOf(this.tt) >= 0) {\r\n            if (this.tt == TokenType.multiplication) {\r\n                columns.push({\r\n                    term: null,\r\n                    alias: null,\r\n                    distinct: false,\r\n                    position: this.getCurrentPosition(),\r\n                    type: TokenType.allColumns\r\n                });\r\n                this.nextToken();\r\n            } else {\r\n                let distinct = this.comesToken(TokenType.keywordDistinct, true);\r\n                let columnTerm = this.parseTerm();\r\n                if (columnTerm != null) {\r\n                    let column: ColumnNode = {\r\n                        type: TokenType.column,\r\n                        term: columnTerm,\r\n                        distinct: distinct,\r\n                        position: columnTerm.position\r\n                    }\r\n                    columns.push(column);\r\n                    if (this.comesToken(TokenType.keywordAs)) {\r\n                        this.nextToken();\r\n                        if (this.expect(TokenType.identifier, false)) {\r\n                            column.alias = \"\" + this.cct.value;\r\n                        }\r\n                        this.nextToken();\r\n                    }\r\n                }\r\n            }\r\n            if (tokenTypesAfterListEnd.indexOf(this.tt) >= 0 || this.isEnd()) {\r\n                break;\r\n            }\r\n            this.expect(TokenType.comma, true);\r\n        }\r\n\r\n        if (columns.length == 0) {\r\n            this.pushError(\"Es fehlt die kommaseparierte Liste der gewünschten Spalten.\", \"error\");\r\n        }\r\n\r\n        return columns;\r\n    }\r\n\r\n\r\n    parseTerm(): TermNode {\r\n        return this.parseTermBinary(0);\r\n    }\r\n\r\n    parseTermBinary(precedence: number): TermNode {\r\n\r\n        let left: TermNode;\r\n        if (precedence < Parser.operatorPrecedence.length - 1) {\r\n            left = this.parseTermBinary(precedence + 1);\r\n        } else {\r\n            left = this.parseUnary();\r\n        }\r\n\r\n        let operators = Parser.operatorPrecedence[precedence];\r\n\r\n        if (left == null || operators.indexOf(this.tt) < 0) {\r\n            return left;\r\n        }\r\n\r\n        let first = true;\r\n\r\n        while (first || operators.indexOf(this.tt) >= 0) {\r\n\r\n            let operator: TokenType = this.tt;\r\n\r\n            first = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            this.nextToken();\r\n            let right: TermNode;\r\n            if (precedence < Parser.operatorPrecedence.length - 1) {\r\n                right = this.parseTermBinary(precedence + 1);\r\n            } else {\r\n                right = this.parseUnary();\r\n            }\r\n\r\n            left = {\r\n                type: TokenType.binaryOp,\r\n                position: position,\r\n                operator: operator,\r\n                firstOperand: left,\r\n                secondOperand: right\r\n            };\r\n\r\n\r\n        }\r\n\r\n        return left;\r\n\r\n    }\r\n\r\n\r\n    // -, not, this, super, a.b.c[][].d, a.b(), b() (== this.b()), super.b(), super()\r\n    parseUnary(): TermNode {\r\n\r\n        let term: TermNode;\r\n        let position: TextPosition = this.getCurrentPosition();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n                return this.parseBracket();\r\n            case TokenType.keywordNot:\r\n                position = position;\r\n                this.nextToken();\r\n                term = this.parseTermBinary(2);\r\n                return {\r\n                    type: TokenType.unaryOp,\r\n                    position: position,\r\n                    operand: term,\r\n                    operator: TokenType.keywordNot\r\n                }\r\n            case TokenType.minus:\r\n                // case TokenType.not:\r\n                position = position;\r\n                let tt1 = this.tt;\r\n                this.nextToken();\r\n                term = this.parseUnary();\r\n\r\n                return {\r\n                    type: TokenType.unaryOp,\r\n                    position: position,\r\n                    operand: term,\r\n                    operator: tt1\r\n                };\r\n\r\n            case TokenType.integerConstant:\r\n            case TokenType.charConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n                term = {\r\n                    type: TokenType.constantNode,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: this.tt,\r\n                    constant: this.cct.value\r\n                };\r\n                let isStringConstant = this.tt == TokenType.stringConstant;\r\n                this.nextToken();\r\n\r\n                if (isStringConstant) return this.parseDotOrArrayChains(term);\r\n\r\n                return term;\r\n            case TokenType.identifier: // attribute of current class or local variable\r\n\r\n                let identifier1 = <string>this.cct.value;\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    let rightBracketPosition = parameters.rightBracketPosition;\r\n\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position1,\r\n                        rightBracketPosition: rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        identifier: identifier1,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.identifier,\r\n                        identifier: identifier1,\r\n                        position: position\r\n                    }\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.dot) {\r\n                        let position = this.getCurrentPosition();\r\n                        this.nextToken();\r\n                        this.expect(TokenType.identifier, false);\r\n                        let secondIdentifier: IdentifierNode = {\r\n                            type: TokenType.identifier,\r\n                            identifier: <string>this.cct.value,\r\n                            position: this.getCurrentPosition()\r\n                        }\r\n                        this.nextToken();\r\n                        term = {\r\n                            type: TokenType.dot,\r\n                            identifierLeft: <IdentifierNode>term,\r\n                            identifierRight: secondIdentifier,\r\n                            position: position\r\n                        }\r\n\r\n                    } else if ([TokenType.isNull, TokenType.isNotNull].indexOf(this.tt) >= 0) {\r\n                        term = {\r\n                            type: TokenType.unaryOp,\r\n                            operand: term,\r\n                            operator: this.tt,\r\n                            position: position\r\n                        };\r\n                        this.nextToken();\r\n                    }\r\n                }\r\n\r\n                return term;\r\n            default:\r\n                this.pushError(\"Erwartet wird eine Variable, ein Methodenaufruf oder eine Konstante. Gefunden wurde: \" + this.cct.value);\r\n                return null;\r\n        }\r\n\r\n    }\r\n\r\n    parseList(): ListNode {\r\n        let node: ListNode = {\r\n            type: TokenType.list,\r\n            position: this.getCurrentPosition(),\r\n            elements: []\r\n        }\r\n\r\n        let constantTypes = [TokenType.charConstant, TokenType.stringConstant, TokenType.booleanConstant, TokenType.floatingPointConstant, TokenType.integerConstant];\r\n\r\n        while (constantTypes.indexOf(this.tt) >= 0) {\r\n            node.elements.push({\r\n                type: TokenType.constantNode,\r\n                constant: this.cct.value,\r\n                constantType: this.tt,\r\n                position: this.cct.position\r\n            });\r\n            this.nextToken();\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            }\r\n            this.nextToken();\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    parseBracket(): TermNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n        let tokenBeforeBracket = this.lastToken;\r\n        this.nextToken(); // consume (\r\n\r\n        if (this.tt == TokenType.keywordSelect) {\r\n            let selectNode = this.parseSelect();\r\n            this.expect(TokenType.rightBracket, true);\r\n            return selectNode;\r\n        } else if ([TokenType.comma, TokenType.rightBracket].indexOf(this.ct[1].tt) >= 0 &&\r\n            [TokenType.keywordIn, TokenType.keywordNotIn].indexOf(tokenBeforeBracket.tt) >= 0) {\r\n            let listNode = this.parseList();\r\n            this.expect(TokenType.rightBracket, true);\r\n            return listNode;\r\n        } else {\r\n            let term = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            let bracketsNode: BracketsNode = {\r\n                position: rightBracketPosition,\r\n                type: TokenType.rightBracket,\r\n                termInsideBrackets: term\r\n            }\r\n\r\n\r\n            return bracketsNode;\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    parseMethodCallParameters(): { rightBracketPosition: TextPosition, nodes: TermNode[], commaPositions: TextPosition[] } {\r\n        // Assumption: current token is (        \r\n        this.nextToken();\r\n        if (this.tt == TokenType.rightBracket) {\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n            return { rightBracketPosition: rightBracketPosition, nodes: [], commaPositions: [] };\r\n        }\r\n\r\n        let parameters: TermNode[] = [];\r\n        let commaPositions: TextPosition[] = [];\r\n\r\n        while (true) {\r\n            let pos = this.pos;\r\n\r\n            if (this.tt == TokenType.multiplication) {\r\n                this.nextToken();\r\n                parameters.push({\r\n                    type: TokenType.allColumns,\r\n                    position: this.getCurrentPosition(),\r\n                });\r\n            } else {\r\n                let parameter = this.parseTerm();\r\n                if (parameter != null) {\r\n                    parameters.push(parameter);\r\n                }\r\n            }\r\n\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            } else {\r\n                commaPositions.push(this.getCurrentPosition());\r\n                this.nextToken(); // consume comma\r\n            }\r\n\r\n            // emergency-step:\r\n            if (this.pos == pos) {\r\n                this.nextToken();\r\n            }\r\n\r\n        }\r\n\r\n        let position = this.getCurrentPosition();\r\n        let rightBracketFound = this.expect(TokenType.rightBracket, true);\r\n\r\n        return { rightBracketPosition: rightBracketFound ? position : null, nodes: parameters, commaPositions: commaPositions };\r\n\r\n    }\r\n\r\n    parseDotOrArrayChains(term: TermNode): TermNode {\r\n\r\n        if (term == null) return null;\r\n\r\n        while (this.comesToken([TokenType.dot, TokenType.leftSquareBracket])) {\r\n            if (this.tt == TokenType.dot) {\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.identifier) {\r\n                    this.pushError(\"Erwartet wird der Bezeichner eines Attributs oder einer Methode, gefunden wurde: \" + this.cct.value);\r\n                    return term;\r\n                }\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position,\r\n                        rightBracketPosition: parameters.rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        identifier: identifier,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                }\r\n                // else {\r\n                //     term = {\r\n                //         type: TokenType.pushAttribute,\r\n                //         position: position,\r\n                //         identifier: identifier,\r\n                //         object: term\r\n                //     }\r\n                // }\r\n\r\n            }\r\n        }\r\n\r\n        return term;\r\n    }\r\n\r\n\r\n}","import { ColumnStructure, TableStructure } from \"../../tools/DatabaseTools.js\";\nimport { SQLType, SQLBaseType, SQLDerivedType } from \"./SQLTypes.js\";\n\n\nexport class Column {\n\n    references: Column;\n    fromColumnStructure?: ColumnStructure;\n    notNull: boolean;\n\n    constructor(public identifier: string, public type: SQLType, public table: Table, public isPrimaryKey: boolean, public isNullable: boolean, public defaultValue: string, public isAutoIncrement){\n\n    }\n\n    static fromColumnStructure(cs: ColumnStructure, table: Table): Column {\n\n        let regex1 = /^(\\w*) *(?:\\((.*)\\))?.*$/;\n\n        let typeMatch1 = cs.completeTypeSQL.match(regex1);\n        let baseTypeIdentifier: string = typeMatch1[1];\n        let commaSeparatedParameters: string = typeMatch1[2];\n\n        let parameterValues: number[] = [];\n        if(commaSeparatedParameters != null){\n            parameterValues = commaSeparatedParameters.split(',').map(v => parseInt(v.trim()));           \n        }\n\n        let type: SQLType = SQLBaseType.getBaseType(baseTypeIdentifier);\n        if(parameterValues.length > 0 && type != null){\n            type = new SQLDerivedType(<SQLBaseType>type, parameterValues);\n        }\n\n        let column = new Column(cs.name, type, table, cs.isPrimaryKey, !cs.isPrimaryKey, cs.defaultValue, cs.isAutoIncrement);\n        column.notNull = cs.notNull;\n        \n        column.fromColumnStructure = cs;\n\n        return column;\n    }\n\n}\n\nexport class Table {\n    \n    public columns: Column[] = [];\n\n    public size: number;\n\n    constructor(public identifier: string){\n\n    }\n\n    private static fromTableStructure(ts: TableStructure): Table {\n        let table: Table = new Table(ts.name);\n        table.columns = ts.columns.map( column => Column.fromColumnStructure(column, table));\n        table.size = ts.size;\n        return table;\n    }\n\n    static fromTableStructureList(tsList: TableStructure[]): Table[]{\n\n        if(tsList == null) tsList = [];\n\n        let tables: Table[] = tsList.map(ts => Table.fromTableStructure(ts));\n\n        let columnStructureToColumnMap: Map<ColumnStructure, Column> = new Map();\n        for(let table of tables){\n            for(let column of table.columns){\n                columnStructureToColumnMap.set(column.fromColumnStructure, column);\n            }\n        }\n\n        for(let table of tables){\n            for(let column of table.columns){\n                let referencedCs = column.fromColumnStructure.references;\n                if(referencedCs != null){\n                    let referencedColumn = columnStructureToColumnMap.get(referencedCs);\n                    column.references = referencedColumn;\n                }\n            }\n        }\n\n        return tables;\n    }\n\n}","import { DatabaseStructure } from \"../../tools/DatabaseTools.js\";\r\nimport { TextPosition } from \"../lexer/Token.js\";\r\nimport { Table, Column } from \"./SQLTable.js\";\r\n\r\nexport type Symbol = {\r\n    identifier: string;\r\n    table?: Table;\r\n    column?: Column;\r\n    tableAlias?: string;\r\n    posOfDefinition: TextPosition;\r\n    referencedOnPositions: TextPosition[];\r\n}\r\n\r\nexport class SymbolTable {\r\n    parent: SymbolTable; // SymbolTable of parent scope\r\n    positionFrom: TextPosition;\r\n    positionTo: TextPosition;\r\n\r\n    childSymbolTables: SymbolTable[] = [];\r\n\r\n    private symbols: Map<string, Symbol[]> = new Map();\r\n    symbolList: Symbol[] = [];\r\n\r\n    constructor(parentSymbolTable: SymbolTable, positionFrom: TextPosition, positionTo: TextPosition) {\r\n\r\n        this.parent = parentSymbolTable;\r\n\r\n        this.positionFrom = positionFrom;\r\n        this.positionTo = positionTo;\r\n\r\n\r\n        if (this.parent != null) {\r\n            this.parent.childSymbolTables.push(this);\r\n        }\r\n    }\r\n\r\n    extractDatabaseStructure(databaseStructure: DatabaseStructure) {\r\n        for (let table of Table.fromTableStructureList(databaseStructure?.tables)) {\r\n\r\n            this.storeTableSymbols(table);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    storeTableSymbols(table: Table){\r\n        this.storeSymbol({\r\n            identifier: table.identifier,\r\n            posOfDefinition: null,\r\n            referencedOnPositions: [],\r\n            table: table\r\n        });\r\n\r\n        for (let column of table.columns) {\r\n            this.storeSymbol({\r\n                identifier: column.identifier,\r\n                posOfDefinition: null,\r\n                referencedOnPositions: [],\r\n                column: column\r\n            });\r\n        }\r\n    }\r\n\r\n    storeSymbol(symbol: Symbol) {\r\n        let list: Symbol[] = this.symbols.get(symbol.identifier.toLowerCase());\r\n        if (list == null) {\r\n            list = [symbol];\r\n            this.symbols.set(symbol.identifier.toLowerCase(), list);\r\n        } else {\r\n            list.push(symbol);\r\n        }\r\n        this.symbolList.push(symbol);\r\n    }\r\n\r\n    findTableAtPosition(line: number, column: number): SymbolTable {\r\n\r\n        if (!this.containsPosition(line, column)) {\r\n            return null;\r\n        }\r\n\r\n        let shortestSymbolTableContainingPosition = null;\r\n        let shortestPosition = 10000000;\r\n\r\n        for (let st of this.childSymbolTables) {\r\n            if (st.containsPosition(line, column)) {\r\n                let st1 = st.findTableAtPosition(line, column);\r\n                if (st1.positionTo.line - st1.positionFrom.line < shortestPosition) {\r\n                    shortestSymbolTableContainingPosition = st1;\r\n                    shortestPosition = st1.positionTo.line - st1.positionFrom.line;\r\n                }\r\n            }\r\n            // if(st.containsPosition(line, column) && st.positionTo.line - st.positionFrom.line < shortestPosition){\r\n            //     shortestSymbolTableContainingPosition = st;\r\n            //     shortestPosition = st.positionTo.line - st.positionFrom.line;\r\n            // }\r\n        }\r\n\r\n        if (shortestSymbolTableContainingPosition != null) {\r\n            return shortestSymbolTableContainingPosition;\r\n        } else {\r\n            return this;\r\n        }\r\n\r\n    }\r\n\r\n    containsPosition(line: number, column: number) {\r\n        if (line < this.positionFrom.line || line > this.positionTo.line) {\r\n            return false;\r\n        }\r\n\r\n        if (line == this.positionFrom.line && column < this.positionFrom.column) return false;\r\n        if (line == this.positionTo.line && column > this.positionTo.column + 1) return false;\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    findTable(identifier: string): Table {\r\n        let tables = this.findTables(identifier);\r\n        if(tables.length == 0) return null;\r\n        return tables[0].table;\r\n    }\r\n\r\n    findTables(identifier: string): Symbol[] {\r\n\r\n        let symbolTable: SymbolTable = this;\r\n        while(symbolTable != null){\r\n\r\n            let symbols = symbolTable.symbols.get(identifier.toLowerCase());\r\n            if(symbols != null){\r\n                symbols = symbols.filter(s => s.table != null);\r\n                if(symbols.length > 0){\r\n                    return symbols;\r\n                }\r\n            }\r\n\r\n            symbolTable = symbolTable.parent;\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    findColumn(identifier: string): Symbol[] {\r\n\r\n        let symbolTable: SymbolTable = this;\r\n        while(symbolTable != null){\r\n\r\n            let symbols = symbolTable.symbols.get(identifier.toLowerCase());\r\n            if(symbols != null){\r\n                symbols = symbols.filter(s => s.column != null);\r\n                if(symbols.length > 0){\r\n                    return symbols;\r\n                }\r\n            }\r\n\r\n            symbolTable = symbolTable.parent;\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { SQLBaseType, SQLType } from \"./SQLTypes.js\";\r\n\r\nexport class SQLMethodParameter {\r\n    type: SQLType;\r\n    constructor(public identifier: string, type: string){\r\n        this.type = SQLBaseType.getBaseType(type);\r\n    }\r\n}\r\n\r\nexport class SQLMethod {\r\n    acceptsStarParameter: boolean = false;\r\n    public returnType: SQLType;\r\n    constructor(public identifier: string, public isAggregating: boolean, returnType: string, public parameters: SQLMethodParameter[]){\r\n        this.returnType = SQLBaseType.getBaseType(returnType);\r\n    }\r\n\r\n}\r\n\r\nexport class SQLMethodStore {\r\n\r\n    static instance: SQLMethodStore;\r\n    public methods: SQLMethod[] = [];\r\n\r\n    static getInstance():SQLMethodStore {\r\n        if(this.instance == null){\r\n            this.instance = new SQLMethodStore();\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    constructor(){\r\n        this.pushOneParameterMethod(\"max\" ,\"integer\", \"integer\");\r\n        this.pushOneParameterMethod(\"max\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"min\" ,\"integer\", \"integer\");\r\n        this.pushOneParameterMethod(\"min\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"avg\" ,\"integer\", \"integer\");\r\n        this.pushOneParameterMethod(\"avg\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"sum\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"sum\" ,\"integer\", \"integer\");\r\n\r\n        let countMethod = new SQLMethod(\"count\", true, \"integer\", [new SQLMethodParameter(\"spalte\", \"text\")]);\r\n        countMethod.acceptsStarParameter = true;\r\n        this.methods.push(countMethod);\r\n    }\r\n    \r\n    getMethods(identifier: string){\r\n        return this.methods.filter(m => m.identifier == identifier.toLowerCase());\r\n    }\r\n\r\n\r\n    pushOneParameterMethod(identifier: string, returnType: string, parameterType: string){\r\n        this.methods.push(new SQLMethod(identifier, true, returnType, [new SQLMethodParameter(\"spalte\", parameterType)]));\r\n\r\n    }\r\n}","export function hash(s: string){\r\n    let hash: number = 0;\r\n    let chr: number;\r\n    for (let i = 0; i < s.length; i++) {\r\n      chr   = s.charCodeAt(i);\r\n      hash  = ((hash << 5) - hash) + chr;\r\n      hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n\r\nexport function escapeHtml(unsafe: string): string {\r\n  return unsafe\r\n      .replace(/['\"]+/g, '')\r\n       .replace(/&/g, \"&amp;\")\r\n       .replace(/</g, \"&lt;\")\r\n       .replace(/>/g, \"&gt;\")\r\n       .replace(/\"/g, \"&quot;\")\r\n       .replace(/'/g, \"&#039;\");\r\n}\r\n\r\nexport function dateToString(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth() + 1)}.${date.getFullYear()}, ${twoDez(date.getHours())}:${twoDez(date.getMinutes())}`;\r\n}\r\n\r\nexport function dateToStringWithoutTime(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth())}.${date.getFullYear()}`;\r\n}\r\n\r\nfunction twoDez(z: number):string {\r\n  if(z < 10) return \"0\" + z;\r\n  return \"\" + z;\r\n}\r\n\r\nexport function stringToDate(text: string): Date {\r\n\r\n  let match = text.match(/^(\\d{2})\\.(\\d{2})\\.(\\d{4}), (\\d{2}):(\\d{2})$/);\r\n\r\n  let date: Date = new Date(Number.parseInt(match[3]), Number.parseInt(match[2]), Number.parseInt(match[1]), Number.parseInt(match[4]), Number.parseInt(match[5]) );\r\n\r\n  return date;\r\n}\r\n\r\nexport function stringWrap(s: string, length: number ): string{\r\n  return s.replace(\r\n    new RegExp(`(?![^\\\\n]{1,${length}}$)([^\\\\n]{1,${length}})\\\\s`, 'g'), '$1\\n'\r\n  );\r\n} \r\n\r\nexport function formatAsJavadocComment(s: string, indent: number|string = \"\"): string {\r\n  let indentString = \"\";\r\n\r\n  if(typeof indent == \"string\"){\r\n    indentString = indent;\r\n  } else {\r\n    for(let i = 0; i < indent; i++){\r\n      indentString += \" \";\r\n    }\r\n  }\r\n\r\n  s = stringWrap(s, 60);\r\n  if(s.length > 0) s = \"\\n\" + s;\r\n  s = indentString + \"/**\" + s.replace(/\\n/g, \"\\n\" + indentString + \" * \") + \"\\n\" + indentString + \" */\";\r\n  return s;\r\n}\r\n\r\n\r\nexport function isDate(inputText: string) {\r\n\r\n      if (inputText == null || typeof inputText != 'string') return false;\r\n\r\n      // var dateformat = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/;\r\n      var dateformat = /^\\d{4}[\\/\\-](0?[1-9]|1[012])[\\/\\-](0?[1-9]|[12][0-9]|3[01])$/;\r\n      // Match the date format through regular expression\r\n      if (inputText.match(dateformat)) {\r\n          //Test which seperator is used '/' or '-'\r\n          var opera1 = inputText.split('/');\r\n          var opera2 = inputText.split('-');\r\n          var lopera1 = opera1.length;\r\n          var lopera2 = opera2.length;\r\n          // Extract the string into month, date and year\r\n          if (lopera1 > 1) {\r\n              var pdate = inputText.split('/');\r\n          }\r\n          else if (lopera2 > 1) {\r\n              var pdate = inputText.split('-');\r\n          }\r\n          if (pdate.length != 3) return false;\r\n          var dd = parseInt(pdate[2]);\r\n          var mm = parseInt(pdate[1]);\r\n          var yy = parseInt(pdate[0]);\r\n          // Create list of days of a month [assume there is no leap year by default]\r\n          var ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n          if (mm == 1 || mm > 2) {\r\n              if (dd > ListofDays[mm - 1]) {\r\n                  return false;\r\n              }\r\n          }\r\n          if (mm == 2) {\r\n              var lyear = false;\r\n              if ((!(yy % 4) && yy % 100) || !(yy % 400)) {\r\n                  lyear = true;\r\n              }\r\n              if ((lyear == false) && (dd >= 29)) {\r\n                  return false;\r\n              }\r\n              if ((lyear == true) && (dd > 29)) {\r\n                  return false;\r\n              }\r\n              return true;\r\n          }\r\n\r\n          return true;\r\n\r\n      }\r\n      else {\r\n          return false;\r\n      }\r\n  }\r\n\r\n  export function isDateTime(inputText: string) {\r\n\r\n      if (inputText == null || typeof inputText != 'string') return false;\r\n\r\n      // var dateformat = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/;\r\n      var dateformat = /^\\d{4}[\\-](0[1-9]|1[012])[\\-](0[1-9]|[12][0-9]|3[01]) ([01][1-9]|2[0123]):([0-5][0-9]):([0-5][0-9])$/;\r\n      // Match the date format through regular expression\r\n      if (inputText.match(dateformat)) {\r\n          var splitStr = inputText.split(' ');\r\n          var dateStr = splitStr[0];\r\n          //var timeStr = splitStr[1];\r\n\r\n          if (dateStr.length != 10) return false;\r\n          var dd = parseInt(dateStr.substring(8,10));\r\n          var mm = parseInt(dateStr.substring(5, 7));\r\n          var yy = parseInt(dateStr.substring(0, 4));\r\n          // Create list of days of a month [assume there is no leap year by default]\r\n          var ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n          if (mm == 1 || mm > 2) {\r\n              if (dd > ListofDays[mm - 1]) {\r\n                  return false;\r\n              }\r\n          }\r\n          if (mm == 2) {\r\n              var lyear = false;\r\n              if ((!(yy % 4) && yy % 100) || !(yy % 400)) {\r\n                  lyear = true;\r\n              }\r\n              if ((lyear == false) && (dd >= 29)) {\r\n                  return false;\r\n              }\r\n              if ((lyear == true) && (dd > 29)) {\r\n                  return false;\r\n              }\r\n              return true;\r\n          }\r\n\r\n          return true;\r\n\r\n      }\r\n      else {\r\n          return false;\r\n      }\r\n  }\r\n  export function isTime(inputText: string) {\r\n\r\n      if (inputText == null || typeof inputText != 'string') return false;\r\n\r\n      var timeformat = /^([01][0-9]|2[0123]):([0-5][0-9]):([0-5][0-9])$/;\r\n      // Match the date format through regular expression\r\n      return inputText.match(timeformat) != null;\r\n  }\r\n","import { DatabaseTool } from \"../../tools/DatabaseTools.js\";\nimport { TextPosition, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\nimport { CompletionHint, Module } from \"./Module.js\";\nimport { Symbol, SymbolTable } from \"./SymbolTable.js\";\nimport { AlterTableNode, ASTNode, BinaryOpNode, CreateTableNode, DeleteNode, DotNode, DropTableNode, IdentifierNode, InsertNode, MethodcallNode, SelectNode, TableOrSubqueryNode, TermNode, UpdateNode } from \"./Ast.js\";\nimport { Error, ErrorLevel, QuickFix } from \"../lexer/Lexer.js\";\nimport { Column, Table } from \"./SQLTable.js\";\nimport { SQLBaseType, SQLType } from \"./SQLTypes.js\";\nimport { SQLMethodStore } from \"./SQLMethods.js\";\nimport { isDate, isDateTime, isTime } from \"../../tools/StringTools.js\";\n\n\nexport class SymbolResolver {\n\n    symbolTableStack: SymbolTable[] = [];\n    errorList: Error[];\n    module: Module;\n    databaseTool: DatabaseTool;\n    tables: Table[];\n\n    constructor(databaseTool: DatabaseTool) {\n        this.databaseTool = databaseTool;\n        this.tables = Table.fromTableStructureList(databaseTool.databaseStructure?.tables);\n    }\n\n    start(module: Module) {\n        this.module = module;\n        this.symbolTableStack = [];\n        this.errorList = [];\n\n        module.mainSymbolTable = new SymbolTable(null, { column: 0, line: 0, length: 0 }, { column: 0, line: 100000, length: 0 })\n\n        this.symbolTableStack.push(module.mainSymbolTable);\n\n        for (let statement of this.module.sqlStatements) {\n\n            let errorsBeforeStatement = this.errorList.length;\n\n            let astNode = statement.ast;\n            if (astNode == null) continue;\n\n            switch (astNode.type) {\n                case TokenType.keywordSelect:\n                    this.resolveSelect(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordInsert:\n                    this.resolveInsert(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordCreate:\n                    this.resolveCreateTable(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordUpdate:\n                    this.resolveUpdate(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordDelete:\n                    this.resolveDelete(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordDrop:\n                    this.resolveDropTable(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordAlter:\n                    this.resolveAlterTable(astNode)\n                    this.symbolTableStack.pop();\n                    break;\n\n                default:\n                    break;\n            }\n\n            statement.hasErrors = statement.hasErrors || this.errorList.length > errorsBeforeStatement;\n\n        }\n\n        module.errors[2] = this.errorList;\n\n    }\n\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position: TextPosition, quickFix?: QuickFix) {\n        // if (position == null) position = Object.assign({}, this.position);\n        this.errorList.push({\n            text: text,\n            position: position,\n            quickFix: quickFix,\n            level: errorLevel\n        });\n    }\n\n\n    getCurrentSymbolTable(): SymbolTable {\n        return this.symbolTableStack[this.symbolTableStack.length - 1];\n    }\n\n    pushNewSymbolTable(positionFrom: TextPosition, positionTo: TextPosition): SymbolTable {\n        if (positionTo == null) {\n            positionTo = {\n                line: 100000,\n                column: 1,\n                length: 1\n            }\n        };\n        let st: SymbolTable = new SymbolTable(this.getCurrentSymbolTable(), positionFrom, positionTo);\n        this.symbolTableStack.push(st);\n        return st;\n    }\n\n    resolveSelect(selectNode: SelectNode): Table {\n        let resultTable: Table = new Table(null);\n\n        selectNode.symbolTable = this.pushNewSymbolTable(selectNode.position, selectNode.endPosition);\n\n        // From\n        let joinedTables: Table[] = [];\n        this.resolveTableOrSubQuery(selectNode.fromNode, joinedTables);\n        if (selectNode.fromStartPosition != null) {\n            let fromSymbolTable = new SymbolTable(this.getCurrentSymbolTable(), selectNode.fromStartPosition, selectNode.fromEndPosition);\n            fromSymbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n        }\n\n        // Column list\n        for (let columnNode of selectNode.columnList) {\n            if (columnNode.type == TokenType.allColumns) {\n                for (let table of joinedTables) {\n                    for (let column of table.columns) {\n                        let c: Column = new Column(column.identifier, column.type, resultTable, false, true, column.defaultValue, column.isAutoIncrement);\n                        resultTable.columns.push(c);\n                    }\n                }\n            } else {\n                this.resolveTerm(columnNode.term);\n                let c1: Column = new Column(columnNode.alias, columnNode.term.sqlType, resultTable, false, true, null, false);\n                resultTable.columns.push(c1);\n                if (c1.identifier != null) {\n                    selectNode.symbolTable.storeSymbol({\n                        identifier: c1.identifier,\n                        posOfDefinition: columnNode.term.position,\n                        referencedOnPositions: [],\n                        column: c1\n                    })\n                }\n            }\n        }\n\n        // where...\n        if (selectNode.whereNode != null) {\n            let whereType = this.resolveTerm(selectNode.whereNode);\n            if (whereType != null && whereType.getBaseTypeName() != \"boolean\") {\n                this.pushError(\"Das Ergebnis des where-Teils einer select-Anweisung muss vom Typ boolean sein.\", \"error\", selectNode.whereNode.position);\n            }\n        }\n\n\n        // TODO: group by, order by\n\n        return resultTable;\n    }\n\n    resolveDropTable(node: DropTableNode) {\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        if (node.tableIdentifier == null) return;\n\n        if (!node.ifExists) {\n            let table = node.symbolTable.findTable(node.tableIdentifier);\n            if (table == null) this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\n        }\n\n    }\n\n    resolveDelete(node: DeleteNode) {\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        if (node.tableIdentifier == null) return;\n\n        let table = node.symbolTable.findTable(node.tableIdentifier);\n        if (table == null) this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\n\n\n        // if(node.whereNodeBegin != null){\n        //     let symbolTable = this.pushNewSymbolTable(node.whereNodeBegin, node.whereNodeEnd);\n        //     symbolTable.storeTableSymbols(table);\n        // }\n\n\n        if (node.whereNode != null) {\n            let whereSymbolTable = this.pushNewSymbolTable(node.whereNodeBegin, node.whereNodeEnd);\n            if (table != null) whereSymbolTable.storeTableSymbols(table);\n            this.resolveTerm(node.whereNode);\n            this.symbolTableStack.pop();\n        }\n\n\n\n    }\n\n\n    resolveAlterTable(node: AlterTableNode) {\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        if (node.tableIdentifier == null) {\n            return;\n        }\n\n        let table = node.symbolTable.findTable(node.tableIdentifier);\n        if (table == null) {\n            this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\n        }\n\n        let oldColumn: Column = null;\n        if (node.oldColumnName != null) {\n            oldColumn = table.columns.find(c => c.identifier.toLocaleLowerCase() == node.oldColumnName.toLocaleLowerCase());\n            if (oldColumn == null) {\n                this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" hat keine Spalte mit dem Bezeichner \" + node.oldColumnName, \"error\", node.oldColumnPosition);\n            }\n        }\n\n        switch (node.kind) {\n            case \"dropColumn\":\n                // nothing to do as node.oldColumnName is checked above\n                break;\n            case \"addColumn\":\n                let columnNode = node.columnDef;\n                if (columnNode == null) break;\n                if (columnNode.foreignKeyInfo != null && columnNode.baseType != null) {\n                    let fki = columnNode.foreignKeyInfo;\n                    let tables = this.getCurrentSymbolTable().findTables(fki.referencesTable);\n                    if (tables.length == 1) {\n                        let table = tables[0].table;\n                        let column = table.columns.find(c => c.identifier == fki.referencesColumn);\n                        if (column != null && column.type != null) {\n                            if (!column.isPrimaryKey) {\n                                this.pushError(\"Die referenzierte Spalte \" + fki.referencesTable + \".\" + fki.referencesColumn + \" ist kein Primärschlüssel.\", \"warning\", columnNode.referencesPosition);\n                            }\n                            if (!column.type.canCastTo(columnNode.baseType)) {\n                                this.pushError(\"Der Datentyp \" + columnNode.baseType.toString() + \" der Spalte \" + columnNode.identifier +\n                                    \" kann nich in den Datentyp \" + column.type.toString() + \" der referenzierten Spalte \" + table.identifier + \".\" +\n                                    column.identifier + \" umgewandelt werden.\", \"error\", columnNode.referencesPosition);\n                            }\n                        }\n                    }\n                }\n                break;\n            case \"renameColumn\":\n                // nothing to do as node.oldColumnName is checked above\n                break;\n            case \"renameTable\":\n                // nothing to do \n                break;\n            default:\n                break;\n        }\n    }\n\n    resolveUpdate(node: UpdateNode) {\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        if (node.tableIdentifier == null) {\n            return;\n        }\n\n        let table = node.symbolTable.findTable(node.tableIdentifier);\n        if (table == null) this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\n\n        for (let i = 0; i < node.columnIdentifiers.length; i++) {\n            let ci = node.columnIdentifiers[i];\n            let ciPos = node.columnIdentifierPositions[i];\n            let value = node.values[i];\n\n            if (ci == null) continue;\n            let column = table.columns.find(c => c.identifier == ci);\n\n            if (column == null) {\n                this.pushError(ci + \" ist kein Bezeichner einer Spalte der Tabelle \" + node.tableIdentifier + \".\", \"error\", ciPos);\n            }\n\n            if (value == null) continue;\n            let symbolTable = this.pushNewSymbolTable(node.valuePosBegin[i], node.valuePosEnd[i]);\n            symbolTable.storeTableSymbols(table);\n            this.resolveTerm(value);\n            this.symbolTableStack.pop();\n\n        }\n\n        if (node.whereNodeBegin != null) {\n            let symbolTable = this.pushNewSymbolTable(node.whereNodeBegin, node.whereNodeEnd);\n            symbolTable.storeTableSymbols(table);\n        }\n\n        if (node.whereNode != null) {\n            this.resolveTerm(node.whereNode);\n        }\n        this.symbolTableStack.pop();\n\n    }\n\n\n\n    resolveCreateTable(createTableNode: CreateTableNode) {\n\n        createTableNode.symbolTable = this.pushNewSymbolTable(createTableNode.position, createTableNode.endPosition);\n        createTableNode.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        let thisTable: Table = {\n            identifier: createTableNode.identifier,\n            columns: null,\n            size: 0\n        }\n\n        thisTable.columns = createTableNode.columnList.map(c => {\n            return {\n                identifier: c.identifier,\n                isNullable: false,\n                isPrimaryKey: c.isPrimary,\n                isAutoIncrement: c.isAutoIncrement,\n                notNull: false,\n                references: null,\n                table: thisTable,\n                type: c.baseType,\n                defaultValue: c.defaultValue\n            }\n        });\n\n        createTableNode.symbolTable.storeTableSymbols(thisTable);\n\n        for (let columnNode of createTableNode.columnList) {\n            if (createTableNode.columnList.filter(c => c.identifier.toLocaleLowerCase() == columnNode.identifier.toLocaleLowerCase()).length > 1) {\n                this.pushError(\"Der Spaltenbezeichner \" + columnNode.identifier + \" darf in einer Tabelle nur ein einziges Mal verwendet werden\", \"error\", columnNode.position);\n            }\n\n            if (columnNode.foreignKeyInfo != null && columnNode.baseType != null) {\n                let fki = columnNode.foreignKeyInfo;\n                let tables = this.getCurrentSymbolTable().findTables(fki.referencesTable);\n                if (tables.length == 1) {\n                    let table = tables[0].table;\n                    let column = table.columns.find(c => c.identifier == fki.referencesColumn);\n                    if (column != null && column.type != null) {\n                        if (!column.isPrimaryKey) {\n                            this.pushError(\"Die referenzierte Spalte \" + fki.referencesTable + \".\" + fki.referencesColumn + \" ist kein Primärschlüssel.\", \"warning\", columnNode.referencesPosition);\n                        }\n                        if (!column.type.canCastTo(columnNode.baseType)) {\n                            this.pushError(\"Der Datentyp \" + columnNode.baseType.toString() + \" der Spalte \" + columnNode.identifier +\n                                \" kann nich in den Datentyp \" + column.type.toString() + \" der referenzierten Spalte \" + table.identifier + \".\" +\n                                column.identifier + \" umgewandelt werden.\", \"error\", columnNode.referencesPosition);\n                        }\n                    }\n                }\n            }\n\n        }\n\n        for (let fki of createTableNode.foreignKeyInfoList) {\n\n            let columnNode = createTableNode.columnList.find(cn => cn.identifier == fki.column);\n            if (columnNode == null) continue;\n\n            let tables = this.getCurrentSymbolTable().findTables(fki.referencesTable);\n            if (tables.length == 1) {\n                let table = tables[0].table;\n                let column = table.columns.find(c => c.identifier == fki.referencesColumn);\n                if (column != null && column.type != null) {\n                    if (!column.isPrimaryKey) {\n                        this.pushError(\"Die referenzierte Spalte \" + fki.referencesTable + \".\" + fki.referencesColumn + \" ist kein Primärschlüssel.\", \"warning\", fki.referencesPosition);\n                    }\n                    if (!column.type.canCastTo(columnNode.baseType)) {\n                        this.pushError(\"Der Datentyp \" + columnNode.baseType.toString() + \" der Spalte \" + columnNode.identifier +\n                            \" kann nich in den Datentyp \" + column.type.toString() + \" der referenzierten Spalte \" + table.identifier + \".\" +\n                            column.identifier + \" umgewandelt werden.\", \"error\", fki.referencesPosition);\n                    }\n                }\n            }\n\n        }\n\n\n    }\n\n    resolveTableOrSubQuery(tosNode: TableOrSubqueryNode, joinedTables: Table[]) {\n        if (tosNode == null) return;\n\n        switch (tosNode.type) {\n            case TokenType.table:\n                let tableList = this.tables.filter(t => t.identifier.toLowerCase() == tosNode.identifier.toLowerCase());\n                if (tableList.length == 0) {\n                    this.pushError(tosNode.identifier + \" ist nicht der Name einer Tabelle.\", \"error\", tosNode.position);\n                } else if (tableList.length > 1) {\n                    this.pushError(\"Der Bezeichner \" + tosNode.identifier + \" ist hier nicht eindeutig.\", \"error\", tosNode.position);\n                } else {\n                    let table: Table = tableList[0];\n                    joinedTables.push(table);\n                    this.storeTableIntoSymbolTable(table, tosNode.position, tosNode.alias);\n                }\n\n                break;\n\n            case TokenType.keywordJoin:\n                this.resolveTableOrSubQuery(tosNode.firstOperand, joinedTables);\n                this.resolveTableOrSubQuery(tosNode.secondOperand, joinedTables);\n                break;\n\n            case TokenType.subquery:\n                tosNode.table = this.resolveSelect(tosNode.query);\n                joinedTables.push(tosNode.table);\n                if (tosNode.alias != null) {\n                    tosNode.table.identifier = tosNode.alias;\n                    this.storeTableIntoSymbolTable(tosNode.table, tosNode.position);\n                }\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    storeTableIntoSymbolTable(table: Table, position: TextPosition, alias?: string) {\n        let symbolTable = this.getCurrentSymbolTable();\n        symbolTable.storeSymbol({\n            identifier: alias == null ? table.identifier.toLowerCase() : alias.toLowerCase(),\n            posOfDefinition: position,\n            table: table,\n            referencedOnPositions: []\n        });\n        for (let column of table.columns) {\n            symbolTable.storeSymbol({\n                identifier: column.identifier.toLowerCase(),\n                posOfDefinition: null,\n                column: column,\n                tableAlias: alias,\n                referencedOnPositions: []\n            });\n        }\n    }\n\n    resolveTerm(node: TermNode): SQLType {\n        if (node == null) return null;\n\n        switch (node.type) {\n            case TokenType.binaryOp:\n                if ([TokenType.keywordIn, TokenType.keywordNotIn].indexOf(node.operator) >= 0) {\n                    return this.resolveNotIn(node);\n                }\n\n                let typeLeft = this.resolveTerm(node.firstOperand);\n                let typeRight = this.resolveTerm(node.secondOperand);\n                if (typeLeft != null && typeRight != null) {\n                    let resultType = typeLeft.getBinaryResultType(node.operator, typeRight);\n                    if (resultType == null) {\n                        this.pushError(\"Der Operator \" + TokenTypeReadable[node.operator] + \" ist für die Datentypen \" + typeLeft.toString() + \" und \" + typeRight.toString() + \" nicht definiert.\", \"error\", node.position);\n                    }\n                    node.sqlType = resultType;\n                    return resultType;\n                } else {\n                    return null;\n                }\n                break;\n            case TokenType.unaryOp:\n                let operandType = this.resolveTerm(node.operand);\n                if (operandType != null) {\n                    let resultType1 = operandType.getUnaryResultType(node.operator);\n                    if (resultType1 == null) {\n                        this.pushError(\"Der Operator \" + TokenTypeReadable[node.operator] + \" ist für einen Operanden des Datentyps \" + operandType.toString() + \" nicht definiert.\", \"error\", node.position);\n                    }\n                    node.sqlType = resultType1;\n                    return resultType1;\n                } else {\n                    return null;\n                }\n                break;\n            case TokenType.callMethod:\n                return this.resolveMethodCall(node);\n                break;\n            //    ConstantNode | IdentifierNode | DotNode | SelectNode | BracketsNode | StarAttributeNode | SelectNode | ListNode;\n\n            case TokenType.constantNode:\n                node.sqlType = SQLBaseType.fromConstantType(node.constantType);\n                return node.sqlType;\n                break;\n            case TokenType.identifier:\n                return this.resolveIdentifier(node);\n                break;\n            case TokenType.dot:\n                return this.resolveDot(node);\n                break;\n            case TokenType.keywordSelect:\n                let selectTable = this.resolveSelect(node);\n                if (selectTable.columns.length != 1) {\n                    this.pushError(\"Die Ergebnistabelle einer Unterabfrage an dieser Stelle muss genau eine Spalte besitzen.\", \"error\", node.position);\n                    return null;\n                }\n                return selectTable.columns[0].type;\n                break;\n            case TokenType.rightBracket:   // BracketsNode\n                node.sqlType = this.resolveTerm(node.termInsideBrackets);\n                return node.sqlType;\n                break;\n            case TokenType.allColumns:\n                this.pushError(\"Das Zeichen * kann hier nicht verwendet werden.\", \"error\", node.position);\n                break;\n            case TokenType.list:\n                this.pushError(\"Eine Liste wird hier nicht erwartet.\", \"error\", node.position);\n                break;\n            default:\n                break;\n        }\n\n\n\n\n    }\n\n    resolveDot(node: DotNode): SQLType {\n        let tableSymbols = this.getCurrentSymbolTable().findTables(node.identifierLeft.identifier);\n        if (tableSymbols.length == 0) {\n            this.pushError(\"Die Tabelle \" + node.identifierLeft.identifier + \" kann nicht gefunden werden.\", \"error\", node.identifierLeft.position);\n            return null;\n        }\n        if (tableSymbols.length > 1) {\n            this.pushError(\"Der Tabellenbezeichner \" + node.identifierLeft.identifier + \" ist nicht eindeutig.\", \"error\", node.identifierLeft.position);\n            return null;\n        }\n        let table = tableSymbols[0].table;\n\n        let columns = table.columns.filter(c => c.identifier.toLowerCase() == node.identifierRight.identifier.toLowerCase());\n\n        if (columns.length == 0) {\n            this.pushError(\"Die Tabelle \" + node.identifierLeft.identifier + \" hat keine Spalte mit dem Bezeichner \" + node.identifierRight.identifier + \".\", \"error\", node.identifierRight.position);\n            return;\n        }\n\n        if (columns.length > 1) {\n            this.pushError(\"Die Tabelle \" + node.identifierLeft.identifier + \" hat mehrere Spalten mit dem Bezeichner \" + node.identifierRight.identifier + \".\", \"error\", node.identifierRight.position);\n            return;\n        }\n\n        let column = columns[0];\n        node.sqlType = column.type;\n        return column.type;\n\n    }\n\n    resolveIdentifier(node: IdentifierNode): SQLType {\n        let symbols = this.getCurrentSymbolTable().findColumn(node.identifier);\n        if (symbols.length == 0) {\n            this.pushError(\"Der Bezeichner \" + node.identifier + \" ist an dieser Stelle nicht bekannt.\", \"error\", node.position);\n            return null;\n        }\n        if (symbols.length > 1) {\n            this.pushError(\"Der Bezeichner \" + node.identifier + \" ist nicht eindeutig.\", \"error\", node.position);\n            return null;\n        }\n\n        let symbol = symbols[0];\n        node.sqlType = symbol.column.type;\n        return symbol.column.type;\n    }\n\n    resolveMethodCall(node: MethodcallNode): SQLType {\n\n        let methodStore = SQLMethodStore.getInstance();\n        let methods = methodStore.getMethods(node.identifier);\n\n        methods = methods.filter(m => m.parameters.length == node.operands.length);\n        if (node.operands.length == 1 && node.operands[0].type == TokenType.allColumns) {\n            methods = methods.filter(m => m.acceptsStarParameter);\n            node.sqlType = methods[0].returnType;\n            return node.sqlType;\n        }\n\n        if (methods.length == 0) {\n            this.pushError(\"Es gibt keine passende Methode mit dem Bezeichner '\" + node.identifier + \"'.\", \"error\", node.position);\n            return null;\n        }\n\n        for (let operand of node.operands) {\n            if (this.resolveTerm(operand) == null) {\n                node.sqlType = methods[0].returnType;\n                return node.sqlType;\n            }\n        }\n\n        for (let method of methods) {\n            let found = true;\n            for (let i = 0; i < method.parameters.length; i++) {\n                let methodParameter = method.parameters[i];\n                let operand = node.operands[i];\n                if (!operand.sqlType.canCastTo(methodParameter.type)) {\n                    found = false;\n                    break;\n                }\n            }\n            if (found) {\n                node.sqlType = method.returnType;\n                return node.sqlType;\n            }\n        }\n\n        this.pushError(\"Es gibt keine passende Methode mit dem Bezeichner '\" + node.identifier + \"'.\", \"error\", node.position);\n        return null;\n\n    }\n\n    resolveNotIn(node: BinaryOpNode): SQLType {\n\n        if (node.firstOperand == null || node.secondOperand == null) return null;\n\n        let operatorString = TokenTypeReadable[node.operator];\n\n        this.resolveTerm(node.firstOperand);\n        let leftType = node.firstOperand.sqlType;\n        if (leftType != null) {\n            if (node.secondOperand.type == TokenType.keywordSelect) {\n                let selectNode = node.secondOperand;\n                if (selectNode.columnList.length != 1) {\n                    this.pushError(\"Wenn rechts vom Operator '\" + operatorString + \"' eine Unterabfrage steht, muss die Ergebnistabelle dieser Unterabfrage genau eine Spalte haben.\", \"error\", selectNode.position);\n                }\n                this.resolveSelect(selectNode);\n                let pType = selectNode.columnList[0].term.sqlType;\n                if (!pType.canCastTo(leftType)) {\n                    this.pushError(\"Der Datentyp der Ergebnisspalte der Unterabfrage ist \" + pType.toString() + \". Dieser kann nicht in den Datentyp \" + leftType.toString() + \" umgewandelt werden.\", \"error\", selectNode.position);\n                }\n            } else if (node.secondOperand.type == TokenType.list) {\n                let listNode = node.secondOperand;\n                for (let element of listNode.elements) {\n                    let elementType = SQLBaseType.fromConstantType(element.constantType);\n                    element.sqlType = elementType;\n                    if (!elementType.canCastTo(leftType)) {\n                        this.pushError(\"Der Datentyp des Listenelements \" + element.constant + \" ist \" + elementType.toString() + \". Er kann nicht in den Datentype \" + leftType.toString() + \" des Operanden auf der linken Seite des Operators '\" + operatorString + \"' umgewandelt werden.\", \"error\", element.position);\n                    }\n                }\n            } else {\n                this.pushError(\"Der rechte Operand der Operatoren 'in' und 'not in' muss eine Unterabfrage oder eine Liste sein.\", \"error\", node.secondOperand.position);\n            }\n\n        }\n\n        return SQLBaseType.getBaseType(\"boolean\");\n    }\n\n    resolveInsert(astNode: InsertNode) {\n\n        let table: Table = null;\n        let symbolTable = this.pushNewSymbolTable(astNode.position, astNode.endPosition);\n        if (astNode.table != null) {\n            astNode.table.table = this.tables.find(t => t.identifier.toLowerCase() == astNode.table.identifier.toLocaleLowerCase());\n            if (astNode.table.table == null) {\n                this.pushError(\"Die Tabelle \" + astNode.table.identifier + \" gibt es nicht.\", \"error\", astNode.table.position);\n            } else {\n                table = astNode.table.table;\n                symbolTable.storeTableSymbols(table);\n            }\n        }\n\n        let tableCompletionTo = astNode.endPosition;\n        if (astNode.valuesPosition != null) tableCompletionTo = astNode.valuesPosition;\n        if (astNode.columnsPosition != null) tableCompletionTo = astNode.columnsPosition;\n\n        this.module.addCompletionHint(astNode.position, tableCompletionTo, false, true, [\"into\", \"values\"]);\n\n        if (table != null) {\n            this.module.addCompletionHint(tableCompletionTo, astNode.valuesPosition == null ? astNode.endPosition : astNode.valuesPosition, true, false, [\"values\"]);\n        }\n\n        let tableSymbolTable = this.pushNewSymbolTable(astNode.position, tableCompletionTo);\n        tableSymbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        let columns: Column[] = [];\n        // Parse column list\n        if (astNode.columnList.length == 0) {\n            if (table != null) {\n                columns = table.columns;\n            }\n        } else {\n            if (table != null) {\n                for (let columnNode of astNode.columnList) {\n                    let column = table.columns.find(c => c.identifier.toLowerCase() == columnNode.identifier.toLowerCase());\n                    if (column == null) {\n                        this.pushError(\"Die Tabelle \" + table.identifier + \" besitzt keine Spalte mit dem Bezeichner \" + columnNode.identifier + \".\", \"error\", columnNode.position);\n                    } else {\n                        columns.push(column);\n                    }\n                }\n            }\n        }\n\n        if (columns.length > 0) {\n            if (astNode.select != null) {\n                let table = this.resolveSelect(astNode.select);\n                if(table?.columns != null){\n                    if(columns.length != table.columns.length){\n                        this.pushError(\"Die insert-Anweisung erwartet \" + columns.length + \" Werte je Datensatz, die select-Anweisung liefert aber \" + table.columns.length + \".\", \"error\", astNode.position);\n                    } else {\n                        for(let i = 0; i < columns.length; i++){\n                            let insertColumn = columns[i];\n                            let selectColumn = table.columns[i];\n                            if(insertColumn.type != null && selectColumn.type != null){\n                                if(!selectColumn.type.canCastTo(insertColumn.type)){\n                                    this.pushError(\"Der Datentyp \" + selectColumn.type.toString() + \" der \" \n                                    + (i+1) + \"-ten Spalte des select-Terms kann nicht in den Datentyp \" + \n                                    insertColumn.type.toString() + \" der entsprechenden Spalte der insert-Anweisung umgewandelt werden.\", \"error\", astNode.position );\n                                }\n                            }\n                        }\n                    }\n                }\n\n\n            } else {\n                // Parse value lists\n                for (let valueList of astNode.values) {\n                    if (valueList.length != columns.length && valueList.length > 0) {\n                        this.pushError(\"Erwartet werden \" + columns.length + \" Elemente, hier stehen aber \" + valueList.length + \" Elemente in der Liste.\", \"error\", valueList[0].position);\n                    } else {\n                        for (let i = 0; i < valueList.length; i++) {\n                            let value = valueList[i];\n                            let column = columns[i];\n                            value.sqlType = SQLBaseType.fromConstantType(value.constantType);\n                            // constantType == 40 means: null\n                            // TODO: check if column is nullable!\n                            let destType = column.type.toString().toLocaleLowerCase();\n                            if (value.constantType == TokenType.keywordNull) {\n                                if (!column.isNullable || column.notNull) {\n                                    this.pushError(\"Die Spalte \" + column.identifier + \" ist nicht nullable, daher kann null hier nicht eingefügt werden.\", \"error\", value.position);\n                                }\n                            } else if (!value.sqlType.canCastTo(column.type)) {\n                                let error: string = \"Der Wert \" + value.constant + \" vom Datentyp \" + value.sqlType.toString() + \" kann nicht in den Datentyp \" + column.type.toString() + \" der Spalte \" + column.identifier + \" umgewandelt werden.\";\n\n                                if (destType == \"date\") error += \"<br><b>Tipp: </b>Datumswerte haben die Form 'yyyy-mm-dd', also z.B. '2022-06-15'.\";\n                                if (destType == \"datetime\" || destType == \"timestamp\") error += \"<br><b>Tipp: </b>Timestamps haben die Form 'yyyy-mm-dd hh:min:ss', also z.B. '2022-06-15 07:56:22'.\";\n\n                                this.pushError(error, \"error\", value.position);\n                            } else if (destType == \"date\") {\n                                if (!isDate(value.constant)) {\n                                    let error: string = `'${value.constant}' ist kein date-Wert.<br><b>Tipp: </b>Datumswerte haben die Form 'yyyy-mm-dd', also z.B. '2022-06-15'.`;\n                                    this.pushError(error, \"error\", value.position);\n                                }\n                            } else if (destType == \"datetime\" || destType == \"timestamp\") {\n                                if (!isDateTime(value.constant)) {\n                                    let error: string = `'${value.constant}' ist kein ${destType}-Wert.<br><b>Tipp: </b>Timestamps haben die Form 'yyyy-mm-dd hh:min:ss', also z.B. '2022-06-15 07:56:22'.`;\n                                    this.pushError(error, \"error\", value.position);\n                                }\n                            } else if (destType == \"time\") {\n                                if (!isTime(value.constant)) {\n                                    let error: string = `'${value.constant}' ist kein ${destType}-Wert.<br><b>Tipp: </b>Time-Werte haben die Form 'hh:min:ss', also z.B. '07:56:22'.`;\n                                    this.pushError(error, \"error\", value.position);\n                                }\n                            }\n                        }\n                    }\n                }\n\n            }\n        }\n\n        this.symbolTableStack.pop();\n\n    }\n\n\n\n}\n\n","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { SymbolResolver } from \"./parser/SymbolResolver.js\";\r\n\r\nexport enum CompilerStatus {\r\n    compiling, error, compiledButNothingToRun, readyToRun\r\n}\r\n\r\nexport class Compiler {\r\n\r\n    compilerStatus: CompilerStatus = CompilerStatus.compiledButNothingToRun;\r\n\r\n    atLeastOneModuleIsStartable: boolean;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    compile(moduleStore: ModuleStore): Error[] {\r\n\r\n        this.compilerStatus = CompilerStatus.compiling;\r\n\r\n        let t0 = performance.now();\r\n\r\n        let lexer = new Lexer();\r\n\r\n        // 1st pass: lexing\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.file.dirty = false;\r\n            m.clear();\r\n\r\n            let lexed = lexer.lex(m.getProgramTextFromMonacoModel());\r\n            m.errors[0] = lexed.errors;\r\n            m.tokenList = lexed.tokens;\r\n            m.bracketError = lexed.bracketError;\r\n            if(m.file.name == this.main.getCurrentlyEditedModule().file.name){\r\n                if(this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(lexed.bracketError);\r\n            }\r\n        }\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        this.main.getSemicolonAngel().startRegistering();\r\n\r\n        let parser: Parser = new Parser();\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            parser.parse(m);\r\n        }\r\n        \r\n        // 3rd pass: check symbols and types\r\n        let databaseTool = this.main.getDatabaseTool();\r\n        let symbolResolver: SymbolResolver = new SymbolResolver(databaseTool);\r\n\r\n        for(let m of moduleStore.getModules(false)){\r\n            symbolResolver.start(m);\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        let message = \"Compiled in \" + dt + \" ms.\";\r\n\r\n        this.main.getCurrentWorkspace().compilerMessage = message;\r\n\r\n        this.main.getSemicolonAngel().healSemicolons();\r\n\r\n        this.compilerStatus = CompilerStatus.readyToRun;\r\n\r\n        return null;\r\n    }\r\n\r\n}","import { FileData } from \"../../communication/Data.js\";\r\nimport { AccordionElement } from \"../../main/gui/Accordion.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenType, TextPositionWithoutLength } from \"../lexer/Token.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { ASTNode } from \"./AST.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\nimport { stringToDate } from \"../../tools/StringTools.js\";\r\nimport { SQLStatement } from \"./Parser.js\";\r\n\r\n\r\nexport type CompletionHint = {\r\n    fromLine: number,\r\n    fromColumn: number,\r\n    toLine: number, \r\n    toColumn: number,\r\n    hintColumns: boolean,\r\n    hintColumnsOfTable?: string,\r\n    hintTables: boolean,\r\n    hintKeywords: string[],\r\n    dontHint?: string[],\r\n    praefix?: string,\r\n    suffix?: string\r\n}\r\n\r\nexport type File = {\r\n    name: string,\r\n    id?: number,\r\n    text: string,\r\n\r\n    text_before_revision: string,\r\n    submitted_date: string,\r\n    student_edited_after_revision: boolean,\r\n\r\n    dirty: boolean,\r\n    saved: boolean,\r\n    version: number,\r\n    panelElement?: AccordionElement\r\n\r\n}\r\n\r\nexport type IdentifierPosition = {\r\n    position: TextPosition,\r\n    element: any;\r\n}\r\n\r\nexport type MethodCallPosition = {\r\n    identifierPosition: TextPosition,\r\n    possibleMethods: any[] | string, // string for print, println, ...\r\n    commaPositions: TextPosition[],\r\n    rightBracketPosition: TextPosition\r\n}\r\n\r\nexport class Module {\r\n    file: File;\r\n    static maxUriNumber: number = 0;\r\n    uri: monaco.Uri;\r\n    model: monaco.editor.ITextModel;\r\n    oldErrorDecorations: string[] = [];\r\n    lastSavedVersionId: number;\r\n    editorState: monaco.editor.ICodeEditorViewState;\r\n\r\n    errors: Error[][] = [[], [], [], []]; // 1st pass, 2nd pass, 3rd pass\r\n\r\n    // 1st pass: Lexer\r\n    tokenList: Token[];\r\n\r\n    // 2nd pass: ASTParser\r\n    sqlStatements: SQLStatement[];\r\n    mainSymbolTable: SymbolTable;\r\n\r\n\r\n    identifierPositions: { [line: number]: IdentifierPosition[] } = {};\r\n    methodCallPositions: { [line: number]: MethodCallPosition[] } = {};\r\n\r\n    static uriMap: { [name: string]: number } = {};\r\n    bracketError: string;\r\n\r\n    completionHints: Map<number, CompletionHint[]> = new Map(); // Map from line numbers to hints\r\n\r\n    constructor(file: File, public main: MainBase) {\r\n        if (file == null || this.main == null) return; // used by AdhocCompiler and ApiDoc\r\n\r\n        this.file = file;\r\n        // this.uri = monaco.Uri.from({ path: '/file' + (Module.maxUriNumber++) + '.learnJava', scheme: 'file' });\r\n        let path = file.name;\r\n\r\n        let uriCounter = Module.uriMap[path];\r\n        if (uriCounter == null) {\r\n            uriCounter = 0;\r\n        } else {\r\n            uriCounter++;\r\n        }\r\n        Module.uriMap[path] = uriCounter;\r\n\r\n        if (uriCounter > 0) path += \" (\" + uriCounter + \")\";\r\n        this.uri = monaco.Uri.from({ path: path, scheme: 'inmemory' });\r\n        this.model = monaco.editor.createModel(file.text, \"vscSQL\", this.uri);\r\n        this.model.updateOptions({ tabSize: 3 });\r\n\r\n        this.lastSavedVersionId = this.model.getAlternativeVersionId();\r\n\r\n        let that = this;\r\n\r\n        this.model.onDidChangeContent(() => {\r\n            let versionId = that.model.getAlternativeVersionId();\r\n\r\n            if (versionId != that.lastSavedVersionId) {\r\n                that.file.dirty = true;\r\n                that.file.saved = false;\r\n                that.lastSavedVersionId = versionId;\r\n            }\r\n\r\n            if(!that.main.isEmbedded()){\r\n                let main1: Main = <Main>main;\r\n                if (main1.workspacesOwnerId != main1.user.id) {\r\n                    if (that.file.text_before_revision == null || that.file.student_edited_after_revision) {\r\n                        that.file.student_edited_after_revision = false;\r\n                        that.file.text_before_revision = that.file.text;\r\n                        that.file.saved = false;\r\n                        main1.networkManager.sendUpdates(null, false);\r\n                        main1.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n                        main1.projectExplorer.renderHomeworkButton(that.file);\r\n                    }\r\n                } else {\r\n                    that.file.student_edited_after_revision = true;\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    addCompletionHint(fromPosition: TextPosition, toPosition: TextPosition, hintColumns: boolean|string, hintTables: boolean, \r\n        hintKeywords: string[], dontHint?: string[], praefix: string = \"\", suffix: string = \"\"){\r\n        let ch: CompletionHint = {\r\n            fromColumn: fromPosition.column,\r\n            fromLine: fromPosition.line,\r\n            toColumn: toPosition.column,\r\n            toLine: toPosition.line,\r\n            hintColumns: (typeof hintColumns == \"boolean\")? hintColumns : true, \r\n            hintColumnsOfTable: (typeof hintColumns == \"string\")? hintColumns : null,\r\n            hintTables: hintTables,\r\n            hintKeywords: hintKeywords == null ? null : hintKeywords.map(s => s.toUpperCase()),\r\n            dontHint: dontHint,\r\n            praefix: praefix,\r\n            suffix: suffix\r\n        }\r\n\r\n        for(let i = ch.fromLine; i <= ch.toLine; i++){\r\n            let chList = this.completionHints.get(i);\r\n            if(chList == null){\r\n                chList = [];\r\n                this.completionHints.set(i, chList);\r\n            }\r\n            chList.push(ch);\r\n        }\r\n    }\r\n\r\n    getSQLSTatementsAtSelection(sel: monaco.Selection): SQLStatement[] {\r\n        let selStart = {line: sel.startLineNumber, column: sel.startColumn};\r\n        let selEnd = {line: sel.endLineNumber, column: sel.endColumn};\r\n\r\n        if(this.sqlStatements == null){\r\n            return [];\r\n        }\r\n\r\n        return this.sqlStatements.filter(stmt => {\r\n            return !(this.compare(stmt.to, selStart) < 0 || this.compare(stmt.from, selEnd) > 0);\r\n        })\r\n\r\n    }\r\n\r\n    /**\r\n     * returns 1 if a > b, 0 if a == b and -1 if a < b\r\n     * @param a \r\n     * @param b \r\n     */\r\n    compare(a: {line: number, column: number}, b: {line: number, column: number}): number{\r\n        if(a.line > b.line) return 1;\r\n        if(a.line < b.line) return -1;\r\n        if(a.column > b.column) return 1;\r\n        if(a.column < b.column) return -1;\r\n        return 0;\r\n    }\r\n\r\n\r\n\r\n    getSQLStatementAtPosition(p: { lineNumber: number, column: number }): SQLStatement {\r\n\r\n        return this.sqlStatements.find(statement => {\r\n            if(statement.from.line > p.lineNumber ) return false;\r\n            if(statement.from.line == p.lineNumber && statement.from.column > p.column) return false;\r\n            if(statement.to.line < p.lineNumber) return false;\r\n            if(statement.to.line == p.lineNumber && statement.to.column < p.column) return false;\r\n            return true;\r\n        });        \r\n\r\n    }\r\n\r\n\r\n    getCompletionHint(line: number, column: number){\r\n        let chList = this.completionHints.get(line);\r\n        \r\n        if(chList == null || chList.length == 0){\r\n            return null;\r\n        }\r\n\r\n        let pos = line * 1000 + column;\r\n        chList = chList.filter(ch => pos >= ch.fromLine * 1000 + ch.fromColumn && pos <= ch.toLine * 1000 + ch.toColumn);\r\n        if(chList.length == 0){\r\n            return;\r\n        }\r\n\r\n        // take CompletionHint with smallest range:\r\n        let bestCh: CompletionHint = chList[0];\r\n        let bestRangeLength  = (bestCh.toLine - bestCh.fromLine)*1000 + (bestCh.toColumn - bestCh.fromColumn);\r\n\r\n        for(let i = 1; i < chList.length; i++){\r\n            let ch = chList[i];\r\n            let rangeLength = (ch.toLine - ch.fromLine) * 1000 + (ch.toColumn - ch.fromColumn);\r\n\r\n            if(rangeLength < bestRangeLength){\r\n                bestCh = ch;\r\n                bestRangeLength = rangeLength;\r\n            }\r\n\r\n        }\r\n\r\n        return bestCh;\r\n    }\r\n\r\n\r\n    static restoreFromData(f: FileData, main: MainBase): Module {\r\n\r\n        let f1: File = {\r\n            name: f.name,\r\n            text: f.text,\r\n            text_before_revision: f.text_before_revision,\r\n            submitted_date: f.submitted_date,\r\n            student_edited_after_revision: false,\r\n            dirty: true,\r\n            saved: true,\r\n            version: f.version,\r\n            id: f.id\r\n        }\r\n\r\n        let m: Module = new Module(f1, main);\r\n\r\n        return m;\r\n\r\n    }\r\n\r\n    getFileData(workspace: Workspace): FileData {\r\n        let file = this.file;\r\n        let fd: FileData = {\r\n            id: file.id,\r\n            name: file.name,\r\n            text: file.text,\r\n            text_before_revision: file.text_before_revision,\r\n            submitted_date: file.submitted_date,\r\n            student_edited_after_revision: file.student_edited_after_revision,\r\n            version: file.version,\r\n            workspace_id: workspace.id,\r\n            forceUpdate: false,\r\n            file_type: 11\r\n        }\r\n\r\n        return fd;\r\n    }\r\n\r\n\r\n    findSymbolTableAtPosition(line: number, column: number) {\r\n        if (this.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (line > this.mainSymbolTable.positionTo.line ||\r\n            line == this.mainSymbolTable.positionTo.line && column > this.mainSymbolTable.positionTo.column\r\n        ) {\r\n            line = this.mainSymbolTable.positionTo.line;\r\n            column = this.mainSymbolTable.positionTo.column - 1;\r\n        }\r\n\r\n        return this.mainSymbolTable.findTableAtPosition(line, column);\r\n    }\r\n\r\n    getErrorCount(): number {\r\n\r\n        let ec = 0;\r\n        for (let el of this.errors) {\r\n            el.forEach(error => ec += error.level == \"error\" ? 1 : 0);\r\n            // ec += el.length;\r\n        }\r\n\r\n        return ec;\r\n    }\r\n\r\n    getProgramTextFromMonacoModel(): string {\r\n        return this.model.getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n    }\r\n\r\n\r\n    addIdentifierPosition(position: TextPosition, element: any) {\r\n        let positionList: IdentifierPosition[] = this.identifierPositions[position.line];\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            this.identifierPositions[position.line] = positionList;\r\n        }\r\n        positionList.push({\r\n            position: position,\r\n            element: element\r\n        });\r\n    }\r\n\r\n    getElementAtPosition(line: number, column: number): any {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let bestFoundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column < p.position.column + p.position.length) {\r\n\r\n                if (p.position.length > 0) {\r\n                    if (bestFoundPosition == null) {\r\n                        bestFoundPosition = p;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bestFoundPosition == null ? null : <any>bestFoundPosition.element;\r\n    }\r\n\r\n    copy(): Module {\r\n        let m = new Module(this.file, this.main);\r\n        m.model = this.model;\r\n        m.mainSymbolTable = this.mainSymbolTable;\r\n        this.mainSymbolTable = null;\r\n\r\n        this.file.dirty = true;\r\n\r\n        return m;\r\n    }\r\n\r\n    clear() {\r\n\r\n        this.identifierPositions = {};\r\n\r\n        if (this.file != null && this.file.dirty) {\r\n            // Lexer\r\n            this.tokenList = null;\r\n            this.errors[0] = [];\r\n\r\n            // AST Parser\r\n            this.errors[1] = [];\r\n\r\n\r\n        }\r\n\r\n        // type resolver\r\n        this.errors[2] = [];\r\n\r\n        // Code generator\r\n        this.errors[3] = [];\r\n        this.mainSymbolTable = new SymbolTable(null, { line: 1, column: 1, length: 1 }, { line: 100000, column: 1, length: 0 });\r\n\r\n        this.methodCallPositions = {};\r\n\r\n    }\r\n\r\n    hasErrors() {\r\n\r\n        for (let el of this.errors) {\r\n            if (el.find(error => error.level == \"error\")) {\r\n                return true;\r\n            }\r\n            // if (el.length > 0) {\r\n            //     return true;\r\n            // }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getSortedAndFilteredErrors(): Error[] {\r\n\r\n        let list: Error[] = [];\r\n\r\n        for (let el of this.errors) {\r\n            list = list.concat(el);\r\n        }\r\n\r\n        list.sort((a, b) => {\r\n            if (a.position.line > b.position.line) {\r\n                return 1;\r\n            }\r\n            if (b.position.line > a.position.line) {\r\n                return -1;\r\n            }\r\n            if (a.position.column >= b.position.column) {\r\n                return 1;\r\n            }\r\n            return -1;\r\n        });\r\n\r\n        for (let i = 0; i < list.length - 1; i++) {\r\n            let e1 = list[i];\r\n            let e2 = list[i + 1];\r\n            if (e1.position.line == e2.position.line && e1.position.column + 10 > e2.position.column) {\r\n                if (this.errorLevelCompare(e1.level, e2.level) == 1) {\r\n                    list.splice(i + 1, 1);\r\n                } else {\r\n                    list.splice(i, 1);\r\n                }\r\n                i--;\r\n            }\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    errorLevelCompare(level1: ErrorLevel, level2: ErrorLevel): number {\r\n        if (level1 == \"error\") return 1;\r\n        if (level2 == \"error\") return 2;\r\n        if (level1 == \"warning\") return 1;\r\n        if (level2 == \"warning\") return 2;\r\n        return 1;\r\n    }\r\n}\r\n\r\n\r\nexport class ModuleStore {\r\n\r\n    private modules: Module[] = [];\r\n    private moduleMap: Map<string, Module> = new Map();\r\n\r\n    dirty: boolean = false;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    findModuleById(module_id: number): Module {\r\n        for (let module of this.modules) {\r\n            if (module.file.id == module_id) return module;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    copy(): ModuleStore {\r\n        let ms: ModuleStore = new ModuleStore(this.main);\r\n        for (let m of this.modules) {\r\n            ms.putModule(m.copy());\r\n        }\r\n        return ms;\r\n    }\r\n\r\n    findModuleByFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                return m;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        for (let m of this.modules) {\r\n            if (m.hasErrors()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getFirstModule(): Module {\r\n        if (this.modules.length > 0) {\r\n            for (let mo of this.modules) {\r\n                return mo;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    isDirty(): boolean {\r\n\r\n        if (this.dirty) {\r\n            this.dirty = false;\r\n            return true;\r\n        }\r\n\r\n        let dirty = false;\r\n        for (let m of this.modules) {\r\n            if (m.file.dirty) {\r\n                dirty = true;\r\n                break;\r\n            }\r\n        }\r\n        return dirty;\r\n    }\r\n\r\n\r\n    getModules(includeSystemModules: boolean, excludedModuleName?: String): Module[] {\r\n        let ret = [];\r\n        for (let m of this.modules) {\r\n            if (m.file.name != excludedModuleName) {\r\n                ret.push(m);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    putModule(module: Module) {\r\n        this.modules.push(module);\r\n        this.moduleMap[module.file.name] = module;\r\n    }\r\n\r\n    removeModuleWithFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                this.removeModule(m);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n\r\n        if (this.modules.indexOf(module) < 0) return;\r\n\r\n        this.modules.splice(this.modules.indexOf(module), 1);\r\n        this.moduleMap[module.file.name] = undefined;\r\n        this.dirty = true;\r\n    }\r\n\r\n    getModule(moduleName: string): Module {\r\n        return this.moduleMap[moduleName];\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type ButtonToggler = (state: boolean) => void;\r\n\r\nexport type Action = (name: string, buttonToggler?: ButtonToggler, pressed_key?: string) => void;\r\n\r\nexport type ActionEntry = {\r\n    text?: string,\r\n    keys: string[],\r\n    action: Action,\r\n    identifier: string, // name of Action is copied automatically to name of ActionEntry\r\n    active: boolean\r\n}\r\n\r\nexport class ActionManager {\r\n\r\n    actions: { [actionIdentifier: string]: ActionEntry } = { };\r\n\r\n    keyEntries: { [key: string]: ActionEntry[] } = {};\r\n\r\n    buttons: { [actionIdentifier: string]: JQuery<HTMLElement>[] } = {};\r\n\r\n    constructor(private $mainElement: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public init(){\r\n\r\n        let $element:JQuery<any> = this.$mainElement;\r\n        \r\n        if($element == null) $element = jQuery(document);\r\n\r\n        let that = this;\r\n        $element.on(\"keydown\", function (event: JQuery.KeyDownEvent) { \r\n            if(event != null){\r\n                that.executeKeyDownEvent(event); \r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    trigger(actionIdentifier: string) {\r\n        let ae = this.actions[actionIdentifier];\r\n        if(ae != null){\r\n            ae.action(actionIdentifier, null, \"\");\r\n        }\r\n    }\r\n\r\n\r\n    public registerAction(identifier: string, keys: string[], action: Action, text: string = \"\", button?: JQuery<HTMLElement>){\r\n        let ae: ActionEntry = {\r\n            action: action,\r\n            identifier: identifier,\r\n            keys: keys,\r\n            text: text,\r\n            active: true\r\n        };\r\n\r\n        this.actions[identifier] = ae;\r\n\r\n        for(let key of keys){\r\n            if(this.keyEntries[key.toLowerCase()] == null){\r\n                this.keyEntries[key.toLowerCase()] = [];\r\n            }\r\n            this.keyEntries[key.toLowerCase()].push(ae);\r\n        }\r\n\r\n        if(button != null){\r\n            if(this.buttons[identifier] == null){\r\n                this.buttons[identifier] = [];\r\n            }\r\n            this.buttons[identifier].push(button);\r\n\r\n            let t = text;\r\n            if(keys.length > 0){\r\n                t += \" [\" + keys.join(\", \") + \"]\";\r\n            }\r\n\r\n            button.attr(\"title\", t);\r\n\r\n            button.on('mousedown', () => {\r\n                if(ae.active){\r\n                    action(identifier, null, \"mousedown\");\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public isActive(actionIdentifier: string): boolean {\r\n\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae == null) return false;\r\n\r\n        return ae.active;\r\n    \r\n    }\r\n\r\n    public setActive(actionIdentifier: string, active: boolean){\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae != null){\r\n            ae.active = active;\r\n        }\r\n\r\n        let buttons = this.buttons[actionIdentifier];\r\n        if(buttons != null){\r\n            for(let button of buttons){\r\n                if(active){\r\n                    button.addClass('jo_active');\r\n                } else {\r\n                    button.removeClass('jo_active');\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public executeKeyDownEvent(event: JQuery.KeyDownEvent) {\r\n\r\n        if(document.activeElement.tagName.toLowerCase() == \"input\"){\r\n            return;\r\n        }\r\n\r\n        if (event.keyCode <= 18 && event.keyCode >= 16) {\r\n            return; // ctrl, alt, shift\r\n        }\r\n\r\n        let key: string = \"\";\r\n\r\n        if (event.ctrlKey) {\r\n            key += \"ctrl+\";\r\n        }\r\n\r\n        if (event.shiftKey) {\r\n            key += \"shift+\";\r\n        }\r\n\r\n        if (event.altKey) {\r\n            key += \"alt+\";\r\n        }\r\n\r\n        if(event.key != null){\r\n            key += event.key.toLowerCase();\r\n        }\r\n\r\n        let actionEntries = this.keyEntries[key];\r\n\r\n        if(actionEntries != null){\r\n            for(let actionEntry of actionEntries){\r\n                if (actionEntry.active) {\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    actionEntry.action(actionEntry.identifier, null, key);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { escapeHtml } from \"./StringTools.js\";\r\n\r\nexport function makeEditable(elementWithText: JQuery<HTMLElement>,\r\n    elementToReplace: JQuery<HTMLElement>,\r\n    renameDoneCallback: (newContent: string) => void, selectionRange: { start: number, end: number } = null) {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    if (elementToReplace == null) {\r\n        elementToReplace = elementWithText;\r\n    }\r\n\r\n    let $input = jQuery('<input type=\"text\" class=\"jo_inplaceeditor\" spellcheck=\"false\">');\r\n    $input.css({\r\n        width: elementToReplace.css('width'),\r\n        height: elementToReplace.css('height'),\r\n        color: elementToReplace.css('color'),\r\n        position: elementToReplace.css('position'),\r\n        \"background-color\": elementToReplace.css('background-color'),\r\n        \"font-size\": elementToReplace.css('font-size'),\r\n        \"font-weight\": elementToReplace.css('font-weight'),\r\n        \"box-sizing\": \"border-box\"\r\n    });\r\n    $input.val(elementWithText.text());\r\n    $input.on(mousePointer + \"down\", (e) => { e.stopPropagation(); })\r\n\r\n    if (selectionRange != null) {\r\n        (<HTMLInputElement>$input[0]).setSelectionRange(selectionRange.start, selectionRange.end);\r\n    }\r\n\r\n    elementToReplace.after($input);\r\n    elementToReplace.hide();\r\n    setTimeout(() => {\r\n        $input.focus();\r\n    }, 300);\r\n\r\n    $input.on(\"keydown.me\", (ev) => {\r\n        if (ev.key == \"Enter\" || ev.key == \"Escape\") {\r\n            $input.off(\"keydown.me\");\r\n            $input.off(\"focusout.me\");\r\n            $input.remove();\r\n            elementToReplace.show();\r\n            let newValue = escapeHtml(<string>$input.val());\r\n            renameDoneCallback(newValue);\r\n            return;\r\n        }\r\n    });\r\n\r\n    $input.on(\"focusout.me\", (ev) => {\r\n        $input.off(\"keydown.me\");\r\n        $input.off(\"focusout.me\");\r\n        $input.remove();\r\n        elementToReplace.show();\r\n        let newValue = escapeHtml(<string>$input.val());\r\n        renameDoneCallback(newValue);\r\n        return;\r\n    });\r\n\r\n}\r\n\r\nexport type ContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: () => void;\r\n    link?: string;\r\n    subMenu?: ContextMenuItem[]\r\n};\r\n\r\nexport function openContextMenu(items: ContextMenuItem[], x: number, y: number): JQuery<HTMLElement> {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    let $contextMenu = jQuery('<div class=\"jo_contextmenu\"></div>');\r\n\r\n    let $openSubMenu: JQuery<HTMLElement> = null;\r\n    let parentMenuItem: ContextMenuItem = null;\r\n\r\n    for (let mi of items) {\r\n        let caption: string = mi.caption;\r\n        if (mi.link != null) {\r\n            caption = `<a href=\"${mi.link}\" target=\"_blank\" class=\"jo_menulink\">${mi.caption}</a>`;\r\n        }\r\n        let $item = jQuery('<div>' + caption + (mi.subMenu != null ? '<span style=\"float: right\"> &nbsp; &nbsp; &gt;</span>' : \"\") + '</div>');\r\n        if (mi.color != null) {\r\n            $item.css('color', mi.color);\r\n        }\r\n        if (mi.link == null) {\r\n            $item.on(mousePointer + 'up.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n                jQuery('.jo_contextmenu').remove();\r\n                jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n                jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n                jQuery(document).off(\"keydown.contextmenu\");\r\n                mi.callback();\r\n            });\r\n            $item.on(mousePointer + 'down.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n            });\r\n        } else {\r\n            let $link = $item.find('a');\r\n            $link.on(mousePointer + \"up\", (event) => {\r\n                event.stopPropagation();\r\n                setTimeout(() => {\r\n                    $item.hide();\r\n                }, 500);\r\n            })\r\n            $link.on(mousePointer + \"down\", (event) => {\r\n                event.stopPropagation();\r\n            })\r\n\r\n        }\r\n\r\n        $item.on(mousePointer + 'move.contextmenu', () => {\r\n            if (mi != parentMenuItem && $openSubMenu != null) {\r\n                $openSubMenu.remove();\r\n                parentMenuItem = null;\r\n                $openSubMenu = null;\r\n            }\r\n            if (mi.subMenu != null) {\r\n                $openSubMenu = openContextMenu(mi.subMenu, $item.offset().left + $item.width(), $item.offset().top);\r\n            }\r\n        });\r\n\r\n        $contextMenu.append($item);\r\n    }\r\n\r\n    jQuery(document).on(mousePointer + \"down.contextmenu\", (e) => {\r\n        jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n        jQuery(document).off(\"keydown.contextmenu\");\r\n        jQuery('.jo_contextmenu').remove();\r\n    })\r\n\r\n    jQuery(document).on(\"keydown.contextmenu\", (ev) => {\r\n        if (ev.key == \"Escape\") {\r\n            jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n            jQuery(document).off(\"keydown.contextmenu\");\r\n            jQuery('.jo_contextmenu').remove();\r\n        }\r\n    });\r\n\r\n    let leftRight = x > window.innerWidth * 0.8 ? \"right\" : \"left\";\r\n    let xp = x > window.innerWidth * 0.8 ? window.innerWidth - x : x;\r\n    let topBottom = y > window.innerHeight * 0.8 ? \"bottom\" : \"top\";\r\n    let yp = y > window.innerHeight * 0.8 ? window.innerHeight - y : y;\r\n\r\n    let css = {};\r\n    css[leftRight] = xp + \"px\";\r\n    css[topBottom] = yp + \"px\";\r\n\r\n    $contextMenu.css(css);\r\n\r\n\r\n    jQuery(\"body\").append($contextMenu);\r\n    $contextMenu.show();\r\n\r\n    return $contextMenu;\r\n}\r\n\r\nexport function makeTabs(tabDiv: JQuery<HTMLElement>) {\r\n    let headings = tabDiv.find('.jo_tabheadings>div').not('.jo_noHeading');\r\n    let tabs = tabDiv.find('.jo_tabs>div');\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    headings.on(mousePointer + \"down\", (ev) => {\r\n        let target = jQuery(ev.target);\r\n        headings.removeClass('jo_active');\r\n        target.addClass('jo_active');\r\n        let tab = tabDiv.find('.' + target.data('target'));\r\n        tabs.removeClass('jo_active');\r\n        tabs.trigger('myhide');\r\n        tab.addClass('jo_active');\r\n        tab.trigger('myshow');\r\n    });\r\n\r\n}\r\n\r\nexport function convertPxToNumber(pxString: string): number {\r\n    pxString = pxString.replace('px', '').trim();\r\n    return Number.parseInt(pxString);\r\n}\r\n\r\nexport function makeDiv(id: string, klass: string = \"\", text: string = \"\", css?: { [id: string]: any }): JQuery<HTMLDivElement> {\r\n\r\n    let s = \"\";\r\n    if (id != null && id != \"\") s += ` id=\"${id}\"`;\r\n\r\n    if (klass != null && klass != \"\") s += ` class=\"${klass}\"`;\r\n\r\n    let div = jQuery(`<div${s}></div>`);\r\n\r\n    if (css != null) {\r\n        div.css(css);\r\n    }\r\n\r\n    if (text != null && text != \"\") {\r\n        div.text(text);\r\n    }\r\n\r\n    return <any>div;\r\n\r\n}\r\n\r\nexport type SelectItem = {\r\n    value: string | number,\r\n    object: any,\r\n    caption: string\r\n}\r\n\r\nexport function setSelectItems($selectElement: JQuery<HTMLSelectElement>, items: SelectItem[], activeItemValue?: string | number) {\r\n    $selectElement.empty();\r\n    items.forEach(item => {\r\n        let selected: string = (item.value == activeItemValue) ? ' selected=\"selected\"' : \"\";\r\n        let element = jQuery(`<option value=${item.value}${selected}>${item.caption}</option>`);\r\n        $selectElement.append(element);\r\n        element.data('object', item.object);\r\n    }\r\n    );\r\n\r\n    $selectElement.data('items', items);\r\n\r\n\r\n}\r\n\r\nexport function getSelectedObject($selectDiv: JQuery<HTMLSelectElement>) {\r\n\r\n    let items: SelectItem[] = $selectDiv.data('items');\r\n\r\n    let selectedValue = $selectDiv.val();\r\n\r\n    return items.find(item => item.value == selectedValue)?.object;\r\n\r\n}\r\n\r\nexport var jo_mouseDetected: boolean = false;\r\nexport function checkIfMousePresent() {\r\n    if (matchMedia('(pointer:fine)').matches) {\r\n        jo_mouseDetected = true;\r\n    }\r\n}\r\n\r\nexport function animateToTransparent($element: JQuery<HTMLElement>, cssProperty: string, startColorRgb: number[], duration: number) {\r\n    let colorPraefix = 'rgba(' + startColorRgb[0] + \", \" + startColorRgb[1] + \", \" + startColorRgb[2] + \", \";\r\n    let value = 1.0;\r\n    let delta = value / (duration / 20);\r\n\r\n    let animate = () => {\r\n        $element.css(cssProperty, colorPraefix + value + \")\");\r\n        value -= delta;\r\n        if (value < 0) {\r\n            $element.css(cssProperty, \"\");\r\n        } else {\r\n            setTimeout(animate, 20);\r\n        }\r\n    }\r\n\r\n    animate();\r\n}\r\n\r\nexport function downloadFile(obj: any, filename: string, isBlob: boolean = false) {\r\n    var blob = isBlob? obj : new Blob([JSON.stringify(obj)], { type: 'text/plain' });\r\n    //@ts-ignore\r\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n        //@ts-ignore\r\n        window.navigator.msSaveOrOpenBlob(blob, filename);\r\n    } else {\r\n        var e = document.createEvent('MouseEvents'),\r\n            a = document.createElement('a');\r\n        a.download = filename;\r\n        a.href = window.URL.createObjectURL(blob);\r\n        a.dataset.downloadurl = ['text/plain', a.download, a.href].join(':');\r\n        //@ts-ignore\r\n        e.initEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\r\n        a.dispatchEvent(e);\r\n        a.remove();\r\n    }\r\n}\r\n\r\n\r\nfunction fallbackCopyTextToClipboard(text) {\r\n    var textArea = document.createElement(\"textarea\");\r\n    textArea.value = text;\r\n\r\n    // Avoid scrolling to bottom\r\n    textArea.style.top = \"0\";\r\n    textArea.style.left = \"0\";\r\n    textArea.style.position = \"fixed\";\r\n\r\n    document.body.appendChild(textArea);\r\n    textArea.focus();\r\n    textArea.select();\r\n\r\n    try {\r\n        var successful = document.execCommand('copy');\r\n    } catch (err) {\r\n        console.error('Fallback: Oops, unable to copy', err);\r\n    }\r\n\r\n    document.body.removeChild(textArea);\r\n}\r\n\r\nexport function copyTextToClipboard(text) {\r\n    if (!navigator.clipboard) {\r\n        fallbackCopyTextToClipboard(text);\r\n        return;\r\n    }\r\n    navigator.clipboard.writeText(text).then(function () {\r\n    }, function (err) {\r\n        console.error('Async: Could not copy text: ', err);\r\n    });\r\n}\r\n","import { LoginRequest, PerformanceData } from \"./Data.js\";\r\n\r\n// export var credentials: { username: string, password: string } = { username: null, password: null };\r\n\r\nexport class PerformanceCollector {\r\n    static performanceData: PerformanceData[] = [];\r\n    static performanceDataCount: number = 0;\r\n    static lastTimeSent: number = performance.now();\r\n\r\n    static registerPerformanceEntry(url: string, startTime: number) {\r\n        let pe: PerformanceData = PerformanceCollector.performanceData.find(pe => pe.url == url);\r\n        if (pe == null) {\r\n            pe = { count: 0, sumTime: 0, url: url };\r\n            PerformanceCollector.performanceData.push(pe);\r\n        }\r\n        pe.count++;\r\n        let dt = Math.round(performance.now() - startTime);\r\n        pe.sumTime += dt;\r\n        PerformanceCollector.performanceDataCount++;\r\n        // console.log(\"Performance entry for path \" + pe.url + \": \" + dt + \" ms, aggregated: \" + pe.sumTime + \" for \" + pe.count + \" requests.\");\r\n    }\r\n\r\n    static sendDataToServer() {\r\n        if (performance.now() - PerformanceCollector.lastTimeSent > 3 * 60 * 1000) {\r\n            let request = {\r\n                data: PerformanceCollector.performanceData\r\n            }\r\n\r\n            PerformanceCollector.performanceData = [];\r\n            PerformanceCollector.performanceDataCount = 0;\r\n            PerformanceCollector.lastTimeSent = performance.now();\r\n\r\n            ajax(\"collectPerformanceData\", request, () => { })\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport function ajax(url: string, request: any, successCallback: (response: any) => void,\r\n\r\n    errorCallback?: (message: string) => void) {\r\n\r\n    showNetworkBusy(true);\r\n    let time = performance.now();\r\n\r\n    $.ajax({\r\n        type: 'POST',\r\n        async: true,\r\n        data: JSON.stringify(request),\r\n        contentType: 'application/json',\r\n        url: \"servlet/\" + url,\r\n        success: function (response: any) {\r\n\r\n            PerformanceCollector.registerPerformanceEntry(url, time);\r\n\r\n            showNetworkBusy(false);\r\n            if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n                let error = \"Fehler bei der Bearbeitung der Anfrage\"\r\n                if (response.message != null) error = response.message;\r\n\r\n                if (error == \"Not logged in\") {\r\n                    // setTimeout(() => newLogin(url, request, successCallback, errorCallback), 10000);\r\n                    // location.reload();\r\n                }\r\n\r\n                if (errorCallback) errorCallback(error);\r\n            } else {\r\n                successCallback(response);\r\n            }\r\n            return;\r\n\r\n        },\r\n        error: function (jqXHR, message) {\r\n            showNetworkBusy(false);\r\n            if (errorCallback) {\r\n                let statusText = \"Server nicht erreichbar.\"\r\n                if (jqXHR.status != 0) {\r\n                    statusText = \"\" + jqXHR.status\r\n                }\r\n                errorCallback(message + \": \" + statusText);\r\n                return;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function showNetworkBusy(busy: boolean) {\r\n    if (busy) {\r\n        jQuery('.jo_network-busy').css('visibility','visible');\r\n    } else {\r\n        jQuery('.jo_network-busy').css('visibility','hidden');\r\n    }\r\n}\r\n\r\n\r\n","import { DatabaseData } from \"../communication/Data.js\";\r\n\r\nexport class WDatabase {\r\n\r\n    id: number;\r\n    name: string;\r\n\r\n    templateDump: Uint8Array;\r\n    based_on_template_id: number;\r\n    templateName: string;\r\n\r\n    statements: string[];\r\n    published_to: number;\r\n    version: number;\r\n    description: string;\r\n    owner_id: number;\r\n\r\n    static fromDatabaseData(data: DatabaseData, version: number): WDatabase {\r\n\r\n        let db = new WDatabase();\r\n\r\n        db.id = data.id;\r\n        db.name = data.name;\r\n        db.statements = data.statements;\r\n        db.published_to = data.published_to;\r\n        db.version = version;\r\n        db.description = data.description;\r\n        db.templateDump = null;\r\n        db.based_on_template_id = data.based_on_template_id;\r\n        db.owner_id = data.owner_id;\r\n        return db;\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n","export class CacheManager {\r\n    \r\n    fetchTemplateFromCache(databaseId: number, callback: (templateDump: Uint8Array) => void) {\r\n        if(databaseId == null){callback(null); return;}\r\n        let that = this;\r\n        if(!this.cacheAvailable()) callback(null);\r\n        this.getCache((cache) => {\r\n            cache.match(that.databaseIdToCacheIdentifier(databaseId)).then(\r\n                (value)=>{\r\n                    value.arrayBuffer().then((buffer) => callback(new Uint8Array(buffer)));\r\n                })\r\n                .catch(() => callback(null));\r\n        })        \r\n    }\r\n\r\n    saveTemplateToCache(databaseId: number, templateDump: Uint8Array) {\r\n        if(!this.cacheAvailable()) return;\r\n        let that = this;\r\n        this.getCache((cache) => {\r\n            cache.put(that.databaseIdToCacheIdentifier(databaseId), new Response(templateDump));\r\n        })        \r\n    }\r\n\r\n    cacheAvailable(): boolean {\r\n        return 'caches' in self;\r\n    }\r\n\r\n    getCache(callback: (cache: Cache) => void) {\r\n        caches.open('my-cache').then(callback);\r\n    }\r\n\r\n    databaseIdToCacheIdentifier(databaseId: number): string {\r\n        return \"/onlineIdeTemplateDb\" + databaseId;\r\n    }\r\n\r\n}","import { Main } from \"../main/Main.js\";\nimport { ajax } from \"./AjaxHelper.js\";\nimport { GetWebSocketTokenResponse } from \"./Data.js\";\nimport { NetworkManager } from \"./NetworkManager.js\";\n\ntype SubscriptionMessageFromClient = {\n    command: number,  // 1 == \"subscribe\", 2 == \"disconnect\"\n    // 3 == \"keepalive request\"\n    token?: string   // when \"subscribe\"\n}\n\ntype SubscriptionMessageFromServer = {\n    command: number // 1 == Acknoledge Connection, 2 == Notify, 3 == disconnect, 4 == keep alive response\n}\n\ntype NotifierState = \"connecting\" | \"connected\" | \"subscribed\" | \"disconnected\";\n\nexport class NotifierClient {\n\n    connection: WebSocket;\n    state: NotifierState;\n\n    constructor(private main: Main, private networkManager: NetworkManager){\n        this.connect();\n    }\n\n    connect() {\n        this.state = \"connecting\";\n\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\n\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/subscriptionwebsocket\";\n            this.connection = new WebSocket(url);\n\n            this.connection.onerror = (error: Event) => { this.onError(error); }\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\n\n            this.connection.onopen = (event: Event) => {\n                let request: SubscriptionMessageFromClient = {\n                    command: 1,   // \"subscribe\"\n                    token: response.token\n                }\n\n                this.state = \"connected\";\n                this.sendIntern(JSON.stringify(request));\n\n            }\n\n            let that = this;\n            setTimeout(() => {\n                if(this.state != \"subscribed\"){\n                    this.networkManager.forcedUpdateEvery = 1;\n                    this.networkManager.counterTillForcedUpdate = 1;\n                }\n            }, 7000);\n\n        });\n    }\n\n    disconnect(){\n        let request: SubscriptionMessageFromClient = {\n            command: 2   // \"disconnect\"\n        }\n\n        this.state = \"connected\";\n        this.sendIntern(JSON.stringify(request));\n\n    }\n\n    unsentMessages: string[] = [];\n    sendIntern(message: string) {\n\n        if (this.state != \"disconnected\") {\n            try {\n                this.connection.send(message);\n            } catch (exception) {\n                console.log(exception);\n            }\n        }\n    }\n\n    onClose(event: CloseEvent) {\n        this.state = \"disconnected\";\n    }\n\n    onMessage(event: MessageEvent) {\n\n        let response: SubscriptionMessageFromClient = JSON.parse(event.data);\n        if (response.command == undefined) return;\n\n        // 1 == Acknoledge Connection, 2 == Notify, 3 == disconnect, 4 == keep alive response\n        switch (response.command) {\n            case 1: // Acknoledge Connection\n                this.state = \"subscribed\";\n                break;\n            case 2: // Notify\n                this.networkManager.sendUpdates(() => {}, true);\n                break;\n            case 3: // disconnect\n                this.state = \"disconnected\";\n                break;\n            case 4: // keep alive response\n                break;\n        }\n    }\n\n    onError(error: Event) {\n        console.log(\"Fehler beim Notifier-Websocket\");\n    }\n\n}","import { Main } from \"../main/Main.js\";\r\nimport { ajax } from \"./AjaxHelper.js\";\r\nimport { WorkspaceData, FileData, SendUpdatesRequest, SendUpdatesResponse, CreateOrDeleteFileOrWorkspaceRequest, CRUDResponse, UpdateUserSettingsRequest, UpdateUserSettingsResponse, DuplicateWorkspaceRequest, DuplicateWorkspaceResponse, ClassData, DistributeWorkspaceRequest, DistributeWorkspaceResponse, GetDatabaseRequest, getDatabaseResponse, GetNewStatementsRequest, GetNewStatementsResponse, AddDatabaseStatementsRequest, AddDatabaseStatementsResponse, TemplateListEntry, GetTemplateListRequest, GetTemplateListResponse, CreateWorkspaceData, GetDatabaseSettingsResponse, GetDatabaseSettingsRequest, setDatabaseSecretRequest as SetDatabaseSecretRequest, SetDatabaseSecretResponse, SetPublishedToRequest, SetPublishedToResponse, GetTemplateRequest, RollbackRequest, RollbackResponse } from \"./Data.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { WDatabase } from \"../workspace/WDatabase.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { CacheManager } from \"./CacheManager.js\";\r\nimport { NotifierClient } from \"./NotifierClient.js\";\r\n\r\nexport class NetworkManager {\r\n\r\n    timerhandle: any;\r\n\r\n    ownUpdateFrequencyInSeconds: number = 20;\r\n    teacherUpdateFrequencyInSeconds: number = 5;\r\n\r\n    updateFrequencyInSeconds: number = 20;\r\n    forcedUpdateEvery: number = 4;\r\n    counterTillForcedUpdate: number = 2;\r\n    secondsTillNextUpdate: number = this.updateFrequencyInSeconds;\r\n    errorHappened: boolean = false;\r\n\r\n    interval: any;\r\n\r\n    notifierClient: NotifierClient;\r\n\r\n    constructor(private main: Main, private $updateTimerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initializeTimer() {\r\n\r\n        let that = this;\r\n        this.$updateTimerDiv.find('svg').attr('width', that.updateFrequencyInSeconds);\r\n\r\n        if (this.interval != null) clearInterval(this.interval);\r\n\r\n        this.interval = setInterval(() => {\r\n\r\n            if (that.main.user == null) return; // don't call server if no user is logged in\r\n\r\n            that.secondsTillNextUpdate--;\r\n\r\n            if (that.secondsTillNextUpdate < 0) {\r\n                that.secondsTillNextUpdate = that.updateFrequencyInSeconds;\r\n                this.counterTillForcedUpdate--;\r\n                let forceUpdate = this.counterTillForcedUpdate == 0;\r\n                if (forceUpdate) this.counterTillForcedUpdate = this.forcedUpdateEvery;\r\n                that.sendUpdates(() => { }, forceUpdate);\r\n            }\r\n\r\n            let $rect = this.$updateTimerDiv.find('.jo_updateTimerRect');\r\n\r\n            $rect.attr('width', that.secondsTillNextUpdate + \"px\");\r\n\r\n            if (that.errorHappened) {\r\n                $rect.css('fill', '#c00000');\r\n                this.$updateTimerDiv.attr('title', \"Fehler beim letzten Speichervorgang -> Werd's wieder versuchen\");\r\n            } else {\r\n                $rect.css('fill', '#008000');\r\n                this.$updateTimerDiv.attr('title', that.secondsTillNextUpdate + \" Sekunden bis zum nächsten Speichern\");\r\n            }\r\n\r\n        }, 1000);\r\n\r\n    }\r\n\r\n    initializeNotifierClient(){\r\n        this.notifierClient = new NotifierClient(this.main, this);\r\n    }\r\n\r\n    sendUpdates(callback?: () => void, sendIfNothingIsDirty: boolean = false) {\r\n\r\n        if (this.main.user == null) return;\r\n\r\n        this.main.projectExplorer.writeEditorTextToFile();\r\n\r\n        if (this.main.userDataDirty) {\r\n\r\n            this.main.userDataDirty = false;\r\n            this.sendUpdateUserSettings(() => { });\r\n        }\r\n\r\n\r\n        let wdList: WorkspaceData[] = [];\r\n        let fdList: FileData[] = [];\r\n\r\n        for (let ws of this.main.workspaceList) {\r\n\r\n            if (!ws.saved) {\r\n                wdList.push(ws.getWorkspaceData(false));\r\n                ws.saved = true;\r\n            }\r\n\r\n            for (let m of ws.moduleStore.getModules(false)) {\r\n                if (!m.file.saved) {\r\n                    m.file.text = m.getProgramTextFromMonacoModel();\r\n                    fdList.push(m.getFileData(ws));\r\n                    // console.log(\"Save file \" + m.file.name);\r\n                    m.file.saved = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        let request: SendUpdatesRequest = {\r\n            workspacesWithoutFiles: wdList,\r\n            files: fdList,\r\n            owner_id: this.main.workspacesOwnerId,\r\n            userId: this.main.user.id,\r\n            language: 1,\r\n            currentWorkspaceId: this.main.getCurrentWorkspace()?.id,\r\n            getModifiedWorkspaces: false\r\n        }\r\n\r\n        let that = this;\r\n        if (wdList.length > 0 || fdList.length > 0 || sendIfNothingIsDirty) {\r\n            ajax('sendUpdates', request, (response: SendUpdatesResponse) => {\r\n                that.errorHappened = !response.success;\r\n                if (!that.errorHappened) {\r\n\r\n                    that.updateWorkspaces(request, response);\r\n\r\n                    if (callback != null) {\r\n                        callback();\r\n                        return;\r\n                    }\r\n                }\r\n            }, () => {\r\n                that.errorHappened = true;\r\n            });\r\n        } else {\r\n            if (callback != null) {\r\n                callback();\r\n                return;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    sendCreateWorkspace(wd: CreateWorkspaceData, owner_id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            wd.id = Math.round(Math.random() * 10000000);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"workspace\",\r\n            data: wd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            wd.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n\r\n    getDatabaseSettings(workspace_id: number, callback: (response: GetDatabaseSettingsResponse) => void) {\r\n        let request: GetDatabaseSettingsRequest = {\r\n            workspaceId: workspace_id\r\n        };\r\n        ajax(\"getDatabaseSettings\", request, (response: GetDatabaseSettingsResponse) => {\r\n            callback(response);\r\n        }, (message) => { alert(message) })\r\n    }\r\n\r\n    setNewSecret(workspace_id: number, kind: string, callback: (secret: string) => void) {\r\n        let request: SetDatabaseSecretRequest = {\r\n            workspaceId: workspace_id,\r\n            secretKind: kind\r\n        };\r\n        ajax(\"setNewSecret\", request, (response: SetDatabaseSecretResponse) => {\r\n            callback(response.secret);\r\n        }, (message) => { alert(message) })\r\n    }\r\n\r\n    setNameAndPublishedTo(workspace_id: number, name: string, published_to: number, description: string, callback: () => void) {\r\n        let request: SetPublishedToRequest = {\r\n            workspaceId: workspace_id,\r\n            databaseName: name,\r\n            publishedTo: published_to,\r\n            description: description\r\n        };\r\n\r\n        ajax(\"setPublishedTo\", request, (response: SetPublishedToResponse) => {\r\n            callback();\r\n        }, (message) => { alert(message) })\r\n    }\r\n\r\n\r\n\r\n    sendCreateFile(m: Module, ws: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        let fd: FileData = m.getFileData(ws);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"file\",\r\n            data: fd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            m.file.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDuplicateWorkspace(ws: Workspace, callback: (error: string, workspaceData?: WorkspaceData) => void) {\r\n\r\n        let request: DuplicateWorkspaceRequest = {\r\n            workspace_id: ws.id,\r\n            language: 1\r\n        }\r\n\r\n        ajax(\"duplicateWorkspace\", request, (response: DuplicateWorkspaceResponse) => {\r\n            callback(response.message, response.workspace)\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDistributeWorkspace(ws: Workspace, klasse: ClassData, student_ids: number[], callback: (error: string) => void) {\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request: DistributeWorkspaceRequest = {\r\n                workspace_id: ws.id,\r\n                class_id: klasse?.id,\r\n                student_ids: student_ids,\r\n                language: 1\r\n            }\r\n\r\n            ajax(\"distributeWorkspace\", request, (response: DistributeWorkspaceResponse) => {\r\n                callback(response.message)\r\n            }, callback);\r\n\r\n        }, false);\r\n\r\n    }\r\n\r\n\r\n    sendDeleteWorkspaceOrFile(type: \"workspace\" | \"file\", id: number, callback: (error: string) => void) {\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"delete\",\r\n            entity: type,\r\n            id: id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            if (response.success) {\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendUpdateUserSettings(callback: (error: string) => void) {\r\n\r\n        let request: UpdateUserSettingsRequest = {\r\n            settings: this.main.user.settings,\r\n            userId: this.main.user.id,\r\n            current_workspace_id: this.main.getCurrentWorkspace()?.id\r\n        }\r\n\r\n        ajax(\"updateUserSettings\", request, (response: UpdateUserSettingsResponse) => {\r\n            if (response.success) {\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n\r\n    getNewStatements(workspace: Workspace, callback: (statements: string[], firstNewStatementIndex: number) => void) {\r\n        let request: GetNewStatementsRequest = {\r\n            workspaceId: workspace.id,\r\n            version_before: workspace.database.version\r\n        }\r\n\r\n        ajax(\"getNewStatements\", request, (response: GetNewStatementsResponse) => {\r\n            if (response.success) {\r\n                callback(response.newStatements, response.firstNewStatementIndex);\r\n            }\r\n        });\r\n    }\r\n\r\n    AddDatabaseStatements(workspace: Workspace, statements: string[], callback: (statements_before: string[], new_version: number) => void) {\r\n        let request: AddDatabaseStatementsRequest = {\r\n            workspaceId: workspace.id,\r\n            version_before: workspace.database.version,\r\n            statements: statements\r\n        }\r\n\r\n        ajax(\"addDatabaseStatements\", request, (response: AddDatabaseStatementsResponse) => {\r\n            if (response.success) {\r\n                callback(response.statements_before, response.new_version);\r\n            }\r\n        });\r\n    }\r\n\r\n    fetchDatabase(workspace: Workspace, callback: (error: string) => void) {\r\n\r\n        let cacheManager: CacheManager = new CacheManager();\r\n\r\n        let request: GetDatabaseRequest = {\r\n            workspaceId: workspace.id\r\n        }\r\n\r\n        ajax(\"getDatabase\", request, (response: getDatabaseResponse) => {\r\n            if (response.success) {\r\n\r\n                workspace.database = WDatabase.fromDatabaseData(response.database, response.version)\r\n                cacheManager.fetchTemplateFromCache(workspace.database.based_on_template_id, (templateDump: Uint8Array) => {\r\n\r\n                    if (templateDump != null) {\r\n                        try{\r\n                            // @ts-ignore\r\n                            workspace.database.templateDump = pako.inflate(templateDump);\r\n                        } catch(err){\r\n                            console.log(err);\r\n                            console.log(\"Dump seems not to be compressed...\");\r\n                            workspace.database.templateDump = templateDump;\r\n                        }\r\n                        callback(null);\r\n                        return;\r\n                    } else {\r\n                        if (workspace.database.based_on_template_id == null) {\r\n                            callback(null);\r\n                            return\r\n                        }\r\n                        this.fetchTemplate(workspace.id, (template) => {\r\n                            if (template != null) {\r\n                                cacheManager.saveTemplateToCache(workspace.database.based_on_template_id, template);\r\n                                // @ts-ignore\r\n                                workspace.database.templateDump = pako.inflate(template);\r\n                                callback(null);\r\n                                return;\r\n                            } else {\r\n                                callback(\"Konnte das Template nicht laden.\");\r\n                                return;\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    fetchTemplate(workspaceId: number, callback: (template: Uint8Array) => void) {\r\n        let request: GetTemplateRequest = {\r\n            workspaceId: workspaceId\r\n        }\r\n\r\n        $.ajax({\r\n            type: 'POST',\r\n            async: true,\r\n            data: JSON.stringify(request),\r\n            contentType: 'application/json',\r\n            url: \"servlet/getTemplate\",\r\n            xhrFields: { responseType: 'arraybuffer' },\r\n            success: function (response: any) {\r\n                callback(new Uint8Array(response));\r\n            },\r\n            error: function (jqXHR, message) {\r\n                alert(\"Konnte das Template nicht laden.\");\r\n                callback(null);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    fetchTemplateList(callback: (templateList: TemplateListEntry[]) => void) {\r\n        let request: GetTemplateListRequest = { user_id: this.main.user.id }\r\n\r\n        ajax(\"getTemplateList\", request, (response: GetTemplateListResponse) => {\r\n            if (response.success) {\r\n                callback(response.templateList);\r\n            } else {\r\n                callback([]);\r\n            }\r\n        }, (message) => {\r\n            alert(message);\r\n            callback([]);\r\n        })\r\n\r\n    }\r\n\r\n    updateWorkspaces(sendUpdatesRequest: SendUpdatesRequest, sendUpdatesResponse: SendUpdatesResponse) {\r\n\r\n        let idToRemoteWorkspaceDataMap: Map<number, WorkspaceData> = new Map();\r\n\r\n        let fileIdsSended = [];\r\n        sendUpdatesRequest.files.forEach(file => fileIdsSended.push(file.id));\r\n\r\n        sendUpdatesResponse.workspaces.workspaces.forEach(wd => idToRemoteWorkspaceDataMap.set(wd.id, wd));\r\n\r\n        let newWorkspaceNames: string[] = [];\r\n\r\n        for (let remoteWorkspace of sendUpdatesResponse.workspaces.workspaces) {\r\n\r\n            let localWorkspaces = this.main.workspaceList.filter(ws => ws.id == remoteWorkspace.id);\r\n\r\n            // Did student get a workspace from his/her teacher?\r\n            if (localWorkspaces.length == 0) {\r\n                newWorkspaceNames.push(remoteWorkspace.name);\r\n                this.createNewWorkspaceFromWorkspaceData(remoteWorkspace);\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        for (let workspace of this.main.workspaceList) {\r\n            let remoteWorkspace: WorkspaceData = idToRemoteWorkspaceDataMap.get(workspace.id);\r\n            if (remoteWorkspace != null) {\r\n                let idToRemoteFileDataMap: Map<number, FileData> = new Map();\r\n                remoteWorkspace.files.forEach(fd => idToRemoteFileDataMap.set(fd.id, fd));\r\n\r\n                let idToModuleMap: Map<number, Module> = new Map();\r\n                // update/delete files if necessary\r\n                for (let module of workspace.moduleStore.getModules(false)) {\r\n                    let fileId = module.file.id;\r\n                    idToModuleMap.set(fileId, module);\r\n                    let remoteFileData = idToRemoteFileDataMap.get(fileId);\r\n                    if (remoteFileData == null) {\r\n                        this.main.projectExplorer.fileListPanel.removeElement(module);\r\n                        this.main.currentWorkspace.moduleStore.removeModule(module);\r\n                    } else if (remoteFileData.version > module.file.version) {\r\n                        if (fileIdsSended.indexOf(fileId) < 0 || remoteFileData.forceUpdate) {\r\n                            module.file.text = remoteFileData.text;\r\n                            module.model.setValue(remoteFileData.text);\r\n\r\n                            module.file.saved = true;\r\n                            module.lastSavedVersionId = module.model.getAlternativeVersionId()\r\n                        }\r\n                        module.file.version = remoteFileData.version;\r\n                    }\r\n                }\r\n\r\n                // add files if necessary\r\n                for (let remoteFile of remoteWorkspace.files) {\r\n                    if (idToModuleMap.get(remoteFile.id) == null) {\r\n                        this.createFile(workspace, remoteFile);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (newWorkspaceNames.length > 0) {\r\n            let message: string = newWorkspaceNames.length > 1 ? \"Folgende Workspaces hat Deine Lehrkraft Dir gesendet: \" : \"Folgenden Workspace hat Deine Lehrkraft Dir gesendet: \";\r\n            message += newWorkspaceNames.join(\", \");\r\n            alert(message);\r\n        }\r\n\r\n        this.main.projectExplorer.workspaceListPanel.sortElements();\r\n        this.main.projectExplorer.fileListPanel.sortElements();\r\n\r\n    }\r\n\r\n    public createNewWorkspaceFromWorkspaceData(remoteWorkspace: WorkspaceData, withSort: boolean = false) {\r\n        let w = this.main.createNewWorkspace(remoteWorkspace.name, remoteWorkspace.owner_id);\r\n        w.id = remoteWorkspace.id;\r\n        w.sql_history = \"\";\r\n        w.path = remoteWorkspace.path;\r\n        w.isFolder = remoteWorkspace.isFolder;\r\n\r\n        this.main.workspaceList.push(w);\r\n        let path = remoteWorkspace.path.split(\"/\");\r\n        if (path.length == 1 && path[0] == \"\") path = [];\r\n\r\n        let panelElement: AccordionElement = {\r\n            name: remoteWorkspace.name,\r\n            externalElement: w,\r\n            iconClass: \"workspace\",\r\n            isFolder: remoteWorkspace.isFolder,\r\n            path: path\r\n        };\r\n\r\n        this.main.projectExplorer.workspaceListPanel.addElement(panelElement, true);\r\n        w.panelElement = panelElement;\r\n\r\n        for (let fileData of remoteWorkspace.files) {\r\n            this.createFile(w, fileData);\r\n        }\r\n\r\n        if (withSort) {\r\n            this.main.projectExplorer.workspaceListPanel.sortElements();\r\n            this.main.projectExplorer.fileListPanel.sortElements();\r\n        }\r\n    }\r\n\r\n    createFile(workspace: Workspace, remoteFile: FileData) {\r\n        let ae: any = null; //AccordionElement\r\n        if (workspace == this.main.currentWorkspace) {\r\n            ae = {\r\n                name: remoteFile.name,\r\n                externalElement: null\r\n            }\r\n\r\n            this.main.projectExplorer.fileListPanel.addElement(ae, true);\r\n        }\r\n\r\n        let f: any = { // File\r\n            id: remoteFile.id,\r\n            name: remoteFile.name,\r\n            dirty: false,\r\n            saved: true,\r\n            text: remoteFile.text,\r\n            version: remoteFile.version,\r\n            identical_to_repository_version: true,\r\n            workspace_id: workspace.id,\r\n            panelElement: ae\r\n        };\r\n        let m = this.main.projectExplorer.getNewModule(f); //new Module(f, this.main);\r\n        if (ae != null) ae.externalElement = m;\r\n        let modulStore = workspace.moduleStore;\r\n        modulStore.putModule(m);\r\n\r\n    }\r\n\r\n    rollback(callback: (error: string, rollbackLocalNeeded: boolean) => void) {\r\n        let workspace = this.main.currentWorkspace;\r\n        let request: RollbackRequest = { workspaceId: workspace.id, version: workspace.database.version }\r\n\r\n        ajax(\"rollback\", request, (response: RollbackResponse) => {\r\n            if (response.success) {\r\n                \r\n                callback(null, workspace.database.version > response.new_version);\r\n            } else {\r\n                alert(response.message);\r\n                callback(response.message, false);\r\n            }\r\n        }, (message) => {\r\n            alert(message);\r\n            callback(message, false);\r\n        })\r\n\r\n    }\r\n\r\n\r\n}","import { UploadTemplateResponse } from \"../communication/Data.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\n\r\nexport class TemplateUploader {\r\n\r\n    uploadCurrentDatabase(workspace_id: number, main: Main, dump: Uint8Array | null, \r\n        reason: \"publishDatabaseAsTemplate\" | \"uploadBaseTemplateForWorkspace\",\r\n        callback: (response: UploadTemplateResponse) => void = () => { }) {\r\n            \r\n        main.waitOverlay.show('Bitte warten, lade Vorlage auf den Server hoch ...');\r\n        if (workspace_id >= 0) {\r\n            let dbTool = main.getDatabaseTool();\r\n            dbTool.export((buffer) => {\r\n                // @ts-ignore\r\n                buffer = pako.deflate(buffer);\r\n                this.uploadIntern(buffer, workspace_id, reason, main, callback);\r\n            }, (error) => {\r\n                alert(\"Fehler beim Exportieren der Datenbank: \" + error)\r\n                main.waitOverlay.hide();\r\n            })\r\n        } else {\r\n            this.uploadIntern(dump, -1, reason, main, callback);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    private uploadIntern(buffer: Uint8Array, workspace_id: number,\r\n        reason: \"publishDatabaseAsTemplate\" | \"uploadBaseTemplateForWorkspace\",\r\n        main: Main, callback: (response: UploadTemplateResponse) => void) {\r\n\r\n        $.ajax({\r\n            type: 'POST',\r\n            async: true,\r\n            contentType: 'application/octet-stream',\r\n            data: buffer,\r\n            processData: false,\r\n            headers: { 'x-workspaceid': \"\" + workspace_id, \"x-reason\": reason },\r\n            url: \"servlet/uploadTemplate\",\r\n            success: function (response: UploadTemplateResponse) {\r\n                main.waitOverlay.hide();\r\n                callback(response);\r\n                return;\r\n\r\n            },\r\n            error: function (jqXHR, message) {\r\n                alert('message');\r\n                main.waitOverlay.hide();\r\n            }\r\n        }\r\n        );\r\n        return buffer;\r\n    }\r\n}","import { CreateWorkspaceData, WorkspaceData } from \"../../communication/Data.js\";\r\nimport { copyTextToClipboard, makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { TemplateUploader } from \"../../tools/TemplateUploader.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\nexport class DatabaseSettingsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private workspace: Workspace) {\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Datenbank-Einstellungen</div>\r\n            <div style=\"width: 100%; margin-left: 10px\">\r\n                <div class=\"jo_ds_settings\" style=\"margin-left: 0px\">\r\n                <div class=\"jo_ds_settings_caption\">Name der Datenbank:</div><div><input class=\"dialog-input jo_databasename\" value=\"Neue Datenbank\"></input></div>\r\n                </div>\r\n\r\n                <div class=\"jo_ds_settings_caption\" style=\"margin-top: 20px\">\r\n                Zugriffscodes für andere Benutzer:\r\n                </div>\r\n                                \r\n                <div>\r\n                    <table class=\"jo_ds_secret_table\">\r\n                    <tr>\r\n                        <td>Nur Lesen:</td><td class=\"jo_ds_secret jo_ds_secret_read\"></td><td id=\"copySecretTdread\"></td><td><button class=\"jo_small_button jo_button_code_read\">Neuen Code generieren</button></td>\r\n                    <tr>\r\n                        <td>Lesen und schreiben:</td><td class=\"jo_ds_secret jo_ds_secret_write\"></td><td id=\"copySecretTdwrite\"></td><td><button class=\"jo_small_button jo_button_code_write\">Neuen Code generieren</button></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Lesen, schreiben und Struktur verändern:</td><td class=\"jo_ds_secret jo_ds_secret_ddl\"></td><td id=\"copySecretTdddl\"></td><td><button class=\"jo_small_button jo_button_code_ddl\">Neuen Code generieren</button></td>\r\n                    </tr>\r\n                    </table>\r\n                </div>\r\n\r\n                <div class=\"jo_ds_settings_caption\" style=\"margin-top: 20px\">\r\n                Beschreibung:\r\n                </div>\r\n                <div>\r\n                <textarea class=\"jo_ds_settings_description\" maxlength=\"5000\"></textarea>\r\n                </div>\r\n\r\n                <div class=\"jo_ds_settings_caption\" style=\"margin-top: 20px\">\r\n                Datenbank freigeben als Vorlage für andere Benutzer:\r\n                </div>\r\n\r\n                <fieldset id=\"jo_ds_publishedTo\">\r\n                    <input type=\"radio\" id=\"b0\" name=\"publishedFilter\" value=\"0\" checked=\"checked\"><label for=\"b0\">Keine Freigabe</label>\r\n                    <input type=\"radio\" id=\"b1\" name=\"publishedFilter\" value=\"1\"><label for=\"b1\">Freigabe für meine Klasse(n)</label>\r\n                    <input type=\"radio\" id=\"b2\" name=\"publishedFilter\" value=\"2\" style=\"visibility: none\"><label id=\"lb2\" for=\"b2\" style=\"visibility: none\">Freigabe für meine Schule</label>\r\n                    <input type=\"radio\" id=\"b3\" name=\"publishedFilter\" value=\"3\" style=\"visibility: none\"><label id=\"lb3\" for=\"b3\" style=\"visibility: none\">Freigabe für alle Schulen</label>\r\n                </fieldset>\r\n\r\n                <div>\r\n                    <input type=\"checkbox\" id=\"jo_upload_db\" name=\"jo_upload_db\">\r\n                    <label for=\"jo_upload_db\">Aktuellen Zustand der Datenbank als Vorlage hochladen</label>\r\n                </div>\r\n            </div>\r\n\r\n\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_save_button\">Speichern</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n\r\n        let that = this;\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { this.showMainWindow(); });\r\n        jQuery('#jo_ds_save_button').on('click', () => { \r\n            this.saveNameAndPublishedTo();\r\n         })\r\n\r\n        this.setValues();\r\n\r\n        [\"read\", \"write\", \"ddl\"].forEach(kind => {\r\n            jQuery('.jo_button_code_' + kind).on('pointerdown', () => {\r\n                that.main.networkManager.setNewSecret(that.workspace.id, kind, (secret) => {\r\n                    jQuery('.jo_ds_secret_'+kind).text(secret);\r\n                })\r\n            })\r\n            let $copyButton = jQuery('<button class=\"jo_small_button jo_copy_secret_button jo_active\">Kopieren</button>')\r\n            jQuery('#copySecretTd' + kind).append($copyButton);\r\n            $copyButton.on('pointerdown', () => {\r\n                copyTextToClipboard(jQuery('.jo_ds_secret_'+kind).text());\r\n            })\r\n        })\r\n\r\n        jQuery('#jo_ds_publishedTo>input').on('change', (e) => {$('#jo_upload_db').prop('checked', !((<HTMLInputElement>jQuery('#b0')[0]).checked))});\r\n\r\n    }\r\n\r\n    saveNameAndPublishedTo(){\r\n        let published_to = 0;\r\n        jQuery('#jo_ds_publishedTo').find('input').each( (n, element) => {\r\n            let $element = jQuery(element);\r\n            //@ts-ignore\r\n            if(<HTMLInputElement>element.checked){\r\n                published_to = Number.parseInt(<string>$element.attr('value'));\r\n            }\r\n        })\r\n\r\n        this.main.networkManager.setNameAndPublishedTo(this.workspace.id, \r\n            <string>jQuery('.jo_databasename').val(), published_to, <string>jQuery('.jo_ds_settings_description').val(),\r\n             () => {\r\n                 if($('#jo_upload_db').prop('checked')){\r\n                    new TemplateUploader().uploadCurrentDatabase(this.workspace.id, this.main, null, \"publishDatabaseAsTemplate\");                    \r\n                 }\r\n                 this.showMainWindow(); \r\n                })\r\n    }\r\n\r\n    setValues(){\r\n        jQuery('.jo_databasename').val(this.workspace.name);\r\n        this.main.networkManager.getDatabaseSettings(this.workspace.id, (response) => {\r\n            [\"read\", \"write\", \"ddl\"].forEach(kind => {\r\n                jQuery('.jo_ds_secret_' + kind).text(response.secrets[kind]);\r\n            });\r\n            if(this.main.user.is_admin){\r\n                jQuery('#b3').css('visibility', 'visible');\r\n                jQuery('#lb3').css('visibility', 'visible');\r\n            }\r\n            if(this.main.user.is_schooladmin){\r\n                jQuery('#b2').css('visibility', 'visible');\r\n                jQuery('#lb2').css('visibility', 'visible');\r\n            }\r\n            // jQuery('#jo_ds_publishedTo input').attr('checked', '');\r\n            jQuery('#b'+response.publishedTo).prop('checked', true);\r\n\r\n            jQuery('#jo_upload_db').prop('checked', response.publishedTo != 0);\r\n\r\n            jQuery('.jo_ds_settings_description').val(this.workspace.database.description);\r\n        })\r\n    }\r\n\r\n    showMainWindow() {\r\n        jQuery('#main').css('visibility', 'visible');\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n    }\r\n\r\n\r\n\r\n}","import { WorkspaceData } from \"../communication/Data.js\";\r\nimport { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { DatabaseSettingsDialog } from \"../main/gui/DatabaseSettingsDialog.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { WDatabase } from \"./WDatabase.js\";\r\n\r\nexport class Workspace {\r\n    \r\n    name: string;\r\n    path: string = \"\";\r\n    isFolder: boolean;\r\n    id: number;\r\n    owner_id: number;\r\n\r\n    version: number;\r\n    \r\n    moduleStore: ModuleStore;\r\n    panelElement: AccordionElement;\r\n    currentlyOpenModule: Module;\r\n    saved: boolean = true;\r\n\r\n    compilerMessage: string;\r\n\r\n    databaseId: number;\r\n    database: WDatabase;\r\n\r\n    sql_history: string;\r\n\r\n    permissions: number;\r\n\r\n    constructor(name: string, private main: MainBase, owner_id: number){\r\n        this.name = name;\r\n        this.owner_id = owner_id;\r\n        this.moduleStore = new ModuleStore(main);\r\n        this.sql_history = \"\";\r\n    }\r\n    \r\n    getWorkspaceData(withFiles: boolean): WorkspaceData {\r\n        let wd: WorkspaceData = {\r\n            name: this.name,\r\n            id: this.id,\r\n            owner_id: this.owner_id,\r\n            currentFileId: this.currentlyOpenModule == null ? null : this.currentlyOpenModule.file.id,\r\n            files: [],\r\n            sql_history: this.sql_history,\r\n            path: this.path,\r\n            isFolder: false,  \r\n            permissions: this.permissions,\r\n            database_id: this.databaseId\r\n        }\r\n\r\n        if(withFiles){\r\n            for(let m of this.moduleStore.getModules(false)){\r\n    \r\n                wd.files.push(m.getFileData(this));\r\n    \r\n            }\r\n        }\r\n\r\n        return wd;\r\n    }\r\n\r\n    renderSettingsButton(panelElement: AccordionElement) {\r\n        let $buttonDiv = panelElement?.$htmlFirstLine?.find('.jo_additionalButtonSettings');\r\n        if ($buttonDiv == null) return;\r\n        \r\n        // let myMain: Main = <Main>this.main;\r\n\r\n            let $button = jQuery('<div class=\"jo_settingsButton img_settings jo_button jo_active\" title=\"Datenbank-Einstellungen...\"></div>');\r\n            $buttonDiv.append($button);\r\n            let that = this;\r\n            $button.on('mousedown', (e) => e.stopPropagation());\r\n            $button.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                new DatabaseSettingsDialog(<any>that.main, that);\r\n\r\n            });\r\n\r\n        // } else {\r\n        //     $buttonDiv.find('.jo_startButton').remove();\r\n        // }\r\n    }\r\n\r\n\r\n    static restoreFromData(ws: WorkspaceData, main: Main): Workspace {\r\n\r\n        let w = new Workspace(ws.name, main, ws.owner_id);\r\n        w.id = ws.id;\r\n        w.path = ws.path;\r\n        w.isFolder = ws.isFolder;\r\n        w.owner_id = ws.owner_id;\r\n        w.sql_history = ws.sql_history;\r\n        w.permissions = ws.permissions;\r\n        w.databaseId = ws.database_id;\r\n\r\n        for(let f of ws.files){\r\n\r\n            let m: Module = Module.restoreFromData(f, main);\r\n            w.moduleStore.putModule(m);\r\n\r\n            if(f.id == ws.currentFileId){\r\n                w.currentlyOpenModule = m;\r\n            }\r\n\r\n        }\r\n\r\n        return w;\r\n\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        \r\n        return this.moduleStore.hasErrors();\r\n        \r\n    }\r\n\r\n    getModuleByMonacoModel(model: monaco.editor.ITextModel): Module {\r\n        for(let m of this.moduleStore.getModules(false)){\r\n            if(m.model == model){\r\n                return m;\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    }\r\n}\r\n\r\n","import { Editor } from \"./Editor.js\";\r\nimport { CompletionHint, Module } from \"../../compiler/parser/Module.js\";\r\nimport { Symbol, SymbolTable } from \"../../compiler/parser/SymbolTable.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { Column, Table } from \"../../compiler/parser/SQLTable.js\";\r\n\r\nexport class MyCompletionItemProvider implements monaco.languages.CompletionItemProvider {\r\n\r\n    isConsole: boolean;\r\n\r\n    public triggerCharacters: string[] = ['.', 'abcdefghijklmnopqrstuvwxyzäöüß_ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜ', ' ', ',', '('];\r\n\r\n    public keywordCompletionItems: Map<string, monaco.languages.CompletionItem> = new Map();\r\n\r\n    constructor(private main: MainBase) {\r\n        this.setupKeywordCompletionItems();\r\n    }\r\n\r\n    first: boolean = true;\r\n    provideCompletionItems(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, \r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n\r\n\r\n        let module: Module =\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null || module.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n            let that = this;\r\n\r\n            let wfc = function waitForCompiler(){\r\n                if(module.file.dirty){\r\n                    setTimeout(() => {\r\n                        wfc();\r\n                    }, 100);\r\n                } else {\r\n                    resolve(that.provideCompletionItemsIntern(model, position, context, token));\r\n                }\r\n            }\r\n        \r\n            wfc();\r\n\r\n        })\r\n\r\n        // Promise.resolve({\r\n        //     suggestions: completionItems\r\n        // });\r\n    }\r\n\r\n    provideCompletionItemsIntern(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, \r\n        token: monaco.CancellationToken): monaco.languages.CompletionList {\r\n\r\n        setTimeout(() => {\r\n            //@ts-ignore\r\n            let sw = this.main.getMonacoEditor()._contentWidgets[\"editor.widget.suggestWidget\"].widget;\r\n            if (this.first) {\r\n                sw.toggleDetails();\r\n                this.first = false;\r\n            }\r\n        }, 500);\r\n\r\n        let module: Module =\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null || module.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (this.isStringLiteral(module, position)) return null;\r\n\r\n        let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let symbolTable = module.mainSymbolTable.findTableAtPosition(position.lineNumber, position.column);\r\n        let completionHint: CompletionHint = module.getCompletionHint(position.lineNumber, position.column);\r\n        if (completionHint == null) {\r\n            completionHint = {\r\n                fromColumn: 0,\r\n                toColumn: 0,\r\n                fromLine: 0,\r\n                toLine: 0,\r\n                hintColumns: false,\r\n                hintTables: false,\r\n                hintKeywords: []\r\n            }\r\n        }\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n        this.addKeywordCompletionItems(completionHint, completionItems);\r\n\r\n        let dotMatch = textUntilPosition.match(/.*\\s([\\wöäüÖÄÜß]*)(\\.)([\\wöäüÖÄÜß]*)$/);\r\n\r\n        let ibMatch = textAfterPosition.match(/^([\\wöäüÖÄÜß]*)/);\r\n        let identifierAndBracketAfterCursor = \"\";\r\n        if (ibMatch != null && ibMatch.length > 0) {\r\n            identifierAndBracketAfterCursor = ibMatch[0];\r\n        }\r\n\r\n        if (dotMatch == null) {\r\n            this.addIdentifierCompletionItems(completionHint, symbolTable, completionItems);\r\n        } else {\r\n            this.addDotCompletionItems(position, dotMatch, identifierAndBracketAfterCursor, symbolTable, completionItems);\r\n        }\r\n\r\n        let word = model.getWordUntilPosition(position);\r\n        let replaceWordRange = { startColumn: word.startColumn, startLineNumber: position.lineNumber, endColumn: word.endColumn, endLineNumber: position.lineNumber };\r\n        let insertAfterCursorRange = { startColumn: position.column, startLineNumber: position.lineNumber, endColumn: position.column, endLineNumber: position.lineNumber }\r\n\r\n        for (let item of completionItems) {\r\n            if (item.range == null) {\r\n                if (item.insertText.startsWith(\",\")) {\r\n                    item.range = insertAfterCursorRange;\r\n                } else {\r\n                    item.range = replaceWordRange;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (completionHint.dontHint != null) {\r\n            completionItems = completionItems.filter(item => completionHint.dontHint.indexOf(item.insertText) < 0);\r\n        }\r\n\r\n        return {\r\n            suggestions: completionItems\r\n        };\r\n    }\r\n\r\n\r\n    addDotCompletionItems(position: monaco.Position, dotMatch: RegExpMatchArray, identifierAndBracketAfterCursor: string,\r\n        symbolTable: SymbolTable, completionItems: monaco.languages.CompletionItem[]) {\r\n        let textAfterDot = dotMatch[3];\r\n        let textBeforeDot = dotMatch[1];\r\n        let dotColumn = position.column - textAfterDot.length - 1;\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - textAfterDot.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n        for (let symbol of symbolTable.symbolList) {\r\n            if (symbol.table != null) {\r\n                let identifier: string = symbol.table.identifier;\r\n                if (symbol.tableAlias != null) identifier = symbol.tableAlias;\r\n                if (identifier.toLowerCase() == textBeforeDot) {\r\n                    for (let column of symbol.table.columns) {\r\n                        completionItems.push({\r\n                            label: column.identifier,\r\n                            detail: \"Spalte \" + column.identifier + \" der Tabelle \" + symbol.table.identifier,\r\n                            filterText: column.identifier,\r\n                            insertText: column.identifier,\r\n                            insertTextRules: monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                            kind: monaco.languages.CompletionItemKind.Field,\r\n                            range: rangeToReplace\r\n                        })\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    addIdentifierCompletionItems(completionHint: CompletionHint, symbolTable: SymbolTable, completionItems: monaco.languages.CompletionItem[]) {\r\n        let praefix: string = completionHint.praefix == null ? \"\" : completionHint.praefix;\r\n        let suffix: string = completionHint.suffix == null ? \"\" : completionHint.suffix;\r\n\r\n        if (!(completionHint.hintTables || completionHint.hintColumns)) {\r\n            return;\r\n        }\r\n\r\n        let tableIdentifiers: { [identifier: string]: boolean } = {};\r\n\r\n        let st: SymbolTable = symbolTable;\r\n        let columns: { [identifier: string]: Symbol[] } = {};\r\n        let columnIdentifiers: string[] = [];\r\n\r\n        while (st != null) {\r\n            for (let symbol of st.symbolList) {\r\n                if (symbol.column != null) {\r\n                    let columnIdentifier = symbol.column.identifier;\r\n                    if (columns[columnIdentifier] == null) {\r\n                        columns[columnIdentifier] = [symbol];\r\n                        columnIdentifiers.push(columnIdentifier);\r\n                    } else {\r\n                        columns[columnIdentifier].push(symbol);\r\n                    }\r\n                } else if (symbol.table != null && completionHint.hintTables) {\r\n                    if (!tableIdentifiers[symbol.identifier]) {\r\n                        let insertText = praefix + symbol.identifier + suffix;\r\n                        completionItems.push({\r\n                            label: symbol.identifier,\r\n                            detail: \"Tabelle \" + symbol.table.identifier,\r\n                            filterText: symbol.identifier,\r\n                            insertText: insertText,\r\n                            insertTextRules: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                            kind: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemKind.Snippet : monaco.languages.CompletionItemKind.Class,\r\n                            range: undefined,\r\n                            sortText: \"aa\" + symbol.identifier\r\n                        });\r\n                        tableIdentifiers[symbol.identifier] = true;\r\n                    }\r\n                }\r\n            }\r\n            st = st.parent;\r\n        }\r\n\r\n        if (completionHint.hintColumns) {\r\n            for (let ci of columnIdentifiers) {\r\n                let columList = columns[ci];\r\n                let withTable = columList.length > 1 && completionHint.hintColumnsOfTable == null;\r\n                for (let cs of columList) {\r\n                    let text = cs.identifier;\r\n                    if (withTable && cs.identifier == cs.column.identifier.toLowerCase()) {\r\n                        text = (cs.tableAlias == null ? cs.column.table.identifier : cs.tableAlias) + \".\" + text;\r\n                    }\r\n                    if (completionHint.hintColumnsOfTable == null || cs.column?.table?.identifier == completionHint.hintColumnsOfTable) {\r\n                        let insertText = praefix + text + suffix;\r\n                        completionItems.push({\r\n                            label: text,\r\n                            detail: \"Die Spalte \" + cs.column.identifier + \" der Tabelle \" + cs.column.table.identifier,\r\n                            filterText: text,\r\n                            insertText: insertText,\r\n                            insertTextRules: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                            kind: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemKind.Snippet : monaco.languages.CompletionItemKind.Field,\r\n                            range: undefined\r\n                        })\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    keywordToSnippetMap: { [keyword: string]: string } = {\r\n        \"(\": \"(\\n\\t$0\\n)\",\r\n        \"varchar\": \"varchar($1) $0\",\r\n        \"decimal\": \"decimal($1, $2) $0\"\r\n    }\r\n\r\n    addKeywordCompletionItems(completionHint: CompletionHint, completionItems: monaco.languages.CompletionItem[]) {\r\n        let praefix: string = completionHint.praefix == null ? \"\" : completionHint.praefix;\r\n        let suffix: string = completionHint.suffix == null ? \"\" : completionHint.suffix;\r\n\r\n\r\n        for (let text of completionHint.hintKeywords) {\r\n            let insertText = praefix + text + suffix;\r\n            let snippet = this.keywordToSnippetMap[text];\r\n\r\n            let ci = this.keywordCompletionItems.get(text);\r\n            if (ci != null) {\r\n                completionItems.push(ci);\r\n            } else if (snippet != null) {\r\n                let label = snippet.replace(\"$0\", \"\").replace(\"$1\", \"\").replace(\"$2\", \"\").replace(/ /g, \"\").replace(/\\n/g, \"\").replace(/\\t/g, \"\");\r\n                completionItems.push({\r\n                    label: label,\r\n                    detail: \"\",\r\n                    filterText: text,\r\n                    insertText: snippet,\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                })\r\n            } else {\r\n                completionItems.push({\r\n                    label: text,\r\n                    detail: \"\",\r\n                    filterText: text,\r\n                    insertText: text,\r\n                    insertTextRules: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                    kind: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemKind.Snippet : monaco.languages.CompletionItemKind.Keyword,\r\n                    range: undefined,\r\n                    sortText: text == \"from\" ? \"*\" : undefined\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    isStringLiteral(module: Module, position: monaco.Position) {\r\n\r\n        let tokenList = module.tokenList;\r\n        if (tokenList == null || tokenList.length == 0) return false;\r\n\r\n        let posMin = 0;\r\n        let posMax = tokenList.length - 1;\r\n        let pos: number;\r\n\r\n        let watchDog = 1000;\r\n\r\n        while (true) {\r\n            let posOld = pos;\r\n            pos = Math.round((posMax + posMin) / 2);\r\n\r\n            if (posOld == pos) return false;\r\n\r\n            watchDog--;\r\n            if (watchDog == 0) return false;\r\n\r\n            let t = tokenList[pos];\r\n            let p = t.position;\r\n\r\n            if (p.line < position.lineNumber || p.line == position.lineNumber && p.column + p.length < position.column) {\r\n                posMin = pos;\r\n                continue;\r\n            }\r\n\r\n            if (p.line > position.lineNumber || p.line == position.lineNumber && p.column > position.column) {\r\n                posMax = pos;\r\n                continue;\r\n            }\r\n\r\n            return t.tt == TokenType.stringConstant;\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    setupKeywordCompletionItems() {\r\n        this.keywordCompletionItems.set(\"delete from\",\r\n            {\r\n                label: \"delete from <Tabelle> where <Bedingung>\",\r\n                detail: \"Anweisung zum Löschen von Datensätzen\",\r\n                filterText: `delete from`,\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `delete from `,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"drop table\",\r\n            {\r\n                label: \"drop table <Tabelle>\",\r\n                detail: \"Anweisung zum Löschen einer Tabelle\",\r\n                filterText: 'drop table',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `drop table `,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"alter\",\r\n            {\r\n                label: \"alter table <Tabelle> <rename to, rename column, add column, drop column>\",\r\n                detail: \"Anweisung zum Ändern des Schemas (alter table <Tabelle> <rename to, rename column, add column, drop column>)\",\r\n                filterText: 'alter',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `alter table `,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"select\",\r\n            {\r\n                label: \"select <Spalten> from <Tabellen> where <Bedingung>\",\r\n                detail: \"Select-Anweisung\",\r\n                filterText: 'select',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `select * from $1\\nwhere $0\\n`,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"create table\",\r\n            {\r\n                label: \"create table <Tabellenbezeichner> (<Spaltendefinitionen>)\",\r\n                detail: \"Create table-Anweisung (Erstellt eine neue Tabelle)\",\r\n                filterText: 'create',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `create table $1 (\\n\\t$0\\n);`,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        // this.keywordCompletionItems.set(\"from\",\r\n        //     {\r\n        //         label: \"from <Tabellen> where <Bedingung>\",\r\n        //         detail: \"from-Teil der select-Anweisung\",\r\n        //         filterText: 'from',\r\n        //         // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n        //         insertText: `from $1\\nwhere $0\\n`,\r\n        //         command: {\r\n        //             id: \"editor.action.triggerSuggest\",\r\n        //             title: '123',\r\n        //             arguments: []\r\n        //         },\r\n        //         insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n        //         kind: monaco.languages.CompletionItemKind.Snippet,\r\n        //         range: undefined\r\n        //     });\r\n\r\n    }\r\n\r\n\r\n}","import { Module, MethodCallPosition } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\n\r\n\r\nexport class MySignatureHelpProvider implements monaco.languages.SignatureHelpProvider {\r\n\r\n    signatureHelpTriggerCharacters?: readonly string[] = ['(', ',', ';', '<', '>', '=']; // semicolon, <, >, = for for-loop, if, while, ...\r\n    signatureHelpRetriggerCharacters?: readonly string[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    provideSignatureHelp(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let that = this;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            setTimeout(() => {\r\n\r\n                this.main.compileIfDirty();\r\n\r\n                resolve(that.provideSignatureHelpLater(model, position, token, context));\r\n\r\n            }, 300);\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    provideSignatureHelpLater(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model != this.main.getMonacoEditor().getModel());\r\n\r\n        let module: Module = \r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        // let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        // let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let methodCallPositions = module.methodCallPositions[position.lineNumber];\r\n\r\n        if (methodCallPositions == null) return null;\r\n\r\n        let methodCallPosition: MethodCallPosition = null;\r\n        let rightMostPosition: number = -1;\r\n\r\n        for (let i = methodCallPositions.length - 1; i >= 0; i--) {\r\n            let mcp = methodCallPositions[i];\r\n            if (mcp.identifierPosition.column + mcp.identifierPosition.length < position.column\r\n                && mcp.identifierPosition.column > rightMostPosition) {\r\n                if (mcp.rightBracketPosition == null ||\r\n                    (position.lineNumber <= mcp.rightBracketPosition.line && position.column <= mcp.rightBracketPosition.column)\r\n                    || (position.lineNumber < mcp.rightBracketPosition.line)) {\r\n                    methodCallPosition = mcp;\r\n                    rightMostPosition = mcp.identifierPosition.column;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (methodCallPosition == null) return null;\r\n\r\n        return this.getSignatureHelp(methodCallPosition, position);\r\n\r\n\r\n\r\n    }\r\n\r\n    getSignatureHelp(methodCallPosition: MethodCallPosition,\r\n        position: monaco.Position): monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let parameterIndex: number = 0;\r\n\r\n        for (let cp of methodCallPosition.commaPositions) {\r\n            if (cp.line < position.lineNumber || (cp.line == position.lineNumber && cp.column < position.column)) {\r\n                parameterIndex++;\r\n            }\r\n        }\r\n\r\n        let signatureInformationList: monaco.languages.SignatureInformation[] = [];\r\n\r\n        return Promise.resolve({\r\n            value: {\r\n                activeParameter: parameterIndex,\r\n                activeSignature: 0,\r\n                signatures: signatureInformationList\r\n            },\r\n            dispose: () => { }\r\n        });\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\n\r\n\r\n\r\nexport class MyHoverProvider {\r\n\r\n    private static keywordDescriptions: { [keyword: string]: string } = {\r\n        \"print\": \"Die Anweisung ```print``` gibt eine Zeichenkette aus.\",\r\n        \"new\": \"Das Schlüsselwort ```new``` bewirkt die Instanzierung (\\\"Erschaffung\\\") eines neuen Objektes einer Klasse.\",\r\n        \"println\": \"Die Anweisung ```println``` gibt eine Zeichenkette gefolgt von einem Zeilenumbruch aus.\",\r\n        \"while\": \"```\\nwhile (Bedingung) {Anweisungen}\\n```  \\nbewirkt die Wiederholung der Anweisungen solange ```Bedingung == true``` ist.\",\r\n        \"for\": \"```\\nfor(Startanweisung;Solange-Bedingung;Nach_jeder_Wiederholung){Anweisungen}\\n```  \\n\"\r\n            + \"führt zunächst die Startanweisung aus und wiederholt dann die Anweisungen solange ```Bedingung == true``` ist. Am Ende jeder wiederholung wird Nach_jeder_Wiederholung ausgeführt.\",\r\n        \"if\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.  \\nDer ```else```-Teil kann auch weggelassen werden.\",\r\n        \"else\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.\",\r\n        \"switch\": \"```\\nswitch(Selektor){ case Wert_1: Anweisungen_1; break; case Wert_2: Anweisungen_2; break; default: Default-Anweisungen } \\n```  \\nwertet den Selektor-Term aus und führt abhängig vom Termwert Anweisungen_1, Anweisungen_2, ... aus. Entspricht der Termwert keinem der Werte Wert_1, Wert_2, ..., so werden die Default-Anweisungen ausgeführt.\",\r\n        \"%\": \"```\\na % b\\n```  \\n (sprich: 'a modulo b') berechnet den **Rest** der ganzzahligen Division a/b.\",\r\n        \"==\": \"```\\na == b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` gleich sind.  \\nSind a und b **Objekte**, so ergibt ```a == b``` nur dann ```true```, wenn ```a``` und ```b``` auf das **identische** Objekt zeigen.  \\n```==``` nennt man **Vergleichsoperator**.\",\r\n        \"<=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` kleiner oder gleich dem Wert von ```b``` ist.\",\r\n        \">=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` größer oder gleich dem Wert von ```b``` ist.\",\r\n        \"!=\": \"```\\na != b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` **un**gleich sind.  \\nSind ```a``` und ```b``` **Objekte**, so ergibt ```a != b``` dann ```true```, wenn ```a``` und ```b``` **nicht** auf das **identische** Objekt zeigen.  \\n```!=``` nennt man **Ungleich-Operator**.\",\r\n        \"+=\": \"```\\na += b\\n(Kurzschreibweise für a = a + b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erhöht** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"-=\": \"```\\na -= b\\n(Kurzschreibweise für a = a - b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erniedrigt** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"*=\": \"```\\na *= b\\n(Kurzschreibweise für a = a * b)\\n```  \\nbewirkt, dass der Wert von ```a``` mit dem Wert von ```b``` **multipliziert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"/=\": \"```\\na /= b\\n(Kurzschreibweise für a = a / b)\\n```  \\nbewirkt, dass der Wert von ```a``` durch den Wert von ```b``` **dividiert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"++\": \"```\\na++\\n(Kurzschreibweise für a = a + 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins erhöht wird.\",\r\n        \"--\": \"```\\na--\\n(Kurzschreibweise für a = a - 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins eniedrigt wird.\",\r\n        \"=\": \"```\\na = Term\\n```  \\nberechnet den Wert des Terms und weist ihn der Variablen ```a``` zu.  \\n**Vorsicht:**  \\nVerwechsle ```=```(**Zuweisungsoperator**) nicht mit ```==```(**Vergleichsoperator**)!\",\r\n        \"!\": \"```\\n!a\\n```  \\nergibt genau dann ```true```, wenn ```a``` ```false``` ergibt.  \\n```!``` spricht man '**nicht**'.\",\r\n        \"public\": \"```\\npublic\\n```  \\nAttribute und Methoden, die als ```public``` deklariert werden, sind überall (auch außerhalb der Klasse) sichtbar.\",\r\n        \"private\": \"```\\nprivate\\n```  \\nAttribute und Methoden, die als ```private``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse sichtbar.\",\r\n        \"protected\": \"```\\nprotected\\n```  \\nAttribute und Methoden, die als ```protected``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse oder innerhalb von Methoden von Kindklassen sichtbar.\",\r\n        \"return\": \"```\\nreturn Term\\n```  \\nbewirkt, dass die Methode verlassen wird und der Wert des Terms an die aufrufende Stelle zurückgegeben wird.\",\r\n        \"break\": \"```\\nbreak;\\n```  \\ninnerhalb einer Schleife bewirkt, dass die Schleife sofort verlassen und mit den Anweisungen nach der Schleife fortgefahren wird.  \\n\"+\r\n        \"```break``` innerhalb einer ```switch```-Anweisung bewirkt, dass der Block der ```switch```-Anweisung verlassen wird.\",\r\n        \"class\": \"```\\nclass\\n```  \\nMit dem Schlüsselwort ```class``` werden Klassen definiert.\",\r\n        \"extends\": \"```\\nextends\\n```  \\n```class A extends B { ... }``` bedeutet, dass die Klasse A Unterklasse der Klasse B ist.\",\r\n        \"implements\": \"```\\nimplements\\n```  \\n```class A implements B { ... }``` bedeutet, dass die Klasse A das Interface B implementiert, d.h., dass sie alle Methoden besitzen muss, die in B definiert sind.\",\r\n        \"this\": \"```\\nthis\\n```  \\nInnerhalb einer Methodendefinition bezeichnet das Schlüsselwor ```this``` immer dasjenige Objekt, für das die Methode gerade ausgeführt wird.\",\r\n\r\n    }\r\n\r\n    constructor(private editor: Editor) {\r\n\r\n    }\r\n\r\n    provideHover(model: monaco.editor.ITextModel, position: monaco.Position, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Hover> {\r\n\r\n        let selection: monaco.Selection = this.editor.editor.getSelection();\r\n        \r\n        // if cursor is inside current selection then don't show hover, because editor.onDidChangeCursorPosition evaluates selected Text \r\n        // (see class Editor).\r\n        if(selection != null){\r\n            if(selection.startLineNumber != selection.endLineNumber || selection.startColumn != selection.endColumn){\r\n                if(\r\n                    (selection.startLineNumber < position.lineNumber || selection.startLineNumber == position.lineNumber && selection.startColumn <= position.column) && \r\n                    (selection.endLineNumber > position.lineNumber || selection.endLineNumber == position.lineNumber && selection.endColumn >= position.column) \r\n                ){\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        let module: Module = this.editor.main.getCurrentWorkspace()?.getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        for(let errorList of module.errors){\r\n            for(let error of errorList){\r\n                if(error.position.line == position.lineNumber && \r\n                    error.position.column <= position.column && \r\n                    error.position.column + error.position.length >= position.column){\r\n                        return null; // Show error-tooltip and don't show hover-tooltip\r\n                    }\r\n            }\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let declarationAsString = \"\";\r\n\r\n        if (element != null) {\r\n        } else {\r\n            let word = this.getWordUnderCursor(model, position);\r\n            let desc = MyHoverProvider.keywordDescriptions[word];\r\n            if (desc != null) {\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: desc }],\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getWordUnderCursor(model: monaco.editor.ITextModel, position: monaco.Position)\r\n         : string {\r\n        \r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let word = \"\";\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierOrArrayDescriptor(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        if (end - begin > 1) {\r\n            word = text.substring(begin, end);\r\n        } else {\r\n            end = pos;\r\n            while (end < text.length && this.isInsideOperator(text.charAt(end))) {\r\n                end++;\r\n            }\r\n    \r\n            begin = pos;\r\n            while (begin > 0 && this.isInsideOperator(text.charAt(begin - 1))) {\r\n                begin--;\r\n            }\r\n    \r\n            if (end - begin > 0) {\r\n                word = text.substring(begin, end);\r\n            }\r\n        }\r\n\r\n        return word;\r\n\r\n    }\r\n\r\n    widenDeclaration(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        identifier: string): string {\r\n\r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierChain(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        let lenght: number = identifier?.length == null ? 1 : identifier.length;\r\n\r\n        if (end - begin > length) {\r\n            return text.substring(begin, end);\r\n        }\r\n\r\n        return identifier;\r\n    }\r\n\r\n    isInsideIdentifierChain(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß_\\[\\]\\.]/i);\r\n\r\n    }\r\n\r\n    isInsideOperator(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[!%<>=\\+\\-\\*\\/]/i);\r\n\r\n    }\r\n\r\n    isInsideIdentifierOrArrayDescriptor(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß\\[\\]]/i);\r\n\r\n    }\r\n\r\n\r\n}","import { QuickFix } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyCodeActionProvider implements monaco.languages.CodeActionProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideCodeActions(model: monaco.editor.ITextModel, range: monaco.Range, context: monaco.languages.CodeActionContext, token: monaco.CancellationToken): monaco.languages.CodeActionList | Promise<monaco.languages.CodeActionList> {\r\n        const actions = context.markers.map(error => {\r\n            let quickFix: QuickFix = <any>error.relatedInformation;\r\n            if (quickFix == null) return null;\r\n\r\n            let codeAction: monaco.languages.CodeAction = {\r\n                title: quickFix.title,\r\n                diagnostics: [error],\r\n                kind: \"quickfix\",\r\n                edit: {\r\n                    edits: quickFix.editsProvider(model.uri)\r\n                },\r\n                isPreferred: true\r\n            };\r\n            return codeAction;\r\n        });\r\n        return {\r\n            actions: actions,\r\n            dispose: () => { }\r\n        }\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Editor } from \"./Editor.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyReferenceProvider implements monaco.languages.ReferenceProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideReferences(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.ReferenceContext, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Location[]> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) return null;\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let referencePositions: monaco.languages.Location[] = [];\r\n\r\n        usagePositions.forEach((upInCurrentModule, module) => {\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    referencePositions.push(\r\n                        {\r\n                            uri: module.uri,\r\n                            range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length }\r\n                        });\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        return referencePositions;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import { Main } from \"../Main.js\";\r\n\r\nexport type HelperDirection = \"top\" | \"bottom\" | \"left\" | \"right\";\r\n\r\nexport class Helper {\r\n\r\n    public static openHelper(text: string, targetElement: JQuery<HTMLElement>, direction: HelperDirection) {\r\n\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.removeClass(['jo_arrow_box_left', 'jo_arrow_box_right', 'jo_arrow_box_top', 'jo_arrow_box_bottom']);\r\n\r\n        $helper.addClass('jo_arrow_box_' + direction);\r\n\r\n        $helper.css({ left: '', right: '', top: '', bottom: '' });\r\n\r\n        let to = targetElement.offset();\r\n        let b = jQuery('body');\r\n\r\n        let delta: number = 34;\r\n\r\n        switch (direction) {\r\n            case \"bottom\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                bottom: b.height() - to.top + delta\r\n            });\r\n                break;\r\n            case \"top\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                top: to.top + targetElement.height() + 26\r\n            });\r\n                break;\r\n            case \"left\": $helper.css({\r\n                left: to.left + targetElement.width() + delta,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n            case \"right\": $helper.css({\r\n                right: b.width() - to.left,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n        }\r\n\r\n        $helper.find('span').html(text);\r\n\r\n        let $button = $helper.find('.jo_button');\r\n        $button.on('click', (e) => {\r\n            e.stopPropagation();\r\n            $button.off('click');\r\n            Helper.close();\r\n        });\r\n\r\n        $helper.fadeIn(800);\r\n\r\n    }\r\n\r\n    static close() {\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.fadeOut(800);\r\n    }\r\n\r\n\r\n    static showHelper(id: string, mainBase: Main, $element?: JQuery<HTMLElement>) {\r\n\r\n        let main: Main;\r\n        if(mainBase instanceof Main){\r\n            main = mainBase;\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        let helperHistory = main.user.settings!.helperHistory;\r\n\r\n        let flag = id + \"Done\";\r\n\r\n        if (helperHistory != null && (helperHistory[flag] == null || !helperHistory[flag])) {\r\n            helperHistory[flag] = true;\r\n            main.networkManager.sendUpdateUserSettings(() => { });\r\n\r\n            let text: string = \"\";\r\n            let direction: HelperDirection = \"left\";\r\n\r\n            switch (id) {\r\n                case \"newDatabaseHelper\":\r\n                    text = `Es gibt noch keine Datenbank. <br> Nutzen Sie den Button\r\n                        <span class='img_add-database-dark jo_inline-image'></span> um eine Datenbank anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                    case \"newSQLFileHelper\":\r\n                        text = `Es gibt noch keine Datei mit SQL-Anweisungen. <br> Nutzen Sie den Button \r\n                            <span class='img_add-file-dark jo_inline-image'></span> um eine neue Datei anzulegen.\r\n                            `;\r\n                        direction = \"left\";\r\n                        break;\r\n                case \"homeButtonHelper\":\r\n                    text = \"Mit dem Home-Button <span class='img_home-dark jo_inline-image'></span> können Sie wieder zu Ihren eigenen Workspaces wechseln.\";\r\n                    direction = \"top\";\r\n                    $element = jQuery('.img_home-dark');\r\n                    break;\r\n                case \"playButtonHelper\":\r\n                    text = `Mit dem \"Start-Button\"\r\n                        (<span class='img_start-dark jo_inline-image'></span>) \r\n                        oder der Tastenkombination &lt;Strg&gt;&nbsp;+&nbsp&lt;Enter&gt; \r\n                        wird die Anweisung ausgeführt, in der der Cursor gerade steht. \r\n                        <br> Wollen Sie mehrere Anweisungen hintereinander ausführen, so markieren \r\n                        Sie alle Anweisungen und klicken Sie dann auf <span class='img_start-dark jo_inline-image'></span>\r\n                        oder drücken Sie  &lt;Strg&gt;&nbsp;+&nbsp&lt;Enter&gt;. `;\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"consoleHelper\": \r\n                    text=`\r\n                        Hier können Sie Anweisungen oder Terme eingeben, die nach Bestätigung mit der Enter-Taste ausgeführt/ausgewertet werden. Das Ergebnis sehen Sie im Bereich über der Eingabezeile. <br>\r\n                        Falls das Programm gerade pausiert (z.B. bei Ausführung in Einzelschritten) können Sie auch auf die Variablen des aktuellen Sichtbarkeitsbereiches zugreifen.\r\n                    `;\r\n                    direction = \"bottom\";\r\n            }\r\n\r\n            if (text != \"\" && $element != null && $element.length > 0) {\r\n                Helper.openHelper(text, $element, direction);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MyCompletionItemProvider } from \"./MyCompletionItemProvider.js\";\r\nimport { defineMyJava } from \"./MyJava.js\";\r\nimport { MySignatureHelpProvider } from \"./MySignatureHelpProvider.js\";\r\nimport { MyHoverProvider } from \"./MyHoverProvider.js\";\r\nimport { MyCodeActionProvider } from \"./MyCodeActionProvider.js\";\r\nimport { MyReferenceProvider } from \"./MyReferenceProvider.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { defineVscSQL } from \"./VscSql.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\nexport class Editor {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n\r\n    cw: monaco.editor.IContentWidget = null;\r\n\r\n    dontPushNextCursorMove: number = 0;\r\n\r\n    constructor(public main: MainBase, private showMinimap: boolean, private isEmbedded: boolean) {\r\n    }\r\n\r\n    initGUI($element: JQuery<HTMLElement>) {\r\n\r\n\r\n\r\n        defineVscSQL();\r\n\r\n        monaco.editor.defineTheme('myCustomThemeDark', {\r\n            base: 'vs-dark', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'functions', foreground: 'dcdcaa', fontStyle: 'italic' },\r\n                { token: 'string.sql', foreground: '3DC9B0' },\r\n                { token: 'number', foreground: '7bef3f' },\r\n                { token: 'type', foreground: '499cd6' },\r\n                { token: 'identifier', foreground: 'effefe' },\r\n                { token: 'statement', foreground: '9cdcfe', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '619ceb', fontStyle: 'bold' },\r\n                { token: 'table', foreground: 'ff0000', fontStyle: 'bold' },\r\n                { token: 'delimiter', foreground: 'e8eb38' }\r\n                // { token: 'comment.js', foreground: '008800', fontStyle: 'bold italic underline' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#1e1e1e\",\r\n                \"jo_highlightStatementGreen\": \"#004000\",\r\n                \"jo_highlightStatementYellow\": \"#404000\",\r\n                \"jo_highlightStatementRed\": \"#402020\"\r\n            }\r\n        });\r\n\r\n        monaco.editor.defineTheme('myCustomThemeLight', {\r\n            base: 'vs', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'functions', foreground: '694E16', fontStyle: 'italic bold' },\r\n                { token: 'string.sql', foreground: 'a03030' },\r\n                { token: 'number', foreground: '404040' },\r\n                { token: 'type', foreground: '0000ff', fontStyle: 'bold' },\r\n                { token: 'identifier', foreground: '8000e0' },\r\n                { token: 'statement', foreground: '001080', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '00a000', fontStyle: 'bold' },\r\n                { token: 'comment', foreground: '808080', fontStyle: 'italic' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#FFFFFF\",\r\n                \"editor.foreground\": \"#000000\",\r\n                \"editor.inactiveSelectionBackground\": \"#E5EBF1\",\r\n                \"editorIndentGuide.background\": \"#D3D3D3\",\r\n                \"editorIndentGuide.activeBackground\": \"#939393\",\r\n                \"editor.selectionHighlightBackground\": \"#ADD6FF80\",\r\n                \"editorSuggestWidget.background\": \"#F3F3F3\",\r\n                \"activityBarBadge.background\": \"#007ACC\",\r\n                \"sideBarTitle.foreground\": \"#6F6F6F\",\r\n                \"list.hoverBackground\": \"#E8E8E8\",\r\n                \"input.placeholderForeground\": \"#767676\",\r\n                \"searchEditor.textInputBorder\": \"#CECECE\",\r\n                \"settings.textInputBorder\": \"#CECECE\",\r\n                \"settings.numberInputBorder\": \"#CECECE\",\r\n                \"statusBarItem.remoteForeground\": \"#FFF\",\r\n                \"statusBarItem.remoteBackground\": \"#16825D\",\r\n                \"jo_highlightStatementGreen\": \"#004000\",\r\n                \"jo_highlightStatementYellow\": \"#404000\",\r\n                \"jo_highlightStatementRed\": \"#400000\"\r\n            }\r\n        });\r\n\r\n\r\n        this.editor = monaco.editor.create($element[0], {\r\n            // value: [\r\n            //     'function x() {',\r\n            //     '\\tconsole.log(\"Hello world!\");',\r\n            //     '}'\r\n            // ].join('\\n'),\r\n            // language: 'myJava',\r\n            language: 'vscSQL',\r\n            lightbulb: {\r\n                enabled: true\r\n            },\r\n            // gotoLocation: {\r\n            //     multipleReferences: \"gotoAndPeek\"\r\n            // },\r\n            lineDecorationsWidth: 0,\r\n            peekWidgetDefaultFocus: \"tree\",\r\n            fixedOverflowWidgets: true,\r\n            quickSuggestions: true,\r\n            quickSuggestionsDelay: 10,\r\n            fontSize: 14,\r\n            fontFamily: \"Consolas, Roboto Mono\",\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            selectOnLineNumbers: false,\r\n            // selectionHighlight: false,\r\n            automaticLayout: true,\r\n            scrollBeyondLastLine: false,\r\n            occurrencesHighlight: false,\r\n            autoIndent: \"full\",\r\n            dragAndDrop: true,\r\n            formatOnType: true,\r\n            formatOnPaste: true,\r\n            suggestFontSize: 16,\r\n            suggestLineHeight: 22,\r\n            suggest: {\r\n                localityBonus: true,\r\n                insertMode: \"replace\"\r\n                // snippetsPreventQuickSuggestions: false\r\n            },\r\n            parameterHints: { enabled: true, cycle: true },\r\n            // //@ts-ignore\r\n            // contribInfo: {\r\n            //     suggestSelection: 'recentlyUsedByPrefix',\r\n            // },\r\n\r\n            mouseWheelZoom: this.isEmbedded,\r\n\r\n            minimap: {\r\n                enabled: this.showMinimap\r\n            },\r\n            scrollbar: {\r\n                vertical: 'auto',\r\n                horizontal: 'auto'\r\n            },\r\n            theme: \"myCustomThemeDark\",\r\n            // automaticLayout: true\r\n\r\n\r\n        }\r\n        );\r\n\r\n        let that = this;\r\n\r\n        let mouseWheelListener = (event: WheelEvent) => {\r\n            if (event.ctrlKey === true) {\r\n\r\n                that.changeEditorFontSize(Math.sign(event.deltaY), true);\r\n\r\n                event.preventDefault();\r\n            }\r\n        };\r\n\r\n\r\n        this.editor.onDidChangeConfiguration((event) => {\r\n            if (event.hasChanged(monaco.editor.EditorOption.fontInfo) && this.isEmbedded) {\r\n\r\n                this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n            }\r\n        });\r\n\r\n        this.editor.onDidChangeCursorPosition((event) => {\r\n\r\n            that.onDidChangeCursorPosition(event.position);\r\n\r\n        });\r\n\r\n        // We need this to set our model after user uses Strg+click on identifier\r\n        this.editor.onDidChangeModel((event) => {\r\n\r\n            let element: HTMLDivElement = <any>$element.find('.monaco-editor')[0];\r\n            element.removeEventListener(\"wheel\", mouseWheelListener);\r\n            element.addEventListener(\"wheel\", mouseWheelListener, { passive: false });\r\n\r\n            if (this.main.getCurrentWorkspace() == null) return;\r\n\r\n            let module = this.main.getCurrentWorkspace().getModuleByMonacoModel(this.editor.getModel());\r\n            if (this.main instanceof Main && module != null) {\r\n\r\n                this.main.projectExplorer.setActiveAfterExternalModelSet(module);\r\n            }\r\n        });\r\n\r\n        monaco.languages.registerHoverProvider('vscSQL', new MyHoverProvider(this));\r\n\r\n        monaco.languages.registerCompletionItemProvider('vscSQL', new MyCompletionItemProvider(this.main));\r\n        monaco.languages.registerCodeActionProvider('vscSQL', new MyCodeActionProvider(this.main));\r\n        monaco.languages.registerReferenceProvider('vscSQL', new MyReferenceProvider(this.main));\r\n\r\n\r\n        monaco.languages.registerSignatureHelpProvider('vscSQL', new MySignatureHelpProvider(this.main));\r\n\r\n        this.editor.onMouseDown((e: monaco.editor.IEditorMouseEvent) => {\r\n            const data = e.target.detail;\r\n            if (e.target.type !== monaco.editor.MouseTargetType.GUTTER_GLYPH_MARGIN &&\r\n                e.target.type !== monaco.editor.MouseTargetType.GUTTER_LINE_NUMBERS || data.isAfterLines) {\r\n                return;\r\n            }\r\n            that.onMarginMouseDown(e.target.position.lineNumber);\r\n            return;\r\n        });\r\n\r\n\r\n        // If editor is instantiated before fonts are loaded then indentation-lines\r\n        // are misplaced, see https://github.com/Microsoft/monaco-editor/issues/392\r\n        // so:\r\n        setTimeout(() => {\r\n            monaco.editor.remeasureFonts();\r\n        }, 2000);\r\n\r\n        this.addActions();\r\n\r\n        //@ts-ignore\r\n        this.editor.onDidType((text) => { that.onDidType(text) });\r\n\r\n        return this.editor;\r\n    }\r\n\r\n\r\n    onDidType(text: string) {\r\n        //        const endOfCommentText = \" * \\n */\";\r\n\r\n        const insertEndOfComment = (pos, insertText: string, newLine: number, newColumn: number) => {\r\n            const range = new monaco.Range(\r\n                pos.lineNumber,\r\n                pos.column,\r\n                pos.lineNumber,\r\n                pos.column\r\n            );\r\n            this.editor.executeEdits(\"new-bullets\", [\r\n                { range, text: insertText }\r\n            ]);\r\n\r\n            // Set position after bulletText\r\n            this.editor.setPosition({\r\n                lineNumber: newLine,\r\n                column: newColumn\r\n            });\r\n        };\r\n\r\n        if (text === \"\\n\") {\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            const prevLine = model.getLineContent(position.lineNumber - 1);\r\n            if (prevLine.trim().indexOf(\"/*\") === 0 && !prevLine.trimRight().endsWith(\"*/\")) {\r\n                const nextLine = position.lineNumber < model.getLineCount() ? model.getLineContent(position.lineNumber + 1) : \"\";\r\n                if (!nextLine.trim().startsWith(\"*\")) {\r\n                    let spacesAtBeginningOfLine: string = prevLine.substr(0, prevLine.length - prevLine.trimLeft().length);\r\n                    if (prevLine.trim().indexOf(\"/**\") === 0) {\r\n                        insertEndOfComment(position, \"\\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    } else {\r\n                        insertEndOfComment(position, \" * \\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    lastTime: number = 0;\r\n    setFontSize(fontSizePx: number) {\r\n\r\n        // console.log(\"Set font size: \" + fontSizePx);\r\n        let time = new Date().getTime();\r\n        if (time - this.lastTime < 150) return;\r\n        this.lastTime = time;\r\n\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (this.main instanceof Main) {\r\n            this.main.viewModeController.saveFontSize(fontSizePx);\r\n        }\r\n\r\n        if (fontSizePx != editorfs) {\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx\r\n            });\r\n\r\n            // editor does not set fontSizePx, but fontSizePx * zoomfactor with unknown zoom factor, so \r\n            // we have to do this dirty workaround:\r\n            let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n            let factor = newEditorfs / fontSizePx;\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx / factor\r\n            });\r\n\r\n        }\r\n\r\n        jQuery('.jo_editorFontSize').css('font-size', fontSizePx + \"px\");\r\n        jQuery('.jo_editorFontSize').css('line-height', (fontSizePx + 2) + \"px\");\r\n\r\n        document.documentElement.style.setProperty('--breakpoint-size', fontSizePx + 'px');\r\n        document.documentElement.style.setProperty('--breakpoint-radius', fontSizePx / 2 + 'px');\r\n\r\n\r\n        this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n    }\r\n\r\n    changeEditorFontSize(delta: number, dynamic: boolean = true) {\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (dynamic) {\r\n            if (editorfs < 10) {\r\n                delta *= 1;\r\n            } else if (editorfs < 20) {\r\n                delta *= 2;\r\n            } else {\r\n                delta *= 4;\r\n            }\r\n        }\r\n\r\n        let newEditorFs = editorfs + delta;\r\n        if (newEditorFs >= 6 && newEditorFs <= 80) {\r\n            this.setFontSize(newEditorFs);\r\n        }\r\n    }\r\n\r\n\r\n    addActions() {\r\n        let that = this;\r\n\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Find bracket',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'Finde korrespondierende Klammer',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.5,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                ed.getAction('editor.action.jumpToBracket').run();\r\n                return null;\r\n            }\r\n        });\r\n\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Execute statement',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'SQL-Anweisung ausführen',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.Enter],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.0,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                that.main.getActionManager().trigger('execute');\r\n                return null;\r\n            }\r\n        });\r\n\r\n        //console.log(this.editor.getSupportedActions());\r\n    }\r\n\r\n    onMarginMouseDown(lineNumber: number) {\r\n\r\n    }\r\n\r\n    elementDecoration: string[] = [];\r\n    onDidChangeCursorPosition(position: { lineNumber: number, column: number }) {\r\n\r\n        if (position == null) position = this.editor.getPosition();\r\n\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, []);\r\n            return;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        if (element != null) {\r\n            let usagePositions = element.usagePositions;\r\n            let upInCurrentModule = usagePositions.get(module);\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    decorations.push({\r\n                        range: { startColumn: up.column, startLineNumber: up.line, endColumn: up.column + up.length, endLineNumber: up.line },\r\n                        options: {\r\n                            className: 'jo_revealSyntaxElement', isWholeLine: false, overviewRuler: {\r\n                                color: { id: \"editorIndentGuide.background\" },\r\n                                darkColor: { id: \"editorIndentGuide.activeBackground\" },\r\n                                position: monaco.editor.OverviewRulerLane.Left\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        let executeActionActive = false;\r\n\r\n        for(let sqlStatement of module.getSQLSTatementsAtSelection(this.editor.getSelection())){\r\n\r\n            let classname = \"jo_highlightStatementGreen\";\r\n            if (sqlStatement != null) {\r\n                if (sqlStatement.hasErrors) {\r\n                    classname = \"jo_highlightStatementRed\";\r\n                    if (sqlStatement.acceptedBySQLite) {\r\n                        classname = \"jo_highlightStatementYellow\";\r\n                        executeActionActive = true;\r\n                    }\r\n                } else {\r\n                    executeActionActive = true;\r\n                }\r\n    \r\n                decorations.push({\r\n                    range: {\r\n                        startColumn: sqlStatement.from.column, startLineNumber: sqlStatement.from.line,\r\n                        endColumn: sqlStatement.to.column, endLineNumber: sqlStatement.to.line\r\n                    },\r\n                    options: {\r\n                        className: classname, isWholeLine: false, overviewRuler: {\r\n                            color: { id: classname },\r\n                            darkColor: { id: classname },\r\n                            position: monaco.editor.OverviewRulerLane.Left\r\n                        },\r\n                        minimap: {\r\n                            color: { id: classname },\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        },\r\n                        zIndex: -100\r\n                    }\r\n                })\r\n    \r\n            }\r\n        }\r\n\r\n\r\n        this.main.getActionManager().setActive('execute', executeActionActive);\r\n\r\n        if(executeActionActive && !this.main.isEmbedded()){\r\n            Helper.showHelper(\"playButtonHelper\", <any>this.main, jQuery('div.img_start-dark'));\r\n        }\r\n\r\n\r\n        this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, decorations);\r\n\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.main.getCurrentlyEditedModule();\r\n    }\r\n\r\n\r\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport function defineVscSQL() {\r\n    monaco.languages.register({\r\n        id: 'vscSQL',\r\n        extensions: ['.sql'],\r\n        //  mimetypes: [\"text/x-java-source\", \"text/x-java\"]  \r\n    });\r\n\r\n    let conf: monaco.languages.LanguageConfiguration = {\r\n        onEnterRules: [\r\n            {\r\n                // e.g. /** | */\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                afterText: /^\\s*\\*\\/$/,\r\n                action: { indentAction: monaco.languages.IndentAction.IndentOutdent, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g. /** ...|\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g.  * ...|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: '* ' }\r\n            },\r\n            {\r\n                // e.g.  */|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            },\r\n            {\r\n                // e.g.  *-----*/|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*[^/]*\\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            }\r\n        ],\r\n        comments: {\r\n            lineComment: '--',\r\n            blockComment: ['/*', '*/'],\r\n        },\r\n        brackets: [\r\n            ['{', '}'],\r\n            ['[', ']'],\r\n            ['(', ')']\r\n        ],\r\n        autoClosingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ],\r\n        surroundingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ]\r\n    };\r\n    let language = {\r\n\r\n        defaultToken: '',\r\n        tokenPostfix: '.sql',\r\n        ignoreCase: true,\r\n        brackets: [\r\n            { open: '[', close: ']', token: 'delimiter.square' },\r\n            { open: '(', close: ')', token: 'delimiter.parenthesis' }\r\n        ],\r\n        escapes: /\\\\(?:[abfnrtv\\\\\"'])/,\r\n        keywords: [\r\n            \"ABORT\", \"ACTION\", \"ADD\", \"AFTER\", \"ALL\", \"ALTER\", \"ANALYZE\", \"AND\", \"AS\", \"ASC\", \"ATTACH\", \"AUTOINCREMENT\", \"BEFORE\",\r\n            \"BEGIN\", \"BETWEEN\", \"BY\", \"CASCADE\", \"CASE\", \"CAST\", \"CHECK\", \"COLLATE\", \"COLUMN\", \"COMMIT\", \"CONFLICT\", \"CONSTRAINT\",\r\n            \"CREATE\", \"CROSS\", \"CURRENT_DATE\", \"CURRENT_TIME\", \"CURRENT_TIMESTAMP\", \"DATABASE\", \"DEFAULT\", \"DEFERRABLE\", \"DEFERRED\",\r\n            \"DELETE\", \"DESC\", \"DETACH\", \"DISTINCT\", \"DROP\", \"EACH\", \"ELSE\", \"END\", \"ESCAPE\", \"EXCEPT\", \"EXCLUSIVE\", \"EXISTS\", \"EXPLAIN\",\r\n            \"FAIL\", \"FOR\", \"FOREIGN\", \"FROM\", \"FULL\", \"GLOB\", \"GROUP\", \"HAVING\", \"IF\", \"IGNORE\", \"IMMEDIATE\", \"IN\", \"INDEX\", \"INDEXED\",\r\n            \"INITIALLY\", \"INNER\", \"INSERT\", \"INSTEAD\", \"INTERSECT\", \"INTO\", \"IS\", \"ISNULL\", \"JOIN\", \"KEY\", \"LEFT\", \"LIKE\", \"LIMIT\", \"MATCH\",\r\n            \"NATURAL\", \"NO\", \"NOT\", \"NOTNULL\", \"NULL\", \"OF\", \"OFFSET\", \"ON\", \"OR\", \"ORDER\", \"OUTER\", \"PLAN\", \"PRAGMA\", \"PRIMARY\", \"QUERY\",\r\n            \"RAISE\", \"RECURSIVE\", \"REFERENCES\", \"REGEXP\", \"REINDEX\", \"RELEASE\", \"RENAME\", \"REPLACE\", \"RESTRICT\", \"RIGHT\", \"ROLLBACK\", \"ROW\",\r\n            \"SAVEPOINT\", \"SELECT\", \"SET\", \"TABLE\", \"TEMP\", \"TEMPORARY\", \"THEN\", \"TO\", \"TRANSACTION\", \"TRIGGER\", \"UNION\", \"UNIQUE\", \"UPDATE\",\r\n            \"USING\", \"VACUUM\", \"VALUES\", \"VIEW\", \"VIRTUAL\", \"WHEN\", \"WHERE\", \"WITH\", \"WITHOUT\", \"ENGINE\", \"CHARSET\"\r\n        ],\r\n        operators: [\r\n            \"AND\", \"BETWEEN\", \"IN\", \"LIKE\", \"NOT\", \"OR\", \"IS\", \"NULL\", \"INTERSECT\", \"UNION\", \"INNER\", \"JOIN\", \"LEFT\", \"OUTER\", \"RIGHT\"\r\n        ],\r\n        builtinFunctions: [\r\n            \"abs\", \"changes\", \"char\", \"coalesce\", \"count\", \"glob\", \"hex\", \"ifnull\",\r\n            \"iif\", \"instr\", \"last_insert_rowid\", \"length\", \"like\", \"likelihood\", \"likely\",\r\n            \"lower\", \"ltrim\", \"max\", \"min\", \"nullif\", \"quote\", \"random\", \"randomblob\",\r\n            \"replace\", \"round\", \"rtrim\", \"sign\", \"soundex\", \"sqlite_version\", \"substr\", \"substring\",\r\n            \"total_changes\", \"trim\", \"typeof\", \"unicode\", \"unlikely\", \"upper\", \"zeroblob\"\r\n        ],\r\n        builtinVariables: [\r\n            // NOT SUPPORTED\r\n        ],\r\n        pseudoColumns: [\r\n            // NOT SUPPORTED\r\n        ],\r\n        tokenizer: {\r\n            root: [\r\n                { include: '@comments' },\r\n                { include: '@whitespace' },\r\n                { include: '@pseudoColumns' },\r\n                { include: '@numbers' },\r\n                { include: '@strings' },\r\n                { include: '@complexIdentifiers' },\r\n                { include: '@scopes' },\r\n                [/[;,.]/, 'delimiter'],\r\n                [/[()]/, '@brackets'],\r\n                [/[a-z_$äöü][\\w$äöüßÄÖÜ]*(?=\\()/, {\r\n                    cases: {\r\n                        '@builtinFunctions': 'functions',\r\n                        '@keywords': 'keyword',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[\\w@#$]+/, {\r\n                    cases: {\r\n                        '@keywords': 'keyword',\r\n                        '@operators': 'operator',\r\n                        '@builtinVariables': 'predefined',\r\n                        // '@builtinFunctions': 'functions',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[<>=!%&+\\-*/|~^]/, 'operator'],\r\n            ],\r\n            whitespace: [\r\n                [/\\s+/, 'white']\r\n            ],\r\n            comments: [\r\n                [/--+.*/, 'comment'],\r\n                [/\\/\\*/, { token: 'comment.quote', next: '@comment' }]\r\n            ],\r\n            comment: [\r\n                [/[^*/]+/, 'comment'],\r\n                // Not supporting nested comments, as nested comments seem to not be standard?\r\n                // i.e. http://stackoverflow.com/questions/728172/are-there-multiline-comment-delimiters-in-sql-that-are-vendor-agnostic\r\n                // [/\\/\\*/, { token: 'comment.quote', next: '@push' }],    // nested comment not allowed :-(\r\n                [/\\*\\//, { token: 'comment.quote', next: '@pop' }],\r\n                [/./, 'comment']\r\n            ],\r\n            pseudoColumns: [\r\n                [/[$][A-Za-z_][\\w@#$]*/, {\r\n                    cases: {\r\n                        '@pseudoColumns': 'predefined',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n            ],\r\n            numbers: [\r\n                [/0[xX][0-9a-fA-F]*/, 'number'],\r\n                [/[$][+-]*\\d*(\\.\\d*)?/, 'number'],\r\n                [/((\\d+(\\.\\d*)?)|(\\.\\d+))([eE][\\-+]?\\d+)?/, 'number']\r\n            ],\r\n            strings: [\r\n                [/'/, { token: 'string', next: '@string' }],\r\n            ],\r\n            string: [\r\n                [/[^\\\\']+/, 'string'],\r\n                [/\\\\./, 'string.escape.invalid'],\r\n                [/''/, 'string'],\r\n                [/'/, { token: 'string', next: '@pop' }]\r\n            ],\r\n            complexIdentifiers: [\r\n                [/\"/, { token: 'identifier.quote', next: '@quotedIdentifier' }]\r\n            ],\r\n            quotedIdentifier: [\r\n                [/[^\"]+/, 'identifier'],\r\n                [/\"\"/, 'identifier'],\r\n                [/\"/, { token: 'identifier.quote', next: '@pop' }]\r\n            ],\r\n            scopes: [\r\n                // NOT SUPPORTED\r\n            ]\r\n        }\r\n\r\n\r\n\r\n    };\r\n\r\n    //@ts-ignore\r\n    monaco.languages.setLanguageConfiguration('vscSQL', conf);\r\n    //@ts-ignore\r\n    monaco.languages.setMonarchTokensProvider('vscSQL', language);\r\n\r\n\r\n\r\n}","export class WorkerSim {\n\n    //@ts-ignore\n    initsql = initSqlJs({locateFile: (path, scriptDirectory) => \"https://embed.learn-sql.de/include/lib/sql.js/sql-wasm.wasm\"});\n    db;\n    SQL;\n\n    onmessage: (event: {data: any}) => void;\n\n    onError: (event: ErrorEvent) => void;\n\n    postMessageToClient(message: any) {\n        this.onmessage({data: message})\n    }\n\n    postMessage(data: any){\n        let that = this;\n        if (that.db == null) {\n            that.initsql.then((SQL1) => {\n                that.SQL = SQL1;\n                that.db = createDb(SQL1, undefined);\n                that.worker(data);\n            }).catch((err) => {\n                console.log(err);\n                //@ts-ignore\n                return that.postMessageToClient({\n                    id: this[\"data\"][\"id\"],\n                    error: err[\"message\"]\n                });\n            })\n        } else {\n            that.worker(data);\n        }\n    }\n\n    terminate() {\n\n    }\n\n    worker(data: any) {\n        var buff; var result;\n        var config = data[\"config\"] ? data[\"config\"] : {};\n        try {\n            switch (data && data[\"action\"]) {\n                case \"open\":\n                    buff = data[\"buffer\"];\n                    this.db = createDb(this.SQL, buff && new Uint8Array(buff));\n                    //@ts-ignore\n                    return this.postMessageToClient({\n                        id: data[\"id\"],\n                        ready: true\n                    });\n                case \"exec\":\n                    if (this.db === null) {\n                        this.db = createDb(this.SQL, undefined);\n                    }\n                    if (!data[\"sql\"]) {\n                        throw \"exec: Missing query string\";\n                    }\n                    //@ts-ignore\n                    return this.postMessageToClient({\n                        id: data[\"id\"],\n                        results: this.db.exec(data[\"sql\"], data[\"params\"], config)\n                    });\n                case \"each\":\n                    if (this.db === null) {\n                        this.db = createDb(this.SQL, undefined);\n                    }\n                    var callback = function callback(row) {\n                        //@ts-ignore\n                        return this.postMessage({\n                            id: data[\"id\"],\n                            row: row,\n                            finished: false\n                        });\n                    };\n                    var done = function done() {\n                        //@ts-ignore\n                        return this.postMessage({\n                            id: data[\"id\"],\n                            finished: true\n                        });\n                    };\n                    return this.db.each(data[\"sql\"], data[\"params\"], callback, done, config);\n                case \"export\":\n                    buff = this.db[\"export\"]();\n                    result = {\n                        id: data[\"id\"],\n                        results: [\n                            {\n                                buffer: buff\n                            }\n                        ]\n                    };\n                    try {\n                        //@ts-ignore\n                        return this.postMessageToClient(result);\n                    } catch (error) {\n                        //@ts-ignore\n                        return this.postMessageToClient(result);\n                    }\n                case \"close\":\n                    if (this.db) {\n                        this.db.close();\n                    }\n                    //@ts-ignore\n                    return this.postMessageToClient({\n                        id: data[\"id\"]\n                    });\n                default:\n                    throw new Error(\"Invalid action : \" + (data && data[\"action\"]));\n            }\n\n        } catch (err) {\n\n            //@ts-ignore\n            return this.postMessageToClient({\n                id: data[\"id\"],\n                error: err[\"message\"]\n            });\n        }\n\n    }\n\n\n}\n\n\n\n\n\n","import { MainBase } from \"../main/MainBase.js\";\r\nimport { WorkerSim } from \"../sqljs-worker/sqljsWorkerSim.js\";\r\n\r\nexport type DatabaseDumpType = \"binaryUncompressed\" | \"binaryCompressed\" | \"other\";\r\n\r\nexport type DatabaseDirectoryEntry = {\r\n    name: string,\r\n    description: string,\r\n    filename: string\r\n}\r\n\r\nexport type QueryResult = {\r\n    columns: string[],\r\n    values: any[][],\r\n    buffer?: Uint8Array\r\n}\r\n\r\nexport type QuerySuccessCallback = (results: QueryResult[]) => void;\r\nexport type QueryErrorCallback = (error: string) => void;\r\n\r\nexport type ColumnStructure = {\r\n    name: string;\r\n    table: TableStructure;\r\n\r\n    typeLengths?: number[]; // for varchar(5), ...\r\n    completeTypeSQL: string;\r\n\r\n    references?: ColumnStructure;\r\n    referencesRawData?: any[];\r\n    isPrimaryKey: boolean;\r\n    isAutoIncrement: boolean;\r\n\r\n    notNull: boolean;\r\n    defaultValue: string;\r\n\r\n    dumpValueFunction?: (any) => string\r\n}\r\n\r\nexport type TableStructure = {\r\n    name: string;\r\n    size: number;\r\n    columns: ColumnStructure[];\r\n    completeSQL: string;\r\n}\r\n\r\nexport type DatabaseStructure = {\r\n    tables: TableStructure[]\r\n}\r\n\r\n\r\nexport class DatabaseTool {\r\n\r\n    databaseDirectoryEntries: DatabaseDirectoryEntry[] = null;\r\n\r\n    worker: Worker;\r\n\r\n    queryId: number = 0;\r\n\r\n    querySuccessCallbacksMap: Map<number, QuerySuccessCallback> = new Map();\r\n    queryErrorCallbackMap: Map<number, QueryErrorCallback> = new Map();\r\n\r\n    databaseStructure: DatabaseStructure;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    initializeWorker(template: Uint8Array, queries: string[], callbackAfterInitializing?: (errors: string[]) => void,\r\n        callbackAfterRetrievingStructure?: () => void) {\r\n        \r\n        this.main.getWaitOverlay().show('Bitte warten, die Datenbank wird initialisiert...');\r\n        \r\n            if (this.worker != null) {\r\n            this.worker.terminate();\r\n        }\r\n\r\n        let t = performance.now();\r\n\r\n        // console.log(\"Starting worker...\");\r\n\r\n        let url: string = \"js/sqljs-worker/sqljsWorker.js\"\r\n        if(this.main.isEmbedded()){\r\n            //@ts-ignore\r\n            url = window.javaOnlineDir + url;\r\n        }\r\n\r\n        //@ts-ignore\r\n        if(window.jo_doc){\r\n            //@ts-ignore\r\n            this.worker = new WorkerSim();\r\n        } else {\r\n            this.worker = new Worker(url);\r\n        }\r\n        let that = this;\r\n\r\n        let errors: string[] = [];\r\n\r\n        this.worker.onmessage = () => {\r\n            // console.log(\"Database opened (\" + (performance.now() - t)/1000 + \" s)\");\r\n            that.worker.onmessage = event => {\r\n\r\n                // console.log(event.data);\r\n\r\n                let id = event.data.id;\r\n                if (event.data.error == null) {\r\n                    let querySuccessCallback = that.querySuccessCallbacksMap.get(id);\r\n                    if (querySuccessCallback != null) {\r\n                        querySuccessCallback(event.data.results);\r\n                    }\r\n                } else {\r\n                    let queryErrorCallback = that.queryErrorCallbackMap.get(id);\r\n                    if (queryErrorCallback != null) {\r\n                        queryErrorCallback(event.data.error);\r\n                    }\r\n                }\r\n\r\n                // if(event.data.buffer){\r\n                //     console.log(event.data.buffer);\r\n                // }\r\n\r\n\r\n                this.queryErrorCallbackMap.delete(id);\r\n                this.querySuccessCallbacksMap.delete(id);\r\n\r\n            };\r\n\r\n            if(queries == null) queries = [];\r\n            queries = queries.slice();\r\n            queries.unshift(\"PRAGMA foreign_keys = OFF;\")\r\n            queries.push(\"PRAGMA foreign_keys = ON;\")\r\n            let queryCount = queries.length;\r\n\r\n            let execQuery = () => {\r\n                if (queries.length > 0) {\r\n                    this.main.getWaitOverlay().setProgress(`${Math.round((1-queries.length/queryCount)*100) + \" %\"}`)\r\n                    let query = queries.shift();\r\n                    that.executeQuery(query, (result) => {\r\n                        execQuery();\r\n                    }, (error) => {\r\n                        errors.push(\"Error while setting up database: \" + error + \", query: \" + query);\r\n                        console.log({\"error\": \"Error while setting up database: \" + error, \"query\": query});\r\n                        console.log()\r\n                        execQuery();\r\n                    })\r\n                } else {\r\n                    if (callbackAfterInitializing != null) callbackAfterInitializing(errors);\r\n                    that.retrieveDatabaseStructure(() => {\r\n                        // console.log(\"Database structure retrieved (\" + (performance.now() - t)/1000 + \" s)\");\r\n                        if (callbackAfterRetrievingStructure) callbackAfterRetrievingStructure();\r\n                        this.main.getWaitOverlay().hide();\r\n\r\n                    });\r\n                }\r\n            }\r\n\r\n            execQuery();\r\n\r\n            // that.executeQuery(sql, (result) => {\r\n            //     // console.log(\"Template written (\" + (performance.now() - t)/1000 + \" s)\");\r\n\r\n            //     if (callbackAfterInitializing != null) callbackAfterInitializing();\r\n            //     that.retrieveDatabaseStructure(() => {\r\n            //         // console.log(\"Database structure retrieved (\" + (performance.now() - t)/1000 + \" s)\");\r\n            //         if (callbackAfterRetrievingStructure) callbackAfterRetrievingStructure();\r\n            //         jQuery('#bitteWarten').css('display', 'none');\r\n\r\n            //     });\r\n            //     // that.executeQuery(\"select * from test\", (results: QueryResult[]) => {console.log(results)}, (error) => {console.log(\"Error:\" + error)});\r\n            // },\r\n            //     (error) => {\r\n            //         console.log(\"Error while setting up database: \" + error);\r\n            //     });\r\n\r\n            // that.worker.postMessage({\r\n            //     action: \"export\"\r\n            // })\r\n\r\n        };\r\n\r\n        this.worker.onerror = (e) => {\r\n            errors.push(\"Worker error: \" + e.error);\r\n            console.log(\"Worker error: \" + e.error);\r\n        }\r\n\r\n        this.worker.postMessage({\r\n            id: that.queryId++,\r\n            action: \"open\",\r\n            buffer: template, /*Optional. An ArrayBuffer representing an SQLite Database file*/\r\n        });\r\n\r\n    }\r\n\r\n    executeQuery(query: string, successCallback: QuerySuccessCallback, errorCallback: QueryErrorCallback) {\r\n\r\n        let id = this.queryId++;\r\n\r\n        this.querySuccessCallbacksMap.set(id, successCallback);\r\n        this.queryErrorCallbackMap.set(id, errorCallback);\r\n\r\n        this.worker.postMessage({\r\n            id: id,\r\n            action: \"exec\",\r\n            sql: query,\r\n            params: {}\r\n        });\r\n\r\n    }\r\n\r\n    export(successCallback: (buffer: Uint8Array) => void, errorCallback: QueryErrorCallback) {\r\n\r\n        let id = this.queryId++;\r\n\r\n        this.querySuccessCallbacksMap.set(id, (results) => { successCallback(results[0].buffer)  });\r\n        this.queryErrorCallbackMap.set(id, errorCallback);\r\n\r\n        this.worker.postMessage({\r\n            id: id,\r\n            action: \"export\",\r\n            params: {}\r\n        });\r\n\r\n    }\r\n\r\n    \r\n\r\n    getDirectoryEntries(callback: (entries: DatabaseDirectoryEntry[]) => void) {\r\n        if (this.databaseDirectoryEntries != null) {\r\n            callback(this.databaseDirectoryEntries);\r\n        } else {\r\n            jQuery.getJSON(\"assets/databases/directory.json\", function (entries: DatabaseDirectoryEntry[]) {\r\n                callback(entries);\r\n            });\r\n        }\r\n    }\r\n\r\n    retrieveDatabaseStructure(callback: (dbStructure: DatabaseStructure) => void) {\r\n\r\n        /*\r\n            @see https://stackoverflow.com/questions/6460671/sqlite-schema-information-metadata\r\n        */\r\n        let sql = `SELECT name, sql FROM sqlite_master WHERE type='table';`\r\n        let that = this;\r\n\r\n        this.executeQuery(sql, (result) => {\r\n            let sql1 = \"\";\r\n            result[0]?.values?.forEach(value => sql1 += `PRAGMA table_info(${value[0]});\\nPRAGMA foreign_key_list(${value[0]});\\nselect count(*) from ${value[0]};\\n\\n`)\r\n\r\n            if (sql1 != \"\") {\r\n                this.executeQuery(sql1, (result1) => {\r\n                    // console.log(\"DB structure: \");\r\n                    // console.log(result1);\r\n\r\n                    that.databaseStructure = that.parseDatabaseStructure(result, result1)\r\n\r\n                    callback(that.databaseStructure);\r\n\r\n                }, (error) => { console.log(error)});\r\n            } else {\r\n                that.databaseStructure = { tables: [] };\r\n                callback(that.databaseStructure);\r\n            }\r\n\r\n        }, (error) => { console.log(error) });\r\n\r\n\r\n    }\r\n\r\n    parseDatabaseStructure(tables: QueryResult[], columns: QueryResult[]): DatabaseStructure {\r\n        this.databaseStructure = {\r\n            tables: []\r\n        };\r\n\r\n        let tableNameToStructureMap: Map<string, TableStructure> = new Map();\r\n\r\n        let index = 0;\r\n        for (let i = 0; i < tables[0].values.length; i++) {\r\n            let tableName = tables[0].values[i][0];\r\n            let tableSQL = tables[0].values[i][1];\r\n\r\n            let tableStructure: TableStructure = {\r\n                name: tableName,\r\n                size: 0,\r\n                completeSQL: tableSQL,\r\n                columns: []\r\n            }\r\n\r\n            tableNameToStructureMap.set(tableName, tableStructure);\r\n\r\n            this.databaseStructure.tables.push(tableStructure);\r\n\r\n            let columnArray = columns[index].values;\r\n            let foreignKeyList: any[][] = null;\r\n            if (columns.length > index + 1 && columns[index + 1].columns[0] == \"id\") {\r\n                foreignKeyList = columns[index + 1].values;\r\n                index++;\r\n            }\r\n            index++;\r\n            let size: number = columns[index].values[0][0];\r\n            index++;\r\n\r\n            tableStructure.size = size;\r\n\r\n            columnArray.forEach(columnArray1 => {\r\n                let cid: number = columnArray1[0];\r\n                let name: string = columnArray1[1];\r\n                let type: string = columnArray1[2];\r\n                let notNull: boolean = columnArray1[3] == 1;\r\n                let dflt_value: string = columnArray1[4];\r\n                let isPrimaryKey: boolean = columnArray1[5] != 0;\r\n\r\n                let columnStructure: ColumnStructure = {\r\n                    name: name,\r\n                    isPrimaryKey: isPrimaryKey,\r\n                    isAutoIncrement: isPrimaryKey && tableSQL.toLowerCase().indexOf(\"autoincrement\") >= 0,\r\n                    completeTypeSQL: type,\r\n                    table: tableStructure,\r\n                    typeLengths: [],\r\n                    defaultValue: dflt_value,\r\n                    notNull: notNull\r\n                }\r\n                /*\r\n                    columns: (8) [\"id\", \"seq\", \"table\", \"from\", \"to\", \"on_update\", \"on_delete\", \"match\"]\r\n                    values: Array(1)\r\n                    0: (8) [0, 0, \"land\", \"LNR\", \"lnr\", \"NO ACTION\", \"NO ACTION\", \"NONE\"]\r\n                */\r\n\r\n                if (foreignKeyList != null) {\r\n                    let fkInfo: any[] = foreignKeyList.find(foreignKeyInfo => foreignKeyInfo[3].toLocaleLowerCase() == name.toLocaleLowerCase());\r\n                    if (fkInfo != null) {\r\n                        columnStructure.referencesRawData = fkInfo;\r\n                    }\r\n                }\r\n\r\n                tableStructure.columns.push(columnStructure);\r\n\r\n            });\r\n\r\n        }\r\n\r\n        for (let ts of this.databaseStructure.tables) {\r\n            for (let cs of ts.columns) {\r\n                if (cs.referencesRawData != null) {\r\n                    let table = tableNameToStructureMap.get(cs.referencesRawData[2]);\r\n                    // SQlite doesn't remove foreign key references to columns of a dropped table\r\n                    if(table == null) continue;\r\n                    let column = table.columns.find(c => c.name.toLocaleLowerCase() == cs.referencesRawData[4].toLocaleLowerCase());\r\n                    cs.references = column;\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log(this.databaseStructure);\r\n\r\n        return this.databaseStructure;\r\n\r\n    }\r\n\r\n    static getDumpType(dump: Uint8Array): DatabaseDumpType {\r\n\r\n        let sqliteMagicBytes: number[] = [0x53, 0x51, 0x4c, 0x69, 0x74, 0x65];\r\n        let zlibMagicByte: number = 0x78;\r\n\r\n        let found: boolean = true;\r\n        for (let i = 0; i < sqliteMagicBytes.length; i++) {\r\n            if (sqliteMagicBytes[i] != dump[i]) {\r\n                found = false;\r\n                break;\r\n            }\r\n        }\r\n        if (found) return \"binaryUncompressed\";\r\n\r\n        if (dump[0] == zlibMagicByte) return \"binaryCompressed\";\r\n\r\n        return \"other\";\r\n\r\n    }\r\n\r\n\r\n}","import { TokenType } from \"../lexer/Token.js\";\r\nimport { ASTNode, ConstantNode, CreateTableColumnNode, CreateTableNode, ForeignKeyInfo, InsertNode } from \"./AST.js\";\r\nimport { SQLStatement } from \"./Parser.js\";\r\n\r\nexport class StatementCleaner {\r\n\r\n    MaxRowsPerInsert: number = 300;\r\n\r\n    clean(statement: SQLStatement): string {\r\n        switch (statement.ast.type) {\r\n            case TokenType.keywordCreate:   // Create Table statement\r\n                statement.sqlCleaned = this.cleanCreateTableStatement(statement.ast);\r\n                return statement.sqlCleaned;\r\n            case TokenType.keywordInsert:\r\n                if(statement.ast.select != null){\r\n                    return statement.sql;\r\n                } else {\r\n                    statement.sqlCleaned = this.cleanInsertStatement(statement.ast);\r\n                    return statement.sqlCleaned;\r\n                }\r\n            default:\r\n                return statement.sql;\r\n                break;\r\n        }\r\n    }\r\n\r\n    cleanInsertStatement(ast: InsertNode): string {\r\n        let statementHeader: string = `insert into ${ast.table.identifier}`;\r\n\r\n        if (ast.columnList != null && ast.columnList.length > 0) {\r\n            statementHeader += `(${ast.columnList.map(c => c.identifier).join(\", \")})`;\r\n        }\r\n\r\n        statementHeader += '\\nvalues\\n';\r\n\r\n        let st = \"\";\r\n\r\n        let lines: string[] = [];\r\n        if (ast.values != null && ast.values.length > 0) {\r\n            for (let vline of ast.values) {\r\n                lines.push(`\\n(${vline.map(v => this.cleanValue(v)).join(\", \")})`);\r\n            }\r\n            //st += lines.join(\",\\n\");\r\n        }\r\n\r\n        while (lines.length > 0) {\r\n            st += statementHeader;\r\n            st += lines.splice(0, Math.max(this.MaxRowsPerInsert, lines.length)).join(\",\\n\");\r\n            st += \";\\n\";\r\n        }\r\n\r\n        return st;\r\n\r\n    }\r\n\r\n    cleanValue(v: ConstantNode) {\r\n        if (v.constantType == TokenType.stringConstant) {\r\n            let s: string = v.constant;\r\n            s = s.replace(/'/g, \"''\");\r\n            return `'${s}'`;\r\n        } else {\r\n            return v.constant;\r\n        }\r\n    }\r\n\r\n    cleanCreateTableStatement(ast: CreateTableNode): string {\r\n        let st: string = `create table ${ast.ifNotExists ? \" if not exists\" : \"\"} ${ast.identifier}(\\n   `;\r\n\r\n        st += ast.columnList.map(column => this.cleanColumnDef(column)).join(\",\\n   \");\r\n        if (ast.foreignKeyInfoList != null && ast.foreignKeyInfoList.length > 0) {\r\n            st += \",\\n   \" + ast.foreignKeyInfoList.map(fki => this.cleanForeignKeyInfo(fki)).join(\",\\n   \");\r\n        }\r\n\r\n        let pkc = ast.combinedPrimaryKeyColumns.slice().map(s => s.toLocaleLowerCase());\r\n        for (let column of ast.columnList) {\r\n            let c = column.identifier.toLocaleLowerCase();\r\n            if (column.isAutoIncrement && pkc.indexOf(c) >= 0) {\r\n                pkc.splice(pkc.indexOf(c), 1);\r\n            }\r\n        }\r\n\r\n        if (pkc.length > 0) {\r\n            st += `,\\n   primary key(${pkc.join(\", \")})`;\r\n        }\r\n\r\n        if (ast.uniqueConstraints.length > 0) {\r\n            st += \",\\n   \" + ast.uniqueConstraints.map(uk => 'unique(' + uk.join(\", \") + \")\").join(\",\\n   \");\r\n        }\r\n\r\n        st += '\\n);';\r\n\r\n        return st;\r\n    }\r\n\r\n    cleanForeignKeyInfo(fki: ForeignKeyInfo): string {\r\n        let fkiString = `foreign key (${fki.column}) references ${fki.referencesTable}(${fki.referencesColumn})`;\r\n        if (fki.onDelete) {\r\n            fkiString += ` on delete ` + fki.onDelete;\r\n        }\r\n        if (fki.onUpdate) {\r\n            fkiString += ` on update ` + fki.onUpdate;\r\n        }\r\n        return fkiString;\r\n    }\r\n\r\n    cleanColumnDef(column: CreateTableColumnNode): string {\r\n\r\n        let type = column.baseType.toString();\r\n        if (type == \"int\" && column.isAutoIncrement) {\r\n            type = \"integer\";\r\n        }\r\n\r\n        let st: string = `${column.identifier} ${type}`;\r\n        if (column.parameters != null && column.parameters.length > 0 && !column.isAutoIncrement) {\r\n            st += `(${column.parameters.join(\", \")})`;\r\n        }\r\n        if (column.notNull) {\r\n            st += \" not null\";\r\n        }\r\n        if (column.defaultValue != null) {\r\n            st += \" default \" + column.defaultValue;\r\n        }\r\n        if (column.isPrimary || column.isAutoIncrement) {\r\n            st += \" primary key\";\r\n        }\r\n        if (column.isAutoIncrement) {\r\n            st += \" autoincrement\";\r\n        }\r\n        if (column.foreignKeyInfo != null) {\r\n            let fki = column.foreignKeyInfo;\r\n            let c: string = fki.referencesColumn;\r\n            if (fki.referencesTable) c = fki.referencesTable + \"(\" + c + \")\";\r\n            st += \" references \" + c;\r\n        }\r\n        if (column.collate != null) {\r\n            let collate = column.collate.toLocaleLowerCase();\r\n            if ([\"binary\", \"nocase\", \"rtrim\"].indexOf(collate) >= 0) {\r\n                st += \" collate \" + collate;\r\n            }\r\n        }\r\n        let parameters = column.parameters ? column.parameters : [0, 0];\r\n        let checkFunction = column.baseType.checkFunction(column.identifier, parameters);\r\n        if (checkFunction != \"\") {\r\n            st += \" \" + checkFunction;\r\n        }\r\n        return st;\r\n    }\r\n\r\n}","import { Lexer } from \"../compiler/lexer/Lexer.js\";\nimport { TokenType } from \"../compiler/lexer/Token.js\";\nimport { AlterTableNode, CreateTableNode, InsertNode } from \"../compiler/parser/AST.js\";\nimport { Module } from \"../compiler/parser/Module.js\";\nimport { Parser, SQLStatement } from \"../compiler/parser/Parser.js\";\nimport { StatementCleaner } from \"../compiler/parser/StatementCleaner.js\";\nimport { MainBase } from \"../main/MainBase.js\";\nimport { LoadableDatabase } from \"./DatabaseLoader.js\";\nimport { DatabaseTool } from \"./DatabaseTools.js\";\n\nexport class MySqlImporter {\n\n    private createTableNodes: CreateTableNode[];\n    private insertNodes: InsertNode[];\n    private tableModifyingNodes: AlterTableNode[];\n\n    constructor(private main: MainBase) {\n\n    }\n\n    async loadFromUrl(url: string): Promise<LoadableDatabase> {\n        if (url == null) return;\n\n        let text = null;\n        if (url.endsWith(\".zip\")) {\n            text = await this.unzipURL(url);\n        } else {\n            text = await (await fetch(url)).text();\n        }\n\n        return this.importFromText(text);\n    }\n\n    async loadFromFile(file: globalThis.File): Promise<LoadableDatabase> {\n        if (file == null) return;\n\n        if (file.name.endsWith(\".zip\")) {\n            let text = await this.unzipFile(file);\n            return this.importFromText(text);\n        } else {\n\n            return new Promise<LoadableDatabase>(\n                (resolve, reject) => {\n                    var reader = new FileReader();\n                    reader.onload = (event) => {\n                        let text = <string>event.target.result;\n                        resolve(this.importFromText(text));\n                    };\n                    reader.readAsText(file);\n                }\n            )\n\n\n        }\n    }\n\n    async unzipURL(url: string): Promise<string> {\n        //@ts-ignore\n        const reader = new zip.ZipReader(new zip.HttpReader(url));\n        return this.unzipIntern(reader);\n    }\n\n    async unzipFile(file: globalThis.File): Promise<string> {\n        // create a BlobReader to read with a ZipReader the zip from a Blob object\n        //@ts-ignore\n        const reader = new zip.ZipReader(new zip.BlobReader(file));\n        return this.unzipIntern(reader);\n    }\n\n    async unzipIntern(reader: any): Promise<string> {\n        // get all entries from the zip\n        let entries = await reader.getEntries();\n        entries = entries.filter(entry => entry.filename.endsWith(\".sql\"))\n        let text: string = null;\n        if (entries.length) {\n\n            // get first entry content as text by using a TextWriter\n            text = await entries[0].getData(\n                // writer\n                //@ts-ignore\n                new zip.TextWriter(),\n                // options\n                {\n                    onprogress: (index, max) => {\n                        // onprogress callback\n                    }\n                }\n            );\n        }\n\n        // close the ZipReader\n        await reader.close();\n\n        return text;\n    }\n\n    private async importFromText(text: string): Promise<LoadableDatabase> {\n        if (text == null) return null;\n\n        let lexer: Lexer = new Lexer();\n        let lexOutput = lexer.lex(text);\n\n        let parser: Parser = new Parser();\n        let m: Module = new Module({\n            dirty: false,\n            name: \"\",\n            saved: true,\n            student_edited_after_revision: false,\n            submitted_date: null,\n            text: text,\n            text_before_revision: null,\n            version: 0\n        }, this.main);\n        m.tokenList = lexOutput.tokens;\n\n        parser.parse(m);\n\n        this.createTableNodes = m.sqlStatements.filter(st => st.ast.type == TokenType.keywordCreate).map(st => <CreateTableNode>st.ast);\n        this.insertNodes = m.sqlStatements.filter(st => st.ast.type == TokenType.keywordInsert).map(st => <InsertNode>st.ast);\n        this.tableModifyingNodes = m.sqlStatements.filter(st => st.ast.type == TokenType.keywordAlter &&\n            (<AlterTableNode>st.ast).kind == \"omittedKind\").map(st => <AlterTableNode>st.ast);\n\n        for (let tmn of this.tableModifyingNodes) {\n            let createTableNode = this.findCreateTableNode(tmn.tableIdentifier);\n            if (createTableNode == null) continue;\n\n            if (tmn.primaryKeys != null) {\n                createTableNode.combinedPrimaryKeyColumns = tmn.primaryKeys;\n                createTableNode.columnList.forEach(c => c.isPrimary = false);\n            }\n\n            if (tmn.autoIncrementColumn != null) {\n                let pcn = this.findCreateTableColumnNode(createTableNode, tmn.autoIncrementColumn);\n                if (pcn != null) pcn.isPrimary = true;\n            }\n\n            if (tmn.modifyColumnInfo != null) {\n                for (let mci of tmn.modifyColumnInfo) {\n                    let mcn = this.findCreateTableColumnNode(createTableNode, mci.identifier);\n                    let index = createTableNode.columnList.indexOf(mcn);\n                    createTableNode.columnList.splice(index, 1, mci);\n                }\n            }\n\n            if (tmn.foreignKeys != null) {\n                for (let fk of tmn.foreignKeys) {\n                    createTableNode.foreignKeyInfoList.push(fk);\n                }\n            }\n\n            if (tmn.indices != null) {\n                for (let index of tmn.indices) {\n                    m.sqlStatements.push({\n                        acceptedBySQLite: true,\n                        from: null, to: null, hasErrors: false,\n                        ast: {\n                            type: TokenType.keywordIndex,\n                            columnIdentifier: index.column,\n                            indexIdentifier: index.index_name,\n                            tableIdentifier: tmn.tableIdentifier,\n                            unique: index.unique,\n                            position: null, endPosition: null, symbolTable: null\n                        },\n                        sql: `create ${index.unique ? 'unique ' : ''} index ${index.index_name} on ${tmn.tableIdentifier}(${index.column});`\n                    })\n                }\n            }\n        }\n\n        return this.makeDatabase(m.sqlStatements);\n    }\n\n    private findCreateTableNode(tableIdentifier: string): CreateTableNode {\n        tableIdentifier = tableIdentifier.toLocaleLowerCase();\n        return this.createTableNodes.find(node => node.identifier.toLocaleLowerCase() == tableIdentifier);\n    }\n\n    private findCreateTableColumnNode(tableNode: CreateTableNode, columnIdentifier: string) {\n        columnIdentifier = columnIdentifier.toLocaleLowerCase();\n        return tableNode.columnList.find(columnNode => columnNode.identifier.toLocaleLowerCase() == columnIdentifier)\n    }\n\n    private async makeDatabase(statements: SQLStatement[]): Promise<LoadableDatabase> {\n\n        let statementCleaner: StatementCleaner = new StatementCleaner();\n\n        let sqlStatements: string[] = statements.filter(st => st.ast.type != TokenType.omittedeStatement)\n            .map(st => statementCleaner.clean(st));\n        sqlStatements.unshift(\"PRAGMA foreign_keys = OFF;\");\n        sqlStatements.push(\"PRAGMA foreign_keys = ON;\")\n\n        let dbTool = new DatabaseTool(this.main);\n\n        let promise = new Promise<LoadableDatabase>((resolve, reject) => {\n            dbTool.initializeWorker(null, sqlStatements, () => {\n                dbTool.export((buffer) => {\n                    resolve({\n                        binDump: buffer\n                    })\n                }, (error) => {\n                    reject(error);\n                })\n            });\n\n        })\n\n        return promise;\n\n    }\n\n\n}","import { MainBase } from \"../main/MainBase.js\";\r\nimport { LoadableDatabase } from \"./DatabaseLoader.js\";\r\nimport { DatabaseTool } from \"./DatabaseTools.js\";\r\nimport { downloadFile } from \"./HtmlTools.js\";\r\nimport { MySqlImporter } from \"./MySqlImporter.js\";\r\n\r\nexport class DatabaseImportExport {\r\n\r\n    async loadFromFile(file: globalThis.File, main: MainBase): Promise<LoadableDatabase>{\r\n        let that = this;\r\n        if (file == null) return;\r\n        main.getWaitOverlay().show(\"Lese Datei ein...\");\r\n        if(file.name.endsWith(\".sql\") || file.name.endsWith(\".zip\")){\r\n            let ld = await new MySqlImporter(main).loadFromFile(file);\r\n            main.getWaitOverlay().hide();\r\n            return ld;\r\n        } else {\r\n            var reader = new FileReader();\r\n            return new Promise<LoadableDatabase>((resolve, reject) => {\r\n                reader.onload = (event) => {\r\n                    let ab: ArrayBuffer = <ArrayBuffer>event.target.result;\r\n                    let db: Uint8Array = new Uint8Array(ab);\r\n        \r\n                    //@ts-ignore\r\n                    if(DatabaseTool.getDumpType(db) == \"binaryCompressed\") db = pako.inflate(db);\r\n                    \r\n                    main.getWaitOverlay().hide();\r\n                    resolve({binDump: db});\r\n                };\r\n                reader.readAsArrayBuffer(file);\r\n    \r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    saveToFile(dbTool: DatabaseTool){\r\n        dbTool.export((db) => {\r\n            let filename: string = prompt(\"Bitte geben Sie den Dateinamen ein\", \"datenbank.sqLite\");\r\n            if (filename == null) {\r\n                alert(\"Der Dateiname ist leer, daher wird nichts gespeichert.\");\r\n                return;\r\n            }\r\n            if (!filename.endsWith(\".sqLite\")) filename = filename + \".sqLite\";\r\n            downloadFile(new Blob([db.buffer]), filename, true);\r\n        }, () => {});\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { CreateWorkspaceData, WorkspaceData } from \"../../communication/Data.js\";\r\nimport { DatabaseImportExport } from \"../../tools/DatabaseImportExport.js\";\r\nimport { LoadableDatabase } from \"../../tools/DatabaseLoader.js\";\r\nimport { DatabaseTool } from \"../../tools/DatabaseTools.js\";\r\nimport { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { TemplateUploader } from \"../../tools/TemplateUploader.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionElement } from \"./Accordion.js\";\r\n\r\ntype CreateMode = \"emptyDatabase\" | \"fromTemplate\" | \"useExistingDatabase\" | \"useDumpFile\";\r\n\r\nexport class NewDatabaseDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    database: LoadableDatabase;\r\n\r\n    constructor(private main: Main, private owner_id: number, private path: string[]) {\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Neue Datenbank anlegen</div>\r\n\r\n            <div class=\"jo_ds_settings\">\r\n               <div class=\"jo_ds_settings_caption\">Name der Datenbank:</div><div><input class=\"dialog-input jo_databasename\" value=\"Neue Datenbank\"></input></div>\r\n            </div>\r\n\r\n             <div class=\"jo_tabheadings jo_cdtabheading\">\r\n             <div class=\"jo_tabheading\" data-target=\"jo_createEmptyDatabaseTab\">Leere Datenbank</div>\r\n             <div class=\"jo_tabheading jo_active\" data-target=\"jo_createDatabaseFromTemplateTab\">Von Vorlage kopieren</div>\r\n             <div class=\"jo_tabheading\" data-target=\"jo_createDatabaseUseExistingTab\">Bestehende Datenbank mitnutzen</div>\r\n             <div class=\"jo_tabheading\" data-target=\"jo_createDatabaseUseDumpFile\">Import aus Dumpfile (SQLite- oder MySQL-Format)</div>\r\n             </div>\r\n             <div class=\"jo_tabs\" style=\"width: 100%; margin-top: 10px\">\r\n                 <div class=\"jo_createEmptyDatabaseTab\">\r\n                    <div class=\"jo_createDatabaseDescription\">\r\n                        Erstellt wird eine leere Datenbank.\r\n                    </div>\r\n                 </div>\r\n                 <div class=\"jo_createDatabaseFromTemplateTab jo_active\">\r\n                    <div class=\"jo_ds_settings\">\r\n                       <div class=\"jo_ds_settings_caption\">Vorlage suchen:</div><div><input class=\"dialog-input jo_templatename\"></input></div>\r\n                    </div>\r\n                    <div class=\"jo_scrollable jo_templatelist\"></div>\r\n                 </div>\r\n                <div class=\"jo_createDatabaseUseExistingTab\">\r\n                    <div class=\"jo_createDatabaseDescription\">Wenn Du die Datenbank einer anderen Nutzerin/eines anderen Nutzers mitnutzen möchtest, brauchst Du einen Zugriffscode von ihr/ihm. Er ist unter Datenbank->Einstellungen zu finden.            \r\n                    </div>\r\n                    <div class=\"jo_ds_settings\">\r\n                       <div class=\"jo_ds_settings_caption\">Zugriffscode:</div><div><input class=\"dialog-input jo_databasecodeinput\"></input></div>\r\n                    </div>\r\n                 </div>\r\n                <div class=\"jo_createDatabaseUseDumpFile\">\r\n                    <div class=\"jo_createDatabaseDescription\">Wähle hier die Datei mit dem Datenbank-Dump aus (Endung .sqLite (SQLite-Datenbankdatei) oder .zip (gepackter MySql-Dump) oder .sql (MySql-Dump)):</div>\r\n                    <input type=\"file\" class=\"jo_dumpfile\" name=\"dumpfile\" style=\"padding: 10px\"/>\r\n                    <div class=\"jo_databaseimport_dropzone\" style=\"width: 70vw; margin-left: 10px\">Alternativ: Datei in dieses Feld ziehen</div>\r\n                    <div class=\"jo_databaseimport_ok\"></div>\r\n                 </div>\r\n             </div>\r\n\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_create_database_button\">Datenbank anlegen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        makeTabs(this.$dialog);\r\n\r\n        let $templatelist = jQuery('.jo_templatelist');\r\n        this.main.networkManager.fetchTemplateList((templatelist) => {\r\n            templatelist.forEach(tle => {\r\n\r\n                let $tle = jQuery('<div class=\"jo_templateListEntry\"></div>')\r\n                $tle.append(jQuery(`<div class=\"jo_tle_firstline\">${tle.name} <span class=\"jo_tle_ownername\"> (von ${tle.ownerName})</span></div>`))\r\n                $tle.append(jQuery(`<div class=\"jo_tle_secondline\">${tle.description}</div>`))\r\n                $tle.data('templateId', tle.id);\r\n                $tle.data('name', tle.name);\r\n\r\n                $templatelist.append($tle);\r\n                tle.$tle = <JQuery<HTMLDivElement>>$tle;\r\n\r\n                $tle.on('pointerdown', () => {\r\n                    $templatelist.find('.jo_templateListEntry').removeClass('jo_active');\r\n                    $tle.addClass('jo_active');\r\n                })\r\n\r\n            })\r\n            let $templateName = <JQuery<HTMLInputElement>>jQuery('.jo_templatename');\r\n            $templateName.on('input', () => {\r\n                let s = <string>$templateName.val();\r\n                $templatelist.find('.jo_templateListEntry').hide();\r\n                templatelist.forEach(tle => {\r\n                    let tleString = tle.name + tle.ownerName + (tle.description ? tle.description : \"\");\r\n                    if (tleString.indexOf(s) >= 0) tle.$tle.show();\r\n                })\r\n            })\r\n        })\r\n\r\n        let $dropZone = jQuery('.jo_databaseimport_dropzone');\r\n\r\n        $dropZone.on('dragover', (evt) => {\r\n            evt.stopPropagation();\r\n            evt.preventDefault();\r\n            evt.originalEvent.dataTransfer.dropEffect = 'copy';\r\n        })\r\n        $dropZone.on('drop', (evt) => {\r\n            evt.stopPropagation();\r\n            evt.preventDefault();\r\n\r\n            var files = evt.originalEvent.dataTransfer.files;\r\n            this.importFile(files);\r\n        })\r\n\r\n        let $dumpFileInput = jQuery('.jo_dumpfile');\r\n        $dumpFileInput.on('change', (event) => {\r\n            //@ts-ignore\r\n            var files: FileList = event.originalEvent.target.files;\r\n            this.importFile(files).then(() => {\r\n                $dumpFileInput.val(null);\r\n            });\r\n\r\n        })\r\n\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { this.showMainWindow(); });\r\n        jQuery('#jo_ds_create_database_button').on('click', () => {\r\n            let createMode: CreateMode = \"emptyDatabase\";\r\n            if (jQuery('.jo_createDatabaseFromTemplateTab').hasClass('jo_active')) createMode = \"fromTemplate\";\r\n            if (jQuery('.jo_createDatabaseUseExistingTab').hasClass('jo_active')) createMode = \"useExistingDatabase\";\r\n            if (jQuery('.jo_createDatabaseUseDumpFile').hasClass('jo_active')) createMode = \"useDumpFile\";\r\n\r\n            let workspaceData: CreateWorkspaceData = {\r\n                id: null,\r\n                isFolder: false,\r\n                name: <string>jQuery('.dialog-input.jo_databasename').val(),\r\n                path: this.path.join(\"/\"),\r\n            }\r\n\r\n            switch (createMode) {\r\n                case \"emptyDatabase\":\r\n                    this.createWorkspace(workspaceData);\r\n                    break;\r\n                case \"fromTemplate\":\r\n                    let $template = jQuery('.jo_templateListEntry.jo_active');\r\n                    if ($template.length != 1) {\r\n                        alert('Bitte wählen Sie genau eine Vorlage aus.');\r\n                        return;\r\n                    } else {\r\n                        workspaceData.template_database_id = $template.data('templateId');\r\n                        if (workspaceData.name == \"Neue Datenbank\") workspaceData.name = $template.data('name');\r\n                        this.createWorkspace(workspaceData);\r\n                    }\r\n                    break;\r\n                case \"useExistingDatabase\":\r\n                    let code = <string>jQuery('.jo_databasecodeinput').val();\r\n                    let tIndex = code.indexOf(\"T\");\r\n                    if (tIndex == -1) {\r\n                        alert(\"Der Zugriffscode muss das Zeichen T enthalten.\");\r\n                        return;\r\n                    }\r\n                    workspaceData.otherDatabaseId = Number.parseInt(code.substring(0, tIndex));\r\n                    workspaceData.secret = code.substring(tIndex + 1);\r\n                    this.createWorkspace(workspaceData);\r\n                    break;\r\n                case \"useDumpFile\":\r\n                    if (this.database != null) {\r\n                        new TemplateUploader().uploadCurrentDatabase(-1, this.main, this.database.binDump,\r\n                            \"uploadBaseTemplateForWorkspace\",\r\n                            (response) => {\r\n                            workspaceData.template_id = response.newTemplateId;\r\n                            this.createWorkspace(workspaceData);\r\n                        });\r\n\r\n                    } else {\r\n                        alert('Bitte laden Sie zuerst den Binärdump einer Datenbank hoch.')\r\n                        return;\r\n                    }\r\n                    break;\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    private createWorkspace(workspaceData: CreateWorkspaceData) {\r\n        this.main.networkManager.sendCreateWorkspace(workspaceData, this.owner_id, (error?: string) => {\r\n            if (error != null) { alert(error); return; }\r\n\r\n            let w = this.main.createNewWorkspace(workspaceData.name, this.owner_id);\r\n            w.path = workspaceData.path;\r\n            w.id = workspaceData.id;\r\n            w.sql_history = \"\";\r\n\r\n            let projectExplorer = this.main.projectExplorer;\r\n\r\n            this.main.workspaceList.push(w);\r\n            let accordionElement: AccordionElement = {\r\n                name: workspaceData.name,\r\n                externalElement: w,\r\n                iconClass: \"workspace\",\r\n                isFolder: false,\r\n                path: this.path\r\n            };\r\n\r\n            projectExplorer.workspaceListPanel.addElement(accordionElement, true);\r\n\r\n            w.renderSettingsButton(accordionElement);\r\n\r\n            projectExplorer.workspaceListPanel.sortElements();\r\n            projectExplorer.fileListPanel.sortElements();\r\n\r\n            projectExplorer.setWorkspaceActive(w);\r\n\r\n            this.showMainWindow();\r\n\r\n        });\r\n    }\r\n\r\n    async importFile(files: FileList) {\r\n        let that = this;\r\n        let importer = new DatabaseImportExport();\r\n        let db: LoadableDatabase = await importer.loadFromFile(files[0], this.main)\r\n        let isDatabase: boolean = false;\r\n        let dumpFileType = DatabaseTool.getDumpType(db.binDump);\r\n        if (dumpFileType == \"binaryCompressed\") {\r\n            // @ts-ignore\r\n            let dbUncompressed = pako.inflate(db.binDump);\r\n            if (DatabaseTool.getDumpType(dbUncompressed) == \"binaryUncompressed\") {\r\n                isDatabase = true;\r\n            }\r\n        } else if (DatabaseTool.getDumpType(db.binDump) == \"binaryUncompressed\") {\r\n            //@ts-ignore\r\n            db.binDump = pako.deflate(db.binDump);\r\n            isDatabase = true;\r\n        }\r\n\r\n        if (isDatabase) {\r\n            that.database = db;\r\n            jQuery('.jo_databaseimport_ok').html(\"Die Datenbankdatei wurde erfolgreich von Datei eingelesen. Sie können die Datenbank jetzt durch Klick auf den Button unten erstellen.\");\r\n        } else {\r\n            alert(\"In der Datei befindet sich kein Binärdump einer Datenbank.\");\r\n        }\r\n    }\r\n\r\n    showMainWindow() {\r\n        jQuery('#main').css('visibility', 'visible');\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n    }\r\n\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { PasswordChanger } from \"./UserMenu.js\";\r\nimport { DatabaseSettingsDialog } from \"./DatabaseSettingsDialog.js\";\r\nimport { DatabaseImportExport } from \"../../tools/DatabaseImportExport.js\";\r\nimport { NewDatabaseDialog } from \"./NewDatabaseDialog.js\";\r\n\r\nexport type Action = (identifier: string) => void;\r\n\r\ntype Menu = {\r\n    items: MenuItem[];\r\n    $element?: JQuery<HTMLElement>;\r\n    level?: number;\r\n}\r\n\r\ntype MenuItem = {\r\n    identifier: string;\r\n    $element?: JQuery<HTMLElement>;\r\n    action?: Action;\r\n    link?: string;\r\n    subMenu?: Menu;\r\n}\r\n\r\nexport class MainMenu {\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n\r\n    currentSubmenu: { [level: number]: JQuery<HTMLElement> } = {};\r\n    openSubmenusOnMousemove: boolean = false;\r\n\r\n    initGUI(user: UserData) {\r\n\r\n        let that = this;\r\n        let editor = this.main.getMonacoEditor();\r\n\r\n        let mainMenu: Menu = {\r\n            items: [\r\n                {\r\n                    identifier: \"Datei\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Speichern und Beenden\",\r\n                                action: () => { jQuery('#buttonLogout').trigger(\"click\"); }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Bearbeiten\", subMenu:\r\n                    {\r\n                        items: [\r\n                            { identifier: \"Rückgängig (Strg + z)\", action: () => { editor.trigger(\".\", \"undo\", {}); } },\r\n                            { identifier: \"Wiederholen (Strg + y)\", action: () => { editor.trigger(\".\", \"redo\", {}); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Kopieren (Strg + c)\", action: () => { editor.getAction(\"editor.action.clipboardCopyAction\").run(); } },\r\n                            { identifier: \"Ausschneiden (Strg + x)\", action: () => { editor.getAction(\"editor.action.clipboardCutAction\").run(); } },\r\n                            { identifier: \"Nach oben kopieren (Alt + Shift + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.copyLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten kopieren (Alt + Shift + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.copyLinesDownAction\").run(); } },\r\n                            { identifier: \"Nach oben verschieben (Alt + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.moveLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten verschieben (Alt + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.moveLinesDownAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Suchen... (Strg + f)\", action: () => { editor.getAction(\"actions.find\").run(); } },\r\n                            { identifier: \"Ersetzen... (Strg + h)\", action: () => { editor.getAction(\"editor.action.startFindReplaceAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Aus-/Einkommentieren (Strg + #)\", action: () => { editor.getAction(\"editor.action.commentLine\").run(); } },\r\n                            { identifier: \"Dokument formatieren (Alt + Shift + f)\", action: () => { editor.getAction(\"editor.action.formatDocument\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Finde zugehörige Klammer (Strg + k)\", action: () => { editor.getAction(\"editor.action.jumpToBracket\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Alles zusammenfalten\", action: () => { editor.getAction(\"editor.foldAll\").run(); } },\r\n                            { identifier: \"Alles auffalten\", action: () => { editor.getAction(\"editor.unfoldAll\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Vorschlag auslösen (Strg + Leertaste)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.triggerSuggest\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n                            { identifier: \"Parameterhilfe (Strg + Shift + Leertaste)\", action: () => { editor.getAction(\"editor.action.triggerParameterHints\").run(); } },\r\n                            {\r\n                                identifier: \"Gehe zur Definition (Strg + Click)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.revealDefinition\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Ansicht\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Theme\",\r\n                                subMenu: {\r\n                                    items: [\r\n                                        {\r\n                                            identifier: \"Dark\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"dark\");\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            identifier: \"Light\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"light\");\r\n                                            }\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Hoher Kontrast im Editor ein/aus\", action: () => { editor.getAction(\"editor.action.toggleHighContrast\").run(); } },\r\n\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Zoom out (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(-4); } },\r\n                            { identifier: \"Zoom normal\", action: () => { this.main.editor.setFontSize(14); } },\r\n                            { identifier: \"Zoom in (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(4); } },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Datenbank\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Neue Datenbank anlegen...\", action: () => {\r\n                                    let owner_id: number = that.main.user.id;\r\n                                    if (that.main.workspacesOwnerId != null) {\r\n                                        owner_id = that.main.workspacesOwnerId;\r\n                                    }\r\n\r\n                                    new NewDatabaseDialog(that.main, owner_id, []);\r\n                                }\r\n                            },\r\n                            { identifier: \"Einstellungen...\", action: () => { new DatabaseSettingsDialog(this.main, this.main.currentWorkspace) } },\r\n                            {\r\n                                identifier: \"Export als Binärdump (.sqLite-File)...\", action: () => {\r\n                                    new DatabaseImportExport().saveToFile(this.main.getDatabaseTool());\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n\r\n            ]\r\n        };\r\n\r\n        jQuery('#mainmenu').empty();\r\n        this.initMenu(mainMenu, 0);\r\n    }\r\n\r\n    switchTheme(theme: string) {\r\n        this.main.viewModeController.setTheme(theme);\r\n    }\r\n\r\n    initMenu(menu: Menu, level?: number) {\r\n\r\n        menu.level = level;\r\n\r\n        if (level == 0) {\r\n            menu.$element = jQuery('#mainmenu');\r\n        } else {\r\n            menu.$element = jQuery('<div class=\"jo_submenu\"></div>');\r\n            jQuery('body').append(menu.$element);\r\n        }\r\n\r\n        menu.$element.data('model', menu);\r\n        for (let mi of menu.items) {\r\n            if (mi.identifier == '-') {\r\n                mi.$element = jQuery('<div class=\"jo_menuitemdivider\"></div>');\r\n            } else {\r\n                mi.$element = jQuery('<div>' + mi.identifier + '</div>');\r\n                if (mi.link != null) {\r\n                    let $link = jQuery('<a href=\"' + mi.link + '\" target=\"_blank\" class=\"jo_menulink\"></a>');\r\n                    $link.on(\"mousedown\", (event) => {\r\n                        event.stopPropagation();\r\n                        setTimeout(() => {\r\n                            menu.$element.hide();\r\n                        }, 500);\r\n                    })\r\n                    $link.append(mi.$element);\r\n                    mi.$element = $link;\r\n                }\r\n                if (mi.subMenu != null) {\r\n                    this.initMenu(mi.subMenu, level + 1);\r\n                }\r\n                this.initMenuitemCallbacks(menu, mi);\r\n                if (level == 0) {\r\n                    mi.$element.addClass('jo_mainmenuitem');\r\n                }\r\n            }\r\n            menu.$element.append(mi.$element);\r\n            mi.$element.data('model', mi);\r\n        }\r\n\r\n        let that = this;\r\n        jQuery(document).on('mousedown', () => {\r\n            for (let i = 0; i < 5; i++) {\r\n                if (that.currentSubmenu[i] != null) {\r\n                    that.currentSubmenu[i].hide();\r\n                    that.currentSubmenu[i] = null;\r\n                }\r\n            }\r\n            that.openSubmenusOnMousemove = false;\r\n        });\r\n\r\n    }\r\n\r\n    initMenuitemCallbacks(menu: Menu, mi: MenuItem) {\r\n        let that = this;\r\n\r\n        if (mi.action != null) {\r\n            mi.$element.on('mousedown', (ev) => { mi.action(mi.identifier); });\r\n        }\r\n\r\n        if (mi.subMenu != null) {\r\n            mi.$element.on('mousedown', (ev) => {\r\n                that.opensubmenu(mi);\r\n                that.openSubmenusOnMousemove = true;\r\n                ev.stopPropagation();\r\n            });\r\n\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.openSubmenusOnMousemove) {\r\n                    that.opensubmenu(mi);\r\n                } else {\r\n                    if (that.currentSubmenu[menu.level + 1] != null) {\r\n                        that.currentSubmenu[menu.level + 1].hide();\r\n                        that.currentSubmenu[menu.level + 1] = null;\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.currentSubmenu[menu.level + 1] != null) {\r\n                    that.currentSubmenu[menu.level + 1].hide();\r\n                    that.currentSubmenu[menu.level + 1] = null;\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    opensubmenu(mi: MenuItem) {\r\n\r\n        let subMenu = mi.subMenu;\r\n\r\n        let left: number;\r\n        let top: number;\r\n        if (subMenu.level == 1) {\r\n            left = mi.$element.position().left;\r\n            top = 30;\r\n        } else {\r\n            left = mi.$element.offset().left + mi.$element.width();\r\n            top = mi.$element.offset().top;\r\n        }\r\n\r\n        subMenu.$element.css({\r\n            top: \"\" + top + \"px\",\r\n            left: \"\" + left + \"px\"\r\n        })\r\n\r\n        if (this.currentSubmenu[subMenu.level] != null) {\r\n            this.currentSubmenu[subMenu.level].hide();\r\n        }\r\n\r\n        subMenu.$element.show();\r\n        this.currentSubmenu[subMenu.level] = subMenu.$element;\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { openContextMenu, makeEditable, ContextMenuItem, animateToTransparent, jo_mouseDetected } from \"../../tools/HtmlTools.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { escapeHtml } from \"../../tools/StringTools.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type AccordionElement = {\r\n    name: string;\r\n    sortName?: string;      // if sortName == null, then name will be used when sorting\r\n    externalElement?: any;\r\n    iconClass?: string;\r\n    $htmlFirstLine?: JQuery<HTMLElement>;\r\n    $htmlSecondLine?: JQuery<HTMLElement>;\r\n\r\n    isFolder: boolean;\r\n    path: string[];\r\n}\r\n\r\nexport type AccordionContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: (panel: AccordionElement) => void;\r\n    subMenu?: AccordionContextMenuItem[]\r\n}\r\n\r\nexport class AccordionPanel {\r\n\r\n    elements: AccordionElement[] = [];\r\n\r\n    $captionElement: JQuery<HTMLElement>;\r\n    $buttonNew: JQuery<HTMLElement>;\r\n    $listElement: JQuery<HTMLElement>;\r\n\r\n    private fixed: boolean;\r\n\r\n    dontSortElements: boolean = false;\r\n\r\n    static currentlyDraggedElement: AccordionElement;\r\n    static currentlyDraggedElementKind: string;\r\n\r\n    newFilesElementCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    newDatabaseElementCallback: (path: string[]) => void;\r\n    newFolderCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    renameCallback: (externalElement: any, newName: string) => string;\r\n    deleteCallback: (externalElement: any, callbackIfSuccessful: () => void) => void;\r\n    selectCallback: (externalElement: any) => void;\r\n    addElementActionCallback: (accordionElement: AccordionElement) => JQuery<HTMLElement>;\r\n    contextMenuProvider: (externalElement: any) => AccordionContextMenuItem[];\r\n    moveCallback: (ae: AccordionElement | AccordionElement[]) => void;\r\n    dropElementCallback: (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => void;\r\n\r\n    $newFolderAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private accordion: Accordion, private caption: string, private flexWeight: string,\r\n        private newButtonClass: string, private buttonNewTitle: string,\r\n        private defaultIconClass: string, private withDeleteButton: boolean, private withFolders: boolean,\r\n        private kind: \"workspace\" | \"file\" | \"class\" | \"student\", private enableDrag: boolean, private acceptDropKinds: string[]) {\r\n\r\n        accordion.addPanel(this);\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        if (withFolders) {\r\n            let that = this;\r\n            this.$newFolderAction = jQuery('<div class=\"img_add-folder-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Neuen Ordner auf oberster Ebene anlegen\">');\r\n            this.$newFolderAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                let pathArray: string[] = [];\r\n\r\n                this.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                    this.newFolderCallback(newElement, () => {\r\n                        this.sortElements();\r\n                        newElement.$htmlFirstLine[0].scrollIntoView();\r\n                        animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                    });\r\n                });\r\n\r\n            })\r\n\r\n            this.addAction(this.$newFolderAction);\r\n\r\n\r\n            let $collapseAllAction = jQuery('<div class=\"img_collapse-all-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Alle Ordner zusammenfalten\">');\r\n            $collapseAllAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                that.collapseAll();\r\n\r\n            })\r\n\r\n            this.addAction($collapseAllAction);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    collapseAll() {\r\n        for (let element of this.elements) {\r\n            if (element.isFolder) {\r\n                if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                    element.$htmlFirstLine.removeClass('jo_expanded');\r\n                    element.$htmlFirstLine.addClass('jo_collapsed');\r\n                }\r\n            }\r\n            if (element.path.length > 0) {\r\n                element.$htmlFirstLine.slideUp(200);\r\n            }\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        this.$captionElement.remove();\r\n        this.$listElement.remove();\r\n    }\r\n\r\n    setFixed(fixed: boolean) {\r\n        this.fixed = fixed;\r\n        if (this.fixed) {\r\n            this.grow();\r\n            this.$captionElement.addClass('jo_fixed');\r\n        } else {\r\n            this.$captionElement.removeClass('jo_fixed');\r\n        }\r\n\r\n    }\r\n\r\n    //     <div class=\"jo_leftpanelcaption expanded\" id=\"workspace\" data-panel=\"filelistouter\">\r\n    //     <span>WORKSPACE</span>\r\n    //     <div class=\"jo_actions\"><img id=\"buttonNewFile\" title=\"Neue Datei hinzufügen\"\r\n    //             src=\"assets/projectexplorer/add-file-dark.svg\"></div>\r\n    // </div>\r\n    // <div id=\"filelistouter\" class=\"jo_projectexplorerdiv scrollable\" data-grow=\"3\"\r\n    //     style=\"flex-grow: 3\">\r\n    //     <div id=\"filelist\"></div>\r\n    // </div>\r\n\r\n\r\n    enableNewButton(enabled: boolean) {\r\n        if (this.$buttonNew != null) {\r\n            if (enabled) {\r\n                this.$buttonNew.show();\r\n            } else {\r\n                this.$buttonNew.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    getCurrentlySelectedPath(): string[] {\r\n        let pathArray: string[] = [];\r\n        let selectedElement = this.getSelectedElement();\r\n        if (selectedElement != null) {\r\n            pathArray = selectedElement.path.slice(0);\r\n            if (selectedElement.isFolder) pathArray.push(selectedElement.name);\r\n        }\r\n        return pathArray;\r\n    }\r\n\r\n    compareWithPath(name1: string, path1: string[], isFolder1: boolean, name2: string, path2: string[], isFolder2: boolean) {\r\n\r\n        path1 = path1.slice();\r\n        path1.push(name1);\r\n        name1 = \"\";\r\n\r\n        path2 = path2.slice();\r\n        path2.push(name2);\r\n        name2 = \"\";\r\n\r\n        let i = 0;\r\n        while (i < path1.length && i < path2.length) {\r\n            let cmp = path1[i].localeCompare(path2[i]);\r\n            if (cmp != 0) return cmp;\r\n            i++;\r\n        }\r\n\r\n        if (path1.length < path2.length) return -1;\r\n        if (path1.length > path2.length) return 1;\r\n\r\n        return name1.localeCompare(name2);\r\n\r\n\r\n        // let nameWithPath1 = path1.join(\"/\");\r\n        // if (nameWithPath1 != \"\" && name1 != \"\") nameWithPath1 += \"/\";\r\n        // nameWithPath1 += name1;\r\n\r\n        // let nameWithPath2 = path2.join(\"/\");\r\n        // if (nameWithPath2 != \"\" && name2 != \"\") nameWithPath2 += \"/\";\r\n        // nameWithPath2 += name2;\r\n\r\n        // return nameWithPath1.localeCompare(nameWithPath2);\r\n    }\r\n\r\n\r\n    getElementIndex(name: string, path: string[], isFolder: boolean): number {\r\n\r\n        for (let i = 0; i < this.elements.length; i++) {\r\n            let element = this.elements[i];\r\n\r\n            if (this.compareWithPath(name, path, isFolder, element.name, element.path, element.isFolder) < 0) return i;\r\n\r\n        }\r\n        return this.elements.length;\r\n    }\r\n\r\n    insertElement(ae: AccordionElement) {\r\n        let insertIndex = this.getElementIndex(ae.name, ae.path, ae.isFolder);\r\n        // if (ae.path.length == 0) insertIndex = this.elements.length;\r\n        this.elements.splice(insertIndex, 0, ae);\r\n\r\n        let $elements = this.$listElement.find('.jo_file');\r\n\r\n        if (insertIndex == 0) {\r\n            this.$listElement.prepend(ae.$htmlFirstLine);\r\n        } else if(insertIndex == $elements.length){\r\n            this.$listElement.append(ae.$htmlFirstLine);\r\n        } else {\r\n            let elementAtIndex = $elements.get(insertIndex);\r\n            jQuery(elementAtIndex).before(ae.$htmlFirstLine);\r\n        }\r\n\r\n    }\r\n\r\n    addFolder(name: string, path: string[], callback: (newPanel: AccordionElement) => void) {\r\n\r\n        let ae: AccordionElement = {\r\n            name: name,\r\n            isFolder: true,\r\n            path: path\r\n        }\r\n\r\n        let $element = this.renderElement(ae, true);\r\n\r\n        this.insertElement(ae);\r\n\r\n        $element[0].scrollIntoView();\r\n\r\n        this.renameElement(ae, () => {\r\n\r\n            callback(ae);\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    renderOuterHtmlElements($accordionDiv: JQuery<HTMLElement>) {\r\n        let that = this;\r\n\r\n        this.$captionElement = jQuery(`<div class=\"jo_leftpanelcaption jo_expanded\">\r\n        <div class=\"jo_captiontext\">` + this.caption + `</div><div class=\"jo_actions\"></div></div>`);\r\n\r\n        if (this.newButtonClass != null) {\r\n            this.$buttonNew = jQuery('<div class=\"jo_button jo_active ' + this.newButtonClass + '\" title=\"' + this.buttonNewTitle + '\">');\r\n            this.$captionElement.find('.jo_actions').append(this.$buttonNew);\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n            this.$buttonNew.on(mousePointer + 'down', (ev) => {\r\n\r\n                Helper.close();\r\n                ev.stopPropagation();\r\n\r\n                let path = that.getCurrentlySelectedPath();\r\n\r\n                let ae: AccordionElement = {\r\n                    name: \"Neu\",\r\n                    isFolder: false,\r\n                    path: path\r\n                }\r\n\r\n                let insertIndex = this.getElementIndex(\"\", path, false);\r\n                this.elements.splice(insertIndex, 0, ae);\r\n                let $element = this.renderElement(ae, true);\r\n\r\n\r\n                if (insertIndex == 0) {\r\n                    this.$listElement.prepend($element);\r\n                } else {\r\n                    let elementAtIndex = this.$listElement.find('.jo_file').get(insertIndex - 1);\r\n                    jQuery(elementAtIndex).after($element);\r\n                }\r\n\r\n                $element[0].scrollIntoView();\r\n\r\n                that.renameElement(ae, () => {\r\n\r\n                    that.newFilesElementCallback(ae, (externalElement: any) => {\r\n\r\n                        ae.externalElement = externalElement;\r\n\r\n                        if (ae.$htmlSecondLine != null) {\r\n                            ae.$htmlSecondLine.insertAfter($element);\r\n                        }\r\n\r\n                        if (that.selectCallback != null) that.select(ae.externalElement);\r\n\r\n                    });\r\n\r\n                });\r\n\r\n            });\r\n\r\n        }\r\n\r\n        let $listOuter = jQuery('<div id=\"filelistouter\" class=\"jo_projectexplorerdiv jo_scrollable\" data-grow=\"'\r\n            + this.flexWeight + '\" style=\"flex-grow: ' + this.flexWeight + '\"></div>');\r\n        this.$listElement = jQuery('<div class=\"jo_filelist\"></div>')\r\n\r\n        $listOuter.append(this.$listElement);\r\n\r\n        $accordionDiv.append(this.$captionElement);\r\n        $accordionDiv.append($listOuter);\r\n\r\n        let $ce = this.$captionElement;\r\n        let $li = this.$listElement.parent();\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $ce.on(mousePointer + 'down', (ev) => {\r\n            if (ev.button != 0) {\r\n                return;\r\n            }\r\n\r\n            if (!this.fixed) {\r\n                let targetGrow = $li.data('grow');\r\n                if ($ce.hasClass('jo_expanded')) {\r\n                    if (that.accordion.parts.length > 1) {\r\n                        $li.animate({\r\n                            'flex-grow': 0.001\r\n                        }, 1000, () => { $ce.toggleClass('jo_expanded'); });\r\n                    }\r\n                } else {\r\n                    $ce.toggleClass('jo_expanded');\r\n                    $li.animate({\r\n                        'flex-grow': targetGrow\r\n                    }, 1000);\r\n                }\r\n            }\r\n        });\r\n\r\n        $ce.on('dragover', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                $ce.addClass('jo_file_dragover');\r\n                event.preventDefault();\r\n            }\r\n        })\r\n\r\n        $ce.on('dragleave', (event) => {\r\n            $ce.removeClass('jo_file_dragover');\r\n        })\r\n\r\n        $ce.on('drop', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                event.preventDefault();\r\n                $ce.removeClass('jo_file_dragover');\r\n                let element1 = AccordionPanel.currentlyDraggedElement;\r\n                if (element1 != null) {\r\n                    that.moveElement(element1, null);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    grow() {\r\n        let $li = this.$listElement.parent();\r\n        let targetGrow = $li.data('grow');\r\n        $li.css('flex-grow', targetGrow);\r\n        this.$captionElement.addClass('jo_expanded');\r\n    }\r\n\r\n    addElement(element: AccordionElement, expanded: boolean) {\r\n        // this.elements.push(element);\r\n        // element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        // this.$listElement.prepend(element.$htmlFirstLine);\r\n        element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        this.insertElement(element);\r\n    }\r\n\r\n    sortElements() {\r\n        if (this.dontSortElements) return;\r\n        this.elements.sort((a, b) => {\r\n            let aName = a.sortName ? a.sortName : a.name;\r\n            let bName = b.sortName ? b.sortName : b.name;\r\n\r\n            return this.compareWithPath(aName, a.path, a.isFolder, bName, b.path, b.isFolder);\r\n\r\n        });\r\n        this.elements.forEach((element) => { this.$listElement.append(element.$htmlFirstLine) });\r\n    }\r\n\r\n    setTextAfterFilename(element: AccordionElement, text: string, cssClass: string) {\r\n        if(element == null) return;\r\n        let $div = element.$htmlFirstLine.find('.jo_textAfterName');\r\n        $div.addClass(cssClass);\r\n        $div.html(text);\r\n    }\r\n\r\n    addAction($element: JQuery<HTMLElement>) {\r\n        this.$captionElement.find('.jo_actions').prepend($element);\r\n    }\r\n\r\n    renderElement(element: AccordionElement, expanded: boolean): JQuery<HTMLElement> {\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        let that = this;\r\n\r\n        let expandedCollapsed = \"\";\r\n\r\n        if (element.iconClass == null) element.iconClass = this.defaultIconClass;\r\n        if (element.isFolder) {\r\n            element.iconClass = \"folder\";\r\n            expandedCollapsed = expanded ? \" jo_expanded\" : \" jo_collapsed\";\r\n        }\r\n\r\n        let pathHtml = \"\";\r\n        if (element.path == null) element.path = [];\r\n        for (let i = 0; i < element.path.length; i++) {\r\n            pathHtml += '<div class=\"jo_folderline\"></div>';\r\n        }\r\n\r\n        element.$htmlFirstLine = jQuery(`<div class=\"jo_file jo_${element.iconClass} ${expandedCollapsed}\">\r\n        <div class=\"jo_folderlines\">${pathHtml}</div>\r\n           <div class=\"jo_fileimage\"></div>\r\n           <div class=\"jo_filename\">${escapeHtml(element.name)}</div>\r\n           <div class=\"jo_textAfterName\"></div>\r\n           <div class=\"jo_additionalButtonSettings\"></div>\r\n           ${this.withDeleteButton ? '<div class=\"jo_delete img_delete jo_button jo_active' + (false ? \" jo_delete_always\" : \"\") + '\"></div>' : \"\"}\r\n           ${!jo_mouseDetected ? '<div class=\"jo_settings_button img_ellipsis-dark jo_button jo_active\"></div>' : \"\"}\r\n           </div>`);\r\n\r\n        if (!expanded && element.path.length > 0) {\r\n            element.$htmlFirstLine.hide();\r\n        }\r\n\r\n        if (this.addElementActionCallback != null) {\r\n            let $elementAction = this.addElementActionCallback(element);\r\n            element.$htmlFirstLine.append($elementAction);\r\n        }\r\n\r\n        if (this.withFolders) {\r\n            if (element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            that.moveElement(element1, element);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withFolders || this.enableDrag) {\r\n            let $filedragpart = element.$htmlFirstLine.find('.jo_filename');\r\n            $filedragpart.attr('draggable', 'true');\r\n            $filedragpart.on('dragstart', (event) => {\r\n                AccordionPanel.currentlyDraggedElement = element;\r\n                AccordionPanel.currentlyDraggedElementKind = that.kind;\r\n                event.originalEvent.dataTransfer.effectAllowed = element.isFolder ? \"move\" : \"copyMove\";\r\n            })\r\n        }\r\n\r\n        if (this.acceptDropKinds != null && this.acceptDropKinds.length > 0) {\r\n            if (!element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n\r\n                        if (event.ctrlKey) {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"copy\";\r\n                        } else {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"move\";\r\n                        }\r\n\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            if (that.dropElementCallback != null) that.dropElementCallback(element, element1, event.ctrlKey ? \"copy\" : \"move\");\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        element.$htmlFirstLine.on(mousePointer + 'up', (ev) => {\r\n\r\n            if (ev.button == 0 && that.selectCallback != null) {\r\n                that.selectCallback(element.externalElement);\r\n\r\n                for (let ae of that.elements) {\r\n                    if (ae != element && ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                        ae.$htmlFirstLine.removeClass('jo_active');\r\n                    }\r\n                }\r\n\r\n                element.$htmlFirstLine.addClass('jo_active');\r\n\r\n                if (element.isFolder) {\r\n\r\n                    if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                        element.$htmlFirstLine.removeClass('jo_expanded');\r\n                        element.$htmlFirstLine.addClass('jo_collapsed');\r\n                    } else {\r\n                        element.$htmlFirstLine.addClass('jo_expanded');\r\n                        element.$htmlFirstLine.removeClass('jo_collapsed');\r\n                    }\r\n\r\n                    let pathIsCollapsed: { [path: string]: boolean } = {};\r\n                    for (let e of this.elements) {\r\n                        if (e.isFolder) {\r\n                            let path = e.path.join(\"/\");\r\n                            if (path != \"\") path += \"/\";\r\n                            path += e.name;\r\n                            pathIsCollapsed[path] = e.$htmlFirstLine.hasClass('jo_collapsed');\r\n                            if (pathIsCollapsed[e.path.join(\"/\")]) pathIsCollapsed[path] = true;\r\n                        }\r\n                    }\r\n                    pathIsCollapsed[\"\"] = false;\r\n\r\n                    for (let e of this.elements) {\r\n                        if (pathIsCollapsed[e.path.join(\"/\")]) {\r\n                            e.$htmlFirstLine.slideUp(200);\r\n                        } else {\r\n                            e.$htmlFirstLine.slideDown(200);\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n\r\n        let contextmenuHandler = function (event) {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [];\r\n            if (that.renameCallback != null) {\r\n                contextMenuItems.push({\r\n                    caption: \"Umbenennen\",\r\n                    callback: () => {\r\n                        that.renameElement(element);\r\n                    }\r\n                })\r\n            }\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n            if (element.isFolder) {\r\n                contextMenuItems = contextMenuItems.concat([\r\n                    {\r\n                        caption: \"Neuen Unterordner anlegen (unterhalb '\" + element.name + \"')...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            // that.$newFolderAction.trigger(mousePointer + 'down');\r\n                            let pathArray = that.getCurrentlySelectedPath();\r\n\r\n                            that.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                                that.newFolderCallback(newElement, () => {\r\n                                    that.sortElements();\r\n                                    newElement.$htmlFirstLine[0].scrollIntoView();\r\n                                    animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                                });\r\n                            });\r\n\r\n                        }\r\n                    }, {\r\n                        caption: \"Neue Datenbank...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n\r\n                            that.newDatabaseElementCallback(element.path.concat(element.name));\r\n\r\n                        }\r\n                    }\r\n                ])\r\n            }\r\n\r\n\r\n            if (that.contextMenuProvider != null && !element.isFolder) {\r\n\r\n                for (let cmi of that.contextMenuProvider(element)) {\r\n                    contextMenuItems.push({\r\n                        caption: cmi.caption,\r\n                        callback: () => {\r\n                            cmi.callback(element);\r\n                        },\r\n                        color: cmi.color,\r\n                        subMenu: cmi.subMenu == null ? null : cmi.subMenu.map((mi) => {\r\n                            return {\r\n                                caption: mi.caption,\r\n                                callback: () => {\r\n                                    mi.callback(element);\r\n                                },\r\n                                color: mi.color\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n\r\n            if (contextMenuItems.length > 0) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                openContextMenu(contextMenuItems, event.pageX, event.pageY);\r\n            }\r\n        };\r\n\r\n        element.$htmlFirstLine[0].addEventListener(\"contextmenu\", contextmenuHandler, false);\r\n\r\n        // long press for touch devices\r\n        let pressTimer: number;\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.on('pointerup', () => {\r\n                clearTimeout(pressTimer);\r\n                return false;\r\n            }).on('pointerdown', (event) => {\r\n                pressTimer = window.setTimeout(() => {\r\n                    contextmenuHandler(event);\r\n                }, 500);\r\n                return false;\r\n            });\r\n        }\r\n\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('pointerdown', (e) => {\r\n                contextmenuHandler(e);\r\n            });\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('mousedown click', (e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            });\r\n        }\r\n\r\n        if (that.withDeleteButton) {\r\n            element.$htmlFirstLine.find('.jo_delete').on(mousePointer + 'up', (ev) => {\r\n                ev.preventDefault();\r\n                openContextMenu([{\r\n                    caption: \"Abbrechen\",\r\n                    callback: () => {\r\n                        // nothing to do.\r\n                    }\r\n                }, {\r\n                    caption: \"Ich bin mir sicher: löschen!\",\r\n                    color: \"#ff6060\",\r\n                    callback: () => {\r\n\r\n                        if (element.isFolder) {\r\n                            if (that.getChildElements(element).length > 0) {\r\n                                alert('Dieser Ordner kann nicht gelöscht werden, da er nicht leer ist.');\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        that.deleteCallback(element.externalElement, () => {\r\n                            element.$htmlFirstLine.remove();\r\n                            if (element.$htmlSecondLine != null) element.$htmlSecondLine.remove();\r\n                            that.elements.splice(that.elements.indexOf(element), 1);\r\n\r\n                            if (that.selectCallback != null) {\r\n                                if (that.elements.length > 0) {\r\n                                    that.select(that.elements[0].externalElement);\r\n                                } else {\r\n                                    that.select(null);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }], ev.pageX + 2, ev.pageY + 2);\r\n                ev.stopPropagation();\r\n            });\r\n        }\r\n\r\n        return element.$htmlFirstLine;\r\n\r\n    }\r\n\r\n    moveElement(elementToMove: AccordionElement, destinationFolder: AccordionElement) {\r\n        let destinationPath: string[] = destinationFolder == null ? [] : destinationFolder.path.slice(0).concat([destinationFolder.name]);\r\n        if (elementToMove.isFolder) {\r\n            let movedElements: AccordionElement[] = [elementToMove];\r\n\r\n            let sourcePath = elementToMove.path.concat([elementToMove.name]).join(\"/\");\r\n\r\n            if(destinationPath.join('/').indexOf(sourcePath) == 0) return;\r\n\r\n            let oldPathLength = elementToMove.path.length;\r\n            elementToMove.path = destinationPath.slice(0);\r\n\r\n            for (let element of this.elements) {\r\n                if (element.path.join(\"/\").startsWith(sourcePath)) {\r\n                    element.path.splice(0, oldPathLength);\r\n                    element.path = destinationPath.concat(element.path);\r\n                    movedElements.push(element);\r\n                }\r\n            }\r\n\r\n            for (let el of movedElements) {\r\n                el.$htmlFirstLine.remove();\r\n                this.elements.splice(this.elements.indexOf(el), 1);\r\n            }\r\n            for (let el of movedElements) {\r\n                this.renderElement(el, true);\r\n                this.insertElement(el);\r\n            }\r\n\r\n            this.moveCallback(movedElements);\r\n        } else {\r\n            elementToMove.path = destinationPath;\r\n            elementToMove.$htmlFirstLine.remove();\r\n            this.elements.splice(this.elements.indexOf(elementToMove), 1);\r\n            this.renderElement(elementToMove, true);\r\n            this.insertElement(elementToMove);\r\n            this.select(elementToMove.externalElement);\r\n            elementToMove.$htmlFirstLine[0].scrollIntoView();\r\n            this.moveCallback(elementToMove);\r\n        }\r\n    }\r\n\r\n    getChildElements(folder: AccordionElement): AccordionElement[] {\r\n        let path = folder.path.slice(0).concat(folder.name).join(\"/\");\r\n        return this.elements.filter((element) => element.path.join(\"/\").startsWith(path));\r\n    }\r\n\r\n    renameElement(element: AccordionElement, callback?: () => void) {\r\n        let that = this;\r\n        let $div = element.$htmlFirstLine.find('.jo_filename');\r\n        let pointPos = element.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        this.dontSortElements = true;\r\n        makeEditable($div, $div, (newText: string) => {\r\n            if (element.externalElement != null) newText = that.renameCallback(element.externalElement, newText);\r\n            element.name = newText;\r\n            $div.html(element.name);\r\n            if (callback != null) callback();\r\n            that.sortElements();\r\n            $div[0].scrollIntoView();\r\n            this.dontSortElements = false;\r\n        }, selection);\r\n    }\r\n\r\n    select(externalElement: any, invokeCallback: boolean = true, scrollIntoView: boolean = false) {\r\n\r\n        if (externalElement == null) {\r\n            for (let ae1 of this.elements) {\r\n                if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n            }\r\n        } else {\r\n            let ae = this.findElement(externalElement);\r\n\r\n            if (ae != null) {\r\n                for (let ae1 of this.elements) {\r\n                    if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n                }\r\n\r\n                ae.$htmlFirstLine.addClass('jo_active');\r\n                if (scrollIntoView) {\r\n                    let pathString = ae.path.join(\"/\");\r\n                    for (let el of this.elements) {\r\n                        let elPath = el.path.slice(0);\r\n                        if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                            if (el.isFolder) {\r\n                                elPath.push(el.name);\r\n                                if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                                    el.$htmlFirstLine.removeClass(\"jo_collapsed\");\r\n                                    el.$htmlFirstLine.addClass(\"jo_expanded\");\r\n                                }\r\n                            }\r\n                            el.$htmlFirstLine.show();\r\n                        }\r\n\r\n                    }\r\n\r\n                    ae.$htmlFirstLine[0].scrollIntoView();\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (invokeCallback && this.selectCallback != null) this.selectCallback(externalElement);\r\n\r\n    }\r\n\r\n    getPathString(ae: AccordionElement) {\r\n        let ps: string = ae.path.join(\"/\");\r\n        if (ae.isFolder) {\r\n            if (ps != \"\") ps += \"/\";\r\n            ps += ae.name;\r\n        }\r\n        return ps;\r\n    }\r\n\r\n    setElementClass(element: AccordionElement, iconClass: string) {\r\n        if (element != null) {\r\n            element.$htmlFirstLine?.removeClass(\"jo_\" + element.iconClass).addClass(\"jo_\" + iconClass);\r\n            element.iconClass = iconClass;\r\n        }\r\n\r\n    }\r\n\r\n    findElement(externalElement: any): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                return ae;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    removeElement(externalElement: any) {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                ae.$htmlFirstLine.remove();\r\n                if (ae.$htmlSecondLine != null) ae.$htmlSecondLine.remove();\r\n                this.elements.splice(this.elements.indexOf(ae), 1);\r\n\r\n                if (this.selectCallback != null) {\r\n                    if (this.elements.length > 0) {\r\n                        this.select(this.elements[0].externalElement);\r\n                    } else {\r\n                        this.select(null);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.$listElement.empty();\r\n        this.elements = [];\r\n    }\r\n\r\n    setCaption(text: string) {\r\n        this.$captionElement.find('.jo_captiontext').html(text);\r\n    }\r\n\r\n    getSelectedElement(): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                return ae;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class Accordion {\r\n\r\n    parts: AccordionPanel[] = [];\r\n    $html: JQuery<HTMLElement>;\r\n\r\n    constructor(public main: MainBase, $html: JQuery<HTMLElement>) {\r\n        this.$html = $html;\r\n        $html.addClass('jo_leftpanelinner');\r\n    }\r\n\r\n    addPanel(panel: AccordionPanel) {\r\n        panel.renderOuterHtmlElements(this.$html);\r\n        this.parts.push(panel);\r\n    }\r\n\r\n}","import { ClassData, UserData } from \"../../communication/Data.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { isEmptyObject } from \"jquery\";\r\n\r\nexport class DistributeToStudentsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n    studentCount: number = 0;\r\n\r\n    constructor(private classes: ClassData[], private workspace: Workspace, private main: Main){\r\n        this.init();\r\n    }\r\n\r\n    private init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Austeilen eines Workspace an einzelne Schüler/innen</div>\r\n             <div class=\"jo_ds_settings\">\r\n                <div class=\"jo_ds_settings_caption\">Workspace:</div><div class=\"jo_ds_workspacename\">${this.workspace.name}</div>\r\n                <div class=\"jo_ds_settings_caption\">Liste filtern:</div><div class=\"jo_ds_filterdiv\"><input class=\"dialog-input\"></input></div>\r\n             </div>\r\n             <div class=\"jo_ds_student_list jo_scrollable\">\r\n             </div>\r\n             <div class=\"jo_ds_selected_message\"></div>\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_distribute_button\">Austeilen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        let $studentList = jQuery('.jo_ds_student_list');\r\n        let that = this;\r\n\r\n        for(let klass of this.classes){\r\n            for(let student of klass.students){\r\n                let $studentLine = jQuery('<div class=\"jo_ds_student_line\">');\r\n                let $studentClass = jQuery(`<div class=\"jo_ds_student_class\">${klass.name}</div>`);                \r\n                let $studentName = jQuery(`<div class=\"jo_ds_student_name\">${student.rufname} ${student.familienname}</div>`);\r\n                $studentLine.append($studentClass, $studentName);\r\n                $studentList.append($studentLine);\r\n                $studentLine.on('mousedown', () => {\r\n                    $studentLine.toggleClass('jo_active');\r\n                     that.studentCount += $studentLine.hasClass('jo_active') ? 1 : -1;\r\n                     jQuery('.jo_ds_selected_message').text(`${that.studentCount} Schüler/inn/en selektiert`);\r\n                });\r\n                $studentLine.data('student', student);\r\n                $studentLine.data('klass', klass);\r\n            }\r\n        }\r\n\r\n        jQuery('.jo_ds_filterdiv>input').on('input', () => {\r\n            let filterText = <string>jQuery('.jo_ds_filterdiv>input').val();\r\n            if(filterText == null || filterText == \"\"){\r\n                $('.jo_ds_student_line').show();\r\n            } else {\r\n                $('.jo_ds_student_line').each((index, element) => {\r\n                    let $element = jQuery(element);\r\n                    let klass:ClassData = $element.data('klass');\r\n                    let student: UserData = $element.data('student');\r\n                    let text = klass.name + \" \" + student.rufname + \" \" + student.familienname;\r\n                    if(text.indexOf(filterText) >= 0){\r\n                        $element.show();\r\n                    } else {\r\n                        $element.hide();\r\n                    }\r\n                });\r\n\r\n            }\r\n            \r\n        });\r\n\r\n\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { that.close() });\r\n        jQuery('#jo_ds_distribute_button').on('click', () => {that.distributeWorkspace();});\r\n\r\n    }\r\n\r\n    distributeWorkspace() {\r\n\r\n        let student_ids: number[] = [];\r\n        $('.jo_ds_student_line').each((index, element) => {\r\n            let $element = jQuery(element);\r\n            if($element.hasClass('jo_active')){\r\n                let student: UserData = $element.data('student');\r\n                student_ids.push(student.id);\r\n            }\r\n        });\r\n\r\n        this.close();\r\n\r\n        this.main.networkManager.sendDistributeWorkspace(this.workspace, null, student_ids, (error: string) => {\r\n            if (error == null) {\r\n                let networkManager = this.main.networkManager;\r\n                let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                alert(`Der Workspace ${this.workspace.name} wurde an ${student_ids.length} Schüler/innen ausgeteilt. Er wird in maximal ${dt} s bei jedem Schüler ankommen.`);\r\n            } else {\r\n                alert(error);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n    \r\n\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionPanel, Accordion, AccordionElement, AccordionContextMenuItem } from \"./Accordion.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { WorkspaceData, Workspaces, ClassData, CreateWorkspaceData } from \"../../communication/Data.js\";\r\nimport { dateToString } from \"../../tools/StringTools.js\";\r\nimport { DistributeToStudentsDialog } from \"./DistributeToStudentsDialog.js\";\r\nimport { NewDatabaseDialog } from \"./NewDatabaseDialog.js\";\r\n\r\n\r\nexport class ProjectExplorer {\r\n\r\n    programPointerModule: Module = null;\r\n    programPointerPosition: TextPosition;\r\n    programPointerDecoration: string[] = [];\r\n\r\n    accordion: Accordion;\r\n    fileListPanel: AccordionPanel;\r\n    workspaceListPanel: AccordionPanel;\r\n\r\n    $homeAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private $projectexplorerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.accordion = new Accordion(this.main, this.$projectexplorerDiv);\r\n\r\n        this.initFilelistPanel();\r\n\r\n        this.initWorkspacelistPanel();\r\n\r\n    }\r\n\r\n    initFilelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.fileListPanel = new AccordionPanel(this.accordion, \"Kein Workspace gewählt\", \"1\",\r\n            \"img_add-file-dark\", \"Neue Datei...\", \"java\", true, false, \"file\", true, []);\r\n\r\n        this.fileListPanel.newFilesElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                if (that.main.currentWorkspace == null) {\r\n                    alert('Bitte wählen Sie zuerst einen Workspace aus.');\r\n                    return null;\r\n                }\r\n\r\n                let f: File = {\r\n                    name: accordionElement.name,\r\n                    dirty: false,\r\n                    saved: true,\r\n                    text: \"\",\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    panelElement: accordionElement\r\n                };\r\n                let m = new Module(f, that.main);\r\n                let modulStore = that.main.currentWorkspace.moduleStore;\r\n                modulStore.putModule(m);\r\n                that.setModuleActive(m);\r\n                that.main.networkManager.sendCreateFile(m, that.main.currentWorkspace, that.main.workspacesOwnerId,\r\n                    (error: string) => {\r\n                        if (error == null) {\r\n                            successfulNetworkCommunicationCallback(m);\r\n                        } else {\r\n                            alert('Der Server ist nicht erreichbar!');\r\n\r\n                        }\r\n                    });\r\n\r\n            };\r\n\r\n        this.fileListPanel.renameCallback =\r\n            (module: Module, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                let file = module.file;\r\n\r\n                file.name = newName;\r\n                file.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.fileListPanel.deleteCallback =\r\n            (module: Module, callbackIfSuccessful: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.currentWorkspace.moduleStore.removeModule(module);\r\n                        callbackIfSuccessful();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.fileListPanel.contextMenuProvider = (accordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            if (!(that.main.user.is_teacher || that.main.user.is_admin || that.main.user.is_schooladmin)) {\r\n                let module: Module = <Module>accordionElement.externalElement;\r\n                let file = module.file;\r\n\r\n                // if (file.submitted_date == null) {\r\n                //     cmiList.push({\r\n                //         caption: \"Als Hausaufgabe markieren\",\r\n                //         callback: (element: AccordionElement) => {\r\n\r\n                //             let file = (<Module>element.externalElement).file;\r\n                //             file.submitted_date = dateToString(new Date());\r\n                //             file.saved = false;\r\n                //             that.main.networkManager.sendUpdates(null, true);\r\n                //             that.renderHomeworkButton(file);\r\n                //         }\r\n                //     });\r\n                // } else {\r\n                //     cmiList.push({\r\n                //         caption: \"Hausaufgabenmarkierung entfernen\",\r\n                //         callback: (element: AccordionElement) => {\r\n\r\n                //             let file = (<Module>element.externalElement).file;\r\n                //             file.submitted_date = null;\r\n                //             file.saved = false;\r\n                //             that.main.networkManager.sendUpdates(null, true);\r\n                //             that.renderHomeworkButton(file);\r\n\r\n                //         }\r\n                //     });\r\n                // }\r\n\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n\r\n\r\n        this.fileListPanel.selectCallback =\r\n            (module: Module) => {\r\n                that.setModuleActive(module);\r\n            }\r\n\r\n\r\n\r\n    }\r\n\r\n    renderHomeworkButton(file: File) {\r\n        let $buttonDiv = file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonHomework');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_homeworkButton').remove();\r\n\r\n        let klass: string = null;\r\n        let title: string = \"\";\r\n        if (file.submitted_date != null) {\r\n            klass = \"img_homework\";\r\n            title = \"Wurde als Hausaufgabe abgegeben: \" + file.submitted_date\r\n            if (file.text_before_revision) {\r\n                klass = \"img_homework-corrected\";\r\n                title = \"Korrektur liegt vor.\"\r\n            }\r\n        }\r\n\r\n        if (klass != null) {\r\n            let $homeworkButtonDiv = jQuery(`<div class=\"jo_homeworkButton ${klass}\" title=\"${title}\"></div>`);\r\n            $buttonDiv.prepend($homeworkButtonDiv);\r\n            if (klass.indexOf(\"jo_active\") >= 0) {\r\n                $homeworkButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n                $homeworkButtonDiv.on('click', (e) => {\r\n                    e.stopPropagation();\r\n                    // TODO\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initWorkspacelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.workspaceListPanel = new AccordionPanel(this.accordion, \"Datenbanken\", \"3\",\r\n            null, \"Neue Datenbank...\", \"workspace\", true, true, \"workspace\", false, [\"file\"]);\r\n\r\n        let $newWorkspaceAction = jQuery('<div class=\"img_add-database-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Neue Datenbank auf oberster Ordnerebene anlegen\">');\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $newWorkspaceAction.on(mousePointer + 'down', (e) => {\r\n            e.stopPropagation();\r\n\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            new NewDatabaseDialog(that.main, owner_id, this.workspaceListPanel.getCurrentlySelectedPath());\r\n\r\n        })\r\n\r\n        this.workspaceListPanel.addAction($newWorkspaceAction);\r\n        if(this.workspaceListPanel.$buttonNew != null){\r\n            this.workspaceListPanel.$buttonNew.hide();\r\n        }\r\n\r\n        this.workspaceListPanel.newDatabaseElementCallback = (path: string[]) => {\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            new NewDatabaseDialog(that.main, owner_id, path);\r\n\r\n        }\r\n\r\n\r\n        this.workspaceListPanel.renameCallback =\r\n            (workspace: Workspace, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                workspace.name = newName;\r\n                workspace.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.workspaceListPanel.deleteCallback =\r\n            (workspace: Workspace, successfulNetworkCommunicationCallback: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"workspace\", workspace.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.removeWorkspace(workspace);\r\n                        that.fileListPanel.enableNewButton(that.main.workspaceList.length > 0);\r\n                        that.fileListPanel.clear();\r\n                        that.main.databaseExplorer.clear();\r\n                        that.main.getResultsetPresenter().clear();\r\n                        successfulNetworkCommunicationCallback();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.workspaceListPanel.selectCallback =\r\n            (workspace: Workspace) => {\r\n                if(workspace.isFolder) return;\r\n                if (workspace != this.main.currentWorkspace) {\r\n                    that.main.networkManager.sendUpdates(() => {\r\n                        that.setWorkspaceActive(workspace);\r\n                    });\r\n                }\r\n            }\r\n\r\n        this.workspaceListPanel.newFolderCallback = (newElement: AccordionElement, successCallback) => {\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            let folder: Workspace = new Workspace(newElement.name, that.main, owner_id);\r\n            folder.isFolder = true;\r\n\r\n            folder.path = newElement.path.join(\"/\");\r\n            folder.panelElement = newElement;\r\n            newElement.externalElement = folder;\r\n            that.main.workspaceList.push(folder);\r\n\r\n            let wd: CreateWorkspaceData = {\r\n                id: -1,\r\n                isFolder: true,\r\n                name: folder.name,\r\n                path: folder.path\r\n            }\r\n\r\n            that.main.networkManager.sendCreateWorkspace(wd, that.main.workspacesOwnerId, (error: string) => {\r\n                if (error == null) {\r\n                    folder.id = wd.id;\r\n                    successCallback(folder);\r\n\r\n                } else {\r\n                    alert(\"Fehler: \" + error);\r\n                    that.workspaceListPanel.removeElement(newElement);\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        this.workspaceListPanel.moveCallback = (ae: AccordionElement | AccordionElement[]) => {\r\n            if (!Array.isArray(ae)) ae = [ae];\r\n            for (let a of ae) {\r\n                let ws: Workspace = a.externalElement;\r\n                ws.path = a.path.join(\"/\");\r\n                ws.saved = false;\r\n            }\r\n            this.main.networkManager.sendUpdates();\r\n        }\r\n\r\n        this.workspaceListPanel.dropElementCallback = (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => {\r\n            let workspace: Workspace = dest.externalElement;\r\n            let module: Module = droppedElement.externalElement;\r\n\r\n            if (workspace.moduleStore.getModules(false).indexOf(module) >= 0) return; // module is already in destination workspace\r\n\r\n            let f: File = {\r\n                name: module.file.name,\r\n                dirty: true,\r\n                saved: false,\r\n                text: module.file.text,\r\n                text_before_revision: null,\r\n                submitted_date: null,\r\n                student_edited_after_revision: false,\r\n                version: module.file.version,\r\n                panelElement: null\r\n            };\r\n\r\n            if (dropEffekt == \"move\") {\r\n                // move file\r\n                let oldWorkspace = that.main.currentWorkspace;\r\n                oldWorkspace.moduleStore.removeModule(module);\r\n                that.fileListPanel.removeElement(module);\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, () => { });\r\n            }\r\n\r\n            let m = new Module(f, that.main);\r\n            let modulStore = workspace.moduleStore;\r\n            modulStore.putModule(m);\r\n            that.main.networkManager.sendCreateFile(m, workspace, that.main.workspacesOwnerId,\r\n                (error: string) => {\r\n                    if (error == null) {\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n\r\n        }\r\n\r\n\r\n\r\n        this.$homeAction = jQuery('<div class=\"img_home-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Meine eigenen Workspaces anzeigen\">');\r\n\r\n        this.$homeAction.on(mousePointer +'down', (e) => {\r\n            e.stopPropagation();\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n                that.onHomeButtonClicked();\r\n            });\r\n\r\n            that.main.bottomDiv.hideHomeworkTab();\r\n\r\n        })\r\n\r\n        this.workspaceListPanel.addAction(this.$homeAction);\r\n        this.$homeAction.hide();\r\n\r\n        this.workspaceListPanel.contextMenuProvider = (workspaceAccordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            if (this.main.user.is_teacher && this.main.teacherExplorer.classPanel.elements.length > 0) {\r\n                cmiList.push({\r\n                    caption: \"An Klasse austeilen...\",\r\n                    callback: (element: AccordionElement) => { },\r\n                    subMenu: this.main.teacherExplorer.classPanel.elements.map((ae) => {\r\n                        return {\r\n                            caption: ae.name,\r\n                            callback: (element: AccordionElement) => {\r\n                                let klasse = <any>ae.externalElement;\r\n\r\n                                let workspace: Workspace = element.externalElement;\r\n\r\n                                this.main.networkManager.sendDistributeWorkspace(workspace, klasse, null, (error: string) => {\r\n                                    if (error == null) {\r\n                                        let networkManager = this.main.networkManager;\r\n                                        let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                                        alert(\"Der Workspace \" + workspace.name + \" wurde an die Klasse \" + klasse.name + \" ausgeteilt. Er wird in maximal \" +\r\n                                            dt + \" s bei jedem Schüler ankommen.\");\r\n                                    } else {\r\n                                        alert(error);\r\n                                    }\r\n                                });\r\n\r\n                            }\r\n                        }\r\n                    })\r\n                },\r\n                    {\r\n                        caption: \"An einzelne Schüler/innen austeilen...\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let classes: ClassData[] = this.main.teacherExplorer.classPanel.elements.map(ae => ae.externalElement);\r\n                            let workspace: Workspace = element.externalElement;\r\n                            new DistributeToStudentsDialog(classes, workspace, this.main);\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n    }\r\n\r\n    onHomeButtonClicked() {\r\n        this.main.teacherExplorer.restoreOwnWorkspaces();\r\n        this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.ownUpdateFrequencyInSeconds;\r\n        this.$homeAction.hide();\r\n        this.fileListPanel.enableNewButton(this.main.workspaceList.length > 0);\r\n    }\r\n\r\n    renderFiles(workspace: Workspace) {\r\n\r\n        let name = workspace == null ? \"Kein Workspace vorhanden\" : workspace.name;\r\n\r\n        this.fileListPanel.setCaption(name);\r\n        this.fileListPanel.clear();\r\n\r\n        if (this.main.getCurrentWorkspace() != null) {\r\n            for (let module of this.main.getCurrentWorkspace().moduleStore.getModules(false)) {\r\n                module.file.panelElement = null;\r\n            }\r\n        }\r\n\r\n        if (workspace != null) {\r\n            let moduleList: Module[] = [];\r\n\r\n            for (let m of workspace.moduleStore.getModules(false)) {\r\n                moduleList.push(m);\r\n            }\r\n\r\n            moduleList.sort((a, b) => { return a.file.name > b.file.name ? 1 : a.file.name < b.file.name ? -1 : 0 });\r\n\r\n            for (let m of moduleList) {\r\n\r\n                m.file.panelElement = {\r\n                    name: m.file.name,\r\n                    externalElement: m,\r\n                    isFolder: false,\r\n                    path: []\r\n                };\r\n\r\n                this.fileListPanel.addElement(m.file.panelElement, true);\r\n                this.renderHomeworkButton(m.file);\r\n            }\r\n\r\n            this.fileListPanel.sortElements();\r\n\r\n        }\r\n    }\r\n\r\n    renderWorkspaces(workspaceList: Workspace[]) {\r\n\r\n        this.fileListPanel.clear();\r\n        this.workspaceListPanel.clear();\r\n\r\n        for (let w of workspaceList) {\r\n            let path = w.path.split(\"/\");\r\n            if (path.length == 1 && path[0] == \"\") path = [];\r\n            w.panelElement = {\r\n                name: w.name,\r\n                externalElement: w,\r\n                iconClass: 'workspace',\r\n                isFolder: w.isFolder,\r\n                path: path\r\n            };\r\n\r\n            this.workspaceListPanel.addElement(w.panelElement, false);\r\n            w.renderSettingsButton(w.panelElement);\r\n        }\r\n\r\n        this.workspaceListPanel.sortElements();\r\n        this.fileListPanel.enableNewButton(workspaceList.length > 0);\r\n\r\n\r\n\r\n    }\r\n\r\n    renderErrorCount(workspace: Workspace, errorCountMap: Map<Module, number>) {\r\n        if (errorCountMap == null) return;\r\n        for (let m of workspace.moduleStore.getModules(false)) {\r\n            let errorCount: number = errorCountMap.get(m);\r\n            let errorCountS: string = ((errorCount == null || errorCount == 0) ? \"\" : \"(\" + errorCount + \")\");\r\n\r\n            this.fileListPanel.setTextAfterFilename(m.file.panelElement, errorCountS, 'jo_errorcount');\r\n        }\r\n    }\r\n\r\n    setWorkspaceActive(w: Workspace) {\r\n\r\n        if (w != null) {\r\n            this.fileListPanel.$buttonNew.show();\r\n        }\r\n\r\n        this.workspaceListPanel.select(w, false);\r\n\r\n        let callback = (error: string) => {this.initializeDatabaseTool(error, w)};\r\n\r\n        if (w.database == null) {\r\n            this.main.waitOverlay.show(\"Bitte warten, hole Datenbank vom Server ...\");\r\n\r\n            this.main.networkManager.fetchDatabase(w, callback);\r\n        } else {\r\n            callback(null);\r\n        }\r\n\r\n    }\r\n\r\n    initializeDatabaseTool(error: string, w: Workspace) {\r\n        if (error != null) {\r\n            alert(error);\r\n            return;\r\n        }\r\n\r\n        let dbTool = this.main.getDatabaseTool();\r\n\r\n        let statements: string[] = w.database.statements;\r\n        if (statements == null) statements = [];\r\n\r\n        dbTool.initializeWorker(w.database.templateDump, statements,\r\n            () => {\r\n                this.main.currentWorkspace = w;\r\n\r\n                if (this.main.user.id == w.owner_id) {\r\n                    this.main.user.currentWorkspace_id = w.id;\r\n                }\r\n\r\n                this.renderFiles(w);\r\n\r\n                if (w != null) {\r\n                    let nonSystemModules = w.moduleStore.getModules(false);\r\n\r\n                    if (w.currentlyOpenModule != null) {\r\n                        this.setModuleActive(w.currentlyOpenModule);\r\n                    } else if (nonSystemModules.length > 0) {\r\n                        this.setModuleActive(nonSystemModules[0]);\r\n                    } else {\r\n                        this.setModuleActive(null);\r\n                    }\r\n\r\n                    for (let m of nonSystemModules) {\r\n                        m.file.dirty = true;\r\n                    }\r\n\r\n                    if (nonSystemModules.length == 0) {\r\n\r\n                        Helper.showHelper(\"newSQLFileHelper\", this.main, this.fileListPanel.$captionElement);\r\n\r\n                    }\r\n\r\n                    this.main.notifier.connect(w);\r\n\r\n                } else {\r\n                    this.setModuleActive(null);\r\n                }\r\n\r\n            },\r\n            () => {\r\n                this.main.databaseExplorer.refreshAfterRetrievingDBStructure();\r\n                this.main.getHistoryViewer().clearAndShowStatements(w.database.statements);\r\n            });\r\n\r\n    }\r\n\r\n    writeEditorTextToFile() {\r\n        let cem = this.getCurrentlyEditedModule();\r\n        if (cem != null)\r\n            cem.file.text = cem.getProgramTextFromMonacoModel(); // 29.03. this.main.monaco.getValue();\r\n    }\r\n\r\n\r\n    lastOpenModule: Module = null;\r\n    setModuleActive(m: Module) {\r\n\r\n        this.main.bottomDiv.homeworkManager.hideRevision();\r\n\r\n        if (this.lastOpenModule != null) {\r\n            this.lastOpenModule.file.text = this.lastOpenModule.getProgramTextFromMonacoModel(); // this.main.monaco.getValue();\r\n            this.lastOpenModule.editorState = this.main.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (m == null) {\r\n            this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n        } else {\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.main.getMonacoEditor().setModel(m.model);\r\n            if (this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(m.bracketError);\r\n\r\n            if (m.file.text_before_revision != null) {\r\n                this.main.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n            } else {\r\n                this.main.bottomDiv.homeworkManager.hideHomeworkRevisionButton();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setActiveAfterExternalModelSet(m: Module) {\r\n        this.fileListPanel.select(m, false);\r\n\r\n        this.lastOpenModule = m;\r\n\r\n        if (m.editorState != null) {\r\n            this.main.editor.dontPushNextCursorMove++;\r\n            this.main.getMonacoEditor().restoreViewState(m.editorState);\r\n            this.main.editor.dontPushNextCursorMove--;\r\n        }\r\n\r\n        this.setCurrentlyEditedModule(m);\r\n\r\n        this.showProgramPointer();\r\n\r\n        setTimeout(() => {\r\n            if (!this.main.getMonacoEditor().getOptions().get(monaco.editor.EditorOption.readOnly)) {\r\n                this.main.getMonacoEditor().focus();\r\n            }\r\n        }, 300);\r\n\r\n    }\r\n\r\n\r\n    private showProgramPointer() {\r\n\r\n        if (this.programPointerModule == this.getCurrentlyEditedModule() && this.getCurrentlyEditedModule() != null) {\r\n            let position = this.programPointerPosition;\r\n            let range = {\r\n                startColumn: position.column, startLineNumber: position.line,\r\n                endColumn: position.column + position.length, endLineNumber: position.line\r\n            };\r\n\r\n            this.main.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n            this.programPointerDecoration = this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n                {\r\n                    range: range,\r\n                    options: {\r\n                        className: 'jo_revealProgramPointer', isWholeLine: true,\r\n                        overviewRuler: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.OverviewRulerLane.Center\r\n                        },\r\n                        minimap: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    range: range,\r\n                    options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n                }\r\n            ]);\r\n\r\n        }\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        // console statement execution:\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        let module = this.main.currentWorkspace.moduleStore.findModuleByFile(file);\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        this.programPointerModule = module;\r\n        this.programPointerPosition = position;\r\n\r\n        if (module != this.getCurrentlyEditedModule()) {\r\n            this.setModuleActive(module);\r\n        } else {\r\n            this.showProgramPointer();\r\n        }\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws == null) return null;\r\n\r\n        return ws.currentlyOpenModule;\r\n    }\r\n\r\n    setCurrentlyEditedModule(m: Module) {\r\n        if (m == null) return;\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws.currentlyOpenModule != m) {\r\n            ws.currentlyOpenModule = m;\r\n            ws.saved = false;\r\n            m.file.dirty = true;\r\n        }\r\n    }\r\n\r\n    setExplorerColor(color: string) {\r\n        let caption: string;\r\n\r\n        if (color == null) {\r\n            color = \"transparent\";\r\n            caption = \"Meine Datenbanken\";\r\n        } else {\r\n            caption = \"Schüler-DB\";\r\n        }\r\n\r\n        this.fileListPanel.$listElement.parent().css('background-color', color);\r\n        this.workspaceListPanel.$listElement.parent().css('background-color', color);\r\n\r\n        this.workspaceListPanel.setCaption(caption);\r\n    }\r\n\r\n    getNewModule(file: File): Module {\r\n        return new Module(file, this.main);\r\n    }\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class RightDiv {\r\n\r\n    isWholePage: boolean = false;\r\n\r\n    $tabs: JQuery<HTMLElement>;\r\n    $headings: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $rightDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$tabs = $rightDiv.find('.jo_tabs');\r\n        this.$headings = $rightDiv.find('.jo_tabheadings');\r\n        \r\n        let withClassDiagram = this.$headings.find('.jo_classDiagramTabHeading').length > 0;\r\n        let withObjectDiagram = this.$headings.find('.jo_objectDiagramTabHeading').length > 0;\r\n\r\n        let that = this;\r\n        let rightdiv_width: string = \"100%\";\r\n        $rightDiv.find('.jo_whole-window').on(\"click\", () => {\r\n\r\n            that.isWholePage = !that.isWholePage;\r\n            \r\n            let $wholeWindow = jQuery('.jo_whole-window');\r\n\r\n            if (!that.isWholePage) {\r\n                jQuery('#code').css('display', 'flex');\r\n                jQuery('#rightdiv').css('width', rightdiv_width);\r\n                // jQuery('#run').css('width', '');\r\n                $wholeWindow.removeClass('img_whole-window-back');\r\n                $wholeWindow.addClass('img_whole-window');\r\n                jQuery('#controls').insertAfter(jQuery('#view-mode'));\r\n                $wholeWindow.attr('title', 'Auf Fenstergröße vergrößern');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            } else {\r\n                jQuery('#code').css('display', 'none');\r\n                rightdiv_width = jQuery('#rightdiv').css('width');\r\n                jQuery('#rightdiv').css('width', '100%');\r\n                $wholeWindow.removeClass('img_whole-window');\r\n                $wholeWindow.addClass('img_whole-window-back');\r\n                // that.adjustWidthToWorld();\r\n                jQuery('.jo_control-container').append(jQuery('#controls'));\r\n                $wholeWindow.attr('title', 'Auf normale Größe zurückführen');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$rightDiv);\r\n    }\r\n\r\n\r\n\r\n}","import { jo_mouseDetected } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\nexport class Sliders {\r\n\r\n    main: Main;\r\n\r\n    constructor(main: Main) {\r\n        this.main = main;\r\n    }\r\n\r\n    initSliders() {\r\n        let that = this;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        jQuery('#slider1').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider1\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                \r\n                that.moveLeftPanel(dx);\r\n\r\n                x = mm.clientX;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider1\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider1\");\r\n                jQuery(document).off(mousePointer + \"up.slider1\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider2').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider2\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n\r\n                that.moveBottomDiv(dy);\r\n\r\n                y = mm.clientY;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider2\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider2\");\r\n                jQuery(document).off(mousePointer + \"up.slider2\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider3').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider3\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n\r\n                that.moveRightDiv(dx);\r\n\r\n                x = mm.clientX;\r\n                mm.stopPropagation();\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider3\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider3\");\r\n                jQuery(document).off(mousePointer + \"up.slider3\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        let sliderknobLeft = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"left: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobLeft);\r\n        sliderknobLeft.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopImmediatePropagation();\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobleft\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopImmediatePropagation();\r\n\r\n                that.moveLeftPanel(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobleft\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobleft\");\r\n                jQuery(document).off(mousePointer + \"up.knobleft\");\r\n            });\r\n\r\n        });\r\n\r\n        let sliderknobRight = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"right: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobRight);\r\n        sliderknobRight.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopImmediatePropagation();\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobright\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopImmediatePropagation();\r\n\r\n                that.moveRightDiv(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobright\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobright\");\r\n                jQuery(document).off(mousePointer + \"up.knobright\");\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n    \r\n    moveRightDiv(dx: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $rightDiv = jQuery('#rightdiv');\r\n\r\n        let width = Number.parseInt($rightDiv.css('width').replace('px', ''));\r\n        $rightDiv.css('width', (width - dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth + dx) + \"px\");\r\n        \r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n        jQuery('.jo_graphics').trigger('sizeChanged');\r\n        width += dx;\r\n}\r\n    moveBottomDiv(dy: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $bottomDiv = jQuery('#bottomdiv-outer');\r\n\r\n        let height = Number.parseInt($bottomDiv.css('height').replace('px', ''));\r\n        $bottomDiv.css('height', (height - dy) + \"px\");\r\n\r\n        let meheight = Number.parseInt($editor.css('height').replace('px', ''));\r\n        $editor.css('height', (meheight + dy) + \"px\");\r\n\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n}\r\n\r\n    moveLeftPanel(dx: number) {\r\n        let $leftPanel = jQuery('#leftpanel');\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n\r\n        let width = Number.parseInt($leftPanel.css('width').replace('px', ''));\r\n        $leftPanel.css('width', (width + dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth - dx) + \"px\");\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionPanel, AccordionElement } from \"./Accordion.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassData, UserData, CRUDUserRequest, CRUDClassRequest, GetWorkspacesResponse, GetWorkspacesRequest, Workspaces } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\nexport class TeacherExplorer {\r\n\r\n    studentPanel: AccordionPanel;\r\n    classPanel: AccordionPanel;\r\n\r\n    // save them here when displaying pupils workspaces:\r\n    ownWorkspaces: Workspace[];\r\n    currentOwnWorkspace: Workspace;\r\n\r\n    constructor(private main: Main, private classData: ClassData[]) {\r\n\r\n    }\r\n\r\n    removePanels() {\r\n        this.classPanel.remove();\r\n        this.studentPanel.remove();\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.initStudentPanel();\r\n\r\n        this.initClassPanel();\r\n\r\n        this.renderClasses(this.classData);\r\n\r\n    }\r\n\r\n    initStudentPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.studentPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Schüler/innen\", \"2\", null,\r\n            \"\", \"student\", false, false, \"student\", false, []);\r\n\r\n        this.studentPanel.selectCallback = (ae: UserData) => {\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let request: GetWorkspacesRequest = {\r\n                    ws_userId: ae.id,\r\n                    userId: this.main.user.id,\r\n                    language: 1\r\n                }\r\n\r\n                ajax(\"getWorkspaces\", request, (response: GetWorkspacesResponse) => {\r\n                    if (response.success == true) {\r\n\r\n                        if (that.main.workspacesOwnerId == that.main.user.id) {\r\n                            that.ownWorkspaces = that.main.workspaceList.slice();\r\n                            that.currentOwnWorkspace = that.main.currentWorkspace;\r\n                        }\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces);\r\n                        that.main.workspacesOwnerId = ae.id;\r\n                        that.main.projectExplorer.setExplorerColor(\"rgba(255, 0, 0, 0.2\");\r\n                        that.main.projectExplorer.$homeAction.show();\r\n                        Helper.showHelper(\"homeButtonHelper\", this.main);\r\n\r\n                        that.main.bottomDiv.showHomeworkTab();\r\n                        that.main.bottomDiv.homeworkManager.attachToWorkspaces(that.main.workspaceList);\r\n                    }\r\n\r\n                    this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n                    this.main.networkManager.secondsTillNextUpdate = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    restoreOwnWorkspaces() {\r\n        let main = this.main;\r\n\r\n        // main.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n        main.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        main.workspaceList = this.ownWorkspaces;\r\n        main.currentWorkspace = this.currentOwnWorkspace;\r\n        main.workspacesOwnerId = main.user.id;\r\n        main.projectExplorer.setExplorerColor(null);\r\n\r\n        main.projectExplorer.renderWorkspaces(main.workspaceList);\r\n\r\n        if (main.currentWorkspace == null && main.workspaceList.length > 0) {\r\n            main.currentWorkspace = main.workspaceList[0];\r\n        }\r\n\r\n        if (main.currentWorkspace != null) {\r\n            main.projectExplorer.setWorkspaceActive(main.currentWorkspace);\r\n        }\r\n\r\n        this.studentPanel.select(null, false);\r\n\r\n    }\r\n\r\n    initClassPanel() {\r\n        let that = this;\r\n\r\n        this.classPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Klassen\", \"1\", null, \"\", \"class\", false, false, \"class\", false, []);\r\n\r\n        this.classPanel.selectCallback = (ea) => {\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let classData = <ClassData>ea;\r\n                if (classData != null) {\r\n                    this.renderStudents(classData.students);\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    renderStudents(userDataList: UserData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        userDataList.sort((a, b) => {\r\n            if (a.familienname > b.familienname) return 1;\r\n            if (b.familienname > a.familienname) return -1;\r\n            if (a.rufname > b.rufname) return 1;\r\n            if (b.rufname > a.rufname) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let ud of userDataList) {\r\n            let ae: AccordionElement = {\r\n                name: ud.familienname + \", \" + ud.rufname,\r\n                sortName: ud.familienname + \" \" + ud.rufname,\r\n                externalElement: ud,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.studentPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n    renderClasses(classDataList: ClassData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        classDataList.sort((a, b) => {\r\n            if (a.name > b.name) return 1;\r\n            if (b.name > a.name) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let cd of classDataList) {\r\n            let ae: AccordionElement = {\r\n                name: cd.name,\r\n                externalElement: cd,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.classPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { openContextMenu, ContextMenuItem } from \"../../tools/HtmlTools.js\";\r\nimport { Dialog } from \"./Dialog.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\n\r\nexport class UserMenu {\r\n\r\n\r\n\r\n    constructor(private main: Main){\r\n        \r\n    }\r\n\r\n    init(){\r\n        let $userSettingsButton = jQuery('#buttonUserSettings');\r\n        let that = this;\r\n\r\n        // $userSettingsButton.on(\"click\", (e) => {\r\n\r\n        //     let contextMenuItems: ContextMenuItem[] = [\r\n        //         {\r\n        //             caption: \"Passwort ändern...\",\r\n        //             callback: () => {\r\n        //                 let passwortChanger = new PasswordChanger(that.main);\r\n        //                 passwortChanger.show();\r\n        //             }\r\n        //         }\r\n        //     ]\r\n\r\n\r\n        //     openContextMenu(contextMenuItems, $userSettingsButton.offset().left, $userSettingsButton.offset().top + $userSettingsButton.height());\r\n\r\n        // });\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class PasswordChanger {\r\n\r\n    dialog: Dialog;\r\n\r\n    constructor(private main: Main){\r\n\r\n        this.dialog = new Dialog();\r\n\r\n    }\r\n\r\n    show() {\r\n        this.dialog.init();\r\n        this.dialog.heading(\"Passwort ändern\");\r\n        this.dialog.description(\"Bitte geben Sie Ihr bisheriges Passwort und darunter zweimal Ihr neues Passwort ein. <br>\" + \r\n        \"Das Passwort muss mindestens 8 Zeichen lang sein und sowohl Buchstaben als auch Zahlen oder Sonderzeichen enthalten.\")\r\n        let $oldPassword = this.dialog.input(\"password\", \"Altes Passwort\");\r\n        let $newPassword1 = this.dialog.input(\"password\", \"Neues Passwort\");\r\n        let $newPassword2 = this.dialog.input(\"password\", \"Neues Passwort wiederholen\");\r\n        let $errorDiv = this.dialog.description(\"\", \"red\");\r\n        let waitDiv = this.dialog.waitMessage(\"Bitte warten...\")\r\n\r\n        this.dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {this.dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    if($newPassword1.val() != $newPassword2.val()){\r\n                        $errorDiv.text(\"Die zwei eingegebenen neuen Passwörter stimmen nicht überein.\")\r\n                    } else {\r\n                        waitDiv(true);\r\n                        ajax(\"changePassword\", {oldPassword: $oldPassword.val(), newPassword: $newPassword1.val()}, () => {\r\n                            waitDiv(false);\r\n                            alert(\"Das Passwort wurde erfolgreich geändert.\");\r\n                            this.dialog.close();\r\n                        }, (message) => {\r\n                            waitDiv(false);\r\n                            $errorDiv.text(message)\r\n                        })\r\n                    }\r\n\r\n                }\r\n            },\r\n        ])\r\n    }\r\n\r\n}","import { ajax } from \"../communication/AjaxHelper.js\";\r\nimport { LoginRequest, LoginResponse, LogoutRequest, UserData } from \"../communication/Data.js\";\r\nimport { Main } from \"./Main.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { userInfo } from \"os\";\r\nimport { UserMenu } from \"./gui/UserMenu.js\";\r\nimport { escapeHtml } from \"../tools/StringTools.js\";\r\n\r\nexport class Login {\r\n\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        let that = this;\r\n\r\n        let $loginSpinner = jQuery('#login-spinner>img');\r\n\r\n        jQuery('#login-username').focus();\r\n\r\n        jQuery('#login-username').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-password').focus();\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-button').focus();\r\n                jQuery('#login-button').addClass('jo_active');\r\n            }\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-button').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-username').focus();\r\n                jQuery('#login-button').removeClass('jo_active');\r\n            } else {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        // Avoid double login when user does doubleclick:\r\n        let loginHappened = false;\r\n        jQuery('#login-button').on('click', () => {\r\n\r\n            $loginSpinner.show();\r\n\r\n            if (loginHappened) return;\r\n            loginHappened = true;\r\n\r\n            setTimeout(() => {\r\n                loginHappened = false;\r\n            }, 1000);\r\n\r\n            let loginRequest: LoginRequest = {\r\n                username: <string>jQuery('#login-username').val(),\r\n                password: <string>jQuery('#login-password').val(),\r\n                language: 1\r\n            }\r\n\r\n            ajax('login', loginRequest, (response: LoginResponse) => {\r\n\r\n                if (!response.success) {\r\n                    jQuery('#login-message').html('Fehler: Benutzername und/oder Passwort ist falsch.');\r\n                } else {\r\n\r\n                    // We don't do this anymore for security reasons - see AjaxHelper.ts\r\n                    // Alternatively we now set a long expiry interval for cookie.\r\n                    // credentials.username = loginRequest.username;\r\n                    // credentials.password = loginRequest.password;\r\n\r\n                    jQuery('#login').hide();\r\n\r\n                    this.main.waitOverlay.show('Bitte warten...');\r\n\r\n                    let user: UserData = response.user;\r\n                    if (user.settings == null || user.settings.helperHistory == null) {\r\n                        user.settings = {\r\n                            helperHistory: {\r\n                            },\r\n                            viewModes: null,\r\n                            classDiagram: null\r\n                        }\r\n                    }\r\n\r\n                    this.main.waitForGUICallback = () => {\r\n\r\n                        that.main.mainMenu.initGUI(user);\r\n\r\n                        that.main.waitOverlay.hide();\r\n                        $loginSpinner.hide();\r\n                        jQuery('#menupanel-username').html(escapeHtml(user.rufname) + \" \" + escapeHtml(user.familienname));\r\n\r\n                        new UserMenu(that.main).init();\r\n\r\n                        if (user.is_teacher) {\r\n                            that.main.initTeacherExplorer(response.classdata);\r\n                        }\r\n\r\n                        that.main.user = user;\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces);\r\n                        that.main.workspacesOwnerId = user.id;\r\n\r\n                        that.main.networkManager.initializeTimer();\r\n\r\n                        that.main.projectExplorer.fileListPanel.setFixed(!user.is_teacher);\r\n                        that.main.projectExplorer.workspaceListPanel.setFixed(!user.is_teacher);\r\n\r\n                        that.main.viewModeController.initViewMode();\r\n                        that.main.bottomDiv.hideHomeworkTab();\r\n\r\n                        that.main.networkManager.initializeNotifierClient();\r\n\r\n                    }\r\n\r\n                    if (this.main.startupComplete == 0) {\r\n                        this.main.waitForGUICallback();\r\n                        this.main.waitForGUICallback = null;\r\n                    }\r\n\r\n                }\r\n\r\n            }, (errorMessage: string) => {\r\n                jQuery('#login-message').html('Login gescheitert: ' + errorMessage);\r\n                jQuery('#login-spinner>img').hide();\r\n            }\r\n            );\r\n\r\n        });\r\n\r\n        jQuery('#buttonLogout').on('click', () => {\r\n\r\n            this.main.waitOverlay.show('Bitte warten, der letzte Bearbeitungsstand wird noch gespeichert ...');\r\n\r\n            if (this.main.workspacesOwnerId != this.main.user.id) {\r\n                this.main.projectExplorer.onHomeButtonClicked();\r\n            }\r\n\r\n            this.main.networkManager.sendUpdates(() => {\r\n\r\n                let logoutRequest: LogoutRequest = {\r\n                    currentWorkspaceId: this.main.currentWorkspace?.id\r\n                }\r\n\r\n                ajax('logout', logoutRequest, () => {\r\n                    // window.location.href = 'index.html';\r\n                    this.main.networkManager.sendUpdateUserSettings(() => {});\r\n\r\n                    jQuery('#login').show();\r\n                    this.main.waitOverlay.hide();\r\n                    jQuery('#login-message').empty();\r\n                    this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"\", \"myJava\"));\r\n                    this.main.projectExplorer.fileListPanel.clear();\r\n                    this.main.projectExplorer.workspaceListPanel.clear();\r\n\r\n                    this.main.databaseExplorer.clear();\r\n                    this.main.resultsetPresenter.clear();\r\n\r\n                    if (this.main.user.is_teacher) {\r\n                        this.main.teacherExplorer.removePanels();\r\n                        this.main.teacherExplorer = null;\r\n                    }\r\n\r\n\r\n                    this.main.currentWorkspace = null;\r\n                    this.main.user = null;\r\n\r\n\r\n                });\r\n            }, true);\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\nimport { ViewModes, ViewMode } from \"../../communication/Data\";\r\n\r\nexport class ViewModeController {\r\n\r\n    $buttonEditorFullscreen: JQuery<HTMLElement>;\r\n    $buttonPresentationMode: JQuery<HTMLElement>;\r\n    $buttonMonitorMode: JQuery<HTMLElement>;\r\n\r\n    $buttonMap: { [key: string]: JQuery<HTMLElement> } = {};\r\n\r\n    highContrast: boolean = false;\r\n    editorHasFullWidth: boolean = false;\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private main: Main) {\r\n\r\n        this.$buttonEditorFullscreen = jQuery('<div title=\"Editor in voller Breite\" class=\"img_whole-window jo_button jo_active\" style=\"padding: 1px; margin-right: 20px\"></div>');\r\n        this.$buttonPresentationMode = jQuery('<div title=\"Präsentation (Beamer)\" class=\"img_presentation-mode jo_button jo_active\" syle=\"padding: 1px\"></div>');\r\n        this.$buttonMonitorMode = jQuery('<div title=\"Monitor\" class=\"img_monitor-mode jo_button jo_active\" style=\"margin-left: 5px; padding: 1px\"></div>');\r\n        $buttonsContainer.append(this.$buttonEditorFullscreen, this.$buttonPresentationMode, this.$buttonMonitorMode);\r\n\r\n        this.$buttonMap = {\r\n            \"presentation\": this.$buttonPresentationMode,\r\n            \"monitor\": this.$buttonMonitorMode\r\n        };\r\n\r\n        let am = this.main.actionManager;\r\n\r\n        am.registerAction(\"editor.fullwidth\", [],\r\n            () => {\r\n                this.toggleEditorFullwidth();\r\n            }, \"Editor auf die volle Breite erweitern\", this.$buttonEditorFullscreen);\r\n\r\n        am.registerAction(\"viewmode.presentation\", [],\r\n            () => {\r\n                this.setMode(\"presentation\");\r\n            }, \"Präsentationsansicht\", this.$buttonPresentationMode);\r\n\r\n        am.registerAction(\"viewmode.monitor\", [],\r\n            () => {\r\n                this.setMode(\"monitor\");\r\n            }, \"Monitoransicht\", this.$buttonMonitorMode);\r\n\r\n    }\r\n\r\n    toggleEditorFullwidth() {\r\n        if(this.editorHasFullWidth){\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in voller Breite');\r\n            jQuery('#rightdiv').show(600);\r\n            jQuery('#leftpanel').show(600);\r\n            jQuery('#controls').show();\r\n        } else {\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in normaler Breite');\r\n            jQuery('#rightdiv').hide(600);\r\n            jQuery('#leftpanel').hide(600);\r\n            jQuery('#controls').hide();\r\n        }\r\n\r\n        setTimeout(()=>{\r\n            this.main.getMonacoEditor().layout();\r\n        }, 800);\r\n\r\n        this.editorHasFullWidth = !this.editorHasFullWidth;\r\n    }\r\n\r\n    setMode(mode: \"presentation\" | \"monitor\", saveSettings: boolean = true) {\r\n\r\n        let otherMode = mode == \"presentation\" ? \"monitor\" : \"presentation\";\r\n\r\n        this.$buttonMap[mode].addClass(\"jo_pressed\");\r\n        this.$buttonMap[otherMode].removeClass(\"jo_pressed\");\r\n\r\n        let settings = this.main.user.settings;\r\n        let viewModes = settings.viewModes;\r\n\r\n        let viewMode = viewModes[mode];\r\n        viewModes.viewModeChosen = mode;\r\n\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n\r\n        this.main.editor.setFontSize(viewMode.fontSize);\r\n\r\n        if (this.highContrast != viewMode.highContrast) {\r\n            let editor = this.main.getMonacoEditor();\r\n            editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n            this.highContrast = !this.highContrast;\r\n        }\r\n\r\n        if (saveSettings) this.saveSettings();\r\n\r\n    }\r\n\r\n    saveFontSize(fontSizePx: number) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.fontSize = fontSizePx;\r\n        this.saveSettings();\r\n    }\r\n\r\n    setTheme(theme: string) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.theme = theme;\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n        this.saveSettings();\r\n    }\r\n\r\n    toggleHighContrast() {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.highContrast = !viewMode.highContrast;\r\n        let editor = this.main.getMonacoEditor();\r\n        editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n        this.saveSettings();\r\n    }\r\n\r\n    getChosenViewMode(): ViewMode {\r\n        let viewModes = this.main.user.settings.viewModes;\r\n        return viewModes[viewModes.viewModeChosen];\r\n    }\r\n\r\n    saveSettings() {\r\n        this.main.userDataDirty = true;\r\n    }\r\n\r\n    initViewMode() {\r\n        let settings = this.main.user.settings;\r\n\r\n        if (settings[\"viewModes\"] == null) {\r\n            settings[\"viewModes\"] = {\r\n                monitor: null,\r\n                presentation: null,\r\n                viewModeChosen: \"monitor\"\r\n            }\r\n        }\r\n\r\n        if (settings.viewModes.monitor == null) {\r\n            settings.viewModes.monitor = {\r\n                fontSize: 14,\r\n                highContrast: false,\r\n                theme: \"dark\"\r\n            };\r\n\r\n            settings.viewModes.presentation = {\r\n                fontSize: 18,\r\n                highContrast: false,\r\n                theme: \"light\"\r\n            }\r\n            this.saveSettings();\r\n        }\r\n        this.setMode(settings.viewModes.viewModeChosen, false);\r\n    }\r\n\r\n\r\n}","import { Main } from \"../../main/Main.js\";\r\nimport { TextPosition } from \"../lexer/Token\";\r\nimport { Module } from \"./Module\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype SemicolonPosition = {\r\n    position: TextPosition;\r\n    module: Module;\r\n    firstSeenMs: number;\r\n    isThereAgain: boolean;\r\n}\r\n\r\nexport class SemicolonAngel {\r\n    \r\n    semicolonPositions: SemicolonPosition[] = [];\r\n    time: number;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    startRegistering(){\r\n        this.semicolonPositions.forEach(p => p.isThereAgain = false);\r\n        this.time = new Date().getTime();\r\n    }\r\n\r\n    register(position: TextPosition, module: Module){\r\n        let oldEvidence = this.semicolonPositions.find(p => p.position.line == position.line && p.position.column == position.column);\r\n        if(oldEvidence){\r\n            oldEvidence.isThereAgain = true;\r\n        } else {\r\n            this.semicolonPositions.push({position: position, firstSeenMs: this.time, isThereAgain: true, module: module});\r\n        }\r\n    }\r\n\r\n    healSemicolons(){\r\n        let time = new Date().getTime();\r\n        this.semicolonPositions = this.semicolonPositions.filter(p => p.isThereAgain);\r\n\r\n        let currentlyEditedModule = this.main.getCurrentlyEditedModule();\r\n        let cursorLine = this.main.getMonacoEditor().getPosition().lineNumber;\r\n\r\n        this.semicolonPositions.filter(p => time - p.firstSeenMs > 2000).forEach(p => {\r\n\r\n            let isCurrentModule = p.module.file.id != null && p.module.file.id == currentlyEditedModule.file.id;\r\n\r\n            let editOperations: monaco.editor.IIdentifiedSingleEditOperation[] = [\r\n                {\r\n                    range: new monaco.Range(p.position.line, p.position.column, p.position.line, p.position.column),\r\n                    text: \";\",\r\n                    forceMoveMarkers: true\r\n                }\r\n            ]\r\n\r\n            if(isCurrentModule){\r\n                if(Math.abs(cursorLine - p.position.line) > 1){\r\n                    let editor = this.main.getMonacoEditor();\r\n                    const selection = editor.getSelection();\r\n                    editor.executeEdits('Semicolon-Angel', editOperations);\r\n                    editor.setSelection(selection);\r\n                    this.semicolonPositions.splice(this.semicolonPositions.indexOf(p), 1);\r\n                }\r\n            } \r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\nimport { Table, Column } from \"../../compiler/parser/SQLTable.js\";\nimport { DatabaseStructure } from \"../../tools/DatabaseTools.js\";\n\nexport class DatabaseExplorer {\n\n    collapsedTables: Map<string, boolean> = new Map();\n\n    constructor(private main: MainBase, public $mainDiv: JQuery<HTMLElement>) {\n\n    }\n\n    refresh() {\n\n        let dbTool = this.main.getDatabaseTool();\n\n        dbTool.retrieveDatabaseStructure((dbstructure: DatabaseStructure) => {\n\n            this.refreshAfterRetrievingDBStructure();\n        });\n\n    }\n\n    clear(){\n        this.$mainDiv.empty();\n    }\n\n    refreshAfterRetrievingDBStructure() {\n        let dbTool = this.main.getDatabaseTool();\n        let workspace = this.main.getCurrentWorkspace();\n        if (workspace != null) {\n            for (let m of workspace.moduleStore.getModules(false)) {\n                m.file.dirty = true;\n            }\n        }\n\n        let tables = Table.fromTableStructureList(dbTool.databaseStructure.tables);\n\n        this.$mainDiv.empty();\n\n        for (let table of tables) {\n            if(table.identifier != \"sqlite_sequence\"){\n                let $table = this.renderTable(table);\n                this.$mainDiv.append($table);\n            }\n        }\n\n    }\n\n    renderTable(table: Table): JQuery<HTMLElement> {\n        let isCollapsed = this.collapsedTables.get(table.identifier) != null;\n\n        let $table = jQuery(\n            `<div class=\"jo_table\">\n           <div class=\"jo_tableheader\">\n              <div class=\"${isCollapsed ? 'img_tree-collapsed-dark' : 'img_tree-expanded-dark'} jo_treeswitch jo_button jo_active\"></div>\n              <div class=\"jo_tableheaderlink\">\n                <div class=\"img_table\"></div>\n                <div>${table.identifier}</div></div><div class=\"jo_tablesize\">(${table.size}&nbsp;Datensätze)</div>\n              </div>\n            </div>\n        </div>`);\n\n        $table.find('.jo_tableheader').on('pointerup', () => {\n            this.main.getResultsetPresenter().showTable(table.identifier);\n\n        })\n\n        let $columns = jQuery('<div class=\"jo_columnlist\"></div>')\n\n        for (let column of table.columns) {\n            let image = column.isPrimaryKey ? \"img_key\" : \"img_column\";\n\n            let referencesHtml = \"\";\n            if (column.references != null) {\n                referencesHtml = `<div class=\"img_foreign_key\" style=\"margin-left: 5px\"></div><div class=\"jo_references\">${column.references.table.identifier}.${column.references.identifier}</div>`\n            }\n\n            let type = column.type == null ? \"\" : column.type.toString();\n            let notNull: string = column.notNull ? '<div class=\"jo_dbnotnull\">not null</div>' : \"\";\n            let defaultValue: string = column.defaultValue ? `<div class=\"jo_dbdefault\">default ${column.defaultValue}</div>` : \"\";\n            let autoincrement: string = column.isAutoIncrement ? `<div class=\"jo_dbautoincrement\">autoincrement</div>` : \"\";\n\n            let $column = jQuery(`\n            <div class=\"jo_column\">\n                <div class=\"${image}\"></div>\n                <div>${column.identifier}</div>\n                <div class=\"jo_dbtype\">${type}</div>\n                ${autoincrement}\n                ${referencesHtml}\n                ${notNull}\n                ${defaultValue}\n            </div>\n            `);\n            $columns.append($column);\n        }\n\n        $table.append($columns);\n\n        let $treeSwitch = $table.find('.jo_treeswitch');\n        let that = this;\n        $treeSwitch.on('pointerup', (e) => {\n            e.stopPropagation();\n            let $columnList = $treeSwitch.parents('.jo_table').find('.jo_columnlist');\n            let collapsed = $treeSwitch.hasClass('img_tree-collapsed-dark');\n            if (collapsed) {\n                $treeSwitch.removeClass('img_tree-collapsed-dark');\n                $treeSwitch.addClass('img_tree-expanded-dark');\n                $columnList.slideDown(300);\n                that.collapsedTables.delete(table.identifier);\n            } else {\n                $treeSwitch.removeClass('img_tree-expanded-dark');\n                $treeSwitch.addClass('img_tree-collapsed-dark');\n                $columnList.slideUp(300);\n                that.collapsedTables.set(table.identifier, true);\n            }\n        });\n\n        return $table;\n    }\n\n\n\n}","// <div id=\"controls\">\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n// </div>\r\n\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { ResultsetPresenter } from \"./ResultsetPresenter.js\";\r\n\r\n\r\nexport class ProgramControlButtons {\r\n\r\n    $buttonStart: JQuery<HTMLElement>;\r\n    $buttonRollback: JQuery<HTMLElement>;\r\n    // $buttonPause: JQuery<HTMLElement>;\r\n    // $buttonStop: JQuery<HTMLElement>;\r\n    // $buttonStepOver: JQuery<HTMLElement>;\r\n    // $buttonStepInto: JQuery<HTMLElement>;\r\n    // $buttonStepOut: JQuery<HTMLElement>;\r\n    // $buttonRestart: JQuery<HTMLElement>;\r\n\r\n    // $buttonEdit: JQuery<HTMLElement>;\r\n\r\n\r\n    constructor(private main: MainBase, private $buttonsContainer: JQuery<HTMLElement>) {\r\n\r\n        this.$buttonStart = jQuery('<div title=\"Start\" class=\"img_start-dark jo_button\"></div>');\r\n        this.$buttonRollback = jQuery('<div title=\"Rollback\" class=\"img_undo jo_button\"></div>');\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        am.registerAction(\"execute\", ['Strg + Enter'],\r\n            () => {\r\n                if (am.isActive(\"execute\")) {\r\n\r\n                    this.main.getResultsetPresenter().executeSelectedStatements();\r\n                }\r\n\r\n            }, \"SQL-Statement ausführen\", this.$buttonStart\r\n        );\r\n\r\n        am.setActive('execute',false);\r\n\r\n        am.registerAction(\"rollback\", ['Strg + LeftArrow'],\r\n            () => {\r\n                if (am.isActive(\"rollback\")) {\r\n\r\n                    this.main.getHistoryViewer().rollback();\r\n                }\r\n\r\n            }, \"Letztes schreibendes SQL-Statement rückgängig machen\", this.$buttonRollback\r\n        );\r\n\r\n        am.setActive('rollback',false);\r\n\r\n        // this.$buttonPause = jQuery('<div title=\"Pause\" class=\"img_pause-dark jo_button\"></div>');\r\n        // this.$buttonStop = jQuery('<div title=\"Stop\" class=\"img_stop-dark jo_button\"></div>');\r\n        // this.$buttonStepOver = jQuery('<div title=\"Step over\" class=\"img_step-over-dark jo_button\"></div>');\r\n        // this.$buttonStepInto = jQuery('<div title=\"Step into\" class=\"img_step-into-dark jo_button\"></div>');\r\n        // this.$buttonStepOut = jQuery('<div title=\"Step out\" class=\"img_step-out-dark jo_button\"></div>');\r\n        // this.$buttonRestart = jQuery('<div title=\"Restart\" class=\"img_restart-dark jo_button\"></div>');\r\n\r\n        // this.$buttonEdit = jQuery('<div class=\"jo_editButton\" title=\"Programm anhalten damit der Programmtext bearbeitbar wird\"></div>')\r\n        // $editorContainer.append(this.$buttonEdit);\r\n\r\n        $buttonsContainer.append(this.$buttonStart, this.$buttonRollback\r\n            // , this.$buttonPause, this.$buttonStop,\r\n            // this.$buttonStepOver, this.$buttonStepInto, this.$buttonStepOut, this.$buttonRestart\r\n        );\r\n\r\n        // <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n        // <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n        // <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n        // <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n        // <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n        // <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n        // <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n        // <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n\r\n\r\n\r\n    }\r\n\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { SQLStatement } from \"../../compiler/parser/Parser.js\";\r\nimport { StatementCleaner } from \"../../compiler/parser/StatementCleaner.js\";\r\nimport { QueryResult } from \"../../tools/DatabaseTools.js\";\r\nimport { WDatabase } from \"../../workspace/WDatabase.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\ntype RuntimeError = {\r\n    statement: SQLStatement,\r\n    message: string\r\n}\r\n\r\nexport interface WriteQueryListener {\r\n    notify(statements: SQLStatement[]): void;\r\n}\r\n\r\nexport class ResultsetPresenter {\r\n\r\n    $paginationDiv: JQuery<HTMLDivElement>;\r\n    $infoDiv: JQuery<HTMLDivElement>;\r\n    $arrowLeft: JQuery<HTMLDivElement>;\r\n    $arrowRight: JQuery<HTMLDivElement>;\r\n\r\n    paginationFrom: number;\r\n    paginationAll: number;\r\n\r\n    paginationSize: number = 1000;\r\n\r\n    result: QueryResult;\r\n\r\n    writeQueryListeners: WriteQueryListener[] = [];\r\n\r\n    public static StatementDelimiter: string = \";\\n\\n\"\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$paginationDiv = <any>$bottomDiv.find('.jo_pagination');\r\n        this.$arrowLeft = jQuery('<div class=\"jo_button img_arrow-left-dark jo_active\"></div>');\r\n        this.$infoDiv = jQuery('<div class=\"jo_pagination_info\"><span class=\"jo_pagination_fromto\">0001-1000</span>/<span class=\"jo_pagination_all\">5000</span></div>');\r\n        this.$arrowRight = jQuery('<div class=\"jo_button img_arrow-right-dark jo_active\"></div>');\r\n\r\n        this.$paginationDiv.empty();\r\n        this.$paginationDiv.append(this.$arrowLeft, this.$infoDiv, this.$arrowRight);\r\n\r\n        this.$paginationDiv.hide();\r\n\r\n        let mousePointer = (window.PointerEvent ? \"pointer\" : \"mouse\") + 'up';\r\n\r\n        let that = this;\r\n        this.$arrowLeft.on(mousePointer, (e) => {\r\n            if (that.paginationFrom > 1) {\r\n                that.paginationFrom = Math.max(that.paginationFrom - that.paginationSize, 1);\r\n                if (that.paginationFrom % 1000 != 1) {\r\n                    that.paginationFrom = (Math.floor(that.paginationFrom / that.paginationSize) + 1) * that.paginationSize + 1;\r\n                }\r\n                that.showResults();\r\n                that.activateButtons();\r\n            }\r\n        })\r\n\r\n        this.$arrowRight.on(mousePointer, (e) => {\r\n            if (that.paginationFrom < this.paginationAll - that.paginationSize + 1) {\r\n                that.paginationFrom = Math.min(that.paginationFrom + that.paginationSize, that.paginationAll - that.paginationSize + 1);\r\n                that.showResults();\r\n                that.activateButtons();\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    public addWriteQueryListener(listener: WriteQueryListener) {\r\n        this.writeQueryListeners.push(listener);\r\n    }\r\n\r\n    private activateButtons() {\r\n        this.$arrowLeft.toggleClass('jo_active', this.paginationFrom > 1);\r\n        this.$arrowRight.toggleClass('jo_active', this.paginationFrom < this.paginationAll - this.paginationSize + 1);\r\n    }\r\n\r\n    executeSelectedStatements() {\r\n\r\n        let statements = this.fetchSelectedStatements().filter(st => st.ast.type != TokenType.omittedeStatement);\r\n        \r\n        if (statements.length == 0) return;\r\n\r\n        let hasDDLStatements: boolean = statements.some(st => this.isDDLStatement(st));\r\n        let hasWriteStatements: boolean = statements.some(st => this.isWriteStatement(st));\r\n        let workspace = this.main.getCurrentWorkspace();\r\n        let database = workspace.database;\r\n\r\n        if (hasDDLStatements && workspace.permissions <= 1) {\r\n            alert(\"Der Benutzer hat keine Berechtigung zum Ändern der Tabellenstruktur.\");\r\n            return;\r\n        }\r\n\r\n        if (hasWriteStatements && workspace.permissions == 0) {\r\n            alert(\"Der Benutzer hat keine Berechtigung zum Einfügen/Löschen/Ändern von Datensätzen.\");\r\n            return;\r\n        }\r\n\r\n        if (hasDDLStatements || hasWriteStatements) {\r\n            if (this.main.isEmbedded()) {\r\n                this.executeDDLWriteStatementsEmbedded(workspace, statements, database);\r\n\r\n            } else {\r\n                this.executeDDLWriteStatementsInOnlineIDE(workspace, statements, database);\r\n            }\r\n\r\n        } else {\r\n            this.executeStatements(statements, 0, [], () => { });\r\n        }\r\n\r\n    }\r\n\r\n    executeDDLWriteStatementsEmbedded(workspace: Workspace, statements: SQLStatement[], database: WDatabase) {\r\n        let sucessfullyExecutedModifyingStatements: SQLStatement[] = [];\r\n        this.executeStatements(statements, 0, sucessfullyExecutedModifyingStatements, () => {\r\n\r\n            if (sucessfullyExecutedModifyingStatements.length == 0)\r\n                return;\r\n\r\n            this.main.getDatabaseExplorer().refresh();\r\n\r\n            this.writeQueryListeners.forEach(listener => listener.notify(sucessfullyExecutedModifyingStatements))\r\n        })\r\n    }\r\n\r\n    private executeDDLWriteStatementsInOnlineIDE(workspace: Workspace, statements: SQLStatement[], database: WDatabase) {\r\n        let main: Main = <Main>this.main;\r\n        // Step 1: Update Database to newest version to avoid potential database reset\r\n        main.networkManager.getNewStatements(workspace, (new_statements, firstStatementIndex) => {\r\n\r\n            main.notifier.executeNewStatements(new_statements, firstStatementIndex, () => { },\r\n                () => {\r\n                    // Step 2: Execute new statements to see which are successful\r\n                    let sucessfullyExecutedModifyingStatements: SQLStatement[] = [];\r\n                    this.executeStatements(statements, 0, sucessfullyExecutedModifyingStatements, () => {\r\n\r\n                        if (sucessfullyExecutedModifyingStatements.length == 0)\r\n                            return;\r\n\r\n                        // Step 3: Send successful statements to server in order to retrieve new db-version-number\r\n                        main.networkManager.AddDatabaseStatements(workspace, sucessfullyExecutedModifyingStatements.map(st => st.sqlCleaned == null ? st.sql : st.sqlCleaned), (statements_before, new_version) => {\r\n\r\n                            // Step 4: If another user sent statements between steps 1 and 3 then they are in array statements_before.\r\n                            // Add all new statements to local statement list\r\n                            statements_before.forEach(st => database.statements.push(st));\r\n                            this.main.getHistoryViewer().appendStatements(statements_before);\r\n                            let modifyingStatements = sucessfullyExecutedModifyingStatements.map(st => st.sqlCleaned == null ? st.sql : st.sqlCleaned)\r\n                            database.statements = database.statements.concat(modifyingStatements);\r\n                            this.main.getHistoryViewer().appendStatements(modifyingStatements);\r\n                            database.version = new_version;\r\n\r\n                            // Step 5 (worst case): statements before is not empty, so the should be executed before the statements executed in step 2\r\n                            // => clear whole database and execute all statements in the right order, beginning with a empty database.\r\n                            if (statements_before.length > 0) {\r\n\r\n                                this.resetDatabase(database);\r\n\r\n                            } else {\r\n\r\n                                main.getDatabaseExplorer().refresh();\r\n\r\n                            }\r\n\r\n                        });\r\n                    });\r\n                }, false);\r\n        });\r\n    }\r\n\r\n    resetDatabase(database: WDatabase) {\r\n        this.main.getDatabaseTool().initializeWorker(database.templateDump, database.statements, () => {\r\n            this.main.getDatabaseExplorer().refresh();\r\n        })\r\n    }\r\n\r\n    executeStatementsString(statements: string[], fromIndex: number, callback: () => void) {\r\n        if (statements.length == 0) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (fromIndex < statements.length) {\r\n            this.main.getDatabaseTool().executeQuery(statements[fromIndex],\r\n                (results) => { this.executeStatementsString(statements, fromIndex + 1, callback) },\r\n                (error) => { console.log(\"Error when executing statement \" + statements[fromIndex] + \"\\nError : \" + error); this.executeStatementsString(statements, fromIndex + 1, callback) });\r\n        } else {\r\n            callback();\r\n        }\r\n    }\r\n\r\n\r\n    executeStatements(statements: SQLStatement[], index: number, successfullyExecutedModifyingStatements: SQLStatement[], callback: () => void, errors: RuntimeError[] = []) {\r\n\r\n        if (index >= statements.length) {\r\n            this.showErrors(errors);\r\n\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        let statement = statements[index];\r\n\r\n\r\n        let callback1 = () => {\r\n            this.executeStatements(statements, index + 1, successfullyExecutedModifyingStatements, callback, errors);\r\n        }\r\n\r\n        if (statement.ast == null) {\r\n            callback1();\r\n            return;\r\n        }\r\n\r\n        if (statement.ast.type == TokenType.keywordSelect) {\r\n            let laterSelectExists: boolean = false;\r\n            for (let j = index + 1; j < statements.length; j++) laterSelectExists = laterSelectExists || this.isSelectStatement(statements[j]);\r\n            if (laterSelectExists) {\r\n                callback1();\r\n            } else {\r\n                if (statement.ast.limitNode == null) {\r\n                    statement.sql.trimRight();\r\n                    while (statement.sql.endsWith(\";\") || statement.sql.endsWith(\"\\n\") || statement.sql.endsWith(\"\\r\")) {\r\n                        statement.sql = statement.sql.substring(0, statement.sql.length - 1);\r\n                        statement.sql.trimRight();\r\n                    }\r\n                    statement.sql += \" limit 100000\";\r\n                }\r\n                this.main.getDatabaseTool().executeQuery(statement.sql,\r\n                    (results) => { this.presentResultsIntern(statement.sql, results); callback1(); },\r\n                    (error) => { errors.push({ statement: statement, message: error }); callback1(); });\r\n            }\r\n        } else {\r\n            let sql = new StatementCleaner().clean(statement);\r\n            console.log(sql);\r\n            this.main.getDatabaseTool().executeQuery(sql, (results) => { successfullyExecutedModifyingStatements.push(statement); callback1(); }, (error) => { errors.push({ statement: statement, message: error }); callback1(); });\r\n        }\r\n\r\n    }\r\n\r\n    oldErrorDecorations: string[] = [];\r\n    showErrorDecorations(errors: RuntimeError[]) {\r\n\r\n        let minimapColors = {\r\n            \"error\": \"#bc1616\",\r\n            \"warning\": \"#cca700\",\r\n            \"info\": \"#75beff\"\r\n        }\r\n\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        let markers: monaco.editor.IMarkerData[] = [];\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n        for (let error of errors) {\r\n            let errorlevel = \"error\";\r\n\r\n            let linesDecorationsClassName: string;\r\n            let borderLeftClass: string;\r\n            let minimapColor: string = minimapColors[errorlevel];\r\n\r\n            switch (errorlevel) {\r\n                case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n            }\r\n\r\n            let severity: monaco.MarkerSeverity;\r\n            switch (errorlevel) {\r\n                case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n            }\r\n\r\n            markers.push({\r\n                startLineNumber: error.statement.from.line,\r\n                startColumn: error.statement.from.column,\r\n                endLineNumber: error.statement.to.line,\r\n                endColumn: error.statement.to.column,\r\n                message: error.message,\r\n                severity: severity\r\n            });\r\n\r\n            decorations.push({\r\n                range: {\r\n                    startLineNumber: error.statement.from.line,\r\n                    startColumn: error.statement.from.column,\r\n                    endLineNumber: error.statement.to.line,\r\n                    endColumn: error.statement.to.column,\r\n                },\r\n                options: {\r\n                    linesDecorationsClassName: linesDecorationsClassName,\r\n                    minimap: {\r\n                        position: monaco.editor.MinimapPosition.Inline,\r\n                        color: minimapColor\r\n                    }\r\n                }\r\n\r\n            });\r\n\r\n\r\n        }\r\n\r\n        let model = this.main.getCurrentlyEditedModule().model;\r\n        monaco.editor.setModelMarkers(model, 'test', markers);\r\n        this.oldErrorDecorations = model.deltaDecorations(this.oldErrorDecorations, decorations);\r\n\r\n    }\r\n\r\n    showTable(identifier: string) {\r\n        let statement = \"select * from \" + identifier + \";\";\r\n        this.main.getDatabaseTool().executeQuery(statement,\r\n            (results) => { this.presentResultsIntern(statement, results); },\r\n            (error) => { });\r\n    }\r\n\r\n\r\n\r\n    showErrors(errors: RuntimeError[]) {\r\n        let $runtimeErrorsTab = this.$bottomDiv.find('.jo_errorsTab');\r\n        let $runtimeErrorsTabHeading = this.$bottomDiv.find('.jo_errorsTabheading');\r\n\r\n        $runtimeErrorsTab.empty();\r\n        this.showErrorDecorations(errors);\r\n\r\n        if (errors.length == 0) return;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        $runtimeErrorsTabHeading.trigger(mousePointer + \"down\");\r\n\r\n        let $errorList = jQuery('<div class=\"jo_errorlist\"></div>');\r\n        $runtimeErrorsTab.append($errorList);\r\n\r\n        for (let error of errors) {\r\n            let query = error.statement.sql;\r\n            query = query.replace(/\\n/g, \" \");\r\n            query = query.replace(/\\s\\s+/g, ' ');\r\n\r\n            let $errorLine = $('<div class=\"jo_error-line\" style=\"flex-direction:column; width: fit-content\"></div>')\r\n            $errorList.append($errorLine);\r\n\r\n            $errorLine.on(mousePointer + 'down', () => {\r\n                let range = {\r\n                    startColumn: error.statement.from.column, startLineNumber: error.statement.from.line,\r\n                    endColumn: error.statement.to.column, endLineNumber: error.statement.to.line\r\n                };\r\n\r\n                this.main.getMonacoEditor().revealRangeInCenter(range);\r\n                $errorList.find('.jo_error-line').removeClass('jo_active');\r\n                $errorLine.addClass('jo_active');\r\n\r\n            })\r\n\r\n\r\n            let $sqlDiv = $('<div class=\"jo_sqlErrorStatement\"></div>');\r\n            $errorLine.append($sqlDiv);\r\n\r\n            monaco.editor.colorize(query, \"vscSQL\", {}).then(\r\n                (html) => { $sqlDiv.html(html) });\r\n\r\n            let $messageDiv = $('<div class=\"jo_sqlErrorMessage\">' + error.message + '</div>');\r\n            $errorLine.append($messageDiv);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    isSelectStatement(statement: SQLStatement): boolean {\r\n        return statement.ast != null && statement.ast.type == TokenType.keywordSelect;\r\n    }\r\n\r\n    isDDLStatement(statement: SQLStatement): boolean {\r\n        return statement.ast != null && [TokenType.keywordCreate, TokenType.keywordDrop, TokenType.keywordAlter].indexOf(statement.ast.type) >= 0;\r\n    }\r\n\r\n    isWriteStatement(statement: SQLStatement): boolean {\r\n        return statement.ast != null && [TokenType.keywordInsert, TokenType.keywordDelete, TokenType.keywordUpdate].indexOf(statement.ast.type) >= 0;\r\n    }\r\n\r\n    private presentResultsIntern(query: string, results: QueryResult[]) {\r\n        let $resultTabheading = this.$bottomDiv.find('.jo_resultTabheading');\r\n        let $resultHeader = this.$bottomDiv.find('.jo_result-header');\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        $resultTabheading.trigger(mousePointer + \"down\");\r\n        this.result = results.pop();\r\n\r\n        let headerDiv = $resultHeader;\r\n\r\n        query = query.replace(/\\n/g, \" \");\r\n        query = query.replace(/\\s\\s+/g, ' ');\r\n        query = query.replace(/limit 100000/g, '');\r\n\r\n        monaco.editor.colorize(query, \"vscSQL\", {}).then(\r\n            (html) => { headerDiv.html(html) });\r\n\r\n        this.paginationAll = this.result ? this.result.values.length : 0;\r\n        this.$infoDiv.find('.jo_pagination_all').html(`${this.paginationAll}`);\r\n        this.paginationFrom = 1;\r\n        this.$paginationDiv.show();\r\n        this.activateButtons();\r\n\r\n        this.showResults();\r\n\r\n    }\r\n\r\n    public clear() {\r\n        let $bodyDiv = this.$bottomDiv.find('.jo_result-body');\r\n        $bodyDiv.empty();\r\n        this.$paginationDiv.hide();\r\n    }\r\n\r\n    private showResultsBusy: boolean = false;\r\n    private showResultPending: boolean = false;\r\n\r\n    private showResults() {\r\n        let $bodyDiv = this.$bottomDiv.find('.jo_result-body');\r\n\r\n        if (this.result == null) {\r\n            this.$infoDiv.find('.jo_pagination_fromto').html('---');\r\n            $bodyDiv.html('Die Datenbank lieferte eine leere Ergebnistabelle.');\r\n            return;\r\n        }\r\n\r\n        let that = this;\r\n        let from = this.paginationAll == 0 ? 0 : this.paginationFrom;\r\n        let to = this.paginationAll == 0 ? 0 : Math.min(this.paginationFrom + this.paginationSize - 1, this.paginationAll);\r\n        this.$infoDiv.find('.jo_pagination_fromto').html(`${from}-${to}`)\r\n\r\n        if (this.showResultsBusy) {\r\n            if (this.showResultPending) {\r\n                return;\r\n            }\r\n            this.showResultPending = true;\r\n            let waitFunction = () => {\r\n                if (that.showResultsBusy) {\r\n                    setTimeout(() => {\r\n                        waitFunction();\r\n                    }, 200);\r\n                } else {\r\n                    that.showResultPending = false;\r\n                    that.showResults();\r\n                }\r\n            }\r\n            setTimeout(waitFunction, 200);\r\n            return;\r\n        }\r\n\r\n        this.showResultsBusy = true;\r\n\r\n        let $table = jQuery('<table></table>');\r\n        let $header = jQuery('<tr></tr>');\r\n        $table.append($header);\r\n\r\n        this.result.columns.forEach((column) => { $header.append(jQuery(`<th><div>${column}</div></th>`)) });\r\n\r\n        let rows = this.result.values.slice(this.paginationFrom - 1, this.paginationFrom + this.paginationSize - 1);\r\n\r\n        let i = 0;\r\n        let f = () => {\r\n            if (i < rows.length) {\r\n                for (let j = i; j < Math.min(i + 200, rows.length); j++) {\r\n                    let row = rows[j];\r\n                    let $row = jQuery('<tr></tr>');\r\n                    $table.append($row);\r\n                    row.forEach((cell) => { $row.append(jQuery(`<td>${cell}</td>`)) });\r\n                }\r\n                i = Math.min(i + 200, rows.length);\r\n                if (i < rows.length) {\r\n                    setTimeout(f, 30);\r\n                } else {\r\n                    $bodyDiv.empty().append($table);\r\n                    this.showResultsBusy = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        f();\r\n\r\n        // rows.forEach((row) => {\r\n        //     let $row = jQuery('<tr></tr>');\r\n        //     $table.append($row);\r\n        //     row.forEach((cell) => {$row.append(jQuery(`<td>${cell}</td>`))});\r\n        // });\r\n\r\n        // bodyDiv.empty().append($table);\r\n\r\n    }\r\n\r\n\r\n    fetchSelectedStatements(): SQLStatement[] {\r\n        let module = this.main.getCurrentlyEditedModule();\r\n        if (module == null) return null;\r\n\r\n        let monacoEditor = this.main.getMonacoEditor();\r\n        // console.log(monacoEditor.getSelection());\r\n        // console.log(monacoEditor.getPosition());\r\n\r\n        let statements: SQLStatement[] = module.getSQLSTatementsAtSelection(monacoEditor.getSelection());\r\n        for (let statement of statements) {\r\n            statement.sql = monacoEditor.getModel().getValueInRange({\r\n                startColumn: statement.from.column,\r\n                startLineNumber: statement.from.line, endColumn: statement.to.column, endLineNumber: statement.to.line\r\n            });\r\n        }\r\n\r\n        // let sqlStatement = module.getSQLStatementAtPosition(monacoEditor.getPosition());\r\n\r\n        return statements;\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { Module } from \"../compiler/parser/Module.js\";\r\nimport { ResultsetPresenter } from \"../main/gui/ResultsetPresenter.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { WDatabase } from \"../workspace/WDatabase.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ajax } from \"./AjaxHelper.js\";\r\nimport { GetNewStatementsRequest, GetNewStatementsResponse, GetWebSocketTokenResponse, LongPollingListenerResponse, RegisterLongPollingListenerRequest, WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestGetNewStatements, WebSocketResponse } from \"./Data.js\";\r\n\r\nexport class Notifier {\r\n\r\n    connection: WebSocket;\r\n    isOpen: boolean = false;\r\n    workspace: Workspace;\r\n    database: WDatabase;\r\n\r\n    constructor(public main: Main) {\r\n        // Polling is not used. \r\n        // We try long polling (see below!)\r\n\r\n        // this.startPolling();\r\n    }\r\n\r\n    connect(workspace: Workspace) {\r\n\r\n        let that = this;\r\n        this.workspace = workspace;\r\n        this.database = workspace.database;\r\n\r\n        if (this.isOpen) {\r\n            this.connection.close();\r\n        }\r\n\r\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\r\n\r\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/websocket\";\r\n            this.connection = new WebSocket(url);\r\n\r\n            this.connection.onerror = (error: Event) => { this.onError(error); }\r\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\r\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\r\n\r\n            this.connection.onopen = (event: Event) => {\r\n                let request: WebSocketRequestConnect = {\r\n                    command: 1,\r\n                    token: response.token,\r\n                    workspaceId: workspace.id,\r\n                    databaseId: workspace.database.id,\r\n                    databaseVersion: workspace.database.version\r\n                }\r\n\r\n                this.isOpen = true;\r\n                this.sendIntern(JSON.stringify(request));\r\n                this.onOpen();\r\n\r\n            }\r\n\r\n            setTimeout(() => {\r\n                that.startLongPolling()\r\n            }, 2000);\r\n\r\n        });\r\n\r\n    }\r\n\r\n    unsentMessages: string[] = [];\r\n    sendIntern(message: string) {\r\n\r\n        if (!this.isOpen) {\r\n            this.unsentMessages.push(message);\r\n        } else {\r\n            try {\r\n                this.connection.send(message);\r\n            } catch (exception) {\r\n                console.log(exception);\r\n            }\r\n        }\r\n    }\r\n\r\n    onClose(event: CloseEvent) {\r\n        this.isOpen = false;\r\n    }\r\n\r\n\r\n    disconnect() {\r\n        let message: WebSocketRequestDisconnect = {\r\n            command: 4\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n        this.connection.close();\r\n        this.workspace = null;\r\n    }\r\n\r\n    onMessage(event: MessageEvent) {\r\n\r\n        let that = this;\r\n        let response: WebSocketResponse = JSON.parse(event.data);\r\n        if (response.command == undefined) return;\r\n\r\n        switch (response.command) {\r\n            case 2: // SendStatements\r\n                that.executeNewStatements(response.newStatements, response.firstNewStatementIndex, () => {\r\n                    let request: WebSocketRequestGetNewStatements = { command: 2, databaseVersion: that.database.version };\r\n                    that.sendIntern(JSON.stringify(request));\r\n                })\r\n                break;\r\n            case 3: // server initiated disconnect\r\n                this.isOpen = false;\r\n                this.database = null;\r\n                this.workspace = null;\r\n                break;\r\n            case 4: // keep alive\r\n                break;\r\n            case 5: // rollback\r\n                if (this.database.version > response.new_version) {\r\n                    this.main.getHistoryViewer().rollbackLocal(response.new_version);\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    executeNewStatements(newStatements: string[], firstNewStatementIndex: number, callbackIfTooFewStatements: () => void, callbackIfDone: () => void = () => { }, doRefreshDatabaseExplorer: boolean = true) {\r\n        if (this.database == null) return;\r\n        let that = this;\r\n        let delta = firstNewStatementIndex - (this.database.version + 1);\r\n        if (delta > 0) {\r\n            callbackIfTooFewStatements();\r\n            callbackIfDone();\r\n            return;\r\n        } else {\r\n            if (delta < 0) {\r\n                newStatements.splice(0, -delta);\r\n                firstNewStatementIndex -= delta;\r\n            }\r\n            let statements = newStatements;\r\n            if (statements.length > 0) {\r\n                this.main.resultsetPresenter.executeStatementsString(statements, 0, () => {\r\n                    that.main.getHistoryViewer().appendStatements(statements);\r\n                    that.database.statements = that.database.statements.concat(statements)\r\n                    that.database.version = firstNewStatementIndex + newStatements.length - 1;\r\n                    if (doRefreshDatabaseExplorer) {\r\n                        that.main.databaseExplorer.refresh();\r\n                    }\r\n                    callbackIfDone();\r\n                })\r\n            } else {\r\n                callbackIfDone();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    onError(error: Event) {\r\n    }\r\n\r\n    onOpen() {\r\n        this.isOpen = true;\r\n        if (this.unsentMessages.length > 0) {\r\n            this.unsentMessages.forEach(m => this.sendIntern(m));\r\n            this.unsentMessages = [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Polling is not used. \r\n     * We try long polling!\r\n     * (see below)\r\n     */\r\n    isPolling: boolean = false;\r\n    startPolling() {\r\n        if (this.isPolling) return;\r\n        this.isPolling = true;\r\n\r\n        this.poll();\r\n\r\n    }\r\n\r\n    /**\r\n     * Polling is not used.\r\n     * We try long polling!\r\n     * (see below)\r\n     */\r\n    counter: number = 0;\r\n    poll() {\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.poll();\r\n        }, 6000);\r\n\r\n        if (!that.isOpen && that.workspace != null) {\r\n            this.getNewStatementsHttp();\r\n\r\n            // retry connecting:\r\n            that.counter++;\r\n            if (that.counter == 10) {\r\n                that.counter = 0;\r\n                that.connect(that.workspace);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getNewStatementsHttp() {\r\n        let that = this;\r\n        if (this.workspace == null || this.database == null) return;\r\n\r\n        let request: GetNewStatementsRequest = {\r\n            workspaceId: this.workspace.id,\r\n            version_before: this.workspace.database.version\r\n        }\r\n\r\n        ajax('getNewStatements', request, (response: GetNewStatementsResponse) => {\r\n\r\n            if(response.rollbackToVersion != null){\r\n                that.main.getHistoryViewer().rollbackLocal(response.rollbackToVersion);\r\n            } else {\r\n                that.executeNewStatements(response.newStatements, response.firstNewStatementIndex, () => {\r\n                    that.getNewStatementsHttp();\r\n                })\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    isLongPolling: boolean = false;\r\n    startLongPolling() {\r\n        if (this.isLongPolling) return;\r\n        this.isLongPolling = true;\r\n\r\n        this.longPoll();\r\n\r\n    }\r\n\r\n    longPollCounter: number = 0;\r\n    longPoll() {\r\n        let that = this;\r\n\r\n        if (!that.isOpen && that.workspace != null) {\r\n            let request: RegisterLongPollingListenerRequest = {\r\n                workspaceId: that.workspace.id\r\n            }\r\n\r\n            $.ajax({\r\n                type: 'POST',\r\n                async: true,\r\n                data: JSON.stringify(request),\r\n                contentType: 'application/json',\r\n                url: \"servlet/registerLongPollingListener\",\r\n                success: function (resp: string) {\r\n                    console.log(resp);\r\n                    let response: LongPollingListenerResponse = typeof resp == \"string\" ? JSON.parse(resp) : resp;\r\n                    if (resp != null && !that.isOpen && that.workspace?.id == request.workspaceId && response.success) {\r\n                        that.executeNewStatements(response.newStatements, response.firstNewStatementIndex, () => {\r\n                            that.getNewStatementsHttp();\r\n                        })\r\n\r\n                        let timeout: number = 1000;\r\n                        // retry connecting:\r\n                        that.longPollCounter++;\r\n                        if (that.longPollCounter == 10) {\r\n                            that.longPollCounter = 0;\r\n                            that.connect(that.workspace);\r\n                            timeout = 2000;\r\n                        }\r\n\r\n                        setTimeout(() => {\r\n                            that.longPoll();\r\n                        }, 2000);\r\n                    }\r\n                },\r\n                error: function (jqXHR, message) {\r\n                    if (!that.isOpen && that.workspace?.id == request.workspaceId) {\r\n                        setTimeout(() => {\r\n                            that.longPoll();\r\n                        }, 2000);\r\n                    }\r\n                }\r\n            });\r\n\r\n        } else {\r\n            setTimeout(() => {\r\n                that.longPoll();\r\n            }, 5000);\r\n        }\r\n\r\n    }\r\n\r\n}","export class WaitOverlay {\r\n\r\n    visible: boolean = false;\r\n    fadeOutPending: boolean = false;\r\n    $bitteWartenText: JQuery<HTMLElement>;\r\n    $bitteWartenProgress: JQuery<HTMLElement>;\r\n\r\n    constructor(private $waitDiv: JQuery<HTMLElement>){\r\n        this.$bitteWartenText = $waitDiv.find('.bitteWartenText');\r\n        this.$bitteWartenProgress = $waitDiv.find('.bitteWartenProgress');\r\n    }\r\n\r\n    show(message: string){\r\n        this.fadeOutPending = false;\r\n        this.$bitteWartenText.html(message);\r\n        this.$bitteWartenProgress.html('');\r\n        if(!this.visible){\r\n            this.visible = true;\r\n            this.$waitDiv.css('display', 'flex');\r\n            this.$waitDiv.hide();\r\n            this.$waitDiv.fadeIn(400);\r\n        }\r\n    }\r\n\r\n    setProgress(message: string){\r\n        this.$bitteWartenProgress.html(message);\r\n    }\r\n\r\n    hide(){\r\n        if(this.visible){\r\n            this.fadeOutPending = true;\r\n            setTimeout(() => {\r\n                if(this.fadeOutPending){\r\n                    this.fadeOutPending = false;\r\n                    this.$waitDiv.fadeOut(200, () => {\r\n                        this.$waitDiv.css('display', 'none');\r\n                    })\r\n                    this.visible = false;        \r\n                }                \r\n            }, 50);\r\n        }\r\n    }\r\n\r\n}","import { MainEmbedded } from \"../../embedded/MainEmbedded.js\";\r\nimport { copyTextToClipboard, openContextMenu } from \"../../tools/HtmlTools.js\";\r\nimport { WDatabase } from \"../../workspace/WDatabase.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\ntype HistoryPanelEntry = {\r\n    statement: string;\r\n    $div: JQuery<HTMLDivElement>;\r\n    $rollbackButton: JQuery<HTMLDivElement>;\r\n}\r\n\r\nexport class HistoryViewer {\r\n\r\n    panelEntries: HistoryPanelEntry[] = [];\r\n\r\n    constructor(private main: MainBase, private $historyPanel: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    clear() {\r\n        this.$historyPanel.empty();\r\n        this.main.getActionManager().setActive(\"rollback\", false);\r\n        this.panelEntries = [];\r\n    }\r\n\r\n    clearAndShowStatements(statements: string[]) {\r\n        this.clear();\r\n        this.appendStatements(statements);\r\n        this.main.getActionManager().setActive(\"rollback\", statements.length > 0);\r\n    }\r\n\r\n    appendStatements(statements: string[]) {\r\n        statements.forEach(stmt => {\r\n            let panelEntry = this.makePanelEntry(stmt, this.panelEntries.length + 1);\r\n            this.$historyPanel.prepend(panelEntry.$div);\r\n            this.panelEntries.unshift(panelEntry);\r\n        })\r\n\r\n        if(statements.length > 0){\r\n            this.main.getActionManager().setActive(\"rollback\", true);\r\n        }\r\n\r\n        this.makeLastButtonActive();\r\n    }\r\n\r\n    makeLastButtonActive() {\r\n        this.panelEntries.forEach(pe => pe.$rollbackButton.removeClass('jo_active'));\r\n\r\n        if (this.panelEntries.length > 0) {\r\n            this.panelEntries[0].$rollbackButton.addClass('jo_active');\r\n        }\r\n    }\r\n\r\n    makePanelEntry(statement: string, index: number): HistoryPanelEntry {\r\n        let $div = <JQuery<HTMLDivElement>>jQuery(`<div class=\"jo_panelEntry\"></div>`);\r\n        let $index = jQuery(`<div class=\"jo_panelEntryIndex\">${index}.</div>`);\r\n        let $text = jQuery(`<div class=\"jo_panelEntryText\"></div>`);\r\n        let t: string = statement.substring(0, Math.min(400, statement.length));\r\n        if (statement.length > 400) {\r\n            t += \"...\";\r\n        }\r\n        $text.text(t);\r\n        let $copybutton = <JQuery<HTMLDivElement>>jQuery(`<div class=\"img_copy jo_panelEntryCopyButton jo_active jo_button\" title=\"In die Zwischenablage kopieren\"></div>`)\r\n        let $rollbackbutton = <JQuery<HTMLDivElement>>jQuery(`<div class=\"img_undo jo_panelEntryRollbackButton jo_button\" title=\"Rollback\"></div>`)\r\n        let that = this;\r\n\r\n        $copybutton.on('click', () => {\r\n            copyTextToClipboard(statement);\r\n        })\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $rollbackbutton.on(mousePointer + 'up', (ev) => {\r\n            ev.preventDefault();\r\n            openContextMenu([{\r\n                caption: \"Abbrechen\",\r\n                callback: () => {\r\n                }\r\n            }, {\r\n                caption: \"Ich bin mir sicher: rollback!\",\r\n                color: \"#ff6060\",\r\n                callback: () => {\r\n                    this.rollback();\r\n                }\r\n            }], ev.pageX + 2, ev.pageY + 2);\r\n            ev.stopPropagation();\r\n        })\r\n\r\n        $div.append($index, $text, $copybutton, $rollbackbutton);\r\n        return {\r\n            $div: $div,\r\n            statement: statement,\r\n            $rollbackButton: $rollbackbutton\r\n        }\r\n    }\r\n\r\n    rollback() {\r\n        if (this.panelEntries.length == 0) return;\r\n\r\n        if (this.main.isEmbedded()) {\r\n            this.rollbackEmbedded();\r\n            this.main.getActionManager().setActive(\"rollback\", this.panelEntries.length > 0);\r\n        } else {\r\n            let main: Main = <Main>this.main;\r\n            main.networkManager.rollback((error: string, rollbackLocalNeeded: boolean) => {\r\n                if (error == null && rollbackLocalNeeded) {\r\n                    this.rollbackLocal();\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    rollbackLocal(new_version?: number) {\r\n        let database = this.main.getCurrentWorkspace().database;\r\n        if(new_version == null) new_version = database.version - 1;\r\n        \r\n        while(database.version > new_version){\r\n            database.statements.pop();\r\n            database.version--;\r\n        }\r\n        this.main.getDatabaseTool().initializeWorker(database.templateDump, database.statements, () => {\r\n\r\n        }, () => {\r\n            this.main.getDatabaseExplorer().refreshAfterRetrievingDBStructure();\r\n            let lastPanelEntry = this.panelEntries.shift();\r\n            lastPanelEntry.$div.remove();\r\n            this.makeLastButtonActive();\r\n            this.main.getActionManager().setActive(\"rollback\", this.panelEntries.length > 0);\r\n        })\r\n    }\r\n\r\n    rollbackEmbedded() {\r\n        let main: MainEmbedded = <MainEmbedded>this.main;\r\n        main.writeQueryManager.rollback();\r\n\r\n        this.main.getDatabaseTool().initializeWorker(main.initialTemplateDump,\r\n            main.initialStatements.concat(main.writeQueryManager.writtenStatements), () => { },\r\n            () => {\r\n                this.main.getDatabaseExplorer().refreshAfterRetrievingDBStructure();\r\n                let lastPanelEntry = this.panelEntries.shift();\r\n                lastPanelEntry.$div.remove();\r\n                this.makeLastButtonActive();\r\n            })\r\n    }\r\n\r\n}","import { ClassData, UserData, Workspaces } from \"../communication/Data.js\";\r\nimport { NetworkManager } from \"../communication/NetworkManager.js\";\r\nimport { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ActionManager } from \"./gui/ActionManager.js\";\r\nimport { BottomDiv } from \"./gui/BottomDiv.js\";\r\nimport { Editor } from \"./gui/Editor.js\";\r\nimport { Formatter } from \"./gui/Formatter.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { MainMenu } from \"./gui/MainMenu.js\";\r\nimport { ProjectExplorer } from \"./gui/ProjectExplorer.js\";\r\nimport { RightDiv } from \"./gui/RightDiv.js\";\r\nimport { Sliders } from \"./gui/Sliders.js\";\r\nimport { TeacherExplorer } from \"./gui/TeacherExplorer.js\";\r\nimport { ThemeManager } from \"./gui/ThemeManager.js\";\r\nimport { Login } from \"./Login.js\";\r\nimport { Module, File } from \"../compiler/parser/Module.js\";\r\nimport { ViewModeController } from \"./gui/ViewModeController.js\";\r\nimport { ErrorManager } from \"./gui/ErrorManager.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { DatabaseTool } from \"../tools/DatabaseTools.js\";\r\nimport { MainBase } from \"./MainBase.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { DatabaseExplorer } from \"./gui/DatabaseExplorer.js\";\r\nimport { ProgramControlButtons } from \"./gui/ProgramControlButtons.js\";\r\nimport { ResultsetPresenter } from \"./gui/ResultsetPresenter.js\";\r\nimport { Notifier } from \"../communication/Notifier.js\";\r\nimport { checkIfMousePresent } from \"../tools/HtmlTools.js\";\r\nimport { WaitOverlay } from \"./gui/WaitOverlay.js\";\r\nimport { HistoryViewer } from \"./gui/HistoryViewer.js\";\r\n\r\nexport class Main implements MainBase {\r\n    isEmbedded(): boolean {\r\n        return false;\r\n    }\r\n\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    // VORSICHT: ggf. Module -> any\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.projectExplorer.getCurrentlyEditedModule();\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n        this.projectExplorer.setModuleActive(module);\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n    getDatabaseTool(): DatabaseTool {\r\n        return this.databaseTool;\r\n    }\r\n\r\n    getDatabaseExplorer():DatabaseExplorer {\r\n        return this.databaseExplorer;\r\n    }\r\n\r\n    getResultsetPresenter(): ResultsetPresenter {\r\n        return this.resultsetPresenter;\r\n    }\r\n\r\n    getWaitOverlay(): WaitOverlay {\r\n        return this.waitOverlay;\r\n    }\r\n\r\n    getHistoryViewer(): HistoryViewer {\r\n        return this.historyViewer;\r\n    }\r\n\r\n    workspaceList: Workspace[] = [];\r\n    workspacesOwnerId: number;\r\n\r\n    // monaco_editor: monaco.editor.IStandaloneCodeEditor;\r\n    editor: Editor;\r\n    currentWorkspace: Workspace;\r\n    projectExplorer: ProjectExplorer;\r\n    teacherExplorer: TeacherExplorer;\r\n    networkManager: NetworkManager;\r\n    actionManager: ActionManager;\r\n    mainMenu: MainMenu;\r\n\r\n    login: Login;\r\n\r\n    compiler: Compiler;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    bottomDiv: BottomDiv;\r\n\r\n    startupComplete = 2;\r\n    waitForGUICallback: () => void;\r\n\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    user: UserData;\r\n    userDataDirty: boolean = false;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    rightDiv: RightDiv;\r\n\r\n    viewModeController: ViewModeController;\r\n\r\n    databaseTool: DatabaseTool;\r\n\r\n    databaseExplorer: DatabaseExplorer;\r\n\r\n    resultsetPresenter: ResultsetPresenter;\r\n\r\n    notifier: Notifier;\r\n\r\n    waitOverlay: WaitOverlay = new WaitOverlay(jQuery('.bitteWarten'));\r\n    historyViewer: HistoryViewer = new HistoryViewer(this, jQuery('.jo_historyTab'));\r\n\r\n    initGUI() {\r\n\r\n        checkIfMousePresent();\r\n\r\n        this.login = new Login(this);\r\n        this.login.initGUI();\r\n\r\n        this.databaseTool = new DatabaseTool(this);\r\n        this.databaseExplorer = new DatabaseExplorer(this, jQuery(\".jo_db_tree\"));\r\n\r\n        this.actionManager = new ActionManager(null, this);\r\n        this.actionManager.init();\r\n\r\n        this.networkManager = new NetworkManager(this, jQuery('#bottomdiv-outer .jo_updateTimerDiv'));\r\n\r\n        let sliders = new Sliders(this);\r\n        sliders.initSliders();\r\n        this.mainMenu = new MainMenu(this);\r\n        this.projectExplorer = new ProjectExplorer(this, jQuery('#leftpanel>.jo_projectexplorer'));\r\n        this.projectExplorer.initGUI();\r\n\r\n        this.bottomDiv = new BottomDiv(this, jQuery('#bottomdiv-outer>.jo_bottomdiv-inner'), jQuery('body'));\r\n\r\n        this.rightDiv = new RightDiv(this, jQuery('#rightdiv-inner'));\r\n        this.rightDiv.initGUI();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.themeManager = new ThemeManager();\r\n\r\n        this.viewModeController = new ViewModeController(jQuery(\"#view-mode\"), this);\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n        new ProgramControlButtons(this, jQuery('#controls'));\r\n\r\n        this.resultsetPresenter = new ResultsetPresenter(this, jQuery('.jo_bottomdiv-inner'));\r\n\r\n        this.notifier = new Notifier(this);\r\n\r\n    }\r\n\r\n\r\n    initEditor() {\r\n        this.editor = new Editor(this, true, false);\r\n        new Formatter().init();\r\n        // this.monaco_editor = \r\n        this.editor.initGUI(jQuery('#editor'));\r\n\r\n        let that = this;\r\n        jQuery(window).on('resize', (event) => {\r\n            jQuery('#bottomdiv-outer').css('height', '450px');\r\n            jQuery('#editor').css('height', (window.innerHeight - 450 - 30 - 2) + \"px\");\r\n            that.editor.editor.layout();\r\n            jQuery('#editor').css('height', \"\");\r\n\r\n        });\r\n\r\n        jQuery(window).trigger('resize');\r\n\r\n        this.checkStartupComplete();\r\n    }\r\n\r\n    initTeacherExplorer(classdata: ClassData[]) {\r\n        this.teacherExplorer = new TeacherExplorer(this, classdata);\r\n        this.teacherExplorer.initGUI();\r\n    }\r\n\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    start() {\r\n\r\n        if (this.waitForGUICallback != null) {\r\n            this.waitForGUICallback();\r\n        }\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.getMonacoEditor().layout();\r\n        }, 200);\r\n\r\n        this.compiler = new Compiler(this);\r\n\r\n        this.startTimer();\r\n\r\n        $(window).on('unload', function() {\r\n            \r\n            if(navigator.sendBeacon && that.user != null){\r\n                that.networkManager.sendUpdates(null, false);\r\n                that.networkManager.sendUpdateUserSettings(() => {});\r\n            }\r\n            \r\n        });\r\n\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n                this.projectExplorer.renderErrorCount(this.currentWorkspace, errors);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                if (this.projectExplorer) {\r\n                    this.version++;\r\n                }\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    removeWorkspace(w: Workspace) {\r\n        this.workspaceList.splice(this.workspaceList.indexOf(w), 1);\r\n    }\r\n\r\n    restoreWorkspaces(workspaces: Workspaces) {\r\n\r\n        this.workspaceList = [];\r\n        this.currentWorkspace = null;\r\n        // this.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\" , \"text\"));\r\n        this.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        let currentWorkspace: Workspace = null;\r\n\r\n        for (let ws of workspaces.workspaces) {\r\n\r\n            let workspace: Workspace = Workspace.restoreFromData(ws, this);\r\n            this.workspaceList.push(workspace);\r\n            if (ws.id == this.user.currentWorkspace_id) {\r\n                currentWorkspace = workspace;\r\n            }\r\n        }\r\n\r\n        this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n\r\n        if (currentWorkspace == null && this.workspaceList.length > 0) {\r\n            currentWorkspace = this.workspaceList[0];\r\n        }\r\n\r\n        if (currentWorkspace != null) {\r\n            this.projectExplorer.setWorkspaceActive(currentWorkspace);\r\n        }\r\n\r\n        if (this.workspaceList.length == 0) {\r\n\r\n            Helper.showHelper(\"newDatabaseHelper\", this, this.projectExplorer.workspaceListPanel.$captionElement);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    createNewWorkspace(name: string, owner_id: number): Workspace {\r\n        return new Workspace(name, this, owner_id);\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class ErrorManager {\r\n\r\n    oldDecorations: string[] = [];\r\n    oldErrorDecorations: string[] = [];\r\n    $errorDiv: JQuery<HTMLElement>;\r\n\r\n    $bracket_warning: JQuery<HTMLElement>;\r\n\r\n    minimapColor: {[key: string]:string } = {};\r\n\r\n    lightBulbOnClickFunctionList: {class: string, onClickFunction: () => void, title: string}[] = [];\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>, private $mainDiv: JQuery<HTMLElement>) {\r\n        this.minimapColor[\"error\"] = \"#bc1616\";\r\n        this.minimapColor[\"warning\"] = \"#cca700\";\r\n        this.minimapColor[\"info\"] = \"#75beff\";\r\n\r\n        this.$bracket_warning = $mainDiv.find(\".jo_parenthesis_warning\");\r\n\r\n        this.$bracket_warning.attr('title', 'Klammeralarm!');\r\n        this.$bracket_warning.children().attr('title', 'Klammeralarm!');\r\n\r\n        let that = this;\r\n        $mainDiv.find(\".jo_pw_undo\").on(\"click\", () => {\r\n            let editor = that.main.getMonacoEditor();\r\n            editor.trigger(\".\", \"undo\", {});\r\n        }).attr('title', 'Undo');\r\n    }\r\n\r\n    showParenthesisWarning(error: string){\r\n        if(error != null){\r\n            this.$bracket_warning.css(\"visibility\", \"visible\");\r\n            this.$bracket_warning.find(\".jo_pw_heading\").text(error);\r\n        } else {\r\n            this.$bracket_warning.css(\"visibility\", \"hidden\");\r\n        }\r\n    }\r\n\r\n    showErrors(workspace: Workspace): Map<Module, number> {\r\n\r\n        this.lightBulbOnClickFunctionList = [];\r\n\r\n        let errorCountMap: Map<Module, number> = new Map();\r\n\r\n        this.$errorDiv = this.$bottomDiv.find('.jo_tabs>.jo_errorsTab');\r\n        this.$errorDiv.empty();\r\n\r\n        let hasErrors = false;\r\n\r\n        let ms = workspace.moduleStore;\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        for (let m of ms.getModules(false)) {\r\n            let markers: monaco.editor.IMarkerData[] = [];\r\n            let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n            let $errorList: JQuery<HTMLElement>[] = [];\r\n\r\n            let errors = m.getSortedAndFilteredErrors();\r\n            errorCountMap.set(m, m.getErrorCount());\r\n\r\n            for (let error of errors) {\r\n\r\n                let linesDecorationsClassName: string;\r\n                let borderLeftClass: string;\r\n                let minimapColor: string = this.minimapColor[error.level];\r\n\r\n                switch (error.level) {\r\n                    case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                    case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                    case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n                }\r\n\r\n                if (error.quickFix != null) {\r\n                    let quickFix = error.quickFix;\r\n                    let lightBulbClass = \"lb_\" + Math.trunc(Math.random() * 1000000);\r\n                    linesDecorationsClassName = 'jo_yellowLightBulb ' + borderLeftClass + \" \" + lightBulbClass;\r\n\r\n                    this.lightBulbOnClickFunctionList.push({class: '.' + lightBulbClass, \r\n                    onClickFunction: () => {\r\n\r\n                        let edits = quickFix.editsProvider(m.model.uri);\r\n                        editor.executeEdits(\"\", edits.map((edit) => {\r\n                            let r = edit.edit.range;\r\n                            return {\r\n                                range: new monaco.Range(r.startLineNumber, r.startColumn, r.endLineNumber, r.endColumn),\r\n                                text: edit.edit.text,\r\n                                forceMoveMarkers: true\r\n                            }\r\n                        }\r\n                        ));\r\n\r\n                    },\r\n                    title: quickFix.title\r\n                })\r\n\r\n\r\n                }\r\n\r\n                this.processError(error, m, $errorList);\r\n\r\n                let severity: monaco.MarkerSeverity;\r\n                switch (error.level) {\r\n                    case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                    case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                    case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n                }\r\n\r\n                markers.push({\r\n                    startLineNumber: error.position.line,\r\n                    startColumn: error.position.column,\r\n                    endLineNumber: error.position.line,\r\n                    endColumn: error.position.column + error.position.length,\r\n                    message: error.text,\r\n                    severity: severity,\r\n                    //@ts-ignore\r\n                    relatedInformation: error.quickFix\r\n                });\r\n\r\n                decorations.push({\r\n                    range: {\r\n                        startLineNumber: error.position.line,\r\n                        startColumn: error.position.column,\r\n                        endLineNumber: error.position.line,\r\n                        endColumn: error.position.column + error.position.length\r\n                    },\r\n                    options: {\r\n                        linesDecorationsClassName: linesDecorationsClassName,\r\n                        minimap: {\r\n                            position: monaco.editor.MinimapPosition.Inline,\r\n                            color: minimapColor\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n            }\r\n\r\n            monaco.editor.setModelMarkers(m.model, 'test', markers);\r\n            m.oldErrorDecorations = m.model.deltaDecorations(m.oldErrorDecorations, decorations);\r\n\r\n            // decorations used when user clicks on error in error-list:\r\n            this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, []);\r\n\r\n\r\n            if ($errorList.length > 0 && this.$errorDiv.length > 0) {\r\n                hasErrors = true;\r\n                let $file = jQuery('<div class=\"jo_error-filename\">' + m.file.name + '&nbsp;</div>');\r\n                this.$errorDiv.append($file);\r\n                for (let $error of $errorList) {\r\n                    this.$errorDiv.append($error);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasErrors && this.$errorDiv.length > 0) {\r\n            this.$errorDiv.append(jQuery('<div class=\"jo_noErrorMessage\">Keine Fehler gefunden :-)</div>'));\r\n        }\r\n\r\n        this.registerLightbulbOnClickFunctions();\r\n\r\n        return errorCountMap;\r\n\r\n    }\r\n\r\n    registerLightbulbOnClickFunctions() {\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            for(let locf of that.lightBulbOnClickFunctionList){\r\n                    jQuery(locf.class).off('click', locf.onClickFunction);\r\n                    jQuery(locf.class).on('click', locf.onClickFunction).attr('title', locf.title);\r\n            }            \r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    processError(error: Error, m: Module, $errorDivs: JQuery<HTMLElement>[]) {\r\n\r\n        let $div = jQuery('<div class=\"jo_error-line\"></div>');\r\n        let $lineColumn = jQuery('<span class=\"jo_error-position\">[Z&nbsp;<span class=\"jo_linecolumn\">' + error.position.line + '</span>' +\r\n            ' Sp&nbsp;<span class=\"jo_linecolumn\">' + error.position.column + '</span>]</span>:&nbsp;');\r\n        let category = \"\";\r\n        switch (error.level) {\r\n            case \"error\": break;\r\n            case \"warning\": category = '<span class=\"jo_warning_category\">Warnung: </span>'; break;\r\n            case \"info\": category = '<span class=\"jo_info_category\">Info: </span>'; break;\r\n        }\r\n        let $message = jQuery('<div class=\"jo_error-text\">' + category + error.text + \"</div>\");\r\n\r\n        $div.append($lineColumn).append($message);\r\n\r\n        let that = this;\r\n        $div.on(\"mousedown\", (ev) => {\r\n            this.$errorDiv.find('.jo_error-line').removeClass('jo_active');\r\n            $div.addClass('jo_active');\r\n            that.showError(m, error);\r\n        });\r\n\r\n        $errorDivs.push($div);\r\n    }\r\n\r\n    showError(m: Module, error: Error) {\r\n\r\n        if (this.main instanceof Main) {\r\n            if (m != this.main.projectExplorer.getCurrentlyEditedModule()) {\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n        let position = error.position;\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n\r\n        let className: string = \"\";\r\n        switch (error.level) {\r\n            case \"error\": className = \"jo_revealError\"; break;\r\n            case \"warning\": className = \"jo_revealWarning\"; break;\r\n            case \"info\": className = \"jo_revealInfo\"; break;\r\n        }\r\n\r\n\r\n        this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, [\r\n            {\r\n                range: range,\r\n                options: { className: className }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n}","import { makeDiv } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { stringToDate, dateToStringWithoutTime } from \"../../tools/StringTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\ntype ModuleWithWorkspace = {\r\n    module: Module,\r\n    workspace: Workspace\r\n}\r\n\r\ntype DayWithModules = {\r\n    date: Date;\r\n    day: string;\r\n    modules: ModuleWithWorkspace[];\r\n}\r\n\r\nexport class HomeworkManager {\r\n\r\n    $homeworkTab: JQuery<HTMLElement>;\r\n    $homeworkTabLeft: JQuery<HTMLElement>;\r\n    $homeworkTabRight: JQuery<HTMLElement>;\r\n\r\n    $showRevisionButton: JQuery<HTMLElement>;\r\n    showRevisionActive: boolean = false;\r\n\r\n    diffEditor: monaco.editor.IStandaloneDiffEditor;\r\n\r\n    constructor(private main: Main, public $bottomDiv: JQuery<HTMLElement>) {\r\n        this.$homeworkTab = $bottomDiv.find('.jo_tabs>.jo_homeworkTab');\r\n    }\r\n\r\n    initGUI() {\r\n        let that = this;\r\n        this.$homeworkTab.append(this.$homeworkTabLeft = makeDiv(\"\", \"jo_homeworkTabLeft jo_scrollable\"));\r\n        this.$homeworkTab.append(this.$homeworkTabRight = makeDiv(\"\", \"jo_homeworkTabRight jo_scrollable\"));\r\n        jQuery('#view-mode').prepend(this.$showRevisionButton = makeDiv(\"\", \"jo_button jo_active jo_homeworkRevisionButton\", \"\"));\r\n        this.$showRevisionButton.on(\"click\", () => {\r\n            if (this.showRevisionActive) {\r\n                this.hideRevision();\r\n            } else {\r\n                this.showRevision(that.main.getCurrentlyEditedModule());\r\n            }\r\n        });\r\n        this.$showRevisionButton.hide();\r\n        jQuery('#diffEditor').hide();\r\n    }\r\n\r\n    showHomeWorkRevisionButton() {\r\n        this.$showRevisionButton.text(this.showRevisionActive ? \"Normalansicht\" : \"Korrekturen zeigen\");\r\n        this.$showRevisionButton.show();\r\n    }\r\n\r\n    hideHomeworkRevisionButton() {\r\n        this.$showRevisionButton.hide();\r\n    }\r\n\r\n    showRevision(module: Module) {\r\n\r\n        module.file.text = module.getProgramTextFromMonacoModel();\r\n        let file = module.file;\r\n\r\n        jQuery('#editor').hide();\r\n        jQuery('#diffEditor').show();\r\n\r\n        var originalModel = monaco.editor.createModel(file.text_before_revision, \"myJava\");\r\n        var modifiedModel = monaco.editor.createModel(file.text, \"myJava\");\r\n\r\n        this.diffEditor = monaco.editor.createDiffEditor(document.getElementById(\"diffEditor\"), {\r\n            // You can optionally disable the resizing\r\n            enableSplitViewResizing: true,\r\n            originalEditable: false,\r\n            readOnly: true,\r\n            // Render the diff inline\r\n            renderSideBySide: true\r\n        });\r\n\r\n        this.diffEditor.setModel({\r\n            original: originalModel,\r\n            modified: modifiedModel\r\n        });\r\n\r\n        this.showRevisionActive = true;\r\n        this.showHomeWorkRevisionButton();\r\n    }\r\n\r\n    hideRevision() {\r\n        if (this.showRevisionActive) {\r\n\r\n            jQuery('#diffEditor').hide();\r\n            this.diffEditor.dispose();\r\n            this.diffEditor = null;\r\n            jQuery('#editor').show();\r\n\r\n            this.showRevisionActive = false;\r\n            this.showHomeWorkRevisionButton();\r\n        }\r\n    }\r\n\r\n\r\n    attachToWorkspaces(workspaces: Workspace[]) {\r\n\r\n        let daysWithModules: DayWithModules[] = [];\r\n        let map: { [day: string]: DayWithModules } = {};\r\n\r\n        workspaces.forEach(ws => {\r\n            ws.moduleStore.getModules(false).forEach(module => {\r\n\r\n                let dateString = module.file.submitted_date;\r\n                if (dateString != null) {\r\n\r\n                    let date: Date = stringToDate(dateString);\r\n                    let dateWithoutTime = dateToStringWithoutTime(date);\r\n                    let dwm: DayWithModules = map[dateWithoutTime];\r\n                    if (dwm == null) {\r\n                        dwm = {\r\n                            date: date,\r\n                            day: dateWithoutTime,\r\n                            modules: []\r\n                        };\r\n                        map[dateWithoutTime] = dwm;\r\n                        daysWithModules.push(dwm);\r\n                    }\r\n                    dwm.modules.push({module: module, workspace: ws});\r\n\r\n                }\r\n\r\n            });\r\n\r\n        });\r\n\r\n        this.$homeworkTabLeft.empty();\r\n        this.$homeworkTabRight.empty();\r\n\r\n        let that = this;\r\n\r\n        this.$homeworkTabLeft.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgabetage:\"));\r\n\r\n\r\n        daysWithModules.sort((a, b) => {\r\n            if (a.date.getFullYear() != b.date.getFullYear()) return -Math.sign(a.date.getFullYear() - b.date.getFullYear());\r\n            if (a.date.getMonth() != b.date.getMonth()) return -Math.sign(a.date.getMonth() - b.date.getMonth());\r\n            if (a.date.getDate() != b.date.getDate()) return -Math.sign(a.date.getDate() - b.date.getDate());\r\n            return 0;\r\n        });\r\n\r\n        let first: boolean = true;\r\n\r\n        daysWithModules.forEach(dwm => {\r\n\r\n            dwm.modules.sort((m1, m2) => m1.module.file.name.localeCompare(m2.module.file.name));\r\n\r\n            let $div = makeDiv(\"\", \"jo_homeworkDate\", dwm.day);\r\n            this.$homeworkTabLeft.append($div);\r\n\r\n            $div.on(\"click\", (e) => {\r\n                this.$homeworkTabLeft.find('.jo_homeworkDate').removeClass('active');\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            });\r\n\r\n            if (first) {\r\n                first = false;\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    select(dwm: DayWithModules) {\r\n        this.$homeworkTabRight.empty();\r\n        this.$homeworkTabRight.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgegebene Dateien:\"));\r\n        let that = this;\r\n        dwm.modules.forEach(moduleWithWorkspace => {\r\n            let $div = jQuery(`<div class=\"jo_homeworkEntry\">Workspace <span class=\"jo_homework-workspace\">\r\n                    ${moduleWithWorkspace.workspace.name}</span>, Datei <span class=\"jo_homework-file\">\r\n                    ${moduleWithWorkspace.module.file.name}</span> (Abgabe: ${moduleWithWorkspace.module.file.submitted_date} )</div>`);\r\n            that.$homeworkTabRight.append($div);\r\n            $div.on(\"click\", () => {\r\n                    that.main.projectExplorer.setWorkspaceActive(moduleWithWorkspace.workspace);\r\n                    that.main.projectExplorer.setModuleActive(moduleWithWorkspace.module);\r\n                    that.main.projectExplorer.fileListPanel.select(moduleWithWorkspace.module, false);\r\n            });\r\n        })\r\n        \r\n    }\r\n\r\n\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { ErrorManager } from \"./ErrorManager.js\";\r\nimport { HomeworkManager } from \"./HomeworkManager.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class BottomDiv {\r\n\r\n    errorManager: ErrorManager;\r\n    homeworkManager: HomeworkManager;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>, public $mainDiv: JQuery<HTMLElement>) {\r\n\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_homeworkTabheading').length > 0) {\r\n            this.homeworkManager = new HomeworkManager(<Main>main, $bottomDiv);\r\n        }\r\n\r\n        this.errorManager = new ErrorManager(main, $bottomDiv, $mainDiv);\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$bottomDiv);\r\n        if (this.homeworkManager != null) this.homeworkManager.initGUI();\r\n\r\n        this.$bottomDiv.find('.jo_tabs').children().first().trigger(\"click\");\r\n\r\n    }\r\n\r\n    showHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'visible');\r\n        jQuery('.jo_homeworkTabheading').trigger(\"mousedown\");\r\n\r\n    }\r\n\r\n    hideHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'hidden');\r\n        jQuery('.jo_tabheadings').children().first().trigger(\"mousedown\");\r\n\r\n    }\r\n\r\n\r\n}","\nexport class EmbeddedSlider {\n\n    $sliderDiv: JQuery<HTMLElement>;\n\n    /**\n     * A div contains $container and another div. Between the latter two \n     * a slider should get inserted.\n     * @param $container \n     * @param firstLast true, if $container is left/on top of other div; false if otherwise\n     * @param horVert true, if $container and other div are left/right of another; false if they are on top/below each other\n     * @param callback \n     * @param $otherDiv \n     */\n    constructor(private $container: JQuery<HTMLElement>, \n        private firstLast: boolean, private horVert: boolean,\n         private callback: (newLength: number) => void, private $otherDiv?: JQuery<HTMLElement>){\n            this.initSlider();\n    }\n\n    initSlider() {\n        let that = this;\n\n        if(this.$otherDiv == null){\n            this.$container.parent().children().each((index, element) => {\n                if(element != this.$container[0]){\n                    that.$otherDiv = jQuery(element);\n                }\n            });\n        }\n\n        this.$sliderDiv = jQuery('<div class=\"joe_slider\"></div>');\n\n        this.$sliderDiv.css({\n            width: this.horVert ? \"100%\" : \"4px\",\n            height: this.horVert ? \"4px\" : \"100%\",\n            cursor: this.horVert ? \"row-resize\" : \"col-resize\",\n        });\n\n        if(this.firstLast){\n            this.$sliderDiv.css({\n                top: \"0px\",\n                left: \"0px\"\n            });\n        } else {\n            if(this.horVert){\n                this.$sliderDiv.css({\n                    bottom: \"0px\",\n                    left: \"0px\"\n                });    \n            } else {\n                this.$sliderDiv.css({\n                    top: \"0px\",\n                    right: \"0px\"\n                });    \n            }\n        }\n\n        this.$container.append(this.$sliderDiv);\n\n        this.$sliderDiv.on(\"mousedown\", (md: JQuery.MouseDownEvent) => {\n\n            let x = md.clientX;\n            let y = md.clientY;\n\n            jQuery(document).on(\"mousemove.slider\", (mm: JQuery.MouseMoveEvent) => {\n                let dx = mm.clientX - x;\n                let dy = mm.clientY - y;\n\n                that.slide(dx, dy);\n                \n                x = mm.clientX;\n                y = mm.clientY;\n\n            });\n\n            jQuery(document).on(\"mouseup.slider\", () => {\n                jQuery(document).off(\"mousemove.slider\");\n                jQuery(document).off(\"mouseup.slider\");\n            });\n\n\n        });\n\n        setTimeout(() => {\n            that.slide(1, 1);\n        }, 600);\n\n    }\n\n    setColor(color: string){\n        this.$sliderDiv.css('background-color', color);\n    }\n\n    slide(dx: number, dy: number){\n        if(this.horVert){\n            let height = Number.parseInt(this.$container.css('height').replace('px', ''));\n            let otherHeight = Number.parseInt(this.$otherDiv.css('height').replace('px', ''));\n            let newHeight = this.firstLast ? height -= dy : height += dy;\n            let newOtherHeight = this.firstLast ? otherHeight += dy : otherHeight -= dy;\n            this.$container.css('height', newHeight + \"px\");\n            this.$otherDiv.css('height', newOtherHeight + \"px\");\n            this.callback(newHeight);\n        } else {\n            let width = Number.parseInt(this.$container.css('width').replace('px', ''));\n            let otherWidth = Number.parseInt(this.$otherDiv.css('width').replace('px', ''));\n            let newWidth = this.firstLast ? width -= dx : width += dx;\n            let newOtherWidth = this.firstLast ? otherWidth += dx : otherWidth -= dx;\n            this.$container.css('width', newWidth + \"px\");\n            this.$otherDiv.css('width', newOtherWidth + \"px\");\n            this.callback(newWidth);\n        }\n        this.$container.css('flex', \"0 1 auto\");\n\n    }\n\n\n}","import { Module, ModuleStore } from \"../compiler/parser/Module.js\";\nimport { MainEmbedded } from \"./MainEmbedded.js\";\nimport { openContextMenu, makeEditable } from \"../tools/HtmlTools.js\";\nimport { JOScript, ScriptType } from \"./EmbeddedStarter.js\";\n\ntype FileData = {\n    type: ScriptType,\n    module?: Module,\n    hint?: string,\n    $fileDiv: JQuery<HTMLElement>\n}\n\nexport class EmbeddedFileExplorer {\n\n    currentFile: FileData;\n    files: FileData[] = [];\n\n    constructor(private moduleStore: ModuleStore, private $fileListDiv: JQuery<HTMLElement>, private main: MainEmbedded) {\n\n        let that = this;\n\n        for (let module of moduleStore.getModules(false)) {\n\n            this.addModule(module);\n\n        }\n\n        let $filesDiv = $fileListDiv.parent();\n        let $addButton = jQuery('<div class=\"joe_addFileButton jo_button img_add-dark jo_active\" title=\"Datei hinzufügen\"></div>');\n        $filesDiv.append($addButton);\n\n        $addButton.on(\"click\", () => {\n\n            let module = this.main.addModule({ text: \"\", title: \"Neue Datei.java\", type: \"sql\" });\n            let fileData = this.addModule(module);\n\n            this.renameElement(fileData, () => {\n                // if there's no file yet and then one is added and subsequently renamed: select it!\n                if (that.currentFile != fileData) {\n                    that.selectFile(fileData);\n                }\n            });\n        });\n\n\n    }\n\n    removeAllFiles() {\n        this.files.forEach(f => this.removeFile(f));\n    }\n\n\n    addHint(script: JOScript): void {\n        let that = this;\n        let $fileDiv = jQuery('<div class=\"jo_file jo_hint\" ><div class=\"jo_fileimage\"></div><div class=\"jo_filename\" style=\"line-height: 22px\">' +\n            script.title + '</div><div class=\"jo_additionalButtons\"></div></div></div>');\n        this.$fileListDiv.append($fileDiv);\n\n        let fileData: FileData = {\n            module: null,\n            $fileDiv: $fileDiv,\n            type: \"hint\",\n            hint: script.text\n        };\n\n        this.files.push(fileData);\n\n        $fileDiv.on(\"click\", (event) => {\n            that.selectFile(fileData);\n        });\n\n    }\n\n\n    addModule(module: Module): FileData {\n        let that = this;\n        let $fileDiv = jQuery(`<div class=\"jo_file jo_java\" >\n        <div class=\"jo_fileimage\"></div>\n        <div class=\"jo_filename\" style=\"line-height: 22px\">${module.file.name}</div>\n        <div class=\"jo_additionalButtonStart\"></div>\n        <div class=\"jo_delete img_delete jo_button jo_active\" title=\"Datei löschen\"></div></div></div>`);\n        this.$fileListDiv.append($fileDiv);\n\n        let fileData: FileData = {\n            module: module,\n            $fileDiv: $fileDiv,\n            type: \"sql\"\n        };\n\n        this.files.push(fileData);\n\n        module.file.panelElement = {\n            name: module.file.name,\n            $htmlFirstLine: $fileDiv,\n            isFolder: false,\n            path: []\n        }\n\n        $fileDiv.find('.jo_delete').on(\"mousedown\", (e: JQuery.MouseDownEvent) => {\n            that.onDelete(fileData, e);\n        })\n\n        $fileDiv.find('.jo_delete').on(\"click\", (e) => { e.preventDefault(); e.stopPropagation() });\n\n        $fileDiv.on(\"click\", (event) => {\n            that.selectFile(fileData);\n        });\n\n        $fileDiv[0].addEventListener(\"contextmenu\", function (event) {\n            event.preventDefault();\n            openContextMenu([{\n                caption: \"Umbenennen\",\n                callback: () => {\n                    that.renameElement(fileData, () => { });\n                }\n            }], event.pageX, event.pageY);\n        }, false);\n\n        return fileData;\n\n    }\n\n    onDelete(fileData: FileData, ev: JQuery.MouseDownEvent) {\n        ev.preventDefault();\n        ev.stopPropagation();\n        let that = this;\n        openContextMenu([{\n            caption: \"Abbrechen\",\n            callback: () => {\n                // nothing to do.\n            }\n        }, {\n            caption: \"Ich bin mir sicher: löschen!\",\n            color: \"#ff6060\",\n            callback: () => {\n                that.removeFile(fileData);\n            }\n        }], ev.pageX + 2, ev.pageY + 2);\n\n    }\n\n    removeFile(fileData: FileData) {\n        fileData.$fileDiv.remove();\n        this.main.removeModule(fileData.module);\n        this.files = this.files.filter((fd) => fd != fileData);\n        if (this.currentFile == fileData) {\n            if (this.files.length > 0) {\n                this.selectFile(this.files[0]);\n            } else {\n                this.main.getMonacoEditor().setValue(\"Keine Datei vorhanden.\");\n                this.main.getMonacoEditor().updateOptions({ readOnly: true });\n            }\n        }\n\n        this.files.forEach((file) => {\n            if(file.module != null){                // Hints have module == null\n                file.module.file.saved = false;\n            }\n        });\n    }\n\n    removeModule(module: Module) {\n        for (let fileData of this.files) {\n            if (fileData.module == module) {\n                this.removeFile(fileData);\n            }\n        }\n    }\n\n    renameElement(fileData: FileData, callback: () => void) {\n        let that = this;\n        let $div = fileData.$fileDiv.find('.jo_filename');\n        let pointPos = fileData.module.file.name.indexOf('.');\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\n        makeEditable($div, $div, (newText: string) => {\n            fileData.module.file.name = newText;\n            $div.html(newText);\n            if (callback != null) callback();\n        }, selection);\n\n    }\n\n\n    setFirstFileActive() {\n        if (this.files.length > 0) {\n            this.selectFile(this.files[0]);\n        }\n    }\n\n    selectFile(fileData: FileData) {\n        if (fileData == null) return;\n        switch (fileData.type) {\n            case \"sql\":\n                this.main.$hintDiv.hide();\n                this.main.$monacoDiv.show();\n                this.main.setModuleActive(fileData.module);\n                this.main.getMonacoEditor().focus();\n                break;\n            case \"hint\":\n                this.main.$monacoDiv.hide();\n                this.main.$hintDiv.show();\n\n                let syntaxMap: { [code: string]: string } = {};\n                let code: string[] = [];\n\n                //@ts-ignore\n                let md1 = window.markdownit({\n                    highlight: function (str, lang) {\n                        code.push(str);\n                        return \"\";\n                    }\n                });\n\n                md1.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\n                    var token = tokens[idx];\n                    code.push(token.content);\n                    // pass token to default renderer.\n                    return \"\"; //md1.renderer.rules.code_block(tokens, idx, options, env, self);\n                };\n\n                md1.render(fileData.hint);\n\n                this.colorize(code, syntaxMap, () => {\n                    //@ts-ignore\n                    let md2 = window.markdownit({\n                        highlight: function (str, lang) {\n                            return syntaxMap[str];\n                        }\n                    });\n\n                    md2.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\n                        var token = tokens[idx];\n                        // pass token to default renderer.\n                        return syntaxMap[token.content].replace(\"<br/>\", \"\");\n                    };\n\n\n                    let html = md2.render(fileData.hint);\n                    this.main.$hintDiv.html(html);\n                });\n                this.$fileListDiv.find('.jo_file').removeClass('jo_active');\n                fileData.$fileDiv.addClass('jo_active');\n                break;\n        }\n    }\n\n    colorize(code: string[], codeMap: { [code: string]: string }, callback: () => void) {\n        let that = this;\n        if (code.length > 0) {\n            let uncoloredtext = code.pop();\n            monaco.editor.colorize(uncoloredtext, 'myJava', { tabSize: 3 }).then((text) => {\n                codeMap[uncoloredtext] = text;\n                that.colorize(code, codeMap, callback);\n            }\n            );\n        } else {\n            callback();\n        }\n\n    }\n\n\n    markFile(module: Module) {\n        this.$fileListDiv.find('.jo_file').removeClass('jo_active');\n\n        this.currentFile = this.files.find((fileData) => fileData.module == module);\n\n        if (this.currentFile != null) this.currentFile.$fileDiv.addClass('jo_active');\n\n    }\n\n\n\n}","export class EmbeddedIndexedDB {\n\n    private db: IDBDatabase;\n\n    constructor(private databaseIdentifier: string){\n\n    }\n\n    public open(successCallback: () => void) {\n\n        if (window.indexedDB) {\n\n            let request: IDBOpenDBRequest = window.indexedDB.open(this.databaseIdentifier, 1);\n\n            let that = this;\n\n            request.onerror = function (this: IDBRequest<IDBDatabase>, ev: Event) {\n                console.log(\"Couldn't open IndexedDB: \" + ev.type);\n            };\n\n            request.onsuccess = function (this: IDBRequest<IDBDatabase>, ev: Event) {\n                that.db = request.result;\n                that.db.onerror = function(event) {\n                    // Allgemeine Fehlerbehandlung, die für alle Anfragen an die Datenbank gilt. \n                    // @ts-ignore\n                    console.log(\"Datenbankfehler: \" + event.target.error.message);\n                  };\n                  successCallback();\n            };\n\n            request.onupgradeneeded = function(ev: Event){\n                // @ts-ignore\n                that.db = ev.target.result;\n                let objectStoreScripts = that.db.createObjectStore(\"scripts\", { keyPath: \"scriptId\", autoIncrement: false});\n                objectStoreScripts.transaction.oncomplete = function(event) {}\n\n                let objectStoreDatabases = that.db.createObjectStore(\"databases\", { keyPath: \"databaseId\", autoIncrement: false});\n                objectStoreScripts.transaction.oncomplete = function(event) {}\n\n            }\n\n        } else {\n            console.log(\"IndexedDB not available.\");\n        }\n\n    }\n\n\n    public writeScript(scriptId: string, script: string){\n\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\n\n        scriptObjectStore.put({\n            scriptId: scriptId,\n            script: script\n        });\n\n    }\n\n    public removeScript(scriptId: string){\n\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\n\n        scriptObjectStore.delete(scriptId);\n\n    }\n\n\n    public getScript(scriptId: string, callback: (script: string) => void){\n\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\n\n        let request = scriptObjectStore.get(scriptId);\n\n        request.onerror = (event) => {\n            callback(null);\n        }\n\n        request.onsuccess = (event) => {\n            if(request.result == null){\n                callback(null);\n            } else {\n                callback(request.result.script);\n            }\n        }\n\n    }\n\n    public writeDatabase(databaseID: string, database: string){\n\n        let databaseObjectStore = this.db.transaction(\"databases\", \"readwrite\").objectStore(\"databases\");\n\n        databaseObjectStore.put({\n            databaseId: databaseID,\n            database: database\n        });\n\n    }\n\n    public removeDatabase(databaseId: string){\n\n        let databaseObjectStore = this.db.transaction(\"databases\", \"readwrite\").objectStore(\"databases\");\n\n        databaseObjectStore.delete(databaseId);\n\n    }\n\n\n    public getDatabase(databaseId: string, callback: (database: string) => void){\n\n        let databaseObjectStore = this.db.transaction(\"databases\", \"readwrite\").objectStore(\"databases\");\n\n        let request = databaseObjectStore.get(databaseId);\n\n        request.onerror = (event) => {\n            callback(null);\n        }\n\n        request.onsuccess = (event) => {\n            if(request.result == null){\n                callback(null);\n            } else {\n                callback(request.result.database);\n            }\n        }\n\n    }\n\n\n}","import { SQLStatement } from \"../compiler/parser/Parser.js\";\r\nimport { WriteQueryListener } from \"../main/gui/ResultsetPresenter.js\";\r\nimport { DatabaseTool } from \"../tools/DatabaseTools.js\";\r\nimport { EmbeddedIndexedDB } from \"./EmbeddedIndexedDB.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\n\r\n\r\nexport class WriteQueryManager implements WriteQueryListener {\r\n\r\n    indexedDB: EmbeddedIndexedDB;\r\n    databaseTool: DatabaseTool;\r\n\r\n    statementsToExecute: string[] = [];\r\n\r\n    writtenStatements: string[] = [];\r\n\r\n    statementsToWrite: string[] = [];\r\n\r\n\r\n    constructor(private main: MainEmbedded, private databaseIdentifier: string) {\r\n\r\n    }\r\n\r\n    indexedDBReady(indexedDB: EmbeddedIndexedDB) {\r\n        this.indexedDB = indexedDB;\r\n        this.indexedDB.getDatabase(this.databaseIdentifier, (db: string) => {\r\n            if (db != null) {\r\n                this.writtenStatements = JSON.parse(db);\r\n                this.statementsToExecute = this.writtenStatements.slice();\r\n\r\n                this.main.historyViewer.clear();\r\n                this.main.historyViewer.appendStatements(this.statementsToExecute);\r\n\r\n                this.executeStatements();\r\n                this.writeStatementsIfNecessary();\r\n            }\r\n        })\r\n    }\r\n\r\n    reset() {\r\n        this.statementsToWrite = [];\r\n        this.writtenStatements = [];\r\n        this.statementsToExecute = [];\r\n        this.main.historyViewer.clear();\r\n    }\r\n\r\n    writeStatementsIfNecessary() {\r\n        if (this.indexedDB != null && this.statementsToWrite.length > 0) {\r\n            this.forceWriteStatements();\r\n        }\r\n    }\r\n\r\n    forceWriteStatements() {\r\n        this.writtenStatements = this.writtenStatements.concat(this.statementsToWrite);\r\n        this.statementsToWrite = [];\r\n        this.indexedDB.writeDatabase(this.databaseIdentifier, JSON.stringify(this.writtenStatements));\r\n    }\r\n\r\n    atLeastOneExecuted: boolean = false;\r\n    count: number;\r\n    executeStatements() {\r\n        if (this.databaseTool != null && this.statementsToExecute.length > 0) {\r\n            if (!this.atLeastOneExecuted) {\r\n                this.main.$databaseResetButton.fadeIn(200);\r\n                this.count = this.statementsToExecute.length;\r\n                this.main.waitOverlay.show(\"Schreibe lokale Datenbankänderungen ...\");\r\n            }\r\n            this.main.waitOverlay.setProgress(Math.round(100 * (1 - this.statementsToExecute.length / this.count)) + \" %\")\r\n            let statement = this.statementsToExecute.shift();\r\n            this.atLeastOneExecuted = true;\r\n            this.databaseTool.executeQuery(statement, () => { this.executeStatements() }, () => { this.executeStatements() });\r\n        } else {\r\n            if (this.atLeastOneExecuted) {\r\n                this.main.databaseExplorer.refresh();\r\n                this.atLeastOneExecuted = false;\r\n                this.main.waitOverlay.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    notify(statements: SQLStatement[]): void {\r\n        this.main.$databaseResetButton.fadeIn(200);\r\n        let statementsSql = statements.map(stmt => stmt.sqlCleaned == null ? stmt.sql : stmt.sqlCleaned);\r\n        this.statementsToWrite = this.statementsToWrite.concat(statementsSql);\r\n        this.main.historyViewer.appendStatements(statementsSql);\r\n        this.writeStatementsIfNecessary();\r\n    }\r\n\r\n    databaseReady(dbTool: DatabaseTool) {\r\n        this.databaseTool = dbTool;\r\n        this.executeStatements();\r\n    }\r\n\r\n    rollback() {\r\n        this.writeStatementsIfNecessary();\r\n        this.writtenStatements.pop();\r\n        this.forceWriteStatements();\r\n    }\r\n\r\n\r\n\r\n}","import { MainBase } from \"../main/MainBase.js\";\r\nimport { DatabaseTool } from \"./DatabaseTools.js\";\r\nimport { MySqlImporter } from \"./MySqlImporter.js\";\r\n\r\nexport type LoadableDatabase = {\r\n    binDump?: Uint8Array,\r\n    statements?: string[]\r\n}\r\n\r\nexport class DatabaseFetcher {\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    public async load(url: string): Promise<LoadableDatabase> {\r\n        let urlWithoutProtocol = url.replace(\"https://\", \"\")\r\n            .replace(\"http://\", \"\").toLocaleLowerCase();\r\n\r\n        let urlLowerCase = urlWithoutProtocol.toLocaleLowerCase();\r\n\r\n        let templateDump: Uint8Array = await this.fetchTemplateFromCache(urlWithoutProtocol);\r\n        if (templateDump != null) {\r\n            if (DatabaseTool.getDumpType(templateDump) == \"binaryCompressed\") {\r\n                // @ts-ignore\r\n                templateDump = pako.inflate(templateDump);\r\n            }\r\n            return { binDump: templateDump }\r\n        }\r\n\r\n        let db: LoadableDatabase;\r\n        if (urlLowerCase.endsWith(\".sqlite\")) {\r\n            db = await this.loadSqLiteDump(url, urlWithoutProtocol);\r\n        } else if (urlLowerCase.endsWith(\".zip\") || urlLowerCase.endsWith(\".sql\")) {\r\n            db = await this.loadMySql(url, urlWithoutProtocol);\r\n        }\r\n\r\n        this.saveDatabaseToCache(urlWithoutProtocol, db.binDump);\r\n\r\n        return db;\r\n\r\n    }\r\n\r\n    loadMySql(url: string, urlWithoutProtocol: string): LoadableDatabase | PromiseLike<LoadableDatabase> {\r\n        let mySqlImporter = new MySqlImporter(this.main);\r\n        return mySqlImporter.loadFromUrl(url);\r\n    }\r\n\r\n    async loadSqLiteDump(url: string, urlWithoutProtocol: string): Promise<LoadableDatabase> {\r\n\r\n        return new Promise((resolve, reject) => {\r\n            jQuery.ajax({\r\n                type: 'GET',\r\n                async: true,\r\n                url: url,\r\n                xhrFields: { responseType: 'arraybuffer' },\r\n                success: function (response: any) {\r\n                    let db = new Uint8Array(response);\r\n                    // @ts-ignore\r\n                    if (DatabaseTool.getDumpType(db) == \"binaryCompressed\") db = pako.inflate(db);\r\n                    resolve({ binDump: db });\r\n                },\r\n                error: function (jqXHR, message) {\r\n                    reject(message);\r\n                }\r\n            });\r\n\r\n        })\r\n\r\n    }\r\n\r\n    cutSqlToStatements(sql: string): string[] {\r\n        sql = sql.replace(/\\r\\n/g, \"\\n\");\r\n\r\n        let statements: string[] = [];\r\n        if (sql.indexOf(\"~@~\") >= 0) {\r\n            statements = sql.split(\"~@~\");\r\n        } else {\r\n            statements = sql.split(\";\\n\");\r\n        }\r\n        return statements;\r\n    }\r\n\r\n\r\n    async fetchTemplateFromCache(databaseIdentifier: string): Promise<Uint8Array> {\r\n        if (databaseIdentifier == null) { return null; }\r\n\r\n        if (!this.cacheAvailable()) return (null);\r\n\r\n        let cache = await caches.open('my-cache');\r\n\r\n        let value = await cache.match(databaseIdentifier);\r\n\r\n        if(value == null) return null;\r\n\r\n        let buffer = await value.arrayBuffer();\r\n\r\n        return new Uint8Array(buffer);\r\n\r\n    }\r\n\r\n    async saveDatabaseToCache(databaseIdentifier: string, templateDump: Uint8Array | string) {\r\n        if (!this.cacheAvailable()) return;\r\n\r\n        let cache = await caches.open('my-cache');\r\n\r\n        cache.put(databaseIdentifier, new Response(templateDump));\r\n    }\r\n\r\n    cacheAvailable(): boolean {\r\n        return 'caches' in self;\r\n    }\r\n\r\n}","import { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\nimport { Module, File } from \"../compiler/parser/Module.js\";\nimport { ActionManager } from \"../main/gui/ActionManager.js\";\nimport { BottomDiv } from \"../main/gui/BottomDiv.js\";\nimport { Editor } from \"../main/gui/Editor.js\";\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\nimport { RightDiv } from \"../main/gui/RightDiv.js\";\nimport { MainBase } from \"../main/MainBase.js\";\nimport { Workspace } from \"../workspace/Workspace.js\";\nimport { JOScript } from \"./EmbeddedStarter.js\";\nimport { makeDiv, makeTabs, openContextMenu } from \"../tools/HtmlTools.js\";\nimport { EmbeddedSlider } from \"./EmbeddedSlider.js\";\nimport { EmbeddedFileExplorer } from \"./EmbeddedFileExplorer.js\";\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\nimport { EmbeddedIndexedDB } from \"./EmbeddedIndexedDB.js\";\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\nimport { DatabaseTool } from \"../tools/DatabaseTools.js\";\nimport { DatabaseExplorer } from \"../main/gui/DatabaseExplorer.js\";\nimport { ResultsetPresenter } from \"../main/gui/ResultsetPresenter.js\";\nimport { WaitOverlay } from \"../main/gui/WaitOverlay.js\";\nimport { WriteQueryManager } from \"./WriteQueryManager.js\";\nimport { DatabaseFetcher } from \"../tools/DatabaseLoader.js\";\nimport { DatabaseImportExport } from \"../tools/DatabaseImportExport.js\";\nimport { HistoryViewer } from \"../main/gui/HistoryViewer.js\";\nimport { WDatabase } from \"../workspace/WDatabase.js\";\n\ntype JavaOnlineConfig = {\n    withFileList?: boolean,\n    withOutput?: boolean,\n    withErrorList?: boolean,\n    withBottomPanel?: boolean,\n    id?: string,\n    databaseURL?: string\n}\n\nexport class MainEmbedded implements MainBase {\n    isEmbedded(): boolean { return true; }\n\n    getCompiler(): Compiler {\n        return this.compiler;\n    }\n    getCurrentWorkspace(): Workspace {\n        return this.currentWorkspace;\n    }\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\n        return this.editor.editor;\n    }\n\n    getRightDiv(): RightDiv {\n        return this.rightDiv;\n    }\n\n    getBottomDiv(): BottomDiv {\n        return this.bottomDiv;\n    }\n\n    getActionManager(): ActionManager {\n        return this.actionManager;\n    }\n\n    getCurrentlyEditedModule(): Module {\n        if (this.config.withFileList) {\n            return this.fileExplorer.currentFile?.module;\n        } else {\n            return this.currentWorkspace.moduleStore.getFirstModule();\n        }\n    }\n\n    getDatabaseTool(): DatabaseTool {\n        return this.databaseTool;\n    }\n\n    getDatabaseExplorer(): DatabaseExplorer {\n        return this.databaseExplorer;\n    }\n\n    getResultsetPresenter(): ResultsetPresenter {\n        return this.resultsetPresenter;\n    }\n\n    getWaitOverlay(): WaitOverlay {\n        return this.waitOverlay;\n    }\n\n    getHistoryViewer(): HistoryViewer {\n        return this.historyViewer;\n    }\n\n    config: JavaOnlineConfig;\n\n    editor: Editor;\n    programPointerDecoration: string[] = [];\n    programPointerModule: Module;\n\n    currentWorkspace: Workspace;\n    actionManager: ActionManager;\n\n    compiler: Compiler;\n\n    $dbTreeDiv: JQuery<HTMLElement>;\n\n    $debuggerDiv: JQuery<HTMLElement>;\n\n    bottomDiv: BottomDiv;\n    $filesListDiv: JQuery<HTMLElement>;\n\n    $hintDiv: JQuery<HTMLElement>;\n    $monacoDiv: JQuery<HTMLElement>;\n    $codeResetButton: JQuery<HTMLElement>;\n    $databaseResetButton: JQuery<HTMLElement>;\n\n    programIsExecutable = false;\n    version: number = 0;\n\n    timerHandle: any;\n\n    rightDiv: RightDiv;\n    $rightDivInner: JQuery<HTMLElement>;\n\n    fileExplorer: EmbeddedFileExplorer;\n\n    debounceDiagramDrawing: any;\n\n    indexedDB: EmbeddedIndexedDB;\n\n    compileRunsAfterCodeReset: number = 0;\n\n    semicolonAngel: SemicolonAngel;\n\n    databaseTool: DatabaseTool;\n\n    databaseExplorer: DatabaseExplorer;\n\n    waitOverlay: WaitOverlay;\n\n    resultsetPresenter: ResultsetPresenter;\n\n    writeQueryManager: WriteQueryManager;\n\n    historyViewer: HistoryViewer;\n\n    initialTemplateDump: Uint8Array;\n    initialStatements: string[];\n\n    constructor($div: JQuery<HTMLElement>, private scriptList: JOScript[]) {\n\n        this.readConfig($div);\n\n        this.writeQueryManager = new WriteQueryManager(this, this.config.databaseURL == null ? \"Empty database\" : this.config.databaseURL);\n\n        this.initGUI($div);\n\n\n        this.databaseExplorer = new DatabaseExplorer(this, this.$dbTreeDiv);\n        this.databaseTool = new DatabaseTool(this);\n        if (this.config.databaseURL != null) {\n            new DatabaseFetcher(this).load(this.config.databaseURL).then((loadableDb) => {\n                this.initialTemplateDump = loadableDb.binDump;\n                this.initialStatements = loadableDb.statements == null ? [] : loadableDb.statements;\n                this.initDatabase();\n            }).catch((error: string)=>{\n                alert('Fehler beim Landen der Datenbank: ' + error)\n            })\n        } else {\n            this.initDatabase();\n        }\n\n        this.semicolonAngel = new SemicolonAngel(this);\n\n    }\n\n    initDatabase(){\n        this.resetDatabase(() => {\n            this.initScripts();\n\n            this.indexedDB = new EmbeddedIndexedDB(\"SQL-IDE\");\n            this.indexedDB.open(() => {\n\n                if (this.config.id != null) {\n                    this.writeQueryManager.indexedDBReady(this.indexedDB);\n                    this.readScripts();\n                }\n\n            });\n\n        });\n    }\n\n    resetDatabase(callback: () => void) {\n        this.databaseTool.initializeWorker(this.initialTemplateDump, this.initialStatements, () => { }, () => {\n            this.writeQueryManager.databaseReady(this.databaseTool);\n            this.databaseExplorer.refreshAfterRetrievingDBStructure();\n            callback();\n        })\n    }\n\n    initScripts() {\n\n        this.fileExplorer?.removeAllFiles();\n\n        this.initWorkspace(this.scriptList);\n\n        if (this.config.withFileList) {\n            this.fileExplorer = new EmbeddedFileExplorer(this.currentWorkspace.moduleStore, this.$filesListDiv, this);\n            this.fileExplorer.setFirstFileActive();\n            this.scriptList.filter((script) => script.type == \"hint\").forEach((script) => this.fileExplorer.addHint(script));\n        } else {\n            this.setModuleActive(this.currentWorkspace.moduleStore.getFirstModule());\n        }\n\n    }\n\n\n    readConfig($div: JQuery<HTMLElement>) {\n        let configJson: string | object = $div.data(\"sql-online\");\n        if (configJson != null && typeof configJson == \"string\") {\n            this.config = JSON.parse(configJson.split(\"'\").join('\"'));\n        } else {\n            this.config = {}\n        }\n\n        if (this.config.withFileList == null) this.config.withFileList = false;\n        if (this.config.withOutput == null) this.config.withOutput = true;\n        if (this.config.withErrorList == null) this.config.withErrorList = true;\n        if (this.config.withBottomPanel == null) this.config.withBottomPanel = true;\n\n        if (!(this.config.withOutput || this.config.withFileList || this.config.withErrorList)) {\n            this.config.withBottomPanel = false;\n        }\n\n        if (!this.config.withBottomPanel) {\n            this.config.withFileList = false;\n            this.config.withOutput = false;\n            this.config.withErrorList = false;\n        }\n\n        if(this.config.databaseURL != null){\n            ['http:', 'https:'].forEach(protocol => {\n                if(this.config.databaseURL.startsWith(protocol) && !this.config.databaseURL.startsWith(protocol + \"://\")){\n                    this.config.databaseURL = this.config.databaseURL.replace(protocol, protocol + \"//\");\n                }\n            })\n        }\n\n    }\n\n    setModuleActive(module: Module) {\n\n        if (this.config.withFileList && this.fileExplorer.currentFile != null) {\n            this.fileExplorer.currentFile.module.editorState = this.getMonacoEditor().saveViewState();\n        }\n\n        if (this.config.withFileList) {\n            this.fileExplorer.markFile(module);\n        }\n\n        /**\n         * WICHTIG: Die Reihenfolge der beiden Operationen ist extrem wichtig.\n         * Falls das Model im readonly-Zustand gesetzt wird, funktioniert <Strg + .> \n         * nicht und die Lightbulbs werden nicht angezeigt, selbst dann, wenn\n         * später readonly = false gesetzt wird.\n         */\n        this.getMonacoEditor().updateOptions({\n            readOnly: false,\n            lineNumbersMinChars: 4\n        });\n        this.editor.editor.setModel(module.model);\n\n\n        if (module.editorState != null) {\n            this.getMonacoEditor().restoreViewState(module.editorState);\n        }\n\n    }\n\n\n\n    readScripts() {\n\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\n\n        let that = this;\n\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\n            if (scriptListJSon == null) {\n                setInterval(() => {\n                    that.saveScripts();\n                }, 1000);\n            } else {\n\n                let scriptList: string[] = JSON.parse(scriptListJSon);\n                let countDown = scriptList.length;\n\n                for (let module of modules) {\n                    that.fileExplorer?.removeModule(module);\n                    that.removeModule(module);\n                }\n\n                for (let name of scriptList) {\n\n                    let scriptId = this.config.id + name;\n                    this.indexedDB.getScript(scriptId, (script) => {\n                        if (script != null) {\n\n                            let module = that.addModule({\n                                title: name,\n                                text: script,\n                                type: \"sql\"\n                            });\n\n                            that.fileExplorer?.addModule(module);\n                            that.$codeResetButton.fadeIn(1000);\n\n                            // console.log(\"Retrieving script \" + scriptId);\n                        }\n                        countDown--;\n                        if (countDown == 0) {\n                            setInterval(() => {\n                                that.saveScripts();\n                            }, 1000);\n                            that.fileExplorer?.setFirstFileActive();\n                            if (that.fileExplorer == null) {\n                                let modules = that.currentWorkspace.moduleStore.getModules(false);\n                                if (modules.length > 0) that.setModuleActive(modules[0]);\n                            }\n                        }\n                    })\n\n                }\n\n            }\n\n\n        });\n\n\n    }\n\n    saveScripts() {\n\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\n\n        let scriptList: string[] = [];\n        let oneNotSaved: boolean = false;\n\n        modules.forEach(m => oneNotSaved = oneNotSaved || !m.file.saved);\n\n        if (oneNotSaved) {\n\n            for (let module of modules) {\n                scriptList.push(module.file.name);\n                let scriptId = this.config.id + module.file.name;\n                this.indexedDB.writeScript(scriptId, module.getProgramTextFromMonacoModel());\n                module.file.saved = true;\n                // console.log(\"Saving script \" + scriptId);\n            }\n\n            this.indexedDB.writeScript(this.config.id, JSON.stringify(scriptList));\n        }\n\n    }\n\n    deleteScriptsInDB() {\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\n            if (scriptListJSon == null) {\n                return;\n            } else {\n\n                let scriptList: string[] = JSON.parse(scriptListJSon);\n\n                for (let name of scriptList) {\n\n                    let scriptId = this.config.id + name;\n                    this.indexedDB.removeScript(scriptId);\n                }\n\n                this.indexedDB.removeScript(this.config.id);\n\n            }\n\n\n        });\n\n    }\n\n    initWorkspace(scriptList: JOScript[]) {\n        this.currentWorkspace = new Workspace(\"Embedded-Workspace\", this, 0);\n\n        let i = 0;\n        for (let script of scriptList) {\n            if (script.type == \"sql\") {\n                this.addModule(script);\n            }\n\n        }\n\n    }\n\n    addModule(script: JOScript): Module {\n        let module: Module = Module.restoreFromData({\n            id: this.currentWorkspace.moduleStore.getModules(true).length,\n            name: script.title,\n            text: script.text,\n            text_before_revision: null,\n            submitted_date: null,\n            student_edited_after_revision: false,\n            version: 1,\n            workspace_id: 0,\n            forceUpdate: false,\n            file_type: 11\n        }, this);\n\n        this.currentWorkspace.moduleStore.putModule(module);\n\n        let that = this;\n\n        module.model.onDidChangeContent(() => {\n            that.considerShowingCodeResetButton();\n        });\n\n        return module;\n    }\n\n    removeModule(module: Module) {\n        this.currentWorkspace.moduleStore.removeModule(module);\n    }\n\n\n    initGUI($div: JQuery<HTMLElement>) {\n\n        // let $leftDiv = jQuery('<div class=\"joe_leftDiv\"></div>');\n\n        $div.css({\n            \"background-image\": \"none\",\n            \"background-size\": \"100%\"\n        })\n\n        let $centerDiv = jQuery('<div class=\"joe_centerDiv\"></div>');\n\n        // let $topDiv = jQuery('<div class=\"joe_topDiv\"></div>');\n        // $div.append($topDiv);\n        $div.append($centerDiv);\n\n        let $waitDiv = this.makeWaitDiv();\n        $div.append($waitDiv);\n        this.waitOverlay = new WaitOverlay($waitDiv);\n\n        let $codeResetModalWindow = this.makeCodeResetModalWindow($div);\n        let $databaseResetModalWindow = this.makeDatabaseResetModalWindow($div);\n\n        let $rightDiv = this.makeRightDiv();\n\n        let $editorDiv = jQuery('<div class=\"joe_editorDiv\"></div>');\n        this.$monacoDiv = jQuery('<div class=\"joe_monacoDiv\"></div>');\n        this.$hintDiv = jQuery('<div class=\"joe_hintDiv jo_scrollable\"></div>');\n        this.$codeResetButton = jQuery('<div class=\"joe_codeResetButton jo_button jo_active\" title=\"Code auf Ausgangszustand zurücksetzen\">Code Reset</div>');\n        this.$databaseResetButton = jQuery('<div class=\"joe_databaseResetButton jo_button jo_active\" title=\"Datenbank auf Ausgangszustand zurücksetzen\">Datenbank Reset</div>');\n\n        $editorDiv.append(this.$monacoDiv, this.$hintDiv, this.$databaseResetButton);\n        this.$monacoDiv.append(this.$codeResetButton);\n\n        let $bracketErrorDiv = this.makeBracketErrorDiv();\n        $editorDiv.append($bracketErrorDiv);\n\n        // $topDiv.append($editorDiv);\n\n        this.$codeResetButton.hide();\n\n        this.$codeResetButton.on(\"click\", () => { $codeResetModalWindow.show(); })\n\n        this.$databaseResetButton.hide();\n\n        this.$databaseResetButton.on(\"click\", () => { $databaseResetModalWindow.show(); })\n\n        this.$hintDiv.hide();\n\n        let $controlsDiv = jQuery('<div class=\"joe_controlsDiv\"></div>');\n        let $bottomDivInner = jQuery('<div class=\"joe_bottomDivInner\"></div>');\n\n\n        let $bottomDiv = jQuery('<div class=\"joe_bottomDiv\"></div>');\n        this.makeBottomDiv($bottomDivInner, $controlsDiv);\n        $bottomDiv.append($bottomDivInner);\n        if (this.config.withFileList) {\n            let $filesDiv = this.makeFilesDiv();\n            $bottomDiv.prepend($filesDiv);\n            new EmbeddedSlider($filesDiv, false, false, () => { });\n        }\n        makeTabs($bottomDivInner);\n        $div.append($bottomDiv);\n\n        $div.addClass('joe_javaOnlineDiv');\n\n        this.editor = new Editor(this, false, true);\n        this.editor.initGUI(this.$monacoDiv);\n        this.$monacoDiv.find('.monaco-editor').css('z-index', '10');\n\n        if ($div.attr('tabindex') == null) $div.attr('tabindex', \"0\");\n        this.actionManager = new ActionManager($div, this);\n        this.actionManager.init();\n\n        this.bottomDiv = new BottomDiv(this, $bottomDivInner, $div);\n        this.bottomDiv.initGUI();\n\n        this.rightDiv = new RightDiv(this, this.$rightDivInner);\n        this.rightDiv.initGUI();\n\n        $centerDiv.append($editorDiv, $bottomDiv)\n        $div.append($rightDiv);\n\n        let $rightSideContainer = jQuery('<div class=\"jo_rightdiv-rightside-container\"></div>');\n        let $infoButton = jQuery('<div class=\"jo_button jo_active img_ellipsis-dark\" style=\"margin-right: 10px\"></div>');\n\n        $controlsDiv.append($infoButton);\n\n        this.$rightDivInner.append($rightSideContainer);\n\n        new EmbeddedSlider($rightDiv, true, false, () => {\n            this.editor.editor.layout();\n        }, $centerDiv);\n\n        new EmbeddedSlider($bottomDiv, true, true, () => { this.editor.editor.layout(); });\n\n        $infoButton.on('mouseup', (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            openContextMenu([{\n                caption: \"Über die Online-IDE ...\",\n                link: \"https://learnj.de\",\n                callback: () => {\n                    // nothing to do.\n                }\n            }], ev.pageX + 2, ev.pageY + 2);\n        });\n\n\n        let $buttonOpen = jQuery('<label type=\"file\" class=\"img_open-file jo_button jo_active\"' +\n            'style=\"margin-right: 8px;\" title=\"Datenbank-Dump aus Datei laden\"><input type=\"file\" style=\"display:none\"></label>');\n\n        let that = this;\n\n        let $openInputButton = $buttonOpen.find('input');\n\n        $openInputButton.on('change', (event) => {\n            //@ts-ignore\n            var files: FileList = event.originalEvent.target.files;\n            that.loadDatabaseFromFile(files[0]).then(() => {\n                $openInputButton.val(null)\n            })\n        })\n\n        let $buttonSave = jQuery('<div class=\"img_save-dark jo_button jo_active\"' +\n            'style=\"margin-right: 8px;\" title=\"Datenbank-Dump in Datei speichern\"></div>');\n\n\n        $buttonSave.on('click', () => { that.saveDatabaseToFile() });\n\n        $controlsDiv.append($buttonOpen, $buttonSave);\n\n        this.resultsetPresenter = new ResultsetPresenter(this, $bottomDivInner);\n        this.resultsetPresenter.addWriteQueryListener(this.writeQueryManager);\n\n\n        new ProgramControlButtons(this, $controlsDiv);\n\n        this.historyViewer = new HistoryViewer(this, $div.find('.jo_historyTab'));\n\n        setTimeout(() => {\n            this.editor.editor.layout();\n            this.compiler = new Compiler(this);\n            this.startTimer();\n        }, 200);\n\n\n    }\n\n    saveDatabaseToFile() {\n        new DatabaseImportExport().saveToFile(this.databaseTool);\n    }\n\n    async loadDatabaseFromFile(file: globalThis.File) {\n        let dbImportExport = new DatabaseImportExport();\n        let db = await dbImportExport.loadFromFile(file, this);\n        if (db == null) {\n            alert('Es ist ein Fehler beim Import aufgetreten.');\n            return;\n        } else {\n            this.databaseTool.initializeWorker(db.binDump, [], (errors) => {\n                if (errors.length > 0) {\n                    alert('Es sind Fehler beim Import aufgetreten. Ausführliche Fehlermeldungen sehen Sie in der Konsole (F12).')\n                    console.log(errors)\n                }\n            }, () => {\n                this.databaseExplorer.refreshAfterRetrievingDBStructure()\n            })\n        }\n        return;\n    }\n\n    makeWaitDiv(): JQuery<HTMLElement> {\n\n        //@ts-ignore\n        let url = (window.javaOnlineDir == null ? '' : window.javaOnlineDir) + 'assets/projectexplorer/svg-loaders/grid.svg';\n\n        let waitHtml = `\n        <div class=\"bitteWarten\">\n        <div style=\"margin-bottom: 30px\">\n            <div class=\"bitteWartenText\" style=\"font-size: 20px\"></div>\n        </div>\n        <div>\n            <img src=\"${url}\" alt=\"\" style=\"height: 40px\">\n        </div>\n        <div class=\"bitteWartenProgress\" style=\"font-size: 20px\"></div>\n        </div>\n        `;\n        return jQuery(waitHtml);\n    }\n\n    makeBracketErrorDiv(): JQuery<HTMLElement> {\n        return jQuery(`\n        <div class=\"jo_parenthesis_warning\" title=\"Klammerwarnung!\" style=\"bottom: 55px\">\n        <div class=\"jo_warning_light\"></div>\n        <div class=\"jo_pw_heading\">{ }</div>\n        <div title=\"Letzten Schritt rückgängig\" \n            class=\"jo_pw_undo img_undo jo_button jo_active\"></div>\n        </div>\n        `);\n    }\n\n    makeCodeResetModalWindow($parent: JQuery<HTMLElement>): JQuery<HTMLElement> {\n        let $window = jQuery(\n            `\n            <div class=\"joe_codeResetModal\">\n            <div style=\"flex: 1\"></div>\n            <div style=\"display: flex\">\n                <div style=\"flex: 1\"></div>\n                <div style=\"padding-left: 30px;\">\n                <div style=\"color: red; margin-bottom: 10px; font-weight: bold\">Warnung:</div>\n                <div>Soll der Code wirklich auf den Ausgangszustand zurückgesetzt werden?</div>\n                <div>Alle von Dir gemachten Änderungen werden damit verworfen.</div>\n                </div>\n                <div style=\"flex: 1\"></div>\n            </div>\n            <div class=\"joe_codeResetModalButtons\">\n            <div class=\"joe_codeResetModalCancel jo_button jo_active\">Abbrechen</div>\n            <div class=\"joe_codeResetModalOK jo_button jo_active\">OK</div>\n            </div>\n            <div style=\"flex: 2\"></div>\n            </div>\n        `\n        );\n\n        $window.hide();\n\n        $parent.append($window);\n\n        $parent.find(\".joe_codeResetModalCancel\").on(\"click\", () => {\n            $window.hide();\n        });\n\n        $parent.find(\".joe_codeResetModalOK\").on(\"click\", () => {\n\n            this.initScripts();\n            this.deleteScriptsInDB();\n\n            $window.hide();\n            this.$codeResetButton.hide();\n            this.compileRunsAfterCodeReset = 1;\n\n        });\n\n        return $window;\n    }\n\n    makeDatabaseResetModalWindow($parent: JQuery<HTMLElement>): JQuery<HTMLElement> {\n        let $window = jQuery(\n            `\n            <div class=\"joe_databaseResetModal\">\n            <div style=\"flex: 1\"></div>\n            <div style=\"display: flex\">\n                <div style=\"flex: 1\"></div>\n                <div style=\"padding-left: 30px;\">\n                <div style=\"color: red; margin-bottom: 10px; font-weight: bold\">Warnung:</div>\n                <div>Soll die Datenbank wirklich auf den Ausgangszustand zurückgesetzt werden?</div>\n                <div>Alle bisher ausgeführten Anweisungen (siehe Tab Write History) werden dann rückgängig gemacht.</div>\n                </div>\n                <div style=\"flex: 1\"></div>\n            </div>\n            <div class=\"joe_databaseResetModalButtons\">\n            <div class=\"joe_databaseResetModalCancel jo_button jo_active\">Abbrechen</div>\n            <div class=\"joe_databaseResetModalOK jo_button jo_active\">OK</div>\n            </div>\n            <div style=\"flex: 2\"></div>\n            </div>\n        `\n        );\n\n        $window.hide();\n\n        $parent.append($window);\n\n        $parent.find(\".joe_databaseResetModalCancel\").on(\"click\", () => {\n            $window.hide();\n        });\n\n        $parent.find(\".joe_databaseResetModalOK\").on(\"click\", () => {\n\n            $window.hide();\n            this.resetDatabase(() => {\n                this.writeQueryManager.reset();\n            });\n\n            this.$databaseResetButton.hide();\n            this.compileRunsAfterCodeReset = 1;\n\n        });\n\n        return $window;\n    }\n\n    makeFilesDiv(): JQuery<HTMLElement> {\n\n\n        let $filesDiv = jQuery('<div class=\"joe_bottomDivFiles jo_scrollable\"></div>');\n\n        let $filesHeader = jQuery('<div class=\"joe_filesHeader jo_tabheading jo_active\"  style=\"line-height: 24px\">Dateien</div>');\n\n        this.$filesListDiv = jQuery('<div class=\"joe_filesList jo_scrollable\"></div>');\n\n        $filesDiv.append($filesHeader, this.$filesListDiv);\n\n        return $filesDiv;\n    }\n\n    startTimer() {\n        if (this.timerHandle != null) {\n            clearInterval(this.timerHandle);\n        }\n\n        let that = this;\n        this.timerHandle = setInterval(() => {\n\n            that.compileIfDirty();\n\n        }, 500);\n\n\n    }\n\n    compileIfDirty() {\n\n        if (this.currentWorkspace == null) return;\n\n        if (this.currentWorkspace.moduleStore.isDirty() &&\n            this.compiler.compilerStatus != CompilerStatus.compiling && this.getDatabaseTool().databaseStructure != null) {\n            try {\n\n                this.compiler.compile(this.currentWorkspace.moduleStore);\n\n                let errors = this.\n                    bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\n\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\n\n                this.version++;\n\n            } catch (e) {\n                console.error(e);\n                this.compiler.compilerStatus = CompilerStatus.error;\n            }\n\n        }\n\n    }\n    considerShowingCodeResetButton() {\n        this.compileRunsAfterCodeReset++;\n        if (this.compileRunsAfterCodeReset == 3) {\n            this.$codeResetButton.fadeIn(1000);\n        }\n    }\n\n    makeBottomDiv($bottomDiv: JQuery<HTMLElement>, $buttonDiv: JQuery<HTMLElement>) {\n\n        let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\n        $tabheadings.css('position', 'relative');\n        let $thLeftSide = jQuery('<div class=\"joe_tabheading-right jo_noHeading joe_controlsTabheading\"></div>');\n\n        $thLeftSide.append($buttonDiv);\n        $tabheadings.append($thLeftSide);\n\n        if (this.config.withErrorList) {\n            let $thErrors = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_errorsTab\" style=\"line-height: 24px\">Fehler</div>');\n            $tabheadings.append($thErrors);\n        }\n\n        if (this.config.withOutput) {\n            let $thPCode = jQuery('<div class=\"jo_tabheading jo_resultTabheading\" data-target=\"jo_resultTab\" style=\"line-height: 24px\">Ausgabe</div>');\n            $tabheadings.append($thPCode);\n        }\n\n        // let $thRuntimeError = jQuery('<div class=\"jo_tabheading jo_runtimeerrorsTabheading\" data-target=\"jo_runtimeerrorsTab\" style=\"line-height: 24px\">DB-Fehler</div>');\n        // $tabheadings.append($thRuntimeError);\n\n        let $thHistory = jQuery('<div class=\"jo_tabheading jo_historyTabheading\" data-target=\"jo_historyTab\" style=\"line-height: 24px\">History</div>');\n        $tabheadings.append($thHistory);\n\n        let $thRightSide = jQuery('<div class=\"joe_tabheading-right jo_noHeading joe_paginationHeading\"><div class=\"jo_pagination\"></div></div>');\n        $tabheadings.append($thRightSide);\n\n        $bottomDiv.append($tabheadings);\n\n        let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\n\n        if (this.config.withErrorList) {\n            let $tabError = jQuery('<div class=\"jo_active jo_scrollable jo_errorsTab\"></div>');\n            $tabs.append($tabError);\n        }\n\n        if (this.config.withOutput) {\n            let $tabPCode = jQuery(`<div class=\"jo_editorFontSize jo_resultTab\">\n            <div class=\"jo_result-inner\">\n                <div class=\"jo_result-header\"></div>\n                <div class=\"jo_scrollable jo_result-body\"></div>\n            </div>\n            </div>\n    `);\n            $tabs.append($tabPCode);\n        }\n\n        // let $tabRtErrors = jQuery('<div class=\"jo_scrollable jo_runtimeerrorsTab\"></div>');\n        // $tabs.append($tabRtErrors);\n\n        let $tabHistory = jQuery('<div class=\"jo_scrollable jo_historyTab\"></div>');\n        $tabs.append($tabHistory);\n\n\n        $bottomDiv.append($tabs);\n\n    }\n\n    makeRightDiv(): JQuery<HTMLElement> {\n\n        let $rightDiv = jQuery('<div class=\"joe_rightDiv\"></div>');\n        this.$rightDivInner = jQuery('<div class=\"joe_rightDivInner\"></div>');\n        $rightDiv.append(this.$rightDivInner);\n\n\n        let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\n        $tabheadings.css('position', 'relative');\n        let $thRun = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_db_tree\" style=\"line-height: 24px\">DB (Baum)</div>');\n        // let $thVariables = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_db_list\" style=\"line-height: 24px\">DB (Liste)</div>');\n        $tabheadings.append($thRun, //$thVariables\n        );\n        this.$rightDivInner.append($tabheadings);\n\n        let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\n        // let $vd = jQuery('<div class=\"jo_tab jo_scrollable jo_editorFontSize jo_db_list\">DB-Liste</div>');\n\n        this.$dbTreeDiv = jQuery(`<div class=\"jo_tab jo_scrollable jo_editorFontSize jo_active jo_db_tree\">DB-Baum</div>`);\n\n        $tabs.append(this.$dbTreeDiv //, $vd\n        );\n        this.$rightDivInner.append($tabs);\n\n        makeTabs($rightDiv);\n\n        return $rightDiv;\n    }\n\n    getSemicolonAngel(): SemicolonAngel {\n        return this.semicolonAngel;\n    }\n\n}\n\n\n","import { Formatter } from \"../main/gui/Formatter.js\";\nimport { ThemeManager } from \"../main/gui/ThemeManager.js\";\nimport { MainEmbedded } from \"./MainEmbedded.js\";\n\n// declare const require: any;\n\nexport type ScriptType = \"sql\" | \"hint\";\n\nexport type JOScript = {\n    type: ScriptType;\n    title: string;\n    text: string;\n}\n\nexport class EmbeddedStarter {\n\n\n    startupComplete = 2;\n\n    themeManager: ThemeManager;\n\n    mainEmbeddedList: MainEmbedded[] = [];\n\n    initGUI() {\n\n        this.checkStartupComplete();\n\n        this.themeManager = new ThemeManager();\n    }\n\n    initEditor() {\n        new Formatter().init();\n        this.checkStartupComplete();\n    }\n\n    checkStartupComplete() {\n        this.startupComplete--;\n        if (this.startupComplete == 0) {\n            this.start();\n        }\n    }\n\n    start() {\n\n        this.initJavaOnlineDivs();\n\n    }\n\n    initJavaOnlineDivs() {\n        \n        jQuery('.sql-online').each((index: number, element: HTMLElement) => {\n            let $div = jQuery(element);\n            let scriptList: JOScript[] = [];\n            $div.find('script').each((index: number, element: HTMLElement) => {\n                let $script = jQuery(element);\n                let type: ScriptType = \"sql\";\n                if($script.data('type') != null) type = <ScriptType>($script.data('type'));\n                let script: JOScript = {\n                    type: type,\n                    title: $script.attr('title'),\n                    text: $script.text().trim()\n                };\n                scriptList.push(script);\n            });\n\n            this.initDiv($div, scriptList);\n\n        });\n\n    }\n\n    initDiv($div: JQuery<HTMLElement>, scriptList: JOScript[]) {\n\n        let me: MainEmbedded = new MainEmbedded($div, scriptList);\n\n    }\n\n}\n\njQuery(function () {\n\n    let embeddedStarter = new EmbeddedStarter();\n\n    let prefix = \"\";\n    let editorPath = \"lib/monaco-editor/dev/vs\"\n    //@ts-ignore\n    if(window.javaOnlineDir != null){\n        //@ts-ignore\n        prefix = window.javaOnlineDir;\n    }\n\n    //@ts-ignore\n    if(window.monacoEditorPath != null){\n        //@ts-ignore\n        editorPath = window.monacoEditorPath;\n    }\n\n    //@ts-ignore\n    window.require.config({ paths: { 'vs': prefix + editorPath } });\n    //@ts-ignore\n    window.require.config({\n        'vs/nls': {\n            availableLanguages: {\n                '*': 'de'\n            }\n        },\n        ignoreDuplicateModules: [\"vs/editor/editor.main\"]\n    });\n    //@ts-ignore\n    window.require(['vs/editor/editor.main'], function () {\n\n        embeddedStarter.initEditor();\n        embeddedStarter.initGUI();\n\n    });\n\n});\n"],"sourceRoot":""}