{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../node_modules/regenerator-runtime/runtime.js","webpack:///../../../../src/client/compiler/lexer/Token.ts","webpack:///../../../../src/client/compiler/lexer/Lexer.ts","webpack:///../../../../src/client/main/gui/Formatter.ts","webpack:///../../../../src/client/main/gui/ThemeManager.ts","webpack:///../../../../src/client/compiler/parser/SQLTypes.ts","webpack:///../../../../src/client/compiler/parser/Parser.ts","webpack:///../../../../src/client/compiler/parser/SQLTable.ts","webpack:///../../../../src/client/compiler/parser/SymbolTable.ts","webpack:///../../../../src/client/compiler/parser/SQLMethods.ts","webpack:///../../../src/client/tools/StringTools.ts","webpack:///../../../../src/client/compiler/parser/SymbolResolver.ts","webpack:///../../../src/client/compiler/Compiler.ts","webpack:///../../../../src/client/compiler/parser/Module.ts","webpack:///../../../../src/client/main/gui/ActionManager.ts","webpack:///../../../src/client/tools/HtmlTools.ts","webpack:///../../../src/client/communication/AjaxHelper.ts","webpack:///../../../src/client/workspace/WDatabase.ts","webpack:///../../../src/client/communication/CacheManager.ts","webpack:///../../../src/client/communication/NotifierClient.ts","webpack:///../../../src/client/communication/NetworkManager.ts","webpack:///../../../src/client/tools/TemplateUploader.ts","webpack:///../../../../src/client/main/gui/DatabaseSettingsDialog.ts","webpack:///../../../src/client/workspace/Workspace.ts","webpack:///../../../../src/client/main/gui/MyCompletionItemProvider.ts","webpack:///../../../../src/client/main/gui/MySignatureHelpProvider.ts","webpack:///../../../../src/client/main/gui/MyHoverProvider.ts","webpack:///../../../../src/client/main/gui/MyCodeActionProvider.ts","webpack:///../../../../src/client/main/gui/MyReferenceProvider.ts","webpack:///../../../../src/client/main/gui/Helper.ts","webpack:///../../../../src/client/main/gui/Editor.ts","webpack:///../../../../src/client/main/gui/VscSql.ts","webpack:///../../../src/client/sqljs-worker/sqljsWorkerSim.ts","webpack:///../../../src/client/tools/DatabaseTools.ts","webpack:///../../../../src/client/compiler/parser/StatementCleaner.ts","webpack:///../../../src/client/tools/MySqlImporter.ts","webpack:///../../../src/client/tools/DatabaseImportExport.ts","webpack:///../../../../src/client/main/gui/NewDatabaseDialog.ts","webpack:///../../../../src/client/main/gui/MainMenu.ts","webpack:///../../../../src/client/main/gui/Accordion.ts","webpack:///../../../../src/client/main/gui/DistributeToStudentsDialog.ts","webpack:///../../../../src/client/main/gui/ProjectExplorer.ts","webpack:///../../../../src/client/main/gui/RightDiv.ts","webpack:///../../../../src/client/main/gui/Sliders.ts","webpack:///../../../../src/client/main/gui/TeacherExplorer.ts","webpack:///../../../../src/client/main/gui/UserMenu.ts","webpack:///../../../src/client/main/Login.ts","webpack:///../../../../src/client/main/gui/ViewModeController.ts","webpack:///../../../../src/client/compiler/parser/SemicolonAngel.ts","webpack:///../../../../src/client/main/gui/DatabaseExplorer.ts","webpack:///../../../../src/client/main/gui/ProgramControlButtons.ts","webpack:///../../../../src/client/main/gui/ResultsetPresenter.ts","webpack:///../../../src/client/communication/Notifier.ts","webpack:///../../../../src/client/main/gui/WaitOverlay.ts","webpack:///../../../../src/client/main/gui/HistoryViewer.ts","webpack:///../../../src/client/main/Main.ts","webpack:///../../../../src/client/main/gui/ErrorManager.ts","webpack:///../../../../src/client/main/gui/HomeworkManager.ts","webpack:///../../../../src/client/main/gui/BottomDiv.ts","webpack:///../../../src/client/embedded/EmbeddedSlider.ts","webpack:///../../../src/client/embedded/EmbeddedFileExplorer.ts","webpack:///../../../src/client/embedded/EmbeddedIndexedDB.ts","webpack:///../../../src/client/embedded/WriteQueryManager.ts","webpack:///../../../src/client/tools/DatabaseLoader.ts","webpack:///../../../src/client/embedded/MainEmbedded.ts","webpack:///../../../src/client/embedded/EmbeddedStarter.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","runtime","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","define","obj","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","state","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","makeInvokeMethod","fn","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","undefined","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","keys","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","TokenType","LexerState","TokenTypeReadable","identifier","integerConstant","floatingPointConstant","booleanConstant","stringConstant","charConstant","true","false","keywordRename","keywordTo","keywordAlter","keywordCommit","keywordAdd","keywordDelete","keywordSelect","keywordInsert","keywordInto","keywordValues","keywordUpdate","keywordSet","keywordNo","keywordUse","keywordCreate","keywordReferences","keywordPrimary","keywordForeign","keywordTable","keywordColumn","keywordDrop","keywordUnique","keywordKey","keywordIndex","keywordConstraint","keywordModify","keywordCascade","keywordRestrict","keywordAction","keywordAutoincrement","keywordFrom","keywordWhere","keywordGroup","keywordBy","keywordHaving","keywordOrder","keywordAscending","keywordDescending","keywordNulls","keywordFirst","keywordLast","keywordIs","keywordNull","keywordDatabase","keywordAnd","keywordOr","keywordNot","keywordJoin","keywordNatural","keywordLeft","keywordCross","keywordInner","keywordOuter","keywordOn","keywordAs","keywordLimit","keywordOffset","keywordIn","keywordNotIn","keywordLike","keywordCollate","keywordDefault","keywordComment","keywordEngine","keywordCharset","keywordCharacter","keywordStart","keywordTransaction","keywordIf","keywordExists","leftBracket","rightBracket","leftSquareBracket","rightSquareBracket","leftCurlyBracket","rightCurlyBracket","leftRightSquareBracket","dot","minus","modulo","plus","multiplication","division","singleQuote","doubleQuote","identifierQuote","lower","greater","equal","lowerOrEqual","greaterOrEqual","concatenation","semicolon","colon","comma","backslash","at","hash","pipe","space","tab","newline","identifierChar","comment","endofSourcecode","specialCharList","'","notEqual","linefeed","keywordList","EscapeSequenceList","\"","spaceTokens","correspondingBracket","tokenTypesToMerge","first","second","merged","isNot","isNotNull","isNull","input","replace","tokenList","errorList","bracketError","bracketStack","pos","line","column","nonSpaceLastTokenType","nonSpaceLastToken","tokens","errors","currentChar","nextChar","mainState","bracketOpen","bracketClosed","setBracketError","tt","openBracket","char","specialCharToken","pushToken","lexMultilineComment","checkClosingBracket","isDigit","indexOf","lexEndofLineComment","lexNumber","position","lexStringConstant","lexSpace","lexAnnotation","lexQuotedIdentifier","lexIdentifierOrKeyword","pushError","text","tripel","newLength","errorLevel","level","a","base","charCode","charCodeAt","posStart","posEnd","substring","escapeChar","beginChar","isDoubleQuotedIdentifier","lastCharWasNewline","commentStart","sign","firstChar","radix","exponent","hasExponential","posExponentStart","exponentString","Number","parseInt","parseFloat","Math","pow","isSpace","toLowerCase","autoFormatTriggerCharacters","monaco","languages","registerDocumentFormattingEditProvider","registerOnTypeFormattingEditProvider","model","ch","options","token","edits","format","e","e1","range","endLineNumber","startLineNumber","endColumn","startColumn","splice","delta","substr","getValue","editor","EndOfLinePreference","LF","tokenlist","lex","lastNonSpaceToken","indentLevel","curlyBracesOpenAtLines","indentLevelAtSwitchStatements","switchHappend","lastTokenWasNewLine","roundBracketsOpen","replaceBetween","token1","insertSpaces","deleteSpaces","openedAtLine","repeat","nextToken1","nextToken2","lastToken1","lastToken2","isBinaryOperator","lastTokenIsOperator","nextTokenIsOperator","getNextNonSpaceToken","beginNextLine","token2","currentIndentation","il","correctIndentation","nextToken","lowerGeneric","lowerBelongsToGenericExpression","greaterGeneric","greaterBelongsToGenericExpression","tokenBefore","spaces","deleteOverlappingRanges","currentIndex","j","positionFrom","positionTo","numberOfSpaces","ThemeManager","themes","initThemes","theme","internalSwitchTheme","setTheme","monacoTheme","root","document","documentElement","cssColors","style","setProperty","SQLType","parameterDescriptions","checkFunction","outputFunction","canCastToList","super","binaryResultTypes","Map","unaryOperators","ownIndex","baseTypeMap","toLocaleLowerCase","baseTypes","concat","set","tokenType","secondType","resultType","isCommutative","Array","isArray","map","addBinaryOperation","type2","bt2","operator","booleanType","value1","value2","max","tens","baseType","parameterValues","parameters","join","returnBaseType","getUnaryResultType","getBinaryResult","round","textTypes","varcharType","ci","pv","v","charType","textType","tinyTextType","mediumTextType","longTextType","floatTypes","decimalType","vk","trunc","nk","numericType","doubleType","realType","floatType","numberTypes","intType","integerType","tinyIntType","smallIntType","mediumIntType","bigIntType","dateType","dateTimeType","timestampType","nullType","numericTypes","addBaseTypes","numericBinaryOperators","comparisonOperators","characterTypes","booleanOperations","bt","lookahead","endToken","beginStatementKeywords","completionHints","sqlStatements","addCompletionHint","initializeLookahead","lastToken","parseMain","ct","lastComment","commentBefore","cct","quickFix","assign","skip","invokeSemicolonAngel","expectedValuesArray","isOperatorOrDot","title","editsProvider","uri","resource","edit","message","severity","MarkerSeverity","main","getSemicolonAngel","register","expectedTokens","op","operatorPrecedence","ret","deltaColumns","tpos","deltaInsideToken","tokenPos","getCurrentPosition","mainProgram","mainProgramEnd","afterLastStatement","semicolonAfterLastStatement","getCurrentPositionPlus","isEnd","oldPos","errorsBeforeStatement","startPosition","st","parseStatement","hasErrors","ast","from","to","getEndOfPosition","acceptedBySQLite","beginStatementTokens","firstBadToken","expectSemicolon","parseSelect","parseInsert","parseCreateTableOrDatabase","parseUpdate","parseDelete","parseDropTable","parseAlterTable","parseSet","parseUse","expect","node","omittedeStatement","endPosition","symbolTable","kind","tableIdentifier","tableIdentifierPosition","addCompletionHintHere","parseRenameTableOrColumn","parseAlterTableAdd","parseDropColumn","comesToken","getEndOfCurrentToken","newTableName","oldColumnName","oldColumnPosition","newColumnName","unique","parseAddColumn","parseAddPrimaryKey","parseAddIndex","parseModifyColumn","parseAddConstraint","fki","parseForeignKeyDefinition","foreignKeys","referencesTable","referencesColumn","referencesPosition","parseReferences","pos0","pos1","modifyColumnInfo","parseColumnDefinition","primaryKeys","index","index_name","indices","columnDefBegin","columnDef","ifExists","whereNode","whereNodeBegin","whereNodeEnd","parseTerm","columnIdentifiers","columnIdentifierPositions","valuePosBegin","valuePosEnd","parseCreateDatabase","parseCreateTable","ifNotExists","columnList","combinedPrimaryKeyColumns","foreignKeyInfoList","uniqueConstraints","primaryKeyAlreadyDefined","parsePrimaryKeyTerm","parseUniqueTerm","columnNode","isPrimary","isAutoIncrement","columns","uniqueConstraint","notNull","parseType","hintColumns","hintTables","hints","additionalColumns","praefix","suffix","datatypes","getBaseType","alreadySeenKeywords","foreignKeyInfo","collate","defaultValue","fromConstantType","canCastTo","valuesPosition","columnsPosition","table","alias","parseValueLists","insideListTokens","outerFirst","leftBracketPosition","constantType","constant","constantNode","columnListStart","fromNode","parentStatement","parseColumnList","columnListKeywordArray","findIndex","allColumns","fromListKeywordArray","fromStartPosition","dontHint","parseTableOrSubQuery","hintEndPosition","fromEndPosition","unshift","whereKeywordArray","whereStart","groupKeywordArray","groupStart","groupByNode","parseGroupBy","orderStart","orderByNode","parseOrderBy","limitNode","parseLimit","numberOfRows","ln","offset","gbn","tokenTypesAfterGroupBy","term","having","obnList","obn","leftSide","parseAtomicTableOrSubQuery","parseJoinOperator","rightSide","firstOperand","secondOperand","on","selectStatement","subquery","query","tokenTypesAfterListEnd","allowAliases","columnTerm","parseTermBinary","precedence","left","parseUnary","operators","right","binaryOp","parseBracket","tt1","unaryOp","operand","isStringConstant","parseDotOrArrayChains","identifier1","position1","parseMethodCallParameters","rightBracketPosition","callMethod","operands","nodes","commaPositions","secondIdentifier","identifierLeft","identifierRight","list","elements","constantTypes","tokenBeforeBracket","selectNode","listNode","parseList","termInsideBrackets","parameter","isPrimaryKey","isNullable","cs","typeMatch1","completeTypeSQL","match","baseTypeIdentifier","commaSeparatedParameters","split","trim","fromColumnStructure","Table","ts","size","tsList","tables","fromTableStructure","columnStructureToColumnMap","referencedCs","references","referencedColumn","parentSymbolTable","childSymbolTables","symbols","symbolList","parent","databaseStructure","fromTableStructureList","storeTableSymbols","storeSymbol","posOfDefinition","referencedOnPositions","symbol","containsPosition","shortestSymbolTableContainingPosition","shortestPosition","st1","findTableAtPosition","findTables","filter","isAggregating","returnType","acceptsStarParameter","SQLMethodStore","methods","pushOneParameterMethod","countMethod","instance","parameterType","escapeHtml","unsafe","twoDez","z","isDate","inputText","opera1","opera2","lopera1","lopera2","pdate","dd","mm","yy","lyear","isDateTime","dateStr","databaseTool","symbolTableStack","mainSymbolTable","statement","astNode","resolveSelect","resolveInsert","resolveCreateTable","resolveUpdate","resolveDelete","resolveDropTable","resolveAlterTable","getCurrentSymbolTable","resultTable","pushNewSymbolTable","joinedTables","resolveTableOrSubQuery","extractDatabaseStructure","resolveTerm","c1","sqlType","whereType","getBaseTypeName","findTable","whereSymbolTable","oldColumn","find","ciPos","createTableNode","thisTable","cn","tosNode","tableList","storeTableIntoSymbolTable","tableAlias","resolveNotIn","typeLeft","typeRight","getBinaryResultType","operandType","resultType1","resolveMethodCall","resolveIdentifier","resolveDot","selectTable","tableSymbols","findColumn","getInstance","getMethods","found","methodParameter","operatorString","leftType","pType","element","elementType","tableCompletionTo","valueList","destType","CompilerStatus","compilerStatus","compiledButNothingToRun","moduleStore","compiling","t0","performance","now","lexer","getModules","file","dirty","clear","lexed","getProgramTextFromMonacoModel","getCurrentlyEditedModule","getBottomDiv","errorManager","showParenthesisWarning","startRegistering","parser","parse","getDatabaseTool","symbolResolver","start","dt","getCurrentWorkspace","compilerMessage","healSemicolons","readyToRun","oldErrorDecorations","identifierPositions","methodCallPositions","path","uriCounter","uriMap","Uri","scheme","createModel","updateOptions","tabSize","lastSavedVersionId","getAlternativeVersionId","that","onDidChangeContent","versionId","saved","isEmbedded","main1","workspacesOwnerId","user","id","text_before_revision","student_edited_after_revision","networkManager","sendUpdates","bottomDiv","homeworkManager","showHomeWorkRevisionButton","projectExplorer","renderHomeworkButton","fromPosition","toPosition","hintKeywords","fromColumn","fromLine","toColumn","toLine","hintColumnsOfTable","chList","sel","selStart","selEnd","stmt","compare","b","lineNumber","bestCh","bestRangeLength","rangeLength","f","f1","submitted_date","version","workspace","workspace_id","forceUpdate","file_type","ec","el","positionList","positionsOnLine","bestFoundPosition","sort","e2","errorLevelCompare","level1","level2","maxUriNumber","ModuleStore","moduleMap","module_id","ms","putModule","copy","mo","includeSystemModules","excludedModuleName","removeModule","moduleName","ActionManager","$mainElement","actions","keyEntries","buttons","$element","jQuery","event","executeKeyDownEvent","actionIdentifier","ae","action","button","active","attr","addClass","removeClass","activeElement","tagName","keyCode","ctrlKey","shiftKey","altKey","actionEntries","actionEntry","stopPropagation","preventDefault","makeEditable","elementWithText","elementToReplace","renameDoneCallback","selectionRange","mousePointer","window","PointerEvent","$input","css","width","height","color","val","setSelectionRange","end","after","hide","setTimeout","focus","ev","off","remove","show","newValue","openContextMenu","items","x","y","$contextMenu","$openSubMenu","parentMenuItem","mi","caption","link","$item","subMenu","callback","$link","top","append","leftRight","innerWidth","xp","topBottom","innerHeight","yp","makeTabs","tabDiv","headings","not","tabs","target","data","trigger","makeDiv","klass","div","jo_mouseDetected","animateToTransparent","cssProperty","startColorRgb","duration","colorPraefix","animate","copyTextToClipboard","navigator","clipboard","writeText","console","textArea","createElement","body","appendChild","select","execCommand","removeChild","fallbackCopyTextToClipboard","PerformanceCollector","url","startTime","pe","performanceData","count","sumTime","performanceDataCount","lastTimeSent","request","ajax","successCallback","errorCallback","showNetworkBusy","time","$","JSON","stringify","contentType","success","response","registerPerformanceEntry","jqXHR","statusText","status","busy","WDatabase","db","statements","published_to","description","templateDump","based_on_template_id","owner_id","CacheManager","databaseId","cacheAvailable","getCache","cache","databaseIdToCacheIdentifier","arrayBuffer","buffer","Uint8Array","catch","put","Response","caches","open","unsentMessages","connect","location","protocol","startsWith","host","connection","WebSocket","onerror","onError","onclose","onClose","onmessage","onMessage","onopen","command","sendIntern","forcedUpdateEvery","counterTillForcedUpdate","send","log","$updateTimerDiv","ownUpdateFrequencyInSeconds","teacherUpdateFrequencyInSeconds","updateFrequencyInSeconds","secondsTillNextUpdate","errorHappened","interval","clearInterval","setInterval","$rect","notifierClient","sendIfNothingIsDirty","writeEditorTextToFile","settings","wdList","fdList","ws","workspaceList","getWorkspaceData","getFileData","workspacesWithoutFiles","files","userId","language","currentWorkspaceId","getModifiedWorkspaces","updateWorkspaces","wd","is_testuser","random","entity","workspaceId","alert","secretKind","secret","databaseName","publishedTo","klasse","student_ids","class_id","current_workspace_id","version_before","database","newStatements","firstNewStatementIndex","statements_before","new_version","cacheManager","fromDatabaseData","fetchTemplateFromCache","pako","inflate","fetchTemplate","template","saveTemplateToCache","xhrFields","responseType","user_id","templateList","sendUpdatesRequest","sendUpdatesResponse","idToRemoteWorkspaceDataMap","fileIdsSended","workspaces","newWorkspaceNames","remoteWorkspace","createNewWorkspaceFromWorkspaceData","idToRemoteFileDataMap","fd","idToModuleMap","fileId","remoteFileData","fileListPanel","removeElement","currentWorkspace","setValue","remoteFile","createFile","workspaceListPanel","sortElements","withSort","w","createNewWorkspace","sql_history","isFolder","panelElement","externalElement","iconClass","addElement","fileData","identical_to_repository_version","getNewModule","TemplateUploader","dump","reason","waitOverlay","export","deflate","uploadIntern","processData","headers","init","$dialog","showMainWindow","saveNameAndPublishedTo","setValues","setNewSecret","$copyButton","prop","checked","each","setNameAndPublishedTo","uploadCurrentDatabase","getDatabaseSettings","secrets","is_admin","is_schooladmin","empty","withFiles","currentFileId","currentlyOpenModule","permissions","database_id","$buttonDiv","$htmlFirstLine","$button","restoreFromData","triggerCharacters","keywordCompletionItems","keywordToSnippetMap","setupKeywordCompletionItems","getModuleByMonacoModel","wfc","provideCompletionItemsIntern","sw","getMonacoEditor","_contentWidgets","widget","toggleDetails","isStringLiteral","textUntilPosition","getValueInRange","textAfterPosition","completionHint","getCompletionHint","completionItems","addKeywordCompletionItems","dotMatch","ibMatch","identifierAndBracketAfterCursor","addIdentifierCompletionItems","addDotCompletionItems","word","getWordUntilPosition","replaceWordRange","insertAfterCursorRange","item","insertText","suggestions","textAfterDot","textBeforeDot","rangeToReplace","label","detail","filterText","insertTextRules","CompletionItemInsertTextRule","KeepWhitespace","CompletionItemKind","Field","tableIdentifiers","columnIdentifier","InsertAsSnippet","Snippet","Class","sortText","columList","withTable","snippet","Keyword","posMin","posMax","watchDog","posOld","arguments","MySignatureHelpProvider","signatureHelpTriggerCharacters","signatureHelpRetriggerCharacters","compileIfDirty","provideSignatureHelpLater","getModel","methodCallPosition","rightMostPosition","mcp","identifierPosition","getSignatureHelp","parameterIndex","cp","activeParameter","activeSignature","signatures","dispose","MyHoverProvider","selection","getSelection","getElementAtPosition","getWordUnderCursor","desc","keywordDescriptions","contents","getValueLengthInRange","isInsideIdentifierOrArrayDescriptor","begin","isInsideOperator","isInsideIdentifierChain","MyCodeActionProvider","markers","relatedInformation","diagnostics","isPreferred","MyReferenceProvider","usagePositions","referencePositions","upInCurrentModule","up","targetElement","direction","$helper","bottom","html","close","fadeIn","fadeOut","mainBase","helperHistory","flag","sendUpdateUserSettings","openHelper","showMinimap","cw","dontPushNextCursorMove","lastTime","elementDecoration","extensions","conf","onEnterRules","beforeText","afterText","indentAction","IndentAction","IndentOutdent","appendText","None","removeText","comments","lineComment","blockComment","brackets","autoClosingPairs","surroundingPairs","setLanguageConfiguration","setMonarchTokensProvider","defaultToken","tokenPostfix","ignoreCase","escapes","keywords","builtinFunctions","builtinVariables","pseudoColumns","tokenizer","include","cases","whitespace","numbers","strings","string","complexIdentifiers","quotedIdentifier","scopes","defineVscSQL","defineTheme","inherit","rules","foreground","fontStyle","colors","lightbulb","enabled","lineDecorationsWidth","peekWidgetDefaultFocus","fixedOverflowWidgets","quickSuggestions","quickSuggestionsDelay","fontSize","fontFamily","fontWeight","roundedSelection","selectOnLineNumbers","automaticLayout","scrollBeyondLastLine","occurrencesHighlight","autoIndent","dragAndDrop","formatOnType","formatOnPaste","suggestFontSize","suggestLineHeight","suggest","localityBonus","insertMode","parameterHints","cycle","mouseWheelZoom","minimap","scrollbar","vertical","horizontal","mouseWheelListener","changeEditorFontSize","deltaY","onDidChangeConfiguration","hasChanged","EditorOption","fontInfo","registerLightbulbOnClickFunctions","onDidChangeCursorPosition","onDidChangeModel","removeEventListener","addEventListener","passive","setActiveAfterExternalModelSet","registerHoverProvider","registerCompletionItemProvider","registerCodeActionProvider","registerReferenceProvider","registerSignatureHelpProvider","onMouseDown","MouseTargetType","GUTTER_GLYPH_MARGIN","GUTTER_LINE_NUMBERS","isAfterLines","onMarginMouseDown","remeasureFonts","addActions","onDidType","insertEndOfComment","newLine","newColumn","Range","executeEdits","setPosition","getPosition","prevLine","getLineContent","trimRight","endsWith","getLineCount","spacesAtBeginningOfLine","trimLeft","fontSizePx","Date","getTime","editorfs","getOptions","viewModeController","saveFontSize","factor","dynamic","newEditorFs","setFontSize","addAction","keybindings","KeyMod","CtrlCmd","KeyCode","KEY_K","precondition","keybindingContext","contextMenuGroupId","contextMenuOrder","run","ed","getAction","Enter","getActionManager","deltaDecorations","decorations","className","isWholeLine","overviewRuler","darkColor","OverviewRulerLane","Left","executeActionActive","sqlStatement","getSQLSTatementsAtSelection","classname","MinimapPosition","Inline","zIndex","setActive","showHelper","WorkerSim","initsql","initSqlJs","locateFile","scriptDirectory","SQL1","SQL","createDb","worker","postMessageToClient","buff","config","ready","results","exec","row","postMessage","finished","databaseDirectoryEntries","queryId","querySuccessCallbacksMap","queryErrorCallbackMap","queries","callbackAfterInitializing","callbackAfterRetrievingStructure","getWaitOverlay","terminate","javaOnlineDir","jo_doc","Worker","querySuccessCallback","queryErrorCallback","delete","queryCount","execQuery","setProgress","shift","executeQuery","retrieveDatabaseStructure","sql","params","getJSON","entries","sql1","result1","parseDatabaseStructure","tableNameToStructureMap","tableName","tableSQL","tableStructure","completeSQL","columnArray","foreignKeyList","columnArray1","dflt_value","columnStructure","typeLengths","fkInfo","referencesRawData","sqliteMagicBytes","MaxRowsPerInsert","sqlCleaned","cleanCreateTableStatement","cleanInsertStatement","statementHeader","lines","vline","cleanValue","cleanColumnDef","cleanForeignKeyInfo","pkc","unzipURL","fetch","importFromText","unzipFile","reader","FileReader","onload","readAsText","zip","ZipReader","HttpReader","unzipIntern","BlobReader","getEntries","filename","getData","TextWriter","onprogress","lexOutput","createTableNodes","insertNodes","tableModifyingNodes","tmn","findCreateTableNode","autoIncrementColumn","pcn","findCreateTableColumnNode","mci","mcn","fk","indexIdentifier","makeDatabase","tableNode","statementCleaner","clean","dbTool","initializeWorker","binDump","ld","loadFromFile","ab","getDumpType","readAsArrayBuffer","prompt","isBlob","blob","Blob","msSaveOrOpenBlob","createEvent","download","href","URL","createObjectURL","dataset","downloadurl","initEvent","dispatchEvent","downloadFile","$templatelist","fetchTemplateList","templatelist","tle","$tle","ownerName","$templateName","$dropZone","evt","originalEvent","dataTransfer","dropEffect","importFile","$dumpFileInput","createMode","hasClass","workspaceData","createWorkspace","$template","template_database_id","code","tIndex","otherDatabaseId","template_id","newTemplateId","sendCreateWorkspace","accordionElement","renderSettingsButton","setWorkspaceActive","importer","isDatabase","dbUncompressed","currentSubmenu","openSubmenusOnMousemove","mainMenu","switchTheme","saveToFile","initMenu","menu","initMenuitemCallbacks","opensubmenu","accordion","flexWeight","newButtonClass","buttonNewTitle","defaultIconClass","withDeleteButton","withFolders","enableDrag","acceptDropKinds","dontSortElements","addPanel","$newFolderAction","addFolder","newElement","newFolderCallback","scrollIntoView","$collapseAllAction","collapseAll","slideUp","$captionElement","$listElement","fixed","grow","$buttonNew","pathArray","selectedElement","getSelectedElement","name1","path1","isFolder1","name2","path2","isFolder2","cmp","localeCompare","compareWithPath","insertIndex","getElementIndex","$elements","prepend","elementAtIndex","before","renderElement","insertElement","renameElement","$accordionDiv","getCurrentlySelectedPath","newFilesElementCallback","$htmlSecondLine","insertAfter","selectCallback","$listOuter","$ce","$li","targetGrow","parts","toggleClass","currentlyDraggedElementKind","element1","currentlyDraggedElement","moveElement","expanded","aName","sortName","bName","cssClass","$div","expandedCollapsed","pathHtml","addElementActionCallback","$elementAction","$filedragpart","effectAllowed","dropElementCallback","pathIsCollapsed","slideDown","pressTimer","contextmenuHandler","contextMenuItems","renameCallback","newDatabaseElementCallback","contextMenuProvider","cmi","pageX","pageY","clearTimeout","getChildElements","deleteCallback","elementToMove","destinationFolder","destinationPath","movedElements","sourcePath","oldPathLength","moveCallback","folder","pointPos","newText","invokeCallback","ae1","findElement","pathString","elPath","ps","Accordion","$html","panel","renderOuterHtmlElements","DistributeToStudentsDialog","classes","studentCount","$studentList","student","students","$studentLine","$studentClass","$studentName","rufname","familienname","$dialogMain","distributeWorkspace","sendDistributeWorkspace","$projectexplorerDiv","programPointerModule","programPointerDecoration","lastOpenModule","initFilelistPanel","initWorkspacelistPanel","successfulNetworkCommunicationCallback","setModuleActive","sendCreateFile","newName","callbackIfSuccessful","sendDeleteWorkspaceOrFile","is_teacher","$homeworkButtonDiv","$newWorkspaceAction","removeWorkspace","enableNewButton","databaseExplorer","getResultsetPresenter","dest","droppedElement","dropEffekt","$homeAction","onHomeButtonClicked","hideHomeworkTab","workspaceAccordionElement","cmiList","teacherExplorer","classPanel","restoreOwnWorkspaces","setCaption","moduleList","errorCountMap","errorCount","errorCountS","setTextAfterFilename","initializeDatabaseTool","fetchDatabase","currentWorkspace_id","renderFiles","nonSystemModules","notifier","refreshAfterRetrievingDBStructure","getHistoryViewer","clearAndShowStatements","cem","hideRevision","editorState","saveViewState","setModel","readOnly","hideHomeworkRevisionButton","restoreViewState","setCurrentlyEditedModule","showProgramPointer","programPointerPosition","revealRangeInCenterIfOutsideViewport","Center","beforeContentClassName","findModuleByFile","$rightDiv","isWholePage","$tabs","$headings","rightdiv_width","$wholeWindow","Sliders","md","clientX","dx","moveLeftPanel","clientY","dy","moveBottomDiv","moveRightDiv","sliderknobLeft","stopImmediatePropagation","sliderknobRight","$editor","mewidth","layout","diffEditor","$bottomDiv","meheight","$leftPanel","classData","studentPanel","initStudentPanel","initClassPanel","renderClasses","ws_userId","ownWorkspaces","currentOwnWorkspace","restoreWorkspaces","setExplorerColor","showHomeworkTab","attachToWorkspaces","renderWorkspaces","ea","renderStudents","userDataList","ud","classDataList","cd","UserMenu","$loginSpinner","loginHappened","username","password","viewModes","classDiagram","waitForGUICallback","initGUI","initTeacherExplorer","classdata","initializeTimer","setFixed","initViewMode","initializeNotifierClient","startupComplete","errorMessage","resultsetPresenter","removePanels","ViewModeController","$buttonsContainer","$buttonMap","highContrast","editorHasFullWidth","$buttonEditorFullscreen","$buttonPresentationMode","$buttonMonitorMode","am","actionManager","registerAction","toggleEditorFullwidth","setMode","saveSettings","otherMode","viewMode","viewModeChosen","themeManager","getChosenViewMode","userDataDirty","monitor","presentation","SemicolonAngel","semicolonPositions","isThereAgain","oldEvidence","firstSeenMs","currentlyEditedModule","cursorLine","isCurrentModule","editOperations","forceMoveMarkers","abs","setSelection","$mainDiv","collapsedTables","dbstructure","$table","renderTable","isCollapsed","showTable","$columns","image","referencesHtml","autoincrement","$column","$treeSwitch","$columnList","parents","ProgramControlButtons","$buttonStart","isActive","executeSelectedStatements","paginationSize","writeQueryListeners","showResultsBusy","showResultPending","$paginationDiv","$arrowLeft","$infoDiv","$arrowRight","paginationFrom","floor","showResults","activateButtons","paginationAll","min","listener","fetchSelectedStatements","hasDDLStatements","some","isDDLStatement","hasWriteStatements","isWriteStatement","executeDDLWriteStatementsEmbedded","executeDDLWriteStatementsInOnlineIDE","executeStatements","sucessfullyExecutedModifyingStatements","getDatabaseExplorer","refresh","notify","getNewStatements","new_statements","firstStatementIndex","executeNewStatements","AddDatabaseStatements","appendStatements","modifyingStatements","resetDatabase","fromIndex","executeStatementsString","successfullyExecutedModifyingStatements","showErrors","callback1","laterSelectExists","isSelectStatement","presentResultsIntern","minimapColors","linesDecorationsClassName","borderLeftClass","errorlevel","minimapColor","Warning","Info","setModelMarkers","$runtimeErrorsTab","$runtimeErrorsTabHeading","showErrorDecorations","$errorList","$errorLine","revealRangeInCenter","$sqlDiv","colorize","$messageDiv","$resultTabheading","$resultHeader","headerDiv","$bodyDiv","waitFunction","$header","rows","$row","cell","monacoEditor","StatementDelimiter","isOpen","isPolling","counter","isLongPolling","longPollCounter","databaseVersion","onOpen","startLongPolling","rollbackLocal","callbackIfTooFewStatements","callbackIfDone","doRefreshDatabaseExplorer","poll","getNewStatementsHttp","longPoll","resp","timeout","WaitOverlay","$waitDiv","visible","fadeOutPending","$bitteWartenText","$bitteWartenProgress","$historyPanel","panelEntries","panelEntry","makePanelEntry","makeLastButtonActive","$rollbackButton","$index","$text","$copybutton","$rollbackbutton","rollback","rollbackEmbedded","rollbackLocalNeeded","writeQueryManager","initialTemplateDump","initialStatements","writtenStatements","historyViewer","rightDiv","compiler","semicolonAngel","matchMedia","matches","login","initSliders","checkStartupComplete","startTimer","sendBeacon","timerHandle","isDirty","compile","renderErrorCount","oldDecorations","lightBulbOnClickFunctionList","$bracket_warning","children","$errorDiv","getSortedAndFilteredErrors","getErrorCount","lightBulbClass","class","onClickFunction","processError","$file","$error","locf","$errorDivs","$lineColumn","category","$message","showError","showRevisionActive","$homeworkTab","$homeworkTabLeft","$homeworkTabRight","$showRevisionButton","showRevision","originalModel","modifiedModel","createDiffEditor","getElementById","enableSplitViewResizing","originalEditable","renderSideBySide","original","modified","daysWithModules","dateString","date","stringToDate","dateWithoutTime","getDate","getMonth","getFullYear","dateToStringWithoutTime","dwm","day","m1","m2","moduleWithWorkspace","EmbeddedSlider","$container","firstLast","horVert","$otherDiv","initSlider","$sliderDiv","cursor","slide","otherHeight","newHeight","newOtherHeight","otherWidth","newWidth","newOtherWidth","$fileListDiv","addModule","$filesDiv","$addButton","currentFile","selectFile","removeFile","script","$fileDiv","hint","onDelete","$hintDiv","$monacoDiv","syntaxMap","md1","markdownit","highlight","str","lang","renderer","code_inline","idx","env","content","render","md2","codeMap","uncoloredtext","EmbeddedIndexedDB","databaseIdentifier","indexedDB","onsuccess","onupgradeneeded","objectStoreScripts","createObjectStore","keyPath","autoIncrement","transaction","oncomplete","scriptId","objectStore","databaseID","WriteQueryManager","statementsToExecute","statementsToWrite","atLeastOneExecuted","getDatabase","writeStatementsIfNecessary","forceWriteStatements","writeDatabase","$databaseResetButton","statementsSql","urlWithoutProtocol","urlLowerCase","loadSqLiteDump","loadMySql","saveDatabaseToCache","loadFromUrl","scriptList","programIsExecutable","compileRunsAfterCodeReset","readConfig","databaseURL","$dbTreeDiv","load","loadableDb","initDatabase","withFileList","fileExplorer","getFirstModule","initScripts","indexedDBReady","readScripts","databaseReady","removeAllFiles","initWorkspace","$filesListDiv","setFirstFileActive","addHint","configJson","withOutput","withErrorList","withBottomPanel","markFile","lineNumbersMinChars","getScript","scriptListJSon","saveScripts","countDown","$codeResetButton","oneNotSaved","writeScript","removeScript","considerShowingCodeResetButton","$centerDiv","makeWaitDiv","$codeResetModalWindow","makeCodeResetModalWindow","$databaseResetModalWindow","makeDatabaseResetModalWindow","makeRightDiv","$editorDiv","$bracketErrorDiv","makeBracketErrorDiv","$controlsDiv","$bottomDivInner","makeBottomDiv","makeFilesDiv","$rightDivInner","$rightSideContainer","$infoButton","$buttonOpen","$openInputButton","loadDatabaseFromFile","$buttonSave","saveDatabaseToFile","addWriteQueryListener","dbImportExport","$parent","$window","deleteScriptsInDB","$filesHeader","$tabheadings","$thLeftSide","$thErrors","$thPCode","$thHistory","$thRightSide","$tabError","$tabPCode","$tabHistory","$thRun","mainEmbeddedList","initJavaOnlineDivs","$script","initDiv","embeddedStarter","prefix","editorPath","monacoEditorPath","require","paths","availableLanguages","ignoreDuplicateModules","initEditor"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,G,0FC3ErD,IAAIC,EAAW,SAAUlC,GACvB,aAEA,IAAImC,EAAKvB,OAAOkB,UACZM,EAASD,EAAGJ,eAEZM,EAA4B,mBAAXpB,OAAwBA,OAAS,GAClDqB,EAAiBD,EAAQE,UAAY,aACrCC,EAAsBH,EAAQI,eAAiB,kBAC/CC,EAAoBL,EAAQnB,aAAe,gBAE/C,SAASyB,EAAOC,EAAKnB,EAAKN,GAOxB,OANAP,OAAOC,eAAe+B,EAAKnB,EAAK,CAC9BN,MAAOA,EACPL,YAAY,EACZ+B,cAAc,EACdC,UAAU,IAELF,EAAInB,GAEb,IAEEkB,EAAO,GAAI,IACX,MAAOI,GACPJ,EAAS,SAASC,EAAKnB,EAAKN,GAC1B,OAAOyB,EAAInB,GAAON,GAItB,SAAS6B,EAAKC,EAASC,EAASC,EAAMC,GAEpC,IAAIC,EAAiBH,GAAWA,EAAQpB,qBAAqBwB,EAAYJ,EAAUI,EAC/EC,EAAY3C,OAAOY,OAAO6B,EAAevB,WACzC0B,EAAU,IAAIC,EAAQL,GAAe,IAMzC,OAFAG,EAAUG,QAsMZ,SAA0BT,EAASE,EAAMK,GACvC,IAAIG,EA/KuB,iBAiL3B,OAAO,SAAgBC,EAAQC,GAC7B,GAhLoB,cAgLhBF,EACF,MAAM,IAAIG,MAAM,gCAGlB,GAnLoB,cAmLhBH,EAA6B,CAC/B,GAAe,UAAXC,EACF,MAAMC,EAKR,OAAOE,IAMT,IAHAP,EAAQI,OAASA,EACjBJ,EAAQK,IAAMA,IAED,CACX,IAAIG,EAAWR,EAAQQ,SACvB,GAAIA,EAAU,CACZ,IAAIC,EAAiBC,EAAoBF,EAAUR,GACnD,GAAIS,EAAgB,CAClB,GAAIA,IAAmBE,EAAkB,SACzC,OAAOF,GAIX,GAAuB,SAAnBT,EAAQI,OAGVJ,EAAQY,KAAOZ,EAAQa,MAAQb,EAAQK,SAElC,GAAuB,UAAnBL,EAAQI,OAAoB,CACrC,GAnNqB,mBAmNjBD,EAEF,MADAA,EAjNc,YAkNRH,EAAQK,IAGhBL,EAAQc,kBAAkBd,EAAQK,SAEN,WAAnBL,EAAQI,QACjBJ,EAAQe,OAAO,SAAUf,EAAQK,KAGnCF,EA5NkB,YA8NlB,IAAIa,EAASC,EAASxB,EAASE,EAAMK,GACrC,GAAoB,WAAhBgB,EAAOE,KAAmB,CAO5B,GAJAf,EAAQH,EAAQmB,KAjOA,YAFK,iBAuOjBH,EAAOX,MAAQM,EACjB,SAGF,MAAO,CACLhD,MAAOqD,EAAOX,IACdc,KAAMnB,EAAQmB,MAGS,UAAhBH,EAAOE,OAChBf,EA/OgB,YAkPhBH,EAAQI,OAAS,QACjBJ,EAAQK,IAAMW,EAAOX,OA9QPe,CAAiB3B,EAASE,EAAMK,GAE7CD,EAcT,SAASkB,EAASI,EAAIjC,EAAKiB,GACzB,IACE,MAAO,CAAEa,KAAM,SAAUb,IAAKgB,EAAGxE,KAAKuC,EAAKiB,IAC3C,MAAOd,GACP,MAAO,CAAE2B,KAAM,QAASb,IAAKd,IAhBjC/C,EAAQgD,KAAOA,EAoBf,IAOImB,EAAmB,GAMvB,SAASb,KACT,SAASwB,KACT,SAASC,KAIT,IAAIC,EAAoB,GACxBA,EAAkB1C,GAAkB,WAClC,OAAO2C,MAGT,IAAIC,EAAWtE,OAAOuE,eAClBC,EAA0BF,GAAYA,EAASA,EAASG,EAAO,MAC/DD,GACAA,IAA4BjD,GAC5BC,EAAO/B,KAAK+E,EAAyB9C,KAGvC0C,EAAoBI,GAGtB,IAAIE,EAAKP,EAA2BjD,UAClCwB,EAAUxB,UAAYlB,OAAOY,OAAOwD,GAWtC,SAASO,EAAsBzD,GAC7B,CAAC,OAAQ,QAAS,UAAU0D,SAAQ,SAAS5B,GAC3CjB,EAAOb,EAAW8B,GAAQ,SAASC,GACjC,OAAOoB,KAAKvB,QAAQE,EAAQC,SAkClC,SAAS4B,EAAclC,EAAWmC,GAgChC,IAAIC,EAgCJV,KAAKvB,QA9BL,SAAiBE,EAAQC,GACvB,SAAS+B,IACP,OAAO,IAAIF,GAAY,SAASG,EAASC,IAnC7C,SAASC,EAAOnC,EAAQC,EAAKgC,EAASC,GACpC,IAAItB,EAASC,EAASlB,EAAUK,GAASL,EAAWM,GACpD,GAAoB,UAAhBW,EAAOE,KAEJ,CACL,IAAIsB,EAASxB,EAAOX,IAChB1C,EAAQ6E,EAAO7E,MACnB,OAAIA,GACiB,iBAAVA,GACPiB,EAAO/B,KAAKc,EAAO,WACduE,EAAYG,QAAQ1E,EAAM8E,SAASC,MAAK,SAAS/E,GACtD4E,EAAO,OAAQ5E,EAAO0E,EAASC,MAC9B,SAAS/C,GACVgD,EAAO,QAAShD,EAAK8C,EAASC,MAI3BJ,EAAYG,QAAQ1E,GAAO+E,MAAK,SAASC,GAI9CH,EAAO7E,MAAQgF,EACfN,EAAQG,MACP,SAASI,GAGV,OAAOL,EAAO,QAASK,EAAOP,EAASC,MAvBzCA,EAAOtB,EAAOX,KAiCZkC,CAAOnC,EAAQC,EAAKgC,EAASC,MAIjC,OAAOH,EAaLA,EAAkBA,EAAgBO,KAChCN,EAGAA,GACEA,KAkHV,SAAS1B,EAAoBF,EAAUR,GACrC,IAAII,EAASI,EAASzB,SAASiB,EAAQI,QACvC,QA1TEyC,IA0TEzC,EAAsB,CAKxB,GAFAJ,EAAQQ,SAAW,KAEI,UAAnBR,EAAQI,OAAoB,CAE9B,GAAII,EAASzB,SAAiB,SAG5BiB,EAAQI,OAAS,SACjBJ,EAAQK,SArUZwC,EAsUInC,EAAoBF,EAAUR,GAEP,UAAnBA,EAAQI,QAGV,OAAOO,EAIXX,EAAQI,OAAS,QACjBJ,EAAQK,IAAM,IAAIyC,UAChB,kDAGJ,OAAOnC,EAGT,IAAIK,EAASC,EAASb,EAAQI,EAASzB,SAAUiB,EAAQK,KAEzD,GAAoB,UAAhBW,EAAOE,KAIT,OAHAlB,EAAQI,OAAS,QACjBJ,EAAQK,IAAMW,EAAOX,IACrBL,EAAQQ,SAAW,KACZG,EAGT,IAAIoC,EAAO/B,EAAOX,IAElB,OAAM0C,EAOFA,EAAK5B,MAGPnB,EAAQQ,EAASwC,YAAcD,EAAKpF,MAGpCqC,EAAQiD,KAAOzC,EAAS0C,QAQD,WAAnBlD,EAAQI,SACVJ,EAAQI,OAAS,OACjBJ,EAAQK,SAzXVwC,GAmYF7C,EAAQQ,SAAW,KACZG,GANEoC,GA3BP/C,EAAQI,OAAS,QACjBJ,EAAQK,IAAM,IAAIyC,UAAU,oCAC5B9C,EAAQQ,SAAW,KACZG,GAoDX,SAASwC,EAAaC,GACpB,IAAIC,EAAQ,CAAEC,OAAQF,EAAK,IAEvB,KAAKA,IACPC,EAAME,SAAWH,EAAK,IAGpB,KAAKA,IACPC,EAAMG,WAAaJ,EAAK,GACxBC,EAAMI,SAAWL,EAAK,IAGxB3B,KAAKiC,WAAWC,KAAKN,GAGvB,SAASO,EAAcP,GACrB,IAAIrC,EAASqC,EAAMQ,YAAc,GACjC7C,EAAOE,KAAO,gBACPF,EAAOX,IACdgD,EAAMQ,WAAa7C,EAGrB,SAASf,EAAQL,GAIf6B,KAAKiC,WAAa,CAAC,CAAEJ,OAAQ,SAC7B1D,EAAYoC,QAAQmB,EAAc1B,MAClCA,KAAKqC,OAAM,GA8Bb,SAASjC,EAAOkC,GACd,GAAIA,EAAU,CACZ,IAAIC,EAAiBD,EAASjF,GAC9B,GAAIkF,EACF,OAAOA,EAAenH,KAAKkH,GAG7B,GAA6B,mBAAlBA,EAASd,KAClB,OAAOc,EAGT,IAAKE,MAAMF,EAASG,QAAS,CAC3B,IAAIxH,GAAK,EAAGuG,EAAO,SAASA,IAC1B,OAASvG,EAAIqH,EAASG,QACpB,GAAItF,EAAO/B,KAAKkH,EAAUrH,GAGxB,OAFAuG,EAAKtF,MAAQoG,EAASrH,GACtBuG,EAAK9B,MAAO,EACL8B,EAOX,OAHAA,EAAKtF,WAzeTkF,EA0eII,EAAK9B,MAAO,EAEL8B,GAGT,OAAOA,EAAKA,KAAOA,GAKvB,MAAO,CAAEA,KAAM1C,GAIjB,SAASA,IACP,MAAO,CAAE5C,WAzfPkF,EAyfyB1B,MAAM,GA+MnC,OA5mBAG,EAAkBhD,UAAYwD,EAAGqC,YAAc5C,EAC/CA,EAA2B4C,YAAc7C,EACzCA,EAAkB8C,YAAcjF,EAC9BoC,EACArC,EACA,qBAaF1C,EAAQ6H,oBAAsB,SAASC,GACrC,IAAIC,EAAyB,mBAAXD,GAAyBA,EAAOH,YAClD,QAAOI,IACHA,IAASjD,GAG2B,uBAAnCiD,EAAKH,aAAeG,EAAKtH,QAIhCT,EAAQgI,KAAO,SAASF,GAQtB,OAPIlH,OAAOqH,eACTrH,OAAOqH,eAAeH,EAAQ/C,IAE9B+C,EAAOI,UAAYnD,EACnBpC,EAAOmF,EAAQpF,EAAmB,sBAEpCoF,EAAOhG,UAAYlB,OAAOY,OAAO8D,GAC1BwC,GAOT9H,EAAQmI,MAAQ,SAAStE,GACvB,MAAO,CAAEoC,QAASpC,IAsEpB0B,EAAsBE,EAAc3D,WACpC2D,EAAc3D,UAAUU,GAAuB,WAC7C,OAAOyC,MAETjF,EAAQyF,cAAgBA,EAKxBzF,EAAQoI,MAAQ,SAASnF,EAASC,EAASC,EAAMC,EAAasC,QACxC,IAAhBA,IAAwBA,EAAc2C,SAE1C,IAAIC,EAAO,IAAI7C,EACbzC,EAAKC,EAASC,EAASC,EAAMC,GAC7BsC,GAGF,OAAO1F,EAAQ6H,oBAAoB3E,GAC/BoF,EACAA,EAAK7B,OAAOP,MAAK,SAASF,GACxB,OAAOA,EAAOrB,KAAOqB,EAAO7E,MAAQmH,EAAK7B,WAuKjDlB,EAAsBD,GAEtB3C,EAAO2C,EAAI5C,EAAmB,aAO9B4C,EAAGhD,GAAkB,WACnB,OAAO2C,MAGTK,EAAGiD,SAAW,WACZ,MAAO,sBAkCTvI,EAAQwI,KAAO,SAAS5G,GACtB,IAAI4G,EAAO,GACX,IAAK,IAAI/G,KAAOG,EACd4G,EAAKrB,KAAK1F,GAMZ,OAJA+G,EAAKC,UAIE,SAAShC,IACd,KAAO+B,EAAKd,QAAQ,CAClB,IAAIjG,EAAM+G,EAAKE,MACf,GAAIjH,KAAOG,EAGT,OAFA6E,EAAKtF,MAAQM,EACbgF,EAAK9B,MAAO,EACL8B,EAQX,OADAA,EAAK9B,MAAO,EACL8B,IAsCXzG,EAAQqF,OAASA,EAMjB5B,EAAQ3B,UAAY,CAClB6F,YAAalE,EAEb6D,MAAO,SAASqB,GAcd,GAbA1D,KAAK2D,KAAO,EACZ3D,KAAKwB,KAAO,EAGZxB,KAAKb,KAAOa,KAAKZ,WApgBjBgC,EAqgBApB,KAAKN,MAAO,EACZM,KAAKjB,SAAW,KAEhBiB,KAAKrB,OAAS,OACdqB,KAAKpB,SAzgBLwC,EA2gBApB,KAAKiC,WAAW1B,QAAQ4B,IAEnBuB,EACH,IAAK,IAAIlI,KAAQwE,KAEQ,MAAnBxE,EAAKoI,OAAO,IACZzG,EAAO/B,KAAK4E,KAAMxE,KACjBgH,OAAOhH,EAAKqI,MAAM,MACrB7D,KAAKxE,QAnhBX4F,IAyhBF0C,KAAM,WACJ9D,KAAKN,MAAO,EAEZ,IACIqE,EADY/D,KAAKiC,WAAW,GACLG,WAC3B,GAAwB,UAApB2B,EAAWtE,KACb,MAAMsE,EAAWnF,IAGnB,OAAOoB,KAAKgE,MAGd3E,kBAAmB,SAAS4E,GAC1B,GAAIjE,KAAKN,KACP,MAAMuE,EAGR,IAAI1F,EAAUyB,KACd,SAASkE,EAAOC,EAAKC,GAYnB,OAXA7E,EAAOE,KAAO,QACdF,EAAOX,IAAMqF,EACb1F,EAAQiD,KAAO2C,EAEXC,IAGF7F,EAAQI,OAAS,OACjBJ,EAAQK,SApjBZwC,KAujBYgD,EAGZ,IAAK,IAAInJ,EAAI+E,KAAKiC,WAAWQ,OAAS,EAAGxH,GAAK,IAAKA,EAAG,CACpD,IAAI2G,EAAQ5B,KAAKiC,WAAWhH,GACxBsE,EAASqC,EAAMQ,WAEnB,GAAqB,SAAjBR,EAAMC,OAIR,OAAOqC,EAAO,OAGhB,GAAItC,EAAMC,QAAU7B,KAAK2D,KAAM,CAC7B,IAAIU,EAAWlH,EAAO/B,KAAKwG,EAAO,YAC9B0C,EAAanH,EAAO/B,KAAKwG,EAAO,cAEpC,GAAIyC,GAAYC,EAAY,CAC1B,GAAItE,KAAK2D,KAAO/B,EAAME,SACpB,OAAOoC,EAAOtC,EAAME,UAAU,GACzB,GAAI9B,KAAK2D,KAAO/B,EAAMG,WAC3B,OAAOmC,EAAOtC,EAAMG,iBAGjB,GAAIsC,GACT,GAAIrE,KAAK2D,KAAO/B,EAAME,SACpB,OAAOoC,EAAOtC,EAAME,UAAU,OAG3B,KAAIwC,EAMT,MAAM,IAAIzF,MAAM,0CALhB,GAAImB,KAAK2D,KAAO/B,EAAMG,WACpB,OAAOmC,EAAOtC,EAAMG,gBAU9BzC,OAAQ,SAASG,EAAMb,GACrB,IAAK,IAAI3D,EAAI+E,KAAKiC,WAAWQ,OAAS,EAAGxH,GAAK,IAAKA,EAAG,CACpD,IAAI2G,EAAQ5B,KAAKiC,WAAWhH,GAC5B,GAAI2G,EAAMC,QAAU7B,KAAK2D,MACrBxG,EAAO/B,KAAKwG,EAAO,eACnB5B,KAAK2D,KAAO/B,EAAMG,WAAY,CAChC,IAAIwC,EAAe3C,EACnB,OAIA2C,IACU,UAAT9E,GACS,aAATA,IACD8E,EAAa1C,QAAUjD,GACvBA,GAAO2F,EAAaxC,aAGtBwC,EAAe,MAGjB,IAAIhF,EAASgF,EAAeA,EAAanC,WAAa,GAItD,OAHA7C,EAAOE,KAAOA,EACdF,EAAOX,IAAMA,EAET2F,GACFvE,KAAKrB,OAAS,OACdqB,KAAKwB,KAAO+C,EAAaxC,WAClB7C,GAGFc,KAAKwE,SAASjF,IAGvBiF,SAAU,SAASjF,EAAQyC,GACzB,GAAoB,UAAhBzC,EAAOE,KACT,MAAMF,EAAOX,IAcf,MAXoB,UAAhBW,EAAOE,MACS,aAAhBF,EAAOE,KACTO,KAAKwB,KAAOjC,EAAOX,IACM,WAAhBW,EAAOE,MAChBO,KAAKgE,KAAOhE,KAAKpB,IAAMW,EAAOX,IAC9BoB,KAAKrB,OAAS,SACdqB,KAAKwB,KAAO,OACa,WAAhBjC,EAAOE,MAAqBuC,IACrChC,KAAKwB,KAAOQ,GAGP9C,GAGTuF,OAAQ,SAAS1C,GACf,IAAK,IAAI9G,EAAI+E,KAAKiC,WAAWQ,OAAS,EAAGxH,GAAK,IAAKA,EAAG,CACpD,IAAI2G,EAAQ5B,KAAKiC,WAAWhH,GAC5B,GAAI2G,EAAMG,aAAeA,EAGvB,OAFA/B,KAAKwE,SAAS5C,EAAMQ,WAAYR,EAAMI,UACtCG,EAAcP,GACP1C,IAKb,MAAS,SAAS2C,GAChB,IAAK,IAAI5G,EAAI+E,KAAKiC,WAAWQ,OAAS,EAAGxH,GAAK,IAAKA,EAAG,CACpD,IAAI2G,EAAQ5B,KAAKiC,WAAWhH,GAC5B,GAAI2G,EAAMC,SAAWA,EAAQ,CAC3B,IAAItC,EAASqC,EAAMQ,WACnB,GAAoB,UAAhB7C,EAAOE,KAAkB,CAC3B,IAAIiF,EAASnF,EAAOX,IACpBuD,EAAcP,GAEhB,OAAO8C,GAMX,MAAM,IAAI7F,MAAM,0BAGlB8F,cAAe,SAASrC,EAAUf,EAAYE,GAa5C,OAZAzB,KAAKjB,SAAW,CACdzB,SAAU8C,EAAOkC,GACjBf,WAAYA,EACZE,QAASA,GAGS,SAAhBzB,KAAKrB,SAGPqB,KAAKpB,SA7rBPwC,GAgsBOlC,IAQJnE,EA7sBK,CAotBiBC,EAAOD,SAGtC,IACE6J,mBAAqB3H,EACrB,MAAO4H,GAUPC,SAAS,IAAK,yBAAdA,CAAwC7H,K,2JC1uB1C,IAAY8H,E,wDAAZ,SAAYA,GACR,+BAEA,yCACA,qDACA,yCACA,uCACA,mCACA,mBACA,qBAEA,qCACA,6BACA,oCACA,sCACA,gCACA,sCACA,sCACA,sCACA,kCACA,sCACA,sCACA,gCACA,8BACA,gCACA,sCACA,8CACA,wCACA,wCACA,oCACA,sCACA,kCACA,sCACA,gCACA,oCACA,8CACA,sCACA,wCACA,0CACA,sCACA,oDACA,kCACA,oCACA,oCACA,8BACA,sCACA,oCACA,4CACA,8CACA,oCACA,oCACA,kCACA,8BACA,kCACA,0CAEA,8BACA,gCACA,gCAEA,kCACA,wCACA,kCACA,oCACA,oCACA,oCACA,8BACA,8BACA,oCACA,sCACA,8BACA,oCACA,kCACA,wCACA,wCACA,wCACA,sCACA,wCACA,4CAEA,oCACA,gDACA,8BACA,sCAGA,kCACA,oCACA,8CACA,gDACA,4CACA,8CACA,wDAGA,kBACA,wBACA,sBAAO,oBAAM,wCAAgB,4BAC7B,kCAAa,kCACb,0CACA,sBAAO,0BAAS,oCAAc,wCAC9B,sCACA,sBACA,6BAGA,+BAEA,uBAGA,uBAGA,+BAGA,qBAGA,iBAGA,qBAGA,uBAEA,mBAGA,2BAGA,6BAGA,yCAGA,2BAEA,2CAKA,qCACA,iCACA,2BACA,6BACA,uBACA,6BACA,qBACA,yBACA,+BACA,iCACA,yBACA,uBACA,+BACA,+CAhKJ,CAAYA,MAAS,KAmKd,ICjKFC,EDiKMC,EAA4C,CACnD,CAACF,EAAUG,YAAa,iBAExB,CAACH,EAAUI,iBAAkB,yBAC7B,CAACJ,EAAUK,uBAAwB,4BACnC,CAACL,EAAUM,iBAAkB,2BAC7B,CAACN,EAAUO,gBAAiB,+BAC5B,CAACP,EAAUQ,cAAe,sBAC1B,CAACR,EAAUS,MAAO,OAClB,CAACT,EAAUU,OAAQ,QAEnB,CAACV,EAAUW,eAAgB,SAC3B,CAACX,EAAUY,WAAY,KACvB,CAACZ,EAAUa,cAAe,QAC1B,CAACb,EAAUc,eAAgB,SAC3B,CAACd,EAAUe,YAAa,MACxB,CAACf,EAAUgB,eAAgB,SAC3B,CAAChB,EAAUiB,eAAgB,SAC3B,CAACjB,EAAUkB,eAAgB,SAC3B,CAAClB,EAAUmB,aAAc,OACzB,CAACnB,EAAUo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","file":"sql-ide-embedded.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","export enum TokenType {\r\n    identifier,\r\n    // constants\r\n    integerConstant,\r\n    floatingPointConstant,\r\n    booleanConstant,\r\n    stringConstant,\r\n    charConstant,\r\n    true,\r\n    false,\r\n    // keywords\r\n    keywordRename,\r\n    keywordTo,\r\n    keywordAlter,\r\n    keywordCommit,\r\n    keywordAdd,\r\n    keywordDelete,\r\n    keywordSelect,\r\n    keywordInsert,\r\n    keywordInto,\r\n    keywordValues,\r\n    keywordUpdate,\r\n    keywordSet,\r\n    keywordNo,\r\n    keywordUse,\r\n    keywordCreate,\r\n    keywordReferences,\r\n    keywordPrimary,\r\n    keywordForeign,\r\n    keywordTable,\r\n    keywordColumn,\r\n    keywordDrop,\r\n    keywordUnique,\r\n    keywordKey,\r\n    keywordIndex,\r\n    keywordConstraint,\r\n    keywordModify,\r\n    keywordCascade,\r\n    keywordRestrict,\r\n    keywordAction,\r\n    keywordAutoincrement,\r\n    keywordFrom,\r\n    keywordWhere,\r\n    keywordGroup,\r\n    keywordBy,\r\n    keywordHaving,\r\n    keywordOrder,\r\n    keywordAscending,\r\n    keywordDescending,\r\n    keywordNulls,\r\n    keywordFirst,\r\n    keywordLast,\r\n    keywordIs,\r\n    keywordNull,\r\n    keywordDatabase,\r\n\r\n    keywordOr,\r\n    keywordAnd,\r\n    keywordNot,\r\n\r\n    keywordJoin,\r\n    keywordNatural,\r\n    keywordLeft,\r\n    keywordCross,\r\n    keywordInner,\r\n    keywordOuter,\r\n    keywordOn,\r\n    keywordAs,\r\n    keywordLimit,\r\n    keywordOffset,\r\n    keywordIn,\r\n    keywordNotIn,\r\n    keywordLike,\r\n    keywordCollate,\r\n    keywordDefault,\r\n    keywordComment,\r\n    keywordEngine,\r\n    keywordCharset,\r\n    keywordCharacter,\r\n    \r\n    keywordStart,\r\n    keywordTransaction,\r\n    keywordIf,\r\n    keywordExists,\r\n\r\n    // brackets\r\n    leftBracket, // ()\r\n    rightBracket,\r\n    leftSquareBracket, // []\r\n    rightSquareBracket,\r\n    leftCurlyBracket, // {}\r\n    rightCurlyBracket,\r\n    leftRightSquareBracket, // []\r\n    \r\n    // binary operators\r\n    dot, //.\r\n    modulo,\r\n    minus, plus, multiplication, division,\r\n    singleQuote, doubleQuote, // ', \"\r\n    identifierQuote,\r\n    lower, greater, lowerOrEqual, greaterOrEqual, \r\n    concatenation,    \r\n    equal,\r\n    notEqual,\r\n\r\n    // semicolon\r\n    semicolon, // ;\r\n\r\n    colon, // :\r\n\r\n    // comma\r\n    comma, // ,\r\n\r\n    // backslash\r\n    backslash,\r\n\r\n    // |\r\n    pipe,\r\n\r\n    // @\r\n    at,\r\n\r\n    // #\r\n    hash,\r\n\r\n    // whitespace\r\n    space,\r\n\r\n    tab,\r\n\r\n    // newline\r\n    newline,\r\n\r\n    // line feed\r\n    linefeed,\r\n\r\n    // only lexer-internal\r\n    identifierChar,  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    comment,\r\n\r\n    endofSourcecode, // will be generated after sourcecode end\r\n    \r\n    // Program statement types:\r\n    \r\n    // additional AST node types\r\n    constantNode,\r\n    callMethod,\r\n    unaryOp,\r\n    binaryOp,\r\n    table,\r\n    subquery,\r\n    list,\r\n    column,\r\n    columnDef,\r\n    allColumns, // *\r\n    isNull,\r\n    isNot, // used by lexer to lex \"is not null\" into one token\r\n    isNotNull,\r\n    omittedeStatement\r\n}\r\n\r\nexport var TokenTypeReadable: {[tt: number]: string} = {\r\n    [TokenType.identifier]: \"ein Bezeichner\",\r\n    // constants\r\n    [TokenType.integerConstant]: \"eine Integer-Konstante\",\r\n    [TokenType.floatingPointConstant]: \"eine Fließkomma-Konstante\",\r\n    [TokenType.booleanConstant]: \"eine boolesche Konstante\",\r\n    [TokenType.stringConstant]: \"eine Zeichenketten-Konstante\",\r\n    [TokenType.charConstant]: \"eine char-Konstante\",\r\n    [TokenType.true]: \"true\",\r\n    [TokenType.false]: \"false\",\r\n    // keywords\r\n    [TokenType.keywordRename]: \"rename\",\r\n    [TokenType.keywordTo]: \"to\",\r\n    [TokenType.keywordAlter]: \"alter\",\r\n    [TokenType.keywordCommit]: \"commit\",\r\n    [TokenType.keywordAdd]: \"add\",\r\n    [TokenType.keywordDelete]: \"delete\",\r\n    [TokenType.keywordSelect]: \"select\",\r\n    [TokenType.keywordInsert]: \"insert\",\r\n    [TokenType.keywordInto]: \"into\",\r\n    [TokenType.keywordValues]: \"values\",\r\n    [TokenType.keywordUpdate]: \"update\",\r\n    [TokenType.keywordSet]: \"set\",\r\n    [TokenType.keywordNo]: \"no\",\r\n    [TokenType.keywordUse]: \"use\",\r\n    [TokenType.keywordCreate]: \"create\",\r\n    [TokenType.keywordReferences]: \"references\",\r\n    [TokenType.keywordPrimary]: \"primary\",\r\n    [TokenType.keywordForeign]: \"foreign\",\r\n    [TokenType.keywordTable]: \"table\",\r\n    [TokenType.keywordColumn]: \"column\",\r\n    [TokenType.keywordDrop]: \"drop\",\r\n    [TokenType.keywordUnique]: \"unique\",\r\n    [TokenType.keywordKey]: \"key\",\r\n    [TokenType.keywordIndex]: \"index\",\r\n    [TokenType.keywordConstraint]: \"constraint\",\r\n    [TokenType.keywordModify]: \"modify\",\r\n    [TokenType.keywordCascade]: \"cascade\",\r\n    [TokenType.keywordRestrict]: \"restrict\",\r\n    [TokenType.keywordAction]: \"action\",\r\n    [TokenType.keywordAutoincrement]: \"autoincrement\",\r\n    [TokenType.keywordFrom]: \"from\",\r\n    [TokenType.keywordWhere]: \"where\",\r\n    [TokenType.keywordGroup]: \"group\",\r\n    [TokenType.keywordBy]: \"by\",\r\n    [TokenType.keywordHaving]: \"having\",\r\n    [TokenType.keywordOrder]: \"order\",\r\n    [TokenType.keywordAscending]: \"ascending\",\r\n    [TokenType.keywordDescending]: \"descending\",\r\n    [TokenType.keywordNulls]: \"nulls\",\r\n    [TokenType.keywordFirst]: \"first\",\r\n    [TokenType.keywordLast]: \"last\",\r\n    [TokenType.keywordIs]: \"is\",\r\n    [TokenType.keywordNull]: \"null\",\r\n    [TokenType.keywordDatabase]: \"database\",\r\n\r\n\r\n    [TokenType.keywordAnd]: \"and\",\r\n    [TokenType.keywordOr]: \"or\",\r\n    [TokenType.keywordNot]: \"not\",\r\n\r\n    [TokenType.keywordJoin]: \"join\",\r\n    [TokenType.keywordNatural]: \"natural\",\r\n    [TokenType.keywordLeft]: \"left\",\r\n    [TokenType.keywordCross]: \"cross\",\r\n    [TokenType.keywordInner]: \"inner\",\r\n    [TokenType.keywordOuter]: \"outer\",\r\n    [TokenType.keywordOn]: \"on\",\r\n    [TokenType.keywordAs]: \"as\",\r\n    [TokenType.keywordLimit]: \"limit\",\r\n    [TokenType.keywordOffset]: \"offset\",\r\n    [TokenType.keywordIn]: \"in\",\r\n    [TokenType.keywordNotIn]: \"not in\",\r\n    [TokenType.keywordLike]: \"like\",\r\n    [TokenType.keywordCollate]: \"collate\",\r\n    [TokenType.keywordDefault]: \"default\",\r\n    [TokenType.keywordComment]: \"comment\",\r\n    [TokenType.keywordEngine]: \"engine\",\r\n    [TokenType.keywordCharset]: \"charset\",\r\n    [TokenType.keywordCharacter]: \"character\",\r\n    [TokenType.keywordStart]: \"start\",\r\n    [TokenType.keywordTransaction]: \"transaction\",\r\n    [TokenType.keywordIf]: \"if\",\r\n    [TokenType.keywordExists]: \"exists\",\r\n\r\n    // brackets\r\n    [TokenType.leftBracket]: \"(\", // ()\r\n    [TokenType.rightBracket]: \")\",\r\n    [TokenType.leftSquareBracket]: \"[\", // []\r\n    [TokenType.rightSquareBracket]: \"]\",\r\n    [TokenType.leftCurlyBracket]: \"{\", // {}\r\n    [TokenType.rightCurlyBracket]: \"}\",\r\n    [TokenType.leftRightSquareBracket]: \"[]\", \r\n    \r\n    // operators\r\n    [TokenType.dot]: \".\", //.\r\n    [TokenType.minus]: \"-\", \r\n    [TokenType.modulo]: \"%\", \r\n    [TokenType.plus]: \"+\", \r\n    [TokenType.multiplication]: \"*\", \r\n    [TokenType.division]: \"/\",\r\n    [TokenType.singleQuote]: \"'\", \r\n    [TokenType.doubleQuote]: \"\\\"\", // ']: \"\", \"\r\n    [TokenType.identifierQuote]: \"`\",\r\n    [TokenType.lower]: \"<\", \r\n    [TokenType.greater]: \">\",\r\n    [TokenType.equal]: \"=\", \r\n    [TokenType.lowerOrEqual]: \"<=\", \r\n    [TokenType.greaterOrEqual]: \">=\", \r\n    [TokenType.concatenation]: \"||\", \r\n    \r\n    // semicolon\r\n    [TokenType.semicolon]: \";\", // ;\r\n    [TokenType.colon]: \":\", // ;\r\n\r\n    // comma\r\n    [TokenType.comma]: \",\", \r\n\r\n    // backslash\r\n    [TokenType.backslash]: \"\\\\\",\r\n\r\n    // at\r\n    [TokenType.at]: \"@\",\r\n\r\n    // hash\r\n    [TokenType.hash]: \"#\",\r\n    \r\n    // pipe\r\n    [TokenType.pipe]: \"|\",\r\n\r\n    // whitespace\r\n    [TokenType.space]: \"ein Leerzeichen\",\r\n    [TokenType.tab]: \"ein Tabulatorzeichen\",\r\n\r\n    // newline\r\n    [TokenType.newline]: \"ein Zeilenumbruch\",\r\n\r\n    // only lexer-internal\r\n    [TokenType.identifierChar]: \"eines der Zeichen a..z, A..Z, _\",  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    [TokenType.comment]: \"ein Kommentar\",\r\n\r\n    [TokenType.endofSourcecode]: \"das Ende des Programmes\"\r\n\r\n}\r\n\r\nexport var specialCharList: {[keyword: string]:TokenType} = {\r\n    '(': TokenType.leftBracket, // ()\r\n    ')': TokenType.rightBracket,\r\n    '[': TokenType.leftSquareBracket, // []\r\n    ']': TokenType.rightSquareBracket,\r\n    '{': TokenType.leftCurlyBracket, // {}\r\n    '}': TokenType.rightCurlyBracket,\r\n    \r\n    // operators\r\n    '.': TokenType.dot, //.\r\n    ',': TokenType.comma, //.\r\n    '-': TokenType.minus,\r\n    '%': TokenType.modulo,\r\n    '+': TokenType.plus, \r\n    '*': TokenType.multiplication, \r\n    '/': TokenType.division,\r\n    '\\\\': TokenType.backslash,\r\n    '@': TokenType.at,\r\n    '#': TokenType.hash,\r\n    '|': TokenType.pipe,\r\n    '\\'': TokenType.singleQuote, \r\n    '\"': TokenType.doubleQuote, // ', \"\r\n    '`': TokenType.identifierQuote, // ', \"\r\n    \"<\": TokenType.lower,\r\n    \">\": TokenType.greater,\r\n    \"=\": TokenType.equal,\r\n    \"<>\": TokenType.notEqual,\r\n    \r\n    ';': TokenType.semicolon, // ;\r\n    ':': TokenType.colon, // ;\r\n\r\n    // whitespace\r\n    ' ': TokenType.space,\r\n    '\\t': TokenType.tab,\r\n\r\n    // newline\r\n    '\\n': TokenType.newline,\r\n    '\\r': TokenType.linefeed\r\n}\r\n\r\nexport var keywordList: {[keyword: string]:TokenType} = {\r\n    \"rename\": TokenType.keywordRename,\r\n    \"to\": TokenType.keywordTo,\r\n    \"alter\": TokenType.keywordAlter,\r\n    \"commit\": TokenType.keywordCommit,\r\n    \"add\": TokenType.keywordAdd,\r\n    \"delete\": TokenType.keywordDelete,\r\n    \"select\": TokenType.keywordSelect,\r\n    \"insert\": TokenType.keywordInsert,\r\n    \"into\": TokenType.keywordInto,\r\n    \"values\": TokenType.keywordValues,\r\n    \"update\": TokenType.keywordUpdate,\r\n    \"set\": TokenType.keywordSet,\r\n    \"no\": TokenType.keywordNo,\r\n    \"use\": TokenType.keywordUse,\r\n    \"create\": TokenType.keywordCreate,\r\n    \"references\": TokenType.keywordReferences,\r\n    \"primary\": TokenType.keywordPrimary,\r\n    \"foreign\": TokenType.keywordForeign,\r\n    \"table\": TokenType.keywordTable,\r\n    \"column\": TokenType.keywordColumn,\r\n    \"drop\": TokenType.keywordDrop,\r\n    \"unique\": TokenType.keywordUnique,\r\n    \"key\": TokenType.keywordKey,\r\n    \"index\": TokenType.keywordIndex,\r\n    \"constraint\": TokenType.keywordConstraint,\r\n    \"modify\": TokenType.keywordModify,\r\n    \"cascade\": TokenType.keywordCascade,\r\n    \"restrict\": TokenType.keywordRestrict,\r\n    \"action\": TokenType.keywordAction,\r\n    \"autoincrement\": TokenType.keywordAutoincrement,\r\n    \"auto_increment\": TokenType.keywordAutoincrement,\r\n    \"from\": TokenType.keywordFrom,\r\n    \"where\": TokenType.keywordWhere,\r\n    \"true\": TokenType.true,\r\n    \"false\": TokenType.false,\r\n    \"group\": TokenType.keywordGroup,\r\n    \"by\": TokenType.keywordBy,\r\n    \"having\": TokenType.keywordHaving,\r\n    \"order\": TokenType.keywordOrder,\r\n    \"asc\": TokenType.keywordAscending,\r\n    \"desc\": TokenType.keywordDescending,\r\n    \"nulls\": TokenType.keywordNulls,\r\n    \"first\": TokenType.keywordFirst,\r\n    \"last\": TokenType.keywordLast,\r\n    \"is\": TokenType.keywordIs,\r\n    \"null\": TokenType.keywordNull,\r\n    \"database\": TokenType.keywordDatabase,\r\n\r\n    \"or\": TokenType.keywordOr,\r\n    \"and\": TokenType.keywordAnd,\r\n    \"not\": TokenType.keywordNot,\r\n\r\n    \"join\": TokenType.keywordJoin,\r\n    \"natural\": TokenType.keywordNatural,\r\n    \"left\": TokenType.keywordLeft,\r\n    \"cross\": TokenType.keywordCross,\r\n    \"inner\": TokenType.keywordInner,\r\n    \"outer\": TokenType.keywordOuter,\r\n    \"on\": TokenType.keywordOn,\r\n    \"as\": TokenType.keywordAs,\r\n    \"limit\": TokenType.keywordLimit,\r\n    \"offset\": TokenType.keywordOffset,\r\n    \"in\": TokenType.keywordIn,\r\n    \"not in\": TokenType.keywordNotIn,\r\n    \"like\": TokenType.keywordLike,\r\n    \"collate\": TokenType.keywordCollate,\r\n    \"default\": TokenType.keywordDefault,\r\n    \"comment\": TokenType.keywordComment,\r\n    \"engine\": TokenType.keywordEngine,\r\n    \"charset\": TokenType.keywordCharset,\r\n    \"character\": TokenType.keywordCharacter,\r\n    \"start\": TokenType.keywordStart,\r\n    \"transaction\": TokenType.keywordTransaction,\r\n    \"if\": TokenType.keywordIf,\r\n    \"exists\": TokenType.keywordExists\r\n\r\n\r\n};\r\n\r\nexport var EscapeSequenceList: {[keyword: string]:string} = {\r\n    \"n\": \"\\n\",\r\n    \"r\": \"\\r\",\r\n    \"t\": \"\\t\",\r\n    \"\\\"\": \"\\\"\",\r\n    \"'\": \"'\",\r\n    \"\\\\\": \"\\\\\"\r\n}\r\n\r\nexport type TextPosition = {\r\n    line: number,\r\n    column: number, \r\n    length: number\r\n}\r\n\r\nexport type TextPositionWithoutLength = {\r\n    line: number,\r\n    column: number\r\n}\r\n\r\nexport type Token = {\r\n    tt: TokenType,\r\n    value: string|number|boolean,\r\n    position: TextPosition,\r\n    commentBefore?: Token,\r\n    isDoubleQuotedIdentifier?: boolean\r\n}\r\n\r\nexport type TokenList = Token[];\r\n\r\nfunction tokenToString(t: Token){\r\n    return \"<div><span style='font-weight: bold'>\" + TokenType[t.tt] + \"</span>\" +\r\n            \"<span style='color: blue'> &nbsp;'\" + t.value + \"'</span> (l&nbsp;\" + t.position.line + \", c&nbsp;\" + t.position.column + \")</div>\";\r\n}\r\n \r\nexport function tokenListToString(tl: TokenList):string{\r\n    let s = \"\";\r\n    for(let t of tl){\r\n        s += tokenToString(t) + \"\\n\";\r\n    }\r\n    return s;\r\n}","import { TokenList, specialCharList, TokenType, Token, EscapeSequenceList, keywordList, TextPosition, TokenTypeReadable } from \"./Token.js\";\r\n\r\nenum LexerState {\r\n    number, identifier, stringConstant, characterConstant, multilineComment, EndoflineComment\r\n}\r\n\r\nvar endChar = \"►\"; // \\u10000\r\n\r\nexport type QuickFix = {\r\n    title: string,\r\n    editsProvider: (uri: monaco.Uri) => monaco.languages.WorkspaceTextEdit[]\r\n}\r\n\r\nexport type ErrorLevel = \"info\" | \"error\" | \"warning\";\r\n\r\nexport type Error = {\r\n    position: TextPosition,\r\n    text: string,\r\n    quickFix?: QuickFix,\r\n    level: ErrorLevel\r\n}\r\n\r\nexport class Lexer {\r\n\r\n    tokenList: TokenList;\r\n    nonSpaceLastTokenType: TokenType;\r\n    nonSpaceLastToken: Token;\r\n\r\n    errorList: Error[];\r\n    pos: number;\r\n    line: number;\r\n    column: number;\r\n\r\n    currentChar: string;\r\n    nextChar: string;\r\n\r\n    input: string;\r\n\r\n    spaceTokens: TokenType[] = [\r\n        TokenType.space, TokenType.tab, TokenType.newline\r\n    ];\r\n\r\n    bracketStack: TokenType[];\r\n    bracketError: string;\r\n    correspondingBracket: { [key: number]: TokenType } = {};\r\n\r\n    tokenTypesToMerge: { first: TokenType, second: TokenType, merged: TokenType }[] = [\r\n        { first: TokenType.keywordNotIn, second: TokenType.keywordIn, merged: TokenType.keywordNotIn },\r\n        { first: TokenType.keywordIs, second: TokenType.keywordNot, merged: TokenType.isNot },\r\n        { first: TokenType.isNot, second: TokenType.keywordNull, merged: TokenType.isNotNull },\r\n        { first: TokenType.keywordIs, second: TokenType.keywordNull, merged: TokenType.isNull },\r\n    ]\r\n\r\n    constructor() {\r\n        this.correspondingBracket[TokenType.leftBracket] = TokenType.rightBracket;\r\n        this.correspondingBracket[TokenType.leftCurlyBracket] = TokenType.rightCurlyBracket;\r\n        this.correspondingBracket[TokenType.leftSquareBracket] = TokenType.rightSquareBracket;\r\n        this.correspondingBracket[TokenType.rightBracket] = TokenType.leftBracket;\r\n        this.correspondingBracket[TokenType.rightCurlyBracket] = TokenType.leftCurlyBracket;\r\n        this.correspondingBracket[TokenType.rightSquareBracket] = TokenType.leftSquareBracket;\r\n    }\r\n\r\n    lex(input: string): { tokens: TokenList, errors: Error[], bracketError: string } {\r\n\r\n        this.input = input.replace(\"\\u00a0\", \" \");\r\n        this.tokenList = [];\r\n        this.errorList = [];\r\n        this.bracketError = null;\r\n        this.bracketStack = [];\r\n        this.pos = 0;\r\n        this.line = 1;\r\n        this.column = 1;\r\n        this.nonSpaceLastTokenType = null;\r\n        this.nonSpaceLastToken = null;\r\n\r\n\r\n        if (input.length == 0) {\r\n            return { tokens: this.tokenList, errors: this.errorList, bracketError: null };\r\n        }\r\n\r\n        this.currentChar = input.charAt(0);\r\n\r\n        this.nextChar = input.length > 1 ? input.charAt(1) : endChar;\r\n\r\n\r\n        while (this.currentChar != endChar) {\r\n            this.mainState();\r\n        }\r\n\r\n        if (this.bracketStack.length > 0) {\r\n            let bracketOpen = this.bracketStack.pop();\r\n            let bracketClosed = this.correspondingBracket[bracketOpen];\r\n\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[bracketClosed]);\r\n        }\r\n\r\n        return {\r\n            tokens: this.tokenList,\r\n            errors: this.errorList,\r\n            bracketError: this.bracketError\r\n        };\r\n\r\n    }\r\n\r\n    checkClosingBracket(tt: TokenType) {\r\n        if (this.bracketStack.length == 0) {\r\n            let bracketOpen = this.correspondingBracket[tt];\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[tt]);\r\n            return;\r\n        }\r\n        let openBracket = this.bracketStack.pop();\r\n        let correspondingBracket = this.correspondingBracket[openBracket];\r\n        if (tt != correspondingBracket) {\r\n            this.setBracketError(TokenTypeReadable[openBracket] + \" \" + TokenTypeReadable[correspondingBracket]);\r\n        }\r\n    }\r\n\r\n    setBracketError(error: string) {\r\n        if (this.bracketError == null) this.bracketError = error;\r\n    }\r\n\r\n    next() {\r\n        this.pos++;\r\n        this.currentChar = this.nextChar;\r\n        if (this.pos + 1 < this.input.length) {\r\n            this.nextChar = this.input.charAt(this.pos + 1);\r\n        } else {\r\n            this.nextChar = endChar;\r\n        }\r\n        this.column++; // column of current char\r\n    }\r\n\r\n\r\n\r\n    mainState() {\r\n\r\n        let char = this.currentChar;\r\n\r\n        let specialCharToken = specialCharList[char];\r\n\r\n        if (specialCharToken != null) {\r\n            switch (specialCharToken) {\r\n                case TokenType.leftSquareBracket:\r\n                    if (this.nextChar == \"]\") {\r\n                        this.pushToken(TokenType.leftRightSquareBracket, \"[]\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.leftSquareBracket, \"[\");\r\n                        this.bracketStack.push(specialCharToken);\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.division:\r\n                    if (this.nextChar == '*') {\r\n                        this.lexMultilineComment();\r\n                        return;\r\n                    }\r\n                    this.pushToken(TokenType.division, '/');\r\n                    this.next();\r\n                    return;\r\n                case TokenType.pipe:\r\n                    if (this.nextChar == \"|\") {\r\n                        this.pushToken(TokenType.concatenation, '||');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.pipe, '|');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.lower:\r\n                    if (this.nextChar == \">\") {\r\n                        this.pushToken(TokenType.notEqual, '<>');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.lower, '<');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.rightSquareBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.minus:\r\n                    if (this.isDigit(this.nextChar, 10) && !\r\n                        ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.rightBracket].indexOf(this.nonSpaceLastTokenType) >= 0)\r\n                    ) {\r\n                        this.lexNumber();\r\n                        return;\r\n                    } else if (this.nextChar == '-') {\r\n                        this.lexEndofLineComment(\"--\");\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.minus, '-');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.hash:\r\n                    if(this.nonSpaceLastToken == null || this.nonSpaceLastToken.position.line < this.line){\r\n                        this.lexEndofLineComment('#');\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.hash, \"#\");\r\n                        this.next();\r\n                    }\r\n                    break;\r\n                case TokenType.singleQuote:\r\n                    this.lexStringConstant(\"'\");\r\n                    return;\r\n                case TokenType.doubleQuote:\r\n                    this.lexStringConstant('\"');\r\n                    return;\r\n                case TokenType.newline:\r\n                    this.pushToken(TokenType.newline, '\\n');\r\n                    this.line++;\r\n                    this.column = 0;\r\n                    this.next();\r\n                    return;\r\n                case TokenType.space:\r\n                case TokenType.tab:\r\n                    this.lexSpace();\r\n                    return;\r\n                case TokenType.linefeed:\r\n                    this.next();\r\n                    return;\r\n                case TokenType.at:\r\n                    this.lexAnnotation();\r\n                    return;\r\n                case TokenType.identifierQuote:\r\n                    this.lexQuotedIdentifier();\r\n                    return;\r\n                \r\n            }\r\n\r\n            this.pushToken(specialCharToken, char);\r\n            this.next();\r\n            return;\r\n\r\n        }\r\n\r\n        // no special char. Number?\r\n\r\n        if (this.isDigit(char, 10)) {\r\n            this.lexNumber();\r\n            return;\r\n        }\r\n\r\n        this.lexIdentifierOrKeyword();\r\n\r\n    }\r\n\r\n\r\n    lexQuotedIdentifier() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let s: string = \"\";\r\n        this.next();\r\n        while(this.currentChar != '`' && this.currentChar != endChar){\r\n            s += this.currentChar;\r\n            this.next();\r\n        }\r\n        if(this.currentChar == endChar){\r\n            this.pushError(\"Innerhalb eines in `` eingeschlossenen Bezeichners wurde das Ende der Datei erreicht.\", s.length + 1, \"error\", line, column);\r\n        } else {\r\n            this.next(); // skip `\r\n            this.pushToken(TokenType.identifier, s, line, column);\r\n        }\r\n    }\r\n\r\n    pushToken(tt: TokenType, text: string | number | boolean, line: number = this.line, column: number = this.column, length: number = (\"\" + text).length) {\r\n        let t: Token = {\r\n            tt: tt,\r\n            value: text,\r\n            position: {\r\n                column: column,\r\n                line: line,\r\n                length: length\r\n            }\r\n        }\r\n\r\n        for (let tripel of this.tokenTypesToMerge) {\r\n            if (tt == tripel.second && this.nonSpaceLastTokenType == tripel.first) {\r\n                let newLength = column - this.nonSpaceLastToken.position.column + length;\r\n                this.nonSpaceLastToken.tt = tripel.merged;\r\n                this.nonSpaceLastToken.position = { column: this.nonSpaceLastToken.position.column, line: line, length: newLength };\r\n                this.nonSpaceLastToken.value = this.nonSpaceLastToken.value + \" \" + text;\r\n\r\n                this.nonSpaceLastTokenType = tripel.merged;\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (!(this.spaceTokens.indexOf(tt) >= 0)) {\r\n            this.nonSpaceLastTokenType = tt;\r\n            this.nonSpaceLastToken = t;\r\n        }\r\n\r\n        this.tokenList.push(t);\r\n    }\r\n\r\n    pushError(text: string, length: number, errorLevel: ErrorLevel = \"error\", line: number = this.line, column: number = this.column) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: {\r\n                line: line,\r\n                column: column,\r\n                length: length\r\n            },\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n\r\n\r\n    isDigit(a: string, base: number) {\r\n        var charCode = a.charCodeAt(0);\r\n\r\n        if (base == 10) return (charCode >= 48 && charCode <= 57); // 0 - 9\r\n        if (base == 2) return (charCode >= 48 && charCode <= 49); // 0, 1\r\n        if (base == 8) return (charCode >= 48 && charCode <= 55); // 0 - 7\r\n        if (base == 16) return (charCode >= 48 && charCode <= 57) || (charCode >= 97 && charCode <= 102) ||\r\n            (charCode >= 65 && charCode <= 70); // 0 - 9 || a - f || A - F\r\n    }\r\n\r\n    lexSpace() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n\r\n        let posStart = this.pos;\r\n        while (this.currentChar == \" \" || this.currentChar == \"\\t\") {\r\n            this.next();\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n        this.pushToken(TokenType.space, this.input.substring(posStart, posEnd), line, column);\r\n        return;\r\n\r\n    }\r\n\r\n    lexCharacterConstant() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n        this.next();\r\n        let char = this.currentChar;\r\n        if (char == \"\\\\\") {\r\n            let escapeChar = EscapeSequenceList[this.nextChar];\r\n            if (escapeChar == null) {\r\n                this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                if (this.nextChar != \"'\") {\r\n                    char = this.nextChar;\r\n                    this.next();\r\n                }\r\n            } else {\r\n                char = escapeChar;\r\n                this.next();\r\n            }\r\n        }\r\n        this.next();\r\n        if (this.currentChar != \"'\") {\r\n            this.pushError(\"Das Ende der char-Konstante wird erwartet (').\", 1);\r\n        } else {\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.charConstant, char, line, column);\r\n\r\n    }\r\n\r\n    lexStringConstant(beginChar: string) {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let text = \"\";\r\n\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\\\\") {\r\n                let escapeChar = EscapeSequenceList[this.nextChar];\r\n                if (escapeChar == null) {\r\n                    this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                } else {\r\n                    char = escapeChar;\r\n                    this.next();\r\n                }\r\n            } else if (char == beginChar) {\r\n                this.next();\r\n                break;\r\n            } else if (char == \"\\n\" || char == endChar) {\r\n                this.pushError('Innerhalb einer String-Konstante wurde das Zeilenende erreicht.', text.length + 1, \"error\", line, column);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        if (beginChar == \"'\") {\r\n            this.pushToken(TokenType.stringConstant, text, line, column, text.length + 2);\r\n        } else {\r\n            this.pushToken(TokenType.identifier, text, line, column, text.length + 2);\r\n            this.tokenList[this.tokenList.length - 1].isDoubleQuotedIdentifier = true;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    lexMultilineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let lastCharWasNewline: boolean = false;\r\n\r\n        let text = \"/*\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"*\" && this.nextChar == \"/\") {\r\n                this.next();\r\n                this.next();\r\n                text += \"*/\";\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                this.pushError(\"Innerhalb eines Mehrzeilenkommentars (/*... */) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            if (char == \"\\n\") {\r\n                this.line++;\r\n                this.column = 0;\r\n                lastCharWasNewline = true;\r\n                text += char;\r\n            } else if (!(lastCharWasNewline && char == \" \")) {\r\n                text += char;\r\n                lastCharWasNewline = false;\r\n            }\r\n\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n    lexEndofLineComment(commentStart: string) {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let text = commentStart;\r\n        for(let i = 0; i < commentStart.length; i++){\r\n            this.next();\r\n        }\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\n\") {\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                // this.pushError(\"Innerhalb eines Einzeilenkommentars (//... ) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n\r\n    lexNumber() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let sign: number = 1;\r\n        if (this.currentChar == '-') {\r\n            sign = -1;\r\n            this.next();\r\n        }\r\n\r\n        let posStart = this.pos;\r\n\r\n        let firstChar = this.currentChar;\r\n\r\n        this.next();\r\n\r\n        let radix: number = 10;\r\n\r\n        if (firstChar == '0' && (['b', 'x', '0', '1', '2', '3', '4', '5', '6', '7'].indexOf(this.currentChar) >= 0)) {\r\n            if (this.currentChar == 'x') {\r\n                radix = 16;\r\n                this.next();\r\n            } else if (this.currentChar == 'b') {\r\n                radix = 2;\r\n                this.next();\r\n            } else radix = 8;\r\n            posStart = this.pos;\r\n        }\r\n\r\n        while (this.isDigit(this.currentChar, radix)) {\r\n            this.next();\r\n        }\r\n\r\n        let tt = TokenType.integerConstant;\r\n\r\n        if (this.currentChar == \".\") {\r\n            tt = TokenType.floatingPointConstant;\r\n\r\n            this.next();\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n\r\n        }\r\n\r\n        let base = this.input.substring(posStart, this.pos);\r\n\r\n        posStart = this.pos;\r\n        let exponent: number = 0;\r\n\r\n        let hasExponential: boolean = false;\r\n        //@ts-ignore\r\n        if (this.currentChar == \"e\") {\r\n            hasExponential = true;\r\n            this.next();\r\n            let posExponentStart: number = this.pos;\r\n\r\n            //@ts-ignore\r\n            if (this.currentChar == '-') {\r\n                this.next();\r\n            }\r\n\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n            let exponentString = this.input.substring(posExponentStart, this.pos);\r\n            exponent = Number.parseInt(exponentString);\r\n        }\r\n\r\n        if (this.currentChar == 'd' || this.currentChar == 'f') {\r\n            tt == TokenType.floatingPointConstant;\r\n            this.next();\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n        }\r\n\r\n        let value: number = (tt == TokenType.integerConstant) ? Number.parseInt(base, radix) : Number.parseFloat(base);\r\n        value *= sign;\r\n        if (exponent != 0) value *= Math.pow(10, exponent);\r\n\r\n        this.pushToken(tt, value, line, column);\r\n\r\n    }\r\n\r\n    lexAnnotation() {\r\n        let line = this.line;\r\n        let column = this.column - 1;\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n        this.next(); // skip@\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n        this.pushToken(TokenType.at, text, line, column, text.length + 1);\r\n    }\r\n\r\n    lexIdentifierOrKeyword() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n\r\n        let tt = keywordList[text.toLowerCase()];\r\n        if (tt != null && typeof tt == \"number\") {\r\n\r\n            switch (tt) {\r\n                case TokenType.true:\r\n                    this.pushToken(TokenType.booleanConstant, true, line, column);\r\n                    break;\r\n                case TokenType.false:\r\n                    this.pushToken(TokenType.booleanConstant, false, line, column);\r\n                    break;\r\n                default:\r\n                    this.pushToken(tt, text, line, column);\r\n                    break;\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        this.pushToken(TokenType.identifier, text, line, column);\r\n\r\n    }\r\n\r\n    isSpace(char: string): boolean {\r\n        return char == \" \" || char == \"\\n\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport function errorListToString(errorList: Error[]): string {\r\n    let s = \"\";\r\n\r\n    for (let error of errorList) {\r\n\r\n        s += \"Z \" + error.position.line + \", S \" + error.position.column + \": \";\r\n        s += error.text + \"<br>\";\r\n\r\n    }\r\n\r\n    return s;\r\n}","import { Lexer } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Token, TokenList, TokenType, tokenListToString } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class Formatter implements monaco.languages.DocumentFormattingEditProvider,\r\n    monaco.languages.OnTypeFormattingEditProvider {\r\n\r\n    autoFormatTriggerCharacters: string[] = ['\\n'];\r\n\r\n    displayName?: string = \"Java-Autoformat\";\r\n\r\n\r\n    constructor(\r\n        // private main: Main\r\n    ) {\r\n\r\n    }\r\n\r\n    init() {\r\n        monaco.languages.registerDocumentFormattingEditProvider('myJava', this);\r\n        monaco.languages.registerOnTypeFormattingEditProvider('myJava', this);\r\n    }\r\n\r\n    provideOnTypeFormattingEdits(model: monaco.editor.ITextModel, position: monaco.Position, ch: string, options: monaco.languages.FormattingOptions, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n    deleteOverlappingRanges(edits: monaco.languages.TextEdit[]) {\r\n        for (let i = 0; i < edits.length - 1; i++) {\r\n            let e = edits[i];\r\n            let e1 = edits[i + 1];\r\n            if (e.range.endLineNumber < e1.range.startLineNumber) continue;\r\n            if (e.range.endLineNumber == e1.range.startLineNumber) {\r\n                if (e.range.endColumn >= e1.range.startColumn) {\r\n                    edits.splice(i + 1, 1);\r\n                } else {\r\n                    if (e.range.endColumn == 0 && e.text.length > 0 && e1.range.startColumn == 1 && e1.range.endColumn > e1.range.startColumn && e1.text == \"\") {\r\n                        let delta = e.text.length - (e1.range.endColumn - e1.range.startColumn);\r\n                        if (delta > 0) { \r\n                            e.text = e.text.substr(0, delta);\r\n                            edits.splice(i+1, 1);\r\n                        }\r\n                        else if (delta < 0)\r\n                        { \r\n                            //@ts-ignore\r\n                            e1.range.endColumn = e1.range.startColumn - delta;\r\n                            edits.splice(i, 1);\r\n                            i--;\r\n\r\n                         }\r\n                        else {\r\n                            edits.splice(i, 2);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    provideDocumentFormattingEdits(model: monaco.editor.ITextModel,\r\n        options: monaco.languages.FormattingOptions,\r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n\r\n    format(model: monaco.editor.ITextModel): monaco.languages.TextEdit[] {\r\n\r\n        let edits: monaco.languages.TextEdit[] = [];\r\n\r\n        // if (this.main.currentWorkspace == null || this.main.currentWorkspace.currentlyOpenModule == null) {\r\n        //     return [];\r\n        // }\r\n\r\n        // let text = this.main.monaco_editor.getValue({ preserveBOM: false, lineEnding: \"\\n\" });\r\n\r\n        let text = model.getValue(monaco.editor.EndOfLinePreference.LF);\r\n\r\n        let tokenlist = new Lexer().lex(text).tokens;\r\n\r\n        // let tokenlist = this.main.currentWorkspace.currentlyOpenModule.tokenList;\r\n\r\n        if (tokenlist == null) return [];\r\n\r\n        // TODO:\r\n        // { at the end of line, with one space before; followed only by spaces and \\n\r\n        // indent lines according to { and }\r\n        // Beware: int i[] = { ... }\r\n        // exactly one space before/after binary operators\r\n        // no space after ( and no space before )\r\n        // (   ) -> ()\r\n        // (  ()) -> (())\r\n        // (()  ) -> (())\r\n\r\n        let lastNonSpaceToken: Token = null;\r\n        let indentLevel = 0;\r\n        let tabSize = 3;\r\n        let curlyBracesOpenAtLines: number[] = [];\r\n        let indentLevelAtSwitchStatements: number[] = [];\r\n        let switchHappend: boolean = false;\r\n        let lastTokenWasNewLine: number = 0;\r\n        let roundBracketsOpen: number = 0;\r\n\r\n        for (let i = 0; i < tokenlist.length; i++) {\r\n\r\n            let t = tokenlist[i];\r\n            lastTokenWasNewLine--;\r\n\r\n            switch (t.tt) {\r\n\r\n                case TokenType.leftCurlyBracket:\r\n                    if (switchHappend) {\r\n                        switchHappend = false;\r\n                        indentLevelAtSwitchStatements.push(indentLevel + 2);\r\n                        indentLevel++;\r\n                    }\r\n                    indentLevel++;\r\n                    curlyBracesOpenAtLines.push(t.position.line);\r\n                    if (lastNonSpaceToken != null) {\r\n                        let tt = lastNonSpaceToken.tt;\r\n                        if (tt == TokenType.rightBracket || tt == TokenType.identifier || tt == TokenType.leftRightSquareBracket) {\r\n                            this.replaceBetween(lastNonSpaceToken, t, edits, \" \");\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let token1 = tokenlist[i + 1];\r\n                        if (token1.tt != TokenType.newline && token1.tt != TokenType.space) {\r\n                            this.insertSpaces(edits, token1.position.line, token1.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    if (indentLevelAtSwitchStatements[indentLevelAtSwitchStatements.length - 1] == indentLevel) {\r\n                        indentLevelAtSwitchStatements.pop();\r\n                        indentLevel--;\r\n                        // if(t.position.column >= 3){\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                        // }    \r\n                    }\r\n                    indentLevel--;\r\n                    let openedAtLine = curlyBracesOpenAtLines.pop();\r\n                    if (openedAtLine != null && openedAtLine != t.position.line) {\r\n                        if (lastNonSpaceToken != null && lastNonSpaceToken.position.line == t.position.line) {\r\n                            this.replace(edits, t.position, t.position, \"\\n\" + \" \".repeat(indentLevel * tabSize));\r\n                        }\r\n                    } else {\r\n                        if (i > 0) {\r\n                            let token1 = tokenlist[i - 1];\r\n                            if (token1.tt != TokenType.space && token1.tt != TokenType.newline) {\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    roundBracketsOpen++;\r\n                    if (i < tokenlist.length - 2) {\r\n                        let nextToken1 = tokenlist[i + 1];\r\n                        let nextToken2 = tokenlist[i + 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                            i++;\r\n                            if (nextToken2.tt == TokenType.rightBracket) {\r\n                                i++;\r\n                                roundBracketsOpen--;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt == TokenType.space && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line, lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    roundBracketsOpen--;\r\n                    if (i > 1) {\r\n                        let nextToken1 = tokenlist[i - 1];\r\n                        let nextToken2 = tokenlist[i - 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.newline:\r\n                    lastTokenWasNewLine = 2;\r\n                    if (i < tokenlist.length - 2) {\r\n\r\n                        let lastTokenIsOperator = this.isBinaryOperator(lastNonSpaceToken?.tt);\r\n                        let nextTokenIsOperator = this.isBinaryOperator(this.getNextNonSpaceToken(i, tokenlist).tt);\r\n\r\n                        let beginNextLine = tokenlist[i + 1];\r\n                        let token2 = tokenlist[i + 2];\r\n                        let currentIndentation = 0;\r\n\r\n                        if (beginNextLine.tt == TokenType.newline) {\r\n                            break;\r\n                        }\r\n\r\n                        let delta: number = 0;\r\n                        if (beginNextLine.tt == TokenType.space) {\r\n                            if (token2.tt == TokenType.newline) {\r\n                                break;\r\n                            }\r\n                            currentIndentation = beginNextLine.position.length;\r\n                            i++;\r\n                            if (token2.tt == TokenType.rightCurlyBracket) {\r\n                                delta = -1;\r\n                            }\r\n                        }\r\n\r\n                        if (beginNextLine.tt == TokenType.rightCurlyBracket) {\r\n                            delta = -1;\r\n                            // indentLevel--;\r\n                            // curlyBracesOpenAtLines.pop();\r\n                            // lastNonSpaceToken = beginNextLine;\r\n                            // i++;\r\n                        }\r\n\r\n                        if(nextTokenIsOperator || lastTokenIsOperator) delta = 1;\r\n\r\n                        let il = indentLevel + delta;\r\n                        if(roundBracketsOpen > 0){\r\n                            il++;\r\n                        }\r\n                        if (il < 0) il = 0;\r\n\r\n                        let correctIndentation = il * tabSize;\r\n\r\n                        if (correctIndentation > currentIndentation) {\r\n                            this.insertSpaces(edits, t.position.line + 1, 0, correctIndentation - currentIndentation);\r\n                        } else if (correctIndentation < currentIndentation) {\r\n                            this.deleteSpaces(edits, t.position.line + 1, 0, currentIndentation - correctIndentation);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.space:\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment) {\r\n                            if (i > 0) {\r\n                                let lastToken = tokenlist[i - 1];\r\n                                if (lastToken.tt != TokenType.newline) {\r\n                                    if (t.position.length > 1) {\r\n                                        this.deleteSpaces(edits, t.position.line, t.position.column, t.position.length - 1);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.comma:\r\n                case TokenType.semicolon:\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt != TokenType.newline && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.tt == TokenType.space && lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line,\r\n                                    lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment && nextToken.tt != TokenType.space && nextToken.tt != TokenType.newline) {\r\n                            this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightSquareBracket:\r\n                    if (lastNonSpaceToken != null && lastNonSpaceToken.tt == TokenType.leftSquareBracket) {\r\n                        this.replaceBetween(lastNonSpaceToken, t, edits, \"\");\r\n\r\n                    }\r\n                    break;\r\n\r\n            }\r\n\r\n            // binary operator?\r\n            if (this.isBinaryOperator(t.tt)) {\r\n\r\n                let lowerGeneric = t.tt == TokenType.lower && this.lowerBelongsToGenericExpression(i, tokenlist);\r\n                let greaterGeneric = t.tt == TokenType.greater && this.greaterBelongsToGenericExpression(i, tokenlist);\r\n\r\n                if (lastTokenWasNewLine <= 0 && lastNonSpaceToken != null && [TokenType.leftBracket, TokenType.comma].indexOf(lastNonSpaceToken.tt) < 0) {\r\n\r\n                    if (i > 0) {\r\n                        let tokenBefore = tokenlist[i - 1];\r\n                        let spaces = (lowerGeneric || greaterGeneric) ? 0 : 1;\r\n                        if (tokenBefore.tt == TokenType.space) {\r\n                            if (tokenBefore.position.length != spaces) {\r\n                                this.insertSpaces(edits, tokenBefore.position.line,\r\n                                    tokenBefore.position.column, spaces - tokenBefore.position.length);\r\n                            }\r\n                        } else {\r\n                            if (spaces == 1)\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        let spaces = (lowerGeneric) ? 0 : 1;\r\n                        if (nextToken.tt == TokenType.space) {\r\n                            if (greaterGeneric && i < tokenlist.length - 2 && tokenlist[i + 2].tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (nextToken.position.length != spaces) {\r\n                                this.insertSpaces(edits, nextToken.position.line,\r\n                                    nextToken.position.column, spaces - nextToken.position.length);\r\n                            }\r\n                        } else {\r\n                            if (greaterGeneric && nextToken.tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (spaces == 1) this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            if (t.tt != TokenType.space && t.tt != TokenType.newline) {\r\n                lastNonSpaceToken = t;\r\n            }\r\n\r\n        }\r\n\r\n        this.deleteOverlappingRanges(edits);\r\n\r\n        return edits;\r\n\r\n    }\r\n    getNextNonSpaceToken(currentIndex: number, tokenlist: TokenList):  Token {\r\n\r\n        if(currentIndex == tokenlist.length - 1) return tokenlist[currentIndex];\r\n\r\n        let j = currentIndex + 1;\r\n        while(j < tokenlist.length - 1 && (tokenlist[j].tt == TokenType.space )){\r\n            j++;\r\n        }\r\n        return tokenlist[j];\r\n\r\n    }\r\n\r\n    lowerBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position + 1;\r\n        while (i < tokenlist.length) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.greater) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i++;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    greaterBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position - 1;\r\n        while (i >= 0) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.lower) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i--;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isBinaryOperator(token: TokenType) {\r\n        return token != null && token >= TokenType.modulo && token <= TokenType.equal;\r\n    }\r\n\r\n    private replaceBetween(lastNonSpaceToken: Token, t: Token, edits: monaco.languages.TextEdit[], text: string) {\r\n        let positionFrom = {\r\n            line: lastNonSpaceToken.position.line,\r\n            column: lastNonSpaceToken.position.column + lastNonSpaceToken.position.length\r\n        };\r\n        let positionTo = {\r\n            line: t.position.line,\r\n            column: t.position.column\r\n        };\r\n        if (positionFrom.line != positionTo.line ||\r\n            positionTo.column - positionFrom.column != text.length) {\r\n            this.replace(edits, positionFrom, positionTo, text);\r\n        }\r\n    }\r\n\r\n    deleteSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column + numberOfSpaces + (column == 0 ? 1 : 0),\r\n                endLineNumber: line\r\n            },\r\n            text: \"\"\r\n        });\r\n    }\r\n\r\n    insertSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n\r\n        if (numberOfSpaces < 0) {\r\n            this.deleteSpaces(edits, line, column, -numberOfSpaces);\r\n            return;\r\n        }\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column,\r\n                endLineNumber: line\r\n            },\r\n            text: \" \".repeat(numberOfSpaces)\r\n        });\r\n    }\r\n\r\n    replace(edits: monaco.languages.TextEdit[], positionFrom: { line: number; column: number; }, positionTo: { line: number; column: number; }, text: string) {\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: positionFrom.column,\r\n                startLineNumber: positionFrom.line,\r\n                endColumn: positionTo.column,\r\n                endLineNumber: positionTo.line\r\n            },\r\n            text: text\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\n\r\nexport type Theme = {\r\n    name: string,\r\n    monacoTheme: string,\r\n    cssColors: { [color: string]: string }\r\n}\r\n\r\nexport class ThemeManager {\r\n\r\n    themes: Theme[] = [];\r\n\r\n    constructor() {\r\n        this.initThemes();\r\n    }\r\n\r\n    switchTheme(name: string) {\r\n        for (let theme of this.themes) {\r\n            if (theme.name == name) {\r\n                this.internalSwitchTheme(theme);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    internalSwitchTheme(theme: Theme) {\r\n        monaco.editor.setTheme(theme.monacoTheme);\r\n\r\n        let root = document.documentElement;\r\n        for (const key of Object.keys(theme.cssColors)) {\r\n            const value = theme.cssColors[key]\r\n\r\n            root.style.setProperty(key, value);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    initThemes() {\r\n\r\n        this.themes.push({\r\n            name: \"dark\",\r\n            monacoTheme: \"myCustomThemeDark\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"#1e1e1e\",\r\n                \"--backgroundLight\": \"#252526\",\r\n                \"--backgroundHeading\": \"#37373d\",\r\n                \"--backgroundSelected\": \"#2a2d2e\",\r\n                \"--fontColorNormal\": \"#c2cccc\",\r\n                \"--fontColorLight\": \"#e7e7e7\",\r\n                \"--slider\": \"#414141\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#1e1e1e\",\r\n                \"--scrollbar-thumb\": \"#3e3e3e\",\r\n                \"--scrollbar-thumb-hover\": \"#5e5e5e\",\r\n                \"--scrollbar-thumb-active\": \"#7e7e7e\",\r\n                \"--submenu-hover\": \"#094771\",\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#616162\",\r\n                \"--file-hover\": \"hsla(0, 0%, 38%, 0.125)\",\r\n                \"--file-active\": \"#094771\",\r\n                \"--file-active-hover\": \"rgba(9, 71, 113, 0.827)\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"blue\",\r\n                \"--contextmenu-background\": \"#3c3c3c\",\r\n                \"--contextmenu-color\": \"rgb(212,212,212)\",\r\n                \"--contextmenu-hover-background\": \"#094771\",\r\n                \"--contextmenu-hover-color\": \"#ffffff\",\r\n                \"--error-filename\": \"#2a709e\",\r\n                \"--error-line-ative\": \"#094771\",\r\n                \"--error-line-hover\": \"rgba(96, 96, 96, 0.125)\",\r\n                \"--error-position\": \"#c0802d\",\r\n                \"--linecolumn\": \"#14c714\",\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#2b2b7d2f\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"rgb(85,85,85)\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#383838\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#252526\",\r\n                \"--editorTooltip-border\": \"#454545\",\r\n\r\n                \"--renameInput-color\": \"#ffffff\",\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"white\",\r\n                \"--bottomdiv-tabheading-active\": \"rgb(97,97,255)\",\r\n                \"--noErrorMessage\": \"rgb(37, 211, 37)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"#1e1e1e\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"white\",\r\n                \"--consoleEntryIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"white\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 51, 51)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--deValue\": \"white\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#383838\",\r\n                \"--helper-border-color\": \"#d4d4d4\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#ffffff\",\r\n                \"--runInputColor\": \"#ffffff\",\r\n                \"--runBackgroundColor\": \"rgba(255, 255, 255, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n        let highlightColor = \"#8080ff\";\r\n\r\n        this.themes.push({\r\n            name: \"light\",\r\n            monacoTheme: \"myCustomThemeLight\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"white\",\r\n                \"--backgroundLight\": \"#f3f3f3\",\r\n                \"--backgroundHeading\": \"#dcdcdc\",\r\n                \"--backgroundSelected\": \"#e8e8e8\",\r\n                \"--fontColorNormal\": \"#756161\",\r\n                \"--fontColorLight\": \"#756161\",\r\n                \"--slider\": \"#b0b0b0\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#e3e3e3\",\r\n                \"--scrollbar-thumb\": \"#bababa\",\r\n                \"--scrollbar-thumb-hover\": \"#8e8e8e\",\r\n                \"--scrollbar-thumb-active\": \"#616161\",\r\n                \"--submenu-hover\": highlightColor,\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#cfcfcf\",\r\n                \"--file-hover\": \"#e8e8e8\",\r\n                \"--file-active\": highlightColor,\r\n                \"--file-active-hover\": \"#a0a0ff\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"white\",\r\n                \"--contextmenu-background\": \"white\",\r\n                \"--contextmenu-color\": \"#756161\",\r\n                \"--contextmenu-hover-background\": highlightColor,\r\n                \"--contextmenu-hover-color\": \"#a0a0ff\",\r\n                \"--error-filename\": \"#ff0000\",\r\n                \"--error-line-ative\": \"#ffa0a0\",\r\n                \"--error-line-hover\": \"#ffc0c0\",\r\n                \"--error-position\": \"#804040\",\r\n                \"--linecolumn\": \"#14c714\", // TODO\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#babaec80\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"#c0c0c0\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#e0e0e0\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#e0e0e0\",\r\n                \"--editorTooltip-border\": \"#9d9d9d\",\r\n\r\n                \"--renameInput-color\": \"#000000\",\r\n\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"#424242\",\r\n                \"--bottomdiv-tabheading-active\": \"#424242\",\r\n                \"--noErrorMessage\": \"rgb(17, 180, 17)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"white\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"#0000a0\",\r\n                \"--consoleEntryIdentifier\": \"black\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"#756161\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 21, 21)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"black\",\r\n                \"--deValue\": \"#0000a0\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#f3f3f3\",\r\n                \"--helper-border-color\": \"#606060\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#303030\",\r\n                \"--runInputColor\": \"#000000\",\r\n                \"--runBackgroundColor\": \"rgba(0, 0, 0, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { TokenType } from \"../lexer/Token.js\";\r\n\r\ntype CheckFunction = (columnIdentifier: string, parameterValues: number[]) => string;\r\ntype OutputFunction = (value: any, parameterValues: number[]) => string;\r\n\r\nexport abstract class SQLType {\r\n\r\n    abstract canCastTo(type2: SQLType): boolean;\r\n\r\n    abstract getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType;\r\n\r\n    abstract getUnaryResultType(operator: TokenType): SQLType;\r\n\r\n    abstract getBinaryResult(operator: TokenType, value1: any, value2: any): any;\r\n\r\n    abstract toString(): string;\r\n\r\n    abstract getBaseTypeName(): string;\r\n\r\n}\r\n\r\nexport class SQLBaseType extends SQLType {\r\n    // Map<tokenType, Map<SecondType, ResultType>>\r\n    binaryResultTypes: Map<TokenType, Map<SQLBaseType, SQLBaseType>> = new Map();\r\n\r\n    unaryOperators: TokenType[] = [];\r\n\r\n    static baseTypes: SQLBaseType[] = [];\r\n    static baseTypeMap: Map<string, SQLBaseType> = new Map();\r\n\r\n    public canCastToList: string[];\r\n\r\n    constructor(public name: string, public parameterDescriptions: string[],\r\n        public checkFunction: CheckFunction, public outputFunction: OutputFunction, canCastToList: string[]) {\r\n        super();\r\n        this.canCastToList = canCastToList.slice(0);\r\n        let ownIndex = this.canCastToList.indexOf(name);\r\n        if(ownIndex >= 0) this.canCastToList.splice(ownIndex, 1);\r\n    }\r\n\r\n    static fromConstantType(tt: TokenType): SQLBaseType {\r\n        switch (tt) {\r\n            case TokenType.stringConstant:\r\n                return this.baseTypeMap.get(\"text\");\r\n            case TokenType.integerConstant:\r\n                return this.baseTypeMap.get(\"integer\");\r\n            case TokenType.floatingPointConstant:\r\n                return this.baseTypeMap.get(\"float\");\r\n            case TokenType.charConstant:\r\n                return this.baseTypeMap.get(\"text\");\r\n            case TokenType.booleanConstant:\r\n                return this.baseTypeMap.get(\"boolean\");\r\n            case TokenType.keywordNull:\r\n                return this.baseTypeMap.get(\"null\");\r\n        \r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    getBaseTypeName(): string {\r\n        return this.name;\r\n    }\r\n\r\n    toString(): string {\r\n        return this.name;\r\n    }\r\n\r\n    static getBaseType(name: string) {\r\n        if(name == 'char') name = 'varchar';\r\n        return this.baseTypeMap.get(name.toLocaleLowerCase());\r\n    }\r\n\r\n    static addBaseTypes(baseTypes: SQLBaseType[]) {\r\n        SQLBaseType.baseTypes = SQLBaseType.baseTypes.concat(baseTypes);\r\n        baseTypes.forEach(t => SQLBaseType.baseTypeMap.set(t.name, t));\r\n    }\r\n\r\n    addBinaryOperation(tokenType: TokenType | TokenType[], secondType: SQLBaseType, resultType: SQLBaseType, isCommutative: boolean = true) {\r\n\r\n        if (!Array.isArray(tokenType)) tokenType = [tokenType];\r\n\r\n        tokenType.forEach(t => {\r\n            let map: Map<SQLBaseType, SQLBaseType> = this.binaryResultTypes.get(t);\r\n            if (map == null) {\r\n                map = new Map();\r\n                this.binaryResultTypes.set(t, map);\r\n            }\r\n            map.set(secondType, resultType);\r\n            if (isCommutative && secondType != this) {\r\n                secondType.addBinaryOperation(t, this, resultType, false);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    canCastTo(type2: SQLType): boolean {\r\n\r\n        let bt2: SQLBaseType = type2 instanceof SQLBaseType ? type2 : type2[\"baseType\"];\r\n\r\n        return this.canCastToList.indexOf(bt2.name) >= 0 || this.name == bt2.name;\r\n\r\n    }\r\n\r\n    getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType {\r\n\r\n\r\n        let map = this.binaryResultTypes.get(operator);\r\n        if (map == null) return null;\r\n\r\n        let bt2: SQLBaseType = secondType instanceof SQLBaseType ? secondType : secondType[\"baseType\"];\r\n\r\n        return map.get(bt2);\r\n\r\n    }\r\n\r\n    getUnaryResultType(operator: TokenType): SQLType {\r\n        if([TokenType.isNull, TokenType.isNotNull].indexOf(operator) >= 0) return booleanType;\r\n        if(this.unaryOperators.indexOf(operator)>= 0) return this;\r\n    }\r\n\r\n    getBinaryResult(operator: TokenType, value1: any, value2: any): any {\r\n        switch (operator) {\r\n            case TokenType.concatenation:\r\n                if (value1 != null && value2 != null) return value1 + value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.plus:\r\n                if (value1 != null && value2 != null) return value1 + value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.minus:\r\n                if (value1 != null && value2 != null) return value1 - value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.multiplication:\r\n                if (value1 != null && value2 != null) return value1 * value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.division:\r\n                if (value1 != null && value2 != null) return value1 * value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.keywordAnd:\r\n                if (value1 != null && value2 != null) return value1 * value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.keywordOr:\r\n                if (value1 != null && value2 != null) return Math.max(value1, value2);\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.lower:\r\n                if (value1 != null && value2 != null) return value1 < value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.greater:\r\n                if (value1 != null && value2 != null) return value1 >= value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.lowerOrEqual:\r\n                if (value1 != null && value2 != null) return value1 <= value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.greaterOrEqual:\r\n                if (value1 != null && value2 != null) return value1 >= value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.equal:\r\n                return value1 == value2;\r\n            case TokenType.notEqual:\r\n                return value1 != value2;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nlet tens: number[] = [1, 10, 100, 1000, 100000, 100000, 1000000, 10000000, 100000000, 1000000000];\r\n\r\nexport class SQLDerivedType extends SQLType {\r\n\r\n    name: string;\r\n\r\n    constructor(public baseType: SQLBaseType, public parameterValues: number[]) {\r\n        super();\r\n        let parameters = parameterValues.join(\", \");\r\n        this.name = baseType.name + \"(\" + parameters + \")\";\r\n    }\r\n\r\n    toString(): string {\r\n        return this.name;\r\n    }\r\n\r\n    getBaseTypeName(): string {\r\n        return this.baseType.name;\r\n    }\r\n\r\n\r\n    canCastTo(type2: SQLType): boolean {\r\n\r\n        let bt2: SQLBaseType = type2 instanceof SQLBaseType ? type2 : type2[\"baseType\"];\r\n\r\n        return this.baseType.canCastToList.indexOf(bt2.name) >= 0 || this.baseType.name == bt2.name;\r\n\r\n    }\r\n\r\n    getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType {\r\n\r\n\r\n        let map = this.baseType.binaryResultTypes.get(operator);\r\n        if (map == null) return null;\r\n\r\n        let bt2: SQLBaseType = secondType instanceof SQLBaseType ? secondType : secondType[\"baseType\"];\r\n\r\n        let returnBaseType = map.get(bt2);\r\n\r\n        if (this.baseType == bt2 && this.baseType == returnBaseType && secondType instanceof SQLDerivedType) {\r\n            if (this.baseType.name == \"varchar\" || operator == TokenType.concatenation) {\r\n                return new SQLDerivedType(this.baseType, [this.parameterValues[0] + secondType.parameterValues[0]]);\r\n            }\r\n            if (this.baseType.name == \"decimal\") {\r\n                return new SQLDerivedType(this.baseType, [Math.max(this.parameterValues[0], secondType.parameterValues[0]), Math.max(this.parameterValues[1], secondType.parameterValues[1])]);\r\n            }\r\n        }\r\n\r\n        return map.get(bt2);\r\n\r\n    }\r\n\r\n    getUnaryResultType(operator: TokenType): SQLType {\r\n        return this.baseType.getUnaryResultType(operator);\r\n    }\r\n\r\n    getBinaryResult(operator: TokenType, value1: any, value2: any): any {\r\n        let result = this.baseType.getBinaryResult(operator, value1, value2);\r\n        if (this.name = \"varchar\") return result == null ? null : (\"\" + result).substr(0, this.parameterValues[0]);\r\n        if (this.name == \"decimal\") {\r\n            if (result == null) return null;\r\n            return Math.round(result * tens[this.parameterValues[1]]) / tens[this.parameterValues[1]];\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nlet textTypes = [\"varchar\", \"char\", \"text\" ,\"tinytext\", \"mediumtext\", \"longtext\"];\r\n\r\nvar varcharType = new SQLBaseType(\"varchar\", [\"Maximale Länge\"], (ci, pv) => `check(length(${ci}) <= ${pv[0]})`,\r\n    (v: string, pv) => v.substring(0, pv[0]), textTypes);\r\n    \r\nvar charType = new SQLBaseType(\"char\", [\"Maximale Länge\"], (ci, pv) => `check(length(${ci}) <= ${pv[0]})`,\r\n    (v: string, pv) => v.substring(0, pv[0]), textTypes);\r\n\r\nvar textType = new SQLBaseType(\"text\", [\"Maximale Länge\"], (ci, pv) => \"\", (v: string, pv) => v, textTypes.concat([\"date\", \"datetime\", \"timestamp\"]));\r\nvar tinyTextType = new SQLBaseType(\"tinyText\", [], (ci, pv) => \"\", (v: string, pv) => v, textTypes);\r\nvar mediumTextType = new SQLBaseType(\"mediumText\", [], (ci, pv) => \"\", (v: string, pv) => v, textTypes);\r\nvar longTextType = new SQLBaseType(\"longText\", [], (ci, pv) => \"\", (v: string, pv) => v, textTypes);\r\n\r\nlet floatTypes = [\"decimal\", \"numeric\", \"double\", \"real\", \"float\"];\r\n\r\nvar decimalType = new SQLBaseType(\"decimal\", [\"Gesamtzahl der Stellen\", \"Nachkommastellen\"], (ci, pv) => \"\",\r\n    (v: number, pv) => { let vk = Math.trunc(v); let nk = v - vk; return \"\" + vk + (pv[1] > 0 ? \".\" + Math.round(nk * tens[pv[1]]) : \"\") },\r\n    floatTypes);\r\nvar numericType = new SQLBaseType(\"numeric\", [\"Gesamtzahl der Stellen\", \"Nachkommastellen\"], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\nvar doubleType = new SQLBaseType(\"double\", [\"Gesamtzahl der Stellen\", \"Nachkommastellen\"], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\nvar realType = new SQLBaseType(\"real\", [], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\nvar floatType = new SQLBaseType(\"float\", [], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\n\r\nlet inttypes = [\"int\", \"integer\", \"tinyint\", \"smallint\", \"mediumint\", \"bigint\"];\r\nlet numberTypes = inttypes.concat(floatTypes);\r\n\r\nvar intType = new SQLBaseType(\"int\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar integerType = new SQLBaseType(\"integer\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar tinyIntType = new SQLBaseType(\"tinyint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar smallIntType = new SQLBaseType(\"smallint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar mediumIntType = new SQLBaseType(\"mediumint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar bigIntType = new SQLBaseType(\"bigint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\n\r\nvar dateType = new SQLBaseType(\"date\", [], (ci, pv) => `check(isDate(${ci}))`, (v: string, pv) => v, []);\r\nvar dateTimeType = new SQLBaseType(\"datetime\", [], (ci, pv) => `check(isDateTime(${ci}))`, (v: string, pv) => v, [\"timestamp\"]);\r\nvar timestampType = new SQLBaseType(\"timestamp\", [], (ci, pv) => `check(isDateTime(${ci}))`, (v: string, pv) => v, [\"datetime\"]);\r\n\r\nvar booleanType = new SQLBaseType(\"boolean\", [], (ci, pv) => `check(${ci} == 0 or ${ci} == 1)`, (v, pv) => v == 1 ? \"true\" : \"false\",\r\n    [\"varchar\", \"text\", \"decimal\", \"numeric\"]);\r\n\r\nvar nullType = new SQLBaseType(\"null\", [], (ci, pv) => \"\", (v, pv) => v,\r\n    []);\r\n\r\nlet numericTypes = [decimalType, numericType, doubleType, realType, floatType, intType, integerType, tinyIntType, smallIntType, mediumIntType, bigIntType];\r\n\r\nlet baseTypes = [varcharType, charType, textType, tinyTextType, mediumTextType, longTextType,\r\n    dateType, dateTimeType, timestampType, booleanType, nullType].concat(numericTypes);\r\n\r\nSQLBaseType.addBaseTypes(baseTypes);\r\n\r\nvarcharType.addBinaryOperation(TokenType.concatenation, varcharType, varcharType);\r\nvarcharType.addBinaryOperation(TokenType.concatenation, charType, varcharType);\r\nvarcharType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\ntextType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\nvarcharType.addBinaryOperation(TokenType.keywordLike, varcharType, booleanType);\r\nvarcharType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\ntextType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\n\r\ncharType.addBinaryOperation(TokenType.concatenation, charType, charType);\r\ncharType.addBinaryOperation(TokenType.concatenation, varcharType, charType);\r\ncharType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\ntextType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\ncharType.addBinaryOperation(TokenType.keywordLike, charType, booleanType);\r\ncharType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\ntextType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\n\r\nlet numericBinaryOperators: TokenType[] = [TokenType.plus, TokenType.minus, TokenType.multiplication, TokenType.division, TokenType.modulo];\r\nlet comparisonOperators: TokenType[] = [TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual];\r\n\r\nfor (let i = 0; i < numericTypes.length; i++) {\r\n    for (let j = i; j < numericTypes.length; j++) {\r\n        numericTypes[i].addBinaryOperation(numericBinaryOperators, numericTypes[j], numericTypes[j]);\r\n        numericTypes[i].addBinaryOperation(comparisonOperators, numericTypes[j], booleanType);\r\n    }\r\n    numericTypes[i].unaryOperators = [TokenType.minus];\r\n}\r\n\r\ndecimalType.addBinaryOperation(numericBinaryOperators, decimalType, decimalType);\r\n\r\nlet characterTypes = [varcharType, textType];\r\nfor (let i = 0; i < characterTypes.length; i++) {\r\n    for (let j = i; j < characterTypes.length; j++) {\r\n        characterTypes[i].addBinaryOperation(TokenType.concatenation, characterTypes[j], characterTypes[j]);\r\n        characterTypes[i].addBinaryOperation(comparisonOperators, characterTypes[j], booleanType);\r\n    }\r\n}\r\n\r\nlet booleanOperations = [TokenType.keywordAnd, TokenType.keywordOr];\r\nbooleanType.addBinaryOperation(booleanOperations, booleanType, booleanType);\r\n\r\nbooleanType.unaryOperators = [TokenType.keywordNot];\r\n\r\nbaseTypes.forEach(bt => bt.unaryOperators = bt.unaryOperators.concat([TokenType.isNull, TokenType.isNotNull]));","import { param, timers } from \"jquery\";\r\nimport { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenList, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { ASTNode, BracketsNode, SelectNode, TermNode, TableOrSubqueryNode, TableNode, SubqueryNode, GroupByNode, OrderByNode, LimitNode, IdentifierNode, DotNode, ListNode, ColumnNode, InsertNode, ConstantNode, UnaryOpNode, CreateTableNode, CreateTableColumnNode, ForeignKeyInfo, UpdateNode, DeleteNode, DropTableNode, AlterTableNode, AlterTableKind, OmittedStatementNode } from \"./AST.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { Column } from \"./SQLTable.js\";\r\nimport { SQLBaseType } from \"./SQLTypes.js\";\r\n\r\nexport type SQLStatement = {\r\n    ast: ASTNode,\r\n    from: TextPosition,\r\n    to: TextPosition,\r\n    hasErrors: boolean,\r\n    acceptedBySQLite: boolean,\r\n    sql?: string,\r\n    sqlCleaned?: string\r\n}\r\n\r\n\r\nexport class Parser {\r\n\r\n    static operatorPrecedence: TokenType[][] = [\r\n        [TokenType.keywordOr], [TokenType.keywordAnd],\r\n        [TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual, TokenType.keywordLike],\r\n        [TokenType.concatenation, TokenType.plus, TokenType.minus], [TokenType.multiplication, TokenType.division, TokenType.modulo],\r\n        [TokenType.keywordIn, TokenType.keywordNotIn]\r\n    ];\r\n\r\n    module: Module;\r\n\r\n    pos: number;\r\n    tokenList: TokenList;\r\n\r\n    errorList: Error[];\r\n\r\n    lookahead = 4;\r\n    ct: Token[];\r\n    lastToken: Token;\r\n    cct: Token;\r\n    tt: TokenType;\r\n    position: TextPosition;\r\n    lastComment: Token;\r\n\r\n    endToken: Token = {\r\n        position: { line: 0, column: 0, length: 1 },\r\n        tt: TokenType.endofSourcecode,\r\n        value: \"das Ende des Programms\"\r\n    };\r\n\r\n    beginStatementKeywords = [\"select\", \"insert into\", \"update\", \"create table\", \"delete from\", \"alter table\", \"drop table\"];\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    parse(m: Module) {\r\n\r\n        this.module = m;\r\n\r\n        this.tokenList = m.tokenList;\r\n        this.errorList = [];\r\n\r\n        m.completionHints = new Map();\r\n\r\n        if (this.tokenList.length == 0) {\r\n            this.module.sqlStatements = [];\r\n            this.module.errors[1] = this.errorList;\r\n            this.module.addCompletionHint({ line: 0, column: 0, length: 0 }, { line: 20000, column: 100, length: 0 }, false, false,\r\n                this.beginStatementKeywords);\r\n            return;\r\n        }\r\n\r\n        this.pos = 0;\r\n        this.initializeLookahead();\r\n\r\n\r\n        let lastToken = this.tokenList[this.tokenList.length - 1];\r\n        this.endToken.position = { line: lastToken.position.line, column: lastToken.position.column + lastToken.position.length, length: 1 };\r\n\r\n        this.module.sqlStatements = this.parseMain();\r\n\r\n        this.module.errors[1] = this.errorList;\r\n\r\n    }\r\n\r\n    initializeLookahead() {\r\n\r\n        this.ct = [];\r\n\r\n        for (let i = 0; i < this.lookahead; i++) {\r\n\r\n            let token: Token = this.endToken;\r\n\r\n            while (true) {\r\n\r\n                if (this.pos >= this.tokenList.length) break;\r\n\r\n                let token1 = this.tokenList[this.pos]\r\n                if (token1.tt == TokenType.comment) {\r\n                    this.lastComment = token1;\r\n                }\r\n\r\n                if (token1.tt != TokenType.newline && token1.tt != TokenType.space && token1.tt != TokenType.comment) {\r\n                    token = token1;\r\n                    if (this.lastComment != null) {\r\n                        token.commentBefore = this.lastComment;\r\n                        this.lastComment = null;\r\n                    }\r\n                    break;\r\n                }\r\n\r\n                this.pos++;\r\n\r\n            }\r\n\r\n            this.ct.push(token);\r\n\r\n            if (i < this.lookahead - 1) {\r\n                this.pos++;\r\n            }\r\n\r\n        }\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    nextToken() {\r\n\r\n        let token: Token;\r\n        this.lastToken = this.cct;\r\n\r\n        while (true) {\r\n\r\n            this.pos++;\r\n\r\n            if (this.pos >= this.tokenList.length) {\r\n                token = this.endToken;\r\n                break;\r\n            }\r\n\r\n            token = this.tokenList[this.pos]\r\n            if (token.tt == TokenType.comment) {\r\n                this.lastComment = token;\r\n            }\r\n\r\n            if (token.tt != TokenType.newline && token.tt != TokenType.space && token.tt != TokenType.comment) {\r\n                token.commentBefore = this.lastComment;\r\n                this.lastComment = null;\r\n                break;\r\n            }\r\n\r\n        }\r\n\r\n        for (let i = 0; i < this.lookahead - 1; i++) {\r\n            this.ct[i] = this.ct[i + 1];\r\n        }\r\n\r\n        this.ct[this.lookahead - 1] = token;\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position?: TextPosition, quickFix?: QuickFix) {\r\n        if (position == null) position = Object.assign({}, this.position);\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    skip(tt: TokenType | TokenType[]) {\r\n        if (!Array.isArray(tt)) tt = [tt];\r\n        if (tt.indexOf(this.tt) >= 0) this.nextToken();\r\n    }\r\n\r\n    expect(tt: TokenType | TokenType[], skip: boolean = true, invokeSemicolonAngel: boolean = false): boolean {\r\n        if (this.tt != tt && !(Array.isArray(tt) && tt.indexOf(this.tt) >= 0)) {\r\n            if (tt == TokenType.semicolon && this.tt == TokenType.endofSourcecode) {\r\n                return true;\r\n            }\r\n\r\n            let position: TextPosition = this.cct.position;\r\n            if (tt == TokenType.semicolon && this.lastToken != null) {\r\n\r\n                if (this.lastToken.position.line < position.line) {\r\n                    position = {\r\n                        line: this.lastToken.position.line,\r\n                        column: this.lastToken.position.column + this.lastToken.position.length,\r\n                        length: 1\r\n                    }\r\n                }\r\n            }\r\n\r\n            let quickFix: QuickFix = null;\r\n            if (tt == TokenType.semicolon && this.lastToken.position.line < this.cct.position.line &&\r\n                !this.isOperatorOrDot(this.lastToken.tt)\r\n            ) {\r\n                quickFix = {\r\n                    title: 'Strichpunkt hier einfügen',\r\n                    editsProvider: (uri) => {\r\n                        return [{\r\n                            resource: uri,\r\n                            edit: {\r\n                                range: {\r\n                                    startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position.column,\r\n                                    message: \"\",\r\n                                    severity: monaco.MarkerSeverity.Error\r\n                                },\r\n                                text: \";\"\r\n                            }\r\n                        }\r\n                        ];\r\n                    }\r\n                }\r\n\r\n                if (invokeSemicolonAngel) {\r\n                    this.module.main.getSemicolonAngel().register(position, this.module);\r\n                }\r\n            }\r\n\r\n            let expectedValuesArray: string[];\r\n\r\n            if (Array.isArray(tt)) {\r\n                expectedValuesArray = tt.map(token => TokenTypeReadable[token]);\r\n                let expectedTokens = expectedValuesArray.join(\", \");\r\n                this.pushError(\"Erwartet wird eines der folgenden: \" + expectedTokens + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            } else {\r\n                expectedValuesArray = [TokenTypeReadable[tt]];\r\n                this.pushError(\"Erwartet wird: \" + TokenTypeReadable[tt] + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            }\r\n\r\n            // if (!Array.isArray(tt) && tt != TokenType.identifier) {\r\n            //     this.module.addCompletionHint(this.getEndOfPosition(this.lastToken.position), this.getCurrentPositionPlus(1), false, false, expectedValuesArray);\r\n            // }\r\n\r\n            return false;\r\n        }\r\n\r\n        if (skip) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    getEndOfPosition(p: TextPosition): TextPosition {\r\n        return {\r\n            line: p.line,\r\n            column: p.column + p.length,\r\n            length: 0\r\n        }\r\n    }\r\n\r\n    isOperatorOrDot(tt: TokenType): boolean {\r\n        if (tt == TokenType.dot) return true;\r\n        for (let op of Parser.operatorPrecedence) {\r\n            for (let operator of op) {\r\n                if (tt == operator) return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    isEnd(): boolean {\r\n        return this.cct == this.endToken;\r\n    }\r\n\r\n    comesToken(token: TokenType | TokenType[], skip: boolean = false): boolean {\r\n\r\n        if (!Array.isArray(token)) {\r\n            let ret: boolean = this.tt == token;\r\n            if (ret && skip) this.nextToken();\r\n            return ret;\r\n        }\r\n\r\n        return token.indexOf(this.tt) >= 0;\r\n\r\n    }\r\n\r\n    getCurrentPosition(): TextPosition {\r\n        return Object.assign({}, this.position);\r\n    }\r\n\r\n    getCurrentPositionPlus(deltaColumns: number): TextPosition {\r\n\r\n        if (this.tt == TokenType.endofSourcecode) {\r\n            return {\r\n                line: this.endToken.position.line,\r\n                column: 100,\r\n                length: 1\r\n            }\r\n        }\r\n\r\n        // get Token in which new position falls:\r\n        let tpos = 0;\r\n        let deltaInsideToken = deltaColumns;\r\n        let length = 0;\r\n        while (tpos < this.lookahead - 1 && (length = this.ct[tpos].position.length) < deltaInsideToken) {\r\n            deltaInsideToken -= length;\r\n            tpos++;\r\n        }\r\n        let tokenPos = this.ct[tpos].position;\r\n        if (tokenPos == null) tokenPos = this.getCurrentPosition();\r\n\r\n        let pos: TextPosition = {\r\n            line: tokenPos.line,\r\n            column: tokenPos.column + deltaInsideToken,\r\n            length: 1\r\n        }\r\n\r\n        return pos;\r\n    }\r\n\r\n    getEndOfCurrentToken(): TextPosition {\r\n\r\n        let position = this.getCurrentPosition();\r\n        position.column = position.column + this.position.length;\r\n        position.length = 0;\r\n\r\n        return position;\r\n    }\r\n\r\n    parseMain(): SQLStatement[] {\r\n\r\n        let mainProgram: SQLStatement[] = [];\r\n\r\n        let mainProgramEnd: TextPosition = {\r\n            column: 0,\r\n            line: 10000,\r\n            length: 1\r\n        }\r\n\r\n        let afterLastStatement: TextPosition = {\r\n            column: 0,\r\n            line: 0,\r\n            length: 0\r\n        }\r\n\r\n        let semicolonAfterLastStatement: boolean = true;\r\n\r\n        this.module.addCompletionHint(afterLastStatement, this.getCurrentPositionPlus(8), false, false,\r\n            this.beginStatementKeywords);\r\n\r\n        while (!this.isEnd()) {\r\n\r\n            let oldPos = this.pos;\r\n\r\n            let errorsBeforeStatement: number = this.errorList.length;\r\n\r\n            while ([TokenType.space, TokenType.newline].indexOf(this.cct.tt) >= 0) {\r\n                this.nextToken();\r\n            }\r\n\r\n            let startPosition = this.getCurrentPosition();\r\n\r\n            let st = this.parseStatement();\r\n\r\n            afterLastStatement = {\r\n                line: this.lastToken.position.line + 1,\r\n                column: 0,\r\n                length: 0\r\n            }\r\n\r\n            semicolonAfterLastStatement = this.tt == TokenType.semicolon;\r\n            while (this.tt == TokenType.semicolon) {\r\n                this.nextToken();\r\n            }\r\n\r\n            let hasErrors: boolean = false;\r\n            for (let i = errorsBeforeStatement; i < this.errorList.length; i++) {\r\n                if (this.errorList[i].level == \"error\") hasErrors = true;\r\n            }\r\n\r\n            if (st != null) {\r\n                mainProgram.push({\r\n                    ast: st,\r\n                    from: startPosition,\r\n                    to: this.getEndOfPosition(this.lastToken.position),\r\n                    hasErrors: hasErrors,\r\n                    acceptedBySQLite: false\r\n                });\r\n            }\r\n            // console.log(mainProgram[mainProgram.length - 1]);\r\n\r\n            mainProgramEnd = this.getCurrentPosition();\r\n\r\n            // emergency-forward:\r\n            if (this.pos == oldPos) {\r\n                let beginStatementTokens: TokenType[] =\r\n                    [TokenType.keywordSelect, TokenType.keywordUpdate, TokenType.keywordCreate, TokenType.keywordInsert,\r\n                    TokenType.keywordDelete, TokenType.keywordDrop, TokenType.keywordAlter];\r\n\r\n                let firstBadToken: boolean = true;\r\n\r\n                while (!this.isEnd() && beginStatementTokens.indexOf(this.tt) < 0) {\r\n                    if ([TokenType.space, TokenType.newline].indexOf(this.tt) < 0 && firstBadToken) {\r\n                        this.pushError(\"Erwartet wird eines dieser Schlüsselwörter: \" + beginStatementTokens.map(t => TokenTypeReadable[t]).join(\", \")\r\n                            + \"; Gefunden wurde: \" + this.cct.value);\r\n                        firstBadToken = true;\r\n                    }\r\n                    this.nextToken();\r\n                }\r\n            }\r\n\r\n            if (semicolonAfterLastStatement || this.cct.position.line - afterLastStatement.line > 0) {\r\n                this.module.addCompletionHint(afterLastStatement, this.getCurrentPositionPlus(8), false, false,\r\n                    this.beginStatementKeywords);\r\n            }\r\n\r\n        }\r\n\r\n        this.module.addCompletionHint(afterLastStatement, { line: this.endToken.position.line + 1, column: 0, length: 0 }, false, false,\r\n            this.beginStatementKeywords);\r\n\r\n        return mainProgram;\r\n\r\n    }\r\n\r\n\r\n\r\n    parseStatement(expectSemicolon: boolean = true): ASTNode {\r\n\r\n        let retStatements: ASTNode = null;\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordSelect:\r\n                return this.parseSelect();\r\n            case TokenType.keywordInsert:\r\n                return this.parseInsert();\r\n            case TokenType.keywordCreate:\r\n                return this.parseCreateTableOrDatabase();\r\n            case TokenType.keywordUpdate:\r\n                return this.parseUpdate();\r\n            case TokenType.keywordDelete:\r\n                return this.parseDelete();\r\n            case TokenType.keywordDrop:\r\n                return this.parseDropTable();\r\n            case TokenType.keywordAlter:\r\n                return this.parseAlterTable();\r\n            case TokenType.keywordCommit:\r\n                this.pushError(\"Die Aweisung commit ist unnötig, da jede Anweisung automatisch commited wird.\", \"info\");\r\n                this.nextToken();\r\n                return null;\r\n            // Omitted statements:\r\n            case TokenType.keywordSet:\r\n                return this.parseSet();\r\n            case TokenType.keywordUse:\r\n                return this.parseUse();\r\n            case TokenType.keywordStart:\r\n                this.nextToken();\r\n                this.expect(TokenType.keywordTransaction, true);\r\n                return null;\r\n\r\n            default:\r\n                let s = TokenTypeReadable[this.tt];\r\n                if (s == null) s = \"\";\r\n                if (s != this.cct.value) s += \"(\" + this.cct.value + \")\";\r\n                s += \" wird hier nicht erwartet.\";\r\n                this.pushError(s);\r\n                this.nextToken();\r\n                break;\r\n        }\r\n\r\n\r\n        return retStatements;\r\n\r\n    }\r\n\r\n    parseSet(): OmittedStatementNode {\r\n\r\n        this.pushError(\"Das SET-Statement wird von SQLite nicht unterstützt. Diese Anweisung wird daher einfach überlesen.\", \"info\");\r\n\r\n        let node: OmittedStatementNode = {\r\n            type: TokenType.omittedeStatement,\r\n            position: this.getCurrentPosition(),\r\n            endPosition: null,\r\n            symbolTable: null\r\n        }\r\n\r\n        this.nextToken(); // skip 'set'\r\n        this.expect(TokenType.identifier, true);\r\n        this.expect(TokenType.equal, true);\r\n        this.expect([TokenType.identifier, TokenType.stringConstant, TokenType.integerConstant, TokenType.charConstant, TokenType.booleanConstant, TokenType.floatingPointConstant], true);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n    parseUse(): OmittedStatementNode {\r\n\r\n        this.pushError(\"Das USE-Statement wird von SQLite nicht unterstützt. Diese Anweisung wird daher einfach überlesen. Sie können eine andere Datenbank auswählen indem Sie in der Datenbankliste links darauf klicken.\", \"info\");\r\n\r\n        let node: OmittedStatementNode = {\r\n            type: TokenType.omittedeStatement,\r\n            position: this.getCurrentPosition(),\r\n            endPosition: null,\r\n            symbolTable: null\r\n        }\r\n\r\n        this.nextToken(); // skip 'use'\r\n        this.expect(TokenType.identifier, true);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n    parseAlterTable(): AlterTableNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"alter\"\r\n\r\n        let node: AlterTableNode = {\r\n            type: TokenType.keywordAlter,\r\n            kind: null,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n        }\r\n\r\n        if (!this.expect(TokenType.keywordTable, true)) {\r\n            this.addCompletionHintHere(false, false, [\"table\"], 1);\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1);\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        this.addCompletionHintHere(false, false, [\"rename to\", \"rename column\", \"add column\", \"drop column\"], 1);\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordRename: this.parseRenameTableOrColumn(node); break;\r\n            case TokenType.keywordAdd: this.parseAlterTableAdd(node); break;\r\n            case TokenType.keywordDrop: this.parseDropColumn(node); break;\r\n            default:\r\n                this.pushError(\"Erwartet wird rename to, rename column, add column oder drop column\");\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    parseRenameTableOrColumn(node: AlterTableNode) {\r\n\r\n        this.nextToken();\r\n        if (!this.comesToken(TokenType.keywordTo)) {\r\n            this.addCompletionHintHere(node.tableIdentifier, false, [\"column\", \"to\"], 3);\r\n        }\r\n        node.endPosition = this.getEndOfCurrentToken();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordTo:\r\n                this.nextToken();\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                node.kind = \"renameTable\";\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    node.newTableName = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    node.endPosition = this.getEndOfCurrentToken();\r\n                } else {\r\n                    this.pushError(\"Erwartet wird der neue Tabellenname.\");\r\n                }\r\n                return;\r\n            case TokenType.keywordColumn:\r\n                this.nextToken();\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                this.addCompletionHintHere(node.tableIdentifier, false, [], 3);\r\n                if (!this.comesToken(TokenType.identifier)) {\r\n                    this.pushError(\"Erwartet wird der Name einer Spalte der Tabelle \" + node.tableIdentifier + \".\");\r\n                    return;\r\n                }\r\n                node.kind = \"renameColumn\";\r\n                node.oldColumnName = <string>this.cct.value;\r\n                node.oldColumnPosition = this.getCurrentPosition();\r\n                this.nextToken();\r\n                this.addCompletionHintHere(false, false, [\"to\"], 3);\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                if (!this.expect(TokenType.keywordTo, true)) return;\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    node.newColumnName = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    node.endPosition = this.getEndOfCurrentToken();\r\n                } else {\r\n                    this.pushError(\"Erwartet wird der neue Spaltenname.\");\r\n                }\r\n                return;\r\n            default:\r\n                this.pushError(\"Erwartet wird das Schlüsselwort 'to' (zum Umbenennen der Tabelle) oder das Schlüsselwor 'column' (zum Umbenennen einer Spalte).\")\r\n                return;\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    parseDropColumn(node: AlterTableNode) {\r\n        this.nextToken(); // skip 'drop'\r\n        this.comesToken(TokenType.keywordColumn, true);\r\n        node.oldColumnPosition = this.getCurrentPosition();\r\n        this.addCompletionHintHere(node.tableIdentifier, false, [], 3);\r\n\r\n        node.kind = \"dropColumn\";\r\n        node.endPosition = this.getEndOfCurrentToken();\r\n\r\n        if (this.comesToken(TokenType.identifier)) {\r\n            node.oldColumnName = <string>this.cct.value;\r\n            this.nextToken();\r\n        } else {\r\n            this.pushError(\"Erwartet wird der Bezeichner der Spalte, die gelöscht werden soll.\");\r\n        }\r\n\r\n    }\r\n\r\n    parseAlterTableAdd(node: AlterTableNode) {\r\n        do {\r\n            this.nextToken(); // skip \"add\" or \",\"\r\n            let unique: boolean = false;\r\n            switch (this.tt) {\r\n                case TokenType.keywordColumn:\r\n                    this.parseAddColumn(node);\r\n                    break;\r\n                case TokenType.keywordPrimary:\r\n                    this.parseAddPrimaryKey(node);\r\n                    break;\r\n                case TokenType.keywordUnique:\r\n                    this.nextToken();\r\n                    unique = true;\r\n                    this.expect([TokenType.keywordIndex, TokenType.keywordKey], false);\r\n                case TokenType.keywordKey:\r\n                case TokenType.keywordIndex:\r\n                    this.parseAddIndex(node, unique);\r\n                    break;\r\n                case TokenType.keywordModify:\r\n                    this.parseModifyColumn(node);\r\n                    break;\r\n                case TokenType.keywordConstraint:\r\n                    this.parseAddConstraint(node);\r\n                    break;\r\n            }\r\n        } while (this.tt == TokenType.comma);\r\n    }\r\n\r\n    parseAddConstraint(node: AlterTableNode) {\r\n        this.nextToken(); // skip \"constraint\"\r\n        if (!this.expect(TokenType.identifier)) return;\r\n\r\n        if (this.comesToken(TokenType.keywordForeign)) {\r\n            let fki = this.parseForeignKeyDefinition();\r\n            if (fki != null) {\r\n                if (node.foreignKeys == null) node.foreignKeys = [];\r\n                node.foreignKeys.push(fki);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    parseForeignKeyDefinition(): ForeignKeyInfo {\r\n        let fki: ForeignKeyInfo = { column: \"\", referencesTable: \"\", referencesColumn: \"\", referencesPosition: this.getCurrentPosition() };\r\n        if (!this.expect(TokenType.keywordForeign)) return;\r\n        if (!this.expect(TokenType.keywordKey)) return;\r\n        if (!this.expect(TokenType.leftBracket)) return;\r\n\r\n        if (!this.comesToken(TokenType.identifier)) {\r\n            this.pushError(\"Der Bezeichner der Fremdschlüsselspalte wird erwartet.\");\r\n            return;\r\n        }\r\n\r\n        fki.column = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        if (!this.expect(TokenType.rightBracket)) return;\r\n        this.parseReferences(fki);\r\n    }\r\n\r\n    parseReferences(fki: ForeignKeyInfo) {\r\n\r\n        if (!this.expect(TokenType.keywordReferences)) return;\r\n\r\n        this.addCompletionHintHere(false, true, []);\r\n\r\n        if (!this.comesToken(TokenType.identifier)) {\r\n            this.pushError(\"Der Bezeichner der referenzierten Tabelle wird erwartet.\");\r\n            return;\r\n        }\r\n\r\n        fki.referencesTable = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        let pos0 = this.lastToken.position;\r\n        let pos1 = this.getCurrentPosition();\r\n        this.module.addCompletionHint(this.getEndOfPosition(pos0), pos1, fki.referencesTable, false, []);\r\n\r\n\r\n        if (!this.expect(TokenType.leftBracket)) return;\r\n        if (!this.comesToken(TokenType.identifier)) {\r\n            this.pushError(\"Der Bezeichner der referenzierten Spalte wird erwartet.\");\r\n            return;\r\n        }\r\n\r\n        fki.referencesColumn = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        if (!this.expect(TokenType.rightBracket)) return;\r\n\r\n        while (this.tt == TokenType.keywordOn) {\r\n            this.nextToken();\r\n            let kind: \"onDelete\" | \"onUpdate\" | \"\" = \"\";\r\n\r\n            switch (this.tt) {\r\n                //@ts-ignore\r\n                case TokenType.keywordDelete:\r\n                    kind = \"onDelete\";\r\n                    break;\r\n                //@ts-ignore\r\n                case TokenType.keywordUpdate:\r\n                    kind = \"onUpdate\";\r\n                    break;\r\n            }\r\n\r\n            if (kind == \"\") {\r\n                this.pushError(\"Nach 'on' wird 'delete' oder 'update' erwartet.\");\r\n                if (!this.comesToken([TokenType.keywordCascade, TokenType.keywordRestrict, TokenType.keywordSet, TokenType.keywordNo])) {\r\n                    this.nextToken();\r\n                    kind = \"onDelete\";\r\n                }\r\n            } else {\r\n                this.nextToken();\r\n            }\r\n\r\n            switch (this.tt) {\r\n                //@ts-ignore\r\n                case TokenType.keywordCascade:\r\n                //@ts-ignore\r\n                case TokenType.keywordRestrict:\r\n                    fki[kind] = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    break;\r\n                //@ts-ignore\r\n                case TokenType.keywordSet:\r\n                    fki[kind] = \"set \";\r\n                    this.nextToken();\r\n                    if ([TokenType.keywordNull, TokenType.keywordDefault].indexOf(this.tt) >= 0) {\r\n                        this.nextToken();\r\n                        fki[kind] += this.cct.value;\r\n                    } else {\r\n                        this.pushError(\"Nach 'on delete/update set' wird 'null' oder 'default' erwartet.\");\r\n                    }\r\n                    break;\r\n                //@ts-ignore\r\n                case TokenType.keywordNo:\r\n                    this.nextToken();\r\n                    if (this.expect(TokenType.keywordAction), true) {\r\n                        fki[kind] = \"no action\";\r\n                    }\r\n                    break;\r\n                default:\r\n                    this.pushError(\"Nach 'on delete/update' wird 'cascade', 'set null', 'set default' oder 'no action' erwartet.\");\r\n                    break;\r\n\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    parseModifyColumn(node: AlterTableNode) {\r\n        this.nextToken();\r\n        let modifyColumnInfo = this.parseColumnDefinition(false);\r\n        if (modifyColumnInfo != null) {\r\n            if (node.modifyColumnInfo == null) node.modifyColumnInfo = [];\r\n            node.modifyColumnInfo.push(modifyColumnInfo);\r\n        }\r\n    }\r\n\r\n    parseAddPrimaryKey(node: AlterTableNode) {\r\n        this.nextToken(); // skip \"primary\"\r\n        node.primaryKeys = [];\r\n        if (this.expect(TokenType.keywordKey, true) && this.expect(TokenType.leftBracket, false)) {\r\n            do {\r\n                this.nextToken();\r\n                if (this.tt == TokenType.identifier) {\r\n                    node.primaryKeys.push(<string>this.cct.value);\r\n                    this.nextToken();\r\n                }\r\n            } while (this.tt == TokenType.comma)\r\n        }\r\n        if (this.expect(TokenType.rightBracket, true)) {\r\n            node.kind = \"omittedKind\";\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    parseAddIndex(node: AlterTableNode, unique: boolean) {\r\n        this.nextToken(); // skip \"key\" | \"index\"\r\n\r\n        let index = { index_name: \"\", column: \"\", unique: unique }\r\n        if (this.tt == TokenType.identifier) {\r\n            index.index_name = <string>this.cct.value;\r\n            this.nextToken();\r\n        } else {\r\n            this.pushError(\"Erwartet wird der Bezeichner des Index.\");\r\n            return null;\r\n        }\r\n\r\n        if (!this.expect(TokenType.leftBracket, true)) return null;\r\n        if (this.tt == TokenType.identifier) {\r\n            index.column = <string>this.cct.value;\r\n            this.nextToken();\r\n            if (node.indices == null) node.indices = [];\r\n            node.indices.push(index);\r\n        } else {\r\n            this.pushError(\"Erwartet wird der Bezeichner der Spalte, für die ein Index erstellt werden soll.\");\r\n            return null;\r\n        }\r\n\r\n        node.kind = \"omittedKind\";\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        return null;\r\n    }\r\n\r\n    parseAddColumn(node: AlterTableNode) {\r\n        node.kind = \"addColumn\";\r\n        this.comesToken(TokenType.keywordColumn, true);\r\n        node.columnDefBegin = this.getCurrentPosition();\r\n        node.columnDef = this.parseColumnDefinition(false);\r\n    }\r\n\r\n    parseDropTable(): DropTableNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"Delete\"\r\n\r\n        let node: DropTableNode = {\r\n            type: TokenType.keywordDrop,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n            ifExists: false\r\n        }\r\n\r\n        if (!this.expect(TokenType.keywordTable, true)) {\r\n            this.addCompletionHintHere(false, false, [\"table\"], 1);\r\n        }\r\n\r\n        if (this.comesToken(TokenType.keywordIf, true)) {\r\n            node.ifExists = true;\r\n            this.expect(TokenType.keywordExists, true);\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1, \"\", \";\");\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n\r\n    }\r\n\r\n    parseDelete(): DeleteNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"Delete\"\r\n\r\n        let node: DeleteNode = {\r\n            type: TokenType.keywordDelete,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n            whereNode: null,\r\n            whereNodeBegin: null,\r\n            whereNodeEnd: null\r\n        }\r\n\r\n        if (!this.expect(TokenType.keywordFrom, true)) {\r\n            this.addCompletionHintHere(false, false, [\"from\"], 1);\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1, \"\", \" where\\n\\t\");\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        this.addCompletionHintHere(false, false, [\"where\\n\\t\"], 1);\r\n        if (this.tt != TokenType.keywordWhere) return node;\r\n\r\n        this.nextToken(); // skip \"where\"\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n\r\n        node.whereNodeBegin = this.getEndOfPosition(this.lastToken.position);\r\n        node.whereNode = this.parseTerm();\r\n        node.whereNodeEnd = this.getCurrentPosition();\r\n\r\n        this.module.addCompletionHint(node.whereNodeBegin, this.getCurrentPositionPlus(3), node.tableIdentifier, false, []);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n        return node;\r\n\r\n    }\r\n\r\n    parseUpdate(): UpdateNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"update\"\r\n\r\n        let node: UpdateNode = {\r\n            type: TokenType.keywordUpdate,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n            columnIdentifiers: [],\r\n            columnIdentifierPositions: [],\r\n            values: [],\r\n            valuePosBegin: [],\r\n            valuePosEnd: [],\r\n            whereNode: null,\r\n            whereNodeBegin: null,\r\n            whereNodeEnd: null\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1, \"\", \" set\\n\\t\");\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        this.addCompletionHintHere(false, false, [\"set\\n\\t\"], 1);\r\n        if (!this.expect(TokenType.keywordSet)) return node;\r\n        let first: boolean = true;\r\n        do {\r\n            this.addCompletionHintHere(node.tableIdentifier, false, first ? [] : ['where'], 1, null, \" = \");\r\n            first = false;\r\n            if (this.tt != TokenType.identifier) {\r\n                this.pushError(\"Hier wird der Bezeichner derjenigen Spalte der Tabelle \" + node.tableIdentifier + \" erwaretet, deren Wert verändert werden soll.\", \"error\");\r\n                break;\r\n            }\r\n\r\n            node.columnIdentifiers.push(<string>this.cct.value);\r\n            node.columnIdentifierPositions.push(this.getCurrentPosition());\r\n            this.nextToken();\r\n\r\n            this.expect(TokenType.equal, true);\r\n\r\n            node.valuePosBegin.push(this.getCurrentPosition());\r\n            node.values.push(this.parseTerm());\r\n            node.valuePosEnd.push(this.getCurrentPosition());\r\n\r\n        } while (this.comesToken(TokenType.comma, true));\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        if (this.lastToken.tt != TokenType.comma || this.comesToken(TokenType.keywordWhere)) {\r\n            if (!this.expect(TokenType.keywordWhere, true)) return node;\r\n\r\n            node.whereNodeBegin = this.getEndOfPosition(this.lastToken.position);\r\n            node.whereNode = this.parseTerm();\r\n            node.whereNodeEnd = this.getCurrentPosition();\r\n\r\n            this.module.addCompletionHint(node.whereNodeBegin, node.whereNodeEnd, node.tableIdentifier, false, []);\r\n\r\n            node.endPosition = this.getCurrentPosition();\r\n        } else {\r\n            this.comesToken(TokenType.keywordWhere, true); // skip where, if present\r\n        }\r\n        return node;\r\n\r\n    }\r\n\r\n    parseCreateTableOrDatabase(): CreateTableNode | OmittedStatementNode {\r\n        switch (this.ct[1].tt) {\r\n            case TokenType.keywordDatabase:\r\n                return this.parseCreateDatabase();\r\n            case TokenType.keywordTable:\r\n                return this.parseCreateTable();\r\n            default:\r\n                this.nextToken();\r\n                this.pushError(\"Nach 'create' wird 'table' erwartet.\");\r\n                this.nextToken();\r\n                return null;\r\n        }\r\n    }\r\n\r\n    parseCreateDatabase(): OmittedStatementNode {\r\n        let node: OmittedStatementNode = {\r\n            type: TokenType.omittedeStatement,\r\n            position: this.getCurrentPosition(),\r\n            endPosition: null,\r\n            symbolTable: null\r\n        }\r\n\r\n        this.nextToken();\r\n        this.pushError(\"Die CREATE-DATABASE-Anweisung wird von der SQLite-Engine nicht unterstützt. Sie können eine neue Datenbank anlegen, indem Sie auf den entsprechenden Button oberhalb der Liste der Datenbanken (linke Seite des Fensters) klicken. Diese Anweisung wird überlesen.\", \"info\");\r\n        while (this.tt != TokenType.semicolon && this.tt != TokenType.endofSourcecode) {\r\n            node.endPosition = this.getEndOfCurrentToken();\r\n            this.nextToken();\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    parseCreateTable(): CreateTableNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"create\"\r\n\r\n        if (!this.expect(TokenType.keywordTable, true)) {\r\n            this.module.addCompletionHint(startPosition, this.getCurrentPositionPlus(3), false, false, [\"table\"]);\r\n        }\r\n\r\n        let ifNotExists: boolean = false;\r\n        if (this.comesToken(TokenType.keywordIf)) {\r\n            this.nextToken();\r\n            this.expect(TokenType.keywordNot, true);\r\n            this.expect(TokenType.keywordExists, true);\r\n            ifNotExists = true;\r\n        }\r\n\r\n        let identifier = \"\";\r\n        if (this.expect(TokenType.identifier, false)) {\r\n            identifier = <string>this.cct.value;\r\n            this.module.addCompletionHint(this.getCurrentPosition(), this.getCurrentPositionPlus(identifier.length + 3), false, false, [\"(\"]);\r\n            this.nextToken();\r\n        }\r\n\r\n        let node: CreateTableNode = {\r\n            type: TokenType.keywordCreate,\r\n            identifier: identifier,\r\n            position: startPosition,\r\n            endPosition: null,\r\n            columnList: [],\r\n            symbolTable: null,\r\n            combinedPrimaryKeyColumns: [],\r\n            foreignKeyInfoList: [],\r\n            ifNotExists: ifNotExists,\r\n            uniqueConstraints: []\r\n        }\r\n\r\n        if (!this.expect(TokenType.leftBracket, true)) return node;\r\n\r\n        let primaryKeyAlreadyDefined: boolean = false;\r\n        let first: boolean = true;\r\n\r\n        while (this.tt != TokenType.rightBracket) {\r\n            if (!first) this.expect(TokenType.comma, true);\r\n            first = false;\r\n            if(this.comesToken(TokenType.keywordConstraint, true)){\r\n                this.expect(TokenType.identifier, true);\r\n                this.expect([TokenType.keywordForeign, TokenType.keywordPrimary, TokenType.keywordUnique], false);\r\n            }\r\n\r\n            switch (this.tt) {\r\n                case TokenType.keywordPrimary:\r\n                    if (primaryKeyAlreadyDefined) this.pushError(\"Je Tabelle darf nur ein einziger Primärschlüssel definiert werden.\", \"error\", this.getCurrentPosition());\r\n                    this.parsePrimaryKeyTerm(primaryKeyAlreadyDefined, node);\r\n                    primaryKeyAlreadyDefined = true;\r\n                    break;\r\n                case TokenType.keywordUnique:\r\n                    this.parseUniqueTerm(node);\r\n                    break;\r\n                case TokenType.keywordForeign:\r\n                    let fki = this.parseForeignKeyDefinition();\r\n                    if (fki != null) {\r\n                        node.foreignKeyInfoList.push(fki);\r\n                    }\r\n                    break;\r\n                case TokenType.identifier:\r\n                    let columnNode = this.parseColumnDefinition(primaryKeyAlreadyDefined);\r\n                    node.columnList.push(columnNode);\r\n                    primaryKeyAlreadyDefined = primaryKeyAlreadyDefined || columnNode.isPrimary;\r\n                    break;\r\n                default:\r\n                    this.pushError(TokenTypeReadable[this.tt] + \" wird hier nicht erwartet.\", \"error\");\r\n                    break;\r\n            }\r\n            if (!this.comesToken(TokenType.comma)) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        while ([TokenType.keywordEngine, TokenType.keywordDefault, TokenType.keywordCollate].indexOf(this.tt) >= 0) {\r\n            switch (this.tt) {\r\n                case TokenType.keywordCollate:\r\n                    this.nextToken();\r\n                    this.skip(TokenType.equal);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordEngine:\r\n                    this.nextToken();\r\n                    this.skip(TokenType.equal);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordDefault:\r\n                    this.nextToken();\r\n                    this.expect([TokenType.keywordCharset, TokenType.keywordCharacter], true);\r\n                    this.skip(TokenType.keywordSet);\r\n                    this.skip(TokenType.equal);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        for (let column of node.columnList) {\r\n            if (column.isAutoIncrement && !(column.isPrimary || node.combinedPrimaryKeyColumns.indexOf(column.identifier) >= 0)) {\r\n                this.pushError(\"autoincrement gibt es nur bei Primärschlüsseln, d.h. es fehlt wahrscheinlich 'primary key'.\", \"warning\", node.position);\r\n            }\r\n        }\r\n\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n\r\n    parsePrimaryKeyTerm(primaryKeyAlreadyDefined: boolean, node: CreateTableNode) {\r\n        if (primaryKeyAlreadyDefined) {\r\n            this.pushError(\"Die Tabelle kann nur einen einzigen Primärschlüssel haben.\");\r\n        }\r\n        this.nextToken(); // skip \"primary\"\r\n        this.expect(TokenType.keywordKey, true);\r\n\r\n        let columns: string[] = node.columnList.map(c => c.identifier);\r\n\r\n        this.addCompletionHintHere(false, false, columns);\r\n        if (this.comesToken(TokenType.leftBracket)) {\r\n            this.addCompletionHintHere(false, false, columns);\r\n            this.nextToken();\r\n\r\n            while (true) {\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    node.combinedPrimaryKeyColumns.push(<string>this.cct.value);\r\n                    this.nextToken();\r\n                    this.addCompletionHintHere(false, false, columns, 1);\r\n                    if (!this.comesToken(TokenType.comma)) {\r\n                        break;\r\n                    } else {\r\n                        this.nextToken();\r\n                        this.addCompletionHintHere(false, false, columns);\r\n                    }\r\n                } else {\r\n                    this.pushError(\"Der Bezeichner einer Spalte wird erwartet. Gefunden wurde: \" + this.cct.value);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        } else {\r\n            this.pushError(\"( erwartet.\");\r\n        }\r\n    }\r\n\r\n    parseUniqueTerm(node: CreateTableNode) {\r\n        this.nextToken(); // skip \"unique\"\r\n\r\n        let columns: string[] = node.columnList.map(c => c.identifier);\r\n        let uniqueConstraint: string[] = [];\r\n        node.uniqueConstraints.push(uniqueConstraint);\r\n\r\n        this.addCompletionHintHere(false, false, columns);\r\n        if (this.comesToken(TokenType.leftBracket)) {\r\n            this.addCompletionHintHere(false, false, columns);\r\n            this.nextToken();\r\n\r\n            while (true) {\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    uniqueConstraint.push(<string>this.cct.value);\r\n                    this.nextToken();\r\n                    this.addCompletionHintHere(false, false, columns, 1);\r\n                    if (!this.comesToken(TokenType.comma)) {\r\n                        break;\r\n                    } else {\r\n                        this.nextToken();\r\n                        this.addCompletionHintHere(false, false, columns);\r\n                    }\r\n                } else {\r\n                    this.pushError(\"Der Bezeichner einer Spalte wird erwartet. Gefunden wurde: \" + this.cct.value);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        } else {\r\n            this.pushError(\"( erwartet.\");\r\n        }\r\n    }\r\n\r\n    parseColumnDefinition(primaryKeyAlreadyDefined: boolean): CreateTableColumnNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n        let identifier = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        let node: CreateTableColumnNode = {\r\n            type: TokenType.columnDef,\r\n            identifier: identifier,\r\n            isPrimary: false,\r\n            isAutoIncrement: false,\r\n            position: position,\r\n            baseType: null,\r\n            notNull: false\r\n        }\r\n\r\n        this.parseType(node, primaryKeyAlreadyDefined);\r\n\r\n        return node;\r\n\r\n    }\r\n\r\n    addCompletionHintHere(hintColumns: boolean | string, hintTables: boolean, hints: string[], additionalColumns: number = 0, praefix: string = \"\", suffix: string = \"\") {\r\n        let pos0 = this.lastToken.position;\r\n        let pos1 = this.getCurrentPosition();\r\n        pos1.column += 1 + additionalColumns\r\n        this.module.addCompletionHint(this.getEndOfPosition(pos0), pos1, hintColumns, hintTables, hints, null, praefix, suffix);\r\n    }\r\n\r\n    parseType(node: CreateTableColumnNode, primaryKeyAlreadyDefined: boolean) {\r\n\r\n        let datatypes = SQLBaseType.baseTypes.map(type => type.toString());\r\n        this.addCompletionHintHere(false, false, datatypes);\r\n\r\n        if (!this.expect(TokenType.identifier, false)) {\r\n            this.pushError(\"Erwartet wird ein Datentyp. Gefunden wurde: \" + this.cct.value);\r\n            return;\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n\r\n        let type = SQLBaseType.getBaseType(identifier);\r\n        if (type == null) {\r\n            this.pushError(\"Erwartet wird ein Datentyp. Gefunden wurde: \" + identifier);\r\n        }\r\n        node.baseType = type;\r\n        this.nextToken();\r\n\r\n        if (this.tt == TokenType.leftBracket) {\r\n            this.nextToken();\r\n            node.parameters = [];\r\n            //@ts-ignore\r\n            while (this.tt == TokenType.integerConstant) {\r\n                node.parameters.push(<number>this.cct.value);\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.comma) break;\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.integerConstant) {\r\n                    this.pushError(\"Erwartet wird eine ganze Zahl, gefunden wurde: \" + this.cct.value);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (type != null && node.parameters.length > type.parameterDescriptions.length) {\r\n                this.pushError(\"Der Datentyp \" + type.toString() + \" hat höchstens \" + type.parameterDescriptions.length + \" Parameter.\");\r\n            }\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        }\r\n\r\n        // primary key autoincrement\r\n        // references table(column)\r\n        // not null\r\n\r\n        this.addCompletionHintHere(false, false, [\"primary key\", \"references\", \"not null\"]);\r\n\r\n        let alreadySeenKeywords: TokenType[] = [];\r\n\r\n        while ([TokenType.keywordOn, TokenType.keywordCharacter, TokenType.keywordComment, TokenType.keywordAutoincrement, TokenType.keywordKey, TokenType.keywordPrimary, TokenType.keywordNot, TokenType.keywordReferences, TokenType.keywordCollate, TokenType.keywordDefault].indexOf(this.tt) >= 0) {\r\n            if (alreadySeenKeywords.indexOf(this.tt) >= 0) {\r\n                this.pushError('Das Schlüsselwort ' + TokenTypeReadable[this.tt] + \" darf bei der Definition einer Spalte nicht öfters als ein Mal vorkommen.\");\r\n            }\r\n\r\n            alreadySeenKeywords.push(this.tt);\r\n\r\n            switch (this.tt) {\r\n                case TokenType.keywordAutoincrement:\r\n                    this.nextToken();\r\n                    node.isAutoIncrement = true;\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.equal) {\r\n                        this.nextToken();\r\n                        this.expect(TokenType.integerConstant);\r\n                    } else {\r\n                        //@ts-ignore\r\n                        if (this.tt == TokenType.comma && this.ct[1].tt == TokenType.keywordAutoincrement) {\r\n                            this.nextToken();\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.keywordPrimary:\r\n                    if (primaryKeyAlreadyDefined) this.pushError(\"In einer Tabelle darf es nur einen einzigen primary key geben.\");\r\n                    this.nextToken(); // skip \"primary\"\r\n                    if (!this.expect(TokenType.keywordKey, true)) {\r\n                        this.addCompletionHintHere(false, false, [\"key\"]);\r\n                    } else {\r\n                        this.addCompletionHintHere(false, false, [\"autoincrement, \\n\"])\r\n                    }\r\n                    node.isPrimary = true;\r\n                    break;\r\n                case TokenType.keywordReferences:\r\n                    let fki: ForeignKeyInfo = { column: node.identifier, referencesColumn: \"\", referencesTable: \"\", referencesPosition: this.getCurrentPosition() };\r\n                    node.foreignKeyInfo = fki;\r\n                    this.parseReferences(fki);\r\n                    break;\r\n                case TokenType.keywordNot:\r\n                    this.nextToken();\r\n                    if (!this.expect(TokenType.keywordNull, true)) {\r\n                        this.addCompletionHintHere(false, false, [\"null\"]);\r\n                    } else {\r\n                        this.addCompletionHintHere(false, false, [\"references\"]);\r\n                    }\r\n                    node.notNull = true;\r\n                    break;\r\n                case TokenType.keywordCollate:\r\n                    this.nextToken();\r\n                    node.collate = <string>this.cct.value;\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordCharacter:\r\n                    this.nextToken();\r\n                    this.expect(TokenType.keywordSet, true);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordDefault:\r\n                    this.nextToken();\r\n\r\n                    if (this.ct[1].tt == TokenType.leftBracket && this.ct[2].tt == TokenType.rightBracket) {\r\n                        this.nextToken();\r\n                        this.nextToken();\r\n                        this.nextToken();\r\n                        break;\r\n                    }\r\n\r\n                    node.defaultValue = <string>this.cct.value;\r\n                    if (typeof this.cct.value == \"string\") {\r\n                        node.defaultValue = \"'\" + node.defaultValue + \"'\";\r\n                    }\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.keywordNull) {\r\n                        this.nextToken();\r\n                        break;\r\n                    } else if ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.stringConstant].indexOf(this.tt) >= 0) {\r\n                        let constantType = SQLBaseType.fromConstantType(this.tt);\r\n                        if (!constantType.canCastTo(type)) {\r\n                            this.pushError(\"Die Konstante hinter 'default' passt nicht zum Datentyp der Spalte.\");\r\n                        }\r\n                        this.nextToken();\r\n                    }\r\n                    break;\r\n                case TokenType.keywordComment:\r\n                    this.nextToken(); // Skip \"comment\"\r\n                    this.expect(TokenType.stringConstant, true);\r\n                    break;\r\n                case TokenType.keywordOn:\r\n                    this.nextToken();\r\n                    this.expect([TokenType.keywordUpdate], true);\r\n                    while (!this.comesToken([TokenType.comma, TokenType.endofSourcecode, TokenType.rightBracket])) this.nextToken();\r\n                    //@ts-ignore\r\n                    if (this.lastToken.tt == TokenType.leftBracket && this.tt == TokenType.rightBracket) this.nextToken();\r\n                    break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    parseInsert(): InsertNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"insert\"\r\n\r\n        this.expect(TokenType.keywordInto, true);\r\n\r\n        let node: InsertNode = {\r\n            type: TokenType.keywordInsert,\r\n            position: startPosition,\r\n            endPosition: this.getCurrentPosition(),\r\n            valuesPosition: null,\r\n            columnsPosition: null,\r\n            symbolTable: null,\r\n            columnList: [],\r\n            values: [],\r\n            table: null\r\n        }\r\n\r\n        if (this.tt == TokenType.identifier) {\r\n            node.table = {\r\n                type: TokenType.table,\r\n                identifier: <string>this.cct.value,\r\n                alias: null,\r\n                position: this.getCurrentPosition()\r\n            }\r\n            node.columnsPosition = { line: node.table.position.line, column: node.table.position.column + node.table.position.length, length: 0 };\r\n            this.nextToken();\r\n        } else {\r\n            this.pushError(\"Hier wird der Bezeichner einer Tabelle erwartet. Gefunden wurde: \" + this.cct.value, \"error\");\r\n        }\r\n\r\n        if (this.tt == TokenType.leftBracket) {\r\n\r\n            this.nextToken();\r\n            let first: boolean = true;\r\n            //@ts-ignore\r\n            while (first || this.tt == TokenType.comma) {\r\n\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.identifier) {\r\n                    node.columnList.push({\r\n                        type: TokenType.identifier,\r\n                        identifier: this.cct.value + \"\",\r\n                        position: this.getCurrentPosition()\r\n                    })\r\n\r\n                } else {\r\n                    this.pushError(\"Erwartet wird der Bezeichner einer Spalte. Gefunden wurde: \" + this.cct.value, \"error\");\r\n                }\r\n                this.nextToken();\r\n            }\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        }\r\n\r\n        node.valuesPosition = this.getCurrentPosition();\r\n        this.expect(TokenType.keywordValues, true);\r\n\r\n        this.parseValueLists(node.values);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n    parseValueLists(values: ConstantNode[][]) {\r\n        let insideListTokens = [TokenType.keywordNull, TokenType.charConstant, TokenType.stringConstant, TokenType.booleanConstant, TokenType.floatingPointConstant, TokenType.integerConstant];\r\n\r\n        let outerFirst: boolean = true;\r\n\r\n        while (outerFirst || this.tt == TokenType.comma) {\r\n            if (!outerFirst) {\r\n                this.nextToken(); // consume comma\r\n            }\r\n            outerFirst = false;\r\n            let leftBracketPosition = this.getCurrentPosition();\r\n            if (!this.expect(TokenType.leftBracket, true)) {\r\n                break;\r\n            }\r\n            let line: ConstantNode[] = [];\r\n            let first: boolean = true;\r\n            //@ts-ignore\r\n            while (first || this.tt == TokenType.comma) {\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n                if (this.tt == TokenType.identifier){\r\n                    if(this.cct.isDoubleQuotedIdentifier) {\r\n                        this.tt = TokenType.stringConstant\r\n                    } else if((this.cct.value + \"\").toLocaleLowerCase() == \"date\"){\r\n                        this.nextToken();\r\n                    }\r\n                } \r\n\r\n                \r\n\r\n                //@ts-ignore\r\n                if (insideListTokens.indexOf(this.tt) < 0) {\r\n                    this.pushError(\"Erwartet wird eine Konstante oder null. Gefunden wurde: \" + this.cct.value, \"error\");\r\n                    this.nextToken();\r\n                } else {\r\n                    line.push({\r\n                        constantType: this.tt,\r\n                        position: this.getCurrentPosition(),\r\n                        constant: this.cct.value,\r\n                        type: TokenType.constantNode\r\n                    });\r\n                    this.nextToken();\r\n                }\r\n            }\r\n            this.expect(TokenType.rightBracket, true);\r\n            if (line.length == 0) {\r\n                this.pushError(\"Eine Zeile kann nur dann in die Tabelle eingefügt werden, wenn sie mindestens einen Spaltenwert besitzt.\", \"error\", leftBracketPosition);\r\n            } else {\r\n                values.push(line);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    parseConstant(): ConstantNode {\r\n        let constantNode: ConstantNode = {\r\n            constantType: this.tt,\r\n            position: this.getCurrentPosition(),\r\n            constant: this.cct.value,\r\n            type: TokenType.constantNode\r\n        }\r\n        this.nextToken();\r\n\r\n        return constantNode;\r\n    }\r\n\r\n    parseSelect(): SelectNode {\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"select\"\r\n\r\n        let columnListStart: TextPosition = {\r\n            line: startPosition.line,\r\n            column: startPosition.column + 6,\r\n            length: 1\r\n        };\r\n\r\n        let node: SelectNode = {\r\n            type: TokenType.keywordSelect,\r\n            position: startPosition,\r\n            endPosition: this.getCurrentPosition(),\r\n            symbolTable: null,\r\n            columnList: [],\r\n            fromNode: null,\r\n            whereNode: null,\r\n            parentStatement: null\r\n        }\r\n\r\n        node.columnList = this.parseColumnList([TokenType.keywordFrom, TokenType.semicolon, TokenType.endofSourcecode], true);\r\n\r\n        let columnListKeywordArray = [\"distinct\", \"as\", \"*\"];\r\n        if (node.columnList.findIndex(c => c.type == TokenType.allColumns) >= 0) {\r\n            columnListKeywordArray.pop();\r\n        }\r\n\r\n        this.module.addCompletionHint(columnListStart, this.getCurrentPositionPlus(1), true, true, columnListKeywordArray)\r\n\r\n        let hasFrom = this.comesToken(TokenType.keywordFrom, true);\r\n        let fromListKeywordArray = [\"join\", \"left\", \"right\", \"inner\", \"outer\", \"natural\", \"on\", \"as\", \", \"];\r\n        // parse from ...\r\n        if (!hasFrom) {\r\n            columnListKeywordArray.unshift(\"from\");\r\n        } else {\r\n            node.fromStartPosition = { line: this.lastToken.position.line, column: this.lastToken.position.column + this.lastToken.position.length, length: 0 };\r\n\r\n            let dontHint: string[] = [];\r\n            node.fromNode = this.parseTableOrSubQuery(dontHint);\r\n\r\n            fromListKeywordArray.splice(fromListKeywordArray.indexOf(this.lastToken.value + \"\"), 1);\r\n\r\n            let hintEndPosition = this.getCurrentPositionPlus(2);\r\n            if (this.comesToken(TokenType.semicolon)) {\r\n                hintEndPosition = this.getCurrentPosition();\r\n            }\r\n\r\n            this.module.addCompletionHint(node.fromStartPosition, hintEndPosition, false, true, fromListKeywordArray, dontHint)\r\n            node.fromEndPosition = this.getCurrentPosition();\r\n        }\r\n\r\n        // parse where...\r\n\r\n        let whereKeywordArray = [\"like\"];\r\n        if (this.tt == TokenType.keywordWhere) {\r\n            let position = this.getCurrentPosition();\r\n            let whereStart = this.getCurrentPosition();\r\n            this.nextToken();\r\n            node.whereNode = this.parseTerm();\r\n            this.module.addCompletionHint(whereStart, this.getCurrentPositionPlus(4), true, true, whereKeywordArray)\r\n            // if (node.whereNode != null) node.whereNode.position = position;\r\n        } else {\r\n            fromListKeywordArray.push(\"where\");\r\n        }\r\n\r\n        let groupKeywordArray = [];\r\n        if (this.tt == TokenType.keywordGroup) {\r\n            let groupStart = this.getCurrentPosition();\r\n            node.groupByNode = this.parseGroupBy();\r\n            this.module.addCompletionHint(groupStart, this.getCurrentPosition(), true, true, groupKeywordArray);\r\n        } else {\r\n            whereKeywordArray.push(\"group by\");\r\n        }\r\n\r\n        if (this.tt == TokenType.keywordOrder) {\r\n            let orderStart = this.getCurrentPosition();\r\n            node.orderByNode = this.parseOrderBy();\r\n            this.module.addCompletionHint(orderStart, this.getCurrentPosition(), true, true, [\"asc\", \"desc\"]);\r\n        } else {\r\n            whereKeywordArray.push(\"order by\");\r\n            groupKeywordArray.push(\"order by\");\r\n        }\r\n\r\n        if (this.tt == TokenType.keywordLimit) {\r\n            node.limitNode = this.parseLimit();\r\n        }\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n        node.endPosition.column += 3;\r\n\r\n        return node;\r\n    }\r\n\r\n    parseLimit(): LimitNode {\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n        let numberOfRows: TermNode = this.parseTerm();\r\n        let ln: LimitNode = {\r\n            type: TokenType.keywordLimit,\r\n            position: position,\r\n            numberOfRows: numberOfRows\r\n        }\r\n        if (this.tt == TokenType.keywordOffset) {\r\n            this.nextToken();\r\n            ln.offset = this.parseTerm();\r\n        }\r\n        return ln;\r\n    }\r\n\r\n    parseGroupBy(): GroupByNode {\r\n        let position = this.getCurrentPosition();\r\n        this.expect(TokenType.keywordGroup, true);\r\n        this.expect(TokenType.keywordBy, true);\r\n        let gbn: GroupByNode = {\r\n            type: TokenType.keywordGroup,\r\n            columnList: [],\r\n            position: position\r\n        }\r\n        let tokenTypesAfterGroupBy = [TokenType.keywordHaving, TokenType.keywordSelect, TokenType.keywordOrder, TokenType.keywordLimit, TokenType.rightBracket, TokenType.semicolon];\r\n        gbn.columnList = this.parseColumnList(tokenTypesAfterGroupBy, false).map(columnNode => columnNode.term);\r\n        if (this.tt == TokenType.keywordHaving) {\r\n            this.nextToken();\r\n            gbn.having = this.parseTerm();\r\n        }\r\n        return gbn;\r\n    }\r\n\r\n    parseOrderBy(): OrderByNode[] {\r\n        this.expect(TokenType.keywordOrder, true);\r\n        this.expect(TokenType.keywordBy, true);\r\n\r\n        let obnList: OrderByNode[] = [];\r\n        let first: boolean = true;\r\n\r\n        do {\r\n            if (first) {\r\n                first = false;\r\n            } else {\r\n                this.expect(TokenType.comma, true);\r\n            }\r\n            let column: TermNode = this.parseTerm();\r\n            let obn: OrderByNode = {\r\n                type: TokenType.keywordOrder,\r\n                position: this.getCurrentPosition(),\r\n                column: column\r\n            }\r\n            if ([TokenType.keywordAscending, TokenType.keywordDescending].indexOf(this.tt) >= 0) this.nextToken();\r\n            if (this.tt == TokenType.keywordNulls) {\r\n                this.nextToken();\r\n                this.expect([TokenType.keywordFirst, TokenType.keywordLast], true);\r\n            }\r\n            obnList.push(obn);\r\n        } while (this.tt == TokenType.comma);\r\n\r\n        return obnList;\r\n    }\r\n\r\n    parseTableOrSubQuery(dontHint: string[]): TableOrSubqueryNode {\r\n\r\n        let leftSide: TableOrSubqueryNode = this.parseAtomicTableOrSubQuery(dontHint);\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        while (this.parseJoinOperator()) {\r\n\r\n            let rightSide: TableOrSubqueryNode = this.parseAtomicTableOrSubQuery(dontHint);\r\n\r\n            leftSide = {\r\n                type: TokenType.keywordJoin,\r\n                firstOperand: leftSide,\r\n                secondOperand: rightSide,\r\n                position: position,\r\n            }\r\n\r\n            if (this.tt == TokenType.keywordOn) {\r\n                leftSide.on = this.parseTerm();\r\n            }\r\n\r\n        }\r\n\r\n        return leftSide;\r\n\r\n    }\r\n\r\n    parseJoinOperator(): boolean {\r\n        if (this.tt == TokenType.comma) {\r\n            this.nextToken();\r\n            return true;\r\n        }\r\n        if (this.tt == TokenType.keywordNatural) this.nextToken();\r\n        switch (this.tt) {\r\n            case TokenType.keywordLeft:\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.keywordOuter) this.nextToken();\r\n                return this.expect(TokenType.keywordJoin, true);\r\n            case TokenType.keywordInner:\r\n            case TokenType.keywordCross:\r\n                this.nextToken();\r\n                return this.expect(TokenType.keywordJoin, true);\r\n            case TokenType.keywordJoin:\r\n                this.nextToken();\r\n                return true;\r\n            default: return false;\r\n        }\r\n    }\r\n\r\n    parseAtomicTableOrSubQuery(dontHint: string[]): TableOrSubqueryNode {\r\n\r\n        if (!this.expect([TokenType.identifier, TokenType.leftBracket], false)) {\r\n            return null;\r\n        }\r\n\r\n        if (this.tt == TokenType.leftBracket) {\r\n            this.nextToken();\r\n            let ret: TableOrSubqueryNode;\r\n            //@ts-ignore\r\n            if (this.tt == TokenType.keywordSelect) {\r\n                let position = this.getCurrentPosition();\r\n                let selectStatement = this.parseSelect();\r\n                ret = {\r\n                    type: TokenType.subquery,\r\n                    alias: null,\r\n                    position: position,\r\n                    query: selectStatement\r\n                }\r\n            } else {\r\n                ret = this.parseTableOrSubQuery(dontHint);\r\n            }\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n\r\n            //@ts-ignore\r\n            if (this.tt == TokenType.keywordAs && ret.type == TokenType.subquery) {\r\n                this.nextToken();\r\n                if (this.expect(TokenType.identifier, false)) {\r\n                    ret.alias = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    dontHint.push(ret.alias);\r\n                }\r\n            }\r\n\r\n            return ret;\r\n        }\r\n\r\n        if (this.tt == TokenType.identifier) {\r\n            let node: TableNode = {\r\n                type: TokenType.table,\r\n                identifier: <string>this.cct.value,\r\n                alias: null,\r\n                position: this.getCurrentPosition()\r\n            }\r\n            dontHint.push(node.identifier);\r\n            this.nextToken();\r\n\r\n            //@ts-ignore\r\n            if (this.tt == TokenType.keywordAs) {\r\n                this.nextToken();\r\n                if (this.expect(TokenType.identifier, false)) {\r\n                    node.alias = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    dontHint.push(node.alias);\r\n                }\r\n\r\n            }\r\n\r\n            return node;\r\n        }\r\n\r\n    }\r\n\r\n    parseColumnList(tokenTypesAfterListEnd: TokenType[], allowAliases: boolean): ColumnNode[] {\r\n        let columns: ColumnNode[] = [];\r\n\r\n        while ([TokenType.stringConstant, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.booleanConstant,\r\n        TokenType.identifier, TokenType.multiplication, TokenType.leftBracket].indexOf(this.tt) >= 0) {\r\n            if (this.tt == TokenType.multiplication) {\r\n                columns.push({\r\n                    term: null,\r\n                    alias: null,\r\n                    position: this.getCurrentPosition(),\r\n                    type: TokenType.allColumns\r\n                });\r\n                this.nextToken();\r\n            } else {\r\n                let columnTerm = this.parseTerm();\r\n                if (columnTerm != null) {\r\n                    let column: ColumnNode = {\r\n                        type: TokenType.column,\r\n                        term: columnTerm,\r\n                        position: columnTerm.position\r\n                    }\r\n                    columns.push(column);\r\n                    if (this.comesToken(TokenType.keywordAs)) {\r\n                        this.nextToken();\r\n                        if (this.expect(TokenType.identifier, false)) {\r\n                            column.alias = \"\" + this.cct.value;\r\n                        }\r\n                        this.nextToken();\r\n                    }\r\n                }\r\n            }\r\n            if (tokenTypesAfterListEnd.indexOf(this.tt) >= 0) {\r\n                break;\r\n            }\r\n            this.expect(TokenType.comma, true);\r\n        }\r\n\r\n        if (columns.length == 0) {\r\n            this.pushError(\"Es fehlt die kommaseparierte Liste der gewünschten Spalten.\", \"error\");\r\n        }\r\n\r\n        return columns;\r\n    }\r\n\r\n\r\n    parseTerm(): TermNode {\r\n        return this.parseTermBinary(0);\r\n    }\r\n\r\n    parseTermBinary(precedence: number): TermNode {\r\n\r\n        let left: TermNode;\r\n        if (precedence < Parser.operatorPrecedence.length - 1) {\r\n            left = this.parseTermBinary(precedence + 1);\r\n        } else {\r\n            left = this.parseUnary();\r\n        }\r\n\r\n        let operators = Parser.operatorPrecedence[precedence];\r\n\r\n        if (left == null || operators.indexOf(this.tt) < 0) {\r\n            return left;\r\n        }\r\n\r\n        let first = true;\r\n\r\n        while (first || operators.indexOf(this.tt) >= 0) {\r\n\r\n            let operator: TokenType = this.tt;\r\n\r\n            first = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            this.nextToken();\r\n            let right: TermNode;\r\n            if (precedence < Parser.operatorPrecedence.length - 1) {\r\n                right = this.parseTermBinary(precedence + 1);\r\n            } else {\r\n                right = this.parseUnary();\r\n            }\r\n\r\n            left = {\r\n                type: TokenType.binaryOp,\r\n                position: position,\r\n                operator: operator,\r\n                firstOperand: left,\r\n                secondOperand: right\r\n            };\r\n\r\n\r\n        }\r\n\r\n        return left;\r\n\r\n    }\r\n\r\n\r\n    // -, not, this, super, a.b.c[][].d, a.b(), b() (== this.b()), super.b(), super()\r\n    parseUnary(): TermNode {\r\n\r\n        let term: TermNode;\r\n        let position: TextPosition = this.getCurrentPosition();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n                return this.parseBracket();\r\n            case TokenType.minus:\r\n                // case TokenType.not:\r\n                position = position;\r\n                let tt1 = this.tt;\r\n                this.nextToken();\r\n                term = this.parseUnary();\r\n\r\n                return {\r\n                    type: TokenType.unaryOp,\r\n                    position: position,\r\n                    operand: term,\r\n                    operator: tt1\r\n                };\r\n\r\n            case TokenType.integerConstant:\r\n            case TokenType.charConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n                term = {\r\n                    type: TokenType.constantNode,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: this.tt,\r\n                    constant: this.cct.value\r\n                };\r\n                let isStringConstant = this.tt == TokenType.stringConstant;\r\n                this.nextToken();\r\n\r\n                if (isStringConstant) return this.parseDotOrArrayChains(term);\r\n\r\n                return term;\r\n            case TokenType.identifier: // attribute of current class or local variable\r\n\r\n                let identifier1 = <string>this.cct.value;\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    let rightBracketPosition = parameters.rightBracketPosition;\r\n\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position1,\r\n                        rightBracketPosition: rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        identifier: identifier1,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.identifier,\r\n                        identifier: identifier1,\r\n                        position: position\r\n                    }\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.dot) {\r\n                        let position = this.getCurrentPosition();\r\n                        this.nextToken();\r\n                        this.expect(TokenType.identifier, false);\r\n                        let secondIdentifier: IdentifierNode = {\r\n                            type: TokenType.identifier,\r\n                            identifier: <string>this.cct.value,\r\n                            position: this.getCurrentPosition()\r\n                        }\r\n                        this.nextToken();\r\n                        term = {\r\n                            type: TokenType.dot,\r\n                            identifierLeft: <IdentifierNode>term,\r\n                            identifierRight: secondIdentifier,\r\n                            position: position\r\n                        }\r\n\r\n                    } else if ([TokenType.isNull, TokenType.isNotNull].indexOf(this.tt) >= 0) {\r\n                        term = {\r\n                            type: TokenType.unaryOp,\r\n                            operand: term,\r\n                            operator: this.tt,\r\n                            position: position\r\n                        };\r\n                        this.nextToken();\r\n                    }\r\n                }\r\n\r\n                return term;\r\n            default:\r\n                this.pushError(\"Erwartet wird eine Variable, ein Methodenaufruf oder eine Konstante. Gefunden wurde: \" + this.cct.value);\r\n                return null;\r\n        }\r\n\r\n    }\r\n\r\n    parseList(): ListNode {\r\n        let node: ListNode = {\r\n            type: TokenType.list,\r\n            position: this.getCurrentPosition(),\r\n            elements: []\r\n        }\r\n\r\n        let constantTypes = [TokenType.charConstant, TokenType.stringConstant, TokenType.booleanConstant, TokenType.floatingPointConstant, TokenType.integerConstant];\r\n\r\n        while (constantTypes.indexOf(this.tt) >= 0) {\r\n            node.elements.push({\r\n                type: TokenType.constantNode,\r\n                constant: this.cct.value,\r\n                constantType: this.tt,\r\n                position: this.cct.position\r\n            });\r\n            this.nextToken();\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            }\r\n            this.nextToken();\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    parseBracket(): TermNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n        let tokenBeforeBracket = this.lastToken;\r\n        this.nextToken(); // consume (\r\n\r\n        if (this.tt == TokenType.keywordSelect) {\r\n            let selectNode = this.parseSelect();\r\n            this.expect(TokenType.rightBracket, true);\r\n            return selectNode;\r\n        } else if ([TokenType.comma, TokenType.rightBracket].indexOf(this.ct[1].tt) >= 0 &&\r\n            [TokenType.keywordIn, TokenType.keywordNotIn].indexOf(tokenBeforeBracket.tt) >= 0) {\r\n            let listNode = this.parseList();\r\n            this.expect(TokenType.rightBracket, true);\r\n            return listNode;\r\n        } else {\r\n            let term = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            let bracketsNode: BracketsNode = {\r\n                position: rightBracketPosition,\r\n                type: TokenType.rightBracket,\r\n                termInsideBrackets: term\r\n            }\r\n\r\n\r\n            return bracketsNode;\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    parseMethodCallParameters(): { rightBracketPosition: TextPosition, nodes: TermNode[], commaPositions: TextPosition[] } {\r\n        // Assumption: current token is (        \r\n        this.nextToken();\r\n        if (this.tt == TokenType.rightBracket) {\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n            return { rightBracketPosition: rightBracketPosition, nodes: [], commaPositions: [] };\r\n        }\r\n\r\n        let parameters: TermNode[] = [];\r\n        let commaPositions: TextPosition[] = [];\r\n\r\n        while (true) {\r\n            let pos = this.pos;\r\n\r\n            if (this.tt == TokenType.multiplication) {\r\n                this.nextToken();\r\n                parameters.push({\r\n                    type: TokenType.allColumns,\r\n                    position: this.getCurrentPosition(),\r\n                });\r\n            } else {\r\n                let parameter = this.parseTerm();\r\n                if (parameter != null) {\r\n                    parameters.push(parameter);\r\n                }\r\n            }\r\n\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            } else {\r\n                commaPositions.push(this.getCurrentPosition());\r\n                this.nextToken(); // consume comma\r\n            }\r\n\r\n            // emergency-step:\r\n            if (this.pos == pos) {\r\n                this.nextToken();\r\n            }\r\n\r\n        }\r\n\r\n        let position = this.getCurrentPosition();\r\n        let rightBracketFound = this.expect(TokenType.rightBracket, true);\r\n\r\n        return { rightBracketPosition: rightBracketFound ? position : null, nodes: parameters, commaPositions: commaPositions };\r\n\r\n    }\r\n\r\n    parseDotOrArrayChains(term: TermNode): TermNode {\r\n\r\n        if (term == null) return null;\r\n\r\n        while (this.comesToken([TokenType.dot, TokenType.leftSquareBracket])) {\r\n            if (this.tt == TokenType.dot) {\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.identifier) {\r\n                    this.pushError(\"Erwartet wird der Bezeichner eines Attributs oder einer Methode, gefunden wurde: \" + this.cct.value);\r\n                    return term;\r\n                }\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position,\r\n                        rightBracketPosition: parameters.rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        identifier: identifier,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                }\r\n                // else {\r\n                //     term = {\r\n                //         type: TokenType.pushAttribute,\r\n                //         position: position,\r\n                //         identifier: identifier,\r\n                //         object: term\r\n                //     }\r\n                // }\r\n\r\n            }\r\n        }\r\n\r\n        return term;\r\n    }\r\n\r\n\r\n}","import { ColumnStructure, TableStructure } from \"../../tools/DatabaseTools.js\";\r\nimport { SQLType, SQLBaseType, SQLDerivedType } from \"./SQLTypes.js\";\r\n\r\n\r\nexport class Column {\r\n\r\n    references: Column;\r\n    fromColumnStructure?: ColumnStructure;\r\n    notNull: boolean;\r\n\r\n    constructor(public identifier: string, public type: SQLType, public table: Table, public isPrimaryKey: boolean, public isNullable: boolean, public defaultValue: string, public isAutoIncrement){\r\n\r\n    }\r\n\r\n    static fromColumnStructure(cs: ColumnStructure, table: Table): Column {\r\n\r\n        let regex1 = /^(\\w*) *(?:\\((.*)\\))?.*$/;\r\n\r\n        let typeMatch1 = cs.completeTypeSQL.match(regex1);\r\n        let baseTypeIdentifier: string = typeMatch1[1];\r\n        let commaSeparatedParameters: string = typeMatch1[2];\r\n\r\n        let parameterValues: number[] = [];\r\n        if(commaSeparatedParameters != null){\r\n            parameterValues = commaSeparatedParameters.split(',').map(v => parseInt(v.trim()));           \r\n        }\r\n\r\n        let type: SQLType = SQLBaseType.getBaseType(baseTypeIdentifier);\r\n        if(parameterValues.length > 0 && type != null){\r\n            type = new SQLDerivedType(<SQLBaseType>type, parameterValues);\r\n        }\r\n\r\n        let column = new Column(cs.name, type, table, cs.isPrimaryKey, !cs.isPrimaryKey, cs.defaultValue, cs.isAutoIncrement);\r\n        column.notNull = cs.notNull;\r\n        \r\n        column.fromColumnStructure = cs;\r\n\r\n        return column;\r\n    }\r\n\r\n}\r\n\r\nexport class Table {\r\n    \r\n    public columns: Column[] = [];\r\n\r\n    public size: number;\r\n\r\n    constructor(public identifier: string){\r\n\r\n    }\r\n\r\n    private static fromTableStructure(ts: TableStructure): Table {\r\n        let table: Table = new Table(ts.name);\r\n        table.columns = ts.columns.map( column => Column.fromColumnStructure(column, table));\r\n        table.size = ts.size;\r\n        return table;\r\n    }\r\n\r\n    static fromTableStructureList(tsList: TableStructure[]): Table[]{\r\n\r\n        if(tsList == null) tsList = [];\r\n\r\n        let tables: Table[] = tsList.map(ts => Table.fromTableStructure(ts));\r\n\r\n        let columnStructureToColumnMap: Map<ColumnStructure, Column> = new Map();\r\n        for(let table of tables){\r\n            for(let column of table.columns){\r\n                columnStructureToColumnMap.set(column.fromColumnStructure, column);\r\n            }\r\n        }\r\n\r\n        for(let table of tables){\r\n            for(let column of table.columns){\r\n                let referencedCs = column.fromColumnStructure.references;\r\n                if(referencedCs != null){\r\n                    let referencedColumn = columnStructureToColumnMap.get(referencedCs);\r\n                    column.references = referencedColumn;\r\n                }\r\n            }\r\n        }\r\n\r\n        return tables;\r\n    }\r\n\r\n}","import { DatabaseStructure } from \"../../tools/DatabaseTools.js\";\r\nimport { TextPosition } from \"../lexer/Token.js\";\r\nimport { Table, Column } from \"./SQLTable.js\";\r\n\r\nexport type Symbol = {\r\n    identifier: string;\r\n    table?: Table;\r\n    column?: Column;\r\n    tableAlias?: string;\r\n    posOfDefinition: TextPosition;\r\n    referencedOnPositions: TextPosition[];\r\n}\r\n\r\nexport class SymbolTable {\r\n    parent: SymbolTable; // SymbolTable of parent scope\r\n    positionFrom: TextPosition;\r\n    positionTo: TextPosition;\r\n\r\n    childSymbolTables: SymbolTable[] = [];\r\n\r\n    private symbols: Map<string, Symbol[]> = new Map();\r\n    symbolList: Symbol[] = [];\r\n\r\n    constructor(parentSymbolTable: SymbolTable, positionFrom: TextPosition, positionTo: TextPosition) {\r\n\r\n        this.parent = parentSymbolTable;\r\n\r\n        this.positionFrom = positionFrom;\r\n        this.positionTo = positionTo;\r\n\r\n\r\n        if (this.parent != null) {\r\n            this.parent.childSymbolTables.push(this);\r\n        }\r\n    }\r\n\r\n    extractDatabaseStructure(databaseStructure: DatabaseStructure) {\r\n        for (let table of Table.fromTableStructureList(databaseStructure?.tables)) {\r\n\r\n            this.storeTableSymbols(table);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    storeTableSymbols(table: Table){\r\n        this.storeSymbol({\r\n            identifier: table.identifier,\r\n            posOfDefinition: null,\r\n            referencedOnPositions: [],\r\n            table: table\r\n        });\r\n\r\n        for (let column of table.columns) {\r\n            this.storeSymbol({\r\n                identifier: column.identifier,\r\n                posOfDefinition: null,\r\n                referencedOnPositions: [],\r\n                column: column\r\n            });\r\n        }\r\n    }\r\n\r\n    storeSymbol(symbol: Symbol) {\r\n        let list: Symbol[] = this.symbols.get(symbol.identifier);\r\n        if (list == null) {\r\n            list = [symbol];\r\n            this.symbols.set(symbol.identifier.toLowerCase(), list);\r\n        } else {\r\n            list.push(symbol);\r\n        }\r\n        this.symbolList.push(symbol);\r\n    }\r\n\r\n    findTableAtPosition(line: number, column: number): SymbolTable {\r\n\r\n        if (!this.containsPosition(line, column)) {\r\n            return null;\r\n        }\r\n\r\n        let shortestSymbolTableContainingPosition = null;\r\n        let shortestPosition = 10000000;\r\n\r\n        for (let st of this.childSymbolTables) {\r\n            if (st.containsPosition(line, column)) {\r\n                let st1 = st.findTableAtPosition(line, column);\r\n                if (st1.positionTo.line - st1.positionFrom.line < shortestPosition) {\r\n                    shortestSymbolTableContainingPosition = st1;\r\n                    shortestPosition = st1.positionTo.line - st1.positionFrom.line;\r\n                }\r\n            }\r\n            // if(st.containsPosition(line, column) && st.positionTo.line - st.positionFrom.line < shortestPosition){\r\n            //     shortestSymbolTableContainingPosition = st;\r\n            //     shortestPosition = st.positionTo.line - st.positionFrom.line;\r\n            // }\r\n        }\r\n\r\n        if (shortestSymbolTableContainingPosition != null) {\r\n            return shortestSymbolTableContainingPosition;\r\n        } else {\r\n            return this;\r\n        }\r\n\r\n    }\r\n\r\n    containsPosition(line: number, column: number) {\r\n        if (line < this.positionFrom.line || line > this.positionTo.line) {\r\n            return false;\r\n        }\r\n\r\n        if (line == this.positionFrom.line && column < this.positionFrom.column) return false;\r\n        if (line == this.positionTo.line && column > this.positionTo.column + 1) return false;\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    findTable(identifier: string): Table {\r\n        let tables = this.findTables(identifier);\r\n        if(tables.length == 0) return null;\r\n        return tables[0].table;\r\n    }\r\n\r\n    findTables(identifier: string): Symbol[] {\r\n\r\n        let symbolTable: SymbolTable = this;\r\n        while(symbolTable != null){\r\n\r\n            let symbols = symbolTable.symbols.get(identifier.toLowerCase());\r\n            if(symbols != null){\r\n                symbols = symbols.filter(s => s.table != null);\r\n                if(symbols.length > 0){\r\n                    return symbols;\r\n                }\r\n            }\r\n\r\n            symbolTable = symbolTable.parent;\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    findColumn(identifier: string): Symbol[] {\r\n\r\n        let symbolTable: SymbolTable = this;\r\n        while(symbolTable != null){\r\n\r\n            let symbols = symbolTable.symbols.get(identifier.toLowerCase());\r\n            if(symbols != null){\r\n                symbols = symbols.filter(s => s.column != null);\r\n                if(symbols.length > 0){\r\n                    return symbols;\r\n                }\r\n            }\r\n\r\n            symbolTable = symbolTable.parent;\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { SQLBaseType, SQLType } from \"./SQLTypes.js\";\r\n\r\nexport class SQLMethodParameter {\r\n    type: SQLType;\r\n    constructor(public identifier: string, type: string){\r\n        this.type = SQLBaseType.getBaseType(type);\r\n    }\r\n}\r\n\r\nexport class SQLMethod {\r\n    acceptsStarParameter: boolean = false;\r\n    public returnType: SQLType;\r\n    constructor(public identifier: string, public isAggregating: boolean, returnType: string, public parameters: SQLMethodParameter[]){\r\n        this.returnType = SQLBaseType.getBaseType(returnType);\r\n    }\r\n\r\n}\r\n\r\nexport class SQLMethodStore {\r\n\r\n    static instance: SQLMethodStore;\r\n    public methods: SQLMethod[] = [];\r\n\r\n    static getInstance():SQLMethodStore {\r\n        if(this.instance == null){\r\n            this.instance = new SQLMethodStore();\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    constructor(){\r\n        this.pushOneParameterMethod(\"max\" ,\"integer\", \"integer\");\r\n        this.pushOneParameterMethod(\"max\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"min\" ,\"integer\", \"integer\");\r\n        this.pushOneParameterMethod(\"min\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"avg\" ,\"integer\", \"integer\");\r\n        this.pushOneParameterMethod(\"avg\" ,\"float\", \"float\");\r\n\r\n        let countMethod = new SQLMethod(\"count\", true, \"integer\", [new SQLMethodParameter(\"spalte\", \"text\")]);\r\n        countMethod.acceptsStarParameter = true;\r\n        this.methods.push(countMethod);\r\n    }\r\n    \r\n    getMethods(identifier: string){\r\n        return this.methods.filter(m => m.identifier == identifier.toLowerCase());\r\n    }\r\n\r\n\r\n    pushOneParameterMethod(identifier: string, returnType: string, parameterType: string){\r\n        this.methods.push(new SQLMethod(identifier, true, returnType, [new SQLMethodParameter(\"spalte\", parameterType)]));\r\n\r\n    }\r\n}","export function hash(s: string){\r\n    let hash: number = 0;\r\n    let chr: number;\r\n    for (let i = 0; i < s.length; i++) {\r\n      chr   = s.charCodeAt(i);\r\n      hash  = ((hash << 5) - hash) + chr;\r\n      hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n\r\nexport function escapeHtml(unsafe: string): string {\r\n  return unsafe\r\n      .replace(/['\"]+/g, '')\r\n       .replace(/&/g, \"&amp;\")\r\n       .replace(/</g, \"&lt;\")\r\n       .replace(/>/g, \"&gt;\")\r\n       .replace(/\"/g, \"&quot;\")\r\n       .replace(/'/g, \"&#039;\");\r\n}\r\n\r\nexport function dateToString(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth() + 1)}.${date.getFullYear()}, ${twoDez(date.getHours())}:${twoDez(date.getMinutes())}`;\r\n}\r\n\r\nexport function dateToStringWithoutTime(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth())}.${date.getFullYear()}`;\r\n}\r\n\r\nfunction twoDez(z: number):string {\r\n  if(z < 10) return \"0\" + z;\r\n  return \"\" + z;\r\n}\r\n\r\nexport function stringToDate(text: string): Date {\r\n\r\n  let match = text.match(/^(\\d{2})\\.(\\d{2})\\.(\\d{4}), (\\d{2}):(\\d{2})$/);\r\n\r\n  let date: Date = new Date(Number.parseInt(match[3]), Number.parseInt(match[2]), Number.parseInt(match[1]), Number.parseInt(match[4]), Number.parseInt(match[5]) );\r\n\r\n  return date;\r\n}\r\n\r\nexport function stringWrap(s: string, length: number ): string{\r\n  return s.replace(\r\n    new RegExp(`(?![^\\\\n]{1,${length}}$)([^\\\\n]{1,${length}})\\\\s`, 'g'), '$1\\n'\r\n  );\r\n} \r\n\r\nexport function formatAsJavadocComment(s: string, indent: number|string = \"\"): string {\r\n  let indentString = \"\";\r\n\r\n  if(typeof indent == \"string\"){\r\n    indentString = indent;\r\n  } else {\r\n    for(let i = 0; i < indent; i++){\r\n      indentString += \" \";\r\n    }\r\n  }\r\n\r\n  s = stringWrap(s, 60);\r\n  if(s.length > 0) s = \"\\n\" + s;\r\n  s = indentString + \"/**\" + s.replace(/\\n/g, \"\\n\" + indentString + \" * \") + \"\\n\" + indentString + \" */\";\r\n  return s;\r\n}\r\n\r\n\r\nexport function isDate(inputText: string) {\r\n\r\n      if (inputText == null || typeof inputText != 'string') return false;\r\n\r\n      // var dateformat = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/;\r\n      var dateformat = /^\\d{4}[\\/\\-](0?[1-9]|1[012])[\\/\\-](0?[1-9]|[12][0-9]|3[01])$/;\r\n      // Match the date format through regular expression\r\n      if (inputText.match(dateformat)) {\r\n          //Test which seperator is used '/' or '-'\r\n          var opera1 = inputText.split('/');\r\n          var opera2 = inputText.split('-');\r\n          var lopera1 = opera1.length;\r\n          var lopera2 = opera2.length;\r\n          // Extract the string into month, date and year\r\n          if (lopera1 > 1) {\r\n              var pdate = inputText.split('/');\r\n          }\r\n          else if (lopera2 > 1) {\r\n              var pdate = inputText.split('-');\r\n          }\r\n          if (pdate.length != 3) return false;\r\n          var dd = parseInt(pdate[2]);\r\n          var mm = parseInt(pdate[1]);\r\n          var yy = parseInt(pdate[0]);\r\n          // Create list of days of a month [assume there is no leap year by default]\r\n          var ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n          if (mm == 1 || mm > 2) {\r\n              if (dd > ListofDays[mm - 1]) {\r\n                  return false;\r\n              }\r\n          }\r\n          if (mm == 2) {\r\n              var lyear = false;\r\n              if ((!(yy % 4) && yy % 100) || !(yy % 400)) {\r\n                  lyear = true;\r\n              }\r\n              if ((lyear == false) && (dd >= 29)) {\r\n                  return false;\r\n              }\r\n              if ((lyear == true) && (dd > 29)) {\r\n                  return false;\r\n              }\r\n              return true;\r\n          }\r\n\r\n          return true;\r\n\r\n      }\r\n      else {\r\n          return false;\r\n      }\r\n  }\r\n\r\n  export function isDateTime(inputText: string) {\r\n\r\n      if (inputText == null || typeof inputText != 'string') return false;\r\n\r\n      // var dateformat = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/;\r\n      var dateformat = /^\\d{4}[\\-](0[1-9]|1[012])[\\-](0[1-9]|[12][0-9]|3[01]) ([01][1-9]|2[0123]):([0-5][0-9]):([0-5][0-9])$/;\r\n      // Match the date format through regular expression\r\n      if (inputText.match(dateformat)) {\r\n          var splitStr = inputText.split(' ');\r\n          var dateStr = splitStr[0];\r\n          //var timeStr = splitStr[1];\r\n\r\n          if (dateStr.length != 10) return false;\r\n          var dd = parseInt(dateStr.substring(8,10));\r\n          var mm = parseInt(dateStr.substring(5, 7));\r\n          var yy = parseInt(dateStr.substring(0, 4));\r\n          // Create list of days of a month [assume there is no leap year by default]\r\n          var ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n          if (mm == 1 || mm > 2) {\r\n              if (dd > ListofDays[mm - 1]) {\r\n                  return false;\r\n              }\r\n          }\r\n          if (mm == 2) {\r\n              var lyear = false;\r\n              if ((!(yy % 4) && yy % 100) || !(yy % 400)) {\r\n                  lyear = true;\r\n              }\r\n              if ((lyear == false) && (dd >= 29)) {\r\n                  return false;\r\n              }\r\n              if ((lyear == true) && (dd > 29)) {\r\n                  return false;\r\n              }\r\n              return true;\r\n          }\r\n\r\n          return true;\r\n\r\n      }\r\n      else {\r\n          return false;\r\n      }\r\n  }\r\n","import { DatabaseTool } from \"../../tools/DatabaseTools.js\";\r\nimport { TextPosition, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { CompletionHint, Module } from \"./Module.js\";\r\nimport { Symbol, SymbolTable } from \"./SymbolTable.js\";\r\nimport { AlterTableNode, ASTNode, BinaryOpNode, CreateTableNode, DeleteNode, DotNode, DropTableNode, IdentifierNode, InsertNode, MethodcallNode, SelectNode, TableOrSubqueryNode, TermNode, UpdateNode } from \"./Ast.js\";\r\nimport { Error, ErrorLevel, QuickFix } from \"../lexer/Lexer.js\";\r\nimport { Column, Table } from \"./SQLTable.js\";\r\nimport { SQLBaseType, SQLType } from \"./SQLTypes.js\";\r\nimport { SQLMethodStore } from \"./SQLMethods.js\";\r\nimport { isDate, isDateTime } from \"../../tools/StringTools.js\";\r\n\r\n\r\nexport class SymbolResolver {\r\n\r\n    symbolTableStack: SymbolTable[] = [];\r\n    errorList: Error[];\r\n    module: Module;\r\n    databaseTool: DatabaseTool;\r\n    tables: Table[];\r\n\r\n    constructor(databaseTool: DatabaseTool) {\r\n        this.databaseTool = databaseTool;\r\n        this.tables = Table.fromTableStructureList(databaseTool.databaseStructure?.tables);\r\n    }\r\n\r\n    start(module: Module) {\r\n        this.module = module;\r\n        this.symbolTableStack = [];\r\n        this.errorList = [];\r\n\r\n        module.mainSymbolTable = new SymbolTable(null, { column: 0, line: 0, length: 0 }, { column: 0, line: 100000, length: 0 })\r\n\r\n        this.symbolTableStack.push(module.mainSymbolTable);\r\n\r\n        for (let statement of this.module.sqlStatements) {\r\n\r\n            let errorsBeforeStatement = this.errorList.length;\r\n\r\n            let astNode = statement.ast;\r\n            if (astNode == null) continue;\r\n\r\n            switch (astNode.type) {\r\n                case TokenType.keywordSelect:\r\n                    this.resolveSelect(astNode);\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n                case TokenType.keywordInsert:\r\n                    this.resolveInsert(astNode);\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n                case TokenType.keywordCreate:\r\n                    this.resolveCreateTable(astNode);\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n                case TokenType.keywordUpdate:\r\n                    this.resolveUpdate(astNode);\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n                case TokenType.keywordDelete:\r\n                    this.resolveDelete(astNode);\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n                case TokenType.keywordDrop:\r\n                    this.resolveDropTable(astNode);\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n                case TokenType.keywordAlter:\r\n                    this.resolveAlterTable(astNode)\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n\r\n                default:\r\n                    break;\r\n            }\r\n\r\n            statement.hasErrors = statement.hasErrors || this.errorList.length > errorsBeforeStatement;\r\n\r\n        }\r\n\r\n        module.errors[2] = this.errorList;\r\n\r\n    }\r\n\r\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position: TextPosition, quickFix?: QuickFix) {\r\n        // if (position == null) position = Object.assign({}, this.position);\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n\r\n    getCurrentSymbolTable(): SymbolTable {\r\n        return this.symbolTableStack[this.symbolTableStack.length - 1];\r\n    }\r\n\r\n    pushNewSymbolTable(positionFrom: TextPosition, positionTo: TextPosition): SymbolTable {\r\n        if(positionTo == null) {\r\n            positionTo = {\r\n                line: 100000,\r\n                column: 1,\r\n                length: 1\r\n            }\r\n        };\r\n        let st: SymbolTable = new SymbolTable(this.getCurrentSymbolTable(), positionFrom, positionTo);\r\n        this.symbolTableStack.push(st);\r\n        return st;\r\n    }\r\n\r\n    resolveSelect(selectNode: SelectNode): Table {\r\n        let resultTable: Table = new Table(null);\r\n\r\n        selectNode.symbolTable = this.pushNewSymbolTable(selectNode.position, selectNode.endPosition);\r\n\r\n        // From\r\n        let joinedTables: Table[] = [];\r\n        this.resolveTableOrSubQuery(selectNode.fromNode, joinedTables);\r\n        if (selectNode.fromStartPosition != null) {\r\n            let fromSymbolTable = new SymbolTable(this.getCurrentSymbolTable(), selectNode.fromStartPosition, selectNode.fromEndPosition);\r\n            fromSymbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n        }\r\n\r\n        // Column list\r\n        for (let columnNode of selectNode.columnList) {\r\n            if (columnNode.type == TokenType.allColumns) {\r\n                for (let table of joinedTables) {\r\n                    for (let column of table.columns) {\r\n                        let c: Column = new Column(column.identifier, column.type, resultTable, false, true, column.defaultValue, column.isAutoIncrement);\r\n                        resultTable.columns.push(c);\r\n                    }\r\n                }\r\n            } else {\r\n                this.resolveTerm(columnNode.term);\r\n                let c1: Column = new Column(columnNode.alias, columnNode.term.sqlType, resultTable, false, true, null, false);\r\n                resultTable.columns.push(c1);\r\n                if (c1.identifier != null) {\r\n                    selectNode.symbolTable.storeSymbol({\r\n                        identifier: c1.identifier,\r\n                        posOfDefinition: columnNode.term.position,\r\n                        referencedOnPositions: [],\r\n                        column: c1\r\n                    })\r\n                }\r\n            }\r\n        }\r\n\r\n        // where...\r\n        if (selectNode.whereNode != null) {\r\n            let whereType = this.resolveTerm(selectNode.whereNode);\r\n            if (whereType != null && whereType.getBaseTypeName() != \"boolean\") {\r\n                this.pushError(\"Das Ergebnis des where-Teils einer select-Anweisung muss vom Typ boolean sein.\", \"error\", selectNode.whereNode.position);\r\n            }\r\n        }\r\n\r\n\r\n        // TODO: group by, order by\r\n\r\n        return resultTable;\r\n    }\r\n\r\n    resolveDropTable(node: DropTableNode) {\r\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\r\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n\r\n        if (node.tableIdentifier == null) return;\r\n\r\n        if(!node.ifExists){\r\n            let table = node.symbolTable.findTable(node.tableIdentifier);\r\n            if (table == null) this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\r\n        }\r\n\r\n    }\r\n\r\n    resolveDelete(node: DeleteNode) {\r\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\r\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n\r\n        if (node.tableIdentifier == null) return;\r\n\r\n        let table = node.symbolTable.findTable(node.tableIdentifier);\r\n        if (table == null) this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\r\n\r\n\r\n        // if(node.whereNodeBegin != null){\r\n        //     let symbolTable = this.pushNewSymbolTable(node.whereNodeBegin, node.whereNodeEnd);\r\n        //     symbolTable.storeTableSymbols(table);\r\n        // }\r\n\r\n\r\n        if (node.whereNode != null) {\r\n            let whereSymbolTable = this.pushNewSymbolTable(node.whereNodeBegin, node.whereNodeEnd);\r\n            if(table != null) whereSymbolTable.storeTableSymbols(table);\r\n            this.resolveTerm(node.whereNode);\r\n            this.symbolTableStack.pop();\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    resolveAlterTable(node: AlterTableNode) {\r\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\r\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n\r\n        if (node.tableIdentifier == null) {\r\n            return;\r\n        }\r\n\r\n        let table = node.symbolTable.findTable(node.tableIdentifier);\r\n        if (table == null) {\r\n            this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\r\n        }\r\n\r\n        let oldColumn: Column = null;\r\n        if (node.oldColumnName != null) {\r\n            oldColumn = table.columns.find(c => c.identifier.toLocaleLowerCase() == node.oldColumnName.toLocaleLowerCase());\r\n            if (oldColumn == null) {\r\n                this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" hat keine Spalte mit dem Bezeichner \" + node.oldColumnName, \"error\", node.oldColumnPosition);\r\n            }\r\n        }\r\n\r\n        switch (node.kind) {\r\n            case \"dropColumn\":\r\n                // nothing to do as node.oldColumnName is checked above\r\n                break;\r\n            case \"addColumn\":\r\n                let columnNode = node.columnDef;\r\n                if (columnNode == null) break;\r\n                if (columnNode.foreignKeyInfo != null && columnNode.baseType != null) {\r\n                    let fki = columnNode.foreignKeyInfo;\r\n                    let tables = this.getCurrentSymbolTable().findTables(fki.referencesTable);\r\n                    if (tables.length == 1) {\r\n                        let table = tables[0].table;\r\n                        let column = table.columns.find(c => c.identifier == fki.referencesColumn);\r\n                        if (column != null && column.type != null) {\r\n                            if (!column.isPrimaryKey) {\r\n                                this.pushError(\"Die referenzierte Spalte \" + fki.referencesTable + \".\" + fki.referencesColumn + \" ist kein Primärschlüssel.\", \"warning\", columnNode.referencesPosition);\r\n                            }\r\n                            if (!column.type.canCastTo(columnNode.baseType)) {\r\n                                this.pushError(\"Der Datentyp \" + columnNode.baseType.toString() + \" der Spalte \" + columnNode.identifier +\r\n                                    \" kann nich in den Datentyp \" + column.type.toString() + \" der referenzierten Spalte \" + table.identifier + \".\" +\r\n                                    column.identifier + \" umgewandelt werden.\", \"error\", columnNode.referencesPosition);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            case \"renameColumn\":\r\n                // nothing to do as node.oldColumnName is checked above\r\n                break;\r\n            case \"renameTable\":\r\n                // nothing to do \r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    resolveUpdate(node: UpdateNode) {\r\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\r\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n\r\n        if (node.tableIdentifier == null) {\r\n            return;\r\n        }\r\n\r\n        let table = node.symbolTable.findTable(node.tableIdentifier);\r\n        if (table == null) this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\r\n\r\n        for (let i = 0; i < node.columnIdentifiers.length; i++) {\r\n            let ci = node.columnIdentifiers[i];\r\n            let ciPos = node.columnIdentifierPositions[i];\r\n            let value = node.values[i];\r\n\r\n            if (ci == null) continue;\r\n            let column = table.columns.find(c => c.identifier == ci);\r\n\r\n            if (column == null) {\r\n                this.pushError(ci + \" ist kein Bezeichner einer Spalte der Tabelle \" + node.tableIdentifier + \".\", \"error\", ciPos);\r\n            }\r\n\r\n            if (value == null) continue;\r\n            let symbolTable = this.pushNewSymbolTable(node.valuePosBegin[i], node.valuePosEnd[i]);\r\n            symbolTable.storeTableSymbols(table);\r\n            this.resolveTerm(value);\r\n            this.symbolTableStack.pop();\r\n\r\n        }\r\n\r\n        if (node.whereNodeBegin != null) {\r\n            let symbolTable = this.pushNewSymbolTable(node.whereNodeBegin, node.whereNodeEnd);\r\n            symbolTable.storeTableSymbols(table);\r\n        }\r\n\r\n        if (node.whereNode != null) {\r\n            this.resolveTerm(node.whereNode);\r\n        }\r\n        this.symbolTableStack.pop();\r\n\r\n    }\r\n\r\n\r\n\r\n    resolveCreateTable(createTableNode: CreateTableNode) {\r\n\r\n        createTableNode.symbolTable = this.pushNewSymbolTable(createTableNode.position, createTableNode.endPosition);\r\n        createTableNode.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n\r\n        let thisTable: Table = {\r\n            identifier: createTableNode.identifier,\r\n            columns: null,\r\n            size: 0\r\n        }\r\n\r\n        thisTable.columns = createTableNode.columnList.map(c => {\r\n            return {\r\n                identifier: c.identifier,\r\n                isNullable: false,\r\n                isPrimaryKey: c.isPrimary,\r\n                isAutoIncrement: c.isAutoIncrement,\r\n                notNull: false,\r\n                references: null,\r\n                table: thisTable,\r\n                type: c.baseType,\r\n                defaultValue: c.defaultValue\r\n            }\r\n        });\r\n\r\n        createTableNode.symbolTable.storeTableSymbols(thisTable);\r\n\r\n        for (let columnNode of createTableNode.columnList) {\r\n            if (createTableNode.columnList.filter(c => c.identifier.toLocaleLowerCase() == columnNode.identifier.toLocaleLowerCase()).length > 1) {\r\n                this.pushError(\"Der Spaltenbezeichner \" + columnNode.identifier + \" darf in einer Tabelle nur ein einziges Mal verwendet werden\", \"error\", columnNode.position);\r\n            }\r\n\r\n            if (columnNode.foreignKeyInfo != null && columnNode.baseType != null) {\r\n                let fki = columnNode.foreignKeyInfo;\r\n                let tables = this.getCurrentSymbolTable().findTables(fki.referencesTable);\r\n                if (tables.length == 1) {\r\n                    let table = tables[0].table;\r\n                    let column = table.columns.find(c => c.identifier == fki.referencesColumn);\r\n                    if (column != null && column.type != null) {\r\n                        if (!column.isPrimaryKey) {\r\n                            this.pushError(\"Die referenzierte Spalte \" + fki.referencesTable + \".\" + fki.referencesColumn + \" ist kein Primärschlüssel.\", \"warning\", columnNode.referencesPosition);\r\n                        }\r\n                        if (!column.type.canCastTo(columnNode.baseType)) {\r\n                            this.pushError(\"Der Datentyp \" + columnNode.baseType.toString() + \" der Spalte \" + columnNode.identifier +\r\n                                \" kann nich in den Datentyp \" + column.type.toString() + \" der referenzierten Spalte \" + table.identifier + \".\" +\r\n                                column.identifier + \" umgewandelt werden.\", \"error\", columnNode.referencesPosition);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        for (let fki of createTableNode.foreignKeyInfoList) {\r\n\r\n            let columnNode = createTableNode.columnList.find(cn => cn.identifier == fki.column);\r\n            if (columnNode == null) continue;\r\n\r\n            let tables = this.getCurrentSymbolTable().findTables(fki.referencesTable);\r\n            if (tables.length == 1) {\r\n                let table = tables[0].table;\r\n                let column = table.columns.find(c => c.identifier == fki.referencesColumn);\r\n                if (column != null && column.type != null) {\r\n                    if (!column.isPrimaryKey) {\r\n                        this.pushError(\"Die referenzierte Spalte \" + fki.referencesTable + \".\" + fki.referencesColumn + \" ist kein Primärschlüssel.\", \"warning\", fki.referencesPosition);\r\n                    }\r\n                    if (!column.type.canCastTo(columnNode.baseType)) {\r\n                        this.pushError(\"Der Datentyp \" + columnNode.baseType.toString() + \" der Spalte \" + columnNode.identifier +\r\n                            \" kann nich in den Datentyp \" + column.type.toString() + \" der referenzierten Spalte \" + table.identifier + \".\" +\r\n                            column.identifier + \" umgewandelt werden.\", \"error\", fki.referencesPosition);\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    resolveTableOrSubQuery(tosNode: TableOrSubqueryNode, joinedTables: Table[]) {\r\n        if (tosNode == null) return;\r\n\r\n        switch (tosNode.type) {\r\n            case TokenType.table:\r\n                let tableList = this.tables.filter(t => t.identifier.toLowerCase() == tosNode.identifier.toLowerCase());\r\n                if (tableList.length == 0) {\r\n                    this.pushError(tosNode.identifier + \" ist nicht der Name einer Tabelle.\", \"error\", tosNode.position);\r\n                } else if (tableList.length > 1) {\r\n                    this.pushError(\"Der Bezeichner \" + tosNode.identifier + \" ist hier nicht eindeutig.\", \"error\", tosNode.position);\r\n                } else {\r\n                    let table: Table = tableList[0];\r\n                    joinedTables.push(table);\r\n                    this.storeTableIntoSymbolTable(table, tosNode.position, tosNode.alias);\r\n                }\r\n\r\n                break;\r\n\r\n            case TokenType.keywordJoin:\r\n                this.resolveTableOrSubQuery(tosNode.firstOperand, joinedTables);\r\n                this.resolveTableOrSubQuery(tosNode.secondOperand, joinedTables);\r\n                break;\r\n\r\n            case TokenType.subquery:\r\n                tosNode.table = this.resolveSelect(tosNode.query);\r\n                joinedTables.push(tosNode.table);\r\n                if (tosNode.alias != null) {\r\n                    tosNode.table.identifier = tosNode.alias;\r\n                    this.storeTableIntoSymbolTable(tosNode.table, tosNode.position);\r\n                }\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    storeTableIntoSymbolTable(table: Table, position: TextPosition, alias?: string) {\r\n        let symbolTable = this.getCurrentSymbolTable();\r\n        symbolTable.storeSymbol({\r\n            identifier: alias == null ? table.identifier.toLowerCase() : alias.toLowerCase(),\r\n            posOfDefinition: position,\r\n            table: table,\r\n            referencedOnPositions: []\r\n        });\r\n        for (let column of table.columns) {\r\n            symbolTable.storeSymbol({\r\n                identifier: column.identifier.toLowerCase(),\r\n                posOfDefinition: null,\r\n                column: column,\r\n                tableAlias: alias,\r\n                referencedOnPositions: []\r\n            });\r\n        }\r\n    }\r\n\r\n    resolveTerm(node: TermNode): SQLType {\r\n        if (node == null) return null;\r\n\r\n        switch (node.type) {\r\n            case TokenType.binaryOp:\r\n                if ([TokenType.keywordIn, TokenType.keywordNotIn].indexOf(node.operator) >= 0) {\r\n                    return this.resolveNotIn(node);\r\n                }\r\n\r\n                let typeLeft = this.resolveTerm(node.firstOperand);\r\n                let typeRight = this.resolveTerm(node.secondOperand);\r\n                if (typeLeft != null && typeRight != null) {\r\n                    let resultType = typeLeft.getBinaryResultType(node.operator, typeRight);\r\n                    if (resultType == null) {\r\n                        this.pushError(\"Der Operator \" + TokenTypeReadable[node.operator] + \" ist für die Datentypen \" + typeLeft.toString() + \" und \" + typeRight.toString() + \" nicht definiert.\", \"error\", node.position);\r\n                    }\r\n                    return resultType;\r\n                } else {\r\n                    return null;\r\n                }\r\n                break;\r\n            case TokenType.unaryOp:\r\n                let operandType = this.resolveTerm(node.operand);\r\n                if (operandType != null) {\r\n                    let resultType1 = operandType.getUnaryResultType(node.operator);\r\n                    if (resultType1 == null) {\r\n                        this.pushError(\"Der Operator \" + TokenTypeReadable[node.operator] + \" ist für einen Operanden des Datentyps \" + operandType.toString() + \" nicht definiert.\", \"error\", node.position);\r\n                    }\r\n                    return resultType1;\r\n                } else {\r\n                    return null;\r\n                }\r\n                break;\r\n            case TokenType.callMethod:\r\n                return this.resolveMethodCall(node);\r\n                break;\r\n            //    ConstantNode | IdentifierNode | DotNode | SelectNode | BracketsNode | StarAttributeNode | SelectNode | ListNode;\r\n\r\n            case TokenType.constantNode:\r\n                node.sqlType = SQLBaseType.fromConstantType(node.constantType);\r\n                return node.sqlType;\r\n                break;\r\n            case TokenType.identifier:\r\n                return this.resolveIdentifier(node);\r\n                break;\r\n            case TokenType.dot:\r\n                return this.resolveDot(node);\r\n                break;\r\n            case TokenType.keywordSelect:\r\n                let selectTable = this.resolveSelect(node);\r\n                if (selectTable.columns.length != 1) {\r\n                    this.pushError(\"Die Ergebnistabelle einer Unterabfrage an dieser Stelle muss genau eine Spalte besitzen.\", \"error\", node.position);\r\n                    return null;\r\n                }\r\n                return selectTable.columns[0].type;\r\n                break;\r\n            case TokenType.rightBracket:   // BracketsNode\r\n                node.sqlType = this.resolveTerm(node.termInsideBrackets);\r\n                return node.sqlType;\r\n                break;\r\n            case TokenType.allColumns:\r\n                this.pushError(\"Das Zeichen * kann hier nicht verwendet werden.\", \"error\", node.position);\r\n                break;\r\n            case TokenType.list:\r\n                this.pushError(\"Eine Liste wird hier nicht erwartet.\", \"error\", node.position);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    resolveDot(node: DotNode): SQLType {\r\n        let tableSymbols = this.getCurrentSymbolTable().findTables(node.identifierLeft.identifier);\r\n        if (tableSymbols.length == 0) {\r\n            this.pushError(\"Die Tabelle \" + node.identifierLeft.identifier + \" kann nicht gefunden werden.\", \"error\", node.identifierLeft.position);\r\n            return null;\r\n        }\r\n        if (tableSymbols.length > 1) {\r\n            this.pushError(\"Der Tabellenbezeichner \" + node.identifierLeft.identifier + \" ist nicht eindeutig.\", \"error\", node.identifierLeft.position);\r\n            return null;\r\n        }\r\n        let table = tableSymbols[0].table;\r\n\r\n        let columns = table.columns.filter(c => c.identifier.toLowerCase() == node.identifierRight.identifier.toLowerCase());\r\n\r\n        if (columns.length == 0) {\r\n            this.pushError(\"Die Tabelle \" + node.identifierLeft.identifier + \" hat keine Spalte mit dem Bezeichner \" + node.identifierRight.identifier + \".\", \"error\", node.identifierRight.position);\r\n            return;\r\n        }\r\n\r\n        if (columns.length > 1) {\r\n            this.pushError(\"Die Tabelle \" + node.identifierLeft.identifier + \" hat mehrere Spalten mit dem Bezeichner \" + node.identifierRight.identifier + \".\", \"error\", node.identifierRight.position);\r\n            return;\r\n        }\r\n\r\n        let column = columns[0];\r\n        node.sqlType = column.type;\r\n        return column.type;\r\n\r\n    }\r\n\r\n    resolveIdentifier(node: IdentifierNode): SQLType {\r\n        let symbols = this.getCurrentSymbolTable().findColumn(node.identifier);\r\n        if (symbols.length == 0) {\r\n            this.pushError(\"Der Bezeichner \" + node.identifier + \" ist an dieser Stelle nicht bekannt.\", \"error\", node.position);\r\n            return null;\r\n        }\r\n        if (symbols.length > 1) {\r\n            this.pushError(\"Der Bezeichner \" + node.identifier + \" ist nicht eindeutig.\", \"error\", node.position);\r\n            return null;\r\n        }\r\n\r\n        let symbol = symbols[0];\r\n        node.sqlType = symbol.column.type;\r\n        return symbol.column.type;\r\n    }\r\n\r\n    resolveMethodCall(node: MethodcallNode): SQLType {\r\n\r\n        let methodStore = SQLMethodStore.getInstance();\r\n        let methods = methodStore.getMethods(node.identifier);\r\n\r\n        methods = methods.filter(m => m.parameters.length == node.operands.length);\r\n        if (node.operands.length == 1 && node.operands[0].type == TokenType.allColumns) {\r\n            methods = methods.filter(m => m.acceptsStarParameter);\r\n            node.sqlType = methods[0].returnType;\r\n            return node.sqlType;\r\n        }\r\n\r\n        if (methods.length == 0) {\r\n            this.pushError(\"Es gibt keine passende Methode mit dem Bezeichner '\" + node.identifier + \"'.\", \"error\", node.position);\r\n            return null;\r\n        }\r\n\r\n        for (let operand of node.operands) {\r\n            if (this.resolveTerm(operand) == null) {\r\n                node.sqlType = methods[0].returnType;\r\n                return node.sqlType;\r\n            }\r\n        }\r\n\r\n        for (let method of methods) {\r\n            let found = true;\r\n            for (let i = 0; i < method.parameters.length; i++) {\r\n                let methodParameter = method.parameters[i];\r\n                let operand = node.operands[i];\r\n                if (!operand.sqlType.canCastTo(methodParameter.type)) {\r\n                    found = false;\r\n                    break;\r\n                }\r\n            }\r\n            if (found) {\r\n                node.sqlType = method.returnType;\r\n                return node.sqlType;\r\n            }\r\n        }\r\n\r\n        this.pushError(\"Es gibt keine passende Methode mit dem Bezeichner '\" + node.identifier + \"'.\", \"error\", node.position);\r\n        return null;\r\n\r\n    }\r\n\r\n    resolveNotIn(node: BinaryOpNode): SQLType {\r\n\r\n        if (node.firstOperand == null || node.secondOperand == null) return null;\r\n\r\n        let operatorString = TokenTypeReadable[node.operator];\r\n\r\n        this.resolveTerm(node.firstOperand);\r\n        let leftType = node.firstOperand.sqlType;\r\n        if (leftType != null) {\r\n            if (node.secondOperand.type == TokenType.keywordSelect) {\r\n                let selectNode = node.secondOperand;\r\n                if (selectNode.columnList.length != 1) {\r\n                    this.pushError(\"Wenn rechts vom Operator '\" + operatorString + \"' eine Unterabfrage steht, muss die Ergebnistabelle dieser Unterabfrage genau eine Spalte haben.\", \"error\", selectNode.position);\r\n                }\r\n                this.resolveSelect(selectNode);\r\n                let pType = selectNode.columnList[0].term.sqlType;\r\n                if (!pType.canCastTo(leftType)) {\r\n                    this.pushError(\"Der Datentyp der Ergebnisspalte der Unterabfrage ist \" + pType.toString() + \". Dieser kann nicht in den Datentyp \" + leftType.toString() + \" umgewandelt werden.\", \"error\", selectNode.position);\r\n                }\r\n            } else if (node.secondOperand.type == TokenType.list) {\r\n                let listNode = node.secondOperand;\r\n                for (let element of listNode.elements) {\r\n                    let elementType = SQLBaseType.fromConstantType(element.constantType);\r\n                    element.sqlType = elementType;\r\n                    if (!elementType.canCastTo(leftType)) {\r\n                        this.pushError(\"Der Datentyp des Listenelements \" + element.constant + \" ist \" + elementType.toString() + \". Er kann nicht in den Datentype \" + leftType.toString() + \" des Operanden auf der linken Seite des Operators '\" + operatorString + \"' umgewandelt werden.\", \"error\", element.position);\r\n                    }\r\n                }\r\n            } else {\r\n                this.pushError(\"Der rechte Operand der Operatoren 'in' und 'not in' muss eine Unterabfrage oder eine Liste sein.\", \"error\", node.secondOperand.position);\r\n            }\r\n\r\n        }\r\n\r\n        return SQLBaseType.getBaseType(\"boolean\");\r\n    }\r\n\r\n    resolveInsert(astNode: InsertNode) {\r\n\r\n        let table: Table = null;\r\n        let symbolTable = this.pushNewSymbolTable(astNode.position, astNode.endPosition);\r\n        if (astNode.table != null) {\r\n            astNode.table.table = this.tables.find(t => t.identifier.toLowerCase() == astNode.table.identifier.toLocaleLowerCase());\r\n            if (astNode.table.table == null) {\r\n                this.pushError(\"Die Tabelle \" + astNode.table.identifier + \" gibt es nicht.\", \"error\", astNode.table.position);\r\n            } else {\r\n                table = astNode.table.table;\r\n                symbolTable.storeTableSymbols(table);\r\n            }\r\n        }\r\n\r\n        let tableCompletionTo = astNode.endPosition;\r\n        if (astNode.valuesPosition != null) tableCompletionTo = astNode.valuesPosition;\r\n        if (astNode.columnsPosition != null) tableCompletionTo = astNode.columnsPosition;\r\n\r\n        this.module.addCompletionHint(astNode.position, tableCompletionTo, false, true, [\"into\", \"values\"]);\r\n\r\n        if (table != null) {\r\n            this.module.addCompletionHint(tableCompletionTo, astNode.valuesPosition == null ? astNode.endPosition : astNode.valuesPosition, true, false, [\"values\"]);\r\n        }\r\n\r\n        let tableSymbolTable = this.pushNewSymbolTable(astNode.position, tableCompletionTo);\r\n        tableSymbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n\r\n        let columns: Column[] = [];\r\n        // Parse column list\r\n        if (astNode.columnList.length == 0) {\r\n            if (table != null) {\r\n                columns = table.columns;\r\n            }\r\n        } else {\r\n            if (table != null) {\r\n                for (let columnNode of astNode.columnList) {\r\n                    let column = table.columns.find(c => c.identifier.toLowerCase() == columnNode.identifier.toLowerCase());\r\n                    if (column == null) {\r\n                        this.pushError(\"Die Tabelle \" + table.identifier + \" besitzt keine Spalte mit dem Bezeichner \" + columnNode.identifier + \".\", \"error\", columnNode.position);\r\n                    } else {\r\n                        columns.push(column);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (columns.length > 0) {\r\n            // Parse value lists\r\n            for (let valueList of astNode.values) {\r\n                if (valueList.length != columns.length && valueList.length > 0) {\r\n                    this.pushError(\"Erwartet werden \" + columns.length + \" Elemente, hier stehen aber \" + valueList.length + \" Elemente in der Liste.\", \"error\", valueList[0].position);\r\n                } else {\r\n                    for (let i = 0; i < valueList.length; i++) {\r\n                        let value = valueList[i];\r\n                        let column = columns[i];\r\n                        value.sqlType = SQLBaseType.fromConstantType(value.constantType);\r\n                        // constantType == 40 means: null\r\n                        // TODO: check if column is nullable!\r\n                        let destType = column.type.toString().toLocaleLowerCase();\r\n                        if (value.constantType == TokenType.keywordNull) {\r\n                            if (!column.isNullable || column.notNull) {\r\n                                this.pushError(\"Die Spalte \" + column.identifier + \" ist nicht nullable, daher kann null hier nicht eingefügt werden.\", \"error\", value.position);\r\n                            }\r\n                        } else if (!value.sqlType.canCastTo(column.type)) {\r\n                            let error: string = \"Der Wert \" + value.constant + \" vom Datentyp \" + value.sqlType.toString() + \" kann nicht in den Datentyp \" + column.type.toString() + \" der Spalte \" + column.identifier + \" umgewandelt werden.\";\r\n\r\n                            if(destType == \"date\") error += \"<br><b>Tipp: </b>Datumswerte haben die Form 'yyyy-mm-dd', also z.B. '2022-06-15'.\";\r\n                            if(destType == \"datetime\" || destType == \"timestamp\") error += \"<br><b>Tipp: </b>Timestamps haben die Form 'yyyy-mm-dd hh:min:ss', also z.B. '2022-06-15 07:56:22'.\";\r\n\r\n                            this.pushError(error, \"error\", value.position);\r\n                        } else if(destType == \"date\"){\r\n                            if(!isDate(value.constant)){\r\n                                let error: string = `'${value.constant}' ist kein date-Wert.<br><b>Tipp: </b>Datumswerte haben die Form 'yyyy-mm-dd', also z.B. '2022-06-15'.`;\r\n                                this.pushError(error, \"error\", value.position);\r\n                            }\r\n                        } else if(destType == \"datetime\" || destType == \"timestamp\"){\r\n                            if(!isDateTime(value.constant)){\r\n                                let error: string = `'${value.constant}' ist kein ${destType}-Wert.<br><b>Tipp: </b>Timestamps haben die Form 'yyyy-mm-dd hh:min:ss', also z.B. '2022-06-15 07:56:22'.`;\r\n                                this.pushError(error, \"error\", value.position);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        this.symbolTableStack.pop();\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { SymbolResolver } from \"./parser/SymbolResolver.js\";\r\n\r\nexport enum CompilerStatus {\r\n    compiling, error, compiledButNothingToRun, readyToRun\r\n}\r\n\r\nexport class Compiler {\r\n\r\n    compilerStatus: CompilerStatus = CompilerStatus.compiledButNothingToRun;\r\n\r\n    atLeastOneModuleIsStartable: boolean;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    compile(moduleStore: ModuleStore): Error[] {\r\n\r\n        this.compilerStatus = CompilerStatus.compiling;\r\n\r\n        let t0 = performance.now();\r\n\r\n        let lexer = new Lexer();\r\n\r\n        // 1st pass: lexing\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.file.dirty = false;\r\n            m.clear();\r\n\r\n            let lexed = lexer.lex(m.getProgramTextFromMonacoModel());\r\n            m.errors[0] = lexed.errors;\r\n            m.tokenList = lexed.tokens;\r\n            m.bracketError = lexed.bracketError;\r\n            if(m.file.name == this.main.getCurrentlyEditedModule().file.name){\r\n                if(this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(lexed.bracketError);\r\n            }\r\n        }\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        this.main.getSemicolonAngel().startRegistering();\r\n\r\n        let parser: Parser = new Parser();\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            parser.parse(m);\r\n        }\r\n        \r\n        // 3rd pass: check symbols and types\r\n        let databaseTool = this.main.getDatabaseTool();\r\n        let symbolResolver: SymbolResolver = new SymbolResolver(databaseTool);\r\n\r\n        for(let m of moduleStore.getModules(false)){\r\n            symbolResolver.start(m);\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        let message = \"Compiled in \" + dt + \" ms.\";\r\n\r\n        this.main.getCurrentWorkspace().compilerMessage = message;\r\n\r\n        this.main.getSemicolonAngel().healSemicolons();\r\n\r\n        this.compilerStatus = CompilerStatus.readyToRun;\r\n\r\n        return null;\r\n    }\r\n\r\n}","import { FileData } from \"../../communication/Data.js\";\r\nimport { AccordionElement } from \"../../main/gui/Accordion.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenType, TextPositionWithoutLength } from \"../lexer/Token.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { ASTNode } from \"./AST.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\nimport { stringToDate } from \"../../tools/StringTools.js\";\r\nimport { SQLStatement } from \"./Parser.js\";\r\n\r\n\r\nexport type CompletionHint = {\r\n    fromLine: number,\r\n    fromColumn: number,\r\n    toLine: number, \r\n    toColumn: number,\r\n    hintColumns: boolean,\r\n    hintColumnsOfTable?: string,\r\n    hintTables: boolean,\r\n    hintKeywords: string[],\r\n    dontHint?: string[],\r\n    praefix?: string,\r\n    suffix?: string\r\n}\r\n\r\nexport type File = {\r\n    name: string,\r\n    id?: number,\r\n    text: string,\r\n\r\n    text_before_revision: string,\r\n    submitted_date: string,\r\n    student_edited_after_revision: boolean,\r\n\r\n    dirty: boolean,\r\n    saved: boolean,\r\n    version: number,\r\n    panelElement?: AccordionElement\r\n\r\n}\r\n\r\nexport type IdentifierPosition = {\r\n    position: TextPosition,\r\n    element: any;\r\n}\r\n\r\nexport type MethodCallPosition = {\r\n    identifierPosition: TextPosition,\r\n    possibleMethods: any[] | string, // string for print, println, ...\r\n    commaPositions: TextPosition[],\r\n    rightBracketPosition: TextPosition\r\n}\r\n\r\nexport class Module {\r\n    file: File;\r\n    static maxUriNumber: number = 0;\r\n    uri: monaco.Uri;\r\n    model: monaco.editor.ITextModel;\r\n    oldErrorDecorations: string[] = [];\r\n    lastSavedVersionId: number;\r\n    editorState: monaco.editor.ICodeEditorViewState;\r\n\r\n    errors: Error[][] = [[], [], [], []]; // 1st pass, 2nd pass, 3rd pass\r\n\r\n    // 1st pass: Lexer\r\n    tokenList: Token[];\r\n\r\n    // 2nd pass: ASTParser\r\n    sqlStatements: SQLStatement[];\r\n    mainSymbolTable: SymbolTable;\r\n\r\n\r\n    identifierPositions: { [line: number]: IdentifierPosition[] } = {};\r\n    methodCallPositions: { [line: number]: MethodCallPosition[] } = {};\r\n\r\n    static uriMap: { [name: string]: number } = {};\r\n    bracketError: string;\r\n\r\n    completionHints: Map<number, CompletionHint[]> = new Map(); // Map from line numbers to hints\r\n\r\n    constructor(file: File, public main: MainBase) {\r\n        if (file == null || this.main == null) return; // used by AdhocCompiler and ApiDoc\r\n\r\n        this.file = file;\r\n        // this.uri = monaco.Uri.from({ path: '/file' + (Module.maxUriNumber++) + '.learnJava', scheme: 'file' });\r\n        let path = file.name;\r\n\r\n        let uriCounter = Module.uriMap[path];\r\n        if (uriCounter == null) {\r\n            uriCounter = 0;\r\n        } else {\r\n            uriCounter++;\r\n        }\r\n        Module.uriMap[path] = uriCounter;\r\n\r\n        if (uriCounter > 0) path += \" (\" + uriCounter + \")\";\r\n        this.uri = monaco.Uri.from({ path: path, scheme: 'inmemory' });\r\n        this.model = monaco.editor.createModel(file.text, \"vscSQL\", this.uri);\r\n        this.model.updateOptions({ tabSize: 3 });\r\n\r\n        this.lastSavedVersionId = this.model.getAlternativeVersionId();\r\n\r\n        let that = this;\r\n\r\n        this.model.onDidChangeContent(() => {\r\n            let versionId = that.model.getAlternativeVersionId();\r\n\r\n            if (versionId != that.lastSavedVersionId) {\r\n                that.file.dirty = true;\r\n                that.file.saved = false;\r\n                that.lastSavedVersionId = versionId;\r\n            }\r\n\r\n            if(!that.main.isEmbedded()){\r\n                let main1: Main = <Main>main;\r\n                if (main1.workspacesOwnerId != main1.user.id) {\r\n                    if (that.file.text_before_revision == null || that.file.student_edited_after_revision) {\r\n                        that.file.student_edited_after_revision = false;\r\n                        that.file.text_before_revision = that.file.text;\r\n                        that.file.saved = false;\r\n                        main1.networkManager.sendUpdates(null, false);\r\n                        main1.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n                        main1.projectExplorer.renderHomeworkButton(that.file);\r\n                    }\r\n                } else {\r\n                    that.file.student_edited_after_revision = true;\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    addCompletionHint(fromPosition: TextPosition, toPosition: TextPosition, hintColumns: boolean|string, hintTables: boolean, \r\n        hintKeywords: string[], dontHint?: string[], praefix: string = \"\", suffix: string = \"\"){\r\n        let ch: CompletionHint = {\r\n            fromColumn: fromPosition.column,\r\n            fromLine: fromPosition.line,\r\n            toColumn: toPosition.column,\r\n            toLine: toPosition.line,\r\n            hintColumns: (typeof hintColumns == \"boolean\")? hintColumns : true, \r\n            hintColumnsOfTable: (typeof hintColumns == \"string\")? hintColumns : null,\r\n            hintTables: hintTables,\r\n            hintKeywords: hintKeywords,\r\n            dontHint: dontHint,\r\n            praefix: praefix,\r\n            suffix: suffix\r\n        }\r\n\r\n        for(let i = ch.fromLine; i <= ch.toLine; i++){\r\n            let chList = this.completionHints.get(i);\r\n            if(chList == null){\r\n                chList = [];\r\n                this.completionHints.set(i, chList);\r\n            }\r\n            chList.push(ch);\r\n        }\r\n    }\r\n\r\n    getSQLSTatementsAtSelection(sel: monaco.Selection): SQLStatement[] {\r\n        let selStart = {line: sel.startLineNumber, column: sel.startColumn};\r\n        let selEnd = {line: sel.endLineNumber, column: sel.endColumn};\r\n\r\n        if(this.sqlStatements == null){\r\n            return [];\r\n        }\r\n\r\n        return this.sqlStatements.filter(stmt => {\r\n            return !(this.compare(stmt.to, selStart) < 0 || this.compare(stmt.from, selEnd) > 0);\r\n        })\r\n\r\n    }\r\n\r\n    /**\r\n     * returns 1 if a > b, 0 if a == b and -1 if a < b\r\n     * @param a \r\n     * @param b \r\n     */\r\n    compare(a: {line: number, column: number}, b: {line: number, column: number}): number{\r\n        if(a.line > b.line) return 1;\r\n        if(a.line < b.line) return -1;\r\n        if(a.column > b.column) return 1;\r\n        if(a.column < b.column) return -1;\r\n        return 0;\r\n    }\r\n\r\n\r\n\r\n    getSQLStatementAtPosition(p: { lineNumber: number, column: number }): SQLStatement {\r\n\r\n        return this.sqlStatements.find(statement => {\r\n            if(statement.from.line > p.lineNumber ) return false;\r\n            if(statement.from.line == p.lineNumber && statement.from.column > p.column) return false;\r\n            if(statement.to.line < p.lineNumber) return false;\r\n            if(statement.to.line == p.lineNumber && statement.to.column < p.column) return false;\r\n            return true;\r\n        });        \r\n\r\n    }\r\n\r\n\r\n    getCompletionHint(line: number, column: number){\r\n        let chList = this.completionHints.get(line);\r\n        \r\n        if(chList == null || chList.length == 0){\r\n            return null;\r\n        }\r\n\r\n        let pos = line * 1000 + column;\r\n        chList = chList.filter(ch => pos >= ch.fromLine * 1000 + ch.fromColumn && pos <= ch.toLine * 1000 + ch.toColumn);\r\n        if(chList.length == 0){\r\n            return;\r\n        }\r\n\r\n        // take CompletionHint with smallest range:\r\n        let bestCh: CompletionHint = chList[0];\r\n        let bestRangeLength  = (bestCh.toLine - bestCh.fromLine)*1000 + (bestCh.toColumn - bestCh.fromColumn);\r\n\r\n        for(let i = 1; i < chList.length; i++){\r\n            let ch = chList[i];\r\n            let rangeLength = (ch.toLine - ch.fromLine) * 1000 + (ch.toColumn - ch.fromColumn);\r\n\r\n            if(rangeLength < bestRangeLength){\r\n                bestCh = ch;\r\n                bestRangeLength = rangeLength;\r\n            }\r\n\r\n        }\r\n\r\n        return bestCh;\r\n    }\r\n\r\n\r\n    static restoreFromData(f: FileData, main: MainBase): Module {\r\n\r\n        let f1: File = {\r\n            name: f.name,\r\n            text: f.text,\r\n            text_before_revision: f.text_before_revision,\r\n            submitted_date: f.submitted_date,\r\n            student_edited_after_revision: false,\r\n            dirty: true,\r\n            saved: true,\r\n            version: f.version,\r\n            id: f.id\r\n        }\r\n\r\n        let m: Module = new Module(f1, main);\r\n\r\n        return m;\r\n\r\n    }\r\n\r\n    getFileData(workspace: Workspace): FileData {\r\n        let file = this.file;\r\n        let fd: FileData = {\r\n            id: file.id,\r\n            name: file.name,\r\n            text: file.text,\r\n            text_before_revision: file.text_before_revision,\r\n            submitted_date: file.submitted_date,\r\n            student_edited_after_revision: file.student_edited_after_revision,\r\n            version: file.version,\r\n            workspace_id: workspace.id,\r\n            forceUpdate: false,\r\n            file_type: 11\r\n        }\r\n\r\n        return fd;\r\n    }\r\n\r\n\r\n    findSymbolTableAtPosition(line: number, column: number) {\r\n        if (this.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (line > this.mainSymbolTable.positionTo.line ||\r\n            line == this.mainSymbolTable.positionTo.line && column > this.mainSymbolTable.positionTo.column\r\n        ) {\r\n            line = this.mainSymbolTable.positionTo.line;\r\n            column = this.mainSymbolTable.positionTo.column - 1;\r\n        }\r\n\r\n        return this.mainSymbolTable.findTableAtPosition(line, column);\r\n    }\r\n\r\n    getErrorCount(): number {\r\n\r\n        let ec = 0;\r\n        for (let el of this.errors) {\r\n            el.forEach(error => ec += error.level == \"error\" ? 1 : 0);\r\n            // ec += el.length;\r\n        }\r\n\r\n        return ec;\r\n    }\r\n\r\n    getProgramTextFromMonacoModel(): string {\r\n        return this.model.getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n    }\r\n\r\n\r\n    addIdentifierPosition(position: TextPosition, element: any) {\r\n        let positionList: IdentifierPosition[] = this.identifierPositions[position.line];\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            this.identifierPositions[position.line] = positionList;\r\n        }\r\n        positionList.push({\r\n            position: position,\r\n            element: element\r\n        });\r\n    }\r\n\r\n    getElementAtPosition(line: number, column: number): any {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let bestFoundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column < p.position.column + p.position.length) {\r\n\r\n                if (p.position.length > 0) {\r\n                    if (bestFoundPosition == null) {\r\n                        bestFoundPosition = p;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bestFoundPosition == null ? null : <any>bestFoundPosition.element;\r\n    }\r\n\r\n    copy(): Module {\r\n        let m = new Module(this.file, this.main);\r\n        m.model = this.model;\r\n        m.mainSymbolTable = this.mainSymbolTable;\r\n        this.mainSymbolTable = null;\r\n\r\n        this.file.dirty = true;\r\n\r\n        return m;\r\n    }\r\n\r\n    clear() {\r\n\r\n        this.identifierPositions = {};\r\n\r\n        if (this.file != null && this.file.dirty) {\r\n            // Lexer\r\n            this.tokenList = null;\r\n            this.errors[0] = [];\r\n\r\n            // AST Parser\r\n            this.errors[1] = [];\r\n\r\n\r\n        }\r\n\r\n        // type resolver\r\n        this.errors[2] = [];\r\n\r\n        // Code generator\r\n        this.errors[3] = [];\r\n        this.mainSymbolTable = new SymbolTable(null, { line: 1, column: 1, length: 1 }, { line: 100000, column: 1, length: 0 });\r\n\r\n        this.methodCallPositions = {};\r\n\r\n    }\r\n\r\n    hasErrors() {\r\n\r\n        for (let el of this.errors) {\r\n            if (el.find(error => error.level == \"error\")) {\r\n                return true;\r\n            }\r\n            // if (el.length > 0) {\r\n            //     return true;\r\n            // }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getSortedAndFilteredErrors(): Error[] {\r\n\r\n        let list: Error[] = [];\r\n\r\n        for (let el of this.errors) {\r\n            list = list.concat(el);\r\n        }\r\n\r\n        list.sort((a, b) => {\r\n            if (a.position.line > b.position.line) {\r\n                return 1;\r\n            }\r\n            if (b.position.line > a.position.line) {\r\n                return -1;\r\n            }\r\n            if (a.position.column >= b.position.column) {\r\n                return 1;\r\n            }\r\n            return -1;\r\n        });\r\n\r\n        for (let i = 0; i < list.length - 1; i++) {\r\n            let e1 = list[i];\r\n            let e2 = list[i + 1];\r\n            if (e1.position.line == e2.position.line && e1.position.column + 10 > e2.position.column) {\r\n                if (this.errorLevelCompare(e1.level, e2.level) == 1) {\r\n                    list.splice(i + 1, 1);\r\n                } else {\r\n                    list.splice(i, 1);\r\n                }\r\n                i--;\r\n            }\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    errorLevelCompare(level1: ErrorLevel, level2: ErrorLevel): number {\r\n        if (level1 == \"error\") return 1;\r\n        if (level2 == \"error\") return 2;\r\n        if (level1 == \"warning\") return 1;\r\n        if (level2 == \"warning\") return 2;\r\n        return 1;\r\n    }\r\n}\r\n\r\n\r\nexport class ModuleStore {\r\n\r\n    private modules: Module[] = [];\r\n    private moduleMap: Map<string, Module> = new Map();\r\n\r\n    dirty: boolean = false;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    findModuleById(module_id: number): Module {\r\n        for (let module of this.modules) {\r\n            if (module.file.id == module_id) return module;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    copy(): ModuleStore {\r\n        let ms: ModuleStore = new ModuleStore(this.main);\r\n        for (let m of this.modules) {\r\n            ms.putModule(m.copy());\r\n        }\r\n        return ms;\r\n    }\r\n\r\n    findModuleByFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                return m;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        for (let m of this.modules) {\r\n            if (m.hasErrors()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getFirstModule(): Module {\r\n        if (this.modules.length > 0) {\r\n            for (let mo of this.modules) {\r\n                return mo;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    isDirty(): boolean {\r\n\r\n        if (this.dirty) {\r\n            this.dirty = false;\r\n            return true;\r\n        }\r\n\r\n        let dirty = false;\r\n        for (let m of this.modules) {\r\n            if (m.file.dirty) {\r\n                dirty = true;\r\n                break;\r\n            }\r\n        }\r\n        return dirty;\r\n    }\r\n\r\n\r\n    getModules(includeSystemModules: boolean, excludedModuleName?: String): Module[] {\r\n        let ret = [];\r\n        for (let m of this.modules) {\r\n            if (m.file.name != excludedModuleName) {\r\n                ret.push(m);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    putModule(module: Module) {\r\n        this.modules.push(module);\r\n        this.moduleMap[module.file.name] = module;\r\n    }\r\n\r\n    removeModuleWithFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                this.removeModule(m);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n\r\n        if (this.modules.indexOf(module) < 0) return;\r\n\r\n        this.modules.splice(this.modules.indexOf(module), 1);\r\n        this.moduleMap[module.file.name] = undefined;\r\n        this.dirty = true;\r\n    }\r\n\r\n    getModule(moduleName: string): Module {\r\n        return this.moduleMap[moduleName];\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type ButtonToggler = (state: boolean) => void;\r\n\r\nexport type Action = (name: string, buttonToggler?: ButtonToggler, pressed_key?: string) => void;\r\n\r\nexport type ActionEntry = {\r\n    text?: string,\r\n    keys: string[],\r\n    action: Action,\r\n    identifier: string, // name of Action is copied automatically to name of ActionEntry\r\n    active: boolean\r\n}\r\n\r\nexport class ActionManager {\r\n\r\n    actions: { [actionIdentifier: string]: ActionEntry } = { };\r\n\r\n    keyEntries: { [key: string]: ActionEntry[] } = {};\r\n\r\n    buttons: { [actionIdentifier: string]: JQuery<HTMLElement>[] } = {};\r\n\r\n    constructor(private $mainElement: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public init(){\r\n\r\n        let $element:JQuery<any> = this.$mainElement;\r\n        \r\n        if($element == null) $element = jQuery(document);\r\n\r\n        let that = this;\r\n        $element.on(\"keydown\", function (event: JQuery.KeyDownEvent) { \r\n            if(event != null){\r\n                that.executeKeyDownEvent(event); \r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    trigger(actionIdentifier: string) {\r\n        let ae = this.actions[actionIdentifier];\r\n        if(ae != null){\r\n            ae.action(actionIdentifier, null, \"\");\r\n        }\r\n    }\r\n\r\n\r\n    public registerAction(identifier: string, keys: string[], action: Action, text: string = \"\", button?: JQuery<HTMLElement>){\r\n        let ae: ActionEntry = {\r\n            action: action,\r\n            identifier: identifier,\r\n            keys: keys,\r\n            text: text,\r\n            active: true\r\n        };\r\n\r\n        this.actions[identifier] = ae;\r\n\r\n        for(let key of keys){\r\n            if(this.keyEntries[key.toLowerCase()] == null){\r\n                this.keyEntries[key.toLowerCase()] = [];\r\n            }\r\n            this.keyEntries[key.toLowerCase()].push(ae);\r\n        }\r\n\r\n        if(button != null){\r\n            if(this.buttons[identifier] == null){\r\n                this.buttons[identifier] = [];\r\n            }\r\n            this.buttons[identifier].push(button);\r\n\r\n            let t = text;\r\n            if(keys.length > 0){\r\n                t += \" [\" + keys.join(\", \") + \"]\";\r\n            }\r\n\r\n            button.attr(\"title\", t);\r\n\r\n            button.on('mousedown', () => {\r\n                if(ae.active){\r\n                    action(identifier, null, \"mousedown\");\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public isActive(actionIdentifier: string): boolean {\r\n\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae == null) return false;\r\n\r\n        return ae.active;\r\n    \r\n    }\r\n\r\n    public setActive(actionIdentifier: string, active: boolean){\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae != null){\r\n            ae.active = active;\r\n        }\r\n\r\n        let buttons = this.buttons[actionIdentifier];\r\n        if(buttons != null){\r\n            for(let button of buttons){\r\n                if(active){\r\n                    button.addClass('jo_active');\r\n                } else {\r\n                    button.removeClass('jo_active');\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public executeKeyDownEvent(event: JQuery.KeyDownEvent) {\r\n\r\n        if(document.activeElement.tagName.toLowerCase() == \"input\"){\r\n            return;\r\n        }\r\n\r\n        if (event.keyCode <= 18 && event.keyCode >= 16) {\r\n            return; // ctrl, alt, shift\r\n        }\r\n\r\n        let key: string = \"\";\r\n\r\n        if (event.ctrlKey) {\r\n            key += \"ctrl+\";\r\n        }\r\n\r\n        if (event.shiftKey) {\r\n            key += \"shift+\";\r\n        }\r\n\r\n        if (event.altKey) {\r\n            key += \"alt+\";\r\n        }\r\n\r\n        if(event.key != null){\r\n            key += event.key.toLowerCase();\r\n        }\r\n\r\n        let actionEntries = this.keyEntries[key];\r\n\r\n        if(actionEntries != null){\r\n            for(let actionEntry of actionEntries){\r\n                if (actionEntry.active) {\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    actionEntry.action(actionEntry.identifier, null, key);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { escapeHtml } from \"./StringTools.js\";\r\n\r\nexport function makeEditable(elementWithText: JQuery<HTMLElement>,\r\n    elementToReplace: JQuery<HTMLElement>,\r\n    renameDoneCallback: (newContent: string) => void, selectionRange: { start: number, end: number } = null) {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    if (elementToReplace == null) {\r\n        elementToReplace = elementWithText;\r\n    }\r\n\r\n    let $input = jQuery('<input type=\"text\" class=\"jo_inplaceeditor\" spellcheck=\"false\">');\r\n    $input.css({\r\n        width: elementToReplace.css('width'),\r\n        height: elementToReplace.css('height'),\r\n        color: elementToReplace.css('color'),\r\n        position: elementToReplace.css('position'),\r\n        \"background-color\": elementToReplace.css('background-color'),\r\n        \"font-size\": elementToReplace.css('font-size'),\r\n        \"font-weight\": elementToReplace.css('font-weight'),\r\n        \"box-sizing\": \"border-box\"\r\n    });\r\n    $input.val(elementWithText.text());\r\n    $input.on(mousePointer + \"down\", (e) => { e.stopPropagation(); })\r\n\r\n    if (selectionRange != null) {\r\n        (<HTMLInputElement>$input[0]).setSelectionRange(selectionRange.start, selectionRange.end);\r\n    }\r\n\r\n    elementToReplace.after($input);\r\n    elementToReplace.hide();\r\n    setTimeout(() => {\r\n        $input.focus();\r\n    }, 300);\r\n\r\n    $input.on(\"keydown.me\", (ev) => {\r\n        if (ev.key == \"Enter\" || ev.key == \"Escape\") {\r\n            $input.off(\"keydown.me\");\r\n            $input.off(\"focusout.me\");\r\n            $input.remove();\r\n            elementToReplace.show();\r\n            let newValue = escapeHtml(<string>$input.val());\r\n            renameDoneCallback(newValue);\r\n            return;\r\n        }\r\n    });\r\n\r\n    $input.on(\"focusout.me\", (ev) => {\r\n        $input.off(\"keydown.me\");\r\n        $input.off(\"focusout.me\");\r\n        $input.remove();\r\n        elementToReplace.show();\r\n        let newValue = escapeHtml(<string>$input.val());\r\n        renameDoneCallback(newValue);\r\n        return;\r\n    });\r\n\r\n}\r\n\r\nexport type ContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: () => void;\r\n    link?: string;\r\n    subMenu?: ContextMenuItem[]\r\n};\r\n\r\nexport function openContextMenu(items: ContextMenuItem[], x: number, y: number): JQuery<HTMLElement> {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    let $contextMenu = jQuery('<div class=\"jo_contextmenu\"></div>');\r\n\r\n    let $openSubMenu: JQuery<HTMLElement> = null;\r\n    let parentMenuItem: ContextMenuItem = null;\r\n\r\n    for (let mi of items) {\r\n        let caption: string = mi.caption;\r\n        if (mi.link != null) {\r\n            caption = `<a href=\"${mi.link}\" target=\"_blank\" class=\"jo_menulink\">${mi.caption}</a>`;\r\n        }\r\n        let $item = jQuery('<div>' + caption + (mi.subMenu != null ? '<span style=\"float: right\"> &nbsp; &nbsp; &gt;</span>' : \"\") + '</div>');\r\n        if (mi.color != null) {\r\n            $item.css('color', mi.color);\r\n        }\r\n        if (mi.link == null) {\r\n            $item.on(mousePointer + 'up.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n                jQuery('.jo_contextmenu').remove();\r\n                jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n                jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n                jQuery(document).off(\"keydown.contextmenu\");\r\n                mi.callback();\r\n            });\r\n            $item.on(mousePointer + 'down.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n            });\r\n        } else {\r\n            let $link = $item.find('a');\r\n            $link.on(mousePointer + \"up\", (event) => {\r\n                event.stopPropagation();\r\n                setTimeout(() => {\r\n                    $item.hide();\r\n                }, 500);\r\n            })\r\n            $link.on(mousePointer + \"down\", (event) => {\r\n                event.stopPropagation();\r\n            })\r\n\r\n        }\r\n\r\n        $item.on(mousePointer + 'move.contextmenu', () => {\r\n            if (mi != parentMenuItem && $openSubMenu != null) {\r\n                $openSubMenu.remove();\r\n                parentMenuItem = null;\r\n                $openSubMenu = null;\r\n            }\r\n            if (mi.subMenu != null) {\r\n                $openSubMenu = openContextMenu(mi.subMenu, $item.offset().left + $item.width(), $item.offset().top);\r\n            }\r\n        });\r\n\r\n        $contextMenu.append($item);\r\n    }\r\n\r\n    jQuery(document).on(mousePointer + \"down.contextmenu\", (e) => {\r\n        jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n        jQuery(document).off(\"keydown.contextmenu\");\r\n        jQuery('.jo_contextmenu').remove();\r\n    })\r\n\r\n    jQuery(document).on(\"keydown.contextmenu\", (ev) => {\r\n        if (ev.key == \"Escape\") {\r\n            jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n            jQuery(document).off(\"keydown.contextmenu\");\r\n            jQuery('.jo_contextmenu').remove();\r\n        }\r\n    });\r\n\r\n    let leftRight = x > window.innerWidth * 0.8 ? \"right\" : \"left\";\r\n    let xp = x > window.innerWidth * 0.8 ? window.innerWidth - x : x;\r\n    let topBottom = y > window.innerHeight * 0.8 ? \"bottom\" : \"top\";\r\n    let yp = y > window.innerHeight * 0.8 ? window.innerHeight - y : y;\r\n\r\n    let css = {};\r\n    css[leftRight] = xp + \"px\";\r\n    css[topBottom] = yp + \"px\";\r\n\r\n    $contextMenu.css(css);\r\n\r\n\r\n    jQuery(\"body\").append($contextMenu);\r\n    $contextMenu.show();\r\n\r\n    return $contextMenu;\r\n}\r\n\r\nexport function makeTabs(tabDiv: JQuery<HTMLElement>) {\r\n    let headings = tabDiv.find('.jo_tabheadings>div').not('.jo_noHeading');\r\n    let tabs = tabDiv.find('.jo_tabs>div');\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    headings.on(mousePointer + \"down\", (ev) => {\r\n        let target = jQuery(ev.target);\r\n        headings.removeClass('jo_active');\r\n        target.addClass('jo_active');\r\n        let tab = tabDiv.find('.' + target.data('target'));\r\n        tabs.removeClass('jo_active');\r\n        tabs.trigger('myhide');\r\n        tab.addClass('jo_active');\r\n        tab.trigger('myshow');\r\n    });\r\n\r\n}\r\n\r\nexport function convertPxToNumber(pxString: string): number {\r\n    pxString = pxString.replace('px', '').trim();\r\n    return Number.parseInt(pxString);\r\n}\r\n\r\nexport function makeDiv(id: string, klass: string = \"\", text: string = \"\", css?: { [id: string]: any }): JQuery<HTMLDivElement> {\r\n\r\n    let s = \"\";\r\n    if (id != null && id != \"\") s += ` id=\"${id}\"`;\r\n\r\n    if (klass != null && klass != \"\") s += ` class=\"${klass}\"`;\r\n\r\n    let div = jQuery(`<div${s}></div>`);\r\n\r\n    if (css != null) {\r\n        div.css(css);\r\n    }\r\n\r\n    if (text != null && text != \"\") {\r\n        div.text(text);\r\n    }\r\n\r\n    return <any>div;\r\n\r\n}\r\n\r\nexport type SelectItem = {\r\n    value: string | number,\r\n    object: any,\r\n    caption: string\r\n}\r\n\r\nexport function setSelectItems($selectElement: JQuery<HTMLSelectElement>, items: SelectItem[], activeItemValue?: string | number) {\r\n    $selectElement.empty();\r\n    items.forEach(item => {\r\n        let selected: string = (item.value == activeItemValue) ? ' selected=\"selected\"' : \"\";\r\n        let element = jQuery(`<option value=${item.value}${selected}>${item.caption}</option>`);\r\n        $selectElement.append(element);\r\n        element.data('object', item.object);\r\n    }\r\n    );\r\n\r\n    $selectElement.data('items', items);\r\n\r\n\r\n}\r\n\r\nexport function getSelectedObject($selectDiv: JQuery<HTMLSelectElement>) {\r\n\r\n    let items: SelectItem[] = $selectDiv.data('items');\r\n\r\n    let selectedValue = $selectDiv.val();\r\n\r\n    return items.find(item => item.value == selectedValue)?.object;\r\n\r\n}\r\n\r\nexport var jo_mouseDetected: boolean = false;\r\nexport function checkIfMousePresent() {\r\n    if (matchMedia('(pointer:fine)').matches) {\r\n        jo_mouseDetected = true;\r\n    }\r\n}\r\n\r\nexport function animateToTransparent($element: JQuery<HTMLElement>, cssProperty: string, startColorRgb: number[], duration: number) {\r\n    let colorPraefix = 'rgba(' + startColorRgb[0] + \", \" + startColorRgb[1] + \", \" + startColorRgb[2] + \", \";\r\n    let value = 1.0;\r\n    let delta = value / (duration / 20);\r\n\r\n    let animate = () => {\r\n        $element.css(cssProperty, colorPraefix + value + \")\");\r\n        value -= delta;\r\n        if (value < 0) {\r\n            $element.css(cssProperty, \"\");\r\n        } else {\r\n            setTimeout(animate, 20);\r\n        }\r\n    }\r\n\r\n    animate();\r\n}\r\n\r\nexport function downloadFile(obj: any, filename: string, isBlob: boolean = false) {\r\n    var blob = isBlob? obj : new Blob([JSON.stringify(obj)], { type: 'text/plain' });\r\n    //@ts-ignore\r\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n        //@ts-ignore\r\n        window.navigator.msSaveOrOpenBlob(blob, filename);\r\n    } else {\r\n        var e = document.createEvent('MouseEvents'),\r\n            a = document.createElement('a');\r\n        a.download = filename;\r\n        a.href = window.URL.createObjectURL(blob);\r\n        a.dataset.downloadurl = ['text/plain', a.download, a.href].join(':');\r\n        //@ts-ignore\r\n        e.initEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\r\n        a.dispatchEvent(e);\r\n        a.remove();\r\n    }\r\n}\r\n\r\n\r\nfunction fallbackCopyTextToClipboard(text) {\r\n    var textArea = document.createElement(\"textarea\");\r\n    textArea.value = text;\r\n\r\n    // Avoid scrolling to bottom\r\n    textArea.style.top = \"0\";\r\n    textArea.style.left = \"0\";\r\n    textArea.style.position = \"fixed\";\r\n\r\n    document.body.appendChild(textArea);\r\n    textArea.focus();\r\n    textArea.select();\r\n\r\n    try {\r\n        var successful = document.execCommand('copy');\r\n    } catch (err) {\r\n        console.error('Fallback: Oops, unable to copy', err);\r\n    }\r\n\r\n    document.body.removeChild(textArea);\r\n}\r\n\r\nexport function copyTextToClipboard(text) {\r\n    if (!navigator.clipboard) {\r\n        fallbackCopyTextToClipboard(text);\r\n        return;\r\n    }\r\n    navigator.clipboard.writeText(text).then(function () {\r\n    }, function (err) {\r\n        console.error('Async: Could not copy text: ', err);\r\n    });\r\n}\r\n","import { LoginRequest, PerformanceData } from \"./Data.js\";\r\n\r\n// export var credentials: { username: string, password: string } = { username: null, password: null };\r\n\r\nexport class PerformanceCollector {\r\n    static performanceData: PerformanceData[] = [];\r\n    static performanceDataCount: number = 0;\r\n    static lastTimeSent: number = performance.now();\r\n\r\n    static registerPerformanceEntry(url: string, startTime: number) {\r\n        let pe: PerformanceData = PerformanceCollector.performanceData.find(pe => pe.url == url);\r\n        if (pe == null) {\r\n            pe = { count: 0, sumTime: 0, url: url };\r\n            PerformanceCollector.performanceData.push(pe);\r\n        }\r\n        pe.count++;\r\n        let dt = Math.round(performance.now() - startTime);\r\n        pe.sumTime += dt;\r\n        PerformanceCollector.performanceDataCount++;\r\n        // console.log(\"Performance entry for path \" + pe.url + \": \" + dt + \" ms, aggregated: \" + pe.sumTime + \" for \" + pe.count + \" requests.\");\r\n    }\r\n\r\n    static sendDataToServer() {\r\n        if (performance.now() - PerformanceCollector.lastTimeSent > 3 * 60 * 1000) {\r\n            let request = {\r\n                data: PerformanceCollector.performanceData\r\n            }\r\n\r\n            PerformanceCollector.performanceData = [];\r\n            PerformanceCollector.performanceDataCount = 0;\r\n            PerformanceCollector.lastTimeSent = performance.now();\r\n\r\n            ajax(\"collectPerformanceData\", request, () => { })\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport function ajax(url: string, request: any, successCallback: (response: any) => void,\r\n\r\n    errorCallback?: (message: string) => void) {\r\n\r\n    showNetworkBusy(true);\r\n    let time = performance.now();\r\n\r\n    $.ajax({\r\n        type: 'POST',\r\n        async: true,\r\n        data: JSON.stringify(request),\r\n        contentType: 'application/json',\r\n        url: \"servlet/\" + url,\r\n        success: function (response: any) {\r\n\r\n            PerformanceCollector.registerPerformanceEntry(url, time);\r\n\r\n            showNetworkBusy(false);\r\n            if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n                let error = \"Fehler bei der Bearbeitung der Anfrage\"\r\n                if (response.message != null) error = response.message;\r\n\r\n                if (error == \"Not logged in\") {\r\n                    // setTimeout(() => newLogin(url, request, successCallback, errorCallback), 10000);\r\n                    // location.reload();\r\n                }\r\n\r\n                if (errorCallback) errorCallback(error);\r\n            } else {\r\n                successCallback(response);\r\n            }\r\n            return;\r\n\r\n        },\r\n        error: function (jqXHR, message) {\r\n            showNetworkBusy(false);\r\n            if (errorCallback) {\r\n                let statusText = \"Server nicht erreichbar.\"\r\n                if (jqXHR.status != 0) {\r\n                    statusText = \"\" + jqXHR.status\r\n                }\r\n                errorCallback(message + \": \" + statusText);\r\n                return;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function showNetworkBusy(busy: boolean) {\r\n    if (busy) {\r\n        jQuery('.jo_network-busy').css('visibility','visible');\r\n    } else {\r\n        jQuery('.jo_network-busy').css('visibility','hidden');\r\n    }\r\n}\r\n\r\n\r\n","import { DatabaseData } from \"../communication/Data.js\";\r\n\r\nexport class WDatabase {\r\n\r\n    id: number;\r\n    name: string;\r\n\r\n    templateDump: Uint8Array;\r\n    based_on_template_id: number;\r\n    templateName: string;\r\n\r\n    statements: string[];\r\n    published_to: number;\r\n    version: number;\r\n    description: string;\r\n    owner_id: number;\r\n\r\n    static fromDatabaseData(data: DatabaseData, version: number): WDatabase {\r\n\r\n        let db = new WDatabase();\r\n\r\n        db.id = data.id;\r\n        db.name = data.name;\r\n        db.statements = data.statements;\r\n        db.published_to = data.published_to;\r\n        db.version = version;\r\n        db.description = data.description;\r\n        db.templateDump = null;\r\n        db.based_on_template_id = data.based_on_template_id;\r\n        db.owner_id = data.owner_id;\r\n        return db;\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n","export class CacheManager {\r\n    \r\n    fetchTemplateFromCache(databaseId: number, callback: (templateDump: Uint8Array) => void) {\r\n        if(databaseId == null){callback(null); return;}\r\n        let that = this;\r\n        if(!this.cacheAvailable()) callback(null);\r\n        this.getCache((cache) => {\r\n            cache.match(that.databaseIdToCacheIdentifier(databaseId)).then(\r\n                (value)=>{\r\n                    value.arrayBuffer().then((buffer) => callback(new Uint8Array(buffer)));\r\n                })\r\n                .catch(() => callback(null));\r\n        })        \r\n    }\r\n\r\n    saveTemplateToCache(databaseId: number, templateDump: Uint8Array) {\r\n        if(!this.cacheAvailable()) return;\r\n        let that = this;\r\n        this.getCache((cache) => {\r\n            cache.put(that.databaseIdToCacheIdentifier(databaseId), new Response(templateDump));\r\n        })        \r\n    }\r\n\r\n    cacheAvailable(): boolean {\r\n        return 'caches' in self;\r\n    }\r\n\r\n    getCache(callback: (cache: Cache) => void) {\r\n        caches.open('my-cache').then(callback);\r\n    }\r\n\r\n    databaseIdToCacheIdentifier(databaseId: number): string {\r\n        return \"/onlineIdeTemplateDb\" + databaseId;\r\n    }\r\n\r\n}","import { Main } from \"../main/Main.js\";\r\nimport { ajax } from \"./AjaxHelper.js\";\r\nimport { GetWebSocketTokenResponse } from \"./Data.js\";\r\nimport { NetworkManager } from \"./NetworkManager.js\";\r\n\r\ntype SubscriptionMessageFromClient = {\r\n    command: number,  // 1 == \"subscribe\", 2 == \"disconnect\"\r\n    // 3 == \"keepalive request\"\r\n    token?: string   // when \"subscribe\"\r\n}\r\n\r\ntype SubscriptionMessageFromServer = {\r\n    command: number // 1 == Acknoledge Connection, 2 == Notify, 3 == disconnect, 4 == keep alive response\r\n}\r\n\r\ntype NotifierState = \"connecting\" | \"connected\" | \"subscribed\" | \"disconnected\";\r\n\r\nexport class NotifierClient {\r\n\r\n    connection: WebSocket;\r\n    state: NotifierState;\r\n\r\n    constructor(private main: Main, private networkManager: NetworkManager){\r\n        this.connect();\r\n    }\r\n\r\n    connect() {\r\n        this.state = \"connecting\";\r\n\r\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\r\n\r\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/subscriptionwebsocket\";\r\n            this.connection = new WebSocket(url);\r\n\r\n            this.connection.onerror = (error: Event) => { this.onError(error); }\r\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\r\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\r\n\r\n            this.connection.onopen = (event: Event) => {\r\n                let request: SubscriptionMessageFromClient = {\r\n                    command: 1,   // \"subscribe\"\r\n                    token: response.token\r\n                }\r\n\r\n                this.state = \"connected\";\r\n                this.sendIntern(JSON.stringify(request));\r\n\r\n            }\r\n\r\n            let that = this;\r\n            setTimeout(() => {\r\n                if(this.state != \"subscribed\"){\r\n                    this.networkManager.forcedUpdateEvery = 1;\r\n                    this.networkManager.counterTillForcedUpdate = 1;\r\n                }\r\n            }, 7000);\r\n\r\n        });\r\n    }\r\n\r\n    disconnect(){\r\n        let request: SubscriptionMessageFromClient = {\r\n            command: 2   // \"disconnect\"\r\n        }\r\n\r\n        this.state = \"connected\";\r\n        this.sendIntern(JSON.stringify(request));\r\n\r\n    }\r\n\r\n    unsentMessages: string[] = [];\r\n    sendIntern(message: string) {\r\n\r\n        if (this.state != \"disconnected\") {\r\n            try {\r\n                this.connection.send(message);\r\n            } catch (exception) {\r\n                console.log(exception);\r\n            }\r\n        }\r\n    }\r\n\r\n    onClose(event: CloseEvent) {\r\n        this.state = \"disconnected\";\r\n    }\r\n\r\n    onMessage(event: MessageEvent) {\r\n\r\n        let response: SubscriptionMessageFromClient = JSON.parse(event.data);\r\n        if (response.command == undefined) return;\r\n\r\n        // 1 == Acknoledge Connection, 2 == Notify, 3 == disconnect, 4 == keep alive response\r\n        switch (response.command) {\r\n            case 1: // Acknoledge Connection\r\n                this.state = \"subscribed\";\r\n                break;\r\n            case 2: // Notify\r\n                this.networkManager.sendUpdates(() => {}, true);\r\n                break;\r\n            case 3: // disconnect\r\n                this.state = \"disconnected\";\r\n                break;\r\n            case 4: // keep alive response\r\n                break;\r\n        }\r\n    }\r\n\r\n    onError(error: Event) {\r\n        console.log(\"Fehler beim Notifier-Websocket\");\r\n    }\r\n\r\n}","import { Main } from \"../main/Main.js\";\r\nimport { ajax } from \"./AjaxHelper.js\";\r\nimport { WorkspaceData, FileData, SendUpdatesRequest, SendUpdatesResponse, CreateOrDeleteFileOrWorkspaceRequest, CRUDResponse, UpdateUserSettingsRequest, UpdateUserSettingsResponse, DuplicateWorkspaceRequest, DuplicateWorkspaceResponse, ClassData, DistributeWorkspaceRequest, DistributeWorkspaceResponse, GetDatabaseRequest, getDatabaseResponse, GetNewStatementsRequest, GetNewStatementsResponse, AddDatabaseStatementsRequest, AddDatabaseStatementsResponse, TemplateListEntry, GetTemplateListRequest, GetTemplateListResponse, CreateWorkspaceData, GetDatabaseSettingsResponse, GetDatabaseSettingsRequest, setDatabaseSecretRequest as SetDatabaseSecretRequest, SetDatabaseSecretResponse, SetPublishedToRequest, SetPublishedToResponse, GetTemplateRequest, RollbackRequest, RollbackResponse } from \"./Data.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { WDatabase } from \"../workspace/WDatabase.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { CacheManager } from \"./CacheManager.js\";\r\nimport { NotifierClient } from \"./NotifierClient.js\";\r\n\r\nexport class NetworkManager {\r\n\r\n    timerhandle: any;\r\n\r\n    ownUpdateFrequencyInSeconds: number = 20;\r\n    teacherUpdateFrequencyInSeconds: number = 5;\r\n\r\n    updateFrequencyInSeconds: number = 20;\r\n    forcedUpdateEvery: number = 4;\r\n    counterTillForcedUpdate: number = 2;\r\n    secondsTillNextUpdate: number = this.updateFrequencyInSeconds;\r\n    errorHappened: boolean = false;\r\n\r\n    interval: any;\r\n\r\n    notifierClient: NotifierClient;\r\n\r\n    constructor(private main: Main, private $updateTimerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initializeTimer() {\r\n\r\n        let that = this;\r\n        this.$updateTimerDiv.find('svg').attr('width', that.updateFrequencyInSeconds);\r\n\r\n        if (this.interval != null) clearInterval(this.interval);\r\n\r\n        this.interval = setInterval(() => {\r\n\r\n            if (that.main.user == null) return; // don't call server if no user is logged in\r\n\r\n            that.secondsTillNextUpdate--;\r\n\r\n            if (that.secondsTillNextUpdate < 0) {\r\n                that.secondsTillNextUpdate = that.updateFrequencyInSeconds;\r\n                this.counterTillForcedUpdate--;\r\n                let forceUpdate = this.counterTillForcedUpdate == 0;\r\n                if (forceUpdate) this.counterTillForcedUpdate = this.forcedUpdateEvery;\r\n                that.sendUpdates(() => { }, forceUpdate);\r\n            }\r\n\r\n            let $rect = this.$updateTimerDiv.find('.jo_updateTimerRect');\r\n\r\n            $rect.attr('width', that.secondsTillNextUpdate + \"px\");\r\n\r\n            if (that.errorHappened) {\r\n                $rect.css('fill', '#c00000');\r\n                this.$updateTimerDiv.attr('title', \"Fehler beim letzten Speichervorgang -> Werd's wieder versuchen\");\r\n            } else {\r\n                $rect.css('fill', '#008000');\r\n                this.$updateTimerDiv.attr('title', that.secondsTillNextUpdate + \" Sekunden bis zum nächsten Speichern\");\r\n            }\r\n\r\n        }, 1000);\r\n\r\n    }\r\n\r\n    initializeNotifierClient(){\r\n        this.notifierClient = new NotifierClient(this.main, this);\r\n    }\r\n\r\n    sendUpdates(callback?: () => void, sendIfNothingIsDirty: boolean = false) {\r\n\r\n        if (this.main.user == null) return;\r\n\r\n        this.main.projectExplorer.writeEditorTextToFile();\r\n\r\n        let userSettings = this.main.user.settings;\r\n\r\n        let wdList: WorkspaceData[] = [];\r\n        let fdList: FileData[] = [];\r\n\r\n        for (let ws of this.main.workspaceList) {\r\n\r\n            if (!ws.saved) {\r\n                wdList.push(ws.getWorkspaceData(false));\r\n                ws.saved = true;\r\n            }\r\n\r\n            for (let m of ws.moduleStore.getModules(false)) {\r\n                if (!m.file.saved) {\r\n                    m.file.text = m.getProgramTextFromMonacoModel();\r\n                    fdList.push(m.getFileData(ws));\r\n                    // console.log(\"Save file \" + m.file.name);\r\n                    m.file.saved = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        let request: SendUpdatesRequest = {\r\n            workspacesWithoutFiles: wdList,\r\n            files: fdList,\r\n            owner_id: this.main.workspacesOwnerId,\r\n            userId: this.main.user.id,\r\n            language: 1,\r\n            currentWorkspaceId: this.main.getCurrentWorkspace()?.id,\r\n            getModifiedWorkspaces: false\r\n        }\r\n\r\n        let that = this;\r\n        if (wdList.length > 0 || fdList.length > 0 || sendIfNothingIsDirty) {\r\n            ajax('sendUpdates', request, (response: SendUpdatesResponse) => {\r\n                that.errorHappened = !response.success;\r\n                if (!that.errorHappened) {\r\n\r\n                    that.updateWorkspaces(request, response);\r\n\r\n                    if (callback != null) {\r\n                        callback();\r\n                        return;\r\n                    }\r\n                }\r\n            }, () => {\r\n                that.errorHappened = true;\r\n            });\r\n        } else {\r\n            if (callback != null) {\r\n                callback();\r\n                return;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    sendCreateWorkspace(wd: CreateWorkspaceData, owner_id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            wd.id = Math.round(Math.random() * 10000000);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"workspace\",\r\n            data: wd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            wd.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n\r\n    getDatabaseSettings(workspace_id: number, callback: (response: GetDatabaseSettingsResponse) => void) {\r\n        let request: GetDatabaseSettingsRequest = {\r\n            workspaceId: workspace_id\r\n        };\r\n        ajax(\"getDatabaseSettings\", request, (response: GetDatabaseSettingsResponse) => {\r\n            callback(response);\r\n        }, (message) => { alert(message) })\r\n    }\r\n\r\n    setNewSecret(workspace_id: number, kind: string, callback: (secret: string) => void) {\r\n        let request: SetDatabaseSecretRequest = {\r\n            workspaceId: workspace_id,\r\n            secretKind: kind\r\n        };\r\n        ajax(\"setNewSecret\", request, (response: SetDatabaseSecretResponse) => {\r\n            callback(response.secret);\r\n        }, (message) => { alert(message) })\r\n    }\r\n\r\n    setNameAndPublishedTo(workspace_id: number, name: string, published_to: number, description: string, callback: () => void) {\r\n        let request: SetPublishedToRequest = {\r\n            workspaceId: workspace_id,\r\n            databaseName: name,\r\n            publishedTo: published_to,\r\n            description: description\r\n        };\r\n\r\n        ajax(\"setPublishedTo\", request, (response: SetPublishedToResponse) => {\r\n            callback();\r\n        }, (message) => { alert(message) })\r\n    }\r\n\r\n\r\n\r\n    sendCreateFile(m: Module, ws: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        let fd: FileData = m.getFileData(ws);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"file\",\r\n            data: fd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            m.file.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDuplicateWorkspace(ws: Workspace, callback: (error: string, workspaceData?: WorkspaceData) => void) {\r\n\r\n        let request: DuplicateWorkspaceRequest = {\r\n            workspace_id: ws.id,\r\n            language: 1\r\n        }\r\n\r\n        ajax(\"duplicateWorkspace\", request, (response: DuplicateWorkspaceResponse) => {\r\n            callback(response.message, response.workspace)\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDistributeWorkspace(ws: Workspace, klasse: ClassData, student_ids: number[], callback: (error: string) => void) {\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request: DistributeWorkspaceRequest = {\r\n                workspace_id: ws.id,\r\n                class_id: klasse?.id,\r\n                student_ids: student_ids,\r\n                language: 1\r\n            }\r\n\r\n            ajax(\"distributeWorkspace\", request, (response: DistributeWorkspaceResponse) => {\r\n                callback(response.message)\r\n            }, callback);\r\n\r\n        }, false);\r\n\r\n    }\r\n\r\n\r\n    sendDeleteWorkspaceOrFile(type: \"workspace\" | \"file\", id: number, callback: (error: string) => void) {\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"delete\",\r\n            entity: type,\r\n            id: id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            if (response.success) {\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendUpdateUserSettings(callback: (error: string) => void) {\r\n\r\n        let request: UpdateUserSettingsRequest = {\r\n            settings: this.main.user.settings,\r\n            userId: this.main.user.id,\r\n            current_workspace_id: this.main.getCurrentWorkspace()?.id\r\n        }\r\n\r\n        ajax(\"updateUserSettings\", request, (response: UpdateUserSettingsResponse) => {\r\n            if (response.success) {\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n\r\n    getNewStatements(workspace: Workspace, callback: (statements: string[], firstNewStatementIndex: number) => void) {\r\n        let request: GetNewStatementsRequest = {\r\n            workspaceId: workspace.id,\r\n            version_before: workspace.database.version\r\n        }\r\n\r\n        ajax(\"getNewStatements\", request, (response: GetNewStatementsResponse) => {\r\n            if (response.success) {\r\n                callback(response.newStatements, response.firstNewStatementIndex);\r\n            }\r\n        });\r\n    }\r\n\r\n    AddDatabaseStatements(workspace: Workspace, statements: string[], callback: (statements_before: string[], new_version: number) => void) {\r\n        let request: AddDatabaseStatementsRequest = {\r\n            workspaceId: workspace.id,\r\n            version_before: workspace.database.version,\r\n            statements: statements\r\n        }\r\n\r\n        ajax(\"addDatabaseStatements\", request, (response: AddDatabaseStatementsResponse) => {\r\n            if (response.success) {\r\n                callback(response.statements_before, response.new_version);\r\n            }\r\n        });\r\n    }\r\n\r\n    fetchDatabase(workspace: Workspace, callback: (error: string) => void) {\r\n\r\n        let cacheManager: CacheManager = new CacheManager();\r\n\r\n        let request: GetDatabaseRequest = {\r\n            workspaceId: workspace.id\r\n        }\r\n\r\n        ajax(\"getDatabase\", request, (response: getDatabaseResponse) => {\r\n            if (response.success) {\r\n\r\n                workspace.database = WDatabase.fromDatabaseData(response.database, response.version)\r\n                cacheManager.fetchTemplateFromCache(workspace.database.based_on_template_id, (templateDump: Uint8Array) => {\r\n\r\n                    if (templateDump != null) {\r\n                        // @ts-ignore\r\n                        workspace.database.templateDump = pako.inflate(templateDump);\r\n                        callback(null);\r\n                        return;\r\n                    } else {\r\n                        if (workspace.database.based_on_template_id == null) {\r\n                            callback(null);\r\n                            return\r\n                        }\r\n                        this.fetchTemplate(workspace.id, (template) => {\r\n                            if (template != null) {\r\n                                cacheManager.saveTemplateToCache(workspace.database.based_on_template_id, template);\r\n                                // @ts-ignore\r\n                                workspace.database.templateDump = pako.inflate(template);\r\n                                callback(null);\r\n                                return;\r\n                            } else {\r\n                                callback(\"Konnte das Template nicht laden.\");\r\n                                return;\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    fetchTemplate(workspaceId: number, callback: (template: Uint8Array) => void) {\r\n        let request: GetTemplateRequest = {\r\n            workspaceId: workspaceId\r\n        }\r\n\r\n        $.ajax({\r\n            type: 'POST',\r\n            async: true,\r\n            data: JSON.stringify(request),\r\n            contentType: 'application/json',\r\n            url: \"servlet/getTemplate\",\r\n            xhrFields: { responseType: 'arraybuffer' },\r\n            success: function (response: any) {\r\n                callback(new Uint8Array(response));\r\n            },\r\n            error: function (jqXHR, message) {\r\n                alert(\"Konnte das Template nicht laden.\");\r\n                callback(null);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    fetchTemplateList(callback: (templateList: TemplateListEntry[]) => void) {\r\n        let request: GetTemplateListRequest = { user_id: this.main.user.id }\r\n\r\n        ajax(\"getTemplateList\", request, (response: GetTemplateListResponse) => {\r\n            if (response.success) {\r\n                callback(response.templateList);\r\n            } else {\r\n                callback([]);\r\n            }\r\n        }, (message) => {\r\n            alert(message);\r\n            callback([]);\r\n        })\r\n\r\n    }\r\n\r\n    updateWorkspaces(sendUpdatesRequest: SendUpdatesRequest, sendUpdatesResponse: SendUpdatesResponse) {\r\n\r\n        let idToRemoteWorkspaceDataMap: Map<number, WorkspaceData> = new Map();\r\n\r\n        let fileIdsSended = [];\r\n        sendUpdatesRequest.files.forEach(file => fileIdsSended.push(file.id));\r\n\r\n        sendUpdatesResponse.workspaces.workspaces.forEach(wd => idToRemoteWorkspaceDataMap.set(wd.id, wd));\r\n\r\n        let newWorkspaceNames: string[] = [];\r\n\r\n        for (let remoteWorkspace of sendUpdatesResponse.workspaces.workspaces) {\r\n\r\n            let localWorkspaces = this.main.workspaceList.filter(ws => ws.id == remoteWorkspace.id);\r\n\r\n            // Did student get a workspace from his/her teacher?\r\n            if (localWorkspaces.length == 0) {\r\n                newWorkspaceNames.push(remoteWorkspace.name);\r\n                this.createNewWorkspaceFromWorkspaceData(remoteWorkspace);\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        for (let workspace of this.main.workspaceList) {\r\n            let remoteWorkspace: WorkspaceData = idToRemoteWorkspaceDataMap.get(workspace.id);\r\n            if (remoteWorkspace != null) {\r\n                let idToRemoteFileDataMap: Map<number, FileData> = new Map();\r\n                remoteWorkspace.files.forEach(fd => idToRemoteFileDataMap.set(fd.id, fd));\r\n\r\n                let idToModuleMap: Map<number, Module> = new Map();\r\n                // update/delete files if necessary\r\n                for (let module of workspace.moduleStore.getModules(false)) {\r\n                    let fileId = module.file.id;\r\n                    idToModuleMap.set(fileId, module);\r\n                    let remoteFileData = idToRemoteFileDataMap.get(fileId);\r\n                    if (remoteFileData == null) {\r\n                        this.main.projectExplorer.fileListPanel.removeElement(module);\r\n                        this.main.currentWorkspace.moduleStore.removeModule(module);\r\n                    } else if (remoteFileData.version > module.file.version) {\r\n                        if (fileIdsSended.indexOf(fileId) < 0 || remoteFileData.forceUpdate) {\r\n                            module.file.text = remoteFileData.text;\r\n                            module.model.setValue(remoteFileData.text);\r\n\r\n                            module.file.saved = true;\r\n                            module.lastSavedVersionId = module.model.getAlternativeVersionId()\r\n                        }\r\n                        module.file.version = remoteFileData.version;\r\n                    }\r\n                }\r\n\r\n                // add files if necessary\r\n                for (let remoteFile of remoteWorkspace.files) {\r\n                    if (idToModuleMap.get(remoteFile.id) == null) {\r\n                        this.createFile(workspace, remoteFile);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (newWorkspaceNames.length > 0) {\r\n            let message: string = newWorkspaceNames.length > 1 ? \"Folgende Workspaces hat Deine Lehrkraft Dir gesendet: \" : \"Folgenden Workspace hat Deine Lehrkraft Dir gesendet: \";\r\n            message += newWorkspaceNames.join(\", \");\r\n            alert(message);\r\n        }\r\n\r\n        this.main.projectExplorer.workspaceListPanel.sortElements();\r\n        this.main.projectExplorer.fileListPanel.sortElements();\r\n\r\n    }\r\n\r\n    public createNewWorkspaceFromWorkspaceData(remoteWorkspace: WorkspaceData, withSort: boolean = false) {\r\n        let w = this.main.createNewWorkspace(remoteWorkspace.name, remoteWorkspace.owner_id);\r\n        w.id = remoteWorkspace.id;\r\n        w.sql_history = \"\";\r\n        w.path = remoteWorkspace.path;\r\n        w.isFolder = remoteWorkspace.isFolder;\r\n\r\n        this.main.workspaceList.push(w);\r\n        let path = remoteWorkspace.path.split(\"/\");\r\n        if (path.length == 1 && path[0] == \"\") path = [];\r\n\r\n        let panelElement: AccordionElement = {\r\n            name: remoteWorkspace.name,\r\n            externalElement: w,\r\n            iconClass: \"workspace\",\r\n            isFolder: remoteWorkspace.isFolder,\r\n            path: path\r\n        };\r\n\r\n        this.main.projectExplorer.workspaceListPanel.addElement(panelElement, true);\r\n        w.panelElement = panelElement;\r\n\r\n        for (let fileData of remoteWorkspace.files) {\r\n            this.createFile(w, fileData);\r\n        }\r\n\r\n        if (withSort) {\r\n            this.main.projectExplorer.workspaceListPanel.sortElements();\r\n            this.main.projectExplorer.fileListPanel.sortElements();\r\n        }\r\n    }\r\n\r\n    createFile(workspace: Workspace, remoteFile: FileData) {\r\n        let ae: any = null; //AccordionElement\r\n        if (workspace == this.main.currentWorkspace) {\r\n            ae = {\r\n                name: remoteFile.name,\r\n                externalElement: null\r\n            }\r\n\r\n            this.main.projectExplorer.fileListPanel.addElement(ae, true);\r\n        }\r\n\r\n        let f: any = { // File\r\n            id: remoteFile.id,\r\n            name: remoteFile.name,\r\n            dirty: false,\r\n            saved: true,\r\n            text: remoteFile.text,\r\n            version: remoteFile.version,\r\n            identical_to_repository_version: true,\r\n            workspace_id: workspace.id,\r\n            panelElement: ae\r\n        };\r\n        let m = this.main.projectExplorer.getNewModule(f); //new Module(f, this.main);\r\n        if (ae != null) ae.externalElement = m;\r\n        let modulStore = workspace.moduleStore;\r\n        modulStore.putModule(m);\r\n\r\n    }\r\n\r\n    rollback(callback: (error: string, rollbackLocalNeeded: boolean) => void) {\r\n        let workspace = this.main.currentWorkspace;\r\n        let request: RollbackRequest = { workspaceId: workspace.id, version: workspace.database.version }\r\n\r\n        ajax(\"rollback\", request, (response: RollbackResponse) => {\r\n            if (response.success) {\r\n                \r\n                callback(null, workspace.database.version > response.new_version);\r\n            } else {\r\n                alert(response.message);\r\n                callback(response.message, false);\r\n            }\r\n        }, (message) => {\r\n            alert(message);\r\n            callback(message, false);\r\n        })\r\n\r\n    }\r\n\r\n\r\n}","import { UploadTemplateResponse } from \"../communication/Data.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\n\r\nexport class TemplateUploader {\r\n\r\n    uploadCurrentDatabase(workspace_id: number, main: Main, dump: Uint8Array | null, \r\n        reason: \"publishDatabaseAsTemplate\" | \"uploadBaseTemplateForWorkspace\",\r\n        callback: (response: UploadTemplateResponse) => void = () => { }) {\r\n            \r\n        main.waitOverlay.show('Bitte warten, lade Vorlage auf den Server hoch ...');\r\n        if (workspace_id >= 0) {\r\n            let dbTool = main.getDatabaseTool();\r\n            dbTool.export((buffer) => {\r\n                // @ts-ignore\r\n                buffer = pako.deflate(buffer);\r\n                this.uploadIntern(buffer, workspace_id, reason, main, callback);\r\n            }, (error) => {\r\n                alert(\"Fehler beim Exportieren der Datenbank: \" + error)\r\n                main.waitOverlay.hide();\r\n            })\r\n        } else {\r\n            this.uploadIntern(dump, -1, reason, main, callback);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    private uploadIntern(buffer: Uint8Array, workspace_id: number,\r\n        reason: \"publishDatabaseAsTemplate\" | \"uploadBaseTemplateForWorkspace\",\r\n        main: Main, callback: (response: UploadTemplateResponse) => void) {\r\n\r\n        $.ajax({\r\n            type: 'POST',\r\n            async: true,\r\n            contentType: 'application/octet-stream',\r\n            data: buffer,\r\n            processData: false,\r\n            headers: { 'x-workspaceid': \"\" + workspace_id, \"x-reason\": reason },\r\n            url: \"servlet/uploadTemplate\",\r\n            success: function (response: UploadTemplateResponse) {\r\n                main.waitOverlay.hide();\r\n                callback(response);\r\n                return;\r\n\r\n            },\r\n            error: function (jqXHR, message) {\r\n                alert('message');\r\n                main.waitOverlay.hide();\r\n            }\r\n        }\r\n        );\r\n        return buffer;\r\n    }\r\n}","import { CreateWorkspaceData, WorkspaceData } from \"../../communication/Data.js\";\r\nimport { copyTextToClipboard, makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { TemplateUploader } from \"../../tools/TemplateUploader.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\nexport class DatabaseSettingsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private workspace: Workspace) {\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Datenbank-Einstellungen</div>\r\n            <div style=\"width: 100%; margin-left: 10px\">\r\n                <div class=\"jo_ds_settings\" style=\"margin-left: 0px\">\r\n                <div class=\"jo_ds_settings_caption\">Name der Datenbank:</div><div><input class=\"dialog-input jo_databasename\" value=\"Neue Datenbank\"></input></div>\r\n                </div>\r\n\r\n                <div class=\"jo_ds_settings_caption\" style=\"margin-top: 20px\">\r\n                Zugriffscodes für andere Benutzer:\r\n                </div>\r\n                                \r\n                <div>\r\n                    <table class=\"jo_ds_secret_table\">\r\n                    <tr>\r\n                        <td>Nur Lesen:</td><td class=\"jo_ds_secret jo_ds_secret_read\"></td><td id=\"copySecretTdread\"></td><td><button class=\"jo_small_button jo_button_code_read\">Neuen Code generieren</button></td>\r\n                    <tr>\r\n                        <td>Lesen und schreiben:</td><td class=\"jo_ds_secret jo_ds_secret_write\"></td><td id=\"copySecretTdwrite\"></td><td><button class=\"jo_small_button jo_button_code_write\">Neuen Code generieren</button></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Lesen, schreiben und Struktur verändern:</td><td class=\"jo_ds_secret jo_ds_secret_ddl\"></td><td id=\"copySecretTdddl\"></td><td><button class=\"jo_small_button jo_button_code_ddl\">Neuen Code generieren</button></td>\r\n                    </tr>\r\n                    </table>\r\n                </div>\r\n\r\n                <div class=\"jo_ds_settings_caption\" style=\"margin-top: 20px\">\r\n                Beschreibung:\r\n                </div>\r\n                <div>\r\n                <textarea class=\"jo_ds_settings_description\" maxlength=\"5000\"></textarea>\r\n                </div>\r\n\r\n                <div class=\"jo_ds_settings_caption\" style=\"margin-top: 20px\">\r\n                Datenbank freigeben als Vorlage für andere Benutzer:\r\n                </div>\r\n\r\n                <fieldset id=\"jo_ds_publishedTo\">\r\n                    <input type=\"radio\" id=\"b0\" name=\"publishedFilter\" value=\"0\" checked=\"checked\"><label for=\"b0\">Keine Freigabe</label>\r\n                    <input type=\"radio\" id=\"b1\" name=\"publishedFilter\" value=\"1\"><label for=\"b1\">Freigabe für meine Klasse(n)</label>\r\n                    <input type=\"radio\" id=\"b2\" name=\"publishedFilter\" value=\"2\" style=\"visibility: none\"><label id=\"lb2\" for=\"b2\" style=\"visibility: none\">Freigabe für meine Schule</label>\r\n                    <input type=\"radio\" id=\"b3\" name=\"publishedFilter\" value=\"3\" style=\"visibility: none\"><label id=\"lb3\" for=\"b3\" style=\"visibility: none\">Freigabe für alle Schulen</label>\r\n                </fieldset>\r\n\r\n                <div>\r\n                    <input type=\"checkbox\" id=\"jo_upload_db\" name=\"jo_upload_db\">\r\n                    <label for=\"jo_upload_db\">Aktuellen Zustand der Datenbank als Vorlage hochladen</label>\r\n                </div>\r\n            </div>\r\n\r\n\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_save_button\">Speichern</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n\r\n        let that = this;\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { this.showMainWindow(); });\r\n        jQuery('#jo_ds_save_button').on('click', () => { \r\n            this.saveNameAndPublishedTo();\r\n         })\r\n\r\n        this.setValues();\r\n\r\n        [\"read\", \"write\", \"ddl\"].forEach(kind => {\r\n            jQuery('.jo_button_code_' + kind).on('pointerdown', () => {\r\n                that.main.networkManager.setNewSecret(that.workspace.id, kind, (secret) => {\r\n                    jQuery('.jo_ds_secret_'+kind).text(secret);\r\n                })\r\n            })\r\n            let $copyButton = jQuery('<button class=\"jo_small_button jo_copy_secret_button jo_active\">Kopieren</button>')\r\n            jQuery('#copySecretTd' + kind).append($copyButton);\r\n            $copyButton.on('pointerdown', () => {\r\n                copyTextToClipboard(jQuery('.jo_ds_secret_'+kind).text());\r\n            })\r\n        })\r\n\r\n        jQuery('#jo_ds_publishedTo>input').on('change', (e) => {$('#jo_upload_db').prop('checked', !((<HTMLInputElement>jQuery('#b0')[0]).checked))});\r\n\r\n    }\r\n\r\n    saveNameAndPublishedTo(){\r\n        let published_to = 0;\r\n        jQuery('#jo_ds_publishedTo').find('input').each( (n, element) => {\r\n            let $element = jQuery(element);\r\n            //@ts-ignore\r\n            if(<HTMLInputElement>element.checked){\r\n                published_to = Number.parseInt(<string>$element.attr('value'));\r\n            }\r\n        })\r\n\r\n        this.main.networkManager.setNameAndPublishedTo(this.workspace.id, \r\n            <string>jQuery('.jo_databasename').val(), published_to, <string>jQuery('.jo_ds_settings_description').val(),\r\n             () => {\r\n                 if($('#jo_upload_db').prop('checked')){\r\n                    new TemplateUploader().uploadCurrentDatabase(this.workspace.id, this.main, null, \"publishDatabaseAsTemplate\");                    \r\n                 }\r\n                 this.showMainWindow(); \r\n                })\r\n    }\r\n\r\n    setValues(){\r\n        jQuery('.jo_databasename').val(this.workspace.name);\r\n        this.main.networkManager.getDatabaseSettings(this.workspace.id, (response) => {\r\n            [\"read\", \"write\", \"ddl\"].forEach(kind => {\r\n                jQuery('.jo_ds_secret_' + kind).text(response.secrets[kind]);\r\n            });\r\n            if(this.main.user.is_admin){\r\n                jQuery('#b3').css('visibility', 'visible');\r\n                jQuery('#lb3').css('visibility', 'visible');\r\n            }\r\n            if(this.main.user.is_schooladmin){\r\n                jQuery('#b2').css('visibility', 'visible');\r\n                jQuery('#lb2').css('visibility', 'visible');\r\n            }\r\n            // jQuery('#jo_ds_publishedTo input').attr('checked', '');\r\n            jQuery('#b'+response.publishedTo).prop('checked', true);\r\n\r\n            jQuery('#jo_upload_db').prop('checked', response.publishedTo != 0);\r\n\r\n            jQuery('.jo_ds_settings_description').val(this.workspace.database.description);\r\n        })\r\n    }\r\n\r\n    showMainWindow() {\r\n        jQuery('#main').css('visibility', 'visible');\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n    }\r\n\r\n\r\n\r\n}","import { WorkspaceData } from \"../communication/Data.js\";\r\nimport { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { DatabaseSettingsDialog } from \"../main/gui/DatabaseSettingsDialog.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { WDatabase } from \"./WDatabase.js\";\r\n\r\nexport class Workspace {\r\n    \r\n    name: string;\r\n    path: string;\r\n    isFolder: boolean;\r\n    id: number;\r\n    owner_id: number;\r\n\r\n    version: number;\r\n    \r\n    moduleStore: ModuleStore;\r\n    panelElement: AccordionElement;\r\n    currentlyOpenModule: Module;\r\n    saved: boolean = true;\r\n\r\n    compilerMessage: string;\r\n\r\n    databaseId: number;\r\n    database: WDatabase;\r\n\r\n    sql_history: string;\r\n\r\n    permissions: number;\r\n\r\n    constructor(name: string, private main: MainBase, owner_id: number){\r\n        this.name = name;\r\n        this.owner_id = owner_id;\r\n        this.moduleStore = new ModuleStore(main);\r\n        this.sql_history = \"\";\r\n    }\r\n    \r\n    getWorkspaceData(withFiles: boolean): WorkspaceData {\r\n        let wd: WorkspaceData = {\r\n            name: this.name,\r\n            id: this.id,\r\n            owner_id: this.owner_id,\r\n            currentFileId: this.currentlyOpenModule == null ? null : this.currentlyOpenModule.file.id,\r\n            files: [],\r\n            sql_history: this.sql_history,\r\n            path: \"\",\r\n            isFolder: false,  \r\n            permissions: this.permissions,\r\n            database_id: this.databaseId\r\n        }\r\n\r\n        if(withFiles){\r\n            for(let m of this.moduleStore.getModules(false)){\r\n    \r\n                wd.files.push(m.getFileData(this));\r\n    \r\n            }\r\n        }\r\n\r\n        return wd;\r\n    }\r\n\r\n    renderSettingsButton(panelElement: AccordionElement) {\r\n        let $buttonDiv = panelElement?.$htmlFirstLine?.find('.jo_additionalButtonSettings');\r\n        if ($buttonDiv == null) return;\r\n        \r\n        // let myMain: Main = <Main>this.main;\r\n\r\n            let $button = jQuery('<div class=\"jo_settingsButton img_settings jo_button jo_active\" title=\"Datenbank-Einstellungen...\"></div>');\r\n            $buttonDiv.append($button);\r\n            let that = this;\r\n            $button.on('mousedown', (e) => e.stopPropagation());\r\n            $button.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                new DatabaseSettingsDialog(<any>that.main, that);\r\n\r\n            });\r\n\r\n        // } else {\r\n        //     $buttonDiv.find('.jo_startButton').remove();\r\n        // }\r\n    }\r\n\r\n\r\n    static restoreFromData(ws: WorkspaceData, main: Main): Workspace {\r\n\r\n        let w = new Workspace(ws.name, main, ws.owner_id);\r\n        w.id = ws.id;\r\n        w.path = ws.path;\r\n        w.isFolder = ws.isFolder;\r\n        w.owner_id = ws.owner_id;\r\n        w.sql_history = ws.sql_history;\r\n        w.permissions = ws.permissions;\r\n        w.databaseId = ws.database_id;\r\n\r\n        for(let f of ws.files){\r\n\r\n            let m: Module = Module.restoreFromData(f, main);\r\n            w.moduleStore.putModule(m);\r\n\r\n            if(f.id == ws.currentFileId){\r\n                w.currentlyOpenModule = m;\r\n            }\r\n\r\n        }\r\n\r\n        return w;\r\n\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        \r\n        return this.moduleStore.hasErrors();\r\n        \r\n    }\r\n\r\n    getModuleByMonacoModel(model: monaco.editor.ITextModel): Module {\r\n        for(let m of this.moduleStore.getModules(false)){\r\n            if(m.model == model){\r\n                return m;\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    }\r\n}\r\n\r\n","import { Editor } from \"./Editor.js\";\r\nimport { CompletionHint, Module } from \"../../compiler/parser/Module.js\";\r\nimport { Symbol, SymbolTable } from \"../../compiler/parser/SymbolTable.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { Column, Table } from \"../../compiler/parser/SQLTable.js\";\r\n\r\nexport class MyCompletionItemProvider implements monaco.languages.CompletionItemProvider {\r\n\r\n    isConsole: boolean;\r\n\r\n    public triggerCharacters: string[] = ['.', 'abcdefghijklmnopqrstuvwxyzäöüß_ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜ', ' ', ',', '('];\r\n\r\n    public keywordCompletionItems: Map<string, monaco.languages.CompletionItem> = new Map();\r\n\r\n    constructor(private main: MainBase) {\r\n        this.setupKeywordCompletionItems();\r\n    }\r\n\r\n    first: boolean = true;\r\n    provideCompletionItems(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, \r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n\r\n\r\n        let module: Module =\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null || module.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n            let that = this;\r\n\r\n            let wfc = function waitForCompiler(){\r\n                if(module.file.dirty){\r\n                    setTimeout(() => {\r\n                        wfc();\r\n                    }, 100);\r\n                } else {\r\n                    resolve(that.provideCompletionItemsIntern(model, position, context, token));\r\n                }\r\n            }\r\n        \r\n            wfc();\r\n\r\n        })\r\n\r\n        // Promise.resolve({\r\n        //     suggestions: completionItems\r\n        // });\r\n    }\r\n\r\n    provideCompletionItemsIntern(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, \r\n        token: monaco.CancellationToken): monaco.languages.CompletionList {\r\n\r\n        setTimeout(() => {\r\n            //@ts-ignore\r\n            let sw = this.main.getMonacoEditor()._contentWidgets[\"editor.widget.suggestWidget\"].widget;\r\n            if (this.first) {\r\n                sw.toggleDetails();\r\n                this.first = false;\r\n            }\r\n        }, 500);\r\n\r\n        let module: Module =\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null || module.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (this.isStringLiteral(module, position)) return null;\r\n\r\n        let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let symbolTable = module.mainSymbolTable.findTableAtPosition(position.lineNumber, position.column);\r\n        let completionHint: CompletionHint = module.getCompletionHint(position.lineNumber, position.column);\r\n        if (completionHint == null) {\r\n            completionHint = {\r\n                fromColumn: 0,\r\n                toColumn: 0,\r\n                fromLine: 0,\r\n                toLine: 0,\r\n                hintColumns: false,\r\n                hintTables: false,\r\n                hintKeywords: []\r\n            }\r\n        }\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n        this.addKeywordCompletionItems(completionHint, completionItems);\r\n\r\n        let dotMatch = textUntilPosition.match(/.*\\s([\\wöäüÖÄÜß]*)(\\.)([\\wöäüÖÄÜß]*)$/);\r\n\r\n        let ibMatch = textAfterPosition.match(/^([\\wöäüÖÄÜß]*)/);\r\n        let identifierAndBracketAfterCursor = \"\";\r\n        if (ibMatch != null && ibMatch.length > 0) {\r\n            identifierAndBracketAfterCursor = ibMatch[0];\r\n        }\r\n\r\n        if (dotMatch == null) {\r\n            this.addIdentifierCompletionItems(completionHint, symbolTable, completionItems);\r\n        } else {\r\n            this.addDotCompletionItems(position, dotMatch, identifierAndBracketAfterCursor, symbolTable, completionItems);\r\n        }\r\n\r\n        let word = model.getWordUntilPosition(position);\r\n        let replaceWordRange = { startColumn: word.startColumn, startLineNumber: position.lineNumber, endColumn: word.endColumn, endLineNumber: position.lineNumber };\r\n        let insertAfterCursorRange = { startColumn: position.column, startLineNumber: position.lineNumber, endColumn: position.column, endLineNumber: position.lineNumber }\r\n\r\n        for (let item of completionItems) {\r\n            if (item.range == null) {\r\n                if (item.insertText.startsWith(\",\")) {\r\n                    item.range = insertAfterCursorRange;\r\n                } else {\r\n                    item.range = replaceWordRange;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (completionHint.dontHint != null) {\r\n            completionItems = completionItems.filter(item => completionHint.dontHint.indexOf(item.insertText) < 0);\r\n        }\r\n\r\n        return {\r\n            suggestions: completionItems\r\n        };\r\n    }\r\n\r\n\r\n    addDotCompletionItems(position: monaco.Position, dotMatch: RegExpMatchArray, identifierAndBracketAfterCursor: string,\r\n        symbolTable: SymbolTable, completionItems: monaco.languages.CompletionItem[]) {\r\n        let textAfterDot = dotMatch[3];\r\n        let textBeforeDot = dotMatch[1];\r\n        let dotColumn = position.column - textAfterDot.length - 1;\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - textAfterDot.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n        for (let symbol of symbolTable.symbolList) {\r\n            if (symbol.table != null) {\r\n                let identifier: string = symbol.table.identifier;\r\n                if (symbol.tableAlias != null) identifier = symbol.tableAlias;\r\n                if (identifier.toLowerCase() == textBeforeDot) {\r\n                    for (let column of symbol.table.columns) {\r\n                        completionItems.push({\r\n                            label: column.identifier,\r\n                            detail: \"Spalte \" + column.identifier + \" der Tabelle \" + symbol.table.identifier,\r\n                            filterText: column.identifier,\r\n                            insertText: column.identifier,\r\n                            insertTextRules: monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                            kind: monaco.languages.CompletionItemKind.Field,\r\n                            range: rangeToReplace\r\n                        })\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    addIdentifierCompletionItems(completionHint: CompletionHint, symbolTable: SymbolTable, completionItems: monaco.languages.CompletionItem[]) {\r\n        let praefix: string = completionHint.praefix == null ? \"\" : completionHint.praefix;\r\n        let suffix: string = completionHint.suffix == null ? \"\" : completionHint.suffix;\r\n\r\n        if (!(completionHint.hintTables || completionHint.hintColumns)) {\r\n            return;\r\n        }\r\n\r\n        let tableIdentifiers: { [identifier: string]: boolean } = {};\r\n\r\n        let st: SymbolTable = symbolTable;\r\n        let columns: { [identifier: string]: Symbol[] } = {};\r\n        let columnIdentifiers: string[] = [];\r\n\r\n        while (st != null) {\r\n            for (let symbol of st.symbolList) {\r\n                if (symbol.column != null) {\r\n                    let columnIdentifier = symbol.column.identifier;\r\n                    if (columns[columnIdentifier] == null) {\r\n                        columns[columnIdentifier] = [symbol];\r\n                        columnIdentifiers.push(columnIdentifier);\r\n                    } else {\r\n                        columns[columnIdentifier].push(symbol);\r\n                    }\r\n                } else if (symbol.table != null && completionHint.hintTables) {\r\n                    if (!tableIdentifiers[symbol.identifier]) {\r\n                        let insertText = praefix + symbol.identifier + suffix;\r\n                        completionItems.push({\r\n                            label: symbol.identifier,\r\n                            detail: \"Tabelle \" + symbol.table.identifier,\r\n                            filterText: symbol.identifier,\r\n                            insertText: insertText,\r\n                            insertTextRules: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                            kind: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemKind.Snippet : monaco.languages.CompletionItemKind.Class,\r\n                            range: undefined,\r\n                            sortText: \"aa\" + symbol.identifier\r\n                        });\r\n                        tableIdentifiers[symbol.identifier] = true;\r\n                    }\r\n                }\r\n            }\r\n            st = st.parent;\r\n        }\r\n\r\n        if (completionHint.hintColumns) {\r\n            for (let ci of columnIdentifiers) {\r\n                let columList = columns[ci];\r\n                let withTable = columList.length > 1 && completionHint.hintColumnsOfTable == null;\r\n                for (let cs of columList) {\r\n                    let text = cs.identifier;\r\n                    if (withTable && cs.identifier == cs.column.identifier.toLowerCase()) {\r\n                        text = (cs.tableAlias == null ? cs.column.table.identifier : cs.tableAlias) + \".\" + text;\r\n                    }\r\n                    if (completionHint.hintColumnsOfTable == null || cs.column?.table?.identifier == completionHint.hintColumnsOfTable) {\r\n                        let insertText = praefix + text + suffix;\r\n                        completionItems.push({\r\n                            label: text,\r\n                            detail: \"Die Spalte \" + cs.column.identifier + \" der Tabelle \" + cs.column.table.identifier,\r\n                            filterText: text,\r\n                            insertText: insertText,\r\n                            insertTextRules: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                            kind: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemKind.Snippet : monaco.languages.CompletionItemKind.Field,\r\n                            range: undefined\r\n                        })\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    keywordToSnippetMap: { [keyword: string]: string } = {\r\n        \"(\": \"(\\n\\t$0\\n)\",\r\n        \"varchar\": \"varchar($1) $0\",\r\n        \"decimal\": \"decimal($1, $2) $0\"\r\n    }\r\n\r\n    addKeywordCompletionItems(completionHint: CompletionHint, completionItems: monaco.languages.CompletionItem[]) {\r\n        let praefix: string = completionHint.praefix == null ? \"\" : completionHint.praefix;\r\n        let suffix: string = completionHint.suffix == null ? \"\" : completionHint.suffix;\r\n\r\n\r\n        for (let text of completionHint.hintKeywords) {\r\n            let insertText = praefix + text + suffix;\r\n            let snippet = this.keywordToSnippetMap[text];\r\n\r\n            let ci = this.keywordCompletionItems.get(text);\r\n            if (ci != null) {\r\n                completionItems.push(ci);\r\n            } else if (snippet != null) {\r\n                let label = snippet.replace(\"$0\", \"\").replace(\"$1\", \"\").replace(\"$2\", \"\").replace(/ /g, \"\").replace(/\\n/g, \"\").replace(/\\t/g, \"\");\r\n                completionItems.push({\r\n                    label: label,\r\n                    detail: \"\",\r\n                    filterText: text,\r\n                    insertText: snippet,\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                })\r\n            } else {\r\n                completionItems.push({\r\n                    label: text,\r\n                    detail: \"\",\r\n                    filterText: text,\r\n                    insertText: text,\r\n                    insertTextRules: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                    kind: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemKind.Snippet : monaco.languages.CompletionItemKind.Keyword,\r\n                    range: undefined,\r\n                    sortText: text == \"from\" ? \"*\" : undefined\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    isStringLiteral(module: Module, position: monaco.Position) {\r\n\r\n        let tokenList = module.tokenList;\r\n        if (tokenList == null || tokenList.length == 0) return false;\r\n\r\n        let posMin = 0;\r\n        let posMax = tokenList.length - 1;\r\n        let pos: number;\r\n\r\n        let watchDog = 1000;\r\n\r\n        while (true) {\r\n            let posOld = pos;\r\n            pos = Math.round((posMax + posMin) / 2);\r\n\r\n            if (posOld == pos) return false;\r\n\r\n            watchDog--;\r\n            if (watchDog == 0) return false;\r\n\r\n            let t = tokenList[pos];\r\n            let p = t.position;\r\n\r\n            if (p.line < position.lineNumber || p.line == position.lineNumber && p.column + p.length < position.column) {\r\n                posMin = pos;\r\n                continue;\r\n            }\r\n\r\n            if (p.line > position.lineNumber || p.line == position.lineNumber && p.column > position.column) {\r\n                posMax = pos;\r\n                continue;\r\n            }\r\n\r\n            return t.tt == TokenType.stringConstant;\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    setupKeywordCompletionItems() {\r\n        this.keywordCompletionItems.set(\"delete from\",\r\n            {\r\n                label: \"delete from <Tabelle> where <Bedingung>\",\r\n                detail: \"Anweisung zum Löschen von Datensätzen\",\r\n                filterText: `delete from`,\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `delete from `,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"drop table\",\r\n            {\r\n                label: \"drop table <Tabelle>\",\r\n                detail: \"Anweisung zum Löschen einer Tabelle\",\r\n                filterText: 'drop table',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `drop table `,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"alter\",\r\n            {\r\n                label: \"alter table <Tabelle> <rename to, rename column, add column, drop column>\",\r\n                detail: \"Anweisung zum Ändern des Schemas (alter table <Tabelle> <rename to, rename column, add column, drop column>)\",\r\n                filterText: 'alter',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `alter table `,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"select\",\r\n            {\r\n                label: \"select <Spalten> from <Tabellen> where <Bedingung>\",\r\n                detail: \"Select-Anweisung\",\r\n                filterText: 'select',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `select * from $1\\nwhere $0\\n`,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"create table\",\r\n            {\r\n                label: \"create table <Tabellenbezeichner> (<Spaltendefinitionen>)\",\r\n                detail: \"Create table-Anweisung (Erstellt eine neue Tabelle)\",\r\n                filterText: 'create',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `create table $1 (\\n\\t$0\\n);`,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        // this.keywordCompletionItems.set(\"from\",\r\n        //     {\r\n        //         label: \"from <Tabellen> where <Bedingung>\",\r\n        //         detail: \"from-Teil der select-Anweisung\",\r\n        //         filterText: 'from',\r\n        //         // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n        //         insertText: `from $1\\nwhere $0\\n`,\r\n        //         command: {\r\n        //             id: \"editor.action.triggerSuggest\",\r\n        //             title: '123',\r\n        //             arguments: []\r\n        //         },\r\n        //         insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n        //         kind: monaco.languages.CompletionItemKind.Snippet,\r\n        //         range: undefined\r\n        //     });\r\n\r\n    }\r\n\r\n\r\n}","import { Module, MethodCallPosition } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\n\r\n\r\nexport class MySignatureHelpProvider implements monaco.languages.SignatureHelpProvider {\r\n\r\n    signatureHelpTriggerCharacters?: readonly string[] = ['(', ',', ';', '<', '>', '=']; // semicolon, <, >, = for for-loop, if, while, ...\r\n    signatureHelpRetriggerCharacters?: readonly string[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    provideSignatureHelp(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let that = this;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            setTimeout(() => {\r\n\r\n                this.main.compileIfDirty();\r\n\r\n                resolve(that.provideSignatureHelpLater(model, position, token, context));\r\n\r\n            }, 300);\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    provideSignatureHelpLater(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model != this.main.getMonacoEditor().getModel());\r\n\r\n        let module: Module = \r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        // let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        // let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let methodCallPositions = module.methodCallPositions[position.lineNumber];\r\n\r\n        if (methodCallPositions == null) return null;\r\n\r\n        let methodCallPosition: MethodCallPosition = null;\r\n        let rightMostPosition: number = -1;\r\n\r\n        for (let i = methodCallPositions.length - 1; i >= 0; i--) {\r\n            let mcp = methodCallPositions[i];\r\n            if (mcp.identifierPosition.column + mcp.identifierPosition.length < position.column\r\n                && mcp.identifierPosition.column > rightMostPosition) {\r\n                if (mcp.rightBracketPosition == null ||\r\n                    (position.lineNumber <= mcp.rightBracketPosition.line && position.column <= mcp.rightBracketPosition.column)\r\n                    || (position.lineNumber < mcp.rightBracketPosition.line)) {\r\n                    methodCallPosition = mcp;\r\n                    rightMostPosition = mcp.identifierPosition.column;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (methodCallPosition == null) return null;\r\n\r\n        return this.getSignatureHelp(methodCallPosition, position);\r\n\r\n\r\n\r\n    }\r\n\r\n    getSignatureHelp(methodCallPosition: MethodCallPosition,\r\n        position: monaco.Position): monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let parameterIndex: number = 0;\r\n\r\n        for (let cp of methodCallPosition.commaPositions) {\r\n            if (cp.line < position.lineNumber || (cp.line == position.lineNumber && cp.column < position.column)) {\r\n                parameterIndex++;\r\n            }\r\n        }\r\n\r\n        let signatureInformationList: monaco.languages.SignatureInformation[] = [];\r\n\r\n        return Promise.resolve({\r\n            value: {\r\n                activeParameter: parameterIndex,\r\n                activeSignature: 0,\r\n                signatures: signatureInformationList\r\n            },\r\n            dispose: () => { }\r\n        });\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\n\r\n\r\n\r\nexport class MyHoverProvider {\r\n\r\n    private static keywordDescriptions: { [keyword: string]: string } = {\r\n        \"print\": \"Die Anweisung ```print``` gibt eine Zeichenkette aus.\",\r\n        \"new\": \"Das Schlüsselwort ```new``` bewirkt die Instanzierung (\\\"Erschaffung\\\") eines neuen Objektes einer Klasse.\",\r\n        \"println\": \"Die Anweisung ```println``` gibt eine Zeichenkette gefolgt von einem Zeilenumbruch aus.\",\r\n        \"while\": \"```\\nwhile (Bedingung) {Anweisungen}\\n```  \\nbewirkt die Wiederholung der Anweisungen solange ```Bedingung == true``` ist.\",\r\n        \"for\": \"```\\nfor(Startanweisung;Solange-Bedingung;Nach_jeder_Wiederholung){Anweisungen}\\n```  \\n\"\r\n            + \"führt zunächst die Startanweisung aus und wiederholt dann die Anweisungen solange ```Bedingung == true``` ist. Am Ende jeder wiederholung wird Nach_jeder_Wiederholung ausgeführt.\",\r\n        \"if\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.  \\nDer ```else```-Teil kann auch weggelassen werden.\",\r\n        \"else\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.\",\r\n        \"switch\": \"```\\nswitch(Selektor){ case Wert_1: Anweisungen_1; break; case Wert_2: Anweisungen_2; break; default: Default-Anweisungen } \\n```  \\nwertet den Selektor-Term aus und führt abhängig vom Termwert Anweisungen_1, Anweisungen_2, ... aus. Entspricht der Termwert keinem der Werte Wert_1, Wert_2, ..., so werden die Default-Anweisungen ausgeführt.\",\r\n        \"%\": \"```\\na % b\\n```  \\n (sprich: 'a modulo b') berechnet den **Rest** der ganzzahligen Division a/b.\",\r\n        \"==\": \"```\\na == b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` gleich sind.  \\nSind a und b **Objekte**, so ergibt ```a == b``` nur dann ```true```, wenn ```a``` und ```b``` auf das **identische** Objekt zeigen.  \\n```==``` nennt man **Vergleichsoperator**.\",\r\n        \"<=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` kleiner oder gleich dem Wert von ```b``` ist.\",\r\n        \">=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` größer oder gleich dem Wert von ```b``` ist.\",\r\n        \"!=\": \"```\\na != b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` **un**gleich sind.  \\nSind ```a``` und ```b``` **Objekte**, so ergibt ```a != b``` dann ```true```, wenn ```a``` und ```b``` **nicht** auf das **identische** Objekt zeigen.  \\n```!=``` nennt man **Ungleich-Operator**.\",\r\n        \"+=\": \"```\\na += b\\n(Kurzschreibweise für a = a + b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erhöht** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"-=\": \"```\\na -= b\\n(Kurzschreibweise für a = a - b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erniedrigt** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"*=\": \"```\\na *= b\\n(Kurzschreibweise für a = a * b)\\n```  \\nbewirkt, dass der Wert von ```a``` mit dem Wert von ```b``` **multipliziert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"/=\": \"```\\na /= b\\n(Kurzschreibweise für a = a / b)\\n```  \\nbewirkt, dass der Wert von ```a``` durch den Wert von ```b``` **dividiert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"++\": \"```\\na++\\n(Kurzschreibweise für a = a + 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins erhöht wird.\",\r\n        \"--\": \"```\\na--\\n(Kurzschreibweise für a = a - 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins eniedrigt wird.\",\r\n        \"=\": \"```\\na = Term\\n```  \\nberechnet den Wert des Terms und weist ihn der Variablen ```a``` zu.  \\n**Vorsicht:**  \\nVerwechsle ```=```(**Zuweisungsoperator**) nicht mit ```==```(**Vergleichsoperator**)!\",\r\n        \"!\": \"```\\n!a\\n```  \\nergibt genau dann ```true```, wenn ```a``` ```false``` ergibt.  \\n```!``` spricht man '**nicht**'.\",\r\n        \"public\": \"```\\npublic\\n```  \\nAttribute und Methoden, die als ```public``` deklariert werden, sind überall (auch außerhalb der Klasse) sichtbar.\",\r\n        \"private\": \"```\\nprivate\\n```  \\nAttribute und Methoden, die als ```private``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse sichtbar.\",\r\n        \"protected\": \"```\\nprotected\\n```  \\nAttribute und Methoden, die als ```protected``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse oder innerhalb von Methoden von Kindklassen sichtbar.\",\r\n        \"return\": \"```\\nreturn Term\\n```  \\nbewirkt, dass die Methode verlassen wird und der Wert des Terms an die aufrufende Stelle zurückgegeben wird.\",\r\n        \"break\": \"```\\nbreak;\\n```  \\ninnerhalb einer Schleife bewirkt, dass die Schleife sofort verlassen und mit den Anweisungen nach der Schleife fortgefahren wird.  \\n\"+\r\n        \"```break``` innerhalb einer ```switch```-Anweisung bewirkt, dass der Block der ```switch```-Anweisung verlassen wird.\",\r\n        \"class\": \"```\\nclass\\n```  \\nMit dem Schlüsselwort ```class``` werden Klassen definiert.\",\r\n        \"extends\": \"```\\nextends\\n```  \\n```class A extends B { ... }``` bedeutet, dass die Klasse A Unterklasse der Klasse B ist.\",\r\n        \"implements\": \"```\\nimplements\\n```  \\n```class A implements B { ... }``` bedeutet, dass die Klasse A das Interface B implementiert, d.h., dass sie alle Methoden besitzen muss, die in B definiert sind.\",\r\n        \"this\": \"```\\nthis\\n```  \\nInnerhalb einer Methodendefinition bezeichnet das Schlüsselwor ```this``` immer dasjenige Objekt, für das die Methode gerade ausgeführt wird.\",\r\n\r\n    }\r\n\r\n    constructor(private editor: Editor) {\r\n\r\n    }\r\n\r\n    provideHover(model: monaco.editor.ITextModel, position: monaco.Position, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Hover> {\r\n\r\n        let selection: monaco.Selection = this.editor.editor.getSelection();\r\n        \r\n        // if cursor is inside current selection then don't show hover, because editor.onDidChangeCursorPosition evaluates selected Text \r\n        // (see class Editor).\r\n        if(selection != null){\r\n            if(selection.startLineNumber != selection.endLineNumber || selection.startColumn != selection.endColumn){\r\n                if(\r\n                    (selection.startLineNumber < position.lineNumber || selection.startLineNumber == position.lineNumber && selection.startColumn <= position.column) && \r\n                    (selection.endLineNumber > position.lineNumber || selection.endLineNumber == position.lineNumber && selection.endColumn >= position.column) \r\n                ){\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        let module: Module = this.editor.main.getCurrentWorkspace()?.getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        for(let errorList of module.errors){\r\n            for(let error of errorList){\r\n                if(error.position.line == position.lineNumber && \r\n                    error.position.column <= position.column && \r\n                    error.position.column + error.position.length >= position.column){\r\n                        return null; // Show error-tooltip and don't show hover-tooltip\r\n                    }\r\n            }\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let declarationAsString = \"\";\r\n\r\n        if (element != null) {\r\n        } else {\r\n            let word = this.getWordUnderCursor(model, position);\r\n            let desc = MyHoverProvider.keywordDescriptions[word];\r\n            if (desc != null) {\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: desc }],\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getWordUnderCursor(model: monaco.editor.ITextModel, position: monaco.Position)\r\n         : string {\r\n        \r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let word = \"\";\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierOrArrayDescriptor(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        if (end - begin > 1) {\r\n            word = text.substring(begin, end);\r\n        } else {\r\n            end = pos;\r\n            while (end < text.length && this.isInsideOperator(text.charAt(end))) {\r\n                end++;\r\n            }\r\n    \r\n            begin = pos;\r\n            while (begin > 0 && this.isInsideOperator(text.charAt(begin - 1))) {\r\n                begin--;\r\n            }\r\n    \r\n            if (end - begin > 0) {\r\n                word = text.substring(begin, end);\r\n            }\r\n        }\r\n\r\n        return word;\r\n\r\n    }\r\n\r\n    widenDeclaration(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        identifier: string): string {\r\n\r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierChain(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        let lenght: number = identifier?.length == null ? 1 : identifier.length;\r\n\r\n        if (end - begin > length) {\r\n            return text.substring(begin, end);\r\n        }\r\n\r\n        return identifier;\r\n    }\r\n\r\n    isInsideIdentifierChain(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß_\\[\\]\\.]/i);\r\n\r\n    }\r\n\r\n    isInsideOperator(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[!%<>=\\+\\-\\*\\/]/i);\r\n\r\n    }\r\n\r\n    isInsideIdentifierOrArrayDescriptor(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß\\[\\]]/i);\r\n\r\n    }\r\n\r\n\r\n}","import { QuickFix } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyCodeActionProvider implements monaco.languages.CodeActionProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideCodeActions(model: monaco.editor.ITextModel, range: monaco.Range, context: monaco.languages.CodeActionContext, token: monaco.CancellationToken): monaco.languages.CodeActionList | Promise<monaco.languages.CodeActionList> {\r\n        const actions = context.markers.map(error => {\r\n            let quickFix: QuickFix = <any>error.relatedInformation;\r\n            if (quickFix == null) return null;\r\n\r\n            let codeAction: monaco.languages.CodeAction = {\r\n                title: quickFix.title,\r\n                diagnostics: [error],\r\n                kind: \"quickfix\",\r\n                edit: {\r\n                    edits: quickFix.editsProvider(model.uri)\r\n                },\r\n                isPreferred: true\r\n            };\r\n            return codeAction;\r\n        });\r\n        return {\r\n            actions: actions,\r\n            dispose: () => { }\r\n        }\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Editor } from \"./Editor.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyReferenceProvider implements monaco.languages.ReferenceProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideReferences(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.ReferenceContext, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Location[]> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) return null;\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let referencePositions: monaco.languages.Location[] = [];\r\n\r\n        usagePositions.forEach((upInCurrentModule, module) => {\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    referencePositions.push(\r\n                        {\r\n                            uri: module.uri,\r\n                            range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length }\r\n                        });\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        return referencePositions;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import { Main } from \"../Main.js\";\r\n\r\nexport type HelperDirection = \"top\" | \"bottom\" | \"left\" | \"right\";\r\n\r\nexport class Helper {\r\n\r\n    public static openHelper(text: string, targetElement: JQuery<HTMLElement>, direction: HelperDirection) {\r\n\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.removeClass(['jo_arrow_box_left', 'jo_arrow_box_right', 'jo_arrow_box_top', 'jo_arrow_box_bottom']);\r\n\r\n        $helper.addClass('jo_arrow_box_' + direction);\r\n\r\n        $helper.css({ left: '', right: '', top: '', bottom: '' });\r\n\r\n        let to = targetElement.offset();\r\n        let b = jQuery('body');\r\n\r\n        let delta: number = 34;\r\n\r\n        switch (direction) {\r\n            case \"bottom\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                bottom: b.height() - to.top + delta\r\n            });\r\n                break;\r\n            case \"top\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                top: to.top + targetElement.height() + 26\r\n            });\r\n                break;\r\n            case \"left\": $helper.css({\r\n                left: to.left + targetElement.width() + delta,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n            case \"right\": $helper.css({\r\n                right: b.width() - to.left,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n        }\r\n\r\n        $helper.find('span').html(text);\r\n\r\n        let $button = $helper.find('.jo_button');\r\n        $button.on('click', (e) => {\r\n            e.stopPropagation();\r\n            $button.off('click');\r\n            Helper.close();\r\n        });\r\n\r\n        $helper.fadeIn(800);\r\n\r\n    }\r\n\r\n    static close() {\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.fadeOut(800);\r\n    }\r\n\r\n\r\n    static showHelper(id: string, mainBase: Main, $element?: JQuery<HTMLElement>) {\r\n\r\n        let main: Main;\r\n        if(mainBase instanceof Main){\r\n            main = mainBase;\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        let helperHistory = main.user.settings!.helperHistory;\r\n\r\n        let flag = id + \"Done\";\r\n\r\n        if (helperHistory != null && (helperHistory[flag] == null || !helperHistory[flag])) {\r\n            helperHistory[flag] = true;\r\n            main.networkManager.sendUpdateUserSettings(() => { });\r\n\r\n            let text: string = \"\";\r\n            let direction: HelperDirection = \"left\";\r\n\r\n            switch (id) {\r\n                case \"newDatabaseHelper\":\r\n                    text = `Es gibt noch keine Datenbank. <br> Nutzen Sie den Button\r\n                        <span class='img_add-database-dark jo_inline-image'></span> um eine Datenbank anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                    case \"newSQLFileHelper\":\r\n                        text = `Es gibt noch keine Datei mit SQL-Anweisungen. <br> Nutzen Sie den Button \r\n                            <span class='img_add-file-dark jo_inline-image'></span> um eine neue Datei anzulegen.\r\n                            `;\r\n                        direction = \"left\";\r\n                        break;\r\n                case \"homeButtonHelper\":\r\n                    text = \"Mit dem Home-Button <span class='img_home-dark jo_inline-image'></span> können Sie wieder zu Ihren eigenen Workspaces wechseln.\";\r\n                    direction = \"top\";\r\n                    $element = jQuery('.img_home-dark');\r\n                    break;\r\n                case \"playButtonHelper\":\r\n                    text = `Mit dem \"Start-Button\"\r\n                        (<span class='img_start-dark jo_inline-image'></span>) \r\n                        oder der Tastenkombination &lt;Strg&gt;&nbsp;+&nbsp&lt;Enter&gt; \r\n                        wird die Anweisung ausgeführt, in der der Cursor gerade steht. \r\n                        <br> Wollen Sie mehrere Anweisungen hintereinander ausführen, so markieren \r\n                        Sie alle Anweisungen und klicken Sie dann auf <span class='img_start-dark jo_inline-image'></span>\r\n                        oder drücken Sie  &lt;Strg&gt;&nbsp;+&nbsp&lt;Enter&gt;. `;\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"consoleHelper\": \r\n                    text=`\r\n                        Hier können Sie Anweisungen oder Terme eingeben, die nach Bestätigung mit der Enter-Taste ausgeführt/ausgewertet werden. Das Ergebnis sehen Sie im Bereich über der Eingabezeile. <br>\r\n                        Falls das Programm gerade pausiert (z.B. bei Ausführung in Einzelschritten) können Sie auch auf die Variablen des aktuellen Sichtbarkeitsbereiches zugreifen.\r\n                    `;\r\n                    direction = \"bottom\";\r\n            }\r\n\r\n            if (text != \"\" && $element != null && $element.length > 0) {\r\n                Helper.openHelper(text, $element, direction);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MyCompletionItemProvider } from \"./MyCompletionItemProvider.js\";\r\nimport { defineMyJava } from \"./MyJava.js\";\r\nimport { MySignatureHelpProvider } from \"./MySignatureHelpProvider.js\";\r\nimport { MyHoverProvider } from \"./MyHoverProvider.js\";\r\nimport { MyCodeActionProvider } from \"./MyCodeActionProvider.js\";\r\nimport { MyReferenceProvider } from \"./MyReferenceProvider.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { defineVscSQL } from \"./VscSql.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\nexport class Editor {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n\r\n    cw: monaco.editor.IContentWidget = null;\r\n\r\n    dontPushNextCursorMove: number = 0;\r\n\r\n    constructor(public main: MainBase, private showMinimap: boolean, private isEmbedded: boolean) {\r\n    }\r\n\r\n    initGUI($element: JQuery<HTMLElement>) {\r\n\r\n\r\n\r\n        defineVscSQL();\r\n\r\n        monaco.editor.defineTheme('myCustomThemeDark', {\r\n            base: 'vs-dark', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'functions', foreground: 'dcdcaa', fontStyle: 'italic' },\r\n                { token: 'string.sql', foreground: '3DC9B0' },\r\n                { token: 'number', foreground: '7bef3f' },\r\n                { token: 'type', foreground: '499cd6' },\r\n                { token: 'identifier', foreground: 'effefe' },\r\n                { token: 'statement', foreground: '9cdcfe', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '619ceb', fontStyle: 'bold' },\r\n                { token: 'table', foreground: 'ff0000', fontStyle: 'bold' },\r\n                { token: 'delimiter', foreground: 'e8eb38' }\r\n                // { token: 'comment.js', foreground: '008800', fontStyle: 'bold italic underline' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#1e1e1e\",\r\n                \"jo_highlightStatementGreen\": \"#004000\",\r\n                \"jo_highlightStatementYellow\": \"#404000\",\r\n                \"jo_highlightStatementRed\": \"#402020\"\r\n            }\r\n        });\r\n\r\n        monaco.editor.defineTheme('myCustomThemeLight', {\r\n            base: 'vs', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'functions', foreground: '694E16', fontStyle: 'italic bold' },\r\n                { token: 'string.sql', foreground: 'a03030' },\r\n                { token: 'number', foreground: '404040' },\r\n                { token: 'type', foreground: '0000ff', fontStyle: 'bold' },\r\n                { token: 'identifier', foreground: '8000e0' },\r\n                { token: 'statement', foreground: '001080', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '00a000', fontStyle: 'bold' },\r\n                { token: 'comment', foreground: '808080', fontStyle: 'italic' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#FFFFFF\",\r\n                \"editor.foreground\": \"#000000\",\r\n                \"editor.inactiveSelectionBackground\": \"#E5EBF1\",\r\n                \"editorIndentGuide.background\": \"#D3D3D3\",\r\n                \"editorIndentGuide.activeBackground\": \"#939393\",\r\n                \"editor.selectionHighlightBackground\": \"#ADD6FF80\",\r\n                \"editorSuggestWidget.background\": \"#F3F3F3\",\r\n                \"activityBarBadge.background\": \"#007ACC\",\r\n                \"sideBarTitle.foreground\": \"#6F6F6F\",\r\n                \"list.hoverBackground\": \"#E8E8E8\",\r\n                \"input.placeholderForeground\": \"#767676\",\r\n                \"searchEditor.textInputBorder\": \"#CECECE\",\r\n                \"settings.textInputBorder\": \"#CECECE\",\r\n                \"settings.numberInputBorder\": \"#CECECE\",\r\n                \"statusBarItem.remoteForeground\": \"#FFF\",\r\n                \"statusBarItem.remoteBackground\": \"#16825D\",\r\n                \"jo_highlightStatementGreen\": \"#004000\",\r\n                \"jo_highlightStatementYellow\": \"#404000\",\r\n                \"jo_highlightStatementRed\": \"#400000\"\r\n            }\r\n        });\r\n\r\n\r\n        this.editor = monaco.editor.create($element[0], {\r\n            // value: [\r\n            //     'function x() {',\r\n            //     '\\tconsole.log(\"Hello world!\");',\r\n            //     '}'\r\n            // ].join('\\n'),\r\n            // language: 'myJava',\r\n            language: 'vscSQL',\r\n            lightbulb: {\r\n                enabled: true\r\n            },\r\n            // gotoLocation: {\r\n            //     multipleReferences: \"gotoAndPeek\"\r\n            // },\r\n            lineDecorationsWidth: 0,\r\n            peekWidgetDefaultFocus: \"tree\",\r\n            fixedOverflowWidgets: true,\r\n            quickSuggestions: true,\r\n            quickSuggestionsDelay: 10,\r\n            fontSize: 14,\r\n            fontFamily: \"Consolas, Roboto Mono\",\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            selectOnLineNumbers: false,\r\n            // selectionHighlight: false,\r\n            automaticLayout: true,\r\n            scrollBeyondLastLine: false,\r\n            occurrencesHighlight: false,\r\n            autoIndent: \"full\",\r\n            dragAndDrop: true,\r\n            formatOnType: true,\r\n            formatOnPaste: true,\r\n            suggestFontSize: 16,\r\n            suggestLineHeight: 22,\r\n            suggest: {\r\n                localityBonus: true,\r\n                insertMode: \"replace\"\r\n                // snippetsPreventQuickSuggestions: false\r\n            },\r\n            parameterHints: { enabled: true, cycle: true },\r\n            // //@ts-ignore\r\n            // contribInfo: {\r\n            //     suggestSelection: 'recentlyUsedByPrefix',\r\n            // },\r\n\r\n            mouseWheelZoom: this.isEmbedded,\r\n\r\n            minimap: {\r\n                enabled: this.showMinimap\r\n            },\r\n            scrollbar: {\r\n                vertical: 'auto',\r\n                horizontal: 'auto'\r\n            },\r\n            theme: \"myCustomThemeDark\",\r\n            // automaticLayout: true\r\n\r\n\r\n        }\r\n        );\r\n\r\n        let that = this;\r\n\r\n        let mouseWheelListener = (event: WheelEvent) => {\r\n            if (event.ctrlKey === true) {\r\n\r\n                that.changeEditorFontSize(Math.sign(event.deltaY), true);\r\n\r\n                event.preventDefault();\r\n            }\r\n        };\r\n\r\n\r\n        this.editor.onDidChangeConfiguration((event) => {\r\n            if (event.hasChanged(monaco.editor.EditorOption.fontInfo) && this.isEmbedded) {\r\n\r\n                this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n            }\r\n        });\r\n\r\n        this.editor.onDidChangeCursorPosition((event) => {\r\n\r\n            that.onDidChangeCursorPosition(event.position);\r\n\r\n        });\r\n\r\n        // We need this to set our model after user uses Strg+click on identifier\r\n        this.editor.onDidChangeModel((event) => {\r\n\r\n            let element: HTMLDivElement = <any>$element.find('.monaco-editor')[0];\r\n            element.removeEventListener(\"wheel\", mouseWheelListener);\r\n            element.addEventListener(\"wheel\", mouseWheelListener, { passive: false });\r\n\r\n            if (this.main.getCurrentWorkspace() == null) return;\r\n\r\n            let module = this.main.getCurrentWorkspace().getModuleByMonacoModel(this.editor.getModel());\r\n            if (this.main instanceof Main && module != null) {\r\n\r\n                this.main.projectExplorer.setActiveAfterExternalModelSet(module);\r\n            }\r\n        });\r\n\r\n        monaco.languages.registerHoverProvider('vscSQL', new MyHoverProvider(this));\r\n\r\n        monaco.languages.registerCompletionItemProvider('vscSQL', new MyCompletionItemProvider(this.main));\r\n        monaco.languages.registerCodeActionProvider('vscSQL', new MyCodeActionProvider(this.main));\r\n        monaco.languages.registerReferenceProvider('vscSQL', new MyReferenceProvider(this.main));\r\n\r\n\r\n        monaco.languages.registerSignatureHelpProvider('vscSQL', new MySignatureHelpProvider(this.main));\r\n\r\n        this.editor.onMouseDown((e: monaco.editor.IEditorMouseEvent) => {\r\n            const data = e.target.detail;\r\n            if (e.target.type !== monaco.editor.MouseTargetType.GUTTER_GLYPH_MARGIN &&\r\n                e.target.type !== monaco.editor.MouseTargetType.GUTTER_LINE_NUMBERS || data.isAfterLines) {\r\n                return;\r\n            }\r\n            that.onMarginMouseDown(e.target.position.lineNumber);\r\n            return;\r\n        });\r\n\r\n\r\n        // If editor is instantiated before fonts are loaded then indentation-lines\r\n        // are misplaced, see https://github.com/Microsoft/monaco-editor/issues/392\r\n        // so:\r\n        setTimeout(() => {\r\n            monaco.editor.remeasureFonts();\r\n        }, 2000);\r\n\r\n        this.addActions();\r\n\r\n        //@ts-ignore\r\n        this.editor.onDidType((text) => { that.onDidType(text) });\r\n\r\n        return this.editor;\r\n    }\r\n\r\n\r\n    onDidType(text: string) {\r\n        //        const endOfCommentText = \" * \\n */\";\r\n\r\n        const insertEndOfComment = (pos, insertText: string, newLine: number, newColumn: number) => {\r\n            const range = new monaco.Range(\r\n                pos.lineNumber,\r\n                pos.column,\r\n                pos.lineNumber,\r\n                pos.column\r\n            );\r\n            this.editor.executeEdits(\"new-bullets\", [\r\n                { range, text: insertText }\r\n            ]);\r\n\r\n            // Set position after bulletText\r\n            this.editor.setPosition({\r\n                lineNumber: newLine,\r\n                column: newColumn\r\n            });\r\n        };\r\n\r\n        if (text === \"\\n\") {\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            const prevLine = model.getLineContent(position.lineNumber - 1);\r\n            if (prevLine.trim().indexOf(\"/*\") === 0 && !prevLine.trimRight().endsWith(\"*/\")) {\r\n                const nextLine = position.lineNumber < model.getLineCount() ? model.getLineContent(position.lineNumber + 1) : \"\";\r\n                if (!nextLine.trim().startsWith(\"*\")) {\r\n                    let spacesAtBeginningOfLine: string = prevLine.substr(0, prevLine.length - prevLine.trimLeft().length);\r\n                    if (prevLine.trim().indexOf(\"/**\") === 0) {\r\n                        insertEndOfComment(position, \"\\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    } else {\r\n                        insertEndOfComment(position, \" * \\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    lastTime: number = 0;\r\n    setFontSize(fontSizePx: number) {\r\n\r\n        // console.log(\"Set font size: \" + fontSizePx);\r\n        let time = new Date().getTime();\r\n        if (time - this.lastTime < 150) return;\r\n        this.lastTime = time;\r\n\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (this.main instanceof Main) {\r\n            this.main.viewModeController.saveFontSize(fontSizePx);\r\n        }\r\n\r\n        if (fontSizePx != editorfs) {\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx\r\n            });\r\n\r\n            // editor does not set fontSizePx, but fontSizePx * zoomfactor with unknown zoom factor, so \r\n            // we have to do this dirty workaround:\r\n            let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n            let factor = newEditorfs / fontSizePx;\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx / factor\r\n            });\r\n\r\n        }\r\n\r\n        jQuery('.jo_editorFontSize').css('font-size', fontSizePx + \"px\");\r\n        jQuery('.jo_editorFontSize').css('line-height', (fontSizePx + 2) + \"px\");\r\n\r\n        document.documentElement.style.setProperty('--breakpoint-size', fontSizePx + 'px');\r\n        document.documentElement.style.setProperty('--breakpoint-radius', fontSizePx / 2 + 'px');\r\n\r\n\r\n        this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n    }\r\n\r\n    changeEditorFontSize(delta: number, dynamic: boolean = true) {\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (dynamic) {\r\n            if (editorfs < 10) {\r\n                delta *= 1;\r\n            } else if (editorfs < 20) {\r\n                delta *= 2;\r\n            } else {\r\n                delta *= 4;\r\n            }\r\n        }\r\n\r\n        let newEditorFs = editorfs + delta;\r\n        if (newEditorFs >= 6 && newEditorFs <= 80) {\r\n            this.setFontSize(newEditorFs);\r\n        }\r\n    }\r\n\r\n\r\n    addActions() {\r\n        let that = this;\r\n\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Find bracket',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'Finde korrespondierende Klammer',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.5,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                ed.getAction('editor.action.jumpToBracket').run();\r\n                return null;\r\n            }\r\n        });\r\n\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Execute statement',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'SQL-Anweisung ausführen',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.Enter],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.0,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                that.main.getActionManager().trigger('execute');\r\n                return null;\r\n            }\r\n        });\r\n\r\n        //console.log(this.editor.getSupportedActions());\r\n    }\r\n\r\n    onMarginMouseDown(lineNumber: number) {\r\n\r\n    }\r\n\r\n    elementDecoration: string[] = [];\r\n    onDidChangeCursorPosition(position: { lineNumber: number, column: number }) {\r\n\r\n        if (position == null) position = this.editor.getPosition();\r\n\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, []);\r\n            return;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        if (element != null) {\r\n            let usagePositions = element.usagePositions;\r\n            let upInCurrentModule = usagePositions.get(module);\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    decorations.push({\r\n                        range: { startColumn: up.column, startLineNumber: up.line, endColumn: up.column + up.length, endLineNumber: up.line },\r\n                        options: {\r\n                            className: 'jo_revealSyntaxElement', isWholeLine: false, overviewRuler: {\r\n                                color: { id: \"editorIndentGuide.background\" },\r\n                                darkColor: { id: \"editorIndentGuide.activeBackground\" },\r\n                                position: monaco.editor.OverviewRulerLane.Left\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        let executeActionActive = false;\r\n\r\n        for(let sqlStatement of module.getSQLSTatementsAtSelection(this.editor.getSelection())){\r\n\r\n            let classname = \"jo_highlightStatementGreen\";\r\n            if (sqlStatement != null) {\r\n                if (sqlStatement.hasErrors) {\r\n                    classname = \"jo_highlightStatementRed\";\r\n                    if (sqlStatement.acceptedBySQLite) {\r\n                        classname = \"jo_highlightStatementYellow\";\r\n                        executeActionActive = true;\r\n                    }\r\n                } else {\r\n                    executeActionActive = true;\r\n                }\r\n    \r\n                decorations.push({\r\n                    range: {\r\n                        startColumn: sqlStatement.from.column, startLineNumber: sqlStatement.from.line,\r\n                        endColumn: sqlStatement.to.column, endLineNumber: sqlStatement.to.line\r\n                    },\r\n                    options: {\r\n                        className: classname, isWholeLine: false, overviewRuler: {\r\n                            color: { id: classname },\r\n                            darkColor: { id: classname },\r\n                            position: monaco.editor.OverviewRulerLane.Left\r\n                        },\r\n                        minimap: {\r\n                            color: { id: classname },\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        },\r\n                        zIndex: -100\r\n                    }\r\n                })\r\n    \r\n            }\r\n        }\r\n\r\n\r\n        this.main.getActionManager().setActive('execute', executeActionActive);\r\n\r\n        if(executeActionActive && !this.main.isEmbedded()){\r\n            Helper.showHelper(\"playButtonHelper\", <any>this.main, jQuery('div.img_start-dark'));\r\n        }\r\n\r\n\r\n        this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, decorations);\r\n\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.main.getCurrentlyEditedModule();\r\n    }\r\n\r\n\r\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport function defineVscSQL() {\r\n    monaco.languages.register({\r\n        id: 'vscSQL',\r\n        extensions: ['.sql'],\r\n        //  mimetypes: [\"text/x-java-source\", \"text/x-java\"]  \r\n    });\r\n\r\n    let conf: monaco.languages.LanguageConfiguration = {\r\n        onEnterRules: [\r\n            {\r\n                // e.g. /** | */\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                afterText: /^\\s*\\*\\/$/,\r\n                action: { indentAction: monaco.languages.IndentAction.IndentOutdent, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g. /** ...|\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g.  * ...|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: '* ' }\r\n            },\r\n            {\r\n                // e.g.  */|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            },\r\n            {\r\n                // e.g.  *-----*/|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*[^/]*\\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            }\r\n        ],\r\n        comments: {\r\n            lineComment: '--',\r\n            blockComment: ['/*', '*/'],\r\n        },\r\n        brackets: [\r\n            ['{', '}'],\r\n            ['[', ']'],\r\n            ['(', ')']\r\n        ],\r\n        autoClosingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ],\r\n        surroundingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ]\r\n    };\r\n    let language = {\r\n\r\n        defaultToken: '',\r\n        tokenPostfix: '.sql',\r\n        ignoreCase: true,\r\n        brackets: [\r\n            { open: '[', close: ']', token: 'delimiter.square' },\r\n            { open: '(', close: ')', token: 'delimiter.parenthesis' }\r\n        ],\r\n        escapes: /\\\\(?:[abfnrtv\\\\\"'])/,\r\n        keywords: [\r\n            \"ABORT\", \"ACTION\", \"ADD\", \"AFTER\", \"ALL\", \"ALTER\", \"ANALYZE\", \"AND\", \"AS\", \"ASC\", \"ATTACH\", \"AUTOINCREMENT\", \"BEFORE\",\r\n            \"BEGIN\", \"BETWEEN\", \"BY\", \"CASCADE\", \"CASE\", \"CAST\", \"CHECK\", \"COLLATE\", \"COLUMN\", \"COMMIT\", \"CONFLICT\", \"CONSTRAINT\",\r\n            \"CREATE\", \"CROSS\", \"CURRENT_DATE\", \"CURRENT_TIME\", \"CURRENT_TIMESTAMP\", \"DATABASE\", \"DEFAULT\", \"DEFERRABLE\", \"DEFERRED\",\r\n            \"DELETE\", \"DESC\", \"DETACH\", \"DISTINCT\", \"DROP\", \"EACH\", \"ELSE\", \"END\", \"ESCAPE\", \"EXCEPT\", \"EXCLUSIVE\", \"EXISTS\", \"EXPLAIN\",\r\n            \"FAIL\", \"FOR\", \"FOREIGN\", \"FROM\", \"FULL\", \"GLOB\", \"GROUP\", \"HAVING\", \"IF\", \"IGNORE\", \"IMMEDIATE\", \"IN\", \"INDEX\", \"INDEXED\",\r\n            \"INITIALLY\", \"INNER\", \"INSERT\", \"INSTEAD\", \"INTERSECT\", \"INTO\", \"IS\", \"ISNULL\", \"JOIN\", \"KEY\", \"LEFT\", \"LIKE\", \"LIMIT\", \"MATCH\",\r\n            \"NATURAL\", \"NO\", \"NOT\", \"NOTNULL\", \"NULL\", \"OF\", \"OFFSET\", \"ON\", \"OR\", \"ORDER\", \"OUTER\", \"PLAN\", \"PRAGMA\", \"PRIMARY\", \"QUERY\",\r\n            \"RAISE\", \"RECURSIVE\", \"REFERENCES\", \"REGEXP\", \"REINDEX\", \"RELEASE\", \"RENAME\", \"REPLACE\", \"RESTRICT\", \"RIGHT\", \"ROLLBACK\", \"ROW\",\r\n            \"SAVEPOINT\", \"SELECT\", \"SET\", \"TABLE\", \"TEMP\", \"TEMPORARY\", \"THEN\", \"TO\", \"TRANSACTION\", \"TRIGGER\", \"UNION\", \"UNIQUE\", \"UPDATE\",\r\n            \"USING\", \"VACUUM\", \"VALUES\", \"VIEW\", \"VIRTUAL\", \"WHEN\", \"WHERE\", \"WITH\", \"WITHOUT\", \"ENGINE\", \"CHARSET\"\r\n        ],\r\n        operators: [\r\n            \"AND\", \"BETWEEN\", \"IN\", \"LIKE\", \"NOT\", \"OR\", \"IS\", \"NULL\", \"INTERSECT\", \"UNION\", \"INNER\", \"JOIN\", \"LEFT\", \"OUTER\", \"RIGHT\"\r\n        ],\r\n        builtinFunctions: [\r\n            \"abs\", \"changes\", \"char\", \"coalesce\", \"count\", \"glob\", \"hex\", \"ifnull\",\r\n            \"iif\", \"instr\", \"last_insert_rowid\", \"length\", \"like\", \"likelihood\", \"likely\",\r\n            \"lower\", \"ltrim\", \"max\", \"min\", \"nullif\", \"quote\", \"random\", \"randomblob\",\r\n            \"replace\", \"round\", \"rtrim\", \"sign\", \"soundex\", \"sqlite_version\", \"substr\", \"substring\",\r\n            \"total_changes\", \"trim\", \"typeof\", \"unicode\", \"unlikely\", \"upper\", \"zeroblob\"\r\n        ],\r\n        builtinVariables: [\r\n            // NOT SUPPORTED\r\n        ],\r\n        pseudoColumns: [\r\n            // NOT SUPPORTED\r\n        ],\r\n        tokenizer: {\r\n            root: [\r\n                { include: '@comments' },\r\n                { include: '@whitespace' },\r\n                { include: '@pseudoColumns' },\r\n                { include: '@numbers' },\r\n                { include: '@strings' },\r\n                { include: '@complexIdentifiers' },\r\n                { include: '@scopes' },\r\n                [/[;,.]/, 'delimiter'],\r\n                [/[()]/, '@brackets'],\r\n                [/[a-z_$äöü][\\w$äöüßÄÖÜ]*(?=\\()/, {\r\n                    cases: {\r\n                        '@builtinFunctions': 'functions',\r\n                        '@keywords': 'keyword',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[\\w@#$]+/, {\r\n                    cases: {\r\n                        '@keywords': 'keyword',\r\n                        '@operators': 'operator',\r\n                        '@builtinVariables': 'predefined',\r\n                        // '@builtinFunctions': 'functions',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[<>=!%&+\\-*/|~^]/, 'operator'],\r\n            ],\r\n            whitespace: [\r\n                [/\\s+/, 'white']\r\n            ],\r\n            comments: [\r\n                [/--+.*/, 'comment'],\r\n                [/\\/\\*/, { token: 'comment.quote', next: '@comment' }]\r\n            ],\r\n            comment: [\r\n                [/[^*/]+/, 'comment'],\r\n                // Not supporting nested comments, as nested comments seem to not be standard?\r\n                // i.e. http://stackoverflow.com/questions/728172/are-there-multiline-comment-delimiters-in-sql-that-are-vendor-agnostic\r\n                // [/\\/\\*/, { token: 'comment.quote', next: '@push' }],    // nested comment not allowed :-(\r\n                [/\\*\\//, { token: 'comment.quote', next: '@pop' }],\r\n                [/./, 'comment']\r\n            ],\r\n            pseudoColumns: [\r\n                [/[$][A-Za-z_][\\w@#$]*/, {\r\n                    cases: {\r\n                        '@pseudoColumns': 'predefined',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n            ],\r\n            numbers: [\r\n                [/0[xX][0-9a-fA-F]*/, 'number'],\r\n                [/[$][+-]*\\d*(\\.\\d*)?/, 'number'],\r\n                [/((\\d+(\\.\\d*)?)|(\\.\\d+))([eE][\\-+]?\\d+)?/, 'number']\r\n            ],\r\n            strings: [\r\n                [/'/, { token: 'string', next: '@string' }],\r\n            ],\r\n            string: [\r\n                [/[^\\\\']+/, 'string'],\r\n                [/\\\\./, 'string.escape.invalid'],\r\n                [/''/, 'string'],\r\n                [/'/, { token: 'string', next: '@pop' }]\r\n            ],\r\n            complexIdentifiers: [\r\n                [/\"/, { token: 'identifier.quote', next: '@quotedIdentifier' }]\r\n            ],\r\n            quotedIdentifier: [\r\n                [/[^\"]+/, 'identifier'],\r\n                [/\"\"/, 'identifier'],\r\n                [/\"/, { token: 'identifier.quote', next: '@pop' }]\r\n            ],\r\n            scopes: [\r\n                // NOT SUPPORTED\r\n            ]\r\n        }\r\n\r\n\r\n\r\n    };\r\n\r\n    //@ts-ignore\r\n    monaco.languages.setLanguageConfiguration('vscSQL', conf);\r\n    //@ts-ignore\r\n    monaco.languages.setMonarchTokensProvider('vscSQL', language);\r\n\r\n\r\n\r\n}","export class WorkerSim {\r\n\r\n    //@ts-ignore\r\n    initsql = initSqlJs({locateFile: (path, scriptDirectory) => \"https://embed.learn-sql.de/include/lib/sql.js/sql-wasm.wasm\"});\r\n    db;\r\n    SQL;\r\n\r\n    onmessage: (event: {data: any}) => void;\r\n\r\n    onError: (event: ErrorEvent) => void;\r\n\r\n    postMessageToClient(message: any) {\r\n        this.onmessage({data: message})\r\n    }\r\n\r\n    postMessage(data: any){\r\n        let that = this;\r\n        if (that.db == null) {\r\n            that.initsql.then((SQL1) => {\r\n                that.SQL = SQL1;\r\n                that.db = createDb(SQL1, undefined);\r\n                that.worker(data);\r\n            }).catch((err) => {\r\n                console.log(err);\r\n                //@ts-ignore\r\n                return that.postMessageToClient({\r\n                    id: this[\"data\"][\"id\"],\r\n                    error: err[\"message\"]\r\n                });\r\n            })\r\n        } else {\r\n            that.worker(data);\r\n        }\r\n    }\r\n\r\n    terminate() {\r\n\r\n    }\r\n\r\n    worker(data: any) {\r\n        var buff; var result;\r\n        var config = data[\"config\"] ? data[\"config\"] : {};\r\n        try {\r\n            switch (data && data[\"action\"]) {\r\n                case \"open\":\r\n                    buff = data[\"buffer\"];\r\n                    this.db = createDb(this.SQL, buff && new Uint8Array(buff));\r\n                    //@ts-ignore\r\n                    return this.postMessageToClient({\r\n                        id: data[\"id\"],\r\n                        ready: true\r\n                    });\r\n                case \"exec\":\r\n                    if (this.db === null) {\r\n                        this.db = createDb(this.SQL, undefined);\r\n                    }\r\n                    if (!data[\"sql\"]) {\r\n                        throw \"exec: Missing query string\";\r\n                    }\r\n                    //@ts-ignore\r\n                    return this.postMessageToClient({\r\n                        id: data[\"id\"],\r\n                        results: this.db.exec(data[\"sql\"], data[\"params\"], config)\r\n                    });\r\n                case \"each\":\r\n                    if (this.db === null) {\r\n                        this.db = createDb(this.SQL, undefined);\r\n                    }\r\n                    var callback = function callback(row) {\r\n                        //@ts-ignore\r\n                        return this.postMessage({\r\n                            id: data[\"id\"],\r\n                            row: row,\r\n                            finished: false\r\n                        });\r\n                    };\r\n                    var done = function done() {\r\n                        //@ts-ignore\r\n                        return this.postMessage({\r\n                            id: data[\"id\"],\r\n                            finished: true\r\n                        });\r\n                    };\r\n                    return this.db.each(data[\"sql\"], data[\"params\"], callback, done, config);\r\n                case \"export\":\r\n                    buff = this.db[\"export\"]();\r\n                    result = {\r\n                        id: data[\"id\"],\r\n                        results: [\r\n                            {\r\n                                buffer: buff\r\n                            }\r\n                        ]\r\n                    };\r\n                    try {\r\n                        //@ts-ignore\r\n                        return this.postMessageToClient(result);\r\n                    } catch (error) {\r\n                        //@ts-ignore\r\n                        return this.postMessageToClient(result);\r\n                    }\r\n                case \"close\":\r\n                    if (this.db) {\r\n                        this.db.close();\r\n                    }\r\n                    //@ts-ignore\r\n                    return this.postMessageToClient({\r\n                        id: data[\"id\"]\r\n                    });\r\n                default:\r\n                    throw new Error(\"Invalid action : \" + (data && data[\"action\"]));\r\n            }\r\n\r\n        } catch (err) {\r\n\r\n            //@ts-ignore\r\n            return this.postMessageToClient({\r\n                id: data[\"id\"],\r\n                error: err[\"message\"]\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import { MainBase } from \"../main/MainBase.js\";\r\nimport { WorkerSim } from \"../sqljs-worker/sqljsWorkerSim.js\";\r\n\r\nexport type DatabaseDumpType = \"binaryUncompressed\" | \"binaryCompressed\" | \"other\";\r\n\r\nexport type DatabaseDirectoryEntry = {\r\n    name: string,\r\n    description: string,\r\n    filename: string\r\n}\r\n\r\nexport type QueryResult = {\r\n    columns: string[],\r\n    values: any[][],\r\n    buffer?: Uint8Array\r\n}\r\n\r\nexport type QuerySuccessCallback = (results: QueryResult[]) => void;\r\nexport type QueryErrorCallback = (error: string) => void;\r\n\r\nexport type ColumnStructure = {\r\n    name: string;\r\n    table: TableStructure;\r\n\r\n    typeLengths?: number[]; // for varchar(5), ...\r\n    completeTypeSQL: string;\r\n\r\n    references?: ColumnStructure;\r\n    referencesRawData?: any[];\r\n    isPrimaryKey: boolean;\r\n    isAutoIncrement: boolean;\r\n\r\n    notNull: boolean;\r\n    defaultValue: string;\r\n\r\n    dumpValueFunction?: (any) => string\r\n}\r\n\r\nexport type TableStructure = {\r\n    name: string;\r\n    size: number;\r\n    columns: ColumnStructure[];\r\n    completeSQL: string;\r\n}\r\n\r\nexport type DatabaseStructure = {\r\n    tables: TableStructure[]\r\n}\r\n\r\n\r\nexport class DatabaseTool {\r\n\r\n    databaseDirectoryEntries: DatabaseDirectoryEntry[] = null;\r\n\r\n    worker: Worker;\r\n\r\n    queryId: number = 0;\r\n\r\n    querySuccessCallbacksMap: Map<number, QuerySuccessCallback> = new Map();\r\n    queryErrorCallbackMap: Map<number, QueryErrorCallback> = new Map();\r\n\r\n    databaseStructure: DatabaseStructure;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    initializeWorker(template: Uint8Array, queries: string[], callbackAfterInitializing?: (errors: string[]) => void,\r\n        callbackAfterRetrievingStructure?: () => void) {\r\n        \r\n        this.main.getWaitOverlay().show('Bitte warten, die Datenbank wird initialisiert...');\r\n        \r\n            if (this.worker != null) {\r\n            this.worker.terminate();\r\n        }\r\n\r\n        let t = performance.now();\r\n\r\n        // console.log(\"Starting worker...\");\r\n\r\n        let url: string = \"js/sqljs-worker/sqljsWorker.js\"\r\n        if(this.main.isEmbedded()){\r\n            //@ts-ignore\r\n            url = window.javaOnlineDir + url;\r\n        }\r\n\r\n        //@ts-ignore\r\n        if(window.jo_doc){\r\n            //@ts-ignore\r\n            this.worker = new WorkerSim();\r\n        } else {\r\n            this.worker = new Worker(url);\r\n        }\r\n        let that = this;\r\n\r\n        let errors: string[] = [];\r\n\r\n        this.worker.onmessage = () => {\r\n            // console.log(\"Database opened (\" + (performance.now() - t)/1000 + \" s)\");\r\n            that.worker.onmessage = event => {\r\n\r\n                // console.log(event.data);\r\n\r\n                let id = event.data.id;\r\n                if (event.data.error == null) {\r\n                    let querySuccessCallback = that.querySuccessCallbacksMap.get(id);\r\n                    if (querySuccessCallback != null) {\r\n                        querySuccessCallback(event.data.results);\r\n                    }\r\n                } else {\r\n                    let queryErrorCallback = that.queryErrorCallbackMap.get(id);\r\n                    if (queryErrorCallback != null) {\r\n                        queryErrorCallback(event.data.error);\r\n                    }\r\n                }\r\n\r\n                // if(event.data.buffer){\r\n                //     console.log(event.data.buffer);\r\n                // }\r\n\r\n\r\n                this.queryErrorCallbackMap.delete(id);\r\n                this.querySuccessCallbacksMap.delete(id);\r\n\r\n            };\r\n\r\n            if(queries == null) queries = [];\r\n            queries = queries.slice();\r\n            let queryCount = queries.length;\r\n\r\n            let execQuery = () => {\r\n                if (queries.length > 0) {\r\n                    this.main.getWaitOverlay().setProgress(`${Math.round((1-queries.length/queryCount)*100) + \" %\"}`)\r\n                    let query = queries.shift();\r\n                    that.executeQuery(query, (result) => {\r\n                        execQuery();\r\n                    }, (error) => {\r\n                        errors.push(\"Error while setting up database: \" + error + \", query: \" + query);\r\n                        console.log({\"error\": \"Error while setting up database: \" + error, \"query\": query});\r\n                        console.log()\r\n                        execQuery();\r\n                    })\r\n                } else {\r\n                    if (callbackAfterInitializing != null) callbackAfterInitializing(errors);\r\n                    that.retrieveDatabaseStructure(() => {\r\n                        // console.log(\"Database structure retrieved (\" + (performance.now() - t)/1000 + \" s)\");\r\n                        if (callbackAfterRetrievingStructure) callbackAfterRetrievingStructure();\r\n                        this.main.getWaitOverlay().hide();\r\n\r\n                    });\r\n                }\r\n            }\r\n\r\n            execQuery();\r\n\r\n            // that.executeQuery(sql, (result) => {\r\n            //     // console.log(\"Template written (\" + (performance.now() - t)/1000 + \" s)\");\r\n\r\n            //     if (callbackAfterInitializing != null) callbackAfterInitializing();\r\n            //     that.retrieveDatabaseStructure(() => {\r\n            //         // console.log(\"Database structure retrieved (\" + (performance.now() - t)/1000 + \" s)\");\r\n            //         if (callbackAfterRetrievingStructure) callbackAfterRetrievingStructure();\r\n            //         jQuery('#bitteWarten').css('display', 'none');\r\n\r\n            //     });\r\n            //     // that.executeQuery(\"select * from test\", (results: QueryResult[]) => {console.log(results)}, (error) => {console.log(\"Error:\" + error)});\r\n            // },\r\n            //     (error) => {\r\n            //         console.log(\"Error while setting up database: \" + error);\r\n            //     });\r\n\r\n            // that.worker.postMessage({\r\n            //     action: \"export\"\r\n            // })\r\n\r\n        };\r\n\r\n        this.worker.onerror = (e) => {\r\n            errors.push(\"Worker error: \" + e.error);\r\n            console.log(\"Worker error: \" + e.error);\r\n        }\r\n\r\n        this.worker.postMessage({\r\n            id: that.queryId++,\r\n            action: \"open\",\r\n            buffer: template, /*Optional. An ArrayBuffer representing an SQLite Database file*/\r\n        });\r\n\r\n    }\r\n\r\n    executeQuery(query: string, successCallback: QuerySuccessCallback, errorCallback: QueryErrorCallback) {\r\n\r\n        let id = this.queryId++;\r\n\r\n        this.querySuccessCallbacksMap.set(id, successCallback);\r\n        this.queryErrorCallbackMap.set(id, errorCallback);\r\n\r\n        this.worker.postMessage({\r\n            id: id,\r\n            action: \"exec\",\r\n            sql: query,\r\n            params: {}\r\n        });\r\n\r\n    }\r\n\r\n    export(successCallback: (buffer: Uint8Array) => void, errorCallback: QueryErrorCallback) {\r\n\r\n        let id = this.queryId++;\r\n\r\n        this.querySuccessCallbacksMap.set(id, (results) => { successCallback(results[0].buffer)  });\r\n        this.queryErrorCallbackMap.set(id, errorCallback);\r\n\r\n        this.worker.postMessage({\r\n            id: id,\r\n            action: \"export\",\r\n            params: {}\r\n        });\r\n\r\n    }\r\n\r\n    \r\n\r\n    getDirectoryEntries(callback: (entries: DatabaseDirectoryEntry[]) => void) {\r\n        if (this.databaseDirectoryEntries != null) {\r\n            callback(this.databaseDirectoryEntries);\r\n        } else {\r\n            jQuery.getJSON(\"assets/databases/directory.json\", function (entries: DatabaseDirectoryEntry[]) {\r\n                callback(entries);\r\n            });\r\n        }\r\n    }\r\n\r\n    retrieveDatabaseStructure(callback: (dbStructure: DatabaseStructure) => void) {\r\n\r\n        /*\r\n            @see https://stackoverflow.com/questions/6460671/sqlite-schema-information-metadata\r\n        */\r\n        let sql = `SELECT name, sql FROM sqlite_master WHERE type='table';`\r\n        let that = this;\r\n\r\n        this.executeQuery(sql, (result) => {\r\n            let sql1 = \"\";\r\n            result[0]?.values?.forEach(value => sql1 += `PRAGMA table_info(${value[0]});\\nPRAGMA foreign_key_list(${value[0]});\\nselect count(*) from ${value[0]};\\n\\n`)\r\n\r\n            if (sql1 != \"\") {\r\n                this.executeQuery(sql1, (result1) => {\r\n                    // console.log(\"DB structure: \");\r\n                    // console.log(result1);\r\n\r\n                    that.databaseStructure = that.parseDatabaseStructure(result, result1)\r\n\r\n                    callback(that.databaseStructure);\r\n\r\n                }, (error) => { console.log(error)});\r\n            } else {\r\n                that.databaseStructure = { tables: [] };\r\n                callback(that.databaseStructure);\r\n            }\r\n\r\n        }, (error) => { console.log(error) });\r\n\r\n\r\n    }\r\n\r\n    parseDatabaseStructure(tables: QueryResult[], columns: QueryResult[]): DatabaseStructure {\r\n        this.databaseStructure = {\r\n            tables: []\r\n        };\r\n\r\n        let tableNameToStructureMap: Map<string, TableStructure> = new Map();\r\n\r\n        let index = 0;\r\n        for (let i = 0; i < tables[0].values.length; i++) {\r\n            let tableName = tables[0].values[i][0];\r\n            let tableSQL = tables[0].values[i][1];\r\n\r\n            let tableStructure: TableStructure = {\r\n                name: tableName,\r\n                size: 0,\r\n                completeSQL: tableSQL,\r\n                columns: []\r\n            }\r\n\r\n            tableNameToStructureMap.set(tableName, tableStructure);\r\n\r\n            this.databaseStructure.tables.push(tableStructure);\r\n\r\n            let columnArray = columns[index].values;\r\n            let foreignKeyList: any[][] = null;\r\n            if (columns.length > index + 1 && columns[index + 1].columns[0] == \"id\") {\r\n                foreignKeyList = columns[index + 1].values;\r\n                index++;\r\n            }\r\n            index++;\r\n            let size: number = columns[index].values[0][0];\r\n            index++;\r\n\r\n            tableStructure.size = size;\r\n\r\n            columnArray.forEach(columnArray1 => {\r\n                let cid: number = columnArray1[0];\r\n                let name: string = columnArray1[1];\r\n                let type: string = columnArray1[2];\r\n                let notNull: boolean = columnArray1[3] == 1;\r\n                let dflt_value: string = columnArray1[4];\r\n                let isPrimaryKey: boolean = columnArray1[5] != 0;\r\n\r\n                let columnStructure: ColumnStructure = {\r\n                    name: name,\r\n                    isPrimaryKey: isPrimaryKey,\r\n                    isAutoIncrement: isPrimaryKey && tableSQL.toLowerCase().indexOf(\"autoincrement\") >= 0,\r\n                    completeTypeSQL: type,\r\n                    table: tableStructure,\r\n                    typeLengths: [],\r\n                    defaultValue: dflt_value,\r\n                    notNull: notNull\r\n                }\r\n                /*\r\n                    columns: (8) [\"id\", \"seq\", \"table\", \"from\", \"to\", \"on_update\", \"on_delete\", \"match\"]\r\n                    values: Array(1)\r\n                    0: (8) [0, 0, \"land\", \"LNR\", \"lnr\", \"NO ACTION\", \"NO ACTION\", \"NONE\"]\r\n                */\r\n\r\n                if (foreignKeyList != null) {\r\n                    let fkInfo: any[] = foreignKeyList.find(foreignKeyInfo => foreignKeyInfo[3].toLocaleLowerCase() == name.toLocaleLowerCase());\r\n                    if (fkInfo != null) {\r\n                        columnStructure.referencesRawData = fkInfo;\r\n                    }\r\n                }\r\n\r\n                tableStructure.columns.push(columnStructure);\r\n\r\n            });\r\n\r\n        }\r\n\r\n        for (let ts of this.databaseStructure.tables) {\r\n            for (let cs of ts.columns) {\r\n                if (cs.referencesRawData != null) {\r\n                    let table = tableNameToStructureMap.get(cs.referencesRawData[2]);\r\n                    // SQlite doesn't remove foreign key references to columns of a dropped table\r\n                    if(table == null) continue;\r\n                    let column = table.columns.find(c => c.name.toLocaleLowerCase() == cs.referencesRawData[4].toLocaleLowerCase());\r\n                    cs.references = column;\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log(this.databaseStructure);\r\n\r\n        return this.databaseStructure;\r\n\r\n    }\r\n\r\n    static getDumpType(dump: Uint8Array): DatabaseDumpType {\r\n\r\n        let sqliteMagicBytes: number[] = [0x53, 0x51, 0x4c, 0x69, 0x74, 0x65];\r\n        let zlibMagicByte: number = 0x78;\r\n\r\n        let found: boolean = true;\r\n        for (let i = 0; i < sqliteMagicBytes.length; i++) {\r\n            if (sqliteMagicBytes[i] != dump[i]) {\r\n                found = false;\r\n                break;\r\n            }\r\n        }\r\n        if (found) return \"binaryUncompressed\";\r\n\r\n        if (dump[0] == zlibMagicByte) return \"binaryCompressed\";\r\n\r\n        return \"other\";\r\n\r\n    }\r\n\r\n\r\n}","import { TokenType } from \"../lexer/Token.js\";\r\nimport { ASTNode, ConstantNode, CreateTableColumnNode, CreateTableNode, ForeignKeyInfo, InsertNode } from \"./AST.js\";\r\nimport { SQLStatement } from \"./Parser.js\";\r\n\r\nexport class StatementCleaner {\r\n\r\n    MaxRowsPerInsert: number = 300;\r\n\r\n    clean(statement: SQLStatement): string {\r\n        switch(statement.ast.type){\r\n            case TokenType.keywordCreate:   // Create Table statement\r\n                statement.sqlCleaned = this.cleanCreateTableStatement(statement.ast);\r\n                return statement.sqlCleaned;\r\n            case TokenType.keywordInsert:\r\n                statement.sqlCleaned = this.cleanInsertStatement(statement.ast);\r\n                return statement.sqlCleaned;\r\n            default:\r\n                return statement.sql;\r\n                break;\r\n        }\r\n    }\r\n\r\n    cleanInsertStatement(ast: InsertNode): string {\r\n        let statementHeader: string = `insert into ${ast.table.identifier}`;\r\n\r\n        if(ast.columnList != null && ast.columnList.length > 0){\r\n            statementHeader += `(${ast.columnList.map(c => c.identifier).join(\", \")})`;\r\n        }\r\n\r\n        statementHeader += '\\nvalues\\n';\r\n\r\n        let st = \"\";\r\n        \r\n        let lines: string[] = [];\r\n        if(ast.values != null && ast.values.length > 0){\r\n            for(let vline of ast.values){\r\n                lines.push(`\\n(${vline.map(v => this.cleanValue(v)).join(\", \")})`);\r\n            }\r\n            //st += lines.join(\",\\n\");\r\n        }\r\n\r\n        while(lines.length > 0){\r\n            st += statementHeader;\r\n            st += lines.splice(0, Math.max(this.MaxRowsPerInsert, lines.length)).join(\",\\n\");\r\n            st += \";\\n\";\r\n        }\r\n\r\n        return st;\r\n    }\r\n\r\n    cleanValue(v: ConstantNode){\r\n        if(v.constantType == TokenType.stringConstant){\r\n            let s: string = v.constant;\r\n            s = s.replace(/'/g, \"''\");\r\n            return `'${s}'`;\r\n        }else {\r\n            return v.constant;\r\n        }\r\n    }\r\n\r\n    cleanCreateTableStatement(ast: CreateTableNode): string {\r\n        let st: string = `create table ${ast.ifNotExists?\" if not exists\":\"\"} ${ast.identifier}(\\n   `;\r\n\r\n        st += ast.columnList.map( column => this.cleanColumnDef(column)).join(\",\\n   \");\r\n        if(ast.foreignKeyInfoList != null && ast.foreignKeyInfoList.length > 0){\r\n            st += \",\\n\" + ast.foreignKeyInfoList.map(fki => this.cleanForeignKeyInfo(fki)).join(\",\\n   \");\r\n        }\r\n\r\n        let pkc = ast.combinedPrimaryKeyColumns.slice().map(s => s.toLocaleLowerCase());\r\n        for(let column of ast.columnList){\r\n            let c = column.identifier.toLocaleLowerCase();\r\n            if(column.isAutoIncrement && pkc.indexOf(c) >= 0){\r\n                pkc.splice(pkc.indexOf(c), 1);\r\n            }\r\n        }\r\n\r\n        if(pkc.length > 0){\r\n            st += `,\\nprimary key(${pkc.join(\", \")})`;\r\n        }\r\n        st += '\\n);';\r\n\r\n        return st;\r\n    }\r\n\r\n    cleanForeignKeyInfo(fki: ForeignKeyInfo): string {\r\n        return `${fki.column} references ${fki.referencesTable}(${fki.referencesColumn})`;\r\n    }\r\n\r\n    cleanColumnDef(column: CreateTableColumnNode):string {\r\n\r\n        let type = column.baseType.toString();\r\n        if(type == \"int\" && column.isAutoIncrement){\r\n            type = \"integer\";\r\n        }\r\n\r\n        let st: string = `${column.identifier} ${type}`;\r\n        if(column.parameters != null && column.parameters.length > 0){\r\n            st += `(${column.parameters.join(\", \")})`;\r\n        }\r\n        if(column.notNull){\r\n            st += \" not null\";\r\n        }\r\n        if(column.defaultValue != null){\r\n            st += \" default \" + column.defaultValue;\r\n        }\r\n        if(column.isPrimary || column.isAutoIncrement){\r\n            st += \" primary key\";\r\n        }\r\n        if(column.isAutoIncrement){\r\n            st += \" autoincrement\";\r\n        }\r\n        if(column.foreignKeyInfo != null){\r\n            let fki = column.foreignKeyInfo;\r\n            let c: string = fki.referencesColumn;\r\n            if(fki.referencesTable) c = fki.referencesTable + \"(\" + c + \")\";\r\n            st += \" references \" + c;\r\n        }\r\n        if(column.collate != null){\r\n            let collate = column.collate.toLocaleLowerCase();\r\n            if([\"binary\", \"nocase\", \"rtrim\"].indexOf(collate) >= 0){\r\n                st += \" collate \" + collate;\r\n            }\r\n        }\r\n        let parameters = column.parameters? column.parameters : [0, 0];\r\n        let checkFunction = column.baseType.checkFunction(column.identifier, parameters);\r\n        if(checkFunction != \"\"){\r\n            st += \" \" + checkFunction;\r\n        }\r\n        return st;\r\n    }\r\n\r\n}","import { Lexer } from \"../compiler/lexer/Lexer.js\";\r\nimport { TokenType } from \"../compiler/lexer/Token.js\";\r\nimport { AlterTableNode, CreateTableNode, InsertNode } from \"../compiler/parser/AST.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { Parser, SQLStatement } from \"../compiler/parser/Parser.js\";\r\nimport { StatementCleaner } from \"../compiler/parser/StatementCleaner.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { LoadableDatabase } from \"./DatabaseLoader.js\";\r\nimport { DatabaseTool } from \"./DatabaseTools.js\";\r\n\r\nexport class MySqlImporter {\r\n\r\n    private createTableNodes: CreateTableNode[];\r\n    private insertNodes: InsertNode[];\r\n    private tableModifyingNodes: AlterTableNode[];\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    async loadFromUrl(url: string): Promise<LoadableDatabase> {\r\n        if (url == null) return;\r\n\r\n        let text = null;\r\n        if (url.endsWith(\".zip\")) {\r\n            text = await this.unzipURL(url);\r\n        } else {\r\n            text = await (await fetch(url)).text();\r\n        }\r\n\r\n        return this.importFromText(text);\r\n    }\r\n\r\n    async loadFromFile(file: globalThis.File): Promise<LoadableDatabase> {\r\n        if (file == null) return;\r\n\r\n        if (file.name.endsWith(\".zip\")) {\r\n            let text = await this.unzipFile(file);\r\n            return this.importFromText(text);\r\n        } else {\r\n\r\n            return new Promise<LoadableDatabase>(\r\n                (resolve, reject) => {\r\n                    var reader = new FileReader();\r\n                    reader.onload = (event) => {\r\n                        let text = <string>event.target.result;\r\n                        resolve(this.importFromText(text));\r\n                    };\r\n                    reader.readAsText(file);\r\n                }\r\n            )\r\n\r\n\r\n        }\r\n    }\r\n\r\n    async unzipURL(url: string): Promise<string> {\r\n        //@ts-ignore\r\n        const reader = new zip.ZipReader(new zip.HttpReader(url));\r\n        return this.unzipIntern(reader);\r\n    }\r\n\r\n    async unzipFile(file: globalThis.File): Promise<string> {\r\n        // create a BlobReader to read with a ZipReader the zip from a Blob object\r\n        //@ts-ignore\r\n        const reader = new zip.ZipReader(new zip.BlobReader(file));\r\n        return this.unzipIntern(reader);\r\n    }\r\n\r\n    async unzipIntern(reader: any): Promise<string> {\r\n        // get all entries from the zip\r\n        let entries = await reader.getEntries();\r\n        entries = entries.filter(entry => entry.filename.endsWith(\".sql\"))\r\n        let text: string = null;\r\n        if (entries.length) {\r\n\r\n            // get first entry content as text by using a TextWriter\r\n            text = await entries[0].getData(\r\n                // writer\r\n                //@ts-ignore\r\n                new zip.TextWriter(),\r\n                // options\r\n                {\r\n                    onprogress: (index, max) => {\r\n                        // onprogress callback\r\n                    }\r\n                }\r\n            );\r\n        }\r\n\r\n        // close the ZipReader\r\n        await reader.close();\r\n\r\n        return text;\r\n    }\r\n\r\n    private async importFromText(text: string): Promise<LoadableDatabase> {\r\n        if (text == null) return null;\r\n\r\n        let lexer: Lexer = new Lexer();\r\n        let lexOutput = lexer.lex(text);\r\n\r\n        let parser: Parser = new Parser();\r\n        let m: Module = new Module({\r\n            dirty: false,\r\n            name: \"\",\r\n            saved: true,\r\n            student_edited_after_revision: false,\r\n            submitted_date: null,\r\n            text: text,\r\n            text_before_revision: null,\r\n            version: 0\r\n        }, this.main);\r\n        m.tokenList = lexOutput.tokens;\r\n\r\n        parser.parse(m);\r\n\r\n        this.createTableNodes = m.sqlStatements.filter(st => st.ast.type == TokenType.keywordCreate).map(st => <CreateTableNode>st.ast);\r\n        this.insertNodes = m.sqlStatements.filter(st => st.ast.type == TokenType.keywordInsert).map(st => <InsertNode>st.ast);\r\n        this.tableModifyingNodes = m.sqlStatements.filter(st => st.ast.type == TokenType.keywordAlter &&\r\n            (<AlterTableNode>st.ast).kind == \"omittedKind\").map(st => <AlterTableNode>st.ast);\r\n\r\n        for (let tmn of this.tableModifyingNodes) {\r\n            let createTableNode = this.findCreateTableNode(tmn.tableIdentifier);\r\n            if (createTableNode == null) continue;\r\n\r\n            if (tmn.primaryKeys != null) {\r\n                createTableNode.combinedPrimaryKeyColumns = tmn.primaryKeys;\r\n                createTableNode.columnList.forEach(c => c.isPrimary = false);\r\n            }\r\n\r\n            if (tmn.autoIncrementColumn != null) {\r\n                let pcn = this.findCreateTableColumnNode(createTableNode, tmn.autoIncrementColumn);\r\n                if (pcn != null) pcn.isPrimary = true;\r\n            }\r\n\r\n            if (tmn.modifyColumnInfo != null) {\r\n                for (let mci of tmn.modifyColumnInfo) {\r\n                    let mcn = this.findCreateTableColumnNode(createTableNode, mci.identifier);\r\n                    let index = createTableNode.columnList.indexOf(mcn);\r\n                    createTableNode.columnList.splice(index, 1, mci);\r\n                }\r\n            }\r\n\r\n            if (tmn.foreignKeys != null) {\r\n                for (let fk of tmn.foreignKeys) {\r\n                    createTableNode.foreignKeyInfoList.push(fk);\r\n                }\r\n            }\r\n\r\n            if (tmn.indices != null) {\r\n                for (let index of tmn.indices) {\r\n                    m.sqlStatements.push({\r\n                        acceptedBySQLite: true,\r\n                        from: null, to: null, hasErrors: false,\r\n                        ast: {\r\n                            type: TokenType.keywordIndex,\r\n                            columnIdentifier: index.column,\r\n                            indexIdentifier: index.index_name,\r\n                            tableIdentifier: tmn.tableIdentifier,\r\n                            unique: index.unique,\r\n                            position: null, endPosition: null, symbolTable: null\r\n                        },\r\n                        sql: `create ${index.unique ? 'unique ' : ''} index ${index.index_name} on ${tmn.tableIdentifier}(${index.column});`\r\n                    })\r\n                }\r\n            }\r\n        }\r\n\r\n        return this.makeDatabase(m.sqlStatements);\r\n    }\r\n\r\n    private findCreateTableNode(tableIdentifier: string): CreateTableNode {\r\n        tableIdentifier = tableIdentifier.toLocaleLowerCase();\r\n        return this.createTableNodes.find(node => node.identifier.toLocaleLowerCase() == tableIdentifier);\r\n    }\r\n\r\n    private findCreateTableColumnNode(tableNode: CreateTableNode, columnIdentifier: string) {\r\n        columnIdentifier = columnIdentifier.toLocaleLowerCase();\r\n        return tableNode.columnList.find(columnNode => columnNode.identifier.toLocaleLowerCase() == columnIdentifier)\r\n    }\r\n\r\n    private async makeDatabase(statements: SQLStatement[]): Promise<LoadableDatabase> {\r\n\r\n        let statementCleaner: StatementCleaner = new StatementCleaner();\r\n\r\n        let sqlStatements: string[] = statements.filter(st => st.ast.type != TokenType.omittedeStatement)\r\n            .map(st => statementCleaner.clean(st));\r\n        sqlStatements.unshift(\"PRAGMA foreign_keys = OFF;\");\r\n        sqlStatements.push(\"PRAGMA foreign_keys = ON;\")\r\n\r\n        let dbTool = new DatabaseTool(this.main);\r\n\r\n        let promise = new Promise<LoadableDatabase>((resolve, reject) => {\r\n            dbTool.initializeWorker(null, sqlStatements, () => {\r\n                dbTool.export((buffer) => {\r\n                    resolve({\r\n                        binDump: buffer\r\n                    })\r\n                }, (error) => {\r\n                    reject(error);\r\n                })\r\n            });\r\n\r\n        })\r\n\r\n        return promise;\r\n\r\n    }\r\n\r\n\r\n}","import { MainBase } from \"../main/MainBase.js\";\r\nimport { LoadableDatabase } from \"./DatabaseLoader.js\";\r\nimport { DatabaseTool } from \"./DatabaseTools.js\";\r\nimport { downloadFile } from \"./HtmlTools.js\";\r\nimport { MySqlImporter } from \"./MySqlImporter.js\";\r\n\r\nexport class DatabaseImportExport {\r\n\r\n    async loadFromFile(file: globalThis.File, main: MainBase): Promise<LoadableDatabase>{\r\n        let that = this;\r\n        if (file == null) return;\r\n        main.getWaitOverlay().show(\"Lese Datei ein...\");\r\n        if(file.name.endsWith(\".sql\") || file.name.endsWith(\".zip\")){\r\n            let ld = await new MySqlImporter(main).loadFromFile(file);\r\n            main.getWaitOverlay().hide();\r\n            return ld;\r\n        } else {\r\n            var reader = new FileReader();\r\n            return new Promise<LoadableDatabase>((resolve, reject) => {\r\n                reader.onload = (event) => {\r\n                    let ab: ArrayBuffer = <ArrayBuffer>event.target.result;\r\n                    let db: Uint8Array = new Uint8Array(ab);\r\n        \r\n                    //@ts-ignore\r\n                    if(DatabaseTool.getDumpType(db) == \"binaryCompressed\") db = pako.inflate(db);\r\n                    \r\n                    main.getWaitOverlay().hide();\r\n                    resolve({binDump: db});\r\n                };\r\n                reader.readAsArrayBuffer(file);\r\n    \r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    saveToFile(dbTool: DatabaseTool){\r\n        dbTool.export((db) => {\r\n            let filename: string = prompt(\"Bitte geben Sie den Dateinamen ein\", \"datenbank.sqLite\");\r\n            if (filename == null) {\r\n                alert(\"Der Dateiname ist leer, daher wird nichts gespeichert.\");\r\n                return;\r\n            }\r\n            if (!filename.endsWith(\".sqLite\")) filename = filename + \".sqLite\";\r\n            downloadFile(new Blob([db.buffer]), filename, true);\r\n        }, () => {});\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { CreateWorkspaceData, WorkspaceData } from \"../../communication/Data.js\";\r\nimport { DatabaseImportExport } from \"../../tools/DatabaseImportExport.js\";\r\nimport { LoadableDatabase } from \"../../tools/DatabaseLoader.js\";\r\nimport { DatabaseTool } from \"../../tools/DatabaseTools.js\";\r\nimport { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { TemplateUploader } from \"../../tools/TemplateUploader.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionElement } from \"./Accordion.js\";\r\n\r\ntype CreateMode = \"emptyDatabase\" | \"fromTemplate\" | \"useExistingDatabase\" | \"useDumpFile\";\r\n\r\nexport class NewDatabaseDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    database: LoadableDatabase;\r\n\r\n    constructor(private main: Main, private owner_id: number, private path: string[]) {\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Neue Datenbank anlegen</div>\r\n\r\n            <div class=\"jo_ds_settings\">\r\n               <div class=\"jo_ds_settings_caption\">Name der Datenbank:</div><div><input class=\"dialog-input jo_databasename\" value=\"Neue Datenbank\"></input></div>\r\n            </div>\r\n\r\n             <div class=\"jo_tabheadings jo_cdtabheading\">\r\n             <div class=\"jo_tabheading\" data-target=\"jo_createEmptyDatabaseTab\">Leere Datenbank</div>\r\n             <div class=\"jo_tabheading jo_active\" data-target=\"jo_createDatabaseFromTemplateTab\">Von Vorlage kopieren</div>\r\n             <div class=\"jo_tabheading\" data-target=\"jo_createDatabaseUseExistingTab\">Bestehende Datenbank mitnutzen</div>\r\n             <div class=\"jo_tabheading\" data-target=\"jo_createDatabaseUseDumpFile\">Import aus Dumpfile (SQLite- oder MySQL-Format)</div>\r\n             </div>\r\n             <div class=\"jo_tabs\" style=\"width: 100%; margin-top: 10px\">\r\n                 <div class=\"jo_createEmptyDatabaseTab\">\r\n                    <div class=\"jo_createDatabaseDescription\">\r\n                        Erstellt wird eine leere Datenbank.\r\n                    </div>\r\n                 </div>\r\n                 <div class=\"jo_createDatabaseFromTemplateTab jo_active\">\r\n                    <div class=\"jo_ds_settings\">\r\n                       <div class=\"jo_ds_settings_caption\">Vorlage suchen:</div><div><input class=\"dialog-input jo_templatename\"></input></div>\r\n                    </div>\r\n                    <div class=\"jo_scrollable jo_templatelist\"></div>\r\n                 </div>\r\n                <div class=\"jo_createDatabaseUseExistingTab\">\r\n                    <div class=\"jo_createDatabaseDescription\">Wenn Du die Datenbank einer anderen Nutzerin/eines anderen Nutzers mitnutzen möchtest, brauchst Du einen Zugriffscode von ihr/ihm. Er ist unter Datenbank->Einstellungen zu finden.            \r\n                    </div>\r\n                    <div class=\"jo_ds_settings\">\r\n                       <div class=\"jo_ds_settings_caption\">Zugriffscode:</div><div><input class=\"dialog-input jo_databasecodeinput\"></input></div>\r\n                    </div>\r\n                 </div>\r\n                <div class=\"jo_createDatabaseUseDumpFile\">\r\n                    <div class=\"jo_createDatabaseDescription\">Wähle hier die Datei mit dem Datenbank-Dump aus (Endung .sqLite (SQLite-Datenbankdatei) oder .zip (gepackter MySql-Dump) oder .sql (MySql-Dump)):</div>\r\n                    <input type=\"file\" class=\"jo_dumpfile\" name=\"dumpfile\" style=\"padding: 10px\"/>\r\n                    <div class=\"jo_databaseimport_dropzone\" style=\"width: 70vw; margin-left: 10px\">Alternativ: Datei in dieses Feld ziehen</div>\r\n                    <div class=\"jo_databaseimport_ok\"></div>\r\n                 </div>\r\n             </div>\r\n\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_create_database_button\">Datenbank anlegen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        makeTabs(this.$dialog);\r\n\r\n        let $templatelist = jQuery('.jo_templatelist');\r\n        this.main.networkManager.fetchTemplateList((templatelist) => {\r\n            templatelist.forEach(tle => {\r\n\r\n                let $tle = jQuery('<div class=\"jo_templateListEntry\"></div>')\r\n                $tle.append(jQuery(`<div class=\"jo_tle_firstline\">${tle.name} <span class=\"jo_tle_ownername\"> (von ${tle.ownerName})</span></div>`))\r\n                $tle.append(jQuery(`<div class=\"jo_tle_secondline\">${tle.description}</div>`))\r\n                $tle.data('templateId', tle.id);\r\n                $tle.data('name', tle.name);\r\n\r\n                $templatelist.append($tle);\r\n                tle.$tle = <JQuery<HTMLDivElement>>$tle;\r\n\r\n                $tle.on('pointerdown', () => {\r\n                    $templatelist.find('.jo_templateListEntry').removeClass('jo_active');\r\n                    $tle.addClass('jo_active');\r\n                })\r\n\r\n            })\r\n            let $templateName = <JQuery<HTMLInputElement>>jQuery('.jo_templatename');\r\n            $templateName.on('input', () => {\r\n                let s = <string>$templateName.val();\r\n                $templatelist.find('.jo_templateListEntry').hide();\r\n                templatelist.forEach(tle => {\r\n                    let tleString = tle.name + tle.ownerName + (tle.description ? tle.description : \"\");\r\n                    if (tleString.indexOf(s) >= 0) tle.$tle.show();\r\n                })\r\n            })\r\n        })\r\n\r\n        let $dropZone = jQuery('.jo_databaseimport_dropzone');\r\n\r\n        $dropZone.on('dragover', (evt) => {\r\n            evt.stopPropagation();\r\n            evt.preventDefault();\r\n            evt.originalEvent.dataTransfer.dropEffect = 'copy';\r\n        })\r\n        $dropZone.on('drop', (evt) => {\r\n            evt.stopPropagation();\r\n            evt.preventDefault();\r\n\r\n            var files = evt.originalEvent.dataTransfer.files;\r\n            this.importFile(files);\r\n        })\r\n\r\n        let $dumpFileInput = jQuery('.jo_dumpfile');\r\n        $dumpFileInput.on('change', (event) => {\r\n            //@ts-ignore\r\n            var files: FileList = event.originalEvent.target.files;\r\n            this.importFile(files).then(() => {\r\n                $dumpFileInput.val(null);\r\n            });\r\n\r\n        })\r\n\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { this.showMainWindow(); });\r\n        jQuery('#jo_ds_create_database_button').on('click', () => {\r\n            let createMode: CreateMode = \"emptyDatabase\";\r\n            if (jQuery('.jo_createDatabaseFromTemplateTab').hasClass('jo_active')) createMode = \"fromTemplate\";\r\n            if (jQuery('.jo_createDatabaseUseExistingTab').hasClass('jo_active')) createMode = \"useExistingDatabase\";\r\n            if (jQuery('.jo_createDatabaseUseDumpFile').hasClass('jo_active')) createMode = \"useDumpFile\";\r\n\r\n            let workspaceData: CreateWorkspaceData = {\r\n                id: null,\r\n                isFolder: false,\r\n                name: <string>jQuery('.dialog-input.jo_databasename').val(),\r\n                path: this.path.join(\"/\"),\r\n            }\r\n\r\n            switch (createMode) {\r\n                case \"emptyDatabase\":\r\n                    this.createWorkspace(workspaceData);\r\n                    break;\r\n                case \"fromTemplate\":\r\n                    let $template = jQuery('.jo_templateListEntry.jo_active');\r\n                    if ($template.length != 1) {\r\n                        alert('Bitte wählen Sie genau eine Vorlage aus.');\r\n                        return;\r\n                    } else {\r\n                        workspaceData.template_database_id = $template.data('templateId');\r\n                        if (workspaceData.name == \"Neue Datenbank\") workspaceData.name = $template.data('name');\r\n                        this.createWorkspace(workspaceData);\r\n                    }\r\n                    break;\r\n                case \"useExistingDatabase\":\r\n                    let code = <string>jQuery('.jo_databasecodeinput').val();\r\n                    let tIndex = code.indexOf(\"T\");\r\n                    if (tIndex == -1) {\r\n                        alert(\"Der Zugriffscode muss das Zeichen T enthalten.\");\r\n                        return;\r\n                    }\r\n                    workspaceData.otherDatabaseId = Number.parseInt(code.substring(0, tIndex));\r\n                    workspaceData.secret = code.substring(tIndex + 1);\r\n                    this.createWorkspace(workspaceData);\r\n                    break;\r\n                case \"useDumpFile\":\r\n                    if (this.database != null) {\r\n                        new TemplateUploader().uploadCurrentDatabase(-1, this.main, this.database.binDump,\r\n                            \"uploadBaseTemplateForWorkspace\",\r\n                            (response) => {\r\n                            workspaceData.template_id = response.newTemplateId;\r\n                            this.createWorkspace(workspaceData);\r\n                        });\r\n\r\n                    } else {\r\n                        alert('Bitte laden Sie zuerst den Binärdump einer Datenbank hoch.')\r\n                        return;\r\n                    }\r\n                    break;\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    private createWorkspace(workspaceData: CreateWorkspaceData) {\r\n        this.main.networkManager.sendCreateWorkspace(workspaceData, this.owner_id, (error?: string) => {\r\n            if (error != null) { alert(error); return; }\r\n\r\n            let w = this.main.createNewWorkspace(workspaceData.name, this.owner_id);\r\n            w.path = workspaceData.path;\r\n            w.id = workspaceData.id;\r\n            w.sql_history = \"\";\r\n\r\n            let projectExplorer = this.main.projectExplorer;\r\n\r\n            this.main.workspaceList.push(w);\r\n            let accordionElement: AccordionElement = {\r\n                name: workspaceData.name,\r\n                externalElement: w,\r\n                iconClass: \"workspace\",\r\n                isFolder: false,\r\n                path: this.path\r\n            };\r\n\r\n            projectExplorer.workspaceListPanel.addElement(accordionElement, true);\r\n\r\n            w.renderSettingsButton(accordionElement);\r\n\r\n            projectExplorer.workspaceListPanel.sortElements();\r\n            projectExplorer.fileListPanel.sortElements();\r\n\r\n            projectExplorer.setWorkspaceActive(w);\r\n\r\n            this.showMainWindow();\r\n\r\n        });\r\n    }\r\n\r\n    async importFile(files: FileList) {\r\n        let that = this;\r\n        let importer = new DatabaseImportExport();\r\n        let db: LoadableDatabase = await importer.loadFromFile(files[0], this.main)\r\n        let isDatabase: boolean = false;\r\n        let dumpFileType = DatabaseTool.getDumpType(db.binDump);\r\n        if (dumpFileType == \"binaryCompressed\") {\r\n            // @ts-ignore\r\n            let dbUncompressed = pako.inflate(db.binDump);\r\n            if (DatabaseTool.getDumpType(dbUncompressed) == \"binaryUncompressed\") {\r\n                isDatabase = true;\r\n            }\r\n        } else if (DatabaseTool.getDumpType(db.binDump) == \"binaryUncompressed\") {\r\n            //@ts-ignore\r\n            db.binDump = pako.deflate(db.binDump);\r\n            isDatabase = true;\r\n        }\r\n\r\n        if (isDatabase) {\r\n            that.database = db;\r\n            jQuery('.jo_databaseimport_ok').html(\"Die Datenbankdatei wurde erfolgreich von Datei eingelesen. Sie können die Datenbank jetzt durch Klick auf den Button unten erstellen.\");\r\n        } else {\r\n            alert(\"In der Datei befindet sich kein Binärdump einer Datenbank.\");\r\n        }\r\n    }\r\n\r\n    showMainWindow() {\r\n        jQuery('#main').css('visibility', 'visible');\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n    }\r\n\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { PasswordChanger } from \"./UserMenu.js\";\r\nimport { DatabaseSettingsDialog } from \"./DatabaseSettingsDialog.js\";\r\nimport { DatabaseImportExport } from \"../../tools/DatabaseImportExport.js\";\r\nimport { NewDatabaseDialog } from \"./NewDatabaseDialog.js\";\r\n\r\nexport type Action = (identifier: string) => void;\r\n\r\ntype Menu = {\r\n    items: MenuItem[];\r\n    $element?: JQuery<HTMLElement>;\r\n    level?: number;\r\n}\r\n\r\ntype MenuItem = {\r\n    identifier: string;\r\n    $element?: JQuery<HTMLElement>;\r\n    action?: Action;\r\n    link?: string;\r\n    subMenu?: Menu;\r\n}\r\n\r\nexport class MainMenu {\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n\r\n    currentSubmenu: { [level: number]: JQuery<HTMLElement> } = {};\r\n    openSubmenusOnMousemove: boolean = false;\r\n\r\n    initGUI(user: UserData) {\r\n\r\n        let that = this;\r\n        let editor = this.main.getMonacoEditor();\r\n\r\n        let mainMenu: Menu = {\r\n            items: [\r\n                {\r\n                    identifier: \"Datei\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Speichern und Beenden\",\r\n                                action: () => { jQuery('#buttonLogout').trigger(\"click\"); }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Bearbeiten\", subMenu:\r\n                    {\r\n                        items: [\r\n                            { identifier: \"Rückgängig (Strg + z)\", action: () => { editor.trigger(\".\", \"undo\", {}); } },\r\n                            { identifier: \"Wiederholen (Strg + y)\", action: () => { editor.trigger(\".\", \"redo\", {}); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Kopieren (Strg + c)\", action: () => { editor.getAction(\"editor.action.clipboardCopyAction\").run(); } },\r\n                            { identifier: \"Ausschneiden (Strg + x)\", action: () => { editor.getAction(\"editor.action.clipboardCutAction\").run(); } },\r\n                            { identifier: \"Nach oben kopieren (Alt + Shift + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.copyLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten kopieren (Alt + Shift + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.copyLinesDownAction\").run(); } },\r\n                            { identifier: \"Nach oben verschieben (Alt + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.moveLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten verschieben (Alt + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.moveLinesDownAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Suchen... (Strg + f)\", action: () => { editor.getAction(\"actions.find\").run(); } },\r\n                            { identifier: \"Ersetzen... (Strg + h)\", action: () => { editor.getAction(\"editor.action.startFindReplaceAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Aus-/Einkommentieren (Strg + #)\", action: () => { editor.getAction(\"editor.action.commentLine\").run(); } },\r\n                            { identifier: \"Dokument formatieren (Alt + Shift + f)\", action: () => { editor.getAction(\"editor.action.formatDocument\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Finde zugehörige Klammer (Strg + k)\", action: () => { editor.getAction(\"editor.action.jumpToBracket\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Alles zusammenfalten\", action: () => { editor.getAction(\"editor.foldAll\").run(); } },\r\n                            { identifier: \"Alles auffalten\", action: () => { editor.getAction(\"editor.unfoldAll\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Vorschlag auslösen (Strg + Leertaste)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.triggerSuggest\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n                            { identifier: \"Parameterhilfe (Strg + Shift + Leertaste)\", action: () => { editor.getAction(\"editor.action.triggerParameterHints\").run(); } },\r\n                            {\r\n                                identifier: \"Gehe zur Definition (Strg + Click)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.revealDefinition\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Ansicht\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Theme\",\r\n                                subMenu: {\r\n                                    items: [\r\n                                        {\r\n                                            identifier: \"Dark\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"dark\");\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            identifier: \"Light\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"light\");\r\n                                            }\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Hoher Kontrast im Editor ein/aus\", action: () => { editor.getAction(\"editor.action.toggleHighContrast\").run(); } },\r\n\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Zoom out (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(-4); } },\r\n                            { identifier: \"Zoom normal\", action: () => { this.main.editor.setFontSize(14); } },\r\n                            { identifier: \"Zoom in (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(4); } },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Datenbank\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Neue Datenbank anlegen...\", action: () => {\r\n                                    let owner_id: number = that.main.user.id;\r\n                                    if (that.main.workspacesOwnerId != null) {\r\n                                        owner_id = that.main.workspacesOwnerId;\r\n                                    }\r\n\r\n                                    new NewDatabaseDialog(that.main, owner_id, []);\r\n                                }\r\n                            },\r\n                            { identifier: \"Einstellungen...\", action: () => { new DatabaseSettingsDialog(this.main, this.main.currentWorkspace) } },\r\n                            {\r\n                                identifier: \"Export als Binärdump (.sqLite-File)...\", action: () => {\r\n                                    new DatabaseImportExport().saveToFile(this.main.getDatabaseTool());\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n\r\n            ]\r\n        };\r\n\r\n        jQuery('#mainmenu').empty();\r\n        this.initMenu(mainMenu, 0);\r\n    }\r\n\r\n    switchTheme(theme: string) {\r\n        this.main.viewModeController.setTheme(theme);\r\n    }\r\n\r\n    initMenu(menu: Menu, level?: number) {\r\n\r\n        menu.level = level;\r\n\r\n        if (level == 0) {\r\n            menu.$element = jQuery('#mainmenu');\r\n        } else {\r\n            menu.$element = jQuery('<div class=\"jo_submenu\"></div>');\r\n            jQuery('body').append(menu.$element);\r\n        }\r\n\r\n        menu.$element.data('model', menu);\r\n        for (let mi of menu.items) {\r\n            if (mi.identifier == '-') {\r\n                mi.$element = jQuery('<div class=\"jo_menuitemdivider\"></div>');\r\n            } else {\r\n                mi.$element = jQuery('<div>' + mi.identifier + '</div>');\r\n                if (mi.link != null) {\r\n                    let $link = jQuery('<a href=\"' + mi.link + '\" target=\"_blank\" class=\"jo_menulink\"></a>');\r\n                    $link.on(\"mousedown\", (event) => {\r\n                        event.stopPropagation();\r\n                        setTimeout(() => {\r\n                            menu.$element.hide();\r\n                        }, 500);\r\n                    })\r\n                    $link.append(mi.$element);\r\n                    mi.$element = $link;\r\n                }\r\n                if (mi.subMenu != null) {\r\n                    this.initMenu(mi.subMenu, level + 1);\r\n                }\r\n                this.initMenuitemCallbacks(menu, mi);\r\n                if (level == 0) {\r\n                    mi.$element.addClass('jo_mainmenuitem');\r\n                }\r\n            }\r\n            menu.$element.append(mi.$element);\r\n            mi.$element.data('model', mi);\r\n        }\r\n\r\n        let that = this;\r\n        jQuery(document).on('mousedown', () => {\r\n            for (let i = 0; i < 5; i++) {\r\n                if (that.currentSubmenu[i] != null) {\r\n                    that.currentSubmenu[i].hide();\r\n                    that.currentSubmenu[i] = null;\r\n                }\r\n            }\r\n            that.openSubmenusOnMousemove = false;\r\n        });\r\n\r\n    }\r\n\r\n    initMenuitemCallbacks(menu: Menu, mi: MenuItem) {\r\n        let that = this;\r\n\r\n        if (mi.action != null) {\r\n            mi.$element.on('mousedown', (ev) => { mi.action(mi.identifier); });\r\n        }\r\n\r\n        if (mi.subMenu != null) {\r\n            mi.$element.on('mousedown', (ev) => {\r\n                that.opensubmenu(mi);\r\n                that.openSubmenusOnMousemove = true;\r\n                ev.stopPropagation();\r\n            });\r\n\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.openSubmenusOnMousemove) {\r\n                    that.opensubmenu(mi);\r\n                } else {\r\n                    if (that.currentSubmenu[menu.level + 1] != null) {\r\n                        that.currentSubmenu[menu.level + 1].hide();\r\n                        that.currentSubmenu[menu.level + 1] = null;\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.currentSubmenu[menu.level + 1] != null) {\r\n                    that.currentSubmenu[menu.level + 1].hide();\r\n                    that.currentSubmenu[menu.level + 1] = null;\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    opensubmenu(mi: MenuItem) {\r\n\r\n        let subMenu = mi.subMenu;\r\n\r\n        let left: number;\r\n        let top: number;\r\n        if (subMenu.level == 1) {\r\n            left = mi.$element.position().left;\r\n            top = 30;\r\n        } else {\r\n            left = mi.$element.offset().left + mi.$element.width();\r\n            top = mi.$element.offset().top;\r\n        }\r\n\r\n        subMenu.$element.css({\r\n            top: \"\" + top + \"px\",\r\n            left: \"\" + left + \"px\"\r\n        })\r\n\r\n        if (this.currentSubmenu[subMenu.level] != null) {\r\n            this.currentSubmenu[subMenu.level].hide();\r\n        }\r\n\r\n        subMenu.$element.show();\r\n        this.currentSubmenu[subMenu.level] = subMenu.$element;\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { openContextMenu, makeEditable, ContextMenuItem, animateToTransparent, jo_mouseDetected } from \"../../tools/HtmlTools.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { escapeHtml } from \"../../tools/StringTools.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type AccordionElement = {\r\n    name: string;\r\n    sortName?: string;      // if sortName == null, then name will be used when sorting\r\n    externalElement?: any;\r\n    iconClass?: string;\r\n    $htmlFirstLine?: JQuery<HTMLElement>;\r\n    $htmlSecondLine?: JQuery<HTMLElement>;\r\n\r\n    isFolder: boolean;\r\n    path: string[];\r\n}\r\n\r\nexport type AccordionContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: (panel: AccordionElement) => void;\r\n    subMenu?: AccordionContextMenuItem[]\r\n}\r\n\r\nexport class AccordionPanel {\r\n\r\n    elements: AccordionElement[] = [];\r\n\r\n    $captionElement: JQuery<HTMLElement>;\r\n    $buttonNew: JQuery<HTMLElement>;\r\n    $listElement: JQuery<HTMLElement>;\r\n\r\n    private fixed: boolean;\r\n\r\n    dontSortElements: boolean = false;\r\n\r\n    static currentlyDraggedElement: AccordionElement;\r\n    static currentlyDraggedElementKind: string;\r\n\r\n    newFilesElementCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    newDatabaseElementCallback: (path: string[]) => void;\r\n    newFolderCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    renameCallback: (externalElement: any, newName: string) => string;\r\n    deleteCallback: (externalElement: any, callbackIfSuccessful: () => void) => void;\r\n    selectCallback: (externalElement: any) => void;\r\n    addElementActionCallback: (accordionElement: AccordionElement) => JQuery<HTMLElement>;\r\n    contextMenuProvider: (externalElement: any) => AccordionContextMenuItem[];\r\n    moveCallback: (ae: AccordionElement | AccordionElement[]) => void;\r\n    dropElementCallback: (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => void;\r\n\r\n    $newFolderAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private accordion: Accordion, private caption: string, private flexWeight: string,\r\n        private newButtonClass: string, private buttonNewTitle: string,\r\n        private defaultIconClass: string, private withDeleteButton: boolean, private withFolders: boolean,\r\n        private kind: \"workspace\" | \"file\" | \"class\" | \"student\", private enableDrag: boolean, private acceptDropKinds: string[]) {\r\n\r\n        accordion.addPanel(this);\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        if (withFolders) {\r\n            let that = this;\r\n            this.$newFolderAction = jQuery('<div class=\"img_add-folder-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Neuen Ordner auf oberster Ebene anlegen\">');\r\n            this.$newFolderAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                let pathArray: string[] = [];\r\n\r\n                this.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                    this.newFolderCallback(newElement, () => {\r\n                        this.sortElements();\r\n                        newElement.$htmlFirstLine[0].scrollIntoView();\r\n                        animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                    });\r\n                });\r\n\r\n            })\r\n\r\n            this.addAction(this.$newFolderAction);\r\n\r\n\r\n            let $collapseAllAction = jQuery('<div class=\"img_collapse-all-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Alle Ordner zusammenfalten\">');\r\n            $collapseAllAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                that.collapseAll();\r\n\r\n            })\r\n\r\n            this.addAction($collapseAllAction);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    collapseAll() {\r\n        for (let element of this.elements) {\r\n            if (element.isFolder) {\r\n                if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                    element.$htmlFirstLine.removeClass('jo_expanded');\r\n                    element.$htmlFirstLine.addClass('jo_collapsed');\r\n                }\r\n            }\r\n            if (element.path.length > 0) {\r\n                element.$htmlFirstLine.slideUp(200);\r\n            }\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        this.$captionElement.remove();\r\n        this.$listElement.remove();\r\n    }\r\n\r\n    setFixed(fixed: boolean) {\r\n        this.fixed = fixed;\r\n        if (this.fixed) {\r\n            this.grow();\r\n            this.$captionElement.addClass('jo_fixed');\r\n        } else {\r\n            this.$captionElement.removeClass('jo_fixed');\r\n        }\r\n\r\n    }\r\n\r\n    //     <div class=\"jo_leftpanelcaption expanded\" id=\"workspace\" data-panel=\"filelistouter\">\r\n    //     <span>WORKSPACE</span>\r\n    //     <div class=\"jo_actions\"><img id=\"buttonNewFile\" title=\"Neue Datei hinzufügen\"\r\n    //             src=\"assets/projectexplorer/add-file-dark.svg\"></div>\r\n    // </div>\r\n    // <div id=\"filelistouter\" class=\"jo_projectexplorerdiv scrollable\" data-grow=\"3\"\r\n    //     style=\"flex-grow: 3\">\r\n    //     <div id=\"filelist\"></div>\r\n    // </div>\r\n\r\n\r\n    enableNewButton(enabled: boolean) {\r\n        if (this.$buttonNew != null) {\r\n            if (enabled) {\r\n                this.$buttonNew.show();\r\n            } else {\r\n                this.$buttonNew.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    getCurrentlySelectedPath(): string[] {\r\n        let pathArray: string[] = [];\r\n        let selectedElement = this.getSelectedElement();\r\n        if (selectedElement != null) {\r\n            pathArray = selectedElement.path.slice(0);\r\n            if (selectedElement.isFolder) pathArray.push(selectedElement.name);\r\n        }\r\n        return pathArray;\r\n    }\r\n\r\n    compareWithPath(name1: string, path1: string[], isFolder1: boolean, name2: string, path2: string[], isFolder2: boolean) {\r\n\r\n        path1 = path1.slice();\r\n        path1.push(name1);\r\n        name1 = \"\";\r\n\r\n        path2 = path2.slice();\r\n        path2.push(name2);\r\n        name2 = \"\";\r\n\r\n        let i = 0;\r\n        while (i < path1.length && i < path2.length) {\r\n            let cmp = path1[i].localeCompare(path2[i]);\r\n            if (cmp != 0) return cmp;\r\n            i++;\r\n        }\r\n\r\n        if (path1.length < path2.length) return -1;\r\n        if (path1.length > path2.length) return 1;\r\n\r\n        return name1.localeCompare(name2);\r\n\r\n\r\n        // let nameWithPath1 = path1.join(\"/\");\r\n        // if (nameWithPath1 != \"\" && name1 != \"\") nameWithPath1 += \"/\";\r\n        // nameWithPath1 += name1;\r\n\r\n        // let nameWithPath2 = path2.join(\"/\");\r\n        // if (nameWithPath2 != \"\" && name2 != \"\") nameWithPath2 += \"/\";\r\n        // nameWithPath2 += name2;\r\n\r\n        // return nameWithPath1.localeCompare(nameWithPath2);\r\n    }\r\n\r\n\r\n    getElementIndex(name: string, path: string[], isFolder: boolean): number {\r\n\r\n        for (let i = 0; i < this.elements.length; i++) {\r\n            let element = this.elements[i];\r\n\r\n            if (this.compareWithPath(name, path, isFolder, element.name, element.path, element.isFolder) < 0) return i;\r\n\r\n        }\r\n        return this.elements.length;\r\n    }\r\n\r\n    insertElement(ae: AccordionElement) {\r\n        let insertIndex = this.getElementIndex(ae.name, ae.path, ae.isFolder);\r\n        // if (ae.path.length == 0) insertIndex = this.elements.length;\r\n        this.elements.splice(insertIndex, 0, ae);\r\n\r\n        let $elements = this.$listElement.find('.jo_file');\r\n\r\n        if (insertIndex == 0) {\r\n            this.$listElement.prepend(ae.$htmlFirstLine);\r\n        } else if(insertIndex == $elements.length){\r\n            this.$listElement.append(ae.$htmlFirstLine);\r\n        } else {\r\n            let elementAtIndex = $elements.get(insertIndex);\r\n            jQuery(elementAtIndex).before(ae.$htmlFirstLine);\r\n        }\r\n\r\n    }\r\n\r\n    addFolder(name: string, path: string[], callback: (newPanel: AccordionElement) => void) {\r\n\r\n        let ae: AccordionElement = {\r\n            name: name,\r\n            isFolder: true,\r\n            path: path\r\n        }\r\n\r\n        let $element = this.renderElement(ae, true);\r\n\r\n        this.insertElement(ae);\r\n\r\n        $element[0].scrollIntoView();\r\n\r\n        this.renameElement(ae, () => {\r\n\r\n            callback(ae);\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    renderOuterHtmlElements($accordionDiv: JQuery<HTMLElement>) {\r\n        let that = this;\r\n\r\n        this.$captionElement = jQuery(`<div class=\"jo_leftpanelcaption jo_expanded\">\r\n        <div class=\"jo_captiontext\">` + this.caption + `</div><div class=\"jo_actions\"></div></div>`);\r\n\r\n        if (this.newButtonClass != null) {\r\n            this.$buttonNew = jQuery('<div class=\"jo_button jo_active ' + this.newButtonClass + '\" title=\"' + this.buttonNewTitle + '\">');\r\n            this.$captionElement.find('.jo_actions').append(this.$buttonNew);\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n            this.$buttonNew.on(mousePointer + 'down', (ev) => {\r\n\r\n                Helper.close();\r\n                ev.stopPropagation();\r\n\r\n                let path = that.getCurrentlySelectedPath();\r\n\r\n                let ae: AccordionElement = {\r\n                    name: \"Neu\",\r\n                    isFolder: false,\r\n                    path: path\r\n                }\r\n\r\n                let insertIndex = this.getElementIndex(\"\", path, false);\r\n                this.elements.splice(insertIndex, 0, ae);\r\n                let $element = this.renderElement(ae, true);\r\n\r\n\r\n                if (insertIndex == 0) {\r\n                    this.$listElement.prepend($element);\r\n                } else {\r\n                    let elementAtIndex = this.$listElement.find('.jo_file').get(insertIndex - 1);\r\n                    jQuery(elementAtIndex).after($element);\r\n                }\r\n\r\n                $element[0].scrollIntoView();\r\n\r\n                that.renameElement(ae, () => {\r\n\r\n                    that.newFilesElementCallback(ae, (externalElement: any) => {\r\n\r\n                        ae.externalElement = externalElement;\r\n\r\n                        if (ae.$htmlSecondLine != null) {\r\n                            ae.$htmlSecondLine.insertAfter($element);\r\n                        }\r\n\r\n                        if (that.selectCallback != null) that.select(ae.externalElement);\r\n\r\n                    });\r\n\r\n                });\r\n\r\n            });\r\n\r\n        }\r\n\r\n        let $listOuter = jQuery('<div id=\"filelistouter\" class=\"jo_projectexplorerdiv jo_scrollable\" data-grow=\"'\r\n            + this.flexWeight + '\" style=\"flex-grow: ' + this.flexWeight + '\"></div>');\r\n        this.$listElement = jQuery('<div class=\"jo_filelist\"></div>')\r\n\r\n        $listOuter.append(this.$listElement);\r\n\r\n        $accordionDiv.append(this.$captionElement);\r\n        $accordionDiv.append($listOuter);\r\n\r\n        let $ce = this.$captionElement;\r\n        let $li = this.$listElement.parent();\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $ce.on(mousePointer + 'down', (ev) => {\r\n            if (ev.button != 0) {\r\n                return;\r\n            }\r\n\r\n            if (!this.fixed) {\r\n                let targetGrow = $li.data('grow');\r\n                if ($ce.hasClass('jo_expanded')) {\r\n                    if (that.accordion.parts.length > 1) {\r\n                        $li.animate({\r\n                            'flex-grow': 0.001\r\n                        }, 1000, () => { $ce.toggleClass('jo_expanded'); });\r\n                    }\r\n                } else {\r\n                    $ce.toggleClass('jo_expanded');\r\n                    $li.animate({\r\n                        'flex-grow': targetGrow\r\n                    }, 1000);\r\n                }\r\n            }\r\n        });\r\n\r\n        $ce.on('dragover', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                $ce.addClass('jo_file_dragover');\r\n                event.preventDefault();\r\n            }\r\n        })\r\n\r\n        $ce.on('dragleave', (event) => {\r\n            $ce.removeClass('jo_file_dragover');\r\n        })\r\n\r\n        $ce.on('drop', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                event.preventDefault();\r\n                $ce.removeClass('jo_file_dragover');\r\n                let element1 = AccordionPanel.currentlyDraggedElement;\r\n                if (element1 != null) {\r\n                    that.moveElement(element1, null);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    grow() {\r\n        let $li = this.$listElement.parent();\r\n        let targetGrow = $li.data('grow');\r\n        $li.css('flex-grow', targetGrow);\r\n        this.$captionElement.addClass('jo_expanded');\r\n    }\r\n\r\n    addElement(element: AccordionElement, expanded: boolean) {\r\n        // this.elements.push(element);\r\n        // element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        // this.$listElement.prepend(element.$htmlFirstLine);\r\n        element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        this.insertElement(element);\r\n    }\r\n\r\n    sortElements() {\r\n        if (this.dontSortElements) return;\r\n        this.elements.sort((a, b) => {\r\n            let aName = a.sortName ? a.sortName : a.name;\r\n            let bName = b.sortName ? b.sortName : b.name;\r\n\r\n            return this.compareWithPath(aName, a.path, a.isFolder, bName, b.path, b.isFolder);\r\n\r\n        });\r\n        this.elements.forEach((element) => { this.$listElement.append(element.$htmlFirstLine) });\r\n    }\r\n\r\n    setTextAfterFilename(element: AccordionElement, text: string, cssClass: string) {\r\n        if(element == null) return;\r\n        let $div = element.$htmlFirstLine.find('.jo_textAfterName');\r\n        $div.addClass(cssClass);\r\n        $div.html(text);\r\n    }\r\n\r\n    addAction($element: JQuery<HTMLElement>) {\r\n        this.$captionElement.find('.jo_actions').prepend($element);\r\n    }\r\n\r\n    renderElement(element: AccordionElement, expanded: boolean): JQuery<HTMLElement> {\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        let that = this;\r\n\r\n        let expandedCollapsed = \"\";\r\n\r\n        if (element.iconClass == null) element.iconClass = this.defaultIconClass;\r\n        if (element.isFolder) {\r\n            element.iconClass = \"folder\";\r\n            expandedCollapsed = expanded ? \" jo_expanded\" : \" jo_collapsed\";\r\n        }\r\n\r\n        let pathHtml = \"\";\r\n        if (element.path == null) element.path = [];\r\n        for (let i = 0; i < element.path.length; i++) {\r\n            pathHtml += '<div class=\"jo_folderline\"></div>';\r\n        }\r\n\r\n        element.$htmlFirstLine = jQuery(`<div class=\"jo_file jo_${element.iconClass} ${expandedCollapsed}\">\r\n        <div class=\"jo_folderlines\">${pathHtml}</div>\r\n           <div class=\"jo_fileimage\"></div>\r\n           <div class=\"jo_filename\">${escapeHtml(element.name)}</div>\r\n           <div class=\"jo_textAfterName\"></div>\r\n           <div class=\"jo_additionalButtonSettings\"></div>\r\n           ${this.withDeleteButton ? '<div class=\"jo_delete img_delete jo_button jo_active' + (false ? \" jo_delete_always\" : \"\") + '\"></div>' : \"\"}\r\n           ${!jo_mouseDetected ? '<div class=\"jo_settings_button img_ellipsis-dark jo_button jo_active\"></div>' : \"\"}\r\n           </div>`);\r\n\r\n        if (!expanded && element.path.length > 0) {\r\n            element.$htmlFirstLine.hide();\r\n        }\r\n\r\n        if (this.addElementActionCallback != null) {\r\n            let $elementAction = this.addElementActionCallback(element);\r\n            element.$htmlFirstLine.append($elementAction);\r\n        }\r\n\r\n        if (this.withFolders) {\r\n            if (element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            that.moveElement(element1, element);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withFolders || this.enableDrag) {\r\n            let $filedragpart = element.$htmlFirstLine.find('.jo_filename');\r\n            $filedragpart.attr('draggable', 'true');\r\n            $filedragpart.on('dragstart', (event) => {\r\n                AccordionPanel.currentlyDraggedElement = element;\r\n                AccordionPanel.currentlyDraggedElementKind = that.kind;\r\n                event.originalEvent.dataTransfer.effectAllowed = element.isFolder ? \"move\" : \"copyMove\";\r\n            })\r\n        }\r\n\r\n        if (this.acceptDropKinds != null && this.acceptDropKinds.length > 0) {\r\n            if (!element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n\r\n                        if (event.ctrlKey) {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"copy\";\r\n                        } else {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"move\";\r\n                        }\r\n\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            if (that.dropElementCallback != null) that.dropElementCallback(element, element1, event.ctrlKey ? \"copy\" : \"move\");\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        element.$htmlFirstLine.on(mousePointer + 'up', (ev) => {\r\n\r\n            if (ev.button == 0 && that.selectCallback != null) {\r\n                that.selectCallback(element.externalElement);\r\n\r\n                for (let ae of that.elements) {\r\n                    if (ae != element && ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                        ae.$htmlFirstLine.removeClass('jo_active');\r\n                    }\r\n                }\r\n\r\n                element.$htmlFirstLine.addClass('jo_active');\r\n\r\n                if (element.isFolder) {\r\n\r\n                    if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                        element.$htmlFirstLine.removeClass('jo_expanded');\r\n                        element.$htmlFirstLine.addClass('jo_collapsed');\r\n                    } else {\r\n                        element.$htmlFirstLine.addClass('jo_expanded');\r\n                        element.$htmlFirstLine.removeClass('jo_collapsed');\r\n                    }\r\n\r\n                    let pathIsCollapsed: { [path: string]: boolean } = {};\r\n                    for (let e of this.elements) {\r\n                        if (e.isFolder) {\r\n                            let path = e.path.join(\"/\");\r\n                            if (path != \"\") path += \"/\";\r\n                            path += e.name;\r\n                            pathIsCollapsed[path] = e.$htmlFirstLine.hasClass('jo_collapsed');\r\n                            if (pathIsCollapsed[e.path.join(\"/\")]) pathIsCollapsed[path] = true;\r\n                        }\r\n                    }\r\n                    pathIsCollapsed[\"\"] = false;\r\n\r\n                    for (let e of this.elements) {\r\n                        if (pathIsCollapsed[e.path.join(\"/\")]) {\r\n                            e.$htmlFirstLine.slideUp(200);\r\n                        } else {\r\n                            e.$htmlFirstLine.slideDown(200);\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n\r\n        let contextmenuHandler = function (event) {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [];\r\n            if (that.renameCallback != null) {\r\n                contextMenuItems.push({\r\n                    caption: \"Umbenennen\",\r\n                    callback: () => {\r\n                        that.renameElement(element);\r\n                    }\r\n                })\r\n            }\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n            if (element.isFolder) {\r\n                contextMenuItems = contextMenuItems.concat([\r\n                    {\r\n                        caption: \"Neuen Unterordner anlegen (unterhalb '\" + element.name + \"')...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            // that.$newFolderAction.trigger(mousePointer + 'down');\r\n                            let pathArray = that.getCurrentlySelectedPath();\r\n\r\n                            that.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                                that.newFolderCallback(newElement, () => {\r\n                                    that.sortElements();\r\n                                    newElement.$htmlFirstLine[0].scrollIntoView();\r\n                                    animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                                });\r\n                            });\r\n\r\n                        }\r\n                    }, {\r\n                        caption: \"Neue Datenbank...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n\r\n                            that.newDatabaseElementCallback(element.path.concat(element.name));\r\n\r\n                        }\r\n                    }\r\n                ])\r\n            }\r\n\r\n\r\n            if (that.contextMenuProvider != null && !element.isFolder) {\r\n\r\n                for (let cmi of that.contextMenuProvider(element)) {\r\n                    contextMenuItems.push({\r\n                        caption: cmi.caption,\r\n                        callback: () => {\r\n                            cmi.callback(element);\r\n                        },\r\n                        color: cmi.color,\r\n                        subMenu: cmi.subMenu == null ? null : cmi.subMenu.map((mi) => {\r\n                            return {\r\n                                caption: mi.caption,\r\n                                callback: () => {\r\n                                    mi.callback(element);\r\n                                },\r\n                                color: mi.color\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n\r\n            if (contextMenuItems.length > 0) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                openContextMenu(contextMenuItems, event.pageX, event.pageY);\r\n            }\r\n        };\r\n\r\n        element.$htmlFirstLine[0].addEventListener(\"contextmenu\", contextmenuHandler, false);\r\n\r\n        // long press for touch devices\r\n        let pressTimer: number;\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.on('pointerup', () => {\r\n                clearTimeout(pressTimer);\r\n                return false;\r\n            }).on('pointerdown', (event) => {\r\n                pressTimer = window.setTimeout(() => {\r\n                    contextmenuHandler(event);\r\n                }, 500);\r\n                return false;\r\n            });\r\n        }\r\n\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('pointerdown', (e) => {\r\n                contextmenuHandler(e);\r\n            });\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('mousedown click', (e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            });\r\n        }\r\n\r\n        if (that.withDeleteButton) {\r\n            element.$htmlFirstLine.find('.jo_delete').on(mousePointer + 'up', (ev) => {\r\n                ev.preventDefault();\r\n                openContextMenu([{\r\n                    caption: \"Abbrechen\",\r\n                    callback: () => {\r\n                        // nothing to do.\r\n                    }\r\n                }, {\r\n                    caption: \"Ich bin mir sicher: löschen!\",\r\n                    color: \"#ff6060\",\r\n                    callback: () => {\r\n\r\n                        if (element.isFolder) {\r\n                            if (that.getChildElements(element).length > 0) {\r\n                                alert('Dieser Ordner kann nicht gelöscht werden, da er nicht leer ist.');\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        that.deleteCallback(element.externalElement, () => {\r\n                            element.$htmlFirstLine.remove();\r\n                            if (element.$htmlSecondLine != null) element.$htmlSecondLine.remove();\r\n                            that.elements.splice(that.elements.indexOf(element), 1);\r\n\r\n                            if (that.selectCallback != null) {\r\n                                if (that.elements.length > 0) {\r\n                                    that.select(that.elements[0].externalElement);\r\n                                } else {\r\n                                    that.select(null);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }], ev.pageX + 2, ev.pageY + 2);\r\n                ev.stopPropagation();\r\n            });\r\n        }\r\n\r\n        return element.$htmlFirstLine;\r\n\r\n    }\r\n\r\n    moveElement(elementToMove: AccordionElement, destinationFolder: AccordionElement) {\r\n        let destinationPath: string[] = destinationFolder == null ? [] : destinationFolder.path.slice(0).concat([destinationFolder.name]);\r\n        if (elementToMove.isFolder) {\r\n            let movedElements: AccordionElement[] = [elementToMove];\r\n\r\n            let sourcePath = elementToMove.path.concat([elementToMove.name]).join(\"/\");\r\n\r\n            if(destinationPath.join('/').indexOf(sourcePath) == 0) return;\r\n\r\n            let oldPathLength = elementToMove.path.length;\r\n            elementToMove.path = destinationPath.slice(0);\r\n\r\n            for (let element of this.elements) {\r\n                if (element.path.join(\"/\").startsWith(sourcePath)) {\r\n                    element.path.splice(0, oldPathLength);\r\n                    element.path = destinationPath.concat(element.path);\r\n                    movedElements.push(element);\r\n                }\r\n            }\r\n\r\n            for (let el of movedElements) {\r\n                el.$htmlFirstLine.remove();\r\n                this.elements.splice(this.elements.indexOf(el), 1);\r\n            }\r\n            for (let el of movedElements) {\r\n                this.renderElement(el, true);\r\n                this.insertElement(el);\r\n            }\r\n\r\n            this.moveCallback(movedElements);\r\n        } else {\r\n            elementToMove.path = destinationPath;\r\n            elementToMove.$htmlFirstLine.remove();\r\n            this.elements.splice(this.elements.indexOf(elementToMove), 1);\r\n            this.renderElement(elementToMove, true);\r\n            this.insertElement(elementToMove);\r\n            this.select(elementToMove.externalElement);\r\n            elementToMove.$htmlFirstLine[0].scrollIntoView();\r\n            this.moveCallback(elementToMove);\r\n        }\r\n    }\r\n\r\n    getChildElements(folder: AccordionElement): AccordionElement[] {\r\n        let path = folder.path.slice(0).concat(folder.name).join(\"/\");\r\n        return this.elements.filter((element) => element.path.join(\"/\").startsWith(path));\r\n    }\r\n\r\n    renameElement(element: AccordionElement, callback?: () => void) {\r\n        let that = this;\r\n        let $div = element.$htmlFirstLine.find('.jo_filename');\r\n        let pointPos = element.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        this.dontSortElements = true;\r\n        makeEditable($div, $div, (newText: string) => {\r\n            if (element.externalElement != null) newText = that.renameCallback(element.externalElement, newText);\r\n            element.name = newText;\r\n            $div.html(element.name);\r\n            if (callback != null) callback();\r\n            that.sortElements();\r\n            $div[0].scrollIntoView();\r\n            this.dontSortElements = false;\r\n        }, selection);\r\n    }\r\n\r\n    select(externalElement: any, invokeCallback: boolean = true, scrollIntoView: boolean = false) {\r\n\r\n        if (externalElement == null) {\r\n            for (let ae1 of this.elements) {\r\n                if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n            }\r\n        } else {\r\n            let ae = this.findElement(externalElement);\r\n\r\n            if (ae != null) {\r\n                for (let ae1 of this.elements) {\r\n                    if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n                }\r\n\r\n                ae.$htmlFirstLine.addClass('jo_active');\r\n                if (scrollIntoView) {\r\n                    let pathString = ae.path.join(\"/\");\r\n                    for (let el of this.elements) {\r\n                        let elPath = el.path.slice(0);\r\n                        if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                            if (el.isFolder) {\r\n                                elPath.push(el.name);\r\n                                if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                                    el.$htmlFirstLine.removeClass(\"jo_collapsed\");\r\n                                    el.$htmlFirstLine.addClass(\"jo_expanded\");\r\n                                }\r\n                            }\r\n                            el.$htmlFirstLine.show();\r\n                        }\r\n\r\n                    }\r\n\r\n                    ae.$htmlFirstLine[0].scrollIntoView();\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (invokeCallback && this.selectCallback != null) this.selectCallback(externalElement);\r\n\r\n    }\r\n\r\n    getPathString(ae: AccordionElement) {\r\n        let ps: string = ae.path.join(\"/\");\r\n        if (ae.isFolder) {\r\n            if (ps != \"\") ps += \"/\";\r\n            ps += ae.name;\r\n        }\r\n        return ps;\r\n    }\r\n\r\n    setElementClass(element: AccordionElement, iconClass: string) {\r\n        if (element != null) {\r\n            element.$htmlFirstLine?.removeClass(\"jo_\" + element.iconClass).addClass(\"jo_\" + iconClass);\r\n            element.iconClass = iconClass;\r\n        }\r\n\r\n    }\r\n\r\n    findElement(externalElement: any): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                return ae;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    removeElement(externalElement: any) {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                ae.$htmlFirstLine.remove();\r\n                if (ae.$htmlSecondLine != null) ae.$htmlSecondLine.remove();\r\n                this.elements.splice(this.elements.indexOf(ae), 1);\r\n\r\n                if (this.selectCallback != null) {\r\n                    if (this.elements.length > 0) {\r\n                        this.select(this.elements[0].externalElement);\r\n                    } else {\r\n                        this.select(null);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.$listElement.empty();\r\n        this.elements = [];\r\n    }\r\n\r\n    setCaption(text: string) {\r\n        this.$captionElement.find('.jo_captiontext').html(text);\r\n    }\r\n\r\n    getSelectedElement(): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                return ae;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class Accordion {\r\n\r\n    parts: AccordionPanel[] = [];\r\n    $html: JQuery<HTMLElement>;\r\n\r\n    constructor(public main: MainBase, $html: JQuery<HTMLElement>) {\r\n        this.$html = $html;\r\n        $html.addClass('jo_leftpanelinner');\r\n    }\r\n\r\n    addPanel(panel: AccordionPanel) {\r\n        panel.renderOuterHtmlElements(this.$html);\r\n        this.parts.push(panel);\r\n    }\r\n\r\n}","import { ClassData, UserData } from \"../../communication/Data.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { isEmptyObject } from \"jquery\";\r\n\r\nexport class DistributeToStudentsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n    studentCount: number = 0;\r\n\r\n    constructor(private classes: ClassData[], private workspace: Workspace, private main: Main){\r\n        this.init();\r\n    }\r\n\r\n    private init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Austeilen eines Workspace an einzelne Schüler/innen</div>\r\n             <div class=\"jo_ds_settings\">\r\n                <div class=\"jo_ds_settings_caption\">Workspace:</div><div class=\"jo_ds_workspacename\">${this.workspace.name}</div>\r\n                <div class=\"jo_ds_settings_caption\">Liste filtern:</div><div class=\"jo_ds_filterdiv\"><input class=\"dialog-input\"></input></div>\r\n             </div>\r\n             <div class=\"jo_ds_student_list jo_scrollable\">\r\n             </div>\r\n             <div class=\"jo_ds_selected_message\"></div>\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_distribute_button\">Austeilen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        let $studentList = jQuery('.jo_ds_student_list');\r\n        let that = this;\r\n\r\n        for(let klass of this.classes){\r\n            for(let student of klass.students){\r\n                let $studentLine = jQuery('<div class=\"jo_ds_student_line\">');\r\n                let $studentClass = jQuery(`<div class=\"jo_ds_student_class\">${klass.name}</div>`);                \r\n                let $studentName = jQuery(`<div class=\"jo_ds_student_name\">${student.rufname} ${student.familienname}</div>`);\r\n                $studentLine.append($studentClass, $studentName);\r\n                $studentList.append($studentLine);\r\n                $studentLine.on('mousedown', () => {\r\n                    $studentLine.toggleClass('jo_active');\r\n                     that.studentCount += $studentLine.hasClass('jo_active') ? 1 : -1;\r\n                     jQuery('.jo_ds_selected_message').text(`${that.studentCount} Schüler/inn/en selektiert`);\r\n                });\r\n                $studentLine.data('student', student);\r\n                $studentLine.data('klass', klass);\r\n            }\r\n        }\r\n\r\n        jQuery('.jo_ds_filterdiv>input').on('input', () => {\r\n            let filterText = <string>jQuery('.jo_ds_filterdiv>input').val();\r\n            if(filterText == null || filterText == \"\"){\r\n                $('.jo_ds_student_line').show();\r\n            } else {\r\n                $('.jo_ds_student_line').each((index, element) => {\r\n                    let $element = jQuery(element);\r\n                    let klass:ClassData = $element.data('klass');\r\n                    let student: UserData = $element.data('student');\r\n                    let text = klass.name + \" \" + student.rufname + \" \" + student.familienname;\r\n                    if(text.indexOf(filterText) >= 0){\r\n                        $element.show();\r\n                    } else {\r\n                        $element.hide();\r\n                    }\r\n                });\r\n\r\n            }\r\n            \r\n        });\r\n\r\n\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { that.close() });\r\n        jQuery('#jo_ds_distribute_button').on('click', () => {that.distributeWorkspace();});\r\n\r\n    }\r\n\r\n    distributeWorkspace() {\r\n\r\n        let student_ids: number[] = [];\r\n        $('.jo_ds_student_line').each((index, element) => {\r\n            let $element = jQuery(element);\r\n            if($element.hasClass('jo_active')){\r\n                let student: UserData = $element.data('student');\r\n                student_ids.push(student.id);\r\n            }\r\n        });\r\n\r\n        this.close();\r\n\r\n        this.main.networkManager.sendDistributeWorkspace(this.workspace, null, student_ids, (error: string) => {\r\n            if (error == null) {\r\n                let networkManager = this.main.networkManager;\r\n                let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                alert(`Der Workspace ${this.workspace.name} wurde an ${student_ids.length} Schüler/innen ausgeteilt. Er wird in maximal ${dt} s bei jedem Schüler ankommen.`);\r\n            } else {\r\n                alert(error);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n    \r\n\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionPanel, Accordion, AccordionElement, AccordionContextMenuItem } from \"./Accordion.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { WorkspaceData, Workspaces, ClassData, CreateWorkspaceData } from \"../../communication/Data.js\";\r\nimport { dateToString } from \"../../tools/StringTools.js\";\r\nimport { DistributeToStudentsDialog } from \"./DistributeToStudentsDialog.js\";\r\nimport { NewDatabaseDialog } from \"./NewDatabaseDialog.js\";\r\n\r\n\r\nexport class ProjectExplorer {\r\n\r\n    programPointerModule: Module = null;\r\n    programPointerPosition: TextPosition;\r\n    programPointerDecoration: string[] = [];\r\n\r\n    accordion: Accordion;\r\n    fileListPanel: AccordionPanel;\r\n    workspaceListPanel: AccordionPanel;\r\n\r\n    $homeAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private $projectexplorerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.accordion = new Accordion(this.main, this.$projectexplorerDiv);\r\n\r\n        this.initFilelistPanel();\r\n\r\n        this.initWorkspacelistPanel();\r\n\r\n    }\r\n\r\n    initFilelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.fileListPanel = new AccordionPanel(this.accordion, \"Kein Workspace gewählt\", \"1\",\r\n            \"img_add-file-dark\", \"Neue Datei...\", \"java\", true, false, \"file\", true, []);\r\n\r\n        this.fileListPanel.newFilesElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                if (that.main.currentWorkspace == null) {\r\n                    alert('Bitte wählen Sie zuerst einen Workspace aus.');\r\n                    return null;\r\n                }\r\n\r\n                let f: File = {\r\n                    name: accordionElement.name,\r\n                    dirty: false,\r\n                    saved: true,\r\n                    text: \"\",\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    panelElement: accordionElement\r\n                };\r\n                let m = new Module(f, that.main);\r\n                let modulStore = that.main.currentWorkspace.moduleStore;\r\n                modulStore.putModule(m);\r\n                that.setModuleActive(m);\r\n                that.main.networkManager.sendCreateFile(m, that.main.currentWorkspace, that.main.workspacesOwnerId,\r\n                    (error: string) => {\r\n                        if (error == null) {\r\n                            successfulNetworkCommunicationCallback(m);\r\n                        } else {\r\n                            alert('Der Server ist nicht erreichbar!');\r\n\r\n                        }\r\n                    });\r\n\r\n            };\r\n\r\n        this.fileListPanel.renameCallback =\r\n            (module: Module, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                let file = module.file;\r\n\r\n                file.name = newName;\r\n                file.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.fileListPanel.deleteCallback =\r\n            (module: Module, callbackIfSuccessful: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.currentWorkspace.moduleStore.removeModule(module);\r\n                        callbackIfSuccessful();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.fileListPanel.contextMenuProvider = (accordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            if (!(that.main.user.is_teacher || that.main.user.is_admin || that.main.user.is_schooladmin)) {\r\n                let module: Module = <Module>accordionElement.externalElement;\r\n                let file = module.file;\r\n\r\n                // if (file.submitted_date == null) {\r\n                //     cmiList.push({\r\n                //         caption: \"Als Hausaufgabe markieren\",\r\n                //         callback: (element: AccordionElement) => {\r\n\r\n                //             let file = (<Module>element.externalElement).file;\r\n                //             file.submitted_date = dateToString(new Date());\r\n                //             file.saved = false;\r\n                //             that.main.networkManager.sendUpdates(null, true);\r\n                //             that.renderHomeworkButton(file);\r\n                //         }\r\n                //     });\r\n                // } else {\r\n                //     cmiList.push({\r\n                //         caption: \"Hausaufgabenmarkierung entfernen\",\r\n                //         callback: (element: AccordionElement) => {\r\n\r\n                //             let file = (<Module>element.externalElement).file;\r\n                //             file.submitted_date = null;\r\n                //             file.saved = false;\r\n                //             that.main.networkManager.sendUpdates(null, true);\r\n                //             that.renderHomeworkButton(file);\r\n\r\n                //         }\r\n                //     });\r\n                // }\r\n\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n\r\n\r\n        this.fileListPanel.selectCallback =\r\n            (module: Module) => {\r\n                that.setModuleActive(module);\r\n            }\r\n\r\n\r\n\r\n    }\r\n\r\n    renderHomeworkButton(file: File) {\r\n        let $buttonDiv = file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonHomework');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_homeworkButton').remove();\r\n\r\n        let klass: string = null;\r\n        let title: string = \"\";\r\n        if (file.submitted_date != null) {\r\n            klass = \"img_homework\";\r\n            title = \"Wurde als Hausaufgabe abgegeben: \" + file.submitted_date\r\n            if (file.text_before_revision) {\r\n                klass = \"img_homework-corrected\";\r\n                title = \"Korrektur liegt vor.\"\r\n            }\r\n        }\r\n\r\n        if (klass != null) {\r\n            let $homeworkButtonDiv = jQuery(`<div class=\"jo_homeworkButton ${klass}\" title=\"${title}\"></div>`);\r\n            $buttonDiv.prepend($homeworkButtonDiv);\r\n            if (klass.indexOf(\"jo_active\") >= 0) {\r\n                $homeworkButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n                $homeworkButtonDiv.on('click', (e) => {\r\n                    e.stopPropagation();\r\n                    // TODO\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initWorkspacelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.workspaceListPanel = new AccordionPanel(this.accordion, \"Datenbanken\", \"3\",\r\n            null, \"Neue Datenbank...\", \"workspace\", true, true, \"workspace\", false, [\"file\"]);\r\n\r\n        let $newWorkspaceAction = jQuery('<div class=\"img_add-database-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Neue Datenbank auf oberster Ordnerebene anlegen\">');\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $newWorkspaceAction.on(mousePointer + 'down', (e) => {\r\n            e.stopPropagation();\r\n\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            new NewDatabaseDialog(that.main, owner_id, this.workspaceListPanel.getCurrentlySelectedPath());\r\n\r\n        })\r\n\r\n        this.workspaceListPanel.addAction($newWorkspaceAction);\r\n        if(this.workspaceListPanel.$buttonNew != null){\r\n            this.workspaceListPanel.$buttonNew.hide();\r\n        }\r\n\r\n        this.workspaceListPanel.newDatabaseElementCallback = (path: string[]) => {\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            new NewDatabaseDialog(that.main, owner_id, path);\r\n\r\n        }\r\n\r\n\r\n        this.workspaceListPanel.renameCallback =\r\n            (workspace: Workspace, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                workspace.name = newName;\r\n                workspace.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.workspaceListPanel.deleteCallback =\r\n            (workspace: Workspace, successfulNetworkCommunicationCallback: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"workspace\", workspace.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.removeWorkspace(workspace);\r\n                        that.fileListPanel.enableNewButton(that.main.workspaceList.length > 0);\r\n                        that.fileListPanel.clear();\r\n                        that.main.databaseExplorer.clear();\r\n                        that.main.getResultsetPresenter().clear();\r\n                        successfulNetworkCommunicationCallback();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.workspaceListPanel.selectCallback =\r\n            (workspace: Workspace) => {\r\n                if(workspace.isFolder) return;\r\n                if (workspace != this.main.currentWorkspace) {\r\n                    that.main.networkManager.sendUpdates(() => {\r\n                        that.setWorkspaceActive(workspace);\r\n                    });\r\n                }\r\n            }\r\n\r\n        this.workspaceListPanel.newFolderCallback = (newElement: AccordionElement, successCallback) => {\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            let folder: Workspace = new Workspace(newElement.name, that.main, owner_id);\r\n            folder.isFolder = true;\r\n\r\n            folder.path = newElement.path.join(\"/\");\r\n            folder.panelElement = newElement;\r\n            newElement.externalElement = folder;\r\n            that.main.workspaceList.push(folder);\r\n\r\n            let wd: CreateWorkspaceData = {\r\n                id: -1,\r\n                isFolder: true,\r\n                name: folder.name,\r\n                path: folder.path\r\n            }\r\n\r\n            that.main.networkManager.sendCreateWorkspace(wd, that.main.workspacesOwnerId, (error: string) => {\r\n                if (error == null) {\r\n                    folder.id = wd.id;\r\n                    successCallback(folder);\r\n\r\n                } else {\r\n                    alert(\"Fehler: \" + error);\r\n                    that.workspaceListPanel.removeElement(newElement);\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        this.workspaceListPanel.moveCallback = (ae: AccordionElement | AccordionElement[]) => {\r\n            if (!Array.isArray(ae)) ae = [ae];\r\n            for (let a of ae) {\r\n                let ws: Workspace = a.externalElement;\r\n                ws.path = a.path.join(\"/\");\r\n                ws.saved = false;\r\n            }\r\n            this.main.networkManager.sendUpdates();\r\n        }\r\n\r\n        this.workspaceListPanel.dropElementCallback = (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => {\r\n            let workspace: Workspace = dest.externalElement;\r\n            let module: Module = droppedElement.externalElement;\r\n\r\n            if (workspace.moduleStore.getModules(false).indexOf(module) >= 0) return; // module is already in destination workspace\r\n\r\n            let f: File = {\r\n                name: module.file.name,\r\n                dirty: true,\r\n                saved: false,\r\n                text: module.file.text,\r\n                text_before_revision: null,\r\n                submitted_date: null,\r\n                student_edited_after_revision: false,\r\n                version: module.file.version,\r\n                panelElement: null\r\n            };\r\n\r\n            if (dropEffekt == \"move\") {\r\n                // move file\r\n                let oldWorkspace = that.main.currentWorkspace;\r\n                oldWorkspace.moduleStore.removeModule(module);\r\n                that.fileListPanel.removeElement(module);\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, () => { });\r\n            }\r\n\r\n            let m = new Module(f, that.main);\r\n            let modulStore = workspace.moduleStore;\r\n            modulStore.putModule(m);\r\n            that.main.networkManager.sendCreateFile(m, workspace, that.main.workspacesOwnerId,\r\n                (error: string) => {\r\n                    if (error == null) {\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n\r\n        }\r\n\r\n\r\n\r\n        this.$homeAction = jQuery('<div class=\"img_home-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Meine eigenen Workspaces anzeigen\">');\r\n\r\n        this.$homeAction.on(mousePointer +'down', (e) => {\r\n            e.stopPropagation();\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n                that.onHomeButtonClicked();\r\n            });\r\n\r\n            that.main.bottomDiv.hideHomeworkTab();\r\n\r\n        })\r\n\r\n        this.workspaceListPanel.addAction(this.$homeAction);\r\n        this.$homeAction.hide();\r\n\r\n        this.workspaceListPanel.contextMenuProvider = (workspaceAccordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            if (this.main.user.is_teacher && this.main.teacherExplorer.classPanel.elements.length > 0) {\r\n                cmiList.push({\r\n                    caption: \"An Klasse austeilen...\",\r\n                    callback: (element: AccordionElement) => { },\r\n                    subMenu: this.main.teacherExplorer.classPanel.elements.map((ae) => {\r\n                        return {\r\n                            caption: ae.name,\r\n                            callback: (element: AccordionElement) => {\r\n                                let klasse = <any>ae.externalElement;\r\n\r\n                                let workspace: Workspace = element.externalElement;\r\n\r\n                                this.main.networkManager.sendDistributeWorkspace(workspace, klasse, null, (error: string) => {\r\n                                    if (error == null) {\r\n                                        let networkManager = this.main.networkManager;\r\n                                        let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                                        alert(\"Der Workspace \" + workspace.name + \" wurde an die Klasse \" + klasse.name + \" ausgeteilt. Er wird in maximal \" +\r\n                                            dt + \" s bei jedem Schüler ankommen.\");\r\n                                    } else {\r\n                                        alert(error);\r\n                                    }\r\n                                });\r\n\r\n                            }\r\n                        }\r\n                    })\r\n                },\r\n                    {\r\n                        caption: \"An einzelne Schüler/innen austeilen...\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let classes: ClassData[] = this.main.teacherExplorer.classPanel.elements.map(ae => ae.externalElement);\r\n                            let workspace: Workspace = element.externalElement;\r\n                            new DistributeToStudentsDialog(classes, workspace, this.main);\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n    }\r\n\r\n    onHomeButtonClicked() {\r\n        this.main.teacherExplorer.restoreOwnWorkspaces();\r\n        this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.ownUpdateFrequencyInSeconds;\r\n        this.$homeAction.hide();\r\n        this.fileListPanel.enableNewButton(this.main.workspaceList.length > 0);\r\n    }\r\n\r\n    renderFiles(workspace: Workspace) {\r\n\r\n        let name = workspace == null ? \"Kein Workspace vorhanden\" : workspace.name;\r\n\r\n        this.fileListPanel.setCaption(name);\r\n        this.fileListPanel.clear();\r\n\r\n        if (this.main.getCurrentWorkspace() != null) {\r\n            for (let module of this.main.getCurrentWorkspace().moduleStore.getModules(false)) {\r\n                module.file.panelElement = null;\r\n            }\r\n        }\r\n\r\n        if (workspace != null) {\r\n            let moduleList: Module[] = [];\r\n\r\n            for (let m of workspace.moduleStore.getModules(false)) {\r\n                moduleList.push(m);\r\n            }\r\n\r\n            moduleList.sort((a, b) => { return a.file.name > b.file.name ? 1 : a.file.name < b.file.name ? -1 : 0 });\r\n\r\n            for (let m of moduleList) {\r\n\r\n                m.file.panelElement = {\r\n                    name: m.file.name,\r\n                    externalElement: m,\r\n                    isFolder: false,\r\n                    path: []\r\n                };\r\n\r\n                this.fileListPanel.addElement(m.file.panelElement, true);\r\n                this.renderHomeworkButton(m.file);\r\n            }\r\n\r\n            this.fileListPanel.sortElements();\r\n\r\n        }\r\n    }\r\n\r\n    renderWorkspaces(workspaceList: Workspace[]) {\r\n\r\n        this.fileListPanel.clear();\r\n        this.workspaceListPanel.clear();\r\n\r\n        for (let w of workspaceList) {\r\n            let path = w.path.split(\"/\");\r\n            if (path.length == 1 && path[0] == \"\") path = [];\r\n            w.panelElement = {\r\n                name: w.name,\r\n                externalElement: w,\r\n                iconClass: 'workspace',\r\n                isFolder: w.isFolder,\r\n                path: path\r\n            };\r\n\r\n            this.workspaceListPanel.addElement(w.panelElement, false);\r\n            w.renderSettingsButton(w.panelElement);\r\n        }\r\n\r\n        this.workspaceListPanel.sortElements();\r\n        this.fileListPanel.enableNewButton(workspaceList.length > 0);\r\n\r\n\r\n\r\n    }\r\n\r\n    renderErrorCount(workspace: Workspace, errorCountMap: Map<Module, number>) {\r\n        if (errorCountMap == null) return;\r\n        for (let m of workspace.moduleStore.getModules(false)) {\r\n            let errorCount: number = errorCountMap.get(m);\r\n            let errorCountS: string = ((errorCount == null || errorCount == 0) ? \"\" : \"(\" + errorCount + \")\");\r\n\r\n            this.fileListPanel.setTextAfterFilename(m.file.panelElement, errorCountS, 'jo_errorcount');\r\n        }\r\n    }\r\n\r\n    setWorkspaceActive(w: Workspace) {\r\n\r\n        if (w != null) {\r\n            this.fileListPanel.$buttonNew.show();\r\n        }\r\n\r\n        this.workspaceListPanel.select(w, false);\r\n\r\n        let callback = (error: string) => {this.initializeDatabaseTool(error, w)};\r\n\r\n        if (w.database == null) {\r\n            this.main.waitOverlay.show(\"Bitte warten, hole Datenbank vom Server ...\");\r\n\r\n            this.main.networkManager.fetchDatabase(w, callback);\r\n        } else {\r\n            callback(null);\r\n        }\r\n\r\n    }\r\n\r\n    initializeDatabaseTool(error: string, w: Workspace) {\r\n        if (error != null) {\r\n            alert(error);\r\n            return;\r\n        }\r\n\r\n        let dbTool = this.main.getDatabaseTool();\r\n\r\n        let statements: string[] = w.database.statements;\r\n        if (statements == null) statements = [];\r\n\r\n        dbTool.initializeWorker(w.database.templateDump, statements,\r\n            () => {\r\n                this.main.currentWorkspace = w;\r\n\r\n                if (this.main.user.id == w.owner_id) {\r\n                    this.main.user.currentWorkspace_id = w.id;\r\n                }\r\n\r\n                this.renderFiles(w);\r\n\r\n                if (w != null) {\r\n                    let nonSystemModules = w.moduleStore.getModules(false);\r\n\r\n                    if (w.currentlyOpenModule != null) {\r\n                        this.setModuleActive(w.currentlyOpenModule);\r\n                    } else if (nonSystemModules.length > 0) {\r\n                        this.setModuleActive(nonSystemModules[0]);\r\n                    } else {\r\n                        this.setModuleActive(null);\r\n                    }\r\n\r\n                    for (let m of nonSystemModules) {\r\n                        m.file.dirty = true;\r\n                    }\r\n\r\n                    if (nonSystemModules.length == 0) {\r\n\r\n                        Helper.showHelper(\"newSQLFileHelper\", this.main, this.fileListPanel.$captionElement);\r\n\r\n                    }\r\n\r\n                    this.main.notifier.connect(w);\r\n\r\n                } else {\r\n                    this.setModuleActive(null);\r\n                }\r\n\r\n            },\r\n            () => {\r\n                this.main.databaseExplorer.refreshAfterRetrievingDBStructure();\r\n                this.main.getHistoryViewer().clearAndShowStatements(w.database.statements);\r\n            });\r\n\r\n    }\r\n\r\n    writeEditorTextToFile() {\r\n        let cem = this.getCurrentlyEditedModule();\r\n        if (cem != null)\r\n            cem.file.text = cem.getProgramTextFromMonacoModel(); // 29.03. this.main.monaco.getValue();\r\n    }\r\n\r\n\r\n    lastOpenModule: Module = null;\r\n    setModuleActive(m: Module) {\r\n\r\n        this.main.bottomDiv.homeworkManager.hideRevision();\r\n\r\n        if (this.lastOpenModule != null) {\r\n            this.lastOpenModule.file.text = this.lastOpenModule.getProgramTextFromMonacoModel(); // this.main.monaco.getValue();\r\n            this.lastOpenModule.editorState = this.main.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (m == null) {\r\n            this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n        } else {\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.main.getMonacoEditor().setModel(m.model);\r\n            if (this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(m.bracketError);\r\n\r\n            if (m.file.text_before_revision != null) {\r\n                this.main.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n            } else {\r\n                this.main.bottomDiv.homeworkManager.hideHomeworkRevisionButton();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setActiveAfterExternalModelSet(m: Module) {\r\n        this.fileListPanel.select(m, false);\r\n\r\n        this.lastOpenModule = m;\r\n\r\n        if (m.editorState != null) {\r\n            this.main.editor.dontPushNextCursorMove++;\r\n            this.main.getMonacoEditor().restoreViewState(m.editorState);\r\n            this.main.editor.dontPushNextCursorMove--;\r\n        }\r\n\r\n        this.setCurrentlyEditedModule(m);\r\n\r\n        this.showProgramPointer();\r\n\r\n        setTimeout(() => {\r\n            if (!this.main.getMonacoEditor().getOptions().get(monaco.editor.EditorOption.readOnly)) {\r\n                this.main.getMonacoEditor().focus();\r\n            }\r\n        }, 300);\r\n\r\n    }\r\n\r\n\r\n    private showProgramPointer() {\r\n\r\n        if (this.programPointerModule == this.getCurrentlyEditedModule() && this.getCurrentlyEditedModule() != null) {\r\n            let position = this.programPointerPosition;\r\n            let range = {\r\n                startColumn: position.column, startLineNumber: position.line,\r\n                endColumn: position.column + position.length, endLineNumber: position.line\r\n            };\r\n\r\n            this.main.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n            this.programPointerDecoration = this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n                {\r\n                    range: range,\r\n                    options: {\r\n                        className: 'jo_revealProgramPointer', isWholeLine: true,\r\n                        overviewRuler: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.OverviewRulerLane.Center\r\n                        },\r\n                        minimap: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    range: range,\r\n                    options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n                }\r\n            ]);\r\n\r\n        }\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        // console statement execution:\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        let module = this.main.currentWorkspace.moduleStore.findModuleByFile(file);\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        this.programPointerModule = module;\r\n        this.programPointerPosition = position;\r\n\r\n        if (module != this.getCurrentlyEditedModule()) {\r\n            this.setModuleActive(module);\r\n        } else {\r\n            this.showProgramPointer();\r\n        }\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws == null) return null;\r\n\r\n        return ws.currentlyOpenModule;\r\n    }\r\n\r\n    setCurrentlyEditedModule(m: Module) {\r\n        if (m == null) return;\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws.currentlyOpenModule != m) {\r\n            ws.currentlyOpenModule = m;\r\n            ws.saved = false;\r\n            m.file.dirty = true;\r\n        }\r\n    }\r\n\r\n    setExplorerColor(color: string) {\r\n        let caption: string;\r\n\r\n        if (color == null) {\r\n            color = \"transparent\";\r\n            caption = \"Meine Datenbanken\";\r\n        } else {\r\n            caption = \"Schüler-DB\";\r\n        }\r\n\r\n        this.fileListPanel.$listElement.parent().css('background-color', color);\r\n        this.workspaceListPanel.$listElement.parent().css('background-color', color);\r\n\r\n        this.workspaceListPanel.setCaption(caption);\r\n    }\r\n\r\n    getNewModule(file: File): Module {\r\n        return new Module(file, this.main);\r\n    }\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class RightDiv {\r\n\r\n    isWholePage: boolean = false;\r\n\r\n    $tabs: JQuery<HTMLElement>;\r\n    $headings: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $rightDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$tabs = $rightDiv.find('.jo_tabs');\r\n        this.$headings = $rightDiv.find('.jo_tabheadings');\r\n        \r\n        let withClassDiagram = this.$headings.find('.jo_classDiagramTabHeading').length > 0;\r\n        let withObjectDiagram = this.$headings.find('.jo_objectDiagramTabHeading').length > 0;\r\n\r\n        let that = this;\r\n        let rightdiv_width: string = \"100%\";\r\n        $rightDiv.find('.jo_whole-window').on(\"click\", () => {\r\n\r\n            that.isWholePage = !that.isWholePage;\r\n            \r\n            let $wholeWindow = jQuery('.jo_whole-window');\r\n\r\n            if (!that.isWholePage) {\r\n                jQuery('#code').css('display', 'flex');\r\n                jQuery('#rightdiv').css('width', rightdiv_width);\r\n                // jQuery('#run').css('width', '');\r\n                $wholeWindow.removeClass('img_whole-window-back');\r\n                $wholeWindow.addClass('img_whole-window');\r\n                jQuery('#controls').insertAfter(jQuery('#view-mode'));\r\n                $wholeWindow.attr('title', 'Auf Fenstergröße vergrößern');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            } else {\r\n                jQuery('#code').css('display', 'none');\r\n                rightdiv_width = jQuery('#rightdiv').css('width');\r\n                jQuery('#rightdiv').css('width', '100%');\r\n                $wholeWindow.removeClass('img_whole-window');\r\n                $wholeWindow.addClass('img_whole-window-back');\r\n                // that.adjustWidthToWorld();\r\n                jQuery('.jo_control-container').append(jQuery('#controls'));\r\n                $wholeWindow.attr('title', 'Auf normale Größe zurückführen');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$rightDiv);\r\n    }\r\n\r\n\r\n\r\n}","import { jo_mouseDetected } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\nexport class Sliders {\r\n\r\n    main: Main;\r\n\r\n    constructor(main: Main) {\r\n        this.main = main;\r\n    }\r\n\r\n    initSliders() {\r\n        let that = this;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        jQuery('#slider1').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider1\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                \r\n                that.moveLeftPanel(dx);\r\n\r\n                x = mm.clientX;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider1\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider1\");\r\n                jQuery(document).off(mousePointer + \"up.slider1\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider2').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider2\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n\r\n                that.moveBottomDiv(dy);\r\n\r\n                y = mm.clientY;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider2\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider2\");\r\n                jQuery(document).off(mousePointer + \"up.slider2\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider3').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider3\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n\r\n                that.moveRightDiv(dx);\r\n\r\n                x = mm.clientX;\r\n                mm.stopPropagation();\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider3\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider3\");\r\n                jQuery(document).off(mousePointer + \"up.slider3\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        let sliderknobLeft = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"left: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobLeft);\r\n        sliderknobLeft.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopImmediatePropagation();\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobleft\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopImmediatePropagation();\r\n\r\n                that.moveLeftPanel(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobleft\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobleft\");\r\n                jQuery(document).off(mousePointer + \"up.knobleft\");\r\n            });\r\n\r\n        });\r\n\r\n        let sliderknobRight = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"right: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobRight);\r\n        sliderknobRight.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopImmediatePropagation();\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobright\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopImmediatePropagation();\r\n\r\n                that.moveRightDiv(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobright\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobright\");\r\n                jQuery(document).off(mousePointer + \"up.knobright\");\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n    \r\n    moveRightDiv(dx: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $rightDiv = jQuery('#rightdiv');\r\n\r\n        let width = Number.parseInt($rightDiv.css('width').replace('px', ''));\r\n        $rightDiv.css('width', (width - dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth + dx) + \"px\");\r\n        \r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n        jQuery('.jo_graphics').trigger('sizeChanged');\r\n        width += dx;\r\n}\r\n    moveBottomDiv(dy: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $bottomDiv = jQuery('#bottomdiv-outer');\r\n\r\n        let height = Number.parseInt($bottomDiv.css('height').replace('px', ''));\r\n        $bottomDiv.css('height', (height - dy) + \"px\");\r\n\r\n        let meheight = Number.parseInt($editor.css('height').replace('px', ''));\r\n        $editor.css('height', (meheight + dy) + \"px\");\r\n\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n}\r\n\r\n    moveLeftPanel(dx: number) {\r\n        let $leftPanel = jQuery('#leftpanel');\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n\r\n        let width = Number.parseInt($leftPanel.css('width').replace('px', ''));\r\n        $leftPanel.css('width', (width + dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth - dx) + \"px\");\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionPanel, AccordionElement } from \"./Accordion.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassData, UserData, CRUDUserRequest, CRUDClassRequest, GetWorkspacesResponse, GetWorkspacesRequest, Workspaces } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\nexport class TeacherExplorer {\r\n\r\n    studentPanel: AccordionPanel;\r\n    classPanel: AccordionPanel;\r\n\r\n    // save them here when displaying pupils workspaces:\r\n    ownWorkspaces: Workspace[];\r\n    currentOwnWorkspace: Workspace;\r\n\r\n    constructor(private main: Main, private classData: ClassData[]) {\r\n\r\n    }\r\n\r\n    removePanels() {\r\n        this.classPanel.remove();\r\n        this.studentPanel.remove();\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.initStudentPanel();\r\n\r\n        this.initClassPanel();\r\n\r\n        this.renderClasses(this.classData);\r\n\r\n    }\r\n\r\n    initStudentPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.studentPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Schüler/innen\", \"2\", null,\r\n            \"\", \"student\", false, false, \"student\", false, []);\r\n\r\n        this.studentPanel.selectCallback = (ae: UserData) => {\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let request: GetWorkspacesRequest = {\r\n                    ws_userId: ae.id,\r\n                    userId: this.main.user.id,\r\n                    language: 1\r\n                }\r\n\r\n                ajax(\"getWorkspaces\", request, (response: GetWorkspacesResponse) => {\r\n                    if (response.success == true) {\r\n\r\n                        if (that.main.workspacesOwnerId == that.main.user.id) {\r\n                            that.ownWorkspaces = that.main.workspaceList.slice();\r\n                            that.currentOwnWorkspace = that.main.currentWorkspace;\r\n                        }\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces);\r\n                        that.main.workspacesOwnerId = ae.id;\r\n                        that.main.projectExplorer.setExplorerColor(\"rgba(255, 0, 0, 0.2\");\r\n                        that.main.projectExplorer.$homeAction.show();\r\n                        Helper.showHelper(\"homeButtonHelper\", this.main);\r\n\r\n                        that.main.bottomDiv.showHomeworkTab();\r\n                        that.main.bottomDiv.homeworkManager.attachToWorkspaces(that.main.workspaceList);\r\n                    }\r\n\r\n                    this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n                    this.main.networkManager.secondsTillNextUpdate = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    restoreOwnWorkspaces() {\r\n        let main = this.main;\r\n\r\n        // main.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n        main.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        main.workspaceList = this.ownWorkspaces;\r\n        main.currentWorkspace = this.currentOwnWorkspace;\r\n        main.workspacesOwnerId = main.user.id;\r\n        main.projectExplorer.setExplorerColor(null);\r\n\r\n        main.projectExplorer.renderWorkspaces(main.workspaceList);\r\n\r\n        if (main.currentWorkspace == null && main.workspaceList.length > 0) {\r\n            main.currentWorkspace = main.workspaceList[0];\r\n        }\r\n\r\n        if (main.currentWorkspace != null) {\r\n            main.projectExplorer.setWorkspaceActive(main.currentWorkspace);\r\n        }\r\n\r\n        this.studentPanel.select(null, false);\r\n\r\n    }\r\n\r\n    initClassPanel() {\r\n        let that = this;\r\n\r\n        this.classPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Klassen\", \"1\", null, \"\", \"class\", false, false, \"class\", false, []);\r\n\r\n        this.classPanel.selectCallback = (ea) => {\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let classData = <ClassData>ea;\r\n                if (classData != null) {\r\n                    this.renderStudents(classData.students);\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    renderStudents(userDataList: UserData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        userDataList.sort((a, b) => {\r\n            if (a.familienname > b.familienname) return 1;\r\n            if (b.familienname > a.familienname) return -1;\r\n            if (a.rufname > b.rufname) return 1;\r\n            if (b.rufname > a.rufname) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let ud of userDataList) {\r\n            let ae: AccordionElement = {\r\n                name: ud.familienname + \", \" + ud.rufname,\r\n                sortName: ud.familienname + \" \" + ud.rufname,\r\n                externalElement: ud,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.studentPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n    renderClasses(classDataList: ClassData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        classDataList.sort((a, b) => {\r\n            if (a.name > b.name) return 1;\r\n            if (b.name > a.name) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let cd of classDataList) {\r\n            let ae: AccordionElement = {\r\n                name: cd.name,\r\n                externalElement: cd,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.classPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { openContextMenu, ContextMenuItem } from \"../../tools/HtmlTools.js\";\r\nimport { Dialog } from \"./Dialog.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\n\r\nexport class UserMenu {\r\n\r\n\r\n\r\n    constructor(private main: Main){\r\n        \r\n    }\r\n\r\n    init(){\r\n        let $userSettingsButton = jQuery('#buttonUserSettings');\r\n        let that = this;\r\n\r\n        // $userSettingsButton.on(\"click\", (e) => {\r\n\r\n        //     let contextMenuItems: ContextMenuItem[] = [\r\n        //         {\r\n        //             caption: \"Passwort ändern...\",\r\n        //             callback: () => {\r\n        //                 let passwortChanger = new PasswordChanger(that.main);\r\n        //                 passwortChanger.show();\r\n        //             }\r\n        //         }\r\n        //     ]\r\n\r\n\r\n        //     openContextMenu(contextMenuItems, $userSettingsButton.offset().left, $userSettingsButton.offset().top + $userSettingsButton.height());\r\n\r\n        // });\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class PasswordChanger {\r\n\r\n    dialog: Dialog;\r\n\r\n    constructor(private main: Main){\r\n\r\n        this.dialog = new Dialog();\r\n\r\n    }\r\n\r\n    show() {\r\n        this.dialog.init();\r\n        this.dialog.heading(\"Passwort ändern\");\r\n        this.dialog.description(\"Bitte geben Sie Ihr bisheriges Passwort und darunter zweimal Ihr neues Passwort ein. <br>\" + \r\n        \"Das Passwort muss mindestens 8 Zeichen lang sein und sowohl Buchstaben als auch Zahlen oder Sonderzeichen enthalten.\")\r\n        let $oldPassword = this.dialog.input(\"password\", \"Altes Passwort\");\r\n        let $newPassword1 = this.dialog.input(\"password\", \"Neues Passwort\");\r\n        let $newPassword2 = this.dialog.input(\"password\", \"Neues Passwort wiederholen\");\r\n        let $errorDiv = this.dialog.description(\"\", \"red\");\r\n        let waitDiv = this.dialog.waitMessage(\"Bitte warten...\")\r\n\r\n        this.dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {this.dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    if($newPassword1.val() != $newPassword2.val()){\r\n                        $errorDiv.text(\"Die zwei eingegebenen neuen Passwörter stimmen nicht überein.\")\r\n                    } else {\r\n                        waitDiv(true);\r\n                        ajax(\"changePassword\", {oldPassword: $oldPassword.val(), newPassword: $newPassword1.val()}, () => {\r\n                            waitDiv(false);\r\n                            alert(\"Das Passwort wurde erfolgreich geändert.\");\r\n                            this.dialog.close();\r\n                        }, (message) => {\r\n                            waitDiv(false);\r\n                            $errorDiv.text(message)\r\n                        })\r\n                    }\r\n\r\n                }\r\n            },\r\n        ])\r\n    }\r\n\r\n}","import { ajax } from \"../communication/AjaxHelper.js\";\r\nimport { LoginRequest, LoginResponse, LogoutRequest, UserData } from \"../communication/Data.js\";\r\nimport { Main } from \"./Main.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { userInfo } from \"os\";\r\nimport { UserMenu } from \"./gui/UserMenu.js\";\r\nimport { escapeHtml } from \"../tools/StringTools.js\";\r\n\r\nexport class Login {\r\n\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        let that = this;\r\n\r\n        let $loginSpinner = jQuery('#login-spinner>img');\r\n\r\n        jQuery('#login-username').focus();\r\n\r\n        jQuery('#login-username').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-password').focus();\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-button').focus();\r\n                jQuery('#login-button').addClass('jo_active');\r\n            }\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-button').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-username').focus();\r\n                jQuery('#login-button').removeClass('jo_active');\r\n            } else {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        // Avoid double login when user does doubleclick:\r\n        let loginHappened = false;\r\n        jQuery('#login-button').on('click', () => {\r\n\r\n            $loginSpinner.show();\r\n\r\n            if (loginHappened) return;\r\n            loginHappened = true;\r\n\r\n            setTimeout(() => {\r\n                loginHappened = false;\r\n            }, 1000);\r\n\r\n            let loginRequest: LoginRequest = {\r\n                username: <string>jQuery('#login-username').val(),\r\n                password: <string>jQuery('#login-password').val(),\r\n                language: 1\r\n            }\r\n\r\n            ajax('login', loginRequest, (response: LoginResponse) => {\r\n\r\n                if (!response.success) {\r\n                    jQuery('#login-message').html('Fehler: Benutzername und/oder Passwort ist falsch.');\r\n                } else {\r\n\r\n                    // We don't do this anymore for security reasons - see AjaxHelper.ts\r\n                    // Alternatively we now set a long expiry interval for cookie.\r\n                    // credentials.username = loginRequest.username;\r\n                    // credentials.password = loginRequest.password;\r\n\r\n                    jQuery('#login').hide();\r\n\r\n                    this.main.waitOverlay.show('Bitte warten...');\r\n\r\n                    let user: UserData = response.user;\r\n                    if (user.settings == null || user.settings.helperHistory == null) {\r\n                        user.settings = {\r\n                            helperHistory: {\r\n                            },\r\n                            viewModes: null,\r\n                            classDiagram: null\r\n                        }\r\n                    }\r\n\r\n                    this.main.waitForGUICallback = () => {\r\n\r\n                        that.main.mainMenu.initGUI(user);\r\n\r\n                        that.main.waitOverlay.hide();\r\n                        $loginSpinner.hide();\r\n                        jQuery('#menupanel-username').html(escapeHtml(user.rufname) + \" \" + escapeHtml(user.familienname));\r\n\r\n                        new UserMenu(that.main).init();\r\n\r\n                        if (user.is_teacher) {\r\n                            that.main.initTeacherExplorer(response.classdata);\r\n                        }\r\n\r\n                        that.main.user = user;\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces);\r\n                        that.main.workspacesOwnerId = user.id;\r\n\r\n                        that.main.networkManager.initializeTimer();\r\n\r\n                        that.main.projectExplorer.fileListPanel.setFixed(!user.is_teacher);\r\n                        that.main.projectExplorer.workspaceListPanel.setFixed(!user.is_teacher);\r\n\r\n                        that.main.viewModeController.initViewMode();\r\n                        that.main.bottomDiv.hideHomeworkTab();\r\n\r\n                        that.main.networkManager.initializeNotifierClient();\r\n\r\n                    }\r\n\r\n                    if (this.main.startupComplete == 0) {\r\n                        this.main.waitForGUICallback();\r\n                        this.main.waitForGUICallback = null;\r\n                    }\r\n\r\n                }\r\n\r\n            }, (errorMessage: string) => {\r\n                jQuery('#login-message').html('Login gescheitert: ' + errorMessage);\r\n                jQuery('#login-spinner>img').hide();\r\n            }\r\n            );\r\n\r\n        });\r\n\r\n        jQuery('#buttonLogout').on('click', () => {\r\n\r\n            this.main.waitOverlay.show('Bitte warten, der letzte Bearbeitungsstand wird noch gespeichert ...');\r\n\r\n            if (this.main.workspacesOwnerId != this.main.user.id) {\r\n                this.main.projectExplorer.onHomeButtonClicked();\r\n            }\r\n\r\n            this.main.networkManager.sendUpdates(() => {\r\n\r\n                let logoutRequest: LogoutRequest = {\r\n                    currentWorkspaceId: this.main.currentWorkspace?.id\r\n                }\r\n\r\n                ajax('logout', logoutRequest, () => {\r\n                    // window.location.href = 'index.html';\r\n                    this.main.networkManager.sendUpdateUserSettings(() => {});\r\n\r\n                    jQuery('#login').show();\r\n                    this.main.waitOverlay.hide();\r\n                    jQuery('#login-message').empty();\r\n                    this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"\", \"myJava\"));\r\n                    this.main.projectExplorer.fileListPanel.clear();\r\n                    this.main.projectExplorer.workspaceListPanel.clear();\r\n\r\n                    this.main.databaseExplorer.clear();\r\n                    this.main.resultsetPresenter.clear();\r\n\r\n                    if (this.main.user.is_teacher) {\r\n                        this.main.teacherExplorer.removePanels();\r\n                        this.main.teacherExplorer = null;\r\n                    }\r\n\r\n\r\n                    this.main.currentWorkspace = null;\r\n                    this.main.user = null;\r\n\r\n\r\n                });\r\n            }, true);\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\nimport { ViewModes, ViewMode } from \"../../communication/Data\";\r\n\r\nexport class ViewModeController {\r\n\r\n    $buttonEditorFullscreen: JQuery<HTMLElement>;\r\n    $buttonPresentationMode: JQuery<HTMLElement>;\r\n    $buttonMonitorMode: JQuery<HTMLElement>;\r\n\r\n    $buttonMap: { [key: string]: JQuery<HTMLElement> } = {};\r\n\r\n    highContrast: boolean = false;\r\n    editorHasFullWidth: boolean = false;\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private main: Main) {\r\n\r\n        this.$buttonEditorFullscreen = jQuery('<div title=\"Editor in voller Breite\" class=\"img_whole-window jo_button jo_active\" style=\"padding: 1px; margin-right: 20px\"></div>');\r\n        this.$buttonPresentationMode = jQuery('<div title=\"Präsentation (Beamer)\" class=\"img_presentation-mode jo_button jo_active\" syle=\"padding: 1px\"></div>');\r\n        this.$buttonMonitorMode = jQuery('<div title=\"Monitor\" class=\"img_monitor-mode jo_button jo_active\" style=\"margin-left: 5px; padding: 1px\"></div>');\r\n        $buttonsContainer.append(this.$buttonEditorFullscreen, this.$buttonPresentationMode, this.$buttonMonitorMode);\r\n\r\n        this.$buttonMap = {\r\n            \"presentation\": this.$buttonPresentationMode,\r\n            \"monitor\": this.$buttonMonitorMode\r\n        };\r\n\r\n        let am = this.main.actionManager;\r\n\r\n        am.registerAction(\"editor.fullwidth\", [],\r\n            () => {\r\n                this.toggleEditorFullwidth();\r\n            }, \"Editor auf die volle Breite erweitern\", this.$buttonEditorFullscreen);\r\n\r\n        am.registerAction(\"viewmode.presentation\", [],\r\n            () => {\r\n                this.setMode(\"presentation\");\r\n            }, \"Präsentationsansicht\", this.$buttonPresentationMode);\r\n\r\n        am.registerAction(\"viewmode.monitor\", [],\r\n            () => {\r\n                this.setMode(\"monitor\");\r\n            }, \"Monitoransicht\", this.$buttonMonitorMode);\r\n\r\n    }\r\n\r\n    toggleEditorFullwidth() {\r\n        if(this.editorHasFullWidth){\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in voller Breite');\r\n            jQuery('#rightdiv').show(600);\r\n            jQuery('#leftpanel').show(600);\r\n            jQuery('#controls').show();\r\n        } else {\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in normaler Breite');\r\n            jQuery('#rightdiv').hide(600);\r\n            jQuery('#leftpanel').hide(600);\r\n            jQuery('#controls').hide();\r\n        }\r\n\r\n        setTimeout(()=>{\r\n            this.main.getMonacoEditor().layout();\r\n        }, 800);\r\n\r\n        this.editorHasFullWidth = !this.editorHasFullWidth;\r\n    }\r\n\r\n    setMode(mode: \"presentation\" | \"monitor\", saveSettings: boolean = true) {\r\n\r\n        let otherMode = mode == \"presentation\" ? \"monitor\" : \"presentation\";\r\n\r\n        this.$buttonMap[mode].addClass(\"jo_pressed\");\r\n        this.$buttonMap[otherMode].removeClass(\"jo_pressed\");\r\n\r\n        let settings = this.main.user.settings;\r\n        let viewModes = settings.viewModes;\r\n\r\n        let viewMode = viewModes[mode];\r\n        viewModes.viewModeChosen = mode;\r\n\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n\r\n        this.main.editor.setFontSize(viewMode.fontSize);\r\n\r\n        if (this.highContrast != viewMode.highContrast) {\r\n            let editor = this.main.getMonacoEditor();\r\n            editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n            this.highContrast = !this.highContrast;\r\n        }\r\n\r\n        if (saveSettings) this.saveSettings();\r\n\r\n    }\r\n\r\n    saveFontSize(fontSizePx: number) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.fontSize = fontSizePx;\r\n        this.saveSettings();\r\n    }\r\n\r\n    setTheme(theme: string) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.theme = theme;\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n        this.saveSettings();\r\n    }\r\n\r\n    toggleHighContrast() {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.highContrast = !viewMode.highContrast;\r\n        let editor = this.main.getMonacoEditor();\r\n        editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n        this.saveSettings();\r\n    }\r\n\r\n    getChosenViewMode(): ViewMode {\r\n        let viewModes = this.main.user.settings.viewModes;\r\n        return viewModes[viewModes.viewModeChosen];\r\n    }\r\n\r\n    saveSettings() {\r\n        this.main.userDataDirty = true;\r\n    }\r\n\r\n    initViewMode() {\r\n        let settings = this.main.user.settings;\r\n\r\n        if (settings[\"viewModes\"] == null) {\r\n            settings[\"viewModes\"] = {\r\n                monitor: null,\r\n                presentation: null,\r\n                viewModeChosen: \"monitor\"\r\n            }\r\n        }\r\n\r\n        if (settings.viewModes.monitor == null) {\r\n            settings.viewModes.monitor = {\r\n                fontSize: 14,\r\n                highContrast: false,\r\n                theme: \"dark\"\r\n            };\r\n\r\n            settings.viewModes.presentation = {\r\n                fontSize: 18,\r\n                highContrast: false,\r\n                theme: \"light\"\r\n            }\r\n            this.saveSettings();\r\n        }\r\n        this.setMode(settings.viewModes.viewModeChosen, false);\r\n    }\r\n\r\n\r\n}","import { Main } from \"../../main/Main.js\";\r\nimport { TextPosition } from \"../lexer/Token\";\r\nimport { Module } from \"./Module\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype SemicolonPosition = {\r\n    position: TextPosition;\r\n    module: Module;\r\n    firstSeenMs: number;\r\n    isThereAgain: boolean;\r\n}\r\n\r\nexport class SemicolonAngel {\r\n    \r\n    semicolonPositions: SemicolonPosition[] = [];\r\n    time: number;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    startRegistering(){\r\n        this.semicolonPositions.forEach(p => p.isThereAgain = false);\r\n        this.time = new Date().getTime();\r\n    }\r\n\r\n    register(position: TextPosition, module: Module){\r\n        let oldEvidence = this.semicolonPositions.find(p => p.position.line == position.line && p.position.column == position.column);\r\n        if(oldEvidence){\r\n            oldEvidence.isThereAgain = true;\r\n        } else {\r\n            this.semicolonPositions.push({position: position, firstSeenMs: this.time, isThereAgain: true, module: module});\r\n        }\r\n    }\r\n\r\n    healSemicolons(){\r\n        let time = new Date().getTime();\r\n        this.semicolonPositions = this.semicolonPositions.filter(p => p.isThereAgain);\r\n\r\n        let currentlyEditedModule = this.main.getCurrentlyEditedModule();\r\n        let cursorLine = this.main.getMonacoEditor().getPosition().lineNumber;\r\n\r\n        this.semicolonPositions.filter(p => time - p.firstSeenMs > 2000).forEach(p => {\r\n\r\n            let isCurrentModule = p.module.file.id != null && p.module.file.id == currentlyEditedModule.file.id;\r\n\r\n            let editOperations: monaco.editor.IIdentifiedSingleEditOperation[] = [\r\n                {\r\n                    range: new monaco.Range(p.position.line, p.position.column, p.position.line, p.position.column),\r\n                    text: \";\",\r\n                    forceMoveMarkers: true\r\n                }\r\n            ]\r\n\r\n            if(isCurrentModule){\r\n                if(Math.abs(cursorLine - p.position.line) > 1){\r\n                    let editor = this.main.getMonacoEditor();\r\n                    const selection = editor.getSelection();\r\n                    editor.executeEdits('Semicolon-Angel', editOperations);\r\n                    editor.setSelection(selection);\r\n                    this.semicolonPositions.splice(this.semicolonPositions.indexOf(p), 1);\r\n                }\r\n            } \r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\r\nimport { Table, Column } from \"../../compiler/parser/SQLTable.js\";\r\nimport { DatabaseStructure } from \"../../tools/DatabaseTools.js\";\r\n\r\nexport class DatabaseExplorer {\r\n\r\n    collapsedTables: Map<string, boolean> = new Map();\r\n\r\n    constructor(private main: MainBase, public $mainDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    refresh() {\r\n\r\n        let dbTool = this.main.getDatabaseTool();\r\n\r\n        dbTool.retrieveDatabaseStructure((dbstructure: DatabaseStructure) => {\r\n\r\n            this.refreshAfterRetrievingDBStructure();\r\n        });\r\n\r\n    }\r\n\r\n    clear(){\r\n        this.$mainDiv.empty();\r\n    }\r\n\r\n    refreshAfterRetrievingDBStructure() {\r\n        let dbTool = this.main.getDatabaseTool();\r\n        let workspace = this.main.getCurrentWorkspace();\r\n        if (workspace != null) {\r\n            for (let m of workspace.moduleStore.getModules(false)) {\r\n                m.file.dirty = true;\r\n            }\r\n        }\r\n\r\n        let tables = Table.fromTableStructureList(dbTool.databaseStructure.tables);\r\n\r\n        this.$mainDiv.empty();\r\n\r\n        for (let table of tables) {\r\n            if(table.identifier != \"sqlite_sequence\"){\r\n                let $table = this.renderTable(table);\r\n                this.$mainDiv.append($table);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    renderTable(table: Table): JQuery<HTMLElement> {\r\n        let isCollapsed = this.collapsedTables.get(table.identifier) != null;\r\n\r\n        let $table = jQuery(\r\n            `<div class=\"jo_table\">\r\n           <div class=\"jo_tableheader\">\r\n              <div class=\"${isCollapsed ? 'img_tree-collapsed-dark' : 'img_tree-expanded-dark'} jo_treeswitch jo_button jo_active\"></div>\r\n              <div class=\"jo_tableheaderlink\">\r\n                <div class=\"img_table\"></div>\r\n                <div>${table.identifier}</div></div><div class=\"jo_tablesize\">(${table.size}&nbsp;Datensätze)</div>\r\n              </div>\r\n            </div>\r\n        </div>`);\r\n\r\n        $table.find('.jo_tableheader').on('pointerup', () => {\r\n            this.main.getResultsetPresenter().showTable(table.identifier);\r\n\r\n        })\r\n\r\n        let $columns = jQuery('<div class=\"jo_columnlist\"></div>')\r\n\r\n        for (let column of table.columns) {\r\n            let image = column.isPrimaryKey ? \"img_key\" : \"img_column\";\r\n\r\n            let referencesHtml = \"\";\r\n            if (column.references != null) {\r\n                referencesHtml = `<div class=\"img_foreign_key\" style=\"margin-left: 5px\"></div><div class=\"jo_references\">${column.references.table.identifier}.${column.references.identifier}</div>`\r\n            }\r\n\r\n            let type = column.type == null ? \"\" : column.type.toString();\r\n            let notNull: string = column.notNull ? '<div class=\"jo_dbnotnull\">not null</div>' : \"\";\r\n            let defaultValue: string = column.defaultValue ? `<div class=\"jo_dbdefault\">default ${column.defaultValue}</div>` : \"\";\r\n            let autoincrement: string = column.isAutoIncrement ? `<div class=\"jo_dbautoincrement\">autoincrement</div>` : \"\";\r\n\r\n            let $column = jQuery(`\r\n            <div class=\"jo_column\">\r\n                <div class=\"${image}\"></div>\r\n                <div>${column.identifier}</div>\r\n                <div class=\"jo_dbtype\">${type}</div>\r\n                ${autoincrement}\r\n                ${referencesHtml}\r\n                ${notNull}\r\n                ${defaultValue}\r\n            </div>\r\n            `);\r\n            $columns.append($column);\r\n        }\r\n\r\n        $table.append($columns);\r\n\r\n        let $treeSwitch = $table.find('.jo_treeswitch');\r\n        let that = this;\r\n        $treeSwitch.on('pointerup', (e) => {\r\n            e.stopPropagation();\r\n            let $columnList = $treeSwitch.parents('.jo_table').find('.jo_columnlist');\r\n            let collapsed = $treeSwitch.hasClass('img_tree-collapsed-dark');\r\n            if (collapsed) {\r\n                $treeSwitch.removeClass('img_tree-collapsed-dark');\r\n                $treeSwitch.addClass('img_tree-expanded-dark');\r\n                $columnList.slideDown(300);\r\n                that.collapsedTables.delete(table.identifier);\r\n            } else {\r\n                $treeSwitch.removeClass('img_tree-expanded-dark');\r\n                $treeSwitch.addClass('img_tree-collapsed-dark');\r\n                $columnList.slideUp(300);\r\n                that.collapsedTables.set(table.identifier, true);\r\n            }\r\n        });\r\n\r\n        return $table;\r\n    }\r\n\r\n\r\n\r\n}","// <div id=\"controls\">\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n// </div>\r\n\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { ResultsetPresenter } from \"./ResultsetPresenter.js\";\r\n\r\n\r\nexport class ProgramControlButtons {\r\n\r\n    $buttonStart: JQuery<HTMLElement>;\r\n    // $buttonPause: JQuery<HTMLElement>;\r\n    // $buttonStop: JQuery<HTMLElement>;\r\n    // $buttonStepOver: JQuery<HTMLElement>;\r\n    // $buttonStepInto: JQuery<HTMLElement>;\r\n    // $buttonStepOut: JQuery<HTMLElement>;\r\n    // $buttonRestart: JQuery<HTMLElement>;\r\n\r\n    // $buttonEdit: JQuery<HTMLElement>;\r\n\r\n\r\n    constructor(private main: MainBase, private $buttonsContainer: JQuery<HTMLElement>) {\r\n\r\n        this.$buttonStart = jQuery('<div title=\"Start\" class=\"img_start-dark jo_button\"></div>');\r\n        let am = this.main.getActionManager();\r\n\r\n        am.registerAction(\"execute\", ['Strg + Enter'],\r\n            () => {\r\n                if (am.isActive(\"execute\")) {\r\n\r\n                    this.main.getResultsetPresenter().executeSelectedStatements();\r\n                }\r\n\r\n            }, \"SQL-Statement ausführen\", this.$buttonStart\r\n        );\r\n\r\n        am.setActive('execute',false);\r\n\r\n        // this.$buttonPause = jQuery('<div title=\"Pause\" class=\"img_pause-dark jo_button\"></div>');\r\n        // this.$buttonStop = jQuery('<div title=\"Stop\" class=\"img_stop-dark jo_button\"></div>');\r\n        // this.$buttonStepOver = jQuery('<div title=\"Step over\" class=\"img_step-over-dark jo_button\"></div>');\r\n        // this.$buttonStepInto = jQuery('<div title=\"Step into\" class=\"img_step-into-dark jo_button\"></div>');\r\n        // this.$buttonStepOut = jQuery('<div title=\"Step out\" class=\"img_step-out-dark jo_button\"></div>');\r\n        // this.$buttonRestart = jQuery('<div title=\"Restart\" class=\"img_restart-dark jo_button\"></div>');\r\n\r\n        // this.$buttonEdit = jQuery('<div class=\"jo_editButton\" title=\"Programm anhalten damit der Programmtext bearbeitbar wird\"></div>')\r\n        // $editorContainer.append(this.$buttonEdit);\r\n\r\n        $buttonsContainer.append(this.$buttonStart\r\n            // , this.$buttonPause, this.$buttonStop,\r\n            // this.$buttonStepOver, this.$buttonStepInto, this.$buttonStepOut, this.$buttonRestart\r\n        );\r\n\r\n        // <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n        // <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n        // <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n        // <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n        // <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n        // <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n        // <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n        // <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n\r\n\r\n\r\n    }\r\n\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { SQLStatement } from \"../../compiler/parser/Parser.js\";\r\nimport { StatementCleaner } from \"../../compiler/parser/StatementCleaner.js\";\r\nimport { QueryResult } from \"../../tools/DatabaseTools.js\";\r\nimport { WDatabase } from \"../../workspace/WDatabase.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\ntype RuntimeError = {\r\n    statement: SQLStatement,\r\n    message: string\r\n}\r\n\r\nexport interface WriteQueryListener {\r\n    notify(statements: SQLStatement[]): void;\r\n}\r\n\r\nexport class ResultsetPresenter {\r\n\r\n    $paginationDiv: JQuery<HTMLDivElement>;\r\n    $infoDiv: JQuery<HTMLDivElement>;\r\n    $arrowLeft: JQuery<HTMLDivElement>;\r\n    $arrowRight: JQuery<HTMLDivElement>;\r\n\r\n    paginationFrom: number;\r\n    paginationAll: number;\r\n\r\n    paginationSize: number = 1000;\r\n\r\n    result: QueryResult;\r\n\r\n    writeQueryListeners: WriteQueryListener[] = [];\r\n\r\n    public static StatementDelimiter: string = \";\\n\\n\"\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$paginationDiv = jQuery('.jo_pagination');\r\n        this.$arrowLeft = jQuery('<div class=\"jo_button img_arrow-left-dark jo_active\"></div>');\r\n        this.$infoDiv = jQuery('<div class=\"jo_pagination_info\"><span class=\"jo_pagination_fromto\">0001 - 1000</span> von <span class=\"jo_pagination_all\">5000</span></div>');\r\n        this.$arrowRight = jQuery('<div class=\"jo_button img_arrow-right-dark jo_active\"></div>');\r\n\r\n        this.$paginationDiv.append(this.$arrowLeft, this.$infoDiv, this.$arrowRight);\r\n\r\n        this.$paginationDiv.hide();\r\n\r\n        let mousePointer = (window.PointerEvent ? \"pointer\" : \"mouse\") + 'up';\r\n\r\n        let that = this;\r\n        this.$arrowLeft.on(mousePointer, (e) => {\r\n            if (that.paginationFrom > 1) {\r\n                that.paginationFrom = Math.max(that.paginationFrom - that.paginationSize, 1);\r\n                if (that.paginationFrom % 1000 != 1) {\r\n                    that.paginationFrom = (Math.floor(that.paginationFrom / that.paginationSize) + 1) * that.paginationSize + 1;\r\n                }\r\n                that.showResults();\r\n                that.activateButtons();\r\n            }\r\n        })\r\n\r\n        this.$arrowRight.on(mousePointer, (e) => {\r\n            if (that.paginationFrom < this.paginationAll - that.paginationSize + 1) {\r\n                that.paginationFrom = Math.min(that.paginationFrom + that.paginationSize, that.paginationAll - that.paginationSize + 1);\r\n                that.showResults();\r\n                that.activateButtons();\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    public addWriteQueryListener(listener: WriteQueryListener) {\r\n        this.writeQueryListeners.push(listener);\r\n    }\r\n\r\n    private activateButtons() {\r\n        this.$arrowLeft.toggleClass('jo_active', this.paginationFrom > 1);\r\n        this.$arrowRight.toggleClass('jo_active', this.paginationFrom < this.paginationAll - this.paginationSize + 1);\r\n    }\r\n\r\n    executeSelectedStatements() {\r\n\r\n        let statements = this.fetchSelectedStatements().filter(st => st.ast.type != TokenType.omittedeStatement);\r\n        \r\n        if (statements.length == 0) return;\r\n\r\n        let hasDDLStatements: boolean = statements.some(st => this.isDDLStatement(st));\r\n        let hasWriteStatements: boolean = statements.some(st => this.isWriteStatement(st));\r\n        let workspace = this.main.getCurrentWorkspace();\r\n        let database = workspace.database;\r\n\r\n        if (hasDDLStatements && workspace.permissions <= 2) {\r\n            alert(\"Der Benutzer hat keine Berechtigung zum Ändern der Tabellenstruktur.\");\r\n            return;\r\n        }\r\n\r\n        if (hasWriteStatements && workspace.permissions <= 1) {\r\n            alert(\"Der Benutzer hat keine Berechtigung zum Einfügen/Löschen/Ändern von Datensätzen.\");\r\n            return;\r\n        }\r\n\r\n        if (hasDDLStatements || hasWriteStatements) {\r\n            if (this.main.isEmbedded()) {\r\n                this.executeDDLWriteStatementsEmbedded(workspace, statements, database);\r\n\r\n            } else {\r\n                this.executeDDLWriteStatementsInOnlineIDE(workspace, statements, database);\r\n            }\r\n\r\n        } else {\r\n            this.executeStatements(statements, 0, [], () => { });\r\n        }\r\n\r\n    }\r\n\r\n    executeDDLWriteStatementsEmbedded(workspace: Workspace, statements: SQLStatement[], database: WDatabase) {\r\n        let sucessfullyExecutedModifyingStatements: SQLStatement[] = [];\r\n        this.executeStatements(statements, 0, sucessfullyExecutedModifyingStatements, () => {\r\n\r\n            if (sucessfullyExecutedModifyingStatements.length == 0)\r\n                return;\r\n\r\n            this.main.getDatabaseExplorer().refresh();\r\n\r\n            this.writeQueryListeners.forEach(listener => listener.notify(sucessfullyExecutedModifyingStatements))\r\n        })\r\n    }\r\n\r\n    private executeDDLWriteStatementsInOnlineIDE(workspace: Workspace, statements: SQLStatement[], database: WDatabase) {\r\n        let main: Main = <Main>this.main;\r\n        // Step 1: Update Database to newest version to avoid potential database reset\r\n        main.networkManager.getNewStatements(workspace, (new_statements, firstStatementIndex) => {\r\n\r\n            main.notifier.executeNewStatements(new_statements, firstStatementIndex, () => { },\r\n                () => {\r\n                    // Step 2: Execute new statements to see which are successful\r\n                    let sucessfullyExecutedModifyingStatements: SQLStatement[] = [];\r\n                    this.executeStatements(statements, 0, sucessfullyExecutedModifyingStatements, () => {\r\n\r\n                        if (sucessfullyExecutedModifyingStatements.length == 0)\r\n                            return;\r\n\r\n                        // Step 3: Send successful statements to server in order to retrieve new db-version-number\r\n                        main.networkManager.AddDatabaseStatements(workspace, sucessfullyExecutedModifyingStatements.map(st => st.sqlCleaned == null ? st.sql : st.sqlCleaned), (statements_before, new_version) => {\r\n\r\n                            // Step 4: If another user sent statements between steps 1 and 3 then they are in array statements_before.\r\n                            // Add all new statements to local statement list\r\n                            statements_before.forEach(st => database.statements.push(st));\r\n                            this.main.getHistoryViewer().appendStatements(statements_before);\r\n                            let modifyingStatements = sucessfullyExecutedModifyingStatements.map(st => st.sqlCleaned == null ? st.sql : st.sqlCleaned)\r\n                            database.statements = database.statements.concat(modifyingStatements);\r\n                            this.main.getHistoryViewer().appendStatements(modifyingStatements);\r\n                            database.version = new_version;\r\n\r\n                            // Step 5 (worst case): statements before is not empty, so the should be executed before the statements executed in step 2\r\n                            // => clear whole database and execute all statements in the right order, beginning with a empty database.\r\n                            if (statements_before.length > 0) {\r\n\r\n                                this.resetDatabase(database);\r\n\r\n                            } else {\r\n\r\n                                main.getDatabaseExplorer().refresh();\r\n\r\n                            }\r\n\r\n                        });\r\n                    });\r\n                }, false);\r\n        });\r\n    }\r\n\r\n    resetDatabase(database: WDatabase) {\r\n        this.main.getDatabaseTool().initializeWorker(database.templateDump, database.statements, () => {\r\n            this.main.getDatabaseExplorer().refresh();\r\n        })\r\n    }\r\n\r\n    executeStatementsString(statements: string[], fromIndex: number, callback: () => void) {\r\n        if (statements.length == 0) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (fromIndex < statements.length) {\r\n            this.main.getDatabaseTool().executeQuery(statements[fromIndex],\r\n                (results) => { this.executeStatementsString(statements, fromIndex + 1, callback) },\r\n                (error) => { console.log(\"Error when executing statement \" + statements[fromIndex] + \"\\nError : \" + error); this.executeStatementsString(statements, fromIndex + 1, callback) });\r\n        } else {\r\n            callback();\r\n        }\r\n    }\r\n\r\n\r\n    executeStatements(statements: SQLStatement[], index: number, successfullyExecutedModifyingStatements: SQLStatement[], callback: () => void, errors: RuntimeError[] = []) {\r\n\r\n        if (index >= statements.length) {\r\n            this.showErrors(errors);\r\n\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        let statement = statements[index];\r\n\r\n\r\n        let callback1 = () => {\r\n            this.executeStatements(statements, index + 1, successfullyExecutedModifyingStatements, callback, errors);\r\n        }\r\n\r\n        if (statement.ast == null) {\r\n            callback1();\r\n            return;\r\n        }\r\n\r\n        if (statement.ast.type == TokenType.keywordSelect) {\r\n            let laterSelectExists: boolean = false;\r\n            for (let j = index + 1; j < statements.length; j++) laterSelectExists = laterSelectExists || this.isSelectStatement(statements[j]);\r\n            if (laterSelectExists) {\r\n                callback1();\r\n            } else {\r\n                if (statement.ast.limitNode == null) {\r\n                    statement.sql.trimRight();\r\n                    while (statement.sql.endsWith(\";\") || statement.sql.endsWith(\"\\n\") || statement.sql.endsWith(\"\\r\")) {\r\n                        statement.sql = statement.sql.substring(0, statement.sql.length - 1);\r\n                        statement.sql.trimRight();\r\n                    }\r\n                    statement.sql += \" limit 100000\";\r\n                }\r\n                this.main.getDatabaseTool().executeQuery(statement.sql,\r\n                    (results) => { this.presentResultsIntern(statement.sql, results); callback1(); },\r\n                    (error) => { errors.push({ statement: statement, message: error }); callback1(); });\r\n            }\r\n        } else {\r\n            let sql = new StatementCleaner().clean(statement);\r\n            console.log(sql);\r\n            this.main.getDatabaseTool().executeQuery(sql, (results) => { successfullyExecutedModifyingStatements.push(statement); callback1(); }, (error) => { errors.push({ statement: statement, message: error }); callback1(); });\r\n        }\r\n\r\n    }\r\n\r\n    oldErrorDecorations: string[] = [];\r\n    showErrorDecorations(errors: RuntimeError[]) {\r\n\r\n        let minimapColors = {\r\n            \"error\": \"#bc1616\",\r\n            \"warning\": \"#cca700\",\r\n            \"info\": \"#75beff\"\r\n        }\r\n\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        let markers: monaco.editor.IMarkerData[] = [];\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n        for (let error of errors) {\r\n            let errorlevel = \"error\";\r\n\r\n            let linesDecorationsClassName: string;\r\n            let borderLeftClass: string;\r\n            let minimapColor: string = minimapColors[errorlevel];\r\n\r\n            switch (errorlevel) {\r\n                case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n            }\r\n\r\n            let severity: monaco.MarkerSeverity;\r\n            switch (errorlevel) {\r\n                case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n            }\r\n\r\n            markers.push({\r\n                startLineNumber: error.statement.from.line,\r\n                startColumn: error.statement.from.column,\r\n                endLineNumber: error.statement.to.line,\r\n                endColumn: error.statement.to.column,\r\n                message: error.message,\r\n                severity: severity\r\n            });\r\n\r\n            decorations.push({\r\n                range: {\r\n                    startLineNumber: error.statement.from.line,\r\n                    startColumn: error.statement.from.column,\r\n                    endLineNumber: error.statement.to.line,\r\n                    endColumn: error.statement.to.column,\r\n                },\r\n                options: {\r\n                    linesDecorationsClassName: linesDecorationsClassName,\r\n                    minimap: {\r\n                        position: monaco.editor.MinimapPosition.Inline,\r\n                        color: minimapColor\r\n                    }\r\n                }\r\n\r\n            });\r\n\r\n\r\n        }\r\n\r\n        let model = this.main.getCurrentlyEditedModule().model;\r\n        monaco.editor.setModelMarkers(model, 'test', markers);\r\n        this.oldErrorDecorations = model.deltaDecorations(this.oldErrorDecorations, decorations);\r\n\r\n    }\r\n\r\n    showTable(identifier: string) {\r\n        let statement = \"select * from \" + identifier + \";\";\r\n        this.main.getDatabaseTool().executeQuery(statement,\r\n            (results) => { this.presentResultsIntern(statement, results); },\r\n            (error) => { });\r\n    }\r\n\r\n\r\n\r\n    showErrors(errors: RuntimeError[]) {\r\n        let $runtimeErrorsTab = this.$bottomDiv.find('.jo_errorsTab');\r\n        let $runtimeErrorsTabHeading = this.$bottomDiv.find('.jo_errorsTabheading');\r\n\r\n        $runtimeErrorsTab.empty();\r\n        this.showErrorDecorations(errors);\r\n\r\n        if (errors.length == 0) return;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        $runtimeErrorsTabHeading.trigger(mousePointer + \"down\");\r\n\r\n        let $errorList = jQuery('<div class=\"jo_errorlist\"></div>');\r\n        $runtimeErrorsTab.append($errorList);\r\n\r\n        for (let error of errors) {\r\n            let query = error.statement.sql;\r\n            query = query.replace(/\\n/g, \" \");\r\n            query = query.replace(/\\s\\s+/g, ' ');\r\n\r\n            let $errorLine = $('<div class=\"jo_error-line\" style=\"flex-direction:column; width: fit-content\"></div>')\r\n            $errorList.append($errorLine);\r\n\r\n            $errorLine.on(mousePointer + 'down', () => {\r\n                let range = {\r\n                    startColumn: error.statement.from.column, startLineNumber: error.statement.from.line,\r\n                    endColumn: error.statement.to.column, endLineNumber: error.statement.to.line\r\n                };\r\n\r\n                this.main.getMonacoEditor().revealRangeInCenter(range);\r\n                $errorList.find('.jo_error-line').removeClass('jo_active');\r\n                $errorLine.addClass('jo_active');\r\n\r\n            })\r\n\r\n\r\n            let $sqlDiv = $('<div class=\"jo_sqlErrorStatement\"></div>');\r\n            $errorLine.append($sqlDiv);\r\n\r\n            monaco.editor.colorize(query, \"vscSQL\", {}).then(\r\n                (html) => { $sqlDiv.html(html) });\r\n\r\n            let $messageDiv = $('<div class=\"jo_sqlErrorMessage\">' + error.message + '</div>');\r\n            $errorLine.append($messageDiv);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    isSelectStatement(statement: SQLStatement): boolean {\r\n        return statement.ast != null && statement.ast.type == TokenType.keywordSelect;\r\n    }\r\n\r\n    isDDLStatement(statement: SQLStatement): boolean {\r\n        return statement.ast != null && [TokenType.keywordCreate, TokenType.keywordDrop, TokenType.keywordAlter].indexOf(statement.ast.type) >= 0;\r\n    }\r\n\r\n    isWriteStatement(statement: SQLStatement): boolean {\r\n        return statement.ast != null && [TokenType.keywordInsert, TokenType.keywordDelete, TokenType.keywordUpdate].indexOf(statement.ast.type) >= 0;\r\n    }\r\n\r\n    private presentResultsIntern(query: string, results: QueryResult[]) {\r\n        let $resultTabheading = this.$bottomDiv.find('.jo_resultTabheading');\r\n        let $resultHeader = this.$bottomDiv.find('.jo_result-header');\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        $resultTabheading.trigger(mousePointer + \"down\");\r\n        this.result = results.pop();\r\n\r\n        let headerDiv = $resultHeader;\r\n\r\n        query = query.replace(/\\n/g, \" \");\r\n        query = query.replace(/\\s\\s+/g, ' ');\r\n        query = query.replace(/limit 100000/g, '');\r\n\r\n        monaco.editor.colorize(query, \"vscSQL\", {}).then(\r\n            (html) => { headerDiv.html(html) });\r\n\r\n        this.paginationAll = this.result ? this.result.values.length : 0;\r\n        this.$infoDiv.find('.jo_pagination_all').html(`${this.paginationAll}`);\r\n        this.paginationFrom = 1;\r\n        this.$paginationDiv.show();\r\n        this.activateButtons();\r\n\r\n        this.showResults();\r\n\r\n    }\r\n\r\n    public clear() {\r\n        let $bodyDiv = this.$bottomDiv.find('.jo_result-body');\r\n        $bodyDiv.empty();\r\n        this.$paginationDiv.hide();\r\n    }\r\n\r\n    private showResultsBusy: boolean = false;\r\n    private showResultPending: boolean = false;\r\n\r\n    private showResults() {\r\n        let $bodyDiv = this.$bottomDiv.find('.jo_result-body');\r\n\r\n        if (this.result == null) {\r\n            this.$infoDiv.find('.jo_pagination_fromto').html('---');\r\n            $bodyDiv.html('Die Datenbank lieferte eine leere Ergebnistabelle.');\r\n            return;\r\n        }\r\n\r\n        let that = this;\r\n        let from = this.paginationAll == 0 ? 0 : this.paginationFrom;\r\n        let to = this.paginationAll == 0 ? 0 : Math.min(this.paginationFrom + this.paginationSize - 1, this.paginationAll);\r\n        this.$infoDiv.find('.jo_pagination_fromto').html(`${from} - ${to}`)\r\n\r\n        if (this.showResultsBusy) {\r\n            if (this.showResultPending) {\r\n                return;\r\n            }\r\n            this.showResultPending = true;\r\n            let waitFunction = () => {\r\n                if (that.showResultsBusy) {\r\n                    setTimeout(() => {\r\n                        waitFunction();\r\n                    }, 200);\r\n                } else {\r\n                    that.showResultPending = false;\r\n                    that.showResults();\r\n                }\r\n            }\r\n            setTimeout(waitFunction, 200);\r\n            return;\r\n        }\r\n\r\n        this.showResultsBusy = true;\r\n\r\n        let $table = jQuery('<table></table>');\r\n        let $header = jQuery('<tr></tr>');\r\n        $table.append($header);\r\n\r\n        this.result.columns.forEach((column) => { $header.append(jQuery(`<th><div>${column}</div></th>`)) });\r\n\r\n        let rows = this.result.values.slice(this.paginationFrom - 1, this.paginationFrom + this.paginationSize - 1);\r\n\r\n        let i = 0;\r\n        let f = () => {\r\n            if (i < rows.length) {\r\n                for (let j = i; j < Math.min(i + 200, rows.length); j++) {\r\n                    let row = rows[j];\r\n                    let $row = jQuery('<tr></tr>');\r\n                    $table.append($row);\r\n                    row.forEach((cell) => { $row.append(jQuery(`<td>${cell}</td>`)) });\r\n                }\r\n                i = Math.min(i + 200, rows.length);\r\n                if (i < rows.length) {\r\n                    setTimeout(f, 30);\r\n                } else {\r\n                    $bodyDiv.empty().append($table);\r\n                    this.showResultsBusy = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        f();\r\n\r\n        // rows.forEach((row) => {\r\n        //     let $row = jQuery('<tr></tr>');\r\n        //     $table.append($row);\r\n        //     row.forEach((cell) => {$row.append(jQuery(`<td>${cell}</td>`))});\r\n        // });\r\n\r\n        // bodyDiv.empty().append($table);\r\n\r\n    }\r\n\r\n\r\n    fetchSelectedStatements(): SQLStatement[] {\r\n        let module = this.main.getCurrentlyEditedModule();\r\n        if (module == null) return null;\r\n\r\n        let monacoEditor = this.main.getMonacoEditor();\r\n        // console.log(monacoEditor.getSelection());\r\n        // console.log(monacoEditor.getPosition());\r\n\r\n        let statements: SQLStatement[] = module.getSQLSTatementsAtSelection(monacoEditor.getSelection());\r\n        for (let statement of statements) {\r\n            statement.sql = monacoEditor.getModel().getValueInRange({\r\n                startColumn: statement.from.column,\r\n                startLineNumber: statement.from.line, endColumn: statement.to.column, endLineNumber: statement.to.line\r\n            });\r\n        }\r\n\r\n        // let sqlStatement = module.getSQLStatementAtPosition(monacoEditor.getPosition());\r\n\r\n        return statements;\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { Module } from \"../compiler/parser/Module.js\";\r\nimport { ResultsetPresenter } from \"../main/gui/ResultsetPresenter.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { WDatabase } from \"../workspace/WDatabase.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ajax } from \"./AjaxHelper.js\";\r\nimport { GetNewStatementsRequest, GetNewStatementsResponse, GetWebSocketTokenResponse, LongPollingListenerResponse, RegisterLongPollingListenerRequest, WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestGetNewStatements, WebSocketResponse } from \"./Data.js\";\r\n\r\nexport class Notifier {\r\n\r\n    connection: WebSocket;\r\n    isOpen: boolean = false;\r\n    workspace: Workspace;\r\n    database: WDatabase;\r\n\r\n    constructor(public main: Main) {\r\n        // Polling is not used. \r\n        // We try long polling (see below!)\r\n\r\n        // this.startPolling();\r\n    }\r\n\r\n    connect(workspace: Workspace) {\r\n\r\n        let that = this;\r\n        this.workspace = workspace;\r\n        this.database = workspace.database;\r\n\r\n        if (this.isOpen) {\r\n            this.connection.close();\r\n        }\r\n\r\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\r\n\r\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/websocket\";\r\n            this.connection = new WebSocket(url);\r\n\r\n            this.connection.onerror = (error: Event) => { this.onError(error); }\r\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\r\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\r\n\r\n            this.connection.onopen = (event: Event) => {\r\n                let request: WebSocketRequestConnect = {\r\n                    command: 1,\r\n                    token: response.token,\r\n                    workspaceId: workspace.id,\r\n                    databaseId: workspace.database.id,\r\n                    databaseVersion: workspace.database.version\r\n                }\r\n\r\n                this.isOpen = true;\r\n                this.sendIntern(JSON.stringify(request));\r\n                this.onOpen();\r\n\r\n            }\r\n\r\n            setTimeout(() => {\r\n                that.startLongPolling()\r\n            }, 2000);\r\n\r\n        });\r\n\r\n    }\r\n\r\n    unsentMessages: string[] = [];\r\n    sendIntern(message: string) {\r\n\r\n        if (!this.isOpen) {\r\n            this.unsentMessages.push(message);\r\n        } else {\r\n            try {\r\n                this.connection.send(message);\r\n            } catch (exception) {\r\n                console.log(exception);\r\n            }\r\n        }\r\n    }\r\n\r\n    onClose(event: CloseEvent) {\r\n        this.isOpen = false;\r\n    }\r\n\r\n\r\n    disconnect() {\r\n        let message: WebSocketRequestDisconnect = {\r\n            command: 4\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n        this.connection.close();\r\n        this.workspace = null;\r\n    }\r\n\r\n    onMessage(event: MessageEvent) {\r\n\r\n        let that = this;\r\n        let response: WebSocketResponse = JSON.parse(event.data);\r\n        if (response.command == undefined) return;\r\n\r\n        switch (response.command) {\r\n            case 2: // SendStatements\r\n                that.executeNewStatements(response.newStatements, response.firstNewStatementIndex, () => {\r\n                    let request: WebSocketRequestGetNewStatements = { command: 2, databaseVersion: that.database.version };\r\n                    that.sendIntern(JSON.stringify(request));\r\n                })\r\n                break;\r\n            case 3: // server initiated disconnect\r\n                this.isOpen = false;\r\n                this.database = null;\r\n                this.workspace = null;\r\n                break;\r\n            case 4: // keep alive\r\n                break;\r\n            case 5: // rollback\r\n                if (this.database.version > response.new_version) {\r\n                    this.main.getHistoryViewer().rollbackLocal();\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    executeNewStatements(newStatements: string[], firstNewStatementIndex: number, callbackIfTooFewStatements: () => void, callbackIfDone: () => void = () => { }, doRefreshDatabaseExplorer: boolean = true) {\r\n        if (this.database == null) return;\r\n        let that = this;\r\n        let delta = firstNewStatementIndex - (this.database.version + 1);\r\n        if (delta > 0) {\r\n            callbackIfTooFewStatements();\r\n            callbackIfDone();\r\n            return;\r\n        } else {\r\n            if (delta < 0) {\r\n                newStatements.splice(0, -delta);\r\n                firstNewStatementIndex -= delta;\r\n            }\r\n            let statements = newStatements;\r\n            if (statements.length > 0) {\r\n                this.main.resultsetPresenter.executeStatementsString(statements, 0, () => {\r\n                    that.main.getHistoryViewer().appendStatements(statements);\r\n                    that.database.statements = that.database.statements.concat(statements)\r\n                    that.database.version = firstNewStatementIndex + newStatements.length - 1;\r\n                    if (doRefreshDatabaseExplorer) {\r\n                        that.main.databaseExplorer.refresh();\r\n                    }\r\n                    callbackIfDone();\r\n                })\r\n            } else {\r\n                callbackIfDone();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    onError(error: Event) {\r\n    }\r\n\r\n    onOpen() {\r\n        this.isOpen = true;\r\n        if (this.unsentMessages.length > 0) {\r\n            this.unsentMessages.forEach(m => this.sendIntern(m));\r\n            this.unsentMessages = [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Polling is not used. \r\n     * We try long polling!\r\n     * (see below)\r\n     */\r\n    isPolling: boolean = false;\r\n    startPolling() {\r\n        if (this.isPolling) return;\r\n        this.isPolling = true;\r\n\r\n        this.poll();\r\n\r\n    }\r\n\r\n    /**\r\n     * Polling is not used.\r\n     * We try long polling!\r\n     * (see below)\r\n     */\r\n    counter: number = 0;\r\n    poll() {\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.poll();\r\n        }, 6000);\r\n\r\n        if (!that.isOpen && that.workspace != null) {\r\n            this.getNewStatementsHttp();\r\n\r\n            // retry connecting:\r\n            that.counter++;\r\n            if (that.counter == 10) {\r\n                that.counter = 0;\r\n                that.connect(that.workspace);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getNewStatementsHttp() {\r\n        let that = this;\r\n        if (this.workspace == null || this.database == null) return;\r\n\r\n        let request: GetNewStatementsRequest = {\r\n            workspaceId: this.workspace.id,\r\n            version_before: this.workspace.database.version\r\n        }\r\n\r\n        ajax('getNewStatements', request, (response: GetNewStatementsResponse) => {\r\n\r\n            that.executeNewStatements(response.newStatements, response.firstNewStatementIndex, () => {\r\n                that.getNewStatementsHttp();\r\n            })\r\n\r\n        });\r\n\r\n    }\r\n\r\n    isLongPolling: boolean = false;\r\n    startLongPolling() {\r\n        if (this.isLongPolling) return;\r\n        this.isLongPolling = true;\r\n\r\n        this.longPoll();\r\n\r\n    }\r\n\r\n    longPollCounter: number = 0;\r\n    longPoll() {\r\n        let that = this;\r\n\r\n        if (!that.isOpen && that.workspace != null) {\r\n            let request: RegisterLongPollingListenerRequest = {\r\n                workspaceId: that.workspace.id\r\n            }\r\n\r\n            $.ajax({\r\n                type: 'POST',\r\n                async: true,\r\n                data: JSON.stringify(request),\r\n                contentType: 'application/json',\r\n                url: \"servlet/registerLongPollingListener\",\r\n                success: function (resp: string) {\r\n                    let response: LongPollingListenerResponse = JSON.parse(resp);\r\n                    if (!that.isOpen && that.workspace?.id == request.workspaceId && response.success) {\r\n                        that.executeNewStatements(response.newStatements, response.firstNewStatementIndex, () => {\r\n                            that.getNewStatementsHttp();\r\n                        })\r\n\r\n                        let timeout: number = 1000;\r\n                        // retry connecting:\r\n                        that.longPollCounter++;\r\n                        if (that.longPollCounter == 10) {\r\n                            that.longPollCounter = 0;\r\n                            that.connect(that.workspace);\r\n                            timeout = 2000;\r\n                        }\r\n\r\n                        setTimeout(() => {\r\n                            that.longPoll();\r\n                        }, 2000);\r\n                    }\r\n                },\r\n                error: function (jqXHR, message) {\r\n                    if (!that.isOpen && that.workspace?.id == request.workspaceId) {\r\n                        setTimeout(() => {\r\n                            that.longPoll();\r\n                        }, 2000);\r\n                    }\r\n                }\r\n            });\r\n\r\n        } else {\r\n            setTimeout(() => {\r\n                that.longPoll();\r\n            }, 5000);\r\n        }\r\n\r\n    }\r\n\r\n}","export class WaitOverlay {\r\n\r\n    visible: boolean = false;\r\n    fadeOutPending: boolean = false;\r\n    $bitteWartenText: JQuery<HTMLElement>;\r\n    $bitteWartenProgress: JQuery<HTMLElement>;\r\n\r\n    constructor(private $waitDiv: JQuery<HTMLElement>){\r\n        this.$bitteWartenText = $waitDiv.find('.bitteWartenText');\r\n        this.$bitteWartenProgress = $waitDiv.find('.bitteWartenProgress');\r\n    }\r\n\r\n    show(message: string){\r\n        this.fadeOutPending = false;\r\n        this.$bitteWartenText.html(message);\r\n        this.$bitteWartenProgress.html('');\r\n        if(!this.visible){\r\n            this.visible = true;\r\n            this.$waitDiv.css('display', 'flex');\r\n            this.$waitDiv.hide();\r\n            this.$waitDiv.fadeIn(400);\r\n        }\r\n    }\r\n\r\n    setProgress(message: string){\r\n        this.$bitteWartenProgress.html(message);\r\n    }\r\n\r\n    hide(){\r\n        if(this.visible){\r\n            this.fadeOutPending = true;\r\n            setTimeout(() => {\r\n                if(this.fadeOutPending){\r\n                    this.fadeOutPending = false;\r\n                    this.$waitDiv.fadeOut(200, () => {\r\n                        this.$waitDiv.css('display', 'none');\r\n                    })\r\n                    this.visible = false;        \r\n                }                \r\n            }, 50);\r\n        }\r\n    }\r\n\r\n}","import { MainEmbedded } from \"../../embedded/MainEmbedded.js\";\r\nimport { copyTextToClipboard, openContextMenu } from \"../../tools/HtmlTools.js\";\r\nimport { WDatabase } from \"../../workspace/WDatabase.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\ntype HistoryPanelEntry = {\r\n    statement: string;\r\n    $div: JQuery<HTMLDivElement>;\r\n    $rollbackButton: JQuery<HTMLDivElement>;\r\n}\r\n\r\nexport class HistoryViewer {\r\n\r\n    panelEntries: HistoryPanelEntry[] = [];\r\n\r\n    constructor(private main: MainBase, private $historyPanel: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    clear() {\r\n        this.$historyPanel.empty();\r\n        this.panelEntries = [];\r\n    }\r\n\r\n    clearAndShowStatements(statements: string[]) {\r\n        this.clear();\r\n        this.appendStatements(statements);\r\n    }\r\n\r\n    appendStatements(statements: string[]) {\r\n        statements.forEach(stmt => {\r\n            let panelEntry = this.makePanelEntry(stmt, this.panelEntries.length + 1);\r\n            this.$historyPanel.prepend(panelEntry.$div);\r\n            this.panelEntries.unshift(panelEntry);\r\n        })\r\n\r\n        this.makeLastButtonActive();\r\n    }\r\n\r\n    makeLastButtonActive() {\r\n        this.panelEntries.forEach(pe => pe.$rollbackButton.removeClass('jo_active'));\r\n\r\n        if (this.panelEntries.length > 0) {\r\n            this.panelEntries[0].$rollbackButton.addClass('jo_active');\r\n        }\r\n    }\r\n\r\n    makePanelEntry(statement: string, index: number): HistoryPanelEntry {\r\n        let $div = <JQuery<HTMLDivElement>>jQuery(`<div class=\"jo_panelEntry\"></div>`);\r\n        let $index = jQuery(`<div class=\"jo_panelEntryIndex\">${index}.</div>`);\r\n        let $text = jQuery(`<div class=\"jo_panelEntryText\"></div>`);\r\n        let t: string = statement.substring(0, Math.min(400, statement.length));\r\n        if (statement.length > 400) {\r\n            t += \"...\";\r\n        }\r\n        $text.text(t);\r\n        let $copybutton = <JQuery<HTMLDivElement>>jQuery(`<div class=\"img_copy jo_panelEntryCopyButton jo_active jo_button\" title=\"In die Zwischenablage kopieren\"></div>`)\r\n        let $rollbackbutton = <JQuery<HTMLDivElement>>jQuery(`<div class=\"img_undo jo_panelEntryRollbackButton jo_button\" title=\"Rollback\"></div>`)\r\n        let that = this;\r\n\r\n        $copybutton.on('click', () => {\r\n            copyTextToClipboard(statement);\r\n        })\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $rollbackbutton.on(mousePointer + 'up', (ev) => {\r\n            ev.preventDefault();\r\n            openContextMenu([{\r\n                caption: \"Abbrechen\",\r\n                callback: () => {\r\n                }\r\n            }, {\r\n                caption: \"Ich bin mir sicher: rollback!\",\r\n                color: \"#ff6060\",\r\n                callback: () => {\r\n                    this.rollback();\r\n                }\r\n            }], ev.pageX + 2, ev.pageY + 2);\r\n            ev.stopPropagation();\r\n        })\r\n\r\n        $div.append($index, $text, $copybutton, $rollbackbutton);\r\n        return {\r\n            $div: $div,\r\n            statement: statement,\r\n            $rollbackButton: $rollbackbutton\r\n        }\r\n    }\r\n\r\n    rollback() {\r\n        if (this.panelEntries.length == 0) return;\r\n\r\n        if (this.main.isEmbedded()) {\r\n            this.rollbackEmbedded();\r\n        } else {\r\n            let main: Main = <Main>this.main;\r\n            main.networkManager.rollback((error: string, rollbackLocalNeeded: boolean) => {\r\n                if (error == null && rollbackLocalNeeded) {\r\n                    this.rollbackLocal();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    rollbackLocal() {\r\n        let database = this.main.getCurrentWorkspace().database;\r\n        database.statements.pop();\r\n        database.version--;\r\n        this.main.getDatabaseTool().initializeWorker(database.templateDump, database.statements, () => {\r\n\r\n        }, () => {\r\n            this.main.getDatabaseExplorer().refreshAfterRetrievingDBStructure();\r\n            let lastPanelEntry = this.panelEntries.shift();\r\n            lastPanelEntry.$div.remove();\r\n            this.makeLastButtonActive();\r\n        })\r\n    }\r\n\r\n    rollbackEmbedded() {\r\n        let main: MainEmbedded = <MainEmbedded>this.main;\r\n        main.writeQueryManager.rollback();\r\n\r\n        this.main.getDatabaseTool().initializeWorker(main.initialTemplateDump,\r\n            main.initialStatements.concat(main.writeQueryManager.writtenStatements), () => { },\r\n            () => {\r\n                this.main.getDatabaseExplorer().refreshAfterRetrievingDBStructure();\r\n                let lastPanelEntry = this.panelEntries.shift();\r\n                lastPanelEntry.$div.remove();\r\n                this.makeLastButtonActive();\r\n            })\r\n    }\r\n\r\n}","import { ClassData, UserData, Workspaces } from \"../communication/Data.js\";\r\nimport { NetworkManager } from \"../communication/NetworkManager.js\";\r\nimport { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ActionManager } from \"./gui/ActionManager.js\";\r\nimport { BottomDiv } from \"./gui/BottomDiv.js\";\r\nimport { Editor } from \"./gui/Editor.js\";\r\nimport { Formatter } from \"./gui/Formatter.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { MainMenu } from \"./gui/MainMenu.js\";\r\nimport { ProjectExplorer } from \"./gui/ProjectExplorer.js\";\r\nimport { RightDiv } from \"./gui/RightDiv.js\";\r\nimport { Sliders } from \"./gui/Sliders.js\";\r\nimport { TeacherExplorer } from \"./gui/TeacherExplorer.js\";\r\nimport { ThemeManager } from \"./gui/ThemeManager.js\";\r\nimport { Login } from \"./Login.js\";\r\nimport { Module, File } from \"../compiler/parser/Module.js\";\r\nimport { ViewModeController } from \"./gui/ViewModeController.js\";\r\nimport { ErrorManager } from \"./gui/ErrorManager.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { DatabaseTool } from \"../tools/DatabaseTools.js\";\r\nimport { MainBase } from \"./MainBase.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { DatabaseExplorer } from \"./gui/DatabaseExplorer.js\";\r\nimport { ProgramControlButtons } from \"./gui/ProgramControlButtons.js\";\r\nimport { ResultsetPresenter } from \"./gui/ResultsetPresenter.js\";\r\nimport { Notifier } from \"../communication/Notifier.js\";\r\nimport { checkIfMousePresent } from \"../tools/HtmlTools.js\";\r\nimport { WaitOverlay } from \"./gui/WaitOverlay.js\";\r\nimport { HistoryViewer } from \"./gui/HistoryViewer.js\";\r\n\r\nexport class Main implements MainBase {\r\n    isEmbedded(): boolean {\r\n        return false;\r\n    }\r\n\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    // VORSICHT: ggf. Module -> any\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.projectExplorer.getCurrentlyEditedModule();\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n        this.projectExplorer.setModuleActive(module);\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n    getDatabaseTool(): DatabaseTool {\r\n        return this.databaseTool;\r\n    }\r\n\r\n    getDatabaseExplorer():DatabaseExplorer {\r\n        return this.databaseExplorer;\r\n    }\r\n\r\n    getResultsetPresenter(): ResultsetPresenter {\r\n        return this.resultsetPresenter;\r\n    }\r\n\r\n    getWaitOverlay(): WaitOverlay {\r\n        return this.waitOverlay;\r\n    }\r\n\r\n    getHistoryViewer(): HistoryViewer {\r\n        return this.historyViewer;\r\n    }\r\n\r\n    workspaceList: Workspace[] = [];\r\n    workspacesOwnerId: number;\r\n\r\n    // monaco_editor: monaco.editor.IStandaloneCodeEditor;\r\n    editor: Editor;\r\n    currentWorkspace: Workspace;\r\n    projectExplorer: ProjectExplorer;\r\n    teacherExplorer: TeacherExplorer;\r\n    networkManager: NetworkManager;\r\n    actionManager: ActionManager;\r\n    mainMenu: MainMenu;\r\n\r\n    login: Login;\r\n\r\n    compiler: Compiler;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    bottomDiv: BottomDiv;\r\n\r\n    startupComplete = 2;\r\n    waitForGUICallback: () => void;\r\n\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    user: UserData;\r\n    userDataDirty: boolean = false;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    rightDiv: RightDiv;\r\n\r\n    viewModeController: ViewModeController;\r\n\r\n    databaseTool: DatabaseTool;\r\n\r\n    databaseExplorer: DatabaseExplorer;\r\n\r\n    resultsetPresenter: ResultsetPresenter;\r\n\r\n    notifier: Notifier;\r\n\r\n    waitOverlay: WaitOverlay = new WaitOverlay(jQuery('.bitteWarten'));\r\n    historyViewer: HistoryViewer = new HistoryViewer(this, jQuery('.jo_historyTab'));\r\n\r\n    initGUI() {\r\n\r\n        checkIfMousePresent();\r\n\r\n        this.login = new Login(this);\r\n        this.login.initGUI();\r\n\r\n        this.databaseTool = new DatabaseTool(this);\r\n        this.databaseExplorer = new DatabaseExplorer(this, jQuery(\".jo_db_tree\"));\r\n\r\n        this.actionManager = new ActionManager(null, this);\r\n        this.actionManager.init();\r\n\r\n        this.networkManager = new NetworkManager(this, jQuery('#bottomdiv-outer .jo_updateTimerDiv'));\r\n\r\n        let sliders = new Sliders(this);\r\n        sliders.initSliders();\r\n        this.mainMenu = new MainMenu(this);\r\n        this.projectExplorer = new ProjectExplorer(this, jQuery('#leftpanel>.jo_projectexplorer'));\r\n        this.projectExplorer.initGUI();\r\n\r\n        this.bottomDiv = new BottomDiv(this, jQuery('#bottomdiv-outer>.jo_bottomdiv-inner'), jQuery('body'));\r\n\r\n        this.rightDiv = new RightDiv(this, jQuery('#rightdiv-inner'));\r\n        this.rightDiv.initGUI();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.themeManager = new ThemeManager();\r\n\r\n        this.viewModeController = new ViewModeController(jQuery(\"#view-mode\"), this);\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n        new ProgramControlButtons(this, jQuery('#controls'));\r\n\r\n        this.resultsetPresenter = new ResultsetPresenter(this, jQuery('.jo_bottomdiv-inner'));\r\n\r\n        this.notifier = new Notifier(this);\r\n\r\n    }\r\n\r\n\r\n    initEditor() {\r\n        this.editor = new Editor(this, true, false);\r\n        new Formatter().init();\r\n        // this.monaco_editor = \r\n        this.editor.initGUI(jQuery('#editor'));\r\n\r\n        let that = this;\r\n        jQuery(window).on('resize', (event) => {\r\n            jQuery('#bottomdiv-outer').css('height', '450px');\r\n            jQuery('#editor').css('height', (window.innerHeight - 450 - 30 - 2) + \"px\");\r\n            that.editor.editor.layout();\r\n            jQuery('#editor').css('height', \"\");\r\n\r\n        });\r\n\r\n        jQuery(window).trigger('resize');\r\n\r\n        this.checkStartupComplete();\r\n    }\r\n\r\n    initTeacherExplorer(classdata: ClassData[]) {\r\n        this.teacherExplorer = new TeacherExplorer(this, classdata);\r\n        this.teacherExplorer.initGUI();\r\n    }\r\n\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    start() {\r\n\r\n        if (this.waitForGUICallback != null) {\r\n            this.waitForGUICallback();\r\n        }\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.getMonacoEditor().layout();\r\n        }, 200);\r\n\r\n        this.compiler = new Compiler(this);\r\n\r\n        this.startTimer();\r\n\r\n        $(window).on('unload', function() {\r\n            \r\n            if(navigator.sendBeacon && that.user != null){\r\n                that.networkManager.sendUpdates(null, false);\r\n                that.networkManager.sendUpdateUserSettings(() => {});\r\n            }\r\n            \r\n        });\r\n\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n                this.projectExplorer.renderErrorCount(this.currentWorkspace, errors);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                if (this.projectExplorer) {\r\n                    this.version++;\r\n                }\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    removeWorkspace(w: Workspace) {\r\n        this.workspaceList.splice(this.workspaceList.indexOf(w), 1);\r\n    }\r\n\r\n    restoreWorkspaces(workspaces: Workspaces) {\r\n\r\n        this.workspaceList = [];\r\n        this.currentWorkspace = null;\r\n        // this.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\" , \"text\"));\r\n        this.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        let currentWorkspace: Workspace = null;\r\n\r\n        for (let ws of workspaces.workspaces) {\r\n\r\n            let workspace: Workspace = Workspace.restoreFromData(ws, this);\r\n            this.workspaceList.push(workspace);\r\n            if (ws.id == this.user.currentWorkspace_id) {\r\n                currentWorkspace = workspace;\r\n            }\r\n        }\r\n\r\n        this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n\r\n        if (currentWorkspace == null && this.workspaceList.length > 0) {\r\n            currentWorkspace = this.workspaceList[0];\r\n        }\r\n\r\n        if (currentWorkspace != null) {\r\n            this.projectExplorer.setWorkspaceActive(currentWorkspace);\r\n        }\r\n\r\n        if (this.workspaceList.length == 0) {\r\n\r\n            Helper.showHelper(\"newDatabaseHelper\", this, this.projectExplorer.workspaceListPanel.$captionElement);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    createNewWorkspace(name: string, owner_id: number): Workspace {\r\n        return new Workspace(name, this, owner_id);\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class ErrorManager {\r\n\r\n    oldDecorations: string[] = [];\r\n    oldErrorDecorations: string[] = [];\r\n    $errorDiv: JQuery<HTMLElement>;\r\n\r\n    $bracket_warning: JQuery<HTMLElement>;\r\n\r\n    minimapColor: {[key: string]:string } = {};\r\n\r\n    lightBulbOnClickFunctionList: {class: string, onClickFunction: () => void, title: string}[] = [];\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>, private $mainDiv: JQuery<HTMLElement>) {\r\n        this.minimapColor[\"error\"] = \"#bc1616\";\r\n        this.minimapColor[\"warning\"] = \"#cca700\";\r\n        this.minimapColor[\"info\"] = \"#75beff\";\r\n\r\n        this.$bracket_warning = $mainDiv.find(\".jo_parenthesis_warning\");\r\n\r\n        this.$bracket_warning.attr('title', 'Klammeralarm!');\r\n        this.$bracket_warning.children().attr('title', 'Klammeralarm!');\r\n\r\n        let that = this;\r\n        $mainDiv.find(\".jo_pw_undo\").on(\"click\", () => {\r\n            let editor = that.main.getMonacoEditor();\r\n            editor.trigger(\".\", \"undo\", {});\r\n        }).attr('title', 'Undo');\r\n    }\r\n\r\n    showParenthesisWarning(error: string){\r\n        if(error != null){\r\n            this.$bracket_warning.css(\"visibility\", \"visible\");\r\n            this.$bracket_warning.find(\".jo_pw_heading\").text(error);\r\n        } else {\r\n            this.$bracket_warning.css(\"visibility\", \"hidden\");\r\n        }\r\n    }\r\n\r\n    showErrors(workspace: Workspace): Map<Module, number> {\r\n\r\n        this.lightBulbOnClickFunctionList = [];\r\n\r\n        let errorCountMap: Map<Module, number> = new Map();\r\n\r\n        this.$errorDiv = this.$bottomDiv.find('.jo_tabs>.jo_errorsTab');\r\n        this.$errorDiv.empty();\r\n\r\n        let hasErrors = false;\r\n\r\n        let ms = workspace.moduleStore;\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        for (let m of ms.getModules(false)) {\r\n            let markers: monaco.editor.IMarkerData[] = [];\r\n            let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n            let $errorList: JQuery<HTMLElement>[] = [];\r\n\r\n            let errors = m.getSortedAndFilteredErrors();\r\n            errorCountMap.set(m, m.getErrorCount());\r\n\r\n            for (let error of errors) {\r\n\r\n                let linesDecorationsClassName: string;\r\n                let borderLeftClass: string;\r\n                let minimapColor: string = this.minimapColor[error.level];\r\n\r\n                switch (error.level) {\r\n                    case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                    case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                    case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n                }\r\n\r\n                if (error.quickFix != null) {\r\n                    let quickFix = error.quickFix;\r\n                    let lightBulbClass = \"lb_\" + Math.trunc(Math.random() * 1000000);\r\n                    linesDecorationsClassName = 'jo_yellowLightBulb ' + borderLeftClass + \" \" + lightBulbClass;\r\n\r\n                    this.lightBulbOnClickFunctionList.push({class: '.' + lightBulbClass, \r\n                    onClickFunction: () => {\r\n\r\n                        let edits = quickFix.editsProvider(m.model.uri);\r\n                        editor.executeEdits(\"\", edits.map((edit) => {\r\n                            let r = edit.edit.range;\r\n                            return {\r\n                                range: new monaco.Range(r.startLineNumber, r.startColumn, r.endLineNumber, r.endColumn),\r\n                                text: edit.edit.text,\r\n                                forceMoveMarkers: true\r\n                            }\r\n                        }\r\n                        ));\r\n\r\n                    },\r\n                    title: quickFix.title\r\n                })\r\n\r\n\r\n                }\r\n\r\n                this.processError(error, m, $errorList);\r\n\r\n                let severity: monaco.MarkerSeverity;\r\n                switch (error.level) {\r\n                    case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                    case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                    case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n                }\r\n\r\n                markers.push({\r\n                    startLineNumber: error.position.line,\r\n                    startColumn: error.position.column,\r\n                    endLineNumber: error.position.line,\r\n                    endColumn: error.position.column + error.position.length,\r\n                    message: error.text,\r\n                    severity: severity,\r\n                    //@ts-ignore\r\n                    relatedInformation: error.quickFix\r\n                });\r\n\r\n                decorations.push({\r\n                    range: {\r\n                        startLineNumber: error.position.line,\r\n                        startColumn: error.position.column,\r\n                        endLineNumber: error.position.line,\r\n                        endColumn: error.position.column + error.position.length\r\n                    },\r\n                    options: {\r\n                        linesDecorationsClassName: linesDecorationsClassName,\r\n                        minimap: {\r\n                            position: monaco.editor.MinimapPosition.Inline,\r\n                            color: minimapColor\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n            }\r\n\r\n            monaco.editor.setModelMarkers(m.model, 'test', markers);\r\n            m.oldErrorDecorations = m.model.deltaDecorations(m.oldErrorDecorations, decorations);\r\n\r\n            // decorations used when user clicks on error in error-list:\r\n            this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, []);\r\n\r\n\r\n            if ($errorList.length > 0 && this.$errorDiv.length > 0) {\r\n                hasErrors = true;\r\n                let $file = jQuery('<div class=\"jo_error-filename\">' + m.file.name + '&nbsp;</div>');\r\n                this.$errorDiv.append($file);\r\n                for (let $error of $errorList) {\r\n                    this.$errorDiv.append($error);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasErrors && this.$errorDiv.length > 0) {\r\n            this.$errorDiv.append(jQuery('<div class=\"jo_noErrorMessage\">Keine Fehler gefunden :-)</div>'));\r\n        }\r\n\r\n        this.registerLightbulbOnClickFunctions();\r\n\r\n        return errorCountMap;\r\n\r\n    }\r\n\r\n    registerLightbulbOnClickFunctions() {\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            for(let locf of that.lightBulbOnClickFunctionList){\r\n                    jQuery(locf.class).off('click', locf.onClickFunction);\r\n                    jQuery(locf.class).on('click', locf.onClickFunction).attr('title', locf.title);\r\n            }            \r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    processError(error: Error, m: Module, $errorDivs: JQuery<HTMLElement>[]) {\r\n\r\n        let $div = jQuery('<div class=\"jo_error-line\"></div>');\r\n        let $lineColumn = jQuery('<span class=\"jo_error-position\">[Z&nbsp;<span class=\"jo_linecolumn\">' + error.position.line + '</span>' +\r\n            ' Sp&nbsp;<span class=\"jo_linecolumn\">' + error.position.column + '</span>]</span>:&nbsp;');\r\n        let category = \"\";\r\n        switch (error.level) {\r\n            case \"error\": break;\r\n            case \"warning\": category = '<span class=\"jo_warning_category\">Warnung: </span>'; break;\r\n            case \"info\": category = '<span class=\"jo_info_category\">Info: </span>'; break;\r\n        }\r\n        let $message = jQuery('<div class=\"jo_error-text\">' + category + error.text + \"</div>\");\r\n\r\n        $div.append($lineColumn).append($message);\r\n\r\n        let that = this;\r\n        $div.on(\"mousedown\", (ev) => {\r\n            this.$errorDiv.find('.jo_error-line').removeClass('jo_active');\r\n            $div.addClass('jo_active');\r\n            that.showError(m, error);\r\n        });\r\n\r\n        $errorDivs.push($div);\r\n    }\r\n\r\n    showError(m: Module, error: Error) {\r\n\r\n        if (this.main instanceof Main) {\r\n            if (m != this.main.projectExplorer.getCurrentlyEditedModule()) {\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n        let position = error.position;\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n\r\n        let className: string = \"\";\r\n        switch (error.level) {\r\n            case \"error\": className = \"jo_revealError\"; break;\r\n            case \"warning\": className = \"jo_revealWarning\"; break;\r\n            case \"info\": className = \"jo_revealInfo\"; break;\r\n        }\r\n\r\n\r\n        this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, [\r\n            {\r\n                range: range,\r\n                options: { className: className }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n}","import { makeDiv } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { stringToDate, dateToStringWithoutTime } from \"../../tools/StringTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\ntype ModuleWithWorkspace = {\r\n    module: Module,\r\n    workspace: Workspace\r\n}\r\n\r\ntype DayWithModules = {\r\n    date: Date;\r\n    day: string;\r\n    modules: ModuleWithWorkspace[];\r\n}\r\n\r\nexport class HomeworkManager {\r\n\r\n    $homeworkTab: JQuery<HTMLElement>;\r\n    $homeworkTabLeft: JQuery<HTMLElement>;\r\n    $homeworkTabRight: JQuery<HTMLElement>;\r\n\r\n    $showRevisionButton: JQuery<HTMLElement>;\r\n    showRevisionActive: boolean = false;\r\n\r\n    diffEditor: monaco.editor.IStandaloneDiffEditor;\r\n\r\n    constructor(private main: Main, public $bottomDiv: JQuery<HTMLElement>) {\r\n        this.$homeworkTab = $bottomDiv.find('.jo_tabs>.jo_homeworkTab');\r\n    }\r\n\r\n    initGUI() {\r\n        let that = this;\r\n        this.$homeworkTab.append(this.$homeworkTabLeft = makeDiv(\"\", \"jo_homeworkTabLeft jo_scrollable\"));\r\n        this.$homeworkTab.append(this.$homeworkTabRight = makeDiv(\"\", \"jo_homeworkTabRight jo_scrollable\"));\r\n        jQuery('#view-mode').prepend(this.$showRevisionButton = makeDiv(\"\", \"jo_button jo_active jo_homeworkRevisionButton\", \"\"));\r\n        this.$showRevisionButton.on(\"click\", () => {\r\n            if (this.showRevisionActive) {\r\n                this.hideRevision();\r\n            } else {\r\n                this.showRevision(that.main.getCurrentlyEditedModule());\r\n            }\r\n        });\r\n        this.$showRevisionButton.hide();\r\n        jQuery('#diffEditor').hide();\r\n    }\r\n\r\n    showHomeWorkRevisionButton() {\r\n        this.$showRevisionButton.text(this.showRevisionActive ? \"Normalansicht\" : \"Korrekturen zeigen\");\r\n        this.$showRevisionButton.show();\r\n    }\r\n\r\n    hideHomeworkRevisionButton() {\r\n        this.$showRevisionButton.hide();\r\n    }\r\n\r\n    showRevision(module: Module) {\r\n\r\n        module.file.text = module.getProgramTextFromMonacoModel();\r\n        let file = module.file;\r\n\r\n        jQuery('#editor').hide();\r\n        jQuery('#diffEditor').show();\r\n\r\n        var originalModel = monaco.editor.createModel(file.text_before_revision, \"myJava\");\r\n        var modifiedModel = monaco.editor.createModel(file.text, \"myJava\");\r\n\r\n        this.diffEditor = monaco.editor.createDiffEditor(document.getElementById(\"diffEditor\"), {\r\n            // You can optionally disable the resizing\r\n            enableSplitViewResizing: true,\r\n            originalEditable: false,\r\n            readOnly: true,\r\n            // Render the diff inline\r\n            renderSideBySide: true\r\n        });\r\n\r\n        this.diffEditor.setModel({\r\n            original: originalModel,\r\n            modified: modifiedModel\r\n        });\r\n\r\n        this.showRevisionActive = true;\r\n        this.showHomeWorkRevisionButton();\r\n    }\r\n\r\n    hideRevision() {\r\n        if (this.showRevisionActive) {\r\n\r\n            jQuery('#diffEditor').hide();\r\n            this.diffEditor.dispose();\r\n            this.diffEditor = null;\r\n            jQuery('#editor').show();\r\n\r\n            this.showRevisionActive = false;\r\n            this.showHomeWorkRevisionButton();\r\n        }\r\n    }\r\n\r\n\r\n    attachToWorkspaces(workspaces: Workspace[]) {\r\n\r\n        let daysWithModules: DayWithModules[] = [];\r\n        let map: { [day: string]: DayWithModules } = {};\r\n\r\n        workspaces.forEach(ws => {\r\n            ws.moduleStore.getModules(false).forEach(module => {\r\n\r\n                let dateString = module.file.submitted_date;\r\n                if (dateString != null) {\r\n\r\n                    let date: Date = stringToDate(dateString);\r\n                    let dateWithoutTime = dateToStringWithoutTime(date);\r\n                    let dwm: DayWithModules = map[dateWithoutTime];\r\n                    if (dwm == null) {\r\n                        dwm = {\r\n                            date: date,\r\n                            day: dateWithoutTime,\r\n                            modules: []\r\n                        };\r\n                        map[dateWithoutTime] = dwm;\r\n                        daysWithModules.push(dwm);\r\n                    }\r\n                    dwm.modules.push({module: module, workspace: ws});\r\n\r\n                }\r\n\r\n            });\r\n\r\n        });\r\n\r\n        this.$homeworkTabLeft.empty();\r\n        this.$homeworkTabRight.empty();\r\n\r\n        let that = this;\r\n\r\n        this.$homeworkTabLeft.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgabetage:\"));\r\n\r\n\r\n        daysWithModules.sort((a, b) => {\r\n            if (a.date.getFullYear() != b.date.getFullYear()) return -Math.sign(a.date.getFullYear() - b.date.getFullYear());\r\n            if (a.date.getMonth() != b.date.getMonth()) return -Math.sign(a.date.getMonth() - b.date.getMonth());\r\n            if (a.date.getDate() != b.date.getDate()) return -Math.sign(a.date.getDate() - b.date.getDate());\r\n            return 0;\r\n        });\r\n\r\n        let first: boolean = true;\r\n\r\n        daysWithModules.forEach(dwm => {\r\n\r\n            dwm.modules.sort((m1, m2) => m1.module.file.name.localeCompare(m2.module.file.name));\r\n\r\n            let $div = makeDiv(\"\", \"jo_homeworkDate\", dwm.day);\r\n            this.$homeworkTabLeft.append($div);\r\n\r\n            $div.on(\"click\", (e) => {\r\n                this.$homeworkTabLeft.find('.jo_homeworkDate').removeClass('active');\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            });\r\n\r\n            if (first) {\r\n                first = false;\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    select(dwm: DayWithModules) {\r\n        this.$homeworkTabRight.empty();\r\n        this.$homeworkTabRight.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgegebene Dateien:\"));\r\n        let that = this;\r\n        dwm.modules.forEach(moduleWithWorkspace => {\r\n            let $div = jQuery(`<div class=\"jo_homeworkEntry\">Workspace <span class=\"jo_homework-workspace\">\r\n                    ${moduleWithWorkspace.workspace.name}</span>, Datei <span class=\"jo_homework-file\">\r\n                    ${moduleWithWorkspace.module.file.name}</span> (Abgabe: ${moduleWithWorkspace.module.file.submitted_date} )</div>`);\r\n            that.$homeworkTabRight.append($div);\r\n            $div.on(\"click\", () => {\r\n                    that.main.projectExplorer.setWorkspaceActive(moduleWithWorkspace.workspace);\r\n                    that.main.projectExplorer.setModuleActive(moduleWithWorkspace.module);\r\n                    that.main.projectExplorer.fileListPanel.select(moduleWithWorkspace.module, false);\r\n            });\r\n        })\r\n        \r\n    }\r\n\r\n\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { ErrorManager } from \"./ErrorManager.js\";\r\nimport { HomeworkManager } from \"./HomeworkManager.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class BottomDiv {\r\n\r\n    errorManager: ErrorManager;\r\n    homeworkManager: HomeworkManager;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>, public $mainDiv: JQuery<HTMLElement>) {\r\n\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_homeworkTabheading').length > 0) {\r\n            this.homeworkManager = new HomeworkManager(<Main>main, $bottomDiv);\r\n        }\r\n\r\n        this.errorManager = new ErrorManager(main, $bottomDiv, $mainDiv);\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$bottomDiv);\r\n        if (this.homeworkManager != null) this.homeworkManager.initGUI();\r\n\r\n        this.$bottomDiv.find('.jo_tabs').children().first().trigger(\"click\");\r\n\r\n    }\r\n\r\n    showHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'visible');\r\n        jQuery('.jo_homeworkTabheading').trigger(\"mousedown\");\r\n\r\n    }\r\n\r\n    hideHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'hidden');\r\n        jQuery('.jo_tabheadings').children().first().trigger(\"mousedown\");\r\n\r\n    }\r\n\r\n\r\n}","\r\nexport class EmbeddedSlider {\r\n\r\n    $sliderDiv: JQuery<HTMLElement>;\r\n\r\n    /**\r\n     * A div contains $container and another div. Between the latter two \r\n     * a slider should get inserted.\r\n     * @param $container \r\n     * @param firstLast true, if $container is left/on top of other div; false if otherwise\r\n     * @param horVert true, if $container and other div are left/right of another; false if they are on top/below each other\r\n     * @param callback \r\n     * @param $otherDiv \r\n     */\r\n    constructor(private $container: JQuery<HTMLElement>, \r\n        private firstLast: boolean, private horVert: boolean,\r\n         private callback: (newLength: number) => void, private $otherDiv?: JQuery<HTMLElement>){\r\n            this.initSlider();\r\n    }\r\n\r\n    initSlider() {\r\n        let that = this;\r\n\r\n        if(this.$otherDiv == null){\r\n            this.$container.parent().children().each((index, element) => {\r\n                if(element != this.$container[0]){\r\n                    that.$otherDiv = jQuery(element);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.$sliderDiv = jQuery('<div class=\"joe_slider\"></div>');\r\n\r\n        this.$sliderDiv.css({\r\n            width: this.horVert ? \"100%\" : \"4px\",\r\n            height: this.horVert ? \"4px\" : \"100%\",\r\n            cursor: this.horVert ? \"row-resize\" : \"col-resize\",\r\n        });\r\n\r\n        if(this.firstLast){\r\n            this.$sliderDiv.css({\r\n                top: \"0px\",\r\n                left: \"0px\"\r\n            });\r\n        } else {\r\n            if(this.horVert){\r\n                this.$sliderDiv.css({\r\n                    bottom: \"0px\",\r\n                    left: \"0px\"\r\n                });    \r\n            } else {\r\n                this.$sliderDiv.css({\r\n                    top: \"0px\",\r\n                    right: \"0px\"\r\n                });    \r\n            }\r\n        }\r\n\r\n        this.$container.append(this.$sliderDiv);\r\n\r\n        this.$sliderDiv.on(\"mousedown\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(\"mousemove.slider\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                let dy = mm.clientY - y;\r\n\r\n                that.slide(dx, dy);\r\n                \r\n                x = mm.clientX;\r\n                y = mm.clientY;\r\n\r\n            });\r\n\r\n            jQuery(document).on(\"mouseup.slider\", () => {\r\n                jQuery(document).off(\"mousemove.slider\");\r\n                jQuery(document).off(\"mouseup.slider\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        setTimeout(() => {\r\n            that.slide(1, 1);\r\n        }, 600);\r\n\r\n    }\r\n\r\n    setColor(color: string){\r\n        this.$sliderDiv.css('background-color', color);\r\n    }\r\n\r\n    slide(dx: number, dy: number){\r\n        if(this.horVert){\r\n            let height = Number.parseInt(this.$container.css('height').replace('px', ''));\r\n            let otherHeight = Number.parseInt(this.$otherDiv.css('height').replace('px', ''));\r\n            let newHeight = this.firstLast ? height -= dy : height += dy;\r\n            let newOtherHeight = this.firstLast ? otherHeight += dy : otherHeight -= dy;\r\n            this.$container.css('height', newHeight + \"px\");\r\n            this.$otherDiv.css('height', newOtherHeight + \"px\");\r\n            this.callback(newHeight);\r\n        } else {\r\n            let width = Number.parseInt(this.$container.css('width').replace('px', ''));\r\n            let otherWidth = Number.parseInt(this.$otherDiv.css('width').replace('px', ''));\r\n            let newWidth = this.firstLast ? width -= dx : width += dx;\r\n            let newOtherWidth = this.firstLast ? otherWidth += dx : otherWidth -= dx;\r\n            this.$container.css('width', newWidth + \"px\");\r\n            this.$otherDiv.css('width', newOtherWidth + \"px\");\r\n            this.callback(newWidth);\r\n        }\r\n        this.$container.css('flex', \"0 1 auto\");\r\n\r\n    }\r\n\r\n\r\n}","import { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\nimport { openContextMenu, makeEditable } from \"../tools/HtmlTools.js\";\r\nimport { JOScript, ScriptType } from \"./EmbeddedStarter.js\";\r\n\r\ntype FileData = {\r\n    type: ScriptType,\r\n    module?: Module,\r\n    hint?: string,\r\n    $fileDiv: JQuery<HTMLElement>\r\n}\r\n\r\nexport class EmbeddedFileExplorer {\r\n\r\n    currentFile: FileData;\r\n    files: FileData[] = [];\r\n\r\n    constructor(private moduleStore: ModuleStore, private $fileListDiv: JQuery<HTMLElement>, private main: MainEmbedded) {\r\n\r\n        let that = this;\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n\r\n            this.addModule(module);\r\n\r\n        }\r\n\r\n        let $filesDiv = $fileListDiv.parent();\r\n        let $addButton = jQuery('<div class=\"joe_addFileButton jo_button img_add-dark jo_active\" title=\"Datei hinzufügen\"></div>');\r\n        $filesDiv.append($addButton);\r\n\r\n        $addButton.on(\"click\", () => {\r\n\r\n            let module = this.main.addModule({ text: \"\", title: \"Neue Datei.java\", type: \"sql\" });\r\n            let fileData = this.addModule(module);\r\n\r\n            this.renameElement(fileData, () => {\r\n                // if there's no file yet and then one is added and subsequently renamed: select it!\r\n                if (that.currentFile != fileData) {\r\n                    that.selectFile(fileData);\r\n                }\r\n            });\r\n        });\r\n\r\n\r\n    }\r\n\r\n    removeAllFiles() {\r\n        this.files.forEach(f => this.removeFile(f));\r\n    }\r\n\r\n\r\n    addHint(script: JOScript): void {\r\n        let that = this;\r\n        let $fileDiv = jQuery('<div class=\"jo_file jo_hint\" ><div class=\"jo_fileimage\"></div><div class=\"jo_filename\" style=\"line-height: 22px\">' +\r\n            script.title + '</div><div class=\"jo_additionalButtons\"></div></div></div>');\r\n        this.$fileListDiv.append($fileDiv);\r\n\r\n        let fileData: FileData = {\r\n            module: null,\r\n            $fileDiv: $fileDiv,\r\n            type: \"hint\",\r\n            hint: script.text\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    addModule(module: Module): FileData {\r\n        let that = this;\r\n        let $fileDiv = jQuery(`<div class=\"jo_file jo_java\" >\r\n        <div class=\"jo_fileimage\"></div>\r\n        <div class=\"jo_filename\" style=\"line-height: 22px\">${module.file.name}</div>\r\n        <div class=\"jo_additionalButtonStart\"></div>\r\n        <div class=\"jo_delete img_delete jo_button jo_active\" title=\"Datei löschen\"></div></div></div>`);\r\n        this.$fileListDiv.append($fileDiv);\r\n\r\n        let fileData: FileData = {\r\n            module: module,\r\n            $fileDiv: $fileDiv,\r\n            type: \"sql\"\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        module.file.panelElement = {\r\n            name: module.file.name,\r\n            $htmlFirstLine: $fileDiv,\r\n            isFolder: false,\r\n            path: []\r\n        }\r\n\r\n        $fileDiv.find('.jo_delete').on(\"mousedown\", (e: JQuery.MouseDownEvent) => {\r\n            that.onDelete(fileData, e);\r\n        })\r\n\r\n        $fileDiv.find('.jo_delete').on(\"click\", (e) => { e.preventDefault(); e.stopPropagation() });\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n        $fileDiv[0].addEventListener(\"contextmenu\", function (event) {\r\n            event.preventDefault();\r\n            openContextMenu([{\r\n                caption: \"Umbenennen\",\r\n                callback: () => {\r\n                    that.renameElement(fileData, () => { });\r\n                }\r\n            }], event.pageX, event.pageY);\r\n        }, false);\r\n\r\n        return fileData;\r\n\r\n    }\r\n\r\n    onDelete(fileData: FileData, ev: JQuery.MouseDownEvent) {\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n        let that = this;\r\n        openContextMenu([{\r\n            caption: \"Abbrechen\",\r\n            callback: () => {\r\n                // nothing to do.\r\n            }\r\n        }, {\r\n            caption: \"Ich bin mir sicher: löschen!\",\r\n            color: \"#ff6060\",\r\n            callback: () => {\r\n                that.removeFile(fileData);\r\n            }\r\n        }], ev.pageX + 2, ev.pageY + 2);\r\n\r\n    }\r\n\r\n    removeFile(fileData: FileData) {\r\n        fileData.$fileDiv.remove();\r\n        this.main.removeModule(fileData.module);\r\n        this.files = this.files.filter((fd) => fd != fileData);\r\n        if (this.currentFile == fileData) {\r\n            if (this.files.length > 0) {\r\n                this.selectFile(this.files[0]);\r\n            } else {\r\n                this.main.getMonacoEditor().setValue(\"Keine Datei vorhanden.\");\r\n                this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n            }\r\n        }\r\n\r\n        this.files.forEach((file) => {\r\n            if(file.module != null){                // Hints have module == null\r\n                file.module.file.saved = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        for (let fileData of this.files) {\r\n            if (fileData.module == module) {\r\n                this.removeFile(fileData);\r\n            }\r\n        }\r\n    }\r\n\r\n    renameElement(fileData: FileData, callback: () => void) {\r\n        let that = this;\r\n        let $div = fileData.$fileDiv.find('.jo_filename');\r\n        let pointPos = fileData.module.file.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        makeEditable($div, $div, (newText: string) => {\r\n            fileData.module.file.name = newText;\r\n            $div.html(newText);\r\n            if (callback != null) callback();\r\n        }, selection);\r\n\r\n    }\r\n\r\n\r\n    setFirstFileActive() {\r\n        if (this.files.length > 0) {\r\n            this.selectFile(this.files[0]);\r\n        }\r\n    }\r\n\r\n    selectFile(fileData: FileData) {\r\n        if (fileData == null) return;\r\n        switch (fileData.type) {\r\n            case \"sql\":\r\n                this.main.$hintDiv.hide();\r\n                this.main.$monacoDiv.show();\r\n                this.main.setModuleActive(fileData.module);\r\n                this.main.getMonacoEditor().focus();\r\n                break;\r\n            case \"hint\":\r\n                this.main.$monacoDiv.hide();\r\n                this.main.$hintDiv.show();\r\n\r\n                let syntaxMap: { [code: string]: string } = {};\r\n                let code: string[] = [];\r\n\r\n                //@ts-ignore\r\n                let md1 = window.markdownit({\r\n                    highlight: function (str, lang) {\r\n                        code.push(str);\r\n                        return \"\";\r\n                    }\r\n                });\r\n\r\n                md1.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                    var token = tokens[idx];\r\n                    code.push(token.content);\r\n                    // pass token to default renderer.\r\n                    return \"\"; //md1.renderer.rules.code_block(tokens, idx, options, env, self);\r\n                };\r\n\r\n                md1.render(fileData.hint);\r\n\r\n                this.colorize(code, syntaxMap, () => {\r\n                    //@ts-ignore\r\n                    let md2 = window.markdownit({\r\n                        highlight: function (str, lang) {\r\n                            return syntaxMap[str];\r\n                        }\r\n                    });\r\n\r\n                    md2.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                        var token = tokens[idx];\r\n                        // pass token to default renderer.\r\n                        return syntaxMap[token.content].replace(\"<br/>\", \"\");\r\n                    };\r\n\r\n\r\n                    let html = md2.render(fileData.hint);\r\n                    this.main.$hintDiv.html(html);\r\n                });\r\n                this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n                fileData.$fileDiv.addClass('jo_active');\r\n                break;\r\n        }\r\n    }\r\n\r\n    colorize(code: string[], codeMap: { [code: string]: string }, callback: () => void) {\r\n        let that = this;\r\n        if (code.length > 0) {\r\n            let uncoloredtext = code.pop();\r\n            monaco.editor.colorize(uncoloredtext, 'myJava', { tabSize: 3 }).then((text) => {\r\n                codeMap[uncoloredtext] = text;\r\n                that.colorize(code, codeMap, callback);\r\n            }\r\n            );\r\n        } else {\r\n            callback();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    markFile(module: Module) {\r\n        this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n\r\n        this.currentFile = this.files.find((fileData) => fileData.module == module);\r\n\r\n        if (this.currentFile != null) this.currentFile.$fileDiv.addClass('jo_active');\r\n\r\n    }\r\n\r\n\r\n\r\n}","export class EmbeddedIndexedDB {\r\n\r\n    private db: IDBDatabase;\r\n\r\n    constructor(private databaseIdentifier: string){\r\n\r\n    }\r\n\r\n    public open(successCallback: () => void) {\r\n\r\n        if (window.indexedDB) {\r\n\r\n            let request: IDBOpenDBRequest = window.indexedDB.open(this.databaseIdentifier, 1);\r\n\r\n            let that = this;\r\n\r\n            request.onerror = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                console.log(\"Couldn't open IndexedDB: \" + ev.type);\r\n            };\r\n\r\n            request.onsuccess = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                that.db = request.result;\r\n                that.db.onerror = function(event) {\r\n                    // Allgemeine Fehlerbehandlung, die für alle Anfragen an die Datenbank gilt. \r\n                    // @ts-ignore\r\n                    console.log(\"Datenbankfehler: \" + event.target.error.message);\r\n                  };\r\n                  successCallback();\r\n            };\r\n\r\n            request.onupgradeneeded = function(ev: Event){\r\n                // @ts-ignore\r\n                that.db = ev.target.result;\r\n                let objectStoreScripts = that.db.createObjectStore(\"scripts\", { keyPath: \"scriptId\", autoIncrement: false});\r\n                objectStoreScripts.transaction.oncomplete = function(event) {}\r\n\r\n                let objectStoreDatabases = that.db.createObjectStore(\"databases\", { keyPath: \"databaseId\", autoIncrement: false});\r\n                objectStoreScripts.transaction.oncomplete = function(event) {}\r\n\r\n            }\r\n\r\n        } else {\r\n            console.log(\"IndexedDB not available.\");\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public writeScript(scriptId: string, script: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.put({\r\n            scriptId: scriptId,\r\n            script: script\r\n        });\r\n\r\n    }\r\n\r\n    public removeScript(scriptId: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.delete(scriptId);\r\n\r\n    }\r\n\r\n\r\n    public getScript(scriptId: string, callback: (script: string) => void){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        let request = scriptObjectStore.get(scriptId);\r\n\r\n        request.onerror = (event) => {\r\n            callback(null);\r\n        }\r\n\r\n        request.onsuccess = (event) => {\r\n            if(request.result == null){\r\n                callback(null);\r\n            } else {\r\n                callback(request.result.script);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public writeDatabase(databaseID: string, database: string){\r\n\r\n        let databaseObjectStore = this.db.transaction(\"databases\", \"readwrite\").objectStore(\"databases\");\r\n\r\n        databaseObjectStore.put({\r\n            databaseId: databaseID,\r\n            database: database\r\n        });\r\n\r\n    }\r\n\r\n    public removeDatabase(databaseId: string){\r\n\r\n        let databaseObjectStore = this.db.transaction(\"databases\", \"readwrite\").objectStore(\"databases\");\r\n\r\n        databaseObjectStore.delete(databaseId);\r\n\r\n    }\r\n\r\n\r\n    public getDatabase(databaseId: string, callback: (database: string) => void){\r\n\r\n        let databaseObjectStore = this.db.transaction(\"databases\", \"readwrite\").objectStore(\"databases\");\r\n\r\n        let request = databaseObjectStore.get(databaseId);\r\n\r\n        request.onerror = (event) => {\r\n            callback(null);\r\n        }\r\n\r\n        request.onsuccess = (event) => {\r\n            if(request.result == null){\r\n                callback(null);\r\n            } else {\r\n                callback(request.result.database);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { SQLStatement } from \"../compiler/parser/Parser.js\";\r\nimport { WriteQueryListener } from \"../main/gui/ResultsetPresenter.js\";\r\nimport { DatabaseTool } from \"../tools/DatabaseTools.js\";\r\nimport { EmbeddedIndexedDB } from \"./EmbeddedIndexedDB.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\n\r\n\r\nexport class WriteQueryManager implements WriteQueryListener {\r\n\r\n    indexedDB: EmbeddedIndexedDB;\r\n    databaseTool: DatabaseTool;\r\n\r\n    statementsToExecute: string[] = [];\r\n\r\n    writtenStatements: string[] = [];\r\n\r\n    statementsToWrite: string[] = [];\r\n\r\n\r\n    constructor(private main: MainEmbedded, private databaseIdentifier: string) {\r\n\r\n    }\r\n\r\n    indexedDBReady(indexedDB: EmbeddedIndexedDB) {\r\n        this.indexedDB = indexedDB;\r\n        this.indexedDB.getDatabase(this.databaseIdentifier, (db: string) => {\r\n            if (db != null) {\r\n                this.writtenStatements = JSON.parse(db);\r\n                this.statementsToExecute = this.writtenStatements.slice();\r\n\r\n                this.main.historyViewer.clear();\r\n                this.main.historyViewer.appendStatements(this.statementsToExecute);\r\n\r\n                this.executeStatements();\r\n                this.writeStatementsIfNecessary();\r\n            }\r\n        })\r\n    }\r\n\r\n    reset() {\r\n        this.statementsToWrite = [];\r\n        this.writtenStatements = [];\r\n        this.statementsToExecute = [];\r\n        this.main.historyViewer.clear();\r\n    }\r\n\r\n    writeStatementsIfNecessary() {\r\n        if (this.indexedDB != null && this.statementsToWrite.length > 0) {\r\n            this.forceWriteStatements();\r\n        }\r\n    }\r\n\r\n    forceWriteStatements() {\r\n        this.writtenStatements = this.writtenStatements.concat(this.statementsToWrite);\r\n        this.statementsToWrite = [];\r\n        this.indexedDB.writeDatabase(this.databaseIdentifier, JSON.stringify(this.writtenStatements));\r\n    }\r\n\r\n    atLeastOneExecuted: boolean = false;\r\n    count: number;\r\n    executeStatements() {\r\n        if (this.databaseTool != null && this.statementsToExecute.length > 0) {\r\n            if (!this.atLeastOneExecuted) {\r\n                this.main.$databaseResetButton.fadeIn(200);\r\n                this.count = this.statementsToExecute.length;\r\n                this.main.waitOverlay.show(\"Schreibe lokale Datenbankänderungen ...\");\r\n            }\r\n            this.main.waitOverlay.setProgress(Math.round(100 * (1 - this.statementsToExecute.length / this.count)) + \" %\")\r\n            let statement = this.statementsToExecute.shift();\r\n            this.atLeastOneExecuted = true;\r\n            this.databaseTool.executeQuery(statement, () => { this.executeStatements() }, () => { this.executeStatements() });\r\n        } else {\r\n            if (this.atLeastOneExecuted) {\r\n                this.main.databaseExplorer.refresh();\r\n                this.atLeastOneExecuted = false;\r\n                this.main.waitOverlay.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    notify(statements: SQLStatement[]): void {\r\n        this.main.$databaseResetButton.fadeIn(200);\r\n        let statementsSql = statements.map(stmt => stmt.sqlCleaned == null ? stmt.sql : stmt.sqlCleaned);\r\n        this.statementsToWrite = this.statementsToWrite.concat(statementsSql);\r\n        this.main.historyViewer.appendStatements(statementsSql);\r\n        this.writeStatementsIfNecessary();\r\n    }\r\n\r\n    databaseReady(dbTool: DatabaseTool) {\r\n        this.databaseTool = dbTool;\r\n        this.executeStatements();\r\n    }\r\n\r\n    rollback() {\r\n        this.writeStatementsIfNecessary();\r\n        this.writtenStatements.pop();\r\n        this.forceWriteStatements();\r\n    }\r\n\r\n\r\n\r\n}","import { MainBase } from \"../main/MainBase.js\";\r\nimport { DatabaseTool } from \"./DatabaseTools.js\";\r\nimport { MySqlImporter } from \"./MySqlImporter.js\";\r\n\r\nexport type LoadableDatabase = {\r\n    binDump?: Uint8Array,\r\n    statements?: string[]\r\n}\r\n\r\nexport class DatabaseFetcher {\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    public async load(url: string): Promise<LoadableDatabase> {\r\n        let urlWithoutProtocol = url.replace(\"https://\", \"\")\r\n            .replace(\"http://\", \"\").toLocaleLowerCase();\r\n\r\n        let urlLowerCase = urlWithoutProtocol.toLocaleLowerCase();\r\n\r\n        let templateDump: Uint8Array = await this.fetchTemplateFromCache(urlWithoutProtocol);\r\n        if (templateDump != null) {\r\n            if (DatabaseTool.getDumpType(templateDump) == \"binaryCompressed\") {\r\n                // @ts-ignore\r\n                templateDump = pako.inflate(templateDump);\r\n            }\r\n            return { binDump: templateDump }\r\n        }\r\n\r\n        let db: LoadableDatabase;\r\n        if (urlLowerCase.endsWith(\".sqlite\")) {\r\n            db = await this.loadSqLiteDump(url, urlWithoutProtocol);\r\n        } else if (urlLowerCase.endsWith(\".zip\") || urlLowerCase.endsWith(\".sql\")) {\r\n            db = await this.loadMySql(url, urlWithoutProtocol);\r\n        }\r\n\r\n        this.saveDatabaseToCache(urlWithoutProtocol, db.binDump);\r\n\r\n        return db;\r\n\r\n    }\r\n\r\n    loadMySql(url: string, urlWithoutProtocol: string): LoadableDatabase | PromiseLike<LoadableDatabase> {\r\n        let mySqlImporter = new MySqlImporter(this.main);\r\n        return mySqlImporter.loadFromUrl(url);\r\n    }\r\n\r\n    async loadSqLiteDump(url: string, urlWithoutProtocol: string): Promise<LoadableDatabase> {\r\n\r\n        return new Promise((resolve, reject) => {\r\n            jQuery.ajax({\r\n                type: 'GET',\r\n                async: true,\r\n                url: url,\r\n                xhrFields: { responseType: 'arraybuffer' },\r\n                success: function (response: any) {\r\n                    let db = new Uint8Array(response);\r\n                    // @ts-ignore\r\n                    if (DatabaseTool.getDumpType(db) == \"binaryCompressed\") db = pako.inflate(db);\r\n                    resolve({ binDump: db });\r\n                },\r\n                error: function (jqXHR, message) {\r\n                    reject(message);\r\n                }\r\n            });\r\n\r\n        })\r\n\r\n    }\r\n\r\n    cutSqlToStatements(sql: string): string[] {\r\n        sql = sql.replace(/\\r\\n/g, \"\\n\");\r\n\r\n        let statements: string[] = [];\r\n        if (sql.indexOf(\"~@~\") >= 0) {\r\n            statements = sql.split(\"~@~\");\r\n        } else {\r\n            statements = sql.split(\";\\n\");\r\n        }\r\n        return statements;\r\n    }\r\n\r\n\r\n    async fetchTemplateFromCache(databaseIdentifier: string): Promise<Uint8Array> {\r\n        if (databaseIdentifier == null) { return null; }\r\n\r\n        if (!this.cacheAvailable()) return (null);\r\n\r\n        let cache = await caches.open('my-cache');\r\n\r\n        let value = await cache.match(databaseIdentifier);\r\n\r\n        if(value == null) return null;\r\n\r\n        let buffer = await value.arrayBuffer();\r\n\r\n        return new Uint8Array(buffer);\r\n\r\n    }\r\n\r\n    async saveDatabaseToCache(databaseIdentifier: string, templateDump: Uint8Array | string) {\r\n        if (!this.cacheAvailable()) return;\r\n\r\n        let cache = await caches.open('my-cache');\r\n\r\n        cache.put(databaseIdentifier, new Response(templateDump));\r\n    }\r\n\r\n    cacheAvailable(): boolean {\r\n        return 'caches' in self;\r\n    }\r\n\r\n}","import { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { Module, File } from \"../compiler/parser/Module.js\";\r\nimport { ActionManager } from \"../main/gui/ActionManager.js\";\r\nimport { BottomDiv } from \"../main/gui/BottomDiv.js\";\r\nimport { Editor } from \"../main/gui/Editor.js\";\r\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\r\nimport { RightDiv } from \"../main/gui/RightDiv.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { JOScript } from \"./EmbeddedStarter.js\";\r\nimport { makeDiv, makeTabs, openContextMenu } from \"../tools/HtmlTools.js\";\r\nimport { EmbeddedSlider } from \"./EmbeddedSlider.js\";\r\nimport { EmbeddedFileExplorer } from \"./EmbeddedFileExplorer.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { EmbeddedIndexedDB } from \"./EmbeddedIndexedDB.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { DatabaseTool } from \"../tools/DatabaseTools.js\";\r\nimport { DatabaseExplorer } from \"../main/gui/DatabaseExplorer.js\";\r\nimport { ResultsetPresenter } from \"../main/gui/ResultsetPresenter.js\";\r\nimport { WaitOverlay } from \"../main/gui/WaitOverlay.js\";\r\nimport { WriteQueryManager } from \"./WriteQueryManager.js\";\r\nimport { DatabaseFetcher } from \"../tools/DatabaseLoader.js\";\r\nimport { DatabaseImportExport } from \"../tools/DatabaseImportExport.js\";\r\nimport { HistoryViewer } from \"../main/gui/HistoryViewer.js\";\r\nimport { WDatabase } from \"../workspace/WDatabase.js\";\r\n\r\ntype JavaOnlineConfig = {\r\n    withFileList?: boolean,\r\n    withOutput?: boolean,\r\n    withErrorList?: boolean,\r\n    withBottomPanel?: boolean,\r\n    id?: string,\r\n    databaseURL?: string\r\n}\r\n\r\nexport class MainEmbedded implements MainBase {\r\n    isEmbedded(): boolean { return true; }\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        if (this.config.withFileList) {\r\n            return this.fileExplorer.currentFile?.module;\r\n        } else {\r\n            return this.currentWorkspace.moduleStore.getFirstModule();\r\n        }\r\n    }\r\n\r\n    getDatabaseTool(): DatabaseTool {\r\n        return this.databaseTool;\r\n    }\r\n\r\n    getDatabaseExplorer(): DatabaseExplorer {\r\n        return this.databaseExplorer;\r\n    }\r\n\r\n    getResultsetPresenter(): ResultsetPresenter {\r\n        return this.resultsetPresenter;\r\n    }\r\n\r\n    getWaitOverlay(): WaitOverlay {\r\n        return this.waitOverlay;\r\n    }\r\n\r\n    getHistoryViewer(): HistoryViewer {\r\n        return this.historyViewer;\r\n    }\r\n\r\n    config: JavaOnlineConfig;\r\n\r\n    editor: Editor;\r\n    programPointerDecoration: string[] = [];\r\n    programPointerModule: Module;\r\n\r\n    currentWorkspace: Workspace;\r\n    actionManager: ActionManager;\r\n\r\n    compiler: Compiler;\r\n\r\n    $dbTreeDiv: JQuery<HTMLElement>;\r\n\r\n    $debuggerDiv: JQuery<HTMLElement>;\r\n\r\n    bottomDiv: BottomDiv;\r\n    $filesListDiv: JQuery<HTMLElement>;\r\n\r\n    $hintDiv: JQuery<HTMLElement>;\r\n    $monacoDiv: JQuery<HTMLElement>;\r\n    $codeResetButton: JQuery<HTMLElement>;\r\n    $databaseResetButton: JQuery<HTMLElement>;\r\n\r\n    programIsExecutable = false;\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    rightDiv: RightDiv;\r\n    $rightDivInner: JQuery<HTMLElement>;\r\n\r\n    fileExplorer: EmbeddedFileExplorer;\r\n\r\n    debounceDiagramDrawing: any;\r\n\r\n    indexedDB: EmbeddedIndexedDB;\r\n\r\n    compileRunsAfterCodeReset: number = 0;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    databaseTool: DatabaseTool;\r\n\r\n    databaseExplorer: DatabaseExplorer;\r\n\r\n    waitOverlay: WaitOverlay;\r\n\r\n    resultsetPresenter: ResultsetPresenter;\r\n\r\n    writeQueryManager: WriteQueryManager;\r\n\r\n    historyViewer: HistoryViewer;\r\n\r\n    initialTemplateDump: Uint8Array;\r\n    initialStatements: string[];\r\n\r\n    constructor($div: JQuery<HTMLElement>, private scriptList: JOScript[]) {\r\n\r\n        this.readConfig($div);\r\n\r\n        this.writeQueryManager = new WriteQueryManager(this, this.config.databaseURL == null ? \"Empty database\" : this.config.databaseURL);\r\n\r\n        this.initGUI($div);\r\n\r\n\r\n        this.databaseExplorer = new DatabaseExplorer(this, this.$dbTreeDiv);\r\n        this.databaseTool = new DatabaseTool(this);\r\n        if (this.config.databaseURL != null) {\r\n            new DatabaseFetcher(this).load(this.config.databaseURL).then((loadableDb) => {\r\n                this.initialTemplateDump = loadableDb.binDump;\r\n                this.initialStatements = loadableDb.statements == null ? [] : loadableDb.statements;\r\n                this.initDatabase();\r\n            }).catch((error: string)=>{\r\n                alert('Fehler beim Landen der Datenbank: ' + error)\r\n            })\r\n        } else {\r\n            this.initDatabase();\r\n        }\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n    }\r\n\r\n    initDatabase(){\r\n        this.resetDatabase(() => {\r\n            this.initScripts();\r\n\r\n            this.indexedDB = new EmbeddedIndexedDB(\"SQL-IDE\");\r\n            this.indexedDB.open(() => {\r\n\r\n                if (this.config.id != null) {\r\n                    this.writeQueryManager.indexedDBReady(this.indexedDB);\r\n                    this.readScripts();\r\n                }\r\n\r\n            });\r\n\r\n        });\r\n    }\r\n\r\n    resetDatabase(callback: () => void) {\r\n        this.databaseTool.initializeWorker(this.initialTemplateDump, this.initialStatements, () => { }, () => {\r\n            this.writeQueryManager.databaseReady(this.databaseTool);\r\n            this.databaseExplorer.refreshAfterRetrievingDBStructure();\r\n            callback();\r\n        })\r\n    }\r\n\r\n    initScripts() {\r\n\r\n        this.fileExplorer?.removeAllFiles();\r\n\r\n        this.initWorkspace(this.scriptList);\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer = new EmbeddedFileExplorer(this.currentWorkspace.moduleStore, this.$filesListDiv, this);\r\n            this.fileExplorer.setFirstFileActive();\r\n            this.scriptList.filter((script) => script.type == \"hint\").forEach((script) => this.fileExplorer.addHint(script));\r\n        } else {\r\n            this.setModuleActive(this.currentWorkspace.moduleStore.getFirstModule());\r\n        }\r\n\r\n    }\r\n\r\n\r\n    readConfig($div: JQuery<HTMLElement>) {\r\n        let configJson: string | object = $div.data(\"sql-online\");\r\n        if (configJson != null && typeof configJson == \"string\") {\r\n            this.config = JSON.parse(configJson.split(\"'\").join('\"'));\r\n        } else {\r\n            this.config = {}\r\n        }\r\n\r\n        if (this.config.withFileList == null) this.config.withFileList = false;\r\n        if (this.config.withOutput == null) this.config.withOutput = true;\r\n        if (this.config.withErrorList == null) this.config.withErrorList = true;\r\n        if (this.config.withBottomPanel == null) this.config.withBottomPanel = true;\r\n\r\n        if (!(this.config.withOutput || this.config.withFileList || this.config.withErrorList)) {\r\n            this.config.withBottomPanel = false;\r\n        }\r\n\r\n        if (!this.config.withBottomPanel) {\r\n            this.config.withFileList = false;\r\n            this.config.withOutput = false;\r\n            this.config.withErrorList = false;\r\n        }\r\n\r\n        if(this.config.databaseURL != null){\r\n            ['http:', 'https:'].forEach(protocol => {\r\n                if(this.config.databaseURL.startsWith(protocol) && !this.config.databaseURL.startsWith(protocol + \"://\")){\r\n                    this.config.databaseURL = this.config.databaseURL.replace(protocol, protocol + \"//\");\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n\r\n        if (this.config.withFileList && this.fileExplorer.currentFile != null) {\r\n            this.fileExplorer.currentFile.module.editorState = this.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer.markFile(module);\r\n        }\r\n\r\n        /**\r\n         * WICHTIG: Die Reihenfolge der beiden Operationen ist extrem wichtig.\r\n         * Falls das Model im readonly-Zustand gesetzt wird, funktioniert <Strg + .> \r\n         * nicht und die Lightbulbs werden nicht angezeigt, selbst dann, wenn\r\n         * später readonly = false gesetzt wird.\r\n         */\r\n        this.getMonacoEditor().updateOptions({\r\n            readOnly: false,\r\n            lineNumbersMinChars: 4\r\n        });\r\n        this.editor.editor.setModel(module.model);\r\n\r\n\r\n        if (module.editorState != null) {\r\n            this.getMonacoEditor().restoreViewState(module.editorState);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    readScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let that = this;\r\n\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                setInterval(() => {\r\n                    that.saveScripts();\r\n                }, 1000);\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n                let countDown = scriptList.length;\r\n\r\n                for (let module of modules) {\r\n                    that.fileExplorer?.removeModule(module);\r\n                    that.removeModule(module);\r\n                }\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.getScript(scriptId, (script) => {\r\n                        if (script != null) {\r\n\r\n                            let module = that.addModule({\r\n                                title: name,\r\n                                text: script,\r\n                                type: \"sql\"\r\n                            });\r\n\r\n                            that.fileExplorer?.addModule(module);\r\n                            that.$codeResetButton.fadeIn(1000);\r\n\r\n                            // console.log(\"Retrieving script \" + scriptId);\r\n                        }\r\n                        countDown--;\r\n                        if (countDown == 0) {\r\n                            setInterval(() => {\r\n                                that.saveScripts();\r\n                            }, 1000);\r\n                            that.fileExplorer?.setFirstFileActive();\r\n                            if (that.fileExplorer == null) {\r\n                                let modules = that.currentWorkspace.moduleStore.getModules(false);\r\n                                if (modules.length > 0) that.setModuleActive(modules[0]);\r\n                            }\r\n                        }\r\n                    })\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    saveScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let scriptList: string[] = [];\r\n        let oneNotSaved: boolean = false;\r\n\r\n        modules.forEach(m => oneNotSaved = oneNotSaved || !m.file.saved);\r\n\r\n        if (oneNotSaved) {\r\n\r\n            for (let module of modules) {\r\n                scriptList.push(module.file.name);\r\n                let scriptId = this.config.id + module.file.name;\r\n                this.indexedDB.writeScript(scriptId, module.getProgramTextFromMonacoModel());\r\n                module.file.saved = true;\r\n                // console.log(\"Saving script \" + scriptId);\r\n            }\r\n\r\n            this.indexedDB.writeScript(this.config.id, JSON.stringify(scriptList));\r\n        }\r\n\r\n    }\r\n\r\n    deleteScriptsInDB() {\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                return;\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.removeScript(scriptId);\r\n                }\r\n\r\n                this.indexedDB.removeScript(this.config.id);\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    initWorkspace(scriptList: JOScript[]) {\r\n        this.currentWorkspace = new Workspace(\"Embedded-Workspace\", this, 0);\r\n\r\n        let i = 0;\r\n        for (let script of scriptList) {\r\n            if (script.type == \"sql\") {\r\n                this.addModule(script);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    addModule(script: JOScript): Module {\r\n        let module: Module = Module.restoreFromData({\r\n            id: this.currentWorkspace.moduleStore.getModules(true).length,\r\n            name: script.title,\r\n            text: script.text,\r\n            text_before_revision: null,\r\n            submitted_date: null,\r\n            student_edited_after_revision: false,\r\n            version: 1,\r\n            workspace_id: 0,\r\n            forceUpdate: false,\r\n            file_type: 11\r\n        }, this);\r\n\r\n        this.currentWorkspace.moduleStore.putModule(module);\r\n\r\n        let that = this;\r\n\r\n        module.model.onDidChangeContent(() => {\r\n            that.considerShowingCodeResetButton();\r\n        });\r\n\r\n        return module;\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        this.currentWorkspace.moduleStore.removeModule(module);\r\n    }\r\n\r\n\r\n    initGUI($div: JQuery<HTMLElement>) {\r\n\r\n        // let $leftDiv = jQuery('<div class=\"joe_leftDiv\"></div>');\r\n\r\n        $div.css({\r\n            \"background-image\": \"none\",\r\n            \"background-size\": \"100%\"\r\n        })\r\n\r\n        let $centerDiv = jQuery('<div class=\"joe_centerDiv\"></div>');\r\n\r\n        // let $topDiv = jQuery('<div class=\"joe_topDiv\"></div>');\r\n        // $div.append($topDiv);\r\n        $div.append($centerDiv);\r\n\r\n        let $waitDiv = this.makeWaitDiv();\r\n        $div.append($waitDiv);\r\n        this.waitOverlay = new WaitOverlay($waitDiv);\r\n\r\n        let $codeResetModalWindow = this.makeCodeResetModalWindow($div);\r\n        let $databaseResetModalWindow = this.makeDatabaseResetModalWindow($div);\r\n\r\n        let $rightDiv = this.makeRightDiv();\r\n\r\n        let $editorDiv = jQuery('<div class=\"joe_editorDiv\"></div>');\r\n        this.$monacoDiv = jQuery('<div class=\"joe_monacoDiv\"></div>');\r\n        this.$hintDiv = jQuery('<div class=\"joe_hintDiv jo_scrollable\"></div>');\r\n        this.$codeResetButton = jQuery('<div class=\"joe_codeResetButton jo_button jo_active\" title=\"Code auf Ausgangszustand zurücksetzen\">Code Reset</div>');\r\n        this.$databaseResetButton = jQuery('<div class=\"joe_databaseResetButton jo_button jo_active\" title=\"Datenbank auf Ausgangszustand zurücksetzen\">Datenbank Reset</div>');\r\n\r\n        $editorDiv.append(this.$monacoDiv, this.$hintDiv, this.$databaseResetButton);\r\n        this.$monacoDiv.append(this.$codeResetButton);\r\n\r\n        let $bracketErrorDiv = this.makeBracketErrorDiv();\r\n        $editorDiv.append($bracketErrorDiv);\r\n\r\n        // $topDiv.append($editorDiv);\r\n\r\n        this.$codeResetButton.hide();\r\n\r\n        this.$codeResetButton.on(\"click\", () => { $codeResetModalWindow.show(); })\r\n\r\n        this.$databaseResetButton.hide();\r\n\r\n        this.$databaseResetButton.on(\"click\", () => { $databaseResetModalWindow.show(); })\r\n\r\n        this.$hintDiv.hide();\r\n\r\n        let $controlsDiv = jQuery('<div class=\"joe_controlsDiv\"></div>');\r\n        let $bottomDivInner = jQuery('<div class=\"joe_bottomDivInner\"></div>');\r\n\r\n\r\n        let $bottomDiv = jQuery('<div class=\"joe_bottomDiv\"></div>');\r\n        this.makeBottomDiv($bottomDivInner, $controlsDiv);\r\n        $bottomDiv.append($bottomDivInner);\r\n        if (this.config.withFileList) {\r\n            let $filesDiv = this.makeFilesDiv();\r\n            $bottomDiv.prepend($filesDiv);\r\n            new EmbeddedSlider($filesDiv, false, false, () => { });\r\n        }\r\n        makeTabs($bottomDivInner);\r\n        $div.append($bottomDiv);\r\n\r\n        $div.addClass('joe_javaOnlineDiv');\r\n\r\n        this.editor = new Editor(this, false, true);\r\n        this.editor.initGUI(this.$monacoDiv);\r\n        this.$monacoDiv.find('.monaco-editor').css('z-index', '10');\r\n\r\n        if ($div.attr('tabindex') == null) $div.attr('tabindex', \"0\");\r\n        this.actionManager = new ActionManager($div, this);\r\n        this.actionManager.init();\r\n\r\n        this.bottomDiv = new BottomDiv(this, $bottomDivInner, $div);\r\n        this.bottomDiv.initGUI();\r\n\r\n        this.rightDiv = new RightDiv(this, this.$rightDivInner);\r\n        this.rightDiv.initGUI();\r\n\r\n        $centerDiv.append($editorDiv, $bottomDiv)\r\n        $div.append($rightDiv);\r\n\r\n        let $rightSideContainer = jQuery('<div class=\"jo_rightdiv-rightside-container\"></div>');\r\n        let $infoButton = jQuery('<div class=\"jo_button jo_active img_ellipsis-dark\" style=\"margin-right: 10px\"></div>');\r\n\r\n        $controlsDiv.append($infoButton);\r\n\r\n        this.$rightDivInner.append($rightSideContainer);\r\n\r\n        new EmbeddedSlider($rightDiv, true, false, () => {\r\n            this.editor.editor.layout();\r\n        }, $centerDiv);\r\n\r\n        new EmbeddedSlider($bottomDiv, true, true, () => { this.editor.editor.layout(); });\r\n\r\n        $infoButton.on('mouseup', (ev) => {\r\n            ev.preventDefault();\r\n            ev.stopPropagation();\r\n            openContextMenu([{\r\n                caption: \"Über die Online-IDE ...\",\r\n                link: \"https://learnj.de\",\r\n                callback: () => {\r\n                    // nothing to do.\r\n                }\r\n            }], ev.pageX + 2, ev.pageY + 2);\r\n        });\r\n\r\n\r\n        let $buttonOpen = jQuery('<label type=\"file\" class=\"img_open-file jo_button jo_active\"' +\r\n            'style=\"margin-right: 8px;\" title=\"Datenbank-Dump aus Datei laden\"><input type=\"file\" style=\"display:none\"></label>');\r\n\r\n        let that = this;\r\n\r\n        let $openInputButton = $buttonOpen.find('input');\r\n\r\n        $openInputButton.on('change', (event) => {\r\n            //@ts-ignore\r\n            var files: FileList = event.originalEvent.target.files;\r\n            that.loadDatabaseFromFile(files[0]).then(() => {\r\n                $openInputButton.val(null)\r\n            })\r\n        })\r\n\r\n        let $buttonSave = jQuery('<div class=\"img_save-dark jo_button jo_active\"' +\r\n            'style=\"margin-right: 8px;\" title=\"Datenbank-Dump in Datei speichern\"></div>');\r\n\r\n\r\n        $buttonSave.on('click', () => { that.saveDatabaseToFile() });\r\n\r\n        $controlsDiv.append($buttonOpen, $buttonSave);\r\n\r\n        this.resultsetPresenter = new ResultsetPresenter(this, $bottomDivInner);\r\n        this.resultsetPresenter.addWriteQueryListener(this.writeQueryManager);\r\n\r\n\r\n        new ProgramControlButtons(this, $controlsDiv);\r\n\r\n        this.historyViewer = new HistoryViewer(this, $div.find('.jo_historyTab'));\r\n\r\n        setTimeout(() => {\r\n            this.editor.editor.layout();\r\n            this.compiler = new Compiler(this);\r\n            this.startTimer();\r\n        }, 200);\r\n\r\n\r\n    }\r\n\r\n    saveDatabaseToFile() {\r\n        new DatabaseImportExport().saveToFile(this.databaseTool);\r\n    }\r\n\r\n    async loadDatabaseFromFile(file: globalThis.File) {\r\n        let dbImportExport = new DatabaseImportExport();\r\n        let db = await dbImportExport.loadFromFile(file, this);\r\n        if (db == null) {\r\n            alert('Es ist ein Fehler beim Import aufgetreten.');\r\n            return;\r\n        } else {\r\n            this.databaseTool.initializeWorker(db.binDump, [], (errors) => {\r\n                if (errors.length > 0) {\r\n                    alert('Es sind Fehler beim Import aufgetreten. Ausführliche Fehlermeldungen sehen Sie in der Konsole (F12).')\r\n                    console.log(errors)\r\n                }\r\n            }, () => {\r\n                this.databaseExplorer.refreshAfterRetrievingDBStructure()\r\n            })\r\n        }\r\n        return;\r\n    }\r\n\r\n    makeWaitDiv(): JQuery<HTMLElement> {\r\n\r\n        //@ts-ignore\r\n        let url = (window.javaOnlineDir == null ? '' : window.javaOnlineDir) + 'assets/projectexplorer/svg-loaders/grid.svg';\r\n\r\n        let waitHtml = `\r\n        <div class=\"bitteWarten\">\r\n        <div style=\"margin-bottom: 30px\">\r\n            <div class=\"bitteWartenText\" style=\"font-size: 20px\"></div>\r\n        </div>\r\n        <div>\r\n            <img src=\"${url}\" alt=\"\" style=\"height: 40px\">\r\n        </div>\r\n        <div class=\"bitteWartenProgress\" style=\"font-size: 20px\"></div>\r\n        </div>\r\n        `;\r\n        return jQuery(waitHtml);\r\n    }\r\n\r\n    makeBracketErrorDiv(): JQuery<HTMLElement> {\r\n        return jQuery(`\r\n        <div class=\"jo_parenthesis_warning\" title=\"Klammerwarnung!\" style=\"bottom: 55px\">\r\n        <div class=\"jo_warning_light\"></div>\r\n        <div class=\"jo_pw_heading\">{ }</div>\r\n        <div title=\"Letzten Schritt rückgängig\" \r\n            class=\"jo_pw_undo img_undo jo_button jo_active\"></div>\r\n        </div>\r\n        `);\r\n    }\r\n\r\n    makeCodeResetModalWindow($parent: JQuery<HTMLElement>): JQuery<HTMLElement> {\r\n        let $window = jQuery(\r\n            `\r\n            <div class=\"joe_codeResetModal\">\r\n            <div style=\"flex: 1\"></div>\r\n            <div style=\"display: flex\">\r\n                <div style=\"flex: 1\"></div>\r\n                <div style=\"padding-left: 30px;\">\r\n                <div style=\"color: red; margin-bottom: 10px; font-weight: bold\">Warnung:</div>\r\n                <div>Soll der Code wirklich auf den Ausgangszustand zurückgesetzt werden?</div>\r\n                <div>Alle von Dir gemachten Änderungen werden damit verworfen.</div>\r\n                </div>\r\n                <div style=\"flex: 1\"></div>\r\n            </div>\r\n            <div class=\"joe_codeResetModalButtons\">\r\n            <div class=\"joe_codeResetModalCancel jo_button jo_active\">Abbrechen</div>\r\n            <div class=\"joe_codeResetModalOK jo_button jo_active\">OK</div>\r\n            </div>\r\n            <div style=\"flex: 2\"></div>\r\n            </div>\r\n        `\r\n        );\r\n\r\n        $window.hide();\r\n\r\n        $parent.append($window);\r\n\r\n        $parent.find(\".joe_codeResetModalCancel\").on(\"click\", () => {\r\n            $window.hide();\r\n        });\r\n\r\n        $parent.find(\".joe_codeResetModalOK\").on(\"click\", () => {\r\n\r\n            this.initScripts();\r\n            this.deleteScriptsInDB();\r\n\r\n            $window.hide();\r\n            this.$codeResetButton.hide();\r\n            this.compileRunsAfterCodeReset = 1;\r\n\r\n        });\r\n\r\n        return $window;\r\n    }\r\n\r\n    makeDatabaseResetModalWindow($parent: JQuery<HTMLElement>): JQuery<HTMLElement> {\r\n        let $window = jQuery(\r\n            `\r\n            <div class=\"joe_databaseResetModal\">\r\n            <div style=\"flex: 1\"></div>\r\n            <div style=\"display: flex\">\r\n                <div style=\"flex: 1\"></div>\r\n                <div style=\"padding-left: 30px;\">\r\n                <div style=\"color: red; margin-bottom: 10px; font-weight: bold\">Warnung:</div>\r\n                <div>Soll die Datenbank wirklich auf den Ausgangszustand zurückgesetzt werden?</div>\r\n                <div>Alle bisher ausgeführten Anweisungen (siehe Tab Write History) werden dann rückgängig gemacht.</div>\r\n                </div>\r\n                <div style=\"flex: 1\"></div>\r\n            </div>\r\n            <div class=\"joe_databaseResetModalButtons\">\r\n            <div class=\"joe_databaseResetModalCancel jo_button jo_active\">Abbrechen</div>\r\n            <div class=\"joe_databaseResetModalOK jo_button jo_active\">OK</div>\r\n            </div>\r\n            <div style=\"flex: 2\"></div>\r\n            </div>\r\n        `\r\n        );\r\n\r\n        $window.hide();\r\n\r\n        $parent.append($window);\r\n\r\n        $parent.find(\".joe_databaseResetModalCancel\").on(\"click\", () => {\r\n            $window.hide();\r\n        });\r\n\r\n        $parent.find(\".joe_databaseResetModalOK\").on(\"click\", () => {\r\n\r\n            $window.hide();\r\n            this.resetDatabase(() => {\r\n                this.writeQueryManager.reset();\r\n            });\r\n\r\n            this.$databaseResetButton.hide();\r\n            this.compileRunsAfterCodeReset = 1;\r\n\r\n        });\r\n\r\n        return $window;\r\n    }\r\n\r\n    makeFilesDiv(): JQuery<HTMLElement> {\r\n\r\n\r\n        let $filesDiv = jQuery('<div class=\"joe_bottomDivFiles jo_scrollable\"></div>');\r\n\r\n        let $filesHeader = jQuery('<div class=\"joe_filesHeader jo_tabheading jo_active\"  style=\"line-height: 24px\">Dateien</div>');\r\n\r\n        this.$filesListDiv = jQuery('<div class=\"joe_filesList jo_scrollable\"></div>');\r\n\r\n        $filesDiv.append($filesHeader, this.$filesListDiv);\r\n\r\n        return $filesDiv;\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling && this.getDatabaseTool().databaseStructure != null) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.\r\n                    bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                this.version++;\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    considerShowingCodeResetButton() {\r\n        this.compileRunsAfterCodeReset++;\r\n        if (this.compileRunsAfterCodeReset == 3) {\r\n            this.$codeResetButton.fadeIn(1000);\r\n        }\r\n    }\r\n\r\n    makeBottomDiv($bottomDiv: JQuery<HTMLElement>, $buttonDiv: JQuery<HTMLElement>) {\r\n\r\n        let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n        $tabheadings.css('position', 'relative');\r\n        let $thLeftSide = jQuery('<div class=\"joe_tabheading-right jo_noHeading joe_controlsTabheading\"></div>');\r\n\r\n        $thLeftSide.append($buttonDiv);\r\n        $tabheadings.append($thLeftSide);\r\n\r\n        if (this.config.withErrorList) {\r\n            let $thErrors = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_errorsTab\" style=\"line-height: 24px\">Fehler</div>');\r\n            $tabheadings.append($thErrors);\r\n        }\r\n\r\n        if (this.config.withOutput) {\r\n            let $thPCode = jQuery('<div class=\"jo_tabheading jo_resultTabheading\" data-target=\"jo_resultTab\" style=\"line-height: 24px\">Ausgabe</div>');\r\n            $tabheadings.append($thPCode);\r\n        }\r\n\r\n        // let $thRuntimeError = jQuery('<div class=\"jo_tabheading jo_runtimeerrorsTabheading\" data-target=\"jo_runtimeerrorsTab\" style=\"line-height: 24px\">DB-Fehler</div>');\r\n        // $tabheadings.append($thRuntimeError);\r\n\r\n        let $thHistory = jQuery('<div class=\"jo_tabheading jo_historyTabheading\" data-target=\"jo_historyTab\" style=\"line-height: 24px\">Write History</div>');\r\n        $tabheadings.append($thHistory);\r\n\r\n        let $thRightSide = jQuery('<div class=\"joe_tabheading-right jo_noHeading joe_paginationHeading\"><div class=\"jo_pagination\"></div></div>');\r\n        $tabheadings.append($thRightSide);\r\n\r\n        $bottomDiv.append($tabheadings);\r\n\r\n        let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n\r\n        if (this.config.withErrorList) {\r\n            let $tabError = jQuery('<div class=\"jo_active jo_scrollable jo_errorsTab\"></div>');\r\n            $tabs.append($tabError);\r\n        }\r\n\r\n        if (this.config.withOutput) {\r\n            let $tabPCode = jQuery(`<div class=\"jo_editorFontSize jo_resultTab\">\r\n            <div class=\"jo_result-inner\">\r\n                <div class=\"jo_result-header\"></div>\r\n                <div class=\"jo_scrollable jo_result-body\"></div>\r\n            </div>\r\n            </div>\r\n    `);\r\n            $tabs.append($tabPCode);\r\n        }\r\n\r\n        // let $tabRtErrors = jQuery('<div class=\"jo_scrollable jo_runtimeerrorsTab\"></div>');\r\n        // $tabs.append($tabRtErrors);\r\n\r\n        let $tabHistory = jQuery('<div class=\"jo_scrollable jo_historyTab\"></div>');\r\n        $tabs.append($tabHistory);\r\n\r\n\r\n        $bottomDiv.append($tabs);\r\n\r\n    }\r\n\r\n    makeRightDiv(): JQuery<HTMLElement> {\r\n\r\n        let $rightDiv = jQuery('<div class=\"joe_rightDiv\"></div>');\r\n        this.$rightDivInner = jQuery('<div class=\"joe_rightDivInner\"></div>');\r\n        $rightDiv.append(this.$rightDivInner);\r\n\r\n\r\n        let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n        $tabheadings.css('position', 'relative');\r\n        let $thRun = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_db_tree\" style=\"line-height: 24px\">DB (Baum)</div>');\r\n        // let $thVariables = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_db_list\" style=\"line-height: 24px\">DB (Liste)</div>');\r\n        $tabheadings.append($thRun, //$thVariables\r\n        );\r\n        this.$rightDivInner.append($tabheadings);\r\n\r\n        let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n        // let $vd = jQuery('<div class=\"jo_tab jo_scrollable jo_editorFontSize jo_db_list\">DB-Liste</div>');\r\n\r\n        this.$dbTreeDiv = jQuery(`<div class=\"jo_tab jo_scrollable jo_editorFontSize jo_active jo_db_tree\">DB-Baum</div>`);\r\n\r\n        $tabs.append(this.$dbTreeDiv //, $vd\r\n        );\r\n        this.$rightDivInner.append($tabs);\r\n\r\n        makeTabs($rightDiv);\r\n\r\n        return $rightDiv;\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Formatter } from \"../main/gui/Formatter.js\";\r\nimport { ThemeManager } from \"../main/gui/ThemeManager.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\n\r\n// declare const require: any;\r\n\r\nexport type ScriptType = \"sql\" | \"hint\";\r\n\r\nexport type JOScript = {\r\n    type: ScriptType;\r\n    title: string;\r\n    text: string;\r\n}\r\n\r\nexport class EmbeddedStarter {\r\n\r\n\r\n    startupComplete = 2;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    mainEmbeddedList: MainEmbedded[] = [];\r\n\r\n    initGUI() {\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.themeManager = new ThemeManager();\r\n    }\r\n\r\n    initEditor() {\r\n        new Formatter().init();\r\n        this.checkStartupComplete();\r\n    }\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    start() {\r\n\r\n        this.initJavaOnlineDivs();\r\n\r\n    }\r\n\r\n    initJavaOnlineDivs() {\r\n        \r\n        jQuery('.sql-online').each((index: number, element: HTMLElement) => {\r\n            let $div = jQuery(element);\r\n            let scriptList: JOScript[] = [];\r\n            $div.find('script').each((index: number, element: HTMLElement) => {\r\n                let $script = jQuery(element);\r\n                let type: ScriptType = \"sql\";\r\n                if($script.data('type') != null) type = <ScriptType>($script.data('type'));\r\n                let script: JOScript = {\r\n                    type: type,\r\n                    title: $script.attr('title'),\r\n                    text: $script.text().trim()\r\n                };\r\n                scriptList.push(script);\r\n            });\r\n\r\n            this.initDiv($div, scriptList);\r\n\r\n        });\r\n\r\n    }\r\n\r\n    initDiv($div: JQuery<HTMLElement>, scriptList: JOScript[]) {\r\n\r\n        let me: MainEmbedded = new MainEmbedded($div, scriptList);\r\n\r\n    }\r\n\r\n}\r\n\r\njQuery(function () {\r\n\r\n    let embeddedStarter = new EmbeddedStarter();\r\n\r\n    let prefix = \"\";\r\n    let editorPath = \"lib/monaco-editor/dev/vs\"\r\n    //@ts-ignore\r\n    if(window.javaOnlineDir != null){\r\n        //@ts-ignore\r\n        prefix = window.javaOnlineDir;\r\n    }\r\n\r\n    //@ts-ignore\r\n    if(window.monacoEditorPath != null){\r\n        //@ts-ignore\r\n        editorPath = window.monacoEditorPath;\r\n    }\r\n\r\n    //@ts-ignore\r\n    window.require.config({ paths: { 'vs': prefix + editorPath } });\r\n    //@ts-ignore\r\n    window.require.config({\r\n        'vs/nls': {\r\n            availableLanguages: {\r\n                '*': 'de'\r\n            }\r\n        },\r\n        ignoreDuplicateModules: [\"vs/editor/editor.main\"]\r\n    });\r\n    //@ts-ignore\r\n    window.require(['vs/editor/editor.main'], function () {\r\n\r\n        embeddedStarter.initEditor();\r\n        embeddedStarter.initGUI();\r\n\r\n    });\r\n\r\n});\r\n"],"sourceRoot":""}