{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../node_modules/regenerator-runtime/runtime.js","webpack:///../../../../src/client/compiler/lexer/Token.ts","webpack:///../../../../src/client/compiler/lexer/Lexer.ts","webpack:///../../../../src/client/main/gui/Formatter.ts","webpack:///../../../../src/client/main/gui/ThemeManager.ts","webpack:///../../../../src/client/compiler/parser/SQLTypes.ts","webpack:///../../../../src/client/compiler/parser/Parser.ts","webpack:///../../../../src/client/compiler/parser/SQLTable.ts","webpack:///../../../../src/client/compiler/parser/SymbolTable.ts","webpack:///../../../../src/client/compiler/parser/SQLMethods.ts","webpack:///../../../src/client/tools/StringTools.ts","webpack:///../../../../src/client/compiler/parser/SymbolResolver.ts","webpack:///../../../src/client/compiler/Compiler.ts","webpack:///../../../../src/client/compiler/parser/Module.ts","webpack:///../../../../src/client/main/gui/ActionManager.ts","webpack:///../../../src/client/tools/HtmlTools.ts","webpack:///../../../src/client/communication/AjaxHelper.ts","webpack:///../../../src/client/workspace/WDatabase.ts","webpack:///../../../src/client/communication/CacheManager.ts","webpack:///../../../src/client/communication/NotifierClient.ts","webpack:///../../../src/client/communication/NetworkManager.ts","webpack:///../../../src/client/tools/TemplateUploader.ts","webpack:///../../../../src/client/main/gui/DatabaseSettingsDialog.ts","webpack:///../../../src/client/workspace/Workspace.ts","webpack:///../../../../src/client/main/gui/MyCompletionItemProvider.ts","webpack:///../../../../src/client/main/gui/MySignatureHelpProvider.ts","webpack:///../../../../src/client/main/gui/MyHoverProvider.ts","webpack:///../../../../src/client/main/gui/MyCodeActionProvider.ts","webpack:///../../../../src/client/main/gui/MyReferenceProvider.ts","webpack:///../../../../src/client/main/gui/Helper.ts","webpack:///../../../../src/client/main/gui/Editor.ts","webpack:///../../../../src/client/main/gui/VscSql.ts","webpack:///../../../src/client/sqljs-worker/sqljsWorkerSim.ts","webpack:///../../../src/client/tools/DatabaseTools.ts","webpack:///../../../../src/client/compiler/parser/StatementCleaner.ts","webpack:///../../../src/client/tools/MySqlImporter.ts","webpack:///../../../src/client/tools/DatabaseImportExport.ts","webpack:///../../../../src/client/main/gui/NewDatabaseDialog.ts","webpack:///../../../../src/client/main/gui/MainMenu.ts","webpack:///../../../../src/client/main/gui/Accordion.ts","webpack:///../../../../src/client/main/gui/DistributeToStudentsDialog.ts","webpack:///../../../../src/client/main/gui/ProjectExplorer.ts","webpack:///../../../../src/client/main/gui/RightDiv.ts","webpack:///../../../../src/client/main/gui/Sliders.ts","webpack:///../../../../src/client/main/gui/TeacherExplorer.ts","webpack:///../../../../src/client/main/gui/UserMenu.ts","webpack:///../../../src/client/main/Login.ts","webpack:///../../../../src/client/main/gui/ViewModeController.ts","webpack:///../../../../src/client/compiler/parser/SemicolonAngel.ts","webpack:///../../../../src/client/main/gui/DatabaseExplorer.ts","webpack:///../../../../src/client/main/gui/ProgramControlButtons.ts","webpack:///../../../../src/client/main/gui/ResultsetPresenter.ts","webpack:///../../../src/client/communication/Notifier.ts","webpack:///../../../../src/client/main/gui/WaitOverlay.ts","webpack:///../../../../src/client/main/gui/HistoryViewer.ts","webpack:///../../../src/client/main/Main.ts","webpack:///../../../../src/client/main/gui/ErrorManager.ts","webpack:///../../../../src/client/main/gui/HomeworkManager.ts","webpack:///../../../../src/client/main/gui/BottomDiv.ts","webpack:///../../../src/client/embedded/EmbeddedSlider.ts","webpack:///../../../src/client/embedded/EmbeddedFileExplorer.ts","webpack:///../../../src/client/embedded/EmbeddedIndexedDB.ts","webpack:///../../../src/client/embedded/WriteQueryManager.ts","webpack:///../../../src/client/tools/DatabaseLoader.ts","webpack:///../../../src/client/embedded/MainEmbedded.ts","webpack:///../../../src/client/embedded/EmbeddedStarter.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","runtime","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","define","obj","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","state","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","makeInvokeMethod","fn","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","undefined","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","keys","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","TokenType","LexerState","TokenTypeReadable","identifier","integerConstant","floatingPointConstant","booleanConstant","stringConstant","charConstant","true","false","keywordRename","keywordTo","keywordAlter","keywordCommit","keywordAdd","keywordDelete","keywordSelect","keywordInsert","keywordInto","keywordValues","keywordUpdate","keywordSet","keywordNo","keywordUse","keywordCreate","keywordReferences","keywordPrimary","keywordForeign","keywordTable","keywordTables","keywordColumn","keywordDrop","keywordUnique","keywordKey","keywordIndex","keywordConstraint","keywordModify","keywordCascade","keywordRestrict","keywordAction","keywordAutoincrement","keywordFrom","keywordWhere","keywordGroup","keywordBy","keywordHaving","keywordOrder","keywordAscending","keywordDescending","keywordNulls","keywordFirst","keywordLast","keywordIs","keywordNull","keywordDatabase","keywordAnd","keywordOr","keywordNot","keywordJoin","keywordNatural","keywordLeft","keywordCross","keywordInner","keywordOuter","keywordOn","keywordAs","keywordLimit","keywordOffset","keywordIn","keywordNotIn","keywordLike","keywordCollate","keywordDefault","keywordComment","keywordEngine","keywordCharset","keywordCharacter","keywordStart","keywordTransaction","keywordIf","keywordExists","keywordLock","keywordUnlock","keywordWrite","keywordRead","leftBracket","rightBracket","leftSquareBracket","rightSquareBracket","leftCurlyBracket","rightCurlyBracket","leftRightSquareBracket","dot","minus","modulo","plus","multiplication","division","singleQuote","doubleQuote","identifierQuote","lower","greater","equal","lowerOrEqual","greaterOrEqual","concatenation","semicolon","colon","comma","backslash","at","hash","pipe","space","tab","newline","identifierChar","comment","endofSourcecode","specialCharList","'","notEqual","linefeed","keywordList","EscapeSequenceList","\"","spaceTokens","correspondingBracket","tokenTypesToMerge","first","second","merged","isNot","isNotNull","isNull","input","replace","tokenList","errorList","bracketError","bracketStack","pos","line","column","nonSpaceLastTokenType","nonSpaceLastToken","tokens","errors","currentChar","nextChar","mainState","bracketOpen","bracketClosed","setBracketError","tt","openBracket","char","specialCharToken","pushToken","lexMultilineComment","checkClosingBracket","isDigit","indexOf","lexEndofLineComment","lexNumber","position","lexStringConstant","lexSpace","lexAnnotation","lexQuotedIdentifier","lexIdentifierOrKeyword","pushError","text","tripel","newLength","errorLevel","level","a","base","charCode","charCodeAt","posStart","posEnd","substring","escapeChar","beginChar","isDoubleQuotedIdentifier","lastCharWasNewline","commentStart","sign","firstChar","radix","exponent","hasExponential","posExponentStart","exponentString","Number","parseInt","parseFloat","Math","pow","isSpace","toLowerCase","autoFormatTriggerCharacters","monaco","languages","registerDocumentFormattingEditProvider","registerOnTypeFormattingEditProvider","model","ch","options","token","edits","format","e","e1","range","endLineNumber","startLineNumber","endColumn","startColumn","splice","delta","substr","getValue","editor","EndOfLinePreference","LF","tokenlist","lex","lastNonSpaceToken","indentLevel","curlyBracesOpenAtLines","indentLevelAtSwitchStatements","switchHappend","lastTokenWasNewLine","roundBracketsOpen","replaceBetween","token1","insertSpaces","deleteSpaces","openedAtLine","repeat","nextToken1","nextToken2","lastToken1","lastToken2","isBinaryOperator","lastTokenIsOperator","nextTokenIsOperator","getNextNonSpaceToken","beginNextLine","token2","currentIndentation","il","correctIndentation","nextToken","lowerGeneric","lowerBelongsToGenericExpression","greaterGeneric","greaterBelongsToGenericExpression","tokenBefore","spaces","deleteOverlappingRanges","currentIndex","j","positionFrom","positionTo","numberOfSpaces","ThemeManager","themes","initThemes","theme","internalSwitchTheme","setTheme","monacoTheme","root","document","documentElement","cssColors","style","setProperty","SQLType","parameterDescriptions","checkFunction","outputFunction","canCastToList","super","binaryResultTypes","Map","unaryOperators","ownIndex","baseTypeMap","toLocaleLowerCase","baseTypes","concat","set","tokenType","secondType","resultType","isCommutative","Array","isArray","map","addBinaryOperation","type2","bt2","operator","booleanType","value1","value2","max","tens","baseType","parameterValues","parameters","join","returnBaseType","getUnaryResultType","getBinaryResult","round","textTypes","varcharType","ci","pv","v","charType","textType","tinyTextType","mediumTextType","longTextType","floatTypes","decimalType","vk","trunc","nk","numericType","doubleType","realType","floatType","numberTypes","intType","integerType","tinyIntType","smallIntType","mediumIntType","bigIntType","dateType","dateTimeType","timestampType","nullType","numericTypes","addBaseTypes","numericBinaryOperators","comparisonOperators","characterTypes","booleanOperations","bt","lookahead","endToken","beginStatementKeywords","completionHints","sqlStatements","addCompletionHint","initializeLookahead","lastToken","parseMain","ct","lastComment","commentBefore","cct","quickFix","assign","skip","invokeSemicolonAngel","expectedValuesArray","isOperatorOrDot","title","editsProvider","uri","resource","edit","message","severity","MarkerSeverity","main","getSemicolonAngel","register","expectedTokens","op","operatorPrecedence","ret","deltaColumns","tpos","deltaInsideToken","tokenPos","getCurrentPosition","mainProgram","mainProgramEnd","afterLastStatement","semicolonAfterLastStatement","getCurrentPositionPlus","isEnd","oldPos","errorsBeforeStatement","startPosition","st","parseStatement","hasErrors","ast","from","to","getEndOfPosition","acceptedBySQLite","beginStatementTokens","firstBadToken","expectSemicolon","parseSelect","parseInsert","parseCreateTableOrDatabase","parseUpdate","parseDelete","parseDropTable","parseAlterTable","parseSet","parseUse","expect","parseLockUnlock","node","omittedeStatement","endPosition","symbolTable","kind","tableIdentifier","tableIdentifierPosition","addCompletionHintHere","parseRenameTableOrColumn","parseAlterTableAdd","parseDropColumn","comesToken","getEndOfCurrentToken","newTableName","oldColumnName","oldColumnPosition","newColumnName","unique","parseAddColumn","parseAddPrimaryKey","parseAddIndex","parseModifyColumn","parseAddConstraint","fki","parseForeignKeyDefinition","foreignKeys","referencesTable","referencesColumn","referencesPosition","parseReferences","pos0","pos1","modifyColumnInfo","parseColumnDefinition","primaryKeys","index","index_name","indices","columnDefBegin","columnDef","ifExists","whereNode","whereNodeBegin","whereNodeEnd","parseTerm","columnIdentifiers","columnIdentifierPositions","valuePosBegin","valuePosEnd","parseCreateDatabase","parseCreateTable","ifNotExists","columnList","combinedPrimaryKeyColumns","foreignKeyInfoList","uniqueConstraints","primaryKeyAlreadyDefined","parsePrimaryKeyTerm","parseUniqueTerm","columnNode","isPrimary","isAutoIncrement","columns","uniqueConstraint","notNull","parseType","hintColumns","hintTables","hints","additionalColumns","praefix","suffix","datatypes","getBaseType","alreadySeenKeywords","foreignKeyInfo","collate","defaultValue","fromConstantType","canCastTo","valuesPosition","columnsPosition","table","alias","parseValueLists","insideListTokens","outerFirst","leftBracketPosition","constantType","constant","constantNode","columnListStart","fromNode","parentStatement","parseColumnList","columnListKeywordArray","findIndex","allColumns","fromListKeywordArray","fromStartPosition","dontHint","parseTableOrSubQuery","hintEndPosition","fromEndPosition","unshift","whereKeywordArray","whereStart","groupKeywordArray","groupStart","groupByNode","parseGroupBy","orderStart","orderByNode","parseOrderBy","limitNode","parseLimit","numberOfRows","ln","offset","gbn","tokenTypesAfterGroupBy","term","having","obnList","obn","leftSide","parseAtomicTableOrSubQuery","parseJoinOperator","rightSide","firstOperand","secondOperand","on","selectStatement","subquery","query","tokenTypesAfterListEnd","allowAliases","columnTerm","parseTermBinary","precedence","left","parseUnary","operators","right","binaryOp","parseBracket","tt1","unaryOp","operand","isStringConstant","parseDotOrArrayChains","identifier1","position1","parseMethodCallParameters","rightBracketPosition","callMethod","operands","nodes","commaPositions","secondIdentifier","identifierLeft","identifierRight","list","elements","constantTypes","tokenBeforeBracket","selectNode","listNode","parseList","termInsideBrackets","parameter","isPrimaryKey","isNullable","cs","typeMatch1","completeTypeSQL","match","baseTypeIdentifier","commaSeparatedParameters","split","trim","fromColumnStructure","Table","ts","size","tsList","tables","fromTableStructure","columnStructureToColumnMap","referencedCs","references","referencedColumn","parentSymbolTable","childSymbolTables","symbols","symbolList","parent","databaseStructure","fromTableStructureList","storeTableSymbols","storeSymbol","posOfDefinition","referencedOnPositions","symbol","containsPosition","shortestSymbolTableContainingPosition","shortestPosition","st1","findTableAtPosition","findTables","filter","isAggregating","returnType","acceptsStarParameter","SQLMethodStore","methods","pushOneParameterMethod","countMethod","instance","parameterType","escapeHtml","unsafe","twoDez","z","isDate","inputText","opera1","opera2","lopera1","lopera2","pdate","dd","mm","yy","lyear","isDateTime","dateStr","databaseTool","symbolTableStack","mainSymbolTable","statement","astNode","resolveSelect","resolveInsert","resolveCreateTable","resolveUpdate","resolveDelete","resolveDropTable","resolveAlterTable","getCurrentSymbolTable","resultTable","pushNewSymbolTable","joinedTables","resolveTableOrSubQuery","extractDatabaseStructure","resolveTerm","c1","sqlType","whereType","getBaseTypeName","findTable","whereSymbolTable","oldColumn","find","ciPos","createTableNode","thisTable","cn","tosNode","tableList","storeTableIntoSymbolTable","tableAlias","resolveNotIn","typeLeft","typeRight","getBinaryResultType","operandType","resultType1","resolveMethodCall","resolveIdentifier","resolveDot","selectTable","tableSymbols","findColumn","getInstance","getMethods","found","methodParameter","operatorString","leftType","pType","element","elementType","tableCompletionTo","valueList","destType","CompilerStatus","compilerStatus","compiledButNothingToRun","moduleStore","compiling","t0","performance","now","lexer","getModules","file","dirty","clear","lexed","getProgramTextFromMonacoModel","getCurrentlyEditedModule","getBottomDiv","errorManager","showParenthesisWarning","startRegistering","parser","parse","getDatabaseTool","symbolResolver","start","dt","getCurrentWorkspace","compilerMessage","healSemicolons","readyToRun","oldErrorDecorations","identifierPositions","methodCallPositions","path","uriCounter","uriMap","Uri","scheme","createModel","updateOptions","tabSize","lastSavedVersionId","getAlternativeVersionId","that","onDidChangeContent","versionId","saved","isEmbedded","main1","workspacesOwnerId","user","id","text_before_revision","student_edited_after_revision","networkManager","sendUpdates","bottomDiv","homeworkManager","showHomeWorkRevisionButton","projectExplorer","renderHomeworkButton","fromPosition","toPosition","hintKeywords","fromColumn","fromLine","toColumn","toLine","hintColumnsOfTable","chList","sel","selStart","selEnd","stmt","compare","b","lineNumber","bestCh","bestRangeLength","rangeLength","f","f1","submitted_date","version","workspace","workspace_id","forceUpdate","file_type","ec","el","positionList","positionsOnLine","bestFoundPosition","sort","e2","errorLevelCompare","level1","level2","maxUriNumber","ModuleStore","moduleMap","module_id","ms","putModule","copy","mo","includeSystemModules","excludedModuleName","removeModule","moduleName","ActionManager","$mainElement","actions","keyEntries","buttons","$element","jQuery","event","executeKeyDownEvent","actionIdentifier","ae","action","button","active","attr","addClass","removeClass","activeElement","tagName","keyCode","ctrlKey","shiftKey","altKey","actionEntries","actionEntry","stopPropagation","preventDefault","makeEditable","elementWithText","elementToReplace","renameDoneCallback","selectionRange","mousePointer","window","PointerEvent","$input","css","width","height","color","val","setSelectionRange","end","after","hide","setTimeout","focus","ev","off","remove","show","newValue","openContextMenu","items","x","y","$contextMenu","$openSubMenu","parentMenuItem","mi","caption","link","$item","subMenu","callback","$link","top","append","leftRight","innerWidth","xp","topBottom","innerHeight","yp","makeTabs","tabDiv","headings","not","tabs","target","data","trigger","makeDiv","klass","div","jo_mouseDetected","animateToTransparent","cssProperty","startColorRgb","duration","colorPraefix","animate","copyTextToClipboard","navigator","clipboard","writeText","console","textArea","createElement","body","appendChild","select","execCommand","removeChild","fallbackCopyTextToClipboard","PerformanceCollector","url","startTime","pe","performanceData","count","sumTime","performanceDataCount","lastTimeSent","request","ajax","successCallback","errorCallback","showNetworkBusy","time","$","JSON","stringify","contentType","success","response","registerPerformanceEntry","jqXHR","statusText","status","busy","WDatabase","db","statements","published_to","description","templateDump","based_on_template_id","owner_id","CacheManager","databaseId","cacheAvailable","getCache","cache","databaseIdToCacheIdentifier","arrayBuffer","buffer","Uint8Array","catch","put","Response","caches","open","unsentMessages","connect","location","protocol","startsWith","host","connection","WebSocket","onerror","onError","onclose","onClose","onmessage","onMessage","onopen","command","sendIntern","forcedUpdateEvery","counterTillForcedUpdate","send","log","$updateTimerDiv","ownUpdateFrequencyInSeconds","teacherUpdateFrequencyInSeconds","updateFrequencyInSeconds","secondsTillNextUpdate","errorHappened","interval","clearInterval","setInterval","$rect","notifierClient","sendIfNothingIsDirty","writeEditorTextToFile","settings","wdList","fdList","ws","workspaceList","getWorkspaceData","getFileData","workspacesWithoutFiles","files","userId","language","currentWorkspaceId","getModifiedWorkspaces","updateWorkspaces","wd","is_testuser","random","entity","workspaceId","alert","secretKind","secret","databaseName","publishedTo","klasse","student_ids","class_id","current_workspace_id","version_before","database","newStatements","firstNewStatementIndex","statements_before","new_version","cacheManager","fromDatabaseData","fetchTemplateFromCache","pako","inflate","fetchTemplate","template","saveTemplateToCache","xhrFields","responseType","user_id","templateList","sendUpdatesRequest","sendUpdatesResponse","idToRemoteWorkspaceDataMap","fileIdsSended","workspaces","newWorkspaceNames","remoteWorkspace","createNewWorkspaceFromWorkspaceData","idToRemoteFileDataMap","fd","idToModuleMap","fileId","remoteFileData","fileListPanel","removeElement","currentWorkspace","setValue","remoteFile","createFile","workspaceListPanel","sortElements","withSort","w","createNewWorkspace","sql_history","isFolder","panelElement","externalElement","iconClass","addElement","fileData","identical_to_repository_version","getNewModule","TemplateUploader","dump","reason","waitOverlay","export","deflate","uploadIntern","processData","headers","init","$dialog","showMainWindow","saveNameAndPublishedTo","setValues","setNewSecret","$copyButton","prop","checked","each","setNameAndPublishedTo","uploadCurrentDatabase","getDatabaseSettings","secrets","is_admin","is_schooladmin","empty","withFiles","currentFileId","currentlyOpenModule","permissions","database_id","$buttonDiv","$htmlFirstLine","$button","restoreFromData","triggerCharacters","keywordCompletionItems","keywordToSnippetMap","setupKeywordCompletionItems","getModuleByMonacoModel","wfc","provideCompletionItemsIntern","sw","getMonacoEditor","_contentWidgets","widget","toggleDetails","isStringLiteral","textUntilPosition","getValueInRange","textAfterPosition","completionHint","getCompletionHint","completionItems","addKeywordCompletionItems","dotMatch","ibMatch","identifierAndBracketAfterCursor","addIdentifierCompletionItems","addDotCompletionItems","word","getWordUntilPosition","replaceWordRange","insertAfterCursorRange","item","insertText","suggestions","textAfterDot","textBeforeDot","rangeToReplace","label","detail","filterText","insertTextRules","CompletionItemInsertTextRule","KeepWhitespace","CompletionItemKind","Field","tableIdentifiers","columnIdentifier","InsertAsSnippet","Snippet","Class","sortText","columList","withTable","snippet","Keyword","posMin","posMax","watchDog","posOld","arguments","MySignatureHelpProvider","signatureHelpTriggerCharacters","signatureHelpRetriggerCharacters","compileIfDirty","provideSignatureHelpLater","getModel","methodCallPosition","rightMostPosition","mcp","identifierPosition","getSignatureHelp","parameterIndex","cp","activeParameter","activeSignature","signatures","dispose","MyHoverProvider","selection","getSelection","getElementAtPosition","getWordUnderCursor","desc","keywordDescriptions","contents","getValueLengthInRange","isInsideIdentifierOrArrayDescriptor","begin","isInsideOperator","isInsideIdentifierChain","MyCodeActionProvider","markers","relatedInformation","diagnostics","isPreferred","MyReferenceProvider","usagePositions","referencePositions","upInCurrentModule","up","targetElement","direction","$helper","bottom","html","close","fadeIn","fadeOut","mainBase","helperHistory","flag","sendUpdateUserSettings","openHelper","showMinimap","cw","dontPushNextCursorMove","lastTime","elementDecoration","extensions","conf","onEnterRules","beforeText","afterText","indentAction","IndentAction","IndentOutdent","appendText","None","removeText","comments","lineComment","blockComment","brackets","autoClosingPairs","surroundingPairs","setLanguageConfiguration","setMonarchTokensProvider","defaultToken","tokenPostfix","ignoreCase","escapes","keywords","builtinFunctions","builtinVariables","pseudoColumns","tokenizer","include","cases","whitespace","numbers","strings","string","complexIdentifiers","quotedIdentifier","scopes","defineVscSQL","defineTheme","inherit","rules","foreground","fontStyle","colors","lightbulb","enabled","lineDecorationsWidth","peekWidgetDefaultFocus","fixedOverflowWidgets","quickSuggestions","quickSuggestionsDelay","fontSize","fontFamily","fontWeight","roundedSelection","selectOnLineNumbers","automaticLayout","scrollBeyondLastLine","occurrencesHighlight","autoIndent","dragAndDrop","formatOnType","formatOnPaste","suggestFontSize","suggestLineHeight","suggest","localityBonus","insertMode","parameterHints","cycle","mouseWheelZoom","minimap","scrollbar","vertical","horizontal","mouseWheelListener","changeEditorFontSize","deltaY","onDidChangeConfiguration","hasChanged","EditorOption","fontInfo","registerLightbulbOnClickFunctions","onDidChangeCursorPosition","onDidChangeModel","removeEventListener","addEventListener","passive","setActiveAfterExternalModelSet","registerHoverProvider","registerCompletionItemProvider","registerCodeActionProvider","registerReferenceProvider","registerSignatureHelpProvider","onMouseDown","MouseTargetType","GUTTER_GLYPH_MARGIN","GUTTER_LINE_NUMBERS","isAfterLines","onMarginMouseDown","remeasureFonts","addActions","onDidType","insertEndOfComment","newLine","newColumn","Range","executeEdits","setPosition","getPosition","prevLine","getLineContent","trimRight","endsWith","getLineCount","spacesAtBeginningOfLine","trimLeft","fontSizePx","Date","getTime","editorfs","getOptions","viewModeController","saveFontSize","factor","dynamic","newEditorFs","setFontSize","addAction","keybindings","KeyMod","CtrlCmd","KeyCode","KEY_K","precondition","keybindingContext","contextMenuGroupId","contextMenuOrder","run","ed","getAction","Enter","getActionManager","deltaDecorations","decorations","className","isWholeLine","overviewRuler","darkColor","OverviewRulerLane","Left","executeActionActive","sqlStatement","getSQLSTatementsAtSelection","classname","MinimapPosition","Inline","zIndex","setActive","showHelper","WorkerSim","initsql","initSqlJs","locateFile","scriptDirectory","SQL1","SQL","createDb","worker","postMessageToClient","buff","config","ready","results","exec","row","postMessage","finished","databaseDirectoryEntries","queryId","querySuccessCallbacksMap","queryErrorCallbackMap","queries","callbackAfterInitializing","callbackAfterRetrievingStructure","getWaitOverlay","terminate","javaOnlineDir","jo_doc","Worker","querySuccessCallback","queryErrorCallback","delete","queryCount","execQuery","setProgress","shift","executeQuery","retrieveDatabaseStructure","sql","params","getJSON","entries","sql1","result1","parseDatabaseStructure","tableNameToStructureMap","tableName","tableSQL","tableStructure","completeSQL","columnArray","foreignKeyList","columnArray1","dflt_value","columnStructure","typeLengths","fkInfo","referencesRawData","sqliteMagicBytes","MaxRowsPerInsert","sqlCleaned","cleanCreateTableStatement","cleanInsertStatement","statementHeader","lines","vline","cleanValue","cleanColumnDef","cleanForeignKeyInfo","pkc","uk","fkiString","onDelete","onUpdate","unzipURL","fetch","importFromText","unzipFile","reader","FileReader","onload","readAsText","zip","ZipReader","HttpReader","unzipIntern","BlobReader","getEntries","filename","getData","TextWriter","onprogress","lexOutput","createTableNodes","insertNodes","tableModifyingNodes","tmn","findCreateTableNode","autoIncrementColumn","pcn","findCreateTableColumnNode","mci","mcn","fk","indexIdentifier","makeDatabase","tableNode","statementCleaner","clean","dbTool","initializeWorker","binDump","ld","loadFromFile","ab","getDumpType","readAsArrayBuffer","prompt","isBlob","blob","Blob","msSaveOrOpenBlob","createEvent","download","href","URL","createObjectURL","dataset","downloadurl","initEvent","dispatchEvent","downloadFile","$templatelist","fetchTemplateList","templatelist","tle","$tle","ownerName","$templateName","$dropZone","evt","originalEvent","dataTransfer","dropEffect","importFile","$dumpFileInput","createMode","hasClass","workspaceData","createWorkspace","$template","template_database_id","code","tIndex","otherDatabaseId","template_id","newTemplateId","sendCreateWorkspace","accordionElement","renderSettingsButton","setWorkspaceActive","importer","isDatabase","dbUncompressed","currentSubmenu","openSubmenusOnMousemove","mainMenu","switchTheme","saveToFile","initMenu","menu","initMenuitemCallbacks","opensubmenu","accordion","flexWeight","newButtonClass","buttonNewTitle","defaultIconClass","withDeleteButton","withFolders","enableDrag","acceptDropKinds","dontSortElements","addPanel","$newFolderAction","addFolder","newElement","newFolderCallback","scrollIntoView","$collapseAllAction","collapseAll","slideUp","$captionElement","$listElement","fixed","grow","$buttonNew","pathArray","selectedElement","getSelectedElement","name1","path1","isFolder1","name2","path2","isFolder2","cmp","localeCompare","compareWithPath","insertIndex","getElementIndex","$elements","prepend","elementAtIndex","before","renderElement","insertElement","renameElement","$accordionDiv","getCurrentlySelectedPath","newFilesElementCallback","$htmlSecondLine","insertAfter","selectCallback","$listOuter","$ce","$li","targetGrow","parts","toggleClass","currentlyDraggedElementKind","element1","currentlyDraggedElement","moveElement","expanded","aName","sortName","bName","cssClass","$div","expandedCollapsed","pathHtml","addElementActionCallback","$elementAction","$filedragpart","effectAllowed","dropElementCallback","pathIsCollapsed","slideDown","pressTimer","contextmenuHandler","contextMenuItems","renameCallback","newDatabaseElementCallback","contextMenuProvider","cmi","pageX","pageY","clearTimeout","getChildElements","deleteCallback","elementToMove","destinationFolder","destinationPath","movedElements","sourcePath","oldPathLength","moveCallback","folder","pointPos","newText","invokeCallback","ae1","findElement","pathString","elPath","ps","Accordion","$html","panel","renderOuterHtmlElements","DistributeToStudentsDialog","classes","studentCount","$studentList","student","students","$studentLine","$studentClass","$studentName","rufname","familienname","$dialogMain","distributeWorkspace","sendDistributeWorkspace","$projectexplorerDiv","programPointerModule","programPointerDecoration","lastOpenModule","initFilelistPanel","initWorkspacelistPanel","successfulNetworkCommunicationCallback","setModuleActive","sendCreateFile","newName","callbackIfSuccessful","sendDeleteWorkspaceOrFile","is_teacher","$homeworkButtonDiv","$newWorkspaceAction","removeWorkspace","enableNewButton","databaseExplorer","getResultsetPresenter","dest","droppedElement","dropEffekt","$homeAction","onHomeButtonClicked","hideHomeworkTab","workspaceAccordionElement","cmiList","teacherExplorer","classPanel","restoreOwnWorkspaces","setCaption","moduleList","errorCountMap","errorCount","errorCountS","setTextAfterFilename","initializeDatabaseTool","fetchDatabase","currentWorkspace_id","renderFiles","nonSystemModules","notifier","refreshAfterRetrievingDBStructure","getHistoryViewer","clearAndShowStatements","cem","hideRevision","editorState","saveViewState","setModel","readOnly","hideHomeworkRevisionButton","restoreViewState","setCurrentlyEditedModule","showProgramPointer","programPointerPosition","revealRangeInCenterIfOutsideViewport","Center","beforeContentClassName","findModuleByFile","$rightDiv","isWholePage","$tabs","$headings","rightdiv_width","$wholeWindow","Sliders","md","clientX","dx","moveLeftPanel","clientY","dy","moveBottomDiv","moveRightDiv","sliderknobLeft","stopImmediatePropagation","sliderknobRight","$editor","mewidth","layout","diffEditor","$bottomDiv","meheight","$leftPanel","classData","studentPanel","initStudentPanel","initClassPanel","renderClasses","ws_userId","ownWorkspaces","currentOwnWorkspace","restoreWorkspaces","setExplorerColor","showHomeworkTab","attachToWorkspaces","renderWorkspaces","ea","renderStudents","userDataList","ud","classDataList","cd","UserMenu","$loginSpinner","loginHappened","username","password","viewModes","classDiagram","waitForGUICallback","initGUI","initTeacherExplorer","classdata","initializeTimer","setFixed","initViewMode","initializeNotifierClient","startupComplete","errorMessage","resultsetPresenter","removePanels","ViewModeController","$buttonsContainer","$buttonMap","highContrast","editorHasFullWidth","$buttonEditorFullscreen","$buttonPresentationMode","$buttonMonitorMode","am","actionManager","registerAction","toggleEditorFullwidth","setMode","saveSettings","otherMode","viewMode","viewModeChosen","themeManager","getChosenViewMode","userDataDirty","monitor","presentation","SemicolonAngel","semicolonPositions","isThereAgain","oldEvidence","firstSeenMs","currentlyEditedModule","cursorLine","isCurrentModule","editOperations","forceMoveMarkers","abs","setSelection","$mainDiv","collapsedTables","dbstructure","$table","renderTable","isCollapsed","showTable","$columns","image","referencesHtml","autoincrement","$column","$treeSwitch","$columnList","parents","ProgramControlButtons","$buttonStart","$buttonRollback","isActive","executeSelectedStatements","rollback","paginationSize","writeQueryListeners","showResultsBusy","showResultPending","$paginationDiv","$arrowLeft","$infoDiv","$arrowRight","paginationFrom","floor","showResults","activateButtons","paginationAll","min","listener","fetchSelectedStatements","hasDDLStatements","some","isDDLStatement","hasWriteStatements","isWriteStatement","executeDDLWriteStatementsEmbedded","executeDDLWriteStatementsInOnlineIDE","executeStatements","sucessfullyExecutedModifyingStatements","getDatabaseExplorer","refresh","notify","getNewStatements","new_statements","firstStatementIndex","executeNewStatements","AddDatabaseStatements","appendStatements","modifyingStatements","resetDatabase","fromIndex","executeStatementsString","successfullyExecutedModifyingStatements","showErrors","callback1","laterSelectExists","isSelectStatement","presentResultsIntern","minimapColors","linesDecorationsClassName","borderLeftClass","errorlevel","minimapColor","Warning","Info","setModelMarkers","$runtimeErrorsTab","$runtimeErrorsTabHeading","showErrorDecorations","$errorList","$errorLine","revealRangeInCenter","$sqlDiv","colorize","$messageDiv","$resultTabheading","$resultHeader","headerDiv","$bodyDiv","waitFunction","$header","rows","$row","cell","monacoEditor","StatementDelimiter","isOpen","isPolling","counter","isLongPolling","longPollCounter","databaseVersion","onOpen","startLongPolling","rollbackLocal","callbackIfTooFewStatements","callbackIfDone","doRefreshDatabaseExplorer","poll","getNewStatementsHttp","longPoll","resp","timeout","WaitOverlay","$waitDiv","visible","fadeOutPending","$bitteWartenText","$bitteWartenProgress","$historyPanel","panelEntries","panelEntry","makePanelEntry","makeLastButtonActive","$rollbackButton","$index","$text","$copybutton","$rollbackbutton","rollbackEmbedded","rollbackLocalNeeded","writeQueryManager","initialTemplateDump","initialStatements","writtenStatements","historyViewer","rightDiv","compiler","semicolonAngel","matchMedia","matches","login","initSliders","checkStartupComplete","startTimer","sendBeacon","timerHandle","isDirty","compile","renderErrorCount","oldDecorations","lightBulbOnClickFunctionList","$bracket_warning","children","$errorDiv","getSortedAndFilteredErrors","getErrorCount","lightBulbClass","class","onClickFunction","processError","$file","$error","locf","$errorDivs","$lineColumn","category","$message","showError","showRevisionActive","$homeworkTab","$homeworkTabLeft","$homeworkTabRight","$showRevisionButton","showRevision","originalModel","modifiedModel","createDiffEditor","getElementById","enableSplitViewResizing","originalEditable","renderSideBySide","original","modified","daysWithModules","dateString","date","stringToDate","dateWithoutTime","getDate","getMonth","getFullYear","dateToStringWithoutTime","dwm","day","m1","m2","moduleWithWorkspace","EmbeddedSlider","$container","firstLast","horVert","$otherDiv","initSlider","$sliderDiv","cursor","slide","otherHeight","newHeight","newOtherHeight","otherWidth","newWidth","newOtherWidth","$fileListDiv","addModule","$filesDiv","$addButton","currentFile","selectFile","removeFile","script","$fileDiv","hint","$hintDiv","$monacoDiv","syntaxMap","md1","markdownit","highlight","str","lang","renderer","code_inline","idx","env","content","render","md2","codeMap","uncoloredtext","EmbeddedIndexedDB","databaseIdentifier","indexedDB","onsuccess","onupgradeneeded","objectStoreScripts","createObjectStore","keyPath","autoIncrement","transaction","oncomplete","scriptId","objectStore","databaseID","WriteQueryManager","statementsToExecute","statementsToWrite","atLeastOneExecuted","getDatabase","writeStatementsIfNecessary","forceWriteStatements","writeDatabase","$databaseResetButton","statementsSql","urlWithoutProtocol","urlLowerCase","loadSqLiteDump","loadMySql","saveDatabaseToCache","loadFromUrl","scriptList","programIsExecutable","compileRunsAfterCodeReset","readConfig","databaseURL","$dbTreeDiv","load","loadableDb","initDatabase","withFileList","fileExplorer","getFirstModule","initScripts","indexedDBReady","readScripts","databaseReady","removeAllFiles","initWorkspace","$filesListDiv","setFirstFileActive","addHint","configJson","withOutput","withErrorList","withBottomPanel","markFile","lineNumbersMinChars","getScript","scriptListJSon","saveScripts","countDown","$codeResetButton","oneNotSaved","writeScript","removeScript","considerShowingCodeResetButton","$centerDiv","makeWaitDiv","$codeResetModalWindow","makeCodeResetModalWindow","$databaseResetModalWindow","makeDatabaseResetModalWindow","makeRightDiv","$editorDiv","$bracketErrorDiv","makeBracketErrorDiv","$controlsDiv","$bottomDivInner","makeBottomDiv","makeFilesDiv","$rightDivInner","$rightSideContainer","$infoButton","$buttonOpen","$openInputButton","loadDatabaseFromFile","$buttonSave","saveDatabaseToFile","addWriteQueryListener","dbImportExport","$parent","$window","deleteScriptsInDB","$filesHeader","$tabheadings","$thLeftSide","$thErrors","$thPCode","$thHistory","$thRightSide","$tabError","$tabPCode","$tabHistory","$thRun","mainEmbeddedList","initJavaOnlineDivs","$script","initDiv","embeddedStarter","prefix","editorPath","monacoEditorPath","require","paths","availableLanguages","ignoreDuplicateModules","initEditor"],"mappings":"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ACA,6BACA,oCACA,sCACA,gCACA,sCACA,sCACA,sCACA,kCACA,sCACA,sCACA,gCACA,8BACA,gCACA,sCACA,8CACA,wCACA,wCACA,oCACA,sCACA,sCACA,kCACA,sCACA,gCACA,oCACA,8CACA,sCACA,wCACA,0CACA,sCACA,oDACA,kCACA,oCACA,oCACA,8BACA,sCACA,oCACA,4CACA,8CACA,oCACA,oCACA,kCACA,8BACA,kCACA,0CAEA,8BACA,gCACA,gCAEA,kCACA,wCACA,kCACA,oCACA,oCACA,oCACA,8BACA,8BACA,oCACA,sCACA,8BACA,oCACA,kCACA,wCACA,wCACA,wCACA,sCACA,wCACA,4CAEA,oCACA,gDACA,8BACA,sCAEA,kCACA,sCACA,oCACA,kCAGA,kCACA,oCACA,8CACA,gDACA,4CACA,8CACA,wDAGA,kBACA,wBACA,sBAAO,oBAAM,wCAAgB,4BAC7B,kCAAa,kCACb,0CACA,sBAAO,2BAAS,qCAAc,yCAC9B,uCACA,uBACA,6BAGA,+BAEA,uBAGA,uBAGA,+BAGA,qBAGA,iBAGA,qBAGA,uBAEA,mBAGA,2BAGA,6BAGA,yCAGA,2BAEA,2CAKA,qCACA,iCACA,2BACA,6BACA,uBACA,6BACA,qBACA,yBACA,+BACA,iCACA,yBACA,uBACA,+BACA,+CAtKJ,CAAYA,MAAS,KAyKd,ICvKFC,EDuKMC,EAA4C,CACnD,CAACF,EAAUG,YAAa,iBAExB,CAACH,EAAUI,iBAAkB,yBAC7B,CAACJ,EAAUK,uBAAwB,4BACnC,CAACL,EAAUM,iBAAkB,2BAC7B,CAACN,EAAUO,gBAAiB,+BAC5B,CAACP,EAAUQ,cAAe,sBAC1B,CAACR,EAAUS,MAAO,OAClB,CAACT,EAAUU,OAAQ,QAEnB,CAACV,EAAUW,eAAgB,SAC3B,CAACX,EAAUY,WAAY,KACvB,CAACZ,EAAUa,cAAe,QAC1B,CAACb,EAAUc,eAAgB,SAC3B,CAACd,EAAUe,YAAa,MACxB,CAACf,EAAUgB,eAAgB,SAC3B,CAAChB,EAAUiB,eAAgB,SAC3B,CAACjB,EAAUkB,eAAgB,SAC3B,CAAClB,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","file":"sql-ide-embedded.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","export enum TokenType {\r\n    identifier,\r\n    // constants\r\n    integerConstant,\r\n    floatingPointConstant,\r\n    booleanConstant,\r\n    stringConstant,\r\n    charConstant,\r\n    true,\r\n    false,\r\n    // keywords\r\n    keywordRename,\r\n    keywordTo,\r\n    keywordAlter,\r\n    keywordCommit,\r\n    keywordAdd,\r\n    keywordDelete,\r\n    keywordSelect,\r\n    keywordInsert,\r\n    keywordInto,\r\n    keywordValues,\r\n    keywordUpdate,\r\n    keywordSet,\r\n    keywordNo,\r\n    keywordUse,\r\n    keywordCreate,\r\n    keywordReferences,\r\n    keywordPrimary,\r\n    keywordForeign,\r\n    keywordTable,\r\n    keywordTables,\r\n    keywordColumn,\r\n    keywordDrop,\r\n    keywordUnique,\r\n    keywordKey,\r\n    keywordIndex,\r\n    keywordConstraint,\r\n    keywordModify,\r\n    keywordCascade,\r\n    keywordRestrict,\r\n    keywordAction,\r\n    keywordAutoincrement,\r\n    keywordFrom,\r\n    keywordWhere,\r\n    keywordGroup,\r\n    keywordBy,\r\n    keywordHaving,\r\n    keywordOrder,\r\n    keywordAscending,\r\n    keywordDescending,\r\n    keywordNulls,\r\n    keywordFirst,\r\n    keywordLast,\r\n    keywordIs,\r\n    keywordNull,\r\n    keywordDatabase,\r\n\r\n    keywordOr,\r\n    keywordAnd,\r\n    keywordNot,\r\n\r\n    keywordJoin,\r\n    keywordNatural,\r\n    keywordLeft,\r\n    keywordCross,\r\n    keywordInner,\r\n    keywordOuter,\r\n    keywordOn,\r\n    keywordAs,\r\n    keywordLimit,\r\n    keywordOffset,\r\n    keywordIn,\r\n    keywordNotIn,\r\n    keywordLike,\r\n    keywordCollate,\r\n    keywordDefault,\r\n    keywordComment,\r\n    keywordEngine,\r\n    keywordCharset,\r\n    keywordCharacter,\r\n    \r\n    keywordStart,\r\n    keywordTransaction,\r\n    keywordIf,\r\n    keywordExists,\r\n\r\n    keywordLock,\r\n    keywordUnlock,\r\n    keywordWrite,\r\n    keywordRead,\r\n\r\n    // brackets\r\n    leftBracket, // ()\r\n    rightBracket,\r\n    leftSquareBracket, // []\r\n    rightSquareBracket,\r\n    leftCurlyBracket, // {}\r\n    rightCurlyBracket,\r\n    leftRightSquareBracket, // []\r\n    \r\n    // binary operators\r\n    dot, //.\r\n    modulo,\r\n    minus, plus, multiplication, division,\r\n    singleQuote, doubleQuote, // ', \"\r\n    identifierQuote,\r\n    lower, greater, lowerOrEqual, greaterOrEqual, \r\n    concatenation,    \r\n    equal,\r\n    notEqual,\r\n\r\n    // semicolon\r\n    semicolon, // ;\r\n\r\n    colon, // :\r\n\r\n    // comma\r\n    comma, // ,\r\n\r\n    // backslash\r\n    backslash,\r\n\r\n    // |\r\n    pipe,\r\n\r\n    // @\r\n    at,\r\n\r\n    // #\r\n    hash,\r\n\r\n    // whitespace\r\n    space,\r\n\r\n    tab,\r\n\r\n    // newline\r\n    newline,\r\n\r\n    // line feed\r\n    linefeed,\r\n\r\n    // only lexer-internal\r\n    identifierChar,  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    comment,\r\n\r\n    endofSourcecode, // will be generated after sourcecode end\r\n    \r\n    // Program statement types:\r\n    \r\n    // additional AST node types\r\n    constantNode,\r\n    callMethod,\r\n    unaryOp,\r\n    binaryOp,\r\n    table,\r\n    subquery,\r\n    list,\r\n    column,\r\n    columnDef,\r\n    allColumns, // *\r\n    isNull,\r\n    isNot, // used by lexer to lex \"is not null\" into one token\r\n    isNotNull,\r\n    omittedeStatement\r\n}\r\n\r\nexport var TokenTypeReadable: {[tt: number]: string} = {\r\n    [TokenType.identifier]: \"ein Bezeichner\",\r\n    // constants\r\n    [TokenType.integerConstant]: \"eine Integer-Konstante\",\r\n    [TokenType.floatingPointConstant]: \"eine Fließkomma-Konstante\",\r\n    [TokenType.booleanConstant]: \"eine boolesche Konstante\",\r\n    [TokenType.stringConstant]: \"eine Zeichenketten-Konstante\",\r\n    [TokenType.charConstant]: \"eine char-Konstante\",\r\n    [TokenType.true]: \"true\",\r\n    [TokenType.false]: \"false\",\r\n    // keywords\r\n    [TokenType.keywordRename]: \"rename\",\r\n    [TokenType.keywordTo]: \"to\",\r\n    [TokenType.keywordAlter]: \"alter\",\r\n    [TokenType.keywordCommit]: \"commit\",\r\n    [TokenType.keywordAdd]: \"add\",\r\n    [TokenType.keywordDelete]: \"delete\",\r\n    [TokenType.keywordSelect]: \"select\",\r\n    [TokenType.keywordInsert]: \"insert\",\r\n    [TokenType.keywordInto]: \"into\",\r\n    [TokenType.keywordValues]: \"values\",\r\n    [TokenType.keywordUpdate]: \"update\",\r\n    [TokenType.keywordSet]: \"set\",\r\n    [TokenType.keywordNo]: \"no\",\r\n    [TokenType.keywordUse]: \"use\",\r\n    [TokenType.keywordCreate]: \"create\",\r\n    [TokenType.keywordReferences]: \"references\",\r\n    [TokenType.keywordPrimary]: \"primary\",\r\n    [TokenType.keywordForeign]: \"foreign\",\r\n    [TokenType.keywordTable]: \"table\",\r\n    [TokenType.keywordTables]: \"tables\",\r\n    [TokenType.keywordColumn]: \"column\",\r\n    [TokenType.keywordDrop]: \"drop\",\r\n    [TokenType.keywordUnique]: \"unique\",\r\n    [TokenType.keywordKey]: \"key\",\r\n    [TokenType.keywordIndex]: \"index\",\r\n    [TokenType.keywordConstraint]: \"constraint\",\r\n    [TokenType.keywordModify]: \"modify\",\r\n    [TokenType.keywordCascade]: \"cascade\",\r\n    [TokenType.keywordRestrict]: \"restrict\",\r\n    [TokenType.keywordAction]: \"action\",\r\n    [TokenType.keywordAutoincrement]: \"autoincrement\",\r\n    [TokenType.keywordFrom]: \"from\",\r\n    [TokenType.keywordWhere]: \"where\",\r\n    [TokenType.keywordGroup]: \"group\",\r\n    [TokenType.keywordBy]: \"by\",\r\n    [TokenType.keywordHaving]: \"having\",\r\n    [TokenType.keywordOrder]: \"order\",\r\n    [TokenType.keywordAscending]: \"ascending\",\r\n    [TokenType.keywordDescending]: \"descending\",\r\n    [TokenType.keywordNulls]: \"nulls\",\r\n    [TokenType.keywordFirst]: \"first\",\r\n    [TokenType.keywordLast]: \"last\",\r\n    [TokenType.keywordIs]: \"is\",\r\n    [TokenType.keywordNull]: \"null\",\r\n    [TokenType.keywordDatabase]: \"database\",\r\n\r\n\r\n    [TokenType.keywordAnd]: \"and\",\r\n    [TokenType.keywordOr]: \"or\",\r\n    [TokenType.keywordNot]: \"not\",\r\n\r\n    [TokenType.keywordJoin]: \"join\",\r\n    [TokenType.keywordNatural]: \"natural\",\r\n    [TokenType.keywordLeft]: \"left\",\r\n    [TokenType.keywordCross]: \"cross\",\r\n    [TokenType.keywordInner]: \"inner\",\r\n    [TokenType.keywordOuter]: \"outer\",\r\n    [TokenType.keywordOn]: \"on\",\r\n    [TokenType.keywordAs]: \"as\",\r\n    [TokenType.keywordLimit]: \"limit\",\r\n    [TokenType.keywordOffset]: \"offset\",\r\n    [TokenType.keywordIn]: \"in\",\r\n    [TokenType.keywordNotIn]: \"not in\",\r\n    [TokenType.keywordLike]: \"like\",\r\n    [TokenType.keywordCollate]: \"collate\",\r\n    [TokenType.keywordDefault]: \"default\",\r\n    [TokenType.keywordComment]: \"comment\",\r\n    [TokenType.keywordEngine]: \"engine\",\r\n    [TokenType.keywordCharset]: \"charset\",\r\n    [TokenType.keywordCharacter]: \"character\",\r\n    [TokenType.keywordStart]: \"start\",\r\n    [TokenType.keywordTransaction]: \"transaction\",\r\n    [TokenType.keywordIf]: \"if\",\r\n    [TokenType.keywordExists]: \"exists\",\r\n    [TokenType.keywordLock]: \"lock\",\r\n    [TokenType.keywordUnlock]: \"unlock\",\r\n    [TokenType.keywordWrite]: \"write\",\r\n    [TokenType.keywordRead]: \"read\",\r\n\r\n    // brackets\r\n    [TokenType.leftBracket]: \"(\", // ()\r\n    [TokenType.rightBracket]: \")\",\r\n    [TokenType.leftSquareBracket]: \"[\", // []\r\n    [TokenType.rightSquareBracket]: \"]\",\r\n    [TokenType.leftCurlyBracket]: \"{\", // {}\r\n    [TokenType.rightCurlyBracket]: \"}\",\r\n    [TokenType.leftRightSquareBracket]: \"[]\", \r\n    \r\n    // operators\r\n    [TokenType.dot]: \".\", //.\r\n    [TokenType.minus]: \"-\", \r\n    [TokenType.modulo]: \"%\", \r\n    [TokenType.plus]: \"+\", \r\n    [TokenType.multiplication]: \"*\", \r\n    [TokenType.division]: \"/\",\r\n    [TokenType.singleQuote]: \"'\", \r\n    [TokenType.doubleQuote]: \"\\\"\", // ']: \"\", \"\r\n    [TokenType.identifierQuote]: \"`\",\r\n    [TokenType.lower]: \"<\", \r\n    [TokenType.greater]: \">\",\r\n    [TokenType.equal]: \"=\", \r\n    [TokenType.lowerOrEqual]: \"<=\", \r\n    [TokenType.greaterOrEqual]: \">=\", \r\n    [TokenType.concatenation]: \"||\", \r\n    \r\n    // semicolon\r\n    [TokenType.semicolon]: \";\", // ;\r\n    [TokenType.colon]: \":\", // ;\r\n\r\n    // comma\r\n    [TokenType.comma]: \",\", \r\n\r\n    // backslash\r\n    [TokenType.backslash]: \"\\\\\",\r\n\r\n    // at\r\n    [TokenType.at]: \"@\",\r\n\r\n    // hash\r\n    [TokenType.hash]: \"#\",\r\n    \r\n    // pipe\r\n    [TokenType.pipe]: \"|\",\r\n\r\n    // whitespace\r\n    [TokenType.space]: \"ein Leerzeichen\",\r\n    [TokenType.tab]: \"ein Tabulatorzeichen\",\r\n\r\n    // newline\r\n    [TokenType.newline]: \"ein Zeilenumbruch\",\r\n\r\n    // only lexer-internal\r\n    [TokenType.identifierChar]: \"eines der Zeichen a..z, A..Z, _\",  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    [TokenType.comment]: \"ein Kommentar\",\r\n\r\n    [TokenType.endofSourcecode]: \"das Ende des Programmes\"\r\n\r\n}\r\n\r\nexport var specialCharList: {[keyword: string]:TokenType} = {\r\n    '(': TokenType.leftBracket, // ()\r\n    ')': TokenType.rightBracket,\r\n    '[': TokenType.leftSquareBracket, // []\r\n    ']': TokenType.rightSquareBracket,\r\n    '{': TokenType.leftCurlyBracket, // {}\r\n    '}': TokenType.rightCurlyBracket,\r\n    \r\n    // operators\r\n    '.': TokenType.dot, //.\r\n    ',': TokenType.comma, //.\r\n    '-': TokenType.minus,\r\n    '%': TokenType.modulo,\r\n    '+': TokenType.plus, \r\n    '*': TokenType.multiplication, \r\n    '/': TokenType.division,\r\n    '\\\\': TokenType.backslash,\r\n    '@': TokenType.at,\r\n    '#': TokenType.hash,\r\n    '|': TokenType.pipe,\r\n    '\\'': TokenType.singleQuote, \r\n    '\"': TokenType.doubleQuote, // ', \"\r\n    '`': TokenType.identifierQuote, // ', \"\r\n    \"<\": TokenType.lower,\r\n    \">\": TokenType.greater,\r\n    \"=\": TokenType.equal,\r\n    \"<>\": TokenType.notEqual,\r\n    \r\n    ';': TokenType.semicolon, // ;\r\n    ':': TokenType.colon, // ;\r\n\r\n    // whitespace\r\n    ' ': TokenType.space,\r\n    '\\t': TokenType.tab,\r\n\r\n    // newline\r\n    '\\n': TokenType.newline,\r\n    '\\r': TokenType.linefeed\r\n}\r\n\r\nexport var keywordList: {[keyword: string]:TokenType} = {\r\n    \"rename\": TokenType.keywordRename,\r\n    \"to\": TokenType.keywordTo,\r\n    \"alter\": TokenType.keywordAlter,\r\n    \"commit\": TokenType.keywordCommit,\r\n    \"add\": TokenType.keywordAdd,\r\n    \"delete\": TokenType.keywordDelete,\r\n    \"select\": TokenType.keywordSelect,\r\n    \"insert\": TokenType.keywordInsert,\r\n    \"into\": TokenType.keywordInto,\r\n    \"values\": TokenType.keywordValues,\r\n    \"update\": TokenType.keywordUpdate,\r\n    \"set\": TokenType.keywordSet,\r\n    \"no\": TokenType.keywordNo,\r\n    \"use\": TokenType.keywordUse,\r\n    \"create\": TokenType.keywordCreate,\r\n    \"references\": TokenType.keywordReferences,\r\n    \"primary\": TokenType.keywordPrimary,\r\n    \"foreign\": TokenType.keywordForeign,\r\n    \"table\": TokenType.keywordTable,\r\n    \"tables\": TokenType.keywordTables,\r\n    \"column\": TokenType.keywordColumn,\r\n    \"drop\": TokenType.keywordDrop,\r\n    \"unique\": TokenType.keywordUnique,\r\n    \"key\": TokenType.keywordKey,\r\n    \"index\": TokenType.keywordIndex,\r\n    \"constraint\": TokenType.keywordConstraint,\r\n    \"modify\": TokenType.keywordModify,\r\n    \"cascade\": TokenType.keywordCascade,\r\n    \"restrict\": TokenType.keywordRestrict,\r\n    \"action\": TokenType.keywordAction,\r\n    \"autoincrement\": TokenType.keywordAutoincrement,\r\n    \"auto_increment\": TokenType.keywordAutoincrement,\r\n    \"from\": TokenType.keywordFrom,\r\n    \"where\": TokenType.keywordWhere,\r\n    \"true\": TokenType.true,\r\n    \"false\": TokenType.false,\r\n    \"group\": TokenType.keywordGroup,\r\n    \"by\": TokenType.keywordBy,\r\n    \"having\": TokenType.keywordHaving,\r\n    \"order\": TokenType.keywordOrder,\r\n    \"asc\": TokenType.keywordAscending,\r\n    \"desc\": TokenType.keywordDescending,\r\n    \"nulls\": TokenType.keywordNulls,\r\n    \"first\": TokenType.keywordFirst,\r\n    \"last\": TokenType.keywordLast,\r\n    \"is\": TokenType.keywordIs,\r\n    \"null\": TokenType.keywordNull,\r\n    \"database\": TokenType.keywordDatabase,\r\n\r\n    \"or\": TokenType.keywordOr,\r\n    \"and\": TokenType.keywordAnd,\r\n    \"not\": TokenType.keywordNot,\r\n\r\n    \"join\": TokenType.keywordJoin,\r\n    \"natural\": TokenType.keywordNatural,\r\n    \"left\": TokenType.keywordLeft,\r\n    \"cross\": TokenType.keywordCross,\r\n    \"inner\": TokenType.keywordInner,\r\n    \"outer\": TokenType.keywordOuter,\r\n    \"on\": TokenType.keywordOn,\r\n    \"as\": TokenType.keywordAs,\r\n    \"limit\": TokenType.keywordLimit,\r\n    \"offset\": TokenType.keywordOffset,\r\n    \"in\": TokenType.keywordIn,\r\n    \"not in\": TokenType.keywordNotIn,\r\n    \"like\": TokenType.keywordLike,\r\n    \"collate\": TokenType.keywordCollate,\r\n    \"default\": TokenType.keywordDefault,\r\n    \"comment\": TokenType.keywordComment,\r\n    \"engine\": TokenType.keywordEngine,\r\n    \"charset\": TokenType.keywordCharset,\r\n    \"character\": TokenType.keywordCharacter,\r\n    \"start\": TokenType.keywordStart,\r\n    \"transaction\": TokenType.keywordTransaction,\r\n    \"if\": TokenType.keywordIf,\r\n    \"exists\": TokenType.keywordExists,\r\n    \"lock\": TokenType.keywordLock,\r\n    \"unlock\": TokenType.keywordUnlock,\r\n    \"write\": TokenType.keywordWrite,\r\n    \"read\": TokenType.keywordRead\r\n\r\n\r\n};\r\n\r\nexport var EscapeSequenceList: {[keyword: string]:string} = {\r\n    \"n\": \"\\n\",\r\n    \"r\": \"\\r\",\r\n    \"t\": \"\\t\",\r\n    \"\\\"\": \"\\\"\",\r\n    \"'\": \"'\",\r\n    \"\\\\\": \"\\\\\"\r\n}\r\n\r\nexport type TextPosition = {\r\n    line: number,\r\n    column: number, \r\n    length: number\r\n}\r\n\r\nexport type TextPositionWithoutLength = {\r\n    line: number,\r\n    column: number\r\n}\r\n\r\nexport type Token = {\r\n    tt: TokenType,\r\n    value: string|number|boolean,\r\n    position: TextPosition,\r\n    commentBefore?: Token,\r\n    isDoubleQuotedIdentifier?: boolean\r\n}\r\n\r\nexport type TokenList = Token[];\r\n\r\nfunction tokenToString(t: Token){\r\n    return \"<div><span style='font-weight: bold'>\" + TokenType[t.tt] + \"</span>\" +\r\n            \"<span style='color: blue'> &nbsp;'\" + t.value + \"'</span> (l&nbsp;\" + t.position.line + \", c&nbsp;\" + t.position.column + \")</div>\";\r\n}\r\n \r\nexport function tokenListToString(tl: TokenList):string{\r\n    let s = \"\";\r\n    for(let t of tl){\r\n        s += tokenToString(t) + \"\\n\";\r\n    }\r\n    return s;\r\n}","import { TokenList, specialCharList, TokenType, Token, EscapeSequenceList, keywordList, TextPosition, TokenTypeReadable } from \"./Token.js\";\r\n\r\nenum LexerState {\r\n    number, identifier, stringConstant, characterConstant, multilineComment, EndoflineComment\r\n}\r\n\r\nvar endChar = \"►\"; // \\u10000\r\n\r\nexport type QuickFix = {\r\n    title: string,\r\n    editsProvider: (uri: monaco.Uri) => monaco.languages.WorkspaceTextEdit[]\r\n}\r\n\r\nexport type ErrorLevel = \"info\" | \"error\" | \"warning\";\r\n\r\nexport type Error = {\r\n    position: TextPosition,\r\n    text: string,\r\n    quickFix?: QuickFix,\r\n    level: ErrorLevel\r\n}\r\n\r\nexport class Lexer {\r\n\r\n    tokenList: TokenList;\r\n    nonSpaceLastTokenType: TokenType;\r\n    nonSpaceLastToken: Token;\r\n\r\n    errorList: Error[];\r\n    pos: number;\r\n    line: number;\r\n    column: number;\r\n\r\n    currentChar: string;\r\n    nextChar: string;\r\n\r\n    input: string;\r\n\r\n    spaceTokens: TokenType[] = [\r\n        TokenType.space, TokenType.tab, TokenType.newline\r\n    ];\r\n\r\n    bracketStack: TokenType[];\r\n    bracketError: string;\r\n    correspondingBracket: { [key: number]: TokenType } = {};\r\n\r\n    tokenTypesToMerge: { first: TokenType, second: TokenType, merged: TokenType }[] = [\r\n        { first: TokenType.keywordNotIn, second: TokenType.keywordIn, merged: TokenType.keywordNotIn },\r\n        { first: TokenType.keywordIs, second: TokenType.keywordNot, merged: TokenType.isNot },\r\n        { first: TokenType.isNot, second: TokenType.keywordNull, merged: TokenType.isNotNull },\r\n        { first: TokenType.keywordIs, second: TokenType.keywordNull, merged: TokenType.isNull },\r\n    ]\r\n\r\n    constructor() {\r\n        this.correspondingBracket[TokenType.leftBracket] = TokenType.rightBracket;\r\n        this.correspondingBracket[TokenType.leftCurlyBracket] = TokenType.rightCurlyBracket;\r\n        this.correspondingBracket[TokenType.leftSquareBracket] = TokenType.rightSquareBracket;\r\n        this.correspondingBracket[TokenType.rightBracket] = TokenType.leftBracket;\r\n        this.correspondingBracket[TokenType.rightCurlyBracket] = TokenType.leftCurlyBracket;\r\n        this.correspondingBracket[TokenType.rightSquareBracket] = TokenType.leftSquareBracket;\r\n    }\r\n\r\n    lex(input: string): { tokens: TokenList, errors: Error[], bracketError: string } {\r\n\r\n        this.input = input.replace(\"\\u00a0\", \" \");\r\n        this.tokenList = [];\r\n        this.errorList = [];\r\n        this.bracketError = null;\r\n        this.bracketStack = [];\r\n        this.pos = 0;\r\n        this.line = 1;\r\n        this.column = 1;\r\n        this.nonSpaceLastTokenType = null;\r\n        this.nonSpaceLastToken = null;\r\n\r\n\r\n        if (input.length == 0) {\r\n            return { tokens: this.tokenList, errors: this.errorList, bracketError: null };\r\n        }\r\n\r\n        this.currentChar = input.charAt(0);\r\n\r\n        this.nextChar = input.length > 1 ? input.charAt(1) : endChar;\r\n\r\n\r\n        while (this.currentChar != endChar) {\r\n            this.mainState();\r\n        }\r\n\r\n        if (this.bracketStack.length > 0) {\r\n            let bracketOpen = this.bracketStack.pop();\r\n            let bracketClosed = this.correspondingBracket[bracketOpen];\r\n\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[bracketClosed]);\r\n        }\r\n\r\n        return {\r\n            tokens: this.tokenList,\r\n            errors: this.errorList,\r\n            bracketError: this.bracketError\r\n        };\r\n\r\n    }\r\n\r\n    checkClosingBracket(tt: TokenType) {\r\n        if (this.bracketStack.length == 0) {\r\n            let bracketOpen = this.correspondingBracket[tt];\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[tt]);\r\n            return;\r\n        }\r\n        let openBracket = this.bracketStack.pop();\r\n        let correspondingBracket = this.correspondingBracket[openBracket];\r\n        if (tt != correspondingBracket) {\r\n            this.setBracketError(TokenTypeReadable[openBracket] + \" \" + TokenTypeReadable[correspondingBracket]);\r\n        }\r\n    }\r\n\r\n    setBracketError(error: string) {\r\n        if (this.bracketError == null) this.bracketError = error;\r\n    }\r\n\r\n    next() {\r\n        this.pos++;\r\n        this.currentChar = this.nextChar;\r\n        if (this.pos + 1 < this.input.length) {\r\n            this.nextChar = this.input.charAt(this.pos + 1);\r\n        } else {\r\n            this.nextChar = endChar;\r\n        }\r\n        this.column++; // column of current char\r\n    }\r\n\r\n\r\n\r\n    mainState() {\r\n\r\n        let char = this.currentChar;\r\n\r\n        let specialCharToken = specialCharList[char];\r\n\r\n        if (specialCharToken != null) {\r\n            switch (specialCharToken) {\r\n                case TokenType.leftSquareBracket:\r\n                    if (this.nextChar == \"]\") {\r\n                        this.pushToken(TokenType.leftRightSquareBracket, \"[]\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.leftSquareBracket, \"[\");\r\n                        this.bracketStack.push(specialCharToken);\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.division:\r\n                    if (this.nextChar == '*') {\r\n                        this.lexMultilineComment();\r\n                        return;\r\n                    }\r\n                    this.pushToken(TokenType.division, '/');\r\n                    this.next();\r\n                    return;\r\n                case TokenType.pipe:\r\n                    if (this.nextChar == \"|\") {\r\n                        this.pushToken(TokenType.concatenation, '||');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.pipe, '|');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.lower:\r\n                    if (this.nextChar == \">\") {\r\n                        this.pushToken(TokenType.notEqual, '<>');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.lower, '<');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.rightSquareBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.minus:\r\n                    if (this.isDigit(this.nextChar, 10) && !\r\n                        ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.rightBracket].indexOf(this.nonSpaceLastTokenType) >= 0)\r\n                    ) {\r\n                        this.lexNumber();\r\n                        return;\r\n                    } else if (this.nextChar == '-') {\r\n                        this.lexEndofLineComment(\"--\");\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.minus, '-');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.hash:\r\n                    if(this.nonSpaceLastToken == null || this.nonSpaceLastToken.position.line < this.line){\r\n                        this.lexEndofLineComment('#');\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.hash, \"#\");\r\n                        this.next();\r\n                    }\r\n                    break;\r\n                case TokenType.singleQuote:\r\n                    this.lexStringConstant(\"'\");\r\n                    return;\r\n                case TokenType.doubleQuote:\r\n                    this.lexStringConstant('\"');\r\n                    return;\r\n                case TokenType.newline:\r\n                    this.pushToken(TokenType.newline, '\\n');\r\n                    this.line++;\r\n                    this.column = 0;\r\n                    this.next();\r\n                    return;\r\n                case TokenType.space:\r\n                case TokenType.tab:\r\n                    this.lexSpace();\r\n                    return;\r\n                case TokenType.linefeed:\r\n                    this.next();\r\n                    return;\r\n                case TokenType.at:\r\n                    this.lexAnnotation();\r\n                    return;\r\n                case TokenType.identifierQuote:\r\n                    this.lexQuotedIdentifier();\r\n                    return;\r\n                \r\n            }\r\n\r\n            this.pushToken(specialCharToken, char);\r\n            this.next();\r\n            return;\r\n\r\n        }\r\n\r\n        // no special char. Number?\r\n\r\n        if (this.isDigit(char, 10)) {\r\n            this.lexNumber();\r\n            return;\r\n        }\r\n\r\n        this.lexIdentifierOrKeyword();\r\n\r\n    }\r\n\r\n\r\n    lexQuotedIdentifier() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let s: string = \"\";\r\n        this.next();\r\n        while(this.currentChar != '`' && this.currentChar != endChar){\r\n            s += this.currentChar;\r\n            this.next();\r\n        }\r\n        if(this.currentChar == endChar){\r\n            this.pushError(\"Innerhalb eines in `` eingeschlossenen Bezeichners wurde das Ende der Datei erreicht.\", s.length + 1, \"error\", line, column);\r\n        } else {\r\n            this.next(); // skip `\r\n            this.pushToken(TokenType.identifier, s, line, column);\r\n        }\r\n    }\r\n\r\n    pushToken(tt: TokenType, text: string | number | boolean, line: number = this.line, column: number = this.column, length: number = (\"\" + text).length) {\r\n        let t: Token = {\r\n            tt: tt,\r\n            value: text,\r\n            position: {\r\n                column: column,\r\n                line: line,\r\n                length: length\r\n            }\r\n        }\r\n\r\n        for (let tripel of this.tokenTypesToMerge) {\r\n            if (tt == tripel.second && this.nonSpaceLastTokenType == tripel.first) {\r\n                let newLength = column - this.nonSpaceLastToken.position.column + length;\r\n                this.nonSpaceLastToken.tt = tripel.merged;\r\n                this.nonSpaceLastToken.position = { column: this.nonSpaceLastToken.position.column, line: line, length: newLength };\r\n                this.nonSpaceLastToken.value = this.nonSpaceLastToken.value + \" \" + text;\r\n\r\n                this.nonSpaceLastTokenType = tripel.merged;\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (!(this.spaceTokens.indexOf(tt) >= 0)) {\r\n            this.nonSpaceLastTokenType = tt;\r\n            this.nonSpaceLastToken = t;\r\n        }\r\n\r\n        this.tokenList.push(t);\r\n    }\r\n\r\n    pushError(text: string, length: number, errorLevel: ErrorLevel = \"error\", line: number = this.line, column: number = this.column) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: {\r\n                line: line,\r\n                column: column,\r\n                length: length\r\n            },\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n\r\n\r\n    isDigit(a: string, base: number) {\r\n        var charCode = a.charCodeAt(0);\r\n\r\n        if (base == 10) return (charCode >= 48 && charCode <= 57); // 0 - 9\r\n        if (base == 2) return (charCode >= 48 && charCode <= 49); // 0, 1\r\n        if (base == 8) return (charCode >= 48 && charCode <= 55); // 0 - 7\r\n        if (base == 16) return (charCode >= 48 && charCode <= 57) || (charCode >= 97 && charCode <= 102) ||\r\n            (charCode >= 65 && charCode <= 70); // 0 - 9 || a - f || A - F\r\n    }\r\n\r\n    lexSpace() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n\r\n        let posStart = this.pos;\r\n        while (this.currentChar == \" \" || this.currentChar == \"\\t\") {\r\n            this.next();\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n        this.pushToken(TokenType.space, this.input.substring(posStart, posEnd), line, column);\r\n        return;\r\n\r\n    }\r\n\r\n    lexCharacterConstant() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n        this.next();\r\n        let char = this.currentChar;\r\n        if (char == \"\\\\\") {\r\n            let escapeChar = EscapeSequenceList[this.nextChar];\r\n            if (escapeChar == null) {\r\n                this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                if (this.nextChar != \"'\") {\r\n                    char = this.nextChar;\r\n                    this.next();\r\n                }\r\n            } else {\r\n                char = escapeChar;\r\n                this.next();\r\n            }\r\n        }\r\n        this.next();\r\n        if (this.currentChar != \"'\") {\r\n            this.pushError(\"Das Ende der char-Konstante wird erwartet (').\", 1);\r\n        } else {\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.charConstant, char, line, column);\r\n\r\n    }\r\n\r\n    lexStringConstant(beginChar: string) {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let text = \"\";\r\n\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\\\\") {\r\n                let escapeChar = EscapeSequenceList[this.nextChar];\r\n                if (escapeChar == null) {\r\n                    this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                } else {\r\n                    char = escapeChar;\r\n                    this.next();\r\n                }\r\n            } else if (char == beginChar) {\r\n                this.next();\r\n                break;\r\n            } else if (char == \"\\n\" || char == endChar) {\r\n                this.pushError('Innerhalb einer String-Konstante wurde das Zeilenende erreicht.', text.length + 1, \"error\", line, column);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        if (beginChar == \"'\") {\r\n            this.pushToken(TokenType.stringConstant, text, line, column, text.length + 2);\r\n        } else {\r\n            this.pushToken(TokenType.identifier, text, line, column, text.length + 2);\r\n            this.tokenList[this.tokenList.length - 1].isDoubleQuotedIdentifier = true;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    lexMultilineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let lastCharWasNewline: boolean = false;\r\n\r\n        let text = \"/*\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"*\" && this.nextChar == \"/\") {\r\n                this.next();\r\n                this.next();\r\n                text += \"*/\";\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                this.pushError(\"Innerhalb eines Mehrzeilenkommentars (/*... */) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            if (char == \"\\n\") {\r\n                this.line++;\r\n                this.column = 0;\r\n                lastCharWasNewline = true;\r\n                text += char;\r\n            } else if (!(lastCharWasNewline && char == \" \")) {\r\n                text += char;\r\n                lastCharWasNewline = false;\r\n            }\r\n\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n    lexEndofLineComment(commentStart: string) {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let text = commentStart;\r\n        for(let i = 0; i < commentStart.length; i++){\r\n            this.next();\r\n        }\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\n\") {\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                // this.pushError(\"Innerhalb eines Einzeilenkommentars (//... ) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n\r\n    lexNumber() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let sign: number = 1;\r\n        if (this.currentChar == '-') {\r\n            sign = -1;\r\n            this.next();\r\n        }\r\n\r\n        let posStart = this.pos;\r\n\r\n        let firstChar = this.currentChar;\r\n\r\n        this.next();\r\n\r\n        let radix: number = 10;\r\n\r\n        if (firstChar == '0' && (['b', 'x', '0', '1', '2', '3', '4', '5', '6', '7'].indexOf(this.currentChar) >= 0)) {\r\n            if (this.currentChar == 'x') {\r\n                radix = 16;\r\n                this.next();\r\n            } else if (this.currentChar == 'b') {\r\n                radix = 2;\r\n                this.next();\r\n            } else radix = 8;\r\n            posStart = this.pos;\r\n        }\r\n\r\n        while (this.isDigit(this.currentChar, radix)) {\r\n            this.next();\r\n        }\r\n\r\n        let tt = TokenType.integerConstant;\r\n\r\n        if (this.currentChar == \".\") {\r\n            tt = TokenType.floatingPointConstant;\r\n\r\n            this.next();\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n\r\n        }\r\n\r\n        let base = this.input.substring(posStart, this.pos);\r\n\r\n        posStart = this.pos;\r\n        let exponent: number = 0;\r\n\r\n        let hasExponential: boolean = false;\r\n        //@ts-ignore\r\n        if (this.currentChar == \"e\") {\r\n            hasExponential = true;\r\n            this.next();\r\n            let posExponentStart: number = this.pos;\r\n\r\n            //@ts-ignore\r\n            if (this.currentChar == '-') {\r\n                this.next();\r\n            }\r\n\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n            let exponentString = this.input.substring(posExponentStart, this.pos);\r\n            exponent = Number.parseInt(exponentString);\r\n        }\r\n\r\n        if (this.currentChar == 'd' || this.currentChar == 'f') {\r\n            tt == TokenType.floatingPointConstant;\r\n            this.next();\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n        }\r\n\r\n        let value: number = (tt == TokenType.integerConstant) ? Number.parseInt(base, radix) : Number.parseFloat(base);\r\n        value *= sign;\r\n        if (exponent != 0) value *= Math.pow(10, exponent);\r\n\r\n        this.pushToken(tt, value, line, column);\r\n\r\n    }\r\n\r\n    lexAnnotation() {\r\n        let line = this.line;\r\n        let column = this.column - 1;\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n        this.next(); // skip@\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n        this.pushToken(TokenType.at, text, line, column, text.length + 1);\r\n    }\r\n\r\n    lexIdentifierOrKeyword() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n\r\n        let tt = keywordList[text.toLowerCase()];\r\n        if (tt != null && typeof tt == \"number\") {\r\n\r\n            switch (tt) {\r\n                case TokenType.true:\r\n                    this.pushToken(TokenType.booleanConstant, true, line, column);\r\n                    break;\r\n                case TokenType.false:\r\n                    this.pushToken(TokenType.booleanConstant, false, line, column);\r\n                    break;\r\n                default:\r\n                    this.pushToken(tt, text, line, column);\r\n                    break;\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        this.pushToken(TokenType.identifier, text, line, column);\r\n\r\n    }\r\n\r\n    isSpace(char: string): boolean {\r\n        return char == \" \" || char == \"\\n\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport function errorListToString(errorList: Error[]): string {\r\n    let s = \"\";\r\n\r\n    for (let error of errorList) {\r\n\r\n        s += \"Z \" + error.position.line + \", S \" + error.position.column + \": \";\r\n        s += error.text + \"<br>\";\r\n\r\n    }\r\n\r\n    return s;\r\n}","import { Lexer } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Token, TokenList, TokenType, tokenListToString } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class Formatter implements monaco.languages.DocumentFormattingEditProvider,\r\n    monaco.languages.OnTypeFormattingEditProvider {\r\n\r\n    autoFormatTriggerCharacters: string[] = ['\\n'];\r\n\r\n    displayName?: string = \"Java-Autoformat\";\r\n\r\n\r\n    constructor(\r\n        // private main: Main\r\n    ) {\r\n\r\n    }\r\n\r\n    init() {\r\n        monaco.languages.registerDocumentFormattingEditProvider('myJava', this);\r\n        monaco.languages.registerOnTypeFormattingEditProvider('myJava', this);\r\n    }\r\n\r\n    provideOnTypeFormattingEdits(model: monaco.editor.ITextModel, position: monaco.Position, ch: string, options: monaco.languages.FormattingOptions, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n    deleteOverlappingRanges(edits: monaco.languages.TextEdit[]) {\r\n        for (let i = 0; i < edits.length - 1; i++) {\r\n            let e = edits[i];\r\n            let e1 = edits[i + 1];\r\n            if (e.range.endLineNumber < e1.range.startLineNumber) continue;\r\n            if (e.range.endLineNumber == e1.range.startLineNumber) {\r\n                if (e.range.endColumn >= e1.range.startColumn) {\r\n                    edits.splice(i + 1, 1);\r\n                } else {\r\n                    if (e.range.endColumn == 0 && e.text.length > 0 && e1.range.startColumn == 1 && e1.range.endColumn > e1.range.startColumn && e1.text == \"\") {\r\n                        let delta = e.text.length - (e1.range.endColumn - e1.range.startColumn);\r\n                        if (delta > 0) { \r\n                            e.text = e.text.substr(0, delta);\r\n                            edits.splice(i+1, 1);\r\n                        }\r\n                        else if (delta < 0)\r\n                        { \r\n                            //@ts-ignore\r\n                            e1.range.endColumn = e1.range.startColumn - delta;\r\n                            edits.splice(i, 1);\r\n                            i--;\r\n\r\n                         }\r\n                        else {\r\n                            edits.splice(i, 2);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    provideDocumentFormattingEdits(model: monaco.editor.ITextModel,\r\n        options: monaco.languages.FormattingOptions,\r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n\r\n    format(model: monaco.editor.ITextModel): monaco.languages.TextEdit[] {\r\n\r\n        let edits: monaco.languages.TextEdit[] = [];\r\n\r\n        // if (this.main.currentWorkspace == null || this.main.currentWorkspace.currentlyOpenModule == null) {\r\n        //     return [];\r\n        // }\r\n\r\n        // let text = this.main.monaco_editor.getValue({ preserveBOM: false, lineEnding: \"\\n\" });\r\n\r\n        let text = model.getValue(monaco.editor.EndOfLinePreference.LF);\r\n\r\n        let tokenlist = new Lexer().lex(text).tokens;\r\n\r\n        // let tokenlist = this.main.currentWorkspace.currentlyOpenModule.tokenList;\r\n\r\n        if (tokenlist == null) return [];\r\n\r\n        // TODO:\r\n        // { at the end of line, with one space before; followed only by spaces and \\n\r\n        // indent lines according to { and }\r\n        // Beware: int i[] = { ... }\r\n        // exactly one space before/after binary operators\r\n        // no space after ( and no space before )\r\n        // (   ) -> ()\r\n        // (  ()) -> (())\r\n        // (()  ) -> (())\r\n\r\n        let lastNonSpaceToken: Token = null;\r\n        let indentLevel = 0;\r\n        let tabSize = 3;\r\n        let curlyBracesOpenAtLines: number[] = [];\r\n        let indentLevelAtSwitchStatements: number[] = [];\r\n        let switchHappend: boolean = false;\r\n        let lastTokenWasNewLine: number = 0;\r\n        let roundBracketsOpen: number = 0;\r\n\r\n        for (let i = 0; i < tokenlist.length; i++) {\r\n\r\n            let t = tokenlist[i];\r\n            lastTokenWasNewLine--;\r\n\r\n            switch (t.tt) {\r\n\r\n                case TokenType.leftCurlyBracket:\r\n                    if (switchHappend) {\r\n                        switchHappend = false;\r\n                        indentLevelAtSwitchStatements.push(indentLevel + 2);\r\n                        indentLevel++;\r\n                    }\r\n                    indentLevel++;\r\n                    curlyBracesOpenAtLines.push(t.position.line);\r\n                    if (lastNonSpaceToken != null) {\r\n                        let tt = lastNonSpaceToken.tt;\r\n                        if (tt == TokenType.rightBracket || tt == TokenType.identifier || tt == TokenType.leftRightSquareBracket) {\r\n                            this.replaceBetween(lastNonSpaceToken, t, edits, \" \");\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let token1 = tokenlist[i + 1];\r\n                        if (token1.tt != TokenType.newline && token1.tt != TokenType.space) {\r\n                            this.insertSpaces(edits, token1.position.line, token1.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    if (indentLevelAtSwitchStatements[indentLevelAtSwitchStatements.length - 1] == indentLevel) {\r\n                        indentLevelAtSwitchStatements.pop();\r\n                        indentLevel--;\r\n                        // if(t.position.column >= 3){\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                        // }    \r\n                    }\r\n                    indentLevel--;\r\n                    let openedAtLine = curlyBracesOpenAtLines.pop();\r\n                    if (openedAtLine != null && openedAtLine != t.position.line) {\r\n                        if (lastNonSpaceToken != null && lastNonSpaceToken.position.line == t.position.line) {\r\n                            this.replace(edits, t.position, t.position, \"\\n\" + \" \".repeat(indentLevel * tabSize));\r\n                        }\r\n                    } else {\r\n                        if (i > 0) {\r\n                            let token1 = tokenlist[i - 1];\r\n                            if (token1.tt != TokenType.space && token1.tt != TokenType.newline) {\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    roundBracketsOpen++;\r\n                    if (i < tokenlist.length - 2) {\r\n                        let nextToken1 = tokenlist[i + 1];\r\n                        let nextToken2 = tokenlist[i + 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                            i++;\r\n                            if (nextToken2.tt == TokenType.rightBracket) {\r\n                                i++;\r\n                                roundBracketsOpen--;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt == TokenType.space && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line, lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    roundBracketsOpen--;\r\n                    if (i > 1) {\r\n                        let nextToken1 = tokenlist[i - 1];\r\n                        let nextToken2 = tokenlist[i - 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.newline:\r\n                    lastTokenWasNewLine = 2;\r\n                    if (i < tokenlist.length - 2) {\r\n\r\n                        let lastTokenIsOperator = this.isBinaryOperator(lastNonSpaceToken?.tt);\r\n                        let nextTokenIsOperator = this.isBinaryOperator(this.getNextNonSpaceToken(i, tokenlist).tt);\r\n\r\n                        let beginNextLine = tokenlist[i + 1];\r\n                        let token2 = tokenlist[i + 2];\r\n                        let currentIndentation = 0;\r\n\r\n                        if (beginNextLine.tt == TokenType.newline) {\r\n                            break;\r\n                        }\r\n\r\n                        let delta: number = 0;\r\n                        if (beginNextLine.tt == TokenType.space) {\r\n                            if (token2.tt == TokenType.newline) {\r\n                                break;\r\n                            }\r\n                            currentIndentation = beginNextLine.position.length;\r\n                            i++;\r\n                            if (token2.tt == TokenType.rightCurlyBracket) {\r\n                                delta = -1;\r\n                            }\r\n                        }\r\n\r\n                        if (beginNextLine.tt == TokenType.rightCurlyBracket) {\r\n                            delta = -1;\r\n                            // indentLevel--;\r\n                            // curlyBracesOpenAtLines.pop();\r\n                            // lastNonSpaceToken = beginNextLine;\r\n                            // i++;\r\n                        }\r\n\r\n                        if(nextTokenIsOperator || lastTokenIsOperator) delta = 1;\r\n\r\n                        let il = indentLevel + delta;\r\n                        if(roundBracketsOpen > 0){\r\n                            il++;\r\n                        }\r\n                        if (il < 0) il = 0;\r\n\r\n                        let correctIndentation = il * tabSize;\r\n\r\n                        if (correctIndentation > currentIndentation) {\r\n                            this.insertSpaces(edits, t.position.line + 1, 0, correctIndentation - currentIndentation);\r\n                        } else if (correctIndentation < currentIndentation) {\r\n                            this.deleteSpaces(edits, t.position.line + 1, 0, currentIndentation - correctIndentation);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.space:\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment) {\r\n                            if (i > 0) {\r\n                                let lastToken = tokenlist[i - 1];\r\n                                if (lastToken.tt != TokenType.newline) {\r\n                                    if (t.position.length > 1) {\r\n                                        this.deleteSpaces(edits, t.position.line, t.position.column, t.position.length - 1);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.comma:\r\n                case TokenType.semicolon:\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt != TokenType.newline && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.tt == TokenType.space && lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line,\r\n                                    lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment && nextToken.tt != TokenType.space && nextToken.tt != TokenType.newline) {\r\n                            this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightSquareBracket:\r\n                    if (lastNonSpaceToken != null && lastNonSpaceToken.tt == TokenType.leftSquareBracket) {\r\n                        this.replaceBetween(lastNonSpaceToken, t, edits, \"\");\r\n\r\n                    }\r\n                    break;\r\n\r\n            }\r\n\r\n            // binary operator?\r\n            if (this.isBinaryOperator(t.tt)) {\r\n\r\n                let lowerGeneric = t.tt == TokenType.lower && this.lowerBelongsToGenericExpression(i, tokenlist);\r\n                let greaterGeneric = t.tt == TokenType.greater && this.greaterBelongsToGenericExpression(i, tokenlist);\r\n\r\n                if (lastTokenWasNewLine <= 0 && lastNonSpaceToken != null && [TokenType.leftBracket, TokenType.comma].indexOf(lastNonSpaceToken.tt) < 0) {\r\n\r\n                    if (i > 0) {\r\n                        let tokenBefore = tokenlist[i - 1];\r\n                        let spaces = (lowerGeneric || greaterGeneric) ? 0 : 1;\r\n                        if (tokenBefore.tt == TokenType.space) {\r\n                            if (tokenBefore.position.length != spaces) {\r\n                                this.insertSpaces(edits, tokenBefore.position.line,\r\n                                    tokenBefore.position.column, spaces - tokenBefore.position.length);\r\n                            }\r\n                        } else {\r\n                            if (spaces == 1)\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        let spaces = (lowerGeneric) ? 0 : 1;\r\n                        if (nextToken.tt == TokenType.space) {\r\n                            if (greaterGeneric && i < tokenlist.length - 2 && tokenlist[i + 2].tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (nextToken.position.length != spaces) {\r\n                                this.insertSpaces(edits, nextToken.position.line,\r\n                                    nextToken.position.column, spaces - nextToken.position.length);\r\n                            }\r\n                        } else {\r\n                            if (greaterGeneric && nextToken.tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (spaces == 1) this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            if (t.tt != TokenType.space && t.tt != TokenType.newline) {\r\n                lastNonSpaceToken = t;\r\n            }\r\n\r\n        }\r\n\r\n        this.deleteOverlappingRanges(edits);\r\n\r\n        return edits;\r\n\r\n    }\r\n    getNextNonSpaceToken(currentIndex: number, tokenlist: TokenList):  Token {\r\n\r\n        if(currentIndex == tokenlist.length - 1) return tokenlist[currentIndex];\r\n\r\n        let j = currentIndex + 1;\r\n        while(j < tokenlist.length - 1 && (tokenlist[j].tt == TokenType.space )){\r\n            j++;\r\n        }\r\n        return tokenlist[j];\r\n\r\n    }\r\n\r\n    lowerBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position + 1;\r\n        while (i < tokenlist.length) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.greater) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i++;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    greaterBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position - 1;\r\n        while (i >= 0) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.lower) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i--;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isBinaryOperator(token: TokenType) {\r\n        return token != null && token >= TokenType.modulo && token <= TokenType.equal;\r\n    }\r\n\r\n    private replaceBetween(lastNonSpaceToken: Token, t: Token, edits: monaco.languages.TextEdit[], text: string) {\r\n        let positionFrom = {\r\n            line: lastNonSpaceToken.position.line,\r\n            column: lastNonSpaceToken.position.column + lastNonSpaceToken.position.length\r\n        };\r\n        let positionTo = {\r\n            line: t.position.line,\r\n            column: t.position.column\r\n        };\r\n        if (positionFrom.line != positionTo.line ||\r\n            positionTo.column - positionFrom.column != text.length) {\r\n            this.replace(edits, positionFrom, positionTo, text);\r\n        }\r\n    }\r\n\r\n    deleteSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column + numberOfSpaces + (column == 0 ? 1 : 0),\r\n                endLineNumber: line\r\n            },\r\n            text: \"\"\r\n        });\r\n    }\r\n\r\n    insertSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n\r\n        if (numberOfSpaces < 0) {\r\n            this.deleteSpaces(edits, line, column, -numberOfSpaces);\r\n            return;\r\n        }\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column,\r\n                endLineNumber: line\r\n            },\r\n            text: \" \".repeat(numberOfSpaces)\r\n        });\r\n    }\r\n\r\n    replace(edits: monaco.languages.TextEdit[], positionFrom: { line: number; column: number; }, positionTo: { line: number; column: number; }, text: string) {\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: positionFrom.column,\r\n                startLineNumber: positionFrom.line,\r\n                endColumn: positionTo.column,\r\n                endLineNumber: positionTo.line\r\n            },\r\n            text: text\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\n\r\nexport type Theme = {\r\n    name: string,\r\n    monacoTheme: string,\r\n    cssColors: { [color: string]: string }\r\n}\r\n\r\nexport class ThemeManager {\r\n\r\n    themes: Theme[] = [];\r\n\r\n    constructor() {\r\n        this.initThemes();\r\n    }\r\n\r\n    switchTheme(name: string) {\r\n        for (let theme of this.themes) {\r\n            if (theme.name == name) {\r\n                this.internalSwitchTheme(theme);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    internalSwitchTheme(theme: Theme) {\r\n        monaco.editor.setTheme(theme.monacoTheme);\r\n\r\n        let root = document.documentElement;\r\n        for (const key of Object.keys(theme.cssColors)) {\r\n            const value = theme.cssColors[key]\r\n\r\n            root.style.setProperty(key, value);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    initThemes() {\r\n\r\n        this.themes.push({\r\n            name: \"dark\",\r\n            monacoTheme: \"myCustomThemeDark\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"#1e1e1e\",\r\n                \"--backgroundLight\": \"#252526\",\r\n                \"--backgroundHeading\": \"#37373d\",\r\n                \"--backgroundSelected\": \"#2a2d2e\",\r\n                \"--fontColorNormal\": \"#c2cccc\",\r\n                \"--fontColorLight\": \"#e7e7e7\",\r\n                \"--slider\": \"#414141\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#1e1e1e\",\r\n                \"--scrollbar-thumb\": \"#3e3e3e\",\r\n                \"--scrollbar-thumb-hover\": \"#5e5e5e\",\r\n                \"--scrollbar-thumb-active\": \"#7e7e7e\",\r\n                \"--submenu-hover\": \"#094771\",\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#616162\",\r\n                \"--file-hover\": \"hsla(0, 0%, 38%, 0.125)\",\r\n                \"--file-active\": \"#094771\",\r\n                \"--file-active-hover\": \"rgba(9, 71, 113, 0.827)\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"blue\",\r\n                \"--contextmenu-background\": \"#3c3c3c\",\r\n                \"--contextmenu-color\": \"rgb(212,212,212)\",\r\n                \"--contextmenu-hover-background\": \"#094771\",\r\n                \"--contextmenu-hover-color\": \"#ffffff\",\r\n                \"--error-filename\": \"#2a709e\",\r\n                \"--error-line-ative\": \"#094771\",\r\n                \"--error-line-hover\": \"rgba(96, 96, 96, 0.125)\",\r\n                \"--error-position\": \"#c0802d\",\r\n                \"--linecolumn\": \"#14c714\",\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#2b2b7d2f\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"rgb(85,85,85)\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#383838\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#252526\",\r\n                \"--editorTooltip-border\": \"#454545\",\r\n\r\n                \"--renameInput-color\": \"#ffffff\",\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"white\",\r\n                \"--bottomdiv-tabheading-active\": \"rgb(97,97,255)\",\r\n                \"--noErrorMessage\": \"rgb(37, 211, 37)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"#1e1e1e\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"white\",\r\n                \"--consoleEntryIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"white\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 51, 51)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--deValue\": \"white\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#383838\",\r\n                \"--helper-border-color\": \"#d4d4d4\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#ffffff\",\r\n                \"--runInputColor\": \"#ffffff\",\r\n                \"--runBackgroundColor\": \"rgba(255, 255, 255, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n        let highlightColor = \"#8080ff\";\r\n\r\n        this.themes.push({\r\n            name: \"light\",\r\n            monacoTheme: \"myCustomThemeLight\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"white\",\r\n                \"--backgroundLight\": \"#f3f3f3\",\r\n                \"--backgroundHeading\": \"#dcdcdc\",\r\n                \"--backgroundSelected\": \"#e8e8e8\",\r\n                \"--fontColorNormal\": \"#756161\",\r\n                \"--fontColorLight\": \"#756161\",\r\n                \"--slider\": \"#b0b0b0\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#e3e3e3\",\r\n                \"--scrollbar-thumb\": \"#bababa\",\r\n                \"--scrollbar-thumb-hover\": \"#8e8e8e\",\r\n                \"--scrollbar-thumb-active\": \"#616161\",\r\n                \"--submenu-hover\": highlightColor,\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#cfcfcf\",\r\n                \"--file-hover\": \"#e8e8e8\",\r\n                \"--file-active\": highlightColor,\r\n                \"--file-active-hover\": \"#a0a0ff\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"white\",\r\n                \"--contextmenu-background\": \"white\",\r\n                \"--contextmenu-color\": \"#756161\",\r\n                \"--contextmenu-hover-background\": highlightColor,\r\n                \"--contextmenu-hover-color\": \"#a0a0ff\",\r\n                \"--error-filename\": \"#ff0000\",\r\n                \"--error-line-ative\": \"#ffa0a0\",\r\n                \"--error-line-hover\": \"#ffc0c0\",\r\n                \"--error-position\": \"#804040\",\r\n                \"--linecolumn\": \"#14c714\", // TODO\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#babaec80\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"#c0c0c0\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#e0e0e0\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#e0e0e0\",\r\n                \"--editorTooltip-border\": \"#9d9d9d\",\r\n\r\n                \"--renameInput-color\": \"#000000\",\r\n\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"#424242\",\r\n                \"--bottomdiv-tabheading-active\": \"#424242\",\r\n                \"--noErrorMessage\": \"rgb(17, 180, 17)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"white\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"#0000a0\",\r\n                \"--consoleEntryIdentifier\": \"black\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"#756161\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 21, 21)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"black\",\r\n                \"--deValue\": \"#0000a0\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#f3f3f3\",\r\n                \"--helper-border-color\": \"#606060\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#303030\",\r\n                \"--runInputColor\": \"#000000\",\r\n                \"--runBackgroundColor\": \"rgba(0, 0, 0, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { TokenType } from \"../lexer/Token.js\";\r\n\r\ntype CheckFunction = (columnIdentifier: string, parameterValues: number[]) => string;\r\ntype OutputFunction = (value: any, parameterValues: number[]) => string;\r\n\r\nexport abstract class SQLType {\r\n\r\n    abstract canCastTo(type2: SQLType): boolean;\r\n\r\n    abstract getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType;\r\n\r\n    abstract getUnaryResultType(operator: TokenType): SQLType;\r\n\r\n    abstract getBinaryResult(operator: TokenType, value1: any, value2: any): any;\r\n\r\n    abstract toString(): string;\r\n\r\n    abstract getBaseTypeName(): string;\r\n\r\n}\r\n\r\nexport class SQLBaseType extends SQLType {\r\n    // Map<tokenType, Map<SecondType, ResultType>>\r\n    binaryResultTypes: Map<TokenType, Map<SQLBaseType, SQLBaseType>> = new Map();\r\n\r\n    unaryOperators: TokenType[] = [];\r\n\r\n    static baseTypes: SQLBaseType[] = [];\r\n    static baseTypeMap: Map<string, SQLBaseType> = new Map();\r\n\r\n    public canCastToList: string[];\r\n\r\n    constructor(public name: string, public parameterDescriptions: string[],\r\n        public checkFunction: CheckFunction, public outputFunction: OutputFunction, canCastToList: string[]) {\r\n        super();\r\n        this.canCastToList = canCastToList.slice(0);\r\n        let ownIndex = this.canCastToList.indexOf(name);\r\n        if(ownIndex >= 0) this.canCastToList.splice(ownIndex, 1);\r\n    }\r\n\r\n    static fromConstantType(tt: TokenType): SQLBaseType {\r\n        switch (tt) {\r\n            case TokenType.stringConstant:\r\n                return this.baseTypeMap.get(\"text\");\r\n            case TokenType.integerConstant:\r\n                return this.baseTypeMap.get(\"integer\");\r\n            case TokenType.floatingPointConstant:\r\n                return this.baseTypeMap.get(\"float\");\r\n            case TokenType.charConstant:\r\n                return this.baseTypeMap.get(\"text\");\r\n            case TokenType.booleanConstant:\r\n                return this.baseTypeMap.get(\"boolean\");\r\n            case TokenType.keywordNull:\r\n                return this.baseTypeMap.get(\"null\");\r\n        \r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    getBaseTypeName(): string {\r\n        return this.name;\r\n    }\r\n\r\n    toString(): string {\r\n        return this.name;\r\n    }\r\n\r\n    static getBaseType(name: string) {\r\n        if(name == 'char') name = 'varchar';\r\n        return this.baseTypeMap.get(name.toLocaleLowerCase());\r\n    }\r\n\r\n    static addBaseTypes(baseTypes: SQLBaseType[]) {\r\n        SQLBaseType.baseTypes = SQLBaseType.baseTypes.concat(baseTypes);\r\n        baseTypes.forEach(t => SQLBaseType.baseTypeMap.set(t.name, t));\r\n    }\r\n\r\n    addBinaryOperation(tokenType: TokenType | TokenType[], secondType: SQLBaseType, resultType: SQLBaseType, isCommutative: boolean = true) {\r\n\r\n        if (!Array.isArray(tokenType)) tokenType = [tokenType];\r\n\r\n        tokenType.forEach(t => {\r\n            let map: Map<SQLBaseType, SQLBaseType> = this.binaryResultTypes.get(t);\r\n            if (map == null) {\r\n                map = new Map();\r\n                this.binaryResultTypes.set(t, map);\r\n            }\r\n            map.set(secondType, resultType);\r\n            if (isCommutative && secondType != this) {\r\n                secondType.addBinaryOperation(t, this, resultType, false);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    canCastTo(type2: SQLType): boolean {\r\n\r\n        let bt2: SQLBaseType = type2 instanceof SQLBaseType ? type2 : type2[\"baseType\"];\r\n\r\n        return this.canCastToList.indexOf(bt2.name) >= 0 || this.name == bt2.name;\r\n\r\n    }\r\n\r\n    getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType {\r\n\r\n\r\n        let map = this.binaryResultTypes.get(operator);\r\n        if (map == null) return null;\r\n\r\n        let bt2: SQLBaseType = secondType instanceof SQLBaseType ? secondType : secondType[\"baseType\"];\r\n\r\n        return map.get(bt2);\r\n\r\n    }\r\n\r\n    getUnaryResultType(operator: TokenType): SQLType {\r\n        if([TokenType.isNull, TokenType.isNotNull].indexOf(operator) >= 0) return booleanType;\r\n        if(this.unaryOperators.indexOf(operator)>= 0) return this;\r\n    }\r\n\r\n    getBinaryResult(operator: TokenType, value1: any, value2: any): any {\r\n        switch (operator) {\r\n            case TokenType.concatenation:\r\n                if (value1 != null && value2 != null) return value1 + value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.plus:\r\n                if (value1 != null && value2 != null) return value1 + value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.minus:\r\n                if (value1 != null && value2 != null) return value1 - value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.multiplication:\r\n                if (value1 != null && value2 != null) return value1 * value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.division:\r\n                if (value1 != null && value2 != null) return value1 * value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.keywordAnd:\r\n                if (value1 != null && value2 != null) return value1 * value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.keywordOr:\r\n                if (value1 != null && value2 != null) return Math.max(value1, value2);\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.lower:\r\n                if (value1 != null && value2 != null) return value1 < value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.greater:\r\n                if (value1 != null && value2 != null) return value1 >= value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.lowerOrEqual:\r\n                if (value1 != null && value2 != null) return value1 <= value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.greaterOrEqual:\r\n                if (value1 != null && value2 != null) return value1 >= value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.equal:\r\n                return value1 == value2;\r\n            case TokenType.notEqual:\r\n                return value1 != value2;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nlet tens: number[] = [1, 10, 100, 1000, 100000, 100000, 1000000, 10000000, 100000000, 1000000000];\r\n\r\nexport class SQLDerivedType extends SQLType {\r\n\r\n    name: string;\r\n\r\n    constructor(public baseType: SQLBaseType, public parameterValues: number[]) {\r\n        super();\r\n        let parameters = parameterValues.join(\", \");\r\n        this.name = baseType.name + \"(\" + parameters + \")\";\r\n    }\r\n\r\n    toString(): string {\r\n        return this.name;\r\n    }\r\n\r\n    getBaseTypeName(): string {\r\n        return this.baseType.name;\r\n    }\r\n\r\n\r\n    canCastTo(type2: SQLType): boolean {\r\n\r\n        let bt2: SQLBaseType = type2 instanceof SQLBaseType ? type2 : type2[\"baseType\"];\r\n\r\n        return this.baseType.canCastToList.indexOf(bt2.name) >= 0 || this.baseType.name == bt2.name;\r\n\r\n    }\r\n\r\n    getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType {\r\n\r\n\r\n        let map = this.baseType.binaryResultTypes.get(operator);\r\n        if (map == null) return null;\r\n\r\n        let bt2: SQLBaseType = secondType instanceof SQLBaseType ? secondType : secondType[\"baseType\"];\r\n\r\n        let returnBaseType = map.get(bt2);\r\n\r\n        if (this.baseType == bt2 && this.baseType == returnBaseType && secondType instanceof SQLDerivedType) {\r\n            if (this.baseType.name == \"varchar\" || operator == TokenType.concatenation) {\r\n                return new SQLDerivedType(this.baseType, [this.parameterValues[0] + secondType.parameterValues[0]]);\r\n            }\r\n            if (this.baseType.name == \"decimal\") {\r\n                return new SQLDerivedType(this.baseType, [Math.max(this.parameterValues[0], secondType.parameterValues[0]), Math.max(this.parameterValues[1], secondType.parameterValues[1])]);\r\n            }\r\n        }\r\n\r\n        return map.get(bt2);\r\n\r\n    }\r\n\r\n    getUnaryResultType(operator: TokenType): SQLType {\r\n        return this.baseType.getUnaryResultType(operator);\r\n    }\r\n\r\n    getBinaryResult(operator: TokenType, value1: any, value2: any): any {\r\n        let result = this.baseType.getBinaryResult(operator, value1, value2);\r\n        if (this.name = \"varchar\") return result == null ? null : (\"\" + result).substr(0, this.parameterValues[0]);\r\n        if (this.name == \"decimal\") {\r\n            if (result == null) return null;\r\n            return Math.round(result * tens[this.parameterValues[1]]) / tens[this.parameterValues[1]];\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nlet textTypes = [\"varchar\", \"char\", \"text\" ,\"tinytext\", \"mediumtext\", \"longtext\"];\r\n\r\nvar varcharType = new SQLBaseType(\"varchar\", [\"Maximale Länge\"], (ci, pv) => `check(length(${ci}) <= ${pv[0]})`,\r\n    (v: string, pv) => v.substring(0, pv[0]), textTypes);\r\n    \r\nvar charType = new SQLBaseType(\"char\", [\"Maximale Länge\"], (ci, pv) => `check(length(${ci}) <= ${pv[0]})`,\r\n    (v: string, pv) => v.substring(0, pv[0]), textTypes);\r\n\r\nvar textType = new SQLBaseType(\"text\", [\"Maximale Länge\"], (ci, pv) => \"\", (v: string, pv) => v, textTypes.concat([\"date\", \"datetime\", \"timestamp\"]));\r\nvar tinyTextType = new SQLBaseType(\"tinyText\", [], (ci, pv) => \"\", (v: string, pv) => v, textTypes);\r\nvar mediumTextType = new SQLBaseType(\"mediumText\", [], (ci, pv) => \"\", (v: string, pv) => v, textTypes);\r\nvar longTextType = new SQLBaseType(\"longText\", [], (ci, pv) => \"\", (v: string, pv) => v, textTypes);\r\n\r\nlet floatTypes = [\"decimal\", \"numeric\", \"double\", \"real\", \"float\"];\r\n\r\nvar decimalType = new SQLBaseType(\"decimal\", [\"Gesamtzahl der Stellen\", \"Nachkommastellen\"], (ci, pv) => \"\",\r\n    (v: number, pv) => { let vk = Math.trunc(v); let nk = v - vk; return \"\" + vk + (pv[1] > 0 ? \".\" + Math.round(nk * tens[pv[1]]) : \"\") },\r\n    floatTypes);\r\nvar numericType = new SQLBaseType(\"numeric\", [\"Gesamtzahl der Stellen\", \"Nachkommastellen\"], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\nvar doubleType = new SQLBaseType(\"double\", [\"Gesamtzahl der Stellen\", \"Nachkommastellen\"], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\nvar realType = new SQLBaseType(\"real\", [], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\nvar floatType = new SQLBaseType(\"float\", [], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\n\r\nlet inttypes = [\"int\", \"integer\", \"tinyint\", \"smallint\", \"mediumint\", \"bigint\"];\r\nlet numberTypes = inttypes.concat(floatTypes);\r\n\r\nvar intType = new SQLBaseType(\"int\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar integerType = new SQLBaseType(\"integer\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar tinyIntType = new SQLBaseType(\"tinyint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar smallIntType = new SQLBaseType(\"smallint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar mediumIntType = new SQLBaseType(\"mediumint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar bigIntType = new SQLBaseType(\"bigint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\n\r\nvar dateType = new SQLBaseType(\"date\", [], (ci, pv) => `check(isDate(${ci}))`, (v: string, pv) => v, []);\r\nvar dateTimeType = new SQLBaseType(\"datetime\", [], (ci, pv) => `check(isDateTime(${ci}))`, (v: string, pv) => v, [\"timestamp\"]);\r\nvar timestampType = new SQLBaseType(\"timestamp\", [], (ci, pv) => `check(isDateTime(${ci}))`, (v: string, pv) => v, [\"datetime\"]);\r\n\r\nvar booleanType = new SQLBaseType(\"boolean\", [], (ci, pv) => `check(${ci} == 0 or ${ci} == 1)`, (v, pv) => v == 1 ? \"true\" : \"false\",\r\n    [\"varchar\", \"text\", \"decimal\", \"numeric\"]);\r\n\r\nvar nullType = new SQLBaseType(\"null\", [], (ci, pv) => \"\", (v, pv) => v,\r\n    []);\r\n\r\nlet numericTypes = [decimalType, numericType, doubleType, realType, floatType, intType, integerType, tinyIntType, smallIntType, mediumIntType, bigIntType];\r\n\r\nlet baseTypes = [varcharType, charType, textType, tinyTextType, mediumTextType, longTextType,\r\n    dateType, dateTimeType, timestampType, booleanType, nullType].concat(numericTypes);\r\n\r\nSQLBaseType.addBaseTypes(baseTypes);\r\n\r\nvarcharType.addBinaryOperation(TokenType.concatenation, varcharType, varcharType);\r\nvarcharType.addBinaryOperation(TokenType.concatenation, charType, varcharType);\r\nvarcharType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\ntextType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\nvarcharType.addBinaryOperation(TokenType.keywordLike, varcharType, booleanType);\r\nvarcharType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\ntextType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\n\r\ncharType.addBinaryOperation(TokenType.concatenation, charType, charType);\r\ncharType.addBinaryOperation(TokenType.concatenation, varcharType, charType);\r\ncharType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\ntextType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\ncharType.addBinaryOperation(TokenType.keywordLike, charType, booleanType);\r\ncharType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\ntextType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\n\r\nlet numericBinaryOperators: TokenType[] = [TokenType.plus, TokenType.minus, TokenType.multiplication, TokenType.division, TokenType.modulo];\r\nlet comparisonOperators: TokenType[] = [TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual];\r\n\r\nfor (let i = 0; i < numericTypes.length; i++) {\r\n    for (let j = i; j < numericTypes.length; j++) {\r\n        numericTypes[i].addBinaryOperation(numericBinaryOperators, numericTypes[j], numericTypes[j]);\r\n        numericTypes[i].addBinaryOperation(comparisonOperators, numericTypes[j], booleanType);\r\n    }\r\n    numericTypes[i].unaryOperators = [TokenType.minus];\r\n}\r\n\r\ndecimalType.addBinaryOperation(numericBinaryOperators, decimalType, decimalType);\r\n\r\nlet characterTypes = [varcharType, textType];\r\nfor (let i = 0; i < characterTypes.length; i++) {\r\n    for (let j = i; j < characterTypes.length; j++) {\r\n        characterTypes[i].addBinaryOperation(TokenType.concatenation, characterTypes[j], characterTypes[j]);\r\n        characterTypes[i].addBinaryOperation(comparisonOperators, characterTypes[j], booleanType);\r\n    }\r\n}\r\n\r\nlet booleanOperations = [TokenType.keywordAnd, TokenType.keywordOr];\r\nbooleanType.addBinaryOperation(booleanOperations, booleanType, booleanType);\r\n\r\nbooleanType.unaryOperators = [TokenType.keywordNot];\r\n\r\nbaseTypes.forEach(bt => bt.unaryOperators = bt.unaryOperators.concat([TokenType.isNull, TokenType.isNotNull]));","import { param, timers } from \"jquery\";\r\nimport { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenList, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { ASTNode, BracketsNode, SelectNode, TermNode, TableOrSubqueryNode, TableNode, SubqueryNode, GroupByNode, OrderByNode, LimitNode, IdentifierNode, DotNode, ListNode, ColumnNode, InsertNode, ConstantNode, UnaryOpNode, CreateTableNode, CreateTableColumnNode, ForeignKeyInfo, UpdateNode, DeleteNode, DropTableNode, AlterTableNode, AlterTableKind, OmittedStatementNode } from \"./AST.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { Column } from \"./SQLTable.js\";\r\nimport { SQLBaseType } from \"./SQLTypes.js\";\r\n\r\nexport type SQLStatement = {\r\n    ast: ASTNode,\r\n    from: TextPosition,\r\n    to: TextPosition,\r\n    hasErrors: boolean,\r\n    acceptedBySQLite: boolean,\r\n    sql?: string,\r\n    sqlCleaned?: string\r\n}\r\n\r\n\r\nexport class Parser {\r\n\r\n    static operatorPrecedence: TokenType[][] = [\r\n        [TokenType.keywordOr], [TokenType.keywordAnd],\r\n        [TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual, TokenType.keywordLike],\r\n        [TokenType.concatenation, TokenType.plus, TokenType.minus], [TokenType.multiplication, TokenType.division, TokenType.modulo],\r\n        [TokenType.keywordIn, TokenType.keywordNotIn]\r\n    ];\r\n\r\n    module: Module;\r\n\r\n    pos: number;\r\n    tokenList: TokenList;\r\n\r\n    errorList: Error[];\r\n\r\n    lookahead = 4;\r\n    ct: Token[];\r\n    lastToken: Token;\r\n    cct: Token;\r\n    tt: TokenType;\r\n    position: TextPosition;\r\n    lastComment: Token;\r\n\r\n    endToken: Token = {\r\n        position: { line: 0, column: 0, length: 1 },\r\n        tt: TokenType.endofSourcecode,\r\n        value: \"das Ende des Programms\"\r\n    };\r\n\r\n    beginStatementKeywords = [\"select\", \"insert into\", \"update\", \"create table\", \"delete from\", \"alter table\", \"drop table\"];\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    parse(m: Module) {\r\n\r\n        this.module = m;\r\n\r\n        this.tokenList = m.tokenList;\r\n        this.errorList = [];\r\n\r\n        m.completionHints = new Map();\r\n\r\n        if (this.tokenList.length == 0) {\r\n            this.module.sqlStatements = [];\r\n            this.module.errors[1] = this.errorList;\r\n            this.module.addCompletionHint({ line: 0, column: 0, length: 0 }, { line: 20000, column: 100, length: 0 }, false, false,\r\n                this.beginStatementKeywords);\r\n            return;\r\n        }\r\n\r\n        this.pos = 0;\r\n        this.initializeLookahead();\r\n\r\n\r\n        let lastToken = this.tokenList[this.tokenList.length - 1];\r\n        this.endToken.position = { line: lastToken.position.line, column: lastToken.position.column + lastToken.position.length, length: 1 };\r\n\r\n        this.module.sqlStatements = this.parseMain();\r\n\r\n        this.module.errors[1] = this.errorList;\r\n\r\n    }\r\n\r\n    initializeLookahead() {\r\n\r\n        this.ct = [];\r\n\r\n        for (let i = 0; i < this.lookahead; i++) {\r\n\r\n            let token: Token = this.endToken;\r\n\r\n            while (true) {\r\n\r\n                if (this.pos >= this.tokenList.length) break;\r\n\r\n                let token1 = this.tokenList[this.pos]\r\n                if (token1.tt == TokenType.comment) {\r\n                    this.lastComment = token1;\r\n                }\r\n\r\n                if (token1.tt != TokenType.newline && token1.tt != TokenType.space && token1.tt != TokenType.comment) {\r\n                    token = token1;\r\n                    if (this.lastComment != null) {\r\n                        token.commentBefore = this.lastComment;\r\n                        this.lastComment = null;\r\n                    }\r\n                    break;\r\n                }\r\n\r\n                this.pos++;\r\n\r\n            }\r\n\r\n            this.ct.push(token);\r\n\r\n            if (i < this.lookahead - 1) {\r\n                this.pos++;\r\n            }\r\n\r\n        }\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    nextToken() {\r\n\r\n        let token: Token;\r\n        this.lastToken = this.cct;\r\n\r\n        while (true) {\r\n\r\n            this.pos++;\r\n\r\n            if (this.pos >= this.tokenList.length) {\r\n                token = this.endToken;\r\n                break;\r\n            }\r\n\r\n            token = this.tokenList[this.pos]\r\n            if (token.tt == TokenType.comment) {\r\n                this.lastComment = token;\r\n            }\r\n\r\n            if (token.tt != TokenType.newline && token.tt != TokenType.space && token.tt != TokenType.comment) {\r\n                token.commentBefore = this.lastComment;\r\n                this.lastComment = null;\r\n                break;\r\n            }\r\n\r\n        }\r\n\r\n        for (let i = 0; i < this.lookahead - 1; i++) {\r\n            this.ct[i] = this.ct[i + 1];\r\n        }\r\n\r\n        this.ct[this.lookahead - 1] = token;\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position?: TextPosition, quickFix?: QuickFix) {\r\n        if (position == null) position = Object.assign({}, this.position);\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    skip(tt: TokenType | TokenType[]) {\r\n        if (!Array.isArray(tt)) tt = [tt];\r\n        if (tt.indexOf(this.tt) >= 0) this.nextToken();\r\n    }\r\n\r\n    expect(tt: TokenType | TokenType[], skip: boolean = true, invokeSemicolonAngel: boolean = false): boolean {\r\n        if (this.tt != tt && !(Array.isArray(tt) && tt.indexOf(this.tt) >= 0)) {\r\n            if (tt == TokenType.semicolon && this.tt == TokenType.endofSourcecode) {\r\n                return true;\r\n            }\r\n\r\n            let position: TextPosition = this.cct.position;\r\n            if (tt == TokenType.semicolon && this.lastToken != null) {\r\n\r\n                if (this.lastToken.position.line < position.line) {\r\n                    position = {\r\n                        line: this.lastToken.position.line,\r\n                        column: this.lastToken.position.column + this.lastToken.position.length,\r\n                        length: 1\r\n                    }\r\n                }\r\n            }\r\n\r\n            let quickFix: QuickFix = null;\r\n            if (tt == TokenType.semicolon && this.lastToken.position.line < this.cct.position.line &&\r\n                !this.isOperatorOrDot(this.lastToken.tt)\r\n            ) {\r\n                quickFix = {\r\n                    title: 'Strichpunkt hier einfügen',\r\n                    editsProvider: (uri) => {\r\n                        return [{\r\n                            resource: uri,\r\n                            edit: {\r\n                                range: {\r\n                                    startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position.column,\r\n                                    message: \"\",\r\n                                    severity: monaco.MarkerSeverity.Error\r\n                                },\r\n                                text: \";\"\r\n                            }\r\n                        }\r\n                        ];\r\n                    }\r\n                }\r\n\r\n                if (invokeSemicolonAngel) {\r\n                    this.module.main.getSemicolonAngel().register(position, this.module);\r\n                }\r\n            }\r\n\r\n            let expectedValuesArray: string[];\r\n\r\n            if (Array.isArray(tt)) {\r\n                expectedValuesArray = tt.map(token => TokenTypeReadable[token]);\r\n                let expectedTokens = expectedValuesArray.join(\", \");\r\n                this.pushError(\"Erwartet wird eines der folgenden: \" + expectedTokens + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            } else {\r\n                expectedValuesArray = [TokenTypeReadable[tt]];\r\n                this.pushError(\"Erwartet wird: \" + TokenTypeReadable[tt] + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            }\r\n\r\n            // if (!Array.isArray(tt) && tt != TokenType.identifier) {\r\n            //     this.module.addCompletionHint(this.getEndOfPosition(this.lastToken.position), this.getCurrentPositionPlus(1), false, false, expectedValuesArray);\r\n            // }\r\n\r\n            return false;\r\n        }\r\n\r\n        if (skip) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    getEndOfPosition(p: TextPosition): TextPosition {\r\n        return {\r\n            line: p.line,\r\n            column: p.column + p.length,\r\n            length: 0\r\n        }\r\n    }\r\n\r\n    isOperatorOrDot(tt: TokenType): boolean {\r\n        if (tt == TokenType.dot) return true;\r\n        for (let op of Parser.operatorPrecedence) {\r\n            for (let operator of op) {\r\n                if (tt == operator) return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    isEnd(): boolean {\r\n        return this.cct == this.endToken;\r\n    }\r\n\r\n    comesToken(token: TokenType | TokenType[], skip: boolean = false): boolean {\r\n\r\n        if (!Array.isArray(token)) {\r\n            let ret: boolean = this.tt == token;\r\n            if (ret && skip) this.nextToken();\r\n            return ret;\r\n        }\r\n\r\n        return token.indexOf(this.tt) >= 0;\r\n\r\n    }\r\n\r\n    getCurrentPosition(): TextPosition {\r\n        return Object.assign({}, this.position);\r\n    }\r\n\r\n    getCurrentPositionPlus(deltaColumns: number): TextPosition {\r\n\r\n        if (this.tt == TokenType.endofSourcecode) {\r\n            return {\r\n                line: this.endToken.position.line,\r\n                column: 100,\r\n                length: 1\r\n            }\r\n        }\r\n\r\n        // get Token in which new position falls:\r\n        let tpos = 0;\r\n        let deltaInsideToken = deltaColumns;\r\n        let length = 0;\r\n        while (tpos < this.lookahead - 1 && (length = this.ct[tpos].position.length) < deltaInsideToken) {\r\n            deltaInsideToken -= length;\r\n            tpos++;\r\n        }\r\n        let tokenPos = this.ct[tpos].position;\r\n        if (tokenPos == null) tokenPos = this.getCurrentPosition();\r\n\r\n        let pos: TextPosition = {\r\n            line: tokenPos.line,\r\n            column: tokenPos.column + deltaInsideToken,\r\n            length: 1\r\n        }\r\n\r\n        return pos;\r\n    }\r\n\r\n    getEndOfCurrentToken(): TextPosition {\r\n\r\n        let position = this.getCurrentPosition();\r\n        position.column = position.column + this.position.length;\r\n        position.length = 0;\r\n\r\n        return position;\r\n    }\r\n\r\n    parseMain(): SQLStatement[] {\r\n\r\n        let mainProgram: SQLStatement[] = [];\r\n\r\n        let mainProgramEnd: TextPosition = {\r\n            column: 0,\r\n            line: 10000,\r\n            length: 1\r\n        }\r\n\r\n        let afterLastStatement: TextPosition = {\r\n            column: 0,\r\n            line: 0,\r\n            length: 0\r\n        }\r\n\r\n        let semicolonAfterLastStatement: boolean = true;\r\n\r\n        this.module.addCompletionHint(afterLastStatement, this.getCurrentPositionPlus(8), false, false,\r\n            this.beginStatementKeywords);\r\n\r\n        while (!this.isEnd()) {\r\n\r\n            let oldPos = this.pos;\r\n\r\n            let errorsBeforeStatement: number = this.errorList.length;\r\n\r\n            while ([TokenType.space, TokenType.newline, TokenType.comment, TokenType.semicolon].indexOf(this.cct.tt) >= 0) {\r\n                this.nextToken();\r\n            }\r\n\r\n            let startPosition = this.getCurrentPosition();\r\n\r\n            let st = this.parseStatement();\r\n\r\n            afterLastStatement = {\r\n                line: this.lastToken.position.line + 1,\r\n                column: 0,\r\n                length: 0\r\n            }\r\n\r\n            semicolonAfterLastStatement = this.tt == TokenType.semicolon;\r\n            while (this.tt == TokenType.semicolon) {\r\n                this.nextToken();\r\n            }\r\n\r\n            let hasErrors: boolean = false;\r\n            for (let i = errorsBeforeStatement; i < this.errorList.length; i++) {\r\n                if (this.errorList[i].level == \"error\") hasErrors = true;\r\n            }\r\n\r\n            if (st != null) {\r\n                mainProgram.push({\r\n                    ast: st,\r\n                    from: startPosition,\r\n                    to: this.getEndOfPosition(this.lastToken.position),\r\n                    hasErrors: hasErrors,\r\n                    acceptedBySQLite: false\r\n                });\r\n            }\r\n            // console.log(mainProgram[mainProgram.length - 1]);\r\n\r\n            mainProgramEnd = this.getCurrentPosition();\r\n\r\n            // emergency-forward:\r\n            if (this.pos == oldPos) {\r\n                let beginStatementTokens: TokenType[] =\r\n                    [TokenType.keywordSelect, TokenType.keywordUpdate, TokenType.keywordCreate, TokenType.keywordInsert,\r\n                    TokenType.keywordDelete, TokenType.keywordDrop, TokenType.keywordAlter];\r\n\r\n                let firstBadToken: boolean = true;\r\n\r\n                while (!this.isEnd() && beginStatementTokens.indexOf(this.tt) < 0) {\r\n                    if ([TokenType.space, TokenType.newline].indexOf(this.tt) < 0 && firstBadToken) {\r\n                        this.pushError(\"Erwartet wird eines dieser Schlüsselwörter: \" + beginStatementTokens.map(t => TokenTypeReadable[t]).join(\", \")\r\n                            + \"; Gefunden wurde: \" + this.cct.value);\r\n                        firstBadToken = true;\r\n                    }\r\n                    this.nextToken();\r\n                }\r\n            }\r\n\r\n            if (semicolonAfterLastStatement || this.cct.position.line - afterLastStatement.line > 0) {\r\n                this.module.addCompletionHint(afterLastStatement, this.getCurrentPositionPlus(8), false, false,\r\n                    this.beginStatementKeywords);\r\n            }\r\n\r\n        }\r\n\r\n        this.module.addCompletionHint(afterLastStatement, { line: this.endToken.position.line + 1, column: 0, length: 0 }, false, false,\r\n            this.beginStatementKeywords);\r\n\r\n        return mainProgram;\r\n\r\n    }\r\n\r\n\r\n\r\n    parseStatement(expectSemicolon: boolean = true): ASTNode {\r\n\r\n        let retStatements: ASTNode = null;\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordSelect:\r\n                return this.parseSelect();\r\n            case TokenType.keywordInsert:\r\n                return this.parseInsert();\r\n            case TokenType.keywordCreate:\r\n                return this.parseCreateTableOrDatabase();\r\n            case TokenType.keywordUpdate:\r\n                return this.parseUpdate();\r\n            case TokenType.keywordDelete:\r\n                return this.parseDelete();\r\n            case TokenType.keywordDrop:\r\n                return this.parseDropTable();\r\n            case TokenType.keywordAlter:\r\n                return this.parseAlterTable();\r\n            case TokenType.keywordCommit:\r\n                this.pushError(\"Die Aweisung commit ist unnötig, da jede Anweisung automatisch commited wird.\", \"info\");\r\n                this.nextToken();\r\n                return null;\r\n            // Omitted statements:\r\n            case TokenType.keywordSet:\r\n                return this.parseSet();\r\n            case TokenType.keywordUse:\r\n                return this.parseUse();\r\n            case TokenType.keywordStart:\r\n                this.nextToken();\r\n                this.expect(TokenType.keywordTransaction, true);\r\n                return null;\r\n            case TokenType.keywordLock:\r\n            case TokenType.keywordUnlock:\r\n                this.parseLockUnlock();\r\n                return null;\r\n\r\n            default:\r\n                let s = TokenTypeReadable[this.tt];\r\n                if (s == null) s = \"\";\r\n                if (s != this.cct.value) s += \"(\" + this.cct.value + \")\";\r\n                s += \" wird hier nicht erwartet.\";\r\n                this.pushError(s);\r\n                this.nextToken();\r\n                break;\r\n        }\r\n\r\n\r\n        return retStatements;\r\n\r\n    }\r\n\r\n    parseLockUnlock() {\r\n        this.nextToken();\r\n        this.expect(TokenType.keywordTables, true);\r\n        this.skip(TokenType.identifier);\r\n        this.skip([TokenType.keywordWrite, TokenType.keywordRead]);\r\n        this.skip(TokenType.semicolon);\r\n    }\r\n\r\n    parseSet(): OmittedStatementNode {\r\n\r\n        this.pushError(\"Das SET-Statement wird von SQLite nicht unterstützt. Diese Anweisung wird daher einfach überlesen.\", \"info\");\r\n\r\n        let node: OmittedStatementNode = {\r\n            type: TokenType.omittedeStatement,\r\n            position: this.getCurrentPosition(),\r\n            endPosition: null,\r\n            symbolTable: null\r\n        }\r\n\r\n        this.nextToken(); // skip 'set'\r\n        this.expect(TokenType.identifier, true);\r\n        this.expect(TokenType.equal, true);\r\n        this.expect([TokenType.identifier, TokenType.stringConstant, TokenType.integerConstant, TokenType.charConstant, TokenType.booleanConstant, TokenType.floatingPointConstant], true);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n    parseUse(): OmittedStatementNode {\r\n\r\n        this.pushError(\"Das USE-Statement wird von SQLite nicht unterstützt. Diese Anweisung wird daher einfach überlesen. Sie können eine andere Datenbank auswählen indem Sie in der Datenbankliste links darauf klicken.\", \"info\");\r\n\r\n        let node: OmittedStatementNode = {\r\n            type: TokenType.omittedeStatement,\r\n            position: this.getCurrentPosition(),\r\n            endPosition: null,\r\n            symbolTable: null\r\n        }\r\n\r\n        this.nextToken(); // skip 'use'\r\n        this.expect(TokenType.identifier, true);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n    parseAlterTable(): AlterTableNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"alter\"\r\n\r\n        let node: AlterTableNode = {\r\n            type: TokenType.keywordAlter,\r\n            kind: null,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n        }\r\n\r\n        if (!this.expect(TokenType.keywordTable, true)) {\r\n            this.addCompletionHintHere(false, false, [\"table\"], 1);\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1);\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        this.addCompletionHintHere(false, false, [\"rename to\", \"rename column\", \"add column\", \"drop column\"], 1);\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordRename: this.parseRenameTableOrColumn(node); break;\r\n            case TokenType.keywordAdd: this.parseAlterTableAdd(node); break;\r\n            case TokenType.keywordDrop: this.parseDropColumn(node); break;\r\n            default:\r\n                this.pushError(\"Erwartet wird rename to, rename column, add column oder drop column\");\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    parseRenameTableOrColumn(node: AlterTableNode) {\r\n\r\n        this.nextToken();\r\n        if (!this.comesToken(TokenType.keywordTo)) {\r\n            this.addCompletionHintHere(node.tableIdentifier, false, [\"column\", \"to\"], 3);\r\n        }\r\n        node.endPosition = this.getEndOfCurrentToken();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordTo:\r\n                this.nextToken();\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                node.kind = \"renameTable\";\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    node.newTableName = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    node.endPosition = this.getEndOfCurrentToken();\r\n                } else {\r\n                    this.pushError(\"Erwartet wird der neue Tabellenname.\");\r\n                }\r\n                return;\r\n            case TokenType.keywordColumn:\r\n                this.nextToken();\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                this.addCompletionHintHere(node.tableIdentifier, false, [], 3);\r\n                if (!this.comesToken(TokenType.identifier)) {\r\n                    this.pushError(\"Erwartet wird der Name einer Spalte der Tabelle \" + node.tableIdentifier + \".\");\r\n                    return;\r\n                }\r\n                node.kind = \"renameColumn\";\r\n                node.oldColumnName = <string>this.cct.value;\r\n                node.oldColumnPosition = this.getCurrentPosition();\r\n                this.nextToken();\r\n                this.addCompletionHintHere(false, false, [\"to\"], 3);\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                if (!this.expect(TokenType.keywordTo, true)) return;\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    node.newColumnName = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    node.endPosition = this.getEndOfCurrentToken();\r\n                } else {\r\n                    this.pushError(\"Erwartet wird der neue Spaltenname.\");\r\n                }\r\n                return;\r\n            default:\r\n                this.pushError(\"Erwartet wird das Schlüsselwort 'to' (zum Umbenennen der Tabelle) oder das Schlüsselwor 'column' (zum Umbenennen einer Spalte).\")\r\n                return;\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    parseDropColumn(node: AlterTableNode) {\r\n        this.nextToken(); // skip 'drop'\r\n        this.comesToken(TokenType.keywordColumn, true);\r\n        node.oldColumnPosition = this.getCurrentPosition();\r\n        this.addCompletionHintHere(node.tableIdentifier, false, [], 3);\r\n\r\n        node.kind = \"dropColumn\";\r\n        node.endPosition = this.getEndOfCurrentToken();\r\n\r\n        if (this.comesToken(TokenType.identifier)) {\r\n            node.oldColumnName = <string>this.cct.value;\r\n            this.nextToken();\r\n        } else {\r\n            this.pushError(\"Erwartet wird der Bezeichner der Spalte, die gelöscht werden soll.\");\r\n        }\r\n\r\n    }\r\n\r\n    parseAlterTableAdd(node: AlterTableNode) {\r\n        do {\r\n            this.nextToken(); // skip \"add\" or \",\"\r\n            let unique: boolean = false;\r\n            switch (this.tt) {\r\n                case TokenType.keywordColumn:\r\n                    this.parseAddColumn(node);\r\n                    break;\r\n                case TokenType.keywordPrimary:\r\n                    this.parseAddPrimaryKey(node);\r\n                    break;\r\n                case TokenType.keywordUnique:\r\n                    this.nextToken();\r\n                    unique = true;\r\n                    this.expect([TokenType.keywordIndex, TokenType.keywordKey], false);\r\n                case TokenType.keywordKey:\r\n                case TokenType.keywordIndex:\r\n                    this.parseAddIndex(node, unique);\r\n                    break;\r\n                case TokenType.keywordModify:\r\n                    this.parseModifyColumn(node);\r\n                    break;\r\n                case TokenType.keywordConstraint:\r\n                    this.parseAddConstraint(node);\r\n                    break;\r\n            }\r\n        } while (this.tt == TokenType.comma);\r\n    }\r\n\r\n    parseAddConstraint(node: AlterTableNode) {\r\n        this.nextToken(); // skip \"constraint\"\r\n        if (!this.expect(TokenType.identifier)) return;\r\n\r\n        if (this.comesToken(TokenType.keywordForeign)) {\r\n            let fki = this.parseForeignKeyDefinition();\r\n            if (fki != null) {\r\n                if (node.foreignKeys == null) node.foreignKeys = [];\r\n                node.foreignKeys.push(fki);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    parseForeignKeyDefinition(): ForeignKeyInfo {\r\n        let fki: ForeignKeyInfo = { column: \"\", referencesTable: \"\", referencesColumn: \"\", referencesPosition: this.getCurrentPosition() };\r\n        if (!this.expect(TokenType.keywordForeign)) return;\r\n        if (!this.expect(TokenType.keywordKey)) return;\r\n        if (!this.expect(TokenType.leftBracket)) return;\r\n\r\n        if (!this.comesToken(TokenType.identifier)) {\r\n            this.pushError(\"Der Bezeichner der Fremdschlüsselspalte wird erwartet.\");\r\n            return;\r\n        }\r\n\r\n        fki.column = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        if (!this.expect(TokenType.rightBracket)) return;\r\n        this.parseReferences(fki);\r\n        return fki;\r\n    }\r\n\r\n    parseReferences(fki: ForeignKeyInfo) {\r\n\r\n        if (!this.expect(TokenType.keywordReferences)) return;\r\n\r\n        this.addCompletionHintHere(false, true, []);\r\n\r\n        if (!this.comesToken(TokenType.identifier)) {\r\n            this.pushError(\"Der Bezeichner der referenzierten Tabelle wird erwartet.\");\r\n            return;\r\n        }\r\n\r\n        fki.referencesTable = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        let pos0 = this.lastToken.position;\r\n        let pos1 = this.getCurrentPosition();\r\n        this.module.addCompletionHint(this.getEndOfPosition(pos0), pos1, fki.referencesTable, false, []);\r\n\r\n\r\n        if (!this.expect(TokenType.leftBracket)) return;\r\n        if (!this.comesToken(TokenType.identifier)) {\r\n            this.pushError(\"Der Bezeichner der referenzierten Spalte wird erwartet.\");\r\n            return;\r\n        }\r\n\r\n        fki.referencesColumn = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        if (!this.expect(TokenType.rightBracket)) return;\r\n\r\n        while (this.tt == TokenType.keywordOn) {\r\n            this.nextToken();\r\n            let kind: \"onDelete\" | \"onUpdate\" | \"\" = \"\";\r\n\r\n            switch (this.tt) {\r\n                //@ts-ignore\r\n                case TokenType.keywordDelete:\r\n                    kind = \"onDelete\";\r\n                    break;\r\n                //@ts-ignore\r\n                case TokenType.keywordUpdate:\r\n                    kind = \"onUpdate\";\r\n                    break;\r\n            }\r\n\r\n            if (kind == \"\") {\r\n                this.pushError(\"Nach 'on' wird 'delete' oder 'update' erwartet.\");\r\n                if (!this.comesToken([TokenType.keywordCascade, TokenType.keywordRestrict, TokenType.keywordSet, TokenType.keywordNo])) {\r\n                    this.nextToken();\r\n                    kind = \"onDelete\";\r\n                }\r\n            } else {\r\n                this.nextToken();\r\n            }\r\n\r\n            switch (this.tt) {\r\n                //@ts-ignore\r\n                case TokenType.keywordCascade:\r\n                //@ts-ignore\r\n                case TokenType.keywordRestrict:\r\n                    fki[kind] = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    break;\r\n                //@ts-ignore\r\n                case TokenType.keywordSet:\r\n                    fki[kind] = \"set \";\r\n                    this.nextToken();\r\n                    if ([TokenType.keywordNull, TokenType.keywordDefault].indexOf(this.tt) >= 0) {\r\n                        fki[kind] += this.cct.value;\r\n                        this.nextToken();\r\n                    } else {\r\n                        this.pushError(\"Nach 'on delete/update set' wird 'null' oder 'default' erwartet.\");\r\n                    }\r\n                    break;\r\n                //@ts-ignore\r\n                case TokenType.keywordNo:\r\n                    this.nextToken();\r\n                    if (this.expect(TokenType.keywordAction), true) {\r\n                        fki[kind] = \"no action\";\r\n                    }\r\n                    break;\r\n                default:\r\n                    this.pushError(\"Nach 'on delete/update' wird 'cascade', 'set null', 'set default' oder 'no action' erwartet.\");\r\n                    break;\r\n\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    parseModifyColumn(node: AlterTableNode) {\r\n        this.nextToken();\r\n        let modifyColumnInfo = this.parseColumnDefinition(false);\r\n        if (modifyColumnInfo != null) {\r\n            if (node.modifyColumnInfo == null) node.modifyColumnInfo = [];\r\n            node.modifyColumnInfo.push(modifyColumnInfo);\r\n        }\r\n    }\r\n\r\n    parseAddPrimaryKey(node: AlterTableNode) {\r\n        this.nextToken(); // skip \"primary\"\r\n        node.primaryKeys = [];\r\n        if (this.expect(TokenType.keywordKey, true) && this.expect(TokenType.leftBracket, false)) {\r\n            do {\r\n                this.nextToken();\r\n                if (this.tt == TokenType.identifier) {\r\n                    node.primaryKeys.push(<string>this.cct.value);\r\n                    this.nextToken();\r\n                }\r\n            } while (this.tt == TokenType.comma)\r\n        }\r\n        if (this.expect(TokenType.rightBracket, true)) {\r\n            node.kind = \"omittedKind\";\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    parseAddIndex(node: AlterTableNode, unique: boolean) {\r\n        this.nextToken(); // skip \"key\" | \"index\"\r\n\r\n        let index = { index_name: \"\", column: \"\", unique: unique }\r\n        if (this.tt == TokenType.identifier) {\r\n            index.index_name = <string>this.cct.value;\r\n            this.nextToken();\r\n        } else {\r\n            this.pushError(\"Erwartet wird der Bezeichner des Index.\");\r\n            return null;\r\n        }\r\n\r\n        if (!this.expect(TokenType.leftBracket, true)) return null;\r\n        if (this.tt == TokenType.identifier) {\r\n            index.column = <string>this.cct.value;\r\n            this.nextToken();\r\n            if (node.indices == null) node.indices = [];\r\n            node.indices.push(index);\r\n        } else {\r\n            this.pushError(\"Erwartet wird der Bezeichner der Spalte, für die ein Index erstellt werden soll.\");\r\n            return null;\r\n        }\r\n\r\n        node.kind = \"omittedKind\";\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        return null;\r\n    }\r\n\r\n    parseAddColumn(node: AlterTableNode) {\r\n        node.kind = \"addColumn\";\r\n        this.comesToken(TokenType.keywordColumn, true);\r\n        node.columnDefBegin = this.getCurrentPosition();\r\n        node.columnDef = this.parseColumnDefinition(false);\r\n    }\r\n\r\n    parseDropTable(): DropTableNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"Delete\"\r\n\r\n        let node: DropTableNode = {\r\n            type: TokenType.keywordDrop,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n            ifExists: false\r\n        }\r\n\r\n        if (!this.expect(TokenType.keywordTable, true)) {\r\n            this.addCompletionHintHere(false, false, [\"table\"], 1);\r\n        }\r\n\r\n        if (this.comesToken(TokenType.keywordIf, true)) {\r\n            node.ifExists = true;\r\n            this.expect(TokenType.keywordExists, true);\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1, \"\", \";\");\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n\r\n    }\r\n\r\n    parseDelete(): DeleteNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"Delete\"\r\n\r\n        let node: DeleteNode = {\r\n            type: TokenType.keywordDelete,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n            whereNode: null,\r\n            whereNodeBegin: null,\r\n            whereNodeEnd: null\r\n        }\r\n\r\n        if (!this.expect(TokenType.keywordFrom, true)) {\r\n            this.addCompletionHintHere(false, false, [\"from\"], 1);\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1, \"\", \" where\\n\\t\");\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        this.addCompletionHintHere(false, false, [\"where\\n\\t\"], 1);\r\n        if (this.tt != TokenType.keywordWhere) return node;\r\n\r\n        this.nextToken(); // skip \"where\"\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n\r\n        node.whereNodeBegin = this.getEndOfPosition(this.lastToken.position);\r\n        node.whereNode = this.parseTerm();\r\n        node.whereNodeEnd = this.getCurrentPosition();\r\n\r\n        this.module.addCompletionHint(node.whereNodeBegin, this.getCurrentPositionPlus(3), node.tableIdentifier, false, []);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n        return node;\r\n\r\n    }\r\n\r\n    parseUpdate(): UpdateNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"update\"\r\n\r\n        let node: UpdateNode = {\r\n            type: TokenType.keywordUpdate,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n            columnIdentifiers: [],\r\n            columnIdentifierPositions: [],\r\n            values: [],\r\n            valuePosBegin: [],\r\n            valuePosEnd: [],\r\n            whereNode: null,\r\n            whereNodeBegin: null,\r\n            whereNodeEnd: null\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1, \"\", \" set\\n\\t\");\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        this.addCompletionHintHere(false, false, [\"set\\n\\t\"], 1);\r\n        if (!this.expect(TokenType.keywordSet)) return node;\r\n        let first: boolean = true;\r\n        do {\r\n            this.addCompletionHintHere(node.tableIdentifier, false, first ? [] : ['where'], 1, null, \" = \");\r\n            first = false;\r\n            if (this.tt != TokenType.identifier) {\r\n                this.pushError(\"Hier wird der Bezeichner derjenigen Spalte der Tabelle \" + node.tableIdentifier + \" erwaretet, deren Wert verändert werden soll.\", \"error\");\r\n                break;\r\n            }\r\n\r\n            node.columnIdentifiers.push(<string>this.cct.value);\r\n            node.columnIdentifierPositions.push(this.getCurrentPosition());\r\n            this.nextToken();\r\n\r\n            this.expect(TokenType.equal, true);\r\n\r\n            node.valuePosBegin.push(this.getCurrentPosition());\r\n            node.values.push(this.parseTerm());\r\n            node.valuePosEnd.push(this.getCurrentPosition());\r\n\r\n        } while (this.comesToken(TokenType.comma, true));\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        if (this.lastToken.tt != TokenType.comma || this.comesToken(TokenType.keywordWhere)) {\r\n            if (!this.expect(TokenType.keywordWhere, true)) return node;\r\n\r\n            node.whereNodeBegin = this.getEndOfPosition(this.lastToken.position);\r\n            node.whereNode = this.parseTerm();\r\n            node.whereNodeEnd = this.getCurrentPosition();\r\n\r\n            this.module.addCompletionHint(node.whereNodeBegin, node.whereNodeEnd, node.tableIdentifier, false, []);\r\n\r\n            node.endPosition = this.getCurrentPosition();\r\n        } else {\r\n            this.comesToken(TokenType.keywordWhere, true); // skip where, if present\r\n        }\r\n        return node;\r\n\r\n    }\r\n\r\n    parseCreateTableOrDatabase(): CreateTableNode | OmittedStatementNode {\r\n        switch (this.ct[1].tt) {\r\n            case TokenType.keywordDatabase:\r\n                return this.parseCreateDatabase();\r\n            case TokenType.keywordTable:\r\n                return this.parseCreateTable();\r\n            default:\r\n                this.nextToken();\r\n                this.pushError(\"Nach 'create' wird 'table' erwartet.\");\r\n                this.nextToken();\r\n                return null;\r\n        }\r\n    }\r\n\r\n    parseCreateDatabase(): OmittedStatementNode {\r\n        let node: OmittedStatementNode = {\r\n            type: TokenType.omittedeStatement,\r\n            position: this.getCurrentPosition(),\r\n            endPosition: null,\r\n            symbolTable: null\r\n        }\r\n\r\n        this.nextToken();\r\n        this.pushError(\"Die CREATE-DATABASE-Anweisung wird von der SQLite-Engine nicht unterstützt. Sie können eine neue Datenbank anlegen, indem Sie auf den entsprechenden Button oberhalb der Liste der Datenbanken (linke Seite des Fensters) klicken. Diese Anweisung wird überlesen.\", \"info\");\r\n        while (this.tt != TokenType.semicolon && this.tt != TokenType.endofSourcecode) {\r\n            node.endPosition = this.getEndOfCurrentToken();\r\n            this.nextToken();\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    parseCreateTable(): CreateTableNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"create\"\r\n\r\n        if (!this.expect(TokenType.keywordTable, true)) {\r\n            this.module.addCompletionHint(startPosition, this.getCurrentPositionPlus(3), false, false, [\"table\"]);\r\n        }\r\n\r\n        let ifNotExists: boolean = false;\r\n        if (this.comesToken(TokenType.keywordIf)) {\r\n            this.nextToken();\r\n            this.expect(TokenType.keywordNot, true);\r\n            this.expect(TokenType.keywordExists, true);\r\n            ifNotExists = true;\r\n        }\r\n\r\n        let identifier = \"\";\r\n        if (this.expect(TokenType.identifier, false)) {\r\n            identifier = <string>this.cct.value;\r\n            this.module.addCompletionHint(this.getCurrentPosition(), this.getCurrentPositionPlus(identifier.length + 3), false, false, [\"(\"]);\r\n            this.nextToken();\r\n        }\r\n\r\n        let node: CreateTableNode = {\r\n            type: TokenType.keywordCreate,\r\n            identifier: identifier,\r\n            position: startPosition,\r\n            endPosition: null,\r\n            columnList: [],\r\n            symbolTable: null,\r\n            combinedPrimaryKeyColumns: [],\r\n            foreignKeyInfoList: [],\r\n            ifNotExists: ifNotExists,\r\n            uniqueConstraints: []\r\n        }\r\n\r\n        if (!this.expect(TokenType.leftBracket, true)) return node;\r\n\r\n        let primaryKeyAlreadyDefined: boolean = false;\r\n        let first: boolean = true;\r\n\r\n        while (this.tt != TokenType.rightBracket) {\r\n            if (!first) this.expect(TokenType.comma, true);\r\n            first = false;\r\n            if(this.comesToken(TokenType.keywordConstraint, true)){\r\n                this.expect(TokenType.identifier, true);\r\n                this.expect([TokenType.keywordForeign, TokenType.keywordPrimary, TokenType.keywordUnique], false);\r\n            }\r\n\r\n            switch (this.tt) {\r\n                case TokenType.keywordPrimary:\r\n                    if (primaryKeyAlreadyDefined) this.pushError(\"Je Tabelle darf nur ein einziger Primärschlüssel definiert werden.\", \"error\", this.getCurrentPosition());\r\n                    this.parsePrimaryKeyTerm(primaryKeyAlreadyDefined, node);\r\n                    primaryKeyAlreadyDefined = true;\r\n                    break;\r\n                case TokenType.keywordUnique:\r\n                    this.parseUniqueTerm(node);\r\n                    break;\r\n                case TokenType.keywordForeign:\r\n                    let fki = this.parseForeignKeyDefinition();\r\n                    if (fki != null) {\r\n                        node.foreignKeyInfoList.push(fki);\r\n                    }\r\n                    break;\r\n                case TokenType.identifier:\r\n                    let columnNode = this.parseColumnDefinition(primaryKeyAlreadyDefined);\r\n                    node.columnList.push(columnNode);\r\n                    primaryKeyAlreadyDefined = primaryKeyAlreadyDefined || columnNode.isPrimary;\r\n                    break;\r\n                default:\r\n                    this.pushError(TokenTypeReadable[this.tt] + \" wird hier nicht erwartet.\", \"error\");\r\n                    break;\r\n            }\r\n            if (!this.comesToken(TokenType.comma)) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        while ([TokenType.keywordEngine, TokenType.keywordDefault, TokenType.keywordCollate].indexOf(this.tt) >= 0) {\r\n            switch (this.tt) {\r\n                case TokenType.keywordCollate:\r\n                    this.nextToken();\r\n                    this.skip(TokenType.equal);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordEngine:\r\n                    this.nextToken();\r\n                    this.skip(TokenType.equal);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordDefault:\r\n                    this.nextToken();\r\n                    this.expect([TokenType.keywordCharset, TokenType.keywordCharacter], true);\r\n                    this.skip(TokenType.keywordSet);\r\n                    this.skip(TokenType.equal);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        for (let column of node.columnList) {\r\n            if (column.isAutoIncrement && !(column.isPrimary || node.combinedPrimaryKeyColumns.indexOf(column.identifier) >= 0)) {\r\n                this.pushError(\"autoincrement gibt es nur bei Primärschlüsseln, d.h. es fehlt wahrscheinlich 'primary key'.\", \"warning\", node.position);\r\n            }\r\n        }\r\n\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n\r\n    parsePrimaryKeyTerm(primaryKeyAlreadyDefined: boolean, node: CreateTableNode) {\r\n        if (primaryKeyAlreadyDefined) {\r\n            this.pushError(\"Die Tabelle kann nur einen einzigen Primärschlüssel haben.\");\r\n        }\r\n        this.nextToken(); // skip \"primary\"\r\n        this.expect(TokenType.keywordKey, true);\r\n\r\n        let columns: string[] = node.columnList.map(c => c.identifier);\r\n\r\n        this.addCompletionHintHere(false, false, columns);\r\n        if (this.comesToken(TokenType.leftBracket)) {\r\n            this.addCompletionHintHere(false, false, columns);\r\n            this.nextToken();\r\n\r\n            while (true) {\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    node.combinedPrimaryKeyColumns.push(<string>this.cct.value);\r\n                    this.nextToken();\r\n                    this.addCompletionHintHere(false, false, columns, 1);\r\n                    if (!this.comesToken(TokenType.comma)) {\r\n                        break;\r\n                    } else {\r\n                        this.nextToken();\r\n                        this.addCompletionHintHere(false, false, columns);\r\n                    }\r\n                } else {\r\n                    this.pushError(\"Der Bezeichner einer Spalte wird erwartet. Gefunden wurde: \" + this.cct.value);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        } else {\r\n            this.pushError(\"( erwartet.\");\r\n        }\r\n    }\r\n\r\n    parseUniqueTerm(node: CreateTableNode) {\r\n        this.nextToken(); // skip \"unique\"\r\n\r\n        let columns: string[] = node.columnList.map(c => c.identifier);\r\n        let uniqueConstraint: string[] = [];\r\n        node.uniqueConstraints.push(uniqueConstraint);\r\n\r\n        this.addCompletionHintHere(false, false, columns);\r\n        if (this.comesToken(TokenType.leftBracket)) {\r\n            this.addCompletionHintHere(false, false, columns);\r\n            this.nextToken();\r\n\r\n            while (true) {\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    uniqueConstraint.push(<string>this.cct.value);\r\n                    this.nextToken();\r\n                    this.addCompletionHintHere(false, false, columns, 1);\r\n                    if (!this.comesToken(TokenType.comma)) {\r\n                        break;\r\n                    } else {\r\n                        this.nextToken();\r\n                        this.addCompletionHintHere(false, false, columns);\r\n                    }\r\n                } else {\r\n                    this.pushError(\"Der Bezeichner einer Spalte wird erwartet. Gefunden wurde: \" + this.cct.value);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        } else {\r\n            this.pushError(\"( erwartet.\");\r\n        }\r\n    }\r\n\r\n    parseColumnDefinition(primaryKeyAlreadyDefined: boolean): CreateTableColumnNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n        let identifier = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        let node: CreateTableColumnNode = {\r\n            type: TokenType.columnDef,\r\n            identifier: identifier,\r\n            isPrimary: false,\r\n            isAutoIncrement: false,\r\n            position: position,\r\n            baseType: null,\r\n            notNull: false\r\n        }\r\n\r\n        this.parseType(node, primaryKeyAlreadyDefined);\r\n\r\n        return node;\r\n\r\n    }\r\n\r\n    addCompletionHintHere(hintColumns: boolean | string, hintTables: boolean, hints: string[], additionalColumns: number = 0, praefix: string = \"\", suffix: string = \"\") {\r\n        let pos0 = this.lastToken.position;\r\n        let pos1 = this.getCurrentPosition();\r\n        pos1.column += 1 + additionalColumns\r\n        this.module.addCompletionHint(this.getEndOfPosition(pos0), pos1, hintColumns, hintTables, hints, null, praefix, suffix);\r\n    }\r\n\r\n    parseType(node: CreateTableColumnNode, primaryKeyAlreadyDefined: boolean) {\r\n\r\n        let datatypes = SQLBaseType.baseTypes.map(type => type.toString());\r\n        this.addCompletionHintHere(false, false, datatypes);\r\n\r\n        if (!this.expect(TokenType.identifier, false)) {\r\n            this.pushError(\"Erwartet wird ein Datentyp. Gefunden wurde: \" + this.cct.value);\r\n            return;\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n\r\n        let type = SQLBaseType.getBaseType(identifier);\r\n        if (type == null) {\r\n            this.pushError(\"Erwartet wird ein Datentyp. Gefunden wurde: \" + identifier);\r\n        }\r\n        node.baseType = type;\r\n        this.nextToken();\r\n\r\n        if (this.tt == TokenType.leftBracket) {\r\n            this.nextToken();\r\n            node.parameters = [];\r\n            //@ts-ignore\r\n            while (this.tt == TokenType.integerConstant) {\r\n                node.parameters.push(<number>this.cct.value);\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.comma) break;\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.integerConstant) {\r\n                    this.pushError(\"Erwartet wird eine ganze Zahl, gefunden wurde: \" + this.cct.value);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (type != null && node.parameters.length > type.parameterDescriptions.length) {\r\n                this.pushError(\"Der Datentyp \" + type.toString() + \" hat höchstens \" + type.parameterDescriptions.length + \" Parameter.\");\r\n            }\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        }\r\n\r\n        // primary key autoincrement\r\n        // references table(column)\r\n        // not null\r\n\r\n        this.addCompletionHintHere(false, false, [\"primary key\", \"references\", \"not null\"]);\r\n\r\n        let alreadySeenKeywords: TokenType[] = [];\r\n\r\n        while ([TokenType.keywordOn, TokenType.keywordCharacter, TokenType.keywordComment, TokenType.keywordAutoincrement, TokenType.keywordKey, TokenType.keywordPrimary, TokenType.keywordNot, TokenType.keywordReferences, TokenType.keywordCollate, TokenType.keywordDefault].indexOf(this.tt) >= 0) {\r\n            if (alreadySeenKeywords.indexOf(this.tt) >= 0) {\r\n                this.pushError('Das Schlüsselwort ' + TokenTypeReadable[this.tt] + \" darf bei der Definition einer Spalte nicht öfters als ein Mal vorkommen.\");\r\n            }\r\n\r\n            alreadySeenKeywords.push(this.tt);\r\n\r\n            switch (this.tt) {\r\n                case TokenType.keywordAutoincrement:\r\n                    this.nextToken();\r\n                    node.isAutoIncrement = true;\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.equal) {\r\n                        this.nextToken();\r\n                        this.expect(TokenType.integerConstant);\r\n                    } else {\r\n                        //@ts-ignore\r\n                        if (this.tt == TokenType.comma && this.ct[1].tt == TokenType.keywordAutoincrement) {\r\n                            this.nextToken();\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.keywordPrimary:\r\n                    if (primaryKeyAlreadyDefined) this.pushError(\"In einer Tabelle darf es nur einen einzigen primary key geben.\");\r\n                    this.nextToken(); // skip \"primary\"\r\n                    if (!this.expect(TokenType.keywordKey, true)) {\r\n                        this.addCompletionHintHere(false, false, [\"key\"]);\r\n                    } else {\r\n                        this.addCompletionHintHere(false, false, [\"autoincrement, \\n\"])\r\n                    }\r\n                    node.isPrimary = true;\r\n                    break;\r\n                case TokenType.keywordReferences:\r\n                    let fki: ForeignKeyInfo = { column: node.identifier, referencesColumn: \"\", referencesTable: \"\", referencesPosition: this.getCurrentPosition() };\r\n                    node.foreignKeyInfo = fki;\r\n                    this.parseReferences(fki);\r\n                    break;\r\n                case TokenType.keywordNot:\r\n                    this.nextToken();\r\n                    if (!this.expect(TokenType.keywordNull, true)) {\r\n                        this.addCompletionHintHere(false, false, [\"null\"]);\r\n                    } else {\r\n                        this.addCompletionHintHere(false, false, [\"references\"]);\r\n                    }\r\n                    node.notNull = true;\r\n                    break;\r\n                case TokenType.keywordCollate:\r\n                    this.nextToken();\r\n                    node.collate = <string>this.cct.value;\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordCharacter:\r\n                    this.nextToken();\r\n                    this.expect(TokenType.keywordSet, true);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordDefault:\r\n                    this.nextToken();\r\n\r\n                    if (this.ct[1].tt == TokenType.leftBracket && this.ct[2].tt == TokenType.rightBracket) {\r\n                        this.nextToken();\r\n                        this.nextToken();\r\n                        this.nextToken();\r\n                        break;\r\n                    }\r\n\r\n                    node.defaultValue = <string>this.cct.value;\r\n                    if (typeof this.cct.value == \"string\") {\r\n                        node.defaultValue = \"'\" + node.defaultValue + \"'\";\r\n                    }\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.keywordNull) {\r\n                        this.nextToken();\r\n                        break;\r\n                    } else if ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.stringConstant].indexOf(this.tt) >= 0) {\r\n                        let constantType = SQLBaseType.fromConstantType(this.tt);\r\n                        if (!constantType.canCastTo(type)) {\r\n                            this.pushError(\"Die Konstante hinter 'default' passt nicht zum Datentyp der Spalte.\");\r\n                        }\r\n                        this.nextToken();\r\n                    }\r\n                    break;\r\n                case TokenType.keywordComment:\r\n                    this.nextToken(); // Skip \"comment\"\r\n                    this.expect(TokenType.stringConstant, true);\r\n                    break;\r\n                case TokenType.keywordOn:\r\n                    this.nextToken();\r\n                    this.expect([TokenType.keywordUpdate], true);\r\n                    while (!this.comesToken([TokenType.comma, TokenType.endofSourcecode, TokenType.rightBracket])) this.nextToken();\r\n                    //@ts-ignore\r\n                    if (this.lastToken.tt == TokenType.leftBracket && this.tt == TokenType.rightBracket) this.nextToken();\r\n                    break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    parseInsert(): InsertNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"insert\"\r\n\r\n        this.expect(TokenType.keywordInto, true);\r\n\r\n        let node: InsertNode = {\r\n            type: TokenType.keywordInsert,\r\n            position: startPosition,\r\n            endPosition: this.getCurrentPosition(),\r\n            valuesPosition: null,\r\n            columnsPosition: null,\r\n            symbolTable: null,\r\n            columnList: [],\r\n            values: [],\r\n            table: null\r\n        }\r\n\r\n        if (this.tt == TokenType.identifier) {\r\n            node.table = {\r\n                type: TokenType.table,\r\n                identifier: <string>this.cct.value,\r\n                alias: null,\r\n                position: this.getCurrentPosition()\r\n            }\r\n            node.columnsPosition = { line: node.table.position.line, column: node.table.position.column + node.table.position.length, length: 0 };\r\n            this.nextToken();\r\n        } else {\r\n            this.pushError(\"Hier wird der Bezeichner einer Tabelle erwartet. Gefunden wurde: \" + this.cct.value, \"error\");\r\n        }\r\n\r\n        if (this.tt == TokenType.leftBracket) {\r\n\r\n            this.nextToken();\r\n            let first: boolean = true;\r\n            //@ts-ignore\r\n            while (first || this.tt == TokenType.comma) {\r\n\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.identifier) {\r\n                    node.columnList.push({\r\n                        type: TokenType.identifier,\r\n                        identifier: this.cct.value + \"\",\r\n                        position: this.getCurrentPosition()\r\n                    })\r\n\r\n                } else {\r\n                    this.pushError(\"Erwartet wird der Bezeichner einer Spalte. Gefunden wurde: \" + this.cct.value, \"error\");\r\n                }\r\n                this.nextToken();\r\n            }\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        }\r\n\r\n        node.valuesPosition = this.getCurrentPosition();\r\n        this.expect(TokenType.keywordValues, true);\r\n\r\n        this.parseValueLists(node.values);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n    parseValueLists(values: ConstantNode[][]) {\r\n        let insideListTokens = [TokenType.keywordNull, TokenType.charConstant, TokenType.stringConstant, TokenType.booleanConstant, TokenType.floatingPointConstant, TokenType.integerConstant];\r\n\r\n        let outerFirst: boolean = true;\r\n\r\n        while (outerFirst || this.tt == TokenType.comma) {\r\n            if (!outerFirst) {\r\n                this.nextToken(); // consume comma\r\n            }\r\n            outerFirst = false;\r\n            let leftBracketPosition = this.getCurrentPosition();\r\n            if (!this.expect(TokenType.leftBracket, true)) {\r\n                break;\r\n            }\r\n            let line: ConstantNode[] = [];\r\n            let first: boolean = true;\r\n            //@ts-ignore\r\n            while (first || this.tt == TokenType.comma) {\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n                if (this.tt == TokenType.identifier){\r\n                    if(this.cct.isDoubleQuotedIdentifier) {\r\n                        this.tt = TokenType.stringConstant\r\n                    } else if((this.cct.value + \"\").toLocaleLowerCase() == \"date\"){\r\n                        this.nextToken();\r\n                    }\r\n                } \r\n\r\n                \r\n\r\n                //@ts-ignore\r\n                if (insideListTokens.indexOf(this.tt) < 0) {\r\n                    this.pushError(\"Erwartet wird eine Konstante oder null. Gefunden wurde: \" + this.cct.value, \"error\");\r\n                    this.nextToken();\r\n                } else {\r\n                    line.push({\r\n                        constantType: this.tt,\r\n                        position: this.getCurrentPosition(),\r\n                        constant: this.cct.value,\r\n                        type: TokenType.constantNode\r\n                    });\r\n                    this.nextToken();\r\n                }\r\n            }\r\n            this.expect(TokenType.rightBracket, true);\r\n            if (line.length == 0) {\r\n                this.pushError(\"Eine Zeile kann nur dann in die Tabelle eingefügt werden, wenn sie mindestens einen Spaltenwert besitzt.\", \"error\", leftBracketPosition);\r\n            } else {\r\n                values.push(line);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    parseConstant(): ConstantNode {\r\n        let constantNode: ConstantNode = {\r\n            constantType: this.tt,\r\n            position: this.getCurrentPosition(),\r\n            constant: this.cct.value,\r\n            type: TokenType.constantNode\r\n        }\r\n        this.nextToken();\r\n\r\n        return constantNode;\r\n    }\r\n\r\n    parseSelect(): SelectNode {\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"select\"\r\n\r\n        let columnListStart: TextPosition = {\r\n            line: startPosition.line,\r\n            column: startPosition.column + 6,\r\n            length: 1\r\n        };\r\n\r\n        let node: SelectNode = {\r\n            type: TokenType.keywordSelect,\r\n            position: startPosition,\r\n            endPosition: this.getCurrentPosition(),\r\n            symbolTable: null,\r\n            columnList: [],\r\n            fromNode: null,\r\n            whereNode: null,\r\n            parentStatement: null\r\n        }\r\n\r\n        node.columnList = this.parseColumnList([TokenType.keywordFrom, TokenType.semicolon, TokenType.endofSourcecode], true);\r\n\r\n        let columnListKeywordArray = [\"distinct\", \"as\", \"*\"];\r\n        if (node.columnList.findIndex(c => c.type == TokenType.allColumns) >= 0) {\r\n            columnListKeywordArray.pop();\r\n        }\r\n\r\n        this.module.addCompletionHint(columnListStart, this.getCurrentPositionPlus(1), true, true, columnListKeywordArray)\r\n\r\n        let hasFrom = this.comesToken(TokenType.keywordFrom, true);\r\n        let fromListKeywordArray = [\"join\", \"left\", \"right\", \"inner\", \"outer\", \"natural\", \"on\", \"as\", \", \"];\r\n        // parse from ...\r\n        if (!hasFrom) {\r\n            columnListKeywordArray.unshift(\"from\");\r\n        } else {\r\n            node.fromStartPosition = { line: this.lastToken.position.line, column: this.lastToken.position.column + this.lastToken.position.length, length: 0 };\r\n\r\n            let dontHint: string[] = [];\r\n            node.fromNode = this.parseTableOrSubQuery(dontHint);\r\n\r\n            fromListKeywordArray.splice(fromListKeywordArray.indexOf(this.lastToken.value + \"\"), 1);\r\n\r\n            let hintEndPosition = this.getCurrentPositionPlus(2);\r\n            if (this.comesToken(TokenType.semicolon)) {\r\n                hintEndPosition = this.getCurrentPosition();\r\n            }\r\n\r\n            this.module.addCompletionHint(node.fromStartPosition, hintEndPosition, false, true, fromListKeywordArray, dontHint)\r\n            node.fromEndPosition = this.getCurrentPosition();\r\n        }\r\n\r\n        // parse where...\r\n\r\n        let whereKeywordArray = [\"like\"];\r\n        if (this.tt == TokenType.keywordWhere) {\r\n            let position = this.getCurrentPosition();\r\n            let whereStart = this.getCurrentPosition();\r\n            this.nextToken();\r\n            node.whereNode = this.parseTerm();\r\n            this.module.addCompletionHint(whereStart, this.getCurrentPositionPlus(4), true, true, whereKeywordArray)\r\n            // if (node.whereNode != null) node.whereNode.position = position;\r\n        } else {\r\n            fromListKeywordArray.push(\"where\");\r\n        }\r\n\r\n        let groupKeywordArray = [];\r\n        if (this.tt == TokenType.keywordGroup) {\r\n            let groupStart = this.getCurrentPosition();\r\n            node.groupByNode = this.parseGroupBy();\r\n            this.module.addCompletionHint(groupStart, this.getCurrentPosition(), true, true, groupKeywordArray);\r\n        } else {\r\n            whereKeywordArray.push(\"group by\");\r\n        }\r\n\r\n        if (this.tt == TokenType.keywordOrder) {\r\n            let orderStart = this.getCurrentPosition();\r\n            node.orderByNode = this.parseOrderBy();\r\n            this.module.addCompletionHint(orderStart, this.getCurrentPosition(), true, true, [\"asc\", \"desc\"]);\r\n        } else {\r\n            whereKeywordArray.push(\"order by\");\r\n            groupKeywordArray.push(\"order by\");\r\n        }\r\n\r\n        if (this.tt == TokenType.keywordLimit) {\r\n            node.limitNode = this.parseLimit();\r\n        }\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n        node.endPosition.column += 3;\r\n\r\n        return node;\r\n    }\r\n\r\n    parseLimit(): LimitNode {\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n        let numberOfRows: TermNode = this.parseTerm();\r\n        let ln: LimitNode = {\r\n            type: TokenType.keywordLimit,\r\n            position: position,\r\n            numberOfRows: numberOfRows\r\n        }\r\n        if (this.tt == TokenType.keywordOffset) {\r\n            this.nextToken();\r\n            ln.offset = this.parseTerm();\r\n        }\r\n        return ln;\r\n    }\r\n\r\n    parseGroupBy(): GroupByNode {\r\n        let position = this.getCurrentPosition();\r\n        this.expect(TokenType.keywordGroup, true);\r\n        this.expect(TokenType.keywordBy, true);\r\n        let gbn: GroupByNode = {\r\n            type: TokenType.keywordGroup,\r\n            columnList: [],\r\n            position: position\r\n        }\r\n        let tokenTypesAfterGroupBy = [TokenType.keywordHaving, TokenType.keywordSelect, TokenType.keywordOrder, TokenType.keywordLimit, TokenType.rightBracket, TokenType.semicolon];\r\n        gbn.columnList = this.parseColumnList(tokenTypesAfterGroupBy, false).map(columnNode => columnNode.term);\r\n        if (this.tt == TokenType.keywordHaving) {\r\n            this.nextToken();\r\n            gbn.having = this.parseTerm();\r\n        }\r\n        return gbn;\r\n    }\r\n\r\n    parseOrderBy(): OrderByNode[] {\r\n        this.expect(TokenType.keywordOrder, true);\r\n        this.expect(TokenType.keywordBy, true);\r\n\r\n        let obnList: OrderByNode[] = [];\r\n        let first: boolean = true;\r\n\r\n        do {\r\n            if (first) {\r\n                first = false;\r\n            } else {\r\n                this.expect(TokenType.comma, true);\r\n            }\r\n            let column: TermNode = this.parseTerm();\r\n            let obn: OrderByNode = {\r\n                type: TokenType.keywordOrder,\r\n                position: this.getCurrentPosition(),\r\n                column: column\r\n            }\r\n            if ([TokenType.keywordAscending, TokenType.keywordDescending].indexOf(this.tt) >= 0) this.nextToken();\r\n            if (this.tt == TokenType.keywordNulls) {\r\n                this.nextToken();\r\n                this.expect([TokenType.keywordFirst, TokenType.keywordLast], true);\r\n            }\r\n            obnList.push(obn);\r\n        } while (this.tt == TokenType.comma);\r\n\r\n        return obnList;\r\n    }\r\n\r\n    parseTableOrSubQuery(dontHint: string[]): TableOrSubqueryNode {\r\n\r\n        let leftSide: TableOrSubqueryNode = this.parseAtomicTableOrSubQuery(dontHint);\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        while (this.parseJoinOperator()) {\r\n\r\n            let rightSide: TableOrSubqueryNode = this.parseAtomicTableOrSubQuery(dontHint);\r\n\r\n            leftSide = {\r\n                type: TokenType.keywordJoin,\r\n                firstOperand: leftSide,\r\n                secondOperand: rightSide,\r\n                position: position,\r\n            }\r\n\r\n            if (this.tt == TokenType.keywordOn) {\r\n                leftSide.on = this.parseTerm();\r\n            }\r\n\r\n        }\r\n\r\n        return leftSide;\r\n\r\n    }\r\n\r\n    parseJoinOperator(): boolean {\r\n        if (this.tt == TokenType.comma) {\r\n            this.nextToken();\r\n            return true;\r\n        }\r\n        if (this.tt == TokenType.keywordNatural) this.nextToken();\r\n        switch (this.tt) {\r\n            case TokenType.keywordLeft:\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.keywordOuter) this.nextToken();\r\n                return this.expect(TokenType.keywordJoin, true);\r\n            case TokenType.keywordInner:\r\n            case TokenType.keywordCross:\r\n                this.nextToken();\r\n                return this.expect(TokenType.keywordJoin, true);\r\n            case TokenType.keywordJoin:\r\n                this.nextToken();\r\n                return true;\r\n            default: return false;\r\n        }\r\n    }\r\n\r\n    parseAtomicTableOrSubQuery(dontHint: string[]): TableOrSubqueryNode {\r\n\r\n        if (!this.expect([TokenType.identifier, TokenType.leftBracket], false)) {\r\n            return null;\r\n        }\r\n\r\n        if (this.tt == TokenType.leftBracket) {\r\n            this.nextToken();\r\n            let ret: TableOrSubqueryNode;\r\n            //@ts-ignore\r\n            if (this.tt == TokenType.keywordSelect) {\r\n                let position = this.getCurrentPosition();\r\n                let selectStatement = this.parseSelect();\r\n                ret = {\r\n                    type: TokenType.subquery,\r\n                    alias: null,\r\n                    position: position,\r\n                    query: selectStatement\r\n                }\r\n            } else {\r\n                ret = this.parseTableOrSubQuery(dontHint);\r\n            }\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n\r\n            //@ts-ignore\r\n            if (this.tt == TokenType.keywordAs && ret.type == TokenType.subquery) {\r\n                this.nextToken();\r\n                if (this.expect(TokenType.identifier, false)) {\r\n                    ret.alias = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    dontHint.push(ret.alias);\r\n                }\r\n            }\r\n\r\n            return ret;\r\n        }\r\n\r\n        if (this.tt == TokenType.identifier) {\r\n            let node: TableNode = {\r\n                type: TokenType.table,\r\n                identifier: <string>this.cct.value,\r\n                alias: null,\r\n                position: this.getCurrentPosition()\r\n            }\r\n            dontHint.push(node.identifier);\r\n            this.nextToken();\r\n\r\n            //@ts-ignore\r\n            if (this.tt == TokenType.keywordAs) {\r\n                this.nextToken();\r\n                if (this.expect(TokenType.identifier, false)) {\r\n                    node.alias = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    dontHint.push(node.alias);\r\n                }\r\n\r\n            }\r\n\r\n            return node;\r\n        }\r\n\r\n    }\r\n\r\n    parseColumnList(tokenTypesAfterListEnd: TokenType[], allowAliases: boolean): ColumnNode[] {\r\n        let columns: ColumnNode[] = [];\r\n\r\n        while ([TokenType.stringConstant, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.booleanConstant,\r\n        TokenType.identifier, TokenType.multiplication, TokenType.leftBracket].indexOf(this.tt) >= 0) {\r\n            if (this.tt == TokenType.multiplication) {\r\n                columns.push({\r\n                    term: null,\r\n                    alias: null,\r\n                    position: this.getCurrentPosition(),\r\n                    type: TokenType.allColumns\r\n                });\r\n                this.nextToken();\r\n            } else {\r\n                let columnTerm = this.parseTerm();\r\n                if (columnTerm != null) {\r\n                    let column: ColumnNode = {\r\n                        type: TokenType.column,\r\n                        term: columnTerm,\r\n                        position: columnTerm.position\r\n                    }\r\n                    columns.push(column);\r\n                    if (this.comesToken(TokenType.keywordAs)) {\r\n                        this.nextToken();\r\n                        if (this.expect(TokenType.identifier, false)) {\r\n                            column.alias = \"\" + this.cct.value;\r\n                        }\r\n                        this.nextToken();\r\n                    }\r\n                }\r\n            }\r\n            if (tokenTypesAfterListEnd.indexOf(this.tt) >= 0) {\r\n                break;\r\n            }\r\n            this.expect(TokenType.comma, true);\r\n        }\r\n\r\n        if (columns.length == 0) {\r\n            this.pushError(\"Es fehlt die kommaseparierte Liste der gewünschten Spalten.\", \"error\");\r\n        }\r\n\r\n        return columns;\r\n    }\r\n\r\n\r\n    parseTerm(): TermNode {\r\n        return this.parseTermBinary(0);\r\n    }\r\n\r\n    parseTermBinary(precedence: number): TermNode {\r\n\r\n        let left: TermNode;\r\n        if (precedence < Parser.operatorPrecedence.length - 1) {\r\n            left = this.parseTermBinary(precedence + 1);\r\n        } else {\r\n            left = this.parseUnary();\r\n        }\r\n\r\n        let operators = Parser.operatorPrecedence[precedence];\r\n\r\n        if (left == null || operators.indexOf(this.tt) < 0) {\r\n            return left;\r\n        }\r\n\r\n        let first = true;\r\n\r\n        while (first || operators.indexOf(this.tt) >= 0) {\r\n\r\n            let operator: TokenType = this.tt;\r\n\r\n            first = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            this.nextToken();\r\n            let right: TermNode;\r\n            if (precedence < Parser.operatorPrecedence.length - 1) {\r\n                right = this.parseTermBinary(precedence + 1);\r\n            } else {\r\n                right = this.parseUnary();\r\n            }\r\n\r\n            left = {\r\n                type: TokenType.binaryOp,\r\n                position: position,\r\n                operator: operator,\r\n                firstOperand: left,\r\n                secondOperand: right\r\n            };\r\n\r\n\r\n        }\r\n\r\n        return left;\r\n\r\n    }\r\n\r\n\r\n    // -, not, this, super, a.b.c[][].d, a.b(), b() (== this.b()), super.b(), super()\r\n    parseUnary(): TermNode {\r\n\r\n        let term: TermNode;\r\n        let position: TextPosition = this.getCurrentPosition();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n                return this.parseBracket();\r\n            case TokenType.minus:\r\n                // case TokenType.not:\r\n                position = position;\r\n                let tt1 = this.tt;\r\n                this.nextToken();\r\n                term = this.parseUnary();\r\n\r\n                return {\r\n                    type: TokenType.unaryOp,\r\n                    position: position,\r\n                    operand: term,\r\n                    operator: tt1\r\n                };\r\n\r\n            case TokenType.integerConstant:\r\n            case TokenType.charConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n                term = {\r\n                    type: TokenType.constantNode,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: this.tt,\r\n                    constant: this.cct.value\r\n                };\r\n                let isStringConstant = this.tt == TokenType.stringConstant;\r\n                this.nextToken();\r\n\r\n                if (isStringConstant) return this.parseDotOrArrayChains(term);\r\n\r\n                return term;\r\n            case TokenType.identifier: // attribute of current class or local variable\r\n\r\n                let identifier1 = <string>this.cct.value;\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    let rightBracketPosition = parameters.rightBracketPosition;\r\n\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position1,\r\n                        rightBracketPosition: rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        identifier: identifier1,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.identifier,\r\n                        identifier: identifier1,\r\n                        position: position\r\n                    }\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.dot) {\r\n                        let position = this.getCurrentPosition();\r\n                        this.nextToken();\r\n                        this.expect(TokenType.identifier, false);\r\n                        let secondIdentifier: IdentifierNode = {\r\n                            type: TokenType.identifier,\r\n                            identifier: <string>this.cct.value,\r\n                            position: this.getCurrentPosition()\r\n                        }\r\n                        this.nextToken();\r\n                        term = {\r\n                            type: TokenType.dot,\r\n                            identifierLeft: <IdentifierNode>term,\r\n                            identifierRight: secondIdentifier,\r\n                            position: position\r\n                        }\r\n\r\n                    } else if ([TokenType.isNull, TokenType.isNotNull].indexOf(this.tt) >= 0) {\r\n                        term = {\r\n                            type: TokenType.unaryOp,\r\n                            operand: term,\r\n                            operator: this.tt,\r\n                            position: position\r\n                        };\r\n                        this.nextToken();\r\n                    }\r\n                }\r\n\r\n                return term;\r\n            default:\r\n                this.pushError(\"Erwartet wird eine Variable, ein Methodenaufruf oder eine Konstante. Gefunden wurde: \" + this.cct.value);\r\n                return null;\r\n        }\r\n\r\n    }\r\n\r\n    parseList(): ListNode {\r\n        let node: ListNode = {\r\n            type: TokenType.list,\r\n            position: this.getCurrentPosition(),\r\n            elements: []\r\n        }\r\n\r\n        let constantTypes = [TokenType.charConstant, TokenType.stringConstant, TokenType.booleanConstant, TokenType.floatingPointConstant, TokenType.integerConstant];\r\n\r\n        while (constantTypes.indexOf(this.tt) >= 0) {\r\n            node.elements.push({\r\n                type: TokenType.constantNode,\r\n                constant: this.cct.value,\r\n                constantType: this.tt,\r\n                position: this.cct.position\r\n            });\r\n            this.nextToken();\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            }\r\n            this.nextToken();\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    parseBracket(): TermNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n        let tokenBeforeBracket = this.lastToken;\r\n        this.nextToken(); // consume (\r\n\r\n        if (this.tt == TokenType.keywordSelect) {\r\n            let selectNode = this.parseSelect();\r\n            this.expect(TokenType.rightBracket, true);\r\n            return selectNode;\r\n        } else if ([TokenType.comma, TokenType.rightBracket].indexOf(this.ct[1].tt) >= 0 &&\r\n            [TokenType.keywordIn, TokenType.keywordNotIn].indexOf(tokenBeforeBracket.tt) >= 0) {\r\n            let listNode = this.parseList();\r\n            this.expect(TokenType.rightBracket, true);\r\n            return listNode;\r\n        } else {\r\n            let term = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            let bracketsNode: BracketsNode = {\r\n                position: rightBracketPosition,\r\n                type: TokenType.rightBracket,\r\n                termInsideBrackets: term\r\n            }\r\n\r\n\r\n            return bracketsNode;\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    parseMethodCallParameters(): { rightBracketPosition: TextPosition, nodes: TermNode[], commaPositions: TextPosition[] } {\r\n        // Assumption: current token is (        \r\n        this.nextToken();\r\n        if (this.tt == TokenType.rightBracket) {\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n            return { rightBracketPosition: rightBracketPosition, nodes: [], commaPositions: [] };\r\n        }\r\n\r\n        let parameters: TermNode[] = [];\r\n        let commaPositions: TextPosition[] = [];\r\n\r\n        while (true) {\r\n            let pos = this.pos;\r\n\r\n            if (this.tt == TokenType.multiplication) {\r\n                this.nextToken();\r\n                parameters.push({\r\n                    type: TokenType.allColumns,\r\n                    position: this.getCurrentPosition(),\r\n                });\r\n            } else {\r\n                let parameter = this.parseTerm();\r\n                if (parameter != null) {\r\n                    parameters.push(parameter);\r\n                }\r\n            }\r\n\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            } else {\r\n                commaPositions.push(this.getCurrentPosition());\r\n                this.nextToken(); // consume comma\r\n            }\r\n\r\n            // emergency-step:\r\n            if (this.pos == pos) {\r\n                this.nextToken();\r\n            }\r\n\r\n        }\r\n\r\n        let position = this.getCurrentPosition();\r\n        let rightBracketFound = this.expect(TokenType.rightBracket, true);\r\n\r\n        return { rightBracketPosition: rightBracketFound ? position : null, nodes: parameters, commaPositions: commaPositions };\r\n\r\n    }\r\n\r\n    parseDotOrArrayChains(term: TermNode): TermNode {\r\n\r\n        if (term == null) return null;\r\n\r\n        while (this.comesToken([TokenType.dot, TokenType.leftSquareBracket])) {\r\n            if (this.tt == TokenType.dot) {\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.identifier) {\r\n                    this.pushError(\"Erwartet wird der Bezeichner eines Attributs oder einer Methode, gefunden wurde: \" + this.cct.value);\r\n                    return term;\r\n                }\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position,\r\n                        rightBracketPosition: parameters.rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        identifier: identifier,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                }\r\n                // else {\r\n                //     term = {\r\n                //         type: TokenType.pushAttribute,\r\n                //         position: position,\r\n                //         identifier: identifier,\r\n                //         object: term\r\n                //     }\r\n                // }\r\n\r\n            }\r\n        }\r\n\r\n        return term;\r\n    }\r\n\r\n\r\n}","import { ColumnStructure, TableStructure } from \"../../tools/DatabaseTools.js\";\r\nimport { SQLType, SQLBaseType, SQLDerivedType } from \"./SQLTypes.js\";\r\n\r\n\r\nexport class Column {\r\n\r\n    references: Column;\r\n    fromColumnStructure?: ColumnStructure;\r\n    notNull: boolean;\r\n\r\n    constructor(public identifier: string, public type: SQLType, public table: Table, public isPrimaryKey: boolean, public isNullable: boolean, public defaultValue: string, public isAutoIncrement){\r\n\r\n    }\r\n\r\n    static fromColumnStructure(cs: ColumnStructure, table: Table): Column {\r\n\r\n        let regex1 = /^(\\w*) *(?:\\((.*)\\))?.*$/;\r\n\r\n        let typeMatch1 = cs.completeTypeSQL.match(regex1);\r\n        let baseTypeIdentifier: string = typeMatch1[1];\r\n        let commaSeparatedParameters: string = typeMatch1[2];\r\n\r\n        let parameterValues: number[] = [];\r\n        if(commaSeparatedParameters != null){\r\n            parameterValues = commaSeparatedParameters.split(',').map(v => parseInt(v.trim()));           \r\n        }\r\n\r\n        let type: SQLType = SQLBaseType.getBaseType(baseTypeIdentifier);\r\n        if(parameterValues.length > 0 && type != null){\r\n            type = new SQLDerivedType(<SQLBaseType>type, parameterValues);\r\n        }\r\n\r\n        let column = new Column(cs.name, type, table, cs.isPrimaryKey, !cs.isPrimaryKey, cs.defaultValue, cs.isAutoIncrement);\r\n        column.notNull = cs.notNull;\r\n        \r\n        column.fromColumnStructure = cs;\r\n\r\n        return column;\r\n    }\r\n\r\n}\r\n\r\nexport class Table {\r\n    \r\n    public columns: Column[] = [];\r\n\r\n    public size: number;\r\n\r\n    constructor(public identifier: string){\r\n\r\n    }\r\n\r\n    private static fromTableStructure(ts: TableStructure): Table {\r\n        let table: Table = new Table(ts.name);\r\n        table.columns = ts.columns.map( column => Column.fromColumnStructure(column, table));\r\n        table.size = ts.size;\r\n        return table;\r\n    }\r\n\r\n    static fromTableStructureList(tsList: TableStructure[]): Table[]{\r\n\r\n        if(tsList == null) tsList = [];\r\n\r\n        let tables: Table[] = tsList.map(ts => Table.fromTableStructure(ts));\r\n\r\n        let columnStructureToColumnMap: Map<ColumnStructure, Column> = new Map();\r\n        for(let table of tables){\r\n            for(let column of table.columns){\r\n                columnStructureToColumnMap.set(column.fromColumnStructure, column);\r\n            }\r\n        }\r\n\r\n        for(let table of tables){\r\n            for(let column of table.columns){\r\n                let referencedCs = column.fromColumnStructure.references;\r\n                if(referencedCs != null){\r\n                    let referencedColumn = columnStructureToColumnMap.get(referencedCs);\r\n                    column.references = referencedColumn;\r\n                }\r\n            }\r\n        }\r\n\r\n        return tables;\r\n    }\r\n\r\n}","import { DatabaseStructure } from \"../../tools/DatabaseTools.js\";\r\nimport { TextPosition } from \"../lexer/Token.js\";\r\nimport { Table, Column } from \"./SQLTable.js\";\r\n\r\nexport type Symbol = {\r\n    identifier: string;\r\n    table?: Table;\r\n    column?: Column;\r\n    tableAlias?: string;\r\n    posOfDefinition: TextPosition;\r\n    referencedOnPositions: TextPosition[];\r\n}\r\n\r\nexport class SymbolTable {\r\n    parent: SymbolTable; // SymbolTable of parent scope\r\n    positionFrom: TextPosition;\r\n    positionTo: TextPosition;\r\n\r\n    childSymbolTables: SymbolTable[] = [];\r\n\r\n    private symbols: Map<string, Symbol[]> = new Map();\r\n    symbolList: Symbol[] = [];\r\n\r\n    constructor(parentSymbolTable: SymbolTable, positionFrom: TextPosition, positionTo: TextPosition) {\r\n\r\n        this.parent = parentSymbolTable;\r\n\r\n        this.positionFrom = positionFrom;\r\n        this.positionTo = positionTo;\r\n\r\n\r\n        if (this.parent != null) {\r\n            this.parent.childSymbolTables.push(this);\r\n        }\r\n    }\r\n\r\n    extractDatabaseStructure(databaseStructure: DatabaseStructure) {\r\n        for (let table of Table.fromTableStructureList(databaseStructure?.tables)) {\r\n\r\n            this.storeTableSymbols(table);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    storeTableSymbols(table: Table){\r\n        this.storeSymbol({\r\n            identifier: table.identifier,\r\n            posOfDefinition: null,\r\n            referencedOnPositions: [],\r\n            table: table\r\n        });\r\n\r\n        for (let column of table.columns) {\r\n            this.storeSymbol({\r\n                identifier: column.identifier,\r\n                posOfDefinition: null,\r\n                referencedOnPositions: [],\r\n                column: column\r\n            });\r\n        }\r\n    }\r\n\r\n    storeSymbol(symbol: Symbol) {\r\n        let list: Symbol[] = this.symbols.get(symbol.identifier);\r\n        if (list == null) {\r\n            list = [symbol];\r\n            this.symbols.set(symbol.identifier.toLowerCase(), list);\r\n        } else {\r\n            list.push(symbol);\r\n        }\r\n        this.symbolList.push(symbol);\r\n    }\r\n\r\n    findTableAtPosition(line: number, column: number): SymbolTable {\r\n\r\n        if (!this.containsPosition(line, column)) {\r\n            return null;\r\n        }\r\n\r\n        let shortestSymbolTableContainingPosition = null;\r\n        let shortestPosition = 10000000;\r\n\r\n        for (let st of this.childSymbolTables) {\r\n            if (st.containsPosition(line, column)) {\r\n                let st1 = st.findTableAtPosition(line, column);\r\n                if (st1.positionTo.line - st1.positionFrom.line < shortestPosition) {\r\n                    shortestSymbolTableContainingPosition = st1;\r\n                    shortestPosition = st1.positionTo.line - st1.positionFrom.line;\r\n                }\r\n            }\r\n            // if(st.containsPosition(line, column) && st.positionTo.line - st.positionFrom.line < shortestPosition){\r\n            //     shortestSymbolTableContainingPosition = st;\r\n            //     shortestPosition = st.positionTo.line - st.positionFrom.line;\r\n            // }\r\n        }\r\n\r\n        if (shortestSymbolTableContainingPosition != null) {\r\n            return shortestSymbolTableContainingPosition;\r\n        } else {\r\n            return this;\r\n        }\r\n\r\n    }\r\n\r\n    containsPosition(line: number, column: number) {\r\n        if (line < this.positionFrom.line || line > this.positionTo.line) {\r\n            return false;\r\n        }\r\n\r\n        if (line == this.positionFrom.line && column < this.positionFrom.column) return false;\r\n        if (line == this.positionTo.line && column > this.positionTo.column + 1) return false;\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    findTable(identifier: string): Table {\r\n        let tables = this.findTables(identifier);\r\n        if(tables.length == 0) return null;\r\n        return tables[0].table;\r\n    }\r\n\r\n    findTables(identifier: string): Symbol[] {\r\n\r\n        let symbolTable: SymbolTable = this;\r\n        while(symbolTable != null){\r\n\r\n            let symbols = symbolTable.symbols.get(identifier.toLowerCase());\r\n            if(symbols != null){\r\n                symbols = symbols.filter(s => s.table != null);\r\n                if(symbols.length > 0){\r\n                    return symbols;\r\n                }\r\n            }\r\n\r\n            symbolTable = symbolTable.parent;\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    findColumn(identifier: string): Symbol[] {\r\n\r\n        let symbolTable: SymbolTable = this;\r\n        while(symbolTable != null){\r\n\r\n            let symbols = symbolTable.symbols.get(identifier.toLowerCase());\r\n            if(symbols != null){\r\n                symbols = symbols.filter(s => s.column != null);\r\n                if(symbols.length > 0){\r\n                    return symbols;\r\n                }\r\n            }\r\n\r\n            symbolTable = symbolTable.parent;\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { SQLBaseType, SQLType } from \"./SQLTypes.js\";\r\n\r\nexport class SQLMethodParameter {\r\n    type: SQLType;\r\n    constructor(public identifier: string, type: string){\r\n        this.type = SQLBaseType.getBaseType(type);\r\n    }\r\n}\r\n\r\nexport class SQLMethod {\r\n    acceptsStarParameter: boolean = false;\r\n    public returnType: SQLType;\r\n    constructor(public identifier: string, public isAggregating: boolean, returnType: string, public parameters: SQLMethodParameter[]){\r\n        this.returnType = SQLBaseType.getBaseType(returnType);\r\n    }\r\n\r\n}\r\n\r\nexport class SQLMethodStore {\r\n\r\n    static instance: SQLMethodStore;\r\n    public methods: SQLMethod[] = [];\r\n\r\n    static getInstance():SQLMethodStore {\r\n        if(this.instance == null){\r\n            this.instance = new SQLMethodStore();\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    constructor(){\r\n        this.pushOneParameterMethod(\"max\" ,\"integer\", \"integer\");\r\n        this.pushOneParameterMethod(\"max\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"min\" ,\"integer\", \"integer\");\r\n        this.pushOneParameterMethod(\"min\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"avg\" ,\"integer\", \"integer\");\r\n        this.pushOneParameterMethod(\"avg\" ,\"float\", \"float\");\r\n\r\n        let countMethod = new SQLMethod(\"count\", true, \"integer\", [new SQLMethodParameter(\"spalte\", \"text\")]);\r\n        countMethod.acceptsStarParameter = true;\r\n        this.methods.push(countMethod);\r\n    }\r\n    \r\n    getMethods(identifier: string){\r\n        return this.methods.filter(m => m.identifier == identifier.toLowerCase());\r\n    }\r\n\r\n\r\n    pushOneParameterMethod(identifier: string, returnType: string, parameterType: string){\r\n        this.methods.push(new SQLMethod(identifier, true, returnType, [new SQLMethodParameter(\"spalte\", parameterType)]));\r\n\r\n    }\r\n}","export function hash(s: string){\r\n    let hash: number = 0;\r\n    let chr: number;\r\n    for (let i = 0; i < s.length; i++) {\r\n      chr   = s.charCodeAt(i);\r\n      hash  = ((hash << 5) - hash) + chr;\r\n      hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n\r\nexport function escapeHtml(unsafe: string): string {\r\n  return unsafe\r\n      .replace(/['\"]+/g, '')\r\n       .replace(/&/g, \"&amp;\")\r\n       .replace(/</g, \"&lt;\")\r\n       .replace(/>/g, \"&gt;\")\r\n       .replace(/\"/g, \"&quot;\")\r\n       .replace(/'/g, \"&#039;\");\r\n}\r\n\r\nexport function dateToString(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth() + 1)}.${date.getFullYear()}, ${twoDez(date.getHours())}:${twoDez(date.getMinutes())}`;\r\n}\r\n\r\nexport function dateToStringWithoutTime(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth())}.${date.getFullYear()}`;\r\n}\r\n\r\nfunction twoDez(z: number):string {\r\n  if(z < 10) return \"0\" + z;\r\n  return \"\" + z;\r\n}\r\n\r\nexport function stringToDate(text: string): Date {\r\n\r\n  let match = text.match(/^(\\d{2})\\.(\\d{2})\\.(\\d{4}), (\\d{2}):(\\d{2})$/);\r\n\r\n  let date: Date = new Date(Number.parseInt(match[3]), Number.parseInt(match[2]), Number.parseInt(match[1]), Number.parseInt(match[4]), Number.parseInt(match[5]) );\r\n\r\n  return date;\r\n}\r\n\r\nexport function stringWrap(s: string, length: number ): string{\r\n  return s.replace(\r\n    new RegExp(`(?![^\\\\n]{1,${length}}$)([^\\\\n]{1,${length}})\\\\s`, 'g'), '$1\\n'\r\n  );\r\n} \r\n\r\nexport function formatAsJavadocComment(s: string, indent: number|string = \"\"): string {\r\n  let indentString = \"\";\r\n\r\n  if(typeof indent == \"string\"){\r\n    indentString = indent;\r\n  } else {\r\n    for(let i = 0; i < indent; i++){\r\n      indentString += \" \";\r\n    }\r\n  }\r\n\r\n  s = stringWrap(s, 60);\r\n  if(s.length > 0) s = \"\\n\" + s;\r\n  s = indentString + \"/**\" + s.replace(/\\n/g, \"\\n\" + indentString + \" * \") + \"\\n\" + indentString + \" */\";\r\n  return s;\r\n}\r\n\r\n\r\nexport function isDate(inputText: string) {\r\n\r\n      if (inputText == null || typeof inputText != 'string') return false;\r\n\r\n      // var dateformat = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/;\r\n      var dateformat = /^\\d{4}[\\/\\-](0?[1-9]|1[012])[\\/\\-](0?[1-9]|[12][0-9]|3[01])$/;\r\n      // Match the date format through regular expression\r\n      if (inputText.match(dateformat)) {\r\n          //Test which seperator is used '/' or '-'\r\n          var opera1 = inputText.split('/');\r\n          var opera2 = inputText.split('-');\r\n          var lopera1 = opera1.length;\r\n          var lopera2 = opera2.length;\r\n          // Extract the string into month, date and year\r\n          if (lopera1 > 1) {\r\n              var pdate = inputText.split('/');\r\n          }\r\n          else if (lopera2 > 1) {\r\n              var pdate = inputText.split('-');\r\n          }\r\n          if (pdate.length != 3) return false;\r\n          var dd = parseInt(pdate[2]);\r\n          var mm = parseInt(pdate[1]);\r\n          var yy = parseInt(pdate[0]);\r\n          // Create list of days of a month [assume there is no leap year by default]\r\n          var ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n          if (mm == 1 || mm > 2) {\r\n              if (dd > ListofDays[mm - 1]) {\r\n                  return false;\r\n              }\r\n          }\r\n          if (mm == 2) {\r\n              var lyear = false;\r\n              if ((!(yy % 4) && yy % 100) || !(yy % 400)) {\r\n                  lyear = true;\r\n              }\r\n              if ((lyear == false) && (dd >= 29)) {\r\n                  return false;\r\n              }\r\n              if ((lyear == true) && (dd > 29)) {\r\n                  return false;\r\n              }\r\n              return true;\r\n          }\r\n\r\n          return true;\r\n\r\n      }\r\n      else {\r\n          return false;\r\n      }\r\n  }\r\n\r\n  export function isDateTime(inputText: string) {\r\n\r\n      if (inputText == null || typeof inputText != 'string') return false;\r\n\r\n      // var dateformat = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/;\r\n      var dateformat = /^\\d{4}[\\-](0[1-9]|1[012])[\\-](0[1-9]|[12][0-9]|3[01]) ([01][1-9]|2[0123]):([0-5][0-9]):([0-5][0-9])$/;\r\n      // Match the date format through regular expression\r\n      if (inputText.match(dateformat)) {\r\n          var splitStr = inputText.split(' ');\r\n          var dateStr = splitStr[0];\r\n          //var timeStr = splitStr[1];\r\n\r\n          if (dateStr.length != 10) return false;\r\n          var dd = parseInt(dateStr.substring(8,10));\r\n          var mm = parseInt(dateStr.substring(5, 7));\r\n          var yy = parseInt(dateStr.substring(0, 4));\r\n          // Create list of days of a month [assume there is no leap year by default]\r\n          var ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n          if (mm == 1 || mm > 2) {\r\n              if (dd > ListofDays[mm - 1]) {\r\n                  return false;\r\n              }\r\n          }\r\n          if (mm == 2) {\r\n              var lyear = false;\r\n              if ((!(yy % 4) && yy % 100) || !(yy % 400)) {\r\n                  lyear = true;\r\n              }\r\n              if ((lyear == false) && (dd >= 29)) {\r\n                  return false;\r\n              }\r\n              if ((lyear == true) && (dd > 29)) {\r\n                  return false;\r\n              }\r\n              return true;\r\n          }\r\n\r\n          return true;\r\n\r\n      }\r\n      else {\r\n          return false;\r\n      }\r\n  }\r\n","import { DatabaseTool } from \"../../tools/DatabaseTools.js\";\r\nimport { TextPosition, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { CompletionHint, Module } from \"./Module.js\";\r\nimport { Symbol, SymbolTable } from \"./SymbolTable.js\";\r\nimport { AlterTableNode, ASTNode, BinaryOpNode, CreateTableNode, DeleteNode, DotNode, DropTableNode, IdentifierNode, InsertNode, MethodcallNode, SelectNode, TableOrSubqueryNode, TermNode, UpdateNode } from \"./Ast.js\";\r\nimport { Error, ErrorLevel, QuickFix } from \"../lexer/Lexer.js\";\r\nimport { Column, Table } from \"./SQLTable.js\";\r\nimport { SQLBaseType, SQLType } from \"./SQLTypes.js\";\r\nimport { SQLMethodStore } from \"./SQLMethods.js\";\r\nimport { isDate, isDateTime } from \"../../tools/StringTools.js\";\r\n\r\n\r\nexport class SymbolResolver {\r\n\r\n    symbolTableStack: SymbolTable[] = [];\r\n    errorList: Error[];\r\n    module: Module;\r\n    databaseTool: DatabaseTool;\r\n    tables: Table[];\r\n\r\n    constructor(databaseTool: DatabaseTool) {\r\n        this.databaseTool = databaseTool;\r\n        this.tables = Table.fromTableStructureList(databaseTool.databaseStructure?.tables);\r\n    }\r\n\r\n    start(module: Module) {\r\n        this.module = module;\r\n        this.symbolTableStack = [];\r\n        this.errorList = [];\r\n\r\n        module.mainSymbolTable = new SymbolTable(null, { column: 0, line: 0, length: 0 }, { column: 0, line: 100000, length: 0 })\r\n\r\n        this.symbolTableStack.push(module.mainSymbolTable);\r\n\r\n        for (let statement of this.module.sqlStatements) {\r\n\r\n            let errorsBeforeStatement = this.errorList.length;\r\n\r\n            let astNode = statement.ast;\r\n            if (astNode == null) continue;\r\n\r\n            switch (astNode.type) {\r\n                case TokenType.keywordSelect:\r\n                    this.resolveSelect(astNode);\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n                case TokenType.keywordInsert:\r\n                    this.resolveInsert(astNode);\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n                case TokenType.keywordCreate:\r\n                    this.resolveCreateTable(astNode);\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n                case TokenType.keywordUpdate:\r\n                    this.resolveUpdate(astNode);\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n                case TokenType.keywordDelete:\r\n                    this.resolveDelete(astNode);\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n                case TokenType.keywordDrop:\r\n                    this.resolveDropTable(astNode);\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n                case TokenType.keywordAlter:\r\n                    this.resolveAlterTable(astNode)\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n\r\n                default:\r\n                    break;\r\n            }\r\n\r\n            statement.hasErrors = statement.hasErrors || this.errorList.length > errorsBeforeStatement;\r\n\r\n        }\r\n\r\n        module.errors[2] = this.errorList;\r\n\r\n    }\r\n\r\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position: TextPosition, quickFix?: QuickFix) {\r\n        // if (position == null) position = Object.assign({}, this.position);\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n\r\n    getCurrentSymbolTable(): SymbolTable {\r\n        return this.symbolTableStack[this.symbolTableStack.length - 1];\r\n    }\r\n\r\n    pushNewSymbolTable(positionFrom: TextPosition, positionTo: TextPosition): SymbolTable {\r\n        if(positionTo == null) {\r\n            positionTo = {\r\n                line: 100000,\r\n                column: 1,\r\n                length: 1\r\n            }\r\n        };\r\n        let st: SymbolTable = new SymbolTable(this.getCurrentSymbolTable(), positionFrom, positionTo);\r\n        this.symbolTableStack.push(st);\r\n        return st;\r\n    }\r\n\r\n    resolveSelect(selectNode: SelectNode): Table {\r\n        let resultTable: Table = new Table(null);\r\n\r\n        selectNode.symbolTable = this.pushNewSymbolTable(selectNode.position, selectNode.endPosition);\r\n\r\n        // From\r\n        let joinedTables: Table[] = [];\r\n        this.resolveTableOrSubQuery(selectNode.fromNode, joinedTables);\r\n        if (selectNode.fromStartPosition != null) {\r\n            let fromSymbolTable = new SymbolTable(this.getCurrentSymbolTable(), selectNode.fromStartPosition, selectNode.fromEndPosition);\r\n            fromSymbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n        }\r\n\r\n        // Column list\r\n        for (let columnNode of selectNode.columnList) {\r\n            if (columnNode.type == TokenType.allColumns) {\r\n                for (let table of joinedTables) {\r\n                    for (let column of table.columns) {\r\n                        let c: Column = new Column(column.identifier, column.type, resultTable, false, true, column.defaultValue, column.isAutoIncrement);\r\n                        resultTable.columns.push(c);\r\n                    }\r\n                }\r\n            } else {\r\n                this.resolveTerm(columnNode.term);\r\n                let c1: Column = new Column(columnNode.alias, columnNode.term.sqlType, resultTable, false, true, null, false);\r\n                resultTable.columns.push(c1);\r\n                if (c1.identifier != null) {\r\n                    selectNode.symbolTable.storeSymbol({\r\n                        identifier: c1.identifier,\r\n                        posOfDefinition: columnNode.term.position,\r\n                        referencedOnPositions: [],\r\n                        column: c1\r\n                    })\r\n                }\r\n            }\r\n        }\r\n\r\n        // where...\r\n        if (selectNode.whereNode != null) {\r\n            let whereType = this.resolveTerm(selectNode.whereNode);\r\n            if (whereType != null && whereType.getBaseTypeName() != \"boolean\") {\r\n                this.pushError(\"Das Ergebnis des where-Teils einer select-Anweisung muss vom Typ boolean sein.\", \"error\", selectNode.whereNode.position);\r\n            }\r\n        }\r\n\r\n\r\n        // TODO: group by, order by\r\n\r\n        return resultTable;\r\n    }\r\n\r\n    resolveDropTable(node: DropTableNode) {\r\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\r\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n\r\n        if (node.tableIdentifier == null) return;\r\n\r\n        if(!node.ifExists){\r\n            let table = node.symbolTable.findTable(node.tableIdentifier);\r\n            if (table == null) this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\r\n        }\r\n\r\n    }\r\n\r\n    resolveDelete(node: DeleteNode) {\r\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\r\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n\r\n        if (node.tableIdentifier == null) return;\r\n\r\n        let table = node.symbolTable.findTable(node.tableIdentifier);\r\n        if (table == null) this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\r\n\r\n\r\n        // if(node.whereNodeBegin != null){\r\n        //     let symbolTable = this.pushNewSymbolTable(node.whereNodeBegin, node.whereNodeEnd);\r\n        //     symbolTable.storeTableSymbols(table);\r\n        // }\r\n\r\n\r\n        if (node.whereNode != null) {\r\n            let whereSymbolTable = this.pushNewSymbolTable(node.whereNodeBegin, node.whereNodeEnd);\r\n            if(table != null) whereSymbolTable.storeTableSymbols(table);\r\n            this.resolveTerm(node.whereNode);\r\n            this.symbolTableStack.pop();\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    resolveAlterTable(node: AlterTableNode) {\r\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\r\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n\r\n        if (node.tableIdentifier == null) {\r\n            return;\r\n        }\r\n\r\n        let table = node.symbolTable.findTable(node.tableIdentifier);\r\n        if (table == null) {\r\n            this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\r\n        }\r\n\r\n        let oldColumn: Column = null;\r\n        if (node.oldColumnName != null) {\r\n            oldColumn = table.columns.find(c => c.identifier.toLocaleLowerCase() == node.oldColumnName.toLocaleLowerCase());\r\n            if (oldColumn == null) {\r\n                this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" hat keine Spalte mit dem Bezeichner \" + node.oldColumnName, \"error\", node.oldColumnPosition);\r\n            }\r\n        }\r\n\r\n        switch (node.kind) {\r\n            case \"dropColumn\":\r\n                // nothing to do as node.oldColumnName is checked above\r\n                break;\r\n            case \"addColumn\":\r\n                let columnNode = node.columnDef;\r\n                if (columnNode == null) break;\r\n                if (columnNode.foreignKeyInfo != null && columnNode.baseType != null) {\r\n                    let fki = columnNode.foreignKeyInfo;\r\n                    let tables = this.getCurrentSymbolTable().findTables(fki.referencesTable);\r\n                    if (tables.length == 1) {\r\n                        let table = tables[0].table;\r\n                        let column = table.columns.find(c => c.identifier == fki.referencesColumn);\r\n                        if (column != null && column.type != null) {\r\n                            if (!column.isPrimaryKey) {\r\n                                this.pushError(\"Die referenzierte Spalte \" + fki.referencesTable + \".\" + fki.referencesColumn + \" ist kein Primärschlüssel.\", \"warning\", columnNode.referencesPosition);\r\n                            }\r\n                            if (!column.type.canCastTo(columnNode.baseType)) {\r\n                                this.pushError(\"Der Datentyp \" + columnNode.baseType.toString() + \" der Spalte \" + columnNode.identifier +\r\n                                    \" kann nich in den Datentyp \" + column.type.toString() + \" der referenzierten Spalte \" + table.identifier + \".\" +\r\n                                    column.identifier + \" umgewandelt werden.\", \"error\", columnNode.referencesPosition);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            case \"renameColumn\":\r\n                // nothing to do as node.oldColumnName is checked above\r\n                break;\r\n            case \"renameTable\":\r\n                // nothing to do \r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    resolveUpdate(node: UpdateNode) {\r\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\r\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n\r\n        if (node.tableIdentifier == null) {\r\n            return;\r\n        }\r\n\r\n        let table = node.symbolTable.findTable(node.tableIdentifier);\r\n        if (table == null) this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\r\n\r\n        for (let i = 0; i < node.columnIdentifiers.length; i++) {\r\n            let ci = node.columnIdentifiers[i];\r\n            let ciPos = node.columnIdentifierPositions[i];\r\n            let value = node.values[i];\r\n\r\n            if (ci == null) continue;\r\n            let column = table.columns.find(c => c.identifier == ci);\r\n\r\n            if (column == null) {\r\n                this.pushError(ci + \" ist kein Bezeichner einer Spalte der Tabelle \" + node.tableIdentifier + \".\", \"error\", ciPos);\r\n            }\r\n\r\n            if (value == null) continue;\r\n            let symbolTable = this.pushNewSymbolTable(node.valuePosBegin[i], node.valuePosEnd[i]);\r\n            symbolTable.storeTableSymbols(table);\r\n            this.resolveTerm(value);\r\n            this.symbolTableStack.pop();\r\n\r\n        }\r\n\r\n        if (node.whereNodeBegin != null) {\r\n            let symbolTable = this.pushNewSymbolTable(node.whereNodeBegin, node.whereNodeEnd);\r\n            symbolTable.storeTableSymbols(table);\r\n        }\r\n\r\n        if (node.whereNode != null) {\r\n            this.resolveTerm(node.whereNode);\r\n        }\r\n        this.symbolTableStack.pop();\r\n\r\n    }\r\n\r\n\r\n\r\n    resolveCreateTable(createTableNode: CreateTableNode) {\r\n\r\n        createTableNode.symbolTable = this.pushNewSymbolTable(createTableNode.position, createTableNode.endPosition);\r\n        createTableNode.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n\r\n        let thisTable: Table = {\r\n            identifier: createTableNode.identifier,\r\n            columns: null,\r\n            size: 0\r\n        }\r\n\r\n        thisTable.columns = createTableNode.columnList.map(c => {\r\n            return {\r\n                identifier: c.identifier,\r\n                isNullable: false,\r\n                isPrimaryKey: c.isPrimary,\r\n                isAutoIncrement: c.isAutoIncrement,\r\n                notNull: false,\r\n                references: null,\r\n                table: thisTable,\r\n                type: c.baseType,\r\n                defaultValue: c.defaultValue\r\n            }\r\n        });\r\n\r\n        createTableNode.symbolTable.storeTableSymbols(thisTable);\r\n\r\n        for (let columnNode of createTableNode.columnList) {\r\n            if (createTableNode.columnList.filter(c => c.identifier.toLocaleLowerCase() == columnNode.identifier.toLocaleLowerCase()).length > 1) {\r\n                this.pushError(\"Der Spaltenbezeichner \" + columnNode.identifier + \" darf in einer Tabelle nur ein einziges Mal verwendet werden\", \"error\", columnNode.position);\r\n            }\r\n\r\n            if (columnNode.foreignKeyInfo != null && columnNode.baseType != null) {\r\n                let fki = columnNode.foreignKeyInfo;\r\n                let tables = this.getCurrentSymbolTable().findTables(fki.referencesTable);\r\n                if (tables.length == 1) {\r\n                    let table = tables[0].table;\r\n                    let column = table.columns.find(c => c.identifier == fki.referencesColumn);\r\n                    if (column != null && column.type != null) {\r\n                        if (!column.isPrimaryKey) {\r\n                            this.pushError(\"Die referenzierte Spalte \" + fki.referencesTable + \".\" + fki.referencesColumn + \" ist kein Primärschlüssel.\", \"warning\", columnNode.referencesPosition);\r\n                        }\r\n                        if (!column.type.canCastTo(columnNode.baseType)) {\r\n                            this.pushError(\"Der Datentyp \" + columnNode.baseType.toString() + \" der Spalte \" + columnNode.identifier +\r\n                                \" kann nich in den Datentyp \" + column.type.toString() + \" der referenzierten Spalte \" + table.identifier + \".\" +\r\n                                column.identifier + \" umgewandelt werden.\", \"error\", columnNode.referencesPosition);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        for (let fki of createTableNode.foreignKeyInfoList) {\r\n\r\n            let columnNode = createTableNode.columnList.find(cn => cn.identifier == fki.column);\r\n            if (columnNode == null) continue;\r\n\r\n            let tables = this.getCurrentSymbolTable().findTables(fki.referencesTable);\r\n            if (tables.length == 1) {\r\n                let table = tables[0].table;\r\n                let column = table.columns.find(c => c.identifier == fki.referencesColumn);\r\n                if (column != null && column.type != null) {\r\n                    if (!column.isPrimaryKey) {\r\n                        this.pushError(\"Die referenzierte Spalte \" + fki.referencesTable + \".\" + fki.referencesColumn + \" ist kein Primärschlüssel.\", \"warning\", fki.referencesPosition);\r\n                    }\r\n                    if (!column.type.canCastTo(columnNode.baseType)) {\r\n                        this.pushError(\"Der Datentyp \" + columnNode.baseType.toString() + \" der Spalte \" + columnNode.identifier +\r\n                            \" kann nich in den Datentyp \" + column.type.toString() + \" der referenzierten Spalte \" + table.identifier + \".\" +\r\n                            column.identifier + \" umgewandelt werden.\", \"error\", fki.referencesPosition);\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    resolveTableOrSubQuery(tosNode: TableOrSubqueryNode, joinedTables: Table[]) {\r\n        if (tosNode == null) return;\r\n\r\n        switch (tosNode.type) {\r\n            case TokenType.table:\r\n                let tableList = this.tables.filter(t => t.identifier.toLowerCase() == tosNode.identifier.toLowerCase());\r\n                if (tableList.length == 0) {\r\n                    this.pushError(tosNode.identifier + \" ist nicht der Name einer Tabelle.\", \"error\", tosNode.position);\r\n                } else if (tableList.length > 1) {\r\n                    this.pushError(\"Der Bezeichner \" + tosNode.identifier + \" ist hier nicht eindeutig.\", \"error\", tosNode.position);\r\n                } else {\r\n                    let table: Table = tableList[0];\r\n                    joinedTables.push(table);\r\n                    this.storeTableIntoSymbolTable(table, tosNode.position, tosNode.alias);\r\n                }\r\n\r\n                break;\r\n\r\n            case TokenType.keywordJoin:\r\n                this.resolveTableOrSubQuery(tosNode.firstOperand, joinedTables);\r\n                this.resolveTableOrSubQuery(tosNode.secondOperand, joinedTables);\r\n                break;\r\n\r\n            case TokenType.subquery:\r\n                tosNode.table = this.resolveSelect(tosNode.query);\r\n                joinedTables.push(tosNode.table);\r\n                if (tosNode.alias != null) {\r\n                    tosNode.table.identifier = tosNode.alias;\r\n                    this.storeTableIntoSymbolTable(tosNode.table, tosNode.position);\r\n                }\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    storeTableIntoSymbolTable(table: Table, position: TextPosition, alias?: string) {\r\n        let symbolTable = this.getCurrentSymbolTable();\r\n        symbolTable.storeSymbol({\r\n            identifier: alias == null ? table.identifier.toLowerCase() : alias.toLowerCase(),\r\n            posOfDefinition: position,\r\n            table: table,\r\n            referencedOnPositions: []\r\n        });\r\n        for (let column of table.columns) {\r\n            symbolTable.storeSymbol({\r\n                identifier: column.identifier.toLowerCase(),\r\n                posOfDefinition: null,\r\n                column: column,\r\n                tableAlias: alias,\r\n                referencedOnPositions: []\r\n            });\r\n        }\r\n    }\r\n\r\n    resolveTerm(node: TermNode): SQLType {\r\n        if (node == null) return null;\r\n\r\n        switch (node.type) {\r\n            case TokenType.binaryOp:\r\n                if ([TokenType.keywordIn, TokenType.keywordNotIn].indexOf(node.operator) >= 0) {\r\n                    return this.resolveNotIn(node);\r\n                }\r\n\r\n                let typeLeft = this.resolveTerm(node.firstOperand);\r\n                let typeRight = this.resolveTerm(node.secondOperand);\r\n                if (typeLeft != null && typeRight != null) {\r\n                    let resultType = typeLeft.getBinaryResultType(node.operator, typeRight);\r\n                    if (resultType == null) {\r\n                        this.pushError(\"Der Operator \" + TokenTypeReadable[node.operator] + \" ist für die Datentypen \" + typeLeft.toString() + \" und \" + typeRight.toString() + \" nicht definiert.\", \"error\", node.position);\r\n                    }\r\n                    return resultType;\r\n                } else {\r\n                    return null;\r\n                }\r\n                break;\r\n            case TokenType.unaryOp:\r\n                let operandType = this.resolveTerm(node.operand);\r\n                if (operandType != null) {\r\n                    let resultType1 = operandType.getUnaryResultType(node.operator);\r\n                    if (resultType1 == null) {\r\n                        this.pushError(\"Der Operator \" + TokenTypeReadable[node.operator] + \" ist für einen Operanden des Datentyps \" + operandType.toString() + \" nicht definiert.\", \"error\", node.position);\r\n                    }\r\n                    return resultType1;\r\n                } else {\r\n                    return null;\r\n                }\r\n                break;\r\n            case TokenType.callMethod:\r\n                return this.resolveMethodCall(node);\r\n                break;\r\n            //    ConstantNode | IdentifierNode | DotNode | SelectNode | BracketsNode | StarAttributeNode | SelectNode | ListNode;\r\n\r\n            case TokenType.constantNode:\r\n                node.sqlType = SQLBaseType.fromConstantType(node.constantType);\r\n                return node.sqlType;\r\n                break;\r\n            case TokenType.identifier:\r\n                return this.resolveIdentifier(node);\r\n                break;\r\n            case TokenType.dot:\r\n                return this.resolveDot(node);\r\n                break;\r\n            case TokenType.keywordSelect:\r\n                let selectTable = this.resolveSelect(node);\r\n                if (selectTable.columns.length != 1) {\r\n                    this.pushError(\"Die Ergebnistabelle einer Unterabfrage an dieser Stelle muss genau eine Spalte besitzen.\", \"error\", node.position);\r\n                    return null;\r\n                }\r\n                return selectTable.columns[0].type;\r\n                break;\r\n            case TokenType.rightBracket:   // BracketsNode\r\n                node.sqlType = this.resolveTerm(node.termInsideBrackets);\r\n                return node.sqlType;\r\n                break;\r\n            case TokenType.allColumns:\r\n                this.pushError(\"Das Zeichen * kann hier nicht verwendet werden.\", \"error\", node.position);\r\n                break;\r\n            case TokenType.list:\r\n                this.pushError(\"Eine Liste wird hier nicht erwartet.\", \"error\", node.position);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    resolveDot(node: DotNode): SQLType {\r\n        let tableSymbols = this.getCurrentSymbolTable().findTables(node.identifierLeft.identifier);\r\n        if (tableSymbols.length == 0) {\r\n            this.pushError(\"Die Tabelle \" + node.identifierLeft.identifier + \" kann nicht gefunden werden.\", \"error\", node.identifierLeft.position);\r\n            return null;\r\n        }\r\n        if (tableSymbols.length > 1) {\r\n            this.pushError(\"Der Tabellenbezeichner \" + node.identifierLeft.identifier + \" ist nicht eindeutig.\", \"error\", node.identifierLeft.position);\r\n            return null;\r\n        }\r\n        let table = tableSymbols[0].table;\r\n\r\n        let columns = table.columns.filter(c => c.identifier.toLowerCase() == node.identifierRight.identifier.toLowerCase());\r\n\r\n        if (columns.length == 0) {\r\n            this.pushError(\"Die Tabelle \" + node.identifierLeft.identifier + \" hat keine Spalte mit dem Bezeichner \" + node.identifierRight.identifier + \".\", \"error\", node.identifierRight.position);\r\n            return;\r\n        }\r\n\r\n        if (columns.length > 1) {\r\n            this.pushError(\"Die Tabelle \" + node.identifierLeft.identifier + \" hat mehrere Spalten mit dem Bezeichner \" + node.identifierRight.identifier + \".\", \"error\", node.identifierRight.position);\r\n            return;\r\n        }\r\n\r\n        let column = columns[0];\r\n        node.sqlType = column.type;\r\n        return column.type;\r\n\r\n    }\r\n\r\n    resolveIdentifier(node: IdentifierNode): SQLType {\r\n        let symbols = this.getCurrentSymbolTable().findColumn(node.identifier);\r\n        if (symbols.length == 0) {\r\n            this.pushError(\"Der Bezeichner \" + node.identifier + \" ist an dieser Stelle nicht bekannt.\", \"error\", node.position);\r\n            return null;\r\n        }\r\n        if (symbols.length > 1) {\r\n            this.pushError(\"Der Bezeichner \" + node.identifier + \" ist nicht eindeutig.\", \"error\", node.position);\r\n            return null;\r\n        }\r\n\r\n        let symbol = symbols[0];\r\n        node.sqlType = symbol.column.type;\r\n        return symbol.column.type;\r\n    }\r\n\r\n    resolveMethodCall(node: MethodcallNode): SQLType {\r\n\r\n        let methodStore = SQLMethodStore.getInstance();\r\n        let methods = methodStore.getMethods(node.identifier);\r\n\r\n        methods = methods.filter(m => m.parameters.length == node.operands.length);\r\n        if (node.operands.length == 1 && node.operands[0].type == TokenType.allColumns) {\r\n            methods = methods.filter(m => m.acceptsStarParameter);\r\n            node.sqlType = methods[0].returnType;\r\n            return node.sqlType;\r\n        }\r\n\r\n        if (methods.length == 0) {\r\n            this.pushError(\"Es gibt keine passende Methode mit dem Bezeichner '\" + node.identifier + \"'.\", \"error\", node.position);\r\n            return null;\r\n        }\r\n\r\n        for (let operand of node.operands) {\r\n            if (this.resolveTerm(operand) == null) {\r\n                node.sqlType = methods[0].returnType;\r\n                return node.sqlType;\r\n            }\r\n        }\r\n\r\n        for (let method of methods) {\r\n            let found = true;\r\n            for (let i = 0; i < method.parameters.length; i++) {\r\n                let methodParameter = method.parameters[i];\r\n                let operand = node.operands[i];\r\n                if (!operand.sqlType.canCastTo(methodParameter.type)) {\r\n                    found = false;\r\n                    break;\r\n                }\r\n            }\r\n            if (found) {\r\n                node.sqlType = method.returnType;\r\n                return node.sqlType;\r\n            }\r\n        }\r\n\r\n        this.pushError(\"Es gibt keine passende Methode mit dem Bezeichner '\" + node.identifier + \"'.\", \"error\", node.position);\r\n        return null;\r\n\r\n    }\r\n\r\n    resolveNotIn(node: BinaryOpNode): SQLType {\r\n\r\n        if (node.firstOperand == null || node.secondOperand == null) return null;\r\n\r\n        let operatorString = TokenTypeReadable[node.operator];\r\n\r\n        this.resolveTerm(node.firstOperand);\r\n        let leftType = node.firstOperand.sqlType;\r\n        if (leftType != null) {\r\n            if (node.secondOperand.type == TokenType.keywordSelect) {\r\n                let selectNode = node.secondOperand;\r\n                if (selectNode.columnList.length != 1) {\r\n                    this.pushError(\"Wenn rechts vom Operator '\" + operatorString + \"' eine Unterabfrage steht, muss die Ergebnistabelle dieser Unterabfrage genau eine Spalte haben.\", \"error\", selectNode.position);\r\n                }\r\n                this.resolveSelect(selectNode);\r\n                let pType = selectNode.columnList[0].term.sqlType;\r\n                if (!pType.canCastTo(leftType)) {\r\n                    this.pushError(\"Der Datentyp der Ergebnisspalte der Unterabfrage ist \" + pType.toString() + \". Dieser kann nicht in den Datentyp \" + leftType.toString() + \" umgewandelt werden.\", \"error\", selectNode.position);\r\n                }\r\n            } else if (node.secondOperand.type == TokenType.list) {\r\n                let listNode = node.secondOperand;\r\n                for (let element of listNode.elements) {\r\n                    let elementType = SQLBaseType.fromConstantType(element.constantType);\r\n                    element.sqlType = elementType;\r\n                    if (!elementType.canCastTo(leftType)) {\r\n                        this.pushError(\"Der Datentyp des Listenelements \" + element.constant + \" ist \" + elementType.toString() + \". Er kann nicht in den Datentype \" + leftType.toString() + \" des Operanden auf der linken Seite des Operators '\" + operatorString + \"' umgewandelt werden.\", \"error\", element.position);\r\n                    }\r\n                }\r\n            } else {\r\n                this.pushError(\"Der rechte Operand der Operatoren 'in' und 'not in' muss eine Unterabfrage oder eine Liste sein.\", \"error\", node.secondOperand.position);\r\n            }\r\n\r\n        }\r\n\r\n        return SQLBaseType.getBaseType(\"boolean\");\r\n    }\r\n\r\n    resolveInsert(astNode: InsertNode) {\r\n\r\n        let table: Table = null;\r\n        let symbolTable = this.pushNewSymbolTable(astNode.position, astNode.endPosition);\r\n        if (astNode.table != null) {\r\n            astNode.table.table = this.tables.find(t => t.identifier.toLowerCase() == astNode.table.identifier.toLocaleLowerCase());\r\n            if (astNode.table.table == null) {\r\n                this.pushError(\"Die Tabelle \" + astNode.table.identifier + \" gibt es nicht.\", \"error\", astNode.table.position);\r\n            } else {\r\n                table = astNode.table.table;\r\n                symbolTable.storeTableSymbols(table);\r\n            }\r\n        }\r\n\r\n        let tableCompletionTo = astNode.endPosition;\r\n        if (astNode.valuesPosition != null) tableCompletionTo = astNode.valuesPosition;\r\n        if (astNode.columnsPosition != null) tableCompletionTo = astNode.columnsPosition;\r\n\r\n        this.module.addCompletionHint(astNode.position, tableCompletionTo, false, true, [\"into\", \"values\"]);\r\n\r\n        if (table != null) {\r\n            this.module.addCompletionHint(tableCompletionTo, astNode.valuesPosition == null ? astNode.endPosition : astNode.valuesPosition, true, false, [\"values\"]);\r\n        }\r\n\r\n        let tableSymbolTable = this.pushNewSymbolTable(astNode.position, tableCompletionTo);\r\n        tableSymbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n\r\n        let columns: Column[] = [];\r\n        // Parse column list\r\n        if (astNode.columnList.length == 0) {\r\n            if (table != null) {\r\n                columns = table.columns;\r\n            }\r\n        } else {\r\n            if (table != null) {\r\n                for (let columnNode of astNode.columnList) {\r\n                    let column = table.columns.find(c => c.identifier.toLowerCase() == columnNode.identifier.toLowerCase());\r\n                    if (column == null) {\r\n                        this.pushError(\"Die Tabelle \" + table.identifier + \" besitzt keine Spalte mit dem Bezeichner \" + columnNode.identifier + \".\", \"error\", columnNode.position);\r\n                    } else {\r\n                        columns.push(column);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (columns.length > 0) {\r\n            // Parse value lists\r\n            for (let valueList of astNode.values) {\r\n                if (valueList.length != columns.length && valueList.length > 0) {\r\n                    this.pushError(\"Erwartet werden \" + columns.length + \" Elemente, hier stehen aber \" + valueList.length + \" Elemente in der Liste.\", \"error\", valueList[0].position);\r\n                } else {\r\n                    for (let i = 0; i < valueList.length; i++) {\r\n                        let value = valueList[i];\r\n                        let column = columns[i];\r\n                        value.sqlType = SQLBaseType.fromConstantType(value.constantType);\r\n                        // constantType == 40 means: null\r\n                        // TODO: check if column is nullable!\r\n                        let destType = column.type.toString().toLocaleLowerCase();\r\n                        if (value.constantType == TokenType.keywordNull) {\r\n                            if (!column.isNullable || column.notNull) {\r\n                                this.pushError(\"Die Spalte \" + column.identifier + \" ist nicht nullable, daher kann null hier nicht eingefügt werden.\", \"error\", value.position);\r\n                            }\r\n                        } else if (!value.sqlType.canCastTo(column.type)) {\r\n                            let error: string = \"Der Wert \" + value.constant + \" vom Datentyp \" + value.sqlType.toString() + \" kann nicht in den Datentyp \" + column.type.toString() + \" der Spalte \" + column.identifier + \" umgewandelt werden.\";\r\n\r\n                            if(destType == \"date\") error += \"<br><b>Tipp: </b>Datumswerte haben die Form 'yyyy-mm-dd', also z.B. '2022-06-15'.\";\r\n                            if(destType == \"datetime\" || destType == \"timestamp\") error += \"<br><b>Tipp: </b>Timestamps haben die Form 'yyyy-mm-dd hh:min:ss', also z.B. '2022-06-15 07:56:22'.\";\r\n\r\n                            this.pushError(error, \"error\", value.position);\r\n                        } else if(destType == \"date\"){\r\n                            if(!isDate(value.constant)){\r\n                                let error: string = `'${value.constant}' ist kein date-Wert.<br><b>Tipp: </b>Datumswerte haben die Form 'yyyy-mm-dd', also z.B. '2022-06-15'.`;\r\n                                this.pushError(error, \"error\", value.position);\r\n                            }\r\n                        } else if(destType == \"datetime\" || destType == \"timestamp\"){\r\n                            if(!isDateTime(value.constant)){\r\n                                let error: string = `'${value.constant}' ist kein ${destType}-Wert.<br><b>Tipp: </b>Timestamps haben die Form 'yyyy-mm-dd hh:min:ss', also z.B. '2022-06-15 07:56:22'.`;\r\n                                this.pushError(error, \"error\", value.position);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        this.symbolTableStack.pop();\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { SymbolResolver } from \"./parser/SymbolResolver.js\";\r\n\r\nexport enum CompilerStatus {\r\n    compiling, error, compiledButNothingToRun, readyToRun\r\n}\r\n\r\nexport class Compiler {\r\n\r\n    compilerStatus: CompilerStatus = CompilerStatus.compiledButNothingToRun;\r\n\r\n    atLeastOneModuleIsStartable: boolean;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    compile(moduleStore: ModuleStore): Error[] {\r\n\r\n        this.compilerStatus = CompilerStatus.compiling;\r\n\r\n        let t0 = performance.now();\r\n\r\n        let lexer = new Lexer();\r\n\r\n        // 1st pass: lexing\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.file.dirty = false;\r\n            m.clear();\r\n\r\n            let lexed = lexer.lex(m.getProgramTextFromMonacoModel());\r\n            m.errors[0] = lexed.errors;\r\n            m.tokenList = lexed.tokens;\r\n            m.bracketError = lexed.bracketError;\r\n            if(m.file.name == this.main.getCurrentlyEditedModule().file.name){\r\n                if(this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(lexed.bracketError);\r\n            }\r\n        }\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        this.main.getSemicolonAngel().startRegistering();\r\n\r\n        let parser: Parser = new Parser();\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            parser.parse(m);\r\n        }\r\n        \r\n        // 3rd pass: check symbols and types\r\n        let databaseTool = this.main.getDatabaseTool();\r\n        let symbolResolver: SymbolResolver = new SymbolResolver(databaseTool);\r\n\r\n        for(let m of moduleStore.getModules(false)){\r\n            symbolResolver.start(m);\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        let message = \"Compiled in \" + dt + \" ms.\";\r\n\r\n        this.main.getCurrentWorkspace().compilerMessage = message;\r\n\r\n        this.main.getSemicolonAngel().healSemicolons();\r\n\r\n        this.compilerStatus = CompilerStatus.readyToRun;\r\n\r\n        return null;\r\n    }\r\n\r\n}","import { FileData } from \"../../communication/Data.js\";\r\nimport { AccordionElement } from \"../../main/gui/Accordion.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenType, TextPositionWithoutLength } from \"../lexer/Token.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { ASTNode } from \"./AST.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\nimport { stringToDate } from \"../../tools/StringTools.js\";\r\nimport { SQLStatement } from \"./Parser.js\";\r\n\r\n\r\nexport type CompletionHint = {\r\n    fromLine: number,\r\n    fromColumn: number,\r\n    toLine: number, \r\n    toColumn: number,\r\n    hintColumns: boolean,\r\n    hintColumnsOfTable?: string,\r\n    hintTables: boolean,\r\n    hintKeywords: string[],\r\n    dontHint?: string[],\r\n    praefix?: string,\r\n    suffix?: string\r\n}\r\n\r\nexport type File = {\r\n    name: string,\r\n    id?: number,\r\n    text: string,\r\n\r\n    text_before_revision: string,\r\n    submitted_date: string,\r\n    student_edited_after_revision: boolean,\r\n\r\n    dirty: boolean,\r\n    saved: boolean,\r\n    version: number,\r\n    panelElement?: AccordionElement\r\n\r\n}\r\n\r\nexport type IdentifierPosition = {\r\n    position: TextPosition,\r\n    element: any;\r\n}\r\n\r\nexport type MethodCallPosition = {\r\n    identifierPosition: TextPosition,\r\n    possibleMethods: any[] | string, // string for print, println, ...\r\n    commaPositions: TextPosition[],\r\n    rightBracketPosition: TextPosition\r\n}\r\n\r\nexport class Module {\r\n    file: File;\r\n    static maxUriNumber: number = 0;\r\n    uri: monaco.Uri;\r\n    model: monaco.editor.ITextModel;\r\n    oldErrorDecorations: string[] = [];\r\n    lastSavedVersionId: number;\r\n    editorState: monaco.editor.ICodeEditorViewState;\r\n\r\n    errors: Error[][] = [[], [], [], []]; // 1st pass, 2nd pass, 3rd pass\r\n\r\n    // 1st pass: Lexer\r\n    tokenList: Token[];\r\n\r\n    // 2nd pass: ASTParser\r\n    sqlStatements: SQLStatement[];\r\n    mainSymbolTable: SymbolTable;\r\n\r\n\r\n    identifierPositions: { [line: number]: IdentifierPosition[] } = {};\r\n    methodCallPositions: { [line: number]: MethodCallPosition[] } = {};\r\n\r\n    static uriMap: { [name: string]: number } = {};\r\n    bracketError: string;\r\n\r\n    completionHints: Map<number, CompletionHint[]> = new Map(); // Map from line numbers to hints\r\n\r\n    constructor(file: File, public main: MainBase) {\r\n        if (file == null || this.main == null) return; // used by AdhocCompiler and ApiDoc\r\n\r\n        this.file = file;\r\n        // this.uri = monaco.Uri.from({ path: '/file' + (Module.maxUriNumber++) + '.learnJava', scheme: 'file' });\r\n        let path = file.name;\r\n\r\n        let uriCounter = Module.uriMap[path];\r\n        if (uriCounter == null) {\r\n            uriCounter = 0;\r\n        } else {\r\n            uriCounter++;\r\n        }\r\n        Module.uriMap[path] = uriCounter;\r\n\r\n        if (uriCounter > 0) path += \" (\" + uriCounter + \")\";\r\n        this.uri = monaco.Uri.from({ path: path, scheme: 'inmemory' });\r\n        this.model = monaco.editor.createModel(file.text, \"vscSQL\", this.uri);\r\n        this.model.updateOptions({ tabSize: 3 });\r\n\r\n        this.lastSavedVersionId = this.model.getAlternativeVersionId();\r\n\r\n        let that = this;\r\n\r\n        this.model.onDidChangeContent(() => {\r\n            let versionId = that.model.getAlternativeVersionId();\r\n\r\n            if (versionId != that.lastSavedVersionId) {\r\n                that.file.dirty = true;\r\n                that.file.saved = false;\r\n                that.lastSavedVersionId = versionId;\r\n            }\r\n\r\n            if(!that.main.isEmbedded()){\r\n                let main1: Main = <Main>main;\r\n                if (main1.workspacesOwnerId != main1.user.id) {\r\n                    if (that.file.text_before_revision == null || that.file.student_edited_after_revision) {\r\n                        that.file.student_edited_after_revision = false;\r\n                        that.file.text_before_revision = that.file.text;\r\n                        that.file.saved = false;\r\n                        main1.networkManager.sendUpdates(null, false);\r\n                        main1.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n                        main1.projectExplorer.renderHomeworkButton(that.file);\r\n                    }\r\n                } else {\r\n                    that.file.student_edited_after_revision = true;\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    addCompletionHint(fromPosition: TextPosition, toPosition: TextPosition, hintColumns: boolean|string, hintTables: boolean, \r\n        hintKeywords: string[], dontHint?: string[], praefix: string = \"\", suffix: string = \"\"){\r\n        let ch: CompletionHint = {\r\n            fromColumn: fromPosition.column,\r\n            fromLine: fromPosition.line,\r\n            toColumn: toPosition.column,\r\n            toLine: toPosition.line,\r\n            hintColumns: (typeof hintColumns == \"boolean\")? hintColumns : true, \r\n            hintColumnsOfTable: (typeof hintColumns == \"string\")? hintColumns : null,\r\n            hintTables: hintTables,\r\n            hintKeywords: hintKeywords,\r\n            dontHint: dontHint,\r\n            praefix: praefix,\r\n            suffix: suffix\r\n        }\r\n\r\n        for(let i = ch.fromLine; i <= ch.toLine; i++){\r\n            let chList = this.completionHints.get(i);\r\n            if(chList == null){\r\n                chList = [];\r\n                this.completionHints.set(i, chList);\r\n            }\r\n            chList.push(ch);\r\n        }\r\n    }\r\n\r\n    getSQLSTatementsAtSelection(sel: monaco.Selection): SQLStatement[] {\r\n        let selStart = {line: sel.startLineNumber, column: sel.startColumn};\r\n        let selEnd = {line: sel.endLineNumber, column: sel.endColumn};\r\n\r\n        if(this.sqlStatements == null){\r\n            return [];\r\n        }\r\n\r\n        return this.sqlStatements.filter(stmt => {\r\n            return !(this.compare(stmt.to, selStart) < 0 || this.compare(stmt.from, selEnd) > 0);\r\n        })\r\n\r\n    }\r\n\r\n    /**\r\n     * returns 1 if a > b, 0 if a == b and -1 if a < b\r\n     * @param a \r\n     * @param b \r\n     */\r\n    compare(a: {line: number, column: number}, b: {line: number, column: number}): number{\r\n        if(a.line > b.line) return 1;\r\n        if(a.line < b.line) return -1;\r\n        if(a.column > b.column) return 1;\r\n        if(a.column < b.column) return -1;\r\n        return 0;\r\n    }\r\n\r\n\r\n\r\n    getSQLStatementAtPosition(p: { lineNumber: number, column: number }): SQLStatement {\r\n\r\n        return this.sqlStatements.find(statement => {\r\n            if(statement.from.line > p.lineNumber ) return false;\r\n            if(statement.from.line == p.lineNumber && statement.from.column > p.column) return false;\r\n            if(statement.to.line < p.lineNumber) return false;\r\n            if(statement.to.line == p.lineNumber && statement.to.column < p.column) return false;\r\n            return true;\r\n        });        \r\n\r\n    }\r\n\r\n\r\n    getCompletionHint(line: number, column: number){\r\n        let chList = this.completionHints.get(line);\r\n        \r\n        if(chList == null || chList.length == 0){\r\n            return null;\r\n        }\r\n\r\n        let pos = line * 1000 + column;\r\n        chList = chList.filter(ch => pos >= ch.fromLine * 1000 + ch.fromColumn && pos <= ch.toLine * 1000 + ch.toColumn);\r\n        if(chList.length == 0){\r\n            return;\r\n        }\r\n\r\n        // take CompletionHint with smallest range:\r\n        let bestCh: CompletionHint = chList[0];\r\n        let bestRangeLength  = (bestCh.toLine - bestCh.fromLine)*1000 + (bestCh.toColumn - bestCh.fromColumn);\r\n\r\n        for(let i = 1; i < chList.length; i++){\r\n            let ch = chList[i];\r\n            let rangeLength = (ch.toLine - ch.fromLine) * 1000 + (ch.toColumn - ch.fromColumn);\r\n\r\n            if(rangeLength < bestRangeLength){\r\n                bestCh = ch;\r\n                bestRangeLength = rangeLength;\r\n            }\r\n\r\n        }\r\n\r\n        return bestCh;\r\n    }\r\n\r\n\r\n    static restoreFromData(f: FileData, main: MainBase): Module {\r\n\r\n        let f1: File = {\r\n            name: f.name,\r\n            text: f.text,\r\n            text_before_revision: f.text_before_revision,\r\n            submitted_date: f.submitted_date,\r\n            student_edited_after_revision: false,\r\n            dirty: true,\r\n            saved: true,\r\n            version: f.version,\r\n            id: f.id\r\n        }\r\n\r\n        let m: Module = new Module(f1, main);\r\n\r\n        return m;\r\n\r\n    }\r\n\r\n    getFileData(workspace: Workspace): FileData {\r\n        let file = this.file;\r\n        let fd: FileData = {\r\n            id: file.id,\r\n            name: file.name,\r\n            text: file.text,\r\n            text_before_revision: file.text_before_revision,\r\n            submitted_date: file.submitted_date,\r\n            student_edited_after_revision: file.student_edited_after_revision,\r\n            version: file.version,\r\n            workspace_id: workspace.id,\r\n            forceUpdate: false,\r\n            file_type: 11\r\n        }\r\n\r\n        return fd;\r\n    }\r\n\r\n\r\n    findSymbolTableAtPosition(line: number, column: number) {\r\n        if (this.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (line > this.mainSymbolTable.positionTo.line ||\r\n            line == this.mainSymbolTable.positionTo.line && column > this.mainSymbolTable.positionTo.column\r\n        ) {\r\n            line = this.mainSymbolTable.positionTo.line;\r\n            column = this.mainSymbolTable.positionTo.column - 1;\r\n        }\r\n\r\n        return this.mainSymbolTable.findTableAtPosition(line, column);\r\n    }\r\n\r\n    getErrorCount(): number {\r\n\r\n        let ec = 0;\r\n        for (let el of this.errors) {\r\n            el.forEach(error => ec += error.level == \"error\" ? 1 : 0);\r\n            // ec += el.length;\r\n        }\r\n\r\n        return ec;\r\n    }\r\n\r\n    getProgramTextFromMonacoModel(): string {\r\n        return this.model.getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n    }\r\n\r\n\r\n    addIdentifierPosition(position: TextPosition, element: any) {\r\n        let positionList: IdentifierPosition[] = this.identifierPositions[position.line];\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            this.identifierPositions[position.line] = positionList;\r\n        }\r\n        positionList.push({\r\n            position: position,\r\n            element: element\r\n        });\r\n    }\r\n\r\n    getElementAtPosition(line: number, column: number): any {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let bestFoundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column < p.position.column + p.position.length) {\r\n\r\n                if (p.position.length > 0) {\r\n                    if (bestFoundPosition == null) {\r\n                        bestFoundPosition = p;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bestFoundPosition == null ? null : <any>bestFoundPosition.element;\r\n    }\r\n\r\n    copy(): Module {\r\n        let m = new Module(this.file, this.main);\r\n        m.model = this.model;\r\n        m.mainSymbolTable = this.mainSymbolTable;\r\n        this.mainSymbolTable = null;\r\n\r\n        this.file.dirty = true;\r\n\r\n        return m;\r\n    }\r\n\r\n    clear() {\r\n\r\n        this.identifierPositions = {};\r\n\r\n        if (this.file != null && this.file.dirty) {\r\n            // Lexer\r\n            this.tokenList = null;\r\n            this.errors[0] = [];\r\n\r\n            // AST Parser\r\n            this.errors[1] = [];\r\n\r\n\r\n        }\r\n\r\n        // type resolver\r\n        this.errors[2] = [];\r\n\r\n        // Code generator\r\n        this.errors[3] = [];\r\n        this.mainSymbolTable = new SymbolTable(null, { line: 1, column: 1, length: 1 }, { line: 100000, column: 1, length: 0 });\r\n\r\n        this.methodCallPositions = {};\r\n\r\n    }\r\n\r\n    hasErrors() {\r\n\r\n        for (let el of this.errors) {\r\n            if (el.find(error => error.level == \"error\")) {\r\n                return true;\r\n            }\r\n            // if (el.length > 0) {\r\n            //     return true;\r\n            // }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getSortedAndFilteredErrors(): Error[] {\r\n\r\n        let list: Error[] = [];\r\n\r\n        for (let el of this.errors) {\r\n            list = list.concat(el);\r\n        }\r\n\r\n        list.sort((a, b) => {\r\n            if (a.position.line > b.position.line) {\r\n                return 1;\r\n            }\r\n            if (b.position.line > a.position.line) {\r\n                return -1;\r\n            }\r\n            if (a.position.column >= b.position.column) {\r\n                return 1;\r\n            }\r\n            return -1;\r\n        });\r\n\r\n        for (let i = 0; i < list.length - 1; i++) {\r\n            let e1 = list[i];\r\n            let e2 = list[i + 1];\r\n            if (e1.position.line == e2.position.line && e1.position.column + 10 > e2.position.column) {\r\n                if (this.errorLevelCompare(e1.level, e2.level) == 1) {\r\n                    list.splice(i + 1, 1);\r\n                } else {\r\n                    list.splice(i, 1);\r\n                }\r\n                i--;\r\n            }\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    errorLevelCompare(level1: ErrorLevel, level2: ErrorLevel): number {\r\n        if (level1 == \"error\") return 1;\r\n        if (level2 == \"error\") return 2;\r\n        if (level1 == \"warning\") return 1;\r\n        if (level2 == \"warning\") return 2;\r\n        return 1;\r\n    }\r\n}\r\n\r\n\r\nexport class ModuleStore {\r\n\r\n    private modules: Module[] = [];\r\n    private moduleMap: Map<string, Module> = new Map();\r\n\r\n    dirty: boolean = false;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    findModuleById(module_id: number): Module {\r\n        for (let module of this.modules) {\r\n            if (module.file.id == module_id) return module;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    copy(): ModuleStore {\r\n        let ms: ModuleStore = new ModuleStore(this.main);\r\n        for (let m of this.modules) {\r\n            ms.putModule(m.copy());\r\n        }\r\n        return ms;\r\n    }\r\n\r\n    findModuleByFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                return m;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        for (let m of this.modules) {\r\n            if (m.hasErrors()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getFirstModule(): Module {\r\n        if (this.modules.length > 0) {\r\n            for (let mo of this.modules) {\r\n                return mo;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    isDirty(): boolean {\r\n\r\n        if (this.dirty) {\r\n            this.dirty = false;\r\n            return true;\r\n        }\r\n\r\n        let dirty = false;\r\n        for (let m of this.modules) {\r\n            if (m.file.dirty) {\r\n                dirty = true;\r\n                break;\r\n            }\r\n        }\r\n        return dirty;\r\n    }\r\n\r\n\r\n    getModules(includeSystemModules: boolean, excludedModuleName?: String): Module[] {\r\n        let ret = [];\r\n        for (let m of this.modules) {\r\n            if (m.file.name != excludedModuleName) {\r\n                ret.push(m);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    putModule(module: Module) {\r\n        this.modules.push(module);\r\n        this.moduleMap[module.file.name] = module;\r\n    }\r\n\r\n    removeModuleWithFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                this.removeModule(m);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n\r\n        if (this.modules.indexOf(module) < 0) return;\r\n\r\n        this.modules.splice(this.modules.indexOf(module), 1);\r\n        this.moduleMap[module.file.name] = undefined;\r\n        this.dirty = true;\r\n    }\r\n\r\n    getModule(moduleName: string): Module {\r\n        return this.moduleMap[moduleName];\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type ButtonToggler = (state: boolean) => void;\r\n\r\nexport type Action = (name: string, buttonToggler?: ButtonToggler, pressed_key?: string) => void;\r\n\r\nexport type ActionEntry = {\r\n    text?: string,\r\n    keys: string[],\r\n    action: Action,\r\n    identifier: string, // name of Action is copied automatically to name of ActionEntry\r\n    active: boolean\r\n}\r\n\r\nexport class ActionManager {\r\n\r\n    actions: { [actionIdentifier: string]: ActionEntry } = { };\r\n\r\n    keyEntries: { [key: string]: ActionEntry[] } = {};\r\n\r\n    buttons: { [actionIdentifier: string]: JQuery<HTMLElement>[] } = {};\r\n\r\n    constructor(private $mainElement: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public init(){\r\n\r\n        let $element:JQuery<any> = this.$mainElement;\r\n        \r\n        if($element == null) $element = jQuery(document);\r\n\r\n        let that = this;\r\n        $element.on(\"keydown\", function (event: JQuery.KeyDownEvent) { \r\n            if(event != null){\r\n                that.executeKeyDownEvent(event); \r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    trigger(actionIdentifier: string) {\r\n        let ae = this.actions[actionIdentifier];\r\n        if(ae != null){\r\n            ae.action(actionIdentifier, null, \"\");\r\n        }\r\n    }\r\n\r\n\r\n    public registerAction(identifier: string, keys: string[], action: Action, text: string = \"\", button?: JQuery<HTMLElement>){\r\n        let ae: ActionEntry = {\r\n            action: action,\r\n            identifier: identifier,\r\n            keys: keys,\r\n            text: text,\r\n            active: true\r\n        };\r\n\r\n        this.actions[identifier] = ae;\r\n\r\n        for(let key of keys){\r\n            if(this.keyEntries[key.toLowerCase()] == null){\r\n                this.keyEntries[key.toLowerCase()] = [];\r\n            }\r\n            this.keyEntries[key.toLowerCase()].push(ae);\r\n        }\r\n\r\n        if(button != null){\r\n            if(this.buttons[identifier] == null){\r\n                this.buttons[identifier] = [];\r\n            }\r\n            this.buttons[identifier].push(button);\r\n\r\n            let t = text;\r\n            if(keys.length > 0){\r\n                t += \" [\" + keys.join(\", \") + \"]\";\r\n            }\r\n\r\n            button.attr(\"title\", t);\r\n\r\n            button.on('mousedown', () => {\r\n                if(ae.active){\r\n                    action(identifier, null, \"mousedown\");\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public isActive(actionIdentifier: string): boolean {\r\n\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae == null) return false;\r\n\r\n        return ae.active;\r\n    \r\n    }\r\n\r\n    public setActive(actionIdentifier: string, active: boolean){\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae != null){\r\n            ae.active = active;\r\n        }\r\n\r\n        let buttons = this.buttons[actionIdentifier];\r\n        if(buttons != null){\r\n            for(let button of buttons){\r\n                if(active){\r\n                    button.addClass('jo_active');\r\n                } else {\r\n                    button.removeClass('jo_active');\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public executeKeyDownEvent(event: JQuery.KeyDownEvent) {\r\n\r\n        if(document.activeElement.tagName.toLowerCase() == \"input\"){\r\n            return;\r\n        }\r\n\r\n        if (event.keyCode <= 18 && event.keyCode >= 16) {\r\n            return; // ctrl, alt, shift\r\n        }\r\n\r\n        let key: string = \"\";\r\n\r\n        if (event.ctrlKey) {\r\n            key += \"ctrl+\";\r\n        }\r\n\r\n        if (event.shiftKey) {\r\n            key += \"shift+\";\r\n        }\r\n\r\n        if (event.altKey) {\r\n            key += \"alt+\";\r\n        }\r\n\r\n        if(event.key != null){\r\n            key += event.key.toLowerCase();\r\n        }\r\n\r\n        let actionEntries = this.keyEntries[key];\r\n\r\n        if(actionEntries != null){\r\n            for(let actionEntry of actionEntries){\r\n                if (actionEntry.active) {\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    actionEntry.action(actionEntry.identifier, null, key);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { escapeHtml } from \"./StringTools.js\";\r\n\r\nexport function makeEditable(elementWithText: JQuery<HTMLElement>,\r\n    elementToReplace: JQuery<HTMLElement>,\r\n    renameDoneCallback: (newContent: string) => void, selectionRange: { start: number, end: number } = null) {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    if (elementToReplace == null) {\r\n        elementToReplace = elementWithText;\r\n    }\r\n\r\n    let $input = jQuery('<input type=\"text\" class=\"jo_inplaceeditor\" spellcheck=\"false\">');\r\n    $input.css({\r\n        width: elementToReplace.css('width'),\r\n        height: elementToReplace.css('height'),\r\n        color: elementToReplace.css('color'),\r\n        position: elementToReplace.css('position'),\r\n        \"background-color\": elementToReplace.css('background-color'),\r\n        \"font-size\": elementToReplace.css('font-size'),\r\n        \"font-weight\": elementToReplace.css('font-weight'),\r\n        \"box-sizing\": \"border-box\"\r\n    });\r\n    $input.val(elementWithText.text());\r\n    $input.on(mousePointer + \"down\", (e) => { e.stopPropagation(); })\r\n\r\n    if (selectionRange != null) {\r\n        (<HTMLInputElement>$input[0]).setSelectionRange(selectionRange.start, selectionRange.end);\r\n    }\r\n\r\n    elementToReplace.after($input);\r\n    elementToReplace.hide();\r\n    setTimeout(() => {\r\n        $input.focus();\r\n    }, 300);\r\n\r\n    $input.on(\"keydown.me\", (ev) => {\r\n        if (ev.key == \"Enter\" || ev.key == \"Escape\") {\r\n            $input.off(\"keydown.me\");\r\n            $input.off(\"focusout.me\");\r\n            $input.remove();\r\n            elementToReplace.show();\r\n            let newValue = escapeHtml(<string>$input.val());\r\n            renameDoneCallback(newValue);\r\n            return;\r\n        }\r\n    });\r\n\r\n    $input.on(\"focusout.me\", (ev) => {\r\n        $input.off(\"keydown.me\");\r\n        $input.off(\"focusout.me\");\r\n        $input.remove();\r\n        elementToReplace.show();\r\n        let newValue = escapeHtml(<string>$input.val());\r\n        renameDoneCallback(newValue);\r\n        return;\r\n    });\r\n\r\n}\r\n\r\nexport type ContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: () => void;\r\n    link?: string;\r\n    subMenu?: ContextMenuItem[]\r\n};\r\n\r\nexport function openContextMenu(items: ContextMenuItem[], x: number, y: number): JQuery<HTMLElement> {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    let $contextMenu = jQuery('<div class=\"jo_contextmenu\"></div>');\r\n\r\n    let $openSubMenu: JQuery<HTMLElement> = null;\r\n    let parentMenuItem: ContextMenuItem = null;\r\n\r\n    for (let mi of items) {\r\n        let caption: string = mi.caption;\r\n        if (mi.link != null) {\r\n            caption = `<a href=\"${mi.link}\" target=\"_blank\" class=\"jo_menulink\">${mi.caption}</a>`;\r\n        }\r\n        let $item = jQuery('<div>' + caption + (mi.subMenu != null ? '<span style=\"float: right\"> &nbsp; &nbsp; &gt;</span>' : \"\") + '</div>');\r\n        if (mi.color != null) {\r\n            $item.css('color', mi.color);\r\n        }\r\n        if (mi.link == null) {\r\n            $item.on(mousePointer + 'up.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n                jQuery('.jo_contextmenu').remove();\r\n                jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n                jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n                jQuery(document).off(\"keydown.contextmenu\");\r\n                mi.callback();\r\n            });\r\n            $item.on(mousePointer + 'down.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n            });\r\n        } else {\r\n            let $link = $item.find('a');\r\n            $link.on(mousePointer + \"up\", (event) => {\r\n                event.stopPropagation();\r\n                setTimeout(() => {\r\n                    $item.hide();\r\n                }, 500);\r\n            })\r\n            $link.on(mousePointer + \"down\", (event) => {\r\n                event.stopPropagation();\r\n            })\r\n\r\n        }\r\n\r\n        $item.on(mousePointer + 'move.contextmenu', () => {\r\n            if (mi != parentMenuItem && $openSubMenu != null) {\r\n                $openSubMenu.remove();\r\n                parentMenuItem = null;\r\n                $openSubMenu = null;\r\n            }\r\n            if (mi.subMenu != null) {\r\n                $openSubMenu = openContextMenu(mi.subMenu, $item.offset().left + $item.width(), $item.offset().top);\r\n            }\r\n        });\r\n\r\n        $contextMenu.append($item);\r\n    }\r\n\r\n    jQuery(document).on(mousePointer + \"down.contextmenu\", (e) => {\r\n        jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n        jQuery(document).off(\"keydown.contextmenu\");\r\n        jQuery('.jo_contextmenu').remove();\r\n    })\r\n\r\n    jQuery(document).on(\"keydown.contextmenu\", (ev) => {\r\n        if (ev.key == \"Escape\") {\r\n            jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n            jQuery(document).off(\"keydown.contextmenu\");\r\n            jQuery('.jo_contextmenu').remove();\r\n        }\r\n    });\r\n\r\n    let leftRight = x > window.innerWidth * 0.8 ? \"right\" : \"left\";\r\n    let xp = x > window.innerWidth * 0.8 ? window.innerWidth - x : x;\r\n    let topBottom = y > window.innerHeight * 0.8 ? \"bottom\" : \"top\";\r\n    let yp = y > window.innerHeight * 0.8 ? window.innerHeight - y : y;\r\n\r\n    let css = {};\r\n    css[leftRight] = xp + \"px\";\r\n    css[topBottom] = yp + \"px\";\r\n\r\n    $contextMenu.css(css);\r\n\r\n\r\n    jQuery(\"body\").append($contextMenu);\r\n    $contextMenu.show();\r\n\r\n    return $contextMenu;\r\n}\r\n\r\nexport function makeTabs(tabDiv: JQuery<HTMLElement>) {\r\n    let headings = tabDiv.find('.jo_tabheadings>div').not('.jo_noHeading');\r\n    let tabs = tabDiv.find('.jo_tabs>div');\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    headings.on(mousePointer + \"down\", (ev) => {\r\n        let target = jQuery(ev.target);\r\n        headings.removeClass('jo_active');\r\n        target.addClass('jo_active');\r\n        let tab = tabDiv.find('.' + target.data('target'));\r\n        tabs.removeClass('jo_active');\r\n        tabs.trigger('myhide');\r\n        tab.addClass('jo_active');\r\n        tab.trigger('myshow');\r\n    });\r\n\r\n}\r\n\r\nexport function convertPxToNumber(pxString: string): number {\r\n    pxString = pxString.replace('px', '').trim();\r\n    return Number.parseInt(pxString);\r\n}\r\n\r\nexport function makeDiv(id: string, klass: string = \"\", text: string = \"\", css?: { [id: string]: any }): JQuery<HTMLDivElement> {\r\n\r\n    let s = \"\";\r\n    if (id != null && id != \"\") s += ` id=\"${id}\"`;\r\n\r\n    if (klass != null && klass != \"\") s += ` class=\"${klass}\"`;\r\n\r\n    let div = jQuery(`<div${s}></div>`);\r\n\r\n    if (css != null) {\r\n        div.css(css);\r\n    }\r\n\r\n    if (text != null && text != \"\") {\r\n        div.text(text);\r\n    }\r\n\r\n    return <any>div;\r\n\r\n}\r\n\r\nexport type SelectItem = {\r\n    value: string | number,\r\n    object: any,\r\n    caption: string\r\n}\r\n\r\nexport function setSelectItems($selectElement: JQuery<HTMLSelectElement>, items: SelectItem[], activeItemValue?: string | number) {\r\n    $selectElement.empty();\r\n    items.forEach(item => {\r\n        let selected: string = (item.value == activeItemValue) ? ' selected=\"selected\"' : \"\";\r\n        let element = jQuery(`<option value=${item.value}${selected}>${item.caption}</option>`);\r\n        $selectElement.append(element);\r\n        element.data('object', item.object);\r\n    }\r\n    );\r\n\r\n    $selectElement.data('items', items);\r\n\r\n\r\n}\r\n\r\nexport function getSelectedObject($selectDiv: JQuery<HTMLSelectElement>) {\r\n\r\n    let items: SelectItem[] = $selectDiv.data('items');\r\n\r\n    let selectedValue = $selectDiv.val();\r\n\r\n    return items.find(item => item.value == selectedValue)?.object;\r\n\r\n}\r\n\r\nexport var jo_mouseDetected: boolean = false;\r\nexport function checkIfMousePresent() {\r\n    if (matchMedia('(pointer:fine)').matches) {\r\n        jo_mouseDetected = true;\r\n    }\r\n}\r\n\r\nexport function animateToTransparent($element: JQuery<HTMLElement>, cssProperty: string, startColorRgb: number[], duration: number) {\r\n    let colorPraefix = 'rgba(' + startColorRgb[0] + \", \" + startColorRgb[1] + \", \" + startColorRgb[2] + \", \";\r\n    let value = 1.0;\r\n    let delta = value / (duration / 20);\r\n\r\n    let animate = () => {\r\n        $element.css(cssProperty, colorPraefix + value + \")\");\r\n        value -= delta;\r\n        if (value < 0) {\r\n            $element.css(cssProperty, \"\");\r\n        } else {\r\n            setTimeout(animate, 20);\r\n        }\r\n    }\r\n\r\n    animate();\r\n}\r\n\r\nexport function downloadFile(obj: any, filename: string, isBlob: boolean = false) {\r\n    var blob = isBlob? obj : new Blob([JSON.stringify(obj)], { type: 'text/plain' });\r\n    //@ts-ignore\r\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n        //@ts-ignore\r\n        window.navigator.msSaveOrOpenBlob(blob, filename);\r\n    } else {\r\n        var e = document.createEvent('MouseEvents'),\r\n            a = document.createElement('a');\r\n        a.download = filename;\r\n        a.href = window.URL.createObjectURL(blob);\r\n        a.dataset.downloadurl = ['text/plain', a.download, a.href].join(':');\r\n        //@ts-ignore\r\n        e.initEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\r\n        a.dispatchEvent(e);\r\n        a.remove();\r\n    }\r\n}\r\n\r\n\r\nfunction fallbackCopyTextToClipboard(text) {\r\n    var textArea = document.createElement(\"textarea\");\r\n    textArea.value = text;\r\n\r\n    // Avoid scrolling to bottom\r\n    textArea.style.top = \"0\";\r\n    textArea.style.left = \"0\";\r\n    textArea.style.position = \"fixed\";\r\n\r\n    document.body.appendChild(textArea);\r\n    textArea.focus();\r\n    textArea.select();\r\n\r\n    try {\r\n        var successful = document.execCommand('copy');\r\n    } catch (err) {\r\n        console.error('Fallback: Oops, unable to copy', err);\r\n    }\r\n\r\n    document.body.removeChild(textArea);\r\n}\r\n\r\nexport function copyTextToClipboard(text) {\r\n    if (!navigator.clipboard) {\r\n        fallbackCopyTextToClipboard(text);\r\n        return;\r\n    }\r\n    navigator.clipboard.writeText(text).then(function () {\r\n    }, function (err) {\r\n        console.error('Async: Could not copy text: ', err);\r\n    });\r\n}\r\n","import { LoginRequest, PerformanceData } from \"./Data.js\";\r\n\r\n// export var credentials: { username: string, password: string } = { username: null, password: null };\r\n\r\nexport class PerformanceCollector {\r\n    static performanceData: PerformanceData[] = [];\r\n    static performanceDataCount: number = 0;\r\n    static lastTimeSent: number = performance.now();\r\n\r\n    static registerPerformanceEntry(url: string, startTime: number) {\r\n        let pe: PerformanceData = PerformanceCollector.performanceData.find(pe => pe.url == url);\r\n        if (pe == null) {\r\n            pe = { count: 0, sumTime: 0, url: url };\r\n            PerformanceCollector.performanceData.push(pe);\r\n        }\r\n        pe.count++;\r\n        let dt = Math.round(performance.now() - startTime);\r\n        pe.sumTime += dt;\r\n        PerformanceCollector.performanceDataCount++;\r\n        // console.log(\"Performance entry for path \" + pe.url + \": \" + dt + \" ms, aggregated: \" + pe.sumTime + \" for \" + pe.count + \" requests.\");\r\n    }\r\n\r\n    static sendDataToServer() {\r\n        if (performance.now() - PerformanceCollector.lastTimeSent > 3 * 60 * 1000) {\r\n            let request = {\r\n                data: PerformanceCollector.performanceData\r\n            }\r\n\r\n            PerformanceCollector.performanceData = [];\r\n            PerformanceCollector.performanceDataCount = 0;\r\n            PerformanceCollector.lastTimeSent = performance.now();\r\n\r\n            ajax(\"collectPerformanceData\", request, () => { })\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport function ajax(url: string, request: any, successCallback: (response: any) => void,\r\n\r\n    errorCallback?: (message: string) => void) {\r\n\r\n    showNetworkBusy(true);\r\n    let time = performance.now();\r\n\r\n    $.ajax({\r\n        type: 'POST',\r\n        async: true,\r\n        data: JSON.stringify(request),\r\n        contentType: 'application/json',\r\n        url: \"servlet/\" + url,\r\n        success: function (response: any) {\r\n\r\n            PerformanceCollector.registerPerformanceEntry(url, time);\r\n\r\n            showNetworkBusy(false);\r\n            if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n                let error = \"Fehler bei der Bearbeitung der Anfrage\"\r\n                if (response.message != null) error = response.message;\r\n\r\n                if (error == \"Not logged in\") {\r\n                    // setTimeout(() => newLogin(url, request, successCallback, errorCallback), 10000);\r\n                    // location.reload();\r\n                }\r\n\r\n                if (errorCallback) errorCallback(error);\r\n            } else {\r\n                successCallback(response);\r\n            }\r\n            return;\r\n\r\n        },\r\n        error: function (jqXHR, message) {\r\n            showNetworkBusy(false);\r\n            if (errorCallback) {\r\n                let statusText = \"Server nicht erreichbar.\"\r\n                if (jqXHR.status != 0) {\r\n                    statusText = \"\" + jqXHR.status\r\n                }\r\n                errorCallback(message + \": \" + statusText);\r\n                return;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function showNetworkBusy(busy: boolean) {\r\n    if (busy) {\r\n        jQuery('.jo_network-busy').css('visibility','visible');\r\n    } else {\r\n        jQuery('.jo_network-busy').css('visibility','hidden');\r\n    }\r\n}\r\n\r\n\r\n","import { DatabaseData } from \"../communication/Data.js\";\r\n\r\nexport class WDatabase {\r\n\r\n    id: number;\r\n    name: string;\r\n\r\n    templateDump: Uint8Array;\r\n    based_on_template_id: number;\r\n    templateName: string;\r\n\r\n    statements: string[];\r\n    published_to: number;\r\n    version: number;\r\n    description: string;\r\n    owner_id: number;\r\n\r\n    static fromDatabaseData(data: DatabaseData, version: number): WDatabase {\r\n\r\n        let db = new WDatabase();\r\n\r\n        db.id = data.id;\r\n        db.name = data.name;\r\n        db.statements = data.statements;\r\n        db.published_to = data.published_to;\r\n        db.version = version;\r\n        db.description = data.description;\r\n        db.templateDump = null;\r\n        db.based_on_template_id = data.based_on_template_id;\r\n        db.owner_id = data.owner_id;\r\n        return db;\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n","export class CacheManager {\r\n    \r\n    fetchTemplateFromCache(databaseId: number, callback: (templateDump: Uint8Array) => void) {\r\n        if(databaseId == null){callback(null); return;}\r\n        let that = this;\r\n        if(!this.cacheAvailable()) callback(null);\r\n        this.getCache((cache) => {\r\n            cache.match(that.databaseIdToCacheIdentifier(databaseId)).then(\r\n                (value)=>{\r\n                    value.arrayBuffer().then((buffer) => callback(new Uint8Array(buffer)));\r\n                })\r\n                .catch(() => callback(null));\r\n        })        \r\n    }\r\n\r\n    saveTemplateToCache(databaseId: number, templateDump: Uint8Array) {\r\n        if(!this.cacheAvailable()) return;\r\n        let that = this;\r\n        this.getCache((cache) => {\r\n            cache.put(that.databaseIdToCacheIdentifier(databaseId), new Response(templateDump));\r\n        })        \r\n    }\r\n\r\n    cacheAvailable(): boolean {\r\n        return 'caches' in self;\r\n    }\r\n\r\n    getCache(callback: (cache: Cache) => void) {\r\n        caches.open('my-cache').then(callback);\r\n    }\r\n\r\n    databaseIdToCacheIdentifier(databaseId: number): string {\r\n        return \"/onlineIdeTemplateDb\" + databaseId;\r\n    }\r\n\r\n}","import { Main } from \"../main/Main.js\";\r\nimport { ajax } from \"./AjaxHelper.js\";\r\nimport { GetWebSocketTokenResponse } from \"./Data.js\";\r\nimport { NetworkManager } from \"./NetworkManager.js\";\r\n\r\ntype SubscriptionMessageFromClient = {\r\n    command: number,  // 1 == \"subscribe\", 2 == \"disconnect\"\r\n    // 3 == \"keepalive request\"\r\n    token?: string   // when \"subscribe\"\r\n}\r\n\r\ntype SubscriptionMessageFromServer = {\r\n    command: number // 1 == Acknoledge Connection, 2 == Notify, 3 == disconnect, 4 == keep alive response\r\n}\r\n\r\ntype NotifierState = \"connecting\" | \"connected\" | \"subscribed\" | \"disconnected\";\r\n\r\nexport class NotifierClient {\r\n\r\n    connection: WebSocket;\r\n    state: NotifierState;\r\n\r\n    constructor(private main: Main, private networkManager: NetworkManager){\r\n        this.connect();\r\n    }\r\n\r\n    connect() {\r\n        this.state = \"connecting\";\r\n\r\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\r\n\r\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/subscriptionwebsocket\";\r\n            this.connection = new WebSocket(url);\r\n\r\n            this.connection.onerror = (error: Event) => { this.onError(error); }\r\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\r\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\r\n\r\n            this.connection.onopen = (event: Event) => {\r\n                let request: SubscriptionMessageFromClient = {\r\n                    command: 1,   // \"subscribe\"\r\n                    token: response.token\r\n                }\r\n\r\n                this.state = \"connected\";\r\n                this.sendIntern(JSON.stringify(request));\r\n\r\n            }\r\n\r\n            let that = this;\r\n            setTimeout(() => {\r\n                if(this.state != \"subscribed\"){\r\n                    this.networkManager.forcedUpdateEvery = 1;\r\n                    this.networkManager.counterTillForcedUpdate = 1;\r\n                }\r\n            }, 7000);\r\n\r\n        });\r\n    }\r\n\r\n    disconnect(){\r\n        let request: SubscriptionMessageFromClient = {\r\n            command: 2   // \"disconnect\"\r\n        }\r\n\r\n        this.state = \"connected\";\r\n        this.sendIntern(JSON.stringify(request));\r\n\r\n    }\r\n\r\n    unsentMessages: string[] = [];\r\n    sendIntern(message: string) {\r\n\r\n        if (this.state != \"disconnected\") {\r\n            try {\r\n                this.connection.send(message);\r\n            } catch (exception) {\r\n                console.log(exception);\r\n            }\r\n        }\r\n    }\r\n\r\n    onClose(event: CloseEvent) {\r\n        this.state = \"disconnected\";\r\n    }\r\n\r\n    onMessage(event: MessageEvent) {\r\n\r\n        let response: SubscriptionMessageFromClient = JSON.parse(event.data);\r\n        if (response.command == undefined) return;\r\n\r\n        // 1 == Acknoledge Connection, 2 == Notify, 3 == disconnect, 4 == keep alive response\r\n        switch (response.command) {\r\n            case 1: // Acknoledge Connection\r\n                this.state = \"subscribed\";\r\n                break;\r\n            case 2: // Notify\r\n                this.networkManager.sendUpdates(() => {}, true);\r\n                break;\r\n            case 3: // disconnect\r\n                this.state = \"disconnected\";\r\n                break;\r\n            case 4: // keep alive response\r\n                break;\r\n        }\r\n    }\r\n\r\n    onError(error: Event) {\r\n        console.log(\"Fehler beim Notifier-Websocket\");\r\n    }\r\n\r\n}","import { Main } from \"../main/Main.js\";\r\nimport { ajax } from \"./AjaxHelper.js\";\r\nimport { WorkspaceData, FileData, SendUpdatesRequest, SendUpdatesResponse, CreateOrDeleteFileOrWorkspaceRequest, CRUDResponse, UpdateUserSettingsRequest, UpdateUserSettingsResponse, DuplicateWorkspaceRequest, DuplicateWorkspaceResponse, ClassData, DistributeWorkspaceRequest, DistributeWorkspaceResponse, GetDatabaseRequest, getDatabaseResponse, GetNewStatementsRequest, GetNewStatementsResponse, AddDatabaseStatementsRequest, AddDatabaseStatementsResponse, TemplateListEntry, GetTemplateListRequest, GetTemplateListResponse, CreateWorkspaceData, GetDatabaseSettingsResponse, GetDatabaseSettingsRequest, setDatabaseSecretRequest as SetDatabaseSecretRequest, SetDatabaseSecretResponse, SetPublishedToRequest, SetPublishedToResponse, GetTemplateRequest, RollbackRequest, RollbackResponse } from \"./Data.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { WDatabase } from \"../workspace/WDatabase.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { CacheManager } from \"./CacheManager.js\";\r\nimport { NotifierClient } from \"./NotifierClient.js\";\r\n\r\nexport class NetworkManager {\r\n\r\n    timerhandle: any;\r\n\r\n    ownUpdateFrequencyInSeconds: number = 20;\r\n    teacherUpdateFrequencyInSeconds: number = 5;\r\n\r\n    updateFrequencyInSeconds: number = 20;\r\n    forcedUpdateEvery: number = 4;\r\n    counterTillForcedUpdate: number = 2;\r\n    secondsTillNextUpdate: number = this.updateFrequencyInSeconds;\r\n    errorHappened: boolean = false;\r\n\r\n    interval: any;\r\n\r\n    notifierClient: NotifierClient;\r\n\r\n    constructor(private main: Main, private $updateTimerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initializeTimer() {\r\n\r\n        let that = this;\r\n        this.$updateTimerDiv.find('svg').attr('width', that.updateFrequencyInSeconds);\r\n\r\n        if (this.interval != null) clearInterval(this.interval);\r\n\r\n        this.interval = setInterval(() => {\r\n\r\n            if (that.main.user == null) return; // don't call server if no user is logged in\r\n\r\n            that.secondsTillNextUpdate--;\r\n\r\n            if (that.secondsTillNextUpdate < 0) {\r\n                that.secondsTillNextUpdate = that.updateFrequencyInSeconds;\r\n                this.counterTillForcedUpdate--;\r\n                let forceUpdate = this.counterTillForcedUpdate == 0;\r\n                if (forceUpdate) this.counterTillForcedUpdate = this.forcedUpdateEvery;\r\n                that.sendUpdates(() => { }, forceUpdate);\r\n            }\r\n\r\n            let $rect = this.$updateTimerDiv.find('.jo_updateTimerRect');\r\n\r\n            $rect.attr('width', that.secondsTillNextUpdate + \"px\");\r\n\r\n            if (that.errorHappened) {\r\n                $rect.css('fill', '#c00000');\r\n                this.$updateTimerDiv.attr('title', \"Fehler beim letzten Speichervorgang -> Werd's wieder versuchen\");\r\n            } else {\r\n                $rect.css('fill', '#008000');\r\n                this.$updateTimerDiv.attr('title', that.secondsTillNextUpdate + \" Sekunden bis zum nächsten Speichern\");\r\n            }\r\n\r\n        }, 1000);\r\n\r\n    }\r\n\r\n    initializeNotifierClient(){\r\n        this.notifierClient = new NotifierClient(this.main, this);\r\n    }\r\n\r\n    sendUpdates(callback?: () => void, sendIfNothingIsDirty: boolean = false) {\r\n\r\n        if (this.main.user == null) return;\r\n\r\n        this.main.projectExplorer.writeEditorTextToFile();\r\n\r\n        let userSettings = this.main.user.settings;\r\n\r\n        let wdList: WorkspaceData[] = [];\r\n        let fdList: FileData[] = [];\r\n\r\n        for (let ws of this.main.workspaceList) {\r\n\r\n            if (!ws.saved) {\r\n                wdList.push(ws.getWorkspaceData(false));\r\n                ws.saved = true;\r\n            }\r\n\r\n            for (let m of ws.moduleStore.getModules(false)) {\r\n                if (!m.file.saved) {\r\n                    m.file.text = m.getProgramTextFromMonacoModel();\r\n                    fdList.push(m.getFileData(ws));\r\n                    // console.log(\"Save file \" + m.file.name);\r\n                    m.file.saved = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        let request: SendUpdatesRequest = {\r\n            workspacesWithoutFiles: wdList,\r\n            files: fdList,\r\n            owner_id: this.main.workspacesOwnerId,\r\n            userId: this.main.user.id,\r\n            language: 1,\r\n            currentWorkspaceId: this.main.getCurrentWorkspace()?.id,\r\n            getModifiedWorkspaces: false\r\n        }\r\n\r\n        let that = this;\r\n        if (wdList.length > 0 || fdList.length > 0 || sendIfNothingIsDirty) {\r\n            ajax('sendUpdates', request, (response: SendUpdatesResponse) => {\r\n                that.errorHappened = !response.success;\r\n                if (!that.errorHappened) {\r\n\r\n                    that.updateWorkspaces(request, response);\r\n\r\n                    if (callback != null) {\r\n                        callback();\r\n                        return;\r\n                    }\r\n                }\r\n            }, () => {\r\n                that.errorHappened = true;\r\n            });\r\n        } else {\r\n            if (callback != null) {\r\n                callback();\r\n                return;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    sendCreateWorkspace(wd: CreateWorkspaceData, owner_id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            wd.id = Math.round(Math.random() * 10000000);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"workspace\",\r\n            data: wd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            wd.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n\r\n    getDatabaseSettings(workspace_id: number, callback: (response: GetDatabaseSettingsResponse) => void) {\r\n        let request: GetDatabaseSettingsRequest = {\r\n            workspaceId: workspace_id\r\n        };\r\n        ajax(\"getDatabaseSettings\", request, (response: GetDatabaseSettingsResponse) => {\r\n            callback(response);\r\n        }, (message) => { alert(message) })\r\n    }\r\n\r\n    setNewSecret(workspace_id: number, kind: string, callback: (secret: string) => void) {\r\n        let request: SetDatabaseSecretRequest = {\r\n            workspaceId: workspace_id,\r\n            secretKind: kind\r\n        };\r\n        ajax(\"setNewSecret\", request, (response: SetDatabaseSecretResponse) => {\r\n            callback(response.secret);\r\n        }, (message) => { alert(message) })\r\n    }\r\n\r\n    setNameAndPublishedTo(workspace_id: number, name: string, published_to: number, description: string, callback: () => void) {\r\n        let request: SetPublishedToRequest = {\r\n            workspaceId: workspace_id,\r\n            databaseName: name,\r\n            publishedTo: published_to,\r\n            description: description\r\n        };\r\n\r\n        ajax(\"setPublishedTo\", request, (response: SetPublishedToResponse) => {\r\n            callback();\r\n        }, (message) => { alert(message) })\r\n    }\r\n\r\n\r\n\r\n    sendCreateFile(m: Module, ws: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        let fd: FileData = m.getFileData(ws);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"file\",\r\n            data: fd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            m.file.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDuplicateWorkspace(ws: Workspace, callback: (error: string, workspaceData?: WorkspaceData) => void) {\r\n\r\n        let request: DuplicateWorkspaceRequest = {\r\n            workspace_id: ws.id,\r\n            language: 1\r\n        }\r\n\r\n        ajax(\"duplicateWorkspace\", request, (response: DuplicateWorkspaceResponse) => {\r\n            callback(response.message, response.workspace)\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDistributeWorkspace(ws: Workspace, klasse: ClassData, student_ids: number[], callback: (error: string) => void) {\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request: DistributeWorkspaceRequest = {\r\n                workspace_id: ws.id,\r\n                class_id: klasse?.id,\r\n                student_ids: student_ids,\r\n                language: 1\r\n            }\r\n\r\n            ajax(\"distributeWorkspace\", request, (response: DistributeWorkspaceResponse) => {\r\n                callback(response.message)\r\n            }, callback);\r\n\r\n        }, false);\r\n\r\n    }\r\n\r\n\r\n    sendDeleteWorkspaceOrFile(type: \"workspace\" | \"file\", id: number, callback: (error: string) => void) {\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"delete\",\r\n            entity: type,\r\n            id: id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            if (response.success) {\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendUpdateUserSettings(callback: (error: string) => void) {\r\n\r\n        let request: UpdateUserSettingsRequest = {\r\n            settings: this.main.user.settings,\r\n            userId: this.main.user.id,\r\n            current_workspace_id: this.main.getCurrentWorkspace()?.id\r\n        }\r\n\r\n        ajax(\"updateUserSettings\", request, (response: UpdateUserSettingsResponse) => {\r\n            if (response.success) {\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n\r\n    getNewStatements(workspace: Workspace, callback: (statements: string[], firstNewStatementIndex: number) => void) {\r\n        let request: GetNewStatementsRequest = {\r\n            workspaceId: workspace.id,\r\n            version_before: workspace.database.version\r\n        }\r\n\r\n        ajax(\"getNewStatements\", request, (response: GetNewStatementsResponse) => {\r\n            if (response.success) {\r\n                callback(response.newStatements, response.firstNewStatementIndex);\r\n            }\r\n        });\r\n    }\r\n\r\n    AddDatabaseStatements(workspace: Workspace, statements: string[], callback: (statements_before: string[], new_version: number) => void) {\r\n        let request: AddDatabaseStatementsRequest = {\r\n            workspaceId: workspace.id,\r\n            version_before: workspace.database.version,\r\n            statements: statements\r\n        }\r\n\r\n        ajax(\"addDatabaseStatements\", request, (response: AddDatabaseStatementsResponse) => {\r\n            if (response.success) {\r\n                callback(response.statements_before, response.new_version);\r\n            }\r\n        });\r\n    }\r\n\r\n    fetchDatabase(workspace: Workspace, callback: (error: string) => void) {\r\n\r\n        let cacheManager: CacheManager = new CacheManager();\r\n\r\n        let request: GetDatabaseRequest = {\r\n            workspaceId: workspace.id\r\n        }\r\n\r\n        ajax(\"getDatabase\", request, (response: getDatabaseResponse) => {\r\n            if (response.success) {\r\n\r\n                workspace.database = WDatabase.fromDatabaseData(response.database, response.version)\r\n                cacheManager.fetchTemplateFromCache(workspace.database.based_on_template_id, (templateDump: Uint8Array) => {\r\n\r\n                    if (templateDump != null) {\r\n                        // @ts-ignore\r\n                        workspace.database.templateDump = pako.inflate(templateDump);\r\n                        callback(null);\r\n                        return;\r\n                    } else {\r\n                        if (workspace.database.based_on_template_id == null) {\r\n                            callback(null);\r\n                            return\r\n                        }\r\n                        this.fetchTemplate(workspace.id, (template) => {\r\n                            if (template != null) {\r\n                                cacheManager.saveTemplateToCache(workspace.database.based_on_template_id, template);\r\n                                // @ts-ignore\r\n                                workspace.database.templateDump = pako.inflate(template);\r\n                                callback(null);\r\n                                return;\r\n                            } else {\r\n                                callback(\"Konnte das Template nicht laden.\");\r\n                                return;\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    fetchTemplate(workspaceId: number, callback: (template: Uint8Array) => void) {\r\n        let request: GetTemplateRequest = {\r\n            workspaceId: workspaceId\r\n        }\r\n\r\n        $.ajax({\r\n            type: 'POST',\r\n            async: true,\r\n            data: JSON.stringify(request),\r\n            contentType: 'application/json',\r\n            url: \"servlet/getTemplate\",\r\n            xhrFields: { responseType: 'arraybuffer' },\r\n            success: function (response: any) {\r\n                callback(new Uint8Array(response));\r\n            },\r\n            error: function (jqXHR, message) {\r\n                alert(\"Konnte das Template nicht laden.\");\r\n                callback(null);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    fetchTemplateList(callback: (templateList: TemplateListEntry[]) => void) {\r\n        let request: GetTemplateListRequest = { user_id: this.main.user.id }\r\n\r\n        ajax(\"getTemplateList\", request, (response: GetTemplateListResponse) => {\r\n            if (response.success) {\r\n                callback(response.templateList);\r\n            } else {\r\n                callback([]);\r\n            }\r\n        }, (message) => {\r\n            alert(message);\r\n            callback([]);\r\n        })\r\n\r\n    }\r\n\r\n    updateWorkspaces(sendUpdatesRequest: SendUpdatesRequest, sendUpdatesResponse: SendUpdatesResponse) {\r\n\r\n        let idToRemoteWorkspaceDataMap: Map<number, WorkspaceData> = new Map();\r\n\r\n        let fileIdsSended = [];\r\n        sendUpdatesRequest.files.forEach(file => fileIdsSended.push(file.id));\r\n\r\n        sendUpdatesResponse.workspaces.workspaces.forEach(wd => idToRemoteWorkspaceDataMap.set(wd.id, wd));\r\n\r\n        let newWorkspaceNames: string[] = [];\r\n\r\n        for (let remoteWorkspace of sendUpdatesResponse.workspaces.workspaces) {\r\n\r\n            let localWorkspaces = this.main.workspaceList.filter(ws => ws.id == remoteWorkspace.id);\r\n\r\n            // Did student get a workspace from his/her teacher?\r\n            if (localWorkspaces.length == 0) {\r\n                newWorkspaceNames.push(remoteWorkspace.name);\r\n                this.createNewWorkspaceFromWorkspaceData(remoteWorkspace);\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        for (let workspace of this.main.workspaceList) {\r\n            let remoteWorkspace: WorkspaceData = idToRemoteWorkspaceDataMap.get(workspace.id);\r\n            if (remoteWorkspace != null) {\r\n                let idToRemoteFileDataMap: Map<number, FileData> = new Map();\r\n                remoteWorkspace.files.forEach(fd => idToRemoteFileDataMap.set(fd.id, fd));\r\n\r\n                let idToModuleMap: Map<number, Module> = new Map();\r\n                // update/delete files if necessary\r\n                for (let module of workspace.moduleStore.getModules(false)) {\r\n                    let fileId = module.file.id;\r\n                    idToModuleMap.set(fileId, module);\r\n                    let remoteFileData = idToRemoteFileDataMap.get(fileId);\r\n                    if (remoteFileData == null) {\r\n                        this.main.projectExplorer.fileListPanel.removeElement(module);\r\n                        this.main.currentWorkspace.moduleStore.removeModule(module);\r\n                    } else if (remoteFileData.version > module.file.version) {\r\n                        if (fileIdsSended.indexOf(fileId) < 0 || remoteFileData.forceUpdate) {\r\n                            module.file.text = remoteFileData.text;\r\n                            module.model.setValue(remoteFileData.text);\r\n\r\n                            module.file.saved = true;\r\n                            module.lastSavedVersionId = module.model.getAlternativeVersionId()\r\n                        }\r\n                        module.file.version = remoteFileData.version;\r\n                    }\r\n                }\r\n\r\n                // add files if necessary\r\n                for (let remoteFile of remoteWorkspace.files) {\r\n                    if (idToModuleMap.get(remoteFile.id) == null) {\r\n                        this.createFile(workspace, remoteFile);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (newWorkspaceNames.length > 0) {\r\n            let message: string = newWorkspaceNames.length > 1 ? \"Folgende Workspaces hat Deine Lehrkraft Dir gesendet: \" : \"Folgenden Workspace hat Deine Lehrkraft Dir gesendet: \";\r\n            message += newWorkspaceNames.join(\", \");\r\n            alert(message);\r\n        }\r\n\r\n        this.main.projectExplorer.workspaceListPanel.sortElements();\r\n        this.main.projectExplorer.fileListPanel.sortElements();\r\n\r\n    }\r\n\r\n    public createNewWorkspaceFromWorkspaceData(remoteWorkspace: WorkspaceData, withSort: boolean = false) {\r\n        let w = this.main.createNewWorkspace(remoteWorkspace.name, remoteWorkspace.owner_id);\r\n        w.id = remoteWorkspace.id;\r\n        w.sql_history = \"\";\r\n        w.path = remoteWorkspace.path;\r\n        w.isFolder = remoteWorkspace.isFolder;\r\n\r\n        this.main.workspaceList.push(w);\r\n        let path = remoteWorkspace.path.split(\"/\");\r\n        if (path.length == 1 && path[0] == \"\") path = [];\r\n\r\n        let panelElement: AccordionElement = {\r\n            name: remoteWorkspace.name,\r\n            externalElement: w,\r\n            iconClass: \"workspace\",\r\n            isFolder: remoteWorkspace.isFolder,\r\n            path: path\r\n        };\r\n\r\n        this.main.projectExplorer.workspaceListPanel.addElement(panelElement, true);\r\n        w.panelElement = panelElement;\r\n\r\n        for (let fileData of remoteWorkspace.files) {\r\n            this.createFile(w, fileData);\r\n        }\r\n\r\n        if (withSort) {\r\n            this.main.projectExplorer.workspaceListPanel.sortElements();\r\n            this.main.projectExplorer.fileListPanel.sortElements();\r\n        }\r\n    }\r\n\r\n    createFile(workspace: Workspace, remoteFile: FileData) {\r\n        let ae: any = null; //AccordionElement\r\n        if (workspace == this.main.currentWorkspace) {\r\n            ae = {\r\n                name: remoteFile.name,\r\n                externalElement: null\r\n            }\r\n\r\n            this.main.projectExplorer.fileListPanel.addElement(ae, true);\r\n        }\r\n\r\n        let f: any = { // File\r\n            id: remoteFile.id,\r\n            name: remoteFile.name,\r\n            dirty: false,\r\n            saved: true,\r\n            text: remoteFile.text,\r\n            version: remoteFile.version,\r\n            identical_to_repository_version: true,\r\n            workspace_id: workspace.id,\r\n            panelElement: ae\r\n        };\r\n        let m = this.main.projectExplorer.getNewModule(f); //new Module(f, this.main);\r\n        if (ae != null) ae.externalElement = m;\r\n        let modulStore = workspace.moduleStore;\r\n        modulStore.putModule(m);\r\n\r\n    }\r\n\r\n    rollback(callback: (error: string, rollbackLocalNeeded: boolean) => void) {\r\n        let workspace = this.main.currentWorkspace;\r\n        let request: RollbackRequest = { workspaceId: workspace.id, version: workspace.database.version }\r\n\r\n        ajax(\"rollback\", request, (response: RollbackResponse) => {\r\n            if (response.success) {\r\n                \r\n                callback(null, workspace.database.version > response.new_version);\r\n            } else {\r\n                alert(response.message);\r\n                callback(response.message, false);\r\n            }\r\n        }, (message) => {\r\n            alert(message);\r\n            callback(message, false);\r\n        })\r\n\r\n    }\r\n\r\n\r\n}","import { UploadTemplateResponse } from \"../communication/Data.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\n\r\nexport class TemplateUploader {\r\n\r\n    uploadCurrentDatabase(workspace_id: number, main: Main, dump: Uint8Array | null, \r\n        reason: \"publishDatabaseAsTemplate\" | \"uploadBaseTemplateForWorkspace\",\r\n        callback: (response: UploadTemplateResponse) => void = () => { }) {\r\n            \r\n        main.waitOverlay.show('Bitte warten, lade Vorlage auf den Server hoch ...');\r\n        if (workspace_id >= 0) {\r\n            let dbTool = main.getDatabaseTool();\r\n            dbTool.export((buffer) => {\r\n                // @ts-ignore\r\n                buffer = pako.deflate(buffer);\r\n                this.uploadIntern(buffer, workspace_id, reason, main, callback);\r\n            }, (error) => {\r\n                alert(\"Fehler beim Exportieren der Datenbank: \" + error)\r\n                main.waitOverlay.hide();\r\n            })\r\n        } else {\r\n            this.uploadIntern(dump, -1, reason, main, callback);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    private uploadIntern(buffer: Uint8Array, workspace_id: number,\r\n        reason: \"publishDatabaseAsTemplate\" | \"uploadBaseTemplateForWorkspace\",\r\n        main: Main, callback: (response: UploadTemplateResponse) => void) {\r\n\r\n        $.ajax({\r\n            type: 'POST',\r\n            async: true,\r\n            contentType: 'application/octet-stream',\r\n            data: buffer,\r\n            processData: false,\r\n            headers: { 'x-workspaceid': \"\" + workspace_id, \"x-reason\": reason },\r\n            url: \"servlet/uploadTemplate\",\r\n            success: function (response: UploadTemplateResponse) {\r\n                main.waitOverlay.hide();\r\n                callback(response);\r\n                return;\r\n\r\n            },\r\n            error: function (jqXHR, message) {\r\n                alert('message');\r\n                main.waitOverlay.hide();\r\n            }\r\n        }\r\n        );\r\n        return buffer;\r\n    }\r\n}","import { CreateWorkspaceData, WorkspaceData } from \"../../communication/Data.js\";\r\nimport { copyTextToClipboard, makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { TemplateUploader } from \"../../tools/TemplateUploader.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\nexport class DatabaseSettingsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private workspace: Workspace) {\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Datenbank-Einstellungen</div>\r\n            <div style=\"width: 100%; margin-left: 10px\">\r\n                <div class=\"jo_ds_settings\" style=\"margin-left: 0px\">\r\n                <div class=\"jo_ds_settings_caption\">Name der Datenbank:</div><div><input class=\"dialog-input jo_databasename\" value=\"Neue Datenbank\"></input></div>\r\n                </div>\r\n\r\n                <div class=\"jo_ds_settings_caption\" style=\"margin-top: 20px\">\r\n                Zugriffscodes für andere Benutzer:\r\n                </div>\r\n                                \r\n                <div>\r\n                    <table class=\"jo_ds_secret_table\">\r\n                    <tr>\r\n                        <td>Nur Lesen:</td><td class=\"jo_ds_secret jo_ds_secret_read\"></td><td id=\"copySecretTdread\"></td><td><button class=\"jo_small_button jo_button_code_read\">Neuen Code generieren</button></td>\r\n                    <tr>\r\n                        <td>Lesen und schreiben:</td><td class=\"jo_ds_secret jo_ds_secret_write\"></td><td id=\"copySecretTdwrite\"></td><td><button class=\"jo_small_button jo_button_code_write\">Neuen Code generieren</button></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Lesen, schreiben und Struktur verändern:</td><td class=\"jo_ds_secret jo_ds_secret_ddl\"></td><td id=\"copySecretTdddl\"></td><td><button class=\"jo_small_button jo_button_code_ddl\">Neuen Code generieren</button></td>\r\n                    </tr>\r\n                    </table>\r\n                </div>\r\n\r\n                <div class=\"jo_ds_settings_caption\" style=\"margin-top: 20px\">\r\n                Beschreibung:\r\n                </div>\r\n                <div>\r\n                <textarea class=\"jo_ds_settings_description\" maxlength=\"5000\"></textarea>\r\n                </div>\r\n\r\n                <div class=\"jo_ds_settings_caption\" style=\"margin-top: 20px\">\r\n                Datenbank freigeben als Vorlage für andere Benutzer:\r\n                </div>\r\n\r\n                <fieldset id=\"jo_ds_publishedTo\">\r\n                    <input type=\"radio\" id=\"b0\" name=\"publishedFilter\" value=\"0\" checked=\"checked\"><label for=\"b0\">Keine Freigabe</label>\r\n                    <input type=\"radio\" id=\"b1\" name=\"publishedFilter\" value=\"1\"><label for=\"b1\">Freigabe für meine Klasse(n)</label>\r\n                    <input type=\"radio\" id=\"b2\" name=\"publishedFilter\" value=\"2\" style=\"visibility: none\"><label id=\"lb2\" for=\"b2\" style=\"visibility: none\">Freigabe für meine Schule</label>\r\n                    <input type=\"radio\" id=\"b3\" name=\"publishedFilter\" value=\"3\" style=\"visibility: none\"><label id=\"lb3\" for=\"b3\" style=\"visibility: none\">Freigabe für alle Schulen</label>\r\n                </fieldset>\r\n\r\n                <div>\r\n                    <input type=\"checkbox\" id=\"jo_upload_db\" name=\"jo_upload_db\">\r\n                    <label for=\"jo_upload_db\">Aktuellen Zustand der Datenbank als Vorlage hochladen</label>\r\n                </div>\r\n            </div>\r\n\r\n\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_save_button\">Speichern</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n\r\n        let that = this;\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { this.showMainWindow(); });\r\n        jQuery('#jo_ds_save_button').on('click', () => { \r\n            this.saveNameAndPublishedTo();\r\n         })\r\n\r\n        this.setValues();\r\n\r\n        [\"read\", \"write\", \"ddl\"].forEach(kind => {\r\n            jQuery('.jo_button_code_' + kind).on('pointerdown', () => {\r\n                that.main.networkManager.setNewSecret(that.workspace.id, kind, (secret) => {\r\n                    jQuery('.jo_ds_secret_'+kind).text(secret);\r\n                })\r\n            })\r\n            let $copyButton = jQuery('<button class=\"jo_small_button jo_copy_secret_button jo_active\">Kopieren</button>')\r\n            jQuery('#copySecretTd' + kind).append($copyButton);\r\n            $copyButton.on('pointerdown', () => {\r\n                copyTextToClipboard(jQuery('.jo_ds_secret_'+kind).text());\r\n            })\r\n        })\r\n\r\n        jQuery('#jo_ds_publishedTo>input').on('change', (e) => {$('#jo_upload_db').prop('checked', !((<HTMLInputElement>jQuery('#b0')[0]).checked))});\r\n\r\n    }\r\n\r\n    saveNameAndPublishedTo(){\r\n        let published_to = 0;\r\n        jQuery('#jo_ds_publishedTo').find('input').each( (n, element) => {\r\n            let $element = jQuery(element);\r\n            //@ts-ignore\r\n            if(<HTMLInputElement>element.checked){\r\n                published_to = Number.parseInt(<string>$element.attr('value'));\r\n            }\r\n        })\r\n\r\n        this.main.networkManager.setNameAndPublishedTo(this.workspace.id, \r\n            <string>jQuery('.jo_databasename').val(), published_to, <string>jQuery('.jo_ds_settings_description').val(),\r\n             () => {\r\n                 if($('#jo_upload_db').prop('checked')){\r\n                    new TemplateUploader().uploadCurrentDatabase(this.workspace.id, this.main, null, \"publishDatabaseAsTemplate\");                    \r\n                 }\r\n                 this.showMainWindow(); \r\n                })\r\n    }\r\n\r\n    setValues(){\r\n        jQuery('.jo_databasename').val(this.workspace.name);\r\n        this.main.networkManager.getDatabaseSettings(this.workspace.id, (response) => {\r\n            [\"read\", \"write\", \"ddl\"].forEach(kind => {\r\n                jQuery('.jo_ds_secret_' + kind).text(response.secrets[kind]);\r\n            });\r\n            if(this.main.user.is_admin){\r\n                jQuery('#b3').css('visibility', 'visible');\r\n                jQuery('#lb3').css('visibility', 'visible');\r\n            }\r\n            if(this.main.user.is_schooladmin){\r\n                jQuery('#b2').css('visibility', 'visible');\r\n                jQuery('#lb2').css('visibility', 'visible');\r\n            }\r\n            // jQuery('#jo_ds_publishedTo input').attr('checked', '');\r\n            jQuery('#b'+response.publishedTo).prop('checked', true);\r\n\r\n            jQuery('#jo_upload_db').prop('checked', response.publishedTo != 0);\r\n\r\n            jQuery('.jo_ds_settings_description').val(this.workspace.database.description);\r\n        })\r\n    }\r\n\r\n    showMainWindow() {\r\n        jQuery('#main').css('visibility', 'visible');\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n    }\r\n\r\n\r\n\r\n}","import { WorkspaceData } from \"../communication/Data.js\";\r\nimport { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { DatabaseSettingsDialog } from \"../main/gui/DatabaseSettingsDialog.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { WDatabase } from \"./WDatabase.js\";\r\n\r\nexport class Workspace {\r\n    \r\n    name: string;\r\n    path: string;\r\n    isFolder: boolean;\r\n    id: number;\r\n    owner_id: number;\r\n\r\n    version: number;\r\n    \r\n    moduleStore: ModuleStore;\r\n    panelElement: AccordionElement;\r\n    currentlyOpenModule: Module;\r\n    saved: boolean = true;\r\n\r\n    compilerMessage: string;\r\n\r\n    databaseId: number;\r\n    database: WDatabase;\r\n\r\n    sql_history: string;\r\n\r\n    permissions: number;\r\n\r\n    constructor(name: string, private main: MainBase, owner_id: number){\r\n        this.name = name;\r\n        this.owner_id = owner_id;\r\n        this.moduleStore = new ModuleStore(main);\r\n        this.sql_history = \"\";\r\n    }\r\n    \r\n    getWorkspaceData(withFiles: boolean): WorkspaceData {\r\n        let wd: WorkspaceData = {\r\n            name: this.name,\r\n            id: this.id,\r\n            owner_id: this.owner_id,\r\n            currentFileId: this.currentlyOpenModule == null ? null : this.currentlyOpenModule.file.id,\r\n            files: [],\r\n            sql_history: this.sql_history,\r\n            path: \"\",\r\n            isFolder: false,  \r\n            permissions: this.permissions,\r\n            database_id: this.databaseId\r\n        }\r\n\r\n        if(withFiles){\r\n            for(let m of this.moduleStore.getModules(false)){\r\n    \r\n                wd.files.push(m.getFileData(this));\r\n    \r\n            }\r\n        }\r\n\r\n        return wd;\r\n    }\r\n\r\n    renderSettingsButton(panelElement: AccordionElement) {\r\n        let $buttonDiv = panelElement?.$htmlFirstLine?.find('.jo_additionalButtonSettings');\r\n        if ($buttonDiv == null) return;\r\n        \r\n        // let myMain: Main = <Main>this.main;\r\n\r\n            let $button = jQuery('<div class=\"jo_settingsButton img_settings jo_button jo_active\" title=\"Datenbank-Einstellungen...\"></div>');\r\n            $buttonDiv.append($button);\r\n            let that = this;\r\n            $button.on('mousedown', (e) => e.stopPropagation());\r\n            $button.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                new DatabaseSettingsDialog(<any>that.main, that);\r\n\r\n            });\r\n\r\n        // } else {\r\n        //     $buttonDiv.find('.jo_startButton').remove();\r\n        // }\r\n    }\r\n\r\n\r\n    static restoreFromData(ws: WorkspaceData, main: Main): Workspace {\r\n\r\n        let w = new Workspace(ws.name, main, ws.owner_id);\r\n        w.id = ws.id;\r\n        w.path = ws.path;\r\n        w.isFolder = ws.isFolder;\r\n        w.owner_id = ws.owner_id;\r\n        w.sql_history = ws.sql_history;\r\n        w.permissions = ws.permissions;\r\n        w.databaseId = ws.database_id;\r\n\r\n        for(let f of ws.files){\r\n\r\n            let m: Module = Module.restoreFromData(f, main);\r\n            w.moduleStore.putModule(m);\r\n\r\n            if(f.id == ws.currentFileId){\r\n                w.currentlyOpenModule = m;\r\n            }\r\n\r\n        }\r\n\r\n        return w;\r\n\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        \r\n        return this.moduleStore.hasErrors();\r\n        \r\n    }\r\n\r\n    getModuleByMonacoModel(model: monaco.editor.ITextModel): Module {\r\n        for(let m of this.moduleStore.getModules(false)){\r\n            if(m.model == model){\r\n                return m;\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    }\r\n}\r\n\r\n","import { Editor } from \"./Editor.js\";\r\nimport { CompletionHint, Module } from \"../../compiler/parser/Module.js\";\r\nimport { Symbol, SymbolTable } from \"../../compiler/parser/SymbolTable.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { Column, Table } from \"../../compiler/parser/SQLTable.js\";\r\n\r\nexport class MyCompletionItemProvider implements monaco.languages.CompletionItemProvider {\r\n\r\n    isConsole: boolean;\r\n\r\n    public triggerCharacters: string[] = ['.', 'abcdefghijklmnopqrstuvwxyzäöüß_ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜ', ' ', ',', '('];\r\n\r\n    public keywordCompletionItems: Map<string, monaco.languages.CompletionItem> = new Map();\r\n\r\n    constructor(private main: MainBase) {\r\n        this.setupKeywordCompletionItems();\r\n    }\r\n\r\n    first: boolean = true;\r\n    provideCompletionItems(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, \r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n\r\n\r\n        let module: Module =\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null || module.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n            let that = this;\r\n\r\n            let wfc = function waitForCompiler(){\r\n                if(module.file.dirty){\r\n                    setTimeout(() => {\r\n                        wfc();\r\n                    }, 100);\r\n                } else {\r\n                    resolve(that.provideCompletionItemsIntern(model, position, context, token));\r\n                }\r\n            }\r\n        \r\n            wfc();\r\n\r\n        })\r\n\r\n        // Promise.resolve({\r\n        //     suggestions: completionItems\r\n        // });\r\n    }\r\n\r\n    provideCompletionItemsIntern(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, \r\n        token: monaco.CancellationToken): monaco.languages.CompletionList {\r\n\r\n        setTimeout(() => {\r\n            //@ts-ignore\r\n            let sw = this.main.getMonacoEditor()._contentWidgets[\"editor.widget.suggestWidget\"].widget;\r\n            if (this.first) {\r\n                sw.toggleDetails();\r\n                this.first = false;\r\n            }\r\n        }, 500);\r\n\r\n        let module: Module =\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null || module.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (this.isStringLiteral(module, position)) return null;\r\n\r\n        let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let symbolTable = module.mainSymbolTable.findTableAtPosition(position.lineNumber, position.column);\r\n        let completionHint: CompletionHint = module.getCompletionHint(position.lineNumber, position.column);\r\n        if (completionHint == null) {\r\n            completionHint = {\r\n                fromColumn: 0,\r\n                toColumn: 0,\r\n                fromLine: 0,\r\n                toLine: 0,\r\n                hintColumns: false,\r\n                hintTables: false,\r\n                hintKeywords: []\r\n            }\r\n        }\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n        this.addKeywordCompletionItems(completionHint, completionItems);\r\n\r\n        let dotMatch = textUntilPosition.match(/.*\\s([\\wöäüÖÄÜß]*)(\\.)([\\wöäüÖÄÜß]*)$/);\r\n\r\n        let ibMatch = textAfterPosition.match(/^([\\wöäüÖÄÜß]*)/);\r\n        let identifierAndBracketAfterCursor = \"\";\r\n        if (ibMatch != null && ibMatch.length > 0) {\r\n            identifierAndBracketAfterCursor = ibMatch[0];\r\n        }\r\n\r\n        if (dotMatch == null) {\r\n            this.addIdentifierCompletionItems(completionHint, symbolTable, completionItems);\r\n        } else {\r\n            this.addDotCompletionItems(position, dotMatch, identifierAndBracketAfterCursor, symbolTable, completionItems);\r\n        }\r\n\r\n        let word = model.getWordUntilPosition(position);\r\n        let replaceWordRange = { startColumn: word.startColumn, startLineNumber: position.lineNumber, endColumn: word.endColumn, endLineNumber: position.lineNumber };\r\n        let insertAfterCursorRange = { startColumn: position.column, startLineNumber: position.lineNumber, endColumn: position.column, endLineNumber: position.lineNumber }\r\n\r\n        for (let item of completionItems) {\r\n            if (item.range == null) {\r\n                if (item.insertText.startsWith(\",\")) {\r\n                    item.range = insertAfterCursorRange;\r\n                } else {\r\n                    item.range = replaceWordRange;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (completionHint.dontHint != null) {\r\n            completionItems = completionItems.filter(item => completionHint.dontHint.indexOf(item.insertText) < 0);\r\n        }\r\n\r\n        return {\r\n            suggestions: completionItems\r\n        };\r\n    }\r\n\r\n\r\n    addDotCompletionItems(position: monaco.Position, dotMatch: RegExpMatchArray, identifierAndBracketAfterCursor: string,\r\n        symbolTable: SymbolTable, completionItems: monaco.languages.CompletionItem[]) {\r\n        let textAfterDot = dotMatch[3];\r\n        let textBeforeDot = dotMatch[1];\r\n        let dotColumn = position.column - textAfterDot.length - 1;\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - textAfterDot.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n        for (let symbol of symbolTable.symbolList) {\r\n            if (symbol.table != null) {\r\n                let identifier: string = symbol.table.identifier;\r\n                if (symbol.tableAlias != null) identifier = symbol.tableAlias;\r\n                if (identifier.toLowerCase() == textBeforeDot) {\r\n                    for (let column of symbol.table.columns) {\r\n                        completionItems.push({\r\n                            label: column.identifier,\r\n                            detail: \"Spalte \" + column.identifier + \" der Tabelle \" + symbol.table.identifier,\r\n                            filterText: column.identifier,\r\n                            insertText: column.identifier,\r\n                            insertTextRules: monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                            kind: monaco.languages.CompletionItemKind.Field,\r\n                            range: rangeToReplace\r\n                        })\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    addIdentifierCompletionItems(completionHint: CompletionHint, symbolTable: SymbolTable, completionItems: monaco.languages.CompletionItem[]) {\r\n        let praefix: string = completionHint.praefix == null ? \"\" : completionHint.praefix;\r\n        let suffix: string = completionHint.suffix == null ? \"\" : completionHint.suffix;\r\n\r\n        if (!(completionHint.hintTables || completionHint.hintColumns)) {\r\n            return;\r\n        }\r\n\r\n        let tableIdentifiers: { [identifier: string]: boolean } = {};\r\n\r\n        let st: SymbolTable = symbolTable;\r\n        let columns: { [identifier: string]: Symbol[] } = {};\r\n        let columnIdentifiers: string[] = [];\r\n\r\n        while (st != null) {\r\n            for (let symbol of st.symbolList) {\r\n                if (symbol.column != null) {\r\n                    let columnIdentifier = symbol.column.identifier;\r\n                    if (columns[columnIdentifier] == null) {\r\n                        columns[columnIdentifier] = [symbol];\r\n                        columnIdentifiers.push(columnIdentifier);\r\n                    } else {\r\n                        columns[columnIdentifier].push(symbol);\r\n                    }\r\n                } else if (symbol.table != null && completionHint.hintTables) {\r\n                    if (!tableIdentifiers[symbol.identifier]) {\r\n                        let insertText = praefix + symbol.identifier + suffix;\r\n                        completionItems.push({\r\n                            label: symbol.identifier,\r\n                            detail: \"Tabelle \" + symbol.table.identifier,\r\n                            filterText: symbol.identifier,\r\n                            insertText: insertText,\r\n                            insertTextRules: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                            kind: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemKind.Snippet : monaco.languages.CompletionItemKind.Class,\r\n                            range: undefined,\r\n                            sortText: \"aa\" + symbol.identifier\r\n                        });\r\n                        tableIdentifiers[symbol.identifier] = true;\r\n                    }\r\n                }\r\n            }\r\n            st = st.parent;\r\n        }\r\n\r\n        if (completionHint.hintColumns) {\r\n            for (let ci of columnIdentifiers) {\r\n                let columList = columns[ci];\r\n                let withTable = columList.length > 1 && completionHint.hintColumnsOfTable == null;\r\n                for (let cs of columList) {\r\n                    let text = cs.identifier;\r\n                    if (withTable && cs.identifier == cs.column.identifier.toLowerCase()) {\r\n                        text = (cs.tableAlias == null ? cs.column.table.identifier : cs.tableAlias) + \".\" + text;\r\n                    }\r\n                    if (completionHint.hintColumnsOfTable == null || cs.column?.table?.identifier == completionHint.hintColumnsOfTable) {\r\n                        let insertText = praefix + text + suffix;\r\n                        completionItems.push({\r\n                            label: text,\r\n                            detail: \"Die Spalte \" + cs.column.identifier + \" der Tabelle \" + cs.column.table.identifier,\r\n                            filterText: text,\r\n                            insertText: insertText,\r\n                            insertTextRules: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                            kind: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemKind.Snippet : monaco.languages.CompletionItemKind.Field,\r\n                            range: undefined\r\n                        })\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    keywordToSnippetMap: { [keyword: string]: string } = {\r\n        \"(\": \"(\\n\\t$0\\n)\",\r\n        \"varchar\": \"varchar($1) $0\",\r\n        \"decimal\": \"decimal($1, $2) $0\"\r\n    }\r\n\r\n    addKeywordCompletionItems(completionHint: CompletionHint, completionItems: monaco.languages.CompletionItem[]) {\r\n        let praefix: string = completionHint.praefix == null ? \"\" : completionHint.praefix;\r\n        let suffix: string = completionHint.suffix == null ? \"\" : completionHint.suffix;\r\n\r\n\r\n        for (let text of completionHint.hintKeywords) {\r\n            let insertText = praefix + text + suffix;\r\n            let snippet = this.keywordToSnippetMap[text];\r\n\r\n            let ci = this.keywordCompletionItems.get(text);\r\n            if (ci != null) {\r\n                completionItems.push(ci);\r\n            } else if (snippet != null) {\r\n                let label = snippet.replace(\"$0\", \"\").replace(\"$1\", \"\").replace(\"$2\", \"\").replace(/ /g, \"\").replace(/\\n/g, \"\").replace(/\\t/g, \"\");\r\n                completionItems.push({\r\n                    label: label,\r\n                    detail: \"\",\r\n                    filterText: text,\r\n                    insertText: snippet,\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                })\r\n            } else {\r\n                completionItems.push({\r\n                    label: text,\r\n                    detail: \"\",\r\n                    filterText: text,\r\n                    insertText: text,\r\n                    insertTextRules: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                    kind: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemKind.Snippet : monaco.languages.CompletionItemKind.Keyword,\r\n                    range: undefined,\r\n                    sortText: text == \"from\" ? \"*\" : undefined\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    isStringLiteral(module: Module, position: monaco.Position) {\r\n\r\n        let tokenList = module.tokenList;\r\n        if (tokenList == null || tokenList.length == 0) return false;\r\n\r\n        let posMin = 0;\r\n        let posMax = tokenList.length - 1;\r\n        let pos: number;\r\n\r\n        let watchDog = 1000;\r\n\r\n        while (true) {\r\n            let posOld = pos;\r\n            pos = Math.round((posMax + posMin) / 2);\r\n\r\n            if (posOld == pos) return false;\r\n\r\n            watchDog--;\r\n            if (watchDog == 0) return false;\r\n\r\n            let t = tokenList[pos];\r\n            let p = t.position;\r\n\r\n            if (p.line < position.lineNumber || p.line == position.lineNumber && p.column + p.length < position.column) {\r\n                posMin = pos;\r\n                continue;\r\n            }\r\n\r\n            if (p.line > position.lineNumber || p.line == position.lineNumber && p.column > position.column) {\r\n                posMax = pos;\r\n                continue;\r\n            }\r\n\r\n            return t.tt == TokenType.stringConstant;\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    setupKeywordCompletionItems() {\r\n        this.keywordCompletionItems.set(\"delete from\",\r\n            {\r\n                label: \"delete from <Tabelle> where <Bedingung>\",\r\n                detail: \"Anweisung zum Löschen von Datensätzen\",\r\n                filterText: `delete from`,\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `delete from `,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"drop table\",\r\n            {\r\n                label: \"drop table <Tabelle>\",\r\n                detail: \"Anweisung zum Löschen einer Tabelle\",\r\n                filterText: 'drop table',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `drop table `,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"alter\",\r\n            {\r\n                label: \"alter table <Tabelle> <rename to, rename column, add column, drop column>\",\r\n                detail: \"Anweisung zum Ändern des Schemas (alter table <Tabelle> <rename to, rename column, add column, drop column>)\",\r\n                filterText: 'alter',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `alter table `,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"select\",\r\n            {\r\n                label: \"select <Spalten> from <Tabellen> where <Bedingung>\",\r\n                detail: \"Select-Anweisung\",\r\n                filterText: 'select',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `select * from $1\\nwhere $0\\n`,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"create table\",\r\n            {\r\n                label: \"create table <Tabellenbezeichner> (<Spaltendefinitionen>)\",\r\n                detail: \"Create table-Anweisung (Erstellt eine neue Tabelle)\",\r\n                filterText: 'create',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `create table $1 (\\n\\t$0\\n);`,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        // this.keywordCompletionItems.set(\"from\",\r\n        //     {\r\n        //         label: \"from <Tabellen> where <Bedingung>\",\r\n        //         detail: \"from-Teil der select-Anweisung\",\r\n        //         filterText: 'from',\r\n        //         // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n        //         insertText: `from $1\\nwhere $0\\n`,\r\n        //         command: {\r\n        //             id: \"editor.action.triggerSuggest\",\r\n        //             title: '123',\r\n        //             arguments: []\r\n        //         },\r\n        //         insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n        //         kind: monaco.languages.CompletionItemKind.Snippet,\r\n        //         range: undefined\r\n        //     });\r\n\r\n    }\r\n\r\n\r\n}","import { Module, MethodCallPosition } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\n\r\n\r\nexport class MySignatureHelpProvider implements monaco.languages.SignatureHelpProvider {\r\n\r\n    signatureHelpTriggerCharacters?: readonly string[] = ['(', ',', ';', '<', '>', '=']; // semicolon, <, >, = for for-loop, if, while, ...\r\n    signatureHelpRetriggerCharacters?: readonly string[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    provideSignatureHelp(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let that = this;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            setTimeout(() => {\r\n\r\n                this.main.compileIfDirty();\r\n\r\n                resolve(that.provideSignatureHelpLater(model, position, token, context));\r\n\r\n            }, 300);\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    provideSignatureHelpLater(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model != this.main.getMonacoEditor().getModel());\r\n\r\n        let module: Module = \r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        // let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        // let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let methodCallPositions = module.methodCallPositions[position.lineNumber];\r\n\r\n        if (methodCallPositions == null) return null;\r\n\r\n        let methodCallPosition: MethodCallPosition = null;\r\n        let rightMostPosition: number = -1;\r\n\r\n        for (let i = methodCallPositions.length - 1; i >= 0; i--) {\r\n            let mcp = methodCallPositions[i];\r\n            if (mcp.identifierPosition.column + mcp.identifierPosition.length < position.column\r\n                && mcp.identifierPosition.column > rightMostPosition) {\r\n                if (mcp.rightBracketPosition == null ||\r\n                    (position.lineNumber <= mcp.rightBracketPosition.line && position.column <= mcp.rightBracketPosition.column)\r\n                    || (position.lineNumber < mcp.rightBracketPosition.line)) {\r\n                    methodCallPosition = mcp;\r\n                    rightMostPosition = mcp.identifierPosition.column;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (methodCallPosition == null) return null;\r\n\r\n        return this.getSignatureHelp(methodCallPosition, position);\r\n\r\n\r\n\r\n    }\r\n\r\n    getSignatureHelp(methodCallPosition: MethodCallPosition,\r\n        position: monaco.Position): monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let parameterIndex: number = 0;\r\n\r\n        for (let cp of methodCallPosition.commaPositions) {\r\n            if (cp.line < position.lineNumber || (cp.line == position.lineNumber && cp.column < position.column)) {\r\n                parameterIndex++;\r\n            }\r\n        }\r\n\r\n        let signatureInformationList: monaco.languages.SignatureInformation[] = [];\r\n\r\n        return Promise.resolve({\r\n            value: {\r\n                activeParameter: parameterIndex,\r\n                activeSignature: 0,\r\n                signatures: signatureInformationList\r\n            },\r\n            dispose: () => { }\r\n        });\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\n\r\n\r\n\r\nexport class MyHoverProvider {\r\n\r\n    private static keywordDescriptions: { [keyword: string]: string } = {\r\n        \"print\": \"Die Anweisung ```print``` gibt eine Zeichenkette aus.\",\r\n        \"new\": \"Das Schlüsselwort ```new``` bewirkt die Instanzierung (\\\"Erschaffung\\\") eines neuen Objektes einer Klasse.\",\r\n        \"println\": \"Die Anweisung ```println``` gibt eine Zeichenkette gefolgt von einem Zeilenumbruch aus.\",\r\n        \"while\": \"```\\nwhile (Bedingung) {Anweisungen}\\n```  \\nbewirkt die Wiederholung der Anweisungen solange ```Bedingung == true``` ist.\",\r\n        \"for\": \"```\\nfor(Startanweisung;Solange-Bedingung;Nach_jeder_Wiederholung){Anweisungen}\\n```  \\n\"\r\n            + \"führt zunächst die Startanweisung aus und wiederholt dann die Anweisungen solange ```Bedingung == true``` ist. Am Ende jeder wiederholung wird Nach_jeder_Wiederholung ausgeführt.\",\r\n        \"if\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.  \\nDer ```else```-Teil kann auch weggelassen werden.\",\r\n        \"else\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.\",\r\n        \"switch\": \"```\\nswitch(Selektor){ case Wert_1: Anweisungen_1; break; case Wert_2: Anweisungen_2; break; default: Default-Anweisungen } \\n```  \\nwertet den Selektor-Term aus und führt abhängig vom Termwert Anweisungen_1, Anweisungen_2, ... aus. Entspricht der Termwert keinem der Werte Wert_1, Wert_2, ..., so werden die Default-Anweisungen ausgeführt.\",\r\n        \"%\": \"```\\na % b\\n```  \\n (sprich: 'a modulo b') berechnet den **Rest** der ganzzahligen Division a/b.\",\r\n        \"==\": \"```\\na == b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` gleich sind.  \\nSind a und b **Objekte**, so ergibt ```a == b``` nur dann ```true```, wenn ```a``` und ```b``` auf das **identische** Objekt zeigen.  \\n```==``` nennt man **Vergleichsoperator**.\",\r\n        \"<=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` kleiner oder gleich dem Wert von ```b``` ist.\",\r\n        \">=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` größer oder gleich dem Wert von ```b``` ist.\",\r\n        \"!=\": \"```\\na != b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` **un**gleich sind.  \\nSind ```a``` und ```b``` **Objekte**, so ergibt ```a != b``` dann ```true```, wenn ```a``` und ```b``` **nicht** auf das **identische** Objekt zeigen.  \\n```!=``` nennt man **Ungleich-Operator**.\",\r\n        \"+=\": \"```\\na += b\\n(Kurzschreibweise für a = a + b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erhöht** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"-=\": \"```\\na -= b\\n(Kurzschreibweise für a = a - b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erniedrigt** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"*=\": \"```\\na *= b\\n(Kurzschreibweise für a = a * b)\\n```  \\nbewirkt, dass der Wert von ```a``` mit dem Wert von ```b``` **multipliziert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"/=\": \"```\\na /= b\\n(Kurzschreibweise für a = a / b)\\n```  \\nbewirkt, dass der Wert von ```a``` durch den Wert von ```b``` **dividiert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"++\": \"```\\na++\\n(Kurzschreibweise für a = a + 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins erhöht wird.\",\r\n        \"--\": \"```\\na--\\n(Kurzschreibweise für a = a - 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins eniedrigt wird.\",\r\n        \"=\": \"```\\na = Term\\n```  \\nberechnet den Wert des Terms und weist ihn der Variablen ```a``` zu.  \\n**Vorsicht:**  \\nVerwechsle ```=```(**Zuweisungsoperator**) nicht mit ```==```(**Vergleichsoperator**)!\",\r\n        \"!\": \"```\\n!a\\n```  \\nergibt genau dann ```true```, wenn ```a``` ```false``` ergibt.  \\n```!``` spricht man '**nicht**'.\",\r\n        \"public\": \"```\\npublic\\n```  \\nAttribute und Methoden, die als ```public``` deklariert werden, sind überall (auch außerhalb der Klasse) sichtbar.\",\r\n        \"private\": \"```\\nprivate\\n```  \\nAttribute und Methoden, die als ```private``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse sichtbar.\",\r\n        \"protected\": \"```\\nprotected\\n```  \\nAttribute und Methoden, die als ```protected``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse oder innerhalb von Methoden von Kindklassen sichtbar.\",\r\n        \"return\": \"```\\nreturn Term\\n```  \\nbewirkt, dass die Methode verlassen wird und der Wert des Terms an die aufrufende Stelle zurückgegeben wird.\",\r\n        \"break\": \"```\\nbreak;\\n```  \\ninnerhalb einer Schleife bewirkt, dass die Schleife sofort verlassen und mit den Anweisungen nach der Schleife fortgefahren wird.  \\n\"+\r\n        \"```break``` innerhalb einer ```switch```-Anweisung bewirkt, dass der Block der ```switch```-Anweisung verlassen wird.\",\r\n        \"class\": \"```\\nclass\\n```  \\nMit dem Schlüsselwort ```class``` werden Klassen definiert.\",\r\n        \"extends\": \"```\\nextends\\n```  \\n```class A extends B { ... }``` bedeutet, dass die Klasse A Unterklasse der Klasse B ist.\",\r\n        \"implements\": \"```\\nimplements\\n```  \\n```class A implements B { ... }``` bedeutet, dass die Klasse A das Interface B implementiert, d.h., dass sie alle Methoden besitzen muss, die in B definiert sind.\",\r\n        \"this\": \"```\\nthis\\n```  \\nInnerhalb einer Methodendefinition bezeichnet das Schlüsselwor ```this``` immer dasjenige Objekt, für das die Methode gerade ausgeführt wird.\",\r\n\r\n    }\r\n\r\n    constructor(private editor: Editor) {\r\n\r\n    }\r\n\r\n    provideHover(model: monaco.editor.ITextModel, position: monaco.Position, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Hover> {\r\n\r\n        let selection: monaco.Selection = this.editor.editor.getSelection();\r\n        \r\n        // if cursor is inside current selection then don't show hover, because editor.onDidChangeCursorPosition evaluates selected Text \r\n        // (see class Editor).\r\n        if(selection != null){\r\n            if(selection.startLineNumber != selection.endLineNumber || selection.startColumn != selection.endColumn){\r\n                if(\r\n                    (selection.startLineNumber < position.lineNumber || selection.startLineNumber == position.lineNumber && selection.startColumn <= position.column) && \r\n                    (selection.endLineNumber > position.lineNumber || selection.endLineNumber == position.lineNumber && selection.endColumn >= position.column) \r\n                ){\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        let module: Module = this.editor.main.getCurrentWorkspace()?.getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        for(let errorList of module.errors){\r\n            for(let error of errorList){\r\n                if(error.position.line == position.lineNumber && \r\n                    error.position.column <= position.column && \r\n                    error.position.column + error.position.length >= position.column){\r\n                        return null; // Show error-tooltip and don't show hover-tooltip\r\n                    }\r\n            }\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let declarationAsString = \"\";\r\n\r\n        if (element != null) {\r\n        } else {\r\n            let word = this.getWordUnderCursor(model, position);\r\n            let desc = MyHoverProvider.keywordDescriptions[word];\r\n            if (desc != null) {\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: desc }],\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getWordUnderCursor(model: monaco.editor.ITextModel, position: monaco.Position)\r\n         : string {\r\n        \r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let word = \"\";\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierOrArrayDescriptor(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        if (end - begin > 1) {\r\n            word = text.substring(begin, end);\r\n        } else {\r\n            end = pos;\r\n            while (end < text.length && this.isInsideOperator(text.charAt(end))) {\r\n                end++;\r\n            }\r\n    \r\n            begin = pos;\r\n            while (begin > 0 && this.isInsideOperator(text.charAt(begin - 1))) {\r\n                begin--;\r\n            }\r\n    \r\n            if (end - begin > 0) {\r\n                word = text.substring(begin, end);\r\n            }\r\n        }\r\n\r\n        return word;\r\n\r\n    }\r\n\r\n    widenDeclaration(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        identifier: string): string {\r\n\r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierChain(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        let lenght: number = identifier?.length == null ? 1 : identifier.length;\r\n\r\n        if (end - begin > length) {\r\n            return text.substring(begin, end);\r\n        }\r\n\r\n        return identifier;\r\n    }\r\n\r\n    isInsideIdentifierChain(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß_\\[\\]\\.]/i);\r\n\r\n    }\r\n\r\n    isInsideOperator(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[!%<>=\\+\\-\\*\\/]/i);\r\n\r\n    }\r\n\r\n    isInsideIdentifierOrArrayDescriptor(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß\\[\\]]/i);\r\n\r\n    }\r\n\r\n\r\n}","import { QuickFix } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyCodeActionProvider implements monaco.languages.CodeActionProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideCodeActions(model: monaco.editor.ITextModel, range: monaco.Range, context: monaco.languages.CodeActionContext, token: monaco.CancellationToken): monaco.languages.CodeActionList | Promise<monaco.languages.CodeActionList> {\r\n        const actions = context.markers.map(error => {\r\n            let quickFix: QuickFix = <any>error.relatedInformation;\r\n            if (quickFix == null) return null;\r\n\r\n            let codeAction: monaco.languages.CodeAction = {\r\n                title: quickFix.title,\r\n                diagnostics: [error],\r\n                kind: \"quickfix\",\r\n                edit: {\r\n                    edits: quickFix.editsProvider(model.uri)\r\n                },\r\n                isPreferred: true\r\n            };\r\n            return codeAction;\r\n        });\r\n        return {\r\n            actions: actions,\r\n            dispose: () => { }\r\n        }\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Editor } from \"./Editor.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyReferenceProvider implements monaco.languages.ReferenceProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideReferences(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.ReferenceContext, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Location[]> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) return null;\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let referencePositions: monaco.languages.Location[] = [];\r\n\r\n        usagePositions.forEach((upInCurrentModule, module) => {\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    referencePositions.push(\r\n                        {\r\n                            uri: module.uri,\r\n                            range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length }\r\n                        });\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        return referencePositions;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import { Main } from \"../Main.js\";\r\n\r\nexport type HelperDirection = \"top\" | \"bottom\" | \"left\" | \"right\";\r\n\r\nexport class Helper {\r\n\r\n    public static openHelper(text: string, targetElement: JQuery<HTMLElement>, direction: HelperDirection) {\r\n\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.removeClass(['jo_arrow_box_left', 'jo_arrow_box_right', 'jo_arrow_box_top', 'jo_arrow_box_bottom']);\r\n\r\n        $helper.addClass('jo_arrow_box_' + direction);\r\n\r\n        $helper.css({ left: '', right: '', top: '', bottom: '' });\r\n\r\n        let to = targetElement.offset();\r\n        let b = jQuery('body');\r\n\r\n        let delta: number = 34;\r\n\r\n        switch (direction) {\r\n            case \"bottom\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                bottom: b.height() - to.top + delta\r\n            });\r\n                break;\r\n            case \"top\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                top: to.top + targetElement.height() + 26\r\n            });\r\n                break;\r\n            case \"left\": $helper.css({\r\n                left: to.left + targetElement.width() + delta,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n            case \"right\": $helper.css({\r\n                right: b.width() - to.left,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n        }\r\n\r\n        $helper.find('span').html(text);\r\n\r\n        let $button = $helper.find('.jo_button');\r\n        $button.on('click', (e) => {\r\n            e.stopPropagation();\r\n            $button.off('click');\r\n            Helper.close();\r\n        });\r\n\r\n        $helper.fadeIn(800);\r\n\r\n    }\r\n\r\n    static close() {\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.fadeOut(800);\r\n    }\r\n\r\n\r\n    static showHelper(id: string, mainBase: Main, $element?: JQuery<HTMLElement>) {\r\n\r\n        let main: Main;\r\n        if(mainBase instanceof Main){\r\n            main = mainBase;\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        let helperHistory = main.user.settings!.helperHistory;\r\n\r\n        let flag = id + \"Done\";\r\n\r\n        if (helperHistory != null && (helperHistory[flag] == null || !helperHistory[flag])) {\r\n            helperHistory[flag] = true;\r\n            main.networkManager.sendUpdateUserSettings(() => { });\r\n\r\n            let text: string = \"\";\r\n            let direction: HelperDirection = \"left\";\r\n\r\n            switch (id) {\r\n                case \"newDatabaseHelper\":\r\n                    text = `Es gibt noch keine Datenbank. <br> Nutzen Sie den Button\r\n                        <span class='img_add-database-dark jo_inline-image'></span> um eine Datenbank anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                    case \"newSQLFileHelper\":\r\n                        text = `Es gibt noch keine Datei mit SQL-Anweisungen. <br> Nutzen Sie den Button \r\n                            <span class='img_add-file-dark jo_inline-image'></span> um eine neue Datei anzulegen.\r\n                            `;\r\n                        direction = \"left\";\r\n                        break;\r\n                case \"homeButtonHelper\":\r\n                    text = \"Mit dem Home-Button <span class='img_home-dark jo_inline-image'></span> können Sie wieder zu Ihren eigenen Workspaces wechseln.\";\r\n                    direction = \"top\";\r\n                    $element = jQuery('.img_home-dark');\r\n                    break;\r\n                case \"playButtonHelper\":\r\n                    text = `Mit dem \"Start-Button\"\r\n                        (<span class='img_start-dark jo_inline-image'></span>) \r\n                        oder der Tastenkombination &lt;Strg&gt;&nbsp;+&nbsp&lt;Enter&gt; \r\n                        wird die Anweisung ausgeführt, in der der Cursor gerade steht. \r\n                        <br> Wollen Sie mehrere Anweisungen hintereinander ausführen, so markieren \r\n                        Sie alle Anweisungen und klicken Sie dann auf <span class='img_start-dark jo_inline-image'></span>\r\n                        oder drücken Sie  &lt;Strg&gt;&nbsp;+&nbsp&lt;Enter&gt;. `;\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"consoleHelper\": \r\n                    text=`\r\n                        Hier können Sie Anweisungen oder Terme eingeben, die nach Bestätigung mit der Enter-Taste ausgeführt/ausgewertet werden. Das Ergebnis sehen Sie im Bereich über der Eingabezeile. <br>\r\n                        Falls das Programm gerade pausiert (z.B. bei Ausführung in Einzelschritten) können Sie auch auf die Variablen des aktuellen Sichtbarkeitsbereiches zugreifen.\r\n                    `;\r\n                    direction = \"bottom\";\r\n            }\r\n\r\n            if (text != \"\" && $element != null && $element.length > 0) {\r\n                Helper.openHelper(text, $element, direction);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MyCompletionItemProvider } from \"./MyCompletionItemProvider.js\";\r\nimport { defineMyJava } from \"./MyJava.js\";\r\nimport { MySignatureHelpProvider } from \"./MySignatureHelpProvider.js\";\r\nimport { MyHoverProvider } from \"./MyHoverProvider.js\";\r\nimport { MyCodeActionProvider } from \"./MyCodeActionProvider.js\";\r\nimport { MyReferenceProvider } from \"./MyReferenceProvider.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { defineVscSQL } from \"./VscSql.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\nexport class Editor {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n\r\n    cw: monaco.editor.IContentWidget = null;\r\n\r\n    dontPushNextCursorMove: number = 0;\r\n\r\n    constructor(public main: MainBase, private showMinimap: boolean, private isEmbedded: boolean) {\r\n    }\r\n\r\n    initGUI($element: JQuery<HTMLElement>) {\r\n\r\n\r\n\r\n        defineVscSQL();\r\n\r\n        monaco.editor.defineTheme('myCustomThemeDark', {\r\n            base: 'vs-dark', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'functions', foreground: 'dcdcaa', fontStyle: 'italic' },\r\n                { token: 'string.sql', foreground: '3DC9B0' },\r\n                { token: 'number', foreground: '7bef3f' },\r\n                { token: 'type', foreground: '499cd6' },\r\n                { token: 'identifier', foreground: 'effefe' },\r\n                { token: 'statement', foreground: '9cdcfe', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '619ceb', fontStyle: 'bold' },\r\n                { token: 'table', foreground: 'ff0000', fontStyle: 'bold' },\r\n                { token: 'delimiter', foreground: 'e8eb38' }\r\n                // { token: 'comment.js', foreground: '008800', fontStyle: 'bold italic underline' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#1e1e1e\",\r\n                \"jo_highlightStatementGreen\": \"#004000\",\r\n                \"jo_highlightStatementYellow\": \"#404000\",\r\n                \"jo_highlightStatementRed\": \"#402020\"\r\n            }\r\n        });\r\n\r\n        monaco.editor.defineTheme('myCustomThemeLight', {\r\n            base: 'vs', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'functions', foreground: '694E16', fontStyle: 'italic bold' },\r\n                { token: 'string.sql', foreground: 'a03030' },\r\n                { token: 'number', foreground: '404040' },\r\n                { token: 'type', foreground: '0000ff', fontStyle: 'bold' },\r\n                { token: 'identifier', foreground: '8000e0' },\r\n                { token: 'statement', foreground: '001080', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '00a000', fontStyle: 'bold' },\r\n                { token: 'comment', foreground: '808080', fontStyle: 'italic' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#FFFFFF\",\r\n                \"editor.foreground\": \"#000000\",\r\n                \"editor.inactiveSelectionBackground\": \"#E5EBF1\",\r\n                \"editorIndentGuide.background\": \"#D3D3D3\",\r\n                \"editorIndentGuide.activeBackground\": \"#939393\",\r\n                \"editor.selectionHighlightBackground\": \"#ADD6FF80\",\r\n                \"editorSuggestWidget.background\": \"#F3F3F3\",\r\n                \"activityBarBadge.background\": \"#007ACC\",\r\n                \"sideBarTitle.foreground\": \"#6F6F6F\",\r\n                \"list.hoverBackground\": \"#E8E8E8\",\r\n                \"input.placeholderForeground\": \"#767676\",\r\n                \"searchEditor.textInputBorder\": \"#CECECE\",\r\n                \"settings.textInputBorder\": \"#CECECE\",\r\n                \"settings.numberInputBorder\": \"#CECECE\",\r\n                \"statusBarItem.remoteForeground\": \"#FFF\",\r\n                \"statusBarItem.remoteBackground\": \"#16825D\",\r\n                \"jo_highlightStatementGreen\": \"#004000\",\r\n                \"jo_highlightStatementYellow\": \"#404000\",\r\n                \"jo_highlightStatementRed\": \"#400000\"\r\n            }\r\n        });\r\n\r\n\r\n        this.editor = monaco.editor.create($element[0], {\r\n            // value: [\r\n            //     'function x() {',\r\n            //     '\\tconsole.log(\"Hello world!\");',\r\n            //     '}'\r\n            // ].join('\\n'),\r\n            // language: 'myJava',\r\n            language: 'vscSQL',\r\n            lightbulb: {\r\n                enabled: true\r\n            },\r\n            // gotoLocation: {\r\n            //     multipleReferences: \"gotoAndPeek\"\r\n            // },\r\n            lineDecorationsWidth: 0,\r\n            peekWidgetDefaultFocus: \"tree\",\r\n            fixedOverflowWidgets: true,\r\n            quickSuggestions: true,\r\n            quickSuggestionsDelay: 10,\r\n            fontSize: 14,\r\n            fontFamily: \"Consolas, Roboto Mono\",\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            selectOnLineNumbers: false,\r\n            // selectionHighlight: false,\r\n            automaticLayout: true,\r\n            scrollBeyondLastLine: false,\r\n            occurrencesHighlight: false,\r\n            autoIndent: \"full\",\r\n            dragAndDrop: true,\r\n            formatOnType: true,\r\n            formatOnPaste: true,\r\n            suggestFontSize: 16,\r\n            suggestLineHeight: 22,\r\n            suggest: {\r\n                localityBonus: true,\r\n                insertMode: \"replace\"\r\n                // snippetsPreventQuickSuggestions: false\r\n            },\r\n            parameterHints: { enabled: true, cycle: true },\r\n            // //@ts-ignore\r\n            // contribInfo: {\r\n            //     suggestSelection: 'recentlyUsedByPrefix',\r\n            // },\r\n\r\n            mouseWheelZoom: this.isEmbedded,\r\n\r\n            minimap: {\r\n                enabled: this.showMinimap\r\n            },\r\n            scrollbar: {\r\n                vertical: 'auto',\r\n                horizontal: 'auto'\r\n            },\r\n            theme: \"myCustomThemeDark\",\r\n            // automaticLayout: true\r\n\r\n\r\n        }\r\n        );\r\n\r\n        let that = this;\r\n\r\n        let mouseWheelListener = (event: WheelEvent) => {\r\n            if (event.ctrlKey === true) {\r\n\r\n                that.changeEditorFontSize(Math.sign(event.deltaY), true);\r\n\r\n                event.preventDefault();\r\n            }\r\n        };\r\n\r\n\r\n        this.editor.onDidChangeConfiguration((event) => {\r\n            if (event.hasChanged(monaco.editor.EditorOption.fontInfo) && this.isEmbedded) {\r\n\r\n                this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n            }\r\n        });\r\n\r\n        this.editor.onDidChangeCursorPosition((event) => {\r\n\r\n            that.onDidChangeCursorPosition(event.position);\r\n\r\n        });\r\n\r\n        // We need this to set our model after user uses Strg+click on identifier\r\n        this.editor.onDidChangeModel((event) => {\r\n\r\n            let element: HTMLDivElement = <any>$element.find('.monaco-editor')[0];\r\n            element.removeEventListener(\"wheel\", mouseWheelListener);\r\n            element.addEventListener(\"wheel\", mouseWheelListener, { passive: false });\r\n\r\n            if (this.main.getCurrentWorkspace() == null) return;\r\n\r\n            let module = this.main.getCurrentWorkspace().getModuleByMonacoModel(this.editor.getModel());\r\n            if (this.main instanceof Main && module != null) {\r\n\r\n                this.main.projectExplorer.setActiveAfterExternalModelSet(module);\r\n            }\r\n        });\r\n\r\n        monaco.languages.registerHoverProvider('vscSQL', new MyHoverProvider(this));\r\n\r\n        monaco.languages.registerCompletionItemProvider('vscSQL', new MyCompletionItemProvider(this.main));\r\n        monaco.languages.registerCodeActionProvider('vscSQL', new MyCodeActionProvider(this.main));\r\n        monaco.languages.registerReferenceProvider('vscSQL', new MyReferenceProvider(this.main));\r\n\r\n\r\n        monaco.languages.registerSignatureHelpProvider('vscSQL', new MySignatureHelpProvider(this.main));\r\n\r\n        this.editor.onMouseDown((e: monaco.editor.IEditorMouseEvent) => {\r\n            const data = e.target.detail;\r\n            if (e.target.type !== monaco.editor.MouseTargetType.GUTTER_GLYPH_MARGIN &&\r\n                e.target.type !== monaco.editor.MouseTargetType.GUTTER_LINE_NUMBERS || data.isAfterLines) {\r\n                return;\r\n            }\r\n            that.onMarginMouseDown(e.target.position.lineNumber);\r\n            return;\r\n        });\r\n\r\n\r\n        // If editor is instantiated before fonts are loaded then indentation-lines\r\n        // are misplaced, see https://github.com/Microsoft/monaco-editor/issues/392\r\n        // so:\r\n        setTimeout(() => {\r\n            monaco.editor.remeasureFonts();\r\n        }, 2000);\r\n\r\n        this.addActions();\r\n\r\n        //@ts-ignore\r\n        this.editor.onDidType((text) => { that.onDidType(text) });\r\n\r\n        return this.editor;\r\n    }\r\n\r\n\r\n    onDidType(text: string) {\r\n        //        const endOfCommentText = \" * \\n */\";\r\n\r\n        const insertEndOfComment = (pos, insertText: string, newLine: number, newColumn: number) => {\r\n            const range = new monaco.Range(\r\n                pos.lineNumber,\r\n                pos.column,\r\n                pos.lineNumber,\r\n                pos.column\r\n            );\r\n            this.editor.executeEdits(\"new-bullets\", [\r\n                { range, text: insertText }\r\n            ]);\r\n\r\n            // Set position after bulletText\r\n            this.editor.setPosition({\r\n                lineNumber: newLine,\r\n                column: newColumn\r\n            });\r\n        };\r\n\r\n        if (text === \"\\n\") {\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            const prevLine = model.getLineContent(position.lineNumber - 1);\r\n            if (prevLine.trim().indexOf(\"/*\") === 0 && !prevLine.trimRight().endsWith(\"*/\")) {\r\n                const nextLine = position.lineNumber < model.getLineCount() ? model.getLineContent(position.lineNumber + 1) : \"\";\r\n                if (!nextLine.trim().startsWith(\"*\")) {\r\n                    let spacesAtBeginningOfLine: string = prevLine.substr(0, prevLine.length - prevLine.trimLeft().length);\r\n                    if (prevLine.trim().indexOf(\"/**\") === 0) {\r\n                        insertEndOfComment(position, \"\\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    } else {\r\n                        insertEndOfComment(position, \" * \\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    lastTime: number = 0;\r\n    setFontSize(fontSizePx: number) {\r\n\r\n        // console.log(\"Set font size: \" + fontSizePx);\r\n        let time = new Date().getTime();\r\n        if (time - this.lastTime < 150) return;\r\n        this.lastTime = time;\r\n\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (this.main instanceof Main) {\r\n            this.main.viewModeController.saveFontSize(fontSizePx);\r\n        }\r\n\r\n        if (fontSizePx != editorfs) {\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx\r\n            });\r\n\r\n            // editor does not set fontSizePx, but fontSizePx * zoomfactor with unknown zoom factor, so \r\n            // we have to do this dirty workaround:\r\n            let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n            let factor = newEditorfs / fontSizePx;\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx / factor\r\n            });\r\n\r\n        }\r\n\r\n        jQuery('.jo_editorFontSize').css('font-size', fontSizePx + \"px\");\r\n        jQuery('.jo_editorFontSize').css('line-height', (fontSizePx + 2) + \"px\");\r\n\r\n        document.documentElement.style.setProperty('--breakpoint-size', fontSizePx + 'px');\r\n        document.documentElement.style.setProperty('--breakpoint-radius', fontSizePx / 2 + 'px');\r\n\r\n\r\n        this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n    }\r\n\r\n    changeEditorFontSize(delta: number, dynamic: boolean = true) {\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (dynamic) {\r\n            if (editorfs < 10) {\r\n                delta *= 1;\r\n            } else if (editorfs < 20) {\r\n                delta *= 2;\r\n            } else {\r\n                delta *= 4;\r\n            }\r\n        }\r\n\r\n        let newEditorFs = editorfs + delta;\r\n        if (newEditorFs >= 6 && newEditorFs <= 80) {\r\n            this.setFontSize(newEditorFs);\r\n        }\r\n    }\r\n\r\n\r\n    addActions() {\r\n        let that = this;\r\n\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Find bracket',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'Finde korrespondierende Klammer',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.5,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                ed.getAction('editor.action.jumpToBracket').run();\r\n                return null;\r\n            }\r\n        });\r\n\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Execute statement',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'SQL-Anweisung ausführen',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.Enter],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.0,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                that.main.getActionManager().trigger('execute');\r\n                return null;\r\n            }\r\n        });\r\n\r\n        //console.log(this.editor.getSupportedActions());\r\n    }\r\n\r\n    onMarginMouseDown(lineNumber: number) {\r\n\r\n    }\r\n\r\n    elementDecoration: string[] = [];\r\n    onDidChangeCursorPosition(position: { lineNumber: number, column: number }) {\r\n\r\n        if (position == null) position = this.editor.getPosition();\r\n\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, []);\r\n            return;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        if (element != null) {\r\n            let usagePositions = element.usagePositions;\r\n            let upInCurrentModule = usagePositions.get(module);\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    decorations.push({\r\n                        range: { startColumn: up.column, startLineNumber: up.line, endColumn: up.column + up.length, endLineNumber: up.line },\r\n                        options: {\r\n                            className: 'jo_revealSyntaxElement', isWholeLine: false, overviewRuler: {\r\n                                color: { id: \"editorIndentGuide.background\" },\r\n                                darkColor: { id: \"editorIndentGuide.activeBackground\" },\r\n                                position: monaco.editor.OverviewRulerLane.Left\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        let executeActionActive = false;\r\n\r\n        for(let sqlStatement of module.getSQLSTatementsAtSelection(this.editor.getSelection())){\r\n\r\n            let classname = \"jo_highlightStatementGreen\";\r\n            if (sqlStatement != null) {\r\n                if (sqlStatement.hasErrors) {\r\n                    classname = \"jo_highlightStatementRed\";\r\n                    if (sqlStatement.acceptedBySQLite) {\r\n                        classname = \"jo_highlightStatementYellow\";\r\n                        executeActionActive = true;\r\n                    }\r\n                } else {\r\n                    executeActionActive = true;\r\n                }\r\n    \r\n                decorations.push({\r\n                    range: {\r\n                        startColumn: sqlStatement.from.column, startLineNumber: sqlStatement.from.line,\r\n                        endColumn: sqlStatement.to.column, endLineNumber: sqlStatement.to.line\r\n                    },\r\n                    options: {\r\n                        className: classname, isWholeLine: false, overviewRuler: {\r\n                            color: { id: classname },\r\n                            darkColor: { id: classname },\r\n                            position: monaco.editor.OverviewRulerLane.Left\r\n                        },\r\n                        minimap: {\r\n                            color: { id: classname },\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        },\r\n                        zIndex: -100\r\n                    }\r\n                })\r\n    \r\n            }\r\n        }\r\n\r\n\r\n        this.main.getActionManager().setActive('execute', executeActionActive);\r\n\r\n        if(executeActionActive && !this.main.isEmbedded()){\r\n            Helper.showHelper(\"playButtonHelper\", <any>this.main, jQuery('div.img_start-dark'));\r\n        }\r\n\r\n\r\n        this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, decorations);\r\n\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.main.getCurrentlyEditedModule();\r\n    }\r\n\r\n\r\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport function defineVscSQL() {\r\n    monaco.languages.register({\r\n        id: 'vscSQL',\r\n        extensions: ['.sql'],\r\n        //  mimetypes: [\"text/x-java-source\", \"text/x-java\"]  \r\n    });\r\n\r\n    let conf: monaco.languages.LanguageConfiguration = {\r\n        onEnterRules: [\r\n            {\r\n                // e.g. /** | */\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                afterText: /^\\s*\\*\\/$/,\r\n                action: { indentAction: monaco.languages.IndentAction.IndentOutdent, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g. /** ...|\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g.  * ...|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: '* ' }\r\n            },\r\n            {\r\n                // e.g.  */|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            },\r\n            {\r\n                // e.g.  *-----*/|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*[^/]*\\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            }\r\n        ],\r\n        comments: {\r\n            lineComment: '--',\r\n            blockComment: ['/*', '*/'],\r\n        },\r\n        brackets: [\r\n            ['{', '}'],\r\n            ['[', ']'],\r\n            ['(', ')']\r\n        ],\r\n        autoClosingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ],\r\n        surroundingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ]\r\n    };\r\n    let language = {\r\n\r\n        defaultToken: '',\r\n        tokenPostfix: '.sql',\r\n        ignoreCase: true,\r\n        brackets: [\r\n            { open: '[', close: ']', token: 'delimiter.square' },\r\n            { open: '(', close: ')', token: 'delimiter.parenthesis' }\r\n        ],\r\n        escapes: /\\\\(?:[abfnrtv\\\\\"'])/,\r\n        keywords: [\r\n            \"ABORT\", \"ACTION\", \"ADD\", \"AFTER\", \"ALL\", \"ALTER\", \"ANALYZE\", \"AND\", \"AS\", \"ASC\", \"ATTACH\", \"AUTOINCREMENT\", \"BEFORE\",\r\n            \"BEGIN\", \"BETWEEN\", \"BY\", \"CASCADE\", \"CASE\", \"CAST\", \"CHECK\", \"COLLATE\", \"COLUMN\", \"COMMIT\", \"CONFLICT\", \"CONSTRAINT\",\r\n            \"CREATE\", \"CROSS\", \"CURRENT_DATE\", \"CURRENT_TIME\", \"CURRENT_TIMESTAMP\", \"DATABASE\", \"DEFAULT\", \"DEFERRABLE\", \"DEFERRED\",\r\n            \"DELETE\", \"DESC\", \"DETACH\", \"DISTINCT\", \"DROP\", \"EACH\", \"ELSE\", \"END\", \"ESCAPE\", \"EXCEPT\", \"EXCLUSIVE\", \"EXISTS\", \"EXPLAIN\",\r\n            \"FAIL\", \"FOR\", \"FOREIGN\", \"FROM\", \"FULL\", \"GLOB\", \"GROUP\", \"HAVING\", \"IF\", \"IGNORE\", \"IMMEDIATE\", \"IN\", \"INDEX\", \"INDEXED\",\r\n            \"INITIALLY\", \"INNER\", \"INSERT\", \"INSTEAD\", \"INTERSECT\", \"INTO\", \"IS\", \"ISNULL\", \"JOIN\", \"KEY\", \"LEFT\", \"LIKE\", \"LIMIT\", \"MATCH\",\r\n            \"NATURAL\", \"NO\", \"NOT\", \"NOTNULL\", \"NULL\", \"OF\", \"OFFSET\", \"ON\", \"OR\", \"ORDER\", \"OUTER\", \"PLAN\", \"PRAGMA\", \"PRIMARY\", \"QUERY\",\r\n            \"RAISE\", \"RECURSIVE\", \"REFERENCES\", \"REGEXP\", \"REINDEX\", \"RELEASE\", \"RENAME\", \"REPLACE\", \"RESTRICT\", \"RIGHT\", \"ROLLBACK\", \"ROW\",\r\n            \"SAVEPOINT\", \"SELECT\", \"SET\", \"TABLE\", \"TEMP\", \"TEMPORARY\", \"THEN\", \"TO\", \"TRANSACTION\", \"TRIGGER\", \"UNION\", \"UNIQUE\", \"UPDATE\",\r\n            \"USING\", \"VACUUM\", \"VALUES\", \"VIEW\", \"VIRTUAL\", \"WHEN\", \"WHERE\", \"WITH\", \"WITHOUT\", \"ENGINE\", \"CHARSET\"\r\n        ],\r\n        operators: [\r\n            \"AND\", \"BETWEEN\", \"IN\", \"LIKE\", \"NOT\", \"OR\", \"IS\", \"NULL\", \"INTERSECT\", \"UNION\", \"INNER\", \"JOIN\", \"LEFT\", \"OUTER\", \"RIGHT\"\r\n        ],\r\n        builtinFunctions: [\r\n            \"abs\", \"changes\", \"char\", \"coalesce\", \"count\", \"glob\", \"hex\", \"ifnull\",\r\n            \"iif\", \"instr\", \"last_insert_rowid\", \"length\", \"like\", \"likelihood\", \"likely\",\r\n            \"lower\", \"ltrim\", \"max\", \"min\", \"nullif\", \"quote\", \"random\", \"randomblob\",\r\n            \"replace\", \"round\", \"rtrim\", \"sign\", \"soundex\", \"sqlite_version\", \"substr\", \"substring\",\r\n            \"total_changes\", \"trim\", \"typeof\", \"unicode\", \"unlikely\", \"upper\", \"zeroblob\"\r\n        ],\r\n        builtinVariables: [\r\n            // NOT SUPPORTED\r\n        ],\r\n        pseudoColumns: [\r\n            // NOT SUPPORTED\r\n        ],\r\n        tokenizer: {\r\n            root: [\r\n                { include: '@comments' },\r\n                { include: '@whitespace' },\r\n                { include: '@pseudoColumns' },\r\n                { include: '@numbers' },\r\n                { include: '@strings' },\r\n                { include: '@complexIdentifiers' },\r\n                { include: '@scopes' },\r\n                [/[;,.]/, 'delimiter'],\r\n                [/[()]/, '@brackets'],\r\n                [/[a-z_$äöü][\\w$äöüßÄÖÜ]*(?=\\()/, {\r\n                    cases: {\r\n                        '@builtinFunctions': 'functions',\r\n                        '@keywords': 'keyword',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[\\w@#$]+/, {\r\n                    cases: {\r\n                        '@keywords': 'keyword',\r\n                        '@operators': 'operator',\r\n                        '@builtinVariables': 'predefined',\r\n                        // '@builtinFunctions': 'functions',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[<>=!%&+\\-*/|~^]/, 'operator'],\r\n            ],\r\n            whitespace: [\r\n                [/\\s+/, 'white']\r\n            ],\r\n            comments: [\r\n                [/--+.*/, 'comment'],\r\n                [/\\/\\*/, { token: 'comment.quote', next: '@comment' }]\r\n            ],\r\n            comment: [\r\n                [/[^*/]+/, 'comment'],\r\n                // Not supporting nested comments, as nested comments seem to not be standard?\r\n                // i.e. http://stackoverflow.com/questions/728172/are-there-multiline-comment-delimiters-in-sql-that-are-vendor-agnostic\r\n                // [/\\/\\*/, { token: 'comment.quote', next: '@push' }],    // nested comment not allowed :-(\r\n                [/\\*\\//, { token: 'comment.quote', next: '@pop' }],\r\n                [/./, 'comment']\r\n            ],\r\n            pseudoColumns: [\r\n                [/[$][A-Za-z_][\\w@#$]*/, {\r\n                    cases: {\r\n                        '@pseudoColumns': 'predefined',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n            ],\r\n            numbers: [\r\n                [/0[xX][0-9a-fA-F]*/, 'number'],\r\n                [/[$][+-]*\\d*(\\.\\d*)?/, 'number'],\r\n                [/((\\d+(\\.\\d*)?)|(\\.\\d+))([eE][\\-+]?\\d+)?/, 'number']\r\n            ],\r\n            strings: [\r\n                [/'/, { token: 'string', next: '@string' }],\r\n            ],\r\n            string: [\r\n                [/[^\\\\']+/, 'string'],\r\n                [/\\\\./, 'string.escape.invalid'],\r\n                [/''/, 'string'],\r\n                [/'/, { token: 'string', next: '@pop' }]\r\n            ],\r\n            complexIdentifiers: [\r\n                [/\"/, { token: 'identifier.quote', next: '@quotedIdentifier' }]\r\n            ],\r\n            quotedIdentifier: [\r\n                [/[^\"]+/, 'identifier'],\r\n                [/\"\"/, 'identifier'],\r\n                [/\"/, { token: 'identifier.quote', next: '@pop' }]\r\n            ],\r\n            scopes: [\r\n                // NOT SUPPORTED\r\n            ]\r\n        }\r\n\r\n\r\n\r\n    };\r\n\r\n    //@ts-ignore\r\n    monaco.languages.setLanguageConfiguration('vscSQL', conf);\r\n    //@ts-ignore\r\n    monaco.languages.setMonarchTokensProvider('vscSQL', language);\r\n\r\n\r\n\r\n}","export class WorkerSim {\r\n\r\n    //@ts-ignore\r\n    initsql = initSqlJs({locateFile: (path, scriptDirectory) => \"https://embed.learn-sql.de/include/lib/sql.js/sql-wasm.wasm\"});\r\n    db;\r\n    SQL;\r\n\r\n    onmessage: (event: {data: any}) => void;\r\n\r\n    onError: (event: ErrorEvent) => void;\r\n\r\n    postMessageToClient(message: any) {\r\n        this.onmessage({data: message})\r\n    }\r\n\r\n    postMessage(data: any){\r\n        let that = this;\r\n        if (that.db == null) {\r\n            that.initsql.then((SQL1) => {\r\n                that.SQL = SQL1;\r\n                that.db = createDb(SQL1, undefined);\r\n                that.worker(data);\r\n            }).catch((err) => {\r\n                console.log(err);\r\n                //@ts-ignore\r\n                return that.postMessageToClient({\r\n                    id: this[\"data\"][\"id\"],\r\n                    error: err[\"message\"]\r\n                });\r\n            })\r\n        } else {\r\n            that.worker(data);\r\n        }\r\n    }\r\n\r\n    terminate() {\r\n\r\n    }\r\n\r\n    worker(data: any) {\r\n        var buff; var result;\r\n        var config = data[\"config\"] ? data[\"config\"] : {};\r\n        try {\r\n            switch (data && data[\"action\"]) {\r\n                case \"open\":\r\n                    buff = data[\"buffer\"];\r\n                    this.db = createDb(this.SQL, buff && new Uint8Array(buff));\r\n                    //@ts-ignore\r\n                    return this.postMessageToClient({\r\n                        id: data[\"id\"],\r\n                        ready: true\r\n                    });\r\n                case \"exec\":\r\n                    if (this.db === null) {\r\n                        this.db = createDb(this.SQL, undefined);\r\n                    }\r\n                    if (!data[\"sql\"]) {\r\n                        throw \"exec: Missing query string\";\r\n                    }\r\n                    //@ts-ignore\r\n                    return this.postMessageToClient({\r\n                        id: data[\"id\"],\r\n                        results: this.db.exec(data[\"sql\"], data[\"params\"], config)\r\n                    });\r\n                case \"each\":\r\n                    if (this.db === null) {\r\n                        this.db = createDb(this.SQL, undefined);\r\n                    }\r\n                    var callback = function callback(row) {\r\n                        //@ts-ignore\r\n                        return this.postMessage({\r\n                            id: data[\"id\"],\r\n                            row: row,\r\n                            finished: false\r\n                        });\r\n                    };\r\n                    var done = function done() {\r\n                        //@ts-ignore\r\n                        return this.postMessage({\r\n                            id: data[\"id\"],\r\n                            finished: true\r\n                        });\r\n                    };\r\n                    return this.db.each(data[\"sql\"], data[\"params\"], callback, done, config);\r\n                case \"export\":\r\n                    buff = this.db[\"export\"]();\r\n                    result = {\r\n                        id: data[\"id\"],\r\n                        results: [\r\n                            {\r\n                                buffer: buff\r\n                            }\r\n                        ]\r\n                    };\r\n                    try {\r\n                        //@ts-ignore\r\n                        return this.postMessageToClient(result);\r\n                    } catch (error) {\r\n                        //@ts-ignore\r\n                        return this.postMessageToClient(result);\r\n                    }\r\n                case \"close\":\r\n                    if (this.db) {\r\n                        this.db.close();\r\n                    }\r\n                    //@ts-ignore\r\n                    return this.postMessageToClient({\r\n                        id: data[\"id\"]\r\n                    });\r\n                default:\r\n                    throw new Error(\"Invalid action : \" + (data && data[\"action\"]));\r\n            }\r\n\r\n        } catch (err) {\r\n\r\n            //@ts-ignore\r\n            return this.postMessageToClient({\r\n                id: data[\"id\"],\r\n                error: err[\"message\"]\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import { MainBase } from \"../main/MainBase.js\";\r\nimport { WorkerSim } from \"../sqljs-worker/sqljsWorkerSim.js\";\r\n\r\nexport type DatabaseDumpType = \"binaryUncompressed\" | \"binaryCompressed\" | \"other\";\r\n\r\nexport type DatabaseDirectoryEntry = {\r\n    name: string,\r\n    description: string,\r\n    filename: string\r\n}\r\n\r\nexport type QueryResult = {\r\n    columns: string[],\r\n    values: any[][],\r\n    buffer?: Uint8Array\r\n}\r\n\r\nexport type QuerySuccessCallback = (results: QueryResult[]) => void;\r\nexport type QueryErrorCallback = (error: string) => void;\r\n\r\nexport type ColumnStructure = {\r\n    name: string;\r\n    table: TableStructure;\r\n\r\n    typeLengths?: number[]; // for varchar(5), ...\r\n    completeTypeSQL: string;\r\n\r\n    references?: ColumnStructure;\r\n    referencesRawData?: any[];\r\n    isPrimaryKey: boolean;\r\n    isAutoIncrement: boolean;\r\n\r\n    notNull: boolean;\r\n    defaultValue: string;\r\n\r\n    dumpValueFunction?: (any) => string\r\n}\r\n\r\nexport type TableStructure = {\r\n    name: string;\r\n    size: number;\r\n    columns: ColumnStructure[];\r\n    completeSQL: string;\r\n}\r\n\r\nexport type DatabaseStructure = {\r\n    tables: TableStructure[]\r\n}\r\n\r\n\r\nexport class DatabaseTool {\r\n\r\n    databaseDirectoryEntries: DatabaseDirectoryEntry[] = null;\r\n\r\n    worker: Worker;\r\n\r\n    queryId: number = 0;\r\n\r\n    querySuccessCallbacksMap: Map<number, QuerySuccessCallback> = new Map();\r\n    queryErrorCallbackMap: Map<number, QueryErrorCallback> = new Map();\r\n\r\n    databaseStructure: DatabaseStructure;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    initializeWorker(template: Uint8Array, queries: string[], callbackAfterInitializing?: (errors: string[]) => void,\r\n        callbackAfterRetrievingStructure?: () => void) {\r\n        \r\n        this.main.getWaitOverlay().show('Bitte warten, die Datenbank wird initialisiert...');\r\n        \r\n            if (this.worker != null) {\r\n            this.worker.terminate();\r\n        }\r\n\r\n        let t = performance.now();\r\n\r\n        // console.log(\"Starting worker...\");\r\n\r\n        let url: string = \"js/sqljs-worker/sqljsWorker.js\"\r\n        if(this.main.isEmbedded()){\r\n            //@ts-ignore\r\n            url = window.javaOnlineDir + url;\r\n        }\r\n\r\n        //@ts-ignore\r\n        if(window.jo_doc){\r\n            //@ts-ignore\r\n            this.worker = new WorkerSim();\r\n        } else {\r\n            this.worker = new Worker(url);\r\n        }\r\n        let that = this;\r\n\r\n        let errors: string[] = [];\r\n\r\n        this.worker.onmessage = () => {\r\n            // console.log(\"Database opened (\" + (performance.now() - t)/1000 + \" s)\");\r\n            that.worker.onmessage = event => {\r\n\r\n                // console.log(event.data);\r\n\r\n                let id = event.data.id;\r\n                if (event.data.error == null) {\r\n                    let querySuccessCallback = that.querySuccessCallbacksMap.get(id);\r\n                    if (querySuccessCallback != null) {\r\n                        querySuccessCallback(event.data.results);\r\n                    }\r\n                } else {\r\n                    let queryErrorCallback = that.queryErrorCallbackMap.get(id);\r\n                    if (queryErrorCallback != null) {\r\n                        queryErrorCallback(event.data.error);\r\n                    }\r\n                }\r\n\r\n                // if(event.data.buffer){\r\n                //     console.log(event.data.buffer);\r\n                // }\r\n\r\n\r\n                this.queryErrorCallbackMap.delete(id);\r\n                this.querySuccessCallbacksMap.delete(id);\r\n\r\n            };\r\n\r\n            if(queries == null) queries = [];\r\n            queries = queries.slice();\r\n            let queryCount = queries.length;\r\n\r\n            let execQuery = () => {\r\n                if (queries.length > 0) {\r\n                    this.main.getWaitOverlay().setProgress(`${Math.round((1-queries.length/queryCount)*100) + \" %\"}`)\r\n                    let query = queries.shift();\r\n                    that.executeQuery(query, (result) => {\r\n                        execQuery();\r\n                    }, (error) => {\r\n                        errors.push(\"Error while setting up database: \" + error + \", query: \" + query);\r\n                        console.log({\"error\": \"Error while setting up database: \" + error, \"query\": query});\r\n                        console.log()\r\n                        execQuery();\r\n                    })\r\n                } else {\r\n                    if (callbackAfterInitializing != null) callbackAfterInitializing(errors);\r\n                    that.retrieveDatabaseStructure(() => {\r\n                        // console.log(\"Database structure retrieved (\" + (performance.now() - t)/1000 + \" s)\");\r\n                        if (callbackAfterRetrievingStructure) callbackAfterRetrievingStructure();\r\n                        this.main.getWaitOverlay().hide();\r\n\r\n                    });\r\n                }\r\n            }\r\n\r\n            execQuery();\r\n\r\n            // that.executeQuery(sql, (result) => {\r\n            //     // console.log(\"Template written (\" + (performance.now() - t)/1000 + \" s)\");\r\n\r\n            //     if (callbackAfterInitializing != null) callbackAfterInitializing();\r\n            //     that.retrieveDatabaseStructure(() => {\r\n            //         // console.log(\"Database structure retrieved (\" + (performance.now() - t)/1000 + \" s)\");\r\n            //         if (callbackAfterRetrievingStructure) callbackAfterRetrievingStructure();\r\n            //         jQuery('#bitteWarten').css('display', 'none');\r\n\r\n            //     });\r\n            //     // that.executeQuery(\"select * from test\", (results: QueryResult[]) => {console.log(results)}, (error) => {console.log(\"Error:\" + error)});\r\n            // },\r\n            //     (error) => {\r\n            //         console.log(\"Error while setting up database: \" + error);\r\n            //     });\r\n\r\n            // that.worker.postMessage({\r\n            //     action: \"export\"\r\n            // })\r\n\r\n        };\r\n\r\n        this.worker.onerror = (e) => {\r\n            errors.push(\"Worker error: \" + e.error);\r\n            console.log(\"Worker error: \" + e.error);\r\n        }\r\n\r\n        this.worker.postMessage({\r\n            id: that.queryId++,\r\n            action: \"open\",\r\n            buffer: template, /*Optional. An ArrayBuffer representing an SQLite Database file*/\r\n        });\r\n\r\n    }\r\n\r\n    executeQuery(query: string, successCallback: QuerySuccessCallback, errorCallback: QueryErrorCallback) {\r\n\r\n        let id = this.queryId++;\r\n\r\n        this.querySuccessCallbacksMap.set(id, successCallback);\r\n        this.queryErrorCallbackMap.set(id, errorCallback);\r\n\r\n        this.worker.postMessage({\r\n            id: id,\r\n            action: \"exec\",\r\n            sql: query,\r\n            params: {}\r\n        });\r\n\r\n    }\r\n\r\n    export(successCallback: (buffer: Uint8Array) => void, errorCallback: QueryErrorCallback) {\r\n\r\n        let id = this.queryId++;\r\n\r\n        this.querySuccessCallbacksMap.set(id, (results) => { successCallback(results[0].buffer)  });\r\n        this.queryErrorCallbackMap.set(id, errorCallback);\r\n\r\n        this.worker.postMessage({\r\n            id: id,\r\n            action: \"export\",\r\n            params: {}\r\n        });\r\n\r\n    }\r\n\r\n    \r\n\r\n    getDirectoryEntries(callback: (entries: DatabaseDirectoryEntry[]) => void) {\r\n        if (this.databaseDirectoryEntries != null) {\r\n            callback(this.databaseDirectoryEntries);\r\n        } else {\r\n            jQuery.getJSON(\"assets/databases/directory.json\", function (entries: DatabaseDirectoryEntry[]) {\r\n                callback(entries);\r\n            });\r\n        }\r\n    }\r\n\r\n    retrieveDatabaseStructure(callback: (dbStructure: DatabaseStructure) => void) {\r\n\r\n        /*\r\n            @see https://stackoverflow.com/questions/6460671/sqlite-schema-information-metadata\r\n        */\r\n        let sql = `SELECT name, sql FROM sqlite_master WHERE type='table';`\r\n        let that = this;\r\n\r\n        this.executeQuery(sql, (result) => {\r\n            let sql1 = \"\";\r\n            result[0]?.values?.forEach(value => sql1 += `PRAGMA table_info(${value[0]});\\nPRAGMA foreign_key_list(${value[0]});\\nselect count(*) from ${value[0]};\\n\\n`)\r\n\r\n            if (sql1 != \"\") {\r\n                this.executeQuery(sql1, (result1) => {\r\n                    // console.log(\"DB structure: \");\r\n                    // console.log(result1);\r\n\r\n                    that.databaseStructure = that.parseDatabaseStructure(result, result1)\r\n\r\n                    callback(that.databaseStructure);\r\n\r\n                }, (error) => { console.log(error)});\r\n            } else {\r\n                that.databaseStructure = { tables: [] };\r\n                callback(that.databaseStructure);\r\n            }\r\n\r\n        }, (error) => { console.log(error) });\r\n\r\n\r\n    }\r\n\r\n    parseDatabaseStructure(tables: QueryResult[], columns: QueryResult[]): DatabaseStructure {\r\n        this.databaseStructure = {\r\n            tables: []\r\n        };\r\n\r\n        let tableNameToStructureMap: Map<string, TableStructure> = new Map();\r\n\r\n        let index = 0;\r\n        for (let i = 0; i < tables[0].values.length; i++) {\r\n            let tableName = tables[0].values[i][0];\r\n            let tableSQL = tables[0].values[i][1];\r\n\r\n            let tableStructure: TableStructure = {\r\n                name: tableName,\r\n                size: 0,\r\n                completeSQL: tableSQL,\r\n                columns: []\r\n            }\r\n\r\n            tableNameToStructureMap.set(tableName, tableStructure);\r\n\r\n            this.databaseStructure.tables.push(tableStructure);\r\n\r\n            let columnArray = columns[index].values;\r\n            let foreignKeyList: any[][] = null;\r\n            if (columns.length > index + 1 && columns[index + 1].columns[0] == \"id\") {\r\n                foreignKeyList = columns[index + 1].values;\r\n                index++;\r\n            }\r\n            index++;\r\n            let size: number = columns[index].values[0][0];\r\n            index++;\r\n\r\n            tableStructure.size = size;\r\n\r\n            columnArray.forEach(columnArray1 => {\r\n                let cid: number = columnArray1[0];\r\n                let name: string = columnArray1[1];\r\n                let type: string = columnArray1[2];\r\n                let notNull: boolean = columnArray1[3] == 1;\r\n                let dflt_value: string = columnArray1[4];\r\n                let isPrimaryKey: boolean = columnArray1[5] != 0;\r\n\r\n                let columnStructure: ColumnStructure = {\r\n                    name: name,\r\n                    isPrimaryKey: isPrimaryKey,\r\n                    isAutoIncrement: isPrimaryKey && tableSQL.toLowerCase().indexOf(\"autoincrement\") >= 0,\r\n                    completeTypeSQL: type,\r\n                    table: tableStructure,\r\n                    typeLengths: [],\r\n                    defaultValue: dflt_value,\r\n                    notNull: notNull\r\n                }\r\n                /*\r\n                    columns: (8) [\"id\", \"seq\", \"table\", \"from\", \"to\", \"on_update\", \"on_delete\", \"match\"]\r\n                    values: Array(1)\r\n                    0: (8) [0, 0, \"land\", \"LNR\", \"lnr\", \"NO ACTION\", \"NO ACTION\", \"NONE\"]\r\n                */\r\n\r\n                if (foreignKeyList != null) {\r\n                    let fkInfo: any[] = foreignKeyList.find(foreignKeyInfo => foreignKeyInfo[3].toLocaleLowerCase() == name.toLocaleLowerCase());\r\n                    if (fkInfo != null) {\r\n                        columnStructure.referencesRawData = fkInfo;\r\n                    }\r\n                }\r\n\r\n                tableStructure.columns.push(columnStructure);\r\n\r\n            });\r\n\r\n        }\r\n\r\n        for (let ts of this.databaseStructure.tables) {\r\n            for (let cs of ts.columns) {\r\n                if (cs.referencesRawData != null) {\r\n                    let table = tableNameToStructureMap.get(cs.referencesRawData[2]);\r\n                    // SQlite doesn't remove foreign key references to columns of a dropped table\r\n                    if(table == null) continue;\r\n                    let column = table.columns.find(c => c.name.toLocaleLowerCase() == cs.referencesRawData[4].toLocaleLowerCase());\r\n                    cs.references = column;\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log(this.databaseStructure);\r\n\r\n        return this.databaseStructure;\r\n\r\n    }\r\n\r\n    static getDumpType(dump: Uint8Array): DatabaseDumpType {\r\n\r\n        let sqliteMagicBytes: number[] = [0x53, 0x51, 0x4c, 0x69, 0x74, 0x65];\r\n        let zlibMagicByte: number = 0x78;\r\n\r\n        let found: boolean = true;\r\n        for (let i = 0; i < sqliteMagicBytes.length; i++) {\r\n            if (sqliteMagicBytes[i] != dump[i]) {\r\n                found = false;\r\n                break;\r\n            }\r\n        }\r\n        if (found) return \"binaryUncompressed\";\r\n\r\n        if (dump[0] == zlibMagicByte) return \"binaryCompressed\";\r\n\r\n        return \"other\";\r\n\r\n    }\r\n\r\n\r\n}","import { TokenType } from \"../lexer/Token.js\";\r\nimport { ASTNode, ConstantNode, CreateTableColumnNode, CreateTableNode, ForeignKeyInfo, InsertNode } from \"./AST.js\";\r\nimport { SQLStatement } from \"./Parser.js\";\r\n\r\nexport class StatementCleaner {\r\n\r\n    MaxRowsPerInsert: number = 300;\r\n\r\n    clean(statement: SQLStatement): string {\r\n        switch(statement.ast.type){\r\n            case TokenType.keywordCreate:   // Create Table statement\r\n                statement.sqlCleaned = this.cleanCreateTableStatement(statement.ast);\r\n                return statement.sqlCleaned;\r\n            case TokenType.keywordInsert:\r\n                statement.sqlCleaned = this.cleanInsertStatement(statement.ast);\r\n                return statement.sqlCleaned;\r\n            default:\r\n                return statement.sql;\r\n                break;\r\n        }\r\n    }\r\n\r\n    cleanInsertStatement(ast: InsertNode): string {\r\n        let statementHeader: string = `insert into ${ast.table.identifier}`;\r\n\r\n        if(ast.columnList != null && ast.columnList.length > 0){\r\n            statementHeader += `(${ast.columnList.map(c => c.identifier).join(\", \")})`;\r\n        }\r\n\r\n        statementHeader += '\\nvalues\\n';\r\n\r\n        let st = \"\";\r\n        \r\n        let lines: string[] = [];\r\n        if(ast.values != null && ast.values.length > 0){\r\n            for(let vline of ast.values){\r\n                lines.push(`\\n(${vline.map(v => this.cleanValue(v)).join(\", \")})`);\r\n            }\r\n            //st += lines.join(\",\\n\");\r\n        }\r\n\r\n        while(lines.length > 0){\r\n            st += statementHeader;\r\n            st += lines.splice(0, Math.max(this.MaxRowsPerInsert, lines.length)).join(\",\\n\");\r\n            st += \";\\n\";\r\n        }\r\n\r\n        return st;\r\n    }\r\n\r\n    cleanValue(v: ConstantNode){\r\n        if(v.constantType == TokenType.stringConstant){\r\n            let s: string = v.constant;\r\n            s = s.replace(/'/g, \"''\");\r\n            return `'${s}'`;\r\n        }else {\r\n            return v.constant;\r\n        }\r\n    }\r\n\r\n    cleanCreateTableStatement(ast: CreateTableNode): string {\r\n        let st: string = `create table ${ast.ifNotExists?\" if not exists\":\"\"} ${ast.identifier}(\\n   `;\r\n\r\n        st += ast.columnList.map( column => this.cleanColumnDef(column)).join(\",\\n   \");\r\n        if(ast.foreignKeyInfoList != null && ast.foreignKeyInfoList.length > 0){\r\n            st += \",\\n   \" + ast.foreignKeyInfoList.map(fki => this.cleanForeignKeyInfo(fki)).join(\",\\n   \");\r\n        }\r\n\r\n        let pkc = ast.combinedPrimaryKeyColumns.slice().map(s => s.toLocaleLowerCase());\r\n        for(let column of ast.columnList){\r\n            let c = column.identifier.toLocaleLowerCase();\r\n            if(column.isAutoIncrement && pkc.indexOf(c) >= 0){\r\n                pkc.splice(pkc.indexOf(c), 1);\r\n            }\r\n        }\r\n\r\n        if(pkc.length > 0){\r\n            st += `,\\n   primary key(${pkc.join(\", \")})`;\r\n        }\r\n\r\n        if(ast.uniqueConstraints.length > 0){\r\n            st += \",\\n   \" + ast.uniqueConstraints.map(uk => 'unique(' + uk.join(\", \") + \")\").join(\",\\n   \");\r\n        }\r\n\r\n        st += '\\n);';\r\n\r\n        return st;\r\n    }\r\n\r\n    cleanForeignKeyInfo(fki: ForeignKeyInfo): string {\r\n        let fkiString = `foreign key (${fki.column}) references ${fki.referencesTable}(${fki.referencesColumn})`;\r\n        if(fki.onDelete){\r\n            fkiString += ` on delete ` + fki.onDelete;\r\n        }\r\n        if(fki.onUpdate){\r\n            fkiString += ` on update ` + fki.onUpdate;\r\n        }\r\n        return fkiString;\r\n    }\r\n\r\n    cleanColumnDef(column: CreateTableColumnNode):string {\r\n\r\n        let type = column.baseType.toString();\r\n        if(type == \"int\" && column.isAutoIncrement){\r\n            type = \"integer\";\r\n        }\r\n\r\n        let st: string = `${column.identifier} ${type}`;\r\n        if(column.parameters != null && column.parameters.length > 0){\r\n            st += `(${column.parameters.join(\", \")})`;\r\n        }\r\n        if(column.notNull){\r\n            st += \" not null\";\r\n        }\r\n        if(column.defaultValue != null){\r\n            st += \" default \" + column.defaultValue;\r\n        }\r\n        if(column.isPrimary || column.isAutoIncrement){\r\n            st += \" primary key\";\r\n        }\r\n        if(column.isAutoIncrement){\r\n            st += \" autoincrement\";\r\n        }\r\n        if(column.foreignKeyInfo != null){\r\n            let fki = column.foreignKeyInfo;\r\n            let c: string = fki.referencesColumn;\r\n            if(fki.referencesTable) c = fki.referencesTable + \"(\" + c + \")\";\r\n            st += \" references \" + c;\r\n        }\r\n        if(column.collate != null){\r\n            let collate = column.collate.toLocaleLowerCase();\r\n            if([\"binary\", \"nocase\", \"rtrim\"].indexOf(collate) >= 0){\r\n                st += \" collate \" + collate;\r\n            }\r\n        }\r\n        let parameters = column.parameters? column.parameters : [0, 0];\r\n        let checkFunction = column.baseType.checkFunction(column.identifier, parameters);\r\n        if(checkFunction != \"\"){\r\n            st += \" \" + checkFunction;\r\n        }\r\n        return st;\r\n    }\r\n\r\n}","import { Lexer } from \"../compiler/lexer/Lexer.js\";\r\nimport { TokenType } from \"../compiler/lexer/Token.js\";\r\nimport { AlterTableNode, CreateTableNode, InsertNode } from \"../compiler/parser/AST.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { Parser, SQLStatement } from \"../compiler/parser/Parser.js\";\r\nimport { StatementCleaner } from \"../compiler/parser/StatementCleaner.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { LoadableDatabase } from \"./DatabaseLoader.js\";\r\nimport { DatabaseTool } from \"./DatabaseTools.js\";\r\n\r\nexport class MySqlImporter {\r\n\r\n    private createTableNodes: CreateTableNode[];\r\n    private insertNodes: InsertNode[];\r\n    private tableModifyingNodes: AlterTableNode[];\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    async loadFromUrl(url: string): Promise<LoadableDatabase> {\r\n        if (url == null) return;\r\n\r\n        let text = null;\r\n        if (url.endsWith(\".zip\")) {\r\n            text = await this.unzipURL(url);\r\n        } else {\r\n            text = await (await fetch(url)).text();\r\n        }\r\n\r\n        return this.importFromText(text);\r\n    }\r\n\r\n    async loadFromFile(file: globalThis.File): Promise<LoadableDatabase> {\r\n        if (file == null) return;\r\n\r\n        if (file.name.endsWith(\".zip\")) {\r\n            let text = await this.unzipFile(file);\r\n            return this.importFromText(text);\r\n        } else {\r\n\r\n            return new Promise<LoadableDatabase>(\r\n                (resolve, reject) => {\r\n                    var reader = new FileReader();\r\n                    reader.onload = (event) => {\r\n                        let text = <string>event.target.result;\r\n                        resolve(this.importFromText(text));\r\n                    };\r\n                    reader.readAsText(file);\r\n                }\r\n            )\r\n\r\n\r\n        }\r\n    }\r\n\r\n    async unzipURL(url: string): Promise<string> {\r\n        //@ts-ignore\r\n        const reader = new zip.ZipReader(new zip.HttpReader(url));\r\n        return this.unzipIntern(reader);\r\n    }\r\n\r\n    async unzipFile(file: globalThis.File): Promise<string> {\r\n        // create a BlobReader to read with a ZipReader the zip from a Blob object\r\n        //@ts-ignore\r\n        const reader = new zip.ZipReader(new zip.BlobReader(file));\r\n        return this.unzipIntern(reader);\r\n    }\r\n\r\n    async unzipIntern(reader: any): Promise<string> {\r\n        // get all entries from the zip\r\n        let entries = await reader.getEntries();\r\n        entries = entries.filter(entry => entry.filename.endsWith(\".sql\"))\r\n        let text: string = null;\r\n        if (entries.length) {\r\n\r\n            // get first entry content as text by using a TextWriter\r\n            text = await entries[0].getData(\r\n                // writer\r\n                //@ts-ignore\r\n                new zip.TextWriter(),\r\n                // options\r\n                {\r\n                    onprogress: (index, max) => {\r\n                        // onprogress callback\r\n                    }\r\n                }\r\n            );\r\n        }\r\n\r\n        // close the ZipReader\r\n        await reader.close();\r\n\r\n        return text;\r\n    }\r\n\r\n    private async importFromText(text: string): Promise<LoadableDatabase> {\r\n        if (text == null) return null;\r\n\r\n        let lexer: Lexer = new Lexer();\r\n        let lexOutput = lexer.lex(text);\r\n\r\n        let parser: Parser = new Parser();\r\n        let m: Module = new Module({\r\n            dirty: false,\r\n            name: \"\",\r\n            saved: true,\r\n            student_edited_after_revision: false,\r\n            submitted_date: null,\r\n            text: text,\r\n            text_before_revision: null,\r\n            version: 0\r\n        }, this.main);\r\n        m.tokenList = lexOutput.tokens;\r\n\r\n        parser.parse(m);\r\n\r\n        this.createTableNodes = m.sqlStatements.filter(st => st.ast.type == TokenType.keywordCreate).map(st => <CreateTableNode>st.ast);\r\n        this.insertNodes = m.sqlStatements.filter(st => st.ast.type == TokenType.keywordInsert).map(st => <InsertNode>st.ast);\r\n        this.tableModifyingNodes = m.sqlStatements.filter(st => st.ast.type == TokenType.keywordAlter &&\r\n            (<AlterTableNode>st.ast).kind == \"omittedKind\").map(st => <AlterTableNode>st.ast);\r\n\r\n        for (let tmn of this.tableModifyingNodes) {\r\n            let createTableNode = this.findCreateTableNode(tmn.tableIdentifier);\r\n            if (createTableNode == null) continue;\r\n\r\n            if (tmn.primaryKeys != null) {\r\n                createTableNode.combinedPrimaryKeyColumns = tmn.primaryKeys;\r\n                createTableNode.columnList.forEach(c => c.isPrimary = false);\r\n            }\r\n\r\n            if (tmn.autoIncrementColumn != null) {\r\n                let pcn = this.findCreateTableColumnNode(createTableNode, tmn.autoIncrementColumn);\r\n                if (pcn != null) pcn.isPrimary = true;\r\n            }\r\n\r\n            if (tmn.modifyColumnInfo != null) {\r\n                for (let mci of tmn.modifyColumnInfo) {\r\n                    let mcn = this.findCreateTableColumnNode(createTableNode, mci.identifier);\r\n                    let index = createTableNode.columnList.indexOf(mcn);\r\n                    createTableNode.columnList.splice(index, 1, mci);\r\n                }\r\n            }\r\n\r\n            if (tmn.foreignKeys != null) {\r\n                for (let fk of tmn.foreignKeys) {\r\n                    createTableNode.foreignKeyInfoList.push(fk);\r\n                }\r\n            }\r\n\r\n            if (tmn.indices != null) {\r\n                for (let index of tmn.indices) {\r\n                    m.sqlStatements.push({\r\n                        acceptedBySQLite: true,\r\n                        from: null, to: null, hasErrors: false,\r\n                        ast: {\r\n                            type: TokenType.keywordIndex,\r\n                            columnIdentifier: index.column,\r\n                            indexIdentifier: index.index_name,\r\n                            tableIdentifier: tmn.tableIdentifier,\r\n                            unique: index.unique,\r\n                            position: null, endPosition: null, symbolTable: null\r\n                        },\r\n                        sql: `create ${index.unique ? 'unique ' : ''} index ${index.index_name} on ${tmn.tableIdentifier}(${index.column});`\r\n                    })\r\n                }\r\n            }\r\n        }\r\n\r\n        return this.makeDatabase(m.sqlStatements);\r\n    }\r\n\r\n    private findCreateTableNode(tableIdentifier: string): CreateTableNode {\r\n        tableIdentifier = tableIdentifier.toLocaleLowerCase();\r\n        return this.createTableNodes.find(node => node.identifier.toLocaleLowerCase() == tableIdentifier);\r\n    }\r\n\r\n    private findCreateTableColumnNode(tableNode: CreateTableNode, columnIdentifier: string) {\r\n        columnIdentifier = columnIdentifier.toLocaleLowerCase();\r\n        return tableNode.columnList.find(columnNode => columnNode.identifier.toLocaleLowerCase() == columnIdentifier)\r\n    }\r\n\r\n    private async makeDatabase(statements: SQLStatement[]): Promise<LoadableDatabase> {\r\n\r\n        let statementCleaner: StatementCleaner = new StatementCleaner();\r\n\r\n        let sqlStatements: string[] = statements.filter(st => st.ast.type != TokenType.omittedeStatement)\r\n            .map(st => statementCleaner.clean(st));\r\n        sqlStatements.unshift(\"PRAGMA foreign_keys = OFF;\");\r\n        sqlStatements.push(\"PRAGMA foreign_keys = ON;\")\r\n\r\n        let dbTool = new DatabaseTool(this.main);\r\n\r\n        let promise = new Promise<LoadableDatabase>((resolve, reject) => {\r\n            dbTool.initializeWorker(null, sqlStatements, () => {\r\n                dbTool.export((buffer) => {\r\n                    resolve({\r\n                        binDump: buffer\r\n                    })\r\n                }, (error) => {\r\n                    reject(error);\r\n                })\r\n            });\r\n\r\n        })\r\n\r\n        return promise;\r\n\r\n    }\r\n\r\n\r\n}","import { MainBase } from \"../main/MainBase.js\";\r\nimport { LoadableDatabase } from \"./DatabaseLoader.js\";\r\nimport { DatabaseTool } from \"./DatabaseTools.js\";\r\nimport { downloadFile } from \"./HtmlTools.js\";\r\nimport { MySqlImporter } from \"./MySqlImporter.js\";\r\n\r\nexport class DatabaseImportExport {\r\n\r\n    async loadFromFile(file: globalThis.File, main: MainBase): Promise<LoadableDatabase>{\r\n        let that = this;\r\n        if (file == null) return;\r\n        main.getWaitOverlay().show(\"Lese Datei ein...\");\r\n        if(file.name.endsWith(\".sql\") || file.name.endsWith(\".zip\")){\r\n            let ld = await new MySqlImporter(main).loadFromFile(file);\r\n            main.getWaitOverlay().hide();\r\n            return ld;\r\n        } else {\r\n            var reader = new FileReader();\r\n            return new Promise<LoadableDatabase>((resolve, reject) => {\r\n                reader.onload = (event) => {\r\n                    let ab: ArrayBuffer = <ArrayBuffer>event.target.result;\r\n                    let db: Uint8Array = new Uint8Array(ab);\r\n        \r\n                    //@ts-ignore\r\n                    if(DatabaseTool.getDumpType(db) == \"binaryCompressed\") db = pako.inflate(db);\r\n                    \r\n                    main.getWaitOverlay().hide();\r\n                    resolve({binDump: db});\r\n                };\r\n                reader.readAsArrayBuffer(file);\r\n    \r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    saveToFile(dbTool: DatabaseTool){\r\n        dbTool.export((db) => {\r\n            let filename: string = prompt(\"Bitte geben Sie den Dateinamen ein\", \"datenbank.sqLite\");\r\n            if (filename == null) {\r\n                alert(\"Der Dateiname ist leer, daher wird nichts gespeichert.\");\r\n                return;\r\n            }\r\n            if (!filename.endsWith(\".sqLite\")) filename = filename + \".sqLite\";\r\n            downloadFile(new Blob([db.buffer]), filename, true);\r\n        }, () => {});\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { CreateWorkspaceData, WorkspaceData } from \"../../communication/Data.js\";\r\nimport { DatabaseImportExport } from \"../../tools/DatabaseImportExport.js\";\r\nimport { LoadableDatabase } from \"../../tools/DatabaseLoader.js\";\r\nimport { DatabaseTool } from \"../../tools/DatabaseTools.js\";\r\nimport { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { TemplateUploader } from \"../../tools/TemplateUploader.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionElement } from \"./Accordion.js\";\r\n\r\ntype CreateMode = \"emptyDatabase\" | \"fromTemplate\" | \"useExistingDatabase\" | \"useDumpFile\";\r\n\r\nexport class NewDatabaseDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    database: LoadableDatabase;\r\n\r\n    constructor(private main: Main, private owner_id: number, private path: string[]) {\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Neue Datenbank anlegen</div>\r\n\r\n            <div class=\"jo_ds_settings\">\r\n               <div class=\"jo_ds_settings_caption\">Name der Datenbank:</div><div><input class=\"dialog-input jo_databasename\" value=\"Neue Datenbank\"></input></div>\r\n            </div>\r\n\r\n             <div class=\"jo_tabheadings jo_cdtabheading\">\r\n             <div class=\"jo_tabheading\" data-target=\"jo_createEmptyDatabaseTab\">Leere Datenbank</div>\r\n             <div class=\"jo_tabheading jo_active\" data-target=\"jo_createDatabaseFromTemplateTab\">Von Vorlage kopieren</div>\r\n             <div class=\"jo_tabheading\" data-target=\"jo_createDatabaseUseExistingTab\">Bestehende Datenbank mitnutzen</div>\r\n             <div class=\"jo_tabheading\" data-target=\"jo_createDatabaseUseDumpFile\">Import aus Dumpfile (SQLite- oder MySQL-Format)</div>\r\n             </div>\r\n             <div class=\"jo_tabs\" style=\"width: 100%; margin-top: 10px\">\r\n                 <div class=\"jo_createEmptyDatabaseTab\">\r\n                    <div class=\"jo_createDatabaseDescription\">\r\n                        Erstellt wird eine leere Datenbank.\r\n                    </div>\r\n                 </div>\r\n                 <div class=\"jo_createDatabaseFromTemplateTab jo_active\">\r\n                    <div class=\"jo_ds_settings\">\r\n                       <div class=\"jo_ds_settings_caption\">Vorlage suchen:</div><div><input class=\"dialog-input jo_templatename\"></input></div>\r\n                    </div>\r\n                    <div class=\"jo_scrollable jo_templatelist\"></div>\r\n                 </div>\r\n                <div class=\"jo_createDatabaseUseExistingTab\">\r\n                    <div class=\"jo_createDatabaseDescription\">Wenn Du die Datenbank einer anderen Nutzerin/eines anderen Nutzers mitnutzen möchtest, brauchst Du einen Zugriffscode von ihr/ihm. Er ist unter Datenbank->Einstellungen zu finden.            \r\n                    </div>\r\n                    <div class=\"jo_ds_settings\">\r\n                       <div class=\"jo_ds_settings_caption\">Zugriffscode:</div><div><input class=\"dialog-input jo_databasecodeinput\"></input></div>\r\n                    </div>\r\n                 </div>\r\n                <div class=\"jo_createDatabaseUseDumpFile\">\r\n                    <div class=\"jo_createDatabaseDescription\">Wähle hier die Datei mit dem Datenbank-Dump aus (Endung .sqLite (SQLite-Datenbankdatei) oder .zip (gepackter MySql-Dump) oder .sql (MySql-Dump)):</div>\r\n                    <input type=\"file\" class=\"jo_dumpfile\" name=\"dumpfile\" style=\"padding: 10px\"/>\r\n                    <div class=\"jo_databaseimport_dropzone\" style=\"width: 70vw; margin-left: 10px\">Alternativ: Datei in dieses Feld ziehen</div>\r\n                    <div class=\"jo_databaseimport_ok\"></div>\r\n                 </div>\r\n             </div>\r\n\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_create_database_button\">Datenbank anlegen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        makeTabs(this.$dialog);\r\n\r\n        let $templatelist = jQuery('.jo_templatelist');\r\n        this.main.networkManager.fetchTemplateList((templatelist) => {\r\n            templatelist.forEach(tle => {\r\n\r\n                let $tle = jQuery('<div class=\"jo_templateListEntry\"></div>')\r\n                $tle.append(jQuery(`<div class=\"jo_tle_firstline\">${tle.name} <span class=\"jo_tle_ownername\"> (von ${tle.ownerName})</span></div>`))\r\n                $tle.append(jQuery(`<div class=\"jo_tle_secondline\">${tle.description}</div>`))\r\n                $tle.data('templateId', tle.id);\r\n                $tle.data('name', tle.name);\r\n\r\n                $templatelist.append($tle);\r\n                tle.$tle = <JQuery<HTMLDivElement>>$tle;\r\n\r\n                $tle.on('pointerdown', () => {\r\n                    $templatelist.find('.jo_templateListEntry').removeClass('jo_active');\r\n                    $tle.addClass('jo_active');\r\n                })\r\n\r\n            })\r\n            let $templateName = <JQuery<HTMLInputElement>>jQuery('.jo_templatename');\r\n            $templateName.on('input', () => {\r\n                let s = <string>$templateName.val();\r\n                $templatelist.find('.jo_templateListEntry').hide();\r\n                templatelist.forEach(tle => {\r\n                    let tleString = tle.name + tle.ownerName + (tle.description ? tle.description : \"\");\r\n                    if (tleString.indexOf(s) >= 0) tle.$tle.show();\r\n                })\r\n            })\r\n        })\r\n\r\n        let $dropZone = jQuery('.jo_databaseimport_dropzone');\r\n\r\n        $dropZone.on('dragover', (evt) => {\r\n            evt.stopPropagation();\r\n            evt.preventDefault();\r\n            evt.originalEvent.dataTransfer.dropEffect = 'copy';\r\n        })\r\n        $dropZone.on('drop', (evt) => {\r\n            evt.stopPropagation();\r\n            evt.preventDefault();\r\n\r\n            var files = evt.originalEvent.dataTransfer.files;\r\n            this.importFile(files);\r\n        })\r\n\r\n        let $dumpFileInput = jQuery('.jo_dumpfile');\r\n        $dumpFileInput.on('change', (event) => {\r\n            //@ts-ignore\r\n            var files: FileList = event.originalEvent.target.files;\r\n            this.importFile(files).then(() => {\r\n                $dumpFileInput.val(null);\r\n            });\r\n\r\n        })\r\n\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { this.showMainWindow(); });\r\n        jQuery('#jo_ds_create_database_button').on('click', () => {\r\n            let createMode: CreateMode = \"emptyDatabase\";\r\n            if (jQuery('.jo_createDatabaseFromTemplateTab').hasClass('jo_active')) createMode = \"fromTemplate\";\r\n            if (jQuery('.jo_createDatabaseUseExistingTab').hasClass('jo_active')) createMode = \"useExistingDatabase\";\r\n            if (jQuery('.jo_createDatabaseUseDumpFile').hasClass('jo_active')) createMode = \"useDumpFile\";\r\n\r\n            let workspaceData: CreateWorkspaceData = {\r\n                id: null,\r\n                isFolder: false,\r\n                name: <string>jQuery('.dialog-input.jo_databasename').val(),\r\n                path: this.path.join(\"/\"),\r\n            }\r\n\r\n            switch (createMode) {\r\n                case \"emptyDatabase\":\r\n                    this.createWorkspace(workspaceData);\r\n                    break;\r\n                case \"fromTemplate\":\r\n                    let $template = jQuery('.jo_templateListEntry.jo_active');\r\n                    if ($template.length != 1) {\r\n                        alert('Bitte wählen Sie genau eine Vorlage aus.');\r\n                        return;\r\n                    } else {\r\n                        workspaceData.template_database_id = $template.data('templateId');\r\n                        if (workspaceData.name == \"Neue Datenbank\") workspaceData.name = $template.data('name');\r\n                        this.createWorkspace(workspaceData);\r\n                    }\r\n                    break;\r\n                case \"useExistingDatabase\":\r\n                    let code = <string>jQuery('.jo_databasecodeinput').val();\r\n                    let tIndex = code.indexOf(\"T\");\r\n                    if (tIndex == -1) {\r\n                        alert(\"Der Zugriffscode muss das Zeichen T enthalten.\");\r\n                        return;\r\n                    }\r\n                    workspaceData.otherDatabaseId = Number.parseInt(code.substring(0, tIndex));\r\n                    workspaceData.secret = code.substring(tIndex + 1);\r\n                    this.createWorkspace(workspaceData);\r\n                    break;\r\n                case \"useDumpFile\":\r\n                    if (this.database != null) {\r\n                        new TemplateUploader().uploadCurrentDatabase(-1, this.main, this.database.binDump,\r\n                            \"uploadBaseTemplateForWorkspace\",\r\n                            (response) => {\r\n                            workspaceData.template_id = response.newTemplateId;\r\n                            this.createWorkspace(workspaceData);\r\n                        });\r\n\r\n                    } else {\r\n                        alert('Bitte laden Sie zuerst den Binärdump einer Datenbank hoch.')\r\n                        return;\r\n                    }\r\n                    break;\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    private createWorkspace(workspaceData: CreateWorkspaceData) {\r\n        this.main.networkManager.sendCreateWorkspace(workspaceData, this.owner_id, (error?: string) => {\r\n            if (error != null) { alert(error); return; }\r\n\r\n            let w = this.main.createNewWorkspace(workspaceData.name, this.owner_id);\r\n            w.path = workspaceData.path;\r\n            w.id = workspaceData.id;\r\n            w.sql_history = \"\";\r\n\r\n            let projectExplorer = this.main.projectExplorer;\r\n\r\n            this.main.workspaceList.push(w);\r\n            let accordionElement: AccordionElement = {\r\n                name: workspaceData.name,\r\n                externalElement: w,\r\n                iconClass: \"workspace\",\r\n                isFolder: false,\r\n                path: this.path\r\n            };\r\n\r\n            projectExplorer.workspaceListPanel.addElement(accordionElement, true);\r\n\r\n            w.renderSettingsButton(accordionElement);\r\n\r\n            projectExplorer.workspaceListPanel.sortElements();\r\n            projectExplorer.fileListPanel.sortElements();\r\n\r\n            projectExplorer.setWorkspaceActive(w);\r\n\r\n            this.showMainWindow();\r\n\r\n        });\r\n    }\r\n\r\n    async importFile(files: FileList) {\r\n        let that = this;\r\n        let importer = new DatabaseImportExport();\r\n        let db: LoadableDatabase = await importer.loadFromFile(files[0], this.main)\r\n        let isDatabase: boolean = false;\r\n        let dumpFileType = DatabaseTool.getDumpType(db.binDump);\r\n        if (dumpFileType == \"binaryCompressed\") {\r\n            // @ts-ignore\r\n            let dbUncompressed = pako.inflate(db.binDump);\r\n            if (DatabaseTool.getDumpType(dbUncompressed) == \"binaryUncompressed\") {\r\n                isDatabase = true;\r\n            }\r\n        } else if (DatabaseTool.getDumpType(db.binDump) == \"binaryUncompressed\") {\r\n            //@ts-ignore\r\n            db.binDump = pako.deflate(db.binDump);\r\n            isDatabase = true;\r\n        }\r\n\r\n        if (isDatabase) {\r\n            that.database = db;\r\n            jQuery('.jo_databaseimport_ok').html(\"Die Datenbankdatei wurde erfolgreich von Datei eingelesen. Sie können die Datenbank jetzt durch Klick auf den Button unten erstellen.\");\r\n        } else {\r\n            alert(\"In der Datei befindet sich kein Binärdump einer Datenbank.\");\r\n        }\r\n    }\r\n\r\n    showMainWindow() {\r\n        jQuery('#main').css('visibility', 'visible');\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n    }\r\n\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { PasswordChanger } from \"./UserMenu.js\";\r\nimport { DatabaseSettingsDialog } from \"./DatabaseSettingsDialog.js\";\r\nimport { DatabaseImportExport } from \"../../tools/DatabaseImportExport.js\";\r\nimport { NewDatabaseDialog } from \"./NewDatabaseDialog.js\";\r\n\r\nexport type Action = (identifier: string) => void;\r\n\r\ntype Menu = {\r\n    items: MenuItem[];\r\n    $element?: JQuery<HTMLElement>;\r\n    level?: number;\r\n}\r\n\r\ntype MenuItem = {\r\n    identifier: string;\r\n    $element?: JQuery<HTMLElement>;\r\n    action?: Action;\r\n    link?: string;\r\n    subMenu?: Menu;\r\n}\r\n\r\nexport class MainMenu {\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n\r\n    currentSubmenu: { [level: number]: JQuery<HTMLElement> } = {};\r\n    openSubmenusOnMousemove: boolean = false;\r\n\r\n    initGUI(user: UserData) {\r\n\r\n        let that = this;\r\n        let editor = this.main.getMonacoEditor();\r\n\r\n        let mainMenu: Menu = {\r\n            items: [\r\n                {\r\n                    identifier: \"Datei\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Speichern und Beenden\",\r\n                                action: () => { jQuery('#buttonLogout').trigger(\"click\"); }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Bearbeiten\", subMenu:\r\n                    {\r\n                        items: [\r\n                            { identifier: \"Rückgängig (Strg + z)\", action: () => { editor.trigger(\".\", \"undo\", {}); } },\r\n                            { identifier: \"Wiederholen (Strg + y)\", action: () => { editor.trigger(\".\", \"redo\", {}); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Kopieren (Strg + c)\", action: () => { editor.getAction(\"editor.action.clipboardCopyAction\").run(); } },\r\n                            { identifier: \"Ausschneiden (Strg + x)\", action: () => { editor.getAction(\"editor.action.clipboardCutAction\").run(); } },\r\n                            { identifier: \"Nach oben kopieren (Alt + Shift + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.copyLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten kopieren (Alt + Shift + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.copyLinesDownAction\").run(); } },\r\n                            { identifier: \"Nach oben verschieben (Alt + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.moveLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten verschieben (Alt + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.moveLinesDownAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Suchen... (Strg + f)\", action: () => { editor.getAction(\"actions.find\").run(); } },\r\n                            { identifier: \"Ersetzen... (Strg + h)\", action: () => { editor.getAction(\"editor.action.startFindReplaceAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Aus-/Einkommentieren (Strg + #)\", action: () => { editor.getAction(\"editor.action.commentLine\").run(); } },\r\n                            { identifier: \"Dokument formatieren (Alt + Shift + f)\", action: () => { editor.getAction(\"editor.action.formatDocument\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Finde zugehörige Klammer (Strg + k)\", action: () => { editor.getAction(\"editor.action.jumpToBracket\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Alles zusammenfalten\", action: () => { editor.getAction(\"editor.foldAll\").run(); } },\r\n                            { identifier: \"Alles auffalten\", action: () => { editor.getAction(\"editor.unfoldAll\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Vorschlag auslösen (Strg + Leertaste)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.triggerSuggest\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n                            { identifier: \"Parameterhilfe (Strg + Shift + Leertaste)\", action: () => { editor.getAction(\"editor.action.triggerParameterHints\").run(); } },\r\n                            {\r\n                                identifier: \"Gehe zur Definition (Strg + Click)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.revealDefinition\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Ansicht\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Theme\",\r\n                                subMenu: {\r\n                                    items: [\r\n                                        {\r\n                                            identifier: \"Dark\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"dark\");\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            identifier: \"Light\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"light\");\r\n                                            }\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Hoher Kontrast im Editor ein/aus\", action: () => { editor.getAction(\"editor.action.toggleHighContrast\").run(); } },\r\n\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Zoom out (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(-4); } },\r\n                            { identifier: \"Zoom normal\", action: () => { this.main.editor.setFontSize(14); } },\r\n                            { identifier: \"Zoom in (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(4); } },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Datenbank\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Neue Datenbank anlegen...\", action: () => {\r\n                                    let owner_id: number = that.main.user.id;\r\n                                    if (that.main.workspacesOwnerId != null) {\r\n                                        owner_id = that.main.workspacesOwnerId;\r\n                                    }\r\n\r\n                                    new NewDatabaseDialog(that.main, owner_id, []);\r\n                                }\r\n                            },\r\n                            { identifier: \"Einstellungen...\", action: () => { new DatabaseSettingsDialog(this.main, this.main.currentWorkspace) } },\r\n                            {\r\n                                identifier: \"Export als Binärdump (.sqLite-File)...\", action: () => {\r\n                                    new DatabaseImportExport().saveToFile(this.main.getDatabaseTool());\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n\r\n            ]\r\n        };\r\n\r\n        jQuery('#mainmenu').empty();\r\n        this.initMenu(mainMenu, 0);\r\n    }\r\n\r\n    switchTheme(theme: string) {\r\n        this.main.viewModeController.setTheme(theme);\r\n    }\r\n\r\n    initMenu(menu: Menu, level?: number) {\r\n\r\n        menu.level = level;\r\n\r\n        if (level == 0) {\r\n            menu.$element = jQuery('#mainmenu');\r\n        } else {\r\n            menu.$element = jQuery('<div class=\"jo_submenu\"></div>');\r\n            jQuery('body').append(menu.$element);\r\n        }\r\n\r\n        menu.$element.data('model', menu);\r\n        for (let mi of menu.items) {\r\n            if (mi.identifier == '-') {\r\n                mi.$element = jQuery('<div class=\"jo_menuitemdivider\"></div>');\r\n            } else {\r\n                mi.$element = jQuery('<div>' + mi.identifier + '</div>');\r\n                if (mi.link != null) {\r\n                    let $link = jQuery('<a href=\"' + mi.link + '\" target=\"_blank\" class=\"jo_menulink\"></a>');\r\n                    $link.on(\"mousedown\", (event) => {\r\n                        event.stopPropagation();\r\n                        setTimeout(() => {\r\n                            menu.$element.hide();\r\n                        }, 500);\r\n                    })\r\n                    $link.append(mi.$element);\r\n                    mi.$element = $link;\r\n                }\r\n                if (mi.subMenu != null) {\r\n                    this.initMenu(mi.subMenu, level + 1);\r\n                }\r\n                this.initMenuitemCallbacks(menu, mi);\r\n                if (level == 0) {\r\n                    mi.$element.addClass('jo_mainmenuitem');\r\n                }\r\n            }\r\n            menu.$element.append(mi.$element);\r\n            mi.$element.data('model', mi);\r\n        }\r\n\r\n        let that = this;\r\n        jQuery(document).on('mousedown', () => {\r\n            for (let i = 0; i < 5; i++) {\r\n                if (that.currentSubmenu[i] != null) {\r\n                    that.currentSubmenu[i].hide();\r\n                    that.currentSubmenu[i] = null;\r\n                }\r\n            }\r\n            that.openSubmenusOnMousemove = false;\r\n        });\r\n\r\n    }\r\n\r\n    initMenuitemCallbacks(menu: Menu, mi: MenuItem) {\r\n        let that = this;\r\n\r\n        if (mi.action != null) {\r\n            mi.$element.on('mousedown', (ev) => { mi.action(mi.identifier); });\r\n        }\r\n\r\n        if (mi.subMenu != null) {\r\n            mi.$element.on('mousedown', (ev) => {\r\n                that.opensubmenu(mi);\r\n                that.openSubmenusOnMousemove = true;\r\n                ev.stopPropagation();\r\n            });\r\n\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.openSubmenusOnMousemove) {\r\n                    that.opensubmenu(mi);\r\n                } else {\r\n                    if (that.currentSubmenu[menu.level + 1] != null) {\r\n                        that.currentSubmenu[menu.level + 1].hide();\r\n                        that.currentSubmenu[menu.level + 1] = null;\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.currentSubmenu[menu.level + 1] != null) {\r\n                    that.currentSubmenu[menu.level + 1].hide();\r\n                    that.currentSubmenu[menu.level + 1] = null;\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    opensubmenu(mi: MenuItem) {\r\n\r\n        let subMenu = mi.subMenu;\r\n\r\n        let left: number;\r\n        let top: number;\r\n        if (subMenu.level == 1) {\r\n            left = mi.$element.position().left;\r\n            top = 30;\r\n        } else {\r\n            left = mi.$element.offset().left + mi.$element.width();\r\n            top = mi.$element.offset().top;\r\n        }\r\n\r\n        subMenu.$element.css({\r\n            top: \"\" + top + \"px\",\r\n            left: \"\" + left + \"px\"\r\n        })\r\n\r\n        if (this.currentSubmenu[subMenu.level] != null) {\r\n            this.currentSubmenu[subMenu.level].hide();\r\n        }\r\n\r\n        subMenu.$element.show();\r\n        this.currentSubmenu[subMenu.level] = subMenu.$element;\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { openContextMenu, makeEditable, ContextMenuItem, animateToTransparent, jo_mouseDetected } from \"../../tools/HtmlTools.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { escapeHtml } from \"../../tools/StringTools.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type AccordionElement = {\r\n    name: string;\r\n    sortName?: string;      // if sortName == null, then name will be used when sorting\r\n    externalElement?: any;\r\n    iconClass?: string;\r\n    $htmlFirstLine?: JQuery<HTMLElement>;\r\n    $htmlSecondLine?: JQuery<HTMLElement>;\r\n\r\n    isFolder: boolean;\r\n    path: string[];\r\n}\r\n\r\nexport type AccordionContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: (panel: AccordionElement) => void;\r\n    subMenu?: AccordionContextMenuItem[]\r\n}\r\n\r\nexport class AccordionPanel {\r\n\r\n    elements: AccordionElement[] = [];\r\n\r\n    $captionElement: JQuery<HTMLElement>;\r\n    $buttonNew: JQuery<HTMLElement>;\r\n    $listElement: JQuery<HTMLElement>;\r\n\r\n    private fixed: boolean;\r\n\r\n    dontSortElements: boolean = false;\r\n\r\n    static currentlyDraggedElement: AccordionElement;\r\n    static currentlyDraggedElementKind: string;\r\n\r\n    newFilesElementCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    newDatabaseElementCallback: (path: string[]) => void;\r\n    newFolderCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    renameCallback: (externalElement: any, newName: string) => string;\r\n    deleteCallback: (externalElement: any, callbackIfSuccessful: () => void) => void;\r\n    selectCallback: (externalElement: any) => void;\r\n    addElementActionCallback: (accordionElement: AccordionElement) => JQuery<HTMLElement>;\r\n    contextMenuProvider: (externalElement: any) => AccordionContextMenuItem[];\r\n    moveCallback: (ae: AccordionElement | AccordionElement[]) => void;\r\n    dropElementCallback: (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => void;\r\n\r\n    $newFolderAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private accordion: Accordion, private caption: string, private flexWeight: string,\r\n        private newButtonClass: string, private buttonNewTitle: string,\r\n        private defaultIconClass: string, private withDeleteButton: boolean, private withFolders: boolean,\r\n        private kind: \"workspace\" | \"file\" | \"class\" | \"student\", private enableDrag: boolean, private acceptDropKinds: string[]) {\r\n\r\n        accordion.addPanel(this);\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        if (withFolders) {\r\n            let that = this;\r\n            this.$newFolderAction = jQuery('<div class=\"img_add-folder-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Neuen Ordner auf oberster Ebene anlegen\">');\r\n            this.$newFolderAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                let pathArray: string[] = [];\r\n\r\n                this.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                    this.newFolderCallback(newElement, () => {\r\n                        this.sortElements();\r\n                        newElement.$htmlFirstLine[0].scrollIntoView();\r\n                        animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                    });\r\n                });\r\n\r\n            })\r\n\r\n            this.addAction(this.$newFolderAction);\r\n\r\n\r\n            let $collapseAllAction = jQuery('<div class=\"img_collapse-all-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Alle Ordner zusammenfalten\">');\r\n            $collapseAllAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                that.collapseAll();\r\n\r\n            })\r\n\r\n            this.addAction($collapseAllAction);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    collapseAll() {\r\n        for (let element of this.elements) {\r\n            if (element.isFolder) {\r\n                if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                    element.$htmlFirstLine.removeClass('jo_expanded');\r\n                    element.$htmlFirstLine.addClass('jo_collapsed');\r\n                }\r\n            }\r\n            if (element.path.length > 0) {\r\n                element.$htmlFirstLine.slideUp(200);\r\n            }\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        this.$captionElement.remove();\r\n        this.$listElement.remove();\r\n    }\r\n\r\n    setFixed(fixed: boolean) {\r\n        this.fixed = fixed;\r\n        if (this.fixed) {\r\n            this.grow();\r\n            this.$captionElement.addClass('jo_fixed');\r\n        } else {\r\n            this.$captionElement.removeClass('jo_fixed');\r\n        }\r\n\r\n    }\r\n\r\n    //     <div class=\"jo_leftpanelcaption expanded\" id=\"workspace\" data-panel=\"filelistouter\">\r\n    //     <span>WORKSPACE</span>\r\n    //     <div class=\"jo_actions\"><img id=\"buttonNewFile\" title=\"Neue Datei hinzufügen\"\r\n    //             src=\"assets/projectexplorer/add-file-dark.svg\"></div>\r\n    // </div>\r\n    // <div id=\"filelistouter\" class=\"jo_projectexplorerdiv scrollable\" data-grow=\"3\"\r\n    //     style=\"flex-grow: 3\">\r\n    //     <div id=\"filelist\"></div>\r\n    // </div>\r\n\r\n\r\n    enableNewButton(enabled: boolean) {\r\n        if (this.$buttonNew != null) {\r\n            if (enabled) {\r\n                this.$buttonNew.show();\r\n            } else {\r\n                this.$buttonNew.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    getCurrentlySelectedPath(): string[] {\r\n        let pathArray: string[] = [];\r\n        let selectedElement = this.getSelectedElement();\r\n        if (selectedElement != null) {\r\n            pathArray = selectedElement.path.slice(0);\r\n            if (selectedElement.isFolder) pathArray.push(selectedElement.name);\r\n        }\r\n        return pathArray;\r\n    }\r\n\r\n    compareWithPath(name1: string, path1: string[], isFolder1: boolean, name2: string, path2: string[], isFolder2: boolean) {\r\n\r\n        path1 = path1.slice();\r\n        path1.push(name1);\r\n        name1 = \"\";\r\n\r\n        path2 = path2.slice();\r\n        path2.push(name2);\r\n        name2 = \"\";\r\n\r\n        let i = 0;\r\n        while (i < path1.length && i < path2.length) {\r\n            let cmp = path1[i].localeCompare(path2[i]);\r\n            if (cmp != 0) return cmp;\r\n            i++;\r\n        }\r\n\r\n        if (path1.length < path2.length) return -1;\r\n        if (path1.length > path2.length) return 1;\r\n\r\n        return name1.localeCompare(name2);\r\n\r\n\r\n        // let nameWithPath1 = path1.join(\"/\");\r\n        // if (nameWithPath1 != \"\" && name1 != \"\") nameWithPath1 += \"/\";\r\n        // nameWithPath1 += name1;\r\n\r\n        // let nameWithPath2 = path2.join(\"/\");\r\n        // if (nameWithPath2 != \"\" && name2 != \"\") nameWithPath2 += \"/\";\r\n        // nameWithPath2 += name2;\r\n\r\n        // return nameWithPath1.localeCompare(nameWithPath2);\r\n    }\r\n\r\n\r\n    getElementIndex(name: string, path: string[], isFolder: boolean): number {\r\n\r\n        for (let i = 0; i < this.elements.length; i++) {\r\n            let element = this.elements[i];\r\n\r\n            if (this.compareWithPath(name, path, isFolder, element.name, element.path, element.isFolder) < 0) return i;\r\n\r\n        }\r\n        return this.elements.length;\r\n    }\r\n\r\n    insertElement(ae: AccordionElement) {\r\n        let insertIndex = this.getElementIndex(ae.name, ae.path, ae.isFolder);\r\n        // if (ae.path.length == 0) insertIndex = this.elements.length;\r\n        this.elements.splice(insertIndex, 0, ae);\r\n\r\n        let $elements = this.$listElement.find('.jo_file');\r\n\r\n        if (insertIndex == 0) {\r\n            this.$listElement.prepend(ae.$htmlFirstLine);\r\n        } else if(insertIndex == $elements.length){\r\n            this.$listElement.append(ae.$htmlFirstLine);\r\n        } else {\r\n            let elementAtIndex = $elements.get(insertIndex);\r\n            jQuery(elementAtIndex).before(ae.$htmlFirstLine);\r\n        }\r\n\r\n    }\r\n\r\n    addFolder(name: string, path: string[], callback: (newPanel: AccordionElement) => void) {\r\n\r\n        let ae: AccordionElement = {\r\n            name: name,\r\n            isFolder: true,\r\n            path: path\r\n        }\r\n\r\n        let $element = this.renderElement(ae, true);\r\n\r\n        this.insertElement(ae);\r\n\r\n        $element[0].scrollIntoView();\r\n\r\n        this.renameElement(ae, () => {\r\n\r\n            callback(ae);\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    renderOuterHtmlElements($accordionDiv: JQuery<HTMLElement>) {\r\n        let that = this;\r\n\r\n        this.$captionElement = jQuery(`<div class=\"jo_leftpanelcaption jo_expanded\">\r\n        <div class=\"jo_captiontext\">` + this.caption + `</div><div class=\"jo_actions\"></div></div>`);\r\n\r\n        if (this.newButtonClass != null) {\r\n            this.$buttonNew = jQuery('<div class=\"jo_button jo_active ' + this.newButtonClass + '\" title=\"' + this.buttonNewTitle + '\">');\r\n            this.$captionElement.find('.jo_actions').append(this.$buttonNew);\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n            this.$buttonNew.on(mousePointer + 'down', (ev) => {\r\n\r\n                Helper.close();\r\n                ev.stopPropagation();\r\n\r\n                let path = that.getCurrentlySelectedPath();\r\n\r\n                let ae: AccordionElement = {\r\n                    name: \"Neu\",\r\n                    isFolder: false,\r\n                    path: path\r\n                }\r\n\r\n                let insertIndex = this.getElementIndex(\"\", path, false);\r\n                this.elements.splice(insertIndex, 0, ae);\r\n                let $element = this.renderElement(ae, true);\r\n\r\n\r\n                if (insertIndex == 0) {\r\n                    this.$listElement.prepend($element);\r\n                } else {\r\n                    let elementAtIndex = this.$listElement.find('.jo_file').get(insertIndex - 1);\r\n                    jQuery(elementAtIndex).after($element);\r\n                }\r\n\r\n                $element[0].scrollIntoView();\r\n\r\n                that.renameElement(ae, () => {\r\n\r\n                    that.newFilesElementCallback(ae, (externalElement: any) => {\r\n\r\n                        ae.externalElement = externalElement;\r\n\r\n                        if (ae.$htmlSecondLine != null) {\r\n                            ae.$htmlSecondLine.insertAfter($element);\r\n                        }\r\n\r\n                        if (that.selectCallback != null) that.select(ae.externalElement);\r\n\r\n                    });\r\n\r\n                });\r\n\r\n            });\r\n\r\n        }\r\n\r\n        let $listOuter = jQuery('<div id=\"filelistouter\" class=\"jo_projectexplorerdiv jo_scrollable\" data-grow=\"'\r\n            + this.flexWeight + '\" style=\"flex-grow: ' + this.flexWeight + '\"></div>');\r\n        this.$listElement = jQuery('<div class=\"jo_filelist\"></div>')\r\n\r\n        $listOuter.append(this.$listElement);\r\n\r\n        $accordionDiv.append(this.$captionElement);\r\n        $accordionDiv.append($listOuter);\r\n\r\n        let $ce = this.$captionElement;\r\n        let $li = this.$listElement.parent();\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $ce.on(mousePointer + 'down', (ev) => {\r\n            if (ev.button != 0) {\r\n                return;\r\n            }\r\n\r\n            if (!this.fixed) {\r\n                let targetGrow = $li.data('grow');\r\n                if ($ce.hasClass('jo_expanded')) {\r\n                    if (that.accordion.parts.length > 1) {\r\n                        $li.animate({\r\n                            'flex-grow': 0.001\r\n                        }, 1000, () => { $ce.toggleClass('jo_expanded'); });\r\n                    }\r\n                } else {\r\n                    $ce.toggleClass('jo_expanded');\r\n                    $li.animate({\r\n                        'flex-grow': targetGrow\r\n                    }, 1000);\r\n                }\r\n            }\r\n        });\r\n\r\n        $ce.on('dragover', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                $ce.addClass('jo_file_dragover');\r\n                event.preventDefault();\r\n            }\r\n        })\r\n\r\n        $ce.on('dragleave', (event) => {\r\n            $ce.removeClass('jo_file_dragover');\r\n        })\r\n\r\n        $ce.on('drop', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                event.preventDefault();\r\n                $ce.removeClass('jo_file_dragover');\r\n                let element1 = AccordionPanel.currentlyDraggedElement;\r\n                if (element1 != null) {\r\n                    that.moveElement(element1, null);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    grow() {\r\n        let $li = this.$listElement.parent();\r\n        let targetGrow = $li.data('grow');\r\n        $li.css('flex-grow', targetGrow);\r\n        this.$captionElement.addClass('jo_expanded');\r\n    }\r\n\r\n    addElement(element: AccordionElement, expanded: boolean) {\r\n        // this.elements.push(element);\r\n        // element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        // this.$listElement.prepend(element.$htmlFirstLine);\r\n        element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        this.insertElement(element);\r\n    }\r\n\r\n    sortElements() {\r\n        if (this.dontSortElements) return;\r\n        this.elements.sort((a, b) => {\r\n            let aName = a.sortName ? a.sortName : a.name;\r\n            let bName = b.sortName ? b.sortName : b.name;\r\n\r\n            return this.compareWithPath(aName, a.path, a.isFolder, bName, b.path, b.isFolder);\r\n\r\n        });\r\n        this.elements.forEach((element) => { this.$listElement.append(element.$htmlFirstLine) });\r\n    }\r\n\r\n    setTextAfterFilename(element: AccordionElement, text: string, cssClass: string) {\r\n        if(element == null) return;\r\n        let $div = element.$htmlFirstLine.find('.jo_textAfterName');\r\n        $div.addClass(cssClass);\r\n        $div.html(text);\r\n    }\r\n\r\n    addAction($element: JQuery<HTMLElement>) {\r\n        this.$captionElement.find('.jo_actions').prepend($element);\r\n    }\r\n\r\n    renderElement(element: AccordionElement, expanded: boolean): JQuery<HTMLElement> {\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        let that = this;\r\n\r\n        let expandedCollapsed = \"\";\r\n\r\n        if (element.iconClass == null) element.iconClass = this.defaultIconClass;\r\n        if (element.isFolder) {\r\n            element.iconClass = \"folder\";\r\n            expandedCollapsed = expanded ? \" jo_expanded\" : \" jo_collapsed\";\r\n        }\r\n\r\n        let pathHtml = \"\";\r\n        if (element.path == null) element.path = [];\r\n        for (let i = 0; i < element.path.length; i++) {\r\n            pathHtml += '<div class=\"jo_folderline\"></div>';\r\n        }\r\n\r\n        element.$htmlFirstLine = jQuery(`<div class=\"jo_file jo_${element.iconClass} ${expandedCollapsed}\">\r\n        <div class=\"jo_folderlines\">${pathHtml}</div>\r\n           <div class=\"jo_fileimage\"></div>\r\n           <div class=\"jo_filename\">${escapeHtml(element.name)}</div>\r\n           <div class=\"jo_textAfterName\"></div>\r\n           <div class=\"jo_additionalButtonSettings\"></div>\r\n           ${this.withDeleteButton ? '<div class=\"jo_delete img_delete jo_button jo_active' + (false ? \" jo_delete_always\" : \"\") + '\"></div>' : \"\"}\r\n           ${!jo_mouseDetected ? '<div class=\"jo_settings_button img_ellipsis-dark jo_button jo_active\"></div>' : \"\"}\r\n           </div>`);\r\n\r\n        if (!expanded && element.path.length > 0) {\r\n            element.$htmlFirstLine.hide();\r\n        }\r\n\r\n        if (this.addElementActionCallback != null) {\r\n            let $elementAction = this.addElementActionCallback(element);\r\n            element.$htmlFirstLine.append($elementAction);\r\n        }\r\n\r\n        if (this.withFolders) {\r\n            if (element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            that.moveElement(element1, element);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withFolders || this.enableDrag) {\r\n            let $filedragpart = element.$htmlFirstLine.find('.jo_filename');\r\n            $filedragpart.attr('draggable', 'true');\r\n            $filedragpart.on('dragstart', (event) => {\r\n                AccordionPanel.currentlyDraggedElement = element;\r\n                AccordionPanel.currentlyDraggedElementKind = that.kind;\r\n                event.originalEvent.dataTransfer.effectAllowed = element.isFolder ? \"move\" : \"copyMove\";\r\n            })\r\n        }\r\n\r\n        if (this.acceptDropKinds != null && this.acceptDropKinds.length > 0) {\r\n            if (!element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n\r\n                        if (event.ctrlKey) {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"copy\";\r\n                        } else {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"move\";\r\n                        }\r\n\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            if (that.dropElementCallback != null) that.dropElementCallback(element, element1, event.ctrlKey ? \"copy\" : \"move\");\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        element.$htmlFirstLine.on(mousePointer + 'up', (ev) => {\r\n\r\n            if (ev.button == 0 && that.selectCallback != null) {\r\n                that.selectCallback(element.externalElement);\r\n\r\n                for (let ae of that.elements) {\r\n                    if (ae != element && ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                        ae.$htmlFirstLine.removeClass('jo_active');\r\n                    }\r\n                }\r\n\r\n                element.$htmlFirstLine.addClass('jo_active');\r\n\r\n                if (element.isFolder) {\r\n\r\n                    if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                        element.$htmlFirstLine.removeClass('jo_expanded');\r\n                        element.$htmlFirstLine.addClass('jo_collapsed');\r\n                    } else {\r\n                        element.$htmlFirstLine.addClass('jo_expanded');\r\n                        element.$htmlFirstLine.removeClass('jo_collapsed');\r\n                    }\r\n\r\n                    let pathIsCollapsed: { [path: string]: boolean } = {};\r\n                    for (let e of this.elements) {\r\n                        if (e.isFolder) {\r\n                            let path = e.path.join(\"/\");\r\n                            if (path != \"\") path += \"/\";\r\n                            path += e.name;\r\n                            pathIsCollapsed[path] = e.$htmlFirstLine.hasClass('jo_collapsed');\r\n                            if (pathIsCollapsed[e.path.join(\"/\")]) pathIsCollapsed[path] = true;\r\n                        }\r\n                    }\r\n                    pathIsCollapsed[\"\"] = false;\r\n\r\n                    for (let e of this.elements) {\r\n                        if (pathIsCollapsed[e.path.join(\"/\")]) {\r\n                            e.$htmlFirstLine.slideUp(200);\r\n                        } else {\r\n                            e.$htmlFirstLine.slideDown(200);\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n\r\n        let contextmenuHandler = function (event) {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [];\r\n            if (that.renameCallback != null) {\r\n                contextMenuItems.push({\r\n                    caption: \"Umbenennen\",\r\n                    callback: () => {\r\n                        that.renameElement(element);\r\n                    }\r\n                })\r\n            }\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n            if (element.isFolder) {\r\n                contextMenuItems = contextMenuItems.concat([\r\n                    {\r\n                        caption: \"Neuen Unterordner anlegen (unterhalb '\" + element.name + \"')...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            // that.$newFolderAction.trigger(mousePointer + 'down');\r\n                            let pathArray = that.getCurrentlySelectedPath();\r\n\r\n                            that.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                                that.newFolderCallback(newElement, () => {\r\n                                    that.sortElements();\r\n                                    newElement.$htmlFirstLine[0].scrollIntoView();\r\n                                    animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                                });\r\n                            });\r\n\r\n                        }\r\n                    }, {\r\n                        caption: \"Neue Datenbank...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n\r\n                            that.newDatabaseElementCallback(element.path.concat(element.name));\r\n\r\n                        }\r\n                    }\r\n                ])\r\n            }\r\n\r\n\r\n            if (that.contextMenuProvider != null && !element.isFolder) {\r\n\r\n                for (let cmi of that.contextMenuProvider(element)) {\r\n                    contextMenuItems.push({\r\n                        caption: cmi.caption,\r\n                        callback: () => {\r\n                            cmi.callback(element);\r\n                        },\r\n                        color: cmi.color,\r\n                        subMenu: cmi.subMenu == null ? null : cmi.subMenu.map((mi) => {\r\n                            return {\r\n                                caption: mi.caption,\r\n                                callback: () => {\r\n                                    mi.callback(element);\r\n                                },\r\n                                color: mi.color\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n\r\n            if (contextMenuItems.length > 0) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                openContextMenu(contextMenuItems, event.pageX, event.pageY);\r\n            }\r\n        };\r\n\r\n        element.$htmlFirstLine[0].addEventListener(\"contextmenu\", contextmenuHandler, false);\r\n\r\n        // long press for touch devices\r\n        let pressTimer: number;\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.on('pointerup', () => {\r\n                clearTimeout(pressTimer);\r\n                return false;\r\n            }).on('pointerdown', (event) => {\r\n                pressTimer = window.setTimeout(() => {\r\n                    contextmenuHandler(event);\r\n                }, 500);\r\n                return false;\r\n            });\r\n        }\r\n\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('pointerdown', (e) => {\r\n                contextmenuHandler(e);\r\n            });\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('mousedown click', (e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            });\r\n        }\r\n\r\n        if (that.withDeleteButton) {\r\n            element.$htmlFirstLine.find('.jo_delete').on(mousePointer + 'up', (ev) => {\r\n                ev.preventDefault();\r\n                openContextMenu([{\r\n                    caption: \"Abbrechen\",\r\n                    callback: () => {\r\n                        // nothing to do.\r\n                    }\r\n                }, {\r\n                    caption: \"Ich bin mir sicher: löschen!\",\r\n                    color: \"#ff6060\",\r\n                    callback: () => {\r\n\r\n                        if (element.isFolder) {\r\n                            if (that.getChildElements(element).length > 0) {\r\n                                alert('Dieser Ordner kann nicht gelöscht werden, da er nicht leer ist.');\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        that.deleteCallback(element.externalElement, () => {\r\n                            element.$htmlFirstLine.remove();\r\n                            if (element.$htmlSecondLine != null) element.$htmlSecondLine.remove();\r\n                            that.elements.splice(that.elements.indexOf(element), 1);\r\n\r\n                            if (that.selectCallback != null) {\r\n                                if (that.elements.length > 0) {\r\n                                    that.select(that.elements[0].externalElement);\r\n                                } else {\r\n                                    that.select(null);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }], ev.pageX + 2, ev.pageY + 2);\r\n                ev.stopPropagation();\r\n            });\r\n        }\r\n\r\n        return element.$htmlFirstLine;\r\n\r\n    }\r\n\r\n    moveElement(elementToMove: AccordionElement, destinationFolder: AccordionElement) {\r\n        let destinationPath: string[] = destinationFolder == null ? [] : destinationFolder.path.slice(0).concat([destinationFolder.name]);\r\n        if (elementToMove.isFolder) {\r\n            let movedElements: AccordionElement[] = [elementToMove];\r\n\r\n            let sourcePath = elementToMove.path.concat([elementToMove.name]).join(\"/\");\r\n\r\n            if(destinationPath.join('/').indexOf(sourcePath) == 0) return;\r\n\r\n            let oldPathLength = elementToMove.path.length;\r\n            elementToMove.path = destinationPath.slice(0);\r\n\r\n            for (let element of this.elements) {\r\n                if (element.path.join(\"/\").startsWith(sourcePath)) {\r\n                    element.path.splice(0, oldPathLength);\r\n                    element.path = destinationPath.concat(element.path);\r\n                    movedElements.push(element);\r\n                }\r\n            }\r\n\r\n            for (let el of movedElements) {\r\n                el.$htmlFirstLine.remove();\r\n                this.elements.splice(this.elements.indexOf(el), 1);\r\n            }\r\n            for (let el of movedElements) {\r\n                this.renderElement(el, true);\r\n                this.insertElement(el);\r\n            }\r\n\r\n            this.moveCallback(movedElements);\r\n        } else {\r\n            elementToMove.path = destinationPath;\r\n            elementToMove.$htmlFirstLine.remove();\r\n            this.elements.splice(this.elements.indexOf(elementToMove), 1);\r\n            this.renderElement(elementToMove, true);\r\n            this.insertElement(elementToMove);\r\n            this.select(elementToMove.externalElement);\r\n            elementToMove.$htmlFirstLine[0].scrollIntoView();\r\n            this.moveCallback(elementToMove);\r\n        }\r\n    }\r\n\r\n    getChildElements(folder: AccordionElement): AccordionElement[] {\r\n        let path = folder.path.slice(0).concat(folder.name).join(\"/\");\r\n        return this.elements.filter((element) => element.path.join(\"/\").startsWith(path));\r\n    }\r\n\r\n    renameElement(element: AccordionElement, callback?: () => void) {\r\n        let that = this;\r\n        let $div = element.$htmlFirstLine.find('.jo_filename');\r\n        let pointPos = element.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        this.dontSortElements = true;\r\n        makeEditable($div, $div, (newText: string) => {\r\n            if (element.externalElement != null) newText = that.renameCallback(element.externalElement, newText);\r\n            element.name = newText;\r\n            $div.html(element.name);\r\n            if (callback != null) callback();\r\n            that.sortElements();\r\n            $div[0].scrollIntoView();\r\n            this.dontSortElements = false;\r\n        }, selection);\r\n    }\r\n\r\n    select(externalElement: any, invokeCallback: boolean = true, scrollIntoView: boolean = false) {\r\n\r\n        if (externalElement == null) {\r\n            for (let ae1 of this.elements) {\r\n                if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n            }\r\n        } else {\r\n            let ae = this.findElement(externalElement);\r\n\r\n            if (ae != null) {\r\n                for (let ae1 of this.elements) {\r\n                    if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n                }\r\n\r\n                ae.$htmlFirstLine.addClass('jo_active');\r\n                if (scrollIntoView) {\r\n                    let pathString = ae.path.join(\"/\");\r\n                    for (let el of this.elements) {\r\n                        let elPath = el.path.slice(0);\r\n                        if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                            if (el.isFolder) {\r\n                                elPath.push(el.name);\r\n                                if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                                    el.$htmlFirstLine.removeClass(\"jo_collapsed\");\r\n                                    el.$htmlFirstLine.addClass(\"jo_expanded\");\r\n                                }\r\n                            }\r\n                            el.$htmlFirstLine.show();\r\n                        }\r\n\r\n                    }\r\n\r\n                    ae.$htmlFirstLine[0].scrollIntoView();\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (invokeCallback && this.selectCallback != null) this.selectCallback(externalElement);\r\n\r\n    }\r\n\r\n    getPathString(ae: AccordionElement) {\r\n        let ps: string = ae.path.join(\"/\");\r\n        if (ae.isFolder) {\r\n            if (ps != \"\") ps += \"/\";\r\n            ps += ae.name;\r\n        }\r\n        return ps;\r\n    }\r\n\r\n    setElementClass(element: AccordionElement, iconClass: string) {\r\n        if (element != null) {\r\n            element.$htmlFirstLine?.removeClass(\"jo_\" + element.iconClass).addClass(\"jo_\" + iconClass);\r\n            element.iconClass = iconClass;\r\n        }\r\n\r\n    }\r\n\r\n    findElement(externalElement: any): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                return ae;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    removeElement(externalElement: any) {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                ae.$htmlFirstLine.remove();\r\n                if (ae.$htmlSecondLine != null) ae.$htmlSecondLine.remove();\r\n                this.elements.splice(this.elements.indexOf(ae), 1);\r\n\r\n                if (this.selectCallback != null) {\r\n                    if (this.elements.length > 0) {\r\n                        this.select(this.elements[0].externalElement);\r\n                    } else {\r\n                        this.select(null);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.$listElement.empty();\r\n        this.elements = [];\r\n    }\r\n\r\n    setCaption(text: string) {\r\n        this.$captionElement.find('.jo_captiontext').html(text);\r\n    }\r\n\r\n    getSelectedElement(): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                return ae;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class Accordion {\r\n\r\n    parts: AccordionPanel[] = [];\r\n    $html: JQuery<HTMLElement>;\r\n\r\n    constructor(public main: MainBase, $html: JQuery<HTMLElement>) {\r\n        this.$html = $html;\r\n        $html.addClass('jo_leftpanelinner');\r\n    }\r\n\r\n    addPanel(panel: AccordionPanel) {\r\n        panel.renderOuterHtmlElements(this.$html);\r\n        this.parts.push(panel);\r\n    }\r\n\r\n}","import { ClassData, UserData } from \"../../communication/Data.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { isEmptyObject } from \"jquery\";\r\n\r\nexport class DistributeToStudentsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n    studentCount: number = 0;\r\n\r\n    constructor(private classes: ClassData[], private workspace: Workspace, private main: Main){\r\n        this.init();\r\n    }\r\n\r\n    private init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Austeilen eines Workspace an einzelne Schüler/innen</div>\r\n             <div class=\"jo_ds_settings\">\r\n                <div class=\"jo_ds_settings_caption\">Workspace:</div><div class=\"jo_ds_workspacename\">${this.workspace.name}</div>\r\n                <div class=\"jo_ds_settings_caption\">Liste filtern:</div><div class=\"jo_ds_filterdiv\"><input class=\"dialog-input\"></input></div>\r\n             </div>\r\n             <div class=\"jo_ds_student_list jo_scrollable\">\r\n             </div>\r\n             <div class=\"jo_ds_selected_message\"></div>\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_distribute_button\">Austeilen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        let $studentList = jQuery('.jo_ds_student_list');\r\n        let that = this;\r\n\r\n        for(let klass of this.classes){\r\n            for(let student of klass.students){\r\n                let $studentLine = jQuery('<div class=\"jo_ds_student_line\">');\r\n                let $studentClass = jQuery(`<div class=\"jo_ds_student_class\">${klass.name}</div>`);                \r\n                let $studentName = jQuery(`<div class=\"jo_ds_student_name\">${student.rufname} ${student.familienname}</div>`);\r\n                $studentLine.append($studentClass, $studentName);\r\n                $studentList.append($studentLine);\r\n                $studentLine.on('mousedown', () => {\r\n                    $studentLine.toggleClass('jo_active');\r\n                     that.studentCount += $studentLine.hasClass('jo_active') ? 1 : -1;\r\n                     jQuery('.jo_ds_selected_message').text(`${that.studentCount} Schüler/inn/en selektiert`);\r\n                });\r\n                $studentLine.data('student', student);\r\n                $studentLine.data('klass', klass);\r\n            }\r\n        }\r\n\r\n        jQuery('.jo_ds_filterdiv>input').on('input', () => {\r\n            let filterText = <string>jQuery('.jo_ds_filterdiv>input').val();\r\n            if(filterText == null || filterText == \"\"){\r\n                $('.jo_ds_student_line').show();\r\n            } else {\r\n                $('.jo_ds_student_line').each((index, element) => {\r\n                    let $element = jQuery(element);\r\n                    let klass:ClassData = $element.data('klass');\r\n                    let student: UserData = $element.data('student');\r\n                    let text = klass.name + \" \" + student.rufname + \" \" + student.familienname;\r\n                    if(text.indexOf(filterText) >= 0){\r\n                        $element.show();\r\n                    } else {\r\n                        $element.hide();\r\n                    }\r\n                });\r\n\r\n            }\r\n            \r\n        });\r\n\r\n\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { that.close() });\r\n        jQuery('#jo_ds_distribute_button').on('click', () => {that.distributeWorkspace();});\r\n\r\n    }\r\n\r\n    distributeWorkspace() {\r\n\r\n        let student_ids: number[] = [];\r\n        $('.jo_ds_student_line').each((index, element) => {\r\n            let $element = jQuery(element);\r\n            if($element.hasClass('jo_active')){\r\n                let student: UserData = $element.data('student');\r\n                student_ids.push(student.id);\r\n            }\r\n        });\r\n\r\n        this.close();\r\n\r\n        this.main.networkManager.sendDistributeWorkspace(this.workspace, null, student_ids, (error: string) => {\r\n            if (error == null) {\r\n                let networkManager = this.main.networkManager;\r\n                let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                alert(`Der Workspace ${this.workspace.name} wurde an ${student_ids.length} Schüler/innen ausgeteilt. Er wird in maximal ${dt} s bei jedem Schüler ankommen.`);\r\n            } else {\r\n                alert(error);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n    \r\n\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionPanel, Accordion, AccordionElement, AccordionContextMenuItem } from \"./Accordion.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { WorkspaceData, Workspaces, ClassData, CreateWorkspaceData } from \"../../communication/Data.js\";\r\nimport { dateToString } from \"../../tools/StringTools.js\";\r\nimport { DistributeToStudentsDialog } from \"./DistributeToStudentsDialog.js\";\r\nimport { NewDatabaseDialog } from \"./NewDatabaseDialog.js\";\r\n\r\n\r\nexport class ProjectExplorer {\r\n\r\n    programPointerModule: Module = null;\r\n    programPointerPosition: TextPosition;\r\n    programPointerDecoration: string[] = [];\r\n\r\n    accordion: Accordion;\r\n    fileListPanel: AccordionPanel;\r\n    workspaceListPanel: AccordionPanel;\r\n\r\n    $homeAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private $projectexplorerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.accordion = new Accordion(this.main, this.$projectexplorerDiv);\r\n\r\n        this.initFilelistPanel();\r\n\r\n        this.initWorkspacelistPanel();\r\n\r\n    }\r\n\r\n    initFilelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.fileListPanel = new AccordionPanel(this.accordion, \"Kein Workspace gewählt\", \"1\",\r\n            \"img_add-file-dark\", \"Neue Datei...\", \"java\", true, false, \"file\", true, []);\r\n\r\n        this.fileListPanel.newFilesElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                if (that.main.currentWorkspace == null) {\r\n                    alert('Bitte wählen Sie zuerst einen Workspace aus.');\r\n                    return null;\r\n                }\r\n\r\n                let f: File = {\r\n                    name: accordionElement.name,\r\n                    dirty: false,\r\n                    saved: true,\r\n                    text: \"\",\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    panelElement: accordionElement\r\n                };\r\n                let m = new Module(f, that.main);\r\n                let modulStore = that.main.currentWorkspace.moduleStore;\r\n                modulStore.putModule(m);\r\n                that.setModuleActive(m);\r\n                that.main.networkManager.sendCreateFile(m, that.main.currentWorkspace, that.main.workspacesOwnerId,\r\n                    (error: string) => {\r\n                        if (error == null) {\r\n                            successfulNetworkCommunicationCallback(m);\r\n                        } else {\r\n                            alert('Der Server ist nicht erreichbar!');\r\n\r\n                        }\r\n                    });\r\n\r\n            };\r\n\r\n        this.fileListPanel.renameCallback =\r\n            (module: Module, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                let file = module.file;\r\n\r\n                file.name = newName;\r\n                file.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.fileListPanel.deleteCallback =\r\n            (module: Module, callbackIfSuccessful: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.currentWorkspace.moduleStore.removeModule(module);\r\n                        callbackIfSuccessful();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.fileListPanel.contextMenuProvider = (accordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            if (!(that.main.user.is_teacher || that.main.user.is_admin || that.main.user.is_schooladmin)) {\r\n                let module: Module = <Module>accordionElement.externalElement;\r\n                let file = module.file;\r\n\r\n                // if (file.submitted_date == null) {\r\n                //     cmiList.push({\r\n                //         caption: \"Als Hausaufgabe markieren\",\r\n                //         callback: (element: AccordionElement) => {\r\n\r\n                //             let file = (<Module>element.externalElement).file;\r\n                //             file.submitted_date = dateToString(new Date());\r\n                //             file.saved = false;\r\n                //             that.main.networkManager.sendUpdates(null, true);\r\n                //             that.renderHomeworkButton(file);\r\n                //         }\r\n                //     });\r\n                // } else {\r\n                //     cmiList.push({\r\n                //         caption: \"Hausaufgabenmarkierung entfernen\",\r\n                //         callback: (element: AccordionElement) => {\r\n\r\n                //             let file = (<Module>element.externalElement).file;\r\n                //             file.submitted_date = null;\r\n                //             file.saved = false;\r\n                //             that.main.networkManager.sendUpdates(null, true);\r\n                //             that.renderHomeworkButton(file);\r\n\r\n                //         }\r\n                //     });\r\n                // }\r\n\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n\r\n\r\n        this.fileListPanel.selectCallback =\r\n            (module: Module) => {\r\n                that.setModuleActive(module);\r\n            }\r\n\r\n\r\n\r\n    }\r\n\r\n    renderHomeworkButton(file: File) {\r\n        let $buttonDiv = file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonHomework');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_homeworkButton').remove();\r\n\r\n        let klass: string = null;\r\n        let title: string = \"\";\r\n        if (file.submitted_date != null) {\r\n            klass = \"img_homework\";\r\n            title = \"Wurde als Hausaufgabe abgegeben: \" + file.submitted_date\r\n            if (file.text_before_revision) {\r\n                klass = \"img_homework-corrected\";\r\n                title = \"Korrektur liegt vor.\"\r\n            }\r\n        }\r\n\r\n        if (klass != null) {\r\n            let $homeworkButtonDiv = jQuery(`<div class=\"jo_homeworkButton ${klass}\" title=\"${title}\"></div>`);\r\n            $buttonDiv.prepend($homeworkButtonDiv);\r\n            if (klass.indexOf(\"jo_active\") >= 0) {\r\n                $homeworkButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n                $homeworkButtonDiv.on('click', (e) => {\r\n                    e.stopPropagation();\r\n                    // TODO\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initWorkspacelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.workspaceListPanel = new AccordionPanel(this.accordion, \"Datenbanken\", \"3\",\r\n            null, \"Neue Datenbank...\", \"workspace\", true, true, \"workspace\", false, [\"file\"]);\r\n\r\n        let $newWorkspaceAction = jQuery('<div class=\"img_add-database-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Neue Datenbank auf oberster Ordnerebene anlegen\">');\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $newWorkspaceAction.on(mousePointer + 'down', (e) => {\r\n            e.stopPropagation();\r\n\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            new NewDatabaseDialog(that.main, owner_id, this.workspaceListPanel.getCurrentlySelectedPath());\r\n\r\n        })\r\n\r\n        this.workspaceListPanel.addAction($newWorkspaceAction);\r\n        if(this.workspaceListPanel.$buttonNew != null){\r\n            this.workspaceListPanel.$buttonNew.hide();\r\n        }\r\n\r\n        this.workspaceListPanel.newDatabaseElementCallback = (path: string[]) => {\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            new NewDatabaseDialog(that.main, owner_id, path);\r\n\r\n        }\r\n\r\n\r\n        this.workspaceListPanel.renameCallback =\r\n            (workspace: Workspace, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                workspace.name = newName;\r\n                workspace.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.workspaceListPanel.deleteCallback =\r\n            (workspace: Workspace, successfulNetworkCommunicationCallback: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"workspace\", workspace.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.removeWorkspace(workspace);\r\n                        that.fileListPanel.enableNewButton(that.main.workspaceList.length > 0);\r\n                        that.fileListPanel.clear();\r\n                        that.main.databaseExplorer.clear();\r\n                        that.main.getResultsetPresenter().clear();\r\n                        successfulNetworkCommunicationCallback();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.workspaceListPanel.selectCallback =\r\n            (workspace: Workspace) => {\r\n                if(workspace.isFolder) return;\r\n                if (workspace != this.main.currentWorkspace) {\r\n                    that.main.networkManager.sendUpdates(() => {\r\n                        that.setWorkspaceActive(workspace);\r\n                    });\r\n                }\r\n            }\r\n\r\n        this.workspaceListPanel.newFolderCallback = (newElement: AccordionElement, successCallback) => {\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            let folder: Workspace = new Workspace(newElement.name, that.main, owner_id);\r\n            folder.isFolder = true;\r\n\r\n            folder.path = newElement.path.join(\"/\");\r\n            folder.panelElement = newElement;\r\n            newElement.externalElement = folder;\r\n            that.main.workspaceList.push(folder);\r\n\r\n            let wd: CreateWorkspaceData = {\r\n                id: -1,\r\n                isFolder: true,\r\n                name: folder.name,\r\n                path: folder.path\r\n            }\r\n\r\n            that.main.networkManager.sendCreateWorkspace(wd, that.main.workspacesOwnerId, (error: string) => {\r\n                if (error == null) {\r\n                    folder.id = wd.id;\r\n                    successCallback(folder);\r\n\r\n                } else {\r\n                    alert(\"Fehler: \" + error);\r\n                    that.workspaceListPanel.removeElement(newElement);\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        this.workspaceListPanel.moveCallback = (ae: AccordionElement | AccordionElement[]) => {\r\n            if (!Array.isArray(ae)) ae = [ae];\r\n            for (let a of ae) {\r\n                let ws: Workspace = a.externalElement;\r\n                ws.path = a.path.join(\"/\");\r\n                ws.saved = false;\r\n            }\r\n            this.main.networkManager.sendUpdates();\r\n        }\r\n\r\n        this.workspaceListPanel.dropElementCallback = (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => {\r\n            let workspace: Workspace = dest.externalElement;\r\n            let module: Module = droppedElement.externalElement;\r\n\r\n            if (workspace.moduleStore.getModules(false).indexOf(module) >= 0) return; // module is already in destination workspace\r\n\r\n            let f: File = {\r\n                name: module.file.name,\r\n                dirty: true,\r\n                saved: false,\r\n                text: module.file.text,\r\n                text_before_revision: null,\r\n                submitted_date: null,\r\n                student_edited_after_revision: false,\r\n                version: module.file.version,\r\n                panelElement: null\r\n            };\r\n\r\n            if (dropEffekt == \"move\") {\r\n                // move file\r\n                let oldWorkspace = that.main.currentWorkspace;\r\n                oldWorkspace.moduleStore.removeModule(module);\r\n                that.fileListPanel.removeElement(module);\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, () => { });\r\n            }\r\n\r\n            let m = new Module(f, that.main);\r\n            let modulStore = workspace.moduleStore;\r\n            modulStore.putModule(m);\r\n            that.main.networkManager.sendCreateFile(m, workspace, that.main.workspacesOwnerId,\r\n                (error: string) => {\r\n                    if (error == null) {\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n\r\n        }\r\n\r\n\r\n\r\n        this.$homeAction = jQuery('<div class=\"img_home-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Meine eigenen Workspaces anzeigen\">');\r\n\r\n        this.$homeAction.on(mousePointer +'down', (e) => {\r\n            e.stopPropagation();\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n                that.onHomeButtonClicked();\r\n            });\r\n\r\n            that.main.bottomDiv.hideHomeworkTab();\r\n\r\n        })\r\n\r\n        this.workspaceListPanel.addAction(this.$homeAction);\r\n        this.$homeAction.hide();\r\n\r\n        this.workspaceListPanel.contextMenuProvider = (workspaceAccordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            if (this.main.user.is_teacher && this.main.teacherExplorer.classPanel.elements.length > 0) {\r\n                cmiList.push({\r\n                    caption: \"An Klasse austeilen...\",\r\n                    callback: (element: AccordionElement) => { },\r\n                    subMenu: this.main.teacherExplorer.classPanel.elements.map((ae) => {\r\n                        return {\r\n                            caption: ae.name,\r\n                            callback: (element: AccordionElement) => {\r\n                                let klasse = <any>ae.externalElement;\r\n\r\n                                let workspace: Workspace = element.externalElement;\r\n\r\n                                this.main.networkManager.sendDistributeWorkspace(workspace, klasse, null, (error: string) => {\r\n                                    if (error == null) {\r\n                                        let networkManager = this.main.networkManager;\r\n                                        let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                                        alert(\"Der Workspace \" + workspace.name + \" wurde an die Klasse \" + klasse.name + \" ausgeteilt. Er wird in maximal \" +\r\n                                            dt + \" s bei jedem Schüler ankommen.\");\r\n                                    } else {\r\n                                        alert(error);\r\n                                    }\r\n                                });\r\n\r\n                            }\r\n                        }\r\n                    })\r\n                },\r\n                    {\r\n                        caption: \"An einzelne Schüler/innen austeilen...\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let classes: ClassData[] = this.main.teacherExplorer.classPanel.elements.map(ae => ae.externalElement);\r\n                            let workspace: Workspace = element.externalElement;\r\n                            new DistributeToStudentsDialog(classes, workspace, this.main);\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n    }\r\n\r\n    onHomeButtonClicked() {\r\n        this.main.teacherExplorer.restoreOwnWorkspaces();\r\n        this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.ownUpdateFrequencyInSeconds;\r\n        this.$homeAction.hide();\r\n        this.fileListPanel.enableNewButton(this.main.workspaceList.length > 0);\r\n    }\r\n\r\n    renderFiles(workspace: Workspace) {\r\n\r\n        let name = workspace == null ? \"Kein Workspace vorhanden\" : workspace.name;\r\n\r\n        this.fileListPanel.setCaption(name);\r\n        this.fileListPanel.clear();\r\n\r\n        if (this.main.getCurrentWorkspace() != null) {\r\n            for (let module of this.main.getCurrentWorkspace().moduleStore.getModules(false)) {\r\n                module.file.panelElement = null;\r\n            }\r\n        }\r\n\r\n        if (workspace != null) {\r\n            let moduleList: Module[] = [];\r\n\r\n            for (let m of workspace.moduleStore.getModules(false)) {\r\n                moduleList.push(m);\r\n            }\r\n\r\n            moduleList.sort((a, b) => { return a.file.name > b.file.name ? 1 : a.file.name < b.file.name ? -1 : 0 });\r\n\r\n            for (let m of moduleList) {\r\n\r\n                m.file.panelElement = {\r\n                    name: m.file.name,\r\n                    externalElement: m,\r\n                    isFolder: false,\r\n                    path: []\r\n                };\r\n\r\n                this.fileListPanel.addElement(m.file.panelElement, true);\r\n                this.renderHomeworkButton(m.file);\r\n            }\r\n\r\n            this.fileListPanel.sortElements();\r\n\r\n        }\r\n    }\r\n\r\n    renderWorkspaces(workspaceList: Workspace[]) {\r\n\r\n        this.fileListPanel.clear();\r\n        this.workspaceListPanel.clear();\r\n\r\n        for (let w of workspaceList) {\r\n            let path = w.path.split(\"/\");\r\n            if (path.length == 1 && path[0] == \"\") path = [];\r\n            w.panelElement = {\r\n                name: w.name,\r\n                externalElement: w,\r\n                iconClass: 'workspace',\r\n                isFolder: w.isFolder,\r\n                path: path\r\n            };\r\n\r\n            this.workspaceListPanel.addElement(w.panelElement, false);\r\n            w.renderSettingsButton(w.panelElement);\r\n        }\r\n\r\n        this.workspaceListPanel.sortElements();\r\n        this.fileListPanel.enableNewButton(workspaceList.length > 0);\r\n\r\n\r\n\r\n    }\r\n\r\n    renderErrorCount(workspace: Workspace, errorCountMap: Map<Module, number>) {\r\n        if (errorCountMap == null) return;\r\n        for (let m of workspace.moduleStore.getModules(false)) {\r\n            let errorCount: number = errorCountMap.get(m);\r\n            let errorCountS: string = ((errorCount == null || errorCount == 0) ? \"\" : \"(\" + errorCount + \")\");\r\n\r\n            this.fileListPanel.setTextAfterFilename(m.file.panelElement, errorCountS, 'jo_errorcount');\r\n        }\r\n    }\r\n\r\n    setWorkspaceActive(w: Workspace) {\r\n\r\n        if (w != null) {\r\n            this.fileListPanel.$buttonNew.show();\r\n        }\r\n\r\n        this.workspaceListPanel.select(w, false);\r\n\r\n        let callback = (error: string) => {this.initializeDatabaseTool(error, w)};\r\n\r\n        if (w.database == null) {\r\n            this.main.waitOverlay.show(\"Bitte warten, hole Datenbank vom Server ...\");\r\n\r\n            this.main.networkManager.fetchDatabase(w, callback);\r\n        } else {\r\n            callback(null);\r\n        }\r\n\r\n    }\r\n\r\n    initializeDatabaseTool(error: string, w: Workspace) {\r\n        if (error != null) {\r\n            alert(error);\r\n            return;\r\n        }\r\n\r\n        let dbTool = this.main.getDatabaseTool();\r\n\r\n        let statements: string[] = w.database.statements;\r\n        if (statements == null) statements = [];\r\n\r\n        dbTool.initializeWorker(w.database.templateDump, statements,\r\n            () => {\r\n                this.main.currentWorkspace = w;\r\n\r\n                if (this.main.user.id == w.owner_id) {\r\n                    this.main.user.currentWorkspace_id = w.id;\r\n                }\r\n\r\n                this.renderFiles(w);\r\n\r\n                if (w != null) {\r\n                    let nonSystemModules = w.moduleStore.getModules(false);\r\n\r\n                    if (w.currentlyOpenModule != null) {\r\n                        this.setModuleActive(w.currentlyOpenModule);\r\n                    } else if (nonSystemModules.length > 0) {\r\n                        this.setModuleActive(nonSystemModules[0]);\r\n                    } else {\r\n                        this.setModuleActive(null);\r\n                    }\r\n\r\n                    for (let m of nonSystemModules) {\r\n                        m.file.dirty = true;\r\n                    }\r\n\r\n                    if (nonSystemModules.length == 0) {\r\n\r\n                        Helper.showHelper(\"newSQLFileHelper\", this.main, this.fileListPanel.$captionElement);\r\n\r\n                    }\r\n\r\n                    this.main.notifier.connect(w);\r\n\r\n                } else {\r\n                    this.setModuleActive(null);\r\n                }\r\n\r\n            },\r\n            () => {\r\n                this.main.databaseExplorer.refreshAfterRetrievingDBStructure();\r\n                this.main.getHistoryViewer().clearAndShowStatements(w.database.statements);\r\n            });\r\n\r\n    }\r\n\r\n    writeEditorTextToFile() {\r\n        let cem = this.getCurrentlyEditedModule();\r\n        if (cem != null)\r\n            cem.file.text = cem.getProgramTextFromMonacoModel(); // 29.03. this.main.monaco.getValue();\r\n    }\r\n\r\n\r\n    lastOpenModule: Module = null;\r\n    setModuleActive(m: Module) {\r\n\r\n        this.main.bottomDiv.homeworkManager.hideRevision();\r\n\r\n        if (this.lastOpenModule != null) {\r\n            this.lastOpenModule.file.text = this.lastOpenModule.getProgramTextFromMonacoModel(); // this.main.monaco.getValue();\r\n            this.lastOpenModule.editorState = this.main.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (m == null) {\r\n            this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n        } else {\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.main.getMonacoEditor().setModel(m.model);\r\n            if (this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(m.bracketError);\r\n\r\n            if (m.file.text_before_revision != null) {\r\n                this.main.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n            } else {\r\n                this.main.bottomDiv.homeworkManager.hideHomeworkRevisionButton();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setActiveAfterExternalModelSet(m: Module) {\r\n        this.fileListPanel.select(m, false);\r\n\r\n        this.lastOpenModule = m;\r\n\r\n        if (m.editorState != null) {\r\n            this.main.editor.dontPushNextCursorMove++;\r\n            this.main.getMonacoEditor().restoreViewState(m.editorState);\r\n            this.main.editor.dontPushNextCursorMove--;\r\n        }\r\n\r\n        this.setCurrentlyEditedModule(m);\r\n\r\n        this.showProgramPointer();\r\n\r\n        setTimeout(() => {\r\n            if (!this.main.getMonacoEditor().getOptions().get(monaco.editor.EditorOption.readOnly)) {\r\n                this.main.getMonacoEditor().focus();\r\n            }\r\n        }, 300);\r\n\r\n    }\r\n\r\n\r\n    private showProgramPointer() {\r\n\r\n        if (this.programPointerModule == this.getCurrentlyEditedModule() && this.getCurrentlyEditedModule() != null) {\r\n            let position = this.programPointerPosition;\r\n            let range = {\r\n                startColumn: position.column, startLineNumber: position.line,\r\n                endColumn: position.column + position.length, endLineNumber: position.line\r\n            };\r\n\r\n            this.main.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n            this.programPointerDecoration = this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n                {\r\n                    range: range,\r\n                    options: {\r\n                        className: 'jo_revealProgramPointer', isWholeLine: true,\r\n                        overviewRuler: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.OverviewRulerLane.Center\r\n                        },\r\n                        minimap: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    range: range,\r\n                    options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n                }\r\n            ]);\r\n\r\n        }\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        // console statement execution:\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        let module = this.main.currentWorkspace.moduleStore.findModuleByFile(file);\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        this.programPointerModule = module;\r\n        this.programPointerPosition = position;\r\n\r\n        if (module != this.getCurrentlyEditedModule()) {\r\n            this.setModuleActive(module);\r\n        } else {\r\n            this.showProgramPointer();\r\n        }\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws == null) return null;\r\n\r\n        return ws.currentlyOpenModule;\r\n    }\r\n\r\n    setCurrentlyEditedModule(m: Module) {\r\n        if (m == null) return;\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws.currentlyOpenModule != m) {\r\n            ws.currentlyOpenModule = m;\r\n            ws.saved = false;\r\n            m.file.dirty = true;\r\n        }\r\n    }\r\n\r\n    setExplorerColor(color: string) {\r\n        let caption: string;\r\n\r\n        if (color == null) {\r\n            color = \"transparent\";\r\n            caption = \"Meine Datenbanken\";\r\n        } else {\r\n            caption = \"Schüler-DB\";\r\n        }\r\n\r\n        this.fileListPanel.$listElement.parent().css('background-color', color);\r\n        this.workspaceListPanel.$listElement.parent().css('background-color', color);\r\n\r\n        this.workspaceListPanel.setCaption(caption);\r\n    }\r\n\r\n    getNewModule(file: File): Module {\r\n        return new Module(file, this.main);\r\n    }\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class RightDiv {\r\n\r\n    isWholePage: boolean = false;\r\n\r\n    $tabs: JQuery<HTMLElement>;\r\n    $headings: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $rightDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$tabs = $rightDiv.find('.jo_tabs');\r\n        this.$headings = $rightDiv.find('.jo_tabheadings');\r\n        \r\n        let withClassDiagram = this.$headings.find('.jo_classDiagramTabHeading').length > 0;\r\n        let withObjectDiagram = this.$headings.find('.jo_objectDiagramTabHeading').length > 0;\r\n\r\n        let that = this;\r\n        let rightdiv_width: string = \"100%\";\r\n        $rightDiv.find('.jo_whole-window').on(\"click\", () => {\r\n\r\n            that.isWholePage = !that.isWholePage;\r\n            \r\n            let $wholeWindow = jQuery('.jo_whole-window');\r\n\r\n            if (!that.isWholePage) {\r\n                jQuery('#code').css('display', 'flex');\r\n                jQuery('#rightdiv').css('width', rightdiv_width);\r\n                // jQuery('#run').css('width', '');\r\n                $wholeWindow.removeClass('img_whole-window-back');\r\n                $wholeWindow.addClass('img_whole-window');\r\n                jQuery('#controls').insertAfter(jQuery('#view-mode'));\r\n                $wholeWindow.attr('title', 'Auf Fenstergröße vergrößern');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            } else {\r\n                jQuery('#code').css('display', 'none');\r\n                rightdiv_width = jQuery('#rightdiv').css('width');\r\n                jQuery('#rightdiv').css('width', '100%');\r\n                $wholeWindow.removeClass('img_whole-window');\r\n                $wholeWindow.addClass('img_whole-window-back');\r\n                // that.adjustWidthToWorld();\r\n                jQuery('.jo_control-container').append(jQuery('#controls'));\r\n                $wholeWindow.attr('title', 'Auf normale Größe zurückführen');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$rightDiv);\r\n    }\r\n\r\n\r\n\r\n}","import { jo_mouseDetected } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\nexport class Sliders {\r\n\r\n    main: Main;\r\n\r\n    constructor(main: Main) {\r\n        this.main = main;\r\n    }\r\n\r\n    initSliders() {\r\n        let that = this;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        jQuery('#slider1').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider1\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                \r\n                that.moveLeftPanel(dx);\r\n\r\n                x = mm.clientX;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider1\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider1\");\r\n                jQuery(document).off(mousePointer + \"up.slider1\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider2').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider2\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n\r\n                that.moveBottomDiv(dy);\r\n\r\n                y = mm.clientY;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider2\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider2\");\r\n                jQuery(document).off(mousePointer + \"up.slider2\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider3').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider3\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n\r\n                that.moveRightDiv(dx);\r\n\r\n                x = mm.clientX;\r\n                mm.stopPropagation();\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider3\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider3\");\r\n                jQuery(document).off(mousePointer + \"up.slider3\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        let sliderknobLeft = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"left: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobLeft);\r\n        sliderknobLeft.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopImmediatePropagation();\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobleft\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopImmediatePropagation();\r\n\r\n                that.moveLeftPanel(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobleft\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobleft\");\r\n                jQuery(document).off(mousePointer + \"up.knobleft\");\r\n            });\r\n\r\n        });\r\n\r\n        let sliderknobRight = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"right: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobRight);\r\n        sliderknobRight.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopImmediatePropagation();\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobright\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopImmediatePropagation();\r\n\r\n                that.moveRightDiv(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobright\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobright\");\r\n                jQuery(document).off(mousePointer + \"up.knobright\");\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n    \r\n    moveRightDiv(dx: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $rightDiv = jQuery('#rightdiv');\r\n\r\n        let width = Number.parseInt($rightDiv.css('width').replace('px', ''));\r\n        $rightDiv.css('width', (width - dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth + dx) + \"px\");\r\n        \r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n        jQuery('.jo_graphics').trigger('sizeChanged');\r\n        width += dx;\r\n}\r\n    moveBottomDiv(dy: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $bottomDiv = jQuery('#bottomdiv-outer');\r\n\r\n        let height = Number.parseInt($bottomDiv.css('height').replace('px', ''));\r\n        $bottomDiv.css('height', (height - dy) + \"px\");\r\n\r\n        let meheight = Number.parseInt($editor.css('height').replace('px', ''));\r\n        $editor.css('height', (meheight + dy) + \"px\");\r\n\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n}\r\n\r\n    moveLeftPanel(dx: number) {\r\n        let $leftPanel = jQuery('#leftpanel');\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n\r\n        let width = Number.parseInt($leftPanel.css('width').replace('px', ''));\r\n        $leftPanel.css('width', (width + dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth - dx) + \"px\");\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionPanel, AccordionElement } from \"./Accordion.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassData, UserData, CRUDUserRequest, CRUDClassRequest, GetWorkspacesResponse, GetWorkspacesRequest, Workspaces } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\nexport class TeacherExplorer {\r\n\r\n    studentPanel: AccordionPanel;\r\n    classPanel: AccordionPanel;\r\n\r\n    // save them here when displaying pupils workspaces:\r\n    ownWorkspaces: Workspace[];\r\n    currentOwnWorkspace: Workspace;\r\n\r\n    constructor(private main: Main, private classData: ClassData[]) {\r\n\r\n    }\r\n\r\n    removePanels() {\r\n        this.classPanel.remove();\r\n        this.studentPanel.remove();\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.initStudentPanel();\r\n\r\n        this.initClassPanel();\r\n\r\n        this.renderClasses(this.classData);\r\n\r\n    }\r\n\r\n    initStudentPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.studentPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Schüler/innen\", \"2\", null,\r\n            \"\", \"student\", false, false, \"student\", false, []);\r\n\r\n        this.studentPanel.selectCallback = (ae: UserData) => {\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let request: GetWorkspacesRequest = {\r\n                    ws_userId: ae.id,\r\n                    userId: this.main.user.id,\r\n                    language: 1\r\n                }\r\n\r\n                ajax(\"getWorkspaces\", request, (response: GetWorkspacesResponse) => {\r\n                    if (response.success == true) {\r\n\r\n                        if (that.main.workspacesOwnerId == that.main.user.id) {\r\n                            that.ownWorkspaces = that.main.workspaceList.slice();\r\n                            that.currentOwnWorkspace = that.main.currentWorkspace;\r\n                        }\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces);\r\n                        that.main.workspacesOwnerId = ae.id;\r\n                        that.main.projectExplorer.setExplorerColor(\"rgba(255, 0, 0, 0.2\");\r\n                        that.main.projectExplorer.$homeAction.show();\r\n                        Helper.showHelper(\"homeButtonHelper\", this.main);\r\n\r\n                        that.main.bottomDiv.showHomeworkTab();\r\n                        that.main.bottomDiv.homeworkManager.attachToWorkspaces(that.main.workspaceList);\r\n                    }\r\n\r\n                    this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n                    this.main.networkManager.secondsTillNextUpdate = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    restoreOwnWorkspaces() {\r\n        let main = this.main;\r\n\r\n        // main.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n        main.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        main.workspaceList = this.ownWorkspaces;\r\n        main.currentWorkspace = this.currentOwnWorkspace;\r\n        main.workspacesOwnerId = main.user.id;\r\n        main.projectExplorer.setExplorerColor(null);\r\n\r\n        main.projectExplorer.renderWorkspaces(main.workspaceList);\r\n\r\n        if (main.currentWorkspace == null && main.workspaceList.length > 0) {\r\n            main.currentWorkspace = main.workspaceList[0];\r\n        }\r\n\r\n        if (main.currentWorkspace != null) {\r\n            main.projectExplorer.setWorkspaceActive(main.currentWorkspace);\r\n        }\r\n\r\n        this.studentPanel.select(null, false);\r\n\r\n    }\r\n\r\n    initClassPanel() {\r\n        let that = this;\r\n\r\n        this.classPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Klassen\", \"1\", null, \"\", \"class\", false, false, \"class\", false, []);\r\n\r\n        this.classPanel.selectCallback = (ea) => {\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let classData = <ClassData>ea;\r\n                if (classData != null) {\r\n                    this.renderStudents(classData.students);\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    renderStudents(userDataList: UserData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        userDataList.sort((a, b) => {\r\n            if (a.familienname > b.familienname) return 1;\r\n            if (b.familienname > a.familienname) return -1;\r\n            if (a.rufname > b.rufname) return 1;\r\n            if (b.rufname > a.rufname) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let ud of userDataList) {\r\n            let ae: AccordionElement = {\r\n                name: ud.familienname + \", \" + ud.rufname,\r\n                sortName: ud.familienname + \" \" + ud.rufname,\r\n                externalElement: ud,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.studentPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n    renderClasses(classDataList: ClassData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        classDataList.sort((a, b) => {\r\n            if (a.name > b.name) return 1;\r\n            if (b.name > a.name) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let cd of classDataList) {\r\n            let ae: AccordionElement = {\r\n                name: cd.name,\r\n                externalElement: cd,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.classPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { openContextMenu, ContextMenuItem } from \"../../tools/HtmlTools.js\";\r\nimport { Dialog } from \"./Dialog.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\n\r\nexport class UserMenu {\r\n\r\n\r\n\r\n    constructor(private main: Main){\r\n        \r\n    }\r\n\r\n    init(){\r\n        let $userSettingsButton = jQuery('#buttonUserSettings');\r\n        let that = this;\r\n\r\n        // $userSettingsButton.on(\"click\", (e) => {\r\n\r\n        //     let contextMenuItems: ContextMenuItem[] = [\r\n        //         {\r\n        //             caption: \"Passwort ändern...\",\r\n        //             callback: () => {\r\n        //                 let passwortChanger = new PasswordChanger(that.main);\r\n        //                 passwortChanger.show();\r\n        //             }\r\n        //         }\r\n        //     ]\r\n\r\n\r\n        //     openContextMenu(contextMenuItems, $userSettingsButton.offset().left, $userSettingsButton.offset().top + $userSettingsButton.height());\r\n\r\n        // });\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class PasswordChanger {\r\n\r\n    dialog: Dialog;\r\n\r\n    constructor(private main: Main){\r\n\r\n        this.dialog = new Dialog();\r\n\r\n    }\r\n\r\n    show() {\r\n        this.dialog.init();\r\n        this.dialog.heading(\"Passwort ändern\");\r\n        this.dialog.description(\"Bitte geben Sie Ihr bisheriges Passwort und darunter zweimal Ihr neues Passwort ein. <br>\" + \r\n        \"Das Passwort muss mindestens 8 Zeichen lang sein und sowohl Buchstaben als auch Zahlen oder Sonderzeichen enthalten.\")\r\n        let $oldPassword = this.dialog.input(\"password\", \"Altes Passwort\");\r\n        let $newPassword1 = this.dialog.input(\"password\", \"Neues Passwort\");\r\n        let $newPassword2 = this.dialog.input(\"password\", \"Neues Passwort wiederholen\");\r\n        let $errorDiv = this.dialog.description(\"\", \"red\");\r\n        let waitDiv = this.dialog.waitMessage(\"Bitte warten...\")\r\n\r\n        this.dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {this.dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    if($newPassword1.val() != $newPassword2.val()){\r\n                        $errorDiv.text(\"Die zwei eingegebenen neuen Passwörter stimmen nicht überein.\")\r\n                    } else {\r\n                        waitDiv(true);\r\n                        ajax(\"changePassword\", {oldPassword: $oldPassword.val(), newPassword: $newPassword1.val()}, () => {\r\n                            waitDiv(false);\r\n                            alert(\"Das Passwort wurde erfolgreich geändert.\");\r\n                            this.dialog.close();\r\n                        }, (message) => {\r\n                            waitDiv(false);\r\n                            $errorDiv.text(message)\r\n                        })\r\n                    }\r\n\r\n                }\r\n            },\r\n        ])\r\n    }\r\n\r\n}","import { ajax } from \"../communication/AjaxHelper.js\";\r\nimport { LoginRequest, LoginResponse, LogoutRequest, UserData } from \"../communication/Data.js\";\r\nimport { Main } from \"./Main.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { userInfo } from \"os\";\r\nimport { UserMenu } from \"./gui/UserMenu.js\";\r\nimport { escapeHtml } from \"../tools/StringTools.js\";\r\n\r\nexport class Login {\r\n\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        let that = this;\r\n\r\n        let $loginSpinner = jQuery('#login-spinner>img');\r\n\r\n        jQuery('#login-username').focus();\r\n\r\n        jQuery('#login-username').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-password').focus();\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-button').focus();\r\n                jQuery('#login-button').addClass('jo_active');\r\n            }\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-button').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-username').focus();\r\n                jQuery('#login-button').removeClass('jo_active');\r\n            } else {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        // Avoid double login when user does doubleclick:\r\n        let loginHappened = false;\r\n        jQuery('#login-button').on('click', () => {\r\n\r\n            $loginSpinner.show();\r\n\r\n            if (loginHappened) return;\r\n            loginHappened = true;\r\n\r\n            setTimeout(() => {\r\n                loginHappened = false;\r\n            }, 1000);\r\n\r\n            let loginRequest: LoginRequest = {\r\n                username: <string>jQuery('#login-username').val(),\r\n                password: <string>jQuery('#login-password').val(),\r\n                language: 1\r\n            }\r\n\r\n            ajax('login', loginRequest, (response: LoginResponse) => {\r\n\r\n                if (!response.success) {\r\n                    jQuery('#login-message').html('Fehler: Benutzername und/oder Passwort ist falsch.');\r\n                } else {\r\n\r\n                    // We don't do this anymore for security reasons - see AjaxHelper.ts\r\n                    // Alternatively we now set a long expiry interval for cookie.\r\n                    // credentials.username = loginRequest.username;\r\n                    // credentials.password = loginRequest.password;\r\n\r\n                    jQuery('#login').hide();\r\n\r\n                    this.main.waitOverlay.show('Bitte warten...');\r\n\r\n                    let user: UserData = response.user;\r\n                    if (user.settings == null || user.settings.helperHistory == null) {\r\n                        user.settings = {\r\n                            helperHistory: {\r\n                            },\r\n                            viewModes: null,\r\n                            classDiagram: null\r\n                        }\r\n                    }\r\n\r\n                    this.main.waitForGUICallback = () => {\r\n\r\n                        that.main.mainMenu.initGUI(user);\r\n\r\n                        that.main.waitOverlay.hide();\r\n                        $loginSpinner.hide();\r\n                        jQuery('#menupanel-username').html(escapeHtml(user.rufname) + \" \" + escapeHtml(user.familienname));\r\n\r\n                        new UserMenu(that.main).init();\r\n\r\n                        if (user.is_teacher) {\r\n                            that.main.initTeacherExplorer(response.classdata);\r\n                        }\r\n\r\n                        that.main.user = user;\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces);\r\n                        that.main.workspacesOwnerId = user.id;\r\n\r\n                        that.main.networkManager.initializeTimer();\r\n\r\n                        that.main.projectExplorer.fileListPanel.setFixed(!user.is_teacher);\r\n                        that.main.projectExplorer.workspaceListPanel.setFixed(!user.is_teacher);\r\n\r\n                        that.main.viewModeController.initViewMode();\r\n                        that.main.bottomDiv.hideHomeworkTab();\r\n\r\n                        that.main.networkManager.initializeNotifierClient();\r\n\r\n                    }\r\n\r\n                    if (this.main.startupComplete == 0) {\r\n                        this.main.waitForGUICallback();\r\n                        this.main.waitForGUICallback = null;\r\n                    }\r\n\r\n                }\r\n\r\n            }, (errorMessage: string) => {\r\n                jQuery('#login-message').html('Login gescheitert: ' + errorMessage);\r\n                jQuery('#login-spinner>img').hide();\r\n            }\r\n            );\r\n\r\n        });\r\n\r\n        jQuery('#buttonLogout').on('click', () => {\r\n\r\n            this.main.waitOverlay.show('Bitte warten, der letzte Bearbeitungsstand wird noch gespeichert ...');\r\n\r\n            if (this.main.workspacesOwnerId != this.main.user.id) {\r\n                this.main.projectExplorer.onHomeButtonClicked();\r\n            }\r\n\r\n            this.main.networkManager.sendUpdates(() => {\r\n\r\n                let logoutRequest: LogoutRequest = {\r\n                    currentWorkspaceId: this.main.currentWorkspace?.id\r\n                }\r\n\r\n                ajax('logout', logoutRequest, () => {\r\n                    // window.location.href = 'index.html';\r\n                    this.main.networkManager.sendUpdateUserSettings(() => {});\r\n\r\n                    jQuery('#login').show();\r\n                    this.main.waitOverlay.hide();\r\n                    jQuery('#login-message').empty();\r\n                    this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"\", \"myJava\"));\r\n                    this.main.projectExplorer.fileListPanel.clear();\r\n                    this.main.projectExplorer.workspaceListPanel.clear();\r\n\r\n                    this.main.databaseExplorer.clear();\r\n                    this.main.resultsetPresenter.clear();\r\n\r\n                    if (this.main.user.is_teacher) {\r\n                        this.main.teacherExplorer.removePanels();\r\n                        this.main.teacherExplorer = null;\r\n                    }\r\n\r\n\r\n                    this.main.currentWorkspace = null;\r\n                    this.main.user = null;\r\n\r\n\r\n                });\r\n            }, true);\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\nimport { ViewModes, ViewMode } from \"../../communication/Data\";\r\n\r\nexport class ViewModeController {\r\n\r\n    $buttonEditorFullscreen: JQuery<HTMLElement>;\r\n    $buttonPresentationMode: JQuery<HTMLElement>;\r\n    $buttonMonitorMode: JQuery<HTMLElement>;\r\n\r\n    $buttonMap: { [key: string]: JQuery<HTMLElement> } = {};\r\n\r\n    highContrast: boolean = false;\r\n    editorHasFullWidth: boolean = false;\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private main: Main) {\r\n\r\n        this.$buttonEditorFullscreen = jQuery('<div title=\"Editor in voller Breite\" class=\"img_whole-window jo_button jo_active\" style=\"padding: 1px; margin-right: 20px\"></div>');\r\n        this.$buttonPresentationMode = jQuery('<div title=\"Präsentation (Beamer)\" class=\"img_presentation-mode jo_button jo_active\" syle=\"padding: 1px\"></div>');\r\n        this.$buttonMonitorMode = jQuery('<div title=\"Monitor\" class=\"img_monitor-mode jo_button jo_active\" style=\"margin-left: 5px; padding: 1px\"></div>');\r\n        $buttonsContainer.append(this.$buttonEditorFullscreen, this.$buttonPresentationMode, this.$buttonMonitorMode);\r\n\r\n        this.$buttonMap = {\r\n            \"presentation\": this.$buttonPresentationMode,\r\n            \"monitor\": this.$buttonMonitorMode\r\n        };\r\n\r\n        let am = this.main.actionManager;\r\n\r\n        am.registerAction(\"editor.fullwidth\", [],\r\n            () => {\r\n                this.toggleEditorFullwidth();\r\n            }, \"Editor auf die volle Breite erweitern\", this.$buttonEditorFullscreen);\r\n\r\n        am.registerAction(\"viewmode.presentation\", [],\r\n            () => {\r\n                this.setMode(\"presentation\");\r\n            }, \"Präsentationsansicht\", this.$buttonPresentationMode);\r\n\r\n        am.registerAction(\"viewmode.monitor\", [],\r\n            () => {\r\n                this.setMode(\"monitor\");\r\n            }, \"Monitoransicht\", this.$buttonMonitorMode);\r\n\r\n    }\r\n\r\n    toggleEditorFullwidth() {\r\n        if(this.editorHasFullWidth){\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in voller Breite');\r\n            jQuery('#rightdiv').show(600);\r\n            jQuery('#leftpanel').show(600);\r\n            jQuery('#controls').show();\r\n        } else {\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in normaler Breite');\r\n            jQuery('#rightdiv').hide(600);\r\n            jQuery('#leftpanel').hide(600);\r\n            jQuery('#controls').hide();\r\n        }\r\n\r\n        setTimeout(()=>{\r\n            this.main.getMonacoEditor().layout();\r\n        }, 800);\r\n\r\n        this.editorHasFullWidth = !this.editorHasFullWidth;\r\n    }\r\n\r\n    setMode(mode: \"presentation\" | \"monitor\", saveSettings: boolean = true) {\r\n\r\n        let otherMode = mode == \"presentation\" ? \"monitor\" : \"presentation\";\r\n\r\n        this.$buttonMap[mode].addClass(\"jo_pressed\");\r\n        this.$buttonMap[otherMode].removeClass(\"jo_pressed\");\r\n\r\n        let settings = this.main.user.settings;\r\n        let viewModes = settings.viewModes;\r\n\r\n        let viewMode = viewModes[mode];\r\n        viewModes.viewModeChosen = mode;\r\n\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n\r\n        this.main.editor.setFontSize(viewMode.fontSize);\r\n\r\n        if (this.highContrast != viewMode.highContrast) {\r\n            let editor = this.main.getMonacoEditor();\r\n            editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n            this.highContrast = !this.highContrast;\r\n        }\r\n\r\n        if (saveSettings) this.saveSettings();\r\n\r\n    }\r\n\r\n    saveFontSize(fontSizePx: number) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.fontSize = fontSizePx;\r\n        this.saveSettings();\r\n    }\r\n\r\n    setTheme(theme: string) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.theme = theme;\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n        this.saveSettings();\r\n    }\r\n\r\n    toggleHighContrast() {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.highContrast = !viewMode.highContrast;\r\n        let editor = this.main.getMonacoEditor();\r\n        editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n        this.saveSettings();\r\n    }\r\n\r\n    getChosenViewMode(): ViewMode {\r\n        let viewModes = this.main.user.settings.viewModes;\r\n        return viewModes[viewModes.viewModeChosen];\r\n    }\r\n\r\n    saveSettings() {\r\n        this.main.userDataDirty = true;\r\n    }\r\n\r\n    initViewMode() {\r\n        let settings = this.main.user.settings;\r\n\r\n        if (settings[\"viewModes\"] == null) {\r\n            settings[\"viewModes\"] = {\r\n                monitor: null,\r\n                presentation: null,\r\n                viewModeChosen: \"monitor\"\r\n            }\r\n        }\r\n\r\n        if (settings.viewModes.monitor == null) {\r\n            settings.viewModes.monitor = {\r\n                fontSize: 14,\r\n                highContrast: false,\r\n                theme: \"dark\"\r\n            };\r\n\r\n            settings.viewModes.presentation = {\r\n                fontSize: 18,\r\n                highContrast: false,\r\n                theme: \"light\"\r\n            }\r\n            this.saveSettings();\r\n        }\r\n        this.setMode(settings.viewModes.viewModeChosen, false);\r\n    }\r\n\r\n\r\n}","import { Main } from \"../../main/Main.js\";\r\nimport { TextPosition } from \"../lexer/Token\";\r\nimport { Module } from \"./Module\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype SemicolonPosition = {\r\n    position: TextPosition;\r\n    module: Module;\r\n    firstSeenMs: number;\r\n    isThereAgain: boolean;\r\n}\r\n\r\nexport class SemicolonAngel {\r\n    \r\n    semicolonPositions: SemicolonPosition[] = [];\r\n    time: number;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    startRegistering(){\r\n        this.semicolonPositions.forEach(p => p.isThereAgain = false);\r\n        this.time = new Date().getTime();\r\n    }\r\n\r\n    register(position: TextPosition, module: Module){\r\n        let oldEvidence = this.semicolonPositions.find(p => p.position.line == position.line && p.position.column == position.column);\r\n        if(oldEvidence){\r\n            oldEvidence.isThereAgain = true;\r\n        } else {\r\n            this.semicolonPositions.push({position: position, firstSeenMs: this.time, isThereAgain: true, module: module});\r\n        }\r\n    }\r\n\r\n    healSemicolons(){\r\n        let time = new Date().getTime();\r\n        this.semicolonPositions = this.semicolonPositions.filter(p => p.isThereAgain);\r\n\r\n        let currentlyEditedModule = this.main.getCurrentlyEditedModule();\r\n        let cursorLine = this.main.getMonacoEditor().getPosition().lineNumber;\r\n\r\n        this.semicolonPositions.filter(p => time - p.firstSeenMs > 2000).forEach(p => {\r\n\r\n            let isCurrentModule = p.module.file.id != null && p.module.file.id == currentlyEditedModule.file.id;\r\n\r\n            let editOperations: monaco.editor.IIdentifiedSingleEditOperation[] = [\r\n                {\r\n                    range: new monaco.Range(p.position.line, p.position.column, p.position.line, p.position.column),\r\n                    text: \";\",\r\n                    forceMoveMarkers: true\r\n                }\r\n            ]\r\n\r\n            if(isCurrentModule){\r\n                if(Math.abs(cursorLine - p.position.line) > 1){\r\n                    let editor = this.main.getMonacoEditor();\r\n                    const selection = editor.getSelection();\r\n                    editor.executeEdits('Semicolon-Angel', editOperations);\r\n                    editor.setSelection(selection);\r\n                    this.semicolonPositions.splice(this.semicolonPositions.indexOf(p), 1);\r\n                }\r\n            } \r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\r\nimport { Table, Column } from \"../../compiler/parser/SQLTable.js\";\r\nimport { DatabaseStructure } from \"../../tools/DatabaseTools.js\";\r\n\r\nexport class DatabaseExplorer {\r\n\r\n    collapsedTables: Map<string, boolean> = new Map();\r\n\r\n    constructor(private main: MainBase, public $mainDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    refresh() {\r\n\r\n        let dbTool = this.main.getDatabaseTool();\r\n\r\n        dbTool.retrieveDatabaseStructure((dbstructure: DatabaseStructure) => {\r\n\r\n            this.refreshAfterRetrievingDBStructure();\r\n        });\r\n\r\n    }\r\n\r\n    clear(){\r\n        this.$mainDiv.empty();\r\n    }\r\n\r\n    refreshAfterRetrievingDBStructure() {\r\n        let dbTool = this.main.getDatabaseTool();\r\n        let workspace = this.main.getCurrentWorkspace();\r\n        if (workspace != null) {\r\n            for (let m of workspace.moduleStore.getModules(false)) {\r\n                m.file.dirty = true;\r\n            }\r\n        }\r\n\r\n        let tables = Table.fromTableStructureList(dbTool.databaseStructure.tables);\r\n\r\n        this.$mainDiv.empty();\r\n\r\n        for (let table of tables) {\r\n            if(table.identifier != \"sqlite_sequence\"){\r\n                let $table = this.renderTable(table);\r\n                this.$mainDiv.append($table);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    renderTable(table: Table): JQuery<HTMLElement> {\r\n        let isCollapsed = this.collapsedTables.get(table.identifier) != null;\r\n\r\n        let $table = jQuery(\r\n            `<div class=\"jo_table\">\r\n           <div class=\"jo_tableheader\">\r\n              <div class=\"${isCollapsed ? 'img_tree-collapsed-dark' : 'img_tree-expanded-dark'} jo_treeswitch jo_button jo_active\"></div>\r\n              <div class=\"jo_tableheaderlink\">\r\n                <div class=\"img_table\"></div>\r\n                <div>${table.identifier}</div></div><div class=\"jo_tablesize\">(${table.size}&nbsp;Datensätze)</div>\r\n              </div>\r\n            </div>\r\n        </div>`);\r\n\r\n        $table.find('.jo_tableheader').on('pointerup', () => {\r\n            this.main.getResultsetPresenter().showTable(table.identifier);\r\n\r\n        })\r\n\r\n        let $columns = jQuery('<div class=\"jo_columnlist\"></div>')\r\n\r\n        for (let column of table.columns) {\r\n            let image = column.isPrimaryKey ? \"img_key\" : \"img_column\";\r\n\r\n            let referencesHtml = \"\";\r\n            if (column.references != null) {\r\n                referencesHtml = `<div class=\"img_foreign_key\" style=\"margin-left: 5px\"></div><div class=\"jo_references\">${column.references.table.identifier}.${column.references.identifier}</div>`\r\n            }\r\n\r\n            let type = column.type == null ? \"\" : column.type.toString();\r\n            let notNull: string = column.notNull ? '<div class=\"jo_dbnotnull\">not null</div>' : \"\";\r\n            let defaultValue: string = column.defaultValue ? `<div class=\"jo_dbdefault\">default ${column.defaultValue}</div>` : \"\";\r\n            let autoincrement: string = column.isAutoIncrement ? `<div class=\"jo_dbautoincrement\">autoincrement</div>` : \"\";\r\n\r\n            let $column = jQuery(`\r\n            <div class=\"jo_column\">\r\n                <div class=\"${image}\"></div>\r\n                <div>${column.identifier}</div>\r\n                <div class=\"jo_dbtype\">${type}</div>\r\n                ${autoincrement}\r\n                ${referencesHtml}\r\n                ${notNull}\r\n                ${defaultValue}\r\n            </div>\r\n            `);\r\n            $columns.append($column);\r\n        }\r\n\r\n        $table.append($columns);\r\n\r\n        let $treeSwitch = $table.find('.jo_treeswitch');\r\n        let that = this;\r\n        $treeSwitch.on('pointerup', (e) => {\r\n            e.stopPropagation();\r\n            let $columnList = $treeSwitch.parents('.jo_table').find('.jo_columnlist');\r\n            let collapsed = $treeSwitch.hasClass('img_tree-collapsed-dark');\r\n            if (collapsed) {\r\n                $treeSwitch.removeClass('img_tree-collapsed-dark');\r\n                $treeSwitch.addClass('img_tree-expanded-dark');\r\n                $columnList.slideDown(300);\r\n                that.collapsedTables.delete(table.identifier);\r\n            } else {\r\n                $treeSwitch.removeClass('img_tree-expanded-dark');\r\n                $treeSwitch.addClass('img_tree-collapsed-dark');\r\n                $columnList.slideUp(300);\r\n                that.collapsedTables.set(table.identifier, true);\r\n            }\r\n        });\r\n\r\n        return $table;\r\n    }\r\n\r\n\r\n\r\n}","// <div id=\"controls\">\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n// </div>\r\n\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { ResultsetPresenter } from \"./ResultsetPresenter.js\";\r\n\r\n\r\nexport class ProgramControlButtons {\r\n\r\n    $buttonStart: JQuery<HTMLElement>;\r\n    $buttonRollback: JQuery<HTMLElement>;\r\n    // $buttonPause: JQuery<HTMLElement>;\r\n    // $buttonStop: JQuery<HTMLElement>;\r\n    // $buttonStepOver: JQuery<HTMLElement>;\r\n    // $buttonStepInto: JQuery<HTMLElement>;\r\n    // $buttonStepOut: JQuery<HTMLElement>;\r\n    // $buttonRestart: JQuery<HTMLElement>;\r\n\r\n    // $buttonEdit: JQuery<HTMLElement>;\r\n\r\n\r\n    constructor(private main: MainBase, private $buttonsContainer: JQuery<HTMLElement>) {\r\n\r\n        this.$buttonStart = jQuery('<div title=\"Start\" class=\"img_start-dark jo_button\"></div>');\r\n        this.$buttonRollback = jQuery('<div title=\"Rollback\" class=\"img_undo jo_button\"></div>');\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        am.registerAction(\"execute\", ['Strg + Enter'],\r\n            () => {\r\n                if (am.isActive(\"execute\")) {\r\n\r\n                    this.main.getResultsetPresenter().executeSelectedStatements();\r\n                }\r\n\r\n            }, \"SQL-Statement ausführen\", this.$buttonStart\r\n        );\r\n\r\n        am.setActive('execute',false);\r\n\r\n        am.registerAction(\"rollback\", ['Strg + LeftArrow'],\r\n            () => {\r\n                if (am.isActive(\"rollback\")) {\r\n\r\n                    this.main.getHistoryViewer().rollback();\r\n                }\r\n\r\n            }, \"Letztes schreibendes SQL-Statement rückgängig machen\", this.$buttonRollback\r\n        );\r\n\r\n        am.setActive('rollback',false);\r\n\r\n        // this.$buttonPause = jQuery('<div title=\"Pause\" class=\"img_pause-dark jo_button\"></div>');\r\n        // this.$buttonStop = jQuery('<div title=\"Stop\" class=\"img_stop-dark jo_button\"></div>');\r\n        // this.$buttonStepOver = jQuery('<div title=\"Step over\" class=\"img_step-over-dark jo_button\"></div>');\r\n        // this.$buttonStepInto = jQuery('<div title=\"Step into\" class=\"img_step-into-dark jo_button\"></div>');\r\n        // this.$buttonStepOut = jQuery('<div title=\"Step out\" class=\"img_step-out-dark jo_button\"></div>');\r\n        // this.$buttonRestart = jQuery('<div title=\"Restart\" class=\"img_restart-dark jo_button\"></div>');\r\n\r\n        // this.$buttonEdit = jQuery('<div class=\"jo_editButton\" title=\"Programm anhalten damit der Programmtext bearbeitbar wird\"></div>')\r\n        // $editorContainer.append(this.$buttonEdit);\r\n\r\n        $buttonsContainer.append(this.$buttonStart, this.$buttonRollback\r\n            // , this.$buttonPause, this.$buttonStop,\r\n            // this.$buttonStepOver, this.$buttonStepInto, this.$buttonStepOut, this.$buttonRestart\r\n        );\r\n\r\n        // <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n        // <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n        // <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n        // <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n        // <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n        // <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n        // <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n        // <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n\r\n\r\n\r\n    }\r\n\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { SQLStatement } from \"../../compiler/parser/Parser.js\";\r\nimport { StatementCleaner } from \"../../compiler/parser/StatementCleaner.js\";\r\nimport { QueryResult } from \"../../tools/DatabaseTools.js\";\r\nimport { WDatabase } from \"../../workspace/WDatabase.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\ntype RuntimeError = {\r\n    statement: SQLStatement,\r\n    message: string\r\n}\r\n\r\nexport interface WriteQueryListener {\r\n    notify(statements: SQLStatement[]): void;\r\n}\r\n\r\nexport class ResultsetPresenter {\r\n\r\n    $paginationDiv: JQuery<HTMLDivElement>;\r\n    $infoDiv: JQuery<HTMLDivElement>;\r\n    $arrowLeft: JQuery<HTMLDivElement>;\r\n    $arrowRight: JQuery<HTMLDivElement>;\r\n\r\n    paginationFrom: number;\r\n    paginationAll: number;\r\n\r\n    paginationSize: number = 1000;\r\n\r\n    result: QueryResult;\r\n\r\n    writeQueryListeners: WriteQueryListener[] = [];\r\n\r\n    public static StatementDelimiter: string = \";\\n\\n\"\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$paginationDiv = jQuery('.jo_pagination');\r\n        this.$arrowLeft = jQuery('<div class=\"jo_button img_arrow-left-dark jo_active\"></div>');\r\n        this.$infoDiv = jQuery('<div class=\"jo_pagination_info\"><span class=\"jo_pagination_fromto\">0001 - 1000</span> von <span class=\"jo_pagination_all\">5000</span></div>');\r\n        this.$arrowRight = jQuery('<div class=\"jo_button img_arrow-right-dark jo_active\"></div>');\r\n\r\n        this.$paginationDiv.append(this.$arrowLeft, this.$infoDiv, this.$arrowRight);\r\n\r\n        this.$paginationDiv.hide();\r\n\r\n        let mousePointer = (window.PointerEvent ? \"pointer\" : \"mouse\") + 'up';\r\n\r\n        let that = this;\r\n        this.$arrowLeft.on(mousePointer, (e) => {\r\n            if (that.paginationFrom > 1) {\r\n                that.paginationFrom = Math.max(that.paginationFrom - that.paginationSize, 1);\r\n                if (that.paginationFrom % 1000 != 1) {\r\n                    that.paginationFrom = (Math.floor(that.paginationFrom / that.paginationSize) + 1) * that.paginationSize + 1;\r\n                }\r\n                that.showResults();\r\n                that.activateButtons();\r\n            }\r\n        })\r\n\r\n        this.$arrowRight.on(mousePointer, (e) => {\r\n            if (that.paginationFrom < this.paginationAll - that.paginationSize + 1) {\r\n                that.paginationFrom = Math.min(that.paginationFrom + that.paginationSize, that.paginationAll - that.paginationSize + 1);\r\n                that.showResults();\r\n                that.activateButtons();\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    public addWriteQueryListener(listener: WriteQueryListener) {\r\n        this.writeQueryListeners.push(listener);\r\n    }\r\n\r\n    private activateButtons() {\r\n        this.$arrowLeft.toggleClass('jo_active', this.paginationFrom > 1);\r\n        this.$arrowRight.toggleClass('jo_active', this.paginationFrom < this.paginationAll - this.paginationSize + 1);\r\n    }\r\n\r\n    executeSelectedStatements() {\r\n\r\n        let statements = this.fetchSelectedStatements().filter(st => st.ast.type != TokenType.omittedeStatement);\r\n        \r\n        if (statements.length == 0) return;\r\n\r\n        let hasDDLStatements: boolean = statements.some(st => this.isDDLStatement(st));\r\n        let hasWriteStatements: boolean = statements.some(st => this.isWriteStatement(st));\r\n        let workspace = this.main.getCurrentWorkspace();\r\n        let database = workspace.database;\r\n\r\n        if (hasDDLStatements && workspace.permissions <= 2) {\r\n            alert(\"Der Benutzer hat keine Berechtigung zum Ändern der Tabellenstruktur.\");\r\n            return;\r\n        }\r\n\r\n        if (hasWriteStatements && workspace.permissions <= 1) {\r\n            alert(\"Der Benutzer hat keine Berechtigung zum Einfügen/Löschen/Ändern von Datensätzen.\");\r\n            return;\r\n        }\r\n\r\n        if (hasDDLStatements || hasWriteStatements) {\r\n            if (this.main.isEmbedded()) {\r\n                this.executeDDLWriteStatementsEmbedded(workspace, statements, database);\r\n\r\n            } else {\r\n                this.executeDDLWriteStatementsInOnlineIDE(workspace, statements, database);\r\n            }\r\n\r\n        } else {\r\n            this.executeStatements(statements, 0, [], () => { });\r\n        }\r\n\r\n    }\r\n\r\n    executeDDLWriteStatementsEmbedded(workspace: Workspace, statements: SQLStatement[], database: WDatabase) {\r\n        let sucessfullyExecutedModifyingStatements: SQLStatement[] = [];\r\n        this.executeStatements(statements, 0, sucessfullyExecutedModifyingStatements, () => {\r\n\r\n            if (sucessfullyExecutedModifyingStatements.length == 0)\r\n                return;\r\n\r\n            this.main.getDatabaseExplorer().refresh();\r\n\r\n            this.writeQueryListeners.forEach(listener => listener.notify(sucessfullyExecutedModifyingStatements))\r\n        })\r\n    }\r\n\r\n    private executeDDLWriteStatementsInOnlineIDE(workspace: Workspace, statements: SQLStatement[], database: WDatabase) {\r\n        let main: Main = <Main>this.main;\r\n        // Step 1: Update Database to newest version to avoid potential database reset\r\n        main.networkManager.getNewStatements(workspace, (new_statements, firstStatementIndex) => {\r\n\r\n            main.notifier.executeNewStatements(new_statements, firstStatementIndex, () => { },\r\n                () => {\r\n                    // Step 2: Execute new statements to see which are successful\r\n                    let sucessfullyExecutedModifyingStatements: SQLStatement[] = [];\r\n                    this.executeStatements(statements, 0, sucessfullyExecutedModifyingStatements, () => {\r\n\r\n                        if (sucessfullyExecutedModifyingStatements.length == 0)\r\n                            return;\r\n\r\n                        // Step 3: Send successful statements to server in order to retrieve new db-version-number\r\n                        main.networkManager.AddDatabaseStatements(workspace, sucessfullyExecutedModifyingStatements.map(st => st.sqlCleaned == null ? st.sql : st.sqlCleaned), (statements_before, new_version) => {\r\n\r\n                            // Step 4: If another user sent statements between steps 1 and 3 then they are in array statements_before.\r\n                            // Add all new statements to local statement list\r\n                            statements_before.forEach(st => database.statements.push(st));\r\n                            this.main.getHistoryViewer().appendStatements(statements_before);\r\n                            let modifyingStatements = sucessfullyExecutedModifyingStatements.map(st => st.sqlCleaned == null ? st.sql : st.sqlCleaned)\r\n                            database.statements = database.statements.concat(modifyingStatements);\r\n                            this.main.getHistoryViewer().appendStatements(modifyingStatements);\r\n                            database.version = new_version;\r\n\r\n                            // Step 5 (worst case): statements before is not empty, so the should be executed before the statements executed in step 2\r\n                            // => clear whole database and execute all statements in the right order, beginning with a empty database.\r\n                            if (statements_before.length > 0) {\r\n\r\n                                this.resetDatabase(database);\r\n\r\n                            } else {\r\n\r\n                                main.getDatabaseExplorer().refresh();\r\n\r\n                            }\r\n\r\n                        });\r\n                    });\r\n                }, false);\r\n        });\r\n    }\r\n\r\n    resetDatabase(database: WDatabase) {\r\n        this.main.getDatabaseTool().initializeWorker(database.templateDump, database.statements, () => {\r\n            this.main.getDatabaseExplorer().refresh();\r\n        })\r\n    }\r\n\r\n    executeStatementsString(statements: string[], fromIndex: number, callback: () => void) {\r\n        if (statements.length == 0) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (fromIndex < statements.length) {\r\n            this.main.getDatabaseTool().executeQuery(statements[fromIndex],\r\n                (results) => { this.executeStatementsString(statements, fromIndex + 1, callback) },\r\n                (error) => { console.log(\"Error when executing statement \" + statements[fromIndex] + \"\\nError : \" + error); this.executeStatementsString(statements, fromIndex + 1, callback) });\r\n        } else {\r\n            callback();\r\n        }\r\n    }\r\n\r\n\r\n    executeStatements(statements: SQLStatement[], index: number, successfullyExecutedModifyingStatements: SQLStatement[], callback: () => void, errors: RuntimeError[] = []) {\r\n\r\n        if (index >= statements.length) {\r\n            this.showErrors(errors);\r\n\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        let statement = statements[index];\r\n\r\n\r\n        let callback1 = () => {\r\n            this.executeStatements(statements, index + 1, successfullyExecutedModifyingStatements, callback, errors);\r\n        }\r\n\r\n        if (statement.ast == null) {\r\n            callback1();\r\n            return;\r\n        }\r\n\r\n        if (statement.ast.type == TokenType.keywordSelect) {\r\n            let laterSelectExists: boolean = false;\r\n            for (let j = index + 1; j < statements.length; j++) laterSelectExists = laterSelectExists || this.isSelectStatement(statements[j]);\r\n            if (laterSelectExists) {\r\n                callback1();\r\n            } else {\r\n                if (statement.ast.limitNode == null) {\r\n                    statement.sql.trimRight();\r\n                    while (statement.sql.endsWith(\";\") || statement.sql.endsWith(\"\\n\") || statement.sql.endsWith(\"\\r\")) {\r\n                        statement.sql = statement.sql.substring(0, statement.sql.length - 1);\r\n                        statement.sql.trimRight();\r\n                    }\r\n                    statement.sql += \" limit 100000\";\r\n                }\r\n                this.main.getDatabaseTool().executeQuery(statement.sql,\r\n                    (results) => { this.presentResultsIntern(statement.sql, results); callback1(); },\r\n                    (error) => { errors.push({ statement: statement, message: error }); callback1(); });\r\n            }\r\n        } else {\r\n            let sql = new StatementCleaner().clean(statement);\r\n            console.log(sql);\r\n            this.main.getDatabaseTool().executeQuery(sql, (results) => { successfullyExecutedModifyingStatements.push(statement); callback1(); }, (error) => { errors.push({ statement: statement, message: error }); callback1(); });\r\n        }\r\n\r\n    }\r\n\r\n    oldErrorDecorations: string[] = [];\r\n    showErrorDecorations(errors: RuntimeError[]) {\r\n\r\n        let minimapColors = {\r\n            \"error\": \"#bc1616\",\r\n            \"warning\": \"#cca700\",\r\n            \"info\": \"#75beff\"\r\n        }\r\n\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        let markers: monaco.editor.IMarkerData[] = [];\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n        for (let error of errors) {\r\n            let errorlevel = \"error\";\r\n\r\n            let linesDecorationsClassName: string;\r\n            let borderLeftClass: string;\r\n            let minimapColor: string = minimapColors[errorlevel];\r\n\r\n            switch (errorlevel) {\r\n                case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n            }\r\n\r\n            let severity: monaco.MarkerSeverity;\r\n            switch (errorlevel) {\r\n                case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n            }\r\n\r\n            markers.push({\r\n                startLineNumber: error.statement.from.line,\r\n                startColumn: error.statement.from.column,\r\n                endLineNumber: error.statement.to.line,\r\n                endColumn: error.statement.to.column,\r\n                message: error.message,\r\n                severity: severity\r\n            });\r\n\r\n            decorations.push({\r\n                range: {\r\n                    startLineNumber: error.statement.from.line,\r\n                    startColumn: error.statement.from.column,\r\n                    endLineNumber: error.statement.to.line,\r\n                    endColumn: error.statement.to.column,\r\n                },\r\n                options: {\r\n                    linesDecorationsClassName: linesDecorationsClassName,\r\n                    minimap: {\r\n                        position: monaco.editor.MinimapPosition.Inline,\r\n                        color: minimapColor\r\n                    }\r\n                }\r\n\r\n            });\r\n\r\n\r\n        }\r\n\r\n        let model = this.main.getCurrentlyEditedModule().model;\r\n        monaco.editor.setModelMarkers(model, 'test', markers);\r\n        this.oldErrorDecorations = model.deltaDecorations(this.oldErrorDecorations, decorations);\r\n\r\n    }\r\n\r\n    showTable(identifier: string) {\r\n        let statement = \"select * from \" + identifier + \";\";\r\n        this.main.getDatabaseTool().executeQuery(statement,\r\n            (results) => { this.presentResultsIntern(statement, results); },\r\n            (error) => { });\r\n    }\r\n\r\n\r\n\r\n    showErrors(errors: RuntimeError[]) {\r\n        let $runtimeErrorsTab = this.$bottomDiv.find('.jo_errorsTab');\r\n        let $runtimeErrorsTabHeading = this.$bottomDiv.find('.jo_errorsTabheading');\r\n\r\n        $runtimeErrorsTab.empty();\r\n        this.showErrorDecorations(errors);\r\n\r\n        if (errors.length == 0) return;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        $runtimeErrorsTabHeading.trigger(mousePointer + \"down\");\r\n\r\n        let $errorList = jQuery('<div class=\"jo_errorlist\"></div>');\r\n        $runtimeErrorsTab.append($errorList);\r\n\r\n        for (let error of errors) {\r\n            let query = error.statement.sql;\r\n            query = query.replace(/\\n/g, \" \");\r\n            query = query.replace(/\\s\\s+/g, ' ');\r\n\r\n            let $errorLine = $('<div class=\"jo_error-line\" style=\"flex-direction:column; width: fit-content\"></div>')\r\n            $errorList.append($errorLine);\r\n\r\n            $errorLine.on(mousePointer + 'down', () => {\r\n                let range = {\r\n                    startColumn: error.statement.from.column, startLineNumber: error.statement.from.line,\r\n                    endColumn: error.statement.to.column, endLineNumber: error.statement.to.line\r\n                };\r\n\r\n                this.main.getMonacoEditor().revealRangeInCenter(range);\r\n                $errorList.find('.jo_error-line').removeClass('jo_active');\r\n                $errorLine.addClass('jo_active');\r\n\r\n            })\r\n\r\n\r\n            let $sqlDiv = $('<div class=\"jo_sqlErrorStatement\"></div>');\r\n            $errorLine.append($sqlDiv);\r\n\r\n            monaco.editor.colorize(query, \"vscSQL\", {}).then(\r\n                (html) => { $sqlDiv.html(html) });\r\n\r\n            let $messageDiv = $('<div class=\"jo_sqlErrorMessage\">' + error.message + '</div>');\r\n            $errorLine.append($messageDiv);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    isSelectStatement(statement: SQLStatement): boolean {\r\n        return statement.ast != null && statement.ast.type == TokenType.keywordSelect;\r\n    }\r\n\r\n    isDDLStatement(statement: SQLStatement): boolean {\r\n        return statement.ast != null && [TokenType.keywordCreate, TokenType.keywordDrop, TokenType.keywordAlter].indexOf(statement.ast.type) >= 0;\r\n    }\r\n\r\n    isWriteStatement(statement: SQLStatement): boolean {\r\n        return statement.ast != null && [TokenType.keywordInsert, TokenType.keywordDelete, TokenType.keywordUpdate].indexOf(statement.ast.type) >= 0;\r\n    }\r\n\r\n    private presentResultsIntern(query: string, results: QueryResult[]) {\r\n        let $resultTabheading = this.$bottomDiv.find('.jo_resultTabheading');\r\n        let $resultHeader = this.$bottomDiv.find('.jo_result-header');\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        $resultTabheading.trigger(mousePointer + \"down\");\r\n        this.result = results.pop();\r\n\r\n        let headerDiv = $resultHeader;\r\n\r\n        query = query.replace(/\\n/g, \" \");\r\n        query = query.replace(/\\s\\s+/g, ' ');\r\n        query = query.replace(/limit 100000/g, '');\r\n\r\n        monaco.editor.colorize(query, \"vscSQL\", {}).then(\r\n            (html) => { headerDiv.html(html) });\r\n\r\n        this.paginationAll = this.result ? this.result.values.length : 0;\r\n        this.$infoDiv.find('.jo_pagination_all').html(`${this.paginationAll}`);\r\n        this.paginationFrom = 1;\r\n        this.$paginationDiv.show();\r\n        this.activateButtons();\r\n\r\n        this.showResults();\r\n\r\n    }\r\n\r\n    public clear() {\r\n        let $bodyDiv = this.$bottomDiv.find('.jo_result-body');\r\n        $bodyDiv.empty();\r\n        this.$paginationDiv.hide();\r\n    }\r\n\r\n    private showResultsBusy: boolean = false;\r\n    private showResultPending: boolean = false;\r\n\r\n    private showResults() {\r\n        let $bodyDiv = this.$bottomDiv.find('.jo_result-body');\r\n\r\n        if (this.result == null) {\r\n            this.$infoDiv.find('.jo_pagination_fromto').html('---');\r\n            $bodyDiv.html('Die Datenbank lieferte eine leere Ergebnistabelle.');\r\n            return;\r\n        }\r\n\r\n        let that = this;\r\n        let from = this.paginationAll == 0 ? 0 : this.paginationFrom;\r\n        let to = this.paginationAll == 0 ? 0 : Math.min(this.paginationFrom + this.paginationSize - 1, this.paginationAll);\r\n        this.$infoDiv.find('.jo_pagination_fromto').html(`${from} - ${to}`)\r\n\r\n        if (this.showResultsBusy) {\r\n            if (this.showResultPending) {\r\n                return;\r\n            }\r\n            this.showResultPending = true;\r\n            let waitFunction = () => {\r\n                if (that.showResultsBusy) {\r\n                    setTimeout(() => {\r\n                        waitFunction();\r\n                    }, 200);\r\n                } else {\r\n                    that.showResultPending = false;\r\n                    that.showResults();\r\n                }\r\n            }\r\n            setTimeout(waitFunction, 200);\r\n            return;\r\n        }\r\n\r\n        this.showResultsBusy = true;\r\n\r\n        let $table = jQuery('<table></table>');\r\n        let $header = jQuery('<tr></tr>');\r\n        $table.append($header);\r\n\r\n        this.result.columns.forEach((column) => { $header.append(jQuery(`<th><div>${column}</div></th>`)) });\r\n\r\n        let rows = this.result.values.slice(this.paginationFrom - 1, this.paginationFrom + this.paginationSize - 1);\r\n\r\n        let i = 0;\r\n        let f = () => {\r\n            if (i < rows.length) {\r\n                for (let j = i; j < Math.min(i + 200, rows.length); j++) {\r\n                    let row = rows[j];\r\n                    let $row = jQuery('<tr></tr>');\r\n                    $table.append($row);\r\n                    row.forEach((cell) => { $row.append(jQuery(`<td>${cell}</td>`)) });\r\n                }\r\n                i = Math.min(i + 200, rows.length);\r\n                if (i < rows.length) {\r\n                    setTimeout(f, 30);\r\n                } else {\r\n                    $bodyDiv.empty().append($table);\r\n                    this.showResultsBusy = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        f();\r\n\r\n        // rows.forEach((row) => {\r\n        //     let $row = jQuery('<tr></tr>');\r\n        //     $table.append($row);\r\n        //     row.forEach((cell) => {$row.append(jQuery(`<td>${cell}</td>`))});\r\n        // });\r\n\r\n        // bodyDiv.empty().append($table);\r\n\r\n    }\r\n\r\n\r\n    fetchSelectedStatements(): SQLStatement[] {\r\n        let module = this.main.getCurrentlyEditedModule();\r\n        if (module == null) return null;\r\n\r\n        let monacoEditor = this.main.getMonacoEditor();\r\n        // console.log(monacoEditor.getSelection());\r\n        // console.log(monacoEditor.getPosition());\r\n\r\n        let statements: SQLStatement[] = module.getSQLSTatementsAtSelection(monacoEditor.getSelection());\r\n        for (let statement of statements) {\r\n            statement.sql = monacoEditor.getModel().getValueInRange({\r\n                startColumn: statement.from.column,\r\n                startLineNumber: statement.from.line, endColumn: statement.to.column, endLineNumber: statement.to.line\r\n            });\r\n        }\r\n\r\n        // let sqlStatement = module.getSQLStatementAtPosition(monacoEditor.getPosition());\r\n\r\n        return statements;\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { Module } from \"../compiler/parser/Module.js\";\r\nimport { ResultsetPresenter } from \"../main/gui/ResultsetPresenter.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { WDatabase } from \"../workspace/WDatabase.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ajax } from \"./AjaxHelper.js\";\r\nimport { GetNewStatementsRequest, GetNewStatementsResponse, GetWebSocketTokenResponse, LongPollingListenerResponse, RegisterLongPollingListenerRequest, WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestGetNewStatements, WebSocketResponse } from \"./Data.js\";\r\n\r\nexport class Notifier {\r\n\r\n    connection: WebSocket;\r\n    isOpen: boolean = false;\r\n    workspace: Workspace;\r\n    database: WDatabase;\r\n\r\n    constructor(public main: Main) {\r\n        // Polling is not used. \r\n        // We try long polling (see below!)\r\n\r\n        // this.startPolling();\r\n    }\r\n\r\n    connect(workspace: Workspace) {\r\n\r\n        let that = this;\r\n        this.workspace = workspace;\r\n        this.database = workspace.database;\r\n\r\n        if (this.isOpen) {\r\n            this.connection.close();\r\n        }\r\n\r\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\r\n\r\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/websocket\";\r\n            this.connection = new WebSocket(url);\r\n\r\n            this.connection.onerror = (error: Event) => { this.onError(error); }\r\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\r\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\r\n\r\n            this.connection.onopen = (event: Event) => {\r\n                let request: WebSocketRequestConnect = {\r\n                    command: 1,\r\n                    token: response.token,\r\n                    workspaceId: workspace.id,\r\n                    databaseId: workspace.database.id,\r\n                    databaseVersion: workspace.database.version\r\n                }\r\n\r\n                this.isOpen = true;\r\n                this.sendIntern(JSON.stringify(request));\r\n                this.onOpen();\r\n\r\n            }\r\n\r\n            setTimeout(() => {\r\n                that.startLongPolling()\r\n            }, 2000);\r\n\r\n        });\r\n\r\n    }\r\n\r\n    unsentMessages: string[] = [];\r\n    sendIntern(message: string) {\r\n\r\n        if (!this.isOpen) {\r\n            this.unsentMessages.push(message);\r\n        } else {\r\n            try {\r\n                this.connection.send(message);\r\n            } catch (exception) {\r\n                console.log(exception);\r\n            }\r\n        }\r\n    }\r\n\r\n    onClose(event: CloseEvent) {\r\n        this.isOpen = false;\r\n    }\r\n\r\n\r\n    disconnect() {\r\n        let message: WebSocketRequestDisconnect = {\r\n            command: 4\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n        this.connection.close();\r\n        this.workspace = null;\r\n    }\r\n\r\n    onMessage(event: MessageEvent) {\r\n\r\n        let that = this;\r\n        let response: WebSocketResponse = JSON.parse(event.data);\r\n        if (response.command == undefined) return;\r\n\r\n        switch (response.command) {\r\n            case 2: // SendStatements\r\n                that.executeNewStatements(response.newStatements, response.firstNewStatementIndex, () => {\r\n                    let request: WebSocketRequestGetNewStatements = { command: 2, databaseVersion: that.database.version };\r\n                    that.sendIntern(JSON.stringify(request));\r\n                })\r\n                break;\r\n            case 3: // server initiated disconnect\r\n                this.isOpen = false;\r\n                this.database = null;\r\n                this.workspace = null;\r\n                break;\r\n            case 4: // keep alive\r\n                break;\r\n            case 5: // rollback\r\n                if (this.database.version > response.new_version) {\r\n                    this.main.getHistoryViewer().rollbackLocal();\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    executeNewStatements(newStatements: string[], firstNewStatementIndex: number, callbackIfTooFewStatements: () => void, callbackIfDone: () => void = () => { }, doRefreshDatabaseExplorer: boolean = true) {\r\n        if (this.database == null) return;\r\n        let that = this;\r\n        let delta = firstNewStatementIndex - (this.database.version + 1);\r\n        if (delta > 0) {\r\n            callbackIfTooFewStatements();\r\n            callbackIfDone();\r\n            return;\r\n        } else {\r\n            if (delta < 0) {\r\n                newStatements.splice(0, -delta);\r\n                firstNewStatementIndex -= delta;\r\n            }\r\n            let statements = newStatements;\r\n            if (statements.length > 0) {\r\n                this.main.resultsetPresenter.executeStatementsString(statements, 0, () => {\r\n                    that.main.getHistoryViewer().appendStatements(statements);\r\n                    that.database.statements = that.database.statements.concat(statements)\r\n                    that.database.version = firstNewStatementIndex + newStatements.length - 1;\r\n                    if (doRefreshDatabaseExplorer) {\r\n                        that.main.databaseExplorer.refresh();\r\n                    }\r\n                    callbackIfDone();\r\n                })\r\n            } else {\r\n                callbackIfDone();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    onError(error: Event) {\r\n    }\r\n\r\n    onOpen() {\r\n        this.isOpen = true;\r\n        if (this.unsentMessages.length > 0) {\r\n            this.unsentMessages.forEach(m => this.sendIntern(m));\r\n            this.unsentMessages = [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Polling is not used. \r\n     * We try long polling!\r\n     * (see below)\r\n     */\r\n    isPolling: boolean = false;\r\n    startPolling() {\r\n        if (this.isPolling) return;\r\n        this.isPolling = true;\r\n\r\n        this.poll();\r\n\r\n    }\r\n\r\n    /**\r\n     * Polling is not used.\r\n     * We try long polling!\r\n     * (see below)\r\n     */\r\n    counter: number = 0;\r\n    poll() {\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.poll();\r\n        }, 6000);\r\n\r\n        if (!that.isOpen && that.workspace != null) {\r\n            this.getNewStatementsHttp();\r\n\r\n            // retry connecting:\r\n            that.counter++;\r\n            if (that.counter == 10) {\r\n                that.counter = 0;\r\n                that.connect(that.workspace);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getNewStatementsHttp() {\r\n        let that = this;\r\n        if (this.workspace == null || this.database == null) return;\r\n\r\n        let request: GetNewStatementsRequest = {\r\n            workspaceId: this.workspace.id,\r\n            version_before: this.workspace.database.version\r\n        }\r\n\r\n        ajax('getNewStatements', request, (response: GetNewStatementsResponse) => {\r\n\r\n            that.executeNewStatements(response.newStatements, response.firstNewStatementIndex, () => {\r\n                that.getNewStatementsHttp();\r\n            })\r\n\r\n        });\r\n\r\n    }\r\n\r\n    isLongPolling: boolean = false;\r\n    startLongPolling() {\r\n        if (this.isLongPolling) return;\r\n        this.isLongPolling = true;\r\n\r\n        this.longPoll();\r\n\r\n    }\r\n\r\n    longPollCounter: number = 0;\r\n    longPoll() {\r\n        let that = this;\r\n\r\n        if (!that.isOpen && that.workspace != null) {\r\n            let request: RegisterLongPollingListenerRequest = {\r\n                workspaceId: that.workspace.id\r\n            }\r\n\r\n            $.ajax({\r\n                type: 'POST',\r\n                async: true,\r\n                data: JSON.stringify(request),\r\n                contentType: 'application/json',\r\n                url: \"servlet/registerLongPollingListener\",\r\n                success: function (resp: string) {\r\n                    console.log(resp);\r\n                    let response: LongPollingListenerResponse = JSON.parse(resp);\r\n                    if (!that.isOpen && that.workspace?.id == request.workspaceId && response.success) {\r\n                        that.executeNewStatements(response.newStatements, response.firstNewStatementIndex, () => {\r\n                            that.getNewStatementsHttp();\r\n                        })\r\n\r\n                        let timeout: number = 1000;\r\n                        // retry connecting:\r\n                        that.longPollCounter++;\r\n                        if (that.longPollCounter == 10) {\r\n                            that.longPollCounter = 0;\r\n                            that.connect(that.workspace);\r\n                            timeout = 2000;\r\n                        }\r\n\r\n                        setTimeout(() => {\r\n                            that.longPoll();\r\n                        }, 2000);\r\n                    }\r\n                },\r\n                error: function (jqXHR, message) {\r\n                    if (!that.isOpen && that.workspace?.id == request.workspaceId) {\r\n                        setTimeout(() => {\r\n                            that.longPoll();\r\n                        }, 2000);\r\n                    }\r\n                }\r\n            });\r\n\r\n        } else {\r\n            setTimeout(() => {\r\n                that.longPoll();\r\n            }, 5000);\r\n        }\r\n\r\n    }\r\n\r\n}","export class WaitOverlay {\r\n\r\n    visible: boolean = false;\r\n    fadeOutPending: boolean = false;\r\n    $bitteWartenText: JQuery<HTMLElement>;\r\n    $bitteWartenProgress: JQuery<HTMLElement>;\r\n\r\n    constructor(private $waitDiv: JQuery<HTMLElement>){\r\n        this.$bitteWartenText = $waitDiv.find('.bitteWartenText');\r\n        this.$bitteWartenProgress = $waitDiv.find('.bitteWartenProgress');\r\n    }\r\n\r\n    show(message: string){\r\n        this.fadeOutPending = false;\r\n        this.$bitteWartenText.html(message);\r\n        this.$bitteWartenProgress.html('');\r\n        if(!this.visible){\r\n            this.visible = true;\r\n            this.$waitDiv.css('display', 'flex');\r\n            this.$waitDiv.hide();\r\n            this.$waitDiv.fadeIn(400);\r\n        }\r\n    }\r\n\r\n    setProgress(message: string){\r\n        this.$bitteWartenProgress.html(message);\r\n    }\r\n\r\n    hide(){\r\n        if(this.visible){\r\n            this.fadeOutPending = true;\r\n            setTimeout(() => {\r\n                if(this.fadeOutPending){\r\n                    this.fadeOutPending = false;\r\n                    this.$waitDiv.fadeOut(200, () => {\r\n                        this.$waitDiv.css('display', 'none');\r\n                    })\r\n                    this.visible = false;        \r\n                }                \r\n            }, 50);\r\n        }\r\n    }\r\n\r\n}","import { MainEmbedded } from \"../../embedded/MainEmbedded.js\";\r\nimport { copyTextToClipboard, openContextMenu } from \"../../tools/HtmlTools.js\";\r\nimport { WDatabase } from \"../../workspace/WDatabase.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\ntype HistoryPanelEntry = {\r\n    statement: string;\r\n    $div: JQuery<HTMLDivElement>;\r\n    $rollbackButton: JQuery<HTMLDivElement>;\r\n}\r\n\r\nexport class HistoryViewer {\r\n\r\n    panelEntries: HistoryPanelEntry[] = [];\r\n\r\n    constructor(private main: MainBase, private $historyPanel: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    clear() {\r\n        this.$historyPanel.empty();\r\n        this.main.getActionManager().setActive(\"rollback\", false);\r\n        this.panelEntries = [];\r\n    }\r\n\r\n    clearAndShowStatements(statements: string[]) {\r\n        this.clear();\r\n        this.appendStatements(statements);\r\n        this.main.getActionManager().setActive(\"rollback\", statements.length > 0);\r\n    }\r\n\r\n    appendStatements(statements: string[]) {\r\n        statements.forEach(stmt => {\r\n            let panelEntry = this.makePanelEntry(stmt, this.panelEntries.length + 1);\r\n            this.$historyPanel.prepend(panelEntry.$div);\r\n            this.panelEntries.unshift(panelEntry);\r\n        })\r\n\r\n        if(statements.length > 0){\r\n            this.main.getActionManager().setActive(\"rollback\", true);\r\n        }\r\n\r\n        this.makeLastButtonActive();\r\n    }\r\n\r\n    makeLastButtonActive() {\r\n        this.panelEntries.forEach(pe => pe.$rollbackButton.removeClass('jo_active'));\r\n\r\n        if (this.panelEntries.length > 0) {\r\n            this.panelEntries[0].$rollbackButton.addClass('jo_active');\r\n        }\r\n    }\r\n\r\n    makePanelEntry(statement: string, index: number): HistoryPanelEntry {\r\n        let $div = <JQuery<HTMLDivElement>>jQuery(`<div class=\"jo_panelEntry\"></div>`);\r\n        let $index = jQuery(`<div class=\"jo_panelEntryIndex\">${index}.</div>`);\r\n        let $text = jQuery(`<div class=\"jo_panelEntryText\"></div>`);\r\n        let t: string = statement.substring(0, Math.min(400, statement.length));\r\n        if (statement.length > 400) {\r\n            t += \"...\";\r\n        }\r\n        $text.text(t);\r\n        let $copybutton = <JQuery<HTMLDivElement>>jQuery(`<div class=\"img_copy jo_panelEntryCopyButton jo_active jo_button\" title=\"In die Zwischenablage kopieren\"></div>`)\r\n        let $rollbackbutton = <JQuery<HTMLDivElement>>jQuery(`<div class=\"img_undo jo_panelEntryRollbackButton jo_button\" title=\"Rollback\"></div>`)\r\n        let that = this;\r\n\r\n        $copybutton.on('click', () => {\r\n            copyTextToClipboard(statement);\r\n        })\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $rollbackbutton.on(mousePointer + 'up', (ev) => {\r\n            ev.preventDefault();\r\n            openContextMenu([{\r\n                caption: \"Abbrechen\",\r\n                callback: () => {\r\n                }\r\n            }, {\r\n                caption: \"Ich bin mir sicher: rollback!\",\r\n                color: \"#ff6060\",\r\n                callback: () => {\r\n                    this.rollback();\r\n                }\r\n            }], ev.pageX + 2, ev.pageY + 2);\r\n            ev.stopPropagation();\r\n        })\r\n\r\n        $div.append($index, $text, $copybutton, $rollbackbutton);\r\n        return {\r\n            $div: $div,\r\n            statement: statement,\r\n            $rollbackButton: $rollbackbutton\r\n        }\r\n    }\r\n\r\n    rollback() {\r\n        if (this.panelEntries.length == 0) return;\r\n\r\n        if (this.main.isEmbedded()) {\r\n            this.rollbackEmbedded();\r\n            this.main.getActionManager().setActive(\"rollback\", this.panelEntries.length > 0);\r\n        } else {\r\n            let main: Main = <Main>this.main;\r\n            main.networkManager.rollback((error: string, rollbackLocalNeeded: boolean) => {\r\n                if (error == null && rollbackLocalNeeded) {\r\n                    this.rollbackLocal();\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    rollbackLocal() {\r\n        let database = this.main.getCurrentWorkspace().database;\r\n        database.statements.pop();\r\n        database.version--;\r\n        this.main.getDatabaseTool().initializeWorker(database.templateDump, database.statements, () => {\r\n\r\n        }, () => {\r\n            this.main.getDatabaseExplorer().refreshAfterRetrievingDBStructure();\r\n            let lastPanelEntry = this.panelEntries.shift();\r\n            lastPanelEntry.$div.remove();\r\n            this.makeLastButtonActive();\r\n            this.main.getActionManager().setActive(\"rollback\", this.panelEntries.length > 0);\r\n        })\r\n    }\r\n\r\n    rollbackEmbedded() {\r\n        let main: MainEmbedded = <MainEmbedded>this.main;\r\n        main.writeQueryManager.rollback();\r\n\r\n        this.main.getDatabaseTool().initializeWorker(main.initialTemplateDump,\r\n            main.initialStatements.concat(main.writeQueryManager.writtenStatements), () => { },\r\n            () => {\r\n                this.main.getDatabaseExplorer().refreshAfterRetrievingDBStructure();\r\n                let lastPanelEntry = this.panelEntries.shift();\r\n                lastPanelEntry.$div.remove();\r\n                this.makeLastButtonActive();\r\n            })\r\n    }\r\n\r\n}","import { ClassData, UserData, Workspaces } from \"../communication/Data.js\";\r\nimport { NetworkManager } from \"../communication/NetworkManager.js\";\r\nimport { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ActionManager } from \"./gui/ActionManager.js\";\r\nimport { BottomDiv } from \"./gui/BottomDiv.js\";\r\nimport { Editor } from \"./gui/Editor.js\";\r\nimport { Formatter } from \"./gui/Formatter.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { MainMenu } from \"./gui/MainMenu.js\";\r\nimport { ProjectExplorer } from \"./gui/ProjectExplorer.js\";\r\nimport { RightDiv } from \"./gui/RightDiv.js\";\r\nimport { Sliders } from \"./gui/Sliders.js\";\r\nimport { TeacherExplorer } from \"./gui/TeacherExplorer.js\";\r\nimport { ThemeManager } from \"./gui/ThemeManager.js\";\r\nimport { Login } from \"./Login.js\";\r\nimport { Module, File } from \"../compiler/parser/Module.js\";\r\nimport { ViewModeController } from \"./gui/ViewModeController.js\";\r\nimport { ErrorManager } from \"./gui/ErrorManager.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { DatabaseTool } from \"../tools/DatabaseTools.js\";\r\nimport { MainBase } from \"./MainBase.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { DatabaseExplorer } from \"./gui/DatabaseExplorer.js\";\r\nimport { ProgramControlButtons } from \"./gui/ProgramControlButtons.js\";\r\nimport { ResultsetPresenter } from \"./gui/ResultsetPresenter.js\";\r\nimport { Notifier } from \"../communication/Notifier.js\";\r\nimport { checkIfMousePresent } from \"../tools/HtmlTools.js\";\r\nimport { WaitOverlay } from \"./gui/WaitOverlay.js\";\r\nimport { HistoryViewer } from \"./gui/HistoryViewer.js\";\r\n\r\nexport class Main implements MainBase {\r\n    isEmbedded(): boolean {\r\n        return false;\r\n    }\r\n\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    // VORSICHT: ggf. Module -> any\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.projectExplorer.getCurrentlyEditedModule();\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n        this.projectExplorer.setModuleActive(module);\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n    getDatabaseTool(): DatabaseTool {\r\n        return this.databaseTool;\r\n    }\r\n\r\n    getDatabaseExplorer():DatabaseExplorer {\r\n        return this.databaseExplorer;\r\n    }\r\n\r\n    getResultsetPresenter(): ResultsetPresenter {\r\n        return this.resultsetPresenter;\r\n    }\r\n\r\n    getWaitOverlay(): WaitOverlay {\r\n        return this.waitOverlay;\r\n    }\r\n\r\n    getHistoryViewer(): HistoryViewer {\r\n        return this.historyViewer;\r\n    }\r\n\r\n    workspaceList: Workspace[] = [];\r\n    workspacesOwnerId: number;\r\n\r\n    // monaco_editor: monaco.editor.IStandaloneCodeEditor;\r\n    editor: Editor;\r\n    currentWorkspace: Workspace;\r\n    projectExplorer: ProjectExplorer;\r\n    teacherExplorer: TeacherExplorer;\r\n    networkManager: NetworkManager;\r\n    actionManager: ActionManager;\r\n    mainMenu: MainMenu;\r\n\r\n    login: Login;\r\n\r\n    compiler: Compiler;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    bottomDiv: BottomDiv;\r\n\r\n    startupComplete = 2;\r\n    waitForGUICallback: () => void;\r\n\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    user: UserData;\r\n    userDataDirty: boolean = false;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    rightDiv: RightDiv;\r\n\r\n    viewModeController: ViewModeController;\r\n\r\n    databaseTool: DatabaseTool;\r\n\r\n    databaseExplorer: DatabaseExplorer;\r\n\r\n    resultsetPresenter: ResultsetPresenter;\r\n\r\n    notifier: Notifier;\r\n\r\n    waitOverlay: WaitOverlay = new WaitOverlay(jQuery('.bitteWarten'));\r\n    historyViewer: HistoryViewer = new HistoryViewer(this, jQuery('.jo_historyTab'));\r\n\r\n    initGUI() {\r\n\r\n        checkIfMousePresent();\r\n\r\n        this.login = new Login(this);\r\n        this.login.initGUI();\r\n\r\n        this.databaseTool = new DatabaseTool(this);\r\n        this.databaseExplorer = new DatabaseExplorer(this, jQuery(\".jo_db_tree\"));\r\n\r\n        this.actionManager = new ActionManager(null, this);\r\n        this.actionManager.init();\r\n\r\n        this.networkManager = new NetworkManager(this, jQuery('#bottomdiv-outer .jo_updateTimerDiv'));\r\n\r\n        let sliders = new Sliders(this);\r\n        sliders.initSliders();\r\n        this.mainMenu = new MainMenu(this);\r\n        this.projectExplorer = new ProjectExplorer(this, jQuery('#leftpanel>.jo_projectexplorer'));\r\n        this.projectExplorer.initGUI();\r\n\r\n        this.bottomDiv = new BottomDiv(this, jQuery('#bottomdiv-outer>.jo_bottomdiv-inner'), jQuery('body'));\r\n\r\n        this.rightDiv = new RightDiv(this, jQuery('#rightdiv-inner'));\r\n        this.rightDiv.initGUI();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.themeManager = new ThemeManager();\r\n\r\n        this.viewModeController = new ViewModeController(jQuery(\"#view-mode\"), this);\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n        new ProgramControlButtons(this, jQuery('#controls'));\r\n\r\n        this.resultsetPresenter = new ResultsetPresenter(this, jQuery('.jo_bottomdiv-inner'));\r\n\r\n        this.notifier = new Notifier(this);\r\n\r\n    }\r\n\r\n\r\n    initEditor() {\r\n        this.editor = new Editor(this, true, false);\r\n        new Formatter().init();\r\n        // this.monaco_editor = \r\n        this.editor.initGUI(jQuery('#editor'));\r\n\r\n        let that = this;\r\n        jQuery(window).on('resize', (event) => {\r\n            jQuery('#bottomdiv-outer').css('height', '450px');\r\n            jQuery('#editor').css('height', (window.innerHeight - 450 - 30 - 2) + \"px\");\r\n            that.editor.editor.layout();\r\n            jQuery('#editor').css('height', \"\");\r\n\r\n        });\r\n\r\n        jQuery(window).trigger('resize');\r\n\r\n        this.checkStartupComplete();\r\n    }\r\n\r\n    initTeacherExplorer(classdata: ClassData[]) {\r\n        this.teacherExplorer = new TeacherExplorer(this, classdata);\r\n        this.teacherExplorer.initGUI();\r\n    }\r\n\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    start() {\r\n\r\n        if (this.waitForGUICallback != null) {\r\n            this.waitForGUICallback();\r\n        }\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.getMonacoEditor().layout();\r\n        }, 200);\r\n\r\n        this.compiler = new Compiler(this);\r\n\r\n        this.startTimer();\r\n\r\n        $(window).on('unload', function() {\r\n            \r\n            if(navigator.sendBeacon && that.user != null){\r\n                that.networkManager.sendUpdates(null, false);\r\n                that.networkManager.sendUpdateUserSettings(() => {});\r\n            }\r\n            \r\n        });\r\n\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n                this.projectExplorer.renderErrorCount(this.currentWorkspace, errors);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                if (this.projectExplorer) {\r\n                    this.version++;\r\n                }\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    removeWorkspace(w: Workspace) {\r\n        this.workspaceList.splice(this.workspaceList.indexOf(w), 1);\r\n    }\r\n\r\n    restoreWorkspaces(workspaces: Workspaces) {\r\n\r\n        this.workspaceList = [];\r\n        this.currentWorkspace = null;\r\n        // this.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\" , \"text\"));\r\n        this.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        let currentWorkspace: Workspace = null;\r\n\r\n        for (let ws of workspaces.workspaces) {\r\n\r\n            let workspace: Workspace = Workspace.restoreFromData(ws, this);\r\n            this.workspaceList.push(workspace);\r\n            if (ws.id == this.user.currentWorkspace_id) {\r\n                currentWorkspace = workspace;\r\n            }\r\n        }\r\n\r\n        this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n\r\n        if (currentWorkspace == null && this.workspaceList.length > 0) {\r\n            currentWorkspace = this.workspaceList[0];\r\n        }\r\n\r\n        if (currentWorkspace != null) {\r\n            this.projectExplorer.setWorkspaceActive(currentWorkspace);\r\n        }\r\n\r\n        if (this.workspaceList.length == 0) {\r\n\r\n            Helper.showHelper(\"newDatabaseHelper\", this, this.projectExplorer.workspaceListPanel.$captionElement);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    createNewWorkspace(name: string, owner_id: number): Workspace {\r\n        return new Workspace(name, this, owner_id);\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class ErrorManager {\r\n\r\n    oldDecorations: string[] = [];\r\n    oldErrorDecorations: string[] = [];\r\n    $errorDiv: JQuery<HTMLElement>;\r\n\r\n    $bracket_warning: JQuery<HTMLElement>;\r\n\r\n    minimapColor: {[key: string]:string } = {};\r\n\r\n    lightBulbOnClickFunctionList: {class: string, onClickFunction: () => void, title: string}[] = [];\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>, private $mainDiv: JQuery<HTMLElement>) {\r\n        this.minimapColor[\"error\"] = \"#bc1616\";\r\n        this.minimapColor[\"warning\"] = \"#cca700\";\r\n        this.minimapColor[\"info\"] = \"#75beff\";\r\n\r\n        this.$bracket_warning = $mainDiv.find(\".jo_parenthesis_warning\");\r\n\r\n        this.$bracket_warning.attr('title', 'Klammeralarm!');\r\n        this.$bracket_warning.children().attr('title', 'Klammeralarm!');\r\n\r\n        let that = this;\r\n        $mainDiv.find(\".jo_pw_undo\").on(\"click\", () => {\r\n            let editor = that.main.getMonacoEditor();\r\n            editor.trigger(\".\", \"undo\", {});\r\n        }).attr('title', 'Undo');\r\n    }\r\n\r\n    showParenthesisWarning(error: string){\r\n        if(error != null){\r\n            this.$bracket_warning.css(\"visibility\", \"visible\");\r\n            this.$bracket_warning.find(\".jo_pw_heading\").text(error);\r\n        } else {\r\n            this.$bracket_warning.css(\"visibility\", \"hidden\");\r\n        }\r\n    }\r\n\r\n    showErrors(workspace: Workspace): Map<Module, number> {\r\n\r\n        this.lightBulbOnClickFunctionList = [];\r\n\r\n        let errorCountMap: Map<Module, number> = new Map();\r\n\r\n        this.$errorDiv = this.$bottomDiv.find('.jo_tabs>.jo_errorsTab');\r\n        this.$errorDiv.empty();\r\n\r\n        let hasErrors = false;\r\n\r\n        let ms = workspace.moduleStore;\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        for (let m of ms.getModules(false)) {\r\n            let markers: monaco.editor.IMarkerData[] = [];\r\n            let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n            let $errorList: JQuery<HTMLElement>[] = [];\r\n\r\n            let errors = m.getSortedAndFilteredErrors();\r\n            errorCountMap.set(m, m.getErrorCount());\r\n\r\n            for (let error of errors) {\r\n\r\n                let linesDecorationsClassName: string;\r\n                let borderLeftClass: string;\r\n                let minimapColor: string = this.minimapColor[error.level];\r\n\r\n                switch (error.level) {\r\n                    case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                    case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                    case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n                }\r\n\r\n                if (error.quickFix != null) {\r\n                    let quickFix = error.quickFix;\r\n                    let lightBulbClass = \"lb_\" + Math.trunc(Math.random() * 1000000);\r\n                    linesDecorationsClassName = 'jo_yellowLightBulb ' + borderLeftClass + \" \" + lightBulbClass;\r\n\r\n                    this.lightBulbOnClickFunctionList.push({class: '.' + lightBulbClass, \r\n                    onClickFunction: () => {\r\n\r\n                        let edits = quickFix.editsProvider(m.model.uri);\r\n                        editor.executeEdits(\"\", edits.map((edit) => {\r\n                            let r = edit.edit.range;\r\n                            return {\r\n                                range: new monaco.Range(r.startLineNumber, r.startColumn, r.endLineNumber, r.endColumn),\r\n                                text: edit.edit.text,\r\n                                forceMoveMarkers: true\r\n                            }\r\n                        }\r\n                        ));\r\n\r\n                    },\r\n                    title: quickFix.title\r\n                })\r\n\r\n\r\n                }\r\n\r\n                this.processError(error, m, $errorList);\r\n\r\n                let severity: monaco.MarkerSeverity;\r\n                switch (error.level) {\r\n                    case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                    case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                    case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n                }\r\n\r\n                markers.push({\r\n                    startLineNumber: error.position.line,\r\n                    startColumn: error.position.column,\r\n                    endLineNumber: error.position.line,\r\n                    endColumn: error.position.column + error.position.length,\r\n                    message: error.text,\r\n                    severity: severity,\r\n                    //@ts-ignore\r\n                    relatedInformation: error.quickFix\r\n                });\r\n\r\n                decorations.push({\r\n                    range: {\r\n                        startLineNumber: error.position.line,\r\n                        startColumn: error.position.column,\r\n                        endLineNumber: error.position.line,\r\n                        endColumn: error.position.column + error.position.length\r\n                    },\r\n                    options: {\r\n                        linesDecorationsClassName: linesDecorationsClassName,\r\n                        minimap: {\r\n                            position: monaco.editor.MinimapPosition.Inline,\r\n                            color: minimapColor\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n            }\r\n\r\n            monaco.editor.setModelMarkers(m.model, 'test', markers);\r\n            m.oldErrorDecorations = m.model.deltaDecorations(m.oldErrorDecorations, decorations);\r\n\r\n            // decorations used when user clicks on error in error-list:\r\n            this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, []);\r\n\r\n\r\n            if ($errorList.length > 0 && this.$errorDiv.length > 0) {\r\n                hasErrors = true;\r\n                let $file = jQuery('<div class=\"jo_error-filename\">' + m.file.name + '&nbsp;</div>');\r\n                this.$errorDiv.append($file);\r\n                for (let $error of $errorList) {\r\n                    this.$errorDiv.append($error);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasErrors && this.$errorDiv.length > 0) {\r\n            this.$errorDiv.append(jQuery('<div class=\"jo_noErrorMessage\">Keine Fehler gefunden :-)</div>'));\r\n        }\r\n\r\n        this.registerLightbulbOnClickFunctions();\r\n\r\n        return errorCountMap;\r\n\r\n    }\r\n\r\n    registerLightbulbOnClickFunctions() {\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            for(let locf of that.lightBulbOnClickFunctionList){\r\n                    jQuery(locf.class).off('click', locf.onClickFunction);\r\n                    jQuery(locf.class).on('click', locf.onClickFunction).attr('title', locf.title);\r\n            }            \r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    processError(error: Error, m: Module, $errorDivs: JQuery<HTMLElement>[]) {\r\n\r\n        let $div = jQuery('<div class=\"jo_error-line\"></div>');\r\n        let $lineColumn = jQuery('<span class=\"jo_error-position\">[Z&nbsp;<span class=\"jo_linecolumn\">' + error.position.line + '</span>' +\r\n            ' Sp&nbsp;<span class=\"jo_linecolumn\">' + error.position.column + '</span>]</span>:&nbsp;');\r\n        let category = \"\";\r\n        switch (error.level) {\r\n            case \"error\": break;\r\n            case \"warning\": category = '<span class=\"jo_warning_category\">Warnung: </span>'; break;\r\n            case \"info\": category = '<span class=\"jo_info_category\">Info: </span>'; break;\r\n        }\r\n        let $message = jQuery('<div class=\"jo_error-text\">' + category + error.text + \"</div>\");\r\n\r\n        $div.append($lineColumn).append($message);\r\n\r\n        let that = this;\r\n        $div.on(\"mousedown\", (ev) => {\r\n            this.$errorDiv.find('.jo_error-line').removeClass('jo_active');\r\n            $div.addClass('jo_active');\r\n            that.showError(m, error);\r\n        });\r\n\r\n        $errorDivs.push($div);\r\n    }\r\n\r\n    showError(m: Module, error: Error) {\r\n\r\n        if (this.main instanceof Main) {\r\n            if (m != this.main.projectExplorer.getCurrentlyEditedModule()) {\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n        let position = error.position;\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n\r\n        let className: string = \"\";\r\n        switch (error.level) {\r\n            case \"error\": className = \"jo_revealError\"; break;\r\n            case \"warning\": className = \"jo_revealWarning\"; break;\r\n            case \"info\": className = \"jo_revealInfo\"; break;\r\n        }\r\n\r\n\r\n        this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, [\r\n            {\r\n                range: range,\r\n                options: { className: className }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n}","import { makeDiv } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { stringToDate, dateToStringWithoutTime } from \"../../tools/StringTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\ntype ModuleWithWorkspace = {\r\n    module: Module,\r\n    workspace: Workspace\r\n}\r\n\r\ntype DayWithModules = {\r\n    date: Date;\r\n    day: string;\r\n    modules: ModuleWithWorkspace[];\r\n}\r\n\r\nexport class HomeworkManager {\r\n\r\n    $homeworkTab: JQuery<HTMLElement>;\r\n    $homeworkTabLeft: JQuery<HTMLElement>;\r\n    $homeworkTabRight: JQuery<HTMLElement>;\r\n\r\n    $showRevisionButton: JQuery<HTMLElement>;\r\n    showRevisionActive: boolean = false;\r\n\r\n    diffEditor: monaco.editor.IStandaloneDiffEditor;\r\n\r\n    constructor(private main: Main, public $bottomDiv: JQuery<HTMLElement>) {\r\n        this.$homeworkTab = $bottomDiv.find('.jo_tabs>.jo_homeworkTab');\r\n    }\r\n\r\n    initGUI() {\r\n        let that = this;\r\n        this.$homeworkTab.append(this.$homeworkTabLeft = makeDiv(\"\", \"jo_homeworkTabLeft jo_scrollable\"));\r\n        this.$homeworkTab.append(this.$homeworkTabRight = makeDiv(\"\", \"jo_homeworkTabRight jo_scrollable\"));\r\n        jQuery('#view-mode').prepend(this.$showRevisionButton = makeDiv(\"\", \"jo_button jo_active jo_homeworkRevisionButton\", \"\"));\r\n        this.$showRevisionButton.on(\"click\", () => {\r\n            if (this.showRevisionActive) {\r\n                this.hideRevision();\r\n            } else {\r\n                this.showRevision(that.main.getCurrentlyEditedModule());\r\n            }\r\n        });\r\n        this.$showRevisionButton.hide();\r\n        jQuery('#diffEditor').hide();\r\n    }\r\n\r\n    showHomeWorkRevisionButton() {\r\n        this.$showRevisionButton.text(this.showRevisionActive ? \"Normalansicht\" : \"Korrekturen zeigen\");\r\n        this.$showRevisionButton.show();\r\n    }\r\n\r\n    hideHomeworkRevisionButton() {\r\n        this.$showRevisionButton.hide();\r\n    }\r\n\r\n    showRevision(module: Module) {\r\n\r\n        module.file.text = module.getProgramTextFromMonacoModel();\r\n        let file = module.file;\r\n\r\n        jQuery('#editor').hide();\r\n        jQuery('#diffEditor').show();\r\n\r\n        var originalModel = monaco.editor.createModel(file.text_before_revision, \"myJava\");\r\n        var modifiedModel = monaco.editor.createModel(file.text, \"myJava\");\r\n\r\n        this.diffEditor = monaco.editor.createDiffEditor(document.getElementById(\"diffEditor\"), {\r\n            // You can optionally disable the resizing\r\n            enableSplitViewResizing: true,\r\n            originalEditable: false,\r\n            readOnly: true,\r\n            // Render the diff inline\r\n            renderSideBySide: true\r\n        });\r\n\r\n        this.diffEditor.setModel({\r\n            original: originalModel,\r\n            modified: modifiedModel\r\n        });\r\n\r\n        this.showRevisionActive = true;\r\n        this.showHomeWorkRevisionButton();\r\n    }\r\n\r\n    hideRevision() {\r\n        if (this.showRevisionActive) {\r\n\r\n            jQuery('#diffEditor').hide();\r\n            this.diffEditor.dispose();\r\n            this.diffEditor = null;\r\n            jQuery('#editor').show();\r\n\r\n            this.showRevisionActive = false;\r\n            this.showHomeWorkRevisionButton();\r\n        }\r\n    }\r\n\r\n\r\n    attachToWorkspaces(workspaces: Workspace[]) {\r\n\r\n        let daysWithModules: DayWithModules[] = [];\r\n        let map: { [day: string]: DayWithModules } = {};\r\n\r\n        workspaces.forEach(ws => {\r\n            ws.moduleStore.getModules(false).forEach(module => {\r\n\r\n                let dateString = module.file.submitted_date;\r\n                if (dateString != null) {\r\n\r\n                    let date: Date = stringToDate(dateString);\r\n                    let dateWithoutTime = dateToStringWithoutTime(date);\r\n                    let dwm: DayWithModules = map[dateWithoutTime];\r\n                    if (dwm == null) {\r\n                        dwm = {\r\n                            date: date,\r\n                            day: dateWithoutTime,\r\n                            modules: []\r\n                        };\r\n                        map[dateWithoutTime] = dwm;\r\n                        daysWithModules.push(dwm);\r\n                    }\r\n                    dwm.modules.push({module: module, workspace: ws});\r\n\r\n                }\r\n\r\n            });\r\n\r\n        });\r\n\r\n        this.$homeworkTabLeft.empty();\r\n        this.$homeworkTabRight.empty();\r\n\r\n        let that = this;\r\n\r\n        this.$homeworkTabLeft.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgabetage:\"));\r\n\r\n\r\n        daysWithModules.sort((a, b) => {\r\n            if (a.date.getFullYear() != b.date.getFullYear()) return -Math.sign(a.date.getFullYear() - b.date.getFullYear());\r\n            if (a.date.getMonth() != b.date.getMonth()) return -Math.sign(a.date.getMonth() - b.date.getMonth());\r\n            if (a.date.getDate() != b.date.getDate()) return -Math.sign(a.date.getDate() - b.date.getDate());\r\n            return 0;\r\n        });\r\n\r\n        let first: boolean = true;\r\n\r\n        daysWithModules.forEach(dwm => {\r\n\r\n            dwm.modules.sort((m1, m2) => m1.module.file.name.localeCompare(m2.module.file.name));\r\n\r\n            let $div = makeDiv(\"\", \"jo_homeworkDate\", dwm.day);\r\n            this.$homeworkTabLeft.append($div);\r\n\r\n            $div.on(\"click\", (e) => {\r\n                this.$homeworkTabLeft.find('.jo_homeworkDate').removeClass('active');\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            });\r\n\r\n            if (first) {\r\n                first = false;\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    select(dwm: DayWithModules) {\r\n        this.$homeworkTabRight.empty();\r\n        this.$homeworkTabRight.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgegebene Dateien:\"));\r\n        let that = this;\r\n        dwm.modules.forEach(moduleWithWorkspace => {\r\n            let $div = jQuery(`<div class=\"jo_homeworkEntry\">Workspace <span class=\"jo_homework-workspace\">\r\n                    ${moduleWithWorkspace.workspace.name}</span>, Datei <span class=\"jo_homework-file\">\r\n                    ${moduleWithWorkspace.module.file.name}</span> (Abgabe: ${moduleWithWorkspace.module.file.submitted_date} )</div>`);\r\n            that.$homeworkTabRight.append($div);\r\n            $div.on(\"click\", () => {\r\n                    that.main.projectExplorer.setWorkspaceActive(moduleWithWorkspace.workspace);\r\n                    that.main.projectExplorer.setModuleActive(moduleWithWorkspace.module);\r\n                    that.main.projectExplorer.fileListPanel.select(moduleWithWorkspace.module, false);\r\n            });\r\n        })\r\n        \r\n    }\r\n\r\n\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { ErrorManager } from \"./ErrorManager.js\";\r\nimport { HomeworkManager } from \"./HomeworkManager.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class BottomDiv {\r\n\r\n    errorManager: ErrorManager;\r\n    homeworkManager: HomeworkManager;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>, public $mainDiv: JQuery<HTMLElement>) {\r\n\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_homeworkTabheading').length > 0) {\r\n            this.homeworkManager = new HomeworkManager(<Main>main, $bottomDiv);\r\n        }\r\n\r\n        this.errorManager = new ErrorManager(main, $bottomDiv, $mainDiv);\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$bottomDiv);\r\n        if (this.homeworkManager != null) this.homeworkManager.initGUI();\r\n\r\n        this.$bottomDiv.find('.jo_tabs').children().first().trigger(\"click\");\r\n\r\n    }\r\n\r\n    showHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'visible');\r\n        jQuery('.jo_homeworkTabheading').trigger(\"mousedown\");\r\n\r\n    }\r\n\r\n    hideHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'hidden');\r\n        jQuery('.jo_tabheadings').children().first().trigger(\"mousedown\");\r\n\r\n    }\r\n\r\n\r\n}","\r\nexport class EmbeddedSlider {\r\n\r\n    $sliderDiv: JQuery<HTMLElement>;\r\n\r\n    /**\r\n     * A div contains $container and another div. Between the latter two \r\n     * a slider should get inserted.\r\n     * @param $container \r\n     * @param firstLast true, if $container is left/on top of other div; false if otherwise\r\n     * @param horVert true, if $container and other div are left/right of another; false if they are on top/below each other\r\n     * @param callback \r\n     * @param $otherDiv \r\n     */\r\n    constructor(private $container: JQuery<HTMLElement>, \r\n        private firstLast: boolean, private horVert: boolean,\r\n         private callback: (newLength: number) => void, private $otherDiv?: JQuery<HTMLElement>){\r\n            this.initSlider();\r\n    }\r\n\r\n    initSlider() {\r\n        let that = this;\r\n\r\n        if(this.$otherDiv == null){\r\n            this.$container.parent().children().each((index, element) => {\r\n                if(element != this.$container[0]){\r\n                    that.$otherDiv = jQuery(element);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.$sliderDiv = jQuery('<div class=\"joe_slider\"></div>');\r\n\r\n        this.$sliderDiv.css({\r\n            width: this.horVert ? \"100%\" : \"4px\",\r\n            height: this.horVert ? \"4px\" : \"100%\",\r\n            cursor: this.horVert ? \"row-resize\" : \"col-resize\",\r\n        });\r\n\r\n        if(this.firstLast){\r\n            this.$sliderDiv.css({\r\n                top: \"0px\",\r\n                left: \"0px\"\r\n            });\r\n        } else {\r\n            if(this.horVert){\r\n                this.$sliderDiv.css({\r\n                    bottom: \"0px\",\r\n                    left: \"0px\"\r\n                });    \r\n            } else {\r\n                this.$sliderDiv.css({\r\n                    top: \"0px\",\r\n                    right: \"0px\"\r\n                });    \r\n            }\r\n        }\r\n\r\n        this.$container.append(this.$sliderDiv);\r\n\r\n        this.$sliderDiv.on(\"mousedown\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(\"mousemove.slider\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                let dy = mm.clientY - y;\r\n\r\n                that.slide(dx, dy);\r\n                \r\n                x = mm.clientX;\r\n                y = mm.clientY;\r\n\r\n            });\r\n\r\n            jQuery(document).on(\"mouseup.slider\", () => {\r\n                jQuery(document).off(\"mousemove.slider\");\r\n                jQuery(document).off(\"mouseup.slider\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        setTimeout(() => {\r\n            that.slide(1, 1);\r\n        }, 600);\r\n\r\n    }\r\n\r\n    setColor(color: string){\r\n        this.$sliderDiv.css('background-color', color);\r\n    }\r\n\r\n    slide(dx: number, dy: number){\r\n        if(this.horVert){\r\n            let height = Number.parseInt(this.$container.css('height').replace('px', ''));\r\n            let otherHeight = Number.parseInt(this.$otherDiv.css('height').replace('px', ''));\r\n            let newHeight = this.firstLast ? height -= dy : height += dy;\r\n            let newOtherHeight = this.firstLast ? otherHeight += dy : otherHeight -= dy;\r\n            this.$container.css('height', newHeight + \"px\");\r\n            this.$otherDiv.css('height', newOtherHeight + \"px\");\r\n            this.callback(newHeight);\r\n        } else {\r\n            let width = Number.parseInt(this.$container.css('width').replace('px', ''));\r\n            let otherWidth = Number.parseInt(this.$otherDiv.css('width').replace('px', ''));\r\n            let newWidth = this.firstLast ? width -= dx : width += dx;\r\n            let newOtherWidth = this.firstLast ? otherWidth += dx : otherWidth -= dx;\r\n            this.$container.css('width', newWidth + \"px\");\r\n            this.$otherDiv.css('width', newOtherWidth + \"px\");\r\n            this.callback(newWidth);\r\n        }\r\n        this.$container.css('flex', \"0 1 auto\");\r\n\r\n    }\r\n\r\n\r\n}","import { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\nimport { openContextMenu, makeEditable } from \"../tools/HtmlTools.js\";\r\nimport { JOScript, ScriptType } from \"./EmbeddedStarter.js\";\r\n\r\ntype FileData = {\r\n    type: ScriptType,\r\n    module?: Module,\r\n    hint?: string,\r\n    $fileDiv: JQuery<HTMLElement>\r\n}\r\n\r\nexport class EmbeddedFileExplorer {\r\n\r\n    currentFile: FileData;\r\n    files: FileData[] = [];\r\n\r\n    constructor(private moduleStore: ModuleStore, private $fileListDiv: JQuery<HTMLElement>, private main: MainEmbedded) {\r\n\r\n        let that = this;\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n\r\n            this.addModule(module);\r\n\r\n        }\r\n\r\n        let $filesDiv = $fileListDiv.parent();\r\n        let $addButton = jQuery('<div class=\"joe_addFileButton jo_button img_add-dark jo_active\" title=\"Datei hinzufügen\"></div>');\r\n        $filesDiv.append($addButton);\r\n\r\n        $addButton.on(\"click\", () => {\r\n\r\n            let module = this.main.addModule({ text: \"\", title: \"Neue Datei.java\", type: \"sql\" });\r\n            let fileData = this.addModule(module);\r\n\r\n            this.renameElement(fileData, () => {\r\n                // if there's no file yet and then one is added and subsequently renamed: select it!\r\n                if (that.currentFile != fileData) {\r\n                    that.selectFile(fileData);\r\n                }\r\n            });\r\n        });\r\n\r\n\r\n    }\r\n\r\n    removeAllFiles() {\r\n        this.files.forEach(f => this.removeFile(f));\r\n    }\r\n\r\n\r\n    addHint(script: JOScript): void {\r\n        let that = this;\r\n        let $fileDiv = jQuery('<div class=\"jo_file jo_hint\" ><div class=\"jo_fileimage\"></div><div class=\"jo_filename\" style=\"line-height: 22px\">' +\r\n            script.title + '</div><div class=\"jo_additionalButtons\"></div></div></div>');\r\n        this.$fileListDiv.append($fileDiv);\r\n\r\n        let fileData: FileData = {\r\n            module: null,\r\n            $fileDiv: $fileDiv,\r\n            type: \"hint\",\r\n            hint: script.text\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    addModule(module: Module): FileData {\r\n        let that = this;\r\n        let $fileDiv = jQuery(`<div class=\"jo_file jo_java\" >\r\n        <div class=\"jo_fileimage\"></div>\r\n        <div class=\"jo_filename\" style=\"line-height: 22px\">${module.file.name}</div>\r\n        <div class=\"jo_additionalButtonStart\"></div>\r\n        <div class=\"jo_delete img_delete jo_button jo_active\" title=\"Datei löschen\"></div></div></div>`);\r\n        this.$fileListDiv.append($fileDiv);\r\n\r\n        let fileData: FileData = {\r\n            module: module,\r\n            $fileDiv: $fileDiv,\r\n            type: \"sql\"\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        module.file.panelElement = {\r\n            name: module.file.name,\r\n            $htmlFirstLine: $fileDiv,\r\n            isFolder: false,\r\n            path: []\r\n        }\r\n\r\n        $fileDiv.find('.jo_delete').on(\"mousedown\", (e: JQuery.MouseDownEvent) => {\r\n            that.onDelete(fileData, e);\r\n        })\r\n\r\n        $fileDiv.find('.jo_delete').on(\"click\", (e) => { e.preventDefault(); e.stopPropagation() });\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n        $fileDiv[0].addEventListener(\"contextmenu\", function (event) {\r\n            event.preventDefault();\r\n            openContextMenu([{\r\n                caption: \"Umbenennen\",\r\n                callback: () => {\r\n                    that.renameElement(fileData, () => { });\r\n                }\r\n            }], event.pageX, event.pageY);\r\n        }, false);\r\n\r\n        return fileData;\r\n\r\n    }\r\n\r\n    onDelete(fileData: FileData, ev: JQuery.MouseDownEvent) {\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n        let that = this;\r\n        openContextMenu([{\r\n            caption: \"Abbrechen\",\r\n            callback: () => {\r\n                // nothing to do.\r\n            }\r\n        }, {\r\n            caption: \"Ich bin mir sicher: löschen!\",\r\n            color: \"#ff6060\",\r\n            callback: () => {\r\n                that.removeFile(fileData);\r\n            }\r\n        }], ev.pageX + 2, ev.pageY + 2);\r\n\r\n    }\r\n\r\n    removeFile(fileData: FileData) {\r\n        fileData.$fileDiv.remove();\r\n        this.main.removeModule(fileData.module);\r\n        this.files = this.files.filter((fd) => fd != fileData);\r\n        if (this.currentFile == fileData) {\r\n            if (this.files.length > 0) {\r\n                this.selectFile(this.files[0]);\r\n            } else {\r\n                this.main.getMonacoEditor().setValue(\"Keine Datei vorhanden.\");\r\n                this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n            }\r\n        }\r\n\r\n        this.files.forEach((file) => {\r\n            if(file.module != null){                // Hints have module == null\r\n                file.module.file.saved = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        for (let fileData of this.files) {\r\n            if (fileData.module == module) {\r\n                this.removeFile(fileData);\r\n            }\r\n        }\r\n    }\r\n\r\n    renameElement(fileData: FileData, callback: () => void) {\r\n        let that = this;\r\n        let $div = fileData.$fileDiv.find('.jo_filename');\r\n        let pointPos = fileData.module.file.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        makeEditable($div, $div, (newText: string) => {\r\n            fileData.module.file.name = newText;\r\n            $div.html(newText);\r\n            if (callback != null) callback();\r\n        }, selection);\r\n\r\n    }\r\n\r\n\r\n    setFirstFileActive() {\r\n        if (this.files.length > 0) {\r\n            this.selectFile(this.files[0]);\r\n        }\r\n    }\r\n\r\n    selectFile(fileData: FileData) {\r\n        if (fileData == null) return;\r\n        switch (fileData.type) {\r\n            case \"sql\":\r\n                this.main.$hintDiv.hide();\r\n                this.main.$monacoDiv.show();\r\n                this.main.setModuleActive(fileData.module);\r\n                this.main.getMonacoEditor().focus();\r\n                break;\r\n            case \"hint\":\r\n                this.main.$monacoDiv.hide();\r\n                this.main.$hintDiv.show();\r\n\r\n                let syntaxMap: { [code: string]: string } = {};\r\n                let code: string[] = [];\r\n\r\n                //@ts-ignore\r\n                let md1 = window.markdownit({\r\n                    highlight: function (str, lang) {\r\n                        code.push(str);\r\n                        return \"\";\r\n                    }\r\n                });\r\n\r\n                md1.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                    var token = tokens[idx];\r\n                    code.push(token.content);\r\n                    // pass token to default renderer.\r\n                    return \"\"; //md1.renderer.rules.code_block(tokens, idx, options, env, self);\r\n                };\r\n\r\n                md1.render(fileData.hint);\r\n\r\n                this.colorize(code, syntaxMap, () => {\r\n                    //@ts-ignore\r\n                    let md2 = window.markdownit({\r\n                        highlight: function (str, lang) {\r\n                            return syntaxMap[str];\r\n                        }\r\n                    });\r\n\r\n                    md2.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                        var token = tokens[idx];\r\n                        // pass token to default renderer.\r\n                        return syntaxMap[token.content].replace(\"<br/>\", \"\");\r\n                    };\r\n\r\n\r\n                    let html = md2.render(fileData.hint);\r\n                    this.main.$hintDiv.html(html);\r\n                });\r\n                this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n                fileData.$fileDiv.addClass('jo_active');\r\n                break;\r\n        }\r\n    }\r\n\r\n    colorize(code: string[], codeMap: { [code: string]: string }, callback: () => void) {\r\n        let that = this;\r\n        if (code.length > 0) {\r\n            let uncoloredtext = code.pop();\r\n            monaco.editor.colorize(uncoloredtext, 'myJava', { tabSize: 3 }).then((text) => {\r\n                codeMap[uncoloredtext] = text;\r\n                that.colorize(code, codeMap, callback);\r\n            }\r\n            );\r\n        } else {\r\n            callback();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    markFile(module: Module) {\r\n        this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n\r\n        this.currentFile = this.files.find((fileData) => fileData.module == module);\r\n\r\n        if (this.currentFile != null) this.currentFile.$fileDiv.addClass('jo_active');\r\n\r\n    }\r\n\r\n\r\n\r\n}","export class EmbeddedIndexedDB {\r\n\r\n    private db: IDBDatabase;\r\n\r\n    constructor(private databaseIdentifier: string){\r\n\r\n    }\r\n\r\n    public open(successCallback: () => void) {\r\n\r\n        if (window.indexedDB) {\r\n\r\n            let request: IDBOpenDBRequest = window.indexedDB.open(this.databaseIdentifier, 1);\r\n\r\n            let that = this;\r\n\r\n            request.onerror = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                console.log(\"Couldn't open IndexedDB: \" + ev.type);\r\n            };\r\n\r\n            request.onsuccess = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                that.db = request.result;\r\n                that.db.onerror = function(event) {\r\n                    // Allgemeine Fehlerbehandlung, die für alle Anfragen an die Datenbank gilt. \r\n                    // @ts-ignore\r\n                    console.log(\"Datenbankfehler: \" + event.target.error.message);\r\n                  };\r\n                  successCallback();\r\n            };\r\n\r\n            request.onupgradeneeded = function(ev: Event){\r\n                // @ts-ignore\r\n                that.db = ev.target.result;\r\n                let objectStoreScripts = that.db.createObjectStore(\"scripts\", { keyPath: \"scriptId\", autoIncrement: false});\r\n                objectStoreScripts.transaction.oncomplete = function(event) {}\r\n\r\n                let objectStoreDatabases = that.db.createObjectStore(\"databases\", { keyPath: \"databaseId\", autoIncrement: false});\r\n                objectStoreScripts.transaction.oncomplete = function(event) {}\r\n\r\n            }\r\n\r\n        } else {\r\n            console.log(\"IndexedDB not available.\");\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public writeScript(scriptId: string, script: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.put({\r\n            scriptId: scriptId,\r\n            script: script\r\n        });\r\n\r\n    }\r\n\r\n    public removeScript(scriptId: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.delete(scriptId);\r\n\r\n    }\r\n\r\n\r\n    public getScript(scriptId: string, callback: (script: string) => void){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        let request = scriptObjectStore.get(scriptId);\r\n\r\n        request.onerror = (event) => {\r\n            callback(null);\r\n        }\r\n\r\n        request.onsuccess = (event) => {\r\n            if(request.result == null){\r\n                callback(null);\r\n            } else {\r\n                callback(request.result.script);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public writeDatabase(databaseID: string, database: string){\r\n\r\n        let databaseObjectStore = this.db.transaction(\"databases\", \"readwrite\").objectStore(\"databases\");\r\n\r\n        databaseObjectStore.put({\r\n            databaseId: databaseID,\r\n            database: database\r\n        });\r\n\r\n    }\r\n\r\n    public removeDatabase(databaseId: string){\r\n\r\n        let databaseObjectStore = this.db.transaction(\"databases\", \"readwrite\").objectStore(\"databases\");\r\n\r\n        databaseObjectStore.delete(databaseId);\r\n\r\n    }\r\n\r\n\r\n    public getDatabase(databaseId: string, callback: (database: string) => void){\r\n\r\n        let databaseObjectStore = this.db.transaction(\"databases\", \"readwrite\").objectStore(\"databases\");\r\n\r\n        let request = databaseObjectStore.get(databaseId);\r\n\r\n        request.onerror = (event) => {\r\n            callback(null);\r\n        }\r\n\r\n        request.onsuccess = (event) => {\r\n            if(request.result == null){\r\n                callback(null);\r\n            } else {\r\n                callback(request.result.database);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { SQLStatement } from \"../compiler/parser/Parser.js\";\r\nimport { WriteQueryListener } from \"../main/gui/ResultsetPresenter.js\";\r\nimport { DatabaseTool } from \"../tools/DatabaseTools.js\";\r\nimport { EmbeddedIndexedDB } from \"./EmbeddedIndexedDB.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\n\r\n\r\nexport class WriteQueryManager implements WriteQueryListener {\r\n\r\n    indexedDB: EmbeddedIndexedDB;\r\n    databaseTool: DatabaseTool;\r\n\r\n    statementsToExecute: string[] = [];\r\n\r\n    writtenStatements: string[] = [];\r\n\r\n    statementsToWrite: string[] = [];\r\n\r\n\r\n    constructor(private main: MainEmbedded, private databaseIdentifier: string) {\r\n\r\n    }\r\n\r\n    indexedDBReady(indexedDB: EmbeddedIndexedDB) {\r\n        this.indexedDB = indexedDB;\r\n        this.indexedDB.getDatabase(this.databaseIdentifier, (db: string) => {\r\n            if (db != null) {\r\n                this.writtenStatements = JSON.parse(db);\r\n                this.statementsToExecute = this.writtenStatements.slice();\r\n\r\n                this.main.historyViewer.clear();\r\n                this.main.historyViewer.appendStatements(this.statementsToExecute);\r\n\r\n                this.executeStatements();\r\n                this.writeStatementsIfNecessary();\r\n            }\r\n        })\r\n    }\r\n\r\n    reset() {\r\n        this.statementsToWrite = [];\r\n        this.writtenStatements = [];\r\n        this.statementsToExecute = [];\r\n        this.main.historyViewer.clear();\r\n    }\r\n\r\n    writeStatementsIfNecessary() {\r\n        if (this.indexedDB != null && this.statementsToWrite.length > 0) {\r\n            this.forceWriteStatements();\r\n        }\r\n    }\r\n\r\n    forceWriteStatements() {\r\n        this.writtenStatements = this.writtenStatements.concat(this.statementsToWrite);\r\n        this.statementsToWrite = [];\r\n        this.indexedDB.writeDatabase(this.databaseIdentifier, JSON.stringify(this.writtenStatements));\r\n    }\r\n\r\n    atLeastOneExecuted: boolean = false;\r\n    count: number;\r\n    executeStatements() {\r\n        if (this.databaseTool != null && this.statementsToExecute.length > 0) {\r\n            if (!this.atLeastOneExecuted) {\r\n                this.main.$databaseResetButton.fadeIn(200);\r\n                this.count = this.statementsToExecute.length;\r\n                this.main.waitOverlay.show(\"Schreibe lokale Datenbankänderungen ...\");\r\n            }\r\n            this.main.waitOverlay.setProgress(Math.round(100 * (1 - this.statementsToExecute.length / this.count)) + \" %\")\r\n            let statement = this.statementsToExecute.shift();\r\n            this.atLeastOneExecuted = true;\r\n            this.databaseTool.executeQuery(statement, () => { this.executeStatements() }, () => { this.executeStatements() });\r\n        } else {\r\n            if (this.atLeastOneExecuted) {\r\n                this.main.databaseExplorer.refresh();\r\n                this.atLeastOneExecuted = false;\r\n                this.main.waitOverlay.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    notify(statements: SQLStatement[]): void {\r\n        this.main.$databaseResetButton.fadeIn(200);\r\n        let statementsSql = statements.map(stmt => stmt.sqlCleaned == null ? stmt.sql : stmt.sqlCleaned);\r\n        this.statementsToWrite = this.statementsToWrite.concat(statementsSql);\r\n        this.main.historyViewer.appendStatements(statementsSql);\r\n        this.writeStatementsIfNecessary();\r\n    }\r\n\r\n    databaseReady(dbTool: DatabaseTool) {\r\n        this.databaseTool = dbTool;\r\n        this.executeStatements();\r\n    }\r\n\r\n    rollback() {\r\n        this.writeStatementsIfNecessary();\r\n        this.writtenStatements.pop();\r\n        this.forceWriteStatements();\r\n    }\r\n\r\n\r\n\r\n}","import { MainBase } from \"../main/MainBase.js\";\r\nimport { DatabaseTool } from \"./DatabaseTools.js\";\r\nimport { MySqlImporter } from \"./MySqlImporter.js\";\r\n\r\nexport type LoadableDatabase = {\r\n    binDump?: Uint8Array,\r\n    statements?: string[]\r\n}\r\n\r\nexport class DatabaseFetcher {\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    public async load(url: string): Promise<LoadableDatabase> {\r\n        let urlWithoutProtocol = url.replace(\"https://\", \"\")\r\n            .replace(\"http://\", \"\").toLocaleLowerCase();\r\n\r\n        let urlLowerCase = urlWithoutProtocol.toLocaleLowerCase();\r\n\r\n        let templateDump: Uint8Array = await this.fetchTemplateFromCache(urlWithoutProtocol);\r\n        if (templateDump != null) {\r\n            if (DatabaseTool.getDumpType(templateDump) == \"binaryCompressed\") {\r\n                // @ts-ignore\r\n                templateDump = pako.inflate(templateDump);\r\n            }\r\n            return { binDump: templateDump }\r\n        }\r\n\r\n        let db: LoadableDatabase;\r\n        if (urlLowerCase.endsWith(\".sqlite\")) {\r\n            db = await this.loadSqLiteDump(url, urlWithoutProtocol);\r\n        } else if (urlLowerCase.endsWith(\".zip\") || urlLowerCase.endsWith(\".sql\")) {\r\n            db = await this.loadMySql(url, urlWithoutProtocol);\r\n        }\r\n\r\n        this.saveDatabaseToCache(urlWithoutProtocol, db.binDump);\r\n\r\n        return db;\r\n\r\n    }\r\n\r\n    loadMySql(url: string, urlWithoutProtocol: string): LoadableDatabase | PromiseLike<LoadableDatabase> {\r\n        let mySqlImporter = new MySqlImporter(this.main);\r\n        return mySqlImporter.loadFromUrl(url);\r\n    }\r\n\r\n    async loadSqLiteDump(url: string, urlWithoutProtocol: string): Promise<LoadableDatabase> {\r\n\r\n        return new Promise((resolve, reject) => {\r\n            jQuery.ajax({\r\n                type: 'GET',\r\n                async: true,\r\n                url: url,\r\n                xhrFields: { responseType: 'arraybuffer' },\r\n                success: function (response: any) {\r\n                    let db = new Uint8Array(response);\r\n                    // @ts-ignore\r\n                    if (DatabaseTool.getDumpType(db) == \"binaryCompressed\") db = pako.inflate(db);\r\n                    resolve({ binDump: db });\r\n                },\r\n                error: function (jqXHR, message) {\r\n                    reject(message);\r\n                }\r\n            });\r\n\r\n        })\r\n\r\n    }\r\n\r\n    cutSqlToStatements(sql: string): string[] {\r\n        sql = sql.replace(/\\r\\n/g, \"\\n\");\r\n\r\n        let statements: string[] = [];\r\n        if (sql.indexOf(\"~@~\") >= 0) {\r\n            statements = sql.split(\"~@~\");\r\n        } else {\r\n            statements = sql.split(\";\\n\");\r\n        }\r\n        return statements;\r\n    }\r\n\r\n\r\n    async fetchTemplateFromCache(databaseIdentifier: string): Promise<Uint8Array> {\r\n        if (databaseIdentifier == null) { return null; }\r\n\r\n        if (!this.cacheAvailable()) return (null);\r\n\r\n        let cache = await caches.open('my-cache');\r\n\r\n        let value = await cache.match(databaseIdentifier);\r\n\r\n        if(value == null) return null;\r\n\r\n        let buffer = await value.arrayBuffer();\r\n\r\n        return new Uint8Array(buffer);\r\n\r\n    }\r\n\r\n    async saveDatabaseToCache(databaseIdentifier: string, templateDump: Uint8Array | string) {\r\n        if (!this.cacheAvailable()) return;\r\n\r\n        let cache = await caches.open('my-cache');\r\n\r\n        cache.put(databaseIdentifier, new Response(templateDump));\r\n    }\r\n\r\n    cacheAvailable(): boolean {\r\n        return 'caches' in self;\r\n    }\r\n\r\n}","import { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { Module, File } from \"../compiler/parser/Module.js\";\r\nimport { ActionManager } from \"../main/gui/ActionManager.js\";\r\nimport { BottomDiv } from \"../main/gui/BottomDiv.js\";\r\nimport { Editor } from \"../main/gui/Editor.js\";\r\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\r\nimport { RightDiv } from \"../main/gui/RightDiv.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { JOScript } from \"./EmbeddedStarter.js\";\r\nimport { makeDiv, makeTabs, openContextMenu } from \"../tools/HtmlTools.js\";\r\nimport { EmbeddedSlider } from \"./EmbeddedSlider.js\";\r\nimport { EmbeddedFileExplorer } from \"./EmbeddedFileExplorer.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { EmbeddedIndexedDB } from \"./EmbeddedIndexedDB.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { DatabaseTool } from \"../tools/DatabaseTools.js\";\r\nimport { DatabaseExplorer } from \"../main/gui/DatabaseExplorer.js\";\r\nimport { ResultsetPresenter } from \"../main/gui/ResultsetPresenter.js\";\r\nimport { WaitOverlay } from \"../main/gui/WaitOverlay.js\";\r\nimport { WriteQueryManager } from \"./WriteQueryManager.js\";\r\nimport { DatabaseFetcher } from \"../tools/DatabaseLoader.js\";\r\nimport { DatabaseImportExport } from \"../tools/DatabaseImportExport.js\";\r\nimport { HistoryViewer } from \"../main/gui/HistoryViewer.js\";\r\nimport { WDatabase } from \"../workspace/WDatabase.js\";\r\n\r\ntype JavaOnlineConfig = {\r\n    withFileList?: boolean,\r\n    withOutput?: boolean,\r\n    withErrorList?: boolean,\r\n    withBottomPanel?: boolean,\r\n    id?: string,\r\n    databaseURL?: string\r\n}\r\n\r\nexport class MainEmbedded implements MainBase {\r\n    isEmbedded(): boolean { return true; }\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        if (this.config.withFileList) {\r\n            return this.fileExplorer.currentFile?.module;\r\n        } else {\r\n            return this.currentWorkspace.moduleStore.getFirstModule();\r\n        }\r\n    }\r\n\r\n    getDatabaseTool(): DatabaseTool {\r\n        return this.databaseTool;\r\n    }\r\n\r\n    getDatabaseExplorer(): DatabaseExplorer {\r\n        return this.databaseExplorer;\r\n    }\r\n\r\n    getResultsetPresenter(): ResultsetPresenter {\r\n        return this.resultsetPresenter;\r\n    }\r\n\r\n    getWaitOverlay(): WaitOverlay {\r\n        return this.waitOverlay;\r\n    }\r\n\r\n    getHistoryViewer(): HistoryViewer {\r\n        return this.historyViewer;\r\n    }\r\n\r\n    config: JavaOnlineConfig;\r\n\r\n    editor: Editor;\r\n    programPointerDecoration: string[] = [];\r\n    programPointerModule: Module;\r\n\r\n    currentWorkspace: Workspace;\r\n    actionManager: ActionManager;\r\n\r\n    compiler: Compiler;\r\n\r\n    $dbTreeDiv: JQuery<HTMLElement>;\r\n\r\n    $debuggerDiv: JQuery<HTMLElement>;\r\n\r\n    bottomDiv: BottomDiv;\r\n    $filesListDiv: JQuery<HTMLElement>;\r\n\r\n    $hintDiv: JQuery<HTMLElement>;\r\n    $monacoDiv: JQuery<HTMLElement>;\r\n    $codeResetButton: JQuery<HTMLElement>;\r\n    $databaseResetButton: JQuery<HTMLElement>;\r\n\r\n    programIsExecutable = false;\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    rightDiv: RightDiv;\r\n    $rightDivInner: JQuery<HTMLElement>;\r\n\r\n    fileExplorer: EmbeddedFileExplorer;\r\n\r\n    debounceDiagramDrawing: any;\r\n\r\n    indexedDB: EmbeddedIndexedDB;\r\n\r\n    compileRunsAfterCodeReset: number = 0;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    databaseTool: DatabaseTool;\r\n\r\n    databaseExplorer: DatabaseExplorer;\r\n\r\n    waitOverlay: WaitOverlay;\r\n\r\n    resultsetPresenter: ResultsetPresenter;\r\n\r\n    writeQueryManager: WriteQueryManager;\r\n\r\n    historyViewer: HistoryViewer;\r\n\r\n    initialTemplateDump: Uint8Array;\r\n    initialStatements: string[];\r\n\r\n    constructor($div: JQuery<HTMLElement>, private scriptList: JOScript[]) {\r\n\r\n        this.readConfig($div);\r\n\r\n        this.writeQueryManager = new WriteQueryManager(this, this.config.databaseURL == null ? \"Empty database\" : this.config.databaseURL);\r\n\r\n        this.initGUI($div);\r\n\r\n\r\n        this.databaseExplorer = new DatabaseExplorer(this, this.$dbTreeDiv);\r\n        this.databaseTool = new DatabaseTool(this);\r\n        if (this.config.databaseURL != null) {\r\n            new DatabaseFetcher(this).load(this.config.databaseURL).then((loadableDb) => {\r\n                this.initialTemplateDump = loadableDb.binDump;\r\n                this.initialStatements = loadableDb.statements == null ? [] : loadableDb.statements;\r\n                this.initDatabase();\r\n            }).catch((error: string)=>{\r\n                alert('Fehler beim Landen der Datenbank: ' + error)\r\n            })\r\n        } else {\r\n            this.initDatabase();\r\n        }\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n    }\r\n\r\n    initDatabase(){\r\n        this.resetDatabase(() => {\r\n            this.initScripts();\r\n\r\n            this.indexedDB = new EmbeddedIndexedDB(\"SQL-IDE\");\r\n            this.indexedDB.open(() => {\r\n\r\n                if (this.config.id != null) {\r\n                    this.writeQueryManager.indexedDBReady(this.indexedDB);\r\n                    this.readScripts();\r\n                }\r\n\r\n            });\r\n\r\n        });\r\n    }\r\n\r\n    resetDatabase(callback: () => void) {\r\n        this.databaseTool.initializeWorker(this.initialTemplateDump, this.initialStatements, () => { }, () => {\r\n            this.writeQueryManager.databaseReady(this.databaseTool);\r\n            this.databaseExplorer.refreshAfterRetrievingDBStructure();\r\n            callback();\r\n        })\r\n    }\r\n\r\n    initScripts() {\r\n\r\n        this.fileExplorer?.removeAllFiles();\r\n\r\n        this.initWorkspace(this.scriptList);\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer = new EmbeddedFileExplorer(this.currentWorkspace.moduleStore, this.$filesListDiv, this);\r\n            this.fileExplorer.setFirstFileActive();\r\n            this.scriptList.filter((script) => script.type == \"hint\").forEach((script) => this.fileExplorer.addHint(script));\r\n        } else {\r\n            this.setModuleActive(this.currentWorkspace.moduleStore.getFirstModule());\r\n        }\r\n\r\n    }\r\n\r\n\r\n    readConfig($div: JQuery<HTMLElement>) {\r\n        let configJson: string | object = $div.data(\"sql-online\");\r\n        if (configJson != null && typeof configJson == \"string\") {\r\n            this.config = JSON.parse(configJson.split(\"'\").join('\"'));\r\n        } else {\r\n            this.config = {}\r\n        }\r\n\r\n        if (this.config.withFileList == null) this.config.withFileList = false;\r\n        if (this.config.withOutput == null) this.config.withOutput = true;\r\n        if (this.config.withErrorList == null) this.config.withErrorList = true;\r\n        if (this.config.withBottomPanel == null) this.config.withBottomPanel = true;\r\n\r\n        if (!(this.config.withOutput || this.config.withFileList || this.config.withErrorList)) {\r\n            this.config.withBottomPanel = false;\r\n        }\r\n\r\n        if (!this.config.withBottomPanel) {\r\n            this.config.withFileList = false;\r\n            this.config.withOutput = false;\r\n            this.config.withErrorList = false;\r\n        }\r\n\r\n        if(this.config.databaseURL != null){\r\n            ['http:', 'https:'].forEach(protocol => {\r\n                if(this.config.databaseURL.startsWith(protocol) && !this.config.databaseURL.startsWith(protocol + \"://\")){\r\n                    this.config.databaseURL = this.config.databaseURL.replace(protocol, protocol + \"//\");\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n\r\n        if (this.config.withFileList && this.fileExplorer.currentFile != null) {\r\n            this.fileExplorer.currentFile.module.editorState = this.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer.markFile(module);\r\n        }\r\n\r\n        /**\r\n         * WICHTIG: Die Reihenfolge der beiden Operationen ist extrem wichtig.\r\n         * Falls das Model im readonly-Zustand gesetzt wird, funktioniert <Strg + .> \r\n         * nicht und die Lightbulbs werden nicht angezeigt, selbst dann, wenn\r\n         * später readonly = false gesetzt wird.\r\n         */\r\n        this.getMonacoEditor().updateOptions({\r\n            readOnly: false,\r\n            lineNumbersMinChars: 4\r\n        });\r\n        this.editor.editor.setModel(module.model);\r\n\r\n\r\n        if (module.editorState != null) {\r\n            this.getMonacoEditor().restoreViewState(module.editorState);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    readScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let that = this;\r\n\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                setInterval(() => {\r\n                    that.saveScripts();\r\n                }, 1000);\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n                let countDown = scriptList.length;\r\n\r\n                for (let module of modules) {\r\n                    that.fileExplorer?.removeModule(module);\r\n                    that.removeModule(module);\r\n                }\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.getScript(scriptId, (script) => {\r\n                        if (script != null) {\r\n\r\n                            let module = that.addModule({\r\n                                title: name,\r\n                                text: script,\r\n                                type: \"sql\"\r\n                            });\r\n\r\n                            that.fileExplorer?.addModule(module);\r\n                            that.$codeResetButton.fadeIn(1000);\r\n\r\n                            // console.log(\"Retrieving script \" + scriptId);\r\n                        }\r\n                        countDown--;\r\n                        if (countDown == 0) {\r\n                            setInterval(() => {\r\n                                that.saveScripts();\r\n                            }, 1000);\r\n                            that.fileExplorer?.setFirstFileActive();\r\n                            if (that.fileExplorer == null) {\r\n                                let modules = that.currentWorkspace.moduleStore.getModules(false);\r\n                                if (modules.length > 0) that.setModuleActive(modules[0]);\r\n                            }\r\n                        }\r\n                    })\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    saveScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let scriptList: string[] = [];\r\n        let oneNotSaved: boolean = false;\r\n\r\n        modules.forEach(m => oneNotSaved = oneNotSaved || !m.file.saved);\r\n\r\n        if (oneNotSaved) {\r\n\r\n            for (let module of modules) {\r\n                scriptList.push(module.file.name);\r\n                let scriptId = this.config.id + module.file.name;\r\n                this.indexedDB.writeScript(scriptId, module.getProgramTextFromMonacoModel());\r\n                module.file.saved = true;\r\n                // console.log(\"Saving script \" + scriptId);\r\n            }\r\n\r\n            this.indexedDB.writeScript(this.config.id, JSON.stringify(scriptList));\r\n        }\r\n\r\n    }\r\n\r\n    deleteScriptsInDB() {\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                return;\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.removeScript(scriptId);\r\n                }\r\n\r\n                this.indexedDB.removeScript(this.config.id);\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    initWorkspace(scriptList: JOScript[]) {\r\n        this.currentWorkspace = new Workspace(\"Embedded-Workspace\", this, 0);\r\n\r\n        let i = 0;\r\n        for (let script of scriptList) {\r\n            if (script.type == \"sql\") {\r\n                this.addModule(script);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    addModule(script: JOScript): Module {\r\n        let module: Module = Module.restoreFromData({\r\n            id: this.currentWorkspace.moduleStore.getModules(true).length,\r\n            name: script.title,\r\n            text: script.text,\r\n            text_before_revision: null,\r\n            submitted_date: null,\r\n            student_edited_after_revision: false,\r\n            version: 1,\r\n            workspace_id: 0,\r\n            forceUpdate: false,\r\n            file_type: 11\r\n        }, this);\r\n\r\n        this.currentWorkspace.moduleStore.putModule(module);\r\n\r\n        let that = this;\r\n\r\n        module.model.onDidChangeContent(() => {\r\n            that.considerShowingCodeResetButton();\r\n        });\r\n\r\n        return module;\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        this.currentWorkspace.moduleStore.removeModule(module);\r\n    }\r\n\r\n\r\n    initGUI($div: JQuery<HTMLElement>) {\r\n\r\n        // let $leftDiv = jQuery('<div class=\"joe_leftDiv\"></div>');\r\n\r\n        $div.css({\r\n            \"background-image\": \"none\",\r\n            \"background-size\": \"100%\"\r\n        })\r\n\r\n        let $centerDiv = jQuery('<div class=\"joe_centerDiv\"></div>');\r\n\r\n        // let $topDiv = jQuery('<div class=\"joe_topDiv\"></div>');\r\n        // $div.append($topDiv);\r\n        $div.append($centerDiv);\r\n\r\n        let $waitDiv = this.makeWaitDiv();\r\n        $div.append($waitDiv);\r\n        this.waitOverlay = new WaitOverlay($waitDiv);\r\n\r\n        let $codeResetModalWindow = this.makeCodeResetModalWindow($div);\r\n        let $databaseResetModalWindow = this.makeDatabaseResetModalWindow($div);\r\n\r\n        let $rightDiv = this.makeRightDiv();\r\n\r\n        let $editorDiv = jQuery('<div class=\"joe_editorDiv\"></div>');\r\n        this.$monacoDiv = jQuery('<div class=\"joe_monacoDiv\"></div>');\r\n        this.$hintDiv = jQuery('<div class=\"joe_hintDiv jo_scrollable\"></div>');\r\n        this.$codeResetButton = jQuery('<div class=\"joe_codeResetButton jo_button jo_active\" title=\"Code auf Ausgangszustand zurücksetzen\">Code Reset</div>');\r\n        this.$databaseResetButton = jQuery('<div class=\"joe_databaseResetButton jo_button jo_active\" title=\"Datenbank auf Ausgangszustand zurücksetzen\">Datenbank Reset</div>');\r\n\r\n        $editorDiv.append(this.$monacoDiv, this.$hintDiv, this.$databaseResetButton);\r\n        this.$monacoDiv.append(this.$codeResetButton);\r\n\r\n        let $bracketErrorDiv = this.makeBracketErrorDiv();\r\n        $editorDiv.append($bracketErrorDiv);\r\n\r\n        // $topDiv.append($editorDiv);\r\n\r\n        this.$codeResetButton.hide();\r\n\r\n        this.$codeResetButton.on(\"click\", () => { $codeResetModalWindow.show(); })\r\n\r\n        this.$databaseResetButton.hide();\r\n\r\n        this.$databaseResetButton.on(\"click\", () => { $databaseResetModalWindow.show(); })\r\n\r\n        this.$hintDiv.hide();\r\n\r\n        let $controlsDiv = jQuery('<div class=\"joe_controlsDiv\"></div>');\r\n        let $bottomDivInner = jQuery('<div class=\"joe_bottomDivInner\"></div>');\r\n\r\n\r\n        let $bottomDiv = jQuery('<div class=\"joe_bottomDiv\"></div>');\r\n        this.makeBottomDiv($bottomDivInner, $controlsDiv);\r\n        $bottomDiv.append($bottomDivInner);\r\n        if (this.config.withFileList) {\r\n            let $filesDiv = this.makeFilesDiv();\r\n            $bottomDiv.prepend($filesDiv);\r\n            new EmbeddedSlider($filesDiv, false, false, () => { });\r\n        }\r\n        makeTabs($bottomDivInner);\r\n        $div.append($bottomDiv);\r\n\r\n        $div.addClass('joe_javaOnlineDiv');\r\n\r\n        this.editor = new Editor(this, false, true);\r\n        this.editor.initGUI(this.$monacoDiv);\r\n        this.$monacoDiv.find('.monaco-editor').css('z-index', '10');\r\n\r\n        if ($div.attr('tabindex') == null) $div.attr('tabindex', \"0\");\r\n        this.actionManager = new ActionManager($div, this);\r\n        this.actionManager.init();\r\n\r\n        this.bottomDiv = new BottomDiv(this, $bottomDivInner, $div);\r\n        this.bottomDiv.initGUI();\r\n\r\n        this.rightDiv = new RightDiv(this, this.$rightDivInner);\r\n        this.rightDiv.initGUI();\r\n\r\n        $centerDiv.append($editorDiv, $bottomDiv)\r\n        $div.append($rightDiv);\r\n\r\n        let $rightSideContainer = jQuery('<div class=\"jo_rightdiv-rightside-container\"></div>');\r\n        let $infoButton = jQuery('<div class=\"jo_button jo_active img_ellipsis-dark\" style=\"margin-right: 10px\"></div>');\r\n\r\n        $controlsDiv.append($infoButton);\r\n\r\n        this.$rightDivInner.append($rightSideContainer);\r\n\r\n        new EmbeddedSlider($rightDiv, true, false, () => {\r\n            this.editor.editor.layout();\r\n        }, $centerDiv);\r\n\r\n        new EmbeddedSlider($bottomDiv, true, true, () => { this.editor.editor.layout(); });\r\n\r\n        $infoButton.on('mouseup', (ev) => {\r\n            ev.preventDefault();\r\n            ev.stopPropagation();\r\n            openContextMenu([{\r\n                caption: \"Über die Online-IDE ...\",\r\n                link: \"https://learnj.de\",\r\n                callback: () => {\r\n                    // nothing to do.\r\n                }\r\n            }], ev.pageX + 2, ev.pageY + 2);\r\n        });\r\n\r\n\r\n        let $buttonOpen = jQuery('<label type=\"file\" class=\"img_open-file jo_button jo_active\"' +\r\n            'style=\"margin-right: 8px;\" title=\"Datenbank-Dump aus Datei laden\"><input type=\"file\" style=\"display:none\"></label>');\r\n\r\n        let that = this;\r\n\r\n        let $openInputButton = $buttonOpen.find('input');\r\n\r\n        $openInputButton.on('change', (event) => {\r\n            //@ts-ignore\r\n            var files: FileList = event.originalEvent.target.files;\r\n            that.loadDatabaseFromFile(files[0]).then(() => {\r\n                $openInputButton.val(null)\r\n            })\r\n        })\r\n\r\n        let $buttonSave = jQuery('<div class=\"img_save-dark jo_button jo_active\"' +\r\n            'style=\"margin-right: 8px;\" title=\"Datenbank-Dump in Datei speichern\"></div>');\r\n\r\n\r\n        $buttonSave.on('click', () => { that.saveDatabaseToFile() });\r\n\r\n        $controlsDiv.append($buttonOpen, $buttonSave);\r\n\r\n        this.resultsetPresenter = new ResultsetPresenter(this, $bottomDivInner);\r\n        this.resultsetPresenter.addWriteQueryListener(this.writeQueryManager);\r\n\r\n\r\n        new ProgramControlButtons(this, $controlsDiv);\r\n\r\n        this.historyViewer = new HistoryViewer(this, $div.find('.jo_historyTab'));\r\n\r\n        setTimeout(() => {\r\n            this.editor.editor.layout();\r\n            this.compiler = new Compiler(this);\r\n            this.startTimer();\r\n        }, 200);\r\n\r\n\r\n    }\r\n\r\n    saveDatabaseToFile() {\r\n        new DatabaseImportExport().saveToFile(this.databaseTool);\r\n    }\r\n\r\n    async loadDatabaseFromFile(file: globalThis.File) {\r\n        let dbImportExport = new DatabaseImportExport();\r\n        let db = await dbImportExport.loadFromFile(file, this);\r\n        if (db == null) {\r\n            alert('Es ist ein Fehler beim Import aufgetreten.');\r\n            return;\r\n        } else {\r\n            this.databaseTool.initializeWorker(db.binDump, [], (errors) => {\r\n                if (errors.length > 0) {\r\n                    alert('Es sind Fehler beim Import aufgetreten. Ausführliche Fehlermeldungen sehen Sie in der Konsole (F12).')\r\n                    console.log(errors)\r\n                }\r\n            }, () => {\r\n                this.databaseExplorer.refreshAfterRetrievingDBStructure()\r\n            })\r\n        }\r\n        return;\r\n    }\r\n\r\n    makeWaitDiv(): JQuery<HTMLElement> {\r\n\r\n        //@ts-ignore\r\n        let url = (window.javaOnlineDir == null ? '' : window.javaOnlineDir) + 'assets/projectexplorer/svg-loaders/grid.svg';\r\n\r\n        let waitHtml = `\r\n        <div class=\"bitteWarten\">\r\n        <div style=\"margin-bottom: 30px\">\r\n            <div class=\"bitteWartenText\" style=\"font-size: 20px\"></div>\r\n        </div>\r\n        <div>\r\n            <img src=\"${url}\" alt=\"\" style=\"height: 40px\">\r\n        </div>\r\n        <div class=\"bitteWartenProgress\" style=\"font-size: 20px\"></div>\r\n        </div>\r\n        `;\r\n        return jQuery(waitHtml);\r\n    }\r\n\r\n    makeBracketErrorDiv(): JQuery<HTMLElement> {\r\n        return jQuery(`\r\n        <div class=\"jo_parenthesis_warning\" title=\"Klammerwarnung!\" style=\"bottom: 55px\">\r\n        <div class=\"jo_warning_light\"></div>\r\n        <div class=\"jo_pw_heading\">{ }</div>\r\n        <div title=\"Letzten Schritt rückgängig\" \r\n            class=\"jo_pw_undo img_undo jo_button jo_active\"></div>\r\n        </div>\r\n        `);\r\n    }\r\n\r\n    makeCodeResetModalWindow($parent: JQuery<HTMLElement>): JQuery<HTMLElement> {\r\n        let $window = jQuery(\r\n            `\r\n            <div class=\"joe_codeResetModal\">\r\n            <div style=\"flex: 1\"></div>\r\n            <div style=\"display: flex\">\r\n                <div style=\"flex: 1\"></div>\r\n                <div style=\"padding-left: 30px;\">\r\n                <div style=\"color: red; margin-bottom: 10px; font-weight: bold\">Warnung:</div>\r\n                <div>Soll der Code wirklich auf den Ausgangszustand zurückgesetzt werden?</div>\r\n                <div>Alle von Dir gemachten Änderungen werden damit verworfen.</div>\r\n                </div>\r\n                <div style=\"flex: 1\"></div>\r\n            </div>\r\n            <div class=\"joe_codeResetModalButtons\">\r\n            <div class=\"joe_codeResetModalCancel jo_button jo_active\">Abbrechen</div>\r\n            <div class=\"joe_codeResetModalOK jo_button jo_active\">OK</div>\r\n            </div>\r\n            <div style=\"flex: 2\"></div>\r\n            </div>\r\n        `\r\n        );\r\n\r\n        $window.hide();\r\n\r\n        $parent.append($window);\r\n\r\n        $parent.find(\".joe_codeResetModalCancel\").on(\"click\", () => {\r\n            $window.hide();\r\n        });\r\n\r\n        $parent.find(\".joe_codeResetModalOK\").on(\"click\", () => {\r\n\r\n            this.initScripts();\r\n            this.deleteScriptsInDB();\r\n\r\n            $window.hide();\r\n            this.$codeResetButton.hide();\r\n            this.compileRunsAfterCodeReset = 1;\r\n\r\n        });\r\n\r\n        return $window;\r\n    }\r\n\r\n    makeDatabaseResetModalWindow($parent: JQuery<HTMLElement>): JQuery<HTMLElement> {\r\n        let $window = jQuery(\r\n            `\r\n            <div class=\"joe_databaseResetModal\">\r\n            <div style=\"flex: 1\"></div>\r\n            <div style=\"display: flex\">\r\n                <div style=\"flex: 1\"></div>\r\n                <div style=\"padding-left: 30px;\">\r\n                <div style=\"color: red; margin-bottom: 10px; font-weight: bold\">Warnung:</div>\r\n                <div>Soll die Datenbank wirklich auf den Ausgangszustand zurückgesetzt werden?</div>\r\n                <div>Alle bisher ausgeführten Anweisungen (siehe Tab Write History) werden dann rückgängig gemacht.</div>\r\n                </div>\r\n                <div style=\"flex: 1\"></div>\r\n            </div>\r\n            <div class=\"joe_databaseResetModalButtons\">\r\n            <div class=\"joe_databaseResetModalCancel jo_button jo_active\">Abbrechen</div>\r\n            <div class=\"joe_databaseResetModalOK jo_button jo_active\">OK</div>\r\n            </div>\r\n            <div style=\"flex: 2\"></div>\r\n            </div>\r\n        `\r\n        );\r\n\r\n        $window.hide();\r\n\r\n        $parent.append($window);\r\n\r\n        $parent.find(\".joe_databaseResetModalCancel\").on(\"click\", () => {\r\n            $window.hide();\r\n        });\r\n\r\n        $parent.find(\".joe_databaseResetModalOK\").on(\"click\", () => {\r\n\r\n            $window.hide();\r\n            this.resetDatabase(() => {\r\n                this.writeQueryManager.reset();\r\n            });\r\n\r\n            this.$databaseResetButton.hide();\r\n            this.compileRunsAfterCodeReset = 1;\r\n\r\n        });\r\n\r\n        return $window;\r\n    }\r\n\r\n    makeFilesDiv(): JQuery<HTMLElement> {\r\n\r\n\r\n        let $filesDiv = jQuery('<div class=\"joe_bottomDivFiles jo_scrollable\"></div>');\r\n\r\n        let $filesHeader = jQuery('<div class=\"joe_filesHeader jo_tabheading jo_active\"  style=\"line-height: 24px\">Dateien</div>');\r\n\r\n        this.$filesListDiv = jQuery('<div class=\"joe_filesList jo_scrollable\"></div>');\r\n\r\n        $filesDiv.append($filesHeader, this.$filesListDiv);\r\n\r\n        return $filesDiv;\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling && this.getDatabaseTool().databaseStructure != null) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.\r\n                    bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                this.version++;\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    considerShowingCodeResetButton() {\r\n        this.compileRunsAfterCodeReset++;\r\n        if (this.compileRunsAfterCodeReset == 3) {\r\n            this.$codeResetButton.fadeIn(1000);\r\n        }\r\n    }\r\n\r\n    makeBottomDiv($bottomDiv: JQuery<HTMLElement>, $buttonDiv: JQuery<HTMLElement>) {\r\n\r\n        let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n        $tabheadings.css('position', 'relative');\r\n        let $thLeftSide = jQuery('<div class=\"joe_tabheading-right jo_noHeading joe_controlsTabheading\"></div>');\r\n\r\n        $thLeftSide.append($buttonDiv);\r\n        $tabheadings.append($thLeftSide);\r\n\r\n        if (this.config.withErrorList) {\r\n            let $thErrors = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_errorsTab\" style=\"line-height: 24px\">Fehler</div>');\r\n            $tabheadings.append($thErrors);\r\n        }\r\n\r\n        if (this.config.withOutput) {\r\n            let $thPCode = jQuery('<div class=\"jo_tabheading jo_resultTabheading\" data-target=\"jo_resultTab\" style=\"line-height: 24px\">Ausgabe</div>');\r\n            $tabheadings.append($thPCode);\r\n        }\r\n\r\n        // let $thRuntimeError = jQuery('<div class=\"jo_tabheading jo_runtimeerrorsTabheading\" data-target=\"jo_runtimeerrorsTab\" style=\"line-height: 24px\">DB-Fehler</div>');\r\n        // $tabheadings.append($thRuntimeError);\r\n\r\n        let $thHistory = jQuery('<div class=\"jo_tabheading jo_historyTabheading\" data-target=\"jo_historyTab\" style=\"line-height: 24px\">Write History</div>');\r\n        $tabheadings.append($thHistory);\r\n\r\n        let $thRightSide = jQuery('<div class=\"joe_tabheading-right jo_noHeading joe_paginationHeading\"><div class=\"jo_pagination\"></div></div>');\r\n        $tabheadings.append($thRightSide);\r\n\r\n        $bottomDiv.append($tabheadings);\r\n\r\n        let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n\r\n        if (this.config.withErrorList) {\r\n            let $tabError = jQuery('<div class=\"jo_active jo_scrollable jo_errorsTab\"></div>');\r\n            $tabs.append($tabError);\r\n        }\r\n\r\n        if (this.config.withOutput) {\r\n            let $tabPCode = jQuery(`<div class=\"jo_editorFontSize jo_resultTab\">\r\n            <div class=\"jo_result-inner\">\r\n                <div class=\"jo_result-header\"></div>\r\n                <div class=\"jo_scrollable jo_result-body\"></div>\r\n            </div>\r\n            </div>\r\n    `);\r\n            $tabs.append($tabPCode);\r\n        }\r\n\r\n        // let $tabRtErrors = jQuery('<div class=\"jo_scrollable jo_runtimeerrorsTab\"></div>');\r\n        // $tabs.append($tabRtErrors);\r\n\r\n        let $tabHistory = jQuery('<div class=\"jo_scrollable jo_historyTab\"></div>');\r\n        $tabs.append($tabHistory);\r\n\r\n\r\n        $bottomDiv.append($tabs);\r\n\r\n    }\r\n\r\n    makeRightDiv(): JQuery<HTMLElement> {\r\n\r\n        let $rightDiv = jQuery('<div class=\"joe_rightDiv\"></div>');\r\n        this.$rightDivInner = jQuery('<div class=\"joe_rightDivInner\"></div>');\r\n        $rightDiv.append(this.$rightDivInner);\r\n\r\n\r\n        let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n        $tabheadings.css('position', 'relative');\r\n        let $thRun = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_db_tree\" style=\"line-height: 24px\">DB (Baum)</div>');\r\n        // let $thVariables = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_db_list\" style=\"line-height: 24px\">DB (Liste)</div>');\r\n        $tabheadings.append($thRun, //$thVariables\r\n        );\r\n        this.$rightDivInner.append($tabheadings);\r\n\r\n        let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n        // let $vd = jQuery('<div class=\"jo_tab jo_scrollable jo_editorFontSize jo_db_list\">DB-Liste</div>');\r\n\r\n        this.$dbTreeDiv = jQuery(`<div class=\"jo_tab jo_scrollable jo_editorFontSize jo_active jo_db_tree\">DB-Baum</div>`);\r\n\r\n        $tabs.append(this.$dbTreeDiv //, $vd\r\n        );\r\n        this.$rightDivInner.append($tabs);\r\n\r\n        makeTabs($rightDiv);\r\n\r\n        return $rightDiv;\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Formatter } from \"../main/gui/Formatter.js\";\r\nimport { ThemeManager } from \"../main/gui/ThemeManager.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\n\r\n// declare const require: any;\r\n\r\nexport type ScriptType = \"sql\" | \"hint\";\r\n\r\nexport type JOScript = {\r\n    type: ScriptType;\r\n    title: string;\r\n    text: string;\r\n}\r\n\r\nexport class EmbeddedStarter {\r\n\r\n\r\n    startupComplete = 2;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    mainEmbeddedList: MainEmbedded[] = [];\r\n\r\n    initGUI() {\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.themeManager = new ThemeManager();\r\n    }\r\n\r\n    initEditor() {\r\n        new Formatter().init();\r\n        this.checkStartupComplete();\r\n    }\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    start() {\r\n\r\n        this.initJavaOnlineDivs();\r\n\r\n    }\r\n\r\n    initJavaOnlineDivs() {\r\n        \r\n        jQuery('.sql-online').each((index: number, element: HTMLElement) => {\r\n            let $div = jQuery(element);\r\n            let scriptList: JOScript[] = [];\r\n            $div.find('script').each((index: number, element: HTMLElement) => {\r\n                let $script = jQuery(element);\r\n                let type: ScriptType = \"sql\";\r\n                if($script.data('type') != null) type = <ScriptType>($script.data('type'));\r\n                let script: JOScript = {\r\n                    type: type,\r\n                    title: $script.attr('title'),\r\n                    text: $script.text().trim()\r\n                };\r\n                scriptList.push(script);\r\n            });\r\n\r\n            this.initDiv($div, scriptList);\r\n\r\n        });\r\n\r\n    }\r\n\r\n    initDiv($div: JQuery<HTMLElement>, scriptList: JOScript[]) {\r\n\r\n        let me: MainEmbedded = new MainEmbedded($div, scriptList);\r\n\r\n    }\r\n\r\n}\r\n\r\njQuery(function () {\r\n\r\n    let embeddedStarter = new EmbeddedStarter();\r\n\r\n    let prefix = \"\";\r\n    let editorPath = \"lib/monaco-editor/dev/vs\"\r\n    //@ts-ignore\r\n    if(window.javaOnlineDir != null){\r\n        //@ts-ignore\r\n        prefix = window.javaOnlineDir;\r\n    }\r\n\r\n    //@ts-ignore\r\n    if(window.monacoEditorPath != null){\r\n        //@ts-ignore\r\n        editorPath = window.monacoEditorPath;\r\n    }\r\n\r\n    //@ts-ignore\r\n    window.require.config({ paths: { 'vs': prefix + editorPath } });\r\n    //@ts-ignore\r\n    window.require.config({\r\n        'vs/nls': {\r\n            availableLanguages: {\r\n                '*': 'de'\r\n            }\r\n        },\r\n        ignoreDuplicateModules: [\"vs/editor/editor.main\"]\r\n    });\r\n    //@ts-ignore\r\n    window.require(['vs/editor/editor.main'], function () {\r\n\r\n        embeddedStarter.initEditor();\r\n        embeddedStarter.initGUI();\r\n\r\n    });\r\n\r\n});\r\n"],"sourceRoot":""}