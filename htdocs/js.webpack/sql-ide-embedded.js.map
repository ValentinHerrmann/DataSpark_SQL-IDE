{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../node_modules/regenerator-runtime/runtime.js","webpack:///../../../../src/client/compiler/lexer/Token.ts","webpack:///../../../../src/client/compiler/lexer/Lexer.ts","webpack:///../../../../src/client/main/gui/Formatter.ts","webpack:///../../../../src/client/main/gui/ThemeManager.ts","webpack:///../../../../src/client/compiler/parser/SQLTypes.ts","webpack:///../../../../src/client/compiler/parser/Parser.ts","webpack:///../../../../src/client/compiler/parser/SQLTable.ts","webpack:///../../../../src/client/compiler/parser/SymbolTable.ts","webpack:///../../../../src/client/compiler/parser/SQLMethods.ts","webpack:///../../../src/client/tools/StringTools.ts","webpack:///../../../../src/client/compiler/parser/SymbolResolver.ts","webpack:///../../../src/client/compiler/Compiler.ts","webpack:///../../../../src/client/compiler/parser/Module.ts","webpack:///../../../../src/client/main/gui/ActionManager.ts","webpack:///../../../src/client/tools/HtmlTools.ts","webpack:///../../../src/client/communication/AjaxHelper.ts","webpack:///../../../src/client/workspace/WDatabase.ts","webpack:///../../../src/client/communication/CacheManager.ts","webpack:///../../../src/client/communication/NotifierClient.ts","webpack:///../../../src/client/tools/TemplateUploader.ts","webpack:///../../../src/client/communication/NetworkManager.ts","webpack:///../../../../src/client/main/gui/DatabaseSettingsDialog.ts","webpack:///../../../src/client/workspace/Workspace.ts","webpack:///../../../../src/client/main/gui/MyCompletionItemProvider.ts","webpack:///../../../../src/client/main/gui/MySignatureHelpProvider.ts","webpack:///../../../../src/client/main/gui/MyHoverProvider.ts","webpack:///../../../../src/client/main/gui/MyCodeActionProvider.ts","webpack:///../../../../src/client/main/gui/MyReferenceProvider.ts","webpack:///../../../../src/client/main/gui/Helper.ts","webpack:///../../../../src/client/main/gui/Editor.ts","webpack:///../../../../src/client/main/gui/VscSql.ts","webpack:///../../../src/client/sqljs-worker/sqljsWorkerSim.ts","webpack:///../../../src/client/tools/DatabaseTools.ts","webpack:///../../../../src/client/compiler/parser/StatementCleaner.ts","webpack:///../../../src/client/tools/MySqlImporter.ts","webpack:///../../../src/client/tools/DatabaseImportExport.ts","webpack:///../../../../src/client/main/gui/NewDatabaseDialog.ts","webpack:///../../../../src/client/main/gui/MainMenu.ts","webpack:///../../../../src/client/main/gui/Accordion.ts","webpack:///../../../../src/client/main/gui/DistributeToStudentsDialog.ts","webpack:///../../../../src/client/main/gui/ProjectExplorer.ts","webpack:///../../../../src/client/main/gui/RightDiv.ts","webpack:///../../../../src/client/main/gui/Sliders.ts","webpack:///../../../../src/client/main/gui/TeacherExplorer.ts","webpack:///../../../../src/client/main/gui/Dialog.ts","webpack:///../../../../src/client/main/gui/UserMenu.ts","webpack:///../../../src/client/main/Login.ts","webpack:///../../../../src/client/main/gui/ViewModeController.ts","webpack:///../../../../src/client/compiler/parser/SemicolonAngel.ts","webpack:///../../../../src/client/main/gui/DatabaseExplorer.ts","webpack:///../../../../src/client/main/gui/ProgramControlButtons.ts","webpack:///../../../../src/client/main/gui/ResultsetPresenter.ts","webpack:///../../../src/client/communication/Notifier.ts","webpack:///../../../../src/client/main/gui/WaitOverlay.ts","webpack:///../../../../src/client/main/gui/HistoryViewer.ts","webpack:///../../../src/client/main/Main.ts","webpack:///../../../../src/client/main/gui/ErrorManager.ts","webpack:///../../../../src/client/main/gui/HomeworkManager.ts","webpack:///../../../../src/client/main/gui/BottomDiv.ts","webpack:///../../../src/client/embedded/EmbeddedSlider.ts","webpack:///../../../src/client/embedded/EmbeddedFileExplorer.ts","webpack:///../../../src/client/embedded/EmbeddedIndexedDB.ts","webpack:///../../../src/client/embedded/WriteQueryManager.ts","webpack:///../../../src/client/tools/DatabaseLoader.ts","webpack:///../../../src/client/embedded/MainEmbedded.ts","webpack:///../../../src/client/embedded/EmbeddedStarter.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","runtime","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","define","obj","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","state","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","makeInvokeMethod","fn","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","undefined","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","Function","TokenType","LexerState","TokenTypeReadable","identifier","integerConstant","floatingPointConstant","booleanConstant","stringConstant","charConstant","true","false","keywordRename","keywordDistinct","keywordTo","keywordAlter","keywordCommit","keywordAdd","keywordDelete","keywordSelect","keywordInsert","keywordInto","keywordValues","keywordUpdate","keywordSet","keywordNo","keywordUse","keywordCreate","keywordReferences","keywordPrimary","keywordForeign","keywordTable","keywordTables","keywordColumn","keywordDrop","keywordUnique","keywordKey","keywordIndex","keywordConstraint","keywordModify","keywordCascade","keywordRestrict","keywordAction","keywordAutoincrement","keywordFrom","keywordWhere","keywordGroup","keywordBy","keywordHaving","keywordOrder","keywordAscending","keywordDescending","keywordNulls","keywordFirst","keywordLast","keywordIs","keywordNull","keywordDatabase","keywordAnd","keywordOr","keywordNot","keywordJoin","keywordNatural","keywordLeft","keywordCross","keywordInner","keywordOuter","keywordOn","keywordAs","keywordLimit","keywordOffset","keywordIn","keywordNotIn","keywordLike","keywordCollate","keywordDefault","keywordComment","keywordEngine","keywordCharset","keywordCharacter","keywordStart","keywordTransaction","keywordIf","keywordExists","keywordLock","keywordUnlock","keywordWrite","keywordRead","leftBracket","rightBracket","leftSquareBracket","rightSquareBracket","leftCurlyBracket","rightCurlyBracket","leftRightSquareBracket","dot","minus","modulo","plus","multiplication","division","singleQuote","doubleQuote","identifierQuote","lower","greater","equal","lowerOrEqual","greaterOrEqual","concatenation","semicolon","colon","comma","backslash","at","hash","pipe","space","tab","newline","identifierChar","comment","endofSourcecode","specialCharList","'","notEqual","linefeed","keywordList","EscapeSequenceList","\"","spaceTokens","correspondingBracket","tokenTypesToMerge","first","second","merged","isNot","isNotNull","isNull","input","replace","tokenList","errorList","bracketError","bracketStack","pos","line","column","nonSpaceLastTokenType","nonSpaceLastToken","tokens","errors","currentChar","nextChar","mainState","bracketOpen","bracketClosed","setBracketError","tt","openBracket","char","specialCharToken","pushToken","lexMultilineComment","checkClosingBracket","isDigit","indexOf","lexEndofLineComment","lexNumber","position","lexStringConstant","lexSpace","lexAnnotation","lexQuotedIdentifier","lexIdentifierOrKeyword","pushError","text","tripel","newLength","errorLevel","level","a","base","charCode","charCodeAt","posStart","posEnd","substring","escapeChar","beginChar","isDoubleQuotedIdentifier","lastCharWasNewline","commentStart","sign","firstChar","radix","exponent","hasExponential","posExponentStart","exponentString","Number","parseInt","parseFloat","Math","pow","isSpace","toLowerCase","autoFormatTriggerCharacters","monaco","languages","registerDocumentFormattingEditProvider","registerOnTypeFormattingEditProvider","model","ch","options","token","edits","format","e","e1","range","endLineNumber","startLineNumber","endColumn","startColumn","splice","delta","substr","getValue","editor","EndOfLinePreference","LF","tokenlist","lex","lastNonSpaceToken","indentLevel","curlyBracesOpenAtLines","indentLevelAtSwitchStatements","switchHappend","lastTokenWasNewLine","roundBracketsOpen","replaceBetween","token1","insertSpaces","deleteSpaces","openedAtLine","repeat","nextToken1","nextToken2","lastToken1","lastToken2","isBinaryOperator","lastTokenIsOperator","nextTokenIsOperator","getNextNonSpaceToken","beginNextLine","token2","currentIndentation","il","correctIndentation","nextToken","lowerGeneric","lowerBelongsToGenericExpression","greaterGeneric","greaterBelongsToGenericExpression","tokenBefore","spaces","deleteOverlappingRanges","currentIndex","j","positionFrom","positionTo","numberOfSpaces","ThemeManager","themes","initThemes","theme","internalSwitchTheme","setTheme","monacoTheme","root","document","documentElement","cssColors","style","setProperty","SQLType","parameterDescriptions","checkFunction","outputFunction","canCastToList","super","binaryResultTypes","Map","unaryOperators","ownIndex","baseTypeMap","toLocaleLowerCase","baseTypes","concat","set","tokenType","secondType","resultType","isCommutative","Array","isArray","map","addBinaryOperation","type2","bt2","operator","booleanType","value1","value2","max","tens","baseType","parameterValues","parameters","join","returnBaseType","getUnaryResultType","getBinaryResult","round","textTypes","varcharType","ci","pv","v","charType","textType","tinyTextType","mediumTextType","longTextType","floatTypes","decimalType","vk","trunc","nk","numericType","doubleType","realType","floatType","numberTypes","intType","integerType","tinyIntType","smallIntType","mediumIntType","bigIntType","timeType","dateType","dateTimeType","timestampType","nullType","numericTypes","timeTypes","addBaseTypes","numericBinaryOperators","comparisonOperators","characterTypes","booleanOperations","bt","lookahead","endToken","beginStatementKeywords","identifierMap","completionHints","sqlStatements","addCompletionHint","initializeLookahead","lastToken","parseMain","ct","lastComment","commentBefore","cct","quickFix","assign","skip","invokeSemicolonAngel","expectedValuesArray","isOperatorOrDot","title","editsProvider","uri","resource","edit","message","severity","MarkerSeverity","main","getSemicolonAngel","register","expectedTokens","op","operatorPrecedence","ret","deltaColumns","tpos","deltaInsideToken","tokenPos","getCurrentPosition","mainProgram","mainProgramEnd","afterLastStatement","semicolonAfterLastStatement","getCurrentPositionPlus","isEnd","oldPos","errorsBeforeStatement","startPosition","st","parseStatement","hasErrors","ast","from","to","getEndOfPosition","acceptedBySQLite","beginStatementTokens","firstBadToken","expectSemicolon","parseSelect","parseInsert","parseCreateTableOrDatabase","parseUpdate","parseDelete","parseDropTable","parseAlterTable","parseSet","parseUse","expect","parseLockUnlock","node","omittedeStatement","endPosition","symbolTable","kind","tableIdentifier","tableIdentifierPosition","addCompletionHintHere","parseRenameTableOrColumn","parseAlterTableAdd","parseDropColumn","comesToken","getEndOfCurrentToken","newTableName","oldColumnName","oldColumnPosition","newColumnName","unique","parseAddColumn","parseAddPrimaryKey","parseAddIndex","parseModifyColumn","parseAddConstraint","fki","parseForeignKeyDefinition","foreignKeys","referencesTable","referencesColumn","referencesPosition","parseReferences","pos0","pos1","modifyColumnInfo","parseColumnDefinition","primaryKeys","index","index_name","indices","columnDefBegin","columnDef","ifExists","whereNode","whereNodeBegin","whereNodeEnd","parseTerm","columnIdentifiers","columnIdentifierPositions","valuePosBegin","valuePosEnd","parseCreateDatabase","parseCreateTable","ifNotExists","pos2","columnList","combinedPrimaryKeyColumns","foreignKeyInfoList","uniqueConstraints","primaryKeyAlreadyDefined","parsePrimaryKeyTerm","parseUniqueTerm","columnNode","isPrimary","isAutoIncrement","columns","uniqueConstraint","notNull","parseType","hintColumns","hintTables","hints","additionalColumns","praefix","suffix","datatypes","toString","mappedIdentifier","getBaseType","alreadySeenKeywords","foreignKeyInfo","collate","defaultValue","fromConstantType","canCastTo","rightBracketPosition","valuesPosition","columnsPosition","table","alias","parseValueLists","selectNode","select","insideListTokens","outerFirst","leftBracketPosition","lv","constantType","constant","constantNode","columnListStart","fromNode","parentStatement","parseColumnList","columnListKeywordArray","findIndex","allColumns","fromListKeywordArray","fromStartPosition","dontHint","parseTableOrSubQuery","hintEndPosition","fromEndPosition","unshift","whereKeywordArray","whereStart","groupKeywordArray","groupStart","groupByNode","parseGroupBy","orderStart","orderByNode","parseOrderBy","limitNode","parseLimit","numberOfRows","ln","offset","gbn","tokenTypesAfterGroupBy","term","having","obnList","obn","leftSide","parseAtomicTableOrSubQuery","parseJoinOperator","rightSide","firstOperand","secondOperand","on","selectStatement","subquery","query","tokenTypesAfterListEnd","allowAliases","distinct","columnTerm","parseTermBinary","precedence","left","parseUnary","operators","right","binaryOp","parseBracket","unaryOp","operand","tt1","isStringConstant","parseDotOrArrayChains","identifier1","position1","parseMethodCallParameters","callMethod","operands","nodes","commaPositions","secondIdentifier","identifierLeft","identifierRight","list","elements","constantTypes","tokenBeforeBracket","listNode","parseList","termInsideBrackets","parameter","isPrimaryKey","isNullable","cs","typeMatch1","completeTypeSQL","match","baseTypeIdentifier","commaSeparatedParameters","split","trim","fromColumnStructure","Table","ts","size","tsList","tables","fromTableStructure","columnStructureToColumnMap","referencedCs","references","referencedColumn","parentSymbolTable","childSymbolTables","symbols","symbolList","parent","databaseStructure","fromTableStructureList","storeTableSymbols","storeSymbol","posOfDefinition","referencedOnPositions","symbol","containsPosition","shortestSymbolTableContainingPosition","shortestPosition","st1","findTableAtPosition","findTables","filter","isAggregating","returnType","acceptsStarParameter","SQLMethodStore","methods","pushOneParameterMethod","countMethod","instance","parameterType","escapeHtml","unsafe","twoDez","z","isDate","inputText","opera1","opera2","lopera1","lopera2","pdate","dd","mm","yy","lyear","isDateTime","dateStr","isTime","databaseTool","symbolTableStack","mainSymbolTable","statement","astNode","resolveSelect","resolveInsert","resolveCreateTable","resolveUpdate","resolveDelete","resolveDropTable","resolveAlterTable","getCurrentSymbolTable","resultTable","pushNewSymbolTable","joinedTables","resolveTableOrSubQuery","extractDatabaseStructure","resolveTerm","c1","sqlType","whereType","getBaseTypeName","findTable","whereSymbolTable","oldColumn","find","ciPos","createTableNode","thisTable","cn","tosNode","tableList","storeTableIntoSymbolTable","tableAlias","resolveNotIn","typeLeft","typeRight","getBinaryResultType","operandType","resultType1","resolveMethodCall","resolveIdentifier","resolveDot","selectTable","tableSymbols","findColumn","getInstance","getMethods","found","methodParameter","operatorString","leftType","pType","element","elementType","tableCompletionTo","insertColumn","selectColumn","valueList","destType","CompilerStatus","compilerStatus","compiledButNothingToRun","moduleStore","compiling","t0","performance","now","lexer","getModules","file","dirty","clear","lexed","getProgramTextFromMonacoModel","getCurrentlyEditedModule","getBottomDiv","errorManager","showParenthesisWarning","startRegistering","parser","parse","getDatabaseTool","symbolResolver","start","dt","getCurrentWorkspace","compilerMessage","healSemicolons","readyToRun","oldErrorDecorations","identifierPositions","methodCallPositions","path","uriCounter","uriMap","Uri","scheme","createModel","updateOptions","tabSize","lastSavedVersionId","getAlternativeVersionId","that","onDidChangeContent","versionId","saved","isEmbedded","main1","workspacesOwnerId","user","id","text_before_revision","student_edited_after_revision","networkManager","sendUpdates","bottomDiv","homeworkManager","showHomeWorkRevisionButton","projectExplorer","renderHomeworkButton","fromPosition","toPosition","hintKeywords","fromColumn","fromLine","toColumn","toLine","hintColumnsOfTable","toUpperCase","chList","sel","selStart","selEnd","stmt","compare","b","lineNumber","bestCh","bestRangeLength","rangeLength","f","f1","submitted_date","version","workspace","workspace_id","forceUpdate","file_type","ec","el","positionList","positionsOnLine","bestFoundPosition","sort","e2","errorLevelCompare","level1","level2","maxUriNumber","ModuleStore","moduleMap","module_id","ms","putModule","copy","mo","includeSystemModules","excludedModuleName","removeModule","moduleName","ActionManager","$mainElement","actions","keyEntries","buttons","$element","jQuery","event","executeKeyDownEvent","actionIdentifier","ae","action","button","active","attr","addClass","removeClass","activeElement","tagName","keyCode","ctrlKey","shiftKey","altKey","actionEntries","actionEntry","stopPropagation","preventDefault","makeEditable","elementWithText","elementToReplace","renameDoneCallback","selectionRange","mousePointer","window","PointerEvent","$input","css","width","height","color","val","setSelectionRange","end","after","hide","setTimeout","focus","ev","off","remove","show","newValue","openContextMenu","items","x","y","$contextMenu","$openSubMenu","parentMenuItem","mi","caption","link","$item","subMenu","callback","$link","top","append","leftRight","innerWidth","xp","topBottom","innerHeight","yp","makeTabs","tabDiv","headings","not","tabs","target","data","trigger","makeDiv","klass","div","jo_mouseDetected","animateToTransparent","cssProperty","startColorRgb","duration","colorPraefix","animate","copyTextToClipboard","navigator","clipboard","writeText","console","textArea","createElement","body","appendChild","execCommand","removeChild","fallbackCopyTextToClipboard","PerformanceCollector","url","startTime","pe","performanceData","count","sumTime","performanceDataCount","lastTimeSent","request","ajax","successCallback","errorCallback","showNetworkBusy","time","$","JSON","stringify","contentType","success","response","registerPerformanceEntry","jqXHR","statusText","status","busy","WDatabase","db","statements","published_to","description","templateDump","based_on_template_id","owner_id","CacheManager","databaseId","cacheAvailable","getCache","cache","databaseIdToCacheIdentifier","arrayBuffer","buffer","Uint8Array","catch","put","Response","caches","open","unsentMessages","connect","location","protocol","startsWith","host","connection","WebSocket","onerror","onError","onclose","onClose","onmessage","onMessage","onopen","command","sendIntern","forcedUpdateEvery","counterTillForcedUpdate","send","log","TemplateUploader","dump","reason","waitOverlay","export","pako","deflate","uploadIntern","alert","processData","headers","$updateTimerDiv","ownUpdateFrequencyInSeconds","teacherUpdateFrequencyInSeconds","updateFrequencyInSeconds","secondsTillNextUpdate","errorHappened","interval","clearInterval","setInterval","$rect","notifierClient","sendIfNothingIsDirty","writeEditorTextToFile","userDataDirty","sendUpdateUserSettings","wdList","fdList","ws","workspaceList","getWorkspaceData","getFileData","workspacesWithoutFiles","files","userId","language","currentWorkspaceId","getModifiedWorkspaces","updateWorkspaces","wd","is_testuser","random","entity","workspaceId","secretKind","secret","databaseName","publishedTo","klasse","student_ids","setWorkspaceActive","uploadCurrentDatabase","database_as_template_id","newTemplateId","class_id","settings","current_workspace_id","version_before","database","newStatements","firstNewStatementIndex","statements_before","new_version","cacheManager","fromDatabaseData","fetchTemplateFromCache","fetchTemplate","template","saveTemplateToCache","inflate","xhrFields","responseType","user_id","templateList","sendUpdatesRequest","sendUpdatesResponse","idToRemoteWorkspaceDataMap","fileIdsSended","workspaces","newWorkspaceNames","remoteWorkspace","createNewWorkspaceFromWorkspaceData","idToRemoteFileDataMap","fd","idToModuleMap","fileId","remoteFileData","fileListPanel","removeElement","currentWorkspace","setValue","remoteFile","createFile","workspaceListPanel","sortElements","withSort","w","createNewWorkspace","sql_history","isFolder","panelElement","externalElement","iconClass","addElement","fileData","identical_to_repository_version","getNewModule","init","$dialog","showMainWindow","saveNameAndPublishedTo","setValues","setNewSecret","$copyButton","prop","each","checked","setNameAndPublishedTo","getDatabaseSettings","secrets","is_admin","is_schooladmin","empty","withFiles","currentFileId","currentlyOpenModule","permissions","database_id","$buttonDiv","$htmlFirstLine","$button","addEventListener","restoreFromData","triggerCharacters","keywordCompletionItems","keywordToSnippetMap","setupKeywordCompletionItems","getModuleByMonacoModel","wfc","provideCompletionItemsIntern","sw","getMonacoEditor","_contentWidgets","widget","toggleDetails","isStringLiteral","textUntilPosition","getValueInRange","textAfterPosition","completionHint","getCompletionHint","completionItems","addKeywordCompletionItems","dotMatch","ibMatch","identifierAndBracketAfterCursor","addIdentifierCompletionItems","addDotCompletionItems","word","getWordUntilPosition","replaceWordRange","insertAfterCursorRange","item","insertText","suggestions","textAfterDot","textBeforeDot","rangeToReplace","label","detail","filterText","insertTextRules","CompletionItemInsertTextRule","KeepWhitespace","CompletionItemKind","Field","tableIdentifiers","columnIdentifier","InsertAsSnippet","Snippet","Class","sortText","columList","withTable","snippet","Keyword","posMin","posMax","watchDog","posOld","arguments","MySignatureHelpProvider","signatureHelpTriggerCharacters","signatureHelpRetriggerCharacters","compileIfDirty","provideSignatureHelpLater","getModel","methodCallPosition","rightMostPosition","mcp","identifierPosition","getSignatureHelp","parameterIndex","cp","activeParameter","activeSignature","signatures","dispose","MyHoverProvider","selection","getSelection","getElementAtPosition","getWordUnderCursor","desc","keywordDescriptions","contents","getValueLengthInRange","isInsideIdentifierOrArrayDescriptor","begin","isInsideOperator","isInsideIdentifierChain","MyCodeActionProvider","markers","relatedInformation","diagnostics","isPreferred","MyReferenceProvider","usagePositions","referencePositions","upInCurrentModule","up","targetElement","direction","$helper","bottom","html","close","fadeIn","fadeOut","mainBase","helperHistory","flag","openHelper","showMinimap","cw","dontPushNextCursorMove","lastTime","elementDecoration","extensions","conf","onEnterRules","beforeText","afterText","indentAction","IndentAction","IndentOutdent","appendText","None","removeText","comments","lineComment","blockComment","brackets","autoClosingPairs","surroundingPairs","setLanguageConfiguration","setMonarchTokensProvider","defaultToken","tokenPostfix","ignoreCase","escapes","keywords","builtinFunctions","builtinVariables","pseudoColumns","tokenizer","include","cases","whitespace","numbers","strings","string","complexIdentifiers","quotedIdentifier","scopes","defineVscSQL","defineTheme","inherit","rules","foreground","fontStyle","colors","lightbulb","enabled","lineDecorationsWidth","peekWidgetDefaultFocus","fixedOverflowWidgets","quickSuggestions","quickSuggestionsDelay","fontSize","fontFamily","fontWeight","roundedSelection","selectOnLineNumbers","automaticLayout","scrollBeyondLastLine","occurrencesHighlight","autoIndent","dragAndDrop","formatOnType","formatOnPaste","suggestFontSize","suggestLineHeight","suggest","localityBonus","insertMode","parameterHints","cycle","mouseWheelZoom","minimap","scrollbar","vertical","horizontal","mouseWheelListener","changeEditorFontSize","deltaY","onDidChangeConfiguration","hasChanged","EditorOption","fontInfo","registerLightbulbOnClickFunctions","onDidChangeCursorPosition","onDidChangeModel","removeEventListener","passive","setActiveAfterExternalModelSet","registerHoverProvider","registerCompletionItemProvider","registerCodeActionProvider","registerReferenceProvider","registerSignatureHelpProvider","onMouseDown","MouseTargetType","GUTTER_GLYPH_MARGIN","GUTTER_LINE_NUMBERS","isAfterLines","onMarginMouseDown","remeasureFonts","addActions","onDidType","insertEndOfComment","newLine","newColumn","Range","executeEdits","setPosition","getPosition","prevLine","getLineContent","trimRight","endsWith","getLineCount","spacesAtBeginningOfLine","trimLeft","fontSizePx","Date","getTime","editorfs","getOptions","viewModeController","saveFontSize","factor","dynamic","newEditorFs","setFontSize","addAction","keybindings","KeyMod","CtrlCmd","KeyCode","KEY_K","precondition","keybindingContext","contextMenuGroupId","contextMenuOrder","run","ed","getAction","Enter","getActionManager","deltaDecorations","decorations","className","isWholeLine","overviewRuler","darkColor","OverviewRulerLane","Left","executeActionActive","sqlStatement","getSQLSTatementsAtSelection","classname","MinimapPosition","Inline","zIndex","setActive","showHelper","WorkerSim","initsql","initSqlJs","locateFile","scriptDirectory","SQL1","SQL","createDb","worker","postMessageToClient","buff","config","ready","results","exec","row","postMessage","finished","databaseDirectoryEntries","queryId","querySuccessCallbacksMap","queryErrorCallbackMap","queries","callbackAfterInitializing","callbackAfterRetrievingStructure","getWaitOverlay","terminate","javaOnlineDir","jo_doc","Worker","querySuccessCallback","queryErrorCallback","delete","queryCount","execQuery","setProgress","shift","executeQuery","retrieveDatabaseStructure","sql","params","getJSON","entries","sql1","result1","parseDatabaseStructure","tableNameToStructureMap","tableName","tableSQL","tableStructure","completeSQL","columnArray","foreignKeyList","columnArray1","dflt_value","columnStructure","typeLengths","fkInfo","referencesRawData","sqliteMagicBytes","MaxRowsPerInsert","sqlCleaned","cleanCreateTableStatement","cleanInsertStatement","statementHeader","escapeIdentifier","lines","vline","cleanValue","cleanColumnDef","cleanForeignKeyInfo","pkc","escapeIdentifiers","uk","fkiString","onDelete","onUpdate","unzipURL","fetch","importFromText","unzipFile","reader","FileReader","onload","readAsText","zip","ZipReader","HttpReader","unzipIntern","BlobReader","getEntries","filename","getData","TextWriter","onprogress","lexOutput","createTableNodes","insertNodes","tableModifyingNodes","tmn","findCreateTableNode","autoIncrementColumn","pcn","findCreateTableColumnNode","mci","mcn","fk","indexIdentifier","makeDatabase","tableNode","statementCleaner","clean","dbTool","initializeWorker","binDump","ld","loadFromFile","ab","getDumpType","readAsArrayBuffer","prompt","isBlob","blob","Blob","msSaveOrOpenBlob","createEvent","download","href","URL","createObjectURL","dataset","downloadurl","initEvent","dispatchEvent","downloadFile","$templatelist","fetchTemplateList","templatelist","tle","$tle","ownerName","$templateName","$dropZone","evt","originalEvent","dataTransfer","dropEffect","importFile","$dumpFileInput","createMode","hasClass","workspaceData","createWorkspace","$template","template_database_id","code","tIndex","otherDatabaseId","template_id","sendCreateWorkspace","accordionElement","renderSettingsButton","importer","isDatabase","dbUncompressed","currentSubmenu","openSubmenusOnMousemove","mainMenu","switchTheme","saveToFile","confirm","initMenu","menu","initMenuitemCallbacks","opensubmenu","accordion","flexWeight","newButtonClass","buttonNewTitle","defaultIconClass","withDeleteButton","withFolders","enableDrag","acceptDropKinds","dontSortElements","addPanel","$newFolderAction","addFolder","newElement","newFolderCallback","scrollIntoView","$collapseAllAction","collapseAll","slideUp","$captionElement","$listElement","fixed","grow","$buttonNew","pathArray","selectedElement","getSelectedElement","name1","path1","isFolder1","name2","path2","isFolder2","cmp","localeCompare","compareWithPath","insertIndex","getElementIndex","$elements","prepend","elementAtIndex","before","renderElement","insertElement","renameElement","$accordionDiv","getCurrentlySelectedPath","newFilesElementCallback","$htmlSecondLine","insertAfter","selectCallback","$listOuter","$ce","$li","targetGrow","parts","toggleClass","currentlyDraggedElementKind","element1","currentlyDraggedElement","moveElement","expanded","aName","sortName","bName","cssClass","$div","expandedCollapsed","pathHtml","addElementActionCallback","$elementAction","$filedragpart","effectAllowed","dropElementCallback","pathIsCollapsed","slideDown","pressTimer","contextmenuHandler","contextMenuItems","renameCallback","newDatabaseElementCallback","contextMenuProvider","cmi","pageX","pageY","clearTimeout","getChildElements","deleteCallback","elementToMove","destinationFolder","destinationPath","movedElements","sourcePath","oldPathLength","moveCallback","folder","pointPos","newText","invokeCallback","ae1","findElement","pathString","elPath","ps","Accordion","$html","panel","renderOuterHtmlElements","DistributeToStudentsDialog","classes","studentCount","$studentList","student","students","$studentLine","$studentClass","$studentName","rufname","familienname","$dialogMain","distributeWorkspace","sendDistributeWorkspace","$projectexplorerDiv","programPointerModule","programPointerDecoration","lastOpenModule","initFilelistPanel","initWorkspacelistPanel","successfulNetworkCommunicationCallback","setModuleActive","sendCreateFile","newName","callbackIfSuccessful","sendDeleteWorkspaceOrFile","is_teacher","$homeworkButtonDiv","$newWorkspaceAction","removeWorkspace","databaseExplorer","getResultsetPresenter","enableNewButton","setModel","dest","droppedElement","dropEffekt","$homeAction","onHomeButtonClicked","hideHomeworkTab","workspaceAccordionElement","cmiList","teacherExplorer","classPanel","restoreOwnWorkspaces","setCaption","moduleList","errorCountMap","errorCount","errorCountS","setTextAfterFilename","callbackAfterDatabaseFetched","initializeDatabaseTool","fetchDatabase","currentWorkspace_id","renderFiles","nonSystemModules","notifier","refreshAfterRetrievingDBStructure","getHistoryViewer","clearAndShowStatements","cem","hideRevision","editorState","saveViewState","readOnly","hideHomeworkRevisionButton","restoreViewState","setCurrentlyEditedModule","showProgramPointer","programPointerPosition","revealRangeInCenterIfOutsideViewport","Center","beforeContentClassName","findModuleByFile","$rightDiv","isWholePage","$tabs","$headings","rightdiv_width","$wholeWindow","Sliders","md","clientX","dx","moveLeftPanel","clientY","dy","moveBottomDiv","moveRightDiv","sliderknobLeft","stopImmediatePropagation","sliderknobRight","$editor","mewidth","layout","diffEditor","$bottomDiv","meheight","$leftPanel","classData","studentPanel","initStudentPanel","initClassPanel","renderClasses","ws_userId","ownWorkspaces","currentOwnWorkspace","restoreWorkspaces","setExplorerColor","showHomeworkTab","attachToWorkspaces","renderWorkspaces","ea","renderStudents","userDataList","ud","classDataList","cd","Dialog","placeholder","$buttonRow","$message","visible","visibility","$userSettingsButton","dialog","heading","$oldPassword","$newPassword1","$newPassword2","$errorDiv","waitDiv","waitMessage","oldPassword","newPassword","$loginSpinner","loginHappened","username","password","viewModes","classDiagram","waitForGUICallback","initGUI","initTeacherExplorer","classdata","initializeTimer","setFixed","initViewMode","initializeNotifierClient","startupComplete","errorMessage","resultsetPresenter","removePanels","ViewModeController","$buttonsContainer","$buttonMap","highContrast","editorHasFullWidth","$buttonEditorFullscreen","$buttonPresentationMode","$buttonMonitorMode","am","actionManager","registerAction","toggleEditorFullwidth","setMode","saveSettings","otherMode","viewMode","viewModeChosen","themeManager","getChosenViewMode","monitor","presentation","SemicolonAngel","semicolonPositions","isThereAgain","oldEvidence","firstSeenMs","currentlyEditedModule","cursorLine","isCurrentModule","editOperations","forceMoveMarkers","abs","setSelection","$mainDiv","collapsedTables","dbstructure","$table","renderTable","isCollapsed","showTable","$columns","image","referencesHtml","autoincrement","$column","$treeSwitch","$columnList","parents","ProgramControlButtons","$buttonStart","$buttonRollback","isActive","executeSelectedStatements","rollback","paginationSize","writeQueryListeners","showResultsBusy","showResultPending","$paginationDiv","$arrowLeft","$infoDiv","$arrowRight","paginationFrom","floor","showResults","activateButtons","paginationAll","min","listener","fetchSelectedStatements","hasDDLStatements","some","isDDLStatement","hasWriteStatements","isWriteStatement","executeDDLWriteStatementsEmbedded","executeDDLWriteStatementsInOnlineIDE","executeStatements","sucessfullyExecutedModifyingStatements","getDatabaseExplorer","refresh","notify","getNewStatements","new_statements","firstStatementIndex","executeNewStatements","AddDatabaseStatements","appendStatements","modifyingStatements","resetDatabase","fromIndex","executeStatementsString","successfullyExecutedModifyingStatements","showErrors","callback1","laterSelectExists","isSelectStatement","presentResultsIntern","minimapColors","linesDecorationsClassName","borderLeftClass","errorlevel","minimapColor","Warning","Info","setModelMarkers","$runtimeErrorsTab","$runtimeErrorsTabHeading","showErrorDecorations","$errorList","$errorLine","revealRangeInCenter","$sqlDiv","colorize","$messageDiv","$resultTabheading","$resultHeader","headerDiv","$bodyDiv","waitFunction","$header","rows","$row","cell","monacoEditor","StatementDelimiter","isOpen","isPolling","counter","isLongPolling","longPollCounter","databaseVersion","onOpen","startLongPolling","rollbackLocal","callbackIfTooFewStatements","callbackIfDone","doRefreshDatabaseExplorer","poll","getNewStatementsHttp","rollbackToVersion","longPoll","resp","timeout","WaitOverlay","$waitDiv","fadeOutPending","$bitteWartenText","$bitteWartenProgress","$historyPanel","panelEntries","panelEntry","makePanelEntry","makeLastButtonActive","$rollbackButton","$index","$text","$copybutton","$rollbackbutton","rollbackEmbedded","rollbackLocalNeeded","writeQueryManager","initialTemplateDump","initialStatements","writtenStatements","historyViewer","rightDiv","compiler","semicolonAngel","matchMedia","matches","login","initSliders","checkStartupComplete","startTimer","sendBeacon","timerHandle","isDirty","compile","renderErrorCount","oldDecorations","lightBulbOnClickFunctionList","$bracket_warning","children","getSortedAndFilteredErrors","getErrorCount","lightBulbClass","class","onClickFunction","processError","$file","$error","locf","$errorDivs","$lineColumn","category","showError","showRevisionActive","$homeworkTab","$homeworkTabLeft","$homeworkTabRight","$showRevisionButton","showRevision","originalModel","modifiedModel","createDiffEditor","getElementById","enableSplitViewResizing","originalEditable","renderSideBySide","original","modified","daysWithModules","dateString","date","stringToDate","dateWithoutTime","getDate","getMonth","getFullYear","dateToStringWithoutTime","dwm","day","m1","m2","moduleWithWorkspace","EmbeddedSlider","$container","firstLast","horVert","$otherDiv","initSlider","$sliderDiv","cursor","slide","otherHeight","newHeight","newOtherHeight","otherWidth","newWidth","newOtherWidth","$fileListDiv","addModule","$filesDiv","$addButton","currentFile","selectFile","removeFile","script","$fileDiv","hint","$hintDiv","$monacoDiv","syntaxMap","md1","markdownit","highlight","str","lang","renderer","code_inline","idx","env","content","render","md2","codeMap","uncoloredtext","EmbeddedIndexedDB","databaseIdentifier","indexedDB","onsuccess","onupgradeneeded","objectStoreScripts","createObjectStore","keyPath","autoIncrement","transaction","oncomplete","scriptId","objectStore","databaseID","WriteQueryManager","statementsToExecute","statementsToWrite","atLeastOneExecuted","getDatabase","writeStatementsIfNecessary","forceWriteStatements","writeDatabase","$databaseResetButton","statementsSql","urlWithoutProtocol","urlLowerCase","loadSqLiteDump","loadMySql","saveDatabaseToCache","loadFromUrl","scriptList","programIsExecutable","compileRunsAfterCodeReset","readConfig","databaseURL","$dbTreeDiv","load","loadableDb","initDatabase","withFileList","fileExplorer","getFirstModule","initScripts","indexedDBReady","readScripts","databaseReady","removeAllFiles","initWorkspace","$filesListDiv","setFirstFileActive","addHint","configJson","withOutput","withErrorList","withBottomPanel","markFile","lineNumbersMinChars","getScript","scriptListJSon","saveScripts","countDown","$codeResetButton","oneNotSaved","writeScript","removeScript","considerShowingCodeResetButton","$centerDiv","makeWaitDiv","$codeResetModalWindow","makeCodeResetModalWindow","$databaseResetModalWindow","makeDatabaseResetModalWindow","makeRightDiv","$editorDiv","$bracketErrorDiv","makeBracketErrorDiv","$controlsDiv","$bottomDivInner","makeBottomDiv","makeFilesDiv","$rightDivInner","$rightSideContainer","$infoButton","$buttonOpen","$openInputButton","loadDatabaseFromFile","$buttonSave","saveDatabaseToFile","addWriteQueryListener","dbImportExport","$parent","$window","deleteScriptsInDB","$filesHeader","$tabheadings","$thLeftSide","$thErrors","$thPCode","$thHistory","$thRightSide","$tabError","$tabPCode","$tabHistory","$thRun","mainEmbeddedList","initJavaOnlineDivs","$script","initDiv","embeddedStarter","prefix","editorPath","monacoEditorPath","require","paths","availableLanguages","ignoreDuplicateModules","initEditor"],"mappings":"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B5C,IAAY8H,E,OAAZ,SAAYA,GACR,+BAEA,yCACA,qDACA,yCACA,uCACA,mCACA,mBACA,qBAEA,qCACA,yCACA,8BACA,oCACA,sCACA,gCACA,sCACA,sCACA,sCACA,kCACA,sCACA,sCACA,gCACA,8BACA,gCACA,sCACA,8CACA,wCACA,wCACA,oCACA,sCACA,sCACA,kCACA,sCACA,gCACA,oCACA,8CACA,sCACA,wCACA,0CACA,sCACA,oDACA,kCACA,oCACA,oCACA,8BACA,sCACA,oCACA,4CACA,8CACA,oCACA,oCACA,kCACA,8BACA,kCACA,0CAEA,8BACA,gCACA,gCAEA,kCACA,wCACA,kCACA,oCACA,oCACA,oCACA,8BACA,8BACA,oCACA,sCACA,8BACA,oCACA,kCACA,wCACA,wCACA,wCACA,sCACA,wCACA,4CAEA,oCACA,gDACA,8BACA,sCAEA,kCACA,sCACA,oCACA,kCAGA,kCACA,oCACA,8CACA,gDACA,4CACA,8CACA,wDAGA,kBACA,wBACA,sBAAO,oBAAM,wCAAgB,4BAC7B,kCAAa,kCACb,0CACA,uBAAO,2BAAS,qCAAc,yCAC9B,uCACA,uBACA,6BAGA,+BAEA,uBAGA,uBAGA,+BAGA,qBAGA,iBAGA,qBAGA,uBAEA,mBAGA,2BAGA,6BAGA,yCAGA,2BAEA,2CAKA,qCACA,iCACA,2BACA,6BACA,uBACA,6BACA,qBACA,yBACA,+BACA,iCACA,yBACA,uBACA,+BACA,+CAvKJ,CAAYA,MAAS,KA0Kd,ICxKFC,EDwKMC,EAA4C,CACnD,CAACF,EAAUG,YAAa,iBAExB,CAACH,EAAUI,iBAAkB,yBAC7B,CAACJ,EAAUK,uBAAwB,4BACnC,CAACL,EAAUM,iBAAkB,2BAC7B,CAACN,EAAUO,gBAAiB,+BAC5B,CAACP,EAAUQ,cAAe,sBAC1B,CAACR,EAAUS,MAAO,OAClB,CAACT,EAAUU,OAAQ,QAEnB,CAACV,EAAUW,eAAgB,SAC3B,CAACX,EAAUY,iBAAkB,WAC7B,CAACZ,EAAUa,WAAY,KACvB,CAACb,EAAUc,cAAe,QAC1B,CAACd,EAAUe,eAAgB,SAC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","file":"sql-ide-embedded.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","export enum TokenType {\r\n    identifier,\r\n    // constants\r\n    integerConstant,\r\n    floatingPointConstant,\r\n    booleanConstant,\r\n    stringConstant,\r\n    charConstant,\r\n    true,\r\n    false,\r\n    // keywords\r\n    keywordRename,\r\n    keywordDistinct,\r\n    keywordTo,\r\n    keywordAlter,\r\n    keywordCommit,\r\n    keywordAdd,\r\n    keywordDelete,\r\n    keywordSelect,\r\n    keywordInsert,\r\n    keywordInto,\r\n    keywordValues,\r\n    keywordUpdate,\r\n    keywordSet,\r\n    keywordNo,\r\n    keywordUse,\r\n    keywordCreate,\r\n    keywordReferences,\r\n    keywordPrimary,\r\n    keywordForeign,\r\n    keywordTable,\r\n    keywordTables,\r\n    keywordColumn,\r\n    keywordDrop,\r\n    keywordUnique,\r\n    keywordKey,\r\n    keywordIndex,\r\n    keywordConstraint,\r\n    keywordModify,\r\n    keywordCascade,\r\n    keywordRestrict,\r\n    keywordAction,\r\n    keywordAutoincrement,\r\n    keywordFrom,\r\n    keywordWhere,\r\n    keywordGroup,\r\n    keywordBy,\r\n    keywordHaving,\r\n    keywordOrder,\r\n    keywordAscending,\r\n    keywordDescending,\r\n    keywordNulls,\r\n    keywordFirst,\r\n    keywordLast,\r\n    keywordIs,\r\n    keywordNull,\r\n    keywordDatabase,\r\n\r\n    keywordOr,\r\n    keywordAnd,\r\n    keywordNot,\r\n\r\n    keywordJoin,\r\n    keywordNatural,\r\n    keywordLeft,\r\n    keywordCross,\r\n    keywordInner,\r\n    keywordOuter,\r\n    keywordOn,\r\n    keywordAs,\r\n    keywordLimit,\r\n    keywordOffset,\r\n    keywordIn,\r\n    keywordNotIn,\r\n    keywordLike,\r\n    keywordCollate,\r\n    keywordDefault,\r\n    keywordComment,\r\n    keywordEngine,\r\n    keywordCharset,\r\n    keywordCharacter,\r\n    \r\n    keywordStart,\r\n    keywordTransaction,\r\n    keywordIf,\r\n    keywordExists,\r\n\r\n    keywordLock,\r\n    keywordUnlock,\r\n    keywordWrite,\r\n    keywordRead,\r\n\r\n    // brackets\r\n    leftBracket, // ()\r\n    rightBracket,\r\n    leftSquareBracket, // []\r\n    rightSquareBracket,\r\n    leftCurlyBracket, // {}\r\n    rightCurlyBracket,\r\n    leftRightSquareBracket, // []\r\n    \r\n    // binary operators\r\n    dot, //.\r\n    modulo,\r\n    minus, plus, multiplication, division,\r\n    singleQuote, doubleQuote, // ', \"\r\n    identifierQuote,\r\n    lower, greater, lowerOrEqual, greaterOrEqual, \r\n    concatenation,    \r\n    equal,\r\n    notEqual,\r\n\r\n    // semicolon\r\n    semicolon, // ;\r\n\r\n    colon, // :\r\n\r\n    // comma\r\n    comma, // ,\r\n\r\n    // backslash\r\n    backslash,\r\n\r\n    // |\r\n    pipe,\r\n\r\n    // @\r\n    at,\r\n\r\n    // #\r\n    hash,\r\n\r\n    // whitespace\r\n    space,\r\n\r\n    tab,\r\n\r\n    // newline\r\n    newline,\r\n\r\n    // line feed\r\n    linefeed,\r\n\r\n    // only lexer-internal\r\n    identifierChar,  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    comment,\r\n\r\n    endofSourcecode, // will be generated after sourcecode end\r\n    \r\n    // Program statement types:\r\n    \r\n    // additional AST node types\r\n    constantNode,\r\n    callMethod,\r\n    unaryOp,\r\n    binaryOp,\r\n    table,\r\n    subquery,\r\n    list,\r\n    column,\r\n    columnDef,\r\n    allColumns, // *\r\n    isNull,\r\n    isNot, // used by lexer to lex \"is not null\" into one token\r\n    isNotNull,\r\n    omittedeStatement\r\n}\r\n\r\nexport var TokenTypeReadable: {[tt: number]: string} = {\r\n    [TokenType.identifier]: \"ein Bezeichner\",\r\n    // constants\r\n    [TokenType.integerConstant]: \"eine Integer-Konstante\",\r\n    [TokenType.floatingPointConstant]: \"eine Fließkomma-Konstante\",\r\n    [TokenType.booleanConstant]: \"eine boolesche Konstante\",\r\n    [TokenType.stringConstant]: \"eine Zeichenketten-Konstante\",\r\n    [TokenType.charConstant]: \"eine char-Konstante\",\r\n    [TokenType.true]: \"true\",\r\n    [TokenType.false]: \"false\",\r\n    // keywords\r\n    [TokenType.keywordRename]: \"rename\",\r\n    [TokenType.keywordDistinct]: \"distinct\",\r\n    [TokenType.keywordTo]: \"to\",\r\n    [TokenType.keywordAlter]: \"alter\",\r\n    [TokenType.keywordCommit]: \"commit\",\r\n    [TokenType.keywordAdd]: \"add\",\r\n    [TokenType.keywordDelete]: \"delete\",\r\n    [TokenType.keywordSelect]: \"select\",\r\n    [TokenType.keywordInsert]: \"insert\",\r\n    [TokenType.keywordInto]: \"into\",\r\n    [TokenType.keywordValues]: \"values\",\r\n    [TokenType.keywordUpdate]: \"update\",\r\n    [TokenType.keywordSet]: \"set\",\r\n    [TokenType.keywordNo]: \"no\",\r\n    [TokenType.keywordUse]: \"use\",\r\n    [TokenType.keywordCreate]: \"create\",\r\n    [TokenType.keywordReferences]: \"references\",\r\n    [TokenType.keywordPrimary]: \"primary\",\r\n    [TokenType.keywordForeign]: \"foreign\",\r\n    [TokenType.keywordTable]: \"table\",\r\n    [TokenType.keywordTables]: \"tables\",\r\n    [TokenType.keywordColumn]: \"column\",\r\n    [TokenType.keywordDrop]: \"drop\",\r\n    [TokenType.keywordUnique]: \"unique\",\r\n    [TokenType.keywordKey]: \"key\",\r\n    [TokenType.keywordIndex]: \"index\",\r\n    [TokenType.keywordConstraint]: \"constraint\",\r\n    [TokenType.keywordModify]: \"modify\",\r\n    [TokenType.keywordCascade]: \"cascade\",\r\n    [TokenType.keywordRestrict]: \"restrict\",\r\n    [TokenType.keywordAction]: \"action\",\r\n    [TokenType.keywordAutoincrement]: \"autoincrement\",\r\n    [TokenType.keywordFrom]: \"from\",\r\n    [TokenType.keywordWhere]: \"where\",\r\n    [TokenType.keywordGroup]: \"group\",\r\n    [TokenType.keywordBy]: \"by\",\r\n    [TokenType.keywordHaving]: \"having\",\r\n    [TokenType.keywordOrder]: \"order\",\r\n    [TokenType.keywordAscending]: \"ascending\",\r\n    [TokenType.keywordDescending]: \"descending\",\r\n    [TokenType.keywordNulls]: \"nulls\",\r\n    [TokenType.keywordFirst]: \"first\",\r\n    [TokenType.keywordLast]: \"last\",\r\n    [TokenType.keywordIs]: \"is\",\r\n    [TokenType.keywordNull]: \"null\",\r\n    [TokenType.keywordDatabase]: \"database\",\r\n\r\n\r\n    [TokenType.keywordAnd]: \"and\",\r\n    [TokenType.keywordOr]: \"or\",\r\n    [TokenType.keywordNot]: \"not\",\r\n\r\n    [TokenType.keywordJoin]: \"join\",\r\n    [TokenType.keywordNatural]: \"natural\",\r\n    [TokenType.keywordLeft]: \"left\",\r\n    [TokenType.keywordCross]: \"cross\",\r\n    [TokenType.keywordInner]: \"inner\",\r\n    [TokenType.keywordOuter]: \"outer\",\r\n    [TokenType.keywordOn]: \"on\",\r\n    [TokenType.keywordAs]: \"as\",\r\n    [TokenType.keywordLimit]: \"limit\",\r\n    [TokenType.keywordOffset]: \"offset\",\r\n    [TokenType.keywordIn]: \"in\",\r\n    [TokenType.keywordNotIn]: \"not in\",\r\n    [TokenType.keywordLike]: \"like\",\r\n    [TokenType.keywordCollate]: \"collate\",\r\n    [TokenType.keywordDefault]: \"default\",\r\n    [TokenType.keywordComment]: \"comment\",\r\n    [TokenType.keywordEngine]: \"engine\",\r\n    [TokenType.keywordCharset]: \"charset\",\r\n    [TokenType.keywordCharacter]: \"character\",\r\n    [TokenType.keywordStart]: \"start\",\r\n    [TokenType.keywordTransaction]: \"transaction\",\r\n    [TokenType.keywordIf]: \"if\",\r\n    [TokenType.keywordExists]: \"exists\",\r\n    [TokenType.keywordLock]: \"lock\",\r\n    [TokenType.keywordUnlock]: \"unlock\",\r\n    [TokenType.keywordWrite]: \"write\",\r\n    [TokenType.keywordRead]: \"read\",\r\n\r\n    // brackets\r\n    [TokenType.leftBracket]: \"(\", // ()\r\n    [TokenType.rightBracket]: \")\",\r\n    [TokenType.leftSquareBracket]: \"[\", // []\r\n    [TokenType.rightSquareBracket]: \"]\",\r\n    [TokenType.leftCurlyBracket]: \"{\", // {}\r\n    [TokenType.rightCurlyBracket]: \"}\",\r\n    [TokenType.leftRightSquareBracket]: \"[]\", \r\n    \r\n    // operators\r\n    [TokenType.dot]: \".\", //.\r\n    [TokenType.minus]: \"-\", \r\n    [TokenType.modulo]: \"%\", \r\n    [TokenType.plus]: \"+\", \r\n    [TokenType.multiplication]: \"*\", \r\n    [TokenType.division]: \"/\",\r\n    [TokenType.singleQuote]: \"'\", \r\n    [TokenType.doubleQuote]: \"\\\"\", // ']: \"\", \"\r\n    [TokenType.identifierQuote]: \"`\",\r\n    [TokenType.lower]: \"<\", \r\n    [TokenType.greater]: \">\",\r\n    [TokenType.equal]: \"=\", \r\n    [TokenType.lowerOrEqual]: \"<=\", \r\n    [TokenType.greaterOrEqual]: \">=\", \r\n    [TokenType.concatenation]: \"||\", \r\n    \r\n    // semicolon\r\n    [TokenType.semicolon]: \";\", // ;\r\n    [TokenType.colon]: \":\", // ;\r\n\r\n    // comma\r\n    [TokenType.comma]: \",\", \r\n\r\n    // backslash\r\n    [TokenType.backslash]: \"\\\\\",\r\n\r\n    // at\r\n    [TokenType.at]: \"@\",\r\n\r\n    // hash\r\n    [TokenType.hash]: \"#\",\r\n    \r\n    // pipe\r\n    [TokenType.pipe]: \"|\",\r\n\r\n    // whitespace\r\n    [TokenType.space]: \"ein Leerzeichen\",\r\n    [TokenType.tab]: \"ein Tabulatorzeichen\",\r\n\r\n    // newline\r\n    [TokenType.newline]: \"ein Zeilenumbruch\",\r\n\r\n    // only lexer-internal\r\n    [TokenType.identifierChar]: \"eines der Zeichen a..z, A..Z, _\",  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    [TokenType.comment]: \"ein Kommentar\",\r\n\r\n    [TokenType.endofSourcecode]: \"das Ende des Programmes\"\r\n\r\n}\r\n\r\nexport var specialCharList: {[keyword: string]:TokenType} = {\r\n    '(': TokenType.leftBracket, // ()\r\n    ')': TokenType.rightBracket,\r\n    '[': TokenType.leftSquareBracket, // []\r\n    ']': TokenType.rightSquareBracket,\r\n    '{': TokenType.leftCurlyBracket, // {}\r\n    '}': TokenType.rightCurlyBracket,\r\n    \r\n    // operators\r\n    '.': TokenType.dot, //.\r\n    ',': TokenType.comma, //.\r\n    '-': TokenType.minus,\r\n    '%': TokenType.modulo,\r\n    '+': TokenType.plus, \r\n    '*': TokenType.multiplication, \r\n    '/': TokenType.division,\r\n    '\\\\': TokenType.backslash,\r\n    '@': TokenType.at,\r\n    '#': TokenType.hash,\r\n    '|': TokenType.pipe,\r\n    '\\'': TokenType.singleQuote, \r\n    '\"': TokenType.doubleQuote, // ', \"\r\n    '`': TokenType.identifierQuote, // ', \"\r\n    \"<\": TokenType.lower,\r\n    \">\": TokenType.greater,\r\n    \"=\": TokenType.equal,\r\n    \"<>\": TokenType.notEqual,\r\n    \r\n    ';': TokenType.semicolon, // ;\r\n    ':': TokenType.colon, // ;\r\n\r\n    // whitespace\r\n    ' ': TokenType.space,\r\n    '\\t': TokenType.tab,\r\n\r\n    // newline\r\n    '\\n': TokenType.newline,\r\n    '\\r': TokenType.linefeed\r\n}\r\n\r\nexport var keywordList: {[keyword: string]:TokenType} = {\r\n    \"rename\": TokenType.keywordRename,\r\n    \"distinct\": TokenType.keywordDistinct,\r\n    \"to\": TokenType.keywordTo,\r\n    \"alter\": TokenType.keywordAlter,\r\n    \"commit\": TokenType.keywordCommit,\r\n    \"add\": TokenType.keywordAdd,\r\n    \"delete\": TokenType.keywordDelete,\r\n    \"select\": TokenType.keywordSelect,\r\n    \"insert\": TokenType.keywordInsert,\r\n    \"into\": TokenType.keywordInto,\r\n    \"values\": TokenType.keywordValues,\r\n    \"update\": TokenType.keywordUpdate,\r\n    \"set\": TokenType.keywordSet,\r\n    \"no\": TokenType.keywordNo,\r\n    \"use\": TokenType.keywordUse,\r\n    \"create\": TokenType.keywordCreate,\r\n    \"references\": TokenType.keywordReferences,\r\n    \"primary\": TokenType.keywordPrimary,\r\n    \"foreign\": TokenType.keywordForeign,\r\n    \"table\": TokenType.keywordTable,\r\n    \"tables\": TokenType.keywordTables,\r\n    \"column\": TokenType.keywordColumn,\r\n    \"drop\": TokenType.keywordDrop,\r\n    \"unique\": TokenType.keywordUnique,\r\n    \"key\": TokenType.keywordKey,\r\n    \"index\": TokenType.keywordIndex,\r\n    \"constraint\": TokenType.keywordConstraint,\r\n    \"modify\": TokenType.keywordModify,\r\n    \"cascade\": TokenType.keywordCascade,\r\n    \"restrict\": TokenType.keywordRestrict,\r\n    \"action\": TokenType.keywordAction,\r\n    \"autoincrement\": TokenType.keywordAutoincrement,\r\n    \"auto_increment\": TokenType.keywordAutoincrement,\r\n    \"from\": TokenType.keywordFrom,\r\n    \"where\": TokenType.keywordWhere,\r\n    \"true\": TokenType.true,\r\n    \"false\": TokenType.false,\r\n    \"group\": TokenType.keywordGroup,\r\n    \"by\": TokenType.keywordBy,\r\n    \"having\": TokenType.keywordHaving,\r\n    \"order\": TokenType.keywordOrder,\r\n    \"asc\": TokenType.keywordAscending,\r\n    \"desc\": TokenType.keywordDescending,\r\n    \"nulls\": TokenType.keywordNulls,\r\n    \"first\": TokenType.keywordFirst,\r\n    \"last\": TokenType.keywordLast,\r\n    \"is\": TokenType.keywordIs,\r\n    \"null\": TokenType.keywordNull,\r\n    \"database\": TokenType.keywordDatabase,\r\n\r\n    \"or\": TokenType.keywordOr,\r\n    \"and\": TokenType.keywordAnd,\r\n    \"not\": TokenType.keywordNot,\r\n\r\n    \"join\": TokenType.keywordJoin,\r\n    \"natural\": TokenType.keywordNatural,\r\n    \"left\": TokenType.keywordLeft,\r\n    \"cross\": TokenType.keywordCross,\r\n    \"inner\": TokenType.keywordInner,\r\n    \"outer\": TokenType.keywordOuter,\r\n    \"on\": TokenType.keywordOn,\r\n    \"as\": TokenType.keywordAs,\r\n    \"limit\": TokenType.keywordLimit,\r\n    \"offset\": TokenType.keywordOffset,\r\n    \"in\": TokenType.keywordIn,\r\n    \"not in\": TokenType.keywordNotIn,\r\n    \"like\": TokenType.keywordLike,\r\n    \"collate\": TokenType.keywordCollate,\r\n    \"default\": TokenType.keywordDefault,\r\n    \"comment\": TokenType.keywordComment,\r\n    \"engine\": TokenType.keywordEngine,\r\n    \"charset\": TokenType.keywordCharset,\r\n    \"character\": TokenType.keywordCharacter,\r\n    \"start\": TokenType.keywordStart,\r\n    \"transaction\": TokenType.keywordTransaction,\r\n    \"if\": TokenType.keywordIf,\r\n    \"exists\": TokenType.keywordExists,\r\n    \"lock\": TokenType.keywordLock,\r\n    \"unlock\": TokenType.keywordUnlock,\r\n    \"write\": TokenType.keywordWrite,\r\n    \"read\": TokenType.keywordRead\r\n\r\n\r\n};\r\n\r\nexport var EscapeSequenceList: {[keyword: string]:string} = {\r\n    \"n\": \"\\n\",\r\n    \"r\": \"\\r\",\r\n    \"t\": \"\\t\",\r\n    \"\\\"\": \"\\\"\",\r\n    \"'\": \"'\",\r\n    \"\\\\\": \"\\\\\"\r\n}\r\n\r\nexport type TextPosition = {\r\n    line: number,\r\n    column: number, \r\n    length: number\r\n}\r\n\r\nexport type TextPositionWithoutLength = {\r\n    line: number,\r\n    column: number\r\n}\r\n\r\nexport type Token = {\r\n    tt: TokenType,\r\n    value: string|number|boolean,\r\n    position: TextPosition,\r\n    commentBefore?: Token,\r\n    isDoubleQuotedIdentifier?: boolean\r\n}\r\n\r\nexport type TokenList = Token[];\r\n\r\nfunction tokenToString(t: Token){\r\n    return \"<div><span style='font-weight: bold'>\" + TokenType[t.tt] + \"</span>\" +\r\n            \"<span style='color: blue'> &nbsp;'\" + t.value + \"'</span> (l&nbsp;\" + t.position.line + \", c&nbsp;\" + t.position.column + \")</div>\";\r\n}\r\n \r\nexport function tokenListToString(tl: TokenList):string{\r\n    let s = \"\";\r\n    for(let t of tl){\r\n        s += tokenToString(t) + \"\\n\";\r\n    }\r\n    return s;\r\n}","import { TokenList, specialCharList, TokenType, Token, EscapeSequenceList, keywordList, TextPosition, TokenTypeReadable } from \"./Token.js\";\r\n\r\nenum LexerState {\r\n    number, identifier, stringConstant, characterConstant, multilineComment, EndoflineComment\r\n}\r\n\r\nvar endChar = \"►\"; // \\u10000\r\n\r\nexport type QuickFix = {\r\n    title: string,\r\n    editsProvider: (uri: monaco.Uri) => monaco.languages.WorkspaceTextEdit[]\r\n}\r\n\r\nexport type ErrorLevel = \"info\" | \"error\" | \"warning\";\r\n\r\nexport type Error = {\r\n    position: TextPosition,\r\n    text: string,\r\n    quickFix?: QuickFix,\r\n    level: ErrorLevel\r\n}\r\n\r\nexport class Lexer {\r\n\r\n    tokenList: TokenList;\r\n    nonSpaceLastTokenType: TokenType;\r\n    nonSpaceLastToken: Token;\r\n\r\n    errorList: Error[];\r\n    pos: number;\r\n    line: number;\r\n    column: number;\r\n\r\n    currentChar: string;\r\n    nextChar: string;\r\n\r\n    input: string;\r\n\r\n    spaceTokens: TokenType[] = [\r\n        TokenType.space, TokenType.tab, TokenType.newline\r\n    ];\r\n\r\n    bracketStack: TokenType[];\r\n    bracketError: string;\r\n    correspondingBracket: { [key: number]: TokenType } = {};\r\n\r\n    tokenTypesToMerge: { first: TokenType, second: TokenType, merged: TokenType }[] = [\r\n        { first: TokenType.keywordNotIn, second: TokenType.keywordIn, merged: TokenType.keywordNotIn },\r\n        { first: TokenType.keywordIs, second: TokenType.keywordNot, merged: TokenType.isNot },\r\n        { first: TokenType.isNot, second: TokenType.keywordNull, merged: TokenType.isNotNull },\r\n        { first: TokenType.keywordIs, second: TokenType.keywordNull, merged: TokenType.isNull },\r\n    ]\r\n\r\n    constructor() {\r\n        this.correspondingBracket[TokenType.leftBracket] = TokenType.rightBracket;\r\n        this.correspondingBracket[TokenType.leftCurlyBracket] = TokenType.rightCurlyBracket;\r\n        this.correspondingBracket[TokenType.leftSquareBracket] = TokenType.rightSquareBracket;\r\n        this.correspondingBracket[TokenType.rightBracket] = TokenType.leftBracket;\r\n        this.correspondingBracket[TokenType.rightCurlyBracket] = TokenType.leftCurlyBracket;\r\n        this.correspondingBracket[TokenType.rightSquareBracket] = TokenType.leftSquareBracket;\r\n    }\r\n\r\n    lex(input: string): { tokens: TokenList, errors: Error[], bracketError: string } {\r\n\r\n        this.input = input.replace(\"\\u00a0\", \" \");\r\n        this.tokenList = [];\r\n        this.errorList = [];\r\n        this.bracketError = null;\r\n        this.bracketStack = [];\r\n        this.pos = 0;\r\n        this.line = 1;\r\n        this.column = 1;\r\n        this.nonSpaceLastTokenType = null;\r\n        this.nonSpaceLastToken = null;\r\n\r\n\r\n        if (input.length == 0) {\r\n            return { tokens: this.tokenList, errors: this.errorList, bracketError: null };\r\n        }\r\n\r\n        this.currentChar = input.charAt(0);\r\n\r\n        this.nextChar = input.length > 1 ? input.charAt(1) : endChar;\r\n\r\n\r\n        while (this.currentChar != endChar) {\r\n            this.mainState();\r\n        }\r\n\r\n        if (this.bracketStack.length > 0) {\r\n            let bracketOpen = this.bracketStack.pop();\r\n            let bracketClosed = this.correspondingBracket[bracketOpen];\r\n\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[bracketClosed]);\r\n        }\r\n\r\n        return {\r\n            tokens: this.tokenList,\r\n            errors: this.errorList,\r\n            bracketError: this.bracketError\r\n        };\r\n\r\n    }\r\n\r\n    checkClosingBracket(tt: TokenType) {\r\n        if (this.bracketStack.length == 0) {\r\n            let bracketOpen = this.correspondingBracket[tt];\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[tt]);\r\n            return;\r\n        }\r\n        let openBracket = this.bracketStack.pop();\r\n        let correspondingBracket = this.correspondingBracket[openBracket];\r\n        if (tt != correspondingBracket) {\r\n            this.setBracketError(TokenTypeReadable[openBracket] + \" \" + TokenTypeReadable[correspondingBracket]);\r\n        }\r\n    }\r\n\r\n    setBracketError(error: string) {\r\n        if (this.bracketError == null) this.bracketError = error;\r\n    }\r\n\r\n    next() {\r\n        this.pos++;\r\n        this.currentChar = this.nextChar;\r\n        if (this.pos + 1 < this.input.length) {\r\n            this.nextChar = this.input.charAt(this.pos + 1);\r\n        } else {\r\n            this.nextChar = endChar;\r\n        }\r\n        this.column++; // column of current char\r\n    }\r\n\r\n\r\n\r\n    mainState() {\r\n\r\n        let char = this.currentChar;\r\n\r\n        let specialCharToken = specialCharList[char];\r\n\r\n        if (specialCharToken != null) {\r\n            switch (specialCharToken) {\r\n                case TokenType.leftSquareBracket:\r\n                    if (this.nextChar == \"]\") {\r\n                        this.pushToken(TokenType.leftRightSquareBracket, \"[]\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.leftSquareBracket, \"[\");\r\n                        this.bracketStack.push(specialCharToken);\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.division:\r\n                    if (this.nextChar == '*') {\r\n                        this.lexMultilineComment();\r\n                        return;\r\n                    }\r\n                    this.pushToken(TokenType.division, '/');\r\n                    this.next();\r\n                    return;\r\n                case TokenType.pipe:\r\n                    if (this.nextChar == \"|\") {\r\n                        this.pushToken(TokenType.concatenation, '||');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.pipe, '|');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.lower:\r\n                    if (this.nextChar == \">\") {\r\n                        this.pushToken(TokenType.notEqual, '<>');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == \"=\"){\r\n                        this.pushToken(TokenType.lowerOrEqual, '<=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                    else {\r\n                        this.pushToken(TokenType.lower, '<');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.greater:\r\n                    if (this.nextChar == \"=\"){\r\n                        this.pushToken(TokenType.greaterOrEqual, '>=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                    else {\r\n                        this.pushToken(TokenType.greater, '>');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.rightSquareBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.minus:\r\n                    if (this.isDigit(this.nextChar, 10) && !\r\n                        ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.rightBracket].indexOf(this.nonSpaceLastTokenType) >= 0)\r\n                    ) {\r\n                        this.lexNumber();\r\n                        return;\r\n                    } else if (this.nextChar == '-') {\r\n                        this.lexEndofLineComment(\"--\");\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.minus, '-');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.hash:\r\n                    if(this.nonSpaceLastToken == null || this.nonSpaceLastToken.position.line < this.line){\r\n                        this.lexEndofLineComment('#');\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.hash, \"#\");\r\n                        this.next();\r\n                    }\r\n                    break;\r\n                case TokenType.singleQuote:\r\n                    this.lexStringConstant(\"'\");\r\n                    return;\r\n                case TokenType.doubleQuote:\r\n                    this.lexStringConstant('\"');\r\n                    return;\r\n                case TokenType.newline:\r\n                    this.pushToken(TokenType.newline, '\\n');\r\n                    this.line++;\r\n                    this.column = 0;\r\n                    this.next();\r\n                    return;\r\n                case TokenType.space:\r\n                case TokenType.tab:\r\n                    this.lexSpace();\r\n                    return;\r\n                case TokenType.linefeed:\r\n                    this.next();\r\n                    return;\r\n                case TokenType.at:\r\n                    this.lexAnnotation();\r\n                    return;\r\n                case TokenType.identifierQuote:\r\n                    this.lexQuotedIdentifier();\r\n                    return;\r\n                \r\n            }\r\n\r\n            this.pushToken(specialCharToken, char);\r\n            this.next();\r\n            return;\r\n\r\n        }\r\n\r\n        // no special char. Number?\r\n\r\n        if (this.isDigit(char, 10)) {\r\n            this.lexNumber();\r\n            return;\r\n        }\r\n\r\n        this.lexIdentifierOrKeyword();\r\n\r\n    }\r\n\r\n\r\n    lexQuotedIdentifier() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let s: string = \"\";\r\n        this.next();\r\n        while(this.currentChar != '`' && this.currentChar != endChar){\r\n            s += this.currentChar;\r\n            this.next();\r\n        }\r\n        if(this.currentChar == endChar){\r\n            this.pushError(\"Innerhalb eines in `` eingeschlossenen Bezeichners wurde das Ende der Datei erreicht.\", s.length + 1, \"error\", line, column);\r\n        } else {\r\n            this.next(); // skip `\r\n            this.pushToken(TokenType.identifier, s, line, column);\r\n        }\r\n    }\r\n\r\n    pushToken(tt: TokenType, text: string | number | boolean, line: number = this.line, column: number = this.column, length: number = (\"\" + text).length) {\r\n        let t: Token = {\r\n            tt: tt,\r\n            value: text,\r\n            position: {\r\n                column: column,\r\n                line: line,\r\n                length: length\r\n            }\r\n        }\r\n\r\n        for (let tripel of this.tokenTypesToMerge) {\r\n            if (tt == tripel.second && this.nonSpaceLastTokenType == tripel.first) {\r\n                let newLength = column - this.nonSpaceLastToken.position.column + length;\r\n                this.nonSpaceLastToken.tt = tripel.merged;\r\n                this.nonSpaceLastToken.position = { column: this.nonSpaceLastToken.position.column, line: line, length: newLength };\r\n                this.nonSpaceLastToken.value = this.nonSpaceLastToken.value + \" \" + text;\r\n\r\n                this.nonSpaceLastTokenType = tripel.merged;\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (!(this.spaceTokens.indexOf(tt) >= 0)) {\r\n            this.nonSpaceLastTokenType = tt;\r\n            this.nonSpaceLastToken = t;\r\n        }\r\n\r\n        this.tokenList.push(t);\r\n    }\r\n\r\n    pushError(text: string, length: number, errorLevel: ErrorLevel = \"error\", line: number = this.line, column: number = this.column) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: {\r\n                line: line,\r\n                column: column,\r\n                length: length\r\n            },\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n\r\n\r\n    isDigit(a: string, base: number) {\r\n        var charCode = a.charCodeAt(0);\r\n\r\n        if (base == 10) return (charCode >= 48 && charCode <= 57); // 0 - 9\r\n        if (base == 2) return (charCode >= 48 && charCode <= 49); // 0, 1\r\n        if (base == 8) return (charCode >= 48 && charCode <= 55); // 0 - 7\r\n        if (base == 16) return (charCode >= 48 && charCode <= 57) || (charCode >= 97 && charCode <= 102) ||\r\n            (charCode >= 65 && charCode <= 70); // 0 - 9 || a - f || A - F\r\n    }\r\n\r\n    lexSpace() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n\r\n        let posStart = this.pos;\r\n        while (this.currentChar == \" \" || this.currentChar == \"\\t\") {\r\n            this.next();\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n        this.pushToken(TokenType.space, this.input.substring(posStart, posEnd), line, column);\r\n        return;\r\n\r\n    }\r\n\r\n    lexCharacterConstant() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n        this.next();\r\n        let char = this.currentChar;\r\n        if (char == \"\\\\\") {\r\n            let escapeChar = EscapeSequenceList[this.nextChar];\r\n            if (escapeChar == null) {\r\n                this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                if (this.nextChar != \"'\") {\r\n                    char = this.nextChar;\r\n                    this.next();\r\n                }\r\n            } else {\r\n                char = escapeChar;\r\n                this.next();\r\n            }\r\n        }\r\n        this.next();\r\n        if (this.currentChar != \"'\") {\r\n            this.pushError(\"Das Ende der char-Konstante wird erwartet (').\", 1);\r\n        } else {\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.charConstant, char, line, column);\r\n\r\n    }\r\n\r\n    lexStringConstant(beginChar: string) {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let text = \"\";\r\n\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\\\\") {\r\n                let escapeChar = EscapeSequenceList[this.nextChar];\r\n                if (escapeChar == null) {\r\n                    this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                } else {\r\n                    char = escapeChar;\r\n                    this.next();\r\n                }\r\n            } else if (char == beginChar) {\r\n                this.next();\r\n                if(this.currentChar != beginChar){\r\n                    break;\r\n                }\r\n                text += beginChar;\r\n            } else if (char == \"\\n\" || char == endChar) {\r\n                this.pushError('Innerhalb einer String-Konstante wurde das Zeilenende erreicht.', text.length + 1, \"error\", line, column);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        if (beginChar == \"'\") {\r\n            this.pushToken(TokenType.stringConstant, text, line, column, text.length + 2);\r\n        } else {\r\n            this.pushToken(TokenType.identifier, text, line, column, text.length + 2);\r\n            this.tokenList[this.tokenList.length - 1].isDoubleQuotedIdentifier = true;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    lexMultilineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let lastCharWasNewline: boolean = false;\r\n\r\n        let text = \"/*\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"*\" && this.nextChar == \"/\") {\r\n                this.next();\r\n                this.next();\r\n                text += \"*/\";\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                this.pushError(\"Innerhalb eines Mehrzeilenkommentars (/*... */) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            if (char == \"\\n\") {\r\n                this.line++;\r\n                this.column = 0;\r\n                lastCharWasNewline = true;\r\n                text += char;\r\n            } else if (!(lastCharWasNewline && char == \" \")) {\r\n                text += char;\r\n                lastCharWasNewline = false;\r\n            }\r\n\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n    lexEndofLineComment(commentStart: string) {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let text = commentStart;\r\n        for(let i = 0; i < commentStart.length; i++){\r\n            this.next();\r\n        }\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\n\") {\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                // this.pushError(\"Innerhalb eines Einzeilenkommentars (//... ) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n\r\n    lexNumber() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let sign: number = 1;\r\n        if (this.currentChar == '-') {\r\n            sign = -1;\r\n            this.next();\r\n        }\r\n\r\n        let posStart = this.pos;\r\n\r\n        let firstChar = this.currentChar;\r\n\r\n        this.next();\r\n\r\n        let radix: number = 10;\r\n\r\n        if (firstChar == '0' && (['b', 'x', '0', '1', '2', '3', '4', '5', '6', '7'].indexOf(this.currentChar) >= 0)) {\r\n            if (this.currentChar == 'x') {\r\n                radix = 16;\r\n                this.next();\r\n            } else if (this.currentChar == 'b') {\r\n                radix = 2;\r\n                this.next();\r\n            } else radix = 8;\r\n            posStart = this.pos;\r\n        }\r\n\r\n        while (this.isDigit(this.currentChar, radix)) {\r\n            this.next();\r\n        }\r\n\r\n        let tt = TokenType.integerConstant;\r\n\r\n        if (this.currentChar == \".\") {\r\n            tt = TokenType.floatingPointConstant;\r\n\r\n            this.next();\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n\r\n        }\r\n\r\n        let base = this.input.substring(posStart, this.pos);\r\n\r\n        posStart = this.pos;\r\n        let exponent: number = 0;\r\n\r\n        let hasExponential: boolean = false;\r\n        //@ts-ignore\r\n        if (this.currentChar == \"e\") {\r\n            hasExponential = true;\r\n            this.next();\r\n            let posExponentStart: number = this.pos;\r\n\r\n            //@ts-ignore\r\n            if (this.currentChar == '-') {\r\n                this.next();\r\n            }\r\n\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n            let exponentString = this.input.substring(posExponentStart, this.pos);\r\n            exponent = Number.parseInt(exponentString);\r\n        }\r\n\r\n        if (this.currentChar == 'd' || this.currentChar == 'f') {\r\n            tt == TokenType.floatingPointConstant;\r\n            this.next();\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n        }\r\n\r\n        let value: number = (tt == TokenType.integerConstant) ? Number.parseInt(base, radix) : Number.parseFloat(base);\r\n        value *= sign;\r\n        if (exponent != 0) value *= Math.pow(10, exponent);\r\n\r\n        this.pushToken(tt, value, line, column);\r\n\r\n    }\r\n\r\n    lexAnnotation() {\r\n        let line = this.line;\r\n        let column = this.column - 1;\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n        this.next(); // skip@\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n        this.pushToken(TokenType.at, text, line, column, text.length + 1);\r\n    }\r\n\r\n    lexIdentifierOrKeyword() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n\r\n        let tt = keywordList[text.toLowerCase()];\r\n        if (tt != null && typeof tt == \"number\") {\r\n\r\n            switch (tt) {\r\n                case TokenType.true:\r\n                    this.pushToken(TokenType.booleanConstant, true, line, column);\r\n                    break;\r\n                case TokenType.false:\r\n                    this.pushToken(TokenType.booleanConstant, false, line, column);\r\n                    break;\r\n                default:\r\n                    this.pushToken(tt, text, line, column);\r\n                    break;\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        this.pushToken(TokenType.identifier, text, line, column);\r\n\r\n    }\r\n\r\n    isSpace(char: string): boolean {\r\n        return char == \" \" || char == \"\\n\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport function errorListToString(errorList: Error[]): string {\r\n    let s = \"\";\r\n\r\n    for (let error of errorList) {\r\n\r\n        s += \"Z \" + error.position.line + \", S \" + error.position.column + \": \";\r\n        s += error.text + \"<br>\";\r\n\r\n    }\r\n\r\n    return s;\r\n}","import { Lexer } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Token, TokenList, TokenType, tokenListToString } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class Formatter implements monaco.languages.DocumentFormattingEditProvider,\r\n    monaco.languages.OnTypeFormattingEditProvider {\r\n\r\n    autoFormatTriggerCharacters: string[] = ['\\n'];\r\n\r\n    displayName?: string = \"Java-Autoformat\";\r\n\r\n\r\n    constructor(\r\n        // private main: Main\r\n    ) {\r\n\r\n    }\r\n\r\n    init() {\r\n        monaco.languages.registerDocumentFormattingEditProvider('myJava', this);\r\n        monaco.languages.registerOnTypeFormattingEditProvider('myJava', this);\r\n    }\r\n\r\n    provideOnTypeFormattingEdits(model: monaco.editor.ITextModel, position: monaco.Position, ch: string, options: monaco.languages.FormattingOptions, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n    deleteOverlappingRanges(edits: monaco.languages.TextEdit[]) {\r\n        for (let i = 0; i < edits.length - 1; i++) {\r\n            let e = edits[i];\r\n            let e1 = edits[i + 1];\r\n            if (e.range.endLineNumber < e1.range.startLineNumber) continue;\r\n            if (e.range.endLineNumber == e1.range.startLineNumber) {\r\n                if (e.range.endColumn >= e1.range.startColumn) {\r\n                    edits.splice(i + 1, 1);\r\n                } else {\r\n                    if (e.range.endColumn == 0 && e.text.length > 0 && e1.range.startColumn == 1 && e1.range.endColumn > e1.range.startColumn && e1.text == \"\") {\r\n                        let delta = e.text.length - (e1.range.endColumn - e1.range.startColumn);\r\n                        if (delta > 0) { \r\n                            e.text = e.text.substr(0, delta);\r\n                            edits.splice(i+1, 1);\r\n                        }\r\n                        else if (delta < 0)\r\n                        { \r\n                            //@ts-ignore\r\n                            e1.range.endColumn = e1.range.startColumn - delta;\r\n                            edits.splice(i, 1);\r\n                            i--;\r\n\r\n                         }\r\n                        else {\r\n                            edits.splice(i, 2);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    provideDocumentFormattingEdits(model: monaco.editor.ITextModel,\r\n        options: monaco.languages.FormattingOptions,\r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n\r\n    format(model: monaco.editor.ITextModel): monaco.languages.TextEdit[] {\r\n\r\n        let edits: monaco.languages.TextEdit[] = [];\r\n\r\n        // if (this.main.currentWorkspace == null || this.main.currentWorkspace.currentlyOpenModule == null) {\r\n        //     return [];\r\n        // }\r\n\r\n        // let text = this.main.monaco_editor.getValue({ preserveBOM: false, lineEnding: \"\\n\" });\r\n\r\n        let text = model.getValue(monaco.editor.EndOfLinePreference.LF);\r\n\r\n        let tokenlist = new Lexer().lex(text).tokens;\r\n\r\n        // let tokenlist = this.main.currentWorkspace.currentlyOpenModule.tokenList;\r\n\r\n        if (tokenlist == null) return [];\r\n\r\n        // TODO:\r\n        // { at the end of line, with one space before; followed only by spaces and \\n\r\n        // indent lines according to { and }\r\n        // Beware: int i[] = { ... }\r\n        // exactly one space before/after binary operators\r\n        // no space after ( and no space before )\r\n        // (   ) -> ()\r\n        // (  ()) -> (())\r\n        // (()  ) -> (())\r\n\r\n        let lastNonSpaceToken: Token = null;\r\n        let indentLevel = 0;\r\n        let tabSize = 3;\r\n        let curlyBracesOpenAtLines: number[] = [];\r\n        let indentLevelAtSwitchStatements: number[] = [];\r\n        let switchHappend: boolean = false;\r\n        let lastTokenWasNewLine: number = 0;\r\n        let roundBracketsOpen: number = 0;\r\n\r\n        for (let i = 0; i < tokenlist.length; i++) {\r\n\r\n            let t = tokenlist[i];\r\n            lastTokenWasNewLine--;\r\n\r\n            switch (t.tt) {\r\n\r\n                case TokenType.leftCurlyBracket:\r\n                    if (switchHappend) {\r\n                        switchHappend = false;\r\n                        indentLevelAtSwitchStatements.push(indentLevel + 2);\r\n                        indentLevel++;\r\n                    }\r\n                    indentLevel++;\r\n                    curlyBracesOpenAtLines.push(t.position.line);\r\n                    if (lastNonSpaceToken != null) {\r\n                        let tt = lastNonSpaceToken.tt;\r\n                        if (tt == TokenType.rightBracket || tt == TokenType.identifier || tt == TokenType.leftRightSquareBracket) {\r\n                            this.replaceBetween(lastNonSpaceToken, t, edits, \" \");\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let token1 = tokenlist[i + 1];\r\n                        if (token1.tt != TokenType.newline && token1.tt != TokenType.space) {\r\n                            this.insertSpaces(edits, token1.position.line, token1.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    if (indentLevelAtSwitchStatements[indentLevelAtSwitchStatements.length - 1] == indentLevel) {\r\n                        indentLevelAtSwitchStatements.pop();\r\n                        indentLevel--;\r\n                        // if(t.position.column >= 3){\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                        // }    \r\n                    }\r\n                    indentLevel--;\r\n                    let openedAtLine = curlyBracesOpenAtLines.pop();\r\n                    if (openedAtLine != null && openedAtLine != t.position.line) {\r\n                        if (lastNonSpaceToken != null && lastNonSpaceToken.position.line == t.position.line) {\r\n                            this.replace(edits, t.position, t.position, \"\\n\" + \" \".repeat(indentLevel * tabSize));\r\n                        }\r\n                    } else {\r\n                        if (i > 0) {\r\n                            let token1 = tokenlist[i - 1];\r\n                            if (token1.tt != TokenType.space && token1.tt != TokenType.newline) {\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    roundBracketsOpen++;\r\n                    if (i < tokenlist.length - 2) {\r\n                        let nextToken1 = tokenlist[i + 1];\r\n                        let nextToken2 = tokenlist[i + 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                            i++;\r\n                            if (nextToken2.tt == TokenType.rightBracket) {\r\n                                i++;\r\n                                roundBracketsOpen--;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt == TokenType.space && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line, lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    roundBracketsOpen--;\r\n                    if (i > 1) {\r\n                        let nextToken1 = tokenlist[i - 1];\r\n                        let nextToken2 = tokenlist[i - 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.newline:\r\n                    lastTokenWasNewLine = 2;\r\n                    if (i < tokenlist.length - 2) {\r\n\r\n                        let lastTokenIsOperator = this.isBinaryOperator(lastNonSpaceToken?.tt);\r\n                        let nextTokenIsOperator = this.isBinaryOperator(this.getNextNonSpaceToken(i, tokenlist).tt);\r\n\r\n                        let beginNextLine = tokenlist[i + 1];\r\n                        let token2 = tokenlist[i + 2];\r\n                        let currentIndentation = 0;\r\n\r\n                        if (beginNextLine.tt == TokenType.newline) {\r\n                            break;\r\n                        }\r\n\r\n                        let delta: number = 0;\r\n                        if (beginNextLine.tt == TokenType.space) {\r\n                            if (token2.tt == TokenType.newline) {\r\n                                break;\r\n                            }\r\n                            currentIndentation = beginNextLine.position.length;\r\n                            i++;\r\n                            if (token2.tt == TokenType.rightCurlyBracket) {\r\n                                delta = -1;\r\n                            }\r\n                        }\r\n\r\n                        if (beginNextLine.tt == TokenType.rightCurlyBracket) {\r\n                            delta = -1;\r\n                            // indentLevel--;\r\n                            // curlyBracesOpenAtLines.pop();\r\n                            // lastNonSpaceToken = beginNextLine;\r\n                            // i++;\r\n                        }\r\n\r\n                        if(nextTokenIsOperator || lastTokenIsOperator) delta = 1;\r\n\r\n                        let il = indentLevel + delta;\r\n                        if(roundBracketsOpen > 0){\r\n                            il++;\r\n                        }\r\n                        if (il < 0) il = 0;\r\n\r\n                        let correctIndentation = il * tabSize;\r\n\r\n                        if (correctIndentation > currentIndentation) {\r\n                            this.insertSpaces(edits, t.position.line + 1, 0, correctIndentation - currentIndentation);\r\n                        } else if (correctIndentation < currentIndentation) {\r\n                            this.deleteSpaces(edits, t.position.line + 1, 0, currentIndentation - correctIndentation);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.space:\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment) {\r\n                            if (i > 0) {\r\n                                let lastToken = tokenlist[i - 1];\r\n                                if (lastToken.tt != TokenType.newline) {\r\n                                    if (t.position.length > 1) {\r\n                                        this.deleteSpaces(edits, t.position.line, t.position.column, t.position.length - 1);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.comma:\r\n                case TokenType.semicolon:\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt != TokenType.newline && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.tt == TokenType.space && lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line,\r\n                                    lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment && nextToken.tt != TokenType.space && nextToken.tt != TokenType.newline) {\r\n                            this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightSquareBracket:\r\n                    if (lastNonSpaceToken != null && lastNonSpaceToken.tt == TokenType.leftSquareBracket) {\r\n                        this.replaceBetween(lastNonSpaceToken, t, edits, \"\");\r\n\r\n                    }\r\n                    break;\r\n\r\n            }\r\n\r\n            // binary operator?\r\n            if (this.isBinaryOperator(t.tt)) {\r\n\r\n                let lowerGeneric = t.tt == TokenType.lower && this.lowerBelongsToGenericExpression(i, tokenlist);\r\n                let greaterGeneric = t.tt == TokenType.greater && this.greaterBelongsToGenericExpression(i, tokenlist);\r\n\r\n                if (lastTokenWasNewLine <= 0 && lastNonSpaceToken != null && [TokenType.leftBracket, TokenType.comma].indexOf(lastNonSpaceToken.tt) < 0) {\r\n\r\n                    if (i > 0) {\r\n                        let tokenBefore = tokenlist[i - 1];\r\n                        let spaces = (lowerGeneric || greaterGeneric) ? 0 : 1;\r\n                        if (tokenBefore.tt == TokenType.space) {\r\n                            if (tokenBefore.position.length != spaces) {\r\n                                this.insertSpaces(edits, tokenBefore.position.line,\r\n                                    tokenBefore.position.column, spaces - tokenBefore.position.length);\r\n                            }\r\n                        } else {\r\n                            if (spaces == 1)\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        let spaces = (lowerGeneric) ? 0 : 1;\r\n                        if (nextToken.tt == TokenType.space) {\r\n                            if (greaterGeneric && i < tokenlist.length - 2 && tokenlist[i + 2].tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (nextToken.position.length != spaces) {\r\n                                this.insertSpaces(edits, nextToken.position.line,\r\n                                    nextToken.position.column, spaces - nextToken.position.length);\r\n                            }\r\n                        } else {\r\n                            if (greaterGeneric && nextToken.tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (spaces == 1) this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            if (t.tt != TokenType.space && t.tt != TokenType.newline) {\r\n                lastNonSpaceToken = t;\r\n            }\r\n\r\n        }\r\n\r\n        this.deleteOverlappingRanges(edits);\r\n\r\n        return edits;\r\n\r\n    }\r\n    getNextNonSpaceToken(currentIndex: number, tokenlist: TokenList):  Token {\r\n\r\n        if(currentIndex == tokenlist.length - 1) return tokenlist[currentIndex];\r\n\r\n        let j = currentIndex + 1;\r\n        while(j < tokenlist.length - 1 && (tokenlist[j].tt == TokenType.space )){\r\n            j++;\r\n        }\r\n        return tokenlist[j];\r\n\r\n    }\r\n\r\n    lowerBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position + 1;\r\n        while (i < tokenlist.length) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.greater) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i++;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    greaterBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position - 1;\r\n        while (i >= 0) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.lower) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i--;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isBinaryOperator(token: TokenType) {\r\n        return token != null && token >= TokenType.modulo && token <= TokenType.equal;\r\n    }\r\n\r\n    private replaceBetween(lastNonSpaceToken: Token, t: Token, edits: monaco.languages.TextEdit[], text: string) {\r\n        let positionFrom = {\r\n            line: lastNonSpaceToken.position.line,\r\n            column: lastNonSpaceToken.position.column + lastNonSpaceToken.position.length\r\n        };\r\n        let positionTo = {\r\n            line: t.position.line,\r\n            column: t.position.column\r\n        };\r\n        if (positionFrom.line != positionTo.line ||\r\n            positionTo.column - positionFrom.column != text.length) {\r\n            this.replace(edits, positionFrom, positionTo, text);\r\n        }\r\n    }\r\n\r\n    deleteSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column + numberOfSpaces + (column == 0 ? 1 : 0),\r\n                endLineNumber: line\r\n            },\r\n            text: \"\"\r\n        });\r\n    }\r\n\r\n    insertSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n\r\n        if (numberOfSpaces < 0) {\r\n            this.deleteSpaces(edits, line, column, -numberOfSpaces);\r\n            return;\r\n        }\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column,\r\n                endLineNumber: line\r\n            },\r\n            text: \" \".repeat(numberOfSpaces)\r\n        });\r\n    }\r\n\r\n    replace(edits: monaco.languages.TextEdit[], positionFrom: { line: number; column: number; }, positionTo: { line: number; column: number; }, text: string) {\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: positionFrom.column,\r\n                startLineNumber: positionFrom.line,\r\n                endColumn: positionTo.column,\r\n                endLineNumber: positionTo.line\r\n            },\r\n            text: text\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\n\r\nexport type Theme = {\r\n    name: string,\r\n    monacoTheme: string,\r\n    cssColors: { [color: string]: string }\r\n}\r\n\r\nexport class ThemeManager {\r\n\r\n    themes: Theme[] = [];\r\n\r\n    constructor() {\r\n        this.initThemes();\r\n    }\r\n\r\n    switchTheme(name: string) {\r\n        for (let theme of this.themes) {\r\n            if (theme.name == name) {\r\n                this.internalSwitchTheme(theme);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    \r\n    private internalSwitchTheme(theme: Theme) {\r\n        monaco.editor.setTheme(theme.monacoTheme);\r\n\r\n        let root = document.documentElement;\r\n        for (const key of Object.keys(theme.cssColors)) {\r\n            const value = theme.cssColors[key]\r\n\r\n            root.style.setProperty(key, value);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    initThemes() {\r\n\r\n        this.themes.push({\r\n            name: \"dark\",\r\n            monacoTheme: \"myCustomThemeDark\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"#1e1e1e\",\r\n                \"--backgroundLight\": \"#252526\",\r\n                \"--backgroundHeading\": \"#37373d\",\r\n                \"--backgroundSelected\": \"#2a2d2e\",\r\n                \"--fontColorNormal\": \"#c2cccc\",\r\n                \"--fontColorLight\": \"#e7e7e7\",\r\n                \"--slider\": \"#414141\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#1e1e1e\",\r\n                \"--scrollbar-thumb\": \"#3e3e3e\",\r\n                \"--scrollbar-thumb-hover\": \"#5e5e5e\",\r\n                \"--scrollbar-thumb-active\": \"#7e7e7e\",\r\n                \"--submenu-hover\": \"#094771\",\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#616162\",\r\n                \"--file-hover\": \"hsla(0, 0%, 38%, 0.125)\",\r\n                \"--file-active\": \"#094771\",\r\n                \"--file-active-hover\": \"rgba(9, 71, 113, 0.827)\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"blue\",\r\n                \"--contextmenu-background\": \"#3c3c3c\",\r\n                \"--contextmenu-color\": \"rgb(212,212,212)\",\r\n                \"--contextmenu-hover-background\": \"#094771\",\r\n                \"--contextmenu-hover-color\": \"#ffffff\",\r\n                \"--error-filename\": \"#2a709e\",\r\n                \"--error-line-ative\": \"#094771\",\r\n                \"--error-line-hover\": \"rgba(96, 96, 96, 0.125)\",\r\n                \"--error-position\": \"#c0802d\",\r\n                \"--linecolumn\": \"#14c714\",\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#2b2b7d2f\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"rgb(85,85,85)\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#383838\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#252526\",\r\n                \"--editorTooltip-border\": \"#454545\",\r\n\r\n                \"--renameInput-color\": \"#ffffff\",\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"white\",\r\n                \"--bottomdiv-tabheading-active\": \"rgb(97,97,255)\",\r\n                \"--noErrorMessage\": \"rgb(37, 211, 37)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"#1e1e1e\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"white\",\r\n                \"--consoleEntryIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"white\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 51, 51)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--deValue\": \"white\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#383838\",\r\n                \"--helper-border-color\": \"#d4d4d4\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#ffffff\",\r\n                \"--runInputColor\": \"#ffffff\",\r\n                \"--runBackgroundColor\": \"rgba(255, 255, 255, 0.2)\",\r\n\r\n                // table\r\n                \"--table-even\": \"#222\", /*#d1d2e4*/\r\n                \"--table-heading\": \"#202060\", /*#c3f2b9*/\r\n\r\n\r\n            }\r\n        });\r\n\r\n        let highlightColor = \"#8080ff\";\r\n\r\n        this.themes.push({\r\n            name: \"light\",\r\n            monacoTheme: \"myCustomThemeLight\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"white\",\r\n                \"--backgroundLight\": \"#f3f3f3\",\r\n                \"--backgroundHeading\": \"#dcdcdc\",\r\n                \"--backgroundSelected\": \"#e8e8e8\",\r\n                \"--fontColorNormal\": \"#000\",\r\n                \"--fontColorLight\": \"#303030\",\r\n                \"--slider\": \"#b0b0b0\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#e3e3e3\",\r\n                \"--scrollbar-thumb\": \"#bababa\",\r\n                \"--scrollbar-thumb-hover\": \"#8e8e8e\",\r\n                \"--scrollbar-thumb-active\": \"#616161\",\r\n                \"--submenu-hover\": highlightColor,\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#cfcfcf\",\r\n                \"--file-hover\": \"#e8e8e8\",\r\n                \"--file-active\": highlightColor,\r\n                \"--file-active-hover\": \"#a0a0ff\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"white\",\r\n                \"--contextmenu-background\": \"white\",\r\n                \"--contextmenu-color\": \"#756161\",\r\n                \"--contextmenu-hover-background\": highlightColor,\r\n                \"--contextmenu-hover-color\": \"#a0a0ff\",\r\n                \"--error-filename\": \"#ff0000\",\r\n                \"--error-line-ative\": \"#ffa0a0\",\r\n                \"--error-line-hover\": \"#ffc0c0\",\r\n                \"--error-position\": \"#804040\",\r\n                \"--linecolumn\": \"#14c714\", // TODO\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#babaec80\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"#c0c0c0\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#e0e0e0\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#e0e0e0\",\r\n                \"--editorTooltip-border\": \"#9d9d9d\",\r\n\r\n                \"--renameInput-color\": \"#000000\",\r\n\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"#424242\",\r\n                \"--bottomdiv-tabheading-active\": \"#424242\",\r\n                \"--noErrorMessage\": \"rgb(17, 180, 17)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"white\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"#0000a0\",\r\n                \"--consoleEntryIdentifier\": \"black\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"#756161\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 21, 21)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"black\",\r\n                \"--deValue\": \"#0000a0\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#f3f3f3\",\r\n                \"--helper-border-color\": \"#606060\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#303030\",\r\n                \"--runInputColor\": \"#000000\",\r\n                \"--runBackgroundColor\": \"rgba(0, 0, 0, 0.2)\",\r\n\r\n                // table\r\n                \"--table-even\": \"#d1d2e4\", /*#d1d2e4*/\r\n                \"--table-heading\": \"#c3f2b9\", /*#c3f2b9*/\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { TokenType } from \"../lexer/Token.js\";\r\n\r\ntype CheckFunction = (columnIdentifier: string, parameterValues: number[]) => string;\r\ntype OutputFunction = (value: any, parameterValues: number[]) => string;\r\n\r\nexport abstract class SQLType {\r\n\r\n    abstract canCastTo(type2: SQLType): boolean;\r\n\r\n    abstract getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType;\r\n\r\n    abstract getUnaryResultType(operator: TokenType): SQLType;\r\n\r\n    abstract getBinaryResult(operator: TokenType, value1: any, value2: any): any;\r\n\r\n    abstract toString(): string;\r\n\r\n    abstract getBaseTypeName(): string;\r\n\r\n}\r\n\r\nexport class SQLBaseType extends SQLType {\r\n    // Map<tokenType, Map<SecondType, ResultType>>\r\n    binaryResultTypes: Map<TokenType, Map<SQLBaseType, SQLBaseType>> = new Map();\r\n\r\n    unaryOperators: TokenType[] = [];\r\n\r\n    static baseTypes: SQLBaseType[] = [];\r\n    static baseTypeMap: Map<string, SQLBaseType> = new Map();\r\n\r\n    public canCastToList: string[];\r\n\r\n    constructor(public name: string, public parameterDescriptions: string[],\r\n        public checkFunction: CheckFunction, public outputFunction: OutputFunction, canCastToList: string[]) {\r\n        super();\r\n        this.canCastToList = canCastToList.slice(0);\r\n        let ownIndex = this.canCastToList.indexOf(name);\r\n        if(ownIndex >= 0) this.canCastToList.splice(ownIndex, 1);\r\n    }\r\n\r\n    static fromConstantType(tt: TokenType): SQLBaseType {\r\n        switch (tt) {\r\n            case TokenType.stringConstant:\r\n                return this.baseTypeMap.get(\"text\");\r\n            case TokenType.integerConstant:\r\n                return this.baseTypeMap.get(\"integer\");\r\n            case TokenType.floatingPointConstant:\r\n                return this.baseTypeMap.get(\"float\");\r\n            case TokenType.charConstant:\r\n                return this.baseTypeMap.get(\"text\");\r\n            case TokenType.booleanConstant:\r\n                return this.baseTypeMap.get(\"boolean\");\r\n            case TokenType.keywordNull:\r\n                return this.baseTypeMap.get(\"null\");\r\n        \r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    getBaseTypeName(): string {\r\n        return this.name;\r\n    }\r\n\r\n    toString(): string {\r\n        return this.name;\r\n    }\r\n\r\n    static getBaseType(name: string) {\r\n        if(name != null && name.toLocaleLowerCase() == 'char'){\r\n            name = 'varchar';\r\n            \r\n        } \r\n        return this.baseTypeMap.get(name.toLocaleLowerCase());\r\n    }\r\n\r\n    static addBaseTypes(baseTypes: SQLBaseType[]) {\r\n        SQLBaseType.baseTypes = SQLBaseType.baseTypes.concat(baseTypes);\r\n        baseTypes.forEach(t => SQLBaseType.baseTypeMap.set(t.name, t));\r\n    }\r\n\r\n    addBinaryOperation(tokenType: TokenType | TokenType[], secondType: SQLBaseType, resultType: SQLBaseType, isCommutative: boolean = true) {\r\n\r\n        if (!Array.isArray(tokenType)) tokenType = [tokenType];\r\n\r\n        tokenType.forEach(t => {\r\n            let map: Map<SQLBaseType, SQLBaseType> = this.binaryResultTypes.get(t);\r\n            if (map == null) {\r\n                map = new Map();\r\n                this.binaryResultTypes.set(t, map);\r\n            }\r\n            map.set(secondType, resultType);\r\n            if (isCommutative && secondType != this) {\r\n                secondType.addBinaryOperation(t, this, resultType, false);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    canCastTo(type2: SQLType): boolean {\r\n\r\n        let bt2: SQLBaseType = type2 instanceof SQLBaseType ? type2 : type2[\"baseType\"];\r\n\r\n        return this.canCastToList.indexOf(bt2.name) >= 0 || this.name == bt2.name;\r\n\r\n    }\r\n\r\n    getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType {\r\n\r\n\r\n        let map = this.binaryResultTypes.get(operator);\r\n        if (map == null) return null;\r\n\r\n        let bt2: SQLBaseType = secondType instanceof SQLBaseType ? secondType : secondType[\"baseType\"];\r\n\r\n        return map.get(bt2);\r\n\r\n    }\r\n\r\n    getUnaryResultType(operator: TokenType): SQLType {\r\n        if([TokenType.isNull, TokenType.isNotNull].indexOf(operator) >= 0) return booleanType;\r\n        if(this.unaryOperators.indexOf(operator)>= 0) return this;\r\n    }\r\n\r\n    getBinaryResult(operator: TokenType, value1: any, value2: any): any {\r\n        switch (operator) {\r\n            case TokenType.concatenation:\r\n                if (value1 != null && value2 != null) return value1 + value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.plus:\r\n                if (value1 != null && value2 != null) return value1 + value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.minus:\r\n                if (value1 != null && value2 != null) return value1 - value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.multiplication:\r\n                if (value1 != null && value2 != null) return value1 * value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.division:\r\n                if (value1 != null && value2 != null) return value1 * value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.keywordAnd:\r\n                if (value1 != null && value2 != null) return value1 * value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.keywordOr:\r\n                if (value1 != null && value2 != null) return Math.max(value1, value2);\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.lower:\r\n                if (value1 != null && value2 != null) return value1 < value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.greater:\r\n                if (value1 != null && value2 != null) return value1 >= value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.lowerOrEqual:\r\n                if (value1 != null && value2 != null) return value1 <= value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.greaterOrEqual:\r\n                if (value1 != null && value2 != null) return value1 >= value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.equal:\r\n                return value1 == value2;\r\n            case TokenType.notEqual:\r\n                return value1 != value2;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nlet tens: number[] = [1, 10, 100, 1000, 100000, 100000, 1000000, 10000000, 100000000, 1000000000];\r\n\r\nexport class SQLDerivedType extends SQLType {\r\n\r\n    name: string;\r\n\r\n    constructor(public baseType: SQLBaseType, public parameterValues: number[]) {\r\n        super();\r\n        let parameters = parameterValues.join(\", \");\r\n        this.name = baseType.name + \"(\" + parameters + \")\";\r\n    }\r\n\r\n    toString(): string {\r\n        return this.name;\r\n    }\r\n\r\n    getBaseTypeName(): string {\r\n        return this.baseType.name;\r\n    }\r\n\r\n\r\n    canCastTo(type2: SQLType): boolean {\r\n\r\n        let bt2: SQLBaseType = type2 instanceof SQLBaseType ? type2 : type2[\"baseType\"];\r\n\r\n        return this.baseType.canCastToList.indexOf(bt2.name) >= 0 || this.baseType.name == bt2.name;\r\n\r\n    }\r\n\r\n    getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType {\r\n\r\n\r\n        let map = this.baseType.binaryResultTypes.get(operator);\r\n        if (map == null) return null;\r\n\r\n        let bt2: SQLBaseType = secondType instanceof SQLBaseType ? secondType : secondType[\"baseType\"];\r\n\r\n        let returnBaseType = map.get(bt2);\r\n\r\n        if (this.baseType == bt2 && this.baseType == returnBaseType && secondType instanceof SQLDerivedType) {\r\n            if (this.baseType.name == \"varchar\" || operator == TokenType.concatenation) {\r\n                return new SQLDerivedType(this.baseType, [this.parameterValues[0] + secondType.parameterValues[0]]);\r\n            }\r\n            if (this.baseType.name == \"decimal\") {\r\n                return new SQLDerivedType(this.baseType, [Math.max(this.parameterValues[0], secondType.parameterValues[0]), Math.max(this.parameterValues[1], secondType.parameterValues[1])]);\r\n            }\r\n        }\r\n\r\n        return map.get(bt2);\r\n\r\n    }\r\n\r\n    getUnaryResultType(operator: TokenType): SQLType {\r\n        return this.baseType.getUnaryResultType(operator);\r\n    }\r\n\r\n    getBinaryResult(operator: TokenType, value1: any, value2: any): any {\r\n        let result = this.baseType.getBinaryResult(operator, value1, value2);\r\n        if (this.name = \"varchar\") return result == null ? null : (\"\" + result).substr(0, this.parameterValues[0]);\r\n        if (this.name == \"decimal\") {\r\n            if (result == null) return null;\r\n            return Math.round(result * tens[this.parameterValues[1]]) / tens[this.parameterValues[1]];\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nlet textTypes = [\"varchar\", \"char\", \"text\" ,\"tinytext\", \"mediumtext\", \"longtext\"];\r\n\r\nvar varcharType = new SQLBaseType(\"varchar\", [\"Maximale Länge\"], (ci, pv) => `check(length(${ci}) <= ${Math.max(pv[0], 1)})`,\r\n    (v: string, pv) => v.substring(0, Math.max(pv[0], 1)), textTypes);\r\n    \r\nvar charType = new SQLBaseType(\"char\", [\"Maximale Länge\"], (ci, pv) => `check(length(${ci}) <= ${Math.max(pv[0], 1)})`,\r\n    (v: string, pv) => v.substring(0, Math.max(pv[0], 1)), textTypes);\r\n\r\nvar textType = new SQLBaseType(\"text\", [\"Maximale Länge\"], (ci, pv) => \"\", (v: string, pv) => v, textTypes.concat([\"time\", \"date\", \"datetime\", \"timestamp\"]));\r\nvar tinyTextType = new SQLBaseType(\"tinyText\", [], (ci, pv) => \"\", (v: string, pv) => v, textTypes);\r\nvar mediumTextType = new SQLBaseType(\"mediumText\", [], (ci, pv) => \"\", (v: string, pv) => v, textTypes);\r\nvar longTextType = new SQLBaseType(\"longText\", [], (ci, pv) => \"\", (v: string, pv) => v, textTypes);\r\n\r\nlet floatTypes = [\"decimal\", \"numeric\", \"double\", \"real\", \"float\"];\r\n\r\nvar decimalType = new SQLBaseType(\"decimal\", [\"Gesamtzahl der Stellen\", \"Nachkommastellen\"], (ci, pv) => \"\",\r\n    (v: number, pv) => { let vk = Math.trunc(v); let nk = v - vk; return \"\" + vk + (pv[1] > 0 ? \".\" + Math.round(nk * tens[pv[1]]) : \"\") },\r\n    floatTypes);\r\nvar numericType = new SQLBaseType(\"numeric\", [\"Gesamtzahl der Stellen\", \"Nachkommastellen\"], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\nvar doubleType = new SQLBaseType(\"double\", [\"Gesamtzahl der Stellen\", \"Nachkommastellen\"], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\nvar realType = new SQLBaseType(\"real\", [], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\nvar floatType = new SQLBaseType(\"float\", [], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\n\r\nlet inttypes = [\"int\", \"integer\", \"tinyint\", \"smallint\", \"mediumint\", \"bigint\"];\r\nlet numberTypes = inttypes.concat(floatTypes);\r\n\r\nvar intType = new SQLBaseType(\"int\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar integerType = new SQLBaseType(\"integer\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar tinyIntType = new SQLBaseType(\"tinyint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar smallIntType = new SQLBaseType(\"smallint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar mediumIntType = new SQLBaseType(\"mediumint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar bigIntType = new SQLBaseType(\"bigint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\n\r\nvar timeType = new SQLBaseType(\"time\", [], (ci, pv) => `check(isTime(${ci}))`, (v: string, pv) => v, []);\r\nvar dateType = new SQLBaseType(\"date\", [], (ci, pv) => `check(isDate(${ci}))`, (v: string, pv) => v, []);\r\nvar dateTimeType = new SQLBaseType(\"datetime\", [], (ci, pv) => `check(isDateTime(${ci}))`, (v: string, pv) => v, [\"timestamp\"]);\r\nvar timestampType = new SQLBaseType(\"timestamp\", [], (ci, pv) => `check(isDateTime(${ci}))`, (v: string, pv) => v, [\"datetime\"]);\r\n\r\n\r\nvar booleanType = new SQLBaseType(\"boolean\", [], (ci, pv) => `check(${ci} == 0 or ${ci} == 1)`, (v, pv) => v == 1 ? \"true\" : \"false\",\r\n    [\"varchar\", \"text\", \"decimal\", \"numeric\"]);\r\n\r\nvar nullType = new SQLBaseType(\"null\", [], (ci, pv) => \"\", (v, pv) => v,\r\n    []);\r\n\r\nlet numericTypes = [decimalType, numericType, doubleType, realType, floatType, intType, integerType, tinyIntType, smallIntType, mediumIntType, bigIntType];\r\n\r\nlet baseTypes = [varcharType, charType, textType, tinyTextType, mediumTextType, longTextType,\r\n    timeType, dateType, dateTimeType, timestampType, booleanType, nullType].concat(numericTypes);\r\n\r\nlet timeTypes = [timeType, dateType, dateTimeType, timestampType];\r\n\r\nSQLBaseType.addBaseTypes(baseTypes);\r\n\r\nvarcharType.addBinaryOperation(TokenType.concatenation, varcharType, varcharType);\r\nvarcharType.addBinaryOperation(TokenType.concatenation, charType, varcharType);\r\nvarcharType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\ntextType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\nvarcharType.addBinaryOperation(TokenType.keywordLike, varcharType, booleanType);\r\nvarcharType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\ntextType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\n\r\ncharType.addBinaryOperation(TokenType.concatenation, charType, charType);\r\ncharType.addBinaryOperation(TokenType.concatenation, varcharType, charType);\r\ncharType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\ntextType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\ncharType.addBinaryOperation(TokenType.keywordLike, charType, booleanType);\r\ncharType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\ntextType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\n\r\nlet numericBinaryOperators: TokenType[] = [TokenType.plus, TokenType.minus, TokenType.multiplication, TokenType.division, TokenType.modulo];\r\nlet comparisonOperators: TokenType[] = [TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual];\r\n\r\nfor (let i = 0; i < numericTypes.length; i++) {\r\n    for (let j = i; j < numericTypes.length; j++) {\r\n        numericTypes[i].addBinaryOperation(numericBinaryOperators, numericTypes[j], numericTypes[j]);\r\n        numericTypes[i].addBinaryOperation(comparisonOperators, numericTypes[j], booleanType);\r\n    }\r\n    numericTypes[i].unaryOperators = [TokenType.minus];\r\n}\r\n\r\ndecimalType.addBinaryOperation(numericBinaryOperators, decimalType, decimalType);\r\n\r\nlet characterTypes = [varcharType, textType];\r\nfor (let i = 0; i < characterTypes.length; i++) {\r\n    for (let j = i; j < characterTypes.length; j++) {\r\n        characterTypes[i].addBinaryOperation(TokenType.concatenation, characterTypes[j], characterTypes[j]);\r\n        characterTypes[i].addBinaryOperation(comparisonOperators, characterTypes[j], booleanType);\r\n    }\r\n}\r\n\r\nfor(let i = 0; i < timeTypes.length; i++){\r\n    timeTypes[i].addBinaryOperation(comparisonOperators, timeTypes[i], booleanType);\r\n    for(let j = 0; j < characterTypes.length; j++){\r\n        timeTypes[i].addBinaryOperation(comparisonOperators, characterTypes[j], booleanType);\r\n        characterTypes[j].addBinaryOperation(comparisonOperators, timeTypes[i], booleanType);\r\n    }\r\n}\r\n\r\nlet booleanOperations = [TokenType.keywordAnd, TokenType.keywordOr];\r\nbooleanType.addBinaryOperation(booleanOperations, booleanType, booleanType);\r\n\r\nbooleanType.unaryOperators = [TokenType.keywordNot];\r\n\r\nbaseTypes.forEach(bt => bt.unaryOperators = bt.unaryOperators.concat([TokenType.isNull, TokenType.isNotNull]));","import { param, timers } from \"jquery\";\r\nimport { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenList, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { ASTNode, BracketsNode, SelectNode, TermNode, TableOrSubqueryNode, TableNode, SubqueryNode, GroupByNode, OrderByNode, LimitNode, IdentifierNode, DotNode, ListNode, ColumnNode, InsertNode, ConstantNode, UnaryOpNode, CreateTableNode, CreateTableColumnNode, ForeignKeyInfo, UpdateNode, DeleteNode, DropTableNode, AlterTableNode, AlterTableKind, OmittedStatementNode } from \"./AST.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { Column } from \"./SQLTable.js\";\r\nimport { SQLBaseType } from \"./SQLTypes.js\";\r\n\r\nexport type SQLStatement = {\r\n    ast: ASTNode,\r\n    from: TextPosition,\r\n    to: TextPosition,\r\n    hasErrors: boolean,\r\n    acceptedBySQLite: boolean,\r\n    sql?: string,\r\n    sqlCleaned?: string\r\n}\r\n\r\n\r\nexport class Parser {\r\n\r\n    static operatorPrecedence: TokenType[][] = [\r\n        [TokenType.keywordOr], [TokenType.keywordAnd],\r\n        [TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual, TokenType.keywordLike],\r\n        [TokenType.concatenation, TokenType.plus, TokenType.minus], [TokenType.multiplication, TokenType.division, TokenType.modulo],\r\n        [TokenType.keywordIn, TokenType.keywordNotIn]\r\n    ];\r\n\r\n    module: Module;\r\n\r\n    pos: number;\r\n    tokenList: TokenList;\r\n\r\n    errorList: Error[];\r\n\r\n    lookahead = 4;\r\n    ct: Token[];\r\n    lastToken: Token;\r\n    cct: Token;\r\n    tt: TokenType;\r\n    position: TextPosition;\r\n    lastComment: Token;\r\n\r\n    endToken: Token = {\r\n        position: { line: 0, column: 0, length: 1 },\r\n        tt: TokenType.endofSourcecode,\r\n        value: \"das Ende des Programms\"\r\n    };\r\n\r\n    beginStatementKeywords = [\"select\", \"insert into\", \"update\", \"create table\", \"delete from\", \"alter table\", \"drop table\"];\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    parse(m: Module) {\r\n\r\n        this.module = m;\r\n\r\n        this.tokenList = m.tokenList;\r\n        this.errorList = [];\r\n\r\n        m.completionHints = new Map();\r\n\r\n        if (this.tokenList.length == 0) {\r\n            this.module.sqlStatements = [];\r\n            this.module.errors[1] = this.errorList;\r\n            this.module.addCompletionHint({ line: 0, column: 0, length: 0 }, { line: 20000, column: 100, length: 0 }, false, false,\r\n                this.beginStatementKeywords);\r\n            return;\r\n        }\r\n\r\n        this.pos = 0;\r\n        this.initializeLookahead();\r\n\r\n\r\n        let lastToken = this.tokenList[this.tokenList.length - 1];\r\n        this.endToken.position = { line: lastToken.position.line, column: lastToken.position.column + lastToken.position.length, length: 1 };\r\n\r\n        this.module.sqlStatements = this.parseMain();\r\n\r\n        this.module.errors[1] = this.errorList;\r\n\r\n    }\r\n\r\n    initializeLookahead() {\r\n\r\n        this.ct = [];\r\n\r\n        for (let i = 0; i < this.lookahead; i++) {\r\n\r\n            let token: Token = this.endToken;\r\n\r\n            while (true) {\r\n\r\n                if (this.pos >= this.tokenList.length) break;\r\n\r\n                let token1 = this.tokenList[this.pos]\r\n                if (token1.tt == TokenType.comment) {\r\n                    this.lastComment = token1;\r\n                }\r\n\r\n                if (token1.tt != TokenType.newline && token1.tt != TokenType.space && token1.tt != TokenType.comment) {\r\n                    token = token1;\r\n                    if (this.lastComment != null) {\r\n                        token.commentBefore = this.lastComment;\r\n                        this.lastComment = null;\r\n                    }\r\n                    break;\r\n                }\r\n\r\n                this.pos++;\r\n\r\n            }\r\n\r\n            this.ct.push(token);\r\n\r\n            if (i < this.lookahead - 1) {\r\n                this.pos++;\r\n            }\r\n\r\n        }\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    nextToken() {\r\n\r\n        let token: Token;\r\n        this.lastToken = this.cct;\r\n\r\n        while (true) {\r\n\r\n            this.pos++;\r\n\r\n            if (this.pos >= this.tokenList.length) {\r\n                token = this.endToken;\r\n                break;\r\n            }\r\n\r\n            token = this.tokenList[this.pos]\r\n            if (token.tt == TokenType.comment) {\r\n                this.lastComment = token;\r\n            }\r\n\r\n            if (token.tt != TokenType.newline && token.tt != TokenType.space && token.tt != TokenType.comment) {\r\n                token.commentBefore = this.lastComment;\r\n                this.lastComment = null;\r\n                break;\r\n            }\r\n\r\n        }\r\n\r\n        for (let i = 0; i < this.lookahead - 1; i++) {\r\n            this.ct[i] = this.ct[i + 1];\r\n        }\r\n\r\n        this.ct[this.lookahead - 1] = token;\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position?: TextPosition, quickFix?: QuickFix) {\r\n        if (position == null) position = Object.assign({}, this.position);\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    skip(tt: TokenType | TokenType[]) {\r\n        if (!Array.isArray(tt)) tt = [tt];\r\n        if (tt.indexOf(this.tt) >= 0) this.nextToken();\r\n    }\r\n\r\n    expect(tt: TokenType | TokenType[], skip: boolean = true, invokeSemicolonAngel: boolean = false): boolean {\r\n        if (this.tt != tt && !(Array.isArray(tt) && tt.indexOf(this.tt) >= 0)) {\r\n            if (tt == TokenType.semicolon && this.tt == TokenType.endofSourcecode) {\r\n                return true;\r\n            }\r\n\r\n            let position: TextPosition = this.cct.position;\r\n            if (tt == TokenType.semicolon && this.lastToken != null) {\r\n\r\n                if (this.lastToken.position.line < position.line) {\r\n                    position = {\r\n                        line: this.lastToken.position.line,\r\n                        column: this.lastToken.position.column + this.lastToken.position.length,\r\n                        length: 1\r\n                    }\r\n                }\r\n            }\r\n\r\n            let quickFix: QuickFix = null;\r\n            if (tt == TokenType.semicolon && this.lastToken.position.line < this.cct.position.line &&\r\n                !this.isOperatorOrDot(this.lastToken.tt)\r\n            ) {\r\n                quickFix = {\r\n                    title: 'Strichpunkt hier einfügen',\r\n                    editsProvider: (uri) => {\r\n                        return [{\r\n                            resource: uri,\r\n                            edit: {\r\n                                range: {\r\n                                    startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position.column,\r\n                                    message: \"\",\r\n                                    severity: monaco.MarkerSeverity.Error\r\n                                },\r\n                                text: \";\"\r\n                            }\r\n                        }\r\n                        ];\r\n                    }\r\n                }\r\n\r\n                if (invokeSemicolonAngel) {\r\n                    this.module.main.getSemicolonAngel().register(position, this.module);\r\n                }\r\n            }\r\n\r\n            let expectedValuesArray: string[];\r\n\r\n            if (Array.isArray(tt)) {\r\n                expectedValuesArray = tt.map(token => TokenTypeReadable[token]);\r\n                let expectedTokens = expectedValuesArray.join(\", \");\r\n                this.pushError(\"Erwartet wird eines der folgenden: \" + expectedTokens + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            } else {\r\n                expectedValuesArray = [TokenTypeReadable[tt]];\r\n                this.pushError(\"Erwartet wird: \" + TokenTypeReadable[tt] + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            }\r\n\r\n            // if (!Array.isArray(tt) && tt != TokenType.identifier) {\r\n            //     this.module.addCompletionHint(this.getEndOfPosition(this.lastToken.position), this.getCurrentPositionPlus(1), false, false, expectedValuesArray);\r\n            // }\r\n\r\n            return false;\r\n        }\r\n\r\n        if (skip) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    getEndOfPosition(p: TextPosition): TextPosition {\r\n        return {\r\n            line: p.line,\r\n            column: p.column + p.length,\r\n            length: 0\r\n        }\r\n    }\r\n\r\n    isOperatorOrDot(tt: TokenType): boolean {\r\n        if (tt == TokenType.dot) return true;\r\n        for (let op of Parser.operatorPrecedence) {\r\n            for (let operator of op) {\r\n                if (tt == operator) return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    isEnd(): boolean {\r\n        return this.cct == this.endToken;\r\n    }\r\n\r\n    comesToken(token: TokenType | TokenType[], skip: boolean = false): boolean {\r\n\r\n        if (!Array.isArray(token)) {\r\n            let ret: boolean = this.tt == token;\r\n            if (ret && skip) this.nextToken();\r\n            return ret;\r\n        }\r\n\r\n        return token.indexOf(this.tt) >= 0;\r\n\r\n    }\r\n\r\n    getCurrentPosition(): TextPosition {\r\n        return Object.assign({}, this.position);\r\n    }\r\n\r\n    getCurrentPositionPlus(deltaColumns: number): TextPosition {\r\n\r\n        if (this.tt == TokenType.endofSourcecode) {\r\n            return {\r\n                line: this.endToken.position.line,\r\n                column: 100,\r\n                length: 1\r\n            }\r\n        }\r\n\r\n        // get Token in which new position falls:\r\n        let tpos = 0;\r\n        let deltaInsideToken = deltaColumns;\r\n        let length = 0;\r\n        while (tpos < this.lookahead - 1 && (length = this.ct[tpos].position.length) < deltaInsideToken) {\r\n            deltaInsideToken -= length;\r\n            tpos++;\r\n        }\r\n        let tokenPos = this.ct[tpos].position;\r\n        if (tokenPos == null) tokenPos = this.getCurrentPosition();\r\n\r\n        let pos: TextPosition = {\r\n            line: tokenPos.line,\r\n            column: tokenPos.column + deltaInsideToken,\r\n            length: 1\r\n        }\r\n\r\n        return pos;\r\n    }\r\n\r\n    getEndOfCurrentToken(): TextPosition {\r\n\r\n        let position = this.getCurrentPosition();\r\n        position.column = position.column + this.position.length;\r\n        position.length = 0;\r\n\r\n        return position;\r\n    }\r\n\r\n    parseMain(): SQLStatement[] {\r\n\r\n        let mainProgram: SQLStatement[] = [];\r\n\r\n        let mainProgramEnd: TextPosition = {\r\n            column: 0,\r\n            line: 10000,\r\n            length: 1\r\n        }\r\n\r\n        let afterLastStatement: TextPosition = {\r\n            column: 0,\r\n            line: 0,\r\n            length: 0\r\n        }\r\n\r\n        let semicolonAfterLastStatement: boolean = true;\r\n\r\n        this.module.addCompletionHint(afterLastStatement, this.getCurrentPositionPlus(8), false, false,\r\n            this.beginStatementKeywords);\r\n\r\n        while (!this.isEnd()) {\r\n\r\n            let oldPos = this.pos;\r\n\r\n            let errorsBeforeStatement: number = this.errorList.length;\r\n\r\n            while ([TokenType.space, TokenType.newline, TokenType.comment, TokenType.semicolon].indexOf(this.cct.tt) >= 0) {\r\n                this.nextToken();\r\n            }\r\n\r\n            let startPosition = this.getCurrentPosition();\r\n\r\n            let st = this.parseStatement();\r\n\r\n            afterLastStatement = {\r\n                line: this.lastToken.position.line + 1,\r\n                column: 0,\r\n                length: 0\r\n            }\r\n\r\n            semicolonAfterLastStatement = this.tt == TokenType.semicolon;\r\n            while (this.tt == TokenType.semicolon) {\r\n                this.nextToken();\r\n            }\r\n\r\n            let hasErrors: boolean = false;\r\n            for (let i = errorsBeforeStatement; i < this.errorList.length; i++) {\r\n                if (this.errorList[i].level == \"error\") hasErrors = true;\r\n            }\r\n\r\n            if (st != null) {\r\n                mainProgram.push({\r\n                    ast: st,\r\n                    from: startPosition,\r\n                    to: this.getEndOfPosition(this.lastToken.position),\r\n                    hasErrors: hasErrors,\r\n                    acceptedBySQLite: false\r\n                });\r\n            }\r\n            // console.log(mainProgram[mainProgram.length - 1]);\r\n\r\n            mainProgramEnd = this.getCurrentPosition();\r\n\r\n            // emergency-forward:\r\n            if (this.pos == oldPos) {\r\n                let beginStatementTokens: TokenType[] =\r\n                    [TokenType.keywordSelect, TokenType.keywordUpdate, TokenType.keywordCreate, TokenType.keywordInsert,\r\n                    TokenType.keywordDelete, TokenType.keywordDrop, TokenType.keywordAlter];\r\n\r\n                let firstBadToken: boolean = true;\r\n\r\n                while (!this.isEnd() && beginStatementTokens.indexOf(this.tt) < 0) {\r\n                    if ([TokenType.space, TokenType.newline].indexOf(this.tt) < 0 && firstBadToken) {\r\n                        this.pushError(\"Erwartet wird eines dieser Schlüsselwörter: \" + beginStatementTokens.map(t => TokenTypeReadable[t]).join(\", \")\r\n                            + \"; Gefunden wurde: \" + this.cct.value);\r\n                        firstBadToken = true;\r\n                    }\r\n                    this.nextToken();\r\n                }\r\n            }\r\n\r\n            if (semicolonAfterLastStatement || this.cct.position.line - afterLastStatement.line > 0) {\r\n                this.module.addCompletionHint(afterLastStatement, this.getCurrentPositionPlus(8), false, false,\r\n                    this.beginStatementKeywords);\r\n            }\r\n\r\n        }\r\n\r\n        this.module.addCompletionHint(afterLastStatement, { line: this.endToken.position.line + 1, column: 0, length: 0 }, false, false,\r\n            this.beginStatementKeywords);\r\n\r\n        return mainProgram;\r\n\r\n    }\r\n\r\n\r\n\r\n    parseStatement(expectSemicolon: boolean = true): ASTNode {\r\n\r\n        let retStatements: ASTNode = null;\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordSelect:\r\n                return this.parseSelect();\r\n            case TokenType.keywordInsert:\r\n                return this.parseInsert();\r\n            case TokenType.keywordCreate:\r\n                return this.parseCreateTableOrDatabase();\r\n            case TokenType.keywordUpdate:\r\n                return this.parseUpdate();\r\n            case TokenType.keywordDelete:\r\n                return this.parseDelete();\r\n            case TokenType.keywordDrop:\r\n                return this.parseDropTable();\r\n            case TokenType.keywordAlter:\r\n                return this.parseAlterTable();\r\n            case TokenType.keywordCommit:\r\n                this.pushError(\"Die Aweisung commit ist unnötig, da jede Anweisung automatisch commited wird.\", \"info\");\r\n                this.nextToken();\r\n                return null;\r\n            // Omitted statements:\r\n            case TokenType.keywordSet:\r\n                return this.parseSet();\r\n            case TokenType.keywordUse:\r\n                return this.parseUse();\r\n            case TokenType.keywordStart:\r\n                this.pushError(\"Die Aweisung 'start transaction' ist unnötig, da jede Anweisung automatisch commited wird.\", \"info\");\r\n                this.nextToken();\r\n                this.expect(TokenType.keywordTransaction, true);\r\n                return null;\r\n            case TokenType.keywordLock:\r\n            case TokenType.keywordUnlock:\r\n                this.parseLockUnlock();\r\n                return null;\r\n\r\n            default:\r\n                let s = TokenTypeReadable[this.tt];\r\n                if (s == null) s = \"\";\r\n                if (s != this.cct.value) s += \"(\" + this.cct.value + \")\";\r\n                s += \" wird hier nicht erwartet.\";\r\n                this.pushError(s);\r\n                this.nextToken();\r\n                break;\r\n        }\r\n\r\n\r\n        return retStatements;\r\n\r\n    }\r\n\r\n    parseLockUnlock() {\r\n        this.nextToken();\r\n        this.expect(TokenType.keywordTables, true);\r\n        this.skip(TokenType.identifier);\r\n        this.skip([TokenType.keywordWrite, TokenType.keywordRead]);\r\n        this.skip(TokenType.semicolon);\r\n    }\r\n\r\n    parseSet(): OmittedStatementNode {\r\n\r\n        this.pushError(\"Das SET-Statement wird von SQLite nicht unterstützt. Diese Anweisung wird daher einfach überlesen.\", \"info\");\r\n\r\n        let node: OmittedStatementNode = {\r\n            type: TokenType.omittedeStatement,\r\n            position: this.getCurrentPosition(),\r\n            endPosition: null,\r\n            symbolTable: null\r\n        }\r\n\r\n        this.nextToken(); // skip 'set'\r\n        this.expect(TokenType.identifier, true);\r\n        this.expect(TokenType.equal, true);\r\n        this.expect([TokenType.identifier, TokenType.stringConstant, TokenType.integerConstant, TokenType.charConstant, TokenType.booleanConstant, TokenType.floatingPointConstant], true);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n    parseUse(): OmittedStatementNode {\r\n\r\n        this.pushError(\"Das USE-Statement wird von SQLite nicht unterstützt. Diese Anweisung wird daher einfach überlesen. Sie können eine andere Datenbank auswählen indem Sie in der Datenbankliste links darauf klicken.\", \"info\");\r\n\r\n        let node: OmittedStatementNode = {\r\n            type: TokenType.omittedeStatement,\r\n            position: this.getCurrentPosition(),\r\n            endPosition: null,\r\n            symbolTable: null\r\n        }\r\n\r\n        this.nextToken(); // skip 'use'\r\n        this.expect(TokenType.identifier, true);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n    parseAlterTable(): AlterTableNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"alter\"\r\n\r\n        let node: AlterTableNode = {\r\n            type: TokenType.keywordAlter,\r\n            kind: null,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n        }\r\n\r\n        if (!this.expect(TokenType.keywordTable, true)) {\r\n            this.addCompletionHintHere(false, false, [\"table\"], 1);\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1);\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        this.addCompletionHintHere(false, false, [\"rename to\", \"rename column\", \"add column\", \"drop column\"], 1);\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordRename: this.parseRenameTableOrColumn(node); break;\r\n            case TokenType.keywordAdd: this.parseAlterTableAdd(node); break;\r\n            case TokenType.keywordDrop: this.parseDropColumn(node); break;\r\n            default:\r\n                this.pushError(\"Erwartet wird rename to, rename column, add column oder drop column\");\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    parseRenameTableOrColumn(node: AlterTableNode) {\r\n\r\n        this.nextToken();\r\n        if (!this.comesToken(TokenType.keywordTo)) {\r\n            this.addCompletionHintHere(node.tableIdentifier, false, [\"column\", \"to\"], 3);\r\n        }\r\n        node.endPosition = this.getEndOfCurrentToken();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordTo:\r\n                this.nextToken();\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                node.kind = \"renameTable\";\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    node.newTableName = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    node.endPosition = this.getEndOfCurrentToken();\r\n                } else {\r\n                    this.pushError(\"Erwartet wird der neue Tabellenname.\");\r\n                }\r\n                return;\r\n            case TokenType.keywordColumn:\r\n                this.nextToken();\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                this.addCompletionHintHere(node.tableIdentifier, false, [], 3);\r\n                if (!this.comesToken(TokenType.identifier)) {\r\n                    this.pushError(\"Erwartet wird der Name einer Spalte der Tabelle \" + node.tableIdentifier + \".\");\r\n                    return;\r\n                }\r\n                node.kind = \"renameColumn\";\r\n                node.oldColumnName = <string>this.cct.value;\r\n                node.oldColumnPosition = this.getCurrentPosition();\r\n                this.nextToken();\r\n                this.addCompletionHintHere(false, false, [\"to\"], 3);\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                if (!this.expect(TokenType.keywordTo, true)) return;\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    node.newColumnName = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    node.endPosition = this.getEndOfCurrentToken();\r\n                } else {\r\n                    this.pushError(\"Erwartet wird der neue Spaltenname.\");\r\n                }\r\n                return;\r\n            default:\r\n                this.pushError(\"Erwartet wird das Schlüsselwort 'to' (zum Umbenennen der Tabelle) oder das Schlüsselwor 'column' (zum Umbenennen einer Spalte).\")\r\n                return;\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    parseDropColumn(node: AlterTableNode) {\r\n        this.nextToken(); // skip 'drop'\r\n        this.comesToken(TokenType.keywordColumn, true);\r\n        node.oldColumnPosition = this.getCurrentPosition();\r\n        this.addCompletionHintHere(node.tableIdentifier, false, [], 3);\r\n\r\n        node.kind = \"dropColumn\";\r\n        node.endPosition = this.getEndOfCurrentToken();\r\n\r\n        if (this.comesToken(TokenType.identifier)) {\r\n            node.oldColumnName = <string>this.cct.value;\r\n            this.nextToken();\r\n        } else {\r\n            this.pushError(\"Erwartet wird der Bezeichner der Spalte, die gelöscht werden soll.\");\r\n        }\r\n\r\n    }\r\n\r\n    parseAlterTableAdd(node: AlterTableNode) {\r\n        do {\r\n            this.nextToken(); // skip \"add\" or \",\"\r\n            this.comesToken(TokenType.keywordAdd, true);\r\n            let unique: boolean = false;\r\n            switch (this.tt) {\r\n                case TokenType.keywordColumn:\r\n                    this.parseAddColumn(node);\r\n                    break;\r\n                case TokenType.keywordPrimary:\r\n                    this.parseAddPrimaryKey(node);\r\n                    break;\r\n                case TokenType.keywordUnique:\r\n                    this.nextToken();\r\n                    unique = true;\r\n                    this.expect([TokenType.keywordIndex, TokenType.keywordKey], false);\r\n                case TokenType.keywordKey:\r\n                case TokenType.keywordIndex:\r\n                    this.parseAddIndex(node, unique);\r\n                    break;\r\n                case TokenType.keywordModify:\r\n                    this.parseModifyColumn(node);\r\n                    break;\r\n                case TokenType.keywordConstraint:\r\n                    this.parseAddConstraint(node);\r\n                    break;\r\n            }\r\n        } while (this.tt == TokenType.comma);\r\n    }\r\n\r\n    parseAddConstraint(node: AlterTableNode) {\r\n        this.nextToken(); // skip \"constraint\"\r\n        if (!this.expect(TokenType.identifier)) return;\r\n\r\n        if (this.comesToken(TokenType.keywordForeign)) {\r\n            let fki = this.parseForeignKeyDefinition();\r\n            if (fki != null) {\r\n                if (node.foreignKeys == null) node.foreignKeys = [];\r\n                node.foreignKeys.push(fki);\r\n                node.kind = \"omittedKind\";\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    parseForeignKeyDefinition(): ForeignKeyInfo {\r\n        let fki: ForeignKeyInfo = { column: \"\", referencesTable: \"\", referencesColumn: \"\", referencesPosition: this.getCurrentPosition() };\r\n        if (!this.expect(TokenType.keywordForeign)) return;\r\n        if (!this.expect(TokenType.keywordKey)) return;\r\n        if (!this.expect(TokenType.leftBracket)) return;\r\n\r\n        if (!this.comesToken(TokenType.identifier)) {\r\n            this.pushError(\"Der Bezeichner der Fremdschlüsselspalte wird erwartet.\");\r\n            return;\r\n        }\r\n\r\n        fki.column = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        if (!this.expect(TokenType.rightBracket)) return;\r\n        this.parseReferences(fki);\r\n        return fki;\r\n    }\r\n\r\n    parseReferences(fki: ForeignKeyInfo) {\r\n\r\n        if (!this.expect(TokenType.keywordReferences)) return;\r\n\r\n        this.addCompletionHintHere(false, true, []);\r\n\r\n        if (!this.comesToken(TokenType.identifier)) {\r\n            this.pushError(\"Der Bezeichner der referenzierten Tabelle wird erwartet.\");\r\n            return;\r\n        }\r\n\r\n        fki.referencesTable = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        let pos0 = this.lastToken.position;\r\n        let pos1 = this.getCurrentPosition();\r\n        this.module.addCompletionHint(this.getEndOfPosition(pos0), pos1, fki.referencesTable, false, []);\r\n\r\n\r\n        if (!this.expect(TokenType.leftBracket)) return;\r\n        if (!this.comesToken(TokenType.identifier)) {\r\n            this.pushError(\"Der Bezeichner der referenzierten Spalte wird erwartet.\");\r\n            return;\r\n        }\r\n\r\n        fki.referencesColumn = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        if (!this.expect(TokenType.rightBracket)) return;\r\n\r\n        while (this.tt == TokenType.keywordOn) {\r\n            this.nextToken();\r\n            let kind: \"onDelete\" | \"onUpdate\" | \"\" = \"\";\r\n\r\n            switch (this.tt) {\r\n                //@ts-ignore\r\n                case TokenType.keywordDelete:\r\n                    kind = \"onDelete\";\r\n                    break;\r\n                //@ts-ignore\r\n                case TokenType.keywordUpdate:\r\n                    kind = \"onUpdate\";\r\n                    break;\r\n            }\r\n\r\n            if (kind == \"\") {\r\n                this.pushError(\"Nach 'on' wird 'delete' oder 'update' erwartet.\");\r\n                if (!this.comesToken([TokenType.keywordCascade, TokenType.keywordRestrict, TokenType.keywordSet, TokenType.keywordNo])) {\r\n                    this.nextToken();\r\n                    kind = \"onDelete\";\r\n                }\r\n            } else {\r\n                this.nextToken();\r\n            }\r\n\r\n            switch (this.tt) {\r\n                //@ts-ignore\r\n                case TokenType.keywordCascade:\r\n                //@ts-ignore\r\n                case TokenType.keywordRestrict:\r\n                    fki[kind] = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    break;\r\n                //@ts-ignore\r\n                case TokenType.keywordSet:\r\n                    fki[kind] = \"set \";\r\n                    this.nextToken();\r\n                    if ([TokenType.keywordNull, TokenType.keywordDefault].indexOf(this.tt) >= 0) {\r\n                        fki[kind] += this.cct.value;\r\n                        this.nextToken();\r\n                    } else {\r\n                        this.pushError(\"Nach 'on delete/update set' wird 'null' oder 'default' erwartet.\");\r\n                    }\r\n                    break;\r\n                //@ts-ignore\r\n                case TokenType.keywordNo:\r\n                    this.nextToken();\r\n                    if (this.expect(TokenType.keywordAction), true) {\r\n                        fki[kind] = \"no action\";\r\n                    }\r\n                    break;\r\n                default:\r\n                    this.pushError(\"Nach 'on delete/update' wird 'cascade', 'set null', 'set default' oder 'no action' erwartet.\");\r\n                    break;\r\n\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    parseModifyColumn(node: AlterTableNode) {\r\n        this.nextToken();\r\n        let modifyColumnInfo = this.parseColumnDefinition(false);\r\n        if (modifyColumnInfo != null) {\r\n            if (node.modifyColumnInfo == null) node.modifyColumnInfo = [];\r\n            node.modifyColumnInfo.push(modifyColumnInfo);\r\n        }\r\n    }\r\n\r\n    parseAddPrimaryKey(node: AlterTableNode) {\r\n        this.nextToken(); // skip \"primary\"\r\n        node.primaryKeys = [];\r\n        if (this.expect(TokenType.keywordKey, true) && this.expect(TokenType.leftBracket, false)) {\r\n            do {\r\n                this.nextToken();\r\n                if (this.tt == TokenType.identifier) {\r\n                    node.primaryKeys.push(<string>this.cct.value);\r\n                    this.nextToken();\r\n                }\r\n            } while (this.tt == TokenType.comma)\r\n        }\r\n        if (this.expect(TokenType.rightBracket, true)) {\r\n            node.kind = \"omittedKind\";\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    parseAddIndex(node: AlterTableNode, unique: boolean) {\r\n        this.nextToken(); // skip \"key\" | \"index\"\r\n\r\n        let index = { index_name: \"\", column: \"\", unique: unique }\r\n        if (this.tt == TokenType.identifier) {\r\n            index.index_name = <string>this.cct.value;\r\n            this.nextToken();\r\n        } else {\r\n            this.pushError(\"Erwartet wird der Bezeichner des Index.\");\r\n            return null;\r\n        }\r\n\r\n        if (!this.expect(TokenType.leftBracket, true)) return null;\r\n        if (this.tt == TokenType.identifier) {\r\n            index.column = <string>this.cct.value;\r\n            this.nextToken();\r\n            if (node.indices == null) node.indices = [];\r\n            node.indices.push(index);\r\n        } else {\r\n            this.pushError(\"Erwartet wird der Bezeichner der Spalte, für die ein Index erstellt werden soll.\");\r\n            return null;\r\n        }\r\n\r\n        node.kind = \"omittedKind\";\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        return null;\r\n    }\r\n\r\n    parseAddColumn(node: AlterTableNode) {\r\n        node.kind = \"addColumn\";\r\n        this.comesToken(TokenType.keywordColumn, true);\r\n        node.columnDefBegin = this.getCurrentPosition();\r\n        node.columnDef = this.parseColumnDefinition(false);\r\n    }\r\n\r\n    parseDropTable(): DropTableNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"Delete\"\r\n\r\n        let node: DropTableNode = {\r\n            type: TokenType.keywordDrop,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n            ifExists: false\r\n        }\r\n\r\n        if (!this.expect(TokenType.keywordTable, true)) {\r\n            this.addCompletionHintHere(false, false, [\"table\"], 1);\r\n        }\r\n\r\n        if (this.comesToken(TokenType.keywordIf, true)) {\r\n            node.ifExists = true;\r\n            this.expect(TokenType.keywordExists, true);\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1, \"\", \";\");\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n\r\n    }\r\n\r\n    parseDelete(): DeleteNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"Delete\"\r\n\r\n        let node: DeleteNode = {\r\n            type: TokenType.keywordDelete,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n            whereNode: null,\r\n            whereNodeBegin: null,\r\n            whereNodeEnd: null\r\n        }\r\n\r\n        if (!this.expect(TokenType.keywordFrom, true)) {\r\n            this.addCompletionHintHere(false, false, [\"from\"], 1);\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1, \"\", \" where\\n\\t\");\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        this.addCompletionHintHere(false, false, [\"where\\n\\t\"], 1);\r\n        if (this.tt != TokenType.keywordWhere) return node;\r\n\r\n        this.nextToken(); // skip \"where\"\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n\r\n        node.whereNodeBegin = this.getEndOfPosition(this.lastToken.position);\r\n        node.whereNode = this.parseTerm();\r\n        node.whereNodeEnd = this.getCurrentPosition();\r\n\r\n        this.module.addCompletionHint(node.whereNodeBegin, this.getCurrentPositionPlus(3), node.tableIdentifier, false, []);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n        return node;\r\n\r\n    }\r\n\r\n    parseUpdate(): UpdateNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"update\"\r\n\r\n        let node: UpdateNode = {\r\n            type: TokenType.keywordUpdate,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n            columnIdentifiers: [],\r\n            columnIdentifierPositions: [],\r\n            values: [],\r\n            valuePosBegin: [],\r\n            valuePosEnd: [],\r\n            whereNode: null,\r\n            whereNodeBegin: null,\r\n            whereNodeEnd: null\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1, \"\", \" set\\n\\t\");\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        this.addCompletionHintHere(false, false, [\"set\\n\\t\"], 1);\r\n        if (!this.expect(TokenType.keywordSet)) return node;\r\n        let first: boolean = true;\r\n        do {\r\n            this.addCompletionHintHere(node.tableIdentifier, false, first ? [] : ['where'], 1, null, \" = \");\r\n            first = false;\r\n            if (this.tt != TokenType.identifier) {\r\n                this.pushError(\"Hier wird der Bezeichner derjenigen Spalte der Tabelle \" + node.tableIdentifier + \" erwaretet, deren Wert verändert werden soll.\", \"error\");\r\n                break;\r\n            }\r\n\r\n            node.columnIdentifiers.push(<string>this.cct.value);\r\n            node.columnIdentifierPositions.push(this.getCurrentPosition());\r\n            this.nextToken();\r\n\r\n            this.expect(TokenType.equal, true);\r\n\r\n            node.valuePosBegin.push(this.getCurrentPosition());\r\n            node.values.push(this.parseTerm());\r\n            node.valuePosEnd.push(this.getCurrentPosition());\r\n\r\n        } while (this.comesToken(TokenType.comma, true));\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        if (this.lastToken.tt != TokenType.comma || this.comesToken(TokenType.keywordWhere)) {\r\n            if (!this.expect(TokenType.keywordWhere, true)) return node;\r\n\r\n            node.whereNodeBegin = this.getEndOfPosition(this.lastToken.position);\r\n            node.whereNode = this.parseTerm();\r\n            node.whereNodeEnd = this.getCurrentPosition();\r\n\r\n            this.module.addCompletionHint(node.whereNodeBegin, node.whereNodeEnd, node.tableIdentifier, false, []);\r\n\r\n            node.endPosition = this.getCurrentPosition();\r\n        } else {\r\n            this.comesToken(TokenType.keywordWhere, true); // skip where, if present\r\n        }\r\n        return node;\r\n\r\n    }\r\n\r\n    parseCreateTableOrDatabase(): CreateTableNode | OmittedStatementNode {\r\n        switch (this.ct[1].tt) {\r\n            case TokenType.keywordDatabase:\r\n                return this.parseCreateDatabase();\r\n            case TokenType.keywordTable:\r\n                return this.parseCreateTable();\r\n            default:\r\n                this.nextToken();\r\n                this.pushError(\"Nach 'create' wird 'table' erwartet.\");\r\n                this.nextToken();\r\n                return null;\r\n        }\r\n    }\r\n\r\n    parseCreateDatabase(): OmittedStatementNode {\r\n        let node: OmittedStatementNode = {\r\n            type: TokenType.omittedeStatement,\r\n            position: this.getCurrentPosition(),\r\n            endPosition: null,\r\n            symbolTable: null\r\n        }\r\n\r\n        this.nextToken();\r\n        this.pushError(\"Die CREATE-DATABASE-Anweisung wird von der SQLite-Engine nicht unterstützt. Sie können eine neue Datenbank anlegen, indem Sie auf den entsprechenden Button oberhalb der Liste der Datenbanken (linke Seite des Fensters) klicken. Diese Anweisung wird überlesen.\", \"info\");\r\n        while (this.tt != TokenType.semicolon && this.tt != TokenType.endofSourcecode) {\r\n            node.endPosition = this.getEndOfCurrentToken();\r\n            this.nextToken();\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    parseCreateTable(): CreateTableNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"create\"\r\n\r\n        if (!this.expect(TokenType.keywordTable, true)) {\r\n            this.module.addCompletionHint(startPosition, this.getCurrentPositionPlus(3), false, false, [\"table\"]);\r\n        }\r\n\r\n        let ifNotExists: boolean = false;\r\n        if (this.comesToken(TokenType.keywordIf)) {\r\n            this.nextToken();\r\n            this.expect(TokenType.keywordNot, true);\r\n            this.expect(TokenType.keywordExists, true);\r\n            ifNotExists = true;\r\n        }\r\n\r\n        let identifier = \"\";\r\n        if (this.expect(TokenType.identifier, false)) {\r\n            identifier = <string>this.cct.value;\r\n            let pos1 = this.getCurrentPosition();\r\n            let pos2 = this.getCurrentPositionPlus(identifier.length + 3);\r\n            this.nextToken();\r\n            if (!this.comesToken(TokenType.leftBracket)) {\r\n                this.module.addCompletionHint(pos1, pos2, false, false, [\"(\"]);\r\n            }\r\n        }\r\n\r\n        let node: CreateTableNode = {\r\n            type: TokenType.keywordCreate,\r\n            identifier: identifier,\r\n            position: startPosition,\r\n            endPosition: null,\r\n            columnList: [],\r\n            symbolTable: null,\r\n            combinedPrimaryKeyColumns: [],\r\n            foreignKeyInfoList: [],\r\n            ifNotExists: ifNotExists,\r\n            uniqueConstraints: []\r\n        }\r\n\r\n        if (!this.expect(TokenType.leftBracket, true)) return node;\r\n\r\n        let primaryKeyAlreadyDefined: boolean = false;\r\n        let first: boolean = true;\r\n\r\n        while (this.tt != TokenType.rightBracket) {\r\n            if (!first) this.expect(TokenType.comma, true);\r\n            first = false;\r\n            if (this.comesToken(TokenType.keywordConstraint, true)) {\r\n                this.expect(TokenType.identifier, true);\r\n                this.expect([TokenType.keywordForeign, TokenType.keywordPrimary, TokenType.keywordUnique], false);\r\n            }\r\n\r\n            switch (this.tt) {\r\n                case TokenType.keywordPrimary:\r\n                    if (primaryKeyAlreadyDefined) this.pushError(\"Je Tabelle darf nur ein einziger Primärschlüssel definiert werden.\", \"error\", this.getCurrentPosition());\r\n                    this.parsePrimaryKeyTerm(primaryKeyAlreadyDefined, node);\r\n                    primaryKeyAlreadyDefined = true;\r\n                    break;\r\n                case TokenType.keywordUnique:\r\n                    this.parseUniqueTerm(node);\r\n                    break;\r\n                case TokenType.keywordForeign:\r\n                    let fki = this.parseForeignKeyDefinition();\r\n                    if (fki != null) {\r\n                        node.foreignKeyInfoList.push(fki);\r\n                    }\r\n                    break;\r\n                case TokenType.identifier:\r\n                    let columnNode = this.parseColumnDefinition(primaryKeyAlreadyDefined);\r\n                    node.columnList.push(columnNode);\r\n                    primaryKeyAlreadyDefined = primaryKeyAlreadyDefined || columnNode.isPrimary;\r\n                    break;\r\n                default:\r\n                    this.pushError(TokenTypeReadable[this.tt] + \" wird hier nicht erwartet.\", \"error\");\r\n                    break;\r\n            }\r\n            if (!this.comesToken(TokenType.comma)) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        while ([TokenType.keywordAutoincrement, TokenType.keywordEngine, TokenType.keywordDefault, TokenType.keywordCollate].indexOf(this.tt) >= 0) {\r\n            switch (this.tt) {\r\n                case TokenType.keywordCollate:\r\n                    this.nextToken();\r\n                    this.skip(TokenType.equal);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordEngine:\r\n                    this.nextToken();\r\n                    this.skip(TokenType.equal);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordDefault:\r\n                    this.nextToken();\r\n                    this.expect([TokenType.keywordCharset, TokenType.keywordCharacter], true);\r\n                    this.skip(TokenType.keywordSet);\r\n                    this.skip(TokenType.equal);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordAutoincrement:\r\n                    this.nextToken();\r\n                    this.expect(TokenType.equal, true);\r\n                    this.expect(TokenType.integerConstant, true);\r\n                    break;\r\n            }\r\n\r\n        }\r\n\r\n        for (let column of node.columnList) {\r\n            if (column.isAutoIncrement && !(column.isPrimary || node.combinedPrimaryKeyColumns.indexOf(column.identifier) >= 0)) {\r\n                this.pushError(\"autoincrement gibt es nur bei Primärschlüsseln, d.h. es fehlt wahrscheinlich 'primary key'.\", \"warning\", node.position);\r\n            }\r\n        }\r\n\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n\r\n    parsePrimaryKeyTerm(primaryKeyAlreadyDefined: boolean, node: CreateTableNode) {\r\n        if (primaryKeyAlreadyDefined) {\r\n            this.pushError(\"Die Tabelle kann nur einen einzigen Primärschlüssel haben.\");\r\n        }\r\n        this.nextToken(); // skip \"primary\"\r\n        this.expect(TokenType.keywordKey, true);\r\n\r\n        let columns: string[] = node.columnList.map(c => c.identifier);\r\n\r\n        this.addCompletionHintHere(false, false, columns);\r\n        if (this.comesToken(TokenType.leftBracket)) {\r\n            this.addCompletionHintHere(false, false, columns);\r\n            this.nextToken();\r\n\r\n            while (true) {\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    node.combinedPrimaryKeyColumns.push(<string>this.cct.value);\r\n                    this.nextToken();\r\n                    this.addCompletionHintHere(false, false, columns, 1);\r\n                    if (!this.comesToken(TokenType.comma)) {\r\n                        break;\r\n                    } else {\r\n                        this.nextToken();\r\n                        this.addCompletionHintHere(false, false, columns);\r\n                    }\r\n                } else {\r\n                    this.pushError(\"Der Bezeichner einer Spalte wird erwartet. Gefunden wurde: \" + this.cct.value);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        } else {\r\n            this.pushError(\"( erwartet.\");\r\n        }\r\n    }\r\n\r\n    parseUniqueTerm(node: CreateTableNode) {\r\n        this.nextToken(); // skip \"unique\"\r\n\r\n        let columns: string[] = node.columnList.map(c => c.identifier);\r\n        let uniqueConstraint: string[] = [];\r\n        node.uniqueConstraints.push(uniqueConstraint);\r\n\r\n        this.addCompletionHintHere(false, false, columns);\r\n        if (this.comesToken(TokenType.leftBracket)) {\r\n            this.addCompletionHintHere(false, false, columns);\r\n            this.nextToken();\r\n\r\n            while (true) {\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    uniqueConstraint.push(<string>this.cct.value);\r\n                    this.nextToken();\r\n                    this.addCompletionHintHere(false, false, columns, 1);\r\n                    if (!this.comesToken(TokenType.comma)) {\r\n                        break;\r\n                    } else {\r\n                        this.nextToken();\r\n                        this.addCompletionHintHere(false, false, columns);\r\n                    }\r\n                } else {\r\n                    this.pushError(\"Der Bezeichner einer Spalte wird erwartet. Gefunden wurde: \" + this.cct.value);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        } else {\r\n            this.pushError(\"( erwartet.\");\r\n        }\r\n    }\r\n\r\n    parseColumnDefinition(primaryKeyAlreadyDefined: boolean): CreateTableColumnNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n        let identifier = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        let node: CreateTableColumnNode = {\r\n            type: TokenType.columnDef,\r\n            identifier: identifier,\r\n            isPrimary: false,\r\n            isAutoIncrement: false,\r\n            position: position,\r\n            baseType: null,\r\n            notNull: false\r\n        }\r\n\r\n        this.parseType(node, primaryKeyAlreadyDefined);\r\n\r\n        return node;\r\n\r\n    }\r\n\r\n    addCompletionHintHere(hintColumns: boolean | string, hintTables: boolean, hints: string[], additionalColumns: number = 0, praefix: string = \"\", suffix: string = \"\") {\r\n        let pos0 = this.lastToken.position;\r\n        let pos1 = this.getCurrentPosition();\r\n        pos1.column += 1 + additionalColumns\r\n        this.module.addCompletionHint(this.getEndOfPosition(pos0), pos1, hintColumns, hintTables, hints, null, praefix, suffix);\r\n    }\r\n\r\n    identifierMap: {[key: string]:string} = {'year': 'int', 'binary': 'varchar', 'varbinary': 'varchar'};\r\n\r\n    parseType(node: CreateTableColumnNode, primaryKeyAlreadyDefined: boolean) {\r\n\r\n        let datatypes = SQLBaseType.baseTypes.map(type => type.toString());\r\n        this.addCompletionHintHere(false, false, datatypes);\r\n\r\n        if (!this.expect(TokenType.identifier, false)) {\r\n            this.pushError(\"Erwartet wird ein Datentyp. Gefunden wurde: \" + this.cct.value);\r\n            return;\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n        let mappedIdentifier:string = this.identifierMap[identifier.toLocaleLowerCase()];\r\n\r\n        if (mappedIdentifier != null) {\r\n            identifier = mappedIdentifier;\r\n        }\r\n\r\n        let type = SQLBaseType.getBaseType(identifier);\r\n        if (type == null) {\r\n            this.pushError(\"Erwartet wird ein Datentyp. Gefunden wurde: \" + identifier);\r\n        }\r\n        node.baseType = type;\r\n        this.nextToken();\r\n\r\n        if (this.tt == TokenType.leftBracket) {\r\n            this.nextToken();\r\n            node.parameters = [];\r\n            //@ts-ignore\r\n            while (this.tt == TokenType.integerConstant) {\r\n                node.parameters.push(<number>this.cct.value);\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.comma) break;\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.integerConstant) {\r\n                    this.pushError(\"Erwartet wird eine ganze Zahl, gefunden wurde: \" + this.cct.value);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (type != null && node.parameters.length > type.parameterDescriptions.length) {\r\n                this.pushError(\"Der Datentyp \" + type.toString() + \" hat höchstens \" + type.parameterDescriptions.length + \" Parameter.\");\r\n            }\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        }\r\n\r\n        if (identifier != null && identifier.toLocaleLowerCase() == \"char\" && node.parameters == null) {\r\n            node.parameters = [1];\r\n        }\r\n\r\n        // primary key autoincrement\r\n        // references table(column)\r\n        // not null\r\n\r\n        this.addCompletionHintHere(false, false, [\"primary key\", \"references\", \"not null\"]);\r\n\r\n        let alreadySeenKeywords: TokenType[] = [];\r\n\r\n        while ([TokenType.keywordOn, TokenType.keywordCharacter, TokenType.keywordComment, TokenType.keywordAutoincrement, TokenType.keywordKey, TokenType.keywordPrimary, TokenType.keywordNot, TokenType.keywordReferences, TokenType.keywordCollate, TokenType.keywordDefault].indexOf(this.tt) >= 0) {\r\n            if (alreadySeenKeywords.indexOf(this.tt) >= 0) {\r\n                this.pushError('Das Schlüsselwort ' + TokenTypeReadable[this.tt] + \" darf bei der Definition einer Spalte nicht öfters als ein Mal vorkommen.\");\r\n            }\r\n\r\n            alreadySeenKeywords.push(this.tt);\r\n\r\n            switch (this.tt) {\r\n                case TokenType.keywordAutoincrement:\r\n                    this.nextToken();\r\n                    node.isAutoIncrement = true;\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.equal) {\r\n                        this.nextToken();\r\n                        this.expect(TokenType.integerConstant);\r\n                    } else {\r\n                        //@ts-ignore\r\n                        if (this.tt == TokenType.comma && this.ct[1].tt == TokenType.keywordAutoincrement) {\r\n                            this.nextToken();\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.keywordPrimary:\r\n                    if (primaryKeyAlreadyDefined) this.pushError(\"In einer Tabelle darf es nur einen einzigen primary key geben.\");\r\n                    this.nextToken(); // skip \"primary\"\r\n                    if (!this.expect(TokenType.keywordKey, true)) {\r\n                        this.addCompletionHintHere(false, false, [\"key\"]);\r\n                    } else {\r\n                        this.addCompletionHintHere(false, false, [\"autoincrement, \\n\"])\r\n                    }\r\n                    node.isPrimary = true;\r\n                    break;\r\n                case TokenType.keywordReferences:\r\n                    let fki: ForeignKeyInfo = { column: node.identifier, referencesColumn: \"\", referencesTable: \"\", referencesPosition: this.getCurrentPosition() };\r\n                    node.foreignKeyInfo = fki;\r\n                    this.parseReferences(fki);\r\n                    break;\r\n                case TokenType.keywordNot:\r\n                    this.nextToken();\r\n                    if (!this.expect(TokenType.keywordNull, true)) {\r\n                        this.addCompletionHintHere(false, false, [\"null\"]);\r\n                    } else {\r\n                        this.addCompletionHintHere(false, false, [\"references\"]);\r\n                    }\r\n                    node.notNull = true;\r\n                    break;\r\n                case TokenType.keywordCollate:\r\n                    this.nextToken();\r\n                    node.collate = <string>this.cct.value;\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordCharacter:\r\n                    this.nextToken();\r\n                    this.expect(TokenType.keywordSet, true);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordDefault:\r\n                    this.nextToken();\r\n\r\n                    if (this.ct[1].tt == TokenType.leftBracket && this.ct[2].tt == TokenType.rightBracket) {\r\n                        this.nextToken();\r\n                        this.nextToken();\r\n                        this.nextToken();\r\n                        break;\r\n                    }\r\n\r\n                    node.defaultValue = <string>this.cct.value;\r\n                    if (typeof this.cct.value == \"string\" && node.defaultValue.toLowerCase() != 'null' ) {\r\n                        node.defaultValue = \"'\" + node.defaultValue + \"'\";\r\n                    }\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.keywordNull) {\r\n                        this.nextToken();\r\n                        break;\r\n                    } else if ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.stringConstant].indexOf(this.tt) >= 0) {\r\n                        let constantType = SQLBaseType.fromConstantType(this.tt);\r\n                        if (!constantType.canCastTo(type)) {\r\n                            this.pushError(\"Die Konstante hinter 'default' passt nicht zum Datentyp der Spalte.\");\r\n                        }\r\n                        this.nextToken();\r\n                    }\r\n                    break;\r\n                case TokenType.keywordComment:\r\n                    this.nextToken(); // Skip \"comment\"\r\n                    this.expect(TokenType.stringConstant, true);\r\n                    break;\r\n                case TokenType.keywordOn:\r\n                    this.nextToken();\r\n                    this.expect([TokenType.keywordUpdate], true);\r\n                    while (!this.comesToken([TokenType.comma, TokenType.endofSourcecode, TokenType.rightBracket])) this.nextToken();\r\n                    //@ts-ignore\r\n                    if (this.lastToken.tt == TokenType.leftBracket && this.tt == TokenType.rightBracket) this.nextToken();\r\n                    break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    parseInsert(): InsertNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        let rightBracketPosition =startPosition;\r\n        this.nextToken(); // skip \"insert\"\r\n\r\n        this.expect(TokenType.keywordInto, true);\r\n\r\n        let node: InsertNode = {\r\n            type: TokenType.keywordInsert,\r\n            position: startPosition,\r\n            endPosition: this.getCurrentPosition(),\r\n            valuesPosition: null,\r\n            columnsPosition: null,\r\n            symbolTable: null,\r\n            columnList: [],\r\n            values: [],\r\n            table: null\r\n        }\r\n\r\n        if (this.tt == TokenType.identifier) {\r\n            node.table = {\r\n                type: TokenType.table,\r\n                identifier: <string>this.cct.value,\r\n                alias: null,\r\n                position: this.getCurrentPosition()\r\n            }\r\n            node.columnsPosition = { line: node.table.position.line, column: node.table.position.column + node.table.position.length, length: 0 };\r\n            this.nextToken();\r\n        } else {\r\n            this.pushError(\"Hier wird der Bezeichner einer Tabelle erwartet. Gefunden wurde: \" + this.cct.value, \"error\");\r\n        }\r\n\r\n        if (this.tt == TokenType.leftBracket) {\r\n\r\n            this.nextToken();\r\n            let first: boolean = true;\r\n            //@ts-ignore\r\n            while (first || this.tt == TokenType.comma) {\r\n\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.identifier) {\r\n                    node.columnList.push({\r\n                        type: TokenType.identifier,\r\n                        identifier: this.cct.value + \"\",\r\n                        position: this.getCurrentPosition()\r\n                    })\r\n\r\n                } else {\r\n                    this.pushError(\"Erwartet wird der Bezeichner einer Spalte. Gefunden wurde: \" + this.cct.value, \"error\");\r\n                }\r\n                this.nextToken();\r\n            }\r\n            rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n        }\r\n\r\n        node.valuesPosition = this.getCurrentPosition();\r\n\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordValues:\r\n                this.nextToken();\r\n                this.parseValueLists(node.values);\r\n                break;\r\n            case TokenType.keywordSelect:\r\n            case TokenType.leftBracket:\r\n                if(this.getCurrentPosition().line <= rightBracketPosition.line + 1){\r\n                    let selectNode = this.parseSelect();\r\n                    node.select = selectNode;\r\n                    // if(selectNode != null){\r\n                    //     if(node.columnList != null && selectNode.columnList != null){\r\n                    //         if(node.columnList.length != selectNode.columnList.length){\r\n                    //             this.pushError(\"Die insert-Anweisung erwartet \" + node.columnList.length + \" Werte je Datensatz, der nachfolgende select-Term liefert aber \" + selectNode.columnList.length + \" Werte je Datensatz.\");                        \r\n                    //         } \r\n                    //         node.select = selectNode;\r\n                    //     }\r\n                    // }\r\n                }\r\n                break;\r\n        }\r\n\r\n\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n\r\n    parseValueLists(values: ConstantNode[][]) {\r\n        let insideListTokens = [TokenType.keywordNull, TokenType.charConstant, TokenType.stringConstant, TokenType.booleanConstant, TokenType.floatingPointConstant, TokenType.integerConstant];\r\n\r\n        let outerFirst: boolean = true;\r\n\r\n        while (outerFirst || this.tt == TokenType.comma) {\r\n            if (!outerFirst) {\r\n                this.nextToken(); // consume comma\r\n            }\r\n            outerFirst = false;\r\n            let leftBracketPosition = this.getCurrentPosition();\r\n            if (!this.expect(TokenType.leftBracket, true)) {\r\n                break;\r\n            }\r\n            let line: ConstantNode[] = [];\r\n            let first: boolean = true;\r\n            //@ts-ignore\r\n            while (first || this.tt == TokenType.comma) {\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n                if (this.tt == TokenType.identifier) {\r\n                    if (this.cct.isDoubleQuotedIdentifier) {\r\n                        this.tt = TokenType.stringConstant\r\n                    } else {\r\n                        let lv = (this.cct.value + \"\").toLocaleLowerCase();\r\n                        if ([\"date\", \"_binary\"].indexOf(lv) >= 0) {\r\n                            this.nextToken();\r\n                        }\r\n                    }\r\n                    \r\n                    \r\n                }\r\n\r\n\r\n\r\n                //@ts-ignore\r\n                if (insideListTokens.indexOf(this.tt) < 0) {\r\n                    this.pushError(\"Erwartet wird eine Konstante oder null. Gefunden wurde: \" + this.cct.value, \"error\");\r\n                    this.nextToken();\r\n                } else {\r\n                    line.push({\r\n                        constantType: this.tt,\r\n                        position: this.getCurrentPosition(),\r\n                        constant: this.cct.value,\r\n                        type: TokenType.constantNode\r\n                    });\r\n                    this.nextToken();\r\n                }\r\n            }\r\n            this.expect(TokenType.rightBracket, true);\r\n            if (line.length == 0) {\r\n                this.pushError(\"Eine Zeile kann nur dann in die Tabelle eingefügt werden, wenn sie mindestens einen Spaltenwert besitzt.\", \"error\", leftBracketPosition);\r\n            } else {\r\n                values.push(line);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    parseConstant(): ConstantNode {\r\n        let constantNode: ConstantNode = {\r\n            constantType: this.tt,\r\n            position: this.getCurrentPosition(),\r\n            constant: this.cct.value,\r\n            type: TokenType.constantNode\r\n        }\r\n        this.nextToken();\r\n\r\n        return constantNode;\r\n    }\r\n\r\n    parseSelect(): SelectNode {\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"select\"\r\n\r\n        let columnListStart: TextPosition = {\r\n            line: startPosition.line,\r\n            column: startPosition.column + 6,\r\n            length: 1\r\n        };\r\n\r\n        let node: SelectNode = {\r\n            type: TokenType.keywordSelect,\r\n            position: startPosition,\r\n            endPosition: this.getCurrentPosition(),\r\n            symbolTable: null,\r\n            columnList: [],\r\n            fromNode: null,\r\n            whereNode: null,\r\n            parentStatement: null\r\n        }\r\n\r\n        node.columnList = this.parseColumnList([TokenType.keywordFrom, TokenType.semicolon, TokenType.endofSourcecode], true);\r\n\r\n        let columnListKeywordArray = [\"distinct\", \"as\", \"*\", \"from\"];\r\n        if (node.columnList.findIndex(c => c.type == TokenType.allColumns) >= 0) {\r\n            columnListKeywordArray = [\"from\"];\r\n        }\r\n\r\n        this.module.addCompletionHint(columnListStart, this.getCurrentPositionPlus(2), true, true, columnListKeywordArray)\r\n\r\n        let hasFrom = this.comesToken(TokenType.keywordFrom, true);\r\n        let fromListKeywordArray = [\"where\", \"join\", \"left\", \"right\", \"inner\", \"outer\", \"natural\", \"on\", \"as\", \", \"];\r\n        // parse from ...\r\n        if (!hasFrom) {\r\n            columnListKeywordArray.unshift(\"from\");\r\n        } else {\r\n            node.fromStartPosition = { line: this.lastToken.position.line, column: this.lastToken.position.column + this.lastToken.position.length, length: 0 };\r\n\r\n            let dontHint: string[] = [];\r\n            node.fromNode = this.parseTableOrSubQuery(dontHint);\r\n\r\n            fromListKeywordArray.splice(fromListKeywordArray.indexOf(this.lastToken.value + \"\"), 1);\r\n\r\n            let hintEndPosition = this.getCurrentPositionPlus(2);\r\n            if (this.comesToken(TokenType.semicolon)) {\r\n                hintEndPosition = this.getCurrentPosition();\r\n            }\r\n\r\n            this.module.addCompletionHint(node.fromStartPosition, hintEndPosition, false, true, fromListKeywordArray, dontHint)\r\n            node.fromEndPosition = this.getCurrentPosition();\r\n        }\r\n\r\n        // parse where...\r\n\r\n        let whereKeywordArray = [\"like\"];\r\n        if (this.tt == TokenType.keywordWhere) {\r\n            let position = this.getCurrentPosition();\r\n            let whereStart = this.getCurrentPosition();\r\n            this.nextToken();\r\n            node.whereNode = this.parseTerm();\r\n            this.module.addCompletionHint(whereStart, this.getCurrentPositionPlus(4), true, true, whereKeywordArray)\r\n            // if (node.whereNode != null) node.whereNode.position = position;\r\n        } else {\r\n            fromListKeywordArray.push(\"where\");\r\n        }\r\n\r\n        let groupKeywordArray = [];\r\n        if (this.tt == TokenType.keywordGroup) {\r\n            let groupStart = this.getCurrentPosition();\r\n            node.groupByNode = this.parseGroupBy();\r\n            this.module.addCompletionHint(groupStart, this.getCurrentPosition(), true, true, groupKeywordArray);\r\n        } else {\r\n            whereKeywordArray.push(\"group by\");\r\n        }\r\n\r\n        if (this.tt == TokenType.keywordOrder) {\r\n            let orderStart = this.getCurrentPosition();\r\n            node.orderByNode = this.parseOrderBy();\r\n            this.module.addCompletionHint(orderStart, this.getCurrentPosition(), true, true, [\"asc\", \"desc\"]);\r\n        } else {\r\n            whereKeywordArray.push(\"order by\");\r\n            groupKeywordArray.push(\"order by\");\r\n        }\r\n\r\n        if (this.tt == TokenType.keywordLimit) {\r\n            node.limitNode = this.parseLimit();\r\n        }\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n        node.endPosition.column += 3;\r\n\r\n        return node;\r\n    }\r\n\r\n    parseLimit(): LimitNode {\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n        let numberOfRows: TermNode = this.parseTerm();\r\n        let ln: LimitNode = {\r\n            type: TokenType.keywordLimit,\r\n            position: position,\r\n            numberOfRows: numberOfRows\r\n        }\r\n        if (this.tt == TokenType.keywordOffset) {\r\n            this.nextToken();\r\n            ln.offset = this.parseTerm();\r\n        }\r\n        return ln;\r\n    }\r\n\r\n    parseGroupBy(): GroupByNode {\r\n        let position = this.getCurrentPosition();\r\n        this.expect(TokenType.keywordGroup, true);\r\n        this.expect(TokenType.keywordBy, true);\r\n        let gbn: GroupByNode = {\r\n            type: TokenType.keywordGroup,\r\n            columnList: [],\r\n            position: position\r\n        }\r\n        let tokenTypesAfterGroupBy = [TokenType.keywordHaving, TokenType.keywordSelect, TokenType.keywordOrder, TokenType.keywordLimit, TokenType.rightBracket, TokenType.semicolon];\r\n        gbn.columnList = this.parseColumnList(tokenTypesAfterGroupBy, false).map(columnNode => columnNode.term);\r\n        if (this.tt == TokenType.keywordHaving) {\r\n            this.nextToken();\r\n            gbn.having = this.parseTerm();\r\n        }\r\n        return gbn;\r\n    }\r\n\r\n    parseOrderBy(): OrderByNode[] {\r\n        this.expect(TokenType.keywordOrder, true);\r\n        this.expect(TokenType.keywordBy, true);\r\n\r\n        let obnList: OrderByNode[] = [];\r\n        let first: boolean = true;\r\n\r\n        do {\r\n            if (first) {\r\n                first = false;\r\n            } else {\r\n                this.expect(TokenType.comma, true);\r\n            }\r\n            let column: TermNode = this.parseTerm();\r\n            let obn: OrderByNode = {\r\n                type: TokenType.keywordOrder,\r\n                position: this.getCurrentPosition(),\r\n                column: column\r\n            }\r\n            if ([TokenType.keywordAscending, TokenType.keywordDescending].indexOf(this.tt) >= 0) this.nextToken();\r\n            if (this.tt == TokenType.keywordNulls) {\r\n                this.nextToken();\r\n                this.expect([TokenType.keywordFirst, TokenType.keywordLast], true);\r\n            }\r\n            obnList.push(obn);\r\n        } while (this.tt == TokenType.comma);\r\n\r\n        return obnList;\r\n    }\r\n\r\n    parseTableOrSubQuery(dontHint: string[]): TableOrSubqueryNode {\r\n\r\n        let leftSide: TableOrSubqueryNode = this.parseAtomicTableOrSubQuery(dontHint);\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        while (this.parseJoinOperator()) {\r\n\r\n            let rightSide: TableOrSubqueryNode = this.parseAtomicTableOrSubQuery(dontHint);\r\n\r\n            leftSide = {\r\n                type: TokenType.keywordJoin,\r\n                firstOperand: leftSide,\r\n                secondOperand: rightSide,\r\n                position: position,\r\n            }\r\n\r\n            if (this.tt == TokenType.keywordOn) {\r\n                leftSide.on = this.parseTerm();\r\n            }\r\n\r\n        }\r\n\r\n        return leftSide;\r\n\r\n    }\r\n\r\n    parseJoinOperator(): boolean {\r\n        if (this.tt == TokenType.comma) {\r\n            this.nextToken();\r\n            return true;\r\n        }\r\n        if (this.tt == TokenType.keywordNatural) this.nextToken();\r\n        switch (this.tt) {\r\n            case TokenType.keywordLeft:\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.keywordOuter) this.nextToken();\r\n                return this.expect(TokenType.keywordJoin, true);\r\n            case TokenType.keywordInner:\r\n            case TokenType.keywordCross:\r\n                this.nextToken();\r\n                return this.expect(TokenType.keywordJoin, true);\r\n            case TokenType.keywordJoin:\r\n                this.nextToken();\r\n                return true;\r\n            default: return false;\r\n        }\r\n    }\r\n\r\n    parseAtomicTableOrSubQuery(dontHint: string[]): TableOrSubqueryNode {\r\n\r\n        if (!this.expect([TokenType.identifier, TokenType.leftBracket], false)) {\r\n            return null;\r\n        }\r\n\r\n        if (this.tt == TokenType.leftBracket) {\r\n            this.nextToken();\r\n            let ret: TableOrSubqueryNode;\r\n            //@ts-ignore\r\n            if (this.tt == TokenType.keywordSelect) {\r\n                let position = this.getCurrentPosition();\r\n                let selectStatement = this.parseSelect();\r\n                ret = {\r\n                    type: TokenType.subquery,\r\n                    alias: null,\r\n                    position: position,\r\n                    query: selectStatement\r\n                }\r\n            } else {\r\n                ret = this.parseTableOrSubQuery(dontHint);\r\n            }\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n\r\n            //@ts-ignore\r\n            if (this.tt == TokenType.keywordAs && ret.type == TokenType.subquery) {\r\n                this.nextToken();\r\n                if (this.expect(TokenType.identifier, false)) {\r\n                    ret.alias = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    dontHint.push(ret.alias);\r\n                }\r\n            }\r\n\r\n            return ret;\r\n        }\r\n\r\n        if (this.tt == TokenType.identifier) {\r\n            let node: TableNode = {\r\n                type: TokenType.table,\r\n                identifier: <string>this.cct.value,\r\n                alias: null,\r\n                position: this.getCurrentPosition()\r\n            }\r\n            dontHint.push(node.identifier);\r\n            this.nextToken();\r\n\r\n            //@ts-ignore\r\n            if (this.tt == TokenType.keywordAs) {\r\n                this.nextToken();\r\n                if (this.expect(TokenType.identifier, false)) {\r\n                    node.alias = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    dontHint.push(node.alias);\r\n                }\r\n\r\n            }\r\n\r\n            return node;\r\n        }\r\n\r\n    }\r\n\r\n    parseColumnList(tokenTypesAfterListEnd: TokenType[], allowAliases: boolean): ColumnNode[] {\r\n        let columns: ColumnNode[] = [];\r\n\r\n        while ([TokenType.stringConstant, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.booleanConstant,\r\n        TokenType.identifier, TokenType.multiplication, TokenType.leftBracket, TokenType.keywordDistinct].indexOf(this.tt) >= 0) {\r\n            if (this.tt == TokenType.multiplication) {\r\n                columns.push({\r\n                    term: null,\r\n                    alias: null,\r\n                    distinct: false,\r\n                    position: this.getCurrentPosition(),\r\n                    type: TokenType.allColumns\r\n                });\r\n                this.nextToken();\r\n            } else {\r\n                let distinct = this.comesToken(TokenType.keywordDistinct, true);\r\n                let columnTerm = this.parseTerm();\r\n                if (columnTerm != null) {\r\n                    let column: ColumnNode = {\r\n                        type: TokenType.column,\r\n                        term: columnTerm,\r\n                        distinct: distinct,\r\n                        position: columnTerm.position\r\n                    }\r\n                    columns.push(column);\r\n                    if (this.comesToken(TokenType.keywordAs)) {\r\n                        this.nextToken();\r\n                        if (this.expect(TokenType.identifier, false)) {\r\n                            column.alias = \"\" + this.cct.value;\r\n                        }\r\n                        this.nextToken();\r\n                    }\r\n                }\r\n            }\r\n            if (tokenTypesAfterListEnd.indexOf(this.tt) >= 0 || this.isEnd()) {\r\n                break;\r\n            }\r\n            this.expect(TokenType.comma, true);\r\n        }\r\n\r\n        if (columns.length == 0) {\r\n            this.pushError(\"Es fehlt die kommaseparierte Liste der gewünschten Spalten.\", \"error\");\r\n        }\r\n\r\n        return columns;\r\n    }\r\n\r\n\r\n    parseTerm(): TermNode {\r\n        return this.parseTermBinary(0);\r\n    }\r\n\r\n    parseTermBinary(precedence: number): TermNode {\r\n\r\n        let left: TermNode;\r\n        if (precedence < Parser.operatorPrecedence.length - 1) {\r\n            left = this.parseTermBinary(precedence + 1);\r\n        } else {\r\n            left = this.parseUnary();\r\n        }\r\n\r\n        let operators = Parser.operatorPrecedence[precedence];\r\n\r\n        if (left == null || operators.indexOf(this.tt) < 0) {\r\n            return left;\r\n        }\r\n\r\n        let first = true;\r\n\r\n        while (first || operators.indexOf(this.tt) >= 0) {\r\n\r\n            let operator: TokenType = this.tt;\r\n\r\n            first = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            this.nextToken();\r\n            let right: TermNode;\r\n            if (precedence < Parser.operatorPrecedence.length - 1) {\r\n                right = this.parseTermBinary(precedence + 1);\r\n            } else {\r\n                right = this.parseUnary();\r\n            }\r\n\r\n            left = {\r\n                type: TokenType.binaryOp,\r\n                position: position,\r\n                operator: operator,\r\n                firstOperand: left,\r\n                secondOperand: right\r\n            };\r\n\r\n\r\n        }\r\n\r\n        return left;\r\n\r\n    }\r\n\r\n\r\n    // -, not, this, super, a.b.c[][].d, a.b(), b() (== this.b()), super.b(), super()\r\n    parseUnary(): TermNode {\r\n\r\n        let term: TermNode;\r\n        let position: TextPosition = this.getCurrentPosition();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n                return this.parseBracket();\r\n            case TokenType.keywordNot:\r\n                position = position;\r\n                this.nextToken();\r\n                term = this.parseTermBinary(2);\r\n                return {\r\n                    type: TokenType.unaryOp,\r\n                    position: position,\r\n                    operand: term,\r\n                    operator: TokenType.keywordNot\r\n                }\r\n            case TokenType.minus:\r\n                // case TokenType.not:\r\n                position = position;\r\n                let tt1 = this.tt;\r\n                this.nextToken();\r\n                term = this.parseUnary();\r\n\r\n                return {\r\n                    type: TokenType.unaryOp,\r\n                    position: position,\r\n                    operand: term,\r\n                    operator: tt1\r\n                };\r\n\r\n            case TokenType.integerConstant:\r\n            case TokenType.charConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n                term = {\r\n                    type: TokenType.constantNode,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: this.tt,\r\n                    constant: this.cct.value\r\n                };\r\n                let isStringConstant = this.tt == TokenType.stringConstant;\r\n                this.nextToken();\r\n\r\n                if (isStringConstant) return this.parseDotOrArrayChains(term);\r\n\r\n                return term;\r\n            case TokenType.identifier: // attribute of current class or local variable\r\n\r\n                let identifier1 = <string>this.cct.value;\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    let rightBracketPosition = parameters.rightBracketPosition;\r\n\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position1,\r\n                        rightBracketPosition: rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        identifier: identifier1,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.identifier,\r\n                        identifier: identifier1,\r\n                        position: position\r\n                    }\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.dot) {\r\n                        let position = this.getCurrentPosition();\r\n                        this.nextToken();\r\n                        this.expect(TokenType.identifier, false);\r\n                        let secondIdentifier: IdentifierNode = {\r\n                            type: TokenType.identifier,\r\n                            identifier: <string>this.cct.value,\r\n                            position: this.getCurrentPosition()\r\n                        }\r\n                        this.nextToken();\r\n                        term = {\r\n                            type: TokenType.dot,\r\n                            identifierLeft: <IdentifierNode>term,\r\n                            identifierRight: secondIdentifier,\r\n                            position: position\r\n                        }\r\n\r\n                    } else if ([TokenType.isNull, TokenType.isNotNull].indexOf(this.tt) >= 0) {\r\n                        term = {\r\n                            type: TokenType.unaryOp,\r\n                            operand: term,\r\n                            operator: this.tt,\r\n                            position: position\r\n                        };\r\n                        this.nextToken();\r\n                    }\r\n                }\r\n\r\n                return term;\r\n            default:\r\n                this.pushError(\"Erwartet wird eine Variable, ein Methodenaufruf oder eine Konstante. Gefunden wurde: \" + this.cct.value);\r\n                return null;\r\n        }\r\n\r\n    }\r\n\r\n    parseList(): ListNode {\r\n        let node: ListNode = {\r\n            type: TokenType.list,\r\n            position: this.getCurrentPosition(),\r\n            elements: []\r\n        }\r\n\r\n        let constantTypes = [TokenType.charConstant, TokenType.stringConstant, TokenType.booleanConstant, TokenType.floatingPointConstant, TokenType.integerConstant];\r\n\r\n        while (constantTypes.indexOf(this.tt) >= 0) {\r\n            node.elements.push({\r\n                type: TokenType.constantNode,\r\n                constant: this.cct.value,\r\n                constantType: this.tt,\r\n                position: this.cct.position\r\n            });\r\n            this.nextToken();\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            }\r\n            this.nextToken();\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    parseBracket(): TermNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n        let tokenBeforeBracket = this.lastToken;\r\n        this.nextToken(); // consume (\r\n\r\n        if (this.tt == TokenType.keywordSelect) {\r\n            let selectNode = this.parseSelect();\r\n            this.expect(TokenType.rightBracket, true);\r\n            return selectNode;\r\n        } else if ([TokenType.comma, TokenType.rightBracket].indexOf(this.ct[1].tt) >= 0 &&\r\n            [TokenType.keywordIn, TokenType.keywordNotIn].indexOf(tokenBeforeBracket.tt) >= 0) {\r\n            let listNode = this.parseList();\r\n            this.expect(TokenType.rightBracket, true);\r\n            return listNode;\r\n        } else {\r\n            let term = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            let bracketsNode: BracketsNode = {\r\n                position: rightBracketPosition,\r\n                type: TokenType.rightBracket,\r\n                termInsideBrackets: term\r\n            }\r\n\r\n\r\n            return bracketsNode;\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    parseMethodCallParameters(): { rightBracketPosition: TextPosition, nodes: TermNode[], commaPositions: TextPosition[] } {\r\n        // Assumption: current token is (        \r\n        this.nextToken();\r\n        if (this.tt == TokenType.rightBracket) {\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n            return { rightBracketPosition: rightBracketPosition, nodes: [], commaPositions: [] };\r\n        }\r\n\r\n        let parameters: TermNode[] = [];\r\n        let commaPositions: TextPosition[] = [];\r\n\r\n        while (true) {\r\n            let pos = this.pos;\r\n\r\n            if (this.tt == TokenType.multiplication) {\r\n                this.nextToken();\r\n                parameters.push({\r\n                    type: TokenType.allColumns,\r\n                    position: this.getCurrentPosition(),\r\n                });\r\n            } else {\r\n                let parameter = this.parseTerm();\r\n                if (parameter != null) {\r\n                    parameters.push(parameter);\r\n                }\r\n            }\r\n\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            } else {\r\n                commaPositions.push(this.getCurrentPosition());\r\n                this.nextToken(); // consume comma\r\n            }\r\n\r\n            // emergency-step:\r\n            if (this.pos == pos) {\r\n                this.nextToken();\r\n            }\r\n\r\n        }\r\n\r\n        let position = this.getCurrentPosition();\r\n        let rightBracketFound = this.expect(TokenType.rightBracket, true);\r\n\r\n        return { rightBracketPosition: rightBracketFound ? position : null, nodes: parameters, commaPositions: commaPositions };\r\n\r\n    }\r\n\r\n    parseDotOrArrayChains(term: TermNode): TermNode {\r\n\r\n        if (term == null) return null;\r\n\r\n        while (this.comesToken([TokenType.dot, TokenType.leftSquareBracket])) {\r\n            if (this.tt == TokenType.dot) {\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.identifier) {\r\n                    this.pushError(\"Erwartet wird der Bezeichner eines Attributs oder einer Methode, gefunden wurde: \" + this.cct.value);\r\n                    return term;\r\n                }\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position,\r\n                        rightBracketPosition: parameters.rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        identifier: identifier,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                }\r\n                // else {\r\n                //     term = {\r\n                //         type: TokenType.pushAttribute,\r\n                //         position: position,\r\n                //         identifier: identifier,\r\n                //         object: term\r\n                //     }\r\n                // }\r\n\r\n            }\r\n        }\r\n\r\n        return term;\r\n    }\r\n\r\n\r\n}","import { ColumnStructure, TableStructure } from \"../../tools/DatabaseTools.js\";\nimport { SQLType, SQLBaseType, SQLDerivedType } from \"./SQLTypes.js\";\n\n\nexport class Column {\n\n    references: Column;\n    fromColumnStructure?: ColumnStructure;\n    notNull: boolean;\n\n    constructor(public identifier: string, public type: SQLType, public table: Table, public isPrimaryKey: boolean, public isNullable: boolean, public defaultValue: string, public isAutoIncrement){\n\n    }\n\n    static fromColumnStructure(cs: ColumnStructure, table: Table): Column {\n\n        let regex1 = /^(\\w*) *(?:\\((.*)\\))?.*$/;\n\n        let typeMatch1 = cs.completeTypeSQL.match(regex1);\n        let baseTypeIdentifier: string = typeMatch1[1];\n        let commaSeparatedParameters: string = typeMatch1[2];\n\n        let parameterValues: number[] = [];\n        if(commaSeparatedParameters != null){\n            parameterValues = commaSeparatedParameters.split(',').map(v => parseInt(v.trim()));           \n        }\n\n        let type: SQLType = SQLBaseType.getBaseType(baseTypeIdentifier);\n        if(parameterValues.length > 0 && type != null){\n            type = new SQLDerivedType(<SQLBaseType>type, parameterValues);\n        }\n\n        let column = new Column(cs.name, type, table, cs.isPrimaryKey, !cs.isPrimaryKey, cs.defaultValue, cs.isAutoIncrement);\n        column.notNull = cs.notNull;\n        \n        column.fromColumnStructure = cs;\n\n        return column;\n    }\n\n}\n\nexport class Table {\n    \n    public columns: Column[] = [];\n\n    public size: number;\n\n    constructor(public identifier: string){\n\n    }\n\n    private static fromTableStructure(ts: TableStructure): Table {\n        let table: Table = new Table(ts.name);\n        table.columns = ts.columns.map( column => Column.fromColumnStructure(column, table));\n        table.size = ts.size;\n        return table;\n    }\n\n    static fromTableStructureList(tsList: TableStructure[]): Table[]{\n\n        if(tsList == null) tsList = [];\n\n        let tables: Table[] = tsList.map(ts => Table.fromTableStructure(ts));\n\n        let columnStructureToColumnMap: Map<ColumnStructure, Column> = new Map();\n        for(let table of tables){\n            for(let column of table.columns){\n                columnStructureToColumnMap.set(column.fromColumnStructure, column);\n            }\n        }\n\n        for(let table of tables){\n            for(let column of table.columns){\n                let referencedCs = column.fromColumnStructure.references;\n                if(referencedCs != null){\n                    let referencedColumn = columnStructureToColumnMap.get(referencedCs);\n                    column.references = referencedColumn;\n                }\n            }\n        }\n\n        return tables;\n    }\n\n}","import { DatabaseStructure } from \"../../tools/DatabaseTools.js\";\r\nimport { TextPosition } from \"../lexer/Token.js\";\r\nimport { Table, Column } from \"./SQLTable.js\";\r\n\r\nexport type Symbol = {\r\n    identifier: string;\r\n    table?: Table;\r\n    column?: Column;\r\n    tableAlias?: string;\r\n    posOfDefinition: TextPosition;\r\n    referencedOnPositions: TextPosition[];\r\n}\r\n\r\nexport class SymbolTable {\r\n    parent: SymbolTable; // SymbolTable of parent scope\r\n    positionFrom: TextPosition;\r\n    positionTo: TextPosition;\r\n\r\n    childSymbolTables: SymbolTable[] = [];\r\n\r\n    private symbols: Map<string, Symbol[]> = new Map();\r\n    symbolList: Symbol[] = [];\r\n\r\n    constructor(parentSymbolTable: SymbolTable, positionFrom: TextPosition, positionTo: TextPosition) {\r\n\r\n        this.parent = parentSymbolTable;\r\n\r\n        this.positionFrom = positionFrom;\r\n        this.positionTo = positionTo;\r\n\r\n\r\n        if (this.parent != null) {\r\n            this.parent.childSymbolTables.push(this);\r\n        }\r\n    }\r\n\r\n    extractDatabaseStructure(databaseStructure: DatabaseStructure) {\r\n        for (let table of Table.fromTableStructureList(databaseStructure?.tables)) {\r\n\r\n            this.storeTableSymbols(table);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    storeTableSymbols(table: Table){\r\n        this.storeSymbol({\r\n            identifier: table.identifier,\r\n            posOfDefinition: null,\r\n            referencedOnPositions: [],\r\n            table: table\r\n        });\r\n\r\n        for (let column of table.columns) {\r\n            this.storeSymbol({\r\n                identifier: column.identifier,\r\n                posOfDefinition: null,\r\n                referencedOnPositions: [],\r\n                column: column\r\n            });\r\n        }\r\n    }\r\n\r\n    storeSymbol(symbol: Symbol) {\r\n        let list: Symbol[] = this.symbols.get(symbol.identifier.toLowerCase());\r\n        if (list == null) {\r\n            list = [symbol];\r\n            this.symbols.set(symbol.identifier.toLowerCase(), list);\r\n        } else {\r\n            list.push(symbol);\r\n        }\r\n        this.symbolList.push(symbol);\r\n    }\r\n\r\n    findTableAtPosition(line: number, column: number): SymbolTable {\r\n\r\n        if (!this.containsPosition(line, column)) {\r\n            return null;\r\n        }\r\n\r\n        let shortestSymbolTableContainingPosition = null;\r\n        let shortestPosition = 10000000;\r\n\r\n        for (let st of this.childSymbolTables) {\r\n            if (st.containsPosition(line, column)) {\r\n                let st1 = st.findTableAtPosition(line, column);\r\n                if (st1.positionTo.line - st1.positionFrom.line < shortestPosition) {\r\n                    shortestSymbolTableContainingPosition = st1;\r\n                    shortestPosition = st1.positionTo.line - st1.positionFrom.line;\r\n                }\r\n            }\r\n            // if(st.containsPosition(line, column) && st.positionTo.line - st.positionFrom.line < shortestPosition){\r\n            //     shortestSymbolTableContainingPosition = st;\r\n            //     shortestPosition = st.positionTo.line - st.positionFrom.line;\r\n            // }\r\n        }\r\n\r\n        if (shortestSymbolTableContainingPosition != null) {\r\n            return shortestSymbolTableContainingPosition;\r\n        } else {\r\n            return this;\r\n        }\r\n\r\n    }\r\n\r\n    containsPosition(line: number, column: number) {\r\n        if (line < this.positionFrom.line || line > this.positionTo.line) {\r\n            return false;\r\n        }\r\n\r\n        if (line == this.positionFrom.line && column < this.positionFrom.column) return false;\r\n        if (line == this.positionTo.line && column > this.positionTo.column + 1) return false;\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    findTable(identifier: string): Table {\r\n        let tables = this.findTables(identifier);\r\n        if(tables.length == 0) return null;\r\n        return tables[0].table;\r\n    }\r\n\r\n    findTables(identifier: string): Symbol[] {\r\n\r\n        let symbolTable: SymbolTable = this;\r\n        while(symbolTable != null){\r\n\r\n            let symbols = symbolTable.symbols.get(identifier.toLowerCase());\r\n            if(symbols != null){\r\n                symbols = symbols.filter(s => s.table != null);\r\n                if(symbols.length > 0){\r\n                    return symbols;\r\n                }\r\n            }\r\n\r\n            symbolTable = symbolTable.parent;\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    findColumn(identifier: string): Symbol[] {\r\n\r\n        let symbolTable: SymbolTable = this;\r\n        while(symbolTable != null){\r\n\r\n            let symbols = symbolTable.symbols.get(identifier.toLowerCase());\r\n            if(symbols != null){\r\n                symbols = symbols.filter(s => s.column != null);\r\n                if(symbols.length > 0){\r\n                    return symbols;\r\n                }\r\n            }\r\n\r\n            symbolTable = symbolTable.parent;\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { SQLBaseType, SQLType } from \"./SQLTypes.js\";\r\n\r\nexport class SQLMethodParameter {\r\n    type: SQLType;\r\n    constructor(public identifier: string, type: string){\r\n        this.type = SQLBaseType.getBaseType(type);\r\n    }\r\n}\r\n\r\nexport class SQLMethod {\r\n    acceptsStarParameter: boolean = false;\r\n    public returnType: SQLType;\r\n    constructor(public identifier: string, public isAggregating: boolean, returnType: string, public parameters: SQLMethodParameter[]){\r\n        this.returnType = SQLBaseType.getBaseType(returnType);\r\n    }\r\n\r\n}\r\n\r\nexport class SQLMethodStore {\r\n\r\n    static instance: SQLMethodStore;\r\n    public methods: SQLMethod[] = [];\r\n\r\n    static getInstance():SQLMethodStore {\r\n        if(this.instance == null){\r\n            this.instance = new SQLMethodStore();\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    constructor(){\r\n        this.pushOneParameterMethod(\"max\" ,\"integer\", \"integer\");\r\n        this.pushOneParameterMethod(\"max\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"max\" ,\"date\", \"date\");\r\n        this.pushOneParameterMethod(\"max\" ,\"time\", \"time\");\r\n        this.pushOneParameterMethod(\"max\" ,\"datetime\", \"datetime\");\r\n        this.pushOneParameterMethod(\"max\" ,\"timestamp\", \"timestamp\");\r\n        this.pushOneParameterMethod(\"min\" ,\"integer\", \"integer\");\r\n        this.pushOneParameterMethod(\"min\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"min\" ,\"date\", \"date\");\r\n        this.pushOneParameterMethod(\"min\" ,\"time\", \"time\");\r\n        this.pushOneParameterMethod(\"min\" ,\"datetime\", \"datetime\");\r\n        this.pushOneParameterMethod(\"min\" ,\"timestamp\", \"timestamp\");\r\n        this.pushOneParameterMethod(\"avg\" ,\"integer\", \"integer\");\r\n        this.pushOneParameterMethod(\"avg\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"sum\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"sum\" ,\"integer\", \"integer\");\r\n\r\n        let countMethod = new SQLMethod(\"count\", true, \"integer\", [new SQLMethodParameter(\"spalte\", \"text\")]);\r\n        countMethod.acceptsStarParameter = true;\r\n        this.methods.push(countMethod);\r\n    }\r\n    \r\n    getMethods(identifier: string){\r\n        return this.methods.filter(m => m.identifier == identifier.toLowerCase());\r\n    }\r\n\r\n\r\n    pushOneParameterMethod(identifier: string, returnType: string, parameterType: string){\r\n        this.methods.push(new SQLMethod(identifier, true, returnType, [new SQLMethodParameter(\"spalte\", parameterType)]));\r\n\r\n    }\r\n}","export function hash(s: string){\r\n    let hash: number = 0;\r\n    let chr: number;\r\n    for (let i = 0; i < s.length; i++) {\r\n      chr   = s.charCodeAt(i);\r\n      hash  = ((hash << 5) - hash) + chr;\r\n      hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n\r\nexport function escapeHtml(unsafe: string): string {\r\n  return unsafe\r\n      .replace(/['\"]+/g, '')\r\n       .replace(/&/g, \"&amp;\")\r\n       .replace(/</g, \"&lt;\")\r\n       .replace(/>/g, \"&gt;\")\r\n       .replace(/\"/g, \"&quot;\")\r\n       .replace(/'/g, \"&#039;\");\r\n}\r\n\r\nexport function dateToString(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth() + 1)}.${date.getFullYear()}, ${twoDez(date.getHours())}:${twoDez(date.getMinutes())}`;\r\n}\r\n\r\nexport function dateToStringWithoutTime(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth())}.${date.getFullYear()}`;\r\n}\r\n\r\nfunction twoDez(z: number):string {\r\n  if(z < 10) return \"0\" + z;\r\n  return \"\" + z;\r\n}\r\n\r\nexport function stringToDate(text: string): Date {\r\n\r\n  let match = text.match(/^(\\d{2})\\.(\\d{2})\\.(\\d{4}), (\\d{2}):(\\d{2})$/);\r\n\r\n  let date: Date = new Date(Number.parseInt(match[3]), Number.parseInt(match[2]), Number.parseInt(match[1]), Number.parseInt(match[4]), Number.parseInt(match[5]) );\r\n\r\n  return date;\r\n}\r\n\r\nexport function stringWrap(s: string, length: number ): string{\r\n  return s.replace(\r\n    new RegExp(`(?![^\\\\n]{1,${length}}$)([^\\\\n]{1,${length}})\\\\s`, 'g'), '$1\\n'\r\n  );\r\n} \r\n\r\nexport function formatAsJavadocComment(s: string, indent: number|string = \"\"): string {\r\n  let indentString = \"\";\r\n\r\n  if(typeof indent == \"string\"){\r\n    indentString = indent;\r\n  } else {\r\n    for(let i = 0; i < indent; i++){\r\n      indentString += \" \";\r\n    }\r\n  }\r\n\r\n  s = stringWrap(s, 60);\r\n  if(s.length > 0) s = \"\\n\" + s;\r\n  s = indentString + \"/**\" + s.replace(/\\n/g, \"\\n\" + indentString + \" * \") + \"\\n\" + indentString + \" */\";\r\n  return s;\r\n}\r\n\r\n\r\nexport function isDate(inputText: string) {\r\n\r\n      if (inputText == null || typeof inputText != 'string') return false;\r\n\r\n      // var dateformat = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/;\r\n      var dateformat = /^\\d{4}[\\/\\-](0?[1-9]|1[012])[\\/\\-](0?[1-9]|[12][0-9]|3[01])$/;\r\n      // Match the date format through regular expression\r\n      if (inputText.match(dateformat)) {\r\n          //Test which seperator is used '/' or '-'\r\n          var opera1 = inputText.split('/');\r\n          var opera2 = inputText.split('-');\r\n          var lopera1 = opera1.length;\r\n          var lopera2 = opera2.length;\r\n          // Extract the string into month, date and year\r\n          if (lopera1 > 1) {\r\n              var pdate = inputText.split('/');\r\n          }\r\n          else if (lopera2 > 1) {\r\n              var pdate = inputText.split('-');\r\n          }\r\n          if (pdate.length != 3) return false;\r\n          var dd = parseInt(pdate[2]);\r\n          var mm = parseInt(pdate[1]);\r\n          var yy = parseInt(pdate[0]);\r\n          // Create list of days of a month [assume there is no leap year by default]\r\n          var ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n          if (mm == 1 || mm > 2) {\r\n              if (dd > ListofDays[mm - 1]) {\r\n                  return false;\r\n              }\r\n          }\r\n          if (mm == 2) {\r\n              var lyear = false;\r\n              if ((!(yy % 4) && yy % 100) || !(yy % 400)) {\r\n                  lyear = true;\r\n              }\r\n              if ((lyear == false) && (dd >= 29)) {\r\n                  return false;\r\n              }\r\n              if ((lyear == true) && (dd > 29)) {\r\n                  return false;\r\n              }\r\n              return true;\r\n          }\r\n\r\n          return true;\r\n\r\n      }\r\n      else {\r\n          return false;\r\n      }\r\n  }\r\n\r\n  export function isDateTime(inputText: string) {\r\n\r\n      if (inputText == null || typeof inputText != 'string') return false;\r\n\r\n      // var dateformat = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/;\r\n      var dateformat = /^\\d{4}[\\-](0[1-9]|1[012])[\\-](0[1-9]|[12][0-9]|3[01]) ([01][0-9]|2[0123]):([0-5][0-9]):([0-5][0-9])$/;\r\n      // Match the date format through regular expression\r\n      if (inputText.match(dateformat)) {\r\n          var splitStr = inputText.split(' ');\r\n          var dateStr = splitStr[0];\r\n          //var timeStr = splitStr[1];\r\n\r\n          if (dateStr.length != 10) return false;\r\n          var dd = parseInt(dateStr.substring(8,10));\r\n          var mm = parseInt(dateStr.substring(5, 7));\r\n          var yy = parseInt(dateStr.substring(0, 4));\r\n          // Create list of days of a month [assume there is no leap year by default]\r\n          var ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n          if (mm == 1 || mm > 2) {\r\n              if (dd > ListofDays[mm - 1]) {\r\n                  return false;\r\n              }\r\n          }\r\n          if (mm == 2) {\r\n              var lyear = false;\r\n              if ((!(yy % 4) && yy % 100) || !(yy % 400)) {\r\n                  lyear = true;\r\n              }\r\n              if ((lyear == false) && (dd >= 29)) {\r\n                  return false;\r\n              }\r\n              if ((lyear == true) && (dd > 29)) {\r\n                  return false;\r\n              }\r\n              return true;\r\n          }\r\n\r\n          return true;\r\n\r\n      }\r\n      else {\r\n          return false;\r\n      }\r\n  }\r\n  export function isTime(inputText: string) {\r\n\r\n      if (inputText == null || typeof inputText != 'string') return false;\r\n\r\n      var timeformat = /^([01][0-9]|2[0123]):([0-5][0-9]):([0-5][0-9])$/;\r\n      // Match the date format through regular expression\r\n      return inputText.match(timeformat) != null;\r\n  }\r\n","import { DatabaseTool } from \"../../tools/DatabaseTools.js\";\nimport { TextPosition, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\nimport { CompletionHint, Module } from \"./Module.js\";\nimport { Symbol, SymbolTable } from \"./SymbolTable.js\";\nimport { AlterTableNode, ASTNode, BinaryOpNode, CreateTableNode, DeleteNode, DotNode, DropTableNode, IdentifierNode, InsertNode, MethodcallNode, SelectNode, TableOrSubqueryNode, TermNode, UpdateNode } from \"./Ast.js\";\nimport { Error, ErrorLevel, QuickFix } from \"../lexer/Lexer.js\";\nimport { Column, Table } from \"./SQLTable.js\";\nimport { SQLBaseType, SQLType } from \"./SQLTypes.js\";\nimport { SQLMethodStore } from \"./SQLMethods.js\";\nimport { isDate, isDateTime, isTime } from \"../../tools/StringTools.js\";\n\n\nexport class SymbolResolver {\n\n    symbolTableStack: SymbolTable[] = [];\n    errorList: Error[];\n    module: Module;\n    databaseTool: DatabaseTool;\n    tables: Table[];\n\n    constructor(databaseTool: DatabaseTool) {\n        this.databaseTool = databaseTool;\n        this.tables = Table.fromTableStructureList(databaseTool.databaseStructure?.tables);\n    }\n\n    start(module: Module) {\n        this.module = module;\n        this.symbolTableStack = [];\n        this.errorList = [];\n\n        module.mainSymbolTable = new SymbolTable(null, { column: 0, line: 0, length: 0 }, { column: 0, line: 100000, length: 0 })\n\n        this.symbolTableStack.push(module.mainSymbolTable);\n\n        for (let statement of this.module.sqlStatements) {\n\n            let errorsBeforeStatement = this.errorList.length;\n\n            let astNode = statement.ast;\n            if (astNode == null) continue;\n\n            switch (astNode.type) {\n                case TokenType.keywordSelect:\n                    this.resolveSelect(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordInsert:\n                    this.resolveInsert(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordCreate:\n                    this.resolveCreateTable(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordUpdate:\n                    this.resolveUpdate(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordDelete:\n                    this.resolveDelete(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordDrop:\n                    this.resolveDropTable(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordAlter:\n                    this.resolveAlterTable(astNode)\n                    this.symbolTableStack.pop();\n                    break;\n\n                default:\n                    break;\n            }\n\n            statement.hasErrors = statement.hasErrors || this.errorList.length > errorsBeforeStatement;\n\n        }\n\n        module.errors[2] = this.errorList;\n\n    }\n\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position: TextPosition, quickFix?: QuickFix) {\n        // if (position == null) position = Object.assign({}, this.position);\n        this.errorList.push({\n            text: text,\n            position: position,\n            quickFix: quickFix,\n            level: errorLevel\n        });\n    }\n\n\n    getCurrentSymbolTable(): SymbolTable {\n        return this.symbolTableStack[this.symbolTableStack.length - 1];\n    }\n\n    pushNewSymbolTable(positionFrom: TextPosition, positionTo: TextPosition): SymbolTable {\n        if (positionTo == null) {\n            positionTo = {\n                line: 100000,\n                column: 1,\n                length: 1\n            }\n        };\n        let st: SymbolTable = new SymbolTable(this.getCurrentSymbolTable(), positionFrom, positionTo);\n        this.symbolTableStack.push(st);\n        return st;\n    }\n\n    resolveSelect(selectNode: SelectNode): Table {\n        let resultTable: Table = new Table(null);\n\n        selectNode.symbolTable = this.pushNewSymbolTable(selectNode.position, selectNode.endPosition);\n\n        // From\n        let joinedTables: Table[] = [];\n        this.resolveTableOrSubQuery(selectNode.fromNode, joinedTables);\n        if (selectNode.fromStartPosition != null) {\n            let fromSymbolTable = new SymbolTable(this.getCurrentSymbolTable(), selectNode.fromStartPosition, selectNode.fromEndPosition);\n            fromSymbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n        }\n\n        // Column list\n        for (let columnNode of selectNode.columnList) {\n            if (columnNode.type == TokenType.allColumns) {\n                for (let table of joinedTables) {\n                    for (let column of table.columns) {\n                        let c: Column = new Column(column.identifier, column.type, resultTable, false, true, column.defaultValue, column.isAutoIncrement);\n                        resultTable.columns.push(c);\n                    }\n                }\n            } else {\n                this.resolveTerm(columnNode.term);\n                let c1: Column = new Column(columnNode.alias, columnNode.term.sqlType, resultTable, false, true, null, false);\n                resultTable.columns.push(c1);\n                if (c1.identifier != null) {\n                    selectNode.symbolTable.storeSymbol({\n                        identifier: c1.identifier,\n                        posOfDefinition: columnNode.term.position,\n                        referencedOnPositions: [],\n                        column: c1\n                    })\n                }\n            }\n        }\n\n        // where...\n        if (selectNode.whereNode != null) {\n            let whereType = this.resolveTerm(selectNode.whereNode);\n            if (whereType != null && whereType.getBaseTypeName() != \"boolean\") {\n                this.pushError(\"Das Ergebnis des where-Teils einer select-Anweisung muss vom Typ boolean sein.\", \"error\", selectNode.whereNode.position);\n            }\n        }\n\n\n        // TODO: group by, order by\n\n        return resultTable;\n    }\n\n    resolveDropTable(node: DropTableNode) {\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        if (node.tableIdentifier == null) return;\n\n        if (!node.ifExists) {\n            let table = node.symbolTable.findTable(node.tableIdentifier);\n            if (table == null) this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\n        }\n\n    }\n\n    resolveDelete(node: DeleteNode) {\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        if (node.tableIdentifier == null) return;\n\n        let table = node.symbolTable.findTable(node.tableIdentifier);\n        if (table == null) this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\n\n\n        // if(node.whereNodeBegin != null){\n        //     let symbolTable = this.pushNewSymbolTable(node.whereNodeBegin, node.whereNodeEnd);\n        //     symbolTable.storeTableSymbols(table);\n        // }\n\n\n        if (node.whereNode != null) {\n            let whereSymbolTable = this.pushNewSymbolTable(node.whereNodeBegin, node.whereNodeEnd);\n            if (table != null) whereSymbolTable.storeTableSymbols(table);\n            this.resolveTerm(node.whereNode);\n            this.symbolTableStack.pop();\n        }\n\n\n\n    }\n\n\n    resolveAlterTable(node: AlterTableNode) {\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        if (node.tableIdentifier == null) {\n            return;\n        }\n\n        let table = node.symbolTable.findTable(node.tableIdentifier);\n        if (table == null) {\n            this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\n        }\n\n        let oldColumn: Column = null;\n        if (node.oldColumnName != null) {\n            oldColumn = table.columns.find(c => c.identifier.toLocaleLowerCase() == node.oldColumnName.toLocaleLowerCase());\n            if (oldColumn == null) {\n                this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" hat keine Spalte mit dem Bezeichner \" + node.oldColumnName, \"error\", node.oldColumnPosition);\n            }\n        }\n\n        switch (node.kind) {\n            case \"dropColumn\":\n                // nothing to do as node.oldColumnName is checked above\n                break;\n            case \"addColumn\":\n                let columnNode = node.columnDef;\n                if (columnNode == null) break;\n                if (columnNode.foreignKeyInfo != null && columnNode.baseType != null) {\n                    let fki = columnNode.foreignKeyInfo;\n                    let tables = this.getCurrentSymbolTable().findTables(fki.referencesTable);\n                    if (tables.length == 1) {\n                        let table = tables[0].table;\n                        let column = table.columns.find(c => c.identifier == fki.referencesColumn);\n                        if (column != null && column.type != null) {\n                            if (!column.isPrimaryKey) {\n                                this.pushError(\"Die referenzierte Spalte \" + fki.referencesTable + \".\" + fki.referencesColumn + \" ist kein Primärschlüssel.\", \"warning\", columnNode.referencesPosition);\n                            }\n                            if (!column.type.canCastTo(columnNode.baseType)) {\n                                this.pushError(\"Der Datentyp \" + columnNode.baseType.toString() + \" der Spalte \" + columnNode.identifier +\n                                    \" kann nich in den Datentyp \" + column.type.toString() + \" der referenzierten Spalte \" + table.identifier + \".\" +\n                                    column.identifier + \" umgewandelt werden.\", \"error\", columnNode.referencesPosition);\n                            }\n                        }\n                    }\n                }\n                break;\n            case \"renameColumn\":\n                // nothing to do as node.oldColumnName is checked above\n                break;\n            case \"renameTable\":\n                // nothing to do \n                break;\n            default:\n                break;\n        }\n    }\n\n    resolveUpdate(node: UpdateNode) {\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        if (node.tableIdentifier == null) {\n            return;\n        }\n\n        let table = node.symbolTable.findTable(node.tableIdentifier);\n        if (table == null) this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\n\n        for (let i = 0; i < node.columnIdentifiers.length; i++) {\n            let ci = node.columnIdentifiers[i];\n            let ciPos = node.columnIdentifierPositions[i];\n            let value = node.values[i];\n\n            if (ci == null) continue;\n            let column = table.columns.find(c => c.identifier == ci);\n\n            if (column == null) {\n                this.pushError(ci + \" ist kein Bezeichner einer Spalte der Tabelle \" + node.tableIdentifier + \".\", \"error\", ciPos);\n            }\n\n            if (value == null) continue;\n            let symbolTable = this.pushNewSymbolTable(node.valuePosBegin[i], node.valuePosEnd[i]);\n            symbolTable.storeTableSymbols(table);\n            this.resolveTerm(value);\n            this.symbolTableStack.pop();\n\n        }\n\n        if (node.whereNodeBegin != null) {\n            let symbolTable = this.pushNewSymbolTable(node.whereNodeBegin, node.whereNodeEnd);\n            symbolTable.storeTableSymbols(table);\n        }\n\n        if (node.whereNode != null) {\n            this.resolveTerm(node.whereNode);\n        }\n        this.symbolTableStack.pop();\n\n    }\n\n\n\n    resolveCreateTable(createTableNode: CreateTableNode) {\n\n        createTableNode.symbolTable = this.pushNewSymbolTable(createTableNode.position, createTableNode.endPosition);\n        createTableNode.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        let thisTable: Table = {\n            identifier: createTableNode.identifier,\n            columns: null,\n            size: 0\n        }\n\n        thisTable.columns = createTableNode.columnList.map(c => {\n            return {\n                identifier: c.identifier,\n                isNullable: false,\n                isPrimaryKey: c.isPrimary,\n                isAutoIncrement: c.isAutoIncrement,\n                notNull: false,\n                references: null,\n                table: thisTable,\n                type: c.baseType,\n                defaultValue: c.defaultValue\n            }\n        });\n\n        createTableNode.symbolTable.storeTableSymbols(thisTable);\n\n        for (let columnNode of createTableNode.columnList) {\n            if (createTableNode.columnList.filter(c => c.identifier.toLocaleLowerCase() == columnNode.identifier.toLocaleLowerCase()).length > 1) {\n                this.pushError(\"Der Spaltenbezeichner \" + columnNode.identifier + \" darf in einer Tabelle nur ein einziges Mal verwendet werden\", \"error\", columnNode.position);\n            }\n\n            if (columnNode.foreignKeyInfo != null && columnNode.baseType != null) {\n                let fki = columnNode.foreignKeyInfo;\n                let tables = this.getCurrentSymbolTable().findTables(fki.referencesTable);\n                if (tables.length == 1) {\n                    let table = tables[0].table;\n                    let column = table.columns.find(c => c.identifier == fki.referencesColumn);\n                    if (column != null && column.type != null) {\n                        if (!column.isPrimaryKey) {\n                            this.pushError(\"Die referenzierte Spalte \" + fki.referencesTable + \".\" + fki.referencesColumn + \" ist kein Primärschlüssel.\", \"warning\", columnNode.referencesPosition);\n                        }\n                        if (!column.type.canCastTo(columnNode.baseType)) {\n                            this.pushError(\"Der Datentyp \" + columnNode.baseType.toString() + \" der Spalte \" + columnNode.identifier +\n                                \" kann nich in den Datentyp \" + column.type.toString() + \" der referenzierten Spalte \" + table.identifier + \".\" +\n                                column.identifier + \" umgewandelt werden.\", \"error\", columnNode.referencesPosition);\n                        }\n                    }\n                }\n            }\n\n        }\n\n        for (let fki of createTableNode.foreignKeyInfoList) {\n\n            let columnNode = createTableNode.columnList.find(cn => cn.identifier == fki.column);\n            if (columnNode == null) continue;\n\n            let tables = this.getCurrentSymbolTable().findTables(fki.referencesTable);\n            if (tables.length == 1) {\n                let table = tables[0].table;\n                let column = table.columns.find(c => c.identifier == fki.referencesColumn);\n                if (column != null && column.type != null) {\n                    if (!column.isPrimaryKey) {\n                        this.pushError(\"Die referenzierte Spalte \" + fki.referencesTable + \".\" + fki.referencesColumn + \" ist kein Primärschlüssel.\", \"warning\", fki.referencesPosition);\n                    }\n                    if (!column.type.canCastTo(columnNode.baseType)) {\n                        this.pushError(\"Der Datentyp \" + columnNode.baseType.toString() + \" der Spalte \" + columnNode.identifier +\n                            \" kann nich in den Datentyp \" + column.type.toString() + \" der referenzierten Spalte \" + table.identifier + \".\" +\n                            column.identifier + \" umgewandelt werden.\", \"error\", fki.referencesPosition);\n                    }\n                }\n            }\n\n        }\n\n\n    }\n\n    resolveTableOrSubQuery(tosNode: TableOrSubqueryNode, joinedTables: Table[]) {\n        if (tosNode == null) return;\n\n        switch (tosNode.type) {\n            case TokenType.table:\n                let tableList = this.tables.filter(t => t.identifier.toLowerCase() == tosNode.identifier.toLowerCase());\n                if (tableList.length == 0) {\n                    this.pushError(tosNode.identifier + \" ist nicht der Name einer Tabelle.\", \"error\", tosNode.position);\n                } else if (tableList.length > 1) {\n                    this.pushError(\"Der Bezeichner \" + tosNode.identifier + \" ist hier nicht eindeutig.\", \"error\", tosNode.position);\n                } else {\n                    let table: Table = tableList[0];\n                    joinedTables.push(table);\n                    this.storeTableIntoSymbolTable(table, tosNode.position, tosNode.alias);\n                }\n\n                break;\n\n            case TokenType.keywordJoin:\n                this.resolveTableOrSubQuery(tosNode.firstOperand, joinedTables);\n                this.resolveTableOrSubQuery(tosNode.secondOperand, joinedTables);\n                break;\n\n            case TokenType.subquery:\n                tosNode.table = this.resolveSelect(tosNode.query);\n                joinedTables.push(tosNode.table);\n                if (tosNode.alias != null) {\n                    tosNode.table.identifier = tosNode.alias;\n                    this.storeTableIntoSymbolTable(tosNode.table, tosNode.position);\n                }\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    storeTableIntoSymbolTable(table: Table, position: TextPosition, alias?: string) {\n        let symbolTable = this.getCurrentSymbolTable();\n        symbolTable.storeSymbol({\n            identifier: alias == null ? table.identifier.toLowerCase() : alias.toLowerCase(),\n            posOfDefinition: position,\n            table: table,\n            referencedOnPositions: []\n        });\n        for (let column of table.columns) {\n            symbolTable.storeSymbol({\n                identifier: column.identifier.toLowerCase(),\n                posOfDefinition: null,\n                column: column,\n                tableAlias: alias,\n                referencedOnPositions: []\n            });\n        }\n    }\n\n    resolveTerm(node: TermNode): SQLType {\n        if (node == null) return null;\n\n        switch (node.type) {\n            case TokenType.binaryOp:\n                if ([TokenType.keywordIn, TokenType.keywordNotIn].indexOf(node.operator) >= 0) {\n                    return this.resolveNotIn(node);\n                }\n\n                let typeLeft = this.resolveTerm(node.firstOperand);\n                let typeRight = this.resolveTerm(node.secondOperand);\n                if (typeLeft != null && typeRight != null) {\n                    let resultType = typeLeft.getBinaryResultType(node.operator, typeRight);\n                    if (resultType == null) {\n                        this.pushError(\"Der Operator \" + TokenTypeReadable[node.operator] + \" ist für die Datentypen \" + typeLeft.toString() + \" und \" + typeRight.toString() + \" nicht definiert.\", \"error\", node.position);\n                    }\n                    node.sqlType = resultType;\n                    return resultType;\n                } else {\n                    return null;\n                }\n                break;\n            case TokenType.unaryOp:\n                let operandType = this.resolveTerm(node.operand);\n                if (operandType != null) {\n                    let resultType1 = operandType.getUnaryResultType(node.operator);\n                    if (resultType1 == null) {\n                        this.pushError(\"Der Operator \" + TokenTypeReadable[node.operator] + \" ist für einen Operanden des Datentyps \" + operandType.toString() + \" nicht definiert.\", \"error\", node.position);\n                    }\n                    node.sqlType = resultType1;\n                    return resultType1;\n                } else {\n                    return null;\n                }\n                break;\n            case TokenType.callMethod:\n                return this.resolveMethodCall(node);\n                break;\n            //    ConstantNode | IdentifierNode | DotNode | SelectNode | BracketsNode | StarAttributeNode | SelectNode | ListNode;\n\n            case TokenType.constantNode:\n                node.sqlType = SQLBaseType.fromConstantType(node.constantType);\n                return node.sqlType;\n                break;\n            case TokenType.identifier:\n                return this.resolveIdentifier(node);\n                break;\n            case TokenType.dot:\n                return this.resolveDot(node);\n                break;\n            case TokenType.keywordSelect:\n                let selectTable = this.resolveSelect(node);\n                if (selectTable.columns.length != 1) {\n                    this.pushError(\"Die Ergebnistabelle einer Unterabfrage an dieser Stelle muss genau eine Spalte besitzen.\", \"error\", node.position);\n                    return null;\n                }\n                return selectTable.columns[0].type;\n                break;\n            case TokenType.rightBracket:   // BracketsNode\n                node.sqlType = this.resolveTerm(node.termInsideBrackets);\n                return node.sqlType;\n                break;\n            case TokenType.allColumns:\n                this.pushError(\"Das Zeichen * kann hier nicht verwendet werden.\", \"error\", node.position);\n                break;\n            case TokenType.list:\n                this.pushError(\"Eine Liste wird hier nicht erwartet.\", \"error\", node.position);\n                break;\n            default:\n                break;\n        }\n\n\n\n\n    }\n\n    resolveDot(node: DotNode): SQLType {\n        let tableSymbols = this.getCurrentSymbolTable().findTables(node.identifierLeft.identifier);\n        if (tableSymbols.length == 0) {\n            this.pushError(\"Die Tabelle \" + node.identifierLeft.identifier + \" kann nicht gefunden werden.\", \"error\", node.identifierLeft.position);\n            return null;\n        }\n        if (tableSymbols.length > 1) {\n            this.pushError(\"Der Tabellenbezeichner \" + node.identifierLeft.identifier + \" ist nicht eindeutig.\", \"error\", node.identifierLeft.position);\n            return null;\n        }\n        let table = tableSymbols[0].table;\n\n        let columns = table.columns.filter(c => c.identifier.toLowerCase() == node.identifierRight.identifier.toLowerCase());\n\n        if (columns.length == 0) {\n            this.pushError(\"Die Tabelle \" + node.identifierLeft.identifier + \" hat keine Spalte mit dem Bezeichner \" + node.identifierRight.identifier + \".\", \"error\", node.identifierRight.position);\n            return;\n        }\n\n        if (columns.length > 1) {\n            this.pushError(\"Die Tabelle \" + node.identifierLeft.identifier + \" hat mehrere Spalten mit dem Bezeichner \" + node.identifierRight.identifier + \".\", \"error\", node.identifierRight.position);\n            return;\n        }\n\n        let column = columns[0];\n        node.sqlType = column.type;\n        return column.type;\n\n    }\n\n    resolveIdentifier(node: IdentifierNode): SQLType {\n        let symbols = this.getCurrentSymbolTable().findColumn(node.identifier);\n        if (symbols.length == 0) {\n            this.pushError(\"Der Bezeichner \" + node.identifier + \" ist an dieser Stelle nicht bekannt.\", \"error\", node.position);\n            return null;\n        }\n        if (symbols.length > 1) {\n            this.pushError(\"Der Bezeichner \" + node.identifier + \" ist nicht eindeutig.\", \"error\", node.position);\n            return null;\n        }\n\n        let symbol = symbols[0];\n        node.sqlType = symbol.column.type;\n        return symbol.column.type;\n    }\n\n    resolveMethodCall(node: MethodcallNode): SQLType {\n\n        let methodStore = SQLMethodStore.getInstance();\n        let methods = methodStore.getMethods(node.identifier);\n\n        methods = methods.filter(m => m.parameters.length == node.operands.length);\n        if (node.operands.length == 1 && node.operands[0].type == TokenType.allColumns) {\n            methods = methods.filter(m => m.acceptsStarParameter);\n            node.sqlType = methods[0].returnType;\n            return node.sqlType;\n        }\n\n        if (methods.length == 0) {\n            this.pushError(\"Es gibt keine passende Methode mit dem Bezeichner '\" + node.identifier + \"'.\", \"error\", node.position);\n            return null;\n        }\n\n        for (let operand of node.operands) {\n            if (this.resolveTerm(operand) == null) {\n                node.sqlType = methods[0].returnType;\n                return node.sqlType;\n            }\n        }\n\n        for (let method of methods) {\n            let found = true;\n            for (let i = 0; i < method.parameters.length; i++) {\n                let methodParameter = method.parameters[i];\n                let operand = node.operands[i];\n                if (!operand.sqlType.canCastTo(methodParameter.type)) {\n                    found = false;\n                    break;\n                }\n            }\n            if (found) {\n                node.sqlType = method.returnType;\n                return node.sqlType;\n            }\n        }\n\n        this.pushError(\"Es gibt keine passende Methode mit dem Bezeichner '\" + node.identifier + \"'.\", \"error\", node.position);\n        return null;\n\n    }\n\n    resolveNotIn(node: BinaryOpNode): SQLType {\n\n        if (node.firstOperand == null || node.secondOperand == null) return null;\n\n        let operatorString = TokenTypeReadable[node.operator];\n\n        this.resolveTerm(node.firstOperand);\n        let leftType = node.firstOperand.sqlType;\n        if (leftType != null) {\n            if (node.secondOperand.type == TokenType.keywordSelect) {\n                let selectNode = node.secondOperand;\n                if (selectNode.columnList.length != 1) {\n                    this.pushError(\"Wenn rechts vom Operator '\" + operatorString + \"' eine Unterabfrage steht, muss die Ergebnistabelle dieser Unterabfrage genau eine Spalte haben.\", \"error\", selectNode.position);\n                }\n                this.resolveSelect(selectNode);\n                let pType = selectNode.columnList[0].term.sqlType;\n                if (!pType.canCastTo(leftType)) {\n                    this.pushError(\"Der Datentyp der Ergebnisspalte der Unterabfrage ist \" + pType.toString() + \". Dieser kann nicht in den Datentyp \" + leftType.toString() + \" umgewandelt werden.\", \"error\", selectNode.position);\n                }\n            } else if (node.secondOperand.type == TokenType.list) {\n                let listNode = node.secondOperand;\n                for (let element of listNode.elements) {\n                    let elementType = SQLBaseType.fromConstantType(element.constantType);\n                    element.sqlType = elementType;\n                    if (!elementType.canCastTo(leftType)) {\n                        this.pushError(\"Der Datentyp des Listenelements \" + element.constant + \" ist \" + elementType.toString() + \". Er kann nicht in den Datentype \" + leftType.toString() + \" des Operanden auf der linken Seite des Operators '\" + operatorString + \"' umgewandelt werden.\", \"error\", element.position);\n                    }\n                }\n            } else {\n                this.pushError(\"Der rechte Operand der Operatoren 'in' und 'not in' muss eine Unterabfrage oder eine Liste sein.\", \"error\", node.secondOperand.position);\n            }\n\n        }\n\n        return SQLBaseType.getBaseType(\"boolean\");\n    }\n\n    resolveInsert(astNode: InsertNode) {\n\n        let table: Table = null;\n        let symbolTable = this.pushNewSymbolTable(astNode.position, astNode.endPosition);\n        if (astNode.table != null) {\n            astNode.table.table = this.tables.find(t => t.identifier.toLowerCase() == astNode.table.identifier.toLocaleLowerCase());\n            if (astNode.table.table == null) {\n                this.pushError(\"Die Tabelle \" + astNode.table.identifier + \" gibt es nicht.\", \"error\", astNode.table.position);\n            } else {\n                table = astNode.table.table;\n                symbolTable.storeTableSymbols(table);\n            }\n        }\n\n        let tableCompletionTo = astNode.endPosition;\n        if (astNode.valuesPosition != null) tableCompletionTo = astNode.valuesPosition;\n        if (astNode.columnsPosition != null) tableCompletionTo = astNode.columnsPosition;\n\n        this.module.addCompletionHint(astNode.position, tableCompletionTo, false, true, [\"into\", \"values\"]);\n\n        if (table != null) {\n            this.module.addCompletionHint(tableCompletionTo, astNode.valuesPosition == null ? astNode.endPosition : astNode.valuesPosition, true, false, [\"values\"]);\n        }\n\n        let tableSymbolTable = this.pushNewSymbolTable(astNode.position, tableCompletionTo);\n        tableSymbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        let columns: Column[] = [];\n        // Parse column list\n        if (astNode.columnList.length == 0) {\n            if (table != null) {\n                columns = table.columns;\n            }\n        } else {\n            if (table != null) {\n                for (let columnNode of astNode.columnList) {\n                    let column = table.columns.find(c => c.identifier.toLowerCase() == columnNode.identifier.toLowerCase());\n                    if (column == null) {\n                        this.pushError(\"Die Tabelle \" + table.identifier + \" besitzt keine Spalte mit dem Bezeichner \" + columnNode.identifier + \".\", \"error\", columnNode.position);\n                    } else {\n                        columns.push(column);\n                    }\n                }\n            }\n        }\n\n        if (columns.length > 0) {\n            if (astNode.select != null) {\n                let table = this.resolveSelect(astNode.select);\n                if(table?.columns != null){\n                    if(columns.length != table.columns.length){\n                        this.pushError(\"Die insert-Anweisung erwartet \" + columns.length + \" Werte je Datensatz, die select-Anweisung liefert aber \" + table.columns.length + \".\", \"error\", astNode.position);\n                    } else {\n                        for(let i = 0; i < columns.length; i++){\n                            let insertColumn = columns[i];\n                            let selectColumn = table.columns[i];\n                            if(insertColumn.type != null && selectColumn.type != null){\n                                if(!selectColumn.type.canCastTo(insertColumn.type)){\n                                    this.pushError(\"Der Datentyp \" + selectColumn.type.toString() + \" der \" \n                                    + (i+1) + \"-ten Spalte des select-Terms kann nicht in den Datentyp \" + \n                                    insertColumn.type.toString() + \" der entsprechenden Spalte der insert-Anweisung umgewandelt werden.\", \"error\", astNode.position );\n                                }\n                            }\n                        }\n                    }\n                }\n\n\n            } else {\n                // Parse value lists\n                for (let valueList of astNode.values) {\n                    if (valueList.length != columns.length && valueList.length > 0) {\n                        this.pushError(\"Erwartet werden \" + columns.length + \" Elemente, hier stehen aber \" + valueList.length + \" Elemente in der Liste.\", \"error\", valueList[0].position);\n                    } else {\n                        for (let i = 0; i < valueList.length; i++) {\n                            let value = valueList[i];\n                            let column = columns[i];\n                            value.sqlType = SQLBaseType.fromConstantType(value.constantType);\n                            // constantType == 40 means: null\n                            // TODO: check if column is nullable!\n                            let destType = column.type.toString().toLocaleLowerCase();\n                            if (value.constantType == TokenType.keywordNull) {\n                                if (!column.isNullable || column.notNull) {\n                                    this.pushError(\"Die Spalte \" + column.identifier + \" ist nicht nullable, daher kann null hier nicht eingefügt werden.\", \"error\", value.position);\n                                }\n                            } else if (!value.sqlType.canCastTo(column.type)) {\n                                let error: string = \"Der Wert \" + value.constant + \" vom Datentyp \" + value.sqlType.toString() + \" kann nicht in den Datentyp \" + column.type.toString() + \" der Spalte \" + column.identifier + \" umgewandelt werden.\";\n\n                                if (destType == \"date\") error += \"<br><b>Tipp: </b>Datumswerte haben die Form 'yyyy-mm-dd', also z.B. '2022-06-15'.\";\n                                if (destType == \"datetime\" || destType == \"timestamp\") error += \"<br><b>Tipp: </b>Timestamps haben die Form 'yyyy-mm-dd hh:min:ss', also z.B. '2022-06-15 07:56:22'.\";\n\n                                this.pushError(error, \"error\", value.position);\n                            } else if (destType == \"date\") {\n                                if (!isDate(value.constant)) {\n                                    let error: string = `'${value.constant}' ist kein date-Wert.<br><b>Tipp: </b>Datumswerte haben die Form 'yyyy-mm-dd', also z.B. '2022-06-15'.`;\n                                    this.pushError(error, \"error\", value.position);\n                                }\n                            } else if (destType == \"datetime\" || destType == \"timestamp\") {\n                                if (!isDateTime(value.constant)) {\n                                    let error: string = `'${value.constant}' ist kein ${destType}-Wert.<br><b>Tipp: </b>Timestamps haben die Form 'yyyy-mm-dd hh:min:ss', also z.B. '2022-06-15 07:56:22'.`;\n                                    this.pushError(error, \"error\", value.position);\n                                }\n                            } else if (destType == \"time\") {\n                                if (!isTime(value.constant)) {\n                                    let error: string = `'${value.constant}' ist kein ${destType}-Wert.<br><b>Tipp: </b>Time-Werte haben die Form 'hh:min:ss', also z.B. '07:56:22'.`;\n                                    this.pushError(error, \"error\", value.position);\n                                }\n                            }\n                        }\n                    }\n                }\n\n            }\n        }\n\n        this.symbolTableStack.pop();\n\n    }\n\n\n\n}\n\n","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { SymbolResolver } from \"./parser/SymbolResolver.js\";\r\n\r\nexport enum CompilerStatus {\r\n    compiling, error, compiledButNothingToRun, readyToRun\r\n}\r\n\r\nexport class Compiler {\r\n\r\n    compilerStatus: CompilerStatus = CompilerStatus.compiledButNothingToRun;\r\n\r\n    atLeastOneModuleIsStartable: boolean;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    compile(moduleStore: ModuleStore): Error[] {\r\n\r\n        this.compilerStatus = CompilerStatus.compiling;\r\n\r\n        let t0 = performance.now();\r\n\r\n        let lexer = new Lexer();\r\n\r\n        // 1st pass: lexing\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.file.dirty = false;\r\n            m.clear();\r\n\r\n            let lexed = lexer.lex(m.getProgramTextFromMonacoModel());\r\n            m.errors[0] = lexed.errors;\r\n            m.tokenList = lexed.tokens;\r\n            m.bracketError = lexed.bracketError;\r\n            if(m.file.name == this.main.getCurrentlyEditedModule().file.name){\r\n                if(this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(lexed.bracketError);\r\n            }\r\n        }\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        this.main.getSemicolonAngel().startRegistering();\r\n\r\n        let parser: Parser = new Parser();\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            parser.parse(m);\r\n        }\r\n        \r\n        // 3rd pass: check symbols and types\r\n        let databaseTool = this.main.getDatabaseTool();\r\n        let symbolResolver: SymbolResolver = new SymbolResolver(databaseTool);\r\n\r\n        for(let m of moduleStore.getModules(false)){\r\n            symbolResolver.start(m);\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        let message = \"Compiled in \" + dt + \" ms.\";\r\n\r\n        this.main.getCurrentWorkspace().compilerMessage = message;\r\n\r\n        this.main.getSemicolonAngel().healSemicolons();\r\n\r\n        this.compilerStatus = CompilerStatus.readyToRun;\r\n\r\n        return null;\r\n    }\r\n\r\n}","import { FileData } from \"../../communication/Data.js\";\r\nimport { AccordionElement } from \"../../main/gui/Accordion.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenType, TextPositionWithoutLength } from \"../lexer/Token.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { ASTNode } from \"./AST.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\nimport { stringToDate } from \"../../tools/StringTools.js\";\r\nimport { SQLStatement } from \"./Parser.js\";\r\n\r\n\r\nexport type CompletionHint = {\r\n    fromLine: number,\r\n    fromColumn: number,\r\n    toLine: number, \r\n    toColumn: number,\r\n    hintColumns: boolean,\r\n    hintColumnsOfTable?: string,\r\n    hintTables: boolean,\r\n    hintKeywords: string[],\r\n    dontHint?: string[],\r\n    praefix?: string,\r\n    suffix?: string\r\n}\r\n\r\nexport type File = {\r\n    name: string,\r\n    id?: number,\r\n    text: string,\r\n\r\n    text_before_revision: string,\r\n    submitted_date: string,\r\n    student_edited_after_revision: boolean,\r\n\r\n    dirty: boolean,\r\n    saved: boolean,\r\n    version: number,\r\n    panelElement?: AccordionElement\r\n\r\n}\r\n\r\nexport type IdentifierPosition = {\r\n    position: TextPosition,\r\n    element: any;\r\n}\r\n\r\nexport type MethodCallPosition = {\r\n    identifierPosition: TextPosition,\r\n    possibleMethods: any[] | string, // string for print, println, ...\r\n    commaPositions: TextPosition[],\r\n    rightBracketPosition: TextPosition\r\n}\r\n\r\nexport class Module {\r\n    file: File;\r\n    static maxUriNumber: number = 0;\r\n    uri: monaco.Uri;\r\n    model: monaco.editor.ITextModel;\r\n    oldErrorDecorations: string[] = [];\r\n    lastSavedVersionId: number;\r\n    editorState: monaco.editor.ICodeEditorViewState;\r\n\r\n    errors: Error[][] = [[], [], [], []]; // 1st pass, 2nd pass, 3rd pass\r\n\r\n    // 1st pass: Lexer\r\n    tokenList: Token[];\r\n\r\n    // 2nd pass: ASTParser\r\n    sqlStatements: SQLStatement[];\r\n    mainSymbolTable: SymbolTable;\r\n\r\n\r\n    identifierPositions: { [line: number]: IdentifierPosition[] } = {};\r\n    methodCallPositions: { [line: number]: MethodCallPosition[] } = {};\r\n\r\n    static uriMap: { [name: string]: number } = {};\r\n    bracketError: string;\r\n\r\n    completionHints: Map<number, CompletionHint[]> = new Map(); // Map from line numbers to hints\r\n\r\n    constructor(file: File, public main: MainBase) {\r\n        if (file == null || this.main == null) return; // used by AdhocCompiler and ApiDoc\r\n\r\n        this.file = file;\r\n        // this.uri = monaco.Uri.from({ path: '/file' + (Module.maxUriNumber++) + '.learnJava', scheme: 'file' });\r\n        let path = file.name;\r\n\r\n        let uriCounter = Module.uriMap[path];\r\n        if (uriCounter == null) {\r\n            uriCounter = 0;\r\n        } else {\r\n            uriCounter++;\r\n        }\r\n        Module.uriMap[path] = uriCounter;\r\n\r\n        if (uriCounter > 0) path += \" (\" + uriCounter + \")\";\r\n        this.uri = monaco.Uri.from({ path: path, scheme: 'inmemory' });\r\n        this.model = monaco.editor.createModel(file.text, \"vscSQL\", this.uri);\r\n        this.model.updateOptions({ tabSize: 3 });\r\n\r\n        this.lastSavedVersionId = this.model.getAlternativeVersionId();\r\n\r\n        let that = this;\r\n\r\n        this.model.onDidChangeContent(() => {\r\n            let versionId = that.model.getAlternativeVersionId();\r\n\r\n            if (versionId != that.lastSavedVersionId) {\r\n                that.file.dirty = true;\r\n                that.file.saved = false;\r\n                that.lastSavedVersionId = versionId;\r\n            }\r\n\r\n            if(!that.main.isEmbedded()){\r\n                let main1: Main = <Main>main;\r\n                if (main1.workspacesOwnerId != main1.user.id) {\r\n                    if (that.file.text_before_revision == null || that.file.student_edited_after_revision) {\r\n                        that.file.student_edited_after_revision = false;\r\n                        that.file.text_before_revision = that.file.text;\r\n                        that.file.saved = false;\r\n                        main1.networkManager.sendUpdates(null, false);\r\n                        main1.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n                        main1.projectExplorer.renderHomeworkButton(that.file);\r\n                    }\r\n                } else {\r\n                    that.file.student_edited_after_revision = true;\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    addCompletionHint(fromPosition: TextPosition, toPosition: TextPosition, hintColumns: boolean|string, hintTables: boolean, \r\n        hintKeywords: string[], dontHint?: string[], praefix: string = \"\", suffix: string = \"\"){\r\n        let ch: CompletionHint = {\r\n            fromColumn: fromPosition.column,\r\n            fromLine: fromPosition.line,\r\n            toColumn: toPosition.column,\r\n            toLine: toPosition.line,\r\n            hintColumns: (typeof hintColumns == \"boolean\")? hintColumns : true, \r\n            hintColumnsOfTable: (typeof hintColumns == \"string\")? hintColumns : null,\r\n            hintTables: hintTables,\r\n            hintKeywords: hintKeywords == null ? null : hintKeywords.map(s => s.toUpperCase()),\r\n            dontHint: dontHint,\r\n            praefix: praefix,\r\n            suffix: suffix\r\n        }\r\n\r\n        for(let i = ch.fromLine; i <= ch.toLine; i++){\r\n            let chList = this.completionHints.get(i);\r\n            if(chList == null){\r\n                chList = [];\r\n                this.completionHints.set(i, chList);\r\n            }\r\n            chList.push(ch);\r\n        }\r\n    }\r\n\r\n    getSQLSTatementsAtSelection(sel: monaco.Selection): SQLStatement[] {\r\n        let selStart = {line: sel.startLineNumber, column: sel.startColumn};\r\n        let selEnd = {line: sel.endLineNumber, column: sel.endColumn};\r\n\r\n        if(this.sqlStatements == null){\r\n            return [];\r\n        }\r\n\r\n        return this.sqlStatements.filter(stmt => {\r\n            return !(this.compare(stmt.to, selStart) < 0 || this.compare(stmt.from, selEnd) > 0);\r\n        })\r\n\r\n    }\r\n\r\n    /**\r\n     * returns 1 if a > b, 0 if a == b and -1 if a < b\r\n     * @param a \r\n     * @param b \r\n     */\r\n    compare(a: {line: number, column: number}, b: {line: number, column: number}): number{\r\n        if(a.line > b.line) return 1;\r\n        if(a.line < b.line) return -1;\r\n        if(a.column > b.column) return 1;\r\n        if(a.column < b.column) return -1;\r\n        return 0;\r\n    }\r\n\r\n\r\n\r\n    getSQLStatementAtPosition(p: { lineNumber: number, column: number }): SQLStatement {\r\n\r\n        return this.sqlStatements.find(statement => {\r\n            if(statement.from.line > p.lineNumber ) return false;\r\n            if(statement.from.line == p.lineNumber && statement.from.column > p.column) return false;\r\n            if(statement.to.line < p.lineNumber) return false;\r\n            if(statement.to.line == p.lineNumber && statement.to.column < p.column) return false;\r\n            return true;\r\n        });        \r\n\r\n    }\r\n\r\n\r\n    getCompletionHint(line: number, column: number){\r\n        let chList = this.completionHints.get(line);\r\n        \r\n        if(chList == null || chList.length == 0){\r\n            return null;\r\n        }\r\n\r\n        let pos = line * 1000 + column;\r\n        chList = chList.filter(ch => pos >= ch.fromLine * 1000 + ch.fromColumn && pos <= ch.toLine * 1000 + ch.toColumn);\r\n        if(chList.length == 0){\r\n            return;\r\n        }\r\n\r\n        // take CompletionHint with smallest range:\r\n        let bestCh: CompletionHint = chList[0];\r\n        let bestRangeLength  = (bestCh.toLine - bestCh.fromLine)*1000 + (bestCh.toColumn - bestCh.fromColumn);\r\n\r\n        for(let i = 1; i < chList.length; i++){\r\n            let ch = chList[i];\r\n            let rangeLength = (ch.toLine - ch.fromLine) * 1000 + (ch.toColumn - ch.fromColumn);\r\n\r\n            if(rangeLength < bestRangeLength){\r\n                bestCh = ch;\r\n                bestRangeLength = rangeLength;\r\n            }\r\n\r\n        }\r\n\r\n        return bestCh;\r\n    }\r\n\r\n\r\n    static restoreFromData(f: FileData, main: MainBase): Module {\r\n\r\n        let f1: File = {\r\n            name: f.name,\r\n            text: f.text,\r\n            text_before_revision: f.text_before_revision,\r\n            submitted_date: f.submitted_date,\r\n            student_edited_after_revision: false,\r\n            dirty: true,\r\n            saved: true,\r\n            version: f.version,\r\n            id: f.id\r\n        }\r\n\r\n        let m: Module = new Module(f1, main);\r\n\r\n        return m;\r\n\r\n    }\r\n\r\n    getFileData(workspace: Workspace): FileData {\r\n        let file = this.file;\r\n        let fd: FileData = {\r\n            id: file.id,\r\n            name: file.name,\r\n            text: file.text,\r\n            text_before_revision: file.text_before_revision,\r\n            submitted_date: file.submitted_date,\r\n            student_edited_after_revision: file.student_edited_after_revision,\r\n            version: file.version,\r\n            workspace_id: workspace.id,\r\n            forceUpdate: false,\r\n            file_type: 11\r\n        }\r\n\r\n        return fd;\r\n    }\r\n\r\n\r\n    findSymbolTableAtPosition(line: number, column: number) {\r\n        if (this.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (line > this.mainSymbolTable.positionTo.line ||\r\n            line == this.mainSymbolTable.positionTo.line && column > this.mainSymbolTable.positionTo.column\r\n        ) {\r\n            line = this.mainSymbolTable.positionTo.line;\r\n            column = this.mainSymbolTable.positionTo.column - 1;\r\n        }\r\n\r\n        return this.mainSymbolTable.findTableAtPosition(line, column);\r\n    }\r\n\r\n    getErrorCount(): number {\r\n\r\n        let ec = 0;\r\n        for (let el of this.errors) {\r\n            el.forEach(error => ec += error.level == \"error\" ? 1 : 0);\r\n            // ec += el.length;\r\n        }\r\n\r\n        return ec;\r\n    }\r\n\r\n    getProgramTextFromMonacoModel(): string {\r\n        return this.model.getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n    }\r\n\r\n\r\n    addIdentifierPosition(position: TextPosition, element: any) {\r\n        let positionList: IdentifierPosition[] = this.identifierPositions[position.line];\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            this.identifierPositions[position.line] = positionList;\r\n        }\r\n        positionList.push({\r\n            position: position,\r\n            element: element\r\n        });\r\n    }\r\n\r\n    getElementAtPosition(line: number, column: number): any {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let bestFoundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column < p.position.column + p.position.length) {\r\n\r\n                if (p.position.length > 0) {\r\n                    if (bestFoundPosition == null) {\r\n                        bestFoundPosition = p;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bestFoundPosition == null ? null : <any>bestFoundPosition.element;\r\n    }\r\n\r\n    copy(): Module {\r\n        let m = new Module(this.file, this.main);\r\n        m.model = this.model;\r\n        m.mainSymbolTable = this.mainSymbolTable;\r\n        this.mainSymbolTable = null;\r\n\r\n        this.file.dirty = true;\r\n\r\n        return m;\r\n    }\r\n\r\n    clear() {\r\n\r\n        this.identifierPositions = {};\r\n\r\n        if (this.file != null && this.file.dirty) {\r\n            // Lexer\r\n            this.tokenList = null;\r\n            this.errors[0] = [];\r\n\r\n            // AST Parser\r\n            this.errors[1] = [];\r\n\r\n\r\n        }\r\n\r\n        // type resolver\r\n        this.errors[2] = [];\r\n\r\n        // Code generator\r\n        this.errors[3] = [];\r\n        this.mainSymbolTable = new SymbolTable(null, { line: 1, column: 1, length: 1 }, { line: 100000, column: 1, length: 0 });\r\n\r\n        this.methodCallPositions = {};\r\n\r\n    }\r\n\r\n    hasErrors() {\r\n\r\n        for (let el of this.errors) {\r\n            if (el.find(error => error.level == \"error\")) {\r\n                return true;\r\n            }\r\n            // if (el.length > 0) {\r\n            //     return true;\r\n            // }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getSortedAndFilteredErrors(): Error[] {\r\n\r\n        let list: Error[] = [];\r\n\r\n        for (let el of this.errors) {\r\n            list = list.concat(el);\r\n        }\r\n\r\n        list.sort((a, b) => {\r\n            if (a.position.line > b.position.line) {\r\n                return 1;\r\n            }\r\n            if (b.position.line > a.position.line) {\r\n                return -1;\r\n            }\r\n            if (a.position.column >= b.position.column) {\r\n                return 1;\r\n            }\r\n            return -1;\r\n        });\r\n\r\n        for (let i = 0; i < list.length - 1; i++) {\r\n            let e1 = list[i];\r\n            let e2 = list[i + 1];\r\n            if (e1.position.line == e2.position.line && e1.position.column + 10 > e2.position.column) {\r\n                if (this.errorLevelCompare(e1.level, e2.level) == 1) {\r\n                    list.splice(i + 1, 1);\r\n                } else {\r\n                    list.splice(i, 1);\r\n                }\r\n                i--;\r\n            }\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    errorLevelCompare(level1: ErrorLevel, level2: ErrorLevel): number {\r\n        if (level1 == \"error\") return 1;\r\n        if (level2 == \"error\") return 2;\r\n        if (level1 == \"warning\") return 1;\r\n        if (level2 == \"warning\") return 2;\r\n        return 1;\r\n    }\r\n}\r\n\r\n\r\nexport class ModuleStore {\r\n\r\n    private modules: Module[] = [];\r\n    private moduleMap: Map<string, Module> = new Map();\r\n\r\n    dirty: boolean = false;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    findModuleById(module_id: number): Module {\r\n        for (let module of this.modules) {\r\n            if (module.file.id == module_id) return module;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    copy(): ModuleStore {\r\n        let ms: ModuleStore = new ModuleStore(this.main);\r\n        for (let m of this.modules) {\r\n            ms.putModule(m.copy());\r\n        }\r\n        return ms;\r\n    }\r\n\r\n    findModuleByFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                return m;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        for (let m of this.modules) {\r\n            if (m.hasErrors()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getFirstModule(): Module {\r\n        if (this.modules.length > 0) {\r\n            for (let mo of this.modules) {\r\n                return mo;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    isDirty(): boolean {\r\n\r\n        if (this.dirty) {\r\n            this.dirty = false;\r\n            return true;\r\n        }\r\n\r\n        let dirty = false;\r\n        for (let m of this.modules) {\r\n            if (m.file.dirty) {\r\n                dirty = true;\r\n                break;\r\n            }\r\n        }\r\n        return dirty;\r\n    }\r\n\r\n\r\n    getModules(includeSystemModules: boolean, excludedModuleName?: String): Module[] {\r\n        let ret = [];\r\n        for (let m of this.modules) {\r\n            if (m.file.name != excludedModuleName) {\r\n                ret.push(m);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    putModule(module: Module) {\r\n        this.modules.push(module);\r\n        this.moduleMap[module.file.name] = module;\r\n    }\r\n\r\n    removeModuleWithFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                this.removeModule(m);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n\r\n        if (this.modules.indexOf(module) < 0) return;\r\n\r\n        this.modules.splice(this.modules.indexOf(module), 1);\r\n        this.moduleMap[module.file.name] = undefined;\r\n        this.dirty = true;\r\n    }\r\n\r\n    getModule(moduleName: string): Module {\r\n        return this.moduleMap[moduleName];\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type ButtonToggler = (state: boolean) => void;\r\n\r\nexport type Action = (name: string, buttonToggler?: ButtonToggler, pressed_key?: string) => void;\r\n\r\nexport type ActionEntry = {\r\n    text?: string,\r\n    keys: string[],\r\n    action: Action,\r\n    identifier: string, // name of Action is copied automatically to name of ActionEntry\r\n    active: boolean\r\n}\r\n\r\nexport class ActionManager {\r\n\r\n    actions: { [actionIdentifier: string]: ActionEntry } = { };\r\n\r\n    keyEntries: { [key: string]: ActionEntry[] } = {};\r\n\r\n    buttons: { [actionIdentifier: string]: JQuery<HTMLElement>[] } = {};\r\n\r\n    constructor(private $mainElement: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public init(){\r\n\r\n        let $element:JQuery<any> = this.$mainElement;\r\n        \r\n        if($element == null) $element = jQuery(document);\r\n\r\n        let that = this;\r\n        $element.on(\"keydown\", function (event: JQuery.KeyDownEvent) { \r\n            if(event != null){\r\n                that.executeKeyDownEvent(event); \r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    trigger(actionIdentifier: string) {\r\n        let ae = this.actions[actionIdentifier];\r\n        if(ae != null){\r\n            ae.action(actionIdentifier, null, \"\");\r\n        }\r\n    }\r\n\r\n\r\n    public registerAction(identifier: string, keys: string[], action: Action, text: string = \"\", button?: JQuery<HTMLElement>){\r\n        let ae: ActionEntry = {\r\n            action: action,\r\n            identifier: identifier,\r\n            keys: keys,\r\n            text: text,\r\n            active: true\r\n        };\r\n\r\n        this.actions[identifier] = ae;\r\n\r\n        for(let key of keys){\r\n            if(this.keyEntries[key.toLowerCase()] == null){\r\n                this.keyEntries[key.toLowerCase()] = [];\r\n            }\r\n            this.keyEntries[key.toLowerCase()].push(ae);\r\n        }\r\n\r\n        if(button != null){\r\n            if(this.buttons[identifier] == null){\r\n                this.buttons[identifier] = [];\r\n            }\r\n            this.buttons[identifier].push(button);\r\n\r\n            let t = text;\r\n            if(keys.length > 0){\r\n                t += \" [\" + keys.join(\", \") + \"]\";\r\n            }\r\n\r\n            button.attr(\"title\", t);\r\n\r\n            button.on('mousedown', () => {\r\n                if(ae.active){\r\n                    action(identifier, null, \"mousedown\");\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public isActive(actionIdentifier: string): boolean {\r\n\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae == null) return false;\r\n\r\n        return ae.active;\r\n    \r\n    }\r\n\r\n    public setActive(actionIdentifier: string, active: boolean){\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae != null){\r\n            ae.active = active;\r\n        }\r\n\r\n        let buttons = this.buttons[actionIdentifier];\r\n        if(buttons != null){\r\n            for(let button of buttons){\r\n                if(active){\r\n                    button.addClass('jo_active');\r\n                } else {\r\n                    button.removeClass('jo_active');\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public executeKeyDownEvent(event: JQuery.KeyDownEvent) {\r\n\r\n        if(document.activeElement.tagName.toLowerCase() == \"input\"){\r\n            return;\r\n        }\r\n\r\n        if (event.keyCode <= 18 && event.keyCode >= 16) {\r\n            return; // ctrl, alt, shift\r\n        }\r\n\r\n        let key: string = \"\";\r\n\r\n        if (event.ctrlKey) {\r\n            key += \"ctrl+\";\r\n        }\r\n\r\n        if (event.shiftKey) {\r\n            key += \"shift+\";\r\n        }\r\n\r\n        if (event.altKey) {\r\n            key += \"alt+\";\r\n        }\r\n\r\n        if(event.key != null){\r\n            key += event.key.toLowerCase();\r\n        }\r\n\r\n        let actionEntries = this.keyEntries[key];\r\n\r\n        if(actionEntries != null){\r\n            for(let actionEntry of actionEntries){\r\n                if (actionEntry.active) {\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    actionEntry.action(actionEntry.identifier, null, key);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { escapeHtml } from \"./StringTools.js\";\r\n\r\nexport function makeEditable(elementWithText: JQuery<HTMLElement>,\r\n    elementToReplace: JQuery<HTMLElement>,\r\n    renameDoneCallback: (newContent: string) => void, selectionRange: { start: number, end: number } = null) {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    if (elementToReplace == null) {\r\n        elementToReplace = elementWithText;\r\n    }\r\n\r\n    let $input = jQuery('<input type=\"text\" class=\"jo_inplaceeditor\" spellcheck=\"false\">');\r\n    $input.css({\r\n        width: elementToReplace.css('width'),\r\n        height: elementToReplace.css('height'),\r\n        color: elementToReplace.css('color'),\r\n        position: elementToReplace.css('position'),\r\n        \"background-color\": elementToReplace.css('background-color'),\r\n        \"font-size\": elementToReplace.css('font-size'),\r\n        \"font-weight\": elementToReplace.css('font-weight'),\r\n        \"box-sizing\": \"border-box\"\r\n    });\r\n    $input.val(elementWithText.text());\r\n    $input.on(mousePointer + \"down\", (e) => { e.stopPropagation(); })\r\n\r\n    if (selectionRange != null) {\r\n        (<HTMLInputElement>$input[0]).setSelectionRange(selectionRange.start, selectionRange.end);\r\n    }\r\n\r\n    elementToReplace.after($input);\r\n    elementToReplace.hide();\r\n    setTimeout(() => {\r\n        $input.focus();\r\n    }, 300);\r\n\r\n    $input.on(\"keydown.me\", (ev) => {\r\n        if (ev.key == \"Enter\" || ev.key == \"Escape\") {\r\n            $input.off(\"keydown.me\");\r\n            $input.off(\"focusout.me\");\r\n            $input.remove();\r\n            elementToReplace.show();\r\n            let newValue = escapeHtml(<string>$input.val());\r\n            renameDoneCallback(newValue);\r\n            return;\r\n        }\r\n    });\r\n\r\n    $input.on(\"focusout.me\", (ev) => {\r\n        $input.off(\"keydown.me\");\r\n        $input.off(\"focusout.me\");\r\n        $input.remove();\r\n        elementToReplace.show();\r\n        let newValue = escapeHtml(<string>$input.val());\r\n        renameDoneCallback(newValue);\r\n        return;\r\n    });\r\n\r\n}\r\n\r\nexport type ContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: () => void;\r\n    link?: string;\r\n    subMenu?: ContextMenuItem[]\r\n};\r\n\r\nexport function openContextMenu(items: ContextMenuItem[], x: number, y: number): JQuery<HTMLElement> {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    let $contextMenu = jQuery('<div class=\"jo_contextmenu\"></div>');\r\n\r\n    let $openSubMenu: JQuery<HTMLElement> = null;\r\n    let parentMenuItem: ContextMenuItem = null;\r\n\r\n    for (let mi of items) {\r\n        let caption: string = mi.caption;\r\n        if (mi.link != null) {\r\n            caption = `<a href=\"${mi.link}\" target=\"_blank\" class=\"jo_menulink\">${mi.caption}</a>`;\r\n        }\r\n        let $item = jQuery('<div>' + caption + (mi.subMenu != null ? '<span style=\"float: right\"> &nbsp; &nbsp; &gt;</span>' : \"\") + '</div>');\r\n        if (mi.color != null) {\r\n            $item.css('color', mi.color);\r\n        }\r\n        if (mi.link == null) {\r\n            $item.on(mousePointer + 'up.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n                jQuery('.jo_contextmenu').remove();\r\n                jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n                jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n                jQuery(document).off(\"keydown.contextmenu\");\r\n                mi.callback();\r\n            });\r\n            $item.on(mousePointer + 'down.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n            });\r\n        } else {\r\n            let $link = $item.find('a');\r\n            $link.on(mousePointer + \"up\", (event) => {\r\n                event.stopPropagation();\r\n                setTimeout(() => {\r\n                    $item.hide();\r\n                }, 500);\r\n            })\r\n            $link.on(mousePointer + \"down\", (event) => {\r\n                event.stopPropagation();\r\n            })\r\n\r\n        }\r\n\r\n        $item.on(mousePointer + 'move.contextmenu', () => {\r\n            if (mi != parentMenuItem && $openSubMenu != null) {\r\n                $openSubMenu.remove();\r\n                parentMenuItem = null;\r\n                $openSubMenu = null;\r\n            }\r\n            if (mi.subMenu != null) {\r\n                $openSubMenu = openContextMenu(mi.subMenu, $item.offset().left + $item.width(), $item.offset().top);\r\n            }\r\n        });\r\n\r\n        $contextMenu.append($item);\r\n    }\r\n\r\n    jQuery(document).on(mousePointer + \"down.contextmenu\", (e) => {\r\n        jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n        jQuery(document).off(\"keydown.contextmenu\");\r\n        jQuery('.jo_contextmenu').remove();\r\n    })\r\n\r\n    jQuery(document).on(\"keydown.contextmenu\", (ev) => {\r\n        if (ev.key == \"Escape\") {\r\n            jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n            jQuery(document).off(\"keydown.contextmenu\");\r\n            jQuery('.jo_contextmenu').remove();\r\n        }\r\n    });\r\n\r\n    let leftRight = x > window.innerWidth * 0.8 ? \"right\" : \"left\";\r\n    let xp = x > window.innerWidth * 0.8 ? window.innerWidth - x : x;\r\n    let topBottom = y > window.innerHeight * 0.8 ? \"bottom\" : \"top\";\r\n    let yp = y > window.innerHeight * 0.8 ? window.innerHeight - y : y;\r\n\r\n    let css = {};\r\n    css[leftRight] = xp + \"px\";\r\n    css[topBottom] = yp + \"px\";\r\n\r\n    $contextMenu.css(css);\r\n\r\n\r\n    jQuery(\"body\").append($contextMenu);\r\n    $contextMenu.show();\r\n\r\n    return $contextMenu;\r\n}\r\n\r\nexport function makeTabs(tabDiv: JQuery<HTMLElement>) {\r\n    let headings = tabDiv.find('.jo_tabheadings>div').not('.jo_noHeading');\r\n    let tabs = tabDiv.find('.jo_tabs>div');\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    headings.on(mousePointer + \"down\", (ev) => {\r\n        let target = jQuery(ev.target);\r\n        headings.removeClass('jo_active');\r\n        target.addClass('jo_active');\r\n        let tab = tabDiv.find('.' + target.data('target'));\r\n        tabs.removeClass('jo_active');\r\n        tabs.trigger('myhide');\r\n        tab.addClass('jo_active');\r\n        tab.trigger('myshow');\r\n    });\r\n\r\n}\r\n\r\nexport function convertPxToNumber(pxString: string): number {\r\n    pxString = pxString.replace('px', '').trim();\r\n    return Number.parseInt(pxString);\r\n}\r\n\r\nexport function makeDiv(id: string, klass: string = \"\", text: string = \"\", css?: { [id: string]: any }): JQuery<HTMLDivElement> {\r\n\r\n    let s = \"\";\r\n    if (id != null && id != \"\") s += ` id=\"${id}\"`;\r\n\r\n    if (klass != null && klass != \"\") s += ` class=\"${klass}\"`;\r\n\r\n    let div = jQuery(`<div${s}></div>`);\r\n\r\n    if (css != null) {\r\n        div.css(css);\r\n    }\r\n\r\n    if (text != null && text != \"\") {\r\n        div.text(text);\r\n    }\r\n\r\n    return <any>div;\r\n\r\n}\r\n\r\nexport type SelectItem = {\r\n    value: string | number,\r\n    object: any,\r\n    caption: string\r\n}\r\n\r\nexport function setSelectItems($selectElement: JQuery<HTMLSelectElement>, items: SelectItem[], activeItemValue?: string | number) {\r\n    $selectElement.empty();\r\n    items.forEach(item => {\r\n        let selected: string = (item.value == activeItemValue) ? ' selected=\"selected\"' : \"\";\r\n        let element = jQuery(`<option value=${item.value}${selected}>${item.caption}</option>`);\r\n        $selectElement.append(element);\r\n        element.data('object', item.object);\r\n    }\r\n    );\r\n\r\n    $selectElement.data('items', items);\r\n\r\n\r\n}\r\n\r\nexport function getSelectedObject($selectDiv: JQuery<HTMLSelectElement>) {\r\n\r\n    let items: SelectItem[] = $selectDiv.data('items');\r\n\r\n    let selectedValue = $selectDiv.val();\r\n\r\n    return items.find(item => item.value == selectedValue)?.object;\r\n\r\n}\r\n\r\nexport var jo_mouseDetected: boolean = false;\r\nexport function checkIfMousePresent() {\r\n    if (matchMedia('(pointer:fine)').matches) {\r\n        jo_mouseDetected = true;\r\n    }\r\n}\r\n\r\nexport function animateToTransparent($element: JQuery<HTMLElement>, cssProperty: string, startColorRgb: number[], duration: number) {\r\n    let colorPraefix = 'rgba(' + startColorRgb[0] + \", \" + startColorRgb[1] + \", \" + startColorRgb[2] + \", \";\r\n    let value = 1.0;\r\n    let delta = value / (duration / 20);\r\n\r\n    let animate = () => {\r\n        $element.css(cssProperty, colorPraefix + value + \")\");\r\n        value -= delta;\r\n        if (value < 0) {\r\n            $element.css(cssProperty, \"\");\r\n        } else {\r\n            setTimeout(animate, 20);\r\n        }\r\n    }\r\n\r\n    animate();\r\n}\r\n\r\nexport function downloadFile(obj: any, filename: string, isBlob: boolean = false) {\r\n    var blob = isBlob? obj : new Blob([JSON.stringify(obj)], { type: 'text/plain' });\r\n    //@ts-ignore\r\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n        //@ts-ignore\r\n        window.navigator.msSaveOrOpenBlob(blob, filename);\r\n    } else {\r\n        var e = document.createEvent('MouseEvents'),\r\n            a = document.createElement('a');\r\n        a.download = filename;\r\n        a.href = window.URL.createObjectURL(blob);\r\n        a.dataset.downloadurl = ['text/plain', a.download, a.href].join(':');\r\n        //@ts-ignore\r\n        e.initEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\r\n        a.dispatchEvent(e);\r\n        a.remove();\r\n    }\r\n}\r\n\r\n\r\nfunction fallbackCopyTextToClipboard(text) {\r\n    var textArea = document.createElement(\"textarea\");\r\n    textArea.value = text;\r\n\r\n    // Avoid scrolling to bottom\r\n    textArea.style.top = \"0\";\r\n    textArea.style.left = \"0\";\r\n    textArea.style.position = \"fixed\";\r\n\r\n    document.body.appendChild(textArea);\r\n    textArea.focus();\r\n    textArea.select();\r\n\r\n    try {\r\n        var successful = document.execCommand('copy');\r\n    } catch (err) {\r\n        console.error('Fallback: Oops, unable to copy', err);\r\n    }\r\n\r\n    document.body.removeChild(textArea);\r\n}\r\n\r\nexport function copyTextToClipboard(text) {\r\n    if (!navigator.clipboard) {\r\n        fallbackCopyTextToClipboard(text);\r\n        return;\r\n    }\r\n    navigator.clipboard.writeText(text).then(function () {\r\n    }, function (err) {\r\n        console.error('Async: Could not copy text: ', err);\r\n    });\r\n}\r\n","import { LoginRequest, PerformanceData } from \"./Data.js\";\r\n\r\n// export var credentials: { username: string, password: string } = { username: null, password: null };\r\n\r\nexport class PerformanceCollector {\r\n    static performanceData: PerformanceData[] = [];\r\n    static performanceDataCount: number = 0;\r\n    static lastTimeSent: number = performance.now();\r\n\r\n    static registerPerformanceEntry(url: string, startTime: number) {\r\n        let pe: PerformanceData = PerformanceCollector.performanceData.find(pe => pe.url == url);\r\n        if (pe == null) {\r\n            pe = { count: 0, sumTime: 0, url: url };\r\n            PerformanceCollector.performanceData.push(pe);\r\n        }\r\n        pe.count++;\r\n        let dt = Math.round(performance.now() - startTime);\r\n        pe.sumTime += dt;\r\n        PerformanceCollector.performanceDataCount++;\r\n        // console.log(\"Performance entry for path \" + pe.url + \": \" + dt + \" ms, aggregated: \" + pe.sumTime + \" for \" + pe.count + \" requests.\");\r\n    }\r\n\r\n    static sendDataToServer() {\r\n        if (performance.now() - PerformanceCollector.lastTimeSent > 3 * 60 * 1000) {\r\n            let request = {\r\n                data: PerformanceCollector.performanceData\r\n            }\r\n\r\n            PerformanceCollector.performanceData = [];\r\n            PerformanceCollector.performanceDataCount = 0;\r\n            PerformanceCollector.lastTimeSent = performance.now();\r\n\r\n            ajax(\"collectPerformanceData\", request, () => { })\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport function ajax(url: string, request: any, successCallback: (response: any) => void,\r\n\r\n    errorCallback?: (message: string) => void) {\r\n\r\n    showNetworkBusy(true);\r\n    let time = performance.now();\r\n\r\n    $.ajax({\r\n        type: 'POST',\r\n        async: true,\r\n        data: JSON.stringify(request),\r\n        contentType: 'application/json',\r\n        url: \"servlet/\" + url,\r\n        success: function (response: any) {\r\n\r\n            PerformanceCollector.registerPerformanceEntry(url, time);\r\n\r\n            showNetworkBusy(false);\r\n            if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n                let error = \"Fehler bei der Bearbeitung der Anfrage\"\r\n                if (response.message != null) error = response.message;\r\n\r\n                if (error == \"Not logged in\") {\r\n                    // setTimeout(() => newLogin(url, request, successCallback, errorCallback), 10000);\r\n                    // location.reload();\r\n                }\r\n\r\n                if (errorCallback) errorCallback(error);\r\n            } else {\r\n                successCallback(response);\r\n            }\r\n            return;\r\n\r\n        },\r\n        error: function (jqXHR, message) {\r\n            showNetworkBusy(false);\r\n            if (errorCallback) {\r\n                let statusText = \"Server nicht erreichbar.\"\r\n                if (jqXHR.status != 0) {\r\n                    statusText = \"\" + jqXHR.status\r\n                }\r\n                errorCallback(message + \": \" + statusText);\r\n                return;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function showNetworkBusy(busy: boolean) {\r\n    if (busy) {\r\n        jQuery('.jo_network-busy').css('visibility','visible');\r\n    } else {\r\n        jQuery('.jo_network-busy').css('visibility','hidden');\r\n    }\r\n}\r\n\r\n\r\n","import { DatabaseData } from \"../communication/Data.js\";\r\n\r\nexport class WDatabase {\r\n\r\n    id: number;\r\n    name: string;\r\n\r\n    templateDump: Uint8Array;\r\n    based_on_template_id: number;\r\n    templateName: string;\r\n\r\n    statements: string[];\r\n    published_to: number;\r\n    version: number;\r\n    description: string;\r\n    owner_id: number;\r\n\r\n    static fromDatabaseData(data: DatabaseData, version: number): WDatabase {\r\n\r\n        let db = new WDatabase();\r\n\r\n        db.id = data.id;\r\n        db.name = data.name;\r\n        db.statements = data.statements;\r\n        db.published_to = data.published_to;\r\n        db.version = version;\r\n        db.description = data.description;\r\n        db.templateDump = null;\r\n        db.based_on_template_id = data.based_on_template_id;\r\n        db.owner_id = data.owner_id;\r\n        return db;\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n","export class CacheManager {\r\n    \r\n    fetchTemplateFromCache(databaseId: number, callback: (templateDump: Uint8Array) => void) {\r\n        if(databaseId == null){callback(null); return;}\r\n        let that = this;\r\n        if(!this.cacheAvailable()) callback(null);\r\n        this.getCache((cache) => {\r\n            cache.match(that.databaseIdToCacheIdentifier(databaseId)).then(\r\n                (value)=>{\r\n                    value.arrayBuffer().then((buffer) => callback(new Uint8Array(buffer)));\r\n                })\r\n                .catch(() => callback(null));\r\n        })        \r\n    }\r\n\r\n    saveTemplateToCache(databaseId: number, templateDump: Uint8Array) {\r\n        if(!this.cacheAvailable()) return;\r\n        let that = this;\r\n        this.getCache((cache) => {\r\n            cache.put(that.databaseIdToCacheIdentifier(databaseId), new Response(templateDump));\r\n        })        \r\n    }\r\n\r\n    cacheAvailable(): boolean {\r\n        return 'caches' in self;\r\n    }\r\n\r\n    getCache(callback: (cache: Cache) => void) {\r\n        caches.open('my-cache').then(callback);\r\n    }\r\n\r\n    databaseIdToCacheIdentifier(databaseId: number): string {\r\n        return \"/onlineIdeTemplateDb\" + databaseId;\r\n    }\r\n\r\n}","import { Main } from \"../main/Main.js\";\nimport { ajax } from \"./AjaxHelper.js\";\nimport { GetWebSocketTokenResponse } from \"./Data.js\";\nimport { NetworkManager } from \"./NetworkManager.js\";\n\ntype SubscriptionMessageFromClient = {\n    command: number,  // 1 == \"subscribe\", 2 == \"disconnect\"\n    // 3 == \"keepalive request\"\n    token?: string   // when \"subscribe\"\n}\n\ntype SubscriptionMessageFromServer = {\n    command: number // 1 == Acknoledge Connection, 2 == Notify, 3 == disconnect, 4 == keep alive response\n}\n\ntype NotifierState = \"connecting\" | \"connected\" | \"subscribed\" | \"disconnected\";\n\nexport class NotifierClient {\n\n    connection: WebSocket;\n    state: NotifierState;\n\n    constructor(private main: Main, private networkManager: NetworkManager){\n        this.connect();\n    }\n\n    connect() {\n        this.state = \"connecting\";\n\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\n\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/subscriptionwebsocket\";\n            this.connection = new WebSocket(url);\n\n            this.connection.onerror = (error: Event) => { this.onError(error); }\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\n\n            this.connection.onopen = (event: Event) => {\n                let request: SubscriptionMessageFromClient = {\n                    command: 1,   // \"subscribe\"\n                    token: response.token\n                }\n\n                this.state = \"connected\";\n                this.sendIntern(JSON.stringify(request));\n\n            }\n\n            let that = this;\n            setTimeout(() => {\n                if(this.state != \"subscribed\"){\n                    this.networkManager.forcedUpdateEvery = 1;\n                    this.networkManager.counterTillForcedUpdate = 1;\n                }\n            }, 7000);\n\n        });\n    }\n\n    disconnect(){\n        let request: SubscriptionMessageFromClient = {\n            command: 2   // \"disconnect\"\n        }\n\n        this.state = \"connected\";\n        this.sendIntern(JSON.stringify(request));\n\n    }\n\n    unsentMessages: string[] = [];\n    sendIntern(message: string) {\n\n        if (this.state != \"disconnected\") {\n            try {\n                this.connection.send(message);\n            } catch (exception) {\n                console.log(exception);\n            }\n        }\n    }\n\n    onClose(event: CloseEvent) {\n        this.state = \"disconnected\";\n    }\n\n    onMessage(event: MessageEvent) {\n\n        let response: SubscriptionMessageFromClient = JSON.parse(event.data);\n        if (response.command == undefined) return;\n\n        // 1 == Acknoledge Connection, 2 == Notify, 3 == disconnect, 4 == keep alive response\n        switch (response.command) {\n            case 1: // Acknoledge Connection\n                this.state = \"subscribed\";\n                break;\n            case 2: // Notify\n                this.networkManager.sendUpdates(() => {}, true);\n                break;\n            case 3: // disconnect\n                this.state = \"disconnected\";\n                break;\n            case 4: // keep alive response\n                break;\n        }\n    }\n\n    onError(error: Event) {\n        console.log(\"Fehler beim Notifier-Websocket\");\n    }\n\n}","import { UploadTemplateResponse } from \"../communication/Data.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\n\r\nexport class TemplateUploader {\r\n\r\n    uploadCurrentDatabase(workspace_id: number, main: Main, dump: Uint8Array | null, \r\n        reason: \"publishDatabaseAsTemplate\" | \"uploadBaseTemplateForWorkspace\" | \"distributeWorkspace\", \r\n        callback: (response: UploadTemplateResponse) => void = () => { }) {\r\n            \r\n        main.waitOverlay.show('Bitte warten, lade Vorlage auf den Server hoch ...');\r\n        if (workspace_id >= 0) {\r\n            let dbTool = main.getDatabaseTool();\r\n            dbTool.export((buffer) => {\r\n                // @ts-ignore\r\n                buffer = pako.deflate(buffer);\r\n                this.uploadIntern(buffer, workspace_id, reason, main, callback);\r\n            }, (error) => {\r\n                alert(\"Fehler beim Exportieren der Datenbank: \" + error)\r\n                main.waitOverlay.hide();\r\n            })\r\n        } else {\r\n            this.uploadIntern(dump, -1, reason, main, callback);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    private uploadIntern(buffer: Uint8Array, workspace_id: number,\r\n        reason: \"publishDatabaseAsTemplate\" | \"uploadBaseTemplateForWorkspace\"| \"distributeWorkspace\",\r\n        main: Main, callback: (response: UploadTemplateResponse) => void) {\r\n\r\n        $.ajax({\r\n            type: 'POST',\r\n            async: true,\r\n            contentType: 'application/octet-stream',\r\n            data: buffer,\r\n            processData: false,\r\n            headers: { 'x-workspaceid': \"\" + workspace_id, \"x-reason\": reason },\r\n            url: \"servlet/uploadTemplate\",\r\n            success: function (response: UploadTemplateResponse) {\r\n                main.waitOverlay.hide();\r\n                callback(response);\r\n                return;\r\n\r\n            },\r\n            error: function (jqXHR, message) {\r\n                alert('message');\r\n                main.waitOverlay.hide();\r\n            }\r\n        }\r\n        );\r\n        return buffer;\r\n    }\r\n}","import { Main } from \"../main/Main.js\";\r\nimport { ajax } from \"./AjaxHelper.js\";\r\nimport { WorkspaceData, FileData, SendUpdatesRequest, SendUpdatesResponse, CreateOrDeleteFileOrWorkspaceRequest, CRUDResponse, UpdateUserSettingsRequest, UpdateUserSettingsResponse, DuplicateWorkspaceRequest, DuplicateWorkspaceResponse, ClassData, DistributeWorkspaceRequest, DistributeWorkspaceResponse, GetDatabaseRequest, getDatabaseResponse, GetNewStatementsRequest, GetNewStatementsResponse, AddDatabaseStatementsRequest, AddDatabaseStatementsResponse, TemplateListEntry, GetTemplateListRequest, GetTemplateListResponse, CreateWorkspaceData, GetDatabaseSettingsResponse, GetDatabaseSettingsRequest, setDatabaseSecretRequest as SetDatabaseSecretRequest, SetDatabaseSecretResponse, SetPublishedToRequest, SetPublishedToResponse, GetTemplateRequest, RollbackRequest, RollbackResponse } from \"./Data.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { WDatabase } from \"../workspace/WDatabase.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { CacheManager } from \"./CacheManager.js\";\r\nimport { NotifierClient } from \"./NotifierClient.js\";\r\nimport { TemplateUploader } from \"../tools/TemplateUploader.js\";\r\n\r\nexport class NetworkManager {\r\n\r\n    timerhandle: any;\r\n\r\n    ownUpdateFrequencyInSeconds: number = 20;\r\n    teacherUpdateFrequencyInSeconds: number = 5;\r\n\r\n    updateFrequencyInSeconds: number = 20;\r\n    forcedUpdateEvery: number = 4;\r\n    counterTillForcedUpdate: number = 2;\r\n    secondsTillNextUpdate: number = this.updateFrequencyInSeconds;\r\n    errorHappened: boolean = false;\r\n\r\n    interval: any;\r\n\r\n    notifierClient: NotifierClient;\r\n\r\n    constructor(private main: Main, private $updateTimerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initializeTimer() {\r\n\r\n        let that = this;\r\n        this.$updateTimerDiv.find('svg').attr('width', that.updateFrequencyInSeconds);\r\n\r\n        if (this.interval != null) clearInterval(this.interval);\r\n\r\n        this.interval = setInterval(() => {\r\n\r\n            if (that.main.user == null) return; // don't call server if no user is logged in\r\n\r\n            that.secondsTillNextUpdate--;\r\n\r\n            if (that.secondsTillNextUpdate < 0) {\r\n                that.secondsTillNextUpdate = that.updateFrequencyInSeconds;\r\n                this.counterTillForcedUpdate--;\r\n                let forceUpdate = this.counterTillForcedUpdate == 0;\r\n                if (forceUpdate) this.counterTillForcedUpdate = this.forcedUpdateEvery;\r\n                that.sendUpdates(() => { }, forceUpdate);\r\n            }\r\n\r\n            let $rect = this.$updateTimerDiv.find('.jo_updateTimerRect');\r\n\r\n            $rect.attr('width', that.secondsTillNextUpdate + \"px\");\r\n\r\n            if (that.errorHappened) {\r\n                $rect.css('fill', '#c00000');\r\n                this.$updateTimerDiv.attr('title', \"Fehler beim letzten Speichervorgang -> Werd's wieder versuchen\");\r\n            } else {\r\n                $rect.css('fill', '#008000');\r\n                this.$updateTimerDiv.attr('title', that.secondsTillNextUpdate + \" Sekunden bis zum nächsten Speichern\");\r\n            }\r\n\r\n        }, 1000);\r\n\r\n    }\r\n\r\n    initializeNotifierClient(){\r\n        this.notifierClient = new NotifierClient(this.main, this);\r\n    }\r\n\r\n    sendUpdates(callback?: () => void, sendIfNothingIsDirty: boolean = false) {\r\n\r\n        if (this.main.user == null) return;\r\n\r\n        this.main.projectExplorer.writeEditorTextToFile();\r\n\r\n        if (this.main.userDataDirty) {\r\n\r\n            this.main.userDataDirty = false;\r\n            this.sendUpdateUserSettings(() => { });\r\n        }\r\n\r\n\r\n        let wdList: WorkspaceData[] = [];\r\n        let fdList: FileData[] = [];\r\n\r\n        for (let ws of this.main.workspaceList) {\r\n\r\n            if (!ws.saved) {\r\n                wdList.push(ws.getWorkspaceData(false));\r\n                ws.saved = true;\r\n            }\r\n\r\n            for (let m of ws.moduleStore.getModules(false)) {\r\n                if (!m.file.saved) {\r\n                    m.file.text = m.getProgramTextFromMonacoModel();\r\n                    fdList.push(m.getFileData(ws));\r\n                    // console.log(\"Save file \" + m.file.name);\r\n                    m.file.saved = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        let request: SendUpdatesRequest = {\r\n            workspacesWithoutFiles: wdList,\r\n            files: fdList,\r\n            owner_id: this.main.workspacesOwnerId,\r\n            userId: this.main.user.id,\r\n            language: 1,\r\n            currentWorkspaceId: this.main.getCurrentWorkspace()?.id,\r\n            getModifiedWorkspaces: false\r\n        }\r\n\r\n        let that = this;\r\n        if (wdList.length > 0 || fdList.length > 0 || sendIfNothingIsDirty) {\r\n            ajax('sendUpdates', request, (response: SendUpdatesResponse) => {\r\n                that.errorHappened = !response.success;\r\n                if (!that.errorHappened) {\r\n\r\n                    that.updateWorkspaces(request, response);\r\n\r\n                    if (callback != null) {\r\n                        callback();\r\n                        return;\r\n                    }\r\n                }\r\n            }, () => {\r\n                that.errorHappened = true;\r\n            });\r\n        } else {\r\n            if (callback != null) {\r\n                callback();\r\n                return;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    sendCreateWorkspace(wd: CreateWorkspaceData, owner_id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            wd.id = Math.round(Math.random() * 10000000);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"workspace\",\r\n            data: wd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            wd.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n\r\n    getDatabaseSettings(workspace_id: number, callback: (response: GetDatabaseSettingsResponse) => void) {\r\n        let request: GetDatabaseSettingsRequest = {\r\n            workspaceId: workspace_id\r\n        };\r\n        ajax(\"getDatabaseSettings\", request, (response: GetDatabaseSettingsResponse) => {\r\n            callback(response);\r\n        }, (message) => { alert(message) })\r\n    }\r\n\r\n    setNewSecret(workspace_id: number, kind: string, callback: (secret: string) => void) {\r\n        let request: SetDatabaseSecretRequest = {\r\n            workspaceId: workspace_id,\r\n            secretKind: kind\r\n        };\r\n        ajax(\"setNewSecret\", request, (response: SetDatabaseSecretResponse) => {\r\n            callback(response.secret);\r\n        }, (message) => { alert(message) })\r\n    }\r\n\r\n    setNameAndPublishedTo(workspace_id: number, name: string, published_to: number, description: string, callback: () => void) {\r\n        let request: SetPublishedToRequest = {\r\n            workspaceId: workspace_id,\r\n            databaseName: name,\r\n            publishedTo: published_to,\r\n            description: description\r\n        };\r\n\r\n        ajax(\"setPublishedTo\", request, (response: SetPublishedToResponse) => {\r\n            callback();\r\n        }, (message) => { alert(message) })\r\n    }\r\n\r\n\r\n\r\n    sendCreateFile(m: Module, ws: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        let fd: FileData = m.getFileData(ws);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"file\",\r\n            data: fd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            m.file.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDuplicateWorkspace(ws: Workspace, callback: (error: string, workspaceData?: WorkspaceData) => void) {\r\n\r\n        let request: DuplicateWorkspaceRequest = {\r\n            workspace_id: ws.id,\r\n            language: 1\r\n        }\r\n\r\n        ajax(\"duplicateWorkspace\", request, (response: DuplicateWorkspaceResponse) => {\r\n            callback(response.message, response.workspace)\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDistributeWorkspace(ws: Workspace, klasse: ClassData, student_ids: number[], callback: (error: string) => void) {\r\n\r\n        let callbackAfterSettingWorkspaceActive = () => {\r\n\r\n            new TemplateUploader().uploadCurrentDatabase(ws.id, this.main, null,\r\n                \"distributeWorkspace\",\r\n                (response) => {\r\n\r\n                    this.sendUpdates(() => {\r\n    \r\n                    let request: DistributeWorkspaceRequest = {\r\n                        workspace_id: ws.id,\r\n                        database_as_template_id: response.newTemplateId,\r\n                        class_id: klasse?.id,\r\n                        student_ids: student_ids\r\n                    }\r\n        \r\n                    ajax(\"distributeWorkspace\", request, (response: DistributeWorkspaceResponse) => {\r\n                        callback(response.message)\r\n                    }, callback);\r\n        \r\n                }, false);\r\n                });\r\n\r\n        }\r\n\r\n        this.main.projectExplorer.setWorkspaceActive(ws, callbackAfterSettingWorkspaceActive);\r\n\r\n    }\r\n\r\n\r\n    sendDeleteWorkspaceOrFile(type: \"workspace\" | \"file\", id: number, callback: (error: string) => void) {\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"delete\",\r\n            entity: type,\r\n            id: id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            if (response.success) {\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendUpdateUserSettings(callback: (error: string) => void) {\r\n\r\n        let request: UpdateUserSettingsRequest = {\r\n            settings: this.main.user.settings,\r\n            userId: this.main.user.id,\r\n            current_workspace_id: this.main.getCurrentWorkspace()?.id\r\n        }\r\n\r\n        ajax(\"updateUserSettings\", request, (response: UpdateUserSettingsResponse) => {\r\n            if (response.success) {\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n\r\n    getNewStatements(workspace: Workspace, callback: (statements: string[], firstNewStatementIndex: number) => void) {\r\n        let request: GetNewStatementsRequest = {\r\n            workspaceId: workspace.id,\r\n            version_before: workspace.database.version\r\n        }\r\n\r\n        ajax(\"getNewStatements\", request, (response: GetNewStatementsResponse) => {\r\n            if (response.success) {\r\n                callback(response.newStatements, response.firstNewStatementIndex);\r\n            }\r\n        });\r\n    }\r\n\r\n    AddDatabaseStatements(workspace: Workspace, statements: string[], callback: (statements_before: string[], new_version: number) => void) {\r\n        let request: AddDatabaseStatementsRequest = {\r\n            workspaceId: workspace.id,\r\n            version_before: workspace.database.version,\r\n            statements: statements\r\n        }\r\n\r\n        ajax(\"addDatabaseStatements\", request, (response: AddDatabaseStatementsResponse) => {\r\n            if (response.success) {\r\n                callback(response.statements_before, response.new_version);\r\n            }\r\n        });\r\n    }\r\n\r\n    fetchDatabase(workspace: Workspace, callback: (error: string) => void) {\r\n\r\n        let cacheManager: CacheManager = new CacheManager();\r\n\r\n        let request: GetDatabaseRequest = {\r\n            workspaceId: workspace.id\r\n        }\r\n\r\n        ajax(\"getDatabase\", request, (response: getDatabaseResponse) => {\r\n            if (response.success) {\r\n\r\n                workspace.database = WDatabase.fromDatabaseData(response.database, response.version)\r\n                cacheManager.fetchTemplateFromCache(workspace.database.based_on_template_id, (templateDump: Uint8Array) => {\r\n\r\n                    if (templateDump != null) {\r\n                        try{\r\n                            // @ts-ignore\r\n                            workspace.database.templateDump = pako.inflate(templateDump);\r\n                        } catch(err){\r\n                            console.log(err);\r\n                            console.log(\"Dump seems not to be compressed...\");\r\n                            workspace.database.templateDump = templateDump;\r\n                        }\r\n                        callback(null);\r\n                        return;\r\n                    } else {\r\n                        if (workspace.database.based_on_template_id == null) {\r\n                            callback(null);\r\n                            return\r\n                        }\r\n                        this.fetchTemplate(workspace.id, (template) => {\r\n                            if (template != null) {\r\n                                cacheManager.saveTemplateToCache(workspace.database.based_on_template_id, template);\r\n                                // @ts-ignore\r\n                                workspace.database.templateDump = pako.inflate(template);\r\n                                callback(null);\r\n                                return;\r\n                            } else {\r\n                                callback(\"Konnte das Template nicht laden.\");\r\n                                return;\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    fetchTemplate(workspaceId: number, callback: (template: Uint8Array) => void) {\r\n        let request: GetTemplateRequest = {\r\n            workspaceId: workspaceId\r\n        }\r\n\r\n        $.ajax({\r\n            type: 'POST',\r\n            async: true,\r\n            data: JSON.stringify(request),\r\n            contentType: 'application/json',\r\n            url: \"servlet/getTemplate\",\r\n            xhrFields: { responseType: 'arraybuffer' },\r\n            success: function (response: any) {\r\n                callback(new Uint8Array(response));\r\n            },\r\n            error: function (jqXHR, message) {\r\n                alert(\"Konnte das Template nicht laden.\");\r\n                callback(null);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    fetchTemplateList(callback: (templateList: TemplateListEntry[]) => void) {\r\n        let request: GetTemplateListRequest = { user_id: this.main.user.id }\r\n\r\n        ajax(\"getTemplateList\", request, (response: GetTemplateListResponse) => {\r\n            if (response.success) {\r\n                callback(response.templateList);\r\n            } else {\r\n                callback([]);\r\n            }\r\n        }, (message) => {\r\n            alert(message);\r\n            callback([]);\r\n        })\r\n\r\n    }\r\n\r\n    updateWorkspaces(sendUpdatesRequest: SendUpdatesRequest, sendUpdatesResponse: SendUpdatesResponse) {\r\n\r\n        let idToRemoteWorkspaceDataMap: Map<number, WorkspaceData> = new Map();\r\n\r\n        let fileIdsSended = [];\r\n        sendUpdatesRequest.files.forEach(file => fileIdsSended.push(file.id));\r\n\r\n        sendUpdatesResponse.workspaces.workspaces.forEach(wd => idToRemoteWorkspaceDataMap.set(wd.id, wd));\r\n\r\n        let newWorkspaceNames: string[] = [];\r\n\r\n        for (let remoteWorkspace of sendUpdatesResponse.workspaces.workspaces) {\r\n\r\n            let localWorkspaces = this.main.workspaceList.filter(ws => ws.id == remoteWorkspace.id);\r\n\r\n            // Did student get a workspace from his/her teacher?\r\n            if (localWorkspaces.length == 0) {\r\n                newWorkspaceNames.push(remoteWorkspace.name);\r\n                this.createNewWorkspaceFromWorkspaceData(remoteWorkspace);\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        for (let workspace of this.main.workspaceList) {\r\n            let remoteWorkspace: WorkspaceData = idToRemoteWorkspaceDataMap.get(workspace.id);\r\n            if (remoteWorkspace != null) {\r\n                let idToRemoteFileDataMap: Map<number, FileData> = new Map();\r\n                remoteWorkspace.files.forEach(fd => idToRemoteFileDataMap.set(fd.id, fd));\r\n\r\n                let idToModuleMap: Map<number, Module> = new Map();\r\n                // update/delete files if necessary\r\n                for (let module of workspace.moduleStore.getModules(false)) {\r\n                    let fileId = module.file.id;\r\n                    idToModuleMap.set(fileId, module);\r\n                    let remoteFileData = idToRemoteFileDataMap.get(fileId);\r\n                    if (remoteFileData == null) {\r\n                        this.main.projectExplorer.fileListPanel.removeElement(module);\r\n                        this.main.currentWorkspace.moduleStore.removeModule(module);\r\n                    } else if (remoteFileData.version > module.file.version) {\r\n                        if (fileIdsSended.indexOf(fileId) < 0 || remoteFileData.forceUpdate) {\r\n                            module.file.text = remoteFileData.text;\r\n                            module.model.setValue(remoteFileData.text);\r\n\r\n                            module.file.saved = true;\r\n                            module.lastSavedVersionId = module.model.getAlternativeVersionId()\r\n                        }\r\n                        module.file.version = remoteFileData.version;\r\n                    }\r\n                }\r\n\r\n                // add files if necessary\r\n                for (let remoteFile of remoteWorkspace.files) {\r\n                    if (idToModuleMap.get(remoteFile.id) == null) {\r\n                        this.createFile(workspace, remoteFile);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (newWorkspaceNames.length > 0) {\r\n            let message: string = newWorkspaceNames.length > 1 ? \"Folgende Workspaces hat Deine Lehrkraft Dir gesendet: \" : \"Folgenden Workspace hat Deine Lehrkraft Dir gesendet: \";\r\n            message += newWorkspaceNames.join(\", \");\r\n            alert(message);\r\n        }\r\n\r\n        this.main.projectExplorer.workspaceListPanel.sortElements();\r\n        this.main.projectExplorer.fileListPanel.sortElements();\r\n\r\n    }\r\n\r\n    public createNewWorkspaceFromWorkspaceData(remoteWorkspace: WorkspaceData, withSort: boolean = false) {\r\n        let w = this.main.createNewWorkspace(remoteWorkspace.name, remoteWorkspace.owner_id);\r\n        w.id = remoteWorkspace.id;\r\n        w.sql_history = \"\";\r\n        w.path = remoteWorkspace.path;\r\n        w.isFolder = remoteWorkspace.isFolder;\r\n\r\n        this.main.workspaceList.push(w);\r\n        let path = remoteWorkspace.path.split(\"/\");\r\n        if (path.length == 1 && path[0] == \"\") path = [];\r\n\r\n        let panelElement: AccordionElement = {\r\n            name: remoteWorkspace.name,\r\n            externalElement: w,\r\n            iconClass: \"workspace\",\r\n            isFolder: remoteWorkspace.isFolder,\r\n            path: path\r\n        };\r\n\r\n        this.main.projectExplorer.workspaceListPanel.addElement(panelElement, true);\r\n        w.panelElement = panelElement;\r\n\r\n        for (let fileData of remoteWorkspace.files) {\r\n            this.createFile(w, fileData);\r\n        }\r\n\r\n        if (withSort) {\r\n            this.main.projectExplorer.workspaceListPanel.sortElements();\r\n            this.main.projectExplorer.fileListPanel.sortElements();\r\n        }\r\n    }\r\n\r\n    createFile(workspace: Workspace, remoteFile: FileData) {\r\n        let ae: any = null; //AccordionElement\r\n        if (workspace == this.main.currentWorkspace) {\r\n            ae = {\r\n                name: remoteFile.name,\r\n                externalElement: null\r\n            }\r\n\r\n            this.main.projectExplorer.fileListPanel.addElement(ae, true);\r\n        }\r\n\r\n        let f: any = { // File\r\n            id: remoteFile.id,\r\n            name: remoteFile.name,\r\n            dirty: false,\r\n            saved: true,\r\n            text: remoteFile.text,\r\n            version: remoteFile.version,\r\n            identical_to_repository_version: true,\r\n            workspace_id: workspace.id,\r\n            panelElement: ae\r\n        };\r\n        let m = this.main.projectExplorer.getNewModule(f); //new Module(f, this.main);\r\n        if (ae != null) ae.externalElement = m;\r\n        let modulStore = workspace.moduleStore;\r\n        modulStore.putModule(m);\r\n\r\n    }\r\n\r\n    rollback(callback: (error: string, rollbackLocalNeeded: boolean) => void) {\r\n        let workspace = this.main.currentWorkspace;\r\n        let request: RollbackRequest = { workspaceId: workspace.id, version: workspace.database.version }\r\n\r\n        ajax(\"rollback\", request, (response: RollbackResponse) => {\r\n            if (response.success) {\r\n                \r\n                callback(null, workspace.database.version > response.new_version);\r\n            } else {\r\n                alert(response.message);\r\n                callback(response.message, false);\r\n            }\r\n        }, (message) => {\r\n            alert(message);\r\n            callback(message, false);\r\n        })\r\n\r\n    }\r\n\r\n\r\n}","import { CreateWorkspaceData, WorkspaceData } from \"../../communication/Data.js\";\r\nimport { copyTextToClipboard, makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { TemplateUploader } from \"../../tools/TemplateUploader.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\nexport class DatabaseSettingsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private workspace: Workspace) {\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Datenbank-Einstellungen</div>\r\n            <div style=\"width: 100%; margin-left: 10px\">\r\n                <div class=\"jo_ds_settings\" style=\"margin-left: 0px\">\r\n                <div class=\"jo_ds_settings_caption\">Name der Datenbank:</div><div><input class=\"dialog-input jo_databasename\" value=\"Neue Datenbank\"></input></div>\r\n                </div>\r\n\r\n                <div class=\"jo_ds_settings_caption\" style=\"margin-top: 20px\">\r\n                Zugriffscodes für andere Benutzer:\r\n                </div>\r\n                                \r\n                <div>\r\n                    <table class=\"jo_ds_secret_table\">\r\n                    <tr>\r\n                        <td>Nur Lesen:</td><td class=\"jo_ds_secret jo_ds_secret_read\"></td><td id=\"copySecretTdread\"></td><td><button class=\"jo_small_button jo_button_code_read\">Neuen Code generieren</button></td>\r\n                    <tr>\r\n                        <td>Lesen und schreiben:</td><td class=\"jo_ds_secret jo_ds_secret_write\"></td><td id=\"copySecretTdwrite\"></td><td><button class=\"jo_small_button jo_button_code_write\">Neuen Code generieren</button></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Lesen, schreiben und Struktur verändern:</td><td class=\"jo_ds_secret jo_ds_secret_ddl\"></td><td id=\"copySecretTdddl\"></td><td><button class=\"jo_small_button jo_button_code_ddl\">Neuen Code generieren</button></td>\r\n                    </tr>\r\n                    </table>\r\n                </div>\r\n\r\n                <div class=\"jo_ds_settings_caption\" style=\"margin-top: 20px\">\r\n                Beschreibung:\r\n                </div>\r\n                <div>\r\n                <textarea class=\"jo_ds_settings_description\" maxlength=\"5000\"></textarea>\r\n                </div>\r\n\r\n                <div class=\"jo_ds_settings_caption\" style=\"margin-top: 20px\">\r\n                Datenbank freigeben als Vorlage für andere Benutzer:\r\n                </div>\r\n\r\n                <fieldset id=\"jo_ds_publishedTo\">\r\n                    <input type=\"radio\" id=\"b0\" name=\"publishedFilter\" value=\"0\" checked=\"checked\"><label for=\"b0\">Keine Freigabe</label>\r\n                    <input type=\"radio\" id=\"b1\" name=\"publishedFilter\" value=\"1\"><label for=\"b1\">Freigabe für meine Klasse(n)</label>\r\n                    <input type=\"radio\" id=\"b2\" name=\"publishedFilter\" value=\"2\" style=\"visibility: none\"><label id=\"lb2\" for=\"b2\" style=\"visibility: none\">Freigabe für meine Schule</label>\r\n                    <input type=\"radio\" id=\"b3\" name=\"publishedFilter\" value=\"3\" style=\"visibility: none\"><label id=\"lb3\" for=\"b3\" style=\"visibility: none\">Freigabe für alle Schulen</label>\r\n                </fieldset>\r\n\r\n                <div>\r\n                    <input type=\"checkbox\" id=\"jo_upload_db\" name=\"jo_upload_db\">\r\n                    <label for=\"jo_upload_db\">Aktuellen Zustand der Datenbank als Vorlage hochladen</label>\r\n                </div>\r\n            </div>\r\n\r\n\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_save_button\">Speichern</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n\r\n        let that = this;\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { this.showMainWindow(); });\r\n        jQuery('#jo_ds_save_button').on('click', () => { \r\n            this.saveNameAndPublishedTo();\r\n         })\r\n\r\n        this.setValues();\r\n\r\n        [\"read\", \"write\", \"ddl\"].forEach(kind => {\r\n            jQuery('.jo_button_code_' + kind).on('pointerdown', () => {\r\n                that.main.networkManager.setNewSecret(that.workspace.id, kind, (secret) => {\r\n                    jQuery('.jo_ds_secret_'+kind).text(secret);\r\n                })\r\n            })\r\n            let $copyButton = jQuery('<button class=\"jo_small_button jo_copy_secret_button jo_active\">Kopieren</button>')\r\n            jQuery('#copySecretTd' + kind).append($copyButton);\r\n            $copyButton.on('pointerdown', () => {\r\n                copyTextToClipboard(jQuery('.jo_ds_secret_'+kind).text());\r\n            })\r\n        })\r\n\r\n        jQuery('#jo_ds_publishedTo>input').on('change', (e) => {$('#jo_upload_db').prop('checked', !((<HTMLInputElement>jQuery('#b0')[0]).checked))});\r\n\r\n    }\r\n\r\n    saveNameAndPublishedTo(){\r\n        let published_to = 0;\r\n        jQuery('#jo_ds_publishedTo').find('input').each( (n, element) => {\r\n            let $element = jQuery(element);\r\n            //@ts-ignore\r\n            if(<HTMLInputElement>element.checked){\r\n                published_to = Number.parseInt(<string>$element.attr('value'));\r\n            }\r\n        })\r\n\r\n        this.main.networkManager.setNameAndPublishedTo(this.workspace.id, \r\n            <string>jQuery('.jo_databasename').val(), published_to, <string>jQuery('.jo_ds_settings_description').val(),\r\n             () => {\r\n                 if($('#jo_upload_db').prop('checked')){\r\n                    new TemplateUploader().uploadCurrentDatabase(this.workspace.id, this.main, null, \"publishDatabaseAsTemplate\");                    \r\n                 }\r\n                 this.showMainWindow(); \r\n                })\r\n    }\r\n\r\n    setValues(){\r\n        jQuery('.jo_databasename').val(this.workspace.name);\r\n        this.main.networkManager.getDatabaseSettings(this.workspace.id, (response) => {\r\n            [\"read\", \"write\", \"ddl\"].forEach(kind => {\r\n                jQuery('.jo_ds_secret_' + kind).text(response.secrets[kind]);\r\n            });\r\n            if(this.main.user.is_admin){\r\n                jQuery('#b3').css('visibility', 'visible');\r\n                jQuery('#lb3').css('visibility', 'visible');\r\n            }\r\n            if(this.main.user.is_schooladmin){\r\n                jQuery('#b2').css('visibility', 'visible');\r\n                jQuery('#lb2').css('visibility', 'visible');\r\n            }\r\n            // jQuery('#jo_ds_publishedTo input').attr('checked', '');\r\n            jQuery('#b'+response.publishedTo).prop('checked', true);\r\n\r\n            jQuery('#jo_upload_db').prop('checked', response.publishedTo != 0);\r\n\r\n            jQuery('.jo_ds_settings_description').val(this.workspace.database.description);\r\n        })\r\n    }\r\n\r\n    showMainWindow() {\r\n        jQuery('#main').css('visibility', 'visible');\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n    }\r\n\r\n\r\n\r\n}","import { WorkspaceData } from \"../communication/Data.js\";\r\nimport { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { DatabaseSettingsDialog } from \"../main/gui/DatabaseSettingsDialog.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { WDatabase } from \"./WDatabase.js\";\r\n\r\nexport class Workspace {\r\n    \r\n    name: string;\r\n    path: string = \"\";\r\n    isFolder: boolean;\r\n    id: number;\r\n    owner_id: number;\r\n\r\n    version: number;\r\n    \r\n    moduleStore: ModuleStore;\r\n    panelElement: AccordionElement;\r\n    currentlyOpenModule: Module;\r\n    saved: boolean = true;\r\n\r\n    compilerMessage: string;\r\n\r\n    databaseId: number;\r\n    database: WDatabase;\r\n\r\n    sql_history: string;\r\n\r\n    permissions: number;\r\n\r\n    constructor(name: string, private main: MainBase, owner_id: number){\r\n        this.name = name;\r\n        this.owner_id = owner_id;\r\n        this.moduleStore = new ModuleStore(main);\r\n        this.sql_history = \"\";\r\n    }\r\n    \r\n    getWorkspaceData(withFiles: boolean): WorkspaceData {\r\n        let wd: WorkspaceData = {\r\n            name: this.name,\r\n            id: this.id,\r\n            owner_id: this.owner_id,\r\n            currentFileId: this.currentlyOpenModule == null ? null : this.currentlyOpenModule.file.id,\r\n            files: [],\r\n            sql_history: this.sql_history,\r\n            path: this.path,\r\n            isFolder: false,  \r\n            permissions: this.permissions,\r\n            database_id: this.databaseId\r\n        }\r\n\r\n        if(withFiles){\r\n            for(let m of this.moduleStore.getModules(false)){\r\n    \r\n                wd.files.push(m.getFileData(this));\r\n    \r\n            }\r\n        }\r\n\r\n        return wd;\r\n    }\r\n\r\n    renderSettingsButton(panelElement: AccordionElement) {\r\n        let $buttonDiv = panelElement?.$htmlFirstLine?.find('.jo_additionalButtonSettings');\r\n        if ($buttonDiv == null) return;\r\n        \r\n        // let myMain: Main = <Main>this.main;\r\n\r\n            let $button = jQuery('<div class=\"jo_settingsButton img_settings jo_button jo_active\" title=\"Datenbank-Einstellungen...\"></div>');\r\n            $buttonDiv.append($button);\r\n            let that = this;\r\n            $button.on('pointerdown', (e) => e.stopPropagation());\r\n            $button.on('pointerup', (e) => {\r\n                e.stopPropagation();\r\n\r\n                new DatabaseSettingsDialog(<any>that.main, that);\r\n\r\n            });\r\n\r\n            $button[0].addEventListener(\"contextmenu\", (event) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n            }, false);\r\n\r\n        // } else {\r\n        //     $buttonDiv.find('.jo_startButton').remove();\r\n        // }\r\n    }\r\n\r\n\r\n    static restoreFromData(ws: WorkspaceData, main: Main): Workspace {\r\n\r\n        let w = new Workspace(ws.name, main, ws.owner_id);\r\n        w.id = ws.id;\r\n        w.path = ws.path;\r\n        w.isFolder = ws.isFolder;\r\n        w.owner_id = ws.owner_id;\r\n        w.sql_history = ws.sql_history;\r\n        w.permissions = ws.permissions;\r\n        w.databaseId = ws.database_id;\r\n\r\n        for(let f of ws.files){\r\n\r\n            let m: Module = Module.restoreFromData(f, main);\r\n            w.moduleStore.putModule(m);\r\n\r\n            if(f.id == ws.currentFileId){\r\n                w.currentlyOpenModule = m;\r\n            }\r\n\r\n        }\r\n\r\n        return w;\r\n\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        \r\n        return this.moduleStore.hasErrors();\r\n        \r\n    }\r\n\r\n    getModuleByMonacoModel(model: monaco.editor.ITextModel): Module {\r\n        for(let m of this.moduleStore.getModules(false)){\r\n            if(m.model == model){\r\n                return m;\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    }\r\n}\r\n\r\n","import { Editor } from \"./Editor.js\";\r\nimport { CompletionHint, Module } from \"../../compiler/parser/Module.js\";\r\nimport { Symbol, SymbolTable } from \"../../compiler/parser/SymbolTable.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { Column, Table } from \"../../compiler/parser/SQLTable.js\";\r\n\r\nexport class MyCompletionItemProvider implements monaco.languages.CompletionItemProvider {\r\n\r\n    isConsole: boolean;\r\n\r\n    public triggerCharacters: string[] = ['.', 'abcdefghijklmnopqrstuvwxyzäöüß_ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜ', ' ', ',', '('];\r\n\r\n    public keywordCompletionItems: Map<string, monaco.languages.CompletionItem> = new Map();\r\n\r\n    constructor(private main: MainBase) {\r\n        this.setupKeywordCompletionItems();\r\n    }\r\n\r\n    first: boolean = true;\r\n    provideCompletionItems(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, \r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n\r\n\r\n        let module: Module =\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null || module.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n            let that = this;\r\n\r\n            let wfc = function waitForCompiler(){\r\n                if(module.file.dirty){\r\n                    setTimeout(() => {\r\n                        wfc();\r\n                    }, 100);\r\n                } else {\r\n                    resolve(that.provideCompletionItemsIntern(model, position, context, token));\r\n                }\r\n            }\r\n        \r\n            wfc();\r\n\r\n        })\r\n\r\n        // Promise.resolve({\r\n        //     suggestions: completionItems\r\n        // });\r\n    }\r\n\r\n    provideCompletionItemsIntern(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, \r\n        token: monaco.CancellationToken): monaco.languages.CompletionList {\r\n\r\n        setTimeout(() => {\r\n            //@ts-ignore\r\n            let sw = this.main.getMonacoEditor()._contentWidgets[\"editor.widget.suggestWidget\"].widget;\r\n            if (this.first) {\r\n                sw.toggleDetails();\r\n                this.first = false;\r\n            }\r\n        }, 500);\r\n\r\n        let module: Module =\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null || module.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (this.isStringLiteral(module, position)) return null;\r\n\r\n        let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let symbolTable = module.mainSymbolTable.findTableAtPosition(position.lineNumber, position.column);\r\n        let completionHint: CompletionHint = module.getCompletionHint(position.lineNumber, position.column);\r\n        if (completionHint == null) {\r\n            completionHint = {\r\n                fromColumn: 0,\r\n                toColumn: 0,\r\n                fromLine: 0,\r\n                toLine: 0,\r\n                hintColumns: false,\r\n                hintTables: false,\r\n                hintKeywords: []\r\n            }\r\n        }\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n        this.addKeywordCompletionItems(completionHint, completionItems);\r\n\r\n        let dotMatch = textUntilPosition.match(/.*\\s([\\wöäüÖÄÜß]*)(\\.)([\\wöäüÖÄÜß]*)$/);\r\n\r\n        let ibMatch = textAfterPosition.match(/^([\\wöäüÖÄÜß]*)/);\r\n        let identifierAndBracketAfterCursor = \"\";\r\n        if (ibMatch != null && ibMatch.length > 0) {\r\n            identifierAndBracketAfterCursor = ibMatch[0];\r\n        }\r\n\r\n        if (dotMatch == null) {\r\n            this.addIdentifierCompletionItems(completionHint, symbolTable, completionItems);\r\n        } else {\r\n            this.addDotCompletionItems(position, dotMatch, identifierAndBracketAfterCursor, symbolTable, completionItems);\r\n        }\r\n\r\n        let word = model.getWordUntilPosition(position);\r\n        let replaceWordRange = { startColumn: word.startColumn, startLineNumber: position.lineNumber, endColumn: word.endColumn, endLineNumber: position.lineNumber };\r\n        let insertAfterCursorRange = { startColumn: position.column, startLineNumber: position.lineNumber, endColumn: position.column, endLineNumber: position.lineNumber }\r\n\r\n        for (let item of completionItems) {\r\n            if (item.range == null) {\r\n                if (item.insertText.startsWith(\",\")) {\r\n                    item.range = insertAfterCursorRange;\r\n                } else {\r\n                    item.range = replaceWordRange;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (completionHint.dontHint != null) {\r\n            completionItems = completionItems.filter(item => completionHint.dontHint.indexOf(item.insertText) < 0);\r\n        }\r\n\r\n        return {\r\n            suggestions: completionItems\r\n        };\r\n    }\r\n\r\n\r\n    addDotCompletionItems(position: monaco.Position, dotMatch: RegExpMatchArray, identifierAndBracketAfterCursor: string,\r\n        symbolTable: SymbolTable, completionItems: monaco.languages.CompletionItem[]) {\r\n        let textAfterDot = dotMatch[3];\r\n        let textBeforeDot = dotMatch[1];\r\n        let dotColumn = position.column - textAfterDot.length - 1;\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - textAfterDot.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n        for (let symbol of symbolTable.symbolList) {\r\n            if (symbol.table != null) {\r\n                let identifier: string = symbol.table.identifier;\r\n                if (symbol.tableAlias != null) identifier = symbol.tableAlias;\r\n                if (identifier.toLowerCase() == textBeforeDot) {\r\n                    for (let column of symbol.table.columns) {\r\n                        completionItems.push({\r\n                            label: column.identifier,\r\n                            detail: \"Spalte \" + column.identifier + \" der Tabelle \" + symbol.table.identifier,\r\n                            filterText: column.identifier,\r\n                            insertText: column.identifier,\r\n                            insertTextRules: monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                            kind: monaco.languages.CompletionItemKind.Field,\r\n                            range: rangeToReplace\r\n                        })\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    addIdentifierCompletionItems(completionHint: CompletionHint, symbolTable: SymbolTable, completionItems: monaco.languages.CompletionItem[]) {\r\n        let praefix: string = completionHint.praefix == null ? \"\" : completionHint.praefix;\r\n        let suffix: string = completionHint.suffix == null ? \"\" : completionHint.suffix;\r\n\r\n        if (!(completionHint.hintTables || completionHint.hintColumns)) {\r\n            return;\r\n        }\r\n\r\n        let tableIdentifiers: { [identifier: string]: boolean } = {};\r\n\r\n        let st: SymbolTable = symbolTable;\r\n        let columns: { [identifier: string]: Symbol[] } = {};\r\n        let columnIdentifiers: string[] = [];\r\n\r\n        while (st != null) {\r\n            for (let symbol of st.symbolList) {\r\n                if (symbol.column != null) {\r\n                    let columnIdentifier = symbol.column.identifier;\r\n                    if (columns[columnIdentifier] == null) {\r\n                        columns[columnIdentifier] = [symbol];\r\n                        columnIdentifiers.push(columnIdentifier);\r\n                    } else {\r\n                        columns[columnIdentifier].push(symbol);\r\n                    }\r\n                } else if (symbol.table != null && completionHint.hintTables) {\r\n                    if (!tableIdentifiers[symbol.identifier]) {\r\n                        let insertText = praefix + symbol.identifier + suffix;\r\n                        completionItems.push({\r\n                            label: symbol.identifier,\r\n                            detail: \"Tabelle \" + symbol.table.identifier,\r\n                            filterText: symbol.identifier,\r\n                            insertText: insertText,\r\n                            insertTextRules: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                            kind: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemKind.Snippet : monaco.languages.CompletionItemKind.Class,\r\n                            range: undefined,\r\n                            sortText: \"aa\" + symbol.identifier\r\n                        });\r\n                        tableIdentifiers[symbol.identifier] = true;\r\n                    }\r\n                }\r\n            }\r\n            st = st.parent;\r\n        }\r\n\r\n        if (completionHint.hintColumns) {\r\n            for (let ci of columnIdentifiers) {\r\n                let columList = columns[ci];\r\n                let withTable = columList.length > 1 && completionHint.hintColumnsOfTable == null;\r\n                for (let cs of columList) {\r\n                    let text = cs.identifier;\r\n                    if (withTable && cs.identifier == cs.column.identifier.toLowerCase()) {\r\n                        text = (cs.tableAlias == null ? cs.column.table.identifier : cs.tableAlias) + \".\" + text;\r\n                    }\r\n                    if (completionHint.hintColumnsOfTable == null || cs.column?.table?.identifier == completionHint.hintColumnsOfTable) {\r\n                        let insertText = praefix + text + suffix;\r\n                        completionItems.push({\r\n                            label: text,\r\n                            detail: \"Die Spalte \" + cs.column.identifier + \" der Tabelle \" + cs.column.table.identifier,\r\n                            filterText: text,\r\n                            insertText: insertText,\r\n                            insertTextRules: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                            kind: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemKind.Snippet : monaco.languages.CompletionItemKind.Field,\r\n                            range: undefined\r\n                        })\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    keywordToSnippetMap: { [keyword: string]: string } = {\r\n        \"(\": \"(\\n\\t$0\\n)\",\r\n        \"varchar\": \"varchar($1) $0\",\r\n        \"decimal\": \"decimal($1, $2) $0\"\r\n    }\r\n\r\n    addKeywordCompletionItems(completionHint: CompletionHint, completionItems: monaco.languages.CompletionItem[]) {\r\n        let praefix: string = completionHint.praefix == null ? \"\" : completionHint.praefix;\r\n        let suffix: string = completionHint.suffix == null ? \"\" : completionHint.suffix;\r\n\r\n\r\n        for (let text of completionHint.hintKeywords) {\r\n            let insertText = praefix + text + suffix;\r\n            let snippet = this.keywordToSnippetMap[text];\r\n\r\n            let ci = this.keywordCompletionItems.get(text);\r\n            if (ci != null) {\r\n                completionItems.push(ci);\r\n            } else if (snippet != null) {\r\n                let label = snippet.replace(\"$0\", \"\").replace(\"$1\", \"\").replace(\"$2\", \"\").replace(/ /g, \"\").replace(/\\n/g, \"\").replace(/\\t/g, \"\");\r\n                completionItems.push({\r\n                    label: label,\r\n                    detail: \"\",\r\n                    filterText: text,\r\n                    insertText: snippet,\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                })\r\n            } else {\r\n                completionItems.push({\r\n                    label: text,\r\n                    detail: \"\",\r\n                    filterText: text,\r\n                    insertText: text,\r\n                    insertTextRules: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                    kind: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemKind.Snippet : monaco.languages.CompletionItemKind.Keyword,\r\n                    range: undefined,\r\n                    sortText: text == \"from\" ? \"*\" : undefined\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    isStringLiteral(module: Module, position: monaco.Position) {\r\n\r\n        let tokenList = module.tokenList;\r\n        if (tokenList == null || tokenList.length == 0) return false;\r\n\r\n        let posMin = 0;\r\n        let posMax = tokenList.length - 1;\r\n        let pos: number;\r\n\r\n        let watchDog = 1000;\r\n\r\n        while (true) {\r\n            let posOld = pos;\r\n            pos = Math.round((posMax + posMin) / 2);\r\n\r\n            if (posOld == pos) return false;\r\n\r\n            watchDog--;\r\n            if (watchDog == 0) return false;\r\n\r\n            let t = tokenList[pos];\r\n            let p = t.position;\r\n\r\n            if (p.line < position.lineNumber || p.line == position.lineNumber && p.column + p.length < position.column) {\r\n                posMin = pos;\r\n                continue;\r\n            }\r\n\r\n            if (p.line > position.lineNumber || p.line == position.lineNumber && p.column > position.column) {\r\n                posMax = pos;\r\n                continue;\r\n            }\r\n\r\n            return t.tt == TokenType.stringConstant;\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    setupKeywordCompletionItems() {\r\n        this.keywordCompletionItems.set(\"delete from\",\r\n            {\r\n                label: \"delete from <Tabelle> where <Bedingung>\",\r\n                detail: \"Anweisung zum Löschen von Datensätzen\",\r\n                filterText: `delete from`,\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `delete from `,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"drop table\",\r\n            {\r\n                label: \"drop table <Tabelle>\",\r\n                detail: \"Anweisung zum Löschen einer Tabelle\",\r\n                filterText: 'drop table',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `drop table `,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"alter\",\r\n            {\r\n                label: \"alter table <Tabelle> <rename to, rename column, add column, drop column>\",\r\n                detail: \"Anweisung zum Ändern des Schemas (alter table <Tabelle> <rename to, rename column, add column, drop column>)\",\r\n                filterText: 'alter',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `alter table `,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"select\",\r\n            {\r\n                label: \"select <Spalten> from <Tabellen> where <Bedingung>\",\r\n                detail: \"Select-Anweisung\",\r\n                filterText: 'select',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `select * from $1\\nwhere $0\\n`,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"create table\",\r\n            {\r\n                label: \"create table <Tabellenbezeichner> (<Spaltendefinitionen>)\",\r\n                detail: \"Create table-Anweisung (Erstellt eine neue Tabelle)\",\r\n                filterText: 'create',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `create table $1 (\\n\\t$0\\n);`,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        // this.keywordCompletionItems.set(\"from\",\r\n        //     {\r\n        //         label: \"from <Tabellen> where <Bedingung>\",\r\n        //         detail: \"from-Teil der select-Anweisung\",\r\n        //         filterText: 'from',\r\n        //         // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n        //         insertText: `from $1\\nwhere $0\\n`,\r\n        //         command: {\r\n        //             id: \"editor.action.triggerSuggest\",\r\n        //             title: '123',\r\n        //             arguments: []\r\n        //         },\r\n        //         insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n        //         kind: monaco.languages.CompletionItemKind.Snippet,\r\n        //         range: undefined\r\n        //     });\r\n\r\n    }\r\n\r\n\r\n}","import { Module, MethodCallPosition } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\n\r\n\r\nexport class MySignatureHelpProvider implements monaco.languages.SignatureHelpProvider {\r\n\r\n    signatureHelpTriggerCharacters?: readonly string[] = ['(', ',', ';', '<', '>', '=']; // semicolon, <, >, = for for-loop, if, while, ...\r\n    signatureHelpRetriggerCharacters?: readonly string[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    provideSignatureHelp(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let that = this;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            setTimeout(() => {\r\n\r\n                this.main.compileIfDirty();\r\n\r\n                resolve(that.provideSignatureHelpLater(model, position, token, context));\r\n\r\n            }, 300);\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    provideSignatureHelpLater(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model != this.main.getMonacoEditor().getModel());\r\n\r\n        let module: Module = \r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        // let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        // let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let methodCallPositions = module.methodCallPositions[position.lineNumber];\r\n\r\n        if (methodCallPositions == null) return null;\r\n\r\n        let methodCallPosition: MethodCallPosition = null;\r\n        let rightMostPosition: number = -1;\r\n\r\n        for (let i = methodCallPositions.length - 1; i >= 0; i--) {\r\n            let mcp = methodCallPositions[i];\r\n            if (mcp.identifierPosition.column + mcp.identifierPosition.length < position.column\r\n                && mcp.identifierPosition.column > rightMostPosition) {\r\n                if (mcp.rightBracketPosition == null ||\r\n                    (position.lineNumber <= mcp.rightBracketPosition.line && position.column <= mcp.rightBracketPosition.column)\r\n                    || (position.lineNumber < mcp.rightBracketPosition.line)) {\r\n                    methodCallPosition = mcp;\r\n                    rightMostPosition = mcp.identifierPosition.column;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (methodCallPosition == null) return null;\r\n\r\n        return this.getSignatureHelp(methodCallPosition, position);\r\n\r\n\r\n\r\n    }\r\n\r\n    getSignatureHelp(methodCallPosition: MethodCallPosition,\r\n        position: monaco.Position): monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let parameterIndex: number = 0;\r\n\r\n        for (let cp of methodCallPosition.commaPositions) {\r\n            if (cp.line < position.lineNumber || (cp.line == position.lineNumber && cp.column < position.column)) {\r\n                parameterIndex++;\r\n            }\r\n        }\r\n\r\n        let signatureInformationList: monaco.languages.SignatureInformation[] = [];\r\n\r\n        return Promise.resolve({\r\n            value: {\r\n                activeParameter: parameterIndex,\r\n                activeSignature: 0,\r\n                signatures: signatureInformationList\r\n            },\r\n            dispose: () => { }\r\n        });\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\n\r\n\r\n\r\nexport class MyHoverProvider {\r\n\r\n    private static keywordDescriptions: { [keyword: string]: string } = {\r\n        \"print\": \"Die Anweisung ```print``` gibt eine Zeichenkette aus.\",\r\n        \"new\": \"Das Schlüsselwort ```new``` bewirkt die Instanzierung (\\\"Erschaffung\\\") eines neuen Objektes einer Klasse.\",\r\n        \"println\": \"Die Anweisung ```println``` gibt eine Zeichenkette gefolgt von einem Zeilenumbruch aus.\",\r\n        \"while\": \"```\\nwhile (Bedingung) {Anweisungen}\\n```  \\nbewirkt die Wiederholung der Anweisungen solange ```Bedingung == true``` ist.\",\r\n        \"for\": \"```\\nfor(Startanweisung;Solange-Bedingung;Nach_jeder_Wiederholung){Anweisungen}\\n```  \\n\"\r\n            + \"führt zunächst die Startanweisung aus und wiederholt dann die Anweisungen solange ```Bedingung == true``` ist. Am Ende jeder wiederholung wird Nach_jeder_Wiederholung ausgeführt.\",\r\n        \"if\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.  \\nDer ```else```-Teil kann auch weggelassen werden.\",\r\n        \"else\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.\",\r\n        \"switch\": \"```\\nswitch(Selektor){ case Wert_1: Anweisungen_1; break; case Wert_2: Anweisungen_2; break; default: Default-Anweisungen } \\n```  \\nwertet den Selektor-Term aus und führt abhängig vom Termwert Anweisungen_1, Anweisungen_2, ... aus. Entspricht der Termwert keinem der Werte Wert_1, Wert_2, ..., so werden die Default-Anweisungen ausgeführt.\",\r\n        \"%\": \"```\\na % b\\n```  \\n (sprich: 'a modulo b') berechnet den **Rest** der ganzzahligen Division a/b.\",\r\n        \"==\": \"```\\na == b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` gleich sind.  \\nSind a und b **Objekte**, so ergibt ```a == b``` nur dann ```true```, wenn ```a``` und ```b``` auf das **identische** Objekt zeigen.  \\n```==``` nennt man **Vergleichsoperator**.\",\r\n        \"<=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` kleiner oder gleich dem Wert von ```b``` ist.\",\r\n        \">=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` größer oder gleich dem Wert von ```b``` ist.\",\r\n        \"!=\": \"```\\na != b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` **un**gleich sind.  \\nSind ```a``` und ```b``` **Objekte**, so ergibt ```a != b``` dann ```true```, wenn ```a``` und ```b``` **nicht** auf das **identische** Objekt zeigen.  \\n```!=``` nennt man **Ungleich-Operator**.\",\r\n        \"+=\": \"```\\na += b\\n(Kurzschreibweise für a = a + b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erhöht** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"-=\": \"```\\na -= b\\n(Kurzschreibweise für a = a - b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erniedrigt** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"*=\": \"```\\na *= b\\n(Kurzschreibweise für a = a * b)\\n```  \\nbewirkt, dass der Wert von ```a``` mit dem Wert von ```b``` **multipliziert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"/=\": \"```\\na /= b\\n(Kurzschreibweise für a = a / b)\\n```  \\nbewirkt, dass der Wert von ```a``` durch den Wert von ```b``` **dividiert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"++\": \"```\\na++\\n(Kurzschreibweise für a = a + 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins erhöht wird.\",\r\n        \"--\": \"```\\na--\\n(Kurzschreibweise für a = a - 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins eniedrigt wird.\",\r\n        \"=\": \"```\\na = Term\\n```  \\nberechnet den Wert des Terms und weist ihn der Variablen ```a``` zu.  \\n**Vorsicht:**  \\nVerwechsle ```=```(**Zuweisungsoperator**) nicht mit ```==```(**Vergleichsoperator**)!\",\r\n        \"!\": \"```\\n!a\\n```  \\nergibt genau dann ```true```, wenn ```a``` ```false``` ergibt.  \\n```!``` spricht man '**nicht**'.\",\r\n        \"public\": \"```\\npublic\\n```  \\nAttribute und Methoden, die als ```public``` deklariert werden, sind überall (auch außerhalb der Klasse) sichtbar.\",\r\n        \"private\": \"```\\nprivate\\n```  \\nAttribute und Methoden, die als ```private``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse sichtbar.\",\r\n        \"protected\": \"```\\nprotected\\n```  \\nAttribute und Methoden, die als ```protected``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse oder innerhalb von Methoden von Kindklassen sichtbar.\",\r\n        \"return\": \"```\\nreturn Term\\n```  \\nbewirkt, dass die Methode verlassen wird und der Wert des Terms an die aufrufende Stelle zurückgegeben wird.\",\r\n        \"break\": \"```\\nbreak;\\n```  \\ninnerhalb einer Schleife bewirkt, dass die Schleife sofort verlassen und mit den Anweisungen nach der Schleife fortgefahren wird.  \\n\"+\r\n        \"```break``` innerhalb einer ```switch```-Anweisung bewirkt, dass der Block der ```switch```-Anweisung verlassen wird.\",\r\n        \"class\": \"```\\nclass\\n```  \\nMit dem Schlüsselwort ```class``` werden Klassen definiert.\",\r\n        \"extends\": \"```\\nextends\\n```  \\n```class A extends B { ... }``` bedeutet, dass die Klasse A Unterklasse der Klasse B ist.\",\r\n        \"implements\": \"```\\nimplements\\n```  \\n```class A implements B { ... }``` bedeutet, dass die Klasse A das Interface B implementiert, d.h., dass sie alle Methoden besitzen muss, die in B definiert sind.\",\r\n        \"this\": \"```\\nthis\\n```  \\nInnerhalb einer Methodendefinition bezeichnet das Schlüsselwor ```this``` immer dasjenige Objekt, für das die Methode gerade ausgeführt wird.\",\r\n\r\n    }\r\n\r\n    constructor(private editor: Editor) {\r\n\r\n    }\r\n\r\n    provideHover(model: monaco.editor.ITextModel, position: monaco.Position, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Hover> {\r\n\r\n        let selection: monaco.Selection = this.editor.editor.getSelection();\r\n        \r\n        // if cursor is inside current selection then don't show hover, because editor.onDidChangeCursorPosition evaluates selected Text \r\n        // (see class Editor).\r\n        if(selection != null){\r\n            if(selection.startLineNumber != selection.endLineNumber || selection.startColumn != selection.endColumn){\r\n                if(\r\n                    (selection.startLineNumber < position.lineNumber || selection.startLineNumber == position.lineNumber && selection.startColumn <= position.column) && \r\n                    (selection.endLineNumber > position.lineNumber || selection.endLineNumber == position.lineNumber && selection.endColumn >= position.column) \r\n                ){\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        let module: Module = this.editor.main.getCurrentWorkspace()?.getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        for(let errorList of module.errors){\r\n            for(let error of errorList){\r\n                if(error.position.line == position.lineNumber && \r\n                    error.position.column <= position.column && \r\n                    error.position.column + error.position.length >= position.column){\r\n                        return null; // Show error-tooltip and don't show hover-tooltip\r\n                    }\r\n            }\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let declarationAsString = \"\";\r\n\r\n        if (element != null) {\r\n        } else {\r\n            let word = this.getWordUnderCursor(model, position);\r\n            let desc = MyHoverProvider.keywordDescriptions[word];\r\n            if (desc != null) {\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: desc }],\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getWordUnderCursor(model: monaco.editor.ITextModel, position: monaco.Position)\r\n         : string {\r\n        \r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let word = \"\";\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierOrArrayDescriptor(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        if (end - begin > 1) {\r\n            word = text.substring(begin, end);\r\n        } else {\r\n            end = pos;\r\n            while (end < text.length && this.isInsideOperator(text.charAt(end))) {\r\n                end++;\r\n            }\r\n    \r\n            begin = pos;\r\n            while (begin > 0 && this.isInsideOperator(text.charAt(begin - 1))) {\r\n                begin--;\r\n            }\r\n    \r\n            if (end - begin > 0) {\r\n                word = text.substring(begin, end);\r\n            }\r\n        }\r\n\r\n        return word;\r\n\r\n    }\r\n\r\n    widenDeclaration(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        identifier: string): string {\r\n\r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierChain(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        let lenght: number = identifier?.length == null ? 1 : identifier.length;\r\n\r\n        if (end - begin > length) {\r\n            return text.substring(begin, end);\r\n        }\r\n\r\n        return identifier;\r\n    }\r\n\r\n    isInsideIdentifierChain(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß_\\[\\]\\.]/i);\r\n\r\n    }\r\n\r\n    isInsideOperator(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[!%<>=\\+\\-\\*\\/]/i);\r\n\r\n    }\r\n\r\n    isInsideIdentifierOrArrayDescriptor(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß\\[\\]]/i);\r\n\r\n    }\r\n\r\n\r\n}","import { QuickFix } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyCodeActionProvider implements monaco.languages.CodeActionProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideCodeActions(model: monaco.editor.ITextModel, range: monaco.Range, context: monaco.languages.CodeActionContext, token: monaco.CancellationToken): monaco.languages.CodeActionList | Promise<monaco.languages.CodeActionList> {\r\n        const actions = context.markers.map(error => {\r\n            let quickFix: QuickFix = <any>error.relatedInformation;\r\n            if (quickFix == null) return null;\r\n\r\n            let codeAction: monaco.languages.CodeAction = {\r\n                title: quickFix.title,\r\n                diagnostics: [error],\r\n                kind: \"quickfix\",\r\n                edit: {\r\n                    edits: quickFix.editsProvider(model.uri)\r\n                },\r\n                isPreferred: true\r\n            };\r\n            return codeAction;\r\n        });\r\n        return {\r\n            actions: actions,\r\n            dispose: () => { }\r\n        }\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Editor } from \"./Editor.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyReferenceProvider implements monaco.languages.ReferenceProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideReferences(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.ReferenceContext, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Location[]> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) return null;\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let referencePositions: monaco.languages.Location[] = [];\r\n\r\n        usagePositions.forEach((upInCurrentModule, module) => {\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    referencePositions.push(\r\n                        {\r\n                            uri: module.uri,\r\n                            range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length }\r\n                        });\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        return referencePositions;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import { Main } from \"../Main.js\";\r\n\r\nexport type HelperDirection = \"top\" | \"bottom\" | \"left\" | \"right\";\r\n\r\nexport class Helper {\r\n\r\n    public static openHelper(text: string, targetElement: JQuery<HTMLElement>, direction: HelperDirection) {\r\n\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.removeClass(['jo_arrow_box_left', 'jo_arrow_box_right', 'jo_arrow_box_top', 'jo_arrow_box_bottom']);\r\n\r\n        $helper.addClass('jo_arrow_box_' + direction);\r\n\r\n        $helper.css({ left: '', right: '', top: '', bottom: '' });\r\n\r\n        let to = targetElement.offset();\r\n        let b = jQuery('body');\r\n\r\n        let delta: number = 34;\r\n\r\n        switch (direction) {\r\n            case \"bottom\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                bottom: b.height() - to.top + delta\r\n            });\r\n                break;\r\n            case \"top\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                top: to.top + targetElement.height() + 26\r\n            });\r\n                break;\r\n            case \"left\": $helper.css({\r\n                left: to.left + targetElement.width() + delta,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n            case \"right\": $helper.css({\r\n                right: b.width() - to.left,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n        }\r\n\r\n        $helper.find('span').html(text);\r\n\r\n        let $button = $helper.find('.jo_button');\r\n        $button.on('click', (e) => {\r\n            e.stopPropagation();\r\n            $button.off('click');\r\n            Helper.close();\r\n        });\r\n\r\n        $helper.fadeIn(800);\r\n\r\n    }\r\n\r\n    static close() {\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.fadeOut(800);\r\n    }\r\n\r\n\r\n    static showHelper(id: string, mainBase: Main, $element?: JQuery<HTMLElement>) {\r\n\r\n        let main: Main;\r\n        if(mainBase instanceof Main){\r\n            main = mainBase;\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        let helperHistory = main.user.settings!.helperHistory;\r\n\r\n        let flag = id + \"Done\";\r\n\r\n        if (helperHistory != null && (helperHistory[flag] == null || !helperHistory[flag])) {\r\n            helperHistory[flag] = true;\r\n            main.networkManager.sendUpdateUserSettings(() => { });\r\n\r\n            let text: string = \"\";\r\n            let direction: HelperDirection = \"left\";\r\n\r\n            switch (id) {\r\n                case \"newDatabaseHelper\":\r\n                    text = `Es gibt noch keine Datenbank. <br> Nutzen Sie den Button\r\n                        <span class='img_add-database-dark jo_inline-image'></span> um eine Datenbank anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                    case \"newSQLFileHelper\":\r\n                        text = `Es gibt noch keine Datei mit SQL-Anweisungen. <br> Nutzen Sie den Button \r\n                            <span class='img_add-file-dark jo_inline-image'></span> um eine neue Datei anzulegen.\r\n                            `;\r\n                        direction = \"left\";\r\n                        break;\r\n                case \"homeButtonHelper\":\r\n                    text = \"Mit dem Home-Button <span class='img_home-dark jo_inline-image'></span> können Sie wieder zu Ihren eigenen Workspaces wechseln.\";\r\n                    direction = \"top\";\r\n                    $element = jQuery('.img_home-dark');\r\n                    break;\r\n                case \"playButtonHelper\":\r\n                    text = `Mit dem \"Start-Button\"\r\n                        (<span class='img_start-dark jo_inline-image'></span>) \r\n                        oder der Tastenkombination &lt;Strg&gt;&nbsp;+&nbsp&lt;Enter&gt; \r\n                        wird die Anweisung ausgeführt, in der der Cursor gerade steht. \r\n                        <br> Wollen Sie mehrere Anweisungen hintereinander ausführen, so markieren \r\n                        Sie alle Anweisungen und klicken Sie dann auf <span class='img_start-dark jo_inline-image'></span>\r\n                        oder drücken Sie  &lt;Strg&gt;&nbsp;+&nbsp&lt;Enter&gt;. `;\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"consoleHelper\": \r\n                    text=`\r\n                        Hier können Sie Anweisungen oder Terme eingeben, die nach Bestätigung mit der Enter-Taste ausgeführt/ausgewertet werden. Das Ergebnis sehen Sie im Bereich über der Eingabezeile. <br>\r\n                        Falls das Programm gerade pausiert (z.B. bei Ausführung in Einzelschritten) können Sie auch auf die Variablen des aktuellen Sichtbarkeitsbereiches zugreifen.\r\n                    `;\r\n                    direction = \"bottom\";\r\n            }\r\n\r\n            if (text != \"\" && $element != null && $element.length > 0) {\r\n                Helper.openHelper(text, $element, direction);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MyCompletionItemProvider } from \"./MyCompletionItemProvider.js\";\r\nimport { defineMyJava } from \"./MyJava.js\";\r\nimport { MySignatureHelpProvider } from \"./MySignatureHelpProvider.js\";\r\nimport { MyHoverProvider } from \"./MyHoverProvider.js\";\r\nimport { MyCodeActionProvider } from \"./MyCodeActionProvider.js\";\r\nimport { MyReferenceProvider } from \"./MyReferenceProvider.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { defineVscSQL } from \"./VscSql.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\nexport class Editor {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n\r\n    cw: monaco.editor.IContentWidget = null;\r\n\r\n    dontPushNextCursorMove: number = 0;\r\n\r\n    constructor(public main: MainBase, private showMinimap: boolean, private isEmbedded: boolean) {\r\n    }\r\n\r\n    initGUI($element: JQuery<HTMLElement>) {\r\n\r\n\r\n\r\n        defineVscSQL();\r\n\r\n        monaco.editor.defineTheme('myCustomThemeDark', {\r\n            base: 'vs-dark', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'functions', foreground: 'dcdcaa', fontStyle: 'italic' },\r\n                { token: 'string.sql', foreground: '3DC9B0' },\r\n                { token: 'number', foreground: '7bef3f' },\r\n                { token: 'type', foreground: '499cd6' },\r\n                { token: 'identifier', foreground: 'effefe' },\r\n                { token: 'statement', foreground: '9cdcfe', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '619ceb', fontStyle: 'bold' },\r\n                { token: 'table', foreground: 'ff0000', fontStyle: 'bold' },\r\n                { token: 'delimiter', foreground: 'e8eb38' }\r\n                // { token: 'comment.js', foreground: '008800', fontStyle: 'bold italic underline' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#1e1e1e\",\r\n                \"jo_highlightStatementGreen\": \"#004000\",\r\n                \"jo_highlightStatementYellow\": \"#404000\",\r\n                \"jo_highlightStatementRed\": \"#402020\"\r\n            }\r\n        });\r\n\r\n        monaco.editor.defineTheme('myCustomThemeLight', {\r\n            base: 'vs', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'functions', foreground: '694E16', fontStyle: 'italic bold' },\r\n                { token: 'string.sql', foreground: 'a03030' },\r\n                { token: 'number', foreground: '404040' },\r\n                { token: 'type', foreground: '0000ff', fontStyle: 'bold' },\r\n                { token: 'identifier', foreground: '8000e0' },\r\n                { token: 'statement', foreground: '001080', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '00a000', fontStyle: 'bold' },\r\n                { token: 'comment', foreground: '808080', fontStyle: 'italic' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#FFFFFF\",\r\n                \"editor.foreground\": \"#000000\",\r\n                \"editor.inactiveSelectionBackground\": \"#E5EBF1\",\r\n                \"editorIndentGuide.background\": \"#D3D3D3\",\r\n                \"editorIndentGuide.activeBackground\": \"#939393\",\r\n                \"editor.selectionHighlightBackground\": \"#ADD6FF80\",\r\n                \"editorSuggestWidget.background\": \"#F3F3F3\",\r\n                \"activityBarBadge.background\": \"#007ACC\",\r\n                \"sideBarTitle.foreground\": \"#6F6F6F\",\r\n                \"list.hoverBackground\": \"#E8E8E8\",\r\n                \"input.placeholderForeground\": \"#767676\",\r\n                \"searchEditor.textInputBorder\": \"#CECECE\",\r\n                \"settings.textInputBorder\": \"#CECECE\",\r\n                \"settings.numberInputBorder\": \"#CECECE\",\r\n                \"statusBarItem.remoteForeground\": \"#FFF\",\r\n                \"statusBarItem.remoteBackground\": \"#16825D\",\r\n                \"jo_highlightStatementGreen\": \"#004000\",\r\n                \"jo_highlightStatementYellow\": \"#404000\",\r\n                \"jo_highlightStatementRed\": \"#400000\"\r\n            }\r\n        });\r\n\r\n\r\n        this.editor = monaco.editor.create($element[0], {\r\n            // value: [\r\n            //     'function x() {',\r\n            //     '\\tconsole.log(\"Hello world!\");',\r\n            //     '}'\r\n            // ].join('\\n'),\r\n            // language: 'myJava',\r\n            language: 'vscSQL',\r\n            lightbulb: {\r\n                enabled: true\r\n            },\r\n            // gotoLocation: {\r\n            //     multipleReferences: \"gotoAndPeek\"\r\n            // },\r\n            lineDecorationsWidth: 0,\r\n            peekWidgetDefaultFocus: \"tree\",\r\n            fixedOverflowWidgets: true,\r\n            quickSuggestions: true,\r\n            quickSuggestionsDelay: 10,\r\n            fontSize: 14,\r\n            fontFamily: \"Consolas, Roboto Mono\",\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            selectOnLineNumbers: false,\r\n            // selectionHighlight: false,\r\n            automaticLayout: true,\r\n            scrollBeyondLastLine: false,\r\n            occurrencesHighlight: false,\r\n            autoIndent: \"full\",\r\n            dragAndDrop: true,\r\n            formatOnType: true,\r\n            formatOnPaste: true,\r\n            suggestFontSize: 16,\r\n            suggestLineHeight: 22,\r\n            suggest: {\r\n                localityBonus: true,\r\n                insertMode: \"replace\"\r\n                // snippetsPreventQuickSuggestions: false\r\n            },\r\n            parameterHints: { enabled: true, cycle: true },\r\n            // //@ts-ignore\r\n            // contribInfo: {\r\n            //     suggestSelection: 'recentlyUsedByPrefix',\r\n            // },\r\n\r\n            mouseWheelZoom: this.isEmbedded,\r\n\r\n            minimap: {\r\n                enabled: this.showMinimap\r\n            },\r\n            scrollbar: {\r\n                vertical: 'auto',\r\n                horizontal: 'auto'\r\n            },\r\n            theme: \"myCustomThemeDark\",\r\n            // automaticLayout: true\r\n\r\n\r\n        }\r\n        );\r\n\r\n        let that = this;\r\n\r\n        let mouseWheelListener = (event: WheelEvent) => {\r\n            if (event.ctrlKey === true) {\r\n\r\n                that.changeEditorFontSize(Math.sign(event.deltaY), true);\r\n\r\n                event.preventDefault();\r\n            }\r\n        };\r\n\r\n\r\n        this.editor.onDidChangeConfiguration((event) => {\r\n            if (event.hasChanged(monaco.editor.EditorOption.fontInfo) && this.isEmbedded) {\r\n\r\n                this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n            }\r\n        });\r\n\r\n        this.editor.onDidChangeCursorPosition((event) => {\r\n\r\n            that.onDidChangeCursorPosition(event.position);\r\n\r\n        });\r\n\r\n        // We need this to set our model after user uses Strg+click on identifier\r\n        this.editor.onDidChangeModel((event) => {\r\n\r\n            let element: HTMLDivElement = <any>$element.find('.monaco-editor')[0];\r\n            element.removeEventListener(\"wheel\", mouseWheelListener);\r\n            element.addEventListener(\"wheel\", mouseWheelListener, { passive: false });\r\n\r\n            if (this.main.getCurrentWorkspace() == null) return;\r\n\r\n            let module = this.main.getCurrentWorkspace().getModuleByMonacoModel(this.editor.getModel());\r\n            if (this.main instanceof Main && module != null) {\r\n\r\n                this.main.projectExplorer.setActiveAfterExternalModelSet(module);\r\n            }\r\n        });\r\n\r\n        monaco.languages.registerHoverProvider('vscSQL', new MyHoverProvider(this));\r\n\r\n        monaco.languages.registerCompletionItemProvider('vscSQL', new MyCompletionItemProvider(this.main));\r\n        monaco.languages.registerCodeActionProvider('vscSQL', new MyCodeActionProvider(this.main));\r\n        monaco.languages.registerReferenceProvider('vscSQL', new MyReferenceProvider(this.main));\r\n\r\n\r\n        monaco.languages.registerSignatureHelpProvider('vscSQL', new MySignatureHelpProvider(this.main));\r\n\r\n        this.editor.onMouseDown((e: monaco.editor.IEditorMouseEvent) => {\r\n            const data = e.target.detail;\r\n            if (e.target.type !== monaco.editor.MouseTargetType.GUTTER_GLYPH_MARGIN &&\r\n                e.target.type !== monaco.editor.MouseTargetType.GUTTER_LINE_NUMBERS || data.isAfterLines) {\r\n                return;\r\n            }\r\n            that.onMarginMouseDown(e.target.position.lineNumber);\r\n            return;\r\n        });\r\n\r\n\r\n        // If editor is instantiated before fonts are loaded then indentation-lines\r\n        // are misplaced, see https://github.com/Microsoft/monaco-editor/issues/392\r\n        // so:\r\n        setTimeout(() => {\r\n            monaco.editor.remeasureFonts();\r\n        }, 2000);\r\n\r\n        this.addActions();\r\n\r\n        //@ts-ignore\r\n        this.editor.onDidType((text) => { that.onDidType(text) });\r\n\r\n        return this.editor;\r\n    }\r\n\r\n\r\n    onDidType(text: string) {\r\n        //        const endOfCommentText = \" * \\n */\";\r\n\r\n        const insertEndOfComment = (pos, insertText: string, newLine: number, newColumn: number) => {\r\n            const range = new monaco.Range(\r\n                pos.lineNumber,\r\n                pos.column,\r\n                pos.lineNumber,\r\n                pos.column\r\n            );\r\n            this.editor.executeEdits(\"new-bullets\", [\r\n                { range, text: insertText }\r\n            ]);\r\n\r\n            // Set position after bulletText\r\n            this.editor.setPosition({\r\n                lineNumber: newLine,\r\n                column: newColumn\r\n            });\r\n        };\r\n\r\n        if (text === \"\\n\") {\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            const prevLine = model.getLineContent(position.lineNumber - 1);\r\n            if (prevLine.trim().indexOf(\"/*\") === 0 && !prevLine.trimRight().endsWith(\"*/\")) {\r\n                const nextLine = position.lineNumber < model.getLineCount() ? model.getLineContent(position.lineNumber + 1) : \"\";\r\n                if (!nextLine.trim().startsWith(\"*\")) {\r\n                    let spacesAtBeginningOfLine: string = prevLine.substr(0, prevLine.length - prevLine.trimLeft().length);\r\n                    if (prevLine.trim().indexOf(\"/**\") === 0) {\r\n                        insertEndOfComment(position, \"\\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    } else {\r\n                        insertEndOfComment(position, \" * \\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    lastTime: number = 0;\r\n    setFontSize(fontSizePx: number) {\r\n\r\n        // console.log(\"Set font size: \" + fontSizePx);\r\n        let time = new Date().getTime();\r\n        if (time - this.lastTime < 150) return;\r\n        this.lastTime = time;\r\n\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (this.main instanceof Main) {\r\n            this.main.viewModeController.saveFontSize(fontSizePx);\r\n        }\r\n\r\n        if (fontSizePx != editorfs) {\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx\r\n            });\r\n\r\n            // editor does not set fontSizePx, but fontSizePx * zoomfactor with unknown zoom factor, so \r\n            // we have to do this dirty workaround:\r\n            let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n            let factor = newEditorfs / fontSizePx;\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx / factor\r\n            });\r\n\r\n        }\r\n\r\n        jQuery('.jo_editorFontSize').css('font-size', fontSizePx + \"px\");\r\n        jQuery('.jo_editorFontSize').css('line-height', (fontSizePx + 2) + \"px\");\r\n\r\n        document.documentElement.style.setProperty('--breakpoint-size', fontSizePx + 'px');\r\n        document.documentElement.style.setProperty('--breakpoint-radius', fontSizePx / 2 + 'px');\r\n\r\n\r\n        this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n    }\r\n\r\n    changeEditorFontSize(delta: number, dynamic: boolean = true) {\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (dynamic) {\r\n            if (editorfs < 10) {\r\n                delta *= 1;\r\n            } else if (editorfs < 20) {\r\n                delta *= 2;\r\n            } else {\r\n                delta *= 4;\r\n            }\r\n        }\r\n\r\n        let newEditorFs = editorfs + delta;\r\n        if (newEditorFs >= 6 && newEditorFs <= 80) {\r\n            this.setFontSize(newEditorFs);\r\n        }\r\n    }\r\n\r\n\r\n    addActions() {\r\n        let that = this;\r\n\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Find bracket',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'Finde korrespondierende Klammer',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.5,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                ed.getAction('editor.action.jumpToBracket').run();\r\n                return null;\r\n            }\r\n        });\r\n\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Execute statement',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'SQL-Anweisung ausführen',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.Enter],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.0,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                that.main.getActionManager().trigger('execute');\r\n                return null;\r\n            }\r\n        });\r\n\r\n        //console.log(this.editor.getSupportedActions());\r\n    }\r\n\r\n    onMarginMouseDown(lineNumber: number) {\r\n\r\n    }\r\n\r\n    elementDecoration: string[] = [];\r\n    onDidChangeCursorPosition(position: { lineNumber: number, column: number }) {\r\n\r\n        if (position == null) position = this.editor.getPosition();\r\n\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, []);\r\n            return;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        if (element != null) {\r\n            let usagePositions = element.usagePositions;\r\n            let upInCurrentModule = usagePositions.get(module);\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    decorations.push({\r\n                        range: { startColumn: up.column, startLineNumber: up.line, endColumn: up.column + up.length, endLineNumber: up.line },\r\n                        options: {\r\n                            className: 'jo_revealSyntaxElement', isWholeLine: false, overviewRuler: {\r\n                                color: { id: \"editorIndentGuide.background\" },\r\n                                darkColor: { id: \"editorIndentGuide.activeBackground\" },\r\n                                position: monaco.editor.OverviewRulerLane.Left\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        let executeActionActive = false;\r\n\r\n        for(let sqlStatement of module.getSQLSTatementsAtSelection(this.editor.getSelection())){\r\n\r\n            let classname = \"jo_highlightStatementGreen\";\r\n            if (sqlStatement != null) {\r\n                if (sqlStatement.hasErrors) {\r\n                    classname = \"jo_highlightStatementRed\";\r\n                    if (sqlStatement.acceptedBySQLite) {\r\n                        classname = \"jo_highlightStatementYellow\";\r\n                        executeActionActive = true;\r\n                    }\r\n                } else {\r\n                    executeActionActive = true;\r\n                }\r\n    \r\n                decorations.push({\r\n                    range: {\r\n                        startColumn: sqlStatement.from.column, startLineNumber: sqlStatement.from.line,\r\n                        endColumn: sqlStatement.to.column, endLineNumber: sqlStatement.to.line\r\n                    },\r\n                    options: {\r\n                        className: classname, isWholeLine: false, overviewRuler: {\r\n                            color: { id: classname },\r\n                            darkColor: { id: classname },\r\n                            position: monaco.editor.OverviewRulerLane.Left\r\n                        },\r\n                        minimap: {\r\n                            color: { id: classname },\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        },\r\n                        zIndex: -100\r\n                    }\r\n                })\r\n    \r\n            }\r\n        }\r\n\r\n\r\n        this.main.getActionManager().setActive('execute', executeActionActive);\r\n\r\n        if(executeActionActive && !this.main.isEmbedded()){\r\n            Helper.showHelper(\"playButtonHelper\", <any>this.main, jQuery('div.img_start-dark'));\r\n        }\r\n\r\n\r\n        this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, decorations);\r\n\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.main.getCurrentlyEditedModule();\r\n    }\r\n\r\n\r\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport function defineVscSQL() {\r\n    monaco.languages.register({\r\n        id: 'vscSQL',\r\n        extensions: ['.sql'],\r\n        //  mimetypes: [\"text/x-java-source\", \"text/x-java\"]  \r\n    });\r\n\r\n    let conf: monaco.languages.LanguageConfiguration = {\r\n        onEnterRules: [\r\n            {\r\n                // e.g. /** | */\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                afterText: /^\\s*\\*\\/$/,\r\n                action: { indentAction: monaco.languages.IndentAction.IndentOutdent, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g. /** ...|\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g.  * ...|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: '* ' }\r\n            },\r\n            {\r\n                // e.g.  */|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            },\r\n            {\r\n                // e.g.  *-----*/|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*[^/]*\\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            }\r\n        ],\r\n        comments: {\r\n            lineComment: '--',\r\n            blockComment: ['/*', '*/'],\r\n        },\r\n        brackets: [\r\n            ['{', '}'],\r\n            ['[', ']'],\r\n            ['(', ')']\r\n        ],\r\n        autoClosingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ],\r\n        surroundingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ]\r\n    };\r\n    let language = {\r\n\r\n        defaultToken: '',\r\n        tokenPostfix: '.sql',\r\n        ignoreCase: true,\r\n        brackets: [\r\n            { open: '[', close: ']', token: 'delimiter.square' },\r\n            { open: '(', close: ')', token: 'delimiter.parenthesis' }\r\n        ],\r\n        escapes: /\\\\(?:[abfnrtv\\\\\"'])/,\r\n        keywords: [\r\n            \"ABORT\", \"ACTION\", \"ADD\", \"AFTER\", \"ALL\", \"ALTER\", \"ANALYZE\", \"AND\", \"AS\", \"ASC\", \"ATTACH\", \"AUTOINCREMENT\", \"BEFORE\",\r\n            \"BEGIN\", \"BETWEEN\", \"BY\", \"CASCADE\", \"CASE\", \"CAST\", \"CHECK\", \"COLLATE\", \"COLUMN\", \"COMMIT\", \"CONFLICT\", \"CONSTRAINT\",\r\n            \"CREATE\", \"CROSS\", \"CURRENT_DATE\", \"CURRENT_TIME\", \"CURRENT_TIMESTAMP\", \"DATABASE\", \"DEFAULT\", \"DEFERRABLE\", \"DEFERRED\",\r\n            \"DELETE\", \"DESC\", \"DETACH\", \"DISTINCT\", \"DROP\", \"EACH\", \"ELSE\", \"END\", \"ESCAPE\", \"EXCEPT\", \"EXCLUSIVE\", \"EXISTS\", \"EXPLAIN\",\r\n            \"FAIL\", \"FOR\", \"FOREIGN\", \"FROM\", \"FULL\", \"GLOB\", \"GROUP\", \"HAVING\", \"IF\", \"IGNORE\", \"IMMEDIATE\", \"IN\", \"INDEX\", \"INDEXED\",\r\n            \"INITIALLY\", \"INNER\", \"INSERT\", \"INSTEAD\", \"INTERSECT\", \"INTO\", \"IS\", \"ISNULL\", \"JOIN\", \"KEY\", \"LEFT\", \"LIKE\", \"LIMIT\", \"MATCH\",\r\n            \"NATURAL\", \"NO\", \"NOT\", \"NOTNULL\", \"NULL\", \"OF\", \"OFFSET\", \"ON\", \"OR\", \"ORDER\", \"OUTER\", \"PLAN\", \"PRAGMA\", \"PRIMARY\", \"QUERY\",\r\n            \"RAISE\", \"RECURSIVE\", \"REFERENCES\", \"REGEXP\", \"REINDEX\", \"RELEASE\", \"RENAME\", \"REPLACE\", \"RESTRICT\", \"RIGHT\", \"ROLLBACK\", \"ROW\",\r\n            \"SAVEPOINT\", \"SELECT\", \"SET\", \"TABLE\", \"TEMP\", \"TEMPORARY\", \"THEN\", \"TO\", \"TRANSACTION\", \"TRIGGER\", \"UNION\", \"UNIQUE\", \"UPDATE\",\r\n            \"USING\", \"VACUUM\", \"VALUES\", \"VIEW\", \"VIRTUAL\", \"WHEN\", \"WHERE\", \"WITH\", \"WITHOUT\", \"ENGINE\", \"CHARSET\"\r\n        ],\r\n        operators: [\r\n            \"AND\", \"BETWEEN\", \"IN\", \"LIKE\", \"NOT\", \"OR\", \"IS\", \"NULL\", \"INTERSECT\", \"UNION\", \"INNER\", \"JOIN\", \"LEFT\", \"OUTER\", \"RIGHT\"\r\n        ],\r\n        builtinFunctions: [\r\n            \"abs\", \"changes\", \"char\", \"coalesce\", \"count\", \"glob\", \"hex\", \"ifnull\",\r\n            \"iif\", \"instr\", \"last_insert_rowid\", \"length\", \"like\", \"likelihood\", \"likely\",\r\n            \"lower\", \"ltrim\", \"max\", \"min\", \"nullif\", \"quote\", \"random\", \"randomblob\",\r\n            \"replace\", \"round\", \"rtrim\", \"sign\", \"soundex\", \"sqlite_version\", \"substr\", \"substring\",\r\n            \"total_changes\", \"trim\", \"typeof\", \"unicode\", \"unlikely\", \"upper\", \"zeroblob\"\r\n        ],\r\n        builtinVariables: [\r\n            // NOT SUPPORTED\r\n        ],\r\n        pseudoColumns: [\r\n            // NOT SUPPORTED\r\n        ],\r\n        tokenizer: {\r\n            root: [\r\n                { include: '@comments' },\r\n                { include: '@whitespace' },\r\n                { include: '@pseudoColumns' },\r\n                { include: '@numbers' },\r\n                { include: '@strings' },\r\n                { include: '@complexIdentifiers' },\r\n                { include: '@scopes' },\r\n                [/[;,.]/, 'delimiter'],\r\n                [/[()]/, '@brackets'],\r\n                [/[a-z_$äöü][\\w$äöüßÄÖÜ]*(?=\\()/, {\r\n                    cases: {\r\n                        '@builtinFunctions': 'functions',\r\n                        '@keywords': 'keyword',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[\\w@#$]+/, {\r\n                    cases: {\r\n                        '@keywords': 'keyword',\r\n                        '@operators': 'operator',\r\n                        '@builtinVariables': 'predefined',\r\n                        // '@builtinFunctions': 'functions',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[<>=!%&+\\-*/|~^]/, 'operator'],\r\n            ],\r\n            whitespace: [\r\n                [/\\s+/, 'white']\r\n            ],\r\n            comments: [\r\n                [/--+.*/, 'comment'],\r\n                [/\\/\\*/, { token: 'comment.quote', next: '@comment' }]\r\n            ],\r\n            comment: [\r\n                [/[^*/]+/, 'comment'],\r\n                // Not supporting nested comments, as nested comments seem to not be standard?\r\n                // i.e. http://stackoverflow.com/questions/728172/are-there-multiline-comment-delimiters-in-sql-that-are-vendor-agnostic\r\n                // [/\\/\\*/, { token: 'comment.quote', next: '@push' }],    // nested comment not allowed :-(\r\n                [/\\*\\//, { token: 'comment.quote', next: '@pop' }],\r\n                [/./, 'comment']\r\n            ],\r\n            pseudoColumns: [\r\n                [/[$][A-Za-z_][\\w@#$]*/, {\r\n                    cases: {\r\n                        '@pseudoColumns': 'predefined',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n            ],\r\n            numbers: [\r\n                [/0[xX][0-9a-fA-F]*/, 'number'],\r\n                [/[$][+-]*\\d*(\\.\\d*)?/, 'number'],\r\n                [/((\\d+(\\.\\d*)?)|(\\.\\d+))([eE][\\-+]?\\d+)?/, 'number']\r\n            ],\r\n            strings: [\r\n                [/'/, { token: 'string', next: '@string' }],\r\n            ],\r\n            string: [\r\n                [/[^\\\\']+/, 'string'],\r\n                [/\\\\./, 'string.escape.invalid'],\r\n                [/''/, 'string'],\r\n                [/'/, { token: 'string', next: '@pop' }]\r\n            ],\r\n            complexIdentifiers: [\r\n                [/\"/, { token: 'identifier.quote', next: '@quotedIdentifier' }]\r\n            ],\r\n            quotedIdentifier: [\r\n                [/[^\"]+/, 'identifier'],\r\n                [/\"\"/, 'identifier'],\r\n                [/\"/, { token: 'identifier.quote', next: '@pop' }]\r\n            ],\r\n            scopes: [\r\n                // NOT SUPPORTED\r\n            ]\r\n        }\r\n\r\n\r\n\r\n    };\r\n\r\n    //@ts-ignore\r\n    monaco.languages.setLanguageConfiguration('vscSQL', conf);\r\n    //@ts-ignore\r\n    monaco.languages.setMonarchTokensProvider('vscSQL', language);\r\n\r\n\r\n\r\n}","export class WorkerSim {\n\n    //@ts-ignore\n    initsql = initSqlJs({locateFile: (path, scriptDirectory) => \"https://embed.learn-sql.de/include/lib/sql.js/sql-wasm.wasm\"});\n    db;\n    SQL;\n\n    onmessage: (event: {data: any}) => void;\n\n    onError: (event: ErrorEvent) => void;\n\n    postMessageToClient(message: any) {\n        this.onmessage({data: message})\n    }\n\n    postMessage(data: any){\n        let that = this;\n        if (that.db == null) {\n            that.initsql.then((SQL1) => {\n                that.SQL = SQL1;\n                that.db = createDb(SQL1, undefined);\n                that.worker(data);\n            }).catch((err) => {\n                console.log(err);\n                //@ts-ignore\n                return that.postMessageToClient({\n                    id: this[\"data\"][\"id\"],\n                    error: err[\"message\"]\n                });\n            })\n        } else {\n            that.worker(data);\n        }\n    }\n\n    terminate() {\n\n    }\n\n    worker(data: any) {\n        var buff; var result;\n        var config = data[\"config\"] ? data[\"config\"] : {};\n        try {\n            switch (data && data[\"action\"]) {\n                case \"open\":\n                    buff = data[\"buffer\"];\n                    this.db = createDb(this.SQL, buff && new Uint8Array(buff));\n                    //@ts-ignore\n                    return this.postMessageToClient({\n                        id: data[\"id\"],\n                        ready: true\n                    });\n                case \"exec\":\n                    if (this.db === null) {\n                        this.db = createDb(this.SQL, undefined);\n                    }\n                    if (!data[\"sql\"]) {\n                        throw \"exec: Missing query string\";\n                    }\n                    //@ts-ignore\n                    return this.postMessageToClient({\n                        id: data[\"id\"],\n                        results: this.db.exec(data[\"sql\"], data[\"params\"], config)\n                    });\n                case \"each\":\n                    if (this.db === null) {\n                        this.db = createDb(this.SQL, undefined);\n                    }\n                    var callback = function callback(row) {\n                        //@ts-ignore\n                        return this.postMessage({\n                            id: data[\"id\"],\n                            row: row,\n                            finished: false\n                        });\n                    };\n                    var done = function done() {\n                        //@ts-ignore\n                        return this.postMessage({\n                            id: data[\"id\"],\n                            finished: true\n                        });\n                    };\n                    return this.db.each(data[\"sql\"], data[\"params\"], callback, done, config);\n                case \"export\":\n                    buff = this.db[\"export\"]();\n                    result = {\n                        id: data[\"id\"],\n                        results: [\n                            {\n                                buffer: buff\n                            }\n                        ]\n                    };\n                    try {\n                        //@ts-ignore\n                        return this.postMessageToClient(result);\n                    } catch (error) {\n                        //@ts-ignore\n                        return this.postMessageToClient(result);\n                    }\n                case \"close\":\n                    if (this.db) {\n                        this.db.close();\n                    }\n                    //@ts-ignore\n                    return this.postMessageToClient({\n                        id: data[\"id\"]\n                    });\n                default:\n                    throw new Error(\"Invalid action : \" + (data && data[\"action\"]));\n            }\n\n        } catch (err) {\n\n            //@ts-ignore\n            return this.postMessageToClient({\n                id: data[\"id\"],\n                error: err[\"message\"]\n            });\n        }\n\n    }\n\n\n}\n\n\n\n\n\n","import { MainBase } from \"../main/MainBase.js\";\r\nimport { WorkerSim } from \"../sqljs-worker/sqljsWorkerSim.js\";\r\n\r\nexport type DatabaseDumpType = \"binaryUncompressed\" | \"binaryCompressed\" | \"other\";\r\n\r\nexport type DatabaseDirectoryEntry = {\r\n    name: string,\r\n    description: string,\r\n    filename: string\r\n}\r\n\r\nexport type QueryResult = {\r\n    columns: string[],\r\n    values: any[][],\r\n    buffer?: Uint8Array\r\n}\r\n\r\nexport type QuerySuccessCallback = (results: QueryResult[]) => void;\r\nexport type QueryErrorCallback = (error: string) => void;\r\n\r\nexport type ColumnStructure = {\r\n    name: string;\r\n    table: TableStructure;\r\n\r\n    typeLengths?: number[]; // for varchar(5), ...\r\n    completeTypeSQL: string;\r\n\r\n    references?: ColumnStructure;\r\n    referencesRawData?: any[];\r\n    isPrimaryKey: boolean;\r\n    isAutoIncrement: boolean;\r\n\r\n    notNull: boolean;\r\n    defaultValue: string;\r\n\r\n    dumpValueFunction?: (any) => string\r\n}\r\n\r\nexport type TableStructure = {\r\n    name: string;\r\n    size: number;\r\n    columns: ColumnStructure[];\r\n    completeSQL: string;\r\n}\r\n\r\nexport type DatabaseStructure = {\r\n    tables: TableStructure[]\r\n}\r\n\r\n\r\nexport class DatabaseTool {\r\n\r\n    databaseDirectoryEntries: DatabaseDirectoryEntry[] = null;\r\n\r\n    worker: Worker;\r\n\r\n    queryId: number = 0;\r\n\r\n    querySuccessCallbacksMap: Map<number, QuerySuccessCallback> = new Map();\r\n    queryErrorCallbackMap: Map<number, QueryErrorCallback> = new Map();\r\n\r\n    databaseStructure: DatabaseStructure;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    initializeWorker(template: Uint8Array, queries: string[], callbackAfterInitializing?: (errors: string[]) => void,\r\n        callbackAfterRetrievingStructure?: () => void) {\r\n        \r\n        this.main.getWaitOverlay().show('Bitte warten, die Datenbank wird initialisiert...');\r\n        \r\n            if (this.worker != null) {\r\n            this.worker.terminate();\r\n        }\r\n\r\n        let t = performance.now();\r\n\r\n        // console.log(\"Starting worker...\");\r\n\r\n        let url: string = \"js/sqljs-worker/sqljsWorker.js\"\r\n        if(this.main.isEmbedded()){\r\n            //@ts-ignore\r\n            url = window.javaOnlineDir + url;\r\n        }\r\n\r\n        //@ts-ignore\r\n        if(window.jo_doc){\r\n            //@ts-ignore\r\n            this.worker = new WorkerSim();\r\n        } else {\r\n            this.worker = new Worker(url);\r\n        }\r\n        let that = this;\r\n\r\n        let errors: string[] = [];\r\n\r\n        this.worker.onmessage = () => {\r\n            // console.log(\"Database opened (\" + (performance.now() - t)/1000 + \" s)\");\r\n            that.worker.onmessage = event => {\r\n\r\n                // console.log(event.data);\r\n\r\n                let id = event.data.id;\r\n                if (event.data.error == null) {\r\n                    let querySuccessCallback = that.querySuccessCallbacksMap.get(id);\r\n                    if (querySuccessCallback != null) {\r\n                        querySuccessCallback(event.data.results);\r\n                    }\r\n                } else {\r\n                    let queryErrorCallback = that.queryErrorCallbackMap.get(id);\r\n                    if (queryErrorCallback != null) {\r\n                        queryErrorCallback(event.data.error);\r\n                    }\r\n                }\r\n\r\n                // if(event.data.buffer){\r\n                //     console.log(event.data.buffer);\r\n                // }\r\n\r\n\r\n                this.queryErrorCallbackMap.delete(id);\r\n                this.querySuccessCallbacksMap.delete(id);\r\n\r\n            };\r\n\r\n            if(queries == null) queries = [];\r\n            queries = queries.slice();\r\n            queries.unshift(\"PRAGMA foreign_keys = OFF;\")\r\n            queries.push(\"PRAGMA foreign_keys = ON;\")\r\n            let queryCount = queries.length;\r\n\r\n            let execQuery = () => {\r\n                if (queries.length > 0) {\r\n                    this.main.getWaitOverlay().setProgress(`${Math.round((1-queries.length/queryCount)*100) + \" %\"}`)\r\n                    let query = queries.shift();\r\n                    that.executeQuery(query, (result) => {\r\n                        execQuery();\r\n                    }, (error) => {\r\n                        errors.push(\"Error while setting up database: \" + error + \", query: \" + query);\r\n                        console.log({\"error\": \"Error while setting up database: \" + error, \"query\": query});\r\n                        console.log()\r\n                        execQuery();\r\n                    })\r\n                } else {\r\n                    if (callbackAfterInitializing != null) callbackAfterInitializing(errors);\r\n                    that.retrieveDatabaseStructure(() => {\r\n                        // console.log(\"Database structure retrieved (\" + (performance.now() - t)/1000 + \" s)\");\r\n                        if (callbackAfterRetrievingStructure) callbackAfterRetrievingStructure();\r\n                        this.main.getWaitOverlay().hide();\r\n\r\n                    });\r\n                }\r\n            }\r\n\r\n            execQuery();\r\n\r\n            // that.executeQuery(sql, (result) => {\r\n            //     // console.log(\"Template written (\" + (performance.now() - t)/1000 + \" s)\");\r\n\r\n            //     if (callbackAfterInitializing != null) callbackAfterInitializing();\r\n            //     that.retrieveDatabaseStructure(() => {\r\n            //         // console.log(\"Database structure retrieved (\" + (performance.now() - t)/1000 + \" s)\");\r\n            //         if (callbackAfterRetrievingStructure) callbackAfterRetrievingStructure();\r\n            //         jQuery('#bitteWarten').css('display', 'none');\r\n\r\n            //     });\r\n            //     // that.executeQuery(\"select * from test\", (results: QueryResult[]) => {console.log(results)}, (error) => {console.log(\"Error:\" + error)});\r\n            // },\r\n            //     (error) => {\r\n            //         console.log(\"Error while setting up database: \" + error);\r\n            //     });\r\n\r\n            // that.worker.postMessage({\r\n            //     action: \"export\"\r\n            // })\r\n\r\n        };\r\n\r\n        this.worker.onerror = (e) => {\r\n            errors.push(\"Worker error: \" + e.error);\r\n            console.log(\"Worker error: \" + e.error);\r\n        }\r\n\r\n        this.worker.postMessage({\r\n            id: that.queryId++,\r\n            action: \"open\",\r\n            buffer: template, /*Optional. An ArrayBuffer representing an SQLite Database file*/\r\n        });\r\n\r\n    }\r\n\r\n    executeQuery(query: string, successCallback: QuerySuccessCallback, errorCallback: QueryErrorCallback) {\r\n\r\n        let id = this.queryId++;\r\n\r\n        this.querySuccessCallbacksMap.set(id, successCallback);\r\n        this.queryErrorCallbackMap.set(id, errorCallback);\r\n\r\n        this.worker.postMessage({\r\n            id: id,\r\n            action: \"exec\",\r\n            sql: query,\r\n            params: {}\r\n        });\r\n\r\n    }\r\n\r\n    export(successCallback: (buffer: Uint8Array) => void, errorCallback: QueryErrorCallback) {\r\n\r\n        let id = this.queryId++;\r\n\r\n        this.querySuccessCallbacksMap.set(id, (results) => { successCallback(results[0].buffer)  });\r\n        this.queryErrorCallbackMap.set(id, errorCallback);\r\n\r\n        this.worker.postMessage({\r\n            id: id,\r\n            action: \"export\",\r\n            params: {}\r\n        });\r\n\r\n    }\r\n\r\n    \r\n\r\n    getDirectoryEntries(callback: (entries: DatabaseDirectoryEntry[]) => void) {\r\n        if (this.databaseDirectoryEntries != null) {\r\n            callback(this.databaseDirectoryEntries);\r\n        } else {\r\n            jQuery.getJSON(\"assets/databases/directory.json\", function (entries: DatabaseDirectoryEntry[]) {\r\n                callback(entries);\r\n            });\r\n        }\r\n    }\r\n\r\n    retrieveDatabaseStructure(callback: (dbStructure: DatabaseStructure) => void) {\r\n\r\n        /*\r\n            @see https://stackoverflow.com/questions/6460671/sqlite-schema-information-metadata\r\n        */\r\n        let sql = `SELECT name, sql FROM sqlite_master WHERE type='table';`\r\n        let that = this;\r\n\r\n        this.executeQuery(sql, (result) => {\r\n            let sql1 = \"\";\r\n            result[0]?.values?.forEach(value => sql1 += `PRAGMA table_info(${value[0]});\\nPRAGMA foreign_key_list(${value[0]});\\nselect count(*) from ${value[0]};\\n\\n`)\r\n\r\n            if (sql1 != \"\") {\r\n                this.executeQuery(sql1, (result1) => {\r\n                    // console.log(\"DB structure: \");\r\n                    // console.log(result1);\r\n\r\n                    that.databaseStructure = that.parseDatabaseStructure(result, result1)\r\n\r\n                    callback(that.databaseStructure);\r\n\r\n                }, (error) => { console.log(error)});\r\n            } else {\r\n                that.databaseStructure = { tables: [] };\r\n                callback(that.databaseStructure);\r\n            }\r\n\r\n        }, (error) => { console.log(error) });\r\n\r\n\r\n    }\r\n\r\n    parseDatabaseStructure(tables: QueryResult[], columns: QueryResult[]): DatabaseStructure {\r\n        this.databaseStructure = {\r\n            tables: []\r\n        };\r\n\r\n        let tableNameToStructureMap: Map<string, TableStructure> = new Map();\r\n\r\n        let index = 0;\r\n        for (let i = 0; i < tables[0].values.length; i++) {\r\n            let tableName = tables[0].values[i][0];\r\n            let tableSQL = tables[0].values[i][1];\r\n\r\n            let tableStructure: TableStructure = {\r\n                name: tableName,\r\n                size: 0,\r\n                completeSQL: tableSQL,\r\n                columns: []\r\n            }\r\n\r\n            tableNameToStructureMap.set(tableName, tableStructure);\r\n\r\n            this.databaseStructure.tables.push(tableStructure);\r\n\r\n            let columnArray = columns[index].values;\r\n            let foreignKeyList: any[][] = null;\r\n            if (columns.length > index + 1 && columns[index + 1].columns[0] == \"id\") {\r\n                foreignKeyList = columns[index + 1].values;\r\n                index++;\r\n            }\r\n            index++;\r\n            let size: number = columns[index].values[0][0];\r\n            index++;\r\n\r\n            tableStructure.size = size;\r\n\r\n            columnArray.forEach(columnArray1 => {\r\n                let cid: number = columnArray1[0];\r\n                let name: string = columnArray1[1];\r\n                let type: string = columnArray1[2];\r\n                let notNull: boolean = columnArray1[3] == 1;\r\n                let dflt_value: string = columnArray1[4];\r\n                let isPrimaryKey: boolean = columnArray1[5] != 0;\r\n\r\n                let columnStructure: ColumnStructure = {\r\n                    name: name,\r\n                    isPrimaryKey: isPrimaryKey,\r\n                    isAutoIncrement: isPrimaryKey && tableSQL.toLowerCase().indexOf(\"autoincrement\") >= 0,\r\n                    completeTypeSQL: type,\r\n                    table: tableStructure,\r\n                    typeLengths: [],\r\n                    defaultValue: dflt_value,\r\n                    notNull: notNull\r\n                }\r\n                /*\r\n                    columns: (8) [\"id\", \"seq\", \"table\", \"from\", \"to\", \"on_update\", \"on_delete\", \"match\"]\r\n                    values: Array(1)\r\n                    0: (8) [0, 0, \"land\", \"LNR\", \"lnr\", \"NO ACTION\", \"NO ACTION\", \"NONE\"]\r\n                */\r\n\r\n                if (foreignKeyList != null) {\r\n                    let fkInfo: any[] = foreignKeyList.find(foreignKeyInfo => foreignKeyInfo[3].toLocaleLowerCase() == name.toLocaleLowerCase());\r\n                    if (fkInfo != null) {\r\n                        columnStructure.referencesRawData = fkInfo;\r\n                    }\r\n                }\r\n\r\n                tableStructure.columns.push(columnStructure);\r\n\r\n            });\r\n\r\n        }\r\n\r\n        for (let ts of this.databaseStructure.tables) {\r\n            for (let cs of ts.columns) {\r\n                if (cs.referencesRawData != null) {\r\n                    let table = tableNameToStructureMap.get(cs.referencesRawData[2]);\r\n                    // SQlite doesn't remove foreign key references to columns of a dropped table\r\n                    if(table == null) continue;\r\n                    let column = table.columns.find(c => c.name.toLocaleLowerCase() == cs.referencesRawData[4].toLocaleLowerCase());\r\n                    cs.references = column;\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log(this.databaseStructure);\r\n\r\n        return this.databaseStructure;\r\n\r\n    }\r\n\r\n    static getDumpType(dump: Uint8Array): DatabaseDumpType {\r\n\r\n        let sqliteMagicBytes: number[] = [0x53, 0x51, 0x4c, 0x69, 0x74, 0x65];\r\n        let zlibMagicByte: number = 0x78;\r\n\r\n        let found: boolean = true;\r\n        for (let i = 0; i < sqliteMagicBytes.length; i++) {\r\n            if (sqliteMagicBytes[i] != dump[i]) {\r\n                found = false;\r\n                break;\r\n            }\r\n        }\r\n        if (found) return \"binaryUncompressed\";\r\n\r\n        if (dump[0] == zlibMagicByte) return \"binaryCompressed\";\r\n\r\n        return \"other\";\r\n\r\n    }\r\n\r\n\r\n}","import { TokenType } from \"../lexer/Token.js\";\r\nimport { ASTNode, ConstantNode, CreateTableColumnNode, CreateTableNode, ForeignKeyInfo, InsertNode } from \"./AST.js\";\r\nimport { SQLStatement } from \"./Parser.js\";\r\n\r\nexport class StatementCleaner {\r\n\r\n    MaxRowsPerInsert: number = 300;\r\n\r\n    clean(statement: SQLStatement): string {\r\n        switch (statement.ast.type) {\r\n            case TokenType.keywordCreate:   // Create Table statement\r\n                statement.sqlCleaned = this.cleanCreateTableStatement(statement.ast);\r\n                return statement.sqlCleaned;\r\n            case TokenType.keywordInsert:\r\n                if(statement.ast.select != null){\r\n                    return statement.sql;\r\n                } else {\r\n                    statement.sqlCleaned = this.cleanInsertStatement(statement.ast);\r\n                    return statement.sqlCleaned;\r\n                }\r\n            default:\r\n                return statement.sql;\r\n                break;\r\n        }\r\n    }\r\n\r\n    cleanInsertStatement(ast: InsertNode): string {\r\n        let statementHeader: string = `insert into ${ast.table.identifier}`;\r\n\r\n        if (ast.columnList != null && ast.columnList.length > 0) {\r\n            statementHeader += `(${ast.columnList.map(c => this.escapeIdentifier(c.identifier)).join(\", \")})`;\r\n        }\r\n\r\n        statementHeader += '\\nvalues\\n';\r\n\r\n        let st = \"\";\r\n\r\n        let lines: string[] = [];\r\n        if (ast.values != null && ast.values.length > 0) {\r\n            for (let vline of ast.values) {\r\n                lines.push(`\\n(${vline.map(v => this.cleanValue(v)).join(\", \")})`);\r\n            }\r\n            //st += lines.join(\",\\n\");\r\n        }\r\n\r\n        while (lines.length > 0) {\r\n            st += statementHeader;\r\n            st += lines.splice(0, Math.max(this.MaxRowsPerInsert, lines.length)).join(\",\\n\");\r\n            st += \";\\n\";\r\n        }\r\n\r\n        return st;\r\n\r\n    }\r\n\r\n    cleanValue(v: ConstantNode) {\r\n        if (v.constantType == TokenType.stringConstant) {\r\n            let s: string = v.constant;\r\n            s = s.replace(/'/g, \"''\");\r\n            return `'${s}'`;\r\n        } else {\r\n            return v.constant;\r\n        }\r\n    }\r\n\r\n    cleanCreateTableStatement(ast: CreateTableNode): string {\r\n        let st: string = `create table ${ast.ifNotExists ? \" if not exists\" : \"\"} ${this.escapeIdentifier(ast.identifier)}(\\n   `;\r\n\r\n        st += ast.columnList.map(column => this.cleanColumnDef(column)).join(\",\\n   \");\r\n        if (ast.foreignKeyInfoList != null && ast.foreignKeyInfoList.length > 0) {\r\n            st += \",\\n   \" + ast.foreignKeyInfoList.map(fki => this.cleanForeignKeyInfo(fki)).join(\",\\n   \");\r\n        }\r\n\r\n        let pkc = ast.combinedPrimaryKeyColumns.slice().map(s => s.toLocaleLowerCase());\r\n        for (let column of ast.columnList) {\r\n            let c = column.identifier.toLocaleLowerCase();\r\n            if (column.isAutoIncrement && pkc.indexOf(c) >= 0) {\r\n                pkc.splice(pkc.indexOf(c), 1);\r\n            }\r\n        }\r\n\r\n        if (pkc.length > 0) {\r\n            st += `,\\n   primary key(${this.escapeIdentifiers(pkc).join(\", \")})`;\r\n        }\r\n\r\n        if (ast.uniqueConstraints.length > 0) {\r\n            st += \",\\n   \" + ast.uniqueConstraints.map(uk => 'unique(' + this.escapeIdentifiers(uk).join(\", \") + \")\").join(\",\\n   \");\r\n        }\r\n\r\n        st += '\\n);';\r\n\r\n        return st;\r\n    }\r\n\r\n    cleanForeignKeyInfo(fki: ForeignKeyInfo): string {\r\n        let fkiString = `foreign key (${this.escapeIdentifier(fki.column)}) references ${this.escapeIdentifier(fki.referencesTable)}(${this.escapeIdentifier(fki.referencesColumn)})`;\r\n        if (fki.onDelete) {\r\n            fkiString += ` on delete ` + fki.onDelete;\r\n        }\r\n        if (fki.onUpdate) {\r\n            fkiString += ` on update ` + fki.onUpdate;\r\n        }\r\n        return fkiString;\r\n    }\r\n\r\n    cleanColumnDef(column: CreateTableColumnNode): string {\r\n\r\n        let type = column.baseType.toString();\r\n        if (type == \"int\" && column.isAutoIncrement) {\r\n            type = \"integer\";\r\n        }\r\n\r\n        let st: string = `${this.escapeIdentifier(column.identifier)} ${type}`;\r\n        if (column.parameters != null && column.parameters.length > 0 && !column.isAutoIncrement) {\r\n            st += `(${column.parameters.join(\", \")})`;\r\n        }\r\n        if (column.notNull) {\r\n            st += \" not null\";\r\n        }\r\n        if (column.defaultValue != null) {\r\n            st += \" default \" + column.defaultValue;\r\n        }\r\n        if (column.isPrimary || column.isAutoIncrement) {\r\n            st += \" primary key\";\r\n        }\r\n        if (column.isAutoIncrement) {\r\n            st += \" autoincrement\";\r\n        }\r\n        if (column.foreignKeyInfo != null) {\r\n            let fki = column.foreignKeyInfo;\r\n            let c: string = fki.referencesColumn;\r\n            if (fki.referencesTable) c = this.escapeIdentifier(fki.referencesTable) + \"(\" + this.escapeIdentifier(c) + \")\";\r\n            st += \" references \" + c;\r\n        }\r\n        if (column.collate != null) {\r\n            let collate = column.collate.toLocaleLowerCase();\r\n            if ([\"binary\", \"nocase\", \"rtrim\"].indexOf(collate) >= 0) {\r\n                st += \" collate \" + collate;\r\n            }\r\n        }\r\n        let parameters = column.parameters ? column.parameters : [0, 0];\r\n        let checkFunction = column.baseType.checkFunction(this.escapeIdentifier(column.identifier), parameters);\r\n        if (checkFunction != \"\") {\r\n            st += \" \" + checkFunction;\r\n        }\r\n        return st;\r\n    }\r\n\r\n    escapeIdentifier(id: string){\r\n        return '\"' + id + '\"';\r\n    }\r\n\r\n    escapeIdentifiers(list: string[]):string[] {\r\n        return list.map(this.escapeIdentifier);\r\n    }\r\n\r\n}","import { Lexer } from \"../compiler/lexer/Lexer.js\";\nimport { TokenType } from \"../compiler/lexer/Token.js\";\nimport { AlterTableNode, CreateTableNode, InsertNode } from \"../compiler/parser/AST.js\";\nimport { Module } from \"../compiler/parser/Module.js\";\nimport { Parser, SQLStatement } from \"../compiler/parser/Parser.js\";\nimport { StatementCleaner } from \"../compiler/parser/StatementCleaner.js\";\nimport { MainBase } from \"../main/MainBase.js\";\nimport { LoadableDatabase } from \"./DatabaseLoader.js\";\nimport { DatabaseTool } from \"./DatabaseTools.js\";\n\nexport class MySqlImporter {\n\n    private createTableNodes: CreateTableNode[];\n    private insertNodes: InsertNode[];\n    private tableModifyingNodes: AlterTableNode[];\n\n    constructor(private main: MainBase) {\n\n    }\n\n    async loadFromUrl(url: string): Promise<LoadableDatabase> {\n        if (url == null) return;\n\n        let text = null;\n        if (url.endsWith(\".zip\")) {\n            text = await this.unzipURL(url);\n        } else {\n            text = await (await fetch(url)).text();\n        }\n\n        return this.importFromText(text);\n    }\n\n    async loadFromFile(file: globalThis.File): Promise<LoadableDatabase> {\n        if (file == null) return;\n\n        if (file.name.endsWith(\".zip\")) {\n            let text = await this.unzipFile(file);\n            return this.importFromText(text);\n        } else {\n\n            return new Promise<LoadableDatabase>(\n                (resolve, reject) => {\n                    var reader = new FileReader();\n                    reader.onload = (event) => {\n                        let text = <string>event.target.result;\n                        resolve(this.importFromText(text));\n                    };\n                    reader.readAsText(file);\n                }\n            )\n\n\n        }\n    }\n\n    async unzipURL(url: string): Promise<string> {\n        //@ts-ignore\n        const reader = new zip.ZipReader(new zip.HttpReader(url));\n        return this.unzipIntern(reader);\n    }\n\n    async unzipFile(file: globalThis.File): Promise<string> {\n        // create a BlobReader to read with a ZipReader the zip from a Blob object\n        //@ts-ignore\n        const reader = new zip.ZipReader(new zip.BlobReader(file));\n        return this.unzipIntern(reader);\n    }\n\n    async unzipIntern(reader: any): Promise<string> {\n        // get all entries from the zip\n        let entries = await reader.getEntries();\n        entries = entries.filter(entry => entry.filename.endsWith(\".sql\"))\n        let text: string = \"\";\n        if (entries.length) {\n            for(let entry of entries){\n                // get first entry content as text by using a TextWriter\n                text += await entry.getData(\n                    // writer\n                    //@ts-ignore\n                    new zip.TextWriter(),\n                    // options\n                    {\n                        onprogress: (index, max) => {\n                            // onprogress callback\n                        }\n                    }\n                );\n            }\n        }\n\n        // close the ZipReader\n        await reader.close();\n\n        return text;\n    }\n\n    private async importFromText(text: string): Promise<LoadableDatabase> {\n        if (text == null) return null;\n\n        let lexer: Lexer = new Lexer();\n        let lexOutput = lexer.lex(text);\n\n        let parser: Parser = new Parser();\n        let m: Module = new Module({\n            dirty: false,\n            name: \"\",\n            saved: true,\n            student_edited_after_revision: false,\n            submitted_date: null,\n            text: text,\n            text_before_revision: null,\n            version: 0\n        }, this.main);\n        m.tokenList = lexOutput.tokens;\n\n        parser.parse(m);\n\n        this.createTableNodes = m.sqlStatements.filter(st => st.ast.type == TokenType.keywordCreate).map(st => <CreateTableNode>st.ast);\n        this.insertNodes = m.sqlStatements.filter(st => st.ast.type == TokenType.keywordInsert).map(st => <InsertNode>st.ast);\n        this.tableModifyingNodes = m.sqlStatements.filter(st => st.ast.type == TokenType.keywordAlter &&\n            (<AlterTableNode>st.ast).kind == \"omittedKind\").map(st => <AlterTableNode>st.ast);\n\n        for (let tmn of this.tableModifyingNodes) {\n            let createTableNode = this.findCreateTableNode(tmn.tableIdentifier);\n            if (createTableNode == null) continue;\n\n            if (tmn.primaryKeys != null) {\n                createTableNode.combinedPrimaryKeyColumns = tmn.primaryKeys;\n                createTableNode.columnList.forEach(c => c.isPrimary = false);\n            }\n\n            if (tmn.autoIncrementColumn != null) {\n                let pcn = this.findCreateTableColumnNode(createTableNode, tmn.autoIncrementColumn);\n                if (pcn != null) pcn.isPrimary = true;\n            }\n\n            if (tmn.modifyColumnInfo != null) {\n                for (let mci of tmn.modifyColumnInfo) {\n                    let mcn = this.findCreateTableColumnNode(createTableNode, mci.identifier);\n                    let index = createTableNode.columnList.indexOf(mcn);\n                    createTableNode.columnList.splice(index, 1, mci);\n                }\n            }\n\n            if (tmn.foreignKeys != null) {\n                for (let fk of tmn.foreignKeys) {\n                    createTableNode.foreignKeyInfoList.push(fk);\n                }\n            }\n\n            if (tmn.indices != null) {\n                for (let index of tmn.indices) {\n                    m.sqlStatements.push({\n                        acceptedBySQLite: true,\n                        from: null, to: null, hasErrors: false,\n                        ast: {\n                            type: TokenType.keywordIndex,\n                            columnIdentifier: index.column,\n                            indexIdentifier: index.index_name,\n                            tableIdentifier: tmn.tableIdentifier,\n                            unique: index.unique,\n                            position: null, endPosition: null, symbolTable: null\n                        },\n                        sql: `create ${index.unique ? 'unique ' : ''} index ${index.index_name} on ${tmn.tableIdentifier}(${index.column});`\n                    })\n                }\n            }\n        }\n\n        return this.makeDatabase(m.sqlStatements);\n    }\n\n    private findCreateTableNode(tableIdentifier: string): CreateTableNode {\n        tableIdentifier = tableIdentifier.toLocaleLowerCase();\n        return this.createTableNodes.find(node => node.identifier.toLocaleLowerCase() == tableIdentifier);\n    }\n\n    private findCreateTableColumnNode(tableNode: CreateTableNode, columnIdentifier: string) {\n        columnIdentifier = columnIdentifier.toLocaleLowerCase();\n        return tableNode.columnList.find(columnNode => columnNode.identifier.toLocaleLowerCase() == columnIdentifier)\n    }\n\n    private async makeDatabase(statements: SQLStatement[]): Promise<LoadableDatabase> {\n\n        let statementCleaner: StatementCleaner = new StatementCleaner();\n\n        let sqlStatements: string[] = statements.filter(st => st.ast.type != TokenType.omittedeStatement)\n            .map(st => statementCleaner.clean(st));\n        sqlStatements.unshift(\"PRAGMA foreign_keys = OFF;\");\n        sqlStatements.push(\"PRAGMA foreign_keys = ON;\")\n\n        let dbTool = new DatabaseTool(this.main);\n\n        let promise = new Promise<LoadableDatabase>((resolve, reject) => {\n            dbTool.initializeWorker(null, sqlStatements, () => {\n                dbTool.export((buffer) => {\n                    resolve({\n                        binDump: buffer\n                    })\n                }, (error) => {\n                    reject(error);\n                })\n            });\n\n        })\n\n        return promise;\n\n    }\n\n\n}","import { MainBase } from \"../main/MainBase.js\";\r\nimport { LoadableDatabase } from \"./DatabaseLoader.js\";\r\nimport { DatabaseTool } from \"./DatabaseTools.js\";\r\nimport { downloadFile } from \"./HtmlTools.js\";\r\nimport { MySqlImporter } from \"./MySqlImporter.js\";\r\n\r\nexport class DatabaseImportExport {\r\n\r\n    async loadFromFile(file: globalThis.File, main: MainBase): Promise<LoadableDatabase>{\r\n        let that = this;\r\n        if (file == null) return;\r\n        main.getWaitOverlay().show(\"Lese Datei ein...\");\r\n        if(file.name.endsWith(\".sql\") || file.name.endsWith(\".zip\")){\r\n            let ld = await new MySqlImporter(main).loadFromFile(file);\r\n            main.getWaitOverlay().hide();\r\n            return ld;\r\n        } else {\r\n            var reader = new FileReader();\r\n            return new Promise<LoadableDatabase>((resolve, reject) => {\r\n                reader.onload = (event) => {\r\n                    let ab: ArrayBuffer = <ArrayBuffer>event.target.result;\r\n                    let db: Uint8Array = new Uint8Array(ab);\r\n        \r\n                    //@ts-ignore\r\n                    if(DatabaseTool.getDumpType(db) == \"binaryCompressed\") db = pako.inflate(db);\r\n                    \r\n                    main.getWaitOverlay().hide();\r\n                    resolve({binDump: db});\r\n                };\r\n                reader.readAsArrayBuffer(file);\r\n    \r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    saveToFile(dbTool: DatabaseTool){\r\n        dbTool.export((db) => {\r\n            let filename: string = prompt(\"Bitte geben Sie den Dateinamen ein\", \"datenbank.sqLite\");\r\n            if (filename == null) {\r\n                alert(\"Der Dateiname ist leer, daher wird nichts gespeichert.\");\r\n                return;\r\n            }\r\n            if (!filename.endsWith(\".sqLite\")) filename = filename + \".sqLite\";\r\n            downloadFile(new Blob([db.buffer]), filename, true);\r\n        }, () => {});\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { CreateWorkspaceData, WorkspaceData } from \"../../communication/Data.js\";\r\nimport { DatabaseImportExport } from \"../../tools/DatabaseImportExport.js\";\r\nimport { LoadableDatabase } from \"../../tools/DatabaseLoader.js\";\r\nimport { DatabaseTool } from \"../../tools/DatabaseTools.js\";\r\nimport { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { TemplateUploader } from \"../../tools/TemplateUploader.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionElement } from \"./Accordion.js\";\r\n\r\ntype CreateMode = \"emptyDatabase\" | \"fromTemplate\" | \"useExistingDatabase\" | \"useDumpFile\";\r\n\r\nexport class NewDatabaseDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    database: LoadableDatabase;\r\n\r\n    constructor(private main: Main, private owner_id: number, private path: string[]) {\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Neue Datenbank anlegen</div>\r\n\r\n            <div class=\"jo_ds_settings\">\r\n               <div class=\"jo_ds_settings_caption\">Name der Datenbank:</div><div><input class=\"dialog-input jo_databasename\" value=\"Neue Datenbank\"></input></div>\r\n            </div>\r\n\r\n             <div class=\"jo_tabheadings jo_cdtabheading\">\r\n             <div class=\"jo_tabheading\" data-target=\"jo_createEmptyDatabaseTab\">Leere Datenbank</div>\r\n             <div class=\"jo_tabheading jo_active\" data-target=\"jo_createDatabaseFromTemplateTab\">Von Vorlage kopieren</div>\r\n             <div class=\"jo_tabheading\" data-target=\"jo_createDatabaseUseExistingTab\">Bestehende Datenbank mitnutzen</div>\r\n             <div class=\"jo_tabheading\" data-target=\"jo_createDatabaseUseDumpFile\">Import aus Dumpfile (SQLite- oder MySQL-Format)</div>\r\n             </div>\r\n             <div class=\"jo_tabs\" style=\"width: 100%; margin-top: 10px\">\r\n                 <div class=\"jo_createEmptyDatabaseTab\">\r\n                    <div class=\"jo_createDatabaseDescription\">\r\n                        Erstellt wird eine leere Datenbank.\r\n                    </div>\r\n                 </div>\r\n                 <div class=\"jo_createDatabaseFromTemplateTab jo_active\">\r\n                    <div class=\"jo_ds_settings\">\r\n                       <div class=\"jo_ds_settings_caption\">Vorlage suchen:</div><div><input class=\"dialog-input jo_templatename\"></input></div>\r\n                    </div>\r\n                    <div class=\"jo_scrollable jo_templatelist\"></div>\r\n                 </div>\r\n                <div class=\"jo_createDatabaseUseExistingTab\">\r\n                    <div class=\"jo_createDatabaseDescription\">Wenn Du die Datenbank einer anderen Nutzerin/eines anderen Nutzers mitnutzen möchtest, brauchst Du einen Zugriffscode von ihr/ihm. Er ist unter Datenbank->Einstellungen zu finden.            \r\n                    </div>\r\n                    <div class=\"jo_ds_settings\">\r\n                       <div class=\"jo_ds_settings_caption\">Zugriffscode:</div><div><input class=\"dialog-input jo_databasecodeinput\"></input></div>\r\n                    </div>\r\n                 </div>\r\n                <div class=\"jo_createDatabaseUseDumpFile\">\r\n                    <div class=\"jo_createDatabaseDescription\">Wähle hier die Datei mit dem Datenbank-Dump aus (Endung .sqLite (SQLite-Datenbankdatei) oder .zip (gepackter MySql-Dump) oder .sql (MySql-Dump)):</div>\r\n                    <input type=\"file\" class=\"jo_dumpfile\" name=\"dumpfile\" style=\"padding: 10px\"/>\r\n                    <div class=\"jo_databaseimport_dropzone\" style=\"width: 70vw; margin-left: 10px\">Alternativ: Datei in dieses Feld ziehen</div>\r\n                    <div class=\"jo_databaseimport_ok\"></div>\r\n                 </div>\r\n             </div>\r\n\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_create_database_button\">Datenbank anlegen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        makeTabs(this.$dialog);\r\n\r\n        let $templatelist = jQuery('.jo_templatelist');\r\n        this.main.networkManager.fetchTemplateList((templatelist) => {\r\n            templatelist.forEach(tle => {\r\n\r\n                let $tle = jQuery('<div class=\"jo_templateListEntry\"></div>')\r\n                $tle.append(jQuery(`<div class=\"jo_tle_firstline\">${tle.name} <span class=\"jo_tle_ownername\"> (von ${tle.ownerName})</span></div>`))\r\n                $tle.append(jQuery(`<div class=\"jo_tle_secondline\">${tle.description}</div>`))\r\n                $tle.data('templateId', tle.id);\r\n                $tle.data('name', tle.name);\r\n\r\n                $templatelist.append($tle);\r\n                tle.$tle = <JQuery<HTMLDivElement>>$tle;\r\n\r\n                $tle.on('pointerdown', () => {\r\n                    $templatelist.find('.jo_templateListEntry').removeClass('jo_active');\r\n                    $tle.addClass('jo_active');\r\n                })\r\n\r\n            })\r\n            let $templateName = <JQuery<HTMLInputElement>>jQuery('.jo_templatename');\r\n            $templateName.on('input', () => {\r\n                let s = <string>$templateName.val();\r\n                $templatelist.find('.jo_templateListEntry').hide();\r\n                templatelist.forEach(tle => {\r\n                    let tleString = tle.name + tle.ownerName + (tle.description ? tle.description : \"\");\r\n                    if (tleString.indexOf(s) >= 0) tle.$tle.show();\r\n                })\r\n            })\r\n        })\r\n\r\n        let $dropZone = jQuery('.jo_databaseimport_dropzone');\r\n\r\n        $dropZone.on('dragover', (evt) => {\r\n            evt.stopPropagation();\r\n            evt.preventDefault();\r\n            evt.originalEvent.dataTransfer.dropEffect = 'copy';\r\n        })\r\n        $dropZone.on('drop', (evt) => {\r\n            evt.stopPropagation();\r\n            evt.preventDefault();\r\n\r\n            var files = evt.originalEvent.dataTransfer.files;\r\n            this.importFile(files);\r\n        })\r\n\r\n        let $dumpFileInput = jQuery('.jo_dumpfile');\r\n        $dumpFileInput.on('change', (event) => {\r\n            //@ts-ignore\r\n            var files: FileList = event.originalEvent.target.files;\r\n            this.importFile(files).then(() => {\r\n                $dumpFileInput.val(null);\r\n            });\r\n\r\n        })\r\n\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { this.showMainWindow(); });\r\n        jQuery('#jo_ds_create_database_button').on('click', () => {\r\n            let createMode: CreateMode = \"emptyDatabase\";\r\n            if (jQuery('.jo_createDatabaseFromTemplateTab').hasClass('jo_active')) createMode = \"fromTemplate\";\r\n            if (jQuery('.jo_createDatabaseUseExistingTab').hasClass('jo_active')) createMode = \"useExistingDatabase\";\r\n            if (jQuery('.jo_createDatabaseUseDumpFile').hasClass('jo_active')) createMode = \"useDumpFile\";\r\n\r\n            let workspaceData: CreateWorkspaceData = {\r\n                id: null,\r\n                isFolder: false,\r\n                name: <string>jQuery('.dialog-input.jo_databasename').val(),\r\n                path: this.path.join(\"/\"),\r\n            }\r\n\r\n            switch (createMode) {\r\n                case \"emptyDatabase\":\r\n                    this.createWorkspace(workspaceData);\r\n                    break;\r\n                case \"fromTemplate\":\r\n                    let $template = jQuery('.jo_templateListEntry.jo_active');\r\n                    if ($template.length != 1) {\r\n                        alert('Bitte wählen Sie genau eine Vorlage aus.');\r\n                        return;\r\n                    } else {\r\n                        workspaceData.template_database_id = $template.data('templateId');\r\n                        if (workspaceData.name == \"Neue Datenbank\") workspaceData.name = $template.data('name');\r\n                        this.createWorkspace(workspaceData);\r\n                    }\r\n                    break;\r\n                case \"useExistingDatabase\":\r\n                    let code = <string>jQuery('.jo_databasecodeinput').val();\r\n                    let tIndex = code.indexOf(\"T\");\r\n                    if (tIndex == -1) {\r\n                        alert(\"Der Zugriffscode muss das Zeichen T enthalten.\");\r\n                        return;\r\n                    }\r\n                    workspaceData.otherDatabaseId = Number.parseInt(code.substring(0, tIndex));\r\n                    workspaceData.secret = code.substring(tIndex + 1);\r\n                    this.createWorkspace(workspaceData);\r\n                    break;\r\n                case \"useDumpFile\":\r\n                    if (this.database != null) {\r\n                        new TemplateUploader().uploadCurrentDatabase(-1, this.main, this.database.binDump,\r\n                            \"uploadBaseTemplateForWorkspace\",\r\n                            (response) => {\r\n                            workspaceData.template_id = response.newTemplateId;\r\n                            this.createWorkspace(workspaceData);\r\n                        });\r\n\r\n                    } else {\r\n                        alert('Bitte laden Sie zuerst den Binärdump einer Datenbank hoch.')\r\n                        return;\r\n                    }\r\n                    break;\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    private createWorkspace(workspaceData: CreateWorkspaceData) {\r\n        this.main.networkManager.sendCreateWorkspace(workspaceData, this.owner_id, (error?: string) => {\r\n            if (error != null) { alert(error); return; }\r\n\r\n            let w = this.main.createNewWorkspace(workspaceData.name, this.owner_id);\r\n            w.path = workspaceData.path;\r\n            w.id = workspaceData.id;\r\n            w.sql_history = \"\";\r\n\r\n            let projectExplorer = this.main.projectExplorer;\r\n\r\n            this.main.workspaceList.push(w);\r\n            let accordionElement: AccordionElement = {\r\n                name: workspaceData.name,\r\n                externalElement: w,\r\n                iconClass: \"workspace\",\r\n                isFolder: false,\r\n                path: this.path\r\n            };\r\n\r\n            projectExplorer.workspaceListPanel.addElement(accordionElement, true);\r\n\r\n            w.renderSettingsButton(accordionElement);\r\n\r\n            projectExplorer.workspaceListPanel.sortElements();\r\n            projectExplorer.fileListPanel.sortElements();\r\n\r\n            projectExplorer.setWorkspaceActive(w);\r\n\r\n            this.showMainWindow();\r\n\r\n        });\r\n    }\r\n\r\n    async importFile(files: FileList) {\r\n        let that = this;\r\n        let importer = new DatabaseImportExport();\r\n        let db: LoadableDatabase = await importer.loadFromFile(files[0], this.main)\r\n        let isDatabase: boolean = false;\r\n        let dumpFileType = DatabaseTool.getDumpType(db.binDump);\r\n        if (dumpFileType == \"binaryCompressed\") {\r\n            // @ts-ignore\r\n            let dbUncompressed = pako.inflate(db.binDump);\r\n            if (DatabaseTool.getDumpType(dbUncompressed) == \"binaryUncompressed\") {\r\n                isDatabase = true;\r\n            }\r\n        } else if (DatabaseTool.getDumpType(db.binDump) == \"binaryUncompressed\") {\r\n            //@ts-ignore\r\n            db.binDump = pako.deflate(db.binDump);\r\n            isDatabase = true;\r\n        }\r\n\r\n        if (isDatabase) {\r\n            that.database = db;\r\n            jQuery('.jo_databaseimport_ok').html(\"Die Datenbankdatei wurde erfolgreich von Datei eingelesen. Sie können die Datenbank jetzt durch Klick auf den Button unten erstellen.\");\r\n        } else {\r\n            alert(\"In der Datei befindet sich kein Binärdump einer Datenbank.\");\r\n        }\r\n    }\r\n\r\n    showMainWindow() {\r\n        jQuery('#main').css('visibility', 'visible');\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n    }\r\n\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { PasswordChanger } from \"./UserMenu.js\";\r\nimport { DatabaseSettingsDialog } from \"./DatabaseSettingsDialog.js\";\r\nimport { DatabaseImportExport } from \"../../tools/DatabaseImportExport.js\";\r\nimport { NewDatabaseDialog } from \"./NewDatabaseDialog.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\n\r\nexport type Action = (identifier: string) => void;\r\n\r\ntype Menu = {\r\n    items: MenuItem[];\r\n    $element?: JQuery<HTMLElement>;\r\n    level?: number;\r\n}\r\n\r\ntype MenuItem = {\r\n    identifier: string;\r\n    $element?: JQuery<HTMLElement>;\r\n    action?: Action;\r\n    link?: string;\r\n    subMenu?: Menu;\r\n}\r\n\r\nexport class MainMenu {\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n\r\n    currentSubmenu: { [level: number]: JQuery<HTMLElement> } = {};\r\n    openSubmenusOnMousemove: boolean = false;\r\n\r\n    initGUI(user: UserData) {\r\n\r\n        let that = this;\r\n        let editor = this.main.getMonacoEditor();\r\n\r\n        let mainMenu: Menu = {\r\n            items: [\r\n                {\r\n                    identifier: \"Datei\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Speichern und Beenden\",\r\n                                action: () => { jQuery('#buttonLogout').trigger(\"click\"); }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Bearbeiten\", subMenu:\r\n                    {\r\n                        items: [\r\n                            { identifier: \"Rückgängig (Strg + z)\", action: () => { editor.trigger(\".\", \"undo\", {}); } },\r\n                            { identifier: \"Wiederholen (Strg + y)\", action: () => { editor.trigger(\".\", \"redo\", {}); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Kopieren (Strg + c)\", action: () => { editor.getAction(\"editor.action.clipboardCopyAction\").run(); } },\r\n                            { identifier: \"Ausschneiden (Strg + x)\", action: () => { editor.getAction(\"editor.action.clipboardCutAction\").run(); } },\r\n                            { identifier: \"Nach oben kopieren (Alt + Shift + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.copyLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten kopieren (Alt + Shift + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.copyLinesDownAction\").run(); } },\r\n                            { identifier: \"Nach oben verschieben (Alt + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.moveLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten verschieben (Alt + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.moveLinesDownAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Suchen... (Strg + f)\", action: () => { editor.getAction(\"actions.find\").run(); } },\r\n                            { identifier: \"Ersetzen... (Strg + h)\", action: () => { editor.getAction(\"editor.action.startFindReplaceAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Aus-/Einkommentieren (Strg + #)\", action: () => { editor.getAction(\"editor.action.commentLine\").run(); } },\r\n                            { identifier: \"Dokument formatieren (Alt + Shift + f)\", action: () => { editor.getAction(\"editor.action.formatDocument\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Finde zugehörige Klammer (Strg + k)\", action: () => { editor.getAction(\"editor.action.jumpToBracket\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Alles zusammenfalten\", action: () => { editor.getAction(\"editor.foldAll\").run(); } },\r\n                            { identifier: \"Alles auffalten\", action: () => { editor.getAction(\"editor.unfoldAll\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Vorschlag auslösen (Strg + Leertaste)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.triggerSuggest\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n                            { identifier: \"Parameterhilfe (Strg + Shift + Leertaste)\", action: () => { editor.getAction(\"editor.action.triggerParameterHints\").run(); } },\r\n                            {\r\n                                identifier: \"Gehe zur Definition (Strg + Click)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.revealDefinition\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Ansicht\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Theme\",\r\n                                subMenu: {\r\n                                    items: [\r\n                                        {\r\n                                            identifier: \"Dark\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"dark\");\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            identifier: \"Light\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"light\");\r\n                                            }\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Hoher Kontrast im Editor ein/aus\", action: () => { editor.getAction(\"editor.action.toggleHighContrast\").run(); } },\r\n\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Zoom out (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(-4); } },\r\n                            { identifier: \"Zoom normal\", action: () => { this.main.editor.setFontSize(14); } },\r\n                            { identifier: \"Zoom in (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(4); } },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Datenbank\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Neue Datenbank anlegen...\", action: () => {\r\n                                    let owner_id: number = that.main.user.id;\r\n                                    if (that.main.workspacesOwnerId != null) {\r\n                                        owner_id = that.main.workspacesOwnerId;\r\n                                    }\r\n\r\n                                    new NewDatabaseDialog(that.main, owner_id, []);\r\n                                }\r\n                            },\r\n                            { identifier: \"Einstellungen...\", action: () => { new DatabaseSettingsDialog(this.main, this.main.currentWorkspace) } },\r\n                            {\r\n                                identifier: \"Export als Binärdump (.sqLite-File)...\", action: () => {\r\n                                    new DatabaseImportExport().saveToFile(this.main.getDatabaseTool());\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n\r\n            ]\r\n        };\r\n\r\n        if (user != null && (user.is_admin )) {\r\n            mainMenu.items[0].subMenu.items.push({\r\n                            identifier:\"Shutdown server...\",\r\n                            action: () => {\r\n                                if(confirm(\"Server wirklich herunterfahren?\")){\r\n                                    ajax(\"shutdown\", {}, () => {\r\n                                        alert('Server erfolgreich heruntergefahren.');\r\n                                    }, (message) => {\r\n                                        alert(message);\r\n                                    })\r\n                                }\r\n                            }\r\n                        }\r\n            )\r\n        }\r\n\r\n\r\n        jQuery('#mainmenu').empty();\r\n        this.initMenu(mainMenu, 0);\r\n    }\r\n\r\n    switchTheme(theme: string) {\r\n        this.main.viewModeController.setTheme(theme);\r\n    }\r\n\r\n    initMenu(menu: Menu, level?: number) {\r\n\r\n        menu.level = level;\r\n\r\n        if (level == 0) {\r\n            menu.$element = jQuery('#mainmenu');\r\n        } else {\r\n            menu.$element = jQuery('<div class=\"jo_submenu\"></div>');\r\n            jQuery('body').append(menu.$element);\r\n        }\r\n\r\n        menu.$element.data('model', menu);\r\n        for (let mi of menu.items) {\r\n            if (mi.identifier == '-') {\r\n                mi.$element = jQuery('<div class=\"jo_menuitemdivider\"></div>');\r\n            } else {\r\n                mi.$element = jQuery('<div>' + mi.identifier + '</div>');\r\n                if (mi.link != null) {\r\n                    let $link = jQuery('<a href=\"' + mi.link + '\" target=\"_blank\" class=\"jo_menulink\"></a>');\r\n                    $link.on(\"mousedown\", (event) => {\r\n                        event.stopPropagation();\r\n                        setTimeout(() => {\r\n                            menu.$element.hide();\r\n                        }, 500);\r\n                    })\r\n                    $link.append(mi.$element);\r\n                    mi.$element = $link;\r\n                }\r\n                if (mi.subMenu != null) {\r\n                    this.initMenu(mi.subMenu, level + 1);\r\n                }\r\n                this.initMenuitemCallbacks(menu, mi);\r\n                if (level == 0) {\r\n                    mi.$element.addClass('jo_mainmenuitem');\r\n                }\r\n            }\r\n            menu.$element.append(mi.$element);\r\n            mi.$element.data('model', mi);\r\n        }\r\n\r\n        let that = this;\r\n        jQuery(document).on('mousedown', () => {\r\n            for (let i = 0; i < 5; i++) {\r\n                if (that.currentSubmenu[i] != null) {\r\n                    that.currentSubmenu[i].hide();\r\n                    that.currentSubmenu[i] = null;\r\n                }\r\n            }\r\n            that.openSubmenusOnMousemove = false;\r\n        });\r\n\r\n    }\r\n\r\n    initMenuitemCallbacks(menu: Menu, mi: MenuItem) {\r\n        let that = this;\r\n\r\n        if (mi.action != null) {\r\n            mi.$element.on('mousedown', (ev) => { mi.action(mi.identifier); });\r\n        }\r\n\r\n        if (mi.subMenu != null) {\r\n            mi.$element.on('mousedown', (ev) => {\r\n                that.opensubmenu(mi);\r\n                that.openSubmenusOnMousemove = true;\r\n                ev.stopPropagation();\r\n            });\r\n\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.openSubmenusOnMousemove) {\r\n                    that.opensubmenu(mi);\r\n                } else {\r\n                    if (that.currentSubmenu[menu.level + 1] != null) {\r\n                        that.currentSubmenu[menu.level + 1].hide();\r\n                        that.currentSubmenu[menu.level + 1] = null;\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.currentSubmenu[menu.level + 1] != null) {\r\n                    that.currentSubmenu[menu.level + 1].hide();\r\n                    that.currentSubmenu[menu.level + 1] = null;\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    opensubmenu(mi: MenuItem) {\r\n\r\n        let subMenu = mi.subMenu;\r\n\r\n        let left: number;\r\n        let top: number;\r\n        if (subMenu.level == 1) {\r\n            left = mi.$element.position().left;\r\n            top = 30;\r\n        } else {\r\n            left = mi.$element.offset().left + mi.$element.width();\r\n            top = mi.$element.offset().top;\r\n        }\r\n\r\n        subMenu.$element.css({\r\n            top: \"\" + top + \"px\",\r\n            left: \"\" + left + \"px\"\r\n        })\r\n\r\n        if (this.currentSubmenu[subMenu.level] != null) {\r\n            this.currentSubmenu[subMenu.level].hide();\r\n        }\r\n\r\n        subMenu.$element.show();\r\n        this.currentSubmenu[subMenu.level] = subMenu.$element;\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { openContextMenu, makeEditable, ContextMenuItem, animateToTransparent, jo_mouseDetected } from \"../../tools/HtmlTools.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { escapeHtml } from \"../../tools/StringTools.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type AccordionElement = {\r\n    name: string;\r\n    sortName?: string;      // if sortName == null, then name will be used when sorting\r\n    externalElement?: any;\r\n    iconClass?: string;\r\n    $htmlFirstLine?: JQuery<HTMLElement>;\r\n    $htmlSecondLine?: JQuery<HTMLElement>;\r\n\r\n    isFolder: boolean;\r\n    path: string[];\r\n}\r\n\r\nexport type AccordionContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: (panel: AccordionElement) => void;\r\n    subMenu?: AccordionContextMenuItem[]\r\n}\r\n\r\nexport class AccordionPanel {\r\n\r\n    elements: AccordionElement[] = [];\r\n\r\n    $captionElement: JQuery<HTMLElement>;\r\n    $buttonNew: JQuery<HTMLElement>;\r\n    $listElement: JQuery<HTMLElement>;\r\n\r\n    private fixed: boolean;\r\n\r\n    dontSortElements: boolean = false;\r\n\r\n    static currentlyDraggedElement: AccordionElement;\r\n    static currentlyDraggedElementKind: string;\r\n\r\n    newFilesElementCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    newDatabaseElementCallback: (path: string[]) => void;\r\n    newFolderCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    renameCallback: (externalElement: any, newName: string) => string;\r\n    deleteCallback: (externalElement: any, callbackIfSuccessful: () => void) => void;\r\n    selectCallback: (externalElement: any) => void;\r\n    addElementActionCallback: (accordionElement: AccordionElement) => JQuery<HTMLElement>;\r\n    contextMenuProvider: (externalElement: any) => AccordionContextMenuItem[];\r\n    moveCallback: (ae: AccordionElement | AccordionElement[]) => void;\r\n    dropElementCallback: (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => void;\r\n\r\n    $newFolderAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private accordion: Accordion, private caption: string, private flexWeight: string,\r\n        private newButtonClass: string, private buttonNewTitle: string,\r\n        private defaultIconClass: string, private withDeleteButton: boolean, private withFolders: boolean,\r\n        private kind: \"workspace\" | \"file\" | \"class\" | \"student\", private enableDrag: boolean, private acceptDropKinds: string[]) {\r\n\r\n        accordion.addPanel(this);\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        if (withFolders) {\r\n            let that = this;\r\n            this.$newFolderAction = jQuery('<div class=\"img_add-folder-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Neuen Ordner auf oberster Ebene anlegen\">');\r\n            this.$newFolderAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                let pathArray: string[] = [];\r\n\r\n                this.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                    this.newFolderCallback(newElement, () => {\r\n                        this.sortElements();\r\n                        newElement.$htmlFirstLine[0].scrollIntoView();\r\n                        animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                    });\r\n                });\r\n\r\n            })\r\n\r\n            this.addAction(this.$newFolderAction);\r\n\r\n\r\n            let $collapseAllAction = jQuery('<div class=\"img_collapse-all-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Alle Ordner zusammenfalten\">');\r\n            $collapseAllAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                that.collapseAll();\r\n\r\n            })\r\n\r\n            this.addAction($collapseAllAction);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    collapseAll() {\r\n        for (let element of this.elements) {\r\n            if (element.isFolder) {\r\n                if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                    element.$htmlFirstLine.removeClass('jo_expanded');\r\n                    element.$htmlFirstLine.addClass('jo_collapsed');\r\n                }\r\n            }\r\n            if (element.path.length > 0) {\r\n                element.$htmlFirstLine.slideUp(200);\r\n            }\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        this.$captionElement.remove();\r\n        this.$listElement.remove();\r\n    }\r\n\r\n    setFixed(fixed: boolean) {\r\n        this.fixed = fixed;\r\n        if (this.fixed) {\r\n            this.grow();\r\n            this.$captionElement.addClass('jo_fixed');\r\n        } else {\r\n            this.$captionElement.removeClass('jo_fixed');\r\n        }\r\n\r\n    }\r\n\r\n    //     <div class=\"jo_leftpanelcaption expanded\" id=\"workspace\" data-panel=\"filelistouter\">\r\n    //     <span>WORKSPACE</span>\r\n    //     <div class=\"jo_actions\"><img id=\"buttonNewFile\" title=\"Neue Datei hinzufügen\"\r\n    //             src=\"assets/projectexplorer/add-file-dark.svg\"></div>\r\n    // </div>\r\n    // <div id=\"filelistouter\" class=\"jo_projectexplorerdiv scrollable\" data-grow=\"3\"\r\n    //     style=\"flex-grow: 3\">\r\n    //     <div id=\"filelist\"></div>\r\n    // </div>\r\n\r\n\r\n    enableNewButton(enabled: boolean) {\r\n        if (this.$buttonNew != null) {\r\n            if (enabled) {\r\n                this.$buttonNew.show();\r\n            } else {\r\n                this.$buttonNew.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    getCurrentlySelectedPath(): string[] {\r\n        let pathArray: string[] = [];\r\n        let selectedElement = this.getSelectedElement();\r\n        if (selectedElement != null) {\r\n            pathArray = selectedElement.path.slice(0);\r\n            if (selectedElement.isFolder) pathArray.push(selectedElement.name);\r\n        }\r\n        return pathArray;\r\n    }\r\n\r\n    compareWithPath(name1: string, path1: string[], isFolder1: boolean, name2: string, path2: string[], isFolder2: boolean) {\r\n\r\n        path1 = path1.slice();\r\n        path1.push(name1);\r\n        name1 = \"\";\r\n\r\n        path2 = path2.slice();\r\n        path2.push(name2);\r\n        name2 = \"\";\r\n\r\n        let i = 0;\r\n        while (i < path1.length && i < path2.length) {\r\n            let cmp = path1[i].localeCompare(path2[i]);\r\n            if (cmp != 0) return cmp;\r\n            i++;\r\n        }\r\n\r\n        if (path1.length < path2.length) return -1;\r\n        if (path1.length > path2.length) return 1;\r\n\r\n        return name1.localeCompare(name2);\r\n\r\n\r\n        // let nameWithPath1 = path1.join(\"/\");\r\n        // if (nameWithPath1 != \"\" && name1 != \"\") nameWithPath1 += \"/\";\r\n        // nameWithPath1 += name1;\r\n\r\n        // let nameWithPath2 = path2.join(\"/\");\r\n        // if (nameWithPath2 != \"\" && name2 != \"\") nameWithPath2 += \"/\";\r\n        // nameWithPath2 += name2;\r\n\r\n        // return nameWithPath1.localeCompare(nameWithPath2);\r\n    }\r\n\r\n\r\n    getElementIndex(name: string, path: string[], isFolder: boolean): number {\r\n\r\n        for (let i = 0; i < this.elements.length; i++) {\r\n            let element = this.elements[i];\r\n\r\n            if (this.compareWithPath(name, path, isFolder, element.name, element.path, element.isFolder) < 0) return i;\r\n\r\n        }\r\n        return this.elements.length;\r\n    }\r\n\r\n    insertElement(ae: AccordionElement) {\r\n        let insertIndex = this.getElementIndex(ae.name, ae.path, ae.isFolder);\r\n        // if (ae.path.length == 0) insertIndex = this.elements.length;\r\n        this.elements.splice(insertIndex, 0, ae);\r\n\r\n        let $elements = this.$listElement.find('.jo_file');\r\n\r\n        if (insertIndex == 0) {\r\n            this.$listElement.prepend(ae.$htmlFirstLine);\r\n        } else if(insertIndex == $elements.length){\r\n            this.$listElement.append(ae.$htmlFirstLine);\r\n        } else {\r\n            let elementAtIndex = $elements.get(insertIndex);\r\n            jQuery(elementAtIndex).before(ae.$htmlFirstLine);\r\n        }\r\n\r\n    }\r\n\r\n    addFolder(name: string, path: string[], callback: (newPanel: AccordionElement) => void) {\r\n\r\n        let ae: AccordionElement = {\r\n            name: name,\r\n            isFolder: true,\r\n            path: path\r\n        }\r\n\r\n        let $element = this.renderElement(ae, true);\r\n\r\n        this.insertElement(ae);\r\n\r\n        $element[0].scrollIntoView();\r\n\r\n        this.renameElement(ae, () => {\r\n\r\n            callback(ae);\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    renderOuterHtmlElements($accordionDiv: JQuery<HTMLElement>) {\r\n        let that = this;\r\n\r\n        this.$captionElement = jQuery(`<div class=\"jo_leftpanelcaption jo_expanded\">\r\n        <div class=\"jo_captiontext\">` + this.caption + `</div><div class=\"jo_actions\"></div></div>`);\r\n\r\n        if (this.newButtonClass != null) {\r\n            this.$buttonNew = jQuery('<div class=\"jo_button jo_active ' + this.newButtonClass + '\" title=\"' + this.buttonNewTitle + '\">');\r\n            this.$captionElement.find('.jo_actions').append(this.$buttonNew);\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n            this.$buttonNew.on(mousePointer + 'down', (ev) => {\r\n\r\n                Helper.close();\r\n                ev.stopPropagation();\r\n\r\n                let path = that.getCurrentlySelectedPath();\r\n\r\n                let ae: AccordionElement = {\r\n                    name: \"Neu\",\r\n                    isFolder: false,\r\n                    path: path\r\n                }\r\n\r\n                let insertIndex = this.getElementIndex(\"\", path, false);\r\n                this.elements.splice(insertIndex, 0, ae);\r\n                let $element = this.renderElement(ae, true);\r\n\r\n\r\n                if (insertIndex == 0) {\r\n                    this.$listElement.prepend($element);\r\n                } else {\r\n                    let elementAtIndex = this.$listElement.find('.jo_file').get(insertIndex - 1);\r\n                    jQuery(elementAtIndex).after($element);\r\n                }\r\n\r\n                $element[0].scrollIntoView();\r\n\r\n                that.renameElement(ae, () => {\r\n\r\n                    that.newFilesElementCallback(ae, (externalElement: any) => {\r\n\r\n                        ae.externalElement = externalElement;\r\n\r\n                        if (ae.$htmlSecondLine != null) {\r\n                            ae.$htmlSecondLine.insertAfter($element);\r\n                        }\r\n\r\n                        if (that.selectCallback != null) that.select(ae.externalElement);\r\n\r\n                    });\r\n\r\n                });\r\n\r\n            });\r\n\r\n        }\r\n\r\n        let $listOuter = jQuery('<div id=\"filelistouter\" class=\"jo_projectexplorerdiv jo_scrollable\" data-grow=\"'\r\n            + this.flexWeight + '\" style=\"flex-grow: ' + this.flexWeight + '\"></div>');\r\n        this.$listElement = jQuery('<div class=\"jo_filelist\"></div>')\r\n\r\n        $listOuter.append(this.$listElement);\r\n\r\n        $accordionDiv.append(this.$captionElement);\r\n        $accordionDiv.append($listOuter);\r\n\r\n        let $ce = this.$captionElement;\r\n        let $li = this.$listElement.parent();\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $ce.on(mousePointer + 'down', (ev) => {\r\n            if (ev.button != 0) {\r\n                return;\r\n            }\r\n\r\n            if (!this.fixed) {\r\n                let targetGrow = $li.data('grow');\r\n                if ($ce.hasClass('jo_expanded')) {\r\n                    if (that.accordion.parts.length > 1) {\r\n                        $li.animate({\r\n                            'flex-grow': 0.001\r\n                        }, 1000, () => { $ce.toggleClass('jo_expanded'); });\r\n                    }\r\n                } else {\r\n                    $ce.toggleClass('jo_expanded');\r\n                    $li.animate({\r\n                        'flex-grow': targetGrow\r\n                    }, 1000);\r\n                }\r\n            }\r\n        });\r\n\r\n        $ce.on('dragover', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                $ce.addClass('jo_file_dragover');\r\n                event.preventDefault();\r\n            }\r\n        })\r\n\r\n        $ce.on('dragleave', (event) => {\r\n            $ce.removeClass('jo_file_dragover');\r\n        })\r\n\r\n        $ce.on('drop', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                event.preventDefault();\r\n                $ce.removeClass('jo_file_dragover');\r\n                let element1 = AccordionPanel.currentlyDraggedElement;\r\n                if (element1 != null) {\r\n                    that.moveElement(element1, null);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    grow() {\r\n        let $li = this.$listElement.parent();\r\n        let targetGrow = $li.data('grow');\r\n        $li.css('flex-grow', targetGrow);\r\n        this.$captionElement.addClass('jo_expanded');\r\n    }\r\n\r\n    addElement(element: AccordionElement, expanded: boolean) {\r\n        // this.elements.push(element);\r\n        // element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        // this.$listElement.prepend(element.$htmlFirstLine);\r\n        element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        this.insertElement(element);\r\n    }\r\n\r\n    sortElements() {\r\n        if (this.dontSortElements) return;\r\n        this.elements.sort((a, b) => {\r\n            let aName = a.sortName ? a.sortName : a.name;\r\n            let bName = b.sortName ? b.sortName : b.name;\r\n\r\n            return this.compareWithPath(aName, a.path, a.isFolder, bName, b.path, b.isFolder);\r\n\r\n        });\r\n        this.elements.forEach((element) => { this.$listElement.append(element.$htmlFirstLine) });\r\n    }\r\n\r\n    setTextAfterFilename(element: AccordionElement, text: string, cssClass: string) {\r\n        if(element == null) return;\r\n        let $div = element.$htmlFirstLine.find('.jo_textAfterName');\r\n        $div.addClass(cssClass);\r\n        $div.html(text);\r\n    }\r\n\r\n    addAction($element: JQuery<HTMLElement>) {\r\n        this.$captionElement.find('.jo_actions').prepend($element);\r\n    }\r\n\r\n    renderElement(element: AccordionElement, expanded: boolean): JQuery<HTMLElement> {\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        let that = this;\r\n\r\n        let expandedCollapsed = \"\";\r\n\r\n        if (element.iconClass == null) element.iconClass = this.defaultIconClass;\r\n        if (element.isFolder) {\r\n            element.iconClass = \"folder\";\r\n            expandedCollapsed = expanded ? \" jo_expanded\" : \" jo_collapsed\";\r\n        }\r\n\r\n        let pathHtml = \"\";\r\n        if (element.path == null) element.path = [];\r\n        for (let i = 0; i < element.path.length; i++) {\r\n            pathHtml += '<div class=\"jo_folderline\"></div>';\r\n        }\r\n\r\n        element.$htmlFirstLine = jQuery(`<div class=\"jo_file jo_${element.iconClass} ${expandedCollapsed}\">\r\n        <div class=\"jo_folderlines\">${pathHtml}</div>\r\n           <div class=\"jo_fileimage\"></div>\r\n           <div class=\"jo_filename\">${escapeHtml(element.name)}</div>\r\n           <div class=\"jo_textAfterName\"></div>\r\n           <div class=\"jo_additionalButtonSettings\"></div>\r\n           ${this.withDeleteButton ? '<div class=\"jo_delete img_delete jo_button jo_active' + (false ? \" jo_delete_always\" : \"\") + '\"></div>' : \"\"}\r\n           ${!jo_mouseDetected ? '<div class=\"jo_settings_button img_ellipsis-dark jo_button jo_active\"></div>' : \"\"}\r\n           </div>`);\r\n\r\n        if (!expanded && element.path.length > 0) {\r\n            element.$htmlFirstLine.hide();\r\n        }\r\n\r\n        if (this.addElementActionCallback != null) {\r\n            let $elementAction = this.addElementActionCallback(element);\r\n            element.$htmlFirstLine.append($elementAction);\r\n        }\r\n\r\n        if (this.withFolders) {\r\n            if (element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            that.moveElement(element1, element);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withFolders || this.enableDrag) {\r\n            let $filedragpart = element.$htmlFirstLine.find('.jo_filename');\r\n            $filedragpart.attr('draggable', 'true');\r\n            $filedragpart.on('dragstart', (event) => {\r\n                AccordionPanel.currentlyDraggedElement = element;\r\n                AccordionPanel.currentlyDraggedElementKind = that.kind;\r\n                event.originalEvent.dataTransfer.effectAllowed = element.isFolder ? \"move\" : \"copyMove\";\r\n            })\r\n        }\r\n\r\n        if (this.acceptDropKinds != null && this.acceptDropKinds.length > 0) {\r\n            if (!element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n\r\n                        if (event.ctrlKey) {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"copy\";\r\n                        } else {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"move\";\r\n                        }\r\n\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            if (that.dropElementCallback != null) that.dropElementCallback(element, element1, event.ctrlKey ? \"copy\" : \"move\");\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        element.$htmlFirstLine.on(mousePointer + 'up', (ev) => {\r\n\r\n            if (ev.button == 0 && that.selectCallback != null) {\r\n                that.selectCallback(element.externalElement);\r\n\r\n                for (let ae of that.elements) {\r\n                    if (ae != element && ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                        ae.$htmlFirstLine.removeClass('jo_active');\r\n                    }\r\n                }\r\n\r\n                element.$htmlFirstLine.addClass('jo_active');\r\n\r\n                if (element.isFolder) {\r\n\r\n                    if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                        element.$htmlFirstLine.removeClass('jo_expanded');\r\n                        element.$htmlFirstLine.addClass('jo_collapsed');\r\n                    } else {\r\n                        element.$htmlFirstLine.addClass('jo_expanded');\r\n                        element.$htmlFirstLine.removeClass('jo_collapsed');\r\n                    }\r\n\r\n                    let pathIsCollapsed: { [path: string]: boolean } = {};\r\n                    for (let e of this.elements) {\r\n                        if (e.isFolder) {\r\n                            let path = e.path.join(\"/\");\r\n                            if (path != \"\") path += \"/\";\r\n                            path += e.name;\r\n                            pathIsCollapsed[path] = e.$htmlFirstLine.hasClass('jo_collapsed');\r\n                            if (pathIsCollapsed[e.path.join(\"/\")]) pathIsCollapsed[path] = true;\r\n                        }\r\n                    }\r\n                    pathIsCollapsed[\"\"] = false;\r\n\r\n                    for (let e of this.elements) {\r\n                        if (pathIsCollapsed[e.path.join(\"/\")]) {\r\n                            e.$htmlFirstLine.slideUp(200);\r\n                        } else {\r\n                            e.$htmlFirstLine.slideDown(200);\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n\r\n        let contextmenuHandler = function (event) {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [];\r\n            if (that.renameCallback != null) {\r\n                contextMenuItems.push({\r\n                    caption: \"Umbenennen\",\r\n                    callback: () => {\r\n                        that.renameElement(element);\r\n                    }\r\n                })\r\n            }\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n            if (element.isFolder) {\r\n                contextMenuItems = contextMenuItems.concat([\r\n                    {\r\n                        caption: \"Neuen Unterordner anlegen (unterhalb '\" + element.name + \"')...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            // that.$newFolderAction.trigger(mousePointer + 'down');\r\n                            let pathArray = that.getCurrentlySelectedPath();\r\n\r\n                            that.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                                that.newFolderCallback(newElement, () => {\r\n                                    that.sortElements();\r\n                                    newElement.$htmlFirstLine[0].scrollIntoView();\r\n                                    animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                                });\r\n                            });\r\n\r\n                        }\r\n                    }, {\r\n                        caption: \"Neue Datenbank...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n\r\n                            that.newDatabaseElementCallback(element.path.concat(element.name));\r\n\r\n                        }\r\n                    }\r\n                ])\r\n            }\r\n\r\n\r\n            if (that.contextMenuProvider != null && !element.isFolder) {\r\n\r\n                for (let cmi of that.contextMenuProvider(element)) {\r\n                    contextMenuItems.push({\r\n                        caption: cmi.caption,\r\n                        callback: () => {\r\n                            cmi.callback(element);\r\n                        },\r\n                        color: cmi.color,\r\n                        subMenu: cmi.subMenu == null ? null : cmi.subMenu.map((mi) => {\r\n                            return {\r\n                                caption: mi.caption,\r\n                                callback: () => {\r\n                                    mi.callback(element);\r\n                                },\r\n                                color: mi.color\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n\r\n            if (contextMenuItems.length > 0) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                openContextMenu(contextMenuItems, event.pageX, event.pageY);\r\n            }\r\n        };\r\n\r\n        element.$htmlFirstLine[0].addEventListener(\"contextmenu\", contextmenuHandler, false);\r\n\r\n        // long press for touch devices\r\n        let pressTimer: number;\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.on('pointerup', () => {\r\n                clearTimeout(pressTimer);\r\n                return false;\r\n            }).on('pointerdown', (event) => {\r\n                pressTimer = window.setTimeout(() => {\r\n                    contextmenuHandler(event);\r\n                }, 500);\r\n                return false;\r\n            });\r\n        }\r\n\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('pointerdown', (e) => {\r\n                contextmenuHandler(e);\r\n            });\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('mousedown click', (e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            });\r\n        }\r\n\r\n        if (that.withDeleteButton) {\r\n\r\n            element.$htmlFirstLine.find('.jo_delete')[0].addEventListener(\"contextmenu\", (event) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n            }, false);\r\n\r\n            element.$htmlFirstLine.find('.jo_delete').on(mousePointer + 'up', (ev) => {\r\n                ev.preventDefault();\r\n                openContextMenu([{\r\n                    caption: \"Abbrechen\",\r\n                    callback: () => {\r\n                        // nothing to do.\r\n                    }\r\n                }, {\r\n                    caption: \"Ich bin mir sicher: löschen!\",\r\n                    color: \"#ff6060\",\r\n                    callback: () => {\r\n\r\n                        if (element.isFolder) {\r\n                            if (that.getChildElements(element).length > 0) {\r\n                                alert('Dieser Ordner kann nicht gelöscht werden, da er nicht leer ist.');\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        that.deleteCallback(element.externalElement, () => {\r\n                            element.$htmlFirstLine.remove();\r\n                            if (element.$htmlSecondLine != null) element.$htmlSecondLine.remove();\r\n                            that.elements.splice(that.elements.indexOf(element), 1);\r\n\r\n                            if (that.selectCallback != null) {\r\n                                if (that.elements.length > 0) {\r\n                                    that.select(that.elements[0].externalElement);\r\n                                } else {\r\n                                    that.select(null);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }], ev.pageX + 2, ev.pageY + 2);\r\n                ev.stopPropagation();\r\n            });\r\n        }\r\n\r\n        return element.$htmlFirstLine;\r\n\r\n    }\r\n\r\n    moveElement(elementToMove: AccordionElement, destinationFolder: AccordionElement) {\r\n        let destinationPath: string[] = destinationFolder == null ? [] : destinationFolder.path.slice(0).concat([destinationFolder.name]);\r\n        if (elementToMove.isFolder) {\r\n            let movedElements: AccordionElement[] = [elementToMove];\r\n\r\n            let sourcePath = elementToMove.path.concat([elementToMove.name]).join(\"/\");\r\n\r\n            if(destinationPath.join('/').indexOf(sourcePath) == 0) return;\r\n\r\n            let oldPathLength = elementToMove.path.length;\r\n            elementToMove.path = destinationPath.slice(0);\r\n\r\n            for (let element of this.elements) {\r\n                if (element.path.join(\"/\").startsWith(sourcePath)) {\r\n                    element.path.splice(0, oldPathLength);\r\n                    element.path = destinationPath.concat(element.path);\r\n                    movedElements.push(element);\r\n                }\r\n            }\r\n\r\n            for (let el of movedElements) {\r\n                el.$htmlFirstLine.remove();\r\n                this.elements.splice(this.elements.indexOf(el), 1);\r\n            }\r\n            for (let el of movedElements) {\r\n                this.renderElement(el, true);\r\n                this.insertElement(el);\r\n            }\r\n\r\n            this.moveCallback(movedElements);\r\n        } else {\r\n            elementToMove.path = destinationPath;\r\n            elementToMove.$htmlFirstLine.remove();\r\n            this.elements.splice(this.elements.indexOf(elementToMove), 1);\r\n            this.renderElement(elementToMove, true);\r\n            this.insertElement(elementToMove);\r\n            this.select(elementToMove.externalElement);\r\n            elementToMove.$htmlFirstLine[0].scrollIntoView();\r\n            this.moveCallback(elementToMove);\r\n        }\r\n    }\r\n\r\n    getChildElements(folder: AccordionElement): AccordionElement[] {\r\n        let path = folder.path.slice(0).concat(folder.name).join(\"/\");\r\n        return this.elements.filter((element) => element.path.join(\"/\").startsWith(path));\r\n    }\r\n\r\n    renameElement(element: AccordionElement, callback?: () => void) {\r\n        let that = this;\r\n        let $div = element.$htmlFirstLine.find('.jo_filename');\r\n        let pointPos = element.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        this.dontSortElements = true;\r\n        makeEditable($div, $div, (newText: string) => {\r\n            if (element.externalElement != null) newText = that.renameCallback(element.externalElement, newText);\r\n            element.name = newText;\r\n            $div.html(element.name);\r\n            if (callback != null) callback();\r\n            that.sortElements();\r\n            $div[0].scrollIntoView();\r\n            this.dontSortElements = false;\r\n        }, selection);\r\n    }\r\n\r\n    select(externalElement: any, invokeCallback: boolean = true, scrollIntoView: boolean = false) {\r\n\r\n        if (externalElement == null) {\r\n            for (let ae1 of this.elements) {\r\n                if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n            }\r\n        } else {\r\n            let ae = this.findElement(externalElement);\r\n\r\n            if (ae != null) {\r\n                for (let ae1 of this.elements) {\r\n                    if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n                }\r\n\r\n                ae.$htmlFirstLine.addClass('jo_active');\r\n                if (scrollIntoView) {\r\n                    let pathString = ae.path.join(\"/\");\r\n                    for (let el of this.elements) {\r\n                        let elPath = el.path.slice(0);\r\n                        if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                            if (el.isFolder) {\r\n                                elPath.push(el.name);\r\n                                if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                                    el.$htmlFirstLine.removeClass(\"jo_collapsed\");\r\n                                    el.$htmlFirstLine.addClass(\"jo_expanded\");\r\n                                }\r\n                            }\r\n                            el.$htmlFirstLine.show();\r\n                        }\r\n\r\n                    }\r\n\r\n                    ae.$htmlFirstLine[0].scrollIntoView();\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (invokeCallback && this.selectCallback != null) this.selectCallback(externalElement);\r\n\r\n    }\r\n\r\n    getPathString(ae: AccordionElement) {\r\n        let ps: string = ae.path.join(\"/\");\r\n        if (ae.isFolder) {\r\n            if (ps != \"\") ps += \"/\";\r\n            ps += ae.name;\r\n        }\r\n        return ps;\r\n    }\r\n\r\n    setElementClass(element: AccordionElement, iconClass: string) {\r\n        if (element != null) {\r\n            element.$htmlFirstLine?.removeClass(\"jo_\" + element.iconClass).addClass(\"jo_\" + iconClass);\r\n            element.iconClass = iconClass;\r\n        }\r\n\r\n    }\r\n\r\n    findElement(externalElement: any): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                return ae;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    removeElement(externalElement: any) {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                ae.$htmlFirstLine.remove();\r\n                if (ae.$htmlSecondLine != null) ae.$htmlSecondLine.remove();\r\n                this.elements.splice(this.elements.indexOf(ae), 1);\r\n\r\n                if (this.selectCallback != null) {\r\n                    if (this.elements.length > 0) {\r\n                        this.select(this.elements[0].externalElement);\r\n                    } else {\r\n                        this.select(null);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.$listElement.empty();\r\n        this.elements = [];\r\n    }\r\n\r\n    setCaption(text: string) {\r\n        this.$captionElement.find('.jo_captiontext').html(text);\r\n    }\r\n\r\n    getSelectedElement(): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                return ae;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class Accordion {\r\n\r\n    parts: AccordionPanel[] = [];\r\n    $html: JQuery<HTMLElement>;\r\n\r\n    constructor(public main: MainBase, $html: JQuery<HTMLElement>) {\r\n        this.$html = $html;\r\n        $html.addClass('jo_leftpanelinner');\r\n    }\r\n\r\n    addPanel(panel: AccordionPanel) {\r\n        panel.renderOuterHtmlElements(this.$html);\r\n        this.parts.push(panel);\r\n    }\r\n\r\n}","import { ClassData, UserData } from \"../../communication/Data.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { isEmptyObject } from \"jquery\";\r\n\r\nexport class DistributeToStudentsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n    studentCount: number = 0;\r\n\r\n    constructor(private classes: ClassData[], private workspace: Workspace, private main: Main){\r\n        this.init();\r\n    }\r\n\r\n    private init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Austeilen eines Workspace an einzelne Schüler/innen</div>\r\n             <div class=\"jo_ds_settings\">\r\n                <div class=\"jo_ds_settings_caption\">Workspace:</div><div class=\"jo_ds_workspacename\">${this.workspace.name}</div>\r\n                <div class=\"jo_ds_settings_caption\">Liste filtern:</div><div class=\"jo_ds_filterdiv\"><input class=\"dialog-input\"></input></div>\r\n             </div>\r\n             <div class=\"jo_ds_student_list jo_scrollable\">\r\n             </div>\r\n             <div class=\"jo_ds_selected_message\"></div>\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_distribute_button\">Austeilen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        let $studentList = jQuery('.jo_ds_student_list');\r\n        let that = this;\r\n\r\n        for(let klass of this.classes){\r\n            for(let student of klass.students){\r\n                let $studentLine = jQuery('<div class=\"jo_ds_student_line\">');\r\n                let $studentClass = jQuery(`<div class=\"jo_ds_student_class\">${klass.name}</div>`);                \r\n                let $studentName = jQuery(`<div class=\"jo_ds_student_name\">${student.rufname} ${student.familienname}</div>`);\r\n                $studentLine.append($studentClass, $studentName);\r\n                $studentList.append($studentLine);\r\n                $studentLine.on('mousedown', () => {\r\n                    $studentLine.toggleClass('jo_active');\r\n                     that.studentCount += $studentLine.hasClass('jo_active') ? 1 : -1;\r\n                     jQuery('.jo_ds_selected_message').text(`${that.studentCount} Schüler/inn/en selektiert`);\r\n                });\r\n                $studentLine.data('student', student);\r\n                $studentLine.data('klass', klass);\r\n            }\r\n        }\r\n\r\n        jQuery('.jo_ds_filterdiv>input').on('input', () => {\r\n            let filterText = <string>jQuery('.jo_ds_filterdiv>input').val();\r\n            if(filterText == null || filterText == \"\"){\r\n                $('.jo_ds_student_line').show();\r\n            } else {\r\n                $('.jo_ds_student_line').each((index, element) => {\r\n                    let $element = jQuery(element);\r\n                    let klass:ClassData = $element.data('klass');\r\n                    let student: UserData = $element.data('student');\r\n                    let text = klass.name + \" \" + student.rufname + \" \" + student.familienname;\r\n                    if(text.indexOf(filterText) >= 0){\r\n                        $element.show();\r\n                    } else {\r\n                        $element.hide();\r\n                    }\r\n                });\r\n\r\n            }\r\n            \r\n        });\r\n\r\n\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { that.close() });\r\n        jQuery('#jo_ds_distribute_button').on('click', () => {that.distributeWorkspace();});\r\n\r\n    }\r\n\r\n    distributeWorkspace() {\r\n\r\n        let student_ids: number[] = [];\r\n        $('.jo_ds_student_line').each((index, element) => {\r\n            let $element = jQuery(element);\r\n            if($element.hasClass('jo_active')){\r\n                let student: UserData = $element.data('student');\r\n                student_ids.push(student.id);\r\n            }\r\n        });\r\n\r\n        this.close();\r\n\r\n        this.main.networkManager.sendDistributeWorkspace(this.workspace, null, student_ids, (error: string) => {\r\n            if (error == null) {\r\n                let networkManager = this.main.networkManager;\r\n                let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                alert(`Der Workspace ${this.workspace.name} wurde an ${student_ids.length} Schüler/innen ausgeteilt. Er wird in maximal ${dt} s bei jedem Schüler ankommen.`);\r\n            } else {\r\n                alert(error);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n    \r\n\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionPanel, Accordion, AccordionElement, AccordionContextMenuItem } from \"./Accordion.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { WorkspaceData, Workspaces, ClassData, CreateWorkspaceData } from \"../../communication/Data.js\";\r\nimport { dateToString } from \"../../tools/StringTools.js\";\r\nimport { DistributeToStudentsDialog } from \"./DistributeToStudentsDialog.js\";\r\nimport { NewDatabaseDialog } from \"./NewDatabaseDialog.js\";\r\n\r\n\r\nexport class ProjectExplorer {\r\n\r\n    programPointerModule: Module = null;\r\n    programPointerPosition: TextPosition;\r\n    programPointerDecoration: string[] = [];\r\n\r\n    accordion: Accordion;\r\n    fileListPanel: AccordionPanel;\r\n    workspaceListPanel: AccordionPanel;\r\n\r\n    $homeAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private $projectexplorerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.accordion = new Accordion(this.main, this.$projectexplorerDiv);\r\n\r\n        this.initFilelistPanel();\r\n\r\n        this.initWorkspacelistPanel();\r\n\r\n    }\r\n\r\n    initFilelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.fileListPanel = new AccordionPanel(this.accordion, \"Kein Workspace gewählt\", \"1\",\r\n            \"img_add-file-dark\", \"Neue Datei...\", \"java\", true, false, \"file\", true, []);\r\n\r\n        this.fileListPanel.newFilesElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                if (that.main.currentWorkspace == null) {\r\n                    alert('Bitte wählen Sie zuerst einen Workspace aus.');\r\n                    return null;\r\n                }\r\n\r\n                let f: File = {\r\n                    name: accordionElement.name,\r\n                    dirty: false,\r\n                    saved: true,\r\n                    text: \"\",\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    panelElement: accordionElement\r\n                };\r\n                let m = new Module(f, that.main);\r\n                let modulStore = that.main.currentWorkspace.moduleStore;\r\n                modulStore.putModule(m);\r\n                that.setModuleActive(m);\r\n                that.main.networkManager.sendCreateFile(m, that.main.currentWorkspace, that.main.workspacesOwnerId,\r\n                    (error: string) => {\r\n                        if (error == null) {\r\n                            successfulNetworkCommunicationCallback(m);\r\n                        } else {\r\n                            alert('Der Server ist nicht erreichbar!');\r\n\r\n                        }\r\n                    });\r\n\r\n            };\r\n\r\n        this.fileListPanel.renameCallback =\r\n            (module: Module, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                let file = module.file;\r\n\r\n                file.name = newName;\r\n                file.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.fileListPanel.deleteCallback =\r\n            (module: Module, callbackIfSuccessful: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.currentWorkspace.moduleStore.removeModule(module);\r\n                        callbackIfSuccessful();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.fileListPanel.contextMenuProvider = (accordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            if (!(that.main.user.is_teacher || that.main.user.is_admin || that.main.user.is_schooladmin)) {\r\n                let module: Module = <Module>accordionElement.externalElement;\r\n                let file = module.file;\r\n\r\n                // if (file.submitted_date == null) {\r\n                //     cmiList.push({\r\n                //         caption: \"Als Hausaufgabe markieren\",\r\n                //         callback: (element: AccordionElement) => {\r\n\r\n                //             let file = (<Module>element.externalElement).file;\r\n                //             file.submitted_date = dateToString(new Date());\r\n                //             file.saved = false;\r\n                //             that.main.networkManager.sendUpdates(null, true);\r\n                //             that.renderHomeworkButton(file);\r\n                //         }\r\n                //     });\r\n                // } else {\r\n                //     cmiList.push({\r\n                //         caption: \"Hausaufgabenmarkierung entfernen\",\r\n                //         callback: (element: AccordionElement) => {\r\n\r\n                //             let file = (<Module>element.externalElement).file;\r\n                //             file.submitted_date = null;\r\n                //             file.saved = false;\r\n                //             that.main.networkManager.sendUpdates(null, true);\r\n                //             that.renderHomeworkButton(file);\r\n\r\n                //         }\r\n                //     });\r\n                // }\r\n\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n\r\n\r\n        this.fileListPanel.selectCallback =\r\n            (module: Module) => {\r\n                that.setModuleActive(module);\r\n            }\r\n\r\n\r\n\r\n    }\r\n\r\n    renderHomeworkButton(file: File) {\r\n        let $buttonDiv = file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonHomework');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_homeworkButton').remove();\r\n\r\n        let klass: string = null;\r\n        let title: string = \"\";\r\n        if (file.submitted_date != null) {\r\n            klass = \"img_homework\";\r\n            title = \"Wurde als Hausaufgabe abgegeben: \" + file.submitted_date\r\n            if (file.text_before_revision) {\r\n                klass = \"img_homework-corrected\";\r\n                title = \"Korrektur liegt vor.\"\r\n            }\r\n        }\r\n\r\n        if (klass != null) {\r\n            let $homeworkButtonDiv = jQuery(`<div class=\"jo_homeworkButton ${klass}\" title=\"${title}\"></div>`);\r\n            $buttonDiv.prepend($homeworkButtonDiv);\r\n            if (klass.indexOf(\"jo_active\") >= 0) {\r\n                $homeworkButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n                $homeworkButtonDiv.on('click', (e) => {\r\n                    e.stopPropagation();\r\n                    // TODO\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initWorkspacelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.workspaceListPanel = new AccordionPanel(this.accordion, \"Datenbanken\", \"3\",\r\n            null, \"Neue Datenbank...\", \"workspace\", true, true, \"workspace\", false, [\"file\"]);\r\n\r\n        let $newWorkspaceAction = jQuery('<div class=\"img_add-database-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Neue Datenbank auf oberster Ordnerebene anlegen\">');\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $newWorkspaceAction.on(mousePointer + 'down', (e) => {\r\n            e.stopPropagation();\r\n\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            new NewDatabaseDialog(that.main, owner_id, this.workspaceListPanel.getCurrentlySelectedPath());\r\n\r\n        })\r\n\r\n        this.workspaceListPanel.addAction($newWorkspaceAction);\r\n        if(this.workspaceListPanel.$buttonNew != null){\r\n            this.workspaceListPanel.$buttonNew.hide();\r\n        }\r\n\r\n        this.workspaceListPanel.newDatabaseElementCallback = (path: string[]) => {\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            new NewDatabaseDialog(that.main, owner_id, path);\r\n\r\n        }\r\n\r\n\r\n        this.workspaceListPanel.renameCallback =\r\n            (workspace: Workspace, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                workspace.name = newName;\r\n                workspace.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.workspaceListPanel.deleteCallback =\r\n            (workspace: Workspace, successfulNetworkCommunicationCallback: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"workspace\", workspace.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.removeWorkspace(workspace);\r\n                        if(!workspace.isFolder){\r\n                            that.fileListPanel.clear();\r\n                            that.main.databaseExplorer.clear();\r\n                            that.main.getResultsetPresenter().clear();\r\n                            that.fileListPanel.enableNewButton(false);\r\n                            that.main.getMonacoEditor().setModel(null);\r\n                        }\r\n                        successfulNetworkCommunicationCallback();\r\n                    } else {\r\n                        alert('Fehler: ' + error);\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.workspaceListPanel.selectCallback =\r\n            (workspace: Workspace) => {\r\n                if(workspace.isFolder) return;\r\n                if (workspace != this.main.currentWorkspace) {\r\n                    that.main.networkManager.sendUpdates(() => {\r\n                        that.setWorkspaceActive(workspace);\r\n                    });\r\n                }\r\n            }\r\n\r\n        this.workspaceListPanel.newFolderCallback = (newElement: AccordionElement, successCallback) => {\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            let folder: Workspace = new Workspace(newElement.name, that.main, owner_id);\r\n            folder.isFolder = true;\r\n\r\n            folder.path = newElement.path.join(\"/\");\r\n            folder.panelElement = newElement;\r\n            newElement.externalElement = folder;\r\n            that.main.workspaceList.push(folder);\r\n\r\n            let wd: CreateWorkspaceData = {\r\n                id: -1,\r\n                isFolder: true,\r\n                name: folder.name,\r\n                path: folder.path\r\n            }\r\n\r\n            that.main.networkManager.sendCreateWorkspace(wd, that.main.workspacesOwnerId, (error: string) => {\r\n                if (error == null) {\r\n                    folder.id = wd.id;\r\n                    successCallback(folder);\r\n\r\n                } else {\r\n                    alert(\"Fehler: \" + error);\r\n                    that.workspaceListPanel.removeElement(newElement);\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        this.workspaceListPanel.moveCallback = (ae: AccordionElement | AccordionElement[]) => {\r\n            if (!Array.isArray(ae)) ae = [ae];\r\n            for (let a of ae) {\r\n                let ws: Workspace = a.externalElement;\r\n                ws.path = a.path.join(\"/\");\r\n                ws.saved = false;\r\n            }\r\n            this.main.networkManager.sendUpdates();\r\n        }\r\n\r\n        this.workspaceListPanel.dropElementCallback = (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => {\r\n            let workspace: Workspace = dest.externalElement;\r\n            let module: Module = droppedElement.externalElement;\r\n\r\n            if (workspace.moduleStore.getModules(false).indexOf(module) >= 0) return; // module is already in destination workspace\r\n\r\n            let f: File = {\r\n                name: module.file.name,\r\n                dirty: true,\r\n                saved: false,\r\n                text: module.file.text,\r\n                text_before_revision: null,\r\n                submitted_date: null,\r\n                student_edited_after_revision: false,\r\n                version: module.file.version,\r\n                panelElement: null\r\n            };\r\n\r\n            if (dropEffekt == \"move\") {\r\n                // move file\r\n                let oldWorkspace = that.main.currentWorkspace;\r\n                oldWorkspace.moduleStore.removeModule(module);\r\n                that.fileListPanel.removeElement(module);\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, () => { });\r\n            }\r\n\r\n            let m = new Module(f, that.main);\r\n            let modulStore = workspace.moduleStore;\r\n            modulStore.putModule(m);\r\n            that.main.networkManager.sendCreateFile(m, workspace, that.main.workspacesOwnerId,\r\n                (error: string) => {\r\n                    if (error == null) {\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n\r\n        }\r\n\r\n\r\n\r\n        this.$homeAction = jQuery('<div class=\"img_home-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Meine eigenen Workspaces anzeigen\">');\r\n\r\n        this.$homeAction.on(mousePointer +'down', (e) => {\r\n            e.stopPropagation();\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n                that.onHomeButtonClicked();\r\n            });\r\n\r\n            that.main.bottomDiv.hideHomeworkTab();\r\n\r\n        })\r\n\r\n        this.workspaceListPanel.addAction(this.$homeAction);\r\n        this.$homeAction.hide();\r\n\r\n        this.workspaceListPanel.contextMenuProvider = (workspaceAccordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            if (this.main.user.is_teacher && this.main.teacherExplorer.classPanel.elements.length > 0) {\r\n                cmiList.push({\r\n                    caption: \"An Klasse austeilen...\",\r\n                    callback: (element: AccordionElement) => { },\r\n                    subMenu: this.main.teacherExplorer.classPanel.elements.map((ae) => {\r\n                        return {\r\n                            caption: ae.name,\r\n                            callback: (element: AccordionElement) => {\r\n                                let klasse = <any>ae.externalElement;\r\n\r\n                                let workspace: Workspace = element.externalElement;\r\n\r\n                                this.main.networkManager.sendDistributeWorkspace(workspace, klasse, null, (error: string) => {\r\n                                    if (error == null) {\r\n                                        let networkManager = this.main.networkManager;\r\n                                        let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                                        alert(\"Der Workspace \" + workspace.name + \" wurde an die Klasse \" + klasse.name + \" ausgeteilt. Er wird in maximal \" +\r\n                                            dt + \" s bei jedem Schüler ankommen.\");\r\n                                    } else {\r\n                                        alert(error);\r\n                                    }\r\n                                });\r\n\r\n                            }\r\n                        }\r\n                    })\r\n                },\r\n                    {\r\n                        caption: \"An einzelne Schüler/innen austeilen...\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let classes: ClassData[] = this.main.teacherExplorer.classPanel.elements.map(ae => ae.externalElement);\r\n                            let workspace: Workspace = element.externalElement;\r\n                            new DistributeToStudentsDialog(classes, workspace, this.main);\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n    }\r\n\r\n    onHomeButtonClicked() {\r\n        this.main.teacherExplorer.restoreOwnWorkspaces();\r\n        this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.ownUpdateFrequencyInSeconds;\r\n        this.$homeAction.hide();\r\n        this.fileListPanel.enableNewButton(this.main.workspaceList.length > 0);\r\n    }\r\n\r\n    renderFiles(workspace: Workspace) {\r\n\r\n        let name = workspace == null ? \"Kein Workspace vorhanden\" : workspace.name;\r\n\r\n        this.fileListPanel.setCaption(name);\r\n        this.fileListPanel.clear();\r\n\r\n        if (this.main.getCurrentWorkspace() != null) {\r\n            for (let module of this.main.getCurrentWorkspace().moduleStore.getModules(false)) {\r\n                module.file.panelElement = null;\r\n            }\r\n        }\r\n\r\n        if (workspace != null) {\r\n            let moduleList: Module[] = [];\r\n\r\n            for (let m of workspace.moduleStore.getModules(false)) {\r\n                moduleList.push(m);\r\n            }\r\n\r\n            moduleList.sort((a, b) => { return a.file.name > b.file.name ? 1 : a.file.name < b.file.name ? -1 : 0 });\r\n\r\n            for (let m of moduleList) {\r\n\r\n                m.file.panelElement = {\r\n                    name: m.file.name,\r\n                    externalElement: m,\r\n                    isFolder: false,\r\n                    path: []\r\n                };\r\n\r\n                this.fileListPanel.addElement(m.file.panelElement, true);\r\n                this.renderHomeworkButton(m.file);\r\n            }\r\n\r\n            this.fileListPanel.sortElements();\r\n\r\n        }\r\n    }\r\n\r\n    renderWorkspaces(workspaceList: Workspace[]) {\r\n\r\n        this.fileListPanel.clear();\r\n        this.workspaceListPanel.clear();\r\n\r\n        for (let w of workspaceList) {\r\n            let path = w.path.split(\"/\");\r\n            if (path.length == 1 && path[0] == \"\") path = [];\r\n            w.panelElement = {\r\n                name: w.name,\r\n                externalElement: w,\r\n                iconClass: 'workspace',\r\n                isFolder: w.isFolder,\r\n                path: path\r\n            };\r\n\r\n            this.workspaceListPanel.addElement(w.panelElement, false);\r\n            w.renderSettingsButton(w.panelElement);\r\n        }\r\n\r\n        this.workspaceListPanel.sortElements();\r\n        this.fileListPanel.enableNewButton(workspaceList.length > 0);\r\n\r\n\r\n\r\n    }\r\n\r\n    renderErrorCount(workspace: Workspace, errorCountMap: Map<Module, number>) {\r\n        if (errorCountMap == null) return;\r\n        for (let m of workspace.moduleStore.getModules(false)) {\r\n            let errorCount: number = errorCountMap.get(m);\r\n            let errorCountS: string = ((errorCount == null || errorCount == 0) ? \"\" : \"(\" + errorCount + \")\");\r\n\r\n            this.fileListPanel.setTextAfterFilename(m.file.panelElement, errorCountS, 'jo_errorcount');\r\n        }\r\n    }\r\n\r\n    setWorkspaceActive(w: Workspace, callback?: () => void, scrollIntoView: boolean = false) {\r\n\r\n        if(w == this.main.getCurrentWorkspace()){\r\n            if(callback != null) callback();\r\n            return;\r\n        }\r\n\r\n        if (w != null) {\r\n            this.fileListPanel.$buttonNew.show();\r\n        }\r\n\r\n        this.workspaceListPanel.select(w, false, scrollIntoView);\r\n\r\n        let callbackAfterDatabaseFetched = (error: string) => {this.initializeDatabaseTool(error, w, callback)};\r\n\r\n        if (w.database == null) {\r\n            this.main.waitOverlay.show(\"Bitte warten, hole Datenbank vom Server ...\");\r\n\r\n            this.main.networkManager.fetchDatabase(w, callbackAfterDatabaseFetched);\r\n        } else {\r\n            callbackAfterDatabaseFetched(null);\r\n        }\r\n\r\n    }\r\n\r\n    initializeDatabaseTool(error: string, w: Workspace, callback?: () => void) {\r\n        if (error != null) {\r\n            alert(error);\r\n            return;\r\n        }\r\n\r\n        let dbTool = this.main.getDatabaseTool();\r\n\r\n        let statements: string[] = w.database.statements;\r\n        if (statements == null) statements = [];\r\n\r\n        dbTool.initializeWorker(w.database.templateDump, statements,\r\n            () => {\r\n                this.main.currentWorkspace = w;\r\n\r\n                if (this.main.user.id == w.owner_id) {\r\n                    this.main.user.currentWorkspace_id = w.id;\r\n                }\r\n\r\n                this.renderFiles(w);\r\n\r\n                if (w != null) {\r\n                    let nonSystemModules = w.moduleStore.getModules(false);\r\n\r\n                    if (w.currentlyOpenModule != null) {\r\n                        this.setModuleActive(w.currentlyOpenModule);\r\n                    } else if (nonSystemModules.length > 0) {\r\n                        this.setModuleActive(nonSystemModules[0]);\r\n                    } else {\r\n                        this.setModuleActive(null);\r\n                    }\r\n\r\n                    for (let m of nonSystemModules) {\r\n                        m.file.dirty = true;\r\n                    }\r\n\r\n                    if (nonSystemModules.length == 0) {\r\n\r\n                        Helper.showHelper(\"newSQLFileHelper\", this.main, this.fileListPanel.$captionElement);\r\n\r\n                    }\r\n\r\n                    this.main.notifier.connect(w);\r\n\r\n                } else {\r\n                    this.setModuleActive(null);\r\n                }\r\n\r\n            },\r\n            () => {\r\n                this.main.databaseExplorer.refreshAfterRetrievingDBStructure();\r\n                this.main.getHistoryViewer().clearAndShowStatements(w.database.statements);\r\n                if(callback != null) callback();\r\n            });\r\n\r\n    }\r\n\r\n    writeEditorTextToFile() {\r\n        let cem = this.getCurrentlyEditedModule();\r\n        if (cem != null)\r\n            cem.file.text = cem.getProgramTextFromMonacoModel(); // 29.03. this.main.monaco.getValue();\r\n    }\r\n\r\n\r\n    lastOpenModule: Module = null;\r\n    setModuleActive(m: Module) {\r\n\r\n        this.main.bottomDiv.homeworkManager.hideRevision();\r\n\r\n        if (this.lastOpenModule != null) {\r\n            this.lastOpenModule.file.text = this.lastOpenModule.getProgramTextFromMonacoModel(); // this.main.monaco.getValue();\r\n            this.lastOpenModule.editorState = this.main.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (m == null) {\r\n            this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n        } else {\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.main.getMonacoEditor().setModel(m.model);\r\n            if (this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(m.bracketError);\r\n\r\n            if (m.file.text_before_revision != null) {\r\n                this.main.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n            } else {\r\n                this.main.bottomDiv.homeworkManager.hideHomeworkRevisionButton();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setActiveAfterExternalModelSet(m: Module) {\r\n        this.fileListPanel.select(m, false);\r\n\r\n        this.lastOpenModule = m;\r\n\r\n        if (m.editorState != null) {\r\n            this.main.editor.dontPushNextCursorMove++;\r\n            this.main.getMonacoEditor().restoreViewState(m.editorState);\r\n            this.main.editor.dontPushNextCursorMove--;\r\n        }\r\n\r\n        this.setCurrentlyEditedModule(m);\r\n\r\n        this.showProgramPointer();\r\n\r\n        setTimeout(() => {\r\n            if (!this.main.getMonacoEditor().getOptions().get(monaco.editor.EditorOption.readOnly)) {\r\n                this.main.getMonacoEditor().focus();\r\n            }\r\n        }, 300);\r\n\r\n    }\r\n\r\n\r\n    private showProgramPointer() {\r\n\r\n        if (this.programPointerModule == this.getCurrentlyEditedModule() && this.getCurrentlyEditedModule() != null) {\r\n            let position = this.programPointerPosition;\r\n            let range = {\r\n                startColumn: position.column, startLineNumber: position.line,\r\n                endColumn: position.column + position.length, endLineNumber: position.line\r\n            };\r\n\r\n            this.main.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n            this.programPointerDecoration = this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n                {\r\n                    range: range,\r\n                    options: {\r\n                        className: 'jo_revealProgramPointer', isWholeLine: true,\r\n                        overviewRuler: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.OverviewRulerLane.Center\r\n                        },\r\n                        minimap: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    range: range,\r\n                    options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n                }\r\n            ]);\r\n\r\n        }\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        // console statement execution:\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        let module = this.main.currentWorkspace.moduleStore.findModuleByFile(file);\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        this.programPointerModule = module;\r\n        this.programPointerPosition = position;\r\n\r\n        if (module != this.getCurrentlyEditedModule()) {\r\n            this.setModuleActive(module);\r\n        } else {\r\n            this.showProgramPointer();\r\n        }\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws == null) return null;\r\n\r\n        return ws.currentlyOpenModule;\r\n    }\r\n\r\n    setCurrentlyEditedModule(m: Module) {\r\n        if (m == null) return;\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws.currentlyOpenModule != m) {\r\n            ws.currentlyOpenModule = m;\r\n            ws.saved = false;\r\n            m.file.dirty = true;\r\n        }\r\n    }\r\n\r\n    setExplorerColor(color: string) {\r\n        let caption: string;\r\n\r\n        if (color == null) {\r\n            color = \"transparent\";\r\n            caption = \"Meine Datenbanken\";\r\n        } else {\r\n            caption = \"Schüler-DB\";\r\n        }\r\n\r\n        this.fileListPanel.$listElement.parent().css('background-color', color);\r\n        this.workspaceListPanel.$listElement.parent().css('background-color', color);\r\n\r\n        this.workspaceListPanel.setCaption(caption);\r\n    }\r\n\r\n    getNewModule(file: File): Module {\r\n        return new Module(file, this.main);\r\n    }\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class RightDiv {\r\n\r\n    isWholePage: boolean = false;\r\n\r\n    $tabs: JQuery<HTMLElement>;\r\n    $headings: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $rightDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$tabs = $rightDiv.find('.jo_tabs');\r\n        this.$headings = $rightDiv.find('.jo_tabheadings');\r\n        \r\n        let withClassDiagram = this.$headings.find('.jo_classDiagramTabHeading').length > 0;\r\n        let withObjectDiagram = this.$headings.find('.jo_objectDiagramTabHeading').length > 0;\r\n\r\n        let that = this;\r\n        let rightdiv_width: string = \"100%\";\r\n        $rightDiv.find('.jo_whole-window').on(\"click\", () => {\r\n\r\n            that.isWholePage = !that.isWholePage;\r\n            \r\n            let $wholeWindow = jQuery('.jo_whole-window');\r\n\r\n            if (!that.isWholePage) {\r\n                jQuery('#code').css('display', 'flex');\r\n                jQuery('#rightdiv').css('width', rightdiv_width);\r\n                // jQuery('#run').css('width', '');\r\n                $wholeWindow.removeClass('img_whole-window-back');\r\n                $wholeWindow.addClass('img_whole-window');\r\n                jQuery('#controls').insertAfter(jQuery('#view-mode'));\r\n                $wholeWindow.attr('title', 'Auf Fenstergröße vergrößern');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            } else {\r\n                jQuery('#code').css('display', 'none');\r\n                rightdiv_width = jQuery('#rightdiv').css('width');\r\n                jQuery('#rightdiv').css('width', '100%');\r\n                $wholeWindow.removeClass('img_whole-window');\r\n                $wholeWindow.addClass('img_whole-window-back');\r\n                // that.adjustWidthToWorld();\r\n                jQuery('.jo_control-container').append(jQuery('#controls'));\r\n                $wholeWindow.attr('title', 'Auf normale Größe zurückführen');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$rightDiv);\r\n    }\r\n\r\n\r\n\r\n}","import { jo_mouseDetected } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\nexport class Sliders {\r\n\r\n    main: Main;\r\n\r\n    constructor(main: Main) {\r\n        this.main = main;\r\n    }\r\n\r\n    initSliders() {\r\n        let that = this;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        jQuery('#slider1').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider1\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                \r\n                that.moveLeftPanel(dx);\r\n\r\n                x = mm.clientX;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider1\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider1\");\r\n                jQuery(document).off(mousePointer + \"up.slider1\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider2').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider2\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n\r\n                that.moveBottomDiv(dy);\r\n\r\n                y = mm.clientY;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider2\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider2\");\r\n                jQuery(document).off(mousePointer + \"up.slider2\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider3').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider3\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n\r\n                that.moveRightDiv(dx);\r\n\r\n                x = mm.clientX;\r\n                mm.stopPropagation();\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider3\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider3\");\r\n                jQuery(document).off(mousePointer + \"up.slider3\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        let sliderknobLeft = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"left: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobLeft);\r\n        sliderknobLeft.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopImmediatePropagation();\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobleft\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopImmediatePropagation();\r\n\r\n                that.moveLeftPanel(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobleft\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobleft\");\r\n                jQuery(document).off(mousePointer + \"up.knobleft\");\r\n            });\r\n\r\n        });\r\n\r\n        let sliderknobRight = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"right: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobRight);\r\n        sliderknobRight.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopImmediatePropagation();\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobright\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopImmediatePropagation();\r\n\r\n                that.moveRightDiv(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobright\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobright\");\r\n                jQuery(document).off(mousePointer + \"up.knobright\");\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n    \r\n    moveRightDiv(dx: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $rightDiv = jQuery('#rightdiv');\r\n\r\n        let width = Number.parseInt($rightDiv.css('width').replace('px', ''));\r\n        $rightDiv.css('width', (width - dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth + dx) + \"px\");\r\n        \r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n        jQuery('.jo_graphics').trigger('sizeChanged');\r\n        width += dx;\r\n}\r\n    moveBottomDiv(dy: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $bottomDiv = jQuery('#bottomdiv-outer');\r\n\r\n        let height = Number.parseInt($bottomDiv.css('height').replace('px', ''));\r\n        $bottomDiv.css('height', (height - dy) + \"px\");\r\n\r\n        let meheight = Number.parseInt($editor.css('height').replace('px', ''));\r\n        $editor.css('height', (meheight + dy) + \"px\");\r\n\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n}\r\n\r\n    moveLeftPanel(dx: number) {\r\n        let $leftPanel = jQuery('#leftpanel');\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n\r\n        let width = Number.parseInt($leftPanel.css('width').replace('px', ''));\r\n        $leftPanel.css('width', (width + dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth - dx) + \"px\");\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionPanel, AccordionElement } from \"./Accordion.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassData, UserData, CRUDUserRequest, CRUDClassRequest, GetWorkspacesResponse, GetWorkspacesRequest, Workspaces } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\nexport class TeacherExplorer {\r\n\r\n    studentPanel: AccordionPanel;\r\n    classPanel: AccordionPanel;\r\n\r\n    // save them here when displaying pupils workspaces:\r\n    ownWorkspaces: Workspace[];\r\n    currentOwnWorkspace: Workspace;\r\n\r\n    constructor(private main: Main, private classData: ClassData[]) {\r\n\r\n    }\r\n\r\n    removePanels() {\r\n        this.classPanel.remove();\r\n        this.studentPanel.remove();\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.initStudentPanel();\r\n\r\n        this.initClassPanel();\r\n\r\n        this.renderClasses(this.classData);\r\n\r\n    }\r\n\r\n    initStudentPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.studentPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Schüler/innen\", \"2\", null,\r\n            \"\", \"student\", false, false, \"student\", false, []);\r\n\r\n        this.studentPanel.selectCallback = (ae: UserData) => {\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let request: GetWorkspacesRequest = {\r\n                    ws_userId: ae.id,\r\n                    userId: this.main.user.id,\r\n                    language: 1\r\n                }\r\n\r\n                ajax(\"getWorkspaces\", request, (response: GetWorkspacesResponse) => {\r\n                    if (response.success == true) {\r\n\r\n                        if (that.main.workspacesOwnerId == that.main.user.id) {\r\n                            that.ownWorkspaces = that.main.workspaceList.slice();\r\n                            that.currentOwnWorkspace = that.main.currentWorkspace;\r\n                        }\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces);\r\n                        that.main.workspacesOwnerId = ae.id;\r\n                        that.main.projectExplorer.setExplorerColor(\"rgba(255, 0, 0, 0.2\");\r\n                        that.main.projectExplorer.$homeAction.show();\r\n                        Helper.showHelper(\"homeButtonHelper\", this.main);\r\n\r\n                        that.main.bottomDiv.showHomeworkTab();\r\n                        that.main.bottomDiv.homeworkManager.attachToWorkspaces(that.main.workspaceList);\r\n                    }\r\n\r\n                    this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n                    this.main.networkManager.secondsTillNextUpdate = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    restoreOwnWorkspaces() {\r\n        let main = this.main;\r\n\r\n        // main.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n        main.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        main.workspaceList = this.ownWorkspaces;\r\n        main.currentWorkspace = this.currentOwnWorkspace;\r\n        main.workspacesOwnerId = main.user.id;\r\n        main.projectExplorer.setExplorerColor(null);\r\n\r\n        main.projectExplorer.renderWorkspaces(main.workspaceList);\r\n\r\n        if (main.currentWorkspace == null && main.workspaceList.length > 0) {\r\n            main.currentWorkspace = main.workspaceList[0];\r\n        }\r\n\r\n        if (main.currentWorkspace != null) {\r\n            main.projectExplorer.setWorkspaceActive(main.currentWorkspace);\r\n        }\r\n\r\n        this.studentPanel.select(null, false);\r\n\r\n    }\r\n\r\n    initClassPanel() {\r\n        let that = this;\r\n\r\n        this.classPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Klassen\", \"1\", null, \"\", \"class\", false, false, \"class\", false, []);\r\n\r\n        this.classPanel.selectCallback = (ea) => {\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let classData = <ClassData>ea;\r\n                if (classData != null) {\r\n                    this.renderStudents(classData.students);\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    renderStudents(userDataList: UserData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        userDataList.sort((a, b) => {\r\n            if (a.familienname > b.familienname) return 1;\r\n            if (b.familienname > a.familienname) return -1;\r\n            if (a.rufname > b.rufname) return 1;\r\n            if (b.rufname > a.rufname) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let ud of userDataList) {\r\n            let ae: AccordionElement = {\r\n                name: ud.familienname + \", \" + ud.rufname,\r\n                sortName: ud.familienname + \" \" + ud.rufname,\r\n                externalElement: ud,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.studentPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n    renderClasses(classDataList: ClassData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        classDataList.sort((a, b) => {\r\n            if (a.name > b.name) return 1;\r\n            if (b.name > a.name) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let cd of classDataList) {\r\n            let ae: AccordionElement = {\r\n                name: cd.name,\r\n                externalElement: cd,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.classPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","export type DialogButton = {\r\n    caption: string,\r\n    color: string,\r\n    callback: () => void\r\n}\r\n\r\nexport class Dialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            '<div style=\"flex: 1\"></div>' +\r\n            '<div class=\"dialog-main\"></div>' +\r\n            '<div style=\"flex: 4\"></div>'\r\n        ));\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n    }\r\n\r\n    heading(text: string) {\r\n        let $div = jQuery('<div class=\"dialog-heading\">' + text + \"</div>\")\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    description(text: string, color?: string) {\r\n        let colorStyle = color == null ? \"\" : `style=\"color: ${color}\"`;\r\n        let $div = jQuery(`<div class=\"dialog-description\" ${colorStyle}>${text}</div>`)\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    input(type: string, placeholder: string):JQuery<HTMLInputElement> {\r\n        let $div = jQuery(`<input class=\"dialog-input\" type=\"${type}\" placeholder=\"${placeholder}\"></input>`)\r\n        this.$dialogMain.append($div);\r\n        return <any>$div;\r\n    }\r\n\r\n    buttons(buttons: DialogButton[]){\r\n\r\n        let $buttonRow = jQuery('<div class=\"dialog-buttonRow\"></div>')\r\n        this.$dialogMain.append($buttonRow);\r\n\r\n        for(let button of buttons){\r\n\r\n            let $button = jQuery(`<button style=\"background-color: ${button.color};margin-left: 20px\">${button.caption}</button>`)\r\n            $button.on(\"click\", () => {button.callback()})\r\n            $buttonRow.append($button);\r\n        }\r\n    }\r\n\r\n    waitMessage(text: string): (visible: boolean) => void {\r\n\r\n        let $message = jQuery(`<div class=\"dialog-wait\">${text}<img src=\"assets/projectexplorer/svg-loaders/ball-triangle.svg\"></div>`)\r\n        this.$dialogMain.append($message);\r\n\r\n        return (visible: boolean) => {\r\n            let visibility = visible ? \"visible\" : \"hidden\";\r\n            $message.css(\"visibility\", visibility);\r\n        }\r\n\r\n    }\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { openContextMenu, ContextMenuItem } from \"../../tools/HtmlTools.js\";\r\nimport { Dialog } from \"./Dialog.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\n\r\nexport class UserMenu {\r\n\r\n\r\n\r\n    constructor(private main: Main){\r\n        \r\n    }\r\n\r\n    init(){\r\n        let $userSettingsButton = jQuery('#buttonUserSettings');\r\n        let that = this;\r\n\r\n        $userSettingsButton.on(\"click\", (e) => {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [\r\n                {\r\n                    caption: \"Passwort ändern...\",\r\n                    callback: () => {\r\n                        let passwortChanger = new PasswordChanger(that.main);\r\n                        passwortChanger.show();\r\n                    }\r\n                }\r\n            ]\r\n\r\n\r\n            openContextMenu(contextMenuItems, $userSettingsButton.offset().left, $userSettingsButton.offset().top + $userSettingsButton.height());\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class PasswordChanger {\r\n\r\n    dialog: Dialog;\r\n\r\n    constructor(private main: Main){\r\n\r\n        this.dialog = new Dialog();\r\n\r\n    }\r\n\r\n    show() {\r\n        this.dialog.init();\r\n        this.dialog.heading(\"Passwort ändern\");\r\n        this.dialog.description(\"Bitte geben Sie Ihr bisheriges Passwort und darunter zweimal Ihr neues Passwort ein. <br>\" + \r\n        \"Das Passwort muss mindestens 8 Zeichen lang sein und sowohl Buchstaben als auch Zahlen oder Sonderzeichen enthalten.\")\r\n        let $oldPassword = this.dialog.input(\"password\", \"Altes Passwort\");\r\n        let $newPassword1 = this.dialog.input(\"password\", \"Neues Passwort\");\r\n        let $newPassword2 = this.dialog.input(\"password\", \"Neues Passwort wiederholen\");\r\n        let $errorDiv = this.dialog.description(\"\", \"red\");\r\n        let waitDiv = this.dialog.waitMessage(\"Bitte warten...\")\r\n\r\n        this.dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {this.dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    if($newPassword1.val() != $newPassword2.val()){\r\n                        $errorDiv.text(\"Die zwei eingegebenen neuen Passwörter stimmen nicht überein.\")\r\n                    } else {\r\n                        waitDiv(true);\r\n                        ajax(\"changePassword\", {oldPassword: $oldPassword.val(), newPassword: $newPassword1.val()}, () => {\r\n                            waitDiv(false);\r\n                            alert(\"Das Passwort wurde erfolgreich geändert.\");\r\n                            this.dialog.close();\r\n                        }, (message) => {\r\n                            waitDiv(false);\r\n                            $errorDiv.text(message)\r\n                        })\r\n                    }\r\n\r\n                }\r\n            },\r\n        ])\r\n    }\r\n\r\n}","import { ajax } from \"../communication/AjaxHelper.js\";\r\nimport { LoginRequest, LoginResponse, LogoutRequest, UserData } from \"../communication/Data.js\";\r\nimport { Main } from \"./Main.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { userInfo } from \"os\";\r\nimport { UserMenu } from \"./gui/UserMenu.js\";\r\nimport { escapeHtml } from \"../tools/StringTools.js\";\r\n\r\nexport class Login {\r\n\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        let that = this;\r\n\r\n        let $loginSpinner = jQuery('#login-spinner>img');\r\n\r\n        jQuery('#login-username').focus();\r\n\r\n        jQuery('#login-username').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-password').focus();\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-button').focus();\r\n                jQuery('#login-button').addClass('jo_active');\r\n            }\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-button').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-username').focus();\r\n                jQuery('#login-button').removeClass('jo_active');\r\n            } else {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        // Avoid double login when user does doubleclick:\r\n        let loginHappened = false;\r\n        jQuery('#login-button').on('click', () => {\r\n\r\n            $loginSpinner.show();\r\n\r\n            if (loginHappened) return;\r\n            loginHappened = true;\r\n\r\n            setTimeout(() => {\r\n                loginHappened = false;\r\n            }, 1000);\r\n\r\n            let loginRequest: LoginRequest = {\r\n                username: <string>jQuery('#login-username').val(),\r\n                password: <string>jQuery('#login-password').val(),\r\n                language: 1\r\n            }\r\n\r\n            ajax('login', loginRequest, (response: LoginResponse) => {\r\n\r\n                if (!response.success) {\r\n                    jQuery('#login-message').html('Fehler: Benutzername und/oder Passwort ist falsch.');\r\n                } else {\r\n\r\n                    // We don't do this anymore for security reasons - see AjaxHelper.ts\r\n                    // Alternatively we now set a long expiry interval for cookie.\r\n                    // credentials.username = loginRequest.username;\r\n                    // credentials.password = loginRequest.password;\r\n\r\n                    jQuery('#login').hide();\r\n\r\n                    this.main.waitOverlay.show('Bitte warten...');\r\n\r\n                    let user: UserData = response.user;\r\n                    if (user.settings == null || user.settings.helperHistory == null) {\r\n                        user.settings = {\r\n                            helperHistory: {\r\n                            },\r\n                            viewModes: null,\r\n                            classDiagram: null\r\n                        }\r\n                    }\r\n\r\n                    this.main.waitForGUICallback = () => {\r\n\r\n                        that.main.mainMenu.initGUI(user);\r\n\r\n                        that.main.waitOverlay.hide();\r\n                        $loginSpinner.hide();\r\n                        jQuery('#menupanel-username').html(escapeHtml(user.rufname) + \" \" + escapeHtml(user.familienname));\r\n\r\n                        new UserMenu(that.main).init();\r\n\r\n                        if (user.is_teacher) {\r\n                            that.main.initTeacherExplorer(response.classdata);\r\n                        }\r\n\r\n                        that.main.user = user;\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces);\r\n                        that.main.workspacesOwnerId = user.id;\r\n\r\n                        that.main.networkManager.initializeTimer();\r\n\r\n                        that.main.projectExplorer.fileListPanel.setFixed(!user.is_teacher);\r\n                        that.main.projectExplorer.workspaceListPanel.setFixed(!user.is_teacher);\r\n\r\n                        that.main.viewModeController.initViewMode();\r\n                        that.main.bottomDiv.hideHomeworkTab();\r\n\r\n                        that.main.networkManager.initializeNotifierClient();\r\n\r\n                    }\r\n\r\n                    if (this.main.startupComplete == 0) {\r\n                        this.main.waitForGUICallback();\r\n                        this.main.waitForGUICallback = null;\r\n                    }\r\n\r\n                }\r\n\r\n            }, (errorMessage: string) => {\r\n                jQuery('#login-message').html('Login gescheitert: ' + errorMessage);\r\n                jQuery('#login-spinner>img').hide();\r\n            }\r\n            );\r\n\r\n        });\r\n\r\n        jQuery('#buttonLogout').on('click', () => {\r\n\r\n            this.main.waitOverlay.show('Bitte warten, der letzte Bearbeitungsstand wird noch gespeichert ...');\r\n\r\n            if (this.main.workspacesOwnerId != this.main.user.id) {\r\n                this.main.projectExplorer.onHomeButtonClicked();\r\n            }\r\n\r\n            this.main.networkManager.sendUpdates(() => {\r\n\r\n                let logoutRequest: LogoutRequest = {\r\n                    currentWorkspaceId: this.main.currentWorkspace?.id\r\n                }\r\n\r\n                ajax('logout', logoutRequest, () => {\r\n                    // window.location.href = 'index.html';\r\n                    this.main.networkManager.sendUpdateUserSettings(() => {});\r\n\r\n                    jQuery('#login').show();\r\n                    this.main.waitOverlay.hide();\r\n                    jQuery('#login-message').empty();\r\n                    this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"\", \"myJava\"));\r\n                    this.main.projectExplorer.fileListPanel.clear();\r\n                    this.main.projectExplorer.workspaceListPanel.clear();\r\n\r\n                    this.main.databaseExplorer.clear();\r\n                    this.main.resultsetPresenter.clear();\r\n\r\n                    if (this.main.user.is_teacher) {\r\n                        this.main.teacherExplorer.removePanels();\r\n                        this.main.teacherExplorer = null;\r\n                    }\r\n\r\n\r\n                    this.main.currentWorkspace = null;\r\n                    this.main.user = null;\r\n\r\n\r\n                });\r\n            }, true);\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\nimport { ViewModes, ViewMode } from \"../../communication/Data\";\r\n\r\nexport class ViewModeController {\r\n\r\n    $buttonEditorFullscreen: JQuery<HTMLElement>;\r\n    $buttonPresentationMode: JQuery<HTMLElement>;\r\n    $buttonMonitorMode: JQuery<HTMLElement>;\r\n\r\n    $buttonMap: { [key: string]: JQuery<HTMLElement> } = {};\r\n\r\n    highContrast: boolean = false;\r\n    editorHasFullWidth: boolean = false;\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private main: Main) {\r\n\r\n        this.$buttonEditorFullscreen = jQuery('<div title=\"Editor in voller Breite\" class=\"img_whole-window jo_button jo_active\" style=\"padding: 1px; margin-right: 20px\"></div>');\r\n        this.$buttonPresentationMode = jQuery('<div title=\"Präsentation (Beamer)\" class=\"img_presentation-mode jo_button jo_active\" syle=\"padding: 1px\"></div>');\r\n        this.$buttonMonitorMode = jQuery('<div title=\"Monitor\" class=\"img_monitor-mode jo_button jo_active\" style=\"margin-left: 5px; padding: 1px\"></div>');\r\n        $buttonsContainer.append(this.$buttonEditorFullscreen, this.$buttonPresentationMode, this.$buttonMonitorMode);\r\n\r\n        this.$buttonMap = {\r\n            \"presentation\": this.$buttonPresentationMode,\r\n            \"monitor\": this.$buttonMonitorMode\r\n        };\r\n\r\n        let am = this.main.actionManager;\r\n\r\n        am.registerAction(\"editor.fullwidth\", [],\r\n            () => {\r\n                this.toggleEditorFullwidth();\r\n            }, \"Editor auf die volle Breite erweitern\", this.$buttonEditorFullscreen);\r\n\r\n        am.registerAction(\"viewmode.presentation\", [],\r\n            () => {\r\n                this.setMode(\"presentation\");\r\n            }, \"Präsentationsansicht\", this.$buttonPresentationMode);\r\n\r\n        am.registerAction(\"viewmode.monitor\", [],\r\n            () => {\r\n                this.setMode(\"monitor\");\r\n            }, \"Monitoransicht\", this.$buttonMonitorMode);\r\n\r\n    }\r\n\r\n    toggleEditorFullwidth() {\r\n        if(this.editorHasFullWidth){\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in voller Breite');\r\n            jQuery('#rightdiv').show(600);\r\n            jQuery('#leftpanel').show(600);\r\n            jQuery('#controls').show();\r\n        } else {\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in normaler Breite');\r\n            jQuery('#rightdiv').hide(600);\r\n            jQuery('#leftpanel').hide(600);\r\n            jQuery('#controls').hide();\r\n        }\r\n\r\n        setTimeout(()=>{\r\n            this.main.getMonacoEditor().layout();\r\n        }, 800);\r\n\r\n        this.editorHasFullWidth = !this.editorHasFullWidth;\r\n    }\r\n\r\n    setMode(mode: \"presentation\" | \"monitor\", saveSettings: boolean = true) {\r\n\r\n        let otherMode = mode == \"presentation\" ? \"monitor\" : \"presentation\";\r\n\r\n        this.$buttonMap[mode].addClass(\"jo_pressed\");\r\n        this.$buttonMap[otherMode].removeClass(\"jo_pressed\");\r\n\r\n        let settings = this.main.user.settings;\r\n        let viewModes = settings.viewModes;\r\n\r\n        let viewMode = viewModes[mode];\r\n        viewModes.viewModeChosen = mode;\r\n\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n\r\n        this.main.editor.setFontSize(viewMode.fontSize);\r\n\r\n        if (this.highContrast != viewMode.highContrast) {\r\n            let editor = this.main.getMonacoEditor();\r\n            editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n            this.highContrast = !this.highContrast;\r\n        }\r\n\r\n        if (saveSettings) this.saveSettings();\r\n\r\n    }\r\n\r\n    saveFontSize(fontSizePx: number) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.fontSize = fontSizePx;\r\n        this.saveSettings();\r\n    }\r\n\r\n    setTheme(theme: string) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.theme = theme;\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n        this.saveSettings();\r\n    }\r\n\r\n    toggleHighContrast() {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.highContrast = !viewMode.highContrast;\r\n        let editor = this.main.getMonacoEditor();\r\n        editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n        this.saveSettings();\r\n    }\r\n\r\n    getChosenViewMode(): ViewMode {\r\n        let viewModes = this.main.user.settings.viewModes;\r\n        return viewModes[viewModes.viewModeChosen];\r\n    }\r\n\r\n    saveSettings() {\r\n        this.main.userDataDirty = true;\r\n    }\r\n\r\n    initViewMode() {\r\n        let settings = this.main.user.settings;\r\n\r\n        if (settings[\"viewModes\"] == null) {\r\n            settings[\"viewModes\"] = {\r\n                monitor: null,\r\n                presentation: null,\r\n                viewModeChosen: \"monitor\"\r\n            }\r\n        }\r\n\r\n        if (settings.viewModes.monitor == null) {\r\n            settings.viewModes.monitor = {\r\n                fontSize: 14,\r\n                highContrast: false,\r\n                theme: \"dark\"\r\n            };\r\n\r\n            settings.viewModes.presentation = {\r\n                fontSize: 18,\r\n                highContrast: false,\r\n                theme: \"light\"\r\n            }\r\n            this.saveSettings();\r\n        }\r\n        this.setMode(settings.viewModes.viewModeChosen, false);\r\n    }\r\n\r\n\r\n}","import { Main } from \"../../main/Main.js\";\r\nimport { TextPosition } from \"../lexer/Token\";\r\nimport { Module } from \"./Module\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype SemicolonPosition = {\r\n    position: TextPosition;\r\n    module: Module;\r\n    firstSeenMs: number;\r\n    isThereAgain: boolean;\r\n}\r\n\r\nexport class SemicolonAngel {\r\n    \r\n    semicolonPositions: SemicolonPosition[] = [];\r\n    time: number;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    startRegistering(){\r\n        this.semicolonPositions.forEach(p => p.isThereAgain = false);\r\n        this.time = new Date().getTime();\r\n    }\r\n\r\n    register(position: TextPosition, module: Module){\r\n        let oldEvidence = this.semicolonPositions.find(p => p.position.line == position.line && p.position.column == position.column);\r\n        if(oldEvidence){\r\n            oldEvidence.isThereAgain = true;\r\n        } else {\r\n            this.semicolonPositions.push({position: position, firstSeenMs: this.time, isThereAgain: true, module: module});\r\n        }\r\n    }\r\n\r\n    healSemicolons(){\r\n        let time = new Date().getTime();\r\n        this.semicolonPositions = this.semicolonPositions.filter(p => p.isThereAgain);\r\n\r\n        let currentlyEditedModule = this.main.getCurrentlyEditedModule();\r\n        let cursorLine = this.main.getMonacoEditor().getPosition().lineNumber;\r\n\r\n        this.semicolonPositions.filter(p => time - p.firstSeenMs > 2000).forEach(p => {\r\n\r\n            let isCurrentModule = p.module.file.id != null && p.module.file.id == currentlyEditedModule.file.id;\r\n\r\n            let editOperations: monaco.editor.IIdentifiedSingleEditOperation[] = [\r\n                {\r\n                    range: new monaco.Range(p.position.line, p.position.column, p.position.line, p.position.column),\r\n                    text: \";\",\r\n                    forceMoveMarkers: true\r\n                }\r\n            ]\r\n\r\n            if(isCurrentModule){\r\n                if(Math.abs(cursorLine - p.position.line) > 1){\r\n                    let editor = this.main.getMonacoEditor();\r\n                    const selection = editor.getSelection();\r\n                    editor.executeEdits('Semicolon-Angel', editOperations);\r\n                    editor.setSelection(selection);\r\n                    this.semicolonPositions.splice(this.semicolonPositions.indexOf(p), 1);\r\n                }\r\n            } \r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\nimport { Table, Column } from \"../../compiler/parser/SQLTable.js\";\nimport { DatabaseStructure } from \"../../tools/DatabaseTools.js\";\n\nexport class DatabaseExplorer {\n\n    collapsedTables: Map<string, boolean> = new Map();\n\n    constructor(private main: MainBase, public $mainDiv: JQuery<HTMLElement>) {\n\n    }\n\n    refresh() {\n\n        let dbTool = this.main.getDatabaseTool();\n\n        dbTool.retrieveDatabaseStructure((dbstructure: DatabaseStructure) => {\n\n            this.refreshAfterRetrievingDBStructure();\n        });\n\n    }\n\n    clear(){\n        this.$mainDiv.empty();\n    }\n\n    refreshAfterRetrievingDBStructure() {\n        let dbTool = this.main.getDatabaseTool();\n        let workspace = this.main.getCurrentWorkspace();\n        if (workspace != null) {\n            for (let m of workspace.moduleStore.getModules(false)) {\n                m.file.dirty = true;\n            }\n        }\n\n        let tables = Table.fromTableStructureList(dbTool.databaseStructure.tables);\n\n        this.$mainDiv.empty();\n\n        for (let table of tables) {\n            if(table.identifier != \"sqlite_sequence\"){\n                let $table = this.renderTable(table);\n                this.$mainDiv.append($table);\n            }\n        }\n\n    }\n\n    renderTable(table: Table): JQuery<HTMLElement> {\n        let isCollapsed = this.collapsedTables.get(table.identifier) != null;\n\n        let $table = jQuery(\n            `<div class=\"jo_table\">\n           <div class=\"jo_tableheader\">\n              <div class=\"${isCollapsed ? 'img_tree-collapsed-dark' : 'img_tree-expanded-dark'} jo_treeswitch jo_button jo_active\"></div>\n              <div class=\"jo_tableheaderlink\">\n                <div class=\"img_table\"></div>\n                <div>${table.identifier}</div></div><div class=\"jo_tablesize\">(${table.size}&nbsp;Datensätze)</div>\n              </div>\n            </div>\n        </div>`);\n\n        $table.find('.jo_tableheader').on('pointerup', () => {\n            this.main.getResultsetPresenter().showTable(table.identifier);\n\n        })\n\n        let $columns = jQuery('<div class=\"jo_columnlist\"></div>')\n\n        for (let column of table.columns) {\n            let image = column.isPrimaryKey ? \"img_key\" : \"img_column\";\n\n            let referencesHtml = \"\";\n            if (column.references != null) {\n                referencesHtml = `<div class=\"img_foreign_key\" style=\"margin-left: 5px\"></div><div class=\"jo_references\">${column.references.table.identifier}.${column.references.identifier}</div>`\n            }\n\n            let type = column.type == null ? \"\" : column.type.toString();\n            let notNull: string = column.notNull ? '<div class=\"jo_dbnotnull\">not null</div>' : \"\";\n            let defaultValue: string = column.defaultValue ? `<div class=\"jo_dbdefault\">default ${column.defaultValue}</div>` : \"\";\n            let autoincrement: string = column.isAutoIncrement ? `<div class=\"jo_dbautoincrement\">autoincrement</div>` : \"\";\n\n            let $column = jQuery(`\n            <div class=\"jo_column\">\n                <div class=\"${image}\"></div>\n                <div>${column.identifier}</div>\n                <div class=\"jo_dbtype\">${type}</div>\n                ${autoincrement}\n                ${referencesHtml}\n                ${notNull}\n                ${defaultValue}\n            </div>\n            `);\n            $columns.append($column);\n        }\n\n        $table.append($columns);\n\n        let $treeSwitch = $table.find('.jo_treeswitch');\n        let that = this;\n        $treeSwitch.on('pointerup', (e) => {\n            e.stopPropagation();\n            let $columnList = $treeSwitch.parents('.jo_table').find('.jo_columnlist');\n            let collapsed = $treeSwitch.hasClass('img_tree-collapsed-dark');\n            if (collapsed) {\n                $treeSwitch.removeClass('img_tree-collapsed-dark');\n                $treeSwitch.addClass('img_tree-expanded-dark');\n                $columnList.slideDown(300);\n                that.collapsedTables.delete(table.identifier);\n            } else {\n                $treeSwitch.removeClass('img_tree-expanded-dark');\n                $treeSwitch.addClass('img_tree-collapsed-dark');\n                $columnList.slideUp(300);\n                that.collapsedTables.set(table.identifier, true);\n            }\n        });\n\n        return $table;\n    }\n\n\n\n}","// <div id=\"controls\">\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n// </div>\r\n\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { ResultsetPresenter } from \"./ResultsetPresenter.js\";\r\n\r\n\r\nexport class ProgramControlButtons {\r\n\r\n    $buttonStart: JQuery<HTMLElement>;\r\n    $buttonRollback: JQuery<HTMLElement>;\r\n    // $buttonPause: JQuery<HTMLElement>;\r\n    // $buttonStop: JQuery<HTMLElement>;\r\n    // $buttonStepOver: JQuery<HTMLElement>;\r\n    // $buttonStepInto: JQuery<HTMLElement>;\r\n    // $buttonStepOut: JQuery<HTMLElement>;\r\n    // $buttonRestart: JQuery<HTMLElement>;\r\n\r\n    // $buttonEdit: JQuery<HTMLElement>;\r\n\r\n\r\n    constructor(private main: MainBase, private $buttonsContainer: JQuery<HTMLElement>) {\r\n\r\n        this.$buttonStart = jQuery('<div title=\"Start\" class=\"img_start-dark jo_button\"></div>');\r\n        this.$buttonRollback = jQuery('<div title=\"Rollback\" class=\"img_undo jo_button\"></div>');\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        am.registerAction(\"execute\", ['Strg + Enter'],\r\n            () => {\r\n                if (am.isActive(\"execute\")) {\r\n\r\n                    this.main.getResultsetPresenter().executeSelectedStatements();\r\n                }\r\n\r\n            }, \"SQL-Statement ausführen\", this.$buttonStart\r\n        );\r\n\r\n        am.setActive('execute',false);\r\n\r\n        am.registerAction(\"rollback\", ['Strg + LeftArrow'],\r\n            () => {\r\n                if (am.isActive(\"rollback\")) {\r\n\r\n                    this.main.getHistoryViewer().rollback();\r\n                }\r\n\r\n            }, \"Letztes schreibendes SQL-Statement rückgängig machen\", this.$buttonRollback\r\n        );\r\n\r\n        am.setActive('rollback',false);\r\n\r\n        // this.$buttonPause = jQuery('<div title=\"Pause\" class=\"img_pause-dark jo_button\"></div>');\r\n        // this.$buttonStop = jQuery('<div title=\"Stop\" class=\"img_stop-dark jo_button\"></div>');\r\n        // this.$buttonStepOver = jQuery('<div title=\"Step over\" class=\"img_step-over-dark jo_button\"></div>');\r\n        // this.$buttonStepInto = jQuery('<div title=\"Step into\" class=\"img_step-into-dark jo_button\"></div>');\r\n        // this.$buttonStepOut = jQuery('<div title=\"Step out\" class=\"img_step-out-dark jo_button\"></div>');\r\n        // this.$buttonRestart = jQuery('<div title=\"Restart\" class=\"img_restart-dark jo_button\"></div>');\r\n\r\n        // this.$buttonEdit = jQuery('<div class=\"jo_editButton\" title=\"Programm anhalten damit der Programmtext bearbeitbar wird\"></div>')\r\n        // $editorContainer.append(this.$buttonEdit);\r\n\r\n        $buttonsContainer.append(this.$buttonStart, this.$buttonRollback\r\n            // , this.$buttonPause, this.$buttonStop,\r\n            // this.$buttonStepOver, this.$buttonStepInto, this.$buttonStepOut, this.$buttonRestart\r\n        );\r\n\r\n        // <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n        // <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n        // <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n        // <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n        // <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n        // <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n        // <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n        // <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n\r\n\r\n\r\n    }\r\n\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { SQLStatement } from \"../../compiler/parser/Parser.js\";\r\nimport { StatementCleaner } from \"../../compiler/parser/StatementCleaner.js\";\r\nimport { QueryResult } from \"../../tools/DatabaseTools.js\";\r\nimport { WDatabase } from \"../../workspace/WDatabase.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\ntype RuntimeError = {\r\n    statement: SQLStatement,\r\n    message: string\r\n}\r\n\r\nexport interface WriteQueryListener {\r\n    notify(statements: SQLStatement[]): void;\r\n}\r\n\r\nexport class ResultsetPresenter {\r\n\r\n    $paginationDiv: JQuery<HTMLDivElement>;\r\n    $infoDiv: JQuery<HTMLDivElement>;\r\n    $arrowLeft: JQuery<HTMLDivElement>;\r\n    $arrowRight: JQuery<HTMLDivElement>;\r\n\r\n    paginationFrom: number;\r\n    paginationAll: number;\r\n\r\n    paginationSize: number = 1000;\r\n\r\n    result: QueryResult;\r\n\r\n    writeQueryListeners: WriteQueryListener[] = [];\r\n\r\n    public static StatementDelimiter: string = \";\\n\\n\"\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$paginationDiv = <any>$bottomDiv.find('.jo_pagination');\r\n        this.$arrowLeft = jQuery('<div class=\"jo_button img_arrow-left-dark jo_active\"></div>');\r\n        this.$infoDiv = jQuery('<div class=\"jo_pagination_info\"><span class=\"jo_pagination_fromto\">0001-1000</span>/<span class=\"jo_pagination_all\">5000</span></div>');\r\n        this.$arrowRight = jQuery('<div class=\"jo_button img_arrow-right-dark jo_active\"></div>');\r\n\r\n        this.$paginationDiv.empty();\r\n        this.$paginationDiv.append(this.$arrowLeft, this.$infoDiv, this.$arrowRight);\r\n\r\n        this.$paginationDiv.hide();\r\n\r\n        let mousePointer = (window.PointerEvent ? \"pointer\" : \"mouse\") + 'up';\r\n\r\n        let that = this;\r\n        this.$arrowLeft.on(mousePointer, (e) => {\r\n            if (that.paginationFrom > 1) {\r\n                that.paginationFrom = Math.max(that.paginationFrom - that.paginationSize, 1);\r\n                if (that.paginationFrom % 1000 != 1) {\r\n                    that.paginationFrom = (Math.floor(that.paginationFrom / that.paginationSize) + 1) * that.paginationSize + 1;\r\n                }\r\n                that.showResults();\r\n                that.activateButtons();\r\n            }\r\n        })\r\n\r\n        this.$arrowRight.on(mousePointer, (e) => {\r\n            if (that.paginationFrom < this.paginationAll - that.paginationSize + 1) {\r\n                that.paginationFrom = Math.min(that.paginationFrom + that.paginationSize, that.paginationAll - that.paginationSize + 1);\r\n                that.showResults();\r\n                that.activateButtons();\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    public addWriteQueryListener(listener: WriteQueryListener) {\r\n        this.writeQueryListeners.push(listener);\r\n    }\r\n\r\n    private activateButtons() {\r\n        this.$arrowLeft.toggleClass('jo_active', this.paginationFrom > 1);\r\n        this.$arrowRight.toggleClass('jo_active', this.paginationFrom < this.paginationAll - this.paginationSize + 1);\r\n    }\r\n\r\n    executeSelectedStatements() {\r\n\r\n        let statements = this.fetchSelectedStatements().filter(st => st.ast.type != TokenType.omittedeStatement);\r\n        \r\n        if (statements.length == 0) return;\r\n\r\n        let hasDDLStatements: boolean = statements.some(st => this.isDDLStatement(st));\r\n        let hasWriteStatements: boolean = statements.some(st => this.isWriteStatement(st));\r\n        let workspace = this.main.getCurrentWorkspace();\r\n        let database = workspace.database;\r\n\r\n        if (hasDDLStatements && workspace.permissions <= 1) {\r\n            alert(\"Der Benutzer hat keine Berechtigung zum Ändern der Tabellenstruktur.\");\r\n            return;\r\n        }\r\n\r\n        if (hasWriteStatements && workspace.permissions == 0) {\r\n            alert(\"Der Benutzer hat keine Berechtigung zum Einfügen/Löschen/Ändern von Datensätzen.\");\r\n            return;\r\n        }\r\n\r\n        if (hasDDLStatements || hasWriteStatements) {\r\n            if (this.main.isEmbedded()) {\r\n                this.executeDDLWriteStatementsEmbedded(workspace, statements, database);\r\n\r\n            } else {\r\n                this.executeDDLWriteStatementsInOnlineIDE(workspace, statements, database);\r\n            }\r\n\r\n        } else {\r\n            this.executeStatements(statements, 0, [], () => { });\r\n        }\r\n\r\n    }\r\n\r\n    executeDDLWriteStatementsEmbedded(workspace: Workspace, statements: SQLStatement[], database: WDatabase) {\r\n        let sucessfullyExecutedModifyingStatements: SQLStatement[] = [];\r\n        this.executeStatements(statements, 0, sucessfullyExecutedModifyingStatements, () => {\r\n\r\n            if (sucessfullyExecutedModifyingStatements.length == 0)\r\n                return;\r\n\r\n            this.main.getDatabaseExplorer().refresh();\r\n\r\n            this.writeQueryListeners.forEach(listener => listener.notify(sucessfullyExecutedModifyingStatements))\r\n        })\r\n    }\r\n\r\n    private executeDDLWriteStatementsInOnlineIDE(workspace: Workspace, statements: SQLStatement[], database: WDatabase) {\r\n        let main: Main = <Main>this.main;\r\n        // Step 1: Update Database to newest version to avoid potential database reset\r\n        main.networkManager.getNewStatements(workspace, (new_statements, firstStatementIndex) => {\r\n\r\n            main.notifier.executeNewStatements(new_statements, firstStatementIndex, () => { },\r\n                () => {\r\n                    // Step 2: Execute new statements to see which are successful\r\n                    let sucessfullyExecutedModifyingStatements: SQLStatement[] = [];\r\n                    this.executeStatements(statements, 0, sucessfullyExecutedModifyingStatements, () => {\r\n\r\n                        if (sucessfullyExecutedModifyingStatements.length == 0)\r\n                            return;\r\n\r\n                        // Step 3: Send successful statements to server in order to retrieve new db-version-number\r\n                        main.networkManager.AddDatabaseStatements(workspace, sucessfullyExecutedModifyingStatements.map(st => st.sqlCleaned == null ? st.sql : st.sqlCleaned), (statements_before, new_version) => {\r\n\r\n                            // Step 4: If another user sent statements between steps 1 and 3 then they are in array statements_before.\r\n                            // Add all new statements to local statement list\r\n                            statements_before.forEach(st => database.statements.push(st));\r\n                            this.main.getHistoryViewer().appendStatements(statements_before);\r\n                            let modifyingStatements = sucessfullyExecutedModifyingStatements.map(st => st.sqlCleaned == null ? st.sql : st.sqlCleaned)\r\n                            database.statements = database.statements.concat(modifyingStatements);\r\n                            this.main.getHistoryViewer().appendStatements(modifyingStatements);\r\n                            database.version = new_version;\r\n\r\n                            // Step 5 (worst case): statements before is not empty, so the should be executed before the statements executed in step 2\r\n                            // => clear whole database and execute all statements in the right order, beginning with a empty database.\r\n                            if (statements_before.length > 0) {\r\n\r\n                                this.resetDatabase(database);\r\n\r\n                            } else {\r\n\r\n                                main.getDatabaseExplorer().refresh();\r\n\r\n                            }\r\n\r\n                        });\r\n                    });\r\n                }, false);\r\n        });\r\n    }\r\n\r\n    resetDatabase(database: WDatabase) {\r\n        this.main.getDatabaseTool().initializeWorker(database.templateDump, database.statements, () => {\r\n            this.main.getDatabaseExplorer().refresh();\r\n        })\r\n    }\r\n\r\n    executeStatementsString(statements: string[], fromIndex: number, callback: () => void) {\r\n        if (statements.length == 0) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (fromIndex < statements.length) {\r\n            this.main.getDatabaseTool().executeQuery(statements[fromIndex],\r\n                (results) => { this.executeStatementsString(statements, fromIndex + 1, callback) },\r\n                (error) => { console.log(\"Error when executing statement \" + statements[fromIndex] + \"\\nError : \" + error); this.executeStatementsString(statements, fromIndex + 1, callback) });\r\n        } else {\r\n            callback();\r\n        }\r\n    }\r\n\r\n\r\n    executeStatements(statements: SQLStatement[], index: number, successfullyExecutedModifyingStatements: SQLStatement[], callback: () => void, errors: RuntimeError[] = []) {\r\n\r\n        if (index >= statements.length) {\r\n            this.showErrors(errors);\r\n\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        let statement = statements[index];\r\n\r\n\r\n        let callback1 = () => {\r\n            this.executeStatements(statements, index + 1, successfullyExecutedModifyingStatements, callback, errors);\r\n        }\r\n\r\n        if (statement.ast == null) {\r\n            callback1();\r\n            return;\r\n        }\r\n\r\n        if (statement.ast.type == TokenType.keywordSelect) {\r\n            let laterSelectExists: boolean = false;\r\n            for (let j = index + 1; j < statements.length; j++) laterSelectExists = laterSelectExists || this.isSelectStatement(statements[j]);\r\n            if (laterSelectExists) {\r\n                callback1();\r\n            } else {\r\n                if (statement.ast.limitNode == null) {\r\n                    statement.sql.trimRight();\r\n                    while (statement.sql.endsWith(\";\") || statement.sql.endsWith(\"\\n\") || statement.sql.endsWith(\"\\r\")) {\r\n                        statement.sql = statement.sql.substring(0, statement.sql.length - 1);\r\n                        statement.sql.trimRight();\r\n                    }\r\n                    statement.sql += \" limit 100000\";\r\n                }\r\n                this.main.getDatabaseTool().executeQuery(statement.sql,\r\n                    (results) => { this.presentResultsIntern(statement.sql, results); callback1(); },\r\n                    (error) => { errors.push({ statement: statement, message: error }); callback1(); });\r\n            }\r\n        } else {\r\n            let sql = new StatementCleaner().clean(statement);\r\n            console.log(sql);\r\n            this.main.getDatabaseTool().executeQuery(sql, (results) => { successfullyExecutedModifyingStatements.push(statement); callback1(); }, (error) => { errors.push({ statement: statement, message: error }); callback1(); });\r\n        }\r\n\r\n    }\r\n\r\n    oldErrorDecorations: string[] = [];\r\n    showErrorDecorations(errors: RuntimeError[]) {\r\n\r\n        let minimapColors = {\r\n            \"error\": \"#bc1616\",\r\n            \"warning\": \"#cca700\",\r\n            \"info\": \"#75beff\"\r\n        }\r\n\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        let markers: monaco.editor.IMarkerData[] = [];\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n        for (let error of errors) {\r\n            let errorlevel = \"error\";\r\n\r\n            let linesDecorationsClassName: string;\r\n            let borderLeftClass: string;\r\n            let minimapColor: string = minimapColors[errorlevel];\r\n\r\n            switch (errorlevel) {\r\n                case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n            }\r\n\r\n            let severity: monaco.MarkerSeverity;\r\n            switch (errorlevel) {\r\n                case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n            }\r\n\r\n            markers.push({\r\n                startLineNumber: error.statement.from.line,\r\n                startColumn: error.statement.from.column,\r\n                endLineNumber: error.statement.to.line,\r\n                endColumn: error.statement.to.column,\r\n                message: error.message,\r\n                severity: severity\r\n            });\r\n\r\n            decorations.push({\r\n                range: {\r\n                    startLineNumber: error.statement.from.line,\r\n                    startColumn: error.statement.from.column,\r\n                    endLineNumber: error.statement.to.line,\r\n                    endColumn: error.statement.to.column,\r\n                },\r\n                options: {\r\n                    linesDecorationsClassName: linesDecorationsClassName,\r\n                    minimap: {\r\n                        position: monaco.editor.MinimapPosition.Inline,\r\n                        color: minimapColor\r\n                    }\r\n                }\r\n\r\n            });\r\n\r\n\r\n        }\r\n\r\n        let model = this.main.getCurrentlyEditedModule().model;\r\n        monaco.editor.setModelMarkers(model, 'test', markers);\r\n        this.oldErrorDecorations = model.deltaDecorations(this.oldErrorDecorations, decorations);\r\n\r\n    }\r\n\r\n    showTable(identifier: string) {\r\n        let statement = \"select * from \" + identifier + \";\";\r\n        this.main.getDatabaseTool().executeQuery(statement,\r\n            (results) => { this.presentResultsIntern(statement, results); },\r\n            (error) => { });\r\n    }\r\n\r\n\r\n\r\n    showErrors(errors: RuntimeError[]) {\r\n        let $runtimeErrorsTab = this.$bottomDiv.find('.jo_errorsTab');\r\n        let $runtimeErrorsTabHeading = this.$bottomDiv.find('.jo_errorsTabheading');\r\n\r\n        $runtimeErrorsTab.empty();\r\n        this.showErrorDecorations(errors);\r\n\r\n        if (errors.length == 0) return;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        $runtimeErrorsTabHeading.trigger(mousePointer + \"down\");\r\n\r\n        let $errorList = jQuery('<div class=\"jo_errorlist\"></div>');\r\n        $runtimeErrorsTab.append($errorList);\r\n\r\n        for (let error of errors) {\r\n            let query = error.statement.sql;\r\n            query = query.replace(/\\n/g, \" \");\r\n            query = query.replace(/\\s\\s+/g, ' ');\r\n\r\n            let $errorLine = jQuery('<div class=\"jo_error-line\" style=\"flex-direction:column; width: fit-content\"></div>')\r\n            $errorList.append($errorLine);\r\n\r\n            $errorLine.on(mousePointer + 'down', () => {\r\n                let range = {\r\n                    startColumn: error.statement.from.column, startLineNumber: error.statement.from.line,\r\n                    endColumn: error.statement.to.column, endLineNumber: error.statement.to.line\r\n                };\r\n\r\n                this.main.getMonacoEditor().revealRangeInCenter(range);\r\n                $errorList.find('.jo_error-line').removeClass('jo_active');\r\n                $errorLine.addClass('jo_active');\r\n\r\n            })\r\n\r\n\r\n            let $sqlDiv = jQuery('<div class=\"jo_sqlErrorStatement\"></div>');\r\n            $errorLine.append($sqlDiv);\r\n\r\n            monaco.editor.colorize(query, \"vscSQL\", {}).then(\r\n                (html) => { $sqlDiv.html(html) });\r\n\r\n            let $messageDiv = jQuery('<div class=\"jo_sqlErrorMessage\">' + error.message + '</div>');\r\n            $errorLine.append($messageDiv);\r\n\r\n        }\r\n\r\n        this.$bottomDiv.find('.jo_tabheading').removeClass('jo_active');\r\n        $runtimeErrorsTabHeading.addClass('jo_active');\r\n        $runtimeErrorsTab.addClass('jo_active');\r\n\r\n    }\r\n\r\n    isSelectStatement(statement: SQLStatement): boolean {\r\n        return statement.ast != null && statement.ast.type == TokenType.keywordSelect;\r\n    }\r\n\r\n    isDDLStatement(statement: SQLStatement): boolean {\r\n        return statement.ast != null && [TokenType.keywordCreate, TokenType.keywordDrop, TokenType.keywordAlter].indexOf(statement.ast.type) >= 0;\r\n    }\r\n\r\n    isWriteStatement(statement: SQLStatement): boolean {\r\n        return statement.ast != null && [TokenType.keywordInsert, TokenType.keywordDelete, TokenType.keywordUpdate].indexOf(statement.ast.type) >= 0;\r\n    }\r\n\r\n    private presentResultsIntern(query: string, results: QueryResult[]) {\r\n        let $resultTabheading = this.$bottomDiv.find('.jo_resultTabheading');\r\n        let $resultHeader = this.$bottomDiv.find('.jo_result-header');\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        $resultTabheading.trigger(mousePointer + \"down\");\r\n        this.result = results.pop();\r\n\r\n        let headerDiv = $resultHeader;\r\n\r\n        query = query.replace(/\\n/g, \" \");\r\n        query = query.replace(/\\s\\s+/g, ' ');\r\n        query = query.replace(/limit 100000/g, '');\r\n\r\n        monaco.editor.colorize(query, \"vscSQL\", {}).then(\r\n            (html) => { headerDiv.html(html) });\r\n\r\n        this.paginationAll = this.result ? this.result.values.length : 0;\r\n        this.$infoDiv.find('.jo_pagination_all').html(`${this.paginationAll}`);\r\n        this.paginationFrom = 1;\r\n        this.$paginationDiv.show();\r\n        this.activateButtons();\r\n\r\n        this.showResults();\r\n\r\n    }\r\n\r\n    public clear() {\r\n        let $bodyDiv = this.$bottomDiv.find('.jo_result-body');\r\n        $bodyDiv.empty();\r\n        this.$paginationDiv.hide();\r\n    }\r\n\r\n    private showResultsBusy: boolean = false;\r\n    private showResultPending: boolean = false;\r\n\r\n    private showResults() {\r\n        let $bodyDiv = this.$bottomDiv.find('.jo_result-body');\r\n\r\n        if (this.result == null) {\r\n            this.$infoDiv.find('.jo_pagination_fromto').html('---');\r\n            $bodyDiv.html('Die Datenbank lieferte eine leere Ergebnistabelle.');\r\n            return;\r\n        }\r\n\r\n        let that = this;\r\n        let from = this.paginationAll == 0 ? 0 : this.paginationFrom;\r\n        let to = this.paginationAll == 0 ? 0 : Math.min(this.paginationFrom + this.paginationSize - 1, this.paginationAll);\r\n        this.$infoDiv.find('.jo_pagination_fromto').html(`${from}-${to}`)\r\n\r\n        if (this.showResultsBusy) {\r\n            if (this.showResultPending) {\r\n                return;\r\n            }\r\n            this.showResultPending = true;\r\n            let waitFunction = () => {\r\n                if (that.showResultsBusy) {\r\n                    setTimeout(() => {\r\n                        waitFunction();\r\n                    }, 200);\r\n                } else {\r\n                    that.showResultPending = false;\r\n                    that.showResults();\r\n                }\r\n            }\r\n            setTimeout(waitFunction, 200);\r\n            return;\r\n        }\r\n\r\n        this.showResultsBusy = true;\r\n\r\n        let $table = jQuery('<table></table>');\r\n        let $header = jQuery('<tr></tr>');\r\n        $table.append($header);\r\n\r\n        this.result.columns.forEach((column) => { $header.append(jQuery(`<th><div>${column}</div></th>`)) });\r\n\r\n        let rows = this.result.values.slice(this.paginationFrom - 1, this.paginationFrom + this.paginationSize - 1);\r\n\r\n        let i = 0;\r\n        let f = () => {\r\n            if (i < rows.length) {\r\n                for (let j = i; j < Math.min(i + 200, rows.length); j++) {\r\n                    let row = rows[j];\r\n                    let $row = jQuery('<tr></tr>');\r\n                    $table.append($row);\r\n                    row.forEach((cell) => { $row.append(jQuery(`<td>${cell}</td>`)) });\r\n                }\r\n                i = Math.min(i + 200, rows.length);\r\n                if (i < rows.length) {\r\n                    setTimeout(f, 30);\r\n                } else {\r\n                    $bodyDiv.empty().append($table);\r\n                    this.showResultsBusy = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        f();\r\n\r\n        // rows.forEach((row) => {\r\n        //     let $row = jQuery('<tr></tr>');\r\n        //     $table.append($row);\r\n        //     row.forEach((cell) => {$row.append(jQuery(`<td>${cell}</td>`))});\r\n        // });\r\n\r\n        // bodyDiv.empty().append($table);\r\n\r\n    }\r\n\r\n\r\n    fetchSelectedStatements(): SQLStatement[] {\r\n        let module = this.main.getCurrentlyEditedModule();\r\n        if (module == null) return null;\r\n\r\n        let monacoEditor = this.main.getMonacoEditor();\r\n        // console.log(monacoEditor.getSelection());\r\n        // console.log(monacoEditor.getPosition());\r\n\r\n        let statements: SQLStatement[] = module.getSQLSTatementsAtSelection(monacoEditor.getSelection());\r\n        for (let statement of statements) {\r\n            statement.sql = monacoEditor.getModel().getValueInRange({\r\n                startColumn: statement.from.column,\r\n                startLineNumber: statement.from.line, endColumn: statement.to.column, endLineNumber: statement.to.line\r\n            });\r\n        }\r\n\r\n        // let sqlStatement = module.getSQLStatementAtPosition(monacoEditor.getPosition());\r\n\r\n        return statements;\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { Module } from \"../compiler/parser/Module.js\";\r\nimport { ResultsetPresenter } from \"../main/gui/ResultsetPresenter.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { WDatabase } from \"../workspace/WDatabase.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ajax } from \"./AjaxHelper.js\";\r\nimport { GetNewStatementsRequest, GetNewStatementsResponse, GetWebSocketTokenResponse, LongPollingListenerResponse, RegisterLongPollingListenerRequest, WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestGetNewStatements, WebSocketResponse } from \"./Data.js\";\r\n\r\nexport class Notifier {\r\n\r\n    connection: WebSocket;\r\n    isOpen: boolean = false;\r\n    workspace: Workspace;\r\n    database: WDatabase;\r\n\r\n    constructor(public main: Main) {\r\n        // Polling is not used. \r\n        // We try long polling (see below!)\r\n\r\n        // this.startPolling();\r\n    }\r\n\r\n    connect(workspace: Workspace) {\r\n\r\n        let that = this;\r\n        this.workspace = workspace;\r\n        this.database = workspace.database;\r\n\r\n        if (this.isOpen) {\r\n            this.connection.close();\r\n        }\r\n\r\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\r\n\r\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/websocket\";\r\n            this.connection = new WebSocket(url);\r\n\r\n            this.connection.onerror = (error: Event) => { this.onError(error); }\r\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\r\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\r\n\r\n            this.connection.onopen = (event: Event) => {\r\n                let request: WebSocketRequestConnect = {\r\n                    command: 1,\r\n                    token: response.token,\r\n                    workspaceId: workspace.id,\r\n                    databaseId: workspace.database.id,\r\n                    databaseVersion: workspace.database.version\r\n                }\r\n\r\n                this.isOpen = true;\r\n                this.sendIntern(JSON.stringify(request));\r\n                this.onOpen();\r\n\r\n            }\r\n\r\n            setTimeout(() => {\r\n                that.startLongPolling()\r\n            }, 2000);\r\n\r\n        });\r\n\r\n    }\r\n\r\n    unsentMessages: string[] = [];\r\n    sendIntern(message: string) {\r\n\r\n        if (!this.isOpen) {\r\n            this.unsentMessages.push(message);\r\n        } else {\r\n            try {\r\n                this.connection.send(message);\r\n            } catch (exception) {\r\n                console.log(exception);\r\n            }\r\n        }\r\n    }\r\n\r\n    onClose(event: CloseEvent) {\r\n        this.isOpen = false;\r\n    }\r\n\r\n\r\n    disconnect() {\r\n        let message: WebSocketRequestDisconnect = {\r\n            command: 4\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n        this.connection.close();\r\n        this.workspace = null;\r\n    }\r\n\r\n    onMessage(event: MessageEvent) {\r\n\r\n        let that = this;\r\n        let response: WebSocketResponse = JSON.parse(event.data);\r\n        if (response.command == undefined) return;\r\n\r\n        switch (response.command) {\r\n            case 2: // SendStatements\r\n                that.executeNewStatements(response.newStatements, response.firstNewStatementIndex, () => {\r\n                    let request: WebSocketRequestGetNewStatements = { command: 2, databaseVersion: that.database.version };\r\n                    that.sendIntern(JSON.stringify(request));\r\n                })\r\n                break;\r\n            case 3: // server initiated disconnect\r\n                this.isOpen = false;\r\n                this.database = null;\r\n                this.workspace = null;\r\n                break;\r\n            case 4: // keep alive\r\n                break;\r\n            case 5: // rollback\r\n                if (this.database.version > response.new_version) {\r\n                    this.main.getHistoryViewer().rollbackLocal(response.new_version);\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    executeNewStatements(newStatements: string[], firstNewStatementIndex: number, callbackIfTooFewStatements: () => void, callbackIfDone: () => void = () => { }, doRefreshDatabaseExplorer: boolean = true) {\r\n        if (this.database == null) return;\r\n        let that = this;\r\n        let delta = firstNewStatementIndex - (this.database.version + 1);\r\n        if (delta > 0) {\r\n            callbackIfTooFewStatements();\r\n            callbackIfDone();\r\n            return;\r\n        } else {\r\n            if (delta < 0) {\r\n                newStatements.splice(0, -delta);\r\n                firstNewStatementIndex -= delta;\r\n            }\r\n            let statements = newStatements;\r\n            if (statements.length > 0) {\r\n                this.main.resultsetPresenter.executeStatementsString(statements, 0, () => {\r\n                    that.main.getHistoryViewer().appendStatements(statements);\r\n                    that.database.statements = that.database.statements.concat(statements)\r\n                    that.database.version = firstNewStatementIndex + newStatements.length - 1;\r\n                    if (doRefreshDatabaseExplorer) {\r\n                        that.main.databaseExplorer.refresh();\r\n                    }\r\n                    callbackIfDone();\r\n                })\r\n            } else {\r\n                callbackIfDone();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    onError(error: Event) {\r\n    }\r\n\r\n    onOpen() {\r\n        this.isOpen = true;\r\n        if (this.unsentMessages.length > 0) {\r\n            this.unsentMessages.forEach(m => this.sendIntern(m));\r\n            this.unsentMessages = [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Polling is not used. \r\n     * We try long polling!\r\n     * (see below)\r\n     */\r\n    isPolling: boolean = false;\r\n    startPolling() {\r\n        if (this.isPolling) return;\r\n        this.isPolling = true;\r\n\r\n        this.poll();\r\n\r\n    }\r\n\r\n    /**\r\n     * Polling is not used.\r\n     * We try long polling!\r\n     * (see below)\r\n     */\r\n    counter: number = 0;\r\n    poll() {\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.poll();\r\n        }, 6000);\r\n\r\n        if (!that.isOpen && that.workspace != null) {\r\n            this.getNewStatementsHttp();\r\n\r\n            // retry connecting:\r\n            that.counter++;\r\n            if (that.counter == 10) {\r\n                that.counter = 0;\r\n                that.connect(that.workspace);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getNewStatementsHttp() {\r\n        let that = this;\r\n        if (this.workspace == null || this.database == null) return;\r\n\r\n        let request: GetNewStatementsRequest = {\r\n            workspaceId: this.workspace.id,\r\n            version_before: this.workspace.database.version\r\n        }\r\n\r\n        ajax('getNewStatements', request, (response: GetNewStatementsResponse) => {\r\n\r\n            if(response.rollbackToVersion != null){\r\n                that.main.getHistoryViewer().rollbackLocal(response.rollbackToVersion);\r\n            } else {\r\n                that.executeNewStatements(response.newStatements, response.firstNewStatementIndex, () => {\r\n                    that.getNewStatementsHttp();\r\n                })\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    isLongPolling: boolean = false;\r\n    startLongPolling() {\r\n        if (this.isLongPolling) return;\r\n        this.isLongPolling = true;\r\n\r\n        this.longPoll();\r\n\r\n    }\r\n\r\n    longPollCounter: number = 0;\r\n    longPoll() {\r\n        let that = this;\r\n\r\n        if (!that.isOpen && that.workspace != null) {\r\n            let request: RegisterLongPollingListenerRequest = {\r\n                workspaceId: that.workspace.id\r\n            }\r\n\r\n            $.ajax({\r\n                type: 'POST',\r\n                async: true,\r\n                data: JSON.stringify(request),\r\n                contentType: 'application/json',\r\n                url: \"servlet/registerLongPollingListener\",\r\n                success: function (resp: string) {\r\n                    console.log(resp);\r\n                    let response: LongPollingListenerResponse = typeof resp == \"string\" ? JSON.parse(resp) : resp;\r\n                    if (resp != null && !that.isOpen && that.workspace?.id == request.workspaceId && response.success) {\r\n                        that.executeNewStatements(response.newStatements, response.firstNewStatementIndex, () => {\r\n                            that.getNewStatementsHttp();\r\n                        })\r\n\r\n                        let timeout: number = 1000;\r\n                        // retry connecting:\r\n                        that.longPollCounter++;\r\n                        if (that.longPollCounter == 10) {\r\n                            that.longPollCounter = 0;\r\n                            that.connect(that.workspace);\r\n                            timeout = 2000;\r\n                        }\r\n\r\n                        setTimeout(() => {\r\n                            that.longPoll();\r\n                        }, 2000);\r\n                    }\r\n                },\r\n                error: function (jqXHR, message) {\r\n                    if (!that.isOpen && that.workspace?.id == request.workspaceId) {\r\n                        setTimeout(() => {\r\n                            that.longPoll();\r\n                        }, 2000);\r\n                    }\r\n                }\r\n            });\r\n\r\n        } else {\r\n            setTimeout(() => {\r\n                that.longPoll();\r\n            }, 5000);\r\n        }\r\n\r\n    }\r\n\r\n}","export class WaitOverlay {\r\n\r\n    visible: boolean = false;\r\n    fadeOutPending: boolean = false;\r\n    $bitteWartenText: JQuery<HTMLElement>;\r\n    $bitteWartenProgress: JQuery<HTMLElement>;\r\n\r\n    constructor(private $waitDiv: JQuery<HTMLElement>){\r\n        $waitDiv.css('display', 'none');\r\n        this.$bitteWartenText = $waitDiv.find('.bitteWartenText');\r\n        this.$bitteWartenProgress = $waitDiv.find('.bitteWartenProgress');\r\n    }\r\n\r\n    show(message: string){\r\n        this.fadeOutPending = false;\r\n        this.$bitteWartenText.html(message);\r\n        this.$bitteWartenProgress.html('');\r\n        if(!this.visible){\r\n            this.visible = true;\r\n            this.$waitDiv.css('display', 'flex');\r\n            this.$waitDiv.hide();\r\n            this.$waitDiv.fadeIn(400);\r\n        }\r\n    }\r\n\r\n    setProgress(message: string){\r\n        this.$bitteWartenProgress.html(message);\r\n    }\r\n\r\n    hide(){\r\n        if(this.visible){\r\n            this.fadeOutPending = true;\r\n            setTimeout(() => {\r\n                if(this.fadeOutPending){\r\n                    this.fadeOutPending = false;\r\n                    this.$waitDiv.fadeOut(200, () => {\r\n                        this.$waitDiv.css('display', 'none');\r\n                    })\r\n                    this.visible = false;        \r\n                }                \r\n            }, 50);\r\n        }\r\n    }\r\n\r\n}","import { MainEmbedded } from \"../../embedded/MainEmbedded.js\";\r\nimport { copyTextToClipboard, openContextMenu } from \"../../tools/HtmlTools.js\";\r\nimport { WDatabase } from \"../../workspace/WDatabase.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\ntype HistoryPanelEntry = {\r\n    statement: string;\r\n    $div: JQuery<HTMLDivElement>;\r\n    $rollbackButton: JQuery<HTMLDivElement>;\r\n}\r\n\r\nexport class HistoryViewer {\r\n\r\n    panelEntries: HistoryPanelEntry[] = [];\r\n\r\n    constructor(private main: MainBase, private $historyPanel: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    clear() {\r\n        this.$historyPanel.empty();\r\n        this.main.getActionManager().setActive(\"rollback\", false);\r\n        this.panelEntries = [];\r\n    }\r\n\r\n    clearAndShowStatements(statements: string[]) {\r\n        this.clear();\r\n        this.appendStatements(statements);\r\n        this.main.getActionManager().setActive(\"rollback\", statements.length > 0);\r\n    }\r\n\r\n    appendStatements(statements: string[]) {\r\n        statements.forEach(stmt => {\r\n            let panelEntry = this.makePanelEntry(stmt, this.panelEntries.length + 1);\r\n            this.$historyPanel.prepend(panelEntry.$div);\r\n            this.panelEntries.unshift(panelEntry);\r\n        })\r\n\r\n        if(statements.length > 0){\r\n            this.main.getActionManager().setActive(\"rollback\", true);\r\n        }\r\n\r\n        this.makeLastButtonActive();\r\n    }\r\n\r\n    makeLastButtonActive() {\r\n        this.panelEntries.forEach(pe => pe.$rollbackButton.removeClass('jo_active'));\r\n\r\n        if (this.panelEntries.length > 0) {\r\n            this.panelEntries[0].$rollbackButton.addClass('jo_active');\r\n        }\r\n    }\r\n\r\n    makePanelEntry(statement: string, index: number): HistoryPanelEntry {\r\n        let $div = <JQuery<HTMLDivElement>>jQuery(`<div class=\"jo_panelEntry\"></div>`);\r\n        let $index = jQuery(`<div class=\"jo_panelEntryIndex\">${index}.</div>`);\r\n        let $text = jQuery(`<div class=\"jo_panelEntryText\"></div>`);\r\n        let t: string = statement.substring(0, Math.min(400, statement.length));\r\n        if (statement.length > 400) {\r\n            t += \"...\";\r\n        }\r\n        $text.text(t);\r\n        let $copybutton = <JQuery<HTMLDivElement>>jQuery(`<div class=\"img_copy jo_panelEntryCopyButton jo_active jo_button\" title=\"In die Zwischenablage kopieren\"></div>`)\r\n        let $rollbackbutton = <JQuery<HTMLDivElement>>jQuery(`<div class=\"img_undo jo_panelEntryRollbackButton jo_button\" title=\"Rollback\"></div>`)\r\n        let that = this;\r\n\r\n        $copybutton.on('click', () => {\r\n            copyTextToClipboard(statement);\r\n        })\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $rollbackbutton.on(mousePointer + 'up', (ev) => {\r\n            ev.preventDefault();\r\n            openContextMenu([{\r\n                caption: \"Abbrechen\",\r\n                callback: () => {\r\n                }\r\n            }, {\r\n                caption: \"Ich bin mir sicher: rollback!\",\r\n                color: \"#ff6060\",\r\n                callback: () => {\r\n                    this.rollback();\r\n                }\r\n            }], ev.pageX + 2, ev.pageY + 2);\r\n            ev.stopPropagation();\r\n        })\r\n\r\n        $div.append($index, $text, $copybutton, $rollbackbutton);\r\n        return {\r\n            $div: $div,\r\n            statement: statement,\r\n            $rollbackButton: $rollbackbutton\r\n        }\r\n    }\r\n\r\n    rollback() {\r\n        if (this.panelEntries.length == 0) return;\r\n\r\n        if (this.main.isEmbedded()) {\r\n            this.rollbackEmbedded();\r\n            this.main.getActionManager().setActive(\"rollback\", this.panelEntries.length > 0);\r\n        } else {\r\n            let main: Main = <Main>this.main;\r\n            main.networkManager.rollback((error: string, rollbackLocalNeeded: boolean) => {\r\n                if (error == null && rollbackLocalNeeded) {\r\n                    this.rollbackLocal();\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    rollbackLocal(new_version?: number) {\r\n        let database = this.main.getCurrentWorkspace().database;\r\n        if(new_version == null) new_version = database.version - 1;\r\n        \r\n        while(database.version > new_version){\r\n            database.statements.pop();\r\n            database.version--;\r\n        }\r\n        this.main.getDatabaseTool().initializeWorker(database.templateDump, database.statements, () => {\r\n\r\n        }, () => {\r\n            this.main.getDatabaseExplorer().refreshAfterRetrievingDBStructure();\r\n            let lastPanelEntry = this.panelEntries.shift();\r\n            lastPanelEntry.$div.remove();\r\n            this.makeLastButtonActive();\r\n            this.main.getActionManager().setActive(\"rollback\", this.panelEntries.length > 0);\r\n        })\r\n    }\r\n\r\n    rollbackEmbedded() {\r\n        let main: MainEmbedded = <MainEmbedded>this.main;\r\n        main.writeQueryManager.rollback();\r\n\r\n        this.main.getDatabaseTool().initializeWorker(main.initialTemplateDump,\r\n            main.initialStatements.concat(main.writeQueryManager.writtenStatements), () => { },\r\n            () => {\r\n                this.main.getDatabaseExplorer().refreshAfterRetrievingDBStructure();\r\n                let lastPanelEntry = this.panelEntries.shift();\r\n                lastPanelEntry.$div.remove();\r\n                this.makeLastButtonActive();\r\n            })\r\n    }\r\n\r\n}","import { ClassData, UserData, Workspaces } from \"../communication/Data.js\";\r\nimport { NetworkManager } from \"../communication/NetworkManager.js\";\r\nimport { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ActionManager } from \"./gui/ActionManager.js\";\r\nimport { BottomDiv } from \"./gui/BottomDiv.js\";\r\nimport { Editor } from \"./gui/Editor.js\";\r\nimport { Formatter } from \"./gui/Formatter.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { MainMenu } from \"./gui/MainMenu.js\";\r\nimport { ProjectExplorer } from \"./gui/ProjectExplorer.js\";\r\nimport { RightDiv } from \"./gui/RightDiv.js\";\r\nimport { Sliders } from \"./gui/Sliders.js\";\r\nimport { TeacherExplorer } from \"./gui/TeacherExplorer.js\";\r\nimport { ThemeManager } from \"./gui/ThemeManager.js\";\r\nimport { Login } from \"./Login.js\";\r\nimport { Module, File } from \"../compiler/parser/Module.js\";\r\nimport { ViewModeController } from \"./gui/ViewModeController.js\";\r\nimport { ErrorManager } from \"./gui/ErrorManager.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { DatabaseTool } from \"../tools/DatabaseTools.js\";\r\nimport { MainBase } from \"./MainBase.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { DatabaseExplorer } from \"./gui/DatabaseExplorer.js\";\r\nimport { ProgramControlButtons } from \"./gui/ProgramControlButtons.js\";\r\nimport { ResultsetPresenter } from \"./gui/ResultsetPresenter.js\";\r\nimport { Notifier } from \"../communication/Notifier.js\";\r\nimport { checkIfMousePresent } from \"../tools/HtmlTools.js\";\r\nimport { WaitOverlay } from \"./gui/WaitOverlay.js\";\r\nimport { HistoryViewer } from \"./gui/HistoryViewer.js\";\r\n\r\nexport class Main implements MainBase {\r\n    isEmbedded(): boolean {\r\n        return false;\r\n    }\r\n\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    // VORSICHT: ggf. Module -> any\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.projectExplorer.getCurrentlyEditedModule();\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n        this.projectExplorer.setModuleActive(module);\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n    getDatabaseTool(): DatabaseTool {\r\n        return this.databaseTool;\r\n    }\r\n\r\n    getDatabaseExplorer():DatabaseExplorer {\r\n        return this.databaseExplorer;\r\n    }\r\n\r\n    getResultsetPresenter(): ResultsetPresenter {\r\n        return this.resultsetPresenter;\r\n    }\r\n\r\n    getWaitOverlay(): WaitOverlay {\r\n        return this.waitOverlay;\r\n    }\r\n\r\n    getHistoryViewer(): HistoryViewer {\r\n        return this.historyViewer;\r\n    }\r\n\r\n    workspaceList: Workspace[] = [];\r\n    workspacesOwnerId: number;\r\n\r\n    // monaco_editor: monaco.editor.IStandaloneCodeEditor;\r\n    editor: Editor;\r\n    currentWorkspace: Workspace;\r\n    projectExplorer: ProjectExplorer;\r\n    teacherExplorer: TeacherExplorer;\r\n    networkManager: NetworkManager;\r\n    actionManager: ActionManager;\r\n    mainMenu: MainMenu;\r\n\r\n    login: Login;\r\n\r\n    compiler: Compiler;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    bottomDiv: BottomDiv;\r\n\r\n    startupComplete = 2;\r\n    waitForGUICallback: () => void;\r\n\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    user: UserData;\r\n    userDataDirty: boolean = false;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    rightDiv: RightDiv;\r\n\r\n    viewModeController: ViewModeController;\r\n\r\n    databaseTool: DatabaseTool;\r\n\r\n    databaseExplorer: DatabaseExplorer;\r\n\r\n    resultsetPresenter: ResultsetPresenter;\r\n\r\n    notifier: Notifier;\r\n\r\n    waitOverlay: WaitOverlay = new WaitOverlay(jQuery('.bitteWarten'));\r\n    historyViewer: HistoryViewer = new HistoryViewer(this, jQuery('.jo_historyTab'));\r\n\r\n    initGUI() {\r\n\r\n        checkIfMousePresent();\r\n\r\n        this.login = new Login(this);\r\n        this.login.initGUI();\r\n\r\n        this.databaseTool = new DatabaseTool(this);\r\n        this.databaseExplorer = new DatabaseExplorer(this, jQuery(\".jo_db_tree\"));\r\n\r\n        this.actionManager = new ActionManager(null, this);\r\n        this.actionManager.init();\r\n\r\n        this.networkManager = new NetworkManager(this, jQuery('#bottomdiv-outer .jo_updateTimerDiv'));\r\n\r\n        let sliders = new Sliders(this);\r\n        sliders.initSliders();\r\n        this.mainMenu = new MainMenu(this);\r\n        this.projectExplorer = new ProjectExplorer(this, jQuery('#leftpanel>.jo_projectexplorer'));\r\n        this.projectExplorer.initGUI();\r\n\r\n        this.bottomDiv = new BottomDiv(this, jQuery('#bottomdiv-outer>.jo_bottomdiv-inner'), jQuery('body'));\r\n\r\n        this.rightDiv = new RightDiv(this, jQuery('#rightdiv-inner'));\r\n        this.rightDiv.initGUI();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.themeManager = new ThemeManager();\r\n\r\n        this.viewModeController = new ViewModeController(jQuery(\"#view-mode\"), this);\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n        new ProgramControlButtons(this, jQuery('#controls'));\r\n\r\n        this.resultsetPresenter = new ResultsetPresenter(this, jQuery('.jo_bottomdiv-inner'));\r\n\r\n        this.notifier = new Notifier(this);\r\n\r\n    }\r\n\r\n\r\n    initEditor() {\r\n        this.editor = new Editor(this, true, false);\r\n        new Formatter().init();\r\n        // this.monaco_editor = \r\n        this.editor.initGUI(jQuery('#editor'));\r\n\r\n        let that = this;\r\n        jQuery(window).on('resize', (event) => {\r\n            jQuery('#bottomdiv-outer').css('height', '450px');\r\n            jQuery('#editor').css('height', (window.innerHeight - 450 - 30 - 2) + \"px\");\r\n            that.editor.editor.layout();\r\n            jQuery('#editor').css('height', \"\");\r\n\r\n        });\r\n\r\n        jQuery(window).trigger('resize');\r\n\r\n        this.checkStartupComplete();\r\n    }\r\n\r\n    initTeacherExplorer(classdata: ClassData[]) {\r\n        this.teacherExplorer = new TeacherExplorer(this, classdata);\r\n        this.teacherExplorer.initGUI();\r\n    }\r\n\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    start() {\r\n\r\n        if (this.waitForGUICallback != null) {\r\n            this.waitForGUICallback();\r\n        }\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.getMonacoEditor().layout();\r\n        }, 200);\r\n\r\n        this.compiler = new Compiler(this);\r\n\r\n        this.startTimer();\r\n\r\n        $(window).on('unload', function() {\r\n            \r\n            if(navigator.sendBeacon && that.user != null){\r\n                that.networkManager.sendUpdates(null, false);\r\n                that.networkManager.sendUpdateUserSettings(() => {});\r\n            }\r\n            \r\n        });\r\n\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n                this.projectExplorer.renderErrorCount(this.currentWorkspace, errors);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                if (this.projectExplorer) {\r\n                    this.version++;\r\n                }\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    removeWorkspace(w: Workspace) {\r\n        this.workspaceList.splice(this.workspaceList.indexOf(w), 1);\r\n    }\r\n\r\n    restoreWorkspaces(workspaces: Workspaces) {\r\n\r\n        this.workspaceList = [];\r\n        this.currentWorkspace = null;\r\n        // this.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\" , \"text\"));\r\n        this.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        let currentWorkspace: Workspace = null;\r\n\r\n        for (let ws of workspaces.workspaces) {\r\n\r\n            let workspace: Workspace = Workspace.restoreFromData(ws, this);\r\n            this.workspaceList.push(workspace);\r\n            if (ws.id == this.user.currentWorkspace_id && !ws.isFolder) {\r\n                currentWorkspace = workspace;\r\n            }\r\n        }\r\n\r\n        this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n\r\n        if (currentWorkspace == null && this.workspaceList.length > 0) {\r\n            for(let ws of this.workspaceList){\r\n                if(!ws.isFolder){\r\n                    currentWorkspace = this.workspaceList[0];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (currentWorkspace != null) {\r\n            this.projectExplorer.setWorkspaceActive(currentWorkspace, null, true);\r\n        }\r\n\r\n        if (this.workspaceList.length == 0) {\r\n\r\n            Helper.showHelper(\"newDatabaseHelper\", this, this.projectExplorer.workspaceListPanel.$captionElement);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    createNewWorkspace(name: string, owner_id: number): Workspace {\r\n        return new Workspace(name, this, owner_id);\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class ErrorManager {\r\n\r\n    oldDecorations: string[] = [];\r\n    oldErrorDecorations: string[] = [];\r\n    $errorDiv: JQuery<HTMLElement>;\r\n\r\n    $bracket_warning: JQuery<HTMLElement>;\r\n\r\n    minimapColor: {[key: string]:string } = {};\r\n\r\n    lightBulbOnClickFunctionList: {class: string, onClickFunction: () => void, title: string}[] = [];\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>, private $mainDiv: JQuery<HTMLElement>) {\r\n        this.minimapColor[\"error\"] = \"#bc1616\";\r\n        this.minimapColor[\"warning\"] = \"#cca700\";\r\n        this.minimapColor[\"info\"] = \"#75beff\";\r\n\r\n        this.$bracket_warning = $mainDiv.find(\".jo_parenthesis_warning\");\r\n\r\n        this.$bracket_warning.attr('title', 'Klammeralarm!');\r\n        this.$bracket_warning.children().attr('title', 'Klammeralarm!');\r\n\r\n        let that = this;\r\n        $mainDiv.find(\".jo_pw_undo\").on(\"click\", () => {\r\n            let editor = that.main.getMonacoEditor();\r\n            editor.trigger(\".\", \"undo\", {});\r\n        }).attr('title', 'Undo');\r\n    }\r\n\r\n    showParenthesisWarning(error: string){\r\n        if(error != null){\r\n            this.$bracket_warning.css(\"visibility\", \"visible\");\r\n            this.$bracket_warning.find(\".jo_pw_heading\").text(error);\r\n        } else {\r\n            this.$bracket_warning.css(\"visibility\", \"hidden\");\r\n        }\r\n    }\r\n\r\n    showErrors(workspace: Workspace): Map<Module, number> {\r\n\r\n        this.lightBulbOnClickFunctionList = [];\r\n\r\n        let errorCountMap: Map<Module, number> = new Map();\r\n\r\n        this.$errorDiv = this.$bottomDiv.find('.jo_tabs>.jo_errorsTab');\r\n        this.$errorDiv.empty();\r\n\r\n        let hasErrors = false;\r\n\r\n        let ms = workspace.moduleStore;\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        for (let m of ms.getModules(false)) {\r\n            let markers: monaco.editor.IMarkerData[] = [];\r\n            let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n            let $errorList: JQuery<HTMLElement>[] = [];\r\n\r\n            let errors = m.getSortedAndFilteredErrors();\r\n            errorCountMap.set(m, m.getErrorCount());\r\n\r\n            for (let error of errors) {\r\n\r\n                let linesDecorationsClassName: string;\r\n                let borderLeftClass: string;\r\n                let minimapColor: string = this.minimapColor[error.level];\r\n\r\n                switch (error.level) {\r\n                    case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                    case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                    case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n                }\r\n\r\n                if (error.quickFix != null) {\r\n                    let quickFix = error.quickFix;\r\n                    let lightBulbClass = \"lb_\" + Math.trunc(Math.random() * 1000000);\r\n                    linesDecorationsClassName = 'jo_yellowLightBulb ' + borderLeftClass + \" \" + lightBulbClass;\r\n\r\n                    this.lightBulbOnClickFunctionList.push({class: '.' + lightBulbClass, \r\n                    onClickFunction: () => {\r\n\r\n                        let edits = quickFix.editsProvider(m.model.uri);\r\n                        editor.executeEdits(\"\", edits.map((edit) => {\r\n                            let r = edit.edit.range;\r\n                            return {\r\n                                range: new monaco.Range(r.startLineNumber, r.startColumn, r.endLineNumber, r.endColumn),\r\n                                text: edit.edit.text,\r\n                                forceMoveMarkers: true\r\n                            }\r\n                        }\r\n                        ));\r\n\r\n                    },\r\n                    title: quickFix.title\r\n                })\r\n\r\n\r\n                }\r\n\r\n                this.processError(error, m, $errorList);\r\n\r\n                let severity: monaco.MarkerSeverity;\r\n                switch (error.level) {\r\n                    case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                    case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                    case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n                }\r\n\r\n                markers.push({\r\n                    startLineNumber: error.position.line,\r\n                    startColumn: error.position.column,\r\n                    endLineNumber: error.position.line,\r\n                    endColumn: error.position.column + error.position.length,\r\n                    message: error.text,\r\n                    severity: severity,\r\n                    //@ts-ignore\r\n                    relatedInformation: error.quickFix\r\n                });\r\n\r\n                decorations.push({\r\n                    range: {\r\n                        startLineNumber: error.position.line,\r\n                        startColumn: error.position.column,\r\n                        endLineNumber: error.position.line,\r\n                        endColumn: error.position.column + error.position.length\r\n                    },\r\n                    options: {\r\n                        linesDecorationsClassName: linesDecorationsClassName,\r\n                        minimap: {\r\n                            position: monaco.editor.MinimapPosition.Inline,\r\n                            color: minimapColor\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n            }\r\n\r\n            monaco.editor.setModelMarkers(m.model, 'test', markers);\r\n            m.oldErrorDecorations = m.model.deltaDecorations(m.oldErrorDecorations, decorations);\r\n\r\n            // decorations used when user clicks on error in error-list:\r\n            this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, []);\r\n\r\n\r\n            if ($errorList.length > 0 && this.$errorDiv.length > 0) {\r\n                hasErrors = true;\r\n                let $file = jQuery('<div class=\"jo_error-filename\">' + m.file.name + '&nbsp;</div>');\r\n                this.$errorDiv.append($file);\r\n                for (let $error of $errorList) {\r\n                    this.$errorDiv.append($error);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasErrors && this.$errorDiv.length > 0) {\r\n            this.$errorDiv.append(jQuery('<div class=\"jo_noErrorMessage\">Keine Fehler gefunden :-)</div>'));\r\n        }\r\n\r\n        this.registerLightbulbOnClickFunctions();\r\n\r\n        return errorCountMap;\r\n\r\n    }\r\n\r\n    registerLightbulbOnClickFunctions() {\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            for(let locf of that.lightBulbOnClickFunctionList){\r\n                    jQuery(locf.class).off('click', locf.onClickFunction);\r\n                    jQuery(locf.class).on('click', locf.onClickFunction).attr('title', locf.title);\r\n            }            \r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    processError(error: Error, m: Module, $errorDivs: JQuery<HTMLElement>[]) {\r\n\r\n        let $div = jQuery('<div class=\"jo_error-line\"></div>');\r\n        let $lineColumn = jQuery('<span class=\"jo_error-position\">[Z&nbsp;<span class=\"jo_linecolumn\">' + error.position.line + '</span>' +\r\n            ' Sp&nbsp;<span class=\"jo_linecolumn\">' + error.position.column + '</span>]</span>:&nbsp;');\r\n        let category = \"\";\r\n        switch (error.level) {\r\n            case \"error\": break;\r\n            case \"warning\": category = '<span class=\"jo_warning_category\">Warnung: </span>'; break;\r\n            case \"info\": category = '<span class=\"jo_info_category\">Info: </span>'; break;\r\n        }\r\n        let $message = jQuery('<div class=\"jo_error-text\">' + category + error.text + \"</div>\");\r\n\r\n        $div.append($lineColumn).append($message);\r\n\r\n        let that = this;\r\n        $div.on(\"mousedown\", (ev) => {\r\n            this.$errorDiv.find('.jo_error-line').removeClass('jo_active');\r\n            $div.addClass('jo_active');\r\n            that.showError(m, error);\r\n        });\r\n\r\n        $errorDivs.push($div);\r\n    }\r\n\r\n    showError(m: Module, error: Error) {\r\n\r\n        if (this.main instanceof Main) {\r\n            if (m != this.main.projectExplorer.getCurrentlyEditedModule()) {\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n        let position = error.position;\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n\r\n        let className: string = \"\";\r\n        switch (error.level) {\r\n            case \"error\": className = \"jo_revealError\"; break;\r\n            case \"warning\": className = \"jo_revealWarning\"; break;\r\n            case \"info\": className = \"jo_revealInfo\"; break;\r\n        }\r\n\r\n\r\n        this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, [\r\n            {\r\n                range: range,\r\n                options: { className: className }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n}","import { makeDiv } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { stringToDate, dateToStringWithoutTime } from \"../../tools/StringTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\ntype ModuleWithWorkspace = {\r\n    module: Module,\r\n    workspace: Workspace\r\n}\r\n\r\ntype DayWithModules = {\r\n    date: Date;\r\n    day: string;\r\n    modules: ModuleWithWorkspace[];\r\n}\r\n\r\nexport class HomeworkManager {\r\n\r\n    $homeworkTab: JQuery<HTMLElement>;\r\n    $homeworkTabLeft: JQuery<HTMLElement>;\r\n    $homeworkTabRight: JQuery<HTMLElement>;\r\n\r\n    $showRevisionButton: JQuery<HTMLElement>;\r\n    showRevisionActive: boolean = false;\r\n\r\n    diffEditor: monaco.editor.IStandaloneDiffEditor;\r\n\r\n    constructor(private main: Main, public $bottomDiv: JQuery<HTMLElement>) {\r\n        this.$homeworkTab = $bottomDiv.find('.jo_tabs>.jo_homeworkTab');\r\n    }\r\n\r\n    initGUI() {\r\n        let that = this;\r\n        this.$homeworkTab.append(this.$homeworkTabLeft = makeDiv(\"\", \"jo_homeworkTabLeft jo_scrollable\"));\r\n        this.$homeworkTab.append(this.$homeworkTabRight = makeDiv(\"\", \"jo_homeworkTabRight jo_scrollable\"));\r\n        jQuery('#view-mode').prepend(this.$showRevisionButton = makeDiv(\"\", \"jo_button jo_active jo_homeworkRevisionButton\", \"\"));\r\n        this.$showRevisionButton.on(\"click\", () => {\r\n            if (this.showRevisionActive) {\r\n                this.hideRevision();\r\n            } else {\r\n                this.showRevision(that.main.getCurrentlyEditedModule());\r\n            }\r\n        });\r\n        this.$showRevisionButton.hide();\r\n        jQuery('#diffEditor').hide();\r\n    }\r\n\r\n    showHomeWorkRevisionButton() {\r\n        this.$showRevisionButton.text(this.showRevisionActive ? \"Normalansicht\" : \"Korrekturen zeigen\");\r\n        this.$showRevisionButton.show();\r\n    }\r\n\r\n    hideHomeworkRevisionButton() {\r\n        this.$showRevisionButton.hide();\r\n    }\r\n\r\n    showRevision(module: Module) {\r\n\r\n        module.file.text = module.getProgramTextFromMonacoModel();\r\n        let file = module.file;\r\n\r\n        jQuery('#editor').hide();\r\n        jQuery('#diffEditor').show();\r\n\r\n        var originalModel = monaco.editor.createModel(file.text_before_revision, \"myJava\");\r\n        var modifiedModel = monaco.editor.createModel(file.text, \"myJava\");\r\n\r\n        this.diffEditor = monaco.editor.createDiffEditor(document.getElementById(\"diffEditor\"), {\r\n            // You can optionally disable the resizing\r\n            enableSplitViewResizing: true,\r\n            originalEditable: false,\r\n            readOnly: true,\r\n            // Render the diff inline\r\n            renderSideBySide: true\r\n        });\r\n\r\n        this.diffEditor.setModel({\r\n            original: originalModel,\r\n            modified: modifiedModel\r\n        });\r\n\r\n        this.showRevisionActive = true;\r\n        this.showHomeWorkRevisionButton();\r\n    }\r\n\r\n    hideRevision() {\r\n        if (this.showRevisionActive) {\r\n\r\n            jQuery('#diffEditor').hide();\r\n            this.diffEditor.dispose();\r\n            this.diffEditor = null;\r\n            jQuery('#editor').show();\r\n\r\n            this.showRevisionActive = false;\r\n            this.showHomeWorkRevisionButton();\r\n        }\r\n    }\r\n\r\n\r\n    attachToWorkspaces(workspaces: Workspace[]) {\r\n\r\n        let daysWithModules: DayWithModules[] = [];\r\n        let map: { [day: string]: DayWithModules } = {};\r\n\r\n        workspaces.forEach(ws => {\r\n            ws.moduleStore.getModules(false).forEach(module => {\r\n\r\n                let dateString = module.file.submitted_date;\r\n                if (dateString != null) {\r\n\r\n                    let date: Date = stringToDate(dateString);\r\n                    let dateWithoutTime = dateToStringWithoutTime(date);\r\n                    let dwm: DayWithModules = map[dateWithoutTime];\r\n                    if (dwm == null) {\r\n                        dwm = {\r\n                            date: date,\r\n                            day: dateWithoutTime,\r\n                            modules: []\r\n                        };\r\n                        map[dateWithoutTime] = dwm;\r\n                        daysWithModules.push(dwm);\r\n                    }\r\n                    dwm.modules.push({module: module, workspace: ws});\r\n\r\n                }\r\n\r\n            });\r\n\r\n        });\r\n\r\n        this.$homeworkTabLeft.empty();\r\n        this.$homeworkTabRight.empty();\r\n\r\n        let that = this;\r\n\r\n        this.$homeworkTabLeft.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgabetage:\"));\r\n\r\n\r\n        daysWithModules.sort((a, b) => {\r\n            if (a.date.getFullYear() != b.date.getFullYear()) return -Math.sign(a.date.getFullYear() - b.date.getFullYear());\r\n            if (a.date.getMonth() != b.date.getMonth()) return -Math.sign(a.date.getMonth() - b.date.getMonth());\r\n            if (a.date.getDate() != b.date.getDate()) return -Math.sign(a.date.getDate() - b.date.getDate());\r\n            return 0;\r\n        });\r\n\r\n        let first: boolean = true;\r\n\r\n        daysWithModules.forEach(dwm => {\r\n\r\n            dwm.modules.sort((m1, m2) => m1.module.file.name.localeCompare(m2.module.file.name));\r\n\r\n            let $div = makeDiv(\"\", \"jo_homeworkDate\", dwm.day);\r\n            this.$homeworkTabLeft.append($div);\r\n\r\n            $div.on(\"click\", (e) => {\r\n                this.$homeworkTabLeft.find('.jo_homeworkDate').removeClass('active');\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            });\r\n\r\n            if (first) {\r\n                first = false;\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    select(dwm: DayWithModules) {\r\n        this.$homeworkTabRight.empty();\r\n        this.$homeworkTabRight.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgegebene Dateien:\"));\r\n        let that = this;\r\n        dwm.modules.forEach(moduleWithWorkspace => {\r\n            let $div = jQuery(`<div class=\"jo_homeworkEntry\">Workspace <span class=\"jo_homework-workspace\">\r\n                    ${moduleWithWorkspace.workspace.name}</span>, Datei <span class=\"jo_homework-file\">\r\n                    ${moduleWithWorkspace.module.file.name}</span> (Abgabe: ${moduleWithWorkspace.module.file.submitted_date} )</div>`);\r\n            that.$homeworkTabRight.append($div);\r\n            $div.on(\"click\", () => {\r\n                    that.main.projectExplorer.setWorkspaceActive(moduleWithWorkspace.workspace);\r\n                    that.main.projectExplorer.setModuleActive(moduleWithWorkspace.module);\r\n                    that.main.projectExplorer.fileListPanel.select(moduleWithWorkspace.module, false);\r\n            });\r\n        })\r\n        \r\n    }\r\n\r\n\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { ErrorManager } from \"./ErrorManager.js\";\r\nimport { HomeworkManager } from \"./HomeworkManager.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class BottomDiv {\r\n\r\n    errorManager: ErrorManager;\r\n    homeworkManager: HomeworkManager;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>, public $mainDiv: JQuery<HTMLElement>) {\r\n\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_homeworkTabheading').length > 0) {\r\n            this.homeworkManager = new HomeworkManager(<Main>main, $bottomDiv);\r\n        }\r\n\r\n        this.errorManager = new ErrorManager(main, $bottomDiv, $mainDiv);\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$bottomDiv);\r\n        if (this.homeworkManager != null) this.homeworkManager.initGUI();\r\n\r\n        this.$bottomDiv.find('.jo_tabs').children().first().trigger(\"click\");\r\n\r\n    }\r\n\r\n    showHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'visible');\r\n        jQuery('.jo_homeworkTabheading').trigger(\"mousedown\");\r\n\r\n    }\r\n\r\n    hideHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'hidden');\r\n        jQuery('.jo_tabheadings').children().first().trigger(\"mousedown\");\r\n\r\n    }\r\n\r\n\r\n}","\nexport class EmbeddedSlider {\n\n    $sliderDiv: JQuery<HTMLElement>;\n\n    /**\n     * A div contains $container and another div. Between the latter two \n     * a slider should get inserted.\n     * @param $container \n     * @param firstLast true, if $container is left/on top of other div; false if otherwise\n     * @param horVert true, if $container and other div are left/right of another; false if they are on top/below each other\n     * @param callback \n     * @param $otherDiv \n     */\n    constructor(private $container: JQuery<HTMLElement>, \n        private firstLast: boolean, private horVert: boolean,\n         private callback: (newLength: number) => void, private $otherDiv?: JQuery<HTMLElement>){\n            this.initSlider();\n    }\n\n    initSlider() {\n        let that = this;\n\n        if(this.$otherDiv == null){\n            this.$container.parent().children().each((index, element) => {\n                if(element != this.$container[0]){\n                    that.$otherDiv = jQuery(element);\n                }\n            });\n        }\n\n        this.$sliderDiv = jQuery('<div class=\"joe_slider\"></div>');\n\n        this.$sliderDiv.css({\n            width: this.horVert ? \"100%\" : \"4px\",\n            height: this.horVert ? \"4px\" : \"100%\",\n            cursor: this.horVert ? \"row-resize\" : \"col-resize\",\n        });\n\n        if(this.firstLast){\n            this.$sliderDiv.css({\n                top: \"0px\",\n                left: \"0px\"\n            });\n        } else {\n            if(this.horVert){\n                this.$sliderDiv.css({\n                    bottom: \"0px\",\n                    left: \"0px\"\n                });    \n            } else {\n                this.$sliderDiv.css({\n                    top: \"0px\",\n                    right: \"0px\"\n                });    \n            }\n        }\n\n        this.$container.append(this.$sliderDiv);\n\n        this.$sliderDiv.on(\"mousedown\", (md: JQuery.MouseDownEvent) => {\n\n            let x = md.clientX;\n            let y = md.clientY;\n\n            jQuery(document).on(\"mousemove.slider\", (mm: JQuery.MouseMoveEvent) => {\n                let dx = mm.clientX - x;\n                let dy = mm.clientY - y;\n\n                that.slide(dx, dy);\n                \n                x = mm.clientX;\n                y = mm.clientY;\n\n            });\n\n            jQuery(document).on(\"mouseup.slider\", () => {\n                jQuery(document).off(\"mousemove.slider\");\n                jQuery(document).off(\"mouseup.slider\");\n            });\n\n\n        });\n\n        setTimeout(() => {\n            that.slide(1, 1);\n        }, 600);\n\n    }\n\n    setColor(color: string){\n        this.$sliderDiv.css('background-color', color);\n    }\n\n    slide(dx: number, dy: number){\n        if(this.horVert){\n            let height = Number.parseInt(this.$container.css('height').replace('px', ''));\n            let otherHeight = Number.parseInt(this.$otherDiv.css('height').replace('px', ''));\n            let newHeight = this.firstLast ? height -= dy : height += dy;\n            let newOtherHeight = this.firstLast ? otherHeight += dy : otherHeight -= dy;\n            this.$container.css('height', newHeight + \"px\");\n            this.$otherDiv.css('height', newOtherHeight + \"px\");\n            this.callback(newHeight);\n        } else {\n            let width = Number.parseInt(this.$container.css('width').replace('px', ''));\n            let otherWidth = Number.parseInt(this.$otherDiv.css('width').replace('px', ''));\n            let newWidth = this.firstLast ? width -= dx : width += dx;\n            let newOtherWidth = this.firstLast ? otherWidth += dx : otherWidth -= dx;\n            this.$container.css('width', newWidth + \"px\");\n            this.$otherDiv.css('width', newOtherWidth + \"px\");\n            this.callback(newWidth);\n        }\n        this.$container.css('flex', \"0 1 auto\");\n\n    }\n\n\n}","import { Module, ModuleStore } from \"../compiler/parser/Module.js\";\nimport { MainEmbedded } from \"./MainEmbedded.js\";\nimport { openContextMenu, makeEditable } from \"../tools/HtmlTools.js\";\nimport { JOScript, ScriptType } from \"./EmbeddedStarter.js\";\n\ntype FileData = {\n    type: ScriptType,\n    module?: Module,\n    hint?: string,\n    $fileDiv: JQuery<HTMLElement>\n}\n\nexport class EmbeddedFileExplorer {\n\n    currentFile: FileData;\n    files: FileData[] = [];\n\n    constructor(private moduleStore: ModuleStore, private $fileListDiv: JQuery<HTMLElement>, private main: MainEmbedded) {\n\n        let that = this;\n\n        for (let module of moduleStore.getModules(false)) {\n\n            this.addModule(module);\n\n        }\n\n        let $filesDiv = $fileListDiv.parent();\n        let $addButton = jQuery('<div class=\"joe_addFileButton jo_button img_add-dark jo_active\" title=\"Datei hinzufügen\"></div>');\n        $filesDiv.append($addButton);\n\n        $addButton.on(\"click\", () => {\n\n            let module = this.main.addModule({ text: \"\", title: \"Neue Datei.java\", type: \"sql\" });\n            let fileData = this.addModule(module);\n\n            this.renameElement(fileData, () => {\n                // if there's no file yet and then one is added and subsequently renamed: select it!\n                if (that.currentFile != fileData) {\n                    that.selectFile(fileData);\n                }\n            });\n        });\n\n\n    }\n\n    removeAllFiles() {\n        this.files.forEach(f => this.removeFile(f));\n    }\n\n\n    addHint(script: JOScript): void {\n        let that = this;\n        let $fileDiv = jQuery('<div class=\"jo_file jo_hint\" ><div class=\"jo_fileimage\"></div><div class=\"jo_filename\" style=\"line-height: 22px\">' +\n            script.title + '</div><div class=\"jo_additionalButtons\"></div></div></div>');\n        this.$fileListDiv.append($fileDiv);\n\n        let fileData: FileData = {\n            module: null,\n            $fileDiv: $fileDiv,\n            type: \"hint\",\n            hint: script.text\n        };\n\n        this.files.push(fileData);\n\n        $fileDiv.on(\"click\", (event) => {\n            that.selectFile(fileData);\n        });\n\n    }\n\n\n    addModule(module: Module): FileData {\n        let that = this;\n        let $fileDiv = jQuery(`<div class=\"jo_file jo_java\" >\n        <div class=\"jo_fileimage\"></div>\n        <div class=\"jo_filename\" style=\"line-height: 22px\">${module.file.name}</div>\n        <div class=\"jo_additionalButtonStart\"></div>\n        <div class=\"jo_delete img_delete jo_button jo_active\" title=\"Datei löschen\"></div></div></div>`);\n        this.$fileListDiv.append($fileDiv);\n\n        let fileData: FileData = {\n            module: module,\n            $fileDiv: $fileDiv,\n            type: \"sql\"\n        };\n\n        this.files.push(fileData);\n\n        module.file.panelElement = {\n            name: module.file.name,\n            $htmlFirstLine: $fileDiv,\n            isFolder: false,\n            path: []\n        }\n\n        $fileDiv.find('.jo_delete').on(\"mousedown\", (e: JQuery.MouseDownEvent) => {\n            that.onDelete(fileData, e);\n        })\n\n        $fileDiv.find('.jo_delete').on(\"click\", (e) => { e.preventDefault(); e.stopPropagation() });\n\n        $fileDiv.on(\"click\", (event) => {\n            that.selectFile(fileData);\n        });\n\n        $fileDiv[0].addEventListener(\"contextmenu\", function (event) {\n            event.preventDefault();\n            openContextMenu([{\n                caption: \"Umbenennen\",\n                callback: () => {\n                    that.renameElement(fileData, () => { });\n                }\n            }], event.pageX, event.pageY);\n        }, false);\n\n        return fileData;\n\n    }\n\n    onDelete(fileData: FileData, ev: JQuery.MouseDownEvent) {\n        ev.preventDefault();\n        ev.stopPropagation();\n        let that = this;\n        openContextMenu([{\n            caption: \"Abbrechen\",\n            callback: () => {\n                // nothing to do.\n            }\n        }, {\n            caption: \"Ich bin mir sicher: löschen!\",\n            color: \"#ff6060\",\n            callback: () => {\n                that.removeFile(fileData);\n            }\n        }], ev.pageX + 2, ev.pageY + 2);\n\n    }\n\n    removeFile(fileData: FileData) {\n        fileData.$fileDiv.remove();\n        this.main.removeModule(fileData.module);\n        this.files = this.files.filter((fd) => fd != fileData);\n        if (this.currentFile == fileData) {\n            if (this.files.length > 0) {\n                this.selectFile(this.files[0]);\n            } else {\n                this.main.getMonacoEditor().setValue(\"Keine Datei vorhanden.\");\n                this.main.getMonacoEditor().updateOptions({ readOnly: true });\n            }\n        }\n\n        this.files.forEach((file) => {\n            if(file.module != null){                // Hints have module == null\n                file.module.file.saved = false;\n            }\n        });\n    }\n\n    removeModule(module: Module) {\n        for (let fileData of this.files) {\n            if (fileData.module == module) {\n                this.removeFile(fileData);\n            }\n        }\n    }\n\n    renameElement(fileData: FileData, callback: () => void) {\n        let that = this;\n        let $div = fileData.$fileDiv.find('.jo_filename');\n        let pointPos = fileData.module.file.name.indexOf('.');\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\n        makeEditable($div, $div, (newText: string) => {\n            fileData.module.file.name = newText;\n            $div.html(newText);\n            if (callback != null) callback();\n        }, selection);\n\n    }\n\n\n    setFirstFileActive() {\n        if (this.files.length > 0) {\n            this.selectFile(this.files[0]);\n        }\n    }\n\n    selectFile(fileData: FileData) {\n        if (fileData == null) return;\n        switch (fileData.type) {\n            case \"sql\":\n                this.main.$hintDiv.hide();\n                this.main.$monacoDiv.show();\n                this.main.setModuleActive(fileData.module);\n                this.main.getMonacoEditor().focus();\n                break;\n            case \"hint\":\n                this.main.$monacoDiv.hide();\n                this.main.$hintDiv.show();\n\n                let syntaxMap: { [code: string]: string } = {};\n                let code: string[] = [];\n\n                //@ts-ignore\n                let md1 = window.markdownit({\n                    highlight: function (str, lang) {\n                        code.push(str);\n                        return \"\";\n                    }\n                });\n\n                md1.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\n                    var token = tokens[idx];\n                    code.push(token.content);\n                    // pass token to default renderer.\n                    return \"\"; //md1.renderer.rules.code_block(tokens, idx, options, env, self);\n                };\n\n                md1.render(fileData.hint);\n\n                this.colorize(code, syntaxMap, () => {\n                    //@ts-ignore\n                    let md2 = window.markdownit({\n                        highlight: function (str, lang) {\n                            return syntaxMap[str];\n                        }\n                    });\n\n                    md2.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\n                        var token = tokens[idx];\n                        // pass token to default renderer.\n                        return syntaxMap[token.content].replace(\"<br/>\", \"\");\n                    };\n\n\n                    let html = md2.render(fileData.hint);\n                    this.main.$hintDiv.html(html);\n                });\n                this.$fileListDiv.find('.jo_file').removeClass('jo_active');\n                fileData.$fileDiv.addClass('jo_active');\n                break;\n        }\n    }\n\n    colorize(code: string[], codeMap: { [code: string]: string }, callback: () => void) {\n        let that = this;\n        if (code.length > 0) {\n            let uncoloredtext = code.pop();\n            monaco.editor.colorize(uncoloredtext, 'myJava', { tabSize: 3 }).then((text) => {\n                codeMap[uncoloredtext] = text;\n                that.colorize(code, codeMap, callback);\n            }\n            );\n        } else {\n            callback();\n        }\n\n    }\n\n\n    markFile(module: Module) {\n        this.$fileListDiv.find('.jo_file').removeClass('jo_active');\n\n        this.currentFile = this.files.find((fileData) => fileData.module == module);\n\n        if (this.currentFile != null) this.currentFile.$fileDiv.addClass('jo_active');\n\n    }\n\n\n\n}","export class EmbeddedIndexedDB {\n\n    private db: IDBDatabase;\n\n    constructor(private databaseIdentifier: string){\n\n    }\n\n    public open(successCallback: () => void) {\n\n        if (window.indexedDB) {\n\n            let request: IDBOpenDBRequest = window.indexedDB.open(this.databaseIdentifier, 1);\n\n            let that = this;\n\n            request.onerror = function (this: IDBRequest<IDBDatabase>, ev: Event) {\n                console.log(\"Couldn't open IndexedDB: \" + ev.type);\n            };\n\n            request.onsuccess = function (this: IDBRequest<IDBDatabase>, ev: Event) {\n                that.db = request.result;\n                that.db.onerror = function(event) {\n                    // Allgemeine Fehlerbehandlung, die für alle Anfragen an die Datenbank gilt. \n                    // @ts-ignore\n                    console.log(\"Datenbankfehler: \" + event.target.error.message);\n                  };\n                  successCallback();\n            };\n\n            request.onupgradeneeded = function(ev: Event){\n                // @ts-ignore\n                that.db = ev.target.result;\n                let objectStoreScripts = that.db.createObjectStore(\"scripts\", { keyPath: \"scriptId\", autoIncrement: false});\n                objectStoreScripts.transaction.oncomplete = function(event) {}\n\n                let objectStoreDatabases = that.db.createObjectStore(\"databases\", { keyPath: \"databaseId\", autoIncrement: false});\n                objectStoreScripts.transaction.oncomplete = function(event) {}\n\n            }\n\n        } else {\n            console.log(\"IndexedDB not available.\");\n        }\n\n    }\n\n\n    public writeScript(scriptId: string, script: string){\n\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\n\n        scriptObjectStore.put({\n            scriptId: scriptId,\n            script: script\n        });\n\n    }\n\n    public removeScript(scriptId: string){\n\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\n\n        scriptObjectStore.delete(scriptId);\n\n    }\n\n\n    public getScript(scriptId: string, callback: (script: string) => void){\n\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\n\n        let request = scriptObjectStore.get(scriptId);\n\n        request.onerror = (event) => {\n            callback(null);\n        }\n\n        request.onsuccess = (event) => {\n            if(request.result == null){\n                callback(null);\n            } else {\n                callback(request.result.script);\n            }\n        }\n\n    }\n\n    public writeDatabase(databaseID: string, database: string){\n\n        let databaseObjectStore = this.db.transaction(\"databases\", \"readwrite\").objectStore(\"databases\");\n\n        databaseObjectStore.put({\n            databaseId: databaseID,\n            database: database\n        });\n\n    }\n\n    public removeDatabase(databaseId: string){\n\n        let databaseObjectStore = this.db.transaction(\"databases\", \"readwrite\").objectStore(\"databases\");\n\n        databaseObjectStore.delete(databaseId);\n\n    }\n\n\n    public getDatabase(databaseId: string, callback: (database: string) => void){\n\n        let databaseObjectStore = this.db.transaction(\"databases\", \"readwrite\").objectStore(\"databases\");\n\n        let request = databaseObjectStore.get(databaseId);\n\n        request.onerror = (event) => {\n            callback(null);\n        }\n\n        request.onsuccess = (event) => {\n            if(request.result == null){\n                callback(null);\n            } else {\n                callback(request.result.database);\n            }\n        }\n\n    }\n\n\n}","import { SQLStatement } from \"../compiler/parser/Parser.js\";\r\nimport { WriteQueryListener } from \"../main/gui/ResultsetPresenter.js\";\r\nimport { DatabaseTool } from \"../tools/DatabaseTools.js\";\r\nimport { EmbeddedIndexedDB } from \"./EmbeddedIndexedDB.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\n\r\n\r\nexport class WriteQueryManager implements WriteQueryListener {\r\n\r\n    indexedDB: EmbeddedIndexedDB;\r\n    databaseTool: DatabaseTool;\r\n\r\n    statementsToExecute: string[] = [];\r\n\r\n    writtenStatements: string[] = [];\r\n\r\n    statementsToWrite: string[] = [];\r\n\r\n\r\n    constructor(private main: MainEmbedded, private databaseIdentifier: string) {\r\n\r\n    }\r\n\r\n    indexedDBReady(indexedDB: EmbeddedIndexedDB) {\r\n        this.indexedDB = indexedDB;\r\n        this.indexedDB.getDatabase(this.databaseIdentifier, (db: string) => {\r\n            if (db != null) {\r\n                this.writtenStatements = JSON.parse(db);\r\n                this.statementsToExecute = this.writtenStatements.slice();\r\n\r\n                this.main.historyViewer.clear();\r\n                this.main.historyViewer.appendStatements(this.statementsToExecute);\r\n\r\n                this.executeStatements();\r\n                this.writeStatementsIfNecessary();\r\n            }\r\n        })\r\n    }\r\n\r\n    reset() {\r\n        this.statementsToWrite = [];\r\n        this.writtenStatements = [];\r\n        this.statementsToExecute = [];\r\n        this.main.historyViewer.clear();\r\n        this.forceWriteStatements();\r\n    }\r\n\r\n    writeStatementsIfNecessary() {\r\n        if (this.indexedDB != null && this.statementsToWrite.length > 0) {\r\n            this.forceWriteStatements();\r\n        }\r\n    }\r\n\r\n    forceWriteStatements() {\r\n        this.writtenStatements = this.writtenStatements.concat(this.statementsToWrite);\r\n        this.statementsToWrite = [];\r\n        this.indexedDB.writeDatabase(this.databaseIdentifier, JSON.stringify(this.writtenStatements));\r\n    }\r\n\r\n    atLeastOneExecuted: boolean = false;\r\n    count: number;\r\n    executeStatements() {\r\n        if (this.databaseTool != null && this.statementsToExecute.length > 0) {\r\n            if (!this.atLeastOneExecuted) {\r\n                this.main.$databaseResetButton.fadeIn(200);\r\n                this.count = this.statementsToExecute.length;\r\n                this.main.waitOverlay.show(\"Schreibe lokale Datenbankänderungen ...\");\r\n            }\r\n            this.main.waitOverlay.setProgress(Math.round(100 * (1 - this.statementsToExecute.length / this.count)) + \" %\")\r\n            let statement = this.statementsToExecute.shift();\r\n            this.atLeastOneExecuted = true;\r\n            this.databaseTool.executeQuery(statement, () => { this.executeStatements() }, () => { this.executeStatements() });\r\n        } else {\r\n            if (this.atLeastOneExecuted) {\r\n                this.main.databaseExplorer.refresh();\r\n                this.atLeastOneExecuted = false;\r\n                this.main.waitOverlay.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    notify(statements: SQLStatement[]): void {\r\n        this.main.$databaseResetButton.fadeIn(200);\r\n        let statementsSql = statements.map(stmt => stmt.sqlCleaned == null ? stmt.sql : stmt.sqlCleaned);\r\n        this.statementsToWrite = this.statementsToWrite.concat(statementsSql);\r\n        this.main.historyViewer.appendStatements(statementsSql);\r\n        this.writeStatementsIfNecessary();\r\n    }\r\n\r\n    databaseReady(dbTool: DatabaseTool) {\r\n        this.databaseTool = dbTool;\r\n        this.executeStatements();\r\n    }\r\n\r\n    rollback() {\r\n        this.writeStatementsIfNecessary();\r\n        this.writtenStatements.pop();\r\n        this.forceWriteStatements();\r\n    }\r\n\r\n\r\n\r\n}","import { MainBase } from \"../main/MainBase.js\";\r\nimport { DatabaseTool } from \"./DatabaseTools.js\";\r\nimport { MySqlImporter } from \"./MySqlImporter.js\";\r\n\r\nexport type LoadableDatabase = {\r\n    binDump?: Uint8Array,\r\n    statements?: string[]\r\n}\r\n\r\nexport class DatabaseFetcher {\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    public async load(url: string): Promise<LoadableDatabase> {\r\n        let urlWithoutProtocol = url.replace(\"https://\", \"\")\r\n            .replace(\"http://\", \"\").toLocaleLowerCase();\r\n\r\n        let urlLowerCase = urlWithoutProtocol.toLocaleLowerCase();\r\n\r\n        let templateDump: Uint8Array = await this.fetchTemplateFromCache(urlWithoutProtocol);\r\n        if (templateDump != null) {\r\n            if (DatabaseTool.getDumpType(templateDump) == \"binaryCompressed\") {\r\n                // @ts-ignore\r\n                templateDump = pako.inflate(templateDump);\r\n            }\r\n            return { binDump: templateDump }\r\n        }\r\n\r\n        let db: LoadableDatabase;\r\n        if (urlLowerCase.endsWith(\".sqlite\")) {\r\n            db = await this.loadSqLiteDump(url, urlWithoutProtocol);\r\n        } else if (urlLowerCase.endsWith(\".zip\") || urlLowerCase.endsWith(\".sql\")) {\r\n            db = await this.loadMySql(url, urlWithoutProtocol);\r\n        }\r\n\r\n        this.saveDatabaseToCache(urlWithoutProtocol, db.binDump);\r\n\r\n        return db;\r\n\r\n    }\r\n\r\n    loadMySql(url: string, urlWithoutProtocol: string): LoadableDatabase | PromiseLike<LoadableDatabase> {\r\n        let mySqlImporter = new MySqlImporter(this.main);\r\n        return mySqlImporter.loadFromUrl(url);\r\n    }\r\n\r\n    async loadSqLiteDump(url: string, urlWithoutProtocol: string): Promise<LoadableDatabase> {\r\n\r\n        return new Promise((resolve, reject) => {\r\n            jQuery.ajax({\r\n                type: 'GET',\r\n                async: true,\r\n                url: url,\r\n                xhrFields: { responseType: 'arraybuffer' },\r\n                success: function (response: any) {\r\n                    let db = new Uint8Array(response);\r\n                    // @ts-ignore\r\n                    if (DatabaseTool.getDumpType(db) == \"binaryCompressed\") db = pako.inflate(db);\r\n                    resolve({ binDump: db });\r\n                },\r\n                error: function (jqXHR, message) {\r\n                    reject(message);\r\n                }\r\n            });\r\n\r\n        })\r\n\r\n    }\r\n\r\n    cutSqlToStatements(sql: string): string[] {\r\n        sql = sql.replace(/\\r\\n/g, \"\\n\");\r\n\r\n        let statements: string[] = [];\r\n        if (sql.indexOf(\"~@~\") >= 0) {\r\n            statements = sql.split(\"~@~\");\r\n        } else {\r\n            statements = sql.split(\";\\n\");\r\n        }\r\n        return statements;\r\n    }\r\n\r\n\r\n    async fetchTemplateFromCache(databaseIdentifier: string): Promise<Uint8Array> {\r\n        if (databaseIdentifier == null) { return null; }\r\n\r\n        if (!this.cacheAvailable()) return (null);\r\n\r\n        let cache = await caches.open('my-cache');\r\n\r\n        let value = await cache.match(databaseIdentifier);\r\n\r\n        if(value == null) return null;\r\n\r\n        let buffer = await value.arrayBuffer();\r\n\r\n        return new Uint8Array(buffer);\r\n\r\n    }\r\n\r\n    async saveDatabaseToCache(databaseIdentifier: string, templateDump: Uint8Array | string) {\r\n        if (!this.cacheAvailable()) return;\r\n\r\n        let cache = await caches.open('my-cache');\r\n\r\n        cache.put(databaseIdentifier, new Response(templateDump));\r\n    }\r\n\r\n    cacheAvailable(): boolean {\r\n        return 'caches' in self;\r\n    }\r\n\r\n}","import { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\nimport { Module, File } from \"../compiler/parser/Module.js\";\nimport { ActionManager } from \"../main/gui/ActionManager.js\";\nimport { BottomDiv } from \"../main/gui/BottomDiv.js\";\nimport { Editor } from \"../main/gui/Editor.js\";\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\nimport { RightDiv } from \"../main/gui/RightDiv.js\";\nimport { MainBase } from \"../main/MainBase.js\";\nimport { Workspace } from \"../workspace/Workspace.js\";\nimport { JOScript } from \"./EmbeddedStarter.js\";\nimport { makeDiv, makeTabs, openContextMenu } from \"../tools/HtmlTools.js\";\nimport { EmbeddedSlider } from \"./EmbeddedSlider.js\";\nimport { EmbeddedFileExplorer } from \"./EmbeddedFileExplorer.js\";\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\nimport { EmbeddedIndexedDB } from \"./EmbeddedIndexedDB.js\";\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\nimport { DatabaseTool } from \"../tools/DatabaseTools.js\";\nimport { DatabaseExplorer } from \"../main/gui/DatabaseExplorer.js\";\nimport { ResultsetPresenter } from \"../main/gui/ResultsetPresenter.js\";\nimport { WaitOverlay } from \"../main/gui/WaitOverlay.js\";\nimport { WriteQueryManager } from \"./WriteQueryManager.js\";\nimport { DatabaseFetcher } from \"../tools/DatabaseLoader.js\";\nimport { DatabaseImportExport } from \"../tools/DatabaseImportExport.js\";\nimport { HistoryViewer } from \"../main/gui/HistoryViewer.js\";\nimport { WDatabase } from \"../workspace/WDatabase.js\";\n\ntype JavaOnlineConfig = {\n    withFileList?: boolean,\n    withOutput?: boolean,\n    withErrorList?: boolean,\n    withBottomPanel?: boolean,\n    id?: string,\n    databaseURL?: string\n}\n\nexport class MainEmbedded implements MainBase {\n    isEmbedded(): boolean { return true; }\n\n    getCompiler(): Compiler {\n        return this.compiler;\n    }\n    getCurrentWorkspace(): Workspace {\n        return this.currentWorkspace;\n    }\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\n        return this.editor.editor;\n    }\n\n    getRightDiv(): RightDiv {\n        return this.rightDiv;\n    }\n\n    getBottomDiv(): BottomDiv {\n        return this.bottomDiv;\n    }\n\n    getActionManager(): ActionManager {\n        return this.actionManager;\n    }\n\n    getCurrentlyEditedModule(): Module {\n        if (this.config.withFileList) {\n            return this.fileExplorer.currentFile?.module;\n        } else {\n            return this.currentWorkspace.moduleStore.getFirstModule();\n        }\n    }\n\n    getDatabaseTool(): DatabaseTool {\n        return this.databaseTool;\n    }\n\n    getDatabaseExplorer(): DatabaseExplorer {\n        return this.databaseExplorer;\n    }\n\n    getResultsetPresenter(): ResultsetPresenter {\n        return this.resultsetPresenter;\n    }\n\n    getWaitOverlay(): WaitOverlay {\n        return this.waitOverlay;\n    }\n\n    getHistoryViewer(): HistoryViewer {\n        return this.historyViewer;\n    }\n\n    config: JavaOnlineConfig;\n\n    editor: Editor;\n    programPointerDecoration: string[] = [];\n    programPointerModule: Module;\n\n    currentWorkspace: Workspace;\n    actionManager: ActionManager;\n\n    compiler: Compiler;\n\n    $dbTreeDiv: JQuery<HTMLElement>;\n\n    $debuggerDiv: JQuery<HTMLElement>;\n\n    bottomDiv: BottomDiv;\n    $filesListDiv: JQuery<HTMLElement>;\n\n    $hintDiv: JQuery<HTMLElement>;\n    $monacoDiv: JQuery<HTMLElement>;\n    $codeResetButton: JQuery<HTMLElement>;\n    $databaseResetButton: JQuery<HTMLElement>;\n\n    programIsExecutable = false;\n    version: number = 0;\n\n    timerHandle: any;\n\n    rightDiv: RightDiv;\n    $rightDivInner: JQuery<HTMLElement>;\n\n    fileExplorer: EmbeddedFileExplorer;\n\n    debounceDiagramDrawing: any;\n\n    indexedDB: EmbeddedIndexedDB;\n\n    compileRunsAfterCodeReset: number = 0;\n\n    semicolonAngel: SemicolonAngel;\n\n    databaseTool: DatabaseTool;\n\n    databaseExplorer: DatabaseExplorer;\n\n    waitOverlay: WaitOverlay;\n\n    resultsetPresenter: ResultsetPresenter;\n\n    writeQueryManager: WriteQueryManager;\n\n    historyViewer: HistoryViewer;\n\n    initialTemplateDump: Uint8Array;\n    initialStatements: string[];\n\n    constructor($div: JQuery<HTMLElement>, private scriptList: JOScript[]) {\n\n        this.readConfig($div);\n\n        this.writeQueryManager = new WriteQueryManager(this, (this.config.databaseURL == null ? \"Empty database\" : this.config.databaseURL) + this.config.id);\n\n        this.initGUI($div);\n\n\n        this.databaseExplorer = new DatabaseExplorer(this, this.$dbTreeDiv);\n        this.databaseTool = new DatabaseTool(this);\n        if (this.config.databaseURL != null) {\n            new DatabaseFetcher(this).load(this.config.databaseURL).then((loadableDb) => {\n                this.initialTemplateDump = loadableDb.binDump;\n                this.initialStatements = loadableDb.statements == null ? [] : loadableDb.statements;\n                this.initDatabase();\n            }).catch((error: string)=>{\n                alert('Fehler beim Landen der Datenbank: ' + error)\n            })\n        } else {\n            this.initDatabase();\n        }\n\n        this.semicolonAngel = new SemicolonAngel(this);\n\n    }\n\n    initDatabase(){\n        this.resetDatabase(() => {\n            this.initScripts();\n\n            this.indexedDB = new EmbeddedIndexedDB(\"SQL-IDE\");\n            this.indexedDB.open(() => {\n\n                if (this.config.id != null) {\n                    this.writeQueryManager.indexedDBReady(this.indexedDB);\n                    this.readScripts();\n                }\n\n            });\n\n        });\n    }\n\n    resetDatabase(callback: () => void) {\n        this.databaseTool.initializeWorker(this.initialTemplateDump, this.initialStatements, () => { }, () => {\n            this.writeQueryManager.databaseReady(this.databaseTool);\n            this.databaseExplorer.refreshAfterRetrievingDBStructure();\n            callback();\n        })\n    }\n\n    initScripts() {\n\n        this.fileExplorer?.removeAllFiles();\n\n        this.initWorkspace(this.scriptList);\n\n        if (this.config.withFileList) {\n            this.fileExplorer = new EmbeddedFileExplorer(this.currentWorkspace.moduleStore, this.$filesListDiv, this);\n            this.fileExplorer.setFirstFileActive();\n            this.scriptList.filter((script) => script.type == \"hint\").forEach((script) => this.fileExplorer.addHint(script));\n        } else {\n            this.setModuleActive(this.currentWorkspace.moduleStore.getFirstModule());\n        }\n\n    }\n\n\n    readConfig($div: JQuery<HTMLElement>) {\n        let configJson: string | object = $div.data(\"sql-online\");\n        if (configJson != null && typeof configJson == \"string\") {\n            this.config = JSON.parse(configJson.split(\"'\").join('\"'));\n        } else {\n            this.config = {}\n        }\n\n        if (this.config.withFileList == null) this.config.withFileList = false;\n        if (this.config.withOutput == null) this.config.withOutput = true;\n        if (this.config.withErrorList == null) this.config.withErrorList = true;\n        if (this.config.withBottomPanel == null) this.config.withBottomPanel = true;\n\n        if (!(this.config.withOutput || this.config.withFileList || this.config.withErrorList)) {\n            this.config.withBottomPanel = false;\n        }\n\n        if (!this.config.withBottomPanel) {\n            this.config.withFileList = false;\n            this.config.withOutput = false;\n            this.config.withErrorList = false;\n        }\n\n        if(this.config.databaseURL != null){\n            ['http:', 'https:'].forEach(protocol => {\n                if(this.config.databaseURL.startsWith(protocol) && !this.config.databaseURL.startsWith(protocol + \"://\")){\n                    this.config.databaseURL = this.config.databaseURL.replace(protocol, protocol + \"//\");\n                }\n            })\n        }\n\n    }\n\n    setModuleActive(module: Module) {\n\n        if (this.config.withFileList && this.fileExplorer.currentFile != null) {\n            this.fileExplorer.currentFile.module.editorState = this.getMonacoEditor().saveViewState();\n        }\n\n        if (this.config.withFileList) {\n            this.fileExplorer.markFile(module);\n        }\n\n        /**\n         * WICHTIG: Die Reihenfolge der beiden Operationen ist extrem wichtig.\n         * Falls das Model im readonly-Zustand gesetzt wird, funktioniert <Strg + .> \n         * nicht und die Lightbulbs werden nicht angezeigt, selbst dann, wenn\n         * später readonly = false gesetzt wird.\n         */\n        this.getMonacoEditor().updateOptions({\n            readOnly: false,\n            lineNumbersMinChars: 4\n        });\n        this.editor.editor.setModel(module.model);\n\n\n        if (module.editorState != null) {\n            this.getMonacoEditor().restoreViewState(module.editorState);\n        }\n\n    }\n\n\n\n    readScripts() {\n\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\n\n        let that = this;\n\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\n            if (scriptListJSon == null) {\n                setInterval(() => {\n                    that.saveScripts();\n                }, 1000);\n            } else {\n\n                let scriptList: string[] = JSON.parse(scriptListJSon);\n                let countDown = scriptList.length;\n\n                for (let module of modules) {\n                    that.fileExplorer?.removeModule(module);\n                    that.removeModule(module);\n                }\n\n                for (let name of scriptList) {\n\n                    let scriptId = this.config.id + name;\n                    this.indexedDB.getScript(scriptId, (script) => {\n                        if (script != null) {\n\n                            let module = that.addModule({\n                                title: name,\n                                text: script,\n                                type: \"sql\"\n                            });\n\n                            that.fileExplorer?.addModule(module);\n                            that.$codeResetButton.fadeIn(1000);\n\n                            // console.log(\"Retrieving script \" + scriptId);\n                        }\n                        countDown--;\n                        if (countDown == 0) {\n                            setInterval(() => {\n                                that.saveScripts();\n                            }, 1000);\n                            that.fileExplorer?.setFirstFileActive();\n                            if (that.fileExplorer == null) {\n                                let modules = that.currentWorkspace.moduleStore.getModules(false);\n                                if (modules.length > 0) that.setModuleActive(modules[0]);\n                            }\n                        }\n                    })\n\n                }\n\n            }\n\n\n        });\n\n\n    }\n\n    saveScripts() {\n\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\n\n        let scriptList: string[] = [];\n        let oneNotSaved: boolean = false;\n\n        modules.forEach(m => oneNotSaved = oneNotSaved || !m.file.saved);\n\n        if (oneNotSaved) {\n\n            for (let module of modules) {\n                scriptList.push(module.file.name);\n                let scriptId = this.config.id + module.file.name;\n                this.indexedDB.writeScript(scriptId, module.getProgramTextFromMonacoModel());\n                module.file.saved = true;\n                // console.log(\"Saving script \" + scriptId);\n            }\n\n            this.indexedDB.writeScript(this.config.id, JSON.stringify(scriptList));\n        }\n\n    }\n\n    deleteScriptsInDB() {\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\n            if (scriptListJSon == null) {\n                return;\n            } else {\n\n                let scriptList: string[] = JSON.parse(scriptListJSon);\n\n                for (let name of scriptList) {\n\n                    let scriptId = this.config.id + name;\n                    this.indexedDB.removeScript(scriptId);\n                }\n\n                this.indexedDB.removeScript(this.config.id);\n\n            }\n\n\n        });\n\n    }\n\n    initWorkspace(scriptList: JOScript[]) {\n        this.currentWorkspace = new Workspace(\"Embedded-Workspace\", this, 0);\n\n        let i = 0;\n        for (let script of scriptList) {\n            if (script.type == \"sql\") {\n                this.addModule(script);\n            }\n\n        }\n\n    }\n\n    addModule(script: JOScript): Module {\n        let module: Module = Module.restoreFromData({\n            id: this.currentWorkspace.moduleStore.getModules(true).length,\n            name: script.title,\n            text: script.text,\n            text_before_revision: null,\n            submitted_date: null,\n            student_edited_after_revision: false,\n            version: 1,\n            workspace_id: 0,\n            forceUpdate: false,\n            file_type: 11\n        }, this);\n\n        this.currentWorkspace.moduleStore.putModule(module);\n\n        let that = this;\n\n        module.model.onDidChangeContent(() => {\n            that.considerShowingCodeResetButton();\n        });\n\n        return module;\n    }\n\n    removeModule(module: Module) {\n        this.currentWorkspace.moduleStore.removeModule(module);\n    }\n\n\n    initGUI($div: JQuery<HTMLElement>) {\n\n        // let $leftDiv = jQuery('<div class=\"joe_leftDiv\"></div>');\n\n        $div.css({\n            \"background-image\": \"none\",\n            \"background-size\": \"100%\"\n        })\n\n        let $centerDiv = jQuery('<div class=\"joe_centerDiv\"></div>');\n\n        // let $topDiv = jQuery('<div class=\"joe_topDiv\"></div>');\n        // $div.append($topDiv);\n        $div.append($centerDiv);\n\n        let $waitDiv = this.makeWaitDiv();\n        $div.append($waitDiv);\n        this.waitOverlay = new WaitOverlay($waitDiv);\n\n        let $codeResetModalWindow = this.makeCodeResetModalWindow($div);\n        let $databaseResetModalWindow = this.makeDatabaseResetModalWindow($div);\n\n        let $rightDiv = this.makeRightDiv();\n\n        let $editorDiv = jQuery('<div class=\"joe_editorDiv\"></div>');\n        this.$monacoDiv = jQuery('<div class=\"joe_monacoDiv\"></div>');\n        this.$hintDiv = jQuery('<div class=\"joe_hintDiv jo_scrollable\"></div>');\n        this.$codeResetButton = jQuery('<div class=\"joe_codeResetButton jo_button jo_active\" title=\"Code auf Ausgangszustand zurücksetzen\">Code Reset</div>');\n        this.$databaseResetButton = jQuery('<div class=\"joe_databaseResetButton jo_button jo_active\" title=\"Datenbank auf Ausgangszustand zurücksetzen\">Datenbank Reset</div>');\n\n        $editorDiv.append(this.$monacoDiv, this.$hintDiv, this.$databaseResetButton);\n        this.$monacoDiv.append(this.$codeResetButton);\n\n        let $bracketErrorDiv = this.makeBracketErrorDiv();\n        $editorDiv.append($bracketErrorDiv);\n\n        // $topDiv.append($editorDiv);\n\n        this.$codeResetButton.hide();\n\n        this.$codeResetButton.on(\"click\", () => { $codeResetModalWindow.show(); })\n\n        this.$databaseResetButton.hide();\n\n        this.$databaseResetButton.on(\"click\", () => { $databaseResetModalWindow.show(); })\n\n        this.$hintDiv.hide();\n\n        let $controlsDiv = jQuery('<div class=\"joe_controlsDiv\"></div>');\n        let $bottomDivInner = jQuery('<div class=\"joe_bottomDivInner\"></div>');\n\n\n        let $bottomDiv = jQuery('<div class=\"joe_bottomDiv\"></div>');\n        this.makeBottomDiv($bottomDivInner, $controlsDiv);\n        $bottomDiv.append($bottomDivInner);\n        if (this.config.withFileList) {\n            let $filesDiv = this.makeFilesDiv();\n            $bottomDiv.prepend($filesDiv);\n            new EmbeddedSlider($filesDiv, false, false, () => { });\n        }\n        makeTabs($bottomDivInner);\n        $div.append($bottomDiv);\n\n        $div.addClass('joe_javaOnlineDiv');\n\n        this.editor = new Editor(this, false, true);\n        this.editor.initGUI(this.$monacoDiv);\n        this.$monacoDiv.find('.monaco-editor').css('z-index', '10');\n\n        if ($div.attr('tabindex') == null) $div.attr('tabindex', \"0\");\n        this.actionManager = new ActionManager($div, this);\n        this.actionManager.init();\n\n        this.bottomDiv = new BottomDiv(this, $bottomDivInner, $div);\n        this.bottomDiv.initGUI();\n\n        this.rightDiv = new RightDiv(this, this.$rightDivInner);\n        this.rightDiv.initGUI();\n\n        $centerDiv.append($editorDiv, $bottomDiv)\n        $div.append($rightDiv);\n\n        let $rightSideContainer = jQuery('<div class=\"jo_rightdiv-rightside-container\"></div>');\n        let $infoButton = jQuery('<div class=\"jo_button jo_active img_ellipsis-dark\" style=\"margin-right: 10px\"></div>');\n\n        $controlsDiv.append($infoButton);\n\n        this.$rightDivInner.append($rightSideContainer);\n\n        new EmbeddedSlider($rightDiv, true, false, () => {\n            this.editor.editor.layout();\n        }, $centerDiv);\n\n        new EmbeddedSlider($bottomDiv, true, true, () => { this.editor.editor.layout(); });\n\n        $infoButton.on('mouseup', (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            openContextMenu([{\n                caption: \"Über die Online-IDE ...\",\n                link: \"https://learnj.de\",\n                callback: () => {\n                    // nothing to do.\n                }\n            }], ev.pageX + 2, ev.pageY + 2);\n        });\n\n\n        let $buttonOpen = jQuery('<label type=\"file\" class=\"img_open-file jo_button jo_active\"' +\n            'style=\"margin-right: 8px;\" title=\"Datenbank-Dump aus Datei laden\"><input type=\"file\" style=\"display:none\"></label>');\n\n        let that = this;\n\n        let $openInputButton = $buttonOpen.find('input');\n\n        $openInputButton.on('change', (event) => {\n            //@ts-ignore\n            var files: FileList = event.originalEvent.target.files;\n            that.loadDatabaseFromFile(files[0]).then(() => {\n                $openInputButton.val(null)\n            })\n        })\n\n        let $buttonSave = jQuery('<div class=\"img_save-dark jo_button jo_active\"' +\n            'style=\"margin-right: 8px;\" title=\"Datenbank-Dump in Datei speichern\"></div>');\n\n\n        $buttonSave.on('click', () => { that.saveDatabaseToFile() });\n\n        $controlsDiv.append($buttonOpen, $buttonSave);\n\n        this.resultsetPresenter = new ResultsetPresenter(this, $bottomDivInner);\n        this.resultsetPresenter.addWriteQueryListener(this.writeQueryManager);\n\n\n        new ProgramControlButtons(this, $controlsDiv);\n\n        this.historyViewer = new HistoryViewer(this, $div.find('.jo_historyTab'));\n\n        setTimeout(() => {\n            this.editor.editor.layout();\n            this.compiler = new Compiler(this);\n            this.startTimer();\n        }, 200);\n\n\n    }\n\n    saveDatabaseToFile() {\n        new DatabaseImportExport().saveToFile(this.databaseTool);\n    }\n\n    async loadDatabaseFromFile(file: globalThis.File) {\n        let dbImportExport = new DatabaseImportExport();\n        let db = await dbImportExport.loadFromFile(file, this);\n        if (db == null) {\n            alert('Es ist ein Fehler beim Import aufgetreten.');\n            return;\n        } else {\n            this.databaseTool.initializeWorker(db.binDump, [], (errors) => {\n                if (errors.length > 0) {\n                    alert('Es sind Fehler beim Import aufgetreten. Ausführliche Fehlermeldungen sehen Sie in der Konsole (F12).')\n                    console.log(errors)\n                }\n            }, () => {\n                this.databaseExplorer.refreshAfterRetrievingDBStructure()\n            })\n        }\n        return;\n    }\n\n    makeWaitDiv(): JQuery<HTMLElement> {\n\n        //@ts-ignore\n        let url = (window.javaOnlineDir == null ? '' : window.javaOnlineDir) + 'assets/projectexplorer/svg-loaders/grid.svg';\n\n        let waitHtml = `\n        <div class=\"bitteWarten\">\n        <div style=\"margin-bottom: 30px\">\n            <div class=\"bitteWartenText\" style=\"font-size: 20px\"></div>\n        </div>\n        <div>\n            <img src=\"${url}\" alt=\"\" style=\"height: 40px\">\n        </div>\n        <div class=\"bitteWartenProgress\" style=\"font-size: 20px\"></div>\n        </div>\n        `;\n        return jQuery(waitHtml);\n    }\n\n    makeBracketErrorDiv(): JQuery<HTMLElement> {\n        return jQuery(`\n        <div class=\"jo_parenthesis_warning\" title=\"Klammerwarnung!\" style=\"bottom: 55px\">\n        <div class=\"jo_warning_light\"></div>\n        <div class=\"jo_pw_heading\">{ }</div>\n        <div title=\"Letzten Schritt rückgängig\" \n            class=\"jo_pw_undo img_undo jo_button jo_active\"></div>\n        </div>\n        `);\n    }\n\n    makeCodeResetModalWindow($parent: JQuery<HTMLElement>): JQuery<HTMLElement> {\n        let $window = jQuery(\n            `\n            <div class=\"joe_codeResetModal\">\n            <div style=\"flex: 1\"></div>\n            <div style=\"display: flex\">\n                <div style=\"flex: 1\"></div>\n                <div style=\"padding-left: 30px;\">\n                <div style=\"color: red; margin-bottom: 10px; font-weight: bold\">Warnung:</div>\n                <div>Soll der Code wirklich auf den Ausgangszustand zurückgesetzt werden?</div>\n                <div>Alle von Dir gemachten Änderungen werden damit verworfen.</div>\n                </div>\n                <div style=\"flex: 1\"></div>\n            </div>\n            <div class=\"joe_codeResetModalButtons\">\n            <div class=\"joe_codeResetModalCancel jo_button jo_active\">Abbrechen</div>\n            <div class=\"joe_codeResetModalOK jo_button jo_active\">OK</div>\n            </div>\n            <div style=\"flex: 2\"></div>\n            </div>\n        `\n        );\n\n        $window.hide();\n\n        $parent.append($window);\n\n        $parent.find(\".joe_codeResetModalCancel\").on(\"click\", () => {\n            $window.hide();\n        });\n\n        $parent.find(\".joe_codeResetModalOK\").on(\"click\", () => {\n\n            this.initScripts();\n            this.deleteScriptsInDB();\n\n            $window.hide();\n            this.$codeResetButton.hide();\n            this.compileRunsAfterCodeReset = 1;\n\n        });\n\n        return $window;\n    }\n\n    makeDatabaseResetModalWindow($parent: JQuery<HTMLElement>): JQuery<HTMLElement> {\n        let $window = jQuery(\n            `\n            <div class=\"joe_databaseResetModal\">\n            <div style=\"flex: 1\"></div>\n            <div style=\"display: flex\">\n                <div style=\"flex: 1\"></div>\n                <div style=\"padding-left: 30px;\">\n                <div style=\"color: red; margin-bottom: 10px; font-weight: bold\">Warnung:</div>\n                <div>Soll die Datenbank wirklich auf den Ausgangszustand zurückgesetzt werden?</div>\n                <div>Alle bisher ausgeführten Anweisungen (siehe Tab Write History) werden dann rückgängig gemacht.</div>\n                </div>\n                <div style=\"flex: 1\"></div>\n            </div>\n            <div class=\"joe_databaseResetModalButtons\">\n            <div class=\"joe_databaseResetModalCancel jo_button jo_active\">Abbrechen</div>\n            <div class=\"joe_databaseResetModalOK jo_button jo_active\">OK</div>\n            </div>\n            <div style=\"flex: 2\"></div>\n            </div>\n        `\n        );\n\n        $window.hide();\n\n        $parent.append($window);\n\n        $parent.find(\".joe_databaseResetModalCancel\").on(\"click\", () => {\n            $window.hide();\n        });\n\n        $parent.find(\".joe_databaseResetModalOK\").on(\"click\", () => {\n\n            $window.hide();\n            this.resetDatabase(() => {\n                this.writeQueryManager.reset();\n            });\n\n            this.$databaseResetButton.hide();\n            this.compileRunsAfterCodeReset = 1;\n\n        });\n\n        return $window;\n    }\n\n    makeFilesDiv(): JQuery<HTMLElement> {\n\n\n        let $filesDiv = jQuery('<div class=\"joe_bottomDivFiles jo_scrollable\"></div>');\n\n        let $filesHeader = jQuery('<div class=\"joe_filesHeader jo_tabheading jo_active\"  style=\"line-height: 24px\">Dateien</div>');\n\n        this.$filesListDiv = jQuery('<div class=\"joe_filesList jo_scrollable\"></div>');\n\n        $filesDiv.append($filesHeader, this.$filesListDiv);\n\n        return $filesDiv;\n    }\n\n    startTimer() {\n        if (this.timerHandle != null) {\n            clearInterval(this.timerHandle);\n        }\n\n        let that = this;\n        this.timerHandle = setInterval(() => {\n\n            that.compileIfDirty();\n\n        }, 500);\n\n\n    }\n\n    compileIfDirty() {\n\n        if (this.currentWorkspace == null) return;\n\n        if (this.currentWorkspace.moduleStore.isDirty() &&\n            this.compiler.compilerStatus != CompilerStatus.compiling && this.getDatabaseTool().databaseStructure != null) {\n            try {\n\n                this.compiler.compile(this.currentWorkspace.moduleStore);\n\n                let errors = this.\n                    bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\n\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\n\n                this.version++;\n\n            } catch (e) {\n                console.error(e);\n                this.compiler.compilerStatus = CompilerStatus.error;\n            }\n\n        }\n\n    }\n    considerShowingCodeResetButton() {\n        this.compileRunsAfterCodeReset++;\n        if (this.compileRunsAfterCodeReset == 3) {\n            this.$codeResetButton.fadeIn(1000);\n        }\n    }\n\n    makeBottomDiv($bottomDiv: JQuery<HTMLElement>, $buttonDiv: JQuery<HTMLElement>) {\n\n        let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\n        $tabheadings.css('position', 'relative');\n        let $thLeftSide = jQuery('<div class=\"joe_tabheading-right jo_noHeading joe_controlsTabheading\"></div>');\n\n        $thLeftSide.append($buttonDiv);\n        $tabheadings.append($thLeftSide);\n\n        if (this.config.withErrorList) {\n            let $thErrors = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_errorsTab\" style=\"line-height: 24px\">Fehler</div>');\n            $tabheadings.append($thErrors);\n        }\n\n        if (this.config.withOutput) {\n            let $thPCode = jQuery('<div class=\"jo_tabheading jo_resultTabheading\" data-target=\"jo_resultTab\" style=\"line-height: 24px\">Ausgabe</div>');\n            $tabheadings.append($thPCode);\n        }\n\n        // let $thRuntimeError = jQuery('<div class=\"jo_tabheading jo_runtimeerrorsTabheading\" data-target=\"jo_runtimeerrorsTab\" style=\"line-height: 24px\">DB-Fehler</div>');\n        // $tabheadings.append($thRuntimeError);\n\n        let $thHistory = jQuery('<div class=\"jo_tabheading jo_historyTabheading\" data-target=\"jo_historyTab\" style=\"line-height: 24px\">History</div>');\n        $tabheadings.append($thHistory);\n\n        let $thRightSide = jQuery('<div class=\"joe_tabheading-right jo_noHeading joe_paginationHeading\"><div class=\"jo_pagination\"></div></div>');\n        $tabheadings.append($thRightSide);\n\n        $bottomDiv.append($tabheadings);\n\n        let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\n\n        if (this.config.withErrorList) {\n            let $tabError = jQuery('<div class=\"jo_active jo_scrollable jo_errorsTab\"></div>');\n            $tabs.append($tabError);\n        }\n\n        if (this.config.withOutput) {\n            let $tabPCode = jQuery(`<div class=\"jo_editorFontSize jo_resultTab\">\n            <div class=\"jo_result-inner\">\n                <div class=\"jo_result-header\"></div>\n                <div class=\"jo_scrollable jo_result-body\"></div>\n            </div>\n            </div>\n    `);\n            $tabs.append($tabPCode);\n        }\n\n        // let $tabRtErrors = jQuery('<div class=\"jo_scrollable jo_runtimeerrorsTab\"></div>');\n        // $tabs.append($tabRtErrors);\n\n        let $tabHistory = jQuery('<div class=\"jo_scrollable jo_historyTab\"></div>');\n        $tabs.append($tabHistory);\n\n\n        $bottomDiv.append($tabs);\n\n    }\n\n    makeRightDiv(): JQuery<HTMLElement> {\n\n        let $rightDiv = jQuery('<div class=\"joe_rightDiv\"></div>');\n        this.$rightDivInner = jQuery('<div class=\"joe_rightDivInner\"></div>');\n        $rightDiv.append(this.$rightDivInner);\n\n\n        let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\n        $tabheadings.css('position', 'relative');\n        let $thRun = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_db_tree\" style=\"line-height: 24px\">DB (Baum)</div>');\n        // let $thVariables = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_db_list\" style=\"line-height: 24px\">DB (Liste)</div>');\n        $tabheadings.append($thRun, //$thVariables\n        );\n        this.$rightDivInner.append($tabheadings);\n\n        let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\n        // let $vd = jQuery('<div class=\"jo_tab jo_scrollable jo_editorFontSize jo_db_list\">DB-Liste</div>');\n\n        this.$dbTreeDiv = jQuery(`<div class=\"jo_tab jo_scrollable jo_editorFontSize jo_active jo_db_tree\">DB-Baum</div>`);\n\n        $tabs.append(this.$dbTreeDiv //, $vd\n        );\n        this.$rightDivInner.append($tabs);\n\n        makeTabs($rightDiv);\n\n        return $rightDiv;\n    }\n\n    getSemicolonAngel(): SemicolonAngel {\n        return this.semicolonAngel;\n    }\n\n}\n\n\n","import { Formatter } from \"../main/gui/Formatter.js\";\nimport { ThemeManager } from \"../main/gui/ThemeManager.js\";\nimport { MainEmbedded } from \"./MainEmbedded.js\";\n\n// declare const require: any;\n\nexport type ScriptType = \"sql\" | \"hint\";\n\nexport type JOScript = {\n    type: ScriptType;\n    title: string;\n    text: string;\n}\n\nexport class EmbeddedStarter {\n\n\n    startupComplete = 2;\n\n    themeManager: ThemeManager;\n\n    mainEmbeddedList: MainEmbedded[] = [];\n\n    initGUI() {\n\n        this.checkStartupComplete();\n\n        this.themeManager = new ThemeManager();\n    }\n\n    initEditor() {\n        new Formatter().init();\n        this.checkStartupComplete();\n    }\n\n    checkStartupComplete() {\n        this.startupComplete--;\n        if (this.startupComplete == 0) {\n            this.start();\n        }\n    }\n\n    start() {\n\n        this.initJavaOnlineDivs();\n\n    }\n\n    initJavaOnlineDivs() {\n        \n        jQuery('.sql-online').each((index: number, element: HTMLElement) => {\n            let $div = jQuery(element);\n            let scriptList: JOScript[] = [];\n            $div.find('script').each((index: number, element: HTMLElement) => {\n                let $script = jQuery(element);\n                let type: ScriptType = \"sql\";\n                if($script.data('type') != null) type = <ScriptType>($script.data('type'));\n                let script: JOScript = {\n                    type: type,\n                    title: $script.attr('title'),\n                    text: $script.text().trim()\n                };\n                scriptList.push(script);\n            });\n\n            this.initDiv($div, scriptList);\n\n        });\n\n    }\n\n    initDiv($div: JQuery<HTMLElement>, scriptList: JOScript[]) {\n\n        let me: MainEmbedded = new MainEmbedded($div, scriptList);\n\n    }\n\n}\n\njQuery(function () {\n\n    let embeddedStarter = new EmbeddedStarter();\n\n    let prefix = \"\";\n    let editorPath = \"lib/monaco-editor/dev/vs\"\n    //@ts-ignore\n    if(window.javaOnlineDir != null){\n        //@ts-ignore\n        prefix = window.javaOnlineDir;\n    }\n\n    //@ts-ignore\n    if(window.monacoEditorPath != null){\n        //@ts-ignore\n        editorPath = window.monacoEditorPath;\n    }\n\n    //@ts-ignore\n    window.require.config({ paths: { 'vs': prefix + editorPath } });\n    //@ts-ignore\n    window.require.config({\n        'vs/nls': {\n            availableLanguages: {\n                '*': 'de'\n            }\n        },\n        ignoreDuplicateModules: [\"vs/editor/editor.main\"]\n    });\n    //@ts-ignore\n    window.require(['vs/editor/editor.main'], function () {\n\n        embeddedStarter.initEditor();\n        embeddedStarter.initGUI();\n\n    });\n\n});\n"],"sourceRoot":""}