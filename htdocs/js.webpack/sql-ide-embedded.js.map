{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../../../../src/client/compiler/lexer/Token.ts","webpack:///../../../../src/client/compiler/lexer/Lexer.ts","webpack:///../../../../src/client/main/gui/Formatter.ts","webpack:///../../../../src/client/main/gui/ThemeManager.ts","webpack:///../../../../src/client/compiler/parser/SQLTypes.ts","webpack:///../../../../src/client/compiler/parser/Parser.ts","webpack:///../../../../src/client/compiler/parser/SQLTable.ts","webpack:///../../../../src/client/compiler/parser/SymbolTable.ts","webpack:///../../../../src/client/compiler/parser/SQLMethods.ts","webpack:///../../../src/client/tools/StringTools.ts","webpack:///../../../../src/client/compiler/parser/SymbolResolver.ts","webpack:///../../../src/client/compiler/Compiler.ts","webpack:///../../../../src/client/compiler/parser/Module.ts","webpack:///../../../../src/client/main/gui/ActionManager.ts","webpack:///../../../src/client/tools/HtmlTools.ts","webpack:///../../../src/client/communication/AjaxHelper.ts","webpack:///../../../src/client/workspace/WDatabase.ts","webpack:///../../../src/client/communication/CacheManager.ts","webpack:///../../../src/client/communication/NetworkManager.ts","webpack:///../../../src/client/tools/TemplateUploader.ts","webpack:///../../../../src/client/main/gui/DatabaseSettingsDialog.ts","webpack:///../../../src/client/workspace/Workspace.ts","webpack:///../../../../src/client/main/gui/MyCompletionItemProvider.ts","webpack:///../../../../src/client/main/gui/MySignatureHelpProvider.ts","webpack:///../../../../src/client/main/gui/MyHoverProvider.ts","webpack:///../../../../src/client/main/gui/MyCodeActionProvider.ts","webpack:///../../../../src/client/main/gui/MyReferenceProvider.ts","webpack:///../../../../src/client/main/gui/Helper.ts","webpack:///../../../../src/client/main/gui/Editor.ts","webpack:///../../../../src/client/main/gui/VscSql.ts","webpack:///../../../src/client/tools/DatabaseTools.ts","webpack:///../../../src/client/tools/DatabaseImportExport.ts","webpack:///../../../../src/client/main/gui/MainMenu.ts","webpack:///../../../../src/client/main/gui/Accordion.ts","webpack:///../../../../src/client/main/gui/DistributeToStudentsDialog.ts","webpack:///../../../../src/client/main/gui/NewDatabaseDialog.ts","webpack:///../../../../src/client/main/gui/ProjectExplorer.ts","webpack:///../../../../src/client/main/gui/RightDiv.ts","webpack:///../../../../src/client/main/gui/Sliders.ts","webpack:///../../../../src/client/main/gui/TeacherExplorer.ts","webpack:///../../../../src/client/main/gui/Dialog.ts","webpack:///../../../../src/client/main/gui/UserMenu.ts","webpack:///../../../src/client/main/Login.ts","webpack:///../../../../src/client/main/gui/ViewModeController.ts","webpack:///../../../../src/client/compiler/parser/SemicolonAngel.ts","webpack:///../../../../src/client/main/gui/DatabaseExplorer.ts","webpack:///../../../../src/client/main/gui/ProgramControlButtons.ts","webpack:///../../../../src/client/compiler/parser/StatementCleaner.ts","webpack:///../../../../src/client/main/gui/ResultsetPresenter.ts","webpack:///../../../src/client/communication/Notifier.ts","webpack:///../../../../src/client/main/gui/WaitOverlay.ts","webpack:///../../../../src/client/main/gui/HistoryViewer.ts","webpack:///../../../src/client/main/Main.ts","webpack:///../../../../src/client/main/gui/ErrorManager.ts","webpack:///../../../../src/client/main/gui/HomeworkManager.ts","webpack:///../../../../src/client/main/gui/BottomDiv.ts","webpack:///../../../src/client/embedded/EmbeddedSlider.ts","webpack:///../../../src/client/embedded/EmbeddedFileExplorer.ts","webpack:///../../../src/client/embedded/EmbeddedIndexedDB.ts","webpack:///../../../src/client/embedded/WriteQueryManager.ts","webpack:///../../../src/client/tools/DatabaseLoader.ts","webpack:///../../../src/client/embedded/MainEmbedded.ts","webpack:///../../../src/client/embedded/EmbeddedStarter.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","TokenType","LexerState","TokenTypeReadable","identifier","integerConstant","floatingPointConstant","booleanConstant","stringConstant","charConstant","true","false","keywordRename","keywordTo","keywordAlter","keywordAdd","keywordDelete","keywordSelect","keywordInsert","keywordInto","keywordValues","keywordUpdate","keywordSet","keywordCreate","keywordReferences","keywordPrimary","keywordForeign","keywordTable","keywordColumn","keywordDrop","keywordKey","keywordAutoincrement","keywordFrom","keywordWhere","keywordGroup","keywordBy","keywordHaving","keywordOrder","keywordAscending","keywordDescending","keywordNulls","keywordFirst","keywordLast","keywordIs","keywordNull","keywordAnd","keywordOr","keywordNot","keywordJoin","keywordNatural","keywordLeft","keywordCross","keywordInner","keywordOuter","keywordOn","keywordAs","keywordLimit","keywordOffset","keywordIn","keywordNotIn","keywordLike","keywordCollate","keywordDefault","keywordEngine","keywordCharset","leftBracket","rightBracket","leftSquareBracket","rightSquareBracket","leftCurlyBracket","rightCurlyBracket","leftRightSquareBracket","dot","minus","modulo","plus","multiplication","division","singleQuote","doubleQuote","identifierQuote","lower","greater","equal","lowerOrEqual","greaterOrEqual","concatenation","semicolon","colon","comma","backslash","at","pipe","space","tab","newline","identifierChar","comment","endofSourcecode","specialCharList","'","notEqual","linefeed","keywordList","EscapeSequenceList","\"","spaceTokens","correspondingBracket","tokenTypesToMerge","first","second","merged","isNot","isNotNull","isNull","this","input","replace","tokenList","errorList","bracketError","bracketStack","pos","line","column","nonSpaceLastTokenType","nonSpaceLastToken","length","tokens","errors","currentChar","charAt","nextChar","mainState","bracketOpen","pop","bracketClosed","setBracketError","tt","openBracket","error","char","specialCharToken","pushToken","next","push","lexMultilineComment","checkClosingBracket","isDigit","indexOf","lexEndofLineComment","lexNumber","lexStringConstant","lexSpace","lexAnnotation","lexQuotedIdentifier","lexIdentifierOrKeyword","pushError","text","position","tripel","newLength","errorLevel","level","a","base","charCode","charCodeAt","posStart","posEnd","substring","escapeChar","beginChar","isDoubleQuotedIdentifier","lastCharWasNewline","sign","firstChar","radix","exponent","hasExponential","posExponentStart","exponentString","Number","parseInt","parseFloat","Math","pow","isSpace","toLowerCase","autoFormatTriggerCharacters","displayName","monaco","languages","registerDocumentFormattingEditProvider","registerOnTypeFormattingEditProvider","model","ch","options","token","edits","format","Promise","resolve","e","e1","range","endLineNumber","startLineNumber","endColumn","startColumn","splice","delta","substr","getValue","editor","EndOfLinePreference","LF","tokenlist","lex","lastNonSpaceToken","indentLevel","curlyBracesOpenAtLines","indentLevelAtSwitchStatements","switchHappend","lastTokenWasNewLine","roundBracketsOpen","replaceBetween","token1","insertSpaces","deleteSpaces","openedAtLine","repeat","nextToken1","nextToken2","lastToken1","lastToken2","isBinaryOperator","lastTokenIsOperator","nextTokenIsOperator","getNextNonSpaceToken","beginNextLine","token2","currentIndentation","il","correctIndentation","nextToken","lowerGeneric","lowerBelongsToGenericExpression","greaterGeneric","greaterBelongsToGenericExpression","tokenBefore","spaces","deleteOverlappingRanges","currentIndex","j","positionFrom","positionTo","numberOfSpaces","ThemeManager","themes","initThemes","theme","internalSwitchTheme","setTheme","monacoTheme","root","document","documentElement","keys","cssColors","style","setProperty","SQLType","parameterDescriptions","checkFunction","outputFunction","canCastToList","super","binaryResultTypes","Map","unaryOperators","slice","ownIndex","baseTypeMap","toLocaleLowerCase","baseTypes","concat","forEach","set","tokenType","secondType","resultType","isCommutative","Array","isArray","map","addBinaryOperation","type2","bt2","operator","booleanType","value1","value2","max","tens","baseType","parameterValues","parameters","join","returnBaseType","getUnaryResultType","result","getBinaryResult","round","textTypes","varcharType","ci","pv","v","textType","tinyTextType","mediumTextType","longTextType","floatTypes","decimalType","vk","trunc","nk","numericType","doubleType","realType","floatType","numberTypes","intType","integerType","tinyIntType","smallIntType","mediumIntType","bigIntType","dateType","dateTimeType","timestampType","nullType","numericTypes","addBaseTypes","numericBinaryOperators","comparisonOperators","characterTypes","booleanOperations","bt","isInConsoleMode","lookahead","endToken","beginStatementKeywords","completionHints","sqlStatements","addCompletionHint","initializeLookahead","lastToken","parseMain","ct","lastComment","commentBefore","cct","quickFix","assign","skip","invokeSemicolonAngel","expectedValuesArray","isOperatorOrDot","title","editsProvider","uri","resource","edit","message","severity","MarkerSeverity","Error","main","getSemicolonAngel","register","expectedTokens","op","operatorPrecedence","ret","deltaColumns","getCurrentPosition","mainProgram","mainProgramEnd","afterLastStatement","isEnd","oldPos","getCurrentPositionPlus","errorsBeforeStatement","startPosition","st","parseStatement","ast","from","to","getEndOfPosition","hasErrors","acceptedBySQLite","beginStatementTokens","firstBadToken","expectSemicolon","parseSelect","parseInsert","parseCreateTable","parseUpdate","parseDelete","parseDropTable","parseAlterTable","node","type","kind","endPosition","symbolTable","tableIdentifier","tableIdentifierPosition","expect","addCompletionHintHere","parseRenameTableOrColumn","parseAddColumn","parseDropColumn","comesToken","getEndOfCurrentToken","newTableName","oldColumnName","oldColumnPosition","newColumnName","columnDefBegin","columnDef","parseColumnDefinition","whereNode","whereNodeBegin","whereNodeEnd","parseTerm","columnIdentifiers","columnIdentifierPositions","values","valuePosBegin","valuePosEnd","columnList","combinedPrimaryKeyColumns","foreignKeyInfoList","primaryKeyAlreadyDefined","parsePrimaryKeyTerm","parseForeignKeyTerm","columnNode","isPrimary","referencesPos","fki","referencesColumn","referencesTable","referencesPosition","pos0","pos1","columns","isAutoIncrement","notNull","parseType","hintColumns","hintTables","hints","additionalColumns","praefix","suffix","datatypes","toString","getBaseType","alreadySeenKeywords","collate","defaultValue","fromConstantType","canCastTo","valuesPosition","columnsPosition","table","alias","parseValueLists","insideListTokens","outerFirst","leftBracketPosition","constantType","constant","constantNode","columnListStart","fromNode","parentStatement","parseColumnList","columnListKeywordArray","findIndex","allColumns","unshift","fromStartPosition","dontHint","parseTableOrSubQuery","fromListKeywordArray","fromEndPosition","whereKeywordArray","whereStart","groupKeywordArray","groupStart","groupByNode","parseGroupBy","orderStart","orderByNode","parseOrderBy","limitNode","parseLimit","numberOfRows","ln","offset","gbn","tokenTypesAfterGroupBy","term","having","obnList","obn","leftSide","parseAtomicTableOrSubQuery","parseJoinOperator","rightSide","firstOperand","secondOperand","on","selectStatement","subquery","query","tokenTypesAfterListEnd","allowAliases","columnTerm","parseTermBinary","precedence","left","parseUnary","operators","right","binaryOp","parseBracket","tt1","unaryOp","operand","isStringConstant","parseDotOrArrayChains","identifier1","position1","parseMethodCallParameters","rightBracketPosition","callMethod","operands","nodes","commaPositions","secondIdentifier","identifierLeft","identifierRight","list","elements","constantTypes","tokenBeforeBracket","selectNode","listNode","parseList","termInsideBrackets","parameter","isPrimaryKey","isNullable","cs","typeMatch1","completeTypeSQL","match","baseTypeIdentifier","commaSeparatedParameters","split","trim","fromColumnStructure","Table","ts","size","tsList","tables","fromTableStructure","columnStructureToColumnMap","referencedCs","references","referencedColumn","parentSymbolTable","childSymbolTables","symbols","symbolList","parent","databaseStructure","fromTableStructureList","storeTableSymbols","storeSymbol","posOfDefinition","referencedOnPositions","symbol","containsPosition","shortestSymbolTableContainingPosition","shortestPosition","st1","findTableAtPosition","findTables","filter","isAggregating","returnType","acceptsStarParameter","SQLMethodStore","methods","pushOneParameterMethod","countMethod","instance","parameterType","escapeHtml","unsafe","twoDez","z","isDate","inputText","opera1","opera2","lopera1","lopera2","pdate","dd","mm","yy","lyear","isDateTime","dateStr","databaseTool","symbolTableStack","mainSymbolTable","statement","astNode","resolveSelect","resolveInsert","resolveCreateTable","resolveUpdate","resolveDelete","resolveDropTable","resolveAlterTable","getCurrentSymbolTable","resultTable","pushNewSymbolTable","joinedTables","resolveTableOrSubQuery","extractDatabaseStructure","resolveTerm","c1","sqlType","whereType","getBaseTypeName","findTable","whereSymbolTable","oldColumn","find","ciPos","createTableNode","thisTable","cn","tosNode","tableList","storeTableIntoSymbolTable","tableAlias","resolveNotIn","typeLeft","typeRight","getBinaryResultType","operandType","resultType1","resolveMethodCall","resolveIdentifier","resolveDot","selectTable","tableSymbols","findColumn","getInstance","getMethods","method","found","methodParameter","operatorString","leftType","pType","element","elementType","tableCompletionTo","valueList","destType","CompilerStatus","compilerStatus","compiledButNothingToRun","moduleStore","compiling","t0","performance","now","lexer","getModules","file","dirty","clear","lexed","getProgramTextFromMonacoModel","getCurrentlyEditedModule","getBottomDiv","errorManager","showParenthesisWarning","startRegistering","parser","parse","getDatabaseTool","symbolResolver","start","dt","getCurrentWorkspace","compilerMessage","healSemicolons","readyToRun","oldErrorDecorations","identifierPositions","methodCallPositions","path","uriCounter","uriMap","Uri","scheme","createModel","updateOptions","tabSize","lastSavedVersionId","getAlternativeVersionId","that","onDidChangeContent","versionId","saved","isEmbedded","main1","workspacesOwnerId","user","id","text_before_revision","student_edited_after_revision","networkManager","sendUpdates","bottomDiv","homeworkManager","showHomeWorkRevisionButton","projectExplorer","renderHomeworkButton","fromPosition","toPosition","hintKeywords","fromColumn","fromLine","toColumn","toLine","hintColumnsOfTable","chList","sel","selStart","selEnd","stmt","compare","b","lineNumber","bestCh","bestRangeLength","rangeLength","f","f1","submitted_date","version","workspace","workspace_id","forceUpdate","file_type","ec","el","positionList","positionsOnLine","bestFoundPosition","sort","e2","errorLevelCompare","level1","level2","maxUriNumber","ModuleStore","moduleMap","module_id","ms","putModule","copy","mo","includeSystemModules","excludedModuleName","removeModule","undefined","moduleName","ActionManager","$mainElement","actions","keyEntries","buttons","$element","jQuery","event","executeKeyDownEvent","actionIdentifier","ae","action","button","active","attr","addClass","removeClass","activeElement","tagName","keyCode","ctrlKey","shiftKey","altKey","actionEntries","actionEntry","stopPropagation","preventDefault","makeEditable","elementWithText","elementToReplace","renameDoneCallback","selectionRange","mousePointer","window","PointerEvent","$input","css","width","height","color","val","setSelectionRange","end","after","hide","setTimeout","focus","ev","off","remove","show","newValue","openContextMenu","items","x","y","$contextMenu","$openSubMenu","parentMenuItem","mi","caption","link","$item","subMenu","callback","$link","top","append","leftRight","innerWidth","xp","topBottom","innerHeight","yp","makeTabs","tabDiv","headings","not","tabs","target","data","trigger","makeDiv","klass","div","jo_mouseDetected","animateToTransparent","cssProperty","startColorRgb","duration","colorPraefix","animate","copyTextToClipboard","navigator","clipboard","writeText","then","err","console","textArea","createElement","body","appendChild","select","execCommand","removeChild","fallbackCopyTextToClipboard","PerformanceCollector","url","startTime","pe","performanceData","count","sumTime","performanceDataCount","lastTimeSent","request","ajax","successCallback","errorCallback","showNetworkBusy","time","$","async","JSON","stringify","contentType","success","response","registerPerformanceEntry","jqXHR","statusText","status","busy","WDatabase","db","statements","published_to","description","templateDump","templateId","template_id","owner_id","CacheManager","databaseId","cacheAvailable","getCache","cache","databaseIdToCacheIdentifier","arrayBuffer","buffer","Uint8Array","catch","put","Response","self","caches","open","$updateTimerDiv","ownUpdateFrequencyInSeconds","teacherUpdateFrequencyInSeconds","updateFrequencyInSeconds","forcedUpdateEvery","secondsTillNextUpdate","errorHappened","interval","clearInterval","counterTillForcedUpdate","setInterval","$rect","sendIfNothingIsDirty","writeEditorTextToFile","settings","wdList","fdList","ws","workspaceList","getWorkspaceData","getFileData","workspacesWithoutFiles","files","userId","language","currentWorkspaceId","getModifiedWorkspaces","updateWorkspaces","wd","is_testuser","random","entity","workspaceId","alert","secretKind","secret","databaseName","publishedTo","klasse","student_ids","class_id","current_workspace_id","version_before","database","newStatements","firstNewStatementIndex","statements_before","new_version","cacheManager","fromDatabaseData","fetchTemplateFromCache","pako","inflate","fetchTemplate","template","saveTemplateToCache","xhrFields","responseType","user_id","templateList","sendUpdatesRequest","sendUpdatesResponse","idToRemoteWorkspaceDataMap","fileIdsSended","workspaces","newWorkspaceNames","remoteWorkspace","createNewWorkspaceFromWorkspaceData","idToRemoteFileDataMap","fd","idToModuleMap","fileId","remoteFileData","fileListPanel","removeElement","currentWorkspace","setValue","remoteFile","createFile","workspaceListPanel","sortElements","withSort","w","createNewWorkspace","sql_history","isFolder","panelElement","externalElement","iconClass","addElement","fileData","identical_to_repository_version","getNewModule","TemplateUploader","dump","waitOverlay","export","deflate","uploadIntern","processData","headers","init","$dialog","showMainWindow","saveNameAndPublishedTo","setValues","setNewSecret","prop","checked","each","setNameAndPublishedTo","uploadCurrentDatabase","getDatabaseSettings","secrets","is_admin","is_schooladmin","empty","withFiles","currentFileId","currentlyOpenModule","permissions","database_id","$buttonDiv","$htmlFirstLine","$button","restoreFromData","triggerCharacters","keywordCompletionItems","keywordToSnippetMap","setupKeywordCompletionItems","context","getModuleByMonacoModel","reject","wfc","provideCompletionItemsIntern","sw","getMonacoEditor","_contentWidgets","widget","toggleDetails","isStringLiteral","textUntilPosition","getValueInRange","textAfterPosition","completionHint","getCompletionHint","completionItems","addKeywordCompletionItems","dotMatch","ibMatch","identifierAndBracketAfterCursor","addIdentifierCompletionItems","addDotCompletionItems","word","getWordUntilPosition","replaceWordRange","insertAfterCursorRange","item","insertText","startsWith","suggestions","textAfterDot","textBeforeDot","rangeToReplace","label","detail","filterText","insertTextRules","CompletionItemInsertTextRule","KeepWhitespace","CompletionItemKind","Field","tableIdentifiers","columnIdentifier","InsertAsSnippet","Snippet","Class","sortText","columList","withTable","snippet","Keyword","posMin","posMax","watchDog","posOld","command","arguments","MySignatureHelpProvider","signatureHelpTriggerCharacters","signatureHelpRetriggerCharacters","compileIfDirty","provideSignatureHelpLater","getModel","methodCallPosition","rightMostPosition","mcp","identifierPosition","getSignatureHelp","parameterIndex","cp","activeParameter","activeSignature","signatures","dispose","MyHoverProvider","selection","getSelection","getElementAtPosition","getWordUnderCursor","desc","keywordDescriptions","contents","getValueLengthInRange","isInsideIdentifierOrArrayDescriptor","begin","isInsideOperator","isInsideIdentifierChain","MyCodeActionProvider","markers","relatedInformation","diagnostics","isPreferred","MyReferenceProvider","usagePositions","referencePositions","upInCurrentModule","up","targetElement","direction","$helper","bottom","html","close","fadeIn","fadeOut","mainBase","helperHistory","flag","sendUpdateUserSettings","openHelper","showMinimap","cw","dontPushNextCursorMove","lastTime","elementDecoration","extensions","conf","onEnterRules","beforeText","afterText","indentAction","IndentAction","IndentOutdent","appendText","None","removeText","comments","lineComment","blockComment","brackets","autoClosingPairs","surroundingPairs","setLanguageConfiguration","setMonarchTokensProvider","defaultToken","tokenPostfix","ignoreCase","escapes","keywords","builtinFunctions","builtinVariables","pseudoColumns","tokenizer","include","cases","whitespace","numbers","strings","string","complexIdentifiers","quotedIdentifier","scopes","defineVscSQL","defineTheme","inherit","rules","foreground","fontStyle","colors","lightbulb","enabled","lineDecorationsWidth","peekWidgetDefaultFocus","fixedOverflowWidgets","quickSuggestions","quickSuggestionsDelay","fontSize","fontFamily","fontWeight","roundedSelection","selectOnLineNumbers","automaticLayout","scrollBeyondLastLine","occurrencesHighlight","autoIndent","dragAndDrop","formatOnType","formatOnPaste","suggestFontSize","suggestLineHeight","suggest","localityBonus","insertMode","parameterHints","cycle","mouseWheelZoom","minimap","scrollbar","vertical","horizontal","mouseWheelListener","changeEditorFontSize","deltaY","onDidChangeConfiguration","hasChanged","EditorOption","fontInfo","registerLightbulbOnClickFunctions","onDidChangeCursorPosition","onDidChangeModel","removeEventListener","addEventListener","passive","setActiveAfterExternalModelSet","registerHoverProvider","registerCompletionItemProvider","registerCodeActionProvider","registerReferenceProvider","registerSignatureHelpProvider","onMouseDown","MouseTargetType","GUTTER_GLYPH_MARGIN","GUTTER_LINE_NUMBERS","isAfterLines","onMarginMouseDown","remeasureFonts","addActions","onDidType","insertEndOfComment","newLine","newColumn","Range","executeEdits","setPosition","getPosition","prevLine","getLineContent","trimRight","endsWith","getLineCount","spacesAtBeginningOfLine","trimLeft","fontSizePx","Date","getTime","editorfs","getOptions","viewModeController","saveFontSize","factor","dynamic","newEditorFs","setFontSize","addAction","keybindings","KeyMod","CtrlCmd","KeyCode","KEY_K","precondition","keybindingContext","contextMenuGroupId","contextMenuOrder","run","ed","getAction","Enter","getActionManager","deltaDecorations","decorations","className","isWholeLine","overviewRuler","darkColor","OverviewRulerLane","Left","executeActionActive","sqlStatement","getSQLSTatementsAtSelection","classname","MinimapPosition","Inline","zIndex","setActive","showHelper","DatabaseTool","databaseDirectoryEntries","queryId","querySuccessCallbacksMap","queryErrorCallbackMap","queries","callbackAfterInitializing","callbackAfterRetrievingStructure","getWaitOverlay","worker","terminate","Worker","onmessage","querySuccessCallback","results","queryErrorCallback","delete","queryCount","execQuery","setProgress","shift","executeQuery","log","retrieveDatabaseStructure","onerror","postMessage","sql","params","getJSON","entries","sql1","result1","parseDatabaseStructure","tableNameToStructureMap","index","tableName","tableSQL","tableStructure","completeSQL","columnArray","foreignKeyList","columnArray1","dflt_value","columnStructure","typeLengths","fkInfo","foreignKeyInfo","referencesRawData","sqliteMagicBytes","reader","FileReader","onload","ab","getDumpType","binDump","readAsArrayBuffer","dbTool","filename","prompt","obj","isBlob","blob","Blob","msSaveOrOpenBlob","createEvent","download","href","URL","createObjectURL","dataset","downloadurl","initEvent","dispatchEvent","downloadFile","currentSubmenu","openSubmenusOnMousemove","mainMenu","switchTheme","saveToFile","initMenu","menu","initMenuitemCallbacks","opensubmenu","accordion","flexWeight","newButtonClass","buttonNewTitle","defaultIconClass","withDeleteButton","withFolders","enableDrag","acceptDropKinds","dontSortElements","addPanel","$newFolderAction","addFolder","newElement","newFolderCallback","scrollIntoView","$collapseAllAction","collapseAll","hasClass","slideUp","$captionElement","$listElement","fixed","grow","$buttonNew","pathArray","selectedElement","getSelectedElement","name1","path1","isFolder1","name2","path2","isFolder2","cmp","localeCompare","compareWithPath","insertIndex","getElementIndex","$elements","prepend","elementAtIndex","before","renderElement","insertElement","renameElement","$accordionDiv","getCurrentlySelectedPath","newElementCallback","$htmlSecondLine","insertAfter","selectCallback","$listOuter","$ce","$li","targetGrow","parts","toggleClass","currentlyDraggedElementKind","element1","currentlyDraggedElement","moveElement","expanded","aName","sortName","bName","cssClass","$div","expandedCollapsed","pathHtml","addElementActionCallback","$elementAction","$filedragpart","originalEvent","dataTransfer","effectAllowed","dropEffect","dropElementCallback","pathIsCollapsed","slideDown","pressTimer","contextmenuHandler","contextMenuItems","renameCallback","contextMenuProvider","cmi","pageX","pageY","clearTimeout","getChildElements","deleteCallback","elementToMove","destinationFolder","destinationPath","movedElements","sourcePath","oldPathLength","moveCallback","folder","pointPos","newText","invokeCallback","ae1","findElement","pathString","elPath","ps","Accordion","$html","panel","renderOuterHtmlElements","DistributeToStudentsDialog","classes","studentCount","$studentList","student","students","$studentLine","$studentClass","$studentName","rufname","familienname","$dialogMain","history","back","distributeWorkspace","sendDistributeWorkspace","$templatelist","fetchTemplateList","templatelist","tle","$tle","ownerName","$templateName","$dropZone","evt","importFile","createMode","workspaceData","createWorkspace","$template","template_database_id","code","tIndex","otherDatabaseId","newTemplateId","sendCreateWorkspace","accordionElement","renderSettingsButton","setWorkspaceActive","loadFromFile","isDatabase","dbUncompressed","$projectexplorerDiv","programPointerModule","programPointerDecoration","lastOpenModule","initFilelistPanel","initWorkspacelistPanel","successfulNetworkCommunicationCallback","setModuleActive","sendCreateFile","newName","callbackIfSuccessful","sendDeleteWorkspaceOrFile","cmiList","is_teacher","date","getDate","getMonth","getFullYear","getHours","getMinutes","$homeworkButtonDiv","$newWorkspaceAction","removeWorkspace","enableNewButton","databaseExplorer","getResultsetPresenter","dest","droppedElement","dropEffekt","$homeAction","onHomeButtonClicked","hideHomeworkTab","workspaceAccordionElement","teacherExplorer","classPanel","restoreOwnWorkspaces","setCaption","moduleList","errorCountMap","errorCount","errorCountS","setTextAfterFilename","initializeDatabaseTool","fetchDatabase","initializeWorker","currentWorkspace_id","renderFiles","nonSystemModules","notifier","connect","refreshAfterRetrievingDBStructure","getHistoryViewer","clearAndShowStatements","cem","hideRevision","editorState","saveViewState","setModel","readOnly","hideHomeworkRevisionButton","restoreViewState","setCurrentlyEditedModule","showProgramPointer","programPointerPosition","revealRangeInCenterIfOutsideViewport","Center","beforeContentClassName","findModuleByFile","$rightDiv","isWholePage","$tabs","$headings","rightdiv_width","$wholeWindow","Sliders","md","clientX","dx","moveLeftPanel","clientY","dy","moveBottomDiv","moveRightDiv","sliderknobLeft","stopImmediatePropagation","sliderknobRight","$editor","mewidth","layout","diffEditor","$bottomDiv","meheight","$leftPanel","classData","studentPanel","initStudentPanel","initClassPanel","renderClasses","ws_userId","ownWorkspaces","currentOwnWorkspace","restoreWorkspaces","setExplorerColor","showHomeworkTab","attachToWorkspaces","renderWorkspaces","ea","renderStudents","userDataList","ud","classDataList","cd","Dialog","placeholder","$buttonRow","$message","visible","visibility","$userSettingsButton","dialog","heading","$oldPassword","$newPassword1","$newPassword2","$errorDiv","waitDiv","waitMessage","oldPassword","newPassword","$loginSpinner","loginHappened","username","password","viewModes","classDiagram","waitForGUICallback","initGUI","initTeacherExplorer","classdata","initializeTimer","setFixed","initViewMode","startupComplete","errorMessage","resultsetPresenter","removePanels","ViewModeController","$buttonsContainer","$buttonMap","highContrast","editorHasFullWidth","$buttonEditorFullscreen","$buttonPresentationMode","$buttonMonitorMode","am","actionManager","registerAction","toggleEditorFullwidth","setMode","saveSettings","otherMode","viewMode","viewModeChosen","themeManager","getChosenViewMode","userDataDirty","monitor","presentation","SemicolonAngel","semicolonPositions","isThereAgain","oldEvidence","firstSeenMs","currentlyEditedModule","cursorLine","isCurrentModule","editOperations","forceMoveMarkers","abs","setSelection","$mainDiv","collapsedTables","dbstructure","$table","renderTable","isCollapsed","showTable","$columns","image","referencesHtml","autoincrement","$column","$treeSwitch","ProgramControlButtons","$buttonStart","isActive","executeSelectedStatements","sqlCleaned","cleanCreateTableStatement","cleanInsertStatement","lines","vline","cleanValue","cleanColumnDef","cleanForeignKeyInfo","paginationSize","writeQueryListeners","showResultsBusy","showResultPending","$paginationDiv","$arrowLeft","$infoDiv","$arrowRight","paginationFrom","floor","showResults","activateButtons","paginationAll","min","listener","fetchSelectedStatements","hasDDLStatements","some","isDDLStatement","hasWriteStatements","isWriteStatement","executeDDLWriteStatementsEmbedded","executeDDLWriteStatementsInOnlineIDE","executeStatements","sucessfullyExecutedModifyingStatements","getDatabaseExplorer","refresh","notify","getNewStatements","new_statements","firstStatementIndex","executeNewStatements","AddDatabaseStatements","appendStatements","modifyingStatements","resetDatabase","fromIndex","executeStatementsString","successfullyExecutedModifyingStatements","showErrors","callback1","laterSelectExists","isSelectStatement","presentResultsIntern","clean","minimapColors","linesDecorationsClassName","borderLeftClass","errorlevel","minimapColor","Warning","Info","setModelMarkers","$runtimeErrorsTab","$runtimeErrorsTabHeading","showErrorDecorations","$errorList","$errorLine","revealRangeInCenter","$sqlDiv","colorize","$messageDiv","$resultTabheading","$resultHeader","headerDiv","$bodyDiv","waitFunction","$header","rows","row","$row","cell","monacoEditor","StatementDelimiter","isOpen","unsentMessages","isPolling","connection","location","protocol","host","WebSocket","onError","onclose","onClose","onMessage","onopen","databaseVersion","sendIntern","onOpen","startPolling","send","exception","rollbackLocal","callbackIfTooFewStatements","callbackIfDone","doRefreshDatabaseExplorer","poll","getNewStatementsHttp","WaitOverlay","$waitDiv","fadeOutPending","$bitteWartenText","$bitteWartenProgress","$historyPanel","panelEntries","panelEntry","makePanelEntry","makeLastButtonActive","$rollbackButton","$index","$text","$copybutton","$rollbackbutton","rollback","rollbackEmbedded","rollbackLocalNeeded","writeQueryManager","initialTemplateDump","initialStatements","writtenStatements","historyViewer","rightDiv","compiler","semicolonAngel","matchMedia","matches","login","initSliders","checkStartupComplete","startTimer","sendBeacon","timerHandle","isDirty","compile","renderErrorCount","oldDecorations","lightBulbOnClickFunctionList","$bracket_warning","children","getSortedAndFilteredErrors","getErrorCount","lightBulbClass","class","onClickFunction","processError","$file","$error","locf","$errorDivs","$lineColumn","category","showError","showRevisionActive","$homeworkTab","$homeworkTabLeft","$homeworkTabRight","$showRevisionButton","showRevision","originalModel","modifiedModel","createDiffEditor","getElementById","enableSplitViewResizing","originalEditable","renderSideBySide","original","modified","daysWithModules","dateString","stringToDate","dateWithoutTime","dateToStringWithoutTime","dwm","day","m1","m2","moduleWithWorkspace","EmbeddedSlider","$container","firstLast","horVert","$otherDiv","initSlider","$sliderDiv","cursor","slide","otherHeight","newHeight","newOtherHeight","otherWidth","newWidth","newOtherWidth","$fileListDiv","addModule","$filesDiv","$addButton","currentFile","selectFile","removeFile","script","$fileDiv","hint","onDelete","$hintDiv","$monacoDiv","syntaxMap","md1","markdownit","highlight","str","lang","renderer","code_inline","idx","env","content","render","md2","codeMap","uncoloredtext","EmbeddedIndexedDB","databaseIdentifier","indexedDB","onsuccess","onupgradeneeded","objectStoreScripts","createObjectStore","keyPath","autoIncrement","transaction","oncomplete","scriptId","objectStore","databaseID","WriteQueryManager","statementsToExecute","statementsToWrite","atLeastOneExecuted","getDatabase","writeStatementsIfNecessary","forceWriteStatements","writeDatabase","$databaseResetButton","statementsSql","urlWithoutProtocol","loadBinary","loadSql","saveDatabaseToCache","cutSqlToStatements","isBinary","scriptList","programIsExecutable","compileRunsAfterCodeReset","readConfig","config","databaseFilename","$dbTreeDiv","load","loadableDb","initScripts","indexedDBReady","readScripts","withFileList","fileExplorer","getFirstModule","databaseReady","removeAllFiles","initWorkspace","$filesListDiv","setFirstFileActive","addHint","configJson","withOutput","withErrorList","withBottomPanel","markFile","lineNumbersMinChars","getScript","scriptListJSon","saveScripts","countDown","$codeResetButton","oneNotSaved","writeScript","removeScript","considerShowingCodeResetButton","$centerDiv","makeWaitDiv","$codeResetModalWindow","makeCodeResetModalWindow","$databaseResetModalWindow","makeDatabaseResetModalWindow","makeRightDiv","$editorDiv","$bracketErrorDiv","makeBracketErrorDiv","$controlsDiv","$bottomDivInner","makeBottomDiv","makeFilesDiv","$rightDivInner","$rightSideContainer","$infoButton","$buttonOpen","loadDatabaseFromFile","$buttonSave","saveDatabaseToFile","addWriteQueryListener","$parent","$window","deleteScriptsInDB","reset","$filesHeader","$tabheadings","$thLeftSide","$thErrors","$thPCode","$thRuntimeError","$thHistory","$thRightSide","$tabError","$tabPCode","$tabRtErrors","$tabHistory","$thRun","$thVariables","$vd","mainEmbeddedList","initJavaOnlineDivs","$script","initDiv","embeddedStarter","prefix","editorPath","javaOnlineDir","monacoEditorPath","require","paths","availableLanguages","ignoreDuplicateModules","initEditor"],"mappings":"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","file":"sql-ide-embedded.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export enum TokenType {\r\n    identifier,\r\n    // constants\r\n    integerConstant,\r\n    floatingPointConstant,\r\n    booleanConstant,\r\n    stringConstant,\r\n    charConstant,\r\n    true,\r\n    false,\r\n    // keywords\r\n    keywordRename,\r\n    keywordTo,\r\n    keywordAlter,\r\n    keywordAdd,\r\n    keywordDelete,\r\n    keywordSelect,\r\n    keywordInsert,\r\n    keywordInto,\r\n    keywordValues,\r\n    keywordUpdate,\r\n    keywordSet,\r\n    keywordCreate,\r\n    keywordReferences,\r\n    keywordPrimary,\r\n    keywordForeign,\r\n    keywordTable,\r\n    keywordColumn,\r\n    keywordDrop,\r\n    keywordKey,\r\n    keywordAutoincrement,\r\n    keywordFrom,\r\n    keywordWhere,\r\n    keywordGroup,\r\n    keywordBy,\r\n    keywordHaving,\r\n    keywordOrder,\r\n    keywordAscending,\r\n    keywordDescending,\r\n    keywordNulls,\r\n    keywordFirst,\r\n    keywordLast,\r\n    keywordIs,\r\n    keywordNull,\r\n\r\n    keywordOr,\r\n    keywordAnd,\r\n    keywordNot,\r\n\r\n    keywordJoin,\r\n    keywordNatural,\r\n    keywordLeft,\r\n    keywordCross,\r\n    keywordInner,\r\n    keywordOuter,\r\n    keywordOn,\r\n    keywordAs,\r\n    keywordLimit,\r\n    keywordOffset,\r\n    keywordIn,\r\n    keywordNotIn,\r\n    keywordLike,\r\n    keywordCollate,\r\n    keywordDefault,\r\n    keywordEngine,\r\n    keywordCharset,\r\n\r\n    // brackets\r\n    leftBracket, // ()\r\n    rightBracket,\r\n    leftSquareBracket, // []\r\n    rightSquareBracket,\r\n    leftCurlyBracket, // {}\r\n    rightCurlyBracket,\r\n    leftRightSquareBracket, // []\r\n    \r\n    // binary operators\r\n    dot, //.\r\n    modulo,\r\n    minus, plus, multiplication, division,\r\n    singleQuote, doubleQuote, // ', \"\r\n    identifierQuote,\r\n    lower, greater, lowerOrEqual, greaterOrEqual, \r\n    concatenation,    \r\n    equal,\r\n    notEqual,\r\n\r\n    // semicolon\r\n    semicolon, // ;\r\n\r\n    colon, // :\r\n\r\n    // comma\r\n    comma, // ,\r\n\r\n    // backslash\r\n    backslash,\r\n\r\n    // @\r\n    pipe,\r\n\r\n    // @\r\n    at,\r\n\r\n    // whitespace\r\n    space,\r\n\r\n    tab,\r\n\r\n    // newline\r\n    newline,\r\n\r\n    // line feed\r\n    linefeed,\r\n\r\n    // only lexer-internal\r\n    identifierChar,  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    comment,\r\n\r\n    endofSourcecode, // will be generated after sourcecode end\r\n    \r\n    // Program statement types:\r\n    \r\n    // additional AST node types\r\n    constantNode,\r\n    callMethod,\r\n    unaryOp,\r\n    binaryOp,\r\n    table,\r\n    subquery,\r\n    list,\r\n    column,\r\n    columnDef,\r\n    allColumns, // *\r\n    isNull,\r\n    isNot, // used by lexer to lex \"is not null\" into one token\r\n    isNotNull,\r\n}\r\n\r\nexport var TokenTypeReadable: {[tt: number]: string} = {\r\n    [TokenType.identifier]: \"ein Bezeichner\",\r\n    // constants\r\n    [TokenType.integerConstant]: \"eine Integer-Konstante\",\r\n    [TokenType.floatingPointConstant]: \"eine Fließkomma-Konstante\",\r\n    [TokenType.booleanConstant]: \"eine boolesche Konstante\",\r\n    [TokenType.stringConstant]: \"eine Zeichenketten-Konstante\",\r\n    [TokenType.charConstant]: \"eine char-Konstante\",\r\n    [TokenType.true]: \"true\",\r\n    [TokenType.false]: \"false\",\r\n    // keywords\r\n    [TokenType.keywordRename]: \"rename\",\r\n    [TokenType.keywordTo]: \"to\",\r\n    [TokenType.keywordAlter]: \"alter\",\r\n    [TokenType.keywordAdd]: \"add\",\r\n    [TokenType.keywordDelete]: \"delete\",\r\n    [TokenType.keywordSelect]: \"select\",\r\n    [TokenType.keywordInsert]: \"insert\",\r\n    [TokenType.keywordInto]: \"into\",\r\n    [TokenType.keywordValues]: \"values\",\r\n    [TokenType.keywordUpdate]: \"update\",\r\n    [TokenType.keywordSet]: \"set\",\r\n    [TokenType.keywordCreate]: \"create\",\r\n    [TokenType.keywordReferences]: \"references\",\r\n    [TokenType.keywordPrimary]: \"primary\",\r\n    [TokenType.keywordForeign]: \"foreign\",\r\n    [TokenType.keywordTable]: \"table\",\r\n    [TokenType.keywordColumn]: \"column\",\r\n    [TokenType.keywordDrop]: \"drop\",\r\n    [TokenType.keywordKey]: \"key\",\r\n    [TokenType.keywordAutoincrement]: \"autoincrement\",\r\n    [TokenType.keywordFrom]: \"from\",\r\n    [TokenType.keywordWhere]: \"where\",\r\n    [TokenType.keywordGroup]: \"group\",\r\n    [TokenType.keywordBy]: \"by\",\r\n    [TokenType.keywordHaving]: \"having\",\r\n    [TokenType.keywordOrder]: \"order\",\r\n    [TokenType.keywordAscending]: \"ascending\",\r\n    [TokenType.keywordDescending]: \"descending\",\r\n    [TokenType.keywordNulls]: \"nulls\",\r\n    [TokenType.keywordFirst]: \"first\",\r\n    [TokenType.keywordLast]: \"last\",\r\n    [TokenType.keywordIs]: \"is\",\r\n    [TokenType.keywordNull]: \"null\",\r\n\r\n\r\n    [TokenType.keywordAnd]: \"and\",\r\n    [TokenType.keywordOr]: \"or\",\r\n    [TokenType.keywordNot]: \"not\",\r\n\r\n    [TokenType.keywordJoin]: \"join\",\r\n    [TokenType.keywordNatural]: \"natural\",\r\n    [TokenType.keywordLeft]: \"left\",\r\n    [TokenType.keywordCross]: \"cross\",\r\n    [TokenType.keywordInner]: \"inner\",\r\n    [TokenType.keywordOuter]: \"outer\",\r\n    [TokenType.keywordOn]: \"on\",\r\n    [TokenType.keywordAs]: \"as\",\r\n    [TokenType.keywordLimit]: \"limit\",\r\n    [TokenType.keywordOffset]: \"offset\",\r\n    [TokenType.keywordIn]: \"in\",\r\n    [TokenType.keywordNotIn]: \"not in\",\r\n    [TokenType.keywordLike]: \"like\",\r\n    [TokenType.keywordCollate]: \"collate\",\r\n    [TokenType.keywordDefault]: \"default\",\r\n    [TokenType.keywordEngine]: \"engine\",\r\n    [TokenType.keywordCharset]: \"charset\",\r\n\r\n    // brackets\r\n    [TokenType.leftBracket]: \"(\", // ()\r\n    [TokenType.rightBracket]: \")\",\r\n    [TokenType.leftSquareBracket]: \"[\", // []\r\n    [TokenType.rightSquareBracket]: \"]\",\r\n    [TokenType.leftCurlyBracket]: \"{\", // {}\r\n    [TokenType.rightCurlyBracket]: \"}\",\r\n    [TokenType.leftRightSquareBracket]: \"[]\", \r\n    \r\n    // operators\r\n    [TokenType.dot]: \".\", //.\r\n    [TokenType.minus]: \"-\", \r\n    [TokenType.modulo]: \"%\", \r\n    [TokenType.plus]: \"+\", \r\n    [TokenType.multiplication]: \"*\", \r\n    [TokenType.division]: \"/\",\r\n    [TokenType.singleQuote]: \"'\", \r\n    [TokenType.doubleQuote]: \"\\\"\", // ']: \"\", \"\r\n    [TokenType.identifierQuote]: \"`\",\r\n    [TokenType.lower]: \"<\", \r\n    [TokenType.greater]: \">\",\r\n    [TokenType.equal]: \"=\", \r\n    [TokenType.lowerOrEqual]: \"<=\", \r\n    [TokenType.greaterOrEqual]: \">=\", \r\n    [TokenType.concatenation]: \"||\", \r\n    \r\n    // semicolon\r\n    [TokenType.semicolon]: \";\", // ;\r\n    [TokenType.colon]: \":\", // ;\r\n\r\n    // comma\r\n    [TokenType.comma]: \",\", \r\n\r\n    // backslash\r\n    [TokenType.backslash]: \"\\\\\",\r\n\r\n    // at\r\n    [TokenType.at]: \"@\",\r\n    \r\n    // pipe\r\n    [TokenType.pipe]: \"|\",\r\n\r\n    // whitespace\r\n    [TokenType.space]: \"ein Leerzeichen\",\r\n    [TokenType.tab]: \"ein Tabulatorzeichen\",\r\n\r\n    // newline\r\n    [TokenType.newline]: \"ein Zeilenumbruch\",\r\n\r\n    // only lexer-internal\r\n    [TokenType.identifierChar]: \"eines der Zeichen a..z, A..Z, _\",  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    [TokenType.comment]: \"ein Kommentar\",\r\n\r\n    [TokenType.endofSourcecode]: \"das Ende des Programmes\"\r\n\r\n}\r\n\r\nexport var specialCharList: {[keyword: string]:TokenType} = {\r\n    '(': TokenType.leftBracket, // ()\r\n    ')': TokenType.rightBracket,\r\n    '[': TokenType.leftSquareBracket, // []\r\n    ']': TokenType.rightSquareBracket,\r\n    '{': TokenType.leftCurlyBracket, // {}\r\n    '}': TokenType.rightCurlyBracket,\r\n    \r\n    // operators\r\n    '.': TokenType.dot, //.\r\n    ',': TokenType.comma, //.\r\n    '-': TokenType.minus,\r\n    '%': TokenType.modulo,\r\n    '+': TokenType.plus, \r\n    '*': TokenType.multiplication, \r\n    '/': TokenType.division,\r\n    '\\\\': TokenType.backslash,\r\n    '@': TokenType.at,\r\n    '|': TokenType.pipe,\r\n    '\\'': TokenType.singleQuote, \r\n    '\"': TokenType.doubleQuote, // ', \"\r\n    '`': TokenType.identifierQuote, // ', \"\r\n    \"<\": TokenType.lower,\r\n    \">\": TokenType.greater,\r\n    \"=\": TokenType.equal,\r\n    \"<>\": TokenType.notEqual,\r\n    \r\n    ';': TokenType.semicolon, // ;\r\n    ':': TokenType.colon, // ;\r\n\r\n    // whitespace\r\n    ' ': TokenType.space,\r\n    '\\t': TokenType.tab,\r\n\r\n    // newline\r\n    '\\n': TokenType.newline,\r\n    '\\r': TokenType.linefeed\r\n}\r\n\r\nexport var keywordList: {[keyword: string]:TokenType} = {\r\n    \"rename\": TokenType.keywordRename,\r\n    \"to\": TokenType.keywordTo,\r\n    \"alter\": TokenType.keywordAlter,\r\n    \"add\": TokenType.keywordAdd,\r\n    \"delete\": TokenType.keywordDelete,\r\n    \"select\": TokenType.keywordSelect,\r\n    \"insert\": TokenType.keywordInsert,\r\n    \"into\": TokenType.keywordInto,\r\n    \"values\": TokenType.keywordValues,\r\n    \"update\": TokenType.keywordUpdate,\r\n    \"set\": TokenType.keywordSet,\r\n    \"create\": TokenType.keywordCreate,\r\n    \"references\": TokenType.keywordReferences,\r\n    \"primary\": TokenType.keywordPrimary,\r\n    \"foreign\": TokenType.keywordForeign,\r\n    \"table\": TokenType.keywordTable,\r\n    \"column\": TokenType.keywordColumn,\r\n    \"drop\": TokenType.keywordDrop,\r\n    \"key\": TokenType.keywordKey,\r\n    \"autoincrement\": TokenType.keywordAutoincrement,\r\n    \"from\": TokenType.keywordFrom,\r\n    \"where\": TokenType.keywordWhere,\r\n    \"true\": TokenType.true,\r\n    \"false\": TokenType.false,\r\n    \"group\": TokenType.keywordGroup,\r\n    \"by\": TokenType.keywordBy,\r\n    \"having\": TokenType.keywordHaving,\r\n    \"order\": TokenType.keywordOrder,\r\n    \"asc\": TokenType.keywordAscending,\r\n    \"desc\": TokenType.keywordDescending,\r\n    \"nulls\": TokenType.keywordNulls,\r\n    \"first\": TokenType.keywordFirst,\r\n    \"last\": TokenType.keywordLast,\r\n    \"is\": TokenType.keywordIs,\r\n    \"null\": TokenType.keywordNull,\r\n\r\n    \"or\": TokenType.keywordOr,\r\n    \"and\": TokenType.keywordAnd,\r\n    \"not\": TokenType.keywordNot,\r\n\r\n    \"join\": TokenType.keywordJoin,\r\n    \"natural\": TokenType.keywordNatural,\r\n    \"left\": TokenType.keywordLeft,\r\n    \"cross\": TokenType.keywordCross,\r\n    \"inner\": TokenType.keywordInner,\r\n    \"outer\": TokenType.keywordOuter,\r\n    \"on\": TokenType.keywordOn,\r\n    \"as\": TokenType.keywordAs,\r\n    \"limit\": TokenType.keywordLimit,\r\n    \"offset\": TokenType.keywordOffset,\r\n    \"in\": TokenType.keywordIn,\r\n    \"not in\": TokenType.keywordNotIn,\r\n    \"like\": TokenType.keywordLike,\r\n    \"collate\": TokenType.keywordCollate,\r\n    \"default\": TokenType.keywordDefault,\r\n    \"engine\": TokenType.keywordEngine,\r\n    \"charset\": TokenType.keywordCharset\r\n\r\n\r\n};\r\n\r\nexport var EscapeSequenceList: {[keyword: string]:string} = {\r\n    \"n\": \"\\n\",\r\n    \"r\": \"\\r\",\r\n    \"t\": \"\\t\",\r\n    \"\\\"\": \"\\\"\",\r\n    \"'\": \"'\",\r\n    \"\\\\\": \"\\\\\"\r\n}\r\n\r\nexport type TextPosition = {\r\n    line: number,\r\n    column: number, \r\n    length: number\r\n}\r\n\r\nexport type TextPositionWithoutLength = {\r\n    line: number,\r\n    column: number\r\n}\r\n\r\nexport type Token = {\r\n    tt: TokenType,\r\n    value: string|number|boolean,\r\n    position: TextPosition,\r\n    commentBefore?: Token,\r\n    isDoubleQuotedIdentifier?: boolean\r\n}\r\n\r\nexport type TokenList = Token[];\r\n\r\nfunction tokenToString(t: Token){\r\n    return \"<div><span style='font-weight: bold'>\" + TokenType[t.tt] + \"</span>\" +\r\n            \"<span style='color: blue'> &nbsp;'\" + t.value + \"'</span> (l&nbsp;\" + t.position.line + \", c&nbsp;\" + t.position.column + \")</div>\";\r\n}\r\n \r\nexport function tokenListToString(tl: TokenList):string{\r\n    let s = \"\";\r\n    for(let t of tl){\r\n        s += tokenToString(t) + \"\\n\";\r\n    }\r\n    return s;\r\n}","import { TokenList, specialCharList, TokenType, Token, EscapeSequenceList, keywordList, TextPosition, TokenTypeReadable } from \"./Token.js\";\r\n\r\nenum LexerState {\r\n    number, identifier, stringConstant, characterConstant, multilineComment, EndoflineComment\r\n}\r\n\r\nvar endChar = \"►\"; // \\u10000\r\n\r\nexport type QuickFix = {\r\n    title: string,\r\n    editsProvider: (uri: monaco.Uri) => monaco.languages.WorkspaceTextEdit[]\r\n}\r\n\r\nexport type ErrorLevel = \"info\" | \"error\" | \"warning\";\r\n\r\nexport type Error = {\r\n    position: TextPosition,\r\n    text: string,\r\n    quickFix?: QuickFix,\r\n    level: ErrorLevel\r\n}\r\n\r\nexport class Lexer {\r\n\r\n    tokenList: TokenList;\r\n    nonSpaceLastTokenType: TokenType;\r\n    nonSpaceLastToken: Token;\r\n\r\n    errorList: Error[];\r\n    pos: number;\r\n    line: number;\r\n    column: number;\r\n\r\n    currentChar: string;\r\n    nextChar: string;\r\n\r\n    input: string;\r\n\r\n    spaceTokens: TokenType[] = [\r\n        TokenType.space, TokenType.tab, TokenType.newline\r\n    ];\r\n\r\n    bracketStack: TokenType[];\r\n    bracketError: string;\r\n    correspondingBracket: { [key: number]: TokenType } = {};\r\n\r\n    tokenTypesToMerge: { first: TokenType, second: TokenType, merged: TokenType }[] = [\r\n        { first: TokenType.keywordNotIn, second: TokenType.keywordIn, merged: TokenType.keywordNotIn },\r\n        { first: TokenType.keywordIs, second: TokenType.keywordNot, merged: TokenType.isNot },\r\n        { first: TokenType.isNot, second: TokenType.keywordNull, merged: TokenType.isNotNull },\r\n        { first: TokenType.keywordIs, second: TokenType.keywordNull, merged: TokenType.isNull },\r\n    ]\r\n\r\n    constructor() {\r\n        this.correspondingBracket[TokenType.leftBracket] = TokenType.rightBracket;\r\n        this.correspondingBracket[TokenType.leftCurlyBracket] = TokenType.rightCurlyBracket;\r\n        this.correspondingBracket[TokenType.leftSquareBracket] = TokenType.rightSquareBracket;\r\n        this.correspondingBracket[TokenType.rightBracket] = TokenType.leftBracket;\r\n        this.correspondingBracket[TokenType.rightCurlyBracket] = TokenType.leftCurlyBracket;\r\n        this.correspondingBracket[TokenType.rightSquareBracket] = TokenType.leftSquareBracket;\r\n    }\r\n\r\n    lex(input: string): { tokens: TokenList, errors: Error[], bracketError: string } {\r\n\r\n        this.input = input.replace(\"\\u00a0\", \" \");\r\n        this.tokenList = [];\r\n        this.errorList = [];\r\n        this.bracketError = null;\r\n        this.bracketStack = [];\r\n        this.pos = 0;\r\n        this.line = 1;\r\n        this.column = 1;\r\n        this.nonSpaceLastTokenType = null;\r\n        this.nonSpaceLastToken = null;\r\n\r\n\r\n        if (input.length == 0) {\r\n            return { tokens: this.tokenList, errors: this.errorList, bracketError: null };\r\n        }\r\n\r\n        this.currentChar = input.charAt(0);\r\n\r\n        this.nextChar = input.length > 1 ? input.charAt(1) : endChar;\r\n\r\n\r\n        while (this.currentChar != endChar) {\r\n            this.mainState();\r\n        }\r\n\r\n        if (this.bracketStack.length > 0) {\r\n            let bracketOpen = this.bracketStack.pop();\r\n            let bracketClosed = this.correspondingBracket[bracketOpen];\r\n\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[bracketClosed]);\r\n        }\r\n\r\n        return {\r\n            tokens: this.tokenList,\r\n            errors: this.errorList,\r\n            bracketError: this.bracketError\r\n        };\r\n\r\n    }\r\n\r\n    checkClosingBracket(tt: TokenType) {\r\n        if (this.bracketStack.length == 0) {\r\n            let bracketOpen = this.correspondingBracket[tt];\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[tt]);\r\n            return;\r\n        }\r\n        let openBracket = this.bracketStack.pop();\r\n        let correspondingBracket = this.correspondingBracket[openBracket];\r\n        if (tt != correspondingBracket) {\r\n            this.setBracketError(TokenTypeReadable[openBracket] + \" \" + TokenTypeReadable[correspondingBracket]);\r\n        }\r\n    }\r\n\r\n    setBracketError(error: string) {\r\n        if (this.bracketError == null) this.bracketError = error;\r\n    }\r\n\r\n    next() {\r\n        this.pos++;\r\n        this.currentChar = this.nextChar;\r\n        if (this.pos + 1 < this.input.length) {\r\n            this.nextChar = this.input.charAt(this.pos + 1);\r\n        } else {\r\n            this.nextChar = endChar;\r\n        }\r\n        this.column++; // column of current char\r\n    }\r\n\r\n\r\n\r\n    mainState() {\r\n\r\n        let char = this.currentChar;\r\n\r\n        let specialCharToken = specialCharList[char];\r\n\r\n        if (specialCharToken != null) {\r\n            switch (specialCharToken) {\r\n                case TokenType.leftSquareBracket:\r\n                    if (this.nextChar == \"]\") {\r\n                        this.pushToken(TokenType.leftRightSquareBracket, \"[]\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.leftSquareBracket, \"[\");\r\n                        this.bracketStack.push(specialCharToken);\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.division:\r\n                    if (this.nextChar == '*') {\r\n                        this.lexMultilineComment();\r\n                        return;\r\n                    }\r\n                    this.pushToken(TokenType.division, '/');\r\n                    this.next();\r\n                    return;\r\n                case TokenType.pipe:\r\n                    if (this.nextChar == \"|\") {\r\n                        this.pushToken(TokenType.concatenation, '||');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.pipe, '|');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.lower:\r\n                    if (this.nextChar == \">\") {\r\n                        this.pushToken(TokenType.notEqual, '<>');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.lower, '<');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.rightSquareBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.minus:\r\n                    if (this.isDigit(this.nextChar, 10) && !\r\n                        ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.rightBracket].indexOf(this.nonSpaceLastTokenType) >= 0)\r\n                    ) {\r\n                        this.lexNumber();\r\n                        return;\r\n                    } else if (this.nextChar == '-') {\r\n                        this.lexEndofLineComment();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.minus, '-');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.singleQuote:\r\n                    this.lexStringConstant(\"'\");\r\n                    return;\r\n                case TokenType.doubleQuote:\r\n                    this.lexStringConstant('\"');\r\n                    return;\r\n                case TokenType.newline:\r\n                    this.pushToken(TokenType.newline, '\\n');\r\n                    this.line++;\r\n                    this.column = 0;\r\n                    this.next();\r\n                    return;\r\n                case TokenType.space:\r\n                case TokenType.tab:\r\n                    this.lexSpace();\r\n                    return;\r\n                case TokenType.linefeed:\r\n                    this.next();\r\n                    return;\r\n                case TokenType.at:\r\n                    this.lexAnnotation();\r\n                    return;\r\n                case TokenType.identifierQuote:\r\n                    this.lexQuotedIdentifier();\r\n                    return;\r\n            }\r\n\r\n            this.pushToken(specialCharToken, char);\r\n            this.next();\r\n            return;\r\n\r\n        }\r\n\r\n        // no special char. Number?\r\n\r\n        if (this.isDigit(char, 10)) {\r\n            this.lexNumber();\r\n            return;\r\n        }\r\n\r\n        this.lexIdentifierOrKeyword();\r\n\r\n    }\r\n\r\n\r\n    lexQuotedIdentifier() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let s: string = \"\";\r\n        this.next();\r\n        while(this.currentChar != '`' && this.currentChar != endChar){\r\n            s += this.currentChar;\r\n            this.next();\r\n        }\r\n        if(this.currentChar == endChar){\r\n            this.pushError(\"Innerhalb eines in `` eingeschlossenen Bezeichners wurde das Ende der Datei erreicht.\", s.length + 1, \"error\", line, column);\r\n        } else {\r\n            this.next(); // skip `\r\n            this.pushToken(TokenType.identifier, s, line, column);\r\n        }\r\n    }\r\n\r\n    pushToken(tt: TokenType, text: string | number | boolean, line: number = this.line, column: number = this.column, length: number = (\"\" + text).length) {\r\n        let t: Token = {\r\n            tt: tt,\r\n            value: text,\r\n            position: {\r\n                column: column,\r\n                line: line,\r\n                length: length\r\n            }\r\n        }\r\n\r\n        for (let tripel of this.tokenTypesToMerge) {\r\n            if (tt == tripel.second && this.nonSpaceLastTokenType == tripel.first) {\r\n                let newLength = column - this.nonSpaceLastToken.position.column + length;\r\n                this.nonSpaceLastToken.tt = tripel.merged;\r\n                this.nonSpaceLastToken.position = { column: this.nonSpaceLastToken.position.column, line: line, length: newLength };\r\n                this.nonSpaceLastToken.value = this.nonSpaceLastToken.value + \" \" + text;\r\n\r\n                this.nonSpaceLastTokenType = tripel.merged;\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (!(this.spaceTokens.indexOf(tt) >= 0)) {\r\n            this.nonSpaceLastTokenType = tt;\r\n            this.nonSpaceLastToken = t;\r\n        }\r\n\r\n        this.tokenList.push(t);\r\n    }\r\n\r\n    pushError(text: string, length: number, errorLevel: ErrorLevel = \"error\", line: number = this.line, column: number = this.column) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: {\r\n                line: line,\r\n                column: column,\r\n                length: length\r\n            },\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n\r\n\r\n    isDigit(a: string, base: number) {\r\n        var charCode = a.charCodeAt(0);\r\n\r\n        if (base == 10) return (charCode >= 48 && charCode <= 57); // 0 - 9\r\n        if (base == 2) return (charCode >= 48 && charCode <= 49); // 0, 1\r\n        if (base == 8) return (charCode >= 48 && charCode <= 55); // 0 - 7\r\n        if (base == 16) return (charCode >= 48 && charCode <= 57) || (charCode >= 97 && charCode <= 102) ||\r\n            (charCode >= 65 && charCode <= 70); // 0 - 9 || a - f || A - F\r\n    }\r\n\r\n    lexSpace() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n\r\n        let posStart = this.pos;\r\n        while (this.currentChar == \" \" || this.currentChar == \"\\t\") {\r\n            this.next();\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n        this.pushToken(TokenType.space, this.input.substring(posStart, posEnd), line, column);\r\n        return;\r\n\r\n    }\r\n\r\n    lexCharacterConstant() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n        this.next();\r\n        let char = this.currentChar;\r\n        if (char == \"\\\\\") {\r\n            let escapeChar = EscapeSequenceList[this.nextChar];\r\n            if (escapeChar == null) {\r\n                this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                if (this.nextChar != \"'\") {\r\n                    char = this.nextChar;\r\n                    this.next();\r\n                }\r\n            } else {\r\n                char = escapeChar;\r\n                this.next();\r\n            }\r\n        }\r\n        this.next();\r\n        if (this.currentChar != \"'\") {\r\n            this.pushError(\"Das Ende der char-Konstante wird erwartet (').\", 1);\r\n        } else {\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.charConstant, char, line, column);\r\n\r\n    }\r\n\r\n    lexStringConstant(beginChar: string) {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let text = \"\";\r\n\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\\\\") {\r\n                let escapeChar = EscapeSequenceList[this.nextChar];\r\n                if (escapeChar == null) {\r\n                    this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                } else {\r\n                    char = escapeChar;\r\n                    this.next();\r\n                }\r\n            } else if (char == beginChar) {\r\n                this.next();\r\n                break;\r\n            } else if (char == \"\\n\" || char == endChar) {\r\n                this.pushError('Innerhalb einer String-Konstante wurde das Zeilenende erreicht.', text.length + 1, \"error\", line, column);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        if (beginChar == \"'\") {\r\n            this.pushToken(TokenType.stringConstant, text, line, column, text.length + 2);\r\n        } else {\r\n            this.pushToken(TokenType.identifier, text, line, column, text.length + 2);\r\n            this.tokenList[this.tokenList.length - 1].isDoubleQuotedIdentifier = true;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    lexMultilineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let lastCharWasNewline: boolean = false;\r\n\r\n        let text = \"/*\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"*\" && this.nextChar == \"/\") {\r\n                this.next();\r\n                this.next();\r\n                text += \"*/\";\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                this.pushError(\"Innerhalb eines Mehrzeilenkommentars (/*... */) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            if (char == \"\\n\") {\r\n                this.line++;\r\n                this.column = 0;\r\n                lastCharWasNewline = true;\r\n                text += char;\r\n            } else if (!(lastCharWasNewline && char == \" \")) {\r\n                text += char;\r\n                lastCharWasNewline = false;\r\n            }\r\n\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n    lexEndofLineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let text = \"--\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\n\") {\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                // this.pushError(\"Innerhalb eines Einzeilenkommentars (//... ) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n\r\n    lexNumber() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let sign: number = 1;\r\n        if (this.currentChar == '-') {\r\n            sign = -1;\r\n            this.next();\r\n        }\r\n\r\n        let posStart = this.pos;\r\n\r\n        let firstChar = this.currentChar;\r\n\r\n        this.next();\r\n\r\n        let radix: number = 10;\r\n\r\n        if (firstChar == '0' && (['b', 'x', '0', '1', '2', '3', '4', '5', '6', '7'].indexOf(this.currentChar) >= 0)) {\r\n            if (this.currentChar == 'x') {\r\n                radix = 16;\r\n                this.next();\r\n            } else if (this.currentChar == 'b') {\r\n                radix = 2;\r\n                this.next();\r\n            } else radix = 8;\r\n            posStart = this.pos;\r\n        }\r\n\r\n        while (this.isDigit(this.currentChar, radix)) {\r\n            this.next();\r\n        }\r\n\r\n        let tt = TokenType.integerConstant;\r\n\r\n        if (this.currentChar == \".\") {\r\n            tt = TokenType.floatingPointConstant;\r\n\r\n            this.next();\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n\r\n        }\r\n\r\n        let base = this.input.substring(posStart, this.pos);\r\n\r\n        posStart = this.pos;\r\n        let exponent: number = 0;\r\n\r\n        let hasExponential: boolean = false;\r\n        //@ts-ignore\r\n        if (this.currentChar == \"e\") {\r\n            hasExponential = true;\r\n            this.next();\r\n            let posExponentStart: number = this.pos;\r\n\r\n            //@ts-ignore\r\n            if (this.currentChar == '-') {\r\n                this.next();\r\n            }\r\n\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n            let exponentString = this.input.substring(posExponentStart, this.pos);\r\n            exponent = Number.parseInt(exponentString);\r\n        }\r\n\r\n        if (this.currentChar == 'd' || this.currentChar == 'f') {\r\n            tt == TokenType.floatingPointConstant;\r\n            this.next();\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n        }\r\n\r\n        let value: number = (tt == TokenType.integerConstant) ? Number.parseInt(base, radix) : Number.parseFloat(base);\r\n        value *= sign;\r\n        if (exponent != 0) value *= Math.pow(10, exponent);\r\n\r\n        this.pushToken(tt, value, line, column);\r\n\r\n    }\r\n\r\n    lexAnnotation() {\r\n        let line = this.line;\r\n        let column = this.column - 1;\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n        this.next(); // skip@\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n        this.pushToken(TokenType.at, text, line, column, text.length + 1);\r\n    }\r\n\r\n    lexIdentifierOrKeyword() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n\r\n        let tt = keywordList[text.toLowerCase()];\r\n        if (tt != null && typeof tt == \"number\") {\r\n\r\n            switch (tt) {\r\n                case TokenType.true:\r\n                    this.pushToken(TokenType.booleanConstant, true, line, column);\r\n                    break;\r\n                case TokenType.false:\r\n                    this.pushToken(TokenType.booleanConstant, false, line, column);\r\n                    break;\r\n                default:\r\n                    this.pushToken(tt, text, line, column);\r\n                    break;\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        this.pushToken(TokenType.identifier, text, line, column);\r\n\r\n    }\r\n\r\n    isSpace(char: string): boolean {\r\n        return char == \" \" || char == \"\\n\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport function errorListToString(errorList: Error[]): string {\r\n    let s = \"\";\r\n\r\n    for (let error of errorList) {\r\n\r\n        s += \"Z \" + error.position.line + \", S \" + error.position.column + \": \";\r\n        s += error.text + \"<br>\";\r\n\r\n    }\r\n\r\n    return s;\r\n}","import { Lexer } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Token, TokenList, TokenType, tokenListToString } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class Formatter implements monaco.languages.DocumentFormattingEditProvider,\r\n    monaco.languages.OnTypeFormattingEditProvider {\r\n\r\n    autoFormatTriggerCharacters: string[] = ['\\n'];\r\n\r\n    displayName?: string = \"Java-Autoformat\";\r\n\r\n\r\n    constructor(\r\n        // private main: Main\r\n    ) {\r\n\r\n    }\r\n\r\n    init() {\r\n        monaco.languages.registerDocumentFormattingEditProvider('myJava', this);\r\n        monaco.languages.registerOnTypeFormattingEditProvider('myJava', this);\r\n    }\r\n\r\n    provideOnTypeFormattingEdits(model: monaco.editor.ITextModel, position: monaco.Position, ch: string, options: monaco.languages.FormattingOptions, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n    deleteOverlappingRanges(edits: monaco.languages.TextEdit[]) {\r\n        for (let i = 0; i < edits.length - 1; i++) {\r\n            let e = edits[i];\r\n            let e1 = edits[i + 1];\r\n            if (e.range.endLineNumber < e1.range.startLineNumber) continue;\r\n            if (e.range.endLineNumber == e1.range.startLineNumber) {\r\n                if (e.range.endColumn >= e1.range.startColumn) {\r\n                    edits.splice(i + 1, 1);\r\n                } else {\r\n                    if (e.range.endColumn == 0 && e.text.length > 0 && e1.range.startColumn == 1 && e1.range.endColumn > e1.range.startColumn && e1.text == \"\") {\r\n                        let delta = e.text.length - (e1.range.endColumn - e1.range.startColumn);\r\n                        if (delta > 0) { \r\n                            e.text = e.text.substr(0, delta);\r\n                            edits.splice(i+1, 1);\r\n                        }\r\n                        else if (delta < 0)\r\n                        { \r\n                            //@ts-ignore\r\n                            e1.range.endColumn = e1.range.startColumn - delta;\r\n                            edits.splice(i, 1);\r\n                            i--;\r\n\r\n                         }\r\n                        else {\r\n                            edits.splice(i, 2);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    provideDocumentFormattingEdits(model: monaco.editor.ITextModel,\r\n        options: monaco.languages.FormattingOptions,\r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n\r\n    format(model: monaco.editor.ITextModel): monaco.languages.TextEdit[] {\r\n\r\n        let edits: monaco.languages.TextEdit[] = [];\r\n\r\n        // if (this.main.currentWorkspace == null || this.main.currentWorkspace.currentlyOpenModule == null) {\r\n        //     return [];\r\n        // }\r\n\r\n        // let text = this.main.monaco_editor.getValue({ preserveBOM: false, lineEnding: \"\\n\" });\r\n\r\n        let text = model.getValue(monaco.editor.EndOfLinePreference.LF);\r\n\r\n        let tokenlist = new Lexer().lex(text).tokens;\r\n\r\n        // let tokenlist = this.main.currentWorkspace.currentlyOpenModule.tokenList;\r\n\r\n        if (tokenlist == null) return [];\r\n\r\n        // TODO:\r\n        // { at the end of line, with one space before; followed only by spaces and \\n\r\n        // indent lines according to { and }\r\n        // Beware: int i[] = { ... }\r\n        // exactly one space before/after binary operators\r\n        // no space after ( and no space before )\r\n        // (   ) -> ()\r\n        // (  ()) -> (())\r\n        // (()  ) -> (())\r\n\r\n        let lastNonSpaceToken: Token = null;\r\n        let indentLevel = 0;\r\n        let tabSize = 3;\r\n        let curlyBracesOpenAtLines: number[] = [];\r\n        let indentLevelAtSwitchStatements: number[] = [];\r\n        let switchHappend: boolean = false;\r\n        let lastTokenWasNewLine: number = 0;\r\n        let roundBracketsOpen: number = 0;\r\n\r\n        for (let i = 0; i < tokenlist.length; i++) {\r\n\r\n            let t = tokenlist[i];\r\n            lastTokenWasNewLine--;\r\n\r\n            switch (t.tt) {\r\n\r\n                case TokenType.leftCurlyBracket:\r\n                    if (switchHappend) {\r\n                        switchHappend = false;\r\n                        indentLevelAtSwitchStatements.push(indentLevel + 2);\r\n                        indentLevel++;\r\n                    }\r\n                    indentLevel++;\r\n                    curlyBracesOpenAtLines.push(t.position.line);\r\n                    if (lastNonSpaceToken != null) {\r\n                        let tt = lastNonSpaceToken.tt;\r\n                        if (tt == TokenType.rightBracket || tt == TokenType.identifier || tt == TokenType.leftRightSquareBracket) {\r\n                            this.replaceBetween(lastNonSpaceToken, t, edits, \" \");\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let token1 = tokenlist[i + 1];\r\n                        if (token1.tt != TokenType.newline && token1.tt != TokenType.space) {\r\n                            this.insertSpaces(edits, token1.position.line, token1.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    if (indentLevelAtSwitchStatements[indentLevelAtSwitchStatements.length - 1] == indentLevel) {\r\n                        indentLevelAtSwitchStatements.pop();\r\n                        indentLevel--;\r\n                        // if(t.position.column >= 3){\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                        // }    \r\n                    }\r\n                    indentLevel--;\r\n                    let openedAtLine = curlyBracesOpenAtLines.pop();\r\n                    if (openedAtLine != null && openedAtLine != t.position.line) {\r\n                        if (lastNonSpaceToken != null && lastNonSpaceToken.position.line == t.position.line) {\r\n                            this.replace(edits, t.position, t.position, \"\\n\" + \" \".repeat(indentLevel * tabSize));\r\n                        }\r\n                    } else {\r\n                        if (i > 0) {\r\n                            let token1 = tokenlist[i - 1];\r\n                            if (token1.tt != TokenType.space && token1.tt != TokenType.newline) {\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    roundBracketsOpen++;\r\n                    if (i < tokenlist.length - 2) {\r\n                        let nextToken1 = tokenlist[i + 1];\r\n                        let nextToken2 = tokenlist[i + 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                            i++;\r\n                            if (nextToken2.tt == TokenType.rightBracket) {\r\n                                i++;\r\n                                roundBracketsOpen--;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt == TokenType.space && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line, lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    roundBracketsOpen--;\r\n                    if (i > 1) {\r\n                        let nextToken1 = tokenlist[i - 1];\r\n                        let nextToken2 = tokenlist[i - 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.newline:\r\n                    lastTokenWasNewLine = 2;\r\n                    if (i < tokenlist.length - 2) {\r\n\r\n                        let lastTokenIsOperator = this.isBinaryOperator(lastNonSpaceToken?.tt);\r\n                        let nextTokenIsOperator = this.isBinaryOperator(this.getNextNonSpaceToken(i, tokenlist).tt);\r\n\r\n                        let beginNextLine = tokenlist[i + 1];\r\n                        let token2 = tokenlist[i + 2];\r\n                        let currentIndentation = 0;\r\n\r\n                        if (beginNextLine.tt == TokenType.newline) {\r\n                            break;\r\n                        }\r\n\r\n                        let delta: number = 0;\r\n                        if (beginNextLine.tt == TokenType.space) {\r\n                            if (token2.tt == TokenType.newline) {\r\n                                break;\r\n                            }\r\n                            currentIndentation = beginNextLine.position.length;\r\n                            i++;\r\n                            if (token2.tt == TokenType.rightCurlyBracket) {\r\n                                delta = -1;\r\n                            }\r\n                        }\r\n\r\n                        if (beginNextLine.tt == TokenType.rightCurlyBracket) {\r\n                            delta = -1;\r\n                            // indentLevel--;\r\n                            // curlyBracesOpenAtLines.pop();\r\n                            // lastNonSpaceToken = beginNextLine;\r\n                            // i++;\r\n                        }\r\n\r\n                        if(nextTokenIsOperator || lastTokenIsOperator) delta = 1;\r\n\r\n                        let il = indentLevel + delta;\r\n                        if(roundBracketsOpen > 0){\r\n                            il++;\r\n                        }\r\n                        if (il < 0) il = 0;\r\n\r\n                        let correctIndentation = il * tabSize;\r\n\r\n                        if (correctIndentation > currentIndentation) {\r\n                            this.insertSpaces(edits, t.position.line + 1, 0, correctIndentation - currentIndentation);\r\n                        } else if (correctIndentation < currentIndentation) {\r\n                            this.deleteSpaces(edits, t.position.line + 1, 0, currentIndentation - correctIndentation);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.space:\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment) {\r\n                            if (i > 0) {\r\n                                let lastToken = tokenlist[i - 1];\r\n                                if (lastToken.tt != TokenType.newline) {\r\n                                    if (t.position.length > 1) {\r\n                                        this.deleteSpaces(edits, t.position.line, t.position.column, t.position.length - 1);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.comma:\r\n                case TokenType.semicolon:\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt != TokenType.newline && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.tt == TokenType.space && lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line,\r\n                                    lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment && nextToken.tt != TokenType.space && nextToken.tt != TokenType.newline) {\r\n                            this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightSquareBracket:\r\n                    if (lastNonSpaceToken != null && lastNonSpaceToken.tt == TokenType.leftSquareBracket) {\r\n                        this.replaceBetween(lastNonSpaceToken, t, edits, \"\");\r\n\r\n                    }\r\n                    break;\r\n\r\n            }\r\n\r\n            // binary operator?\r\n            if (this.isBinaryOperator(t.tt)) {\r\n\r\n                let lowerGeneric = t.tt == TokenType.lower && this.lowerBelongsToGenericExpression(i, tokenlist);\r\n                let greaterGeneric = t.tt == TokenType.greater && this.greaterBelongsToGenericExpression(i, tokenlist);\r\n\r\n                if (lastTokenWasNewLine <= 0 && lastNonSpaceToken != null && [TokenType.leftBracket, TokenType.comma].indexOf(lastNonSpaceToken.tt) < 0) {\r\n\r\n                    if (i > 0) {\r\n                        let tokenBefore = tokenlist[i - 1];\r\n                        let spaces = (lowerGeneric || greaterGeneric) ? 0 : 1;\r\n                        if (tokenBefore.tt == TokenType.space) {\r\n                            if (tokenBefore.position.length != spaces) {\r\n                                this.insertSpaces(edits, tokenBefore.position.line,\r\n                                    tokenBefore.position.column, spaces - tokenBefore.position.length);\r\n                            }\r\n                        } else {\r\n                            if (spaces == 1)\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        let spaces = (lowerGeneric) ? 0 : 1;\r\n                        if (nextToken.tt == TokenType.space) {\r\n                            if (greaterGeneric && i < tokenlist.length - 2 && tokenlist[i + 2].tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (nextToken.position.length != spaces) {\r\n                                this.insertSpaces(edits, nextToken.position.line,\r\n                                    nextToken.position.column, spaces - nextToken.position.length);\r\n                            }\r\n                        } else {\r\n                            if (greaterGeneric && nextToken.tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (spaces == 1) this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            if (t.tt != TokenType.space && t.tt != TokenType.newline) {\r\n                lastNonSpaceToken = t;\r\n            }\r\n\r\n        }\r\n\r\n        this.deleteOverlappingRanges(edits);\r\n\r\n        return edits;\r\n\r\n    }\r\n    getNextNonSpaceToken(currentIndex: number, tokenlist: TokenList):  Token {\r\n\r\n        if(currentIndex == tokenlist.length - 1) return tokenlist[currentIndex];\r\n\r\n        let j = currentIndex + 1;\r\n        while(j < tokenlist.length - 1 && (tokenlist[j].tt == TokenType.space )){\r\n            j++;\r\n        }\r\n        return tokenlist[j];\r\n\r\n    }\r\n\r\n    lowerBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position + 1;\r\n        while (i < tokenlist.length) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.greater) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i++;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    greaterBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position - 1;\r\n        while (i >= 0) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.lower) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i--;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isBinaryOperator(token: TokenType) {\r\n        return token != null && token >= TokenType.modulo && token <= TokenType.equal;\r\n    }\r\n\r\n    private replaceBetween(lastNonSpaceToken: Token, t: Token, edits: monaco.languages.TextEdit[], text: string) {\r\n        let positionFrom = {\r\n            line: lastNonSpaceToken.position.line,\r\n            column: lastNonSpaceToken.position.column + lastNonSpaceToken.position.length\r\n        };\r\n        let positionTo = {\r\n            line: t.position.line,\r\n            column: t.position.column\r\n        };\r\n        if (positionFrom.line != positionTo.line ||\r\n            positionTo.column - positionFrom.column != text.length) {\r\n            this.replace(edits, positionFrom, positionTo, text);\r\n        }\r\n    }\r\n\r\n    deleteSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column + numberOfSpaces + (column == 0 ? 1 : 0),\r\n                endLineNumber: line\r\n            },\r\n            text: \"\"\r\n        });\r\n    }\r\n\r\n    insertSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n\r\n        if (numberOfSpaces < 0) {\r\n            this.deleteSpaces(edits, line, column, -numberOfSpaces);\r\n            return;\r\n        }\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column,\r\n                endLineNumber: line\r\n            },\r\n            text: \" \".repeat(numberOfSpaces)\r\n        });\r\n    }\r\n\r\n    replace(edits: monaco.languages.TextEdit[], positionFrom: { line: number; column: number; }, positionTo: { line: number; column: number; }, text: string) {\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: positionFrom.column,\r\n                startLineNumber: positionFrom.line,\r\n                endColumn: positionTo.column,\r\n                endLineNumber: positionTo.line\r\n            },\r\n            text: text\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\n\r\nexport type Theme = {\r\n    name: string,\r\n    monacoTheme: string,\r\n    cssColors: { [color: string]: string }\r\n}\r\n\r\nexport class ThemeManager {\r\n\r\n    themes: Theme[] = [];\r\n\r\n    constructor() {\r\n        this.initThemes();\r\n    }\r\n\r\n    switchTheme(name: string) {\r\n        for (let theme of this.themes) {\r\n            if (theme.name == name) {\r\n                this.internalSwitchTheme(theme);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    internalSwitchTheme(theme: Theme) {\r\n        monaco.editor.setTheme(theme.monacoTheme);\r\n\r\n        let root = document.documentElement;\r\n        for (const key of Object.keys(theme.cssColors)) {\r\n            const value = theme.cssColors[key]\r\n\r\n            root.style.setProperty(key, value);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    initThemes() {\r\n\r\n        this.themes.push({\r\n            name: \"dark\",\r\n            monacoTheme: \"myCustomThemeDark\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"#1e1e1e\",\r\n                \"--backgroundLight\": \"#252526\",\r\n                \"--backgroundHeading\": \"#37373d\",\r\n                \"--backgroundSelected\": \"#2a2d2e\",\r\n                \"--fontColorNormal\": \"#c2cccc\",\r\n                \"--fontColorLight\": \"#e7e7e7\",\r\n                \"--slider\": \"#414141\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#1e1e1e\",\r\n                \"--scrollbar-thumb\": \"#3e3e3e\",\r\n                \"--scrollbar-thumb-hover\": \"#5e5e5e\",\r\n                \"--scrollbar-thumb-active\": \"#7e7e7e\",\r\n                \"--submenu-hover\": \"#094771\",\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#616162\",\r\n                \"--file-hover\": \"hsla(0, 0%, 38%, 0.125)\",\r\n                \"--file-active\": \"#094771\",\r\n                \"--file-active-hover\": \"rgba(9, 71, 113, 0.827)\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"blue\",\r\n                \"--contextmenu-background\": \"#3c3c3c\",\r\n                \"--contextmenu-color\": \"rgb(212,212,212)\",\r\n                \"--contextmenu-hover-background\": \"#094771\",\r\n                \"--contextmenu-hover-color\": \"#ffffff\",\r\n                \"--error-filename\": \"#2a709e\",\r\n                \"--error-line-ative\": \"#094771\",\r\n                \"--error-line-hover\": \"rgba(96, 96, 96, 0.125)\",\r\n                \"--error-position\": \"#c0802d\",\r\n                \"--linecolumn\": \"#14c714\",\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#2b2b7d2f\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"rgb(85,85,85)\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#383838\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#252526\",\r\n                \"--editorTooltip-border\": \"#454545\",\r\n\r\n                \"--renameInput-color\": \"#ffffff\",\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"white\",\r\n                \"--bottomdiv-tabheading-active\": \"rgb(97,97,255)\",\r\n                \"--noErrorMessage\": \"rgb(37, 211, 37)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"#1e1e1e\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"white\",\r\n                \"--consoleEntryIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"white\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 51, 51)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--deValue\": \"white\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#383838\",\r\n                \"--helper-border-color\": \"#d4d4d4\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#ffffff\",\r\n                \"--runInputColor\": \"#ffffff\",\r\n                \"--runBackgroundColor\": \"rgba(255, 255, 255, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n        let highlightColor = \"#8080ff\";\r\n\r\n        this.themes.push({\r\n            name: \"light\",\r\n            monacoTheme: \"myCustomThemeLight\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"white\",\r\n                \"--backgroundLight\": \"#f3f3f3\",\r\n                \"--backgroundHeading\": \"#dcdcdc\",\r\n                \"--backgroundSelected\": \"#e8e8e8\",\r\n                \"--fontColorNormal\": \"#756161\",\r\n                \"--fontColorLight\": \"#756161\",\r\n                \"--slider\": \"#b0b0b0\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#e3e3e3\",\r\n                \"--scrollbar-thumb\": \"#bababa\",\r\n                \"--scrollbar-thumb-hover\": \"#8e8e8e\",\r\n                \"--scrollbar-thumb-active\": \"#616161\",\r\n                \"--submenu-hover\": highlightColor,\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#cfcfcf\",\r\n                \"--file-hover\": \"#e8e8e8\",\r\n                \"--file-active\": highlightColor,\r\n                \"--file-active-hover\": \"#a0a0ff\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"white\",\r\n                \"--contextmenu-background\": \"white\",\r\n                \"--contextmenu-color\": \"#756161\",\r\n                \"--contextmenu-hover-background\": highlightColor,\r\n                \"--contextmenu-hover-color\": \"#a0a0ff\",\r\n                \"--error-filename\": \"#ff0000\",\r\n                \"--error-line-ative\": \"#ffa0a0\",\r\n                \"--error-line-hover\": \"#ffc0c0\",\r\n                \"--error-position\": \"#804040\",\r\n                \"--linecolumn\": \"#14c714\", // TODO\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#babaec80\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"#c0c0c0\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#e0e0e0\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#e0e0e0\",\r\n                \"--editorTooltip-border\": \"#9d9d9d\",\r\n\r\n                \"--renameInput-color\": \"#000000\",\r\n\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"#424242\",\r\n                \"--bottomdiv-tabheading-active\": \"#424242\",\r\n                \"--noErrorMessage\": \"rgb(17, 180, 17)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"white\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"#0000a0\",\r\n                \"--consoleEntryIdentifier\": \"black\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"#756161\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 21, 21)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"black\",\r\n                \"--deValue\": \"#0000a0\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#f3f3f3\",\r\n                \"--helper-border-color\": \"#606060\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#303030\",\r\n                \"--runInputColor\": \"#000000\",\r\n                \"--runBackgroundColor\": \"rgba(0, 0, 0, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { TokenType } from \"../lexer/Token.js\";\r\n\r\ntype CheckFunction = (columnIdentifier: string, parameterValues: number[]) => string;\r\ntype OutputFunction = (value: any, parameterValues: number[]) => string;\r\n\r\nexport abstract class SQLType {\r\n\r\n    abstract canCastTo(type2: SQLType): boolean;\r\n\r\n    abstract getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType;\r\n\r\n    abstract getUnaryResultType(operator: TokenType): SQLType;\r\n\r\n    abstract getBinaryResult(operator: TokenType, value1: any, value2: any): any;\r\n\r\n    abstract toString(): string;\r\n\r\n    abstract getBaseTypeName(): string;\r\n\r\n}\r\n\r\nexport class SQLBaseType extends SQLType {\r\n    // Map<tokenType, Map<SecondType, ResultType>>\r\n    binaryResultTypes: Map<TokenType, Map<SQLBaseType, SQLBaseType>> = new Map();\r\n\r\n    unaryOperators: TokenType[] = [];\r\n\r\n    static baseTypes: SQLBaseType[] = [];\r\n    static baseTypeMap: Map<string, SQLBaseType> = new Map();\r\n\r\n    public canCastToList: string[];\r\n\r\n    constructor(public name: string, public parameterDescriptions: string[],\r\n        public checkFunction: CheckFunction, public outputFunction: OutputFunction, canCastToList: string[]) {\r\n        super();\r\n        this.canCastToList = canCastToList.slice(0);\r\n        let ownIndex = this.canCastToList.indexOf(name);\r\n        if(ownIndex >= 0) this.canCastToList.splice(ownIndex, 1);\r\n    }\r\n\r\n    static fromConstantType(tt: TokenType): SQLBaseType {\r\n        switch (tt) {\r\n            case TokenType.stringConstant:\r\n                return this.baseTypeMap.get(\"text\");\r\n            case TokenType.integerConstant:\r\n                return this.baseTypeMap.get(\"integer\");\r\n            case TokenType.floatingPointConstant:\r\n                return this.baseTypeMap.get(\"float\");\r\n            case TokenType.charConstant:\r\n                return this.baseTypeMap.get(\"text\");\r\n            case TokenType.booleanConstant:\r\n                return this.baseTypeMap.get(\"boolean\");\r\n            case TokenType.keywordNull:\r\n                return this.baseTypeMap.get(\"null\");\r\n        \r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    getBaseTypeName(): string {\r\n        return this.name;\r\n    }\r\n\r\n    toString(): string {\r\n        return this.name;\r\n    }\r\n\r\n    static getBaseType(name: string) {\r\n        if(name == 'char') name = 'varchar';\r\n        return this.baseTypeMap.get(name.toLocaleLowerCase());\r\n    }\r\n\r\n    static addBaseTypes(baseTypes: SQLBaseType[]) {\r\n        SQLBaseType.baseTypes = SQLBaseType.baseTypes.concat(baseTypes);\r\n        baseTypes.forEach(t => SQLBaseType.baseTypeMap.set(t.name, t));\r\n    }\r\n\r\n    addBinaryOperation(tokenType: TokenType | TokenType[], secondType: SQLBaseType, resultType: SQLBaseType, isCommutative: boolean = true) {\r\n\r\n        if (!Array.isArray(tokenType)) tokenType = [tokenType];\r\n\r\n        tokenType.forEach(t => {\r\n            let map: Map<SQLBaseType, SQLBaseType> = this.binaryResultTypes.get(t);\r\n            if (map == null) {\r\n                map = new Map();\r\n                this.binaryResultTypes.set(t, map);\r\n            }\r\n            map.set(secondType, resultType);\r\n            if (isCommutative && secondType != this) {\r\n                secondType.addBinaryOperation(t, this, resultType, false);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    canCastTo(type2: SQLType): boolean {\r\n\r\n        let bt2: SQLBaseType = type2 instanceof SQLBaseType ? type2 : type2[\"baseType\"];\r\n\r\n        return this.canCastToList.indexOf(bt2.name) >= 0 || this.name == bt2.name;\r\n\r\n    }\r\n\r\n    getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType {\r\n\r\n\r\n        let map = this.binaryResultTypes.get(operator);\r\n        if (map == null) return null;\r\n\r\n        let bt2: SQLBaseType = secondType instanceof SQLBaseType ? secondType : secondType[\"baseType\"];\r\n\r\n        return map.get(bt2);\r\n\r\n    }\r\n\r\n    getUnaryResultType(operator: TokenType): SQLType {\r\n        if([TokenType.isNull, TokenType.isNotNull].indexOf(operator) >= 0) return booleanType;\r\n        if(this.unaryOperators.indexOf(operator)>= 0) return this;\r\n    }\r\n\r\n    getBinaryResult(operator: TokenType, value1: any, value2: any): any {\r\n        switch (operator) {\r\n            case TokenType.concatenation:\r\n                if (value1 != null && value2 != null) return value1 + value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.plus:\r\n                if (value1 != null && value2 != null) return value1 + value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.minus:\r\n                if (value1 != null && value2 != null) return value1 - value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.multiplication:\r\n                if (value1 != null && value2 != null) return value1 * value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.division:\r\n                if (value1 != null && value2 != null) return value1 * value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.keywordAnd:\r\n                if (value1 != null && value2 != null) return value1 * value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.keywordOr:\r\n                if (value1 != null && value2 != null) return Math.max(value1, value2);\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.lower:\r\n                if (value1 != null && value2 != null) return value1 < value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.greater:\r\n                if (value1 != null && value2 != null) return value1 >= value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.lowerOrEqual:\r\n                if (value1 != null && value2 != null) return value1 <= value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.greaterOrEqual:\r\n                if (value1 != null && value2 != null) return value1 >= value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.equal:\r\n                return value1 == value2;\r\n            case TokenType.notEqual:\r\n                return value1 != value2;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nlet tens: number[] = [1, 10, 100, 1000, 100000, 100000, 1000000, 10000000, 100000000, 1000000000];\r\n\r\nexport class SQLDerivedType extends SQLType {\r\n\r\n    name: string;\r\n\r\n    constructor(public baseType: SQLBaseType, public parameterValues: number[]) {\r\n        super();\r\n        let parameters = parameterValues.join(\", \");\r\n        this.name = baseType.name + \"(\" + parameters + \")\";\r\n    }\r\n\r\n    toString(): string {\r\n        return this.name;\r\n    }\r\n\r\n    getBaseTypeName(): string {\r\n        return this.baseType.name;\r\n    }\r\n\r\n\r\n    canCastTo(type2: SQLType): boolean {\r\n\r\n        let bt2: SQLBaseType = type2 instanceof SQLBaseType ? type2 : type2[\"baseType\"];\r\n\r\n        return this.baseType.canCastToList.indexOf(bt2.name) >= 0 || this.baseType.name == bt2.name;\r\n\r\n    }\r\n\r\n    getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType {\r\n\r\n\r\n        let map = this.baseType.binaryResultTypes.get(operator);\r\n        if (map == null) return null;\r\n\r\n        let bt2: SQLBaseType = secondType instanceof SQLBaseType ? secondType : secondType[\"baseType\"];\r\n\r\n        let returnBaseType = map.get(bt2);\r\n\r\n        if (this.baseType == bt2 && this.baseType == returnBaseType && secondType instanceof SQLDerivedType) {\r\n            if (this.baseType.name == \"varchar\" || operator == TokenType.concatenation) {\r\n                return new SQLDerivedType(this.baseType, [this.parameterValues[0] + secondType.parameterValues[0]]);\r\n            }\r\n            if (this.baseType.name == \"decimal\") {\r\n                return new SQLDerivedType(this.baseType, [Math.max(this.parameterValues[0], secondType.parameterValues[0]), Math.max(this.parameterValues[1], secondType.parameterValues[1])]);\r\n            }\r\n        }\r\n\r\n        return map.get(bt2);\r\n\r\n    }\r\n\r\n    getUnaryResultType(operator: TokenType): SQLType {\r\n        return this.baseType.getUnaryResultType(operator);\r\n    }\r\n\r\n    getBinaryResult(operator: TokenType, value1: any, value2: any): any {\r\n        let result = this.baseType.getBinaryResult(operator, value1, value2);\r\n        if (this.name = \"varchar\") return result == null ? null : (\"\" + result).substr(0, this.parameterValues[0]);\r\n        if (this.name == \"decimal\") {\r\n            if (result == null) return null;\r\n            return Math.round(result * tens[this.parameterValues[1]]) / tens[this.parameterValues[1]];\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nlet textTypes = [\"varchar\", \"text\" ,\"tinytext\", \"mediumtext\", \"longtext\"];\r\n\r\nvar varcharType = new SQLBaseType(\"varchar\", [\"Maximale Länge\"], (ci, pv) => `check(length(${ci}) <= ${pv[0]})`,\r\n    (v: string, pv) => v.substring(0, pv[0]), textTypes);\r\n\r\nvar textType = new SQLBaseType(\"text\", [\"Maximale Länge\"], (ci, pv) => \"\", (v: string, pv) => v, textTypes.concat([\"date\", \"datetime\"]));\r\nvar tinyTextType = new SQLBaseType(\"tinyText\", [], (ci, pv) => \"\", (v: string, pv) => v, textTypes);\r\nvar mediumTextType = new SQLBaseType(\"mediumText\", [], (ci, pv) => \"\", (v: string, pv) => v, textTypes);\r\nvar longTextType = new SQLBaseType(\"longText\", [], (ci, pv) => \"\", (v: string, pv) => v, textTypes);\r\n\r\nlet floatTypes = [\"decimal\", \"numeric\", \"double\", \"real\", \"float\"];\r\n\r\nvar decimalType = new SQLBaseType(\"decimal\", [\"Gesamtzahl der Stellen\", \"Nachkommastellen\"], (ci, pv) => \"\",\r\n    (v: number, pv) => { let vk = Math.trunc(v); let nk = v - vk; return \"\" + vk + (pv[1] > 0 ? \".\" + Math.round(nk * tens[pv[1]]) : \"\") },\r\n    floatTypes);\r\nvar numericType = new SQLBaseType(\"numeric\", [\"Gesamtzahl der Stellen\", \"Nachkommastellen\"], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\nvar doubleType = new SQLBaseType(\"double\", [\"Gesamtzahl der Stellen\", \"Nachkommastellen\"], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\nvar realType = new SQLBaseType(\"real\", [], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\nvar floatType = new SQLBaseType(\"float\", [], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\n\r\nlet inttypes = [\"int\", \"integer\", \"tinyint\", \"smallint\", \"mediumint\", \"bigint\"];\r\nlet numberTypes = inttypes.concat(floatTypes);\r\n\r\nvar intType = new SQLBaseType(\"int\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar integerType = new SQLBaseType(\"integer\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar tinyIntType = new SQLBaseType(\"tinyint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar smallIntType = new SQLBaseType(\"smallint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar mediumIntType = new SQLBaseType(\"mediumint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar bigIntType = new SQLBaseType(\"bigint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\n\r\nvar dateType = new SQLBaseType(\"date\", [], (ci, pv) => `check(isDate(${ci}))`, (v: string, pv) => v, []);\r\nvar dateTimeType = new SQLBaseType(\"datetime\", [], (ci, pv) => `check(isDateTime(${ci}))`, (v: string, pv) => v, [\"timestamp\"]);\r\nvar timestampType = new SQLBaseType(\"timestamp\", [], (ci, pv) => `check(isDateTime(${ci}))`, (v: string, pv) => v, [\"datetime\"]);\r\n\r\nvar booleanType = new SQLBaseType(\"boolean\", [], (ci, pv) => `check(${ci} == 0 or ${ci} == 1)`, (v, pv) => v == 1 ? \"true\" : \"false\",\r\n    [\"varchar\", \"text\", \"decimal\", \"numeric\"]);\r\n\r\nvar nullType = new SQLBaseType(\"null\", [], (ci, pv) => \"\", (v, pv) => v,\r\n    []);\r\n\r\nlet numericTypes = [decimalType, numericType, doubleType, realType, floatType, intType, integerType, tinyIntType, smallIntType, mediumIntType, bigIntType];\r\n\r\nlet baseTypes = [varcharType, textType, tinyTextType, mediumTextType, longTextType,\r\n    dateType, dateTimeType, timestampType, booleanType, nullType].concat(numericTypes);\r\n\r\nSQLBaseType.addBaseTypes(baseTypes);\r\n\r\nvarcharType.addBinaryOperation(TokenType.concatenation, varcharType, varcharType);\r\nvarcharType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\ntextType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\nvarcharType.addBinaryOperation(TokenType.keywordLike, varcharType, booleanType);\r\nvarcharType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\ntextType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\n\r\nlet numericBinaryOperators: TokenType[] = [TokenType.plus, TokenType.minus, TokenType.multiplication, TokenType.division, TokenType.modulo];\r\nlet comparisonOperators: TokenType[] = [TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual];\r\n\r\nfor (let i = 0; i < numericTypes.length; i++) {\r\n    for (let j = i; j < numericTypes.length; j++) {\r\n        numericTypes[i].addBinaryOperation(numericBinaryOperators, numericTypes[j], numericTypes[j]);\r\n        numericTypes[i].addBinaryOperation(comparisonOperators, numericTypes[j], booleanType);\r\n    }\r\n    numericTypes[i].unaryOperators = [TokenType.minus];\r\n}\r\n\r\ndecimalType.addBinaryOperation(numericBinaryOperators, decimalType, decimalType);\r\n\r\nlet characterTypes = [varcharType, textType];\r\nfor (let i = 0; i < characterTypes.length; i++) {\r\n    for (let j = i; j < characterTypes.length; j++) {\r\n        characterTypes[i].addBinaryOperation(TokenType.concatenation, characterTypes[j], characterTypes[j]);\r\n        characterTypes[i].addBinaryOperation(comparisonOperators, characterTypes[j], booleanType);\r\n    }\r\n}\r\nvarcharType.addBinaryOperation(TokenType.concatenation, varcharType, varcharType);\r\n\r\nlet booleanOperations = [TokenType.keywordAnd, TokenType.keywordOr];\r\nbooleanType.addBinaryOperation(booleanOperations, booleanType, booleanType);\r\n\r\nbooleanType.unaryOperators = [TokenType.keywordNot];\r\n\r\nbaseTypes.forEach(bt => bt.unaryOperators = bt.unaryOperators.concat([TokenType.isNull, TokenType.isNotNull]));","import { param, timers } from \"jquery\";\r\nimport { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenList, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { ASTNode, BracketsNode, SelectNode, TermNode, TableOrSubqueryNode, TableNode, SubqueryNode, GroupByNode, OrderByNode, LimitNode, IdentifierNode, DotNode, ListNode, ColumnNode, InsertNode, ConstantNode, UnaryOpNode, CreateTableNode, CreateTableColumnNode, ForeignKeyInfo, UpdateNode, DeleteNode, DropTableNode, AlterTableNode, AlterTableKind } from \"./AST.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { Column } from \"./SQLTable.js\";\r\nimport { SQLBaseType } from \"./SQLTypes.js\";\r\n\r\ntype ASTNodes = ASTNode[];\r\n\r\ntype TokenTreeNode = {\r\n    type: \"sequence\" | \"alternatives\",\r\n    children: (TokenTreeNode | TokenType)[]\r\n} | TokenType;\r\n\r\nexport type SQLStatement = {\r\n    ast: ASTNode,\r\n    from: TextPosition,\r\n    to: TextPosition,\r\n    hasErrors: boolean,\r\n    acceptedBySQLite: boolean,\r\n    sql?: string,\r\n    sqlCleaned?: string\r\n}\r\n\r\n\r\nexport class Parser {\r\n\r\n    static operatorPrecedence: TokenType[][] = [\r\n        [TokenType.keywordOr], [TokenType.keywordAnd],\r\n        [TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual, TokenType.keywordLike],\r\n        [TokenType.concatenation, TokenType.plus, TokenType.minus], [TokenType.multiplication, TokenType.division, TokenType.modulo],\r\n        [TokenType.keywordIn, TokenType.keywordNotIn]\r\n    ];\r\n\r\n    module: Module;\r\n\r\n    pos: number;\r\n    tokenList: TokenList;\r\n\r\n    errorList: Error[];\r\n\r\n    lookahead = 4;\r\n    ct: Token[];\r\n    lastToken: Token;\r\n    cct: Token;\r\n    tt: TokenType;\r\n    position: TextPosition;\r\n    lastComment: Token;\r\n\r\n    endToken: Token = {\r\n        position: { line: 0, column: 0, length: 1 },\r\n        tt: TokenType.endofSourcecode,\r\n        value: \"das Ende des Programms\"\r\n    };\r\n\r\n    beginStatementKeywords = [\"select\", \"insert into\", \"update\", \"create table\", \"delete from\", \"alter table\", \"drop table\"];\r\n\r\n    constructor(private isInConsoleMode: boolean) {\r\n\r\n    }\r\n\r\n    parse(m: Module) {\r\n\r\n        this.module = m;\r\n\r\n        this.tokenList = m.tokenList;\r\n        this.errorList = [];\r\n\r\n        m.completionHints = new Map();\r\n\r\n        if (this.tokenList.length == 0) {\r\n            this.module.sqlStatements = [];\r\n            this.module.errors[1] = this.errorList;\r\n            this.module.addCompletionHint({ line: 0, column: 0, length: 0 }, { line: 20000, column: 100, length: 0 }, false, false, \r\n                this.beginStatementKeywords);\r\n            return;\r\n        }\r\n\r\n        this.pos = 0;\r\n        this.initializeLookahead();\r\n\r\n\r\n        let lastToken = this.tokenList[this.tokenList.length - 1];\r\n        this.endToken.position = { line: lastToken.position.line, column: lastToken.position.column + lastToken.position.length, length: 1 };\r\n\r\n        this.module.sqlStatements = this.parseMain();\r\n\r\n        this.module.errors[1] = this.errorList;\r\n\r\n    }\r\n\r\n    initializeLookahead() {\r\n\r\n        this.ct = [];\r\n\r\n        for (let i = 0; i < this.lookahead; i++) {\r\n\r\n            let token: Token = this.endToken;\r\n\r\n            while (true) {\r\n\r\n                if (this.pos >= this.tokenList.length) break;\r\n\r\n                let token1 = this.tokenList[this.pos]\r\n                if (token1.tt == TokenType.comment) {\r\n                    this.lastComment = token1;\r\n                }\r\n\r\n                if (token1.tt != TokenType.newline && token1.tt != TokenType.space && token1.tt != TokenType.comment) {\r\n                    token = token1;\r\n                    if (this.lastComment != null) {\r\n                        token.commentBefore = this.lastComment;\r\n                        this.lastComment = null;\r\n                    }\r\n                    break;\r\n                }\r\n\r\n                this.pos++;\r\n\r\n            }\r\n\r\n            this.ct.push(token);\r\n\r\n            if (i < this.lookahead - 1) {\r\n                this.pos++;\r\n            }\r\n\r\n        }\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    nextToken() {\r\n\r\n        let token: Token;\r\n        this.lastToken = this.cct;\r\n\r\n        while (true) {\r\n\r\n            this.pos++;\r\n\r\n            if (this.pos >= this.tokenList.length) {\r\n                token = this.endToken;\r\n                break;\r\n            }\r\n\r\n            token = this.tokenList[this.pos]\r\n            if (token.tt == TokenType.comment) {\r\n                this.lastComment = token;\r\n            }\r\n\r\n            if (token.tt != TokenType.newline && token.tt != TokenType.space && token.tt != TokenType.comment) {\r\n                token.commentBefore = this.lastComment;\r\n                this.lastComment = null;\r\n                break;\r\n            }\r\n\r\n        }\r\n\r\n        for (let i = 0; i < this.lookahead - 1; i++) {\r\n            this.ct[i] = this.ct[i + 1];\r\n        }\r\n\r\n        this.ct[this.lookahead - 1] = token;\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position?: TextPosition, quickFix?: QuickFix) {\r\n        if (position == null) position = Object.assign({}, this.position);\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    skip(tt: TokenType | TokenType[]){\r\n        if(!Array.isArray(tt)) tt = [tt];\r\n        if(tt.indexOf(this.tt) >= 0) this.nextToken();\r\n    }\r\n\r\n    expect(tt: TokenType | TokenType[], skip: boolean = true, invokeSemicolonAngel: boolean = false): boolean {\r\n        if (this.tt != tt && !(Array.isArray(tt) && tt.indexOf(this.tt) >= 0)) {\r\n            if (tt == TokenType.semicolon && this.tt == TokenType.endofSourcecode) {\r\n                return true;\r\n            }\r\n\r\n            let position: TextPosition = this.cct.position;\r\n            if (tt == TokenType.semicolon && this.lastToken != null) {\r\n\r\n                if (this.lastToken.position.line < position.line) {\r\n                    position = {\r\n                        line: this.lastToken.position.line,\r\n                        column: this.lastToken.position.column + this.lastToken.position.length,\r\n                        length: 1\r\n                    }\r\n                }\r\n            }\r\n\r\n            let quickFix: QuickFix = null;\r\n            if (tt == TokenType.semicolon && this.lastToken.position.line < this.cct.position.line &&\r\n                !this.isOperatorOrDot(this.lastToken.tt)\r\n            ) {\r\n                quickFix = {\r\n                    title: 'Strichpunkt hier einfügen',\r\n                    editsProvider: (uri) => {\r\n                        return [{\r\n                            resource: uri,\r\n                            edit: {\r\n                                range: {\r\n                                    startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position.column,\r\n                                    message: \"\",\r\n                                    severity: monaco.MarkerSeverity.Error\r\n                                },\r\n                                text: \";\"\r\n                            }\r\n                        }\r\n                        ];\r\n                    }\r\n                }\r\n\r\n                if (invokeSemicolonAngel) {\r\n                    this.module.main.getSemicolonAngel().register(position, this.module);\r\n                }\r\n            }\r\n\r\n            let expectedValuesArray: string[];\r\n\r\n            if (Array.isArray(tt)) {\r\n                expectedValuesArray = tt.map(token => TokenTypeReadable[token]);\r\n                let expectedTokens = expectedValuesArray.join(\", \");\r\n                this.pushError(\"Erwartet wird eines der folgenden: \" + expectedTokens + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            } else {\r\n                expectedValuesArray = [TokenTypeReadable[tt]];\r\n                this.pushError(\"Erwartet wird: \" + TokenTypeReadable[tt] + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            }\r\n\r\n            // if (!Array.isArray(tt) && tt != TokenType.identifier) {\r\n            //     this.module.addCompletionHint(this.getEndOfPosition(this.lastToken.position), this.getCurrentPositionPlus(1), false, false, expectedValuesArray);\r\n            // }\r\n\r\n            return false;\r\n        }\r\n\r\n        if (skip) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    getEndOfPosition(p: TextPosition): TextPosition {\r\n        return {\r\n            line: p.line,\r\n            column: p.column + p.length,\r\n            length: 0\r\n        }\r\n    }\r\n\r\n    isOperatorOrDot(tt: TokenType): boolean {\r\n        if (tt == TokenType.dot) return true;\r\n        for (let op of Parser.operatorPrecedence) {\r\n            for (let operator of op) {\r\n                if (tt == operator) return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    isEnd(): boolean {\r\n        return this.cct == this.endToken;\r\n    }\r\n\r\n    comesToken(token: TokenType | TokenType[], skip: boolean = false): boolean {\r\n\r\n        if (!Array.isArray(token)) {\r\n            let ret: boolean = this.tt == token;\r\n            if (ret && skip) this.nextToken();\r\n            return ret;\r\n        }\r\n\r\n        return token.indexOf(this.tt) >= 0;\r\n\r\n    }\r\n\r\n    getCurrentPosition(): TextPosition {\r\n        return Object.assign({}, this.position);\r\n    }\r\n\r\n    getCurrentPositionPlus(deltaColumns: number): TextPosition {\r\n        let pos = this.getCurrentPosition();\r\n        pos.column += deltaColumns;\r\n        return pos;\r\n    }\r\n\r\n    getEndOfCurrentToken(): TextPosition {\r\n\r\n        let position = this.getCurrentPosition();\r\n        position.column = position.column + this.position.length;\r\n        position.length = 0;\r\n\r\n        return position;\r\n    }\r\n\r\n    parseMain(): SQLStatement[] {\r\n\r\n        let mainProgram: SQLStatement[] = [];\r\n\r\n        let mainProgramEnd: TextPosition = {\r\n            column: 0,\r\n            line: 10000,\r\n            length: 1\r\n        }\r\n\r\n        let afterLastStatement: TextPosition = {\r\n            column: 0,\r\n            line: 0,\r\n            length: 0\r\n        }\r\n\r\n        while (!this.isEnd()) {\r\n\r\n            let oldPos = this.pos;\r\n\r\n            this.module.addCompletionHint(afterLastStatement, this.getCurrentPositionPlus(5), false, false, \r\n             this.beginStatementKeywords);\r\n\r\n            let errorsBeforeStatement: number = this.errorList.length;\r\n\r\n            while ([TokenType.space, TokenType.newline].indexOf(this.cct.tt) >= 0) {\r\n                this.nextToken();\r\n            }\r\n\r\n            let startPosition = this.getCurrentPosition();\r\n\r\n            let st = this.parseStatement();\r\n\r\n            afterLastStatement = {\r\n                line: this.lastToken.position.line + 1,\r\n                column: 0,\r\n                length: 0\r\n            }\r\n\r\n            while (this.tt == TokenType.semicolon) {\r\n                this.nextToken();\r\n            }\r\n\r\n            mainProgram.push({\r\n                ast: st,\r\n                from: startPosition,\r\n                to: this.getEndOfPosition(this.lastToken.position),\r\n                hasErrors: this.errorList.length > errorsBeforeStatement,\r\n                acceptedBySQLite: false\r\n            });\r\n            // console.log(mainProgram[mainProgram.length - 1]);\r\n\r\n            mainProgramEnd = this.getCurrentPosition();\r\n\r\n            // emergency-forward:\r\n            if (this.pos == oldPos) {\r\n                let beginStatementTokens: TokenType[] =\r\n                    [TokenType.keywordSelect, TokenType.keywordUpdate, TokenType.keywordCreate, TokenType.keywordInsert,\r\n                    TokenType.keywordDelete, TokenType.keywordDrop, TokenType.keywordAlter];\r\n\r\n                let firstBadToken: boolean = true;\r\n\r\n                while (!this.isEnd() && beginStatementTokens.indexOf(this.tt) < 0) {\r\n                    if ([TokenType.space, TokenType.newline].indexOf(this.tt) < 0 && firstBadToken) {\r\n                        this.pushError(\"Erwartet wird eines dieser Schlüsselwörter: \" + beginStatementTokens.map(t => TokenTypeReadable[t]).join(\", \")\r\n                            + \"; Gefunden wurde: \" + this.cct.value);\r\n                        firstBadToken = true;\r\n                    }\r\n                    this.nextToken();\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        this.module.addCompletionHint(afterLastStatement, { line: mainProgramEnd.line + 10, column: 0, length: 0 }, false, false, \r\n            this.beginStatementKeywords);\r\n\r\n        return mainProgram;\r\n\r\n    }\r\n\r\n\r\n\r\n    parseStatement(expectSemicolon: boolean = true): ASTNode {\r\n\r\n        let retStatements: ASTNode = null;\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordSelect:\r\n                return this.parseSelect();\r\n            case TokenType.keywordInsert:\r\n                return this.parseInsert();\r\n            case TokenType.keywordCreate:\r\n                return this.parseCreateTable();\r\n            case TokenType.keywordUpdate:\r\n                return this.parseUpdate();\r\n            case TokenType.keywordDelete:\r\n                return this.parseDelete();\r\n            case TokenType.keywordDrop:\r\n                return this.parseDropTable();\r\n            case TokenType.keywordAlter:\r\n                return this.parseAlterTable();\r\n            default:\r\n                let s = TokenTypeReadable[this.tt];\r\n                if (s == null) s = \"\";\r\n                if (s != this.cct.value) s += \"(\" + this.cct.value + \")\";\r\n                s += \" wird hier nicht erwartet.\";\r\n                this.pushError(s);\r\n                this.nextToken();\r\n                break;\r\n        }\r\n\r\n\r\n        return retStatements;\r\n\r\n    }\r\n\r\n\r\n    parseAlterTable(): AlterTableNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"alter\"\r\n\r\n        let node: AlterTableNode = {\r\n            type: TokenType.keywordAlter,\r\n            kind: null,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n        }\r\n\r\n        if (!this.expect(TokenType.keywordTable, true)) {\r\n            this.addCompletionHintHere(false, false, [\"table\"], 1);\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1);\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        this.addCompletionHintHere(false, false, [\"rename to\", \"rename column\", \"add column\", \"drop column\"], 1);\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordRename: this.parseRenameTableOrColumn(node); break;\r\n            case TokenType.keywordAdd: this.parseAddColumn(node); break;\r\n            case TokenType.keywordDrop: this.parseDropColumn(node); break;\r\n            default:\r\n                this.pushError(\"Erwartet wird rename to, rename column, add column oder drop column\");\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    parseRenameTableOrColumn(node: AlterTableNode) {\r\n\r\n        this.nextToken();\r\n        if (!this.comesToken(TokenType.keywordTo)) {\r\n            this.addCompletionHintHere(node.tableIdentifier, false, [\"column\", \"to\"], 3);\r\n        }\r\n        node.endPosition = this.getEndOfCurrentToken();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordTo:\r\n                this.nextToken();\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                node.kind = \"renameTable\";\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    node.newTableName = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    node.endPosition = this.getEndOfCurrentToken();\r\n                } else {\r\n                    this.pushError(\"Erwartet wird der neue Tabellenname.\");\r\n                }\r\n                return;\r\n            case TokenType.keywordColumn:\r\n                this.nextToken();\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                this.addCompletionHintHere(node.tableIdentifier, false, [], 3);\r\n                if (!this.comesToken(TokenType.identifier)) {\r\n                    this.pushError(\"Erwartet wird der Name einer Spalte der Tabelle \" + node.tableIdentifier + \".\");\r\n                    return;\r\n                }\r\n                node.kind = \"renameColumn\";\r\n                node.oldColumnName = <string>this.cct.value;\r\n                node.oldColumnPosition = this.getCurrentPosition();\r\n                this.nextToken();\r\n                this.addCompletionHintHere(false, false, [\"to\"], 3);\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                if (!this.expect(TokenType.keywordTo, true)) return;\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    node.newColumnName = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    node.endPosition = this.getEndOfCurrentToken();\r\n                } else {\r\n                    this.pushError(\"Erwartet wird der neue Spaltenname.\");\r\n                }\r\n                return;\r\n            default:\r\n                this.pushError(\"Erwartet wird das Schlüsselwort 'to' (zum Umbenennen der Tabelle) oder das Schlüsselwor 'column' (zum Umbenennen einer Spalte).\")\r\n                return;\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    parseDropColumn(node: AlterTableNode) {\r\n        this.nextToken(); // skip 'drop'\r\n        this.comesToken(TokenType.keywordColumn, true);\r\n        node.oldColumnPosition = this.getCurrentPosition();\r\n        this.addCompletionHintHere(node.tableIdentifier, false, [], 3);\r\n\r\n        node.kind = \"dropColumn\";\r\n        node.endPosition = this.getEndOfCurrentToken();\r\n\r\n        if (this.comesToken(TokenType.identifier)) {\r\n            node.oldColumnName = <string>this.cct.value;\r\n            this.nextToken();\r\n        } else {\r\n            this.pushError(\"Erwartet wird der Bezeichner der Spalte, die gelöscht werden soll.\");\r\n        }\r\n\r\n    }\r\n\r\n    parseAddColumn(node: AlterTableNode) {\r\n        this.nextToken(); // skip 'add'\r\n        node.kind = \"addColumn\";\r\n        this.comesToken(TokenType.keywordColumn, true);\r\n        node.columnDefBegin = this.getCurrentPosition();\r\n        node.columnDef = this.parseColumnDefinition(false);\r\n    }\r\n\r\n    parseDropTable(): DropTableNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"Delete\"\r\n\r\n        let node: DropTableNode = {\r\n            type: TokenType.keywordDrop,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null\r\n        }\r\n\r\n        if (!this.expect(TokenType.keywordTable, true)) {\r\n            this.addCompletionHintHere(false, false, [\"table\"], 1);\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1, \"\", \";\");\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n\r\n    }\r\n\r\n    parseDelete(): DeleteNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"Delete\"\r\n\r\n        let node: DeleteNode = {\r\n            type: TokenType.keywordDelete,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n            whereNode: null,\r\n            whereNodeBegin: null,\r\n            whereNodeEnd: null\r\n        }\r\n\r\n        if (!this.expect(TokenType.keywordFrom, true)) {\r\n            this.addCompletionHintHere(false, false, [\"from\"], 1);\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1, \"\", \" where\\n\\t\");\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        this.addCompletionHintHere(false, false, [\"where\\n\\t\"], 1);\r\n        if (!this.expect(TokenType.keywordWhere)) return node;\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n\r\n        node.whereNodeBegin = this.getEndOfPosition(this.lastToken.position);\r\n        node.whereNode = this.parseTerm();\r\n        node.whereNodeEnd = this.getCurrentPosition();\r\n\r\n        this.module.addCompletionHint(node.whereNodeBegin, this.getCurrentPositionPlus(3), node.tableIdentifier, false, []);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n        return node;\r\n\r\n    }\r\n\r\n    parseUpdate(): UpdateNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"update\"\r\n\r\n        let node: UpdateNode = {\r\n            type: TokenType.keywordUpdate,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n            columnIdentifiers: [],\r\n            columnIdentifierPositions: [],\r\n            values: [],\r\n            valuePosBegin: [],\r\n            valuePosEnd: [],\r\n            whereNode: null,\r\n            whereNodeBegin: null,\r\n            whereNodeEnd: null\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1, \"\", \" set\\n\\t\");\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        this.addCompletionHintHere(false, false, [\"set\\n\\t\"], 1);\r\n        if (!this.expect(TokenType.keywordSet)) return node;\r\n        let first: boolean = true;\r\n        do {\r\n            this.addCompletionHintHere(node.tableIdentifier, false, first ? [] : ['where'], 1, null, \" = \");\r\n            first = false;\r\n            if (this.tt != TokenType.identifier) {\r\n                this.pushError(\"Hier wird der Bezeichner derjenigen Spalte der Tabelle \" + node.tableIdentifier + \" erwaretet, deren Wert verändert werden soll.\", \"error\");\r\n                break;\r\n            }\r\n\r\n            node.columnIdentifiers.push(<string>this.cct.value);\r\n            node.columnIdentifierPositions.push(this.getCurrentPosition());\r\n            this.nextToken();\r\n\r\n            this.expect(TokenType.equal, true);\r\n\r\n            node.valuePosBegin.push(this.getCurrentPosition());\r\n            node.values.push(this.parseTerm());\r\n            node.valuePosEnd.push(this.getCurrentPosition());\r\n\r\n        } while (this.comesToken(TokenType.comma, true));\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        if (this.lastToken.tt != TokenType.comma || this.comesToken(TokenType.keywordWhere)) {\r\n            if (!this.expect(TokenType.keywordWhere, true)) return node;\r\n\r\n            node.whereNodeBegin = this.getEndOfPosition(this.lastToken.position);\r\n            node.whereNode = this.parseTerm();\r\n            node.whereNodeEnd = this.getCurrentPosition();\r\n\r\n            this.module.addCompletionHint(node.whereNodeBegin, node.whereNodeEnd, node.tableIdentifier, false, []);\r\n\r\n            node.endPosition = this.getCurrentPosition();\r\n        } else {\r\n            this.comesToken(TokenType.keywordWhere, true); // skip where, if present\r\n        }\r\n        return node;\r\n\r\n    }\r\n\r\n    parseCreateTable(): CreateTableNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"create\"\r\n\r\n        if(!this.expect(TokenType.keywordTable, true)){\r\n            this.module.addCompletionHint(startPosition, this.getCurrentPositionPlus(3), false, false, [\"table\"]);\r\n        }\r\n\r\n        let identifier = \"\";\r\n        if (this.expect(TokenType.identifier, false)) {\r\n            identifier = <string>this.cct.value;\r\n            this.module.addCompletionHint(this.getCurrentPosition(), this.getCurrentPositionPlus(identifier.length + 3), false, false, [\"(\"]);\r\n            this.nextToken();\r\n        }\r\n\r\n        let node: CreateTableNode = {\r\n            type: TokenType.keywordCreate,\r\n            identifier: identifier,\r\n            position: startPosition,\r\n            endPosition: null,\r\n            columnList: [],\r\n            symbolTable: null,\r\n            combinedPrimaryKeyColumns: [],\r\n            foreignKeyInfoList: []\r\n        }\r\n\r\n        if (!this.expect(TokenType.leftBracket, true)) return node;\r\n\r\n        let primaryKeyAlreadyDefined: boolean = false;\r\n        let first: boolean = true;\r\n\r\n        while (this.tt != TokenType.rightBracket) {\r\n            if (!first) this.expect(TokenType.comma, true);\r\n            first = false;\r\n            switch (this.tt) {\r\n                case TokenType.keywordPrimary:\r\n                    if (primaryKeyAlreadyDefined) this.pushError(\"Je Tabelle darf nur ein einziger Primärschlüssel definiert werden.\", \"error\", this.getCurrentPosition());\r\n                    this.parsePrimaryKeyTerm(primaryKeyAlreadyDefined, node);\r\n                    primaryKeyAlreadyDefined = true;\r\n                    break;\r\n                case TokenType.keywordForeign:\r\n                    this.parseForeignKeyTerm(node);\r\n                    break;\r\n                case TokenType.identifier:\r\n                    let columnNode = this.parseColumnDefinition(primaryKeyAlreadyDefined);\r\n                    node.columnList.push(columnNode);\r\n                    primaryKeyAlreadyDefined = primaryKeyAlreadyDefined || columnNode.isPrimary;\r\n                    break;\r\n                default:\r\n                    this.pushError(TokenTypeReadable[this.tt] + \" wird hier nicht erwartet.\", \"error\");\r\n                    break;\r\n            }\r\n            if (!this.comesToken(TokenType.comma)) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        while([TokenType.keywordEngine, TokenType.keywordDefault, TokenType.keywordCollate].indexOf(this.tt) >= 0){\r\n            switch (this.tt) {\r\n                case TokenType.keywordCollate:\r\n                    this.nextToken();\r\n                    this.skip(TokenType.equal);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordEngine:\r\n                    this.nextToken();\r\n                    this.skip(TokenType.equal);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordDefault:\r\n                    this.nextToken();\r\n                    this.expect(TokenType.keywordCharset, true);\r\n                    this.skip(TokenType.equal);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n            }\r\n\r\n        }\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n    parseForeignKeyTerm(node: CreateTableNode) {\r\n        let referencesPos = this.getCurrentPosition();\r\n        this.nextToken();\r\n        this.expect(TokenType.keywordKey);\r\n\r\n        if (this.comesToken(TokenType.identifier)) {\r\n            let fki: ForeignKeyInfo = {\r\n                column: <string>this.cct.value,\r\n                referencesColumn: null,\r\n                referencesTable: null,\r\n                referencesPosition: referencesPos\r\n            }\r\n            this.nextToken();\r\n            this.expect(TokenType.keywordReferences, false);\r\n            this.nextToken(); // skip \"references\"\r\n            this.addCompletionHintHere(false, true, []);\r\n            if (this.expect(TokenType.identifier, false)) {\r\n                fki.referencesTable = <string>this.cct.value;\r\n                this.nextToken();\r\n                let pos0 = this.lastToken.position;\r\n                let pos1 = this.getCurrentPosition();\r\n                this.module.addCompletionHint(this.getEndOfPosition(pos0), pos1, fki.referencesTable, false, []);\r\n\r\n                if (this.expect(TokenType.leftBracket, true)) {\r\n\r\n                    if (this.expect(TokenType.identifier, false)) {\r\n                        fki.referencesColumn = <string>this.cct.value;\r\n                        this.nextToken();\r\n                        node.foreignKeyInfoList.push(fki);\r\n                    } else {\r\n                        this.pushError(\"Erwartet wird der Bezeichner einer Spalte. Gefunden wurde: \" + this.cct.value);\r\n                    }\r\n\r\n                    this.expect(TokenType.rightBracket, true);\r\n                }\r\n            } else {\r\n                this.pushError(\"Erwartet wird der Bezeichner einer Tabelle. Gefunden wurde: \" + this.cct.value);\r\n            }\r\n\r\n        } else {\r\n            this.pushError(\"Erwartet wird der Bezeichner ein Spalte\");\r\n        }\r\n\r\n    }\r\n\r\n    parsePrimaryKeyTerm(primaryKeyAlreadyDefined: boolean, node: CreateTableNode) {\r\n        if (primaryKeyAlreadyDefined) {\r\n            this.pushError(\"Die Tabelle kann nur einen einzigen Primärschlüssel haben.\");\r\n        }\r\n        this.nextToken(); // skip \"primary\"\r\n        this.expect(TokenType.keywordKey, true);\r\n\r\n        let columns: string[] = node.columnList.map(c => c.identifier);\r\n\r\n        this.addCompletionHintHere(false, false, columns);\r\n        if (this.comesToken(TokenType.leftBracket)) {\r\n            this.addCompletionHintHere(false, false, columns);\r\n            this.nextToken();\r\n\r\n            while (true) {\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    node.combinedPrimaryKeyColumns.push(<string>this.cct.value);\r\n                    this.nextToken();\r\n                    this.addCompletionHintHere(false, false, columns, 1);\r\n                    if (!this.comesToken(TokenType.comma)) {\r\n                        break;\r\n                    } else {\r\n                        this.nextToken();\r\n                        this.addCompletionHintHere(false, false, columns);\r\n                    }\r\n                } else {\r\n                    this.pushError(\"Der Bezeichner einer Spalte wird erwartet. Gefunden wurde: \" + this.cct.value);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        } else {\r\n            this.pushError(\"( erwartet.\");\r\n        }\r\n    }\r\n\r\n    parseColumnDefinition(primaryKeyAlreadyDefined: boolean): CreateTableColumnNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n        let identifier = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        let node: CreateTableColumnNode = {\r\n            type: TokenType.columnDef,\r\n            identifier: identifier,\r\n            isPrimary: false,\r\n            isAutoIncrement: false,\r\n            position: position,\r\n            baseType: null,\r\n            notNull: false\r\n        }\r\n\r\n        this.parseType(node, primaryKeyAlreadyDefined);\r\n\r\n        return node;\r\n\r\n    }\r\n\r\n    addCompletionHintHere(hintColumns: boolean | string, hintTables: boolean, hints: string[], additionalColumns: number = 0, praefix: string = \"\", suffix: string = \"\") {\r\n        let pos0 = this.lastToken.position;\r\n        let pos1 = this.getCurrentPosition();\r\n        pos1.column += 1 + additionalColumns\r\n        this.module.addCompletionHint(this.getEndOfPosition(pos0), pos1, hintColumns, hintTables, hints, null, praefix, suffix);\r\n    }\r\n\r\n    parseType(node: CreateTableColumnNode, primaryKeyAlreadyDefined: boolean) {\r\n\r\n        let datatypes = SQLBaseType.baseTypes.map(type => type.toString());\r\n        this.addCompletionHintHere(false, false, datatypes);\r\n\r\n        if (!this.expect(TokenType.identifier, false)) {\r\n            this.pushError(\"Erwartet wird ein Datentyp. Gefunden wurde: \" + this.cct.value);\r\n            return;\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n\r\n        let type = SQLBaseType.getBaseType(identifier);\r\n        if (type == null) {\r\n            this.pushError(\"Erwartet wird ein Datentyp. Gefunden wurde: \" + identifier);\r\n        }\r\n        node.baseType = type;\r\n        this.nextToken();\r\n\r\n        if (this.tt == TokenType.leftBracket) {\r\n            this.nextToken();\r\n            node.parameters = [];\r\n            //@ts-ignore\r\n            while (this.tt == TokenType.integerConstant) {\r\n                node.parameters.push(<number>this.cct.value);\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.comma) break;\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.integerConstant) {\r\n                    this.pushError(\"Erwartet wird eine ganze Zahl, gefunden wurde: \" + this.cct.value);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (type != null && node.parameters.length > type.parameterDescriptions.length) {\r\n                this.pushError(\"Der Datentyp \" + type.toString() + \" hat höchstens \" + type.parameterDescriptions.length + \" Parameter.\");\r\n            }\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        }\r\n\r\n        // primary key autoincrement\r\n        // references table(column)\r\n        // not null\r\n\r\n        this.addCompletionHintHere(false, false, [\"primary key\", \"references\", \"not null\"]);\r\n\r\n        let alreadySeenKeywords: TokenType[] = [];\r\n\r\n        while ([TokenType.keywordAutoincrement, TokenType.keywordKey, TokenType.keywordPrimary, TokenType.keywordNot, TokenType.keywordReferences, TokenType.keywordCollate, TokenType.keywordDefault].indexOf(this.tt) >= 0) {\r\n            if(alreadySeenKeywords.indexOf(this.tt)>=0){\r\n                this.pushError('Das Schlüsselwort ' + TokenTypeReadable[this.tt] + \" darf bei der Definition einer Spalte nicht öfters als ein Mal vorkommen.\");\r\n            }\r\n\r\n            alreadySeenKeywords.push(this.tt);\r\n\r\n            switch (this.tt) {\r\n                case TokenType.keywordAutoincrement:\r\n                    this.nextToken();\r\n                    node.isAutoIncrement = true;\r\n                break;\r\n                case TokenType.keywordPrimary:\r\n                    if (primaryKeyAlreadyDefined) this.pushError(\"In einer Tabelle darf es nur einen einzigen primary key geben.\");\r\n                    this.nextToken(); // skip \"primary\"\r\n                    if (!this.expect(TokenType.keywordKey, true)) {\r\n                        this.addCompletionHintHere(false, false, [\"key\"]);\r\n                    } else {\r\n                        this.addCompletionHintHere(false, false, [\"autoincrement, \\n\"])\r\n                    }\r\n                    node.isPrimary = true;\r\n                    break;\r\n                case TokenType.keywordReferences:\r\n                    node.referencesPosition = this.getCurrentPosition();\r\n                    this.nextToken(); // skip \"references\"\r\n                    this.addCompletionHintHere(false, true, []);\r\n                    if (this.expect(TokenType.identifier, false)) {\r\n                        node.referencesTable = <string>this.cct.value;\r\n                        this.nextToken();\r\n                        let pos0 = this.lastToken.position;\r\n                        let pos1 = this.getCurrentPosition();\r\n                        this.module.addCompletionHint(this.getEndOfPosition(pos0), pos1, node.referencesTable, false, []);\r\n\r\n                        if (this.expect(TokenType.leftBracket, true)) {\r\n\r\n                            if (this.expect(TokenType.identifier, false)) {\r\n                                node.referencesColumn = <string>this.cct.value;\r\n                                this.nextToken();\r\n                            } else {\r\n                                this.pushError(\"Erwartet wird der Bezeichner einer Spalte. Gefunden wurde: \" + this.cct.value);\r\n                            }\r\n\r\n                            this.expect(TokenType.rightBracket, true);\r\n                        }\r\n                    } else {\r\n                        this.pushError(\"Erwartet wird der Bezeichner einer Tabelle. Gefunden wurde: \" + this.cct.value);\r\n                    }\r\n                    break;\r\n                case TokenType.keywordNot:\r\n                    this.nextToken();\r\n                    if (!this.expect(TokenType.keywordNull, true)) {\r\n                        this.addCompletionHintHere(false, false, [\"null\"]);\r\n                    } else {\r\n                        this.addCompletionHintHere(false, false, [\"references\"]);\r\n                    }\r\n                    node.notNull = true;\r\n                    break;\r\n                case TokenType.keywordCollate:\r\n                    this.nextToken();\r\n                    node.collate = <string>this.cct.value;\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordDefault:\r\n                    this.nextToken();\r\n                    node.defaultValue = <string>this.cct.value;\r\n                    //@ts-ignore\r\n                    if(this.tt == TokenType.keywordNull){\r\n                        this.nextToken();\r\n                        break;\r\n                    } else if([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.stringConstant].indexOf(this.tt) >= 0){\r\n                        let constantType = SQLBaseType.fromConstantType(this.tt);\r\n                        if(!constantType.canCastTo(type)){\r\n                            this.pushError(\"Die Konstante hinter 'default' passt nicht zum Datentyp der Spalte.\");\r\n                        }\r\n                        this.nextToken();                        \r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n\r\n        if(node.isAutoIncrement && !node.isPrimary){\r\n            this.pushError(\"autoincrement gibt es nur bei Primärschlüsseln, d.h. es fehlt wahrscheinlich 'primary key'.\", \"error\", node.position);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    parseInsert(): InsertNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"insert\"\r\n\r\n        this.expect(TokenType.keywordInto, true);\r\n\r\n        let node: InsertNode = {\r\n            type: TokenType.keywordInsert,\r\n            position: startPosition,\r\n            endPosition: this.getCurrentPosition(),\r\n            valuesPosition: null,\r\n            columnsPosition: null,\r\n            symbolTable: null,\r\n            columnList: [],\r\n            values: [],\r\n            table: null\r\n        }\r\n\r\n        if (this.tt == TokenType.identifier) {\r\n            node.table = {\r\n                type: TokenType.table,\r\n                identifier: <string>this.cct.value,\r\n                alias: null,\r\n                position: this.getCurrentPosition()\r\n            }\r\n            node.columnsPosition = { line: node.table.position.line, column: node.table.position.column + node.table.position.length, length: 0 };\r\n            this.nextToken();\r\n        } else {\r\n            this.pushError(\"Hier wird der Bezeichner einer Tabelle erwartet. Gefunden wurde: \" + this.cct.value, \"error\");\r\n        }\r\n\r\n        if (this.tt == TokenType.leftBracket) {\r\n\r\n            this.nextToken();\r\n            let first: boolean = true;\r\n            //@ts-ignore\r\n            while (first || this.tt == TokenType.comma) {\r\n\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.identifier) {\r\n                    node.columnList.push({\r\n                        type: TokenType.identifier,\r\n                        identifier: this.cct.value + \"\",\r\n                        position: this.getCurrentPosition()\r\n                    })\r\n\r\n                } else {\r\n                    this.pushError(\"Erwartet wird der Bezeichner einer Spalte. Gefunden wurde: \" + this.cct.value, \"error\");\r\n                }\r\n                this.nextToken();\r\n            }\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        }\r\n\r\n        node.valuesPosition = this.getCurrentPosition();\r\n        this.expect(TokenType.keywordValues, true);\r\n\r\n        this.parseValueLists(node.values);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n    parseValueLists(values: ConstantNode[][]) {\r\n        let insideListTokens = [TokenType.keywordNull, TokenType.charConstant, TokenType.stringConstant, TokenType.booleanConstant, TokenType.floatingPointConstant, TokenType.integerConstant];\r\n\r\n        let outerFirst: boolean = true;\r\n\r\n        while (outerFirst || this.tt == TokenType.comma) {\r\n            if (!outerFirst) {\r\n                this.nextToken(); // consume comma\r\n            }\r\n            outerFirst = false;\r\n            let leftBracketPosition = this.getCurrentPosition();\r\n            if (!this.expect(TokenType.leftBracket, true)) {\r\n                break;\r\n            }\r\n            let line: ConstantNode[] = [];\r\n            let first: boolean = true;\r\n            //@ts-ignore\r\n            while (first || this.tt == TokenType.comma) {\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n                if (this.tt == TokenType.identifier && this.cct.isDoubleQuotedIdentifier) {\r\n                    this.tt = TokenType.stringConstant\r\n                }\r\n                //@ts-ignore\r\n                if (insideListTokens.indexOf(this.tt) < 0) {\r\n                    this.pushError(\"Erwartet wird eine Konstante oder null. Gefunden wurde: \" + this.cct.value, \"error\");\r\n                    this.nextToken();\r\n                } else {\r\n                    line.push({\r\n                        constantType: this.tt,\r\n                        position: this.getCurrentPosition(),\r\n                        constant: this.cct.value,\r\n                        type: TokenType.constantNode\r\n                    });\r\n                    this.nextToken();\r\n                }\r\n            }\r\n            this.expect(TokenType.rightBracket, true);\r\n            if (line.length == 0) {\r\n                this.pushError(\"Eine Zeile kann nur dann in die Tabelle eingefügt werden, wenn sie mindestens einen Spaltenwert besitzt.\", \"error\", leftBracketPosition);\r\n            } else {\r\n                values.push(line);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    parseSelect(): SelectNode {\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"select\"\r\n\r\n        let columnListStart: TextPosition = {\r\n            line: startPosition.line,\r\n            column: startPosition.column + 6,\r\n            length: 1\r\n        };\r\n\r\n        let node: SelectNode = {\r\n            type: TokenType.keywordSelect,\r\n            position: startPosition,\r\n            endPosition: this.getCurrentPosition(),\r\n            symbolTable: null,\r\n            columnList: [],\r\n            fromNode: null,\r\n            whereNode: null,\r\n            parentStatement: null\r\n        }\r\n\r\n        node.columnList = this.parseColumnList([TokenType.keywordFrom], true);\r\n        \r\n        let columnListKeywordArray = [\"distinct\", \"as\", \"*\"];\r\n        if(node.columnList.findIndex(c => c.type == TokenType.allColumns) >= 0){\r\n            columnListKeywordArray.pop();\r\n        }\r\n\r\n        this.module.addCompletionHint(columnListStart, this.getCurrentPositionPlus(1), true, true, columnListKeywordArray)\r\n\r\n        // parse from ...\r\n        if (!this.expect(TokenType.keywordFrom, true)) {\r\n            columnListKeywordArray.unshift(\"from\");\r\n            return null;\r\n        }\r\n\r\n        node.fromStartPosition = { line: this.lastToken.position.line, column: this.lastToken.position.column + this.lastToken.position.length, length: 0 };\r\n\r\n        let dontHint: string[] = [];\r\n        node.fromNode = this.parseTableOrSubQuery(dontHint);\r\n\r\n        let fromListKeywordArray = [\"join\", \"left\", \"right\", \"inner\", \"outer\", \"natural\", \"on\", \"as\", \", \"];\r\n        fromListKeywordArray.splice(fromListKeywordArray.indexOf(this.lastToken.value + \"\"), 1);\r\n        this.module.addCompletionHint(node.fromStartPosition, this.getCurrentPositionPlus(2), false, true, fromListKeywordArray, dontHint)\r\n        node.fromEndPosition = this.getCurrentPosition();\r\n\r\n        // parse where...\r\n\r\n        let whereKeywordArray = [\"like\"];\r\n        if (this.tt == TokenType.keywordWhere) {\r\n            let position = this.getCurrentPosition();\r\n            let whereStart = this.getCurrentPosition();\r\n            this.nextToken();\r\n            node.whereNode = this.parseTerm();\r\n            this.module.addCompletionHint(whereStart, this.getCurrentPositionPlus(2), true, true, whereKeywordArray)\r\n            // if (node.whereNode != null) node.whereNode.position = position;\r\n        } else {\r\n            fromListKeywordArray.push(\"where\");\r\n        }\r\n\r\n        let groupKeywordArray = [];\r\n        if (this.tt == TokenType.keywordGroup) {\r\n            let groupStart = this.getCurrentPosition();\r\n            node.groupByNode = this.parseGroupBy();\r\n            this.module.addCompletionHint(groupStart, this.getCurrentPosition(), true, true, groupKeywordArray);\r\n        } else {\r\n            whereKeywordArray.push(\"group by\");\r\n        }\r\n\r\n        if (this.tt == TokenType.keywordOrder) {\r\n            let orderStart = this.getCurrentPosition();\r\n            node.orderByNode = this.parseOrderBy();\r\n            this.module.addCompletionHint(orderStart, this.getCurrentPosition(), true, true, [\"asc\", \"desc\"]);\r\n        } else {\r\n            whereKeywordArray.push(\"order by\");\r\n            groupKeywordArray.push(\"order by\");\r\n        }\r\n\r\n        if (this.tt == TokenType.keywordLimit) {\r\n            node.limitNode = this.parseLimit();\r\n        }\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n        node.endPosition.column += 3;\r\n\r\n        return node;\r\n    }\r\n\r\n    parseLimit(): LimitNode {\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n        let numberOfRows: TermNode = this.parseTerm();\r\n        let ln: LimitNode = {\r\n            type: TokenType.keywordLimit,\r\n            position: position,\r\n            numberOfRows: numberOfRows\r\n        }\r\n        if (this.tt == TokenType.keywordOffset) {\r\n            this.nextToken();\r\n            ln.offset = this.parseTerm();\r\n        }\r\n        return ln;\r\n    }\r\n\r\n    parseGroupBy(): GroupByNode {\r\n        let position = this.getCurrentPosition();\r\n        this.expect(TokenType.keywordGroup, true);\r\n        this.expect(TokenType.keywordBy, true);\r\n        let gbn: GroupByNode = {\r\n            type: TokenType.keywordGroup,\r\n            columnList: [],\r\n            position: position\r\n        }\r\n        let tokenTypesAfterGroupBy = [TokenType.keywordHaving, TokenType.keywordSelect, TokenType.keywordOrder, TokenType.keywordLimit, TokenType.rightBracket, TokenType.semicolon];\r\n        gbn.columnList = this.parseColumnList(tokenTypesAfterGroupBy, false).map(columnNode => columnNode.term);\r\n        if (this.tt == TokenType.keywordHaving) {\r\n            this.nextToken();\r\n            gbn.having = this.parseTerm();\r\n        }\r\n        return gbn;\r\n    }\r\n\r\n    parseOrderBy(): OrderByNode[] {\r\n        this.expect(TokenType.keywordOrder, true);\r\n        this.expect(TokenType.keywordBy, true);\r\n\r\n        let obnList: OrderByNode[] = [];\r\n        let first: boolean = true;\r\n\r\n        do {\r\n            if (first) {\r\n                first = false;\r\n            } else {\r\n                this.expect(TokenType.comma, true);\r\n            }\r\n            let column: TermNode = this.parseTerm();\r\n            let obn: OrderByNode = {\r\n                type: TokenType.keywordOrder,\r\n                position: this.getCurrentPosition(),\r\n                column: column\r\n            }\r\n            if ([TokenType.keywordAscending, TokenType.keywordDescending].indexOf(this.tt) >= 0) this.nextToken();\r\n            if (this.tt == TokenType.keywordNulls) {\r\n                this.nextToken();\r\n                this.expect([TokenType.keywordFirst, TokenType.keywordLast], true);\r\n            }\r\n            obnList.push(obn);\r\n        } while (this.tt == TokenType.comma);\r\n\r\n        return obnList;\r\n    }\r\n\r\n    parseTableOrSubQuery(dontHint: string[]): TableOrSubqueryNode {\r\n\r\n        let leftSide: TableOrSubqueryNode = this.parseAtomicTableOrSubQuery(dontHint);\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        while (this.parseJoinOperator()) {\r\n\r\n            let rightSide: TableOrSubqueryNode = this.parseAtomicTableOrSubQuery(dontHint);\r\n\r\n            leftSide = {\r\n                type: TokenType.keywordJoin,\r\n                firstOperand: leftSide,\r\n                secondOperand: rightSide,\r\n                position: position,\r\n            }\r\n\r\n            if (this.tt == TokenType.keywordOn) {\r\n                leftSide.on = this.parseTerm();\r\n            }\r\n\r\n        }\r\n\r\n        return leftSide;\r\n\r\n    }\r\n\r\n    parseJoinOperator(): boolean {\r\n        if (this.tt == TokenType.comma) {\r\n            this.nextToken();\r\n            return true;\r\n        }\r\n        if (this.tt == TokenType.keywordNatural) this.nextToken();\r\n        switch (this.tt) {\r\n            case TokenType.keywordLeft:\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.keywordOuter) this.nextToken();\r\n                return this.expect(TokenType.keywordJoin, true);\r\n            case TokenType.keywordInner:\r\n            case TokenType.keywordCross:\r\n                this.nextToken();\r\n                return this.expect(TokenType.keywordJoin, true);\r\n            case TokenType.keywordJoin:\r\n                this.nextToken();\r\n                return true;\r\n            default: return false;\r\n        }\r\n    }\r\n\r\n    parseAtomicTableOrSubQuery(dontHint: string[]): TableOrSubqueryNode {\r\n\r\n        if (!this.expect([TokenType.identifier, TokenType.leftBracket], false)) {\r\n            return null;\r\n        }\r\n\r\n        if (this.tt == TokenType.leftBracket) {\r\n            this.nextToken();\r\n            let ret: TableOrSubqueryNode;\r\n            //@ts-ignore\r\n            if (this.tt == TokenType.keywordSelect) {\r\n                let position = this.getCurrentPosition();\r\n                let selectStatement = this.parseSelect();\r\n                ret = {\r\n                    type: TokenType.subquery,\r\n                    alias: null,\r\n                    position: position,\r\n                    query: selectStatement\r\n                }\r\n            } else {\r\n                ret = this.parseTableOrSubQuery(dontHint);\r\n            }\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n\r\n            //@ts-ignore\r\n            if (this.tt == TokenType.keywordAs && ret.type == TokenType.subquery) {\r\n                this.nextToken();\r\n                if (this.expect(TokenType.identifier, false)) {\r\n                    ret.alias = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    dontHint.push(ret.alias);\r\n                }\r\n            }\r\n\r\n            return ret;\r\n        }\r\n\r\n        if (this.tt == TokenType.identifier) {\r\n            let node: TableNode = {\r\n                type: TokenType.table,\r\n                identifier: <string>this.cct.value,\r\n                alias: null,\r\n                position: this.getCurrentPosition()\r\n            }\r\n            dontHint.push(node.identifier);\r\n            this.nextToken();\r\n\r\n            //@ts-ignore\r\n            if (this.tt == TokenType.keywordAs) {\r\n                this.nextToken();\r\n                if (this.expect(TokenType.identifier, false)) {\r\n                    node.alias = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    dontHint.push(node.alias);\r\n                }\r\n\r\n            }\r\n\r\n            return node;\r\n        }\r\n\r\n    }\r\n\r\n    parseColumnList(tokenTypesAfterListEnd: TokenType[], allowAliases: boolean): ColumnNode[] {\r\n        let columns: ColumnNode[] = [];\r\n\r\n        while ([TokenType.identifier, TokenType.multiplication, TokenType.leftBracket].indexOf(this.tt) >= 0) {\r\n            if (this.tt == TokenType.multiplication) {\r\n                columns.push({\r\n                    term: null,\r\n                    alias: null,\r\n                    position: this.getCurrentPosition(),\r\n                    type: TokenType.allColumns\r\n                });\r\n                this.nextToken();\r\n            } else {\r\n                let columnTerm = this.parseTerm();\r\n                if (columnTerm != null) {\r\n                    let column: ColumnNode = {\r\n                        type: TokenType.column,\r\n                        term: columnTerm,\r\n                        position: columnTerm.position\r\n                    }\r\n                    columns.push(column);\r\n                    if (this.comesToken(TokenType.keywordAs)) {\r\n                        this.nextToken();\r\n                        if (this.expect(TokenType.identifier, false)) {\r\n                            column.alias = \"\" + this.cct.value;\r\n                        }\r\n                        this.nextToken();\r\n                    }\r\n                }\r\n            }\r\n            if (tokenTypesAfterListEnd.indexOf(this.tt) >= 0) {\r\n                break;\r\n            }\r\n            this.expect(TokenType.comma, true);\r\n        }\r\n\r\n        if (columns.length == 0) {\r\n            this.pushError(\"Es fehlt die kommaseparierte Liste der gewünschten Spalten.\", \"error\");\r\n        }\r\n\r\n        return columns;\r\n    }\r\n\r\n\r\n    parseTerm(): TermNode {\r\n        return this.parseTermBinary(0);\r\n    }\r\n\r\n    parseTermBinary(precedence: number): TermNode {\r\n\r\n        let left: TermNode;\r\n        if (precedence < Parser.operatorPrecedence.length - 1) {\r\n            left = this.parseTermBinary(precedence + 1);\r\n        } else {\r\n            left = this.parseUnary();\r\n        }\r\n\r\n        let operators = Parser.operatorPrecedence[precedence];\r\n\r\n        if (left == null || operators.indexOf(this.tt) < 0) {\r\n            return left;\r\n        }\r\n\r\n        let first = true;\r\n\r\n        while (first || operators.indexOf(this.tt) >= 0) {\r\n\r\n            let operator: TokenType = this.tt;\r\n\r\n            first = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            this.nextToken();\r\n            let right: TermNode;\r\n            if (precedence < Parser.operatorPrecedence.length - 1) {\r\n                right = this.parseTermBinary(precedence + 1);\r\n            } else {\r\n                right = this.parseUnary();\r\n            }\r\n\r\n            left = {\r\n                type: TokenType.binaryOp,\r\n                position: position,\r\n                operator: operator,\r\n                firstOperand: left,\r\n                secondOperand: right\r\n            };\r\n\r\n\r\n        }\r\n\r\n        return left;\r\n\r\n    }\r\n\r\n\r\n    // -, not, this, super, a.b.c[][].d, a.b(), b() (== this.b()), super.b(), super()\r\n    parseUnary(): TermNode {\r\n\r\n        let term: TermNode;\r\n        let position: TextPosition = this.getCurrentPosition();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n                return this.parseBracket();\r\n            case TokenType.minus:\r\n                // case TokenType.not:\r\n                position = position;\r\n                let tt1 = this.tt;\r\n                this.nextToken();\r\n                term = this.parseUnary();\r\n\r\n                return {\r\n                    type: TokenType.unaryOp,\r\n                    position: position,\r\n                    operand: term,\r\n                    operator: tt1\r\n                };\r\n\r\n            case TokenType.integerConstant:\r\n            case TokenType.charConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n                term = {\r\n                    type: TokenType.constantNode,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: this.tt,\r\n                    constant: this.cct.value\r\n                };\r\n                let isStringConstant = this.tt == TokenType.stringConstant;\r\n                this.nextToken();\r\n\r\n                if (isStringConstant) return this.parseDotOrArrayChains(term);\r\n\r\n                return term;\r\n            case TokenType.identifier: // attribute of current class or local variable\r\n\r\n                let identifier1 = <string>this.cct.value;\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    let rightBracketPosition = parameters.rightBracketPosition;\r\n\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position1,\r\n                        rightBracketPosition: rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        identifier: identifier1,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.identifier,\r\n                        identifier: identifier1,\r\n                        position: position\r\n                    }\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.dot) {\r\n                        let position = this.getCurrentPosition();\r\n                        this.nextToken();\r\n                        this.expect(TokenType.identifier, false);\r\n                        let secondIdentifier: IdentifierNode = {\r\n                            type: TokenType.identifier,\r\n                            identifier: <string>this.cct.value,\r\n                            position: this.getCurrentPosition()\r\n                        }\r\n                        this.nextToken();\r\n                        term = {\r\n                            type: TokenType.dot,\r\n                            identifierLeft: <IdentifierNode>term,\r\n                            identifierRight: secondIdentifier,\r\n                            position: position\r\n                        }\r\n\r\n                    } else if ([TokenType.isNull, TokenType.isNotNull].indexOf(this.tt) >= 0) {\r\n                        term = {\r\n                            type: TokenType.unaryOp,\r\n                            operand: term,\r\n                            operator: this.tt,\r\n                            position: position\r\n                        };\r\n                        this.nextToken();\r\n                    }\r\n                }\r\n\r\n                return term;\r\n            default:\r\n                this.pushError(\"Erwartet wird eine Variable, ein Methodenaufruf oder eine Konstante. Gefunden wurde: \" + this.cct.value);\r\n                return null;\r\n        }\r\n\r\n    }\r\n\r\n    parseList(): ListNode {\r\n        let node: ListNode = {\r\n            type: TokenType.list,\r\n            position: this.getCurrentPosition(),\r\n            elements: []\r\n        }\r\n\r\n        let constantTypes = [TokenType.charConstant, TokenType.stringConstant, TokenType.booleanConstant, TokenType.floatingPointConstant, TokenType.integerConstant];\r\n\r\n        while (constantTypes.indexOf(this.tt) >= 0) {\r\n            node.elements.push({\r\n                type: TokenType.constantNode,\r\n                constant: this.cct.value,\r\n                constantType: this.tt,\r\n                position: this.cct.position\r\n            });\r\n            this.nextToken();\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            }\r\n            this.nextToken();\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    parseBracket(): TermNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n        let tokenBeforeBracket = this.lastToken;\r\n        this.nextToken(); // consume (\r\n\r\n        if (this.tt == TokenType.keywordSelect) {\r\n            let selectNode = this.parseSelect();\r\n            this.expect(TokenType.rightBracket, true);\r\n            return selectNode;\r\n        } else if ([TokenType.comma, TokenType.rightBracket].indexOf(this.ct[1].tt) >= 0 &&\r\n            [TokenType.keywordIn, TokenType.keywordNotIn].indexOf(tokenBeforeBracket.tt) >= 0) {\r\n            let listNode = this.parseList();\r\n            this.expect(TokenType.rightBracket, true);\r\n            return listNode;\r\n        } else {\r\n            let term = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            let bracketsNode: BracketsNode = {\r\n                position: rightBracketPosition,\r\n                type: TokenType.rightBracket,\r\n                termInsideBrackets: term\r\n            }\r\n\r\n\r\n            return bracketsNode;\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    parseMethodCallParameters(): { rightBracketPosition: TextPosition, nodes: TermNode[], commaPositions: TextPosition[] } {\r\n        // Assumption: current token is (        \r\n        this.nextToken();\r\n        if (this.tt == TokenType.rightBracket) {\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n            return { rightBracketPosition: rightBracketPosition, nodes: [], commaPositions: [] };\r\n        }\r\n\r\n        let parameters: TermNode[] = [];\r\n        let commaPositions: TextPosition[] = [];\r\n\r\n        while (true) {\r\n            let pos = this.pos;\r\n\r\n            if (this.tt == TokenType.multiplication) {\r\n                this.nextToken();\r\n                parameters.push({\r\n                    type: TokenType.allColumns,\r\n                    position: this.getCurrentPosition(),\r\n                });\r\n            } else {\r\n                let parameter = this.parseTerm();\r\n                if (parameter != null) {\r\n                    parameters.push(parameter);\r\n                }\r\n            }\r\n\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            } else {\r\n                commaPositions.push(this.getCurrentPosition());\r\n                this.nextToken(); // consume comma\r\n            }\r\n\r\n            // emergency-step:\r\n            if (this.pos == pos) {\r\n                this.nextToken();\r\n            }\r\n\r\n        }\r\n\r\n        let position = this.getCurrentPosition();\r\n        let rightBracketFound = this.expect(TokenType.rightBracket, true);\r\n\r\n        return { rightBracketPosition: rightBracketFound ? position : null, nodes: parameters, commaPositions: commaPositions };\r\n\r\n    }\r\n\r\n    parseDotOrArrayChains(term: TermNode): TermNode {\r\n\r\n        if (term == null) return null;\r\n\r\n        while (this.comesToken([TokenType.dot, TokenType.leftSquareBracket])) {\r\n            if (this.tt == TokenType.dot) {\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.identifier) {\r\n                    this.pushError(\"Erwartet wird der Bezeichner eines Attributs oder einer Methode, gefunden wurde: \" + this.cct.value);\r\n                    return term;\r\n                }\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position,\r\n                        rightBracketPosition: parameters.rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        identifier: identifier,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                }\r\n                // else {\r\n                //     term = {\r\n                //         type: TokenType.pushAttribute,\r\n                //         position: position,\r\n                //         identifier: identifier,\r\n                //         object: term\r\n                //     }\r\n                // }\r\n\r\n            }\r\n        }\r\n\r\n        return term;\r\n    }\r\n\r\n\r\n}","import { ColumnStructure, TableStructure } from \"../../tools/DatabaseTools.js\";\r\nimport { SQLType, SQLBaseType, SQLDerivedType } from \"./SQLTypes.js\";\r\n\r\n\r\nexport class Column {\r\n\r\n    references: Column;\r\n    fromColumnStructure?: ColumnStructure;\r\n    notNull: boolean;\r\n\r\n    constructor(public identifier: string, public type: SQLType, public table: Table, public isPrimaryKey: boolean, public isNullable: boolean, public defaultValue: string, public isAutoIncrement){\r\n\r\n    }\r\n\r\n    static fromColumnStructure(cs: ColumnStructure, table: Table): Column {\r\n\r\n        let regex1 = /^(\\w*) *(?:\\((.*)\\))?.*$/;\r\n\r\n        let typeMatch1 = cs.completeTypeSQL.match(regex1);\r\n        let baseTypeIdentifier: string = typeMatch1[1];\r\n        let commaSeparatedParameters: string = typeMatch1[2];\r\n\r\n        let parameterValues: number[] = [];\r\n        if(commaSeparatedParameters != null){\r\n            parameterValues = commaSeparatedParameters.split(',').map(v => parseInt(v.trim()));           \r\n        }\r\n\r\n        let type: SQLType = SQLBaseType.getBaseType(baseTypeIdentifier);\r\n        if(parameterValues.length > 0 && type != null){\r\n            type = new SQLDerivedType(<SQLBaseType>type, parameterValues);\r\n        }\r\n\r\n        let column = new Column(cs.name, type, table, cs.isPrimaryKey, !cs.isPrimaryKey, cs.defaultValue, cs.isAutoIncrement);\r\n        column.notNull = cs.notNull;\r\n        \r\n        column.fromColumnStructure = cs;\r\n\r\n        return column;\r\n    }\r\n\r\n}\r\n\r\nexport class Table {\r\n    \r\n    public columns: Column[] = [];\r\n\r\n    public size: number;\r\n\r\n    constructor(public identifier: string){\r\n\r\n    }\r\n\r\n    private static fromTableStructure(ts: TableStructure): Table {\r\n        let table: Table = new Table(ts.name);\r\n        table.columns = ts.columns.map( column => Column.fromColumnStructure(column, table));\r\n        table.size = ts.size;\r\n        return table;\r\n    }\r\n\r\n    static fromTableStructureList(tsList: TableStructure[]): Table[]{\r\n\r\n        if(tsList == null) tsList = [];\r\n\r\n        let tables: Table[] = tsList.map(ts => Table.fromTableStructure(ts));\r\n\r\n        let columnStructureToColumnMap: Map<ColumnStructure, Column> = new Map();\r\n        for(let table of tables){\r\n            for(let column of table.columns){\r\n                columnStructureToColumnMap.set(column.fromColumnStructure, column);\r\n            }\r\n        }\r\n\r\n        for(let table of tables){\r\n            for(let column of table.columns){\r\n                let referencedCs = column.fromColumnStructure.references;\r\n                if(referencedCs != null){\r\n                    let referencedColumn = columnStructureToColumnMap.get(referencedCs);\r\n                    column.references = referencedColumn;\r\n                }\r\n            }\r\n        }\r\n\r\n        return tables;\r\n    }\r\n\r\n}","import { DatabaseStructure } from \"../../tools/DatabaseTools.js\";\r\nimport { TextPosition } from \"../lexer/Token.js\";\r\nimport { Table, Column } from \"./SQLTable.js\";\r\n\r\nexport type Symbol = {\r\n    identifier: string;\r\n    table?: Table;\r\n    column?: Column;\r\n    tableAlias?: string;\r\n    posOfDefinition: TextPosition;\r\n    referencedOnPositions: TextPosition[];\r\n}\r\n\r\nexport class SymbolTable {\r\n    parent: SymbolTable; // SymbolTable of parent scope\r\n    positionFrom: TextPosition;\r\n    positionTo: TextPosition;\r\n\r\n    childSymbolTables: SymbolTable[] = [];\r\n\r\n    private symbols: Map<string, Symbol[]> = new Map();\r\n    symbolList: Symbol[] = [];\r\n\r\n    constructor(parentSymbolTable: SymbolTable, positionFrom: TextPosition, positionTo: TextPosition) {\r\n\r\n        this.parent = parentSymbolTable;\r\n\r\n        this.positionFrom = positionFrom;\r\n        this.positionTo = positionTo;\r\n\r\n\r\n        if (this.parent != null) {\r\n            this.parent.childSymbolTables.push(this);\r\n        }\r\n    }\r\n\r\n    extractDatabaseStructure(databaseStructure: DatabaseStructure) {\r\n        for (let table of Table.fromTableStructureList(databaseStructure?.tables)) {\r\n\r\n            this.storeTableSymbols(table);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    storeTableSymbols(table: Table){\r\n        this.storeSymbol({\r\n            identifier: table.identifier,\r\n            posOfDefinition: null,\r\n            referencedOnPositions: [],\r\n            table: table\r\n        });\r\n\r\n        for (let column of table.columns) {\r\n            this.storeSymbol({\r\n                identifier: column.identifier,\r\n                posOfDefinition: null,\r\n                referencedOnPositions: [],\r\n                column: column\r\n            });\r\n        }\r\n    }\r\n\r\n    storeSymbol(symbol: Symbol) {\r\n        let list: Symbol[] = this.symbols.get(symbol.identifier);\r\n        if (list == null) {\r\n            list = [symbol];\r\n            this.symbols.set(symbol.identifier.toLowerCase(), list);\r\n        } else {\r\n            list.push(symbol);\r\n        }\r\n        this.symbolList.push(symbol);\r\n    }\r\n\r\n    findTableAtPosition(line: number, column: number): SymbolTable {\r\n\r\n        if (!this.containsPosition(line, column)) {\r\n            return null;\r\n        }\r\n\r\n        let shortestSymbolTableContainingPosition = null;\r\n        let shortestPosition = 10000000;\r\n\r\n        for (let st of this.childSymbolTables) {\r\n            if (st.containsPosition(line, column)) {\r\n                let st1 = st.findTableAtPosition(line, column);\r\n                if (st1.positionTo.line - st1.positionFrom.line < shortestPosition) {\r\n                    shortestSymbolTableContainingPosition = st1;\r\n                    shortestPosition = st1.positionTo.line - st1.positionFrom.line;\r\n                }\r\n            }\r\n            // if(st.containsPosition(line, column) && st.positionTo.line - st.positionFrom.line < shortestPosition){\r\n            //     shortestSymbolTableContainingPosition = st;\r\n            //     shortestPosition = st.positionTo.line - st.positionFrom.line;\r\n            // }\r\n        }\r\n\r\n        if (shortestSymbolTableContainingPosition != null) {\r\n            return shortestSymbolTableContainingPosition;\r\n        } else {\r\n            return this;\r\n        }\r\n\r\n    }\r\n\r\n    containsPosition(line: number, column: number) {\r\n        if (line < this.positionFrom.line || line > this.positionTo.line) {\r\n            return false;\r\n        }\r\n\r\n        if (line == this.positionFrom.line && column < this.positionFrom.column) return false;\r\n        if (line == this.positionTo.line && column > this.positionTo.column + 1) return false;\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    findTable(identifier: string): Table {\r\n        let tables = this.findTables(identifier);\r\n        if(tables.length == 0) return null;\r\n        return tables[0].table;\r\n    }\r\n\r\n    findTables(identifier: string): Symbol[] {\r\n\r\n        let symbolTable: SymbolTable = this;\r\n        while(symbolTable != null){\r\n\r\n            let symbols = symbolTable.symbols.get(identifier.toLowerCase());\r\n            if(symbols != null){\r\n                symbols = symbols.filter(s => s.table != null);\r\n                if(symbols.length > 0){\r\n                    return symbols;\r\n                }\r\n            }\r\n\r\n            symbolTable = symbolTable.parent;\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    findColumn(identifier: string): Symbol[] {\r\n\r\n        let symbolTable: SymbolTable = this;\r\n        while(symbolTable != null){\r\n\r\n            let symbols = symbolTable.symbols.get(identifier.toLowerCase());\r\n            if(symbols != null){\r\n                symbols = symbols.filter(s => s.column != null);\r\n                if(symbols.length > 0){\r\n                    return symbols;\r\n                }\r\n            }\r\n\r\n            symbolTable = symbolTable.parent;\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { SQLBaseType, SQLType } from \"./SQLTypes.js\";\r\n\r\nexport class SQLMethodParameter {\r\n    type: SQLType;\r\n    constructor(public identifier: string, type: string){\r\n        this.type = SQLBaseType.getBaseType(type);\r\n    }\r\n}\r\n\r\nexport class SQLMethod {\r\n    acceptsStarParameter: boolean = false;\r\n    public returnType: SQLType;\r\n    constructor(public identifier: string, public isAggregating: boolean, returnType: string, public parameters: SQLMethodParameter[]){\r\n        this.returnType = SQLBaseType.getBaseType(returnType);\r\n    }\r\n\r\n}\r\n\r\nexport class SQLMethodStore {\r\n\r\n    static instance: SQLMethodStore;\r\n    public methods: SQLMethod[] = [];\r\n\r\n    static getInstance():SQLMethodStore {\r\n        if(this.instance == null){\r\n            this.instance = new SQLMethodStore();\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    constructor(){\r\n        this.pushOneParameterMethod(\"max\" ,\"integer\", \"integer\");\r\n        this.pushOneParameterMethod(\"max\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"min\" ,\"integer\", \"integer\");\r\n        this.pushOneParameterMethod(\"min\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"avg\" ,\"integer\", \"integer\");\r\n        this.pushOneParameterMethod(\"avg\" ,\"float\", \"float\");\r\n\r\n        let countMethod = new SQLMethod(\"count\", true, \"integer\", [new SQLMethodParameter(\"spalte\", \"text\")]);\r\n        countMethod.acceptsStarParameter = true;\r\n        this.methods.push(countMethod);\r\n    }\r\n    \r\n    getMethods(identifier: string){\r\n        return this.methods.filter(m => m.identifier == identifier.toLowerCase());\r\n    }\r\n\r\n\r\n    pushOneParameterMethod(identifier: string, returnType: string, parameterType: string){\r\n        this.methods.push(new SQLMethod(identifier, true, returnType, [new SQLMethodParameter(\"spalte\", parameterType)]));\r\n\r\n    }\r\n}","export function hash(s: string){\r\n    let hash: number = 0;\r\n    let chr: number;\r\n    for (let i = 0; i < s.length; i++) {\r\n      chr   = s.charCodeAt(i);\r\n      hash  = ((hash << 5) - hash) + chr;\r\n      hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n\r\nexport function escapeHtml(unsafe: string): string {\r\n  return unsafe\r\n      .replace(/['\"]+/g, '')\r\n       .replace(/&/g, \"&amp;\")\r\n       .replace(/</g, \"&lt;\")\r\n       .replace(/>/g, \"&gt;\")\r\n       .replace(/\"/g, \"&quot;\")\r\n       .replace(/'/g, \"&#039;\");\r\n}\r\n\r\nexport function dateToString(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth() + 1)}.${date.getFullYear()}, ${twoDez(date.getHours())}:${twoDez(date.getMinutes())}`;\r\n}\r\n\r\nexport function dateToStringWithoutTime(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth())}.${date.getFullYear()}`;\r\n}\r\n\r\nfunction twoDez(z: number):string {\r\n  if(z < 10) return \"0\" + z;\r\n  return \"\" + z;\r\n}\r\n\r\nexport function stringToDate(text: string): Date {\r\n\r\n  let match = text.match(/^(\\d{2})\\.(\\d{2})\\.(\\d{4}), (\\d{2}):(\\d{2})$/);\r\n\r\n  let date: Date = new Date(Number.parseInt(match[3]), Number.parseInt(match[2]), Number.parseInt(match[1]), Number.parseInt(match[4]), Number.parseInt(match[5]) );\r\n\r\n  return date;\r\n}\r\n\r\nexport function stringWrap(s: string, length: number ): string{\r\n  return s.replace(\r\n    new RegExp(`(?![^\\\\n]{1,${length}}$)([^\\\\n]{1,${length}})\\\\s`, 'g'), '$1\\n'\r\n  );\r\n} \r\n\r\nexport function formatAsJavadocComment(s: string, indent: number|string = \"\"): string {\r\n  let indentString = \"\";\r\n\r\n  if(typeof indent == \"string\"){\r\n    indentString = indent;\r\n  } else {\r\n    for(let i = 0; i < indent; i++){\r\n      indentString += \" \";\r\n    }\r\n  }\r\n\r\n  s = stringWrap(s, 60);\r\n  if(s.length > 0) s = \"\\n\" + s;\r\n  s = indentString + \"/**\" + s.replace(/\\n/g, \"\\n\" + indentString + \" * \") + \"\\n\" + indentString + \" */\";\r\n  return s;\r\n}\r\n\r\n\r\nexport function isDate(inputText: string) {\r\n\r\n      if (inputText == null || typeof inputText != 'string') return false;\r\n\r\n      // var dateformat = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/;\r\n      var dateformat = /^\\d{4}[\\/\\-](0?[1-9]|1[012])[\\/\\-](0?[1-9]|[12][0-9]|3[01])$/;\r\n      // Match the date format through regular expression\r\n      if (inputText.match(dateformat)) {\r\n          //Test which seperator is used '/' or '-'\r\n          var opera1 = inputText.split('/');\r\n          var opera2 = inputText.split('-');\r\n          var lopera1 = opera1.length;\r\n          var lopera2 = opera2.length;\r\n          // Extract the string into month, date and year\r\n          if (lopera1 > 1) {\r\n              var pdate = inputText.split('/');\r\n          }\r\n          else if (lopera2 > 1) {\r\n              var pdate = inputText.split('-');\r\n          }\r\n          if (pdate.length != 3) return false;\r\n          var dd = parseInt(pdate[2]);\r\n          var mm = parseInt(pdate[1]);\r\n          var yy = parseInt(pdate[0]);\r\n          // Create list of days of a month [assume there is no leap year by default]\r\n          var ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n          if (mm == 1 || mm > 2) {\r\n              if (dd > ListofDays[mm - 1]) {\r\n                  return false;\r\n              }\r\n          }\r\n          if (mm == 2) {\r\n              var lyear = false;\r\n              if ((!(yy % 4) && yy % 100) || !(yy % 400)) {\r\n                  lyear = true;\r\n              }\r\n              if ((lyear == false) && (dd >= 29)) {\r\n                  return false;\r\n              }\r\n              if ((lyear == true) && (dd > 29)) {\r\n                  return false;\r\n              }\r\n              return true;\r\n          }\r\n\r\n          return true;\r\n\r\n      }\r\n      else {\r\n          return false;\r\n      }\r\n  }\r\n\r\n  export function isDateTime(inputText: string) {\r\n\r\n      if (inputText == null || typeof inputText != 'string') return false;\r\n\r\n      // var dateformat = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/;\r\n      var dateformat = /^\\d{4}[\\-](0[1-9]|1[012])[\\-](0[1-9]|[12][0-9]|3[01]) ([01][1-9]|2[0123]):([0-5][0-9]):([0-5][0-9])$/;\r\n      // Match the date format through regular expression\r\n      if (inputText.match(dateformat)) {\r\n          var splitStr = inputText.split(' ');\r\n          var dateStr = splitStr[0];\r\n          //var timeStr = splitStr[1];\r\n\r\n          if (dateStr.length != 10) return false;\r\n          var dd = parseInt(dateStr.substring(8,10));\r\n          var mm = parseInt(dateStr.substring(5, 7));\r\n          var yy = parseInt(dateStr.substring(0, 4));\r\n          // Create list of days of a month [assume there is no leap year by default]\r\n          var ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n          if (mm == 1 || mm > 2) {\r\n              if (dd > ListofDays[mm - 1]) {\r\n                  return false;\r\n              }\r\n          }\r\n          if (mm == 2) {\r\n              var lyear = false;\r\n              if ((!(yy % 4) && yy % 100) || !(yy % 400)) {\r\n                  lyear = true;\r\n              }\r\n              if ((lyear == false) && (dd >= 29)) {\r\n                  return false;\r\n              }\r\n              if ((lyear == true) && (dd > 29)) {\r\n                  return false;\r\n              }\r\n              return true;\r\n          }\r\n\r\n          return true;\r\n\r\n      }\r\n      else {\r\n          return false;\r\n      }\r\n  }\r\n","import { DatabaseTool } from \"../../tools/DatabaseTools.js\";\r\nimport { TextPosition, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { CompletionHint, Module } from \"./Module.js\";\r\nimport { Symbol, SymbolTable } from \"./SymbolTable.js\";\r\nimport { AlterTableNode, ASTNode, BinaryOpNode, CreateTableNode, DeleteNode, DotNode, DropTableNode, IdentifierNode, InsertNode, MethodcallNode, SelectNode, TableOrSubqueryNode, TermNode, UpdateNode } from \"./Ast.js\";\r\nimport { Error, ErrorLevel, QuickFix } from \"../lexer/Lexer.js\";\r\nimport { Column, Table } from \"./SQLTable.js\";\r\nimport { SQLBaseType, SQLType } from \"./SQLTypes.js\";\r\nimport { SQLMethodStore } from \"./SQLMethods.js\";\r\nimport { isDate, isDateTime } from \"../../tools/StringTools.js\";\r\n\r\n\r\nexport class SymbolResolver {\r\n\r\n    symbolTableStack: SymbolTable[] = [];\r\n    errorList: Error[];\r\n    module: Module;\r\n    databaseTool: DatabaseTool;\r\n    tables: Table[];\r\n\r\n    constructor(databaseTool: DatabaseTool) {\r\n        this.databaseTool = databaseTool;\r\n        this.tables = Table.fromTableStructureList(databaseTool.databaseStructure?.tables);\r\n    }\r\n\r\n    start(module: Module) {\r\n        this.module = module;\r\n        this.symbolTableStack = [];\r\n        this.errorList = [];\r\n\r\n        module.mainSymbolTable = new SymbolTable(null, { column: 0, line: 0, length: 0 }, { column: 0, line: 100000, length: 0 })\r\n\r\n        this.symbolTableStack.push(module.mainSymbolTable);\r\n\r\n        for (let statement of this.module.sqlStatements) {\r\n\r\n            let errorsBeforeStatement = this.errorList.length;\r\n\r\n            let astNode = statement.ast;\r\n            if (astNode == null) continue;\r\n\r\n            switch (astNode.type) {\r\n                case TokenType.keywordSelect:\r\n                    this.resolveSelect(astNode);\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n                case TokenType.keywordInsert:\r\n                    this.resolveInsert(astNode);\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n                case TokenType.keywordCreate:\r\n                    this.resolveCreateTable(astNode);\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n                case TokenType.keywordUpdate:\r\n                    this.resolveUpdate(astNode);\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n                case TokenType.keywordDelete:\r\n                    this.resolveDelete(astNode);\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n                case TokenType.keywordDrop:\r\n                    this.resolveDropTable(astNode);\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n                case TokenType.keywordAlter:\r\n                    this.resolveAlterTable(astNode)\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n\r\n                default:\r\n                    break;\r\n            }\r\n\r\n            statement.hasErrors = statement.hasErrors || this.errorList.length > errorsBeforeStatement;\r\n\r\n        }\r\n\r\n        module.errors[2] = this.errorList;\r\n\r\n    }\r\n\r\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position: TextPosition, quickFix?: QuickFix) {\r\n        // if (position == null) position = Object.assign({}, this.position);\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n\r\n    getCurrentSymbolTable(): SymbolTable {\r\n        return this.symbolTableStack[this.symbolTableStack.length - 1];\r\n    }\r\n\r\n    pushNewSymbolTable(positionFrom: TextPosition, positionTo: TextPosition): SymbolTable {\r\n        if(positionTo == null) {\r\n            positionTo = {\r\n                line: 100000,\r\n                column: 1,\r\n                length: 1\r\n            }\r\n        };\r\n        let st: SymbolTable = new SymbolTable(this.getCurrentSymbolTable(), positionFrom, positionTo);\r\n        this.symbolTableStack.push(st);\r\n        return st;\r\n    }\r\n\r\n    resolveSelect(selectNode: SelectNode): Table {\r\n        let resultTable: Table = new Table(null);\r\n\r\n        selectNode.symbolTable = this.pushNewSymbolTable(selectNode.position, selectNode.endPosition);\r\n\r\n        // From\r\n        let joinedTables: Table[] = [];\r\n        this.resolveTableOrSubQuery(selectNode.fromNode, joinedTables);\r\n        if (selectNode.fromStartPosition != null) {\r\n            let fromSymbolTable = new SymbolTable(this.getCurrentSymbolTable(), selectNode.fromStartPosition, selectNode.fromEndPosition);\r\n            fromSymbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n        }\r\n\r\n        // Column list\r\n        for (let columnNode of selectNode.columnList) {\r\n            if (columnNode.type == TokenType.allColumns) {\r\n                for (let table of joinedTables) {\r\n                    for (let column of table.columns) {\r\n                        let c: Column = new Column(column.identifier, column.type, resultTable, false, true, column.defaultValue, column.isAutoIncrement);\r\n                        resultTable.columns.push(c);\r\n                    }\r\n                }\r\n            } else {\r\n                this.resolveTerm(columnNode.term);\r\n                let c1: Column = new Column(columnNode.alias, columnNode.term.sqlType, resultTable, false, true, null, false);\r\n                resultTable.columns.push(c1);\r\n                if (c1.identifier != null) {\r\n                    selectNode.symbolTable.storeSymbol({\r\n                        identifier: c1.identifier,\r\n                        posOfDefinition: columnNode.term.position,\r\n                        referencedOnPositions: [],\r\n                        column: c1\r\n                    })\r\n                }\r\n            }\r\n        }\r\n\r\n        // where...\r\n        if (selectNode.whereNode != null) {\r\n            let whereType = this.resolveTerm(selectNode.whereNode);\r\n            if (whereType != null && whereType.getBaseTypeName() != \"boolean\") {\r\n                this.pushError(\"Das Ergebnis des where-Teils einer select-Anweisung muss vom Typ boolean sein.\", \"error\", selectNode.whereNode.position);\r\n            }\r\n        }\r\n\r\n\r\n        // TODO: group by, order by\r\n\r\n        return resultTable;\r\n    }\r\n\r\n    resolveDropTable(node: DropTableNode) {\r\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\r\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n\r\n        if (node.tableIdentifier == null) return;\r\n\r\n        let table = node.symbolTable.findTable(node.tableIdentifier);\r\n        if (table == null) this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\r\n\r\n    }\r\n\r\n    resolveDelete(node: DeleteNode) {\r\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\r\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n\r\n        if (node.tableIdentifier == null) return;\r\n\r\n        let table = node.symbolTable.findTable(node.tableIdentifier);\r\n        if (table == null) this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\r\n\r\n\r\n        // if(node.whereNodeBegin != null){\r\n        //     let symbolTable = this.pushNewSymbolTable(node.whereNodeBegin, node.whereNodeEnd);\r\n        //     symbolTable.storeTableSymbols(table);\r\n        // }\r\n\r\n\r\n        if (node.whereNode != null) {\r\n            let whereSymbolTable = this.pushNewSymbolTable(node.whereNodeBegin, node.whereNodeEnd);\r\n            if(table != null) whereSymbolTable.storeTableSymbols(table);\r\n            this.resolveTerm(node.whereNode);\r\n            this.symbolTableStack.pop();\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    resolveAlterTable(node: AlterTableNode) {\r\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\r\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n\r\n        if (node.tableIdentifier == null) {\r\n            return;\r\n        }\r\n\r\n        let table = node.symbolTable.findTable(node.tableIdentifier);\r\n        if (table == null) {\r\n            this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\r\n        }\r\n\r\n        let oldColumn: Column = null;\r\n        if (node.oldColumnName != null) {\r\n            oldColumn = table.columns.find(c => c.identifier.toLocaleLowerCase() == node.oldColumnName.toLocaleLowerCase());\r\n            if (oldColumn == null) {\r\n                this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" hat keine Spalte mit dem Bezeichner \" + node.oldColumnName, \"error\", node.oldColumnPosition);\r\n            }\r\n        }\r\n\r\n        switch (node.kind) {\r\n            case \"dropColumn\":\r\n                // nothing to do as node.oldColumnName is checked above\r\n                break;\r\n            case \"addColumn\":\r\n                let columnNode = node.columnDef;\r\n                if (columnNode == null) break;\r\n                if (columnNode.referencesTable != null && columnNode.baseType != null) {\r\n                    let tables = this.getCurrentSymbolTable().findTables(columnNode.referencesTable);\r\n                    if (tables.length == 1) {\r\n                        let table = tables[0].table;\r\n                        let column = table.columns.find(c => c.identifier == columnNode.referencesColumn);\r\n                        if (column != null && column.type != null) {\r\n                            if (!column.isPrimaryKey) {\r\n                                this.pushError(\"Die referenzierte Spalte \" + columnNode.referencesTable + \".\" + columnNode.referencesColumn + \" ist kein Primärschlüssel.\", \"warning\", columnNode.referencesPosition);\r\n                            }\r\n                            if (!column.type.canCastTo(columnNode.baseType)) {\r\n                                this.pushError(\"Der Datentyp \" + columnNode.baseType.toString() + \" der Spalte \" + columnNode.identifier +\r\n                                    \" kann nich in den Datentyp \" + column.type.toString() + \" der referenzierten Spalte \" + table.identifier + \".\" +\r\n                                    column.identifier + \" umgewandelt werden.\", \"error\", columnNode.referencesPosition);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            case \"renameColumn\":\r\n                // nothing to do as node.oldColumnName is checked above\r\n                break;\r\n            case \"renameTable\":\r\n                // nothing to do \r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    resolveUpdate(node: UpdateNode) {\r\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\r\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n\r\n        if (node.tableIdentifier == null) {\r\n            return;\r\n        }\r\n\r\n        let table = node.symbolTable.findTable(node.tableIdentifier);\r\n        if (table == null) this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\r\n\r\n        for (let i = 0; i < node.columnIdentifiers.length; i++) {\r\n            let ci = node.columnIdentifiers[i];\r\n            let ciPos = node.columnIdentifierPositions[i];\r\n            let value = node.values[i];\r\n\r\n            if (ci == null) continue;\r\n            let column = table.columns.find(c => c.identifier == ci);\r\n\r\n            if (column == null) {\r\n                this.pushError(ci + \" ist kein Bezeichner einer Spalte der Tabelle \" + node.tableIdentifier + \".\", \"error\", ciPos);\r\n            }\r\n\r\n            if (value == null) continue;\r\n            let symbolTable = this.pushNewSymbolTable(node.valuePosBegin[i], node.valuePosEnd[i]);\r\n            symbolTable.storeTableSymbols(table);\r\n            this.resolveTerm(value);\r\n            this.symbolTableStack.pop();\r\n\r\n        }\r\n\r\n        if (node.whereNodeBegin != null) {\r\n            let symbolTable = this.pushNewSymbolTable(node.whereNodeBegin, node.whereNodeEnd);\r\n            symbolTable.storeTableSymbols(table);\r\n        }\r\n\r\n        if (node.whereNode != null) {\r\n            this.resolveTerm(node.whereNode);\r\n        }\r\n        this.symbolTableStack.pop();\r\n\r\n    }\r\n\r\n\r\n\r\n    resolveCreateTable(createTableNode: CreateTableNode) {\r\n\r\n        createTableNode.symbolTable = this.pushNewSymbolTable(createTableNode.position, createTableNode.endPosition);\r\n        createTableNode.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n\r\n        let thisTable: Table = {\r\n            identifier: createTableNode.identifier,\r\n            columns: null,\r\n            size: 0\r\n        }\r\n\r\n        thisTable.columns = createTableNode.columnList.map(c => {\r\n            return {\r\n                identifier: c.identifier,\r\n                isNullable: false,\r\n                isPrimaryKey: c.isPrimary,\r\n                isAutoIncrement: c.isAutoIncrement,\r\n                notNull: false,\r\n                references: null,\r\n                table: thisTable,\r\n                type: c.baseType,\r\n                defaultValue: c.defaultValue\r\n            }\r\n        });\r\n\r\n        createTableNode.symbolTable.storeTableSymbols(thisTable);\r\n\r\n        for (let columnNode of createTableNode.columnList) {\r\n            if (createTableNode.columnList.filter(c => c.identifier.toLocaleLowerCase() == columnNode.identifier.toLocaleLowerCase()).length > 1) {\r\n                this.pushError(\"Der Spaltenbezeichner \" + columnNode.identifier + \" darf in einer Tabelle nur ein einziges Mal verwendet werden\", \"error\", columnNode.position);\r\n            }\r\n\r\n            if (columnNode.referencesTable != null && columnNode.baseType != null) {\r\n                let tables = this.getCurrentSymbolTable().findTables(columnNode.referencesTable);\r\n                if (tables.length == 1) {\r\n                    let table = tables[0].table;\r\n                    let column = table.columns.find(c => c.identifier == columnNode.referencesColumn);\r\n                    if (column != null && column.type != null) {\r\n                        if (!column.isPrimaryKey) {\r\n                            this.pushError(\"Die referenzierte Spalte \" + columnNode.referencesTable + \".\" + columnNode.referencesColumn + \" ist kein Primärschlüssel.\", \"warning\", columnNode.referencesPosition);\r\n                        }\r\n                        if (!column.type.canCastTo(columnNode.baseType)) {\r\n                            this.pushError(\"Der Datentyp \" + columnNode.baseType.toString() + \" der Spalte \" + columnNode.identifier +\r\n                                \" kann nich in den Datentyp \" + column.type.toString() + \" der referenzierten Spalte \" + table.identifier + \".\" +\r\n                                column.identifier + \" umgewandelt werden.\", \"error\", columnNode.referencesPosition);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        for (let fki of createTableNode.foreignKeyInfoList) {\r\n\r\n            let columnNode = createTableNode.columnList.find(cn => cn.identifier == fki.column);\r\n            if (columnNode == null) continue;\r\n\r\n            let tables = this.getCurrentSymbolTable().findTables(fki.referencesTable);\r\n            if (tables.length == 1) {\r\n                let table = tables[0].table;\r\n                let column = table.columns.find(c => c.identifier == fki.referencesColumn);\r\n                if (column != null && column.type != null) {\r\n                    if (!column.isPrimaryKey) {\r\n                        this.pushError(\"Die referenzierte Spalte \" + fki.referencesTable + \".\" + fki.referencesColumn + \" ist kein Primärschlüssel.\", \"warning\", fki.referencesPosition);\r\n                    }\r\n                    if (!column.type.canCastTo(columnNode.baseType)) {\r\n                        this.pushError(\"Der Datentyp \" + columnNode.baseType.toString() + \" der Spalte \" + columnNode.identifier +\r\n                            \" kann nich in den Datentyp \" + column.type.toString() + \" der referenzierten Spalte \" + table.identifier + \".\" +\r\n                            column.identifier + \" umgewandelt werden.\", \"error\", fki.referencesPosition);\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    resolveTableOrSubQuery(tosNode: TableOrSubqueryNode, joinedTables: Table[]) {\r\n        if (tosNode == null) return;\r\n\r\n        switch (tosNode.type) {\r\n            case TokenType.table:\r\n                let tableList = this.tables.filter(t => t.identifier.toLowerCase() == tosNode.identifier.toLowerCase());\r\n                if (tableList.length == 0) {\r\n                    this.pushError(tosNode.identifier + \" ist nicht der Name einer Tabelle.\", \"error\", tosNode.position);\r\n                } else if (tableList.length > 1) {\r\n                    this.pushError(\"Der Bezeichner \" + tosNode.identifier + \" ist hier nicht eindeutig.\", \"error\", tosNode.position);\r\n                } else {\r\n                    let table: Table = tableList[0];\r\n                    joinedTables.push(table);\r\n                    this.storeTableIntoSymbolTable(table, tosNode.position, tosNode.alias);\r\n                }\r\n\r\n                break;\r\n\r\n            case TokenType.keywordJoin:\r\n                this.resolveTableOrSubQuery(tosNode.firstOperand, joinedTables);\r\n                this.resolveTableOrSubQuery(tosNode.secondOperand, joinedTables);\r\n                break;\r\n\r\n            case TokenType.subquery:\r\n                tosNode.table = this.resolveSelect(tosNode.query);\r\n                joinedTables.push(tosNode.table);\r\n                if (tosNode.alias != null) {\r\n                    tosNode.table.identifier = tosNode.alias;\r\n                    this.storeTableIntoSymbolTable(tosNode.table, tosNode.position);\r\n                }\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    storeTableIntoSymbolTable(table: Table, position: TextPosition, alias?: string) {\r\n        let symbolTable = this.getCurrentSymbolTable();\r\n        symbolTable.storeSymbol({\r\n            identifier: alias == null ? table.identifier.toLowerCase() : alias.toLowerCase(),\r\n            posOfDefinition: position,\r\n            table: table,\r\n            referencedOnPositions: []\r\n        });\r\n        for (let column of table.columns) {\r\n            symbolTable.storeSymbol({\r\n                identifier: column.identifier.toLowerCase(),\r\n                posOfDefinition: null,\r\n                column: column,\r\n                tableAlias: alias,\r\n                referencedOnPositions: []\r\n            });\r\n        }\r\n    }\r\n\r\n    resolveTerm(node: TermNode): SQLType {\r\n        if (node == null) return null;\r\n\r\n        switch (node.type) {\r\n            case TokenType.binaryOp:\r\n                if ([TokenType.keywordIn, TokenType.keywordNotIn].indexOf(node.operator) >= 0) {\r\n                    return this.resolveNotIn(node);\r\n                }\r\n\r\n                let typeLeft = this.resolveTerm(node.firstOperand);\r\n                let typeRight = this.resolveTerm(node.secondOperand);\r\n                if (typeLeft != null && typeRight != null) {\r\n                    let resultType = typeLeft.getBinaryResultType(node.operator, typeRight);\r\n                    if (resultType == null) {\r\n                        this.pushError(\"Der Operator \" + TokenTypeReadable[node.operator] + \" ist für die Datentypen \" + typeLeft.toString() + \" und \" + typeRight.toString() + \" nicht definiert.\", \"error\", node.position);\r\n                    }\r\n                    return resultType;\r\n                } else {\r\n                    return null;\r\n                }\r\n                break;\r\n            case TokenType.unaryOp:\r\n                let operandType = this.resolveTerm(node.operand);\r\n                if (operandType != null) {\r\n                    let resultType1 = operandType.getUnaryResultType(node.operator);\r\n                    if (resultType1 == null) {\r\n                        this.pushError(\"Der Operator \" + TokenTypeReadable[node.operator] + \" ist für einen Operanden des Datentyps \" + operandType.toString() + \" nicht definiert.\", \"error\", node.position);\r\n                    }\r\n                    return resultType1;\r\n                } else {\r\n                    return null;\r\n                }\r\n                break;\r\n            case TokenType.callMethod:\r\n                return this.resolveMethodCall(node);\r\n                break;\r\n            //    ConstantNode | IdentifierNode | DotNode | SelectNode | BracketsNode | StarAttributeNode | SelectNode | ListNode;\r\n\r\n            case TokenType.constantNode:\r\n                node.sqlType = SQLBaseType.fromConstantType(node.constantType);\r\n                return node.sqlType;\r\n                break;\r\n            case TokenType.identifier:\r\n                return this.resolveIdentifier(node);\r\n                break;\r\n            case TokenType.dot:\r\n                return this.resolveDot(node);\r\n                break;\r\n            case TokenType.keywordSelect:\r\n                let selectTable = this.resolveSelect(node);\r\n                if (selectTable.columns.length != 1) {\r\n                    this.pushError(\"Die Ergebnistabelle einer Unterabfrage an dieser Stelle muss genau eine Spalte besitzen.\", \"error\", node.position);\r\n                    return null;\r\n                }\r\n                return selectTable.columns[0].type;\r\n                break;\r\n            case TokenType.rightBracket:   // BracketsNode\r\n                node.sqlType = this.resolveTerm(node.termInsideBrackets);\r\n                return node.sqlType;\r\n                break;\r\n            case TokenType.allColumns:\r\n                this.pushError(\"Das Zeichen * kann hier nicht verwendet werden.\", \"error\", node.position);\r\n                break;\r\n            case TokenType.list:\r\n                this.pushError(\"Eine Liste wird hier nicht erwartet.\", \"error\", node.position);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    resolveDot(node: DotNode): SQLType {\r\n        let tableSymbols = this.getCurrentSymbolTable().findTables(node.identifierLeft.identifier);\r\n        if (tableSymbols.length == 0) {\r\n            this.pushError(\"Die Tabelle \" + node.identifierLeft.identifier + \" kann nicht gefunden werden.\", \"error\", node.identifierLeft.position);\r\n            return null;\r\n        }\r\n        if (tableSymbols.length > 1) {\r\n            this.pushError(\"Der Tabellenbezeichner \" + node.identifierLeft.identifier + \" ist nicht eindeutig.\", \"error\", node.identifierLeft.position);\r\n            return null;\r\n        }\r\n        let table = tableSymbols[0].table;\r\n\r\n        let columns = table.columns.filter(c => c.identifier.toLowerCase() == node.identifierRight.identifier.toLowerCase());\r\n\r\n        if (columns.length == 0) {\r\n            this.pushError(\"Die Tabelle \" + node.identifierLeft.identifier + \" hat keine Spalte mit dem Bezeichner \" + node.identifierRight.identifier + \".\", \"error\", node.identifierRight.position);\r\n            return;\r\n        }\r\n\r\n        if (columns.length > 1) {\r\n            this.pushError(\"Die Tabelle \" + node.identifierLeft.identifier + \" hat mehrere Spalten mit dem Bezeichner \" + node.identifierRight.identifier + \".\", \"error\", node.identifierRight.position);\r\n            return;\r\n        }\r\n\r\n        let column = columns[0];\r\n        node.sqlType = column.type;\r\n        return column.type;\r\n\r\n    }\r\n\r\n    resolveIdentifier(node: IdentifierNode): SQLType {\r\n        let symbols = this.getCurrentSymbolTable().findColumn(node.identifier);\r\n        if (symbols.length == 0) {\r\n            this.pushError(\"Der Bezeichner \" + node.identifier + \" ist an dieser Stelle nicht bekannt.\", \"error\", node.position);\r\n            return null;\r\n        }\r\n        if (symbols.length > 1) {\r\n            this.pushError(\"Der Bezeichner \" + node.identifier + \" ist nicht eindeutig.\", \"error\", node.position);\r\n            return null;\r\n        }\r\n\r\n        let symbol = symbols[0];\r\n        node.sqlType = symbol.column.type;\r\n        return symbol.column.type;\r\n    }\r\n\r\n    resolveMethodCall(node: MethodcallNode): SQLType {\r\n\r\n        let methodStore = SQLMethodStore.getInstance();\r\n        let methods = methodStore.getMethods(node.identifier);\r\n\r\n        methods = methods.filter(m => m.parameters.length == node.operands.length);\r\n        if (node.operands.length == 1 && node.operands[0].type == TokenType.allColumns) {\r\n            methods = methods.filter(m => m.acceptsStarParameter);\r\n            node.sqlType = methods[0].returnType;\r\n            return node.sqlType;\r\n        }\r\n\r\n        if (methods.length == 0) {\r\n            this.pushError(\"Es gibt keine passende Methode mit dem Bezeichner '\" + node.identifier + \"'.\", \"error\", node.position);\r\n            return null;\r\n        }\r\n\r\n        for (let operand of node.operands) {\r\n            if (this.resolveTerm(operand) == null) {\r\n                node.sqlType = methods[0].returnType;\r\n                return node.sqlType;\r\n            }\r\n        }\r\n\r\n        for (let method of methods) {\r\n            let found = true;\r\n            for (let i = 0; i < method.parameters.length; i++) {\r\n                let methodParameter = method.parameters[i];\r\n                let operand = node.operands[i];\r\n                if (!operand.sqlType.canCastTo(methodParameter.type)) {\r\n                    found = false;\r\n                    break;\r\n                }\r\n            }\r\n            if (found) {\r\n                node.sqlType = method.returnType;\r\n                return node.sqlType;\r\n            }\r\n        }\r\n\r\n        this.pushError(\"Es gibt keine passende Methode mit dem Bezeichner '\" + node.identifier + \"'.\", \"error\", node.position);\r\n        return null;\r\n\r\n    }\r\n\r\n    resolveNotIn(node: BinaryOpNode): SQLType {\r\n\r\n        if (node.firstOperand == null || node.secondOperand == null) return null;\r\n\r\n        let operatorString = TokenTypeReadable[node.operator];\r\n\r\n        this.resolveTerm(node.firstOperand);\r\n        let leftType = node.firstOperand.sqlType;\r\n        if (leftType != null) {\r\n            if (node.secondOperand.type == TokenType.keywordSelect) {\r\n                let selectNode = node.secondOperand;\r\n                if (selectNode.columnList.length != 1) {\r\n                    this.pushError(\"Wenn rechts vom Operator '\" + operatorString + \"' eine Unterabfrage steht, muss die Ergebnistabelle dieser Unterabfrage genau eine Spalte haben.\", \"error\", selectNode.position);\r\n                }\r\n                this.resolveSelect(selectNode);\r\n                let pType = selectNode.columnList[0].term.sqlType;\r\n                if (!pType.canCastTo(leftType)) {\r\n                    this.pushError(\"Der Datentyp der Ergebnisspalte der Unterabfrage ist \" + pType.toString() + \". Dieser kann nicht in den Datentyp \" + leftType.toString() + \" umgewandelt werden.\", \"error\", selectNode.position);\r\n                }\r\n            } else if (node.secondOperand.type == TokenType.list) {\r\n                let listNode = node.secondOperand;\r\n                for (let element of listNode.elements) {\r\n                    let elementType = SQLBaseType.fromConstantType(element.constantType);\r\n                    element.sqlType = elementType;\r\n                    if (!elementType.canCastTo(leftType)) {\r\n                        this.pushError(\"Der Datentyp des Listenelements \" + element.constant + \" ist \" + elementType.toString() + \". Er kann nicht in den Datentype \" + leftType.toString() + \" des Operanden auf der linken Seite des Operators '\" + operatorString + \"' umgewandelt werden.\", \"error\", element.position);\r\n                    }\r\n                }\r\n            } else {\r\n                this.pushError(\"Der rechte Operand der Operatoren 'in' und 'not in' muss eine Unterabfrage oder eine Liste sein.\", \"error\", node.secondOperand.position);\r\n            }\r\n\r\n        }\r\n\r\n        return SQLBaseType.getBaseType(\"boolean\");\r\n    }\r\n\r\n    resolveInsert(astNode: InsertNode) {\r\n\r\n        let table: Table = null;\r\n        let symbolTable = this.pushNewSymbolTable(astNode.position, astNode.endPosition);\r\n        if (astNode.table != null) {\r\n            astNode.table.table = this.tables.find(t => t.identifier.toLowerCase() == astNode.table.identifier.toLocaleLowerCase());\r\n            if (astNode.table.table == null) {\r\n                this.pushError(\"Die Tabelle \" + astNode.table.identifier + \" gibt es nicht.\", \"error\", astNode.table.position);\r\n            } else {\r\n                table = astNode.table.table;\r\n                symbolTable.storeTableSymbols(table);\r\n            }\r\n        }\r\n\r\n        let tableCompletionTo = astNode.endPosition;\r\n        if (astNode.valuesPosition != null) tableCompletionTo = astNode.valuesPosition;\r\n        if (astNode.columnsPosition != null) tableCompletionTo = astNode.columnsPosition;\r\n\r\n        this.module.addCompletionHint(astNode.position, tableCompletionTo, false, true, [\"into\", \"values\"]);\r\n\r\n        if (table != null) {\r\n            this.module.addCompletionHint(tableCompletionTo, astNode.valuesPosition == null ? astNode.endPosition : astNode.valuesPosition, true, false, [\"values\"]);\r\n        }\r\n\r\n        let tableSymbolTable = this.pushNewSymbolTable(astNode.position, tableCompletionTo);\r\n        tableSymbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n\r\n        let columns: Column[] = [];\r\n        // Parse column list\r\n        if (astNode.columnList.length == 0) {\r\n            if (table != null) {\r\n                columns = table.columns;\r\n            }\r\n        } else {\r\n            if (table != null) {\r\n                for (let columnNode of astNode.columnList) {\r\n                    let column = table.columns.find(c => c.identifier.toLowerCase() == columnNode.identifier.toLowerCase());\r\n                    if (column == null) {\r\n                        this.pushError(\"Die Tabelle \" + table.identifier + \" besitzt keine Spalte mit dem Bezeichner \" + columnNode.identifier + \".\", \"error\", columnNode.position);\r\n                    } else {\r\n                        columns.push(column);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (columns.length > 0) {\r\n            // Parse value lists\r\n            for (let valueList of astNode.values) {\r\n                if (valueList.length != columns.length && valueList.length > 0) {\r\n                    this.pushError(\"Erwartet werden \" + columns.length + \" Elemente, hier stehen aber \" + valueList.length + \" Elemente in der Liste.\", \"error\", valueList[0].position);\r\n                } else {\r\n                    for (let i = 0; i < valueList.length; i++) {\r\n                        let value = valueList[i];\r\n                        let column = columns[i];\r\n                        value.sqlType = SQLBaseType.fromConstantType(value.constantType);\r\n                        // constantType == 40 means: null\r\n                        // TODO: check if column is nullable!\r\n                        let destType = column.type.toString().toLocaleLowerCase();\r\n                        if (value.constantType == TokenType.keywordNull) {\r\n                            if (!column.isNullable || column.notNull) {\r\n                                this.pushError(\"Die Spalte \" + column.identifier + \" ist nicht nullable, daher kann null hier nicht eingefügt werden.\", \"error\", value.position);\r\n                            }\r\n                        } else if (!value.sqlType.canCastTo(column.type)) {\r\n                            let error: string = \"Der Wert \" + value.constant + \" vom Datentyp \" + value.sqlType.toString() + \" kann nicht in den Datentyp \" + column.type.toString() + \" der Spalte \" + column.identifier + \" umgewandelt werden.\";\r\n\r\n                            if(destType == \"date\") error += \"<br><b>Tipp: </b>Datumswerte haben die Form 'yyyy-mm-dd', also z.B. '2022-06-15'.\";\r\n                            if(destType == \"datetime\") error += \"<br><b>Tipp: </b>Timestamps haben die Form 'yyyy-mm-dd hh:min:ss', also z.B. '2022-06-15 07:56:22'.\";\r\n\r\n                            this.pushError(error, \"error\", value.position);\r\n                        } else if(destType == \"date\"){\r\n                            if(!isDate(value.constant)){\r\n                                let error: string = `'${value.constant}' ist kein date-Wert.<br><b>Tipp: </b>Datumswerte haben die Form 'yyyy-mm-dd', also z.B. '2022-06-15'.`;\r\n                                this.pushError(error, \"error\", value.position);\r\n                            }\r\n                        } else if(destType == \"datetime\"){\r\n                            if(!isDateTime(value.constant)){\r\n                                let error: string = `'${value.constant}' ist kein datetime-Wert.<br><b>Tipp: </b>Timestamps haben die Form 'yyyy-mm-dd hh:min:ss', also z.B. '2022-06-15 07:56:22'.`;\r\n                                this.pushError(error, \"error\", value.position);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        this.symbolTableStack.pop();\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { SymbolResolver } from \"./parser/SymbolResolver.js\";\r\n\r\nexport enum CompilerStatus {\r\n    compiling, error, compiledButNothingToRun, readyToRun\r\n}\r\n\r\nexport class Compiler {\r\n\r\n    compilerStatus: CompilerStatus = CompilerStatus.compiledButNothingToRun;\r\n\r\n    atLeastOneModuleIsStartable: boolean;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    compile(moduleStore: ModuleStore): Error[] {\r\n\r\n        this.compilerStatus = CompilerStatus.compiling;\r\n\r\n        let t0 = performance.now();\r\n\r\n        let lexer = new Lexer();\r\n\r\n        // 1st pass: lexing\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.file.dirty = false;\r\n            m.clear();\r\n\r\n            let lexed = lexer.lex(m.getProgramTextFromMonacoModel());\r\n            m.errors[0] = lexed.errors;\r\n            m.tokenList = lexed.tokens;\r\n            m.bracketError = lexed.bracketError;\r\n            if(m.file.name == this.main.getCurrentlyEditedModule().file.name){\r\n                if(this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(lexed.bracketError);\r\n            }\r\n        }\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        this.main.getSemicolonAngel().startRegistering();\r\n\r\n        let parser: Parser = new Parser(false);\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            parser.parse(m);\r\n        }\r\n        \r\n        // 3rd pass: check symbols and types\r\n        let databaseTool = this.main.getDatabaseTool();\r\n        let symbolResolver: SymbolResolver = new SymbolResolver(databaseTool);\r\n\r\n        for(let m of moduleStore.getModules(false)){\r\n            symbolResolver.start(m);\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        let message = \"Compiled in \" + dt + \" ms.\";\r\n\r\n        this.main.getCurrentWorkspace().compilerMessage = message;\r\n\r\n        this.main.getSemicolonAngel().healSemicolons();\r\n\r\n        this.compilerStatus = CompilerStatus.readyToRun;\r\n\r\n        return null;\r\n    }\r\n\r\n}","import { FileData } from \"../../communication/Data.js\";\r\nimport { AccordionElement } from \"../../main/gui/Accordion.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenType, TextPositionWithoutLength } from \"../lexer/Token.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { ASTNode } from \"./AST.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\nimport { stringToDate } from \"../../tools/StringTools.js\";\r\nimport { SQLStatement } from \"./Parser.js\";\r\n\r\n\r\nexport type CompletionHint = {\r\n    fromLine: number,\r\n    fromColumn: number,\r\n    toLine: number, \r\n    toColumn: number,\r\n    hintColumns: boolean,\r\n    hintColumnsOfTable?: string,\r\n    hintTables: boolean,\r\n    hintKeywords: string[],\r\n    dontHint?: string[],\r\n    praefix?: string,\r\n    suffix?: string\r\n}\r\n\r\nexport type File = {\r\n    name: string,\r\n    id?: number,\r\n    text: string,\r\n\r\n    text_before_revision: string,\r\n    submitted_date: string,\r\n    student_edited_after_revision: boolean,\r\n\r\n    dirty: boolean,\r\n    saved: boolean,\r\n    version: number,\r\n    panelElement?: AccordionElement\r\n\r\n}\r\n\r\nexport type IdentifierPosition = {\r\n    position: TextPosition,\r\n    element: any;\r\n}\r\n\r\nexport type MethodCallPosition = {\r\n    identifierPosition: TextPosition,\r\n    possibleMethods: any[] | string, // string for print, println, ...\r\n    commaPositions: TextPosition[],\r\n    rightBracketPosition: TextPosition\r\n}\r\n\r\nexport class Module {\r\n    file: File;\r\n    static maxUriNumber: number = 0;\r\n    uri: monaco.Uri;\r\n    model: monaco.editor.ITextModel;\r\n    oldErrorDecorations: string[] = [];\r\n    lastSavedVersionId: number;\r\n    editorState: monaco.editor.ICodeEditorViewState;\r\n\r\n    errors: Error[][] = [[], [], [], []]; // 1st pass, 2nd pass, 3rd pass\r\n\r\n    // 1st pass: Lexer\r\n    tokenList: Token[];\r\n\r\n    // 2nd pass: ASTParser\r\n    sqlStatements: SQLStatement[];\r\n    mainSymbolTable: SymbolTable;\r\n\r\n\r\n    identifierPositions: { [line: number]: IdentifierPosition[] } = {};\r\n    methodCallPositions: { [line: number]: MethodCallPosition[] } = {};\r\n\r\n    static uriMap: { [name: string]: number } = {};\r\n    bracketError: string;\r\n\r\n    completionHints: Map<number, CompletionHint[]> = new Map(); // Map from line numbers to hints\r\n\r\n    constructor(file: File, public main: MainBase) {\r\n        if (file == null || this.main == null) return; // used by AdhocCompiler and ApiDoc\r\n\r\n        this.file = file;\r\n        // this.uri = monaco.Uri.from({ path: '/file' + (Module.maxUriNumber++) + '.learnJava', scheme: 'file' });\r\n        let path = file.name;\r\n\r\n        let uriCounter = Module.uriMap[path];\r\n        if (uriCounter == null) {\r\n            uriCounter = 0;\r\n        } else {\r\n            uriCounter++;\r\n        }\r\n        Module.uriMap[path] = uriCounter;\r\n\r\n        if (uriCounter > 0) path += \" (\" + uriCounter + \")\";\r\n        this.uri = monaco.Uri.from({ path: path, scheme: 'inmemory' });\r\n        this.model = monaco.editor.createModel(file.text, \"vscSQL\", this.uri);\r\n        this.model.updateOptions({ tabSize: 3 });\r\n\r\n        this.lastSavedVersionId = this.model.getAlternativeVersionId();\r\n\r\n        let that = this;\r\n\r\n        this.model.onDidChangeContent(() => {\r\n            let versionId = that.model.getAlternativeVersionId();\r\n\r\n            if (versionId != that.lastSavedVersionId) {\r\n                that.file.dirty = true;\r\n                that.file.saved = false;\r\n                that.lastSavedVersionId = versionId;\r\n            }\r\n\r\n            if(!that.main.isEmbedded()){\r\n                let main1: Main = <Main>main;\r\n                if (main1.workspacesOwnerId != main1.user.id) {\r\n                    if (that.file.text_before_revision == null || that.file.student_edited_after_revision) {\r\n                        that.file.student_edited_after_revision = false;\r\n                        that.file.text_before_revision = that.file.text;\r\n                        that.file.saved = false;\r\n                        main1.networkManager.sendUpdates(null, false);\r\n                        main1.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n                        main1.projectExplorer.renderHomeworkButton(that.file);\r\n                    }\r\n                } else {\r\n                    that.file.student_edited_after_revision = true;\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    addCompletionHint(fromPosition: TextPosition, toPosition: TextPosition, hintColumns: boolean|string, hintTables: boolean, \r\n        hintKeywords: string[], dontHint?: string[], praefix: string = \"\", suffix: string = \"\"){\r\n        let ch: CompletionHint = {\r\n            fromColumn: fromPosition.column,\r\n            fromLine: fromPosition.line,\r\n            toColumn: toPosition.column,\r\n            toLine: toPosition.line,\r\n            hintColumns: (typeof hintColumns == \"boolean\")? hintColumns : true, \r\n            hintColumnsOfTable: (typeof hintColumns == \"string\")? hintColumns : null,\r\n            hintTables: hintTables,\r\n            hintKeywords: hintKeywords,\r\n            dontHint: dontHint,\r\n            praefix: praefix,\r\n            suffix: suffix\r\n        }\r\n\r\n        for(let i = ch.fromLine; i <= ch.toLine; i++){\r\n            let chList = this.completionHints.get(i);\r\n            if(chList == null){\r\n                chList = [];\r\n                this.completionHints.set(i, chList);\r\n            }\r\n            chList.push(ch);\r\n        }\r\n    }\r\n\r\n    getSQLSTatementsAtSelection(sel: monaco.Selection): SQLStatement[] {\r\n        let selStart = {line: sel.startLineNumber, column: sel.startColumn};\r\n        let selEnd = {line: sel.endLineNumber, column: sel.endColumn};\r\n\r\n        if(this.sqlStatements == null){\r\n            return [];\r\n        }\r\n\r\n        return this.sqlStatements.filter(stmt => {\r\n            return !(this.compare(stmt.to, selStart) < 0 || this.compare(stmt.from, selEnd) > 0);\r\n        })\r\n\r\n    }\r\n\r\n    /**\r\n     * returns 1 if a > b, 0 if a == b and -1 if a < b\r\n     * @param a \r\n     * @param b \r\n     */\r\n    compare(a: {line: number, column: number}, b: {line: number, column: number}): number{\r\n        if(a.line > b.line) return 1;\r\n        if(a.line < b.line) return -1;\r\n        if(a.column > b.column) return 1;\r\n        if(a.column < b.column) return -1;\r\n        return 0;\r\n    }\r\n\r\n\r\n\r\n    getSQLStatementAtPosition(p: { lineNumber: number, column: number }): SQLStatement {\r\n\r\n        return this.sqlStatements.find(statement => {\r\n            if(statement.from.line > p.lineNumber ) return false;\r\n            if(statement.from.line == p.lineNumber && statement.from.column > p.column) return false;\r\n            if(statement.to.line < p.lineNumber) return false;\r\n            if(statement.to.line == p.lineNumber && statement.to.column < p.column) return false;\r\n            return true;\r\n        });        \r\n\r\n    }\r\n\r\n\r\n    getCompletionHint(line: number, column: number){\r\n        let chList = this.completionHints.get(line);\r\n        \r\n        if(chList == null || chList.length == 0){\r\n            return null;\r\n        }\r\n\r\n        let pos = line * 1000 + column;\r\n        chList = chList.filter(ch => pos >= ch.fromLine * 1000 + ch.fromColumn && pos <= ch.toLine * 1000 + ch.toColumn);\r\n        if(chList.length == 0){\r\n            return;\r\n        }\r\n\r\n        // take CompletionHint with smallest range:\r\n        let bestCh: CompletionHint = chList[0];\r\n        let bestRangeLength  = (bestCh.toLine - bestCh.fromLine)*1000 + (bestCh.toColumn - bestCh.fromColumn);\r\n\r\n        for(let i = 1; i < chList.length; i++){\r\n            let ch = chList[i];\r\n            let rangeLength = (ch.toLine - ch.fromLine) * 1000 + (ch.toColumn - ch.fromColumn);\r\n\r\n            if(rangeLength < bestRangeLength){\r\n                bestCh = ch;\r\n                bestRangeLength = rangeLength;\r\n            }\r\n\r\n        }\r\n\r\n        return bestCh;\r\n    }\r\n\r\n\r\n    static restoreFromData(f: FileData, main: MainBase): Module {\r\n\r\n        let f1: File = {\r\n            name: f.name,\r\n            text: f.text,\r\n            text_before_revision: f.text_before_revision,\r\n            submitted_date: f.submitted_date,\r\n            student_edited_after_revision: false,\r\n            dirty: true,\r\n            saved: true,\r\n            version: f.version,\r\n            id: f.id\r\n        }\r\n\r\n        let m: Module = new Module(f1, main);\r\n\r\n        return m;\r\n\r\n    }\r\n\r\n    getFileData(workspace: Workspace): FileData {\r\n        let file = this.file;\r\n        let fd: FileData = {\r\n            id: file.id,\r\n            name: file.name,\r\n            text: file.text,\r\n            text_before_revision: file.text_before_revision,\r\n            submitted_date: file.submitted_date,\r\n            student_edited_after_revision: file.student_edited_after_revision,\r\n            version: file.version,\r\n            workspace_id: workspace.id,\r\n            forceUpdate: false,\r\n            file_type: 11\r\n        }\r\n\r\n        return fd;\r\n    }\r\n\r\n\r\n    findSymbolTableAtPosition(line: number, column: number) {\r\n        if (this.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (line > this.mainSymbolTable.positionTo.line ||\r\n            line == this.mainSymbolTable.positionTo.line && column > this.mainSymbolTable.positionTo.column\r\n        ) {\r\n            line = this.mainSymbolTable.positionTo.line;\r\n            column = this.mainSymbolTable.positionTo.column - 1;\r\n        }\r\n\r\n        return this.mainSymbolTable.findTableAtPosition(line, column);\r\n    }\r\n\r\n    getErrorCount(): number {\r\n\r\n        let ec = 0;\r\n        for (let el of this.errors) {\r\n            el.forEach(error => ec += error.level == \"error\" ? 1 : 0);\r\n            // ec += el.length;\r\n        }\r\n\r\n        return ec;\r\n    }\r\n\r\n    getProgramTextFromMonacoModel(): string {\r\n        return this.model.getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n    }\r\n\r\n\r\n    addIdentifierPosition(position: TextPosition, element: any) {\r\n        let positionList: IdentifierPosition[] = this.identifierPositions[position.line];\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            this.identifierPositions[position.line] = positionList;\r\n        }\r\n        positionList.push({\r\n            position: position,\r\n            element: element\r\n        });\r\n    }\r\n\r\n    getElementAtPosition(line: number, column: number): any {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let bestFoundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column < p.position.column + p.position.length) {\r\n\r\n                if (p.position.length > 0) {\r\n                    if (bestFoundPosition == null) {\r\n                        bestFoundPosition = p;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bestFoundPosition == null ? null : <any>bestFoundPosition.element;\r\n    }\r\n\r\n    copy(): Module {\r\n        let m = new Module(this.file, this.main);\r\n        m.model = this.model;\r\n        m.mainSymbolTable = this.mainSymbolTable;\r\n        this.mainSymbolTable = null;\r\n\r\n        this.file.dirty = true;\r\n\r\n        return m;\r\n    }\r\n\r\n    clear() {\r\n\r\n        this.identifierPositions = {};\r\n\r\n        if (this.file != null && this.file.dirty) {\r\n            // Lexer\r\n            this.tokenList = null;\r\n            this.errors[0] = [];\r\n\r\n            // AST Parser\r\n            this.errors[1] = [];\r\n\r\n\r\n        }\r\n\r\n        // type resolver\r\n        this.errors[2] = [];\r\n\r\n        // Code generator\r\n        this.errors[3] = [];\r\n        this.mainSymbolTable = new SymbolTable(null, { line: 1, column: 1, length: 1 }, { line: 100000, column: 1, length: 0 });\r\n\r\n        this.methodCallPositions = {};\r\n\r\n    }\r\n\r\n    hasErrors() {\r\n\r\n        for (let el of this.errors) {\r\n            if (el.find(error => error.level == \"error\")) {\r\n                return true;\r\n            }\r\n            // if (el.length > 0) {\r\n            //     return true;\r\n            // }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getSortedAndFilteredErrors(): Error[] {\r\n\r\n        let list: Error[] = [];\r\n\r\n        for (let el of this.errors) {\r\n            list = list.concat(el);\r\n        }\r\n\r\n        list.sort((a, b) => {\r\n            if (a.position.line > b.position.line) {\r\n                return 1;\r\n            }\r\n            if (b.position.line > a.position.line) {\r\n                return -1;\r\n            }\r\n            if (a.position.column >= b.position.column) {\r\n                return 1;\r\n            }\r\n            return -1;\r\n        });\r\n\r\n        for (let i = 0; i < list.length - 1; i++) {\r\n            let e1 = list[i];\r\n            let e2 = list[i + 1];\r\n            if (e1.position.line == e2.position.line && e1.position.column + 10 > e2.position.column) {\r\n                if (this.errorLevelCompare(e1.level, e2.level) == 1) {\r\n                    list.splice(i + 1, 1);\r\n                } else {\r\n                    list.splice(i, 1);\r\n                }\r\n                i--;\r\n            }\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    errorLevelCompare(level1: ErrorLevel, level2: ErrorLevel): number {\r\n        if (level1 == \"error\") return 1;\r\n        if (level2 == \"error\") return 2;\r\n        if (level1 == \"warning\") return 1;\r\n        if (level2 == \"warning\") return 2;\r\n        return 1;\r\n    }\r\n}\r\n\r\n\r\nexport class ModuleStore {\r\n\r\n    private modules: Module[] = [];\r\n    private moduleMap: Map<string, Module> = new Map();\r\n\r\n    dirty: boolean = false;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    findModuleById(module_id: number): Module {\r\n        for (let module of this.modules) {\r\n            if (module.file.id == module_id) return module;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    copy(): ModuleStore {\r\n        let ms: ModuleStore = new ModuleStore(this.main);\r\n        for (let m of this.modules) {\r\n            ms.putModule(m.copy());\r\n        }\r\n        return ms;\r\n    }\r\n\r\n    findModuleByFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                return m;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        for (let m of this.modules) {\r\n            if (m.hasErrors()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getFirstModule(): Module {\r\n        if (this.modules.length > 0) {\r\n            for (let mo of this.modules) {\r\n                return mo;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    isDirty(): boolean {\r\n\r\n        if (this.dirty) {\r\n            this.dirty = false;\r\n            return true;\r\n        }\r\n\r\n        let dirty = false;\r\n        for (let m of this.modules) {\r\n            if (m.file.dirty) {\r\n                dirty = true;\r\n                break;\r\n            }\r\n        }\r\n        return dirty;\r\n    }\r\n\r\n\r\n    getModules(includeSystemModules: boolean, excludedModuleName?: String): Module[] {\r\n        let ret = [];\r\n        for (let m of this.modules) {\r\n            if (m.file.name != excludedModuleName) {\r\n                ret.push(m);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    putModule(module: Module) {\r\n        this.modules.push(module);\r\n        this.moduleMap[module.file.name] = module;\r\n    }\r\n\r\n    removeModuleWithFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                this.removeModule(m);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n\r\n        if (this.modules.indexOf(module) < 0) return;\r\n\r\n        this.modules.splice(this.modules.indexOf(module), 1);\r\n        this.moduleMap[module.file.name] = undefined;\r\n        this.dirty = true;\r\n    }\r\n\r\n    getModule(moduleName: string): Module {\r\n        return this.moduleMap[moduleName];\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type ButtonToggler = (state: boolean) => void;\r\n\r\nexport type Action = (name: string, buttonToggler?: ButtonToggler, pressed_key?: string) => void;\r\n\r\nexport type ActionEntry = {\r\n    text?: string,\r\n    keys: string[],\r\n    action: Action,\r\n    identifier: string, // name of Action is copied automatically to name of ActionEntry\r\n    active: boolean\r\n}\r\n\r\nexport class ActionManager {\r\n\r\n    actions: { [actionIdentifier: string]: ActionEntry } = { };\r\n\r\n    keyEntries: { [key: string]: ActionEntry[] } = {};\r\n\r\n    buttons: { [actionIdentifier: string]: JQuery<HTMLElement>[] } = {};\r\n\r\n    constructor(private $mainElement: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public init(){\r\n\r\n        let $element:JQuery<any> = this.$mainElement;\r\n        \r\n        if($element == null) $element = jQuery(document);\r\n\r\n        let that = this;\r\n        $element.on(\"keydown\", function (event: JQuery.KeyDownEvent) { \r\n            if(event != null){\r\n                that.executeKeyDownEvent(event); \r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    trigger(actionIdentifier: string) {\r\n        let ae = this.actions[actionIdentifier];\r\n        if(ae != null){\r\n            ae.action(actionIdentifier, null, \"\");\r\n        }\r\n    }\r\n\r\n\r\n    public registerAction(identifier: string, keys: string[], action: Action, text: string = \"\", button?: JQuery<HTMLElement>){\r\n        let ae: ActionEntry = {\r\n            action: action,\r\n            identifier: identifier,\r\n            keys: keys,\r\n            text: text,\r\n            active: true\r\n        };\r\n\r\n        this.actions[identifier] = ae;\r\n\r\n        for(let key of keys){\r\n            if(this.keyEntries[key.toLowerCase()] == null){\r\n                this.keyEntries[key.toLowerCase()] = [];\r\n            }\r\n            this.keyEntries[key.toLowerCase()].push(ae);\r\n        }\r\n\r\n        if(button != null){\r\n            if(this.buttons[identifier] == null){\r\n                this.buttons[identifier] = [];\r\n            }\r\n            this.buttons[identifier].push(button);\r\n\r\n            let t = text;\r\n            if(keys.length > 0){\r\n                t += \" [\" + keys.join(\", \") + \"]\";\r\n            }\r\n\r\n            button.attr(\"title\", t);\r\n\r\n            button.on('mousedown', () => {\r\n                if(ae.active){\r\n                    action(identifier, null, \"mousedown\");\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public isActive(actionIdentifier: string): boolean {\r\n\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae == null) return false;\r\n\r\n        return ae.active;\r\n    \r\n    }\r\n\r\n    public setActive(actionIdentifier: string, active: boolean){\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae != null){\r\n            ae.active = active;\r\n        }\r\n\r\n        let buttons = this.buttons[actionIdentifier];\r\n        if(buttons != null){\r\n            for(let button of buttons){\r\n                if(active){\r\n                    button.addClass('jo_active');\r\n                } else {\r\n                    button.removeClass('jo_active');\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public executeKeyDownEvent(event: JQuery.KeyDownEvent) {\r\n\r\n        if(document.activeElement.tagName.toLowerCase() == \"input\"){\r\n            return;\r\n        }\r\n\r\n        if (event.keyCode <= 18 && event.keyCode >= 16) {\r\n            return; // ctrl, alt, shift\r\n        }\r\n\r\n        let key: string = \"\";\r\n\r\n        if (event.ctrlKey) {\r\n            key += \"ctrl+\";\r\n        }\r\n\r\n        if (event.shiftKey) {\r\n            key += \"shift+\";\r\n        }\r\n\r\n        if (event.altKey) {\r\n            key += \"alt+\";\r\n        }\r\n\r\n        if(event.key != null){\r\n            key += event.key.toLowerCase();\r\n        }\r\n\r\n        let actionEntries = this.keyEntries[key];\r\n\r\n        if(actionEntries != null){\r\n            for(let actionEntry of actionEntries){\r\n                if (actionEntry.active) {\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    actionEntry.action(actionEntry.identifier, null, key);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { escapeHtml } from \"./StringTools.js\";\r\n\r\nexport function makeEditable(elementWithText: JQuery<HTMLElement>,\r\n    elementToReplace: JQuery<HTMLElement>,\r\n    renameDoneCallback: (newContent: string) => void, selectionRange: { start: number, end: number } = null) {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    if (elementToReplace == null) {\r\n        elementToReplace = elementWithText;\r\n    }\r\n\r\n    let $input = jQuery('<input type=\"text\" class=\"jo_inplaceeditor\" spellcheck=\"false\">');\r\n    $input.css({\r\n        width: elementToReplace.css('width'),\r\n        height: elementToReplace.css('height'),\r\n        color: elementToReplace.css('color'),\r\n        position: elementToReplace.css('position'),\r\n        \"background-color\": elementToReplace.css('background-color'),\r\n        \"font-size\": elementToReplace.css('font-size'),\r\n        \"font-weight\": elementToReplace.css('font-weight'),\r\n        \"box-sizing\": \"border-box\"\r\n    });\r\n    $input.val(elementWithText.text());\r\n    $input.on(mousePointer + \"down\", (e) => { e.stopPropagation(); })\r\n\r\n    if (selectionRange != null) {\r\n        (<HTMLInputElement>$input[0]).setSelectionRange(selectionRange.start, selectionRange.end);\r\n    }\r\n\r\n    elementToReplace.after($input);\r\n    elementToReplace.hide();\r\n    setTimeout(() => {\r\n        $input.focus();\r\n    }, 300);\r\n\r\n    $input.on(\"keydown.me\", (ev) => {\r\n        if (ev.key == \"Enter\" || ev.key == \"Escape\") {\r\n            $input.off(\"keydown.me\");\r\n            $input.off(\"focusout.me\");\r\n            $input.remove();\r\n            elementToReplace.show();\r\n            let newValue = escapeHtml(<string>$input.val());\r\n            renameDoneCallback(newValue);\r\n            return;\r\n        }\r\n    });\r\n\r\n    $input.on(\"focusout.me\", (ev) => {\r\n        $input.off(\"keydown.me\");\r\n        $input.off(\"focusout.me\");\r\n        $input.remove();\r\n        elementToReplace.show();\r\n        let newValue = escapeHtml(<string>$input.val());\r\n        renameDoneCallback(newValue);\r\n        return;\r\n    });\r\n\r\n}\r\n\r\nexport type ContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: () => void;\r\n    link?: string;\r\n    subMenu?: ContextMenuItem[]\r\n};\r\n\r\nexport function openContextMenu(items: ContextMenuItem[], x: number, y: number): JQuery<HTMLElement> {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    let $contextMenu = jQuery('<div class=\"jo_contextmenu\"></div>');\r\n\r\n    let $openSubMenu: JQuery<HTMLElement> = null;\r\n    let parentMenuItem: ContextMenuItem = null;\r\n\r\n    for (let mi of items) {\r\n        let caption: string = mi.caption;\r\n        if (mi.link != null) {\r\n            caption = `<a href=\"${mi.link}\" target=\"_blank\" class=\"jo_menulink\">${mi.caption}</a>`;\r\n        }\r\n        let $item = jQuery('<div>' + caption + (mi.subMenu != null ? '<span style=\"float: right\"> &nbsp; &nbsp; &gt;</span>' : \"\") + '</div>');\r\n        if (mi.color != null) {\r\n            $item.css('color', mi.color);\r\n        }\r\n        if (mi.link == null) {\r\n            $item.on(mousePointer + 'up.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n                jQuery('.jo_contextmenu').remove();\r\n                jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n                jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n                jQuery(document).off(\"keydown.contextmenu\");\r\n                mi.callback();\r\n            });\r\n            $item.on(mousePointer + 'down.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n            });\r\n        } else {\r\n            let $link = $item.find('a');\r\n            $link.on(mousePointer + \"up\", (event) => {\r\n                event.stopPropagation();\r\n                setTimeout(() => {\r\n                    $item.hide();\r\n                }, 500);\r\n            })\r\n            $link.on(mousePointer + \"down\", (event) => {\r\n                event.stopPropagation();\r\n            })\r\n\r\n        }\r\n\r\n        $item.on(mousePointer + 'move.contextmenu', () => {\r\n            if (mi != parentMenuItem && $openSubMenu != null) {\r\n                $openSubMenu.remove();\r\n                parentMenuItem = null;\r\n                $openSubMenu = null;\r\n            }\r\n            if (mi.subMenu != null) {\r\n                $openSubMenu = openContextMenu(mi.subMenu, $item.offset().left + $item.width(), $item.offset().top);\r\n            }\r\n        });\r\n\r\n        $contextMenu.append($item);\r\n    }\r\n\r\n    jQuery(document).on(mousePointer + \"down.contextmenu\", (e) => {\r\n        jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n        jQuery(document).off(\"keydown.contextmenu\");\r\n        jQuery('.jo_contextmenu').remove();\r\n    })\r\n\r\n    jQuery(document).on(\"keydown.contextmenu\", (ev) => {\r\n        if (ev.key == \"Escape\") {\r\n            jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n            jQuery(document).off(\"keydown.contextmenu\");\r\n            jQuery('.jo_contextmenu').remove();\r\n        }\r\n    });\r\n\r\n    let leftRight = x > window.innerWidth * 0.8 ? \"right\" : \"left\";\r\n    let xp = x > window.innerWidth * 0.8 ? window.innerWidth - x : x;\r\n    let topBottom = y > window.innerHeight * 0.8 ? \"bottom\" : \"top\";\r\n    let yp = y > window.innerHeight * 0.8 ? window.innerHeight - y : y;\r\n\r\n    let css = {};\r\n    css[leftRight] = xp + \"px\";\r\n    css[topBottom] = yp + \"px\";\r\n\r\n    $contextMenu.css(css);\r\n\r\n\r\n    jQuery(\"body\").append($contextMenu);\r\n    $contextMenu.show();\r\n\r\n    return $contextMenu;\r\n}\r\n\r\nexport function makeTabs(tabDiv: JQuery<HTMLElement>) {\r\n    let headings = tabDiv.find('.jo_tabheadings>div').not('.jo_noHeading');\r\n    let tabs = tabDiv.find('.jo_tabs>div');\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    headings.on(mousePointer + \"down\", (ev) => {\r\n        let target = jQuery(ev.target);\r\n        headings.removeClass('jo_active');\r\n        target.addClass('jo_active');\r\n        let tab = tabDiv.find('.' + target.data('target'));\r\n        tabs.removeClass('jo_active');\r\n        tabs.trigger('myhide');\r\n        tab.addClass('jo_active');\r\n        tab.trigger('myshow');\r\n    });\r\n\r\n}\r\n\r\nexport function convertPxToNumber(pxString: string): number {\r\n    pxString = pxString.replace('px', '').trim();\r\n    return Number.parseInt(pxString);\r\n}\r\n\r\nexport function makeDiv(id: string, klass: string = \"\", text: string = \"\", css?: { [id: string]: any }): JQuery<HTMLDivElement> {\r\n\r\n    let s = \"\";\r\n    if (id != null && id != \"\") s += ` id=\"${id}\"`;\r\n\r\n    if (klass != null && klass != \"\") s += ` class=\"${klass}\"`;\r\n\r\n    let div = jQuery(`<div${s}></div>`);\r\n\r\n    if (css != null) {\r\n        div.css(css);\r\n    }\r\n\r\n    if (text != null && text != \"\") {\r\n        div.text(text);\r\n    }\r\n\r\n    return <any>div;\r\n\r\n}\r\n\r\nexport type SelectItem = {\r\n    value: string | number,\r\n    object: any,\r\n    caption: string\r\n}\r\n\r\nexport function setSelectItems($selectElement: JQuery<HTMLSelectElement>, items: SelectItem[], activeItemValue?: string | number) {\r\n    $selectElement.empty();\r\n    items.forEach(item => {\r\n        let selected: string = (item.value == activeItemValue) ? ' selected=\"selected\"' : \"\";\r\n        let element = jQuery(`<option value=${item.value}${selected}>${item.caption}</option>`);\r\n        $selectElement.append(element);\r\n        element.data('object', item.object);\r\n    }\r\n    );\r\n\r\n    $selectElement.data('items', items);\r\n\r\n\r\n}\r\n\r\nexport function getSelectedObject($selectDiv: JQuery<HTMLSelectElement>) {\r\n\r\n    let items: SelectItem[] = $selectDiv.data('items');\r\n\r\n    let selectedValue = $selectDiv.val();\r\n\r\n    return items.find(item => item.value == selectedValue)?.object;\r\n\r\n}\r\n\r\nexport var jo_mouseDetected: boolean = false;\r\nexport function checkIfMousePresent() {\r\n    if (matchMedia('(pointer:fine)').matches) {\r\n        jo_mouseDetected = true;\r\n    }\r\n}\r\n\r\nexport function animateToTransparent($element: JQuery<HTMLElement>, cssProperty: string, startColorRgb: number[], duration: number) {\r\n    let colorPraefix = 'rgba(' + startColorRgb[0] + \", \" + startColorRgb[1] + \", \" + startColorRgb[2] + \", \";\r\n    let value = 1.0;\r\n    let delta = value / (duration / 20);\r\n\r\n    let animate = () => {\r\n        $element.css(cssProperty, colorPraefix + value + \")\");\r\n        value -= delta;\r\n        if (value < 0) {\r\n            $element.css(cssProperty, \"\");\r\n        } else {\r\n            setTimeout(animate, 20);\r\n        }\r\n    }\r\n\r\n    animate();\r\n}\r\n\r\nexport function downloadFile(obj: any, filename: string, isBlob: boolean = false) {\r\n    var blob = isBlob? obj : new Blob([JSON.stringify(obj)], { type: 'text/plain' });\r\n    //@ts-ignore\r\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n        //@ts-ignore\r\n        window.navigator.msSaveOrOpenBlob(blob, filename);\r\n    } else {\r\n        var e = document.createEvent('MouseEvents'),\r\n            a = document.createElement('a');\r\n        a.download = filename;\r\n        a.href = window.URL.createObjectURL(blob);\r\n        a.dataset.downloadurl = ['text/plain', a.download, a.href].join(':');\r\n        //@ts-ignore\r\n        e.initEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\r\n        a.dispatchEvent(e);\r\n        a.remove();\r\n    }\r\n}\r\n\r\n\r\nfunction fallbackCopyTextToClipboard(text) {\r\n    var textArea = document.createElement(\"textarea\");\r\n    textArea.value = text;\r\n\r\n    // Avoid scrolling to bottom\r\n    textArea.style.top = \"0\";\r\n    textArea.style.left = \"0\";\r\n    textArea.style.position = \"fixed\";\r\n\r\n    document.body.appendChild(textArea);\r\n    textArea.focus();\r\n    textArea.select();\r\n\r\n    try {\r\n        var successful = document.execCommand('copy');\r\n    } catch (err) {\r\n        console.error('Fallback: Oops, unable to copy', err);\r\n    }\r\n\r\n    document.body.removeChild(textArea);\r\n}\r\n\r\nexport function copyTextToClipboard(text) {\r\n    if (!navigator.clipboard) {\r\n        fallbackCopyTextToClipboard(text);\r\n        return;\r\n    }\r\n    navigator.clipboard.writeText(text).then(function () {\r\n    }, function (err) {\r\n        console.error('Async: Could not copy text: ', err);\r\n    });\r\n}\r\n","import { LoginRequest, PerformanceData } from \"./Data.js\";\r\n\r\n// export var credentials: { username: string, password: string } = { username: null, password: null };\r\n\r\nexport class PerformanceCollector {\r\n    static performanceData: PerformanceData[] = [];\r\n    static performanceDataCount: number = 0;\r\n    static lastTimeSent: number = performance.now();\r\n\r\n    static registerPerformanceEntry(url: string, startTime: number) {\r\n        let pe: PerformanceData = PerformanceCollector.performanceData.find(pe => pe.url == url);\r\n        if (pe == null) {\r\n            pe = { count: 0, sumTime: 0, url: url };\r\n            PerformanceCollector.performanceData.push(pe);\r\n        }\r\n        pe.count++;\r\n        let dt = Math.round(performance.now() - startTime);\r\n        pe.sumTime += dt;\r\n        PerformanceCollector.performanceDataCount++;\r\n        // console.log(\"Performance entry for path \" + pe.url + \": \" + dt + \" ms, aggregated: \" + pe.sumTime + \" for \" + pe.count + \" requests.\");\r\n    }\r\n\r\n    static sendDataToServer() {\r\n        if (performance.now() - PerformanceCollector.lastTimeSent > 3 * 60 * 1000) {\r\n            let request = {\r\n                data: PerformanceCollector.performanceData\r\n            }\r\n\r\n            PerformanceCollector.performanceData = [];\r\n            PerformanceCollector.performanceDataCount = 0;\r\n            PerformanceCollector.lastTimeSent = performance.now();\r\n\r\n            ajax(\"collectPerformanceData\", request, () => { })\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport function ajax(url: string, request: any, successCallback: (response: any) => void,\r\n\r\n    errorCallback?: (message: string) => void) {\r\n\r\n    showNetworkBusy(true);\r\n    let time = performance.now();\r\n\r\n    $.ajax({\r\n        type: 'POST',\r\n        async: true,\r\n        data: JSON.stringify(request),\r\n        contentType: 'application/json',\r\n        url: \"servlet/\" + url,\r\n        success: function (response: any) {\r\n\r\n            PerformanceCollector.registerPerformanceEntry(url, time);\r\n\r\n            showNetworkBusy(false);\r\n            if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n                let error = \"Fehler bei der Bearbeitung der Anfrage\"\r\n                if (response.message != null) error = response.message;\r\n\r\n                if (error == \"Not logged in\") {\r\n                    // setTimeout(() => newLogin(url, request, successCallback, errorCallback), 10000);\r\n                    // location.reload();\r\n                }\r\n\r\n                if (errorCallback) errorCallback(error);\r\n            } else {\r\n                successCallback(response);\r\n            }\r\n            return;\r\n\r\n        },\r\n        error: function (jqXHR, message) {\r\n            showNetworkBusy(false);\r\n            if (errorCallback) {\r\n                let statusText = \"Server nicht erreichbar.\"\r\n                if (jqXHR.status != 0) {\r\n                    statusText = \"\" + jqXHR.status\r\n                }\r\n                errorCallback(message + \": \" + statusText);\r\n                return;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function showNetworkBusy(busy: boolean) {\r\n    if (busy) {\r\n        jQuery('.jo_network-busy').css('visibility','visible');\r\n    } else {\r\n        jQuery('.jo_network-busy').css('visibility','hidden');\r\n    }\r\n}\r\n\r\n\r\n","import { DatabaseData } from \"../communication/Data.js\";\r\n\r\nexport class WDatabase {\r\n\r\n    id: number;\r\n    name: string;\r\n\r\n    templateDump: Uint8Array;\r\n    templateId: number;\r\n    templateName: string;\r\n\r\n    statements: string[];\r\n    published_to: number;\r\n    version: number;\r\n    description: string;\r\n    owner_id: number;\r\n\r\n    static fromDatabaseData(data: DatabaseData): WDatabase {\r\n\r\n        let db = new WDatabase();\r\n\r\n        db.id = data.id;\r\n        db.name = data.name;\r\n        db.statements = data.statements;\r\n        db.published_to = data.published_to;\r\n        db.version = data.version;\r\n        db.description = data.description;\r\n        db.templateDump = null;\r\n        db.templateId = data.template_id;\r\n        db.owner_id = data.owner_id;\r\n        return db;\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n","export class CacheManager {\r\n    \r\n    fetchTemplateFromCache(databaseId: number, callback: (templateDump: Uint8Array) => void) {\r\n        if(databaseId == null){callback(null); return;}\r\n        let that = this;\r\n        if(!this.cacheAvailable()) callback(null);\r\n        this.getCache((cache) => {\r\n            cache.match(that.databaseIdToCacheIdentifier(databaseId)).then(\r\n                (value)=>{\r\n                    value.arrayBuffer().then((buffer) => callback(new Uint8Array(buffer)));\r\n                })\r\n                .catch(() => callback(null));\r\n        })        \r\n    }\r\n\r\n    saveTemplateToCache(databaseId: number, templateDump: Uint8Array) {\r\n        if(!this.cacheAvailable()) return;\r\n        let that = this;\r\n        this.getCache((cache) => {\r\n            cache.put(that.databaseIdToCacheIdentifier(databaseId), new Response(templateDump));\r\n        })        \r\n    }\r\n\r\n    cacheAvailable(): boolean {\r\n        return 'caches' in self;\r\n    }\r\n\r\n    getCache(callback: (cache: Cache) => void) {\r\n        caches.open('my-cache').then(callback);\r\n    }\r\n\r\n    databaseIdToCacheIdentifier(databaseId: number): string {\r\n        return \"/onlineIdeTemplateDb\" + databaseId;\r\n    }\r\n\r\n}","import { Main } from \"../main/Main.js\";\r\nimport { ajax } from \"./AjaxHelper.js\";\r\nimport { WorkspaceData, FileData, SendUpdatesRequest, SendUpdatesResponse, CreateOrDeleteFileOrWorkspaceRequest, CRUDResponse, UpdateUserSettingsRequest, UpdateUserSettingsResponse, DuplicateWorkspaceRequest, DuplicateWorkspaceResponse, ClassData, DistributeWorkspaceRequest, DistributeWorkspaceResponse, GetDatabaseRequest, getDatabaseResponse, GetNewStatementsRequest, GetNewStatementsResponse, AddDatabaseStatementsRequest, AddDatabaseStatementsResponse, TemplateListEntry, GetTemplateListRequest, GetTemplateListResponse, CreateWorkspaceData, GetDatabaseSettingsResponse, GetDatabaseSettingsRequest, setDatabaseSecretRequest as SetDatabaseSecretRequest, SetDatabaseSecretResponse, SetPublishedToRequest, SetPublishedToResponse, GetTemplateRequest, RollbackRequest, RollbackResponse } from \"./Data.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { WDatabase } from \"../workspace/WDatabase.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { CacheManager } from \"./CacheManager.js\";\r\n\r\nexport class NetworkManager {\r\n\r\n    timerhandle: any;\r\n\r\n    ownUpdateFrequencyInSeconds: number = 20;\r\n    teacherUpdateFrequencyInSeconds: number = 5;\r\n\r\n    updateFrequencyInSeconds: number = 20;\r\n    forcedUpdateEvery: number = 2;\r\n    secondsTillNextUpdate: number = this.updateFrequencyInSeconds;\r\n    errorHappened: boolean = false;\r\n\r\n    interval: any;\r\n\r\n    constructor(private main: Main, private $updateTimerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initializeTimer() {\r\n\r\n        let that = this;\r\n        this.$updateTimerDiv.find('svg').attr('width', that.updateFrequencyInSeconds);\r\n\r\n        if (this.interval != null) clearInterval(this.interval);\r\n\r\n        let counterTillForcedUpdate: number = this.forcedUpdateEvery;\r\n\r\n        this.interval = setInterval(() => {\r\n\r\n            if (that.main.user == null) return; // don't call server if no user is logged in\r\n\r\n            that.secondsTillNextUpdate--;\r\n\r\n            if (that.secondsTillNextUpdate < 0) {\r\n                that.secondsTillNextUpdate = that.updateFrequencyInSeconds;\r\n                counterTillForcedUpdate--;\r\n                let forceUpdate = counterTillForcedUpdate == 0;\r\n                if (forceUpdate) counterTillForcedUpdate = this.forcedUpdateEvery;\r\n                that.sendUpdates(() => { }, forceUpdate);\r\n            }\r\n\r\n            let $rect = this.$updateTimerDiv.find('.jo_updateTimerRect');\r\n\r\n            $rect.attr('width', that.secondsTillNextUpdate + \"px\");\r\n\r\n            if (that.errorHappened) {\r\n                $rect.css('fill', '#c00000');\r\n                this.$updateTimerDiv.attr('title', \"Fehler beim letzten Speichervorgang -> Werd's wieder versuchen\");\r\n            } else {\r\n                $rect.css('fill', '#008000');\r\n                this.$updateTimerDiv.attr('title', that.secondsTillNextUpdate + \" Sekunden bis zum nächsten Speichern\");\r\n            }\r\n\r\n        }, 1000);\r\n\r\n    }\r\n\r\n    sendUpdates(callback?: () => void, sendIfNothingIsDirty: boolean = false) {\r\n\r\n        if (this.main.user == null) return;\r\n\r\n        this.main.projectExplorer.writeEditorTextToFile();\r\n\r\n        let userSettings = this.main.user.settings;\r\n\r\n        let wdList: WorkspaceData[] = [];\r\n        let fdList: FileData[] = [];\r\n\r\n        for (let ws of this.main.workspaceList) {\r\n\r\n            if (!ws.saved) {\r\n                wdList.push(ws.getWorkspaceData(false));\r\n                ws.saved = true;\r\n            }\r\n\r\n            for (let m of ws.moduleStore.getModules(false)) {\r\n                if (!m.file.saved) {\r\n                    m.file.text = m.getProgramTextFromMonacoModel();\r\n                    fdList.push(m.getFileData(ws));\r\n                    // console.log(\"Save file \" + m.file.name);\r\n                    m.file.saved = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        let request: SendUpdatesRequest = {\r\n            workspacesWithoutFiles: wdList,\r\n            files: fdList,\r\n            owner_id: this.main.workspacesOwnerId,\r\n            userId: this.main.user.id,\r\n            language: 1,\r\n            currentWorkspaceId: this.main.getCurrentWorkspace()?.id,\r\n            getModifiedWorkspaces: false\r\n        }\r\n\r\n        let that = this;\r\n        if (wdList.length > 0 || fdList.length > 0 || sendIfNothingIsDirty) {\r\n            ajax('sendUpdates', request, (response: SendUpdatesResponse) => {\r\n                that.errorHappened = !response.success;\r\n                if (!that.errorHappened) {\r\n\r\n                    that.updateWorkspaces(request, response);\r\n\r\n                    if (callback != null) {\r\n                        callback();\r\n                        return;\r\n                    }\r\n                }\r\n            }, () => {\r\n                that.errorHappened = true;\r\n            });\r\n        } else {\r\n            if (callback != null) {\r\n                callback();\r\n                return;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    sendCreateWorkspace(wd: CreateWorkspaceData, owner_id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            wd.id = Math.round(Math.random() * 10000000);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"workspace\",\r\n            data: wd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            wd.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n\r\n    getDatabaseSettings(workspace_id: number, callback: (response: GetDatabaseSettingsResponse) => void) {\r\n        let request: GetDatabaseSettingsRequest = {\r\n            workspaceId: workspace_id\r\n        };\r\n        ajax(\"getDatabaseSettings\", request, (response: GetDatabaseSettingsResponse) => {\r\n            callback(response);\r\n        }, (message) => { alert(message) })\r\n    }\r\n\r\n    setNewSecret(workspace_id: number, kind: string, callback: (secret: string) => void) {\r\n        let request: SetDatabaseSecretRequest = {\r\n            workspaceId: workspace_id,\r\n            secretKind: kind\r\n        };\r\n        ajax(\"setNewSecret\", request, (response: SetDatabaseSecretResponse) => {\r\n            callback(response.secret);\r\n        }, (message) => { alert(message) })\r\n    }\r\n\r\n    setNameAndPublishedTo(workspace_id: number, name: string, published_to: number, description: string, callback: () => void) {\r\n        let request: SetPublishedToRequest = {\r\n            workspaceId: workspace_id,\r\n            databaseName: name,\r\n            publishedTo: published_to,\r\n            description: description\r\n        };\r\n\r\n        ajax(\"setPublishedTo\", request, (response: SetPublishedToResponse) => {\r\n            callback();\r\n        }, (message) => { alert(message) })\r\n    }\r\n\r\n\r\n\r\n    sendCreateFile(m: Module, ws: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        let fd: FileData = m.getFileData(ws);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"file\",\r\n            data: fd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            m.file.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDuplicateWorkspace(ws: Workspace, callback: (error: string, workspaceData?: WorkspaceData) => void) {\r\n\r\n        let request: DuplicateWorkspaceRequest = {\r\n            workspace_id: ws.id,\r\n            language: 1\r\n        }\r\n\r\n        ajax(\"duplicateWorkspace\", request, (response: DuplicateWorkspaceResponse) => {\r\n            callback(response.message, response.workspace)\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDistributeWorkspace(ws: Workspace, klasse: ClassData, student_ids: number[], callback: (error: string) => void) {\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request: DistributeWorkspaceRequest = {\r\n                workspace_id: ws.id,\r\n                class_id: klasse?.id,\r\n                student_ids: student_ids,\r\n                language: 1\r\n            }\r\n\r\n            ajax(\"distributeWorkspace\", request, (response: DistributeWorkspaceResponse) => {\r\n                callback(response.message)\r\n            }, callback);\r\n\r\n        }, false);\r\n\r\n    }\r\n\r\n\r\n    sendDeleteWorkspaceOrFile(type: \"workspace\" | \"file\", id: number, callback: (error: string) => void) {\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"delete\",\r\n            entity: type,\r\n            id: id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            if (response.success) {\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendUpdateUserSettings(callback: (error: string) => void) {\r\n\r\n        let request: UpdateUserSettingsRequest = {\r\n            settings: this.main.user.settings,\r\n            userId: this.main.user.id,\r\n            current_workspace_id: this.main.getCurrentWorkspace()?.id\r\n        }\r\n\r\n        ajax(\"updateUserSettings\", request, (response: UpdateUserSettingsResponse) => {\r\n            if (response.success) {\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n\r\n    getNewStatements(workspace: Workspace, callback: (statements: string[], firstNewStatementIndex: number) => void) {\r\n        let request: GetNewStatementsRequest = {\r\n            workspaceId: workspace.id,\r\n            version_before: workspace.database.version\r\n        }\r\n\r\n        ajax(\"getNewStatements\", request, (response: GetNewStatementsResponse) => {\r\n            if (response.success) {\r\n                callback(response.newStatements, response.firstNewStatementIndex);\r\n            }\r\n        });\r\n    }\r\n\r\n    AddDatabaseStatements(workspace: Workspace, statements: string[], callback: (statements_before: string[], new_version: number) => void) {\r\n        let request: AddDatabaseStatementsRequest = {\r\n            workspaceId: workspace.id,\r\n            version_before: workspace.database.version,\r\n            statements: statements\r\n        }\r\n\r\n        ajax(\"addDatabaseStatements\", request, (response: AddDatabaseStatementsResponse) => {\r\n            if (response.success) {\r\n                callback(response.statements_before, response.new_version);\r\n            }\r\n        });\r\n    }\r\n\r\n    fetchDatabase(workspace: Workspace, callback: (error: string) => void) {\r\n\r\n        let cacheManager: CacheManager = new CacheManager();\r\n\r\n        let request: GetDatabaseRequest = {\r\n            workspaceId: workspace.id\r\n        }\r\n\r\n        ajax(\"getDatabase\", request, (response: getDatabaseResponse) => {\r\n            if (response.success) {\r\n\r\n                workspace.database = WDatabase.fromDatabaseData(response.database)\r\n                cacheManager.fetchTemplateFromCache(workspace.database.templateId, (templateDump: Uint8Array) => {\r\n\r\n                    if (templateDump != null) {\r\n                        // @ts-ignore\r\n                        workspace.database.templateDump = pako.inflate(templateDump);\r\n                        callback(null);\r\n                        return;\r\n                    } else {\r\n                        if (workspace.database.templateId == null) {\r\n                            callback(null);\r\n                            return\r\n                        }\r\n                        this.fetchTemplate(workspace.id, (template) => {\r\n                            if (template != null) {\r\n                                cacheManager.saveTemplateToCache(workspace.database.templateId, template);\r\n                                // @ts-ignore\r\n                                workspace.database.templateDump = pako.inflate(template);\r\n                                callback(null);\r\n                                return;\r\n                            } else {\r\n                                callback(\"Konnte das Template nicht laden.\");\r\n                                return;\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    fetchTemplate(workspaceId: number, callback: (template: Uint8Array) => void) {\r\n        let request: GetTemplateRequest = {\r\n            workspaceId: workspaceId\r\n        }\r\n\r\n        $.ajax({\r\n            type: 'POST',\r\n            async: true,\r\n            data: JSON.stringify(request),\r\n            contentType: 'application/json',\r\n            url: \"servlet/getTemplate\",\r\n            xhrFields: { responseType: 'arraybuffer' },\r\n            success: function (response: any) {\r\n                callback(new Uint8Array(response));\r\n            },\r\n            error: function (jqXHR, message) {\r\n                alert(\"Konnte das Template nicht laden.\");\r\n                callback(null);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    fetchTemplateList(callback: (templateList: TemplateListEntry[]) => void) {\r\n        let request: GetTemplateListRequest = { user_id: this.main.user.id }\r\n\r\n        ajax(\"getTemplateList\", request, (response: GetTemplateListResponse) => {\r\n            if (response.success) {\r\n                callback(response.templateList);\r\n            } else {\r\n                callback([]);\r\n            }\r\n        }, (message) => {\r\n            alert(message);\r\n            callback([]);\r\n        })\r\n\r\n    }\r\n\r\n    updateWorkspaces(sendUpdatesRequest: SendUpdatesRequest, sendUpdatesResponse: SendUpdatesResponse) {\r\n\r\n        let idToRemoteWorkspaceDataMap: Map<number, WorkspaceData> = new Map();\r\n\r\n        let fileIdsSended = [];\r\n        sendUpdatesRequest.files.forEach(file => fileIdsSended.push(file.id));\r\n\r\n        sendUpdatesResponse.workspaces.workspaces.forEach(wd => idToRemoteWorkspaceDataMap.set(wd.id, wd));\r\n\r\n        let newWorkspaceNames: string[] = [];\r\n\r\n        for (let remoteWorkspace of sendUpdatesResponse.workspaces.workspaces) {\r\n\r\n            let localWorkspaces = this.main.workspaceList.filter(ws => ws.id == remoteWorkspace.id);\r\n\r\n            // Did student get a workspace from his/her teacher?\r\n            if (localWorkspaces.length == 0) {\r\n                newWorkspaceNames.push(remoteWorkspace.name);\r\n                this.createNewWorkspaceFromWorkspaceData(remoteWorkspace);\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        for (let workspace of this.main.workspaceList) {\r\n            let remoteWorkspace: WorkspaceData = idToRemoteWorkspaceDataMap.get(workspace.id);\r\n            if (remoteWorkspace != null) {\r\n                let idToRemoteFileDataMap: Map<number, FileData> = new Map();\r\n                remoteWorkspace.files.forEach(fd => idToRemoteFileDataMap.set(fd.id, fd));\r\n\r\n                let idToModuleMap: Map<number, Module> = new Map();\r\n                // update/delete files if necessary\r\n                for (let module of workspace.moduleStore.getModules(false)) {\r\n                    let fileId = module.file.id;\r\n                    idToModuleMap.set(fileId, module);\r\n                    let remoteFileData = idToRemoteFileDataMap.get(fileId);\r\n                    if (remoteFileData == null) {\r\n                        this.main.projectExplorer.fileListPanel.removeElement(module);\r\n                        this.main.currentWorkspace.moduleStore.removeModule(module);\r\n                    } else if (remoteFileData.version > module.file.version) {\r\n                        if (fileIdsSended.indexOf(fileId) < 0 || remoteFileData.forceUpdate) {\r\n                            module.file.text = remoteFileData.text;\r\n                            module.model.setValue(remoteFileData.text);\r\n\r\n                            module.file.saved = true;\r\n                            module.lastSavedVersionId = module.model.getAlternativeVersionId()\r\n                        }\r\n                        module.file.version = remoteFileData.version;\r\n                    }\r\n                }\r\n\r\n                // add files if necessary\r\n                for (let remoteFile of remoteWorkspace.files) {\r\n                    if (idToModuleMap.get(remoteFile.id) == null) {\r\n                        this.createFile(workspace, remoteFile);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (newWorkspaceNames.length > 0) {\r\n            let message: string = newWorkspaceNames.length > 1 ? \"Folgende Workspaces hat Deine Lehrkraft Dir gesendet: \" : \"Folgenden Workspace hat Deine Lehrkraft Dir gesendet: \";\r\n            message += newWorkspaceNames.join(\", \");\r\n            alert(message);\r\n        }\r\n\r\n        this.main.projectExplorer.workspaceListPanel.sortElements();\r\n        this.main.projectExplorer.fileListPanel.sortElements();\r\n\r\n    }\r\n\r\n    public createNewWorkspaceFromWorkspaceData(remoteWorkspace: WorkspaceData, withSort: boolean = false) {\r\n        let w = this.main.createNewWorkspace(remoteWorkspace.name, remoteWorkspace.owner_id);\r\n        w.id = remoteWorkspace.id;\r\n        w.sql_history = \"\";\r\n        w.path = remoteWorkspace.path;\r\n        w.isFolder = remoteWorkspace.isFolder;\r\n\r\n        this.main.workspaceList.push(w);\r\n        let path = remoteWorkspace.path.split(\"/\");\r\n        if (path.length == 1 && path[0] == \"\") path = [];\r\n\r\n        let panelElement: AccordionElement = {\r\n            name: remoteWorkspace.name,\r\n            externalElement: w,\r\n            iconClass: \"workspace\",\r\n            isFolder: remoteWorkspace.isFolder,\r\n            path: path\r\n        };\r\n\r\n        this.main.projectExplorer.workspaceListPanel.addElement(panelElement, true);\r\n        w.panelElement = panelElement;\r\n\r\n        for (let fileData of remoteWorkspace.files) {\r\n            this.createFile(w, fileData);\r\n        }\r\n\r\n        if (withSort) {\r\n            this.main.projectExplorer.workspaceListPanel.sortElements();\r\n            this.main.projectExplorer.fileListPanel.sortElements();\r\n        }\r\n    }\r\n\r\n    createFile(workspace: Workspace, remoteFile: FileData) {\r\n        let ae: any = null; //AccordionElement\r\n        if (workspace == this.main.currentWorkspace) {\r\n            ae = {\r\n                name: remoteFile.name,\r\n                externalElement: null\r\n            }\r\n\r\n            this.main.projectExplorer.fileListPanel.addElement(ae, true);\r\n        }\r\n\r\n        let f: any = { // File\r\n            id: remoteFile.id,\r\n            name: remoteFile.name,\r\n            dirty: false,\r\n            saved: true,\r\n            text: remoteFile.text,\r\n            version: remoteFile.version,\r\n            identical_to_repository_version: true,\r\n            workspace_id: workspace.id,\r\n            panelElement: ae\r\n        };\r\n        let m = this.main.projectExplorer.getNewModule(f); //new Module(f, this.main);\r\n        if (ae != null) ae.externalElement = m;\r\n        let modulStore = workspace.moduleStore;\r\n        modulStore.putModule(m);\r\n\r\n    }\r\n\r\n    rollback(callback: (error: string, rollbackLocalNeeded: boolean) => void) {\r\n        let workspace = this.main.currentWorkspace;\r\n        let request: RollbackRequest = { workspaceId: workspace.id, version: workspace.database.version }\r\n\r\n        ajax(\"rollback\", request, (response: RollbackResponse) => {\r\n            if (response.success) {\r\n                \r\n                callback(null, workspace.database.version > response.new_version);\r\n            } else {\r\n                alert(response.message);\r\n                callback(response.message, false);\r\n            }\r\n        }, (message) => {\r\n            alert(message);\r\n            callback(message, false);\r\n        })\r\n\r\n    }\r\n\r\n\r\n}","import { UploadTemplateResponse } from \"../communication/Data.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\n\r\nexport class TemplateUploader {\r\n\r\n    uploadCurrentDatabase(workspace_id: number, main: Main, dump?: Uint8Array, callback: (response: UploadTemplateResponse) => void = () => {}){\r\n        main.waitOverlay.show('Bitte warten, lade Vorlage auf den Server hoch ...');\r\n        if(workspace_id >= 0){\r\n            let dbTool = main.getDatabaseTool();\r\n            dbTool.export((buffer) => {\r\n                // @ts-ignore\r\n                buffer = pako.deflate(buffer);\r\n                this.uploadIntern(buffer, workspace_id, main, callback);        \r\n            }, (error)=>{\r\n                alert(\"Fehler beim Exportieren der Datenbank: \" + error)\r\n                main.waitOverlay.hide();\r\n            })\r\n        } else {\r\n            this.uploadIntern(dump, -1, main, callback);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    private uploadIntern(buffer: Uint8Array, workspace_id: number, main: Main, callback: (response: UploadTemplateResponse) => void) {\r\n        \r\n        $.ajax({\r\n            type: 'POST',\r\n            async: true,\r\n            contentType: 'application/octet-stream',\r\n            data: buffer,\r\n            processData: false,\r\n            headers: { 'x-workspaceid': \"\" + workspace_id },\r\n            url: \"servlet/uploadTemplate\",\r\n            success: function (response: UploadTemplateResponse) {\r\n                main.waitOverlay.hide();\r\n                callback(response);\r\n                return;\r\n\r\n            },\r\n            error: function (jqXHR, message) {\r\n                alert('message');\r\n                main.waitOverlay.hide();\r\n            }\r\n        }\r\n        );\r\n        return buffer;\r\n    }\r\n}","import { CreateWorkspaceData, WorkspaceData } from \"../../communication/Data.js\";\r\nimport { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { TemplateUploader } from \"../../tools/TemplateUploader.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\nexport class DatabaseSettingsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private workspace: Workspace) {\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Datenbank-Einstellungen</div>\r\n            <div style=\"width: 100%; margin-left: 10px\">\r\n                <div class=\"jo_ds_settings\" style=\"margin-left: 0px\">\r\n                <div class=\"jo_ds_settings_caption\">Name der Datenbank:</div><div><input class=\"dialog-input jo_databasename\" value=\"Neue Datenbank\"></input></div>\r\n                </div>\r\n\r\n                <div class=\"jo_ds_settings_caption\" style=\"margin-top: 20px\">\r\n                Zugriffscodes für andere Benutzer:\r\n                </div>\r\n                                \r\n                <div>\r\n                    <table class=\"jo_ds_secret_table\">\r\n                    <tr>\r\n                        <td>Nur Lesen:</td><td class=\"jo_ds_secret jo_ds_secret_read\"></td><td><button class=\"jo_small_button jo_button_code_read\">Neuen Code generieren</button></td>\r\n                    <tr>\r\n                        <td>Lesen und schreiben:</td><td class=\"jo_ds_secret jo_ds_secret_write\"></td><td><button class=\"jo_small_button jo_button_code_write\">Neuen Code generieren</button></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Lesen, schreiben und Struktur verändern:</td><td class=\"jo_ds_secret jo_ds_secret_ddl\"></td><td><button class=\"jo_small_button jo_button_code_ddl\">Neuen Code generieren</button></td>\r\n                    </tr>\r\n                    </table>\r\n                </div>\r\n\r\n                <div class=\"jo_ds_settings_caption\" style=\"margin-top: 20px\">\r\n                Beschreibung:\r\n                </div>\r\n                <div>\r\n                <textarea class=\"jo_ds_settings_description\" maxlength=\"1000\"></textarea>\r\n                </div>\r\n\r\n                <div class=\"jo_ds_settings_caption\" style=\"margin-top: 20px\">\r\n                Datenbank freigeben als Vorlage für andere Benutzer:\r\n                </div>\r\n\r\n                <fieldset id=\"jo_ds_publishedTo\">\r\n                    <input type=\"radio\" id=\"b0\" name=\"publishedFilter\" value=\"0\" checked=\"checked\"><label for=\"b0\">Keine Freigabe</label>\r\n                    <input type=\"radio\" id=\"b1\" name=\"publishedFilter\" value=\"1\"><label for=\"b1\">Freigabe für meine Klasse(n)</label>\r\n                    <input type=\"radio\" id=\"b2\" name=\"publishedFilter\" value=\"2\" style=\"visibility: none\"><label id=\"lb2\" for=\"b2\" style=\"visibility: none\">Freigabe für meine Schule</label>\r\n                    <input type=\"radio\" id=\"b3\" name=\"publishedFilter\" value=\"3\" style=\"visibility: none\"><label id=\"lb3\" for=\"b3\" style=\"visibility: none\">Freigabe für alle Schulen</label>\r\n                </fieldset>\r\n\r\n                <div>\r\n                    <input type=\"checkbox\" id=\"jo_upload_db\" name=\"jo_upload_db\">\r\n                    <label for=\"jo_upload_db\">Aktuellen Zustand der Datenbank als Vorlage hochladen</label>\r\n                </div>\r\n            </div>\r\n\r\n\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_save_button\">Speichern</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n\r\n        let that = this;\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { this.showMainWindow(); });\r\n        jQuery('#jo_ds_save_button').on('click', () => { \r\n            this.saveNameAndPublishedTo();\r\n         })\r\n\r\n        this.setValues();\r\n\r\n        [\"read\", \"write\", \"ddl\"].forEach(kind => {\r\n            jQuery('.jo_button_code_' + kind).on('pointerdown', () => {\r\n                that.main.networkManager.setNewSecret(that.workspace.id, kind, (secret) => {\r\n                    jQuery('.jo_ds_secret_'+kind).text(secret);\r\n                })\r\n            })\r\n        })\r\n\r\n        jQuery('#jo_ds_publishedTo>input').on('change', (e) => {$('#jo_upload_db').prop('checked', !((<HTMLInputElement>jQuery('#b0')[0]).checked))});\r\n\r\n    }\r\n\r\n    saveNameAndPublishedTo(){\r\n        let published_to = 0;\r\n        jQuery('#jo_ds_publishedTo').find('input').each( (n, element) => {\r\n            let $element = jQuery(element);\r\n            //@ts-ignore\r\n            if(<HTMLInputElement>element.checked){\r\n                published_to = Number.parseInt(<string>$element.attr('value'));\r\n            }\r\n        })\r\n\r\n        this.main.networkManager.setNameAndPublishedTo(this.workspace.id, \r\n            <string>jQuery('.jo_databasename').val(), published_to, <string>jQuery('.jo_ds_settings_description').val(),\r\n             () => {\r\n                 if($('#jo_upload_db').prop('checked')){\r\n                    new TemplateUploader().uploadCurrentDatabase(this.workspace.id, this.main);                    \r\n                 }\r\n                 this.showMainWindow(); \r\n                })\r\n    }\r\n\r\n    setValues(){\r\n        jQuery('.jo_databasename').val(this.workspace.name);\r\n        this.main.networkManager.getDatabaseSettings(this.workspace.id, (response) => {\r\n            [\"read\", \"write\", \"ddl\"].forEach(kind => {\r\n                jQuery('.jo_ds_secret_' + kind).text(response.secrets[kind]);\r\n            });\r\n            if(this.main.user.is_admin){\r\n                jQuery('#b3').css('visibility', 'visible');\r\n                jQuery('#lb3').css('visibility', 'visible');\r\n            }\r\n            if(this.main.user.is_schooladmin){\r\n                jQuery('#b2').css('visibility', 'visible');\r\n                jQuery('#lb2').css('visibility', 'visible');\r\n            }\r\n            // jQuery('#jo_ds_publishedTo input').attr('checked', '');\r\n            jQuery('#b'+response.publishedTo).prop('checked', true);\r\n\r\n            jQuery('#jo_upload_db').prop('checked', response.publishedTo != 0);\r\n\r\n            jQuery('.jo_ds_settings_description').val(this.workspace.database.description);\r\n        })\r\n    }\r\n\r\n    showMainWindow() {\r\n        jQuery('#main').css('visibility', 'visible');\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n    }\r\n\r\n\r\n\r\n}","import { WorkspaceData } from \"../communication/Data.js\";\r\nimport { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { DatabaseSettingsDialog } from \"../main/gui/DatabaseSettingsDialog.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { WDatabase } from \"./WDatabase.js\";\r\n\r\nexport class Workspace {\r\n    \r\n    name: string;\r\n    path: string;\r\n    isFolder: boolean;\r\n    id: number;\r\n    owner_id: number;\r\n\r\n    version: number;\r\n    \r\n    moduleStore: ModuleStore;\r\n    panelElement: AccordionElement;\r\n    currentlyOpenModule: Module;\r\n    saved: boolean = true;\r\n\r\n    compilerMessage: string;\r\n\r\n    databaseId: number;\r\n    database: WDatabase;\r\n\r\n    sql_history: string;\r\n\r\n    permissions: number;\r\n\r\n    constructor(name: string, private main: MainBase, owner_id: number){\r\n        this.name = name;\r\n        this.owner_id = owner_id;\r\n        this.moduleStore = new ModuleStore(main);\r\n        this.sql_history = \"\";\r\n    }\r\n    \r\n    getWorkspaceData(withFiles: boolean): WorkspaceData {\r\n        let wd: WorkspaceData = {\r\n            name: this.name,\r\n            id: this.id,\r\n            owner_id: this.owner_id,\r\n            currentFileId: this.currentlyOpenModule == null ? null : this.currentlyOpenModule.file.id,\r\n            files: [],\r\n            sql_history: this.sql_history,\r\n            path: \"\",\r\n            isFolder: false,  \r\n            permissions: this.permissions,\r\n            database_id: this.databaseId\r\n        }\r\n\r\n        if(withFiles){\r\n            for(let m of this.moduleStore.getModules(false)){\r\n    \r\n                wd.files.push(m.getFileData(this));\r\n    \r\n            }\r\n        }\r\n\r\n        return wd;\r\n    }\r\n\r\n    renderSettingsButton(panelElement: AccordionElement) {\r\n        let $buttonDiv = panelElement?.$htmlFirstLine?.find('.jo_additionalButtonSettings');\r\n        if ($buttonDiv == null) return;\r\n        \r\n        // let myMain: Main = <Main>this.main;\r\n\r\n            let $button = jQuery('<div class=\"jo_settingsButton img_settings jo_button jo_active\" title=\"Datenbank-Einstellungen...\"></div>');\r\n            $buttonDiv.append($button);\r\n            let that = this;\r\n            $button.on('mousedown', (e) => e.stopPropagation());\r\n            $button.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                new DatabaseSettingsDialog(<any>that.main, that);\r\n\r\n            });\r\n\r\n        // } else {\r\n        //     $buttonDiv.find('.jo_startButton').remove();\r\n        // }\r\n    }\r\n\r\n\r\n    static restoreFromData(ws: WorkspaceData, main: Main): Workspace {\r\n\r\n        let w = new Workspace(ws.name, main, ws.owner_id);\r\n        w.id = ws.id;\r\n        w.path = ws.path;\r\n        w.isFolder = ws.isFolder;\r\n        w.owner_id = ws.owner_id;\r\n        w.sql_history = ws.sql_history;\r\n        w.permissions = ws.permissions;\r\n        w.databaseId = ws.database_id;\r\n\r\n        for(let f of ws.files){\r\n\r\n            let m: Module = Module.restoreFromData(f, main);\r\n            w.moduleStore.putModule(m);\r\n\r\n            if(f.id == ws.currentFileId){\r\n                w.currentlyOpenModule = m;\r\n            }\r\n\r\n        }\r\n\r\n        return w;\r\n\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        \r\n        return this.moduleStore.hasErrors();\r\n        \r\n    }\r\n\r\n    getModuleByMonacoModel(model: monaco.editor.ITextModel): Module {\r\n        for(let m of this.moduleStore.getModules(false)){\r\n            if(m.model == model){\r\n                return m;\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    }\r\n}\r\n\r\n","import { Editor } from \"./Editor.js\";\r\nimport { CompletionHint, Module } from \"../../compiler/parser/Module.js\";\r\nimport { Symbol, SymbolTable } from \"../../compiler/parser/SymbolTable.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { Column, Table } from \"../../compiler/parser/SQLTable.js\";\r\n\r\nexport class MyCompletionItemProvider implements monaco.languages.CompletionItemProvider {\r\n\r\n    isConsole: boolean;\r\n\r\n    public triggerCharacters: string[] = ['.', 'abcdefghijklmnopqrstuvwxyzäöüß_ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜ', ' ', ',', '('];\r\n\r\n    public keywordCompletionItems: Map<string, monaco.languages.CompletionItem> = new Map();\r\n\r\n    constructor(private main: MainBase) {\r\n        this.setupKeywordCompletionItems();\r\n    }\r\n\r\n    first: boolean = true;\r\n    provideCompletionItems(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, \r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n\r\n\r\n        let module: Module =\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null || module.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n            let that = this;\r\n\r\n            let wfc = function waitForCompiler(){\r\n                if(module.file.dirty){\r\n                    setTimeout(() => {\r\n                        wfc();\r\n                    }, 100);\r\n                } else {\r\n                    resolve(that.provideCompletionItemsIntern(model, position, context, token));\r\n                }\r\n            }\r\n        \r\n            wfc();\r\n\r\n        })\r\n\r\n        // Promise.resolve({\r\n        //     suggestions: completionItems\r\n        // });\r\n    }\r\n\r\n    provideCompletionItemsIntern(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, \r\n        token: monaco.CancellationToken): monaco.languages.CompletionList {\r\n\r\n        setTimeout(() => {\r\n            //@ts-ignore\r\n            let sw = this.main.getMonacoEditor()._contentWidgets[\"editor.widget.suggestWidget\"].widget;\r\n            if (this.first) {\r\n                sw.toggleDetails();\r\n                this.first = false;\r\n            }\r\n        }, 500);\r\n\r\n        let module: Module =\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null || module.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (this.isStringLiteral(module, position)) return null;\r\n\r\n        let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let symbolTable = module.mainSymbolTable.findTableAtPosition(position.lineNumber, position.column);\r\n        let completionHint: CompletionHint = module.getCompletionHint(position.lineNumber, position.column);\r\n        if (completionHint == null) {\r\n            completionHint = {\r\n                fromColumn: 0,\r\n                toColumn: 0,\r\n                fromLine: 0,\r\n                toLine: 0,\r\n                hintColumns: false,\r\n                hintTables: false,\r\n                hintKeywords: []\r\n            }\r\n        }\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n        this.addKeywordCompletionItems(completionHint, completionItems);\r\n\r\n        let dotMatch = textUntilPosition.match(/.*\\s([\\wöäüÖÄÜß]*)(\\.)([\\wöäüÖÄÜß]*)$/);\r\n\r\n        let ibMatch = textAfterPosition.match(/^([\\wöäüÖÄÜß]*)/);\r\n        let identifierAndBracketAfterCursor = \"\";\r\n        if (ibMatch != null && ibMatch.length > 0) {\r\n            identifierAndBracketAfterCursor = ibMatch[0];\r\n        }\r\n\r\n        if (dotMatch == null) {\r\n            this.addIdentifierCompletionItems(completionHint, symbolTable, completionItems);\r\n        } else {\r\n            this.addDotCompletionItems(position, dotMatch, identifierAndBracketAfterCursor, symbolTable, completionItems);\r\n        }\r\n\r\n        let word = model.getWordUntilPosition(position);\r\n        let replaceWordRange = { startColumn: word.startColumn, startLineNumber: position.lineNumber, endColumn: word.endColumn, endLineNumber: position.lineNumber };\r\n        let insertAfterCursorRange = { startColumn: position.column, startLineNumber: position.lineNumber, endColumn: position.column, endLineNumber: position.lineNumber }\r\n\r\n        for (let item of completionItems) {\r\n            if (item.range == null) {\r\n                if (item.insertText.startsWith(\",\")) {\r\n                    item.range = insertAfterCursorRange;\r\n                } else {\r\n                    item.range = replaceWordRange;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (completionHint.dontHint != null) {\r\n            completionItems = completionItems.filter(item => completionHint.dontHint.indexOf(item.insertText) < 0);\r\n        }\r\n\r\n        return {\r\n            suggestions: completionItems\r\n        };\r\n    }\r\n\r\n\r\n    addDotCompletionItems(position: monaco.Position, dotMatch: RegExpMatchArray, identifierAndBracketAfterCursor: string,\r\n        symbolTable: SymbolTable, completionItems: monaco.languages.CompletionItem[]) {\r\n        let textAfterDot = dotMatch[3];\r\n        let textBeforeDot = dotMatch[1];\r\n        let dotColumn = position.column - textAfterDot.length - 1;\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - textAfterDot.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n        for (let symbol of symbolTable.symbolList) {\r\n            if (symbol.table != null) {\r\n                let identifier: string = symbol.table.identifier;\r\n                if (symbol.tableAlias != null) identifier = symbol.tableAlias;\r\n                if (identifier.toLowerCase() == textBeforeDot) {\r\n                    for (let column of symbol.table.columns) {\r\n                        completionItems.push({\r\n                            label: column.identifier,\r\n                            detail: \"Spalte \" + column.identifier + \" der Tabelle \" + symbol.table.identifier,\r\n                            filterText: column.identifier,\r\n                            insertText: column.identifier,\r\n                            insertTextRules: monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                            kind: monaco.languages.CompletionItemKind.Field,\r\n                            range: rangeToReplace\r\n                        })\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    addIdentifierCompletionItems(completionHint: CompletionHint, symbolTable: SymbolTable, completionItems: monaco.languages.CompletionItem[]) {\r\n        let praefix: string = completionHint.praefix == null ? \"\" : completionHint.praefix;\r\n        let suffix: string = completionHint.suffix == null ? \"\" : completionHint.suffix;\r\n\r\n        if (!(completionHint.hintTables || completionHint.hintColumns)) {\r\n            return;\r\n        }\r\n\r\n        let tableIdentifiers: { [identifier: string]: boolean } = {};\r\n\r\n        let st: SymbolTable = symbolTable;\r\n        let columns: { [identifier: string]: Symbol[] } = {};\r\n        let columnIdentifiers: string[] = [];\r\n\r\n        while (st != null) {\r\n            for (let symbol of st.symbolList) {\r\n                if (symbol.column != null) {\r\n                    let columnIdentifier = symbol.column.identifier;\r\n                    if (columns[columnIdentifier] == null) {\r\n                        columns[columnIdentifier] = [symbol];\r\n                        columnIdentifiers.push(columnIdentifier);\r\n                    } else {\r\n                        columns[columnIdentifier].push(symbol);\r\n                    }\r\n                } else if (symbol.table != null && completionHint.hintTables) {\r\n                    if (!tableIdentifiers[symbol.identifier]) {\r\n                        let insertText = praefix + symbol.identifier + suffix;\r\n                        completionItems.push({\r\n                            label: symbol.identifier,\r\n                            detail: \"Tabelle \" + symbol.table.identifier,\r\n                            filterText: symbol.identifier,\r\n                            insertText: insertText,\r\n                            insertTextRules: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                            kind: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemKind.Snippet : monaco.languages.CompletionItemKind.Class,\r\n                            range: undefined,\r\n                            sortText: \"aa\" + symbol.identifier\r\n                        });\r\n                        tableIdentifiers[symbol.identifier] = true;\r\n                    }\r\n                }\r\n            }\r\n            st = st.parent;\r\n        }\r\n\r\n        if (completionHint.hintColumns) {\r\n            for (let ci of columnIdentifiers) {\r\n                let columList = columns[ci];\r\n                let withTable = columList.length > 1 && completionHint.hintColumnsOfTable == null;\r\n                for (let cs of columList) {\r\n                    let text = cs.identifier;\r\n                    if (withTable && cs.identifier == cs.column.identifier.toLowerCase()) {\r\n                        text = (cs.tableAlias == null ? cs.column.table.identifier : cs.tableAlias) + \".\" + text;\r\n                    }\r\n                    if (completionHint.hintColumnsOfTable == null || cs.column?.table?.identifier == completionHint.hintColumnsOfTable) {\r\n                        let insertText = praefix + text + suffix;\r\n                        completionItems.push({\r\n                            label: text,\r\n                            detail: \"Die Spalte \" + cs.column.identifier + \" der Tabelle \" + cs.column.table.identifier,\r\n                            filterText: text,\r\n                            insertText: insertText,\r\n                            insertTextRules: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                            kind: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemKind.Snippet : monaco.languages.CompletionItemKind.Field,\r\n                            range: undefined\r\n                        })\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    keywordToSnippetMap: { [keyword: string]: string } = {\r\n        \"(\": \"(\\n\\t$0\\n)\",\r\n        \"varchar\": \"varchar($1) $0\",\r\n        \"decimal\": \"decimal($1, $2) $0\"\r\n    }\r\n\r\n    addKeywordCompletionItems(completionHint: CompletionHint, completionItems: monaco.languages.CompletionItem[]) {\r\n        let praefix: string = completionHint.praefix == null ? \"\" : completionHint.praefix;\r\n        let suffix: string = completionHint.suffix == null ? \"\" : completionHint.suffix;\r\n\r\n\r\n        for (let text of completionHint.hintKeywords) {\r\n            let insertText = praefix + text + suffix;\r\n            let snippet = this.keywordToSnippetMap[text];\r\n\r\n            let ci = this.keywordCompletionItems.get(text);\r\n            if (ci != null) {\r\n                completionItems.push(ci);\r\n            } else if (snippet != null) {\r\n                let label = snippet.replace(\"$0\", \"\").replace(\"$1\", \"\").replace(\"$2\", \"\").replace(/ /g, \"\").replace(/\\n/g, \"\").replace(/\\t/g, \"\");\r\n                completionItems.push({\r\n                    label: label,\r\n                    detail: \"\",\r\n                    filterText: text,\r\n                    insertText: snippet,\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                })\r\n            } else {\r\n                completionItems.push({\r\n                    label: text,\r\n                    detail: \"\",\r\n                    filterText: text,\r\n                    insertText: text,\r\n                    insertTextRules: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                    kind: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemKind.Snippet : monaco.languages.CompletionItemKind.Keyword,\r\n                    range: undefined,\r\n                    sortText: text == \"from\" ? \"*\" : undefined\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    isStringLiteral(module: Module, position: monaco.Position) {\r\n\r\n        let tokenList = module.tokenList;\r\n        if (tokenList == null || tokenList.length == 0) return false;\r\n\r\n        let posMin = 0;\r\n        let posMax = tokenList.length - 1;\r\n        let pos: number;\r\n\r\n        let watchDog = 1000;\r\n\r\n        while (true) {\r\n            let posOld = pos;\r\n            pos = Math.round((posMax + posMin) / 2);\r\n\r\n            if (posOld == pos) return false;\r\n\r\n            watchDog--;\r\n            if (watchDog == 0) return false;\r\n\r\n            let t = tokenList[pos];\r\n            let p = t.position;\r\n\r\n            if (p.line < position.lineNumber || p.line == position.lineNumber && p.column + p.length < position.column) {\r\n                posMin = pos;\r\n                continue;\r\n            }\r\n\r\n            if (p.line > position.lineNumber || p.line == position.lineNumber && p.column > position.column) {\r\n                posMax = pos;\r\n                continue;\r\n            }\r\n\r\n            return t.tt == TokenType.stringConstant;\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    setupKeywordCompletionItems() {\r\n        this.keywordCompletionItems.set(\"delete from\",\r\n            {\r\n                label: \"delete from <Tabelle> where <Bedingung>\",\r\n                detail: \"Anweisung zum Löschen von Datensätzen\",\r\n                filterText: `delete from`,\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `delete from `,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"drop table\",\r\n            {\r\n                label: \"drop table <Tabelle>\",\r\n                detail: \"Anweisung zum Löschen einer Tabelle\",\r\n                filterText: 'drop table',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `drop table `,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"alter\",\r\n            {\r\n                label: \"alter table <Tabelle> <rename to, rename column, add column, drop column>\",\r\n                detail: \"Anweisung zum Ändern des Schemas (alter table <Tabelle> <rename to, rename column, add column, drop column>)\",\r\n                filterText: 'alter',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `alter table `,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"select\",\r\n            {\r\n                label: \"select <Spalten> from <Tabellen> where <Bedingung>\",\r\n                detail: \"Select-Anweisung\",\r\n                filterText: 'select',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `select $2 from $1\\nwhere $0\\n`,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"create table\",\r\n            {\r\n                label: \"create table <Tabellenbezeichner> (<Spaltendefinitionen>)\",\r\n                detail: \"Create table-Anweisung (Erstellt eine neue Tabelle)\",\r\n                filterText: 'create',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `create table $1 (\\n\\t$0\\n);`,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        // this.keywordCompletionItems.set(\"from\",\r\n        //     {\r\n        //         label: \"from <Tabellen> where <Bedingung>\",\r\n        //         detail: \"from-Teil der select-Anweisung\",\r\n        //         filterText: 'from',\r\n        //         // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n        //         insertText: `from $1\\nwhere $0\\n`,\r\n        //         command: {\r\n        //             id: \"editor.action.triggerSuggest\",\r\n        //             title: '123',\r\n        //             arguments: []\r\n        //         },\r\n        //         insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n        //         kind: monaco.languages.CompletionItemKind.Snippet,\r\n        //         range: undefined\r\n        //     });\r\n\r\n    }\r\n\r\n\r\n}","import { Module, MethodCallPosition } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\n\r\n\r\nexport class MySignatureHelpProvider implements monaco.languages.SignatureHelpProvider {\r\n\r\n    signatureHelpTriggerCharacters?: readonly string[] = ['(', ',', ';', '<', '>', '=']; // semicolon, <, >, = for for-loop, if, while, ...\r\n    signatureHelpRetriggerCharacters?: readonly string[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    provideSignatureHelp(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let that = this;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            setTimeout(() => {\r\n\r\n                this.main.compileIfDirty();\r\n\r\n                resolve(that.provideSignatureHelpLater(model, position, token, context));\r\n\r\n            }, 300);\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    provideSignatureHelpLater(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model != this.main.getMonacoEditor().getModel());\r\n\r\n        let module: Module = \r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        // let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        // let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let methodCallPositions = module.methodCallPositions[position.lineNumber];\r\n\r\n        if (methodCallPositions == null) return null;\r\n\r\n        let methodCallPosition: MethodCallPosition = null;\r\n        let rightMostPosition: number = -1;\r\n\r\n        for (let i = methodCallPositions.length - 1; i >= 0; i--) {\r\n            let mcp = methodCallPositions[i];\r\n            if (mcp.identifierPosition.column + mcp.identifierPosition.length < position.column\r\n                && mcp.identifierPosition.column > rightMostPosition) {\r\n                if (mcp.rightBracketPosition == null ||\r\n                    (position.lineNumber <= mcp.rightBracketPosition.line && position.column <= mcp.rightBracketPosition.column)\r\n                    || (position.lineNumber < mcp.rightBracketPosition.line)) {\r\n                    methodCallPosition = mcp;\r\n                    rightMostPosition = mcp.identifierPosition.column;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (methodCallPosition == null) return null;\r\n\r\n        return this.getSignatureHelp(methodCallPosition, position);\r\n\r\n\r\n\r\n    }\r\n\r\n    getSignatureHelp(methodCallPosition: MethodCallPosition,\r\n        position: monaco.Position): monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let parameterIndex: number = 0;\r\n\r\n        for (let cp of methodCallPosition.commaPositions) {\r\n            if (cp.line < position.lineNumber || (cp.line == position.lineNumber && cp.column < position.column)) {\r\n                parameterIndex++;\r\n            }\r\n        }\r\n\r\n        let signatureInformationList: monaco.languages.SignatureInformation[] = [];\r\n\r\n        return Promise.resolve({\r\n            value: {\r\n                activeParameter: parameterIndex,\r\n                activeSignature: 0,\r\n                signatures: signatureInformationList\r\n            },\r\n            dispose: () => { }\r\n        });\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\n\r\n\r\n\r\nexport class MyHoverProvider {\r\n\r\n    private static keywordDescriptions: { [keyword: string]: string } = {\r\n        \"print\": \"Die Anweisung ```print``` gibt eine Zeichenkette aus.\",\r\n        \"new\": \"Das Schlüsselwort ```new``` bewirkt die Instanzierung (\\\"Erschaffung\\\") eines neuen Objektes einer Klasse.\",\r\n        \"println\": \"Die Anweisung ```println``` gibt eine Zeichenkette gefolgt von einem Zeilenumbruch aus.\",\r\n        \"while\": \"```\\nwhile (Bedingung) {Anweisungen}\\n```  \\nbewirkt die Wiederholung der Anweisungen solange ```Bedingung == true``` ist.\",\r\n        \"for\": \"```\\nfor(Startanweisung;Solange-Bedingung;Nach_jeder_Wiederholung){Anweisungen}\\n```  \\n\"\r\n            + \"führt zunächst die Startanweisung aus und wiederholt dann die Anweisungen solange ```Bedingung == true``` ist. Am Ende jeder wiederholung wird Nach_jeder_Wiederholung ausgeführt.\",\r\n        \"if\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.  \\nDer ```else```-Teil kann auch weggelassen werden.\",\r\n        \"else\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.\",\r\n        \"switch\": \"```\\nswitch(Selektor){ case Wert_1: Anweisungen_1; break; case Wert_2: Anweisungen_2; break; default: Default-Anweisungen } \\n```  \\nwertet den Selektor-Term aus und führt abhängig vom Termwert Anweisungen_1, Anweisungen_2, ... aus. Entspricht der Termwert keinem der Werte Wert_1, Wert_2, ..., so werden die Default-Anweisungen ausgeführt.\",\r\n        \"%\": \"```\\na % b\\n```  \\n (sprich: 'a modulo b') berechnet den **Rest** der ganzzahligen Division a/b.\",\r\n        \"==\": \"```\\na == b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` gleich sind.  \\nSind a und b **Objekte**, so ergibt ```a == b``` nur dann ```true```, wenn ```a``` und ```b``` auf das **identische** Objekt zeigen.  \\n```==``` nennt man **Vergleichsoperator**.\",\r\n        \"<=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` kleiner oder gleich dem Wert von ```b``` ist.\",\r\n        \">=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` größer oder gleich dem Wert von ```b``` ist.\",\r\n        \"!=\": \"```\\na != b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` **un**gleich sind.  \\nSind ```a``` und ```b``` **Objekte**, so ergibt ```a != b``` dann ```true```, wenn ```a``` und ```b``` **nicht** auf das **identische** Objekt zeigen.  \\n```!=``` nennt man **Ungleich-Operator**.\",\r\n        \"+=\": \"```\\na += b\\n(Kurzschreibweise für a = a + b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erhöht** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"-=\": \"```\\na -= b\\n(Kurzschreibweise für a = a - b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erniedrigt** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"*=\": \"```\\na *= b\\n(Kurzschreibweise für a = a * b)\\n```  \\nbewirkt, dass der Wert von ```a``` mit dem Wert von ```b``` **multipliziert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"/=\": \"```\\na /= b\\n(Kurzschreibweise für a = a / b)\\n```  \\nbewirkt, dass der Wert von ```a``` durch den Wert von ```b``` **dividiert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"++\": \"```\\na++\\n(Kurzschreibweise für a = a + 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins erhöht wird.\",\r\n        \"--\": \"```\\na--\\n(Kurzschreibweise für a = a - 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins eniedrigt wird.\",\r\n        \"=\": \"```\\na = Term\\n```  \\nberechnet den Wert des Terms und weist ihn der Variablen ```a``` zu.  \\n**Vorsicht:**  \\nVerwechsle ```=```(**Zuweisungsoperator**) nicht mit ```==```(**Vergleichsoperator**)!\",\r\n        \"!\": \"```\\n!a\\n```  \\nergibt genau dann ```true```, wenn ```a``` ```false``` ergibt.  \\n```!``` spricht man '**nicht**'.\",\r\n        \"public\": \"```\\npublic\\n```  \\nAttribute und Methoden, die als ```public``` deklariert werden, sind überall (auch außerhalb der Klasse) sichtbar.\",\r\n        \"private\": \"```\\nprivate\\n```  \\nAttribute und Methoden, die als ```private``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse sichtbar.\",\r\n        \"protected\": \"```\\nprotected\\n```  \\nAttribute und Methoden, die als ```protected``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse oder innerhalb von Methoden von Kindklassen sichtbar.\",\r\n        \"return\": \"```\\nreturn Term\\n```  \\nbewirkt, dass die Methode verlassen wird und der Wert des Terms an die aufrufende Stelle zurückgegeben wird.\",\r\n        \"break\": \"```\\nbreak;\\n```  \\ninnerhalb einer Schleife bewirkt, dass die Schleife sofort verlassen und mit den Anweisungen nach der Schleife fortgefahren wird.  \\n\"+\r\n        \"```break``` innerhalb einer ```switch```-Anweisung bewirkt, dass der Block der ```switch```-Anweisung verlassen wird.\",\r\n        \"class\": \"```\\nclass\\n```  \\nMit dem Schlüsselwort ```class``` werden Klassen definiert.\",\r\n        \"extends\": \"```\\nextends\\n```  \\n```class A extends B { ... }``` bedeutet, dass die Klasse A Unterklasse der Klasse B ist.\",\r\n        \"implements\": \"```\\nimplements\\n```  \\n```class A implements B { ... }``` bedeutet, dass die Klasse A das Interface B implementiert, d.h., dass sie alle Methoden besitzen muss, die in B definiert sind.\",\r\n        \"this\": \"```\\nthis\\n```  \\nInnerhalb einer Methodendefinition bezeichnet das Schlüsselwor ```this``` immer dasjenige Objekt, für das die Methode gerade ausgeführt wird.\",\r\n\r\n    }\r\n\r\n    constructor(private editor: Editor) {\r\n\r\n    }\r\n\r\n    provideHover(model: monaco.editor.ITextModel, position: monaco.Position, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Hover> {\r\n\r\n        let selection: monaco.Selection = this.editor.editor.getSelection();\r\n        \r\n        // if cursor is inside current selection then don't show hover, because editor.onDidChangeCursorPosition evaluates selected Text \r\n        // (see class Editor).\r\n        if(selection != null){\r\n            if(selection.startLineNumber != selection.endLineNumber || selection.startColumn != selection.endColumn){\r\n                if(\r\n                    (selection.startLineNumber < position.lineNumber || selection.startLineNumber == position.lineNumber && selection.startColumn <= position.column) && \r\n                    (selection.endLineNumber > position.lineNumber || selection.endLineNumber == position.lineNumber && selection.endColumn >= position.column) \r\n                ){\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        let module: Module = this.editor.main.getCurrentWorkspace()?.getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        for(let errorList of module.errors){\r\n            for(let error of errorList){\r\n                if(error.position.line == position.lineNumber && \r\n                    error.position.column <= position.column && \r\n                    error.position.column + error.position.length >= position.column){\r\n                        return null; // Show error-tooltip and don't show hover-tooltip\r\n                    }\r\n            }\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let declarationAsString = \"\";\r\n\r\n        if (element != null) {\r\n        } else {\r\n            let word = this.getWordUnderCursor(model, position);\r\n            let desc = MyHoverProvider.keywordDescriptions[word];\r\n            if (desc != null) {\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: desc }],\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getWordUnderCursor(model: monaco.editor.ITextModel, position: monaco.Position)\r\n         : string {\r\n        \r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let word = \"\";\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierOrArrayDescriptor(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        if (end - begin > 1) {\r\n            word = text.substring(begin, end);\r\n        } else {\r\n            end = pos;\r\n            while (end < text.length && this.isInsideOperator(text.charAt(end))) {\r\n                end++;\r\n            }\r\n    \r\n            begin = pos;\r\n            while (begin > 0 && this.isInsideOperator(text.charAt(begin - 1))) {\r\n                begin--;\r\n            }\r\n    \r\n            if (end - begin > 0) {\r\n                word = text.substring(begin, end);\r\n            }\r\n        }\r\n\r\n        return word;\r\n\r\n    }\r\n\r\n    widenDeclaration(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        identifier: string): string {\r\n\r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierChain(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        let lenght: number = identifier?.length == null ? 1 : identifier.length;\r\n\r\n        if (end - begin > length) {\r\n            return text.substring(begin, end);\r\n        }\r\n\r\n        return identifier;\r\n    }\r\n\r\n    isInsideIdentifierChain(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß_\\[\\]\\.]/i);\r\n\r\n    }\r\n\r\n    isInsideOperator(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[!%<>=\\+\\-\\*\\/]/i);\r\n\r\n    }\r\n\r\n    isInsideIdentifierOrArrayDescriptor(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß\\[\\]]/i);\r\n\r\n    }\r\n\r\n\r\n}","import { QuickFix } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyCodeActionProvider implements monaco.languages.CodeActionProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideCodeActions(model: monaco.editor.ITextModel, range: monaco.Range, context: monaco.languages.CodeActionContext, token: monaco.CancellationToken): monaco.languages.CodeActionList | Promise<monaco.languages.CodeActionList> {\r\n        const actions = context.markers.map(error => {\r\n            let quickFix: QuickFix = <any>error.relatedInformation;\r\n            if (quickFix == null) return null;\r\n\r\n            let codeAction: monaco.languages.CodeAction = {\r\n                title: quickFix.title,\r\n                diagnostics: [error],\r\n                kind: \"quickfix\",\r\n                edit: {\r\n                    edits: quickFix.editsProvider(model.uri)\r\n                },\r\n                isPreferred: true\r\n            };\r\n            return codeAction;\r\n        });\r\n        return {\r\n            actions: actions,\r\n            dispose: () => { }\r\n        }\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Editor } from \"./Editor.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyReferenceProvider implements monaco.languages.ReferenceProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideReferences(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.ReferenceContext, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Location[]> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) return null;\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let referencePositions: monaco.languages.Location[] = [];\r\n\r\n        usagePositions.forEach((upInCurrentModule, module) => {\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    referencePositions.push(\r\n                        {\r\n                            uri: module.uri,\r\n                            range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length }\r\n                        });\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        return referencePositions;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import { Main } from \"../Main.js\";\r\n\r\nexport type HelperDirection = \"top\" | \"bottom\" | \"left\" | \"right\";\r\n\r\nexport class Helper {\r\n\r\n    public static openHelper(text: string, targetElement: JQuery<HTMLElement>, direction: HelperDirection) {\r\n\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.removeClass(['jo_arrow_box_left', 'jo_arrow_box_right', 'jo_arrow_box_top', 'jo_arrow_box_bottom']);\r\n\r\n        $helper.addClass('jo_arrow_box_' + direction);\r\n\r\n        $helper.css({ left: '', right: '', top: '', bottom: '' });\r\n\r\n        let to = targetElement.offset();\r\n        let b = jQuery('body');\r\n\r\n        let delta: number = 34;\r\n\r\n        switch (direction) {\r\n            case \"bottom\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                bottom: b.height() - to.top + delta\r\n            });\r\n                break;\r\n            case \"top\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                top: to.top + targetElement.height() + 26\r\n            });\r\n                break;\r\n            case \"left\": $helper.css({\r\n                left: to.left + targetElement.width() + delta,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n            case \"right\": $helper.css({\r\n                right: b.width() - to.left,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n        }\r\n\r\n        $helper.find('span').html(text);\r\n\r\n        let $button = $helper.find('.jo_button');\r\n        $button.on('click', (e) => {\r\n            e.stopPropagation();\r\n            $button.off('click');\r\n            Helper.close();\r\n        });\r\n\r\n        $helper.fadeIn(800);\r\n\r\n    }\r\n\r\n    static close() {\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.fadeOut(800);\r\n    }\r\n\r\n\r\n    static showHelper(id: string, mainBase: Main, $element?: JQuery<HTMLElement>) {\r\n\r\n        let main: Main;\r\n        if(mainBase instanceof Main){\r\n            main = mainBase;\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        let helperHistory = main.user.settings!.helperHistory;\r\n\r\n        let flag = id + \"Done\";\r\n\r\n        if (helperHistory != null && (helperHistory[flag] == null || !helperHistory[flag])) {\r\n            helperHistory[flag] = true;\r\n            main.networkManager.sendUpdateUserSettings(() => { });\r\n\r\n            let text: string = \"\";\r\n            let direction: HelperDirection = \"left\";\r\n\r\n            switch (id) {\r\n                case \"newDatabaseHelper\":\r\n                    text = `Es gibt noch keine Datenbank. <br> Nutzen Sie den Button\r\n                        <span class='img_add-database-dark jo_inline-image'></span> um eine Datenbank anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                    case \"newSQLFileHelper\":\r\n                        text = `Es gibt noch keine Datei mit SQL-Anweisungen. <br> Nutzen Sie den Button \r\n                            <span class='img_add-file-dark jo_inline-image'></span> um eine neue Datei anzulegen.\r\n                            `;\r\n                        direction = \"left\";\r\n                        break;\r\n                case \"homeButtonHelper\":\r\n                    text = \"Mit dem Home-Button <span class='img_home-dark jo_inline-image'></span> können Sie wieder zu Ihren eigenen Workspaces wechseln.\";\r\n                    direction = \"top\";\r\n                    $element = jQuery('.img_home-dark');\r\n                    break;\r\n                case \"playButtonHelper\":\r\n                    text = `Mit dem \"Start-Button\"\r\n                        (<span class='img_start-dark jo_inline-image'></span>) \r\n                        oder der Tastenkombination &lt;Strg&gt;&nbsp;+&nbsp&lt;Enter&gt; \r\n                        wird die Anweisung ausgeführt, in der der Cursor gerade steht. \r\n                        <br> Wollen Sie mehrere Anweisungen hintereinander ausführen, so markieren \r\n                        Sie alle Anweisungen und klicken Sie dann auf <span class='img_start-dark jo_inline-image'></span>\r\n                        oder drücken Sie  &lt;Strg&gt;&nbsp;+&nbsp&lt;Enter&gt;. `;\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"consoleHelper\": \r\n                    text=`\r\n                        Hier können Sie Anweisungen oder Terme eingeben, die nach Bestätigung mit der Enter-Taste ausgeführt/ausgewertet werden. Das Ergebnis sehen Sie im Bereich über der Eingabezeile. <br>\r\n                        Falls das Programm gerade pausiert (z.B. bei Ausführung in Einzelschritten) können Sie auch auf die Variablen des aktuellen Sichtbarkeitsbereiches zugreifen.\r\n                    `;\r\n                    direction = \"bottom\";\r\n            }\r\n\r\n            if (text != \"\" && $element != null && $element.length > 0) {\r\n                Helper.openHelper(text, $element, direction);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MyCompletionItemProvider } from \"./MyCompletionItemProvider.js\";\r\nimport { defineMyJava } from \"./MyJava.js\";\r\nimport { MySignatureHelpProvider } from \"./MySignatureHelpProvider.js\";\r\nimport { MyHoverProvider } from \"./MyHoverProvider.js\";\r\nimport { MyCodeActionProvider } from \"./MyCodeActionProvider.js\";\r\nimport { MyReferenceProvider } from \"./MyReferenceProvider.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { defineVscSQL } from \"./VscSql.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\nexport class Editor {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n\r\n    cw: monaco.editor.IContentWidget = null;\r\n\r\n    dontPushNextCursorMove: number = 0;\r\n\r\n    constructor(public main: MainBase, private showMinimap: boolean, private isEmbedded: boolean) {\r\n    }\r\n\r\n    initGUI($element: JQuery<HTMLElement>) {\r\n\r\n\r\n\r\n        defineVscSQL();\r\n\r\n        monaco.editor.defineTheme('myCustomThemeDark', {\r\n            base: 'vs-dark', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'functions', foreground: 'dcdcaa', fontStyle: 'italic' },\r\n                { token: 'string.sql', foreground: '3DC9B0' },\r\n                { token: 'number', foreground: '7bef3f' },\r\n                { token: 'type', foreground: '499cd6' },\r\n                { token: 'identifier', foreground: 'effefe' },\r\n                { token: 'statement', foreground: '9cdcfe', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '619ceb', fontStyle: 'bold' },\r\n                { token: 'table', foreground: 'ff0000', fontStyle: 'bold' },\r\n                { token: 'delimiter', foreground: 'e8eb38' }\r\n                // { token: 'comment.js', foreground: '008800', fontStyle: 'bold italic underline' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#1e1e1e\",\r\n                \"jo_highlightStatementGreen\": \"#004000\",\r\n                \"jo_highlightStatementYellow\": \"#404000\",\r\n                \"jo_highlightStatementRed\": \"#402020\"\r\n            }\r\n        });\r\n\r\n        monaco.editor.defineTheme('myCustomThemeLight', {\r\n            base: 'vs', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'functions', foreground: '694E16', fontStyle: 'italic bold' },\r\n                { token: 'string.sql', foreground: 'a03030' },\r\n                { token: 'number', foreground: '404040' },\r\n                { token: 'type', foreground: '0000ff', fontStyle: 'bold' },\r\n                { token: 'identifier', foreground: '8000e0' },\r\n                { token: 'statement', foreground: '001080', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '00a000', fontStyle: 'bold' },\r\n                { token: 'comment', foreground: '808080', fontStyle: 'italic' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#FFFFFF\",\r\n                \"editor.foreground\": \"#000000\",\r\n                \"editor.inactiveSelectionBackground\": \"#E5EBF1\",\r\n                \"editorIndentGuide.background\": \"#D3D3D3\",\r\n                \"editorIndentGuide.activeBackground\": \"#939393\",\r\n                \"editor.selectionHighlightBackground\": \"#ADD6FF80\",\r\n                \"editorSuggestWidget.background\": \"#F3F3F3\",\r\n                \"activityBarBadge.background\": \"#007ACC\",\r\n                \"sideBarTitle.foreground\": \"#6F6F6F\",\r\n                \"list.hoverBackground\": \"#E8E8E8\",\r\n                \"input.placeholderForeground\": \"#767676\",\r\n                \"searchEditor.textInputBorder\": \"#CECECE\",\r\n                \"settings.textInputBorder\": \"#CECECE\",\r\n                \"settings.numberInputBorder\": \"#CECECE\",\r\n                \"statusBarItem.remoteForeground\": \"#FFF\",\r\n                \"statusBarItem.remoteBackground\": \"#16825D\",\r\n                \"jo_highlightStatementGreen\": \"#004000\",\r\n                \"jo_highlightStatementYellow\": \"#404000\",\r\n                \"jo_highlightStatementRed\": \"#400000\"\r\n            }\r\n        });\r\n\r\n\r\n        this.editor = monaco.editor.create($element[0], {\r\n            // value: [\r\n            //     'function x() {',\r\n            //     '\\tconsole.log(\"Hello world!\");',\r\n            //     '}'\r\n            // ].join('\\n'),\r\n            // language: 'myJava',\r\n            language: 'vscSQL',\r\n            lightbulb: {\r\n                enabled: true\r\n            },\r\n            // gotoLocation: {\r\n            //     multipleReferences: \"gotoAndPeek\"\r\n            // },\r\n            lineDecorationsWidth: 0,\r\n            peekWidgetDefaultFocus: \"tree\",\r\n            fixedOverflowWidgets: true,\r\n            quickSuggestions: true,\r\n            quickSuggestionsDelay: 10,\r\n            fontSize: 14,\r\n            fontFamily: \"Consolas, Roboto Mono\",\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            selectOnLineNumbers: false,\r\n            // selectionHighlight: false,\r\n            automaticLayout: true,\r\n            scrollBeyondLastLine: false,\r\n            occurrencesHighlight: false,\r\n            autoIndent: \"full\",\r\n            dragAndDrop: true,\r\n            formatOnType: true,\r\n            formatOnPaste: true,\r\n            suggestFontSize: 16,\r\n            suggestLineHeight: 22,\r\n            suggest: {\r\n                localityBonus: true,\r\n                insertMode: \"replace\"\r\n                // snippetsPreventQuickSuggestions: false\r\n            },\r\n            parameterHints: { enabled: true, cycle: true },\r\n            // //@ts-ignore\r\n            // contribInfo: {\r\n            //     suggestSelection: 'recentlyUsedByPrefix',\r\n            // },\r\n\r\n            mouseWheelZoom: this.isEmbedded,\r\n\r\n            minimap: {\r\n                enabled: this.showMinimap\r\n            },\r\n            scrollbar: {\r\n                vertical: 'auto',\r\n                horizontal: 'auto'\r\n            },\r\n            theme: \"myCustomThemeDark\",\r\n            // automaticLayout: true\r\n\r\n\r\n        }\r\n        );\r\n\r\n        let that = this;\r\n\r\n        let mouseWheelListener = (event: WheelEvent) => {\r\n            if (event.ctrlKey === true) {\r\n\r\n                that.changeEditorFontSize(Math.sign(event.deltaY), true);\r\n\r\n                event.preventDefault();\r\n            }\r\n        };\r\n\r\n\r\n        this.editor.onDidChangeConfiguration((event) => {\r\n            if (event.hasChanged(monaco.editor.EditorOption.fontInfo) && this.isEmbedded) {\r\n\r\n                this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n            }\r\n        });\r\n\r\n        this.editor.onDidChangeCursorPosition((event) => {\r\n\r\n            that.onDidChangeCursorPosition(event.position);\r\n\r\n        });\r\n\r\n        // We need this to set our model after user uses Strg+click on identifier\r\n        this.editor.onDidChangeModel((event) => {\r\n\r\n            let element: HTMLDivElement = <any>$element.find('.monaco-editor')[0];\r\n            element.removeEventListener(\"wheel\", mouseWheelListener);\r\n            element.addEventListener(\"wheel\", mouseWheelListener, { passive: false });\r\n\r\n            if (this.main.getCurrentWorkspace() == null) return;\r\n\r\n            let module = this.main.getCurrentWorkspace().getModuleByMonacoModel(this.editor.getModel());\r\n            if (this.main instanceof Main && module != null) {\r\n\r\n                this.main.projectExplorer.setActiveAfterExternalModelSet(module);\r\n            }\r\n        });\r\n\r\n        monaco.languages.registerHoverProvider('vscSQL', new MyHoverProvider(this));\r\n\r\n        monaco.languages.registerCompletionItemProvider('vscSQL', new MyCompletionItemProvider(this.main));\r\n        monaco.languages.registerCodeActionProvider('vscSQL', new MyCodeActionProvider(this.main));\r\n        monaco.languages.registerReferenceProvider('vscSQL', new MyReferenceProvider(this.main));\r\n\r\n\r\n        monaco.languages.registerSignatureHelpProvider('vscSQL', new MySignatureHelpProvider(this.main));\r\n\r\n        this.editor.onMouseDown((e: monaco.editor.IEditorMouseEvent) => {\r\n            const data = e.target.detail;\r\n            if (e.target.type !== monaco.editor.MouseTargetType.GUTTER_GLYPH_MARGIN &&\r\n                e.target.type !== monaco.editor.MouseTargetType.GUTTER_LINE_NUMBERS || data.isAfterLines) {\r\n                return;\r\n            }\r\n            that.onMarginMouseDown(e.target.position.lineNumber);\r\n            return;\r\n        });\r\n\r\n\r\n        // If editor is instantiated before fonts are loaded then indentation-lines\r\n        // are misplaced, see https://github.com/Microsoft/monaco-editor/issues/392\r\n        // so:\r\n        setTimeout(() => {\r\n            monaco.editor.remeasureFonts();\r\n        }, 2000);\r\n\r\n        this.addActions();\r\n\r\n        //@ts-ignore\r\n        this.editor.onDidType((text) => { that.onDidType(text) });\r\n\r\n        return this.editor;\r\n    }\r\n\r\n\r\n    onDidType(text: string) {\r\n        //        const endOfCommentText = \" * \\n */\";\r\n\r\n        const insertEndOfComment = (pos, insertText: string, newLine: number, newColumn: number) => {\r\n            const range = new monaco.Range(\r\n                pos.lineNumber,\r\n                pos.column,\r\n                pos.lineNumber,\r\n                pos.column\r\n            );\r\n            this.editor.executeEdits(\"new-bullets\", [\r\n                { range, text: insertText }\r\n            ]);\r\n\r\n            // Set position after bulletText\r\n            this.editor.setPosition({\r\n                lineNumber: newLine,\r\n                column: newColumn\r\n            });\r\n        };\r\n\r\n        if (text === \"\\n\") {\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            const prevLine = model.getLineContent(position.lineNumber - 1);\r\n            if (prevLine.trim().indexOf(\"/*\") === 0 && !prevLine.trimRight().endsWith(\"*/\")) {\r\n                const nextLine = position.lineNumber < model.getLineCount() ? model.getLineContent(position.lineNumber + 1) : \"\";\r\n                if (!nextLine.trim().startsWith(\"*\")) {\r\n                    let spacesAtBeginningOfLine: string = prevLine.substr(0, prevLine.length - prevLine.trimLeft().length);\r\n                    if (prevLine.trim().indexOf(\"/**\") === 0) {\r\n                        insertEndOfComment(position, \"\\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    } else {\r\n                        insertEndOfComment(position, \" * \\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    lastTime: number = 0;\r\n    setFontSize(fontSizePx: number) {\r\n\r\n        // console.log(\"Set font size: \" + fontSizePx);\r\n        let time = new Date().getTime();\r\n        if (time - this.lastTime < 150) return;\r\n        this.lastTime = time;\r\n\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (this.main instanceof Main) {\r\n            this.main.viewModeController.saveFontSize(fontSizePx);\r\n        }\r\n\r\n        if (fontSizePx != editorfs) {\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx\r\n            });\r\n\r\n            // editor does not set fontSizePx, but fontSizePx * zoomfactor with unknown zoom factor, so \r\n            // we have to do this dirty workaround:\r\n            let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n            let factor = newEditorfs / fontSizePx;\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx / factor\r\n            });\r\n\r\n        }\r\n\r\n        jQuery('.jo_editorFontSize').css('font-size', fontSizePx + \"px\");\r\n        jQuery('.jo_editorFontSize').css('line-height', (fontSizePx + 2) + \"px\");\r\n\r\n        document.documentElement.style.setProperty('--breakpoint-size', fontSizePx + 'px');\r\n        document.documentElement.style.setProperty('--breakpoint-radius', fontSizePx / 2 + 'px');\r\n\r\n\r\n        this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n    }\r\n\r\n    changeEditorFontSize(delta: number, dynamic: boolean = true) {\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (dynamic) {\r\n            if (editorfs < 10) {\r\n                delta *= 1;\r\n            } else if (editorfs < 20) {\r\n                delta *= 2;\r\n            } else {\r\n                delta *= 4;\r\n            }\r\n        }\r\n\r\n        let newEditorFs = editorfs + delta;\r\n        if (newEditorFs >= 6 && newEditorFs <= 80) {\r\n            this.setFontSize(newEditorFs);\r\n        }\r\n    }\r\n\r\n\r\n    addActions() {\r\n        let that = this;\r\n\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Find bracket',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'Finde korrespondierende Klammer',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.5,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                ed.getAction('editor.action.jumpToBracket').run();\r\n                return null;\r\n            }\r\n        });\r\n\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Execute statement',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'SQL-Anweisung ausführen',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.Enter],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.0,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                that.main.getActionManager().trigger('execute');\r\n                return null;\r\n            }\r\n        });\r\n\r\n        //console.log(this.editor.getSupportedActions());\r\n    }\r\n\r\n    onMarginMouseDown(lineNumber: number) {\r\n\r\n    }\r\n\r\n    elementDecoration: string[] = [];\r\n    onDidChangeCursorPosition(position: { lineNumber: number, column: number }) {\r\n\r\n        if (position == null) position = this.editor.getPosition();\r\n\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, []);\r\n            return;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        if (element != null) {\r\n            let usagePositions = element.usagePositions;\r\n            let upInCurrentModule = usagePositions.get(module);\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    decorations.push({\r\n                        range: { startColumn: up.column, startLineNumber: up.line, endColumn: up.column + up.length, endLineNumber: up.line },\r\n                        options: {\r\n                            className: 'jo_revealSyntaxElement', isWholeLine: false, overviewRuler: {\r\n                                color: { id: \"editorIndentGuide.background\" },\r\n                                darkColor: { id: \"editorIndentGuide.activeBackground\" },\r\n                                position: monaco.editor.OverviewRulerLane.Left\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        let executeActionActive = false;\r\n\r\n        for(let sqlStatement of module.getSQLSTatementsAtSelection(this.editor.getSelection())){\r\n\r\n            let classname = \"jo_highlightStatementGreen\";\r\n            if (sqlStatement != null) {\r\n                if (sqlStatement.hasErrors) {\r\n                    classname = \"jo_highlightStatementRed\";\r\n                    if (sqlStatement.acceptedBySQLite) {\r\n                        classname = \"jo_highlightStatementYellow\";\r\n                        executeActionActive = true;\r\n                    }\r\n                } else {\r\n                    executeActionActive = true;\r\n                }\r\n    \r\n                decorations.push({\r\n                    range: {\r\n                        startColumn: sqlStatement.from.column, startLineNumber: sqlStatement.from.line,\r\n                        endColumn: sqlStatement.to.column, endLineNumber: sqlStatement.to.line\r\n                    },\r\n                    options: {\r\n                        className: classname, isWholeLine: false, overviewRuler: {\r\n                            color: { id: classname },\r\n                            darkColor: { id: classname },\r\n                            position: monaco.editor.OverviewRulerLane.Left\r\n                        },\r\n                        minimap: {\r\n                            color: { id: classname },\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        },\r\n                        zIndex: -100\r\n                    }\r\n                })\r\n    \r\n            }\r\n        }\r\n\r\n\r\n        this.main.getActionManager().setActive('execute', executeActionActive);\r\n\r\n        if(executeActionActive && !this.main.isEmbedded()){\r\n            Helper.showHelper(\"playButtonHelper\", <any>this.main, jQuery('div.img_start-dark'));\r\n        }\r\n\r\n\r\n        this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, decorations);\r\n\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.main.getCurrentlyEditedModule();\r\n    }\r\n\r\n\r\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport function defineVscSQL() {\r\n    monaco.languages.register({\r\n        id: 'vscSQL',\r\n        extensions: ['.sql'],\r\n        //  mimetypes: [\"text/x-java-source\", \"text/x-java\"]  \r\n    });\r\n\r\n    let conf: monaco.languages.LanguageConfiguration = {\r\n        onEnterRules: [\r\n            {\r\n                // e.g. /** | */\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                afterText: /^\\s*\\*\\/$/,\r\n                action: { indentAction: monaco.languages.IndentAction.IndentOutdent, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g. /** ...|\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g.  * ...|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: '* ' }\r\n            },\r\n            {\r\n                // e.g.  */|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            },\r\n            {\r\n                // e.g.  *-----*/|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*[^/]*\\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            }\r\n        ],\r\n        comments: {\r\n            lineComment: '--',\r\n            blockComment: ['/*', '*/'],\r\n        },\r\n        brackets: [\r\n            ['{', '}'],\r\n            ['[', ']'],\r\n            ['(', ')']\r\n        ],\r\n        autoClosingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ],\r\n        surroundingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ]\r\n    };\r\n    let language = {\r\n\r\n        defaultToken: '',\r\n        tokenPostfix: '.sql',\r\n        ignoreCase: true,\r\n        brackets: [\r\n            { open: '[', close: ']', token: 'delimiter.square' },\r\n            { open: '(', close: ')', token: 'delimiter.parenthesis' }\r\n        ],\r\n        escapes: /\\\\(?:[abfnrtv\\\\\"'])/,\r\n        keywords: [\r\n            \"ABORT\", \"ACTION\", \"ADD\", \"AFTER\", \"ALL\", \"ALTER\", \"ANALYZE\", \"AND\", \"AS\", \"ASC\", \"ATTACH\", \"AUTOINCREMENT\", \"BEFORE\",\r\n            \"BEGIN\", \"BETWEEN\", \"BY\", \"CASCADE\", \"CASE\", \"CAST\", \"CHECK\", \"COLLATE\", \"COLUMN\", \"COMMIT\", \"CONFLICT\", \"CONSTRAINT\",\r\n            \"CREATE\", \"CROSS\", \"CURRENT_DATE\", \"CURRENT_TIME\", \"CURRENT_TIMESTAMP\", \"DATABASE\", \"DEFAULT\", \"DEFERRABLE\", \"DEFERRED\",\r\n            \"DELETE\", \"DESC\", \"DETACH\", \"DISTINCT\", \"DROP\", \"EACH\", \"ELSE\", \"END\", \"ESCAPE\", \"EXCEPT\", \"EXCLUSIVE\", \"EXISTS\", \"EXPLAIN\",\r\n            \"FAIL\", \"FOR\", \"FOREIGN\", \"FROM\", \"FULL\", \"GLOB\", \"GROUP\", \"HAVING\", \"IF\", \"IGNORE\", \"IMMEDIATE\", \"IN\", \"INDEX\", \"INDEXED\",\r\n            \"INITIALLY\", \"INNER\", \"INSERT\", \"INSTEAD\", \"INTERSECT\", \"INTO\", \"IS\", \"ISNULL\", \"JOIN\", \"KEY\", \"LEFT\", \"LIKE\", \"LIMIT\", \"MATCH\",\r\n            \"NATURAL\", \"NO\", \"NOT\", \"NOTNULL\", \"NULL\", \"OF\", \"OFFSET\", \"ON\", \"OR\", \"ORDER\", \"OUTER\", \"PLAN\", \"PRAGMA\", \"PRIMARY\", \"QUERY\",\r\n            \"RAISE\", \"RECURSIVE\", \"REFERENCES\", \"REGEXP\", \"REINDEX\", \"RELEASE\", \"RENAME\", \"REPLACE\", \"RESTRICT\", \"RIGHT\", \"ROLLBACK\", \"ROW\",\r\n            \"SAVEPOINT\", \"SELECT\", \"SET\", \"TABLE\", \"TEMP\", \"TEMPORARY\", \"THEN\", \"TO\", \"TRANSACTION\", \"TRIGGER\", \"UNION\", \"UNIQUE\", \"UPDATE\",\r\n            \"USING\", \"VACUUM\", \"VALUES\", \"VIEW\", \"VIRTUAL\", \"WHEN\", \"WHERE\", \"WITH\", \"WITHOUT\", \"ENGINE\", \"CHARSET\"\r\n        ],\r\n        operators: [\r\n            \"AND\", \"BETWEEN\", \"IN\", \"LIKE\", \"NOT\", \"OR\", \"IS\", \"NULL\", \"INTERSECT\", \"UNION\", \"INNER\", \"JOIN\", \"LEFT\", \"OUTER\", \"RIGHT\"\r\n        ],\r\n        builtinFunctions: [\r\n            \"abs\", \"changes\", \"char\", \"coalesce\", \"count\", \"glob\", \"hex\", \"ifnull\",\r\n            \"iif\", \"instr\", \"last_insert_rowid\", \"length\", \"like\", \"likelihood\", \"likely\",\r\n            \"lower\", \"ltrim\", \"max\", \"min\", \"nullif\", \"quote\", \"random\", \"randomblob\",\r\n            \"replace\", \"round\", \"rtrim\", \"sign\", \"soundex\", \"sqlite_version\", \"substr\", \"substring\",\r\n            \"total_changes\", \"trim\", \"typeof\", \"unicode\", \"unlikely\", \"upper\", \"zeroblob\"\r\n        ],\r\n        builtinVariables: [\r\n            // NOT SUPPORTED\r\n        ],\r\n        pseudoColumns: [\r\n            // NOT SUPPORTED\r\n        ],\r\n        tokenizer: {\r\n            root: [\r\n                { include: '@comments' },\r\n                { include: '@whitespace' },\r\n                { include: '@pseudoColumns' },\r\n                { include: '@numbers' },\r\n                { include: '@strings' },\r\n                { include: '@complexIdentifiers' },\r\n                { include: '@scopes' },\r\n                [/[;,.]/, 'delimiter'],\r\n                [/[()]/, '@brackets'],\r\n                [/[a-z_$äöü][\\w$äöüßÄÖÜ]*(?=\\()/, {\r\n                    cases: {\r\n                        '@builtinFunctions': 'functions',\r\n                        '@keywords': 'keyword',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[\\w@#$]+/, {\r\n                    cases: {\r\n                        '@keywords': 'keyword',\r\n                        '@operators': 'operator',\r\n                        '@builtinVariables': 'predefined',\r\n                        // '@builtinFunctions': 'functions',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[<>=!%&+\\-*/|~^]/, 'operator'],\r\n            ],\r\n            whitespace: [\r\n                [/\\s+/, 'white']\r\n            ],\r\n            comments: [\r\n                [/--+.*/, 'comment'],\r\n                [/\\/\\*/, { token: 'comment.quote', next: '@comment' }]\r\n            ],\r\n            comment: [\r\n                [/[^*/]+/, 'comment'],\r\n                // Not supporting nested comments, as nested comments seem to not be standard?\r\n                // i.e. http://stackoverflow.com/questions/728172/are-there-multiline-comment-delimiters-in-sql-that-are-vendor-agnostic\r\n                // [/\\/\\*/, { token: 'comment.quote', next: '@push' }],    // nested comment not allowed :-(\r\n                [/\\*\\//, { token: 'comment.quote', next: '@pop' }],\r\n                [/./, 'comment']\r\n            ],\r\n            pseudoColumns: [\r\n                [/[$][A-Za-z_][\\w@#$]*/, {\r\n                    cases: {\r\n                        '@pseudoColumns': 'predefined',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n            ],\r\n            numbers: [\r\n                [/0[xX][0-9a-fA-F]*/, 'number'],\r\n                [/[$][+-]*\\d*(\\.\\d*)?/, 'number'],\r\n                [/((\\d+(\\.\\d*)?)|(\\.\\d+))([eE][\\-+]?\\d+)?/, 'number']\r\n            ],\r\n            strings: [\r\n                [/'/, { token: 'string', next: '@string' }],\r\n            ],\r\n            string: [\r\n                [/[^\\\\']+/, 'string'],\r\n                [/\\\\./, 'string.escape.invalid'],\r\n                [/''/, 'string'],\r\n                [/'/, { token: 'string', next: '@pop' }]\r\n            ],\r\n            complexIdentifiers: [\r\n                [/\"/, { token: 'identifier.quote', next: '@quotedIdentifier' }]\r\n            ],\r\n            quotedIdentifier: [\r\n                [/[^\"]+/, 'identifier'],\r\n                [/\"\"/, 'identifier'],\r\n                [/\"/, { token: 'identifier.quote', next: '@pop' }]\r\n            ],\r\n            scopes: [\r\n                // NOT SUPPORTED\r\n            ]\r\n        }\r\n\r\n\r\n\r\n    };\r\n\r\n    //@ts-ignore\r\n    monaco.languages.setLanguageConfiguration('vscSQL', conf);\r\n    //@ts-ignore\r\n    monaco.languages.setMonarchTokensProvider('vscSQL', language);\r\n\r\n\r\n\r\n}","import { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport type DatabaseDumpType = \"binaryUncompressed\" | \"binaryCompressed\" | \"other\";\r\n\r\nexport type DatabaseDirectoryEntry = {\r\n    name: string,\r\n    description: string,\r\n    filename: string\r\n}\r\n\r\nexport type QueryResult = {\r\n    columns: string[],\r\n    values: any[][],\r\n    buffer?: Uint8Array\r\n}\r\n\r\nexport type QuerySuccessCallback = (results: QueryResult[]) => void;\r\nexport type QueryErrorCallback = (error: string) => void;\r\n\r\nexport type ColumnStructure = {\r\n    name: string;\r\n    table: TableStructure;\r\n\r\n    typeLengths?: number[]; // for varchar(5), ...\r\n    completeTypeSQL: string;\r\n\r\n    references?: ColumnStructure;\r\n    referencesRawData?: any[];\r\n    isPrimaryKey: boolean;\r\n    isAutoIncrement: boolean;\r\n\r\n    notNull: boolean;\r\n    defaultValue: string;\r\n\r\n    dumpValueFunction?: (any) => string\r\n}\r\n\r\nexport type TableStructure = {\r\n    name: string;\r\n    size: number;\r\n    columns: ColumnStructure[];\r\n    completeSQL: string;\r\n}\r\n\r\nexport type DatabaseStructure = {\r\n    tables: TableStructure[]\r\n}\r\n\r\n\r\nexport class DatabaseTool {\r\n\r\n    databaseDirectoryEntries: DatabaseDirectoryEntry[] = null;\r\n\r\n    worker: Worker;\r\n\r\n    queryId: number = 0;\r\n\r\n    querySuccessCallbacksMap: Map<number, QuerySuccessCallback> = new Map();\r\n    queryErrorCallbackMap: Map<number, QueryErrorCallback> = new Map();\r\n\r\n    databaseStructure: DatabaseStructure;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    initializeWorker(template: Uint8Array, queries: string[], callbackAfterInitializing?: (errors: string[]) => void,\r\n        callbackAfterRetrievingStructure?: () => void) {\r\n        \r\n        this.main.getWaitOverlay().show('Bitte warten, die Datenbank wird initialisiert...');\r\n        \r\n            if (this.worker != null) {\r\n            this.worker.terminate();\r\n        }\r\n\r\n        let t = performance.now();\r\n\r\n        // console.log(\"Starting worker...\");\r\n\r\n        this.worker = new Worker('js/sqljs-worker/sqljsWorker.js');\r\n        // this.worker = new Worker(\"lib/sql.js/worker.sql-wasm.js\");\r\n        let that = this;\r\n\r\n        let errors: string[] = [];\r\n\r\n        this.worker.onmessage = () => {\r\n            // console.log(\"Database opened (\" + (performance.now() - t)/1000 + \" s)\");\r\n            that.worker.onmessage = event => {\r\n\r\n                // console.log(event.data);\r\n\r\n                let id = event.data.id;\r\n                if (event.data.error == null) {\r\n                    let querySuccessCallback = that.querySuccessCallbacksMap.get(id);\r\n                    if (querySuccessCallback != null) {\r\n                        querySuccessCallback(event.data.results);\r\n                    }\r\n                } else {\r\n                    let queryErrorCallback = that.queryErrorCallbackMap.get(id);\r\n                    if (queryErrorCallback != null) {\r\n                        queryErrorCallback(event.data.error);\r\n                    }\r\n                }\r\n\r\n                // if(event.data.buffer){\r\n                //     console.log(event.data.buffer);\r\n                // }\r\n\r\n\r\n                this.queryErrorCallbackMap.delete(id);\r\n                this.querySuccessCallbacksMap.delete(id);\r\n\r\n            };\r\n\r\n            if(queries == null) queries = [];\r\n            queries = queries.slice();\r\n            let queryCount = queries.length;\r\n\r\n            let execQuery = () => {\r\n                if (queries.length > 0) {\r\n                    this.main.getWaitOverlay().setProgress(`${Math.round((1-queries.length/queryCount)*100) + \" %\"}`)\r\n                    let query = queries.shift();\r\n                    that.executeQuery(query, (result) => {\r\n                        execQuery();\r\n                    }, (error) => {\r\n                        errors.push(\"Error while setting up database: \" + error + \", query: \" + query);\r\n                        console.log({\"error\": \"Error while setting up database: \" + error, \"query\": query});\r\n                        console.log()\r\n                        execQuery();\r\n                    })\r\n                } else {\r\n                    if (callbackAfterInitializing != null) callbackAfterInitializing(errors);\r\n                    that.retrieveDatabaseStructure(() => {\r\n                        // console.log(\"Database structure retrieved (\" + (performance.now() - t)/1000 + \" s)\");\r\n                        if (callbackAfterRetrievingStructure) callbackAfterRetrievingStructure();\r\n                        this.main.getWaitOverlay().hide();\r\n\r\n                    });\r\n                }\r\n            }\r\n\r\n            execQuery();\r\n\r\n            // that.executeQuery(sql, (result) => {\r\n            //     // console.log(\"Template written (\" + (performance.now() - t)/1000 + \" s)\");\r\n\r\n            //     if (callbackAfterInitializing != null) callbackAfterInitializing();\r\n            //     that.retrieveDatabaseStructure(() => {\r\n            //         // console.log(\"Database structure retrieved (\" + (performance.now() - t)/1000 + \" s)\");\r\n            //         if (callbackAfterRetrievingStructure) callbackAfterRetrievingStructure();\r\n            //         jQuery('#bitteWarten').css('display', 'none');\r\n\r\n            //     });\r\n            //     // that.executeQuery(\"select * from test\", (results: QueryResult[]) => {console.log(results)}, (error) => {console.log(\"Error:\" + error)});\r\n            // },\r\n            //     (error) => {\r\n            //         console.log(\"Error while setting up database: \" + error);\r\n            //     });\r\n\r\n            // that.worker.postMessage({\r\n            //     action: \"export\"\r\n            // })\r\n\r\n        };\r\n\r\n        this.worker.onerror = (e) => {\r\n            errors.push(\"Worker error: \" + e);\r\n            console.log(\"Worker error: \" + e);\r\n        }\r\n\r\n        this.worker.postMessage({\r\n            id: that.queryId++,\r\n            action: \"open\",\r\n            buffer: template, /*Optional. An ArrayBuffer representing an SQLite Database file*/\r\n        });\r\n\r\n    }\r\n\r\n    executeQuery(query: string, successCallback: QuerySuccessCallback, errorCallback: QueryErrorCallback) {\r\n\r\n        let id = this.queryId++;\r\n\r\n        this.querySuccessCallbacksMap.set(id, successCallback);\r\n        this.queryErrorCallbackMap.set(id, errorCallback);\r\n\r\n        this.worker.postMessage({\r\n            id: id,\r\n            action: \"exec\",\r\n            sql: query,\r\n            params: {}\r\n        });\r\n\r\n    }\r\n\r\n    export(successCallback: (buffer: Uint8Array) => void, errorCallback: QueryErrorCallback) {\r\n\r\n        let id = this.queryId++;\r\n\r\n        this.querySuccessCallbacksMap.set(id, (results) => { successCallback(results[0].buffer)  });\r\n        this.queryErrorCallbackMap.set(id, errorCallback);\r\n\r\n        this.worker.postMessage({\r\n            id: id,\r\n            action: \"export\",\r\n            params: {}\r\n        });\r\n\r\n    }\r\n\r\n    \r\n\r\n    getDirectoryEntries(callback: (entries: DatabaseDirectoryEntry[]) => void) {\r\n        if (this.databaseDirectoryEntries != null) {\r\n            callback(this.databaseDirectoryEntries);\r\n        } else {\r\n            jQuery.getJSON(\"assets/databases/directory.json\", function (entries: DatabaseDirectoryEntry[]) {\r\n                callback(entries);\r\n            });\r\n        }\r\n    }\r\n\r\n    retrieveDatabaseStructure(callback: (dbStructure: DatabaseStructure) => void) {\r\n\r\n        /*\r\n            @see https://stackoverflow.com/questions/6460671/sqlite-schema-information-metadata\r\n        */\r\n        let sql = `SELECT name, sql FROM sqlite_master WHERE type='table';`\r\n        let that = this;\r\n\r\n        this.executeQuery(sql, (result) => {\r\n            let sql1 = \"\";\r\n            result[0]?.values?.forEach(value => sql1 += `PRAGMA table_info(${value[0]});\\nPRAGMA foreign_key_list(${value[0]});\\nselect count(*) from ${value[0]};\\n\\n`)\r\n\r\n            if (sql1 != \"\") {\r\n                this.executeQuery(sql1, (result1) => {\r\n                    // console.log(\"DB structure: \");\r\n                    // console.log(result1);\r\n\r\n                    that.databaseStructure = that.parseDatabaseStructure(result, result1)\r\n\r\n                    callback(that.databaseStructure);\r\n\r\n                }, (error) => { console.log(error)});\r\n            } else {\r\n                that.databaseStructure = { tables: [] };\r\n                callback(that.databaseStructure);\r\n            }\r\n\r\n        }, (error) => { console.log(error) });\r\n\r\n\r\n    }\r\n\r\n    parseDatabaseStructure(tables: QueryResult[], columns: QueryResult[]): DatabaseStructure {\r\n        this.databaseStructure = {\r\n            tables: []\r\n        };\r\n\r\n        let tableNameToStructureMap: Map<string, TableStructure> = new Map();\r\n\r\n        let index = 0;\r\n        for (let i = 0; i < tables[0].values.length; i++) {\r\n            let tableName = tables[0].values[i][0];\r\n            let tableSQL = tables[0].values[i][1];\r\n\r\n            let tableStructure: TableStructure = {\r\n                name: tableName,\r\n                size: 0,\r\n                completeSQL: tableSQL,\r\n                columns: []\r\n            }\r\n\r\n            tableNameToStructureMap.set(tableName, tableStructure);\r\n\r\n            this.databaseStructure.tables.push(tableStructure);\r\n\r\n            let columnArray = columns[index].values;\r\n            let foreignKeyList: any[][] = null;\r\n            if (columns.length > index + 1 && columns[index + 1].columns[0] == \"id\") {\r\n                foreignKeyList = columns[index + 1].values;\r\n                index++;\r\n            }\r\n            index++;\r\n            let size: number = columns[index].values[0][0];\r\n            index++;\r\n\r\n            tableStructure.size = size;\r\n\r\n            columnArray.forEach(columnArray1 => {\r\n                let cid: number = columnArray1[0];\r\n                let name: string = columnArray1[1];\r\n                let type: string = columnArray1[2];\r\n                let notNull: boolean = columnArray1[3] == 1;\r\n                let dflt_value: string = columnArray1[4];\r\n                let isPrimaryKey: boolean = columnArray1[5] != 0;\r\n\r\n                let columnStructure: ColumnStructure = {\r\n                    name: name,\r\n                    isPrimaryKey: isPrimaryKey,\r\n                    isAutoIncrement: isPrimaryKey && tableSQL.toLowerCase().indexOf(\"autoincrement\") >= 0,\r\n                    completeTypeSQL: type,\r\n                    table: tableStructure,\r\n                    typeLengths: [],\r\n                    defaultValue: dflt_value,\r\n                    notNull: notNull\r\n                }\r\n                /*\r\n                    columns: (8) [\"id\", \"seq\", \"table\", \"from\", \"to\", \"on_update\", \"on_delete\", \"match\"]\r\n                    values: Array(1)\r\n                    0: (8) [0, 0, \"land\", \"LNR\", \"lnr\", \"NO ACTION\", \"NO ACTION\", \"NONE\"]\r\n                */\r\n\r\n                if (foreignKeyList != null) {\r\n                    let fkInfo: any[] = foreignKeyList.find(foreignKeyInfo => foreignKeyInfo[4].toLocaleLowerCase() == name.toLocaleLowerCase());\r\n                    if (fkInfo != null) {\r\n                        columnStructure.referencesRawData = fkInfo;\r\n                    }\r\n                }\r\n\r\n                tableStructure.columns.push(columnStructure);\r\n\r\n            });\r\n\r\n        }\r\n\r\n        for (let ts of this.databaseStructure.tables) {\r\n            for (let cs of ts.columns) {\r\n                if (cs.referencesRawData != null) {\r\n                    let table = tableNameToStructureMap.get(cs.referencesRawData[2]);\r\n                    let column = table.columns.find(c => c.name.toLocaleLowerCase() == cs.referencesRawData[3].toLocaleLowerCase());\r\n                    cs.references = column;\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log(this.databaseStructure);\r\n\r\n        return this.databaseStructure;\r\n\r\n    }\r\n\r\n    static getDumpType(dump: Uint8Array): DatabaseDumpType {\r\n\r\n        let sqliteMagicBytes: number[] = [0x53, 0x51, 0x4c, 0x69, 0x74, 0x65];\r\n        let zlibMagicByte: number = 0x78;\r\n\r\n        let found: boolean = true;\r\n        for (let i = 0; i < sqliteMagicBytes.length; i++) {\r\n            if (sqliteMagicBytes[i] != dump[i]) {\r\n                found = false;\r\n                break;\r\n            }\r\n        }\r\n        if (found) return \"binaryUncompressed\";\r\n\r\n        if (dump[0] == zlibMagicByte) return \"binaryCompressed\";\r\n\r\n        return \"other\";\r\n\r\n    }\r\n\r\n\r\n}","import { LoadableDatabase } from \"./DatabaseLoader.js\";\r\nimport { DatabaseTool } from \"./DatabaseTools.js\";\r\nimport { downloadFile } from \"./HtmlTools.js\";\r\n\r\nexport class DatabaseImportExport {\r\n\r\n    loadFromFile(file: globalThis.File, callback: (db: LoadableDatabase) => void){\r\n        let that = this;\r\n        if (file == null) return;\r\n        var reader = new FileReader();\r\n        reader.onload = (event) => {\r\n            let ab: ArrayBuffer = <ArrayBuffer>event.target.result;\r\n            let db: Uint8Array = new Uint8Array(ab);\r\n\r\n            //@ts-ignore\r\n            if(DatabaseTool.getDumpType(db) == \"binaryCompressed\") db = pako.inflate(db);\r\n            callback({binDump: db});\r\n\r\n        };\r\n        reader.readAsArrayBuffer(file);\r\n    }\r\n\r\n    saveToFile(dbTool: DatabaseTool){\r\n        dbTool.export((db) => {\r\n            //@ts-ignore\r\n            db = pako.deflate(db);\r\n            let filename: string = prompt(\"Bitte geben Sie den Dateinamen ein\", \"datenbank.dbDump\");\r\n            if (filename == null) {\r\n                alert(\"Der Dateiname ist leer, daher wird nichts gespeichert.\");\r\n                return;\r\n            }\r\n            if (!filename.endsWith(\".dbDump\")) filename = filename + \".dbDump\";\r\n            downloadFile(new Blob([db.buffer]), filename, true);\r\n        }, () => {});\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { PasswordChanger } from \"./UserMenu.js\";\r\nimport { DatabaseSettingsDialog } from \"./DatabaseSettingsDialog.js\";\r\nimport { DatabaseImportExport } from \"../../tools/DatabaseImportExport.js\";\r\n\r\nexport type Action = (identifier: string) => void;\r\n\r\ntype Menu = {\r\n    items: MenuItem[];\r\n    $element?: JQuery<HTMLElement>;\r\n    level?: number;\r\n}\r\n\r\ntype MenuItem = {\r\n    identifier: string;\r\n    $element?: JQuery<HTMLElement>;\r\n    action?: Action;\r\n    link?: string;\r\n    subMenu?: Menu;\r\n}\r\n\r\nexport class MainMenu {\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n\r\n    currentSubmenu: { [level: number]: JQuery<HTMLElement> } = {};\r\n    openSubmenusOnMousemove: boolean = false;\r\n\r\n    initGUI(user: UserData) {\r\n\r\n        let that = this;\r\n        let editor = this.main.getMonacoEditor();\r\n\r\n        let mainMenu: Menu = {\r\n            items: [\r\n                {\r\n                    identifier: \"Datei\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Speichern und Beenden\",\r\n                                action: () => { jQuery('#buttonLogout').trigger(\"click\"); }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Bearbeiten\", subMenu:\r\n                    {\r\n                        items: [\r\n                            { identifier: \"Rückgängig (Strg + z)\", action: () => { editor.trigger(\".\", \"undo\", {}); } },\r\n                            { identifier: \"Wiederholen (Strg + y)\", action: () => { editor.trigger(\".\", \"redo\", {}); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Kopieren (Strg + c)\", action: () => { editor.getAction(\"editor.action.clipboardCopyAction\").run(); } },\r\n                            { identifier: \"Ausschneiden (Strg + x)\", action: () => { editor.getAction(\"editor.action.clipboardCutAction\").run(); } },\r\n                            { identifier: \"Nach oben kopieren (Alt + Shift + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.copyLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten kopieren (Alt + Shift + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.copyLinesDownAction\").run(); } },\r\n                            { identifier: \"Nach oben verschieben (Alt + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.moveLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten verschieben (Alt + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.moveLinesDownAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Suchen... (Strg + f)\", action: () => { editor.getAction(\"actions.find\").run(); } },\r\n                            { identifier: \"Ersetzen... (Strg + h)\", action: () => { editor.getAction(\"editor.action.startFindReplaceAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Aus-/Einkommentieren (Strg + #)\", action: () => { editor.getAction(\"editor.action.commentLine\").run(); } },\r\n                            { identifier: \"Dokument formatieren (Alt + Shift + f)\", action: () => { editor.getAction(\"editor.action.formatDocument\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Finde zugehörige Klammer (Strg + k)\", action: () => { editor.getAction(\"editor.action.jumpToBracket\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Alles zusammenfalten\", action: () => { editor.getAction(\"editor.foldAll\").run(); } },\r\n                            { identifier: \"Alles auffalten\", action: () => { editor.getAction(\"editor.unfoldAll\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Vorschlag auslösen (Strg + Leertaste)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.triggerSuggest\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n                            { identifier: \"Parameterhilfe (Strg + Shift + Leertaste)\", action: () => { editor.getAction(\"editor.action.triggerParameterHints\").run(); } },\r\n                            {\r\n                                identifier: \"Gehe zur Definition (Strg + Click)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.revealDefinition\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Ansicht\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Theme\",\r\n                                subMenu: {\r\n                                    items: [\r\n                                        {\r\n                                            identifier: \"Dark\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"dark\");\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            identifier: \"Light\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"light\");\r\n                                            }\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Hoher Kontrast im Editor ein/aus\", action: () => { editor.getAction(\"editor.action.toggleHighContrast\").run(); } },\r\n\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Zoom out (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(-4); } },\r\n                            { identifier: \"Zoom normal\", action: () => { this.main.editor.setFontSize(14); }},\r\n                            { identifier: \"Zoom in (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(4); } },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Datenbank\", subMenu:\r\n                    {\r\n                        items: [\r\n                            { identifier: \"Einstellungen...\", action: () => { new DatabaseSettingsDialog(this.main, this.main.currentWorkspace) } },\r\n                            { identifier: \"Export als Binärdump (.dbDump-File)...\", action: () => {  new DatabaseImportExport().saveToFile(this.main.getDatabaseTool());\r\n                            } },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n\r\n            ]\r\n        };\r\n\r\n        jQuery('#mainmenu').empty();\r\n        this.initMenu(mainMenu, 0);\r\n    }\r\n\r\n    switchTheme(theme: string) {\r\n        this.main.viewModeController.setTheme(theme);\r\n    }\r\n\r\n    initMenu(menu: Menu, level?: number) {\r\n\r\n        menu.level = level;\r\n\r\n        if (level == 0) {\r\n            menu.$element = jQuery('#mainmenu');\r\n        } else {\r\n            menu.$element = jQuery('<div class=\"jo_submenu\"></div>');\r\n            jQuery('body').append(menu.$element);\r\n        }\r\n\r\n        menu.$element.data('model', menu);\r\n        for (let mi of menu.items) {\r\n            if (mi.identifier == '-') {\r\n                mi.$element = jQuery('<div class=\"jo_menuitemdivider\"></div>');\r\n            } else {\r\n                mi.$element = jQuery('<div>' + mi.identifier + '</div>');\r\n                if (mi.link != null) {\r\n                    let $link = jQuery('<a href=\"' + mi.link + '\" target=\"_blank\" class=\"jo_menulink\"></a>');\r\n                    $link.on(\"mousedown\", (event) => {\r\n                        event.stopPropagation();\r\n                        setTimeout(() => {\r\n                            menu.$element.hide();\r\n                        }, 500);\r\n                    })\r\n                    $link.append(mi.$element);\r\n                    mi.$element = $link;\r\n                }\r\n                if (mi.subMenu != null) {\r\n                    this.initMenu(mi.subMenu, level + 1);\r\n                }\r\n                this.initMenuitemCallbacks(menu, mi);\r\n                if (level == 0) {\r\n                    mi.$element.addClass('jo_mainmenuitem');\r\n                }\r\n            }\r\n            menu.$element.append(mi.$element);\r\n            mi.$element.data('model', mi);\r\n        }\r\n\r\n        let that = this;\r\n        jQuery(document).on('mousedown', () => {\r\n            for (let i = 0; i < 5; i++) {\r\n                if (that.currentSubmenu[i] != null) {\r\n                    that.currentSubmenu[i].hide();\r\n                    that.currentSubmenu[i] = null;\r\n                }\r\n            }\r\n            that.openSubmenusOnMousemove = false;\r\n        });\r\n\r\n    }\r\n\r\n    initMenuitemCallbacks(menu: Menu, mi: MenuItem) {\r\n        let that = this;\r\n\r\n        if (mi.action != null) {\r\n            mi.$element.on('mousedown', (ev) => { mi.action(mi.identifier); });\r\n        }\r\n\r\n        if (mi.subMenu != null) {\r\n            mi.$element.on('mousedown', (ev) => {\r\n                that.opensubmenu(mi);\r\n                that.openSubmenusOnMousemove = true;\r\n                ev.stopPropagation();\r\n            });\r\n\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.openSubmenusOnMousemove) {\r\n                    that.opensubmenu(mi);\r\n                } else {\r\n                    if (that.currentSubmenu[menu.level + 1] != null) {\r\n                        that.currentSubmenu[menu.level + 1].hide();\r\n                        that.currentSubmenu[menu.level + 1] = null;\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.currentSubmenu[menu.level + 1] != null) {\r\n                    that.currentSubmenu[menu.level + 1].hide();\r\n                    that.currentSubmenu[menu.level + 1] = null;\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    opensubmenu(mi: MenuItem) {\r\n\r\n        let subMenu = mi.subMenu;\r\n\r\n        let left: number;\r\n        let top: number;\r\n        if (subMenu.level == 1) {\r\n            left = mi.$element.position().left;\r\n            top = 30;\r\n        } else {\r\n            left = mi.$element.offset().left + mi.$element.width();\r\n            top = mi.$element.offset().top;\r\n        }\r\n\r\n        subMenu.$element.css({\r\n            top: \"\" + top + \"px\",\r\n            left: \"\" + left + \"px\"\r\n        })\r\n\r\n        if (this.currentSubmenu[subMenu.level] != null) {\r\n            this.currentSubmenu[subMenu.level].hide();\r\n        }\r\n\r\n        subMenu.$element.show();\r\n        this.currentSubmenu[subMenu.level] = subMenu.$element;\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { openContextMenu, makeEditable, ContextMenuItem, animateToTransparent, jo_mouseDetected } from \"../../tools/HtmlTools.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { escapeHtml } from \"../../tools/StringTools.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type AccordionElement = {\r\n    name: string;\r\n    sortName?: string;      // if sortName == null, then name will be used when sorting\r\n    externalElement?: any;\r\n    iconClass?: string;\r\n    $htmlFirstLine?: JQuery<HTMLElement>;\r\n    $htmlSecondLine?: JQuery<HTMLElement>;\r\n\r\n    isFolder: boolean;\r\n    path: string[];\r\n}\r\n\r\nexport type AccordionContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: (panel: AccordionElement) => void;\r\n    subMenu?: AccordionContextMenuItem[]\r\n}\r\n\r\nexport class AccordionPanel {\r\n\r\n    elements: AccordionElement[] = [];\r\n\r\n    $captionElement: JQuery<HTMLElement>;\r\n    $buttonNew: JQuery<HTMLElement>;\r\n    $listElement: JQuery<HTMLElement>;\r\n\r\n    private fixed: boolean;\r\n\r\n    dontSortElements: boolean = false;\r\n\r\n    static currentlyDraggedElement: AccordionElement;\r\n    static currentlyDraggedElementKind: string;\r\n\r\n    newElementCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    newFolderCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    renameCallback: (externalElement: any, newName: string) => string;\r\n    deleteCallback: (externalElement: any, callbackIfSuccessful: () => void) => void;\r\n    selectCallback: (externalElement: any) => void;\r\n    addElementActionCallback: (accordionElement: AccordionElement) => JQuery<HTMLElement>;\r\n    contextMenuProvider: (externalElement: any) => AccordionContextMenuItem[];\r\n    moveCallback: (ae: AccordionElement | AccordionElement[]) => void;\r\n    dropElementCallback: (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => void;\r\n\r\n    $newFolderAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private accordion: Accordion, private caption: string, private flexWeight: string,\r\n        private newButtonClass: string, private buttonNewTitle: string,\r\n        private defaultIconClass: string, private withDeleteButton: boolean, private withFolders: boolean,\r\n        private kind: \"workspace\" | \"file\" | \"class\" | \"student\", private enableDrag: boolean, private acceptDropKinds: string[]) {\r\n\r\n        accordion.addPanel(this);\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        if (withFolders) {\r\n            let that = this;\r\n            this.$newFolderAction = jQuery('<div class=\"img_add-folder-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Neuen Ordner auf oberster Ebene anlegen\">');\r\n            this.$newFolderAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                let pathArray: string[] = [];\r\n\r\n                this.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                    this.newFolderCallback(newElement, () => {\r\n                        this.sortElements();\r\n                        newElement.$htmlFirstLine[0].scrollIntoView();\r\n                        animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                    });\r\n                });\r\n\r\n            })\r\n\r\n            this.addAction(this.$newFolderAction);\r\n\r\n\r\n            let $collapseAllAction = jQuery('<div class=\"img_collapse-all-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Alle Ordner zusammenfalten\">');\r\n            $collapseAllAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                that.collapseAll();\r\n\r\n            })\r\n\r\n            this.addAction($collapseAllAction);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    collapseAll() {\r\n        for (let element of this.elements) {\r\n            if (element.isFolder) {\r\n                if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                    element.$htmlFirstLine.removeClass('jo_expanded');\r\n                    element.$htmlFirstLine.addClass('jo_collapsed');\r\n                }\r\n            }\r\n            if (element.path.length > 0) {\r\n                element.$htmlFirstLine.slideUp(200);\r\n            }\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        this.$captionElement.remove();\r\n        this.$listElement.remove();\r\n    }\r\n\r\n    setFixed(fixed: boolean) {\r\n        this.fixed = fixed;\r\n        if (this.fixed) {\r\n            this.grow();\r\n            this.$captionElement.addClass('jo_fixed');\r\n        } else {\r\n            this.$captionElement.removeClass('jo_fixed');\r\n        }\r\n\r\n    }\r\n\r\n    //     <div class=\"jo_leftpanelcaption expanded\" id=\"workspace\" data-panel=\"filelistouter\">\r\n    //     <span>WORKSPACE</span>\r\n    //     <div class=\"jo_actions\"><img id=\"buttonNewFile\" title=\"Neue Datei hinzufügen\"\r\n    //             src=\"assets/projectexplorer/add-file-dark.svg\"></div>\r\n    // </div>\r\n    // <div id=\"filelistouter\" class=\"jo_projectexplorerdiv scrollable\" data-grow=\"3\"\r\n    //     style=\"flex-grow: 3\">\r\n    //     <div id=\"filelist\"></div>\r\n    // </div>\r\n\r\n\r\n    enableNewButton(enabled: boolean) {\r\n        if (this.$buttonNew != null) {\r\n            if (enabled) {\r\n                this.$buttonNew.show();\r\n            } else {\r\n                this.$buttonNew.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    getCurrentlySelectedPath(): string[] {\r\n        let pathArray: string[] = [];\r\n        let selectedElement = this.getSelectedElement();\r\n        if (selectedElement != null) {\r\n            pathArray = selectedElement.path.slice(0);\r\n            if (selectedElement.isFolder) pathArray.push(selectedElement.name);\r\n        }\r\n        return pathArray;\r\n    }\r\n\r\n    compareWithPath(name1: string, path1: string[], isFolder1: boolean, name2: string, path2: string[], isFolder2: boolean) {\r\n\r\n        path1 = path1.slice();\r\n        path1.push(name1);\r\n        name1 = \"\";\r\n\r\n        path2 = path2.slice();\r\n        path2.push(name2);\r\n        name2 = \"\";\r\n\r\n        let i = 0;\r\n        while (i < path1.length && i < path2.length) {\r\n            let cmp = path1[i].localeCompare(path2[i]);\r\n            if (cmp != 0) return cmp;\r\n            i++;\r\n        }\r\n\r\n        if (path1.length < path2.length) return -1;\r\n        if (path1.length > path2.length) return 1;\r\n\r\n        return name1.localeCompare(name2);\r\n\r\n\r\n        // let nameWithPath1 = path1.join(\"/\");\r\n        // if (nameWithPath1 != \"\" && name1 != \"\") nameWithPath1 += \"/\";\r\n        // nameWithPath1 += name1;\r\n\r\n        // let nameWithPath2 = path2.join(\"/\");\r\n        // if (nameWithPath2 != \"\" && name2 != \"\") nameWithPath2 += \"/\";\r\n        // nameWithPath2 += name2;\r\n\r\n        // return nameWithPath1.localeCompare(nameWithPath2);\r\n    }\r\n\r\n\r\n    getElementIndex(name: string, path: string[], isFolder: boolean): number {\r\n\r\n        for (let i = 0; i < this.elements.length; i++) {\r\n            let element = this.elements[i];\r\n\r\n            if (this.compareWithPath(name, path, isFolder, element.name, element.path, element.isFolder) < 0) return i;\r\n\r\n        }\r\n        return this.elements.length;\r\n    }\r\n\r\n    insertElement(ae: AccordionElement) {\r\n        let insertIndex = this.getElementIndex(ae.name, ae.path, ae.isFolder);\r\n        // if (ae.path.length == 0) insertIndex = this.elements.length;\r\n        this.elements.splice(insertIndex, 0, ae);\r\n\r\n        let $elements = this.$listElement.find('.jo_file');\r\n\r\n        if (insertIndex == 0) {\r\n            this.$listElement.prepend(ae.$htmlFirstLine);\r\n        } else if(insertIndex == $elements.length){\r\n            this.$listElement.append(ae.$htmlFirstLine);\r\n        } else {\r\n            let elementAtIndex = $elements.get(insertIndex);\r\n            jQuery(elementAtIndex).before(ae.$htmlFirstLine);\r\n        }\r\n\r\n    }\r\n\r\n    addFolder(name: string, path: string[], callback: (newPanel: AccordionElement) => void) {\r\n\r\n        let ae: AccordionElement = {\r\n            name: name,\r\n            isFolder: true,\r\n            path: path\r\n        }\r\n\r\n        let $element = this.renderElement(ae, true);\r\n\r\n        this.insertElement(ae);\r\n\r\n        $element[0].scrollIntoView();\r\n\r\n        this.renameElement(ae, () => {\r\n\r\n            callback(ae);\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    renderOuterHtmlElements($accordionDiv: JQuery<HTMLElement>) {\r\n        let that = this;\r\n\r\n        this.$captionElement = jQuery(`<div class=\"jo_leftpanelcaption jo_expanded\">\r\n        <div class=\"jo_captiontext\">` + this.caption + `</div><div class=\"jo_actions\"></div></div>`);\r\n\r\n        if (this.newButtonClass != null) {\r\n            this.$buttonNew = jQuery('<div class=\"jo_button jo_active ' + this.newButtonClass + '\" title=\"' + this.buttonNewTitle + '\">');\r\n            this.$captionElement.find('.jo_actions').append(this.$buttonNew);\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n            this.$buttonNew.on(mousePointer + 'down', (ev) => {\r\n\r\n                Helper.close();\r\n                ev.stopPropagation();\r\n\r\n                let path = that.getCurrentlySelectedPath();\r\n\r\n                let ae: AccordionElement = {\r\n                    name: \"Neu\",\r\n                    isFolder: false,\r\n                    path: path\r\n                }\r\n\r\n                let insertIndex = this.getElementIndex(\"\", path, false);\r\n                this.elements.splice(insertIndex, 0, ae);\r\n                let $element = this.renderElement(ae, true);\r\n\r\n\r\n                if (insertIndex == 0) {\r\n                    this.$listElement.prepend($element);\r\n                } else {\r\n                    let elementAtIndex = this.$listElement.find('.jo_file').get(insertIndex - 1);\r\n                    jQuery(elementAtIndex).after($element);\r\n                }\r\n\r\n                $element[0].scrollIntoView();\r\n\r\n                that.renameElement(ae, () => {\r\n\r\n                    that.newElementCallback(ae, (externalElement: any) => {\r\n\r\n                        ae.externalElement = externalElement;\r\n\r\n                        if (ae.$htmlSecondLine != null) {\r\n                            ae.$htmlSecondLine.insertAfter($element);\r\n                        }\r\n\r\n                        if (that.selectCallback != null) that.select(ae.externalElement);\r\n\r\n                    });\r\n\r\n                });\r\n\r\n            });\r\n\r\n        }\r\n\r\n        let $listOuter = jQuery('<div id=\"filelistouter\" class=\"jo_projectexplorerdiv jo_scrollable\" data-grow=\"'\r\n            + this.flexWeight + '\" style=\"flex-grow: ' + this.flexWeight + '\"></div>');\r\n        this.$listElement = jQuery('<div class=\"jo_filelist\"></div>')\r\n\r\n        $listOuter.append(this.$listElement);\r\n\r\n        $accordionDiv.append(this.$captionElement);\r\n        $accordionDiv.append($listOuter);\r\n\r\n        let $ce = this.$captionElement;\r\n        let $li = this.$listElement.parent();\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $ce.on(mousePointer + 'down', (ev) => {\r\n            if (ev.button != 0) {\r\n                return;\r\n            }\r\n\r\n            if (!this.fixed) {\r\n                let targetGrow = $li.data('grow');\r\n                if ($ce.hasClass('jo_expanded')) {\r\n                    if (that.accordion.parts.length > 1) {\r\n                        $li.animate({\r\n                            'flex-grow': 0.001\r\n                        }, 1000, () => { $ce.toggleClass('jo_expanded'); });\r\n                    }\r\n                } else {\r\n                    $ce.toggleClass('jo_expanded');\r\n                    $li.animate({\r\n                        'flex-grow': targetGrow\r\n                    }, 1000);\r\n                }\r\n            }\r\n        });\r\n\r\n        $ce.on('dragover', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                $ce.addClass('jo_file_dragover');\r\n                event.preventDefault();\r\n            }\r\n        })\r\n\r\n        $ce.on('dragleave', (event) => {\r\n            $ce.removeClass('jo_file_dragover');\r\n        })\r\n\r\n        $ce.on('drop', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                event.preventDefault();\r\n                $ce.removeClass('jo_file_dragover');\r\n                let element1 = AccordionPanel.currentlyDraggedElement;\r\n                if (element1 != null) {\r\n                    that.moveElement(element1, null);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    grow() {\r\n        let $li = this.$listElement.parent();\r\n        let targetGrow = $li.data('grow');\r\n        $li.css('flex-grow', targetGrow);\r\n        this.$captionElement.addClass('jo_expanded');\r\n    }\r\n\r\n    addElement(element: AccordionElement, expanded: boolean) {\r\n        // this.elements.push(element);\r\n        // element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        // this.$listElement.prepend(element.$htmlFirstLine);\r\n        element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        this.insertElement(element);\r\n    }\r\n\r\n    sortElements() {\r\n        if (this.dontSortElements) return;\r\n        this.elements.sort((a, b) => {\r\n            let aName = a.sortName ? a.sortName : a.name;\r\n            let bName = b.sortName ? b.sortName : b.name;\r\n\r\n            return this.compareWithPath(aName, a.path, a.isFolder, bName, b.path, b.isFolder);\r\n\r\n        });\r\n        this.elements.forEach((element) => { this.$listElement.append(element.$htmlFirstLine) });\r\n    }\r\n\r\n    setTextAfterFilename(element: AccordionElement, text: string, cssClass: string) {\r\n        if(element == null) return;\r\n        let $div = element.$htmlFirstLine.find('.jo_textAfterName');\r\n        $div.addClass(cssClass);\r\n        $div.html(text);\r\n    }\r\n\r\n    addAction($element: JQuery<HTMLElement>) {\r\n        this.$captionElement.find('.jo_actions').prepend($element);\r\n    }\r\n\r\n    renderElement(element: AccordionElement, expanded: boolean): JQuery<HTMLElement> {\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        let that = this;\r\n\r\n        let expandedCollapsed = \"\";\r\n\r\n        if (element.iconClass == null) element.iconClass = this.defaultIconClass;\r\n        if (element.isFolder) {\r\n            element.iconClass = \"folder\";\r\n            expandedCollapsed = expanded ? \" jo_expanded\" : \" jo_collapsed\";\r\n        }\r\n\r\n        let pathHtml = \"\";\r\n        if (element.path == null) element.path = [];\r\n        for (let i = 0; i < element.path.length; i++) {\r\n            pathHtml += '<div class=\"jo_folderline\"></div>';\r\n        }\r\n\r\n        element.$htmlFirstLine = jQuery(`<div class=\"jo_file jo_${element.iconClass} ${expandedCollapsed}\">\r\n        <div class=\"jo_folderlines\">${pathHtml}</div>\r\n           <div class=\"jo_fileimage\"></div>\r\n           <div class=\"jo_filename\">${escapeHtml(element.name)}</div>\r\n           <div class=\"jo_textAfterName\"></div>\r\n           <div class=\"jo_additionalButtonSettings\"></div>\r\n           ${this.withDeleteButton ? '<div class=\"jo_delete img_delete jo_button jo_active' + (false ? \" jo_delete_always\" : \"\") + '\"></div>' : \"\"}\r\n           ${!jo_mouseDetected ? '<div class=\"jo_settings_button img_ellipsis-dark jo_button jo_active\"></div>' : \"\"}\r\n           </div>`);\r\n\r\n        if (!expanded && element.path.length > 0) {\r\n            element.$htmlFirstLine.hide();\r\n        }\r\n\r\n        if (this.addElementActionCallback != null) {\r\n            let $elementAction = this.addElementActionCallback(element);\r\n            element.$htmlFirstLine.append($elementAction);\r\n        }\r\n\r\n        if (this.withFolders) {\r\n            if (element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            that.moveElement(element1, element);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withFolders || this.enableDrag) {\r\n            let $filedragpart = element.$htmlFirstLine.find('.jo_filename');\r\n            $filedragpart.attr('draggable', 'true');\r\n            $filedragpart.on('dragstart', (event) => {\r\n                AccordionPanel.currentlyDraggedElement = element;\r\n                AccordionPanel.currentlyDraggedElementKind = that.kind;\r\n                event.originalEvent.dataTransfer.effectAllowed = element.isFolder ? \"move\" : \"copyMove\";\r\n            })\r\n        }\r\n\r\n        if (this.acceptDropKinds != null && this.acceptDropKinds.length > 0) {\r\n            if (!element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n\r\n                        if (event.ctrlKey) {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"copy\";\r\n                        } else {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"move\";\r\n                        }\r\n\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            if (that.dropElementCallback != null) that.dropElementCallback(element, element1, event.ctrlKey ? \"copy\" : \"move\");\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        element.$htmlFirstLine.on(mousePointer + 'up', (ev) => {\r\n\r\n            if (ev.button == 0 && that.selectCallback != null) {\r\n                that.selectCallback(element.externalElement);\r\n\r\n                for (let ae of that.elements) {\r\n                    if (ae != element && ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                        ae.$htmlFirstLine.removeClass('jo_active');\r\n                    }\r\n                }\r\n\r\n                element.$htmlFirstLine.addClass('jo_active');\r\n\r\n                if (element.isFolder) {\r\n\r\n                    if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                        element.$htmlFirstLine.removeClass('jo_expanded');\r\n                        element.$htmlFirstLine.addClass('jo_collapsed');\r\n                    } else {\r\n                        element.$htmlFirstLine.addClass('jo_expanded');\r\n                        element.$htmlFirstLine.removeClass('jo_collapsed');\r\n                    }\r\n\r\n                    let pathIsCollapsed: { [path: string]: boolean } = {};\r\n                    for (let e of this.elements) {\r\n                        if (e.isFolder) {\r\n                            let path = e.path.join(\"/\");\r\n                            if (path != \"\") path += \"/\";\r\n                            path += e.name;\r\n                            pathIsCollapsed[path] = e.$htmlFirstLine.hasClass('jo_collapsed');\r\n                            if (pathIsCollapsed[e.path.join(\"/\")]) pathIsCollapsed[path] = true;\r\n                        }\r\n                    }\r\n                    pathIsCollapsed[\"\"] = false;\r\n\r\n                    for (let e of this.elements) {\r\n                        if (pathIsCollapsed[e.path.join(\"/\")]) {\r\n                            e.$htmlFirstLine.slideUp(200);\r\n                        } else {\r\n                            e.$htmlFirstLine.slideDown(200);\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n\r\n        let contextmenuHandler = function (event) {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [];\r\n            if (that.renameCallback != null) {\r\n                contextMenuItems.push({\r\n                    caption: \"Umbenennen\",\r\n                    callback: () => {\r\n                        that.renameElement(element);\r\n                    }\r\n                })\r\n            }\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n            if (element.isFolder) {\r\n                contextMenuItems = contextMenuItems.concat([\r\n                    {\r\n                        caption: \"Neuen Unterordner anlegen (unterhalb '\" + element.name + \"')...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            // that.$newFolderAction.trigger(mousePointer + 'down');\r\n                            let pathArray = that.getCurrentlySelectedPath();\r\n\r\n                            that.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                                that.newFolderCallback(newElement, () => {\r\n                                    that.sortElements();\r\n                                    newElement.$htmlFirstLine[0].scrollIntoView();\r\n                                    animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                                });\r\n                            });\r\n\r\n                        }\r\n                    }, {\r\n                        caption: \"Neue Datenbank...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            that.$buttonNew.trigger(mousePointer + 'down');\r\n                        }\r\n                    }\r\n                ])\r\n            }\r\n\r\n\r\n            if (that.contextMenuProvider != null && !element.isFolder) {\r\n\r\n                for (let cmi of that.contextMenuProvider(element)) {\r\n                    contextMenuItems.push({\r\n                        caption: cmi.caption,\r\n                        callback: () => {\r\n                            cmi.callback(element);\r\n                        },\r\n                        color: cmi.color,\r\n                        subMenu: cmi.subMenu == null ? null : cmi.subMenu.map((mi) => {\r\n                            return {\r\n                                caption: mi.caption,\r\n                                callback: () => {\r\n                                    mi.callback(element);\r\n                                },\r\n                                color: mi.color\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n\r\n            if (contextMenuItems.length > 0) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                openContextMenu(contextMenuItems, event.pageX, event.pageY);\r\n            }\r\n        };\r\n\r\n        element.$htmlFirstLine[0].addEventListener(\"contextmenu\", contextmenuHandler, false);\r\n\r\n        // long press for touch devices\r\n        let pressTimer: number;\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.on('pointerup', () => {\r\n                clearTimeout(pressTimer);\r\n                return false;\r\n            }).on('pointerdown', (event) => {\r\n                pressTimer = window.setTimeout(() => {\r\n                    contextmenuHandler(event);\r\n                }, 500);\r\n                return false;\r\n            });\r\n        }\r\n\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('pointerdown', (e) => {\r\n                contextmenuHandler(e);\r\n            });\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('mousedown click', (e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            });\r\n        }\r\n\r\n        if (that.withDeleteButton) {\r\n            element.$htmlFirstLine.find('.jo_delete').on(mousePointer + 'up', (ev) => {\r\n                ev.preventDefault();\r\n                openContextMenu([{\r\n                    caption: \"Abbrechen\",\r\n                    callback: () => {\r\n                        // nothing to do.\r\n                    }\r\n                }, {\r\n                    caption: \"Ich bin mir sicher: löschen!\",\r\n                    color: \"#ff6060\",\r\n                    callback: () => {\r\n\r\n                        if (element.isFolder) {\r\n                            if (that.getChildElements(element).length > 0) {\r\n                                alert('Dieser Ordner kann nicht gelöscht werden, da er nicht leer ist.');\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        that.deleteCallback(element.externalElement, () => {\r\n                            element.$htmlFirstLine.remove();\r\n                            if (element.$htmlSecondLine != null) element.$htmlSecondLine.remove();\r\n                            that.elements.splice(that.elements.indexOf(element), 1);\r\n\r\n                            if (that.selectCallback != null) {\r\n                                if (that.elements.length > 0) {\r\n                                    that.select(that.elements[0].externalElement);\r\n                                } else {\r\n                                    that.select(null);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }], ev.pageX + 2, ev.pageY + 2);\r\n                ev.stopPropagation();\r\n            });\r\n        }\r\n\r\n        return element.$htmlFirstLine;\r\n\r\n    }\r\n\r\n    moveElement(elementToMove: AccordionElement, destinationFolder: AccordionElement) {\r\n        let destinationPath: string[] = destinationFolder == null ? [] : destinationFolder.path.slice(0).concat([destinationFolder.name]);\r\n        if (elementToMove.isFolder) {\r\n            let movedElements: AccordionElement[] = [elementToMove];\r\n\r\n            let sourcePath = elementToMove.path.concat([elementToMove.name]).join(\"/\");\r\n\r\n            if(destinationPath.join('/').indexOf(sourcePath) == 0) return;\r\n\r\n            let oldPathLength = elementToMove.path.length;\r\n            elementToMove.path = destinationPath.slice(0);\r\n\r\n            for (let element of this.elements) {\r\n                if (element.path.join(\"/\").startsWith(sourcePath)) {\r\n                    element.path.splice(0, oldPathLength);\r\n                    element.path = destinationPath.concat(element.path);\r\n                    movedElements.push(element);\r\n                }\r\n            }\r\n\r\n            for (let el of movedElements) {\r\n                el.$htmlFirstLine.remove();\r\n                this.elements.splice(this.elements.indexOf(el), 1);\r\n            }\r\n            for (let el of movedElements) {\r\n                this.renderElement(el, true);\r\n                this.insertElement(el);\r\n            }\r\n\r\n            this.moveCallback(movedElements);\r\n        } else {\r\n            elementToMove.path = destinationPath;\r\n            elementToMove.$htmlFirstLine.remove();\r\n            this.elements.splice(this.elements.indexOf(elementToMove), 1);\r\n            this.renderElement(elementToMove, true);\r\n            this.insertElement(elementToMove);\r\n            this.select(elementToMove.externalElement);\r\n            elementToMove.$htmlFirstLine[0].scrollIntoView();\r\n            this.moveCallback(elementToMove);\r\n        }\r\n    }\r\n\r\n    getChildElements(folder: AccordionElement): AccordionElement[] {\r\n        let path = folder.path.slice(0).concat(folder.name).join(\"/\");\r\n        return this.elements.filter((element) => element.path.join(\"/\").startsWith(path));\r\n    }\r\n\r\n    renameElement(element: AccordionElement, callback?: () => void) {\r\n        let that = this;\r\n        let $div = element.$htmlFirstLine.find('.jo_filename');\r\n        let pointPos = element.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        this.dontSortElements = true;\r\n        makeEditable($div, $div, (newText: string) => {\r\n            if (element.externalElement != null) newText = that.renameCallback(element.externalElement, newText);\r\n            element.name = newText;\r\n            $div.html(element.name);\r\n            if (callback != null) callback();\r\n            that.sortElements();\r\n            $div[0].scrollIntoView();\r\n            this.dontSortElements = false;\r\n        }, selection);\r\n    }\r\n\r\n    select(externalElement: any, invokeCallback: boolean = true, scrollIntoView: boolean = false) {\r\n\r\n        if (externalElement == null) {\r\n            for (let ae1 of this.elements) {\r\n                if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n            }\r\n        } else {\r\n            let ae = this.findElement(externalElement);\r\n\r\n            if (ae != null) {\r\n                for (let ae1 of this.elements) {\r\n                    if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n                }\r\n\r\n                ae.$htmlFirstLine.addClass('jo_active');\r\n                if (scrollIntoView) {\r\n                    let pathString = ae.path.join(\"/\");\r\n                    for (let el of this.elements) {\r\n                        let elPath = el.path.slice(0);\r\n                        if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                            if (el.isFolder) {\r\n                                elPath.push(el.name);\r\n                                if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                                    el.$htmlFirstLine.removeClass(\"jo_collapsed\");\r\n                                    el.$htmlFirstLine.addClass(\"jo_expanded\");\r\n                                }\r\n                            }\r\n                            el.$htmlFirstLine.show();\r\n                        }\r\n\r\n                    }\r\n\r\n                    ae.$htmlFirstLine[0].scrollIntoView();\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (invokeCallback && this.selectCallback != null) this.selectCallback(externalElement);\r\n\r\n    }\r\n\r\n    getPathString(ae: AccordionElement) {\r\n        let ps: string = ae.path.join(\"/\");\r\n        if (ae.isFolder) {\r\n            if (ps != \"\") ps += \"/\";\r\n            ps += ae.name;\r\n        }\r\n        return ps;\r\n    }\r\n\r\n    setElementClass(element: AccordionElement, iconClass: string) {\r\n        if (element != null) {\r\n            element.$htmlFirstLine?.removeClass(\"jo_\" + element.iconClass).addClass(\"jo_\" + iconClass);\r\n            element.iconClass = iconClass;\r\n        }\r\n\r\n    }\r\n\r\n    findElement(externalElement: any): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                return ae;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    removeElement(externalElement: any) {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                ae.$htmlFirstLine.remove();\r\n                if (ae.$htmlSecondLine != null) ae.$htmlSecondLine.remove();\r\n                this.elements.splice(this.elements.indexOf(ae), 1);\r\n\r\n                if (this.selectCallback != null) {\r\n                    if (this.elements.length > 0) {\r\n                        this.select(this.elements[0].externalElement);\r\n                    } else {\r\n                        this.select(null);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.$listElement.empty();\r\n        this.elements = [];\r\n    }\r\n\r\n    setCaption(text: string) {\r\n        this.$captionElement.find('.jo_captiontext').html(text);\r\n    }\r\n\r\n    getSelectedElement(): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                return ae;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class Accordion {\r\n\r\n    parts: AccordionPanel[] = [];\r\n    $html: JQuery<HTMLElement>;\r\n\r\n    constructor(public main: MainBase, $html: JQuery<HTMLElement>) {\r\n        this.$html = $html;\r\n        $html.addClass('jo_leftpanelinner');\r\n    }\r\n\r\n    addPanel(panel: AccordionPanel) {\r\n        panel.renderOuterHtmlElements(this.$html);\r\n        this.parts.push(panel);\r\n    }\r\n\r\n}","import { ClassData, UserData } from \"../../communication/Data.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { isEmptyObject } from \"jquery\";\r\n\r\nexport class DistributeToStudentsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n    studentCount: number = 0;\r\n\r\n    constructor(private classes: ClassData[], private workspace: Workspace, private main: Main){\r\n        this.init();\r\n    }\r\n\r\n    private init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Austeilen eines Workspace an einzelne Schüler/innen</div>\r\n             <div class=\"jo_ds_settings\">\r\n                <div class=\"jo_ds_settings_caption\">Workspace:</div><div class=\"jo_ds_workspacename\">${this.workspace.name}</div>\r\n                <div class=\"jo_ds_settings_caption\">Liste filtern:</div><div class=\"jo_ds_filterdiv\"><input class=\"dialog-input\"></input></div>\r\n             </div>\r\n             <div class=\"jo_ds_student_list jo_scrollable\">\r\n             </div>\r\n             <div class=\"jo_ds_selected_message\"></div>\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_distribute_button\">Austeilen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        let $studentList = jQuery('.jo_ds_student_list');\r\n        let that = this;\r\n\r\n        for(let klass of this.classes){\r\n            for(let student of klass.students){\r\n                let $studentLine = jQuery('<div class=\"jo_ds_student_line\">');\r\n                let $studentClass = jQuery(`<div class=\"jo_ds_student_class\">${klass.name}</div>`);                \r\n                let $studentName = jQuery(`<div class=\"jo_ds_student_name\">${student.rufname} ${student.familienname}</div>`);\r\n                $studentLine.append($studentClass, $studentName);\r\n                $studentList.append($studentLine);\r\n                $studentLine.on('mousedown', () => {\r\n                    $studentLine.toggleClass('jo_active');\r\n                     that.studentCount += $studentLine.hasClass('jo_active') ? 1 : -1;\r\n                     jQuery('.jo_ds_selected_message').text(`${that.studentCount} Schüler/inn/en selektiert`);\r\n                });\r\n                $studentLine.data('student', student);\r\n                $studentLine.data('klass', klass);\r\n            }\r\n        }\r\n\r\n        jQuery('.jo_ds_filterdiv>input').on('input', () => {\r\n            let filterText = <string>jQuery('.jo_ds_filterdiv>input').val();\r\n            if(filterText == null || filterText == \"\"){\r\n                $('.jo_ds_student_line').show();\r\n            } else {\r\n                $('.jo_ds_student_line').each((index, element) => {\r\n                    let $element = jQuery(element);\r\n                    let klass:ClassData = $element.data('klass');\r\n                    let student: UserData = $element.data('student');\r\n                    let text = klass.name + \" \" + student.rufname + \" \" + student.familienname;\r\n                    if(text.indexOf(filterText) >= 0){\r\n                        $element.show();\r\n                    } else {\r\n                        $element.hide();\r\n                    }\r\n                });\r\n\r\n            }\r\n            \r\n        });\r\n\r\n\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { window.history.back(); });\r\n        jQuery('#jo_ds_distribute_button').on('click', () => {that.distributeWorkspace();});\r\n\r\n    }\r\n\r\n    distributeWorkspace() {\r\n\r\n        let student_ids: number[] = [];\r\n        $('.jo_ds_student_line').each((index, element) => {\r\n            let $element = jQuery(element);\r\n            if($element.hasClass('jo_active')){\r\n                let student: UserData = $element.data('student');\r\n                student_ids.push(student.id);\r\n            }\r\n        });\r\n\r\n        window.history.back();\r\n\r\n        this.main.networkManager.sendDistributeWorkspace(this.workspace, null, student_ids, (error: string) => {\r\n            if (error == null) {\r\n                let networkManager = this.main.networkManager;\r\n                let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                alert(`Der Workspace ${this.workspace.name} wurde an ${student_ids.length} Schüler/innen ausgeteilt. Er wird in maximal ${dt} s bei jedem Schüler ankommen.`);\r\n            } else {\r\n                alert(error);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n\r\n}","import { CreateWorkspaceData, WorkspaceData } from \"../../communication/Data.js\";\r\nimport { DatabaseImportExport } from \"../../tools/DatabaseImportExport.js\";\r\nimport { LoadableDatabase } from \"../../tools/DatabaseLoader.js\";\r\nimport { DatabaseTool } from \"../../tools/DatabaseTools.js\";\r\nimport { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { TemplateUploader } from \"../../tools/TemplateUploader.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionElement } from \"./Accordion.js\";\r\n\r\ntype CreateMode = \"emptyDatabase\" | \"fromTemplate\" | \"useExistingDatabase\" | \"useDumpFile\";\r\n\r\nexport class NewDatabaseDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    database: LoadableDatabase;\r\n\r\n    constructor(private main: Main, private owner_id: number) {\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Neue Datenbank anlegen</div>\r\n\r\n            <div class=\"jo_ds_settings\">\r\n               <div class=\"jo_ds_settings_caption\">Name der Datenbank:</div><div><input class=\"dialog-input jo_databasename\" value=\"Neue Datenbank\"></input></div>\r\n            </div>\r\n\r\n             <div class=\"jo_tabheadings jo_cdtabheading\">\r\n             <div class=\"jo_tabheading\" data-target=\"jo_createEmptyDatabaseTab\">Leere Datenbank</div>\r\n             <div class=\"jo_tabheading jo_active\" data-target=\"jo_createDatabaseFromTemplateTab\">Von Vorlage kopieren</div>\r\n             <div class=\"jo_tabheading\" data-target=\"jo_createDatabaseUseExistingTab\">Bestehende Datenbank mitnutzen</div>\r\n             <div class=\"jo_tabheading\" data-target=\"jo_createDatabaseUseDumpFile\">Import aus Binärdump (.dbDump-File)</div>\r\n             </div>\r\n             <div class=\"jo_tabs\" style=\"width: 100%; margin-top: 10px\">\r\n                 <div class=\"jo_active jo_createEmptyDatabaseTab\">\r\n                 <div class=\"jo_createDatabaseDescription\">\r\n                 Erstellt wird eine leere Datenbank.\r\n                 </div>\r\n                 </div>\r\n                 <div class=\"jo_createDatabaseFromTemplateTab\">\r\n                    <div class=\"jo_ds_settings\">\r\n                       <div class=\"jo_ds_settings_caption\">Vorlage suchen:</div><div><input class=\"dialog-input jo_templatename\"></input></div>\r\n                    </div>\r\n                    <div class=\"jo_scrollable jo_templatelist\"></div>\r\n                 </div>\r\n                <div class=\"jo_createDatabaseUseExistingTab\">\r\n                    <div class=\"jo_createDatabaseDescription\">Wenn Du die Datenbank einer anderen Nutzerin/eines anderen Nutzers mitnutzen möchtest, brauchst Du einen Zugriffscode von ihr/ihm. Er ist unter Datenbank->Einstellungen zu finden.            \r\n                    </div>\r\n                    <div class=\"jo_ds_settings\">\r\n                       <div class=\"jo_ds_settings_caption\">Zugriffscode:</div><div><input class=\"dialog-input jo_databasecodeinput\"></input></div>\r\n                    </div>\r\n                 </div>\r\n                <div class=\"jo_createDatabaseUseDumpFile\">\r\n                    <div class=\"jo_createDatabaseDescription\">Wähle hier die Datei mit dem Datenbank-Dump aus (Endung .dbDump):</div>\r\n                    <input type=\"file\" class=\"jo_dumpfile\" name=\"dumpfile\" style=\"padding: 10px\"/>\r\n                    <div class=\"jo_databaseimport_dropzone\" style=\"width: 70vw; margin-left: 10px\">Alternativ: Datei in dieses Feld ziehen</div>\r\n                    <div class=\"jo_databaseimport_ok\"></div>\r\n                 </div>\r\n             </div>\r\n\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_create_database_button\">Datenbank anlegen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        makeTabs(this.$dialog);\r\n\r\n        let $templatelist = jQuery('.jo_templatelist');\r\n        this.main.networkManager.fetchTemplateList((templatelist) => {\r\n            templatelist.forEach(tle => {\r\n\r\n                let $tle = jQuery('<div class=\"jo_templateListEntry\"></div>')\r\n                $tle.append(jQuery(`<div class=\"jo_tle_firstline\">${tle.name} <span class=\"jo_tle_ownername\"> (von ${tle.ownerName})</span></div>`))\r\n                $tle.append(jQuery(`<div class=\"jo_tle_secondline\">${tle.description}</div>`))\r\n                $tle.data('templateId', tle.id);\r\n                $tle.data('name', tle.name);\r\n\r\n                $templatelist.append($tle);\r\n                tle.$tle = <JQuery<HTMLDivElement>>$tle;\r\n\r\n                $tle.on('pointerdown', () => {\r\n                    $templatelist.find('.jo_templateListEntry').removeClass('jo_active');\r\n                    $tle.addClass('jo_active');\r\n                })\r\n\r\n            })\r\n            let $templateName = <JQuery<HTMLInputElement>>jQuery('.jo_templatename');\r\n            $templateName.on('input', () => {\r\n                let s = <string>$templateName.val();\r\n                $templatelist.find('.jo_templateListEntry').hide();\r\n                templatelist.forEach(tle => {\r\n                    let tleString = tle.name + tle.ownerName + (tle.description ? tle.description : \"\");\r\n                    if (tleString.indexOf(s) >= 0) tle.$tle.show();\r\n                })\r\n            })\r\n        })\r\n\r\n        let $dropZone = jQuery('.jo_databaseimport_dropzone');\r\n\r\n        $dropZone.on('dragover', (evt) => {\r\n            evt.stopPropagation();\r\n            evt.preventDefault();\r\n            evt.originalEvent.dataTransfer.dropEffect = 'copy';\r\n        })\r\n        $dropZone.on('drop', (evt) => {\r\n            evt.stopPropagation();\r\n            evt.preventDefault();\r\n\r\n            var files = evt.originalEvent.dataTransfer.files;\r\n            this.importFile(files);\r\n        })\r\n\r\n        jQuery('.jo_dumpfile').on('change', (event) => {\r\n            //@ts-ignore\r\n            var files: FileList = event.originalEvent.target.files;\r\n            this.importFile(files);\r\n        })\r\n\r\n\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { this.showMainWindow(); });\r\n        jQuery('#jo_ds_create_database_button').on('click', () => {\r\n            let createMode: CreateMode = \"emptyDatabase\";\r\n            if (jQuery('.jo_createDatabaseFromTemplateTab').hasClass('jo_active')) createMode = \"fromTemplate\";\r\n            if (jQuery('.jo_createDatabaseUseExistingTab').hasClass('jo_active')) createMode = \"useExistingDatabase\";\r\n            if (jQuery('.jo_createDatabaseUseDumpFile').hasClass('jo_active')) createMode = \"useDumpFile\";\r\n\r\n            let workspaceData: CreateWorkspaceData = {\r\n                id: null,\r\n                isFolder: false,\r\n                name: <string>jQuery('.dialog-input.jo_databasename').val(),\r\n                path: \"\",\r\n            }\r\n\r\n            switch (createMode) {\r\n                case \"emptyDatabase\":\r\n                    this.createWorkspace(workspaceData);\r\n                    break;\r\n                case \"fromTemplate\":\r\n                    let $template = jQuery('.jo_templateListEntry.jo_active');\r\n                    if ($template.length != 1) {\r\n                        alert('Bitte wählen Sie genau eine Vorlage aus.');\r\n                        return;\r\n                    } else {\r\n                        workspaceData.template_database_id = $template.data('templateId');\r\n                        if (workspaceData.name == \"Neue Datenbank\") workspaceData.name = $template.data('name');\r\n                        this.createWorkspace(workspaceData);\r\n                    }\r\n                    break;\r\n                case \"useExistingDatabase\":\r\n                    let code = <string>jQuery('.jo_databasecodeinput').val();\r\n                    let tIndex = code.indexOf(\"T\");\r\n                    if (tIndex == -1) {\r\n                        alert(\"Der Zugriffscode muss das Zeichen T enthalten.\");\r\n                        return;\r\n                    }\r\n                    workspaceData.otherDatabaseId = Number.parseInt(code.substring(0, tIndex));\r\n                    workspaceData.secret = code.substring(tIndex + 1);\r\n                    this.createWorkspace(workspaceData);\r\n                    break;\r\n                case \"useDumpFile\":\r\n                    if(this.database != null){\r\n                        new TemplateUploader().uploadCurrentDatabase(-1, this.main, this.database.binDump, (response) => {\r\n                            workspaceData.template_database_id = response.newTemplateId;\r\n                            this.createWorkspace(workspaceData);\r\n                        });\r\n\r\n                    } else {\r\n                        alert('Bitte laden Sie zuerst den Binärdump einer Datenbank hoch.')\r\n                        return;\r\n                    }\r\n                    break;\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    private createWorkspace(workspaceData: CreateWorkspaceData) {\r\n        this.main.networkManager.sendCreateWorkspace(workspaceData, this.owner_id, (error?: string) => {\r\n            if (error != null) { alert(error); return; }\r\n\r\n            let w = this.main.createNewWorkspace(workspaceData.name, this.owner_id);\r\n            w.id = workspaceData.id;\r\n            w.sql_history = \"\";\r\n\r\n            let projectExplorer = this.main.projectExplorer;\r\n\r\n            this.main.workspaceList.push(w);\r\n            let accordionElement: AccordionElement = {\r\n                name: workspaceData.name,\r\n                externalElement: w,\r\n                iconClass: \"workspace\",\r\n                isFolder: false,\r\n                path: []\r\n            };\r\n\r\n            projectExplorer.workspaceListPanel.addElement(accordionElement, true);\r\n\r\n            w.renderSettingsButton(accordionElement);\r\n\r\n            projectExplorer.workspaceListPanel.sortElements();\r\n            projectExplorer.fileListPanel.sortElements();\r\n\r\n            projectExplorer.setWorkspaceActive(w);\r\n\r\n            this.showMainWindow();\r\n\r\n        });\r\n    }\r\n\r\n    importFile(files: FileList) {\r\n        let that = this;\r\n        new DatabaseImportExport().loadFromFile(files[0], (db: LoadableDatabase) => {\r\n            let isDatabase: boolean = false;\r\n            if(DatabaseTool.getDumpType(db.binDump) == \"binaryCompressed\"){\r\n                // @ts-ignore\r\n                let dbUncompressed = pako.inflate(db.binDump);\r\n                if(DatabaseTool.getDumpType(dbUncompressed) == \"binaryUncompressed\"){\r\n                    isDatabase = true;\r\n                }\r\n            } else if(DatabaseTool.getDumpType(db.binDump) == \"binaryUncompressed\"){\r\n                //@ts-ignore\r\n                db.binDump = pako.deflate(db.binDump);\r\n                isDatabase = true;\r\n            }\r\n\r\n            if(isDatabase){\r\n                that.database = db;\r\n                jQuery('.jo_databaseimport_ok').html(\"Die Datenbankdatei wurde erfolgreich von Datei eingelesen. Sie können die Datenbank jetzt durch Klick auf den Button unten erstellen.\");\r\n            } else {\r\n                alert(\"In der Datei befindet sich kein Binärdump einer Datenbank.\");\r\n            }\r\n        });\r\n    }\r\n\r\n    showMainWindow() {\r\n        jQuery('#main').css('visibility', 'visible');\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n    }\r\n\r\n\r\n\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionPanel, Accordion, AccordionElement, AccordionContextMenuItem } from \"./Accordion.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { WorkspaceData, Workspaces, ClassData, CreateWorkspaceData } from \"../../communication/Data.js\";\r\nimport { dateToString } from \"../../tools/StringTools.js\";\r\nimport { DistributeToStudentsDialog } from \"./DistributeToStudentsDialog.js\";\r\nimport { NewDatabaseDialog } from \"./NewDatabaseDialog.js\";\r\n\r\n\r\nexport class ProjectExplorer {\r\n\r\n    programPointerModule: Module = null;\r\n    programPointerPosition: TextPosition;\r\n    programPointerDecoration: string[] = [];\r\n\r\n    accordion: Accordion;\r\n    fileListPanel: AccordionPanel;\r\n    workspaceListPanel: AccordionPanel;\r\n\r\n    $homeAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private $projectexplorerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.accordion = new Accordion(this.main, this.$projectexplorerDiv);\r\n\r\n        this.initFilelistPanel();\r\n\r\n        this.initWorkspacelistPanel();\r\n\r\n    }\r\n\r\n    initFilelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.fileListPanel = new AccordionPanel(this.accordion, \"Kein Workspace gewählt\", \"1\",\r\n            \"img_add-file-dark\", \"Neue Datei...\", \"java\", true, false, \"file\", true, []);\r\n\r\n        this.fileListPanel.newElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                if (that.main.currentWorkspace == null) {\r\n                    alert('Bitte wählen Sie zuerst einen Workspace aus.');\r\n                    return null;\r\n                }\r\n\r\n                let f: File = {\r\n                    name: accordionElement.name,\r\n                    dirty: false,\r\n                    saved: true,\r\n                    text: \"\",\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    panelElement: accordionElement\r\n                };\r\n                let m = new Module(f, that.main);\r\n                let modulStore = that.main.currentWorkspace.moduleStore;\r\n                modulStore.putModule(m);\r\n                that.setModuleActive(m);\r\n                that.main.networkManager.sendCreateFile(m, that.main.currentWorkspace, that.main.workspacesOwnerId,\r\n                    (error: string) => {\r\n                        if (error == null) {\r\n                            successfulNetworkCommunicationCallback(m);\r\n                        } else {\r\n                            alert('Der Server ist nicht erreichbar!');\r\n\r\n                        }\r\n                    });\r\n\r\n            };\r\n\r\n        this.fileListPanel.renameCallback =\r\n            (module: Module, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                let file = module.file;\r\n\r\n                file.name = newName;\r\n                file.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.fileListPanel.deleteCallback =\r\n            (module: Module, callbackIfSuccessful: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.currentWorkspace.moduleStore.removeModule(module);\r\n                        callbackIfSuccessful();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.fileListPanel.contextMenuProvider = (accordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            if (!(that.main.user.is_teacher || that.main.user.is_admin || that.main.user.is_schooladmin)) {\r\n                let module: Module = <Module>accordionElement.externalElement;\r\n                let file = module.file;\r\n\r\n                if (file.submitted_date == null) {\r\n                    cmiList.push({\r\n                        caption: \"Als Hausaufgabe markieren\",\r\n                        callback: (element: AccordionElement) => {\r\n\r\n                            let file = (<Module>element.externalElement).file;\r\n                            file.submitted_date = dateToString(new Date());\r\n                            file.saved = false;\r\n                            that.main.networkManager.sendUpdates(null, true);\r\n                            that.renderHomeworkButton(file);\r\n                        }\r\n                    });\r\n                } else {\r\n                    cmiList.push({\r\n                        caption: \"Hausaufgabenmarkierung entfernen\",\r\n                        callback: (element: AccordionElement) => {\r\n\r\n                            let file = (<Module>element.externalElement).file;\r\n                            file.submitted_date = null;\r\n                            file.saved = false;\r\n                            that.main.networkManager.sendUpdates(null, true);\r\n                            that.renderHomeworkButton(file);\r\n\r\n                        }\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n\r\n\r\n        this.fileListPanel.selectCallback =\r\n            (module: Module) => {\r\n                that.setModuleActive(module);\r\n            }\r\n\r\n\r\n\r\n    }\r\n\r\n    renderHomeworkButton(file: File) {\r\n        let $buttonDiv = file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonHomework');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_homeworkButton').remove();\r\n\r\n        let klass: string = null;\r\n        let title: string = \"\";\r\n        if (file.submitted_date != null) {\r\n            klass = \"img_homework\";\r\n            title = \"Wurde als Hausaufgabe abgegeben: \" + file.submitted_date\r\n            if (file.text_before_revision) {\r\n                klass = \"img_homework-corrected\";\r\n                title = \"Korrektur liegt vor.\"\r\n            }\r\n        }\r\n\r\n        if (klass != null) {\r\n            let $homeworkButtonDiv = jQuery(`<div class=\"jo_homeworkButton ${klass}\" title=\"${title}\"></div>`);\r\n            $buttonDiv.prepend($homeworkButtonDiv);\r\n            if (klass.indexOf(\"jo_active\") >= 0) {\r\n                $homeworkButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n                $homeworkButtonDiv.on('click', (e) => {\r\n                    e.stopPropagation();\r\n                    // TODO\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initWorkspacelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.workspaceListPanel = new AccordionPanel(this.accordion, \"Datenbanken\", \"3\",\r\n            \"img_add-database-dark\", \"Neue Datenbank...\", \"workspace\", true, true, \"workspace\", false, [\"file\"]);\r\n\r\n        let $newWorkspaceAction = jQuery('<div class=\"img_add-database-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Neue Datenbank anlegen\">');\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $newWorkspaceAction.on(mousePointer + 'down', (e) => {\r\n            e.stopPropagation();\r\n\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            new NewDatabaseDialog(that.main, owner_id);\r\n\r\n        })\r\n\r\n        this.workspaceListPanel.addAction($newWorkspaceAction);\r\n        this.workspaceListPanel.$buttonNew.hide();\r\n\r\n\r\n        this.workspaceListPanel.renameCallback =\r\n            (workspace: Workspace, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                workspace.name = newName;\r\n                workspace.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.workspaceListPanel.deleteCallback =\r\n            (workspace: Workspace, successfulNetworkCommunicationCallback: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"workspace\", workspace.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.removeWorkspace(workspace);\r\n                        that.fileListPanel.enableNewButton(that.main.workspaceList.length > 0);\r\n                        that.fileListPanel.clear();\r\n                        that.main.databaseExplorer.clear();\r\n                        that.main.getResultsetPresenter().clear();\r\n                        successfulNetworkCommunicationCallback();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.workspaceListPanel.selectCallback =\r\n            (workspace: Workspace) => {\r\n                if (workspace != this.main.currentWorkspace) {\r\n                    that.main.networkManager.sendUpdates(() => {\r\n                        that.setWorkspaceActive(workspace);\r\n                    });\r\n                }\r\n            }\r\n\r\n        this.workspaceListPanel.newFolderCallback = (newElement: AccordionElement, successCallback) => {\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            let folder: Workspace = new Workspace(newElement.name, that.main, owner_id);\r\n            folder.isFolder = true;\r\n\r\n            folder.path = newElement.path.join(\"/\");\r\n            folder.panelElement = newElement;\r\n            newElement.externalElement = folder;\r\n            that.main.workspaceList.push(folder);\r\n\r\n            let wd: CreateWorkspaceData = {\r\n                id: -1,\r\n                isFolder: true,\r\n                name: folder.name,\r\n                path: folder.path\r\n            }\r\n\r\n            that.main.networkManager.sendCreateWorkspace(wd, that.main.workspacesOwnerId, (error: string) => {\r\n                if (error == null) {\r\n                    folder.id = wd.id;\r\n                    successCallback(folder);\r\n\r\n                } else {\r\n                    alert(\"Fehler: \" + error);\r\n                    that.workspaceListPanel.removeElement(newElement);\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        this.workspaceListPanel.moveCallback = (ae: AccordionElement | AccordionElement[]) => {\r\n            if (!Array.isArray(ae)) ae = [ae];\r\n            for (let a of ae) {\r\n                let ws: Workspace = a.externalElement;\r\n                ws.path = a.path.join(\"/\");\r\n                ws.saved = false;\r\n            }\r\n            this.main.networkManager.sendUpdates();\r\n        }\r\n\r\n        this.workspaceListPanel.dropElementCallback = (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => {\r\n            let workspace: Workspace = dest.externalElement;\r\n            let module: Module = droppedElement.externalElement;\r\n\r\n            if (workspace.moduleStore.getModules(false).indexOf(module) >= 0) return; // module is already in destination workspace\r\n\r\n            let f: File = {\r\n                name: module.file.name,\r\n                dirty: true,\r\n                saved: false,\r\n                text: module.file.text,\r\n                text_before_revision: null,\r\n                submitted_date: null,\r\n                student_edited_after_revision: false,\r\n                version: module.file.version,\r\n                panelElement: null\r\n            };\r\n\r\n            if (dropEffekt == \"move\") {\r\n                // move file\r\n                let oldWorkspace = that.main.currentWorkspace;\r\n                oldWorkspace.moduleStore.removeModule(module);\r\n                that.fileListPanel.removeElement(module);\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, () => { });\r\n            }\r\n\r\n            let m = new Module(f, that.main);\r\n            let modulStore = workspace.moduleStore;\r\n            modulStore.putModule(m);\r\n            that.main.networkManager.sendCreateFile(m, workspace, that.main.workspacesOwnerId,\r\n                (error: string) => {\r\n                    if (error == null) {\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n\r\n        }\r\n\r\n\r\n\r\n        this.$homeAction = jQuery('<div class=\"img_home-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Meine eigenen Workspaces anzeigen\">');\r\n\r\n        this.$homeAction.on(mousePointer +'down', (e) => {\r\n            e.stopPropagation();\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n                that.onHomeButtonClicked();\r\n            });\r\n\r\n            that.main.bottomDiv.hideHomeworkTab();\r\n\r\n        })\r\n\r\n        this.workspaceListPanel.addAction(this.$homeAction);\r\n        this.$homeAction.hide();\r\n\r\n        this.workspaceListPanel.contextMenuProvider = (workspaceAccordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            if (this.main.user.is_teacher && this.main.teacherExplorer.classPanel.elements.length > 0) {\r\n                cmiList.push({\r\n                    caption: \"An Klasse austeilen...\",\r\n                    callback: (element: AccordionElement) => { },\r\n                    subMenu: this.main.teacherExplorer.classPanel.elements.map((ae) => {\r\n                        return {\r\n                            caption: ae.name,\r\n                            callback: (element: AccordionElement) => {\r\n                                let klasse = <any>ae.externalElement;\r\n\r\n                                let workspace: Workspace = element.externalElement;\r\n\r\n                                this.main.networkManager.sendDistributeWorkspace(workspace, klasse, null, (error: string) => {\r\n                                    if (error == null) {\r\n                                        let networkManager = this.main.networkManager;\r\n                                        let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                                        alert(\"Der Workspace \" + workspace.name + \" wurde an die Klasse \" + klasse.name + \" ausgeteilt. Er wird in maximal \" +\r\n                                            dt + \" s bei jedem Schüler ankommen.\");\r\n                                    } else {\r\n                                        alert(error);\r\n                                    }\r\n                                });\r\n\r\n                            }\r\n                        }\r\n                    })\r\n                },\r\n                    {\r\n                        caption: \"An einzelne Schüler/innen austeilen...\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let classes: ClassData[] = this.main.teacherExplorer.classPanel.elements.map(ae => ae.externalElement);\r\n                            let workspace: Workspace = element.externalElement;\r\n                            new DistributeToStudentsDialog(classes, workspace, this.main);\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n    }\r\n\r\n    onHomeButtonClicked() {\r\n        this.main.teacherExplorer.restoreOwnWorkspaces();\r\n        this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.ownUpdateFrequencyInSeconds;\r\n        this.$homeAction.hide();\r\n        this.fileListPanel.enableNewButton(this.main.workspaceList.length > 0);\r\n    }\r\n\r\n    renderFiles(workspace: Workspace) {\r\n\r\n        let name = workspace == null ? \"Kein Workspace vorhanden\" : workspace.name;\r\n\r\n        this.fileListPanel.setCaption(name);\r\n        this.fileListPanel.clear();\r\n\r\n        if (this.main.getCurrentWorkspace() != null) {\r\n            for (let module of this.main.getCurrentWorkspace().moduleStore.getModules(false)) {\r\n                module.file.panelElement = null;\r\n            }\r\n        }\r\n\r\n        if (workspace != null) {\r\n            let moduleList: Module[] = [];\r\n\r\n            for (let m of workspace.moduleStore.getModules(false)) {\r\n                moduleList.push(m);\r\n            }\r\n\r\n            moduleList.sort((a, b) => { return a.file.name > b.file.name ? 1 : a.file.name < b.file.name ? -1 : 0 });\r\n\r\n            for (let m of moduleList) {\r\n\r\n                m.file.panelElement = {\r\n                    name: m.file.name,\r\n                    externalElement: m,\r\n                    isFolder: false,\r\n                    path: []\r\n                };\r\n\r\n                this.fileListPanel.addElement(m.file.panelElement, true);\r\n                this.renderHomeworkButton(m.file);\r\n            }\r\n\r\n            this.fileListPanel.sortElements();\r\n\r\n        }\r\n    }\r\n\r\n    renderWorkspaces(workspaceList: Workspace[]) {\r\n\r\n        this.fileListPanel.clear();\r\n        this.workspaceListPanel.clear();\r\n\r\n        for (let w of workspaceList) {\r\n            let path = w.path.split(\"/\");\r\n            if (path.length == 1 && path[0] == \"\") path = [];\r\n            w.panelElement = {\r\n                name: w.name,\r\n                externalElement: w,\r\n                iconClass: 'workspace',\r\n                isFolder: w.isFolder,\r\n                path: path\r\n            };\r\n\r\n            this.workspaceListPanel.addElement(w.panelElement, false);\r\n            w.renderSettingsButton(w.panelElement);\r\n        }\r\n\r\n        this.workspaceListPanel.sortElements();\r\n        this.fileListPanel.enableNewButton(workspaceList.length > 0);\r\n\r\n\r\n\r\n    }\r\n\r\n    renderErrorCount(workspace: Workspace, errorCountMap: Map<Module, number>) {\r\n        if (errorCountMap == null) return;\r\n        for (let m of workspace.moduleStore.getModules(false)) {\r\n            let errorCount: number = errorCountMap.get(m);\r\n            let errorCountS: string = ((errorCount == null || errorCount == 0) ? \"\" : \"(\" + errorCount + \")\");\r\n\r\n            this.fileListPanel.setTextAfterFilename(m.file.panelElement, errorCountS, 'jo_errorcount');\r\n        }\r\n    }\r\n\r\n    setWorkspaceActive(w: Workspace) {\r\n\r\n        if (w != null) {\r\n            this.fileListPanel.$buttonNew.show();\r\n        }\r\n\r\n        this.workspaceListPanel.select(w, false);\r\n\r\n        let callback = (error: string) => {this.initializeDatabaseTool(error, w)};\r\n\r\n        if (w.database == null) {\r\n            this.main.waitOverlay.show(\"Bitte warten, hole Datenbank vom Server ...\");\r\n\r\n            this.main.networkManager.fetchDatabase(w, callback);\r\n        } else {\r\n            callback(null);\r\n        }\r\n\r\n    }\r\n\r\n    initializeDatabaseTool(error: string, w: Workspace) {\r\n        if (error != null) {\r\n            alert(error);\r\n            return;\r\n        }\r\n\r\n        let dbTool = this.main.getDatabaseTool();\r\n\r\n        let statements: string[] = w.database.statements;\r\n        if (statements == null) statements = [];\r\n\r\n        dbTool.initializeWorker(w.database.templateDump, statements,\r\n            () => {\r\n                this.main.currentWorkspace = w;\r\n\r\n                if (this.main.user.id == w.owner_id) {\r\n                    this.main.user.currentWorkspace_id = w.id;\r\n                }\r\n\r\n                this.renderFiles(w);\r\n\r\n                if (w != null) {\r\n                    let nonSystemModules = w.moduleStore.getModules(false);\r\n\r\n                    if (w.currentlyOpenModule != null) {\r\n                        this.setModuleActive(w.currentlyOpenModule);\r\n                    } else if (nonSystemModules.length > 0) {\r\n                        this.setModuleActive(nonSystemModules[0]);\r\n                    } else {\r\n                        this.setModuleActive(null);\r\n                    }\r\n\r\n                    for (let m of nonSystemModules) {\r\n                        m.file.dirty = true;\r\n                    }\r\n\r\n                    if (nonSystemModules.length == 0) {\r\n\r\n                        Helper.showHelper(\"newSQLFileHelper\", this.main, this.fileListPanel.$captionElement);\r\n\r\n                    }\r\n\r\n                    this.main.notifier.connect(w);\r\n\r\n                } else {\r\n                    this.setModuleActive(null);\r\n                }\r\n\r\n            },\r\n            () => {\r\n                this.main.databaseExplorer.refreshAfterRetrievingDBStructure();\r\n                this.main.getHistoryViewer().clearAndShowStatements(w.database.statements);\r\n            });\r\n\r\n    }\r\n\r\n    writeEditorTextToFile() {\r\n        let cem = this.getCurrentlyEditedModule();\r\n        if (cem != null)\r\n            cem.file.text = cem.getProgramTextFromMonacoModel(); // 29.03. this.main.monaco.getValue();\r\n    }\r\n\r\n\r\n    lastOpenModule: Module = null;\r\n    setModuleActive(m: Module) {\r\n\r\n        this.main.bottomDiv.homeworkManager.hideRevision();\r\n\r\n        if (this.lastOpenModule != null) {\r\n            this.lastOpenModule.file.text = this.lastOpenModule.getProgramTextFromMonacoModel(); // this.main.monaco.getValue();\r\n            this.lastOpenModule.editorState = this.main.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (m == null) {\r\n            this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n        } else {\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.main.getMonacoEditor().setModel(m.model);\r\n            if (this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(m.bracketError);\r\n\r\n            if (m.file.text_before_revision != null) {\r\n                this.main.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n            } else {\r\n                this.main.bottomDiv.homeworkManager.hideHomeworkRevisionButton();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setActiveAfterExternalModelSet(m: Module) {\r\n        this.fileListPanel.select(m, false);\r\n\r\n        this.lastOpenModule = m;\r\n\r\n        if (m.editorState != null) {\r\n            this.main.editor.dontPushNextCursorMove++;\r\n            this.main.getMonacoEditor().restoreViewState(m.editorState);\r\n            this.main.editor.dontPushNextCursorMove--;\r\n        }\r\n\r\n        this.setCurrentlyEditedModule(m);\r\n\r\n        this.showProgramPointer();\r\n\r\n        setTimeout(() => {\r\n            if (!this.main.getMonacoEditor().getOptions().get(monaco.editor.EditorOption.readOnly)) {\r\n                this.main.getMonacoEditor().focus();\r\n            }\r\n        }, 300);\r\n\r\n    }\r\n\r\n\r\n    private showProgramPointer() {\r\n\r\n        if (this.programPointerModule == this.getCurrentlyEditedModule() && this.getCurrentlyEditedModule() != null) {\r\n            let position = this.programPointerPosition;\r\n            let range = {\r\n                startColumn: position.column, startLineNumber: position.line,\r\n                endColumn: position.column + position.length, endLineNumber: position.line\r\n            };\r\n\r\n            this.main.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n            this.programPointerDecoration = this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n                {\r\n                    range: range,\r\n                    options: {\r\n                        className: 'jo_revealProgramPointer', isWholeLine: true,\r\n                        overviewRuler: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.OverviewRulerLane.Center\r\n                        },\r\n                        minimap: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    range: range,\r\n                    options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n                }\r\n            ]);\r\n\r\n        }\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        // console statement execution:\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        let module = this.main.currentWorkspace.moduleStore.findModuleByFile(file);\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        this.programPointerModule = module;\r\n        this.programPointerPosition = position;\r\n\r\n        if (module != this.getCurrentlyEditedModule()) {\r\n            this.setModuleActive(module);\r\n        } else {\r\n            this.showProgramPointer();\r\n        }\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws == null) return null;\r\n\r\n        return ws.currentlyOpenModule;\r\n    }\r\n\r\n    setCurrentlyEditedModule(m: Module) {\r\n        if (m == null) return;\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws.currentlyOpenModule != m) {\r\n            ws.currentlyOpenModule = m;\r\n            ws.saved = false;\r\n            m.file.dirty = true;\r\n        }\r\n    }\r\n\r\n    setExplorerColor(color: string) {\r\n        let caption: string;\r\n\r\n        if (color == null) {\r\n            color = \"transparent\";\r\n            caption = \"Meine Datenbanken\";\r\n        } else {\r\n            caption = \"Schüler-DB\";\r\n        }\r\n\r\n        this.fileListPanel.$listElement.parent().css('background-color', color);\r\n        this.workspaceListPanel.$listElement.parent().css('background-color', color);\r\n\r\n        this.workspaceListPanel.setCaption(caption);\r\n    }\r\n\r\n    getNewModule(file: File): Module {\r\n        return new Module(file, this.main);\r\n    }\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class RightDiv {\r\n\r\n    isWholePage: boolean = false;\r\n\r\n    $tabs: JQuery<HTMLElement>;\r\n    $headings: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $rightDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$tabs = $rightDiv.find('.jo_tabs');\r\n        this.$headings = $rightDiv.find('.jo_tabheadings');\r\n        \r\n        let withClassDiagram = this.$headings.find('.jo_classDiagramTabHeading').length > 0;\r\n        let withObjectDiagram = this.$headings.find('.jo_objectDiagramTabHeading').length > 0;\r\n\r\n        let that = this;\r\n        let rightdiv_width: string = \"100%\";\r\n        $rightDiv.find('.jo_whole-window').on(\"click\", () => {\r\n\r\n            that.isWholePage = !that.isWholePage;\r\n            \r\n            let $wholeWindow = jQuery('.jo_whole-window');\r\n\r\n            if (!that.isWholePage) {\r\n                jQuery('#code').css('display', 'flex');\r\n                jQuery('#rightdiv').css('width', rightdiv_width);\r\n                // jQuery('#run').css('width', '');\r\n                $wholeWindow.removeClass('img_whole-window-back');\r\n                $wholeWindow.addClass('img_whole-window');\r\n                jQuery('#controls').insertAfter(jQuery('#view-mode'));\r\n                $wholeWindow.attr('title', 'Auf Fenstergröße vergrößern');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            } else {\r\n                jQuery('#code').css('display', 'none');\r\n                rightdiv_width = jQuery('#rightdiv').css('width');\r\n                jQuery('#rightdiv').css('width', '100%');\r\n                $wholeWindow.removeClass('img_whole-window');\r\n                $wholeWindow.addClass('img_whole-window-back');\r\n                // that.adjustWidthToWorld();\r\n                jQuery('.jo_control-container').append(jQuery('#controls'));\r\n                $wholeWindow.attr('title', 'Auf normale Größe zurückführen');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$rightDiv);\r\n    }\r\n\r\n\r\n\r\n}","import { jo_mouseDetected } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\nexport class Sliders {\r\n\r\n    main: Main;\r\n\r\n    constructor(main: Main) {\r\n        this.main = main;\r\n    }\r\n\r\n    initSliders() {\r\n        let that = this;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        jQuery('#slider1').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider1\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                \r\n                that.moveLeftPanel(dx);\r\n\r\n                x = mm.clientX;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider1\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider1\");\r\n                jQuery(document).off(mousePointer + \"up.slider1\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider2').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider2\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n\r\n                that.moveBottomDiv(dy);\r\n\r\n                y = mm.clientY;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider2\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider2\");\r\n                jQuery(document).off(mousePointer + \"up.slider2\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider3').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider3\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n\r\n                that.moveRightDiv(dx);\r\n\r\n                x = mm.clientX;\r\n                mm.stopPropagation();\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider3\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider3\");\r\n                jQuery(document).off(mousePointer + \"up.slider3\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        let sliderknobLeft = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"left: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobLeft);\r\n        sliderknobLeft.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopImmediatePropagation();\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobleft\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopImmediatePropagation();\r\n\r\n                that.moveLeftPanel(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobleft\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobleft\");\r\n                jQuery(document).off(mousePointer + \"up.knobleft\");\r\n            });\r\n\r\n        });\r\n\r\n        let sliderknobRight = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"right: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobRight);\r\n        sliderknobRight.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopImmediatePropagation();\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobright\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopImmediatePropagation();\r\n\r\n                that.moveRightDiv(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobright\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobright\");\r\n                jQuery(document).off(mousePointer + \"up.knobright\");\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n    \r\n    moveRightDiv(dx: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $rightDiv = jQuery('#rightdiv');\r\n\r\n        let width = Number.parseInt($rightDiv.css('width').replace('px', ''));\r\n        $rightDiv.css('width', (width - dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth + dx) + \"px\");\r\n        \r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n        jQuery('.jo_graphics').trigger('sizeChanged');\r\n        width += dx;\r\n}\r\n    moveBottomDiv(dy: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $bottomDiv = jQuery('#bottomdiv-outer');\r\n\r\n        let height = Number.parseInt($bottomDiv.css('height').replace('px', ''));\r\n        $bottomDiv.css('height', (height - dy) + \"px\");\r\n\r\n        let meheight = Number.parseInt($editor.css('height').replace('px', ''));\r\n        $editor.css('height', (meheight + dy) + \"px\");\r\n\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n}\r\n\r\n    moveLeftPanel(dx: number) {\r\n        let $leftPanel = jQuery('#leftpanel');\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n\r\n        let width = Number.parseInt($leftPanel.css('width').replace('px', ''));\r\n        $leftPanel.css('width', (width + dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth - dx) + \"px\");\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionPanel, AccordionElement } from \"./Accordion.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassData, UserData, CRUDUserRequest, CRUDClassRequest, GetWorkspacesResponse, GetWorkspacesRequest, Workspaces } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\nexport class TeacherExplorer {\r\n\r\n    studentPanel: AccordionPanel;\r\n    classPanel: AccordionPanel;\r\n\r\n    // save them here when displaying pupils workspaces:\r\n    ownWorkspaces: Workspace[];\r\n    currentOwnWorkspace: Workspace;\r\n\r\n    constructor(private main: Main, private classData: ClassData[]) {\r\n\r\n    }\r\n\r\n    removePanels() {\r\n        this.classPanel.remove();\r\n        this.studentPanel.remove();\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.initStudentPanel();\r\n\r\n        this.initClassPanel();\r\n\r\n        this.renderClasses(this.classData);\r\n\r\n    }\r\n\r\n    initStudentPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.studentPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Schüler/innen\", \"2\", null,\r\n            \"\", \"student\", false, false, \"student\", false, []);\r\n\r\n        this.studentPanel.selectCallback = (ae: UserData) => {\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let request: GetWorkspacesRequest = {\r\n                    ws_userId: ae.id,\r\n                    userId: this.main.user.id,\r\n                    language: 1\r\n                }\r\n\r\n                ajax(\"getWorkspaces\", request, (response: GetWorkspacesResponse) => {\r\n                    if (response.success == true) {\r\n\r\n                        if (that.main.workspacesOwnerId == that.main.user.id) {\r\n                            that.ownWorkspaces = that.main.workspaceList.slice();\r\n                            that.currentOwnWorkspace = that.main.currentWorkspace;\r\n                        }\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces);\r\n                        that.main.workspacesOwnerId = ae.id;\r\n                        that.main.projectExplorer.setExplorerColor(\"rgba(255, 0, 0, 0.2\");\r\n                        that.main.projectExplorer.$homeAction.show();\r\n                        Helper.showHelper(\"homeButtonHelper\", this.main);\r\n\r\n                        that.main.bottomDiv.showHomeworkTab();\r\n                        that.main.bottomDiv.homeworkManager.attachToWorkspaces(that.main.workspaceList);\r\n                    }\r\n\r\n                    this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n                    this.main.networkManager.secondsTillNextUpdate = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    restoreOwnWorkspaces() {\r\n        let main = this.main;\r\n\r\n        // main.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n        main.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        main.workspaceList = this.ownWorkspaces;\r\n        main.currentWorkspace = this.currentOwnWorkspace;\r\n        main.workspacesOwnerId = main.user.id;\r\n        main.projectExplorer.setExplorerColor(null);\r\n\r\n        main.projectExplorer.renderWorkspaces(main.workspaceList);\r\n\r\n        if (main.currentWorkspace == null && main.workspaceList.length > 0) {\r\n            main.currentWorkspace = main.workspaceList[0];\r\n        }\r\n\r\n        if (main.currentWorkspace != null) {\r\n            main.projectExplorer.setWorkspaceActive(main.currentWorkspace);\r\n        }\r\n\r\n        this.studentPanel.select(null, false);\r\n\r\n    }\r\n\r\n    initClassPanel() {\r\n        let that = this;\r\n\r\n        this.classPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Klassen\", \"1\", null, \"\", \"class\", false, false, \"class\", false, []);\r\n\r\n        this.classPanel.selectCallback = (ea) => {\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let classData = <ClassData>ea;\r\n                if (classData != null) {\r\n                    this.renderStudents(classData.students);\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    renderStudents(userDataList: UserData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        userDataList.sort((a, b) => {\r\n            if (a.familienname > b.familienname) return 1;\r\n            if (b.familienname > a.familienname) return -1;\r\n            if (a.rufname > b.rufname) return 1;\r\n            if (b.rufname > a.rufname) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let ud of userDataList) {\r\n            let ae: AccordionElement = {\r\n                name: ud.familienname + \", \" + ud.rufname,\r\n                sortName: ud.familienname + \" \" + ud.rufname,\r\n                externalElement: ud,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.studentPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n    renderClasses(classDataList: ClassData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        classDataList.sort((a, b) => {\r\n            if (a.name > b.name) return 1;\r\n            if (b.name > a.name) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let cd of classDataList) {\r\n            let ae: AccordionElement = {\r\n                name: cd.name,\r\n                externalElement: cd,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.classPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","export type DialogButton = {\r\n    caption: string,\r\n    color: string,\r\n    callback: () => void\r\n}\r\n\r\nexport class Dialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            '<div style=\"flex: 1\"></div>' +\r\n            '<div class=\"dialog-main\"></div>' +\r\n            '<div style=\"flex: 4\"></div>'\r\n        ));\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n    }\r\n\r\n    heading(text: string) {\r\n        let $div = jQuery('<div class=\"dialog-heading\">' + text + \"</div>\")\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    description(text: string, color?: string) {\r\n        let colorStyle = color == null ? \"\" : `style=\"color: ${color}\"`;\r\n        let $div = jQuery(`<div class=\"dialog-description\" ${colorStyle}>${text}</div>`)\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    input(type: string, placeholder: string):JQuery<HTMLInputElement> {\r\n        let $div = jQuery(`<input class=\"dialog-input\" type=\"${type}\" placeholder=\"${placeholder}\"></input>`)\r\n        this.$dialogMain.append($div);\r\n        return <any>$div;\r\n    }\r\n\r\n    buttons(buttons: DialogButton[]){\r\n\r\n        let $buttonRow = jQuery('<div class=\"dialog-buttonRow\"></div>')\r\n        this.$dialogMain.append($buttonRow);\r\n\r\n        for(let button of buttons){\r\n\r\n            let $button = jQuery(`<button style=\"background-color: ${button.color};margin-left: 20px\">${button.caption}</button>`)\r\n            $button.on(\"click\", () => {button.callback()})\r\n            $buttonRow.append($button);\r\n        }\r\n    }\r\n\r\n    waitMessage(text: string): (visible: boolean) => void {\r\n\r\n        let $message = jQuery(`<div class=\"dialog-wait\">${text}<img src=\"assets/projectexplorer/svg-loaders/ball-triangle.svg\"></div>`)\r\n        this.$dialogMain.append($message);\r\n\r\n        return (visible: boolean) => {\r\n            let visibility = visible ? \"visible\" : \"hidden\";\r\n            $message.css(\"visibility\", visibility);\r\n        }\r\n\r\n    }\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { openContextMenu, ContextMenuItem } from \"../../tools/HtmlTools.js\";\r\nimport { Dialog } from \"./Dialog.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\n\r\nexport class UserMenu {\r\n\r\n\r\n\r\n    constructor(private main: Main){\r\n        \r\n    }\r\n\r\n    init(){\r\n        let $userSettingsButton = jQuery('#buttonUserSettings');\r\n        let that = this;\r\n\r\n        $userSettingsButton.on(\"click\", (e) => {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [\r\n                {\r\n                    caption: \"Passwort ändern...\",\r\n                    callback: () => {\r\n                        let passwortChanger = new PasswordChanger(that.main);\r\n                        passwortChanger.show();\r\n                    }\r\n                }\r\n            ]\r\n\r\n\r\n            openContextMenu(contextMenuItems, $userSettingsButton.offset().left, $userSettingsButton.offset().top + $userSettingsButton.height());\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class PasswordChanger {\r\n\r\n    dialog: Dialog;\r\n\r\n    constructor(private main: Main){\r\n\r\n        this.dialog = new Dialog();\r\n\r\n    }\r\n\r\n    show() {\r\n        this.dialog.init();\r\n        this.dialog.heading(\"Passwort ändern\");\r\n        this.dialog.description(\"Bitte geben Sie Ihr bisheriges Passwort und darunter zweimal Ihr neues Passwort ein. <br>\" + \r\n        \"Das Passwort muss mindestens 8 Zeichen lang sein und sowohl Buchstaben als auch Zahlen oder Sonderzeichen enthalten.\")\r\n        let $oldPassword = this.dialog.input(\"password\", \"Altes Passwort\");\r\n        let $newPassword1 = this.dialog.input(\"password\", \"Neues Passwort\");\r\n        let $newPassword2 = this.dialog.input(\"password\", \"Neues Passwort wiederholen\");\r\n        let $errorDiv = this.dialog.description(\"\", \"red\");\r\n        let waitDiv = this.dialog.waitMessage(\"Bitte warten...\")\r\n\r\n        this.dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {this.dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    if($newPassword1.val() != $newPassword2.val()){\r\n                        $errorDiv.text(\"Die zwei eingegebenen neuen Passwörter stimmen nicht überein.\")\r\n                    } else {\r\n                        waitDiv(true);\r\n                        ajax(\"changePassword\", {oldPassword: $oldPassword.val(), newPassword: $newPassword1.val()}, () => {\r\n                            waitDiv(false);\r\n                            alert(\"Das Passwort wurde erfolgreich geändert.\");\r\n                            this.dialog.close();\r\n                        }, (message) => {\r\n                            waitDiv(false);\r\n                            $errorDiv.text(message)\r\n                        })\r\n                    }\r\n\r\n                }\r\n            },\r\n        ])\r\n    }\r\n\r\n}","import { ajax } from \"../communication/AjaxHelper.js\";\r\nimport { LoginRequest, LoginResponse, LogoutRequest, UserData } from \"../communication/Data.js\";\r\nimport { Main } from \"./Main.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { userInfo } from \"os\";\r\nimport { UserMenu } from \"./gui/UserMenu.js\";\r\nimport { escapeHtml } from \"../tools/StringTools.js\";\r\n\r\nexport class Login {\r\n\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        let that = this;\r\n\r\n        let $loginSpinner = jQuery('#login-spinner>img');\r\n\r\n        jQuery('#login-username').focus();\r\n\r\n        jQuery('#login-username').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-password').focus();\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-button').focus();\r\n                jQuery('#login-button').addClass('jo_active');\r\n            }\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-button').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-username').focus();\r\n                jQuery('#login-button').removeClass('jo_active');\r\n            } else {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        // Avoid double login when user does doubleclick:\r\n        let loginHappened = false;\r\n        jQuery('#login-button').on('click', () => {\r\n\r\n            $loginSpinner.show();\r\n\r\n            if (loginHappened) return;\r\n            loginHappened = true;\r\n\r\n            setTimeout(() => {\r\n                loginHappened = false;\r\n            }, 1000);\r\n\r\n            let loginRequest: LoginRequest = {\r\n                username: <string>jQuery('#login-username').val(),\r\n                password: <string>jQuery('#login-password').val(),\r\n                language: 1\r\n            }\r\n\r\n            ajax('login', loginRequest, (response: LoginResponse) => {\r\n\r\n                if (!response.success) {\r\n                    jQuery('#login-message').html('Fehler: Benutzername und/oder Passwort ist falsch.');\r\n                } else {\r\n\r\n                    // We don't do this anymore for security reasons - see AjaxHelper.ts\r\n                    // Alternatively we now set a long expiry interval for cookie.\r\n                    // credentials.username = loginRequest.username;\r\n                    // credentials.password = loginRequest.password;\r\n\r\n                    jQuery('#login').hide();\r\n\r\n                    this.main.waitOverlay.show('Bitte warten...');\r\n\r\n                    let user: UserData = response.user;\r\n                    if (user.settings == null || user.settings.helperHistory == null) {\r\n                        user.settings = {\r\n                            helperHistory: {\r\n                            },\r\n                            viewModes: null,\r\n                            classDiagram: null\r\n                        }\r\n                    }\r\n\r\n                    this.main.waitForGUICallback = () => {\r\n\r\n                        that.main.mainMenu.initGUI(user);\r\n\r\n                        that.main.waitOverlay.hide();\r\n                        $loginSpinner.hide();\r\n                        jQuery('#menupanel-username').html(escapeHtml(user.rufname) + \" \" + escapeHtml(user.familienname));\r\n\r\n                        new UserMenu(that.main).init();\r\n\r\n                        if (user.is_teacher) {\r\n                            that.main.initTeacherExplorer(response.classdata);\r\n                        }\r\n\r\n                        that.main.user = user;\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces);\r\n                        that.main.workspacesOwnerId = user.id;\r\n\r\n                        that.main.networkManager.initializeTimer();\r\n\r\n                        that.main.projectExplorer.fileListPanel.setFixed(!user.is_teacher);\r\n                        that.main.projectExplorer.workspaceListPanel.setFixed(!user.is_teacher);\r\n\r\n                        that.main.viewModeController.initViewMode();\r\n                        that.main.bottomDiv.hideHomeworkTab();\r\n\r\n                    }\r\n\r\n                    if (this.main.startupComplete == 0) {\r\n                        this.main.waitForGUICallback();\r\n                        this.main.waitForGUICallback = null;\r\n                    }\r\n\r\n                }\r\n\r\n            }, (errorMessage: string) => {\r\n                jQuery('#login-message').html('Login gescheitert: ' + errorMessage);\r\n            }\r\n            );\r\n\r\n        });\r\n\r\n        jQuery('#buttonLogout').on('click', () => {\r\n\r\n            this.main.waitOverlay.show('Bitte warten, der letzte Bearbeitungsstand wird noch gespeichert ...');\r\n\r\n            if (this.main.workspacesOwnerId != this.main.user.id) {\r\n                this.main.projectExplorer.onHomeButtonClicked();\r\n            }\r\n\r\n            this.main.networkManager.sendUpdates(() => {\r\n\r\n                let logoutRequest: LogoutRequest = {\r\n                    currentWorkspaceId: this.main.currentWorkspace?.id\r\n                }\r\n\r\n                ajax('logout', logoutRequest, () => {\r\n                    // window.location.href = 'index.html';\r\n                    this.main.networkManager.sendUpdateUserSettings(() => {});\r\n\r\n                    jQuery('#login').show();\r\n                    this.main.waitOverlay.hide();\r\n                    jQuery('#login-message').empty();\r\n                    this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"\", \"myJava\"));\r\n                    this.main.projectExplorer.fileListPanel.clear();\r\n                    this.main.projectExplorer.workspaceListPanel.clear();\r\n\r\n                    this.main.databaseExplorer.clear();\r\n                    this.main.resultsetPresenter.clear();\r\n\r\n                    if (this.main.user.is_teacher) {\r\n                        this.main.teacherExplorer.removePanels();\r\n                        this.main.teacherExplorer = null;\r\n                    }\r\n\r\n\r\n                    this.main.currentWorkspace = null;\r\n                    this.main.user = null;\r\n\r\n\r\n                });\r\n            });\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\nimport { ViewModes, ViewMode } from \"../../communication/Data\";\r\n\r\nexport class ViewModeController {\r\n\r\n    $buttonEditorFullscreen: JQuery<HTMLElement>;\r\n    $buttonPresentationMode: JQuery<HTMLElement>;\r\n    $buttonMonitorMode: JQuery<HTMLElement>;\r\n\r\n    $buttonMap: { [key: string]: JQuery<HTMLElement> } = {};\r\n\r\n    highContrast: boolean = false;\r\n    editorHasFullWidth: boolean = false;\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private main: Main) {\r\n\r\n        this.$buttonEditorFullscreen = jQuery('<div title=\"Editor in voller Breite\" class=\"img_whole-window jo_button jo_active\" style=\"padding: 1px; margin-right: 20px\"></div>');\r\n        this.$buttonPresentationMode = jQuery('<div title=\"Präsentation (Beamer)\" class=\"img_presentation-mode jo_button jo_active\" syle=\"padding: 1px\"></div>');\r\n        this.$buttonMonitorMode = jQuery('<div title=\"Monitor\" class=\"img_monitor-mode jo_button jo_active\" style=\"margin-left: 5px; padding: 1px\"></div>');\r\n        $buttonsContainer.append(this.$buttonEditorFullscreen, this.$buttonPresentationMode, this.$buttonMonitorMode);\r\n\r\n        this.$buttonMap = {\r\n            \"presentation\": this.$buttonPresentationMode,\r\n            \"monitor\": this.$buttonMonitorMode\r\n        };\r\n\r\n        let am = this.main.actionManager;\r\n\r\n        am.registerAction(\"editor.fullwidth\", [],\r\n            () => {\r\n                this.toggleEditorFullwidth();\r\n            }, \"Editor auf die volle Breite erweitern\", this.$buttonEditorFullscreen);\r\n\r\n        am.registerAction(\"viewmode.presentation\", [],\r\n            () => {\r\n                this.setMode(\"presentation\");\r\n            }, \"Präsentationsansicht\", this.$buttonPresentationMode);\r\n\r\n        am.registerAction(\"viewmode.monitor\", [],\r\n            () => {\r\n                this.setMode(\"monitor\");\r\n            }, \"Monitoransicht\", this.$buttonMonitorMode);\r\n\r\n    }\r\n\r\n    toggleEditorFullwidth() {\r\n        if(this.editorHasFullWidth){\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in voller Breite');\r\n            jQuery('#rightdiv').show(600);\r\n            jQuery('#leftpanel').show(600);\r\n            jQuery('#controls').show();\r\n        } else {\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in normaler Breite');\r\n            jQuery('#rightdiv').hide(600);\r\n            jQuery('#leftpanel').hide(600);\r\n            jQuery('#controls').hide();\r\n        }\r\n\r\n        setTimeout(()=>{\r\n            this.main.getMonacoEditor().layout();\r\n        }, 800);\r\n\r\n        this.editorHasFullWidth = !this.editorHasFullWidth;\r\n    }\r\n\r\n    setMode(mode: \"presentation\" | \"monitor\", saveSettings: boolean = true) {\r\n\r\n        let otherMode = mode == \"presentation\" ? \"monitor\" : \"presentation\";\r\n\r\n        this.$buttonMap[mode].addClass(\"jo_pressed\");\r\n        this.$buttonMap[otherMode].removeClass(\"jo_pressed\");\r\n\r\n        let settings = this.main.user.settings;\r\n        let viewModes = settings.viewModes;\r\n\r\n        let viewMode = viewModes[mode];\r\n        viewModes.viewModeChosen = mode;\r\n\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n\r\n        this.main.editor.setFontSize(viewMode.fontSize);\r\n\r\n        if (this.highContrast != viewMode.highContrast) {\r\n            let editor = this.main.getMonacoEditor();\r\n            editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n            this.highContrast = !this.highContrast;\r\n        }\r\n\r\n        if (saveSettings) this.saveSettings();\r\n\r\n    }\r\n\r\n    saveFontSize(fontSizePx: number) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.fontSize = fontSizePx;\r\n        this.saveSettings();\r\n    }\r\n\r\n    setTheme(theme: string) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.theme = theme;\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n        this.saveSettings();\r\n    }\r\n\r\n    toggleHighContrast() {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.highContrast = !viewMode.highContrast;\r\n        let editor = this.main.getMonacoEditor();\r\n        editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n        this.saveSettings();\r\n    }\r\n\r\n    getChosenViewMode(): ViewMode {\r\n        let viewModes = this.main.user.settings.viewModes;\r\n        return viewModes[viewModes.viewModeChosen];\r\n    }\r\n\r\n    saveSettings() {\r\n        this.main.userDataDirty = true;\r\n    }\r\n\r\n    initViewMode() {\r\n        let settings = this.main.user.settings;\r\n\r\n        if (settings[\"viewModes\"] == null) {\r\n            settings[\"viewModes\"] = {\r\n                monitor: null,\r\n                presentation: null,\r\n                viewModeChosen: \"monitor\"\r\n            }\r\n        }\r\n\r\n        if (settings.viewModes.monitor == null) {\r\n            settings.viewModes.monitor = {\r\n                fontSize: 14,\r\n                highContrast: false,\r\n                theme: \"dark\"\r\n            };\r\n\r\n            settings.viewModes.presentation = {\r\n                fontSize: 18,\r\n                highContrast: false,\r\n                theme: \"light\"\r\n            }\r\n            this.saveSettings();\r\n        }\r\n        this.setMode(settings.viewModes.viewModeChosen, false);\r\n    }\r\n\r\n\r\n}","import { Main } from \"../../main/Main.js\";\r\nimport { TextPosition } from \"../lexer/Token\";\r\nimport { Module } from \"./Module\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype SemicolonPosition = {\r\n    position: TextPosition;\r\n    module: Module;\r\n    firstSeenMs: number;\r\n    isThereAgain: boolean;\r\n}\r\n\r\nexport class SemicolonAngel {\r\n    \r\n    semicolonPositions: SemicolonPosition[] = [];\r\n    time: number;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    startRegistering(){\r\n        this.semicolonPositions.forEach(p => p.isThereAgain = false);\r\n        this.time = new Date().getTime();\r\n    }\r\n\r\n    register(position: TextPosition, module: Module){\r\n        let oldEvidence = this.semicolonPositions.find(p => p.position.line == position.line && p.position.column == position.column);\r\n        if(oldEvidence){\r\n            oldEvidence.isThereAgain = true;\r\n        } else {\r\n            this.semicolonPositions.push({position: position, firstSeenMs: this.time, isThereAgain: true, module: module});\r\n        }\r\n    }\r\n\r\n    healSemicolons(){\r\n        let time = new Date().getTime();\r\n        this.semicolonPositions = this.semicolonPositions.filter(p => p.isThereAgain);\r\n\r\n        let currentlyEditedModule = this.main.getCurrentlyEditedModule();\r\n        let cursorLine = this.main.getMonacoEditor().getPosition().lineNumber;\r\n\r\n        this.semicolonPositions.filter(p => time - p.firstSeenMs > 2000).forEach(p => {\r\n\r\n            let isCurrentModule = p.module.file.id != null && p.module.file.id == currentlyEditedModule.file.id;\r\n\r\n            let editOperations: monaco.editor.IIdentifiedSingleEditOperation[] = [\r\n                {\r\n                    range: new monaco.Range(p.position.line, p.position.column, p.position.line, p.position.column),\r\n                    text: \";\",\r\n                    forceMoveMarkers: true\r\n                }\r\n            ]\r\n\r\n            if(isCurrentModule){\r\n                if(Math.abs(cursorLine - p.position.line) > 1){\r\n                    let editor = this.main.getMonacoEditor();\r\n                    const selection = editor.getSelection();\r\n                    editor.executeEdits('Semicolon-Angel', editOperations);\r\n                    editor.setSelection(selection);\r\n                    this.semicolonPositions.splice(this.semicolonPositions.indexOf(p), 1);\r\n                }\r\n            } \r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\r\nimport { Table, Column } from \"../../compiler/parser/SQLTable.js\";\r\nimport { DatabaseStructure } from \"../../tools/DatabaseTools.js\";\r\n\r\nexport class DatabaseExplorer {\r\n\r\n    collapsedTables: Map<string, boolean> = new Map();\r\n\r\n    constructor(private main: MainBase, public $mainDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    refresh() {\r\n\r\n        let dbTool = this.main.getDatabaseTool();\r\n\r\n        dbTool.retrieveDatabaseStructure((dbstructure: DatabaseStructure) => {\r\n\r\n            this.refreshAfterRetrievingDBStructure();\r\n        });\r\n\r\n    }\r\n\r\n    clear(){\r\n        this.$mainDiv.empty();\r\n    }\r\n\r\n    refreshAfterRetrievingDBStructure() {\r\n        let dbTool = this.main.getDatabaseTool();\r\n        let workspace = this.main.getCurrentWorkspace();\r\n        if (workspace != null) {\r\n            for (let m of workspace.moduleStore.getModules(false)) {\r\n                m.file.dirty = true;\r\n            }\r\n        }\r\n\r\n        let tables = Table.fromTableStructureList(dbTool.databaseStructure.tables);\r\n\r\n        this.$mainDiv.empty();\r\n\r\n        for (let table of tables) {\r\n            if(table.identifier != \"sqlite_sequence\"){\r\n                let $table = this.renderTable(table);\r\n                this.$mainDiv.append($table);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    renderTable(table: Table): JQuery<HTMLElement> {\r\n        let isCollapsed = this.collapsedTables.get(table.identifier) != null;\r\n\r\n        let $table = jQuery(\r\n            `<div class=\"jo_table\">\r\n           <div class=\"jo_tableheader\">\r\n              <div class=\"${isCollapsed ? 'img_tree-collapsed-dark' : 'img_tree-expanded-dark'} jo_treeswitch jo_button jo_active\"></div>\r\n              <div class=\"jo_tableheaderlink\">\r\n                <div class=\"img_table\"></div>\r\n                <div>${table.identifier}</div><div style=\"flex: 1\"></div><div class=\"jo_tablesize\">(${table.size} Datensätze)</div>\r\n              </div>\r\n            </div>\r\n        </div>`);\r\n\r\n        $table.find('.jo_tableheader').on('pointerdown', () => {\r\n            this.main.getResultsetPresenter().showTable(table.identifier);\r\n\r\n        })\r\n\r\n        let $columns = jQuery('<div class=\"jo_columnlist\"></div>')\r\n\r\n        for (let column of table.columns) {\r\n            let image = column.isPrimaryKey ? \"img_key\" : \"img_column\";\r\n\r\n            let referencesHtml = \"\";\r\n            if (column.references != null) {\r\n                referencesHtml = `<div class=\"img_foreign_key\" style=\"margin-left: 5px\"></div><div class=\"jo_references\">${column.references.table.identifier}.${column.references.identifier}</div>`\r\n            }\r\n\r\n            let type = column.type == null ? \"\" : column.type.toString();\r\n            let notNull: string = column.notNull ? '<div class=\"jo_dbnotnull\">not null</div>' : \"\";\r\n            let defaultValue: string = column.defaultValue ? `<div class=\"jo_dbdefault\">default ${column.defaultValue}</div>` : \"\";\r\n            let autoincrement: string = column.isAutoIncrement ? `<div class=\"jo_dbautoincrement\">autoincrement</div>` : \"\";\r\n\r\n            let $column = jQuery(`\r\n            <div class=\"jo_column\">\r\n                <div class=\"${image}\"></div>\r\n                <div>${column.identifier}</div>\r\n                <div class=\"jo_dbtype\">${type}</div>\r\n                ${autoincrement}\r\n                ${referencesHtml}\r\n                ${notNull}\r\n                ${defaultValue}\r\n            </div>\r\n            `);\r\n            $columns.append($column);\r\n        }\r\n\r\n        $table.append($columns);\r\n\r\n        let $treeSwitch = $table.find('.jo_treeswitch');\r\n        let that = this;\r\n        $treeSwitch.on('click', () => {\r\n            let collapsed = $treeSwitch.hasClass('img_tree-collapsed-dark');\r\n            if (collapsed) {\r\n                $treeSwitch.removeClass('img_tree-collapsed-dark');\r\n                $treeSwitch.addClass('img_tree-expanded-dark');\r\n                $columns.slideDown(300);\r\n                that.collapsedTables.delete(table.identifier);\r\n            } else {\r\n                $treeSwitch.removeClass('img_tree-expanded-dark');\r\n                $treeSwitch.addClass('img_tree-collapsed-dark');\r\n                $columns.slideUp(300);\r\n                that.collapsedTables.set(table.identifier, true);\r\n            }\r\n        });\r\n\r\n        return $table;\r\n    }\r\n\r\n\r\n\r\n}","// <div id=\"controls\">\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n// </div>\r\n\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { ResultsetPresenter } from \"./ResultsetPresenter.js\";\r\n\r\n\r\nexport class ProgramControlButtons {\r\n\r\n    $buttonStart: JQuery<HTMLElement>;\r\n    // $buttonPause: JQuery<HTMLElement>;\r\n    // $buttonStop: JQuery<HTMLElement>;\r\n    // $buttonStepOver: JQuery<HTMLElement>;\r\n    // $buttonStepInto: JQuery<HTMLElement>;\r\n    // $buttonStepOut: JQuery<HTMLElement>;\r\n    // $buttonRestart: JQuery<HTMLElement>;\r\n\r\n    // $buttonEdit: JQuery<HTMLElement>;\r\n\r\n\r\n    constructor(private main: MainBase, private $buttonsContainer: JQuery<HTMLElement>) {\r\n\r\n        this.$buttonStart = jQuery('<div title=\"Start\" class=\"img_start-dark jo_button\"></div>');\r\n        let am = this.main.getActionManager();\r\n\r\n        am.registerAction(\"execute\", ['Strg + Enter'],\r\n            () => {\r\n                if (am.isActive(\"execute\")) {\r\n\r\n                    this.main.getResultsetPresenter().executeSelectedStatements();\r\n                }\r\n\r\n            }, \"SQL-Statement ausführen\", this.$buttonStart\r\n        );\r\n\r\n        am.setActive('execute',false);\r\n\r\n        // this.$buttonPause = jQuery('<div title=\"Pause\" class=\"img_pause-dark jo_button\"></div>');\r\n        // this.$buttonStop = jQuery('<div title=\"Stop\" class=\"img_stop-dark jo_button\"></div>');\r\n        // this.$buttonStepOver = jQuery('<div title=\"Step over\" class=\"img_step-over-dark jo_button\"></div>');\r\n        // this.$buttonStepInto = jQuery('<div title=\"Step into\" class=\"img_step-into-dark jo_button\"></div>');\r\n        // this.$buttonStepOut = jQuery('<div title=\"Step out\" class=\"img_step-out-dark jo_button\"></div>');\r\n        // this.$buttonRestart = jQuery('<div title=\"Restart\" class=\"img_restart-dark jo_button\"></div>');\r\n\r\n        // this.$buttonEdit = jQuery('<div class=\"jo_editButton\" title=\"Programm anhalten damit der Programmtext bearbeitbar wird\"></div>')\r\n        // $editorContainer.append(this.$buttonEdit);\r\n\r\n        $buttonsContainer.append(this.$buttonStart\r\n            // , this.$buttonPause, this.$buttonStop,\r\n            // this.$buttonStepOver, this.$buttonStepInto, this.$buttonStepOut, this.$buttonRestart\r\n        );\r\n\r\n        // <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n        // <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n        // <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n        // <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n        // <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n        // <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n        // <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n        // <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n\r\n\r\n\r\n    }\r\n\r\n}","import { TokenType } from \"../lexer/Token.js\";\r\nimport { ASTNode, ConstantNode, CreateTableColumnNode, CreateTableNode, ForeignKeyInfo, InsertNode } from \"./AST.js\";\r\nimport { SQLStatement } from \"./Parser.js\";\r\n\r\nexport class StatementCleaner {\r\n\r\n    clean(statement: SQLStatement): string {\r\n        switch(statement.ast.type){\r\n            case TokenType.keywordCreate:   // Create Table statement\r\n                statement.sqlCleaned = this.cleanCreateTableStatement(statement.ast);\r\n                return statement.sqlCleaned;\r\n            case TokenType.keywordInsert:\r\n                statement.sqlCleaned = this.cleanInsertStatement(statement.ast);\r\n                return statement.sqlCleaned;\r\n            default:\r\n                return statement.sql;\r\n                break;\r\n        }\r\n    }\r\n\r\n    cleanInsertStatement(ast: InsertNode): string {\r\n        let st: string = `insert into ${ast.table.identifier}`;\r\n\r\n        if(ast.columnList != null && ast.columnList.length > 0){\r\n            st += `(${ast.columnList.map(c => c.identifier).join(\", \")})`;\r\n        }\r\n\r\n        if(ast.values != null && ast.values.length > 0){\r\n            st += '\\nvalues';\r\n            let lines: string[] = [];\r\n            for(let vline of ast.values){\r\n                lines.push(`\\n(${vline.map(v => this.cleanValue(v)).join(\", \")})`);\r\n            }\r\n            st += lines.join(\", \");\r\n        }\r\n\r\n        return st + \";\";\r\n    }\r\n\r\n    cleanValue(v: ConstantNode){\r\n        if(v.constantType == TokenType.stringConstant){\r\n            let s: string = v.constant;\r\n            s = s.replace(/'/g, \"''\");\r\n            return `'${s}'`;\r\n        }else {\r\n            return v.constant;\r\n        }\r\n    }\r\n\r\n    cleanCreateTableStatement(ast: CreateTableNode): string {\r\n        let st: string = `create table ${ast.identifier}(\\n   `;\r\n\r\n        st += ast.columnList.map( column => this.cleanColumnDef(column)).join(\",\\n   \");\r\n        if(ast.foreignKeyInfoList != null && ast.foreignKeyInfoList.length > 0){\r\n            st += \",\\n\" + ast.foreignKeyInfoList.map(fki => this.cleanForeignKeyInfo(fki)).join(\",\\n   \");\r\n        }\r\n        if(ast.combinedPrimaryKeyColumns!= null && ast.combinedPrimaryKeyColumns.length > 0){\r\n            st += `,\\nprimary key(${ast.combinedPrimaryKeyColumns.join(\", \")})`;\r\n        }\r\n        st += '\\n);';\r\n\r\n        return st;\r\n    }\r\n\r\n    cleanForeignKeyInfo(fki: ForeignKeyInfo): string {\r\n        return `${fki.column} references ${fki.referencesTable}(${fki.referencesColumn})`;\r\n    }\r\n\r\n    cleanColumnDef(column: CreateTableColumnNode):string {\r\n\r\n        let type = column.baseType.toString();\r\n        if(type == \"int\" && column.isAutoIncrement){\r\n            type = \"integer\";\r\n        }\r\n\r\n        let st: string = `${column.identifier} ${type}`;\r\n        if(column.parameters != null && column.parameters.length > 0){\r\n            st += `(${column.parameters.join(\", \")})`;\r\n        }\r\n        if(column.notNull){\r\n            st += \" not null\";\r\n        }\r\n        if(column.defaultValue != null){\r\n            st += \" default \" + column.defaultValue;\r\n        }\r\n        if(column.isPrimary){\r\n            st += \" primary key\";\r\n        }\r\n        if(column.isAutoIncrement){\r\n            st += \" autoincrement\";\r\n        }\r\n        if(column.referencesColumn != null){\r\n            let c: string = column.referencesColumn;\r\n            if(column.referencesTable) c = column.referencesTable + \"(\" + c + \")\";\r\n            st += \" references \" + c;\r\n        }\r\n        if(column.collate != null){\r\n            let collate = column.collate.toLocaleLowerCase();\r\n            if([\"binary\", \"nocase\", \"rtrim\"].indexOf(collate) >= 0){\r\n                st += \" collate \" + collate;\r\n            }\r\n        }\r\n        let parameters = column.parameters? column.parameters : [0, 0];\r\n        let checkFunction = column.baseType.checkFunction(column.identifier, parameters);\r\n        if(checkFunction != \"\"){\r\n            st += \" \" + checkFunction;\r\n        }\r\n        return st;\r\n    }\r\n\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { SQLStatement } from \"../../compiler/parser/Parser.js\";\r\nimport { StatementCleaner } from \"../../compiler/parser/StatementCleaner.js\";\r\nimport { QueryResult } from \"../../tools/DatabaseTools.js\";\r\nimport { WDatabase } from \"../../workspace/WDatabase.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\ntype RuntimeError = {\r\n    statement: SQLStatement,\r\n    message: string\r\n}\r\n\r\nexport interface WriteQueryListener {\r\n    notify(statements: SQLStatement[]): void;\r\n}\r\n\r\nexport class ResultsetPresenter {\r\n\r\n    $paginationDiv: JQuery<HTMLDivElement>;\r\n    $infoDiv: JQuery<HTMLDivElement>;\r\n    $arrowLeft: JQuery<HTMLDivElement>;\r\n    $arrowRight: JQuery<HTMLDivElement>;\r\n\r\n    paginationFrom: number;\r\n    paginationAll: number;\r\n\r\n    paginationSize: number = 1000;\r\n\r\n    result: QueryResult;\r\n\r\n    writeQueryListeners: WriteQueryListener[] = [];\r\n\r\n    public static StatementDelimiter: string = \";\\n\\n\"\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$paginationDiv = jQuery('.jo_pagination');\r\n        this.$arrowLeft = jQuery('<div class=\"jo_button img_arrow-left-dark jo_active\"></div>');\r\n        this.$infoDiv = jQuery('<div class=\"jo_pagination_info\"><span class=\"jo_pagination_fromto\">0001 - 1000</span> von <span class=\"jo_pagination_all\">5000</span></div>');\r\n        this.$arrowRight = jQuery('<div class=\"jo_button img_arrow-right-dark jo_active\"></div>');\r\n\r\n        this.$paginationDiv.append(this.$arrowLeft, this.$infoDiv, this.$arrowRight);\r\n\r\n        this.$paginationDiv.hide();\r\n\r\n        let mousePointer = (window.PointerEvent ? \"pointer\" : \"mouse\") + 'up';\r\n\r\n        let that = this;\r\n        this.$arrowLeft.on(mousePointer, (e) => {\r\n            if (that.paginationFrom > 1) {\r\n                that.paginationFrom = Math.max(that.paginationFrom - that.paginationSize, 1);\r\n                if (that.paginationFrom % 1000 != 1) {\r\n                    that.paginationFrom = (Math.floor(that.paginationFrom / that.paginationSize) + 1) * that.paginationSize + 1;\r\n                }\r\n                that.showResults();\r\n                that.activateButtons();\r\n            }\r\n        })\r\n\r\n        this.$arrowRight.on(mousePointer, (e) => {\r\n            if (that.paginationFrom < this.paginationAll - that.paginationSize + 1) {\r\n                that.paginationFrom = Math.min(that.paginationFrom + that.paginationSize, that.paginationAll - that.paginationSize + 1);\r\n                that.showResults();\r\n                that.activateButtons();\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    public addWriteQueryListener(listener: WriteQueryListener) {\r\n        this.writeQueryListeners.push(listener);\r\n    }\r\n\r\n    private activateButtons() {\r\n        this.$arrowLeft.toggleClass('jo_active', this.paginationFrom > 1);\r\n        this.$arrowRight.toggleClass('jo_active', this.paginationFrom < this.paginationAll - this.paginationSize + 1);\r\n    }\r\n\r\n    executeSelectedStatements() {\r\n\r\n        let statements = this.fetchSelectedStatements();\r\n        if (statements.length == 0) return;\r\n\r\n        let hasDDLStatements: boolean = statements.some(st => this.isDDLStatement(st));\r\n        let hasWriteStatements: boolean = statements.some(st => this.isWriteStatement(st));\r\n        let workspace = this.main.getCurrentWorkspace();\r\n        let database = workspace.database;\r\n\r\n        if (hasDDLStatements && workspace.permissions <= 2) {\r\n            alert(\"Der Benutzer hat keine Berechtigung zum Ändern der Tabellenstruktur.\");\r\n            return;\r\n        }\r\n\r\n        if (hasWriteStatements && workspace.permissions <= 1) {\r\n            alert(\"Der Benutzer hat keine Berechtigung zum Einfügen/Löschen/Ändern von Datensätzen.\");\r\n            return;\r\n        }\r\n\r\n        if (hasDDLStatements || hasWriteStatements) {\r\n            if (this.main.isEmbedded()) {\r\n                this.executeDDLWriteStatementsEmbedded(workspace, statements, database);\r\n\r\n            } else {\r\n                this.executeDDLWriteStatementsInOnlineIDE(workspace, statements, database);\r\n            }\r\n\r\n        } else {\r\n            this.executeStatements(statements, 0, [], () => { });\r\n        }\r\n\r\n    }\r\n\r\n    executeDDLWriteStatementsEmbedded(workspace: Workspace, statements: SQLStatement[], database: WDatabase) {\r\n        let sucessfullyExecutedModifyingStatements: SQLStatement[] = [];\r\n        this.executeStatements(statements, 0, sucessfullyExecutedModifyingStatements, () => {\r\n\r\n            if (sucessfullyExecutedModifyingStatements.length == 0)\r\n                return;\r\n\r\n            this.main.getDatabaseExplorer().refresh();\r\n\r\n            this.writeQueryListeners.forEach(listener => listener.notify(sucessfullyExecutedModifyingStatements))\r\n        })\r\n    }\r\n\r\n    private executeDDLWriteStatementsInOnlineIDE(workspace: Workspace, statements: SQLStatement[], database: WDatabase) {\r\n        let main: Main = <Main>this.main;\r\n        // Step 1: Update Database to newest version to avoid potential database reset\r\n        main.networkManager.getNewStatements(workspace, (new_statements, firstStatementIndex) => {\r\n\r\n            main.notifier.executeNewStatements(new_statements, firstStatementIndex, () => { },\r\n                () => {\r\n                    // Step 2: Execute new statements to see which are successful\r\n                    let sucessfullyExecutedModifyingStatements: SQLStatement[] = [];\r\n                    this.executeStatements(statements, 0, sucessfullyExecutedModifyingStatements, () => {\r\n\r\n                        if (sucessfullyExecutedModifyingStatements.length == 0)\r\n                            return;\r\n\r\n                        // Step 3: Send successful statements to server in order to retrieve new db-version-number\r\n                        main.networkManager.AddDatabaseStatements(workspace, sucessfullyExecutedModifyingStatements.map(st => st.sqlCleaned == null ? st.sql : st.sqlCleaned), (statements_before, new_version) => {\r\n\r\n                            // Step 4: If another user sent statements between steps 1 and 3 then they are in array statements_before.\r\n                            // Add all new statements to local statement list\r\n                            statements_before.forEach(st => database.statements.push(st));\r\n                            this.main.getHistoryViewer().appendStatements(statements_before);\r\n                            let modifyingStatements = sucessfullyExecutedModifyingStatements.map(st => st.sqlCleaned == null ? st.sql : st.sqlCleaned)\r\n                            database.statements = database.statements.concat(modifyingStatements);\r\n                            this.main.getHistoryViewer().appendStatements(modifyingStatements);\r\n                            database.version = new_version;\r\n\r\n                            // Step 5 (worst case): statements before is not empty, so the should be executed before the statements executed in step 2\r\n                            // => clear whole database and execute all statements in the right order, beginning with a empty database.\r\n                            if (statements_before.length > 0) {\r\n\r\n                                this.resetDatabase(database);\r\n\r\n                            } else {\r\n\r\n                                main.getDatabaseExplorer().refresh();\r\n\r\n                            }\r\n\r\n                        });\r\n                    });\r\n                }, false);\r\n        });\r\n    }\r\n\r\n    resetDatabase(database: WDatabase) {\r\n        this.main.getDatabaseTool().initializeWorker(database.templateDump, database.statements, () => {\r\n            this.main.getDatabaseExplorer().refresh();\r\n        })\r\n    }\r\n\r\n    executeStatementsString(statements: string[], fromIndex: number, callback: () => void) {\r\n        if (statements.length == 0) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (fromIndex < statements.length) {\r\n            this.main.getDatabaseTool().executeQuery(statements[fromIndex],\r\n                (results) => { this.executeStatementsString(statements, fromIndex + 1, callback) },\r\n                (error) => { console.log(\"Error when executing statement \" + statements[fromIndex] + \"\\nError : \" + error); this.executeStatementsString(statements, fromIndex + 1, callback) });\r\n        } else {\r\n            callback();\r\n        }\r\n    }\r\n\r\n\r\n    executeStatements(statements: SQLStatement[], index: number, successfullyExecutedModifyingStatements: SQLStatement[], callback: () => void, errors: RuntimeError[] = []) {\r\n\r\n        if (index >= statements.length) {\r\n            this.showErrors(errors);\r\n\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        let statement = statements[index];\r\n\r\n\r\n        let callback1 = () => {\r\n            this.executeStatements(statements, index + 1, successfullyExecutedModifyingStatements, callback, errors);\r\n        }\r\n\r\n        if (statement.ast == null) {\r\n            callback1();\r\n            return;\r\n        }\r\n\r\n        if (statement.ast.type == TokenType.keywordSelect) {\r\n            let laterSelectExists: boolean = false;\r\n            for (let j = index + 1; j < statements.length; j++) laterSelectExists = laterSelectExists || this.isSelectStatement(statements[j]);\r\n            if (laterSelectExists) {\r\n                callback1();\r\n            } else {\r\n                if (statement.ast.limitNode == null) {\r\n                    statement.sql.trimRight();\r\n                    while (statement.sql.endsWith(\";\") || statement.sql.endsWith(\"\\n\") || statement.sql.endsWith(\"\\r\")) {\r\n                        statement.sql = statement.sql.substring(0, statement.sql.length - 1);\r\n                        statement.sql.trimRight();\r\n                    }\r\n                    statement.sql += \" limit 100000\";\r\n                }\r\n                this.main.getDatabaseTool().executeQuery(statement.sql,\r\n                    (results) => { this.presentResultsIntern(statement.sql, results); callback1(); },\r\n                    (error) => { errors.push({ statement: statement, message: error }); callback1(); });\r\n            }\r\n        } else {\r\n            let sql = new StatementCleaner().clean(statement);\r\n            console.log(sql);\r\n            this.main.getDatabaseTool().executeQuery(sql, (results) => { successfullyExecutedModifyingStatements.push(statement); callback1(); }, (error) => { errors.push({ statement: statement, message: error }); callback1(); });\r\n        }\r\n\r\n    }\r\n\r\n    oldErrorDecorations: string[] = [];\r\n    showErrorDecorations(errors: RuntimeError[]) {\r\n\r\n        let minimapColors = {\r\n            \"error\": \"#bc1616\",\r\n            \"warning\": \"#cca700\",\r\n            \"info\": \"#75beff\"\r\n        }\r\n\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        let markers: monaco.editor.IMarkerData[] = [];\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n        for (let error of errors) {\r\n            let errorlevel = \"error\";\r\n\r\n            let linesDecorationsClassName: string;\r\n            let borderLeftClass: string;\r\n            let minimapColor: string = minimapColors[errorlevel];\r\n\r\n            switch (errorlevel) {\r\n                case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n            }\r\n\r\n            let severity: monaco.MarkerSeverity;\r\n            switch (errorlevel) {\r\n                case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n            }\r\n\r\n            markers.push({\r\n                startLineNumber: error.statement.from.line,\r\n                startColumn: error.statement.from.column,\r\n                endLineNumber: error.statement.to.line,\r\n                endColumn: error.statement.to.column,\r\n                message: error.message,\r\n                severity: severity\r\n            });\r\n\r\n            decorations.push({\r\n                range: {\r\n                    startLineNumber: error.statement.from.line,\r\n                    startColumn: error.statement.from.column,\r\n                    endLineNumber: error.statement.to.line,\r\n                    endColumn: error.statement.to.column,\r\n                },\r\n                options: {\r\n                    linesDecorationsClassName: linesDecorationsClassName,\r\n                    minimap: {\r\n                        position: monaco.editor.MinimapPosition.Inline,\r\n                        color: minimapColor\r\n                    }\r\n                }\r\n\r\n            });\r\n\r\n\r\n        }\r\n\r\n        let model = this.main.getCurrentlyEditedModule().model;\r\n        monaco.editor.setModelMarkers(model, 'test', markers);\r\n        this.oldErrorDecorations = model.deltaDecorations(this.oldErrorDecorations, decorations);\r\n\r\n    }\r\n\r\n    showTable(identifier: string) {\r\n        let statement = \"select * from \" + identifier + \";\";\r\n        this.main.getDatabaseTool().executeQuery(statement,\r\n            (results) => { this.presentResultsIntern(statement, results); },\r\n            (error) => { });\r\n    }\r\n\r\n\r\n\r\n    showErrors(errors: RuntimeError[]) {\r\n        let $runtimeErrorsTab = this.$bottomDiv.find('.jo_runtimeerrorsTab');\r\n        let $runtimeErrorsTabHeading = this.$bottomDiv.find('.jo_runtimeerrorsTabheading');\r\n\r\n        $runtimeErrorsTab.empty();\r\n        this.showErrorDecorations(errors);\r\n\r\n        if (errors.length == 0) return;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        $runtimeErrorsTabHeading.trigger(mousePointer + \"down\");\r\n\r\n        let $errorList = jQuery('<div class=\"jo_errorlist\"></div>');\r\n        $runtimeErrorsTab.append($errorList);\r\n\r\n        for (let error of errors) {\r\n            let query = error.statement.sql;\r\n            query = query.replace(/\\n/g, \" \");\r\n            query = query.replace(/\\s\\s+/g, ' ');\r\n\r\n            let $errorLine = $('<div class=\"jo_error-line\" style=\"flex-direction:column; width: fit-content\"></div>')\r\n            $errorList.append($errorLine);\r\n\r\n            $errorLine.on(mousePointer + 'down', () => {\r\n                let range = {\r\n                    startColumn: error.statement.from.column, startLineNumber: error.statement.from.line,\r\n                    endColumn: error.statement.to.column, endLineNumber: error.statement.to.line\r\n                };\r\n\r\n                this.main.getMonacoEditor().revealRangeInCenter(range);\r\n                $errorList.find('.jo_error-line').removeClass('jo_active');\r\n                $errorLine.addClass('jo_active');\r\n\r\n            })\r\n\r\n\r\n            let $sqlDiv = $('<div class=\"jo_sqlErrorStatement\"></div>');\r\n            $errorLine.append($sqlDiv);\r\n\r\n            monaco.editor.colorize(query, \"vscSQL\", {}).then(\r\n                (html) => { $sqlDiv.html(html) });\r\n\r\n            let $messageDiv = $('<div class=\"jo_sqlErrorMessage\">' + error.message + '</div>');\r\n            $errorLine.append($messageDiv);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    isSelectStatement(statement: SQLStatement): boolean {\r\n        return statement.ast != null && statement.ast.type == TokenType.keywordSelect;\r\n    }\r\n\r\n    isDDLStatement(statement: SQLStatement): boolean {\r\n        return statement.ast != null && [TokenType.keywordCreate, TokenType.keywordDrop, TokenType.keywordAlter].indexOf(statement.ast.type) >= 0;\r\n    }\r\n\r\n    isWriteStatement(statement: SQLStatement): boolean {\r\n        return statement.ast != null && [TokenType.keywordInsert, TokenType.keywordDelete, TokenType.keywordUpdate].indexOf(statement.ast.type) >= 0;\r\n    }\r\n\r\n    private presentResultsIntern(query: string, results: QueryResult[]) {\r\n        let $resultTabheading = this.$bottomDiv.find('.jo_resultTabheading');\r\n        let $resultHeader = this.$bottomDiv.find('.jo_result-header');\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        $resultTabheading.trigger(mousePointer + \"down\");\r\n        this.result = results.pop();\r\n\r\n        let headerDiv = $resultHeader;\r\n\r\n        query = query.replace(/\\n/g, \" \");\r\n        query = query.replace(/\\s\\s+/g, ' ');\r\n        query = query.replace(/limit 100000/g, '');\r\n\r\n        monaco.editor.colorize(query, \"vscSQL\", {}).then(\r\n            (html) => { headerDiv.html(html) });\r\n\r\n        this.paginationAll = this.result ? this.result.values.length : 0;\r\n        this.$infoDiv.find('.jo_pagination_all').html(`${this.paginationAll}`);\r\n        this.paginationFrom = 1;\r\n        this.$paginationDiv.show();\r\n        this.activateButtons();\r\n\r\n        this.showResults();\r\n\r\n    }\r\n\r\n    public clear() {\r\n        let $bodyDiv = this.$bottomDiv.find('.jo_result-body');\r\n        $bodyDiv.empty();\r\n        this.$paginationDiv.hide();\r\n    }\r\n\r\n    private showResultsBusy: boolean = false;\r\n    private showResultPending: boolean = false;\r\n\r\n    private showResults() {\r\n        let $bodyDiv = this.$bottomDiv.find('.jo_result-body');\r\n\r\n        if (this.result == null) {\r\n            this.$infoDiv.find('.jo_pagination_fromto').html('---');\r\n            $bodyDiv.html('Die Datenbank lieferte eine leere Ergebnistabelle.');\r\n            return;\r\n        }\r\n\r\n        let that = this;\r\n        let from = this.paginationAll == 0 ? 0 : this.paginationFrom;\r\n        let to = this.paginationAll == 0 ? 0 : Math.min(this.paginationFrom + this.paginationSize - 1, this.paginationAll);\r\n        this.$infoDiv.find('.jo_pagination_fromto').html(`${from} - ${to}`)\r\n\r\n        if (this.showResultsBusy) {\r\n            if (this.showResultPending) {\r\n                return;\r\n            }\r\n            this.showResultPending = true;\r\n            let waitFunction = () => {\r\n                if (that.showResultsBusy) {\r\n                    setTimeout(() => {\r\n                        waitFunction();\r\n                    }, 200);\r\n                } else {\r\n                    that.showResultPending = false;\r\n                    that.showResults();\r\n                }\r\n            }\r\n            setTimeout(waitFunction, 200);\r\n            return;\r\n        }\r\n\r\n        this.showResultsBusy = true;\r\n\r\n        let $table = jQuery('<table></table>');\r\n        let $header = jQuery('<tr></tr>');\r\n        $table.append($header);\r\n\r\n        this.result.columns.forEach((column) => { $header.append(jQuery(`<th><div>${column}</div></th>`)) });\r\n\r\n        let rows = this.result.values.slice(this.paginationFrom - 1, this.paginationFrom + this.paginationSize - 1);\r\n\r\n        let i = 0;\r\n        let f = () => {\r\n            if (i < rows.length) {\r\n                for (let j = i; j < Math.min(i + 200, rows.length); j++) {\r\n                    let row = rows[j];\r\n                    let $row = jQuery('<tr></tr>');\r\n                    $table.append($row);\r\n                    row.forEach((cell) => { $row.append(jQuery(`<td>${cell}</td>`)) });\r\n                }\r\n                i = Math.min(i + 200, rows.length);\r\n                if (i < rows.length) {\r\n                    setTimeout(f, 30);\r\n                } else {\r\n                    $bodyDiv.empty().append($table);\r\n                    this.showResultsBusy = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        f();\r\n\r\n        // rows.forEach((row) => {\r\n        //     let $row = jQuery('<tr></tr>');\r\n        //     $table.append($row);\r\n        //     row.forEach((cell) => {$row.append(jQuery(`<td>${cell}</td>`))});\r\n        // });\r\n\r\n        // bodyDiv.empty().append($table);\r\n\r\n    }\r\n\r\n\r\n    fetchSelectedStatements(): SQLStatement[] {\r\n        let module = this.main.getCurrentlyEditedModule();\r\n        if (module == null) return null;\r\n\r\n        let monacoEditor = this.main.getMonacoEditor();\r\n        // console.log(monacoEditor.getSelection());\r\n        // console.log(monacoEditor.getPosition());\r\n\r\n        let statements: SQLStatement[] = module.getSQLSTatementsAtSelection(monacoEditor.getSelection());\r\n        for (let statement of statements) {\r\n            statement.sql = monacoEditor.getModel().getValueInRange({\r\n                startColumn: statement.from.column,\r\n                startLineNumber: statement.from.line, endColumn: statement.to.column, endLineNumber: statement.to.line\r\n            });\r\n        }\r\n\r\n        // let sqlStatement = module.getSQLStatementAtPosition(monacoEditor.getPosition());\r\n\r\n        return statements;\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { Module } from \"../compiler/parser/Module.js\";\r\nimport { ResultsetPresenter } from \"../main/gui/ResultsetPresenter.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { WDatabase } from \"../workspace/WDatabase.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ajax } from \"./AjaxHelper.js\";\r\nimport { GetNewStatementsRequest, GetNewStatementsResponse, GetWebSocketTokenResponse, WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestGetNewStatements, WebSocketResponse } from \"./Data.js\";\r\n\r\nexport class Notifier {\r\n\r\n    connection: WebSocket;\r\n    isOpen: boolean = false;\r\n    workspace: Workspace;\r\n    database: WDatabase;\r\n\r\n    constructor(public main: Main) {\r\n\r\n    }\r\n\r\n    connect(workspace: Workspace) {\r\n\r\n        let that = this;\r\n        this.workspace = workspace;\r\n        this.database = workspace.database;\r\n\r\n        if(this.isOpen){\r\n            this.connection.close();\r\n        }\r\n\r\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\r\n\r\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/websocket\";\r\n            this.connection = new WebSocket(url);\r\n\r\n            this.connection.onerror = (error: Event) => { this.onError(error); }\r\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\r\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\r\n\r\n            this.connection.onopen = (event: Event) => {\r\n                let request: WebSocketRequestConnect = {\r\n                    command: 1,\r\n                    token: response.token,\r\n                    workspaceId: workspace.id,\r\n                    databaseId: workspace.database.id,\r\n                    databaseVersion: workspace.database.version\r\n                }\r\n\r\n                this.isOpen = true;\r\n                this.sendIntern(JSON.stringify(request));\r\n                this.onOpen();\r\n\r\n            }\r\n\r\n            // Now let's hope that websocket connection can be established.\r\n            // We setup http-polling as fallback solution\r\n\r\n            this.startPolling();\r\n\r\n        });\r\n\r\n    }\r\n\r\n    unsentMessages: string[] = [];\r\n    sendIntern(message: string) {\r\n\r\n        if (!this.isOpen) {\r\n            this.unsentMessages.push(message);\r\n        } else {\r\n            try {\r\n                this.connection.send(message);\r\n            } catch (exception) {\r\n                console.log(exception);\r\n            }\r\n        }\r\n    }\r\n\r\n    onClose(event: CloseEvent) {\r\n        this.isOpen = false;\r\n    }\r\n\r\n\r\n    disconnect() {\r\n        let message: WebSocketRequestDisconnect = {\r\n            command: 4\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n        this.connection.close();\r\n    }\r\n\r\n    onMessage(event: MessageEvent) {\r\n\r\n        let that = this;\r\n        let response: WebSocketResponse = JSON.parse(event.data);\r\n        if (response.command == undefined) return;\r\n\r\n        switch (response.command) {\r\n            case 2: // SendStatements\r\n                that.executeNewStatements(response.newStatements, response.firstNewStatementIndex, () => {\r\n                    let request: WebSocketRequestGetNewStatements = { command: 2, databaseVersion: that.database.version };\r\n                    that.sendIntern(JSON.stringify(request));\r\n                })\r\n                break;\r\n            case 3: // server initiated disconnect\r\n                this.isOpen = false;\r\n                this.database = null;\r\n                this.workspace = null;\r\n                break;\r\n            case 4: // keep alive\r\n                break;\r\n            case 5: // rollback\r\n                if(this.database.version > response.new_version){\r\n                    this.main.getHistoryViewer().rollbackLocal();\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    executeNewStatements(newStatements: string[], firstNewStatementIndex: number, callbackIfTooFewStatements: () => void, callbackIfDone: () => void = () => {}, doRefreshDatabaseExplorer: boolean = true) {\r\n        if(this.database == null) return;\r\n        let that = this;\r\n        let delta = firstNewStatementIndex - (this.database.version + 1);\r\n        if (delta > 0) {\r\n            callbackIfTooFewStatements();\r\n            callbackIfDone();\r\n            return;\r\n        } else {\r\n            if (delta < 0) {\r\n                newStatements.splice(0, -delta);\r\n                firstNewStatementIndex -= delta;\r\n            }\r\n            let statements = newStatements;\r\n            if(statements.length > 0){\r\n                this.main.resultsetPresenter.executeStatementsString(statements, 0, () => {\r\n                    that.main.getHistoryViewer().appendStatements(statements);\r\n                    that.database.statements = that.database.statements.concat(statements)\r\n                    that.database.version = firstNewStatementIndex + newStatements.length - 1;\r\n                    if(doRefreshDatabaseExplorer){\r\n                        that.main.databaseExplorer.refresh();\r\n                    }\r\n                    callbackIfDone();\r\n                })\r\n            } else {\r\n                callbackIfDone();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    onError(error: Event) {\r\n    }\r\n\r\n    onOpen() {\r\n        this.isOpen = true;\r\n        if (this.unsentMessages.length > 0) {\r\n            this.unsentMessages.forEach(m => this.sendIntern(m));\r\n            this.unsentMessages = [];\r\n        }\r\n    }\r\n\r\n    isPolling: boolean = false;\r\n    startPolling() {\r\n        if (this.isPolling) return;\r\n        this.isPolling = true;\r\n\r\n        this.poll();\r\n\r\n    }\r\n\r\n    poll() {\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.poll();\r\n        }, 5000);\r\n\r\n        if (!that.isOpen) {\r\n            this.getNewStatementsHttp();\r\n        }\r\n\r\n    }\r\n\r\n    getNewStatementsHttp() {\r\n        let that = this;\r\n        if (this.workspace == null || this.database == null) return;\r\n\r\n        let request: GetNewStatementsRequest = {\r\n            workspaceId: this.workspace.id,\r\n            version_before: this.workspace.database.version\r\n        }\r\n\r\n        ajax('getNewStatements', request, (response: GetNewStatementsResponse) => {\r\n\r\n            that.executeNewStatements(response.newStatements, response.firstNewStatementIndex, () => {\r\n                that.getNewStatementsHttp();\r\n            })\r\n\r\n        });\r\n\r\n    }\r\n\r\n}","export class WaitOverlay {\r\n\r\n    visible: boolean = false;\r\n    fadeOutPending: boolean = false;\r\n    $bitteWartenText: JQuery<HTMLElement>;\r\n    $bitteWartenProgress: JQuery<HTMLElement>;\r\n\r\n    constructor(private $waitDiv: JQuery<HTMLElement>){\r\n        this.$bitteWartenText = $waitDiv.find('.bitteWartenText');\r\n        this.$bitteWartenProgress = $waitDiv.find('.bitteWartenProgress');\r\n    }\r\n\r\n    show(message: string){\r\n        this.fadeOutPending = false;\r\n        this.$bitteWartenText.html(message);\r\n        this.$bitteWartenProgress.html('');\r\n        if(!this.visible){\r\n            this.visible = true;\r\n            this.$waitDiv.css('display', 'flex');\r\n            this.$waitDiv.hide();\r\n            this.$waitDiv.fadeIn(400);\r\n        }\r\n    }\r\n\r\n    setProgress(message: string){\r\n        this.$bitteWartenProgress.html(message);\r\n    }\r\n\r\n    hide(){\r\n        if(this.visible){\r\n            this.fadeOutPending = true;\r\n            setTimeout(() => {\r\n                if(this.fadeOutPending){\r\n                    this.fadeOutPending = false;\r\n                    this.$waitDiv.fadeOut(200, () => {\r\n                        this.$waitDiv.css('display', 'none');\r\n                    })\r\n                    this.visible = false;        \r\n                }                \r\n            }, 50);\r\n        }\r\n    }\r\n\r\n}","import { MainEmbedded } from \"../../embedded/MainEmbedded.js\";\r\nimport { copyTextToClipboard, openContextMenu } from \"../../tools/HtmlTools.js\";\r\nimport { WDatabase } from \"../../workspace/WDatabase.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\ntype HistoryPanelEntry = {\r\n    statement: string;\r\n    $div: JQuery<HTMLDivElement>;\r\n    $rollbackButton: JQuery<HTMLDivElement>;\r\n}\r\n\r\nexport class HistoryViewer {\r\n\r\n    panelEntries: HistoryPanelEntry[] = [];\r\n\r\n    constructor(private main: MainBase, private $historyPanel: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    clear() {\r\n        this.$historyPanel.empty();\r\n        this.panelEntries = [];\r\n    }\r\n\r\n    clearAndShowStatements(statements: string[]) {\r\n        this.clear();\r\n        this.appendStatements(statements);\r\n    }\r\n\r\n    appendStatements(statements: string[]) {\r\n        statements.forEach(stmt => {\r\n            let panelEntry = this.makePanelEntry(stmt, this.panelEntries.length + 1);\r\n            this.$historyPanel.prepend(panelEntry.$div);\r\n            this.panelEntries.unshift(panelEntry);\r\n        })\r\n\r\n        this.makeLastButtonActive();\r\n    }\r\n\r\n    makeLastButtonActive() {\r\n        this.panelEntries.forEach(pe => pe.$rollbackButton.removeClass('jo_active'));\r\n\r\n        if (this.panelEntries.length > 0) {\r\n            this.panelEntries[0].$rollbackButton.addClass('jo_active');\r\n        }\r\n    }\r\n\r\n    makePanelEntry(statement: string, index: number): HistoryPanelEntry {\r\n        let $div = <JQuery<HTMLDivElement>>jQuery(`<div class=\"jo_panelEntry\"></div>`);\r\n        let $index = jQuery(`<div class=\"jo_panelEntryIndex\">${index}.</div>`);\r\n        let $text = jQuery(`<div class=\"jo_panelEntryText\"></div>`);\r\n        let t: string = statement.substring(0, Math.min(400, statement.length));\r\n        if (statement.length > 400) {\r\n            t += \"...\";\r\n        }\r\n        $text.text(t);\r\n        let $copybutton = <JQuery<HTMLDivElement>>jQuery(`<div class=\"img_copy jo_panelEntryCopyButton jo_active jo_button\" title=\"In die Zwischenablage kopieren\"></div>`)\r\n        let $rollbackbutton = <JQuery<HTMLDivElement>>jQuery(`<div class=\"img_undo jo_panelEntryRollbackButton jo_button\" title=\"Rollback\"></div>`)\r\n        let that = this;\r\n\r\n        $copybutton.on('click', () => {\r\n            copyTextToClipboard(statement);\r\n        })\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $rollbackbutton.on(mousePointer + 'up', (ev) => {\r\n            ev.preventDefault();\r\n            openContextMenu([{\r\n                caption: \"Abbrechen\",\r\n                callback: () => {\r\n                }\r\n            }, {\r\n                caption: \"Ich bin mir sicher: rollback!\",\r\n                color: \"#ff6060\",\r\n                callback: () => {\r\n                    this.rollback();\r\n                }\r\n            }], ev.pageX + 2, ev.pageY + 2);\r\n            ev.stopPropagation();\r\n        })\r\n\r\n        $div.append($index, $text, $copybutton, $rollbackbutton);\r\n        return {\r\n            $div: $div,\r\n            statement: statement,\r\n            $rollbackButton: $rollbackbutton\r\n        }\r\n    }\r\n\r\n    rollback() {\r\n        if (this.panelEntries.length == 0) return;\r\n\r\n        if (this.main.isEmbedded()) {\r\n            this.rollbackEmbedded();\r\n        } else {\r\n            let main: Main = <Main>this.main;\r\n            main.networkManager.rollback((error: string, rollbackLocalNeeded: boolean) => {\r\n                if (error == null && rollbackLocalNeeded) {\r\n                    this.rollbackLocal();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    rollbackLocal() {\r\n        let database = this.main.getCurrentWorkspace().database;\r\n        database.statements.pop();\r\n        database.version--;\r\n        this.main.getDatabaseTool().initializeWorker(database.templateDump, database.statements, () => {\r\n\r\n        }, () => {\r\n            this.main.getDatabaseExplorer().refreshAfterRetrievingDBStructure();\r\n            let lastPanelEntry = this.panelEntries.shift();\r\n            lastPanelEntry.$div.remove();\r\n            this.makeLastButtonActive();\r\n        })\r\n    }\r\n\r\n    rollbackEmbedded() {\r\n        let main: MainEmbedded = <MainEmbedded>this.main;\r\n        main.writeQueryManager.rollback();\r\n\r\n        this.main.getDatabaseTool().initializeWorker(main.initialTemplateDump,\r\n            main.initialStatements.concat(main.writeQueryManager.writtenStatements), () => { },\r\n            () => {\r\n                this.main.getDatabaseExplorer().refreshAfterRetrievingDBStructure();\r\n                let lastPanelEntry = this.panelEntries.shift();\r\n                lastPanelEntry.$div.remove();\r\n                this.makeLastButtonActive();\r\n            })\r\n    }\r\n\r\n}","import { ClassData, UserData, Workspaces } from \"../communication/Data.js\";\r\nimport { NetworkManager } from \"../communication/NetworkManager.js\";\r\nimport { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ActionManager } from \"./gui/ActionManager.js\";\r\nimport { BottomDiv } from \"./gui/BottomDiv.js\";\r\nimport { Editor } from \"./gui/Editor.js\";\r\nimport { Formatter } from \"./gui/Formatter.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { MainMenu } from \"./gui/MainMenu.js\";\r\nimport { ProjectExplorer } from \"./gui/ProjectExplorer.js\";\r\nimport { RightDiv } from \"./gui/RightDiv.js\";\r\nimport { Sliders } from \"./gui/Sliders.js\";\r\nimport { TeacherExplorer } from \"./gui/TeacherExplorer.js\";\r\nimport { ThemeManager } from \"./gui/ThemeManager.js\";\r\nimport { Login } from \"./Login.js\";\r\nimport { Module, File } from \"../compiler/parser/Module.js\";\r\nimport { ViewModeController } from \"./gui/ViewModeController.js\";\r\nimport { ErrorManager } from \"./gui/ErrorManager.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { DatabaseTool } from \"../tools/DatabaseTools.js\";\r\nimport { MainBase } from \"./MainBase.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { DatabaseExplorer } from \"./gui/DatabaseExplorer.js\";\r\nimport { ProgramControlButtons } from \"./gui/ProgramControlButtons.js\";\r\nimport { ResultsetPresenter } from \"./gui/ResultsetPresenter.js\";\r\nimport { Notifier } from \"../communication/Notifier.js\";\r\nimport { checkIfMousePresent } from \"../tools/HtmlTools.js\";\r\nimport { WaitOverlay } from \"./gui/WaitOverlay.js\";\r\nimport { HistoryViewer } from \"./gui/HistoryViewer.js\";\r\n\r\nexport class Main implements MainBase {\r\n    isEmbedded(): boolean {\r\n        return false;\r\n    }\r\n\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    // VORSICHT: ggf. Module -> any\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.projectExplorer.getCurrentlyEditedModule();\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n        this.projectExplorer.setModuleActive(module);\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n    getDatabaseTool(): DatabaseTool {\r\n        return this.databaseTool;\r\n    }\r\n\r\n    getDatabaseExplorer():DatabaseExplorer {\r\n        return this.databaseExplorer;\r\n    }\r\n\r\n    getResultsetPresenter(): ResultsetPresenter {\r\n        return this.resultsetPresenter;\r\n    }\r\n\r\n    getWaitOverlay(): WaitOverlay {\r\n        return this.waitOverlay;\r\n    }\r\n\r\n    getHistoryViewer(): HistoryViewer {\r\n        return this.historyViewer;\r\n    }\r\n\r\n    workspaceList: Workspace[] = [];\r\n    workspacesOwnerId: number;\r\n\r\n    // monaco_editor: monaco.editor.IStandaloneCodeEditor;\r\n    editor: Editor;\r\n    currentWorkspace: Workspace;\r\n    projectExplorer: ProjectExplorer;\r\n    teacherExplorer: TeacherExplorer;\r\n    networkManager: NetworkManager;\r\n    actionManager: ActionManager;\r\n    mainMenu: MainMenu;\r\n\r\n    login: Login;\r\n\r\n    compiler: Compiler;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    bottomDiv: BottomDiv;\r\n\r\n    startupComplete = 2;\r\n    waitForGUICallback: () => void;\r\n\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    user: UserData;\r\n    userDataDirty: boolean = false;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    rightDiv: RightDiv;\r\n\r\n    viewModeController: ViewModeController;\r\n\r\n    databaseTool: DatabaseTool;\r\n\r\n    databaseExplorer: DatabaseExplorer;\r\n\r\n    resultsetPresenter: ResultsetPresenter;\r\n\r\n    notifier: Notifier;\r\n\r\n    waitOverlay: WaitOverlay = new WaitOverlay(jQuery('.bitteWarten'));\r\n    historyViewer: HistoryViewer = new HistoryViewer(this, jQuery('.jo_historyTab'));\r\n\r\n    initGUI() {\r\n\r\n        checkIfMousePresent();\r\n\r\n        this.login = new Login(this);\r\n        this.login.initGUI();\r\n\r\n        this.databaseTool = new DatabaseTool(this);\r\n        this.databaseExplorer = new DatabaseExplorer(this, jQuery(\".jo_db_tree\"));\r\n\r\n        this.actionManager = new ActionManager(null, this);\r\n        this.actionManager.init();\r\n\r\n        this.networkManager = new NetworkManager(this, jQuery('#bottomdiv-outer .jo_updateTimerDiv'));\r\n\r\n        let sliders = new Sliders(this);\r\n        sliders.initSliders();\r\n        this.mainMenu = new MainMenu(this);\r\n        this.projectExplorer = new ProjectExplorer(this, jQuery('#leftpanel>.jo_projectexplorer'));\r\n        this.projectExplorer.initGUI();\r\n\r\n        this.bottomDiv = new BottomDiv(this, jQuery('#bottomdiv-outer>.jo_bottomdiv-inner'), jQuery('body'));\r\n\r\n        this.rightDiv = new RightDiv(this, jQuery('#rightdiv-inner'));\r\n        this.rightDiv.initGUI();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.themeManager = new ThemeManager();\r\n\r\n        this.viewModeController = new ViewModeController(jQuery(\"#view-mode\"), this);\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n        new ProgramControlButtons(this, jQuery('#controls'));\r\n\r\n        this.resultsetPresenter = new ResultsetPresenter(this, jQuery('.jo_bottomdiv-inner'));\r\n\r\n        this.notifier = new Notifier(this);\r\n\r\n    }\r\n\r\n\r\n    initEditor() {\r\n        this.editor = new Editor(this, true, false);\r\n        new Formatter().init();\r\n        // this.monaco_editor = \r\n        this.editor.initGUI(jQuery('#editor'));\r\n\r\n        let that = this;\r\n        jQuery(window).on('resize', (event) => {\r\n            jQuery('#bottomdiv-outer').css('height', '450px');\r\n            jQuery('#editor').css('height', (window.innerHeight - 450 - 30 - 2) + \"px\");\r\n            that.editor.editor.layout();\r\n            jQuery('#editor').css('height', \"\");\r\n\r\n        });\r\n\r\n        jQuery(window).trigger('resize');\r\n\r\n        this.checkStartupComplete();\r\n    }\r\n\r\n    initTeacherExplorer(classdata: ClassData[]) {\r\n        this.teacherExplorer = new TeacherExplorer(this, classdata);\r\n        this.teacherExplorer.initGUI();\r\n    }\r\n\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    start() {\r\n\r\n        if (this.waitForGUICallback != null) {\r\n            this.waitForGUICallback();\r\n        }\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.getMonacoEditor().layout();\r\n        }, 200);\r\n\r\n        this.compiler = new Compiler(this);\r\n\r\n        this.startTimer();\r\n\r\n        $(window).on('unload', function() {\r\n            \r\n            if(navigator.sendBeacon && that.user != null){\r\n                that.networkManager.sendUpdates(null, false);\r\n                that.networkManager.sendUpdateUserSettings(() => {});\r\n            }\r\n            \r\n        });\r\n\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n                this.projectExplorer.renderErrorCount(this.currentWorkspace, errors);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                if (this.projectExplorer) {\r\n                    this.version++;\r\n                }\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    removeWorkspace(w: Workspace) {\r\n        this.workspaceList.splice(this.workspaceList.indexOf(w), 1);\r\n    }\r\n\r\n    restoreWorkspaces(workspaces: Workspaces) {\r\n\r\n        this.workspaceList = [];\r\n        this.currentWorkspace = null;\r\n        // this.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\" , \"text\"));\r\n        this.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        for (let ws of workspaces.workspaces) {\r\n\r\n            let workspace: Workspace = Workspace.restoreFromData(ws, this);\r\n            this.workspaceList.push(workspace);\r\n            if (ws.id == this.user.currentWorkspace_id) {\r\n                this.currentWorkspace = workspace;\r\n            }\r\n        }\r\n\r\n        this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n\r\n        if (this.currentWorkspace == null && this.workspaceList.length > 0) {\r\n            this.currentWorkspace = this.workspaceList[0];\r\n        }\r\n\r\n        if (this.currentWorkspace != null) {\r\n            this.projectExplorer.setWorkspaceActive(this.currentWorkspace);\r\n        }\r\n\r\n        if (this.workspaceList.length == 0) {\r\n\r\n            Helper.showHelper(\"newDatabaseHelper\", this, this.projectExplorer.workspaceListPanel.$captionElement);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    createNewWorkspace(name: string, owner_id: number): Workspace {\r\n        return new Workspace(name, this, owner_id);\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class ErrorManager {\r\n\r\n    oldDecorations: string[] = [];\r\n    oldErrorDecorations: string[] = [];\r\n    $errorDiv: JQuery<HTMLElement>;\r\n\r\n    $bracket_warning: JQuery<HTMLElement>;\r\n\r\n    minimapColor: {[key: string]:string } = {};\r\n\r\n    lightBulbOnClickFunctionList: {class: string, onClickFunction: () => void, title: string}[] = [];\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>, private $mainDiv: JQuery<HTMLElement>) {\r\n        this.minimapColor[\"error\"] = \"#bc1616\";\r\n        this.minimapColor[\"warning\"] = \"#cca700\";\r\n        this.minimapColor[\"info\"] = \"#75beff\";\r\n\r\n        this.$bracket_warning = $mainDiv.find(\".jo_parenthesis_warning\");\r\n\r\n        this.$bracket_warning.attr('title', 'Klammeralarm!');\r\n        this.$bracket_warning.children().attr('title', 'Klammeralarm!');\r\n\r\n        let that = this;\r\n        $mainDiv.find(\".jo_pw_undo\").on(\"click\", () => {\r\n            let editor = that.main.getMonacoEditor();\r\n            editor.trigger(\".\", \"undo\", {});\r\n        }).attr('title', 'Undo');\r\n    }\r\n\r\n    showParenthesisWarning(error: string){\r\n        if(error != null){\r\n            this.$bracket_warning.css(\"visibility\", \"visible\");\r\n            this.$bracket_warning.find(\".jo_pw_heading\").text(error);\r\n        } else {\r\n            this.$bracket_warning.css(\"visibility\", \"hidden\");\r\n        }\r\n    }\r\n\r\n    showErrors(workspace: Workspace): Map<Module, number> {\r\n\r\n        this.lightBulbOnClickFunctionList = [];\r\n\r\n        let errorCountMap: Map<Module, number> = new Map();\r\n\r\n        this.$errorDiv = this.$bottomDiv.find('.jo_tabs>.jo_errorsTab');\r\n        this.$errorDiv.empty();\r\n\r\n        let hasErrors = false;\r\n\r\n        let ms = workspace.moduleStore;\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        for (let m of ms.getModules(false)) {\r\n            let markers: monaco.editor.IMarkerData[] = [];\r\n            let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n            let $errorList: JQuery<HTMLElement>[] = [];\r\n\r\n            let errors = m.getSortedAndFilteredErrors();\r\n            errorCountMap.set(m, m.getErrorCount());\r\n\r\n            for (let error of errors) {\r\n\r\n                let linesDecorationsClassName: string;\r\n                let borderLeftClass: string;\r\n                let minimapColor: string = this.minimapColor[error.level];\r\n\r\n                switch (error.level) {\r\n                    case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                    case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                    case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n                }\r\n\r\n                if (error.quickFix != null) {\r\n                    let quickFix = error.quickFix;\r\n                    let lightBulbClass = \"lb_\" + Math.trunc(Math.random() * 1000000);\r\n                    linesDecorationsClassName = 'jo_yellowLightBulb ' + borderLeftClass + \" \" + lightBulbClass;\r\n\r\n                    this.lightBulbOnClickFunctionList.push({class: '.' + lightBulbClass, \r\n                    onClickFunction: () => {\r\n\r\n                        let edits = quickFix.editsProvider(m.model.uri);\r\n                        editor.executeEdits(\"\", edits.map((edit) => {\r\n                            let r = edit.edit.range;\r\n                            return {\r\n                                range: new monaco.Range(r.startLineNumber, r.startColumn, r.endLineNumber, r.endColumn),\r\n                                text: edit.edit.text,\r\n                                forceMoveMarkers: true\r\n                            }\r\n                        }\r\n                        ));\r\n\r\n                    },\r\n                    title: quickFix.title\r\n                })\r\n\r\n\r\n                }\r\n\r\n                this.processError(error, m, $errorList);\r\n\r\n                let severity: monaco.MarkerSeverity;\r\n                switch (error.level) {\r\n                    case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                    case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                    case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n                }\r\n\r\n                markers.push({\r\n                    startLineNumber: error.position.line,\r\n                    startColumn: error.position.column,\r\n                    endLineNumber: error.position.line,\r\n                    endColumn: error.position.column + error.position.length,\r\n                    message: error.text,\r\n                    severity: severity,\r\n                    //@ts-ignore\r\n                    relatedInformation: error.quickFix\r\n                });\r\n\r\n                decorations.push({\r\n                    range: {\r\n                        startLineNumber: error.position.line,\r\n                        startColumn: error.position.column,\r\n                        endLineNumber: error.position.line,\r\n                        endColumn: error.position.column + error.position.length\r\n                    },\r\n                    options: {\r\n                        linesDecorationsClassName: linesDecorationsClassName,\r\n                        minimap: {\r\n                            position: monaco.editor.MinimapPosition.Inline,\r\n                            color: minimapColor\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n            }\r\n\r\n            monaco.editor.setModelMarkers(m.model, 'test', markers);\r\n            m.oldErrorDecorations = m.model.deltaDecorations(m.oldErrorDecorations, decorations);\r\n\r\n            // decorations used when user clicks on error in error-list:\r\n            this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, []);\r\n\r\n\r\n            if ($errorList.length > 0 && this.$errorDiv.length > 0) {\r\n                hasErrors = true;\r\n                let $file = jQuery('<div class=\"jo_error-filename\">' + m.file.name + '&nbsp;</div>');\r\n                this.$errorDiv.append($file);\r\n                for (let $error of $errorList) {\r\n                    this.$errorDiv.append($error);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasErrors && this.$errorDiv.length > 0) {\r\n            this.$errorDiv.append(jQuery('<div class=\"jo_noErrorMessage\">Keine Fehler gefunden :-)</div>'));\r\n        }\r\n\r\n        this.registerLightbulbOnClickFunctions();\r\n\r\n        return errorCountMap;\r\n\r\n    }\r\n\r\n    registerLightbulbOnClickFunctions() {\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            for(let locf of that.lightBulbOnClickFunctionList){\r\n                    jQuery(locf.class).off('click', locf.onClickFunction);\r\n                    jQuery(locf.class).on('click', locf.onClickFunction).attr('title', locf.title);\r\n            }            \r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    processError(error: Error, m: Module, $errorDivs: JQuery<HTMLElement>[]) {\r\n\r\n        let $div = jQuery('<div class=\"jo_error-line\"></div>');\r\n        let $lineColumn = jQuery('<span class=\"jo_error-position\">[Z&nbsp;<span class=\"jo_linecolumn\">' + error.position.line + '</span>' +\r\n            ' Sp&nbsp;<span class=\"jo_linecolumn\">' + error.position.column + '</span>]</span>:&nbsp;');\r\n        let category = \"\";\r\n        switch (error.level) {\r\n            case \"error\": break;\r\n            case \"warning\": category = '<span class=\"jo_warning_category\">Warnung: </span>'; break;\r\n            case \"info\": category = '<span class=\"jo_info_category\">Info: </span>'; break;\r\n        }\r\n        let $message = jQuery('<div class=\"jo_error-text\">' + category + error.text + \"</div>\");\r\n\r\n        $div.append($lineColumn).append($message);\r\n\r\n        let that = this;\r\n        $div.on(\"mousedown\", (ev) => {\r\n            this.$errorDiv.find('.jo_error-line').removeClass('jo_active');\r\n            $div.addClass('jo_active');\r\n            that.showError(m, error);\r\n        });\r\n\r\n        $errorDivs.push($div);\r\n    }\r\n\r\n    showError(m: Module, error: Error) {\r\n\r\n        if (this.main instanceof Main) {\r\n            if (m != this.main.projectExplorer.getCurrentlyEditedModule()) {\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n        let position = error.position;\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n\r\n        let className: string = \"\";\r\n        switch (error.level) {\r\n            case \"error\": className = \"jo_revealError\"; break;\r\n            case \"warning\": className = \"jo_revealWarning\"; break;\r\n            case \"info\": className = \"jo_revealInfo\"; break;\r\n        }\r\n\r\n\r\n        this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, [\r\n            {\r\n                range: range,\r\n                options: { className: className }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n}","import { makeDiv } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { stringToDate, dateToStringWithoutTime } from \"../../tools/StringTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\ntype ModuleWithWorkspace = {\r\n    module: Module,\r\n    workspace: Workspace\r\n}\r\n\r\ntype DayWithModules = {\r\n    date: Date;\r\n    day: string;\r\n    modules: ModuleWithWorkspace[];\r\n}\r\n\r\nexport class HomeworkManager {\r\n\r\n    $homeworkTab: JQuery<HTMLElement>;\r\n    $homeworkTabLeft: JQuery<HTMLElement>;\r\n    $homeworkTabRight: JQuery<HTMLElement>;\r\n\r\n    $showRevisionButton: JQuery<HTMLElement>;\r\n    showRevisionActive: boolean = false;\r\n\r\n    diffEditor: monaco.editor.IStandaloneDiffEditor;\r\n\r\n    constructor(private main: Main, public $bottomDiv: JQuery<HTMLElement>) {\r\n        this.$homeworkTab = $bottomDiv.find('.jo_tabs>.jo_homeworkTab');\r\n    }\r\n\r\n    initGUI() {\r\n        let that = this;\r\n        this.$homeworkTab.append(this.$homeworkTabLeft = makeDiv(\"\", \"jo_homeworkTabLeft jo_scrollable\"));\r\n        this.$homeworkTab.append(this.$homeworkTabRight = makeDiv(\"\", \"jo_homeworkTabRight jo_scrollable\"));\r\n        jQuery('#view-mode').prepend(this.$showRevisionButton = makeDiv(\"\", \"jo_button jo_active jo_homeworkRevisionButton\", \"\"));\r\n        this.$showRevisionButton.on(\"click\", () => {\r\n            if (this.showRevisionActive) {\r\n                this.hideRevision();\r\n            } else {\r\n                this.showRevision(that.main.getCurrentlyEditedModule());\r\n            }\r\n        });\r\n        this.$showRevisionButton.hide();\r\n        jQuery('#diffEditor').hide();\r\n    }\r\n\r\n    showHomeWorkRevisionButton() {\r\n        this.$showRevisionButton.text(this.showRevisionActive ? \"Normalansicht\" : \"Korrekturen zeigen\");\r\n        this.$showRevisionButton.show();\r\n    }\r\n\r\n    hideHomeworkRevisionButton() {\r\n        this.$showRevisionButton.hide();\r\n    }\r\n\r\n    showRevision(module: Module) {\r\n\r\n        module.file.text = module.getProgramTextFromMonacoModel();\r\n        let file = module.file;\r\n\r\n        jQuery('#editor').hide();\r\n        jQuery('#diffEditor').show();\r\n\r\n        var originalModel = monaco.editor.createModel(file.text_before_revision, \"myJava\");\r\n        var modifiedModel = monaco.editor.createModel(file.text, \"myJava\");\r\n\r\n        this.diffEditor = monaco.editor.createDiffEditor(document.getElementById(\"diffEditor\"), {\r\n            // You can optionally disable the resizing\r\n            enableSplitViewResizing: true,\r\n            originalEditable: false,\r\n            readOnly: true,\r\n            // Render the diff inline\r\n            renderSideBySide: true\r\n        });\r\n\r\n        this.diffEditor.setModel({\r\n            original: originalModel,\r\n            modified: modifiedModel\r\n        });\r\n\r\n        this.showRevisionActive = true;\r\n        this.showHomeWorkRevisionButton();\r\n    }\r\n\r\n    hideRevision() {\r\n        if (this.showRevisionActive) {\r\n\r\n            jQuery('#diffEditor').hide();\r\n            this.diffEditor.dispose();\r\n            this.diffEditor = null;\r\n            jQuery('#editor').show();\r\n\r\n            this.showRevisionActive = false;\r\n            this.showHomeWorkRevisionButton();\r\n        }\r\n    }\r\n\r\n\r\n    attachToWorkspaces(workspaces: Workspace[]) {\r\n\r\n        let daysWithModules: DayWithModules[] = [];\r\n        let map: { [day: string]: DayWithModules } = {};\r\n\r\n        workspaces.forEach(ws => {\r\n            ws.moduleStore.getModules(false).forEach(module => {\r\n\r\n                let dateString = module.file.submitted_date;\r\n                if (dateString != null) {\r\n\r\n                    let date: Date = stringToDate(dateString);\r\n                    let dateWithoutTime = dateToStringWithoutTime(date);\r\n                    let dwm: DayWithModules = map[dateWithoutTime];\r\n                    if (dwm == null) {\r\n                        dwm = {\r\n                            date: date,\r\n                            day: dateWithoutTime,\r\n                            modules: []\r\n                        };\r\n                        map[dateWithoutTime] = dwm;\r\n                        daysWithModules.push(dwm);\r\n                    }\r\n                    dwm.modules.push({module: module, workspace: ws});\r\n\r\n                }\r\n\r\n            });\r\n\r\n        });\r\n\r\n        this.$homeworkTabLeft.empty();\r\n        this.$homeworkTabRight.empty();\r\n\r\n        let that = this;\r\n\r\n        this.$homeworkTabLeft.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgabetage:\"));\r\n\r\n\r\n        daysWithModules.sort((a, b) => {\r\n            if (a.date.getFullYear() != b.date.getFullYear()) return -Math.sign(a.date.getFullYear() - b.date.getFullYear());\r\n            if (a.date.getMonth() != b.date.getMonth()) return -Math.sign(a.date.getMonth() - b.date.getMonth());\r\n            if (a.date.getDate() != b.date.getDate()) return -Math.sign(a.date.getDate() - b.date.getDate());\r\n            return 0;\r\n        });\r\n\r\n        let first: boolean = true;\r\n\r\n        daysWithModules.forEach(dwm => {\r\n\r\n            dwm.modules.sort((m1, m2) => m1.module.file.name.localeCompare(m2.module.file.name));\r\n\r\n            let $div = makeDiv(\"\", \"jo_homeworkDate\", dwm.day);\r\n            this.$homeworkTabLeft.append($div);\r\n\r\n            $div.on(\"click\", (e) => {\r\n                this.$homeworkTabLeft.find('.jo_homeworkDate').removeClass('active');\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            });\r\n\r\n            if (first) {\r\n                first = false;\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    select(dwm: DayWithModules) {\r\n        this.$homeworkTabRight.empty();\r\n        this.$homeworkTabRight.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgegebene Dateien:\"));\r\n        let that = this;\r\n        dwm.modules.forEach(moduleWithWorkspace => {\r\n            let $div = jQuery(`<div class=\"jo_homeworkEntry\">Workspace <span class=\"jo_homework-workspace\">\r\n                    ${moduleWithWorkspace.workspace.name}</span>, Datei <span class=\"jo_homework-file\">\r\n                    ${moduleWithWorkspace.module.file.name}</span> (Abgabe: ${moduleWithWorkspace.module.file.submitted_date} )</div>`);\r\n            that.$homeworkTabRight.append($div);\r\n            $div.on(\"click\", () => {\r\n                    that.main.projectExplorer.setWorkspaceActive(moduleWithWorkspace.workspace);\r\n                    that.main.projectExplorer.setModuleActive(moduleWithWorkspace.module);\r\n                    that.main.projectExplorer.fileListPanel.select(moduleWithWorkspace.module, false);\r\n            });\r\n        })\r\n        \r\n    }\r\n\r\n\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { ErrorManager } from \"./ErrorManager.js\";\r\nimport { HomeworkManager } from \"./HomeworkManager.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class BottomDiv {\r\n\r\n    errorManager: ErrorManager;\r\n    homeworkManager: HomeworkManager;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>, public $mainDiv: JQuery<HTMLElement>) {\r\n\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_homeworkTabheading').length > 0) {\r\n            this.homeworkManager = new HomeworkManager(<Main>main, $bottomDiv);\r\n        }\r\n\r\n        this.errorManager = new ErrorManager(main, $bottomDiv, $mainDiv);\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$bottomDiv);\r\n        if (this.homeworkManager != null) this.homeworkManager.initGUI();\r\n\r\n        this.$bottomDiv.find('.jo_tabs').children().first().trigger(\"click\");\r\n\r\n    }\r\n\r\n    showHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'visible');\r\n        jQuery('.jo_homeworkTabheading').trigger(\"mousedown\");\r\n\r\n    }\r\n\r\n    hideHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'hidden');\r\n        jQuery('.jo_tabheadings').children().first().trigger(\"mousedown\");\r\n\r\n    }\r\n\r\n\r\n}","\r\nexport class EmbeddedSlider {\r\n\r\n    $sliderDiv: JQuery<HTMLElement>;\r\n\r\n    /**\r\n     * A div contains $container and another div. Between the latter two \r\n     * a slider should get inserted.\r\n     * @param $container \r\n     * @param firstLast true, if $container is left/on top of other div; false if otherwise\r\n     * @param horVert true, if $container and other div are left/right of another; false if they are on top/below each other\r\n     * @param callback \r\n     * @param $otherDiv \r\n     */\r\n    constructor(private $container: JQuery<HTMLElement>, \r\n        private firstLast: boolean, private horVert: boolean,\r\n         private callback: (newLength: number) => void, private $otherDiv?: JQuery<HTMLElement>){\r\n            this.initSlider();\r\n    }\r\n\r\n    initSlider() {\r\n        let that = this;\r\n\r\n        if(this.$otherDiv == null){\r\n            this.$container.parent().children().each((index, element) => {\r\n                if(element != this.$container[0]){\r\n                    that.$otherDiv = jQuery(element);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.$sliderDiv = jQuery('<div class=\"joe_slider\"></div>');\r\n\r\n        this.$sliderDiv.css({\r\n            width: this.horVert ? \"100%\" : \"4px\",\r\n            height: this.horVert ? \"4px\" : \"100%\",\r\n            cursor: this.horVert ? \"row-resize\" : \"col-resize\",\r\n        });\r\n\r\n        if(this.firstLast){\r\n            this.$sliderDiv.css({\r\n                top: \"0px\",\r\n                left: \"0px\"\r\n            });\r\n        } else {\r\n            if(this.horVert){\r\n                this.$sliderDiv.css({\r\n                    bottom: \"0px\",\r\n                    left: \"0px\"\r\n                });    \r\n            } else {\r\n                this.$sliderDiv.css({\r\n                    top: \"0px\",\r\n                    right: \"0px\"\r\n                });    \r\n            }\r\n        }\r\n\r\n        this.$container.append(this.$sliderDiv);\r\n\r\n        this.$sliderDiv.on(\"mousedown\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(\"mousemove.slider\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                let dy = mm.clientY - y;\r\n\r\n                that.slide(dx, dy);\r\n                \r\n                x = mm.clientX;\r\n                y = mm.clientY;\r\n\r\n            });\r\n\r\n            jQuery(document).on(\"mouseup.slider\", () => {\r\n                jQuery(document).off(\"mousemove.slider\");\r\n                jQuery(document).off(\"mouseup.slider\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        setTimeout(() => {\r\n            that.slide(1, 1);\r\n        }, 600);\r\n\r\n    }\r\n\r\n    setColor(color: string){\r\n        this.$sliderDiv.css('background-color', color);\r\n    }\r\n\r\n    slide(dx: number, dy: number){\r\n        if(this.horVert){\r\n            let height = Number.parseInt(this.$container.css('height').replace('px', ''));\r\n            let otherHeight = Number.parseInt(this.$otherDiv.css('height').replace('px', ''));\r\n            let newHeight = this.firstLast ? height -= dy : height += dy;\r\n            let newOtherHeight = this.firstLast ? otherHeight += dy : otherHeight -= dy;\r\n            this.$container.css('height', newHeight + \"px\");\r\n            this.$otherDiv.css('height', newOtherHeight + \"px\");\r\n            this.callback(newHeight);\r\n        } else {\r\n            let width = Number.parseInt(this.$container.css('width').replace('px', ''));\r\n            let otherWidth = Number.parseInt(this.$otherDiv.css('width').replace('px', ''));\r\n            let newWidth = this.firstLast ? width -= dx : width += dx;\r\n            let newOtherWidth = this.firstLast ? otherWidth += dx : otherWidth -= dx;\r\n            this.$container.css('width', newWidth + \"px\");\r\n            this.$otherDiv.css('width', newOtherWidth + \"px\");\r\n            this.callback(newWidth);\r\n        }\r\n        this.$container.css('flex', \"0 1 auto\");\r\n\r\n    }\r\n\r\n\r\n}","import { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\nimport { openContextMenu, makeEditable } from \"../tools/HtmlTools.js\";\r\nimport { JOScript, ScriptType } from \"./EmbeddedStarter.js\";\r\n\r\ntype FileData = {\r\n    type: ScriptType,\r\n    module?: Module,\r\n    hint?: string,\r\n    $fileDiv: JQuery<HTMLElement>\r\n}\r\n\r\nexport class EmbeddedFileExplorer {\r\n\r\n    currentFile: FileData;\r\n    files: FileData[] = [];\r\n\r\n    constructor(private moduleStore: ModuleStore, private $fileListDiv: JQuery<HTMLElement>, private main: MainEmbedded) {\r\n\r\n        let that = this;\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n\r\n            this.addModule(module);\r\n\r\n        }\r\n\r\n        let $filesDiv = $fileListDiv.parent();\r\n        let $addButton = jQuery('<div class=\"joe_addFileButton jo_button img_add-dark jo_active\" title=\"Datei hinzufügen\"></div>');\r\n        $filesDiv.append($addButton);\r\n\r\n        $addButton.on(\"click\", () => {\r\n\r\n            let module = this.main.addModule({ text: \"\", title: \"Neue Datei.java\", type: \"sql\" });\r\n            let fileData = this.addModule(module);\r\n\r\n            this.renameElement(fileData, () => {\r\n                // if there's no file yet and then one is added and subsequently renamed: select it!\r\n                if (that.currentFile != fileData) {\r\n                    that.selectFile(fileData);\r\n                }\r\n            });\r\n        });\r\n\r\n\r\n    }\r\n\r\n    removeAllFiles() {\r\n        this.files.forEach(f => this.removeFile(f));\r\n    }\r\n\r\n\r\n    addHint(script: JOScript): void {\r\n        let that = this;\r\n        let $fileDiv = jQuery('<div class=\"jo_file jo_hint\" ><div class=\"jo_fileimage\"></div><div class=\"jo_filename\" style=\"line-height: 22px\">' +\r\n            script.title + '</div><div class=\"jo_additionalButtons\"></div></div></div>');\r\n        this.$fileListDiv.append($fileDiv);\r\n\r\n        let fileData: FileData = {\r\n            module: null,\r\n            $fileDiv: $fileDiv,\r\n            type: \"hint\",\r\n            hint: script.text\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    addModule(module: Module): FileData {\r\n        let that = this;\r\n        let $fileDiv = jQuery(`<div class=\"jo_file jo_java\" >\r\n        <div class=\"jo_fileimage\"></div>\r\n        <div class=\"jo_filename\" style=\"line-height: 22px\">${module.file.name}</div>\r\n        <div class=\"jo_additionalButtonStart\"></div>\r\n        <div class=\"jo_delete img_delete jo_button jo_active\" title=\"Datei löschen\"></div></div></div>`);\r\n        this.$fileListDiv.append($fileDiv);\r\n\r\n        let fileData: FileData = {\r\n            module: module,\r\n            $fileDiv: $fileDiv,\r\n            type: \"sql\"\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        module.file.panelElement = {\r\n            name: module.file.name,\r\n            $htmlFirstLine: $fileDiv,\r\n            isFolder: false,\r\n            path: []\r\n        }\r\n\r\n        $fileDiv.find('.jo_delete').on(\"mousedown\", (e: JQuery.MouseDownEvent) => {\r\n            that.onDelete(fileData, e);\r\n        })\r\n\r\n        $fileDiv.find('.jo_delete').on(\"click\", (e) => { e.preventDefault(); e.stopPropagation() });\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n        $fileDiv[0].addEventListener(\"contextmenu\", function (event) {\r\n            event.preventDefault();\r\n            openContextMenu([{\r\n                caption: \"Umbenennen\",\r\n                callback: () => {\r\n                    that.renameElement(fileData, () => { });\r\n                }\r\n            }], event.pageX, event.pageY);\r\n        }, false);\r\n\r\n        return fileData;\r\n\r\n    }\r\n\r\n    onDelete(fileData: FileData, ev: JQuery.MouseDownEvent) {\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n        let that = this;\r\n        openContextMenu([{\r\n            caption: \"Abbrechen\",\r\n            callback: () => {\r\n                // nothing to do.\r\n            }\r\n        }, {\r\n            caption: \"Ich bin mir sicher: löschen!\",\r\n            color: \"#ff6060\",\r\n            callback: () => {\r\n                that.removeFile(fileData);\r\n            }\r\n        }], ev.pageX + 2, ev.pageY + 2);\r\n\r\n    }\r\n\r\n    removeFile(fileData: FileData) {\r\n        fileData.$fileDiv.remove();\r\n        this.main.removeModule(fileData.module);\r\n        this.files = this.files.filter((fd) => fd != fileData);\r\n        if (this.currentFile == fileData) {\r\n            if (this.files.length > 0) {\r\n                this.selectFile(this.files[0]);\r\n            } else {\r\n                this.main.getMonacoEditor().setValue(\"Keine Datei vorhanden.\");\r\n                this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n            }\r\n        }\r\n\r\n        this.files.forEach((file) => {\r\n            if(file.module != null){                // Hints have module == null\r\n                file.module.file.saved = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        for (let fileData of this.files) {\r\n            if (fileData.module == module) {\r\n                this.removeFile(fileData);\r\n            }\r\n        }\r\n    }\r\n\r\n    renameElement(fileData: FileData, callback: () => void) {\r\n        let that = this;\r\n        let $div = fileData.$fileDiv.find('.jo_filename');\r\n        let pointPos = fileData.module.file.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        makeEditable($div, $div, (newText: string) => {\r\n            fileData.module.file.name = newText;\r\n            $div.html(newText);\r\n            if (callback != null) callback();\r\n        }, selection);\r\n\r\n    }\r\n\r\n\r\n    setFirstFileActive() {\r\n        if (this.files.length > 0) {\r\n            this.selectFile(this.files[0]);\r\n        }\r\n    }\r\n\r\n    selectFile(fileData: FileData) {\r\n        if (fileData == null) return;\r\n        switch (fileData.type) {\r\n            case \"sql\":\r\n                this.main.$hintDiv.hide();\r\n                this.main.$monacoDiv.show();\r\n                this.main.setModuleActive(fileData.module);\r\n                this.main.getMonacoEditor().focus();\r\n                break;\r\n            case \"hint\":\r\n                this.main.$monacoDiv.hide();\r\n                this.main.$hintDiv.show();\r\n\r\n                let syntaxMap: { [code: string]: string } = {};\r\n                let code: string[] = [];\r\n\r\n                //@ts-ignore\r\n                let md1 = window.markdownit({\r\n                    highlight: function (str, lang) {\r\n                        code.push(str);\r\n                        return \"\";\r\n                    }\r\n                });\r\n\r\n                md1.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                    var token = tokens[idx];\r\n                    code.push(token.content);\r\n                    // pass token to default renderer.\r\n                    return \"\"; //md1.renderer.rules.code_block(tokens, idx, options, env, self);\r\n                };\r\n\r\n                md1.render(fileData.hint);\r\n\r\n                this.colorize(code, syntaxMap, () => {\r\n                    //@ts-ignore\r\n                    let md2 = window.markdownit({\r\n                        highlight: function (str, lang) {\r\n                            return syntaxMap[str];\r\n                        }\r\n                    });\r\n\r\n                    md2.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                        var token = tokens[idx];\r\n                        // pass token to default renderer.\r\n                        return syntaxMap[token.content].replace(\"<br/>\", \"\");\r\n                    };\r\n\r\n\r\n                    let html = md2.render(fileData.hint);\r\n                    this.main.$hintDiv.html(html);\r\n                });\r\n                this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n                fileData.$fileDiv.addClass('jo_active');\r\n                break;\r\n        }\r\n    }\r\n\r\n    colorize(code: string[], codeMap: { [code: string]: string }, callback: () => void) {\r\n        let that = this;\r\n        if (code.length > 0) {\r\n            let uncoloredtext = code.pop();\r\n            monaco.editor.colorize(uncoloredtext, 'myJava', { tabSize: 3 }).then((text) => {\r\n                codeMap[uncoloredtext] = text;\r\n                that.colorize(code, codeMap, callback);\r\n            }\r\n            );\r\n        } else {\r\n            callback();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    markFile(module: Module) {\r\n        this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n\r\n        this.currentFile = this.files.find((fileData) => fileData.module == module);\r\n\r\n        if (this.currentFile != null) this.currentFile.$fileDiv.addClass('jo_active');\r\n\r\n    }\r\n\r\n\r\n\r\n}","export class EmbeddedIndexedDB {\r\n\r\n    private db: IDBDatabase;\r\n\r\n    constructor(private databaseIdentifier: string){\r\n\r\n    }\r\n\r\n    public open(successCallback: () => void) {\r\n\r\n        if (window.indexedDB) {\r\n\r\n            let request: IDBOpenDBRequest = window.indexedDB.open(this.databaseIdentifier, 1);\r\n\r\n            let that = this;\r\n\r\n            request.onerror = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                console.log(\"Couldn't open IndexedDB: \" + ev.type);\r\n            };\r\n\r\n            request.onsuccess = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                that.db = request.result;\r\n                that.db.onerror = function(event) {\r\n                    // Allgemeine Fehlerbehandlung, die für alle Anfragen an die Datenbank gilt. \r\n                    // @ts-ignore\r\n                    console.log(\"Datenbankfehler: \" + event.target.error.message);\r\n                  };\r\n                  successCallback();\r\n            };\r\n\r\n            request.onupgradeneeded = function(ev: Event){\r\n                // @ts-ignore\r\n                that.db = ev.target.result;\r\n                let objectStoreScripts = that.db.createObjectStore(\"scripts\", { keyPath: \"scriptId\", autoIncrement: false});\r\n                objectStoreScripts.transaction.oncomplete = function(event) {}\r\n\r\n                let objectStoreDatabases = that.db.createObjectStore(\"databases\", { keyPath: \"databaseId\", autoIncrement: false});\r\n                objectStoreScripts.transaction.oncomplete = function(event) {}\r\n\r\n            }\r\n\r\n        } else {\r\n            console.log(\"IndexedDB not available.\");\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public writeScript(scriptId: string, script: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.put({\r\n            scriptId: scriptId,\r\n            script: script\r\n        });\r\n\r\n    }\r\n\r\n    public removeScript(scriptId: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.delete(scriptId);\r\n\r\n    }\r\n\r\n\r\n    public getScript(scriptId: string, callback: (script: string) => void){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        let request = scriptObjectStore.get(scriptId);\r\n\r\n        request.onerror = (event) => {\r\n            callback(null);\r\n        }\r\n\r\n        request.onsuccess = (event) => {\r\n            if(request.result == null){\r\n                callback(null);\r\n            } else {\r\n                callback(request.result.script);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public writeDatabase(databaseID: string, database: string){\r\n\r\n        let databaseObjectStore = this.db.transaction(\"databases\", \"readwrite\").objectStore(\"databases\");\r\n\r\n        databaseObjectStore.put({\r\n            databaseId: databaseID,\r\n            database: database\r\n        });\r\n\r\n    }\r\n\r\n    public removeDatabase(databaseId: string){\r\n\r\n        let databaseObjectStore = this.db.transaction(\"databases\", \"readwrite\").objectStore(\"databases\");\r\n\r\n        databaseObjectStore.delete(databaseId);\r\n\r\n    }\r\n\r\n\r\n    public getDatabase(databaseId: string, callback: (database: string) => void){\r\n\r\n        let databaseObjectStore = this.db.transaction(\"databases\", \"readwrite\").objectStore(\"databases\");\r\n\r\n        let request = databaseObjectStore.get(databaseId);\r\n\r\n        request.onerror = (event) => {\r\n            callback(null);\r\n        }\r\n\r\n        request.onsuccess = (event) => {\r\n            if(request.result == null){\r\n                callback(null);\r\n            } else {\r\n                callback(request.result.database);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { SQLStatement } from \"../compiler/parser/Parser.js\";\r\nimport { WriteQueryListener } from \"../main/gui/ResultsetPresenter.js\";\r\nimport { DatabaseTool } from \"../tools/DatabaseTools.js\";\r\nimport { EmbeddedIndexedDB } from \"./EmbeddedIndexedDB.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\n\r\n\r\nexport class WriteQueryManager implements WriteQueryListener {\r\n\r\n    indexedDB: EmbeddedIndexedDB;\r\n    databaseTool: DatabaseTool;\r\n\r\n    statementsToExecute: string[] = [];\r\n\r\n    writtenStatements: string[] = [];\r\n\r\n    statementsToWrite: string[] = [];\r\n\r\n\r\n    constructor(private main: MainEmbedded, private databaseIdentifier: string) {\r\n\r\n    }\r\n\r\n    indexedDBReady(indexedDB: EmbeddedIndexedDB) {\r\n        this.indexedDB = indexedDB;\r\n        this.indexedDB.getDatabase(this.databaseIdentifier, (db: string) => {\r\n            if (db != null) {\r\n                this.writtenStatements = JSON.parse(db);\r\n                this.statementsToExecute = this.writtenStatements.slice();\r\n\r\n                this.main.historyViewer.clear();\r\n                this.main.historyViewer.appendStatements(this.statementsToExecute);\r\n\r\n                this.executeStatements();\r\n                this.writeStatementsIfNecessary();\r\n            }\r\n        })\r\n    }\r\n\r\n    reset() {\r\n        this.statementsToWrite = [];\r\n        this.writtenStatements = [];\r\n        this.statementsToExecute = [];\r\n        this.main.historyViewer.clear();\r\n    }\r\n\r\n    writeStatementsIfNecessary() {\r\n        if (this.indexedDB != null && this.statementsToWrite.length > 0) {\r\n            this.forceWriteStatements();\r\n        }\r\n    }\r\n\r\n    forceWriteStatements() {\r\n        this.writtenStatements = this.writtenStatements.concat(this.statementsToWrite);\r\n        this.statementsToWrite = [];\r\n        this.indexedDB.writeDatabase(this.databaseIdentifier, JSON.stringify(this.writtenStatements));\r\n    }\r\n\r\n    atLeastOneExecuted: boolean = false;\r\n    count: number;\r\n    executeStatements() {\r\n        if (this.databaseTool != null && this.statementsToExecute.length > 0) {\r\n            if (!this.atLeastOneExecuted) {\r\n                this.main.$databaseResetButton.fadeIn(200);\r\n                this.count = this.statementsToExecute.length;\r\n                this.main.waitOverlay.show(\"Schreibe lokale Datenbankänderungen ...\");\r\n            }\r\n            this.main.waitOverlay.setProgress(Math.round(100 * (1 - this.statementsToExecute.length / this.count)) + \" %\")\r\n            let statement = this.statementsToExecute.shift();\r\n            this.databaseTool.executeQuery(statement, () => { this.executeStatements() }, () => { this.executeStatements });\r\n            this.atLeastOneExecuted = true;\r\n        } else {\r\n            if (this.atLeastOneExecuted) {\r\n                this.main.databaseExplorer.refresh();\r\n                this.atLeastOneExecuted = false;\r\n                this.main.waitOverlay.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    notify(statements: SQLStatement[]): void {\r\n        this.main.$databaseResetButton.fadeIn(200);\r\n        let statementsSql = statements.map(stmt => stmt.sqlCleaned == null ? stmt.sql : stmt.sqlCleaned);\r\n        this.statementsToWrite = this.statementsToWrite.concat(statementsSql);\r\n        this.main.historyViewer.appendStatements(statementsSql);\r\n        this.writeStatementsIfNecessary();\r\n    }\r\n\r\n    databaseReady(dbTool: DatabaseTool) {\r\n        this.databaseTool = dbTool;\r\n        this.executeStatements();\r\n    }\r\n\r\n    rollback() {\r\n        this.writeStatementsIfNecessary();\r\n        this.writtenStatements.pop();\r\n        this.forceWriteStatements();\r\n    }\r\n\r\n\r\n\r\n}","import { DatabaseTool } from \"./DatabaseTools.js\";\r\n\r\nexport type LoadableDatabase = {\r\n    binDump?: Uint8Array,\r\n    statements?: string[]\r\n}\r\n\r\nexport class Databaseloader {\r\n\r\n    public load(url: string, callback: (db: LoadableDatabase) => void) {\r\n        let urlWithoutProtocol = url.replace(\"https://\", \"\")\r\n            .replace(\"http://\", \"\").toLocaleLowerCase();\r\n\r\n        let isBinary = urlWithoutProtocol.endsWith(\".dbdump\");\r\n\r\n        if (isBinary) {\r\n            this.loadBinary(url, urlWithoutProtocol, callback);\r\n        } else {\r\n            this.loadSql(url, urlWithoutProtocol, callback);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    loadBinary(url: string, urlWithoutProtocol: string, callback: (db: LoadableDatabase) => void) {\r\n\r\n        this.fetchTemplateFromCache(urlWithoutProtocol, true, (templateDump: Uint8Array) => {\r\n\r\n            if (templateDump != null) {\r\n                // @ts-ignore\r\n                if (DatabaseTool.getDumpType(templateDump) == \"binaryCompressed\") templateDump = pako.inflate(templateDump);\r\n                callback({ binDump: templateDump })\r\n            }\r\n\r\n            let that = this;\r\n\r\n            jQuery.ajax({\r\n                type: 'GET',\r\n                async: true,\r\n                url: url,\r\n                xhrFields: { responseType: 'arraybuffer' },\r\n                success: function (response: any) {\r\n                    let db = new Uint8Array(response);\r\n                    // @ts-ignore\r\n                    if (DatabaseTool.getDumpType(db) == \"binaryCompressed\") db = pako.inflate(db);\r\n                    that.saveDatabaseToCache(urlWithoutProtocol, db);\r\n                    callback({ binDump: db });\r\n                },\r\n                error: function (jqXHR, message) {\r\n                    callback(null);\r\n                }\r\n            });\r\n\r\n\r\n        })\r\n\r\n    }\r\n\r\n    loadSql(url: string, urlWithoutProtocol: string, callback: (db: LoadableDatabase) => void) {\r\n\r\n        this.fetchTemplateFromCache(urlWithoutProtocol, false, (sql: string) => {\r\n            let that = this;\r\n            if (sql != null) callback({ statements: that.cutSqlToStatements(sql) })\r\n\r\n            jQuery.get(url, (sql: string) => {\r\n                that.saveDatabaseToCache(urlWithoutProtocol, sql);\r\n                callback({ statements: that.cutSqlToStatements(sql) });\r\n            }, \"text\")\r\n        });\r\n\r\n    }\r\n\r\n    cutSqlToStatements(sql: string): string[] {\r\n        sql = sql.replace(/\\r\\n/g, \"\\n\");\r\n\r\n        let statements: string[] = [];\r\n        if (sql.indexOf(\"~@~\") >= 0) {\r\n            statements = sql.split(\"~@~\");\r\n        } else {\r\n            statements = sql.split(\";\\n\");\r\n        }\r\n        return statements;\r\n    }\r\n\r\n\r\n    fetchTemplateFromCache(databaseIdentifier: string, isBinary: boolean, callback: (templateDump: Uint8Array | string) => void) {\r\n        if (databaseIdentifier == null) { callback(null); return; }\r\n        let that = this;\r\n        if (!this.cacheAvailable()) callback(null);\r\n        this.getCache((cache) => {\r\n            cache.match(databaseIdentifier).then(\r\n                (value) => {\r\n                    if (isBinary) {\r\n                        value.arrayBuffer().then((buffer) => callback(new Uint8Array(buffer)));\r\n                    } else {\r\n                        value.text().then((text) => callback(text));\r\n                    }\r\n                })\r\n                .catch(() => callback(null));\r\n        })\r\n    }\r\n\r\n    saveDatabaseToCache(databaseIdentifier: string, templateDump: Uint8Array | string) {\r\n        if (!this.cacheAvailable()) return;\r\n        let that = this;\r\n        this.getCache((cache) => {\r\n            cache.put(databaseIdentifier, new Response(templateDump));\r\n        })\r\n    }\r\n\r\n    cacheAvailable(): boolean {\r\n        return 'caches' in self;\r\n    }\r\n\r\n    getCache(callback: (cache: Cache) => void) {\r\n        caches.open('my-cache').then(callback);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { Module, File } from \"../compiler/parser/Module.js\";\r\nimport { ActionManager } from \"../main/gui/ActionManager.js\";\r\nimport { BottomDiv } from \"../main/gui/BottomDiv.js\";\r\nimport { Editor } from \"../main/gui/Editor.js\";\r\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\r\nimport { RightDiv } from \"../main/gui/RightDiv.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { JOScript } from \"./EmbeddedStarter.js\";\r\nimport { makeDiv, makeTabs, openContextMenu } from \"../tools/HtmlTools.js\";\r\nimport { EmbeddedSlider } from \"./EmbeddedSlider.js\";\r\nimport { EmbeddedFileExplorer } from \"./EmbeddedFileExplorer.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { EmbeddedIndexedDB } from \"./EmbeddedIndexedDB.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { DatabaseTool } from \"../tools/DatabaseTools.js\";\r\nimport { DatabaseExplorer } from \"../main/gui/DatabaseExplorer.js\";\r\nimport { ResultsetPresenter } from \"../main/gui/ResultsetPresenter.js\";\r\nimport { WaitOverlay } from \"../main/gui/WaitOverlay.js\";\r\nimport { WriteQueryManager } from \"./WriteQueryManager.js\";\r\nimport { Databaseloader } from \"../tools/DatabaseLoader.js\";\r\nimport { DatabaseImportExport } from \"../tools/DatabaseImportExport.js\";\r\nimport { HistoryViewer } from \"../main/gui/HistoryViewer.js\";\r\nimport { WDatabase } from \"../workspace/WDatabase.js\";\r\n\r\ntype JavaOnlineConfig = {\r\n    withFileList?: boolean,\r\n    withOutput?: boolean,\r\n    withErrorList?: boolean,\r\n    withBottomPanel?: boolean,\r\n    id?: string,\r\n    databaseFilename?: string\r\n}\r\n\r\nexport class MainEmbedded implements MainBase {\r\n    isEmbedded(): boolean { return true; }\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        if (this.config.withFileList) {\r\n            return this.fileExplorer.currentFile?.module;\r\n        } else {\r\n            return this.currentWorkspace.moduleStore.getFirstModule();\r\n        }\r\n    }\r\n\r\n    getDatabaseTool(): DatabaseTool {\r\n        return this.databaseTool;\r\n    }\r\n\r\n    getDatabaseExplorer(): DatabaseExplorer {\r\n        return this.databaseExplorer;\r\n    }\r\n\r\n    getResultsetPresenter(): ResultsetPresenter {\r\n        return this.resultsetPresenter;\r\n    }\r\n\r\n    getWaitOverlay(): WaitOverlay {\r\n        return this.waitOverlay;\r\n    }\r\n\r\n    getHistoryViewer(): HistoryViewer {\r\n        return this.historyViewer;\r\n    }\r\n\r\n    config: JavaOnlineConfig;\r\n\r\n    editor: Editor;\r\n    programPointerDecoration: string[] = [];\r\n    programPointerModule: Module;\r\n\r\n    currentWorkspace: Workspace;\r\n    actionManager: ActionManager;\r\n\r\n    compiler: Compiler;\r\n\r\n    $dbTreeDiv: JQuery<HTMLElement>;\r\n\r\n    $debuggerDiv: JQuery<HTMLElement>;\r\n\r\n    bottomDiv: BottomDiv;\r\n    $filesListDiv: JQuery<HTMLElement>;\r\n\r\n    $hintDiv: JQuery<HTMLElement>;\r\n    $monacoDiv: JQuery<HTMLElement>;\r\n    $codeResetButton: JQuery<HTMLElement>;\r\n    $databaseResetButton: JQuery<HTMLElement>;\r\n\r\n    programIsExecutable = false;\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    rightDiv: RightDiv;\r\n    $rightDivInner: JQuery<HTMLElement>;\r\n\r\n    fileExplorer: EmbeddedFileExplorer;\r\n\r\n    debounceDiagramDrawing: any;\r\n\r\n    indexedDB: EmbeddedIndexedDB;\r\n\r\n    compileRunsAfterCodeReset: number = 0;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    databaseTool: DatabaseTool;\r\n\r\n    databaseExplorer: DatabaseExplorer;\r\n\r\n    waitOverlay: WaitOverlay;\r\n\r\n    resultsetPresenter: ResultsetPresenter;\r\n\r\n    writeQueryManager: WriteQueryManager;\r\n\r\n    historyViewer: HistoryViewer;\r\n\r\n    initialTemplateDump: Uint8Array;\r\n    initialStatements: string[];\r\n\r\n    constructor($div: JQuery<HTMLElement>, private scriptList: JOScript[]) {\r\n\r\n        this.readConfig($div);\r\n\r\n        this.writeQueryManager = new WriteQueryManager(this, this.config.databaseFilename);\r\n\r\n        this.initGUI($div);\r\n\r\n\r\n        this.databaseExplorer = new DatabaseExplorer(this, this.$dbTreeDiv);\r\n        this.databaseTool = new DatabaseTool(this);\r\n        if (this.config.databaseFilename != null) {\r\n            new Databaseloader().load(this.config.databaseFilename, (loadableDb) => {\r\n                this.initialTemplateDump = loadableDb.binDump;\r\n                this.initialStatements = loadableDb.statements == null ? [] : loadableDb.statements;\r\n                this.resetDatabase(() => {\r\n                    this.initScripts();\r\n\r\n                    this.indexedDB = new EmbeddedIndexedDB(\"SQL-IDE\");\r\n                    this.indexedDB.open(() => {\r\n\r\n                        if (this.config.id != null) {\r\n                            this.writeQueryManager.indexedDBReady(this.indexedDB);\r\n                            this.readScripts();\r\n                        }\r\n\r\n                    });\r\n\r\n                });\r\n            })\r\n        }\r\n\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n    }\r\n\r\n    resetDatabase(callback: () => void) {\r\n        this.databaseTool.initializeWorker(this.initialTemplateDump, this.initialStatements, () => { }, () => {\r\n            this.writeQueryManager.databaseReady(this.databaseTool);\r\n            this.databaseExplorer.refreshAfterRetrievingDBStructure();\r\n            callback();\r\n        })\r\n    }\r\n\r\n    initScripts() {\r\n\r\n        this.fileExplorer?.removeAllFiles();\r\n\r\n        this.initWorkspace(this.scriptList);\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer = new EmbeddedFileExplorer(this.currentWorkspace.moduleStore, this.$filesListDiv, this);\r\n            this.fileExplorer.setFirstFileActive();\r\n            this.scriptList.filter((script) => script.type == \"hint\").forEach((script) => this.fileExplorer.addHint(script));\r\n        } else {\r\n            this.setModuleActive(this.currentWorkspace.moduleStore.getFirstModule());\r\n        }\r\n\r\n    }\r\n\r\n\r\n    readConfig($div: JQuery<HTMLElement>) {\r\n        let configJson: string | object = $div.data(\"sql-online\");\r\n        if (configJson != null && typeof configJson == \"string\") {\r\n            this.config = JSON.parse(configJson.split(\"'\").join('\"'));\r\n        } else {\r\n            this.config = {}\r\n        }\r\n\r\n        if (this.config.withFileList == null) this.config.withFileList = false;\r\n        if (this.config.withOutput == null) this.config.withOutput = true;\r\n        if (this.config.withErrorList == null) this.config.withErrorList = true;\r\n        if (this.config.withBottomPanel == null) this.config.withBottomPanel = true;\r\n\r\n        if (!(this.config.withOutput || this.config.withFileList || this.config.withErrorList)) {\r\n            this.config.withBottomPanel = false;\r\n        }\r\n\r\n        if (!this.config.withBottomPanel) {\r\n            this.config.withFileList = false;\r\n            this.config.withOutput = false;\r\n            this.config.withErrorList = false;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n\r\n        if (this.config.withFileList && this.fileExplorer.currentFile != null) {\r\n            this.fileExplorer.currentFile.module.editorState = this.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer.markFile(module);\r\n        }\r\n\r\n        /**\r\n         * WICHTIG: Die Reihenfolge der beiden Operationen ist extrem wichtig.\r\n         * Falls das Model im readonly-Zustand gesetzt wird, funktioniert <Strg + .> \r\n         * nicht und die Lightbulbs werden nicht angezeigt, selbst dann, wenn\r\n         * später readonly = false gesetzt wird.\r\n         */\r\n        this.getMonacoEditor().updateOptions({\r\n            readOnly: false,\r\n            lineNumbersMinChars: 4\r\n        });\r\n        this.editor.editor.setModel(module.model);\r\n\r\n\r\n        if (module.editorState != null) {\r\n            this.getMonacoEditor().restoreViewState(module.editorState);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    readScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let that = this;\r\n\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                setInterval(() => {\r\n                    that.saveScripts();\r\n                }, 1000);\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n                let countDown = scriptList.length;\r\n\r\n                for (let module of modules) {\r\n                    that.fileExplorer?.removeModule(module);\r\n                    that.removeModule(module);\r\n                }\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.getScript(scriptId, (script) => {\r\n                        if (script != null) {\r\n\r\n                            let module = that.addModule({\r\n                                title: name,\r\n                                text: script,\r\n                                type: \"sql\"\r\n                            });\r\n\r\n                            that.fileExplorer?.addModule(module);\r\n                            that.$codeResetButton.fadeIn(1000);\r\n\r\n                            // console.log(\"Retrieving script \" + scriptId);\r\n                        }\r\n                        countDown--;\r\n                        if (countDown == 0) {\r\n                            setInterval(() => {\r\n                                that.saveScripts();\r\n                            }, 1000);\r\n                            that.fileExplorer?.setFirstFileActive();\r\n                            if (that.fileExplorer == null) {\r\n                                let modules = that.currentWorkspace.moduleStore.getModules(false);\r\n                                if (modules.length > 0) that.setModuleActive(modules[0]);\r\n                            }\r\n                        }\r\n                    })\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    saveScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let scriptList: string[] = [];\r\n        let oneNotSaved: boolean = false;\r\n\r\n        modules.forEach(m => oneNotSaved = oneNotSaved || !m.file.saved);\r\n\r\n        if (oneNotSaved) {\r\n\r\n            for (let module of modules) {\r\n                scriptList.push(module.file.name);\r\n                let scriptId = this.config.id + module.file.name;\r\n                this.indexedDB.writeScript(scriptId, module.getProgramTextFromMonacoModel());\r\n                module.file.saved = true;\r\n                // console.log(\"Saving script \" + scriptId);\r\n            }\r\n\r\n            this.indexedDB.writeScript(this.config.id, JSON.stringify(scriptList));\r\n        }\r\n\r\n    }\r\n\r\n    deleteScriptsInDB() {\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                return;\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.removeScript(scriptId);\r\n                }\r\n\r\n                this.indexedDB.removeScript(this.config.id);\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    initWorkspace(scriptList: JOScript[]) {\r\n        this.currentWorkspace = new Workspace(\"Embedded-Workspace\", this, 0);\r\n\r\n        let i = 0;\r\n        for (let script of scriptList) {\r\n            if (script.type == \"sql\") {\r\n                this.addModule(script);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    addModule(script: JOScript): Module {\r\n        let module: Module = Module.restoreFromData({\r\n            id: this.currentWorkspace.moduleStore.getModules(true).length,\r\n            name: script.title,\r\n            text: script.text,\r\n            text_before_revision: null,\r\n            submitted_date: null,\r\n            student_edited_after_revision: false,\r\n            version: 1,\r\n            workspace_id: 0,\r\n            forceUpdate: false,\r\n            file_type: 11\r\n        }, this);\r\n\r\n        this.currentWorkspace.moduleStore.putModule(module);\r\n\r\n        let that = this;\r\n\r\n        module.model.onDidChangeContent(() => {\r\n            that.considerShowingCodeResetButton();\r\n        });\r\n\r\n        return module;\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        this.currentWorkspace.moduleStore.removeModule(module);\r\n    }\r\n\r\n\r\n    initGUI($div: JQuery<HTMLElement>) {\r\n\r\n        // let $leftDiv = jQuery('<div class=\"joe_leftDiv\"></div>');\r\n\r\n        $div.css({\r\n            \"background-image\": \"none\",\r\n            \"background-size\": \"100%\"\r\n        })\r\n\r\n        let $centerDiv = jQuery('<div class=\"joe_centerDiv\"></div>');\r\n\r\n        // let $topDiv = jQuery('<div class=\"joe_topDiv\"></div>');\r\n        // $div.append($topDiv);\r\n        $div.append($centerDiv);\r\n\r\n        let $waitDiv = this.makeWaitDiv();\r\n        $div.append($waitDiv);\r\n        this.waitOverlay = new WaitOverlay($waitDiv);\r\n\r\n        let $codeResetModalWindow = this.makeCodeResetModalWindow($div);\r\n        let $databaseResetModalWindow = this.makeDatabaseResetModalWindow($div);\r\n\r\n        let $rightDiv = this.makeRightDiv();\r\n\r\n        let $editorDiv = jQuery('<div class=\"joe_editorDiv\"></div>');\r\n        this.$monacoDiv = jQuery('<div class=\"joe_monacoDiv\"></div>');\r\n        this.$hintDiv = jQuery('<div class=\"joe_hintDiv jo_scrollable\"></div>');\r\n        this.$codeResetButton = jQuery('<div class=\"joe_codeResetButton jo_button jo_active\" title=\"Code auf Ausgangszustand zurücksetzen\">Code Reset</div>');\r\n        this.$databaseResetButton = jQuery('<div class=\"joe_databaseResetButton jo_button jo_active\" title=\"Datenbank auf Ausgangszustand zurücksetzen\">Datenbank Reset</div>');\r\n\r\n        $editorDiv.append(this.$monacoDiv, this.$hintDiv, this.$codeResetButton, this.$databaseResetButton);\r\n\r\n        let $bracketErrorDiv = this.makeBracketErrorDiv();\r\n        $editorDiv.append($bracketErrorDiv);\r\n\r\n        // $topDiv.append($editorDiv);\r\n\r\n        this.$codeResetButton.hide();\r\n\r\n        this.$codeResetButton.on(\"click\", () => { $codeResetModalWindow.show(); })\r\n\r\n        this.$databaseResetButton.hide();\r\n\r\n        this.$databaseResetButton.on(\"click\", () => { $databaseResetModalWindow.show(); })\r\n\r\n        this.$hintDiv.hide();\r\n\r\n        let $controlsDiv = jQuery('<div class=\"joe_controlsDiv\"></div>');\r\n        let $bottomDivInner = jQuery('<div class=\"joe_bottomDivInner\"></div>');\r\n\r\n\r\n        let $bottomDiv = jQuery('<div class=\"joe_bottomDiv\"></div>');\r\n        this.makeBottomDiv($bottomDivInner, $controlsDiv);\r\n        $bottomDiv.append($bottomDivInner);\r\n        if (this.config.withFileList) {\r\n            let $filesDiv = this.makeFilesDiv();\r\n            $bottomDiv.prepend($filesDiv);\r\n            new EmbeddedSlider($filesDiv, false, false, () => { });\r\n        }\r\n        makeTabs($bottomDivInner);\r\n        $div.append($bottomDiv);\r\n\r\n        $div.addClass('joe_javaOnlineDiv');\r\n\r\n        this.editor = new Editor(this, false, true);\r\n        this.editor.initGUI(this.$monacoDiv);\r\n        this.$monacoDiv.find('.monaco-editor').css('z-index', '10');\r\n\r\n        if ($div.attr('tabindex') == null) $div.attr('tabindex', \"0\");\r\n        this.actionManager = new ActionManager($div, this);\r\n        this.actionManager.init();\r\n\r\n        this.bottomDiv = new BottomDiv(this, $bottomDivInner, $div);\r\n        this.bottomDiv.initGUI();\r\n\r\n        this.rightDiv = new RightDiv(this, this.$rightDivInner);\r\n        this.rightDiv.initGUI();\r\n\r\n        $centerDiv.append($editorDiv, $bottomDiv)\r\n        $div.append($rightDiv);\r\n\r\n        let $rightSideContainer = jQuery('<div class=\"jo_rightdiv-rightside-container\"></div>');\r\n        let $infoButton = jQuery('<div class=\"jo_button jo_active img_ellipsis-dark\" style=\"margin-right: 10px\"></div>');\r\n\r\n        $controlsDiv.append($infoButton);\r\n\r\n        this.$rightDivInner.append($rightSideContainer);\r\n\r\n        new EmbeddedSlider($rightDiv, true, false, () => {\r\n            this.editor.editor.layout();\r\n        });\r\n\r\n        new EmbeddedSlider($bottomDiv, true, true, () => { this.editor.editor.layout(); });\r\n\r\n        $infoButton.on('mouseup', (ev) => {\r\n            ev.preventDefault();\r\n            ev.stopPropagation();\r\n            openContextMenu([{\r\n                caption: \"Über die Online-IDE ...\",\r\n                link: \"https://learnj.de\",\r\n                callback: () => {\r\n                    // nothing to do.\r\n                }\r\n            }], ev.pageX + 2, ev.pageY + 2);\r\n        });\r\n\r\n\r\n        let $buttonOpen = jQuery('<label type=\"file\" class=\"img_open-file jo_button jo_active\"' +\r\n            'style=\"margin-right: 8px;\" title=\"Workspace aus Datei laden\"><input type=\"file\" style=\"display:none\"></label>');\r\n\r\n        let that = this;\r\n\r\n        $buttonOpen.find('input').on('change', (event) => {\r\n            //@ts-ignore\r\n            var files: FileList = event.originalEvent.target.files;\r\n            that.loadDatabaseFromFile(files[0]);\r\n        })\r\n\r\n        let $buttonSave = jQuery('<div class=\"img_save-dark jo_button jo_active\"' +\r\n            'style=\"margin-right: 8px;\" title=\"Workspace in Datei speichern\"></div>');\r\n\r\n\r\n        $buttonSave.on('click', () => { that.saveDatabaseToFile() });\r\n\r\n        $controlsDiv.append($buttonOpen, $buttonSave);\r\n\r\n        this.resultsetPresenter = new ResultsetPresenter(this, $bottomDivInner);\r\n        this.resultsetPresenter.addWriteQueryListener(this.writeQueryManager);\r\n\r\n\r\n        new ProgramControlButtons(this, $controlsDiv);\r\n\r\n        this.historyViewer = new HistoryViewer(this, $div.find('.jo_historyTab'));\r\n\r\n        setTimeout(() => {\r\n            this.editor.editor.layout();\r\n            this.compiler = new Compiler(this);\r\n            this.startTimer();\r\n        }, 200);\r\n\r\n\r\n    }\r\n\r\n    saveDatabaseToFile() {\r\n        new DatabaseImportExport().saveToFile(this.databaseTool);\r\n    }\r\n\r\n    loadDatabaseFromFile(file: globalThis.File) {\r\n        new DatabaseImportExport().loadFromFile(file, (db) => {\r\n            if (db == null) {\r\n                alert('Es ist ein Fehler beim Import aufgetreten.');\r\n                return;\r\n            }\r\n            this.databaseTool.initializeWorker(db.binDump, [], (errors) => {\r\n                if (errors.length > 0) {\r\n                    alert('Es sind Fehler beim Import aufgetreten. Ausführliche Fehlermeldungen sehen Sie in der Konsole (F12).')\r\n                    console.log(errors)\r\n                }\r\n            }, () => {\r\n                this.databaseExplorer.refreshAfterRetrievingDBStructure()\r\n            })\r\n        })\r\n    }\r\n\r\n    makeWaitDiv(): JQuery<HTMLElement> {\r\n        let waitHtml = `\r\n        <div class=\"bitteWarten\">\r\n        <div style=\"margin-bottom: 30px\">\r\n            <div class=\"bitteWartenText\"></div>\r\n        </div>\r\n        <div>\r\n            <img src=\"assets/projectexplorer/svg-loaders/grid.svg\" alt=\"\">\r\n        </div>\r\n        <div class=\"bitteWartenProgress\"></div>\r\n        </div>\r\n        `;\r\n        return jQuery(waitHtml);\r\n    }\r\n\r\n    makeBracketErrorDiv(): JQuery<HTMLElement> {\r\n        return jQuery(`\r\n        <div class=\"jo_parenthesis_warning\" title=\"Klammerwarnung!\" style=\"bottom: 55px\">\r\n        <div class=\"jo_warning_light\"></div>\r\n        <div class=\"jo_pw_heading\">{ }</div>\r\n        <div title=\"Letzten Schritt rückgängig\" \r\n            class=\"jo_pw_undo img_undo jo_button jo_active\"></div>\r\n        </div>\r\n        `);\r\n    }\r\n\r\n    makeCodeResetModalWindow($parent: JQuery<HTMLElement>): JQuery<HTMLElement> {\r\n        let $window = jQuery(\r\n            `\r\n            <div class=\"joe_codeResetModal\">\r\n            <div style=\"flex: 1\"></div>\r\n            <div style=\"display: flex\">\r\n                <div style=\"flex: 1\"></div>\r\n                <div style=\"padding-left: 30px;\">\r\n                <div style=\"color: red; margin-bottom: 10px; font-weight: bold\">Warnung:</div>\r\n                <div>Soll der Code wirklich auf den Ausgangszustand zurückgesetzt werden?</div>\r\n                <div>Alle von Dir gemachten Änderungen werden damit verworfen.</div>\r\n                </div>\r\n                <div style=\"flex: 1\"></div>\r\n            </div>\r\n            <div class=\"joe_codeResetModalButtons\">\r\n            <div class=\"joe_codeResetModalCancel jo_button jo_active\">Abbrechen</div>\r\n            <div class=\"joe_codeResetModalOK jo_button jo_active\">OK</div>\r\n            </div>\r\n            <div style=\"flex: 2\"></div>\r\n            </div>\r\n        `\r\n        );\r\n\r\n        $window.hide();\r\n\r\n        $parent.append($window);\r\n\r\n        $parent.find(\".joe_codeResetModalCancel\").on(\"click\", () => {\r\n            $window.hide();\r\n        });\r\n\r\n        $parent.find(\".joe_codeResetModalOK\").on(\"click\", () => {\r\n\r\n            this.initScripts();\r\n            this.deleteScriptsInDB();\r\n\r\n            $window.hide();\r\n            this.$codeResetButton.hide();\r\n            this.compileRunsAfterCodeReset = 1;\r\n\r\n        });\r\n\r\n        return $window;\r\n    }\r\n\r\n    makeDatabaseResetModalWindow($parent: JQuery<HTMLElement>): JQuery<HTMLElement> {\r\n        let $window = jQuery(\r\n            `\r\n            <div class=\"joe_databaseResetModal\">\r\n            <div style=\"flex: 1\"></div>\r\n            <div style=\"display: flex\">\r\n                <div style=\"flex: 1\"></div>\r\n                <div style=\"padding-left: 30px;\">\r\n                <div style=\"color: red; margin-bottom: 10px; font-weight: bold\">Warnung:</div>\r\n                <div>Soll die Datenbank wirklich auf den Ausgangszustand zurückgesetzt werden?</div>\r\n                <div>Alle bisher ausgeführten Anweisungen (siehe Tab Write History) werden dann rückgängig gemacht.</div>\r\n                </div>\r\n                <div style=\"flex: 1\"></div>\r\n            </div>\r\n            <div class=\"joe_databaseResetModalButtons\">\r\n            <div class=\"joe_databaseResetModalCancel jo_button jo_active\">Abbrechen</div>\r\n            <div class=\"joe_databaseResetModalOK jo_button jo_active\">OK</div>\r\n            </div>\r\n            <div style=\"flex: 2\"></div>\r\n            </div>\r\n        `\r\n        );\r\n\r\n        $window.hide();\r\n\r\n        $parent.append($window);\r\n\r\n        $parent.find(\".joe_databaseResetModalCancel\").on(\"click\", () => {\r\n            $window.hide();\r\n        });\r\n\r\n        $parent.find(\".joe_databaseResetModalOK\").on(\"click\", () => {\r\n\r\n            $window.hide();\r\n            this.resetDatabase(() => {\r\n                this.writeQueryManager.reset();\r\n            });\r\n\r\n            this.$databaseResetButton.hide();\r\n            this.compileRunsAfterCodeReset = 1;\r\n\r\n        });\r\n\r\n        return $window;\r\n    }\r\n\r\n    makeFilesDiv(): JQuery<HTMLElement> {\r\n\r\n\r\n        let $filesDiv = jQuery('<div class=\"joe_bottomDivFiles jo_scrollable\"></div>');\r\n\r\n        let $filesHeader = jQuery('<div class=\"joe_filesHeader jo_tabheading jo_active\"  style=\"line-height: 24px\">Dateien</div>');\r\n\r\n        this.$filesListDiv = jQuery('<div class=\"joe_filesList jo_scrollable\"></div>');\r\n\r\n        $filesDiv.append($filesHeader, this.$filesListDiv);\r\n\r\n        return $filesDiv;\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling && this.getDatabaseTool().databaseStructure != null) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.\r\n                    bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                this.version++;\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    considerShowingCodeResetButton() {\r\n        this.compileRunsAfterCodeReset++;\r\n        if (this.compileRunsAfterCodeReset == 3) {\r\n            this.$codeResetButton.fadeIn(1000);\r\n        }\r\n    }\r\n\r\n    makeBottomDiv($bottomDiv: JQuery<HTMLElement>, $buttonDiv: JQuery<HTMLElement>) {\r\n\r\n        let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n        $tabheadings.css('position', 'relative');\r\n        let $thLeftSide = jQuery('<div class=\"joe_tabheading-right jo_noHeading joe_controlsTabheading\"></div>');\r\n\r\n        $thLeftSide.append($buttonDiv);\r\n        $tabheadings.append($thLeftSide);\r\n\r\n        if (this.config.withErrorList) {\r\n            let $thErrors = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_errorsTab\" style=\"line-height: 24px\">Fehler</div>');\r\n            $tabheadings.append($thErrors);\r\n        }\r\n\r\n        if (this.config.withOutput) {\r\n            let $thPCode = jQuery('<div class=\"jo_tabheading jo_resultTabheading\" data-target=\"jo_resultTab\" style=\"line-height: 24px\">Ausgabe</div>');\r\n            $tabheadings.append($thPCode);\r\n        }\r\n\r\n        let $thRuntimeError = jQuery('<div class=\"jo_tabheading jo_runtimeerrorsTabheading\" data-target=\"jo_runtimeerrorsTab\" style=\"line-height: 24px\">Fehler bei Ausführung</div>');\r\n        $tabheadings.append($thRuntimeError);\r\n\r\n        let $thHistory = jQuery('<div class=\"jo_tabheading jo_historyTabheading\" data-target=\"jo_historyTab\" style=\"line-height: 24px\">Write History</div>');\r\n        $tabheadings.append($thHistory);\r\n\r\n        let $thRightSide = jQuery('<div class=\"joe_tabheading-right jo_noHeading joe_paginationHeading\"><div class=\"jo_pagination\"></div></div>');\r\n        $tabheadings.append($thRightSide);\r\n\r\n        $bottomDiv.append($tabheadings);\r\n\r\n        let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n\r\n        if (this.config.withErrorList) {\r\n            let $tabError = jQuery('<div class=\"jo_active jo_scrollable jo_errorsTab\"></div>');\r\n            $tabs.append($tabError);\r\n        }\r\n\r\n        if (this.config.withOutput) {\r\n            let $tabPCode = jQuery(`<div class=\"jo_editorFontSize jo_resultTab\">\r\n            <div class=\"jo_result-inner\">\r\n                <div class=\"jo_result-header\"></div>\r\n                <div class=\"jo_scrollable jo_result-body\"></div>\r\n            </div>\r\n            </div>\r\n    `);\r\n            $tabs.append($tabPCode);\r\n        }\r\n\r\n        let $tabRtErrors = jQuery('<div class=\"jo_scrollable jo_runtimeerrorsTab\"></div>');\r\n        $tabs.append($tabRtErrors);\r\n\r\n        let $tabHistory = jQuery('<div class=\"jo_scrollable jo_historyTab\"></div>');\r\n        $tabs.append($tabHistory);\r\n\r\n\r\n        $bottomDiv.append($tabs);\r\n\r\n    }\r\n\r\n    makeRightDiv(): JQuery<HTMLElement> {\r\n\r\n        let $rightDiv = jQuery('<div class=\"joe_rightDiv\"></div>');\r\n        this.$rightDivInner = jQuery('<div class=\"joe_rightDivInner\"></div>');\r\n        $rightDiv.append(this.$rightDivInner);\r\n\r\n\r\n        let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n        $tabheadings.css('position', 'relative');\r\n        let $thRun = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_db_tree\" style=\"line-height: 24px\">DB (Baum)</div>');\r\n        let $thVariables = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_db_list\" style=\"line-height: 24px\">DB (Liste)</div>');\r\n        $tabheadings.append($thRun, $thVariables);\r\n        this.$rightDivInner.append($tabheadings);\r\n\r\n        let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n        let $vd = jQuery('<div class=\"jo_tab jo_scrollable jo_editorFontSize jo_db_list\">DB-Liste</div>');\r\n\r\n        this.$dbTreeDiv = jQuery(`<div class=\"jo_tab jo_scrollable jo_editorFontSize jo_active jo_db_tree\">DB-Baum</div>`);\r\n\r\n        $tabs.append(this.$dbTreeDiv, $vd);\r\n        this.$rightDivInner.append($tabs);\r\n\r\n        makeTabs($rightDiv);\r\n\r\n        return $rightDiv;\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Formatter } from \"../main/gui/Formatter.js\";\r\nimport { ThemeManager } from \"../main/gui/ThemeManager.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\n\r\n// declare const require: any;\r\n\r\nexport type ScriptType = \"sql\" | \"hint\";\r\n\r\nexport type JOScript = {\r\n    type: ScriptType;\r\n    title: string;\r\n    text: string;\r\n}\r\n\r\nexport class EmbeddedStarter {\r\n\r\n\r\n    startupComplete = 2;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    mainEmbeddedList: MainEmbedded[] = [];\r\n\r\n    initGUI() {\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.themeManager = new ThemeManager();\r\n    }\r\n\r\n    initEditor() {\r\n        new Formatter().init();\r\n        this.checkStartupComplete();\r\n    }\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    start() {\r\n\r\n        this.initJavaOnlineDivs();\r\n\r\n    }\r\n\r\n    initJavaOnlineDivs() {\r\n        \r\n        jQuery('.sql-online').each((index: number, element: HTMLElement) => {\r\n            let $div = jQuery(element);\r\n            let scriptList: JOScript[] = [];\r\n            $div.find('script').each((index: number, element: HTMLElement) => {\r\n                let $script = jQuery(element);\r\n                let type: ScriptType = \"sql\";\r\n                if($script.data('type') != null) type = <ScriptType>($script.data('type'));\r\n                let script: JOScript = {\r\n                    type: type,\r\n                    title: $script.attr('title'),\r\n                    text: $script.text().trim()\r\n                };\r\n                scriptList.push(script);\r\n            });\r\n\r\n            this.initDiv($div, scriptList);\r\n\r\n        });\r\n\r\n    }\r\n\r\n    initDiv($div: JQuery<HTMLElement>, scriptList: JOScript[]) {\r\n\r\n        let me: MainEmbedded = new MainEmbedded($div, scriptList);\r\n\r\n    }\r\n\r\n}\r\n\r\njQuery(function () {\r\n\r\n    let embeddedStarter = new EmbeddedStarter();\r\n\r\n    let prefix = \"\";\r\n    let editorPath = \"lib/monaco-editor/dev/vs\"\r\n    //@ts-ignore\r\n    if(window.javaOnlineDir != null){\r\n        //@ts-ignore\r\n        prefix = window.javaOnlineDir;\r\n    }\r\n\r\n    //@ts-ignore\r\n    if(window.monacoEditorPath != null){\r\n        //@ts-ignore\r\n        editorPath = window.monacoEditorPath;\r\n    }\r\n\r\n    //@ts-ignore\r\n    window.require.config({ paths: { 'vs': prefix + editorPath } });\r\n    //@ts-ignore\r\n    window.require.config({\r\n        'vs/nls': {\r\n            availableLanguages: {\r\n                '*': 'de'\r\n            }\r\n        },\r\n        ignoreDuplicateModules: [\"vs/editor/editor.main\"]\r\n    });\r\n    //@ts-ignore\r\n    window.require(['vs/editor/editor.main'], function () {\r\n\r\n        embeddedStarter.initEditor();\r\n        embeddedStarter.initGUI();\r\n\r\n    });\r\n\r\n});\r\n"],"sourceRoot":""}