{"version":3,"file":"sql-ide-embedded.js","mappings":"kGAOA,IAAIA,EAAW,SAAUC,GACvB,aAEA,IAGIC,EAHAC,EAAKC,OAAOC,UACZC,EAASH,EAAGI,eACZC,EAAiBJ,OAAOI,gBAAkB,SAAUC,EAAKC,EAAKC,GAAQF,EAAIC,GAAOC,EAAKC,KAAO,EAE7FC,EAA4B,mBAAXC,OAAwBA,OAAS,CAAC,EACnDC,EAAiBF,EAAQG,UAAY,aACrCC,EAAsBJ,EAAQK,eAAiB,kBAC/CC,EAAoBN,EAAQO,aAAe,gBAE/C,SAASC,EAAOZ,EAAKC,EAAKE,GAOxB,OANAR,OAAOI,eAAeC,EAAKC,EAAK,CAC9BE,MAAOA,EACPU,YAAY,EACZC,cAAc,EACdC,UAAU,IAELf,EAAIC,EACb,CACA,IAEEW,EAAO,CAAC,EAAG,GAKb,CAJE,MAAOI,GACPJ,EAAS,SAASZ,EAAKC,EAAKE,GAC1B,OAAOH,EAAIC,GAAOE,CACpB,CACF,CAEA,SAASc,EAAKC,EAASC,EAASC,EAAMC,GAEpC,IAAIC,EAAiBH,GAAWA,EAAQvB,qBAAqB2B,EAAYJ,EAAUI,EAC/EC,EAAY7B,OAAO8B,OAAOH,EAAe1B,WACzC8B,EAAU,IAAIC,EAAQN,GAAe,IAMzC,OAFAtB,EAAeyB,EAAW,UAAW,CAAErB,MAAOyB,EAAiBV,EAASE,EAAMM,KAEvEF,CACT,CAaA,SAASK,EAASC,EAAI9B,EAAK+B,GACzB,IACE,MAAO,CAAEC,KAAM,SAAUD,IAAKD,EAAGG,KAAKjC,EAAK+B,GAG7C,CAFE,MAAOf,GACP,MAAO,CAAEgB,KAAM,QAASD,IAAKf,EAC/B,CACF,CAlBAxB,EAAQyB,KAAOA,EAoBf,IAAIiB,EAAyB,iBAEzBC,EAAoB,YACpBC,EAAoB,YAIpBC,EAAmB,CAAC,EAMxB,SAASd,IAAa,CACtB,SAASe,IAAqB,CAC9B,SAASC,IAA8B,CAIvC,IAAIC,EAAoB,CAAC,EACzB5B,EAAO4B,EAAmBlC,GAAgB,WACxC,OAAOmC,IACT,IAEA,IAAIC,EAAW/C,OAAOgD,eAClBC,EAA0BF,GAAYA,EAASA,EAASG,EAAO,MAC/DD,GACAA,IAA4BlD,GAC5BG,EAAOoC,KAAKW,EAAyBtC,KAGvCkC,EAAoBI,GAGtB,IAAIE,EAAKP,EAA2B3C,UAClC2B,EAAU3B,UAAYD,OAAO8B,OAAOe,GAgBtC,SAASO,EAAsBnD,GAC7B,CAAC,OAAQ,QAAS,UAAUoD,SAAQ,SAASC,GAC3CrC,EAAOhB,EAAWqD,GAAQ,SAASlB,GACjC,OAAOU,KAAKS,QAAQD,EAAQlB,EAC9B,GACF,GACF,CA+BA,SAASoB,EAAc3B,EAAW4B,GAChC,SAASC,EAAOJ,EAAQlB,EAAKuB,EAASC,GACpC,IAAIC,EAAS3B,EAASL,EAAUyB,GAASzB,EAAWO,GACpD,GAAoB,UAAhByB,EAAOxB,KAEJ,CACL,IAAIyB,EAASD,EAAOzB,IAChB5B,EAAQsD,EAAOtD,MACnB,OAAIA,GACiB,iBAAVA,GACPN,EAAOoC,KAAK9B,EAAO,WACdiD,EAAYE,QAAQnD,EAAMuD,SAASC,MAAK,SAASxD,GACtDkD,EAAO,OAAQlD,EAAOmD,EAASC,EACjC,IAAG,SAASvC,GACVqC,EAAO,QAASrC,EAAKsC,EAASC,EAChC,IAGKH,EAAYE,QAAQnD,GAAOwD,MAAK,SAASC,GAI9CH,EAAOtD,MAAQyD,EACfN,EAAQG,EACV,IAAG,SAASI,GAGV,OAAOR,EAAO,QAASQ,EAAOP,EAASC,EACzC,GACF,CAzBEA,EAAOC,EAAOzB,IA0BlB,CAEA,IAAI+B,EAgCJ/D,EAAe0C,KAAM,UAAW,CAAEtC,MA9BlC,SAAiB8C,EAAQlB,GACvB,SAASgC,IACP,OAAO,IAAIX,GAAY,SAASE,EAASC,GACvCF,EAAOJ,EAAQlB,EAAKuB,EAASC,EAC/B,GACF,CAEA,OAAOO,EAaLA,EAAkBA,EAAgBH,KAChCI,EAGAA,GACEA,GACR,GAKF,CA0BA,SAASnC,EAAiBV,EAASE,EAAMM,GACvC,IAAIsC,EAAQ9B,EAEZ,OAAO,SAAgBe,EAAQlB,GAC7B,GAAIiC,IAAU7B,EACZ,MAAM,IAAI8B,MAAM,gCAGlB,GAAID,IAAU5B,EAAmB,CAC/B,GAAe,UAAXa,EACF,MAAMlB,EAKR,OAAOmC,GACT,CAKA,IAHAxC,EAAQuB,OAASA,EACjBvB,EAAQK,IAAMA,IAED,CACX,IAAIoC,EAAWzC,EAAQyC,SACvB,GAAIA,EAAU,CACZ,IAAIC,EAAiBC,EAAoBF,EAAUzC,GACnD,GAAI0C,EAAgB,CAClB,GAAIA,IAAmB/B,EAAkB,SACzC,OAAO+B,CACT,CACF,CAEA,GAAuB,SAAnB1C,EAAQuB,OAGVvB,EAAQ4C,KAAO5C,EAAQ6C,MAAQ7C,EAAQK,SAElC,GAAuB,UAAnBL,EAAQuB,OAAoB,CACrC,GAAIe,IAAU9B,EAEZ,MADA8B,EAAQ5B,EACFV,EAAQK,IAGhBL,EAAQ8C,kBAAkB9C,EAAQK,IAEpC,KAA8B,WAAnBL,EAAQuB,QACjBvB,EAAQ+C,OAAO,SAAU/C,EAAQK,KAGnCiC,EAAQ7B,EAER,IAAIqB,EAAS3B,EAASX,EAASE,EAAMM,GACrC,GAAoB,WAAhB8B,EAAOxB,KAAmB,CAO5B,GAJAgC,EAAQtC,EAAQgD,KACZtC,EAzOiB,iBA4OjBoB,EAAOzB,MAAQM,EACjB,SAGF,MAAO,CACLlC,MAAOqD,EAAOzB,IACd2C,KAAMhD,EAAQgD,KAGlB,CAA2B,UAAhBlB,EAAOxB,OAChBgC,EAAQ5B,EAGRV,EAAQuB,OAAS,QACjBvB,EAAQK,IAAMyB,EAAOzB,IAEzB,CACF,CACF,CAMA,SAASsC,EAAoBF,EAAUzC,GACrC,IAAIiD,EAAajD,EAAQuB,OACrBA,EAASkB,EAAS5D,SAASoE,GAC/B,GAAI1B,IAAWxD,EAOb,OAHAiC,EAAQyC,SAAW,KAGA,UAAfQ,GAA0BR,EAAS5D,SAAiB,SAGtDmB,EAAQuB,OAAS,SACjBvB,EAAQK,IAAMtC,EACd4E,EAAoBF,EAAUzC,GAEP,UAAnBA,EAAQuB,SAMK,WAAf0B,IACFjD,EAAQuB,OAAS,QACjBvB,EAAQK,IAAM,IAAI6C,UAChB,oCAAsCD,EAAa,aAN5CtC,EAYb,IAAImB,EAAS3B,EAASoB,EAAQkB,EAAS5D,SAAUmB,EAAQK,KAEzD,GAAoB,UAAhByB,EAAOxB,KAIT,OAHAN,EAAQuB,OAAS,QACjBvB,EAAQK,IAAMyB,EAAOzB,IACrBL,EAAQyC,SAAW,KACZ9B,EAGT,IAAIwC,EAAOrB,EAAOzB,IAElB,OAAM8C,EAOFA,EAAKH,MAGPhD,EAAQyC,EAASW,YAAcD,EAAK1E,MAGpCuB,EAAQqD,KAAOZ,EAASa,QAQD,WAAnBtD,EAAQuB,SACVvB,EAAQuB,OAAS,OACjBvB,EAAQK,IAAMtC,GAUlBiC,EAAQyC,SAAW,KACZ9B,GANEwC,GA3BPnD,EAAQuB,OAAS,QACjBvB,EAAQK,IAAM,IAAI6C,UAAU,oCAC5BlD,EAAQyC,SAAW,KACZ9B,EA+BX,CAqBA,SAAS4C,EAAaC,GACpB,IAAIC,EAAQ,CAAEC,OAAQF,EAAK,IAEvB,KAAKA,IACPC,EAAME,SAAWH,EAAK,IAGpB,KAAKA,IACPC,EAAMG,WAAaJ,EAAK,GACxBC,EAAMI,SAAWL,EAAK,IAGxBzC,KAAK+C,WAAWC,KAAKN,EACvB,CAEA,SAASO,EAAcP,GACrB,IAAI3B,EAAS2B,EAAMQ,YAAc,CAAC,EAClCnC,EAAOxB,KAAO,gBACPwB,EAAOzB,IACdoD,EAAMQ,WAAanC,CACrB,CAEA,SAAS7B,EAAQN,GAIfoB,KAAK+C,WAAa,CAAC,CAAEJ,OAAQ,SAC7B/D,EAAY2B,QAAQiC,EAAcxC,MAClCA,KAAKmD,OAAM,EACb,CA8BA,SAAS/C,EAAOgD,GACd,GAAIA,EAAU,CACZ,IAAIC,EAAiBD,EAASvF,GAC9B,GAAIwF,EACF,OAAOA,EAAe7D,KAAK4D,GAG7B,GAA6B,mBAAlBA,EAASd,KAClB,OAAOc,EAGT,IAAKE,MAAMF,EAASG,QAAS,CAC3B,IAAIC,GAAK,EAAGlB,EAAO,SAASA,IAC1B,OAASkB,EAAIJ,EAASG,QACpB,GAAInG,EAAOoC,KAAK4D,EAAUI,GAGxB,OAFAlB,EAAK5E,MAAQ0F,EAASI,GACtBlB,EAAKL,MAAO,EACLK,EAOX,OAHAA,EAAK5E,MAAQV,EACbsF,EAAKL,MAAO,EAELK,CACT,EAEA,OAAOA,EAAKA,KAAOA,CACrB,CACF,CAGA,MAAO,CAAEA,KAAMb,EACjB,CAGA,SAASA,IACP,MAAO,CAAE/D,MAAOV,EAAWiF,MAAM,EACnC,CA8MA,OAnnBApC,EAAkB1C,UAAY2C,EAC9BxC,EAAe+C,EAAI,cAAe,CAAE3C,MAAOoC,EAA4BzB,cAAc,IACrFf,EACEwC,EACA,cACA,CAAEpC,MAAOmC,EAAmBxB,cAAc,IAE5CwB,EAAkB4D,YAActF,EAC9B2B,EACA7B,EACA,qBAaFlB,EAAQ2G,oBAAsB,SAASC,GACrC,IAAIC,EAAyB,mBAAXD,GAAyBA,EAAOE,YAClD,QAAOD,IACHA,IAAS/D,GAG2B,uBAAnC+D,EAAKH,aAAeG,EAAKE,MAEhC,EAEA/G,EAAQgH,KAAO,SAASJ,GAQtB,OAPIzG,OAAO8G,eACT9G,OAAO8G,eAAeL,EAAQ7D,IAE9B6D,EAAOM,UAAYnE,EACnB3B,EAAOwF,EAAQ1F,EAAmB,sBAEpC0F,EAAOxG,UAAYD,OAAO8B,OAAOqB,GAC1BsD,CACT,EAMA5G,EAAQmH,MAAQ,SAAS5E,GACvB,MAAO,CAAE2B,QAAS3B,EACpB,EAqEAgB,EAAsBI,EAAcvD,WACpCgB,EAAOuC,EAAcvD,UAAWY,GAAqB,WACnD,OAAOiC,IACT,IACAjD,EAAQ2D,cAAgBA,EAKxB3D,EAAQoH,MAAQ,SAAS1F,EAASC,EAASC,EAAMC,EAAa+B,QACxC,IAAhBA,IAAwBA,EAAcyD,SAE1C,IAAIC,EAAO,IAAI3D,EACblC,EAAKC,EAASC,EAASC,EAAMC,GAC7B+B,GAGF,OAAO5D,EAAQ2G,oBAAoBhF,GAC/B2F,EACAA,EAAK/B,OAAOpB,MAAK,SAASF,GACxB,OAAOA,EAAOiB,KAAOjB,EAAOtD,MAAQ2G,EAAK/B,MAC3C,GACN,EAsKAhC,EAAsBD,GAEtBlC,EAAOkC,EAAIpC,EAAmB,aAO9BE,EAAOkC,EAAIxC,GAAgB,WACzB,OAAOmC,IACT,IAEA7B,EAAOkC,EAAI,YAAY,WACrB,MAAO,oBACT,IAiCAtD,EAAQuH,KAAO,SAASC,GACtB,IAAIC,EAAStH,OAAOqH,GAChBD,EAAO,GACX,IAAK,IAAI9G,KAAOgH,EACdF,EAAKtB,KAAKxF,GAMZ,OAJA8G,EAAKG,UAIE,SAASnC,IACd,KAAOgC,EAAKf,QAAQ,CAClB,IAAI/F,EAAM8G,EAAKI,MACf,GAAIlH,KAAOgH,EAGT,OAFAlC,EAAK5E,MAAQF,EACb8E,EAAKL,MAAO,EACLK,CAEX,CAMA,OADAA,EAAKL,MAAO,EACLK,CACT,CACF,EAoCAvF,EAAQqD,OAASA,EAMjBlB,EAAQ/B,UAAY,CAClB0G,YAAa3E,EAEbiE,MAAO,SAASwB,GAcd,GAbA3E,KAAK4E,KAAO,EACZ5E,KAAKsC,KAAO,EAGZtC,KAAK6B,KAAO7B,KAAK8B,MAAQ9E,EACzBgD,KAAKiC,MAAO,EACZjC,KAAK0B,SAAW,KAEhB1B,KAAKQ,OAAS,OACdR,KAAKV,IAAMtC,EAEXgD,KAAK+C,WAAWxC,QAAQ0C,IAEnB0B,EACH,IAAK,IAAIb,KAAQ9D,KAEQ,MAAnB8D,EAAKe,OAAO,IACZzH,EAAOoC,KAAKQ,KAAM8D,KACjBR,OAAOQ,EAAKgB,MAAM,MACrB9E,KAAK8D,GAAQ9G,EAIrB,EAEA+H,KAAM,WACJ/E,KAAKiC,MAAO,EAEZ,IACI+C,EADYhF,KAAK+C,WAAW,GACLG,WAC3B,GAAwB,UAApB8B,EAAWzF,KACb,MAAMyF,EAAW1F,IAGnB,OAAOU,KAAKiF,IACd,EAEAlD,kBAAmB,SAASmD,GAC1B,GAAIlF,KAAKiC,KACP,MAAMiD,EAGR,IAAIjG,EAAUe,KACd,SAASmF,EAAOC,EAAKC,GAYnB,OAXAtE,EAAOxB,KAAO,QACdwB,EAAOzB,IAAM4F,EACbjG,EAAQqD,KAAO8C,EAEXC,IAGFpG,EAAQuB,OAAS,OACjBvB,EAAQK,IAAMtC,KAGNqI,CACZ,CAEA,IAAK,IAAI7B,EAAIxD,KAAK+C,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAId,EAAQ1C,KAAK+C,WAAWS,GACxBzC,EAAS2B,EAAMQ,WAEnB,GAAqB,SAAjBR,EAAMC,OAIR,OAAOwC,EAAO,OAGhB,GAAIzC,EAAMC,QAAU3C,KAAK4E,KAAM,CAC7B,IAAIU,EAAWlI,EAAOoC,KAAKkD,EAAO,YAC9B6C,EAAanI,EAAOoC,KAAKkD,EAAO,cAEpC,GAAI4C,GAAYC,EAAY,CAC1B,GAAIvF,KAAK4E,KAAOlC,EAAME,SACpB,OAAOuC,EAAOzC,EAAME,UAAU,GACzB,GAAI5C,KAAK4E,KAAOlC,EAAMG,WAC3B,OAAOsC,EAAOzC,EAAMG,WAGxB,MAAO,GAAIyC,GACT,GAAItF,KAAK4E,KAAOlC,EAAME,SACpB,OAAOuC,EAAOzC,EAAME,UAAU,OAG3B,KAAI2C,EAMT,MAAM,IAAI/D,MAAM,0CALhB,GAAIxB,KAAK4E,KAAOlC,EAAMG,WACpB,OAAOsC,EAAOzC,EAAMG,WAKxB,CACF,CACF,CACF,EAEAb,OAAQ,SAASzC,EAAMD,GACrB,IAAK,IAAIkE,EAAIxD,KAAK+C,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAId,EAAQ1C,KAAK+C,WAAWS,GAC5B,GAAId,EAAMC,QAAU3C,KAAK4E,MACrBxH,EAAOoC,KAAKkD,EAAO,eACnB1C,KAAK4E,KAAOlC,EAAMG,WAAY,CAChC,IAAI2C,EAAe9C,EACnB,KACF,CACF,CAEI8C,IACU,UAATjG,GACS,aAATA,IACDiG,EAAa7C,QAAUrD,GACvBA,GAAOkG,EAAa3C,aAGtB2C,EAAe,MAGjB,IAAIzE,EAASyE,EAAeA,EAAatC,WAAa,CAAC,EAIvD,OAHAnC,EAAOxB,KAAOA,EACdwB,EAAOzB,IAAMA,EAETkG,GACFxF,KAAKQ,OAAS,OACdR,KAAKsC,KAAOkD,EAAa3C,WAClBjD,GAGFI,KAAKyF,SAAS1E,EACvB,EAEA0E,SAAU,SAAS1E,EAAQ+B,GACzB,GAAoB,UAAhB/B,EAAOxB,KACT,MAAMwB,EAAOzB,IAcf,MAXoB,UAAhByB,EAAOxB,MACS,aAAhBwB,EAAOxB,KACTS,KAAKsC,KAAOvB,EAAOzB,IACM,WAAhByB,EAAOxB,MAChBS,KAAKiF,KAAOjF,KAAKV,IAAMyB,EAAOzB,IAC9BU,KAAKQ,OAAS,SACdR,KAAKsC,KAAO,OACa,WAAhBvB,EAAOxB,MAAqBuD,IACrC9C,KAAKsC,KAAOQ,GAGPlD,CACT,EAEA8F,OAAQ,SAAS7C,GACf,IAAK,IAAIW,EAAIxD,KAAK+C,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAId,EAAQ1C,KAAK+C,WAAWS,GAC5B,GAAId,EAAMG,aAAeA,EAGvB,OAFA7C,KAAKyF,SAAS/C,EAAMQ,WAAYR,EAAMI,UACtCG,EAAcP,GACP9C,CAEX,CACF,EAEA,MAAS,SAAS+C,GAChB,IAAK,IAAIa,EAAIxD,KAAK+C,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAId,EAAQ1C,KAAK+C,WAAWS,GAC5B,GAAId,EAAMC,SAAWA,EAAQ,CAC3B,IAAI5B,EAAS2B,EAAMQ,WACnB,GAAoB,UAAhBnC,EAAOxB,KAAkB,CAC3B,IAAIoG,EAAS5E,EAAOzB,IACpB2D,EAAcP,EAChB,CACA,OAAOiD,CACT,CACF,CAIA,MAAM,IAAInE,MAAM,wBAClB,EAEAoE,cAAe,SAASxC,EAAUf,EAAYE,GAa5C,OAZAvC,KAAK0B,SAAW,CACd5D,SAAUsC,EAAOgD,GACjBf,WAAYA,EACZE,QAASA,GAGS,SAAhBvC,KAAKQ,SAGPR,KAAKV,IAAMtC,GAGN4C,CACT,GAOK7C,CAET,CAvtBc,CA4tBiB8I,EAAO9I,SAGtC,IACE+I,mBAAqBhJ,CAiBvB,CAhBE,MAAOiJ,GAWmB,iBAAfC,WACTA,WAAWF,mBAAqBhJ,EAEhCmJ,SAAS,IAAK,yBAAdA,CAAwCnJ,EAE5C,C,wBCxvBA,IAAYoJ,GAAZ,SAAYA,GACR,+BAEA,yCACA,qDACA,yCACA,uCACA,mCACA,mBACA,qBAEA,qCACA,yCACA,8BACA,oCACA,sCACA,gCACA,sCACA,sCACA,sCACA,kCACA,sCACA,sCACA,gCACA,8BACA,gCACA,sCACA,8CACA,wCACA,wCACA,oCACA,sCACA,sCACA,kCACA,sCACA,gCACA,oCACA,8CACA,sCACA,wCACA,0CACA,sCACA,oDACA,kCACA,oCACA,oCACA,8BACA,sCACA,oCACA,4CACA,8CACA,oCACA,oCACA,kCACA,8BACA,kCACA,0CAEA,8BACA,gCACA,gCAEA,kCACA,wCACA,kCACA,oCACA,oCACA,oCACA,8BACA,8BACA,oCACA,sCACA,8BACA,oCACA,kCACA,wCACA,wCACA,wCACA,sCACA,wCACA,4CAEA,oCACA,gDACA,8BACA,sCAEA,kCACA,sCACA,oCACA,kCAGA,kCACA,oCACA,8CACA,gDACA,4CACA,8CACA,wDAGA,kBACA,wBACA,sBAAO,oBAAM,wCAAgB,4BAC7B,kCAAa,kCACb,0CACA,uBAAO,2BAAS,qCAAc,yCAC9B,uCACA,uBACA,6BAGA,+BAEA,uBAGA,uBAGA,+BAGA,qBAGA,iBAGA,qBAGA,uBAEA,mBAGA,2BAGA,6BAGA,yCAGA,2BAEA,2CAKA,qCACA,iCACA,2BACA,6BACA,uBACA,6BACA,qBACA,yBACA,+BACA,iCACA,yBACA,uBACA,+BACA,8CACH,CAxKD,CAAYA,IAAAA,EAAS,KA0Kd,ICxKFC,EDwKMC,EAA4C,CACnD,CAACF,EAAUG,YAAa,iBAExB,CAACH,EAAUI,iBAAkB,yBAC7B,CAACJ,EAAUK,uBAAwB,4BACnC,CAACL,EAAUM,iBAAkB,2BAC7B,CAACN,EAAUO,gBAAiB,+BAC5B,CAACP,EAAUQ,cAAe,sBAC1B,CAACR,EAAUS,MAAO,OAClB,CAACT,EAAUU,OAAQ,QAEnB,CAACV,EAAUW,eAAgB,SAC3B,CAACX,EAAUY,iBAAkB,WAC7B,CAACZ,EAAUa,WAAY,KACvB,CAACb,EAAUc,cAAe,QAC1B,CAACd,EAAUe,eAAgB,SAC3B,CAACf,EAAUgB,YAAa,MACxB,CAAChB,EAAUiB,eAAgB,SAC3B,CAACjB,EAAUkB,eAAgB,SAC3B,CAAClB,EAAUmB,eAAgB,SAC3B,CAACnB,EAAUoB,aAAc,OACzB,CAACpB,EAAUqB,eAAgB,SAC3B,CAACrB,EAAUsB,eAAgB,SAC3B,CAACtB,EAAUuB,YAAa,MACxB,CAACvB,EAAUwB,WAAY,KACvB,CAACxB,EAAUyB,YAAa,MACxB,CAACzB,EAAU0B,eAAgB,SAC3B,CAAC1B,EAAU2B,mBAAoB,aAC/B,CAAC3B,EAAU4B,gBAAiB,UAC5B,CAAC5B,EAAU6B,gBAAiB,UAC5B,CAAC7B,EAAU8B,cAAe,QAC1B,CAAC9B,EAAU+B,eAAgB,SAC3B,CAAC/B,EAAUgC,eAAgB,SAC3B,CAAChC,EAAUiC,aAAc,OACzB,CAACjC,EAAUkC,eAAgB,SAC3B,CAAClC,EAAUmC,YAAa,MACxB,CAACnC,EAAUoC,cAAe,QAC1B,CAACpC,EAAUqC,mBAAoB,aAC/B,CAACrC,EAAUsC,eAAgB,SAC3B,CAACtC,EAAUuC,gBAAiB,UAC5B,CAACvC,EAAUwC,iBAAkB,WAC7B,CAACxC,EAAUyC,eAAgB,SAC3B,CAACzC,EAAU0C,sBAAuB,gBAClC,CAAC1C,EAAU2C,aAAc,OACzB,CAAC3C,EAAU4C,cAAe,QAC1B,CAAC5C,EAAU6C,cAAe,QAC1B,CAAC7C,EAAU8C,WAAY,KACvB,CAAC9C,EAAU+C,eAAgB,SAC3B,CAAC/C,EAAUgD,cAAe,QAC1B,CAAChD,EAAUiD,kBAAmB,YAC9B,CAACjD,EAAUkD,mBAAoB,aAC/B,CAAClD,EAAUmD,cAAe,QAC1B,CAACnD,EAAUoD,cAAe,QAC1B,CAACpD,EAAUqD,aAAc,OACzB,CAACrD,EAAUsD,WAAY,KACvB,CAACtD,EAAUuD,aAAc,OACzB,CAACvD,EAAUwD,iBAAkB,WAG7B,CAACxD,EAAUyD,YAAa,MACxB,CAACzD,EAAU0D,WAAY,KACvB,CAAC1D,EAAU2D,YAAa,MAExB,CAAC3D,EAAU4D,aAAc,OACzB,CAAC5D,EAAU6D,gBAAiB,UAC5B,CAAC7D,EAAU8D,aAAc,OACzB,CAAC9D,EAAU+D,cAAe,QAC1B,CAAC/D,EAAUgE,cAAe,QAC1B,CAAChE,EAAUiE,cAAe,QAC1B,CAACjE,EAAUkE,WAAY,KACvB,CAAClE,EAAUmE,WAAY,KACvB,CAACnE,EAAUoE,cAAe,QAC1B,CAACpE,EAAUqE,eAAgB,SAC3B,CAACrE,EAAUsE,WAAY,KACvB,CAACtE,EAAUuE,cAAe,SAC1B,CAACvE,EAAUwE,aAAc,OACzB,CAACxE,EAAUyE,gBAAiB,UAC5B,CAACzE,EAAU0E,gBAAiB,UAC5B,CAAC1E,EAAU2E,gBAAiB,UAC5B,CAAC3E,EAAU4E,eAAgB,SAC3B,CAAC5E,EAAU6E,gBAAiB,UAC5B,CAAC7E,EAAU8E,kBAAmB,YAC9B,CAAC9E,EAAU+E,cAAe,QAC1B,CAAC/E,EAAUgF,oBAAqB,cAChC,CAAChF,EAAUiF,WAAY,KACvB,CAACjF,EAAUkF,eAAgB,SAC3B,CAAClF,EAAUmF,aAAc,OACzB,CAACnF,EAAUoF,eAAgB,SAC3B,CAACpF,EAAUqF,cAAe,QAC1B,CAACrF,EAAUsF,aAAc,OAGzB,CAACtF,EAAUuF,aAAc,IACzB,CAACvF,EAAUwF,cAAe,IAC1B,CAACxF,EAAUyF,mBAAoB,IAC/B,CAACzF,EAAU0F,oBAAqB,IAChC,CAAC1F,EAAU2F,kBAAmB,IAC9B,CAAC3F,EAAU4F,mBAAoB,IAC/B,CAAC5F,EAAU6F,wBAAyB,KAGpC,CAAC7F,EAAU8F,KAAM,IACjB,CAAC9F,EAAU+F,OAAQ,IACnB,CAAC/F,EAAUgG,QAAS,IACpB,CAAChG,EAAUiG,MAAO,IAClB,CAACjG,EAAUkG,gBAAiB,IAC5B,CAAClG,EAAUmG,UAAW,IACtB,CAACnG,EAAUoG,aAAc,IACzB,CAACpG,EAAUqG,aAAc,IACzB,CAACrG,EAAUsG,iBAAkB,IAC7B,CAACtG,EAAUuG,OAAQ,IACnB,CAACvG,EAAUwG,SAAU,IACrB,CAACxG,EAAUyG,OAAQ,IACnB,CAACzG,EAAU0G,cAAe,KAC1B,CAAC1G,EAAU2G,gBAAiB,KAC5B,CAAC3G,EAAU4G,eAAgB,KAG3B,CAAC5G,EAAU6G,WAAY,IACvB,CAAC7G,EAAU8G,OAAQ,IAGnB,CAAC9G,EAAU+G,OAAQ,IAGnB,CAAC/G,EAAUgH,WAAY,KAGvB,CAAChH,EAAUiH,IAAK,IAGhB,CAACjH,EAAUkH,MAAO,IAGlB,CAAClH,EAAUmH,MAAO,IAGlB,CAACnH,EAAUoH,OAAQ,kBACnB,CAACpH,EAAUqH,KAAM,uBAGjB,CAACrH,EAAUsH,SAAU,oBAGrB,CAACtH,EAAUuH,gBAAiB,kCAG5B,CAACvH,EAAUwH,SAAU,gBAErB,CAACxH,EAAUyH,iBAAkB,2BAItBC,EAAiD,CACxD,IAAK1H,EAAUuF,YACf,IAAKvF,EAAUwF,aACf,IAAKxF,EAAUyF,kBACf,IAAKzF,EAAU0F,mBACf,IAAK1F,EAAU2F,iBACf,IAAK3F,EAAU4F,kBAGf,IAAK5F,EAAU8F,IACf,IAAK9F,EAAU+G,MACf,IAAK/G,EAAU+F,MACf,IAAK/F,EAAUgG,OACf,IAAKhG,EAAUiG,KACf,IAAKjG,EAAUkG,eACf,IAAKlG,EAAUmG,SACf,KAAMnG,EAAUgH,UAChB,IAAKhH,EAAUiH,GACf,IAAKjH,EAAUkH,KACf,IAAKlH,EAAUmH,KACf,IAAMnH,EAAUoG,YAChB,IAAKpG,EAAUqG,YACf,IAAKrG,EAAUsG,gBACf,IAAKtG,EAAUuG,MACf,IAAKvG,EAAUwG,QACf,IAAKxG,EAAUyG,MACf,KAAMzG,EAAU2H,SAEhB,IAAK3H,EAAU6G,UACf,IAAK7G,EAAU8G,MAGf,IAAK9G,EAAUoH,MACf,KAAMpH,EAAUqH,IAGhB,KAAMrH,EAAUsH,QAChB,KAAMtH,EAAU4H,UAGTC,EAA6C,CACpD,OAAU7H,EAAUW,cACpB,SAAYX,EAAUY,gBACtB,GAAMZ,EAAUa,UAChB,MAASb,EAAUc,aACnB,OAAUd,EAAUe,cACpB,IAAOf,EAAUgB,WACjB,OAAUhB,EAAUiB,cACpB,OAAUjB,EAAUkB,cACpB,OAAUlB,EAAUmB,cACpB,KAAQnB,EAAUoB,YAClB,OAAUpB,EAAUqB,cACpB,OAAUrB,EAAUsB,cACpB,IAAOtB,EAAUuB,WACjB,GAAMvB,EAAUwB,UAChB,IAAOxB,EAAUyB,WACjB,OAAUzB,EAAU0B,cACpB,WAAc1B,EAAU2B,kBACxB,QAAW3B,EAAU4B,eACrB,QAAW5B,EAAU6B,eACrB,MAAS7B,EAAU8B,aACnB,OAAU9B,EAAU+B,cACpB,OAAU/B,EAAUgC,cACpB,KAAQhC,EAAUiC,YAClB,OAAUjC,EAAUkC,cACpB,IAAOlC,EAAUmC,WACjB,MAASnC,EAAUoC,aACnB,WAAcpC,EAAUqC,kBACxB,OAAUrC,EAAUsC,cACpB,QAAWtC,EAAUuC,eACrB,SAAYvC,EAAUwC,gBACtB,OAAUxC,EAAUyC,cACpB,cAAiBzC,EAAU0C,qBAC3B,eAAkB1C,EAAU0C,qBAC5B,KAAQ1C,EAAU2C,YAClB,MAAS3C,EAAU4C,aACnB,KAAQ5C,EAAUS,KAClB,MAAST,EAAUU,MACnB,MAASV,EAAU6C,aACnB,GAAM7C,EAAU8C,UAChB,OAAU9C,EAAU+C,cACpB,MAAS/C,EAAUgD,aACnB,IAAOhD,EAAUiD,iBACjB,KAAQjD,EAAUkD,kBAClB,MAASlD,EAAUmD,aACnB,MAASnD,EAAUoD,aACnB,KAAQpD,EAAUqD,YAClB,GAAMrD,EAAUsD,UAChB,KAAQtD,EAAUuD,YAClB,SAAYvD,EAAUwD,gBAEtB,GAAMxD,EAAU0D,UAChB,IAAO1D,EAAUyD,WACjB,IAAOzD,EAAU2D,WAEjB,KAAQ3D,EAAU4D,YAClB,QAAW5D,EAAU6D,eACrB,KAAQ7D,EAAU8D,YAClB,MAAS9D,EAAU+D,aACnB,MAAS/D,EAAUgE,aACnB,MAAShE,EAAUiE,aACnB,GAAMjE,EAAUkE,UAChB,GAAMlE,EAAUmE,UAChB,MAASnE,EAAUoE,aACnB,OAAUpE,EAAUqE,cACpB,GAAMrE,EAAUsE,UAChB,SAAUtE,EAAUuE,aACpB,KAAQvE,EAAUwE,YAClB,QAAWxE,EAAUyE,eACrB,QAAWzE,EAAU0E,eACrB,QAAW1E,EAAU2E,eACrB,OAAU3E,EAAU4E,cACpB,QAAW5E,EAAU6E,eACrB,UAAa7E,EAAU8E,iBACvB,MAAS9E,EAAU+E,aACnB,YAAe/E,EAAUgF,mBACzB,GAAMhF,EAAUiF,UAChB,OAAUjF,EAAUkF,cACpB,KAAQlF,EAAUmF,YAClB,OAAUnF,EAAUoF,cACpB,MAASpF,EAAUqF,aACnB,KAAQrF,EAAUsF,aAKXwC,EAAiD,CACxD,EAAK,KACL,EAAK,KACL,EAAK,KACL,IAAM,IACN,IAAK,IACL,KAAM,OCrcV,SAAK7H,GACD,uBAAQ,+BAAY,uCAAgB,6CAAmB,2CAAkB,0CAC5E,CAFD,CAAKA,IAAAA,EAAU,KAIf,IAAI8H,EAAU,IAgBP,MAAMC,EA+BTrK,cAfA,KAAAsK,YAA2B,CACvBjI,EAAUoH,MAAOpH,EAAUqH,IAAKrH,EAAUsH,SAK9C,KAAAY,qBAAqD,CAAC,EAEtD,KAAAC,kBAAkF,CAC9E,CAAEC,MAAOpI,EAAUuE,aAAc8D,OAAQrI,EAAUsE,UAAWgE,OAAQtI,EAAUuE,cAChF,CAAE6D,MAAOpI,EAAUsD,UAAW+E,OAAQrI,EAAU2D,WAAY2E,OAAQtI,EAAUuI,OAC9E,CAAEH,MAAOpI,EAAUuI,MAAOF,OAAQrI,EAAUuD,YAAa+E,OAAQtI,EAAUwI,WAC3E,CAAEJ,MAAOpI,EAAUsD,UAAW+E,OAAQrI,EAAUuD,YAAa+E,OAAQtI,EAAUyI,SAI/E3O,KAAKoO,qBAAqBlI,EAAUuF,aAAevF,EAAUwF,aAC7D1L,KAAKoO,qBAAqBlI,EAAU2F,kBAAoB3F,EAAU4F,kBAClE9L,KAAKoO,qBAAqBlI,EAAUyF,mBAAqBzF,EAAU0F,mBACnE5L,KAAKoO,qBAAqBlI,EAAUwF,cAAgBxF,EAAUuF,YAC9DzL,KAAKoO,qBAAqBlI,EAAU4F,mBAAqB5F,EAAU2F,iBACnE7L,KAAKoO,qBAAqBlI,EAAU0F,oBAAsB1F,EAAUyF,iBACxE,CAEAiD,IAAIC,GAcA,GAZA7O,KAAK6O,MAAQA,EAAMC,QAAQ,IAAU,KACrC9O,KAAK+O,UAAY,GACjB/O,KAAKgP,UAAY,GACjBhP,KAAKiP,aAAe,KACpBjP,KAAKkP,aAAe,GACpBlP,KAAKmP,IAAM,EACXnP,KAAKoP,KAAO,EACZpP,KAAKqP,OAAS,EACdrP,KAAKsP,sBAAwB,KAC7BtP,KAAKuP,kBAAoB,KAGL,GAAhBV,EAAMtL,OACN,MAAO,CAAEiM,OAAQxP,KAAK+O,UAAWU,OAAQzP,KAAKgP,UAAWC,aAAc,MAQ3E,IALAjP,KAAK0P,YAAcb,EAAMhK,OAAO,GAEhC7E,KAAK2P,SAAWd,EAAMtL,OAAS,EAAIsL,EAAMhK,OAAO,GAAKoJ,EAG9CjO,KAAK0P,aAAezB,GACvBjO,KAAK4P,YAGT,GAAI5P,KAAKkP,aAAa3L,OAAS,EAAG,CAC9B,IAAIsM,EAAc7P,KAAKkP,aAAaxK,MAChCoL,EAAgB9P,KAAKoO,qBAAqByB,GAE9C7P,KAAK+P,gBAAgB3J,EAAkByJ,GAAe,IAAMzJ,EAAkB0J,G,CAGlF,MAAO,CACHN,OAAQxP,KAAK+O,UACbU,OAAQzP,KAAKgP,UACbC,aAAcjP,KAAKiP,aAG3B,CAEAe,oBAAoBC,GAChB,GAAgC,GAA5BjQ,KAAKkP,aAAa3L,OAAa,CAC/B,IAAIsM,EAAc7P,KAAKoO,qBAAqB6B,GAE5C,YADAjQ,KAAK+P,gBAAgB3J,EAAkByJ,GAAe,IAAMzJ,EAAkB6J,G,CAGlF,IAAIC,EAAclQ,KAAKkP,aAAaxK,MAChC0J,EAAuBpO,KAAKoO,qBAAqB8B,GACjDD,GAAM7B,GACNpO,KAAK+P,gBAAgB3J,EAAkB8J,GAAe,IAAM9J,EAAkBgI,GAEtF,CAEA2B,gBAAgB3O,GACa,MAArBpB,KAAKiP,eAAsBjP,KAAKiP,aAAe7N,EACvD,CAEAkB,OACItC,KAAKmP,MACLnP,KAAK0P,YAAc1P,KAAK2P,SACpB3P,KAAKmP,IAAM,EAAInP,KAAK6O,MAAMtL,OAC1BvD,KAAK2P,SAAW3P,KAAK6O,MAAMhK,OAAO7E,KAAKmP,IAAM,GAE7CnP,KAAK2P,SAAW1B,EAEpBjO,KAAKqP,QACT,CAIAO,YAEI,IAAIO,EAAOnQ,KAAK0P,YAEZU,EAAmBxC,EAAgBuC,GAEvC,GAAwB,MAApBC,EAA0B,CAC1B,OAAQA,GACJ,KAAKlK,EAAUyF,kBACX,MAAqB,KAAjB3L,KAAK2P,UACL3P,KAAKqQ,UAAUnK,EAAU6F,uBAAwB,MACjD/L,KAAKsC,YACLtC,KAAKsC,SAGLtC,KAAKqQ,UAAUnK,EAAUyF,kBAAmB,KAC5C3L,KAAKkP,aAAalM,KAAKoN,QACvBpQ,KAAKsC,QAGb,KAAK4D,EAAUmG,SACX,MAAqB,KAAjBrM,KAAK2P,cACL3P,KAAKsQ,uBAGTtQ,KAAKqQ,UAAUnK,EAAUmG,SAAU,UACnCrM,KAAKsC,QAET,KAAK4D,EAAUmH,KACX,MAAqB,KAAjBrN,KAAK2P,UACL3P,KAAKqQ,UAAUnK,EAAU4G,cAAe,MACxC9M,KAAKsC,YACLtC,KAAKsC,SAGLtC,KAAKqQ,UAAUnK,EAAUmH,KAAM,UAC/BrN,KAAKsC,QAGb,KAAK4D,EAAUuG,MACX,MAAqB,KAAjBzM,KAAK2P,UACL3P,KAAKqQ,UAAUnK,EAAU2H,SAAU,MACnC7N,KAAKsC,YACLtC,KAAKsC,QAEmB,KAAjBtC,KAAK2P,UACZ3P,KAAKqQ,UAAUnK,EAAU0G,aAAc,MACvC5M,KAAKsC,YACLtC,KAAKsC,SAILtC,KAAKqQ,UAAUnK,EAAUuG,MAAO,UAChCzM,KAAKsC,QAGb,KAAK4D,EAAUwG,QACX,MAAqB,KAAjB1M,KAAK2P,UACL3P,KAAKqQ,UAAUnK,EAAU2G,eAAgB,MACzC7M,KAAKsC,YACLtC,KAAKsC,SAILtC,KAAKqQ,UAAUnK,EAAUwG,QAAS,UAClC1M,KAAKsC,QAGb,KAAK4D,EAAU0F,mBACX5L,KAAKgQ,oBAAoBI,GACzB,MACJ,KAAKlK,EAAUuF,YACXzL,KAAKkP,aAAalM,KAAKoN,GACvB,MACJ,KAAKlK,EAAUwF,aACX1L,KAAKgQ,oBAAoBI,GACzB,MACJ,KAAKlK,EAAU2F,iBACX7L,KAAKkP,aAAalM,KAAKoN,GACvB,MACJ,KAAKlK,EAAU4F,kBACX9L,KAAKgQ,oBAAoBI,GACzB,MACJ,KAAKlK,EAAU+F,MACX,OAAIjM,KAAKuQ,QAAQvQ,KAAK2P,SAAU,KAC3B,CAACzJ,EAAUG,WAAYH,EAAUI,gBAAiBJ,EAAUK,sBAAuBL,EAAUwF,cAAc8E,QAAQxQ,KAAKsP,wBAA0B,EAI3H,KAAjBtP,KAAK2P,cACZ3P,KAAKyQ,oBAAoB,OAGzBzQ,KAAKqQ,UAAUnK,EAAU+F,MAAO,UAChCjM,KAAKsC,aAPLtC,KAAK0Q,YAUb,KAAKxK,EAAUkH,KACX,GAA6B,MAA1BpN,KAAKuP,mBAA6BvP,KAAKuP,kBAAkBoB,SAASvB,KAAOpP,KAAKoP,KAE7E,YADApP,KAAKyQ,oBAAoB,KAGzBzQ,KAAKqQ,UAAUnK,EAAUkH,KAAM,KAC/BpN,KAAKsC,OAET,MACJ,KAAK4D,EAAUoG,YAEX,YADAtM,KAAK4Q,kBAAkB,KAE3B,KAAK1K,EAAUqG,YAEX,YADAvM,KAAK4Q,kBAAkB,KAE3B,KAAK1K,EAAUsH,QAKX,OAJAxN,KAAKqQ,UAAUnK,EAAUsH,QAAS,MAClCxN,KAAKoP,OACLpP,KAAKqP,OAAS,OACdrP,KAAKsC,OAET,KAAK4D,EAAUoH,MACf,KAAKpH,EAAUqH,IAEX,YADAvN,KAAK6Q,WAET,KAAK3K,EAAU4H,SAEX,YADA9N,KAAKsC,OAET,KAAK4D,EAAUiH,GAEX,YADAnN,KAAK8Q,gBAET,KAAK5K,EAAUsG,gBAEX,YADAxM,KAAK+Q,sBAOb,OAFA/Q,KAAKqQ,UAAUD,EAAkBD,QACjCnQ,KAAKsC,M,CAOLtC,KAAKuQ,QAAQJ,EAAM,IACnBnQ,KAAK0Q,YAIT1Q,KAAKgR,wBAET,CAGAD,sBACI,IAAI3B,EAAOpP,KAAKoP,KACZC,EAASrP,KAAKqP,OAEd4B,EAAY,GAEhB,IADAjR,KAAKsC,OACqB,KAApBtC,KAAK0P,aAAsB1P,KAAK0P,aAAezB,GACjDgD,GAAKjR,KAAK0P,YACV1P,KAAKsC,OAENtC,KAAK0P,aAAezB,EACnBjO,KAAKkR,UAAU,wFAAyFD,EAAE1N,OAAS,EAAG,QAAS6L,EAAMC,IAErIrP,KAAKsC,OACLtC,KAAKqQ,UAAUnK,EAAUG,WAAY4K,EAAG7B,EAAMC,GAEtD,CAEAgB,UAAUJ,EAAekB,EAAiC/B,EAAepP,KAAKoP,KAAMC,EAAiBrP,KAAKqP,OAAQ9L,GAAkB,GAAK4N,GAAM5N,QAC3I,IAAI6N,EAAW,CACXnB,GAAIA,EACJvS,MAAOyT,EACPR,SAAU,CACNtB,OAAQA,EACRD,KAAMA,EACN7L,OAAQA,IAIhB,IAAK,IAAI8N,KAAUrR,KAAKqO,kBACpB,GAAI4B,GAAMoB,EAAO9C,QAAUvO,KAAKsP,uBAAyB+B,EAAO/C,MAAO,CACnE,IAAIgD,EAAYjC,EAASrP,KAAKuP,kBAAkBoB,SAAStB,OAAS9L,EAMlE,OALAvD,KAAKuP,kBAAkBU,GAAKoB,EAAO7C,OACnCxO,KAAKuP,kBAAkBoB,SAAW,CAAEtB,OAAQrP,KAAKuP,kBAAkBoB,SAAStB,OAAQD,KAAMA,EAAM7L,OAAQ+N,GACxGtR,KAAKuP,kBAAkB7R,MAAQsC,KAAKuP,kBAAkB7R,MAAQ,IAAMyT,OAEpEnR,KAAKsP,sBAAwB+B,EAAO7C,O,CAKtCxO,KAAKmO,YAAYqC,QAAQP,IAAO,IAClCjQ,KAAKsP,sBAAwBW,EAC7BjQ,KAAKuP,kBAAoB6B,GAG7BpR,KAAK+O,UAAU/L,KAAKoO,EACxB,CAEAF,UAAUC,EAAc5N,EAAgBgO,EAAyB,QAASnC,EAAepP,KAAKoP,KAAMC,EAAiBrP,KAAKqP,QACtHrP,KAAKgP,UAAUhM,KAAK,CAChBmO,KAAMA,EACNR,SAAU,CACNvB,KAAMA,EACNC,OAAQA,EACR9L,OAAQA,GAEZiO,MAAOD,GAEf,CAIAhB,QAAQkB,EAAWC,GACf,IAAIC,EAAWF,EAAEG,WAAW,GAE5B,OAAY,IAARF,EAAoBC,GAAY,IAAMA,GAAY,GAC1C,GAARD,EAAmBC,GAAY,IAAMA,GAAY,GACzC,GAARD,EAAmBC,GAAY,IAAMA,GAAY,GACzC,IAARD,EAAoBC,GAAY,IAAMA,GAAY,IAAQA,GAAY,IAAMA,GAAY,KACvFA,GAAY,IAAMA,GAAY,QADnC,CAEJ,CAEAd,WACI,IAAIxB,EAASrP,KAAKqP,OACdD,EAAOpP,KAAKoP,KAEZyC,EAAW7R,KAAKmP,IACpB,KAA2B,KAApBnP,KAAK0P,aAA0C,MAApB1P,KAAK0P,aACnC1P,KAAKsC,OAGT,IAAIwP,EAAS9R,KAAKmP,IAClBnP,KAAKqQ,UAAUnK,EAAUoH,MAAOtN,KAAK6O,MAAMkD,UAAUF,EAAUC,GAAS1C,EAAMC,EAGlF,CAEA2C,uBACI,IAAI3C,EAASrP,KAAKqP,OACdD,EAAOpP,KAAKoP,KAChBpP,KAAKsC,OACL,IAAI6N,EAAOnQ,KAAK0P,YAChB,GAAY,MAARS,EAAc,CACd,IAAI8B,EAAajE,EAAmBhO,KAAK2P,UACvB,MAAdsC,GACAjS,KAAKkR,UAAU,wBAA0BlR,KAAK2P,SAAW,kBAAmB,GACvD,KAAjB3P,KAAK2P,WACLQ,EAAOnQ,KAAK2P,SACZ3P,KAAKsC,UAGT6N,EAAO8B,EACPjS,KAAKsC,O,CAGbtC,KAAKsC,OACmB,KAApBtC,KAAK0P,YACL1P,KAAKkR,UAAU,iDAAkD,GAEjElR,KAAKsC,OAGTtC,KAAKqQ,UAAUnK,EAAUQ,aAAcyJ,EAAMf,EAAMC,EAEvD,CAEAuB,kBAAkBsB,GACd,IAAI9C,EAAOpP,KAAKoP,KACZC,EAASrP,KAAKqP,OACd8B,EAAO,GAIX,IAFAnR,KAAKsC,SAEQ,CACT,IAAI6N,EAAOnQ,KAAK0P,YAChB,GAAY,MAARS,EAAc,CACd,IAAI8B,EAAajE,EAAmBhO,KAAK2P,UACvB,MAAdsC,EACAjS,KAAKkR,UAAU,wBAA0BlR,KAAK2P,SAAW,kBAAmB,IAE5EQ,EAAO8B,EACPjS,KAAKsC,O,MAEN,GAAI6N,GAAQ+B,EAAW,CAE1B,GADAlS,KAAKsC,OACFtC,KAAK0P,aAAewC,EACnB,MAEJf,GAAQe,C,MACL,GAAY,MAAR/B,GAAgBA,GAAQlC,EAAS,CACxCjO,KAAKkR,UAAU,kEAAmEC,EAAK5N,OAAS,EAAG,QAAS6L,EAAMC,GAClH,K,CAEJ8B,GAAQhB,EACRnQ,KAAKsC,M,CAGQ,KAAb4P,EACAlS,KAAKqQ,UAAUnK,EAAUO,eAAgB0K,EAAM/B,EAAMC,EAAQ8B,EAAK5N,OAAS,IAE3EvD,KAAKqQ,UAAUnK,EAAUG,WAAY8K,EAAM/B,EAAMC,EAAQ8B,EAAK5N,OAAS,GACvEvD,KAAK+O,UAAU/O,KAAK+O,UAAUxL,OAAS,GAAG4O,0BAA2B,EAI7E,CAEA7B,sBACI,IAAIlB,EAAOpP,KAAKoP,KACZC,EAASrP,KAAKqP,OACd+C,GAA8B,EAE9BjB,EAAO,KAIX,IAHAnR,KAAKsC,OACLtC,KAAKsC,SAEQ,CACT,IAAI6N,EAAOnQ,KAAK0P,YAChB,GAAY,KAARS,GAAgC,KAAjBnQ,KAAK2P,SAAiB,CACrC3P,KAAKsC,OACLtC,KAAKsC,OACL6O,GAAQ,KACR,K,CAEJ,GAAIhB,GAAQlC,EAAS,CACjBjO,KAAKkR,UAAU,gFAAiF,GAChG,K,CAEQ,MAARf,GACAnQ,KAAKoP,OACLpP,KAAKqP,OAAS,EACd+C,GAAqB,EACrBjB,GAAQhB,GACCiC,GAA8B,KAARjC,IAC/BgB,GAAQhB,EACRiC,GAAqB,GAGzBpS,KAAKsC,M,CAGTtC,KAAKqQ,UAAUnK,EAAUwH,QAASyD,EAAM/B,EAAMC,EAElD,CAEAoB,oBAAoB4B,GAChB,IAAIjD,EAAOpP,KAAKoP,KACZC,EAASrP,KAAKqP,OAEd8B,EAAOkB,EACX,IAAI,IAAI7O,EAAI,EAAGA,EAAI6O,EAAa9O,OAAQC,IACpCxD,KAAKsC,OAGT,OAAa,CACT,IAAI6N,EAAOnQ,KAAK0P,YAChB,GAAY,MAARS,EACA,MAEJ,GAAIA,GAAQlC,EAER,MAEJkD,GAAQhB,EACRnQ,KAAKsC,M,CAGTtC,KAAKqQ,UAAUnK,EAAUwH,QAASyD,EAAM/B,EAAMC,EAElD,CAGAqB,YACI,IAAItB,EAAOpP,KAAKoP,KACZC,EAASrP,KAAKqP,OAEdiD,EAAe,EACK,KAApBtS,KAAK0P,cACL4C,GAAQ,EACRtS,KAAKsC,QAGT,IAAIuP,EAAW7R,KAAKmP,IAEhBoD,EAAYvS,KAAK0P,YAErB1P,KAAKsC,OAEL,IAAIkQ,EAAgB,GAapB,IAXiB,KAAbD,GAAqB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAK/B,QAAQxQ,KAAK0P,cAAgB,IAC7E,KAApB1P,KAAK0P,aACL8C,EAAQ,GACRxS,KAAKsC,QACsB,KAApBtC,KAAK0P,aACZ8C,EAAQ,EACRxS,KAAKsC,QACFkQ,EAAQ,EACfX,EAAW7R,KAAKmP,KAGbnP,KAAKuQ,QAAQvQ,KAAK0P,YAAa8C,IAClCxS,KAAKsC,OAGT,IAAI2N,EAAK/J,EAAUI,gBAEnB,GAAwB,KAApBtG,KAAK0P,YAAoB,CAIzB,IAHAO,EAAK/J,EAAUK,sBAEfvG,KAAKsC,OACEtC,KAAKuQ,QAAQvQ,KAAK0P,YAAa,KAClC1P,KAAKsC,OAGI,IAATkQ,GACAxS,KAAKkR,UAAU,qEAAsElR,KAAKmP,IAAM0C,EAAU,QAAS7R,KAAKoP,KAAMpP,KAAKqP,QAAUrP,KAAKmP,IAAM0C,G,CAKhK,IAAIH,EAAO1R,KAAK6O,MAAMkD,UAAUF,EAAU7R,KAAKmP,KAE/C0C,EAAW7R,KAAKmP,IAChB,IAAIsD,EAAmB,EAEnBC,GAA0B,EAE9B,GAAwB,KAApB1S,KAAK0P,YAAoB,CACzBgD,GAAiB,EACjB1S,KAAKsC,OACL,IAAIqQ,EAA2B3S,KAAKmP,IAOpC,IAJwB,KAApBnP,KAAK0P,aACL1P,KAAKsC,OAGFtC,KAAKuQ,QAAQvQ,KAAK0P,YAAa,KAClC1P,KAAKsC,OAEI,IAATkQ,GACAxS,KAAKkR,UAAU,qEAAsElR,KAAKmP,IAAM0C,EAAU,QAAS7R,KAAKoP,KAAMpP,KAAKqP,QAAUrP,KAAKmP,IAAM0C,IAE5J,IAAIe,EAAiB5S,KAAK6O,MAAMkD,UAAUY,EAAkB3S,KAAKmP,KACjEsD,EAAWI,OAAOC,SAASF,E,CAGP,KAApB5S,KAAK0P,aAA0C,KAApB1P,KAAK0P,cAC1BxJ,EAAUK,sBAChBvG,KAAKsC,OACQ,IAATkQ,GACAxS,KAAKkR,UAAU,qEAAsElR,KAAKmP,IAAM0C,EAAU,QAAS7R,KAAKoP,KAAMpP,KAAKqP,QAAUrP,KAAKmP,IAAM0C,KAIhK,IAAInU,EAAiBuS,GAAM/J,EAAUI,gBAAmBuM,OAAOC,SAASpB,EAAMc,GAASK,OAAOE,WAAWrB,GACzGhU,GAAS4U,EACO,GAAZG,IAAe/U,GAASsV,KAAKC,IAAI,GAAIR,IAEzCzS,KAAKqQ,UAAUJ,EAAIvS,EAAO0R,EAAMC,EAEpC,CAEAyB,gBACI,IAAI1B,EAAOpP,KAAKoP,KACZC,EAASrP,KAAKqP,OAAS,EACvBwC,EAAW7R,KAAKmP,IAChBgB,EAAOnQ,KAAK0P,YAGhB,IAFA1P,KAAKsC,OAE2B,MAAzBsL,EAAgBuC,KAAkBnQ,KAAKkT,QAAQ/C,IAAWA,GAAQlC,GACrEjO,KAAKsC,OACL6N,EAAOnQ,KAAK0P,YAGhB,IAAIoC,EAAS9R,KAAKmP,IAEdgC,EAAOnR,KAAK6O,MAAMkD,UAAUF,EAAUC,GAC1C9R,KAAKqQ,UAAUnK,EAAUiH,GAAIgE,EAAM/B,EAAMC,EAAQ8B,EAAK5N,OAAS,EACnE,CAEAyN,yBACI,IAAI5B,EAAOpP,KAAKoP,KACZC,EAASrP,KAAKqP,OAEdwC,EAAW7R,KAAKmP,IAChBgB,EAAOnQ,KAAK0P,YAEhB,KAAgC,MAAzB9B,EAAgBuC,KAAkBnQ,KAAKkT,QAAQ/C,IAAWA,GAAQlC,GACrEjO,KAAKsC,OACL6N,EAAOnQ,KAAK0P,YAGhB,IAAIoC,EAAS9R,KAAKmP,IAEdgC,EAAOnR,KAAK6O,MAAMkD,UAAUF,EAAUC,GAEtC7B,EAAKlC,EAAYoD,EAAKgC,eAC1B,GAAU,MAANlD,GAA2B,iBAANA,EAiBzBjQ,KAAKqQ,UAAUnK,EAAUG,WAAY8K,EAAM/B,EAAMC,QAf7C,OAAQY,GACJ,KAAK/J,EAAA,KACDlG,KAAKqQ,UAAUnK,EAAUM,iBAAiB,EAAM4I,EAAMC,GACtD,MACJ,KAAKnJ,EAAA,MACDlG,KAAKqQ,UAAUnK,EAAUM,iBAAiB,EAAO4I,EAAMC,GACvD,MACJ,QACIrP,KAAKqQ,UAAUJ,EAAIkB,EAAM/B,EAAMC,GAS/C,CAEA6D,QAAQ/C,GACJ,MAAe,KAARA,GAAuB,MAARA,CAC1B,EChpBG,MAAMiD,EAQTvP,cALA,KAAAwP,4BAAwC,CAAC,MAEzC,KAAA5P,YAAuB,iBAOvB,CAEA6P,OACIC,OAAOC,UAAUC,uCAAuC,SAAUzT,MAClEuT,OAAOC,UAAUE,qCAAqC,SAAU1T,KACpE,CAEA2T,6BAA6BC,EAAiCjD,EAA2BkD,EAAYC,EAA6CC,GAE9I,IAAIC,EAAqChU,KAAKiU,OAAOL,GAErD,OAAOxP,QAAQvD,QACXmT,EAGR,CACAE,wBAAwBF,GACpB,IAAK,IAAIxQ,EAAI,EAAGA,EAAIwQ,EAAMzQ,OAAS,EAAGC,IAAK,CACvC,IAAI2Q,EAAIH,EAAMxQ,GACV4Q,EAAKJ,EAAMxQ,EAAI,GACnB,KAAI2Q,EAAEE,MAAMC,cAAgBF,EAAGC,MAAME,kBACjCJ,EAAEE,MAAMC,eAAiBF,EAAGC,MAAME,gBAClC,GAAIJ,EAAEE,MAAMG,WAAaJ,EAAGC,MAAMI,YAC9BT,EAAMU,OAAOlR,EAAI,EAAG,QAEpB,GAAyB,GAArB2Q,EAAEE,MAAMG,WAAkBL,EAAEhD,KAAK5N,OAAS,GAA6B,GAAxB6Q,EAAGC,MAAMI,aAAoBL,EAAGC,MAAMG,UAAYJ,EAAGC,MAAMI,aAA0B,IAAXL,EAAGjD,KAAY,CACxI,IAAIwD,EAAQR,EAAEhD,KAAK5N,QAAU6Q,EAAGC,MAAMG,UAAYJ,EAAGC,MAAMI,aACvDE,EAAQ,GACRR,EAAEhD,KAAOgD,EAAEhD,KAAKyD,OAAO,EAAGD,GAC1BX,EAAMU,OAAOlR,EAAE,EAAG,IAEbmR,EAAQ,GAGbP,EAAGC,MAAMG,UAAYJ,EAAGC,MAAMI,YAAcE,EAC5CX,EAAMU,OAAOlR,EAAG,GAChBA,MAIAwQ,EAAMU,OAAOlR,EAAG,GAChBA,I,EAMxB,CAGAqR,+BAA+BjB,EAC3BE,EACAC,GAEA,IAAIC,EAAqChU,KAAKiU,OAAOL,GAErD,OAAOxP,QAAQvD,QACXmT,EAGR,CAEAC,OAAOL,GAEH,IAAII,EAAqC,GAQrC7C,EAAOyC,EAAMkB,SAASvB,OAAOwB,OAAOC,oBAAoBC,IAExDC,GAAY,IAAIhH,GAAQU,IAAIuC,GAAM3B,OAItC,GAAiB,MAAb0F,EAAmB,MAAO,GAY9B,IAAIC,EAA2B,KAC3BC,EAAc,EAEdC,EAAmC,GACnCC,EAA0C,GAC1CC,GAAyB,EACzBC,EAA8B,EAC9BC,EAA4B,EAEhC,IAAK,IAAIjS,EAAI,EAAGA,EAAI0R,EAAU3R,OAAQC,IAAK,CAEvC,IAAI4N,EAAI8D,EAAU1R,GAGlB,OAFAgS,IAEQpE,EAAEnB,IAEN,KAAK/J,EAAU2F,iBAQX,GAPI0J,IACAA,GAAgB,EAChBD,EAA8BtS,KAAKoS,EAAc,GACjDA,KAEJA,IACAC,EAAuBrS,KAAKoO,EAAET,SAASvB,MACd,MAArB+F,EAA2B,CAC3B,IAAIlF,EAAKkF,EAAkBlF,GACvBA,GAAM/J,EAAUwF,cAAgBuE,GAAM/J,EAAUG,YAAc4J,GAAM/J,EAAU6F,wBAC9E/L,KAAK0V,eAAeP,EAAmB/D,EAAG4C,EAAO,I,CAGzD,GAAIxQ,EAAI0R,EAAU3R,OAAS,EAAG,CAC1B,IAAIoS,EAAST,EAAU1R,EAAI,GACvBmS,EAAO1F,IAAM/J,EAAUsH,SAAWmI,EAAO1F,IAAM/J,EAAUoH,OACzDtN,KAAK4V,aAAa5B,EAAO2B,EAAOhF,SAASvB,KAAMuG,EAAOhF,SAAStB,OAAQ,E,CAG/E,MACJ,KAAKnJ,EAAU4F,kBACPwJ,EAA8BA,EAA8B/R,OAAS,IAAM6R,IAC3EE,EAA8B5Q,MAC9B0Q,IAEApV,KAAK6V,aAAa7B,EAAO5C,EAAET,SAASvB,KAAM,EAAG,IAGjDgG,IACA,IAAIU,EAAeT,EAAuB3Q,MAC1C,GAAoB,MAAhBoR,GAAwBA,GAAgB1E,EAAET,SAASvB,KAC1B,MAArB+F,GAA6BA,EAAkBxE,SAASvB,MAAQgC,EAAET,SAASvB,MAC3EpP,KAAK8O,QAAQkF,EAAO5C,EAAET,SAAUS,EAAET,SAAU,KAAO,IAAIoF,OA/C7D,EA+CoEX,SAGlE,GAAI5R,EAAI,EAAG,CACP,IAAImS,EAAST,EAAU1R,EAAI,GACvBmS,EAAO1F,IAAM/J,EAAUoH,OAASqI,EAAO1F,IAAM/J,EAAUsH,SACvDxN,KAAK4V,aAAa5B,EAAO5C,EAAET,SAASvB,KAAMgC,EAAET,SAAStB,OAAQ,E,CAIzE,MACJ,KAAKnJ,EAAUuF,YAEX,GADAgK,IACIjS,EAAI0R,EAAU3R,OAAS,EAAG,CAC1B,IAAIyS,EAAad,EAAU1R,EAAI,GAC3ByS,EAAaf,EAAU1R,EAAI,GAC3BwS,EAAW/F,IAAM/J,EAAUoH,OAAS2I,EAAWhG,IAAM/J,EAAUsH,UAC/DxN,KAAK6V,aAAa7B,EAAOgC,EAAWrF,SAASvB,KAAM4G,EAAWrF,SAAStB,OAAQ2G,EAAWrF,SAASpN,QACnGC,IACIyS,EAAWhG,IAAM/J,EAAUwF,eAC3BlI,IACAiS,K,CAIZ,GAAIjS,EAAI,EAAG,CACP,IAAI0S,EAAahB,EAAU1R,EAAI,GAC3B2S,EAAajB,EAAU1R,EAAI,GAC3B0S,EAAWjG,IAAM/J,EAAUoH,OAAS6I,EAAWlG,IAAM/J,EAAUsH,SAAYxN,KAAKoW,iBAAiBD,EAAWlG,KAC1E,GAA9BiG,EAAWvF,SAASpN,QACpBvD,KAAK6V,aAAa7B,EAAOkC,EAAWvF,SAASvB,KAAM8G,EAAWvF,SAAStB,OAAQ,E,CAI3F,MACJ,KAAKnJ,EAAUwF,aAEX,GADA+J,IACIjS,EAAI,EAAG,CACP,IAAIwS,EAAad,EAAU1R,EAAI,GAC3ByS,EAAaf,EAAU1R,EAAI,GAC3BwS,EAAW/F,IAAM/J,EAAUoH,OAAS2I,EAAWhG,IAAM/J,EAAUsH,SAC/DxN,KAAK6V,aAAa7B,EAAOgC,EAAWrF,SAASvB,KAAM4G,EAAWrF,SAAStB,OAAQ2G,EAAWrF,SAASpN,O,CAG3G,MACJ,KAAK2C,EAAUsH,QAEX,GADAgI,EAAsB,EAClBhS,EAAI0R,EAAU3R,OAAS,EAAG,CAE1B,IAAI8S,EAAsBrW,KAAKoW,iBAAiBjB,aAAiB,EAAjBA,EAAmBlF,IAC/DqG,EAAsBtW,KAAKoW,iBAAiBpW,KAAKuW,qBAAqB/S,EAAG0R,GAAWjF,IAEpFuG,EAAgBtB,EAAU1R,EAAI,GAC9BiT,EAASvB,EAAU1R,EAAI,GACvBkT,EAAqB,EAEzB,GAAIF,EAAcvG,IAAM/J,EAAUsH,QAC9B,MAGJ,IAAImH,EAAgB,EACpB,GAAI6B,EAAcvG,IAAM/J,EAAUoH,MAAO,CACrC,GAAImJ,EAAOxG,IAAM/J,EAAUsH,QACvB,MAEJkJ,EAAqBF,EAAc7F,SAASpN,OAC5CC,IACIiT,EAAOxG,IAAM/J,EAAU4F,oBACvB6I,GAAS,E,CAIb6B,EAAcvG,IAAM/J,EAAU4F,oBAC9B6I,GAAS,IAOV2B,GAAuBD,KAAqB1B,EAAQ,GAEvD,IAAIgC,EAAKvB,EAAcT,EACpBc,EAAoB,GACnBkB,IAEAA,EAAK,IAAGA,EAAK,GAEjB,IAAIC,EAvIN,EAuI2BD,EAErBC,EAAqBF,EACrB1W,KAAK4V,aAAa5B,EAAO5C,EAAET,SAASvB,KAAO,EAAG,EAAGwH,EAAqBF,GAC/DE,EAAqBF,GAC5B1W,KAAK6V,aAAa7B,EAAO5C,EAAET,SAASvB,KAAO,EAAG,EAAGsH,EAAqBE,E,CAG9E,MACJ,KAAK1Q,EAAUoH,MACP9J,EAAI0R,EAAU3R,OAAS,GACP2R,EAAU1R,EAAI,GAChByM,IAAM/J,EAAUwH,SACtBlK,EAAI,GACY0R,EAAU1R,EAAI,GAChByM,IAAM/J,EAAUsH,SACtB4D,EAAET,SAASpN,OAAS,GACpBvD,KAAK6V,aAAa7B,EAAO5C,EAAET,SAASvB,KAAMgC,EAAET,SAAStB,OAAQ+B,EAAET,SAASpN,OAAS,GAMrG,MACJ,KAAK2C,EAAU+G,MACf,KAAK/G,EAAU6G,UACX,GAAIvJ,EAAI,EAAG,CACP,IAAI0S,EAAahB,EAAU1R,EAAI,GAC3B2S,EAAajB,EAAU1R,EAAI,GAC3B0S,EAAWjG,IAAM/J,EAAUsH,SAAW2I,EAAWlG,IAAM/J,EAAUsH,SAAYxN,KAAKoW,iBAAiBD,EAAWlG,KAC1GiG,EAAWjG,IAAM/J,EAAUoH,OAAuC,GAA9B4I,EAAWvF,SAASpN,QACxDvD,KAAK6V,aAAa7B,EAAOkC,EAAWvF,SAASvB,KACzC8G,EAAWvF,SAAStB,OAAQ,E,CAI5C,GAAI7L,EAAI0R,EAAU3R,OAAS,EAAG,CAC1B,IAAIsT,EAAY3B,EAAU1R,EAAI,GAC1BqT,EAAU5G,IAAM/J,EAAUwH,SAAWmJ,EAAU5G,IAAM/J,EAAUoH,OAASuJ,EAAU5G,IAAM/J,EAAUsH,SAClGxN,KAAK4V,aAAa5B,EAAO6C,EAAUlG,SAASvB,KAAMyH,EAAUlG,SAAStB,OAAQ,E,CAGrF,MACJ,KAAKnJ,EAAU0F,mBACc,MAArBuJ,GAA6BA,EAAkBlF,IAAM/J,EAAUyF,mBAC/D3L,KAAK0V,eAAeP,EAAmB/D,EAAG4C,EAAO,IAQ7D,GAAIhU,KAAKoW,iBAAiBhF,EAAEnB,IAAK,CAE7B,IAAI6G,EAAe1F,EAAEnB,IAAM/J,EAAUuG,OAASzM,KAAK+W,gCAAgCvT,EAAG0R,GAClF8B,EAAiB5F,EAAEnB,IAAM/J,EAAUwG,SAAW1M,KAAKiX,kCAAkCzT,EAAG0R,GAE5F,GAAIM,GAAuB,GAA0B,MAArBL,GAA6B,CAACjP,EAAUuF,YAAavF,EAAU+G,OAAOuD,QAAQ2E,EAAkBlF,IAAM,EAAG,CAErI,GAAIzM,EAAI,EAAG,CACP,IAAI0T,EAAchC,EAAU1R,EAAI,GAC5B2T,EAAUL,GAAgBE,EAAkB,EAAI,EAChDE,EAAYjH,IAAM/J,EAAUoH,MACxB4J,EAAYvG,SAASpN,QAAU4T,GAC/BnX,KAAK4V,aAAa5B,EAAOkD,EAAYvG,SAASvB,KAC1C8H,EAAYvG,SAAStB,OAAQ8H,EAASD,EAAYvG,SAASpN,QAGrD,GAAV4T,GACAnX,KAAK4V,aAAa5B,EAAO5C,EAAET,SAASvB,KAAMgC,EAAET,SAAStB,OAAQ,E,CAIzE,GAAI7L,EAAI0R,EAAU3R,OAAS,EAAG,CAC1B,IAAIsT,EAAY3B,EAAU1R,EAAI,GAC1B2T,EAAS,EAAiB,EAAI,EAC9BN,EAAU5G,IAAM/J,EAAUoH,OACtB0J,GAAkBxT,EAAI0R,EAAU3R,OAAS,GAAK2R,EAAU1R,EAAI,GAAGyM,IAAM/J,EAAUuF,cAC/E0L,EAAS,GAETN,EAAUlG,SAASpN,QAAU4T,GAC7BnX,KAAK4V,aAAa5B,EAAO6C,EAAUlG,SAASvB,KACxCyH,EAAUlG,SAAStB,OAAQ8H,EAASN,EAAUlG,SAASpN,UAG3DyT,GAAkBH,EAAU5G,IAAM/J,EAAUuF,cAC5C0L,EAAS,GAEC,GAAVA,GAAanX,KAAK4V,aAAa5B,EAAO6C,EAAUlG,SAASvB,KAAMyH,EAAUlG,SAAStB,OAAQ,G,GAO1G+B,EAAEnB,IAAM/J,EAAUoH,OAAS8D,EAAEnB,IAAM/J,EAAUsH,UAC7C2H,EAAoB/D,E,CAO5B,OAFApR,KAAKkU,wBAAwBF,GAEtBA,CAEX,CACAuC,qBAAqBa,EAAsBlC,GAEvC,GAAGkC,GAAgBlC,EAAU3R,OAAS,EAAG,OAAO2R,EAAUkC,GAE1D,IAAIC,EAAID,EAAe,EACvB,KAAMC,EAAInC,EAAU3R,OAAS,GAAM2R,EAAUmC,GAAGpH,IAAM/J,EAAUoH,OAC5D+J,IAEJ,OAAOnC,EAAUmC,EAErB,CAEAN,gCAAgCpG,EAAkBuE,GAC9C,IAAI1R,EAAImN,EAAW,EACnB,KAAOnN,EAAI0R,EAAU3R,QAAQ,CACzB,IAAI0M,EAAKiF,EAAU1R,GAAGyM,GACtB,GAAIA,GAAM/J,EAAUwG,QAChB,OAAO,EAEX,GAAI,CAACxG,EAAUoH,MAAOpH,EAAU+G,MAAO/G,EAAUG,YAAYmK,QAAQP,GAAM,EACvE,OAAO,EAEXzM,G,CAEJ,OAAO,CACX,CAEAyT,kCAAkCtG,EAAkBuE,GAChD,IAAI1R,EAAImN,EAAW,EACnB,KAAOnN,GAAK,GAAG,CACX,IAAIyM,EAAKiF,EAAU1R,GAAGyM,GACtB,GAAIA,GAAM/J,EAAUuG,MAChB,OAAO,EAEX,GAAI,CAACvG,EAAUoH,MAAOpH,EAAU+G,MAAO/G,EAAUG,YAAYmK,QAAQP,GAAM,EACvE,OAAO,EAEXzM,G,CAEJ,OAAO,CACX,CAEA4S,iBAAiBrC,GACb,OAAgB,MAATA,GAAiBA,GAAS7N,EAAUgG,QAAU6H,GAAS7N,EAAUyG,KAC5E,CAEQ+I,eAAeP,EAA0B/D,EAAU4C,EAAoC7C,GAC3F,IAAImG,EAAe,CACflI,KAAM+F,EAAkBxE,SAASvB,KACjCC,OAAQ8F,EAAkBxE,SAAStB,OAAS8F,EAAkBxE,SAASpN,QAEvEgU,EAAa,CACbnI,KAAMgC,EAAET,SAASvB,KACjBC,OAAQ+B,EAAET,SAAStB,QAEnBiI,EAAalI,MAAQmI,EAAWnI,MAChCmI,EAAWlI,OAASiI,EAAajI,QAAU8B,EAAK5N,QAChDvD,KAAK8O,QAAQkF,EAAOsD,EAAcC,EAAYpG,EAEtD,CAEA0E,aAAa7B,EAAoC5E,EAAcC,EAAgBmI,GAC3ExD,EAAMhR,KAAK,CACPqR,MAAO,CACHI,YAAapF,EACbkF,gBAAiBnF,EACjBoF,UAAWnF,EAASmI,GAA4B,GAAVnI,EAAc,EAAI,GACxDiF,cAAelF,GAEnB+B,KAAM,IAEd,CAEAyE,aAAa5B,EAAoC5E,EAAcC,EAAgBmI,GAEvEA,EAAiB,EACjBxX,KAAK6V,aAAa7B,EAAO5E,EAAMC,GAASmI,GAI5CxD,EAAMhR,KAAK,CACPqR,MAAO,CACHI,YAAapF,EACbkF,gBAAiBnF,EACjBoF,UAAWnF,EACXiF,cAAelF,GAEnB+B,KAAM,IAAI4E,OAAOyB,IAEzB,CAEA1I,QAAQkF,EAAoCsD,EAAiDC,EAA+CpG,GAExI6C,EAAMhR,KAAK,CACPqR,MAAO,CACHI,YAAa6C,EAAajI,OAC1BkF,gBAAiB+C,EAAalI,KAC9BoF,UAAW+C,EAAWlI,OACtBiF,cAAeiD,EAAWnI,MAE9B+B,KAAMA,GAGd,EC5bG,MAAMsG,EAIT5T,cAFA,KAAA6T,OAAkB,GAGd1X,KAAK2X,YACT,CAEAC,YAAY9T,GACR,IAAK,IAAI+T,KAAS7X,KAAK0X,OACnB,GAAIG,EAAM/T,MAAQA,EAAM,CACpB9D,KAAK8X,oBAAoBD,GACzB,K,CAGZ,CAEQC,oBAAoBD,GACxBtE,OAAOwB,OAAOgD,SAASF,EAAMG,aAE7B,IAAIC,EAAOC,SAASC,gBACpB,IAAK,MAAM3a,KAAON,OAAOoH,KAAKuT,EAAMO,WAAY,CAC5C,MAAM1a,EAAQma,EAAMO,UAAU5a,GAE9Bya,EAAKI,MAAMC,YAAY9a,EAAKE,E,CAIpC,CAEAia,aAEI3X,KAAK0X,OAAO1U,KAAK,CACbc,KAAM,OACNkU,YAAa,oBACbI,UAAW,CACP,mBAAoB,UACpB,oBAAqB,UACrB,sBAAuB,UACvB,uBAAwB,UACxB,oBAAqB,UACrB,mBAAoB,UACpB,WAAY,UACZ,yBAA0B,UAC1B,yBAA0B,UAC1B,sBAAuB,mBACvB,qBAAsB,UACtB,sBAAuB,UACvB,cAAe,UACf,oBAAqB,UACrB,0BAA2B,UAC3B,2BAA4B,UAC5B,kBAAmB,UACnB,kBAAmB,UACnB,qBAAsB,UACtB,eAAgB,0BAChB,gBAAiB,UACjB,sBAAuB,0BACvB,oBAAqB,MACrB,mBAAoB,OACpB,2BAA4B,UAC5B,sBAAuB,mBACvB,iCAAkC,UAClC,4BAA6B,UAC7B,mBAAoB,UACpB,qBAAsB,UACtB,qBAAsB,0BACtB,mBAAoB,UACpB,eAAgB,UAChB,iBAAkB,6BAClB,kBAAmB,YACnB,gCAAiC,MACjC,4BAA6B,yBAC7B,0BAA2B,4BAC3B,yBAA0B,gBAC1B,sBAAuB,yBACvB,qBAAsB,UACtB,sBAAuB,UACvB,4BAA6B,UAC7B,oCAAqC,UACrC,gCAAiC,UACjC,6BAA8B,UAC9B,yBAA0B,UAE1B,sBAAuB,UAGvB,+BAAgC,QAChC,gCAAiC,iBACjC,mBAAoB,mBACpB,6BAA8B,UAC9B,2BAA4B,UAC5B,4BAA6B,UAC7B,sBAAuB,QACvB,2BAA4B,qBAC5B,wBAAyB,OACzB,wBAAyB,QACzB,kBAAmB,qBACnB,kBAAmB,mBAGnB,iBAAkB,qBAClB,YAAa,QAGb,4BAA6B,UAC7B,wBAAyB,UACzB,mCAAoC,UACpC,+BAAgC,UAChC,8BAA+B,QAC/B,qCAAsC,UACtC,mBAAoB,yBACpB,oBAAqB,yBAGrB,uBAAwB,UACxB,kBAAmB,UACnB,uBAAwB,2BAGxB,eAAgB,OAChB,kBAAmB,aAM3B,IAAIG,EAAiB,UAErBvY,KAAK0X,OAAO1U,KAAK,CACbc,KAAM,QACNkU,YAAa,qBACbI,UAAW,CACP,mBAAoB,QACpB,oBAAqB,UACrB,sBAAuB,UACvB,uBAAwB,UACxB,oBAAqB,OACrB,mBAAoB,UACpB,WAAY,UACZ,yBAA0B,UAC1B,yBAA0B,UAC1B,sBAAuB,mBACvB,qBAAsB,UACtB,sBAAuB,UACvB,cAAe,UACf,oBAAqB,UACrB,0BAA2B,UAC3B,2BAA4B,UAC5B,kBAAmBG,EACnB,kBAAmB,UACnB,qBAAsB,UACtB,eAAgB,UAChB,gBAAiBA,EACjB,sBAAuB,UACvB,oBAAqB,MACrB,mBAAoB,QACpB,2BAA4B,QAC5B,sBAAuB,UACvB,iCAAkCA,EAClC,4BAA6B,UAC7B,mBAAoB,UACpB,qBAAsB,UACtB,qBAAsB,UACtB,mBAAoB,UACpB,eAAgB,UAChB,iBAAkB,6BAClB,kBAAmB,YACnB,gCAAiC,MACjC,4BAA6B,yBAC7B,0BAA2B,4BAC3B,yBAA0B,UAC1B,sBAAuB,yBACvB,qBAAsB,UACtB,sBAAuB,UACvB,4BAA6B,UAC7B,oCAAqC,UACrC,gCAAiC,UACjC,6BAA8B,UAC9B,yBAA0B,UAE1B,sBAAuB,UAIvB,+BAAgC,UAChC,gCAAiC,UACjC,mBAAoB,mBACpB,6BAA8B,UAC9B,2BAA4B,QAC5B,4BAA6B,UAC7B,sBAAuB,UACvB,2BAA4B,QAC5B,wBAAyB,OACzB,wBAAyB,UACzB,kBAAmB,qBACnB,kBAAmB,mBAGnB,iBAAkB,QAClB,YAAa,UAGb,4BAA6B,UAC7B,wBAAyB,UACzB,mCAAoC,UACpC,+BAAgC,UAChC,8BAA+B,QAC/B,qCAAsC,UACtC,mBAAoB,yBACpB,oBAAqB,yBAGrB,uBAAwB,UACxB,kBAAmB,UACnB,uBAAwB,qBAGxB,eAAgB,UAChB,kBAAmB,YAO/B,ECrOG,MAAeC,GAgBf,MAAMC,UAAoBD,EAW7B3U,YAAmBC,EAAqB4U,EAC7BC,EAAqCC,EAAgCC,GAC5EC,QAFe,KAAAhV,KAAAA,EAAqB,KAAA4U,sBAAAA,EAC7B,KAAAC,cAAAA,EAAqC,KAAAC,eAAAA,EAVhD,KAAAG,kBAAmE,IAAIC,IAEvE,KAAAC,eAA8B,GAU1BjZ,KAAK6Y,cAAgBA,EAAc/T,MAAM,GACzC,IAAIoU,EAAWlZ,KAAK6Y,cAAcrI,QAAQ1M,GACvCoV,GAAY,GAAGlZ,KAAK6Y,cAAcnE,OAAOwE,EAAU,EAC1D,CAEAC,wBAAwBlJ,GACpB,OAAQA,GACJ,KAAK/J,EAAUO,eACX,OAAOzG,KAAKoZ,YAAYC,IAAI,QAChC,KAAKnT,EAAUI,gBACX,OAAOtG,KAAKoZ,YAAYC,IAAI,WAChC,KAAKnT,EAAUK,sBACX,OAAOvG,KAAKoZ,YAAYC,IAAI,SAChC,KAAKnT,EAAUQ,aACX,OAAO1G,KAAKoZ,YAAYC,IAAI,QAChC,KAAKnT,EAAUM,gBACX,OAAOxG,KAAKoZ,YAAYC,IAAI,WAChC,KAAKnT,EAAUuD,YACX,OAAOzJ,KAAKoZ,YAAYC,IAAI,QAKxC,CAEAC,kBACI,OAAOtZ,KAAK8D,IAChB,CAEAyV,WACI,OAAOvZ,KAAK8D,IAChB,CAEAqV,mBAAmBrV,GAKf,OAJW,MAARA,GAA4C,QAA5BA,EAAK0V,sBACpB1V,EAAO,WAGJ9D,KAAKoZ,YAAYC,IAAIvV,EAAK0V,oBACrC,CAEAL,oBAAoBM,GAChBhB,EAAYgB,UAAYhB,EAAYgB,UAAUC,OAAOD,GACrDA,EAAUlZ,SAAQ6Q,GAAKqH,EAAYW,YAAYO,IAAIvI,EAAEtN,KAAMsN,IAC/D,CAEAwI,mBAAmBC,EAAoCC,EAAyBC,EAAyBC,GAAyB,GAEzHC,MAAMC,QAAQL,KAAYA,EAAY,CAACA,IAE5CA,EAAUtZ,SAAQ6Q,IACd,IAAI+I,EAAqCna,KAAK+Y,kBAAkBM,IAAIjI,GACzD,MAAP+I,IACAA,EAAM,IAAInB,IACVhZ,KAAK+Y,kBAAkBY,IAAIvI,EAAG+I,IAElCA,EAAIR,IAAIG,EAAYC,GAChBC,GAAiBF,GAAc9Z,MAC/B8Z,EAAWF,mBAAmBxI,EAAGpR,KAAM+Z,GAAY,E,GAI/D,CAEAK,UAAUC,GAEN,IAAIC,EAAmBD,aAAiB5B,EAAc4B,EAAQA,EAAgB,SAE9E,OAAOra,KAAK6Y,cAAcrI,QAAQ8J,EAAIxW,OAAS,GAAK9D,KAAK8D,MAAQwW,EAAIxW,IAEzE,CAEAyW,oBAAoBC,EAAqBV,GAGrC,IAAIK,EAAMna,KAAK+Y,kBAAkBM,IAAImB,GACrC,GAAW,MAAPL,EAAa,OAAO,KAExB,IAAIG,EAAmBR,aAAsBrB,EAAcqB,EAAaA,EAAqB,SAE7F,OAAOK,EAAId,IAAIiB,EAEnB,CAEAG,mBAAmBD,GACf,MAAG,CAACtU,EAAUyI,OAAQzI,EAAUwI,WAAW8B,QAAQgK,IAAa,EAAUE,EACvE1a,KAAKiZ,eAAezI,QAAQgK,IAAY,EAAUxa,UAArD,CACJ,CAEA2a,gBAAgBH,EAAqBI,EAAaC,GAC9C,OAAQL,GACJ,KAAKtU,EAAU4G,cAGf,KAAK5G,EAAUiG,KACX,OAAc,MAAVyO,GAA4B,MAAVC,EAAuBD,EAASC,EACrC,MAAVD,EAAiBA,EAASC,EACrC,KAAK3U,EAAU+F,MACX,OAAc,MAAV2O,GAA4B,MAAVC,EAAuBD,EAASC,EACrC,MAAVD,EAAiBA,EAASC,EACrC,KAAK3U,EAAUkG,eAGf,KAAKlG,EAAUmG,SAGf,KAAKnG,EAAUyD,WACX,OAAc,MAAViR,GAA4B,MAAVC,EAAuBD,EAASC,EACrC,MAAVD,EAAiBA,EAASC,EACrC,KAAK3U,EAAU0D,UACX,OAAc,MAAVgR,GAA4B,MAAVC,EAAuB7H,KAAK8H,IAAIF,EAAQC,GAC7C,MAAVD,EAAiBA,EAASC,EACrC,KAAK3U,EAAUuG,MACX,OAAc,MAAVmO,GAA4B,MAAVC,EAAuBD,EAASC,EACrC,MAAVD,EACX,KAAK1U,EAAUwG,QACX,OAAc,MAAVkO,GAA4B,MAAVC,EAAuBD,GAAUC,EACtC,MAAVD,EACX,KAAK1U,EAAU0G,aACX,OAAc,MAAVgO,GAA4B,MAAVC,EAAuBD,GAAUC,EACtC,MAAVD,EACX,KAAK1U,EAAU2G,eACX,OAAc,MAAV+N,GAA4B,MAAVC,EAAuBD,GAAUC,EACtC,MAAVD,EACX,KAAK1U,EAAUyG,MACX,OAAOiO,GAAUC,EACrB,KAAK3U,EAAU2H,SACX,OAAO+M,GAAUC,EAE7B,EAzIO,EAAApB,UAA2B,GAC3B,EAAAL,YAAwC,IAAIJ,IA6IvD,IAAI+B,EAAiB,CAAC,EAAG,GAAI,IAAK,IAAM,IAAQ,IAAQ,IAAS,IAAU,IAAW,KAE/E,MAAMC,UAAuBxC,EAIhC3U,YAAmBoX,EAA8BC,GAC7CpC,QADe,KAAAmC,SAAAA,EAA8B,KAAAC,gBAAAA,EAE7C,IAAIC,EAAaD,EAAgBE,KAAK,MACtCpb,KAAK8D,KAAOmX,EAASnX,KAAO,IAAMqX,EAAa,GACnD,CAEA5B,WACI,OAAOvZ,KAAK8D,IAChB,CAEAwV,kBACI,OAAOtZ,KAAKib,SAASnX,IACzB,CAGAsW,UAAUC,GAEN,IAAIC,EAAmBD,aAAiB5B,EAAc4B,EAAQA,EAAgB,SAE9E,OAAOra,KAAKib,SAASpC,cAAcrI,QAAQ8J,EAAIxW,OAAS,GAAK9D,KAAKib,SAASnX,MAAQwW,EAAIxW,IAE3F,CAEAyW,oBAAoBC,EAAqBV,GAGrC,IAAIK,EAAMna,KAAKib,SAASlC,kBAAkBM,IAAImB,GAC9C,GAAW,MAAPL,EAAa,OAAO,KAExB,IAAIG,EAAmBR,aAAsBrB,EAAcqB,EAAaA,EAAqB,SAEzFuB,EAAiBlB,EAAId,IAAIiB,GAE7B,GAAIta,KAAKib,UAAYX,GAAOta,KAAKib,UAAYI,GAAkBvB,aAAsBkB,EAAgB,CACjG,GAA0B,WAAtBhb,KAAKib,SAASnX,MAAqB0W,GAAYtU,EAAU4G,cACzD,OAAO,IAAIkO,EAAehb,KAAKib,SAAU,CAACjb,KAAKkb,gBAAgB,GAAKpB,EAAWoB,gBAAgB,KAEnG,GAA0B,WAAtBlb,KAAKib,SAASnX,KACd,OAAO,IAAIkX,EAAehb,KAAKib,SAAU,CAACjI,KAAK8H,IAAI9a,KAAKkb,gBAAgB,GAAIpB,EAAWoB,gBAAgB,IAAKlI,KAAK8H,IAAI9a,KAAKkb,gBAAgB,GAAIpB,EAAWoB,gBAAgB,K,CAIjL,OAAOf,EAAId,IAAIiB,EAEnB,CAEAG,mBAAmBD,GACf,OAAOxa,KAAKib,SAASR,mBAAmBD,EAC5C,CAEAG,gBAAgBH,EAAqBI,EAAaC,GAC9C,IAAI7Z,EAAShB,KAAKib,SAASN,gBAAgBH,EAAUI,EAAQC,GAC7D,OAAI7a,KAAK8D,KAAO,WAA4B,MAAV9C,EAAiB,MAAQ,GAAKA,GAAQ4T,OAAO,EAAG5U,KAAKkb,gBAAgB,IACtF,WAAblb,KAAK8D,KACS,MAAV9C,EAAuB,KACpBgS,KAAKsI,MAAMta,EAAS+Z,EAAK/a,KAAKkb,gBAAgB,KAAOH,EAAK/a,KAAKkb,gBAAgB,IAGnFla,CACX,EAGJ,IAAIua,EAAY,CAAC,UAAW,OAAQ,OAAQ,WAAY,aAAc,YAEtE,IAAIC,EAAc,IAAI/C,EAAY,UAAW,CAAC,mBAAmB,CAACgD,EAAIC,IAAO,gBAAgBD,SAAUzI,KAAK8H,IAAIY,EAAG,GAAI,QACnH,CAACC,EAAWD,IAAOC,EAAE5J,UAAU,EAAGiB,KAAK8H,IAAIY,EAAG,GAAI,KAAKH,GAEvDK,EAAW,IAAInD,EAAY,OAAQ,CAAC,mBAAmB,CAACgD,EAAIC,IAAO,gBAAgBD,SAAUzI,KAAK8H,IAAIY,EAAG,GAAI,QAC7G,CAACC,EAAWD,IAAOC,EAAE5J,UAAU,EAAGiB,KAAK8H,IAAIY,EAAG,GAAI,KAAKH,GAEvDM,EAAW,IAAIpD,EAAY,OAAQ,CAAC,mBAAmB,CAACgD,EAAIC,IAAO,KAAI,CAACC,EAAWD,IAAOC,GAAGJ,EAAU7B,OAAO,CAAC,OAAQ,OAAQ,WAAY,eAC3IoC,EAAe,IAAIrD,EAAY,WAAY,IAAI,CAACgD,EAAIC,IAAO,KAAI,CAACC,EAAWD,IAAOC,GAAGJ,GACrFQ,EAAiB,IAAItD,EAAY,aAAc,IAAI,CAACgD,EAAIC,IAAO,KAAI,CAACC,EAAWD,IAAOC,GAAGJ,GACzFS,EAAe,IAAIvD,EAAY,WAAY,IAAI,CAACgD,EAAIC,IAAO,KAAI,CAACC,EAAWD,IAAOC,GAAGJ,GAEzF,IAAIU,EAAa,CAAC,UAAW,UAAW,SAAU,OAAQ,SAE1D,IAAIC,EAAc,IAAIzD,EAAY,UAAW,CAAC,yBAA0B,qBAAqB,CAACgD,EAAIC,IAAO,KACrG,CAACC,EAAWD,KAAS,IAAIS,EAAKnJ,KAAKoJ,MAAMT,GAAQU,EAAKV,EAAIQ,EAAI,OAAYA,GAAMT,EAAG,GAAK,EAAI,IAAM1I,KAAKsI,MAAMe,EAAKtB,EAAKW,EAAG,KAAO,GAAG,GACpIO,GACAK,EAAc,IAAI7D,EAAY,UAAW,CAAC,yBAA0B,qBAAqB,CAACgD,EAAIC,IAAO,KAAI,CAACC,EAAWD,IAAO,GAAKC,GAAGM,GACpIM,EAAa,IAAI9D,EAAY,SAAU,CAAC,yBAA0B,qBAAqB,CAACgD,EAAIC,IAAO,KAAI,CAACC,EAAWD,IAAO,GAAKC,GAAGM,GAClIO,EAAW,IAAI/D,EAAY,OAAQ,IAAI,CAACgD,EAAIC,IAAO,KAAI,CAACC,EAAWD,IAAO,GAAKC,GAAGM,GAClFQ,EAAY,IAAIhE,EAAY,QAAS,IAAI,CAACgD,EAAIC,IAAO,KAAI,CAACC,EAAWD,IAAO,GAAKC,GAAGM,GAExF,IACIS,EADW,CAAC,MAAO,UAAW,UAAW,WAAY,YAAa,UAC3ChD,OAAOuC,GAElC,IAAIU,EAAU,IAAIlE,EAAY,MAAO,CAAC,gCAAgC,CAACgD,EAAIC,IAAO,eAAeD,QAASA,OAAO,CAACE,EAAWD,IAAO,GAAK1I,KAAKsI,MAAMK,IAAIe,GACpJE,EAAc,IAAInE,EAAY,UAAW,CAAC,gCAAgC,CAACgD,EAAIC,IAAO,eAAeD,QAASA,OAAO,CAACE,EAAWD,IAAO,GAAK1I,KAAKsI,MAAMK,IAAIe,GAC5JG,EAAc,IAAIpE,EAAY,UAAW,CAAC,gCAAgC,CAACgD,EAAIC,IAAO,eAAeD,QAASA,OAAO,CAACE,EAAWD,IAAO,GAAK1I,KAAKsI,MAAMK,IAAIe,GAC5JI,EAAe,IAAIrE,EAAY,WAAY,CAAC,gCAAgC,CAACgD,EAAIC,IAAO,eAAeD,QAASA,OAAO,CAACE,EAAWD,IAAO,GAAK1I,KAAKsI,MAAMK,IAAIe,GAC9JK,EAAgB,IAAItE,EAAY,YAAa,CAAC,gCAAgC,CAACgD,EAAIC,IAAO,eAAeD,QAASA,OAAO,CAACE,EAAWD,IAAO,GAAK1I,KAAKsI,MAAMK,IAAIe,GAChKM,EAAa,IAAIvE,EAAY,SAAU,CAAC,gCAAgC,CAACgD,EAAIC,IAAO,eAAeD,QAASA,OAAO,CAACE,EAAWD,IAAO,GAAK1I,KAAKsI,MAAMK,IAAIe,GAE1JO,EAAW,IAAIxE,EAAY,OAAQ,IAAI,CAACgD,EAAIC,IAAO,gBAAgBD,QAAQ,CAACE,EAAWD,IAAOC,GAAG,IACjGuB,EAAW,IAAIzE,EAAY,OAAQ,IAAI,CAACgD,EAAIC,IAAO,gBAAgBD,QAAQ,CAACE,EAAWD,IAAOC,GAAG,IACjGwB,EAAe,IAAI1E,EAAY,WAAY,IAAI,CAACgD,EAAIC,IAAO,oBAAoBD,QAAQ,CAACE,EAAWD,IAAOC,GAAG,CAAC,cAC9GyB,EAAgB,IAAI3E,EAAY,YAAa,IAAI,CAACgD,EAAIC,IAAO,oBAAoBD,QAAQ,CAACE,EAAWD,IAAOC,GAAG,CAAC,aAGhHjB,EAAc,IAAIjC,EAAY,UAAW,IAAI,CAACgD,EAAIC,IAAO,SAASD,aAAcA,YAAY,CAACE,EAAGD,IAAY,GAALC,EAAS,OAAS,SACzH,CAAC,UAAW,OAAQ,UAAW,YAE/B0B,EAAW,IAAI5E,EAAY,OAAQ,IAAI,CAACgD,EAAIC,IAAO,KAAI,CAACC,EAAGD,IAAOC,GAClE,IAEJ,IAAI2B,EAAe,CAACpB,EAAaI,EAAaC,EAAYC,EAAUC,EAAWE,EAASC,EAAaC,EAAaC,EAAcC,EAAeC,GAE3IvD,EAAY,CAAC+B,EAAaI,EAAUC,EAAUC,EAAcC,EAAgBC,EAC5EiB,EAAUC,EAAUC,EAAcC,EAAe1C,EAAa2C,GAAU3D,OAAO4D,GAE/EC,EAAY,CAACN,EAAUC,EAAUC,EAAcC,GAEnD3E,EAAY+E,aAAa/D,GAEzB+B,EAAY5B,mBAAmB1T,EAAU4G,cAAe0O,EAAaA,GACrEA,EAAY5B,mBAAmB1T,EAAU4G,cAAe8O,EAAUJ,GAClEA,EAAY5B,mBAAmB1T,EAAU4G,cAAe+O,EAAUA,GAClEA,EAASjC,mBAAmB1T,EAAU4G,cAAe+O,EAAUA,GAC/DL,EAAY5B,mBAAmB1T,EAAUwE,YAAa8Q,EAAad,GACnEc,EAAY5B,mBAAmB1T,EAAUwE,YAAamR,EAAUnB,GAChEmB,EAASjC,mBAAmB1T,EAAUwE,YAAamR,EAAUnB,GAE7DkB,EAAShC,mBAAmB1T,EAAU4G,cAAe8O,EAAUA,GAC/DA,EAAShC,mBAAmB1T,EAAU4G,cAAe0O,EAAaI,GAClEA,EAAShC,mBAAmB1T,EAAU4G,cAAe+O,EAAUA,GAC/DA,EAASjC,mBAAmB1T,EAAU4G,cAAe+O,EAAUA,GAC/DD,EAAShC,mBAAmB1T,EAAUwE,YAAakR,EAAUlB,GAC7DkB,EAAShC,mBAAmB1T,EAAUwE,YAAamR,EAAUnB,GAC7DmB,EAASjC,mBAAmB1T,EAAUwE,YAAamR,EAAUnB,GAE7D,IAAI+C,EAAsC,CAACvX,EAAUiG,KAAMjG,EAAU+F,MAAO/F,EAAUkG,eAAgBlG,EAAUmG,SAAUnG,EAAUgG,QAChIwR,EAAmC,CAACxX,EAAUuG,MAAOvG,EAAU0G,aAAc1G,EAAUwG,QAASxG,EAAU2G,eAAgB3G,EAAUyG,MAAOzG,EAAU2H,UAEzJ,IAAK,IAAIrK,EAAI,EAAGA,EAAI8Z,EAAa/Z,OAAQC,IAAK,CAC1C,IAAK,IAAI6T,EAAI7T,EAAG6T,EAAIiG,EAAa/Z,OAAQ8T,IACrCiG,EAAa9Z,GAAGoW,mBAAmB6D,EAAwBH,EAAajG,GAAIiG,EAAajG,IACzFiG,EAAa9Z,GAAGoW,mBAAmB8D,EAAqBJ,EAAajG,GAAIqD,GAE7E4C,EAAa9Z,GAAGyV,eAAiB,CAAC/S,EAAU+F,M,CAGhDiQ,EAAYtC,mBAAmB6D,EAAwBvB,EAAaA,GAEpE,IAAIyB,EAAiB,CAACnC,EAAaK,GACnC,IAAK,IAAIrY,EAAI,EAAGA,EAAIma,EAAepa,OAAQC,IACvC,IAAK,IAAI6T,EAAI7T,EAAG6T,EAAIsG,EAAepa,OAAQ8T,IACvCsG,EAAena,GAAGoW,mBAAmB1T,EAAU4G,cAAe6Q,EAAetG,GAAIsG,EAAetG,IAChGsG,EAAena,GAAGoW,mBAAmB8D,EAAqBC,EAAetG,GAAIqD,GAIrF,IAAI,IAAIlX,EAAI,EAAGA,EAAI+Z,EAAUha,OAAQC,IAAI,CACrC+Z,EAAU/Z,GAAGoW,mBAAmB8D,EAAqBH,EAAU/Z,GAAIkX,GACnE,IAAI,IAAIrD,EAAI,EAAGA,EAAIsG,EAAepa,OAAQ8T,IACtCkG,EAAU/Z,GAAGoW,mBAAmB8D,EAAqBC,EAAetG,GAAIqD,GACxEiD,EAAetG,GAAGuC,mBAAmB8D,EAAqBH,EAAU/Z,GAAIkX,E,CAIhF,IAAIkD,EAAoB,CAAC1X,EAAUyD,WAAYzD,EAAU0D,WACzD8Q,EAAYd,mBAAmBgE,EAAmBlD,EAAaA,GAE/DA,EAAYzB,eAAiB,CAAC/S,EAAU2D,YAExC4P,EAAUlZ,SAAQsd,GAAMA,EAAG5E,eAAiB4E,EAAG5E,eAAeS,OAAO,CAACxT,EAAUyI,OAAQzI,EAAUwI,cClU3F,MAAMoP,EAgCTja,cAhBA,KAAAka,UAAY,EAQZ,KAAAC,SAAkB,CACdrN,SAAU,CAAEvB,KAAM,EAAGC,OAAQ,EAAG9L,OAAQ,GACxC0M,GAAI/J,EAAUyH,gBACdjQ,MAAO,0BAGX,KAAAugB,uBAAyB,CAAC,SAAU,cAAe,SAAU,eAAgB,cAAe,cAAe,cA2sC3G,KAAAC,cAAwC,CAAC,KAAQ,MAAO,OAAU,UAAW,UAAa,UAvsC1F,CAEAC,MAAMC,GASF,GAPApe,KAAK6F,OAASuY,EAEdpe,KAAK+O,UAAYqP,EAAErP,UACnB/O,KAAKgP,UAAY,GAEjBoP,EAAEC,gBAAkB,IAAIrF,IAEK,GAAzBhZ,KAAK+O,UAAUxL,OAKf,OAJAvD,KAAK6F,OAAOyY,cAAgB,GAC5Bte,KAAK6F,OAAO4J,OAAO,GAAKzP,KAAKgP,eAC7BhP,KAAK6F,OAAO0Y,kBAAkB,CAAEnP,KAAM,EAAGC,OAAQ,EAAG9L,OAAQ,GAAK,CAAE6L,KAAM,IAAOC,OAAQ,IAAK9L,OAAQ,IAAK,GAAO,EAC7GvD,KAAKie,wBAIbje,KAAKmP,IAAM,EACXnP,KAAKwe,sBAGL,IAAIC,EAAYze,KAAK+O,UAAU/O,KAAK+O,UAAUxL,OAAS,GACvDvD,KAAKge,SAASrN,SAAW,CAAEvB,KAAMqP,EAAU9N,SAASvB,KAAMC,OAAQoP,EAAU9N,SAAStB,OAASoP,EAAU9N,SAASpN,OAAQA,OAAQ,GAEjIvD,KAAK6F,OAAOyY,cAAgBte,KAAK0e,YAEjC1e,KAAK6F,OAAO4J,OAAO,GAAKzP,KAAKgP,SAEjC,CAEAwP,sBAEIxe,KAAK2e,GAAK,GAEV,IAAK,IAAInb,EAAI,EAAGA,EAAIxD,KAAK+d,UAAWva,IAAK,CAErC,IAAIuQ,EAAe/T,KAAKge,SAExB,OAEQhe,KAAKmP,KAAOnP,KAAK+O,UAAUxL,SAFtB,CAIT,IAAIoS,EAAS3V,KAAK+O,UAAU/O,KAAKmP,KAKjC,GAJIwG,EAAO1F,IAAM/J,EAAUwH,UACvB1N,KAAK4e,YAAcjJ,GAGnBA,EAAO1F,IAAM/J,EAAUsH,SAAWmI,EAAO1F,IAAM/J,EAAUoH,OAASqI,EAAO1F,IAAM/J,EAAUwH,QAAS,CAClGqG,EAAQ4B,EACgB,MAApB3V,KAAK4e,cACL7K,EAAM8K,cAAgB7e,KAAK4e,YAC3B5e,KAAK4e,YAAc,MAEvB,K,CAGJ5e,KAAKmP,K,CAITnP,KAAK2e,GAAG3b,KAAK+Q,GAETvQ,EAAIxD,KAAK+d,UAAY,GACrB/d,KAAKmP,K,CAKbnP,KAAK8e,IAAM9e,KAAK2e,GAAG,GACnB3e,KAAKiQ,GAAKjQ,KAAK8e,IAAI7O,GACnBjQ,KAAK2Q,SAAW3Q,KAAK8e,IAAInO,QAE7B,CAEAkG,YAEI,IAAI9C,EAGJ,IAFA/T,KAAKye,UAAYze,KAAK8e,MAET,CAIT,GAFA9e,KAAKmP,MAEDnP,KAAKmP,KAAOnP,KAAK+O,UAAUxL,OAAQ,CACnCwQ,EAAQ/T,KAAKge,SACb,K,CAQJ,GALAjK,EAAQ/T,KAAK+O,UAAU/O,KAAKmP,KACxB4E,EAAM9D,IAAM/J,EAAUwH,UACtB1N,KAAK4e,YAAc7K,GAGnBA,EAAM9D,IAAM/J,EAAUsH,SAAWuG,EAAM9D,IAAM/J,EAAUoH,OAASyG,EAAM9D,IAAM/J,EAAUwH,QAAS,CAC/FqG,EAAM8K,cAAgB7e,KAAK4e,YAC3B5e,KAAK4e,YAAc,KACnB,K,EAKR,IAAK,IAAIpb,EAAI,EAAGA,EAAIxD,KAAK+d,UAAY,EAAGva,IACpCxD,KAAK2e,GAAGnb,GAAKxD,KAAK2e,GAAGnb,EAAI,GAG7BxD,KAAK2e,GAAG3e,KAAK+d,UAAY,GAAKhK,EAE9B/T,KAAK8e,IAAM9e,KAAK2e,GAAG,GACnB3e,KAAKiQ,GAAKjQ,KAAK8e,IAAI7O,GACnBjQ,KAAK2Q,SAAW3Q,KAAK8e,IAAInO,QAE7B,CAEAO,UAAUC,EAAcI,EAAyB,QAASZ,EAAyBoO,GAC/D,MAAZpO,IAAkBA,EAAWzT,OAAO8hB,OAAO,CAAC,EAAGhf,KAAK2Q,WACxD3Q,KAAKgP,UAAUhM,KAAK,CAChBmO,KAAMA,EACNR,SAAUA,EACVoO,SAAUA,EACVvN,MAAOD,GAEf,CAEA0N,KAAKhP,GACIgK,MAAMC,QAAQjK,KAAKA,EAAK,CAACA,IAC1BA,EAAGO,QAAQxQ,KAAKiQ,KAAO,GAAGjQ,KAAK6W,WACvC,CAEAqI,OAAOjP,EAA6BgP,GAAgB,EAAME,GAAgC,GACtF,GAAInf,KAAKiQ,IAAMA,KAAQgK,MAAMC,QAAQjK,IAAOA,EAAGO,QAAQxQ,KAAKiQ,KAAO,GAAI,CACnE,GAAIA,GAAM/J,EAAU6G,WAAa/M,KAAKiQ,IAAM/J,EAAUyH,gBAClD,OAAO,EAGX,IAAIgD,EAAyB3Q,KAAK8e,IAAInO,SAClCV,GAAM/J,EAAU6G,WAA+B,MAAlB/M,KAAKye,WAE9Bze,KAAKye,UAAU9N,SAASvB,KAAOuB,EAASvB,OACxCuB,EAAW,CACPvB,KAAMpP,KAAKye,UAAU9N,SAASvB,KAC9BC,OAAQrP,KAAKye,UAAU9N,SAAStB,OAASrP,KAAKye,UAAU9N,SAASpN,OACjEA,OAAQ,IAKpB,IA2BI6b,EA3BAL,EAAqB,KA6BzB,GA5BI9O,GAAM/J,EAAU6G,WAAa/M,KAAKye,UAAU9N,SAASvB,KAAOpP,KAAK8e,IAAInO,SAASvB,OAC7EpP,KAAKqf,gBAAgBrf,KAAKye,UAAUxO,MAErC8O,EAAW,CACPO,MAAO,4BACPC,cAAgBC,GACL,CAAC,CACJC,SAAUD,EACVE,KAAM,CACFrL,MAAO,CACHE,gBAAiB5D,EAASvB,KAAMqF,YAAa9D,EAAStB,OAAQiF,cAAe3D,EAASvB,KAAMoF,UAAW7D,EAAStB,OAChHsQ,QAAS,GACTC,SAAUrM,OAAOsM,eAAere,OAEpC2P,KAAM,QAOlBgO,GACAnf,KAAK6F,OAAOia,KAAKC,oBAAoBC,SAASrP,EAAU3Q,KAAK6F,SAMjEoU,MAAMC,QAAQjK,GAAK,CACnBmP,EAAsBnP,EAAGkK,KAAIpG,GAAS3N,EAAkB2N,KACxD,IAAIkM,EAAiBb,EAAoBhE,KAAK,MAC9Cpb,KAAKkR,UAAU,sCAAwC+O,EAAiB,sBAAwB7Z,EAAkBpG,KAAKiQ,IAAK,QAASU,EAAUoO,E,MAE/IK,EAAsB,CAAChZ,EAAkB6J,IACzCjQ,KAAKkR,UAAU,kBAAoB9K,EAAkB6J,GAAM,sBAAwB7J,EAAkBpG,KAAKiQ,IAAK,QAASU,EAAUoO,GAOtI,OAAO,C,CAOX,OAJIE,GACAjf,KAAK6W,aAGF,CACX,CAEAqJ,iBAAiBC,GACb,MAAO,CACH/Q,KAAM+Q,EAAE/Q,KACRC,OAAQ8Q,EAAE9Q,OAAS8Q,EAAE5c,OACrBA,OAAQ,EAEhB,CAEA8b,gBAAgBpP,GACZ,GAAIA,GAAM/J,EAAU8F,IAAK,OAAO,EAChC,IAAK,IAAIoU,KAAMtC,EAAOuC,mBAClB,IAAK,IAAI7F,KAAY4F,EACjB,GAAInQ,GAAMuK,EAAU,OAAO,CAGvC,CAEA8F,QACI,OAAOtgB,KAAK8e,KAAO9e,KAAKge,QAC5B,CAEAuC,WAAWxM,EAAgCkL,GAAgB,GAEvD,IAAKhF,MAAMC,QAAQnG,GAAQ,CACvB,IAAIyM,EAAexgB,KAAKiQ,IAAM8D,EAE9B,OADIyM,GAAOvB,GAAMjf,KAAK6W,YACf2J,C,CAGX,OAAOzM,EAAMvD,QAAQxQ,KAAKiQ,KAAO,CAErC,CAEAwQ,qBACI,OAAOvjB,OAAO8hB,OAAO,CAAC,EAAGhf,KAAK2Q,SAClC,CAEA+P,uBAAuBC,GAEnB,GAAI3gB,KAAKiQ,IAAM/J,EAAUyH,gBACrB,MAAO,CACHyB,KAAMpP,KAAKge,SAASrN,SAASvB,KAC7BC,OAAQ,IACR9L,OAAQ,GAKhB,IAAIqd,EAAO,EACPC,EAAmBF,EACnBpd,EAAS,EACb,KAAOqd,EAAO5gB,KAAK+d,UAAY,IAAMxa,EAASvD,KAAK2e,GAAGiC,GAAMjQ,SAASpN,QAAUsd,GAC3EA,GAAoBtd,EACpBqd,IAEJ,IAAIE,EAAW9gB,KAAK2e,GAAGiC,GAAMjQ,SAS7B,OARgB,MAAZmQ,IAAkBA,EAAW9gB,KAAKygB,sBAEd,CACpBrR,KAAM0R,EAAS1R,KACfC,OAAQyR,EAASzR,OAASwR,EAC1Btd,OAAQ,EAIhB,CAEAwd,uBAEI,IAAIpQ,EAAW3Q,KAAKygB,qBAIpB,OAHA9P,EAAStB,OAASsB,EAAStB,OAASrP,KAAK2Q,SAASpN,OAClDoN,EAASpN,OAAS,EAEXoN,CACX,CAEA+N,YAEI,IAAIsC,EAA8B,GAE9BC,EAA+B,CAC/B5R,OAAQ,EACRD,KAAM,IACN7L,OAAQ,GAGR2d,EAAmC,CACnC7R,OAAQ,EACRD,KAAM,EACN7L,OAAQ,GAGR4d,GAAuC,EAK3C,IAHAnhB,KAAK6F,OAAO0Y,kBAAkB2C,EAAoBlhB,KAAK0gB,uBAAuB,IAAI,GAAO,EACrF1gB,KAAKie,yBAEDje,KAAKsgB,SAAS,CAElB,IAAIc,EAASphB,KAAKmP,IAEdkS,EAAgCrhB,KAAKgP,UAAUzL,OAEnD,KAAO,CAAC2C,EAAUoH,MAAOpH,EAAUsH,QAAStH,EAAUwH,QAASxH,EAAU6G,WAAWyD,QAAQxQ,KAAK8e,IAAI7O,KAAO,GACxGjQ,KAAK6W,YAGT,IAAIyK,EAAgBthB,KAAKygB,qBAErBc,EAAKvhB,KAAKwhB,iBASd,IAPAN,EAAqB,CACjB9R,KAAMpP,KAAKye,UAAU9N,SAASvB,KAAO,EACrCC,OAAQ,EACR9L,OAAQ,GAGZ4d,EAA8BnhB,KAAKiQ,IAAM/J,EAAU6G,UAC5C/M,KAAKiQ,IAAM/J,EAAU6G,WACxB/M,KAAK6W,YAGT,IAAI4K,GAAqB,EACzB,IAAK,IAAIje,EAAI6d,EAAuB7d,EAAIxD,KAAKgP,UAAUzL,OAAQC,IAC5B,SAA3BxD,KAAKgP,UAAUxL,GAAGgO,QAAkBiQ,GAAY,GAiBxD,GAdU,MAANF,GACAP,EAAYhe,KAAK,CACb0e,IAAKH,EACLI,KAAML,EACNM,GAAI5hB,KAAKkgB,iBAAiBlgB,KAAKye,UAAU9N,UACzC8Q,UAAWA,EACXI,kBAAkB,IAK1BZ,EAAiBjhB,KAAKygB,qBAGlBzgB,KAAKmP,KAAOiS,EAAQ,CACpB,IAAIU,EACA,CAAC5b,EAAUkB,cAAelB,EAAUsB,cAAetB,EAAU0B,cAAe1B,EAAUmB,cACtFnB,EAAUiB,cAAejB,EAAUiC,YAAajC,EAAUc,cAE1D+a,GAAyB,EAE7B,MAAQ/hB,KAAKsgB,SAAWwB,EAAqBtR,QAAQxQ,KAAKiQ,IAAM,GACxD,CAAC/J,EAAUoH,MAAOpH,EAAUsH,SAASgD,QAAQxQ,KAAKiQ,IAAM,GAAK8R,IAC7D/hB,KAAKkR,UAAU,+CAAiD4Q,EAAqB3H,KAAI/I,GAAKhL,EAAkBgL,KAAIgK,KAAK,MACnH,qBAAuBpb,KAAK8e,IAAIphB,OACtCqkB,GAAgB,GAEpB/hB,KAAK6W,W,EAITsK,GAA+BnhB,KAAK8e,IAAInO,SAASvB,KAAO8R,EAAmB9R,KAAO,IAClFpP,KAAK6F,OAAO0Y,kBAAkB2C,EAAoBlhB,KAAK0gB,uBAAuB,IAAI,GAAO,EACrF1gB,KAAKie,uB,CAQjB,OAHAje,KAAK6F,OAAO0Y,kBAAkB2C,EAAoB,CAAE9R,KAAMpP,KAAKge,SAASrN,SAASvB,KAAO,EAAGC,OAAQ,EAAG9L,OAAQ,IAAK,GAAO,EACtHvD,KAAKie,wBAEF+C,CAEX,CAIAQ,eAAeQ,GAA2B,GAItC,OAAQhiB,KAAKiQ,IACT,KAAK/J,EAAUkB,cACX,OAAOpH,KAAKiiB,cAChB,KAAK/b,EAAUmB,cACX,OAAOrH,KAAKkiB,cAChB,KAAKhc,EAAU0B,cACX,OAAO5H,KAAKmiB,6BAChB,KAAKjc,EAAUsB,cACX,OAAOxH,KAAKoiB,cAChB,KAAKlc,EAAUiB,cACX,OAAOnH,KAAKqiB,cAChB,KAAKnc,EAAUiC,YACX,OAAOnI,KAAKsiB,iBAChB,KAAKpc,EAAUc,aACX,OAAOhH,KAAKuiB,kBAChB,KAAKrc,EAAUe,cAGX,OAFAjH,KAAKkR,UAAU,gFAAiF,QAChGlR,KAAK6W,YACE,KAEX,KAAK3Q,EAAUuB,WACX,OAAOzH,KAAKwiB,WAChB,KAAKtc,EAAUyB,WACX,OAAO3H,KAAKyiB,WAChB,KAAKvc,EAAU+E,aAIX,OAHAjL,KAAKkR,UAAU,6FAA8F,QAC7GlR,KAAK6W,YACL7W,KAAKkf,OAAOhZ,EAAUgF,oBAAoB,GACnC,KACX,KAAKhF,EAAUmF,YACf,KAAKnF,EAAUoF,cAEX,OADAtL,KAAK0iB,kBACE,KAEX,QACI,IAAIzR,EAAI7K,EAAkBpG,KAAKiQ,IACtB,MAALgB,IAAWA,EAAI,IACfA,GAAKjR,KAAK8e,IAAIphB,QAAOuT,GAAK,IAAMjR,KAAK8e,IAAIphB,MAAQ,KACrDuT,GAAK,6BACLjR,KAAKkR,UAAUD,GACfjR,KAAK6W,YAKb,OA/C6B,IAiDjC,CAEA6L,kBACI1iB,KAAK6W,YACL7W,KAAKkf,OAAOhZ,EAAU+B,eAAe,GACrCjI,KAAKif,KAAK/Y,EAAUG,YACpBrG,KAAKif,KAAK,CAAC/Y,EAAUqF,aAAcrF,EAAUsF,cAC7CxL,KAAKif,KAAK/Y,EAAU6G,UACxB,CAEAyV,WAEIxiB,KAAKkR,UAAU,qGAAsG,QAErH,IAAIyR,EAA6B,CAC7BpjB,KAAM2G,EAAU0c,kBAChBjS,SAAU3Q,KAAKygB,qBACfoC,YAAa,KACbC,YAAa,MAUjB,OAPA9iB,KAAK6W,YACL7W,KAAKkf,OAAOhZ,EAAUG,YAAY,GAClCrG,KAAKkf,OAAOhZ,EAAUyG,OAAO,GAC7B3M,KAAKkf,OAAO,CAAChZ,EAAUG,WAAYH,EAAUO,eAAgBP,EAAUI,gBAAiBJ,EAAUQ,aAAcR,EAAUM,gBAAiBN,EAAUK,wBAAwB,GAE7Koc,EAAKE,YAAc7iB,KAAKygB,qBAEjBkC,CACX,CAEAF,WAEIziB,KAAKkR,UAAU,sMAAuM,QAEtN,IAAIyR,EAA6B,CAC7BpjB,KAAM2G,EAAU0c,kBAChBjS,SAAU3Q,KAAKygB,qBACfoC,YAAa,KACbC,YAAa,MAQjB,OALA9iB,KAAK6W,YACL7W,KAAKkf,OAAOhZ,EAAUG,YAAY,GAElCsc,EAAKE,YAAc7iB,KAAKygB,qBAEjBkC,CACX,CAEAJ,kBAEI,IAAIjB,EAAgBthB,KAAKygB,qBACzBzgB,KAAK6W,YAEL,IAAI8L,EAAuB,CACvBpjB,KAAM2G,EAAUc,aAChB+b,KAAM,KACNpS,SAAU2Q,EACVuB,YAAa7iB,KAAKkgB,iBAAiBlgB,KAAKygB,sBACxCqC,YAAa,KACbE,gBAAiB,KACjBC,wBAAyB,MAQ7B,GALKjjB,KAAKkf,OAAOhZ,EAAU8B,cAAc,IACrChI,KAAKkjB,uBAAsB,GAAO,EAAO,CAAC,SAAU,GAGxDljB,KAAKkjB,uBAAsB,GAAO,EAAM,GAAI,IACvCljB,KAAKkf,OAAOhZ,EAAUG,YAAY,GAAQ,OAAOsc,EAStD,OAPAA,EAAKK,gBAA0BhjB,KAAK8e,IAAIphB,MACxCilB,EAAKM,wBAA0BjjB,KAAKygB,qBACpCzgB,KAAK6W,YACL8L,EAAKE,YAAc7iB,KAAKygB,qBAExBzgB,KAAKkjB,uBAAsB,GAAO,EAAO,CAAC,YAAa,gBAAiB,aAAc,eAAgB,GAE9FljB,KAAKiQ,IACT,KAAK/J,EAAUW,cAAe7G,KAAKmjB,yBAAyBR,GAAO,MACnE,KAAKzc,EAAUgB,WAAYlH,KAAKojB,mBAAmBT,GAAO,MAC1D,KAAKzc,EAAUiC,YAAanI,KAAKqjB,gBAAgBV,GAAO,MACxD,QACI3iB,KAAKkR,UAAU,uEAGvB,OAAOyR,CACX,CAEAQ,yBAAyBR,GAQrB,OANA3iB,KAAK6W,YACA7W,KAAKugB,WAAWra,EAAUa,YAC3B/G,KAAKkjB,sBAAsBP,EAAKK,iBAAiB,EAAO,CAAC,SAAU,MAAO,GAE9EL,EAAKE,YAAc7iB,KAAK+gB,uBAEhB/gB,KAAKiQ,IACT,KAAK/J,EAAUa,UAWX,OAVA/G,KAAK6W,YACL8L,EAAKE,YAAc7iB,KAAK+gB,uBACxB4B,EAAKI,KAAO,mBACR/iB,KAAKugB,WAAWra,EAAUG,aAC1Bsc,EAAKW,aAAuBtjB,KAAK8e,IAAIphB,MACrCsC,KAAK6W,YACL8L,EAAKE,YAAc7iB,KAAK+gB,wBAExB/gB,KAAKkR,UAAU,yCAGvB,KAAKhL,EAAUgC,cAIX,GAHAlI,KAAK6W,YACL8L,EAAKE,YAAc7iB,KAAK+gB,uBACxB/gB,KAAKkjB,sBAAsBP,EAAKK,iBAAiB,EAAO,GAAI,IACvDhjB,KAAKugB,WAAWra,EAAUG,YAE3B,YADArG,KAAKkR,UAAU,mDAAqDyR,EAAKK,gBAAkB,KAS/F,GANAL,EAAKI,KAAO,eACZJ,EAAKY,cAAwBvjB,KAAK8e,IAAIphB,MACtCilB,EAAKa,kBAAoBxjB,KAAKygB,qBAC9BzgB,KAAK6W,YACL7W,KAAKkjB,uBAAsB,GAAO,EAAO,CAAC,MAAO,GACjDP,EAAKE,YAAc7iB,KAAK+gB,wBACnB/gB,KAAKkf,OAAOhZ,EAAUa,WAAW,GAAO,OAS7C,OARA4b,EAAKE,YAAc7iB,KAAK+gB,4BACpB/gB,KAAKugB,WAAWra,EAAUG,aAC1Bsc,EAAKc,cAAwBzjB,KAAK8e,IAAIphB,MACtCsC,KAAK6W,YACL8L,EAAKE,YAAc7iB,KAAK+gB,wBAExB/gB,KAAKkR,UAAU,wCAGvB,QAEI,YADAlR,KAAKkR,UAAU,mIAM3B,CAGAmS,gBAAgBV,GACZ3iB,KAAK6W,YACL7W,KAAKugB,WAAWra,EAAUgC,eAAe,GACzCya,EAAKa,kBAAoBxjB,KAAKygB,qBAC9BzgB,KAAKkjB,sBAAsBP,EAAKK,iBAAiB,EAAO,GAAI,GAE5DL,EAAKI,KAAO,aACZJ,EAAKE,YAAc7iB,KAAK+gB,uBAEpB/gB,KAAKugB,WAAWra,EAAUG,aAC1Bsc,EAAKY,cAAwBvjB,KAAK8e,IAAIphB,MACtCsC,KAAK6W,aAEL7W,KAAKkR,UAAU,qEAGvB,CAEAkS,mBAAmBT,GACf,EAAG,CACC3iB,KAAK6W,YACL7W,KAAKugB,WAAWra,EAAUgB,YAAY,GACtC,IAAIwc,GAAkB,EACtB,OAAQ1jB,KAAKiQ,IACT,KAAK/J,EAAUgC,cACXlI,KAAK2jB,eAAehB,GACpB,MACJ,KAAKzc,EAAU4B,eACX9H,KAAK4jB,mBAAmBjB,GACxB,MACJ,KAAKzc,EAAUkC,cACXpI,KAAK6W,YACL6M,GAAS,EACT1jB,KAAKkf,OAAO,CAAChZ,EAAUoC,aAAcpC,EAAUmC,aAAa,GAChE,KAAKnC,EAAUmC,WACf,KAAKnC,EAAUoC,aACXtI,KAAK6jB,cAAclB,EAAMe,GACzB,MACJ,KAAKxd,EAAUsC,cACXxI,KAAK8jB,kBAAkBnB,GACvB,MACJ,KAAKzc,EAAUqC,kBACXvI,KAAK+jB,mBAAmBpB,G,OAG3B3iB,KAAKiQ,IAAM/J,EAAU+G,MAClC,CAEA8W,mBAAmBpB,GAEf,GADA3iB,KAAK6W,YACA7W,KAAKkf,OAAOhZ,EAAUG,aAEvBrG,KAAKugB,WAAWra,EAAU6B,gBAAiB,CAC3C,IAAIic,EAAMhkB,KAAKikB,4BACJ,MAAPD,IACwB,MAApBrB,EAAKuB,cAAqBvB,EAAKuB,YAAc,IACjDvB,EAAKuB,YAAYlhB,KAAKghB,GACtBrB,EAAKI,KAAO,c,CAIxB,CAEAkB,4BACI,IAAID,EAAsB,CAAE3U,OAAQ,GAAI8U,gBAAiB,GAAIC,iBAAkB,GAAIC,mBAAoBrkB,KAAKygB,sBAC5G,GAAKzgB,KAAKkf,OAAOhZ,EAAU6B,iBACtB/H,KAAKkf,OAAOhZ,EAAUmC,aACtBrI,KAAKkf,OAAOhZ,EAAUuF,aAE3B,GAAKzL,KAAKugB,WAAWra,EAAUG,aAQ/B,GAHA2d,EAAI3U,OAAiBrP,KAAK8e,IAAIphB,MAC9BsC,KAAK6W,YAEA7W,KAAKkf,OAAOhZ,EAAUwF,cAE3B,OADA1L,KAAKskB,gBAAgBN,GACdA,OATHhkB,KAAKkR,UAAU,yDAUvB,CAEAoT,gBAAgBN,GAEZ,IAAKhkB,KAAKkf,OAAOhZ,EAAU2B,mBAAoB,OAI/C,GAFA7H,KAAKkjB,uBAAsB,GAAO,EAAM,KAEnCljB,KAAKugB,WAAWra,EAAUG,YAE3B,YADArG,KAAKkR,UAAU,4DAInB8S,EAAIG,gBAA0BnkB,KAAK8e,IAAIphB,MACvCsC,KAAK6W,YAEL,IAAI0N,EAAOvkB,KAAKye,UAAU9N,SACtB6T,EAAOxkB,KAAKygB,qBAIhB,GAHAzgB,KAAK6F,OAAO0Y,kBAAkBve,KAAKkgB,iBAAiBqE,GAAOC,EAAMR,EAAIG,iBAAiB,EAAO,IAGxFnkB,KAAKkf,OAAOhZ,EAAUuF,aAC3B,GAAKzL,KAAKugB,WAAWra,EAAUG,aAQ/B,GAHA2d,EAAII,iBAA2BpkB,KAAK8e,IAAIphB,MACxCsC,KAAK6W,YAEA7W,KAAKkf,OAAOhZ,EAAUwF,cAE3B,KAAO1L,KAAKiQ,IAAM/J,EAAUkE,WAAW,CACnCpK,KAAK6W,YACL,IAAIkM,EAAqC,GAEzC,OAAQ/iB,KAAKiQ,IAET,KAAK/J,EAAUiB,cACX4b,EAAO,WACP,MAEJ,KAAK7c,EAAUsB,cACXub,EAAO,WAcf,OAVY,IAARA,GACA/iB,KAAKkR,UAAU,mDACVlR,KAAKugB,WAAW,CAACra,EAAUuC,eAAgBvC,EAAUwC,gBAAiBxC,EAAUuB,WAAYvB,EAAUwB,cACvG1H,KAAK6W,YACLkM,EAAO,aAGX/iB,KAAK6W,YAGD7W,KAAKiQ,IAET,KAAK/J,EAAUuC,eAEf,KAAKvC,EAAUwC,gBACXsb,EAAIjB,GAAgB/iB,KAAK8e,IAAIphB,MAC7BsC,KAAK6W,YACL,MAEJ,KAAK3Q,EAAUuB,WACXuc,EAAIjB,GAAQ,OACZ/iB,KAAK6W,YACD,CAAC3Q,EAAUuD,YAAavD,EAAU0E,gBAAgB4F,QAAQxQ,KAAKiQ,KAAO,GACtE+T,EAAIjB,IAAS/iB,KAAK8e,IAAIphB,MACtBsC,KAAK6W,aAEL7W,KAAKkR,UAAU,oEAEnB,MAEJ,KAAKhL,EAAUwB,UACX1H,KAAK6W,YACD7W,KAAKkf,OAAOhZ,EAAUyC,eACtBqb,EAAIjB,GAAQ,YAEhB,MACJ,QACI/iB,KAAKkR,UAAU,gG,OA7DvBlR,KAAKkR,UAAU,0DAoEvB,CAEA4S,kBAAkBnB,GACd3iB,KAAK6W,YACL,IAAI4N,EAAmBzkB,KAAK0kB,uBAAsB,GAC1B,MAApBD,IAC6B,MAAzB9B,EAAK8B,mBAA0B9B,EAAK8B,iBAAmB,IAC3D9B,EAAK8B,iBAAiBzhB,KAAKyhB,GAEnC,CAEAb,mBAAmBjB,GAGf,GAFA3iB,KAAK6W,YACL8L,EAAKgC,YAAc,GACf3kB,KAAKkf,OAAOhZ,EAAUmC,YAAY,IAASrI,KAAKkf,OAAOhZ,EAAUuF,aAAa,GAC9E,GACIzL,KAAK6W,YACD7W,KAAKiQ,IAAM/J,EAAUG,aACrBsc,EAAKgC,YAAY3hB,KAAahD,KAAK8e,IAAIphB,OACvCsC,KAAK6W,mBAEJ7W,KAAKiQ,IAAM/J,EAAU+G,OAElC,OAAIjN,KAAKkf,OAAOhZ,EAAUwF,cAAc,IACpCiX,EAAKI,KAAO,cACLJ,GAGJ,IACX,CAEAkB,cAAclB,EAAsBe,GAChC1jB,KAAK6W,YAEL,IAAI+N,EAAQ,CAAEC,WAAY,GAAIxV,OAAQ,GAAIqU,OAAQA,GAClD,OAAI1jB,KAAKiQ,IAAM/J,EAAUG,YAIrBrG,KAAKkR,UAAU,2CACR,OAJP0T,EAAMC,WAAqB7kB,KAAK8e,IAAIphB,MACpCsC,KAAK6W,YAMJ7W,KAAKkf,OAAOhZ,EAAUuF,aAAa,GACpCzL,KAAKiQ,IAAM/J,EAAUG,YAMrBrG,KAAKkR,UAAU,oFACR,OANP0T,EAAMvV,OAAiBrP,KAAK8e,IAAIphB,MAChCsC,KAAK6W,YACe,MAAhB8L,EAAKmC,UAAiBnC,EAAKmC,QAAU,IACzCnC,EAAKmC,QAAQ9hB,KAAK4hB,GAMtBjC,EAAKI,KAAO,cACZ/iB,KAAKkf,OAAOhZ,EAAUwF,cAAc,GAE7B,MAd+C,KAe1D,CAEAiY,eAAehB,GACXA,EAAKI,KAAO,YACZ/iB,KAAKugB,WAAWra,EAAUgC,eAAe,GACzCya,EAAKoC,eAAiB/kB,KAAKygB,qBAC3BkC,EAAKqC,UAAYhlB,KAAK0kB,uBAAsB,EAChD,CAEApC,iBAEI,IAAIhB,EAAgBthB,KAAKygB,qBACzBzgB,KAAK6W,YAEL,IAAI8L,EAAsB,CACtBpjB,KAAM2G,EAAUiC,YAChBwI,SAAU2Q,EACVuB,YAAa7iB,KAAKkgB,iBAAiBlgB,KAAKygB,sBACxCqC,YAAa,KACbE,gBAAiB,KACjBC,wBAAyB,KACzBgC,UAAU,GAad,OAVKjlB,KAAKkf,OAAOhZ,EAAU8B,cAAc,IACrChI,KAAKkjB,uBAAsB,GAAO,EAAO,CAAC,SAAU,GAGpDljB,KAAKugB,WAAWra,EAAUiF,WAAW,KACrCwX,EAAKsC,UAAW,EAChBjlB,KAAKkf,OAAOhZ,EAAUkF,eAAe,IAGzCpL,KAAKkjB,uBAAsB,GAAO,EAAM,GAAI,EAAG,GAAI,KAC9CljB,KAAKkf,OAAOhZ,EAAUG,YAAY,IAEvCsc,EAAKK,gBAA0BhjB,KAAK8e,IAAIphB,MACxCilB,EAAKM,wBAA0BjjB,KAAKygB,qBACpCzgB,KAAK6W,YACL8L,EAAKE,YAAc7iB,KAAKygB,qBAEjBkC,GAP+CA,CAS1D,CAEAN,cAEI,IAAIf,EAAgBthB,KAAKygB,qBACzBzgB,KAAK6W,YAEL,IAAI8L,EAAmB,CACnBpjB,KAAM2G,EAAUiB,cAChBwJ,SAAU2Q,EACVuB,YAAa7iB,KAAKkgB,iBAAiBlgB,KAAKygB,sBACxCqC,YAAa,KACbE,gBAAiB,KACjBC,wBAAyB,KACzBiC,UAAW,KACXC,eAAgB,KAChBC,aAAc,MAQlB,OALKplB,KAAKkf,OAAOhZ,EAAU2C,aAAa,IACpC7I,KAAKkjB,uBAAsB,GAAO,EAAO,CAAC,QAAS,GAGvDljB,KAAKkjB,uBAAsB,GAAO,EAAM,GAAI,EAAG,GAAI,cAC9CljB,KAAKkf,OAAOhZ,EAAUG,YAAY,IAEvCsc,EAAKK,gBAA0BhjB,KAAK8e,IAAIphB,MACxCilB,EAAKM,wBAA0BjjB,KAAKygB,qBACpCzgB,KAAK6W,YACL8L,EAAKE,YAAc7iB,KAAKygB,qBAExBzgB,KAAKkjB,uBAAsB,GAAO,EAAO,CAAC,aAAc,GACpDljB,KAAKiQ,IAAM/J,EAAU4C,eAEzB9I,KAAK6W,YAEL8L,EAAKE,YAAc7iB,KAAKygB,qBAGxBkC,EAAKwC,eAAiBnlB,KAAKkgB,iBAAiBlgB,KAAKye,UAAU9N,UAC3DgS,EAAKuC,UAAYllB,KAAKqlB,YACtB1C,EAAKyC,aAAeplB,KAAKygB,qBAEzBzgB,KAAK6F,OAAO0Y,kBAAkBoE,EAAKwC,eAAgBnlB,KAAK0gB,uBAAuB,GAAIiC,EAAKK,iBAAiB,EAAO,IAEhHL,EAAKE,YAAc7iB,KAAKygB,sBAbsBkC,GARQA,CAwB1D,CAEAP,cAEI,IAAId,EAAgBthB,KAAKygB,qBACzBzgB,KAAK6W,YAEL,IAAI8L,EAAmB,CACnBpjB,KAAM2G,EAAUsB,cAChBmJ,SAAU2Q,EACVuB,YAAa7iB,KAAKkgB,iBAAiBlgB,KAAKygB,sBACxCqC,YAAa,KACbE,gBAAiB,KACjBC,wBAAyB,KACzBqC,kBAAmB,GACnBC,0BAA2B,GAC3BnlB,OAAQ,GACRolB,cAAe,GACfC,YAAa,GACbP,UAAW,KACXC,eAAgB,KAChBC,aAAc,MAIlB,GADAplB,KAAKkjB,uBAAsB,GAAO,EAAM,GAAI,EAAG,GAAI,aAC9CljB,KAAKkf,OAAOhZ,EAAUG,YAAY,GAAQ,OAAOsc,EAQtD,GANAA,EAAKK,gBAA0BhjB,KAAK8e,IAAIphB,MACxCilB,EAAKM,wBAA0BjjB,KAAKygB,qBACpCzgB,KAAK6W,YACL8L,EAAKE,YAAc7iB,KAAKygB,qBAExBzgB,KAAKkjB,uBAAsB,GAAO,EAAO,CAAC,WAAY,IACjDljB,KAAKkf,OAAOhZ,EAAUuB,YAAa,OAAOkb,EAC/C,IAAIrU,GAAiB,EACrB,EAAG,CAGC,GAFAtO,KAAKkjB,sBAAsBP,EAAKK,iBAAiB,EAAO1U,EAAQ,GAAK,CAAC,SAAU,EAAG,KAAM,OACzFA,GAAQ,EACJtO,KAAKiQ,IAAM/J,EAAUG,WAAY,CACjCrG,KAAKkR,UAAU,0DAA4DyR,EAAKK,gBAAkB,gDAAiD,SACnJ,K,CAGJL,EAAK2C,kBAAkBtiB,KAAahD,KAAK8e,IAAIphB,OAC7CilB,EAAK4C,0BAA0BviB,KAAKhD,KAAKygB,sBACzCzgB,KAAK6W,YAEL7W,KAAKkf,OAAOhZ,EAAUyG,OAAO,GAE7BgW,EAAK6C,cAAcxiB,KAAKhD,KAAKygB,sBAC7BkC,EAAKviB,OAAO4C,KAAKhD,KAAKqlB,aACtB1C,EAAK8C,YAAYziB,KAAKhD,KAAKygB,qB,OAEtBzgB,KAAKugB,WAAWra,EAAU+G,OAAO,IAI1C,GAFA0V,EAAKE,YAAc7iB,KAAKygB,qBAEpBzgB,KAAKye,UAAUxO,IAAM/J,EAAU+G,OAASjN,KAAKugB,WAAWra,EAAU4C,cAAe,CACjF,IAAK9I,KAAKkf,OAAOhZ,EAAU4C,cAAc,GAAO,OAAO6Z,EAEvDA,EAAKwC,eAAiBnlB,KAAKkgB,iBAAiBlgB,KAAKye,UAAU9N,UAC3DgS,EAAKuC,UAAYllB,KAAKqlB,YACtB1C,EAAKyC,aAAeplB,KAAKygB,qBAEzBzgB,KAAK6F,OAAO0Y,kBAAkBoE,EAAKwC,eAAgBxC,EAAKyC,aAAczC,EAAKK,iBAAiB,EAAO,IAEnGL,EAAKE,YAAc7iB,KAAKygB,oB,MAExBzgB,KAAKugB,WAAWra,EAAU4C,cAAc,GAE5C,OAAO6Z,CAEX,CAEAR,6BACI,OAAQniB,KAAK2e,GAAG,GAAG1O,IACf,KAAK/J,EAAUwD,gBACX,OAAO1J,KAAK0lB,sBAChB,KAAKxf,EAAU8B,aACX,OAAOhI,KAAK2lB,mBAChB,QAII,OAHA3lB,KAAK6W,YACL7W,KAAKkR,UAAU,wCACflR,KAAK6W,YACE,KAEnB,CAEA6O,sBACI,IAAI/C,EAA6B,CAC7BpjB,KAAM2G,EAAU0c,kBAChBjS,SAAU3Q,KAAKygB,qBACfoC,YAAa,KACbC,YAAa,MAKjB,IAFA9iB,KAAK6W,YACL7W,KAAKkR,UAAU,qQAAsQ,QAC9QlR,KAAKiQ,IAAM/J,EAAU6G,WAAa/M,KAAKiQ,IAAM/J,EAAUyH,iBAC1DgV,EAAKE,YAAc7iB,KAAK+gB,uBACxB/gB,KAAK6W,YAGT,OAAO8L,CACX,CAEAgD,mBAEI,IAAIrE,EAAgBthB,KAAKygB,qBACzBzgB,KAAK6W,YAEA7W,KAAKkf,OAAOhZ,EAAU8B,cAAc,IACrChI,KAAK6F,OAAO0Y,kBAAkB+C,EAAethB,KAAK0gB,uBAAuB,IAAI,GAAO,EAAO,CAAC,UAGhG,IAAIkF,GAAuB,EACvB5lB,KAAKugB,WAAWra,EAAUiF,aAC1BnL,KAAK6W,YACL7W,KAAKkf,OAAOhZ,EAAU2D,YAAY,GAClC7J,KAAKkf,OAAOhZ,EAAUkF,eAAe,GACrCwa,GAAc,GAGlB,IAAIvf,EAAa,GACjB,GAAIrG,KAAKkf,OAAOhZ,EAAUG,YAAY,GAAQ,CAC1CA,EAAqBrG,KAAK8e,IAAIphB,MAC9B,IAAI8mB,EAAOxkB,KAAKygB,qBACZoF,EAAO7lB,KAAK0gB,uBAAuBra,EAAW9C,OAAS,GAC3DvD,KAAK6W,YACA7W,KAAKugB,WAAWra,EAAUuF,cAC3BzL,KAAK6F,OAAO0Y,kBAAkBiG,EAAMqB,GAAM,GAAO,EAAO,CAAC,K,CAIjE,IAAIlD,EAAwB,CACxBpjB,KAAM2G,EAAU0B,cAChBvB,WAAYA,EACZsK,SAAU2Q,EACVuB,YAAa,KACbiD,WAAY,GACZhD,YAAa,KACbiD,0BAA2B,GAC3BC,mBAAoB,GACpBJ,YAAaA,EACbK,kBAAmB,IAGvB,IAAKjmB,KAAKkf,OAAOhZ,EAAUuF,aAAa,GAAO,OAAOkX,EAEtD,IAAIuD,GAAoC,EACpC5X,GAAiB,EAErB,KAAOtO,KAAKiQ,IAAM/J,EAAUwF,cAAc,CAQtC,OAPK4C,GAAOtO,KAAKkf,OAAOhZ,EAAU+G,OAAO,GACzCqB,GAAQ,EACJtO,KAAKugB,WAAWra,EAAUqC,mBAAmB,KAC7CvI,KAAKkf,OAAOhZ,EAAUG,YAAY,GAClCrG,KAAKkf,OAAO,CAAChZ,EAAU6B,eAAgB7B,EAAU4B,eAAgB5B,EAAUkC,gBAAgB,IAGvFpI,KAAKiQ,IACT,KAAK/J,EAAU4B,eACPoe,GAA0BlmB,KAAKkR,UAAU,qEAAsE,QAASlR,KAAKygB,sBACjIzgB,KAAKmmB,oBAAoBD,EAA0BvD,GACnDuD,GAA2B,EAC3B,MACJ,KAAKhgB,EAAUkC,cACXpI,KAAKomB,gBAAgBzD,GACrB,MACJ,KAAKzc,EAAU6B,eACX,IAAIic,EAAMhkB,KAAKikB,4BACJ,MAAPD,GACArB,EAAKqD,mBAAmBhjB,KAAKghB,GAEjC,MACJ,KAAK9d,EAAUG,WACX,IAAIggB,EAAarmB,KAAK0kB,sBAAsBwB,GAC5CvD,EAAKmD,WAAW9iB,KAAKqjB,GACrBH,EAA2BA,GAA4BG,EAAWC,UAClE,MACJ,QACItmB,KAAKkR,UAAU9K,EAAkBpG,KAAKiQ,IAAM,6BAA8B,SAGlF,IAAKjQ,KAAKugB,WAAWra,EAAU+G,OAC3B,K,CAMR,IAFAjN,KAAKkf,OAAOhZ,EAAUwF,cAAc,GAE7B,CAACxF,EAAU0C,qBAAsB1C,EAAU4E,cAAe5E,EAAU0E,eAAgB1E,EAAUyE,gBAAgB6F,QAAQxQ,KAAKiQ,KAAO,GACrI,OAAQjQ,KAAKiQ,IACT,KAAK/J,EAAUyE,eAKf,KAAKzE,EAAU4E,cACX9K,KAAK6W,YACL7W,KAAKif,KAAK/Y,EAAUyG,OACpB3M,KAAKkf,OAAOhZ,EAAUG,YAAY,GAClC,MACJ,KAAKH,EAAU0E,eACX5K,KAAK6W,YACL7W,KAAKkf,OAAO,CAAChZ,EAAU6E,eAAgB7E,EAAU8E,mBAAmB,GACpEhL,KAAKif,KAAK/Y,EAAUuB,YACpBzH,KAAKif,KAAK/Y,EAAUyG,OACpB3M,KAAKkf,OAAOhZ,EAAUG,YAAY,GAClC,MACJ,KAAKH,EAAU0C,qBACX5I,KAAK6W,YACL7W,KAAKkf,OAAOhZ,EAAUyG,OAAO,GAC7B3M,KAAKkf,OAAOhZ,EAAUI,iBAAiB,GAMnD,IAAK,IAAI+I,KAAUsT,EAAKmD,WAChBzW,EAAOkX,mBAAqBlX,EAAOiX,WAAa3D,EAAKoD,0BAA0BvV,QAAQnB,EAAOhJ,aAAe,IAC7GrG,KAAKkR,UAAU,8FAA+F,UAAWyR,EAAKhS,UAOtI,OAFAgS,EAAKE,YAAc7iB,KAAKygB,qBAEjBkC,CACX,CAGAwD,oBAAoBD,EAAmCvD,GAC/CuD,GACAlmB,KAAKkR,UAAU,8DAEnBlR,KAAK6W,YACL7W,KAAKkf,OAAOhZ,EAAUmC,YAAY,GAElC,IAAIme,EAAoB7D,EAAKmD,WAAW3L,KAAIsM,GAAKA,EAAEpgB,aAGnD,GADArG,KAAKkjB,uBAAsB,GAAO,EAAOsD,GACrCxmB,KAAKugB,WAAWra,EAAUuF,aAAc,CAIxC,IAHAzL,KAAKkjB,uBAAsB,GAAO,EAAOsD,GACzCxmB,KAAK6W,cAEQ,CACT,IAAI7W,KAAKugB,WAAWra,EAAUG,YAUvB,CACHrG,KAAKkR,UAAU,8DAAgElR,KAAK8e,IAAIphB,OACxF,K,CARA,GAHAilB,EAAKoD,0BAA0B/iB,KAAahD,KAAK8e,IAAIphB,OACrDsC,KAAK6W,YACL7W,KAAKkjB,uBAAsB,GAAO,EAAOsD,EAAS,IAC7CxmB,KAAKugB,WAAWra,EAAU+G,OAC3B,MAEAjN,KAAK6W,YACL7W,KAAKkjB,uBAAsB,GAAO,EAAOsD,E,CAQrDxmB,KAAKkf,OAAOhZ,EAAUwF,cAAc,E,MAEpC1L,KAAKkR,UAAU,cAEvB,CAEAkV,gBAAgBzD,GACZ3iB,KAAK6W,YAEL,IAAI2P,EAAoB7D,EAAKmD,WAAW3L,KAAIsM,GAAKA,EAAEpgB,aAC/CqgB,EAA6B,GAIjC,GAHA/D,EAAKsD,kBAAkBjjB,KAAK0jB,GAE5B1mB,KAAKkjB,uBAAsB,GAAO,EAAOsD,GACrCxmB,KAAKugB,WAAWra,EAAUuF,aAAc,CAIxC,IAHAzL,KAAKkjB,uBAAsB,GAAO,EAAOsD,GACzCxmB,KAAK6W,cAEQ,CACT,IAAI7W,KAAKugB,WAAWra,EAAUG,YAUvB,CACHrG,KAAKkR,UAAU,8DAAgElR,KAAK8e,IAAIphB,OACxF,K,CARA,GAHAgpB,EAAiB1jB,KAAahD,KAAK8e,IAAIphB,OACvCsC,KAAK6W,YACL7W,KAAKkjB,uBAAsB,GAAO,EAAOsD,EAAS,IAC7CxmB,KAAKugB,WAAWra,EAAU+G,OAC3B,MAEAjN,KAAK6W,YACL7W,KAAKkjB,uBAAsB,GAAO,EAAOsD,E,CAQrDxmB,KAAKkf,OAAOhZ,EAAUwF,cAAc,E,MAEpC1L,KAAKkR,UAAU,cAEvB,CAEAwT,sBAAsBwB,GAElB,IAAIvV,EAAW3Q,KAAKygB,qBAChBpa,EAAqBrG,KAAK8e,IAAIphB,MAClCsC,KAAK6W,YAEL,IAAI8L,EAA8B,CAC9BpjB,KAAM2G,EAAU8e,UAChB3e,WAAYA,EACZigB,WAAW,EACXC,iBAAiB,EACjB5V,SAAUA,EACVsK,SAAU,KACV0L,SAAS,GAKb,OAFA3mB,KAAK4mB,UAAUjE,EAAMuD,GAEdvD,CAEX,CAEAO,sBAAsB2D,EAA+BC,EAAqBC,EAAiBC,EAA4B,EAAGC,EAAkB,GAAIC,EAAiB,IAC7J,IAAI3C,EAAOvkB,KAAKye,UAAU9N,SACtB6T,EAAOxkB,KAAKygB,qBAChB+D,EAAKnV,QAAU,EAAI2X,EACnBhnB,KAAK6F,OAAO0Y,kBAAkBve,KAAKkgB,iBAAiBqE,GAAOC,EAAMqC,EAAaC,EAAYC,EAAO,KAAME,EAASC,EACpH,CAIAN,UAAUjE,EAA6BuD,GAEnC,IAAIiB,EAAY1O,EAAYgB,UAAUU,KAAI5a,GAAQA,EAAKga,aAGvD,GAFAvZ,KAAKkjB,uBAAsB,GAAO,EAAOiE,IAEpCnnB,KAAKkf,OAAOhZ,EAAUG,YAAY,GAEnC,YADArG,KAAKkR,UAAU,+CAAiDlR,KAAK8e,IAAIphB,OAI7E,IAAI2I,EAAqBrG,KAAK8e,IAAIphB,MAC9B0pB,EAA0BpnB,KAAKke,cAAc7X,EAAWmT,qBAEpC,MAApB4N,IACA/gB,EAAa+gB,GAGjB,IAAI7nB,EAAOkZ,EAAY4O,YAAYhhB,GAOnC,GANY,MAAR9G,GACAS,KAAKkR,UAAU,+CAAiD7K,GAEpEsc,EAAK1H,SAAW1b,EAChBS,KAAK6W,YAED7W,KAAKiQ,IAAM/J,EAAUuF,YAAa,CAIlC,IAHAzL,KAAK6W,YACL8L,EAAKxH,WAAa,GAEXnb,KAAKiQ,IAAM/J,EAAUI,kBACxBqc,EAAKxH,WAAWnY,KAAahD,KAAK8e,IAAIphB,OACtCsC,KAAK6W,YAED7W,KAAKiQ,IAAM/J,EAAU+G,QAGzB,GAFAjN,KAAK6W,YAED7W,KAAKiQ,IAAM/J,EAAUI,gBAAiB,CACtCtG,KAAKkR,UAAU,kDAAoDlR,KAAK8e,IAAIphB,OAC5E,K,CAII,MAAR6B,GAAgBojB,EAAKxH,WAAW5X,OAAShE,EAAKmZ,sBAAsBnV,QACpEvD,KAAKkR,UAAU,gBAAkB3R,EAAKga,WAAa,kBAAoBha,EAAKmZ,sBAAsBnV,OAAS,eAG/GvD,KAAKkf,OAAOhZ,EAAUwF,cAAc,E,CAGtB,MAAdrF,GAAwD,QAAlCA,EAAWmT,qBAAoD,MAAnBmJ,EAAKxH,aACvEwH,EAAKxH,WAAa,CAAC,IAOvBnb,KAAKkjB,uBAAsB,GAAO,EAAO,CAAC,cAAe,aAAc,aAEvE,IAAIoE,EAAmC,GAEvC,KAAO,CAACphB,EAAUkE,UAAWlE,EAAU8E,iBAAkB9E,EAAU2E,eAAgB3E,EAAU0C,qBAAsB1C,EAAUmC,WAAYnC,EAAU4B,eAAgB5B,EAAU2D,WAAY3D,EAAU2B,kBAAmB3B,EAAUyE,eAAgBzE,EAAU0E,gBAAgB4F,QAAQxQ,KAAKiQ,KAAO,GAO1R,OANIqX,EAAoB9W,QAAQxQ,KAAKiQ,KAAO,GACxCjQ,KAAKkR,UAAU,qBAAuB9K,EAAkBpG,KAAKiQ,IAAM,6EAGvEqX,EAAoBtkB,KAAKhD,KAAKiQ,IAEtBjQ,KAAKiQ,IACT,KAAK/J,EAAU0C,qBACX5I,KAAK6W,YACL8L,EAAK4D,iBAAkB,EAEnBvmB,KAAKiQ,IAAM/J,EAAUyG,OACrB3M,KAAK6W,YACL7W,KAAKkf,OAAOhZ,EAAUI,kBAGlBtG,KAAKiQ,IAAM/J,EAAU+G,OAASjN,KAAK2e,GAAG,GAAG1O,IAAM/J,EAAU0C,sBACzD5I,KAAK6W,YAGb,MACJ,KAAK3Q,EAAU4B,eACPoe,GAA0BlmB,KAAKkR,UAAU,kEAC7ClR,KAAK6W,YACA7W,KAAKkf,OAAOhZ,EAAUmC,YAAY,GAGnCrI,KAAKkjB,uBAAsB,GAAO,EAAO,CAAC,sBAF1CljB,KAAKkjB,uBAAsB,GAAO,EAAO,CAAC,QAI9CP,EAAK2D,WAAY,EACjB,MACJ,KAAKpgB,EAAU2B,kBACX,IAAImc,EAAsB,CAAE3U,OAAQsT,EAAKtc,WAAY+d,iBAAkB,GAAID,gBAAiB,GAAIE,mBAAoBrkB,KAAKygB,sBACzHkC,EAAK4E,eAAiBvD,EACtBhkB,KAAKskB,gBAAgBN,GACrB,MACJ,KAAK9d,EAAU2D,WACX7J,KAAK6W,YACA7W,KAAKkf,OAAOhZ,EAAUuD,aAAa,GAGpCzJ,KAAKkjB,uBAAsB,GAAO,EAAO,CAAC,eAF1CljB,KAAKkjB,uBAAsB,GAAO,EAAO,CAAC,SAI9CP,EAAKgE,SAAU,EACf,MACJ,KAAKzgB,EAAUyE,eACX3K,KAAK6W,YACL8L,EAAK6E,QAAkBxnB,KAAK8e,IAAIphB,MAChCsC,KAAKkf,OAAOhZ,EAAUG,YAAY,GAClC,MACJ,KAAKH,EAAU8E,iBACXhL,KAAK6W,YACL7W,KAAKkf,OAAOhZ,EAAUuB,YAAY,GAClCzH,KAAKkf,OAAOhZ,EAAUG,YAAY,GAClC,MACJ,KAAKH,EAAU0E,eAGX,GAFA5K,KAAK6W,YAED7W,KAAK2e,GAAG,GAAG1O,IAAM/J,EAAUuF,aAAezL,KAAK2e,GAAG,GAAG1O,IAAM/J,EAAUwF,aAAc,CACnF1L,KAAK6W,YACL7W,KAAK6W,YACL7W,KAAK6W,YACL,K,CAQJ,GALA8L,EAAK8E,aAAuBznB,KAAK8e,IAAIphB,MACR,iBAAlBsC,KAAK8e,IAAIphB,OAAwD,QAAnCilB,EAAK8E,aAAatU,gBACvDwP,EAAK8E,aAAe,IAAM9E,EAAK8E,aAAe,KAG9CznB,KAAKiQ,IAAM/J,EAAUuD,YAAa,CAClCzJ,KAAK6W,YACL,K,CACO,CAAC3Q,EAAUG,WAAYH,EAAUI,gBAAiBJ,EAAUK,sBAAuBL,EAAUO,gBAAgB+J,QAAQxQ,KAAKiQ,KAAO,IACrHwI,EAAYiP,iBAAiB1nB,KAAKiQ,IACnCmK,UAAU7a,IACxBS,KAAKkR,UAAU,uEAEnBlR,KAAK6W,aAET,MACJ,KAAK3Q,EAAU2E,eACX7K,KAAK6W,YACL7W,KAAKkf,OAAOhZ,EAAUO,gBAAgB,GACtC,MACJ,KAAKP,EAAUkE,UAGX,IAFApK,KAAK6W,YACL7W,KAAKkf,OAAO,CAAChZ,EAAUsB,gBAAgB,IAC/BxH,KAAKugB,WAAW,CAACra,EAAU+G,MAAO/G,EAAUyH,gBAAiBzH,EAAUwF,gBAAgB1L,KAAK6W,YAEhG7W,KAAKye,UAAUxO,IAAM/J,EAAUuF,aAAezL,KAAKiQ,IAAM/J,EAAUwF,cAAc1L,KAAK6W,YAK1G,CAGAqL,cAEI,IAAIZ,EAAgBthB,KAAKygB,qBACrBkH,EAAsBrG,EAC1BthB,KAAK6W,YAEL7W,KAAKkf,OAAOhZ,EAAUoB,aAAa,GAEnC,IAAIqb,EAAmB,CACnBpjB,KAAM2G,EAAUmB,cAChBsJ,SAAU2Q,EACVuB,YAAa7iB,KAAKygB,qBAClBmH,eAAgB,KAChBC,gBAAiB,KACjB/E,YAAa,KACbgD,WAAY,GACZ1lB,OAAQ,GACR0nB,MAAO,MAgBX,GAbI9nB,KAAKiQ,IAAM/J,EAAUG,YACrBsc,EAAKmF,MAAQ,CACTvoB,KAAM2G,EAAU4hB,MAChBzhB,WAAoBrG,KAAK8e,IAAIphB,MAC7BqqB,MAAO,KACPpX,SAAU3Q,KAAKygB,sBAEnBkC,EAAKkF,gBAAkB,CAAEzY,KAAMuT,EAAKmF,MAAMnX,SAASvB,KAAMC,OAAQsT,EAAKmF,MAAMnX,SAAStB,OAASsT,EAAKmF,MAAMnX,SAASpN,OAAQA,OAAQ,GAClIvD,KAAK6W,aAEL7W,KAAKkR,UAAU,oEAAsElR,KAAK8e,IAAIphB,MAAO,SAGrGsC,KAAKiQ,IAAM/J,EAAUuF,YAAa,CAElCzL,KAAK6W,YACL,IAAIvI,GAAiB,EAErB,KAAOA,GAAStO,KAAKiQ,IAAM/J,EAAU+G,OAE5BqB,GACDtO,KAAK6W,YAETvI,GAAQ,EAGJtO,KAAKiQ,IAAM/J,EAAUG,WACrBsc,EAAKmD,WAAW9iB,KAAK,CACjBzD,KAAM2G,EAAUG,WAChBA,WAAYrG,KAAK8e,IAAIphB,MAAQ,GAC7BiT,SAAU3Q,KAAKygB,uBAInBzgB,KAAKkR,UAAU,8DAAgElR,KAAK8e,IAAIphB,MAAO,SAEnGsC,KAAK6W,YAET8Q,EAAuB3nB,KAAKygB,qBAC5BzgB,KAAKkf,OAAOhZ,EAAUwF,cAAc,E,CAMxC,OAHAiX,EAAKiF,eAAiB5nB,KAAKygB,qBAGnBzgB,KAAKiQ,IACT,KAAK/J,EAAUqB,cACXvH,KAAK6W,YACL7W,KAAKgoB,gBAAgBrF,EAAKviB,QAC1B,MACJ,KAAK8F,EAAUkB,cACf,KAAKlB,EAAUuF,YACX,GAAGzL,KAAKygB,qBAAqBrR,MAAQuY,EAAqBvY,KAAO,EAAE,CAC/D,IAAI6Y,EAAajoB,KAAKiiB,cACtBU,EAAKuF,OAASD,C,EAiB1B,OAFAtF,EAAKE,YAAc7iB,KAAKygB,qBAEjBkC,CACX,CAGAqF,gBAAgB5nB,GACZ,IAAI+nB,EAAmB,CAACjiB,EAAUuD,YAAavD,EAAUQ,aAAcR,EAAUO,eAAgBP,EAAUM,gBAAiBN,EAAUK,sBAAuBL,EAAUI,iBAEnK8hB,GAAsB,EAE1B,KAAOA,GAAcpoB,KAAKiQ,IAAM/J,EAAU+G,OAAO,CACxCmb,GACDpoB,KAAK6W,YAETuR,GAAa,EACb,IAAIC,EAAsBroB,KAAKygB,qBAC/B,IAAKzgB,KAAKkf,OAAOhZ,EAAUuF,aAAa,GACpC,MAEJ,IAAI2D,EAAuB,GACvBd,GAAiB,EAErB,KAAOA,GAAStO,KAAKiQ,IAAM/J,EAAU+G,OAAO,CAKxC,GAJKqB,GACDtO,KAAK6W,YAETvI,GAAQ,EACJtO,KAAKiQ,IAAM/J,EAAUG,WACrB,GAAIrG,KAAK8e,IAAI3M,yBACTnS,KAAKiQ,GAAK/J,EAAUO,mBACjB,CACH,IAAI6hB,GAAMtoB,KAAK8e,IAAIphB,MAAQ,IAAI8b,oBAC3B,CAAC,OAAQ,WAAWhJ,QAAQ8X,IAAO,GACnCtoB,KAAK6W,W,CAUbsR,EAAiB3X,QAAQxQ,KAAKiQ,IAAM,GACpCjQ,KAAKkR,UAAU,2DAA6DlR,KAAK8e,IAAIphB,MAAO,SAC5FsC,KAAK6W,cAELzH,EAAKpM,KAAK,CACNulB,aAAcvoB,KAAKiQ,GACnBU,SAAU3Q,KAAKygB,qBACf+H,SAAUxoB,KAAK8e,IAAIphB,MACnB6B,KAAM2G,EAAUuiB,eAEpBzoB,KAAK6W,Y,CAGb7W,KAAKkf,OAAOhZ,EAAUwF,cAAc,GACjB,GAAf0D,EAAK7L,OACLvD,KAAKkR,UAAU,2GAA4G,QAASmX,GAEpIjoB,EAAO4C,KAAKoM,E,CAIxB,CAEAsZ,gBACI,IAAID,EAA6B,CAC7BF,aAAcvoB,KAAKiQ,GACnBU,SAAU3Q,KAAKygB,qBACf+H,SAAUxoB,KAAK8e,IAAIphB,MACnB6B,KAAM2G,EAAUuiB,cAIpB,OAFAzoB,KAAK6W,YAEE4R,CACX,CAEAxG,cACI,IAAIX,EAAgBthB,KAAKygB,qBACzBzgB,KAAK6W,YAEL,IAAI8R,EAAgC,CAChCvZ,KAAMkS,EAAclS,KACpBC,OAAQiS,EAAcjS,OAAS,EAC/B9L,OAAQ,GAGRof,EAAmB,CACnBpjB,KAAM2G,EAAUkB,cAChBuJ,SAAU2Q,EACVuB,YAAa7iB,KAAKygB,qBAClBqC,YAAa,KACbgD,WAAY,GACZ8C,SAAU,KACV1D,UAAW,KACX2D,gBAAiB,MAGrBlG,EAAKmD,WAAa9lB,KAAK8oB,gBAAgB,CAAC5iB,EAAU2C,YAAa3C,EAAU6G,UAAW7G,EAAUyH,kBAAkB,GAEhH,IAAIob,EAAyB,CAAC,WAAY,KAAM,IAAK,QACjDpG,EAAKmD,WAAWkD,WAAUvC,GAAKA,EAAElnB,MAAQ2G,EAAU+iB,cAAe,IAClEF,EAAyB,CAAC,SAG9B/oB,KAAK6F,OAAO0Y,kBAAkBoK,EAAiB3oB,KAAK0gB,uBAAuB,IAAI,GAAM,EAAMqI,GAE3F,IACIG,EAAuB,CAAC,QAAS,OAAQ,OAAQ,QAAS,QAAS,QAAS,UAAW,KAAM,KAAM,MAEvG,GAHclpB,KAAKugB,WAAWra,EAAU2C,aAAa,GAK9C,CACH8Z,EAAKwG,kBAAoB,CAAE/Z,KAAMpP,KAAKye,UAAU9N,SAASvB,KAAMC,OAAQrP,KAAKye,UAAU9N,SAAStB,OAASrP,KAAKye,UAAU9N,SAASpN,OAAQA,OAAQ,GAEhJ,IAAI6lB,EAAqB,GACzBzG,EAAKiG,SAAW5oB,KAAKqpB,qBAAqBD,GAE1CF,EAAqBxU,OAAOwU,EAAqB1Y,QAAQxQ,KAAKye,UAAU/gB,MAAQ,IAAK,GAErF,IAAI4rB,EAAkBtpB,KAAK0gB,uBAAuB,GAC9C1gB,KAAKugB,WAAWra,EAAU6G,aAC1Buc,EAAkBtpB,KAAKygB,sBAG3BzgB,KAAK6F,OAAO0Y,kBAAkBoE,EAAKwG,kBAAmBG,GAAiB,GAAO,EAAMJ,EAAsBE,GAC1GzG,EAAK4G,gBAAkBvpB,KAAKygB,oB,MAf5BsI,EAAuBS,QAAQ,QAoBnC,IAAIC,EAAoB,CAAC,QACzB,GAAIzpB,KAAKiQ,IAAM/J,EAAU4C,aAAc,CACpB9I,KAAKygB,qBAApB,IACIiJ,EAAa1pB,KAAKygB,qBACtBzgB,KAAK6W,YACL8L,EAAKuC,UAAYllB,KAAKqlB,YACtBrlB,KAAK6F,OAAO0Y,kBAAkBmL,EAAY1pB,KAAK0gB,uBAAuB,IAAI,GAAM,EAAM+I,E,MAGtFP,EAAqBlmB,KAAK,SAG9B,IAAI2mB,EAAoB,GACxB,GAAI3pB,KAAKiQ,IAAM/J,EAAU6C,aAAc,CACnC,IAAI6gB,EAAa5pB,KAAKygB,qBACtBkC,EAAKkH,YAAc7pB,KAAK8pB,eACxB9pB,KAAK6F,OAAO0Y,kBAAkBqL,EAAY5pB,KAAKygB,sBAAsB,GAAM,EAAMkJ,E,MAEjFF,EAAkBzmB,KAAK,YAG3B,GAAIhD,KAAKiQ,IAAM/J,EAAUgD,aAAc,CACnC,IAAI6gB,EAAa/pB,KAAKygB,qBACtBkC,EAAKqH,YAAchqB,KAAKiqB,eACxBjqB,KAAK6F,OAAO0Y,kBAAkBwL,EAAY/pB,KAAKygB,sBAAsB,GAAM,EAAM,CAAC,MAAO,Q,MAEzFgJ,EAAkBzmB,KAAK,YACvB2mB,EAAkB3mB,KAAK,YAU3B,OAPIhD,KAAKiQ,IAAM/J,EAAUoE,eACrBqY,EAAKuH,UAAYlqB,KAAKmqB,cAG1BxH,EAAKE,YAAc7iB,KAAKygB,qBACxBkC,EAAKE,YAAYxT,QAAU,EAEpBsT,CACX,CAEAwH,aACI,IAAIxZ,EAAW3Q,KAAKygB,qBACpBzgB,KAAK6W,YACL,IAAIuT,EAAyBpqB,KAAKqlB,YAC9BgF,EAAgB,CAChB9qB,KAAM2G,EAAUoE,aAChBqG,SAAUA,EACVyZ,aAAcA,GAMlB,OAJIpqB,KAAKiQ,IAAM/J,EAAUqE,gBACrBvK,KAAK6W,YACLwT,EAAGC,OAAStqB,KAAKqlB,aAEdgF,CACX,CAEAP,eACI,IAAInZ,EAAW3Q,KAAKygB,qBACpBzgB,KAAKkf,OAAOhZ,EAAU6C,cAAc,GACpC/I,KAAKkf,OAAOhZ,EAAU8C,WAAW,GACjC,IAAIuhB,EAAmB,CACnBhrB,KAAM2G,EAAU6C,aAChB+c,WAAY,GACZnV,SAAUA,GAEV6Z,EAAyB,CAACtkB,EAAU+C,cAAe/C,EAAUkB,cAAelB,EAAUgD,aAAchD,EAAUoE,aAAcpE,EAAUwF,aAAcxF,EAAU6G,WAMlK,OALAwd,EAAIzE,WAAa9lB,KAAK8oB,gBAAgB0B,GAAwB,GAAOrQ,KAAIkM,GAAcA,EAAWoE,OAC9FzqB,KAAKiQ,IAAM/J,EAAU+C,gBACrBjJ,KAAK6W,YACL0T,EAAIG,OAAS1qB,KAAKqlB,aAEfkF,CACX,CAEAN,eACIjqB,KAAKkf,OAAOhZ,EAAUgD,cAAc,GACpClJ,KAAKkf,OAAOhZ,EAAU8C,WAAW,GAEjC,IAAI2hB,EAAyB,GACzBrc,GAAiB,EAErB,EAAG,CACKA,EACAA,GAAQ,EAERtO,KAAKkf,OAAOhZ,EAAU+G,OAAO,GAEjC,IAAIoC,EAAmBrP,KAAKqlB,YACxBuF,EAAmB,CACnBrrB,KAAM2G,EAAUgD,aAChByH,SAAU3Q,KAAKygB,qBACfpR,OAAQA,GAER,CAACnJ,EAAUiD,iBAAkBjD,EAAUkD,mBAAmBoH,QAAQxQ,KAAKiQ,KAAO,GAAGjQ,KAAK6W,YACtF7W,KAAKiQ,IAAM/J,EAAUmD,eACrBrJ,KAAK6W,YACL7W,KAAKkf,OAAO,CAAChZ,EAAUoD,aAAcpD,EAAUqD,cAAc,IAEjEohB,EAAQ3nB,KAAK4nB,E,OACR5qB,KAAKiQ,IAAM/J,EAAU+G,OAE9B,OAAO0d,CACX,CAEAtB,qBAAqBD,GAEjB,IAAIyB,EAAgC7qB,KAAK8qB,2BAA2B1B,GAEhEzY,EAAW3Q,KAAKygB,qBAEpB,KAAOzgB,KAAK+qB,qBAAqB,CAE7B,IAAIC,EAAiChrB,KAAK8qB,2BAA2B1B,GAErEyB,EAAW,CACPtrB,KAAM2G,EAAU4D,YAChBmhB,aAAcJ,EACdK,cAAeF,EACfra,SAAUA,GAGV3Q,KAAKiQ,IAAM/J,EAAUkE,YACrBygB,EAASM,GAAKnrB,KAAKqlB,Y,CAK3B,OAAOwF,CAEX,CAEAE,oBACI,GAAI/qB,KAAKiQ,IAAM/J,EAAU+G,MAErB,OADAjN,KAAK6W,aACE,EAGX,OADI7W,KAAKiQ,IAAM/J,EAAU6D,gBAAgB/J,KAAK6W,YACtC7W,KAAKiQ,IACT,KAAK/J,EAAU8D,YAIX,OAHAhK,KAAK6W,YAED7W,KAAKiQ,IAAM/J,EAAUiE,cAAcnK,KAAK6W,YACrC7W,KAAKkf,OAAOhZ,EAAU4D,aAAa,GAC9C,KAAK5D,EAAUgE,aACf,KAAKhE,EAAU+D,aAEX,OADAjK,KAAK6W,YACE7W,KAAKkf,OAAOhZ,EAAU4D,aAAa,GAC9C,KAAK5D,EAAU4D,YAEX,OADA9J,KAAK6W,aACE,EACX,QAAS,OAAO,EAExB,CAEAiU,2BAA2B1B,GAEvB,IAAKppB,KAAKkf,OAAO,CAAChZ,EAAUG,WAAYH,EAAUuF,cAAc,GAC5D,OAAO,KAGX,GAAIzL,KAAKiQ,IAAM/J,EAAUuF,YAAa,CAElC,IAAI+U,EAEJ,GAHAxgB,KAAK6W,YAGD7W,KAAKiQ,IAAM/J,EAAUkB,cAAe,CACpC,IAAIuJ,EAAW3Q,KAAKygB,qBAChB2K,EAAkBprB,KAAKiiB,cAC3BzB,EAAM,CACFjhB,KAAM2G,EAAUmlB,SAChBtD,MAAO,KACPpX,SAAUA,EACV2a,MAAOF,E,MAGX5K,EAAMxgB,KAAKqpB,qBAAqBD,GAepC,OAbAppB,KAAKkf,OAAOhZ,EAAUwF,cAAc,GAIhC1L,KAAKiQ,IAAM/J,EAAUmE,WAAamW,EAAIjhB,MAAQ2G,EAAUmlB,WACxDrrB,KAAK6W,YACD7W,KAAKkf,OAAOhZ,EAAUG,YAAY,KAClCma,EAAIuH,MAAgB/nB,KAAK8e,IAAIphB,MAC7BsC,KAAK6W,YACLuS,EAASpmB,KAAKwd,EAAIuH,SAInBvH,C,CAGX,GAAIxgB,KAAKiQ,IAAM/J,EAAUG,WAAY,CACjC,IAAIsc,EAAkB,CAClBpjB,KAAM2G,EAAU4hB,MAChBzhB,WAAoBrG,KAAK8e,IAAIphB,MAC7BqqB,MAAO,KACPpX,SAAU3Q,KAAKygB,sBAgBnB,OAdA2I,EAASpmB,KAAK2f,EAAKtc,YACnBrG,KAAK6W,YAGD7W,KAAKiQ,IAAM/J,EAAUmE,YACrBrK,KAAK6W,YACD7W,KAAKkf,OAAOhZ,EAAUG,YAAY,KAClCsc,EAAKoF,MAAgB/nB,KAAK8e,IAAIphB,MAC9BsC,KAAK6W,YACLuS,EAASpmB,KAAK2f,EAAKoF,SAKpBpF,C,CAGf,CAEAmG,gBAAgByC,EAAqCC,GACjD,IAAIhF,EAAwB,GAE5B,KAAO,CAACtgB,EAAUO,eAAgBP,EAAUI,gBAAiBJ,EAAUK,sBAAuBL,EAAUM,gBACxGN,EAAUG,WAAYH,EAAUkG,eAAgBlG,EAAUuF,YAAavF,EAAUY,iBAAiB0J,QAAQxQ,KAAKiQ,KAAO,GAAG,CACrH,GAAIjQ,KAAKiQ,IAAM/J,EAAUkG,eACrBoa,EAAQxjB,KAAK,CACTynB,KAAM,KACN1C,MAAO,KACP0D,UAAU,EACV9a,SAAU3Q,KAAKygB,qBACflhB,KAAM2G,EAAU+iB,aAEpBjpB,KAAK6W,gBACF,CACH,IAAI4U,EAAWzrB,KAAKugB,WAAWra,EAAUY,iBAAiB,GACtD4kB,EAAa1rB,KAAKqlB,YACtB,GAAkB,MAAdqG,EAAoB,CACpB,IAAIrc,EAAqB,CACrB9P,KAAM2G,EAAUmJ,OAChBob,KAAMiB,EACND,SAAUA,EACV9a,SAAU+a,EAAW/a,UAEzB6V,EAAQxjB,KAAKqM,GACTrP,KAAKugB,WAAWra,EAAUmE,aAC1BrK,KAAK6W,YACD7W,KAAKkf,OAAOhZ,EAAUG,YAAY,KAClCgJ,EAAO0Y,MAAQ,GAAK/nB,KAAK8e,IAAIphB,OAEjCsC,KAAK6W,Y,EAIjB,GAAI0U,EAAuB/a,QAAQxQ,KAAKiQ,KAAO,GAAKjQ,KAAKsgB,QACrD,MAEJtgB,KAAKkf,OAAOhZ,EAAU+G,OAAO,E,CAOjC,OAJsB,GAAlBuZ,EAAQjjB,QACRvD,KAAKkR,UAAU,8DAA+D,SAG3EsV,CACX,CAGAnB,YACI,OAAOrlB,KAAK2rB,gBAAgB,EAChC,CAEAA,gBAAgBC,GAEZ,IAAIC,EAEAA,EADAD,EAAa9N,EAAOuC,mBAAmB9c,OAAS,EACzCvD,KAAK2rB,gBAAgBC,EAAa,GAElC5rB,KAAK8rB,aAGhB,IAAIC,EAAYjO,EAAOuC,mBAAmBuL,GAE1C,GAAY,MAARC,GAAgBE,EAAUvb,QAAQxQ,KAAKiQ,IAAM,EAC7C,OAAO4b,EAGX,IAAIvd,GAAQ,EAEZ,KAAOA,GAASyd,EAAUvb,QAAQxQ,KAAKiQ,KAAO,GAAG,CAE7C,IAAIuK,EAAsBxa,KAAKiQ,GAE/B3B,GAAQ,EACR,IAGI0d,EAHArb,EAAW3Q,KAAKygB,qBAEpBzgB,KAAK6W,YAGDmV,EADAJ,EAAa9N,EAAOuC,mBAAmB9c,OAAS,EACxCvD,KAAK2rB,gBAAgBC,EAAa,GAElC5rB,KAAK8rB,aAGjBD,EAAO,CACHtsB,KAAM2G,EAAU+lB,SAChBtb,SAAUA,EACV6J,SAAUA,EACVyQ,aAAcY,EACdX,cAAec,E,CAMvB,OAAOH,CAEX,CAIAC,aAEI,IAAIrB,EACA9Z,EAAyB3Q,KAAKygB,qBAElC,OAAQzgB,KAAKiQ,IACT,KAAK/J,EAAUuF,YACX,OAAOzL,KAAKksB,eAChB,KAAKhmB,EAAU2D,WAIX,OAFA7J,KAAK6W,YACL4T,EAAOzqB,KAAK2rB,gBAAgB,GACrB,CACHpsB,KAAM2G,EAAUimB,QAChBxb,SAAUA,EACVyb,QAAS3B,EACTjQ,SAAUtU,EAAU2D,YAE5B,KAAK3D,EAAU+F,MAGX,IAAIogB,EAAMrsB,KAAKiQ,GAIf,OAHAjQ,KAAK6W,YACL4T,EAAOzqB,KAAK8rB,aAEL,CACHvsB,KAAM2G,EAAUimB,QAChBxb,SAAUA,EACVyb,QAAS3B,EACTjQ,SAAU6R,GAGlB,KAAKnmB,EAAUI,gBACf,KAAKJ,EAAUQ,aACf,KAAKR,EAAUK,sBACf,KAAKL,EAAUO,eACf,KAAKP,EAAUM,gBACXikB,EAAO,CACHlrB,KAAM2G,EAAUuiB,aAChB9X,SAAU3Q,KAAKygB,qBACf8H,aAAcvoB,KAAKiQ,GACnBuY,SAAUxoB,KAAK8e,IAAIphB,OAEvB,IAAI4uB,EAAmBtsB,KAAKiQ,IAAM/J,EAAUO,eAG5C,OAFAzG,KAAK6W,YAEDyV,EAAyBtsB,KAAKusB,sBAAsB9B,GAEjDA,EACX,KAAKvkB,EAAUG,WAEX,IAAImmB,EAAsBxsB,KAAK8e,IAAIphB,MAC/B+uB,EAAYzsB,KAAKygB,qBAIrB,GAFAzgB,KAAK6W,YAED7W,KAAKiQ,IAAM/J,EAAUuF,YAAa,CAClC,IAAI0P,EAAanb,KAAK0sB,4BAClB/E,EAAuBxM,EAAWwM,qBAEtC8C,EAAO,CACHlrB,KAAM2G,EAAUymB,WAChBhc,SAAU8b,EACV9E,qBAAsBA,EACtBiF,SAAUzR,EAAW0R,MACrBxmB,WAAYmmB,EACZM,eAAgB3R,EAAW2R,e,MAS/B,GANArC,EAAO,CACHlrB,KAAM2G,EAAUG,WAChBA,WAAYmmB,EACZ7b,SAAUA,GAGV3Q,KAAKiQ,IAAM/J,EAAU8F,IAAK,CAC1B,IAAI2E,EAAW3Q,KAAKygB,qBACpBzgB,KAAK6W,YACL7W,KAAKkf,OAAOhZ,EAAUG,YAAY,GAClC,IAAI0mB,EAAmC,CACnCxtB,KAAM2G,EAAUG,WAChBA,WAAoBrG,KAAK8e,IAAIphB,MAC7BiT,SAAU3Q,KAAKygB,sBAEnBzgB,KAAK6W,YACL4T,EAAO,CACHlrB,KAAM2G,EAAU8F,IAChBghB,eAAgCvC,EAChCwC,gBAAiBF,EACjBpc,SAAUA,E,KAGP,CAACzK,EAAUyI,OAAQzI,EAAUwI,WAAW8B,QAAQxQ,KAAKiQ,KAAO,IACnEwa,EAAO,CACHlrB,KAAM2G,EAAUimB,QAChBC,QAAS3B,EACTjQ,SAAUxa,KAAKiQ,GACfU,SAAUA,GAEd3Q,KAAK6W,aAIb,OAAO4T,EACX,QAEI,OADAzqB,KAAKkR,UAAU,wFAA0FlR,KAAK8e,IAAIphB,OAC3G,KAGnB,CAEAwvB,YACI,IAAIvK,EAAiB,CACjBpjB,KAAM2G,EAAUinB,KAChBxc,SAAU3Q,KAAKygB,qBACf2M,SAAU,IAGVC,EAAgB,CAACnnB,EAAUQ,aAAcR,EAAUO,eAAgBP,EAAUM,gBAAiBN,EAAUK,sBAAuBL,EAAUI,iBAE7I,KAAO+mB,EAAc7c,QAAQxQ,KAAKiQ,KAAO,IACrC0S,EAAKyK,SAASpqB,KAAK,CACfzD,KAAM2G,EAAUuiB,aAChBD,SAAUxoB,KAAK8e,IAAIphB,MACnB6qB,aAAcvoB,KAAKiQ,GACnBU,SAAU3Q,KAAK8e,IAAInO,WAEvB3Q,KAAK6W,YACD7W,KAAKiQ,IAAM/J,EAAU+G,QAGzBjN,KAAK6W,YAGT,OAAO8L,CACX,CAEAuJ,eAEmBlsB,KAAKygB,qBAApB,IACI6M,EAAqBttB,KAAKye,UAG9B,GAFAze,KAAK6W,YAED7W,KAAKiQ,IAAM/J,EAAUkB,cAAe,CACpC,IAAI6gB,EAAajoB,KAAKiiB,cAEtB,OADAjiB,KAAKkf,OAAOhZ,EAAUwF,cAAc,GAC7Buc,C,CACJ,GAAI,CAAC/hB,EAAU+G,MAAO/G,EAAUwF,cAAc8E,QAAQxQ,KAAK2e,GAAG,GAAG1O,KAAO,GAC3E,CAAC/J,EAAUsE,UAAWtE,EAAUuE,cAAc+F,QAAQ8c,EAAmBrd,KAAO,EAAG,CACnF,IAAIsd,EAAWvtB,KAAKktB,YAEpB,OADAltB,KAAKkf,OAAOhZ,EAAUwF,cAAc,GAC7B6hB,C,CACJ,CACH,IAAI9C,EAAOzqB,KAAKqlB,YACZsC,EAAuB3nB,KAAKygB,qBAUhC,OATAzgB,KAAKkf,OAAOhZ,EAAUwF,cAAc,GAEH,CAC7BiF,SAAUgX,EACVpoB,KAAM2G,EAAUwF,aAChB8hB,mBAAoB/C,E,CAShC,CAGAiC,4BAGI,GADA1sB,KAAK6W,YACD7W,KAAKiQ,IAAM/J,EAAUwF,aAAc,CACnC,IAAIic,EAAuB3nB,KAAKygB,qBAEhC,OADAzgB,KAAK6W,YACE,CAAE8Q,qBAAsBA,EAAsBkF,MAAO,GAAIC,eAAgB,G,CAGpF,IAAI3R,EAAyB,GACzB2R,EAAiC,GAErC,OAAa,CACT,IAAI3d,EAAMnP,KAAKmP,IAEf,GAAInP,KAAKiQ,IAAM/J,EAAUkG,eACrBpM,KAAK6W,YACLsE,EAAWnY,KAAK,CACZzD,KAAM2G,EAAU+iB,WAChBtY,SAAU3Q,KAAKygB,2BAEhB,CACH,IAAIgN,EAAYztB,KAAKqlB,YACJ,MAAboI,GACAtS,EAAWnY,KAAKyqB,E,CAIxB,GAAIztB,KAAKiQ,IAAM/J,EAAU+G,MACrB,MAEA6f,EAAe9pB,KAAKhD,KAAKygB,sBACzBzgB,KAAK6W,YAIL7W,KAAKmP,KAAOA,GACZnP,KAAK6W,W,CAKb,IAAIlG,EAAW3Q,KAAKygB,qBAGpB,MAAO,CAAEkH,qBAFe3nB,KAAKkf,OAAOhZ,EAAUwF,cAAc,GAETiF,EAAW,KAAMkc,MAAO1R,EAAY2R,eAAgBA,EAE3G,CAEAP,sBAAsB9B,GAElB,GAAY,MAARA,EAAc,OAAO,KAEzB,KAAOzqB,KAAKugB,WAAW,CAACra,EAAU8F,IAAK9F,EAAUyF,qBAC7C,GAAI3L,KAAKiQ,IAAM/J,EAAU8F,IAAK,CAI1B,GAFAhM,KAAK6W,YAED7W,KAAKiQ,IAAM/J,EAAUG,WAErB,OADArG,KAAKkR,UAAU,oFAAsFlR,KAAK8e,IAAIphB,OACvG+sB,EAGX,IAAIpkB,EAAqBrG,KAAK8e,IAAIphB,MAC9BiT,EAAW3Q,KAAKygB,qBAGpB,GAFAzgB,KAAK6W,YAED7W,KAAKiQ,IAAM/J,EAAUuF,YAAa,CAClC,IAAI0P,EAAanb,KAAK0sB,4BACtBjC,EAAO,CACHlrB,KAAM2G,EAAUymB,WAChBhc,SAAUA,EACVgX,qBAAsBxM,EAAWwM,qBACjCiF,SAAUzR,EAAW0R,MACrBxmB,WAAYA,EACZymB,eAAgB3R,EAAW2R,e,EAe3C,OAAOrC,CACX,EA5qEO,EAAApK,mBAAoC,CACvC,CAACna,EAAU0D,WAAY,CAAC1D,EAAUyD,YAClC,CAACzD,EAAUuG,MAAOvG,EAAU0G,aAAc1G,EAAUwG,QAASxG,EAAU2G,eAAgB3G,EAAUyG,MAAOzG,EAAU2H,SAAU3H,EAAUwE,aACtI,CAACxE,EAAU4G,cAAe5G,EAAUiG,KAAMjG,EAAU+F,OAAQ,CAAC/F,EAAUkG,eAAgBlG,EAAUmG,SAAUnG,EAAUgG,QACrH,CAAChG,EAAUsE,UAAWtE,EAAUuE,eCrBjC,MAAMijB,EAMT7pB,YAAmBwC,EAA2B9G,EAAsBuoB,EAAqB6F,EAA8BC,EAA4BnG,EAA6BlB,GAA7J,KAAAlgB,WAAAA,EAA2B,KAAA9G,KAAAA,EAAsB,KAAAuoB,MAAAA,EAAqB,KAAA6F,aAAAA,EAA8B,KAAAC,WAAAA,EAA4B,KAAAnG,aAAAA,EAA6B,KAAAlB,gBAAAA,CAEhL,CAEApN,2BAA2B0U,EAAqB/F,GAE5C,IAEIgG,EAAaD,EAAGE,gBAAgBC,MAFvB,4BAGTC,EAA6BH,EAAW,GACxCI,EAAmCJ,EAAW,GAE9C5S,EAA4B,GACD,MAA5BgT,IACChT,EAAkBgT,EAAyBC,MAAM,KAAKhU,KAAIwB,GAAK7I,SAAS6I,EAAEyS,WAG9E,IAAI7uB,EAAgBkZ,EAAY4O,YAAY4G,GACzC/S,EAAgB3X,OAAS,GAAa,MAARhE,IAC7BA,EAAO,IAAIyb,EAA4Bzb,EAAM2b,IAGjD,IAAI7L,EAAS,IAAIqe,EAAOG,EAAG/pB,KAAMvE,EAAMuoB,EAAO+F,EAAGF,cAAeE,EAAGF,aAAcE,EAAGpG,aAAcoG,EAAGtH,iBAKrG,OAJAlX,EAAOsX,QAAUkH,EAAGlH,QAEpBtX,EAAOgf,oBAAsBR,EAEtBxe,CACX,EAIG,MAAMif,EAMTzqB,YAAmBwC,GAAA,KAAAA,WAAAA,EAJZ,KAAAmgB,QAAoB,EAM3B,CAEQrN,0BAA0BoV,GAC9B,IAAIzG,EAAe,IAAIwG,EAAMC,EAAGzqB,MAGhC,OAFAgkB,EAAMtB,QAAU+H,EAAG/H,QAAQrM,KAAK9K,GAAUqe,EAAOW,oBAAoBhf,EAAQyY,KAC7EA,EAAM0G,KAAOD,EAAGC,KACT1G,CACX,CAEA3O,8BAA8BsV,GAEb,MAAVA,IAAgBA,EAAS,IAE5B,IAAIC,EAAkBD,EAAOtU,KAAIoU,GAAMD,EAAMK,mBAAmBJ,KAE5DK,EAA2D,IAAI5V,IACnE,IAAI,IAAI8O,KAAS4G,EACb,IAAI,IAAIrf,KAAUyY,EAAMtB,QACpBoI,EAA2BjV,IAAItK,EAAOgf,oBAAqBhf,GAInE,IAAI,IAAIyY,KAAS4G,EACb,IAAI,IAAIrf,KAAUyY,EAAMtB,QAAQ,CAC5B,IAAIqI,EAAexf,EAAOgf,oBAAoBS,WAC9C,GAAmB,MAAhBD,EAAqB,CACpB,IAAIE,EAAmBH,EAA2BvV,IAAIwV,GACtDxf,EAAOyf,WAAaC,C,EAKhC,OAAOL,CACX,ECtEG,MAAMM,EAUTnrB,YAAYorB,EAAgC3X,EAA4BC,GALxE,KAAA2X,kBAAmC,GAE3B,KAAAC,QAAiC,IAAInW,IAC7C,KAAAoW,WAAuB,GAInBpvB,KAAKqvB,OAASJ,EAEdjvB,KAAKsX,aAAeA,EACpBtX,KAAKuX,WAAaA,EAGC,MAAfvX,KAAKqvB,QACLrvB,KAAKqvB,OAAOH,kBAAkBlsB,KAAKhD,KAE3C,CAEAsvB,yBAAyBC,GACrB,IAAK,IAAIzH,KAASwG,EAAMkB,uBAAuBD,aAAiB,EAAjBA,EAAmBb,QAE9D1uB,KAAKyvB,kBAAkB3H,EAK/B,CAEA2H,kBAAkB3H,GACd9nB,KAAK0vB,YAAY,CACbrpB,WAAYyhB,EAAMzhB,WAClBspB,gBAAiB,KACjBC,sBAAuB,GACvB9H,MAAOA,IAGX,IAAK,IAAIzY,KAAUyY,EAAMtB,QACrBxmB,KAAK0vB,YAAY,CACbrpB,WAAYgJ,EAAOhJ,WACnBspB,gBAAiB,KACjBC,sBAAuB,GACvBvgB,OAAQA,GAGpB,CAEAqgB,YAAYG,GACR,IAAI1C,EAAiBntB,KAAKmvB,QAAQ9V,IAAIwW,EAAOxpB,WAAW8M,eAC5C,MAARga,GACAA,EAAO,CAAC0C,GACR7vB,KAAKmvB,QAAQxV,IAAIkW,EAAOxpB,WAAW8M,cAAega,IAElDA,EAAKnqB,KAAK6sB,GAEd7vB,KAAKovB,WAAWpsB,KAAK6sB,EACzB,CAEAC,oBAAoB1gB,EAAcC,GAE9B,IAAKrP,KAAK+vB,iBAAiB3gB,EAAMC,GAC7B,OAAO,KAGX,IAAI2gB,EAAwC,KACxCC,EAAmB,IAEvB,IAAK,IAAI1O,KAAMvhB,KAAKkvB,kBAChB,GAAI3N,EAAGwO,iBAAiB3gB,EAAMC,GAAS,CACnC,IAAI6gB,EAAM3O,EAAGuO,oBAAoB1gB,EAAMC,GACnC6gB,EAAI3Y,WAAWnI,KAAO8gB,EAAI5Y,aAAalI,KAAO6gB,IAC9CD,EAAwCE,EACxCD,EAAmBC,EAAI3Y,WAAWnI,KAAO8gB,EAAI5Y,aAAalI,K,CAStE,OAA6C,MAAzC4gB,EACOA,EAEAhwB,IAGf,CAEA+vB,iBAAiB3gB,EAAcC,GAC3B,QAAID,EAAOpP,KAAKsX,aAAalI,MAAQA,EAAOpP,KAAKuX,WAAWnI,MAIxDA,GAAQpP,KAAKsX,aAAalI,MAAQC,EAASrP,KAAKsX,aAAajI,QAC7DD,GAAQpP,KAAKuX,WAAWnI,MAAQC,EAASrP,KAAKuX,WAAWlI,OAAS,EAI1E,CAEA8gB,UAAU9pB,GACN,IAAIqoB,EAAS1uB,KAAKowB,WAAW/pB,GAC7B,OAAoB,GAAjBqoB,EAAOnrB,OAAoB,KACvBmrB,EAAO,GAAG5G,KACrB,CAEAsI,WAAW/pB,GAEP,IAAIyc,EAA2B9iB,KAC/B,KAAqB,MAAf8iB,GAAoB,CAEtB,IAAIqM,EAAUrM,EAAYqM,QAAQ9V,IAAIhT,EAAW8M,eACjD,GAAc,MAAXgc,IACCA,EAAUA,EAAQkB,QAAOpf,GAAgB,MAAXA,EAAE6W,QAC7BqH,EAAQ5rB,OAAS,GAChB,OAAO4rB,EAIfrM,EAAcA,EAAYuM,M,CAG9B,MAAO,EAEX,CAEAiB,WAAWjqB,GAEP,IAAIyc,EAA2B9iB,KAC/B,KAAqB,MAAf8iB,GAAoB,CAEtB,IAAIqM,EAAUrM,EAAYqM,QAAQ9V,IAAIhT,EAAW8M,eACjD,GAAc,MAAXgc,IACCA,EAAUA,EAAQkB,QAAOpf,GAAiB,MAAZA,EAAE5B,SAC7B8f,EAAQ5rB,OAAS,GAChB,OAAO4rB,EAIfrM,EAAcA,EAAYuM,M,CAG9B,MAAO,EAEX,EChKG,MAAMkB,EAET1sB,YAAmBwC,EAAoB9G,GAApB,KAAA8G,WAAAA,EACfrG,KAAKT,KAAOkZ,EAAY4O,YAAY9nB,EACxC,EAGG,MAAMixB,EAGT3sB,YAAmBwC,EAA2BoqB,EAAwBC,EAA2BvV,GAA9E,KAAA9U,WAAAA,EAA2B,KAAAoqB,cAAAA,EAAmD,KAAAtV,WAAAA,EAFjG,KAAAwV,sBAAgC,EAG5B3wB,KAAK0wB,WAAajY,EAAY4O,YAAYqJ,EAC9C,EAIG,MAAME,GAKTzX,qBAII,OAHoB,MAAjBnZ,KAAK6wB,WACJ7wB,KAAK6wB,SAAW,IAAID,IAEjB5wB,KAAK6wB,QAChB,CAEAhtB,cATO,KAAAitB,QAAuB,GAU1B9wB,KAAK+wB,uBAAuB,MAAO,UAAW,WAC9C/wB,KAAK+wB,uBAAuB,MAAO,QAAS,SAC5C/wB,KAAK+wB,uBAAuB,MAAO,OAAQ,QAC3C/wB,KAAK+wB,uBAAuB,MAAO,OAAQ,QAC3C/wB,KAAK+wB,uBAAuB,MAAO,WAAY,YAC/C/wB,KAAK+wB,uBAAuB,MAAO,YAAa,aAChD/wB,KAAK+wB,uBAAuB,MAAO,UAAW,WAC9C/wB,KAAK+wB,uBAAuB,MAAO,QAAS,SAC5C/wB,KAAK+wB,uBAAuB,MAAO,OAAQ,QAC3C/wB,KAAK+wB,uBAAuB,MAAO,OAAQ,QAC3C/wB,KAAK+wB,uBAAuB,MAAO,WAAY,YAC/C/wB,KAAK+wB,uBAAuB,MAAO,YAAa,aAChD/wB,KAAK+wB,uBAAuB,MAAO,UAAW,WAC9C/wB,KAAK+wB,uBAAuB,MAAO,QAAS,SAC5C/wB,KAAK+wB,uBAAuB,MAAO,QAAS,SAC5C/wB,KAAK+wB,uBAAuB,MAAO,UAAW,WAE9C,IAAIC,EAAc,IAAIR,EAAU,SAAS,EAAM,UAAW,CAAC,IAAID,EAAmB,SAAU,UAC5FS,EAAYL,sBAAuB,EACnC3wB,KAAK8wB,QAAQ9tB,KAAKguB,EACtB,CAEAC,WAAW5qB,GACP,OAAOrG,KAAK8wB,QAAQT,QAAOjS,GAAKA,EAAE/X,YAAcA,EAAW8M,eAC/D,CAGA4d,uBAAuB1qB,EAAoBqqB,EAAoBQ,GAC3DlxB,KAAK8wB,QAAQ9tB,KAAK,IAAIwtB,EAAUnqB,GAAY,EAAMqqB,EAAY,CAAC,IAAIH,EAAmB,SAAUW,KAEpG,EClDG,SAASC,GAAWC,GACzB,OAAOA,EACFtiB,QAAQ,SAAU,IACjBA,QAAQ,KAAM,SACdA,QAAQ,KAAM,QACdA,QAAQ,KAAM,QACdA,QAAQ,KAAM,UACdA,QAAQ,KAAM,SACtB,CAUA,SAASuiB,GAAOC,GACd,OAAGA,EAAI,GAAW,IAAMA,EACjB,GAAKA,CACd,CAmCO,SAASC,GAAOC,GAEjB,GAAiB,MAAbA,GAAyC,iBAAbA,EAAuB,OAAO,EAK9D,GAAIA,EAAUxD,MAFG,gEAEgB,CAE7B,IAAIyD,EAASD,EAAUrD,MAAM,KACzBuD,EAASF,EAAUrD,MAAM,KACzBwD,EAAUF,EAAOluB,OACjBquB,EAAUF,EAAOnuB,OAErB,GAAIouB,EAAU,EACV,IAAIE,EAAQL,EAAUrD,MAAM,UAEvByD,EAAU,IACXC,EAAQL,EAAUrD,MAAM,MAEhC,GAAoB,GAAhB0D,EAAMtuB,OAAa,OAAO,EAC9B,IAAIuuB,EAAKhf,SAAS+e,EAAM,IACpBE,EAAKjf,SAAS+e,EAAM,IACpBG,EAAKlf,SAAS+e,EAAM,IAGxB,IAAU,GAANE,GAAWA,EAAK,IACZD,EAFS,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAEtCC,EAAK,GACrB,OAAO,EAGf,GAAU,GAANA,EAAS,CACT,IAAIE,GAAQ,EAIZ,OAHOD,EAAK,KAAMA,EAAK,OAAUA,EAAK,MAClCC,GAAQ,KAEE,GAATA,GAAoBH,GAAM,IAGjB,GAATG,GAAmBH,EAAK,G,CAMjC,OAAO,C,CAIP,OAAO,CAEf,CAEO,SAASI,GAAWV,GAEvB,GAAiB,MAAbA,GAAyC,iBAAbA,EAAuB,OAAO,EAK9D,GAAIA,EAAUxD,MAFG,wGAEgB,CAC7B,IACImE,EADWX,EAAUrD,MAAM,KACR,GAGvB,GAAsB,IAAlBgE,EAAQ5uB,OAAc,OAAO,EACjC,IAAIuuB,EAAKhf,SAASqf,EAAQpgB,UAAU,EAAE,KAClCggB,EAAKjf,SAASqf,EAAQpgB,UAAU,EAAG,IACnCigB,EAAKlf,SAASqf,EAAQpgB,UAAU,EAAG,IAGvC,IAAU,GAANggB,GAAWA,EAAK,IACZD,EAFS,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAEtCC,EAAK,GACrB,OAAO,EAGf,GAAU,GAANA,EAAS,CACT,IAAIE,GAAQ,EAIZ,OAHOD,EAAK,KAAMA,EAAK,OAAUA,EAAK,MAClCC,GAAQ,KAEE,GAATA,GAAoBH,GAAM,IAGjB,GAATG,GAAmBH,EAAK,G,CAMjC,OAAO,C,CAIP,OAAO,CAEf,CCvJK,MAAMM,GAQTvuB,YAAYwuB,G,MANZ,KAAAC,iBAAkC,GAO9BtyB,KAAKqyB,aAAeA,EACpBryB,KAAK0uB,OAASJ,EAAMkB,uBAAqD,QAA9B,EAAA6C,EAAa9C,yBAAiB,eAAEb,OAC/E,CAEA6D,MAAM1sB,GACF7F,KAAK6F,OAASA,EACd7F,KAAKsyB,iBAAmB,GACxBtyB,KAAKgP,UAAY,GAEjBnJ,EAAO2sB,gBAAkB,IAAIxD,EAAY,KAAM,CAAE3f,OAAQ,EAAGD,KAAM,EAAG7L,OAAQ,GAAK,CAAE8L,OAAQ,EAAGD,KAAM,IAAQ7L,OAAQ,IAErHvD,KAAKsyB,iBAAiBtvB,KAAK6C,EAAO2sB,iBAElC,IAAK,IAAIC,KAAazyB,KAAK6F,OAAOyY,cAAe,CAE7C,IAAI+C,EAAwBrhB,KAAKgP,UAAUzL,OAEvCmvB,EAAUD,EAAU/Q,IACxB,GAAe,MAAXgR,EAAJ,CAEA,OAAQA,EAAQnzB,MACZ,KAAK2G,EAAUkB,cACXpH,KAAK2yB,cAAcD,GACnB1yB,KAAKsyB,iBAAiB5tB,MACtB,MACJ,KAAKwB,EAAUmB,cACXrH,KAAK4yB,cAAcF,GACnB1yB,KAAKsyB,iBAAiB5tB,MACtB,MACJ,KAAKwB,EAAU0B,cACX5H,KAAK6yB,mBAAmBH,GACxB1yB,KAAKsyB,iBAAiB5tB,MACtB,MACJ,KAAKwB,EAAUsB,cACXxH,KAAK8yB,cAAcJ,GACnB1yB,KAAKsyB,iBAAiB5tB,MACtB,MACJ,KAAKwB,EAAUiB,cACXnH,KAAK+yB,cAAcL,GACnB1yB,KAAKsyB,iBAAiB5tB,MACtB,MACJ,KAAKwB,EAAUiC,YACXnI,KAAKgzB,iBAAiBN,GACtB1yB,KAAKsyB,iBAAiB5tB,MACtB,MACJ,KAAKwB,EAAUc,aACXhH,KAAKizB,kBAAkBP,GACvB1yB,KAAKsyB,iBAAiB5tB,MAO9B+tB,EAAUhR,UAAYgR,EAAUhR,WAAazhB,KAAKgP,UAAUzL,OAAS8d,CApCxC,C,CAwCjCxb,EAAO4J,OAAO,GAAKzP,KAAKgP,SAE5B,CAEAkC,UAAUC,EAAcI,EAAyB,QAASZ,EAAwBoO,GAE9E/e,KAAKgP,UAAUhM,KAAK,CAChBmO,KAAMA,EACNR,SAAUA,EACVoO,SAAUA,EACVvN,MAAOD,GAEf,CAGA2hB,wBACI,OAAOlzB,KAAKsyB,iBAAiBtyB,KAAKsyB,iBAAiB/uB,OAAS,EAChE,CAEA4vB,mBAAmB7b,EAA4BC,GACzB,MAAdA,IACAA,EAAa,CACTnI,KAAM,IACNC,OAAQ,EACR9L,OAAQ,IAGhB,IAAIge,EAAkB,IAAIyN,EAAYhvB,KAAKkzB,wBAAyB5b,EAAcC,GAElF,OADAvX,KAAKsyB,iBAAiBtvB,KAAKue,GACpBA,CACX,CAEAoR,cAAc1K,GACV,IAAImL,EAAqB,IAAI9E,EAAM,MAEnCrG,EAAWnF,YAAc9iB,KAAKmzB,mBAAmBlL,EAAWtX,SAAUsX,EAAWpF,aAGjF,IAAIwQ,EAAwB,GAC5BrzB,KAAKszB,uBAAuBrL,EAAWW,SAAUyK,GACb,MAAhCpL,EAAWkB,mBACW,IAAI6F,EAAYhvB,KAAKkzB,wBAAyBjL,EAAWkB,kBAAmBlB,EAAWsB,iBAC7F+F,yBAAyBtvB,KAAKqyB,aAAa9C,mBAI/D,IAAK,IAAIlJ,KAAc4B,EAAWnC,WAC9B,GAAIO,EAAW9mB,MAAQ2G,EAAU+iB,WAC7B,IAAK,IAAInB,KAASuL,EACd,IAAK,IAAIhkB,KAAUyY,EAAMtB,QAAS,CAC9B,IAAIC,EAAY,IAAIiH,EAAOre,EAAOhJ,WAAYgJ,EAAO9P,KAAM6zB,GAAa,GAAO,EAAM/jB,EAAOoY,aAAcpY,EAAOkX,iBACjH6M,EAAY5M,QAAQxjB,KAAKyjB,E,KAG9B,CACHzmB,KAAKuzB,YAAYlN,EAAWoE,MAC5B,IAAI+I,EAAa,IAAI9F,EAAOrH,EAAW0B,MAAO1B,EAAWoE,KAAKgJ,QAASL,GAAa,GAAO,EAAM,MAAM,GACvGA,EAAY5M,QAAQxjB,KAAKwwB,GACJ,MAAjBA,EAAGntB,YACH4hB,EAAWnF,YAAY4M,YAAY,CAC/BrpB,WAAYmtB,EAAGntB,WACfspB,gBAAiBtJ,EAAWoE,KAAK9Z,SACjCif,sBAAuB,GACvBvgB,OAAQmkB,G,CAOxB,GAA4B,MAAxBvL,EAAW/C,UAAmB,CAC9B,IAAIwO,EAAY1zB,KAAKuzB,YAAYtL,EAAW/C,WAC3B,MAAbwO,GAAoD,WAA/BA,EAAUpa,mBAC/BtZ,KAAKkR,UAAU,iFAAkF,QAAS+W,EAAW/C,UAAUvU,S,CAOvI,OAAOyiB,CACX,CAEAJ,iBAAiBrQ,GACbA,EAAKG,YAAc9iB,KAAKmzB,mBAAmBxQ,EAAKhS,SAAUgS,EAAKE,aAC/DF,EAAKG,YAAYwM,yBAAyBtvB,KAAKqyB,aAAa9C,mBAEhC,MAAxB5M,EAAKK,iBAEJL,EAAKsC,UAEO,MADDtC,EAAKG,YAAYqN,UAAUxN,EAAKK,kBACzBhjB,KAAKkR,UAAU,eAAiByR,EAAKK,gBAAkB,sBAAuB,QAASL,EAAKM,wBAGvH,CAEA8P,cAAcpQ,GAIV,GAHAA,EAAKG,YAAc9iB,KAAKmzB,mBAAmBxQ,EAAKhS,SAAUgS,EAAKE,aAC/DF,EAAKG,YAAYwM,yBAAyBtvB,KAAKqyB,aAAa9C,mBAEhC,MAAxB5M,EAAKK,gBAAyB,OAElC,IAAI8E,EAAQnF,EAAKG,YAAYqN,UAAUxN,EAAKK,iBAU5C,GATa,MAAT8E,GAAe9nB,KAAKkR,UAAU,eAAiByR,EAAKK,gBAAkB,sBAAuB,QAASL,EAAKM,yBASzF,MAAlBN,EAAKuC,UAAmB,CACxB,IAAIyO,EAAmB3zB,KAAKmzB,mBAAmBxQ,EAAKwC,eAAgBxC,EAAKyC,cAC5D,MAAT0C,GAAe6L,EAAiBlE,kBAAkB3H,GACtD9nB,KAAKuzB,YAAY5Q,EAAKuC,WACtBllB,KAAKsyB,iBAAiB5tB,K,CAK9B,CAGAuuB,kBAAkBtQ,GAId,GAHAA,EAAKG,YAAc9iB,KAAKmzB,mBAAmBxQ,EAAKhS,SAAUgS,EAAKE,aAC/DF,EAAKG,YAAYwM,yBAAyBtvB,KAAKqyB,aAAa9C,mBAEhC,MAAxB5M,EAAKK,gBACL,OAGJ,IAAI8E,EAAQnF,EAAKG,YAAYqN,UAAUxN,EAAKK,iBAC/B,MAAT8E,GACA9nB,KAAKkR,UAAU,eAAiByR,EAAKK,gBAAkB,sBAAuB,QAASL,EAAKM,yBAGhG,IAAI2Q,EAAoB,KAQxB,OAP0B,MAAtBjR,EAAKY,gBACLqQ,EAAY9L,EAAMtB,QAAQqN,MAAKpN,GAAKA,EAAEpgB,WAAWmT,qBAAuBmJ,EAAKY,cAAc/J,sBAC1E,MAAboa,GACA5zB,KAAKkR,UAAU,eAAiByR,EAAKK,gBAAkB,wCAA0CL,EAAKY,cAAe,QAASZ,EAAKa,oBAInIb,EAAKI,MACT,IAAK,aAyBL,IAAK,eAGL,IAAK,cAGL,QACI,MA7BJ,IAAK,YACD,IAAIsD,EAAa1D,EAAKqC,UACtB,GAAkB,MAAdqB,EAAoB,MACxB,GAAiC,MAA7BA,EAAWkB,gBAAiD,MAAvBlB,EAAWpL,SAAkB,CAClE,IAAI+I,EAAMqC,EAAWkB,eACjBmH,EAAS1uB,KAAKkzB,wBAAwB9C,WAAWpM,EAAIG,iBACzD,GAAqB,GAAjBuK,EAAOnrB,OAAa,CACpB,IAAIukB,EAAQ4G,EAAO,GAAG5G,MAClBzY,EAASyY,EAAMtB,QAAQqN,MAAKpN,GAAKA,EAAEpgB,YAAc2d,EAAII,mBAC3C,MAAV/U,GAAiC,MAAfA,EAAO9P,OACpB8P,EAAOse,cACR3tB,KAAKkR,UAAU,4BAA8B8S,EAAIG,gBAAkB,IAAMH,EAAII,iBAAmB,6BAA8B,UAAWiC,EAAWhC,oBAEnJhV,EAAO9P,KAAK6a,UAAUiM,EAAWpL,WAClCjb,KAAKkR,UAAU,gBAAkBmV,EAAWpL,SAAS1B,WAAa,eAAiB8M,EAAWhgB,WAC1F,8BAAgCgJ,EAAO9P,KAAKga,WAAa,8BAAgCuO,EAAMzhB,WAAa,IAC5GgJ,EAAOhJ,WAAa,uBAAwB,QAASggB,EAAWhC,oB,GAehG,CAEAyO,cAAcnQ,GAIV,GAHAA,EAAKG,YAAc9iB,KAAKmzB,mBAAmBxQ,EAAKhS,SAAUgS,EAAKE,aAC/DF,EAAKG,YAAYwM,yBAAyBtvB,KAAKqyB,aAAa9C,mBAEhC,MAAxB5M,EAAKK,gBACL,OAGJ,IAAI8E,EAAQnF,EAAKG,YAAYqN,UAAUxN,EAAKK,iBAC/B,MAAT8E,GAAe9nB,KAAKkR,UAAU,eAAiByR,EAAKK,gBAAkB,sBAAuB,QAASL,EAAKM,yBAE/G,IAAK,IAAIzf,EAAI,EAAGA,EAAImf,EAAK2C,kBAAkB/hB,OAAQC,IAAK,CACpD,IAAIiY,EAAKkH,EAAK2C,kBAAkB9hB,GAC5BswB,EAAQnR,EAAK4C,0BAA0B/hB,GACvC9F,EAAQilB,EAAKviB,OAAOoD,GAEd,MAANiY,IAGU,MAFDqM,EAAMtB,QAAQqN,MAAKpN,GAAKA,EAAEpgB,YAAcoV,KAGjDzb,KAAKkR,UAAUuK,EAAK,iDAAmDkH,EAAKK,gBAAkB,IAAK,QAAS8Q,GAGnG,MAATp2B,IACcsC,KAAKmzB,mBAAmBxQ,EAAK6C,cAAchiB,GAAImf,EAAK8C,YAAYjiB,IACtEisB,kBAAkB3H,GAC9B9nB,KAAKuzB,YAAY71B,GACjBsC,KAAKsyB,iBAAiB5tB,O,CAIC,MAAvBie,EAAKwC,gBACanlB,KAAKmzB,mBAAmBxQ,EAAKwC,eAAgBxC,EAAKyC,cACxDqK,kBAAkB3H,GAGZ,MAAlBnF,EAAKuC,WACLllB,KAAKuzB,YAAY5Q,EAAKuC,WAE1BllB,KAAKsyB,iBAAiB5tB,KAE1B,CAIAmuB,mBAAmBkB,GAEfA,EAAgBjR,YAAc9iB,KAAKmzB,mBAAmBY,EAAgBpjB,SAAUojB,EAAgBlR,aAChGkR,EAAgBjR,YAAYwM,yBAAyBtvB,KAAKqyB,aAAa9C,mBAEvE,IAAIyE,EAAmB,CACnB3tB,WAAY0tB,EAAgB1tB,WAC5BmgB,QAAS,KACTgI,KAAM,GAGVwF,EAAUxN,QAAUuN,EAAgBjO,WAAW3L,KAAIsM,IACxC,CACHpgB,WAAYogB,EAAEpgB,WACdunB,YAAY,EACZD,aAAclH,EAAEH,UAChBC,gBAAiBE,EAAEF,gBACnBI,SAAS,EACTmI,WAAY,KACZhH,MAAOkM,EACPz0B,KAAMknB,EAAExL,SACRwM,aAAchB,EAAEgB,iBAIxBsM,EAAgBjR,YAAY2M,kBAAkBuE,GAE9C,IAAK,IAAI3N,KAAc0N,EAAgBjO,WAKnC,GAJIiO,EAAgBjO,WAAWuK,QAAO5J,GAAKA,EAAEpgB,WAAWmT,qBAAuB6M,EAAWhgB,WAAWmT,sBAAqBjW,OAAS,GAC/HvD,KAAKkR,UAAU,yBAA2BmV,EAAWhgB,WAAa,+DAAgE,QAASggB,EAAW1V,UAGzH,MAA7B0V,EAAWkB,gBAAiD,MAAvBlB,EAAWpL,SAAkB,CAClE,IAAI+I,EAAMqC,EAAWkB,eACjBmH,EAAS1uB,KAAKkzB,wBAAwB9C,WAAWpM,EAAIG,iBACzD,GAAqB,GAAjBuK,EAAOnrB,OAAa,CACpB,IAAIukB,EAAQ4G,EAAO,GAAG5G,MAClBzY,EAASyY,EAAMtB,QAAQqN,MAAKpN,GAAKA,EAAEpgB,YAAc2d,EAAII,mBAC3C,MAAV/U,GAAiC,MAAfA,EAAO9P,OACpB8P,EAAOse,cACR3tB,KAAKkR,UAAU,4BAA8B8S,EAAIG,gBAAkB,IAAMH,EAAII,iBAAmB,6BAA8B,UAAWiC,EAAWhC,oBAEnJhV,EAAO9P,KAAK6a,UAAUiM,EAAWpL,WAClCjb,KAAKkR,UAAU,gBAAkBmV,EAAWpL,SAAS1B,WAAa,eAAiB8M,EAAWhgB,WAC1F,8BAAgCgJ,EAAO9P,KAAKga,WAAa,8BAAgCuO,EAAMzhB,WAAa,IAC5GgJ,EAAOhJ,WAAa,uBAAwB,QAASggB,EAAWhC,oB,EAQxF,IAAK,IAAIL,KAAO+P,EAAgB/N,mBAAoB,CAEhD,IAAIK,EAAa0N,EAAgBjO,WAAW+N,MAAKI,GAAMA,EAAG5tB,YAAc2d,EAAI3U,SAC5E,GAAkB,MAAdgX,EAAoB,SAExB,IAAIqI,EAAS1uB,KAAKkzB,wBAAwB9C,WAAWpM,EAAIG,iBACzD,GAAqB,GAAjBuK,EAAOnrB,OAAa,CACpB,IAAIukB,EAAQ4G,EAAO,GAAG5G,MAClBzY,EAASyY,EAAMtB,QAAQqN,MAAKpN,GAAKA,EAAEpgB,YAAc2d,EAAII,mBAC3C,MAAV/U,GAAiC,MAAfA,EAAO9P,OACpB8P,EAAOse,cACR3tB,KAAKkR,UAAU,4BAA8B8S,EAAIG,gBAAkB,IAAMH,EAAII,iBAAmB,6BAA8B,UAAWJ,EAAIK,oBAE5IhV,EAAO9P,KAAK6a,UAAUiM,EAAWpL,WAClCjb,KAAKkR,UAAU,gBAAkBmV,EAAWpL,SAAS1B,WAAa,eAAiB8M,EAAWhgB,WAC1F,8BAAgCgJ,EAAO9P,KAAKga,WAAa,8BAAgCuO,EAAMzhB,WAAa,IAC5GgJ,EAAOhJ,WAAa,uBAAwB,QAAS2d,EAAIK,oB,EAQjF,CAEAiP,uBAAuBY,EAA8Bb,GACjD,GAAe,MAAXa,EAEJ,OAAQA,EAAQ30B,MACZ,KAAK2G,EAAU4hB,MACX,IAAIqM,EAAYn0B,KAAK0uB,OAAO2B,QAAOjf,GAAKA,EAAE/K,WAAW8M,eAAiB+gB,EAAQ7tB,WAAW8M,gBACzF,GAAwB,GAApBghB,EAAU5wB,OACVvD,KAAKkR,UAAUgjB,EAAQ7tB,WAAa,qCAAsC,QAAS6tB,EAAQvjB,eACxF,GAAIwjB,EAAU5wB,OAAS,EAC1BvD,KAAKkR,UAAU,kBAAoBgjB,EAAQ7tB,WAAa,6BAA8B,QAAS6tB,EAAQvjB,cACpG,CACH,IAAImX,EAAeqM,EAAU,GAC7Bd,EAAarwB,KAAK8kB,GAClB9nB,KAAKo0B,0BAA0BtM,EAAOoM,EAAQvjB,SAAUujB,EAAQnM,M,CAGpE,MAEJ,KAAK7hB,EAAU4D,YACX9J,KAAKszB,uBAAuBY,EAAQjJ,aAAcoI,GAClDrzB,KAAKszB,uBAAuBY,EAAQhJ,cAAemI,GACnD,MAEJ,KAAKntB,EAAUmlB,SACX6I,EAAQpM,MAAQ9nB,KAAK2yB,cAAcuB,EAAQ5I,OAC3C+H,EAAarwB,KAAKkxB,EAAQpM,OACL,MAAjBoM,EAAQnM,QACRmM,EAAQpM,MAAMzhB,WAAa6tB,EAAQnM,MACnC/nB,KAAKo0B,0BAA0BF,EAAQpM,MAAOoM,EAAQvjB,WAOtE,CAEAyjB,0BAA0BtM,EAAcnX,EAAwBoX,GAC5D,IAAIjF,EAAc9iB,KAAKkzB,wBACvBpQ,EAAY4M,YAAY,CACpBrpB,WAAqB,MAAT0hB,EAAgBD,EAAMzhB,WAAW8M,cAAgB4U,EAAM5U,cACnEwc,gBAAiBhf,EACjBmX,MAAOA,EACP8H,sBAAuB,KAE3B,IAAK,IAAIvgB,KAAUyY,EAAMtB,QACrB1D,EAAY4M,YAAY,CACpBrpB,WAAYgJ,EAAOhJ,WAAW8M,cAC9Bwc,gBAAiB,KACjBtgB,OAAQA,EACRglB,WAAYtM,EACZ6H,sBAAuB,IAGnC,CAEA2D,YAAY5Q,GACR,GAAY,MAARA,EAAc,OAAO,KAEzB,OAAQA,EAAKpjB,MACT,KAAK2G,EAAU+lB,SACX,GAAI,CAAC/lB,EAAUsE,UAAWtE,EAAUuE,cAAc+F,QAAQmS,EAAKnI,WAAa,EACxE,OAAOxa,KAAKs0B,aAAa3R,GAG7B,IAAI4R,EAAWv0B,KAAKuzB,YAAY5Q,EAAKsI,cACjCuJ,EAAYx0B,KAAKuzB,YAAY5Q,EAAKuI,eACtC,GAAgB,MAAZqJ,GAAiC,MAAbC,EAAmB,CACvC,IAAIza,EAAawa,EAASha,oBAAoBoI,EAAKnI,SAAUga,GAK7D,OAJkB,MAAdza,GACA/Z,KAAKkR,UAAU,gBAAkB9K,EAAkBuc,EAAKnI,UAAY,2BAA6B+Z,EAAShb,WAAa,QAAUib,EAAUjb,WAAa,oBAAqB,QAASoJ,EAAKhS,UAE/LgS,EAAK8Q,QAAU1Z,EACRA,C,CAEP,OAAO,KAGf,KAAK7T,EAAUimB,QACX,IAAIsI,EAAcz0B,KAAKuzB,YAAY5Q,EAAKyJ,SACxC,GAAmB,MAAfqI,EAAqB,CACrB,IAAIC,EAAcD,EAAYha,mBAAmBkI,EAAKnI,UAKtD,OAJmB,MAAfka,GACA10B,KAAKkR,UAAU,gBAAkB9K,EAAkBuc,EAAKnI,UAAY,0CAA4Cia,EAAYlb,WAAa,oBAAqB,QAASoJ,EAAKhS,UAEhLgS,EAAK8Q,QAAUiB,EACRA,C,CAEP,OAAO,KAGf,KAAKxuB,EAAUymB,WACX,OAAO3sB,KAAK20B,kBAAkBhS,GAIlC,KAAKzc,EAAUuiB,aAEX,OADA9F,EAAK8Q,QAAUhb,EAAYiP,iBAAiB/E,EAAK4F,cAC1C5F,EAAK8Q,QAEhB,KAAKvtB,EAAUG,WACX,OAAOrG,KAAK40B,kBAAkBjS,GAElC,KAAKzc,EAAU8F,IACX,OAAOhM,KAAK60B,WAAWlS,GAE3B,KAAKzc,EAAUkB,cACX,IAAI0tB,EAAc90B,KAAK2yB,cAAchQ,GACrC,OAAkC,GAA9BmS,EAAYtO,QAAQjjB,QACpBvD,KAAKkR,UAAU,2FAA4F,QAASyR,EAAKhS,UAClH,MAEJmkB,EAAYtO,QAAQ,GAAGjnB,KAElC,KAAK2G,EAAUwF,aAEX,OADAiX,EAAK8Q,QAAUzzB,KAAKuzB,YAAY5Q,EAAK6K,oBAC9B7K,EAAK8Q,QAEhB,KAAKvtB,EAAU+iB,WACXjpB,KAAKkR,UAAU,kDAAmD,QAASyR,EAAKhS,UAChF,MACJ,KAAKzK,EAAUinB,KACXntB,KAAKkR,UAAU,uCAAwC,QAASyR,EAAKhS,UASjF,CAEAkkB,WAAWlS,GACP,IAAIoS,EAAe/0B,KAAKkzB,wBAAwB9C,WAAWzN,EAAKqK,eAAe3mB,YAC/E,GAA2B,GAAvB0uB,EAAaxxB,OAEb,OADAvD,KAAKkR,UAAU,eAAiByR,EAAKqK,eAAe3mB,WAAa,+BAAgC,QAASsc,EAAKqK,eAAerc,UACvH,KAEX,GAAIokB,EAAaxxB,OAAS,EAEtB,OADAvD,KAAKkR,UAAU,0BAA4ByR,EAAKqK,eAAe3mB,WAAa,wBAAyB,QAASsc,EAAKqK,eAAerc,UAC3H,KAEX,IAEI6V,EAFQuO,EAAa,GAAGjN,MAERtB,QAAQ6J,QAAO5J,GAAKA,EAAEpgB,WAAW8M,eAAiBwP,EAAKsK,gBAAgB5mB,WAAW8M,gBAEtG,GAAsB,GAAlBqT,EAAQjjB,OAER,YADAvD,KAAKkR,UAAU,eAAiByR,EAAKqK,eAAe3mB,WAAa,wCAA0Csc,EAAKsK,gBAAgB5mB,WAAa,IAAK,QAASsc,EAAKsK,gBAAgBtc,UAIpL,GAAI6V,EAAQjjB,OAAS,EAEjB,YADAvD,KAAKkR,UAAU,eAAiByR,EAAKqK,eAAe3mB,WAAa,2CAA6Csc,EAAKsK,gBAAgB5mB,WAAa,IAAK,QAASsc,EAAKsK,gBAAgBtc,UAIvL,IAAItB,EAASmX,EAAQ,GAErB,OADA7D,EAAK8Q,QAAUpkB,EAAO9P,KACf8P,EAAO9P,IAElB,CAEAq1B,kBAAkBjS,GACd,IAAIwM,EAAUnvB,KAAKkzB,wBAAwB5C,WAAW3N,EAAKtc,YAC3D,GAAsB,GAAlB8oB,EAAQ5rB,OAER,OADAvD,KAAKkR,UAAU,kBAAoByR,EAAKtc,WAAa,uCAAwC,QAASsc,EAAKhS,UACpG,KAEX,GAAIwe,EAAQ5rB,OAAS,EAEjB,OADAvD,KAAKkR,UAAU,kBAAoByR,EAAKtc,WAAa,wBAAyB,QAASsc,EAAKhS,UACrF,KAGX,IAAIkf,EAASV,EAAQ,GAErB,OADAxM,EAAK8Q,QAAU5D,EAAOxgB,OAAO9P,KACtBswB,EAAOxgB,OAAO9P,IACzB,CAEAo1B,kBAAkBhS,GAEd,IACImO,EADcF,GAAeoE,cACP/D,WAAWtO,EAAKtc,YAG1C,GADAyqB,EAAUA,EAAQT,QAAOjS,GAAKA,EAAEjD,WAAW5X,QAAUof,EAAKiK,SAASrpB,SACvC,GAAxBof,EAAKiK,SAASrpB,QAAeof,EAAKiK,SAAS,GAAGrtB,MAAQ2G,EAAU+iB,WAGhE,OAFA6H,EAAUA,EAAQT,QAAOjS,GAAKA,EAAEuS,uBAChChO,EAAK8Q,QAAU3C,EAAQ,GAAGJ,WACnB/N,EAAK8Q,QAGhB,GAAsB,GAAlB3C,EAAQvtB,OAER,OADAvD,KAAKkR,UAAU,sDAAwDyR,EAAKtc,WAAa,KAAM,QAASsc,EAAKhS,UACtG,KAGX,IAAK,IAAIyb,KAAWzJ,EAAKiK,SACrB,GAAiC,MAA7B5sB,KAAKuzB,YAAYnH,GAEjB,OADAzJ,EAAK8Q,QAAU3C,EAAQ,GAAGJ,WACnB/N,EAAK8Q,QAIpB,IAAK,IAAIjzB,KAAUswB,EAAS,CACxB,IAAImE,GAAQ,EACZ,IAAK,IAAIzxB,EAAI,EAAGA,EAAIhD,EAAO2a,WAAW5X,OAAQC,IAAK,CAC/C,IAAI0xB,EAAkB10B,EAAO2a,WAAW3X,GAExC,IADcmf,EAAKiK,SAASppB,GACfiwB,QAAQrZ,UAAU8a,EAAgB31B,MAAO,CAClD01B,GAAQ,EACR,K,EAGR,GAAIA,EAEA,OADAtS,EAAK8Q,QAAUjzB,EAAOkwB,WACf/N,EAAK8Q,O,CAKpB,OADAzzB,KAAKkR,UAAU,sDAAwDyR,EAAKtc,WAAa,KAAM,QAASsc,EAAKhS,UACtG,IAEX,CAEA2jB,aAAa3R,GAET,GAAyB,MAArBA,EAAKsI,cAA8C,MAAtBtI,EAAKuI,cAAuB,OAAO,KAEpE,IAAIiK,EAAiB/uB,EAAkBuc,EAAKnI,UAE5Cxa,KAAKuzB,YAAY5Q,EAAKsI,cACtB,IAAImK,EAAWzS,EAAKsI,aAAawI,QACjC,GAAgB,MAAZ2B,EACA,GAAIzS,EAAKuI,cAAc3rB,MAAQ2G,EAAUkB,cAAe,CACpD,IAAI6gB,EAAatF,EAAKuI,cACc,GAAhCjD,EAAWnC,WAAWviB,QACtBvD,KAAKkR,UAAU,6BAA+BikB,EAAiB,mGAAoG,QAASlN,EAAWtX,UAE3L3Q,KAAK2yB,cAAc1K,GACnB,IAAIoN,EAAQpN,EAAWnC,WAAW,GAAG2E,KAAKgJ,QACrC4B,EAAMjb,UAAUgb,IACjBp1B,KAAKkR,UAAU,wDAA0DmkB,EAAM9b,WAAa,uCAAyC6b,EAAS7b,WAAa,uBAAwB,QAAS0O,EAAWtX,S,MAExM,GAAIgS,EAAKuI,cAAc3rB,MAAQ2G,EAAUinB,KAAM,CAClD,IAAII,EAAW5K,EAAKuI,cACpB,IAAK,IAAIoK,KAAW/H,EAASH,SAAU,CACnC,IAAImI,EAAc9c,EAAYiP,iBAAiB4N,EAAQ/M,cACvD+M,EAAQ7B,QAAU8B,EACbA,EAAYnb,UAAUgb,IACvBp1B,KAAKkR,UAAU,mCAAqCokB,EAAQ9M,SAAW,QAAU+M,EAAYhc,WAAa,oCAAsC6b,EAAS7b,WAAa,sDAAwD4b,EAAiB,wBAAyB,QAASG,EAAQ3kB,S,OAIjS3Q,KAAKkR,UAAU,mGAAoG,QAASyR,EAAKuI,cAAcva,UAKvJ,OAAO8H,EAAY4O,YAAY,UACnC,CAEAuL,cAAcF,GAEV,IAAI5K,EAAe,KACfhF,EAAc9iB,KAAKmzB,mBAAmBT,EAAQ/hB,SAAU+hB,EAAQ7P,aAC/C,MAAjB6P,EAAQ5K,QACR4K,EAAQ5K,MAAMA,MAAQ9nB,KAAK0uB,OAAOmF,MAAKziB,GAAKA,EAAE/K,WAAW8M,eAAiBuf,EAAQ5K,MAAMzhB,WAAWmT,sBACxE,MAAvBkZ,EAAQ5K,MAAMA,MACd9nB,KAAKkR,UAAU,eAAiBwhB,EAAQ5K,MAAMzhB,WAAa,kBAAmB,QAASqsB,EAAQ5K,MAAMnX,WAErGmX,EAAQ4K,EAAQ5K,MAAMA,MACtBhF,EAAY2M,kBAAkB3H,KAItC,IAAI0N,EAAoB9C,EAAQ7P,YACF,MAA1B6P,EAAQ9K,iBAAwB4N,EAAoB9C,EAAQ9K,gBACjC,MAA3B8K,EAAQ7K,kBAAyB2N,EAAoB9C,EAAQ7K,iBAEjE7nB,KAAK6F,OAAO0Y,kBAAkBmU,EAAQ/hB,SAAU6kB,GAAmB,GAAO,EAAM,CAAC,OAAQ,WAE5E,MAAT1N,GACA9nB,KAAK6F,OAAO0Y,kBAAkBiX,EAA6C,MAA1B9C,EAAQ9K,eAAyB8K,EAAQ7P,YAAc6P,EAAQ9K,gBAAgB,GAAM,EAAO,CAAC,WAG3H5nB,KAAKmzB,mBAAmBT,EAAQ/hB,SAAU6kB,GAChDlG,yBAAyBtvB,KAAKqyB,aAAa9C,mBAE5D,IAAI/I,EAAoB,GAExB,GAAiC,GAA7BkM,EAAQ5M,WAAWviB,OACN,MAATukB,IACAtB,EAAUsB,EAAMtB,cAGpB,GAAa,MAATsB,EACA,IAAK,IAAIzB,KAAcqM,EAAQ5M,WAAY,CACvC,IAAIzW,EAASyY,EAAMtB,QAAQqN,MAAKpN,GAAKA,EAAEpgB,WAAW8M,eAAiBkT,EAAWhgB,WAAW8M,gBAC3E,MAAV9D,EACArP,KAAKkR,UAAU,eAAiB4W,EAAMzhB,WAAa,4CAA8CggB,EAAWhgB,WAAa,IAAK,QAASggB,EAAW1V,UAElJ6V,EAAQxjB,KAAKqM,E,CAM7B,GAAImX,EAAQjjB,OAAS,EACjB,GAAsB,MAAlBmvB,EAAQxK,OAAgB,CACxB,IAAIJ,EAAQ9nB,KAAK2yB,cAAcD,EAAQxK,QACvC,GAAqB,OAAlBJ,aAAK,EAALA,EAAOtB,SACN,GAAGA,EAAQjjB,QAAUukB,EAAMtB,QAAQjjB,OAC/BvD,KAAKkR,UAAU,iCAAmCsV,EAAQjjB,OAAS,0DAA4DukB,EAAMtB,QAAQjjB,OAAS,IAAK,QAASmvB,EAAQ/hB,eAE5K,IAAI,IAAInN,EAAI,EAAGA,EAAIgjB,EAAQjjB,OAAQC,IAAI,CACnC,IAAIiyB,EAAejP,EAAQhjB,GACvBkyB,EAAe5N,EAAMtB,QAAQhjB,GACT,MAArBiyB,EAAal2B,MAAqC,MAArBm2B,EAAan2B,OACrCm2B,EAAan2B,KAAK6a,UAAUqb,EAAal2B,OACzCS,KAAKkR,UAAU,gBAAkBwkB,EAAan2B,KAAKga,WAAa,SAC7D/V,EAAE,GAAK,2DACViyB,EAAal2B,KAAKga,WAAa,sEAAuE,QAASmZ,EAAQ/hB,U,OAU3I,IAAK,IAAIglB,KAAajD,EAAQtyB,OAC1B,GAAIu1B,EAAUpyB,QAAUijB,EAAQjjB,QAAUoyB,EAAUpyB,OAAS,EACzDvD,KAAKkR,UAAU,mBAAqBsV,EAAQjjB,OAAS,+BAAiCoyB,EAAUpyB,OAAS,0BAA2B,QAASoyB,EAAU,GAAGhlB,eAE1J,IAAK,IAAInN,EAAI,EAAGA,EAAImyB,EAAUpyB,OAAQC,IAAK,CACvC,IAAI9F,EAAQi4B,EAAUnyB,GAClB6L,EAASmX,EAAQhjB,GACrB9F,EAAM+1B,QAAUhb,EAAYiP,iBAAiBhqB,EAAM6qB,cAGnD,IAAIqN,EAAWvmB,EAAO9P,KAAKga,WAAWC,oBACtC,GAAI9b,EAAM6qB,cAAgBriB,EAAUuD,YAC3B4F,EAAOue,aAAcve,EAAOsX,SAC7B3mB,KAAKkR,UAAU,cAAgB7B,EAAOhJ,WAAa,oEAAqE,QAAS3I,EAAMiT,eAExI,GAAKjT,EAAM+1B,QAAQrZ,UAAU/K,EAAO9P,OAOpC,GAAgB,QAAZq2B,GACP,IAAKrE,GAAO7zB,EAAM8qB,UAAW,CACzB,IAAIpnB,EAAgB,IAAI1D,EAAM8qB,iHAC9BxoB,KAAKkR,UAAU9P,EAAO,QAAS1D,EAAMiT,S,OAEtC,GAAgB,YAAZilB,GAAsC,aAAZA,GACjC,IAAK1D,GAAWx0B,EAAM8qB,UAAW,CAC7B,IAAIpnB,EAAgB,IAAI1D,EAAM8qB,sBAAsBoN,6GACpD51B,KAAKkR,UAAU9P,EAAO,QAAS1D,EAAMiT,S,OAEtC,GAAgB,QAAZilB,IDtkBhB,OAFEpE,ECykBmB9zB,EAAM8qB,WDvkBC,iBAAbgJ,GAIM,MAA/BA,EAAUxD,MAFA,oDCqkBsC,CACzB,IAAI5sB,EAAgB,IAAI1D,EAAM8qB,sBAAsBoN,uFACpD51B,KAAKkR,UAAU9P,EAAO,QAAS1D,EAAMiT,S,MApBK,CAC9C,IAAIvP,EAAgB,YAAc1D,EAAM8qB,SAAW,iBAAmB9qB,EAAM+1B,QAAQla,WAAa,+BAAiClK,EAAO9P,KAAKga,WAAa,eAAiBlK,EAAOhJ,WAAa,uBAEhL,QAAZuvB,IAAoBx0B,GAAS,qFACjB,YAAZw0B,GAAsC,aAAZA,IAAyBx0B,GAAS,uGAEhEpB,KAAKkR,UAAU9P,EAAO,QAAS1D,EAAMiT,S,ED7jB5D,IAAgB6gB,ECqlBjBxxB,KAAKsyB,iBAAiB5tB,KAE1B,ECpvBJ,IAAYmxB,IAAZ,SAAYA,GACR,6BAAW,qBAAO,yDAAyB,8BAC9C,CAFD,CAAYA,KAAAA,GAAc,KAInB,MAAMC,GAMTjyB,YAAoBic,GAAA,KAAAA,KAAAA,EAJpB,KAAAiW,eAAiCF,GAAeG,uBAKhD,CAEAC,QAAQC,GAEJl2B,KAAK+1B,eAAiBF,GAAeM,UAErC,IAAIC,EAAKC,YAAYC,MAEjBC,EAAQ,IAAIroB,EAGhB,IAAK,IAAIkQ,KAAK8X,EAAYM,YAAW,GAAQ,CACzCpY,EAAEqY,KAAKC,OAAQ,EACftY,EAAEuY,QAEF,IAAIC,EAAQL,EAAM3nB,IAAIwP,EAAEyY,iCACxBzY,EAAE3O,OAAO,GAAKmnB,EAAMnnB,OACpB2O,EAAErP,UAAY6nB,EAAMpnB,OACpB4O,EAAEnP,aAAe2nB,EAAM3nB,aACpBmP,EAAEqY,KAAK3yB,MAAQ9D,KAAK8f,KAAKgX,2BAA2BL,KAAK3yB,MACzB,MAA5B9D,KAAK8f,KAAKiX,gBAAwB/2B,KAAK8f,KAAKiX,eAAeC,aAAaC,uBAAuBL,EAAM3nB,a,CAMhHjP,KAAK8f,KAAKC,oBAAoBmX,mBAE9B,IAAIC,EAAiB,IAAIrZ,EAEzB,IAAK,IAAIM,KAAK8X,EAAYM,YAAW,GACjCW,EAAOhZ,MAAMC,GAIjB,IAAIiU,EAAeryB,KAAK8f,KAAKsX,kBACzBC,EAAiC,IAAIjF,GAAeC,GAExD,IAAI,IAAIjU,KAAK8X,EAAYM,YAAW,GAChCa,EAAe9E,MAAMnU,GAGzB,IAAIkZ,EAAKjB,YAAYC,MAAQF,EAC7BkB,EAAKtkB,KAAKsI,MAAW,IAALgc,GAAY,IAE5B,IAAI3X,EAAU,eAAiB2X,EAAK,OAQpC,OANAt3B,KAAK8f,KAAKyX,sBAAsBC,gBAAkB7X,EAElD3f,KAAK8f,KAAKC,oBAAoB0X,iBAE9Bz3B,KAAK+1B,eAAiBF,GAAe6B,WAE9B,IACX,ECjBG,MAAMC,GA2BT9zB,YAAY4yB,EAAmB3W,GAC3B,GAD2B,KAAAA,KAAAA,EAtB/B,KAAA8X,oBAAgC,GAIhC,KAAAnoB,OAAoB,CAAC,GAAI,GAAI,GAAI,IAUjC,KAAAooB,oBAAgE,CAAC,EACjE,KAAAC,oBAAgE,CAAC,EAKjE,KAAAzZ,gBAAiD,IAAIrF,IAGrC,MAARyd,GAA6B,MAAbz2B,KAAK8f,KAAc,OAEvC9f,KAAKy2B,KAAOA,EAEZ,IAAIsB,EAAOtB,EAAK3yB,KAEZk0B,EAAaL,GAAOM,OAAOF,GACb,MAAdC,EACAA,EAAa,EAEbA,IAEJL,GAAOM,OAAOF,GAAQC,EAElBA,EAAa,IAAGD,GAAQ,KAAOC,EAAa,KAChDh4B,KAAKwf,IAAMjM,OAAO2kB,IAAIvW,KAAK,CAAEoW,KAAMA,EAAMI,OAAQ,aACjDn4B,KAAK4T,MAAQL,OAAOwB,OAAOqjB,YAAY3B,EAAKtlB,KAAM,SAAUnR,KAAKwf,KACjExf,KAAK4T,MAAMykB,cAAc,CAAEC,QAAS,IAEpCt4B,KAAKu4B,mBAAqBv4B,KAAK4T,MAAM4kB,0BAErC,IAAIC,EAAOz4B,KAEXA,KAAK4T,MAAM8kB,oBAAmB,KAC1B,IAAIC,EAAYF,EAAK7kB,MAAM4kB,0BAQ3B,GANIG,GAAaF,EAAKF,qBAClBE,EAAKhC,KAAKC,OAAQ,EAClB+B,EAAKhC,KAAKmC,OAAQ,EAClBH,EAAKF,mBAAqBI,IAG1BF,EAAK3Y,KAAK+Y,aAAa,CACvB,IAAIC,EAAoBhZ,EACpBgZ,EAAMC,mBAAqBD,EAAME,KAAKC,IACA,MAAlCR,EAAKhC,KAAKyC,sBAAgCT,EAAKhC,KAAK0C,iCACpDV,EAAKhC,KAAK0C,+BAAgC,EAC1CV,EAAKhC,KAAKyC,qBAAuBT,EAAKhC,KAAKtlB,KAC3CsnB,EAAKhC,KAAKmC,OAAQ,EAClBE,EAAMM,eAAeC,YAAY,MAAM,GACvCP,EAAMQ,UAAUC,gBAAgBC,6BAChCV,EAAMW,gBAAgBC,qBAAqBjB,EAAKhC,OAGpDgC,EAAKhC,KAAK0C,+BAAgC,C,IAK1D,CAEA5a,kBAAkBob,EAA4BC,EAA0B/S,EAA6BC,EACjG+S,EAAwBzQ,EAAqBnC,EAAkB,GAAIC,EAAiB,IACpF,IAAIrT,EAAqB,CACrBimB,WAAYH,EAAatqB,OACzB0qB,SAAUJ,EAAavqB,KACvB4qB,SAAUJ,EAAWvqB,OACrB4qB,OAAQL,EAAWxqB,KACnByX,YAAoC,kBAAfA,GAA2BA,EAChDqT,mBAA2C,iBAAfrT,EAA0BA,EAAc,KACpEC,WAAYA,EACZ+S,aAA8B,MAAhBA,EAAuB,KAAOA,EAAa1f,KAAIlJ,GAAKA,EAAEkpB,gBACpE/Q,SAAUA,EACVnC,QAASA,EACTC,OAAQA,GAGZ,IAAI,IAAI1jB,EAAIqQ,EAAGkmB,SAAUv2B,GAAKqQ,EAAGomB,OAAQz2B,IAAI,CACzC,IAAI42B,EAASp6B,KAAKqe,gBAAgBhF,IAAI7V,GACzB,MAAV42B,IACCA,EAAS,GACTp6B,KAAKqe,gBAAgB1E,IAAInW,EAAG42B,IAEhCA,EAAOp3B,KAAK6Q,E,CAEpB,CAEAwmB,4BAA4BC,GACxB,IAAIC,EAAW,CAACnrB,KAAMkrB,EAAI/lB,gBAAiBlF,OAAQirB,EAAI7lB,aACnD+lB,EAAS,CAACprB,KAAMkrB,EAAIhmB,cAAejF,OAAQirB,EAAI9lB,WAEnD,OAAyB,MAAtBxU,KAAKse,cACG,GAGJte,KAAKse,cAAc+R,QAAOoK,KACpBz6B,KAAK06B,QAAQD,EAAK7Y,GAAI2Y,GAAY,GAAKv6B,KAAK06B,QAAQD,EAAK9Y,KAAM6Y,GAAU,IAG1F,CAOAE,QAAQjpB,EAAmCkpB,GACvC,OAAGlpB,EAAErC,KAAOurB,EAAEvrB,KAAa,EACxBqC,EAAErC,KAAOurB,EAAEvrB,MAAc,EACzBqC,EAAEpC,OAASsrB,EAAEtrB,OAAe,EAC5BoC,EAAEpC,OAASsrB,EAAEtrB,QAAgB,EACzB,CACX,CAIAurB,0BAA0Bza,GAEtB,OAAOngB,KAAKse,cAAcuV,MAAKpB,KACxBA,EAAU9Q,KAAKvS,KAAO+Q,EAAE0a,YACxBpI,EAAU9Q,KAAKvS,MAAQ+Q,EAAE0a,YAAcpI,EAAU9Q,KAAKtS,OAAS8Q,EAAE9Q,QACjEojB,EAAU7Q,GAAGxS,KAAO+Q,EAAE0a,YACtBpI,EAAU7Q,GAAGxS,MAAQ+Q,EAAE0a,YAAcpI,EAAU7Q,GAAGvS,OAAS8Q,EAAE9Q,SAIxE,CAGAyrB,kBAAkB1rB,EAAcC,GAC5B,IAAI+qB,EAASp6B,KAAKqe,gBAAgBhF,IAAIjK,GAEtC,GAAa,MAAVgrB,GAAmC,GAAjBA,EAAO72B,OACxB,OAAO,KAGX,IAAI4L,EAAa,IAAPC,EAAcC,EAExB,GADA+qB,EAASA,EAAO/J,QAAOxc,GAAM1E,GAAqB,IAAd0E,EAAGkmB,SAAkBlmB,EAAGimB,YAAc3qB,GAAmB,IAAZ0E,EAAGomB,OAAgBpmB,EAAGmmB,WACnF,GAAjBI,EAAO72B,OACN,OAIJ,IAAIw3B,EAAyBX,EAAO,GAChCY,EAAqD,KAAjCD,EAAOd,OAASc,EAAOhB,WAAkBgB,EAAOf,SAAWe,EAAOjB,YAE1F,IAAI,IAAIt2B,EAAI,EAAGA,EAAI42B,EAAO72B,OAAQC,IAAI,CAClC,IAAIqQ,EAAKumB,EAAO52B,GACZy3B,EAA0C,KAA3BpnB,EAAGomB,OAASpmB,EAAGkmB,WAAoBlmB,EAAGmmB,SAAWnmB,EAAGimB,YAEpEmB,EAAcD,IACbD,EAASlnB,EACTmnB,EAAkBC,E,CAK1B,OAAOF,CACX,CAGA5hB,uBAAuB+hB,EAAapb,GAEhC,IAAIqb,EAAW,CACXr3B,KAAMo3B,EAAEp3B,KACRqN,KAAM+pB,EAAE/pB,KACR+nB,qBAAsBgC,EAAEhC,qBACxBkC,eAAgBF,EAAEE,eAClBjC,+BAA+B,EAC/BzC,OAAO,EACPkC,OAAO,EACPyC,QAASH,EAAEG,QACXpC,GAAIiC,EAAEjC,IAKV,OAFgB,IAAItB,GAAOwD,EAAIrb,EAInC,CAEAwb,YAAYC,GACR,IAAI9E,EAAOz2B,KAAKy2B,KAchB,MAbmB,CACfwC,GAAIxC,EAAKwC,GACTn1B,KAAM2yB,EAAK3yB,KACXqN,KAAMslB,EAAKtlB,KACX+nB,qBAAsBzC,EAAKyC,qBAC3BkC,eAAgB3E,EAAK2E,eACrBjC,8BAA+B1C,EAAK0C,8BACpCkC,QAAS5E,EAAK4E,QACdG,aAAcD,EAAUtC,GACxBwC,aAAa,EACbC,UAAW,GAInB,CAGAC,0BAA0BvsB,EAAcC,GACpC,OAA4B,MAAxBrP,KAAKwyB,gBACE,OAGPpjB,EAAOpP,KAAKwyB,gBAAgBjb,WAAWnI,MACvCA,GAAQpP,KAAKwyB,gBAAgBjb,WAAWnI,MAAQC,EAASrP,KAAKwyB,gBAAgBjb,WAAWlI,UAEzFD,EAAOpP,KAAKwyB,gBAAgBjb,WAAWnI,KACvCC,EAASrP,KAAKwyB,gBAAgBjb,WAAWlI,OAAS,GAG/CrP,KAAKwyB,gBAAgB1C,oBAAoB1gB,EAAMC,GAC1D,CAEAusB,gBAEI,IAAIC,EAAK,EACT,IAAK,IAAIC,KAAM97B,KAAKyP,OAChBqsB,EAAGv7B,SAAQa,GAASy6B,GAAqB,SAAfz6B,EAAMoQ,MAAmB,EAAI,IAI3D,OAAOqqB,CACX,CAEAhF,gCACI,OAAO72B,KAAK4T,MAAMkB,SAASvB,OAAOwB,OAAOC,oBAAoBC,IAAI,EACrE,CAGA8mB,sBAAsBprB,EAAwB2kB,GAC1C,IAAI0G,EAAqCh8B,KAAK63B,oBAAoBlnB,EAASvB,MACvD,MAAhB4sB,IACAA,EAAe,GACfh8B,KAAK63B,oBAAoBlnB,EAASvB,MAAQ4sB,GAE9CA,EAAah5B,KAAK,CACd2N,SAAUA,EACV2kB,QAASA,GAEjB,CAEA2G,qBAAqB7sB,EAAcC,GAE/B,IAAI6sB,EAAkBl8B,KAAK63B,oBAAoBzoB,GAC/C,GAAuB,MAAnB8sB,EAAyB,OAAO,KAEpC,IAAIC,EAAwC,KAC5C,IAAK,IAAIhc,KAAK+b,EACN7sB,GAAU8Q,EAAExP,SAAStB,QAAUA,EAAS8Q,EAAExP,SAAStB,OAAS8Q,EAAExP,SAASpN,QAEnE4c,EAAExP,SAASpN,OAAS,GACK,MAArB44B,IACAA,EAAoBhc,GAMpC,OAA4B,MAArBgc,EAA4B,KAAYA,EAAkB7G,OACrE,CAEA8G,OACI,IAAIhe,EAAI,IAAIuZ,GAAO33B,KAAKy2B,KAAMz2B,KAAK8f,MAOnC,OANA1B,EAAExK,MAAQ5T,KAAK4T,MACfwK,EAAEoU,gBAAkBxyB,KAAKwyB,gBACzBxyB,KAAKwyB,gBAAkB,KAEvBxyB,KAAKy2B,KAAKC,OAAQ,EAEXtY,CACX,CAEAuY,QAEI32B,KAAK63B,oBAAsB,CAAC,EAEX,MAAb73B,KAAKy2B,MAAgBz2B,KAAKy2B,KAAKC,QAE/B12B,KAAK+O,UAAY,KACjB/O,KAAKyP,OAAO,GAAK,GAGjBzP,KAAKyP,OAAO,GAAK,IAMrBzP,KAAKyP,OAAO,GAAK,GAGjBzP,KAAKyP,OAAO,GAAK,GACjBzP,KAAKwyB,gBAAkB,IAAIxD,EAAY,KAAM,CAAE5f,KAAM,EAAGC,OAAQ,EAAG9L,OAAQ,GAAK,CAAE6L,KAAM,IAAQC,OAAQ,EAAG9L,OAAQ,IAEnHvD,KAAK83B,oBAAsB,CAAC,CAEhC,CAEArW,YAEI,IAAK,IAAIqa,KAAM97B,KAAKyP,OAChB,GAAIqsB,EAAGjI,MAAKzyB,GAAwB,SAAfA,EAAMoQ,QACvB,OAAO,EAOf,OAAO,CAEX,CAEA6qB,6BAEI,IAAIlP,EAAgB,GAEpB,IAAK,IAAI2O,KAAM97B,KAAKyP,OAChB0d,EAAOA,EAAKzT,OAAOoiB,GAGvB3O,EAAKmP,MAAK,CAAC7qB,EAAGkpB,IACNlpB,EAAEd,SAASvB,KAAOurB,EAAEhqB,SAASvB,KACtB,EAEPurB,EAAEhqB,SAASvB,KAAOqC,EAAEd,SAASvB,MACrB,EAERqC,EAAEd,SAAStB,QAAUsrB,EAAEhqB,SAAStB,OACzB,GAEH,IAGZ,IAAK,IAAI7L,EAAI,EAAGA,EAAI2pB,EAAK5pB,OAAS,EAAGC,IAAK,CACtC,IAAI4Q,EAAK+Y,EAAK3pB,GACV+4B,EAAKpP,EAAK3pB,EAAI,GACd4Q,EAAGzD,SAASvB,MAAQmtB,EAAG5rB,SAASvB,MAAQgF,EAAGzD,SAAStB,OAAS,GAAKktB,EAAG5rB,SAAStB,SAC5B,GAA9CrP,KAAKw8B,kBAAkBpoB,EAAG5C,MAAO+qB,EAAG/qB,OACpC2b,EAAKzY,OAAOlR,EAAI,EAAG,GAEnB2pB,EAAKzY,OAAOlR,EAAG,GAEnBA,I,CAIR,OAAO2pB,CACX,CAEAqP,kBAAkBC,EAAoBC,GAClC,MAAc,SAAVD,EAA0B,EAChB,SAAVC,EAA0B,EAChB,WAAVD,EAA4B,EAClB,WAAVC,EAA4B,EACzB,CACX,EAtXO,GAAAC,aAAuB,EAoBvB,GAAA1E,OAAqC,CAAC,EAsW1C,MAAM2E,GAOT/4B,YAAoBic,GAAA,KAAAA,KAAAA,EALZ,KAAA+c,QAAoB,GACpB,KAAAC,UAAiC,IAAI9jB,IAE7C,KAAA0d,OAAiB,CAGjB,CAEAqG,eAAeC,GACX,IAAK,IAAIn3B,KAAU7F,KAAK68B,QACpB,GAAIh3B,EAAO4wB,KAAKwC,IAAM+D,EAAW,OAAOn3B,EAE5C,OAAO,IACX,CAEAu2B,OACI,IAAIa,EAAkB,IAAIL,GAAY58B,KAAK8f,MAC3C,IAAK,IAAI1B,KAAKpe,KAAK68B,QACfI,EAAGC,UAAU9e,EAAEge,QAEnB,OAAOa,CACX,CAEAE,iBAAiB1G,GACb,IAAK,IAAIrY,KAAKpe,KAAK68B,QACf,GAAIze,EAAEqY,MAAQA,EACV,OAAOrY,EAGf,OAAO,IACX,CAEAqD,YACI,IAAK,IAAIrD,KAAKpe,KAAK68B,QACf,GAAIze,EAAEqD,YACF,OAAO,EAGf,OAAO,CACX,CAEA2b,iBACI,GAAIp9B,KAAK68B,QAAQt5B,OAAS,EACtB,IAAK,IAAI85B,KAAMr9B,KAAK68B,QAChB,OAAOQ,EAGf,OAAO,IACX,CAEAC,UAEI,GAAIt9B,KAAK02B,MAEL,OADA12B,KAAK02B,OAAQ,GACN,EAGX,IAAIA,GAAQ,EACZ,IAAK,IAAItY,KAAKpe,KAAK68B,QACf,GAAIze,EAAEqY,KAAKC,MAAO,CACdA,GAAQ,EACR,K,CAGR,OAAOA,CACX,CAGAF,WAAW+G,EAA+BC,GACtC,IAAIhd,EAAM,GACV,IAAK,IAAIpC,KAAKpe,KAAK68B,QACXze,EAAEqY,KAAK3yB,MAAQ05B,GACfhd,EAAIxd,KAAKob,GAGjB,OAAOoC,CACX,CAEA0c,UAAUr3B,GACN7F,KAAK68B,QAAQ75B,KAAK6C,GAClB7F,KAAK88B,UAAUj3B,EAAO4wB,KAAK3yB,MAAQ+B,CACvC,CAEA43B,qBAAqBhH,GACjB,IAAK,IAAIrY,KAAKpe,KAAK68B,QACf,GAAIze,EAAEqY,MAAQA,EAAM,CAChBz2B,KAAK09B,aAAatf,GAClB,K,CAGZ,CAEAsf,aAAa73B,GAEL7F,KAAK68B,QAAQrsB,QAAQ3K,GAAU,IAEnC7F,KAAK68B,QAAQnoB,OAAO1U,KAAK68B,QAAQrsB,QAAQ3K,GAAS,GAClD7F,KAAK88B,UAAUj3B,EAAO4wB,KAAK3yB,WAAQ9G,EACnCgD,KAAK02B,OAAQ,EACjB,CAEAiH,UAAUC,GACN,OAAO59B,KAAK88B,UAAUc,EAC1B,EC7gBG,MAAMC,GAQTh6B,YAAoBi6B,EAA2Che,GAA3C,KAAAge,aAAAA,EAA2C,KAAAhe,KAAAA,EAN/D,KAAAie,QAAuD,CAAC,EAExD,KAAAC,WAA+C,CAAC,EAEhD,KAAAC,QAAiE,CAAC,CAIlE,CAEO3qB,OAEH,IAAI4qB,EAAuBl+B,KAAK89B,aAEjB,MAAZI,IAAkBA,EAAWC,OAAOjmB,WAEvC,IAAIugB,EAAOz4B,KACXk+B,EAAS/S,GAAG,WAAW,SAAUiT,GACjB,MAATA,GACC3F,EAAK4F,oBAAoBD,EAEjC,GAEJ,CAEAE,QAAQC,GACJ,IAAIC,EAAKx+B,KAAK+9B,QAAQQ,GACb,MAANC,GACCA,EAAGC,OAAOF,EAAkB,KAAM,GAE1C,CAGOG,eAAer4B,EAAoB/B,EAAgBm6B,EAAgBttB,EAAe,GAAIwtB,GACzF,IAAIH,EAAkB,CAClBC,OAAQA,EACRp4B,WAAYA,EACZ/B,KAAMA,EACN6M,KAAMA,EACNytB,QAAQ,GAGZ5+B,KAAK+9B,QAAQ13B,GAAcm4B,EAE3B,IAAI,IAAIhhC,KAAO8G,EAC8B,MAAtCtE,KAAKg+B,WAAWxgC,EAAI2V,iBACnBnT,KAAKg+B,WAAWxgC,EAAI2V,eAAiB,IAEzCnT,KAAKg+B,WAAWxgC,EAAI2V,eAAenQ,KAAKw7B,GAG5C,GAAa,MAAVG,EAAe,CACiB,MAA5B3+B,KAAKi+B,QAAQ53B,KACZrG,KAAKi+B,QAAQ53B,GAAc,IAE/BrG,KAAKi+B,QAAQ53B,GAAYrD,KAAK27B,GAE9B,IAAIvtB,EAAID,EACL7M,EAAKf,OAAS,IACb6N,GAAK,KAAO9M,EAAK8W,KAAK,MAAQ,KAGlCujB,EAAOE,KAAK,QAASztB,GAErButB,EAAOxT,GAAG,aAAa,KAChBqT,EAAGI,QACFH,EAAOp4B,EAAY,KAAM,Y,IAMzC,CAEOy4B,SAASP,GAEZ,IAAIC,EAAkBx+B,KAAK+9B,QAAQQ,GAEnC,OAAS,MAANC,GAEIA,EAAGI,MAEd,CAEOG,UAAUR,EAA0BK,GACvC,IAAIJ,EAAkBx+B,KAAK+9B,QAAQQ,GAE1B,MAANC,IACCA,EAAGI,OAASA,GAGhB,IAAIX,EAAUj+B,KAAKi+B,QAAQM,GAC3B,GAAc,MAAXN,EACC,IAAI,IAAIU,KAAUV,EACXW,EACCD,EAAOK,SAAS,aAEhBL,EAAOM,YAAY,YAKnC,CAEOZ,oBAAoBD,GAEvB,GAAmD,SAAhDlmB,SAASgnB,cAAcC,QAAQhsB,cAC9B,OAGJ,GAAIirB,EAAMgB,SAAW,IAAMhB,EAAMgB,SAAW,GACxC,OAGJ,IAAI5hC,EAAc,GAEd4gC,EAAMiB,UACN7hC,GAAO,SAGP4gC,EAAMkB,WACN9hC,GAAO,UAGP4gC,EAAMmB,SACN/hC,GAAO,QAGK,MAAb4gC,EAAM5gC,MACLA,GAAO4gC,EAAM5gC,IAAI2V,eAGrB,IAAIqsB,EAAgBx/B,KAAKg+B,WAAWxgC,GAEpC,GAAoB,MAAjBgiC,EACC,IAAI,IAAIC,KAAeD,EACnB,GAAIC,EAAYb,OAAQ,CACpBR,EAAMsB,kBACNtB,EAAMuB,iBACNF,EAAYhB,OAAOgB,EAAYp5B,WAAY,KAAM7I,GACjD,K,CAMhB,ECjKG,SAASoiC,GAAaC,EACzBC,EACAC,EAAkDC,EAAiD,MAEnG,IAAIC,EAAeC,OAAOC,aAAe,UAAY,QAE7B,MAApBL,IACAA,EAAmBD,GAGvB,IAAIO,EAASjC,OAAO,mEACpBiC,EAAOC,IAAI,CACPC,MAAOR,EAAiBO,IAAI,SAC5BE,OAAQT,EAAiBO,IAAI,UAC7BG,MAAOV,EAAiBO,IAAI,SAC5B1vB,SAAUmvB,EAAiBO,IAAI,YAC/B,mBAAoBP,EAAiBO,IAAI,oBACzC,YAAaP,EAAiBO,IAAI,aAClC,cAAeP,EAAiBO,IAAI,eACpC,aAAc,eAElBD,EAAO77B,IAAIs7B,EAAgB1uB,QAC3BivB,EAAOjV,GAAG8U,EAAe,QAAS9rB,IAAQA,EAAEurB,iBAAiB,IAEvC,MAAlBM,GACmBI,EAAO,GAAIK,kBAAkBT,EAAezN,MAAOyN,EAAeU,KAGzFZ,EAAiBa,MAAMP,GACvBN,EAAiBc,OACjBC,YAAW,KACPT,EAAOU,OAAO,GACf,KAEHV,EAAOjV,GAAG,cAAe4V,IACrB,GAAc,SAAVA,EAAGvjC,KAA4B,UAAVujC,EAAGvjC,SAA5B,CACI4iC,EAAOY,IAAI,cACXZ,EAAOY,IAAI,eACXZ,EAAOa,SACPnB,EAAiBoB,OACjB,IAAIC,EAAWhQ,GAAmBiP,EAAO77B,OACzCw7B,EAAmBoB,E,KAK3Bf,EAAOjV,GAAG,eAAgB4V,IACtBX,EAAOY,IAAI,cACXZ,EAAOY,IAAI,eACXZ,EAAOa,SACPnB,EAAiBoB,OACjB,IAAIC,EAAWhQ,GAAmBiP,EAAO77B,OACzCw7B,EAAmBoB,EACb,GAGd,CAUO,SAASC,GAAgBC,EAA0BC,EAAWC,GAEjE,IAAItB,EAAeC,OAAOC,aAAe,UAAY,QAEjDqB,EAAerD,OAAO,sCAEtBsD,EAAoC,KACpCC,EAAkC,KAEtC,IAAK,IAAIC,KAAMN,EAAO,CAClB,IAAIO,EAAkBD,EAAGC,QACV,MAAXD,EAAGE,OACHD,EAAU,YAAYD,EAAGE,6CAA6CF,EAAGC,eAE7E,IAAIE,EAAQ3D,OAAO,QAAUyD,GAAyB,MAAdD,EAAGI,QAAkB,wDAA0D,IAAM,UAI7H,GAHgB,MAAZJ,EAAGnB,OACHsB,EAAMzB,IAAI,QAASsB,EAAGnB,OAEX,MAAXmB,EAAGE,KACHC,EAAM3W,GAAG8U,EAAe,kBAAmBc,IACvCA,EAAGrB,kBACHvB,OAAO,mBAAmB8C,SAC1B9C,OAAOjmB,UAAU8oB,IAAIf,EAAe,kBACpC9B,OAAOjmB,UAAU8oB,IAAIf,EAAe,oBACpC9B,OAAOjmB,UAAU8oB,IAAI,uBACrBW,EAAGK,UAAU,IAEjBF,EAAM3W,GAAG8U,EAAe,oBAAqBc,IACzCA,EAAGrB,iBAAiB,QAErB,CACH,IAAIuC,EAAQH,EAAMjO,KAAK,KACvBoO,EAAM9W,GAAG8U,EAAe,MAAO7B,IAC3BA,EAAMsB,kBACNmB,YAAW,KACPiB,EAAMlB,MAAM,GACb,IAAI,IAEXqB,EAAM9W,GAAG8U,EAAe,QAAS7B,IAC7BA,EAAMsB,iBAAiB,G,CAK/BoC,EAAM3W,GAAG8U,EAAe,oBAAoB,KACpC0B,GAAMD,GAAkC,MAAhBD,IACxBA,EAAaR,SACbS,EAAiB,KACjBD,EAAe,MAED,MAAdE,EAAGI,UACHN,EAAeL,GAAgBO,EAAGI,QAASD,EAAMxX,SAASuB,KAAOiW,EAAMxB,QAASwB,EAAMxX,SAAS4X,K,IAIvGV,EAAaW,OAAOL,E,CAGxB3D,OAAOjmB,UAAUiT,GAAG8U,EAAe,oBAAqB9rB,IACpDgqB,OAAOjmB,UAAU8oB,IAAIf,EAAe,oBACpC9B,OAAOjmB,UAAU8oB,IAAI,uBACrB7C,OAAO,mBAAmB8C,QAAQ,IAGtC9C,OAAOjmB,UAAUiT,GAAG,uBAAwB4V,IAC1B,UAAVA,EAAGvjC,MACH2gC,OAAOjmB,UAAU8oB,IAAIf,EAAe,kBACpC9B,OAAOjmB,UAAU8oB,IAAI,uBACrB7C,OAAO,mBAAmB8C,S,IAIlC,IAAImB,EAAYd,EAAwB,GAApBpB,OAAOmC,WAAmB,QAAU,OACpDC,EAAKhB,EAAwB,GAApBpB,OAAOmC,WAAmBnC,OAAOmC,WAAaf,EAAIA,EAC3DiB,EAAYhB,EAAyB,GAArBrB,OAAOsC,YAAoB,SAAW,MACtDC,EAAKlB,EAAyB,GAArBrB,OAAOsC,YAAoBtC,OAAOsC,YAAcjB,EAAIA,EAE7DlB,EAAM,CAAC,EAUX,OATAA,EAAI+B,GAAaE,EAAK,KACtBjC,EAAIkC,GAAaE,EAAK,KAEtBjB,EAAanB,IAAIA,GAGjBlC,OAAO,QAAQgE,OAAOX,GACtBA,EAAaN,OAENM,CACX,CAEO,SAASkB,GAASC,GACrB,IAAIC,EAAWD,EAAO9O,KAAK,uBAAuBgP,IAAI,iBAClDC,EAAOH,EAAO9O,KAAK,gBAEnBoM,EAAeC,OAAOC,aAAe,UAAY,QAErDyC,EAASzX,GAAG8U,EAAe,QAASc,IAChC,IAAIgC,EAAS5E,OAAO4C,EAAGgC,QACvBH,EAAS3D,YAAY,aACrB8D,EAAO/D,SAAS,aAChB,IAAIzxB,EAAMo1B,EAAO9O,KAAK,IAAMkP,EAAOC,KAAK,WACxCF,EAAK7D,YAAY,aACjB6D,EAAKxE,QAAQ,UACb/wB,EAAIyxB,SAAS,aACbzxB,EAAI+wB,QAAQ,SAAS,GAG7B,CAOO,SAAS2E,GAAQhK,EAAYiK,EAAgB,GAAI/xB,EAAe,GAAIkvB,GAEvE,IAAIpvB,EAAI,GACE,MAANgoB,GAAoB,IAANA,IAAUhoB,GAAK,QAAQgoB,MAE5B,MAATiK,GAA0B,IAATA,IAAajyB,GAAK,WAAWiyB,MAElD,IAAIC,EAAMhF,OAAO,OAAOltB,YAUxB,OARW,MAAPovB,GACA8C,EAAI9C,IAAIA,GAGA,MAARlvB,GAAwB,IAARA,GAChBgyB,EAAIhyB,KAAKA,GAGDgyB,CAEhB,CAiCO,IAAIC,IAA4B,EAOhC,SAASC,GAAqBnF,EAA+BoF,EAAqBC,EAAyBC,GAC9G,IAAIC,EAAe,QAAUF,EAAc,GAAK,KAAOA,EAAc,GAAK,KAAOA,EAAc,GAAK,KAChG7lC,EAAQ,EACRiX,EAAQjX,GAAS8lC,EAAW,IAE5BE,EAAU,KACVxF,EAASmC,IAAIiD,EAAaG,EAAe/lC,EAAQ,KACjDA,GAASiX,EACLjX,EAAQ,EACRwgC,EAASmC,IAAIiD,EAAa,IAE1BzC,WAAW6C,EAAS,G,EAI5BA,GACJ,CA4CO,SAASC,GAAoBxyB,GAC3ByyB,UAAUC,UAIfD,UAAUC,UAAUC,UAAU3yB,GAAMjQ,MAAK,WACzC,IAAG,SAAU3C,GACTwlC,QAAQ3iC,MAAM,+BAAgC7C,EAClD,IA9BJ,SAAqC4S,GACjC,IAAI6yB,EAAW9rB,SAAS+rB,cAAc,YACtCD,EAAStmC,MAAQyT,EAGjB6yB,EAAS3rB,MAAM6pB,IAAM,IACrB8B,EAAS3rB,MAAMwT,KAAO,IACtBmY,EAAS3rB,MAAM1H,SAAW,QAE1BuH,SAASgsB,KAAKC,YAAYH,GAC1BA,EAASlD,QACTkD,EAAS9b,SAET,IACqBhQ,SAASksB,YAAY,O,CACxC,MAAO7lC,GACLwlC,QAAQ3iC,MAAM,iCAAkC7C,E,CAGpD2Z,SAASgsB,KAAKG,YAAYL,EAC9B,CAIQM,CAA4BnzB,EAOpC,CClTO,MAAMozB,GAKTprB,gCAAgCqrB,EAAaC,GACzC,IAAIC,EAAsBH,GAAqBI,gBAAgB9Q,MAAK6Q,GAAMA,EAAGF,KAAOA,IAC1E,MAANE,IACAA,EAAK,CAAEE,MAAO,EAAGC,QAAS,EAAGL,IAAKA,GAClCD,GAAqBI,gBAAgB3hC,KAAK0hC,IAE9CA,EAAGE,QACH,IAAItN,EAAKtkB,KAAKsI,MAAM+a,YAAYC,MAAQmO,GACxCC,EAAGG,SAAWvN,EACdiN,GAAqBO,sBAEzB,CAEA3rB,0BACI,GAAIkd,YAAYC,MAAQiO,GAAqBQ,aAAe,KAAe,CACvE,IAAIC,EAAU,CACVhC,KAAMuB,GAAqBI,iBAG/BJ,GAAqBI,gBAAkB,GACvCJ,GAAqBO,qBAAuB,EAC5CP,GAAqBQ,aAAe1O,YAAYC,MAEhD2O,GAAK,yBAA0BD,GAAS,Q,CAIhD,EAMG,SAASC,GAAKT,EAAaQ,EAAcE,EAE5CC,GAEAC,IAAgB,GAChB,IAAIC,EAAOhP,YAAYC,MAEvBgP,EAAEL,KAAK,CACH1lC,KAAM,OACN4E,OAAO,EACP6+B,KAAMuC,KAAKC,UAAUR,GACrBS,YAAa,mBACbjB,IAAK,WAAaA,EAClBkB,QAAS,SAAUC,GAKf,GAHApB,GAAqBqB,yBAAyBpB,EAAKa,GAEnDD,IAAgB,GACQ,MAApBO,EAASD,SAAuC,GAApBC,EAASD,SAAyC,iBAAd,GAAsC,IAAZC,EAAgB,CAC1G,IAAIvkC,EAAQ,yCACY,MAApBukC,EAAShmB,UAAiBve,EAAQukC,EAAShmB,SAO3CwlB,GAAeA,EAAc/jC,E,MAEjC8jC,EAAgBS,EAIxB,EACAvkC,MAAO,SAAUykC,EAAOlmB,GAEpB,GADAylB,IAAgB,GACZD,EAAe,CACf,IAAIW,EAAa,2BAKjB,OAJoB,GAAhBD,EAAME,SACND,EAAa,GAAKD,EAAME,aAE5BZ,EAAcxlB,EAAU,KAAOmmB,E,CAGvC,GAER,CAEO,SAASV,GAAgBY,GACxBA,EACA7H,OAAO,oBAAoBkC,IAAI,aAAa,WAE5ClC,OAAO,oBAAoBkC,IAAI,aAAa,SAEpD,CA3FW,GAAAsE,gBAAqC,GACrC,GAAAG,qBAA+B,EAC/B,GAAAC,aAAuB1O,YAAYC,MCLvC,MAAM2P,GAeT9sB,wBAAwB6pB,EAAoB3H,GAExC,IAAI6K,EAAK,IAAID,GAWb,OATAC,EAAGjN,GAAK+J,EAAK/J,GACbiN,EAAGpiC,KAAOk/B,EAAKl/B,KACfoiC,EAAGC,WAAanD,EAAKmD,WACrBD,EAAGE,aAAepD,EAAKoD,aACvBF,EAAG7K,QAAUA,EACb6K,EAAGG,YAAcrD,EAAKqD,YACtBH,EAAGI,aAAe,KAClBJ,EAAGK,qBAAuBvD,EAAKuD,qBAC/BL,EAAGM,SAAWxD,EAAKwD,SACZN,CACX,EC/BG,MAAMO,GAETC,uBAAuBC,EAAoB3E,GACvC,GAAiB,MAAd2E,EAAoC,YAAhB3E,EAAS,MAChC,IAAIvJ,EAAOz4B,KACPA,KAAK4mC,kBAAkB5E,EAAS,MACpChiC,KAAK6mC,UAAUC,IACXA,EAAM9Y,MAAMyK,EAAKsO,4BAA4BJ,IAAazlC,MACrDxD,IACGA,EAAMspC,cAAc9lC,MAAM+lC,GAAWjF,EAAS,IAAIkF,WAAWD,KAAS,IAEzEE,OAAM,IAAMnF,EAAS,OAAM,GAExC,CAEAoF,oBAAoBT,EAAoBL,GACpC,IAAItmC,KAAK4mC,iBAAkB,OAC3B,IAAInO,EAAOz4B,KACXA,KAAK6mC,UAAUC,IACXA,EAAMO,IAAI5O,EAAKsO,4BAA4BJ,GAAa,IAAIW,SAAShB,GAAc,GAE3F,CAEAM,iBACI,MAAO,WAAYjoC,IACvB,CAEAkoC,SAAS7E,GACLuF,OAAOC,KAAK,YAAYtmC,KAAK8gC,EACjC,CAEA+E,4BAA4BJ,GACxB,MAAO,uBAAyBA,CACpC,EChBG,MAAMc,GAKT5jC,YAAoBic,EAAoBsZ,GAApB,KAAAtZ,KAAAA,EAAoB,KAAAsZ,eAAAA,EAgDxC,KAAAsO,eAA2B,GA/CvB1nC,KAAK2nC,SACT,CAEAA,UACI3nC,KAAKuB,MAAQ,aAEb0jC,GAAK,oBAAqB,CAAC,GAAIU,IAE3B,IAAInB,GAAetE,OAAO0H,SAASC,SAASC,WAAW,SAAW,SAAW,SAAW5H,OAAO0H,SAASG,KAAO,iCAC/G/nC,KAAKgoC,WAAa,IAAIC,UAAUzD,GAEhCxkC,KAAKgoC,WAAWE,QAAW9mC,IAAmBpB,KAAKmoC,QAAQ/mC,EAAM,EACjEpB,KAAKgoC,WAAWI,QAAWhK,IAAwBp+B,KAAKqoC,QAAQjK,EAAM,EACtEp+B,KAAKgoC,WAAWM,UAAalK,IAA0Bp+B,KAAKuoC,UAAUnK,EAAM,EAE5Ep+B,KAAKgoC,WAAWQ,OAAUpK,IACtB,IAAI4G,EAAyC,CACzCyD,QAAS,EACT10B,MAAO4xB,EAAS5xB,OAGpB/T,KAAKuB,MAAQ,YACbvB,KAAK0oC,WAAWnD,KAAKC,UAAUR,GAAS,EAK5CnE,YAAW,KACU,cAAd7gC,KAAKuB,QACJvB,KAAKo5B,eAAeuP,kBAAoB,EACxC3oC,KAAKo5B,eAAewP,wBAA0B,E,GAEnD,IAAK,GAGhB,CAEAC,aAKI7oC,KAAKuB,MAAQ,YACbvB,KAAK0oC,WAAWnD,KAAKC,UALwB,CACzCiD,QAAS,IAMjB,CAGAC,WAAW/oB,GAEP,GAAkB,gBAAd3f,KAAKuB,MACL,IACIvB,KAAKgoC,WAAWc,KAAKnpB,E,CACvB,MAAOza,GACL6+B,QAAQgF,IAAI7jC,E,CAGxB,CAEAmjC,QAAQjK,GACJp+B,KAAKuB,MAAQ,cACjB,CAEAgnC,UAAUnK,GAEN,IAAIuH,EAA0CJ,KAAKpnB,MAAMigB,EAAM4E,MAC/D,GAAwBhmC,MAApB2oC,EAAS8C,QAGb,OAAQ9C,EAAS8C,SACb,KAAK,EACDzoC,KAAKuB,MAAQ,aACb,MACJ,KAAK,EACDvB,KAAKo5B,eAAeC,aAAY,SAAU,GAC1C,MACJ,KAAK,EACDr5B,KAAKuB,MAAQ,eAKzB,CAEA4mC,QAAQ/mC,GACJ2iC,QAAQgF,IAAI,iCAChB,ECzGG,MAAMC,GAETC,sBAAsBzN,EAAsB1b,EAAYopB,EACpDC,EACAnH,EAAuD,UAEvDliB,EAAKspB,YAAYlI,KAAK,sDAClB1F,GAAgB,EACH1b,EAAKsX,kBACXiS,QAAQpC,IAEXA,EAASqC,KAAKC,QAAQtC,GACtBjnC,KAAKwpC,aAAavC,EAAQzL,EAAc2N,EAAQrpB,EAAMkiB,EAAS,IAC/D5gC,IACAqoC,MAAM,0CAA4CroC,GAClD0e,EAAKspB,YAAYxI,MAAM,IAG3B5gC,KAAKwpC,aAAaN,GAAO,EAAGC,EAAQrpB,EAAMkiB,EAGlD,CAGQwH,aAAavC,EAAoBzL,EACrC2N,EACArpB,EAAYkiB,GAsBZ,OApBAsD,EAAEL,KAAK,CACH1lC,KAAM,OACN4E,OAAO,EACPshC,YAAa,2BACbzC,KAAMiE,EACNyC,aAAa,EACbC,QAAS,CAAE,gBAAiB,GAAKnO,EAAc,WAAY2N,GAC3D3E,IAAK,yBACLkB,QAAS,SAAUC,GACf7lB,EAAKspB,YAAYxI,OACjBoB,EAAS2D,EAGb,EACAvkC,MAAO,SAAUykC,EAAOlmB,GACpB8pB,MAAM,WACN3pB,EAAKspB,YAAYxI,MACrB,IAGGqG,CACX,EC1CG,MAAM2C,GAiBT/lC,YAAoBic,EAAoB+pB,GAApB,KAAA/pB,KAAAA,EAAoB,KAAA+pB,gBAAAA,EAbxC,KAAAC,4BAAsC,GACtC,KAAAC,gCAA0C,EAE1C,KAAAC,yBAAmC,GACnC,KAAArB,kBAA4B,EAC5B,KAAAC,wBAAkC,EAClC,KAAAqB,sBAAgCjqC,KAAKgqC,yBACrC,KAAAE,eAAyB,CAQzB,CAEAC,kBAEI,IAAI1R,EAAOz4B,KACXA,KAAK6pC,gBAAgBhW,KAAK,OAAOgL,KAAK,QAASpG,EAAKuR,0BAE/B,MAAjBhqC,KAAKoqC,UAAkBC,cAAcrqC,KAAKoqC,UAE9CpqC,KAAKoqC,SAAWE,aAAY,KAExB,GAAsB,MAAlB7R,EAAK3Y,KAAKkZ,KAAc,OAI5B,GAFAP,EAAKwR,wBAEDxR,EAAKwR,sBAAwB,EAAG,CAChCxR,EAAKwR,sBAAwBxR,EAAKuR,yBAClChqC,KAAK4oC,0BACL,IAAInN,EAA8C,GAAhCz7B,KAAK4oC,wBACnBnN,IAAaz7B,KAAK4oC,wBAA0B5oC,KAAK2oC,mBACrDlQ,EAAKY,aAAY,QAAWoC,E,CAGhC,IAAI8O,EAAQvqC,KAAK6pC,gBAAgBhW,KAAK,uBAEtC0W,EAAM1L,KAAK,QAASpG,EAAKwR,sBAAwB,MAE7CxR,EAAKyR,eACLK,EAAMlK,IAAI,OAAQ,WAClBrgC,KAAK6pC,gBAAgBhL,KAAK,QAAS,oEAEnC0L,EAAMlK,IAAI,OAAQ,WAClBrgC,KAAK6pC,gBAAgBhL,KAAK,QAASpG,EAAKwR,sBAAwB,wC,GAGrE,IAEP,CAEAO,2BACIxqC,KAAKyqC,eAAiB,IAAIhD,GAAeznC,KAAK8f,KAAM9f,KACxD,CAEAq5B,YAAY2I,EAAuB0I,GAAgC,G,MAE/D,GAAsB,MAAlB1qC,KAAK8f,KAAKkZ,KAAc,OAE5Bh5B,KAAK8f,KAAK2Z,gBAAgBkR,wBAEtB3qC,KAAK8f,KAAK8qB,gBAEV5qC,KAAK8f,KAAK8qB,eAAgB,EAC1B5qC,KAAK6qC,wBAAuB,UAIhC,IAAIC,EAA0B,GAC1BC,EAAqB,GAEzB,IAAK,IAAIC,KAAMhrC,KAAK8f,KAAKmrB,cAAe,CAE/BD,EAAGpS,QACJkS,EAAO9nC,KAAKgoC,EAAGE,kBAAiB,IAChCF,EAAGpS,OAAQ,GAGf,IAAK,IAAIxa,KAAK4sB,EAAG9U,YAAYM,YAAW,GAC/BpY,EAAEqY,KAAKmC,QACRxa,EAAEqY,KAAKtlB,KAAOiN,EAAEyY,gCAChBkU,EAAO/nC,KAAKob,EAAEkd,YAAY0P,IAE1B5sB,EAAEqY,KAAKmC,OAAQ,E,CAK3B,IAAIoM,EAA8B,CAC9BmG,uBAAwBL,EACxBM,MAAOL,EACPvE,SAAUxmC,KAAK8f,KAAKiZ,kBACpBsS,OAAQrrC,KAAK8f,KAAKkZ,KAAKC,GACvBqS,SAAU,EACVC,mBAAmD,QAA/B,EAAAvrC,KAAK8f,KAAKyX,6BAAqB,eAAE0B,GACrDuS,uBAAuB,GAGvB/S,EAAOz4B,KACX,GAAI8qC,EAAOvnC,OAAS,GAAKwnC,EAAOxnC,OAAS,GAAKmnC,EAC1CzF,GAAK,cAAeD,GAAUW,IAC1BlN,EAAKyR,eAAiBvE,EAASD,QAC1BjN,EAAKyR,gBAENzR,EAAKgT,iBAAiBzG,EAASW,GAEf,MAAZ3D,IACAA,G,IAIT,KACCvJ,EAAKyR,eAAgB,CAAI,SAG7B,GAAgB,MAAZlI,EAEA,YADAA,GAKZ,CAEA0J,oBAAoBC,EAAyBnF,EAAkBxE,GAE3D,GAAIhiC,KAAK8f,KAAKkZ,KAAK4S,YAGf,OAFAD,EAAG1S,GAAKjmB,KAAKsI,MAAsB,IAAhBtI,KAAK64B,eACxB7J,EAAS,MAYbiD,GAAK,gCAR+C,CAChD1lC,KAAM,SACNusC,OAAQ,YACR9I,KAAM2I,EACNnF,SAAUA,EACV6E,OAAQrrC,KAAK8f,KAAKkZ,KAAKC,KAGqB0M,IAC5CgG,EAAG1S,GAAK0M,EAAS1M,GACjB+I,EAAS,KAAK,GACfA,EAEP,CAGA+J,oBAAoBvQ,EAAsBwG,GAItCiD,GAAK,sBAHqC,CACtC+G,YAAaxQ,IAEqBmK,IAClC3D,EAAS2D,EAAS,IAClBhmB,IAAc8pB,MAAM9pB,EAAQ,GACpC,CAEAssB,aAAazQ,EAAsBzY,EAAcif,GAK7CiD,GAAK,eAJmC,CACpC+G,YAAaxQ,EACb0Q,WAAYnpB,IAEe4iB,IAC3B3D,EAAS2D,EAASwG,OAAO,IACzBxsB,IAAc8pB,MAAM9pB,EAAQ,GACpC,CAEAysB,sBAAsB5Q,EAAsB13B,EAAcsiC,EAAsBC,EAAqBrE,GAQjGiD,GAAK,iBAPgC,CACjC+G,YAAaxQ,EACb6Q,aAAcvoC,EACdwoC,YAAalG,EACbC,YAAaA,IAGgBV,IAC7B3D,GAAU,IACVriB,IAAc8pB,MAAM9pB,EAAQ,GACpC,CAIA4sB,eAAenuB,EAAW4sB,EAAexE,EAAkBxE,GAWvDiD,GAAK,gCAR+C,CAChD1lC,KAAM,SACNusC,OAAQ,OACR9I,KAJe5kB,EAAEkd,YAAY0P,GAK7BxE,SAAUA,EACV6E,OAAQrrC,KAAK8f,KAAKkZ,KAAKC,KAGqB0M,IAC5CvnB,EAAEqY,KAAKwC,GAAK0M,EAAS1M,GACrB+I,EAAS,KAAK,GACfA,EAEP,CAEAwK,uBAAuBxB,EAAehJ,GAOlCiD,GAAK,qBALoC,CACrCzJ,aAAcwP,EAAG/R,GACjBqS,SAAU,IAGuB3F,IACjC3D,EAAS2D,EAAShmB,QAASgmB,EAASpK,UAAU,GAC/CyG,EAEP,CAEAyK,wBAAwBzB,EAAe0B,EAAmBC,EAAuB3K,GA0B7EhiC,KAAK8f,KAAK2Z,gBAAgBmT,mBAAmB5B,GAxBH,MAEtC,IAAIhC,IAAmBC,sBAAsB+B,EAAG/R,GAAIj5B,KAAK8f,KAAM,KAC3D,uBACC6lB,IAEG3lC,KAAKq5B,aAAY,KASjB4L,GAAK,sBAPqC,CACtCzJ,aAAcwP,EAAG/R,GACjB4T,wBAAyBlH,EAASmH,cAClCC,SAAUL,aAAM,EAANA,EAAQzT,GAClB0T,YAAaA,IAGqBhH,IAClC3D,EAAS2D,EAAShmB,QAAQ,GAC3BqiB,EAAS,IAEb,EAAM,GACP,GAMd,CAGAgL,0BAA0BztC,EAA4B05B,EAAY+I,GAS9DiD,GAAK,gCAP+C,CAChD1lC,KAAM,SACNusC,OAAQvsC,EACR05B,GAAIA,EACJoS,OAAQrrC,KAAK8f,KAAKkZ,KAAKC,KAGqB0M,IACxCA,EAASD,QACT1D,EAAS,MAETA,EAAS,kB,GAEdA,EAEP,CAEA6I,uBAAuB7I,G,MAQnBiD,GAAK,qBANoC,CACrCgI,SAAUjtC,KAAK8f,KAAKkZ,KAAKiU,SACzB5B,OAAQrrC,KAAK8f,KAAKkZ,KAAKC,GACvBiU,qBAAqD,QAA/B,EAAAltC,KAAK8f,KAAKyX,6BAAqB,eAAE0B,KAGtB0M,IAC7BA,EAASD,QACT1D,EAAS,MAETA,EAAS,kB,GAEdA,EAEP,CAGAmL,iBAAiB5R,EAAsByG,GAMnCiD,GAAK,mBALkC,CACnC+G,YAAazQ,EAAUtC,GACvBmU,eAAgB7R,EAAU8R,SAAShS,UAGJsK,IAC3BA,EAASD,SACT1D,EAAS2D,EAAS2H,cAAe3H,EAAS4H,uB,GAGtD,CAEAC,sBAAsBjS,EAAsB4K,EAAsBnE,GAO9DiD,GAAK,wBANuC,CACxC+G,YAAazQ,EAAUtC,GACvBmU,eAAgB7R,EAAU8R,SAAShS,QACnC8K,WAAYA,IAGwBR,IAChCA,EAASD,SACT1D,EAAS2D,EAAS8H,kBAAmB9H,EAAS+H,Y,GAG1D,CAEAC,cAAcpS,EAAsByG,GAEhC,IAAI4L,EAA6B,IAAInH,GAMrCxB,GAAK,cAJ6B,CAC9B+G,YAAazQ,EAAUtC,KAGG0M,IACtBA,EAASD,SAETnK,EAAU8R,SAAWpH,GAAU4H,iBAAiBlI,EAAS0H,SAAU1H,EAAStK,SAC5EuS,EAAalH,uBAAuBnL,EAAU8R,SAAS9G,sBAAuBD,IAE1E,GAAoB,MAAhBA,EAY+C,MAA3C/K,EAAU8R,SAAS9G,qBAIvBvmC,KAAK8tC,cAAcvS,EAAUtC,IAAK8U,GACd,MAAZA,GACAH,EAAaxG,oBAAoB7L,EAAU8R,SAAS9G,qBAAsBwH,GAE1ExS,EAAU8R,SAAS/G,aAAegD,KAAK0E,QAAQD,QAC/C/L,EAAS,YAGTA,EAAS,sCAXbA,EAAS,UAbjB,CACI,IAEIzG,EAAU8R,SAAS/G,aAAegD,KAAK0E,QAAQ1H,E,CACjD,MAAM/nC,GACJwlC,QAAQgF,IAAIxqC,GACZwlC,QAAQgF,IAAI,sCACZxN,EAAU8R,SAAS/G,aAAeA,C,CAEtCtE,EAAS,K,MAsBjBA,EAAS,kB,GAKrB,CAGA8L,cAAc9B,EAAqBhK,GAC/B,IAAIgD,EAA8B,CAC9BgH,YAAaA,GAGjB1G,EAAEL,KAAK,CACH1lC,KAAM,OACN4E,OAAO,EACP6+B,KAAMuC,KAAKC,UAAUR,GACrBS,YAAa,mBACbjB,IAAK,sBACLyJ,UAAW,CAAEC,aAAc,eAC3BxI,QAAS,SAAUC,GACf3D,EAAS,IAAIkF,WAAWvB,GAC5B,EACAvkC,MAAO,SAAUykC,EAAOlmB,GACpB8pB,MAAM,oCACNzH,EAAS,KACb,GAGR,CAEAmM,kBAAkBnM,GAGdiD,GAAK,kBAFiC,CAAEmJ,QAASpuC,KAAK8f,KAAKkZ,KAAKC,KAE9B0M,IAC1BA,EAASD,QACT1D,EAAS2D,EAAS0I,cAElBrM,EAAS,G,IAEbriB,IACA8pB,MAAM9pB,GACNqiB,EAAS,GAAG,GAGpB,CAEAyJ,iBAAiB6C,EAAwCC,GAErD,IAAIC,EAAyD,IAAIx1B,IAE7Dy1B,EAAgB,GACpBH,EAAmBlD,MAAM7qC,SAAQk2B,GAAQgY,EAAczrC,KAAKyzB,EAAKwC,MAEjEsV,EAAoBG,WAAWA,WAAWnuC,SAAQorC,GAAM6C,EAA2B70B,IAAIgyB,EAAG1S,GAAI0S,KAE9F,IAAIgD,EAA8B,GAElC,IAAK,IAAIC,KAAmBL,EAAoBG,WAAWA,WAKzB,GAHR1uC,KAAK8f,KAAKmrB,cAAc5a,QAAO2a,GAAMA,EAAG/R,IAAM2V,EAAgB3V,KAGhE11B,SAChBorC,EAAkB3rC,KAAK4rC,EAAgB9qC,MACvC9D,KAAK6uC,oCAAoCD,IAOjD,IAAK,IAAIrT,KAAav7B,KAAK8f,KAAKmrB,cAAe,CAC3C,IAAI2D,EAAiCJ,EAA2Bn1B,IAAIkiB,EAAUtC,IAC9E,GAAuB,MAAnB2V,EAAyB,CACzB,IAAIE,EAA+C,IAAI91B,IACvD41B,EAAgBxD,MAAM7qC,SAAQwuC,GAAMD,EAAsBn1B,IAAIo1B,EAAG9V,GAAI8V,KAErE,IAAIC,EAAqC,IAAIh2B,IAE7C,IAAK,IAAInT,KAAU01B,EAAUrF,YAAYM,YAAW,GAAQ,CACxD,IAAIyY,EAASppC,EAAO4wB,KAAKwC,GACzB+V,EAAcr1B,IAAIs1B,EAAQppC,GAC1B,IAAIqpC,EAAiBJ,EAAsBz1B,IAAI41B,GACzB,MAAlBC,GACAlvC,KAAK8f,KAAK2Z,gBAAgB0V,cAAcC,cAAcvpC,GACtD7F,KAAK8f,KAAKuvB,iBAAiBnZ,YAAYwH,aAAa73B,IAC7CqpC,EAAe7T,QAAUx1B,EAAO4wB,KAAK4E,WACxCoT,EAAcj+B,QAAQy+B,GAAU,GAAKC,EAAezT,eACpD51B,EAAO4wB,KAAKtlB,KAAO+9B,EAAe/9B,KAClCtL,EAAO+N,MAAM07B,SAASJ,EAAe/9B,MAErCtL,EAAO4wB,KAAKmC,OAAQ,EACpB/yB,EAAO0yB,mBAAqB1yB,EAAO+N,MAAM4kB,2BAE7C3yB,EAAO4wB,KAAK4E,QAAU6T,EAAe7T,Q,CAK7C,IAAK,IAAIkU,KAAcX,EAAgBxD,MACK,MAApC4D,EAAc31B,IAAIk2B,EAAWtW,KAC7Bj5B,KAAKwvC,WAAWjU,EAAWgU,E,EAM3C,GAAIZ,EAAkBprC,OAAS,EAAG,CAC9B,IAAIoc,EAAkBgvB,EAAkBprC,OAAS,EAAI,yDAA2D,yDAChHoc,GAAWgvB,EAAkBvzB,KAAK,MAClCquB,MAAM9pB,E,CAGV3f,KAAK8f,KAAK2Z,gBAAgBgW,mBAAmBC,eAC7C1vC,KAAK8f,KAAK2Z,gBAAgB0V,cAAcO,cAE5C,CAEOb,oCAAoCD,EAAgCe,GAAoB,GAC3F,IAAIC,EAAI5vC,KAAK8f,KAAK+vB,mBAAmBjB,EAAgB9qC,KAAM8qC,EAAgBpI,UAC3EoJ,EAAE3W,GAAK2V,EAAgB3V,GACvB2W,EAAEE,YAAc,GAChBF,EAAE7X,KAAO6W,EAAgB7W,KACzB6X,EAAEG,SAAWnB,EAAgBmB,SAE7B/vC,KAAK8f,KAAKmrB,cAAcjoC,KAAK4sC,GAC7B,IAAI7X,EAAO6W,EAAgB7W,KAAK5J,MAAM,KACnB,GAAf4J,EAAKx0B,QAA0B,IAAXw0B,EAAK,KAAUA,EAAO,IAE9C,IAAIiY,EAAiC,CACjClsC,KAAM8qC,EAAgB9qC,KACtBmsC,gBAAiBL,EACjBM,UAAW,YACXH,SAAUnB,EAAgBmB,SAC1BhY,KAAMA,GAGV/3B,KAAK8f,KAAK2Z,gBAAgBgW,mBAAmBU,WAAWH,GAAc,GACtEJ,EAAEI,aAAeA,EAEjB,IAAK,IAAII,KAAYxB,EAAgBxD,MACjCprC,KAAKwvC,WAAWI,EAAGQ,GAGnBT,IACA3vC,KAAK8f,KAAK2Z,gBAAgBgW,mBAAmBC,eAC7C1vC,KAAK8f,KAAK2Z,gBAAgB0V,cAAcO,eAEhD,CAEAF,WAAWjU,EAAsBgU,GAC7B,IAAI/Q,EAAU,KACVjD,GAAav7B,KAAK8f,KAAKuvB,mBACvB7Q,EAAK,CACD16B,KAAMyrC,EAAWzrC,KACjBmsC,gBAAiB,MAGrBjwC,KAAK8f,KAAK2Z,gBAAgB0V,cAAcgB,WAAW3R,GAAI,IAG3D,IAAItD,EAAS,CACTjC,GAAIsW,EAAWtW,GACfn1B,KAAMyrC,EAAWzrC,KACjB4yB,OAAO,EACPkC,OAAO,EACPznB,KAAMo+B,EAAWp+B,KACjBkqB,QAASkU,EAAWlU,QACpBgV,iCAAiC,EACjC7U,aAAcD,EAAUtC,GACxB+W,aAAcxR,GAEdpgB,EAAIpe,KAAK8f,KAAK2Z,gBAAgB6W,aAAapV,GACrC,MAANsD,IAAYA,EAAGyR,gBAAkB7xB,GACpBmd,EAAUrF,YAChBgH,UAAU9e,EAEzB,CAEAmyB,SAASvO,GACL,IAAIzG,EAAYv7B,KAAK8f,KAAKuvB,iBAG1BpK,GAAK,WAF0B,CAAE+G,YAAazQ,EAAUtC,GAAIoC,QAASE,EAAU8R,SAAShS,UAE7DsK,IACnBA,EAASD,QAET1D,EAAS,KAAMzG,EAAU8R,SAAShS,QAAUsK,EAAS+H,cAErDjE,MAAM9D,EAAShmB,SACfqiB,EAAS2D,EAAShmB,SAAS,G,IAE/BA,IACA8pB,MAAM9pB,GACNqiB,EAASriB,GAAS,EAAM,GAGhC,ECljBG,MAAM6wB,GAIT3sC,YAAoBic,EAAoByb,GAApB,KAAAzb,KAAAA,EAAoB,KAAAyb,UAAAA,EACpCv7B,KAAKsT,MACT,CAEAA,OACItT,KAAKywC,QAAUtS,OAAO,WACtBA,OAAO,SAASkC,IAAI,aAAc,UAElCrgC,KAAKywC,QAAQtO,OAAOhE,OAChB,ooGAwDJ,IAAI1F,EAAOz4B,KACXA,KAAKywC,QAAQpQ,IAAI,aAAc,WAE/BlC,OAAO,wBAAwBhT,GAAG,SAAS,KAAQnrB,KAAK0wC,gBAAgB,IACxEvS,OAAO,sBAAsBhT,GAAG,SAAS,KACrCnrB,KAAK2wC,wBAAwB,IAGjC3wC,KAAK4wC,YAEL,CAAC,OAAQ,QAAS,OAAOrwC,SAAQwiB,IAC7Bob,OAAO,mBAAqBpb,GAAMoI,GAAG,eAAe,KAChDsN,EAAK3Y,KAAKsZ,eAAe6S,aAAaxT,EAAK8C,UAAUtC,GAAIlW,GAAOopB,IAC5DhO,OAAO,iBAAiBpb,GAAM5R,KAAKg7B,EAAO,GAC5C,IAEN,IAAI0E,EAAc1S,OAAO,qFACzBA,OAAO,gBAAkBpb,GAAMof,OAAO0O,GACtCA,EAAY1lB,GAAG,eAAe,KAC1BwY,GAAoBxF,OAAO,iBAAiBpb,GAAM5R,OAAO,GAC3D,IAGNgtB,OAAO,4BAA4BhT,GAAG,UAAWhX,IAAOmxB,EAAE,iBAAiBwL,KAAK,WAAgC3S,OAAO,OAAO,GAAW,QAAE,GAE/I,CAEAwS,yBACI,IAAIvK,EAAe,EACnBjI,OAAO,sBAAsBtK,KAAK,SAASkd,MAAM,CAACC,EAAG1b,KACjD,IAAI4I,EAAWC,OAAO7I,GAEDA,EAAQ2b,UACzB7K,EAAevzB,OAAOC,SAAiBorB,EAASW,KAAK,U,IAI7D7+B,KAAK8f,KAAKsZ,eAAegT,sBAAsBpsC,KAAKu7B,UAAUtC,GAClDkF,OAAO,oBAAoB55B,MAAO6hC,EAAsBjI,OAAO,+BAA+B55B,OACrG,KACO+gC,EAAE,iBAAiBwL,KAAK,aACxB,IAAI9H,IAAmBC,sBAAsBjpC,KAAKu7B,UAAUtC,GAAIj5B,KAAK8f,KAAM,KAAM,6BAEpF9f,KAAK0wC,gBAAgB,GAElC,CAEAE,YACIzS,OAAO,oBAAoB55B,IAAIvE,KAAKu7B,UAAUz3B,MAC9C9D,KAAK8f,KAAKsZ,eAAe2S,oBAAoB/rC,KAAKu7B,UAAUtC,IAAK0M,IAC7D,CAAC,OAAQ,QAAS,OAAOplC,SAAQwiB,IAC7Bob,OAAO,iBAAmBpb,GAAM5R,KAAKw0B,EAASuL,QAAQnuB,GAAM,IAE7D/iB,KAAK8f,KAAKkZ,KAAKmY,WACdhT,OAAO,OAAOkC,IAAI,aAAc,WAChClC,OAAO,QAAQkC,IAAI,aAAc,YAElCrgC,KAAK8f,KAAKkZ,KAAKoY,iBACdjT,OAAO,OAAOkC,IAAI,aAAc,WAChClC,OAAO,QAAQkC,IAAI,aAAc,YAGrClC,OAAO,KAAKwH,EAAS2G,aAAawE,KAAK,WAAW,GAElD3S,OAAO,iBAAiB2S,KAAK,UAAmC,GAAxBnL,EAAS2G,aAEjDnO,OAAO,+BAA+B55B,IAAIvE,KAAKu7B,UAAU8R,SAAShH,YAAY,GAEtF,CAEAqK,iBACIvS,OAAO,SAASkC,IAAI,aAAc,WAClCrgC,KAAKywC,QAAQpQ,IAAI,aAAc,UAC/BrgC,KAAKywC,QAAQY,OACjB,EC7IG,MAAMC,GAwBTztC,YAAYC,EAAsBgc,EAAgB0mB,GAAhB,KAAA1mB,KAAAA,EArBlC,KAAAiY,KAAe,GAUf,KAAAa,OAAiB,EAYb54B,KAAK8D,KAAOA,EACZ9D,KAAKwmC,SAAWA,EAChBxmC,KAAKk2B,YAAc,IAAI0G,GAAY9c,GACnC9f,KAAK8vC,YAAc,EACvB,CAEA5E,iBAAiBqG,GACb,IAAI5F,EAAoB,CACpB7nC,KAAM9D,KAAK8D,KACXm1B,GAAIj5B,KAAKi5B,GACTuN,SAAUxmC,KAAKwmC,SACfgL,cAA2C,MAA5BxxC,KAAKyxC,oBAA8B,KAAOzxC,KAAKyxC,oBAAoBhb,KAAKwC,GACvFmS,MAAO,GACP0E,YAAa9vC,KAAK8vC,YAClB/X,KAAM/3B,KAAK+3B,KACXgY,UAAU,EACV2B,YAAa1xC,KAAK0xC,YAClBC,YAAa3xC,KAAK2mC,YAGtB,GAAG4K,EACC,IAAI,IAAInzB,KAAKpe,KAAKk2B,YAAYM,YAAW,GAErCmV,EAAGP,MAAMpoC,KAAKob,EAAEkd,YAAYt7B,OAKpC,OAAO2rC,CACX,CAEAiG,qBAAqB5B,G,MACjB,IAAI6B,EAAyC,QAA5B,EAAA7B,aAAY,EAAZA,EAAc8B,sBAAc,eAAEje,KAAK,gCACpD,GAAkB,MAAdge,EAAoB,OAIpB,IAAIE,EAAU5T,OAAO,6GACrB0T,EAAW1P,OAAO4P,GAClB,IAAItZ,EAAOz4B,KACX+xC,EAAQ5mB,GAAG,eAAgBhX,GAAMA,EAAEurB,oBACnCqS,EAAQ5mB,GAAG,aAAchX,IACrBA,EAAEurB,kBAEF,IAAI8Q,GAA4B/X,EAAK3Y,KAAM2Y,EAAK,IAIpDsZ,EAAQ,GAAGC,iBAAiB,eAAgB5T,IACxCA,EAAMuB,iBACNvB,EAAMsB,iBAAiB,IACxB,EAKX,CAGAvmB,uBAAuB6xB,EAAmBlrB,GAEtC,IAAI8vB,EAAI,IAAI0B,GAAUtG,EAAGlnC,KAAMgc,EAAMkrB,EAAGxE,UACxCoJ,EAAE3W,GAAK+R,EAAG/R,GACV2W,EAAE7X,KAAOiT,EAAGjT,KACZ6X,EAAEG,SAAW/E,EAAG+E,SAChBH,EAAEpJ,SAAWwE,EAAGxE,SAChBoJ,EAAEE,YAAc9E,EAAG8E,YACnBF,EAAE8B,YAAc1G,EAAG0G,YACnB9B,EAAEjJ,WAAaqE,EAAG2G,YAElB,IAAI,IAAIzW,KAAK8P,EAAGI,MAAM,CAElB,IAAIhtB,EAAYuZ,GAAOsa,gBAAgB/W,EAAGpb,GAC1C8vB,EAAE1Z,YAAYgH,UAAU9e,GAErB8c,EAAEjC,IAAM+R,EAAGwG,gBACV5B,EAAE6B,oBAAsBrzB,E,CAKhC,OAAOwxB,CAEX,CAEAnuB,YAEI,OAAOzhB,KAAKk2B,YAAYzU,WAE5B,CAEAywB,uBAAuBt+B,GACnB,IAAI,IAAIwK,KAAKpe,KAAKk2B,YAAYM,YAAW,GACrC,GAAGpY,EAAExK,OAASA,EACV,OAAOwK,EAIf,OAAO,IACX,EC5HG,MAAM+zB,GAQTtuC,YAAoBic,GAAA,KAAAA,KAAAA,EAJb,KAAAsyB,kBAA8B,CAAC,IAAK,+DAAgE,IAAK,IAAK,KAE9G,KAAAC,uBAAuE,IAAIr5B,IAMlF,KAAA1K,OAAiB,EA0NjB,KAAAgkC,oBAAqD,CACjD,IAAK,aACL,QAAW,iBACX,QAAW,sBAhOXtyC,KAAKuyC,6BACT,CAGAC,uBAAuB5+B,EAAiCjD,EAA2B1R,EAC/E8U,GAGA,IAAIlO,EACA7F,KAAK8f,KAAKyX,sBAAsB2a,uBAAuBt+B,GAE3D,OAAc,MAAV/N,GAA4C,MAA1BA,EAAO2sB,gBAClB,KAGJ,IAAIpuB,SAAQ,CAACvD,EAASC,KACzB,IAAI23B,EAAOz4B,KAEPyyC,EAAM,WACH5sC,EAAO4wB,KAAKC,MACXmK,YAAW,KACP4R,GAAK,GACN,KAEH5xC,EAAQ43B,EAAKia,6BAA6B9+B,EAAOjD,EAAU1R,EAAS8U,GAE5E,EAEA0+B,GAAK,GAOb,CAEAC,6BAA6B9+B,EAAiCjD,EAA2B1R,EACrF8U,GAEA8sB,YAAW,KAEP,IAAI8R,EAAK3yC,KAAK8f,KAAK8yB,kBAAkBC,gBAAgB,+BAA+BC,OAChF9yC,KAAKsO,QACLqkC,EAAGI,gBACH/yC,KAAKsO,OAAQ,E,GAElB,KAEH,IAAIzI,EACA7F,KAAK8f,KAAKyX,sBAAsB2a,uBAAuBt+B,GAE3D,GAAc,MAAV/N,GAA4C,MAA1BA,EAAO2sB,gBACzB,OAAO,KAGX,GAAIxyB,KAAKgzC,gBAAgBntC,EAAQ8K,GAAW,OAAO,KAEnD,IAAIsiC,EAAoBr/B,EAAMs/B,gBAAgB,CAAE3+B,gBAAiB,EAAGE,YAAa,EAAGH,cAAe3D,EAASkqB,WAAYrmB,UAAW7D,EAAStB,SACxI8jC,EAAoBv/B,EAAMs/B,gBAAgB,CAAE3+B,gBAAiB5D,EAASkqB,WAAYpmB,YAAa9D,EAAStB,OAAQiF,cAAe3D,EAASkqB,WAAa,EAAGrmB,UAAW,IAEnKsO,EAAcjd,EAAO2sB,gBAAgB1C,oBAAoBnf,EAASkqB,WAAYlqB,EAAStB,QACvF+jC,EAAiCvtC,EAAOi1B,kBAAkBnqB,EAASkqB,WAAYlqB,EAAStB,QACtE,MAAlB+jC,IACAA,EAAiB,CACbtZ,WAAY,EACZE,SAAU,EACVD,SAAU,EACVE,OAAQ,EACRpT,aAAa,EACbC,YAAY,EACZ+S,aAAc,KAItB,IAAIwZ,EAAqD,GACzDrzC,KAAKszC,0BAA0BF,EAAgBC,GAE/C,IAAIE,EAAWN,EAAkBjlB,MAAM,yCAEnCwlB,EAAUL,EAAkBnlB,MAAM,mBAClCylB,EAAkC,GACvB,MAAXD,GAAmBA,EAAQjwC,OAAS,IACpCkwC,EAAkCD,EAAQ,IAG9B,MAAZD,EACAvzC,KAAK0zC,6BAA6BN,EAAgBtwB,EAAauwB,GAE/DrzC,KAAK2zC,sBAAsBhjC,EAAU4iC,EAAUE,EAAiC3wB,EAAauwB,GAGjG,IAAIO,EAAOhgC,EAAMigC,qBAAqBljC,GAClCmjC,EAAmB,CAAEr/B,YAAam/B,EAAKn/B,YAAaF,gBAAiB5D,EAASkqB,WAAYrmB,UAAWo/B,EAAKp/B,UAAWF,cAAe3D,EAASkqB,YAC7IkZ,EAAyB,CAAEt/B,YAAa9D,EAAStB,OAAQkF,gBAAiB5D,EAASkqB,WAAYrmB,UAAW7D,EAAStB,OAAQiF,cAAe3D,EAASkqB,YAEvJ,IAAK,IAAImZ,KAAQX,EACK,MAAdW,EAAK3/B,QACD2/B,EAAKC,WAAWnM,WAAW,KAC3BkM,EAAK3/B,MAAQ0/B,EAEbC,EAAK3/B,MAAQy/B,GASzB,OAJ+B,MAA3BV,EAAehqB,WACfiqB,EAAkBA,EAAgBhjB,QAAO2jB,GAAQZ,EAAehqB,SAAS5Y,QAAQwjC,EAAKC,YAAc,KAGjG,CACHC,YAAab,EAErB,CAGAM,sBAAsBhjC,EAA2B4iC,EAA4BE,EACzE3wB,EAA0BuwB,GAC1B,IAAIc,EAAeZ,EAAS,GACxBa,EAAgBb,EAAS,GAEzBc,GADY1jC,EAAStB,OAAS8kC,EAAa5wC,OAE/C,CACIgR,gBAAiB5D,EAASkqB,WAAYpmB,YAAa9D,EAAStB,OAAS8kC,EAAa5wC,OAClF+Q,cAAe3D,EAASkqB,WAAYrmB,UAAW7D,EAAStB,OAASokC,EAAgClwC,SAGrG,IAAK,IAAIssB,KAAU/M,EAAYsM,WAC3B,GAAoB,MAAhBS,EAAO/H,MAAe,CACtB,IAAIzhB,EAAqBwpB,EAAO/H,MAAMzhB,WAEtC,GADyB,MAArBwpB,EAAOwE,aAAoBhuB,EAAawpB,EAAOwE,YAC/ChuB,EAAW8M,eAAiBihC,EAC5B,IAAK,IAAI/kC,KAAUwgB,EAAO/H,MAAMtB,QAC5B6sB,EAAgBrwC,KAAK,CACjBsxC,MAAOjlC,EAAOhJ,WACdkuC,OAAQ,UAAYllC,EAAOhJ,WAAa,gBAAkBwpB,EAAO/H,MAAMzhB,WACvEmuC,WAAYnlC,EAAOhJ,WACnB4tC,WAAY5kC,EAAOhJ,WACnBouC,gBAAiBlhC,OAAOC,UAAUkhC,6BAA6BC,eAC/D5xB,KAAMxP,OAAOC,UAAUohC,mBAAmBC,MAC1CxgC,MAAOggC,G,CAQ/B,CAEAX,6BAA6BN,EAAgCtwB,EAA0BuwB,G,QACnF,IAAIpsB,EAA4C,MAA1BmsB,EAAensB,QAAkB,GAAKmsB,EAAensB,QACvEC,EAA0C,MAAzBksB,EAAelsB,OAAiB,GAAKksB,EAAelsB,OAEzE,IAAMksB,EAAetsB,aAAcssB,EAAevsB,YAC9C,OAGJ,IAAIiuB,EAAsD,CAAC,EAEvDvzB,EAAkBuB,EAClB0D,EAA8C,CAAC,EAC/ClB,EAA8B,GAElC,KAAa,MAAN/D,GAAY,CACf,IAAK,IAAIsO,KAAUtO,EAAG6N,WAClB,GAAqB,MAAjBS,EAAOxgB,OAAgB,CACvB,IAAI0lC,EAAmBllB,EAAOxgB,OAAOhJ,WACJ,MAA7BmgB,EAAQuuB,IACRvuB,EAAQuuB,GAAoB,CAACllB,GAC7BvK,EAAkBtiB,KAAK+xC,IAEvBvuB,EAAQuuB,GAAkB/xC,KAAK6sB,E,MAEhC,GAAoB,MAAhBA,EAAO/H,OAAiBsrB,EAAetsB,aACzCguB,EAAiBjlB,EAAOxpB,YAAa,CACtC,IAAI4tC,EAAahtB,EAAU4I,EAAOxpB,WAAa6gB,EAC/CmsB,EAAgBrwC,KAAK,CACjBsxC,MAAOzkB,EAAOxpB,WACdkuC,OAAQ,WAAa1kB,EAAO/H,MAAMzhB,WAClCmuC,WAAY3kB,EAAOxpB,WACnB4tC,WAAYA,EACZQ,gBAAiBR,EAAWzjC,QAAQ,MAAQ,EAAI+C,OAAOC,UAAUkhC,6BAA6BM,gBAAkBzhC,OAAOC,UAAUkhC,6BAA6BC,eAC9J5xB,KAAMkxB,EAAWzjC,QAAQ,MAAQ,EAAI+C,OAAOC,UAAUohC,mBAAmBK,QAAU1hC,OAAOC,UAAUohC,mBAAmBM,MACvH7gC,WAAOrX,EACPm4C,SAAU,KAAOtlB,EAAOxpB,aAE5ByuC,EAAiBjlB,EAAOxpB,aAAc,C,CAIlDkb,EAAKA,EAAG8N,M,CAGZ,GAAI+jB,EAAevsB,YACf,IAAK,IAAIpL,KAAM6J,EAAmB,CAC9B,IAAI8vB,EAAY5uB,EAAQ/K,GACpB45B,EAAYD,EAAU7xC,OAAS,GAA0C,MAArC6vC,EAAelZ,mBACvD,IAAK,IAAIrM,KAAMunB,EAAW,CACtB,IAAIjkC,EAAO0c,EAAGxnB,WAId,GAHIgvC,GAAaxnB,EAAGxnB,YAAcwnB,EAAGxe,OAAOhJ,WAAW8M,gBACnDhC,GAAyB,MAAjB0c,EAAGwG,WAAqBxG,EAAGxe,OAAOyY,MAAMzhB,WAAawnB,EAAGwG,YAAc,IAAMljB,GAE/C,MAArCiiC,EAAelZ,qBAA8C,QAAhB,EAAS,QAAT,EAAArM,EAAGxe,cAAM,eAAEyY,aAAK,eAAEzhB,aAAc+sC,EAAelZ,mBAAoB,CAChH,IAAI+Z,EAAahtB,EAAU9V,EAAO+V,EAClCmsB,EAAgBrwC,KAAK,CACjBsxC,MAAOnjC,EACPojC,OAAQ,cAAgB1mB,EAAGxe,OAAOhJ,WAAa,gBAAkBwnB,EAAGxe,OAAOyY,MAAMzhB,WACjFmuC,WAAYrjC,EACZ8iC,WAAYA,EACZQ,gBAAiBR,EAAWzjC,QAAQ,MAAQ,EAAI+C,OAAOC,UAAUkhC,6BAA6BM,gBAAkBzhC,OAAOC,UAAUkhC,6BAA6BC,eAC9J5xB,KAAMkxB,EAAWzjC,QAAQ,MAAQ,EAAI+C,OAAOC,UAAUohC,mBAAmBK,QAAU1hC,OAAOC,UAAUohC,mBAAmBC,MACvHxgC,WAAOrX,G,GAO/B,CAQAs2C,0BAA0BF,EAAgCC,GACtD,IAAIpsB,EAA4C,MAA1BmsB,EAAensB,QAAkB,GAAKmsB,EAAensB,QACvEC,EAA0C,MAAzBksB,EAAelsB,OAAiB,GAAKksB,EAAelsB,OAGzE,IAAK,IAAI/V,KAAQiiC,EAAevZ,aAAc,CAC1C,IAAIoa,EAAahtB,EAAU9V,EAAO+V,EAC9BouB,EAAUt1C,KAAKsyC,oBAAoBnhC,GAEnCsK,EAAKzb,KAAKqyC,uBAAuBh5B,IAAIlI,GACzC,GAAU,MAANsK,EACA43B,EAAgBrwC,KAAKyY,QAClB,GAAe,MAAX65B,EAAiB,CACxB,IAAIhB,EAAQgB,EAAQxmC,QAAQ,KAAM,IAAIA,QAAQ,KAAM,IAAIA,QAAQ,KAAM,IAAIA,QAAQ,KAAM,IAAIA,QAAQ,MAAO,IAAIA,QAAQ,MAAO,IAC9HukC,EAAgBrwC,KAAK,CACjBsxC,MAAOA,EACPC,OAAQ,GACRC,WAAYrjC,EACZ8iC,WAAYqB,EACZb,gBAAiBlhC,OAAOC,UAAUkhC,6BAA6BM,gBAC/DjyB,KAAMxP,OAAOC,UAAUohC,mBAAmBK,QAC1C5gC,WAAOrX,G,MAGXq2C,EAAgBrwC,KAAK,CACjBsxC,MAAOnjC,EACPojC,OAAQ,GACRC,WAAYrjC,EACZ8iC,WAAY9iC,EACZsjC,gBAAiBR,EAAWzjC,QAAQ,MAAQ,EAAI+C,OAAOC,UAAUkhC,6BAA6BM,gBAAkBzhC,OAAOC,UAAUkhC,6BAA6BC,eAC9J5xB,KAAMkxB,EAAWzjC,QAAQ,MAAQ,EAAI+C,OAAOC,UAAUohC,mBAAmBK,QAAU1hC,OAAOC,UAAUohC,mBAAmBW,QACvHlhC,WAAOrX,EACPm4C,SAAkB,QAARhkC,EAAiB,SAAMnU,G,CAMjD,CAIAg2C,gBAAgBntC,EAAgB8K,GAE5B,IAAI5B,EAAYlJ,EAAOkJ,UACvB,GAAiB,MAAbA,GAAyC,GAApBA,EAAUxL,OAAa,OAAO,EAEvD,IAEI4L,EAFAqmC,EAAS,EACTC,EAAS1mC,EAAUxL,OAAS,EAG5BmyC,EAAW,IAEf,OAAa,CACT,IAAIC,EAASxmC,EAGb,GAFAA,EAAM6D,KAAKsI,OAAOm6B,EAASD,GAAU,GAEjCG,GAAUxmC,EAAK,OAAO,EAG1B,GADAumC,IACgB,GAAZA,EAAe,OAAO,EAE1B,IAAItkC,EAAIrC,EAAUI,GACdgR,EAAI/O,EAAET,SAEV,GAAIwP,EAAE/Q,KAAOuB,EAASkqB,YAAc1a,EAAE/Q,MAAQuB,EAASkqB,YAAc1a,EAAE9Q,OAAS8Q,EAAE5c,OAASoN,EAAStB,OAChGmmC,EAASrmC,MADb,CAKA,KAAIgR,EAAE/Q,KAAOuB,EAASkqB,YAAc1a,EAAE/Q,MAAQuB,EAASkqB,YAAc1a,EAAE9Q,OAASsB,EAAStB,QAKzF,OAAO+B,EAAEnB,IAAM/J,EAAUO,eAJrBgvC,EAAStmC,C,EAQrB,CAGAojC,8BACIvyC,KAAKqyC,uBAAuB14B,IAAI,cAC5B,CACI26B,MAAO,0CACPC,OAAQ,wCACRC,WAAY,cAEZP,WAAY,eACZxL,QAAS,CACLxP,GAAI,+BACJ3Z,MAAO,MACPs2B,UAAW,IAEfnB,gBAAiBlhC,OAAOC,UAAUkhC,6BAA6BM,gBAC/DjyB,KAAMxP,OAAOC,UAAUohC,mBAAmBK,QAC1C5gC,WAAOrX,IAGfgD,KAAKqyC,uBAAuB14B,IAAI,aAC5B,CACI26B,MAAO,uBACPC,OAAQ,sCACRC,WAAY,aAEZP,WAAY,cACZxL,QAAS,CACLxP,GAAI,+BACJ3Z,MAAO,MACPs2B,UAAW,IAEf7yB,KAAMxP,OAAOC,UAAUohC,mBAAmBK,QAC1C5gC,WAAOrX,IAGfgD,KAAKqyC,uBAAuB14B,IAAI,QAC5B,CACI26B,MAAO,4EACPC,OAAQ,+GACRC,WAAY,QAEZP,WAAY,eACZxL,QAAS,CACLxP,GAAI,+BACJ3Z,MAAO,MACPs2B,UAAW,IAEf7yB,KAAMxP,OAAOC,UAAUohC,mBAAmBK,QAC1C5gC,WAAOrX,IAGfgD,KAAKqyC,uBAAuB14B,IAAI,SAC5B,CACI26B,MAAO,qDACPC,OAAQ,mBACRC,WAAY,SAEZP,WAAY,+BACZxL,QAAS,CACLxP,GAAI,+BACJ3Z,MAAO,MACPs2B,UAAW,IAEfnB,gBAAiBlhC,OAAOC,UAAUkhC,6BAA6BM,gBAC/DjyB,KAAMxP,OAAOC,UAAUohC,mBAAmBK,QAC1C5gC,WAAOrX,IAGfgD,KAAKqyC,uBAAuB14B,IAAI,eAC5B,CACI26B,MAAO,4DACPC,OAAQ,sDACRC,WAAY,SAEZP,WAAY,8BACZxL,QAAS,CACLxP,GAAI,+BACJ3Z,MAAO,MACPs2B,UAAW,IAEfnB,gBAAiBlhC,OAAOC,UAAUkhC,6BAA6BM,gBAC/DjyB,KAAMxP,OAAOC,UAAUohC,mBAAmBK,QAC1C5gC,WAAOrX,GAoBnB,ECraG,MAAM64C,GAKThyC,YAAoBic,GAAA,KAAAA,KAAAA,EAHpB,KAAAg2B,+BAAqD,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAC/E,KAAAC,iCAAuD,EAGvD,CAEAC,qBAAqBpiC,EAAiCjD,EAClDoD,EACA9U,GAGA,IAAIw5B,EAAOz4B,KAEX,OAAO,IAAIoE,SAAQ,CAACvD,EAASC,KAEzB+/B,YAAW,KAEP7gC,KAAK8f,KAAKm2B,iBAEVp1C,EAAQ43B,EAAKyd,0BAA0BtiC,EAAOjD,EAAUoD,EAAO9U,GAAS,GAEzE,IAAI,GAKf,CAEAi3C,0BAA0BtiC,EAAiCjD,EACvDoD,EACA9U,GAG0Be,KAAK8f,KAAK8yB,kBAAkBuD,WAAtD,IAEItwC,EACA7F,KAAK8f,KAAKyX,sBAAsB2a,uBAAuBt+B,GAE3D,GAAc,MAAV/N,EACA,OAAO,KAMX,IAAIiyB,EAAsBjyB,EAAOiyB,oBAAoBnnB,EAASkqB,YAE9D,GAA2B,MAAvB/C,EAA6B,OAAO,KAExC,IAAIse,EAAyC,KACzCC,GAA6B,EAEjC,IAAK,IAAI7yC,EAAIs0B,EAAoBv0B,OAAS,EAAGC,GAAK,EAAGA,IAAK,CACtD,IAAI8yC,EAAMxe,EAAoBt0B,GAC1B8yC,EAAIC,mBAAmBlnC,OAASinC,EAAIC,mBAAmBhzC,OAASoN,EAAStB,QACtEinC,EAAIC,mBAAmBlnC,OAASgnC,IACH,MAA5BC,EAAI3uB,sBACHhX,EAASkqB,YAAcyb,EAAI3uB,qBAAqBvY,MAAQuB,EAAStB,QAAUinC,EAAI3uB,qBAAqBtY,QACjGsB,EAASkqB,WAAayb,EAAI3uB,qBAAqBvY,QACnDgnC,EAAqBE,EACrBD,EAAoBC,EAAIC,mBAAmBlnC,O,CAKvD,OAA0B,MAAtB+mC,EAAmC,KAEhCp2C,KAAKw2C,iBAAiBJ,EAAoBzlC,EAIrD,CAEA6lC,iBAAiBJ,EACbzlC,GAEA,IAAI8lC,EAAyB,EAE7B,IAAK,IAAIC,KAAMN,EAAmBtpB,gBAC1B4pB,EAAGtnC,KAAOuB,EAASkqB,YAAe6b,EAAGtnC,MAAQuB,EAASkqB,YAAc6b,EAAGrnC,OAASsB,EAAStB,SACzFonC,IAMR,OAAOryC,QAAQvD,QAAQ,CACnBnD,MAAO,CACHi5C,gBAAiBF,EACjBG,gBAAiB,EACjBC,WANgE,IAQpEC,QAAS,QAEjB,ECjGG,MAAMC,GAsCTlzC,YAAoBkR,GAAA,KAAAA,OAAAA,CAEpB,CAEAiiC,aAAapjC,EAAiCjD,EAA2BoD,G,MAGrE,IAAIkjC,EAA8Bj3C,KAAK+U,OAAOA,OAAOmiC,eAIrD,GAAgB,MAAbD,IACIA,EAAU1iC,iBAAmB0iC,EAAU3iC,eAAiB2iC,EAAUxiC,aAAewiC,EAAUziC,aAErFyiC,EAAU1iC,gBAAkB5D,EAASkqB,YAAcoc,EAAU1iC,iBAAmB5D,EAASkqB,YAAcoc,EAAUxiC,aAAe9D,EAAStB,UACzI4nC,EAAU3iC,cAAgB3D,EAASkqB,YAAcoc,EAAU3iC,eAAiB3D,EAASkqB,YAAcoc,EAAUziC,WAAa7D,EAAStB,QAEpI,OAKZ,IAAIxJ,EAAuD,QAAtC,EAAA7F,KAAK+U,OAAO+K,KAAKyX,6BAAqB,eAAE2a,uBAAuBt+B,GAEpF,GAAc,MAAV/N,EACA,OAAO,KAGX,IAAI,IAAImJ,KAAanJ,EAAO4J,OACxB,IAAI,IAAIrO,KAAS4N,EACb,GAAG5N,EAAMuP,SAASvB,MAAQuB,EAASkqB,YAC/Bz5B,EAAMuP,SAAStB,QAAUsB,EAAStB,QAClCjO,EAAMuP,SAAStB,OAASjO,EAAMuP,SAASpN,QAAUoN,EAAStB,OACtD,OAAO,KASvB,GAAe,MAJDxJ,EAAOo2B,qBAAqBtrB,EAASkqB,WAAYlqB,EAAStB,aAKjE,CACH,IAAIukC,EAAO5zC,KAAKm3C,mBAAmBvjC,EAAOjD,GACtClT,EAAOs5C,GAAgBK,oBAAoBxD,GAC/C,GAAY,MAARn2C,EACA,MAAO,CACH4W,MAAO,KACPgjC,SAAU,CAAC,CAAE35C,MAAOD,I,CAMpC,CAEA05C,mBAAmBvjC,EAAiCjD,GAGhD,IAAIxB,EAAMyE,EAAM0jC,sBAAsB,CAClC7iC,YAAa,EACbF,gBAAiB,EACjBD,cAAe3D,EAASkqB,WACxBrmB,UAAW7D,EAAStB,SAGpB8B,EAAOyC,EAAMkB,WAEb8+B,EAAO,GAEPlT,EAAMvxB,EACV,KAAOuxB,EAAMvvB,EAAK5N,QAAUvD,KAAKu3C,oCAAoCpmC,EAAKtM,OAAO67B,KAC7EA,IAGJ,IAAI8W,EAAQroC,EACZ,KAAOqoC,EAAQ,GAAKx3C,KAAKu3C,oCAAoCpmC,EAAKtM,OAAO2yC,EAAQ,KAC7EA,IAGJ,GAAI9W,EAAM8W,EAAQ,EACd5D,EAAOziC,EAAKY,UAAUylC,EAAO9W,OAC1B,CAEH,IADAA,EAAMvxB,EACCuxB,EAAMvvB,EAAK5N,QAAUvD,KAAKy3C,iBAAiBtmC,EAAKtM,OAAO67B,KAC1DA,IAIJ,IADA8W,EAAQroC,EACDqoC,EAAQ,GAAKx3C,KAAKy3C,iBAAiBtmC,EAAKtM,OAAO2yC,EAAQ,KAC1DA,IAGA9W,EAAM8W,EAAQ,IACd5D,EAAOziC,EAAKY,UAAUylC,EAAO9W,G,CAIrC,OAAOkT,CAEX,CAEA8D,iBAAiB9jC,EAAiCjD,EAC9CtK,GAEA,IAAI8I,EAAMyE,EAAM0jC,sBAAsB,CAClC7iC,YAAa,EACbF,gBAAiB,EACjBD,cAAe3D,EAASkqB,WACxBrmB,UAAW7D,EAAStB,SAGpB8B,EAAOyC,EAAMkB,WAEb4rB,EAAMvxB,EACV,KAAOuxB,EAAMvvB,EAAK5N,QAAUvD,KAAKu3C,oCAAoCpmC,EAAKtM,OAAO67B,KAC7EA,IAGJ,IAAI8W,EAAQroC,EACZ,KAAOqoC,EAAQ,GAAKx3C,KAAK23C,wBAAwBxmC,EAAKtM,OAAO2yC,EAAQ,KACjEA,IAKJ,OAF2C,OAAtBnxC,aAAU,EAAVA,EAAY9C,SAAqB8C,EAAW9C,OAE7Dm9B,EAAM8W,EAAQj0C,OACP4N,EAAKY,UAAUylC,EAAO9W,GAG1Br6B,CACX,CAEAsxC,wBAAwBvmC,GAEpB,OAAOA,EAAEoI,oBAAoBwU,MAAM,uBAEvC,CAEAypB,iBAAiBrmC,GAEb,OAAOA,EAAEoI,oBAAoBwU,MAAM,mBAEvC,CAEAupB,oCAAoCnmC,GAEhC,OAAOA,EAAEoI,oBAAoBwU,MAAM,oBAEvC,EA1Le,GAAAopB,oBAAqD,CAChE,MAAS,wDACT,IAAO,2GACP,QAAW,0FACX,MAAS,6HACT,IAAO,6QAEP,GAAM,0RACN,KAAQ,qOACR,OAAU,uVACV,IAAK,mGACL,KAAM,gRACN,KAAM,4HACN,KAAM,2HACN,KAAM,uSACN,KAAM,2LACN,KAAM,+LACN,KAAM,mMACN,KAAM,iMACN,KAAM,6GACN,KAAM,gHACN,IAAK,wMACL,IAAK,qHACL,OAAU,yIACV,QAAW,mJACX,UAAa,mMACb,OAAU,wIACV,MAAS,iRAET,MAAS,iFACT,QAAW,iHACX,WAAc,6LACd,KAAQ,mKCnCT,MAAMQ,GAET/zC,YAAoBic,GAAA,KAAAA,KAAAA,CAEpB,CAEA+3B,mBAAmBjkC,EAAiCS,EAAqBpV,EAA6C8U,GAgBlH,MAAO,CACHgqB,QAhBY9+B,EAAQ64C,QAAQ39B,KAAI/Y,IAChC,IAAI2d,EAA0B3d,EAAM22C,mBACpC,OAAgB,MAAZh5B,EAAyB,KAEiB,CAC1CO,MAAOP,EAASO,MAChB04B,YAAa,CAAC52C,GACd2hB,KAAM,WACNrD,KAAM,CACF1L,MAAO+K,EAASQ,cAAc3L,EAAM4L,MAExCy4B,aAAa,EAEA,IAIjBnB,QAAS,OAGjB,EC1BG,MAAMoB,GAETr0C,YAAoBic,GAAA,KAAAA,KAAAA,CAEpB,CAEAq4B,kBAAkBvkC,EAAiCjD,EAA2B1R,EAA4C8U,GAGtH,IAAIlO,EAAiB7F,KAAK8f,KAAKyX,sBAAsB2a,uBAAuBt+B,GAE5E,GAAc,MAAV/N,EAAgB,OAAO,KAE3B,IAAIyvB,EAAUzvB,EAAOo2B,qBAAqBtrB,EAASkqB,WAAYlqB,EAAStB,QACxE,GAAe,MAAXimB,EACA,OAGJ,IAAI8iB,EAAiB9iB,EAAQ8iB,eAGzBC,EAAkD,GAetD,OAbAD,EAAe73C,SAAQ,CAAC+3C,EAAmBzyC,KACvC,GAAyB,MAArByyC,EACA,IAAK,IAAIC,KAAMD,EACXD,EAAmBr1C,KACf,CACIwc,IAAK3Z,EAAO2Z,IACZnL,MAAO,CAAEI,YAAa8jC,EAAGlpC,OAAQkF,gBAAiBgkC,EAAGnpC,KAAMkF,cAAeikC,EAAGnpC,KAAMoF,UAAW+jC,EAAGlpC,OAASkpC,EAAGh1C,S,IAO1H80C,CAEX,ECvCG,MAAMG,GAEFr/B,kBAAkBhI,EAAcsnC,EAAoCC,GAEvE,IAAIC,EAAUxa,OAAO,iBACrBwa,EAAQ1Z,YAAY,CAAC,oBAAqB,qBAAsB,mBAAoB,wBAEpF0Z,EAAQ3Z,SAAS,gBAAkB0Z,GAEnCC,EAAQtY,IAAI,CAAExU,KAAM,GAAIG,MAAO,GAAIkW,IAAK,GAAI0W,OAAQ,KAEpD,IAAIh3B,EAAK62B,EAAcnuB,SACnBqQ,EAAIwD,OAAO,QAEXxpB,EAAgB,GAEpB,OAAQ+jC,GACJ,IAAK,SAAUC,EAAQtY,IAAI,CACvBxU,KAAMjK,EAAGiK,KAAO4sB,EAAcnY,QAAU,EAAI3rB,EAC5CikC,OAAQje,EAAE4F,SAAW3e,EAAGsgB,IAAMvtB,IAE9B,MACJ,IAAK,MAAOgkC,EAAQtY,IAAI,CACpBxU,KAAMjK,EAAGiK,KAAO4sB,EAAcnY,QAAU,EAAI3rB,EAC5CutB,IAAKtgB,EAAGsgB,IAAMuW,EAAclY,SAAW,KAEvC,MACJ,IAAK,OAAQoY,EAAQtY,IAAI,CACrBxU,KAAMjK,EAAGiK,KAAO4sB,EAAcnY,QAAU3rB,EACxCutB,IAAKtgB,EAAGsgB,IAAMuW,EAAclY,SAAW,EAAI5rB,IAE3C,MACJ,IAAK,QAASgkC,EAAQtY,IAAI,CACtBrU,MAAO2O,EAAE2F,QAAU1e,EAAGiK,KACtBqW,IAAKtgB,EAAGsgB,IAAMuW,EAAclY,SAAW,EAAI5rB,IAKnDgkC,EAAQ9kB,KAAK,QAAQglB,KAAK1nC,GAE1B,IAAI4gC,EAAU4G,EAAQ9kB,KAAK,cAC3Bke,EAAQ5mB,GAAG,SAAUhX,IACjBA,EAAEurB,kBACFqS,EAAQ/Q,IAAI,SACZwX,GAAOM,OAAO,IAGlBH,EAAQI,OAAO,IAEnB,CAEA5/B,eACkBglB,OAAO,iBACb6a,QAAQ,IACpB,CAGA7/B,kBAAkB8f,EAAYggB,EAAgB/a,GAE1C,IAAIpe,EACJ,KAAGm5B,aAAoBC,IAGnB,OAFAp5B,EAAOm5B,EAKX,IAAIE,EAAgBr5B,EAAKkZ,KAAKiU,SAAUkM,cAEpCC,EAAOngB,EAAK,OAEhB,GAAqB,MAAjBkgB,IAAiD,MAAvBA,EAAcC,KAAkBD,EAAcC,IAAQ,CAChFD,EAAcC,IAAQ,EACtBt5B,EAAKsZ,eAAeyR,wBAAuB,SAE3C,IAAI15B,EAAe,GACfunC,EAA6B,OAEjC,OAAQzf,GACJ,IAAK,oBACD9nB,EAAO,uMAGPunC,EAAY,OACZ,MACA,IAAK,mBACDvnC,EAAO,6NAGPunC,EAAY,OACZ,MACR,IAAK,mBACDvnC,EAAO,kIACPunC,EAAY,MACZxa,EAAWC,OAAO,kBAClB,MACJ,IAAK,mBACDhtB,EAAO,olBAOPunC,EAAY,MACZ,MACJ,IAAK,gBACDvnC,EAAK,gaAILunC,EAAY,SAGR,IAARvnC,GAA0B,MAAZ+sB,GAAoBA,EAAS36B,OAAS,GACpDi1C,GAAOa,WAAWloC,EAAM+sB,EAAUwa,E,CAK9C,EC/GG,MAAMY,GAQTz1C,YAAmBic,EAAwBy5B,EAA8B1gB,GAAtD,KAAA/Y,KAAAA,EAAwB,KAAAy5B,YAAAA,EAA8B,KAAA1gB,WAAAA,EAJzE,KAAA2gB,GAAmC,KAEnC,KAAAC,uBAAiC,EA2PjC,KAAAC,SAAmB,EAgInB,KAAAC,kBAA8B,EAxX9B,CAEAC,QAAQ1b,ICpBL,WACH3qB,OAAOC,UAAUwM,SAAS,CACtBiZ,GAAI,SACJ4gB,WAAY,CAAC,UAIjB,IAAIC,EAA+C,CAC/CC,aAAc,CACV,CAEIC,WAAY,qCACZC,UAAW,YACXxb,OAAQ,CAAEyb,aAAc3mC,OAAOC,UAAU2mC,aAAaC,cAAeC,WAAY,QAErF,CAEIL,WAAY,qCACZvb,OAAQ,CAAEyb,aAAc3mC,OAAOC,UAAU2mC,aAAaG,KAAMD,WAAY,QAE5E,CAEIL,WAAY,2CACZvb,OAAQ,CAAEyb,aAAc3mC,OAAOC,UAAU2mC,aAAaG,KAAMD,WAAY,OAE5E,CAEIL,WAAY,0BACZvb,OAAQ,CAAEyb,aAAc3mC,OAAOC,UAAU2mC,aAAaG,KAAMC,WAAY,IAE5E,CAEIP,WAAY,iCACZvb,OAAQ,CAAEyb,aAAc3mC,OAAOC,UAAU2mC,aAAaG,KAAMC,WAAY,KAGhFC,SAAU,CACNC,YAAa,KACbC,aAAc,CAAC,KAAM,OAEzBC,SAAU,CACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,MAEVC,iBAAkB,CACd,CAAEpT,KAAM,IAAKsR,MAAO,KACpB,CAAEtR,KAAM,IAAKsR,MAAO,KACpB,CAAEtR,KAAM,IAAKsR,MAAO,KACpB,CAAEtR,KAAM,IAAKsR,MAAO,KACpB,CAAEtR,KAAM,IAAMsR,MAAO,MAEzB+B,iBAAkB,CACd,CAAErT,KAAM,IAAKsR,MAAO,KACpB,CAAEtR,KAAM,IAAKsR,MAAO,KACpB,CAAEtR,KAAM,IAAKsR,MAAO,KACpB,CAAEtR,KAAM,IAAKsR,MAAO,KACpB,CAAEtR,KAAM,IAAMsR,MAAO,OA6H7BvlC,OAAOC,UAAUsnC,yBAAyB,SAAUhB,GAEpDvmC,OAAOC,UAAUunC,yBAAyB,SA5H3B,CAEXC,aAAc,GACdC,aAAc,OACdC,YAAY,EACZP,SAAU,CACN,CAAEnT,KAAM,IAAKsR,MAAO,IAAK/kC,MAAO,oBAChC,CAAEyzB,KAAM,IAAKsR,MAAO,IAAK/kC,MAAO,0BAEpConC,QAAS,sBACTC,SAAU,CACN,QAAS,SAAU,MAAO,QAAS,MAAO,QAAS,UAAW,MAAO,KAAM,MAAO,SAAU,gBAAiB,SAC7G,QAAS,UAAW,KAAM,UAAW,OAAQ,OAAQ,QAAS,UAAW,SAAU,SAAU,WAAY,aACzG,SAAU,QAAS,eAAgB,eAAgB,oBAAqB,WAAY,UAAW,aAAc,WAC7G,SAAU,OAAQ,SAAU,WAAY,OAAQ,OAAQ,OAAQ,MAAO,SAAU,SAAU,YAAa,SAAU,UAClH,OAAQ,MAAO,UAAW,OAAQ,OAAQ,OAAQ,QAAS,SAAU,KAAM,SAAU,YAAa,KAAM,QAAS,UACjH,YAAa,QAAS,SAAU,UAAW,YAAa,OAAQ,KAAM,SAAU,OAAQ,MAAO,OAAQ,OAAQ,QAAS,QACxH,UAAW,KAAM,MAAO,UAAW,OAAQ,KAAM,SAAU,KAAM,KAAM,QAAS,QAAS,OAAQ,SAAU,UAAW,QACtH,QAAS,YAAa,aAAc,SAAU,UAAW,UAAW,SAAU,UAAW,WAAY,QAAS,WAAY,MAC1H,YAAa,SAAU,MAAO,QAAS,OAAQ,YAAa,OAAQ,KAAM,cAAe,UAAW,QAAS,SAAU,SACvH,QAAS,SAAU,SAAU,OAAQ,UAAW,OAAQ,QAAS,OAAQ,UAAW,SAAU,WAElGrvB,UAAW,CACP,MAAO,UAAW,KAAM,OAAQ,MAAO,KAAM,KAAM,OAAQ,YAAa,QAAS,QAAS,OAAQ,OAAQ,QAAS,SAEvHsvB,iBAAkB,CACd,MAAO,UAAW,OAAQ,WAAY,QAAS,OAAQ,MAAO,SAC9D,MAAO,QAAS,oBAAqB,SAAU,OAAQ,aAAc,SACrE,QAAS,QAAS,MAAO,MAAO,SAAU,QAAS,SAAU,aAC7D,UAAW,QAAS,QAAS,OAAQ,UAAW,iBAAkB,SAAU,YAC5E,gBAAiB,OAAQ,SAAU,UAAW,WAAY,QAAS,YAEvEC,iBAAkB,GAGlBC,cAAe,GAGfC,UAAW,CACPvjC,KAAM,CACF,CAAEwjC,QAAS,aACX,CAAEA,QAAS,eACX,CAAEA,QAAS,kBACX,CAAEA,QAAS,YACX,CAAEA,QAAS,YACX,CAAEA,QAAS,uBACX,CAAEA,QAAS,WACX,CAAC,QAAS,aACV,CAAC,OAAQ,aACT,CAAC,gCAAiC,CAC9BC,MAAO,CACH,oBAAqB,YACrB,YAAa,UACb,WAAY,gBAGpB,CAAC,WAAY,CACTA,MAAO,CACH,YAAa,UACb,aAAc,WACd,oBAAqB,aAErB,WAAY,gBAGpB,CAAC,mBAAoB,aAEzBC,WAAY,CACR,CAAC,MAAO,UAEZnB,SAAU,CACN,CAAC,QAAS,WACV,CAAC,OAAQ,CAAEzmC,MAAO,gBAAiBzR,KAAM,cAE7CoL,QAAS,CACL,CAAC,SAAU,WAIX,CAAC,OAAQ,CAAEqG,MAAO,gBAAiBzR,KAAM,SACzC,CAAC,IAAK,YAEVi5C,cAAe,CACX,CAAC,uBAAwB,CACrBG,MAAO,CACH,iBAAkB,aAClB,WAAY,iBAIxBE,QAAS,CACL,CAAC,oBAAqB,UACtB,CAAC,sBAAuB,UACxB,CAAC,0CAA2C,WAEhDC,QAAS,CACL,CAAC,IAAK,CAAE9nC,MAAO,SAAUzR,KAAM,aAEnCw5C,OAAQ,CACJ,CAAC,UAAW,UACZ,CAAC,MAAO,yBACR,CAAC,KAAM,UACP,CAAC,IAAK,CAAE/nC,MAAO,SAAUzR,KAAM,UAEnCy5C,mBAAoB,CAChB,CAAC,IAAK,CAAEhoC,MAAO,mBAAoBzR,KAAM,uBAE7C05C,iBAAkB,CACd,CAAC,QAAS,cACV,CAAC,KAAM,cACP,CAAC,IAAK,CAAEjoC,MAAO,mBAAoBzR,KAAM,UAE7C25C,OAAQ,KAgBpB,CDpKQC,GAEA3oC,OAAOwB,OAAOonC,YAAY,oBAAqB,CAC3CzqC,KAAM,UACN0qC,SAAS,EACTC,MAAO,CACH,CAAEtoC,MAAO,YAAauoC,WAAY,SAAUC,UAAW,UACvD,CAAExoC,MAAO,aAAcuoC,WAAY,UACnC,CAAEvoC,MAAO,SAAUuoC,WAAY,UAC/B,CAAEvoC,MAAO,OAAQuoC,WAAY,UAC7B,CAAEvoC,MAAO,aAAcuoC,WAAY,UACnC,CAAEvoC,MAAO,YAAauoC,WAAY,SAAUC,UAAW,QACvD,CAAExoC,MAAO,UAAWuoC,WAAY,SAAUC,UAAW,QACrD,CAAExoC,MAAO,QAASuoC,WAAY,SAAUC,UAAW,QACnD,CAAExoC,MAAO,YAAauoC,WAAY,WAGtCE,OAAQ,CACJ,oBAAqB,UACrB,2BAA8B,UAC9B,4BAA+B,UAC/B,yBAA4B,aAIpCjpC,OAAOwB,OAAOonC,YAAY,qBAAsB,CAC5CzqC,KAAM,KACN0qC,SAAS,EACTC,MAAO,CACH,CAAEtoC,MAAO,YAAauoC,WAAY,SAAUC,UAAW,eACvD,CAAExoC,MAAO,aAAcuoC,WAAY,UACnC,CAAEvoC,MAAO,SAAUuoC,WAAY,UAC/B,CAAEvoC,MAAO,OAAQuoC,WAAY,SAAUC,UAAW,QAClD,CAAExoC,MAAO,aAAcuoC,WAAY,UACnC,CAAEvoC,MAAO,YAAauoC,WAAY,SAAUC,UAAW,QACvD,CAAExoC,MAAO,UAAWuoC,WAAY,SAAUC,UAAW,QACrD,CAAExoC,MAAO,UAAWuoC,WAAY,SAAUC,UAAW,WAEzDC,OAAQ,CACJ,oBAAqB,UACrB,oBAAqB,UACrB,qCAAsC,UACtC,+BAAgC,UAChC,qCAAsC,UACtC,sCAAuC,YACvC,iCAAkC,UAClC,8BAA+B,UAC/B,0BAA2B,UAC3B,uBAAwB,UACxB,8BAA+B,UAC/B,+BAAgC,UAChC,2BAA4B,UAC5B,6BAA8B,UAC9B,iCAAkC,OAClC,iCAAkC,UAClC,2BAA8B,UAC9B,4BAA+B,UAC/B,yBAA4B,aAKpCx8C,KAAK+U,OAASxB,OAAOwB,OAAO/V,OAAOk/B,EAAS,GAAI,CAO5CoN,SAAU,SACVmR,UAAW,CACPC,SAAS,GAKbC,qBAAsB,EACtBC,uBAAwB,OACxBC,sBAAsB,EACtBC,kBAAkB,EAClBC,sBAAuB,GACvBC,SAAU,GACVC,WAAY,wBACZC,WAAY,MACZC,kBAAkB,EAClBC,qBAAqB,EAErBC,iBAAiB,EACjBC,sBAAsB,EACtBC,sBAAsB,EACtBC,WAAY,OACZC,aAAa,EACbC,cAAc,EACdC,eAAe,EACfC,gBAAiB,GACjBC,kBAAmB,GACnBC,QAAS,CACLC,eAAe,EACfC,WAAY,WAGhBC,eAAgB,CAAEvB,SAAS,EAAMwB,OAAO,GAMxCC,eAAgBn+C,KAAK64B,WAErBulB,QAAS,CACL1B,QAAS18C,KAAKu5C,aAElB8E,UAAW,CACPC,SAAU,OACVC,WAAY,QAEhB1mC,MAAO,sBAOX,IAAI4gB,EAAOz4B,KAEPw+C,EAAsBpgB,KACA,IAAlBA,EAAMiB,UAEN5G,EAAKgmB,qBAAqBzrC,KAAKV,KAAK8rB,EAAMsgB,SAAS,GAEnDtgB,EAAMuB,iB,EAmEd,OA9DA3/B,KAAK+U,OAAO4pC,0BAA0BvgB,IAC9BA,EAAMwgB,WAAWrrC,OAAOwB,OAAO8pC,aAAaC,WAAa9+C,KAAK64B,YAE9D74B,KAAK8f,KAAKiX,eAAeC,aAAa+nB,mC,IAK9C/+C,KAAK+U,OAAOiqC,2BAA2B5gB,IAEnC3F,EAAKumB,0BAA0B5gB,EAAMztB,SAAS,IAKlD3Q,KAAK+U,OAAOkqC,kBAAkB7gB,IAE1B,IAAI9I,EAA+B4I,EAASrK,KAAK,kBAAkB,GAInE,GAHAyB,EAAQ4pB,oBAAoB,QAASV,GACrClpB,EAAQ0c,iBAAiB,QAASwM,EAAoB,CAAEW,SAAS,IAE1B,MAAnCn/C,KAAK8f,KAAKyX,sBAA+B,OAE7C,IAAI1xB,EAAS7F,KAAK8f,KAAKyX,sBAAsB2a,uBAAuBlyC,KAAK+U,OAAOohC,YAC5En2C,KAAK8f,gBAAgBo5B,IAAkB,MAAVrzC,GAE7B7F,KAAK8f,KAAK2Z,gBAAgB2lB,+BAA+Bv5C,E,IAIjE0N,OAAOC,UAAU6rC,sBAAsB,SAAU,IAAItI,GAAgB/2C,OAErEuT,OAAOC,UAAU8rC,+BAA+B,SAAU,IAAInN,GAAyBnyC,KAAK8f,OAC5FvM,OAAOC,UAAU+rC,2BAA2B,SAAU,IAAI3H,GAAqB53C,KAAK8f,OACpFvM,OAAOC,UAAUgsC,0BAA0B,SAAU,IAAItH,GAAoBl4C,KAAK8f,OAGlFvM,OAAOC,UAAUisC,8BAA8B,SAAU,IAAI5J,GAAwB71C,KAAK8f,OAE1F9f,KAAK+U,OAAO2qC,aAAavrC,IACrB,MAAM6uB,EAAO7uB,EAAE4uB,OAAOwR,OAClBpgC,EAAE4uB,OAAOxjC,OAASgU,OAAOwB,OAAO4qC,gBAAgBC,qBAChDzrC,EAAE4uB,OAAOxjC,OAASgU,OAAOwB,OAAO4qC,gBAAgBE,qBAAuB7c,EAAK8c,cAGhFrnB,EAAKsnB,kBAAkB5rC,EAAE4uB,OAAOpyB,SAASkqB,WACnC,IAOVgG,YAAW,KACPttB,OAAOwB,OAAOirC,gBAAgB,GAC/B,KAEHhgD,KAAKigD,aAGLjgD,KAAK+U,OAAOmrC,WAAW/uC,IAAWsnB,EAAKynB,UAAU/uC,EAAK,IAE/CnR,KAAK+U,MAChB,CAGAmrC,UAAU/uC,GAGN,MAAMgvC,EAAqB,CAAChxC,EAAK8kC,EAAoBmM,EAAiBC,KAClE,MAAMhsC,EAAQ,IAAId,OAAO+sC,MACrBnxC,EAAI0rB,WACJ1rB,EAAIE,OACJF,EAAI0rB,WACJ1rB,EAAIE,QAERrP,KAAK+U,OAAOwrC,aAAa,cAAe,CACpC,CAAElsC,QAAOlD,KAAM8iC,KAInBj0C,KAAK+U,OAAOyrC,YAAY,CACpB3lB,WAAYulB,EACZ/wC,OAAQgxC,GACV,EAGN,GAAa,OAATlvC,EAAe,CACf,MAAMyC,EAAQ5T,KAAK+U,OAAOohC,WACpBxlC,EAAW3Q,KAAK+U,OAAO0rC,cACvBC,EAAW9sC,EAAM+sC,eAAehwC,EAASkqB,WAAa,GAC5D,GAAsC,IAAlC6lB,EAAStyB,OAAO5d,QAAQ,QAAgBkwC,EAASE,YAAYC,SAAS,SACrDlwC,EAASkqB,WAAajnB,EAAMktC,eAAiBltC,EAAM+sC,eAAehwC,EAASkqB,WAAa,GAAK,IAChGzM,OAAO0Z,WAAW,KAAM,CAClC,IAAIiZ,EAAkCL,EAAS9rC,OAAO,EAAG8rC,EAASn9C,OAASm9C,EAASM,WAAWz9C,QACxD,IAAnCm9C,EAAStyB,OAAO5d,QAAQ,OACxB2vC,EAAmBxvC,EAAU,KAAOowC,EAA0B,MAAOpwC,EAASkqB,WAAYlqB,EAAStB,OAAS,EAAI0xC,EAAwBx9C,QAExI48C,EAAmBxvC,EAAU,QAAUowC,EAA0B,MAAOpwC,EAASkqB,WAAYlqB,EAAStB,OAAS,EAAI0xC,EAAwBx9C,O,EAK/J,CAKA09C,YAAYC,GAGR,IAAI7b,GAAO,IAAI8b,MAAOC,UACtB,GAAI/b,EAAOrlC,KAAK05C,SAAW,IAAK,OAChC15C,KAAK05C,SAAWrU,EAEhB,IAAIgc,EAAWrhD,KAAK+U,OAAOusC,aAAajoC,IAAI9F,OAAOwB,OAAO8pC,aAAa7B,UAMvE,GAJIh9C,KAAK8f,gBAAgBo5B,IACrBl5C,KAAK8f,KAAKyhC,mBAAmBC,aAAaN,GAG1CA,GAAcG,EAAU,CACxBrhD,KAAK+U,OAAOsjB,cAAc,CACtB2kB,SAAUkE,IAKd,IACIO,EADczhD,KAAK+U,OAAOusC,aAAajoC,IAAI9F,OAAOwB,OAAO8pC,aAAa7B,UAC/CkE,EAC3BlhD,KAAK+U,OAAOsjB,cAAc,CACtB2kB,SAAUkE,EAAaO,G,CAK/BtjB,OAAO,sBAAsBkC,IAAI,YAAa6gB,EAAa,MAC3D/iB,OAAO,sBAAsBkC,IAAI,cAAgB6gB,EAAa,EAAK,MAEnEhpC,SAASC,gBAAgBE,MAAMC,YAAY,oBAAqB4oC,EAAa,MAC7EhpC,SAASC,gBAAgBE,MAAMC,YAAY,sBAAuB4oC,EAAa,EAAI,MAGnFlhD,KAAK8f,KAAKiX,eAAeC,aAAa+nB,mCAE1C,CAEAN,qBAAqB9pC,EAAe+sC,GAAmB,GACnD,IAAIL,EAAWrhD,KAAK+U,OAAOusC,aAAajoC,IAAI9F,OAAOwB,OAAO8pC,aAAa7B,UAEnE0E,IAEI/sC,GADA0sC,EAAW,GACF,EACFA,EAAW,GACT,EAEA,GAIjB,IAAIM,EAAcN,EAAW1sC,EACzBgtC,GAAe,GAAKA,GAAe,IACnC3hD,KAAKihD,YAAYU,EAEzB,CAGA1B,aACI,IAAIxnB,EAAOz4B,KAEXA,KAAK+U,OAAO6sC,UAAU,CAElB3oB,GAAI,eAGJqb,MAAO,kCAGPuN,YAAa,CACTtuC,OAAOuuC,OAAOC,QAAUxuC,OAAOyuC,QAAQC,OAG3CC,aAAc,KAGdC,kBAAmB,KAEnBC,mBAAoB,aAEpBC,iBAAkB,IAIlBC,IAAK,SAAUC,GAEX,OADAA,EAAGC,UAAU,+BAA+BF,MACrC,IACX,IAGJtiD,KAAK+U,OAAO6sC,UAAU,CAElB3oB,GAAI,oBAGJqb,MAAO,0BAGPuN,YAAa,CACTtuC,OAAOuuC,OAAOC,QAAUxuC,OAAOyuC,QAAQS,OAG3CP,aAAc,KAGdC,kBAAmB,KAEnBC,mBAAoB,aAEpBC,iBAAkB,EAIlBC,IAAK,SAAUC,GAEX,OADA9pB,EAAK3Y,KAAK4iC,mBAAmBpkB,QAAQ,WAC9B,IACX,GAIR,CAEAyhB,kBAAkBllB,GAElB,CAGAmkB,0BAA0BruC,GAEN,MAAZA,IAAkBA,EAAW3Q,KAAK+U,OAAO0rC,eAE7C,IAAI56C,EAAS7F,KAAK82B,2BAClB,GAAc,MAAVjxB,EAEA,YADA7F,KAAK25C,kBAAoB35C,KAAK+U,OAAO4tC,iBAAiB3iD,KAAK25C,kBAAmB,KAIlF,IAAIrkB,EAAUzvB,EAAOo2B,qBAAqBtrB,EAASkqB,WAAYlqB,EAAStB,QAEpEuzC,EAAqD,GAEzD,GAAe,MAAXttB,EAAiB,CACjB,IACIgjB,EADiBhjB,EAAQ8iB,eACU/+B,IAAIxT,GAC3C,GAAyB,MAArByyC,EACA,IAAK,IAAIC,KAAMD,EACXsK,EAAY5/C,KAAK,CACbqR,MAAO,CAAEI,YAAa8jC,EAAGlpC,OAAQkF,gBAAiBgkC,EAAGnpC,KAAMoF,UAAW+jC,EAAGlpC,OAASkpC,EAAGh1C,OAAQ+Q,cAAeikC,EAAGnpC,MAC/G0E,QAAS,CACL+uC,UAAW,yBAA0BC,aAAa,EAAOC,cAAe,CACpEviB,MAAO,CAAEvH,GAAI,gCACb+pB,UAAW,CAAE/pB,GAAI,sCACjBtoB,SAAU4C,OAAOwB,OAAOkuC,kBAAkBC,Q,CAWlE,IAAIC,GAAsB,EAE1B,IAAI,IAAIC,KAAgBv9C,EAAOw0B,4BAA4Br6B,KAAK+U,OAAOmiC,gBAAgB,CAEnF,IAAImM,EAAY,6BACI,MAAhBD,IACIA,EAAa3hC,WACb4hC,EAAY,2BACRD,EAAavhC,mBACbwhC,EAAY,8BACZF,GAAsB,IAG1BA,GAAsB,EAG1BP,EAAY5/C,KAAK,CACbqR,MAAO,CACHI,YAAa2uC,EAAazhC,KAAKtS,OAAQkF,gBAAiB6uC,EAAazhC,KAAKvS,KAC1EoF,UAAW4uC,EAAaxhC,GAAGvS,OAAQiF,cAAe8uC,EAAaxhC,GAAGxS,MAEtE0E,QAAS,CACL+uC,UAAWQ,EAAWP,aAAa,EAAOC,cAAe,CACrDviB,MAAO,CAAEvH,GAAIoqB,GACbL,UAAW,CAAE/pB,GAAIoqB,GACjB1yC,SAAU4C,OAAOwB,OAAOkuC,kBAAkBC,MAE9C9E,QAAS,CACL5d,MAAO,CAAEvH,GAAIoqB,GACb1yC,SAAU4C,OAAOwB,OAAOuuC,gBAAgBC,QAE5CC,QAAS,O,CAQzBxjD,KAAK8f,KAAK4iC,mBAAmB3jB,UAAU,UAAWokB,GAE/CA,IAAwBnjD,KAAK8f,KAAK+Y,cACjC2f,GAAOiL,WAAW,mBAAyBzjD,KAAK8f,KAAMqe,OAAO,uBAIjEn+B,KAAK25C,kBAAoB35C,KAAK+U,OAAO4tC,iBAAiB3iD,KAAK25C,kBAAmBiJ,EAElF,CAEA9rB,2BACI,OAAO92B,KAAK8f,KAAKgX,0BACrB,EEveG,MAAM4sB,GAAb,cAGI,KAAAC,QAAUC,UAAU,CAACC,WAAY,CAAC9rB,EAAM+rB,IAAoB,+DA0HhE,CAlHIC,oBAAoBpkC,GAChB3f,KAAKsoC,UAAU,CAACtF,KAAMrjB,GAC1B,CAEAqkC,YAAYhhB,GACR,IAAIvK,EAAOz4B,KACI,MAAXy4B,EAAKyN,GACLzN,EAAKkrB,QAAQziD,MAAM+iD,IACfxrB,EAAKyrB,IAAMD,EACXxrB,EAAKyN,GAAKie,SAASF,OAAMjnD,GACzBy7B,EAAK2rB,OAAOphB,EAAK,IAClBmE,OAAO5oC,IACNwlC,QAAQgF,IAAIxqC,GAELk6B,EAAKsrB,oBAAoB,CAC5B9qB,GAAIj5B,KAAW,KAAM,GACrBoB,MAAO7C,EAAa,aAI5Bk6B,EAAK2rB,OAAOphB,EAEpB,CAEAqhB,YAEA,CAEAD,OAAOphB,GACH,IAAIshB,EAAUtjD,EACVujD,EAASvhB,EAAa,OAAIA,EAAa,OAAI,CAAC,EAChD,IACI,OAAQA,GAAQA,EAAa,QACzB,IAAK,OAID,OAHAshB,EAAOthB,EAAa,OACpBhjC,KAAKkmC,GAAKie,SAASnkD,KAAKkkD,IAAKI,GAAQ,IAAIpd,WAAWod,IAE7CtkD,KAAK+jD,oBAAoB,CAC5B9qB,GAAI+J,EAAS,GACbwhB,OAAO,IAEf,IAAK,OAID,GAHgB,OAAZxkD,KAAKkmC,KACLlmC,KAAKkmC,GAAKie,SAASnkD,KAAKkkD,SAAKlnD,KAE5BgmC,EAAU,IACX,KAAM,6BAGV,OAAOhjC,KAAK+jD,oBAAoB,CAC5B9qB,GAAI+J,EAAS,GACbyhB,QAASzkD,KAAKkmC,GAAGwe,KAAK1hB,EAAU,IAAGA,EAAa,OAAGuhB,KAE3D,IAAK,OAmBD,OAlBgB,OAAZvkD,KAAKkmC,KACLlmC,KAAKkmC,GAAKie,SAASnkD,KAAKkkD,SAAKlnD,IAiB1BgD,KAAKkmC,GAAG6K,KAAK/N,EAAU,IAAGA,EAAa,QAf/B,SAAkB2hB,GAE7B,OAAO3kD,KAAKgkD,YAAY,CACpB/qB,GAAI+J,EAAS,GACb2hB,IAAKA,EACLC,UAAU,GAElB,IACW,WAEP,OAAO5kD,KAAKgkD,YAAY,CACpB/qB,GAAI+J,EAAS,GACb4hB,UAAU,GAElB,GACiEL,GACrE,IAAK,SACDD,EAAOtkD,KAAKkmC,GAAW,SACvBllC,EAAS,CACLi4B,GAAI+J,EAAS,GACbyhB,QAAS,CACL,CACIxd,OAAQqd,KAIpB,IAEI,OAAOtkD,KAAK+jD,oBAAoB/iD,E,CAClC,MAAOI,GAEL,OAAOpB,KAAK+jD,oBAAoB/iD,E,CAExC,IAAK,QAKD,OAJIhB,KAAKkmC,IACLlmC,KAAKkmC,GAAG4S,QAGL94C,KAAK+jD,oBAAoB,CAC5B9qB,GAAI+J,EAAS,KAErB,QACI,MAAM,IAAIxhC,MAAM,qBAAuBwhC,GAAQA,EAAa,S,CAGtE,MAAOzkC,GAGL,OAAOyB,KAAK+jD,oBAAoB,CAC5B9qB,GAAI+J,EAAS,GACb5hC,MAAO7C,EAAa,S,CAIhC,ECxEG,MAAMsmD,GAaThhD,YAAoBic,GAAA,KAAAA,KAAAA,EAXpB,KAAAglC,yBAAqD,KAIrD,KAAAC,QAAkB,EAElB,KAAAC,yBAA8D,IAAIhsC,IAClE,KAAAisC,sBAAyD,IAAIjsC,GAM7D,CAEAksC,iBAAiBnX,EAAsBoX,EAAmBC,EACtDC,GAEArlD,KAAK8f,KAAKwlC,iBAAiBpkB,KAAK,qDAET,MAAflhC,KAAKokD,QACTpkD,KAAKokD,OAAOC,YAGRhuB,YAAYC,MAApB,IAIIkO,EAAc,iCACfxkC,KAAK8f,KAAK+Y,eAET2L,EAAMtE,OAAOqlB,cAAgB/gB,GAI9BtE,OAAOslB,OAENxlD,KAAKokD,OAAS,IAAIV,GAElB1jD,KAAKokD,OAAS,IAAIqB,OAAOjhB,GAE7B,IAAI/L,EAAOz4B,KAEPyP,EAAmB,GAEvBzP,KAAKokD,OAAO9b,UAAY,KAEpB7P,EAAK2rB,OAAO9b,UAAYlK,IAIpB,IAAInF,EAAKmF,EAAM4E,KAAK/J,GACpB,GAAwB,MAApBmF,EAAM4E,KAAK5hC,MAAe,CAC1B,IAAIskD,EAAuBjtB,EAAKusB,yBAAyB3rC,IAAI4f,GACjC,MAAxBysB,GACAA,EAAqBtnB,EAAM4E,KAAKyhB,Q,KAEjC,CACH,IAAIkB,EAAqBltB,EAAKwsB,sBAAsB5rC,IAAI4f,GAC9B,MAAtB0sB,GACAA,EAAmBvnB,EAAM4E,KAAK5hC,M,CAStCpB,KAAKilD,sBAAsBW,OAAO3sB,GAClCj5B,KAAKglD,yBAAyBY,OAAO3sB,EAAG,EAI9B,MAAXksB,IAAiBA,EAAU,KAC9BA,EAAUA,EAAQrgD,SACV0kB,QAAQ,8BAChB27B,EAAQniD,KAAK,6BACb,IAAI6iD,EAAaV,EAAQ5hD,OAErBuiD,EAAY,KACZ,GAAIX,EAAQ5hD,OAAS,EAAG,CACpBvD,KAAK8f,KAAKwlC,iBAAiBS,YAAe/yC,KAAKsI,MAAoC,KAA7B,EAAE6pC,EAAQ5hD,OAAOsiD,IAAmB,MAC1F,IAAIv6B,EAAQ65B,EAAQa,QACpBvtB,EAAKwtB,aAAa36B,GAAQtqB,IACtB8kD,GAAW,IACX1kD,IACAqO,EAAOzM,KAAK,oCAAsC5B,EAAQ,YAAckqB,GACxEyY,QAAQgF,IAAI,CAAC,MAAS,oCAAsC3nC,EAAO,MAASkqB,IAC5EyY,QAAQgF,MACR+c,GAAW,G,MAGkB,MAA7BV,GAAmCA,EAA0B31C,GACjEgpB,EAAKytB,2BAA0B,KAEvBb,GAAkCA,IACtCrlD,KAAK8f,KAAKwlC,iBAAiB1kB,MAAM,G,EAM7CklB,GAAW,EAwBf9lD,KAAKokD,OAAOlc,QAAW/zB,IACnB1E,EAAOzM,KAAK,iBAAmBmR,EAAE/S,OACjC2iC,QAAQgF,IAAI,iBAAmB50B,EAAE/S,MAAM,EAG3CpB,KAAKokD,OAAOJ,YAAY,CACpB/qB,GAAIR,EAAKssB,UACTtmB,OAAQ,OACRwI,OAAQ8G,GAGhB,CAEAkY,aAAa36B,EAAe4Z,EAAuCC,GAE/D,IAAIlM,EAAKj5B,KAAK+kD,UAEd/kD,KAAKglD,yBAAyBrrC,IAAIsf,EAAIiM,GACtCllC,KAAKilD,sBAAsBtrC,IAAIsf,EAAIkM,GAEnCnlC,KAAKokD,OAAOJ,YAAY,CACpB/qB,GAAIA,EACJwF,OAAQ,OACR0nB,IAAK76B,EACL86B,OAAQ,CAAC,GAGjB,CAEA/c,OAAOnE,EAA+CC,GAElD,IAAIlM,EAAKj5B,KAAK+kD,UAEd/kD,KAAKglD,yBAAyBrrC,IAAIsf,GAAKwrB,IAAcvf,EAAgBuf,EAAQ,GAAGxd,OAAO,IACvFjnC,KAAKilD,sBAAsBtrC,IAAIsf,EAAIkM,GAEnCnlC,KAAKokD,OAAOJ,YAAY,CACpB/qB,GAAIA,EACJwF,OAAQ,SACR2nB,OAAQ,CAAC,GAGjB,CAIAC,oBAAoBrkB,GACqB,MAAjChiC,KAAK8kD,yBACL9iB,EAAShiC,KAAK8kD,0BAEd3mB,OAAOmoB,QAAQ,mCAAmC,SAAUC,GACxDvkB,EAASukB,EACb,GAER,CAEAL,0BAA0BlkB,GAKtB,IACIvJ,EAAOz4B,KAEXA,KAAKimD,aAHK,2DAGcjlD,I,QACpB,IAAIwlD,EAAO,GACM,QAAjB,EAAS,QAAT,EAAAxlD,EAAO,UAAE,eAAEZ,cAAM,SAAEG,SAAQ7C,GAAS8oD,GAAQ,qBAAqB9oD,EAAM,iCAAiCA,EAAM,8BAA8BA,EAAM,YAEtI,IAAR8oD,EACAxmD,KAAKimD,aAAaO,GAAOC,IAIrBhuB,EAAKlJ,kBAAoBkJ,EAAKiuB,uBAAuB1lD,EAAQylD,GAE7DzkB,EAASvJ,EAAKlJ,kBAAkB,IAEhCnuB,IAAY2iC,QAAQgF,IAAI3nC,EAAM,KAElCq3B,EAAKlJ,kBAAoB,CAAEb,OAAQ,IACnCsT,EAASvJ,EAAKlJ,mB,IAGlBnuB,IAAY2iC,QAAQgF,IAAI3nC,EAAM,GAGtC,CAEAslD,uBAAuBh4B,EAAuBlI,GAC1CxmB,KAAKuvB,kBAAoB,CACrBb,OAAQ,IAGZ,IAAIi4B,EAAuD,IAAI3tC,IAE3D4L,EAAQ,EACZ,IAAK,IAAIphB,EAAI,EAAGA,EAAIkrB,EAAO,GAAGtuB,OAAOmD,OAAQC,IAAK,CAC9C,IAAIojD,EAAYl4B,EAAO,GAAGtuB,OAAOoD,GAAG,GAChCqjD,EAAWn4B,EAAO,GAAGtuB,OAAOoD,GAAG,GAE/BsjD,EAAiC,CACjChjD,KAAM8iD,EACNp4B,KAAM,EACNu4B,YAAaF,EACbrgC,QAAS,IAGbmgC,EAAwBhtC,IAAIitC,EAAWE,GAEvC9mD,KAAKuvB,kBAAkBb,OAAO1rB,KAAK8jD,GAEnC,IAAIE,EAAcxgC,EAAQ5B,GAAOxkB,OAC7B6mD,EAA0B,KAC1BzgC,EAAQjjB,OAASqhB,EAAQ,GAAsC,MAAjC4B,EAAQ5B,EAAQ,GAAG4B,QAAQ,KACzDygC,EAAiBzgC,EAAQ5B,EAAQ,GAAGxkB,OACpCwkB,KAEJA,IACA,IAAI4J,EAAehI,EAAQ5B,GAAOxkB,OAAO,GAAG,GAC5CwkB,IAEAkiC,EAAet4B,KAAOA,EAEtBw4B,EAAYzmD,SAAQ2mD,IACEA,EAAa,GAA/B,IACIpjD,EAAeojD,EAAa,GAC5B3nD,EAAe2nD,EAAa,GAC5BvgC,EAAsC,GAAnBugC,EAAa,GAChCC,EAAqBD,EAAa,GAClCv5B,EAA2C,GAAnBu5B,EAAa,GAErCE,EAAmC,CACnCtjD,KAAMA,EACN6pB,aAAcA,EACdpH,gBAAiBoH,GAAgBk5B,EAAS1zC,cAAc3C,QAAQ,kBAAoB,EACpFud,gBAAiBxuB,EACjBuoB,MAAOg/B,EACPO,YAAa,GACb5/B,aAAc0/B,EACdxgC,QAASA,GAQb,GAAsB,MAAlBsgC,EAAwB,CACxB,IAAIK,EAAgBL,EAAepzB,MAAKtM,GAAkBA,EAAe,GAAG/N,qBAAuB1V,EAAK0V,sBAC1F,MAAV8tC,IACAF,EAAgBG,kBAAoBD,E,CAI5CR,EAAetgC,QAAQxjB,KAAKokD,EAAgB,G,CAMpD,IAAK,IAAI74B,KAAMvuB,KAAKuvB,kBAAkBb,OAClC,IAAK,IAAIb,KAAMU,EAAG/H,QACd,GAA4B,MAAxBqH,EAAG05B,kBAA2B,CAC9B,IAAIz/B,EAAQ6+B,EAAwBttC,IAAIwU,EAAG05B,kBAAkB,IAE7D,GAAY,MAATz/B,EAAe,SAClB,IAAIzY,EAASyY,EAAMtB,QAAQqN,MAAKpN,GAAKA,EAAE3iB,KAAK0V,qBAAuBqU,EAAG05B,kBAAkB,GAAG/tC,sBAC3FqU,EAAGiB,WAAazf,C,CAO5B,OAAOrP,KAAKuvB,iBAEhB,CAEApW,mBAAmB+vB,GAEf,IAAIse,EAA6B,CAAC,GAAM,GAAM,GAAM,IAAM,IAAM,KAG5DvyB,GAAiB,EACrB,IAAK,IAAIzxB,EAAI,EAAGA,EAAIgkD,EAAiBjkD,OAAQC,IACzC,GAAIgkD,EAAiBhkD,IAAM0lC,EAAK1lC,GAAI,CAChCyxB,GAAQ,EACR,K,CAGR,OAAIA,EAAc,qBATU,KAWxBiU,EAAK,GAA4B,mBAE9B,OAEX,ECnXG,MAAMue,GAAb,cAEI,KAAAC,iBAA2B,GAsJ/B,CApJIC,MAAMl1B,GACF,OAAQA,EAAU/Q,IAAIniB,MAClB,KAAK2G,EAAU0B,cAEX,OADA6qB,EAAUm1B,WAAa5nD,KAAK6nD,0BAA0Bp1B,EAAU/Q,KACzD+Q,EAAUm1B,WACrB,KAAK1hD,EAAUmB,cACX,OAA2B,MAAxBorB,EAAU/Q,IAAIwG,OACNuK,EAAU0zB,KAEjB1zB,EAAUm1B,WAAa5nD,KAAK8nD,qBAAqBr1B,EAAU/Q,KACpD+Q,EAAUm1B,YAEzB,QACI,OAAOn1B,EAAU0zB,IAG7B,CAEA2B,qBAAqBpmC,GACjB,IAAIqmC,EAA0B,eAAermC,EAAIoG,MAAMzhB,aAEjC,MAAlBqb,EAAIoE,YAAsBpE,EAAIoE,WAAWviB,OAAS,IAClDwkD,GAAmB,IAAIrmC,EAAIoE,WAAW3L,KAAIsM,GAAKzmB,KAAKgoD,iBAAiBvhC,EAAEpgB,cAAa+U,KAAK,UAG7F2sC,GAAmB,aAEnB,IAAIxmC,EAAK,GAEL0mC,EAAkB,GACtB,GAAkB,MAAdvmC,EAAIthB,QAAkBshB,EAAIthB,OAAOmD,OAAS,EAC1C,IAAK,IAAI2kD,KAASxmC,EAAIthB,OAClB6nD,EAAMjlD,KAAK,MAAMklD,EAAM/tC,KAAIwB,GAAK3b,KAAKmoD,WAAWxsC,KAAIP,KAAK,UAKjE,KAAO6sC,EAAM1kD,OAAS,GAClBge,GAAMwmC,EACNxmC,GAAM0mC,EAAMvzC,OAAO,EAAG1B,KAAK8H,IAAI9a,KAAK0nD,iBAAkBO,EAAM1kD,SAAS6X,KAAK,OAC1EmG,GAAM,MAGV,OAAOA,CAEX,CAEA4mC,WAAWxsC,GACP,GAAIA,EAAE4M,cAAgBriB,EAAUO,eAAgB,CAC5C,IAAIwK,EAAY0K,EAAE6M,SAElB,OADAvX,EAAIA,EAAEnC,QAAQ,KAAM,MACb,IAAImC,I,CAEX,OAAO0K,EAAE6M,QAEjB,CAEAq/B,0BAA0BnmC,GACtB,IAAIH,EAAa,gBAAgBG,EAAIkE,YAAc,iBAAmB,MAAM5lB,KAAKgoD,iBAAiBtmC,EAAIrb,oBAEtGkb,GAAMG,EAAIoE,WAAW3L,KAAI9K,GAAUrP,KAAKooD,eAAe/4C,KAAS+L,KAAK,UACvC,MAA1BsG,EAAIsE,oBAA8BtE,EAAIsE,mBAAmBziB,OAAS,IAClEge,GAAM,SAAWG,EAAIsE,mBAAmB7L,KAAI6J,GAAOhkB,KAAKqoD,oBAAoBrkC,KAAM5I,KAAK,WAG3F,IAAIktC,EAAM5mC,EAAIqE,0BAA0BjhB,QAAQqV,KAAIlJ,GAAKA,EAAEuI,sBAC3D,IAAK,IAAInK,KAAUqS,EAAIoE,WAAY,CAC/B,IAAIW,EAAIpX,EAAOhJ,WAAWmT,oBACtBnK,EAAOkX,iBAAmB+hC,EAAI93C,QAAQiW,IAAM,GAC5C6hC,EAAI5zC,OAAO4zC,EAAI93C,QAAQiW,GAAI,E,CAcnC,OAVI6hC,EAAI/kD,OAAS,IACbge,GAAM,qBAAqBvhB,KAAKuoD,kBAAkBD,GAAKltC,KAAK,UAG5DsG,EAAIuE,kBAAkB1iB,OAAS,IAC/Bge,GAAM,SAAWG,EAAIuE,kBAAkB9L,KAAIquC,GAAM,UAAYxoD,KAAKuoD,kBAAkBC,GAAIptC,KAAK,MAAQ,MAAKA,KAAK,WAGnHmG,GAAM,OAECA,CACX,CAEA8mC,oBAAoBrkC,GAChB,IAAIykC,EAAY,gBAAgBzoD,KAAKgoD,iBAAiBhkC,EAAI3U,uBAAuBrP,KAAKgoD,iBAAiBhkC,EAAIG,oBAAoBnkB,KAAKgoD,iBAAiBhkC,EAAII,qBAOzJ,OANIJ,EAAI0kC,WACJD,GAAa,cAAgBzkC,EAAI0kC,UAEjC1kC,EAAI2kC,WACJF,GAAa,cAAgBzkC,EAAI2kC,UAE9BF,CACX,CAEAL,eAAe/4C,GAEX,IAAI9P,EAAO8P,EAAO4L,SAAS1B,WACf,OAARha,GAAiB8P,EAAOkX,kBACxBhnB,EAAO,WAGX,IAAIgiB,EAAa,GAAGvhB,KAAKgoD,iBAAiB34C,EAAOhJ,eAAe9G,IAgBhE,GAfyB,MAArB8P,EAAO8L,YAAsB9L,EAAO8L,WAAW5X,OAAS,IAAM8L,EAAOkX,kBACrEhF,GAAM,IAAIlS,EAAO8L,WAAWC,KAAK,UAEjC/L,EAAOsX,UACPpF,GAAM,aAEiB,MAAvBlS,EAAOoY,eACPlG,GAAM,YAAclS,EAAOoY,eAE3BpY,EAAOiX,WAAajX,EAAOkX,mBAC3BhF,GAAM,gBAENlS,EAAOkX,kBACPhF,GAAM,kBAEmB,MAAzBlS,EAAOkY,eAAwB,CAC/B,IAAIvD,EAAM3U,EAAOkY,eACbd,EAAYzC,EAAII,iBAChBJ,EAAIG,kBAAiBsC,EAAIzmB,KAAKgoD,iBAAiBhkC,EAAIG,iBAAmB,IAAMnkB,KAAKgoD,iBAAiBvhC,GAAK,KAC3GlF,GAAM,eAAiBkF,C,CAE3B,GAAsB,MAAlBpX,EAAOmY,QAAiB,CACxB,IAAIA,EAAUnY,EAAOmY,QAAQhO,oBACzB,CAAC,SAAU,SAAU,SAAShJ,QAAQgX,IAAY,IAClDjG,GAAM,YAAciG,E,CAG5B,IAAIrM,EAAa9L,EAAO8L,WAAa9L,EAAO8L,WAAa,CAAC,EAAG,GACzDxC,EAAgBtJ,EAAO4L,SAAStC,cAAc3Y,KAAKgoD,iBAAiB34C,EAAOhJ,YAAa8U,GAI5F,MAHqB,IAAjBxC,IACA4I,GAAM,IAAM5I,GAET4I,CACX,CAEAymC,iBAAiB/uB,GACb,MAAO,IAAMA,EAAK,GACtB,CAEAsvB,kBAAkBp7B,GACd,OAAOA,EAAKhT,IAAIna,KAAKgoD,iBACzB,E,2SChJG,MAAMY,GAMT/kD,YAAoBic,GAAA,KAAAA,KAAAA,CAEpB,CAEM+oC,YAAYrkB,G,0CACd,GAAW,MAAPA,EAAa,OAEjB,IAAIrzB,EAAO,KAOX,OALIA,EADAqzB,EAAIqc,SAAS,cACA7gD,KAAK8oD,SAAStkB,eAEPukB,MAAMvkB,IAAMrzB,OAG7BnR,KAAKgpD,eAAe73C,EAC/B,G,CAEM83C,aAAaxyB,G,0CACf,GAAY,MAARA,EAAJ,CAEA,GAAIA,EAAK3yB,KAAK+8C,SAAS,QAAS,CAC5B,IAAI1vC,QAAanR,KAAKkpD,UAAUzyB,GAChC,OAAOz2B,KAAKgpD,eAAe73C,E,CAG3B,OAAO,IAAI/M,SACP,CAACvD,EAASC,KACN,IAAIqoD,EAAS,IAAIC,WACjBD,EAAOE,OAAUjrB,IACb,IAAIjtB,EAAeitB,EAAM2E,OAAO/hC,OAChCH,EAAQb,KAAKgpD,eAAe73C,GAAM,EAEtCg4C,EAAOG,WAAW7yB,EAAK,GAdX,CAoB5B,G,CAEMqyB,SAAStkB,G,0CAEX,MAAM2kB,EAAS,IAAII,IAAIC,UAAU,IAAID,IAAIE,WAAWjlB,IACpD,OAAOxkC,KAAK0pD,YAAYP,EAC5B,G,CAEMD,UAAUzyB,G,0CAGZ,MAAM0yB,EAAS,IAAII,IAAIC,UAAU,IAAID,IAAII,WAAWlzB,IACpD,OAAOz2B,KAAK0pD,YAAYP,EAC5B,G,CAEMO,YAAYP,G,0CAEd,IAAI5C,QAAgB4C,EAAOS,aAC3BrD,EAAUA,EAAQl2B,QAAO3tB,GAASA,EAAMmnD,SAAShJ,SAAS,UAC1D,IAAI1vC,EAAe,GACnB,GAAIo1C,EAAQhjD,OACR,IAAI,IAAIb,KAAS6jD,EAEbp1C,UAAczO,EAAMonD,QAGhB,IAAIP,IAAIQ,WAER,CACIC,WAAY,CAACplC,EAAO9J,KAAR,KAW5B,aAFMquC,EAAOrQ,QAEN3nC,CACX,G,CAEc63C,eAAe73C,G,0CACzB,GAAY,MAARA,EAAc,OAAO,KAEzB,IACI84C,GADe,IAAI/7C,GACDU,IAAIuC,GAEtBgmB,EAAiB,IAAIrZ,EACrBM,EAAY,IAAIuZ,GAAO,CACvBjB,OAAO,EACP5yB,KAAM,GACN80B,OAAO,EACPO,+BAA+B,EAC/BiC,eAAgB,KAChBjqB,KAAMA,EACN+nB,qBAAsB,KACtBmC,QAAS,GACVr7B,KAAK8f,MACR1B,EAAErP,UAAYk7C,EAAUz6C,OAExB2nB,EAAOhZ,MAAMC,GAEbpe,KAAKkqD,iBAAmB9rC,EAAEE,cAAc+R,QAAO9O,GAAMA,EAAGG,IAAIniB,MAAQ2G,EAAU0B,gBAAeuS,KAAIoH,GAAuBA,EAAGG,MAC3H1hB,KAAKmqD,YAAc/rC,EAAEE,cAAc+R,QAAO9O,GAAMA,EAAGG,IAAIniB,MAAQ2G,EAAUmB,gBAAe8S,KAAIoH,GAAkBA,EAAGG,MACjH1hB,KAAKoqD,oBAAsBhsC,EAAEE,cAAc+R,QAAO9O,GAAMA,EAAGG,IAAIniB,MAAQ2G,EAAUc,cAC5C,eAAhBua,EAAGG,IAAKqB,OAAuB5I,KAAIoH,GAAsBA,EAAGG,MAEjF,IAAK,IAAI2oC,KAAOrqD,KAAKoqD,oBAAqB,CACtC,IAAIr2B,EAAkB/zB,KAAKsqD,oBAAoBD,EAAIrnC,iBACnD,GAAuB,MAAnB+Q,EAAJ,CAOA,GALuB,MAAnBs2B,EAAI1lC,cACJoP,EAAgBhO,0BAA4BskC,EAAI1lC,YAChDoP,EAAgBjO,WAAWvlB,SAAQkmB,GAAKA,EAAEH,WAAY,KAG3B,MAA3B+jC,EAAIE,oBAA6B,CACjC,IAAIC,EAAMxqD,KAAKyqD,0BAA0B12B,EAAiBs2B,EAAIE,qBACnD,MAAPC,IAAaA,EAAIlkC,WAAY,E,CAGrC,GAA4B,MAAxB+jC,EAAI5lC,iBACJ,IAAK,IAAIimC,KAAOL,EAAI5lC,iBAAkB,CAClC,IAAIkmC,EAAM3qD,KAAKyqD,0BAA0B12B,EAAiB22B,EAAIrkD,YAC1Due,EAAQmP,EAAgBjO,WAAWtV,QAAQm6C,GAC/C52B,EAAgBjO,WAAWpR,OAAOkQ,EAAO,EAAG8lC,E,CAIpD,GAAuB,MAAnBL,EAAInmC,YACJ,IAAK,IAAI0mC,KAAMP,EAAInmC,YACf6P,EAAgB/N,mBAAmBhjB,KAAK4nD,GAIhD,GAAmB,MAAfP,EAAIvlC,QACJ,IAAK,IAAIF,KAASylC,EAAIvlC,QAClB1G,EAAEE,cAActb,KAAK,CACjB6e,kBAAkB,EAClBF,KAAM,KAAMC,GAAI,KAAMH,WAAW,EACjCC,IAAK,CACDniB,KAAM2G,EAAUoC,aAChBysC,iBAAkBnwB,EAAMvV,OACxBw7C,gBAAiBjmC,EAAMC,WACvB7B,gBAAiBqnC,EAAIrnC,gBACrBU,OAAQkB,EAAMlB,OACd/S,SAAU,KAAMkS,YAAa,KAAMC,YAAa,MAEpDqjC,IAAK,UAAUvhC,EAAMlB,OAAS,UAAY,YAAYkB,EAAMC,iBAAiBwlC,EAAIrnC,mBAAmB4B,EAAMvV,YAvCjF,C,CA6CzC,OAAOrP,KAAK8qD,aAAa1sC,EAAEE,cAC/B,G,CAEQgsC,oBAAoBtnC,GAExB,OADAA,EAAkBA,EAAgBxJ,oBAC3BxZ,KAAKkqD,iBAAiBr2B,MAAKlR,GAAQA,EAAKtc,WAAWmT,qBAAuBwJ,GACrF,CAEQynC,0BAA0BM,EAA4BhW,GAE1D,OADAA,EAAmBA,EAAiBv7B,oBAC7BuxC,EAAUjlC,WAAW+N,MAAKxN,GAAcA,EAAWhgB,WAAWmT,qBAAuBu7B,GAChG,CAEc+V,aAAa3kB,G,0CAEvB,IAAI6kB,EAAqC,IAAIvD,GAEzCnpC,EAA0B6nB,EAAW9V,QAAO9O,GAAMA,EAAGG,IAAIniB,MAAQ2G,EAAU0c,oBAC1EzI,KAAIoH,GAAMypC,EAAiBrD,MAAMpmC,KACtCjD,EAAckL,QAAQ,8BACtBlL,EAActb,KAAK,6BAEnB,IAAIioD,EAAS,IAAIpG,GAAa7kD,KAAK8f,MAenC,OAbc,IAAI1b,SAA0B,CAACvD,EAASC,KAClDmqD,EAAO/F,iBAAiB,KAAM5mC,GAAe,KACzC2sC,EAAO5hB,QAAQpC,IACXpmC,EAAQ,CACJqqD,QAASjkB,GACX,IACF7lC,IACAN,EAAOM,EAAM,GACf,GACJ,GAMV,G,EC3MG,MAAM+pD,GAEHlC,aAAaxyB,EAAuB3W,G,qCAEtC,GAAY,MAAR2W,EAAJ,CAEA,GADA3W,EAAKwlC,iBAAiBpkB,KAAK,qBACxBzK,EAAK3yB,KAAK+8C,SAAS,SAAWpqB,EAAK3yB,KAAK+8C,SAAS,QAAQ,CACxD,IAAIuK,QAAW,IAAIxC,GAAc9oC,GAAMmpC,aAAaxyB,GAEpD,OADA3W,EAAKwlC,iBAAiB1kB,OACfwqB,C,CAEP,IAAIjC,EAAS,IAAIC,WACjB,OAAO,IAAIhlD,SAA0B,CAACvD,EAASC,KAC3CqoD,EAAOE,OAAUjrB,IACb,IAAIitB,EAA+BjtB,EAAM2E,OAAO/hC,OAC5CklC,EAAiB,IAAIgB,WAAWmkB,GAGD,oBAAhCxG,GAAayG,YAAYplB,KAA2BA,EAAKoD,KAAK0E,QAAQ9H,IAEzEpmB,EAAKwlC,iBAAiB1kB,OACtB//B,EAAQ,CAACqqD,QAAShlB,GAAI,EAE1BijB,EAAOoC,kBAAkB90B,EAAK,GAnBd,CAyB5B,E,+RAEA+0B,WAAWP,GACPA,EAAO5hB,QAAQnD,IACX,IAAI2jB,EAAmB4B,OAAO,qCAAsC,oBACpD,MAAZ5B,GAICA,EAAShJ,SAAS,aAAYgJ,GAAsB,WrBuN9D,SAAsBtsD,EAAUssD,EAAkB6B,GAAkB,GACvE,IAAIC,EAAOD,EAAQnuD,EAAM,IAAIquD,KAAK,CAACrmB,KAAKC,UAAUjoC,IAAO,CAAEgC,KAAM,eAEjE,GAAI2gC,OAAO0D,WAAa1D,OAAO0D,UAAUioB,iBAErC3rB,OAAO0D,UAAUioB,iBAAiBF,EAAM9B,OACrC,CACH,IAAI11C,EAAI+D,SAAS4zC,YAAY,eACzBr6C,EAAIyG,SAAS+rB,cAAc,KAC/BxyB,EAAEs6C,SAAWlC,EACbp4C,EAAEu6C,KAAO9rB,OAAO+rB,IAAIC,gBAAgBP,GACpCl6C,EAAE06C,QAAQC,YAAc,CAAC,aAAc36C,EAAEs6C,SAAUt6C,EAAEu6C,MAAM5wC,KAAK,KAEhEjH,EAAEk4C,UAAU,SAAS,GAAM,EAAOnsB,OAAQ,EAAG,EAAG,EAAG,EAAG,GAAG,GAAO,GAAO,GAAO,EAAO,EAAG,MACxFzuB,EAAE66C,cAAcn4C,GAChB1C,EAAEwvB,Q,CAEV,CqBvOYsrB,CAAa,IAAIX,KAAK,CAAC1lB,EAAGe,SAAU4iB,GAAU,IAJ1CpgB,MAAM,yDAIyC,IACpD,QACP,ECnCG,MAAM+iB,GAKT3oD,YAAoBic,EAAoB0mB,EAA0BzO,GAA9C,KAAAjY,KAAAA,EAAoB,KAAA0mB,SAAAA,EAA0B,KAAAzO,KAAAA,EAC9D/3B,KAAKsT,MACT,CAEAA,OACItT,KAAKywC,QAAUtS,OAAO,WACtBA,OAAO,SAASkC,IAAI,aAAc,UAElCrgC,KAAKywC,QAAQtO,OAAOhE,OAChB,m+FA8CJuE,GAAS1iC,KAAKywC,SAEd,IAAIgc,EAAgBtuB,OAAO,oBAC3Bn+B,KAAK8f,KAAKsZ,eAAe+U,mBAAmBue,IACxCA,EAAansD,SAAQosD,IAEjB,IAAIC,EAAOzuB,OAAO,4CAClByuB,EAAKzqB,OAAOhE,OAAO,iCAAiCwuB,EAAI7oD,6CAA6C6oD,EAAIE,4BACzGD,EAAKzqB,OAAOhE,OAAO,kCAAkCwuB,EAAItmB,sBACzDumB,EAAK5pB,KAAK,aAAc2pB,EAAI1zB,IAC5B2zB,EAAK5pB,KAAK,OAAQ2pB,EAAI7oD,MAEtB2oD,EAActqB,OAAOyqB,GACrBD,EAAIC,KAA+BA,EAEnCA,EAAKzhC,GAAG,eAAe,KACnBshC,EAAc54B,KAAK,yBAAyBoL,YAAY,aACxD2tB,EAAK5tB,SAAS,YAAY,GAC5B,IAGN,IAAI8tB,EAA0C3uB,OAAO,oBACrD2uB,EAAc3hC,GAAG,SAAS,KACtB,IAAIla,EAAY67C,EAAcvoD,MAC9BkoD,EAAc54B,KAAK,yBAAyB+M,OAC5C8rB,EAAansD,SAAQosD,KACDA,EAAI7oD,KAAO6oD,EAAIE,WAAaF,EAAItmB,YAAcsmB,EAAItmB,YAAc,KAClE71B,QAAQS,IAAM,GAAG07C,EAAIC,KAAK1rB,MAAM,GAChD,GACJ,IAGN,IAAI6rB,EAAY5uB,OAAO,+BAEvB4uB,EAAU5hC,GAAG,YAAa6hC,IACtBA,EAAIttB,kBACJstB,EAAIrtB,iBACJqtB,EAAIC,cAAcC,aAAaC,WAAa,MAAM,IAEtDJ,EAAU5hC,GAAG,QAAS6hC,IAClBA,EAAIttB,kBACJstB,EAAIrtB,iBAEJ,IAAIyL,EAAQ4hB,EAAIC,cAAcC,aAAa9hB,MAC3CprC,KAAKotD,WAAWhiB,EAAM,IAG1B,IAAIiiB,EAAiBlvB,OAAO,gBAC5BkvB,EAAeliC,GAAG,UAAWiT,IAEzB,IAAIgN,EAAkBhN,EAAM6uB,cAAclqB,OAAOqI,MACjDprC,KAAKotD,WAAWhiB,GAAOlqC,MAAK,KACxBmsD,EAAe9oD,IAAI,KAAK,GAC1B,IAINvE,KAAKywC,QAAQpQ,IAAI,aAAc,WAE/BlC,OAAO,wBAAwBhT,GAAG,SAAS,KAAQnrB,KAAK0wC,gBAAgB,IACxEvS,OAAO,iCAAiChT,GAAG,SAAS,KAChD,IAAImiC,EAAyB,gBACzBnvB,OAAO,qCAAqCovB,SAAS,eAAcD,EAAa,gBAChFnvB,OAAO,oCAAoCovB,SAAS,eAAcD,EAAa,uBAC/EnvB,OAAO,iCAAiCovB,SAAS,eAAcD,EAAa,eAEhF,IAAIE,EAAqC,CACrCv0B,GAAI,KACJ8W,UAAU,EACVjsC,KAAcq6B,OAAO,iCAAiC55B,MACtDwzB,KAAM/3B,KAAK+3B,KAAK3c,KAAK,MAGzB,OAAQkyC,GACJ,IAAK,gBACDttD,KAAKytD,gBAAgBD,GACrB,MACJ,IAAK,eACD,IAAIE,EAAYvvB,OAAO,mCACvB,GAAwB,GAApBuvB,EAAUnqD,OAEV,YADAkmC,MAAM,4CAGN+jB,EAAcG,qBAAuBD,EAAU1qB,KAAK,cAC1B,kBAAtBwqB,EAAc1pD,OAA0B0pD,EAAc1pD,KAAO4pD,EAAU1qB,KAAK,SAChFhjC,KAAKytD,gBAAgBD,GAEzB,MACJ,IAAK,sBACD,IAAII,EAAezvB,OAAO,yBAAyB55B,MAC/CspD,EAASD,EAAKp9C,QAAQ,KAC1B,IAAe,GAAXq9C,EAEA,YADApkB,MAAM,kDAGV+jB,EAAcM,gBAAkBj7C,OAAOC,SAAS86C,EAAK77C,UAAU,EAAG87C,IAClEL,EAAcrhB,OAASyhB,EAAK77C,UAAU87C,EAAS,GAC/C7tD,KAAKytD,gBAAgBD,GACrB,MACJ,IAAK,cACD,GAAqB,MAAjBxtD,KAAKqtC,SAUL,YADA5D,MAAM,+DARN,IAAIT,IAAmBC,uBAAuB,EAAGjpC,KAAK8f,KAAM9f,KAAKqtC,SAAS6d,QACtE,kCACCvlB,IACD6nB,EAAcO,YAAcpoB,EAASmH,cACrC9sC,KAAKytD,gBAAgBD,EAAc,I,GAY3D,CAEQC,gBAAgBD,GACpBxtD,KAAK8f,KAAKsZ,eAAesS,oBAAoB8hB,EAAextD,KAAKwmC,UAAWplC,IACxE,GAAa,MAATA,EAA+B,YAAdqoC,MAAMroC,GAE3B,IAAIwuC,EAAI5vC,KAAK8f,KAAK+vB,mBAAmB2d,EAAc1pD,KAAM9D,KAAKwmC,UAC9DoJ,EAAE7X,KAAOy1B,EAAcz1B,KACvB6X,EAAE3W,GAAKu0B,EAAcv0B,GACrB2W,EAAEE,YAAc,GAEhB,IAAIrW,EAAkBz5B,KAAK8f,KAAK2Z,gBAEhCz5B,KAAK8f,KAAKmrB,cAAcjoC,KAAK4sC,GAC7B,IAAIoe,EAAqC,CACrClqD,KAAM0pD,EAAc1pD,KACpBmsC,gBAAiBL,EACjBM,UAAW,YACXH,UAAU,EACVhY,KAAM/3B,KAAK+3B,MAGf0B,EAAgBgW,mBAAmBU,WAAW6d,GAAkB,GAEhEpe,EAAEgC,qBAAqBoc,GAEvBv0B,EAAgBgW,mBAAmBC,eACnCjW,EAAgB0V,cAAcO,eAE9BjW,EAAgBmT,mBAAmBgD,GAEnC5vC,KAAK0wC,gBAAgB,GAG7B,CAEM0c,WAAWhiB,G,qCACb,IACI6iB,EAAW,IAAI9C,GACfjlB,QAA6B+nB,EAAShF,aAAa7d,EAAM,GAAIprC,KAAK8f,MAClEouC,GAAsB,EAE1B,GAAoB,oBADDrJ,GAAayG,YAAYplB,EAAGglB,SACP,CAEpC,IAAIiD,EAAiB7kB,KAAK0E,QAAQ9H,EAAGglB,SACW,sBAA5CrG,GAAayG,YAAY6C,KACzBD,GAAa,E,KAE8B,sBAAxCrJ,GAAayG,YAAYplB,EAAGglB,WAEnChlB,EAAGglB,QAAU5hB,KAAKC,QAAQrD,EAAGglB,SAC7BgD,GAAa,GAGbA,GAjBOluD,KAkBFqtC,SAAWnH,EAChB/H,OAAO,yBAAyB0a,KAAK,0IAErCpP,MAAM,6DAEd,E,+RAEAiH,iBACIvS,OAAO,SAASkC,IAAI,aAAc,WAClCrgC,KAAKywC,QAAQpQ,IAAI,aAAc,UAC/BrgC,KAAKywC,QAAQY,OACjB,ECxOG,MAAM+c,GAETvqD,YAAoBic,GAAA,KAAAA,KAAAA,EAKpB,KAAAuuC,eAA2D,CAAC,EAC5D,KAAAC,yBAAmC,CAJnC,CAMA1U,QAAQ5gB,GAEJ,IAAIP,EAAOz4B,KACP+U,EAAS/U,KAAK8f,KAAK8yB,kBAEnB2b,EAAiB,CACjBltB,MAAO,CACH,CACIh7B,WAAY,QAAS07B,QACrB,CACIV,MAAO,CACH,CACIh7B,WAAY,wBACZo4B,OAAQ,KAAQN,OAAO,iBAAiBG,QAAQ,QAAQ,MAMxE,CACIj4B,WAAY,aAAc07B,QAC1B,CACIV,MAAO,CACH,CAAEh7B,WAAY,wBAAyBo4B,OAAQ,KAAQ1pB,EAAOupB,QAAQ,IAAK,OAAQ,CAAC,EAAE,GACtF,CAAEj4B,WAAY,yBAA0Bo4B,OAAQ,KAAQ1pB,EAAOupB,QAAQ,IAAK,OAAQ,CAAC,EAAE,GACvF,CAAEj4B,WAAY,KACd,CAAEA,WAAY,sBAAuBo4B,OAAQ,KAAQ1pB,EAAOytC,UAAU,qCAAqCF,KAAK,GAChH,CAAEj8C,WAAY,0BAA2Bo4B,OAAQ,KAAQ1pB,EAAOytC,UAAU,oCAAoCF,KAAK,GACnH,CAAEj8C,WAAY,gDAAiDo4B,OAAQ,KAAQ1pB,EAAOytC,UAAU,mCAAmCF,KAAK,GACxI,CAAEj8C,WAAY,mDAAoDo4B,OAAQ,KAAQ1pB,EAAOytC,UAAU,qCAAqCF,KAAK,GAC7I,CAAEj8C,WAAY,2CAA4Co4B,OAAQ,KAAQ1pB,EAAOytC,UAAU,mCAAmCF,KAAK,GACnI,CAAEj8C,WAAY,8CAA+Co4B,OAAQ,KAAQ1pB,EAAOytC,UAAU,qCAAqCF,KAAK,GACxI,CAAEj8C,WAAY,KACd,CAAEA,WAAY,uBAAwBo4B,OAAQ,KAAQ1pB,EAAOytC,UAAU,gBAAgBF,KAAK,GAC5F,CAAEj8C,WAAY,yBAA0Bo4B,OAAQ,KAAQ1pB,EAAOytC,UAAU,wCAAwCF,KAAK,GACtH,CAAEj8C,WAAY,KACd,CAAEA,WAAY,kCAAmCo4B,OAAQ,KAAQ1pB,EAAOytC,UAAU,6BAA6BF,KAAK,GACpH,CAAEj8C,WAAY,yCAA0Co4B,OAAQ,KAAQ1pB,EAAOytC,UAAU,gCAAgCF,KAAK,GAC9H,CAAEj8C,WAAY,KACd,CAAEA,WAAY,sCAAuCo4B,OAAQ,KAAQ1pB,EAAOytC,UAAU,+BAA+BF,KAAK,GAC1H,CAAEj8C,WAAY,KACd,CAAEA,WAAY,uBAAwBo4B,OAAQ,KAAQ1pB,EAAOytC,UAAU,kBAAkBF,KAAK,GAC9F,CAAEj8C,WAAY,kBAAmBo4B,OAAQ,KAAQ1pB,EAAOytC,UAAU,oBAAoBF,KAAK,GAC3F,CAAEj8C,WAAY,KACd,CACIA,WAAY,wCAAyCo4B,OAAQ,KACzD1pB,EAAO+rB,QACPD,YAAW,KACP9rB,EAAOytC,UAAU,gCAAgCF,KAAK,GACvD,IAAI,GAGf,CAAEj8C,WAAY,4CAA6Co4B,OAAQ,KAAQ1pB,EAAOytC,UAAU,uCAAuCF,KAAK,GACxI,CACIj8C,WAAY,qCAAsCo4B,OAAQ,KACtD1pB,EAAO+rB,QACPD,YAAW,KACP9rB,EAAOytC,UAAU,kCAAkCF,KAAK,GACzD,IAAI,MAO3B,CACIj8C,WAAY,UAAW07B,QACvB,CACIV,MAAO,CACH,CACIh7B,WAAY,QACZ07B,QAAS,CACLV,MAAO,CACH,CACIh7B,WAAY,OACZo4B,OAAQ,KACJhG,EAAK7gB,YAAY,OAAO,GAGhC,CACIvR,WAAY,QACZo4B,OAAQ,KACJhG,EAAK7gB,YAAY,QAAQ,MAM7C,CAAEvR,WAAY,KACd,CAAEA,WAAY,mCAAoCo4B,OAAQ,KAAQ1pB,EAAOytC,UAAU,oCAAoCF,KAAK,GAE5H,CAAEj8C,WAAY,KACd,CAAEA,WAAY,4BAA6Bo4B,OAAQ,KAAQz+B,KAAK8f,KAAK/K,OAAO0pC,sBAAsB,EAAE,GACpG,CAAEp4C,WAAY,cAAeo4B,OAAQ,KAAQz+B,KAAK8f,KAAK/K,OAAOksC,YAAY,GAAG,GAC7E,CAAE56C,WAAY,2BAA4Bo4B,OAAQ,KAAQz+B,KAAK8f,KAAK/K,OAAO0pC,qBAAqB,EAAE,MAK9G,CACIp4C,WAAY,YAAa07B,QACzB,CACIV,MAAO,CACH,CACIh7B,WAAY,4BAA6Bo4B,OAAQ,KAC7C,IAAI+H,EAAmB/N,EAAK3Y,KAAKkZ,KAAKC,GACH,MAA/BR,EAAK3Y,KAAKiZ,oBACVyN,EAAW/N,EAAK3Y,KAAKiZ,mBAGzB,IAAIyzB,GAAkB/zB,EAAK3Y,KAAM0mB,EAAU,GAAG,GAGtD,CAAEngC,WAAY,mBAAoBo4B,OAAQ,KAAQ,IAAI+R,GAAuBxwC,KAAK8f,KAAM9f,KAAK8f,KAAKuvB,iBAAiB,GACnH,CACIhpC,WAAY,yCAA0Co4B,OAAQ,MAC1D,IAAI0sB,IAAuBK,WAAWxrD,KAAK8f,KAAKsX,kBAAkB,QAW9F+G,OAAO,aAAakT,QACpBrxC,KAAKwuD,SAASD,EAAU,EAC5B,CAEA32C,YAAYC,GACR7X,KAAK8f,KAAKyhC,mBAAmBxpC,SAASF,EAC1C,CAEA22C,SAASC,EAAYj9C,GAEjBi9C,EAAKj9C,MAAQA,EAEA,GAATA,EACAi9C,EAAKvwB,SAAWC,OAAO,cAEvBswB,EAAKvwB,SAAWC,OAAO,kCACvBA,OAAO,QAAQgE,OAAOssB,EAAKvwB,WAG/BuwB,EAAKvwB,SAAS8E,KAAK,QAASyrB,GAC5B,IAAK,IAAI9sB,KAAM8sB,EAAKptB,MAAO,CACvB,GAAqB,KAAjBM,EAAGt7B,WACHs7B,EAAGzD,SAAWC,OAAO,8CAClB,CAEH,GADAwD,EAAGzD,SAAWC,OAAO,QAAUwD,EAAGt7B,WAAa,UAChC,MAAXs7B,EAAGE,KAAc,CACjB,IAAII,EAAQ9D,OAAO,YAAcwD,EAAGE,KAAO,8CAC3CI,EAAM9W,GAAG,aAAciT,IACnBA,EAAMsB,kBACNmB,YAAW,KACP4tB,EAAKvwB,SAAS0C,MAAM,GACrB,IAAI,IAEXqB,EAAME,OAAOR,EAAGzD,UAChByD,EAAGzD,SAAW+D,C,CAEA,MAAdN,EAAGI,SACH/hC,KAAKwuD,SAAS7sB,EAAGI,QAASvwB,EAAQ,GAEtCxR,KAAK0uD,sBAAsBD,EAAM9sB,GACpB,GAATnwB,GACAmwB,EAAGzD,SAASc,SAAS,kB,CAG7ByvB,EAAKvwB,SAASiE,OAAOR,EAAGzD,UACxByD,EAAGzD,SAAS8E,KAAK,QAASrB,E,CAG9B,IAAIlJ,EAAOz4B,KACXm+B,OAAOjmB,UAAUiT,GAAG,aAAa,KAC7B,IAAK,IAAI3nB,EAAI,EAAGA,EAAI,EAAGA,IACW,MAA1Bi1B,EAAK41B,eAAe7qD,KACpBi1B,EAAK41B,eAAe7qD,GAAGo9B,OACvBnI,EAAK41B,eAAe7qD,GAAK,MAGjCi1B,EAAK61B,yBAA0B,CAAK,GAG5C,CAEAI,sBAAsBD,EAAY9sB,GAC9B,IAAIlJ,EAAOz4B,KAEM,MAAb2hC,EAAGlD,QACHkD,EAAGzD,SAAS/S,GAAG,aAAc4V,IAASY,EAAGlD,OAAOkD,EAAGt7B,WAAW,IAGhD,MAAds7B,EAAGI,SACHJ,EAAGzD,SAAS/S,GAAG,aAAc4V,IACzBtI,EAAKk2B,YAAYhtB,GACjBlJ,EAAK61B,yBAA0B,EAC/BvtB,EAAGrB,iBAAiB,IAGxBiC,EAAGzD,SAAS/S,GAAG,sBAAsB,KAC7BsN,EAAK61B,wBACL71B,EAAKk2B,YAAYhtB,GAE0B,MAAvClJ,EAAK41B,eAAeI,EAAKj9C,MAAQ,KACjCinB,EAAK41B,eAAeI,EAAKj9C,MAAQ,GAAGovB,OACpCnI,EAAK41B,eAAeI,EAAKj9C,MAAQ,GAAK,K,KAKlDmwB,EAAGzD,SAAS/S,GAAG,sBAAsB,KACU,MAAvCsN,EAAK41B,eAAeI,EAAKj9C,MAAQ,KACjCinB,EAAK41B,eAAeI,EAAKj9C,MAAQ,GAAGovB,OACpCnI,EAAK41B,eAAeI,EAAKj9C,MAAQ,GAAK,K,GAKtD,CAEAm9C,YAAYhtB,GAER,IAEI9V,EACAqW,EAHAH,EAAUJ,EAAGI,QAII,GAAjBA,EAAQvwB,OACRqa,EAAO8V,EAAGzD,SAASvtB,WAAWkb,KAC9BqW,EAAM,KAENrW,EAAO8V,EAAGzD,SAAS5T,SAASuB,KAAO8V,EAAGzD,SAASoC,QAC/C4B,EAAMP,EAAGzD,SAAS5T,SAAS4X,KAG/BH,EAAQ7D,SAASmC,IAAI,CACjB6B,IAAUA,EAAM,KAChBrW,KAAWA,EAAO,OAGoB,MAAtC7rB,KAAKquD,eAAetsB,EAAQvwB,QAC5BxR,KAAKquD,eAAetsB,EAAQvwB,OAAOovB,OAGvCmB,EAAQ7D,SAASgD,OACjBlhC,KAAKquD,eAAetsB,EAAQvwB,OAASuwB,EAAQ7D,QACjD,ECjQG,MAAM0wB,GA4BT/qD,YAAoBgrD,EAA8BjtB,EAAyBktB,EAC/DC,EAAgCC,EAChCC,EAAkCC,EAAmCC,EACrEpsC,EAA0DqsC,EAA6BC,GAH/E,KAAAR,UAAAA,EAA8B,KAAAjtB,QAAAA,EAAyB,KAAAktB,WAAAA,EAC/D,KAAAC,eAAAA,EAAgC,KAAAC,eAAAA,EAChC,KAAAC,iBAAAA,EAAkC,KAAAC,iBAAAA,EAAmC,KAAAC,YAAAA,EACrE,KAAApsC,KAAAA,EAA0D,KAAAqsC,WAAAA,EAA6B,KAAAC,gBAAAA,EA7BnG,KAAAjiC,SAA+B,GAQ/B,KAAAkiC,kBAA4B,EAuBxBT,EAAUU,SAASvvD,MAEnB,IAAIigC,EAAeC,OAAOC,aAAe,UAAY,QAErD,GAAIgvB,EAAa,CACb,IAAI12B,EAAOz4B,KACXA,KAAKwvD,iBAAmBrxB,OAAO,mIAE/Bn+B,KAAKwvD,iBAAiBrkC,GAAG8U,EAAe,QAAS9rB,IAC7CA,EAAEurB,kBACFvrB,EAAEwrB,iBAIF3/B,KAAKyvD,UAAU,eAFW,IAEiBC,IACvC1vD,KAAK2vD,kBAAkBD,GAAY,KAC/B1vD,KAAK0vC,eACLggB,EAAW5d,eAAe,GAAG8d,iBAC7BvsB,GAAqBqsB,EAAW5d,eAAeje,KAAK,gBAAiB,mBAAoB,CAAC,EAAG,IAAK,GAAI,IAAK,GAC7G,GACJ,IAIN7zB,KAAK4hD,UAAU5hD,KAAKwvD,kBAGpB,IAAIK,EAAqB1xB,OAAO,wHAEhC0xB,EAAmB1kC,GAAG8U,EAAe,QAAS9rB,IAC1CA,EAAEurB,kBACFvrB,EAAEwrB,iBAEFlH,EAAKq3B,aAAa,IAItB9vD,KAAK4hD,UAAUiO,E,CAKvB,CAEAC,cACI,IAAK,IAAIx6B,KAAWt1B,KAAKotB,SACjBkI,EAAQya,UACJza,EAAQwc,eAAeyb,SAAS,iBAChCj4B,EAAQwc,eAAe7S,YAAY,eACnC3J,EAAQwc,eAAe9S,SAAS,iBAGpC1J,EAAQyC,KAAKx0B,OAAS,GACtB+xB,EAAQwc,eAAeie,QAAQ,IAG3C,CAEA9uB,SACIjhC,KAAKgwD,gBAAgB/uB,SACrBjhC,KAAKiwD,aAAahvB,QACtB,CAEAivB,SAASC,GACLnwD,KAAKmwD,MAAQA,EACTnwD,KAAKmwD,OACLnwD,KAAKowD,OACLpwD,KAAKgwD,gBAAgBhxB,SAAS,aAE9Bh/B,KAAKgwD,gBAAgB/wB,YAAY,WAGzC,CAaAoxB,gBAAgB3T,GACW,MAAnB18C,KAAKswD,aACD5T,EACA18C,KAAKswD,WAAWpvB,OAEhBlhC,KAAKswD,WAAW1vB,OAG5B,CAEA2vB,2BACI,IAAIC,EAAsB,GACtBC,EAAkBzwD,KAAK0wD,qBAK3B,OAJuB,MAAnBD,IACAD,EAAYC,EAAgB14B,KAAKjzB,MAAM,GACnC2rD,EAAgB1gB,UAAUygB,EAAUxtD,KAAKytD,EAAgB3sD,OAE1D0sD,CACX,CAEAG,gBAAgBC,EAAeC,EAAiBC,EAAoBC,EAAeC,EAAiBC,IAEhGJ,EAAQA,EAAM/rD,SACR9B,KAAK4tD,GACXA,EAAQ,IAERI,EAAQA,EAAMlsD,SACR9B,KAAK+tD,GACXA,EAAQ,GAER,IAAIvtD,EAAI,EACR,KAAOA,EAAIqtD,EAAMttD,QAAUC,EAAIwtD,EAAMztD,QAAQ,CACzC,IAAI2tD,EAAML,EAAMrtD,GAAG2tD,cAAcH,EAAMxtD,IACvC,GAAW,GAAP0tD,EAAU,OAAOA,EACrB1tD,G,CAGJ,OAAIqtD,EAAMttD,OAASytD,EAAMztD,QAAgB,EACrCstD,EAAMttD,OAASytD,EAAMztD,OAAe,EAEjCqtD,EAAMO,cAAcJ,EAY/B,CAGAK,gBAAgBttD,EAAci0B,EAAgBgY,GAE1C,IAAK,IAAIvsC,EAAI,EAAGA,EAAIxD,KAAKotB,SAAS7pB,OAAQC,IAAK,CAC3C,IAAI8xB,EAAUt1B,KAAKotB,SAAS5pB,GAE5B,GAAIxD,KAAK2wD,gBAAgB7sD,EAAMi0B,EAAMgY,EAAUza,EAAQxxB,KAAMwxB,EAAQyC,KAAMzC,EAAQya,UAAY,EAAG,OAAOvsC,C,CAG7G,OAAOxD,KAAKotB,SAAS7pB,MACzB,CAEA8tD,cAAc7yB,GACV,IAAI8yB,EAActxD,KAAKoxD,gBAAgB5yB,EAAG16B,KAAM06B,EAAGzG,KAAMyG,EAAGuR,UAE5D/vC,KAAKotB,SAAS1Y,OAAO48C,EAAa,EAAG9yB,GAErC,IAAI+yB,EAAYvxD,KAAKiwD,aAAap8B,KAAK,YAEvC,GAAmB,GAAfy9B,EACAtxD,KAAKiwD,aAAauB,QAAQhzB,EAAGsT,qBAC1B,GAAGwf,GAAeC,EAAUhuD,OAC/BvD,KAAKiwD,aAAa9tB,OAAO3D,EAAGsT,oBACzB,CACH,IAAI2f,EAAiBF,EAAUl4C,IAAIi4C,GACnCnzB,OAAOszB,GAAgBC,OAAOlzB,EAAGsT,e,CAGzC,CAEA2d,UAAU3rD,EAAci0B,EAAgBiK,GAEpC,IAAIxD,EAAuB,CACvB16B,KAAMA,EACNisC,UAAU,EACVhY,KAAMA,GAGNmG,EAAWl+B,KAAK2xD,cAAcnzB,GAAI,GAEtCx+B,KAAKqxD,cAAc7yB,GAEnBN,EAAS,GAAG0xB,iBAEZ5vD,KAAK4xD,cAAcpzB,GAAI,KAEnBwD,EAASxD,EAAG,GAIpB,CAGAqzB,wBAAwBC,GACpB,IAAIr5B,EAAOz4B,KAKX,GAHAA,KAAKgwD,gBAAkB7xB,OAAO,sFACEn+B,KAAK4hC,QAAU,8CAEpB,MAAvB5hC,KAAK+uD,eAAwB,CAC7B/uD,KAAKswD,WAAanyB,OAAO,mCAAqCn+B,KAAK+uD,eAAiB,YAAc/uD,KAAKgvD,eAAiB,MACxHhvD,KAAKgwD,gBAAgBn8B,KAAK,eAAesO,OAAOniC,KAAKswD,YAErD,IAAIrwB,EAAeC,OAAOC,aAAe,UAAY,QACrDngC,KAAKswD,WAAWnlC,GAAG8U,EAAe,QAASc,IAEvCyX,GAAOM,QACP/X,EAAGrB,kBAEH,IAAI3H,EAAOU,EAAK83B,2BAEZ/xB,EAAuB,CACvB16B,KAAM,MACNisC,UAAU,EACVhY,KAAMA,GAGNu5B,EAActxD,KAAKoxD,gBAAgB,GAAIr5B,GAAM,GACjD/3B,KAAKotB,SAAS1Y,OAAO48C,EAAa,EAAG9yB,GACrC,IAAIN,EAAWl+B,KAAK2xD,cAAcnzB,GAAI,GAGtC,GAAmB,GAAf8yB,EACAtxD,KAAKiwD,aAAauB,QAAQtzB,OACvB,CACH,IAAIuzB,EAAiBzxD,KAAKiwD,aAAap8B,KAAK,YAAYxa,IAAIi4C,EAAc,GAC1EnzB,OAAOszB,GAAgB9wB,MAAMzC,E,CAGjCA,EAAS,GAAG0xB,iBAEZn3B,EAAKm5B,cAAcpzB,GAAI,KAEnB/F,EAAKs5B,wBAAwBvzB,GAAKyR,IAE9BzR,EAAGyR,gBAAkBA,EAEK,MAAtBzR,EAAGwzB,iBACHxzB,EAAGwzB,gBAAgBC,YAAY/zB,GAGR,MAAvBzF,EAAKy5B,gBAAwBz5B,EAAKvQ,OAAOsW,EAAGyR,gBAAgB,GAElE,GAEJ,G,CAMV,IAAIkiB,EAAah0B,OAAO,kFAClBn+B,KAAK8uD,WAAa,uBAAyB9uD,KAAK8uD,WAAa,YACnE9uD,KAAKiwD,aAAe9xB,OAAO,mCAE3Bg0B,EAAWhwB,OAAOniC,KAAKiwD,cAEvB6B,EAAc3vB,OAAOniC,KAAKgwD,iBAC1B8B,EAAc3vB,OAAOgwB,GAErB,IAAIC,EAAMpyD,KAAKgwD,gBACXqC,EAAMryD,KAAKiwD,aAAa5gC,SACxB4Q,EAAeC,OAAOC,aAAe,UAAY,QAErDiyB,EAAIjnC,GAAG8U,EAAe,QAASc,IAC3B,GAAiB,GAAbA,EAAGpC,SAIF3+B,KAAKmwD,MAAO,CACb,IAAImC,EAAaD,EAAIrvB,KAAK,QACtBovB,EAAI7E,SAAS,eACT90B,EAAKo2B,UAAU0D,MAAMhvD,OAAS,GAC9B8uD,EAAI3uB,QAAQ,CACR,YAAa,MACd,KAAM,KAAQ0uB,EAAII,YAAY,cAAc,KAGnDJ,EAAII,YAAY,eAChBH,EAAI3uB,QAAQ,CACR,YAAa4uB,GACd,K,KAKfF,EAAIjnC,GAAG,YAAaiT,IACZwwB,GAAe6D,6BAA+Bh6B,EAAK1V,OACnDqvC,EAAIpzB,SAAS,oBACbZ,EAAMuB,iB,IAIdyyB,EAAIjnC,GAAG,aAAciT,IACjBg0B,EAAInzB,YAAY,mBAAmB,IAGvCmzB,EAAIjnC,GAAG,QAASiT,IACZ,GAAIwwB,GAAe6D,6BAA+Bh6B,EAAK1V,KAAM,CACzDqb,EAAMuB,iBACNyyB,EAAInzB,YAAY,oBAChB,IAAIyzB,EAAW9D,GAAe+D,wBACd,MAAZD,GACAj6B,EAAKm6B,YAAYF,EAAU,K,IAO3C,CAEAtC,OACI,IAAIiC,EAAMryD,KAAKiwD,aAAa5gC,SACxBijC,EAAaD,EAAIrvB,KAAK,QAC1BqvB,EAAIhyB,IAAI,YAAaiyB,GACrBtyD,KAAKgwD,gBAAgBhxB,SAAS,cAClC,CAEAmR,WAAW7a,EAA2Bu9B,GAIlCv9B,EAAQwc,eAAiB9xC,KAAK2xD,cAAcr8B,EAASu9B,GACrD7yD,KAAKqxD,cAAc/7B,EACvB,CAEAoa,eACQ1vC,KAAKsvD,mBACTtvD,KAAKotB,SAASkP,MAAK,CAAC7qB,EAAGkpB,KACnB,IAAIm4B,EAAQrhD,EAAEshD,SAAWthD,EAAEshD,SAAWthD,EAAE3N,KACpCkvD,EAAQr4B,EAAEo4B,SAAWp4B,EAAEo4B,SAAWp4B,EAAE72B,KAExC,OAAO9D,KAAK2wD,gBAAgBmC,EAAOrhD,EAAEsmB,KAAMtmB,EAAEs+B,SAAUijB,EAAOr4B,EAAE5C,KAAM4C,EAAEoV,SAAS,IAGrF/vC,KAAKotB,SAAS7sB,SAAS+0B,IAAct1B,KAAKiwD,aAAa9tB,OAAO7M,EAAQwc,eAAe,IACzF,CAEAmhB,qBAAqB39B,EAA2BnkB,EAAc+hD,GAC1D,GAAc,MAAX59B,EAAiB,OACpB,IAAI69B,EAAO79B,EAAQwc,eAAeje,KAAK,qBACvCs/B,EAAKn0B,SAASk0B,GACdC,EAAKta,KAAK1nC,EACd,CAEAywC,UAAU1jB,GACNl+B,KAAKgwD,gBAAgBn8B,KAAK,eAAe29B,QAAQtzB,EACrD,CAEAyzB,cAAcr8B,EAA2Bu9B,GAErC,IAAI5yB,EAAeC,OAAOC,aAAe,UAAY,QACjD1H,EAAOz4B,KAEPozD,EAAoB,GAEC,MAArB99B,EAAQ4a,YAAmB5a,EAAQ4a,UAAYlwC,KAAKivD,kBACpD35B,EAAQya,WACRza,EAAQ4a,UAAY,SACpBkjB,EAAoBP,EAAW,eAAiB,iBAGpD,IAAIQ,EAAW,GACK,MAAhB/9B,EAAQyC,OAAczC,EAAQyC,KAAO,IACzC,IAAK,IAAIv0B,EAAI,EAAGA,EAAI8xB,EAAQyC,KAAKx0B,OAAQC,IACrC6vD,GAAY,oCAiBhB,GAdA/9B,EAAQwc,eAAiB3T,OAAO,0BAA0B7I,EAAQ4a,aAAakjB,4CACjDC,6FAEAliC,GAAWmE,EAAQxxB,wIAG5C9D,KAAKkvD,iBAAmB,+DAA2G,kBAClI9rB,GAAoG,GAAjF,sGAGpByvB,GAAYv9B,EAAQyC,KAAKx0B,OAAS,GACnC+xB,EAAQwc,eAAelR,OAGU,MAAjC5gC,KAAKszD,yBAAkC,CACvC,IAAIC,EAAiBvzD,KAAKszD,yBAAyBh+B,GACnDA,EAAQwc,eAAe3P,OAAOoxB,E,CA8BlC,GA3BIvzD,KAAKmvD,aACD75B,EAAQya,WACRza,EAAQwc,eAAe3mB,GAAG,YAAaiT,IAC/BwwB,GAAe6D,6BAA+Bh6B,EAAK1V,OACnDuS,EAAQwc,eAAe9S,SAAS,oBAChCZ,EAAMuB,iB,IAIdrK,EAAQwc,eAAe3mB,GAAG,aAAciT,IACpC9I,EAAQwc,eAAe7S,YAAY,mBAAmB,IAG1D3J,EAAQwc,eAAe3mB,GAAG,QAASiT,IAC/B,GAAIwwB,GAAe6D,6BAA+Bh6B,EAAK1V,KAAM,CACzDqb,EAAMuB,iBACNrK,EAAQwc,eAAe7S,YAAY,oBACnC,IAAIyzB,EAAW9D,GAAe+D,wBAC9B/D,GAAe+D,wBAA0B,KACzB,MAAZD,GACAj6B,EAAKm6B,YAAYF,EAAUp9B,E,MAO3Ct1B,KAAKmvD,aAAenvD,KAAKovD,WAAY,CACrC,IAAIoE,EAAgBl+B,EAAQwc,eAAeje,KAAK,gBAChD2/B,EAAc30B,KAAK,YAAa,QAChC20B,EAAcroC,GAAG,aAAciT,IAC3BwwB,GAAe+D,wBAA0Br9B,EACzCs5B,GAAe6D,4BAA8Bh6B,EAAK1V,KAClDqb,EAAM6uB,cAAcC,aAAauG,cAAgBn+B,EAAQya,SAAW,OAAS,UAAU,G,CAInE,MAAxB/vC,KAAKqvD,iBAA2BrvD,KAAKqvD,gBAAgB9rD,OAAS,IACzD+xB,EAAQya,WACTza,EAAQwc,eAAe3mB,GAAG,YAAaiT,IAC/Bp+B,KAAKqvD,gBAAgB7+C,QAAQo+C,GAAe6D,8BAAgC,IAC5En9B,EAAQwc,eAAe9S,SAAS,oBAE5BZ,EAAMiB,QACNjB,EAAM6uB,cAAcC,aAAaC,WAAa,OAE9C/uB,EAAM6uB,cAAcC,aAAaC,WAAa,OAGlD/uB,EAAMuB,iB,IAIdrK,EAAQwc,eAAe3mB,GAAG,aAAciT,IACpC9I,EAAQwc,eAAe7S,YAAY,mBAAmB,IAG1D3J,EAAQwc,eAAe3mB,GAAG,QAASiT,IAC/B,GAAIp+B,KAAKqvD,gBAAgB7+C,QAAQo+C,GAAe6D,8BAAgC,EAAG,CAC/Er0B,EAAMuB,iBACNrK,EAAQwc,eAAe7S,YAAY,oBAEnC,IAAIyzB,EAAW9D,GAAe+D,wBAC9B/D,GAAe+D,wBAA0B,KACzB,MAAZD,GACgC,MAA5Bj6B,EAAKi7B,qBAA6Bj7B,EAAKi7B,oBAAoBp+B,EAASo9B,EAAUt0B,EAAMiB,QAAU,OAAS,O,OAQ/H/J,EAAQwc,eAAe3mB,GAAG8U,EAAe,MAAOc,IAE5C,GAAiB,GAAbA,EAAGpC,QAAsC,MAAvBlG,EAAKy5B,eAAwB,CAC/Cz5B,EAAKy5B,eAAe58B,EAAQ2a,iBAE5B,IAAK,IAAIzR,KAAM/F,EAAKrL,SACZoR,GAAMlJ,GAAWkJ,EAAGsT,eAAeyb,SAAS,cAC5C/uB,EAAGsT,eAAe7S,YAAY,aAMtC,GAFA3J,EAAQwc,eAAe9S,SAAS,aAE5B1J,EAAQya,SAAU,CAEdza,EAAQwc,eAAeyb,SAAS,gBAChCj4B,EAAQwc,eAAe7S,YAAY,eACnC3J,EAAQwc,eAAe9S,SAAS,kBAEhC1J,EAAQwc,eAAe9S,SAAS,eAChC1J,EAAQwc,eAAe7S,YAAY,iBAGvC,IAAI00B,EAA+C,CAAC,EACpD,IAAK,IAAIx/C,KAAKnU,KAAKotB,SACf,GAAIjZ,EAAE47B,SAAU,CACZ,IAAIhY,EAAO5jB,EAAE4jB,KAAK3c,KAAK,KACX,IAAR2c,IAAYA,GAAQ,KACxBA,GAAQ5jB,EAAErQ,KACV6vD,EAAgB57B,GAAQ5jB,EAAE29B,eAAeyb,SAAS,gBAC9CoG,EAAgBx/C,EAAE4jB,KAAK3c,KAAK,QAAOu4C,EAAgB57B,IAAQ,E,CAGvE47B,EAAgB,KAAM,EAEtB,IAAK,IAAIx/C,KAAKnU,KAAKotB,SACXumC,EAAgBx/C,EAAE4jB,KAAK3c,KAAK,MAC5BjH,EAAE29B,eAAeie,QAAQ,KAEzB57C,EAAE29B,eAAe8hB,UAAU,I,MAU/C,IA6EIC,EA7EAC,EAAqB,SAAU11B,GAE/B,IAAI21B,EAAsC,GA2C1C,GA1C2B,MAAvBt7B,EAAKu7B,gBACLD,EAAiB/wD,KAAK,CAClB4+B,QAAS,aACTI,SAAU,KACNvJ,EAAKm5B,cAAct8B,EAAQ,IAKpB4K,OAAOC,aAEtB7K,EAAQya,WACRgkB,EAAmBA,EAAiBr6C,OAAO,CACvC,CACIkoB,QAAS,yCAA2CtM,EAAQxxB,KAAO,QACnEk+B,SAAU,KACNvJ,EAAKvQ,OAAOoN,EAAQ2a,iBAEpB,IAAIugB,EAAY/3B,EAAK83B,2BAErB93B,EAAKg3B,UAAU,eAAgBe,GAAYd,IACvCj3B,EAAKk3B,kBAAkBD,GAAY,KAC/Bj3B,EAAKiX,eACLggB,EAAW5d,eAAe,GAAG8d,iBAC7BvsB,GAAqBqsB,EAAW5d,eAAeje,KAAK,gBAAiB,mBAAoB,CAAC,EAAG,IAAK,GAAI,IAAK,GAC7G,GACJ,GAGP,CACC+N,QAAS,oBACTI,SAAU,KACNvJ,EAAKvQ,OAAOoN,EAAQ2a,iBAEpBxX,EAAKw7B,2BAA2B3+B,EAAQyC,KAAKre,OAAO4b,EAAQxxB,MAAM,MAQlD,MAA5B20B,EAAKy7B,sBAAgC5+B,EAAQya,SAE7C,IAAK,IAAIokB,KAAO17B,EAAKy7B,oBAAoB5+B,GACrCy+B,EAAiB/wD,KAAK,CAClB4+B,QAASuyB,EAAIvyB,QACbI,SAAU,KACNmyB,EAAInyB,SAAS1M,EAAQ,EAEzBkL,MAAO2zB,EAAI3zB,MACXuB,QAAwB,MAAfoyB,EAAIpyB,QAAkB,KAAOoyB,EAAIpyB,QAAQ5nB,KAAKwnB,IAC5C,CACHC,QAASD,EAAGC,QACZI,SAAU,KACNL,EAAGK,SAAS1M,EAAQ,EAExBkL,MAAOmB,EAAGnB,YAO1BuzB,EAAiBxwD,OAAS,IAC1B66B,EAAMuB,iBACNvB,EAAMsB,kBACN0B,GAAgB2yB,EAAkB31B,EAAMg2B,MAAOh2B,EAAMi2B,OAE7D,EAyEA,OAvEA/+B,EAAQwc,eAAe,GAAGE,iBAAiB,cAAe8hB,GAAoB,GAIzE1wB,IACD9N,EAAQwc,eAAe3mB,GAAG,aAAa,KACnCmpC,aAAaT,IACN,KACR1oC,GAAG,eAAgBiT,IAClBy1B,EAAa3zB,OAAOW,YAAW,KAC3BizB,EAAmB11B,EAAM,GAC1B,MACI,KAIVgF,KACD9N,EAAQwc,eAAeje,KAAK,uBAAuB1I,GAAG,eAAgBhX,IAClE2/C,EAAmB3/C,EAAE,IAEzBmhB,EAAQwc,eAAeje,KAAK,uBAAuB1I,GAAG,mBAAoBhX,IACtEA,EAAEwrB,iBACFxrB,EAAEurB,iBAAiB,KAIvBjH,EAAKy2B,mBAEL55B,EAAQwc,eAAeje,KAAK,cAAc,GAAGme,iBAAiB,eAAgB5T,IAC1EA,EAAMuB,iBACNvB,EAAMsB,iBAAiB,IACxB,GAEHpK,EAAQwc,eAAeje,KAAK,cAAc1I,GAAG8U,EAAe,MAAOc,IAC/DA,EAAGpB,iBACHyB,GAAgB,CAAC,CACbQ,QAAS,YACTI,SAAU,QAGX,CACCJ,QAAS,+BACTpB,MAAO,UACPwB,SAAU,KAEF1M,EAAQya,UACJtX,EAAK87B,iBAAiBj/B,GAAS/xB,OAAS,EACxCkmC,MAAM,mEAKdhR,EAAK+7B,eAAel/B,EAAQ2a,iBAAiB,KACzC3a,EAAQwc,eAAe7Q,SACQ,MAA3B3L,EAAQ08B,iBAAyB18B,EAAQ08B,gBAAgB/wB,SAC7DxI,EAAKrL,SAAS1Y,OAAO+jB,EAAKrL,SAAS5c,QAAQ8kB,GAAU,GAE1B,MAAvBmD,EAAKy5B,iBACDz5B,EAAKrL,SAAS7pB,OAAS,EACvBk1B,EAAKvQ,OAAOuQ,EAAKrL,SAAS,GAAG6iB,iBAE7BxX,EAAKvQ,OAAO,M,GAGtB,IAEN6Y,EAAGqzB,MAAQ,EAAGrzB,EAAGszB,MAAQ,GAC7BtzB,EAAGrB,iBAAiB,KAIrBpK,EAAQwc,cAEnB,CAEA8gB,YAAY6B,EAAiCC,GACzC,IAAIC,EAAiD,MAArBD,EAA4B,GAAKA,EAAkB38B,KAAKjzB,MAAM,GAAG4U,OAAO,CAACg7C,EAAkB5wD,OAC3H,GAAI2wD,EAAc1kB,SAAU,CACxB,IAAI6kB,EAAoC,CAACH,GAErCI,EAAaJ,EAAc18B,KAAKre,OAAO,CAAC+6C,EAAc3wD,OAAOsX,KAAK,KAEtE,GAAoD,GAAjDu5C,EAAgBv5C,KAAK,KAAK5K,QAAQqkD,GAAkB,OAEvD,IAAIC,EAAgBL,EAAc18B,KAAKx0B,OACvCkxD,EAAc18B,KAAO48B,EAAgB7vD,MAAM,GAE3C,IAAK,IAAIwwB,KAAWt1B,KAAKotB,SACjBkI,EAAQyC,KAAK3c,KAAK,KAAK0sB,WAAW+sB,KAClCv/B,EAAQyC,KAAKrjB,OAAO,EAAGogD,GACvBx/B,EAAQyC,KAAO48B,EAAgBj7C,OAAO4b,EAAQyC,MAC9C68B,EAAc5xD,KAAKsyB,IAI3B,IAAK,IAAIwG,KAAM84B,EACX94B,EAAGgW,eAAe7Q,SAClBjhC,KAAKotB,SAAS1Y,OAAO1U,KAAKotB,SAAS5c,QAAQsrB,GAAK,GAEpD,IAAK,IAAIA,KAAM84B,EACX50D,KAAK2xD,cAAc71B,GAAI,GACvB97B,KAAKqxD,cAAcv1B,GAGvB97B,KAAK+0D,aAAaH,E,MAElBH,EAAc18B,KAAO48B,EACrBF,EAAc3iB,eAAe7Q,SAC7BjhC,KAAKotB,SAAS1Y,OAAO1U,KAAKotB,SAAS5c,QAAQikD,GAAgB,GAC3Dz0D,KAAK2xD,cAAc8C,GAAe,GAClCz0D,KAAKqxD,cAAcoD,GACnBz0D,KAAKkoB,OAAOusC,EAAcxkB,iBAC1BwkB,EAAc3iB,eAAe,GAAG8d,iBAChC5vD,KAAK+0D,aAAaN,EAE1B,CAEAF,iBAAiBS,GACb,IAAIj9B,EAAOi9B,EAAOj9B,KAAKjzB,MAAM,GAAG4U,OAAOs7C,EAAOlxD,MAAMsX,KAAK,KACzD,OAAOpb,KAAKotB,SAASiD,QAAQiF,GAAYA,EAAQyC,KAAK3c,KAAK,KAAK0sB,WAAW/P,IAC/E,CAEA65B,cAAct8B,EAA2B0M,GACrC,IAAIvJ,EAAOz4B,KACPmzD,EAAO79B,EAAQwc,eAAeje,KAAK,gBACnCohC,EAAW3/B,EAAQxxB,KAAK0M,QAAQ,KAChCymC,EAAwB,MAAZge,EAAmB,KAAO,CAAE1iC,MAAO,EAAGmO,IAAKu0B,GAC3Dj1D,KAAKsvD,kBAAmB,EACxB1vB,GAAauzB,EAAMA,GAAO+B,IACS,MAA3B5/B,EAAQ2a,kBAAyBilB,EAAUz8B,EAAKu7B,eAAe1+B,EAAQ2a,gBAAiBilB,IAC5F5/B,EAAQxxB,KAAOoxD,EACf/B,EAAKta,KAAKvjB,EAAQxxB,MACF,MAAZk+B,GAAkBA,IACtBvJ,EAAKiX,eACLyjB,EAAK,GAAGvD,iBACR5vD,KAAKsvD,kBAAmB,CAAK,GAC9BrY,EACP,CAEA/uB,OAAO+nB,EAAsBklB,GAA0B,EAAMvF,GAA0B,GAEnF,GAAuB,MAAnB3f,EACA,IAAK,IAAImlB,KAAOp1D,KAAKotB,SACbgoC,EAAItjB,eAAeyb,SAAS,cAAc6H,EAAItjB,eAAe7S,YAAY,iBAE9E,CACH,IAAIT,EAAKx+B,KAAKq1D,YAAYplB,GAE1B,GAAU,MAANzR,EAAY,CACZ,IAAK,IAAI42B,KAAOp1D,KAAKotB,SACbgoC,EAAItjB,eAAeyb,SAAS,cAAc6H,EAAItjB,eAAe7S,YAAY,aAIjF,GADAT,EAAGsT,eAAe9S,SAAS,aACvB4wB,EAAgB,CAChB,IAAI0F,EAAa92B,EAAGzG,KAAK3c,KAAK,KAC9B,IAAK,IAAI0gB,KAAM97B,KAAKotB,SAAU,CAC1B,IAAImoC,EAASz5B,EAAG/D,KAAKjzB,MAAM,GACvBwwD,EAAWxtB,WAAWytB,EAAOn6C,KAAK,QAC9B0gB,EAAGiU,WACHwlB,EAAOvyD,KAAK84B,EAAGh4B,MACXwxD,EAAWxtB,WAAWytB,EAAOn6C,KAAK,QAClC0gB,EAAGgW,eAAe7S,YAAY,gBAC9BnD,EAAGgW,eAAe9S,SAAS,iBAGnClD,EAAGgW,eAAe5Q,O,CAK1B1C,EAAGsT,eAAe,GAAG8d,gB,GAM7BuF,GAAyC,MAAvBn1D,KAAKkyD,gBAAwBlyD,KAAKkyD,eAAejiB,EAE3E,CAEAulB,cAAch3B,GACV,IAAIi3B,EAAaj3B,EAAGzG,KAAK3c,KAAK,KAK9B,OAJIojB,EAAGuR,WACO,IAAN0lB,IAAUA,GAAM,KACpBA,GAAMj3B,EAAG16B,MAEN2xD,CACX,CAEAC,gBAAgBpgC,EAA2B4a,G,MACxB,MAAX5a,IACsB,QAAtB,EAAAA,EAAQwc,sBAAc,SAAE7S,YAAY,MAAQ3J,EAAQ4a,WAAWlR,SAAS,MAAQkR,GAChF5a,EAAQ4a,UAAYA,EAG5B,CAEAmlB,YAAYplB,GACR,IAAK,IAAIzR,KAAMx+B,KAAKotB,SAChB,GAAIoR,EAAGyR,iBAAmBA,EACtB,OAAOzR,EAIf,OAAO,IAEX,CAEA4Q,cAAca,GACV,IAAK,IAAIzR,KAAMx+B,KAAKotB,SAChB,GAAIoR,EAAGyR,iBAAmBA,EAYtB,OAXAzR,EAAGsT,eAAe7Q,SACQ,MAAtBzC,EAAGwzB,iBAAyBxzB,EAAGwzB,gBAAgB/wB,SACnDjhC,KAAKotB,SAAS1Y,OAAO1U,KAAKotB,SAAS5c,QAAQguB,GAAK,QAErB,MAAvBx+B,KAAKkyD,iBACDlyD,KAAKotB,SAAS7pB,OAAS,EACvBvD,KAAKkoB,OAAOloB,KAAKotB,SAAS,GAAG6iB,iBAE7BjwC,KAAKkoB,OAAO,OAMhC,CAEAyO,QACI32B,KAAKiwD,aAAa5e,QAClBrxC,KAAKotB,SAAW,EACpB,CAEAuoC,WAAWxkD,GACPnR,KAAKgwD,gBAAgBn8B,KAAK,mBAAmBglB,KAAK1nC,EACtD,CAEAu/C,qBACI,IAAK,IAAIlyB,KAAMx+B,KAAKotB,SAChB,GAAIoR,EAAGsT,eAAeyb,SAAS,aAC3B,OAAO/uB,EAGf,OAAO,IACX,EAKG,MAAMo3B,GAKT/xD,YAAmBic,EAAgB+1C,GAAhB,KAAA/1C,KAAAA,EAHnB,KAAAyyC,MAA0B,GAItBvyD,KAAK61D,MAAQA,EACbA,EAAM72B,SAAS,oBACnB,CAEAuwB,SAASuG,GACLA,EAAMjE,wBAAwB7xD,KAAK61D,OACnC71D,KAAKuyD,MAAMvvD,KAAK8yD,EACpB,ECj4BG,MAAMC,GAMTlyD,YAAoBmyD,EAA8Bz6B,EAA8Bzb,GAA5D,KAAAk2C,QAAAA,EAA8B,KAAAz6B,UAAAA,EAA8B,KAAAzb,KAAAA,EAFhF,KAAAm2C,aAAuB,EAGnBj2D,KAAKsT,MACT,CAEQA,OACJtT,KAAKywC,QAAUtS,OAAO,WACtBA,OAAO,SAASkC,IAAI,aAAc,UAClCrgC,KAAKywC,QAAQtO,OAAOhE,OAChB,yOAE2Fn+B,KAAKu7B,UAAUz3B,8iBAa9G,IAAIoyD,EAAe/3B,OAAO,uBACtB1F,EAAOz4B,KAEX,IAAI,IAAIkjC,KAASljC,KAAKg2D,QAClB,IAAI,IAAIG,KAAWjzB,EAAMkzB,SAAS,CAC9B,IAAIC,EAAel4B,OAAO,oCACtBm4B,EAAgBn4B,OAAO,oCAAoC+E,EAAMp/B,cACjEyyD,EAAep4B,OAAO,mCAAmCg4B,EAAQK,WAAWL,EAAQM,sBACxFJ,EAAal0B,OAAOm0B,EAAeC,GACnCL,EAAa/zB,OAAOk0B,GACpBA,EAAalrC,GAAG,aAAa,KACzBkrC,EAAa7D,YAAY,aACxB/5B,EAAKw9B,cAAgBI,EAAa9I,SAAS,aAAe,GAAK,EAC/DpvB,OAAO,2BAA2BhtB,KAAK,GAAGsnB,EAAKw9B,yCAAyC,IAE7FI,EAAarzB,KAAK,UAAWmzB,GAC7BE,EAAarzB,KAAK,QAASE,E,CAInC/E,OAAO,0BAA0BhT,GAAG,SAAS,KACzC,IAAIqpB,EAAqBrW,OAAO,0BAA0B55B,MACzC,MAAdiwC,GAAoC,IAAdA,EACrBlP,EAAE,uBAAuBpE,OAEzBoE,EAAE,uBAAuByL,MAAK,CAACnsB,EAAO0Q,KAClC,IAAI4I,EAAWC,OAAO7I,GAClB4N,EAAkBhF,EAAS8E,KAAK,SAChCmzB,EAAoBj4B,EAAS8E,KAAK,YAC3BE,EAAMp/B,KAAO,IAAMqyD,EAAQK,QAAU,IAAML,EAAQM,cACtDjmD,QAAQgkC,IAAe,EAC3BtW,EAASgD,OAEThD,EAAS0C,M,OASzB5gC,KAAK02D,YAAc12D,KAAKywC,QAAQ5c,KAAK,gBACrC7zB,KAAKywC,QAAQpQ,IAAI,aAAc,WAE/BlC,OAAO,wBAAwBhT,GAAG,SAAS,KAAQsN,EAAKqgB,OAAO,IAC/D3a,OAAO,4BAA4BhT,GAAG,SAAS,KAAOsN,EAAKk+B,qBAAqB,GAEpF,CAEAA,sBAEI,IAAIhqB,EAAwB,GAC5BrH,EAAE,uBAAuByL,MAAK,CAACnsB,EAAO0Q,KAClC,IAAI4I,EAAWC,OAAO7I,GACtB,GAAG4I,EAASqvB,SAAS,aAAa,CAC9B,IAAI4I,EAAoBj4B,EAAS8E,KAAK,WACtC2J,EAAY3pC,KAAKmzD,EAAQl9B,G,KAIjCj5B,KAAK84C,QAEL94C,KAAK8f,KAAKsZ,eAAeqT,wBAAwBzsC,KAAKu7B,UAAW,KAAMoR,GAAcvrC,IACjF,GAAa,MAATA,EAAe,CACf,IAAIg4B,EAAiBp5B,KAAK8f,KAAKsZ,eAC3B9B,EAAK8B,EAAe4Q,yBAA2B5Q,EAAeuP,kBAClEc,MAAM,iBAAiBzpC,KAAKu7B,UAAUz3B,iBAAiB6oC,EAAYppC,uDAAuD+zB,kC,MAE1HmS,MAAMroC,E,GAIlB,CAGA03C,QACI94C,KAAKywC,QAAQpQ,IAAI,aAAc,UAC/BrgC,KAAKywC,QAAQY,QACblT,OAAO,SAASkC,IAAI,aAAc,UACtC,ECrGG,MAAMu2B,GAYT/yD,YAAoBic,EAAoB+2C,GAApB,KAAA/2C,KAAAA,EAAoB,KAAA+2C,oBAAAA,EAVxC,KAAAC,qBAA+B,KAE/B,KAAAC,yBAAqC,GA8jBrC,KAAAC,eAAyB,IApjBzB,CAEApd,UAEI55C,KAAK6uD,UAAY,IAAI+G,GAAU51D,KAAK8f,KAAM9f,KAAK62D,qBAE/C72D,KAAKi3D,oBAELj3D,KAAKk3D,wBAET,CAEAD,oBAEI,IAAIx+B,EAAOz4B,KAEXA,KAAKmvC,cAAgB,IAAIyf,GAAe5uD,KAAK6uD,UAAW,yBAA0B,IAC9E,oBAAqB,gBAAiB,QAAQ,GAAM,EAAO,QAAQ,EAAM,IAE7E7uD,KAAKmvC,cAAc4iB,wBAEf,CAAC/D,EAAkBmJ,KAEf,GAAkC,MAA9B1+B,EAAK3Y,KAAKuvB,iBAEV,OADA5F,MAAM,gDACC,KAGX,IAAIvO,EAAU,CACVp3B,KAAMkqD,EAAiBlqD,KACvB4yB,OAAO,EACPkC,OAAO,EACPznB,KAAM,GACN+nB,qBAAsB,KACtBkC,eAAgB,KAChBjC,+BAA+B,EAC/BkC,QAAS,EACT2U,aAAcge,GAEd5vC,EAAI,IAAIuZ,GAAOuD,EAAGzC,EAAK3Y,MACV2Y,EAAK3Y,KAAKuvB,iBAAiBnZ,YACjCgH,UAAU9e,GACrBqa,EAAK2+B,gBAAgBh5C,GACrBqa,EAAK3Y,KAAKsZ,eAAemT,eAAenuB,EAAGqa,EAAK3Y,KAAKuvB,iBAAkB5W,EAAK3Y,KAAKiZ,mBAC5E33B,IACgB,MAATA,EACA+1D,EAAuC/4C,GAEvCqrB,MAAM,mC,GAGZ,EAIdzpC,KAAKmvC,cAAc6kB,eACf,CAACnuD,EAAgBwxD,KACbA,EAAUA,EAAQziD,OAAO,EAAG,IAC5B,IAAI6hB,EAAO5wB,EAAO4wB,KAKlB,OAHAA,EAAK3yB,KAAOuzD,EACZ5gC,EAAKmC,OAAQ,EACbH,EAAK3Y,KAAKsZ,eAAeC,cAClBg+B,CAAO,EAGtBr3D,KAAKmvC,cAAcqlB,eACf,CAAC3uD,EAAgByxD,KACb7+B,EAAK3Y,KAAKsZ,eAAe4T,0BAA0B,OAAQnnC,EAAO4wB,KAAKwC,IAAK73B,IAC3D,MAATA,GACAq3B,EAAK3Y,KAAKuvB,iBAAiBnZ,YAAYwH,aAAa73B,GACpDyxD,KAEA7tB,MAAM,mC,GAGZ,EAGVzpC,KAAKmvC,cAAc+kB,oBAAuBlG,IAIhCv1B,EAAK3Y,KAAKkZ,KAAKu+B,YAAc9+B,EAAK3Y,KAAKkZ,KAAKmY,UAAY1Y,EAAK3Y,KAAKkZ,KAAKoY,gBAC5C4c,EAAiB/d,gBAC5BxZ,KAJoB,IAwC9Cz2B,KAAKmvC,cAAc+iB,eACdrsD,IACG4yB,EAAK2+B,gBAAgBvxD,EAAO,CAKxC,CAEA6zB,qBAAqBjD,G,QACjB,IAAIob,EAA+C,QAAlC,EAAkB,QAAlB,EAAApb,aAAI,EAAJA,EAAMuZ,oBAAY,eAAE8B,sBAAc,eAAEje,KAAK,gCAC1D,GAAkB,MAAdge,EAAoB,OAExBA,EAAWhe,KAAK,sBAAsBoN,SAEtC,IAAIiC,EAAgB,KAChB5jB,EAAgB,GAUpB,GAT2B,MAAvBmX,EAAK2E,iBACL8H,EAAQ,eACR5jB,EAAQ,oCAAsCmX,EAAK2E,eAC/C3E,EAAKyC,uBACLgK,EAAQ,yBACR5jB,EAAQ,yBAIH,MAAT4jB,EAAe,CACf,IAAIs0B,EAAqBr5B,OAAO,iCAAiC+E,aAAiB5jB,aAClFuyB,EAAW2f,QAAQgG,GACft0B,EAAM1yB,QAAQ,cAAgB,IAC9BgnD,EAAmBrsC,GAAG,aAAchX,GAAMA,EAAEurB,oBAC5C83B,EAAmBrsC,GAAG,SAAUhX,IAC5BA,EAAEurB,iBAAiB,I,CAMnC,CAIAw3B,yBAEI,IAAIz+B,EAAOz4B,KAEXA,KAAKyvC,mBAAqB,IAAImf,GAAe5uD,KAAK6uD,UAAW,cAAe,IACxE,KAAM,oBAAqB,aAAa,GAAM,EAAM,aAAa,EAAO,CAAC,SAE7E,IAAI4I,EAAsBt5B,OAAO,6IAG7B8B,EAAeC,OAAOC,aAAe,UAAY,QAErDs3B,EAAoBtsC,GAAG8U,EAAe,QAAS9rB,IAC3CA,EAAEurB,kBAEF,IAAI8G,EAAmB/N,EAAK3Y,KAAKkZ,KAAKC,GACH,MAA/BR,EAAK3Y,KAAKiZ,oBACVyN,EAAW/N,EAAK3Y,KAAKiZ,mBAGzB,IAAIyzB,GAAkB/zB,EAAK3Y,KAAM0mB,EAAUxmC,KAAKyvC,mBAAmB8gB,2BAA2B,IAIlGvwD,KAAKyvC,mBAAmBmS,UAAU6V,GACO,MAAtCz3D,KAAKyvC,mBAAmB6gB,YACvBtwD,KAAKyvC,mBAAmB6gB,WAAW1vB,OAGvC5gC,KAAKyvC,mBAAmBwkB,2BAA8Bl8B,IAClD,IAAIyO,EAAmB/N,EAAK3Y,KAAKkZ,KAAKC,GACH,MAA/BR,EAAK3Y,KAAKiZ,oBACVyN,EAAW/N,EAAK3Y,KAAKiZ,mBAGzB,IAAIyzB,GAAkB/zB,EAAK3Y,KAAM0mB,EAAUzO,EAAK,EAKpD/3B,KAAKyvC,mBAAmBukB,eACpB,CAACz4B,EAAsB87B,KACnBA,EAAUA,EAAQziD,OAAO,EAAG,IAC5B2mB,EAAUz3B,KAAOuzD,EACjB97B,EAAU3C,OAAQ,EAClBH,EAAK3Y,KAAKsZ,eAAeC,cAClBg+B,GAGfr3D,KAAKyvC,mBAAmB+kB,eACpB,CAACj5B,EAAsB47B,KACnB1+B,EAAK3Y,KAAKsZ,eAAe4T,0BAA0B,YAAazR,EAAUtC,IAAK73B,IAC9D,MAATA,GACAq3B,EAAK3Y,KAAK43C,gBAAgBn8B,GACtBA,EAAUwU,WACVtX,EAAK0W,cAAcxY,QACnB8B,EAAK3Y,KAAK63C,iBAAiBhhC,QAC3B8B,EAAK3Y,KAAK83C,wBAAwBjhC,QAClC8B,EAAK0W,cAAckhB,iBAAgB,GACnC53B,EAAK3Y,KAAK8yB,kBAAkBilB,SAAS,OAEzCV,KAEA1tB,MAAM,WAAaroC,E,GAEzB,EAGVpB,KAAKyvC,mBAAmByiB,eACnB32B,IACMA,EAAUwU,UACTxU,GAAav7B,KAAK8f,KAAKuvB,kBACvB5W,EAAK3Y,KAAKsZ,eAAeC,aAAY,KACjCZ,EAAKmU,mBAAmBrR,EAAU,G,EAKlDv7B,KAAKyvC,mBAAmBkgB,kBAAoB,CAACD,EAA8BxqB,KACvE,IAAIsB,EAAmB/N,EAAK3Y,KAAKkZ,KAAKC,GACH,MAA/BR,EAAK3Y,KAAKiZ,oBACVyN,EAAW/N,EAAK3Y,KAAKiZ,mBAGzB,IAAIi8B,EAAoB,IAAI1jB,GAAUoe,EAAW5rD,KAAM20B,EAAK3Y,KAAM0mB,GAClEwuB,EAAOjlB,UAAW,EAElBilB,EAAOj9B,KAAO23B,EAAW33B,KAAK3c,KAAK,KACnC45C,EAAOhlB,aAAe0f,EACtBA,EAAWzf,gBAAkB+kB,EAC7Bv8B,EAAK3Y,KAAKmrB,cAAcjoC,KAAKgyD,GAE7B,IAAIrpB,EAA0B,CAC1B1S,IAAK,EACL8W,UAAU,EACVjsC,KAAMkxD,EAAOlxD,KACbi0B,KAAMi9B,EAAOj9B,MAGjBU,EAAK3Y,KAAKsZ,eAAesS,oBAAoBC,EAAIlT,EAAK3Y,KAAKiZ,mBAAoB33B,IAC9D,MAATA,GACA4zD,EAAO/7B,GAAK0S,EAAG1S,GACfiM,EAAgB8vB,KAGhBvrB,MAAM,WAAaroC,GACnBq3B,EAAKgX,mBAAmBL,cAAcsgB,G,GAE5C,EAIN1vD,KAAKyvC,mBAAmBslB,aAAgBv2B,IAC/BvkB,MAAMC,QAAQskB,KAAKA,EAAK,CAACA,IAC9B,IAAK,IAAI/sB,KAAK+sB,EAAI,CACd,IAAIwM,EAAgBv5B,EAAEw+B,gBACtBjF,EAAGjT,KAAOtmB,EAAEsmB,KAAK3c,KAAK,KACtB4vB,EAAGpS,OAAQ,C,CAEf54B,KAAK8f,KAAKsZ,eAAeC,aAAa,EAG1Cr5B,KAAKyvC,mBAAmBikB,oBAAsB,CAACoE,EAAwBC,EAAkCC,KACrG,IAAIz8B,EAAuBu8B,EAAK7nB,gBAC5BpqC,EAAiBkyD,EAAe9nB,gBAEpC,GAAI1U,EAAUrF,YAAYM,YAAW,GAAOhmB,QAAQ3K,IAAW,EAAG,OAElE,IAAIq1B,EAAU,CACVp3B,KAAM+B,EAAO4wB,KAAK3yB,KAClB4yB,OAAO,EACPkC,OAAO,EACPznB,KAAMtL,EAAO4wB,KAAKtlB,KAClB+nB,qBAAsB,KACtBkC,eAAgB,KAChBjC,+BAA+B,EAC/BkC,QAASx1B,EAAO4wB,KAAK4E,QACrB2U,aAAc,MAGA,QAAdgoB,IAEmBv/B,EAAK3Y,KAAKuvB,iBAChBnZ,YAAYwH,aAAa73B,GACtC4yB,EAAK0W,cAAcC,cAAcvpC,GACjC4yB,EAAK3Y,KAAKsZ,eAAe4T,0BAA0B,OAAQnnC,EAAO4wB,KAAKwC,IAAI,UAG/E,IAAI7a,EAAI,IAAIuZ,GAAOuD,EAAGzC,EAAK3Y,MACVyb,EAAUrF,YAChBgH,UAAU9e,GACrBqa,EAAK3Y,KAAKsZ,eAAemT,eAAenuB,EAAGmd,EAAW9C,EAAK3Y,KAAKiZ,mBAC3D33B,IACgB,MAATA,GAEAqoC,MAAM,mC,GAGZ,EAMVzpC,KAAKi4D,YAAc95B,OAAO,uHAG1Bn+B,KAAKi4D,YAAY9sC,GAAG8U,EAAc,QAAS9rB,IACvCA,EAAEurB,kBAEFjH,EAAK3Y,KAAKsZ,eAAeC,aAAY,KACjCZ,EAAKy/B,qBAAqB,IAG9Bz/B,EAAK3Y,KAAKwZ,UAAU6+B,iBAAiB,IAIzCn4D,KAAKyvC,mBAAmBmS,UAAU5hD,KAAKi4D,aACvCj4D,KAAKi4D,YAAYr3B,OAEjB5gC,KAAKyvC,mBAAmBykB,oBAAuBkE,IAE3C,IAAIC,EAAsC,GAwC1C,OAtCIr4D,KAAK8f,KAAKkZ,KAAKu+B,YAAcv3D,KAAK8f,KAAKw4C,gBAAgBC,WAAWnrC,SAAS7pB,OAAS,GACpF80D,EAAQr1D,KAAK,CACT4+B,QAAS,yBACTI,SAAW1M,IAAD,EACVyM,QAAS/hC,KAAK8f,KAAKw4C,gBAAgBC,WAAWnrC,SAASjT,KAAKqkB,IACjD,CACHoD,QAASpD,EAAG16B,KACZk+B,SAAW1M,IACP,IAAIoX,EAAclO,EAAGyR,gBAEjB1U,EAAuBjG,EAAQ2a,gBAEnCjwC,KAAK8f,KAAKsZ,eAAeqT,wBAAwBlR,EAAWmR,EAAQ,MAAOtrC,IACvE,GAAa,MAATA,EAAe,CACf,IAAIg4B,EAAiBp5B,KAAK8f,KAAKsZ,eAC3B9B,EAAK8B,EAAe4Q,yBAA2B5Q,EAAeuP,kBAClEc,MAAM,iBAAmBlO,EAAUz3B,KAAO,wBAA0B4oC,EAAO5oC,KAAO,mCAC9EwzB,EAAK,iC,MAETmS,MAAMroC,E,GAEZ,OAMd,CACIwgC,QAAS,yCACTI,SAAW1M,IACP,IAAI0gC,EAAuBh2D,KAAK8f,KAAKw4C,gBAAgBC,WAAWnrC,SAASjT,KAAIqkB,GAAMA,EAAGyR,kBAClF1U,EAAuBjG,EAAQ2a,gBACnC,IAAI8lB,GAA2BC,EAASz6B,EAAWv7B,KAAK8f,KAAK,IAMtEu4C,CAAO,CAGtB,CAEAH,sBACIl4D,KAAK8f,KAAKw4C,gBAAgBE,uBAC1Bx4D,KAAK8f,KAAKsZ,eAAe4Q,yBAA2BhqC,KAAK8f,KAAKsZ,eAAe0Q,4BAC7E9pC,KAAKi4D,YAAYr3B,OACjB5gC,KAAKmvC,cAAckhB,gBAAgBrwD,KAAK8f,KAAKmrB,cAAc1nC,OAAS,EACxE,CAEAk1D,YAAYl9B,GAER,IAAIz3B,EAAoB,MAAby3B,EAAoB,2BAA6BA,EAAUz3B,KAKtE,GAHA9D,KAAKmvC,cAAcwmB,WAAW7xD,GAC9B9D,KAAKmvC,cAAcxY,QAEoB,MAAnC32B,KAAK8f,KAAKyX,sBACV,IAAK,IAAI1xB,KAAU7F,KAAK8f,KAAKyX,sBAAsBrB,YAAYM,YAAW,GACtE3wB,EAAO4wB,KAAKuZ,aAAe,KAInC,GAAiB,MAAbzU,EAAmB,CACnB,IAAIm9B,EAAuB,GAE3B,IAAK,IAAIt6C,KAAKmd,EAAUrF,YAAYM,YAAW,GAC3CkiC,EAAW11D,KAAKob,GAGpBs6C,EAAWp8B,MAAK,CAAC7qB,EAAGkpB,IAAelpB,EAAEglB,KAAK3yB,KAAO62B,EAAElE,KAAK3yB,KAAO,EAAI2N,EAAEglB,KAAK3yB,KAAO62B,EAAElE,KAAK3yB,MAAQ,EAAI,IAEpG,IAAK,IAAIsa,KAAKs6C,EAEVt6C,EAAEqY,KAAKuZ,aAAe,CAClBlsC,KAAMsa,EAAEqY,KAAK3yB,KACbmsC,gBAAiB7xB,EACjB2xB,UAAU,EACVhY,KAAM,IAGV/3B,KAAKmvC,cAAcgB,WAAW/xB,EAAEqY,KAAKuZ,cAAc,GACnDhwC,KAAK05B,qBAAqBtb,EAAEqY,MAGhCz2B,KAAKmvC,cAAcO,c,CAG3B,CAEAipB,iBAAiB1tB,GAEbjrC,KAAKmvC,cAAcxY,QACnB32B,KAAKyvC,mBAAmB9Y,QAExB,IAAK,IAAIiZ,KAAK3E,EAAe,CACzB,IAAIlT,EAAO6X,EAAE7X,KAAK5J,MAAM,KACL,GAAf4J,EAAKx0B,QAA0B,IAAXw0B,EAAK,KAAUA,EAAO,IAC9C6X,EAAEI,aAAe,CACblsC,KAAM8rC,EAAE9rC,KACRmsC,gBAAiBL,EACjBM,UAAW,YACXH,SAAUH,EAAEG,SACZhY,KAAMA,GAGV/3B,KAAKyvC,mBAAmBU,WAAWP,EAAEI,cAAc,GACnDJ,EAAEgC,qBAAqBhC,EAAEI,a,CAG7BhwC,KAAKyvC,mBAAmBC,eACxB1vC,KAAKmvC,cAAckhB,gBAAgBplB,EAAc1nC,OAAS,EAI9D,CAEAq1D,iBAAiBr9B,EAAsBs9B,GACnC,GAAqB,MAAjBA,EACJ,IAAK,IAAIz6C,KAAKmd,EAAUrF,YAAYM,YAAW,GAAQ,CACnD,IAAIsiC,EAAqBD,EAAcx/C,IAAI+E,GACvC26C,EAAsC,MAAdD,GAAoC,GAAdA,EAAmB,GAAK,IAAMA,EAAa,IAE7F94D,KAAKmvC,cAAc8jB,qBAAqB70C,EAAEqY,KAAKuZ,aAAc+oB,EAAa,gB,CAElF,CAEAnsB,mBAAmBgD,EAAc5N,EAAuB4tB,GAA0B,GAE9E,GAAGhgB,GAAK5vC,KAAK8f,KAAKyX,sBAEd,YADe,MAAZyK,GAAkBA,KAIhB,MAAL4N,GACA5vC,KAAKmvC,cAAcmhB,WAAWpvB,OAGlClhC,KAAKyvC,mBAAmBvnB,OAAO0nB,GAAG,EAAOggB,GAEzC,IAAIoJ,EAAgC53D,IAAmBpB,KAAKi5D,uBAAuB73D,EAAOwuC,EAAG5N,EAAS,EAEpF,MAAd4N,EAAEvC,UACFrtC,KAAK8f,KAAKspB,YAAYlI,KAAK,+CAE3BlhC,KAAK8f,KAAKsZ,eAAeuU,cAAciC,EAAGopB,IAE1CA,EAA6B,KAGrC,CAEAC,uBAAuB73D,EAAewuC,EAAc5N,GAChD,GAAa,MAAT5gC,EAEA,YADAqoC,MAAMroC,GAIV,IAAI6pD,EAASjrD,KAAK8f,KAAKsX,kBAEnB+O,EAAuByJ,EAAEvC,SAASlH,WACpB,MAAdA,IAAoBA,EAAa,IAErC8kB,EAAO/F,iBAAiBtV,EAAEvC,SAAS/G,aAAcH,GAC7C,KASI,GARAnmC,KAAK8f,KAAKuvB,iBAAmBO,EAEzB5vC,KAAK8f,KAAKkZ,KAAKC,IAAM2W,EAAEpJ,WACvBxmC,KAAK8f,KAAKkZ,KAAKkgC,oBAAsBtpB,EAAE3W,IAG3Cj5B,KAAKy4D,YAAY7oB,GAER,MAALA,EAAW,CACX,IAAIupB,EAAmBvpB,EAAE1Z,YAAYM,YAAW,GAEnB,MAAzBoZ,EAAE6B,oBACFzxC,KAAKo3D,gBAAgBxnB,EAAE6B,qBAChB0nB,EAAiB51D,OAAS,EACjCvD,KAAKo3D,gBAAgB+B,EAAiB,IAEtCn5D,KAAKo3D,gBAAgB,MAGzB,IAAK,IAAIh5C,KAAK+6C,EACV/6C,EAAEqY,KAAKC,OAAQ,EAGY,GAA3ByiC,EAAiB51D,QAEjBi1C,GAAOiL,WAAW,mBAAoBzjD,KAAK8f,KAAM9f,KAAKmvC,cAAc6gB,iBAIxEhwD,KAAK8f,KAAKs5C,SAASzxB,QAAQiI,E,MAG3B5vC,KAAKo3D,gBAAgB,K,IAI7B,KACIp3D,KAAK8f,KAAK63C,iBAAiB0B,oCAC3Br5D,KAAK8f,KAAKw5C,mBAAmBC,uBAAuB3pB,EAAEvC,SAASlH,YAChD,MAAZnE,GAAkBA,GAAU,GAG3C,CAEA2I,wBACI,IAAI6uB,EAAMx5D,KAAK82B,2BACJ,MAAP0iC,IACAA,EAAI/iC,KAAKtlB,KAAOqoD,EAAI3iC,gCAC5B,CAIAugC,gBAAgBh5C,GAEZpe,KAAK8f,KAAKwZ,UAAUC,gBAAgBkgC,eAET,MAAvBz5D,KAAKg3D,iBACLh3D,KAAKg3D,eAAevgC,KAAKtlB,KAAOnR,KAAKg3D,eAAengC,gCACpD72B,KAAKg3D,eAAe0C,YAAc15D,KAAK8f,KAAK8yB,kBAAkB+mB,iBAGzD,MAALv7C,GACApe,KAAK8f,KAAK8yB,kBAAkBilB,SAAStkD,OAAOwB,OAAOqjB,YAAY,yBAA0B,SACzFp4B,KAAK8f,KAAK8yB,kBAAkBva,cAAc,CAAEuhC,UAAU,MAEtD55D,KAAK8f,KAAK8yB,kBAAkBva,cAAc,CAAEuhC,UAAU,IACtD55D,KAAK8f,KAAK8yB,kBAAkBilB,SAASz5C,EAAExK,OACP,MAA5B5T,KAAK8f,KAAKiX,gBAAwB/2B,KAAK8f,KAAKiX,eAAeC,aAAaC,uBAAuB7Y,EAAEnP,cAElE,MAA/BmP,EAAEqY,KAAKyC,qBACPl5B,KAAK8f,KAAKwZ,UAAUC,gBAAgBC,6BAEpCx5B,KAAK8f,KAAKwZ,UAAUC,gBAAgBsgC,6BAKhD,CAEAza,+BAA+BhhC,GAC3Bpe,KAAKmvC,cAAcjnB,OAAO9J,GAAG,GAE7Bpe,KAAKg3D,eAAiB54C,EAED,MAAjBA,EAAEs7C,cACF15D,KAAK8f,KAAK/K,OAAO0kC,yBACjBz5C,KAAK8f,KAAK8yB,kBAAkBknB,iBAAiB17C,EAAEs7C,aAC/C15D,KAAK8f,KAAK/K,OAAO0kC,0BAGrBz5C,KAAK+5D,yBAAyB37C,GAE9Bpe,KAAKg6D,qBAELn5B,YAAW,KACF7gC,KAAK8f,KAAK8yB,kBAAkB0O,aAAajoC,IAAI9F,OAAOwB,OAAO8pC,aAAa+a,WACzE55D,KAAK8f,KAAK8yB,kBAAkB9R,O,GAEjC,IAEP,CAGQk5B,qBAEJ,GAAIh6D,KAAK82D,sBAAwB92D,KAAK82B,4BAAiE,MAAnC92B,KAAK82B,2BAAoC,CACzG,IAAInmB,EAAW3Q,KAAKi6D,uBAChB5lD,EAAQ,CACRI,YAAa9D,EAAStB,OAAQkF,gBAAiB5D,EAASvB,KACxDoF,UAAW7D,EAAStB,OAASsB,EAASpN,OAAQ+Q,cAAe3D,EAASvB,MAG1EpP,KAAK8f,KAAK8yB,kBAAkBsnB,qCAAqC7lD,GACjErU,KAAK+2D,yBAA2B/2D,KAAK8f,KAAK8yB,kBAAkB+P,iBAAiB3iD,KAAK+2D,yBAA0B,CACxG,CACI1iD,MAAOA,EACPP,QAAS,CACL+uC,UAAW,0BAA2BC,aAAa,EACnDC,cAAe,CACXviB,MAAO,UACP7vB,SAAU4C,OAAOwB,OAAOkuC,kBAAkBkX,QAE9C/b,QAAS,CACL5d,MAAO,UACP7vB,SAAU4C,OAAOwB,OAAOuuC,gBAAgBC,UAIpD,CACIlvC,MAAOA,EACPP,QAAS,CAAEsmD,uBAAwB,mC,CAKnD,CAEAC,2BAA2B5jC,EAAY9lB,GAGnC,GAAY,MAAR8lB,EACA,OAGJ,IAAI5wB,EAAS7F,KAAK8f,KAAKuvB,iBAAiBnZ,YAAYiH,iBAAiB1G,GACvD,MAAV5wB,IAIJ7F,KAAK82D,qBAAuBjxD,EAC5B7F,KAAKi6D,uBAAyBtpD,EAE1B9K,GAAU7F,KAAK82B,2BACf92B,KAAKo3D,gBAAgBvxD,GAErB7F,KAAKg6D,qBAGb,CAEAM,6BACQt6D,KAAK82B,4BAA8B92B,KAAK82D,sBACxC92D,KAAK8f,KAAK8yB,kBAAkB+P,iBAAiB3iD,KAAK+2D,yBAA0B,IAEhF/2D,KAAK82D,qBAAuB,KAC5B92D,KAAK+2D,yBAA2B,EACpC,CAEAjgC,2BACI,IAAIkU,EAAKhrC,KAAK8f,KAAKuvB,iBACnB,OAAU,MAANrE,EAAmB,KAEhBA,EAAGyG,mBACd,CAEAsoB,yBAAyB37C,GACrB,GAAS,MAALA,EAAW,OACf,IAAI4sB,EAAKhrC,KAAK8f,KAAKuvB,iBACfrE,EAAGyG,qBAAuBrzB,IAC1B4sB,EAAGyG,oBAAsBrzB,EACzB4sB,EAAGpS,OAAQ,EACXxa,EAAEqY,KAAKC,OAAQ,EAEvB,CAEA6jC,iBAAiB/5B,GACb,IAAIoB,EAES,MAATpB,GACAA,EAAQ,cACRoB,EAAU,qBAEVA,EAAU,aAGd5hC,KAAKmvC,cAAc8gB,aAAa5gC,SAASgR,IAAI,mBAAoBG,GACjExgC,KAAKyvC,mBAAmBwgB,aAAa5gC,SAASgR,IAAI,mBAAoBG,GAEtExgC,KAAKyvC,mBAAmBkmB,WAAW/zB,EACvC,CAEA0O,aAAa7Z,GACT,OAAO,IAAIkB,GAAOlB,EAAMz2B,KAAK8f,KACjC,ECnuBG,MAAM06C,GAOT32D,YAAoBic,EAAuB26C,GAAvB,KAAA36C,KAAAA,EAAuB,KAAA26C,UAAAA,EAL3C,KAAAC,aAAuB,EAOnB16D,KAAK26D,MAAQF,EAAU5mC,KAAK,YAC5B7zB,KAAK46D,UAAYH,EAAU5mC,KAAK,mBAET7zB,KAAK46D,UAAU/mC,KAAK,8BAA8BtwB,OACjDvD,KAAK46D,UAAU/mC,KAAK,+BAA+BtwB,OAD3E,IAGIk1B,EAAOz4B,KACP66D,EAAyB,OAC7BJ,EAAU5mC,KAAK,oBAAoB1I,GAAG,SAAS,KAE3CsN,EAAKiiC,aAAejiC,EAAKiiC,YAEzB,IAAII,EAAe38B,OAAO,oBAErB1F,EAAKiiC,aAUNv8B,OAAO,SAASkC,IAAI,UAAW,QAC/Bw6B,EAAiB18B,OAAO,aAAakC,IAAI,SACzClC,OAAO,aAAakC,IAAI,QAAS,QACjCy6B,EAAa77B,YAAY,oBACzB67B,EAAa97B,SAAS,yBAEtBb,OAAO,yBAAyBgE,OAAOhE,OAAO,cAC9C28B,EAAaj8B,KAAK,QAAS,kCAC3BV,OAAO,gBAAgBG,QAAQ,iBAjB/BH,OAAO,SAASkC,IAAI,UAAW,QAC/BlC,OAAO,aAAakC,IAAI,QAASw6B,GAEjCC,EAAa77B,YAAY,yBACzB67B,EAAa97B,SAAS,oBACtBb,OAAO,aAAa8zB,YAAY9zB,OAAO,eACvC28B,EAAaj8B,KAAK,QAAS,+BAC3BV,OAAO,gBAAgBG,QAAQ,e,GAc3C,CAEAsb,UACIlX,GAAS1iC,KAAKy6D,UAClB,EClDG,MAAMM,GAITl3D,YAAYic,GACR9f,KAAK8f,KAAOA,CAChB,CAEAk7C,cACI,IAAIviC,EAAOz4B,KAEPigC,EAAeC,OAAOC,aAAe,UAAY,QAErDhC,OAAO,YAAYhT,GAAG8U,EAAe,QAASg7B,IAE1C,IAAI35B,EAAI25B,EAAGC,QAEX/8B,OAAOjmB,UAAUiT,GAAG8U,EAAe,gBAAiBlO,IAChD,IAAIopC,EAAKppC,EAAGmpC,QAAU55B,EAEtB7I,EAAK2iC,cAAcD,GAEnB75B,EAAIvP,EAAGmpC,OAAO,IAGlB/8B,OAAOjmB,UAAUiT,GAAG8U,EAAe,cAAc,KAC7C9B,OAAOjmB,UAAU8oB,IAAIf,EAAe,gBACpC9B,OAAOjmB,UAAU8oB,IAAIf,EAAe,aAAa,GACnD,IAKN9B,OAAO,YAAYhT,GAAG8U,EAAe,QAASg7B,IAE1C,IAAI15B,EAAI05B,EAAGI,QAEXl9B,OAAOjmB,UAAUiT,GAAG8U,EAAe,gBAAiBlO,IAChD,IAAIupC,EAAKvpC,EAAGspC,QAAU95B,EAEtB9I,EAAK8iC,cAAcD,GAEnB/5B,EAAIxP,EAAGspC,OAAO,IAGlBl9B,OAAOjmB,UAAUiT,GAAG8U,EAAe,cAAc,KAC7C9B,OAAOjmB,UAAU8oB,IAAIf,EAAe,gBACpC9B,OAAOjmB,UAAU8oB,IAAIf,EAAe,aAAa,GACnD,IAKN9B,OAAO,YAAYhT,GAAG8U,EAAe,QAASg7B,IAE1C,IAAI35B,EAAI25B,EAAGC,QAEX/8B,OAAOjmB,UAAUiT,GAAG8U,EAAe,gBAAiBlO,IAChD,IAAIopC,EAAKppC,EAAGmpC,QAAU55B,EAEtB7I,EAAK+iC,aAAaL,GAElB75B,EAAIvP,EAAGmpC,QACPnpC,EAAG2N,iBAAiB,IAGxBvB,OAAOjmB,UAAUiT,GAAG8U,EAAe,cAAc,KAC7C9B,OAAOjmB,UAAU8oB,IAAIf,EAAe,gBACpC9B,OAAOjmB,UAAU8oB,IAAIf,EAAe,aAAa,GACnD,IAKN,IAAIw7B,EAAiBt9B,OAAO,uGAC5BA,OAAO,YAAYgE,OAAOs5B,GAC1BA,EAAetwC,GAAG8U,EAAe,QAASg7B,IACtC,IAAI15B,EAAI05B,EAAGI,QACP/5B,EAAI25B,EAAGC,QAEXD,EAAGS,2BAEHv9B,OAAOjmB,UAAUiT,GAAG8U,EAAe,iBAAkBlO,IACjD,IAAIupC,EAAKvpC,EAAGspC,QAAU95B,EAClB45B,EAAKppC,EAAGmpC,QAAU55B,EACtBvP,EAAG2pC,2BAEHjjC,EAAK2iC,cAAcD,GACnB1iC,EAAK8iC,cAAcD,GAEnBh6B,GAAK65B,EACL55B,GAAK+5B,CAAE,IAGXn9B,OAAOjmB,UAAUiT,GAAG8U,EAAe,eAAe,KAC9C9B,OAAOjmB,UAAU8oB,IAAIf,EAAe,iBACpC9B,OAAOjmB,UAAU8oB,IAAIf,EAAe,cAAc,GACpD,IAIN,IAAI07B,EAAkBx9B,OAAO,wGAC7BA,OAAO,YAAYgE,OAAOw5B,GAC1BA,EAAgBxwC,GAAG8U,EAAe,QAASg7B,IACvC,IAAI15B,EAAI05B,EAAGI,QACP/5B,EAAI25B,EAAGC,QAEXD,EAAGS,2BAEHv9B,OAAOjmB,UAAUiT,GAAG8U,EAAe,kBAAmBlO,IAClD,IAAIupC,EAAKvpC,EAAGspC,QAAU95B,EAClB45B,EAAKppC,EAAGmpC,QAAU55B,EACtBvP,EAAG2pC,2BAEHjjC,EAAK+iC,aAAaL,GAClB1iC,EAAK8iC,cAAcD,GAEnBh6B,GAAK65B,EACL55B,GAAK+5B,CAAE,IAGXn9B,OAAOjmB,UAAUiT,GAAG8U,EAAe,gBAAgB,KAC/C9B,OAAOjmB,UAAU8oB,IAAIf,EAAe,kBACpC9B,OAAOjmB,UAAU8oB,IAAIf,EAAe,eAAe,GACrD,GAIV,CAEAu7B,aAAaL,GACT,IAAIS,EAAUz9B,OAAO,0BACjBs8B,EAAYt8B,OAAO,aAEnBmC,EAAQztB,OAAOC,SAAS2nD,EAAUp6B,IAAI,SAASvxB,QAAQ,KAAM,KACjE2rD,EAAUp6B,IAAI,QAAUC,EAAQ66B,EAAM,MAEtC,IAAIU,EAAUhpD,OAAOC,SAAS8oD,EAAQv7B,IAAI,SAASvxB,QAAQ,KAAM,KACjE8sD,EAAQv7B,IAAI,QAAUw7B,EAAUV,EAAM,MAEtCn7D,KAAK8f,KAAK8yB,kBAAkBkpB,SACyB,MAAlD97D,KAAK8f,KAAKwZ,UAAUC,gBAAgBwiC,YACnC/7D,KAAK8f,KAAKwZ,UAAUC,gBAAgBwiC,WAAWD,SAGnD39B,OAAO,gBAAgBG,QAAQ,eAC/BgC,GAAS66B,CACjB,CACII,cAAcD,GACV,IAAIM,EAAUz9B,OAAO,0BACjB69B,EAAa79B,OAAO,oBAEpBoC,EAAS1tB,OAAOC,SAASkpD,EAAW37B,IAAI,UAAUvxB,QAAQ,KAAM,KACpEktD,EAAW37B,IAAI,SAAWE,EAAS+6B,EAAM,MAEzC,IAAIW,EAAWppD,OAAOC,SAAS8oD,EAAQv7B,IAAI,UAAUvxB,QAAQ,KAAM,KACnE8sD,EAAQv7B,IAAI,SAAW47B,EAAWX,EAAM,MAExCt7D,KAAK8f,KAAK8yB,kBAAkBkpB,SACyB,MAAlD97D,KAAK8f,KAAKwZ,UAAUC,gBAAgBwiC,YACnC/7D,KAAK8f,KAAKwZ,UAAUC,gBAAgBwiC,WAAWD,QAE3D,CAEIV,cAAcD,GACV,IAAIe,EAAa/9B,OAAO,cACpBy9B,EAAUz9B,OAAO,0BAEjBmC,EAAQztB,OAAOC,SAASopD,EAAW77B,IAAI,SAASvxB,QAAQ,KAAM,KAClEotD,EAAW77B,IAAI,QAAUC,EAAQ66B,EAAM,MAEvC,IAAIU,EAAUhpD,OAAOC,SAAS8oD,EAAQv7B,IAAI,SAASvxB,QAAQ,KAAM,KACjE8sD,EAAQv7B,IAAI,QAAUw7B,EAAUV,EAAM,MACtCn7D,KAAK8f,KAAK8yB,kBAAkBkpB,SACyB,MAAlD97D,KAAK8f,KAAKwZ,UAAUC,gBAAgBwiC,YACnC/7D,KAAK8f,KAAKwZ,UAAUC,gBAAgBwiC,WAAWD,QAGvD,EC9KG,MAAMK,GASTt4D,YAAoBic,EAAoBs8C,GAApB,KAAAt8C,KAAAA,EAAoB,KAAAs8C,UAAAA,CAExC,CAEAC,eACIr8D,KAAKu4D,WAAWt3B,SAChBjhC,KAAKs8D,aAAar7B,QACtB,CAEA2Y,UAEI55C,KAAKu8D,mBAELv8D,KAAKw8D,iBAELx8D,KAAKy8D,cAAcz8D,KAAKo8D,UAE5B,CAEAG,mBAEI,IAAI9jC,EAAOz4B,KAEXA,KAAKs8D,aAAe,IAAI1N,GAAe5uD,KAAK8f,KAAK2Z,gBAAgBo1B,UAC7D,gBAAiB,IAAK,KACtB,GAAI,WAAW,GAAO,EAAO,WAAW,EAAO,IAEnD7uD,KAAKs8D,aAAapK,eAAkB1zB,IAEhC/F,EAAK3Y,KAAKsZ,eAAeC,aAAY,KAQjC4L,GAAK,gBAN+B,CAChCy3B,UAAWl+B,EAAGvF,GACdoS,OAAQrrC,KAAK8f,KAAKkZ,KAAKC,GACvBqS,SAAU,IAGkB3F,IACJ,GAApBA,EAASD,UAELjN,EAAK3Y,KAAKiZ,mBAAqBN,EAAK3Y,KAAKkZ,KAAKC,KAC9CR,EAAKkkC,cAAgBlkC,EAAK3Y,KAAKmrB,cAAcnmC,QAC7C2zB,EAAKmkC,oBAAsBnkC,EAAK3Y,KAAKuvB,kBAGzC5W,EAAK3Y,KAAK+8C,kBAAkBl3B,EAAS+I,YACrCjW,EAAK3Y,KAAKiZ,kBAAoByF,EAAGvF,GACjCR,EAAK3Y,KAAK2Z,gBAAgB8gC,iBAAiB,uBAC3C9hC,EAAK3Y,KAAK2Z,gBAAgBw+B,YAAY/2B,OACtCsX,GAAOiL,WAAW,mBAAoBzjD,KAAK8f,MAE3C2Y,EAAK3Y,KAAKwZ,UAAUwjC,kBACpBrkC,EAAK3Y,KAAKwZ,UAAUC,gBAAgBwjC,mBAAmBtkC,EAAK3Y,KAAKmrB,gBAGrEjrC,KAAK8f,KAAKsZ,eAAe4Q,yBAA2BhqC,KAAK8f,KAAKsZ,eAAe2Q,gCAC7E/pC,KAAK8f,KAAKsZ,eAAe6Q,sBAAwBjqC,KAAK8f,KAAKsZ,eAAe2Q,+BAA+B,GAE3G,GAEJ,CAGV,CAEAyuB,uBACI,IAAI14C,EAAO9f,KAAK8f,KAGhBA,EAAK8yB,kBAAkBva,cAAc,CAAEuhC,UAAU,IAEjD95C,EAAKmrB,cAAgBjrC,KAAK28D,cAC1B78C,EAAKuvB,iBAAmBrvC,KAAK48D,oBAC7B98C,EAAKiZ,kBAAoBjZ,EAAKkZ,KAAKC,GACnCnZ,EAAK2Z,gBAAgB8gC,iBAAiB,MAEtCz6C,EAAK2Z,gBAAgBk/B,iBAAiB74C,EAAKmrB,eAEd,MAAzBnrB,EAAKuvB,kBAA4BvvB,EAAKmrB,cAAc1nC,OAAS,IAC7Duc,EAAKuvB,iBAAmBvvB,EAAKmrB,cAAc,IAGlB,MAAzBnrB,EAAKuvB,kBACLvvB,EAAK2Z,gBAAgBmT,mBAAmB9sB,EAAKuvB,kBAGjDrvC,KAAKs8D,aAAap0C,OAAO,MAAM,EAEnC,CAEAs0C,iBACI,IAAI/jC,EAAOz4B,KAEXA,KAAKu4D,WAAa,IAAI3J,GAAe5uD,KAAK8f,KAAK2Z,gBAAgBo1B,UAC3D,UAAW,IAAK,KAAM,GAAI,SAAS,GAAO,EAAO,SAAS,EAAO,IAErE7uD,KAAKu4D,WAAWrG,eAAkB8K,IAC9BvkC,EAAK3Y,KAAKsZ,eAAeC,aAAY,KAEjC,IAAI+iC,EAAuBY,EACV,MAAbZ,GACAp8D,KAAKi9D,eAAeb,EAAUhG,S,GAGpC,CAIV,CAEA6G,eAAeC,GACXl9D,KAAKs8D,aAAa3lC,QAElBumC,EAAa5gC,MAAK,CAAC7qB,EAAGkpB,IACdlpB,EAAEglD,aAAe97B,EAAE87B,aAAqB,EACxC97B,EAAE87B,aAAehlD,EAAEglD,cAAsB,EACzChlD,EAAE+kD,QAAU77B,EAAE67B,QAAgB,EAC9B77B,EAAE67B,QAAU/kD,EAAE+kD,SAAiB,EAC5B,IAGX,IAAK,IAAI2G,KAAMD,EAAc,CACzB,IAAI1+B,EAAuB,CACvB16B,KAAMq5D,EAAG1G,aAAe,KAAO0G,EAAG3G,QAClCzD,SAAUoK,EAAG1G,aAAe,IAAM0G,EAAG3G,QACrCvmB,gBAAiBktB,EACjBptB,UAAU,EACVhY,KAAM,IAEV/3B,KAAKs8D,aAAansB,WAAW3R,GAAI,E,CAGzC,CAEAi+B,cAAcW,GACVp9D,KAAKs8D,aAAa3lC,QAElBymC,EAAc9gC,MAAK,CAAC7qB,EAAGkpB,IACflpB,EAAE3N,KAAO62B,EAAE72B,KAAa,EACxB62B,EAAE72B,KAAO2N,EAAE3N,MAAc,EACtB,IAGX,IAAK,IAAIu5D,KAAMD,EAAe,CAC1B,IAAI5+B,EAAuB,CACvB16B,KAAMu5D,EAAGv5D,KACTmsC,gBAAiBotB,EACjBttB,UAAU,EACVhY,KAAM,IAEV/3B,KAAKu4D,WAAWpoB,WAAW3R,GAAI,E,CAGvC,ECnKG,MAAM8+B,GAKThqD,OACItT,KAAKywC,QAAUtS,OAAO,WACtBA,OAAO,SAASkC,IAAI,aAAc,UAClCrgC,KAAKywC,QAAQtO,OAAOhE,OAChB,0FAIJn+B,KAAK02D,YAAc12D,KAAKywC,QAAQ5c,KAAK,gBACrC7zB,KAAKywC,QAAQpQ,IAAI,aAAc,UACnC,CAEAk9B,QAAQpsD,GACJ,IAAIgiD,EAAOh1B,OAAO,+BAAiChtB,EAAO,UAE1D,OADAnR,KAAK02D,YAAYv0B,OAAOgxB,GACjBA,CACX,CAEA9sB,YAAYl1B,EAAcqvB,GACtB,IACI2yB,EAAOh1B,OAAO,mCADQ,MAATqC,EAAgB,GAAK,iBAAiBA,QACYrvB,WAEnE,OADAnR,KAAK02D,YAAYv0B,OAAOgxB,GACjBA,CACX,CAEAtkD,MAAMtP,EAAci+D,GAChB,IAAIrK,EAAOh1B,OAAO,qCAAqC5+B,mBAAsBi+D,eAE7E,OADAx9D,KAAK02D,YAAYv0B,OAAOgxB,GACZA,CAChB,CAEAl1B,QAAQA,GAEJ,IAAIw/B,EAAat/B,OAAO,wCACxBn+B,KAAK02D,YAAYv0B,OAAOs7B,GAExB,IAAI,IAAI9+B,KAAUV,EAAQ,CAEtB,IAAI8T,EAAU5T,OAAO,oCAAoCQ,EAAO6B,4BAA4B7B,EAAOiD,oBACnGmQ,EAAQ5mB,GAAG,SAAS,KAAOwT,EAAOqD,UAAU,IAC5Cy7B,EAAWt7B,OAAO4P,E,CAE1B,CAEA2rB,YAAYvsD,GAER,IAAIwsD,EAAWx/B,OAAO,4BAA4BhtB,2EAGlD,OAFAnR,KAAK02D,YAAYv0B,OAAOw7B,GAEhBC,IACJ,IAAIC,EAAaD,EAAU,UAAY,SACvCD,EAASt9B,IAAI,aAAcw9B,EAAW,CAG9C,CAEA/kB,QACI94C,KAAKywC,QAAQpQ,IAAI,aAAc,UAC/BrgC,KAAKywC,QAAQY,QACblT,OAAO,SAASkC,IAAI,aAAc,UACtC,EClEG,MAAMy9B,GAITj6D,YAAoBic,GAAA,KAAAA,KAAAA,CAEpB,CAEAxM,OACI,IAAIyqD,EAAsB5/B,OAAO,uBAC7B1F,EAAOz4B,KAEX+9D,EAAoB5yC,GAAG,SAAUhX,IAa7BitB,GAX0C,CACtC,CACIQ,QAAS,qBACTI,SAAU,KACgB,IAAIg8B,GAAgBvlC,EAAK3Y,MAC/BohB,MAAM,IAMA68B,EAAoBzzC,SAASuB,KAAMkyC,EAAoBzzC,SAAS4X,IAAM67B,EAAoBx9B,SAAS,GAI7I,EAMG,MAAMy9B,GAITn6D,YAAoBic,GAAA,KAAAA,KAAAA,EAEhB9f,KAAKi+D,OAAS,IAAIX,EAEtB,CAEAp8B,OACIlhC,KAAKi+D,OAAO3qD,OACZtT,KAAKi+D,OAAOV,QAAQ,mBACpBv9D,KAAKi+D,OAAO53B,YAAY,iNAExB,IAAI63B,EAAel+D,KAAKi+D,OAAOpvD,MAAM,WAAY,kBAC7CsvD,EAAgBn+D,KAAKi+D,OAAOpvD,MAAM,WAAY,kBAC9CuvD,EAAgBp+D,KAAKi+D,OAAOpvD,MAAM,WAAY,8BAC9CwvD,EAAYr+D,KAAKi+D,OAAO53B,YAAY,GAAI,OACxCi4B,EAAUt+D,KAAKi+D,OAAOP,YAAY,mBAEtC19D,KAAKi+D,OAAOhgC,QAAQ,CAChB,CACI2D,QAAS,YACTpB,MAAO,UACPwB,SAAU,KAAOhiC,KAAKi+D,OAAOnlB,OAAO,GAExC,CACIlX,QAAS,KACTpB,MAAO,QACPwB,SAAU,KACHm8B,EAAc55D,OAAS65D,EAAc75D,MACpC85D,EAAUltD,KAAK,kEAEfmtD,GAAQ,GACRr5B,GAAK,iBAAkB,CAACs5B,YAAaL,EAAa35D,MAAOi6D,YAAaL,EAAc55D,QAAQ,KACxF+5D,GAAQ,GACR70B,MAAM,4CACNzpC,KAAKi+D,OAAOnlB,OAAO,IACnBn5B,IACA2+C,GAAQ,GACRD,EAAUltD,KAAKwO,EAAQ,I,IAO/C,EChFG,MAAM8+C,GAGT56D,YAAoBic,GAAA,KAAAA,KAAAA,CAEpB,CAEA85B,UAEI,IAAInhB,EAAOz4B,KAEP0+D,EAAgBvgC,OAAO,sBAE3BA,OAAO,mBAAmB2C,QAE1B3C,OAAO,mBAAmBhT,GAAG,WAAYhX,IACxB,SAATA,EAAE3W,KACF2gC,OAAO,mBAAmB2C,O,IAIlC3C,OAAO,mBAAmBhT,GAAG,WAAYhX,IACxB,SAATA,EAAE3W,KACF2gC,OAAO,iBAAiBG,QAAQ,Q,IAIxCH,OAAO,mBAAmBhT,GAAG,WAAYhX,IACxB,OAATA,EAAE3W,MACF2W,EAAEwrB,iBACFxB,OAAO,iBAAiB2C,QACxB3C,OAAO,iBAAiBa,SAAS,cAExB,SAAT7qB,EAAE3W,KACF2gC,OAAO,iBAAiBG,QAAQ,Q,IAIxCH,OAAO,iBAAiBhT,GAAG,WAAYhX,IACtB,OAATA,EAAE3W,KACF2W,EAAEwrB,iBACFxB,OAAO,mBAAmB2C,QAC1B3C,OAAO,iBAAiBc,YAAY,cAEpCd,OAAO,iBAAiBG,QAAQ,Q,IAKxC,IAAIqgC,GAAgB,EACpBxgC,OAAO,iBAAiBhT,GAAG,SAAS,KAEhCuzC,EAAcx9B,OAEVy9B,IACJA,GAAgB,EAEhB99B,YAAW,KACP89B,GAAgB,CAAK,GACtB,KAQH15B,GAAK,QAN4B,CAC7B25B,SAAkBzgC,OAAO,mBAAmB55B,MAC5Cs6D,SAAkB1gC,OAAO,mBAAmB55B,MAC5C+mC,SAAU,IAGe3F,IAEzB,GAAKA,EAASD,QAEP,CAOHvH,OAAO,UAAUyC,OAEjB5gC,KAAK8f,KAAKspB,YAAYlI,KAAK,mBAE3B,IAAIlI,EAAiB2M,EAAS3M,KACT,MAAjBA,EAAKiU,UAAmD,MAA/BjU,EAAKiU,SAASkM,gBACvCngB,EAAKiU,SAAW,CACZkM,cAAe,CAAC,EAEhB2lB,UAAW,KACXC,aAAc,OAItB/+D,KAAK8f,KAAKk/C,mBAAqB,KAE3BvmC,EAAK3Y,KAAKyuC,SAAS3U,QAAQ5gB,GAE3BP,EAAK3Y,KAAKspB,YAAYxI,OACtB89B,EAAc99B,OACdzC,OAAO,uBAAuB0a,KAAK1nB,GAAW6H,EAAKw9B,SAAW,IAAMrlC,GAAW6H,EAAKy9B,eAEpF,IAAIqH,GAASrlC,EAAK3Y,MAAMxM,OAEpB0lB,EAAKu+B,YACL9+B,EAAK3Y,KAAKm/C,oBAAoBt5B,EAASu5B,WAG3CzmC,EAAK3Y,KAAKkZ,KAAOA,EAEjBP,EAAK3Y,KAAK+8C,kBAAkBl3B,EAAS+I,YACrCjW,EAAK3Y,KAAKiZ,kBAAoBC,EAAKC,GAEnCR,EAAK3Y,KAAKsZ,eAAe+Q,kBAEzB1R,EAAK3Y,KAAK2Z,gBAAgB0V,cAAc+gB,UAAUl3B,EAAKu+B,YACvD9+B,EAAK3Y,KAAK2Z,gBAAgBgW,mBAAmBygB,UAAUl3B,EAAKu+B,YAE5D9+B,EAAK3Y,KAAKyhC,mBAAmB4d,eAC7B1mC,EAAK3Y,KAAKwZ,UAAU6+B,kBAEpB1/B,EAAK3Y,KAAKsZ,eAAeoR,0BAA0B,EAItB,GAA7BxqC,KAAK8f,KAAKs/C,kBACVp/D,KAAK8f,KAAKk/C,qBACVh/D,KAAK8f,KAAKk/C,mBAAqB,K,MAvDnC7gC,OAAO,kBAAkB0a,KAAK,qD,IA4DlCwmB,IACAlhC,OAAO,kBAAkB0a,KAAK,sBAAwBwmB,GACtDlhC,OAAO,sBAAsByC,MAAM,IAEtC,IAILzC,OAAO,iBAAiBhT,GAAG,SAAS,KAEhCnrB,KAAK8f,KAAKspB,YAAYlI,KAAK,wEAEvBlhC,KAAK8f,KAAKiZ,mBAAqB/4B,KAAK8f,KAAKkZ,KAAKC,IAC9Cj5B,KAAK8f,KAAK2Z,gBAAgBy+B,sBAG9Bl4D,KAAK8f,KAAKsZ,eAAeC,aAAY,K,MAMjC4L,GAAK,SAJ8B,CAC/BsG,mBAA8C,QAA1B,EAAAvrC,KAAK8f,KAAKuvB,wBAAgB,eAAEpW,KAGtB,KAE1Bj5B,KAAK8f,KAAKsZ,eAAeyR,wBAAuB,SAEhD1M,OAAO,UAAU+C,OACjBlhC,KAAK8f,KAAKspB,YAAYxI,OACtBzC,OAAO,kBAAkBkT,QACzBrxC,KAAK8f,KAAK8yB,kBAAkBilB,SAAStkD,OAAOwB,OAAOqjB,YAAY,GAAI,WACnEp4B,KAAK8f,KAAK2Z,gBAAgB0V,cAAcxY,QACxC32B,KAAK8f,KAAK2Z,gBAAgBgW,mBAAmB9Y,QAE7C32B,KAAK8f,KAAK63C,iBAAiBhhC,QAC3B32B,KAAK8f,KAAKw/C,mBAAmB3oC,QAEzB32B,KAAK8f,KAAKkZ,KAAKu+B,aACfv3D,KAAK8f,KAAKw4C,gBAAgB+D,eAC1Br8D,KAAK8f,KAAKw4C,gBAAkB,MAIhCt4D,KAAK8f,KAAKuvB,iBAAmB,KAC7BrvC,KAAK8f,KAAKkZ,KAAO,IAAI,GAGvB,IACH,EAAK,GAKhB,EC3LG,MAAMumC,GAWT17D,YAAoB27D,EAAgD1/C,GAAhD,KAAA0/C,kBAAAA,EAAgD,KAAA1/C,KAAAA,EALpE,KAAA2/C,WAAqD,CAAC,EAEtD,KAAAC,cAAwB,EACxB,KAAAC,oBAA8B,EAI1B3/D,KAAK4/D,wBAA0BzhC,OAAO,qIACtCn+B,KAAK6/D,wBAA0B1hC,OAAO,mHACtCn+B,KAAK8/D,mBAAqB3hC,OAAO,mHACjCqhC,EAAkBr9B,OAAOniC,KAAK4/D,wBAAyB5/D,KAAK6/D,wBAAyB7/D,KAAK8/D,oBAE1F9/D,KAAKy/D,WAAa,CACd,aAAgBz/D,KAAK6/D,wBACrB,QAAW7/D,KAAK8/D,oBAGpB,IAAIC,EAAK//D,KAAK8f,KAAKkgD,cAEnBD,EAAGrhC,eAAe,mBAAoB,IAClC,KACI1+B,KAAKigE,uBAAuB,GAC7B,wCAAyCjgE,KAAK4/D,yBAErDG,EAAGrhC,eAAe,wBAAyB,IACvC,KACI1+B,KAAKkgE,QAAQ,eAAe,GAC7B,uBAAwBlgE,KAAK6/D,yBAEpCE,EAAGrhC,eAAe,mBAAoB,IAClC,KACI1+B,KAAKkgE,QAAQ,UAAU,GACxB,iBAAkBlgE,KAAK8/D,mBAElC,CAEAG,wBACOjgE,KAAK2/D,oBACJ3/D,KAAK4/D,wBAAwB3gC,YAAY,yBACzCj/B,KAAK4/D,wBAAwB5gC,SAAS,oBACtCh/B,KAAK4/D,wBAAwB/gC,KAAK,QAAS,2BAC3CV,OAAO,aAAa+C,KAAK,KACzB/C,OAAO,cAAc+C,KAAK,KAC1B/C,OAAO,aAAa+C,SAEpBlhC,KAAK4/D,wBAAwB3gC,YAAY,oBACzCj/B,KAAK4/D,wBAAwB5gC,SAAS,yBACtCh/B,KAAK4/D,wBAAwB/gC,KAAK,QAAS,6BAC3CV,OAAO,aAAayC,KAAK,KACzBzC,OAAO,cAAcyC,KAAK,KAC1BzC,OAAO,aAAayC,QAGxBC,YAAW,KACP7gC,KAAK8f,KAAK8yB,kBAAkBkpB,QAAQ,GACrC,KAEH97D,KAAK2/D,oBAAsB3/D,KAAK2/D,kBACpC,CAEAO,QAAQC,EAAkCC,GAAwB,GAE9D,IAAIC,EAAoB,gBAARF,EAAyB,UAAY,eAErDngE,KAAKy/D,WAAWU,GAAMnhC,SAAS,cAC/Bh/B,KAAKy/D,WAAWY,GAAWphC,YAAY,cAEvC,IACI6/B,EADW9+D,KAAK8f,KAAKkZ,KAAKiU,SACL6xB,UAErBwB,EAAWxB,EAAUqB,GACzBrB,EAAUyB,eAAiBJ,EAE3BngE,KAAK8f,KAAK0gD,aAAa5oD,YAAY0oD,EAASzoD,OAE5C7X,KAAK8f,KAAK/K,OAAOksC,YAAYqf,EAAStjB,UAElCh9C,KAAK0/D,cAAgBY,EAASZ,eACjB1/D,KAAK8f,KAAK8yB,kBAChB4P,UAAU,oCAAoCF,MACrDtiD,KAAK0/D,cAAgB1/D,KAAK0/D,cAG1BU,GAAcpgE,KAAKogE,cAE3B,CAEA5e,aAAaN,GACMlhD,KAAKygE,oBACXzjB,SAAWkE,EACpBlhD,KAAKogE,cACT,CAEAroD,SAASF,GACL,IAAIyoD,EAAWtgE,KAAKygE,oBACpBH,EAASzoD,MAAQA,EACjB7X,KAAK8f,KAAK0gD,aAAa5oD,YAAY0oD,EAASzoD,OAC5C7X,KAAKogE,cACT,CAEAM,qBACI,IAAIJ,EAAWtgE,KAAKygE,oBACpBH,EAASZ,cAAgBY,EAASZ,aACrB1/D,KAAK8f,KAAK8yB,kBAChB4P,UAAU,oCAAoCF,MACrDtiD,KAAKogE,cACT,CAEAK,oBACI,IAAI3B,EAAY9+D,KAAK8f,KAAKkZ,KAAKiU,SAAS6xB,UACxC,OAAOA,EAAUA,EAAUyB,eAC/B,CAEAH,eACIpgE,KAAK8f,KAAK8qB,eAAgB,CAC9B,CAEAu0B,eACI,IAAIlyB,EAAWjtC,KAAK8f,KAAKkZ,KAAKiU,SAED,MAAzBA,EAAoB,YACpBA,EAAoB,UAAI,CACpB0zB,QAAS,KACTC,aAAc,KACdL,eAAgB,YAIU,MAA9BtzB,EAAS6xB,UAAU6B,UACnB1zB,EAAS6xB,UAAU6B,QAAU,CACzB3jB,SAAU,GACV0iB,cAAc,EACd7nD,MAAO,QAGXo1B,EAAS6xB,UAAU8B,aAAe,CAC9B5jB,SAAU,GACV0iB,cAAc,EACd7nD,MAAO,SAEX7X,KAAKogE,gBAETpgE,KAAKkgE,QAAQjzB,EAAS6xB,UAAUyB,gBAAgB,EACpD,EC5IG,MAAMM,GAKTh9D,YAAoBic,GAAA,KAAAA,KAAAA,EAHpB,KAAAghD,mBAA0C,EAK1C,CAEA5pC,mBACIl3B,KAAK8gE,mBAAmBvgE,SAAQ4f,GAAKA,EAAE4gD,cAAe,IACtD/gE,KAAKqlC,MAAO,IAAI8b,MAAOC,SAC3B,CAEAphC,SAASrP,EAAwB9K,GAC7B,IAAIm7D,EAAchhE,KAAK8gE,mBAAmBjtC,MAAK1T,GAAKA,EAAExP,SAASvB,MAAQuB,EAASvB,MAAQ+Q,EAAExP,SAAStB,QAAUsB,EAAStB,SACnH2xD,EACCA,EAAYD,cAAe,EAE3B/gE,KAAK8gE,mBAAmB99D,KAAK,CAAC2N,SAAUA,EAAUswD,YAAajhE,KAAKqlC,KAAM07B,cAAc,EAAMl7D,OAAQA,GAE9G,CAEA4xB,iBACI,IAAI4N,GAAO,IAAI8b,MAAOC,UACtBphD,KAAK8gE,mBAAqB9gE,KAAK8gE,mBAAmBzwC,QAAOlQ,GAAKA,EAAE4gD,eAEhE,IAAIG,EAAwBlhE,KAAK8f,KAAKgX,2BAClCqqC,EAAanhE,KAAK8f,KAAK8yB,kBAAkB6N,cAAc5lB,WAE3D76B,KAAK8gE,mBAAmBzwC,QAAOlQ,GAAKklB,EAAOllB,EAAE8gD,YAAc,MAAM1gE,SAAQ4f,IAErE,IAAIihD,EAAsC,MAApBjhD,EAAEta,OAAO4wB,KAAKwC,IAAc9Y,EAAEta,OAAO4wB,KAAKwC,IAAMioC,EAAsBzqC,KAAKwC,GAE7FooC,EAAiE,CACjE,CACIhtD,MAAO,IAAId,OAAO+sC,MAAMngC,EAAExP,SAASvB,KAAM+Q,EAAExP,SAAStB,OAAQ8Q,EAAExP,SAASvB,KAAM+Q,EAAExP,SAAStB,QACxF8B,KAAM,IACNmwD,kBAAkB,IAI1B,GAAGF,GACIpuD,KAAKuuD,IAAIJ,EAAahhD,EAAExP,SAASvB,MAAQ,EAAE,CAC1C,IAAI2F,EAAS/U,KAAK8f,KAAK8yB,kBACvB,MAAMqE,EAAYliC,EAAOmiC,eACzBniC,EAAOwrC,aAAa,kBAAmB8gB,GACvCtsD,EAAOysD,aAAavqB,GACpBj3C,KAAK8gE,mBAAmBpsD,OAAO1U,KAAK8gE,mBAAmBtwD,QAAQ2P,GAAI,E,IAOnF,EC/DG,MAAMshD,GAIT59D,YAAoBic,EAAuB4hD,GAAvB,KAAA5hD,KAAAA,EAAuB,KAAA4hD,SAAAA,EAF3C,KAAAC,gBAAwC,IAAI3oD,GAI5C,CAEA4oD,UAEiB5hE,KAAK8f,KAAKsX,kBAEhB8uB,2BAA2B2b,IAE9B7hE,KAAKq5D,mCAAmC,GAGhD,CAEA1iC,QACI32B,KAAK0hE,SAASrwB,OAClB,CAEAgoB,oCACI,IAAIpO,EAASjrD,KAAK8f,KAAKsX,kBACnBmE,EAAYv7B,KAAK8f,KAAKyX,sBAC1B,GAAiB,MAAbgE,EACA,IAAK,IAAInd,KAAKmd,EAAUrF,YAAYM,YAAW,GAC3CpY,EAAEqY,KAAKC,OAAQ,EAIvB,IAAIhI,EAASJ,EAAMkB,uBAAuBy7B,EAAO17B,kBAAkBb,QAEnE1uB,KAAK0hE,SAASrwB,QAEd,IAAK,IAAIvpB,KAAS4G,EACd,GAAuB,mBAApB5G,EAAMzhB,WAAgC,CACrC,IAAIy7D,EAAS9hE,KAAK+hE,YAAYj6C,GAC9B9nB,KAAK0hE,SAASv/B,OAAO2/B,E,CAIjC,CAEAC,YAAYj6C,GACR,IAAIk6C,EAA4D,MAA9ChiE,KAAK2hE,gBAAgBtoD,IAAIyO,EAAMzhB,YAE7Cy7D,EAAS3jC,OACT,8FAEgB6jC,EAAc,0BAA4B,2LAG/Cl6C,EAAMzhB,oDAAoDyhB,EAAM0G,yFAK/EszC,EAAOjuC,KAAK,mBAAmB1I,GAAG,aAAa,KAC3CnrB,KAAK8f,KAAK83C,wBAAwBqK,UAAUn6C,EAAMzhB,WAAW,IAIjE,IAAI67D,EAAW/jC,OAAO,qCAEtB,IAAK,IAAI9uB,KAAUyY,EAAMtB,QAAS,CAC9B,IAAI27C,EAAQ9yD,EAAOse,aAAe,UAAY,aAE1Cy0C,EAAiB,GACI,MAArB/yD,EAAOyf,aACPszC,EAAiB,0FAA0F/yD,EAAOyf,WAAWhH,MAAMzhB,cAAcgJ,EAAOyf,WAAWzoB,oBAGvK,IAAI9G,EAAsB,MAAf8P,EAAO9P,KAAe,GAAK8P,EAAO9P,KAAKga,WAC9CoN,EAAkBtX,EAAOsX,QAAU,2CAA6C,GAChFc,EAAuBpY,EAAOoY,aAAe,qCAAqCpY,EAAOoY,qBAAuB,GAChH46C,EAAwBhzD,EAAOkX,gBAAkB,sDAAwD,GAEzG+7C,EAAUnkC,OAAO,sEAEHgkC,mCACP9yD,EAAOhJ,4DACW9G,4BACvB8iE,sBACAD,sBACAz7C,sBACAc,uCAGNy6C,EAAS//B,OAAOmgC,E,CAGpBR,EAAO3/B,OAAO+/B,GAEd,IAAIK,EAAcT,EAAOjuC,KAAK,kBAC1B4E,EAAOz4B,KAkBX,OAjBAuiE,EAAYp3C,GAAG,aAAchX,IACzBA,EAAEurB,kBACF,IAAI8iC,EAAcD,EAAYE,QAAQ,aAAa5uC,KAAK,kBACxC0uC,EAAYhV,SAAS,4BAEjCgV,EAAYtjC,YAAY,2BACxBsjC,EAAYvjC,SAAS,0BACrBwjC,EAAY5O,UAAU,KACtBn7B,EAAKkpC,gBAAgB/b,OAAO99B,EAAMzhB,cAElCk8D,EAAYtjC,YAAY,0BACxBsjC,EAAYvjC,SAAS,2BACrBwjC,EAAYzS,QAAQ,KACpBt3B,EAAKkpC,gBAAgBhoD,IAAImO,EAAMzhB,YAAY,G,IAI5Cy7D,CACX,ECjGG,MAAMY,GAcT7+D,YAAoBic,EAAwB0/C,GAAxB,KAAA1/C,KAAAA,EAAwB,KAAA0/C,kBAAAA,EAExCx/D,KAAK2iE,aAAexkC,OAAO,8DAC3Bn+B,KAAK4iE,gBAAkBzkC,OAAO,2DAE9B,IAAI4hC,EAAK//D,KAAK8f,KAAK4iC,mBAEnBqd,EAAGrhC,eAAe,UAAW,CAAC,iBAC1B,KACQqhC,EAAGjhC,SAAS,YAEZ9+B,KAAK8f,KAAK83C,wBAAwBiL,2B,GAGvC,0BAA2B7iE,KAAK2iE,cAGvC5C,EAAGhhC,UAAU,WAAU,GAEvBghC,EAAGrhC,eAAe,WAAY,CAAC,qBAC3B,KACQqhC,EAAGjhC,SAAS,aAEZ9+B,KAAK8f,KAAKw5C,mBAAmB/oB,U,GAGlC,uDAAwDvwC,KAAK4iE,iBAGpE7C,EAAGhhC,UAAU,YAAW,GAYxBygC,EAAkBr9B,OAAOniC,KAAK2iE,aAAc3iE,KAAK4iE,gBAgBrD,EC1EG,MAAME,GAkBTj/D,YAAoBic,EAAwBk8C,GAAxB,KAAAl8C,KAAAA,EAAwB,KAAAk8C,WAAAA,EAR5C,KAAA+G,eAAyB,IAIzB,KAAAC,oBAA4C,GAkN5C,KAAAprC,oBAAgC,GA+KxB,KAAAqrC,iBAA2B,EAC3B,KAAAC,mBAA6B,EA5XjCljE,KAAKmjE,eAAsBnH,EAAWnoC,KAAK,kBAC3C7zB,KAAKojE,WAAajlC,OAAO,+DACzBn+B,KAAKqjE,SAAWllC,OAAO,yIACvBn+B,KAAKsjE,YAAcnlC,OAAO,gEAE1Bn+B,KAAKmjE,eAAe9xB,QACpBrxC,KAAKmjE,eAAehhC,OAAOniC,KAAKojE,WAAYpjE,KAAKqjE,SAAUrjE,KAAKsjE,aAEhEtjE,KAAKmjE,eAAeviC,OAEpB,IAAIX,GAAgBC,OAAOC,aAAe,UAAY,SAAW,KAE7D1H,EAAOz4B,KACXA,KAAKojE,WAAWj4C,GAAG8U,GAAe9rB,IAC1BskB,EAAK8qC,eAAiB,IACtB9qC,EAAK8qC,eAAiBvwD,KAAK8H,IAAI2d,EAAK8qC,eAAiB9qC,EAAKsqC,eAAgB,GACtEtqC,EAAK8qC,eAAiB,KAAQ,IAC9B9qC,EAAK8qC,gBAAkBvwD,KAAKwwD,MAAM/qC,EAAK8qC,eAAiB9qC,EAAKsqC,gBAAkB,GAAKtqC,EAAKsqC,eAAiB,GAE9GtqC,EAAKgrC,cACLhrC,EAAKirC,kB,IAIb1jE,KAAKsjE,YAAYn4C,GAAG8U,GAAe9rB,IAC3BskB,EAAK8qC,eAAiBvjE,KAAK2jE,cAAgBlrC,EAAKsqC,eAAiB,IACjEtqC,EAAK8qC,eAAiBvwD,KAAK4wD,IAAInrC,EAAK8qC,eAAiB9qC,EAAKsqC,eAAgBtqC,EAAKkrC,cAAgBlrC,EAAKsqC,eAAiB,GACrHtqC,EAAKgrC,cACLhrC,EAAKirC,kB,GAIjB,CAEOG,sBAAsBC,GACzB9jE,KAAKgjE,oBAAoBhgE,KAAK8gE,EAClC,CAEQJ,kBACJ1jE,KAAKojE,WAAW5Q,YAAY,YAAaxyD,KAAKujE,eAAiB,GAC/DvjE,KAAKsjE,YAAY9Q,YAAY,YAAaxyD,KAAKujE,eAAiBvjE,KAAK2jE,cAAgB3jE,KAAK+iE,eAAiB,EAC/G,CAEAF,4BAEI,IAAI18B,EAAanmC,KAAK+jE,0BAA0B1zC,QAAO9O,GAAMA,EAAGG,IAAIniB,MAAQ2G,EAAU0c,oBAEtF,GAAyB,GAArBujB,EAAW5iC,OAAa,OAE5B,IAAIygE,EAA4B79B,EAAW89B,MAAK1iD,GAAMvhB,KAAKkkE,eAAe3iD,KACtE4iD,EAA8Bh+B,EAAW89B,MAAK1iD,GAAMvhB,KAAKokE,iBAAiB7iD,KAC1Ega,EAAYv7B,KAAK8f,KAAKyX,sBACtB8V,EAAW9R,EAAU8R,SAErB22B,GAAoBzoC,EAAUmW,aAAe,EAC7CjI,MAAM,wEAIN06B,GAA+C,GAAzB5oC,EAAUmW,YAChCjI,MAAM,oFAINu6B,GAAoBG,EAChBnkE,KAAK8f,KAAK+Y,aACV74B,KAAKqkE,kCAAkC9oC,EAAW4K,EAAYkH,GAG9DrtC,KAAKskE,qCAAqC/oC,EAAW4K,EAAYkH,GAIrErtC,KAAKukE,kBAAkBp+B,EAAY,EAAG,IAAI,QAGlD,CAEAk+B,kCAAkC9oC,EAAsB4K,EAA4BkH,GAChF,IAAIm3B,EAAyD,GAC7DxkE,KAAKukE,kBAAkBp+B,EAAY,EAAGq+B,GAAwC,KAErB,GAAjDA,EAAuCjhE,SAG3CvD,KAAK8f,KAAK2kD,sBAAsB7C,UAEhC5hE,KAAKgjE,oBAAoBziE,SAAQujE,GAAYA,EAASY,OAAOF,KAAwC,GAE7G,CAEQF,qCAAqC/oC,EAAsB4K,EAA4BkH,GAC3F,IAAIvtB,EAAmB9f,KAAK8f,KAE5BA,EAAKsZ,eAAe+T,iBAAiB5R,GAAW,CAACopC,EAAgBC,KAE7D9kD,EAAKs5C,SAASyL,qBAAqBF,EAAgBC,GAAqB,SACpE,KAEI,IAAIJ,EAAyD,GAC7DxkE,KAAKukE,kBAAkBp+B,EAAY,EAAGq+B,GAAwC,KAErB,GAAjDA,EAAuCjhE,QAI3Cuc,EAAKsZ,eAAeoU,sBAAsBjS,EAAWipC,EAAuCrqD,KAAIoH,GAAuB,MAAjBA,EAAGqmC,WAAqBrmC,EAAG4kC,IAAM5kC,EAAGqmC,cAAa,CAACna,EAAmBC,KAIvKD,EAAkBltC,SAAQghB,GAAM8rB,EAASlH,WAAWnjC,KAAKue,KACzDvhB,KAAK8f,KAAKw5C,mBAAmBwL,iBAAiBr3B,GAC9C,IAAIs3B,EAAsBP,EAAuCrqD,KAAIoH,GAAuB,MAAjBA,EAAGqmC,WAAqBrmC,EAAG4kC,IAAM5kC,EAAGqmC,aAC/Gva,EAASlH,WAAakH,EAASlH,WAAWzsB,OAAOqrD,GACjD/kE,KAAK8f,KAAKw5C,mBAAmBwL,iBAAiBC,GAC9C13B,EAAShS,QAAUqS,EAIfD,EAAkBlqC,OAAS,EAE3BvD,KAAKglE,cAAc33B,GAInBvtB,EAAK2kD,sBAAsB7C,S,GAIjC,GACJ,IACH,EAAM,GAErB,CAEAoD,cAAc33B,GACVrtC,KAAK8f,KAAKsX,kBAAkB8tB,iBAAiB7X,EAAS/G,aAAc+G,EAASlH,YAAY,KACrFnmC,KAAK8f,KAAK2kD,sBAAsB7C,SAAS,GAEjD,CAEAqD,wBAAwB9+B,EAAsB++B,EAAmBljC,GACpC,GAArBmE,EAAW5iC,QAKX2hE,EAAY/+B,EAAW5iC,OACvBvD,KAAK8f,KAAKsX,kBAAkB6uB,aAAa9f,EAAW++B,IAC/CzgB,IAAczkD,KAAKilE,wBAAwB9+B,EAAY++B,EAAY,EAAGljC,EAAS,IAC/E5gC,IAAY2iC,QAAQgF,IAAI,kCAAoC5C,EAAW++B,GAAa,aAAe9jE,GAAQpB,KAAKilE,wBAAwB9+B,EAAY++B,EAAY,EAAGljC,EAAS,IAPjLA,GAWR,CAGAuiC,kBAAkBp+B,EAA4BvhB,EAAeugD,EAAyDnjC,EAAsBvyB,EAAyB,IAEjK,GAAImV,GAASuhB,EAAW5iC,OAIpB,OAHAvD,KAAKolE,WAAW31D,QAEhBuyB,IAIJ,IAAIvP,EAAY0T,EAAWvhB,GAGvBygD,EAAY,KACZrlE,KAAKukE,kBAAkBp+B,EAAYvhB,EAAQ,EAAGugD,EAAyCnjC,EAAUvyB,EAAO,EAG5G,GAAqB,MAAjBgjB,EAAU/Q,IAKd,GAAI+Q,EAAU/Q,IAAIniB,MAAQ2G,EAAUkB,cAAe,CAC/C,IAAIk+D,GAA6B,EACjC,IAAK,IAAIjuD,EAAIuN,EAAQ,EAAGvN,EAAI8uB,EAAW5iC,OAAQ8T,IAAKiuD,EAAoBA,GAAqBtlE,KAAKulE,kBAAkBp/B,EAAW9uB,IAC/H,GAAIiuD,EACAD,QACG,CACH,GAA+B,MAA3B5yC,EAAU/Q,IAAIwI,UAAmB,CAEjC,IADAuI,EAAU0zB,IAAIvF,YACPnuB,EAAU0zB,IAAItF,SAAS,MAAQpuB,EAAU0zB,IAAItF,SAAS,OAASpuB,EAAU0zB,IAAItF,SAAS,OACzFpuB,EAAU0zB,IAAM1zB,EAAU0zB,IAAIp0C,UAAU,EAAG0gB,EAAU0zB,IAAI5iD,OAAS,GAClEkvB,EAAU0zB,IAAIvF,YAElBnuB,EAAU0zB,KAAO,e,CAErBnmD,KAAK8f,KAAKsX,kBAAkB6uB,aAAaxzB,EAAU0zB,KAC9C1B,IAAczkD,KAAKwlE,qBAAqB/yC,EAAU0zB,IAAK1B,GAAU4gB,GAAW,IAC5EjkE,IAAYqO,EAAOzM,KAAK,CAAEyvB,UAAWA,EAAW9S,QAASve,IAAUikE,GAAW,G,MAEpF,CACH,IAAIlf,GAAM,IAAIsB,IAAmBE,MAAMl1B,GACvCsR,QAAQgF,IAAIod,GACZnmD,KAAK8f,KAAKsX,kBAAkB6uB,aAAaE,GAAM1B,IAAc0gB,EAAwCniE,KAAKyvB,GAAY4yC,GAAW,IAAMjkE,IAAYqO,EAAOzM,KAAK,CAAEyvB,UAAWA,EAAW9S,QAASve,IAAUikE,GAAW,G,MAzBrNA,GA4BR,CAGAI,qBAAqBh2D,GAEjB,IAAIi2D,EAAgB,CAChB,MAAS,UACT,QAAW,UACX,KAAQ,WAKR5tB,GAF8C93C,KAAK8f,KAAK8yB,kBAEjB,IACvCgQ,EAAqD,GACzD,IAAK,IAAIxhD,KAASqO,EAAQ,CACtB,IAEIk2D,EACAC,EASAhmD,EAZAimD,EAAa,QAIbC,EAAuBJ,EAAcG,GAEzC,OAAQA,GACJ,IAAK,QAASF,EAA4B,qBAAsBC,EAAkB,qBAAsB,MACxG,IAAK,UAAWD,EAA4B,uBAAwBC,EAAkB,uBAAwB,MAC9G,IAAK,OAAQD,EAA4B,oBAAqBC,EAAkB,oBAIpF,OAAQC,GACJ,IAAK,QAASjmD,EAAWrM,OAAOsM,eAAere,MAAO,MACtD,IAAK,UAAWoe,EAAWrM,OAAOsM,eAAekmD,QAAS,MAC1D,IAAK,OAAQnmD,EAAWrM,OAAOsM,eAAemmD,KAGlDluB,EAAQ90C,KAAK,CACTuR,gBAAiBnT,EAAMqxB,UAAU9Q,KAAKvS,KACtCqF,YAAarT,EAAMqxB,UAAU9Q,KAAKtS,OAClCiF,cAAelT,EAAMqxB,UAAU7Q,GAAGxS,KAClCoF,UAAWpT,EAAMqxB,UAAU7Q,GAAGvS,OAC9BsQ,QAASve,EAAMue,QACfC,SAAUA,IAGdgjC,EAAY5/C,KAAK,CACbqR,MAAO,CACHE,gBAAiBnT,EAAMqxB,UAAU9Q,KAAKvS,KACtCqF,YAAarT,EAAMqxB,UAAU9Q,KAAKtS,OAClCiF,cAAelT,EAAMqxB,UAAU7Q,GAAGxS,KAClCoF,UAAWpT,EAAMqxB,UAAU7Q,GAAGvS,QAElCyE,QAAS,CACL6xD,0BAA2BA,EAC3BvnB,QAAS,CACLztC,SAAU4C,OAAOwB,OAAOuuC,gBAAgBC,OACxC/iB,MAAOslC,K,CASvB,IAAIlyD,EAAQ5T,KAAK8f,KAAKgX,2BAA2BljB,MACjDL,OAAOwB,OAAOkxD,gBAAgBryD,EAAO,OAAQkkC,GAC7C93C,KAAK43B,oBAAsBhkB,EAAM+uC,iBAAiB3iD,KAAK43B,oBAAqBgrB,EAEhF,CAEAqf,UAAU57D,GACN,IAAIosB,EAAY,iBAAmBpsB,EAAa,IAChDrG,KAAK8f,KAAKsX,kBAAkB6uB,aAAaxzB,GACpCgyB,IAAczkD,KAAKwlE,qBAAqB/yC,EAAWgyB,EAAQ,IAC3DrjD,IAAD,GACR,CAIAgkE,WAAW31D,GACP,IAAIy2D,EAAoBlmE,KAAKg8D,WAAWnoC,KAAK,iBACzCsyC,EAA2BnmE,KAAKg8D,WAAWnoC,KAAK,wBAKpD,GAHAqyC,EAAkB70B,QAClBrxC,KAAKylE,qBAAqBh2D,GAEL,GAAjBA,EAAOlM,OAAa,OAExB,IAAI08B,EAAeC,OAAOC,aAAe,UAAY,QACrDgmC,EAAyB7nC,QAAQ2B,EAAe,QAEhD,IAAImmC,EAAajoC,OAAO,oCACxB+nC,EAAkB/jC,OAAOikC,GAEzB,IAAK,IAAIhlE,KAASqO,EAAQ,CACtB,IAAI6b,EAAQlqB,EAAMqxB,UAAU0zB,IAC5B76B,EAAQA,EAAMxc,QAAQ,MAAO,KAC7Bwc,EAAQA,EAAMxc,QAAQ,SAAU,KAEhC,IAAIu3D,EAAaloC,OAAO,uFACxBioC,EAAWjkC,OAAOkkC,GAElBA,EAAWl7C,GAAG8U,EAAe,QAAQ,KACjC,IAAI5rB,EAAQ,CACRI,YAAarT,EAAMqxB,UAAU9Q,KAAKtS,OAAQkF,gBAAiBnT,EAAMqxB,UAAU9Q,KAAKvS,KAChFoF,UAAWpT,EAAMqxB,UAAU7Q,GAAGvS,OAAQiF,cAAelT,EAAMqxB,UAAU7Q,GAAGxS,MAG5EpP,KAAK8f,KAAK8yB,kBAAkB0zB,oBAAoBjyD,GAChD+xD,EAAWvyC,KAAK,kBAAkBoL,YAAY,aAC9ConC,EAAWrnC,SAAS,YAAY,IAKpC,IAAIunC,EAAUpoC,OAAO,4CACrBkoC,EAAWlkC,OAAOokC,GAElBhzD,OAAOwB,OAAOyxD,SAASl7C,EAAO,SAAU,CAAC,GAAGpqB,MACvC23C,IAAW0tB,EAAQ1tB,KAAKA,EAAK,IAElC,IAAI4tB,EAActoC,OAAO,mCAAqC/8B,EAAMue,QAAU,UAC9E0mD,EAAWlkC,OAAOskC,E,CAItBzmE,KAAKg8D,WAAWnoC,KAAK,kBAAkBoL,YAAY,aACnDknC,EAAyBnnC,SAAS,aAClCknC,EAAkBlnC,SAAS,YAE/B,CAEAumC,kBAAkB9yC,GACd,OAAwB,MAAjBA,EAAU/Q,KAAe+Q,EAAU/Q,IAAIniB,MAAQ2G,EAAUkB,aACpE,CAEA88D,eAAezxC,GACX,OAAwB,MAAjBA,EAAU/Q,KAAe,CAACxb,EAAU0B,cAAe1B,EAAUiC,YAAajC,EAAUc,cAAcwJ,QAAQiiB,EAAU/Q,IAAIniB,OAAS,CAC5I,CAEA6kE,iBAAiB3xC,GACb,OAAwB,MAAjBA,EAAU/Q,KAAe,CAACxb,EAAUmB,cAAenB,EAAUiB,cAAejB,EAAUsB,eAAegJ,QAAQiiB,EAAU/Q,IAAIniB,OAAS,CAC/I,CAEQimE,qBAAqBl6C,EAAem5B,GACxC,IAAIiiB,EAAoB1mE,KAAKg8D,WAAWnoC,KAAK,wBACzC8yC,EAAgB3mE,KAAKg8D,WAAWnoC,KAAK,qBAErCoM,EAAeC,OAAOC,aAAe,UAAY,QACrDumC,EAAkBpoC,QAAQ2B,EAAe,QACzCjgC,KAAKgB,OAASyjD,EAAQ//C,MAEtB,IAAIkiE,EAAYD,EAIhBr7C,GADAA,GADAA,EAAQA,EAAMxc,QAAQ,MAAO,MACfA,QAAQ,SAAU,MAClBA,QAAQ,gBAAiB,IAEvCyE,OAAOwB,OAAOyxD,SAASl7C,EAAO,SAAU,CAAC,GAAGpqB,MACvC23C,IAAW+tB,EAAU/tB,KAAKA,EAAK,IAEpC74C,KAAK2jE,cAAgB3jE,KAAKgB,OAAShB,KAAKgB,OAAOZ,OAAOmD,OAAS,EAC/DvD,KAAKqjE,SAASxvC,KAAK,sBAAsBglB,KAAK,GAAG74C,KAAK2jE,iBACtD3jE,KAAKujE,eAAiB,EACtBvjE,KAAKmjE,eAAejiC,OACpBlhC,KAAK0jE,kBAEL1jE,KAAKyjE,aAET,CAEO9sC,QACY32B,KAAKg8D,WAAWnoC,KAAK,mBAC3Bwd,QACTrxC,KAAKmjE,eAAeviC,MACxB,CAKQ6iC,cACJ,IAAIoD,EAAW7mE,KAAKg8D,WAAWnoC,KAAK,mBAEpC,GAAmB,MAAf7zB,KAAKgB,OAGL,OAFAhB,KAAKqjE,SAASxvC,KAAK,yBAAyBglB,KAAK,YACjDguB,EAAShuB,KAAK,sDAIlB,IAAIpgB,EAAOz4B,KACP2hB,EAA6B,GAAtB3hB,KAAK2jE,cAAqB,EAAI3jE,KAAKujE,eAC1C3hD,EAA2B,GAAtB5hB,KAAK2jE,cAAqB,EAAI3wD,KAAK4wD,IAAI5jE,KAAKujE,eAAiBvjE,KAAK+iE,eAAiB,EAAG/iE,KAAK2jE,eAGpG,GAFA3jE,KAAKqjE,SAASxvC,KAAK,yBAAyBglB,KAAK,GAAGl3B,KAAQC,KAExD5hB,KAAKijE,gBAAiB,CACtB,GAAIjjE,KAAKkjE,kBACL,OAEJljE,KAAKkjE,mBAAoB,EACzB,IAAI4D,EAAe,KACXruC,EAAKwqC,gBACLpiC,YAAW,KACPimC,GAAc,GACf,MAEHruC,EAAKyqC,mBAAoB,EACzBzqC,EAAKgrC,c,EAIb,YADA5iC,WAAWimC,EAAc,I,CAI7B9mE,KAAKijE,iBAAkB,EAEvB,IAAInB,EAAS3jC,OAAO,mBAChB4oC,EAAU5oC,OAAO,aACrB2jC,EAAO3/B,OAAO4kC,GAEd/mE,KAAKgB,OAAOwlB,QAAQjmB,SAAS8O,IAAa03D,EAAQ5kC,OAAOhE,OAAO,YAAY9uB,gBAAqB,IAEjG,IAAI23D,EAAOhnE,KAAKgB,OAAOZ,OAAO0E,MAAM9E,KAAKujE,eAAiB,EAAGvjE,KAAKujE,eAAiBvjE,KAAK+iE,eAAiB,GAErGv/D,EAAI,EACJ03B,EAAI,KACJ,GAAI13B,EAAIwjE,EAAKzjE,OAAQ,CACjB,IAAK,IAAI8T,EAAI7T,EAAG6T,EAAIrE,KAAK4wD,IAAIpgE,EAAI,IAAKwjE,EAAKzjE,QAAS8T,IAAK,CACrD,IAAIstC,EAAMqiB,EAAK3vD,GACX4vD,EAAO9oC,OAAO,aAClB2jC,EAAO3/B,OAAO8kC,GACdtiB,EAAIpkD,SAAS2mE,IAAWD,EAAK9kC,OAAOhE,OAAO,OAAO+oC,UAAa,G,CAEnE1jE,EAAIwP,KAAK4wD,IAAIpgE,EAAI,IAAKwjE,EAAKzjE,QACvBC,EAAIwjE,EAAKzjE,OACTs9B,WAAW3F,EAAG,KAEd2rC,EAASx1B,QAAQlP,OAAO2/B,GACxB9hE,KAAKijE,iBAAkB,E,GAKnC/nC,GAUJ,CAGA6oC,0BACI,IAAIl+D,EAAS7F,KAAK8f,KAAKgX,2BACvB,GAAc,MAAVjxB,EAAgB,OAAO,KAE3B,IAAIshE,EAAennE,KAAK8f,KAAK8yB,kBAIzBzM,EAA6BtgC,EAAOw0B,4BAA4B8sC,EAAajwB,gBACjF,IAAK,IAAIzkB,KAAa0T,EAClB1T,EAAU0zB,IAAMghB,EAAahxB,WAAWjD,gBAAgB,CACpDz+B,YAAage,EAAU9Q,KAAKtS,OAC5BkF,gBAAiBke,EAAU9Q,KAAKvS,KAAMoF,UAAWie,EAAU7Q,GAAGvS,OAAQiF,cAAeme,EAAU7Q,GAAGxS,OAM1G,OAAO+2B,CAEX,EAjec,GAAAihC,mBAA6B,QC3BxC,MAAMC,GAOTxjE,YAAmBic,GAAA,KAAAA,KAAAA,EAJnB,KAAAwnD,QAAkB,EAqDlB,KAAA5/B,eAA2B,GAwG3B,KAAA6/B,WAAqB,EAcrB,KAAAC,QAAkB,EA2ClB,KAAAC,eAAyB,EASzB,KAAAC,gBAA0B,CAtN1B,CAEA//B,QAAQpM,GAEJ,IAAI9C,EAAOz4B,KACXA,KAAKu7B,UAAYA,EACjBv7B,KAAKqtC,SAAW9R,EAAU8R,SAEtBrtC,KAAKsnE,QACLtnE,KAAKgoC,WAAW8Q,QAGpB7T,GAAK,oBAAqB,CAAC,GAAIU,IAE3B,IAAInB,GAAetE,OAAO0H,SAASC,SAASC,WAAW,SAAW,SAAW,SAAW5H,OAAO0H,SAASG,KAAO,qBAC/G/nC,KAAKgoC,WAAa,IAAIC,UAAUzD,GAEhCxkC,KAAKgoC,WAAWE,QAAW9mC,IAAmBpB,KAAKmoC,QAAQ/mC,EAAM,EACjEpB,KAAKgoC,WAAWI,QAAWhK,IAAwBp+B,KAAKqoC,QAAQjK,EAAM,EACtEp+B,KAAKgoC,WAAWM,UAAalK,IAA0Bp+B,KAAKuoC,UAAUnK,EAAM,EAE5Ep+B,KAAKgoC,WAAWQ,OAAUpK,IACtB,IAAI4G,EAAmC,CACnCyD,QAAS,EACT10B,MAAO4xB,EAAS5xB,MAChBi4B,YAAazQ,EAAUtC,GACvB0N,WAAYpL,EAAU8R,SAASpU,GAC/B0uC,gBAAiBpsC,EAAU8R,SAAShS,SAGxCr7B,KAAKsnE,QAAS,EACdtnE,KAAK0oC,WAAWnD,KAAKC,UAAUR,IAC/BhlC,KAAK4nE,QAAQ,EAIjB/mC,YAAW,KACPpI,EAAKovC,kBAAkB,GACxB,IAAK,GAIhB,CAGAn/B,WAAW/oB,GAEP,GAAK3f,KAAKsnE,OAGN,IACItnE,KAAKgoC,WAAWc,KAAKnpB,E,CACvB,MAAOza,GACL6+B,QAAQgF,IAAI7jC,E,MALhBlF,KAAK0nC,eAAe1kC,KAAK2c,EAQjC,CAEA0oB,QAAQjK,GACJp+B,KAAKsnE,QAAS,CAClB,CAGAz+B,aAII7oC,KAAK0oC,WAAWnD,KAAKC,UAHqB,CACtCiD,QAAS,KAGbzoC,KAAKgoC,WAAW8Q,QAChB94C,KAAKu7B,UAAY,IACrB,CAEAgN,UAAUnK,GAEN,IAAI3F,EAAOz4B,KACP2lC,EAA8BJ,KAAKpnB,MAAMigB,EAAM4E,MACnD,GAAwBhmC,MAApB2oC,EAAS8C,QAEb,OAAQ9C,EAAS8C,SACb,KAAK,EACDhQ,EAAKosC,qBAAqBl/B,EAAS2H,cAAe3H,EAAS4H,wBAAwB,KAC/E,IAAIvI,EAA4C,CAAEyD,QAAS,EAAGk/B,gBAAiBlvC,EAAK4U,SAAShS,SAC7F5C,EAAKiQ,WAAWnD,KAAKC,UAAUR,GAAS,IAE5C,MACJ,KAAK,EACDhlC,KAAKsnE,QAAS,EACdtnE,KAAKqtC,SAAW,KAChBrtC,KAAKu7B,UAAY,KACjB,MACJ,KAAK,EACD,MACJ,KAAK,EACGv7B,KAAKqtC,SAAShS,QAAUsK,EAAS+H,aACjC1tC,KAAK8f,KAAKw5C,mBAAmBwO,cAAcniC,EAAS+H,aAIpE,CAEAm3B,qBAAqBv3B,EAAyBC,EAAgCw6B,EAAwCC,EAA6B,SAAWC,GAAqC,GAC/L,GAAqB,MAAjBjoE,KAAKqtC,SAAkB,OAC3B,IAAI5U,EAAOz4B,KACP2U,EAAQ44B,GAA0BvtC,KAAKqtC,SAAShS,QAAU,GAC9D,GAAI1mB,EAAQ,EAGR,OAFAozD,SACAC,IAEG,CACCrzD,EAAQ,IACR24B,EAAc54B,OAAO,GAAIC,GACzB44B,GAA0B54B,GAE9B,IAAIwxB,EAAamH,EACbnH,EAAW5iC,OAAS,EACpBvD,KAAK8f,KAAKw/C,mBAAmB2F,wBAAwB9+B,EAAY,GAAG,KAChE1N,EAAK3Y,KAAKw5C,mBAAmBwL,iBAAiB3+B,GAC9C1N,EAAK4U,SAASlH,WAAa1N,EAAK4U,SAASlH,WAAWzsB,OAAOysB,GAC3D1N,EAAK4U,SAAShS,QAAUkS,EAAyBD,EAAc/pC,OAAS,EACpE0kE,GACAxvC,EAAK3Y,KAAK63C,iBAAiBiK,UAE/BoG,GAAgB,IAGpBA,G,CAIZ,CAGA7/B,QAAQ/mC,GACR,CAEAwmE,SACI5nE,KAAKsnE,QAAS,EACVtnE,KAAK0nC,eAAenkC,OAAS,IAC7BvD,KAAK0nC,eAAennC,SAAQ6d,GAAKpe,KAAK0oC,WAAWtqB,KACjDpe,KAAK0nC,eAAiB,GAE9B,CAQAwgC,eACQloE,KAAKunE,YACTvnE,KAAKunE,WAAY,EAEjBvnE,KAAKmoE,OAET,CAQAA,OACI,IAAI1vC,EAAOz4B,KACX6gC,YAAW,KACPpI,EAAK0vC,MAAM,GACZ,KAEE1vC,EAAK6uC,QAA4B,MAAlB7uC,EAAK8C,YACrBv7B,KAAKooE,uBAGL3vC,EAAK+uC,UACe,IAAhB/uC,EAAK+uC,UACL/uC,EAAK+uC,QAAU,EACf/uC,EAAKkP,QAAQlP,EAAK8C,YAI9B,CAEA6sC,uBACI,IAAI3vC,EAAOz4B,KACW,MAAlBA,KAAKu7B,WAAsC,MAAjBv7B,KAAKqtC,UAOnCpI,GAAK,mBALkC,CACnC+G,YAAahsC,KAAKu7B,UAAUtC,GAC5BmU,eAAgBptC,KAAKu7B,UAAU8R,SAAShS,UAGTsK,IAEE,MAA9BA,EAAS0iC,kBACR5vC,EAAK3Y,KAAKw5C,mBAAmBwO,cAAcniC,EAAS0iC,mBAEpD5vC,EAAKosC,qBAAqBl/B,EAAS2H,cAAe3H,EAAS4H,wBAAwB,KAC/E9U,EAAK2vC,sBAAsB,G,GAM3C,CAGAP,mBACQ7nE,KAAKynE,gBACTznE,KAAKynE,eAAgB,EAErBznE,KAAKsoE,WAET,CAGAA,WACI,IAAI7vC,EAAOz4B,KAEX,GAAKy4B,EAAK6uC,QAA4B,MAAlB7uC,EAAK8C,UA2CrBsF,YAAW,KACPpI,EAAK6vC,UAAU,GAChB,SA7CqC,CACxC,IAAItjC,EAA8C,CAC9CgH,YAAavT,EAAK8C,UAAUtC,IAGhCqM,EAAEL,KAAK,CACH1lC,KAAM,OACN4E,OAAO,EACP6+B,KAAMuC,KAAKC,UAAUR,GACrBS,YAAa,mBACbjB,IAAK,sCACLkB,QAAS,SAAU6iC,G,MACfxkC,QAAQgF,IAAIw/B,GACZ,IAAI5iC,EAAuD,iBAAR4iC,EAAmBhjC,KAAKpnB,MAAMoqD,GAAQA,EACzF,GAAY,MAARA,IAAiB9vC,EAAK6uC,SAAwB,QAAd,EAAA7uC,EAAK8C,iBAAS,eAAEtC,KAAM+L,EAAQgH,aAAerG,EAASD,QAAS,CAC/FjN,EAAKosC,qBAAqBl/B,EAAS2H,cAAe3H,EAAS4H,wBAAwB,KAC/E9U,EAAK2vC,sBAAsB,IAG/B,IAAII,EAAkB,IAEtB/vC,EAAKivC,kBACuB,IAAxBjvC,EAAKivC,kBACLjvC,EAAKivC,gBAAkB,EACvBjvC,EAAKkP,QAAQlP,EAAK8C,WAClBitC,EAAU,KAGd3nC,YAAW,KACPpI,EAAK6vC,UAAU,GAChB,I,CAEX,EACAlnE,MAAO,SAAUykC,EAAOlmB,G,MACf8Y,EAAK6uC,SAAwB,QAAd,EAAA7uC,EAAK8C,iBAAS,eAAEtC,KAAM+L,EAAQgH,aAC9CnL,YAAW,KACPpI,EAAK6vC,UAAU,GAChB,IAEX,G,CASZ,EC9RG,MAAMG,GAOT5kE,YAAoB6kE,GAAA,KAAAA,SAAAA,EALpB,KAAA9K,SAAmB,EACnB,KAAA+K,gBAA0B,EAKtBD,EAASroC,IAAI,UAAW,QACxBrgC,KAAK4oE,iBAAmBF,EAAS70C,KAAK,oBACtC7zB,KAAK6oE,qBAAuBH,EAAS70C,KAAK,uBAC9C,CAEAqN,KAAKvhB,GACD3f,KAAK2oE,gBAAiB,EACtB3oE,KAAK4oE,iBAAiB/vB,KAAKl5B,GAC3B3f,KAAK6oE,qBAAqBhwB,KAAK,IAC3B74C,KAAK49D,UACL59D,KAAK49D,SAAU,EACf59D,KAAK0oE,SAASroC,IAAI,UAAW,QAC7BrgC,KAAK0oE,SAAS9nC,OACd5gC,KAAK0oE,SAAS3vB,OAAO,KAE7B,CAEAgN,YAAYpmC,GACR3f,KAAK6oE,qBAAqBhwB,KAAKl5B,EACnC,CAEAihB,OACO5gC,KAAK49D,UACJ59D,KAAK2oE,gBAAiB,EACtB9nC,YAAW,KACJ7gC,KAAK2oE,iBACJ3oE,KAAK2oE,gBAAiB,EACtB3oE,KAAK0oE,SAAS1vB,QAAQ,KAAK,KACvBh5C,KAAK0oE,SAASroC,IAAI,UAAW,OAAO,IAExCrgC,KAAK49D,SAAU,E,GAEpB,IAEX,EC9BG,MAAMkL,GAITjlE,YAAoBic,EAAwBipD,GAAxB,KAAAjpD,KAAAA,EAAwB,KAAAipD,cAAAA,EAF5C,KAAAC,aAAoC,EAIpC,CAEAryC,QACI32B,KAAK+oE,cAAc13B,QACnBrxC,KAAK8f,KAAK4iC,mBAAmB3jB,UAAU,YAAY,GACnD/+B,KAAKgpE,aAAe,EACxB,CAEAzP,uBAAuBpzB,GACnBnmC,KAAK22B,QACL32B,KAAK8kE,iBAAiB3+B,GACtBnmC,KAAK8f,KAAK4iC,mBAAmB3jB,UAAU,WAAYoH,EAAW5iC,OAAS,EAC3E,CAEAuhE,iBAAiB3+B,GACbA,EAAW5lC,SAAQk6B,IACf,IAAIwuC,EAAajpE,KAAKkpE,eAAezuC,EAAMz6B,KAAKgpE,aAAazlE,OAAS,GACtEvD,KAAK+oE,cAAcvX,QAAQyX,EAAW9V,MACtCnzD,KAAKgpE,aAAax/C,QAAQy/C,EAAW,IAGtC9iC,EAAW5iC,OAAS,GACnBvD,KAAK8f,KAAK4iC,mBAAmB3jB,UAAU,YAAY,GAGvD/+B,KAAKmpE,sBACT,CAEAA,uBACInpE,KAAKgpE,aAAazoE,SAAQmkC,GAAMA,EAAG0kC,gBAAgBnqC,YAAY,eAE3Dj/B,KAAKgpE,aAAazlE,OAAS,GAC3BvD,KAAKgpE,aAAa,GAAGI,gBAAgBpqC,SAAS,YAEtD,CAEAkqC,eAAez2C,EAAmB7N,GAC9B,IAAIuuC,EAA+Bh1B,OAAO,qCACtCkrC,EAASlrC,OAAO,mCAAmCvZ,YACnD0kD,EAAQnrC,OAAO,yCACf/sB,EAAYqhB,EAAU1gB,UAAU,EAAGiB,KAAK4wD,IAAI,IAAKnxC,EAAUlvB,SAC3DkvB,EAAUlvB,OAAS,MACnB6N,GAAK,OAETk4D,EAAMn4D,KAAKC,GACX,IAAIm4D,EAAsCprC,OAAO,mHAC7CqrC,EAA0CrrC,OAAO,uFAGrDorC,EAAYp+C,GAAG,SAAS,KACpBwY,GAAoBlR,EAAU,IAGlC,IAAIwN,EAAeC,OAAOC,aAAe,UAAY,QAmBrD,OAjBAqpC,EAAgBr+C,GAAG8U,EAAe,MAAOc,IACrCA,EAAGpB,iBACHyB,GAAgB,CAAC,CACbQ,QAAS,YACTI,SAAU,QAEX,CACCJ,QAAS,gCACTpB,MAAO,UACPwB,SAAU,KACNhiC,KAAKuwC,UAAU,IAEnBxP,EAAGqzB,MAAQ,EAAGrzB,EAAGszB,MAAQ,GAC7BtzB,EAAGrB,iBAAiB,IAGxByzB,EAAKhxB,OAAOknC,EAAQC,EAAOC,EAAaC,GACjC,CACHrW,KAAMA,EACN1gC,UAAWA,EACX22C,gBAAiBI,EAEzB,CAEAj5B,WACoC,GAA5BvwC,KAAKgpE,aAAazlE,SAElBvD,KAAK8f,KAAK+Y,cACV74B,KAAKypE,mBACLzpE,KAAK8f,KAAK4iC,mBAAmB3jB,UAAU,WAAY/+B,KAAKgpE,aAAazlE,OAAS,IAEvDvD,KAAK8f,KACvBsZ,eAAemX,UAAS,CAACnvC,EAAesoE,KAC5B,MAATtoE,GAAiBsoE,GACjB1pE,KAAK8nE,e,IAMrB,CAEAA,cAAcp6B,GACV,IAAIL,EAAWrtC,KAAK8f,KAAKyX,sBAAsB8V,SAG/C,IAFkB,MAAfK,IAAqBA,EAAcL,EAAShS,QAAU,GAEnDgS,EAAShS,QAAUqS,GACrBL,EAASlH,WAAWzhC,MACpB2oC,EAAShS,UAEbr7B,KAAK8f,KAAKsX,kBAAkB8tB,iBAAiB7X,EAAS/G,aAAc+G,EAASlH,YAAY,SAEtF,KACCnmC,KAAK8f,KAAK2kD,sBAAsBpL,oCACXr5D,KAAKgpE,aAAahjB,QACxBmN,KAAKlyB,SACpBjhC,KAAKmpE,uBACLnpE,KAAK8f,KAAK4iC,mBAAmB3jB,UAAU,WAAY/+B,KAAKgpE,aAAazlE,OAAS,EAAE,GAExF,CAEAkmE,mBACI,IAAI3pD,EAAmC9f,KAAK8f,KAC5CA,EAAK6pD,kBAAkBp5B,WAEvBvwC,KAAK8f,KAAKsX,kBAAkB8tB,iBAAiBplC,EAAK8pD,oBAC9C9pD,EAAK+pD,kBAAkBnwD,OAAOoG,EAAK6pD,kBAAkBG,oBAAoB,SACzE,KACI9pE,KAAK8f,KAAK2kD,sBAAsBpL,oCACXr5D,KAAKgpE,aAAahjB,QACxBmN,KAAKlyB,SACpBjhC,KAAKmpE,sBAAsB,GAEvC,ECnHG,MAAMjwB,GAAb,cA6DI,KAAAjO,cAA6B,GAoB7B,KAAAm0B,gBAAkB,EAGlB,KAAA/jC,QAAkB,EAKlB,KAAAuP,eAAyB,EAgBzB,KAAAxB,YAA2B,IAAIq/B,GAAYtqC,OAAO,iBAClD,KAAA4rC,cAA+B,IAAIjB,GAAc9oE,KAAMm+B,OAAO,kBAuMlE,CAhTItF,aACI,OAAO,CACX,CAEAtB,sBACI,OAAOv3B,KAAKqvC,gBAChB,CACAuD,kBACI,OAAO5yC,KAAK+U,OAAOA,MACvB,CAEAi1D,cACI,OAAOhqE,KAAKiqE,QAChB,CAEAlzC,eACI,OAAO/2B,KAAKs5B,SAChB,CAGAxC,2BACI,OAAO92B,KAAKy5B,gBAAgB3C,0BAChC,CAEA4rB,mBACI,OAAO1iD,KAAKggE,aAChB,CAEAkK,cACI,OAAOlqE,KAAKmqE,QAChB,CAEA/S,gBAAgBvxD,GACZ7F,KAAKy5B,gBAAgB29B,gBAAgBvxD,EACzC,CAEAka,oBACI,OAAO/f,KAAKoqE,cAChB,CAEAhzC,kBACI,OAAOp3B,KAAKqyB,YAChB,CAEAoyC,sBACI,OAAOzkE,KAAK23D,gBAChB,CAEAC,wBACI,OAAO53D,KAAKs/D,kBAChB,CAEAha,iBACI,OAAOtlD,KAAKopC,WAChB,CAEAkwB,mBACI,OAAOt5D,KAAK+pE,aAChB,CAiDAnwB,UzCiGIywB,WAAW,kBAAkBC,UAC7BlnC,IAAmB,GyC9FnBpjC,KAAKuqE,MAAQ,IAAI9L,GAAMz+D,MACvBA,KAAKuqE,MAAM3wB,UAEX55C,KAAKqyB,aAAe,IAAIwyB,GAAa7kD,MACrCA,KAAK23D,iBAAmB,IAAI8J,GAAiBzhE,KAAMm+B,OAAO,gBAE1Dn+B,KAAKggE,cAAgB,IAAIniC,GAAc,KAAM79B,MAC7CA,KAAKggE,cAAc1sD,OAEnBtT,KAAKo5B,eAAiB,IAAIwQ,GAAe5pC,KAAMm+B,OAAO,wCAExC,IAAI48B,GAAQ/6D,MAClBg7D,cACRh7D,KAAKuuD,SAAW,IAAIH,GAASpuD,MAC7BA,KAAKy5B,gBAAkB,IAAIm9B,GAAgB52D,KAAMm+B,OAAO,mCACxDn+B,KAAKy5B,gBAAgBmgB,UAErB55C,KAAKs5B,UAAY,IAAIkxC,GAAUxqE,KAAMm+B,OAAO,wCAAyCA,OAAO,SAE5Fn+B,KAAKiqE,SAAW,IAAIzP,GAASx6D,KAAMm+B,OAAO,oBAC1Cn+B,KAAKiqE,SAASrwB,UAEd55C,KAAKyqE,uBAELzqE,KAAKwgE,aAAe,IAAI/oD,EAExBzX,KAAKuhD,mBAAqB,IAAIge,GAAmBphC,OAAO,cAAen+B,MAEvEA,KAAKoqE,eAAiB,IAAIvJ,GAAe7gE,MAEzC,IAAI0iE,GAAsB1iE,KAAMm+B,OAAO,cAEvCn+B,KAAKs/D,mBAAqB,IAAIwD,GAAmB9iE,KAAMm+B,OAAO,wBAE9Dn+B,KAAKo5D,SAAW,IAAIiO,GAASrnE,KAEjC,CAGA0qE,aACI1qE,KAAK+U,OAAS,IAAIukC,GAAOt5C,MAAM,GAAM,IACrC,IAAIoT,GAAYE,OAEhBtT,KAAK+U,OAAO6kC,QAAQzb,OAAO,YAE3B,IAAI1F,EAAOz4B,KACXm+B,OAAO+B,QAAQ/U,GAAG,UAAWiT,IACzBD,OAAO,oBAAoBkC,IAAI,SAAU,SACzClC,OAAO,WAAWkC,IAAI,SAAWH,OAAOsC,YAAc,IAAM,GAAK,EAAK,MACtE/J,EAAK1jB,OAAOA,OAAO+mD,SACnB39B,OAAO,WAAWkC,IAAI,SAAU,GAAG,IAIvClC,OAAO+B,QAAQ5B,QAAQ,UAEvBt+B,KAAKyqE,sBACT,CAEAxL,oBAAoBC,GAChBl/D,KAAKs4D,gBAAkB,IAAI6D,GAAgBn8D,KAAMk/D,GACjDl/D,KAAKs4D,gBAAgB1e,SACzB,CAGA6wB,uBACIzqE,KAAKo/D,kBACuB,GAAxBp/D,KAAKo/D,iBACLp/D,KAAKuyB,OAEb,CAEAA,QAEmC,MAA3BvyB,KAAKg/D,oBACLh/D,KAAKg/D,qBAGT,IAAIvmC,EAAOz4B,KACX6gC,YAAW,KACPpI,EAAKma,kBAAkBkpB,QAAQ,GAChC,KAEH97D,KAAKmqE,SAAW,IAAIr0C,GAAS91B,MAE7BA,KAAK2qE,aAELrlC,EAAEpF,QAAQ/U,GAAG,UAAU,WAEhByY,UAAUgnC,YAA2B,MAAbnyC,EAAKO,OAC5BP,EAAKW,eAAeC,YAAY,MAAM,GACtCZ,EAAKW,eAAeyR,wBAAuB,SAGnD,GAGJ,CAEA8/B,aAC4B,MAApB3qE,KAAK6qE,aACLxgC,cAAcrqC,KAAK6qE,aAGvB,IAAIpyC,EAAOz4B,KACXA,KAAK6qE,YAAcvgC,aAAY,KAE3B7R,EAAKwd,gBAAgB,GAEtB,IAGP,CAEAA,iB,QAEI,GAA6B,MAAzBj2C,KAAKqvC,kBAELrvC,KAAKqvC,iBAAiBnZ,YAAYoH,WAClCt9B,KAAKmqE,SAASp0C,gBAAkBF,GAAeM,UAC/C,IAEIn2B,KAAKmqE,SAASl0C,QAAQj2B,KAAKqvC,iBAAiBnZ,aAE5C,IAAIzmB,EAAqC,QAA5B,EAAc,QAAd,EAAAzP,KAAKs5B,iBAAS,eAAEtC,oBAAY,eAAEouC,WAAWplE,KAAKqvC,kBAC3DrvC,KAAKy5B,gBAAgBm/B,iBAAiB54D,KAAKqvC,iBAAkB5/B,GAE7DzP,KAAK+U,OAAOiqC,0BAA0B,MAElCh/C,KAAKy5B,iBACLz5B,KAAKq7B,S,CAGX,MAAOlnB,GACL4vB,QAAQ3iC,MAAM+S,GACdnU,KAAKmqE,SAASp0C,eAAiBF,GAAez0B,K,CAK1D,CAEAs2D,gBAAgB9nB,GACZ5vC,KAAKirC,cAAcv2B,OAAO1U,KAAKirC,cAAcz6B,QAAQo/B,GAAI,EAC7D,CAEAitB,kBAAkBnuB,GAEd1uC,KAAKirC,cAAgB,GACrBjrC,KAAKqvC,iBAAmB,KAExBrvC,KAAK4yC,kBAAkBva,cAAc,CAAEuhC,UAAU,IAEjD,IAAIvqB,EAA8B,KAElC,IAAK,IAAIrE,KAAM0D,EAAWA,WAAY,CAElC,IAAInT,EAAuB+V,GAAUW,gBAAgBjH,EAAIhrC,MACzDA,KAAKirC,cAAcjoC,KAAKu4B,GACpByP,EAAG/R,IAAMj5B,KAAKg5B,KAAKkgC,qBAAwBluB,EAAG+E,WAC9CV,EAAmB9T,E,CAM3B,GAFAv7B,KAAKy5B,gBAAgBk/B,iBAAiB34D,KAAKirC,eAEnB,MAApBoE,GAA4BrvC,KAAKirC,cAAc1nC,OAAS,EACxD,IAAI,IAAIynC,KAAMhrC,KAAKirC,cACf,IAAID,EAAG+E,SAAS,CACZV,EAAmBrvC,KAAKirC,cAAc,GACtC,K,CAKY,MAApBoE,GACArvC,KAAKy5B,gBAAgBmT,mBAAmByC,EAAkB,MAAM,GAGnC,GAA7BrvC,KAAKirC,cAAc1nC,QAEnBi1C,GAAOiL,WAAW,oBAAqBzjD,KAAMA,KAAKy5B,gBAAgBgW,mBAAmBugB,gBAK7F,CAEAngB,mBAAmB/rC,EAAc0iC,GAC7B,OAAO,IAAI8K,GAAUxtC,EAAM9D,KAAMwmC,EACrC,ECvUG,MAAMskC,GAYTjnE,YAAoBic,EAAwBk8C,EAAyC0F,GAAjE,KAAA5hD,KAAAA,EAAwB,KAAAk8C,WAAAA,EAAyC,KAAA0F,SAAAA,EAVrF,KAAAqJ,eAA2B,GAC3B,KAAAnzC,oBAAgC,GAKhC,KAAAkuC,aAAwC,CAAC,EAEzC,KAAAkF,6BAA8F,GAG1FhrE,KAAK8lE,aAAoB,MAAI,UAC7B9lE,KAAK8lE,aAAsB,QAAI,UAC/B9lE,KAAK8lE,aAAmB,KAAI,UAE5B9lE,KAAKirE,iBAAmBvJ,EAAS7tC,KAAK,2BAEtC7zB,KAAKirE,iBAAiBpsC,KAAK,QAAS,iBACpC7+B,KAAKirE,iBAAiBC,WAAWrsC,KAAK,QAAS,iBAE/C,IAAIpG,EAAOz4B,KACX0hE,EAAS7tC,KAAK,eAAe1I,GAAG,SAAS,KACxBsN,EAAK3Y,KAAK8yB,kBAChBtU,QAAQ,IAAK,OAAQ,CAAC,EAAE,IAChCO,KAAK,QAAS,OACrB,CAEA5H,uBAAuB71B,GACP,MAATA,GACCpB,KAAKirE,iBAAiB5qC,IAAI,aAAc,WACxCrgC,KAAKirE,iBAAiBp3C,KAAK,kBAAkB1iB,KAAK/P,IAElDpB,KAAKirE,iBAAiB5qC,IAAI,aAAc,SAEhD,CAEA+kC,WAAW7pC,GAEPv7B,KAAKgrE,6BAA+B,GAEpC,IAAInS,EAAqC,IAAI7/C,IAE7ChZ,KAAKq+D,UAAYr+D,KAAKg8D,WAAWnoC,KAAK,0BACtC7zB,KAAKq+D,UAAUhtB,QAEf,IAAI5vB,GAAY,EAEZwb,EAAK1B,EAAUrF,YACfnhB,EAA8C/U,KAAK8f,KAAK8yB,kBAE5D,IAAK,IAAIx0B,KAAK6e,EAAGzG,YAAW,GAAQ,CAChC,IAAIshB,EAAuC,GACvC8K,EAAqD,GACrDwjB,EAAoC,GAEpC32D,EAAS2O,EAAEie,6BACfw8B,EAAcl/C,IAAIyE,EAAGA,EAAEwd,iBAEvB,IAAK,IAAIx6B,KAASqO,EAAQ,CAEtB,IAAIk2D,EACAC,EAqCAhmD,EApCAkmD,EAAuB9lE,KAAK8lE,aAAa1kE,EAAMoQ,OAEnD,OAAQpQ,EAAMoQ,OACV,IAAK,QAASm0D,EAA4B,qBAAsBC,EAAkB,qBAAsB,MACxG,IAAK,UAAWD,EAA4B,uBAAwBC,EAAkB,uBAAwB,MAC9G,IAAK,OAAQD,EAA4B,oBAAqBC,EAAkB,oBAGpF,GAAsB,MAAlBxkE,EAAM2d,SAAkB,CACxB,IAAIA,EAAW3d,EAAM2d,SACjBosD,EAAiB,MAAQn4D,KAAKoJ,MAAsB,IAAhBpJ,KAAK64B,UAC7C85B,EAA4B,sBAAwBC,EAAkB,IAAMuF,EAE5EnrE,KAAKgrE,6BAA6BhoE,KAAK,CAACooE,MAAO,IAAMD,EACrDE,gBAAiB,KAEb,IAAIr3D,EAAQ+K,EAASQ,cAAcnB,EAAExK,MAAM4L,KAC3CzK,EAAOwrC,aAAa,GAAIvsC,EAAMmG,KAAKuF,IAC/B,IAAI4rD,EAAI5rD,EAAKA,KAAKrL,MAClB,MAAO,CACHA,MAAO,IAAId,OAAO+sC,MAAMgrB,EAAE/2D,gBAAiB+2D,EAAE72D,YAAa62D,EAAEh3D,cAAeg3D,EAAE92D,WAC7ErD,KAAMuO,EAAKA,KAAKvO,KAChBmwD,kBAAkB,EACrB,IAEH,EAGNhiD,MAAOP,EAASO,O,CASpB,OAHAtf,KAAKurE,aAAanqE,EAAOgd,EAAGgoD,GAGpBhlE,EAAMoQ,OACV,IAAK,QAASoO,EAAWrM,OAAOsM,eAAere,MAAO,MACtD,IAAK,UAAWoe,EAAWrM,OAAOsM,eAAekmD,QAAS,MAC1D,IAAK,OAAQnmD,EAAWrM,OAAOsM,eAAemmD,KAGlDluB,EAAQ90C,KAAK,CACTuR,gBAAiBnT,EAAMuP,SAASvB,KAChCqF,YAAarT,EAAMuP,SAAStB,OAC5BiF,cAAelT,EAAMuP,SAASvB,KAC9BoF,UAAWpT,EAAMuP,SAAStB,OAASjO,EAAMuP,SAASpN,OAClDoc,QAASve,EAAM+P,KACfyO,SAAUA,EAEVm4B,mBAAoB32C,EAAM2d,WAG9B6jC,EAAY5/C,KAAK,CACbqR,MAAO,CACHE,gBAAiBnT,EAAMuP,SAASvB,KAChCqF,YAAarT,EAAMuP,SAAStB,OAC5BiF,cAAelT,EAAMuP,SAASvB,KAC9BoF,UAAWpT,EAAMuP,SAAStB,OAASjO,EAAMuP,SAASpN,QAEtDuQ,QAAS,CACL6xD,0BAA2BA,EAC3BvnB,QAAS,CACLztC,SAAU4C,OAAOwB,OAAOuuC,gBAAgBC,OACxC/iB,MAAOslC,K,CAgBvB,GAPAvyD,OAAOwB,OAAOkxD,gBAAgB7nD,EAAExK,MAAO,OAAQkkC,GAC/C15B,EAAEwZ,oBAAsBxZ,EAAExK,MAAM+uC,iBAAiBvkC,EAAEwZ,oBAAqBgrB,GAGxE5iD,KAAK+qE,eAAiB/qE,KAAK8f,KAAK8yB,kBAAkB+P,iBAAiB3iD,KAAK+qE,eAAgB,IAGpF3E,EAAW7iE,OAAS,GAAKvD,KAAKq+D,UAAU96D,OAAS,EAAG,CACpDke,GAAY,EACZ,IAAI+pD,EAAQrtC,OAAO,kCAAoC/f,EAAEqY,KAAK3yB,KAAO,gBACrE9D,KAAKq+D,UAAUl8B,OAAOqpC,GACtB,IAAK,IAAIC,KAAUrF,EACfpmE,KAAKq+D,UAAUl8B,OAAOspC,E,EAYlC,OANKhqD,GAAazhB,KAAKq+D,UAAU96D,OAAS,GACtCvD,KAAKq+D,UAAUl8B,OAAOhE,OAAO,mEAGjCn+B,KAAK++C,oCAEE8Z,CAEX,CAEA9Z,oCAEI,IAAItmB,EAAOz4B,KACX6gC,YAAW,KACP,IAAI,IAAI6qC,KAAQjzC,EAAKuyC,6BACb7sC,OAAOutC,EAAKN,OAAOpqC,IAAI,QAAS0qC,EAAKL,iBACrCltC,OAAOutC,EAAKN,OAAOjgD,GAAG,QAASugD,EAAKL,iBAAiBxsC,KAAK,QAAS6sC,EAAKpsD,M,GAEjF,IAGP,CAEAisD,aAAanqE,EAAcgd,EAAWutD,GAElC,IAAIxY,EAAOh1B,OAAO,qCACdytC,EAAcztC,OAAO,uEAAyE/8B,EAAMuP,SAASvB,KAAxF,+CACqBhO,EAAMuP,SAAStB,OAAS,0BAClEw8D,EAAW,GACf,OAAQzqE,EAAMoQ,OACV,IAAK,QAAS,MACd,IAAK,UAAWq6D,EAAW,qDAAsD,MACjF,IAAK,OAAQA,EAAW,+CAE5B,IAAIlO,EAAWx/B,OAAO,8BAAgC0tC,EAAWzqE,EAAM+P,KAAO,UAE9EgiD,EAAKhxB,OAAOypC,GAAazpC,OAAOw7B,GAEhC,IAAIllC,EAAOz4B,KACXmzD,EAAKhoC,GAAG,aAAc4V,IAClB/gC,KAAKq+D,UAAUxqC,KAAK,kBAAkBoL,YAAY,aAClDk0B,EAAKn0B,SAAS,aACdvG,EAAKqzC,UAAU1tD,EAAGhd,EAAM,IAG5BuqE,EAAW3oE,KAAKmwD,EACpB,CAEA2Y,UAAU1tD,EAAWhd,GAEbpB,KAAK8f,gBAAgBo5B,IACjB96B,GAAKpe,KAAK8f,KAAK2Z,gBAAgB3C,4BAC/B92B,KAAK8f,KAAK2Z,gBAAgB29B,gBAAgBh5C,GAGlD,IAAIzN,EAAWvP,EAAMuP,SACjB0D,EAAQ,CACRI,YAAa9D,EAAStB,OAAQkF,gBAAiB5D,EAASvB,KACxDoF,UAAW7D,EAAStB,OAASsB,EAASpN,OAAQ+Q,cAAe3D,EAASvB,MAG1EpP,KAAK8f,KAAK8yB,kBAAkB0zB,oBAAoBjyD,GAEhD,IAAIwuC,EAAoB,GACxB,OAAQzhD,EAAMoQ,OACV,IAAK,QAASqxC,EAAY,iBAAkB,MAC5C,IAAK,UAAWA,EAAY,mBAAoB,MAChD,IAAK,OAAQA,EAAY,gBAI7B7iD,KAAK+qE,eAAiB/qE,KAAK8f,KAAK8yB,kBAAkB+P,iBAAiB3iD,KAAK+qE,eAAgB,CACpF,CACI12D,MAAOA,EACPP,QAAS,CAAE+uC,UAAWA,KAMlC,ECjOG,MAAMkpB,GAWTloE,YAAoBic,EAAmBk8C,GAAnB,KAAAl8C,KAAAA,EAAmB,KAAAk8C,WAAAA,EAJvC,KAAAgQ,oBAA8B,EAK1BhsE,KAAKisE,aAAejQ,EAAWnoC,KAAK,2BACxC,CAEA+lB,UACI,IAAInhB,EAAOz4B,KACXA,KAAKisE,aAAa9pC,OAAOniC,KAAKksE,iBAAmBjpC,GAAQ,GAAI,qCAC7DjjC,KAAKisE,aAAa9pC,OAAOniC,KAAKmsE,kBAAoBlpC,GAAQ,GAAI,sCAC9D9E,OAAO,cAAcqzB,QAAQxxD,KAAKosE,oBAAsBnpC,GAAQ,GAAI,gDAAiD,KACrHjjC,KAAKosE,oBAAoBjhD,GAAG,SAAS,KAC7BnrB,KAAKgsE,mBACLhsE,KAAKy5D,eAELz5D,KAAKqsE,aAAa5zC,EAAK3Y,KAAKgX,2B,IAGpC92B,KAAKosE,oBAAoBxrC,OACzBzC,OAAO,eAAeyC,MAC1B,CAEApH,6BACIx5B,KAAKosE,oBAAoBj7D,KAAKnR,KAAKgsE,mBAAqB,gBAAkB,sBAC1EhsE,KAAKosE,oBAAoBlrC,MAC7B,CAEA24B,6BACI75D,KAAKosE,oBAAoBxrC,MAC7B,CAEAyrC,aAAaxmE,GAETA,EAAO4wB,KAAKtlB,KAAOtL,EAAOgxB,gCAC1B,IAAIJ,EAAO5wB,EAAO4wB,KAElB0H,OAAO,WAAWyC,OAClBzC,OAAO,eAAe+C,OAEtB,IAAIorC,EAAgB/4D,OAAOwB,OAAOqjB,YAAY3B,EAAKyC,qBAAsB,UACrEqzC,EAAgBh5D,OAAOwB,OAAOqjB,YAAY3B,EAAKtlB,KAAM,UAEzDnR,KAAK+7D,WAAaxoD,OAAOwB,OAAOy3D,iBAAiBt0D,SAASu0D,eAAe,cAAe,CAEpFC,yBAAyB,EACzBC,kBAAkB,EAClB/S,UAAU,EAEVgT,kBAAkB,IAGtB5sE,KAAK+7D,WAAWlE,SAAS,CACrBgV,SAAUP,EACVQ,SAAUP,IAGdvsE,KAAKgsE,oBAAqB,EAC1BhsE,KAAKw5B,4BACT,CAEAigC,eACQz5D,KAAKgsE,qBAEL7tC,OAAO,eAAeyC,OACtB5gC,KAAK+7D,WAAWjlB,UAChB92C,KAAK+7D,WAAa,KAClB59B,OAAO,WAAW+C,OAElBlhC,KAAKgsE,oBAAqB,EAC1BhsE,KAAKw5B,6BAEb,CAGAujC,mBAAmBruB,GAEf,IAAIq+B,EAAoC,GACpC5yD,EAAyC,CAAC,EAE9Cu0B,EAAWnuC,SAAQyqC,IACfA,EAAG9U,YAAYM,YAAW,GAAOj2B,SAAQsF,IAErC,IAAImnE,EAAannE,EAAO4wB,KAAK2E,eAC7B,GAAkB,MAAd4xC,EAAoB,CAEpB,IAAIC,EhD7EjB,SAAsB97D,GAE3B,IAAI6c,EAAQ7c,EAAK6c,MAAM,gDAIvB,OAFiB,IAAImzB,KAAKtuC,OAAOC,SAASkb,EAAM,IAAKnb,OAAOC,SAASkb,EAAM,IAAKnb,OAAOC,SAASkb,EAAM,IAAKnb,OAAOC,SAASkb,EAAM,IAAKnb,OAAOC,SAASkb,EAAM,IAG9J,CgDsEqCk/C,CAAaF,GAC1BG,EhDvFjB,SAAiCF,GACtC,MAAO,GAAG57C,GAAO47C,EAAKG,cAAc/7C,GAAO47C,EAAKI,eAAeJ,EAAKK,eACtE,CgDqF0CC,CAAwBN,GAC1CO,EAAsBrzD,EAAIgzD,GACnB,MAAPK,IACAA,EAAM,CACFP,KAAMA,EACNQ,IAAKN,EACLtwC,QAAS,IAEb1iB,EAAIgzD,GAAmBK,EACvBT,EAAgB/pE,KAAKwqE,IAEzBA,EAAI3wC,QAAQ75B,KAAK,CAAC6C,OAAQA,EAAQ01B,UAAWyP,G,IAInD,IAINhrC,KAAKksE,iBAAiB76B,QACtBrxC,KAAKmsE,kBAAkB96B,QAEvB,IAAI5Y,EAAOz4B,KAEXA,KAAKksE,iBAAiB/pC,OAAOc,GAAQ,GAAI,qBAAsB,gBAG/D8pC,EAAgBzwC,MAAK,CAAC7qB,EAAGkpB,IACjBlpB,EAAEw7D,KAAKK,eAAiB3yC,EAAEsyC,KAAKK,eAAuBt6D,KAAKV,KAAKb,EAAEw7D,KAAKK,cAAgB3yC,EAAEsyC,KAAKK,eAC9F77D,EAAEw7D,KAAKI,YAAc1yC,EAAEsyC,KAAKI,YAAoBr6D,KAAKV,KAAKb,EAAEw7D,KAAKI,WAAa1yC,EAAEsyC,KAAKI,YACrF57D,EAAEw7D,KAAKG,WAAazyC,EAAEsyC,KAAKG,WAAmBp6D,KAAKV,KAAKb,EAAEw7D,KAAKG,UAAYzyC,EAAEsyC,KAAKG,WAC/E,IAGX,IAAI9+D,GAAiB,EAErBy+D,EAAgBxsE,SAAQitE,IAEpBA,EAAI3wC,QAAQP,MAAK,CAACoxC,EAAIC,IAAOD,EAAG7nE,OAAO4wB,KAAK3yB,KAAKqtD,cAAcwc,EAAG9nE,OAAO4wB,KAAK3yB,QAE9E,IAAIqvD,EAAOlwB,GAAQ,GAAI,kBAAmBuqC,EAAIC,KAC9CztE,KAAKksE,iBAAiB/pC,OAAOgxB,GAE7BA,EAAKhoC,GAAG,SAAUhX,IACdnU,KAAKksE,iBAAiBr4C,KAAK,oBAAoBoL,YAAY,UAC3Dk0B,EAAKn0B,SAAS,aACdvG,EAAKvQ,OAAOslD,EAAI,IAGhBl/D,IACAA,GAAQ,EACR6kD,EAAKn0B,SAAS,aACdvG,EAAKvQ,OAAOslD,G,GAKxB,CAEAtlD,OAAOslD,GACHxtE,KAAKmsE,kBAAkB96B,QACvBrxC,KAAKmsE,kBAAkBhqC,OAAOc,GAAQ,GAAI,qBAAsB,wBAChE,IAAIxK,EAAOz4B,KACXwtE,EAAI3wC,QAAQt8B,SAAQqtE,IAChB,IAAIza,EAAOh1B,OAAO,qGACRyvC,EAAoBryC,UAAUz3B,2EAC9B8pE,EAAoB/nE,OAAO4wB,KAAK3yB,wBAAwB8pE,EAAoB/nE,OAAO4wB,KAAK2E,0BAClG3C,EAAK0zC,kBAAkBhqC,OAAOgxB,GAC9BA,EAAKhoC,GAAG,SAAS,KACTsN,EAAK3Y,KAAK2Z,gBAAgBmT,mBAAmBghC,EAAoBryC,WACjE9C,EAAK3Y,KAAK2Z,gBAAgB29B,gBAAgBwW,EAAoB/nE,QAC9D4yB,EAAK3Y,KAAK2Z,gBAAgB0V,cAAcjnB,OAAO0lD,EAAoB/nE,QAAQ,EAAM,GACvF,GAGV,ECnLG,MAAM2kE,GAKT3mE,YAAoBic,EAAuBk8C,EAAwC0F,GAA/D,KAAA5hD,KAAAA,EAAuB,KAAAk8C,WAAAA,EAAwC,KAAA0F,SAAAA,EAG3E1hE,KAAKg8D,WAAWnoC,KAAK,0CAA0CtwB,OAAS,IACxEvD,KAAKu5B,gBAAkB,IAAIwyC,GAAsBjsD,EAAMk8C,IAG3Dh8D,KAAKg3B,aAAe,IAAI8zC,GAAahrD,EAAMk8C,EAAY0F,EAC3D,CAEA9nB,UACIlX,GAAS1iC,KAAKg8D,YACc,MAAxBh8D,KAAKu5B,iBAAyBv5B,KAAKu5B,gBAAgBqgB,UAEvD55C,KAAKg8D,WAAWnoC,KAAK,YAAYq3C,WAAW58D,QAAQgwB,QAAQ,QAEhE,CAEAw+B,kBAEI3+B,OAAO,0BAA0BkC,IAAI,aAAc,WACnDlC,OAAO,0BAA0BG,QAAQ,YAE7C,CAEA65B,kBAEIh6B,OAAO,0BAA0BkC,IAAI,aAAc,UACnDlC,OAAO,mBAAmB+sC,WAAW58D,QAAQgwB,QAAQ,YAEzD,EC1CG,MAAMuvC,GAaThqE,YAAoBiqE,EACRC,EAA4BC,EAC3BhsC,EAA+CisC,GAFxC,KAAAH,WAAAA,EACR,KAAAC,UAAAA,EAA4B,KAAAC,QAAAA,EAC3B,KAAAhsC,SAAAA,EAA+C,KAAAisC,UAAAA,EACpDjuE,KAAKkuE,YACb,CAEAA,aACI,IAAIz1C,EAAOz4B,KAEU,MAAlBA,KAAKiuE,WACJjuE,KAAK8tE,WAAWz+C,SAAS67C,WAAWn6B,MAAK,CAACnsB,EAAO0Q,KAC1CA,GAAWt1B,KAAK8tE,WAAW,KAC1Br1C,EAAKw1C,UAAY9vC,OAAO7I,G,IAKpCt1B,KAAKmuE,WAAahwC,OAAO,kCAEzBn+B,KAAKmuE,WAAW9tC,IAAI,CAChBC,MAAOtgC,KAAKguE,QAAU,OAAS,MAC/BztC,OAAQvgC,KAAKguE,QAAU,MAAQ,OAC/BI,OAAQpuE,KAAKguE,QAAU,aAAe,eAGvChuE,KAAK+tE,UACJ/tE,KAAKmuE,WAAW9tC,IAAI,CAChB6B,IAAK,MACLrW,KAAM,QAGP7rB,KAAKguE,QACJhuE,KAAKmuE,WAAW9tC,IAAI,CAChBuY,OAAQ,MACR/sB,KAAM,QAGV7rB,KAAKmuE,WAAW9tC,IAAI,CAChB6B,IAAK,MACLlW,MAAO,QAKnBhsB,KAAK8tE,WAAW3rC,OAAOniC,KAAKmuE,YAE5BnuE,KAAKmuE,WAAWhjD,GAAG,aAAc8vC,IAE7B,IAAI35B,EAAI25B,EAAGC,QACP35B,EAAI05B,EAAGI,QAEXl9B,OAAOjmB,UAAUiT,GAAG,oBAAqB4G,IACrC,IAAIopC,EAAKppC,EAAGmpC,QAAU55B,EAClBg6B,EAAKvpC,EAAGspC,QAAU95B,EAEtB9I,EAAK41C,MAAMlT,EAAIG,GAEfh6B,EAAIvP,EAAGmpC,QACP35B,EAAIxP,EAAGspC,OAAO,IAIlBl9B,OAAOjmB,UAAUiT,GAAG,kBAAkB,KAClCgT,OAAOjmB,UAAU8oB,IAAI,oBACrB7C,OAAOjmB,UAAU8oB,IAAI,iBAAiB,GACxC,IAKNH,YAAW,KACPpI,EAAK41C,MAAM,EAAG,EAAE,GACjB,IAEP,CAEAC,SAAS9tC,GACLxgC,KAAKmuE,WAAW9tC,IAAI,mBAAoBG,EAC5C,CAEA6tC,MAAMlT,EAAYG,GACd,GAAGt7D,KAAKguE,QAAQ,CACZ,IAAIztC,EAAS1tB,OAAOC,SAAS9S,KAAK8tE,WAAWztC,IAAI,UAAUvxB,QAAQ,KAAM,KACrEy/D,EAAc17D,OAAOC,SAAS9S,KAAKiuE,UAAU5tC,IAAI,UAAUvxB,QAAQ,KAAM,KACzE0/D,EAAYxuE,KAAK+tE,UAAYxtC,GAAU+6B,EAAK/6B,GAAU+6B,EACtDmT,EAAiBzuE,KAAK+tE,UAAYQ,GAAejT,EAAKiT,GAAejT,EACzEt7D,KAAK8tE,WAAWztC,IAAI,SAAUmuC,EAAY,MAC1CxuE,KAAKiuE,UAAU5tC,IAAI,SAAUouC,EAAiB,MAC9CzuE,KAAKgiC,SAASwsC,E,KACX,CACH,IAAIluC,EAAQztB,OAAOC,SAAS9S,KAAK8tE,WAAWztC,IAAI,SAASvxB,QAAQ,KAAM,KACnE4/D,EAAa77D,OAAOC,SAAS9S,KAAKiuE,UAAU5tC,IAAI,SAASvxB,QAAQ,KAAM,KACvE6/D,EAAW3uE,KAAK+tE,UAAYztC,GAAS66B,EAAK76B,GAAS66B,EACnDyT,EAAgB5uE,KAAK+tE,UAAYW,GAAcvT,EAAKuT,GAAcvT,EACtEn7D,KAAK8tE,WAAWztC,IAAI,QAASsuC,EAAW,MACxC3uE,KAAKiuE,UAAU5tC,IAAI,QAASuuC,EAAgB,MAC5C5uE,KAAKgiC,SAAS2sC,E,CAElB3uE,KAAK8tE,WAAWztC,IAAI,OAAQ,WAEhC,ECtGG,MAAMwuC,GAKThrE,YAAoBqyB,EAAkC44C,EAA2ChvD,GAA7E,KAAAoW,YAAAA,EAAkC,KAAA44C,aAAAA,EAA2C,KAAAhvD,KAAAA,EAFjG,KAAAsrB,MAAoB,GAIhB,IAAI3S,EAAOz4B,KAEX,IAAK,IAAI6F,KAAUqwB,EAAYM,YAAW,GAEtCx2B,KAAK+uE,UAAUlpE,GAInB,IAAImpE,EAAYF,EAAaz/C,SACzB4/C,EAAa9wC,OAAO,mGACxB6wC,EAAU7sC,OAAO8sC,GAEjBA,EAAW9jD,GAAG,SAAS,KAEnB,IAAItlB,EAAS7F,KAAK8f,KAAKivD,UAAU,CAAE59D,KAAM,GAAImO,MAAO,kBAAmB/f,KAAM,QACzE6wC,EAAWpwC,KAAK+uE,UAAUlpE,GAE9B7F,KAAK4xD,cAAcxhB,GAAU,KAErB3X,EAAKy2C,aAAe9+B,GACpB3X,EAAK02C,WAAW/+B,E,GAEtB,GAIV,CAEAg/B,iBACIpvE,KAAKorC,MAAM7qC,SAAQ26B,GAAKl7B,KAAKqvE,WAAWn0C,IAC5C,CAGAo0C,QAAQC,GACJ,IAAI92C,EAAOz4B,KACPwvE,EAAWrxC,OAAO,oHAClBoxC,EAAOjwD,MAAQ,8DACnBtf,KAAK8uE,aAAa3sC,OAAOqtC,GAEzB,IAAIp/B,EAAqB,CACrBvqC,OAAQ,KACR2pE,SAAUA,EACVjwE,KAAM,OACNkwE,KAAMF,EAAOp+D,MAGjBnR,KAAKorC,MAAMpoC,KAAKotC,GAEhBo/B,EAASrkD,GAAG,SAAUiT,IAClB3F,EAAK02C,WAAW/+B,EAAS,GAGjC,CAGA2+B,UAAUlpE,GACN,IAAI4yB,EAAOz4B,KACPwvE,EAAWrxC,OAAO,wIAE+Bt4B,EAAO4wB,KAAK3yB,4KAGjE9D,KAAK8uE,aAAa3sC,OAAOqtC,GAEzB,IAAIp/B,EAAqB,CACrBvqC,OAAQA,EACR2pE,SAAUA,EACVjwE,KAAM,OAgCV,OA7BAS,KAAKorC,MAAMpoC,KAAKotC,GAEhBvqC,EAAO4wB,KAAKuZ,aAAe,CACvBlsC,KAAM+B,EAAO4wB,KAAK3yB,KAClBguC,eAAgB09B,EAChBz/B,UAAU,EACVhY,KAAM,IAGVy3C,EAAS37C,KAAK,cAAc1I,GAAG,aAAchX,IACzCskB,EAAKiwB,SAAStY,EAAUj8B,EAAE,IAG9Bq7D,EAAS37C,KAAK,cAAc1I,GAAG,SAAUhX,IAAQA,EAAEwrB,iBAAkBxrB,EAAEurB,iBAAiB,IAExF8vC,EAASrkD,GAAG,SAAUiT,IAClB3F,EAAK02C,WAAW/+B,EAAS,IAG7Bo/B,EAAS,GAAGx9B,iBAAiB,eAAe,SAAU5T,GAClDA,EAAMuB,iBACNyB,GAAgB,CAAC,CACbQ,QAAS,aACTI,SAAU,KACNvJ,EAAKm5B,cAAcxhB,GAAU,QAAU,IAE3ChS,EAAMg2B,MAAOh2B,EAAMi2B,MAC3B,IAAG,GAEIjkB,CAEX,CAEAsY,SAAStY,EAAoBrP,GACzBA,EAAGpB,iBACHoB,EAAGrB,kBACH,IAAIjH,EAAOz4B,KACXohC,GAAgB,CAAC,CACbQ,QAAS,YACTI,SAAU,QAGX,CACCJ,QAAS,+BACTpB,MAAO,UACPwB,SAAU,KACNvJ,EAAK42C,WAAWj/B,EAAS,IAE7BrP,EAAGqzB,MAAQ,EAAGrzB,EAAGszB,MAAQ,EAEjC,CAEAgb,WAAWj/B,GACPA,EAASo/B,SAASvuC,SAClBjhC,KAAK8f,KAAK4d,aAAa0S,EAASvqC,QAChC7F,KAAKorC,MAAQprC,KAAKorC,MAAM/a,QAAQ0e,GAAOA,GAAMqB,IACzCpwC,KAAKkvE,aAAe9+B,IAChBpwC,KAAKorC,MAAM7nC,OAAS,EACpBvD,KAAKmvE,WAAWnvE,KAAKorC,MAAM,KAE3BprC,KAAK8f,KAAK8yB,kBAAkBtD,SAAS,0BACrCtvC,KAAK8f,KAAK8yB,kBAAkBva,cAAc,CAAEuhC,UAAU,MAI9D55D,KAAKorC,MAAM7qC,SAASk2B,IACE,MAAfA,EAAK5wB,SACJ4wB,EAAK5wB,OAAO4wB,KAAKmC,OAAQ,E,GAGrC,CAEA8E,aAAa73B,GACT,IAAK,IAAIuqC,KAAYpwC,KAAKorC,MAClBgF,EAASvqC,QAAUA,GACnB7F,KAAKqvE,WAAWj/B,EAG5B,CAEAwhB,cAAcxhB,EAAoBpO,GAC9B,IACImxB,EAAO/iB,EAASo/B,SAAS37C,KAAK,gBAC9BohC,EAAW7kB,EAASvqC,OAAO4wB,KAAK3yB,KAAK0M,QAAQ,KAEjDovB,GAAauzB,EAAMA,GAAO+B,IACtB9kB,EAASvqC,OAAO4wB,KAAK3yB,KAAOoxD,EAC5B/B,EAAKta,KAAKqc,GACM,MAAZlzB,GAAkBA,GAAU,GAJR,MAAZizB,EAAmB,KAAO,CAAE1iC,MAAO,EAAGmO,IAAKu0B,GAO/D,CAGAya,qBACQ1vE,KAAKorC,MAAM7nC,OAAS,GACpBvD,KAAKmvE,WAAWnvE,KAAKorC,MAAM,GAEnC,CAEA+jC,WAAW/+B,GACP,GAAgB,MAAZA,EACJ,OAAQA,EAAS7wC,MACb,IAAK,MACDS,KAAK8f,KAAK6vD,SAAS/uC,OACnB5gC,KAAK8f,KAAK8vD,WAAW1uC,OACrBlhC,KAAK8f,KAAKs3C,gBAAgBhnB,EAASvqC,QACnC7F,KAAK8f,KAAK8yB,kBAAkB9R,QAC5B,MACJ,IAAK,OACD9gC,KAAK8f,KAAK8vD,WAAWhvC,OACrB5gC,KAAK8f,KAAK6vD,SAASzuC,OAEnB,IAAI2uC,EAAwC,CAAC,EACzCjiB,EAAiB,GAGjBkiB,EAAM5vC,OAAO6vC,WAAW,CACxBC,UAAW,SAAUC,EAAKC,GAEtB,OADAtiB,EAAK5qD,KAAKitE,GACH,EACX,IAGJH,EAAIK,SAAS9zB,MAAM+zB,YAAc,SAAU5gE,EAAQ6gE,EAAKv8D,EAASw8D,EAAK3xE,GAClE,IAAIoV,EAAQvE,EAAO6gE,GAGnB,OAFAziB,EAAK5qD,KAAK+Q,EAAMw8D,SAET,EACX,EAEAT,EAAIU,OAAOpgC,EAASq/B,MAEpBzvE,KAAKwmE,SAAS5Y,EAAMiiB,GAAW,KAE3B,IAAIY,EAAMvwC,OAAO6vC,WAAW,CACxBC,UAAW,SAAUC,EAAKC,GACtB,OAAOL,EAAUI,EACrB,IAGJQ,EAAIN,SAAS9zB,MAAM+zB,YAAc,SAAU5gE,EAAQ6gE,EAAKv8D,EAASw8D,EAAK3xE,GAClE,IAAIoV,EAAQvE,EAAO6gE,GAEnB,OAAOR,EAAU97D,EAAMw8D,SAASzhE,QAAQ,QAAS,GACrD,EAGA,IAAI+pC,EAAO43B,EAAID,OAAOpgC,EAASq/B,MAC/BzvE,KAAK8f,KAAK6vD,SAAS92B,KAAKA,EAAK,IAEjC74C,KAAK8uE,aAAaj7C,KAAK,YAAYoL,YAAY,aAC/CmR,EAASo/B,SAASxwC,SAAS,aAGvC,CAEAwnC,SAAS5Y,EAAgB8iB,EAAqC1uC,GAC1D,IAAIvJ,EAAOz4B,KACX,GAAI4tD,EAAKrqD,OAAS,EAAG,CACjB,IAAIotE,EAAgB/iB,EAAKlpD,MACzB6O,OAAOwB,OAAOyxD,SAASmK,EAAe,SAAU,CAAEr4C,QAAS,IAAKp3B,MAAMiQ,IAClEu/D,EAAQC,GAAiBx/D,EACzBsnB,EAAK+tC,SAAS5Y,EAAM8iB,EAAS1uC,EAAS,G,MAI1CA,GAGR,CAGA4uC,SAAS/qE,GACL7F,KAAK8uE,aAAaj7C,KAAK,YAAYoL,YAAY,aAE/Cj/B,KAAKkvE,YAAclvE,KAAKorC,MAAMvX,MAAMuc,GAAaA,EAASvqC,QAAUA,IAE5C,MAApB7F,KAAKkvE,aAAqBlvE,KAAKkvE,YAAYM,SAASxwC,SAAS,YAErE,EC7QG,MAAM6xC,GAIThtE,YAAoBitE,GAAA,KAAAA,mBAAAA,CAEpB,CAEOtpC,KAAKtC,GAER,GAAIhF,OAAO6wC,UAAW,CAElB,IAAI/rC,EAA4B9E,OAAO6wC,UAAUvpC,KAAKxnC,KAAK8wE,mBAAoB,GAE3Er4C,EAAOz4B,KAEXglC,EAAQkD,QAAU,SAAyCnH,GACvDgD,QAAQgF,IAAI,4BAA8BhI,EAAGxhC,KACjD,EAEAylC,EAAQgsC,UAAY,SAAyCjwC,GACzDtI,EAAKyN,GAAKlB,EAAQhkC,OAClBy3B,EAAKyN,GAAGgC,QAAU,SAAS9J,GAGvB2F,QAAQgF,IAAI,oBAAsB3K,EAAM2E,OAAO3hC,MAAMue,QACvD,EACAulB,GACN,EAEAF,EAAQisC,gBAAkB,SAASlwC,GAE/BtI,EAAKyN,GAAKnF,EAAGgC,OAAO/hC,OACpB,IAAIkwE,EAAqBz4C,EAAKyN,GAAGirC,kBAAkB,UAAW,CAAEC,QAAS,WAAYC,eAAe,IACpGH,EAAmBI,YAAYC,WAAa,SAASnzC,GAAQ,EAElC3F,EAAKyN,GAAGirC,kBAAkB,YAAa,CAAEC,QAAS,aAAcC,eAAe,IAC1GH,EAAmBI,YAAYC,WAAa,SAASnzC,GAAQ,CAEjE,C,MAGA2F,QAAQgF,IAAI,2BAGpB,CAGOyoC,YAAYC,EAAkBlC,GAETvvE,KAAKkmC,GAAGorC,YAAY,UAAW,aAAaI,YAAY,WAE9DrqC,IAAI,CAClBoqC,SAAUA,EACVlC,OAAQA,GAGhB,CAEOoC,aAAaF,GAEQzxE,KAAKkmC,GAAGorC,YAAY,UAAW,aAAaI,YAAY,WAE9D9rB,OAAO6rB,EAE7B,CAGOG,UAAUH,EAAkBzvC,GAE/B,IAEIgD,EAFoBhlC,KAAKkmC,GAAGorC,YAAY,UAAW,aAAaI,YAAY,WAEhDr4D,IAAIo4D,GAEpCzsC,EAAQkD,QAAW9J,IACf4D,EAAS,KAAK,EAGlBgD,EAAQgsC,UAAa5yC,IACI,MAAlB4G,EAAQhkC,OACPghC,EAAS,MAETA,EAASgD,EAAQhkC,OAAOuuE,O,CAIpC,CAEOsC,cAAcC,EAAoBzkC,GAEXrtC,KAAKkmC,GAAGorC,YAAY,YAAa,aAAaI,YAAY,aAEhErqC,IAAI,CACpBV,WAAYmrC,EACZzkC,SAAUA,GAGlB,CAEO0kC,eAAeprC,GAEQ3mC,KAAKkmC,GAAGorC,YAAY,YAAa,aAAaI,YAAY,aAEhE9rB,OAAOjf,EAE/B,CAGOqrC,YAAYrrC,EAAoB3E,GAEnC,IAEIgD,EAFsBhlC,KAAKkmC,GAAGorC,YAAY,YAAa,aAAaI,YAAY,aAElDr4D,IAAIstB,GAEtC3B,EAAQkD,QAAW9J,IACf4D,EAAS,KAAK,EAGlBgD,EAAQgsC,UAAa5yC,IACI,MAAlB4G,EAAQhkC,OACPghC,EAAS,MAETA,EAASgD,EAAQhkC,OAAOqsC,S,CAIpC,ECvHG,MAAM4kC,GAYTpuE,YAAoBic,EAA4BgxD,GAA5B,KAAAhxD,KAAAA,EAA4B,KAAAgxD,mBAAAA,EAPhD,KAAAoB,oBAAgC,GAEhC,KAAApI,kBAA8B,GAE9B,KAAAqI,kBAA8B,GA2C9B,KAAAC,oBAA8B,CAtC9B,CAEAC,eAAetB,GACX/wE,KAAK+wE,UAAYA,EACjB/wE,KAAK+wE,UAAUiB,YAAYhyE,KAAK8wE,oBAAqB5qC,IACvC,MAANA,IACAlmC,KAAK8pE,kBAAoBvkC,KAAKpnB,MAAM+nB,GACpClmC,KAAKkyE,oBAAsBlyE,KAAK8pE,kBAAkBhlE,QAElD9E,KAAK8f,KAAKiqD,cAAcpzC,QACxB32B,KAAK8f,KAAKiqD,cAAcjF,iBAAiB9kE,KAAKkyE,qBAE9ClyE,KAAKukE,oBACLvkE,KAAKsyE,6B,GAGjB,CAEAnvE,QACInD,KAAKmyE,kBAAoB,GACzBnyE,KAAK8pE,kBAAoB,GACzB9pE,KAAKkyE,oBAAsB,GAC3BlyE,KAAK8f,KAAKiqD,cAAcpzC,QACxB32B,KAAKuyE,sBACT,CAEAD,6BAC0B,MAAlBtyE,KAAK+wE,WAAqB/wE,KAAKmyE,kBAAkB5uE,OAAS,GAC1DvD,KAAKuyE,sBAEb,CAEAA,uBACIvyE,KAAK8pE,kBAAoB9pE,KAAK8pE,kBAAkBpwD,OAAO1Z,KAAKmyE,mBAC5DnyE,KAAKmyE,kBAAoB,GACzBnyE,KAAK+wE,UAAUc,cAAc7xE,KAAK8wE,mBAAoBvrC,KAAKC,UAAUxlC,KAAK8pE,mBAC9E,CAIAvF,oBACI,GAAyB,MAArBvkE,KAAKqyB,cAAwBryB,KAAKkyE,oBAAoB3uE,OAAS,EAAG,CAC7DvD,KAAKoyE,qBACNpyE,KAAK8f,KAAK0yD,qBAAqBz5B,OAAO,KACtC/4C,KAAK4kC,MAAQ5kC,KAAKkyE,oBAAoB3uE,OACtCvD,KAAK8f,KAAKspB,YAAYlI,KAAK,4CAE/BlhC,KAAK8f,KAAKspB,YAAY2c,YAAY/yC,KAAKsI,MAAM,KAAO,EAAItb,KAAKkyE,oBAAoB3uE,OAASvD,KAAK4kC,QAAU,MACzG,IAAInS,EAAYzyB,KAAKkyE,oBAAoBlsB,QACzChmD,KAAKoyE,oBAAqB,EAC1BpyE,KAAKqyB,aAAa4zB,aAAaxzB,GAAW,KAAQzyB,KAAKukE,mBAAmB,IAAI,KAAQvkE,KAAKukE,mBAAmB,G,MAE1GvkE,KAAKoyE,qBACLpyE,KAAK8f,KAAK63C,iBAAiBiK,UAC3B5hE,KAAKoyE,oBAAqB,EAC1BpyE,KAAK8f,KAAKspB,YAAYxI,OAGlC,CAEA8jC,OAAOv+B,GACHnmC,KAAK8f,KAAK0yD,qBAAqBz5B,OAAO,KACtC,IAAI05B,EAAgBtsC,EAAWhsB,KAAIsgB,GAA2B,MAAnBA,EAAKmtB,WAAqBntB,EAAK0rB,IAAM1rB,EAAKmtB,aACrF5nD,KAAKmyE,kBAAoBnyE,KAAKmyE,kBAAkBz4D,OAAO+4D,GACvDzyE,KAAK8f,KAAKiqD,cAAcjF,iBAAiB2N,GACzCzyE,KAAKsyE,4BACT,CAEAI,cAAcznB,GACVjrD,KAAKqyB,aAAe44B,EACpBjrD,KAAKukE,mBACT,CAEAh0B,WACIvwC,KAAKsyE,6BACLtyE,KAAK8pE,kBAAkBplE,MACvB1E,KAAKuyE,sBACT,E,2SCzFG,MAAMI,GAET9uE,YAAoBic,GAAA,KAAAA,KAAAA,CAEpB,CAEa8yD,KAAKpuC,G,0CACd,IAcI0B,EAdA2sC,EAAqBruC,EAAI11B,QAAQ,WAAY,IAC5CA,QAAQ,UAAW,IAAI0K,oBAExBs5D,EAAeD,EAAmBr5D,oBAElC8sB,QAAiCtmC,KAAK0mC,uBAAuBmsC,GACjE,OAAoB,MAAhBvsC,GAC8C,oBAA1Cue,GAAayG,YAAYhlB,KAEzBA,EAAegD,KAAK0E,QAAQ1H,IAEzB,CAAE4kB,QAAS5kB,KAIlBwsC,EAAajyB,SAAS,WACtB3a,QAAWlmC,KAAK+yE,eAAevuC,EAAKquC,IAC7BC,EAAajyB,SAAS,SAAWiyB,EAAajyB,SAAS,WAC9D3a,QAAWlmC,KAAKgzE,UAAUxuC,EAAKquC,IAGnC7yE,KAAKizE,oBAAoBJ,EAAoB3sC,EAAGglB,SAEzChlB,EAEX,G,CAEA8sC,UAAUxuC,EAAaquC,GAEnB,OADoB,IAAIjqB,GAAc5oD,KAAK8f,MACtB+oC,YAAYrkB,EACrC,CAEMuuC,eAAevuC,EAAaquC,G,0CAE9B,OAAO,IAAIzuE,SAAQ,CAACvD,EAASC,KACzBq9B,OAAO8G,KAAK,CACR1lC,KAAM,MACN4E,OAAO,EACPqgC,IAAKA,EACLyJ,UAAW,CAAEC,aAAc,eAC3BxI,QAAS,SAAUC,GACf,IAAIO,EAAK,IAAIgB,WAAWvB,GAEY,oBAAhCkf,GAAayG,YAAYplB,KAA2BA,EAAKoD,KAAK0E,QAAQ9H,IAC1ErlC,EAAQ,CAAEqqD,QAAShlB,GACvB,EACA9kC,MAAO,SAAUykC,EAAOlmB,GACpB7e,EAAO6e,EACX,GACF,GAIV,G,CAEAuzD,mBAAmB/sB,GAGf,IAAIhgB,EAAuB,GAM3B,OAJIA,GAJJggB,EAAMA,EAAIr3C,QAAQ,QAAS,OAGnB0B,QAAQ,QAAU,EACT21C,EAAIh4B,MAAM,OAEVg4B,EAAIh4B,MAAM,OAEpBgY,CACX,CAGMO,uBAAuBoqC,G,0CACzB,GAA0B,MAAtBA,EAA8B,OAAO,KAEzC,IAAK9wE,KAAK4mC,iBAAkB,OAAO,KAEnC,IAAIE,QAAcS,OAAOC,KAAK,YAE1B9pC,QAAcopC,EAAM9Y,MAAM8iD,GAE9B,GAAY,MAATpzE,EAAe,OAAO,KAEzB,IAAIupC,QAAevpC,EAAMspC,cAEzB,OAAO,IAAIE,WAAWD,EAE1B,G,CAEMgsC,oBAAoBnC,EAA4BxqC,G,0CAC7CtmC,KAAK4mC,yBAEQW,OAAOC,KAAK,aAExBH,IAAIypC,EAAoB,IAAIxpC,SAAShB,GAC/C,G,CAEAM,iBACI,MAAO,WAAYjoC,IACvB,EC5EG,MAAMw0E,GACTt6C,aAAwB,OAAO,CAAM,CAErCqxC,cACI,OAAOlqE,KAAKmqE,QAChB,CACA5yC,sBACI,OAAOv3B,KAAKqvC,gBAChB,CACAuD,kBACI,OAAO5yC,KAAK+U,OAAOA,MACvB,CAEAi1D,cACI,OAAOhqE,KAAKiqE,QAChB,CAEAlzC,eACI,OAAO/2B,KAAKs5B,SAChB,CAEAopB,mBACI,OAAO1iD,KAAKggE,aAChB,CAEAlpC,2B,MACI,OAAI92B,KAAKukD,OAAO6uB,aACwB,QAA7B,EAAApzE,KAAKqzE,aAAanE,mBAAW,eAAErpE,OAE/B7F,KAAKqvC,iBAAiBnZ,YAAYkH,gBAEjD,CAEAhG,kBACI,OAAOp3B,KAAKqyB,YAChB,CAEAoyC,sBACI,OAAOzkE,KAAK23D,gBAChB,CAEAC,wBACI,OAAO53D,KAAKs/D,kBAChB,CAEAha,iBACI,OAAOtlD,KAAKopC,WAChB,CAEAkwB,mBACI,OAAOt5D,KAAK+pE,aAChB,CA0DAlmE,YAAYsvD,EAAmCmgB,GAAA,KAAAA,WAAAA,EArD/C,KAAAvc,yBAAqC,GAoBrC,KAAAwc,qBAAsB,EACtB,KAAAl4C,QAAkB,EAalB,KAAAm4C,0BAAoC,EAqBhCxzE,KAAKyzE,WAAWtgB,GAEhBnzD,KAAK2pE,kBAAoB,IAAIsI,GAAkBjyE,MAAkC,MAA3BA,KAAKukD,OAAOmvB,YAAsB,iBAAmB1zE,KAAKukD,OAAOmvB,aAAe1zE,KAAKukD,OAAOtrB,IAElJj5B,KAAK45C,QAAQuZ,GAGbnzD,KAAK23D,iBAAmB,IAAI8J,GAAiBzhE,KAAMA,KAAK2zE,YACxD3zE,KAAKqyB,aAAe,IAAIwyB,GAAa7kD,MACN,MAA3BA,KAAKukD,OAAOmvB,YACZ,IAAIf,GAAgB3yE,MAAM4yE,KAAK5yE,KAAKukD,OAAOmvB,aAAaxyE,MAAM0yE,IAC1D5zE,KAAK4pE,oBAAsBgK,EAAW1oB,QACtClrD,KAAK6pE,kBAA6C,MAAzB+J,EAAWztC,WAAqB,GAAKytC,EAAWztC,WACzEnmC,KAAK6zE,cAAc,IACpB1sC,OAAO/lC,IACNqoC,MAAM,qCAAuCroC,EAAM,IAGvDpB,KAAK6zE,eAGT7zE,KAAKoqE,eAAiB,IAAIvJ,GAAe7gE,KAE7C,CAEA6zE,eACI7zE,KAAKglE,eAAc,KACfhlE,KAAK8zE,cAEL9zE,KAAK+wE,UAAY,IAAIF,GAAkB,WACvC7wE,KAAK+wE,UAAUvpC,MAAK,KAEM,MAAlBxnC,KAAKukD,OAAOtrB,KACZj5B,KAAK2pE,kBAAkB0I,eAAeryE,KAAK+wE,WAC3C/wE,KAAK+zE,c,GAGX,GAGV,CAEA/O,cAAchjC,GACVhiC,KAAKqyB,aAAa6yB,iBAAiBllD,KAAK4pE,oBAAqB5pE,KAAK6pE,mBAAmB,SAAW,KAC5F7pE,KAAK2pE,kBAAkB+I,cAAc1yE,KAAKqyB,cAC1CryB,KAAK23D,iBAAiB0B,oCACtBr3B,GAAU,GAElB,CAEA8xC,c,MAEqB,QAAjB,EAAA9zE,KAAKqzE,oBAAY,SAAEjE,iBAEnBpvE,KAAKg0E,cAAch0E,KAAKszE,YAEpBtzE,KAAKukD,OAAO6uB,cACZpzE,KAAKqzE,aAAe,IAAIxE,GAAqB7uE,KAAKqvC,iBAAiBnZ,YAAal2B,KAAKi0E,cAAej0E,MACpGA,KAAKqzE,aAAa3D,qBAClB1vE,KAAKszE,WAAWjjD,QAAQk/C,GAA0B,QAAfA,EAAOhwE,OAAgBgB,SAASgvE,GAAWvvE,KAAKqzE,aAAa/D,QAAQC,MAExGvvE,KAAKo3D,gBAAgBp3D,KAAKqvC,iBAAiBnZ,YAAYkH,iBAG/D,CAGAq2C,WAAWtgB,GACP,IAAI+gB,EAA8B/gB,EAAKnwB,KAAK,cAExChjC,KAAKukD,OADS,MAAd2vB,GAA2C,iBAAdA,EACf3uC,KAAKpnB,MAAM+1D,EAAW/lD,MAAM,KAAK/S,KAAK,MAEtC,CAAC,EAGa,MAA5Bpb,KAAKukD,OAAO6uB,eAAsBpzE,KAAKukD,OAAO6uB,cAAe,GACnC,MAA1BpzE,KAAKukD,OAAO4vB,aAAoBn0E,KAAKukD,OAAO4vB,YAAa,GAC5B,MAA7Bn0E,KAAKukD,OAAO6vB,gBAAuBp0E,KAAKukD,OAAO6vB,eAAgB,GAChC,MAA/Bp0E,KAAKukD,OAAO8vB,kBAAyBr0E,KAAKukD,OAAO8vB,iBAAkB,GAEjEr0E,KAAKukD,OAAO4vB,YAAcn0E,KAAKukD,OAAO6uB,cAAgBpzE,KAAKukD,OAAO6vB,gBACpEp0E,KAAKukD,OAAO8vB,iBAAkB,GAG7Br0E,KAAKukD,OAAO8vB,kBACbr0E,KAAKukD,OAAO6uB,cAAe,EAC3BpzE,KAAKukD,OAAO4vB,YAAa,EACzBn0E,KAAKukD,OAAO6vB,eAAgB,GAGF,MAA3Bp0E,KAAKukD,OAAOmvB,aACX,CAAC,QAAS,UAAUnzE,SAAQsnC,IACrB7nC,KAAKukD,OAAOmvB,YAAY5rC,WAAWD,KAAc7nC,KAAKukD,OAAOmvB,YAAY5rC,WAAWD,EAAW,SAC9F7nC,KAAKukD,OAAOmvB,YAAc1zE,KAAKukD,OAAOmvB,YAAY5kE,QAAQ+4B,EAAUA,EAAW,M,GAK/F,CAEAuvB,gBAAgBvxD,GAER7F,KAAKukD,OAAO6uB,cAAiD,MAAjCpzE,KAAKqzE,aAAanE,cAC9ClvE,KAAKqzE,aAAanE,YAAYrpE,OAAO6zD,YAAc15D,KAAK4yC,kBAAkB+mB,iBAG1E35D,KAAKukD,OAAO6uB,cACZpzE,KAAKqzE,aAAazC,SAAS/qE,GAS/B7F,KAAK4yC,kBAAkBva,cAAc,CACjCuhC,UAAU,EACV0a,oBAAqB,IAEzBt0E,KAAK+U,OAAOA,OAAO8iD,SAAShyD,EAAO+N,OAGT,MAAtB/N,EAAO6zD,aACP15D,KAAK4yC,kBAAkBknB,iBAAiBj0D,EAAO6zD,YAGvD,CAIAqa,cAEI,IAAIl3C,EAAU78B,KAAKqvC,iBAAiBnZ,YAAYM,YAAW,GAEvDiC,EAAOz4B,KAEXA,KAAK+wE,UAAUa,UAAU5xE,KAAKukD,OAAOtrB,IAAKs7C,I,MACtC,GAAsB,MAAlBA,EACAjqC,aAAY,KACR7R,EAAK+7C,aAAa,GACnB,SACA,CAEH,IAAIlB,EAAuB/tC,KAAKpnB,MAAMo2D,GAClCE,EAAYnB,EAAW/vE,OAE3B,IAAK,IAAIsC,KAAUg3B,EACE,QAAjB,EAAApE,EAAK46C,oBAAY,SAAE31C,aAAa73B,GAChC4yB,EAAKiF,aAAa73B,GAGtB,IAAK,IAAI/B,KAAQwvE,EAAY,CAEzB,IAAI7B,EAAWzxE,KAAKukD,OAAOtrB,GAAKn1B,EAChC9D,KAAK+wE,UAAUa,UAAUH,GAAWlC,I,QAChC,GAAc,MAAVA,EAAgB,CAEhB,IAAI1pE,EAAS4yB,EAAKs2C,UAAU,CACxBzvD,MAAOxb,EACPqN,KAAMo+D,EACNhwE,KAAM,QAGO,QAAjB,EAAAk5B,EAAK46C,oBAAY,SAAEtE,UAAUlpE,GAC7B4yB,EAAKi8C,iBAAiB37B,OAAO,I,CAKjC,GADA07B,IACiB,GAAbA,IACAnqC,aAAY,KACR7R,EAAK+7C,aAAa,GACnB,KACc,QAAjB,EAAA/7C,EAAK46C,oBAAY,SAAE3D,qBACM,MAArBj3C,EAAK46C,cAAsB,CAC3B,IAAIx2C,EAAUpE,EAAK4W,iBAAiBnZ,YAAYM,YAAW,GACvDqG,EAAQt5B,OAAS,GAAGk1B,EAAK2+B,gBAAgBv6B,EAAQ,G,SAajF,CAEA23C,cAEI,IAAI33C,EAAU78B,KAAKqvC,iBAAiBnZ,YAAYM,YAAW,GAEvD88C,EAAuB,GACvBqB,GAAuB,EAI3B,GAFA93C,EAAQt8B,SAAQ6d,GAAKu2D,EAAcA,IAAgBv2D,EAAEqY,KAAKmC,QAEtD+7C,EAAa,CAEb,IAAK,IAAI9uE,KAAUg3B,EAAS,CACxBy2C,EAAWtwE,KAAK6C,EAAO4wB,KAAK3yB,MAC5B,IAAI2tE,EAAWzxE,KAAKukD,OAAOtrB,GAAKpzB,EAAO4wB,KAAK3yB,KAC5C9D,KAAK+wE,UAAUS,YAAYC,EAAU5rE,EAAOgxB,iCAC5ChxB,EAAO4wB,KAAKmC,OAAQ,C,CAIxB54B,KAAK+wE,UAAUS,YAAYxxE,KAAKukD,OAAOtrB,GAAIsM,KAAKC,UAAU8tC,G,CAGlE,CAEAsB,oBACI50E,KAAK+wE,UAAUa,UAAU5xE,KAAKukD,OAAOtrB,IAAKs7C,IACtC,GAAsB,MAAlBA,EAEG,CAEH,IAAIjB,EAAuB/tC,KAAKpnB,MAAMo2D,GAEtC,IAAK,IAAIzwE,KAAQwvE,EAAY,CAEzB,IAAI7B,EAAWzxE,KAAKukD,OAAOtrB,GAAKn1B,EAChC9D,KAAK+wE,UAAUY,aAAaF,E,CAGhCzxE,KAAK+wE,UAAUY,aAAa3xE,KAAKukD,OAAOtrB,G,IAOpD,CAEA+6C,cAAcV,GACVtzE,KAAKqvC,iBAAmB,IAAIiC,GAAU,qBAAsBtxC,KAAM,GAGlE,IAAK,IAAIuvE,KAAU+D,EACI,OAAf/D,EAAOhwE,MACPS,KAAK+uE,UAAUQ,EAK3B,CAEAR,UAAUQ,GACN,IAAI1pE,EAAiB8xB,GAAOsa,gBAAgB,CACxChZ,GAAIj5B,KAAKqvC,iBAAiBnZ,YAAYM,YAAW,GAAMjzB,OACvDO,KAAMyrE,EAAOjwD,MACbnO,KAAMo+D,EAAOp+D,KACb+nB,qBAAsB,KACtBkC,eAAgB,KAChBjC,+BAA+B,EAC/BkC,QAAS,EACTG,aAAc,EACdC,aAAa,EACbC,UAAW,IACZ17B,MAEHA,KAAKqvC,iBAAiBnZ,YAAYgH,UAAUr3B,GAE5C,IAAI4yB,EAAOz4B,KAMX,OAJA6F,EAAO+N,MAAM8kB,oBAAmB,KAC5BD,EAAKo8C,gCAAgC,IAGlChvE,CACX,CAEA63B,aAAa73B,GACT7F,KAAKqvC,iBAAiBnZ,YAAYwH,aAAa73B,EACnD,CAGA+zC,QAAQuZ,GAIJA,EAAK9yB,IAAI,CACL,mBAAoB,OACpB,kBAAmB,SAGvB,IAAIy0C,EAAa32C,OAAO,qCAIxBg1B,EAAKhxB,OAAO2yC,GAEZ,IAAIpM,EAAW1oE,KAAK+0E,cACpB5hB,EAAKhxB,OAAOumC,GACZ1oE,KAAKopC,YAAc,IAAIq/B,GAAYC,GAEnC,IAAIsM,EAAwBh1E,KAAKi1E,yBAAyB9hB,GACtD+hB,EAA4Bl1E,KAAKm1E,6BAA6BhiB,GAE9DsH,EAAYz6D,KAAKo1E,eAEjBC,EAAal3C,OAAO,qCACxBn+B,KAAK4vE,WAAazxC,OAAO,qCACzBn+B,KAAK2vE,SAAWxxC,OAAO,iDACvBn+B,KAAK00E,iBAAmBv2C,OAAO,uHAC/Bn+B,KAAKwyE,qBAAuBr0C,OAAO,qIAEnCk3C,EAAWlzC,OAAOniC,KAAK4vE,WAAY5vE,KAAK2vE,SAAU3vE,KAAKwyE,sBACvDxyE,KAAK4vE,WAAWztC,OAAOniC,KAAK00E,kBAE5B,IAAIY,EAAmBt1E,KAAKu1E,sBAC5BF,EAAWlzC,OAAOmzC,GAIlBt1E,KAAK00E,iBAAiB9zC,OAEtB5gC,KAAK00E,iBAAiBvpD,GAAG,SAAS,KAAQ6pD,EAAsB9zC,MAAM,IAEtElhC,KAAKwyE,qBAAqB5xC,OAE1B5gC,KAAKwyE,qBAAqBrnD,GAAG,SAAS,KAAQ+pD,EAA0Bh0C,MAAM,IAE9ElhC,KAAK2vE,SAAS/uC,OAEd,IAAI40C,EAAer3C,OAAO,uCACtBs3C,EAAkBt3C,OAAO,0CAGzB69B,EAAa79B,OAAO,qCAGxB,GAFAn+B,KAAK01E,cAAcD,EAAiBD,GACpCxZ,EAAW75B,OAAOszC,GACdz1E,KAAKukD,OAAO6uB,aAAc,CAC1B,IAAIpE,EAAYhvE,KAAK21E,eACrB3Z,EAAWxK,QAAQwd,GACnB,IAAInB,GAAemB,GAAW,GAAO,GAAO,Q,CAEhDtsC,GAAS+yC,GACTtiB,EAAKhxB,OAAO65B,GAEZ7I,EAAKn0B,SAAS,qBAEdh/B,KAAK+U,OAAS,IAAIukC,GAAOt5C,MAAM,GAAO,GACtCA,KAAK+U,OAAO6kC,QAAQ55C,KAAK4vE,YACzB5vE,KAAK4vE,WAAW/7C,KAAK,kBAAkBwM,IAAI,UAAW,MAEzB,MAAzB8yB,EAAKt0B,KAAK,aAAqBs0B,EAAKt0B,KAAK,WAAY,KACzD7+B,KAAKggE,cAAgB,IAAIniC,GAAcs1B,EAAMnzD,MAC7CA,KAAKggE,cAAc1sD,OAEnBtT,KAAKs5B,UAAY,IAAIkxC,GAAUxqE,KAAMy1E,EAAiBtiB,GACtDnzD,KAAKs5B,UAAUsgB,UAEf55C,KAAKiqE,SAAW,IAAIzP,GAASx6D,KAAMA,KAAK41E,gBACxC51E,KAAKiqE,SAASrwB,UAEdk7B,EAAW3yC,OAAOkzC,EAAYrZ,GAC9B7I,EAAKhxB,OAAOs4B,GAEZ,IAAIob,EAAsB13C,OAAO,uDAC7B23C,EAAc33C,OAAO,wFAEzBq3C,EAAarzC,OAAO2zC,GAEpB91E,KAAK41E,eAAezzC,OAAO0zC,GAE3B,IAAIhI,GAAepT,GAAW,GAAM,GAAO,KACvCz6D,KAAK+U,OAAOA,OAAO+mD,QAAQ,GAC5BgZ,GAEH,IAAIjH,GAAe7R,GAAY,GAAM,GAAM,KAAQh8D,KAAK+U,OAAOA,OAAO+mD,QAAQ,IAE9Ega,EAAY3qD,GAAG,WAAY4V,IACvBA,EAAGpB,iBACHoB,EAAGrB,kBACH0B,GAAgB,CAAC,CACbQ,QAAS,0BACTC,KAAM,oBACNG,SAAU,SAGVjB,EAAGqzB,MAAQ,EAAGrzB,EAAGszB,MAAQ,EAAE,IAInC,IAAI0hB,EAAc53C,OAAO,kLAGrB1F,EAAOz4B,KAEPg2E,EAAmBD,EAAYliD,KAAK,SAExCmiD,EAAiB7qD,GAAG,UAAWiT,IAE3B,IAAIgN,EAAkBhN,EAAM6uB,cAAclqB,OAAOqI,MACjD3S,EAAKw9C,qBAAqB7qC,EAAM,IAAIlqC,MAAK,KACrC80E,EAAiBzxE,IAAI,KAAK,GAC5B,IAGN,IAAI2xE,EAAc/3C,OAAO,6HAIzB+3C,EAAY/qD,GAAG,SAAS,KAAQsN,EAAK09C,oBAAoB,IAEzDX,EAAarzC,OAAO4zC,EAAaG,GAEjCl2E,KAAKs/D,mBAAqB,IAAIwD,GAAmB9iE,KAAMy1E,GACvDz1E,KAAKs/D,mBAAmBuE,sBAAsB7jE,KAAK2pE,mBAGnD,IAAIjH,GAAsB1iE,KAAMw1E,GAEhCx1E,KAAK+pE,cAAgB,IAAIjB,GAAc9oE,KAAMmzD,EAAKt/B,KAAK,mBAEvDgN,YAAW,KACP7gC,KAAK+U,OAAOA,OAAO+mD,SACnB97D,KAAKmqE,SAAW,IAAIr0C,GAAS91B,MAC7BA,KAAK2qE,YAAY,GAClB,IAGP,CAEAwL,sBACI,IAAIhrB,IAAuBK,WAAWxrD,KAAKqyB,aAC/C,CAEM4jD,qBAAqBx/C,G,qCACvB,IAAI2/C,EAAiB,IAAIjrB,GACrBjlB,QAAWkwC,EAAentB,aAAaxyB,EAAMz2B,MACvC,MAANkmC,EAIAlmC,KAAKqyB,aAAa6yB,iBAAiBhf,EAAGglB,QAAS,IAAKz7C,IAC5CA,EAAOlM,OAAS,IAChBkmC,MAAM,wGACN1F,QAAQgF,IAAIt5B,G,IAEjB,KACCzP,KAAK23D,iBAAiB0B,mCAAmC,IAT7D5vB,MAAM,6CAad,E,+RAEAsrC,cAGI,IAAIvwC,GAA+B,MAAxBtE,OAAOqlB,cAAwB,GAAKrlB,OAAOqlB,eAAiB,8CAavE,OAAOpnB,OAXQ,iNAMCqG,qJAMpB,CAEA+wC,sBACI,OAAOp3C,OAAO,0UAQlB,CAEA82C,yBAAyBoB,GACrB,IAAIC,EAAUn4C,OACV,u4BAwCJ,OAnBAm4C,EAAQ11C,OAERy1C,EAAQl0C,OAAOm0C,GAEfD,EAAQxiD,KAAK,6BAA6B1I,GAAG,SAAS,KAClDmrD,EAAQ11C,MAAM,IAGlBy1C,EAAQxiD,KAAK,yBAAyB1I,GAAG,SAAS,KAE9CnrB,KAAK8zE,cACL9zE,KAAK40E,oBAEL0B,EAAQ11C,OACR5gC,KAAK00E,iBAAiB9zC,OACtB5gC,KAAKwzE,0BAA4B,CAAC,IAI/B8C,CACX,CAEAnB,6BAA6BkB,GACzB,IAAIC,EAAUn4C,OACV,i8BAyCJ,OApBAm4C,EAAQ11C,OAERy1C,EAAQl0C,OAAOm0C,GAEfD,EAAQxiD,KAAK,iCAAiC1I,GAAG,SAAS,KACtDmrD,EAAQ11C,MAAM,IAGlBy1C,EAAQxiD,KAAK,6BAA6B1I,GAAG,SAAS,KAElDmrD,EAAQ11C,OACR5gC,KAAKglE,eAAc,KACfhlE,KAAK2pE,kBAAkBxmE,OAAO,IAGlCnD,KAAKwyE,qBAAqB5xC,OAC1B5gC,KAAKwzE,0BAA4B,CAAC,IAI/B8C,CACX,CAEAX,eAGI,IAAI3G,EAAY7wC,OAAO,wDAEnBo4C,EAAep4C,OAAO,iGAM1B,OAJAn+B,KAAKi0E,cAAgB91C,OAAO,mDAE5B6wC,EAAU7sC,OAAOo0C,EAAcv2E,KAAKi0E,eAE7BjF,CACX,CAEArE,aAC4B,MAApB3qE,KAAK6qE,aACLxgC,cAAcrqC,KAAK6qE,aAGvB,IAAIpyC,EAAOz4B,KACXA,KAAK6qE,YAAcvgC,aAAY,KAE3B7R,EAAKwd,gBAAgB,GAEtB,IAGP,CAEAA,iB,QAEI,GAA6B,MAAzBj2C,KAAKqvC,kBAELrvC,KAAKqvC,iBAAiBnZ,YAAYoH,WAClCt9B,KAAKmqE,SAASp0C,gBAAkBF,GAAeM,WAAyD,MAA5Cn2B,KAAKo3B,kBAAkB7H,kBACnF,IAEIvvB,KAAKmqE,SAASl0C,QAAQj2B,KAAKqvC,iBAAiBnZ,aAGjB,QADd,EACA,QADA,EAAAl2B,KACTs5B,iBAAS,eAAEtC,oBAAY,SAAEouC,WAAWplE,KAAKqvC,kBAE7CrvC,KAAK+U,OAAOiqC,0BAA0B,MAEtCh/C,KAAKq7B,S,CAEP,MAAOlnB,GACL4vB,QAAQ3iC,MAAM+S,GACdnU,KAAKmqE,SAASp0C,eAAiBF,GAAez0B,K,CAK1D,CACAyzE,iCACI70E,KAAKwzE,4BACiC,GAAlCxzE,KAAKwzE,2BACLxzE,KAAK00E,iBAAiB37B,OAAO,IAErC,CAEA28B,cAAc1Z,EAAiCnqB,GAE3C,IAAI2kC,EAAer4C,OAAO,sCAC1Bq4C,EAAan2C,IAAI,WAAY,YAC7B,IAAIo2C,EAAct4C,OAAO,gFAKzB,GAHAs4C,EAAYt0C,OAAO0P,GACnB2kC,EAAar0C,OAAOs0C,GAEhBz2E,KAAKukD,OAAO6vB,cAAe,CAC3B,IAAIsC,EAAYv4C,OAAO,0GACvBq4C,EAAar0C,OAAOu0C,E,CAGxB,GAAI12E,KAAKukD,OAAO4vB,WAAY,CACxB,IAAIwC,EAAWx4C,OAAO,qHACtBq4C,EAAar0C,OAAOw0C,E,CAMxB,IAAIC,EAAaz4C,OAAO,uHACxBq4C,EAAar0C,OAAOy0C,GAEpB,IAAIC,EAAe14C,OAAO,gHAC1Bq4C,EAAar0C,OAAO00C,GAEpB7a,EAAW75B,OAAOq0C,GAElB,IAAI7b,EAAQx8B,OAAO,6CAEnB,GAAIn+B,KAAKukD,OAAO6vB,cAAe,CAC3B,IAAI0C,EAAY34C,OAAO,4DACvBw8B,EAAMx4B,OAAO20C,E,CAGjB,GAAI92E,KAAKukD,OAAO4vB,WAAY,CACxB,IAAI4C,EAAY54C,OAAO,iQAOvBw8B,EAAMx4B,OAAO40C,E,CAMjB,IAAIC,EAAc74C,OAAO,mDACzBw8B,EAAMx4B,OAAO60C,GAGbhb,EAAW75B,OAAOw4B,EAEtB,CAEAya,eAEI,IAAI3a,EAAYt8B,OAAO,oCACvBn+B,KAAK41E,eAAiBz3C,OAAO,yCAC7Bs8B,EAAUt4B,OAAOniC,KAAK41E,gBAGtB,IAAIY,EAAer4C,OAAO,sCAC1Bq4C,EAAan2C,IAAI,WAAY,YAC7B,IAAI42C,EAAS94C,OAAO,2GAEpBq4C,EAAar0C,OAAO80C,GAEpBj3E,KAAK41E,eAAezzC,OAAOq0C,GAE3B,IAAI7b,EAAQx8B,OAAO,6CAWnB,OARAn+B,KAAK2zE,WAAax1C,OAAO,0FAEzBw8B,EAAMx4B,OAAOniC,KAAK2zE,YAElB3zE,KAAK41E,eAAezzC,OAAOw4B,GAE3Bj4B,GAAS+3B,GAEFA,CACX,CAEA16C,oBACI,OAAO/f,KAAKoqE,cAChB,ECz1BG,MAAM8M,GAAb,cAGI,KAAA9X,gBAAkB,EAIlB,KAAA+X,iBAAmC,EAwDvC,CAtDIv9B,UAEI55C,KAAKyqE,uBAELzqE,KAAKwgE,aAAe,IAAI/oD,CAC5B,CAEAizD,cACI,IAAIt3D,GAAYE,OAChBtT,KAAKyqE,sBACT,CAEAA,uBACIzqE,KAAKo/D,kBACuB,GAAxBp/D,KAAKo/D,iBACLp/D,KAAKuyB,OAEb,CAEAA,QAEIvyB,KAAKo3E,oBAET,CAEAA,qBAEIj5C,OAAO,eAAe4S,MAAK,CAACnsB,EAAe0Q,KACvC,IAAI69B,EAAOh1B,OAAO7I,GACdg+C,EAAyB,GAC7BngB,EAAKt/B,KAAK,UAAUkd,MAAK,CAACnsB,EAAe0Q,KACrC,IAAI+hD,EAAUl5C,OAAO7I,GACjB/1B,EAAmB,MACI,MAAxB83E,EAAQr0C,KAAK,UAAiBzjC,EAAoB83E,EAAQr0C,KAAK,SAClE,IAAIusC,EAAmB,CACnBhwE,KAAMA,EACN+f,MAAO+3D,EAAQx4C,KAAK,SACpB1tB,KAAMkmE,EAAQlmE,OAAOid,QAEzBklD,EAAWtwE,KAAKusE,EAAO,IAG3BvvE,KAAKs3E,QAAQnkB,EAAMmgB,EAAW,GAItC,CAEAgE,QAAQnkB,EAA2BmgB,GAER,IAAIH,GAAahgB,EAAMmgB,EAElD,EAIJn1C,QAAO,WAEH,IAAIo5C,EAAkB,IAAIL,GAEtBM,EAAS,GACTC,EAAa,2BAEU,MAAxBv3C,OAAOqlB,gBAENiyB,EAASt3C,OAAOqlB,eAIU,MAA3BrlB,OAAOw3C,mBAEND,EAAav3C,OAAOw3C,kBAIxBx3C,OAAOy3C,QAAQpzB,OAAO,CAAEqzB,MAAO,CAAE,GAAMJ,EAASC,KAEhDv3C,OAAOy3C,QAAQpzB,OAAO,CAClB,SAAU,CACNszB,mBAAoB,CAChB,IAAK,OAGbC,uBAAwB,CAAC,2BAG7B53C,OAAOy3C,QAAQ,CAAC,0BAA0B,WAEtCJ,EAAgB7M,aAChB6M,EAAgB39B,SAEpB,GAEJ,G,GCnHIm+B,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBj7E,IAAjBk7E,EACH,OAAOA,EAAan7E,QAGrB,IAAI8I,EAASkyE,EAAyBE,GAAY,CAGjDl7E,QAAS,CAAC,GAOX,OAHAo7E,EAAoBF,GAAUpyE,EAAQA,EAAO9I,QAASi7E,GAG/CnyE,EAAO9I,OACf,CCnBAi7E,EAAoB,KACpBA,EAAoB,KACpBA,EAAoB,KACpBA,EAAoB,KACpBA,EAAoB,KACpBA,EAAoB,KACpBA,EAAoB,KACpBA,EAAoB,KACMA,EAAoB,I","sources":["webpack:///../node_modules/regenerator-runtime/runtime.js","webpack:///../src/client/compiler/lexer/Token.ts","webpack:///../src/client/compiler/lexer/Lexer.ts","webpack:///../src/client/main/gui/Formatter.ts","webpack:///../src/client/main/gui/ThemeManager.ts","webpack:///../src/client/compiler/parser/SQLTypes.ts","webpack:///../src/client/compiler/parser/Parser.ts","webpack:///../src/client/compiler/parser/SQLTable.ts","webpack:///../src/client/compiler/parser/SymbolTable.ts","webpack:///../src/client/compiler/parser/SQLMethods.ts","webpack:///../src/client/tools/StringTools.ts","webpack:///../src/client/compiler/parser/SymbolResolver.ts","webpack:///../src/client/compiler/Compiler.ts","webpack:///../src/client/compiler/parser/Module.ts","webpack:///../src/client/main/gui/ActionManager.ts","webpack:///../src/client/tools/HtmlTools.ts","webpack:///../src/client/communication/AjaxHelper.ts","webpack:///../src/client/workspace/WDatabase.ts","webpack:///../src/client/communication/CacheManager.ts","webpack:///../src/client/communication/NotifierClient.ts","webpack:///../src/client/tools/TemplateUploader.ts","webpack:///../src/client/communication/NetworkManager.ts","webpack:///../src/client/main/gui/DatabaseSettingsDialog.ts","webpack:///../src/client/workspace/Workspace.ts","webpack:///../src/client/main/gui/MyCompletionItemProvider.ts","webpack:///../src/client/main/gui/MySignatureHelpProvider.ts","webpack:///../src/client/main/gui/MyHoverProvider.ts","webpack:///../src/client/main/gui/MyCodeActionProvider.ts","webpack:///../src/client/main/gui/MyReferenceProvider.ts","webpack:///../src/client/main/gui/Helper.ts","webpack:///../src/client/main/gui/Editor.ts","webpack:///../src/client/main/gui/VscSql.ts","webpack:///../src/client/sqljs-worker/sqljsWorkerSim.ts","webpack:///../src/client/tools/DatabaseTools.ts","webpack:///../src/client/compiler/parser/StatementCleaner.ts","webpack:///../src/client/tools/MySqlImporter.ts","webpack:///../src/client/tools/DatabaseImportExport.ts","webpack:///../src/client/main/gui/NewDatabaseDialog.ts","webpack:///../src/client/main/gui/MainMenu.ts","webpack:///../src/client/main/gui/Accordion.ts","webpack:///../src/client/main/gui/DistributeToStudentsDialog.ts","webpack:///../src/client/main/gui/ProjectExplorer.ts","webpack:///../src/client/main/gui/RightDiv.ts","webpack:///../src/client/main/gui/Sliders.ts","webpack:///../src/client/main/gui/TeacherExplorer.ts","webpack:///../src/client/main/gui/Dialog.ts","webpack:///../src/client/main/gui/UserMenu.ts","webpack:///../src/client/main/Login.ts","webpack:///../src/client/main/gui/ViewModeController.ts","webpack:///../src/client/compiler/parser/SemicolonAngel.ts","webpack:///../src/client/main/gui/DatabaseExplorer.ts","webpack:///../src/client/main/gui/ProgramControlButtons.ts","webpack:///../src/client/main/gui/ResultsetPresenter.ts","webpack:///../src/client/communication/Notifier.ts","webpack:///../src/client/main/gui/WaitOverlay.ts","webpack:///../src/client/main/gui/HistoryViewer.ts","webpack:///../src/client/main/Main.ts","webpack:///../src/client/main/gui/ErrorManager.ts","webpack:///../src/client/main/gui/HomeworkManager.ts","webpack:///../src/client/main/gui/BottomDiv.ts","webpack:///../src/client/embedded/EmbeddedSlider.ts","webpack:///../src/client/embedded/EmbeddedFileExplorer.ts","webpack:///../src/client/embedded/EmbeddedIndexedDB.ts","webpack:///../src/client/embedded/WriteQueryManager.ts","webpack:///../src/client/tools/DatabaseLoader.ts","webpack:///../src/client/embedded/MainEmbedded.ts","webpack:///../src/client/embedded/EmbeddedStarter.ts","webpack:///webpack/bootstrap","webpack:///webpack/startup"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; };\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) });\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: true });\n  defineProperty(\n    GeneratorFunctionPrototype,\n    \"constructor\",\n    { value: GeneratorFunction, configurable: true }\n  );\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    defineProperty(this, \"_invoke\", { value: enqueue });\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method;\n    var method = delegate.iterator[methodName];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method, or a missing .next mehtod, always terminate the\n      // yield* loop.\n      context.delegate = null;\n\n      // Note: [\"return\"] must be used for ES3 parsing compatibility.\n      if (methodName === \"throw\" && delegate.iterator[\"return\"]) {\n        // If the delegate iterator has a return method, give it a\n        // chance to clean up.\n        context.method = \"return\";\n        context.arg = undefined;\n        maybeInvokeDelegate(delegate, context);\n\n        if (context.method === \"throw\") {\n          // If maybeInvokeDelegate(context) changed context.method from\n          // \"return\" to \"throw\", let that override the TypeError below.\n          return ContinueSentinel;\n        }\n      }\n      if (methodName !== \"return\") {\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a '\" + methodName + \"' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(val) {\n    var object = Object(val);\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","export enum TokenType {\r\n    identifier,\r\n    // constants\r\n    integerConstant,\r\n    floatingPointConstant,\r\n    booleanConstant,\r\n    stringConstant,\r\n    charConstant,\r\n    true,\r\n    false,\r\n    // keywords\r\n    keywordRename,\r\n    keywordDistinct,\r\n    keywordTo,\r\n    keywordAlter,\r\n    keywordCommit,\r\n    keywordAdd,\r\n    keywordDelete,\r\n    keywordSelect,\r\n    keywordInsert,\r\n    keywordInto,\r\n    keywordValues,\r\n    keywordUpdate,\r\n    keywordSet,\r\n    keywordNo,\r\n    keywordUse,\r\n    keywordCreate,\r\n    keywordReferences,\r\n    keywordPrimary,\r\n    keywordForeign,\r\n    keywordTable,\r\n    keywordTables,\r\n    keywordColumn,\r\n    keywordDrop,\r\n    keywordUnique,\r\n    keywordKey,\r\n    keywordIndex,\r\n    keywordConstraint,\r\n    keywordModify,\r\n    keywordCascade,\r\n    keywordRestrict,\r\n    keywordAction,\r\n    keywordAutoincrement,\r\n    keywordFrom,\r\n    keywordWhere,\r\n    keywordGroup,\r\n    keywordBy,\r\n    keywordHaving,\r\n    keywordOrder,\r\n    keywordAscending,\r\n    keywordDescending,\r\n    keywordNulls,\r\n    keywordFirst,\r\n    keywordLast,\r\n    keywordIs,\r\n    keywordNull,\r\n    keywordDatabase,\r\n\r\n    keywordOr,\r\n    keywordAnd,\r\n    keywordNot,\r\n\r\n    keywordJoin,\r\n    keywordNatural,\r\n    keywordLeft,\r\n    keywordCross,\r\n    keywordInner,\r\n    keywordOuter,\r\n    keywordOn,\r\n    keywordAs,\r\n    keywordLimit,\r\n    keywordOffset,\r\n    keywordIn,\r\n    keywordNotIn,\r\n    keywordLike,\r\n    keywordCollate,\r\n    keywordDefault,\r\n    keywordComment,\r\n    keywordEngine,\r\n    keywordCharset,\r\n    keywordCharacter,\r\n    \r\n    keywordStart,\r\n    keywordTransaction,\r\n    keywordIf,\r\n    keywordExists,\r\n\r\n    keywordLock,\r\n    keywordUnlock,\r\n    keywordWrite,\r\n    keywordRead,\r\n\r\n    // brackets\r\n    leftBracket, // ()\r\n    rightBracket,\r\n    leftSquareBracket, // []\r\n    rightSquareBracket,\r\n    leftCurlyBracket, // {}\r\n    rightCurlyBracket,\r\n    leftRightSquareBracket, // []\r\n    \r\n    // binary operators\r\n    dot, //.\r\n    modulo,\r\n    minus, plus, multiplication, division,\r\n    singleQuote, doubleQuote, // ', \"\r\n    identifierQuote,\r\n    lower, greater, lowerOrEqual, greaterOrEqual, \r\n    concatenation,    \r\n    equal,\r\n    notEqual,\r\n\r\n    // semicolon\r\n    semicolon, // ;\r\n\r\n    colon, // :\r\n\r\n    // comma\r\n    comma, // ,\r\n\r\n    // backslash\r\n    backslash,\r\n\r\n    // |\r\n    pipe,\r\n\r\n    // @\r\n    at,\r\n\r\n    // #\r\n    hash,\r\n\r\n    // whitespace\r\n    space,\r\n\r\n    tab,\r\n\r\n    // newline\r\n    newline,\r\n\r\n    // line feed\r\n    linefeed,\r\n\r\n    // only lexer-internal\r\n    identifierChar,  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    comment,\r\n\r\n    endofSourcecode, // will be generated after sourcecode end\r\n    \r\n    // Program statement types:\r\n    \r\n    // additional AST node types\r\n    constantNode,\r\n    callMethod,\r\n    unaryOp,\r\n    binaryOp,\r\n    table,\r\n    subquery,\r\n    list,\r\n    column,\r\n    columnDef,\r\n    allColumns, // *\r\n    isNull,\r\n    isNot, // used by lexer to lex \"is not null\" into one token\r\n    isNotNull,\r\n    omittedeStatement\r\n}\r\n\r\nexport var TokenTypeReadable: {[tt: number]: string} = {\r\n    [TokenType.identifier]: \"ein Bezeichner\",\r\n    // constants\r\n    [TokenType.integerConstant]: \"eine Integer-Konstante\",\r\n    [TokenType.floatingPointConstant]: \"eine Fließkomma-Konstante\",\r\n    [TokenType.booleanConstant]: \"eine boolesche Konstante\",\r\n    [TokenType.stringConstant]: \"eine Zeichenketten-Konstante\",\r\n    [TokenType.charConstant]: \"eine char-Konstante\",\r\n    [TokenType.true]: \"true\",\r\n    [TokenType.false]: \"false\",\r\n    // keywords\r\n    [TokenType.keywordRename]: \"rename\",\r\n    [TokenType.keywordDistinct]: \"distinct\",\r\n    [TokenType.keywordTo]: \"to\",\r\n    [TokenType.keywordAlter]: \"alter\",\r\n    [TokenType.keywordCommit]: \"commit\",\r\n    [TokenType.keywordAdd]: \"add\",\r\n    [TokenType.keywordDelete]: \"delete\",\r\n    [TokenType.keywordSelect]: \"select\",\r\n    [TokenType.keywordInsert]: \"insert\",\r\n    [TokenType.keywordInto]: \"into\",\r\n    [TokenType.keywordValues]: \"values\",\r\n    [TokenType.keywordUpdate]: \"update\",\r\n    [TokenType.keywordSet]: \"set\",\r\n    [TokenType.keywordNo]: \"no\",\r\n    [TokenType.keywordUse]: \"use\",\r\n    [TokenType.keywordCreate]: \"create\",\r\n    [TokenType.keywordReferences]: \"references\",\r\n    [TokenType.keywordPrimary]: \"primary\",\r\n    [TokenType.keywordForeign]: \"foreign\",\r\n    [TokenType.keywordTable]: \"table\",\r\n    [TokenType.keywordTables]: \"tables\",\r\n    [TokenType.keywordColumn]: \"column\",\r\n    [TokenType.keywordDrop]: \"drop\",\r\n    [TokenType.keywordUnique]: \"unique\",\r\n    [TokenType.keywordKey]: \"key\",\r\n    [TokenType.keywordIndex]: \"index\",\r\n    [TokenType.keywordConstraint]: \"constraint\",\r\n    [TokenType.keywordModify]: \"modify\",\r\n    [TokenType.keywordCascade]: \"cascade\",\r\n    [TokenType.keywordRestrict]: \"restrict\",\r\n    [TokenType.keywordAction]: \"action\",\r\n    [TokenType.keywordAutoincrement]: \"autoincrement\",\r\n    [TokenType.keywordFrom]: \"from\",\r\n    [TokenType.keywordWhere]: \"where\",\r\n    [TokenType.keywordGroup]: \"group\",\r\n    [TokenType.keywordBy]: \"by\",\r\n    [TokenType.keywordHaving]: \"having\",\r\n    [TokenType.keywordOrder]: \"order\",\r\n    [TokenType.keywordAscending]: \"ascending\",\r\n    [TokenType.keywordDescending]: \"descending\",\r\n    [TokenType.keywordNulls]: \"nulls\",\r\n    [TokenType.keywordFirst]: \"first\",\r\n    [TokenType.keywordLast]: \"last\",\r\n    [TokenType.keywordIs]: \"is\",\r\n    [TokenType.keywordNull]: \"null\",\r\n    [TokenType.keywordDatabase]: \"database\",\r\n\r\n\r\n    [TokenType.keywordAnd]: \"and\",\r\n    [TokenType.keywordOr]: \"or\",\r\n    [TokenType.keywordNot]: \"not\",\r\n\r\n    [TokenType.keywordJoin]: \"join\",\r\n    [TokenType.keywordNatural]: \"natural\",\r\n    [TokenType.keywordLeft]: \"left\",\r\n    [TokenType.keywordCross]: \"cross\",\r\n    [TokenType.keywordInner]: \"inner\",\r\n    [TokenType.keywordOuter]: \"outer\",\r\n    [TokenType.keywordOn]: \"on\",\r\n    [TokenType.keywordAs]: \"as\",\r\n    [TokenType.keywordLimit]: \"limit\",\r\n    [TokenType.keywordOffset]: \"offset\",\r\n    [TokenType.keywordIn]: \"in\",\r\n    [TokenType.keywordNotIn]: \"not in\",\r\n    [TokenType.keywordLike]: \"like\",\r\n    [TokenType.keywordCollate]: \"collate\",\r\n    [TokenType.keywordDefault]: \"default\",\r\n    [TokenType.keywordComment]: \"comment\",\r\n    [TokenType.keywordEngine]: \"engine\",\r\n    [TokenType.keywordCharset]: \"charset\",\r\n    [TokenType.keywordCharacter]: \"character\",\r\n    [TokenType.keywordStart]: \"start\",\r\n    [TokenType.keywordTransaction]: \"transaction\",\r\n    [TokenType.keywordIf]: \"if\",\r\n    [TokenType.keywordExists]: \"exists\",\r\n    [TokenType.keywordLock]: \"lock\",\r\n    [TokenType.keywordUnlock]: \"unlock\",\r\n    [TokenType.keywordWrite]: \"write\",\r\n    [TokenType.keywordRead]: \"read\",\r\n\r\n    // brackets\r\n    [TokenType.leftBracket]: \"(\", // ()\r\n    [TokenType.rightBracket]: \")\",\r\n    [TokenType.leftSquareBracket]: \"[\", // []\r\n    [TokenType.rightSquareBracket]: \"]\",\r\n    [TokenType.leftCurlyBracket]: \"{\", // {}\r\n    [TokenType.rightCurlyBracket]: \"}\",\r\n    [TokenType.leftRightSquareBracket]: \"[]\", \r\n    \r\n    // operators\r\n    [TokenType.dot]: \".\", //.\r\n    [TokenType.minus]: \"-\", \r\n    [TokenType.modulo]: \"%\", \r\n    [TokenType.plus]: \"+\", \r\n    [TokenType.multiplication]: \"*\", \r\n    [TokenType.division]: \"/\",\r\n    [TokenType.singleQuote]: \"'\", \r\n    [TokenType.doubleQuote]: \"\\\"\", // ']: \"\", \"\r\n    [TokenType.identifierQuote]: \"`\",\r\n    [TokenType.lower]: \"<\", \r\n    [TokenType.greater]: \">\",\r\n    [TokenType.equal]: \"=\", \r\n    [TokenType.lowerOrEqual]: \"<=\", \r\n    [TokenType.greaterOrEqual]: \">=\", \r\n    [TokenType.concatenation]: \"||\", \r\n    \r\n    // semicolon\r\n    [TokenType.semicolon]: \";\", // ;\r\n    [TokenType.colon]: \":\", // ;\r\n\r\n    // comma\r\n    [TokenType.comma]: \",\", \r\n\r\n    // backslash\r\n    [TokenType.backslash]: \"\\\\\",\r\n\r\n    // at\r\n    [TokenType.at]: \"@\",\r\n\r\n    // hash\r\n    [TokenType.hash]: \"#\",\r\n    \r\n    // pipe\r\n    [TokenType.pipe]: \"|\",\r\n\r\n    // whitespace\r\n    [TokenType.space]: \"ein Leerzeichen\",\r\n    [TokenType.tab]: \"ein Tabulatorzeichen\",\r\n\r\n    // newline\r\n    [TokenType.newline]: \"ein Zeilenumbruch\",\r\n\r\n    // only lexer-internal\r\n    [TokenType.identifierChar]: \"eines der Zeichen a..z, A..Z, _\",  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    [TokenType.comment]: \"ein Kommentar\",\r\n\r\n    [TokenType.endofSourcecode]: \"das Ende des Programmes\"\r\n\r\n}\r\n\r\nexport var specialCharList: {[keyword: string]:TokenType} = {\r\n    '(': TokenType.leftBracket, // ()\r\n    ')': TokenType.rightBracket,\r\n    '[': TokenType.leftSquareBracket, // []\r\n    ']': TokenType.rightSquareBracket,\r\n    '{': TokenType.leftCurlyBracket, // {}\r\n    '}': TokenType.rightCurlyBracket,\r\n    \r\n    // operators\r\n    '.': TokenType.dot, //.\r\n    ',': TokenType.comma, //.\r\n    '-': TokenType.minus,\r\n    '%': TokenType.modulo,\r\n    '+': TokenType.plus, \r\n    '*': TokenType.multiplication, \r\n    '/': TokenType.division,\r\n    '\\\\': TokenType.backslash,\r\n    '@': TokenType.at,\r\n    '#': TokenType.hash,\r\n    '|': TokenType.pipe,\r\n    '\\'': TokenType.singleQuote, \r\n    '\"': TokenType.doubleQuote, // ', \"\r\n    '`': TokenType.identifierQuote, // ', \"\r\n    \"<\": TokenType.lower,\r\n    \">\": TokenType.greater,\r\n    \"=\": TokenType.equal,\r\n    \"<>\": TokenType.notEqual,\r\n    \r\n    ';': TokenType.semicolon, // ;\r\n    ':': TokenType.colon, // ;\r\n\r\n    // whitespace\r\n    ' ': TokenType.space,\r\n    '\\t': TokenType.tab,\r\n\r\n    // newline\r\n    '\\n': TokenType.newline,\r\n    '\\r': TokenType.linefeed\r\n}\r\n\r\nexport var keywordList: {[keyword: string]:TokenType} = {\r\n    \"rename\": TokenType.keywordRename,\r\n    \"distinct\": TokenType.keywordDistinct,\r\n    \"to\": TokenType.keywordTo,\r\n    \"alter\": TokenType.keywordAlter,\r\n    \"commit\": TokenType.keywordCommit,\r\n    \"add\": TokenType.keywordAdd,\r\n    \"delete\": TokenType.keywordDelete,\r\n    \"select\": TokenType.keywordSelect,\r\n    \"insert\": TokenType.keywordInsert,\r\n    \"into\": TokenType.keywordInto,\r\n    \"values\": TokenType.keywordValues,\r\n    \"update\": TokenType.keywordUpdate,\r\n    \"set\": TokenType.keywordSet,\r\n    \"no\": TokenType.keywordNo,\r\n    \"use\": TokenType.keywordUse,\r\n    \"create\": TokenType.keywordCreate,\r\n    \"references\": TokenType.keywordReferences,\r\n    \"primary\": TokenType.keywordPrimary,\r\n    \"foreign\": TokenType.keywordForeign,\r\n    \"table\": TokenType.keywordTable,\r\n    \"tables\": TokenType.keywordTables,\r\n    \"column\": TokenType.keywordColumn,\r\n    \"drop\": TokenType.keywordDrop,\r\n    \"unique\": TokenType.keywordUnique,\r\n    \"key\": TokenType.keywordKey,\r\n    \"index\": TokenType.keywordIndex,\r\n    \"constraint\": TokenType.keywordConstraint,\r\n    \"modify\": TokenType.keywordModify,\r\n    \"cascade\": TokenType.keywordCascade,\r\n    \"restrict\": TokenType.keywordRestrict,\r\n    \"action\": TokenType.keywordAction,\r\n    \"autoincrement\": TokenType.keywordAutoincrement,\r\n    \"auto_increment\": TokenType.keywordAutoincrement,\r\n    \"from\": TokenType.keywordFrom,\r\n    \"where\": TokenType.keywordWhere,\r\n    \"true\": TokenType.true,\r\n    \"false\": TokenType.false,\r\n    \"group\": TokenType.keywordGroup,\r\n    \"by\": TokenType.keywordBy,\r\n    \"having\": TokenType.keywordHaving,\r\n    \"order\": TokenType.keywordOrder,\r\n    \"asc\": TokenType.keywordAscending,\r\n    \"desc\": TokenType.keywordDescending,\r\n    \"nulls\": TokenType.keywordNulls,\r\n    \"first\": TokenType.keywordFirst,\r\n    \"last\": TokenType.keywordLast,\r\n    \"is\": TokenType.keywordIs,\r\n    \"null\": TokenType.keywordNull,\r\n    \"database\": TokenType.keywordDatabase,\r\n\r\n    \"or\": TokenType.keywordOr,\r\n    \"and\": TokenType.keywordAnd,\r\n    \"not\": TokenType.keywordNot,\r\n\r\n    \"join\": TokenType.keywordJoin,\r\n    \"natural\": TokenType.keywordNatural,\r\n    \"left\": TokenType.keywordLeft,\r\n    \"cross\": TokenType.keywordCross,\r\n    \"inner\": TokenType.keywordInner,\r\n    \"outer\": TokenType.keywordOuter,\r\n    \"on\": TokenType.keywordOn,\r\n    \"as\": TokenType.keywordAs,\r\n    \"limit\": TokenType.keywordLimit,\r\n    \"offset\": TokenType.keywordOffset,\r\n    \"in\": TokenType.keywordIn,\r\n    \"not in\": TokenType.keywordNotIn,\r\n    \"like\": TokenType.keywordLike,\r\n    \"collate\": TokenType.keywordCollate,\r\n    \"default\": TokenType.keywordDefault,\r\n    \"comment\": TokenType.keywordComment,\r\n    \"engine\": TokenType.keywordEngine,\r\n    \"charset\": TokenType.keywordCharset,\r\n    \"character\": TokenType.keywordCharacter,\r\n    \"start\": TokenType.keywordStart,\r\n    \"transaction\": TokenType.keywordTransaction,\r\n    \"if\": TokenType.keywordIf,\r\n    \"exists\": TokenType.keywordExists,\r\n    \"lock\": TokenType.keywordLock,\r\n    \"unlock\": TokenType.keywordUnlock,\r\n    \"write\": TokenType.keywordWrite,\r\n    \"read\": TokenType.keywordRead\r\n\r\n\r\n};\r\n\r\nexport var EscapeSequenceList: {[keyword: string]:string} = {\r\n    \"n\": \"\\n\",\r\n    \"r\": \"\\r\",\r\n    \"t\": \"\\t\",\r\n    \"\\\"\": \"\\\"\",\r\n    \"'\": \"'\",\r\n    \"\\\\\": \"\\\\\"\r\n}\r\n\r\nexport type TextPosition = {\r\n    line: number,\r\n    column: number, \r\n    length: number\r\n}\r\n\r\nexport type TextPositionWithoutLength = {\r\n    line: number,\r\n    column: number\r\n}\r\n\r\nexport type Token = {\r\n    tt: TokenType,\r\n    value: string|number|boolean,\r\n    position: TextPosition,\r\n    commentBefore?: Token,\r\n    isDoubleQuotedIdentifier?: boolean\r\n}\r\n\r\nexport type TokenList = Token[];\r\n\r\nfunction tokenToString(t: Token){\r\n    return \"<div><span style='font-weight: bold'>\" + TokenType[t.tt] + \"</span>\" +\r\n            \"<span style='color: blue'> &nbsp;'\" + t.value + \"'</span> (l&nbsp;\" + t.position.line + \", c&nbsp;\" + t.position.column + \")</div>\";\r\n}\r\n \r\nexport function tokenListToString(tl: TokenList):string{\r\n    let s = \"\";\r\n    for(let t of tl){\r\n        s += tokenToString(t) + \"\\n\";\r\n    }\r\n    return s;\r\n}","import { TokenList, specialCharList, TokenType, Token, EscapeSequenceList, keywordList, TextPosition, TokenTypeReadable } from \"./Token.js\";\r\n\r\nenum LexerState {\r\n    number, identifier, stringConstant, characterConstant, multilineComment, EndoflineComment\r\n}\r\n\r\nvar endChar = \"►\"; // \\u10000\r\n\r\nexport type QuickFix = {\r\n    title: string,\r\n    editsProvider: (uri: monaco.Uri) => monaco.languages.WorkspaceTextEdit[]\r\n}\r\n\r\nexport type ErrorLevel = \"info\" | \"error\" | \"warning\";\r\n\r\nexport type Error = {\r\n    position: TextPosition,\r\n    text: string,\r\n    quickFix?: QuickFix,\r\n    level: ErrorLevel\r\n}\r\n\r\nexport class Lexer {\r\n\r\n    tokenList: TokenList;\r\n    nonSpaceLastTokenType: TokenType;\r\n    nonSpaceLastToken: Token;\r\n\r\n    errorList: Error[];\r\n    pos: number;\r\n    line: number;\r\n    column: number;\r\n\r\n    currentChar: string;\r\n    nextChar: string;\r\n\r\n    input: string;\r\n\r\n    spaceTokens: TokenType[] = [\r\n        TokenType.space, TokenType.tab, TokenType.newline\r\n    ];\r\n\r\n    bracketStack: TokenType[];\r\n    bracketError: string;\r\n    correspondingBracket: { [key: number]: TokenType } = {};\r\n\r\n    tokenTypesToMerge: { first: TokenType, second: TokenType, merged: TokenType }[] = [\r\n        { first: TokenType.keywordNotIn, second: TokenType.keywordIn, merged: TokenType.keywordNotIn },\r\n        { first: TokenType.keywordIs, second: TokenType.keywordNot, merged: TokenType.isNot },\r\n        { first: TokenType.isNot, second: TokenType.keywordNull, merged: TokenType.isNotNull },\r\n        { first: TokenType.keywordIs, second: TokenType.keywordNull, merged: TokenType.isNull },\r\n    ]\r\n\r\n    constructor() {\r\n        this.correspondingBracket[TokenType.leftBracket] = TokenType.rightBracket;\r\n        this.correspondingBracket[TokenType.leftCurlyBracket] = TokenType.rightCurlyBracket;\r\n        this.correspondingBracket[TokenType.leftSquareBracket] = TokenType.rightSquareBracket;\r\n        this.correspondingBracket[TokenType.rightBracket] = TokenType.leftBracket;\r\n        this.correspondingBracket[TokenType.rightCurlyBracket] = TokenType.leftCurlyBracket;\r\n        this.correspondingBracket[TokenType.rightSquareBracket] = TokenType.leftSquareBracket;\r\n    }\r\n\r\n    lex(input: string): { tokens: TokenList, errors: Error[], bracketError: string } {\r\n\r\n        this.input = input.replace(\"\\u00a0\", \" \");\r\n        this.tokenList = [];\r\n        this.errorList = [];\r\n        this.bracketError = null;\r\n        this.bracketStack = [];\r\n        this.pos = 0;\r\n        this.line = 1;\r\n        this.column = 1;\r\n        this.nonSpaceLastTokenType = null;\r\n        this.nonSpaceLastToken = null;\r\n\r\n\r\n        if (input.length == 0) {\r\n            return { tokens: this.tokenList, errors: this.errorList, bracketError: null };\r\n        }\r\n\r\n        this.currentChar = input.charAt(0);\r\n\r\n        this.nextChar = input.length > 1 ? input.charAt(1) : endChar;\r\n\r\n\r\n        while (this.currentChar != endChar) {\r\n            this.mainState();\r\n        }\r\n\r\n        if (this.bracketStack.length > 0) {\r\n            let bracketOpen = this.bracketStack.pop();\r\n            let bracketClosed = this.correspondingBracket[bracketOpen];\r\n\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[bracketClosed]);\r\n        }\r\n\r\n        return {\r\n            tokens: this.tokenList,\r\n            errors: this.errorList,\r\n            bracketError: this.bracketError\r\n        };\r\n\r\n    }\r\n\r\n    checkClosingBracket(tt: TokenType) {\r\n        if (this.bracketStack.length == 0) {\r\n            let bracketOpen = this.correspondingBracket[tt];\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[tt]);\r\n            return;\r\n        }\r\n        let openBracket = this.bracketStack.pop();\r\n        let correspondingBracket = this.correspondingBracket[openBracket];\r\n        if (tt != correspondingBracket) {\r\n            this.setBracketError(TokenTypeReadable[openBracket] + \" \" + TokenTypeReadable[correspondingBracket]);\r\n        }\r\n    }\r\n\r\n    setBracketError(error: string) {\r\n        if (this.bracketError == null) this.bracketError = error;\r\n    }\r\n\r\n    next() {\r\n        this.pos++;\r\n        this.currentChar = this.nextChar;\r\n        if (this.pos + 1 < this.input.length) {\r\n            this.nextChar = this.input.charAt(this.pos + 1);\r\n        } else {\r\n            this.nextChar = endChar;\r\n        }\r\n        this.column++; // column of current char\r\n    }\r\n\r\n\r\n\r\n    mainState() {\r\n\r\n        let char = this.currentChar;\r\n\r\n        let specialCharToken = specialCharList[char];\r\n\r\n        if (specialCharToken != null) {\r\n            switch (specialCharToken) {\r\n                case TokenType.leftSquareBracket:\r\n                    if (this.nextChar == \"]\") {\r\n                        this.pushToken(TokenType.leftRightSquareBracket, \"[]\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.leftSquareBracket, \"[\");\r\n                        this.bracketStack.push(specialCharToken);\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.division:\r\n                    if (this.nextChar == '*') {\r\n                        this.lexMultilineComment();\r\n                        return;\r\n                    }\r\n                    this.pushToken(TokenType.division, '/');\r\n                    this.next();\r\n                    return;\r\n                case TokenType.pipe:\r\n                    if (this.nextChar == \"|\") {\r\n                        this.pushToken(TokenType.concatenation, '||');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.pipe, '|');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.lower:\r\n                    if (this.nextChar == \">\") {\r\n                        this.pushToken(TokenType.notEqual, '<>');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == \"=\"){\r\n                        this.pushToken(TokenType.lowerOrEqual, '<=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                    else {\r\n                        this.pushToken(TokenType.lower, '<');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.greater:\r\n                    if (this.nextChar == \"=\"){\r\n                        this.pushToken(TokenType.greaterOrEqual, '>=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                    else {\r\n                        this.pushToken(TokenType.greater, '>');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.rightSquareBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.minus:\r\n                    if (this.isDigit(this.nextChar, 10) && !\r\n                        ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.rightBracket].indexOf(this.nonSpaceLastTokenType) >= 0)\r\n                    ) {\r\n                        this.lexNumber();\r\n                        return;\r\n                    } else if (this.nextChar == '-') {\r\n                        this.lexEndofLineComment(\"--\");\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.minus, '-');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.hash:\r\n                    if(this.nonSpaceLastToken == null || this.nonSpaceLastToken.position.line < this.line){\r\n                        this.lexEndofLineComment('#');\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.hash, \"#\");\r\n                        this.next();\r\n                    }\r\n                    break;\r\n                case TokenType.singleQuote:\r\n                    this.lexStringConstant(\"'\");\r\n                    return;\r\n                case TokenType.doubleQuote:\r\n                    this.lexStringConstant('\"');\r\n                    return;\r\n                case TokenType.newline:\r\n                    this.pushToken(TokenType.newline, '\\n');\r\n                    this.line++;\r\n                    this.column = 0;\r\n                    this.next();\r\n                    return;\r\n                case TokenType.space:\r\n                case TokenType.tab:\r\n                    this.lexSpace();\r\n                    return;\r\n                case TokenType.linefeed:\r\n                    this.next();\r\n                    return;\r\n                case TokenType.at:\r\n                    this.lexAnnotation();\r\n                    return;\r\n                case TokenType.identifierQuote:\r\n                    this.lexQuotedIdentifier();\r\n                    return;\r\n                \r\n            }\r\n\r\n            this.pushToken(specialCharToken, char);\r\n            this.next();\r\n            return;\r\n\r\n        }\r\n\r\n        // no special char. Number?\r\n\r\n        if (this.isDigit(char, 10)) {\r\n            this.lexNumber();\r\n            return;\r\n        }\r\n\r\n        this.lexIdentifierOrKeyword();\r\n\r\n    }\r\n\r\n\r\n    lexQuotedIdentifier() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let s: string = \"\";\r\n        this.next();\r\n        while(this.currentChar != '`' && this.currentChar != endChar){\r\n            s += this.currentChar;\r\n            this.next();\r\n        }\r\n        if(this.currentChar == endChar){\r\n            this.pushError(\"Innerhalb eines in `` eingeschlossenen Bezeichners wurde das Ende der Datei erreicht.\", s.length + 1, \"error\", line, column);\r\n        } else {\r\n            this.next(); // skip `\r\n            this.pushToken(TokenType.identifier, s, line, column);\r\n        }\r\n    }\r\n\r\n    pushToken(tt: TokenType, text: string | number | boolean, line: number = this.line, column: number = this.column, length: number = (\"\" + text).length) {\r\n        let t: Token = {\r\n            tt: tt,\r\n            value: text,\r\n            position: {\r\n                column: column,\r\n                line: line,\r\n                length: length\r\n            }\r\n        }\r\n\r\n        for (let tripel of this.tokenTypesToMerge) {\r\n            if (tt == tripel.second && this.nonSpaceLastTokenType == tripel.first) {\r\n                let newLength = column - this.nonSpaceLastToken.position.column + length;\r\n                this.nonSpaceLastToken.tt = tripel.merged;\r\n                this.nonSpaceLastToken.position = { column: this.nonSpaceLastToken.position.column, line: line, length: newLength };\r\n                this.nonSpaceLastToken.value = this.nonSpaceLastToken.value + \" \" + text;\r\n\r\n                this.nonSpaceLastTokenType = tripel.merged;\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (!(this.spaceTokens.indexOf(tt) >= 0)) {\r\n            this.nonSpaceLastTokenType = tt;\r\n            this.nonSpaceLastToken = t;\r\n        }\r\n\r\n        this.tokenList.push(t);\r\n    }\r\n\r\n    pushError(text: string, length: number, errorLevel: ErrorLevel = \"error\", line: number = this.line, column: number = this.column) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: {\r\n                line: line,\r\n                column: column,\r\n                length: length\r\n            },\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n\r\n\r\n    isDigit(a: string, base: number) {\r\n        var charCode = a.charCodeAt(0);\r\n\r\n        if (base == 10) return (charCode >= 48 && charCode <= 57); // 0 - 9\r\n        if (base == 2) return (charCode >= 48 && charCode <= 49); // 0, 1\r\n        if (base == 8) return (charCode >= 48 && charCode <= 55); // 0 - 7\r\n        if (base == 16) return (charCode >= 48 && charCode <= 57) || (charCode >= 97 && charCode <= 102) ||\r\n            (charCode >= 65 && charCode <= 70); // 0 - 9 || a - f || A - F\r\n    }\r\n\r\n    lexSpace() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n\r\n        let posStart = this.pos;\r\n        while (this.currentChar == \" \" || this.currentChar == \"\\t\") {\r\n            this.next();\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n        this.pushToken(TokenType.space, this.input.substring(posStart, posEnd), line, column);\r\n        return;\r\n\r\n    }\r\n\r\n    lexCharacterConstant() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n        this.next();\r\n        let char = this.currentChar;\r\n        if (char == \"\\\\\") {\r\n            let escapeChar = EscapeSequenceList[this.nextChar];\r\n            if (escapeChar == null) {\r\n                this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                if (this.nextChar != \"'\") {\r\n                    char = this.nextChar;\r\n                    this.next();\r\n                }\r\n            } else {\r\n                char = escapeChar;\r\n                this.next();\r\n            }\r\n        }\r\n        this.next();\r\n        if (this.currentChar != \"'\") {\r\n            this.pushError(\"Das Ende der char-Konstante wird erwartet (').\", 1);\r\n        } else {\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.charConstant, char, line, column);\r\n\r\n    }\r\n\r\n    lexStringConstant(beginChar: string) {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let text = \"\";\r\n\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\\\\") {\r\n                let escapeChar = EscapeSequenceList[this.nextChar];\r\n                if (escapeChar == null) {\r\n                    this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                } else {\r\n                    char = escapeChar;\r\n                    this.next();\r\n                }\r\n            } else if (char == beginChar) {\r\n                this.next();\r\n                if(this.currentChar != beginChar){\r\n                    break;\r\n                }\r\n                text += beginChar;\r\n            } else if (char == \"\\n\" || char == endChar) {\r\n                this.pushError('Innerhalb einer String-Konstante wurde das Zeilenende erreicht.', text.length + 1, \"error\", line, column);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        if (beginChar == \"'\") {\r\n            this.pushToken(TokenType.stringConstant, text, line, column, text.length + 2);\r\n        } else {\r\n            this.pushToken(TokenType.identifier, text, line, column, text.length + 2);\r\n            this.tokenList[this.tokenList.length - 1].isDoubleQuotedIdentifier = true;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    lexMultilineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let lastCharWasNewline: boolean = false;\r\n\r\n        let text = \"/*\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"*\" && this.nextChar == \"/\") {\r\n                this.next();\r\n                this.next();\r\n                text += \"*/\";\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                this.pushError(\"Innerhalb eines Mehrzeilenkommentars (/*... */) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            if (char == \"\\n\") {\r\n                this.line++;\r\n                this.column = 0;\r\n                lastCharWasNewline = true;\r\n                text += char;\r\n            } else if (!(lastCharWasNewline && char == \" \")) {\r\n                text += char;\r\n                lastCharWasNewline = false;\r\n            }\r\n\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n    lexEndofLineComment(commentStart: string) {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let text = commentStart;\r\n        for(let i = 0; i < commentStart.length; i++){\r\n            this.next();\r\n        }\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\n\") {\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                // this.pushError(\"Innerhalb eines Einzeilenkommentars (//... ) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n\r\n    lexNumber() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let sign: number = 1;\r\n        if (this.currentChar == '-') {\r\n            sign = -1;\r\n            this.next();\r\n        }\r\n\r\n        let posStart = this.pos;\r\n\r\n        let firstChar = this.currentChar;\r\n\r\n        this.next();\r\n\r\n        let radix: number = 10;\r\n\r\n        if (firstChar == '0' && (['b', 'x', '0', '1', '2', '3', '4', '5', '6', '7'].indexOf(this.currentChar) >= 0)) {\r\n            if (this.currentChar == 'x') {\r\n                radix = 16;\r\n                this.next();\r\n            } else if (this.currentChar == 'b') {\r\n                radix = 2;\r\n                this.next();\r\n            } else radix = 8;\r\n            posStart = this.pos;\r\n        }\r\n\r\n        while (this.isDigit(this.currentChar, radix)) {\r\n            this.next();\r\n        }\r\n\r\n        let tt = TokenType.integerConstant;\r\n\r\n        if (this.currentChar == \".\") {\r\n            tt = TokenType.floatingPointConstant;\r\n\r\n            this.next();\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n\r\n        }\r\n\r\n        let base = this.input.substring(posStart, this.pos);\r\n\r\n        posStart = this.pos;\r\n        let exponent: number = 0;\r\n\r\n        let hasExponential: boolean = false;\r\n        //@ts-ignore\r\n        if (this.currentChar == \"e\") {\r\n            hasExponential = true;\r\n            this.next();\r\n            let posExponentStart: number = this.pos;\r\n\r\n            //@ts-ignore\r\n            if (this.currentChar == '-') {\r\n                this.next();\r\n            }\r\n\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n            let exponentString = this.input.substring(posExponentStart, this.pos);\r\n            exponent = Number.parseInt(exponentString);\r\n        }\r\n\r\n        if (this.currentChar == 'd' || this.currentChar == 'f') {\r\n            tt == TokenType.floatingPointConstant;\r\n            this.next();\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n        }\r\n\r\n        let value: number = (tt == TokenType.integerConstant) ? Number.parseInt(base, radix) : Number.parseFloat(base);\r\n        value *= sign;\r\n        if (exponent != 0) value *= Math.pow(10, exponent);\r\n\r\n        this.pushToken(tt, value, line, column);\r\n\r\n    }\r\n\r\n    lexAnnotation() {\r\n        let line = this.line;\r\n        let column = this.column - 1;\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n        this.next(); // skip@\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n        this.pushToken(TokenType.at, text, line, column, text.length + 1);\r\n    }\r\n\r\n    lexIdentifierOrKeyword() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n\r\n        let tt = keywordList[text.toLowerCase()];\r\n        if (tt != null && typeof tt == \"number\") {\r\n\r\n            switch (tt) {\r\n                case TokenType.true:\r\n                    this.pushToken(TokenType.booleanConstant, true, line, column);\r\n                    break;\r\n                case TokenType.false:\r\n                    this.pushToken(TokenType.booleanConstant, false, line, column);\r\n                    break;\r\n                default:\r\n                    this.pushToken(tt, text, line, column);\r\n                    break;\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        this.pushToken(TokenType.identifier, text, line, column);\r\n\r\n    }\r\n\r\n    isSpace(char: string): boolean {\r\n        return char == \" \" || char == \"\\n\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport function errorListToString(errorList: Error[]): string {\r\n    let s = \"\";\r\n\r\n    for (let error of errorList) {\r\n\r\n        s += \"Z \" + error.position.line + \", S \" + error.position.column + \": \";\r\n        s += error.text + \"<br>\";\r\n\r\n    }\r\n\r\n    return s;\r\n}","import { Lexer } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Token, TokenList, TokenType, tokenListToString } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class Formatter implements monaco.languages.DocumentFormattingEditProvider,\r\n    monaco.languages.OnTypeFormattingEditProvider {\r\n\r\n    autoFormatTriggerCharacters: string[] = ['\\n'];\r\n\r\n    displayName?: string = \"Java-Autoformat\";\r\n\r\n\r\n    constructor(\r\n        // private main: Main\r\n    ) {\r\n\r\n    }\r\n\r\n    init() {\r\n        monaco.languages.registerDocumentFormattingEditProvider('myJava', this);\r\n        monaco.languages.registerOnTypeFormattingEditProvider('myJava', this);\r\n    }\r\n\r\n    provideOnTypeFormattingEdits(model: monaco.editor.ITextModel, position: monaco.Position, ch: string, options: monaco.languages.FormattingOptions, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n    deleteOverlappingRanges(edits: monaco.languages.TextEdit[]) {\r\n        for (let i = 0; i < edits.length - 1; i++) {\r\n            let e = edits[i];\r\n            let e1 = edits[i + 1];\r\n            if (e.range.endLineNumber < e1.range.startLineNumber) continue;\r\n            if (e.range.endLineNumber == e1.range.startLineNumber) {\r\n                if (e.range.endColumn >= e1.range.startColumn) {\r\n                    edits.splice(i + 1, 1);\r\n                } else {\r\n                    if (e.range.endColumn == 0 && e.text.length > 0 && e1.range.startColumn == 1 && e1.range.endColumn > e1.range.startColumn && e1.text == \"\") {\r\n                        let delta = e.text.length - (e1.range.endColumn - e1.range.startColumn);\r\n                        if (delta > 0) { \r\n                            e.text = e.text.substr(0, delta);\r\n                            edits.splice(i+1, 1);\r\n                        }\r\n                        else if (delta < 0)\r\n                        { \r\n                            //@ts-ignore\r\n                            e1.range.endColumn = e1.range.startColumn - delta;\r\n                            edits.splice(i, 1);\r\n                            i--;\r\n\r\n                         }\r\n                        else {\r\n                            edits.splice(i, 2);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    provideDocumentFormattingEdits(model: monaco.editor.ITextModel,\r\n        options: monaco.languages.FormattingOptions,\r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n\r\n    format(model: monaco.editor.ITextModel): monaco.languages.TextEdit[] {\r\n\r\n        let edits: monaco.languages.TextEdit[] = [];\r\n\r\n        // if (this.main.currentWorkspace == null || this.main.currentWorkspace.currentlyOpenModule == null) {\r\n        //     return [];\r\n        // }\r\n\r\n        // let text = this.main.monaco_editor.getValue({ preserveBOM: false, lineEnding: \"\\n\" });\r\n\r\n        let text = model.getValue(monaco.editor.EndOfLinePreference.LF);\r\n\r\n        let tokenlist = new Lexer().lex(text).tokens;\r\n\r\n        // let tokenlist = this.main.currentWorkspace.currentlyOpenModule.tokenList;\r\n\r\n        if (tokenlist == null) return [];\r\n\r\n        // TODO:\r\n        // { at the end of line, with one space before; followed only by spaces and \\n\r\n        // indent lines according to { and }\r\n        // Beware: int i[] = { ... }\r\n        // exactly one space before/after binary operators\r\n        // no space after ( and no space before )\r\n        // (   ) -> ()\r\n        // (  ()) -> (())\r\n        // (()  ) -> (())\r\n\r\n        let lastNonSpaceToken: Token = null;\r\n        let indentLevel = 0;\r\n        let tabSize = 3;\r\n        let curlyBracesOpenAtLines: number[] = [];\r\n        let indentLevelAtSwitchStatements: number[] = [];\r\n        let switchHappend: boolean = false;\r\n        let lastTokenWasNewLine: number = 0;\r\n        let roundBracketsOpen: number = 0;\r\n\r\n        for (let i = 0; i < tokenlist.length; i++) {\r\n\r\n            let t = tokenlist[i];\r\n            lastTokenWasNewLine--;\r\n\r\n            switch (t.tt) {\r\n\r\n                case TokenType.leftCurlyBracket:\r\n                    if (switchHappend) {\r\n                        switchHappend = false;\r\n                        indentLevelAtSwitchStatements.push(indentLevel + 2);\r\n                        indentLevel++;\r\n                    }\r\n                    indentLevel++;\r\n                    curlyBracesOpenAtLines.push(t.position.line);\r\n                    if (lastNonSpaceToken != null) {\r\n                        let tt = lastNonSpaceToken.tt;\r\n                        if (tt == TokenType.rightBracket || tt == TokenType.identifier || tt == TokenType.leftRightSquareBracket) {\r\n                            this.replaceBetween(lastNonSpaceToken, t, edits, \" \");\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let token1 = tokenlist[i + 1];\r\n                        if (token1.tt != TokenType.newline && token1.tt != TokenType.space) {\r\n                            this.insertSpaces(edits, token1.position.line, token1.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    if (indentLevelAtSwitchStatements[indentLevelAtSwitchStatements.length - 1] == indentLevel) {\r\n                        indentLevelAtSwitchStatements.pop();\r\n                        indentLevel--;\r\n                        // if(t.position.column >= 3){\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                        // }    \r\n                    }\r\n                    indentLevel--;\r\n                    let openedAtLine = curlyBracesOpenAtLines.pop();\r\n                    if (openedAtLine != null && openedAtLine != t.position.line) {\r\n                        if (lastNonSpaceToken != null && lastNonSpaceToken.position.line == t.position.line) {\r\n                            this.replace(edits, t.position, t.position, \"\\n\" + \" \".repeat(indentLevel * tabSize));\r\n                        }\r\n                    } else {\r\n                        if (i > 0) {\r\n                            let token1 = tokenlist[i - 1];\r\n                            if (token1.tt != TokenType.space && token1.tt != TokenType.newline) {\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    roundBracketsOpen++;\r\n                    if (i < tokenlist.length - 2) {\r\n                        let nextToken1 = tokenlist[i + 1];\r\n                        let nextToken2 = tokenlist[i + 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                            i++;\r\n                            if (nextToken2.tt == TokenType.rightBracket) {\r\n                                i++;\r\n                                roundBracketsOpen--;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt == TokenType.space && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line, lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    roundBracketsOpen--;\r\n                    if (i > 1) {\r\n                        let nextToken1 = tokenlist[i - 1];\r\n                        let nextToken2 = tokenlist[i - 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.newline:\r\n                    lastTokenWasNewLine = 2;\r\n                    if (i < tokenlist.length - 2) {\r\n\r\n                        let lastTokenIsOperator = this.isBinaryOperator(lastNonSpaceToken?.tt);\r\n                        let nextTokenIsOperator = this.isBinaryOperator(this.getNextNonSpaceToken(i, tokenlist).tt);\r\n\r\n                        let beginNextLine = tokenlist[i + 1];\r\n                        let token2 = tokenlist[i + 2];\r\n                        let currentIndentation = 0;\r\n\r\n                        if (beginNextLine.tt == TokenType.newline) {\r\n                            break;\r\n                        }\r\n\r\n                        let delta: number = 0;\r\n                        if (beginNextLine.tt == TokenType.space) {\r\n                            if (token2.tt == TokenType.newline) {\r\n                                break;\r\n                            }\r\n                            currentIndentation = beginNextLine.position.length;\r\n                            i++;\r\n                            if (token2.tt == TokenType.rightCurlyBracket) {\r\n                                delta = -1;\r\n                            }\r\n                        }\r\n\r\n                        if (beginNextLine.tt == TokenType.rightCurlyBracket) {\r\n                            delta = -1;\r\n                            // indentLevel--;\r\n                            // curlyBracesOpenAtLines.pop();\r\n                            // lastNonSpaceToken = beginNextLine;\r\n                            // i++;\r\n                        }\r\n\r\n                        if(nextTokenIsOperator || lastTokenIsOperator) delta = 1;\r\n\r\n                        let il = indentLevel + delta;\r\n                        if(roundBracketsOpen > 0){\r\n                            il++;\r\n                        }\r\n                        if (il < 0) il = 0;\r\n\r\n                        let correctIndentation = il * tabSize;\r\n\r\n                        if (correctIndentation > currentIndentation) {\r\n                            this.insertSpaces(edits, t.position.line + 1, 0, correctIndentation - currentIndentation);\r\n                        } else if (correctIndentation < currentIndentation) {\r\n                            this.deleteSpaces(edits, t.position.line + 1, 0, currentIndentation - correctIndentation);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.space:\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment) {\r\n                            if (i > 0) {\r\n                                let lastToken = tokenlist[i - 1];\r\n                                if (lastToken.tt != TokenType.newline) {\r\n                                    if (t.position.length > 1) {\r\n                                        this.deleteSpaces(edits, t.position.line, t.position.column, t.position.length - 1);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.comma:\r\n                case TokenType.semicolon:\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt != TokenType.newline && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.tt == TokenType.space && lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line,\r\n                                    lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment && nextToken.tt != TokenType.space && nextToken.tt != TokenType.newline) {\r\n                            this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightSquareBracket:\r\n                    if (lastNonSpaceToken != null && lastNonSpaceToken.tt == TokenType.leftSquareBracket) {\r\n                        this.replaceBetween(lastNonSpaceToken, t, edits, \"\");\r\n\r\n                    }\r\n                    break;\r\n\r\n            }\r\n\r\n            // binary operator?\r\n            if (this.isBinaryOperator(t.tt)) {\r\n\r\n                let lowerGeneric = t.tt == TokenType.lower && this.lowerBelongsToGenericExpression(i, tokenlist);\r\n                let greaterGeneric = t.tt == TokenType.greater && this.greaterBelongsToGenericExpression(i, tokenlist);\r\n\r\n                if (lastTokenWasNewLine <= 0 && lastNonSpaceToken != null && [TokenType.leftBracket, TokenType.comma].indexOf(lastNonSpaceToken.tt) < 0) {\r\n\r\n                    if (i > 0) {\r\n                        let tokenBefore = tokenlist[i - 1];\r\n                        let spaces = (lowerGeneric || greaterGeneric) ? 0 : 1;\r\n                        if (tokenBefore.tt == TokenType.space) {\r\n                            if (tokenBefore.position.length != spaces) {\r\n                                this.insertSpaces(edits, tokenBefore.position.line,\r\n                                    tokenBefore.position.column, spaces - tokenBefore.position.length);\r\n                            }\r\n                        } else {\r\n                            if (spaces == 1)\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        let spaces = (lowerGeneric) ? 0 : 1;\r\n                        if (nextToken.tt == TokenType.space) {\r\n                            if (greaterGeneric && i < tokenlist.length - 2 && tokenlist[i + 2].tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (nextToken.position.length != spaces) {\r\n                                this.insertSpaces(edits, nextToken.position.line,\r\n                                    nextToken.position.column, spaces - nextToken.position.length);\r\n                            }\r\n                        } else {\r\n                            if (greaterGeneric && nextToken.tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (spaces == 1) this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            if (t.tt != TokenType.space && t.tt != TokenType.newline) {\r\n                lastNonSpaceToken = t;\r\n            }\r\n\r\n        }\r\n\r\n        this.deleteOverlappingRanges(edits);\r\n\r\n        return edits;\r\n\r\n    }\r\n    getNextNonSpaceToken(currentIndex: number, tokenlist: TokenList):  Token {\r\n\r\n        if(currentIndex == tokenlist.length - 1) return tokenlist[currentIndex];\r\n\r\n        let j = currentIndex + 1;\r\n        while(j < tokenlist.length - 1 && (tokenlist[j].tt == TokenType.space )){\r\n            j++;\r\n        }\r\n        return tokenlist[j];\r\n\r\n    }\r\n\r\n    lowerBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position + 1;\r\n        while (i < tokenlist.length) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.greater) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i++;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    greaterBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position - 1;\r\n        while (i >= 0) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.lower) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i--;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isBinaryOperator(token: TokenType) {\r\n        return token != null && token >= TokenType.modulo && token <= TokenType.equal;\r\n    }\r\n\r\n    private replaceBetween(lastNonSpaceToken: Token, t: Token, edits: monaco.languages.TextEdit[], text: string) {\r\n        let positionFrom = {\r\n            line: lastNonSpaceToken.position.line,\r\n            column: lastNonSpaceToken.position.column + lastNonSpaceToken.position.length\r\n        };\r\n        let positionTo = {\r\n            line: t.position.line,\r\n            column: t.position.column\r\n        };\r\n        if (positionFrom.line != positionTo.line ||\r\n            positionTo.column - positionFrom.column != text.length) {\r\n            this.replace(edits, positionFrom, positionTo, text);\r\n        }\r\n    }\r\n\r\n    deleteSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column + numberOfSpaces + (column == 0 ? 1 : 0),\r\n                endLineNumber: line\r\n            },\r\n            text: \"\"\r\n        });\r\n    }\r\n\r\n    insertSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n\r\n        if (numberOfSpaces < 0) {\r\n            this.deleteSpaces(edits, line, column, -numberOfSpaces);\r\n            return;\r\n        }\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column,\r\n                endLineNumber: line\r\n            },\r\n            text: \" \".repeat(numberOfSpaces)\r\n        });\r\n    }\r\n\r\n    replace(edits: monaco.languages.TextEdit[], positionFrom: { line: number; column: number; }, positionTo: { line: number; column: number; }, text: string) {\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: positionFrom.column,\r\n                startLineNumber: positionFrom.line,\r\n                endColumn: positionTo.column,\r\n                endLineNumber: positionTo.line\r\n            },\r\n            text: text\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\n\r\nexport type Theme = {\r\n    name: string,\r\n    monacoTheme: string,\r\n    cssColors: { [color: string]: string }\r\n}\r\n\r\nexport class ThemeManager {\r\n\r\n    themes: Theme[] = [];\r\n\r\n    constructor() {\r\n        this.initThemes();\r\n    }\r\n\r\n    switchTheme(name: string) {\r\n        for (let theme of this.themes) {\r\n            if (theme.name == name) {\r\n                this.internalSwitchTheme(theme);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    \r\n    private internalSwitchTheme(theme: Theme) {\r\n        monaco.editor.setTheme(theme.monacoTheme);\r\n\r\n        let root = document.documentElement;\r\n        for (const key of Object.keys(theme.cssColors)) {\r\n            const value = theme.cssColors[key]\r\n\r\n            root.style.setProperty(key, value);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    initThemes() {\r\n\r\n        this.themes.push({\r\n            name: \"dark\",\r\n            monacoTheme: \"myCustomThemeDark\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"#1e1e1e\",\r\n                \"--backgroundLight\": \"#252526\",\r\n                \"--backgroundHeading\": \"#37373d\",\r\n                \"--backgroundSelected\": \"#2a2d2e\",\r\n                \"--fontColorNormal\": \"#c2cccc\",\r\n                \"--fontColorLight\": \"#e7e7e7\",\r\n                \"--slider\": \"#414141\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#1e1e1e\",\r\n                \"--scrollbar-thumb\": \"#3e3e3e\",\r\n                \"--scrollbar-thumb-hover\": \"#5e5e5e\",\r\n                \"--scrollbar-thumb-active\": \"#7e7e7e\",\r\n                \"--submenu-hover\": \"#094771\",\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#616162\",\r\n                \"--file-hover\": \"hsla(0, 0%, 38%, 0.125)\",\r\n                \"--file-active\": \"#094771\",\r\n                \"--file-active-hover\": \"rgba(9, 71, 113, 0.827)\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"blue\",\r\n                \"--contextmenu-background\": \"#3c3c3c\",\r\n                \"--contextmenu-color\": \"rgb(212,212,212)\",\r\n                \"--contextmenu-hover-background\": \"#094771\",\r\n                \"--contextmenu-hover-color\": \"#ffffff\",\r\n                \"--error-filename\": \"#2a709e\",\r\n                \"--error-line-ative\": \"#094771\",\r\n                \"--error-line-hover\": \"rgba(96, 96, 96, 0.125)\",\r\n                \"--error-position\": \"#c0802d\",\r\n                \"--linecolumn\": \"#14c714\",\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#2b2b7d2f\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"rgb(85,85,85)\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#383838\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#252526\",\r\n                \"--editorTooltip-border\": \"#454545\",\r\n\r\n                \"--renameInput-color\": \"#ffffff\",\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"white\",\r\n                \"--bottomdiv-tabheading-active\": \"rgb(97,97,255)\",\r\n                \"--noErrorMessage\": \"rgb(37, 211, 37)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"#1e1e1e\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"white\",\r\n                \"--consoleEntryIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"white\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 51, 51)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--deValue\": \"white\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#383838\",\r\n                \"--helper-border-color\": \"#d4d4d4\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#ffffff\",\r\n                \"--runInputColor\": \"#ffffff\",\r\n                \"--runBackgroundColor\": \"rgba(255, 255, 255, 0.2)\",\r\n\r\n                // table\r\n                \"--table-even\": \"#222\", /*#d1d2e4*/\r\n                \"--table-heading\": \"#202060\", /*#c3f2b9*/\r\n\r\n\r\n            }\r\n        });\r\n\r\n        let highlightColor = \"#8080ff\";\r\n\r\n        this.themes.push({\r\n            name: \"light\",\r\n            monacoTheme: \"myCustomThemeLight\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"white\",\r\n                \"--backgroundLight\": \"#f3f3f3\",\r\n                \"--backgroundHeading\": \"#dcdcdc\",\r\n                \"--backgroundSelected\": \"#e8e8e8\",\r\n                \"--fontColorNormal\": \"#000\",\r\n                \"--fontColorLight\": \"#303030\",\r\n                \"--slider\": \"#b0b0b0\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#e3e3e3\",\r\n                \"--scrollbar-thumb\": \"#bababa\",\r\n                \"--scrollbar-thumb-hover\": \"#8e8e8e\",\r\n                \"--scrollbar-thumb-active\": \"#616161\",\r\n                \"--submenu-hover\": highlightColor,\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#cfcfcf\",\r\n                \"--file-hover\": \"#e8e8e8\",\r\n                \"--file-active\": highlightColor,\r\n                \"--file-active-hover\": \"#a0a0ff\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"white\",\r\n                \"--contextmenu-background\": \"white\",\r\n                \"--contextmenu-color\": \"#756161\",\r\n                \"--contextmenu-hover-background\": highlightColor,\r\n                \"--contextmenu-hover-color\": \"#a0a0ff\",\r\n                \"--error-filename\": \"#ff0000\",\r\n                \"--error-line-ative\": \"#ffa0a0\",\r\n                \"--error-line-hover\": \"#ffc0c0\",\r\n                \"--error-position\": \"#804040\",\r\n                \"--linecolumn\": \"#14c714\", // TODO\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#babaec80\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"#c0c0c0\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#e0e0e0\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#e0e0e0\",\r\n                \"--editorTooltip-border\": \"#9d9d9d\",\r\n\r\n                \"--renameInput-color\": \"#000000\",\r\n\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"#424242\",\r\n                \"--bottomdiv-tabheading-active\": \"#424242\",\r\n                \"--noErrorMessage\": \"rgb(17, 180, 17)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"white\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"#0000a0\",\r\n                \"--consoleEntryIdentifier\": \"black\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"#756161\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 21, 21)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"black\",\r\n                \"--deValue\": \"#0000a0\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#f3f3f3\",\r\n                \"--helper-border-color\": \"#606060\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#303030\",\r\n                \"--runInputColor\": \"#000000\",\r\n                \"--runBackgroundColor\": \"rgba(0, 0, 0, 0.2)\",\r\n\r\n                // table\r\n                \"--table-even\": \"#d1d2e4\", /*#d1d2e4*/\r\n                \"--table-heading\": \"#c3f2b9\", /*#c3f2b9*/\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { TokenType } from \"../lexer/Token.js\";\r\n\r\ntype CheckFunction = (columnIdentifier: string, parameterValues: number[]) => string;\r\ntype OutputFunction = (value: any, parameterValues: number[]) => string;\r\n\r\nexport abstract class SQLType {\r\n\r\n    abstract canCastTo(type2: SQLType): boolean;\r\n\r\n    abstract getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType;\r\n\r\n    abstract getUnaryResultType(operator: TokenType): SQLType;\r\n\r\n    abstract getBinaryResult(operator: TokenType, value1: any, value2: any): any;\r\n\r\n    abstract toString(): string;\r\n\r\n    abstract getBaseTypeName(): string;\r\n\r\n}\r\n\r\nexport class SQLBaseType extends SQLType {\r\n    // Map<tokenType, Map<SecondType, ResultType>>\r\n    binaryResultTypes: Map<TokenType, Map<SQLBaseType, SQLBaseType>> = new Map();\r\n\r\n    unaryOperators: TokenType[] = [];\r\n\r\n    static baseTypes: SQLBaseType[] = [];\r\n    static baseTypeMap: Map<string, SQLBaseType> = new Map();\r\n\r\n    public canCastToList: string[];\r\n\r\n    constructor(public name: string, public parameterDescriptions: string[],\r\n        public checkFunction: CheckFunction, public outputFunction: OutputFunction, canCastToList: string[]) {\r\n        super();\r\n        this.canCastToList = canCastToList.slice(0);\r\n        let ownIndex = this.canCastToList.indexOf(name);\r\n        if(ownIndex >= 0) this.canCastToList.splice(ownIndex, 1);\r\n    }\r\n\r\n    static fromConstantType(tt: TokenType): SQLBaseType {\r\n        switch (tt) {\r\n            case TokenType.stringConstant:\r\n                return this.baseTypeMap.get(\"text\");\r\n            case TokenType.integerConstant:\r\n                return this.baseTypeMap.get(\"integer\");\r\n            case TokenType.floatingPointConstant:\r\n                return this.baseTypeMap.get(\"float\");\r\n            case TokenType.charConstant:\r\n                return this.baseTypeMap.get(\"text\");\r\n            case TokenType.booleanConstant:\r\n                return this.baseTypeMap.get(\"boolean\");\r\n            case TokenType.keywordNull:\r\n                return this.baseTypeMap.get(\"null\");\r\n        \r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    getBaseTypeName(): string {\r\n        return this.name;\r\n    }\r\n\r\n    toString(): string {\r\n        return this.name;\r\n    }\r\n\r\n    static getBaseType(name: string) {\r\n        if(name != null && name.toLocaleLowerCase() == 'char'){\r\n            name = 'varchar';\r\n            \r\n        } \r\n        return this.baseTypeMap.get(name.toLocaleLowerCase());\r\n    }\r\n\r\n    static addBaseTypes(baseTypes: SQLBaseType[]) {\r\n        SQLBaseType.baseTypes = SQLBaseType.baseTypes.concat(baseTypes);\r\n        baseTypes.forEach(t => SQLBaseType.baseTypeMap.set(t.name, t));\r\n    }\r\n\r\n    addBinaryOperation(tokenType: TokenType | TokenType[], secondType: SQLBaseType, resultType: SQLBaseType, isCommutative: boolean = true) {\r\n\r\n        if (!Array.isArray(tokenType)) tokenType = [tokenType];\r\n\r\n        tokenType.forEach(t => {\r\n            let map: Map<SQLBaseType, SQLBaseType> = this.binaryResultTypes.get(t);\r\n            if (map == null) {\r\n                map = new Map();\r\n                this.binaryResultTypes.set(t, map);\r\n            }\r\n            map.set(secondType, resultType);\r\n            if (isCommutative && secondType != this) {\r\n                secondType.addBinaryOperation(t, this, resultType, false);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    canCastTo(type2: SQLType): boolean {\r\n\r\n        let bt2: SQLBaseType = type2 instanceof SQLBaseType ? type2 : type2[\"baseType\"];\r\n\r\n        return this.canCastToList.indexOf(bt2.name) >= 0 || this.name == bt2.name;\r\n\r\n    }\r\n\r\n    getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType {\r\n\r\n\r\n        let map = this.binaryResultTypes.get(operator);\r\n        if (map == null) return null;\r\n\r\n        let bt2: SQLBaseType = secondType instanceof SQLBaseType ? secondType : secondType[\"baseType\"];\r\n\r\n        return map.get(bt2);\r\n\r\n    }\r\n\r\n    getUnaryResultType(operator: TokenType): SQLType {\r\n        if([TokenType.isNull, TokenType.isNotNull].indexOf(operator) >= 0) return booleanType;\r\n        if(this.unaryOperators.indexOf(operator)>= 0) return this;\r\n    }\r\n\r\n    getBinaryResult(operator: TokenType, value1: any, value2: any): any {\r\n        switch (operator) {\r\n            case TokenType.concatenation:\r\n                if (value1 != null && value2 != null) return value1 + value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.plus:\r\n                if (value1 != null && value2 != null) return value1 + value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.minus:\r\n                if (value1 != null && value2 != null) return value1 - value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.multiplication:\r\n                if (value1 != null && value2 != null) return value1 * value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.division:\r\n                if (value1 != null && value2 != null) return value1 * value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.keywordAnd:\r\n                if (value1 != null && value2 != null) return value1 * value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.keywordOr:\r\n                if (value1 != null && value2 != null) return Math.max(value1, value2);\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.lower:\r\n                if (value1 != null && value2 != null) return value1 < value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.greater:\r\n                if (value1 != null && value2 != null) return value1 >= value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.lowerOrEqual:\r\n                if (value1 != null && value2 != null) return value1 <= value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.greaterOrEqual:\r\n                if (value1 != null && value2 != null) return value1 >= value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.equal:\r\n                return value1 == value2;\r\n            case TokenType.notEqual:\r\n                return value1 != value2;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nlet tens: number[] = [1, 10, 100, 1000, 100000, 100000, 1000000, 10000000, 100000000, 1000000000];\r\n\r\nexport class SQLDerivedType extends SQLType {\r\n\r\n    name: string;\r\n\r\n    constructor(public baseType: SQLBaseType, public parameterValues: number[]) {\r\n        super();\r\n        let parameters = parameterValues.join(\", \");\r\n        this.name = baseType.name + \"(\" + parameters + \")\";\r\n    }\r\n\r\n    toString(): string {\r\n        return this.name;\r\n    }\r\n\r\n    getBaseTypeName(): string {\r\n        return this.baseType.name;\r\n    }\r\n\r\n\r\n    canCastTo(type2: SQLType): boolean {\r\n\r\n        let bt2: SQLBaseType = type2 instanceof SQLBaseType ? type2 : type2[\"baseType\"];\r\n\r\n        return this.baseType.canCastToList.indexOf(bt2.name) >= 0 || this.baseType.name == bt2.name;\r\n\r\n    }\r\n\r\n    getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType {\r\n\r\n\r\n        let map = this.baseType.binaryResultTypes.get(operator);\r\n        if (map == null) return null;\r\n\r\n        let bt2: SQLBaseType = secondType instanceof SQLBaseType ? secondType : secondType[\"baseType\"];\r\n\r\n        let returnBaseType = map.get(bt2);\r\n\r\n        if (this.baseType == bt2 && this.baseType == returnBaseType && secondType instanceof SQLDerivedType) {\r\n            if (this.baseType.name == \"varchar\" || operator == TokenType.concatenation) {\r\n                return new SQLDerivedType(this.baseType, [this.parameterValues[0] + secondType.parameterValues[0]]);\r\n            }\r\n            if (this.baseType.name == \"decimal\") {\r\n                return new SQLDerivedType(this.baseType, [Math.max(this.parameterValues[0], secondType.parameterValues[0]), Math.max(this.parameterValues[1], secondType.parameterValues[1])]);\r\n            }\r\n        }\r\n\r\n        return map.get(bt2);\r\n\r\n    }\r\n\r\n    getUnaryResultType(operator: TokenType): SQLType {\r\n        return this.baseType.getUnaryResultType(operator);\r\n    }\r\n\r\n    getBinaryResult(operator: TokenType, value1: any, value2: any): any {\r\n        let result = this.baseType.getBinaryResult(operator, value1, value2);\r\n        if (this.name = \"varchar\") return result == null ? null : (\"\" + result).substr(0, this.parameterValues[0]);\r\n        if (this.name == \"decimal\") {\r\n            if (result == null) return null;\r\n            return Math.round(result * tens[this.parameterValues[1]]) / tens[this.parameterValues[1]];\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nlet textTypes = [\"varchar\", \"char\", \"text\" ,\"tinytext\", \"mediumtext\", \"longtext\"];\r\n\r\nvar varcharType = new SQLBaseType(\"varchar\", [\"Maximale Länge\"], (ci, pv) => `check(length(${ci}) <= ${Math.max(pv[0], 1)})`,\r\n    (v: string, pv) => v.substring(0, Math.max(pv[0], 1)), textTypes);\r\n    \r\nvar charType = new SQLBaseType(\"char\", [\"Maximale Länge\"], (ci, pv) => `check(length(${ci}) <= ${Math.max(pv[0], 1)})`,\r\n    (v: string, pv) => v.substring(0, Math.max(pv[0], 1)), textTypes);\r\n\r\nvar textType = new SQLBaseType(\"text\", [\"Maximale Länge\"], (ci, pv) => \"\", (v: string, pv) => v, textTypes.concat([\"time\", \"date\", \"datetime\", \"timestamp\"]));\r\nvar tinyTextType = new SQLBaseType(\"tinyText\", [], (ci, pv) => \"\", (v: string, pv) => v, textTypes);\r\nvar mediumTextType = new SQLBaseType(\"mediumText\", [], (ci, pv) => \"\", (v: string, pv) => v, textTypes);\r\nvar longTextType = new SQLBaseType(\"longText\", [], (ci, pv) => \"\", (v: string, pv) => v, textTypes);\r\n\r\nlet floatTypes = [\"decimal\", \"numeric\", \"double\", \"real\", \"float\"];\r\n\r\nvar decimalType = new SQLBaseType(\"decimal\", [\"Gesamtzahl der Stellen\", \"Nachkommastellen\"], (ci, pv) => \"\",\r\n    (v: number, pv) => { let vk = Math.trunc(v); let nk = v - vk; return \"\" + vk + (pv[1] > 0 ? \".\" + Math.round(nk * tens[pv[1]]) : \"\") },\r\n    floatTypes);\r\nvar numericType = new SQLBaseType(\"numeric\", [\"Gesamtzahl der Stellen\", \"Nachkommastellen\"], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\nvar doubleType = new SQLBaseType(\"double\", [\"Gesamtzahl der Stellen\", \"Nachkommastellen\"], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\nvar realType = new SQLBaseType(\"real\", [], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\nvar floatType = new SQLBaseType(\"float\", [], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\n\r\nlet inttypes = [\"int\", \"integer\", \"tinyint\", \"smallint\", \"mediumint\", \"bigint\"];\r\nlet numberTypes = inttypes.concat(floatTypes);\r\n\r\nvar intType = new SQLBaseType(\"int\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar integerType = new SQLBaseType(\"integer\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar tinyIntType = new SQLBaseType(\"tinyint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar smallIntType = new SQLBaseType(\"smallint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar mediumIntType = new SQLBaseType(\"mediumint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar bigIntType = new SQLBaseType(\"bigint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\n\r\nvar timeType = new SQLBaseType(\"time\", [], (ci, pv) => `check(isTime(${ci}))`, (v: string, pv) => v, []);\r\nvar dateType = new SQLBaseType(\"date\", [], (ci, pv) => `check(isDate(${ci}))`, (v: string, pv) => v, []);\r\nvar dateTimeType = new SQLBaseType(\"datetime\", [], (ci, pv) => `check(isDateTime(${ci}))`, (v: string, pv) => v, [\"timestamp\"]);\r\nvar timestampType = new SQLBaseType(\"timestamp\", [], (ci, pv) => `check(isDateTime(${ci}))`, (v: string, pv) => v, [\"datetime\"]);\r\n\r\n\r\nvar booleanType = new SQLBaseType(\"boolean\", [], (ci, pv) => `check(${ci} == 0 or ${ci} == 1)`, (v, pv) => v == 1 ? \"true\" : \"false\",\r\n    [\"varchar\", \"text\", \"decimal\", \"numeric\"]);\r\n\r\nvar nullType = new SQLBaseType(\"null\", [], (ci, pv) => \"\", (v, pv) => v,\r\n    []);\r\n\r\nlet numericTypes = [decimalType, numericType, doubleType, realType, floatType, intType, integerType, tinyIntType, smallIntType, mediumIntType, bigIntType];\r\n\r\nlet baseTypes = [varcharType, charType, textType, tinyTextType, mediumTextType, longTextType,\r\n    timeType, dateType, dateTimeType, timestampType, booleanType, nullType].concat(numericTypes);\r\n\r\nlet timeTypes = [timeType, dateType, dateTimeType, timestampType];\r\n\r\nSQLBaseType.addBaseTypes(baseTypes);\r\n\r\nvarcharType.addBinaryOperation(TokenType.concatenation, varcharType, varcharType);\r\nvarcharType.addBinaryOperation(TokenType.concatenation, charType, varcharType);\r\nvarcharType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\ntextType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\nvarcharType.addBinaryOperation(TokenType.keywordLike, varcharType, booleanType);\r\nvarcharType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\ntextType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\n\r\ncharType.addBinaryOperation(TokenType.concatenation, charType, charType);\r\ncharType.addBinaryOperation(TokenType.concatenation, varcharType, charType);\r\ncharType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\ntextType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\ncharType.addBinaryOperation(TokenType.keywordLike, charType, booleanType);\r\ncharType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\ntextType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\n\r\nlet numericBinaryOperators: TokenType[] = [TokenType.plus, TokenType.minus, TokenType.multiplication, TokenType.division, TokenType.modulo];\r\nlet comparisonOperators: TokenType[] = [TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual];\r\n\r\nfor (let i = 0; i < numericTypes.length; i++) {\r\n    for (let j = i; j < numericTypes.length; j++) {\r\n        numericTypes[i].addBinaryOperation(numericBinaryOperators, numericTypes[j], numericTypes[j]);\r\n        numericTypes[i].addBinaryOperation(comparisonOperators, numericTypes[j], booleanType);\r\n    }\r\n    numericTypes[i].unaryOperators = [TokenType.minus];\r\n}\r\n\r\ndecimalType.addBinaryOperation(numericBinaryOperators, decimalType, decimalType);\r\n\r\nlet characterTypes = [varcharType, textType];\r\nfor (let i = 0; i < characterTypes.length; i++) {\r\n    for (let j = i; j < characterTypes.length; j++) {\r\n        characterTypes[i].addBinaryOperation(TokenType.concatenation, characterTypes[j], characterTypes[j]);\r\n        characterTypes[i].addBinaryOperation(comparisonOperators, characterTypes[j], booleanType);\r\n    }\r\n}\r\n\r\nfor(let i = 0; i < timeTypes.length; i++){\r\n    timeTypes[i].addBinaryOperation(comparisonOperators, timeTypes[i], booleanType);\r\n    for(let j = 0; j < characterTypes.length; j++){\r\n        timeTypes[i].addBinaryOperation(comparisonOperators, characterTypes[j], booleanType);\r\n        characterTypes[j].addBinaryOperation(comparisonOperators, timeTypes[i], booleanType);\r\n    }\r\n}\r\n\r\nlet booleanOperations = [TokenType.keywordAnd, TokenType.keywordOr];\r\nbooleanType.addBinaryOperation(booleanOperations, booleanType, booleanType);\r\n\r\nbooleanType.unaryOperators = [TokenType.keywordNot];\r\n\r\nbaseTypes.forEach(bt => bt.unaryOperators = bt.unaryOperators.concat([TokenType.isNull, TokenType.isNotNull]));","import { param, timers } from \"jquery\";\r\nimport { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenList, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { ASTNode, BracketsNode, SelectNode, TermNode, TableOrSubqueryNode, TableNode, SubqueryNode, GroupByNode, OrderByNode, LimitNode, IdentifierNode, DotNode, ListNode, ColumnNode, InsertNode, ConstantNode, UnaryOpNode, CreateTableNode, CreateTableColumnNode, ForeignKeyInfo, UpdateNode, DeleteNode, DropTableNode, AlterTableNode, AlterTableKind, OmittedStatementNode } from \"./AST.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { Column } from \"./SQLTable.js\";\r\nimport { SQLBaseType } from \"./SQLTypes.js\";\r\n\r\nexport type SQLStatement = {\r\n    ast: ASTNode,\r\n    from: TextPosition,\r\n    to: TextPosition,\r\n    hasErrors: boolean,\r\n    acceptedBySQLite: boolean,\r\n    sql?: string,\r\n    sqlCleaned?: string\r\n}\r\n\r\n\r\nexport class Parser {\r\n\r\n    static operatorPrecedence: TokenType[][] = [\r\n        [TokenType.keywordOr], [TokenType.keywordAnd],\r\n        [TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual, TokenType.keywordLike],\r\n        [TokenType.concatenation, TokenType.plus, TokenType.minus], [TokenType.multiplication, TokenType.division, TokenType.modulo],\r\n        [TokenType.keywordIn, TokenType.keywordNotIn]\r\n    ];\r\n\r\n    module: Module;\r\n\r\n    pos: number;\r\n    tokenList: TokenList;\r\n\r\n    errorList: Error[];\r\n\r\n    lookahead = 4;\r\n    ct: Token[];\r\n    lastToken: Token;\r\n    cct: Token;\r\n    tt: TokenType;\r\n    position: TextPosition;\r\n    lastComment: Token;\r\n\r\n    endToken: Token = {\r\n        position: { line: 0, column: 0, length: 1 },\r\n        tt: TokenType.endofSourcecode,\r\n        value: \"das Ende des Programms\"\r\n    };\r\n\r\n    beginStatementKeywords = [\"select\", \"insert into\", \"update\", \"create table\", \"delete from\", \"alter table\", \"drop table\"];\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    parse(m: Module) {\r\n\r\n        this.module = m;\r\n\r\n        this.tokenList = m.tokenList;\r\n        this.errorList = [];\r\n\r\n        m.completionHints = new Map();\r\n\r\n        if (this.tokenList.length == 0) {\r\n            this.module.sqlStatements = [];\r\n            this.module.errors[1] = this.errorList;\r\n            this.module.addCompletionHint({ line: 0, column: 0, length: 0 }, { line: 20000, column: 100, length: 0 }, false, false,\r\n                this.beginStatementKeywords);\r\n            return;\r\n        }\r\n\r\n        this.pos = 0;\r\n        this.initializeLookahead();\r\n\r\n\r\n        let lastToken = this.tokenList[this.tokenList.length - 1];\r\n        this.endToken.position = { line: lastToken.position.line, column: lastToken.position.column + lastToken.position.length, length: 1 };\r\n\r\n        this.module.sqlStatements = this.parseMain();\r\n\r\n        this.module.errors[1] = this.errorList;\r\n\r\n    }\r\n\r\n    initializeLookahead() {\r\n\r\n        this.ct = [];\r\n\r\n        for (let i = 0; i < this.lookahead; i++) {\r\n\r\n            let token: Token = this.endToken;\r\n\r\n            while (true) {\r\n\r\n                if (this.pos >= this.tokenList.length) break;\r\n\r\n                let token1 = this.tokenList[this.pos]\r\n                if (token1.tt == TokenType.comment) {\r\n                    this.lastComment = token1;\r\n                }\r\n\r\n                if (token1.tt != TokenType.newline && token1.tt != TokenType.space && token1.tt != TokenType.comment) {\r\n                    token = token1;\r\n                    if (this.lastComment != null) {\r\n                        token.commentBefore = this.lastComment;\r\n                        this.lastComment = null;\r\n                    }\r\n                    break;\r\n                }\r\n\r\n                this.pos++;\r\n\r\n            }\r\n\r\n            this.ct.push(token);\r\n\r\n            if (i < this.lookahead - 1) {\r\n                this.pos++;\r\n            }\r\n\r\n        }\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    nextToken() {\r\n\r\n        let token: Token;\r\n        this.lastToken = this.cct;\r\n\r\n        while (true) {\r\n\r\n            this.pos++;\r\n\r\n            if (this.pos >= this.tokenList.length) {\r\n                token = this.endToken;\r\n                break;\r\n            }\r\n\r\n            token = this.tokenList[this.pos]\r\n            if (token.tt == TokenType.comment) {\r\n                this.lastComment = token;\r\n            }\r\n\r\n            if (token.tt != TokenType.newline && token.tt != TokenType.space && token.tt != TokenType.comment) {\r\n                token.commentBefore = this.lastComment;\r\n                this.lastComment = null;\r\n                break;\r\n            }\r\n\r\n        }\r\n\r\n        for (let i = 0; i < this.lookahead - 1; i++) {\r\n            this.ct[i] = this.ct[i + 1];\r\n        }\r\n\r\n        this.ct[this.lookahead - 1] = token;\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position?: TextPosition, quickFix?: QuickFix) {\r\n        if (position == null) position = Object.assign({}, this.position);\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    skip(tt: TokenType | TokenType[]) {\r\n        if (!Array.isArray(tt)) tt = [tt];\r\n        if (tt.indexOf(this.tt) >= 0) this.nextToken();\r\n    }\r\n\r\n    expect(tt: TokenType | TokenType[], skip: boolean = true, invokeSemicolonAngel: boolean = false): boolean {\r\n        if (this.tt != tt && !(Array.isArray(tt) && tt.indexOf(this.tt) >= 0)) {\r\n            if (tt == TokenType.semicolon && this.tt == TokenType.endofSourcecode) {\r\n                return true;\r\n            }\r\n\r\n            let position: TextPosition = this.cct.position;\r\n            if (tt == TokenType.semicolon && this.lastToken != null) {\r\n\r\n                if (this.lastToken.position.line < position.line) {\r\n                    position = {\r\n                        line: this.lastToken.position.line,\r\n                        column: this.lastToken.position.column + this.lastToken.position.length,\r\n                        length: 1\r\n                    }\r\n                }\r\n            }\r\n\r\n            let quickFix: QuickFix = null;\r\n            if (tt == TokenType.semicolon && this.lastToken.position.line < this.cct.position.line &&\r\n                !this.isOperatorOrDot(this.lastToken.tt)\r\n            ) {\r\n                quickFix = {\r\n                    title: 'Strichpunkt hier einfügen',\r\n                    editsProvider: (uri) => {\r\n                        return [{\r\n                            resource: uri,\r\n                            edit: {\r\n                                range: {\r\n                                    startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position.column,\r\n                                    message: \"\",\r\n                                    severity: monaco.MarkerSeverity.Error\r\n                                },\r\n                                text: \";\"\r\n                            }\r\n                        }\r\n                        ];\r\n                    }\r\n                }\r\n\r\n                if (invokeSemicolonAngel) {\r\n                    this.module.main.getSemicolonAngel().register(position, this.module);\r\n                }\r\n            }\r\n\r\n            let expectedValuesArray: string[];\r\n\r\n            if (Array.isArray(tt)) {\r\n                expectedValuesArray = tt.map(token => TokenTypeReadable[token]);\r\n                let expectedTokens = expectedValuesArray.join(\", \");\r\n                this.pushError(\"Erwartet wird eines der folgenden: \" + expectedTokens + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            } else {\r\n                expectedValuesArray = [TokenTypeReadable[tt]];\r\n                this.pushError(\"Erwartet wird: \" + TokenTypeReadable[tt] + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            }\r\n\r\n            // if (!Array.isArray(tt) && tt != TokenType.identifier) {\r\n            //     this.module.addCompletionHint(this.getEndOfPosition(this.lastToken.position), this.getCurrentPositionPlus(1), false, false, expectedValuesArray);\r\n            // }\r\n\r\n            return false;\r\n        }\r\n\r\n        if (skip) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    getEndOfPosition(p: TextPosition): TextPosition {\r\n        return {\r\n            line: p.line,\r\n            column: p.column + p.length,\r\n            length: 0\r\n        }\r\n    }\r\n\r\n    isOperatorOrDot(tt: TokenType): boolean {\r\n        if (tt == TokenType.dot) return true;\r\n        for (let op of Parser.operatorPrecedence) {\r\n            for (let operator of op) {\r\n                if (tt == operator) return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    isEnd(): boolean {\r\n        return this.cct == this.endToken;\r\n    }\r\n\r\n    comesToken(token: TokenType | TokenType[], skip: boolean = false): boolean {\r\n\r\n        if (!Array.isArray(token)) {\r\n            let ret: boolean = this.tt == token;\r\n            if (ret && skip) this.nextToken();\r\n            return ret;\r\n        }\r\n\r\n        return token.indexOf(this.tt) >= 0;\r\n\r\n    }\r\n\r\n    getCurrentPosition(): TextPosition {\r\n        return Object.assign({}, this.position);\r\n    }\r\n\r\n    getCurrentPositionPlus(deltaColumns: number): TextPosition {\r\n\r\n        if (this.tt == TokenType.endofSourcecode) {\r\n            return {\r\n                line: this.endToken.position.line,\r\n                column: 100,\r\n                length: 1\r\n            }\r\n        }\r\n\r\n        // get Token in which new position falls:\r\n        let tpos = 0;\r\n        let deltaInsideToken = deltaColumns;\r\n        let length = 0;\r\n        while (tpos < this.lookahead - 1 && (length = this.ct[tpos].position.length) < deltaInsideToken) {\r\n            deltaInsideToken -= length;\r\n            tpos++;\r\n        }\r\n        let tokenPos = this.ct[tpos].position;\r\n        if (tokenPos == null) tokenPos = this.getCurrentPosition();\r\n\r\n        let pos: TextPosition = {\r\n            line: tokenPos.line,\r\n            column: tokenPos.column + deltaInsideToken,\r\n            length: 1\r\n        }\r\n\r\n        return pos;\r\n    }\r\n\r\n    getEndOfCurrentToken(): TextPosition {\r\n\r\n        let position = this.getCurrentPosition();\r\n        position.column = position.column + this.position.length;\r\n        position.length = 0;\r\n\r\n        return position;\r\n    }\r\n\r\n    parseMain(): SQLStatement[] {\r\n\r\n        let mainProgram: SQLStatement[] = [];\r\n\r\n        let mainProgramEnd: TextPosition = {\r\n            column: 0,\r\n            line: 10000,\r\n            length: 1\r\n        }\r\n\r\n        let afterLastStatement: TextPosition = {\r\n            column: 0,\r\n            line: 0,\r\n            length: 0\r\n        }\r\n\r\n        let semicolonAfterLastStatement: boolean = true;\r\n\r\n        this.module.addCompletionHint(afterLastStatement, this.getCurrentPositionPlus(8), false, false,\r\n            this.beginStatementKeywords);\r\n\r\n        while (!this.isEnd()) {\r\n\r\n            let oldPos = this.pos;\r\n\r\n            let errorsBeforeStatement: number = this.errorList.length;\r\n\r\n            while ([TokenType.space, TokenType.newline, TokenType.comment, TokenType.semicolon].indexOf(this.cct.tt) >= 0) {\r\n                this.nextToken();\r\n            }\r\n\r\n            let startPosition = this.getCurrentPosition();\r\n\r\n            let st = this.parseStatement();\r\n\r\n            afterLastStatement = {\r\n                line: this.lastToken.position.line + 1,\r\n                column: 0,\r\n                length: 0\r\n            }\r\n\r\n            semicolonAfterLastStatement = this.tt == TokenType.semicolon;\r\n            while (this.tt == TokenType.semicolon) {\r\n                this.nextToken();\r\n            }\r\n\r\n            let hasErrors: boolean = false;\r\n            for (let i = errorsBeforeStatement; i < this.errorList.length; i++) {\r\n                if (this.errorList[i].level == \"error\") hasErrors = true;\r\n            }\r\n\r\n            if (st != null) {\r\n                mainProgram.push({\r\n                    ast: st,\r\n                    from: startPosition,\r\n                    to: this.getEndOfPosition(this.lastToken.position),\r\n                    hasErrors: hasErrors,\r\n                    acceptedBySQLite: false\r\n                });\r\n            }\r\n            // console.log(mainProgram[mainProgram.length - 1]);\r\n\r\n            mainProgramEnd = this.getCurrentPosition();\r\n\r\n            // emergency-forward:\r\n            if (this.pos == oldPos) {\r\n                let beginStatementTokens: TokenType[] =\r\n                    [TokenType.keywordSelect, TokenType.keywordUpdate, TokenType.keywordCreate, TokenType.keywordInsert,\r\n                    TokenType.keywordDelete, TokenType.keywordDrop, TokenType.keywordAlter];\r\n\r\n                let firstBadToken: boolean = true;\r\n\r\n                while (!this.isEnd() && beginStatementTokens.indexOf(this.tt) < 0) {\r\n                    if ([TokenType.space, TokenType.newline].indexOf(this.tt) < 0 && firstBadToken) {\r\n                        this.pushError(\"Erwartet wird eines dieser Schlüsselwörter: \" + beginStatementTokens.map(t => TokenTypeReadable[t]).join(\", \")\r\n                            + \"; Gefunden wurde: \" + this.cct.value);\r\n                        firstBadToken = true;\r\n                    }\r\n                    this.nextToken();\r\n                }\r\n            }\r\n\r\n            if (semicolonAfterLastStatement || this.cct.position.line - afterLastStatement.line > 0) {\r\n                this.module.addCompletionHint(afterLastStatement, this.getCurrentPositionPlus(8), false, false,\r\n                    this.beginStatementKeywords);\r\n            }\r\n\r\n        }\r\n\r\n        this.module.addCompletionHint(afterLastStatement, { line: this.endToken.position.line + 1, column: 0, length: 0 }, false, false,\r\n            this.beginStatementKeywords);\r\n\r\n        return mainProgram;\r\n\r\n    }\r\n\r\n\r\n\r\n    parseStatement(expectSemicolon: boolean = true): ASTNode {\r\n\r\n        let retStatements: ASTNode = null;\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordSelect:\r\n                return this.parseSelect();\r\n            case TokenType.keywordInsert:\r\n                return this.parseInsert();\r\n            case TokenType.keywordCreate:\r\n                return this.parseCreateTableOrDatabase();\r\n            case TokenType.keywordUpdate:\r\n                return this.parseUpdate();\r\n            case TokenType.keywordDelete:\r\n                return this.parseDelete();\r\n            case TokenType.keywordDrop:\r\n                return this.parseDropTable();\r\n            case TokenType.keywordAlter:\r\n                return this.parseAlterTable();\r\n            case TokenType.keywordCommit:\r\n                this.pushError(\"Die Aweisung commit ist unnötig, da jede Anweisung automatisch commited wird.\", \"info\");\r\n                this.nextToken();\r\n                return null;\r\n            // Omitted statements:\r\n            case TokenType.keywordSet:\r\n                return this.parseSet();\r\n            case TokenType.keywordUse:\r\n                return this.parseUse();\r\n            case TokenType.keywordStart:\r\n                this.pushError(\"Die Aweisung 'start transaction' ist unnötig, da jede Anweisung automatisch commited wird.\", \"info\");\r\n                this.nextToken();\r\n                this.expect(TokenType.keywordTransaction, true);\r\n                return null;\r\n            case TokenType.keywordLock:\r\n            case TokenType.keywordUnlock:\r\n                this.parseLockUnlock();\r\n                return null;\r\n\r\n            default:\r\n                let s = TokenTypeReadable[this.tt];\r\n                if (s == null) s = \"\";\r\n                if (s != this.cct.value) s += \"(\" + this.cct.value + \")\";\r\n                s += \" wird hier nicht erwartet.\";\r\n                this.pushError(s);\r\n                this.nextToken();\r\n                break;\r\n        }\r\n\r\n\r\n        return retStatements;\r\n\r\n    }\r\n\r\n    parseLockUnlock() {\r\n        this.nextToken();\r\n        this.expect(TokenType.keywordTables, true);\r\n        this.skip(TokenType.identifier);\r\n        this.skip([TokenType.keywordWrite, TokenType.keywordRead]);\r\n        this.skip(TokenType.semicolon);\r\n    }\r\n\r\n    parseSet(): OmittedStatementNode {\r\n\r\n        this.pushError(\"Das SET-Statement wird von SQLite nicht unterstützt. Diese Anweisung wird daher einfach überlesen.\", \"info\");\r\n\r\n        let node: OmittedStatementNode = {\r\n            type: TokenType.omittedeStatement,\r\n            position: this.getCurrentPosition(),\r\n            endPosition: null,\r\n            symbolTable: null\r\n        }\r\n\r\n        this.nextToken(); // skip 'set'\r\n        this.expect(TokenType.identifier, true);\r\n        this.expect(TokenType.equal, true);\r\n        this.expect([TokenType.identifier, TokenType.stringConstant, TokenType.integerConstant, TokenType.charConstant, TokenType.booleanConstant, TokenType.floatingPointConstant], true);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n    parseUse(): OmittedStatementNode {\r\n\r\n        this.pushError(\"Das USE-Statement wird von SQLite nicht unterstützt. Diese Anweisung wird daher einfach überlesen. Sie können eine andere Datenbank auswählen indem Sie in der Datenbankliste links darauf klicken.\", \"info\");\r\n\r\n        let node: OmittedStatementNode = {\r\n            type: TokenType.omittedeStatement,\r\n            position: this.getCurrentPosition(),\r\n            endPosition: null,\r\n            symbolTable: null\r\n        }\r\n\r\n        this.nextToken(); // skip 'use'\r\n        this.expect(TokenType.identifier, true);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n    parseAlterTable(): AlterTableNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"alter\"\r\n\r\n        let node: AlterTableNode = {\r\n            type: TokenType.keywordAlter,\r\n            kind: null,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n        }\r\n\r\n        if (!this.expect(TokenType.keywordTable, true)) {\r\n            this.addCompletionHintHere(false, false, [\"table\"], 1);\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1);\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        this.addCompletionHintHere(false, false, [\"rename to\", \"rename column\", \"add column\", \"drop column\"], 1);\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordRename: this.parseRenameTableOrColumn(node); break;\r\n            case TokenType.keywordAdd: this.parseAlterTableAdd(node); break;\r\n            case TokenType.keywordDrop: this.parseDropColumn(node); break;\r\n            default:\r\n                this.pushError(\"Erwartet wird rename to, rename column, add column oder drop column\");\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    parseRenameTableOrColumn(node: AlterTableNode) {\r\n\r\n        this.nextToken();\r\n        if (!this.comesToken(TokenType.keywordTo)) {\r\n            this.addCompletionHintHere(node.tableIdentifier, false, [\"column\", \"to\"], 3);\r\n        }\r\n        node.endPosition = this.getEndOfCurrentToken();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordTo:\r\n                this.nextToken();\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                node.kind = \"renameTable\";\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    node.newTableName = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    node.endPosition = this.getEndOfCurrentToken();\r\n                } else {\r\n                    this.pushError(\"Erwartet wird der neue Tabellenname.\");\r\n                }\r\n                return;\r\n            case TokenType.keywordColumn:\r\n                this.nextToken();\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                this.addCompletionHintHere(node.tableIdentifier, false, [], 3);\r\n                if (!this.comesToken(TokenType.identifier)) {\r\n                    this.pushError(\"Erwartet wird der Name einer Spalte der Tabelle \" + node.tableIdentifier + \".\");\r\n                    return;\r\n                }\r\n                node.kind = \"renameColumn\";\r\n                node.oldColumnName = <string>this.cct.value;\r\n                node.oldColumnPosition = this.getCurrentPosition();\r\n                this.nextToken();\r\n                this.addCompletionHintHere(false, false, [\"to\"], 3);\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                if (!this.expect(TokenType.keywordTo, true)) return;\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    node.newColumnName = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    node.endPosition = this.getEndOfCurrentToken();\r\n                } else {\r\n                    this.pushError(\"Erwartet wird der neue Spaltenname.\");\r\n                }\r\n                return;\r\n            default:\r\n                this.pushError(\"Erwartet wird das Schlüsselwort 'to' (zum Umbenennen der Tabelle) oder das Schlüsselwor 'column' (zum Umbenennen einer Spalte).\")\r\n                return;\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    parseDropColumn(node: AlterTableNode) {\r\n        this.nextToken(); // skip 'drop'\r\n        this.comesToken(TokenType.keywordColumn, true);\r\n        node.oldColumnPosition = this.getCurrentPosition();\r\n        this.addCompletionHintHere(node.tableIdentifier, false, [], 3);\r\n\r\n        node.kind = \"dropColumn\";\r\n        node.endPosition = this.getEndOfCurrentToken();\r\n\r\n        if (this.comesToken(TokenType.identifier)) {\r\n            node.oldColumnName = <string>this.cct.value;\r\n            this.nextToken();\r\n        } else {\r\n            this.pushError(\"Erwartet wird der Bezeichner der Spalte, die gelöscht werden soll.\");\r\n        }\r\n\r\n    }\r\n\r\n    parseAlterTableAdd(node: AlterTableNode) {\r\n        do {\r\n            this.nextToken(); // skip \"add\" or \",\"\r\n            this.comesToken(TokenType.keywordAdd, true);\r\n            let unique: boolean = false;\r\n            switch (this.tt) {\r\n                case TokenType.keywordColumn:\r\n                    this.parseAddColumn(node);\r\n                    break;\r\n                case TokenType.keywordPrimary:\r\n                    this.parseAddPrimaryKey(node);\r\n                    break;\r\n                case TokenType.keywordUnique:\r\n                    this.nextToken();\r\n                    unique = true;\r\n                    this.expect([TokenType.keywordIndex, TokenType.keywordKey], false);\r\n                case TokenType.keywordKey:\r\n                case TokenType.keywordIndex:\r\n                    this.parseAddIndex(node, unique);\r\n                    break;\r\n                case TokenType.keywordModify:\r\n                    this.parseModifyColumn(node);\r\n                    break;\r\n                case TokenType.keywordConstraint:\r\n                    this.parseAddConstraint(node);\r\n                    break;\r\n            }\r\n        } while (this.tt == TokenType.comma);\r\n    }\r\n\r\n    parseAddConstraint(node: AlterTableNode) {\r\n        this.nextToken(); // skip \"constraint\"\r\n        if (!this.expect(TokenType.identifier)) return;\r\n\r\n        if (this.comesToken(TokenType.keywordForeign)) {\r\n            let fki = this.parseForeignKeyDefinition();\r\n            if (fki != null) {\r\n                if (node.foreignKeys == null) node.foreignKeys = [];\r\n                node.foreignKeys.push(fki);\r\n                node.kind = \"omittedKind\";\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    parseForeignKeyDefinition(): ForeignKeyInfo {\r\n        let fki: ForeignKeyInfo = { column: \"\", referencesTable: \"\", referencesColumn: \"\", referencesPosition: this.getCurrentPosition() };\r\n        if (!this.expect(TokenType.keywordForeign)) return;\r\n        if (!this.expect(TokenType.keywordKey)) return;\r\n        if (!this.expect(TokenType.leftBracket)) return;\r\n\r\n        if (!this.comesToken(TokenType.identifier)) {\r\n            this.pushError(\"Der Bezeichner der Fremdschlüsselspalte wird erwartet.\");\r\n            return;\r\n        }\r\n\r\n        fki.column = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        if (!this.expect(TokenType.rightBracket)) return;\r\n        this.parseReferences(fki);\r\n        return fki;\r\n    }\r\n\r\n    parseReferences(fki: ForeignKeyInfo) {\r\n\r\n        if (!this.expect(TokenType.keywordReferences)) return;\r\n\r\n        this.addCompletionHintHere(false, true, []);\r\n\r\n        if (!this.comesToken(TokenType.identifier)) {\r\n            this.pushError(\"Der Bezeichner der referenzierten Tabelle wird erwartet.\");\r\n            return;\r\n        }\r\n\r\n        fki.referencesTable = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        let pos0 = this.lastToken.position;\r\n        let pos1 = this.getCurrentPosition();\r\n        this.module.addCompletionHint(this.getEndOfPosition(pos0), pos1, fki.referencesTable, false, []);\r\n\r\n\r\n        if (!this.expect(TokenType.leftBracket)) return;\r\n        if (!this.comesToken(TokenType.identifier)) {\r\n            this.pushError(\"Der Bezeichner der referenzierten Spalte wird erwartet.\");\r\n            return;\r\n        }\r\n\r\n        fki.referencesColumn = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        if (!this.expect(TokenType.rightBracket)) return;\r\n\r\n        while (this.tt == TokenType.keywordOn) {\r\n            this.nextToken();\r\n            let kind: \"onDelete\" | \"onUpdate\" | \"\" = \"\";\r\n\r\n            switch (this.tt) {\r\n                //@ts-ignore\r\n                case TokenType.keywordDelete:\r\n                    kind = \"onDelete\";\r\n                    break;\r\n                //@ts-ignore\r\n                case TokenType.keywordUpdate:\r\n                    kind = \"onUpdate\";\r\n                    break;\r\n            }\r\n\r\n            if (kind == \"\") {\r\n                this.pushError(\"Nach 'on' wird 'delete' oder 'update' erwartet.\");\r\n                if (!this.comesToken([TokenType.keywordCascade, TokenType.keywordRestrict, TokenType.keywordSet, TokenType.keywordNo])) {\r\n                    this.nextToken();\r\n                    kind = \"onDelete\";\r\n                }\r\n            } else {\r\n                this.nextToken();\r\n            }\r\n\r\n            switch (this.tt) {\r\n                //@ts-ignore\r\n                case TokenType.keywordCascade:\r\n                //@ts-ignore\r\n                case TokenType.keywordRestrict:\r\n                    fki[kind] = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    break;\r\n                //@ts-ignore\r\n                case TokenType.keywordSet:\r\n                    fki[kind] = \"set \";\r\n                    this.nextToken();\r\n                    if ([TokenType.keywordNull, TokenType.keywordDefault].indexOf(this.tt) >= 0) {\r\n                        fki[kind] += this.cct.value;\r\n                        this.nextToken();\r\n                    } else {\r\n                        this.pushError(\"Nach 'on delete/update set' wird 'null' oder 'default' erwartet.\");\r\n                    }\r\n                    break;\r\n                //@ts-ignore\r\n                case TokenType.keywordNo:\r\n                    this.nextToken();\r\n                    if (this.expect(TokenType.keywordAction), true) {\r\n                        fki[kind] = \"no action\";\r\n                    }\r\n                    break;\r\n                default:\r\n                    this.pushError(\"Nach 'on delete/update' wird 'cascade', 'set null', 'set default' oder 'no action' erwartet.\");\r\n                    break;\r\n\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    parseModifyColumn(node: AlterTableNode) {\r\n        this.nextToken();\r\n        let modifyColumnInfo = this.parseColumnDefinition(false);\r\n        if (modifyColumnInfo != null) {\r\n            if (node.modifyColumnInfo == null) node.modifyColumnInfo = [];\r\n            node.modifyColumnInfo.push(modifyColumnInfo);\r\n        }\r\n    }\r\n\r\n    parseAddPrimaryKey(node: AlterTableNode) {\r\n        this.nextToken(); // skip \"primary\"\r\n        node.primaryKeys = [];\r\n        if (this.expect(TokenType.keywordKey, true) && this.expect(TokenType.leftBracket, false)) {\r\n            do {\r\n                this.nextToken();\r\n                if (this.tt == TokenType.identifier) {\r\n                    node.primaryKeys.push(<string>this.cct.value);\r\n                    this.nextToken();\r\n                }\r\n            } while (this.tt == TokenType.comma)\r\n        }\r\n        if (this.expect(TokenType.rightBracket, true)) {\r\n            node.kind = \"omittedKind\";\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    parseAddIndex(node: AlterTableNode, unique: boolean) {\r\n        this.nextToken(); // skip \"key\" | \"index\"\r\n\r\n        let index = { index_name: \"\", column: \"\", unique: unique }\r\n        if (this.tt == TokenType.identifier) {\r\n            index.index_name = <string>this.cct.value;\r\n            this.nextToken();\r\n        } else {\r\n            this.pushError(\"Erwartet wird der Bezeichner des Index.\");\r\n            return null;\r\n        }\r\n\r\n        if (!this.expect(TokenType.leftBracket, true)) return null;\r\n        if (this.tt == TokenType.identifier) {\r\n            index.column = <string>this.cct.value;\r\n            this.nextToken();\r\n            if (node.indices == null) node.indices = [];\r\n            node.indices.push(index);\r\n        } else {\r\n            this.pushError(\"Erwartet wird der Bezeichner der Spalte, für die ein Index erstellt werden soll.\");\r\n            return null;\r\n        }\r\n\r\n        node.kind = \"omittedKind\";\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        return null;\r\n    }\r\n\r\n    parseAddColumn(node: AlterTableNode) {\r\n        node.kind = \"addColumn\";\r\n        this.comesToken(TokenType.keywordColumn, true);\r\n        node.columnDefBegin = this.getCurrentPosition();\r\n        node.columnDef = this.parseColumnDefinition(false);\r\n    }\r\n\r\n    parseDropTable(): DropTableNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"Delete\"\r\n\r\n        let node: DropTableNode = {\r\n            type: TokenType.keywordDrop,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n            ifExists: false\r\n        }\r\n\r\n        if (!this.expect(TokenType.keywordTable, true)) {\r\n            this.addCompletionHintHere(false, false, [\"table\"], 1);\r\n        }\r\n\r\n        if (this.comesToken(TokenType.keywordIf, true)) {\r\n            node.ifExists = true;\r\n            this.expect(TokenType.keywordExists, true);\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1, \"\", \";\");\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n\r\n    }\r\n\r\n    parseDelete(): DeleteNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"Delete\"\r\n\r\n        let node: DeleteNode = {\r\n            type: TokenType.keywordDelete,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n            whereNode: null,\r\n            whereNodeBegin: null,\r\n            whereNodeEnd: null\r\n        }\r\n\r\n        if (!this.expect(TokenType.keywordFrom, true)) {\r\n            this.addCompletionHintHere(false, false, [\"from\"], 1);\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1, \"\", \" where\\n\\t\");\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        this.addCompletionHintHere(false, false, [\"where\\n\\t\"], 1);\r\n        if (this.tt != TokenType.keywordWhere) return node;\r\n\r\n        this.nextToken(); // skip \"where\"\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n\r\n        node.whereNodeBegin = this.getEndOfPosition(this.lastToken.position);\r\n        node.whereNode = this.parseTerm();\r\n        node.whereNodeEnd = this.getCurrentPosition();\r\n\r\n        this.module.addCompletionHint(node.whereNodeBegin, this.getCurrentPositionPlus(3), node.tableIdentifier, false, []);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n        return node;\r\n\r\n    }\r\n\r\n    parseUpdate(): UpdateNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"update\"\r\n\r\n        let node: UpdateNode = {\r\n            type: TokenType.keywordUpdate,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n            columnIdentifiers: [],\r\n            columnIdentifierPositions: [],\r\n            values: [],\r\n            valuePosBegin: [],\r\n            valuePosEnd: [],\r\n            whereNode: null,\r\n            whereNodeBegin: null,\r\n            whereNodeEnd: null\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1, \"\", \" set\\n\\t\");\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        this.addCompletionHintHere(false, false, [\"set\\n\\t\"], 1);\r\n        if (!this.expect(TokenType.keywordSet)) return node;\r\n        let first: boolean = true;\r\n        do {\r\n            this.addCompletionHintHere(node.tableIdentifier, false, first ? [] : ['where'], 1, null, \" = \");\r\n            first = false;\r\n            if (this.tt != TokenType.identifier) {\r\n                this.pushError(\"Hier wird der Bezeichner derjenigen Spalte der Tabelle \" + node.tableIdentifier + \" erwaretet, deren Wert verändert werden soll.\", \"error\");\r\n                break;\r\n            }\r\n\r\n            node.columnIdentifiers.push(<string>this.cct.value);\r\n            node.columnIdentifierPositions.push(this.getCurrentPosition());\r\n            this.nextToken();\r\n\r\n            this.expect(TokenType.equal, true);\r\n\r\n            node.valuePosBegin.push(this.getCurrentPosition());\r\n            node.values.push(this.parseTerm());\r\n            node.valuePosEnd.push(this.getCurrentPosition());\r\n\r\n        } while (this.comesToken(TokenType.comma, true));\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        if (this.lastToken.tt != TokenType.comma || this.comesToken(TokenType.keywordWhere)) {\r\n            if (!this.expect(TokenType.keywordWhere, true)) return node;\r\n\r\n            node.whereNodeBegin = this.getEndOfPosition(this.lastToken.position);\r\n            node.whereNode = this.parseTerm();\r\n            node.whereNodeEnd = this.getCurrentPosition();\r\n\r\n            this.module.addCompletionHint(node.whereNodeBegin, node.whereNodeEnd, node.tableIdentifier, false, []);\r\n\r\n            node.endPosition = this.getCurrentPosition();\r\n        } else {\r\n            this.comesToken(TokenType.keywordWhere, true); // skip where, if present\r\n        }\r\n        return node;\r\n\r\n    }\r\n\r\n    parseCreateTableOrDatabase(): CreateTableNode | OmittedStatementNode {\r\n        switch (this.ct[1].tt) {\r\n            case TokenType.keywordDatabase:\r\n                return this.parseCreateDatabase();\r\n            case TokenType.keywordTable:\r\n                return this.parseCreateTable();\r\n            default:\r\n                this.nextToken();\r\n                this.pushError(\"Nach 'create' wird 'table' erwartet.\");\r\n                this.nextToken();\r\n                return null;\r\n        }\r\n    }\r\n\r\n    parseCreateDatabase(): OmittedStatementNode {\r\n        let node: OmittedStatementNode = {\r\n            type: TokenType.omittedeStatement,\r\n            position: this.getCurrentPosition(),\r\n            endPosition: null,\r\n            symbolTable: null\r\n        }\r\n\r\n        this.nextToken();\r\n        this.pushError(\"Die CREATE-DATABASE-Anweisung wird von der SQLite-Engine nicht unterstützt. Sie können eine neue Datenbank anlegen, indem Sie auf den entsprechenden Button oberhalb der Liste der Datenbanken (linke Seite des Fensters) klicken. Diese Anweisung wird überlesen.\", \"info\");\r\n        while (this.tt != TokenType.semicolon && this.tt != TokenType.endofSourcecode) {\r\n            node.endPosition = this.getEndOfCurrentToken();\r\n            this.nextToken();\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    parseCreateTable(): CreateTableNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"create\"\r\n\r\n        if (!this.expect(TokenType.keywordTable, true)) {\r\n            this.module.addCompletionHint(startPosition, this.getCurrentPositionPlus(3), false, false, [\"table\"]);\r\n        }\r\n\r\n        let ifNotExists: boolean = false;\r\n        if (this.comesToken(TokenType.keywordIf)) {\r\n            this.nextToken();\r\n            this.expect(TokenType.keywordNot, true);\r\n            this.expect(TokenType.keywordExists, true);\r\n            ifNotExists = true;\r\n        }\r\n\r\n        let identifier = \"\";\r\n        if (this.expect(TokenType.identifier, false)) {\r\n            identifier = <string>this.cct.value;\r\n            let pos1 = this.getCurrentPosition();\r\n            let pos2 = this.getCurrentPositionPlus(identifier.length + 3);\r\n            this.nextToken();\r\n            if (!this.comesToken(TokenType.leftBracket)) {\r\n                this.module.addCompletionHint(pos1, pos2, false, false, [\"(\"]);\r\n            }\r\n        }\r\n\r\n        let node: CreateTableNode = {\r\n            type: TokenType.keywordCreate,\r\n            identifier: identifier,\r\n            position: startPosition,\r\n            endPosition: null,\r\n            columnList: [],\r\n            symbolTable: null,\r\n            combinedPrimaryKeyColumns: [],\r\n            foreignKeyInfoList: [],\r\n            ifNotExists: ifNotExists,\r\n            uniqueConstraints: []\r\n        }\r\n\r\n        if (!this.expect(TokenType.leftBracket, true)) return node;\r\n\r\n        let primaryKeyAlreadyDefined: boolean = false;\r\n        let first: boolean = true;\r\n\r\n        while (this.tt != TokenType.rightBracket) {\r\n            if (!first) this.expect(TokenType.comma, true);\r\n            first = false;\r\n            if (this.comesToken(TokenType.keywordConstraint, true)) {\r\n                this.expect(TokenType.identifier, true);\r\n                this.expect([TokenType.keywordForeign, TokenType.keywordPrimary, TokenType.keywordUnique], false);\r\n            }\r\n\r\n            switch (this.tt) {\r\n                case TokenType.keywordPrimary:\r\n                    if (primaryKeyAlreadyDefined) this.pushError(\"Je Tabelle darf nur ein einziger Primärschlüssel definiert werden.\", \"error\", this.getCurrentPosition());\r\n                    this.parsePrimaryKeyTerm(primaryKeyAlreadyDefined, node);\r\n                    primaryKeyAlreadyDefined = true;\r\n                    break;\r\n                case TokenType.keywordUnique:\r\n                    this.parseUniqueTerm(node);\r\n                    break;\r\n                case TokenType.keywordForeign:\r\n                    let fki = this.parseForeignKeyDefinition();\r\n                    if (fki != null) {\r\n                        node.foreignKeyInfoList.push(fki);\r\n                    }\r\n                    break;\r\n                case TokenType.identifier:\r\n                    let columnNode = this.parseColumnDefinition(primaryKeyAlreadyDefined);\r\n                    node.columnList.push(columnNode);\r\n                    primaryKeyAlreadyDefined = primaryKeyAlreadyDefined || columnNode.isPrimary;\r\n                    break;\r\n                default:\r\n                    this.pushError(TokenTypeReadable[this.tt] + \" wird hier nicht erwartet.\", \"error\");\r\n                    break;\r\n            }\r\n            if (!this.comesToken(TokenType.comma)) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        while ([TokenType.keywordAutoincrement, TokenType.keywordEngine, TokenType.keywordDefault, TokenType.keywordCollate].indexOf(this.tt) >= 0) {\r\n            switch (this.tt) {\r\n                case TokenType.keywordCollate:\r\n                    this.nextToken();\r\n                    this.skip(TokenType.equal);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordEngine:\r\n                    this.nextToken();\r\n                    this.skip(TokenType.equal);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordDefault:\r\n                    this.nextToken();\r\n                    this.expect([TokenType.keywordCharset, TokenType.keywordCharacter], true);\r\n                    this.skip(TokenType.keywordSet);\r\n                    this.skip(TokenType.equal);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordAutoincrement:\r\n                    this.nextToken();\r\n                    this.expect(TokenType.equal, true);\r\n                    this.expect(TokenType.integerConstant, true);\r\n                    break;\r\n            }\r\n\r\n        }\r\n\r\n        for (let column of node.columnList) {\r\n            if (column.isAutoIncrement && !(column.isPrimary || node.combinedPrimaryKeyColumns.indexOf(column.identifier) >= 0)) {\r\n                this.pushError(\"autoincrement gibt es nur bei Primärschlüsseln, d.h. es fehlt wahrscheinlich 'primary key'.\", \"warning\", node.position);\r\n            }\r\n        }\r\n\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n\r\n    parsePrimaryKeyTerm(primaryKeyAlreadyDefined: boolean, node: CreateTableNode) {\r\n        if (primaryKeyAlreadyDefined) {\r\n            this.pushError(\"Die Tabelle kann nur einen einzigen Primärschlüssel haben.\");\r\n        }\r\n        this.nextToken(); // skip \"primary\"\r\n        this.expect(TokenType.keywordKey, true);\r\n\r\n        let columns: string[] = node.columnList.map(c => c.identifier);\r\n\r\n        this.addCompletionHintHere(false, false, columns);\r\n        if (this.comesToken(TokenType.leftBracket)) {\r\n            this.addCompletionHintHere(false, false, columns);\r\n            this.nextToken();\r\n\r\n            while (true) {\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    node.combinedPrimaryKeyColumns.push(<string>this.cct.value);\r\n                    this.nextToken();\r\n                    this.addCompletionHintHere(false, false, columns, 1);\r\n                    if (!this.comesToken(TokenType.comma)) {\r\n                        break;\r\n                    } else {\r\n                        this.nextToken();\r\n                        this.addCompletionHintHere(false, false, columns);\r\n                    }\r\n                } else {\r\n                    this.pushError(\"Der Bezeichner einer Spalte wird erwartet. Gefunden wurde: \" + this.cct.value);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        } else {\r\n            this.pushError(\"( erwartet.\");\r\n        }\r\n    }\r\n\r\n    parseUniqueTerm(node: CreateTableNode) {\r\n        this.nextToken(); // skip \"unique\"\r\n\r\n        let columns: string[] = node.columnList.map(c => c.identifier);\r\n        let uniqueConstraint: string[] = [];\r\n        node.uniqueConstraints.push(uniqueConstraint);\r\n\r\n        this.addCompletionHintHere(false, false, columns);\r\n        if (this.comesToken(TokenType.leftBracket)) {\r\n            this.addCompletionHintHere(false, false, columns);\r\n            this.nextToken();\r\n\r\n            while (true) {\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    uniqueConstraint.push(<string>this.cct.value);\r\n                    this.nextToken();\r\n                    this.addCompletionHintHere(false, false, columns, 1);\r\n                    if (!this.comesToken(TokenType.comma)) {\r\n                        break;\r\n                    } else {\r\n                        this.nextToken();\r\n                        this.addCompletionHintHere(false, false, columns);\r\n                    }\r\n                } else {\r\n                    this.pushError(\"Der Bezeichner einer Spalte wird erwartet. Gefunden wurde: \" + this.cct.value);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        } else {\r\n            this.pushError(\"( erwartet.\");\r\n        }\r\n    }\r\n\r\n    parseColumnDefinition(primaryKeyAlreadyDefined: boolean): CreateTableColumnNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n        let identifier = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        let node: CreateTableColumnNode = {\r\n            type: TokenType.columnDef,\r\n            identifier: identifier,\r\n            isPrimary: false,\r\n            isAutoIncrement: false,\r\n            position: position,\r\n            baseType: null,\r\n            notNull: false\r\n        }\r\n\r\n        this.parseType(node, primaryKeyAlreadyDefined);\r\n\r\n        return node;\r\n\r\n    }\r\n\r\n    addCompletionHintHere(hintColumns: boolean | string, hintTables: boolean, hints: string[], additionalColumns: number = 0, praefix: string = \"\", suffix: string = \"\") {\r\n        let pos0 = this.lastToken.position;\r\n        let pos1 = this.getCurrentPosition();\r\n        pos1.column += 1 + additionalColumns\r\n        this.module.addCompletionHint(this.getEndOfPosition(pos0), pos1, hintColumns, hintTables, hints, null, praefix, suffix);\r\n    }\r\n\r\n    identifierMap: {[key: string]:string} = {'year': 'int', 'binary': 'varchar', 'varbinary': 'varchar'};\r\n\r\n    parseType(node: CreateTableColumnNode, primaryKeyAlreadyDefined: boolean) {\r\n\r\n        let datatypes = SQLBaseType.baseTypes.map(type => type.toString());\r\n        this.addCompletionHintHere(false, false, datatypes);\r\n\r\n        if (!this.expect(TokenType.identifier, false)) {\r\n            this.pushError(\"Erwartet wird ein Datentyp. Gefunden wurde: \" + this.cct.value);\r\n            return;\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n        let mappedIdentifier:string = this.identifierMap[identifier.toLocaleLowerCase()];\r\n\r\n        if (mappedIdentifier != null) {\r\n            identifier = mappedIdentifier;\r\n        }\r\n\r\n        let type = SQLBaseType.getBaseType(identifier);\r\n        if (type == null) {\r\n            this.pushError(\"Erwartet wird ein Datentyp. Gefunden wurde: \" + identifier);\r\n        }\r\n        node.baseType = type;\r\n        this.nextToken();\r\n\r\n        if (this.tt == TokenType.leftBracket) {\r\n            this.nextToken();\r\n            node.parameters = [];\r\n            //@ts-ignore\r\n            while (this.tt == TokenType.integerConstant) {\r\n                node.parameters.push(<number>this.cct.value);\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.comma) break;\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.integerConstant) {\r\n                    this.pushError(\"Erwartet wird eine ganze Zahl, gefunden wurde: \" + this.cct.value);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (type != null && node.parameters.length > type.parameterDescriptions.length) {\r\n                this.pushError(\"Der Datentyp \" + type.toString() + \" hat höchstens \" + type.parameterDescriptions.length + \" Parameter.\");\r\n            }\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        }\r\n\r\n        if (identifier != null && identifier.toLocaleLowerCase() == \"char\" && node.parameters == null) {\r\n            node.parameters = [1];\r\n        }\r\n\r\n        // primary key autoincrement\r\n        // references table(column)\r\n        // not null\r\n\r\n        this.addCompletionHintHere(false, false, [\"primary key\", \"references\", \"not null\"]);\r\n\r\n        let alreadySeenKeywords: TokenType[] = [];\r\n\r\n        while ([TokenType.keywordOn, TokenType.keywordCharacter, TokenType.keywordComment, TokenType.keywordAutoincrement, TokenType.keywordKey, TokenType.keywordPrimary, TokenType.keywordNot, TokenType.keywordReferences, TokenType.keywordCollate, TokenType.keywordDefault].indexOf(this.tt) >= 0) {\r\n            if (alreadySeenKeywords.indexOf(this.tt) >= 0) {\r\n                this.pushError('Das Schlüsselwort ' + TokenTypeReadable[this.tt] + \" darf bei der Definition einer Spalte nicht öfters als ein Mal vorkommen.\");\r\n            }\r\n\r\n            alreadySeenKeywords.push(this.tt);\r\n\r\n            switch (this.tt) {\r\n                case TokenType.keywordAutoincrement:\r\n                    this.nextToken();\r\n                    node.isAutoIncrement = true;\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.equal) {\r\n                        this.nextToken();\r\n                        this.expect(TokenType.integerConstant);\r\n                    } else {\r\n                        //@ts-ignore\r\n                        if (this.tt == TokenType.comma && this.ct[1].tt == TokenType.keywordAutoincrement) {\r\n                            this.nextToken();\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.keywordPrimary:\r\n                    if (primaryKeyAlreadyDefined) this.pushError(\"In einer Tabelle darf es nur einen einzigen primary key geben.\");\r\n                    this.nextToken(); // skip \"primary\"\r\n                    if (!this.expect(TokenType.keywordKey, true)) {\r\n                        this.addCompletionHintHere(false, false, [\"key\"]);\r\n                    } else {\r\n                        this.addCompletionHintHere(false, false, [\"autoincrement, \\n\"])\r\n                    }\r\n                    node.isPrimary = true;\r\n                    break;\r\n                case TokenType.keywordReferences:\r\n                    let fki: ForeignKeyInfo = { column: node.identifier, referencesColumn: \"\", referencesTable: \"\", referencesPosition: this.getCurrentPosition() };\r\n                    node.foreignKeyInfo = fki;\r\n                    this.parseReferences(fki);\r\n                    break;\r\n                case TokenType.keywordNot:\r\n                    this.nextToken();\r\n                    if (!this.expect(TokenType.keywordNull, true)) {\r\n                        this.addCompletionHintHere(false, false, [\"null\"]);\r\n                    } else {\r\n                        this.addCompletionHintHere(false, false, [\"references\"]);\r\n                    }\r\n                    node.notNull = true;\r\n                    break;\r\n                case TokenType.keywordCollate:\r\n                    this.nextToken();\r\n                    node.collate = <string>this.cct.value;\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordCharacter:\r\n                    this.nextToken();\r\n                    this.expect(TokenType.keywordSet, true);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordDefault:\r\n                    this.nextToken();\r\n\r\n                    if (this.ct[1].tt == TokenType.leftBracket && this.ct[2].tt == TokenType.rightBracket) {\r\n                        this.nextToken();\r\n                        this.nextToken();\r\n                        this.nextToken();\r\n                        break;\r\n                    }\r\n\r\n                    node.defaultValue = <string>this.cct.value;\r\n                    if (typeof this.cct.value == \"string\" && node.defaultValue.toLowerCase() != 'null' ) {\r\n                        node.defaultValue = \"'\" + node.defaultValue + \"'\";\r\n                    }\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.keywordNull) {\r\n                        this.nextToken();\r\n                        break;\r\n                    } else if ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.stringConstant].indexOf(this.tt) >= 0) {\r\n                        let constantType = SQLBaseType.fromConstantType(this.tt);\r\n                        if (!constantType.canCastTo(type)) {\r\n                            this.pushError(\"Die Konstante hinter 'default' passt nicht zum Datentyp der Spalte.\");\r\n                        }\r\n                        this.nextToken();\r\n                    }\r\n                    break;\r\n                case TokenType.keywordComment:\r\n                    this.nextToken(); // Skip \"comment\"\r\n                    this.expect(TokenType.stringConstant, true);\r\n                    break;\r\n                case TokenType.keywordOn:\r\n                    this.nextToken();\r\n                    this.expect([TokenType.keywordUpdate], true);\r\n                    while (!this.comesToken([TokenType.comma, TokenType.endofSourcecode, TokenType.rightBracket])) this.nextToken();\r\n                    //@ts-ignore\r\n                    if (this.lastToken.tt == TokenType.leftBracket && this.tt == TokenType.rightBracket) this.nextToken();\r\n                    break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    parseInsert(): InsertNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        let rightBracketPosition =startPosition;\r\n        this.nextToken(); // skip \"insert\"\r\n\r\n        this.expect(TokenType.keywordInto, true);\r\n\r\n        let node: InsertNode = {\r\n            type: TokenType.keywordInsert,\r\n            position: startPosition,\r\n            endPosition: this.getCurrentPosition(),\r\n            valuesPosition: null,\r\n            columnsPosition: null,\r\n            symbolTable: null,\r\n            columnList: [],\r\n            values: [],\r\n            table: null\r\n        }\r\n\r\n        if (this.tt == TokenType.identifier) {\r\n            node.table = {\r\n                type: TokenType.table,\r\n                identifier: <string>this.cct.value,\r\n                alias: null,\r\n                position: this.getCurrentPosition()\r\n            }\r\n            node.columnsPosition = { line: node.table.position.line, column: node.table.position.column + node.table.position.length, length: 0 };\r\n            this.nextToken();\r\n        } else {\r\n            this.pushError(\"Hier wird der Bezeichner einer Tabelle erwartet. Gefunden wurde: \" + this.cct.value, \"error\");\r\n        }\r\n\r\n        if (this.tt == TokenType.leftBracket) {\r\n\r\n            this.nextToken();\r\n            let first: boolean = true;\r\n            //@ts-ignore\r\n            while (first || this.tt == TokenType.comma) {\r\n\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.identifier) {\r\n                    node.columnList.push({\r\n                        type: TokenType.identifier,\r\n                        identifier: this.cct.value + \"\",\r\n                        position: this.getCurrentPosition()\r\n                    })\r\n\r\n                } else {\r\n                    this.pushError(\"Erwartet wird der Bezeichner einer Spalte. Gefunden wurde: \" + this.cct.value, \"error\");\r\n                }\r\n                this.nextToken();\r\n            }\r\n            rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n        }\r\n\r\n        node.valuesPosition = this.getCurrentPosition();\r\n\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordValues:\r\n                this.nextToken();\r\n                this.parseValueLists(node.values);\r\n                break;\r\n            case TokenType.keywordSelect:\r\n            case TokenType.leftBracket:\r\n                if(this.getCurrentPosition().line <= rightBracketPosition.line + 1){\r\n                    let selectNode = this.parseSelect();\r\n                    node.select = selectNode;\r\n                    // if(selectNode != null){\r\n                    //     if(node.columnList != null && selectNode.columnList != null){\r\n                    //         if(node.columnList.length != selectNode.columnList.length){\r\n                    //             this.pushError(\"Die insert-Anweisung erwartet \" + node.columnList.length + \" Werte je Datensatz, der nachfolgende select-Term liefert aber \" + selectNode.columnList.length + \" Werte je Datensatz.\");                        \r\n                    //         } \r\n                    //         node.select = selectNode;\r\n                    //     }\r\n                    // }\r\n                }\r\n                break;\r\n        }\r\n\r\n\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n\r\n    parseValueLists(values: ConstantNode[][]) {\r\n        let insideListTokens = [TokenType.keywordNull, TokenType.charConstant, TokenType.stringConstant, TokenType.booleanConstant, TokenType.floatingPointConstant, TokenType.integerConstant];\r\n\r\n        let outerFirst: boolean = true;\r\n\r\n        while (outerFirst || this.tt == TokenType.comma) {\r\n            if (!outerFirst) {\r\n                this.nextToken(); // consume comma\r\n            }\r\n            outerFirst = false;\r\n            let leftBracketPosition = this.getCurrentPosition();\r\n            if (!this.expect(TokenType.leftBracket, true)) {\r\n                break;\r\n            }\r\n            let line: ConstantNode[] = [];\r\n            let first: boolean = true;\r\n            //@ts-ignore\r\n            while (first || this.tt == TokenType.comma) {\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n                if (this.tt == TokenType.identifier) {\r\n                    if (this.cct.isDoubleQuotedIdentifier) {\r\n                        this.tt = TokenType.stringConstant\r\n                    } else {\r\n                        let lv = (this.cct.value + \"\").toLocaleLowerCase();\r\n                        if ([\"date\", \"_binary\"].indexOf(lv) >= 0) {\r\n                            this.nextToken();\r\n                        }\r\n                    }\r\n                    \r\n                    \r\n                }\r\n\r\n\r\n\r\n                //@ts-ignore\r\n                if (insideListTokens.indexOf(this.tt) < 0) {\r\n                    this.pushError(\"Erwartet wird eine Konstante oder null. Gefunden wurde: \" + this.cct.value, \"error\");\r\n                    this.nextToken();\r\n                } else {\r\n                    line.push({\r\n                        constantType: this.tt,\r\n                        position: this.getCurrentPosition(),\r\n                        constant: this.cct.value,\r\n                        type: TokenType.constantNode\r\n                    });\r\n                    this.nextToken();\r\n                }\r\n            }\r\n            this.expect(TokenType.rightBracket, true);\r\n            if (line.length == 0) {\r\n                this.pushError(\"Eine Zeile kann nur dann in die Tabelle eingefügt werden, wenn sie mindestens einen Spaltenwert besitzt.\", \"error\", leftBracketPosition);\r\n            } else {\r\n                values.push(line);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    parseConstant(): ConstantNode {\r\n        let constantNode: ConstantNode = {\r\n            constantType: this.tt,\r\n            position: this.getCurrentPosition(),\r\n            constant: this.cct.value,\r\n            type: TokenType.constantNode\r\n        }\r\n        this.nextToken();\r\n\r\n        return constantNode;\r\n    }\r\n\r\n    parseSelect(): SelectNode {\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"select\"\r\n\r\n        let columnListStart: TextPosition = {\r\n            line: startPosition.line,\r\n            column: startPosition.column + 6,\r\n            length: 1\r\n        };\r\n\r\n        let node: SelectNode = {\r\n            type: TokenType.keywordSelect,\r\n            position: startPosition,\r\n            endPosition: this.getCurrentPosition(),\r\n            symbolTable: null,\r\n            columnList: [],\r\n            fromNode: null,\r\n            whereNode: null,\r\n            parentStatement: null\r\n        }\r\n\r\n        node.columnList = this.parseColumnList([TokenType.keywordFrom, TokenType.semicolon, TokenType.endofSourcecode], true);\r\n\r\n        let columnListKeywordArray = [\"distinct\", \"as\", \"*\", \"from\"];\r\n        if (node.columnList.findIndex(c => c.type == TokenType.allColumns) >= 0) {\r\n            columnListKeywordArray = [\"from\"];\r\n        }\r\n\r\n        this.module.addCompletionHint(columnListStart, this.getCurrentPositionPlus(2), true, true, columnListKeywordArray)\r\n\r\n        let hasFrom = this.comesToken(TokenType.keywordFrom, true);\r\n        let fromListKeywordArray = [\"where\", \"join\", \"left\", \"right\", \"inner\", \"outer\", \"natural\", \"on\", \"as\", \", \"];\r\n        // parse from ...\r\n        if (!hasFrom) {\r\n            columnListKeywordArray.unshift(\"from\");\r\n        } else {\r\n            node.fromStartPosition = { line: this.lastToken.position.line, column: this.lastToken.position.column + this.lastToken.position.length, length: 0 };\r\n\r\n            let dontHint: string[] = [];\r\n            node.fromNode = this.parseTableOrSubQuery(dontHint);\r\n\r\n            fromListKeywordArray.splice(fromListKeywordArray.indexOf(this.lastToken.value + \"\"), 1);\r\n\r\n            let hintEndPosition = this.getCurrentPositionPlus(2);\r\n            if (this.comesToken(TokenType.semicolon)) {\r\n                hintEndPosition = this.getCurrentPosition();\r\n            }\r\n\r\n            this.module.addCompletionHint(node.fromStartPosition, hintEndPosition, false, true, fromListKeywordArray, dontHint)\r\n            node.fromEndPosition = this.getCurrentPosition();\r\n        }\r\n\r\n        // parse where...\r\n\r\n        let whereKeywordArray = [\"like\"];\r\n        if (this.tt == TokenType.keywordWhere) {\r\n            let position = this.getCurrentPosition();\r\n            let whereStart = this.getCurrentPosition();\r\n            this.nextToken();\r\n            node.whereNode = this.parseTerm();\r\n            this.module.addCompletionHint(whereStart, this.getCurrentPositionPlus(4), true, true, whereKeywordArray)\r\n            // if (node.whereNode != null) node.whereNode.position = position;\r\n        } else {\r\n            fromListKeywordArray.push(\"where\");\r\n        }\r\n\r\n        let groupKeywordArray = [];\r\n        if (this.tt == TokenType.keywordGroup) {\r\n            let groupStart = this.getCurrentPosition();\r\n            node.groupByNode = this.parseGroupBy();\r\n            this.module.addCompletionHint(groupStart, this.getCurrentPosition(), true, true, groupKeywordArray);\r\n        } else {\r\n            whereKeywordArray.push(\"group by\");\r\n        }\r\n\r\n        if (this.tt == TokenType.keywordOrder) {\r\n            let orderStart = this.getCurrentPosition();\r\n            node.orderByNode = this.parseOrderBy();\r\n            this.module.addCompletionHint(orderStart, this.getCurrentPosition(), true, true, [\"asc\", \"desc\"]);\r\n        } else {\r\n            whereKeywordArray.push(\"order by\");\r\n            groupKeywordArray.push(\"order by\");\r\n        }\r\n\r\n        if (this.tt == TokenType.keywordLimit) {\r\n            node.limitNode = this.parseLimit();\r\n        }\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n        node.endPosition.column += 3;\r\n\r\n        return node;\r\n    }\r\n\r\n    parseLimit(): LimitNode {\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n        let numberOfRows: TermNode = this.parseTerm();\r\n        let ln: LimitNode = {\r\n            type: TokenType.keywordLimit,\r\n            position: position,\r\n            numberOfRows: numberOfRows\r\n        }\r\n        if (this.tt == TokenType.keywordOffset) {\r\n            this.nextToken();\r\n            ln.offset = this.parseTerm();\r\n        }\r\n        return ln;\r\n    }\r\n\r\n    parseGroupBy(): GroupByNode {\r\n        let position = this.getCurrentPosition();\r\n        this.expect(TokenType.keywordGroup, true);\r\n        this.expect(TokenType.keywordBy, true);\r\n        let gbn: GroupByNode = {\r\n            type: TokenType.keywordGroup,\r\n            columnList: [],\r\n            position: position\r\n        }\r\n        let tokenTypesAfterGroupBy = [TokenType.keywordHaving, TokenType.keywordSelect, TokenType.keywordOrder, TokenType.keywordLimit, TokenType.rightBracket, TokenType.semicolon];\r\n        gbn.columnList = this.parseColumnList(tokenTypesAfterGroupBy, false).map(columnNode => columnNode.term);\r\n        if (this.tt == TokenType.keywordHaving) {\r\n            this.nextToken();\r\n            gbn.having = this.parseTerm();\r\n        }\r\n        return gbn;\r\n    }\r\n\r\n    parseOrderBy(): OrderByNode[] {\r\n        this.expect(TokenType.keywordOrder, true);\r\n        this.expect(TokenType.keywordBy, true);\r\n\r\n        let obnList: OrderByNode[] = [];\r\n        let first: boolean = true;\r\n\r\n        do {\r\n            if (first) {\r\n                first = false;\r\n            } else {\r\n                this.expect(TokenType.comma, true);\r\n            }\r\n            let column: TermNode = this.parseTerm();\r\n            let obn: OrderByNode = {\r\n                type: TokenType.keywordOrder,\r\n                position: this.getCurrentPosition(),\r\n                column: column\r\n            }\r\n            if ([TokenType.keywordAscending, TokenType.keywordDescending].indexOf(this.tt) >= 0) this.nextToken();\r\n            if (this.tt == TokenType.keywordNulls) {\r\n                this.nextToken();\r\n                this.expect([TokenType.keywordFirst, TokenType.keywordLast], true);\r\n            }\r\n            obnList.push(obn);\r\n        } while (this.tt == TokenType.comma);\r\n\r\n        return obnList;\r\n    }\r\n\r\n    parseTableOrSubQuery(dontHint: string[]): TableOrSubqueryNode {\r\n\r\n        let leftSide: TableOrSubqueryNode = this.parseAtomicTableOrSubQuery(dontHint);\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        while (this.parseJoinOperator()) {\r\n\r\n            let rightSide: TableOrSubqueryNode = this.parseAtomicTableOrSubQuery(dontHint);\r\n\r\n            leftSide = {\r\n                type: TokenType.keywordJoin,\r\n                firstOperand: leftSide,\r\n                secondOperand: rightSide,\r\n                position: position,\r\n            }\r\n\r\n            if (this.tt == TokenType.keywordOn) {\r\n                leftSide.on = this.parseTerm();\r\n            }\r\n\r\n        }\r\n\r\n        return leftSide;\r\n\r\n    }\r\n\r\n    parseJoinOperator(): boolean {\r\n        if (this.tt == TokenType.comma) {\r\n            this.nextToken();\r\n            return true;\r\n        }\r\n        if (this.tt == TokenType.keywordNatural) this.nextToken();\r\n        switch (this.tt) {\r\n            case TokenType.keywordLeft:\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.keywordOuter) this.nextToken();\r\n                return this.expect(TokenType.keywordJoin, true);\r\n            case TokenType.keywordInner:\r\n            case TokenType.keywordCross:\r\n                this.nextToken();\r\n                return this.expect(TokenType.keywordJoin, true);\r\n            case TokenType.keywordJoin:\r\n                this.nextToken();\r\n                return true;\r\n            default: return false;\r\n        }\r\n    }\r\n\r\n    parseAtomicTableOrSubQuery(dontHint: string[]): TableOrSubqueryNode {\r\n\r\n        if (!this.expect([TokenType.identifier, TokenType.leftBracket], false)) {\r\n            return null;\r\n        }\r\n\r\n        if (this.tt == TokenType.leftBracket) {\r\n            this.nextToken();\r\n            let ret: TableOrSubqueryNode;\r\n            //@ts-ignore\r\n            if (this.tt == TokenType.keywordSelect) {\r\n                let position = this.getCurrentPosition();\r\n                let selectStatement = this.parseSelect();\r\n                ret = {\r\n                    type: TokenType.subquery,\r\n                    alias: null,\r\n                    position: position,\r\n                    query: selectStatement\r\n                }\r\n            } else {\r\n                ret = this.parseTableOrSubQuery(dontHint);\r\n            }\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n\r\n            //@ts-ignore\r\n            if (this.tt == TokenType.keywordAs && ret.type == TokenType.subquery) {\r\n                this.nextToken();\r\n                if (this.expect(TokenType.identifier, false)) {\r\n                    ret.alias = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    dontHint.push(ret.alias);\r\n                }\r\n            }\r\n\r\n            return ret;\r\n        }\r\n\r\n        if (this.tt == TokenType.identifier) {\r\n            let node: TableNode = {\r\n                type: TokenType.table,\r\n                identifier: <string>this.cct.value,\r\n                alias: null,\r\n                position: this.getCurrentPosition()\r\n            }\r\n            dontHint.push(node.identifier);\r\n            this.nextToken();\r\n\r\n            //@ts-ignore\r\n            if (this.tt == TokenType.keywordAs) {\r\n                this.nextToken();\r\n                if (this.expect(TokenType.identifier, false)) {\r\n                    node.alias = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    dontHint.push(node.alias);\r\n                }\r\n\r\n            }\r\n\r\n            return node;\r\n        }\r\n\r\n    }\r\n\r\n    parseColumnList(tokenTypesAfterListEnd: TokenType[], allowAliases: boolean): ColumnNode[] {\r\n        let columns: ColumnNode[] = [];\r\n\r\n        while ([TokenType.stringConstant, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.booleanConstant,\r\n        TokenType.identifier, TokenType.multiplication, TokenType.leftBracket, TokenType.keywordDistinct].indexOf(this.tt) >= 0) {\r\n            if (this.tt == TokenType.multiplication) {\r\n                columns.push({\r\n                    term: null,\r\n                    alias: null,\r\n                    distinct: false,\r\n                    position: this.getCurrentPosition(),\r\n                    type: TokenType.allColumns\r\n                });\r\n                this.nextToken();\r\n            } else {\r\n                let distinct = this.comesToken(TokenType.keywordDistinct, true);\r\n                let columnTerm = this.parseTerm();\r\n                if (columnTerm != null) {\r\n                    let column: ColumnNode = {\r\n                        type: TokenType.column,\r\n                        term: columnTerm,\r\n                        distinct: distinct,\r\n                        position: columnTerm.position\r\n                    }\r\n                    columns.push(column);\r\n                    if (this.comesToken(TokenType.keywordAs)) {\r\n                        this.nextToken();\r\n                        if (this.expect(TokenType.identifier, false)) {\r\n                            column.alias = \"\" + this.cct.value;\r\n                        }\r\n                        this.nextToken();\r\n                    }\r\n                }\r\n            }\r\n            if (tokenTypesAfterListEnd.indexOf(this.tt) >= 0 || this.isEnd()) {\r\n                break;\r\n            }\r\n            this.expect(TokenType.comma, true);\r\n        }\r\n\r\n        if (columns.length == 0) {\r\n            this.pushError(\"Es fehlt die kommaseparierte Liste der gewünschten Spalten.\", \"error\");\r\n        }\r\n\r\n        return columns;\r\n    }\r\n\r\n\r\n    parseTerm(): TermNode {\r\n        return this.parseTermBinary(0);\r\n    }\r\n\r\n    parseTermBinary(precedence: number): TermNode {\r\n\r\n        let left: TermNode;\r\n        if (precedence < Parser.operatorPrecedence.length - 1) {\r\n            left = this.parseTermBinary(precedence + 1);\r\n        } else {\r\n            left = this.parseUnary();\r\n        }\r\n\r\n        let operators = Parser.operatorPrecedence[precedence];\r\n\r\n        if (left == null || operators.indexOf(this.tt) < 0) {\r\n            return left;\r\n        }\r\n\r\n        let first = true;\r\n\r\n        while (first || operators.indexOf(this.tt) >= 0) {\r\n\r\n            let operator: TokenType = this.tt;\r\n\r\n            first = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            this.nextToken();\r\n            let right: TermNode;\r\n            if (precedence < Parser.operatorPrecedence.length - 1) {\r\n                right = this.parseTermBinary(precedence + 1);\r\n            } else {\r\n                right = this.parseUnary();\r\n            }\r\n\r\n            left = {\r\n                type: TokenType.binaryOp,\r\n                position: position,\r\n                operator: operator,\r\n                firstOperand: left,\r\n                secondOperand: right\r\n            };\r\n\r\n\r\n        }\r\n\r\n        return left;\r\n\r\n    }\r\n\r\n\r\n    // -, not, this, super, a.b.c[][].d, a.b(), b() (== this.b()), super.b(), super()\r\n    parseUnary(): TermNode {\r\n\r\n        let term: TermNode;\r\n        let position: TextPosition = this.getCurrentPosition();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n                return this.parseBracket();\r\n            case TokenType.keywordNot:\r\n                position = position;\r\n                this.nextToken();\r\n                term = this.parseTermBinary(2);\r\n                return {\r\n                    type: TokenType.unaryOp,\r\n                    position: position,\r\n                    operand: term,\r\n                    operator: TokenType.keywordNot\r\n                }\r\n            case TokenType.minus:\r\n                // case TokenType.not:\r\n                position = position;\r\n                let tt1 = this.tt;\r\n                this.nextToken();\r\n                term = this.parseUnary();\r\n\r\n                return {\r\n                    type: TokenType.unaryOp,\r\n                    position: position,\r\n                    operand: term,\r\n                    operator: tt1\r\n                };\r\n\r\n            case TokenType.integerConstant:\r\n            case TokenType.charConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n                term = {\r\n                    type: TokenType.constantNode,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: this.tt,\r\n                    constant: this.cct.value\r\n                };\r\n                let isStringConstant = this.tt == TokenType.stringConstant;\r\n                this.nextToken();\r\n\r\n                if (isStringConstant) return this.parseDotOrArrayChains(term);\r\n\r\n                return term;\r\n            case TokenType.identifier: // attribute of current class or local variable\r\n\r\n                let identifier1 = <string>this.cct.value;\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    let rightBracketPosition = parameters.rightBracketPosition;\r\n\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position1,\r\n                        rightBracketPosition: rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        identifier: identifier1,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.identifier,\r\n                        identifier: identifier1,\r\n                        position: position\r\n                    }\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.dot) {\r\n                        let position = this.getCurrentPosition();\r\n                        this.nextToken();\r\n                        this.expect(TokenType.identifier, false);\r\n                        let secondIdentifier: IdentifierNode = {\r\n                            type: TokenType.identifier,\r\n                            identifier: <string>this.cct.value,\r\n                            position: this.getCurrentPosition()\r\n                        }\r\n                        this.nextToken();\r\n                        term = {\r\n                            type: TokenType.dot,\r\n                            identifierLeft: <IdentifierNode>term,\r\n                            identifierRight: secondIdentifier,\r\n                            position: position\r\n                        }\r\n\r\n                    } else if ([TokenType.isNull, TokenType.isNotNull].indexOf(this.tt) >= 0) {\r\n                        term = {\r\n                            type: TokenType.unaryOp,\r\n                            operand: term,\r\n                            operator: this.tt,\r\n                            position: position\r\n                        };\r\n                        this.nextToken();\r\n                    }\r\n                }\r\n\r\n                return term;\r\n            default:\r\n                this.pushError(\"Erwartet wird eine Variable, ein Methodenaufruf oder eine Konstante. Gefunden wurde: \" + this.cct.value);\r\n                return null;\r\n        }\r\n\r\n    }\r\n\r\n    parseList(): ListNode {\r\n        let node: ListNode = {\r\n            type: TokenType.list,\r\n            position: this.getCurrentPosition(),\r\n            elements: []\r\n        }\r\n\r\n        let constantTypes = [TokenType.charConstant, TokenType.stringConstant, TokenType.booleanConstant, TokenType.floatingPointConstant, TokenType.integerConstant];\r\n\r\n        while (constantTypes.indexOf(this.tt) >= 0) {\r\n            node.elements.push({\r\n                type: TokenType.constantNode,\r\n                constant: this.cct.value,\r\n                constantType: this.tt,\r\n                position: this.cct.position\r\n            });\r\n            this.nextToken();\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            }\r\n            this.nextToken();\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    parseBracket(): TermNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n        let tokenBeforeBracket = this.lastToken;\r\n        this.nextToken(); // consume (\r\n\r\n        if (this.tt == TokenType.keywordSelect) {\r\n            let selectNode = this.parseSelect();\r\n            this.expect(TokenType.rightBracket, true);\r\n            return selectNode;\r\n        } else if ([TokenType.comma, TokenType.rightBracket].indexOf(this.ct[1].tt) >= 0 &&\r\n            [TokenType.keywordIn, TokenType.keywordNotIn].indexOf(tokenBeforeBracket.tt) >= 0) {\r\n            let listNode = this.parseList();\r\n            this.expect(TokenType.rightBracket, true);\r\n            return listNode;\r\n        } else {\r\n            let term = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            let bracketsNode: BracketsNode = {\r\n                position: rightBracketPosition,\r\n                type: TokenType.rightBracket,\r\n                termInsideBrackets: term\r\n            }\r\n\r\n\r\n            return bracketsNode;\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    parseMethodCallParameters(): { rightBracketPosition: TextPosition, nodes: TermNode[], commaPositions: TextPosition[] } {\r\n        // Assumption: current token is (        \r\n        this.nextToken();\r\n        if (this.tt == TokenType.rightBracket) {\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n            return { rightBracketPosition: rightBracketPosition, nodes: [], commaPositions: [] };\r\n        }\r\n\r\n        let parameters: TermNode[] = [];\r\n        let commaPositions: TextPosition[] = [];\r\n\r\n        while (true) {\r\n            let pos = this.pos;\r\n\r\n            if (this.tt == TokenType.multiplication) {\r\n                this.nextToken();\r\n                parameters.push({\r\n                    type: TokenType.allColumns,\r\n                    position: this.getCurrentPosition(),\r\n                });\r\n            } else {\r\n                let parameter = this.parseTerm();\r\n                if (parameter != null) {\r\n                    parameters.push(parameter);\r\n                }\r\n            }\r\n\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            } else {\r\n                commaPositions.push(this.getCurrentPosition());\r\n                this.nextToken(); // consume comma\r\n            }\r\n\r\n            // emergency-step:\r\n            if (this.pos == pos) {\r\n                this.nextToken();\r\n            }\r\n\r\n        }\r\n\r\n        let position = this.getCurrentPosition();\r\n        let rightBracketFound = this.expect(TokenType.rightBracket, true);\r\n\r\n        return { rightBracketPosition: rightBracketFound ? position : null, nodes: parameters, commaPositions: commaPositions };\r\n\r\n    }\r\n\r\n    parseDotOrArrayChains(term: TermNode): TermNode {\r\n\r\n        if (term == null) return null;\r\n\r\n        while (this.comesToken([TokenType.dot, TokenType.leftSquareBracket])) {\r\n            if (this.tt == TokenType.dot) {\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.identifier) {\r\n                    this.pushError(\"Erwartet wird der Bezeichner eines Attributs oder einer Methode, gefunden wurde: \" + this.cct.value);\r\n                    return term;\r\n                }\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position,\r\n                        rightBracketPosition: parameters.rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        identifier: identifier,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                }\r\n                // else {\r\n                //     term = {\r\n                //         type: TokenType.pushAttribute,\r\n                //         position: position,\r\n                //         identifier: identifier,\r\n                //         object: term\r\n                //     }\r\n                // }\r\n\r\n            }\r\n        }\r\n\r\n        return term;\r\n    }\r\n\r\n\r\n}","import { ColumnStructure, TableStructure } from \"../../tools/DatabaseTools.js\";\r\nimport { SQLType, SQLBaseType, SQLDerivedType } from \"./SQLTypes.js\";\r\n\r\n\r\nexport class Column {\r\n\r\n    references: Column;\r\n    fromColumnStructure?: ColumnStructure;\r\n    notNull: boolean;\r\n\r\n    constructor(public identifier: string, public type: SQLType, public table: Table, public isPrimaryKey: boolean, public isNullable: boolean, public defaultValue: string, public isAutoIncrement){\r\n\r\n    }\r\n\r\n    static fromColumnStructure(cs: ColumnStructure, table: Table): Column {\r\n\r\n        let regex1 = /^(\\w*) *(?:\\((.*)\\))?.*$/;\r\n\r\n        let typeMatch1 = cs.completeTypeSQL.match(regex1);\r\n        let baseTypeIdentifier: string = typeMatch1[1];\r\n        let commaSeparatedParameters: string = typeMatch1[2];\r\n\r\n        let parameterValues: number[] = [];\r\n        if(commaSeparatedParameters != null){\r\n            parameterValues = commaSeparatedParameters.split(',').map(v => parseInt(v.trim()));           \r\n        }\r\n\r\n        let type: SQLType = SQLBaseType.getBaseType(baseTypeIdentifier);\r\n        if(parameterValues.length > 0 && type != null){\r\n            type = new SQLDerivedType(<SQLBaseType>type, parameterValues);\r\n        }\r\n\r\n        let column = new Column(cs.name, type, table, cs.isPrimaryKey, !cs.isPrimaryKey, cs.defaultValue, cs.isAutoIncrement);\r\n        column.notNull = cs.notNull;\r\n        \r\n        column.fromColumnStructure = cs;\r\n\r\n        return column;\r\n    }\r\n\r\n}\r\n\r\nexport class Table {\r\n    \r\n    public columns: Column[] = [];\r\n\r\n    public size: number;\r\n\r\n    constructor(public identifier: string){\r\n\r\n    }\r\n\r\n    private static fromTableStructure(ts: TableStructure): Table {\r\n        let table: Table = new Table(ts.name);\r\n        table.columns = ts.columns.map( column => Column.fromColumnStructure(column, table));\r\n        table.size = ts.size;\r\n        return table;\r\n    }\r\n\r\n    static fromTableStructureList(tsList: TableStructure[]): Table[]{\r\n\r\n        if(tsList == null) tsList = [];\r\n\r\n        let tables: Table[] = tsList.map(ts => Table.fromTableStructure(ts));\r\n\r\n        let columnStructureToColumnMap: Map<ColumnStructure, Column> = new Map();\r\n        for(let table of tables){\r\n            for(let column of table.columns){\r\n                columnStructureToColumnMap.set(column.fromColumnStructure, column);\r\n            }\r\n        }\r\n\r\n        for(let table of tables){\r\n            for(let column of table.columns){\r\n                let referencedCs = column.fromColumnStructure.references;\r\n                if(referencedCs != null){\r\n                    let referencedColumn = columnStructureToColumnMap.get(referencedCs);\r\n                    column.references = referencedColumn;\r\n                }\r\n            }\r\n        }\r\n\r\n        return tables;\r\n    }\r\n\r\n}","import { DatabaseStructure } from \"../../tools/DatabaseTools.js\";\r\nimport { TextPosition } from \"../lexer/Token.js\";\r\nimport { Table, Column } from \"./SQLTable.js\";\r\n\r\nexport type Symbol = {\r\n    identifier: string;\r\n    table?: Table;\r\n    column?: Column;\r\n    tableAlias?: string;\r\n    posOfDefinition: TextPosition;\r\n    referencedOnPositions: TextPosition[];\r\n}\r\n\r\nexport class SymbolTable {\r\n    parent: SymbolTable; // SymbolTable of parent scope\r\n    positionFrom: TextPosition;\r\n    positionTo: TextPosition;\r\n\r\n    childSymbolTables: SymbolTable[] = [];\r\n\r\n    private symbols: Map<string, Symbol[]> = new Map();\r\n    symbolList: Symbol[] = [];\r\n\r\n    constructor(parentSymbolTable: SymbolTable, positionFrom: TextPosition, positionTo: TextPosition) {\r\n\r\n        this.parent = parentSymbolTable;\r\n\r\n        this.positionFrom = positionFrom;\r\n        this.positionTo = positionTo;\r\n\r\n\r\n        if (this.parent != null) {\r\n            this.parent.childSymbolTables.push(this);\r\n        }\r\n    }\r\n\r\n    extractDatabaseStructure(databaseStructure: DatabaseStructure) {\r\n        for (let table of Table.fromTableStructureList(databaseStructure?.tables)) {\r\n\r\n            this.storeTableSymbols(table);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    storeTableSymbols(table: Table){\r\n        this.storeSymbol({\r\n            identifier: table.identifier,\r\n            posOfDefinition: null,\r\n            referencedOnPositions: [],\r\n            table: table\r\n        });\r\n\r\n        for (let column of table.columns) {\r\n            this.storeSymbol({\r\n                identifier: column.identifier,\r\n                posOfDefinition: null,\r\n                referencedOnPositions: [],\r\n                column: column\r\n            });\r\n        }\r\n    }\r\n\r\n    storeSymbol(symbol: Symbol) {\r\n        let list: Symbol[] = this.symbols.get(symbol.identifier.toLowerCase());\r\n        if (list == null) {\r\n            list = [symbol];\r\n            this.symbols.set(symbol.identifier.toLowerCase(), list);\r\n        } else {\r\n            list.push(symbol);\r\n        }\r\n        this.symbolList.push(symbol);\r\n    }\r\n\r\n    findTableAtPosition(line: number, column: number): SymbolTable {\r\n\r\n        if (!this.containsPosition(line, column)) {\r\n            return null;\r\n        }\r\n\r\n        let shortestSymbolTableContainingPosition = null;\r\n        let shortestPosition = 10000000;\r\n\r\n        for (let st of this.childSymbolTables) {\r\n            if (st.containsPosition(line, column)) {\r\n                let st1 = st.findTableAtPosition(line, column);\r\n                if (st1.positionTo.line - st1.positionFrom.line < shortestPosition) {\r\n                    shortestSymbolTableContainingPosition = st1;\r\n                    shortestPosition = st1.positionTo.line - st1.positionFrom.line;\r\n                }\r\n            }\r\n            // if(st.containsPosition(line, column) && st.positionTo.line - st.positionFrom.line < shortestPosition){\r\n            //     shortestSymbolTableContainingPosition = st;\r\n            //     shortestPosition = st.positionTo.line - st.positionFrom.line;\r\n            // }\r\n        }\r\n\r\n        if (shortestSymbolTableContainingPosition != null) {\r\n            return shortestSymbolTableContainingPosition;\r\n        } else {\r\n            return this;\r\n        }\r\n\r\n    }\r\n\r\n    containsPosition(line: number, column: number) {\r\n        if (line < this.positionFrom.line || line > this.positionTo.line) {\r\n            return false;\r\n        }\r\n\r\n        if (line == this.positionFrom.line && column < this.positionFrom.column) return false;\r\n        if (line == this.positionTo.line && column > this.positionTo.column + 1) return false;\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    findTable(identifier: string): Table {\r\n        let tables = this.findTables(identifier);\r\n        if(tables.length == 0) return null;\r\n        return tables[0].table;\r\n    }\r\n\r\n    findTables(identifier: string): Symbol[] {\r\n\r\n        let symbolTable: SymbolTable = this;\r\n        while(symbolTable != null){\r\n\r\n            let symbols = symbolTable.symbols.get(identifier.toLowerCase());\r\n            if(symbols != null){\r\n                symbols = symbols.filter(s => s.table != null);\r\n                if(symbols.length > 0){\r\n                    return symbols;\r\n                }\r\n            }\r\n\r\n            symbolTable = symbolTable.parent;\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    findColumn(identifier: string): Symbol[] {\r\n\r\n        let symbolTable: SymbolTable = this;\r\n        while(symbolTable != null){\r\n\r\n            let symbols = symbolTable.symbols.get(identifier.toLowerCase());\r\n            if(symbols != null){\r\n                symbols = symbols.filter(s => s.column != null);\r\n                if(symbols.length > 0){\r\n                    return symbols;\r\n                }\r\n            }\r\n\r\n            symbolTable = symbolTable.parent;\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { SQLBaseType, SQLType } from \"./SQLTypes.js\";\r\n\r\nexport class SQLMethodParameter {\r\n    type: SQLType;\r\n    constructor(public identifier: string, type: string){\r\n        this.type = SQLBaseType.getBaseType(type);\r\n    }\r\n}\r\n\r\nexport class SQLMethod {\r\n    acceptsStarParameter: boolean = false;\r\n    public returnType: SQLType;\r\n    constructor(public identifier: string, public isAggregating: boolean, returnType: string, public parameters: SQLMethodParameter[]){\r\n        this.returnType = SQLBaseType.getBaseType(returnType);\r\n    }\r\n\r\n}\r\n\r\nexport class SQLMethodStore {\r\n\r\n    static instance: SQLMethodStore;\r\n    public methods: SQLMethod[] = [];\r\n\r\n    static getInstance():SQLMethodStore {\r\n        if(this.instance == null){\r\n            this.instance = new SQLMethodStore();\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    constructor(){\r\n        this.pushOneParameterMethod(\"max\" ,\"integer\", \"integer\");\r\n        this.pushOneParameterMethod(\"max\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"max\" ,\"date\", \"date\");\r\n        this.pushOneParameterMethod(\"max\" ,\"time\", \"time\");\r\n        this.pushOneParameterMethod(\"max\" ,\"datetime\", \"datetime\");\r\n        this.pushOneParameterMethod(\"max\" ,\"timestamp\", \"timestamp\");\r\n        this.pushOneParameterMethod(\"min\" ,\"integer\", \"integer\");\r\n        this.pushOneParameterMethod(\"min\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"min\" ,\"date\", \"date\");\r\n        this.pushOneParameterMethod(\"min\" ,\"time\", \"time\");\r\n        this.pushOneParameterMethod(\"min\" ,\"datetime\", \"datetime\");\r\n        this.pushOneParameterMethod(\"min\" ,\"timestamp\", \"timestamp\");\r\n        this.pushOneParameterMethod(\"avg\" ,\"integer\", \"integer\");\r\n        this.pushOneParameterMethod(\"avg\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"sum\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"sum\" ,\"integer\", \"integer\");\r\n\r\n        let countMethod = new SQLMethod(\"count\", true, \"integer\", [new SQLMethodParameter(\"spalte\", \"text\")]);\r\n        countMethod.acceptsStarParameter = true;\r\n        this.methods.push(countMethod);\r\n    }\r\n    \r\n    getMethods(identifier: string){\r\n        return this.methods.filter(m => m.identifier == identifier.toLowerCase());\r\n    }\r\n\r\n\r\n    pushOneParameterMethod(identifier: string, returnType: string, parameterType: string){\r\n        this.methods.push(new SQLMethod(identifier, true, returnType, [new SQLMethodParameter(\"spalte\", parameterType)]));\r\n\r\n    }\r\n}","export function hash(s: string){\r\n    let hash: number = 0;\r\n    let chr: number;\r\n    for (let i = 0; i < s.length; i++) {\r\n      chr   = s.charCodeAt(i);\r\n      hash  = ((hash << 5) - hash) + chr;\r\n      hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n\r\nexport function escapeHtml(unsafe: string): string {\r\n  return unsafe\r\n      .replace(/['\"]+/g, '')\r\n       .replace(/&/g, \"&amp;\")\r\n       .replace(/</g, \"&lt;\")\r\n       .replace(/>/g, \"&gt;\")\r\n       .replace(/\"/g, \"&quot;\")\r\n       .replace(/'/g, \"&#039;\");\r\n}\r\n\r\nexport function dateToString(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth() + 1)}.${date.getFullYear()}, ${twoDez(date.getHours())}:${twoDez(date.getMinutes())}`;\r\n}\r\n\r\nexport function dateToStringWithoutTime(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth())}.${date.getFullYear()}`;\r\n}\r\n\r\nfunction twoDez(z: number):string {\r\n  if(z < 10) return \"0\" + z;\r\n  return \"\" + z;\r\n}\r\n\r\nexport function stringToDate(text: string): Date {\r\n\r\n  let match = text.match(/^(\\d{2})\\.(\\d{2})\\.(\\d{4}), (\\d{2}):(\\d{2})$/);\r\n\r\n  let date: Date = new Date(Number.parseInt(match[3]), Number.parseInt(match[2]), Number.parseInt(match[1]), Number.parseInt(match[4]), Number.parseInt(match[5]) );\r\n\r\n  return date;\r\n}\r\n\r\nexport function stringWrap(s: string, length: number ): string{\r\n  return s.replace(\r\n    new RegExp(`(?![^\\\\n]{1,${length}}$)([^\\\\n]{1,${length}})\\\\s`, 'g'), '$1\\n'\r\n  );\r\n} \r\n\r\nexport function formatAsJavadocComment(s: string, indent: number|string = \"\"): string {\r\n  let indentString = \"\";\r\n\r\n  if(typeof indent == \"string\"){\r\n    indentString = indent;\r\n  } else {\r\n    for(let i = 0; i < indent; i++){\r\n      indentString += \" \";\r\n    }\r\n  }\r\n\r\n  s = stringWrap(s, 60);\r\n  if(s.length > 0) s = \"\\n\" + s;\r\n  s = indentString + \"/**\" + s.replace(/\\n/g, \"\\n\" + indentString + \" * \") + \"\\n\" + indentString + \" */\";\r\n  return s;\r\n}\r\n\r\n\r\nexport function isDate(inputText: string) {\r\n\r\n      if (inputText == null || typeof inputText != 'string') return false;\r\n\r\n      // var dateformat = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/;\r\n      var dateformat = /^\\d{4}[\\/\\-](0?[1-9]|1[012])[\\/\\-](0?[1-9]|[12][0-9]|3[01])$/;\r\n      // Match the date format through regular expression\r\n      if (inputText.match(dateformat)) {\r\n          //Test which seperator is used '/' or '-'\r\n          var opera1 = inputText.split('/');\r\n          var opera2 = inputText.split('-');\r\n          var lopera1 = opera1.length;\r\n          var lopera2 = opera2.length;\r\n          // Extract the string into month, date and year\r\n          if (lopera1 > 1) {\r\n              var pdate = inputText.split('/');\r\n          }\r\n          else if (lopera2 > 1) {\r\n              var pdate = inputText.split('-');\r\n          }\r\n          if (pdate.length != 3) return false;\r\n          var dd = parseInt(pdate[2]);\r\n          var mm = parseInt(pdate[1]);\r\n          var yy = parseInt(pdate[0]);\r\n          // Create list of days of a month [assume there is no leap year by default]\r\n          var ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n          if (mm == 1 || mm > 2) {\r\n              if (dd > ListofDays[mm - 1]) {\r\n                  return false;\r\n              }\r\n          }\r\n          if (mm == 2) {\r\n              var lyear = false;\r\n              if ((!(yy % 4) && yy % 100) || !(yy % 400)) {\r\n                  lyear = true;\r\n              }\r\n              if ((lyear == false) && (dd >= 29)) {\r\n                  return false;\r\n              }\r\n              if ((lyear == true) && (dd > 29)) {\r\n                  return false;\r\n              }\r\n              return true;\r\n          }\r\n\r\n          return true;\r\n\r\n      }\r\n      else {\r\n          return false;\r\n      }\r\n  }\r\n\r\n  export function isDateTime(inputText: string) {\r\n\r\n      if (inputText == null || typeof inputText != 'string') return false;\r\n\r\n      // var dateformat = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/;\r\n      var dateformat = /^\\d{4}[\\-](0[1-9]|1[012])[\\-](0[1-9]|[12][0-9]|3[01]) ([01][0-9]|2[0123]):([0-5][0-9]):([0-5][0-9])$/;\r\n      // Match the date format through regular expression\r\n      if (inputText.match(dateformat)) {\r\n          var splitStr = inputText.split(' ');\r\n          var dateStr = splitStr[0];\r\n          //var timeStr = splitStr[1];\r\n\r\n          if (dateStr.length != 10) return false;\r\n          var dd = parseInt(dateStr.substring(8,10));\r\n          var mm = parseInt(dateStr.substring(5, 7));\r\n          var yy = parseInt(dateStr.substring(0, 4));\r\n          // Create list of days of a month [assume there is no leap year by default]\r\n          var ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n          if (mm == 1 || mm > 2) {\r\n              if (dd > ListofDays[mm - 1]) {\r\n                  return false;\r\n              }\r\n          }\r\n          if (mm == 2) {\r\n              var lyear = false;\r\n              if ((!(yy % 4) && yy % 100) || !(yy % 400)) {\r\n                  lyear = true;\r\n              }\r\n              if ((lyear == false) && (dd >= 29)) {\r\n                  return false;\r\n              }\r\n              if ((lyear == true) && (dd > 29)) {\r\n                  return false;\r\n              }\r\n              return true;\r\n          }\r\n\r\n          return true;\r\n\r\n      }\r\n      else {\r\n          return false;\r\n      }\r\n  }\r\n  export function isTime(inputText: string) {\r\n\r\n      if (inputText == null || typeof inputText != 'string') return false;\r\n\r\n      var timeformat = /^([01][0-9]|2[0123]):([0-5][0-9]):([0-5][0-9])$/;\r\n      // Match the date format through regular expression\r\n      return inputText.match(timeformat) != null;\r\n  }\r\n","import { DatabaseTool } from \"../../tools/DatabaseTools.js\";\r\nimport { TextPosition, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { CompletionHint, Module } from \"./Module.js\";\r\nimport { Symbol, SymbolTable } from \"./SymbolTable.js\";\r\nimport { AlterTableNode, ASTNode, BinaryOpNode, CreateTableNode, DeleteNode, DotNode, DropTableNode, IdentifierNode, InsertNode, MethodcallNode, SelectNode, TableOrSubqueryNode, TermNode, UpdateNode } from \"./Ast.js\";\r\nimport { Error, ErrorLevel, QuickFix } from \"../lexer/Lexer.js\";\r\nimport { Column, Table } from \"./SQLTable.js\";\r\nimport { SQLBaseType, SQLType } from \"./SQLTypes.js\";\r\nimport { SQLMethodStore } from \"./SQLMethods.js\";\r\nimport { isDate, isDateTime, isTime } from \"../../tools/StringTools.js\";\r\n\r\n\r\nexport class SymbolResolver {\r\n\r\n    symbolTableStack: SymbolTable[] = [];\r\n    errorList: Error[];\r\n    module: Module;\r\n    databaseTool: DatabaseTool;\r\n    tables: Table[];\r\n\r\n    constructor(databaseTool: DatabaseTool) {\r\n        this.databaseTool = databaseTool;\r\n        this.tables = Table.fromTableStructureList(databaseTool.databaseStructure?.tables);\r\n    }\r\n\r\n    start(module: Module) {\r\n        this.module = module;\r\n        this.symbolTableStack = [];\r\n        this.errorList = [];\r\n\r\n        module.mainSymbolTable = new SymbolTable(null, { column: 0, line: 0, length: 0 }, { column: 0, line: 100000, length: 0 })\r\n\r\n        this.symbolTableStack.push(module.mainSymbolTable);\r\n\r\n        for (let statement of this.module.sqlStatements) {\r\n\r\n            let errorsBeforeStatement = this.errorList.length;\r\n\r\n            let astNode = statement.ast;\r\n            if (astNode == null) continue;\r\n\r\n            switch (astNode.type) {\r\n                case TokenType.keywordSelect:\r\n                    this.resolveSelect(astNode);\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n                case TokenType.keywordInsert:\r\n                    this.resolveInsert(astNode);\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n                case TokenType.keywordCreate:\r\n                    this.resolveCreateTable(astNode);\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n                case TokenType.keywordUpdate:\r\n                    this.resolveUpdate(astNode);\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n                case TokenType.keywordDelete:\r\n                    this.resolveDelete(astNode);\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n                case TokenType.keywordDrop:\r\n                    this.resolveDropTable(astNode);\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n                case TokenType.keywordAlter:\r\n                    this.resolveAlterTable(astNode)\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n\r\n                default:\r\n                    break;\r\n            }\r\n\r\n            statement.hasErrors = statement.hasErrors || this.errorList.length > errorsBeforeStatement;\r\n\r\n        }\r\n\r\n        module.errors[2] = this.errorList;\r\n\r\n    }\r\n\r\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position: TextPosition, quickFix?: QuickFix) {\r\n        // if (position == null) position = Object.assign({}, this.position);\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n\r\n    getCurrentSymbolTable(): SymbolTable {\r\n        return this.symbolTableStack[this.symbolTableStack.length - 1];\r\n    }\r\n\r\n    pushNewSymbolTable(positionFrom: TextPosition, positionTo: TextPosition): SymbolTable {\r\n        if (positionTo == null) {\r\n            positionTo = {\r\n                line: 100000,\r\n                column: 1,\r\n                length: 1\r\n            }\r\n        };\r\n        let st: SymbolTable = new SymbolTable(this.getCurrentSymbolTable(), positionFrom, positionTo);\r\n        this.symbolTableStack.push(st);\r\n        return st;\r\n    }\r\n\r\n    resolveSelect(selectNode: SelectNode): Table {\r\n        let resultTable: Table = new Table(null);\r\n\r\n        selectNode.symbolTable = this.pushNewSymbolTable(selectNode.position, selectNode.endPosition);\r\n\r\n        // From\r\n        let joinedTables: Table[] = [];\r\n        this.resolveTableOrSubQuery(selectNode.fromNode, joinedTables);\r\n        if (selectNode.fromStartPosition != null) {\r\n            let fromSymbolTable = new SymbolTable(this.getCurrentSymbolTable(), selectNode.fromStartPosition, selectNode.fromEndPosition);\r\n            fromSymbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n        }\r\n\r\n        // Column list\r\n        for (let columnNode of selectNode.columnList) {\r\n            if (columnNode.type == TokenType.allColumns) {\r\n                for (let table of joinedTables) {\r\n                    for (let column of table.columns) {\r\n                        let c: Column = new Column(column.identifier, column.type, resultTable, false, true, column.defaultValue, column.isAutoIncrement);\r\n                        resultTable.columns.push(c);\r\n                    }\r\n                }\r\n            } else {\r\n                this.resolveTerm(columnNode.term);\r\n                let c1: Column = new Column(columnNode.alias, columnNode.term.sqlType, resultTable, false, true, null, false);\r\n                resultTable.columns.push(c1);\r\n                if (c1.identifier != null) {\r\n                    selectNode.symbolTable.storeSymbol({\r\n                        identifier: c1.identifier,\r\n                        posOfDefinition: columnNode.term.position,\r\n                        referencedOnPositions: [],\r\n                        column: c1\r\n                    })\r\n                }\r\n            }\r\n        }\r\n\r\n        // where...\r\n        if (selectNode.whereNode != null) {\r\n            let whereType = this.resolveTerm(selectNode.whereNode);\r\n            if (whereType != null && whereType.getBaseTypeName() != \"boolean\") {\r\n                this.pushError(\"Das Ergebnis des where-Teils einer select-Anweisung muss vom Typ boolean sein.\", \"error\", selectNode.whereNode.position);\r\n            }\r\n        }\r\n\r\n\r\n        // TODO: group by, order by\r\n\r\n        return resultTable;\r\n    }\r\n\r\n    resolveDropTable(node: DropTableNode) {\r\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\r\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n\r\n        if (node.tableIdentifier == null) return;\r\n\r\n        if (!node.ifExists) {\r\n            let table = node.symbolTable.findTable(node.tableIdentifier);\r\n            if (table == null) this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\r\n        }\r\n\r\n    }\r\n\r\n    resolveDelete(node: DeleteNode) {\r\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\r\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n\r\n        if (node.tableIdentifier == null) return;\r\n\r\n        let table = node.symbolTable.findTable(node.tableIdentifier);\r\n        if (table == null) this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\r\n\r\n\r\n        // if(node.whereNodeBegin != null){\r\n        //     let symbolTable = this.pushNewSymbolTable(node.whereNodeBegin, node.whereNodeEnd);\r\n        //     symbolTable.storeTableSymbols(table);\r\n        // }\r\n\r\n\r\n        if (node.whereNode != null) {\r\n            let whereSymbolTable = this.pushNewSymbolTable(node.whereNodeBegin, node.whereNodeEnd);\r\n            if (table != null) whereSymbolTable.storeTableSymbols(table);\r\n            this.resolveTerm(node.whereNode);\r\n            this.symbolTableStack.pop();\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    resolveAlterTable(node: AlterTableNode) {\r\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\r\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n\r\n        if (node.tableIdentifier == null) {\r\n            return;\r\n        }\r\n\r\n        let table = node.symbolTable.findTable(node.tableIdentifier);\r\n        if (table == null) {\r\n            this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\r\n        }\r\n\r\n        let oldColumn: Column = null;\r\n        if (node.oldColumnName != null) {\r\n            oldColumn = table.columns.find(c => c.identifier.toLocaleLowerCase() == node.oldColumnName.toLocaleLowerCase());\r\n            if (oldColumn == null) {\r\n                this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" hat keine Spalte mit dem Bezeichner \" + node.oldColumnName, \"error\", node.oldColumnPosition);\r\n            }\r\n        }\r\n\r\n        switch (node.kind) {\r\n            case \"dropColumn\":\r\n                // nothing to do as node.oldColumnName is checked above\r\n                break;\r\n            case \"addColumn\":\r\n                let columnNode = node.columnDef;\r\n                if (columnNode == null) break;\r\n                if (columnNode.foreignKeyInfo != null && columnNode.baseType != null) {\r\n                    let fki = columnNode.foreignKeyInfo;\r\n                    let tables = this.getCurrentSymbolTable().findTables(fki.referencesTable);\r\n                    if (tables.length == 1) {\r\n                        let table = tables[0].table;\r\n                        let column = table.columns.find(c => c.identifier == fki.referencesColumn);\r\n                        if (column != null && column.type != null) {\r\n                            if (!column.isPrimaryKey) {\r\n                                this.pushError(\"Die referenzierte Spalte \" + fki.referencesTable + \".\" + fki.referencesColumn + \" ist kein Primärschlüssel.\", \"warning\", columnNode.referencesPosition);\r\n                            }\r\n                            if (!column.type.canCastTo(columnNode.baseType)) {\r\n                                this.pushError(\"Der Datentyp \" + columnNode.baseType.toString() + \" der Spalte \" + columnNode.identifier +\r\n                                    \" kann nich in den Datentyp \" + column.type.toString() + \" der referenzierten Spalte \" + table.identifier + \".\" +\r\n                                    column.identifier + \" umgewandelt werden.\", \"error\", columnNode.referencesPosition);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            case \"renameColumn\":\r\n                // nothing to do as node.oldColumnName is checked above\r\n                break;\r\n            case \"renameTable\":\r\n                // nothing to do \r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    resolveUpdate(node: UpdateNode) {\r\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\r\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n\r\n        if (node.tableIdentifier == null) {\r\n            return;\r\n        }\r\n\r\n        let table = node.symbolTable.findTable(node.tableIdentifier);\r\n        if (table == null) this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\r\n\r\n        for (let i = 0; i < node.columnIdentifiers.length; i++) {\r\n            let ci = node.columnIdentifiers[i];\r\n            let ciPos = node.columnIdentifierPositions[i];\r\n            let value = node.values[i];\r\n\r\n            if (ci == null) continue;\r\n            let column = table.columns.find(c => c.identifier == ci);\r\n\r\n            if (column == null) {\r\n                this.pushError(ci + \" ist kein Bezeichner einer Spalte der Tabelle \" + node.tableIdentifier + \".\", \"error\", ciPos);\r\n            }\r\n\r\n            if (value == null) continue;\r\n            let symbolTable = this.pushNewSymbolTable(node.valuePosBegin[i], node.valuePosEnd[i]);\r\n            symbolTable.storeTableSymbols(table);\r\n            this.resolveTerm(value);\r\n            this.symbolTableStack.pop();\r\n\r\n        }\r\n\r\n        if (node.whereNodeBegin != null) {\r\n            let symbolTable = this.pushNewSymbolTable(node.whereNodeBegin, node.whereNodeEnd);\r\n            symbolTable.storeTableSymbols(table);\r\n        }\r\n\r\n        if (node.whereNode != null) {\r\n            this.resolveTerm(node.whereNode);\r\n        }\r\n        this.symbolTableStack.pop();\r\n\r\n    }\r\n\r\n\r\n\r\n    resolveCreateTable(createTableNode: CreateTableNode) {\r\n\r\n        createTableNode.symbolTable = this.pushNewSymbolTable(createTableNode.position, createTableNode.endPosition);\r\n        createTableNode.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n\r\n        let thisTable: Table = {\r\n            identifier: createTableNode.identifier,\r\n            columns: null,\r\n            size: 0\r\n        }\r\n\r\n        thisTable.columns = createTableNode.columnList.map(c => {\r\n            return {\r\n                identifier: c.identifier,\r\n                isNullable: false,\r\n                isPrimaryKey: c.isPrimary,\r\n                isAutoIncrement: c.isAutoIncrement,\r\n                notNull: false,\r\n                references: null,\r\n                table: thisTable,\r\n                type: c.baseType,\r\n                defaultValue: c.defaultValue\r\n            }\r\n        });\r\n\r\n        createTableNode.symbolTable.storeTableSymbols(thisTable);\r\n\r\n        for (let columnNode of createTableNode.columnList) {\r\n            if (createTableNode.columnList.filter(c => c.identifier.toLocaleLowerCase() == columnNode.identifier.toLocaleLowerCase()).length > 1) {\r\n                this.pushError(\"Der Spaltenbezeichner \" + columnNode.identifier + \" darf in einer Tabelle nur ein einziges Mal verwendet werden\", \"error\", columnNode.position);\r\n            }\r\n\r\n            if (columnNode.foreignKeyInfo != null && columnNode.baseType != null) {\r\n                let fki = columnNode.foreignKeyInfo;\r\n                let tables = this.getCurrentSymbolTable().findTables(fki.referencesTable);\r\n                if (tables.length == 1) {\r\n                    let table = tables[0].table;\r\n                    let column = table.columns.find(c => c.identifier == fki.referencesColumn);\r\n                    if (column != null && column.type != null) {\r\n                        if (!column.isPrimaryKey) {\r\n                            this.pushError(\"Die referenzierte Spalte \" + fki.referencesTable + \".\" + fki.referencesColumn + \" ist kein Primärschlüssel.\", \"warning\", columnNode.referencesPosition);\r\n                        }\r\n                        if (!column.type.canCastTo(columnNode.baseType)) {\r\n                            this.pushError(\"Der Datentyp \" + columnNode.baseType.toString() + \" der Spalte \" + columnNode.identifier +\r\n                                \" kann nich in den Datentyp \" + column.type.toString() + \" der referenzierten Spalte \" + table.identifier + \".\" +\r\n                                column.identifier + \" umgewandelt werden.\", \"error\", columnNode.referencesPosition);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        for (let fki of createTableNode.foreignKeyInfoList) {\r\n\r\n            let columnNode = createTableNode.columnList.find(cn => cn.identifier == fki.column);\r\n            if (columnNode == null) continue;\r\n\r\n            let tables = this.getCurrentSymbolTable().findTables(fki.referencesTable);\r\n            if (tables.length == 1) {\r\n                let table = tables[0].table;\r\n                let column = table.columns.find(c => c.identifier == fki.referencesColumn);\r\n                if (column != null && column.type != null) {\r\n                    if (!column.isPrimaryKey) {\r\n                        this.pushError(\"Die referenzierte Spalte \" + fki.referencesTable + \".\" + fki.referencesColumn + \" ist kein Primärschlüssel.\", \"warning\", fki.referencesPosition);\r\n                    }\r\n                    if (!column.type.canCastTo(columnNode.baseType)) {\r\n                        this.pushError(\"Der Datentyp \" + columnNode.baseType.toString() + \" der Spalte \" + columnNode.identifier +\r\n                            \" kann nich in den Datentyp \" + column.type.toString() + \" der referenzierten Spalte \" + table.identifier + \".\" +\r\n                            column.identifier + \" umgewandelt werden.\", \"error\", fki.referencesPosition);\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    resolveTableOrSubQuery(tosNode: TableOrSubqueryNode, joinedTables: Table[]) {\r\n        if (tosNode == null) return;\r\n\r\n        switch (tosNode.type) {\r\n            case TokenType.table:\r\n                let tableList = this.tables.filter(t => t.identifier.toLowerCase() == tosNode.identifier.toLowerCase());\r\n                if (tableList.length == 0) {\r\n                    this.pushError(tosNode.identifier + \" ist nicht der Name einer Tabelle.\", \"error\", tosNode.position);\r\n                } else if (tableList.length > 1) {\r\n                    this.pushError(\"Der Bezeichner \" + tosNode.identifier + \" ist hier nicht eindeutig.\", \"error\", tosNode.position);\r\n                } else {\r\n                    let table: Table = tableList[0];\r\n                    joinedTables.push(table);\r\n                    this.storeTableIntoSymbolTable(table, tosNode.position, tosNode.alias);\r\n                }\r\n\r\n                break;\r\n\r\n            case TokenType.keywordJoin:\r\n                this.resolveTableOrSubQuery(tosNode.firstOperand, joinedTables);\r\n                this.resolveTableOrSubQuery(tosNode.secondOperand, joinedTables);\r\n                break;\r\n\r\n            case TokenType.subquery:\r\n                tosNode.table = this.resolveSelect(tosNode.query);\r\n                joinedTables.push(tosNode.table);\r\n                if (tosNode.alias != null) {\r\n                    tosNode.table.identifier = tosNode.alias;\r\n                    this.storeTableIntoSymbolTable(tosNode.table, tosNode.position);\r\n                }\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    storeTableIntoSymbolTable(table: Table, position: TextPosition, alias?: string) {\r\n        let symbolTable = this.getCurrentSymbolTable();\r\n        symbolTable.storeSymbol({\r\n            identifier: alias == null ? table.identifier.toLowerCase() : alias.toLowerCase(),\r\n            posOfDefinition: position,\r\n            table: table,\r\n            referencedOnPositions: []\r\n        });\r\n        for (let column of table.columns) {\r\n            symbolTable.storeSymbol({\r\n                identifier: column.identifier.toLowerCase(),\r\n                posOfDefinition: null,\r\n                column: column,\r\n                tableAlias: alias,\r\n                referencedOnPositions: []\r\n            });\r\n        }\r\n    }\r\n\r\n    resolveTerm(node: TermNode): SQLType {\r\n        if (node == null) return null;\r\n\r\n        switch (node.type) {\r\n            case TokenType.binaryOp:\r\n                if ([TokenType.keywordIn, TokenType.keywordNotIn].indexOf(node.operator) >= 0) {\r\n                    return this.resolveNotIn(node);\r\n                }\r\n\r\n                let typeLeft = this.resolveTerm(node.firstOperand);\r\n                let typeRight = this.resolveTerm(node.secondOperand);\r\n                if (typeLeft != null && typeRight != null) {\r\n                    let resultType = typeLeft.getBinaryResultType(node.operator, typeRight);\r\n                    if (resultType == null) {\r\n                        this.pushError(\"Der Operator \" + TokenTypeReadable[node.operator] + \" ist für die Datentypen \" + typeLeft.toString() + \" und \" + typeRight.toString() + \" nicht definiert.\", \"error\", node.position);\r\n                    }\r\n                    node.sqlType = resultType;\r\n                    return resultType;\r\n                } else {\r\n                    return null;\r\n                }\r\n                break;\r\n            case TokenType.unaryOp:\r\n                let operandType = this.resolveTerm(node.operand);\r\n                if (operandType != null) {\r\n                    let resultType1 = operandType.getUnaryResultType(node.operator);\r\n                    if (resultType1 == null) {\r\n                        this.pushError(\"Der Operator \" + TokenTypeReadable[node.operator] + \" ist für einen Operanden des Datentyps \" + operandType.toString() + \" nicht definiert.\", \"error\", node.position);\r\n                    }\r\n                    node.sqlType = resultType1;\r\n                    return resultType1;\r\n                } else {\r\n                    return null;\r\n                }\r\n                break;\r\n            case TokenType.callMethod:\r\n                return this.resolveMethodCall(node);\r\n                break;\r\n            //    ConstantNode | IdentifierNode | DotNode | SelectNode | BracketsNode | StarAttributeNode | SelectNode | ListNode;\r\n\r\n            case TokenType.constantNode:\r\n                node.sqlType = SQLBaseType.fromConstantType(node.constantType);\r\n                return node.sqlType;\r\n                break;\r\n            case TokenType.identifier:\r\n                return this.resolveIdentifier(node);\r\n                break;\r\n            case TokenType.dot:\r\n                return this.resolveDot(node);\r\n                break;\r\n            case TokenType.keywordSelect:\r\n                let selectTable = this.resolveSelect(node);\r\n                if (selectTable.columns.length != 1) {\r\n                    this.pushError(\"Die Ergebnistabelle einer Unterabfrage an dieser Stelle muss genau eine Spalte besitzen.\", \"error\", node.position);\r\n                    return null;\r\n                }\r\n                return selectTable.columns[0].type;\r\n                break;\r\n            case TokenType.rightBracket:   // BracketsNode\r\n                node.sqlType = this.resolveTerm(node.termInsideBrackets);\r\n                return node.sqlType;\r\n                break;\r\n            case TokenType.allColumns:\r\n                this.pushError(\"Das Zeichen * kann hier nicht verwendet werden.\", \"error\", node.position);\r\n                break;\r\n            case TokenType.list:\r\n                this.pushError(\"Eine Liste wird hier nicht erwartet.\", \"error\", node.position);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    resolveDot(node: DotNode): SQLType {\r\n        let tableSymbols = this.getCurrentSymbolTable().findTables(node.identifierLeft.identifier);\r\n        if (tableSymbols.length == 0) {\r\n            this.pushError(\"Die Tabelle \" + node.identifierLeft.identifier + \" kann nicht gefunden werden.\", \"error\", node.identifierLeft.position);\r\n            return null;\r\n        }\r\n        if (tableSymbols.length > 1) {\r\n            this.pushError(\"Der Tabellenbezeichner \" + node.identifierLeft.identifier + \" ist nicht eindeutig.\", \"error\", node.identifierLeft.position);\r\n            return null;\r\n        }\r\n        let table = tableSymbols[0].table;\r\n\r\n        let columns = table.columns.filter(c => c.identifier.toLowerCase() == node.identifierRight.identifier.toLowerCase());\r\n\r\n        if (columns.length == 0) {\r\n            this.pushError(\"Die Tabelle \" + node.identifierLeft.identifier + \" hat keine Spalte mit dem Bezeichner \" + node.identifierRight.identifier + \".\", \"error\", node.identifierRight.position);\r\n            return;\r\n        }\r\n\r\n        if (columns.length > 1) {\r\n            this.pushError(\"Die Tabelle \" + node.identifierLeft.identifier + \" hat mehrere Spalten mit dem Bezeichner \" + node.identifierRight.identifier + \".\", \"error\", node.identifierRight.position);\r\n            return;\r\n        }\r\n\r\n        let column = columns[0];\r\n        node.sqlType = column.type;\r\n        return column.type;\r\n\r\n    }\r\n\r\n    resolveIdentifier(node: IdentifierNode): SQLType {\r\n        let symbols = this.getCurrentSymbolTable().findColumn(node.identifier);\r\n        if (symbols.length == 0) {\r\n            this.pushError(\"Der Bezeichner \" + node.identifier + \" ist an dieser Stelle nicht bekannt.\", \"error\", node.position);\r\n            return null;\r\n        }\r\n        if (symbols.length > 1) {\r\n            this.pushError(\"Der Bezeichner \" + node.identifier + \" ist nicht eindeutig.\", \"error\", node.position);\r\n            return null;\r\n        }\r\n\r\n        let symbol = symbols[0];\r\n        node.sqlType = symbol.column.type;\r\n        return symbol.column.type;\r\n    }\r\n\r\n    resolveMethodCall(node: MethodcallNode): SQLType {\r\n\r\n        let methodStore = SQLMethodStore.getInstance();\r\n        let methods = methodStore.getMethods(node.identifier);\r\n\r\n        methods = methods.filter(m => m.parameters.length == node.operands.length);\r\n        if (node.operands.length == 1 && node.operands[0].type == TokenType.allColumns) {\r\n            methods = methods.filter(m => m.acceptsStarParameter);\r\n            node.sqlType = methods[0].returnType;\r\n            return node.sqlType;\r\n        }\r\n\r\n        if (methods.length == 0) {\r\n            this.pushError(\"Es gibt keine passende Methode mit dem Bezeichner '\" + node.identifier + \"'.\", \"error\", node.position);\r\n            return null;\r\n        }\r\n\r\n        for (let operand of node.operands) {\r\n            if (this.resolveTerm(operand) == null) {\r\n                node.sqlType = methods[0].returnType;\r\n                return node.sqlType;\r\n            }\r\n        }\r\n\r\n        for (let method of methods) {\r\n            let found = true;\r\n            for (let i = 0; i < method.parameters.length; i++) {\r\n                let methodParameter = method.parameters[i];\r\n                let operand = node.operands[i];\r\n                if (!operand.sqlType.canCastTo(methodParameter.type)) {\r\n                    found = false;\r\n                    break;\r\n                }\r\n            }\r\n            if (found) {\r\n                node.sqlType = method.returnType;\r\n                return node.sqlType;\r\n            }\r\n        }\r\n\r\n        this.pushError(\"Es gibt keine passende Methode mit dem Bezeichner '\" + node.identifier + \"'.\", \"error\", node.position);\r\n        return null;\r\n\r\n    }\r\n\r\n    resolveNotIn(node: BinaryOpNode): SQLType {\r\n\r\n        if (node.firstOperand == null || node.secondOperand == null) return null;\r\n\r\n        let operatorString = TokenTypeReadable[node.operator];\r\n\r\n        this.resolveTerm(node.firstOperand);\r\n        let leftType = node.firstOperand.sqlType;\r\n        if (leftType != null) {\r\n            if (node.secondOperand.type == TokenType.keywordSelect) {\r\n                let selectNode = node.secondOperand;\r\n                if (selectNode.columnList.length != 1) {\r\n                    this.pushError(\"Wenn rechts vom Operator '\" + operatorString + \"' eine Unterabfrage steht, muss die Ergebnistabelle dieser Unterabfrage genau eine Spalte haben.\", \"error\", selectNode.position);\r\n                }\r\n                this.resolveSelect(selectNode);\r\n                let pType = selectNode.columnList[0].term.sqlType;\r\n                if (!pType.canCastTo(leftType)) {\r\n                    this.pushError(\"Der Datentyp der Ergebnisspalte der Unterabfrage ist \" + pType.toString() + \". Dieser kann nicht in den Datentyp \" + leftType.toString() + \" umgewandelt werden.\", \"error\", selectNode.position);\r\n                }\r\n            } else if (node.secondOperand.type == TokenType.list) {\r\n                let listNode = node.secondOperand;\r\n                for (let element of listNode.elements) {\r\n                    let elementType = SQLBaseType.fromConstantType(element.constantType);\r\n                    element.sqlType = elementType;\r\n                    if (!elementType.canCastTo(leftType)) {\r\n                        this.pushError(\"Der Datentyp des Listenelements \" + element.constant + \" ist \" + elementType.toString() + \". Er kann nicht in den Datentype \" + leftType.toString() + \" des Operanden auf der linken Seite des Operators '\" + operatorString + \"' umgewandelt werden.\", \"error\", element.position);\r\n                    }\r\n                }\r\n            } else {\r\n                this.pushError(\"Der rechte Operand der Operatoren 'in' und 'not in' muss eine Unterabfrage oder eine Liste sein.\", \"error\", node.secondOperand.position);\r\n            }\r\n\r\n        }\r\n\r\n        return SQLBaseType.getBaseType(\"boolean\");\r\n    }\r\n\r\n    resolveInsert(astNode: InsertNode) {\r\n\r\n        let table: Table = null;\r\n        let symbolTable = this.pushNewSymbolTable(astNode.position, astNode.endPosition);\r\n        if (astNode.table != null) {\r\n            astNode.table.table = this.tables.find(t => t.identifier.toLowerCase() == astNode.table.identifier.toLocaleLowerCase());\r\n            if (astNode.table.table == null) {\r\n                this.pushError(\"Die Tabelle \" + astNode.table.identifier + \" gibt es nicht.\", \"error\", astNode.table.position);\r\n            } else {\r\n                table = astNode.table.table;\r\n                symbolTable.storeTableSymbols(table);\r\n            }\r\n        }\r\n\r\n        let tableCompletionTo = astNode.endPosition;\r\n        if (astNode.valuesPosition != null) tableCompletionTo = astNode.valuesPosition;\r\n        if (astNode.columnsPosition != null) tableCompletionTo = astNode.columnsPosition;\r\n\r\n        this.module.addCompletionHint(astNode.position, tableCompletionTo, false, true, [\"into\", \"values\"]);\r\n\r\n        if (table != null) {\r\n            this.module.addCompletionHint(tableCompletionTo, astNode.valuesPosition == null ? astNode.endPosition : astNode.valuesPosition, true, false, [\"values\"]);\r\n        }\r\n\r\n        let tableSymbolTable = this.pushNewSymbolTable(astNode.position, tableCompletionTo);\r\n        tableSymbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n\r\n        let columns: Column[] = [];\r\n        // Parse column list\r\n        if (astNode.columnList.length == 0) {\r\n            if (table != null) {\r\n                columns = table.columns;\r\n            }\r\n        } else {\r\n            if (table != null) {\r\n                for (let columnNode of astNode.columnList) {\r\n                    let column = table.columns.find(c => c.identifier.toLowerCase() == columnNode.identifier.toLowerCase());\r\n                    if (column == null) {\r\n                        this.pushError(\"Die Tabelle \" + table.identifier + \" besitzt keine Spalte mit dem Bezeichner \" + columnNode.identifier + \".\", \"error\", columnNode.position);\r\n                    } else {\r\n                        columns.push(column);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (columns.length > 0) {\r\n            if (astNode.select != null) {\r\n                let table = this.resolveSelect(astNode.select);\r\n                if(table?.columns != null){\r\n                    if(columns.length != table.columns.length){\r\n                        this.pushError(\"Die insert-Anweisung erwartet \" + columns.length + \" Werte je Datensatz, die select-Anweisung liefert aber \" + table.columns.length + \".\", \"error\", astNode.position);\r\n                    } else {\r\n                        for(let i = 0; i < columns.length; i++){\r\n                            let insertColumn = columns[i];\r\n                            let selectColumn = table.columns[i];\r\n                            if(insertColumn.type != null && selectColumn.type != null){\r\n                                if(!selectColumn.type.canCastTo(insertColumn.type)){\r\n                                    this.pushError(\"Der Datentyp \" + selectColumn.type.toString() + \" der \" \r\n                                    + (i+1) + \"-ten Spalte des select-Terms kann nicht in den Datentyp \" + \r\n                                    insertColumn.type.toString() + \" der entsprechenden Spalte der insert-Anweisung umgewandelt werden.\", \"error\", astNode.position );\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n            } else {\r\n                // Parse value lists\r\n                for (let valueList of astNode.values) {\r\n                    if (valueList.length != columns.length && valueList.length > 0) {\r\n                        this.pushError(\"Erwartet werden \" + columns.length + \" Elemente, hier stehen aber \" + valueList.length + \" Elemente in der Liste.\", \"error\", valueList[0].position);\r\n                    } else {\r\n                        for (let i = 0; i < valueList.length; i++) {\r\n                            let value = valueList[i];\r\n                            let column = columns[i];\r\n                            value.sqlType = SQLBaseType.fromConstantType(value.constantType);\r\n                            // constantType == 40 means: null\r\n                            // TODO: check if column is nullable!\r\n                            let destType = column.type.toString().toLocaleLowerCase();\r\n                            if (value.constantType == TokenType.keywordNull) {\r\n                                if (!column.isNullable || column.notNull) {\r\n                                    this.pushError(\"Die Spalte \" + column.identifier + \" ist nicht nullable, daher kann null hier nicht eingefügt werden.\", \"error\", value.position);\r\n                                }\r\n                            } else if (!value.sqlType.canCastTo(column.type)) {\r\n                                let error: string = \"Der Wert \" + value.constant + \" vom Datentyp \" + value.sqlType.toString() + \" kann nicht in den Datentyp \" + column.type.toString() + \" der Spalte \" + column.identifier + \" umgewandelt werden.\";\r\n\r\n                                if (destType == \"date\") error += \"<br><b>Tipp: </b>Datumswerte haben die Form 'yyyy-mm-dd', also z.B. '2022-06-15'.\";\r\n                                if (destType == \"datetime\" || destType == \"timestamp\") error += \"<br><b>Tipp: </b>Timestamps haben die Form 'yyyy-mm-dd hh:min:ss', also z.B. '2022-06-15 07:56:22'.\";\r\n\r\n                                this.pushError(error, \"error\", value.position);\r\n                            } else if (destType == \"date\") {\r\n                                if (!isDate(value.constant)) {\r\n                                    let error: string = `'${value.constant}' ist kein date-Wert.<br><b>Tipp: </b>Datumswerte haben die Form 'yyyy-mm-dd', also z.B. '2022-06-15'.`;\r\n                                    this.pushError(error, \"error\", value.position);\r\n                                }\r\n                            } else if (destType == \"datetime\" || destType == \"timestamp\") {\r\n                                if (!isDateTime(value.constant)) {\r\n                                    let error: string = `'${value.constant}' ist kein ${destType}-Wert.<br><b>Tipp: </b>Timestamps haben die Form 'yyyy-mm-dd hh:min:ss', also z.B. '2022-06-15 07:56:22'.`;\r\n                                    this.pushError(error, \"error\", value.position);\r\n                                }\r\n                            } else if (destType == \"time\") {\r\n                                if (!isTime(value.constant)) {\r\n                                    let error: string = `'${value.constant}' ist kein ${destType}-Wert.<br><b>Tipp: </b>Time-Werte haben die Form 'hh:min:ss', also z.B. '07:56:22'.`;\r\n                                    this.pushError(error, \"error\", value.position);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        this.symbolTableStack.pop();\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { SymbolResolver } from \"./parser/SymbolResolver.js\";\r\n\r\nexport enum CompilerStatus {\r\n    compiling, error, compiledButNothingToRun, readyToRun\r\n}\r\n\r\nexport class Compiler {\r\n\r\n    compilerStatus: CompilerStatus = CompilerStatus.compiledButNothingToRun;\r\n\r\n    atLeastOneModuleIsStartable: boolean;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    compile(moduleStore: ModuleStore): Error[] {\r\n\r\n        this.compilerStatus = CompilerStatus.compiling;\r\n\r\n        let t0 = performance.now();\r\n\r\n        let lexer = new Lexer();\r\n\r\n        // 1st pass: lexing\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.file.dirty = false;\r\n            m.clear();\r\n\r\n            let lexed = lexer.lex(m.getProgramTextFromMonacoModel());\r\n            m.errors[0] = lexed.errors;\r\n            m.tokenList = lexed.tokens;\r\n            m.bracketError = lexed.bracketError;\r\n            if(m.file.name == this.main.getCurrentlyEditedModule().file.name){\r\n                if(this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(lexed.bracketError);\r\n            }\r\n        }\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        this.main.getSemicolonAngel().startRegistering();\r\n\r\n        let parser: Parser = new Parser();\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            parser.parse(m);\r\n        }\r\n        \r\n        // 3rd pass: check symbols and types\r\n        let databaseTool = this.main.getDatabaseTool();\r\n        let symbolResolver: SymbolResolver = new SymbolResolver(databaseTool);\r\n\r\n        for(let m of moduleStore.getModules(false)){\r\n            symbolResolver.start(m);\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        let message = \"Compiled in \" + dt + \" ms.\";\r\n\r\n        this.main.getCurrentWorkspace().compilerMessage = message;\r\n\r\n        this.main.getSemicolonAngel().healSemicolons();\r\n\r\n        this.compilerStatus = CompilerStatus.readyToRun;\r\n\r\n        return null;\r\n    }\r\n\r\n}","import { FileData } from \"../../communication/Data.js\";\r\nimport { AccordionElement } from \"../../main/gui/Accordion.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenType, TextPositionWithoutLength } from \"../lexer/Token.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { ASTNode } from \"./AST.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\nimport { stringToDate } from \"../../tools/StringTools.js\";\r\nimport { SQLStatement } from \"./Parser.js\";\r\n\r\n\r\nexport type CompletionHint = {\r\n    fromLine: number,\r\n    fromColumn: number,\r\n    toLine: number, \r\n    toColumn: number,\r\n    hintColumns: boolean,\r\n    hintColumnsOfTable?: string,\r\n    hintTables: boolean,\r\n    hintKeywords: string[],\r\n    dontHint?: string[],\r\n    praefix?: string,\r\n    suffix?: string\r\n}\r\n\r\nexport type File = {\r\n    name: string,\r\n    id?: number,\r\n    text: string,\r\n\r\n    text_before_revision: string,\r\n    submitted_date: string,\r\n    student_edited_after_revision: boolean,\r\n\r\n    dirty: boolean,\r\n    saved: boolean,\r\n    version: number,\r\n    panelElement?: AccordionElement\r\n\r\n}\r\n\r\nexport type IdentifierPosition = {\r\n    position: TextPosition,\r\n    element: any;\r\n}\r\n\r\nexport type MethodCallPosition = {\r\n    identifierPosition: TextPosition,\r\n    possibleMethods: any[] | string, // string for print, println, ...\r\n    commaPositions: TextPosition[],\r\n    rightBracketPosition: TextPosition\r\n}\r\n\r\nexport class Module {\r\n    file: File;\r\n    static maxUriNumber: number = 0;\r\n    uri: monaco.Uri;\r\n    model: monaco.editor.ITextModel;\r\n    oldErrorDecorations: string[] = [];\r\n    lastSavedVersionId: number;\r\n    editorState: monaco.editor.ICodeEditorViewState;\r\n\r\n    errors: Error[][] = [[], [], [], []]; // 1st pass, 2nd pass, 3rd pass\r\n\r\n    // 1st pass: Lexer\r\n    tokenList: Token[];\r\n\r\n    // 2nd pass: ASTParser\r\n    sqlStatements: SQLStatement[];\r\n    mainSymbolTable: SymbolTable;\r\n\r\n\r\n    identifierPositions: { [line: number]: IdentifierPosition[] } = {};\r\n    methodCallPositions: { [line: number]: MethodCallPosition[] } = {};\r\n\r\n    static uriMap: { [name: string]: number } = {};\r\n    bracketError: string;\r\n\r\n    completionHints: Map<number, CompletionHint[]> = new Map(); // Map from line numbers to hints\r\n\r\n    constructor(file: File, public main: MainBase) {\r\n        if (file == null || this.main == null) return; // used by AdhocCompiler and ApiDoc\r\n\r\n        this.file = file;\r\n        // this.uri = monaco.Uri.from({ path: '/file' + (Module.maxUriNumber++) + '.learnJava', scheme: 'file' });\r\n        let path = file.name;\r\n\r\n        let uriCounter = Module.uriMap[path];\r\n        if (uriCounter == null) {\r\n            uriCounter = 0;\r\n        } else {\r\n            uriCounter++;\r\n        }\r\n        Module.uriMap[path] = uriCounter;\r\n\r\n        if (uriCounter > 0) path += \" (\" + uriCounter + \")\";\r\n        this.uri = monaco.Uri.from({ path: path, scheme: 'inmemory' });\r\n        this.model = monaco.editor.createModel(file.text, \"vscSQL\", this.uri);\r\n        this.model.updateOptions({ tabSize: 3 });\r\n\r\n        this.lastSavedVersionId = this.model.getAlternativeVersionId();\r\n\r\n        let that = this;\r\n\r\n        this.model.onDidChangeContent(() => {\r\n            let versionId = that.model.getAlternativeVersionId();\r\n\r\n            if (versionId != that.lastSavedVersionId) {\r\n                that.file.dirty = true;\r\n                that.file.saved = false;\r\n                that.lastSavedVersionId = versionId;\r\n            }\r\n\r\n            if(!that.main.isEmbedded()){\r\n                let main1: Main = <Main>main;\r\n                if (main1.workspacesOwnerId != main1.user.id) {\r\n                    if (that.file.text_before_revision == null || that.file.student_edited_after_revision) {\r\n                        that.file.student_edited_after_revision = false;\r\n                        that.file.text_before_revision = that.file.text;\r\n                        that.file.saved = false;\r\n                        main1.networkManager.sendUpdates(null, false);\r\n                        main1.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n                        main1.projectExplorer.renderHomeworkButton(that.file);\r\n                    }\r\n                } else {\r\n                    that.file.student_edited_after_revision = true;\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    addCompletionHint(fromPosition: TextPosition, toPosition: TextPosition, hintColumns: boolean|string, hintTables: boolean, \r\n        hintKeywords: string[], dontHint?: string[], praefix: string = \"\", suffix: string = \"\"){\r\n        let ch: CompletionHint = {\r\n            fromColumn: fromPosition.column,\r\n            fromLine: fromPosition.line,\r\n            toColumn: toPosition.column,\r\n            toLine: toPosition.line,\r\n            hintColumns: (typeof hintColumns == \"boolean\")? hintColumns : true, \r\n            hintColumnsOfTable: (typeof hintColumns == \"string\")? hintColumns : null,\r\n            hintTables: hintTables,\r\n            hintKeywords: hintKeywords == null ? null : hintKeywords.map(s => s.toUpperCase()),\r\n            dontHint: dontHint,\r\n            praefix: praefix,\r\n            suffix: suffix\r\n        }\r\n\r\n        for(let i = ch.fromLine; i <= ch.toLine; i++){\r\n            let chList = this.completionHints.get(i);\r\n            if(chList == null){\r\n                chList = [];\r\n                this.completionHints.set(i, chList);\r\n            }\r\n            chList.push(ch);\r\n        }\r\n    }\r\n\r\n    getSQLSTatementsAtSelection(sel: monaco.Selection): SQLStatement[] {\r\n        let selStart = {line: sel.startLineNumber, column: sel.startColumn};\r\n        let selEnd = {line: sel.endLineNumber, column: sel.endColumn};\r\n\r\n        if(this.sqlStatements == null){\r\n            return [];\r\n        }\r\n\r\n        return this.sqlStatements.filter(stmt => {\r\n            return !(this.compare(stmt.to, selStart) < 0 || this.compare(stmt.from, selEnd) > 0);\r\n        })\r\n\r\n    }\r\n\r\n    /**\r\n     * returns 1 if a > b, 0 if a == b and -1 if a < b\r\n     * @param a \r\n     * @param b \r\n     */\r\n    compare(a: {line: number, column: number}, b: {line: number, column: number}): number{\r\n        if(a.line > b.line) return 1;\r\n        if(a.line < b.line) return -1;\r\n        if(a.column > b.column) return 1;\r\n        if(a.column < b.column) return -1;\r\n        return 0;\r\n    }\r\n\r\n\r\n\r\n    getSQLStatementAtPosition(p: { lineNumber: number, column: number }): SQLStatement {\r\n\r\n        return this.sqlStatements.find(statement => {\r\n            if(statement.from.line > p.lineNumber ) return false;\r\n            if(statement.from.line == p.lineNumber && statement.from.column > p.column) return false;\r\n            if(statement.to.line < p.lineNumber) return false;\r\n            if(statement.to.line == p.lineNumber && statement.to.column < p.column) return false;\r\n            return true;\r\n        });        \r\n\r\n    }\r\n\r\n\r\n    getCompletionHint(line: number, column: number){\r\n        let chList = this.completionHints.get(line);\r\n        \r\n        if(chList == null || chList.length == 0){\r\n            return null;\r\n        }\r\n\r\n        let pos = line * 1000 + column;\r\n        chList = chList.filter(ch => pos >= ch.fromLine * 1000 + ch.fromColumn && pos <= ch.toLine * 1000 + ch.toColumn);\r\n        if(chList.length == 0){\r\n            return;\r\n        }\r\n\r\n        // take CompletionHint with smallest range:\r\n        let bestCh: CompletionHint = chList[0];\r\n        let bestRangeLength  = (bestCh.toLine - bestCh.fromLine)*1000 + (bestCh.toColumn - bestCh.fromColumn);\r\n\r\n        for(let i = 1; i < chList.length; i++){\r\n            let ch = chList[i];\r\n            let rangeLength = (ch.toLine - ch.fromLine) * 1000 + (ch.toColumn - ch.fromColumn);\r\n\r\n            if(rangeLength < bestRangeLength){\r\n                bestCh = ch;\r\n                bestRangeLength = rangeLength;\r\n            }\r\n\r\n        }\r\n\r\n        return bestCh;\r\n    }\r\n\r\n\r\n    static restoreFromData(f: FileData, main: MainBase): Module {\r\n\r\n        let f1: File = {\r\n            name: f.name,\r\n            text: f.text,\r\n            text_before_revision: f.text_before_revision,\r\n            submitted_date: f.submitted_date,\r\n            student_edited_after_revision: false,\r\n            dirty: true,\r\n            saved: true,\r\n            version: f.version,\r\n            id: f.id\r\n        }\r\n\r\n        let m: Module = new Module(f1, main);\r\n\r\n        return m;\r\n\r\n    }\r\n\r\n    getFileData(workspace: Workspace): FileData {\r\n        let file = this.file;\r\n        let fd: FileData = {\r\n            id: file.id,\r\n            name: file.name,\r\n            text: file.text,\r\n            text_before_revision: file.text_before_revision,\r\n            submitted_date: file.submitted_date,\r\n            student_edited_after_revision: file.student_edited_after_revision,\r\n            version: file.version,\r\n            workspace_id: workspace.id,\r\n            forceUpdate: false,\r\n            file_type: 11\r\n        }\r\n\r\n        return fd;\r\n    }\r\n\r\n\r\n    findSymbolTableAtPosition(line: number, column: number) {\r\n        if (this.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (line > this.mainSymbolTable.positionTo.line ||\r\n            line == this.mainSymbolTable.positionTo.line && column > this.mainSymbolTable.positionTo.column\r\n        ) {\r\n            line = this.mainSymbolTable.positionTo.line;\r\n            column = this.mainSymbolTable.positionTo.column - 1;\r\n        }\r\n\r\n        return this.mainSymbolTable.findTableAtPosition(line, column);\r\n    }\r\n\r\n    getErrorCount(): number {\r\n\r\n        let ec = 0;\r\n        for (let el of this.errors) {\r\n            el.forEach(error => ec += error.level == \"error\" ? 1 : 0);\r\n            // ec += el.length;\r\n        }\r\n\r\n        return ec;\r\n    }\r\n\r\n    getProgramTextFromMonacoModel(): string {\r\n        return this.model.getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n    }\r\n\r\n\r\n    addIdentifierPosition(position: TextPosition, element: any) {\r\n        let positionList: IdentifierPosition[] = this.identifierPositions[position.line];\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            this.identifierPositions[position.line] = positionList;\r\n        }\r\n        positionList.push({\r\n            position: position,\r\n            element: element\r\n        });\r\n    }\r\n\r\n    getElementAtPosition(line: number, column: number): any {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let bestFoundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column < p.position.column + p.position.length) {\r\n\r\n                if (p.position.length > 0) {\r\n                    if (bestFoundPosition == null) {\r\n                        bestFoundPosition = p;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bestFoundPosition == null ? null : <any>bestFoundPosition.element;\r\n    }\r\n\r\n    copy(): Module {\r\n        let m = new Module(this.file, this.main);\r\n        m.model = this.model;\r\n        m.mainSymbolTable = this.mainSymbolTable;\r\n        this.mainSymbolTable = null;\r\n\r\n        this.file.dirty = true;\r\n\r\n        return m;\r\n    }\r\n\r\n    clear() {\r\n\r\n        this.identifierPositions = {};\r\n\r\n        if (this.file != null && this.file.dirty) {\r\n            // Lexer\r\n            this.tokenList = null;\r\n            this.errors[0] = [];\r\n\r\n            // AST Parser\r\n            this.errors[1] = [];\r\n\r\n\r\n        }\r\n\r\n        // type resolver\r\n        this.errors[2] = [];\r\n\r\n        // Code generator\r\n        this.errors[3] = [];\r\n        this.mainSymbolTable = new SymbolTable(null, { line: 1, column: 1, length: 1 }, { line: 100000, column: 1, length: 0 });\r\n\r\n        this.methodCallPositions = {};\r\n\r\n    }\r\n\r\n    hasErrors() {\r\n\r\n        for (let el of this.errors) {\r\n            if (el.find(error => error.level == \"error\")) {\r\n                return true;\r\n            }\r\n            // if (el.length > 0) {\r\n            //     return true;\r\n            // }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getSortedAndFilteredErrors(): Error[] {\r\n\r\n        let list: Error[] = [];\r\n\r\n        for (let el of this.errors) {\r\n            list = list.concat(el);\r\n        }\r\n\r\n        list.sort((a, b) => {\r\n            if (a.position.line > b.position.line) {\r\n                return 1;\r\n            }\r\n            if (b.position.line > a.position.line) {\r\n                return -1;\r\n            }\r\n            if (a.position.column >= b.position.column) {\r\n                return 1;\r\n            }\r\n            return -1;\r\n        });\r\n\r\n        for (let i = 0; i < list.length - 1; i++) {\r\n            let e1 = list[i];\r\n            let e2 = list[i + 1];\r\n            if (e1.position.line == e2.position.line && e1.position.column + 10 > e2.position.column) {\r\n                if (this.errorLevelCompare(e1.level, e2.level) == 1) {\r\n                    list.splice(i + 1, 1);\r\n                } else {\r\n                    list.splice(i, 1);\r\n                }\r\n                i--;\r\n            }\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    errorLevelCompare(level1: ErrorLevel, level2: ErrorLevel): number {\r\n        if (level1 == \"error\") return 1;\r\n        if (level2 == \"error\") return 2;\r\n        if (level1 == \"warning\") return 1;\r\n        if (level2 == \"warning\") return 2;\r\n        return 1;\r\n    }\r\n}\r\n\r\n\r\nexport class ModuleStore {\r\n\r\n    private modules: Module[] = [];\r\n    private moduleMap: Map<string, Module> = new Map();\r\n\r\n    dirty: boolean = false;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    findModuleById(module_id: number): Module {\r\n        for (let module of this.modules) {\r\n            if (module.file.id == module_id) return module;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    copy(): ModuleStore {\r\n        let ms: ModuleStore = new ModuleStore(this.main);\r\n        for (let m of this.modules) {\r\n            ms.putModule(m.copy());\r\n        }\r\n        return ms;\r\n    }\r\n\r\n    findModuleByFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                return m;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        for (let m of this.modules) {\r\n            if (m.hasErrors()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getFirstModule(): Module {\r\n        if (this.modules.length > 0) {\r\n            for (let mo of this.modules) {\r\n                return mo;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    isDirty(): boolean {\r\n\r\n        if (this.dirty) {\r\n            this.dirty = false;\r\n            return true;\r\n        }\r\n\r\n        let dirty = false;\r\n        for (let m of this.modules) {\r\n            if (m.file.dirty) {\r\n                dirty = true;\r\n                break;\r\n            }\r\n        }\r\n        return dirty;\r\n    }\r\n\r\n\r\n    getModules(includeSystemModules: boolean, excludedModuleName?: String): Module[] {\r\n        let ret = [];\r\n        for (let m of this.modules) {\r\n            if (m.file.name != excludedModuleName) {\r\n                ret.push(m);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    putModule(module: Module) {\r\n        this.modules.push(module);\r\n        this.moduleMap[module.file.name] = module;\r\n    }\r\n\r\n    removeModuleWithFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                this.removeModule(m);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n\r\n        if (this.modules.indexOf(module) < 0) return;\r\n\r\n        this.modules.splice(this.modules.indexOf(module), 1);\r\n        this.moduleMap[module.file.name] = undefined;\r\n        this.dirty = true;\r\n    }\r\n\r\n    getModule(moduleName: string): Module {\r\n        return this.moduleMap[moduleName];\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type ButtonToggler = (state: boolean) => void;\r\n\r\nexport type Action = (name: string, buttonToggler?: ButtonToggler, pressed_key?: string) => void;\r\n\r\nexport type ActionEntry = {\r\n    text?: string,\r\n    keys: string[],\r\n    action: Action,\r\n    identifier: string, // name of Action is copied automatically to name of ActionEntry\r\n    active: boolean\r\n}\r\n\r\nexport class ActionManager {\r\n\r\n    actions: { [actionIdentifier: string]: ActionEntry } = { };\r\n\r\n    keyEntries: { [key: string]: ActionEntry[] } = {};\r\n\r\n    buttons: { [actionIdentifier: string]: JQuery<HTMLElement>[] } = {};\r\n\r\n    constructor(private $mainElement: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public init(){\r\n\r\n        let $element:JQuery<any> = this.$mainElement;\r\n        \r\n        if($element == null) $element = jQuery(document);\r\n\r\n        let that = this;\r\n        $element.on(\"keydown\", function (event: JQuery.KeyDownEvent) { \r\n            if(event != null){\r\n                that.executeKeyDownEvent(event); \r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    trigger(actionIdentifier: string) {\r\n        let ae = this.actions[actionIdentifier];\r\n        if(ae != null){\r\n            ae.action(actionIdentifier, null, \"\");\r\n        }\r\n    }\r\n\r\n\r\n    public registerAction(identifier: string, keys: string[], action: Action, text: string = \"\", button?: JQuery<HTMLElement>){\r\n        let ae: ActionEntry = {\r\n            action: action,\r\n            identifier: identifier,\r\n            keys: keys,\r\n            text: text,\r\n            active: true\r\n        };\r\n\r\n        this.actions[identifier] = ae;\r\n\r\n        for(let key of keys){\r\n            if(this.keyEntries[key.toLowerCase()] == null){\r\n                this.keyEntries[key.toLowerCase()] = [];\r\n            }\r\n            this.keyEntries[key.toLowerCase()].push(ae);\r\n        }\r\n\r\n        if(button != null){\r\n            if(this.buttons[identifier] == null){\r\n                this.buttons[identifier] = [];\r\n            }\r\n            this.buttons[identifier].push(button);\r\n\r\n            let t = text;\r\n            if(keys.length > 0){\r\n                t += \" [\" + keys.join(\", \") + \"]\";\r\n            }\r\n\r\n            button.attr(\"title\", t);\r\n\r\n            button.on('mousedown', () => {\r\n                if(ae.active){\r\n                    action(identifier, null, \"mousedown\");\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public isActive(actionIdentifier: string): boolean {\r\n\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae == null) return false;\r\n\r\n        return ae.active;\r\n    \r\n    }\r\n\r\n    public setActive(actionIdentifier: string, active: boolean){\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae != null){\r\n            ae.active = active;\r\n        }\r\n\r\n        let buttons = this.buttons[actionIdentifier];\r\n        if(buttons != null){\r\n            for(let button of buttons){\r\n                if(active){\r\n                    button.addClass('jo_active');\r\n                } else {\r\n                    button.removeClass('jo_active');\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public executeKeyDownEvent(event: JQuery.KeyDownEvent) {\r\n\r\n        if(document.activeElement.tagName.toLowerCase() == \"input\"){\r\n            return;\r\n        }\r\n\r\n        if (event.keyCode <= 18 && event.keyCode >= 16) {\r\n            return; // ctrl, alt, shift\r\n        }\r\n\r\n        let key: string = \"\";\r\n\r\n        if (event.ctrlKey) {\r\n            key += \"ctrl+\";\r\n        }\r\n\r\n        if (event.shiftKey) {\r\n            key += \"shift+\";\r\n        }\r\n\r\n        if (event.altKey) {\r\n            key += \"alt+\";\r\n        }\r\n\r\n        if(event.key != null){\r\n            key += event.key.toLowerCase();\r\n        }\r\n\r\n        let actionEntries = this.keyEntries[key];\r\n\r\n        if(actionEntries != null){\r\n            for(let actionEntry of actionEntries){\r\n                if (actionEntry.active) {\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    actionEntry.action(actionEntry.identifier, null, key);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { escapeHtml } from \"./StringTools.js\";\r\n\r\nexport function makeEditable(elementWithText: JQuery<HTMLElement>,\r\n    elementToReplace: JQuery<HTMLElement>,\r\n    renameDoneCallback: (newContent: string) => void, selectionRange: { start: number, end: number } = null) {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    if (elementToReplace == null) {\r\n        elementToReplace = elementWithText;\r\n    }\r\n\r\n    let $input = jQuery('<input type=\"text\" class=\"jo_inplaceeditor\" spellcheck=\"false\">');\r\n    $input.css({\r\n        width: elementToReplace.css('width'),\r\n        height: elementToReplace.css('height'),\r\n        color: elementToReplace.css('color'),\r\n        position: elementToReplace.css('position'),\r\n        \"background-color\": elementToReplace.css('background-color'),\r\n        \"font-size\": elementToReplace.css('font-size'),\r\n        \"font-weight\": elementToReplace.css('font-weight'),\r\n        \"box-sizing\": \"border-box\"\r\n    });\r\n    $input.val(elementWithText.text());\r\n    $input.on(mousePointer + \"down\", (e) => { e.stopPropagation(); })\r\n\r\n    if (selectionRange != null) {\r\n        (<HTMLInputElement>$input[0]).setSelectionRange(selectionRange.start, selectionRange.end);\r\n    }\r\n\r\n    elementToReplace.after($input);\r\n    elementToReplace.hide();\r\n    setTimeout(() => {\r\n        $input.focus();\r\n    }, 300);\r\n\r\n    $input.on(\"keydown.me\", (ev) => {\r\n        if (ev.key == \"Enter\" || ev.key == \"Escape\") {\r\n            $input.off(\"keydown.me\");\r\n            $input.off(\"focusout.me\");\r\n            $input.remove();\r\n            elementToReplace.show();\r\n            let newValue = escapeHtml(<string>$input.val());\r\n            renameDoneCallback(newValue);\r\n            return;\r\n        }\r\n    });\r\n\r\n    $input.on(\"focusout.me\", (ev) => {\r\n        $input.off(\"keydown.me\");\r\n        $input.off(\"focusout.me\");\r\n        $input.remove();\r\n        elementToReplace.show();\r\n        let newValue = escapeHtml(<string>$input.val());\r\n        renameDoneCallback(newValue);\r\n        return;\r\n    });\r\n\r\n}\r\n\r\nexport type ContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: () => void;\r\n    link?: string;\r\n    subMenu?: ContextMenuItem[]\r\n};\r\n\r\nexport function openContextMenu(items: ContextMenuItem[], x: number, y: number): JQuery<HTMLElement> {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    let $contextMenu = jQuery('<div class=\"jo_contextmenu\"></div>');\r\n\r\n    let $openSubMenu: JQuery<HTMLElement> = null;\r\n    let parentMenuItem: ContextMenuItem = null;\r\n\r\n    for (let mi of items) {\r\n        let caption: string = mi.caption;\r\n        if (mi.link != null) {\r\n            caption = `<a href=\"${mi.link}\" target=\"_blank\" class=\"jo_menulink\">${mi.caption}</a>`;\r\n        }\r\n        let $item = jQuery('<div>' + caption + (mi.subMenu != null ? '<span style=\"float: right\"> &nbsp; &nbsp; &gt;</span>' : \"\") + '</div>');\r\n        if (mi.color != null) {\r\n            $item.css('color', mi.color);\r\n        }\r\n        if (mi.link == null) {\r\n            $item.on(mousePointer + 'up.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n                jQuery('.jo_contextmenu').remove();\r\n                jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n                jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n                jQuery(document).off(\"keydown.contextmenu\");\r\n                mi.callback();\r\n            });\r\n            $item.on(mousePointer + 'down.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n            });\r\n        } else {\r\n            let $link = $item.find('a');\r\n            $link.on(mousePointer + \"up\", (event) => {\r\n                event.stopPropagation();\r\n                setTimeout(() => {\r\n                    $item.hide();\r\n                }, 500);\r\n            })\r\n            $link.on(mousePointer + \"down\", (event) => {\r\n                event.stopPropagation();\r\n            })\r\n\r\n        }\r\n\r\n        $item.on(mousePointer + 'move.contextmenu', () => {\r\n            if (mi != parentMenuItem && $openSubMenu != null) {\r\n                $openSubMenu.remove();\r\n                parentMenuItem = null;\r\n                $openSubMenu = null;\r\n            }\r\n            if (mi.subMenu != null) {\r\n                $openSubMenu = openContextMenu(mi.subMenu, $item.offset().left + $item.width(), $item.offset().top);\r\n            }\r\n        });\r\n\r\n        $contextMenu.append($item);\r\n    }\r\n\r\n    jQuery(document).on(mousePointer + \"down.contextmenu\", (e) => {\r\n        jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n        jQuery(document).off(\"keydown.contextmenu\");\r\n        jQuery('.jo_contextmenu').remove();\r\n    })\r\n\r\n    jQuery(document).on(\"keydown.contextmenu\", (ev) => {\r\n        if (ev.key == \"Escape\") {\r\n            jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n            jQuery(document).off(\"keydown.contextmenu\");\r\n            jQuery('.jo_contextmenu').remove();\r\n        }\r\n    });\r\n\r\n    let leftRight = x > window.innerWidth * 0.8 ? \"right\" : \"left\";\r\n    let xp = x > window.innerWidth * 0.8 ? window.innerWidth - x : x;\r\n    let topBottom = y > window.innerHeight * 0.8 ? \"bottom\" : \"top\";\r\n    let yp = y > window.innerHeight * 0.8 ? window.innerHeight - y : y;\r\n\r\n    let css = {};\r\n    css[leftRight] = xp + \"px\";\r\n    css[topBottom] = yp + \"px\";\r\n\r\n    $contextMenu.css(css);\r\n\r\n\r\n    jQuery(\"body\").append($contextMenu);\r\n    $contextMenu.show();\r\n\r\n    return $contextMenu;\r\n}\r\n\r\nexport function makeTabs(tabDiv: JQuery<HTMLElement>) {\r\n    let headings = tabDiv.find('.jo_tabheadings>div').not('.jo_noHeading');\r\n    let tabs = tabDiv.find('.jo_tabs>div');\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    headings.on(mousePointer + \"down\", (ev) => {\r\n        let target = jQuery(ev.target);\r\n        headings.removeClass('jo_active');\r\n        target.addClass('jo_active');\r\n        let tab = tabDiv.find('.' + target.data('target'));\r\n        tabs.removeClass('jo_active');\r\n        tabs.trigger('myhide');\r\n        tab.addClass('jo_active');\r\n        tab.trigger('myshow');\r\n    });\r\n\r\n}\r\n\r\nexport function convertPxToNumber(pxString: string): number {\r\n    pxString = pxString.replace('px', '').trim();\r\n    return Number.parseInt(pxString);\r\n}\r\n\r\nexport function makeDiv(id: string, klass: string = \"\", text: string = \"\", css?: { [id: string]: any }): JQuery<HTMLDivElement> {\r\n\r\n    let s = \"\";\r\n    if (id != null && id != \"\") s += ` id=\"${id}\"`;\r\n\r\n    if (klass != null && klass != \"\") s += ` class=\"${klass}\"`;\r\n\r\n    let div = jQuery(`<div${s}></div>`);\r\n\r\n    if (css != null) {\r\n        div.css(css);\r\n    }\r\n\r\n    if (text != null && text != \"\") {\r\n        div.text(text);\r\n    }\r\n\r\n    return <any>div;\r\n\r\n}\r\n\r\nexport type SelectItem = {\r\n    value: string | number,\r\n    object: any,\r\n    caption: string\r\n}\r\n\r\nexport function setSelectItems($selectElement: JQuery<HTMLSelectElement>, items: SelectItem[], activeItemValue?: string | number) {\r\n    $selectElement.empty();\r\n    items.forEach(item => {\r\n        let selected: string = (item.value == activeItemValue) ? ' selected=\"selected\"' : \"\";\r\n        let element = jQuery(`<option value=${item.value}${selected}>${item.caption}</option>`);\r\n        $selectElement.append(element);\r\n        element.data('object', item.object);\r\n    }\r\n    );\r\n\r\n    $selectElement.data('items', items);\r\n\r\n\r\n}\r\n\r\nexport function getSelectedObject($selectDiv: JQuery<HTMLSelectElement>) {\r\n\r\n    let items: SelectItem[] = $selectDiv.data('items');\r\n\r\n    let selectedValue = $selectDiv.val();\r\n\r\n    return items.find(item => item.value == selectedValue)?.object;\r\n\r\n}\r\n\r\nexport var jo_mouseDetected: boolean = false;\r\nexport function checkIfMousePresent() {\r\n    if (matchMedia('(pointer:fine)').matches) {\r\n        jo_mouseDetected = true;\r\n    }\r\n}\r\n\r\nexport function animateToTransparent($element: JQuery<HTMLElement>, cssProperty: string, startColorRgb: number[], duration: number) {\r\n    let colorPraefix = 'rgba(' + startColorRgb[0] + \", \" + startColorRgb[1] + \", \" + startColorRgb[2] + \", \";\r\n    let value = 1.0;\r\n    let delta = value / (duration / 20);\r\n\r\n    let animate = () => {\r\n        $element.css(cssProperty, colorPraefix + value + \")\");\r\n        value -= delta;\r\n        if (value < 0) {\r\n            $element.css(cssProperty, \"\");\r\n        } else {\r\n            setTimeout(animate, 20);\r\n        }\r\n    }\r\n\r\n    animate();\r\n}\r\n\r\nexport function downloadFile(obj: any, filename: string, isBlob: boolean = false) {\r\n    var blob = isBlob? obj : new Blob([JSON.stringify(obj)], { type: 'text/plain' });\r\n    //@ts-ignore\r\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n        //@ts-ignore\r\n        window.navigator.msSaveOrOpenBlob(blob, filename);\r\n    } else {\r\n        var e = document.createEvent('MouseEvents'),\r\n            a = document.createElement('a');\r\n        a.download = filename;\r\n        a.href = window.URL.createObjectURL(blob);\r\n        a.dataset.downloadurl = ['text/plain', a.download, a.href].join(':');\r\n        //@ts-ignore\r\n        e.initEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\r\n        a.dispatchEvent(e);\r\n        a.remove();\r\n    }\r\n}\r\n\r\n\r\nfunction fallbackCopyTextToClipboard(text) {\r\n    var textArea = document.createElement(\"textarea\");\r\n    textArea.value = text;\r\n\r\n    // Avoid scrolling to bottom\r\n    textArea.style.top = \"0\";\r\n    textArea.style.left = \"0\";\r\n    textArea.style.position = \"fixed\";\r\n\r\n    document.body.appendChild(textArea);\r\n    textArea.focus();\r\n    textArea.select();\r\n\r\n    try {\r\n        var successful = document.execCommand('copy');\r\n    } catch (err) {\r\n        console.error('Fallback: Oops, unable to copy', err);\r\n    }\r\n\r\n    document.body.removeChild(textArea);\r\n}\r\n\r\nexport function copyTextToClipboard(text) {\r\n    if (!navigator.clipboard) {\r\n        fallbackCopyTextToClipboard(text);\r\n        return;\r\n    }\r\n    navigator.clipboard.writeText(text).then(function () {\r\n    }, function (err) {\r\n        console.error('Async: Could not copy text: ', err);\r\n    });\r\n}\r\n","import { LoginRequest, PerformanceData } from \"./Data.js\";\r\n\r\n// export var credentials: { username: string, password: string } = { username: null, password: null };\r\n\r\nexport class PerformanceCollector {\r\n    static performanceData: PerformanceData[] = [];\r\n    static performanceDataCount: number = 0;\r\n    static lastTimeSent: number = performance.now();\r\n\r\n    static registerPerformanceEntry(url: string, startTime: number) {\r\n        let pe: PerformanceData = PerformanceCollector.performanceData.find(pe => pe.url == url);\r\n        if (pe == null) {\r\n            pe = { count: 0, sumTime: 0, url: url };\r\n            PerformanceCollector.performanceData.push(pe);\r\n        }\r\n        pe.count++;\r\n        let dt = Math.round(performance.now() - startTime);\r\n        pe.sumTime += dt;\r\n        PerformanceCollector.performanceDataCount++;\r\n        // console.log(\"Performance entry for path \" + pe.url + \": \" + dt + \" ms, aggregated: \" + pe.sumTime + \" for \" + pe.count + \" requests.\");\r\n    }\r\n\r\n    static sendDataToServer() {\r\n        if (performance.now() - PerformanceCollector.lastTimeSent > 3 * 60 * 1000) {\r\n            let request = {\r\n                data: PerformanceCollector.performanceData\r\n            }\r\n\r\n            PerformanceCollector.performanceData = [];\r\n            PerformanceCollector.performanceDataCount = 0;\r\n            PerformanceCollector.lastTimeSent = performance.now();\r\n\r\n            ajax(\"collectPerformanceData\", request, () => { })\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport function ajax(url: string, request: any, successCallback: (response: any) => void,\r\n\r\n    errorCallback?: (message: string) => void) {\r\n\r\n    showNetworkBusy(true);\r\n    let time = performance.now();\r\n\r\n    $.ajax({\r\n        type: 'POST',\r\n        async: true,\r\n        data: JSON.stringify(request),\r\n        contentType: 'application/json',\r\n        url: \"servlet/\" + url,\r\n        success: function (response: any) {\r\n\r\n            PerformanceCollector.registerPerformanceEntry(url, time);\r\n\r\n            showNetworkBusy(false);\r\n            if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n                let error = \"Fehler bei der Bearbeitung der Anfrage\"\r\n                if (response.message != null) error = response.message;\r\n\r\n                if (error == \"Not logged in\") {\r\n                    // setTimeout(() => newLogin(url, request, successCallback, errorCallback), 10000);\r\n                    // location.reload();\r\n                }\r\n\r\n                if (errorCallback) errorCallback(error);\r\n            } else {\r\n                successCallback(response);\r\n            }\r\n            return;\r\n\r\n        },\r\n        error: function (jqXHR, message) {\r\n            showNetworkBusy(false);\r\n            if (errorCallback) {\r\n                let statusText = \"Server nicht erreichbar.\"\r\n                if (jqXHR.status != 0) {\r\n                    statusText = \"\" + jqXHR.status\r\n                }\r\n                errorCallback(message + \": \" + statusText);\r\n                return;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function showNetworkBusy(busy: boolean) {\r\n    if (busy) {\r\n        jQuery('.jo_network-busy').css('visibility','visible');\r\n    } else {\r\n        jQuery('.jo_network-busy').css('visibility','hidden');\r\n    }\r\n}\r\n\r\n\r\n","import { DatabaseData } from \"../communication/Data.js\";\r\n\r\nexport class WDatabase {\r\n\r\n    id: number;\r\n    name: string;\r\n\r\n    templateDump: Uint8Array;\r\n    based_on_template_id: number;\r\n    templateName: string;\r\n\r\n    statements: string[];\r\n    published_to: number;\r\n    version: number;\r\n    description: string;\r\n    owner_id: number;\r\n\r\n    static fromDatabaseData(data: DatabaseData, version: number): WDatabase {\r\n\r\n        let db = new WDatabase();\r\n\r\n        db.id = data.id;\r\n        db.name = data.name;\r\n        db.statements = data.statements;\r\n        db.published_to = data.published_to;\r\n        db.version = version;\r\n        db.description = data.description;\r\n        db.templateDump = null;\r\n        db.based_on_template_id = data.based_on_template_id;\r\n        db.owner_id = data.owner_id;\r\n        return db;\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n","export class CacheManager {\r\n    \r\n    fetchTemplateFromCache(databaseId: number, callback: (templateDump: Uint8Array) => void) {\r\n        if(databaseId == null){callback(null); return;}\r\n        let that = this;\r\n        if(!this.cacheAvailable()) callback(null);\r\n        this.getCache((cache) => {\r\n            cache.match(that.databaseIdToCacheIdentifier(databaseId)).then(\r\n                (value)=>{\r\n                    value.arrayBuffer().then((buffer) => callback(new Uint8Array(buffer)));\r\n                })\r\n                .catch(() => callback(null));\r\n        })        \r\n    }\r\n\r\n    saveTemplateToCache(databaseId: number, templateDump: Uint8Array) {\r\n        if(!this.cacheAvailable()) return;\r\n        let that = this;\r\n        this.getCache((cache) => {\r\n            cache.put(that.databaseIdToCacheIdentifier(databaseId), new Response(templateDump));\r\n        })        \r\n    }\r\n\r\n    cacheAvailable(): boolean {\r\n        return 'caches' in self;\r\n    }\r\n\r\n    getCache(callback: (cache: Cache) => void) {\r\n        caches.open('my-cache').then(callback);\r\n    }\r\n\r\n    databaseIdToCacheIdentifier(databaseId: number): string {\r\n        return \"/onlineIdeTemplateDb\" + databaseId;\r\n    }\r\n\r\n}","import { Main } from \"../main/Main.js\";\r\nimport { ajax } from \"./AjaxHelper.js\";\r\nimport { GetWebSocketTokenResponse } from \"./Data.js\";\r\nimport { NetworkManager } from \"./NetworkManager.js\";\r\n\r\ntype SubscriptionMessageFromClient = {\r\n    command: number,  // 1 == \"subscribe\", 2 == \"disconnect\"\r\n    // 3 == \"keepalive request\"\r\n    token?: string   // when \"subscribe\"\r\n}\r\n\r\ntype SubscriptionMessageFromServer = {\r\n    command: number // 1 == Acknoledge Connection, 2 == Notify, 3 == disconnect, 4 == keep alive response\r\n}\r\n\r\ntype NotifierState = \"connecting\" | \"connected\" | \"subscribed\" | \"disconnected\";\r\n\r\nexport class NotifierClient {\r\n\r\n    connection: WebSocket;\r\n    state: NotifierState;\r\n\r\n    constructor(private main: Main, private networkManager: NetworkManager){\r\n        this.connect();\r\n    }\r\n\r\n    connect() {\r\n        this.state = \"connecting\";\r\n\r\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\r\n\r\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/subscriptionwebsocket\";\r\n            this.connection = new WebSocket(url);\r\n\r\n            this.connection.onerror = (error: Event) => { this.onError(error); }\r\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\r\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\r\n\r\n            this.connection.onopen = (event: Event) => {\r\n                let request: SubscriptionMessageFromClient = {\r\n                    command: 1,   // \"subscribe\"\r\n                    token: response.token\r\n                }\r\n\r\n                this.state = \"connected\";\r\n                this.sendIntern(JSON.stringify(request));\r\n\r\n            }\r\n\r\n            let that = this;\r\n            setTimeout(() => {\r\n                if(this.state != \"subscribed\"){\r\n                    this.networkManager.forcedUpdateEvery = 1;\r\n                    this.networkManager.counterTillForcedUpdate = 1;\r\n                }\r\n            }, 7000);\r\n\r\n        });\r\n    }\r\n\r\n    disconnect(){\r\n        let request: SubscriptionMessageFromClient = {\r\n            command: 2   // \"disconnect\"\r\n        }\r\n\r\n        this.state = \"connected\";\r\n        this.sendIntern(JSON.stringify(request));\r\n\r\n    }\r\n\r\n    unsentMessages: string[] = [];\r\n    sendIntern(message: string) {\r\n\r\n        if (this.state != \"disconnected\") {\r\n            try {\r\n                this.connection.send(message);\r\n            } catch (exception) {\r\n                console.log(exception);\r\n            }\r\n        }\r\n    }\r\n\r\n    onClose(event: CloseEvent) {\r\n        this.state = \"disconnected\";\r\n    }\r\n\r\n    onMessage(event: MessageEvent) {\r\n\r\n        let response: SubscriptionMessageFromClient = JSON.parse(event.data);\r\n        if (response.command == undefined) return;\r\n\r\n        // 1 == Acknoledge Connection, 2 == Notify, 3 == disconnect, 4 == keep alive response\r\n        switch (response.command) {\r\n            case 1: // Acknoledge Connection\r\n                this.state = \"subscribed\";\r\n                break;\r\n            case 2: // Notify\r\n                this.networkManager.sendUpdates(() => {}, true);\r\n                break;\r\n            case 3: // disconnect\r\n                this.state = \"disconnected\";\r\n                break;\r\n            case 4: // keep alive response\r\n                break;\r\n        }\r\n    }\r\n\r\n    onError(error: Event) {\r\n        console.log(\"Fehler beim Notifier-Websocket\");\r\n    }\r\n\r\n}","import { UploadTemplateResponse } from \"../communication/Data.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\n\r\nexport class TemplateUploader {\r\n\r\n    uploadCurrentDatabase(workspace_id: number, main: Main, dump: Uint8Array | null, \r\n        reason: \"publishDatabaseAsTemplate\" | \"uploadBaseTemplateForWorkspace\" | \"distributeWorkspace\", \r\n        callback: (response: UploadTemplateResponse) => void = () => { }) {\r\n            \r\n        main.waitOverlay.show('Bitte warten, lade Vorlage auf den Server hoch ...');\r\n        if (workspace_id >= 0) {\r\n            let dbTool = main.getDatabaseTool();\r\n            dbTool.export((buffer) => {\r\n                // @ts-ignore\r\n                buffer = pako.deflate(buffer);\r\n                this.uploadIntern(buffer, workspace_id, reason, main, callback);\r\n            }, (error) => {\r\n                alert(\"Fehler beim Exportieren der Datenbank: \" + error)\r\n                main.waitOverlay.hide();\r\n            })\r\n        } else {\r\n            this.uploadIntern(dump, -1, reason, main, callback);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    private uploadIntern(buffer: Uint8Array, workspace_id: number,\r\n        reason: \"publishDatabaseAsTemplate\" | \"uploadBaseTemplateForWorkspace\"| \"distributeWorkspace\",\r\n        main: Main, callback: (response: UploadTemplateResponse) => void) {\r\n\r\n        $.ajax({\r\n            type: 'POST',\r\n            async: true,\r\n            contentType: 'application/octet-stream',\r\n            data: buffer,\r\n            processData: false,\r\n            headers: { 'x-workspaceid': \"\" + workspace_id, \"x-reason\": reason },\r\n            url: \"servlet/uploadTemplate\",\r\n            success: function (response: UploadTemplateResponse) {\r\n                main.waitOverlay.hide();\r\n                callback(response);\r\n                return;\r\n\r\n            },\r\n            error: function (jqXHR, message) {\r\n                alert('message');\r\n                main.waitOverlay.hide();\r\n            }\r\n        }\r\n        );\r\n        return buffer;\r\n    }\r\n}","import { Main } from \"../main/Main.js\";\r\nimport { ajax } from \"./AjaxHelper.js\";\r\nimport { WorkspaceData, FileData, SendUpdatesRequest, SendUpdatesResponse, CreateOrDeleteFileOrWorkspaceRequest, CRUDResponse, UpdateUserSettingsRequest, UpdateUserSettingsResponse, DuplicateWorkspaceRequest, DuplicateWorkspaceResponse, ClassData, DistributeWorkspaceRequest, DistributeWorkspaceResponse, GetDatabaseRequest, getDatabaseResponse, GetNewStatementsRequest, GetNewStatementsResponse, AddDatabaseStatementsRequest, AddDatabaseStatementsResponse, TemplateListEntry, GetTemplateListRequest, GetTemplateListResponse, CreateWorkspaceData, GetDatabaseSettingsResponse, GetDatabaseSettingsRequest, setDatabaseSecretRequest as SetDatabaseSecretRequest, SetDatabaseSecretResponse, SetPublishedToRequest, SetPublishedToResponse, GetTemplateRequest, RollbackRequest, RollbackResponse } from \"./Data.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { WDatabase } from \"../workspace/WDatabase.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { CacheManager } from \"./CacheManager.js\";\r\nimport { NotifierClient } from \"./NotifierClient.js\";\r\nimport { TemplateUploader } from \"../tools/TemplateUploader.js\";\r\n\r\nexport class NetworkManager {\r\n\r\n    timerhandle: any;\r\n\r\n    ownUpdateFrequencyInSeconds: number = 20;\r\n    teacherUpdateFrequencyInSeconds: number = 5;\r\n\r\n    updateFrequencyInSeconds: number = 20;\r\n    forcedUpdateEvery: number = 4;\r\n    counterTillForcedUpdate: number = 2;\r\n    secondsTillNextUpdate: number = this.updateFrequencyInSeconds;\r\n    errorHappened: boolean = false;\r\n\r\n    interval: any;\r\n\r\n    notifierClient: NotifierClient;\r\n\r\n    constructor(private main: Main, private $updateTimerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initializeTimer() {\r\n\r\n        let that = this;\r\n        this.$updateTimerDiv.find('svg').attr('width', that.updateFrequencyInSeconds);\r\n\r\n        if (this.interval != null) clearInterval(this.interval);\r\n\r\n        this.interval = setInterval(() => {\r\n\r\n            if (that.main.user == null) return; // don't call server if no user is logged in\r\n\r\n            that.secondsTillNextUpdate--;\r\n\r\n            if (that.secondsTillNextUpdate < 0) {\r\n                that.secondsTillNextUpdate = that.updateFrequencyInSeconds;\r\n                this.counterTillForcedUpdate--;\r\n                let forceUpdate = this.counterTillForcedUpdate == 0;\r\n                if (forceUpdate) this.counterTillForcedUpdate = this.forcedUpdateEvery;\r\n                that.sendUpdates(() => { }, forceUpdate);\r\n            }\r\n\r\n            let $rect = this.$updateTimerDiv.find('.jo_updateTimerRect');\r\n\r\n            $rect.attr('width', that.secondsTillNextUpdate + \"px\");\r\n\r\n            if (that.errorHappened) {\r\n                $rect.css('fill', '#c00000');\r\n                this.$updateTimerDiv.attr('title', \"Fehler beim letzten Speichervorgang -> Werd's wieder versuchen\");\r\n            } else {\r\n                $rect.css('fill', '#008000');\r\n                this.$updateTimerDiv.attr('title', that.secondsTillNextUpdate + \" Sekunden bis zum nächsten Speichern\");\r\n            }\r\n\r\n        }, 1000);\r\n\r\n    }\r\n\r\n    initializeNotifierClient(){\r\n        this.notifierClient = new NotifierClient(this.main, this);\r\n    }\r\n\r\n    sendUpdates(callback?: () => void, sendIfNothingIsDirty: boolean = false) {\r\n\r\n        if (this.main.user == null) return;\r\n\r\n        this.main.projectExplorer.writeEditorTextToFile();\r\n\r\n        if (this.main.userDataDirty) {\r\n\r\n            this.main.userDataDirty = false;\r\n            this.sendUpdateUserSettings(() => { });\r\n        }\r\n\r\n\r\n        let wdList: WorkspaceData[] = [];\r\n        let fdList: FileData[] = [];\r\n\r\n        for (let ws of this.main.workspaceList) {\r\n\r\n            if (!ws.saved) {\r\n                wdList.push(ws.getWorkspaceData(false));\r\n                ws.saved = true;\r\n            }\r\n\r\n            for (let m of ws.moduleStore.getModules(false)) {\r\n                if (!m.file.saved) {\r\n                    m.file.text = m.getProgramTextFromMonacoModel();\r\n                    fdList.push(m.getFileData(ws));\r\n                    // console.log(\"Save file \" + m.file.name);\r\n                    m.file.saved = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        let request: SendUpdatesRequest = {\r\n            workspacesWithoutFiles: wdList,\r\n            files: fdList,\r\n            owner_id: this.main.workspacesOwnerId,\r\n            userId: this.main.user.id,\r\n            language: 1,\r\n            currentWorkspaceId: this.main.getCurrentWorkspace()?.id,\r\n            getModifiedWorkspaces: false\r\n        }\r\n\r\n        let that = this;\r\n        if (wdList.length > 0 || fdList.length > 0 || sendIfNothingIsDirty) {\r\n            ajax('sendUpdates', request, (response: SendUpdatesResponse) => {\r\n                that.errorHappened = !response.success;\r\n                if (!that.errorHappened) {\r\n\r\n                    that.updateWorkspaces(request, response);\r\n\r\n                    if (callback != null) {\r\n                        callback();\r\n                        return;\r\n                    }\r\n                }\r\n            }, () => {\r\n                that.errorHappened = true;\r\n            });\r\n        } else {\r\n            if (callback != null) {\r\n                callback();\r\n                return;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    sendCreateWorkspace(wd: CreateWorkspaceData, owner_id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            wd.id = Math.round(Math.random() * 10000000);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"workspace\",\r\n            data: wd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            wd.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n\r\n    getDatabaseSettings(workspace_id: number, callback: (response: GetDatabaseSettingsResponse) => void) {\r\n        let request: GetDatabaseSettingsRequest = {\r\n            workspaceId: workspace_id\r\n        };\r\n        ajax(\"getDatabaseSettings\", request, (response: GetDatabaseSettingsResponse) => {\r\n            callback(response);\r\n        }, (message) => { alert(message) })\r\n    }\r\n\r\n    setNewSecret(workspace_id: number, kind: string, callback: (secret: string) => void) {\r\n        let request: SetDatabaseSecretRequest = {\r\n            workspaceId: workspace_id,\r\n            secretKind: kind\r\n        };\r\n        ajax(\"setNewSecret\", request, (response: SetDatabaseSecretResponse) => {\r\n            callback(response.secret);\r\n        }, (message) => { alert(message) })\r\n    }\r\n\r\n    setNameAndPublishedTo(workspace_id: number, name: string, published_to: number, description: string, callback: () => void) {\r\n        let request: SetPublishedToRequest = {\r\n            workspaceId: workspace_id,\r\n            databaseName: name,\r\n            publishedTo: published_to,\r\n            description: description\r\n        };\r\n\r\n        ajax(\"setPublishedTo\", request, (response: SetPublishedToResponse) => {\r\n            callback();\r\n        }, (message) => { alert(message) })\r\n    }\r\n\r\n\r\n\r\n    sendCreateFile(m: Module, ws: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        let fd: FileData = m.getFileData(ws);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"file\",\r\n            data: fd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            m.file.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDuplicateWorkspace(ws: Workspace, callback: (error: string, workspaceData?: WorkspaceData) => void) {\r\n\r\n        let request: DuplicateWorkspaceRequest = {\r\n            workspace_id: ws.id,\r\n            language: 1\r\n        }\r\n\r\n        ajax(\"duplicateWorkspace\", request, (response: DuplicateWorkspaceResponse) => {\r\n            callback(response.message, response.workspace)\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDistributeWorkspace(ws: Workspace, klasse: ClassData, student_ids: number[], callback: (error: string) => void) {\r\n\r\n        let callbackAfterSettingWorkspaceActive = () => {\r\n\r\n            new TemplateUploader().uploadCurrentDatabase(ws.id, this.main, null,\r\n                \"distributeWorkspace\",\r\n                (response) => {\r\n\r\n                    this.sendUpdates(() => {\r\n    \r\n                    let request: DistributeWorkspaceRequest = {\r\n                        workspace_id: ws.id,\r\n                        database_as_template_id: response.newTemplateId,\r\n                        class_id: klasse?.id,\r\n                        student_ids: student_ids\r\n                    }\r\n        \r\n                    ajax(\"distributeWorkspace\", request, (response: DistributeWorkspaceResponse) => {\r\n                        callback(response.message)\r\n                    }, callback);\r\n        \r\n                }, false);\r\n                });\r\n\r\n        }\r\n\r\n        this.main.projectExplorer.setWorkspaceActive(ws, callbackAfterSettingWorkspaceActive);\r\n\r\n    }\r\n\r\n\r\n    sendDeleteWorkspaceOrFile(type: \"workspace\" | \"file\", id: number, callback: (error: string) => void) {\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"delete\",\r\n            entity: type,\r\n            id: id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            if (response.success) {\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendUpdateUserSettings(callback: (error: string) => void) {\r\n\r\n        let request: UpdateUserSettingsRequest = {\r\n            settings: this.main.user.settings,\r\n            userId: this.main.user.id,\r\n            current_workspace_id: this.main.getCurrentWorkspace()?.id\r\n        }\r\n\r\n        ajax(\"updateUserSettings\", request, (response: UpdateUserSettingsResponse) => {\r\n            if (response.success) {\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n\r\n    getNewStatements(workspace: Workspace, callback: (statements: string[], firstNewStatementIndex: number) => void) {\r\n        let request: GetNewStatementsRequest = {\r\n            workspaceId: workspace.id,\r\n            version_before: workspace.database.version\r\n        }\r\n\r\n        ajax(\"getNewStatements\", request, (response: GetNewStatementsResponse) => {\r\n            if (response.success) {\r\n                callback(response.newStatements, response.firstNewStatementIndex);\r\n            }\r\n        });\r\n    }\r\n\r\n    AddDatabaseStatements(workspace: Workspace, statements: string[], callback: (statements_before: string[], new_version: number) => void) {\r\n        let request: AddDatabaseStatementsRequest = {\r\n            workspaceId: workspace.id,\r\n            version_before: workspace.database.version,\r\n            statements: statements\r\n        }\r\n\r\n        ajax(\"addDatabaseStatements\", request, (response: AddDatabaseStatementsResponse) => {\r\n            if (response.success) {\r\n                callback(response.statements_before, response.new_version);\r\n            }\r\n        });\r\n    }\r\n\r\n    fetchDatabase(workspace: Workspace, callback: (error: string) => void) {\r\n\r\n        let cacheManager: CacheManager = new CacheManager();\r\n\r\n        let request: GetDatabaseRequest = {\r\n            workspaceId: workspace.id\r\n        }\r\n\r\n        ajax(\"getDatabase\", request, (response: getDatabaseResponse) => {\r\n            if (response.success) {\r\n\r\n                workspace.database = WDatabase.fromDatabaseData(response.database, response.version)\r\n                cacheManager.fetchTemplateFromCache(workspace.database.based_on_template_id, (templateDump: Uint8Array) => {\r\n\r\n                    if (templateDump != null) {\r\n                        try{\r\n                            // @ts-ignore\r\n                            workspace.database.templateDump = pako.inflate(templateDump);\r\n                        } catch(err){\r\n                            console.log(err);\r\n                            console.log(\"Dump seems not to be compressed...\");\r\n                            workspace.database.templateDump = templateDump;\r\n                        }\r\n                        callback(null);\r\n                        return;\r\n                    } else {\r\n                        if (workspace.database.based_on_template_id == null) {\r\n                            callback(null);\r\n                            return\r\n                        }\r\n                        this.fetchTemplate(workspace.id, (template) => {\r\n                            if (template != null) {\r\n                                cacheManager.saveTemplateToCache(workspace.database.based_on_template_id, template);\r\n                                // @ts-ignore\r\n                                workspace.database.templateDump = pako.inflate(template);\r\n                                callback(null);\r\n                                return;\r\n                            } else {\r\n                                callback(\"Konnte das Template nicht laden.\");\r\n                                return;\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    fetchTemplate(workspaceId: number, callback: (template: Uint8Array) => void) {\r\n        let request: GetTemplateRequest = {\r\n            workspaceId: workspaceId\r\n        }\r\n\r\n        $.ajax({\r\n            type: 'POST',\r\n            async: true,\r\n            data: JSON.stringify(request),\r\n            contentType: 'application/json',\r\n            url: \"servlet/getTemplate\",\r\n            xhrFields: { responseType: 'arraybuffer' },\r\n            success: function (response: any) {\r\n                callback(new Uint8Array(response));\r\n            },\r\n            error: function (jqXHR, message) {\r\n                alert(\"Konnte das Template nicht laden.\");\r\n                callback(null);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    fetchTemplateList(callback: (templateList: TemplateListEntry[]) => void) {\r\n        let request: GetTemplateListRequest = { user_id: this.main.user.id }\r\n\r\n        ajax(\"getTemplateList\", request, (response: GetTemplateListResponse) => {\r\n            if (response.success) {\r\n                callback(response.templateList);\r\n            } else {\r\n                callback([]);\r\n            }\r\n        }, (message) => {\r\n            alert(message);\r\n            callback([]);\r\n        })\r\n\r\n    }\r\n\r\n    updateWorkspaces(sendUpdatesRequest: SendUpdatesRequest, sendUpdatesResponse: SendUpdatesResponse) {\r\n\r\n        let idToRemoteWorkspaceDataMap: Map<number, WorkspaceData> = new Map();\r\n\r\n        let fileIdsSended = [];\r\n        sendUpdatesRequest.files.forEach(file => fileIdsSended.push(file.id));\r\n\r\n        sendUpdatesResponse.workspaces.workspaces.forEach(wd => idToRemoteWorkspaceDataMap.set(wd.id, wd));\r\n\r\n        let newWorkspaceNames: string[] = [];\r\n\r\n        for (let remoteWorkspace of sendUpdatesResponse.workspaces.workspaces) {\r\n\r\n            let localWorkspaces = this.main.workspaceList.filter(ws => ws.id == remoteWorkspace.id);\r\n\r\n            // Did student get a workspace from his/her teacher?\r\n            if (localWorkspaces.length == 0) {\r\n                newWorkspaceNames.push(remoteWorkspace.name);\r\n                this.createNewWorkspaceFromWorkspaceData(remoteWorkspace);\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        for (let workspace of this.main.workspaceList) {\r\n            let remoteWorkspace: WorkspaceData = idToRemoteWorkspaceDataMap.get(workspace.id);\r\n            if (remoteWorkspace != null) {\r\n                let idToRemoteFileDataMap: Map<number, FileData> = new Map();\r\n                remoteWorkspace.files.forEach(fd => idToRemoteFileDataMap.set(fd.id, fd));\r\n\r\n                let idToModuleMap: Map<number, Module> = new Map();\r\n                // update/delete files if necessary\r\n                for (let module of workspace.moduleStore.getModules(false)) {\r\n                    let fileId = module.file.id;\r\n                    idToModuleMap.set(fileId, module);\r\n                    let remoteFileData = idToRemoteFileDataMap.get(fileId);\r\n                    if (remoteFileData == null) {\r\n                        this.main.projectExplorer.fileListPanel.removeElement(module);\r\n                        this.main.currentWorkspace.moduleStore.removeModule(module);\r\n                    } else if (remoteFileData.version > module.file.version) {\r\n                        if (fileIdsSended.indexOf(fileId) < 0 || remoteFileData.forceUpdate) {\r\n                            module.file.text = remoteFileData.text;\r\n                            module.model.setValue(remoteFileData.text);\r\n\r\n                            module.file.saved = true;\r\n                            module.lastSavedVersionId = module.model.getAlternativeVersionId()\r\n                        }\r\n                        module.file.version = remoteFileData.version;\r\n                    }\r\n                }\r\n\r\n                // add files if necessary\r\n                for (let remoteFile of remoteWorkspace.files) {\r\n                    if (idToModuleMap.get(remoteFile.id) == null) {\r\n                        this.createFile(workspace, remoteFile);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (newWorkspaceNames.length > 0) {\r\n            let message: string = newWorkspaceNames.length > 1 ? \"Folgende Workspaces hat Deine Lehrkraft Dir gesendet: \" : \"Folgenden Workspace hat Deine Lehrkraft Dir gesendet: \";\r\n            message += newWorkspaceNames.join(\", \");\r\n            alert(message);\r\n        }\r\n\r\n        this.main.projectExplorer.workspaceListPanel.sortElements();\r\n        this.main.projectExplorer.fileListPanel.sortElements();\r\n\r\n    }\r\n\r\n    public createNewWorkspaceFromWorkspaceData(remoteWorkspace: WorkspaceData, withSort: boolean = false) {\r\n        let w = this.main.createNewWorkspace(remoteWorkspace.name, remoteWorkspace.owner_id);\r\n        w.id = remoteWorkspace.id;\r\n        w.sql_history = \"\";\r\n        w.path = remoteWorkspace.path;\r\n        w.isFolder = remoteWorkspace.isFolder;\r\n\r\n        this.main.workspaceList.push(w);\r\n        let path = remoteWorkspace.path.split(\"/\");\r\n        if (path.length == 1 && path[0] == \"\") path = [];\r\n\r\n        let panelElement: AccordionElement = {\r\n            name: remoteWorkspace.name,\r\n            externalElement: w,\r\n            iconClass: \"workspace\",\r\n            isFolder: remoteWorkspace.isFolder,\r\n            path: path\r\n        };\r\n\r\n        this.main.projectExplorer.workspaceListPanel.addElement(panelElement, true);\r\n        w.panelElement = panelElement;\r\n\r\n        for (let fileData of remoteWorkspace.files) {\r\n            this.createFile(w, fileData);\r\n        }\r\n\r\n        if (withSort) {\r\n            this.main.projectExplorer.workspaceListPanel.sortElements();\r\n            this.main.projectExplorer.fileListPanel.sortElements();\r\n        }\r\n    }\r\n\r\n    createFile(workspace: Workspace, remoteFile: FileData) {\r\n        let ae: any = null; //AccordionElement\r\n        if (workspace == this.main.currentWorkspace) {\r\n            ae = {\r\n                name: remoteFile.name,\r\n                externalElement: null\r\n            }\r\n\r\n            this.main.projectExplorer.fileListPanel.addElement(ae, true);\r\n        }\r\n\r\n        let f: any = { // File\r\n            id: remoteFile.id,\r\n            name: remoteFile.name,\r\n            dirty: false,\r\n            saved: true,\r\n            text: remoteFile.text,\r\n            version: remoteFile.version,\r\n            identical_to_repository_version: true,\r\n            workspace_id: workspace.id,\r\n            panelElement: ae\r\n        };\r\n        let m = this.main.projectExplorer.getNewModule(f); //new Module(f, this.main);\r\n        if (ae != null) ae.externalElement = m;\r\n        let modulStore = workspace.moduleStore;\r\n        modulStore.putModule(m);\r\n\r\n    }\r\n\r\n    rollback(callback: (error: string, rollbackLocalNeeded: boolean) => void) {\r\n        let workspace = this.main.currentWorkspace;\r\n        let request: RollbackRequest = { workspaceId: workspace.id, version: workspace.database.version }\r\n\r\n        ajax(\"rollback\", request, (response: RollbackResponse) => {\r\n            if (response.success) {\r\n                \r\n                callback(null, workspace.database.version > response.new_version);\r\n            } else {\r\n                alert(response.message);\r\n                callback(response.message, false);\r\n            }\r\n        }, (message) => {\r\n            alert(message);\r\n            callback(message, false);\r\n        })\r\n\r\n    }\r\n\r\n\r\n}","import { CreateWorkspaceData, WorkspaceData } from \"../../communication/Data.js\";\r\nimport { copyTextToClipboard, makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { TemplateUploader } from \"../../tools/TemplateUploader.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\nexport class DatabaseSettingsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private workspace: Workspace) {\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Datenbank-Einstellungen</div>\r\n            <div style=\"width: 100%; margin-left: 10px\">\r\n                <div class=\"jo_ds_settings\" style=\"margin-left: 0px\">\r\n                <div class=\"jo_ds_settings_caption\">Name der Datenbank:</div><div><input class=\"dialog-input jo_databasename\" value=\"Neue Datenbank\"></input></div>\r\n                </div>\r\n\r\n                <div class=\"jo_ds_settings_caption\" style=\"margin-top: 20px\">\r\n                Zugriffscodes für andere Benutzer:\r\n                </div>\r\n                                \r\n                <div>\r\n                    <table class=\"jo_ds_secret_table\">\r\n                    <tr>\r\n                        <td>Nur Lesen:</td><td class=\"jo_ds_secret jo_ds_secret_read\"></td><td id=\"copySecretTdread\"></td><td><button class=\"jo_small_button jo_button_code_read\">Neuen Code generieren</button></td>\r\n                    <tr>\r\n                        <td>Lesen und schreiben:</td><td class=\"jo_ds_secret jo_ds_secret_write\"></td><td id=\"copySecretTdwrite\"></td><td><button class=\"jo_small_button jo_button_code_write\">Neuen Code generieren</button></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Lesen, schreiben und Struktur verändern:</td><td class=\"jo_ds_secret jo_ds_secret_ddl\"></td><td id=\"copySecretTdddl\"></td><td><button class=\"jo_small_button jo_button_code_ddl\">Neuen Code generieren</button></td>\r\n                    </tr>\r\n                    </table>\r\n                </div>\r\n\r\n                <div class=\"jo_ds_settings_caption\" style=\"margin-top: 20px\">\r\n                Beschreibung:\r\n                </div>\r\n                <div>\r\n                <textarea class=\"jo_ds_settings_description\" maxlength=\"5000\"></textarea>\r\n                </div>\r\n\r\n                <div class=\"jo_ds_settings_caption\" style=\"margin-top: 20px\">\r\n                Datenbank freigeben als Vorlage für andere Benutzer:\r\n                </div>\r\n\r\n                <fieldset id=\"jo_ds_publishedTo\">\r\n                    <input type=\"radio\" id=\"b0\" name=\"publishedFilter\" value=\"0\" checked=\"checked\"><label for=\"b0\">Keine Freigabe</label>\r\n                    <input type=\"radio\" id=\"b1\" name=\"publishedFilter\" value=\"1\"><label for=\"b1\">Freigabe für meine Klasse(n)</label>\r\n                    <input type=\"radio\" id=\"b2\" name=\"publishedFilter\" value=\"2\" style=\"visibility: none\"><label id=\"lb2\" for=\"b2\" style=\"visibility: none\">Freigabe für meine Schule</label>\r\n                    <input type=\"radio\" id=\"b3\" name=\"publishedFilter\" value=\"3\" style=\"visibility: none\"><label id=\"lb3\" for=\"b3\" style=\"visibility: none\">Freigabe für alle Schulen</label>\r\n                </fieldset>\r\n\r\n                <div>\r\n                    <input type=\"checkbox\" id=\"jo_upload_db\" name=\"jo_upload_db\">\r\n                    <label for=\"jo_upload_db\">Aktuellen Zustand der Datenbank als Vorlage hochladen</label>\r\n                </div>\r\n            </div>\r\n\r\n\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_save_button\">Speichern</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n\r\n        let that = this;\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { this.showMainWindow(); });\r\n        jQuery('#jo_ds_save_button').on('click', () => { \r\n            this.saveNameAndPublishedTo();\r\n         })\r\n\r\n        this.setValues();\r\n\r\n        [\"read\", \"write\", \"ddl\"].forEach(kind => {\r\n            jQuery('.jo_button_code_' + kind).on('pointerdown', () => {\r\n                that.main.networkManager.setNewSecret(that.workspace.id, kind, (secret) => {\r\n                    jQuery('.jo_ds_secret_'+kind).text(secret);\r\n                })\r\n            })\r\n            let $copyButton = jQuery('<button class=\"jo_small_button jo_copy_secret_button jo_active\">Kopieren</button>')\r\n            jQuery('#copySecretTd' + kind).append($copyButton);\r\n            $copyButton.on('pointerdown', () => {\r\n                copyTextToClipboard(jQuery('.jo_ds_secret_'+kind).text());\r\n            })\r\n        })\r\n\r\n        jQuery('#jo_ds_publishedTo>input').on('change', (e) => {$('#jo_upload_db').prop('checked', !((<HTMLInputElement>jQuery('#b0')[0]).checked))});\r\n\r\n    }\r\n\r\n    saveNameAndPublishedTo(){\r\n        let published_to = 0;\r\n        jQuery('#jo_ds_publishedTo').find('input').each( (n, element) => {\r\n            let $element = jQuery(element);\r\n            //@ts-ignore\r\n            if(<HTMLInputElement>element.checked){\r\n                published_to = Number.parseInt(<string>$element.attr('value'));\r\n            }\r\n        })\r\n\r\n        this.main.networkManager.setNameAndPublishedTo(this.workspace.id, \r\n            <string>jQuery('.jo_databasename').val(), published_to, <string>jQuery('.jo_ds_settings_description').val(),\r\n             () => {\r\n                 if($('#jo_upload_db').prop('checked')){\r\n                    new TemplateUploader().uploadCurrentDatabase(this.workspace.id, this.main, null, \"publishDatabaseAsTemplate\");                    \r\n                 }\r\n                 this.showMainWindow(); \r\n                })\r\n    }\r\n\r\n    setValues(){\r\n        jQuery('.jo_databasename').val(this.workspace.name);\r\n        this.main.networkManager.getDatabaseSettings(this.workspace.id, (response) => {\r\n            [\"read\", \"write\", \"ddl\"].forEach(kind => {\r\n                jQuery('.jo_ds_secret_' + kind).text(response.secrets[kind]);\r\n            });\r\n            if(this.main.user.is_admin){\r\n                jQuery('#b3').css('visibility', 'visible');\r\n                jQuery('#lb3').css('visibility', 'visible');\r\n            }\r\n            if(this.main.user.is_schooladmin){\r\n                jQuery('#b2').css('visibility', 'visible');\r\n                jQuery('#lb2').css('visibility', 'visible');\r\n            }\r\n            // jQuery('#jo_ds_publishedTo input').attr('checked', '');\r\n            jQuery('#b'+response.publishedTo).prop('checked', true);\r\n\r\n            jQuery('#jo_upload_db').prop('checked', response.publishedTo != 0);\r\n\r\n            jQuery('.jo_ds_settings_description').val(this.workspace.database.description);\r\n        })\r\n    }\r\n\r\n    showMainWindow() {\r\n        jQuery('#main').css('visibility', 'visible');\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n    }\r\n\r\n\r\n\r\n}","import { WorkspaceData } from \"../communication/Data.js\";\r\nimport { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { DatabaseSettingsDialog } from \"../main/gui/DatabaseSettingsDialog.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { WDatabase } from \"./WDatabase.js\";\r\n\r\nexport class Workspace {\r\n    \r\n    name: string;\r\n    path: string = \"\";\r\n    isFolder: boolean;\r\n    id: number;\r\n    owner_id: number;\r\n\r\n    version: number;\r\n    \r\n    moduleStore: ModuleStore;\r\n    panelElement: AccordionElement;\r\n    currentlyOpenModule: Module;\r\n    saved: boolean = true;\r\n\r\n    compilerMessage: string;\r\n\r\n    databaseId: number;\r\n    database: WDatabase;\r\n\r\n    sql_history: string;\r\n\r\n    permissions: number;\r\n\r\n    constructor(name: string, private main: MainBase, owner_id: number){\r\n        this.name = name;\r\n        this.owner_id = owner_id;\r\n        this.moduleStore = new ModuleStore(main);\r\n        this.sql_history = \"\";\r\n    }\r\n    \r\n    getWorkspaceData(withFiles: boolean): WorkspaceData {\r\n        let wd: WorkspaceData = {\r\n            name: this.name,\r\n            id: this.id,\r\n            owner_id: this.owner_id,\r\n            currentFileId: this.currentlyOpenModule == null ? null : this.currentlyOpenModule.file.id,\r\n            files: [],\r\n            sql_history: this.sql_history,\r\n            path: this.path,\r\n            isFolder: false,  \r\n            permissions: this.permissions,\r\n            database_id: this.databaseId\r\n        }\r\n\r\n        if(withFiles){\r\n            for(let m of this.moduleStore.getModules(false)){\r\n    \r\n                wd.files.push(m.getFileData(this));\r\n    \r\n            }\r\n        }\r\n\r\n        return wd;\r\n    }\r\n\r\n    renderSettingsButton(panelElement: AccordionElement) {\r\n        let $buttonDiv = panelElement?.$htmlFirstLine?.find('.jo_additionalButtonSettings');\r\n        if ($buttonDiv == null) return;\r\n        \r\n        // let myMain: Main = <Main>this.main;\r\n\r\n            let $button = jQuery('<div class=\"jo_settingsButton img_settings jo_button jo_active\" title=\"Datenbank-Einstellungen...\"></div>');\r\n            $buttonDiv.append($button);\r\n            let that = this;\r\n            $button.on('pointerdown', (e) => e.stopPropagation());\r\n            $button.on('pointerup', (e) => {\r\n                e.stopPropagation();\r\n\r\n                new DatabaseSettingsDialog(<any>that.main, that);\r\n\r\n            });\r\n\r\n            $button[0].addEventListener(\"contextmenu\", (event) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n            }, false);\r\n\r\n        // } else {\r\n        //     $buttonDiv.find('.jo_startButton').remove();\r\n        // }\r\n    }\r\n\r\n\r\n    static restoreFromData(ws: WorkspaceData, main: Main): Workspace {\r\n\r\n        let w = new Workspace(ws.name, main, ws.owner_id);\r\n        w.id = ws.id;\r\n        w.path = ws.path;\r\n        w.isFolder = ws.isFolder;\r\n        w.owner_id = ws.owner_id;\r\n        w.sql_history = ws.sql_history;\r\n        w.permissions = ws.permissions;\r\n        w.databaseId = ws.database_id;\r\n\r\n        for(let f of ws.files){\r\n\r\n            let m: Module = Module.restoreFromData(f, main);\r\n            w.moduleStore.putModule(m);\r\n\r\n            if(f.id == ws.currentFileId){\r\n                w.currentlyOpenModule = m;\r\n            }\r\n\r\n        }\r\n\r\n        return w;\r\n\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        \r\n        return this.moduleStore.hasErrors();\r\n        \r\n    }\r\n\r\n    getModuleByMonacoModel(model: monaco.editor.ITextModel): Module {\r\n        for(let m of this.moduleStore.getModules(false)){\r\n            if(m.model == model){\r\n                return m;\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    }\r\n}\r\n\r\n","import { Editor } from \"./Editor.js\";\r\nimport { CompletionHint, Module } from \"../../compiler/parser/Module.js\";\r\nimport { Symbol, SymbolTable } from \"../../compiler/parser/SymbolTable.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { Column, Table } from \"../../compiler/parser/SQLTable.js\";\r\n\r\nexport class MyCompletionItemProvider implements monaco.languages.CompletionItemProvider {\r\n\r\n    isConsole: boolean;\r\n\r\n    public triggerCharacters: string[] = ['.', 'abcdefghijklmnopqrstuvwxyzäöüß_ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜ', ' ', ',', '('];\r\n\r\n    public keywordCompletionItems: Map<string, monaco.languages.CompletionItem> = new Map();\r\n\r\n    constructor(private main: MainBase) {\r\n        this.setupKeywordCompletionItems();\r\n    }\r\n\r\n    first: boolean = true;\r\n    provideCompletionItems(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, \r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n\r\n\r\n        let module: Module =\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null || module.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n            let that = this;\r\n\r\n            let wfc = function waitForCompiler(){\r\n                if(module.file.dirty){\r\n                    setTimeout(() => {\r\n                        wfc();\r\n                    }, 100);\r\n                } else {\r\n                    resolve(that.provideCompletionItemsIntern(model, position, context, token));\r\n                }\r\n            }\r\n        \r\n            wfc();\r\n\r\n        })\r\n\r\n        // Promise.resolve({\r\n        //     suggestions: completionItems\r\n        // });\r\n    }\r\n\r\n    provideCompletionItemsIntern(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, \r\n        token: monaco.CancellationToken): monaco.languages.CompletionList {\r\n\r\n        setTimeout(() => {\r\n            //@ts-ignore\r\n            let sw = this.main.getMonacoEditor()._contentWidgets[\"editor.widget.suggestWidget\"].widget;\r\n            if (this.first) {\r\n                sw.toggleDetails();\r\n                this.first = false;\r\n            }\r\n        }, 500);\r\n\r\n        let module: Module =\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null || module.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (this.isStringLiteral(module, position)) return null;\r\n\r\n        let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let symbolTable = module.mainSymbolTable.findTableAtPosition(position.lineNumber, position.column);\r\n        let completionHint: CompletionHint = module.getCompletionHint(position.lineNumber, position.column);\r\n        if (completionHint == null) {\r\n            completionHint = {\r\n                fromColumn: 0,\r\n                toColumn: 0,\r\n                fromLine: 0,\r\n                toLine: 0,\r\n                hintColumns: false,\r\n                hintTables: false,\r\n                hintKeywords: []\r\n            }\r\n        }\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n        this.addKeywordCompletionItems(completionHint, completionItems);\r\n\r\n        let dotMatch = textUntilPosition.match(/.*\\s([\\wöäüÖÄÜß]*)(\\.)([\\wöäüÖÄÜß]*)$/);\r\n\r\n        let ibMatch = textAfterPosition.match(/^([\\wöäüÖÄÜß]*)/);\r\n        let identifierAndBracketAfterCursor = \"\";\r\n        if (ibMatch != null && ibMatch.length > 0) {\r\n            identifierAndBracketAfterCursor = ibMatch[0];\r\n        }\r\n\r\n        if (dotMatch == null) {\r\n            this.addIdentifierCompletionItems(completionHint, symbolTable, completionItems);\r\n        } else {\r\n            this.addDotCompletionItems(position, dotMatch, identifierAndBracketAfterCursor, symbolTable, completionItems);\r\n        }\r\n\r\n        let word = model.getWordUntilPosition(position);\r\n        let replaceWordRange = { startColumn: word.startColumn, startLineNumber: position.lineNumber, endColumn: word.endColumn, endLineNumber: position.lineNumber };\r\n        let insertAfterCursorRange = { startColumn: position.column, startLineNumber: position.lineNumber, endColumn: position.column, endLineNumber: position.lineNumber }\r\n\r\n        for (let item of completionItems) {\r\n            if (item.range == null) {\r\n                if (item.insertText.startsWith(\",\")) {\r\n                    item.range = insertAfterCursorRange;\r\n                } else {\r\n                    item.range = replaceWordRange;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (completionHint.dontHint != null) {\r\n            completionItems = completionItems.filter(item => completionHint.dontHint.indexOf(item.insertText) < 0);\r\n        }\r\n\r\n        return {\r\n            suggestions: completionItems\r\n        };\r\n    }\r\n\r\n\r\n    addDotCompletionItems(position: monaco.Position, dotMatch: RegExpMatchArray, identifierAndBracketAfterCursor: string,\r\n        symbolTable: SymbolTable, completionItems: monaco.languages.CompletionItem[]) {\r\n        let textAfterDot = dotMatch[3];\r\n        let textBeforeDot = dotMatch[1];\r\n        let dotColumn = position.column - textAfterDot.length - 1;\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - textAfterDot.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n        for (let symbol of symbolTable.symbolList) {\r\n            if (symbol.table != null) {\r\n                let identifier: string = symbol.table.identifier;\r\n                if (symbol.tableAlias != null) identifier = symbol.tableAlias;\r\n                if (identifier.toLowerCase() == textBeforeDot) {\r\n                    for (let column of symbol.table.columns) {\r\n                        completionItems.push({\r\n                            label: column.identifier,\r\n                            detail: \"Spalte \" + column.identifier + \" der Tabelle \" + symbol.table.identifier,\r\n                            filterText: column.identifier,\r\n                            insertText: column.identifier,\r\n                            insertTextRules: monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                            kind: monaco.languages.CompletionItemKind.Field,\r\n                            range: rangeToReplace\r\n                        })\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    addIdentifierCompletionItems(completionHint: CompletionHint, symbolTable: SymbolTable, completionItems: monaco.languages.CompletionItem[]) {\r\n        let praefix: string = completionHint.praefix == null ? \"\" : completionHint.praefix;\r\n        let suffix: string = completionHint.suffix == null ? \"\" : completionHint.suffix;\r\n\r\n        if (!(completionHint.hintTables || completionHint.hintColumns)) {\r\n            return;\r\n        }\r\n\r\n        let tableIdentifiers: { [identifier: string]: boolean } = {};\r\n\r\n        let st: SymbolTable = symbolTable;\r\n        let columns: { [identifier: string]: Symbol[] } = {};\r\n        let columnIdentifiers: string[] = [];\r\n\r\n        while (st != null) {\r\n            for (let symbol of st.symbolList) {\r\n                if (symbol.column != null) {\r\n                    let columnIdentifier = symbol.column.identifier;\r\n                    if (columns[columnIdentifier] == null) {\r\n                        columns[columnIdentifier] = [symbol];\r\n                        columnIdentifiers.push(columnIdentifier);\r\n                    } else {\r\n                        columns[columnIdentifier].push(symbol);\r\n                    }\r\n                } else if (symbol.table != null && completionHint.hintTables) {\r\n                    if (!tableIdentifiers[symbol.identifier]) {\r\n                        let insertText = praefix + symbol.identifier + suffix;\r\n                        completionItems.push({\r\n                            label: symbol.identifier,\r\n                            detail: \"Tabelle \" + symbol.table.identifier,\r\n                            filterText: symbol.identifier,\r\n                            insertText: insertText,\r\n                            insertTextRules: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                            kind: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemKind.Snippet : monaco.languages.CompletionItemKind.Class,\r\n                            range: undefined,\r\n                            sortText: \"aa\" + symbol.identifier\r\n                        });\r\n                        tableIdentifiers[symbol.identifier] = true;\r\n                    }\r\n                }\r\n            }\r\n            st = st.parent;\r\n        }\r\n\r\n        if (completionHint.hintColumns) {\r\n            for (let ci of columnIdentifiers) {\r\n                let columList = columns[ci];\r\n                let withTable = columList.length > 1 && completionHint.hintColumnsOfTable == null;\r\n                for (let cs of columList) {\r\n                    let text = cs.identifier;\r\n                    if (withTable && cs.identifier == cs.column.identifier.toLowerCase()) {\r\n                        text = (cs.tableAlias == null ? cs.column.table.identifier : cs.tableAlias) + \".\" + text;\r\n                    }\r\n                    if (completionHint.hintColumnsOfTable == null || cs.column?.table?.identifier == completionHint.hintColumnsOfTable) {\r\n                        let insertText = praefix + text + suffix;\r\n                        completionItems.push({\r\n                            label: text,\r\n                            detail: \"Die Spalte \" + cs.column.identifier + \" der Tabelle \" + cs.column.table.identifier,\r\n                            filterText: text,\r\n                            insertText: insertText,\r\n                            insertTextRules: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                            kind: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemKind.Snippet : monaco.languages.CompletionItemKind.Field,\r\n                            range: undefined\r\n                        })\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    keywordToSnippetMap: { [keyword: string]: string } = {\r\n        \"(\": \"(\\n\\t$0\\n)\",\r\n        \"varchar\": \"varchar($1) $0\",\r\n        \"decimal\": \"decimal($1, $2) $0\"\r\n    }\r\n\r\n    addKeywordCompletionItems(completionHint: CompletionHint, completionItems: monaco.languages.CompletionItem[]) {\r\n        let praefix: string = completionHint.praefix == null ? \"\" : completionHint.praefix;\r\n        let suffix: string = completionHint.suffix == null ? \"\" : completionHint.suffix;\r\n\r\n\r\n        for (let text of completionHint.hintKeywords) {\r\n            let insertText = praefix + text + suffix;\r\n            let snippet = this.keywordToSnippetMap[text];\r\n\r\n            let ci = this.keywordCompletionItems.get(text);\r\n            if (ci != null) {\r\n                completionItems.push(ci);\r\n            } else if (snippet != null) {\r\n                let label = snippet.replace(\"$0\", \"\").replace(\"$1\", \"\").replace(\"$2\", \"\").replace(/ /g, \"\").replace(/\\n/g, \"\").replace(/\\t/g, \"\");\r\n                completionItems.push({\r\n                    label: label,\r\n                    detail: \"\",\r\n                    filterText: text,\r\n                    insertText: snippet,\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                })\r\n            } else {\r\n                completionItems.push({\r\n                    label: text,\r\n                    detail: \"\",\r\n                    filterText: text,\r\n                    insertText: text,\r\n                    insertTextRules: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                    kind: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemKind.Snippet : monaco.languages.CompletionItemKind.Keyword,\r\n                    range: undefined,\r\n                    sortText: text == \"from\" ? \"*\" : undefined\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    isStringLiteral(module: Module, position: monaco.Position) {\r\n\r\n        let tokenList = module.tokenList;\r\n        if (tokenList == null || tokenList.length == 0) return false;\r\n\r\n        let posMin = 0;\r\n        let posMax = tokenList.length - 1;\r\n        let pos: number;\r\n\r\n        let watchDog = 1000;\r\n\r\n        while (true) {\r\n            let posOld = pos;\r\n            pos = Math.round((posMax + posMin) / 2);\r\n\r\n            if (posOld == pos) return false;\r\n\r\n            watchDog--;\r\n            if (watchDog == 0) return false;\r\n\r\n            let t = tokenList[pos];\r\n            let p = t.position;\r\n\r\n            if (p.line < position.lineNumber || p.line == position.lineNumber && p.column + p.length < position.column) {\r\n                posMin = pos;\r\n                continue;\r\n            }\r\n\r\n            if (p.line > position.lineNumber || p.line == position.lineNumber && p.column > position.column) {\r\n                posMax = pos;\r\n                continue;\r\n            }\r\n\r\n            return t.tt == TokenType.stringConstant;\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    setupKeywordCompletionItems() {\r\n        this.keywordCompletionItems.set(\"delete from\",\r\n            {\r\n                label: \"delete from <Tabelle> where <Bedingung>\",\r\n                detail: \"Anweisung zum Löschen von Datensätzen\",\r\n                filterText: `delete from`,\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `delete from `,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"drop table\",\r\n            {\r\n                label: \"drop table <Tabelle>\",\r\n                detail: \"Anweisung zum Löschen einer Tabelle\",\r\n                filterText: 'drop table',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `drop table `,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"alter\",\r\n            {\r\n                label: \"alter table <Tabelle> <rename to, rename column, add column, drop column>\",\r\n                detail: \"Anweisung zum Ändern des Schemas (alter table <Tabelle> <rename to, rename column, add column, drop column>)\",\r\n                filterText: 'alter',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `alter table `,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"select\",\r\n            {\r\n                label: \"select <Spalten> from <Tabellen> where <Bedingung>\",\r\n                detail: \"Select-Anweisung\",\r\n                filterText: 'select',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `select * from $1\\nwhere $0\\n`,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"create table\",\r\n            {\r\n                label: \"create table <Tabellenbezeichner> (<Spaltendefinitionen>)\",\r\n                detail: \"Create table-Anweisung (Erstellt eine neue Tabelle)\",\r\n                filterText: 'create',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `create table $1 (\\n\\t$0\\n);`,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        // this.keywordCompletionItems.set(\"from\",\r\n        //     {\r\n        //         label: \"from <Tabellen> where <Bedingung>\",\r\n        //         detail: \"from-Teil der select-Anweisung\",\r\n        //         filterText: 'from',\r\n        //         // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n        //         insertText: `from $1\\nwhere $0\\n`,\r\n        //         command: {\r\n        //             id: \"editor.action.triggerSuggest\",\r\n        //             title: '123',\r\n        //             arguments: []\r\n        //         },\r\n        //         insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n        //         kind: monaco.languages.CompletionItemKind.Snippet,\r\n        //         range: undefined\r\n        //     });\r\n\r\n    }\r\n\r\n\r\n}","import { Module, MethodCallPosition } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\n\r\n\r\nexport class MySignatureHelpProvider implements monaco.languages.SignatureHelpProvider {\r\n\r\n    signatureHelpTriggerCharacters?: readonly string[] = ['(', ',', ';', '<', '>', '=']; // semicolon, <, >, = for for-loop, if, while, ...\r\n    signatureHelpRetriggerCharacters?: readonly string[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    provideSignatureHelp(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let that = this;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            setTimeout(() => {\r\n\r\n                this.main.compileIfDirty();\r\n\r\n                resolve(that.provideSignatureHelpLater(model, position, token, context));\r\n\r\n            }, 300);\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    provideSignatureHelpLater(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model != this.main.getMonacoEditor().getModel());\r\n\r\n        let module: Module = \r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        // let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        // let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let methodCallPositions = module.methodCallPositions[position.lineNumber];\r\n\r\n        if (methodCallPositions == null) return null;\r\n\r\n        let methodCallPosition: MethodCallPosition = null;\r\n        let rightMostPosition: number = -1;\r\n\r\n        for (let i = methodCallPositions.length - 1; i >= 0; i--) {\r\n            let mcp = methodCallPositions[i];\r\n            if (mcp.identifierPosition.column + mcp.identifierPosition.length < position.column\r\n                && mcp.identifierPosition.column > rightMostPosition) {\r\n                if (mcp.rightBracketPosition == null ||\r\n                    (position.lineNumber <= mcp.rightBracketPosition.line && position.column <= mcp.rightBracketPosition.column)\r\n                    || (position.lineNumber < mcp.rightBracketPosition.line)) {\r\n                    methodCallPosition = mcp;\r\n                    rightMostPosition = mcp.identifierPosition.column;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (methodCallPosition == null) return null;\r\n\r\n        return this.getSignatureHelp(methodCallPosition, position);\r\n\r\n\r\n\r\n    }\r\n\r\n    getSignatureHelp(methodCallPosition: MethodCallPosition,\r\n        position: monaco.Position): monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let parameterIndex: number = 0;\r\n\r\n        for (let cp of methodCallPosition.commaPositions) {\r\n            if (cp.line < position.lineNumber || (cp.line == position.lineNumber && cp.column < position.column)) {\r\n                parameterIndex++;\r\n            }\r\n        }\r\n\r\n        let signatureInformationList: monaco.languages.SignatureInformation[] = [];\r\n\r\n        return Promise.resolve({\r\n            value: {\r\n                activeParameter: parameterIndex,\r\n                activeSignature: 0,\r\n                signatures: signatureInformationList\r\n            },\r\n            dispose: () => { }\r\n        });\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\n\r\n\r\n\r\nexport class MyHoverProvider {\r\n\r\n    private static keywordDescriptions: { [keyword: string]: string } = {\r\n        \"print\": \"Die Anweisung ```print``` gibt eine Zeichenkette aus.\",\r\n        \"new\": \"Das Schlüsselwort ```new``` bewirkt die Instanzierung (\\\"Erschaffung\\\") eines neuen Objektes einer Klasse.\",\r\n        \"println\": \"Die Anweisung ```println``` gibt eine Zeichenkette gefolgt von einem Zeilenumbruch aus.\",\r\n        \"while\": \"```\\nwhile (Bedingung) {Anweisungen}\\n```  \\nbewirkt die Wiederholung der Anweisungen solange ```Bedingung == true``` ist.\",\r\n        \"for\": \"```\\nfor(Startanweisung;Solange-Bedingung;Nach_jeder_Wiederholung){Anweisungen}\\n```  \\n\"\r\n            + \"führt zunächst die Startanweisung aus und wiederholt dann die Anweisungen solange ```Bedingung == true``` ist. Am Ende jeder wiederholung wird Nach_jeder_Wiederholung ausgeführt.\",\r\n        \"if\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.  \\nDer ```else```-Teil kann auch weggelassen werden.\",\r\n        \"else\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.\",\r\n        \"switch\": \"```\\nswitch(Selektor){ case Wert_1: Anweisungen_1; break; case Wert_2: Anweisungen_2; break; default: Default-Anweisungen } \\n```  \\nwertet den Selektor-Term aus und führt abhängig vom Termwert Anweisungen_1, Anweisungen_2, ... aus. Entspricht der Termwert keinem der Werte Wert_1, Wert_2, ..., so werden die Default-Anweisungen ausgeführt.\",\r\n        \"%\": \"```\\na % b\\n```  \\n (sprich: 'a modulo b') berechnet den **Rest** der ganzzahligen Division a/b.\",\r\n        \"==\": \"```\\na == b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` gleich sind.  \\nSind a und b **Objekte**, so ergibt ```a == b``` nur dann ```true```, wenn ```a``` und ```b``` auf das **identische** Objekt zeigen.  \\n```==``` nennt man **Vergleichsoperator**.\",\r\n        \"<=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` kleiner oder gleich dem Wert von ```b``` ist.\",\r\n        \">=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` größer oder gleich dem Wert von ```b``` ist.\",\r\n        \"!=\": \"```\\na != b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` **un**gleich sind.  \\nSind ```a``` und ```b``` **Objekte**, so ergibt ```a != b``` dann ```true```, wenn ```a``` und ```b``` **nicht** auf das **identische** Objekt zeigen.  \\n```!=``` nennt man **Ungleich-Operator**.\",\r\n        \"+=\": \"```\\na += b\\n(Kurzschreibweise für a = a + b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erhöht** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"-=\": \"```\\na -= b\\n(Kurzschreibweise für a = a - b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erniedrigt** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"*=\": \"```\\na *= b\\n(Kurzschreibweise für a = a * b)\\n```  \\nbewirkt, dass der Wert von ```a``` mit dem Wert von ```b``` **multipliziert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"/=\": \"```\\na /= b\\n(Kurzschreibweise für a = a / b)\\n```  \\nbewirkt, dass der Wert von ```a``` durch den Wert von ```b``` **dividiert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"++\": \"```\\na++\\n(Kurzschreibweise für a = a + 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins erhöht wird.\",\r\n        \"--\": \"```\\na--\\n(Kurzschreibweise für a = a - 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins eniedrigt wird.\",\r\n        \"=\": \"```\\na = Term\\n```  \\nberechnet den Wert des Terms und weist ihn der Variablen ```a``` zu.  \\n**Vorsicht:**  \\nVerwechsle ```=```(**Zuweisungsoperator**) nicht mit ```==```(**Vergleichsoperator**)!\",\r\n        \"!\": \"```\\n!a\\n```  \\nergibt genau dann ```true```, wenn ```a``` ```false``` ergibt.  \\n```!``` spricht man '**nicht**'.\",\r\n        \"public\": \"```\\npublic\\n```  \\nAttribute und Methoden, die als ```public``` deklariert werden, sind überall (auch außerhalb der Klasse) sichtbar.\",\r\n        \"private\": \"```\\nprivate\\n```  \\nAttribute und Methoden, die als ```private``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse sichtbar.\",\r\n        \"protected\": \"```\\nprotected\\n```  \\nAttribute und Methoden, die als ```protected``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse oder innerhalb von Methoden von Kindklassen sichtbar.\",\r\n        \"return\": \"```\\nreturn Term\\n```  \\nbewirkt, dass die Methode verlassen wird und der Wert des Terms an die aufrufende Stelle zurückgegeben wird.\",\r\n        \"break\": \"```\\nbreak;\\n```  \\ninnerhalb einer Schleife bewirkt, dass die Schleife sofort verlassen und mit den Anweisungen nach der Schleife fortgefahren wird.  \\n\"+\r\n        \"```break``` innerhalb einer ```switch```-Anweisung bewirkt, dass der Block der ```switch```-Anweisung verlassen wird.\",\r\n        \"class\": \"```\\nclass\\n```  \\nMit dem Schlüsselwort ```class``` werden Klassen definiert.\",\r\n        \"extends\": \"```\\nextends\\n```  \\n```class A extends B { ... }``` bedeutet, dass die Klasse A Unterklasse der Klasse B ist.\",\r\n        \"implements\": \"```\\nimplements\\n```  \\n```class A implements B { ... }``` bedeutet, dass die Klasse A das Interface B implementiert, d.h., dass sie alle Methoden besitzen muss, die in B definiert sind.\",\r\n        \"this\": \"```\\nthis\\n```  \\nInnerhalb einer Methodendefinition bezeichnet das Schlüsselwor ```this``` immer dasjenige Objekt, für das die Methode gerade ausgeführt wird.\",\r\n\r\n    }\r\n\r\n    constructor(private editor: Editor) {\r\n\r\n    }\r\n\r\n    provideHover(model: monaco.editor.ITextModel, position: monaco.Position, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Hover> {\r\n\r\n        let selection: monaco.Selection = this.editor.editor.getSelection();\r\n        \r\n        // if cursor is inside current selection then don't show hover, because editor.onDidChangeCursorPosition evaluates selected Text \r\n        // (see class Editor).\r\n        if(selection != null){\r\n            if(selection.startLineNumber != selection.endLineNumber || selection.startColumn != selection.endColumn){\r\n                if(\r\n                    (selection.startLineNumber < position.lineNumber || selection.startLineNumber == position.lineNumber && selection.startColumn <= position.column) && \r\n                    (selection.endLineNumber > position.lineNumber || selection.endLineNumber == position.lineNumber && selection.endColumn >= position.column) \r\n                ){\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        let module: Module = this.editor.main.getCurrentWorkspace()?.getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        for(let errorList of module.errors){\r\n            for(let error of errorList){\r\n                if(error.position.line == position.lineNumber && \r\n                    error.position.column <= position.column && \r\n                    error.position.column + error.position.length >= position.column){\r\n                        return null; // Show error-tooltip and don't show hover-tooltip\r\n                    }\r\n            }\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let declarationAsString = \"\";\r\n\r\n        if (element != null) {\r\n        } else {\r\n            let word = this.getWordUnderCursor(model, position);\r\n            let desc = MyHoverProvider.keywordDescriptions[word];\r\n            if (desc != null) {\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: desc }],\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getWordUnderCursor(model: monaco.editor.ITextModel, position: monaco.Position)\r\n         : string {\r\n        \r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let word = \"\";\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierOrArrayDescriptor(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        if (end - begin > 1) {\r\n            word = text.substring(begin, end);\r\n        } else {\r\n            end = pos;\r\n            while (end < text.length && this.isInsideOperator(text.charAt(end))) {\r\n                end++;\r\n            }\r\n    \r\n            begin = pos;\r\n            while (begin > 0 && this.isInsideOperator(text.charAt(begin - 1))) {\r\n                begin--;\r\n            }\r\n    \r\n            if (end - begin > 0) {\r\n                word = text.substring(begin, end);\r\n            }\r\n        }\r\n\r\n        return word;\r\n\r\n    }\r\n\r\n    widenDeclaration(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        identifier: string): string {\r\n\r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierChain(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        let lenght: number = identifier?.length == null ? 1 : identifier.length;\r\n\r\n        if (end - begin > length) {\r\n            return text.substring(begin, end);\r\n        }\r\n\r\n        return identifier;\r\n    }\r\n\r\n    isInsideIdentifierChain(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß_\\[\\]\\.]/i);\r\n\r\n    }\r\n\r\n    isInsideOperator(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[!%<>=\\+\\-\\*\\/]/i);\r\n\r\n    }\r\n\r\n    isInsideIdentifierOrArrayDescriptor(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß\\[\\]]/i);\r\n\r\n    }\r\n\r\n\r\n}","import { QuickFix } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyCodeActionProvider implements monaco.languages.CodeActionProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideCodeActions(model: monaco.editor.ITextModel, range: monaco.Range, context: monaco.languages.CodeActionContext, token: monaco.CancellationToken): monaco.languages.CodeActionList | Promise<monaco.languages.CodeActionList> {\r\n        const actions = context.markers.map(error => {\r\n            let quickFix: QuickFix = <any>error.relatedInformation;\r\n            if (quickFix == null) return null;\r\n\r\n            let codeAction: monaco.languages.CodeAction = {\r\n                title: quickFix.title,\r\n                diagnostics: [error],\r\n                kind: \"quickfix\",\r\n                edit: {\r\n                    edits: quickFix.editsProvider(model.uri)\r\n                },\r\n                isPreferred: true\r\n            };\r\n            return codeAction;\r\n        });\r\n        return {\r\n            actions: actions,\r\n            dispose: () => { }\r\n        }\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Editor } from \"./Editor.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyReferenceProvider implements monaco.languages.ReferenceProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideReferences(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.ReferenceContext, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Location[]> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) return null;\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let referencePositions: monaco.languages.Location[] = [];\r\n\r\n        usagePositions.forEach((upInCurrentModule, module) => {\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    referencePositions.push(\r\n                        {\r\n                            uri: module.uri,\r\n                            range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length }\r\n                        });\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        return referencePositions;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import { Main } from \"../Main.js\";\r\n\r\nexport type HelperDirection = \"top\" | \"bottom\" | \"left\" | \"right\";\r\n\r\nexport class Helper {\r\n\r\n    public static openHelper(text: string, targetElement: JQuery<HTMLElement>, direction: HelperDirection) {\r\n\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.removeClass(['jo_arrow_box_left', 'jo_arrow_box_right', 'jo_arrow_box_top', 'jo_arrow_box_bottom']);\r\n\r\n        $helper.addClass('jo_arrow_box_' + direction);\r\n\r\n        $helper.css({ left: '', right: '', top: '', bottom: '' });\r\n\r\n        let to = targetElement.offset();\r\n        let b = jQuery('body');\r\n\r\n        let delta: number = 34;\r\n\r\n        switch (direction) {\r\n            case \"bottom\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                bottom: b.height() - to.top + delta\r\n            });\r\n                break;\r\n            case \"top\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                top: to.top + targetElement.height() + 26\r\n            });\r\n                break;\r\n            case \"left\": $helper.css({\r\n                left: to.left + targetElement.width() + delta,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n            case \"right\": $helper.css({\r\n                right: b.width() - to.left,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n        }\r\n\r\n        $helper.find('span').html(text);\r\n\r\n        let $button = $helper.find('.jo_button');\r\n        $button.on('click', (e) => {\r\n            e.stopPropagation();\r\n            $button.off('click');\r\n            Helper.close();\r\n        });\r\n\r\n        $helper.fadeIn(800);\r\n\r\n    }\r\n\r\n    static close() {\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.fadeOut(800);\r\n    }\r\n\r\n\r\n    static showHelper(id: string, mainBase: Main, $element?: JQuery<HTMLElement>) {\r\n\r\n        let main: Main;\r\n        if(mainBase instanceof Main){\r\n            main = mainBase;\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        let helperHistory = main.user.settings!.helperHistory;\r\n\r\n        let flag = id + \"Done\";\r\n\r\n        if (helperHistory != null && (helperHistory[flag] == null || !helperHistory[flag])) {\r\n            helperHistory[flag] = true;\r\n            main.networkManager.sendUpdateUserSettings(() => { });\r\n\r\n            let text: string = \"\";\r\n            let direction: HelperDirection = \"left\";\r\n\r\n            switch (id) {\r\n                case \"newDatabaseHelper\":\r\n                    text = `Es gibt noch keine Datenbank. <br> Nutzen Sie den Button\r\n                        <span class='img_add-database-dark jo_inline-image'></span> um eine Datenbank anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                    case \"newSQLFileHelper\":\r\n                        text = `Es gibt noch keine Datei mit SQL-Anweisungen. <br> Nutzen Sie den Button \r\n                            <span class='img_add-file-dark jo_inline-image'></span> um eine neue Datei anzulegen.\r\n                            `;\r\n                        direction = \"left\";\r\n                        break;\r\n                case \"homeButtonHelper\":\r\n                    text = \"Mit dem Home-Button <span class='img_home-dark jo_inline-image'></span> können Sie wieder zu Ihren eigenen Workspaces wechseln.\";\r\n                    direction = \"top\";\r\n                    $element = jQuery('.img_home-dark');\r\n                    break;\r\n                case \"playButtonHelper\":\r\n                    text = `Mit dem \"Start-Button\"\r\n                        (<span class='img_start-dark jo_inline-image'></span>) \r\n                        oder der Tastenkombination &lt;Strg&gt;&nbsp;+&nbsp&lt;Enter&gt; \r\n                        wird die Anweisung ausgeführt, in der der Cursor gerade steht. \r\n                        <br> Wollen Sie mehrere Anweisungen hintereinander ausführen, so markieren \r\n                        Sie alle Anweisungen und klicken Sie dann auf <span class='img_start-dark jo_inline-image'></span>\r\n                        oder drücken Sie  &lt;Strg&gt;&nbsp;+&nbsp&lt;Enter&gt;. `;\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"consoleHelper\": \r\n                    text=`\r\n                        Hier können Sie Anweisungen oder Terme eingeben, die nach Bestätigung mit der Enter-Taste ausgeführt/ausgewertet werden. Das Ergebnis sehen Sie im Bereich über der Eingabezeile. <br>\r\n                        Falls das Programm gerade pausiert (z.B. bei Ausführung in Einzelschritten) können Sie auch auf die Variablen des aktuellen Sichtbarkeitsbereiches zugreifen.\r\n                    `;\r\n                    direction = \"bottom\";\r\n            }\r\n\r\n            if (text != \"\" && $element != null && $element.length > 0) {\r\n                Helper.openHelper(text, $element, direction);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MyCompletionItemProvider } from \"./MyCompletionItemProvider.js\";\r\nimport { defineMyJava } from \"./MyJava.js\";\r\nimport { MySignatureHelpProvider } from \"./MySignatureHelpProvider.js\";\r\nimport { MyHoverProvider } from \"./MyHoverProvider.js\";\r\nimport { MyCodeActionProvider } from \"./MyCodeActionProvider.js\";\r\nimport { MyReferenceProvider } from \"./MyReferenceProvider.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { defineVscSQL } from \"./VscSql.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\nexport class Editor {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n\r\n    cw: monaco.editor.IContentWidget = null;\r\n\r\n    dontPushNextCursorMove: number = 0;\r\n\r\n    constructor(public main: MainBase, private showMinimap: boolean, private isEmbedded: boolean) {\r\n    }\r\n\r\n    initGUI($element: JQuery<HTMLElement>) {\r\n\r\n\r\n\r\n        defineVscSQL();\r\n\r\n        monaco.editor.defineTheme('myCustomThemeDark', {\r\n            base: 'vs-dark', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'functions', foreground: 'dcdcaa', fontStyle: 'italic' },\r\n                { token: 'string.sql', foreground: '3DC9B0' },\r\n                { token: 'number', foreground: '7bef3f' },\r\n                { token: 'type', foreground: '499cd6' },\r\n                { token: 'identifier', foreground: 'effefe' },\r\n                { token: 'statement', foreground: '9cdcfe', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '619ceb', fontStyle: 'bold' },\r\n                { token: 'table', foreground: 'ff0000', fontStyle: 'bold' },\r\n                { token: 'delimiter', foreground: 'e8eb38' }\r\n                // { token: 'comment.js', foreground: '008800', fontStyle: 'bold italic underline' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#1e1e1e\",\r\n                \"jo_highlightStatementGreen\": \"#004000\",\r\n                \"jo_highlightStatementYellow\": \"#404000\",\r\n                \"jo_highlightStatementRed\": \"#402020\"\r\n            }\r\n        });\r\n\r\n        monaco.editor.defineTheme('myCustomThemeLight', {\r\n            base: 'vs', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'functions', foreground: '694E16', fontStyle: 'italic bold' },\r\n                { token: 'string.sql', foreground: 'a03030' },\r\n                { token: 'number', foreground: '404040' },\r\n                { token: 'type', foreground: '0000ff', fontStyle: 'bold' },\r\n                { token: 'identifier', foreground: '8000e0' },\r\n                { token: 'statement', foreground: '001080', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '00a000', fontStyle: 'bold' },\r\n                { token: 'comment', foreground: '808080', fontStyle: 'italic' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#FFFFFF\",\r\n                \"editor.foreground\": \"#000000\",\r\n                \"editor.inactiveSelectionBackground\": \"#E5EBF1\",\r\n                \"editorIndentGuide.background\": \"#D3D3D3\",\r\n                \"editorIndentGuide.activeBackground\": \"#939393\",\r\n                \"editor.selectionHighlightBackground\": \"#ADD6FF80\",\r\n                \"editorSuggestWidget.background\": \"#F3F3F3\",\r\n                \"activityBarBadge.background\": \"#007ACC\",\r\n                \"sideBarTitle.foreground\": \"#6F6F6F\",\r\n                \"list.hoverBackground\": \"#E8E8E8\",\r\n                \"input.placeholderForeground\": \"#767676\",\r\n                \"searchEditor.textInputBorder\": \"#CECECE\",\r\n                \"settings.textInputBorder\": \"#CECECE\",\r\n                \"settings.numberInputBorder\": \"#CECECE\",\r\n                \"statusBarItem.remoteForeground\": \"#FFF\",\r\n                \"statusBarItem.remoteBackground\": \"#16825D\",\r\n                \"jo_highlightStatementGreen\": \"#004000\",\r\n                \"jo_highlightStatementYellow\": \"#404000\",\r\n                \"jo_highlightStatementRed\": \"#400000\"\r\n            }\r\n        });\r\n\r\n\r\n        this.editor = monaco.editor.create($element[0], {\r\n            // value: [\r\n            //     'function x() {',\r\n            //     '\\tconsole.log(\"Hello world!\");',\r\n            //     '}'\r\n            // ].join('\\n'),\r\n            // language: 'myJava',\r\n            language: 'vscSQL',\r\n            lightbulb: {\r\n                enabled: true\r\n            },\r\n            // gotoLocation: {\r\n            //     multipleReferences: \"gotoAndPeek\"\r\n            // },\r\n            lineDecorationsWidth: 0,\r\n            peekWidgetDefaultFocus: \"tree\",\r\n            fixedOverflowWidgets: true,\r\n            quickSuggestions: true,\r\n            quickSuggestionsDelay: 10,\r\n            fontSize: 14,\r\n            fontFamily: \"Consolas, Roboto Mono\",\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            selectOnLineNumbers: false,\r\n            // selectionHighlight: false,\r\n            automaticLayout: true,\r\n            scrollBeyondLastLine: false,\r\n            occurrencesHighlight: false,\r\n            autoIndent: \"full\",\r\n            dragAndDrop: true,\r\n            formatOnType: true,\r\n            formatOnPaste: true,\r\n            suggestFontSize: 16,\r\n            suggestLineHeight: 22,\r\n            suggest: {\r\n                localityBonus: true,\r\n                insertMode: \"replace\"\r\n                // snippetsPreventQuickSuggestions: false\r\n            },\r\n            parameterHints: { enabled: true, cycle: true },\r\n            // //@ts-ignore\r\n            // contribInfo: {\r\n            //     suggestSelection: 'recentlyUsedByPrefix',\r\n            // },\r\n\r\n            mouseWheelZoom: this.isEmbedded,\r\n\r\n            minimap: {\r\n                enabled: this.showMinimap\r\n            },\r\n            scrollbar: {\r\n                vertical: 'auto',\r\n                horizontal: 'auto'\r\n            },\r\n            theme: \"myCustomThemeDark\",\r\n            // automaticLayout: true\r\n\r\n\r\n        }\r\n        );\r\n\r\n        let that = this;\r\n\r\n        let mouseWheelListener = (event: WheelEvent) => {\r\n            if (event.ctrlKey === true) {\r\n\r\n                that.changeEditorFontSize(Math.sign(event.deltaY), true);\r\n\r\n                event.preventDefault();\r\n            }\r\n        };\r\n\r\n\r\n        this.editor.onDidChangeConfiguration((event) => {\r\n            if (event.hasChanged(monaco.editor.EditorOption.fontInfo) && this.isEmbedded) {\r\n\r\n                this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n            }\r\n        });\r\n\r\n        this.editor.onDidChangeCursorPosition((event) => {\r\n\r\n            that.onDidChangeCursorPosition(event.position);\r\n\r\n        });\r\n\r\n        // We need this to set our model after user uses Strg+click on identifier\r\n        this.editor.onDidChangeModel((event) => {\r\n\r\n            let element: HTMLDivElement = <any>$element.find('.monaco-editor')[0];\r\n            element.removeEventListener(\"wheel\", mouseWheelListener);\r\n            element.addEventListener(\"wheel\", mouseWheelListener, { passive: false });\r\n\r\n            if (this.main.getCurrentWorkspace() == null) return;\r\n\r\n            let module = this.main.getCurrentWorkspace().getModuleByMonacoModel(this.editor.getModel());\r\n            if (this.main instanceof Main && module != null) {\r\n\r\n                this.main.projectExplorer.setActiveAfterExternalModelSet(module);\r\n            }\r\n        });\r\n\r\n        monaco.languages.registerHoverProvider('vscSQL', new MyHoverProvider(this));\r\n\r\n        monaco.languages.registerCompletionItemProvider('vscSQL', new MyCompletionItemProvider(this.main));\r\n        monaco.languages.registerCodeActionProvider('vscSQL', new MyCodeActionProvider(this.main));\r\n        monaco.languages.registerReferenceProvider('vscSQL', new MyReferenceProvider(this.main));\r\n\r\n\r\n        monaco.languages.registerSignatureHelpProvider('vscSQL', new MySignatureHelpProvider(this.main));\r\n\r\n        this.editor.onMouseDown((e: monaco.editor.IEditorMouseEvent) => {\r\n            const data = e.target.detail;\r\n            if (e.target.type !== monaco.editor.MouseTargetType.GUTTER_GLYPH_MARGIN &&\r\n                e.target.type !== monaco.editor.MouseTargetType.GUTTER_LINE_NUMBERS || data.isAfterLines) {\r\n                return;\r\n            }\r\n            that.onMarginMouseDown(e.target.position.lineNumber);\r\n            return;\r\n        });\r\n\r\n\r\n        // If editor is instantiated before fonts are loaded then indentation-lines\r\n        // are misplaced, see https://github.com/Microsoft/monaco-editor/issues/392\r\n        // so:\r\n        setTimeout(() => {\r\n            monaco.editor.remeasureFonts();\r\n        }, 2000);\r\n\r\n        this.addActions();\r\n\r\n        //@ts-ignore\r\n        this.editor.onDidType((text) => { that.onDidType(text) });\r\n\r\n        return this.editor;\r\n    }\r\n\r\n\r\n    onDidType(text: string) {\r\n        //        const endOfCommentText = \" * \\n */\";\r\n\r\n        const insertEndOfComment = (pos, insertText: string, newLine: number, newColumn: number) => {\r\n            const range = new monaco.Range(\r\n                pos.lineNumber,\r\n                pos.column,\r\n                pos.lineNumber,\r\n                pos.column\r\n            );\r\n            this.editor.executeEdits(\"new-bullets\", [\r\n                { range, text: insertText }\r\n            ]);\r\n\r\n            // Set position after bulletText\r\n            this.editor.setPosition({\r\n                lineNumber: newLine,\r\n                column: newColumn\r\n            });\r\n        };\r\n\r\n        if (text === \"\\n\") {\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            const prevLine = model.getLineContent(position.lineNumber - 1);\r\n            if (prevLine.trim().indexOf(\"/*\") === 0 && !prevLine.trimRight().endsWith(\"*/\")) {\r\n                const nextLine = position.lineNumber < model.getLineCount() ? model.getLineContent(position.lineNumber + 1) : \"\";\r\n                if (!nextLine.trim().startsWith(\"*\")) {\r\n                    let spacesAtBeginningOfLine: string = prevLine.substr(0, prevLine.length - prevLine.trimLeft().length);\r\n                    if (prevLine.trim().indexOf(\"/**\") === 0) {\r\n                        insertEndOfComment(position, \"\\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    } else {\r\n                        insertEndOfComment(position, \" * \\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    lastTime: number = 0;\r\n    setFontSize(fontSizePx: number) {\r\n\r\n        // console.log(\"Set font size: \" + fontSizePx);\r\n        let time = new Date().getTime();\r\n        if (time - this.lastTime < 150) return;\r\n        this.lastTime = time;\r\n\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (this.main instanceof Main) {\r\n            this.main.viewModeController.saveFontSize(fontSizePx);\r\n        }\r\n\r\n        if (fontSizePx != editorfs) {\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx\r\n            });\r\n\r\n            // editor does not set fontSizePx, but fontSizePx * zoomfactor with unknown zoom factor, so \r\n            // we have to do this dirty workaround:\r\n            let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n            let factor = newEditorfs / fontSizePx;\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx / factor\r\n            });\r\n\r\n        }\r\n\r\n        jQuery('.jo_editorFontSize').css('font-size', fontSizePx + \"px\");\r\n        jQuery('.jo_editorFontSize').css('line-height', (fontSizePx + 2) + \"px\");\r\n\r\n        document.documentElement.style.setProperty('--breakpoint-size', fontSizePx + 'px');\r\n        document.documentElement.style.setProperty('--breakpoint-radius', fontSizePx / 2 + 'px');\r\n\r\n\r\n        this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n    }\r\n\r\n    changeEditorFontSize(delta: number, dynamic: boolean = true) {\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (dynamic) {\r\n            if (editorfs < 10) {\r\n                delta *= 1;\r\n            } else if (editorfs < 20) {\r\n                delta *= 2;\r\n            } else {\r\n                delta *= 4;\r\n            }\r\n        }\r\n\r\n        let newEditorFs = editorfs + delta;\r\n        if (newEditorFs >= 6 && newEditorFs <= 80) {\r\n            this.setFontSize(newEditorFs);\r\n        }\r\n    }\r\n\r\n\r\n    addActions() {\r\n        let that = this;\r\n\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Find bracket',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'Finde korrespondierende Klammer',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.5,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                ed.getAction('editor.action.jumpToBracket').run();\r\n                return null;\r\n            }\r\n        });\r\n\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Execute statement',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'SQL-Anweisung ausführen',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.Enter],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.0,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                that.main.getActionManager().trigger('execute');\r\n                return null;\r\n            }\r\n        });\r\n\r\n        //console.log(this.editor.getSupportedActions());\r\n    }\r\n\r\n    onMarginMouseDown(lineNumber: number) {\r\n\r\n    }\r\n\r\n    elementDecoration: string[] = [];\r\n    onDidChangeCursorPosition(position: { lineNumber: number, column: number }) {\r\n\r\n        if (position == null) position = this.editor.getPosition();\r\n\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, []);\r\n            return;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        if (element != null) {\r\n            let usagePositions = element.usagePositions;\r\n            let upInCurrentModule = usagePositions.get(module);\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    decorations.push({\r\n                        range: { startColumn: up.column, startLineNumber: up.line, endColumn: up.column + up.length, endLineNumber: up.line },\r\n                        options: {\r\n                            className: 'jo_revealSyntaxElement', isWholeLine: false, overviewRuler: {\r\n                                color: { id: \"editorIndentGuide.background\" },\r\n                                darkColor: { id: \"editorIndentGuide.activeBackground\" },\r\n                                position: monaco.editor.OverviewRulerLane.Left\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        let executeActionActive = false;\r\n\r\n        for(let sqlStatement of module.getSQLSTatementsAtSelection(this.editor.getSelection())){\r\n\r\n            let classname = \"jo_highlightStatementGreen\";\r\n            if (sqlStatement != null) {\r\n                if (sqlStatement.hasErrors) {\r\n                    classname = \"jo_highlightStatementRed\";\r\n                    if (sqlStatement.acceptedBySQLite) {\r\n                        classname = \"jo_highlightStatementYellow\";\r\n                        executeActionActive = true;\r\n                    }\r\n                } else {\r\n                    executeActionActive = true;\r\n                }\r\n    \r\n                decorations.push({\r\n                    range: {\r\n                        startColumn: sqlStatement.from.column, startLineNumber: sqlStatement.from.line,\r\n                        endColumn: sqlStatement.to.column, endLineNumber: sqlStatement.to.line\r\n                    },\r\n                    options: {\r\n                        className: classname, isWholeLine: false, overviewRuler: {\r\n                            color: { id: classname },\r\n                            darkColor: { id: classname },\r\n                            position: monaco.editor.OverviewRulerLane.Left\r\n                        },\r\n                        minimap: {\r\n                            color: { id: classname },\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        },\r\n                        zIndex: -100\r\n                    }\r\n                })\r\n    \r\n            }\r\n        }\r\n\r\n\r\n        this.main.getActionManager().setActive('execute', executeActionActive);\r\n\r\n        if(executeActionActive && !this.main.isEmbedded()){\r\n            Helper.showHelper(\"playButtonHelper\", <any>this.main, jQuery('div.img_start-dark'));\r\n        }\r\n\r\n\r\n        this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, decorations);\r\n\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.main.getCurrentlyEditedModule();\r\n    }\r\n\r\n\r\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport function defineVscSQL() {\r\n    monaco.languages.register({\r\n        id: 'vscSQL',\r\n        extensions: ['.sql'],\r\n        //  mimetypes: [\"text/x-java-source\", \"text/x-java\"]  \r\n    });\r\n\r\n    let conf: monaco.languages.LanguageConfiguration = {\r\n        onEnterRules: [\r\n            {\r\n                // e.g. /** | */\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                afterText: /^\\s*\\*\\/$/,\r\n                action: { indentAction: monaco.languages.IndentAction.IndentOutdent, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g. /** ...|\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g.  * ...|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: '* ' }\r\n            },\r\n            {\r\n                // e.g.  */|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            },\r\n            {\r\n                // e.g.  *-----*/|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*[^/]*\\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            }\r\n        ],\r\n        comments: {\r\n            lineComment: '--',\r\n            blockComment: ['/*', '*/'],\r\n        },\r\n        brackets: [\r\n            ['{', '}'],\r\n            ['[', ']'],\r\n            ['(', ')']\r\n        ],\r\n        autoClosingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ],\r\n        surroundingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ]\r\n    };\r\n    let language = {\r\n\r\n        defaultToken: '',\r\n        tokenPostfix: '.sql',\r\n        ignoreCase: true,\r\n        brackets: [\r\n            { open: '[', close: ']', token: 'delimiter.square' },\r\n            { open: '(', close: ')', token: 'delimiter.parenthesis' }\r\n        ],\r\n        escapes: /\\\\(?:[abfnrtv\\\\\"'])/,\r\n        keywords: [\r\n            \"ABORT\", \"ACTION\", \"ADD\", \"AFTER\", \"ALL\", \"ALTER\", \"ANALYZE\", \"AND\", \"AS\", \"ASC\", \"ATTACH\", \"AUTOINCREMENT\", \"BEFORE\",\r\n            \"BEGIN\", \"BETWEEN\", \"BY\", \"CASCADE\", \"CASE\", \"CAST\", \"CHECK\", \"COLLATE\", \"COLUMN\", \"COMMIT\", \"CONFLICT\", \"CONSTRAINT\",\r\n            \"CREATE\", \"CROSS\", \"CURRENT_DATE\", \"CURRENT_TIME\", \"CURRENT_TIMESTAMP\", \"DATABASE\", \"DEFAULT\", \"DEFERRABLE\", \"DEFERRED\",\r\n            \"DELETE\", \"DESC\", \"DETACH\", \"DISTINCT\", \"DROP\", \"EACH\", \"ELSE\", \"END\", \"ESCAPE\", \"EXCEPT\", \"EXCLUSIVE\", \"EXISTS\", \"EXPLAIN\",\r\n            \"FAIL\", \"FOR\", \"FOREIGN\", \"FROM\", \"FULL\", \"GLOB\", \"GROUP\", \"HAVING\", \"IF\", \"IGNORE\", \"IMMEDIATE\", \"IN\", \"INDEX\", \"INDEXED\",\r\n            \"INITIALLY\", \"INNER\", \"INSERT\", \"INSTEAD\", \"INTERSECT\", \"INTO\", \"IS\", \"ISNULL\", \"JOIN\", \"KEY\", \"LEFT\", \"LIKE\", \"LIMIT\", \"MATCH\",\r\n            \"NATURAL\", \"NO\", \"NOT\", \"NOTNULL\", \"NULL\", \"OF\", \"OFFSET\", \"ON\", \"OR\", \"ORDER\", \"OUTER\", \"PLAN\", \"PRAGMA\", \"PRIMARY\", \"QUERY\",\r\n            \"RAISE\", \"RECURSIVE\", \"REFERENCES\", \"REGEXP\", \"REINDEX\", \"RELEASE\", \"RENAME\", \"REPLACE\", \"RESTRICT\", \"RIGHT\", \"ROLLBACK\", \"ROW\",\r\n            \"SAVEPOINT\", \"SELECT\", \"SET\", \"TABLE\", \"TEMP\", \"TEMPORARY\", \"THEN\", \"TO\", \"TRANSACTION\", \"TRIGGER\", \"UNION\", \"UNIQUE\", \"UPDATE\",\r\n            \"USING\", \"VACUUM\", \"VALUES\", \"VIEW\", \"VIRTUAL\", \"WHEN\", \"WHERE\", \"WITH\", \"WITHOUT\", \"ENGINE\", \"CHARSET\"\r\n        ],\r\n        operators: [\r\n            \"AND\", \"BETWEEN\", \"IN\", \"LIKE\", \"NOT\", \"OR\", \"IS\", \"NULL\", \"INTERSECT\", \"UNION\", \"INNER\", \"JOIN\", \"LEFT\", \"OUTER\", \"RIGHT\"\r\n        ],\r\n        builtinFunctions: [\r\n            \"abs\", \"changes\", \"char\", \"coalesce\", \"count\", \"glob\", \"hex\", \"ifnull\",\r\n            \"iif\", \"instr\", \"last_insert_rowid\", \"length\", \"like\", \"likelihood\", \"likely\",\r\n            \"lower\", \"ltrim\", \"max\", \"min\", \"nullif\", \"quote\", \"random\", \"randomblob\",\r\n            \"replace\", \"round\", \"rtrim\", \"sign\", \"soundex\", \"sqlite_version\", \"substr\", \"substring\",\r\n            \"total_changes\", \"trim\", \"typeof\", \"unicode\", \"unlikely\", \"upper\", \"zeroblob\"\r\n        ],\r\n        builtinVariables: [\r\n            // NOT SUPPORTED\r\n        ],\r\n        pseudoColumns: [\r\n            // NOT SUPPORTED\r\n        ],\r\n        tokenizer: {\r\n            root: [\r\n                { include: '@comments' },\r\n                { include: '@whitespace' },\r\n                { include: '@pseudoColumns' },\r\n                { include: '@numbers' },\r\n                { include: '@strings' },\r\n                { include: '@complexIdentifiers' },\r\n                { include: '@scopes' },\r\n                [/[;,.]/, 'delimiter'],\r\n                [/[()]/, '@brackets'],\r\n                [/[a-z_$äöü][\\w$äöüßÄÖÜ]*(?=\\()/, {\r\n                    cases: {\r\n                        '@builtinFunctions': 'functions',\r\n                        '@keywords': 'keyword',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[\\w@#$]+/, {\r\n                    cases: {\r\n                        '@keywords': 'keyword',\r\n                        '@operators': 'operator',\r\n                        '@builtinVariables': 'predefined',\r\n                        // '@builtinFunctions': 'functions',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[<>=!%&+\\-*/|~^]/, 'operator'],\r\n            ],\r\n            whitespace: [\r\n                [/\\s+/, 'white']\r\n            ],\r\n            comments: [\r\n                [/--+.*/, 'comment'],\r\n                [/\\/\\*/, { token: 'comment.quote', next: '@comment' }]\r\n            ],\r\n            comment: [\r\n                [/[^*/]+/, 'comment'],\r\n                // Not supporting nested comments, as nested comments seem to not be standard?\r\n                // i.e. http://stackoverflow.com/questions/728172/are-there-multiline-comment-delimiters-in-sql-that-are-vendor-agnostic\r\n                // [/\\/\\*/, { token: 'comment.quote', next: '@push' }],    // nested comment not allowed :-(\r\n                [/\\*\\//, { token: 'comment.quote', next: '@pop' }],\r\n                [/./, 'comment']\r\n            ],\r\n            pseudoColumns: [\r\n                [/[$][A-Za-z_][\\w@#$]*/, {\r\n                    cases: {\r\n                        '@pseudoColumns': 'predefined',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n            ],\r\n            numbers: [\r\n                [/0[xX][0-9a-fA-F]*/, 'number'],\r\n                [/[$][+-]*\\d*(\\.\\d*)?/, 'number'],\r\n                [/((\\d+(\\.\\d*)?)|(\\.\\d+))([eE][\\-+]?\\d+)?/, 'number']\r\n            ],\r\n            strings: [\r\n                [/'/, { token: 'string', next: '@string' }],\r\n            ],\r\n            string: [\r\n                [/[^\\\\']+/, 'string'],\r\n                [/\\\\./, 'string.escape.invalid'],\r\n                [/''/, 'string'],\r\n                [/'/, { token: 'string', next: '@pop' }]\r\n            ],\r\n            complexIdentifiers: [\r\n                [/\"/, { token: 'identifier.quote', next: '@quotedIdentifier' }]\r\n            ],\r\n            quotedIdentifier: [\r\n                [/[^\"]+/, 'identifier'],\r\n                [/\"\"/, 'identifier'],\r\n                [/\"/, { token: 'identifier.quote', next: '@pop' }]\r\n            ],\r\n            scopes: [\r\n                // NOT SUPPORTED\r\n            ]\r\n        }\r\n\r\n\r\n\r\n    };\r\n\r\n    //@ts-ignore\r\n    monaco.languages.setLanguageConfiguration('vscSQL', conf);\r\n    //@ts-ignore\r\n    monaco.languages.setMonarchTokensProvider('vscSQL', language);\r\n\r\n\r\n\r\n}","export class WorkerSim {\r\n\r\n    //@ts-ignore\r\n    initsql = initSqlJs({locateFile: (path, scriptDirectory) => \"https://embed.learn-sql.de/include/lib/sql.js/sql-wasm.wasm\"});\r\n    db;\r\n    SQL;\r\n\r\n    onmessage: (event: {data: any}) => void;\r\n\r\n    onError: (event: ErrorEvent) => void;\r\n\r\n    postMessageToClient(message: any) {\r\n        this.onmessage({data: message})\r\n    }\r\n\r\n    postMessage(data: any){\r\n        let that = this;\r\n        if (that.db == null) {\r\n            that.initsql.then((SQL1) => {\r\n                that.SQL = SQL1;\r\n                that.db = createDb(SQL1, undefined);\r\n                that.worker(data);\r\n            }).catch((err) => {\r\n                console.log(err);\r\n                //@ts-ignore\r\n                return that.postMessageToClient({\r\n                    id: this[\"data\"][\"id\"],\r\n                    error: err[\"message\"]\r\n                });\r\n            })\r\n        } else {\r\n            that.worker(data);\r\n        }\r\n    }\r\n\r\n    terminate() {\r\n\r\n    }\r\n\r\n    worker(data: any) {\r\n        var buff; var result;\r\n        var config = data[\"config\"] ? data[\"config\"] : {};\r\n        try {\r\n            switch (data && data[\"action\"]) {\r\n                case \"open\":\r\n                    buff = data[\"buffer\"];\r\n                    this.db = createDb(this.SQL, buff && new Uint8Array(buff));\r\n                    //@ts-ignore\r\n                    return this.postMessageToClient({\r\n                        id: data[\"id\"],\r\n                        ready: true\r\n                    });\r\n                case \"exec\":\r\n                    if (this.db === null) {\r\n                        this.db = createDb(this.SQL, undefined);\r\n                    }\r\n                    if (!data[\"sql\"]) {\r\n                        throw \"exec: Missing query string\";\r\n                    }\r\n                    //@ts-ignore\r\n                    return this.postMessageToClient({\r\n                        id: data[\"id\"],\r\n                        results: this.db.exec(data[\"sql\"], data[\"params\"], config)\r\n                    });\r\n                case \"each\":\r\n                    if (this.db === null) {\r\n                        this.db = createDb(this.SQL, undefined);\r\n                    }\r\n                    var callback = function callback(row) {\r\n                        //@ts-ignore\r\n                        return this.postMessage({\r\n                            id: data[\"id\"],\r\n                            row: row,\r\n                            finished: false\r\n                        });\r\n                    };\r\n                    var done = function done() {\r\n                        //@ts-ignore\r\n                        return this.postMessage({\r\n                            id: data[\"id\"],\r\n                            finished: true\r\n                        });\r\n                    };\r\n                    return this.db.each(data[\"sql\"], data[\"params\"], callback, done, config);\r\n                case \"export\":\r\n                    buff = this.db[\"export\"]();\r\n                    result = {\r\n                        id: data[\"id\"],\r\n                        results: [\r\n                            {\r\n                                buffer: buff\r\n                            }\r\n                        ]\r\n                    };\r\n                    try {\r\n                        //@ts-ignore\r\n                        return this.postMessageToClient(result);\r\n                    } catch (error) {\r\n                        //@ts-ignore\r\n                        return this.postMessageToClient(result);\r\n                    }\r\n                case \"close\":\r\n                    if (this.db) {\r\n                        this.db.close();\r\n                    }\r\n                    //@ts-ignore\r\n                    return this.postMessageToClient({\r\n                        id: data[\"id\"]\r\n                    });\r\n                default:\r\n                    throw new Error(\"Invalid action : \" + (data && data[\"action\"]));\r\n            }\r\n\r\n        } catch (err) {\r\n\r\n            //@ts-ignore\r\n            return this.postMessageToClient({\r\n                id: data[\"id\"],\r\n                error: err[\"message\"]\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import { MainBase } from \"../main/MainBase.js\";\r\nimport { WorkerSim } from \"../sqljs-worker/sqljsWorkerSim.js\";\r\n\r\nexport type DatabaseDumpType = \"binaryUncompressed\" | \"binaryCompressed\" | \"other\";\r\n\r\nexport type DatabaseDirectoryEntry = {\r\n    name: string,\r\n    description: string,\r\n    filename: string\r\n}\r\n\r\nexport type QueryResult = {\r\n    columns: string[],\r\n    values: any[][],\r\n    buffer?: Uint8Array\r\n}\r\n\r\nexport type QuerySuccessCallback = (results: QueryResult[]) => void;\r\nexport type QueryErrorCallback = (error: string) => void;\r\n\r\nexport type ColumnStructure = {\r\n    name: string;\r\n    table: TableStructure;\r\n\r\n    typeLengths?: number[]; // for varchar(5), ...\r\n    completeTypeSQL: string;\r\n\r\n    references?: ColumnStructure;\r\n    referencesRawData?: any[];\r\n    isPrimaryKey: boolean;\r\n    isAutoIncrement: boolean;\r\n\r\n    notNull: boolean;\r\n    defaultValue: string;\r\n\r\n    dumpValueFunction?: (any) => string\r\n}\r\n\r\nexport type TableStructure = {\r\n    name: string;\r\n    size: number;\r\n    columns: ColumnStructure[];\r\n    completeSQL: string;\r\n}\r\n\r\nexport type DatabaseStructure = {\r\n    tables: TableStructure[]\r\n}\r\n\r\n\r\nexport class DatabaseTool {\r\n\r\n    databaseDirectoryEntries: DatabaseDirectoryEntry[] = null;\r\n\r\n    worker: Worker;\r\n\r\n    queryId: number = 0;\r\n\r\n    querySuccessCallbacksMap: Map<number, QuerySuccessCallback> = new Map();\r\n    queryErrorCallbackMap: Map<number, QueryErrorCallback> = new Map();\r\n\r\n    databaseStructure: DatabaseStructure;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    initializeWorker(template: Uint8Array, queries: string[], callbackAfterInitializing?: (errors: string[]) => void,\r\n        callbackAfterRetrievingStructure?: () => void) {\r\n        \r\n        this.main.getWaitOverlay().show('Bitte warten, die Datenbank wird initialisiert...');\r\n        \r\n            if (this.worker != null) {\r\n            this.worker.terminate();\r\n        }\r\n\r\n        let t = performance.now();\r\n\r\n        // console.log(\"Starting worker...\");\r\n\r\n        let url: string = \"js/sqljs-worker/sqljsWorker.js\"\r\n        if(this.main.isEmbedded()){\r\n            //@ts-ignore\r\n            url = window.javaOnlineDir + url;\r\n        }\r\n\r\n        //@ts-ignore\r\n        if(window.jo_doc){\r\n            //@ts-ignore\r\n            this.worker = new WorkerSim();\r\n        } else {\r\n            this.worker = new Worker(url);\r\n        }\r\n        let that = this;\r\n\r\n        let errors: string[] = [];\r\n\r\n        this.worker.onmessage = () => {\r\n            // console.log(\"Database opened (\" + (performance.now() - t)/1000 + \" s)\");\r\n            that.worker.onmessage = event => {\r\n\r\n                // console.log(event.data);\r\n\r\n                let id = event.data.id;\r\n                if (event.data.error == null) {\r\n                    let querySuccessCallback = that.querySuccessCallbacksMap.get(id);\r\n                    if (querySuccessCallback != null) {\r\n                        querySuccessCallback(event.data.results);\r\n                    }\r\n                } else {\r\n                    let queryErrorCallback = that.queryErrorCallbackMap.get(id);\r\n                    if (queryErrorCallback != null) {\r\n                        queryErrorCallback(event.data.error);\r\n                    }\r\n                }\r\n\r\n                // if(event.data.buffer){\r\n                //     console.log(event.data.buffer);\r\n                // }\r\n\r\n\r\n                this.queryErrorCallbackMap.delete(id);\r\n                this.querySuccessCallbacksMap.delete(id);\r\n\r\n            };\r\n\r\n            if(queries == null) queries = [];\r\n            queries = queries.slice();\r\n            queries.unshift(\"PRAGMA foreign_keys = OFF;\")\r\n            queries.push(\"PRAGMA foreign_keys = ON;\")\r\n            let queryCount = queries.length;\r\n\r\n            let execQuery = () => {\r\n                if (queries.length > 0) {\r\n                    this.main.getWaitOverlay().setProgress(`${Math.round((1-queries.length/queryCount)*100) + \" %\"}`)\r\n                    let query = queries.shift();\r\n                    that.executeQuery(query, (result) => {\r\n                        execQuery();\r\n                    }, (error) => {\r\n                        errors.push(\"Error while setting up database: \" + error + \", query: \" + query);\r\n                        console.log({\"error\": \"Error while setting up database: \" + error, \"query\": query});\r\n                        console.log()\r\n                        execQuery();\r\n                    })\r\n                } else {\r\n                    if (callbackAfterInitializing != null) callbackAfterInitializing(errors);\r\n                    that.retrieveDatabaseStructure(() => {\r\n                        // console.log(\"Database structure retrieved (\" + (performance.now() - t)/1000 + \" s)\");\r\n                        if (callbackAfterRetrievingStructure) callbackAfterRetrievingStructure();\r\n                        this.main.getWaitOverlay().hide();\r\n\r\n                    });\r\n                }\r\n            }\r\n\r\n            execQuery();\r\n\r\n            // that.executeQuery(sql, (result) => {\r\n            //     // console.log(\"Template written (\" + (performance.now() - t)/1000 + \" s)\");\r\n\r\n            //     if (callbackAfterInitializing != null) callbackAfterInitializing();\r\n            //     that.retrieveDatabaseStructure(() => {\r\n            //         // console.log(\"Database structure retrieved (\" + (performance.now() - t)/1000 + \" s)\");\r\n            //         if (callbackAfterRetrievingStructure) callbackAfterRetrievingStructure();\r\n            //         jQuery('#bitteWarten').css('display', 'none');\r\n\r\n            //     });\r\n            //     // that.executeQuery(\"select * from test\", (results: QueryResult[]) => {console.log(results)}, (error) => {console.log(\"Error:\" + error)});\r\n            // },\r\n            //     (error) => {\r\n            //         console.log(\"Error while setting up database: \" + error);\r\n            //     });\r\n\r\n            // that.worker.postMessage({\r\n            //     action: \"export\"\r\n            // })\r\n\r\n        };\r\n\r\n        this.worker.onerror = (e) => {\r\n            errors.push(\"Worker error: \" + e.error);\r\n            console.log(\"Worker error: \" + e.error);\r\n        }\r\n\r\n        this.worker.postMessage({\r\n            id: that.queryId++,\r\n            action: \"open\",\r\n            buffer: template, /*Optional. An ArrayBuffer representing an SQLite Database file*/\r\n        });\r\n\r\n    }\r\n\r\n    executeQuery(query: string, successCallback: QuerySuccessCallback, errorCallback: QueryErrorCallback) {\r\n\r\n        let id = this.queryId++;\r\n\r\n        this.querySuccessCallbacksMap.set(id, successCallback);\r\n        this.queryErrorCallbackMap.set(id, errorCallback);\r\n\r\n        this.worker.postMessage({\r\n            id: id,\r\n            action: \"exec\",\r\n            sql: query,\r\n            params: {}\r\n        });\r\n\r\n    }\r\n\r\n    export(successCallback: (buffer: Uint8Array) => void, errorCallback: QueryErrorCallback) {\r\n\r\n        let id = this.queryId++;\r\n\r\n        this.querySuccessCallbacksMap.set(id, (results) => { successCallback(results[0].buffer)  });\r\n        this.queryErrorCallbackMap.set(id, errorCallback);\r\n\r\n        this.worker.postMessage({\r\n            id: id,\r\n            action: \"export\",\r\n            params: {}\r\n        });\r\n\r\n    }\r\n\r\n    \r\n\r\n    getDirectoryEntries(callback: (entries: DatabaseDirectoryEntry[]) => void) {\r\n        if (this.databaseDirectoryEntries != null) {\r\n            callback(this.databaseDirectoryEntries);\r\n        } else {\r\n            jQuery.getJSON(\"assets/databases/directory.json\", function (entries: DatabaseDirectoryEntry[]) {\r\n                callback(entries);\r\n            });\r\n        }\r\n    }\r\n\r\n    retrieveDatabaseStructure(callback: (dbStructure: DatabaseStructure) => void) {\r\n\r\n        /*\r\n            @see https://stackoverflow.com/questions/6460671/sqlite-schema-information-metadata\r\n        */\r\n        let sql = `SELECT name, sql FROM sqlite_master WHERE type='table';`\r\n        let that = this;\r\n\r\n        this.executeQuery(sql, (result) => {\r\n            let sql1 = \"\";\r\n            result[0]?.values?.forEach(value => sql1 += `PRAGMA table_info(${value[0]});\\nPRAGMA foreign_key_list(${value[0]});\\nselect count(*) from ${value[0]};\\n\\n`)\r\n\r\n            if (sql1 != \"\") {\r\n                this.executeQuery(sql1, (result1) => {\r\n                    // console.log(\"DB structure: \");\r\n                    // console.log(result1);\r\n\r\n                    that.databaseStructure = that.parseDatabaseStructure(result, result1)\r\n\r\n                    callback(that.databaseStructure);\r\n\r\n                }, (error) => { console.log(error)});\r\n            } else {\r\n                that.databaseStructure = { tables: [] };\r\n                callback(that.databaseStructure);\r\n            }\r\n\r\n        }, (error) => { console.log(error) });\r\n\r\n\r\n    }\r\n\r\n    parseDatabaseStructure(tables: QueryResult[], columns: QueryResult[]): DatabaseStructure {\r\n        this.databaseStructure = {\r\n            tables: []\r\n        };\r\n\r\n        let tableNameToStructureMap: Map<string, TableStructure> = new Map();\r\n\r\n        let index = 0;\r\n        for (let i = 0; i < tables[0].values.length; i++) {\r\n            let tableName = tables[0].values[i][0];\r\n            let tableSQL = tables[0].values[i][1];\r\n\r\n            let tableStructure: TableStructure = {\r\n                name: tableName,\r\n                size: 0,\r\n                completeSQL: tableSQL,\r\n                columns: []\r\n            }\r\n\r\n            tableNameToStructureMap.set(tableName, tableStructure);\r\n\r\n            this.databaseStructure.tables.push(tableStructure);\r\n\r\n            let columnArray = columns[index].values;\r\n            let foreignKeyList: any[][] = null;\r\n            if (columns.length > index + 1 && columns[index + 1].columns[0] == \"id\") {\r\n                foreignKeyList = columns[index + 1].values;\r\n                index++;\r\n            }\r\n            index++;\r\n            let size: number = columns[index].values[0][0];\r\n            index++;\r\n\r\n            tableStructure.size = size;\r\n\r\n            columnArray.forEach(columnArray1 => {\r\n                let cid: number = columnArray1[0];\r\n                let name: string = columnArray1[1];\r\n                let type: string = columnArray1[2];\r\n                let notNull: boolean = columnArray1[3] == 1;\r\n                let dflt_value: string = columnArray1[4];\r\n                let isPrimaryKey: boolean = columnArray1[5] != 0;\r\n\r\n                let columnStructure: ColumnStructure = {\r\n                    name: name,\r\n                    isPrimaryKey: isPrimaryKey,\r\n                    isAutoIncrement: isPrimaryKey && tableSQL.toLowerCase().indexOf(\"autoincrement\") >= 0,\r\n                    completeTypeSQL: type,\r\n                    table: tableStructure,\r\n                    typeLengths: [],\r\n                    defaultValue: dflt_value,\r\n                    notNull: notNull\r\n                }\r\n                /*\r\n                    columns: (8) [\"id\", \"seq\", \"table\", \"from\", \"to\", \"on_update\", \"on_delete\", \"match\"]\r\n                    values: Array(1)\r\n                    0: (8) [0, 0, \"land\", \"LNR\", \"lnr\", \"NO ACTION\", \"NO ACTION\", \"NONE\"]\r\n                */\r\n\r\n                if (foreignKeyList != null) {\r\n                    let fkInfo: any[] = foreignKeyList.find(foreignKeyInfo => foreignKeyInfo[3].toLocaleLowerCase() == name.toLocaleLowerCase());\r\n                    if (fkInfo != null) {\r\n                        columnStructure.referencesRawData = fkInfo;\r\n                    }\r\n                }\r\n\r\n                tableStructure.columns.push(columnStructure);\r\n\r\n            });\r\n\r\n        }\r\n\r\n        for (let ts of this.databaseStructure.tables) {\r\n            for (let cs of ts.columns) {\r\n                if (cs.referencesRawData != null) {\r\n                    let table = tableNameToStructureMap.get(cs.referencesRawData[2]);\r\n                    // SQlite doesn't remove foreign key references to columns of a dropped table\r\n                    if(table == null) continue;\r\n                    let column = table.columns.find(c => c.name.toLocaleLowerCase() == cs.referencesRawData[4].toLocaleLowerCase());\r\n                    cs.references = column;\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log(this.databaseStructure);\r\n\r\n        return this.databaseStructure;\r\n\r\n    }\r\n\r\n    static getDumpType(dump: Uint8Array): DatabaseDumpType {\r\n\r\n        let sqliteMagicBytes: number[] = [0x53, 0x51, 0x4c, 0x69, 0x74, 0x65];\r\n        let zlibMagicByte: number = 0x78;\r\n\r\n        let found: boolean = true;\r\n        for (let i = 0; i < sqliteMagicBytes.length; i++) {\r\n            if (sqliteMagicBytes[i] != dump[i]) {\r\n                found = false;\r\n                break;\r\n            }\r\n        }\r\n        if (found) return \"binaryUncompressed\";\r\n\r\n        if (dump[0] == zlibMagicByte) return \"binaryCompressed\";\r\n\r\n        return \"other\";\r\n\r\n    }\r\n\r\n\r\n}","import { TokenType } from \"../lexer/Token.js\";\r\nimport { ASTNode, ConstantNode, CreateTableColumnNode, CreateTableNode, ForeignKeyInfo, InsertNode } from \"./AST.js\";\r\nimport { SQLStatement } from \"./Parser.js\";\r\n\r\nexport class StatementCleaner {\r\n\r\n    MaxRowsPerInsert: number = 300;\r\n\r\n    clean(statement: SQLStatement): string {\r\n        switch (statement.ast.type) {\r\n            case TokenType.keywordCreate:   // Create Table statement\r\n                statement.sqlCleaned = this.cleanCreateTableStatement(statement.ast);\r\n                return statement.sqlCleaned;\r\n            case TokenType.keywordInsert:\r\n                if(statement.ast.select != null){\r\n                    return statement.sql;\r\n                } else {\r\n                    statement.sqlCleaned = this.cleanInsertStatement(statement.ast);\r\n                    return statement.sqlCleaned;\r\n                }\r\n            default:\r\n                return statement.sql;\r\n                break;\r\n        }\r\n    }\r\n\r\n    cleanInsertStatement(ast: InsertNode): string {\r\n        let statementHeader: string = `insert into ${ast.table.identifier}`;\r\n\r\n        if (ast.columnList != null && ast.columnList.length > 0) {\r\n            statementHeader += `(${ast.columnList.map(c => this.escapeIdentifier(c.identifier)).join(\", \")})`;\r\n        }\r\n\r\n        statementHeader += '\\nvalues\\n';\r\n\r\n        let st = \"\";\r\n\r\n        let lines: string[] = [];\r\n        if (ast.values != null && ast.values.length > 0) {\r\n            for (let vline of ast.values) {\r\n                lines.push(`\\n(${vline.map(v => this.cleanValue(v)).join(\", \")})`);\r\n            }\r\n            //st += lines.join(\",\\n\");\r\n        }\r\n\r\n        while (lines.length > 0) {\r\n            st += statementHeader;\r\n            st += lines.splice(0, Math.max(this.MaxRowsPerInsert, lines.length)).join(\",\\n\");\r\n            st += \";\\n\";\r\n        }\r\n\r\n        return st;\r\n\r\n    }\r\n\r\n    cleanValue(v: ConstantNode) {\r\n        if (v.constantType == TokenType.stringConstant) {\r\n            let s: string = v.constant;\r\n            s = s.replace(/'/g, \"''\");\r\n            return `'${s}'`;\r\n        } else {\r\n            return v.constant;\r\n        }\r\n    }\r\n\r\n    cleanCreateTableStatement(ast: CreateTableNode): string {\r\n        let st: string = `create table ${ast.ifNotExists ? \" if not exists\" : \"\"} ${this.escapeIdentifier(ast.identifier)}(\\n   `;\r\n\r\n        st += ast.columnList.map(column => this.cleanColumnDef(column)).join(\",\\n   \");\r\n        if (ast.foreignKeyInfoList != null && ast.foreignKeyInfoList.length > 0) {\r\n            st += \",\\n   \" + ast.foreignKeyInfoList.map(fki => this.cleanForeignKeyInfo(fki)).join(\",\\n   \");\r\n        }\r\n\r\n        let pkc = ast.combinedPrimaryKeyColumns.slice().map(s => s.toLocaleLowerCase());\r\n        for (let column of ast.columnList) {\r\n            let c = column.identifier.toLocaleLowerCase();\r\n            if (column.isAutoIncrement && pkc.indexOf(c) >= 0) {\r\n                pkc.splice(pkc.indexOf(c), 1);\r\n            }\r\n        }\r\n\r\n        if (pkc.length > 0) {\r\n            st += `,\\n   primary key(${this.escapeIdentifiers(pkc).join(\", \")})`;\r\n        }\r\n\r\n        if (ast.uniqueConstraints.length > 0) {\r\n            st += \",\\n   \" + ast.uniqueConstraints.map(uk => 'unique(' + this.escapeIdentifiers(uk).join(\", \") + \")\").join(\",\\n   \");\r\n        }\r\n\r\n        st += '\\n);';\r\n\r\n        return st;\r\n    }\r\n\r\n    cleanForeignKeyInfo(fki: ForeignKeyInfo): string {\r\n        let fkiString = `foreign key (${this.escapeIdentifier(fki.column)}) references ${this.escapeIdentifier(fki.referencesTable)}(${this.escapeIdentifier(fki.referencesColumn)})`;\r\n        if (fki.onDelete) {\r\n            fkiString += ` on delete ` + fki.onDelete;\r\n        }\r\n        if (fki.onUpdate) {\r\n            fkiString += ` on update ` + fki.onUpdate;\r\n        }\r\n        return fkiString;\r\n    }\r\n\r\n    cleanColumnDef(column: CreateTableColumnNode): string {\r\n\r\n        let type = column.baseType.toString();\r\n        if (type == \"int\" && column.isAutoIncrement) {\r\n            type = \"integer\";\r\n        }\r\n\r\n        let st: string = `${this.escapeIdentifier(column.identifier)} ${type}`;\r\n        if (column.parameters != null && column.parameters.length > 0 && !column.isAutoIncrement) {\r\n            st += `(${column.parameters.join(\", \")})`;\r\n        }\r\n        if (column.notNull) {\r\n            st += \" not null\";\r\n        }\r\n        if (column.defaultValue != null) {\r\n            st += \" default \" + column.defaultValue;\r\n        }\r\n        if (column.isPrimary || column.isAutoIncrement) {\r\n            st += \" primary key\";\r\n        }\r\n        if (column.isAutoIncrement) {\r\n            st += \" autoincrement\";\r\n        }\r\n        if (column.foreignKeyInfo != null) {\r\n            let fki = column.foreignKeyInfo;\r\n            let c: string = fki.referencesColumn;\r\n            if (fki.referencesTable) c = this.escapeIdentifier(fki.referencesTable) + \"(\" + this.escapeIdentifier(c) + \")\";\r\n            st += \" references \" + c;\r\n        }\r\n        if (column.collate != null) {\r\n            let collate = column.collate.toLocaleLowerCase();\r\n            if ([\"binary\", \"nocase\", \"rtrim\"].indexOf(collate) >= 0) {\r\n                st += \" collate \" + collate;\r\n            }\r\n        }\r\n        let parameters = column.parameters ? column.parameters : [0, 0];\r\n        let checkFunction = column.baseType.checkFunction(this.escapeIdentifier(column.identifier), parameters);\r\n        if (checkFunction != \"\") {\r\n            st += \" \" + checkFunction;\r\n        }\r\n        return st;\r\n    }\r\n\r\n    escapeIdentifier(id: string){\r\n        return '\"' + id + '\"';\r\n    }\r\n\r\n    escapeIdentifiers(list: string[]):string[] {\r\n        return list.map(this.escapeIdentifier);\r\n    }\r\n\r\n}","import { Lexer } from \"../compiler/lexer/Lexer.js\";\r\nimport { TokenType } from \"../compiler/lexer/Token.js\";\r\nimport { AlterTableNode, CreateTableNode, InsertNode } from \"../compiler/parser/AST.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { Parser, SQLStatement } from \"../compiler/parser/Parser.js\";\r\nimport { StatementCleaner } from \"../compiler/parser/StatementCleaner.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { LoadableDatabase } from \"./DatabaseLoader.js\";\r\nimport { DatabaseTool } from \"./DatabaseTools.js\";\r\n\r\nexport class MySqlImporter {\r\n\r\n    private createTableNodes: CreateTableNode[];\r\n    private insertNodes: InsertNode[];\r\n    private tableModifyingNodes: AlterTableNode[];\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    async loadFromUrl(url: string): Promise<LoadableDatabase> {\r\n        if (url == null) return;\r\n\r\n        let text = null;\r\n        if (url.endsWith(\".zip\")) {\r\n            text = await this.unzipURL(url);\r\n        } else {\r\n            text = await (await fetch(url)).text();\r\n        }\r\n\r\n        return this.importFromText(text);\r\n    }\r\n\r\n    async loadFromFile(file: globalThis.File): Promise<LoadableDatabase> {\r\n        if (file == null) return;\r\n\r\n        if (file.name.endsWith(\".zip\")) {\r\n            let text = await this.unzipFile(file);\r\n            return this.importFromText(text);\r\n        } else {\r\n\r\n            return new Promise<LoadableDatabase>(\r\n                (resolve, reject) => {\r\n                    var reader = new FileReader();\r\n                    reader.onload = (event) => {\r\n                        let text = <string>event.target.result;\r\n                        resolve(this.importFromText(text));\r\n                    };\r\n                    reader.readAsText(file);\r\n                }\r\n            )\r\n\r\n\r\n        }\r\n    }\r\n\r\n    async unzipURL(url: string): Promise<string> {\r\n        //@ts-ignore\r\n        const reader = new zip.ZipReader(new zip.HttpReader(url));\r\n        return this.unzipIntern(reader);\r\n    }\r\n\r\n    async unzipFile(file: globalThis.File): Promise<string> {\r\n        // create a BlobReader to read with a ZipReader the zip from a Blob object\r\n        //@ts-ignore\r\n        const reader = new zip.ZipReader(new zip.BlobReader(file));\r\n        return this.unzipIntern(reader);\r\n    }\r\n\r\n    async unzipIntern(reader: any): Promise<string> {\r\n        // get all entries from the zip\r\n        let entries = await reader.getEntries();\r\n        entries = entries.filter(entry => entry.filename.endsWith(\".sql\"))\r\n        let text: string = \"\";\r\n        if (entries.length) {\r\n            for(let entry of entries){\r\n                // get first entry content as text by using a TextWriter\r\n                text += await entry.getData(\r\n                    // writer\r\n                    //@ts-ignore\r\n                    new zip.TextWriter(),\r\n                    // options\r\n                    {\r\n                        onprogress: (index, max) => {\r\n                            // onprogress callback\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        }\r\n\r\n        // close the ZipReader\r\n        await reader.close();\r\n\r\n        return text;\r\n    }\r\n\r\n    private async importFromText(text: string): Promise<LoadableDatabase> {\r\n        if (text == null) return null;\r\n\r\n        let lexer: Lexer = new Lexer();\r\n        let lexOutput = lexer.lex(text);\r\n\r\n        let parser: Parser = new Parser();\r\n        let m: Module = new Module({\r\n            dirty: false,\r\n            name: \"\",\r\n            saved: true,\r\n            student_edited_after_revision: false,\r\n            submitted_date: null,\r\n            text: text,\r\n            text_before_revision: null,\r\n            version: 0\r\n        }, this.main);\r\n        m.tokenList = lexOutput.tokens;\r\n\r\n        parser.parse(m);\r\n\r\n        this.createTableNodes = m.sqlStatements.filter(st => st.ast.type == TokenType.keywordCreate).map(st => <CreateTableNode>st.ast);\r\n        this.insertNodes = m.sqlStatements.filter(st => st.ast.type == TokenType.keywordInsert).map(st => <InsertNode>st.ast);\r\n        this.tableModifyingNodes = m.sqlStatements.filter(st => st.ast.type == TokenType.keywordAlter &&\r\n            (<AlterTableNode>st.ast).kind == \"omittedKind\").map(st => <AlterTableNode>st.ast);\r\n\r\n        for (let tmn of this.tableModifyingNodes) {\r\n            let createTableNode = this.findCreateTableNode(tmn.tableIdentifier);\r\n            if (createTableNode == null) continue;\r\n\r\n            if (tmn.primaryKeys != null) {\r\n                createTableNode.combinedPrimaryKeyColumns = tmn.primaryKeys;\r\n                createTableNode.columnList.forEach(c => c.isPrimary = false);\r\n            }\r\n\r\n            if (tmn.autoIncrementColumn != null) {\r\n                let pcn = this.findCreateTableColumnNode(createTableNode, tmn.autoIncrementColumn);\r\n                if (pcn != null) pcn.isPrimary = true;\r\n            }\r\n\r\n            if (tmn.modifyColumnInfo != null) {\r\n                for (let mci of tmn.modifyColumnInfo) {\r\n                    let mcn = this.findCreateTableColumnNode(createTableNode, mci.identifier);\r\n                    let index = createTableNode.columnList.indexOf(mcn);\r\n                    createTableNode.columnList.splice(index, 1, mci);\r\n                }\r\n            }\r\n\r\n            if (tmn.foreignKeys != null) {\r\n                for (let fk of tmn.foreignKeys) {\r\n                    createTableNode.foreignKeyInfoList.push(fk);\r\n                }\r\n            }\r\n\r\n            if (tmn.indices != null) {\r\n                for (let index of tmn.indices) {\r\n                    m.sqlStatements.push({\r\n                        acceptedBySQLite: true,\r\n                        from: null, to: null, hasErrors: false,\r\n                        ast: {\r\n                            type: TokenType.keywordIndex,\r\n                            columnIdentifier: index.column,\r\n                            indexIdentifier: index.index_name,\r\n                            tableIdentifier: tmn.tableIdentifier,\r\n                            unique: index.unique,\r\n                            position: null, endPosition: null, symbolTable: null\r\n                        },\r\n                        sql: `create ${index.unique ? 'unique ' : ''} index ${index.index_name} on ${tmn.tableIdentifier}(${index.column});`\r\n                    })\r\n                }\r\n            }\r\n        }\r\n\r\n        return this.makeDatabase(m.sqlStatements);\r\n    }\r\n\r\n    private findCreateTableNode(tableIdentifier: string): CreateTableNode {\r\n        tableIdentifier = tableIdentifier.toLocaleLowerCase();\r\n        return this.createTableNodes.find(node => node.identifier.toLocaleLowerCase() == tableIdentifier);\r\n    }\r\n\r\n    private findCreateTableColumnNode(tableNode: CreateTableNode, columnIdentifier: string) {\r\n        columnIdentifier = columnIdentifier.toLocaleLowerCase();\r\n        return tableNode.columnList.find(columnNode => columnNode.identifier.toLocaleLowerCase() == columnIdentifier)\r\n    }\r\n\r\n    private async makeDatabase(statements: SQLStatement[]): Promise<LoadableDatabase> {\r\n\r\n        let statementCleaner: StatementCleaner = new StatementCleaner();\r\n\r\n        let sqlStatements: string[] = statements.filter(st => st.ast.type != TokenType.omittedeStatement)\r\n            .map(st => statementCleaner.clean(st));\r\n        sqlStatements.unshift(\"PRAGMA foreign_keys = OFF;\");\r\n        sqlStatements.push(\"PRAGMA foreign_keys = ON;\")\r\n\r\n        let dbTool = new DatabaseTool(this.main);\r\n\r\n        let promise = new Promise<LoadableDatabase>((resolve, reject) => {\r\n            dbTool.initializeWorker(null, sqlStatements, () => {\r\n                dbTool.export((buffer) => {\r\n                    resolve({\r\n                        binDump: buffer\r\n                    })\r\n                }, (error) => {\r\n                    reject(error);\r\n                })\r\n            });\r\n\r\n        })\r\n\r\n        return promise;\r\n\r\n    }\r\n\r\n\r\n}","import { MainBase } from \"../main/MainBase.js\";\r\nimport { LoadableDatabase } from \"./DatabaseLoader.js\";\r\nimport { DatabaseTool } from \"./DatabaseTools.js\";\r\nimport { downloadFile } from \"./HtmlTools.js\";\r\nimport { MySqlImporter } from \"./MySqlImporter.js\";\r\n\r\nexport class DatabaseImportExport {\r\n\r\n    async loadFromFile(file: globalThis.File, main: MainBase): Promise<LoadableDatabase>{\r\n        let that = this;\r\n        if (file == null) return;\r\n        main.getWaitOverlay().show(\"Lese Datei ein...\");\r\n        if(file.name.endsWith(\".sql\") || file.name.endsWith(\".zip\")){\r\n            let ld = await new MySqlImporter(main).loadFromFile(file);\r\n            main.getWaitOverlay().hide();\r\n            return ld;\r\n        } else {\r\n            var reader = new FileReader();\r\n            return new Promise<LoadableDatabase>((resolve, reject) => {\r\n                reader.onload = (event) => {\r\n                    let ab: ArrayBuffer = <ArrayBuffer>event.target.result;\r\n                    let db: Uint8Array = new Uint8Array(ab);\r\n        \r\n                    //@ts-ignore\r\n                    if(DatabaseTool.getDumpType(db) == \"binaryCompressed\") db = pako.inflate(db);\r\n                    \r\n                    main.getWaitOverlay().hide();\r\n                    resolve({binDump: db});\r\n                };\r\n                reader.readAsArrayBuffer(file);\r\n    \r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    saveToFile(dbTool: DatabaseTool){\r\n        dbTool.export((db) => {\r\n            let filename: string = prompt(\"Bitte geben Sie den Dateinamen ein\", \"datenbank.sqLite\");\r\n            if (filename == null) {\r\n                alert(\"Der Dateiname ist leer, daher wird nichts gespeichert.\");\r\n                return;\r\n            }\r\n            if (!filename.endsWith(\".sqLite\")) filename = filename + \".sqLite\";\r\n            downloadFile(new Blob([db.buffer]), filename, true);\r\n        }, () => {});\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { CreateWorkspaceData, WorkspaceData } from \"../../communication/Data.js\";\r\nimport { DatabaseImportExport } from \"../../tools/DatabaseImportExport.js\";\r\nimport { LoadableDatabase } from \"../../tools/DatabaseLoader.js\";\r\nimport { DatabaseTool } from \"../../tools/DatabaseTools.js\";\r\nimport { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { TemplateUploader } from \"../../tools/TemplateUploader.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionElement } from \"./Accordion.js\";\r\n\r\ntype CreateMode = \"emptyDatabase\" | \"fromTemplate\" | \"useExistingDatabase\" | \"useDumpFile\";\r\n\r\nexport class NewDatabaseDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    database: LoadableDatabase;\r\n\r\n    constructor(private main: Main, private owner_id: number, private path: string[]) {\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Neue Datenbank anlegen</div>\r\n\r\n            <div class=\"jo_ds_settings\">\r\n               <div class=\"jo_ds_settings_caption\">Name der Datenbank:</div><div><input class=\"dialog-input jo_databasename\" value=\"Neue Datenbank\"></input></div>\r\n            </div>\r\n\r\n             <div class=\"jo_tabheadings jo_cdtabheading\">\r\n             <div class=\"jo_tabheading\" data-target=\"jo_createEmptyDatabaseTab\">Leere Datenbank</div>\r\n             <div class=\"jo_tabheading jo_active\" data-target=\"jo_createDatabaseFromTemplateTab\">Von Vorlage kopieren</div>\r\n             <div class=\"jo_tabheading\" data-target=\"jo_createDatabaseUseExistingTab\">Bestehende Datenbank mitnutzen</div>\r\n             <div class=\"jo_tabheading\" data-target=\"jo_createDatabaseUseDumpFile\">Import aus Dumpfile (SQLite- oder MySQL-Format)</div>\r\n             </div>\r\n             <div class=\"jo_tabs\" style=\"width: 100%; margin-top: 10px\">\r\n                 <div class=\"jo_createEmptyDatabaseTab\">\r\n                    <div class=\"jo_createDatabaseDescription\">\r\n                        Erstellt wird eine leere Datenbank.\r\n                    </div>\r\n                 </div>\r\n                 <div class=\"jo_createDatabaseFromTemplateTab jo_active\">\r\n                    <div class=\"jo_ds_settings\">\r\n                       <div class=\"jo_ds_settings_caption\">Vorlage suchen:</div><div><input class=\"dialog-input jo_templatename\"></input></div>\r\n                    </div>\r\n                    <div class=\"jo_scrollable jo_templatelist\"></div>\r\n                 </div>\r\n                <div class=\"jo_createDatabaseUseExistingTab\">\r\n                    <div class=\"jo_createDatabaseDescription\">Wenn Du die Datenbank einer anderen Nutzerin/eines anderen Nutzers mitnutzen möchtest, brauchst Du einen Zugriffscode von ihr/ihm. Er ist unter Datenbank->Einstellungen zu finden.            \r\n                    </div>\r\n                    <div class=\"jo_ds_settings\">\r\n                       <div class=\"jo_ds_settings_caption\">Zugriffscode:</div><div><input class=\"dialog-input jo_databasecodeinput\"></input></div>\r\n                    </div>\r\n                 </div>\r\n                <div class=\"jo_createDatabaseUseDumpFile\">\r\n                    <div class=\"jo_createDatabaseDescription\">Wähle hier die Datei mit dem Datenbank-Dump aus (Endung .sqLite (SQLite-Datenbankdatei) oder .zip (gepackter MySql-Dump) oder .sql (MySql-Dump)):</div>\r\n                    <input type=\"file\" class=\"jo_dumpfile\" name=\"dumpfile\" style=\"padding: 10px\"/>\r\n                    <div class=\"jo_databaseimport_dropzone\" style=\"width: 70vw; margin-left: 10px\">Alternativ: Datei in dieses Feld ziehen</div>\r\n                    <div class=\"jo_databaseimport_ok\"></div>\r\n                 </div>\r\n             </div>\r\n\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_create_database_button\">Datenbank anlegen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        makeTabs(this.$dialog);\r\n\r\n        let $templatelist = jQuery('.jo_templatelist');\r\n        this.main.networkManager.fetchTemplateList((templatelist) => {\r\n            templatelist.forEach(tle => {\r\n\r\n                let $tle = jQuery('<div class=\"jo_templateListEntry\"></div>')\r\n                $tle.append(jQuery(`<div class=\"jo_tle_firstline\">${tle.name} <span class=\"jo_tle_ownername\"> (von ${tle.ownerName})</span></div>`))\r\n                $tle.append(jQuery(`<div class=\"jo_tle_secondline\">${tle.description}</div>`))\r\n                $tle.data('templateId', tle.id);\r\n                $tle.data('name', tle.name);\r\n\r\n                $templatelist.append($tle);\r\n                tle.$tle = <JQuery<HTMLDivElement>>$tle;\r\n\r\n                $tle.on('pointerdown', () => {\r\n                    $templatelist.find('.jo_templateListEntry').removeClass('jo_active');\r\n                    $tle.addClass('jo_active');\r\n                })\r\n\r\n            })\r\n            let $templateName = <JQuery<HTMLInputElement>>jQuery('.jo_templatename');\r\n            $templateName.on('input', () => {\r\n                let s = <string>$templateName.val();\r\n                $templatelist.find('.jo_templateListEntry').hide();\r\n                templatelist.forEach(tle => {\r\n                    let tleString = tle.name + tle.ownerName + (tle.description ? tle.description : \"\");\r\n                    if (tleString.indexOf(s) >= 0) tle.$tle.show();\r\n                })\r\n            })\r\n        })\r\n\r\n        let $dropZone = jQuery('.jo_databaseimport_dropzone');\r\n\r\n        $dropZone.on('dragover', (evt) => {\r\n            evt.stopPropagation();\r\n            evt.preventDefault();\r\n            evt.originalEvent.dataTransfer.dropEffect = 'copy';\r\n        })\r\n        $dropZone.on('drop', (evt) => {\r\n            evt.stopPropagation();\r\n            evt.preventDefault();\r\n\r\n            var files = evt.originalEvent.dataTransfer.files;\r\n            this.importFile(files);\r\n        })\r\n\r\n        let $dumpFileInput = jQuery('.jo_dumpfile');\r\n        $dumpFileInput.on('change', (event) => {\r\n            //@ts-ignore\r\n            var files: FileList = event.originalEvent.target.files;\r\n            this.importFile(files).then(() => {\r\n                $dumpFileInput.val(null);\r\n            });\r\n\r\n        })\r\n\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { this.showMainWindow(); });\r\n        jQuery('#jo_ds_create_database_button').on('click', () => {\r\n            let createMode: CreateMode = \"emptyDatabase\";\r\n            if (jQuery('.jo_createDatabaseFromTemplateTab').hasClass('jo_active')) createMode = \"fromTemplate\";\r\n            if (jQuery('.jo_createDatabaseUseExistingTab').hasClass('jo_active')) createMode = \"useExistingDatabase\";\r\n            if (jQuery('.jo_createDatabaseUseDumpFile').hasClass('jo_active')) createMode = \"useDumpFile\";\r\n\r\n            let workspaceData: CreateWorkspaceData = {\r\n                id: null,\r\n                isFolder: false,\r\n                name: <string>jQuery('.dialog-input.jo_databasename').val(),\r\n                path: this.path.join(\"/\"),\r\n            }\r\n\r\n            switch (createMode) {\r\n                case \"emptyDatabase\":\r\n                    this.createWorkspace(workspaceData);\r\n                    break;\r\n                case \"fromTemplate\":\r\n                    let $template = jQuery('.jo_templateListEntry.jo_active');\r\n                    if ($template.length != 1) {\r\n                        alert('Bitte wählen Sie genau eine Vorlage aus.');\r\n                        return;\r\n                    } else {\r\n                        workspaceData.template_database_id = $template.data('templateId');\r\n                        if (workspaceData.name == \"Neue Datenbank\") workspaceData.name = $template.data('name');\r\n                        this.createWorkspace(workspaceData);\r\n                    }\r\n                    break;\r\n                case \"useExistingDatabase\":\r\n                    let code = <string>jQuery('.jo_databasecodeinput').val();\r\n                    let tIndex = code.indexOf(\"T\");\r\n                    if (tIndex == -1) {\r\n                        alert(\"Der Zugriffscode muss das Zeichen T enthalten.\");\r\n                        return;\r\n                    }\r\n                    workspaceData.otherDatabaseId = Number.parseInt(code.substring(0, tIndex));\r\n                    workspaceData.secret = code.substring(tIndex + 1);\r\n                    this.createWorkspace(workspaceData);\r\n                    break;\r\n                case \"useDumpFile\":\r\n                    if (this.database != null) {\r\n                        new TemplateUploader().uploadCurrentDatabase(-1, this.main, this.database.binDump,\r\n                            \"uploadBaseTemplateForWorkspace\",\r\n                            (response) => {\r\n                            workspaceData.template_id = response.newTemplateId;\r\n                            this.createWorkspace(workspaceData);\r\n                        });\r\n\r\n                    } else {\r\n                        alert('Bitte laden Sie zuerst den Binärdump einer Datenbank hoch.')\r\n                        return;\r\n                    }\r\n                    break;\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    private createWorkspace(workspaceData: CreateWorkspaceData) {\r\n        this.main.networkManager.sendCreateWorkspace(workspaceData, this.owner_id, (error?: string) => {\r\n            if (error != null) { alert(error); return; }\r\n\r\n            let w = this.main.createNewWorkspace(workspaceData.name, this.owner_id);\r\n            w.path = workspaceData.path;\r\n            w.id = workspaceData.id;\r\n            w.sql_history = \"\";\r\n\r\n            let projectExplorer = this.main.projectExplorer;\r\n\r\n            this.main.workspaceList.push(w);\r\n            let accordionElement: AccordionElement = {\r\n                name: workspaceData.name,\r\n                externalElement: w,\r\n                iconClass: \"workspace\",\r\n                isFolder: false,\r\n                path: this.path\r\n            };\r\n\r\n            projectExplorer.workspaceListPanel.addElement(accordionElement, true);\r\n\r\n            w.renderSettingsButton(accordionElement);\r\n\r\n            projectExplorer.workspaceListPanel.sortElements();\r\n            projectExplorer.fileListPanel.sortElements();\r\n\r\n            projectExplorer.setWorkspaceActive(w);\r\n\r\n            this.showMainWindow();\r\n\r\n        });\r\n    }\r\n\r\n    async importFile(files: FileList) {\r\n        let that = this;\r\n        let importer = new DatabaseImportExport();\r\n        let db: LoadableDatabase = await importer.loadFromFile(files[0], this.main)\r\n        let isDatabase: boolean = false;\r\n        let dumpFileType = DatabaseTool.getDumpType(db.binDump);\r\n        if (dumpFileType == \"binaryCompressed\") {\r\n            // @ts-ignore\r\n            let dbUncompressed = pako.inflate(db.binDump);\r\n            if (DatabaseTool.getDumpType(dbUncompressed) == \"binaryUncompressed\") {\r\n                isDatabase = true;\r\n            }\r\n        } else if (DatabaseTool.getDumpType(db.binDump) == \"binaryUncompressed\") {\r\n            //@ts-ignore\r\n            db.binDump = pako.deflate(db.binDump);\r\n            isDatabase = true;\r\n        }\r\n\r\n        if (isDatabase) {\r\n            that.database = db;\r\n            jQuery('.jo_databaseimport_ok').html(\"Die Datenbankdatei wurde erfolgreich von Datei eingelesen. Sie können die Datenbank jetzt durch Klick auf den Button unten erstellen.\");\r\n        } else {\r\n            alert(\"In der Datei befindet sich kein Binärdump einer Datenbank.\");\r\n        }\r\n    }\r\n\r\n    showMainWindow() {\r\n        jQuery('#main').css('visibility', 'visible');\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n    }\r\n\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { PasswordChanger } from \"./UserMenu.js\";\r\nimport { DatabaseSettingsDialog } from \"./DatabaseSettingsDialog.js\";\r\nimport { DatabaseImportExport } from \"../../tools/DatabaseImportExport.js\";\r\nimport { NewDatabaseDialog } from \"./NewDatabaseDialog.js\";\r\n\r\nexport type Action = (identifier: string) => void;\r\n\r\ntype Menu = {\r\n    items: MenuItem[];\r\n    $element?: JQuery<HTMLElement>;\r\n    level?: number;\r\n}\r\n\r\ntype MenuItem = {\r\n    identifier: string;\r\n    $element?: JQuery<HTMLElement>;\r\n    action?: Action;\r\n    link?: string;\r\n    subMenu?: Menu;\r\n}\r\n\r\nexport class MainMenu {\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n\r\n    currentSubmenu: { [level: number]: JQuery<HTMLElement> } = {};\r\n    openSubmenusOnMousemove: boolean = false;\r\n\r\n    initGUI(user: UserData) {\r\n\r\n        let that = this;\r\n        let editor = this.main.getMonacoEditor();\r\n\r\n        let mainMenu: Menu = {\r\n            items: [\r\n                {\r\n                    identifier: \"Datei\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Speichern und Beenden\",\r\n                                action: () => { jQuery('#buttonLogout').trigger(\"click\"); }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Bearbeiten\", subMenu:\r\n                    {\r\n                        items: [\r\n                            { identifier: \"Rückgängig (Strg + z)\", action: () => { editor.trigger(\".\", \"undo\", {}); } },\r\n                            { identifier: \"Wiederholen (Strg + y)\", action: () => { editor.trigger(\".\", \"redo\", {}); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Kopieren (Strg + c)\", action: () => { editor.getAction(\"editor.action.clipboardCopyAction\").run(); } },\r\n                            { identifier: \"Ausschneiden (Strg + x)\", action: () => { editor.getAction(\"editor.action.clipboardCutAction\").run(); } },\r\n                            { identifier: \"Nach oben kopieren (Alt + Shift + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.copyLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten kopieren (Alt + Shift + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.copyLinesDownAction\").run(); } },\r\n                            { identifier: \"Nach oben verschieben (Alt + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.moveLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten verschieben (Alt + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.moveLinesDownAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Suchen... (Strg + f)\", action: () => { editor.getAction(\"actions.find\").run(); } },\r\n                            { identifier: \"Ersetzen... (Strg + h)\", action: () => { editor.getAction(\"editor.action.startFindReplaceAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Aus-/Einkommentieren (Strg + #)\", action: () => { editor.getAction(\"editor.action.commentLine\").run(); } },\r\n                            { identifier: \"Dokument formatieren (Alt + Shift + f)\", action: () => { editor.getAction(\"editor.action.formatDocument\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Finde zugehörige Klammer (Strg + k)\", action: () => { editor.getAction(\"editor.action.jumpToBracket\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Alles zusammenfalten\", action: () => { editor.getAction(\"editor.foldAll\").run(); } },\r\n                            { identifier: \"Alles auffalten\", action: () => { editor.getAction(\"editor.unfoldAll\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Vorschlag auslösen (Strg + Leertaste)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.triggerSuggest\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n                            { identifier: \"Parameterhilfe (Strg + Shift + Leertaste)\", action: () => { editor.getAction(\"editor.action.triggerParameterHints\").run(); } },\r\n                            {\r\n                                identifier: \"Gehe zur Definition (Strg + Click)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.revealDefinition\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Ansicht\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Theme\",\r\n                                subMenu: {\r\n                                    items: [\r\n                                        {\r\n                                            identifier: \"Dark\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"dark\");\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            identifier: \"Light\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"light\");\r\n                                            }\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Hoher Kontrast im Editor ein/aus\", action: () => { editor.getAction(\"editor.action.toggleHighContrast\").run(); } },\r\n\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Zoom out (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(-4); } },\r\n                            { identifier: \"Zoom normal\", action: () => { this.main.editor.setFontSize(14); } },\r\n                            { identifier: \"Zoom in (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(4); } },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Datenbank\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Neue Datenbank anlegen...\", action: () => {\r\n                                    let owner_id: number = that.main.user.id;\r\n                                    if (that.main.workspacesOwnerId != null) {\r\n                                        owner_id = that.main.workspacesOwnerId;\r\n                                    }\r\n\r\n                                    new NewDatabaseDialog(that.main, owner_id, []);\r\n                                }\r\n                            },\r\n                            { identifier: \"Einstellungen...\", action: () => { new DatabaseSettingsDialog(this.main, this.main.currentWorkspace) } },\r\n                            {\r\n                                identifier: \"Export als Binärdump (.sqLite-File)...\", action: () => {\r\n                                    new DatabaseImportExport().saveToFile(this.main.getDatabaseTool());\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n\r\n            ]\r\n        };\r\n\r\n        jQuery('#mainmenu').empty();\r\n        this.initMenu(mainMenu, 0);\r\n    }\r\n\r\n    switchTheme(theme: string) {\r\n        this.main.viewModeController.setTheme(theme);\r\n    }\r\n\r\n    initMenu(menu: Menu, level?: number) {\r\n\r\n        menu.level = level;\r\n\r\n        if (level == 0) {\r\n            menu.$element = jQuery('#mainmenu');\r\n        } else {\r\n            menu.$element = jQuery('<div class=\"jo_submenu\"></div>');\r\n            jQuery('body').append(menu.$element);\r\n        }\r\n\r\n        menu.$element.data('model', menu);\r\n        for (let mi of menu.items) {\r\n            if (mi.identifier == '-') {\r\n                mi.$element = jQuery('<div class=\"jo_menuitemdivider\"></div>');\r\n            } else {\r\n                mi.$element = jQuery('<div>' + mi.identifier + '</div>');\r\n                if (mi.link != null) {\r\n                    let $link = jQuery('<a href=\"' + mi.link + '\" target=\"_blank\" class=\"jo_menulink\"></a>');\r\n                    $link.on(\"mousedown\", (event) => {\r\n                        event.stopPropagation();\r\n                        setTimeout(() => {\r\n                            menu.$element.hide();\r\n                        }, 500);\r\n                    })\r\n                    $link.append(mi.$element);\r\n                    mi.$element = $link;\r\n                }\r\n                if (mi.subMenu != null) {\r\n                    this.initMenu(mi.subMenu, level + 1);\r\n                }\r\n                this.initMenuitemCallbacks(menu, mi);\r\n                if (level == 0) {\r\n                    mi.$element.addClass('jo_mainmenuitem');\r\n                }\r\n            }\r\n            menu.$element.append(mi.$element);\r\n            mi.$element.data('model', mi);\r\n        }\r\n\r\n        let that = this;\r\n        jQuery(document).on('mousedown', () => {\r\n            for (let i = 0; i < 5; i++) {\r\n                if (that.currentSubmenu[i] != null) {\r\n                    that.currentSubmenu[i].hide();\r\n                    that.currentSubmenu[i] = null;\r\n                }\r\n            }\r\n            that.openSubmenusOnMousemove = false;\r\n        });\r\n\r\n    }\r\n\r\n    initMenuitemCallbacks(menu: Menu, mi: MenuItem) {\r\n        let that = this;\r\n\r\n        if (mi.action != null) {\r\n            mi.$element.on('mousedown', (ev) => { mi.action(mi.identifier); });\r\n        }\r\n\r\n        if (mi.subMenu != null) {\r\n            mi.$element.on('mousedown', (ev) => {\r\n                that.opensubmenu(mi);\r\n                that.openSubmenusOnMousemove = true;\r\n                ev.stopPropagation();\r\n            });\r\n\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.openSubmenusOnMousemove) {\r\n                    that.opensubmenu(mi);\r\n                } else {\r\n                    if (that.currentSubmenu[menu.level + 1] != null) {\r\n                        that.currentSubmenu[menu.level + 1].hide();\r\n                        that.currentSubmenu[menu.level + 1] = null;\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.currentSubmenu[menu.level + 1] != null) {\r\n                    that.currentSubmenu[menu.level + 1].hide();\r\n                    that.currentSubmenu[menu.level + 1] = null;\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    opensubmenu(mi: MenuItem) {\r\n\r\n        let subMenu = mi.subMenu;\r\n\r\n        let left: number;\r\n        let top: number;\r\n        if (subMenu.level == 1) {\r\n            left = mi.$element.position().left;\r\n            top = 30;\r\n        } else {\r\n            left = mi.$element.offset().left + mi.$element.width();\r\n            top = mi.$element.offset().top;\r\n        }\r\n\r\n        subMenu.$element.css({\r\n            top: \"\" + top + \"px\",\r\n            left: \"\" + left + \"px\"\r\n        })\r\n\r\n        if (this.currentSubmenu[subMenu.level] != null) {\r\n            this.currentSubmenu[subMenu.level].hide();\r\n        }\r\n\r\n        subMenu.$element.show();\r\n        this.currentSubmenu[subMenu.level] = subMenu.$element;\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { openContextMenu, makeEditable, ContextMenuItem, animateToTransparent, jo_mouseDetected } from \"../../tools/HtmlTools.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { escapeHtml } from \"../../tools/StringTools.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type AccordionElement = {\r\n    name: string;\r\n    sortName?: string;      // if sortName == null, then name will be used when sorting\r\n    externalElement?: any;\r\n    iconClass?: string;\r\n    $htmlFirstLine?: JQuery<HTMLElement>;\r\n    $htmlSecondLine?: JQuery<HTMLElement>;\r\n\r\n    isFolder: boolean;\r\n    path: string[];\r\n}\r\n\r\nexport type AccordionContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: (panel: AccordionElement) => void;\r\n    subMenu?: AccordionContextMenuItem[]\r\n}\r\n\r\nexport class AccordionPanel {\r\n\r\n    elements: AccordionElement[] = [];\r\n\r\n    $captionElement: JQuery<HTMLElement>;\r\n    $buttonNew: JQuery<HTMLElement>;\r\n    $listElement: JQuery<HTMLElement>;\r\n\r\n    private fixed: boolean;\r\n\r\n    dontSortElements: boolean = false;\r\n\r\n    static currentlyDraggedElement: AccordionElement;\r\n    static currentlyDraggedElementKind: string;\r\n\r\n    newFilesElementCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    newDatabaseElementCallback: (path: string[]) => void;\r\n    newFolderCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    renameCallback: (externalElement: any, newName: string) => string;\r\n    deleteCallback: (externalElement: any, callbackIfSuccessful: () => void) => void;\r\n    selectCallback: (externalElement: any) => void;\r\n    addElementActionCallback: (accordionElement: AccordionElement) => JQuery<HTMLElement>;\r\n    contextMenuProvider: (externalElement: any) => AccordionContextMenuItem[];\r\n    moveCallback: (ae: AccordionElement | AccordionElement[]) => void;\r\n    dropElementCallback: (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => void;\r\n\r\n    $newFolderAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private accordion: Accordion, private caption: string, private flexWeight: string,\r\n        private newButtonClass: string, private buttonNewTitle: string,\r\n        private defaultIconClass: string, private withDeleteButton: boolean, private withFolders: boolean,\r\n        private kind: \"workspace\" | \"file\" | \"class\" | \"student\", private enableDrag: boolean, private acceptDropKinds: string[]) {\r\n\r\n        accordion.addPanel(this);\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        if (withFolders) {\r\n            let that = this;\r\n            this.$newFolderAction = jQuery('<div class=\"img_add-folder-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Neuen Ordner auf oberster Ebene anlegen\">');\r\n            this.$newFolderAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                let pathArray: string[] = [];\r\n\r\n                this.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                    this.newFolderCallback(newElement, () => {\r\n                        this.sortElements();\r\n                        newElement.$htmlFirstLine[0].scrollIntoView();\r\n                        animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                    });\r\n                });\r\n\r\n            })\r\n\r\n            this.addAction(this.$newFolderAction);\r\n\r\n\r\n            let $collapseAllAction = jQuery('<div class=\"img_collapse-all-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Alle Ordner zusammenfalten\">');\r\n            $collapseAllAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                that.collapseAll();\r\n\r\n            })\r\n\r\n            this.addAction($collapseAllAction);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    collapseAll() {\r\n        for (let element of this.elements) {\r\n            if (element.isFolder) {\r\n                if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                    element.$htmlFirstLine.removeClass('jo_expanded');\r\n                    element.$htmlFirstLine.addClass('jo_collapsed');\r\n                }\r\n            }\r\n            if (element.path.length > 0) {\r\n                element.$htmlFirstLine.slideUp(200);\r\n            }\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        this.$captionElement.remove();\r\n        this.$listElement.remove();\r\n    }\r\n\r\n    setFixed(fixed: boolean) {\r\n        this.fixed = fixed;\r\n        if (this.fixed) {\r\n            this.grow();\r\n            this.$captionElement.addClass('jo_fixed');\r\n        } else {\r\n            this.$captionElement.removeClass('jo_fixed');\r\n        }\r\n\r\n    }\r\n\r\n    //     <div class=\"jo_leftpanelcaption expanded\" id=\"workspace\" data-panel=\"filelistouter\">\r\n    //     <span>WORKSPACE</span>\r\n    //     <div class=\"jo_actions\"><img id=\"buttonNewFile\" title=\"Neue Datei hinzufügen\"\r\n    //             src=\"assets/projectexplorer/add-file-dark.svg\"></div>\r\n    // </div>\r\n    // <div id=\"filelistouter\" class=\"jo_projectexplorerdiv scrollable\" data-grow=\"3\"\r\n    //     style=\"flex-grow: 3\">\r\n    //     <div id=\"filelist\"></div>\r\n    // </div>\r\n\r\n\r\n    enableNewButton(enabled: boolean) {\r\n        if (this.$buttonNew != null) {\r\n            if (enabled) {\r\n                this.$buttonNew.show();\r\n            } else {\r\n                this.$buttonNew.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    getCurrentlySelectedPath(): string[] {\r\n        let pathArray: string[] = [];\r\n        let selectedElement = this.getSelectedElement();\r\n        if (selectedElement != null) {\r\n            pathArray = selectedElement.path.slice(0);\r\n            if (selectedElement.isFolder) pathArray.push(selectedElement.name);\r\n        }\r\n        return pathArray;\r\n    }\r\n\r\n    compareWithPath(name1: string, path1: string[], isFolder1: boolean, name2: string, path2: string[], isFolder2: boolean) {\r\n\r\n        path1 = path1.slice();\r\n        path1.push(name1);\r\n        name1 = \"\";\r\n\r\n        path2 = path2.slice();\r\n        path2.push(name2);\r\n        name2 = \"\";\r\n\r\n        let i = 0;\r\n        while (i < path1.length && i < path2.length) {\r\n            let cmp = path1[i].localeCompare(path2[i]);\r\n            if (cmp != 0) return cmp;\r\n            i++;\r\n        }\r\n\r\n        if (path1.length < path2.length) return -1;\r\n        if (path1.length > path2.length) return 1;\r\n\r\n        return name1.localeCompare(name2);\r\n\r\n\r\n        // let nameWithPath1 = path1.join(\"/\");\r\n        // if (nameWithPath1 != \"\" && name1 != \"\") nameWithPath1 += \"/\";\r\n        // nameWithPath1 += name1;\r\n\r\n        // let nameWithPath2 = path2.join(\"/\");\r\n        // if (nameWithPath2 != \"\" && name2 != \"\") nameWithPath2 += \"/\";\r\n        // nameWithPath2 += name2;\r\n\r\n        // return nameWithPath1.localeCompare(nameWithPath2);\r\n    }\r\n\r\n\r\n    getElementIndex(name: string, path: string[], isFolder: boolean): number {\r\n\r\n        for (let i = 0; i < this.elements.length; i++) {\r\n            let element = this.elements[i];\r\n\r\n            if (this.compareWithPath(name, path, isFolder, element.name, element.path, element.isFolder) < 0) return i;\r\n\r\n        }\r\n        return this.elements.length;\r\n    }\r\n\r\n    insertElement(ae: AccordionElement) {\r\n        let insertIndex = this.getElementIndex(ae.name, ae.path, ae.isFolder);\r\n        // if (ae.path.length == 0) insertIndex = this.elements.length;\r\n        this.elements.splice(insertIndex, 0, ae);\r\n\r\n        let $elements = this.$listElement.find('.jo_file');\r\n\r\n        if (insertIndex == 0) {\r\n            this.$listElement.prepend(ae.$htmlFirstLine);\r\n        } else if(insertIndex == $elements.length){\r\n            this.$listElement.append(ae.$htmlFirstLine);\r\n        } else {\r\n            let elementAtIndex = $elements.get(insertIndex);\r\n            jQuery(elementAtIndex).before(ae.$htmlFirstLine);\r\n        }\r\n\r\n    }\r\n\r\n    addFolder(name: string, path: string[], callback: (newPanel: AccordionElement) => void) {\r\n\r\n        let ae: AccordionElement = {\r\n            name: name,\r\n            isFolder: true,\r\n            path: path\r\n        }\r\n\r\n        let $element = this.renderElement(ae, true);\r\n\r\n        this.insertElement(ae);\r\n\r\n        $element[0].scrollIntoView();\r\n\r\n        this.renameElement(ae, () => {\r\n\r\n            callback(ae);\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    renderOuterHtmlElements($accordionDiv: JQuery<HTMLElement>) {\r\n        let that = this;\r\n\r\n        this.$captionElement = jQuery(`<div class=\"jo_leftpanelcaption jo_expanded\">\r\n        <div class=\"jo_captiontext\">` + this.caption + `</div><div class=\"jo_actions\"></div></div>`);\r\n\r\n        if (this.newButtonClass != null) {\r\n            this.$buttonNew = jQuery('<div class=\"jo_button jo_active ' + this.newButtonClass + '\" title=\"' + this.buttonNewTitle + '\">');\r\n            this.$captionElement.find('.jo_actions').append(this.$buttonNew);\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n            this.$buttonNew.on(mousePointer + 'down', (ev) => {\r\n\r\n                Helper.close();\r\n                ev.stopPropagation();\r\n\r\n                let path = that.getCurrentlySelectedPath();\r\n\r\n                let ae: AccordionElement = {\r\n                    name: \"Neu\",\r\n                    isFolder: false,\r\n                    path: path\r\n                }\r\n\r\n                let insertIndex = this.getElementIndex(\"\", path, false);\r\n                this.elements.splice(insertIndex, 0, ae);\r\n                let $element = this.renderElement(ae, true);\r\n\r\n\r\n                if (insertIndex == 0) {\r\n                    this.$listElement.prepend($element);\r\n                } else {\r\n                    let elementAtIndex = this.$listElement.find('.jo_file').get(insertIndex - 1);\r\n                    jQuery(elementAtIndex).after($element);\r\n                }\r\n\r\n                $element[0].scrollIntoView();\r\n\r\n                that.renameElement(ae, () => {\r\n\r\n                    that.newFilesElementCallback(ae, (externalElement: any) => {\r\n\r\n                        ae.externalElement = externalElement;\r\n\r\n                        if (ae.$htmlSecondLine != null) {\r\n                            ae.$htmlSecondLine.insertAfter($element);\r\n                        }\r\n\r\n                        if (that.selectCallback != null) that.select(ae.externalElement);\r\n\r\n                    });\r\n\r\n                });\r\n\r\n            });\r\n\r\n        }\r\n\r\n        let $listOuter = jQuery('<div id=\"filelistouter\" class=\"jo_projectexplorerdiv jo_scrollable\" data-grow=\"'\r\n            + this.flexWeight + '\" style=\"flex-grow: ' + this.flexWeight + '\"></div>');\r\n        this.$listElement = jQuery('<div class=\"jo_filelist\"></div>')\r\n\r\n        $listOuter.append(this.$listElement);\r\n\r\n        $accordionDiv.append(this.$captionElement);\r\n        $accordionDiv.append($listOuter);\r\n\r\n        let $ce = this.$captionElement;\r\n        let $li = this.$listElement.parent();\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $ce.on(mousePointer + 'down', (ev) => {\r\n            if (ev.button != 0) {\r\n                return;\r\n            }\r\n\r\n            if (!this.fixed) {\r\n                let targetGrow = $li.data('grow');\r\n                if ($ce.hasClass('jo_expanded')) {\r\n                    if (that.accordion.parts.length > 1) {\r\n                        $li.animate({\r\n                            'flex-grow': 0.001\r\n                        }, 1000, () => { $ce.toggleClass('jo_expanded'); });\r\n                    }\r\n                } else {\r\n                    $ce.toggleClass('jo_expanded');\r\n                    $li.animate({\r\n                        'flex-grow': targetGrow\r\n                    }, 1000);\r\n                }\r\n            }\r\n        });\r\n\r\n        $ce.on('dragover', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                $ce.addClass('jo_file_dragover');\r\n                event.preventDefault();\r\n            }\r\n        })\r\n\r\n        $ce.on('dragleave', (event) => {\r\n            $ce.removeClass('jo_file_dragover');\r\n        })\r\n\r\n        $ce.on('drop', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                event.preventDefault();\r\n                $ce.removeClass('jo_file_dragover');\r\n                let element1 = AccordionPanel.currentlyDraggedElement;\r\n                if (element1 != null) {\r\n                    that.moveElement(element1, null);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    grow() {\r\n        let $li = this.$listElement.parent();\r\n        let targetGrow = $li.data('grow');\r\n        $li.css('flex-grow', targetGrow);\r\n        this.$captionElement.addClass('jo_expanded');\r\n    }\r\n\r\n    addElement(element: AccordionElement, expanded: boolean) {\r\n        // this.elements.push(element);\r\n        // element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        // this.$listElement.prepend(element.$htmlFirstLine);\r\n        element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        this.insertElement(element);\r\n    }\r\n\r\n    sortElements() {\r\n        if (this.dontSortElements) return;\r\n        this.elements.sort((a, b) => {\r\n            let aName = a.sortName ? a.sortName : a.name;\r\n            let bName = b.sortName ? b.sortName : b.name;\r\n\r\n            return this.compareWithPath(aName, a.path, a.isFolder, bName, b.path, b.isFolder);\r\n\r\n        });\r\n        this.elements.forEach((element) => { this.$listElement.append(element.$htmlFirstLine) });\r\n    }\r\n\r\n    setTextAfterFilename(element: AccordionElement, text: string, cssClass: string) {\r\n        if(element == null) return;\r\n        let $div = element.$htmlFirstLine.find('.jo_textAfterName');\r\n        $div.addClass(cssClass);\r\n        $div.html(text);\r\n    }\r\n\r\n    addAction($element: JQuery<HTMLElement>) {\r\n        this.$captionElement.find('.jo_actions').prepend($element);\r\n    }\r\n\r\n    renderElement(element: AccordionElement, expanded: boolean): JQuery<HTMLElement> {\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        let that = this;\r\n\r\n        let expandedCollapsed = \"\";\r\n\r\n        if (element.iconClass == null) element.iconClass = this.defaultIconClass;\r\n        if (element.isFolder) {\r\n            element.iconClass = \"folder\";\r\n            expandedCollapsed = expanded ? \" jo_expanded\" : \" jo_collapsed\";\r\n        }\r\n\r\n        let pathHtml = \"\";\r\n        if (element.path == null) element.path = [];\r\n        for (let i = 0; i < element.path.length; i++) {\r\n            pathHtml += '<div class=\"jo_folderline\"></div>';\r\n        }\r\n\r\n        element.$htmlFirstLine = jQuery(`<div class=\"jo_file jo_${element.iconClass} ${expandedCollapsed}\">\r\n        <div class=\"jo_folderlines\">${pathHtml}</div>\r\n           <div class=\"jo_fileimage\"></div>\r\n           <div class=\"jo_filename\">${escapeHtml(element.name)}</div>\r\n           <div class=\"jo_textAfterName\"></div>\r\n           <div class=\"jo_additionalButtonSettings\"></div>\r\n           ${this.withDeleteButton ? '<div class=\"jo_delete img_delete jo_button jo_active' + (false ? \" jo_delete_always\" : \"\") + '\"></div>' : \"\"}\r\n           ${!jo_mouseDetected ? '<div class=\"jo_settings_button img_ellipsis-dark jo_button jo_active\"></div>' : \"\"}\r\n           </div>`);\r\n\r\n        if (!expanded && element.path.length > 0) {\r\n            element.$htmlFirstLine.hide();\r\n        }\r\n\r\n        if (this.addElementActionCallback != null) {\r\n            let $elementAction = this.addElementActionCallback(element);\r\n            element.$htmlFirstLine.append($elementAction);\r\n        }\r\n\r\n        if (this.withFolders) {\r\n            if (element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            that.moveElement(element1, element);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withFolders || this.enableDrag) {\r\n            let $filedragpart = element.$htmlFirstLine.find('.jo_filename');\r\n            $filedragpart.attr('draggable', 'true');\r\n            $filedragpart.on('dragstart', (event) => {\r\n                AccordionPanel.currentlyDraggedElement = element;\r\n                AccordionPanel.currentlyDraggedElementKind = that.kind;\r\n                event.originalEvent.dataTransfer.effectAllowed = element.isFolder ? \"move\" : \"copyMove\";\r\n            })\r\n        }\r\n\r\n        if (this.acceptDropKinds != null && this.acceptDropKinds.length > 0) {\r\n            if (!element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n\r\n                        if (event.ctrlKey) {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"copy\";\r\n                        } else {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"move\";\r\n                        }\r\n\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            if (that.dropElementCallback != null) that.dropElementCallback(element, element1, event.ctrlKey ? \"copy\" : \"move\");\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        element.$htmlFirstLine.on(mousePointer + 'up', (ev) => {\r\n\r\n            if (ev.button == 0 && that.selectCallback != null) {\r\n                that.selectCallback(element.externalElement);\r\n\r\n                for (let ae of that.elements) {\r\n                    if (ae != element && ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                        ae.$htmlFirstLine.removeClass('jo_active');\r\n                    }\r\n                }\r\n\r\n                element.$htmlFirstLine.addClass('jo_active');\r\n\r\n                if (element.isFolder) {\r\n\r\n                    if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                        element.$htmlFirstLine.removeClass('jo_expanded');\r\n                        element.$htmlFirstLine.addClass('jo_collapsed');\r\n                    } else {\r\n                        element.$htmlFirstLine.addClass('jo_expanded');\r\n                        element.$htmlFirstLine.removeClass('jo_collapsed');\r\n                    }\r\n\r\n                    let pathIsCollapsed: { [path: string]: boolean } = {};\r\n                    for (let e of this.elements) {\r\n                        if (e.isFolder) {\r\n                            let path = e.path.join(\"/\");\r\n                            if (path != \"\") path += \"/\";\r\n                            path += e.name;\r\n                            pathIsCollapsed[path] = e.$htmlFirstLine.hasClass('jo_collapsed');\r\n                            if (pathIsCollapsed[e.path.join(\"/\")]) pathIsCollapsed[path] = true;\r\n                        }\r\n                    }\r\n                    pathIsCollapsed[\"\"] = false;\r\n\r\n                    for (let e of this.elements) {\r\n                        if (pathIsCollapsed[e.path.join(\"/\")]) {\r\n                            e.$htmlFirstLine.slideUp(200);\r\n                        } else {\r\n                            e.$htmlFirstLine.slideDown(200);\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n\r\n        let contextmenuHandler = function (event) {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [];\r\n            if (that.renameCallback != null) {\r\n                contextMenuItems.push({\r\n                    caption: \"Umbenennen\",\r\n                    callback: () => {\r\n                        that.renameElement(element);\r\n                    }\r\n                })\r\n            }\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n            if (element.isFolder) {\r\n                contextMenuItems = contextMenuItems.concat([\r\n                    {\r\n                        caption: \"Neuen Unterordner anlegen (unterhalb '\" + element.name + \"')...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            // that.$newFolderAction.trigger(mousePointer + 'down');\r\n                            let pathArray = that.getCurrentlySelectedPath();\r\n\r\n                            that.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                                that.newFolderCallback(newElement, () => {\r\n                                    that.sortElements();\r\n                                    newElement.$htmlFirstLine[0].scrollIntoView();\r\n                                    animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                                });\r\n                            });\r\n\r\n                        }\r\n                    }, {\r\n                        caption: \"Neue Datenbank...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n\r\n                            that.newDatabaseElementCallback(element.path.concat(element.name));\r\n\r\n                        }\r\n                    }\r\n                ])\r\n            }\r\n\r\n\r\n            if (that.contextMenuProvider != null && !element.isFolder) {\r\n\r\n                for (let cmi of that.contextMenuProvider(element)) {\r\n                    contextMenuItems.push({\r\n                        caption: cmi.caption,\r\n                        callback: () => {\r\n                            cmi.callback(element);\r\n                        },\r\n                        color: cmi.color,\r\n                        subMenu: cmi.subMenu == null ? null : cmi.subMenu.map((mi) => {\r\n                            return {\r\n                                caption: mi.caption,\r\n                                callback: () => {\r\n                                    mi.callback(element);\r\n                                },\r\n                                color: mi.color\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n\r\n            if (contextMenuItems.length > 0) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                openContextMenu(contextMenuItems, event.pageX, event.pageY);\r\n            }\r\n        };\r\n\r\n        element.$htmlFirstLine[0].addEventListener(\"contextmenu\", contextmenuHandler, false);\r\n\r\n        // long press for touch devices\r\n        let pressTimer: number;\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.on('pointerup', () => {\r\n                clearTimeout(pressTimer);\r\n                return false;\r\n            }).on('pointerdown', (event) => {\r\n                pressTimer = window.setTimeout(() => {\r\n                    contextmenuHandler(event);\r\n                }, 500);\r\n                return false;\r\n            });\r\n        }\r\n\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('pointerdown', (e) => {\r\n                contextmenuHandler(e);\r\n            });\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('mousedown click', (e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            });\r\n        }\r\n\r\n        if (that.withDeleteButton) {\r\n\r\n            element.$htmlFirstLine.find('.jo_delete')[0].addEventListener(\"contextmenu\", (event) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n            }, false);\r\n\r\n            element.$htmlFirstLine.find('.jo_delete').on(mousePointer + 'up', (ev) => {\r\n                ev.preventDefault();\r\n                openContextMenu([{\r\n                    caption: \"Abbrechen\",\r\n                    callback: () => {\r\n                        // nothing to do.\r\n                    }\r\n                }, {\r\n                    caption: \"Ich bin mir sicher: löschen!\",\r\n                    color: \"#ff6060\",\r\n                    callback: () => {\r\n\r\n                        if (element.isFolder) {\r\n                            if (that.getChildElements(element).length > 0) {\r\n                                alert('Dieser Ordner kann nicht gelöscht werden, da er nicht leer ist.');\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        that.deleteCallback(element.externalElement, () => {\r\n                            element.$htmlFirstLine.remove();\r\n                            if (element.$htmlSecondLine != null) element.$htmlSecondLine.remove();\r\n                            that.elements.splice(that.elements.indexOf(element), 1);\r\n\r\n                            if (that.selectCallback != null) {\r\n                                if (that.elements.length > 0) {\r\n                                    that.select(that.elements[0].externalElement);\r\n                                } else {\r\n                                    that.select(null);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }], ev.pageX + 2, ev.pageY + 2);\r\n                ev.stopPropagation();\r\n            });\r\n        }\r\n\r\n        return element.$htmlFirstLine;\r\n\r\n    }\r\n\r\n    moveElement(elementToMove: AccordionElement, destinationFolder: AccordionElement) {\r\n        let destinationPath: string[] = destinationFolder == null ? [] : destinationFolder.path.slice(0).concat([destinationFolder.name]);\r\n        if (elementToMove.isFolder) {\r\n            let movedElements: AccordionElement[] = [elementToMove];\r\n\r\n            let sourcePath = elementToMove.path.concat([elementToMove.name]).join(\"/\");\r\n\r\n            if(destinationPath.join('/').indexOf(sourcePath) == 0) return;\r\n\r\n            let oldPathLength = elementToMove.path.length;\r\n            elementToMove.path = destinationPath.slice(0);\r\n\r\n            for (let element of this.elements) {\r\n                if (element.path.join(\"/\").startsWith(sourcePath)) {\r\n                    element.path.splice(0, oldPathLength);\r\n                    element.path = destinationPath.concat(element.path);\r\n                    movedElements.push(element);\r\n                }\r\n            }\r\n\r\n            for (let el of movedElements) {\r\n                el.$htmlFirstLine.remove();\r\n                this.elements.splice(this.elements.indexOf(el), 1);\r\n            }\r\n            for (let el of movedElements) {\r\n                this.renderElement(el, true);\r\n                this.insertElement(el);\r\n            }\r\n\r\n            this.moveCallback(movedElements);\r\n        } else {\r\n            elementToMove.path = destinationPath;\r\n            elementToMove.$htmlFirstLine.remove();\r\n            this.elements.splice(this.elements.indexOf(elementToMove), 1);\r\n            this.renderElement(elementToMove, true);\r\n            this.insertElement(elementToMove);\r\n            this.select(elementToMove.externalElement);\r\n            elementToMove.$htmlFirstLine[0].scrollIntoView();\r\n            this.moveCallback(elementToMove);\r\n        }\r\n    }\r\n\r\n    getChildElements(folder: AccordionElement): AccordionElement[] {\r\n        let path = folder.path.slice(0).concat(folder.name).join(\"/\");\r\n        return this.elements.filter((element) => element.path.join(\"/\").startsWith(path));\r\n    }\r\n\r\n    renameElement(element: AccordionElement, callback?: () => void) {\r\n        let that = this;\r\n        let $div = element.$htmlFirstLine.find('.jo_filename');\r\n        let pointPos = element.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        this.dontSortElements = true;\r\n        makeEditable($div, $div, (newText: string) => {\r\n            if (element.externalElement != null) newText = that.renameCallback(element.externalElement, newText);\r\n            element.name = newText;\r\n            $div.html(element.name);\r\n            if (callback != null) callback();\r\n            that.sortElements();\r\n            $div[0].scrollIntoView();\r\n            this.dontSortElements = false;\r\n        }, selection);\r\n    }\r\n\r\n    select(externalElement: any, invokeCallback: boolean = true, scrollIntoView: boolean = false) {\r\n\r\n        if (externalElement == null) {\r\n            for (let ae1 of this.elements) {\r\n                if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n            }\r\n        } else {\r\n            let ae = this.findElement(externalElement);\r\n\r\n            if (ae != null) {\r\n                for (let ae1 of this.elements) {\r\n                    if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n                }\r\n\r\n                ae.$htmlFirstLine.addClass('jo_active');\r\n                if (scrollIntoView) {\r\n                    let pathString = ae.path.join(\"/\");\r\n                    for (let el of this.elements) {\r\n                        let elPath = el.path.slice(0);\r\n                        if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                            if (el.isFolder) {\r\n                                elPath.push(el.name);\r\n                                if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                                    el.$htmlFirstLine.removeClass(\"jo_collapsed\");\r\n                                    el.$htmlFirstLine.addClass(\"jo_expanded\");\r\n                                }\r\n                            }\r\n                            el.$htmlFirstLine.show();\r\n                        }\r\n\r\n                    }\r\n\r\n                    ae.$htmlFirstLine[0].scrollIntoView();\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (invokeCallback && this.selectCallback != null) this.selectCallback(externalElement);\r\n\r\n    }\r\n\r\n    getPathString(ae: AccordionElement) {\r\n        let ps: string = ae.path.join(\"/\");\r\n        if (ae.isFolder) {\r\n            if (ps != \"\") ps += \"/\";\r\n            ps += ae.name;\r\n        }\r\n        return ps;\r\n    }\r\n\r\n    setElementClass(element: AccordionElement, iconClass: string) {\r\n        if (element != null) {\r\n            element.$htmlFirstLine?.removeClass(\"jo_\" + element.iconClass).addClass(\"jo_\" + iconClass);\r\n            element.iconClass = iconClass;\r\n        }\r\n\r\n    }\r\n\r\n    findElement(externalElement: any): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                return ae;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    removeElement(externalElement: any) {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                ae.$htmlFirstLine.remove();\r\n                if (ae.$htmlSecondLine != null) ae.$htmlSecondLine.remove();\r\n                this.elements.splice(this.elements.indexOf(ae), 1);\r\n\r\n                if (this.selectCallback != null) {\r\n                    if (this.elements.length > 0) {\r\n                        this.select(this.elements[0].externalElement);\r\n                    } else {\r\n                        this.select(null);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.$listElement.empty();\r\n        this.elements = [];\r\n    }\r\n\r\n    setCaption(text: string) {\r\n        this.$captionElement.find('.jo_captiontext').html(text);\r\n    }\r\n\r\n    getSelectedElement(): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                return ae;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class Accordion {\r\n\r\n    parts: AccordionPanel[] = [];\r\n    $html: JQuery<HTMLElement>;\r\n\r\n    constructor(public main: MainBase, $html: JQuery<HTMLElement>) {\r\n        this.$html = $html;\r\n        $html.addClass('jo_leftpanelinner');\r\n    }\r\n\r\n    addPanel(panel: AccordionPanel) {\r\n        panel.renderOuterHtmlElements(this.$html);\r\n        this.parts.push(panel);\r\n    }\r\n\r\n}","import { ClassData, UserData } from \"../../communication/Data.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { isEmptyObject } from \"jquery\";\r\n\r\nexport class DistributeToStudentsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n    studentCount: number = 0;\r\n\r\n    constructor(private classes: ClassData[], private workspace: Workspace, private main: Main){\r\n        this.init();\r\n    }\r\n\r\n    private init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Austeilen eines Workspace an einzelne Schüler/innen</div>\r\n             <div class=\"jo_ds_settings\">\r\n                <div class=\"jo_ds_settings_caption\">Workspace:</div><div class=\"jo_ds_workspacename\">${this.workspace.name}</div>\r\n                <div class=\"jo_ds_settings_caption\">Liste filtern:</div><div class=\"jo_ds_filterdiv\"><input class=\"dialog-input\"></input></div>\r\n             </div>\r\n             <div class=\"jo_ds_student_list jo_scrollable\">\r\n             </div>\r\n             <div class=\"jo_ds_selected_message\"></div>\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_distribute_button\">Austeilen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        let $studentList = jQuery('.jo_ds_student_list');\r\n        let that = this;\r\n\r\n        for(let klass of this.classes){\r\n            for(let student of klass.students){\r\n                let $studentLine = jQuery('<div class=\"jo_ds_student_line\">');\r\n                let $studentClass = jQuery(`<div class=\"jo_ds_student_class\">${klass.name}</div>`);                \r\n                let $studentName = jQuery(`<div class=\"jo_ds_student_name\">${student.rufname} ${student.familienname}</div>`);\r\n                $studentLine.append($studentClass, $studentName);\r\n                $studentList.append($studentLine);\r\n                $studentLine.on('mousedown', () => {\r\n                    $studentLine.toggleClass('jo_active');\r\n                     that.studentCount += $studentLine.hasClass('jo_active') ? 1 : -1;\r\n                     jQuery('.jo_ds_selected_message').text(`${that.studentCount} Schüler/inn/en selektiert`);\r\n                });\r\n                $studentLine.data('student', student);\r\n                $studentLine.data('klass', klass);\r\n            }\r\n        }\r\n\r\n        jQuery('.jo_ds_filterdiv>input').on('input', () => {\r\n            let filterText = <string>jQuery('.jo_ds_filterdiv>input').val();\r\n            if(filterText == null || filterText == \"\"){\r\n                $('.jo_ds_student_line').show();\r\n            } else {\r\n                $('.jo_ds_student_line').each((index, element) => {\r\n                    let $element = jQuery(element);\r\n                    let klass:ClassData = $element.data('klass');\r\n                    let student: UserData = $element.data('student');\r\n                    let text = klass.name + \" \" + student.rufname + \" \" + student.familienname;\r\n                    if(text.indexOf(filterText) >= 0){\r\n                        $element.show();\r\n                    } else {\r\n                        $element.hide();\r\n                    }\r\n                });\r\n\r\n            }\r\n            \r\n        });\r\n\r\n\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { that.close() });\r\n        jQuery('#jo_ds_distribute_button').on('click', () => {that.distributeWorkspace();});\r\n\r\n    }\r\n\r\n    distributeWorkspace() {\r\n\r\n        let student_ids: number[] = [];\r\n        $('.jo_ds_student_line').each((index, element) => {\r\n            let $element = jQuery(element);\r\n            if($element.hasClass('jo_active')){\r\n                let student: UserData = $element.data('student');\r\n                student_ids.push(student.id);\r\n            }\r\n        });\r\n\r\n        this.close();\r\n\r\n        this.main.networkManager.sendDistributeWorkspace(this.workspace, null, student_ids, (error: string) => {\r\n            if (error == null) {\r\n                let networkManager = this.main.networkManager;\r\n                let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                alert(`Der Workspace ${this.workspace.name} wurde an ${student_ids.length} Schüler/innen ausgeteilt. Er wird in maximal ${dt} s bei jedem Schüler ankommen.`);\r\n            } else {\r\n                alert(error);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n    \r\n\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionPanel, Accordion, AccordionElement, AccordionContextMenuItem } from \"./Accordion.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { WorkspaceData, Workspaces, ClassData, CreateWorkspaceData } from \"../../communication/Data.js\";\r\nimport { dateToString } from \"../../tools/StringTools.js\";\r\nimport { DistributeToStudentsDialog } from \"./DistributeToStudentsDialog.js\";\r\nimport { NewDatabaseDialog } from \"./NewDatabaseDialog.js\";\r\n\r\n\r\nexport class ProjectExplorer {\r\n\r\n    programPointerModule: Module = null;\r\n    programPointerPosition: TextPosition;\r\n    programPointerDecoration: string[] = [];\r\n\r\n    accordion: Accordion;\r\n    fileListPanel: AccordionPanel;\r\n    workspaceListPanel: AccordionPanel;\r\n\r\n    $homeAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private $projectexplorerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.accordion = new Accordion(this.main, this.$projectexplorerDiv);\r\n\r\n        this.initFilelistPanel();\r\n\r\n        this.initWorkspacelistPanel();\r\n\r\n    }\r\n\r\n    initFilelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.fileListPanel = new AccordionPanel(this.accordion, \"Kein Workspace gewählt\", \"1\",\r\n            \"img_add-file-dark\", \"Neue Datei...\", \"java\", true, false, \"file\", true, []);\r\n\r\n        this.fileListPanel.newFilesElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                if (that.main.currentWorkspace == null) {\r\n                    alert('Bitte wählen Sie zuerst einen Workspace aus.');\r\n                    return null;\r\n                }\r\n\r\n                let f: File = {\r\n                    name: accordionElement.name,\r\n                    dirty: false,\r\n                    saved: true,\r\n                    text: \"\",\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    panelElement: accordionElement\r\n                };\r\n                let m = new Module(f, that.main);\r\n                let modulStore = that.main.currentWorkspace.moduleStore;\r\n                modulStore.putModule(m);\r\n                that.setModuleActive(m);\r\n                that.main.networkManager.sendCreateFile(m, that.main.currentWorkspace, that.main.workspacesOwnerId,\r\n                    (error: string) => {\r\n                        if (error == null) {\r\n                            successfulNetworkCommunicationCallback(m);\r\n                        } else {\r\n                            alert('Der Server ist nicht erreichbar!');\r\n\r\n                        }\r\n                    });\r\n\r\n            };\r\n\r\n        this.fileListPanel.renameCallback =\r\n            (module: Module, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                let file = module.file;\r\n\r\n                file.name = newName;\r\n                file.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.fileListPanel.deleteCallback =\r\n            (module: Module, callbackIfSuccessful: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.currentWorkspace.moduleStore.removeModule(module);\r\n                        callbackIfSuccessful();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.fileListPanel.contextMenuProvider = (accordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            if (!(that.main.user.is_teacher || that.main.user.is_admin || that.main.user.is_schooladmin)) {\r\n                let module: Module = <Module>accordionElement.externalElement;\r\n                let file = module.file;\r\n\r\n                // if (file.submitted_date == null) {\r\n                //     cmiList.push({\r\n                //         caption: \"Als Hausaufgabe markieren\",\r\n                //         callback: (element: AccordionElement) => {\r\n\r\n                //             let file = (<Module>element.externalElement).file;\r\n                //             file.submitted_date = dateToString(new Date());\r\n                //             file.saved = false;\r\n                //             that.main.networkManager.sendUpdates(null, true);\r\n                //             that.renderHomeworkButton(file);\r\n                //         }\r\n                //     });\r\n                // } else {\r\n                //     cmiList.push({\r\n                //         caption: \"Hausaufgabenmarkierung entfernen\",\r\n                //         callback: (element: AccordionElement) => {\r\n\r\n                //             let file = (<Module>element.externalElement).file;\r\n                //             file.submitted_date = null;\r\n                //             file.saved = false;\r\n                //             that.main.networkManager.sendUpdates(null, true);\r\n                //             that.renderHomeworkButton(file);\r\n\r\n                //         }\r\n                //     });\r\n                // }\r\n\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n\r\n\r\n        this.fileListPanel.selectCallback =\r\n            (module: Module) => {\r\n                that.setModuleActive(module);\r\n            }\r\n\r\n\r\n\r\n    }\r\n\r\n    renderHomeworkButton(file: File) {\r\n        let $buttonDiv = file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonHomework');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_homeworkButton').remove();\r\n\r\n        let klass: string = null;\r\n        let title: string = \"\";\r\n        if (file.submitted_date != null) {\r\n            klass = \"img_homework\";\r\n            title = \"Wurde als Hausaufgabe abgegeben: \" + file.submitted_date\r\n            if (file.text_before_revision) {\r\n                klass = \"img_homework-corrected\";\r\n                title = \"Korrektur liegt vor.\"\r\n            }\r\n        }\r\n\r\n        if (klass != null) {\r\n            let $homeworkButtonDiv = jQuery(`<div class=\"jo_homeworkButton ${klass}\" title=\"${title}\"></div>`);\r\n            $buttonDiv.prepend($homeworkButtonDiv);\r\n            if (klass.indexOf(\"jo_active\") >= 0) {\r\n                $homeworkButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n                $homeworkButtonDiv.on('click', (e) => {\r\n                    e.stopPropagation();\r\n                    // TODO\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initWorkspacelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.workspaceListPanel = new AccordionPanel(this.accordion, \"Datenbanken\", \"3\",\r\n            null, \"Neue Datenbank...\", \"workspace\", true, true, \"workspace\", false, [\"file\"]);\r\n\r\n        let $newWorkspaceAction = jQuery('<div class=\"img_add-database-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Neue Datenbank auf oberster Ordnerebene anlegen\">');\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $newWorkspaceAction.on(mousePointer + 'down', (e) => {\r\n            e.stopPropagation();\r\n\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            new NewDatabaseDialog(that.main, owner_id, this.workspaceListPanel.getCurrentlySelectedPath());\r\n\r\n        })\r\n\r\n        this.workspaceListPanel.addAction($newWorkspaceAction);\r\n        if(this.workspaceListPanel.$buttonNew != null){\r\n            this.workspaceListPanel.$buttonNew.hide();\r\n        }\r\n\r\n        this.workspaceListPanel.newDatabaseElementCallback = (path: string[]) => {\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            new NewDatabaseDialog(that.main, owner_id, path);\r\n\r\n        }\r\n\r\n\r\n        this.workspaceListPanel.renameCallback =\r\n            (workspace: Workspace, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                workspace.name = newName;\r\n                workspace.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.workspaceListPanel.deleteCallback =\r\n            (workspace: Workspace, successfulNetworkCommunicationCallback: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"workspace\", workspace.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.removeWorkspace(workspace);\r\n                        if(!workspace.isFolder){\r\n                            that.fileListPanel.clear();\r\n                            that.main.databaseExplorer.clear();\r\n                            that.main.getResultsetPresenter().clear();\r\n                            that.fileListPanel.enableNewButton(false);\r\n                            that.main.getMonacoEditor().setModel(null);\r\n                        }\r\n                        successfulNetworkCommunicationCallback();\r\n                    } else {\r\n                        alert('Fehler: ' + error);\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.workspaceListPanel.selectCallback =\r\n            (workspace: Workspace) => {\r\n                if(workspace.isFolder) return;\r\n                if (workspace != this.main.currentWorkspace) {\r\n                    that.main.networkManager.sendUpdates(() => {\r\n                        that.setWorkspaceActive(workspace);\r\n                    });\r\n                }\r\n            }\r\n\r\n        this.workspaceListPanel.newFolderCallback = (newElement: AccordionElement, successCallback) => {\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            let folder: Workspace = new Workspace(newElement.name, that.main, owner_id);\r\n            folder.isFolder = true;\r\n\r\n            folder.path = newElement.path.join(\"/\");\r\n            folder.panelElement = newElement;\r\n            newElement.externalElement = folder;\r\n            that.main.workspaceList.push(folder);\r\n\r\n            let wd: CreateWorkspaceData = {\r\n                id: -1,\r\n                isFolder: true,\r\n                name: folder.name,\r\n                path: folder.path\r\n            }\r\n\r\n            that.main.networkManager.sendCreateWorkspace(wd, that.main.workspacesOwnerId, (error: string) => {\r\n                if (error == null) {\r\n                    folder.id = wd.id;\r\n                    successCallback(folder);\r\n\r\n                } else {\r\n                    alert(\"Fehler: \" + error);\r\n                    that.workspaceListPanel.removeElement(newElement);\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        this.workspaceListPanel.moveCallback = (ae: AccordionElement | AccordionElement[]) => {\r\n            if (!Array.isArray(ae)) ae = [ae];\r\n            for (let a of ae) {\r\n                let ws: Workspace = a.externalElement;\r\n                ws.path = a.path.join(\"/\");\r\n                ws.saved = false;\r\n            }\r\n            this.main.networkManager.sendUpdates();\r\n        }\r\n\r\n        this.workspaceListPanel.dropElementCallback = (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => {\r\n            let workspace: Workspace = dest.externalElement;\r\n            let module: Module = droppedElement.externalElement;\r\n\r\n            if (workspace.moduleStore.getModules(false).indexOf(module) >= 0) return; // module is already in destination workspace\r\n\r\n            let f: File = {\r\n                name: module.file.name,\r\n                dirty: true,\r\n                saved: false,\r\n                text: module.file.text,\r\n                text_before_revision: null,\r\n                submitted_date: null,\r\n                student_edited_after_revision: false,\r\n                version: module.file.version,\r\n                panelElement: null\r\n            };\r\n\r\n            if (dropEffekt == \"move\") {\r\n                // move file\r\n                let oldWorkspace = that.main.currentWorkspace;\r\n                oldWorkspace.moduleStore.removeModule(module);\r\n                that.fileListPanel.removeElement(module);\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, () => { });\r\n            }\r\n\r\n            let m = new Module(f, that.main);\r\n            let modulStore = workspace.moduleStore;\r\n            modulStore.putModule(m);\r\n            that.main.networkManager.sendCreateFile(m, workspace, that.main.workspacesOwnerId,\r\n                (error: string) => {\r\n                    if (error == null) {\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n\r\n        }\r\n\r\n\r\n\r\n        this.$homeAction = jQuery('<div class=\"img_home-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Meine eigenen Workspaces anzeigen\">');\r\n\r\n        this.$homeAction.on(mousePointer +'down', (e) => {\r\n            e.stopPropagation();\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n                that.onHomeButtonClicked();\r\n            });\r\n\r\n            that.main.bottomDiv.hideHomeworkTab();\r\n\r\n        })\r\n\r\n        this.workspaceListPanel.addAction(this.$homeAction);\r\n        this.$homeAction.hide();\r\n\r\n        this.workspaceListPanel.contextMenuProvider = (workspaceAccordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            if (this.main.user.is_teacher && this.main.teacherExplorer.classPanel.elements.length > 0) {\r\n                cmiList.push({\r\n                    caption: \"An Klasse austeilen...\",\r\n                    callback: (element: AccordionElement) => { },\r\n                    subMenu: this.main.teacherExplorer.classPanel.elements.map((ae) => {\r\n                        return {\r\n                            caption: ae.name,\r\n                            callback: (element: AccordionElement) => {\r\n                                let klasse = <any>ae.externalElement;\r\n\r\n                                let workspace: Workspace = element.externalElement;\r\n\r\n                                this.main.networkManager.sendDistributeWorkspace(workspace, klasse, null, (error: string) => {\r\n                                    if (error == null) {\r\n                                        let networkManager = this.main.networkManager;\r\n                                        let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                                        alert(\"Der Workspace \" + workspace.name + \" wurde an die Klasse \" + klasse.name + \" ausgeteilt. Er wird in maximal \" +\r\n                                            dt + \" s bei jedem Schüler ankommen.\");\r\n                                    } else {\r\n                                        alert(error);\r\n                                    }\r\n                                });\r\n\r\n                            }\r\n                        }\r\n                    })\r\n                },\r\n                    {\r\n                        caption: \"An einzelne Schüler/innen austeilen...\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let classes: ClassData[] = this.main.teacherExplorer.classPanel.elements.map(ae => ae.externalElement);\r\n                            let workspace: Workspace = element.externalElement;\r\n                            new DistributeToStudentsDialog(classes, workspace, this.main);\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n    }\r\n\r\n    onHomeButtonClicked() {\r\n        this.main.teacherExplorer.restoreOwnWorkspaces();\r\n        this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.ownUpdateFrequencyInSeconds;\r\n        this.$homeAction.hide();\r\n        this.fileListPanel.enableNewButton(this.main.workspaceList.length > 0);\r\n    }\r\n\r\n    renderFiles(workspace: Workspace) {\r\n\r\n        let name = workspace == null ? \"Kein Workspace vorhanden\" : workspace.name;\r\n\r\n        this.fileListPanel.setCaption(name);\r\n        this.fileListPanel.clear();\r\n\r\n        if (this.main.getCurrentWorkspace() != null) {\r\n            for (let module of this.main.getCurrentWorkspace().moduleStore.getModules(false)) {\r\n                module.file.panelElement = null;\r\n            }\r\n        }\r\n\r\n        if (workspace != null) {\r\n            let moduleList: Module[] = [];\r\n\r\n            for (let m of workspace.moduleStore.getModules(false)) {\r\n                moduleList.push(m);\r\n            }\r\n\r\n            moduleList.sort((a, b) => { return a.file.name > b.file.name ? 1 : a.file.name < b.file.name ? -1 : 0 });\r\n\r\n            for (let m of moduleList) {\r\n\r\n                m.file.panelElement = {\r\n                    name: m.file.name,\r\n                    externalElement: m,\r\n                    isFolder: false,\r\n                    path: []\r\n                };\r\n\r\n                this.fileListPanel.addElement(m.file.panelElement, true);\r\n                this.renderHomeworkButton(m.file);\r\n            }\r\n\r\n            this.fileListPanel.sortElements();\r\n\r\n        }\r\n    }\r\n\r\n    renderWorkspaces(workspaceList: Workspace[]) {\r\n\r\n        this.fileListPanel.clear();\r\n        this.workspaceListPanel.clear();\r\n\r\n        for (let w of workspaceList) {\r\n            let path = w.path.split(\"/\");\r\n            if (path.length == 1 && path[0] == \"\") path = [];\r\n            w.panelElement = {\r\n                name: w.name,\r\n                externalElement: w,\r\n                iconClass: 'workspace',\r\n                isFolder: w.isFolder,\r\n                path: path\r\n            };\r\n\r\n            this.workspaceListPanel.addElement(w.panelElement, false);\r\n            w.renderSettingsButton(w.panelElement);\r\n        }\r\n\r\n        this.workspaceListPanel.sortElements();\r\n        this.fileListPanel.enableNewButton(workspaceList.length > 0);\r\n\r\n\r\n\r\n    }\r\n\r\n    renderErrorCount(workspace: Workspace, errorCountMap: Map<Module, number>) {\r\n        if (errorCountMap == null) return;\r\n        for (let m of workspace.moduleStore.getModules(false)) {\r\n            let errorCount: number = errorCountMap.get(m);\r\n            let errorCountS: string = ((errorCount == null || errorCount == 0) ? \"\" : \"(\" + errorCount + \")\");\r\n\r\n            this.fileListPanel.setTextAfterFilename(m.file.panelElement, errorCountS, 'jo_errorcount');\r\n        }\r\n    }\r\n\r\n    setWorkspaceActive(w: Workspace, callback?: () => void, scrollIntoView: boolean = false) {\r\n\r\n        if(w == this.main.getCurrentWorkspace()){\r\n            if(callback != null) callback();\r\n            return;\r\n        }\r\n\r\n        if (w != null) {\r\n            this.fileListPanel.$buttonNew.show();\r\n        }\r\n\r\n        this.workspaceListPanel.select(w, false, scrollIntoView);\r\n\r\n        let callbackAfterDatabaseFetched = (error: string) => {this.initializeDatabaseTool(error, w, callback)};\r\n\r\n        if (w.database == null) {\r\n            this.main.waitOverlay.show(\"Bitte warten, hole Datenbank vom Server ...\");\r\n\r\n            this.main.networkManager.fetchDatabase(w, callbackAfterDatabaseFetched);\r\n        } else {\r\n            callbackAfterDatabaseFetched(null);\r\n        }\r\n\r\n    }\r\n\r\n    initializeDatabaseTool(error: string, w: Workspace, callback?: () => void) {\r\n        if (error != null) {\r\n            alert(error);\r\n            return;\r\n        }\r\n\r\n        let dbTool = this.main.getDatabaseTool();\r\n\r\n        let statements: string[] = w.database.statements;\r\n        if (statements == null) statements = [];\r\n\r\n        dbTool.initializeWorker(w.database.templateDump, statements,\r\n            () => {\r\n                this.main.currentWorkspace = w;\r\n\r\n                if (this.main.user.id == w.owner_id) {\r\n                    this.main.user.currentWorkspace_id = w.id;\r\n                }\r\n\r\n                this.renderFiles(w);\r\n\r\n                if (w != null) {\r\n                    let nonSystemModules = w.moduleStore.getModules(false);\r\n\r\n                    if (w.currentlyOpenModule != null) {\r\n                        this.setModuleActive(w.currentlyOpenModule);\r\n                    } else if (nonSystemModules.length > 0) {\r\n                        this.setModuleActive(nonSystemModules[0]);\r\n                    } else {\r\n                        this.setModuleActive(null);\r\n                    }\r\n\r\n                    for (let m of nonSystemModules) {\r\n                        m.file.dirty = true;\r\n                    }\r\n\r\n                    if (nonSystemModules.length == 0) {\r\n\r\n                        Helper.showHelper(\"newSQLFileHelper\", this.main, this.fileListPanel.$captionElement);\r\n\r\n                    }\r\n\r\n                    this.main.notifier.connect(w);\r\n\r\n                } else {\r\n                    this.setModuleActive(null);\r\n                }\r\n\r\n            },\r\n            () => {\r\n                this.main.databaseExplorer.refreshAfterRetrievingDBStructure();\r\n                this.main.getHistoryViewer().clearAndShowStatements(w.database.statements);\r\n                if(callback != null) callback();\r\n            });\r\n\r\n    }\r\n\r\n    writeEditorTextToFile() {\r\n        let cem = this.getCurrentlyEditedModule();\r\n        if (cem != null)\r\n            cem.file.text = cem.getProgramTextFromMonacoModel(); // 29.03. this.main.monaco.getValue();\r\n    }\r\n\r\n\r\n    lastOpenModule: Module = null;\r\n    setModuleActive(m: Module) {\r\n\r\n        this.main.bottomDiv.homeworkManager.hideRevision();\r\n\r\n        if (this.lastOpenModule != null) {\r\n            this.lastOpenModule.file.text = this.lastOpenModule.getProgramTextFromMonacoModel(); // this.main.monaco.getValue();\r\n            this.lastOpenModule.editorState = this.main.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (m == null) {\r\n            this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n        } else {\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.main.getMonacoEditor().setModel(m.model);\r\n            if (this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(m.bracketError);\r\n\r\n            if (m.file.text_before_revision != null) {\r\n                this.main.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n            } else {\r\n                this.main.bottomDiv.homeworkManager.hideHomeworkRevisionButton();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setActiveAfterExternalModelSet(m: Module) {\r\n        this.fileListPanel.select(m, false);\r\n\r\n        this.lastOpenModule = m;\r\n\r\n        if (m.editorState != null) {\r\n            this.main.editor.dontPushNextCursorMove++;\r\n            this.main.getMonacoEditor().restoreViewState(m.editorState);\r\n            this.main.editor.dontPushNextCursorMove--;\r\n        }\r\n\r\n        this.setCurrentlyEditedModule(m);\r\n\r\n        this.showProgramPointer();\r\n\r\n        setTimeout(() => {\r\n            if (!this.main.getMonacoEditor().getOptions().get(monaco.editor.EditorOption.readOnly)) {\r\n                this.main.getMonacoEditor().focus();\r\n            }\r\n        }, 300);\r\n\r\n    }\r\n\r\n\r\n    private showProgramPointer() {\r\n\r\n        if (this.programPointerModule == this.getCurrentlyEditedModule() && this.getCurrentlyEditedModule() != null) {\r\n            let position = this.programPointerPosition;\r\n            let range = {\r\n                startColumn: position.column, startLineNumber: position.line,\r\n                endColumn: position.column + position.length, endLineNumber: position.line\r\n            };\r\n\r\n            this.main.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n            this.programPointerDecoration = this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n                {\r\n                    range: range,\r\n                    options: {\r\n                        className: 'jo_revealProgramPointer', isWholeLine: true,\r\n                        overviewRuler: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.OverviewRulerLane.Center\r\n                        },\r\n                        minimap: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    range: range,\r\n                    options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n                }\r\n            ]);\r\n\r\n        }\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        // console statement execution:\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        let module = this.main.currentWorkspace.moduleStore.findModuleByFile(file);\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        this.programPointerModule = module;\r\n        this.programPointerPosition = position;\r\n\r\n        if (module != this.getCurrentlyEditedModule()) {\r\n            this.setModuleActive(module);\r\n        } else {\r\n            this.showProgramPointer();\r\n        }\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws == null) return null;\r\n\r\n        return ws.currentlyOpenModule;\r\n    }\r\n\r\n    setCurrentlyEditedModule(m: Module) {\r\n        if (m == null) return;\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws.currentlyOpenModule != m) {\r\n            ws.currentlyOpenModule = m;\r\n            ws.saved = false;\r\n            m.file.dirty = true;\r\n        }\r\n    }\r\n\r\n    setExplorerColor(color: string) {\r\n        let caption: string;\r\n\r\n        if (color == null) {\r\n            color = \"transparent\";\r\n            caption = \"Meine Datenbanken\";\r\n        } else {\r\n            caption = \"Schüler-DB\";\r\n        }\r\n\r\n        this.fileListPanel.$listElement.parent().css('background-color', color);\r\n        this.workspaceListPanel.$listElement.parent().css('background-color', color);\r\n\r\n        this.workspaceListPanel.setCaption(caption);\r\n    }\r\n\r\n    getNewModule(file: File): Module {\r\n        return new Module(file, this.main);\r\n    }\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class RightDiv {\r\n\r\n    isWholePage: boolean = false;\r\n\r\n    $tabs: JQuery<HTMLElement>;\r\n    $headings: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $rightDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$tabs = $rightDiv.find('.jo_tabs');\r\n        this.$headings = $rightDiv.find('.jo_tabheadings');\r\n        \r\n        let withClassDiagram = this.$headings.find('.jo_classDiagramTabHeading').length > 0;\r\n        let withObjectDiagram = this.$headings.find('.jo_objectDiagramTabHeading').length > 0;\r\n\r\n        let that = this;\r\n        let rightdiv_width: string = \"100%\";\r\n        $rightDiv.find('.jo_whole-window').on(\"click\", () => {\r\n\r\n            that.isWholePage = !that.isWholePage;\r\n            \r\n            let $wholeWindow = jQuery('.jo_whole-window');\r\n\r\n            if (!that.isWholePage) {\r\n                jQuery('#code').css('display', 'flex');\r\n                jQuery('#rightdiv').css('width', rightdiv_width);\r\n                // jQuery('#run').css('width', '');\r\n                $wholeWindow.removeClass('img_whole-window-back');\r\n                $wholeWindow.addClass('img_whole-window');\r\n                jQuery('#controls').insertAfter(jQuery('#view-mode'));\r\n                $wholeWindow.attr('title', 'Auf Fenstergröße vergrößern');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            } else {\r\n                jQuery('#code').css('display', 'none');\r\n                rightdiv_width = jQuery('#rightdiv').css('width');\r\n                jQuery('#rightdiv').css('width', '100%');\r\n                $wholeWindow.removeClass('img_whole-window');\r\n                $wholeWindow.addClass('img_whole-window-back');\r\n                // that.adjustWidthToWorld();\r\n                jQuery('.jo_control-container').append(jQuery('#controls'));\r\n                $wholeWindow.attr('title', 'Auf normale Größe zurückführen');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$rightDiv);\r\n    }\r\n\r\n\r\n\r\n}","import { jo_mouseDetected } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\nexport class Sliders {\r\n\r\n    main: Main;\r\n\r\n    constructor(main: Main) {\r\n        this.main = main;\r\n    }\r\n\r\n    initSliders() {\r\n        let that = this;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        jQuery('#slider1').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider1\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                \r\n                that.moveLeftPanel(dx);\r\n\r\n                x = mm.clientX;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider1\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider1\");\r\n                jQuery(document).off(mousePointer + \"up.slider1\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider2').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider2\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n\r\n                that.moveBottomDiv(dy);\r\n\r\n                y = mm.clientY;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider2\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider2\");\r\n                jQuery(document).off(mousePointer + \"up.slider2\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider3').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider3\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n\r\n                that.moveRightDiv(dx);\r\n\r\n                x = mm.clientX;\r\n                mm.stopPropagation();\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider3\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider3\");\r\n                jQuery(document).off(mousePointer + \"up.slider3\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        let sliderknobLeft = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"left: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobLeft);\r\n        sliderknobLeft.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopImmediatePropagation();\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobleft\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopImmediatePropagation();\r\n\r\n                that.moveLeftPanel(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobleft\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobleft\");\r\n                jQuery(document).off(mousePointer + \"up.knobleft\");\r\n            });\r\n\r\n        });\r\n\r\n        let sliderknobRight = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"right: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobRight);\r\n        sliderknobRight.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopImmediatePropagation();\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobright\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopImmediatePropagation();\r\n\r\n                that.moveRightDiv(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobright\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobright\");\r\n                jQuery(document).off(mousePointer + \"up.knobright\");\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n    \r\n    moveRightDiv(dx: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $rightDiv = jQuery('#rightdiv');\r\n\r\n        let width = Number.parseInt($rightDiv.css('width').replace('px', ''));\r\n        $rightDiv.css('width', (width - dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth + dx) + \"px\");\r\n        \r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n        jQuery('.jo_graphics').trigger('sizeChanged');\r\n        width += dx;\r\n}\r\n    moveBottomDiv(dy: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $bottomDiv = jQuery('#bottomdiv-outer');\r\n\r\n        let height = Number.parseInt($bottomDiv.css('height').replace('px', ''));\r\n        $bottomDiv.css('height', (height - dy) + \"px\");\r\n\r\n        let meheight = Number.parseInt($editor.css('height').replace('px', ''));\r\n        $editor.css('height', (meheight + dy) + \"px\");\r\n\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n}\r\n\r\n    moveLeftPanel(dx: number) {\r\n        let $leftPanel = jQuery('#leftpanel');\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n\r\n        let width = Number.parseInt($leftPanel.css('width').replace('px', ''));\r\n        $leftPanel.css('width', (width + dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth - dx) + \"px\");\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionPanel, AccordionElement } from \"./Accordion.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassData, UserData, CRUDUserRequest, CRUDClassRequest, GetWorkspacesResponse, GetWorkspacesRequest, Workspaces } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\nexport class TeacherExplorer {\r\n\r\n    studentPanel: AccordionPanel;\r\n    classPanel: AccordionPanel;\r\n\r\n    // save them here when displaying pupils workspaces:\r\n    ownWorkspaces: Workspace[];\r\n    currentOwnWorkspace: Workspace;\r\n\r\n    constructor(private main: Main, private classData: ClassData[]) {\r\n\r\n    }\r\n\r\n    removePanels() {\r\n        this.classPanel.remove();\r\n        this.studentPanel.remove();\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.initStudentPanel();\r\n\r\n        this.initClassPanel();\r\n\r\n        this.renderClasses(this.classData);\r\n\r\n    }\r\n\r\n    initStudentPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.studentPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Schüler/innen\", \"2\", null,\r\n            \"\", \"student\", false, false, \"student\", false, []);\r\n\r\n        this.studentPanel.selectCallback = (ae: UserData) => {\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let request: GetWorkspacesRequest = {\r\n                    ws_userId: ae.id,\r\n                    userId: this.main.user.id,\r\n                    language: 1\r\n                }\r\n\r\n                ajax(\"getWorkspaces\", request, (response: GetWorkspacesResponse) => {\r\n                    if (response.success == true) {\r\n\r\n                        if (that.main.workspacesOwnerId == that.main.user.id) {\r\n                            that.ownWorkspaces = that.main.workspaceList.slice();\r\n                            that.currentOwnWorkspace = that.main.currentWorkspace;\r\n                        }\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces);\r\n                        that.main.workspacesOwnerId = ae.id;\r\n                        that.main.projectExplorer.setExplorerColor(\"rgba(255, 0, 0, 0.2\");\r\n                        that.main.projectExplorer.$homeAction.show();\r\n                        Helper.showHelper(\"homeButtonHelper\", this.main);\r\n\r\n                        that.main.bottomDiv.showHomeworkTab();\r\n                        that.main.bottomDiv.homeworkManager.attachToWorkspaces(that.main.workspaceList);\r\n                    }\r\n\r\n                    this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n                    this.main.networkManager.secondsTillNextUpdate = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    restoreOwnWorkspaces() {\r\n        let main = this.main;\r\n\r\n        // main.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n        main.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        main.workspaceList = this.ownWorkspaces;\r\n        main.currentWorkspace = this.currentOwnWorkspace;\r\n        main.workspacesOwnerId = main.user.id;\r\n        main.projectExplorer.setExplorerColor(null);\r\n\r\n        main.projectExplorer.renderWorkspaces(main.workspaceList);\r\n\r\n        if (main.currentWorkspace == null && main.workspaceList.length > 0) {\r\n            main.currentWorkspace = main.workspaceList[0];\r\n        }\r\n\r\n        if (main.currentWorkspace != null) {\r\n            main.projectExplorer.setWorkspaceActive(main.currentWorkspace);\r\n        }\r\n\r\n        this.studentPanel.select(null, false);\r\n\r\n    }\r\n\r\n    initClassPanel() {\r\n        let that = this;\r\n\r\n        this.classPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Klassen\", \"1\", null, \"\", \"class\", false, false, \"class\", false, []);\r\n\r\n        this.classPanel.selectCallback = (ea) => {\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let classData = <ClassData>ea;\r\n                if (classData != null) {\r\n                    this.renderStudents(classData.students);\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    renderStudents(userDataList: UserData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        userDataList.sort((a, b) => {\r\n            if (a.familienname > b.familienname) return 1;\r\n            if (b.familienname > a.familienname) return -1;\r\n            if (a.rufname > b.rufname) return 1;\r\n            if (b.rufname > a.rufname) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let ud of userDataList) {\r\n            let ae: AccordionElement = {\r\n                name: ud.familienname + \", \" + ud.rufname,\r\n                sortName: ud.familienname + \" \" + ud.rufname,\r\n                externalElement: ud,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.studentPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n    renderClasses(classDataList: ClassData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        classDataList.sort((a, b) => {\r\n            if (a.name > b.name) return 1;\r\n            if (b.name > a.name) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let cd of classDataList) {\r\n            let ae: AccordionElement = {\r\n                name: cd.name,\r\n                externalElement: cd,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.classPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","export type DialogButton = {\r\n    caption: string,\r\n    color: string,\r\n    callback: () => void\r\n}\r\n\r\nexport class Dialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            '<div style=\"flex: 1\"></div>' +\r\n            '<div class=\"dialog-main\"></div>' +\r\n            '<div style=\"flex: 4\"></div>'\r\n        ));\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n    }\r\n\r\n    heading(text: string) {\r\n        let $div = jQuery('<div class=\"dialog-heading\">' + text + \"</div>\")\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    description(text: string, color?: string) {\r\n        let colorStyle = color == null ? \"\" : `style=\"color: ${color}\"`;\r\n        let $div = jQuery(`<div class=\"dialog-description\" ${colorStyle}>${text}</div>`)\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    input(type: string, placeholder: string):JQuery<HTMLInputElement> {\r\n        let $div = jQuery(`<input class=\"dialog-input\" type=\"${type}\" placeholder=\"${placeholder}\"></input>`)\r\n        this.$dialogMain.append($div);\r\n        return <any>$div;\r\n    }\r\n\r\n    buttons(buttons: DialogButton[]){\r\n\r\n        let $buttonRow = jQuery('<div class=\"dialog-buttonRow\"></div>')\r\n        this.$dialogMain.append($buttonRow);\r\n\r\n        for(let button of buttons){\r\n\r\n            let $button = jQuery(`<button style=\"background-color: ${button.color};margin-left: 20px\">${button.caption}</button>`)\r\n            $button.on(\"click\", () => {button.callback()})\r\n            $buttonRow.append($button);\r\n        }\r\n    }\r\n\r\n    waitMessage(text: string): (visible: boolean) => void {\r\n\r\n        let $message = jQuery(`<div class=\"dialog-wait\">${text}<img src=\"assets/projectexplorer/svg-loaders/ball-triangle.svg\"></div>`)\r\n        this.$dialogMain.append($message);\r\n\r\n        return (visible: boolean) => {\r\n            let visibility = visible ? \"visible\" : \"hidden\";\r\n            $message.css(\"visibility\", visibility);\r\n        }\r\n\r\n    }\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { openContextMenu, ContextMenuItem } from \"../../tools/HtmlTools.js\";\r\nimport { Dialog } from \"./Dialog.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\n\r\nexport class UserMenu {\r\n\r\n\r\n\r\n    constructor(private main: Main){\r\n        \r\n    }\r\n\r\n    init(){\r\n        let $userSettingsButton = jQuery('#buttonUserSettings');\r\n        let that = this;\r\n\r\n        $userSettingsButton.on(\"click\", (e) => {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [\r\n                {\r\n                    caption: \"Passwort ändern...\",\r\n                    callback: () => {\r\n                        let passwortChanger = new PasswordChanger(that.main);\r\n                        passwortChanger.show();\r\n                    }\r\n                }\r\n            ]\r\n\r\n\r\n            openContextMenu(contextMenuItems, $userSettingsButton.offset().left, $userSettingsButton.offset().top + $userSettingsButton.height());\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class PasswordChanger {\r\n\r\n    dialog: Dialog;\r\n\r\n    constructor(private main: Main){\r\n\r\n        this.dialog = new Dialog();\r\n\r\n    }\r\n\r\n    show() {\r\n        this.dialog.init();\r\n        this.dialog.heading(\"Passwort ändern\");\r\n        this.dialog.description(\"Bitte geben Sie Ihr bisheriges Passwort und darunter zweimal Ihr neues Passwort ein. <br>\" + \r\n        \"Das Passwort muss mindestens 8 Zeichen lang sein und sowohl Buchstaben als auch Zahlen oder Sonderzeichen enthalten.\")\r\n        let $oldPassword = this.dialog.input(\"password\", \"Altes Passwort\");\r\n        let $newPassword1 = this.dialog.input(\"password\", \"Neues Passwort\");\r\n        let $newPassword2 = this.dialog.input(\"password\", \"Neues Passwort wiederholen\");\r\n        let $errorDiv = this.dialog.description(\"\", \"red\");\r\n        let waitDiv = this.dialog.waitMessage(\"Bitte warten...\")\r\n\r\n        this.dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {this.dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    if($newPassword1.val() != $newPassword2.val()){\r\n                        $errorDiv.text(\"Die zwei eingegebenen neuen Passwörter stimmen nicht überein.\")\r\n                    } else {\r\n                        waitDiv(true);\r\n                        ajax(\"changePassword\", {oldPassword: $oldPassword.val(), newPassword: $newPassword1.val()}, () => {\r\n                            waitDiv(false);\r\n                            alert(\"Das Passwort wurde erfolgreich geändert.\");\r\n                            this.dialog.close();\r\n                        }, (message) => {\r\n                            waitDiv(false);\r\n                            $errorDiv.text(message)\r\n                        })\r\n                    }\r\n\r\n                }\r\n            },\r\n        ])\r\n    }\r\n\r\n}","import { ajax } from \"../communication/AjaxHelper.js\";\r\nimport { LoginRequest, LoginResponse, LogoutRequest, UserData } from \"../communication/Data.js\";\r\nimport { Main } from \"./Main.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { userInfo } from \"os\";\r\nimport { UserMenu } from \"./gui/UserMenu.js\";\r\nimport { escapeHtml } from \"../tools/StringTools.js\";\r\n\r\nexport class Login {\r\n\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        let that = this;\r\n\r\n        let $loginSpinner = jQuery('#login-spinner>img');\r\n\r\n        jQuery('#login-username').focus();\r\n\r\n        jQuery('#login-username').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-password').focus();\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-button').focus();\r\n                jQuery('#login-button').addClass('jo_active');\r\n            }\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-button').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-username').focus();\r\n                jQuery('#login-button').removeClass('jo_active');\r\n            } else {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        // Avoid double login when user does doubleclick:\r\n        let loginHappened = false;\r\n        jQuery('#login-button').on('click', () => {\r\n\r\n            $loginSpinner.show();\r\n\r\n            if (loginHappened) return;\r\n            loginHappened = true;\r\n\r\n            setTimeout(() => {\r\n                loginHappened = false;\r\n            }, 1000);\r\n\r\n            let loginRequest: LoginRequest = {\r\n                username: <string>jQuery('#login-username').val(),\r\n                password: <string>jQuery('#login-password').val(),\r\n                language: 1\r\n            }\r\n\r\n            ajax('login', loginRequest, (response: LoginResponse) => {\r\n\r\n                if (!response.success) {\r\n                    jQuery('#login-message').html('Fehler: Benutzername und/oder Passwort ist falsch.');\r\n                } else {\r\n\r\n                    // We don't do this anymore for security reasons - see AjaxHelper.ts\r\n                    // Alternatively we now set a long expiry interval for cookie.\r\n                    // credentials.username = loginRequest.username;\r\n                    // credentials.password = loginRequest.password;\r\n\r\n                    jQuery('#login').hide();\r\n\r\n                    this.main.waitOverlay.show('Bitte warten...');\r\n\r\n                    let user: UserData = response.user;\r\n                    if (user.settings == null || user.settings.helperHistory == null) {\r\n                        user.settings = {\r\n                            helperHistory: {\r\n                            },\r\n                            viewModes: null,\r\n                            classDiagram: null\r\n                        }\r\n                    }\r\n\r\n                    this.main.waitForGUICallback = () => {\r\n\r\n                        that.main.mainMenu.initGUI(user);\r\n\r\n                        that.main.waitOverlay.hide();\r\n                        $loginSpinner.hide();\r\n                        jQuery('#menupanel-username').html(escapeHtml(user.rufname) + \" \" + escapeHtml(user.familienname));\r\n\r\n                        new UserMenu(that.main).init();\r\n\r\n                        if (user.is_teacher) {\r\n                            that.main.initTeacherExplorer(response.classdata);\r\n                        }\r\n\r\n                        that.main.user = user;\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces);\r\n                        that.main.workspacesOwnerId = user.id;\r\n\r\n                        that.main.networkManager.initializeTimer();\r\n\r\n                        that.main.projectExplorer.fileListPanel.setFixed(!user.is_teacher);\r\n                        that.main.projectExplorer.workspaceListPanel.setFixed(!user.is_teacher);\r\n\r\n                        that.main.viewModeController.initViewMode();\r\n                        that.main.bottomDiv.hideHomeworkTab();\r\n\r\n                        that.main.networkManager.initializeNotifierClient();\r\n\r\n                    }\r\n\r\n                    if (this.main.startupComplete == 0) {\r\n                        this.main.waitForGUICallback();\r\n                        this.main.waitForGUICallback = null;\r\n                    }\r\n\r\n                }\r\n\r\n            }, (errorMessage: string) => {\r\n                jQuery('#login-message').html('Login gescheitert: ' + errorMessage);\r\n                jQuery('#login-spinner>img').hide();\r\n            }\r\n            );\r\n\r\n        });\r\n\r\n        jQuery('#buttonLogout').on('click', () => {\r\n\r\n            this.main.waitOverlay.show('Bitte warten, der letzte Bearbeitungsstand wird noch gespeichert ...');\r\n\r\n            if (this.main.workspacesOwnerId != this.main.user.id) {\r\n                this.main.projectExplorer.onHomeButtonClicked();\r\n            }\r\n\r\n            this.main.networkManager.sendUpdates(() => {\r\n\r\n                let logoutRequest: LogoutRequest = {\r\n                    currentWorkspaceId: this.main.currentWorkspace?.id\r\n                }\r\n\r\n                ajax('logout', logoutRequest, () => {\r\n                    // window.location.href = 'index.html';\r\n                    this.main.networkManager.sendUpdateUserSettings(() => {});\r\n\r\n                    jQuery('#login').show();\r\n                    this.main.waitOverlay.hide();\r\n                    jQuery('#login-message').empty();\r\n                    this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"\", \"myJava\"));\r\n                    this.main.projectExplorer.fileListPanel.clear();\r\n                    this.main.projectExplorer.workspaceListPanel.clear();\r\n\r\n                    this.main.databaseExplorer.clear();\r\n                    this.main.resultsetPresenter.clear();\r\n\r\n                    if (this.main.user.is_teacher) {\r\n                        this.main.teacherExplorer.removePanels();\r\n                        this.main.teacherExplorer = null;\r\n                    }\r\n\r\n\r\n                    this.main.currentWorkspace = null;\r\n                    this.main.user = null;\r\n\r\n\r\n                });\r\n            }, true);\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\nimport { ViewModes, ViewMode } from \"../../communication/Data\";\r\n\r\nexport class ViewModeController {\r\n\r\n    $buttonEditorFullscreen: JQuery<HTMLElement>;\r\n    $buttonPresentationMode: JQuery<HTMLElement>;\r\n    $buttonMonitorMode: JQuery<HTMLElement>;\r\n\r\n    $buttonMap: { [key: string]: JQuery<HTMLElement> } = {};\r\n\r\n    highContrast: boolean = false;\r\n    editorHasFullWidth: boolean = false;\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private main: Main) {\r\n\r\n        this.$buttonEditorFullscreen = jQuery('<div title=\"Editor in voller Breite\" class=\"img_whole-window jo_button jo_active\" style=\"padding: 1px; margin-right: 20px\"></div>');\r\n        this.$buttonPresentationMode = jQuery('<div title=\"Präsentation (Beamer)\" class=\"img_presentation-mode jo_button jo_active\" syle=\"padding: 1px\"></div>');\r\n        this.$buttonMonitorMode = jQuery('<div title=\"Monitor\" class=\"img_monitor-mode jo_button jo_active\" style=\"margin-left: 5px; padding: 1px\"></div>');\r\n        $buttonsContainer.append(this.$buttonEditorFullscreen, this.$buttonPresentationMode, this.$buttonMonitorMode);\r\n\r\n        this.$buttonMap = {\r\n            \"presentation\": this.$buttonPresentationMode,\r\n            \"monitor\": this.$buttonMonitorMode\r\n        };\r\n\r\n        let am = this.main.actionManager;\r\n\r\n        am.registerAction(\"editor.fullwidth\", [],\r\n            () => {\r\n                this.toggleEditorFullwidth();\r\n            }, \"Editor auf die volle Breite erweitern\", this.$buttonEditorFullscreen);\r\n\r\n        am.registerAction(\"viewmode.presentation\", [],\r\n            () => {\r\n                this.setMode(\"presentation\");\r\n            }, \"Präsentationsansicht\", this.$buttonPresentationMode);\r\n\r\n        am.registerAction(\"viewmode.monitor\", [],\r\n            () => {\r\n                this.setMode(\"monitor\");\r\n            }, \"Monitoransicht\", this.$buttonMonitorMode);\r\n\r\n    }\r\n\r\n    toggleEditorFullwidth() {\r\n        if(this.editorHasFullWidth){\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in voller Breite');\r\n            jQuery('#rightdiv').show(600);\r\n            jQuery('#leftpanel').show(600);\r\n            jQuery('#controls').show();\r\n        } else {\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in normaler Breite');\r\n            jQuery('#rightdiv').hide(600);\r\n            jQuery('#leftpanel').hide(600);\r\n            jQuery('#controls').hide();\r\n        }\r\n\r\n        setTimeout(()=>{\r\n            this.main.getMonacoEditor().layout();\r\n        }, 800);\r\n\r\n        this.editorHasFullWidth = !this.editorHasFullWidth;\r\n    }\r\n\r\n    setMode(mode: \"presentation\" | \"monitor\", saveSettings: boolean = true) {\r\n\r\n        let otherMode = mode == \"presentation\" ? \"monitor\" : \"presentation\";\r\n\r\n        this.$buttonMap[mode].addClass(\"jo_pressed\");\r\n        this.$buttonMap[otherMode].removeClass(\"jo_pressed\");\r\n\r\n        let settings = this.main.user.settings;\r\n        let viewModes = settings.viewModes;\r\n\r\n        let viewMode = viewModes[mode];\r\n        viewModes.viewModeChosen = mode;\r\n\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n\r\n        this.main.editor.setFontSize(viewMode.fontSize);\r\n\r\n        if (this.highContrast != viewMode.highContrast) {\r\n            let editor = this.main.getMonacoEditor();\r\n            editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n            this.highContrast = !this.highContrast;\r\n        }\r\n\r\n        if (saveSettings) this.saveSettings();\r\n\r\n    }\r\n\r\n    saveFontSize(fontSizePx: number) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.fontSize = fontSizePx;\r\n        this.saveSettings();\r\n    }\r\n\r\n    setTheme(theme: string) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.theme = theme;\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n        this.saveSettings();\r\n    }\r\n\r\n    toggleHighContrast() {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.highContrast = !viewMode.highContrast;\r\n        let editor = this.main.getMonacoEditor();\r\n        editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n        this.saveSettings();\r\n    }\r\n\r\n    getChosenViewMode(): ViewMode {\r\n        let viewModes = this.main.user.settings.viewModes;\r\n        return viewModes[viewModes.viewModeChosen];\r\n    }\r\n\r\n    saveSettings() {\r\n        this.main.userDataDirty = true;\r\n    }\r\n\r\n    initViewMode() {\r\n        let settings = this.main.user.settings;\r\n\r\n        if (settings[\"viewModes\"] == null) {\r\n            settings[\"viewModes\"] = {\r\n                monitor: null,\r\n                presentation: null,\r\n                viewModeChosen: \"monitor\"\r\n            }\r\n        }\r\n\r\n        if (settings.viewModes.monitor == null) {\r\n            settings.viewModes.monitor = {\r\n                fontSize: 14,\r\n                highContrast: false,\r\n                theme: \"dark\"\r\n            };\r\n\r\n            settings.viewModes.presentation = {\r\n                fontSize: 18,\r\n                highContrast: false,\r\n                theme: \"light\"\r\n            }\r\n            this.saveSettings();\r\n        }\r\n        this.setMode(settings.viewModes.viewModeChosen, false);\r\n    }\r\n\r\n\r\n}","import { Main } from \"../../main/Main.js\";\r\nimport { TextPosition } from \"../lexer/Token\";\r\nimport { Module } from \"./Module\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype SemicolonPosition = {\r\n    position: TextPosition;\r\n    module: Module;\r\n    firstSeenMs: number;\r\n    isThereAgain: boolean;\r\n}\r\n\r\nexport class SemicolonAngel {\r\n    \r\n    semicolonPositions: SemicolonPosition[] = [];\r\n    time: number;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    startRegistering(){\r\n        this.semicolonPositions.forEach(p => p.isThereAgain = false);\r\n        this.time = new Date().getTime();\r\n    }\r\n\r\n    register(position: TextPosition, module: Module){\r\n        let oldEvidence = this.semicolonPositions.find(p => p.position.line == position.line && p.position.column == position.column);\r\n        if(oldEvidence){\r\n            oldEvidence.isThereAgain = true;\r\n        } else {\r\n            this.semicolonPositions.push({position: position, firstSeenMs: this.time, isThereAgain: true, module: module});\r\n        }\r\n    }\r\n\r\n    healSemicolons(){\r\n        let time = new Date().getTime();\r\n        this.semicolonPositions = this.semicolonPositions.filter(p => p.isThereAgain);\r\n\r\n        let currentlyEditedModule = this.main.getCurrentlyEditedModule();\r\n        let cursorLine = this.main.getMonacoEditor().getPosition().lineNumber;\r\n\r\n        this.semicolonPositions.filter(p => time - p.firstSeenMs > 2000).forEach(p => {\r\n\r\n            let isCurrentModule = p.module.file.id != null && p.module.file.id == currentlyEditedModule.file.id;\r\n\r\n            let editOperations: monaco.editor.IIdentifiedSingleEditOperation[] = [\r\n                {\r\n                    range: new monaco.Range(p.position.line, p.position.column, p.position.line, p.position.column),\r\n                    text: \";\",\r\n                    forceMoveMarkers: true\r\n                }\r\n            ]\r\n\r\n            if(isCurrentModule){\r\n                if(Math.abs(cursorLine - p.position.line) > 1){\r\n                    let editor = this.main.getMonacoEditor();\r\n                    const selection = editor.getSelection();\r\n                    editor.executeEdits('Semicolon-Angel', editOperations);\r\n                    editor.setSelection(selection);\r\n                    this.semicolonPositions.splice(this.semicolonPositions.indexOf(p), 1);\r\n                }\r\n            } \r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\r\nimport { Table, Column } from \"../../compiler/parser/SQLTable.js\";\r\nimport { DatabaseStructure } from \"../../tools/DatabaseTools.js\";\r\n\r\nexport class DatabaseExplorer {\r\n\r\n    collapsedTables: Map<string, boolean> = new Map();\r\n\r\n    constructor(private main: MainBase, public $mainDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    refresh() {\r\n\r\n        let dbTool = this.main.getDatabaseTool();\r\n\r\n        dbTool.retrieveDatabaseStructure((dbstructure: DatabaseStructure) => {\r\n\r\n            this.refreshAfterRetrievingDBStructure();\r\n        });\r\n\r\n    }\r\n\r\n    clear(){\r\n        this.$mainDiv.empty();\r\n    }\r\n\r\n    refreshAfterRetrievingDBStructure() {\r\n        let dbTool = this.main.getDatabaseTool();\r\n        let workspace = this.main.getCurrentWorkspace();\r\n        if (workspace != null) {\r\n            for (let m of workspace.moduleStore.getModules(false)) {\r\n                m.file.dirty = true;\r\n            }\r\n        }\r\n\r\n        let tables = Table.fromTableStructureList(dbTool.databaseStructure.tables);\r\n\r\n        this.$mainDiv.empty();\r\n\r\n        for (let table of tables) {\r\n            if(table.identifier != \"sqlite_sequence\"){\r\n                let $table = this.renderTable(table);\r\n                this.$mainDiv.append($table);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    renderTable(table: Table): JQuery<HTMLElement> {\r\n        let isCollapsed = this.collapsedTables.get(table.identifier) != null;\r\n\r\n        let $table = jQuery(\r\n            `<div class=\"jo_table\">\r\n           <div class=\"jo_tableheader\">\r\n              <div class=\"${isCollapsed ? 'img_tree-collapsed-dark' : 'img_tree-expanded-dark'} jo_treeswitch jo_button jo_active\"></div>\r\n              <div class=\"jo_tableheaderlink\">\r\n                <div class=\"img_table\"></div>\r\n                <div>${table.identifier}</div></div><div class=\"jo_tablesize\">(${table.size}&nbsp;Datensätze)</div>\r\n              </div>\r\n            </div>\r\n        </div>`);\r\n\r\n        $table.find('.jo_tableheader').on('pointerup', () => {\r\n            this.main.getResultsetPresenter().showTable(table.identifier);\r\n\r\n        })\r\n\r\n        let $columns = jQuery('<div class=\"jo_columnlist\"></div>')\r\n\r\n        for (let column of table.columns) {\r\n            let image = column.isPrimaryKey ? \"img_key\" : \"img_column\";\r\n\r\n            let referencesHtml = \"\";\r\n            if (column.references != null) {\r\n                referencesHtml = `<div class=\"img_foreign_key\" style=\"margin-left: 5px\"></div><div class=\"jo_references\">${column.references.table.identifier}.${column.references.identifier}</div>`\r\n            }\r\n\r\n            let type = column.type == null ? \"\" : column.type.toString();\r\n            let notNull: string = column.notNull ? '<div class=\"jo_dbnotnull\">not null</div>' : \"\";\r\n            let defaultValue: string = column.defaultValue ? `<div class=\"jo_dbdefault\">default ${column.defaultValue}</div>` : \"\";\r\n            let autoincrement: string = column.isAutoIncrement ? `<div class=\"jo_dbautoincrement\">autoincrement</div>` : \"\";\r\n\r\n            let $column = jQuery(`\r\n            <div class=\"jo_column\">\r\n                <div class=\"${image}\"></div>\r\n                <div>${column.identifier}</div>\r\n                <div class=\"jo_dbtype\">${type}</div>\r\n                ${autoincrement}\r\n                ${referencesHtml}\r\n                ${notNull}\r\n                ${defaultValue}\r\n            </div>\r\n            `);\r\n            $columns.append($column);\r\n        }\r\n\r\n        $table.append($columns);\r\n\r\n        let $treeSwitch = $table.find('.jo_treeswitch');\r\n        let that = this;\r\n        $treeSwitch.on('pointerup', (e) => {\r\n            e.stopPropagation();\r\n            let $columnList = $treeSwitch.parents('.jo_table').find('.jo_columnlist');\r\n            let collapsed = $treeSwitch.hasClass('img_tree-collapsed-dark');\r\n            if (collapsed) {\r\n                $treeSwitch.removeClass('img_tree-collapsed-dark');\r\n                $treeSwitch.addClass('img_tree-expanded-dark');\r\n                $columnList.slideDown(300);\r\n                that.collapsedTables.delete(table.identifier);\r\n            } else {\r\n                $treeSwitch.removeClass('img_tree-expanded-dark');\r\n                $treeSwitch.addClass('img_tree-collapsed-dark');\r\n                $columnList.slideUp(300);\r\n                that.collapsedTables.set(table.identifier, true);\r\n            }\r\n        });\r\n\r\n        return $table;\r\n    }\r\n\r\n\r\n\r\n}","// <div id=\"controls\">\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n// </div>\r\n\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { ResultsetPresenter } from \"./ResultsetPresenter.js\";\r\n\r\n\r\nexport class ProgramControlButtons {\r\n\r\n    $buttonStart: JQuery<HTMLElement>;\r\n    $buttonRollback: JQuery<HTMLElement>;\r\n    // $buttonPause: JQuery<HTMLElement>;\r\n    // $buttonStop: JQuery<HTMLElement>;\r\n    // $buttonStepOver: JQuery<HTMLElement>;\r\n    // $buttonStepInto: JQuery<HTMLElement>;\r\n    // $buttonStepOut: JQuery<HTMLElement>;\r\n    // $buttonRestart: JQuery<HTMLElement>;\r\n\r\n    // $buttonEdit: JQuery<HTMLElement>;\r\n\r\n\r\n    constructor(private main: MainBase, private $buttonsContainer: JQuery<HTMLElement>) {\r\n\r\n        this.$buttonStart = jQuery('<div title=\"Start\" class=\"img_start-dark jo_button\"></div>');\r\n        this.$buttonRollback = jQuery('<div title=\"Rollback\" class=\"img_undo jo_button\"></div>');\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        am.registerAction(\"execute\", ['Strg + Enter'],\r\n            () => {\r\n                if (am.isActive(\"execute\")) {\r\n\r\n                    this.main.getResultsetPresenter().executeSelectedStatements();\r\n                }\r\n\r\n            }, \"SQL-Statement ausführen\", this.$buttonStart\r\n        );\r\n\r\n        am.setActive('execute',false);\r\n\r\n        am.registerAction(\"rollback\", ['Strg + LeftArrow'],\r\n            () => {\r\n                if (am.isActive(\"rollback\")) {\r\n\r\n                    this.main.getHistoryViewer().rollback();\r\n                }\r\n\r\n            }, \"Letztes schreibendes SQL-Statement rückgängig machen\", this.$buttonRollback\r\n        );\r\n\r\n        am.setActive('rollback',false);\r\n\r\n        // this.$buttonPause = jQuery('<div title=\"Pause\" class=\"img_pause-dark jo_button\"></div>');\r\n        // this.$buttonStop = jQuery('<div title=\"Stop\" class=\"img_stop-dark jo_button\"></div>');\r\n        // this.$buttonStepOver = jQuery('<div title=\"Step over\" class=\"img_step-over-dark jo_button\"></div>');\r\n        // this.$buttonStepInto = jQuery('<div title=\"Step into\" class=\"img_step-into-dark jo_button\"></div>');\r\n        // this.$buttonStepOut = jQuery('<div title=\"Step out\" class=\"img_step-out-dark jo_button\"></div>');\r\n        // this.$buttonRestart = jQuery('<div title=\"Restart\" class=\"img_restart-dark jo_button\"></div>');\r\n\r\n        // this.$buttonEdit = jQuery('<div class=\"jo_editButton\" title=\"Programm anhalten damit der Programmtext bearbeitbar wird\"></div>')\r\n        // $editorContainer.append(this.$buttonEdit);\r\n\r\n        $buttonsContainer.append(this.$buttonStart, this.$buttonRollback\r\n            // , this.$buttonPause, this.$buttonStop,\r\n            // this.$buttonStepOver, this.$buttonStepInto, this.$buttonStepOut, this.$buttonRestart\r\n        );\r\n\r\n        // <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n        // <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n        // <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n        // <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n        // <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n        // <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n        // <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n        // <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n\r\n\r\n\r\n    }\r\n\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { SQLStatement } from \"../../compiler/parser/Parser.js\";\r\nimport { StatementCleaner } from \"../../compiler/parser/StatementCleaner.js\";\r\nimport { QueryResult } from \"../../tools/DatabaseTools.js\";\r\nimport { WDatabase } from \"../../workspace/WDatabase.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\ntype RuntimeError = {\r\n    statement: SQLStatement,\r\n    message: string\r\n}\r\n\r\nexport interface WriteQueryListener {\r\n    notify(statements: SQLStatement[]): void;\r\n}\r\n\r\nexport class ResultsetPresenter {\r\n\r\n    $paginationDiv: JQuery<HTMLDivElement>;\r\n    $infoDiv: JQuery<HTMLDivElement>;\r\n    $arrowLeft: JQuery<HTMLDivElement>;\r\n    $arrowRight: JQuery<HTMLDivElement>;\r\n\r\n    paginationFrom: number;\r\n    paginationAll: number;\r\n\r\n    paginationSize: number = 1000;\r\n\r\n    result: QueryResult;\r\n\r\n    writeQueryListeners: WriteQueryListener[] = [];\r\n\r\n    public static StatementDelimiter: string = \";\\n\\n\"\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$paginationDiv = <any>$bottomDiv.find('.jo_pagination');\r\n        this.$arrowLeft = jQuery('<div class=\"jo_button img_arrow-left-dark jo_active\"></div>');\r\n        this.$infoDiv = jQuery('<div class=\"jo_pagination_info\"><span class=\"jo_pagination_fromto\">0001-1000</span>/<span class=\"jo_pagination_all\">5000</span></div>');\r\n        this.$arrowRight = jQuery('<div class=\"jo_button img_arrow-right-dark jo_active\"></div>');\r\n\r\n        this.$paginationDiv.empty();\r\n        this.$paginationDiv.append(this.$arrowLeft, this.$infoDiv, this.$arrowRight);\r\n\r\n        this.$paginationDiv.hide();\r\n\r\n        let mousePointer = (window.PointerEvent ? \"pointer\" : \"mouse\") + 'up';\r\n\r\n        let that = this;\r\n        this.$arrowLeft.on(mousePointer, (e) => {\r\n            if (that.paginationFrom > 1) {\r\n                that.paginationFrom = Math.max(that.paginationFrom - that.paginationSize, 1);\r\n                if (that.paginationFrom % 1000 != 1) {\r\n                    that.paginationFrom = (Math.floor(that.paginationFrom / that.paginationSize) + 1) * that.paginationSize + 1;\r\n                }\r\n                that.showResults();\r\n                that.activateButtons();\r\n            }\r\n        })\r\n\r\n        this.$arrowRight.on(mousePointer, (e) => {\r\n            if (that.paginationFrom < this.paginationAll - that.paginationSize + 1) {\r\n                that.paginationFrom = Math.min(that.paginationFrom + that.paginationSize, that.paginationAll - that.paginationSize + 1);\r\n                that.showResults();\r\n                that.activateButtons();\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    public addWriteQueryListener(listener: WriteQueryListener) {\r\n        this.writeQueryListeners.push(listener);\r\n    }\r\n\r\n    private activateButtons() {\r\n        this.$arrowLeft.toggleClass('jo_active', this.paginationFrom > 1);\r\n        this.$arrowRight.toggleClass('jo_active', this.paginationFrom < this.paginationAll - this.paginationSize + 1);\r\n    }\r\n\r\n    executeSelectedStatements() {\r\n\r\n        let statements = this.fetchSelectedStatements().filter(st => st.ast.type != TokenType.omittedeStatement);\r\n        \r\n        if (statements.length == 0) return;\r\n\r\n        let hasDDLStatements: boolean = statements.some(st => this.isDDLStatement(st));\r\n        let hasWriteStatements: boolean = statements.some(st => this.isWriteStatement(st));\r\n        let workspace = this.main.getCurrentWorkspace();\r\n        let database = workspace.database;\r\n\r\n        if (hasDDLStatements && workspace.permissions <= 1) {\r\n            alert(\"Der Benutzer hat keine Berechtigung zum Ändern der Tabellenstruktur.\");\r\n            return;\r\n        }\r\n\r\n        if (hasWriteStatements && workspace.permissions == 0) {\r\n            alert(\"Der Benutzer hat keine Berechtigung zum Einfügen/Löschen/Ändern von Datensätzen.\");\r\n            return;\r\n        }\r\n\r\n        if (hasDDLStatements || hasWriteStatements) {\r\n            if (this.main.isEmbedded()) {\r\n                this.executeDDLWriteStatementsEmbedded(workspace, statements, database);\r\n\r\n            } else {\r\n                this.executeDDLWriteStatementsInOnlineIDE(workspace, statements, database);\r\n            }\r\n\r\n        } else {\r\n            this.executeStatements(statements, 0, [], () => { });\r\n        }\r\n\r\n    }\r\n\r\n    executeDDLWriteStatementsEmbedded(workspace: Workspace, statements: SQLStatement[], database: WDatabase) {\r\n        let sucessfullyExecutedModifyingStatements: SQLStatement[] = [];\r\n        this.executeStatements(statements, 0, sucessfullyExecutedModifyingStatements, () => {\r\n\r\n            if (sucessfullyExecutedModifyingStatements.length == 0)\r\n                return;\r\n\r\n            this.main.getDatabaseExplorer().refresh();\r\n\r\n            this.writeQueryListeners.forEach(listener => listener.notify(sucessfullyExecutedModifyingStatements))\r\n        })\r\n    }\r\n\r\n    private executeDDLWriteStatementsInOnlineIDE(workspace: Workspace, statements: SQLStatement[], database: WDatabase) {\r\n        let main: Main = <Main>this.main;\r\n        // Step 1: Update Database to newest version to avoid potential database reset\r\n        main.networkManager.getNewStatements(workspace, (new_statements, firstStatementIndex) => {\r\n\r\n            main.notifier.executeNewStatements(new_statements, firstStatementIndex, () => { },\r\n                () => {\r\n                    // Step 2: Execute new statements to see which are successful\r\n                    let sucessfullyExecutedModifyingStatements: SQLStatement[] = [];\r\n                    this.executeStatements(statements, 0, sucessfullyExecutedModifyingStatements, () => {\r\n\r\n                        if (sucessfullyExecutedModifyingStatements.length == 0)\r\n                            return;\r\n\r\n                        // Step 3: Send successful statements to server in order to retrieve new db-version-number\r\n                        main.networkManager.AddDatabaseStatements(workspace, sucessfullyExecutedModifyingStatements.map(st => st.sqlCleaned == null ? st.sql : st.sqlCleaned), (statements_before, new_version) => {\r\n\r\n                            // Step 4: If another user sent statements between steps 1 and 3 then they are in array statements_before.\r\n                            // Add all new statements to local statement list\r\n                            statements_before.forEach(st => database.statements.push(st));\r\n                            this.main.getHistoryViewer().appendStatements(statements_before);\r\n                            let modifyingStatements = sucessfullyExecutedModifyingStatements.map(st => st.sqlCleaned == null ? st.sql : st.sqlCleaned)\r\n                            database.statements = database.statements.concat(modifyingStatements);\r\n                            this.main.getHistoryViewer().appendStatements(modifyingStatements);\r\n                            database.version = new_version;\r\n\r\n                            // Step 5 (worst case): statements before is not empty, so the should be executed before the statements executed in step 2\r\n                            // => clear whole database and execute all statements in the right order, beginning with a empty database.\r\n                            if (statements_before.length > 0) {\r\n\r\n                                this.resetDatabase(database);\r\n\r\n                            } else {\r\n\r\n                                main.getDatabaseExplorer().refresh();\r\n\r\n                            }\r\n\r\n                        });\r\n                    });\r\n                }, false);\r\n        });\r\n    }\r\n\r\n    resetDatabase(database: WDatabase) {\r\n        this.main.getDatabaseTool().initializeWorker(database.templateDump, database.statements, () => {\r\n            this.main.getDatabaseExplorer().refresh();\r\n        })\r\n    }\r\n\r\n    executeStatementsString(statements: string[], fromIndex: number, callback: () => void) {\r\n        if (statements.length == 0) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (fromIndex < statements.length) {\r\n            this.main.getDatabaseTool().executeQuery(statements[fromIndex],\r\n                (results) => { this.executeStatementsString(statements, fromIndex + 1, callback) },\r\n                (error) => { console.log(\"Error when executing statement \" + statements[fromIndex] + \"\\nError : \" + error); this.executeStatementsString(statements, fromIndex + 1, callback) });\r\n        } else {\r\n            callback();\r\n        }\r\n    }\r\n\r\n\r\n    executeStatements(statements: SQLStatement[], index: number, successfullyExecutedModifyingStatements: SQLStatement[], callback: () => void, errors: RuntimeError[] = []) {\r\n\r\n        if (index >= statements.length) {\r\n            this.showErrors(errors);\r\n\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        let statement = statements[index];\r\n\r\n\r\n        let callback1 = () => {\r\n            this.executeStatements(statements, index + 1, successfullyExecutedModifyingStatements, callback, errors);\r\n        }\r\n\r\n        if (statement.ast == null) {\r\n            callback1();\r\n            return;\r\n        }\r\n\r\n        if (statement.ast.type == TokenType.keywordSelect) {\r\n            let laterSelectExists: boolean = false;\r\n            for (let j = index + 1; j < statements.length; j++) laterSelectExists = laterSelectExists || this.isSelectStatement(statements[j]);\r\n            if (laterSelectExists) {\r\n                callback1();\r\n            } else {\r\n                if (statement.ast.limitNode == null) {\r\n                    statement.sql.trimRight();\r\n                    while (statement.sql.endsWith(\";\") || statement.sql.endsWith(\"\\n\") || statement.sql.endsWith(\"\\r\")) {\r\n                        statement.sql = statement.sql.substring(0, statement.sql.length - 1);\r\n                        statement.sql.trimRight();\r\n                    }\r\n                    statement.sql += \" limit 100000\";\r\n                }\r\n                this.main.getDatabaseTool().executeQuery(statement.sql,\r\n                    (results) => { this.presentResultsIntern(statement.sql, results); callback1(); },\r\n                    (error) => { errors.push({ statement: statement, message: error }); callback1(); });\r\n            }\r\n        } else {\r\n            let sql = new StatementCleaner().clean(statement);\r\n            console.log(sql);\r\n            this.main.getDatabaseTool().executeQuery(sql, (results) => { successfullyExecutedModifyingStatements.push(statement); callback1(); }, (error) => { errors.push({ statement: statement, message: error }); callback1(); });\r\n        }\r\n\r\n    }\r\n\r\n    oldErrorDecorations: string[] = [];\r\n    showErrorDecorations(errors: RuntimeError[]) {\r\n\r\n        let minimapColors = {\r\n            \"error\": \"#bc1616\",\r\n            \"warning\": \"#cca700\",\r\n            \"info\": \"#75beff\"\r\n        }\r\n\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        let markers: monaco.editor.IMarkerData[] = [];\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n        for (let error of errors) {\r\n            let errorlevel = \"error\";\r\n\r\n            let linesDecorationsClassName: string;\r\n            let borderLeftClass: string;\r\n            let minimapColor: string = minimapColors[errorlevel];\r\n\r\n            switch (errorlevel) {\r\n                case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n            }\r\n\r\n            let severity: monaco.MarkerSeverity;\r\n            switch (errorlevel) {\r\n                case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n            }\r\n\r\n            markers.push({\r\n                startLineNumber: error.statement.from.line,\r\n                startColumn: error.statement.from.column,\r\n                endLineNumber: error.statement.to.line,\r\n                endColumn: error.statement.to.column,\r\n                message: error.message,\r\n                severity: severity\r\n            });\r\n\r\n            decorations.push({\r\n                range: {\r\n                    startLineNumber: error.statement.from.line,\r\n                    startColumn: error.statement.from.column,\r\n                    endLineNumber: error.statement.to.line,\r\n                    endColumn: error.statement.to.column,\r\n                },\r\n                options: {\r\n                    linesDecorationsClassName: linesDecorationsClassName,\r\n                    minimap: {\r\n                        position: monaco.editor.MinimapPosition.Inline,\r\n                        color: minimapColor\r\n                    }\r\n                }\r\n\r\n            });\r\n\r\n\r\n        }\r\n\r\n        let model = this.main.getCurrentlyEditedModule().model;\r\n        monaco.editor.setModelMarkers(model, 'test', markers);\r\n        this.oldErrorDecorations = model.deltaDecorations(this.oldErrorDecorations, decorations);\r\n\r\n    }\r\n\r\n    showTable(identifier: string) {\r\n        let statement = \"select * from \" + identifier + \";\";\r\n        this.main.getDatabaseTool().executeQuery(statement,\r\n            (results) => { this.presentResultsIntern(statement, results); },\r\n            (error) => { });\r\n    }\r\n\r\n\r\n\r\n    showErrors(errors: RuntimeError[]) {\r\n        let $runtimeErrorsTab = this.$bottomDiv.find('.jo_errorsTab');\r\n        let $runtimeErrorsTabHeading = this.$bottomDiv.find('.jo_errorsTabheading');\r\n\r\n        $runtimeErrorsTab.empty();\r\n        this.showErrorDecorations(errors);\r\n\r\n        if (errors.length == 0) return;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        $runtimeErrorsTabHeading.trigger(mousePointer + \"down\");\r\n\r\n        let $errorList = jQuery('<div class=\"jo_errorlist\"></div>');\r\n        $runtimeErrorsTab.append($errorList);\r\n\r\n        for (let error of errors) {\r\n            let query = error.statement.sql;\r\n            query = query.replace(/\\n/g, \" \");\r\n            query = query.replace(/\\s\\s+/g, ' ');\r\n\r\n            let $errorLine = jQuery('<div class=\"jo_error-line\" style=\"flex-direction:column; width: fit-content\"></div>')\r\n            $errorList.append($errorLine);\r\n\r\n            $errorLine.on(mousePointer + 'down', () => {\r\n                let range = {\r\n                    startColumn: error.statement.from.column, startLineNumber: error.statement.from.line,\r\n                    endColumn: error.statement.to.column, endLineNumber: error.statement.to.line\r\n                };\r\n\r\n                this.main.getMonacoEditor().revealRangeInCenter(range);\r\n                $errorList.find('.jo_error-line').removeClass('jo_active');\r\n                $errorLine.addClass('jo_active');\r\n\r\n            })\r\n\r\n\r\n            let $sqlDiv = jQuery('<div class=\"jo_sqlErrorStatement\"></div>');\r\n            $errorLine.append($sqlDiv);\r\n\r\n            monaco.editor.colorize(query, \"vscSQL\", {}).then(\r\n                (html) => { $sqlDiv.html(html) });\r\n\r\n            let $messageDiv = jQuery('<div class=\"jo_sqlErrorMessage\">' + error.message + '</div>');\r\n            $errorLine.append($messageDiv);\r\n\r\n        }\r\n\r\n        this.$bottomDiv.find('.jo_tabheading').removeClass('jo_active');\r\n        $runtimeErrorsTabHeading.addClass('jo_active');\r\n        $runtimeErrorsTab.addClass('jo_active');\r\n\r\n    }\r\n\r\n    isSelectStatement(statement: SQLStatement): boolean {\r\n        return statement.ast != null && statement.ast.type == TokenType.keywordSelect;\r\n    }\r\n\r\n    isDDLStatement(statement: SQLStatement): boolean {\r\n        return statement.ast != null && [TokenType.keywordCreate, TokenType.keywordDrop, TokenType.keywordAlter].indexOf(statement.ast.type) >= 0;\r\n    }\r\n\r\n    isWriteStatement(statement: SQLStatement): boolean {\r\n        return statement.ast != null && [TokenType.keywordInsert, TokenType.keywordDelete, TokenType.keywordUpdate].indexOf(statement.ast.type) >= 0;\r\n    }\r\n\r\n    private presentResultsIntern(query: string, results: QueryResult[]) {\r\n        let $resultTabheading = this.$bottomDiv.find('.jo_resultTabheading');\r\n        let $resultHeader = this.$bottomDiv.find('.jo_result-header');\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        $resultTabheading.trigger(mousePointer + \"down\");\r\n        this.result = results.pop();\r\n\r\n        let headerDiv = $resultHeader;\r\n\r\n        query = query.replace(/\\n/g, \" \");\r\n        query = query.replace(/\\s\\s+/g, ' ');\r\n        query = query.replace(/limit 100000/g, '');\r\n\r\n        monaco.editor.colorize(query, \"vscSQL\", {}).then(\r\n            (html) => { headerDiv.html(html) });\r\n\r\n        this.paginationAll = this.result ? this.result.values.length : 0;\r\n        this.$infoDiv.find('.jo_pagination_all').html(`${this.paginationAll}`);\r\n        this.paginationFrom = 1;\r\n        this.$paginationDiv.show();\r\n        this.activateButtons();\r\n\r\n        this.showResults();\r\n\r\n    }\r\n\r\n    public clear() {\r\n        let $bodyDiv = this.$bottomDiv.find('.jo_result-body');\r\n        $bodyDiv.empty();\r\n        this.$paginationDiv.hide();\r\n    }\r\n\r\n    private showResultsBusy: boolean = false;\r\n    private showResultPending: boolean = false;\r\n\r\n    private showResults() {\r\n        let $bodyDiv = this.$bottomDiv.find('.jo_result-body');\r\n\r\n        if (this.result == null) {\r\n            this.$infoDiv.find('.jo_pagination_fromto').html('---');\r\n            $bodyDiv.html('Die Datenbank lieferte eine leere Ergebnistabelle.');\r\n            return;\r\n        }\r\n\r\n        let that = this;\r\n        let from = this.paginationAll == 0 ? 0 : this.paginationFrom;\r\n        let to = this.paginationAll == 0 ? 0 : Math.min(this.paginationFrom + this.paginationSize - 1, this.paginationAll);\r\n        this.$infoDiv.find('.jo_pagination_fromto').html(`${from}-${to}`)\r\n\r\n        if (this.showResultsBusy) {\r\n            if (this.showResultPending) {\r\n                return;\r\n            }\r\n            this.showResultPending = true;\r\n            let waitFunction = () => {\r\n                if (that.showResultsBusy) {\r\n                    setTimeout(() => {\r\n                        waitFunction();\r\n                    }, 200);\r\n                } else {\r\n                    that.showResultPending = false;\r\n                    that.showResults();\r\n                }\r\n            }\r\n            setTimeout(waitFunction, 200);\r\n            return;\r\n        }\r\n\r\n        this.showResultsBusy = true;\r\n\r\n        let $table = jQuery('<table></table>');\r\n        let $header = jQuery('<tr></tr>');\r\n        $table.append($header);\r\n\r\n        this.result.columns.forEach((column) => { $header.append(jQuery(`<th><div>${column}</div></th>`)) });\r\n\r\n        let rows = this.result.values.slice(this.paginationFrom - 1, this.paginationFrom + this.paginationSize - 1);\r\n\r\n        let i = 0;\r\n        let f = () => {\r\n            if (i < rows.length) {\r\n                for (let j = i; j < Math.min(i + 200, rows.length); j++) {\r\n                    let row = rows[j];\r\n                    let $row = jQuery('<tr></tr>');\r\n                    $table.append($row);\r\n                    row.forEach((cell) => { $row.append(jQuery(`<td>${cell}</td>`)) });\r\n                }\r\n                i = Math.min(i + 200, rows.length);\r\n                if (i < rows.length) {\r\n                    setTimeout(f, 30);\r\n                } else {\r\n                    $bodyDiv.empty().append($table);\r\n                    this.showResultsBusy = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        f();\r\n\r\n        // rows.forEach((row) => {\r\n        //     let $row = jQuery('<tr></tr>');\r\n        //     $table.append($row);\r\n        //     row.forEach((cell) => {$row.append(jQuery(`<td>${cell}</td>`))});\r\n        // });\r\n\r\n        // bodyDiv.empty().append($table);\r\n\r\n    }\r\n\r\n\r\n    fetchSelectedStatements(): SQLStatement[] {\r\n        let module = this.main.getCurrentlyEditedModule();\r\n        if (module == null) return null;\r\n\r\n        let monacoEditor = this.main.getMonacoEditor();\r\n        // console.log(monacoEditor.getSelection());\r\n        // console.log(monacoEditor.getPosition());\r\n\r\n        let statements: SQLStatement[] = module.getSQLSTatementsAtSelection(monacoEditor.getSelection());\r\n        for (let statement of statements) {\r\n            statement.sql = monacoEditor.getModel().getValueInRange({\r\n                startColumn: statement.from.column,\r\n                startLineNumber: statement.from.line, endColumn: statement.to.column, endLineNumber: statement.to.line\r\n            });\r\n        }\r\n\r\n        // let sqlStatement = module.getSQLStatementAtPosition(monacoEditor.getPosition());\r\n\r\n        return statements;\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { Module } from \"../compiler/parser/Module.js\";\r\nimport { ResultsetPresenter } from \"../main/gui/ResultsetPresenter.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { WDatabase } from \"../workspace/WDatabase.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ajax } from \"./AjaxHelper.js\";\r\nimport { GetNewStatementsRequest, GetNewStatementsResponse, GetWebSocketTokenResponse, LongPollingListenerResponse, RegisterLongPollingListenerRequest, WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestGetNewStatements, WebSocketResponse } from \"./Data.js\";\r\n\r\nexport class Notifier {\r\n\r\n    connection: WebSocket;\r\n    isOpen: boolean = false;\r\n    workspace: Workspace;\r\n    database: WDatabase;\r\n\r\n    constructor(public main: Main) {\r\n        // Polling is not used. \r\n        // We try long polling (see below!)\r\n\r\n        // this.startPolling();\r\n    }\r\n\r\n    connect(workspace: Workspace) {\r\n\r\n        let that = this;\r\n        this.workspace = workspace;\r\n        this.database = workspace.database;\r\n\r\n        if (this.isOpen) {\r\n            this.connection.close();\r\n        }\r\n\r\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\r\n\r\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/websocket\";\r\n            this.connection = new WebSocket(url);\r\n\r\n            this.connection.onerror = (error: Event) => { this.onError(error); }\r\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\r\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\r\n\r\n            this.connection.onopen = (event: Event) => {\r\n                let request: WebSocketRequestConnect = {\r\n                    command: 1,\r\n                    token: response.token,\r\n                    workspaceId: workspace.id,\r\n                    databaseId: workspace.database.id,\r\n                    databaseVersion: workspace.database.version\r\n                }\r\n\r\n                this.isOpen = true;\r\n                this.sendIntern(JSON.stringify(request));\r\n                this.onOpen();\r\n\r\n            }\r\n\r\n            setTimeout(() => {\r\n                that.startLongPolling()\r\n            }, 2000);\r\n\r\n        });\r\n\r\n    }\r\n\r\n    unsentMessages: string[] = [];\r\n    sendIntern(message: string) {\r\n\r\n        if (!this.isOpen) {\r\n            this.unsentMessages.push(message);\r\n        } else {\r\n            try {\r\n                this.connection.send(message);\r\n            } catch (exception) {\r\n                console.log(exception);\r\n            }\r\n        }\r\n    }\r\n\r\n    onClose(event: CloseEvent) {\r\n        this.isOpen = false;\r\n    }\r\n\r\n\r\n    disconnect() {\r\n        let message: WebSocketRequestDisconnect = {\r\n            command: 4\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n        this.connection.close();\r\n        this.workspace = null;\r\n    }\r\n\r\n    onMessage(event: MessageEvent) {\r\n\r\n        let that = this;\r\n        let response: WebSocketResponse = JSON.parse(event.data);\r\n        if (response.command == undefined) return;\r\n\r\n        switch (response.command) {\r\n            case 2: // SendStatements\r\n                that.executeNewStatements(response.newStatements, response.firstNewStatementIndex, () => {\r\n                    let request: WebSocketRequestGetNewStatements = { command: 2, databaseVersion: that.database.version };\r\n                    that.sendIntern(JSON.stringify(request));\r\n                })\r\n                break;\r\n            case 3: // server initiated disconnect\r\n                this.isOpen = false;\r\n                this.database = null;\r\n                this.workspace = null;\r\n                break;\r\n            case 4: // keep alive\r\n                break;\r\n            case 5: // rollback\r\n                if (this.database.version > response.new_version) {\r\n                    this.main.getHistoryViewer().rollbackLocal(response.new_version);\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    executeNewStatements(newStatements: string[], firstNewStatementIndex: number, callbackIfTooFewStatements: () => void, callbackIfDone: () => void = () => { }, doRefreshDatabaseExplorer: boolean = true) {\r\n        if (this.database == null) return;\r\n        let that = this;\r\n        let delta = firstNewStatementIndex - (this.database.version + 1);\r\n        if (delta > 0) {\r\n            callbackIfTooFewStatements();\r\n            callbackIfDone();\r\n            return;\r\n        } else {\r\n            if (delta < 0) {\r\n                newStatements.splice(0, -delta);\r\n                firstNewStatementIndex -= delta;\r\n            }\r\n            let statements = newStatements;\r\n            if (statements.length > 0) {\r\n                this.main.resultsetPresenter.executeStatementsString(statements, 0, () => {\r\n                    that.main.getHistoryViewer().appendStatements(statements);\r\n                    that.database.statements = that.database.statements.concat(statements)\r\n                    that.database.version = firstNewStatementIndex + newStatements.length - 1;\r\n                    if (doRefreshDatabaseExplorer) {\r\n                        that.main.databaseExplorer.refresh();\r\n                    }\r\n                    callbackIfDone();\r\n                })\r\n            } else {\r\n                callbackIfDone();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    onError(error: Event) {\r\n    }\r\n\r\n    onOpen() {\r\n        this.isOpen = true;\r\n        if (this.unsentMessages.length > 0) {\r\n            this.unsentMessages.forEach(m => this.sendIntern(m));\r\n            this.unsentMessages = [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Polling is not used. \r\n     * We try long polling!\r\n     * (see below)\r\n     */\r\n    isPolling: boolean = false;\r\n    startPolling() {\r\n        if (this.isPolling) return;\r\n        this.isPolling = true;\r\n\r\n        this.poll();\r\n\r\n    }\r\n\r\n    /**\r\n     * Polling is not used.\r\n     * We try long polling!\r\n     * (see below)\r\n     */\r\n    counter: number = 0;\r\n    poll() {\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.poll();\r\n        }, 6000);\r\n\r\n        if (!that.isOpen && that.workspace != null) {\r\n            this.getNewStatementsHttp();\r\n\r\n            // retry connecting:\r\n            that.counter++;\r\n            if (that.counter == 10) {\r\n                that.counter = 0;\r\n                that.connect(that.workspace);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getNewStatementsHttp() {\r\n        let that = this;\r\n        if (this.workspace == null || this.database == null) return;\r\n\r\n        let request: GetNewStatementsRequest = {\r\n            workspaceId: this.workspace.id,\r\n            version_before: this.workspace.database.version\r\n        }\r\n\r\n        ajax('getNewStatements', request, (response: GetNewStatementsResponse) => {\r\n\r\n            if(response.rollbackToVersion != null){\r\n                that.main.getHistoryViewer().rollbackLocal(response.rollbackToVersion);\r\n            } else {\r\n                that.executeNewStatements(response.newStatements, response.firstNewStatementIndex, () => {\r\n                    that.getNewStatementsHttp();\r\n                })\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    isLongPolling: boolean = false;\r\n    startLongPolling() {\r\n        if (this.isLongPolling) return;\r\n        this.isLongPolling = true;\r\n\r\n        this.longPoll();\r\n\r\n    }\r\n\r\n    longPollCounter: number = 0;\r\n    longPoll() {\r\n        let that = this;\r\n\r\n        if (!that.isOpen && that.workspace != null) {\r\n            let request: RegisterLongPollingListenerRequest = {\r\n                workspaceId: that.workspace.id\r\n            }\r\n\r\n            $.ajax({\r\n                type: 'POST',\r\n                async: true,\r\n                data: JSON.stringify(request),\r\n                contentType: 'application/json',\r\n                url: \"servlet/registerLongPollingListener\",\r\n                success: function (resp: string) {\r\n                    console.log(resp);\r\n                    let response: LongPollingListenerResponse = typeof resp == \"string\" ? JSON.parse(resp) : resp;\r\n                    if (resp != null && !that.isOpen && that.workspace?.id == request.workspaceId && response.success) {\r\n                        that.executeNewStatements(response.newStatements, response.firstNewStatementIndex, () => {\r\n                            that.getNewStatementsHttp();\r\n                        })\r\n\r\n                        let timeout: number = 1000;\r\n                        // retry connecting:\r\n                        that.longPollCounter++;\r\n                        if (that.longPollCounter == 10) {\r\n                            that.longPollCounter = 0;\r\n                            that.connect(that.workspace);\r\n                            timeout = 2000;\r\n                        }\r\n\r\n                        setTimeout(() => {\r\n                            that.longPoll();\r\n                        }, 2000);\r\n                    }\r\n                },\r\n                error: function (jqXHR, message) {\r\n                    if (!that.isOpen && that.workspace?.id == request.workspaceId) {\r\n                        setTimeout(() => {\r\n                            that.longPoll();\r\n                        }, 2000);\r\n                    }\r\n                }\r\n            });\r\n\r\n        } else {\r\n            setTimeout(() => {\r\n                that.longPoll();\r\n            }, 5000);\r\n        }\r\n\r\n    }\r\n\r\n}","export class WaitOverlay {\r\n\r\n    visible: boolean = false;\r\n    fadeOutPending: boolean = false;\r\n    $bitteWartenText: JQuery<HTMLElement>;\r\n    $bitteWartenProgress: JQuery<HTMLElement>;\r\n\r\n    constructor(private $waitDiv: JQuery<HTMLElement>){\r\n        $waitDiv.css('display', 'none');\r\n        this.$bitteWartenText = $waitDiv.find('.bitteWartenText');\r\n        this.$bitteWartenProgress = $waitDiv.find('.bitteWartenProgress');\r\n    }\r\n\r\n    show(message: string){\r\n        this.fadeOutPending = false;\r\n        this.$bitteWartenText.html(message);\r\n        this.$bitteWartenProgress.html('');\r\n        if(!this.visible){\r\n            this.visible = true;\r\n            this.$waitDiv.css('display', 'flex');\r\n            this.$waitDiv.hide();\r\n            this.$waitDiv.fadeIn(400);\r\n        }\r\n    }\r\n\r\n    setProgress(message: string){\r\n        this.$bitteWartenProgress.html(message);\r\n    }\r\n\r\n    hide(){\r\n        if(this.visible){\r\n            this.fadeOutPending = true;\r\n            setTimeout(() => {\r\n                if(this.fadeOutPending){\r\n                    this.fadeOutPending = false;\r\n                    this.$waitDiv.fadeOut(200, () => {\r\n                        this.$waitDiv.css('display', 'none');\r\n                    })\r\n                    this.visible = false;        \r\n                }                \r\n            }, 50);\r\n        }\r\n    }\r\n\r\n}","import { MainEmbedded } from \"../../embedded/MainEmbedded.js\";\r\nimport { copyTextToClipboard, openContextMenu } from \"../../tools/HtmlTools.js\";\r\nimport { WDatabase } from \"../../workspace/WDatabase.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\ntype HistoryPanelEntry = {\r\n    statement: string;\r\n    $div: JQuery<HTMLDivElement>;\r\n    $rollbackButton: JQuery<HTMLDivElement>;\r\n}\r\n\r\nexport class HistoryViewer {\r\n\r\n    panelEntries: HistoryPanelEntry[] = [];\r\n\r\n    constructor(private main: MainBase, private $historyPanel: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    clear() {\r\n        this.$historyPanel.empty();\r\n        this.main.getActionManager().setActive(\"rollback\", false);\r\n        this.panelEntries = [];\r\n    }\r\n\r\n    clearAndShowStatements(statements: string[]) {\r\n        this.clear();\r\n        this.appendStatements(statements);\r\n        this.main.getActionManager().setActive(\"rollback\", statements.length > 0);\r\n    }\r\n\r\n    appendStatements(statements: string[]) {\r\n        statements.forEach(stmt => {\r\n            let panelEntry = this.makePanelEntry(stmt, this.panelEntries.length + 1);\r\n            this.$historyPanel.prepend(panelEntry.$div);\r\n            this.panelEntries.unshift(panelEntry);\r\n        })\r\n\r\n        if(statements.length > 0){\r\n            this.main.getActionManager().setActive(\"rollback\", true);\r\n        }\r\n\r\n        this.makeLastButtonActive();\r\n    }\r\n\r\n    makeLastButtonActive() {\r\n        this.panelEntries.forEach(pe => pe.$rollbackButton.removeClass('jo_active'));\r\n\r\n        if (this.panelEntries.length > 0) {\r\n            this.panelEntries[0].$rollbackButton.addClass('jo_active');\r\n        }\r\n    }\r\n\r\n    makePanelEntry(statement: string, index: number): HistoryPanelEntry {\r\n        let $div = <JQuery<HTMLDivElement>>jQuery(`<div class=\"jo_panelEntry\"></div>`);\r\n        let $index = jQuery(`<div class=\"jo_panelEntryIndex\">${index}.</div>`);\r\n        let $text = jQuery(`<div class=\"jo_panelEntryText\"></div>`);\r\n        let t: string = statement.substring(0, Math.min(400, statement.length));\r\n        if (statement.length > 400) {\r\n            t += \"...\";\r\n        }\r\n        $text.text(t);\r\n        let $copybutton = <JQuery<HTMLDivElement>>jQuery(`<div class=\"img_copy jo_panelEntryCopyButton jo_active jo_button\" title=\"In die Zwischenablage kopieren\"></div>`)\r\n        let $rollbackbutton = <JQuery<HTMLDivElement>>jQuery(`<div class=\"img_undo jo_panelEntryRollbackButton jo_button\" title=\"Rollback\"></div>`)\r\n        let that = this;\r\n\r\n        $copybutton.on('click', () => {\r\n            copyTextToClipboard(statement);\r\n        })\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $rollbackbutton.on(mousePointer + 'up', (ev) => {\r\n            ev.preventDefault();\r\n            openContextMenu([{\r\n                caption: \"Abbrechen\",\r\n                callback: () => {\r\n                }\r\n            }, {\r\n                caption: \"Ich bin mir sicher: rollback!\",\r\n                color: \"#ff6060\",\r\n                callback: () => {\r\n                    this.rollback();\r\n                }\r\n            }], ev.pageX + 2, ev.pageY + 2);\r\n            ev.stopPropagation();\r\n        })\r\n\r\n        $div.append($index, $text, $copybutton, $rollbackbutton);\r\n        return {\r\n            $div: $div,\r\n            statement: statement,\r\n            $rollbackButton: $rollbackbutton\r\n        }\r\n    }\r\n\r\n    rollback() {\r\n        if (this.panelEntries.length == 0) return;\r\n\r\n        if (this.main.isEmbedded()) {\r\n            this.rollbackEmbedded();\r\n            this.main.getActionManager().setActive(\"rollback\", this.panelEntries.length > 0);\r\n        } else {\r\n            let main: Main = <Main>this.main;\r\n            main.networkManager.rollback((error: string, rollbackLocalNeeded: boolean) => {\r\n                if (error == null && rollbackLocalNeeded) {\r\n                    this.rollbackLocal();\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    rollbackLocal(new_version?: number) {\r\n        let database = this.main.getCurrentWorkspace().database;\r\n        if(new_version == null) new_version = database.version - 1;\r\n        \r\n        while(database.version > new_version){\r\n            database.statements.pop();\r\n            database.version--;\r\n        }\r\n        this.main.getDatabaseTool().initializeWorker(database.templateDump, database.statements, () => {\r\n\r\n        }, () => {\r\n            this.main.getDatabaseExplorer().refreshAfterRetrievingDBStructure();\r\n            let lastPanelEntry = this.panelEntries.shift();\r\n            lastPanelEntry.$div.remove();\r\n            this.makeLastButtonActive();\r\n            this.main.getActionManager().setActive(\"rollback\", this.panelEntries.length > 0);\r\n        })\r\n    }\r\n\r\n    rollbackEmbedded() {\r\n        let main: MainEmbedded = <MainEmbedded>this.main;\r\n        main.writeQueryManager.rollback();\r\n\r\n        this.main.getDatabaseTool().initializeWorker(main.initialTemplateDump,\r\n            main.initialStatements.concat(main.writeQueryManager.writtenStatements), () => { },\r\n            () => {\r\n                this.main.getDatabaseExplorer().refreshAfterRetrievingDBStructure();\r\n                let lastPanelEntry = this.panelEntries.shift();\r\n                lastPanelEntry.$div.remove();\r\n                this.makeLastButtonActive();\r\n            })\r\n    }\r\n\r\n}","import { ClassData, UserData, Workspaces } from \"../communication/Data.js\";\r\nimport { NetworkManager } from \"../communication/NetworkManager.js\";\r\nimport { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ActionManager } from \"./gui/ActionManager.js\";\r\nimport { BottomDiv } from \"./gui/BottomDiv.js\";\r\nimport { Editor } from \"./gui/Editor.js\";\r\nimport { Formatter } from \"./gui/Formatter.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { MainMenu } from \"./gui/MainMenu.js\";\r\nimport { ProjectExplorer } from \"./gui/ProjectExplorer.js\";\r\nimport { RightDiv } from \"./gui/RightDiv.js\";\r\nimport { Sliders } from \"./gui/Sliders.js\";\r\nimport { TeacherExplorer } from \"./gui/TeacherExplorer.js\";\r\nimport { ThemeManager } from \"./gui/ThemeManager.js\";\r\nimport { Login } from \"./Login.js\";\r\nimport { Module, File } from \"../compiler/parser/Module.js\";\r\nimport { ViewModeController } from \"./gui/ViewModeController.js\";\r\nimport { ErrorManager } from \"./gui/ErrorManager.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { DatabaseTool } from \"../tools/DatabaseTools.js\";\r\nimport { MainBase } from \"./MainBase.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { DatabaseExplorer } from \"./gui/DatabaseExplorer.js\";\r\nimport { ProgramControlButtons } from \"./gui/ProgramControlButtons.js\";\r\nimport { ResultsetPresenter } from \"./gui/ResultsetPresenter.js\";\r\nimport { Notifier } from \"../communication/Notifier.js\";\r\nimport { checkIfMousePresent } from \"../tools/HtmlTools.js\";\r\nimport { WaitOverlay } from \"./gui/WaitOverlay.js\";\r\nimport { HistoryViewer } from \"./gui/HistoryViewer.js\";\r\n\r\nexport class Main implements MainBase {\r\n    isEmbedded(): boolean {\r\n        return false;\r\n    }\r\n\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    // VORSICHT: ggf. Module -> any\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.projectExplorer.getCurrentlyEditedModule();\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n        this.projectExplorer.setModuleActive(module);\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n    getDatabaseTool(): DatabaseTool {\r\n        return this.databaseTool;\r\n    }\r\n\r\n    getDatabaseExplorer():DatabaseExplorer {\r\n        return this.databaseExplorer;\r\n    }\r\n\r\n    getResultsetPresenter(): ResultsetPresenter {\r\n        return this.resultsetPresenter;\r\n    }\r\n\r\n    getWaitOverlay(): WaitOverlay {\r\n        return this.waitOverlay;\r\n    }\r\n\r\n    getHistoryViewer(): HistoryViewer {\r\n        return this.historyViewer;\r\n    }\r\n\r\n    workspaceList: Workspace[] = [];\r\n    workspacesOwnerId: number;\r\n\r\n    // monaco_editor: monaco.editor.IStandaloneCodeEditor;\r\n    editor: Editor;\r\n    currentWorkspace: Workspace;\r\n    projectExplorer: ProjectExplorer;\r\n    teacherExplorer: TeacherExplorer;\r\n    networkManager: NetworkManager;\r\n    actionManager: ActionManager;\r\n    mainMenu: MainMenu;\r\n\r\n    login: Login;\r\n\r\n    compiler: Compiler;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    bottomDiv: BottomDiv;\r\n\r\n    startupComplete = 2;\r\n    waitForGUICallback: () => void;\r\n\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    user: UserData;\r\n    userDataDirty: boolean = false;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    rightDiv: RightDiv;\r\n\r\n    viewModeController: ViewModeController;\r\n\r\n    databaseTool: DatabaseTool;\r\n\r\n    databaseExplorer: DatabaseExplorer;\r\n\r\n    resultsetPresenter: ResultsetPresenter;\r\n\r\n    notifier: Notifier;\r\n\r\n    waitOverlay: WaitOverlay = new WaitOverlay(jQuery('.bitteWarten'));\r\n    historyViewer: HistoryViewer = new HistoryViewer(this, jQuery('.jo_historyTab'));\r\n\r\n    initGUI() {\r\n\r\n        checkIfMousePresent();\r\n\r\n        this.login = new Login(this);\r\n        this.login.initGUI();\r\n\r\n        this.databaseTool = new DatabaseTool(this);\r\n        this.databaseExplorer = new DatabaseExplorer(this, jQuery(\".jo_db_tree\"));\r\n\r\n        this.actionManager = new ActionManager(null, this);\r\n        this.actionManager.init();\r\n\r\n        this.networkManager = new NetworkManager(this, jQuery('#bottomdiv-outer .jo_updateTimerDiv'));\r\n\r\n        let sliders = new Sliders(this);\r\n        sliders.initSliders();\r\n        this.mainMenu = new MainMenu(this);\r\n        this.projectExplorer = new ProjectExplorer(this, jQuery('#leftpanel>.jo_projectexplorer'));\r\n        this.projectExplorer.initGUI();\r\n\r\n        this.bottomDiv = new BottomDiv(this, jQuery('#bottomdiv-outer>.jo_bottomdiv-inner'), jQuery('body'));\r\n\r\n        this.rightDiv = new RightDiv(this, jQuery('#rightdiv-inner'));\r\n        this.rightDiv.initGUI();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.themeManager = new ThemeManager();\r\n\r\n        this.viewModeController = new ViewModeController(jQuery(\"#view-mode\"), this);\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n        new ProgramControlButtons(this, jQuery('#controls'));\r\n\r\n        this.resultsetPresenter = new ResultsetPresenter(this, jQuery('.jo_bottomdiv-inner'));\r\n\r\n        this.notifier = new Notifier(this);\r\n\r\n    }\r\n\r\n\r\n    initEditor() {\r\n        this.editor = new Editor(this, true, false);\r\n        new Formatter().init();\r\n        // this.monaco_editor = \r\n        this.editor.initGUI(jQuery('#editor'));\r\n\r\n        let that = this;\r\n        jQuery(window).on('resize', (event) => {\r\n            jQuery('#bottomdiv-outer').css('height', '450px');\r\n            jQuery('#editor').css('height', (window.innerHeight - 450 - 30 - 2) + \"px\");\r\n            that.editor.editor.layout();\r\n            jQuery('#editor').css('height', \"\");\r\n\r\n        });\r\n\r\n        jQuery(window).trigger('resize');\r\n\r\n        this.checkStartupComplete();\r\n    }\r\n\r\n    initTeacherExplorer(classdata: ClassData[]) {\r\n        this.teacherExplorer = new TeacherExplorer(this, classdata);\r\n        this.teacherExplorer.initGUI();\r\n    }\r\n\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    start() {\r\n\r\n        if (this.waitForGUICallback != null) {\r\n            this.waitForGUICallback();\r\n        }\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.getMonacoEditor().layout();\r\n        }, 200);\r\n\r\n        this.compiler = new Compiler(this);\r\n\r\n        this.startTimer();\r\n\r\n        $(window).on('unload', function() {\r\n            \r\n            if(navigator.sendBeacon && that.user != null){\r\n                that.networkManager.sendUpdates(null, false);\r\n                that.networkManager.sendUpdateUserSettings(() => {});\r\n            }\r\n            \r\n        });\r\n\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n                this.projectExplorer.renderErrorCount(this.currentWorkspace, errors);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                if (this.projectExplorer) {\r\n                    this.version++;\r\n                }\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    removeWorkspace(w: Workspace) {\r\n        this.workspaceList.splice(this.workspaceList.indexOf(w), 1);\r\n    }\r\n\r\n    restoreWorkspaces(workspaces: Workspaces) {\r\n\r\n        this.workspaceList = [];\r\n        this.currentWorkspace = null;\r\n        // this.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\" , \"text\"));\r\n        this.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        let currentWorkspace: Workspace = null;\r\n\r\n        for (let ws of workspaces.workspaces) {\r\n\r\n            let workspace: Workspace = Workspace.restoreFromData(ws, this);\r\n            this.workspaceList.push(workspace);\r\n            if (ws.id == this.user.currentWorkspace_id && !ws.isFolder) {\r\n                currentWorkspace = workspace;\r\n            }\r\n        }\r\n\r\n        this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n\r\n        if (currentWorkspace == null && this.workspaceList.length > 0) {\r\n            for(let ws of this.workspaceList){\r\n                if(!ws.isFolder){\r\n                    currentWorkspace = this.workspaceList[0];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (currentWorkspace != null) {\r\n            this.projectExplorer.setWorkspaceActive(currentWorkspace, null, true);\r\n        }\r\n\r\n        if (this.workspaceList.length == 0) {\r\n\r\n            Helper.showHelper(\"newDatabaseHelper\", this, this.projectExplorer.workspaceListPanel.$captionElement);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    createNewWorkspace(name: string, owner_id: number): Workspace {\r\n        return new Workspace(name, this, owner_id);\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class ErrorManager {\r\n\r\n    oldDecorations: string[] = [];\r\n    oldErrorDecorations: string[] = [];\r\n    $errorDiv: JQuery<HTMLElement>;\r\n\r\n    $bracket_warning: JQuery<HTMLElement>;\r\n\r\n    minimapColor: {[key: string]:string } = {};\r\n\r\n    lightBulbOnClickFunctionList: {class: string, onClickFunction: () => void, title: string}[] = [];\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>, private $mainDiv: JQuery<HTMLElement>) {\r\n        this.minimapColor[\"error\"] = \"#bc1616\";\r\n        this.minimapColor[\"warning\"] = \"#cca700\";\r\n        this.minimapColor[\"info\"] = \"#75beff\";\r\n\r\n        this.$bracket_warning = $mainDiv.find(\".jo_parenthesis_warning\");\r\n\r\n        this.$bracket_warning.attr('title', 'Klammeralarm!');\r\n        this.$bracket_warning.children().attr('title', 'Klammeralarm!');\r\n\r\n        let that = this;\r\n        $mainDiv.find(\".jo_pw_undo\").on(\"click\", () => {\r\n            let editor = that.main.getMonacoEditor();\r\n            editor.trigger(\".\", \"undo\", {});\r\n        }).attr('title', 'Undo');\r\n    }\r\n\r\n    showParenthesisWarning(error: string){\r\n        if(error != null){\r\n            this.$bracket_warning.css(\"visibility\", \"visible\");\r\n            this.$bracket_warning.find(\".jo_pw_heading\").text(error);\r\n        } else {\r\n            this.$bracket_warning.css(\"visibility\", \"hidden\");\r\n        }\r\n    }\r\n\r\n    showErrors(workspace: Workspace): Map<Module, number> {\r\n\r\n        this.lightBulbOnClickFunctionList = [];\r\n\r\n        let errorCountMap: Map<Module, number> = new Map();\r\n\r\n        this.$errorDiv = this.$bottomDiv.find('.jo_tabs>.jo_errorsTab');\r\n        this.$errorDiv.empty();\r\n\r\n        let hasErrors = false;\r\n\r\n        let ms = workspace.moduleStore;\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        for (let m of ms.getModules(false)) {\r\n            let markers: monaco.editor.IMarkerData[] = [];\r\n            let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n            let $errorList: JQuery<HTMLElement>[] = [];\r\n\r\n            let errors = m.getSortedAndFilteredErrors();\r\n            errorCountMap.set(m, m.getErrorCount());\r\n\r\n            for (let error of errors) {\r\n\r\n                let linesDecorationsClassName: string;\r\n                let borderLeftClass: string;\r\n                let minimapColor: string = this.minimapColor[error.level];\r\n\r\n                switch (error.level) {\r\n                    case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                    case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                    case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n                }\r\n\r\n                if (error.quickFix != null) {\r\n                    let quickFix = error.quickFix;\r\n                    let lightBulbClass = \"lb_\" + Math.trunc(Math.random() * 1000000);\r\n                    linesDecorationsClassName = 'jo_yellowLightBulb ' + borderLeftClass + \" \" + lightBulbClass;\r\n\r\n                    this.lightBulbOnClickFunctionList.push({class: '.' + lightBulbClass, \r\n                    onClickFunction: () => {\r\n\r\n                        let edits = quickFix.editsProvider(m.model.uri);\r\n                        editor.executeEdits(\"\", edits.map((edit) => {\r\n                            let r = edit.edit.range;\r\n                            return {\r\n                                range: new monaco.Range(r.startLineNumber, r.startColumn, r.endLineNumber, r.endColumn),\r\n                                text: edit.edit.text,\r\n                                forceMoveMarkers: true\r\n                            }\r\n                        }\r\n                        ));\r\n\r\n                    },\r\n                    title: quickFix.title\r\n                })\r\n\r\n\r\n                }\r\n\r\n                this.processError(error, m, $errorList);\r\n\r\n                let severity: monaco.MarkerSeverity;\r\n                switch (error.level) {\r\n                    case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                    case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                    case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n                }\r\n\r\n                markers.push({\r\n                    startLineNumber: error.position.line,\r\n                    startColumn: error.position.column,\r\n                    endLineNumber: error.position.line,\r\n                    endColumn: error.position.column + error.position.length,\r\n                    message: error.text,\r\n                    severity: severity,\r\n                    //@ts-ignore\r\n                    relatedInformation: error.quickFix\r\n                });\r\n\r\n                decorations.push({\r\n                    range: {\r\n                        startLineNumber: error.position.line,\r\n                        startColumn: error.position.column,\r\n                        endLineNumber: error.position.line,\r\n                        endColumn: error.position.column + error.position.length\r\n                    },\r\n                    options: {\r\n                        linesDecorationsClassName: linesDecorationsClassName,\r\n                        minimap: {\r\n                            position: monaco.editor.MinimapPosition.Inline,\r\n                            color: minimapColor\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n            }\r\n\r\n            monaco.editor.setModelMarkers(m.model, 'test', markers);\r\n            m.oldErrorDecorations = m.model.deltaDecorations(m.oldErrorDecorations, decorations);\r\n\r\n            // decorations used when user clicks on error in error-list:\r\n            this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, []);\r\n\r\n\r\n            if ($errorList.length > 0 && this.$errorDiv.length > 0) {\r\n                hasErrors = true;\r\n                let $file = jQuery('<div class=\"jo_error-filename\">' + m.file.name + '&nbsp;</div>');\r\n                this.$errorDiv.append($file);\r\n                for (let $error of $errorList) {\r\n                    this.$errorDiv.append($error);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasErrors && this.$errorDiv.length > 0) {\r\n            this.$errorDiv.append(jQuery('<div class=\"jo_noErrorMessage\">Keine Fehler gefunden :-)</div>'));\r\n        }\r\n\r\n        this.registerLightbulbOnClickFunctions();\r\n\r\n        return errorCountMap;\r\n\r\n    }\r\n\r\n    registerLightbulbOnClickFunctions() {\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            for(let locf of that.lightBulbOnClickFunctionList){\r\n                    jQuery(locf.class).off('click', locf.onClickFunction);\r\n                    jQuery(locf.class).on('click', locf.onClickFunction).attr('title', locf.title);\r\n            }            \r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    processError(error: Error, m: Module, $errorDivs: JQuery<HTMLElement>[]) {\r\n\r\n        let $div = jQuery('<div class=\"jo_error-line\"></div>');\r\n        let $lineColumn = jQuery('<span class=\"jo_error-position\">[Z&nbsp;<span class=\"jo_linecolumn\">' + error.position.line + '</span>' +\r\n            ' Sp&nbsp;<span class=\"jo_linecolumn\">' + error.position.column + '</span>]</span>:&nbsp;');\r\n        let category = \"\";\r\n        switch (error.level) {\r\n            case \"error\": break;\r\n            case \"warning\": category = '<span class=\"jo_warning_category\">Warnung: </span>'; break;\r\n            case \"info\": category = '<span class=\"jo_info_category\">Info: </span>'; break;\r\n        }\r\n        let $message = jQuery('<div class=\"jo_error-text\">' + category + error.text + \"</div>\");\r\n\r\n        $div.append($lineColumn).append($message);\r\n\r\n        let that = this;\r\n        $div.on(\"mousedown\", (ev) => {\r\n            this.$errorDiv.find('.jo_error-line').removeClass('jo_active');\r\n            $div.addClass('jo_active');\r\n            that.showError(m, error);\r\n        });\r\n\r\n        $errorDivs.push($div);\r\n    }\r\n\r\n    showError(m: Module, error: Error) {\r\n\r\n        if (this.main instanceof Main) {\r\n            if (m != this.main.projectExplorer.getCurrentlyEditedModule()) {\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n        let position = error.position;\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n\r\n        let className: string = \"\";\r\n        switch (error.level) {\r\n            case \"error\": className = \"jo_revealError\"; break;\r\n            case \"warning\": className = \"jo_revealWarning\"; break;\r\n            case \"info\": className = \"jo_revealInfo\"; break;\r\n        }\r\n\r\n\r\n        this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, [\r\n            {\r\n                range: range,\r\n                options: { className: className }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n}","import { makeDiv } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { stringToDate, dateToStringWithoutTime } from \"../../tools/StringTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\ntype ModuleWithWorkspace = {\r\n    module: Module,\r\n    workspace: Workspace\r\n}\r\n\r\ntype DayWithModules = {\r\n    date: Date;\r\n    day: string;\r\n    modules: ModuleWithWorkspace[];\r\n}\r\n\r\nexport class HomeworkManager {\r\n\r\n    $homeworkTab: JQuery<HTMLElement>;\r\n    $homeworkTabLeft: JQuery<HTMLElement>;\r\n    $homeworkTabRight: JQuery<HTMLElement>;\r\n\r\n    $showRevisionButton: JQuery<HTMLElement>;\r\n    showRevisionActive: boolean = false;\r\n\r\n    diffEditor: monaco.editor.IStandaloneDiffEditor;\r\n\r\n    constructor(private main: Main, public $bottomDiv: JQuery<HTMLElement>) {\r\n        this.$homeworkTab = $bottomDiv.find('.jo_tabs>.jo_homeworkTab');\r\n    }\r\n\r\n    initGUI() {\r\n        let that = this;\r\n        this.$homeworkTab.append(this.$homeworkTabLeft = makeDiv(\"\", \"jo_homeworkTabLeft jo_scrollable\"));\r\n        this.$homeworkTab.append(this.$homeworkTabRight = makeDiv(\"\", \"jo_homeworkTabRight jo_scrollable\"));\r\n        jQuery('#view-mode').prepend(this.$showRevisionButton = makeDiv(\"\", \"jo_button jo_active jo_homeworkRevisionButton\", \"\"));\r\n        this.$showRevisionButton.on(\"click\", () => {\r\n            if (this.showRevisionActive) {\r\n                this.hideRevision();\r\n            } else {\r\n                this.showRevision(that.main.getCurrentlyEditedModule());\r\n            }\r\n        });\r\n        this.$showRevisionButton.hide();\r\n        jQuery('#diffEditor').hide();\r\n    }\r\n\r\n    showHomeWorkRevisionButton() {\r\n        this.$showRevisionButton.text(this.showRevisionActive ? \"Normalansicht\" : \"Korrekturen zeigen\");\r\n        this.$showRevisionButton.show();\r\n    }\r\n\r\n    hideHomeworkRevisionButton() {\r\n        this.$showRevisionButton.hide();\r\n    }\r\n\r\n    showRevision(module: Module) {\r\n\r\n        module.file.text = module.getProgramTextFromMonacoModel();\r\n        let file = module.file;\r\n\r\n        jQuery('#editor').hide();\r\n        jQuery('#diffEditor').show();\r\n\r\n        var originalModel = monaco.editor.createModel(file.text_before_revision, \"myJava\");\r\n        var modifiedModel = monaco.editor.createModel(file.text, \"myJava\");\r\n\r\n        this.diffEditor = monaco.editor.createDiffEditor(document.getElementById(\"diffEditor\"), {\r\n            // You can optionally disable the resizing\r\n            enableSplitViewResizing: true,\r\n            originalEditable: false,\r\n            readOnly: true,\r\n            // Render the diff inline\r\n            renderSideBySide: true\r\n        });\r\n\r\n        this.diffEditor.setModel({\r\n            original: originalModel,\r\n            modified: modifiedModel\r\n        });\r\n\r\n        this.showRevisionActive = true;\r\n        this.showHomeWorkRevisionButton();\r\n    }\r\n\r\n    hideRevision() {\r\n        if (this.showRevisionActive) {\r\n\r\n            jQuery('#diffEditor').hide();\r\n            this.diffEditor.dispose();\r\n            this.diffEditor = null;\r\n            jQuery('#editor').show();\r\n\r\n            this.showRevisionActive = false;\r\n            this.showHomeWorkRevisionButton();\r\n        }\r\n    }\r\n\r\n\r\n    attachToWorkspaces(workspaces: Workspace[]) {\r\n\r\n        let daysWithModules: DayWithModules[] = [];\r\n        let map: { [day: string]: DayWithModules } = {};\r\n\r\n        workspaces.forEach(ws => {\r\n            ws.moduleStore.getModules(false).forEach(module => {\r\n\r\n                let dateString = module.file.submitted_date;\r\n                if (dateString != null) {\r\n\r\n                    let date: Date = stringToDate(dateString);\r\n                    let dateWithoutTime = dateToStringWithoutTime(date);\r\n                    let dwm: DayWithModules = map[dateWithoutTime];\r\n                    if (dwm == null) {\r\n                        dwm = {\r\n                            date: date,\r\n                            day: dateWithoutTime,\r\n                            modules: []\r\n                        };\r\n                        map[dateWithoutTime] = dwm;\r\n                        daysWithModules.push(dwm);\r\n                    }\r\n                    dwm.modules.push({module: module, workspace: ws});\r\n\r\n                }\r\n\r\n            });\r\n\r\n        });\r\n\r\n        this.$homeworkTabLeft.empty();\r\n        this.$homeworkTabRight.empty();\r\n\r\n        let that = this;\r\n\r\n        this.$homeworkTabLeft.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgabetage:\"));\r\n\r\n\r\n        daysWithModules.sort((a, b) => {\r\n            if (a.date.getFullYear() != b.date.getFullYear()) return -Math.sign(a.date.getFullYear() - b.date.getFullYear());\r\n            if (a.date.getMonth() != b.date.getMonth()) return -Math.sign(a.date.getMonth() - b.date.getMonth());\r\n            if (a.date.getDate() != b.date.getDate()) return -Math.sign(a.date.getDate() - b.date.getDate());\r\n            return 0;\r\n        });\r\n\r\n        let first: boolean = true;\r\n\r\n        daysWithModules.forEach(dwm => {\r\n\r\n            dwm.modules.sort((m1, m2) => m1.module.file.name.localeCompare(m2.module.file.name));\r\n\r\n            let $div = makeDiv(\"\", \"jo_homeworkDate\", dwm.day);\r\n            this.$homeworkTabLeft.append($div);\r\n\r\n            $div.on(\"click\", (e) => {\r\n                this.$homeworkTabLeft.find('.jo_homeworkDate').removeClass('active');\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            });\r\n\r\n            if (first) {\r\n                first = false;\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    select(dwm: DayWithModules) {\r\n        this.$homeworkTabRight.empty();\r\n        this.$homeworkTabRight.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgegebene Dateien:\"));\r\n        let that = this;\r\n        dwm.modules.forEach(moduleWithWorkspace => {\r\n            let $div = jQuery(`<div class=\"jo_homeworkEntry\">Workspace <span class=\"jo_homework-workspace\">\r\n                    ${moduleWithWorkspace.workspace.name}</span>, Datei <span class=\"jo_homework-file\">\r\n                    ${moduleWithWorkspace.module.file.name}</span> (Abgabe: ${moduleWithWorkspace.module.file.submitted_date} )</div>`);\r\n            that.$homeworkTabRight.append($div);\r\n            $div.on(\"click\", () => {\r\n                    that.main.projectExplorer.setWorkspaceActive(moduleWithWorkspace.workspace);\r\n                    that.main.projectExplorer.setModuleActive(moduleWithWorkspace.module);\r\n                    that.main.projectExplorer.fileListPanel.select(moduleWithWorkspace.module, false);\r\n            });\r\n        })\r\n        \r\n    }\r\n\r\n\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { ErrorManager } from \"./ErrorManager.js\";\r\nimport { HomeworkManager } from \"./HomeworkManager.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class BottomDiv {\r\n\r\n    errorManager: ErrorManager;\r\n    homeworkManager: HomeworkManager;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>, public $mainDiv: JQuery<HTMLElement>) {\r\n\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_homeworkTabheading').length > 0) {\r\n            this.homeworkManager = new HomeworkManager(<Main>main, $bottomDiv);\r\n        }\r\n\r\n        this.errorManager = new ErrorManager(main, $bottomDiv, $mainDiv);\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$bottomDiv);\r\n        if (this.homeworkManager != null) this.homeworkManager.initGUI();\r\n\r\n        this.$bottomDiv.find('.jo_tabs').children().first().trigger(\"click\");\r\n\r\n    }\r\n\r\n    showHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'visible');\r\n        jQuery('.jo_homeworkTabheading').trigger(\"mousedown\");\r\n\r\n    }\r\n\r\n    hideHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'hidden');\r\n        jQuery('.jo_tabheadings').children().first().trigger(\"mousedown\");\r\n\r\n    }\r\n\r\n\r\n}","\r\nexport class EmbeddedSlider {\r\n\r\n    $sliderDiv: JQuery<HTMLElement>;\r\n\r\n    /**\r\n     * A div contains $container and another div. Between the latter two \r\n     * a slider should get inserted.\r\n     * @param $container \r\n     * @param firstLast true, if $container is left/on top of other div; false if otherwise\r\n     * @param horVert true, if $container and other div are left/right of another; false if they are on top/below each other\r\n     * @param callback \r\n     * @param $otherDiv \r\n     */\r\n    constructor(private $container: JQuery<HTMLElement>, \r\n        private firstLast: boolean, private horVert: boolean,\r\n         private callback: (newLength: number) => void, private $otherDiv?: JQuery<HTMLElement>){\r\n            this.initSlider();\r\n    }\r\n\r\n    initSlider() {\r\n        let that = this;\r\n\r\n        if(this.$otherDiv == null){\r\n            this.$container.parent().children().each((index, element) => {\r\n                if(element != this.$container[0]){\r\n                    that.$otherDiv = jQuery(element);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.$sliderDiv = jQuery('<div class=\"joe_slider\"></div>');\r\n\r\n        this.$sliderDiv.css({\r\n            width: this.horVert ? \"100%\" : \"4px\",\r\n            height: this.horVert ? \"4px\" : \"100%\",\r\n            cursor: this.horVert ? \"row-resize\" : \"col-resize\",\r\n        });\r\n\r\n        if(this.firstLast){\r\n            this.$sliderDiv.css({\r\n                top: \"0px\",\r\n                left: \"0px\"\r\n            });\r\n        } else {\r\n            if(this.horVert){\r\n                this.$sliderDiv.css({\r\n                    bottom: \"0px\",\r\n                    left: \"0px\"\r\n                });    \r\n            } else {\r\n                this.$sliderDiv.css({\r\n                    top: \"0px\",\r\n                    right: \"0px\"\r\n                });    \r\n            }\r\n        }\r\n\r\n        this.$container.append(this.$sliderDiv);\r\n\r\n        this.$sliderDiv.on(\"mousedown\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(\"mousemove.slider\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                let dy = mm.clientY - y;\r\n\r\n                that.slide(dx, dy);\r\n                \r\n                x = mm.clientX;\r\n                y = mm.clientY;\r\n\r\n            });\r\n\r\n            jQuery(document).on(\"mouseup.slider\", () => {\r\n                jQuery(document).off(\"mousemove.slider\");\r\n                jQuery(document).off(\"mouseup.slider\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        setTimeout(() => {\r\n            that.slide(1, 1);\r\n        }, 600);\r\n\r\n    }\r\n\r\n    setColor(color: string){\r\n        this.$sliderDiv.css('background-color', color);\r\n    }\r\n\r\n    slide(dx: number, dy: number){\r\n        if(this.horVert){\r\n            let height = Number.parseInt(this.$container.css('height').replace('px', ''));\r\n            let otherHeight = Number.parseInt(this.$otherDiv.css('height').replace('px', ''));\r\n            let newHeight = this.firstLast ? height -= dy : height += dy;\r\n            let newOtherHeight = this.firstLast ? otherHeight += dy : otherHeight -= dy;\r\n            this.$container.css('height', newHeight + \"px\");\r\n            this.$otherDiv.css('height', newOtherHeight + \"px\");\r\n            this.callback(newHeight);\r\n        } else {\r\n            let width = Number.parseInt(this.$container.css('width').replace('px', ''));\r\n            let otherWidth = Number.parseInt(this.$otherDiv.css('width').replace('px', ''));\r\n            let newWidth = this.firstLast ? width -= dx : width += dx;\r\n            let newOtherWidth = this.firstLast ? otherWidth += dx : otherWidth -= dx;\r\n            this.$container.css('width', newWidth + \"px\");\r\n            this.$otherDiv.css('width', newOtherWidth + \"px\");\r\n            this.callback(newWidth);\r\n        }\r\n        this.$container.css('flex', \"0 1 auto\");\r\n\r\n    }\r\n\r\n\r\n}","import { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\nimport { openContextMenu, makeEditable } from \"../tools/HtmlTools.js\";\r\nimport { JOScript, ScriptType } from \"./EmbeddedStarter.js\";\r\n\r\ntype FileData = {\r\n    type: ScriptType,\r\n    module?: Module,\r\n    hint?: string,\r\n    $fileDiv: JQuery<HTMLElement>\r\n}\r\n\r\nexport class EmbeddedFileExplorer {\r\n\r\n    currentFile: FileData;\r\n    files: FileData[] = [];\r\n\r\n    constructor(private moduleStore: ModuleStore, private $fileListDiv: JQuery<HTMLElement>, private main: MainEmbedded) {\r\n\r\n        let that = this;\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n\r\n            this.addModule(module);\r\n\r\n        }\r\n\r\n        let $filesDiv = $fileListDiv.parent();\r\n        let $addButton = jQuery('<div class=\"joe_addFileButton jo_button img_add-dark jo_active\" title=\"Datei hinzufügen\"></div>');\r\n        $filesDiv.append($addButton);\r\n\r\n        $addButton.on(\"click\", () => {\r\n\r\n            let module = this.main.addModule({ text: \"\", title: \"Neue Datei.java\", type: \"sql\" });\r\n            let fileData = this.addModule(module);\r\n\r\n            this.renameElement(fileData, () => {\r\n                // if there's no file yet and then one is added and subsequently renamed: select it!\r\n                if (that.currentFile != fileData) {\r\n                    that.selectFile(fileData);\r\n                }\r\n            });\r\n        });\r\n\r\n\r\n    }\r\n\r\n    removeAllFiles() {\r\n        this.files.forEach(f => this.removeFile(f));\r\n    }\r\n\r\n\r\n    addHint(script: JOScript): void {\r\n        let that = this;\r\n        let $fileDiv = jQuery('<div class=\"jo_file jo_hint\" ><div class=\"jo_fileimage\"></div><div class=\"jo_filename\" style=\"line-height: 22px\">' +\r\n            script.title + '</div><div class=\"jo_additionalButtons\"></div></div></div>');\r\n        this.$fileListDiv.append($fileDiv);\r\n\r\n        let fileData: FileData = {\r\n            module: null,\r\n            $fileDiv: $fileDiv,\r\n            type: \"hint\",\r\n            hint: script.text\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    addModule(module: Module): FileData {\r\n        let that = this;\r\n        let $fileDiv = jQuery(`<div class=\"jo_file jo_java\" >\r\n        <div class=\"jo_fileimage\"></div>\r\n        <div class=\"jo_filename\" style=\"line-height: 22px\">${module.file.name}</div>\r\n        <div class=\"jo_additionalButtonStart\"></div>\r\n        <div class=\"jo_delete img_delete jo_button jo_active\" title=\"Datei löschen\"></div></div></div>`);\r\n        this.$fileListDiv.append($fileDiv);\r\n\r\n        let fileData: FileData = {\r\n            module: module,\r\n            $fileDiv: $fileDiv,\r\n            type: \"sql\"\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        module.file.panelElement = {\r\n            name: module.file.name,\r\n            $htmlFirstLine: $fileDiv,\r\n            isFolder: false,\r\n            path: []\r\n        }\r\n\r\n        $fileDiv.find('.jo_delete').on(\"mousedown\", (e: JQuery.MouseDownEvent) => {\r\n            that.onDelete(fileData, e);\r\n        })\r\n\r\n        $fileDiv.find('.jo_delete').on(\"click\", (e) => { e.preventDefault(); e.stopPropagation() });\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n        $fileDiv[0].addEventListener(\"contextmenu\", function (event) {\r\n            event.preventDefault();\r\n            openContextMenu([{\r\n                caption: \"Umbenennen\",\r\n                callback: () => {\r\n                    that.renameElement(fileData, () => { });\r\n                }\r\n            }], event.pageX, event.pageY);\r\n        }, false);\r\n\r\n        return fileData;\r\n\r\n    }\r\n\r\n    onDelete(fileData: FileData, ev: JQuery.MouseDownEvent) {\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n        let that = this;\r\n        openContextMenu([{\r\n            caption: \"Abbrechen\",\r\n            callback: () => {\r\n                // nothing to do.\r\n            }\r\n        }, {\r\n            caption: \"Ich bin mir sicher: löschen!\",\r\n            color: \"#ff6060\",\r\n            callback: () => {\r\n                that.removeFile(fileData);\r\n            }\r\n        }], ev.pageX + 2, ev.pageY + 2);\r\n\r\n    }\r\n\r\n    removeFile(fileData: FileData) {\r\n        fileData.$fileDiv.remove();\r\n        this.main.removeModule(fileData.module);\r\n        this.files = this.files.filter((fd) => fd != fileData);\r\n        if (this.currentFile == fileData) {\r\n            if (this.files.length > 0) {\r\n                this.selectFile(this.files[0]);\r\n            } else {\r\n                this.main.getMonacoEditor().setValue(\"Keine Datei vorhanden.\");\r\n                this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n            }\r\n        }\r\n\r\n        this.files.forEach((file) => {\r\n            if(file.module != null){                // Hints have module == null\r\n                file.module.file.saved = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        for (let fileData of this.files) {\r\n            if (fileData.module == module) {\r\n                this.removeFile(fileData);\r\n            }\r\n        }\r\n    }\r\n\r\n    renameElement(fileData: FileData, callback: () => void) {\r\n        let that = this;\r\n        let $div = fileData.$fileDiv.find('.jo_filename');\r\n        let pointPos = fileData.module.file.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        makeEditable($div, $div, (newText: string) => {\r\n            fileData.module.file.name = newText;\r\n            $div.html(newText);\r\n            if (callback != null) callback();\r\n        }, selection);\r\n\r\n    }\r\n\r\n\r\n    setFirstFileActive() {\r\n        if (this.files.length > 0) {\r\n            this.selectFile(this.files[0]);\r\n        }\r\n    }\r\n\r\n    selectFile(fileData: FileData) {\r\n        if (fileData == null) return;\r\n        switch (fileData.type) {\r\n            case \"sql\":\r\n                this.main.$hintDiv.hide();\r\n                this.main.$monacoDiv.show();\r\n                this.main.setModuleActive(fileData.module);\r\n                this.main.getMonacoEditor().focus();\r\n                break;\r\n            case \"hint\":\r\n                this.main.$monacoDiv.hide();\r\n                this.main.$hintDiv.show();\r\n\r\n                let syntaxMap: { [code: string]: string } = {};\r\n                let code: string[] = [];\r\n\r\n                //@ts-ignore\r\n                let md1 = window.markdownit({\r\n                    highlight: function (str, lang) {\r\n                        code.push(str);\r\n                        return \"\";\r\n                    }\r\n                });\r\n\r\n                md1.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                    var token = tokens[idx];\r\n                    code.push(token.content);\r\n                    // pass token to default renderer.\r\n                    return \"\"; //md1.renderer.rules.code_block(tokens, idx, options, env, self);\r\n                };\r\n\r\n                md1.render(fileData.hint);\r\n\r\n                this.colorize(code, syntaxMap, () => {\r\n                    //@ts-ignore\r\n                    let md2 = window.markdownit({\r\n                        highlight: function (str, lang) {\r\n                            return syntaxMap[str];\r\n                        }\r\n                    });\r\n\r\n                    md2.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                        var token = tokens[idx];\r\n                        // pass token to default renderer.\r\n                        return syntaxMap[token.content].replace(\"<br/>\", \"\");\r\n                    };\r\n\r\n\r\n                    let html = md2.render(fileData.hint);\r\n                    this.main.$hintDiv.html(html);\r\n                });\r\n                this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n                fileData.$fileDiv.addClass('jo_active');\r\n                break;\r\n        }\r\n    }\r\n\r\n    colorize(code: string[], codeMap: { [code: string]: string }, callback: () => void) {\r\n        let that = this;\r\n        if (code.length > 0) {\r\n            let uncoloredtext = code.pop();\r\n            monaco.editor.colorize(uncoloredtext, 'myJava', { tabSize: 3 }).then((text) => {\r\n                codeMap[uncoloredtext] = text;\r\n                that.colorize(code, codeMap, callback);\r\n            }\r\n            );\r\n        } else {\r\n            callback();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    markFile(module: Module) {\r\n        this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n\r\n        this.currentFile = this.files.find((fileData) => fileData.module == module);\r\n\r\n        if (this.currentFile != null) this.currentFile.$fileDiv.addClass('jo_active');\r\n\r\n    }\r\n\r\n\r\n\r\n}","export class EmbeddedIndexedDB {\r\n\r\n    private db: IDBDatabase;\r\n\r\n    constructor(private databaseIdentifier: string){\r\n\r\n    }\r\n\r\n    public open(successCallback: () => void) {\r\n\r\n        if (window.indexedDB) {\r\n\r\n            let request: IDBOpenDBRequest = window.indexedDB.open(this.databaseIdentifier, 1);\r\n\r\n            let that = this;\r\n\r\n            request.onerror = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                console.log(\"Couldn't open IndexedDB: \" + ev.type);\r\n            };\r\n\r\n            request.onsuccess = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                that.db = request.result;\r\n                that.db.onerror = function(event) {\r\n                    // Allgemeine Fehlerbehandlung, die für alle Anfragen an die Datenbank gilt. \r\n                    // @ts-ignore\r\n                    console.log(\"Datenbankfehler: \" + event.target.error.message);\r\n                  };\r\n                  successCallback();\r\n            };\r\n\r\n            request.onupgradeneeded = function(ev: Event){\r\n                // @ts-ignore\r\n                that.db = ev.target.result;\r\n                let objectStoreScripts = that.db.createObjectStore(\"scripts\", { keyPath: \"scriptId\", autoIncrement: false});\r\n                objectStoreScripts.transaction.oncomplete = function(event) {}\r\n\r\n                let objectStoreDatabases = that.db.createObjectStore(\"databases\", { keyPath: \"databaseId\", autoIncrement: false});\r\n                objectStoreScripts.transaction.oncomplete = function(event) {}\r\n\r\n            }\r\n\r\n        } else {\r\n            console.log(\"IndexedDB not available.\");\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public writeScript(scriptId: string, script: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.put({\r\n            scriptId: scriptId,\r\n            script: script\r\n        });\r\n\r\n    }\r\n\r\n    public removeScript(scriptId: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.delete(scriptId);\r\n\r\n    }\r\n\r\n\r\n    public getScript(scriptId: string, callback: (script: string) => void){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        let request = scriptObjectStore.get(scriptId);\r\n\r\n        request.onerror = (event) => {\r\n            callback(null);\r\n        }\r\n\r\n        request.onsuccess = (event) => {\r\n            if(request.result == null){\r\n                callback(null);\r\n            } else {\r\n                callback(request.result.script);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public writeDatabase(databaseID: string, database: string){\r\n\r\n        let databaseObjectStore = this.db.transaction(\"databases\", \"readwrite\").objectStore(\"databases\");\r\n\r\n        databaseObjectStore.put({\r\n            databaseId: databaseID,\r\n            database: database\r\n        });\r\n\r\n    }\r\n\r\n    public removeDatabase(databaseId: string){\r\n\r\n        let databaseObjectStore = this.db.transaction(\"databases\", \"readwrite\").objectStore(\"databases\");\r\n\r\n        databaseObjectStore.delete(databaseId);\r\n\r\n    }\r\n\r\n\r\n    public getDatabase(databaseId: string, callback: (database: string) => void){\r\n\r\n        let databaseObjectStore = this.db.transaction(\"databases\", \"readwrite\").objectStore(\"databases\");\r\n\r\n        let request = databaseObjectStore.get(databaseId);\r\n\r\n        request.onerror = (event) => {\r\n            callback(null);\r\n        }\r\n\r\n        request.onsuccess = (event) => {\r\n            if(request.result == null){\r\n                callback(null);\r\n            } else {\r\n                callback(request.result.database);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { SQLStatement } from \"../compiler/parser/Parser.js\";\r\nimport { WriteQueryListener } from \"../main/gui/ResultsetPresenter.js\";\r\nimport { DatabaseTool } from \"../tools/DatabaseTools.js\";\r\nimport { EmbeddedIndexedDB } from \"./EmbeddedIndexedDB.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\n\r\n\r\nexport class WriteQueryManager implements WriteQueryListener {\r\n\r\n    indexedDB: EmbeddedIndexedDB;\r\n    databaseTool: DatabaseTool;\r\n\r\n    statementsToExecute: string[] = [];\r\n\r\n    writtenStatements: string[] = [];\r\n\r\n    statementsToWrite: string[] = [];\r\n\r\n\r\n    constructor(private main: MainEmbedded, private databaseIdentifier: string) {\r\n\r\n    }\r\n\r\n    indexedDBReady(indexedDB: EmbeddedIndexedDB) {\r\n        this.indexedDB = indexedDB;\r\n        this.indexedDB.getDatabase(this.databaseIdentifier, (db: string) => {\r\n            if (db != null) {\r\n                this.writtenStatements = JSON.parse(db);\r\n                this.statementsToExecute = this.writtenStatements.slice();\r\n\r\n                this.main.historyViewer.clear();\r\n                this.main.historyViewer.appendStatements(this.statementsToExecute);\r\n\r\n                this.executeStatements();\r\n                this.writeStatementsIfNecessary();\r\n            }\r\n        })\r\n    }\r\n\r\n    reset() {\r\n        this.statementsToWrite = [];\r\n        this.writtenStatements = [];\r\n        this.statementsToExecute = [];\r\n        this.main.historyViewer.clear();\r\n        this.forceWriteStatements();\r\n    }\r\n\r\n    writeStatementsIfNecessary() {\r\n        if (this.indexedDB != null && this.statementsToWrite.length > 0) {\r\n            this.forceWriteStatements();\r\n        }\r\n    }\r\n\r\n    forceWriteStatements() {\r\n        this.writtenStatements = this.writtenStatements.concat(this.statementsToWrite);\r\n        this.statementsToWrite = [];\r\n        this.indexedDB.writeDatabase(this.databaseIdentifier, JSON.stringify(this.writtenStatements));\r\n    }\r\n\r\n    atLeastOneExecuted: boolean = false;\r\n    count: number;\r\n    executeStatements() {\r\n        if (this.databaseTool != null && this.statementsToExecute.length > 0) {\r\n            if (!this.atLeastOneExecuted) {\r\n                this.main.$databaseResetButton.fadeIn(200);\r\n                this.count = this.statementsToExecute.length;\r\n                this.main.waitOverlay.show(\"Schreibe lokale Datenbankänderungen ...\");\r\n            }\r\n            this.main.waitOverlay.setProgress(Math.round(100 * (1 - this.statementsToExecute.length / this.count)) + \" %\")\r\n            let statement = this.statementsToExecute.shift();\r\n            this.atLeastOneExecuted = true;\r\n            this.databaseTool.executeQuery(statement, () => { this.executeStatements() }, () => { this.executeStatements() });\r\n        } else {\r\n            if (this.atLeastOneExecuted) {\r\n                this.main.databaseExplorer.refresh();\r\n                this.atLeastOneExecuted = false;\r\n                this.main.waitOverlay.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    notify(statements: SQLStatement[]): void {\r\n        this.main.$databaseResetButton.fadeIn(200);\r\n        let statementsSql = statements.map(stmt => stmt.sqlCleaned == null ? stmt.sql : stmt.sqlCleaned);\r\n        this.statementsToWrite = this.statementsToWrite.concat(statementsSql);\r\n        this.main.historyViewer.appendStatements(statementsSql);\r\n        this.writeStatementsIfNecessary();\r\n    }\r\n\r\n    databaseReady(dbTool: DatabaseTool) {\r\n        this.databaseTool = dbTool;\r\n        this.executeStatements();\r\n    }\r\n\r\n    rollback() {\r\n        this.writeStatementsIfNecessary();\r\n        this.writtenStatements.pop();\r\n        this.forceWriteStatements();\r\n    }\r\n\r\n\r\n\r\n}","import { MainBase } from \"../main/MainBase.js\";\r\nimport { DatabaseTool } from \"./DatabaseTools.js\";\r\nimport { MySqlImporter } from \"./MySqlImporter.js\";\r\n\r\nexport type LoadableDatabase = {\r\n    binDump?: Uint8Array,\r\n    statements?: string[]\r\n}\r\n\r\nexport class DatabaseFetcher {\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    public async load(url: string): Promise<LoadableDatabase> {\r\n        let urlWithoutProtocol = url.replace(\"https://\", \"\")\r\n            .replace(\"http://\", \"\").toLocaleLowerCase();\r\n\r\n        let urlLowerCase = urlWithoutProtocol.toLocaleLowerCase();\r\n\r\n        let templateDump: Uint8Array = await this.fetchTemplateFromCache(urlWithoutProtocol);\r\n        if (templateDump != null) {\r\n            if (DatabaseTool.getDumpType(templateDump) == \"binaryCompressed\") {\r\n                // @ts-ignore\r\n                templateDump = pako.inflate(templateDump);\r\n            }\r\n            return { binDump: templateDump }\r\n        }\r\n\r\n        let db: LoadableDatabase;\r\n        if (urlLowerCase.endsWith(\".sqlite\")) {\r\n            db = await this.loadSqLiteDump(url, urlWithoutProtocol);\r\n        } else if (urlLowerCase.endsWith(\".zip\") || urlLowerCase.endsWith(\".sql\")) {\r\n            db = await this.loadMySql(url, urlWithoutProtocol);\r\n        }\r\n\r\n        this.saveDatabaseToCache(urlWithoutProtocol, db.binDump);\r\n\r\n        return db;\r\n\r\n    }\r\n\r\n    loadMySql(url: string, urlWithoutProtocol: string): LoadableDatabase | PromiseLike<LoadableDatabase> {\r\n        let mySqlImporter = new MySqlImporter(this.main);\r\n        return mySqlImporter.loadFromUrl(url);\r\n    }\r\n\r\n    async loadSqLiteDump(url: string, urlWithoutProtocol: string): Promise<LoadableDatabase> {\r\n\r\n        return new Promise((resolve, reject) => {\r\n            jQuery.ajax({\r\n                type: 'GET',\r\n                async: true,\r\n                url: url,\r\n                xhrFields: { responseType: 'arraybuffer' },\r\n                success: function (response: any) {\r\n                    let db = new Uint8Array(response);\r\n                    // @ts-ignore\r\n                    if (DatabaseTool.getDumpType(db) == \"binaryCompressed\") db = pako.inflate(db);\r\n                    resolve({ binDump: db });\r\n                },\r\n                error: function (jqXHR, message) {\r\n                    reject(message);\r\n                }\r\n            });\r\n\r\n        })\r\n\r\n    }\r\n\r\n    cutSqlToStatements(sql: string): string[] {\r\n        sql = sql.replace(/\\r\\n/g, \"\\n\");\r\n\r\n        let statements: string[] = [];\r\n        if (sql.indexOf(\"~@~\") >= 0) {\r\n            statements = sql.split(\"~@~\");\r\n        } else {\r\n            statements = sql.split(\";\\n\");\r\n        }\r\n        return statements;\r\n    }\r\n\r\n\r\n    async fetchTemplateFromCache(databaseIdentifier: string): Promise<Uint8Array> {\r\n        if (databaseIdentifier == null) { return null; }\r\n\r\n        if (!this.cacheAvailable()) return (null);\r\n\r\n        let cache = await caches.open('my-cache');\r\n\r\n        let value = await cache.match(databaseIdentifier);\r\n\r\n        if(value == null) return null;\r\n\r\n        let buffer = await value.arrayBuffer();\r\n\r\n        return new Uint8Array(buffer);\r\n\r\n    }\r\n\r\n    async saveDatabaseToCache(databaseIdentifier: string, templateDump: Uint8Array | string) {\r\n        if (!this.cacheAvailable()) return;\r\n\r\n        let cache = await caches.open('my-cache');\r\n\r\n        cache.put(databaseIdentifier, new Response(templateDump));\r\n    }\r\n\r\n    cacheAvailable(): boolean {\r\n        return 'caches' in self;\r\n    }\r\n\r\n}","import { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { Module, File } from \"../compiler/parser/Module.js\";\r\nimport { ActionManager } from \"../main/gui/ActionManager.js\";\r\nimport { BottomDiv } from \"../main/gui/BottomDiv.js\";\r\nimport { Editor } from \"../main/gui/Editor.js\";\r\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\r\nimport { RightDiv } from \"../main/gui/RightDiv.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { JOScript } from \"./EmbeddedStarter.js\";\r\nimport { makeDiv, makeTabs, openContextMenu } from \"../tools/HtmlTools.js\";\r\nimport { EmbeddedSlider } from \"./EmbeddedSlider.js\";\r\nimport { EmbeddedFileExplorer } from \"./EmbeddedFileExplorer.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { EmbeddedIndexedDB } from \"./EmbeddedIndexedDB.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { DatabaseTool } from \"../tools/DatabaseTools.js\";\r\nimport { DatabaseExplorer } from \"../main/gui/DatabaseExplorer.js\";\r\nimport { ResultsetPresenter } from \"../main/gui/ResultsetPresenter.js\";\r\nimport { WaitOverlay } from \"../main/gui/WaitOverlay.js\";\r\nimport { WriteQueryManager } from \"./WriteQueryManager.js\";\r\nimport { DatabaseFetcher } from \"../tools/DatabaseLoader.js\";\r\nimport { DatabaseImportExport } from \"../tools/DatabaseImportExport.js\";\r\nimport { HistoryViewer } from \"../main/gui/HistoryViewer.js\";\r\nimport { WDatabase } from \"../workspace/WDatabase.js\";\r\n\r\ntype JavaOnlineConfig = {\r\n    withFileList?: boolean,\r\n    withOutput?: boolean,\r\n    withErrorList?: boolean,\r\n    withBottomPanel?: boolean,\r\n    id?: string,\r\n    databaseURL?: string\r\n}\r\n\r\nexport class MainEmbedded implements MainBase {\r\n    isEmbedded(): boolean { return true; }\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        if (this.config.withFileList) {\r\n            return this.fileExplorer.currentFile?.module;\r\n        } else {\r\n            return this.currentWorkspace.moduleStore.getFirstModule();\r\n        }\r\n    }\r\n\r\n    getDatabaseTool(): DatabaseTool {\r\n        return this.databaseTool;\r\n    }\r\n\r\n    getDatabaseExplorer(): DatabaseExplorer {\r\n        return this.databaseExplorer;\r\n    }\r\n\r\n    getResultsetPresenter(): ResultsetPresenter {\r\n        return this.resultsetPresenter;\r\n    }\r\n\r\n    getWaitOverlay(): WaitOverlay {\r\n        return this.waitOverlay;\r\n    }\r\n\r\n    getHistoryViewer(): HistoryViewer {\r\n        return this.historyViewer;\r\n    }\r\n\r\n    config: JavaOnlineConfig;\r\n\r\n    editor: Editor;\r\n    programPointerDecoration: string[] = [];\r\n    programPointerModule: Module;\r\n\r\n    currentWorkspace: Workspace;\r\n    actionManager: ActionManager;\r\n\r\n    compiler: Compiler;\r\n\r\n    $dbTreeDiv: JQuery<HTMLElement>;\r\n\r\n    $debuggerDiv: JQuery<HTMLElement>;\r\n\r\n    bottomDiv: BottomDiv;\r\n    $filesListDiv: JQuery<HTMLElement>;\r\n\r\n    $hintDiv: JQuery<HTMLElement>;\r\n    $monacoDiv: JQuery<HTMLElement>;\r\n    $codeResetButton: JQuery<HTMLElement>;\r\n    $databaseResetButton: JQuery<HTMLElement>;\r\n\r\n    programIsExecutable = false;\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    rightDiv: RightDiv;\r\n    $rightDivInner: JQuery<HTMLElement>;\r\n\r\n    fileExplorer: EmbeddedFileExplorer;\r\n\r\n    debounceDiagramDrawing: any;\r\n\r\n    indexedDB: EmbeddedIndexedDB;\r\n\r\n    compileRunsAfterCodeReset: number = 0;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    databaseTool: DatabaseTool;\r\n\r\n    databaseExplorer: DatabaseExplorer;\r\n\r\n    waitOverlay: WaitOverlay;\r\n\r\n    resultsetPresenter: ResultsetPresenter;\r\n\r\n    writeQueryManager: WriteQueryManager;\r\n\r\n    historyViewer: HistoryViewer;\r\n\r\n    initialTemplateDump: Uint8Array;\r\n    initialStatements: string[];\r\n\r\n    constructor($div: JQuery<HTMLElement>, private scriptList: JOScript[]) {\r\n\r\n        this.readConfig($div);\r\n\r\n        this.writeQueryManager = new WriteQueryManager(this, (this.config.databaseURL == null ? \"Empty database\" : this.config.databaseURL) + this.config.id);\r\n\r\n        this.initGUI($div);\r\n\r\n\r\n        this.databaseExplorer = new DatabaseExplorer(this, this.$dbTreeDiv);\r\n        this.databaseTool = new DatabaseTool(this);\r\n        if (this.config.databaseURL != null) {\r\n            new DatabaseFetcher(this).load(this.config.databaseURL).then((loadableDb) => {\r\n                this.initialTemplateDump = loadableDb.binDump;\r\n                this.initialStatements = loadableDb.statements == null ? [] : loadableDb.statements;\r\n                this.initDatabase();\r\n            }).catch((error: string)=>{\r\n                alert('Fehler beim Landen der Datenbank: ' + error)\r\n            })\r\n        } else {\r\n            this.initDatabase();\r\n        }\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n    }\r\n\r\n    initDatabase(){\r\n        this.resetDatabase(() => {\r\n            this.initScripts();\r\n\r\n            this.indexedDB = new EmbeddedIndexedDB(\"SQL-IDE\");\r\n            this.indexedDB.open(() => {\r\n\r\n                if (this.config.id != null) {\r\n                    this.writeQueryManager.indexedDBReady(this.indexedDB);\r\n                    this.readScripts();\r\n                }\r\n\r\n            });\r\n\r\n        });\r\n    }\r\n\r\n    resetDatabase(callback: () => void) {\r\n        this.databaseTool.initializeWorker(this.initialTemplateDump, this.initialStatements, () => { }, () => {\r\n            this.writeQueryManager.databaseReady(this.databaseTool);\r\n            this.databaseExplorer.refreshAfterRetrievingDBStructure();\r\n            callback();\r\n        })\r\n    }\r\n\r\n    initScripts() {\r\n\r\n        this.fileExplorer?.removeAllFiles();\r\n\r\n        this.initWorkspace(this.scriptList);\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer = new EmbeddedFileExplorer(this.currentWorkspace.moduleStore, this.$filesListDiv, this);\r\n            this.fileExplorer.setFirstFileActive();\r\n            this.scriptList.filter((script) => script.type == \"hint\").forEach((script) => this.fileExplorer.addHint(script));\r\n        } else {\r\n            this.setModuleActive(this.currentWorkspace.moduleStore.getFirstModule());\r\n        }\r\n\r\n    }\r\n\r\n\r\n    readConfig($div: JQuery<HTMLElement>) {\r\n        let configJson: string | object = $div.data(\"sql-online\");\r\n        if (configJson != null && typeof configJson == \"string\") {\r\n            this.config = JSON.parse(configJson.split(\"'\").join('\"'));\r\n        } else {\r\n            this.config = {}\r\n        }\r\n\r\n        if (this.config.withFileList == null) this.config.withFileList = false;\r\n        if (this.config.withOutput == null) this.config.withOutput = true;\r\n        if (this.config.withErrorList == null) this.config.withErrorList = true;\r\n        if (this.config.withBottomPanel == null) this.config.withBottomPanel = true;\r\n\r\n        if (!(this.config.withOutput || this.config.withFileList || this.config.withErrorList)) {\r\n            this.config.withBottomPanel = false;\r\n        }\r\n\r\n        if (!this.config.withBottomPanel) {\r\n            this.config.withFileList = false;\r\n            this.config.withOutput = false;\r\n            this.config.withErrorList = false;\r\n        }\r\n\r\n        if(this.config.databaseURL != null){\r\n            ['http:', 'https:'].forEach(protocol => {\r\n                if(this.config.databaseURL.startsWith(protocol) && !this.config.databaseURL.startsWith(protocol + \"://\")){\r\n                    this.config.databaseURL = this.config.databaseURL.replace(protocol, protocol + \"//\");\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n\r\n        if (this.config.withFileList && this.fileExplorer.currentFile != null) {\r\n            this.fileExplorer.currentFile.module.editorState = this.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer.markFile(module);\r\n        }\r\n\r\n        /**\r\n         * WICHTIG: Die Reihenfolge der beiden Operationen ist extrem wichtig.\r\n         * Falls das Model im readonly-Zustand gesetzt wird, funktioniert <Strg + .> \r\n         * nicht und die Lightbulbs werden nicht angezeigt, selbst dann, wenn\r\n         * später readonly = false gesetzt wird.\r\n         */\r\n        this.getMonacoEditor().updateOptions({\r\n            readOnly: false,\r\n            lineNumbersMinChars: 4\r\n        });\r\n        this.editor.editor.setModel(module.model);\r\n\r\n\r\n        if (module.editorState != null) {\r\n            this.getMonacoEditor().restoreViewState(module.editorState);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    readScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let that = this;\r\n\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                setInterval(() => {\r\n                    that.saveScripts();\r\n                }, 1000);\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n                let countDown = scriptList.length;\r\n\r\n                for (let module of modules) {\r\n                    that.fileExplorer?.removeModule(module);\r\n                    that.removeModule(module);\r\n                }\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.getScript(scriptId, (script) => {\r\n                        if (script != null) {\r\n\r\n                            let module = that.addModule({\r\n                                title: name,\r\n                                text: script,\r\n                                type: \"sql\"\r\n                            });\r\n\r\n                            that.fileExplorer?.addModule(module);\r\n                            that.$codeResetButton.fadeIn(1000);\r\n\r\n                            // console.log(\"Retrieving script \" + scriptId);\r\n                        }\r\n                        countDown--;\r\n                        if (countDown == 0) {\r\n                            setInterval(() => {\r\n                                that.saveScripts();\r\n                            }, 1000);\r\n                            that.fileExplorer?.setFirstFileActive();\r\n                            if (that.fileExplorer == null) {\r\n                                let modules = that.currentWorkspace.moduleStore.getModules(false);\r\n                                if (modules.length > 0) that.setModuleActive(modules[0]);\r\n                            }\r\n                        }\r\n                    })\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    saveScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let scriptList: string[] = [];\r\n        let oneNotSaved: boolean = false;\r\n\r\n        modules.forEach(m => oneNotSaved = oneNotSaved || !m.file.saved);\r\n\r\n        if (oneNotSaved) {\r\n\r\n            for (let module of modules) {\r\n                scriptList.push(module.file.name);\r\n                let scriptId = this.config.id + module.file.name;\r\n                this.indexedDB.writeScript(scriptId, module.getProgramTextFromMonacoModel());\r\n                module.file.saved = true;\r\n                // console.log(\"Saving script \" + scriptId);\r\n            }\r\n\r\n            this.indexedDB.writeScript(this.config.id, JSON.stringify(scriptList));\r\n        }\r\n\r\n    }\r\n\r\n    deleteScriptsInDB() {\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                return;\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.removeScript(scriptId);\r\n                }\r\n\r\n                this.indexedDB.removeScript(this.config.id);\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    initWorkspace(scriptList: JOScript[]) {\r\n        this.currentWorkspace = new Workspace(\"Embedded-Workspace\", this, 0);\r\n\r\n        let i = 0;\r\n        for (let script of scriptList) {\r\n            if (script.type == \"sql\") {\r\n                this.addModule(script);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    addModule(script: JOScript): Module {\r\n        let module: Module = Module.restoreFromData({\r\n            id: this.currentWorkspace.moduleStore.getModules(true).length,\r\n            name: script.title,\r\n            text: script.text,\r\n            text_before_revision: null,\r\n            submitted_date: null,\r\n            student_edited_after_revision: false,\r\n            version: 1,\r\n            workspace_id: 0,\r\n            forceUpdate: false,\r\n            file_type: 11\r\n        }, this);\r\n\r\n        this.currentWorkspace.moduleStore.putModule(module);\r\n\r\n        let that = this;\r\n\r\n        module.model.onDidChangeContent(() => {\r\n            that.considerShowingCodeResetButton();\r\n        });\r\n\r\n        return module;\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        this.currentWorkspace.moduleStore.removeModule(module);\r\n    }\r\n\r\n\r\n    initGUI($div: JQuery<HTMLElement>) {\r\n\r\n        // let $leftDiv = jQuery('<div class=\"joe_leftDiv\"></div>');\r\n\r\n        $div.css({\r\n            \"background-image\": \"none\",\r\n            \"background-size\": \"100%\"\r\n        })\r\n\r\n        let $centerDiv = jQuery('<div class=\"joe_centerDiv\"></div>');\r\n\r\n        // let $topDiv = jQuery('<div class=\"joe_topDiv\"></div>');\r\n        // $div.append($topDiv);\r\n        $div.append($centerDiv);\r\n\r\n        let $waitDiv = this.makeWaitDiv();\r\n        $div.append($waitDiv);\r\n        this.waitOverlay = new WaitOverlay($waitDiv);\r\n\r\n        let $codeResetModalWindow = this.makeCodeResetModalWindow($div);\r\n        let $databaseResetModalWindow = this.makeDatabaseResetModalWindow($div);\r\n\r\n        let $rightDiv = this.makeRightDiv();\r\n\r\n        let $editorDiv = jQuery('<div class=\"joe_editorDiv\"></div>');\r\n        this.$monacoDiv = jQuery('<div class=\"joe_monacoDiv\"></div>');\r\n        this.$hintDiv = jQuery('<div class=\"joe_hintDiv jo_scrollable\"></div>');\r\n        this.$codeResetButton = jQuery('<div class=\"joe_codeResetButton jo_button jo_active\" title=\"Code auf Ausgangszustand zurücksetzen\">Code Reset</div>');\r\n        this.$databaseResetButton = jQuery('<div class=\"joe_databaseResetButton jo_button jo_active\" title=\"Datenbank auf Ausgangszustand zurücksetzen\">Datenbank Reset</div>');\r\n\r\n        $editorDiv.append(this.$monacoDiv, this.$hintDiv, this.$databaseResetButton);\r\n        this.$monacoDiv.append(this.$codeResetButton);\r\n\r\n        let $bracketErrorDiv = this.makeBracketErrorDiv();\r\n        $editorDiv.append($bracketErrorDiv);\r\n\r\n        // $topDiv.append($editorDiv);\r\n\r\n        this.$codeResetButton.hide();\r\n\r\n        this.$codeResetButton.on(\"click\", () => { $codeResetModalWindow.show(); })\r\n\r\n        this.$databaseResetButton.hide();\r\n\r\n        this.$databaseResetButton.on(\"click\", () => { $databaseResetModalWindow.show(); })\r\n\r\n        this.$hintDiv.hide();\r\n\r\n        let $controlsDiv = jQuery('<div class=\"joe_controlsDiv\"></div>');\r\n        let $bottomDivInner = jQuery('<div class=\"joe_bottomDivInner\"></div>');\r\n\r\n\r\n        let $bottomDiv = jQuery('<div class=\"joe_bottomDiv\"></div>');\r\n        this.makeBottomDiv($bottomDivInner, $controlsDiv);\r\n        $bottomDiv.append($bottomDivInner);\r\n        if (this.config.withFileList) {\r\n            let $filesDiv = this.makeFilesDiv();\r\n            $bottomDiv.prepend($filesDiv);\r\n            new EmbeddedSlider($filesDiv, false, false, () => { });\r\n        }\r\n        makeTabs($bottomDivInner);\r\n        $div.append($bottomDiv);\r\n\r\n        $div.addClass('joe_javaOnlineDiv');\r\n\r\n        this.editor = new Editor(this, false, true);\r\n        this.editor.initGUI(this.$monacoDiv);\r\n        this.$monacoDiv.find('.monaco-editor').css('z-index', '10');\r\n\r\n        if ($div.attr('tabindex') == null) $div.attr('tabindex', \"0\");\r\n        this.actionManager = new ActionManager($div, this);\r\n        this.actionManager.init();\r\n\r\n        this.bottomDiv = new BottomDiv(this, $bottomDivInner, $div);\r\n        this.bottomDiv.initGUI();\r\n\r\n        this.rightDiv = new RightDiv(this, this.$rightDivInner);\r\n        this.rightDiv.initGUI();\r\n\r\n        $centerDiv.append($editorDiv, $bottomDiv)\r\n        $div.append($rightDiv);\r\n\r\n        let $rightSideContainer = jQuery('<div class=\"jo_rightdiv-rightside-container\"></div>');\r\n        let $infoButton = jQuery('<div class=\"jo_button jo_active img_ellipsis-dark\" style=\"margin-right: 10px\"></div>');\r\n\r\n        $controlsDiv.append($infoButton);\r\n\r\n        this.$rightDivInner.append($rightSideContainer);\r\n\r\n        new EmbeddedSlider($rightDiv, true, false, () => {\r\n            this.editor.editor.layout();\r\n        }, $centerDiv);\r\n\r\n        new EmbeddedSlider($bottomDiv, true, true, () => { this.editor.editor.layout(); });\r\n\r\n        $infoButton.on('mouseup', (ev) => {\r\n            ev.preventDefault();\r\n            ev.stopPropagation();\r\n            openContextMenu([{\r\n                caption: \"Über die Online-IDE ...\",\r\n                link: \"https://learnj.de\",\r\n                callback: () => {\r\n                    // nothing to do.\r\n                }\r\n            }], ev.pageX + 2, ev.pageY + 2);\r\n        });\r\n\r\n\r\n        let $buttonOpen = jQuery('<label type=\"file\" class=\"img_open-file jo_button jo_active\"' +\r\n            'style=\"margin-right: 8px;\" title=\"Datenbank-Dump aus Datei laden\"><input type=\"file\" style=\"display:none\"></label>');\r\n\r\n        let that = this;\r\n\r\n        let $openInputButton = $buttonOpen.find('input');\r\n\r\n        $openInputButton.on('change', (event) => {\r\n            //@ts-ignore\r\n            var files: FileList = event.originalEvent.target.files;\r\n            that.loadDatabaseFromFile(files[0]).then(() => {\r\n                $openInputButton.val(null)\r\n            })\r\n        })\r\n\r\n        let $buttonSave = jQuery('<div class=\"img_save-dark jo_button jo_active\"' +\r\n            'style=\"margin-right: 8px;\" title=\"Datenbank-Dump in Datei speichern\"></div>');\r\n\r\n\r\n        $buttonSave.on('click', () => { that.saveDatabaseToFile() });\r\n\r\n        $controlsDiv.append($buttonOpen, $buttonSave);\r\n\r\n        this.resultsetPresenter = new ResultsetPresenter(this, $bottomDivInner);\r\n        this.resultsetPresenter.addWriteQueryListener(this.writeQueryManager);\r\n\r\n\r\n        new ProgramControlButtons(this, $controlsDiv);\r\n\r\n        this.historyViewer = new HistoryViewer(this, $div.find('.jo_historyTab'));\r\n\r\n        setTimeout(() => {\r\n            this.editor.editor.layout();\r\n            this.compiler = new Compiler(this);\r\n            this.startTimer();\r\n        }, 200);\r\n\r\n\r\n    }\r\n\r\n    saveDatabaseToFile() {\r\n        new DatabaseImportExport().saveToFile(this.databaseTool);\r\n    }\r\n\r\n    async loadDatabaseFromFile(file: globalThis.File) {\r\n        let dbImportExport = new DatabaseImportExport();\r\n        let db = await dbImportExport.loadFromFile(file, this);\r\n        if (db == null) {\r\n            alert('Es ist ein Fehler beim Import aufgetreten.');\r\n            return;\r\n        } else {\r\n            this.databaseTool.initializeWorker(db.binDump, [], (errors) => {\r\n                if (errors.length > 0) {\r\n                    alert('Es sind Fehler beim Import aufgetreten. Ausführliche Fehlermeldungen sehen Sie in der Konsole (F12).')\r\n                    console.log(errors)\r\n                }\r\n            }, () => {\r\n                this.databaseExplorer.refreshAfterRetrievingDBStructure()\r\n            })\r\n        }\r\n        return;\r\n    }\r\n\r\n    makeWaitDiv(): JQuery<HTMLElement> {\r\n\r\n        //@ts-ignore\r\n        let url = (window.javaOnlineDir == null ? '' : window.javaOnlineDir) + 'assets/projectexplorer/svg-loaders/grid.svg';\r\n\r\n        let waitHtml = `\r\n        <div class=\"bitteWarten\">\r\n        <div style=\"margin-bottom: 30px\">\r\n            <div class=\"bitteWartenText\" style=\"font-size: 20px\"></div>\r\n        </div>\r\n        <div>\r\n            <img src=\"${url}\" alt=\"\" style=\"height: 40px\">\r\n        </div>\r\n        <div class=\"bitteWartenProgress\" style=\"font-size: 20px\"></div>\r\n        </div>\r\n        `;\r\n        return jQuery(waitHtml);\r\n    }\r\n\r\n    makeBracketErrorDiv(): JQuery<HTMLElement> {\r\n        return jQuery(`\r\n        <div class=\"jo_parenthesis_warning\" title=\"Klammerwarnung!\" style=\"bottom: 55px\">\r\n        <div class=\"jo_warning_light\"></div>\r\n        <div class=\"jo_pw_heading\">{ }</div>\r\n        <div title=\"Letzten Schritt rückgängig\" \r\n            class=\"jo_pw_undo img_undo jo_button jo_active\"></div>\r\n        </div>\r\n        `);\r\n    }\r\n\r\n    makeCodeResetModalWindow($parent: JQuery<HTMLElement>): JQuery<HTMLElement> {\r\n        let $window = jQuery(\r\n            `\r\n            <div class=\"joe_codeResetModal\">\r\n            <div style=\"flex: 1\"></div>\r\n            <div style=\"display: flex\">\r\n                <div style=\"flex: 1\"></div>\r\n                <div style=\"padding-left: 30px;\">\r\n                <div style=\"color: red; margin-bottom: 10px; font-weight: bold\">Warnung:</div>\r\n                <div>Soll der Code wirklich auf den Ausgangszustand zurückgesetzt werden?</div>\r\n                <div>Alle von Dir gemachten Änderungen werden damit verworfen.</div>\r\n                </div>\r\n                <div style=\"flex: 1\"></div>\r\n            </div>\r\n            <div class=\"joe_codeResetModalButtons\">\r\n            <div class=\"joe_codeResetModalCancel jo_button jo_active\">Abbrechen</div>\r\n            <div class=\"joe_codeResetModalOK jo_button jo_active\">OK</div>\r\n            </div>\r\n            <div style=\"flex: 2\"></div>\r\n            </div>\r\n        `\r\n        );\r\n\r\n        $window.hide();\r\n\r\n        $parent.append($window);\r\n\r\n        $parent.find(\".joe_codeResetModalCancel\").on(\"click\", () => {\r\n            $window.hide();\r\n        });\r\n\r\n        $parent.find(\".joe_codeResetModalOK\").on(\"click\", () => {\r\n\r\n            this.initScripts();\r\n            this.deleteScriptsInDB();\r\n\r\n            $window.hide();\r\n            this.$codeResetButton.hide();\r\n            this.compileRunsAfterCodeReset = 1;\r\n\r\n        });\r\n\r\n        return $window;\r\n    }\r\n\r\n    makeDatabaseResetModalWindow($parent: JQuery<HTMLElement>): JQuery<HTMLElement> {\r\n        let $window = jQuery(\r\n            `\r\n            <div class=\"joe_databaseResetModal\">\r\n            <div style=\"flex: 1\"></div>\r\n            <div style=\"display: flex\">\r\n                <div style=\"flex: 1\"></div>\r\n                <div style=\"padding-left: 30px;\">\r\n                <div style=\"color: red; margin-bottom: 10px; font-weight: bold\">Warnung:</div>\r\n                <div>Soll die Datenbank wirklich auf den Ausgangszustand zurückgesetzt werden?</div>\r\n                <div>Alle bisher ausgeführten Anweisungen (siehe Tab Write History) werden dann rückgängig gemacht.</div>\r\n                </div>\r\n                <div style=\"flex: 1\"></div>\r\n            </div>\r\n            <div class=\"joe_databaseResetModalButtons\">\r\n            <div class=\"joe_databaseResetModalCancel jo_button jo_active\">Abbrechen</div>\r\n            <div class=\"joe_databaseResetModalOK jo_button jo_active\">OK</div>\r\n            </div>\r\n            <div style=\"flex: 2\"></div>\r\n            </div>\r\n        `\r\n        );\r\n\r\n        $window.hide();\r\n\r\n        $parent.append($window);\r\n\r\n        $parent.find(\".joe_databaseResetModalCancel\").on(\"click\", () => {\r\n            $window.hide();\r\n        });\r\n\r\n        $parent.find(\".joe_databaseResetModalOK\").on(\"click\", () => {\r\n\r\n            $window.hide();\r\n            this.resetDatabase(() => {\r\n                this.writeQueryManager.reset();\r\n            });\r\n\r\n            this.$databaseResetButton.hide();\r\n            this.compileRunsAfterCodeReset = 1;\r\n\r\n        });\r\n\r\n        return $window;\r\n    }\r\n\r\n    makeFilesDiv(): JQuery<HTMLElement> {\r\n\r\n\r\n        let $filesDiv = jQuery('<div class=\"joe_bottomDivFiles jo_scrollable\"></div>');\r\n\r\n        let $filesHeader = jQuery('<div class=\"joe_filesHeader jo_tabheading jo_active\"  style=\"line-height: 24px\">Dateien</div>');\r\n\r\n        this.$filesListDiv = jQuery('<div class=\"joe_filesList jo_scrollable\"></div>');\r\n\r\n        $filesDiv.append($filesHeader, this.$filesListDiv);\r\n\r\n        return $filesDiv;\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling && this.getDatabaseTool().databaseStructure != null) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.\r\n                    bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                this.version++;\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    considerShowingCodeResetButton() {\r\n        this.compileRunsAfterCodeReset++;\r\n        if (this.compileRunsAfterCodeReset == 3) {\r\n            this.$codeResetButton.fadeIn(1000);\r\n        }\r\n    }\r\n\r\n    makeBottomDiv($bottomDiv: JQuery<HTMLElement>, $buttonDiv: JQuery<HTMLElement>) {\r\n\r\n        let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n        $tabheadings.css('position', 'relative');\r\n        let $thLeftSide = jQuery('<div class=\"joe_tabheading-right jo_noHeading joe_controlsTabheading\"></div>');\r\n\r\n        $thLeftSide.append($buttonDiv);\r\n        $tabheadings.append($thLeftSide);\r\n\r\n        if (this.config.withErrorList) {\r\n            let $thErrors = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_errorsTab\" style=\"line-height: 24px\">Fehler</div>');\r\n            $tabheadings.append($thErrors);\r\n        }\r\n\r\n        if (this.config.withOutput) {\r\n            let $thPCode = jQuery('<div class=\"jo_tabheading jo_resultTabheading\" data-target=\"jo_resultTab\" style=\"line-height: 24px\">Ausgabe</div>');\r\n            $tabheadings.append($thPCode);\r\n        }\r\n\r\n        // let $thRuntimeError = jQuery('<div class=\"jo_tabheading jo_runtimeerrorsTabheading\" data-target=\"jo_runtimeerrorsTab\" style=\"line-height: 24px\">DB-Fehler</div>');\r\n        // $tabheadings.append($thRuntimeError);\r\n\r\n        let $thHistory = jQuery('<div class=\"jo_tabheading jo_historyTabheading\" data-target=\"jo_historyTab\" style=\"line-height: 24px\">History</div>');\r\n        $tabheadings.append($thHistory);\r\n\r\n        let $thRightSide = jQuery('<div class=\"joe_tabheading-right jo_noHeading joe_paginationHeading\"><div class=\"jo_pagination\"></div></div>');\r\n        $tabheadings.append($thRightSide);\r\n\r\n        $bottomDiv.append($tabheadings);\r\n\r\n        let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n\r\n        if (this.config.withErrorList) {\r\n            let $tabError = jQuery('<div class=\"jo_active jo_scrollable jo_errorsTab\"></div>');\r\n            $tabs.append($tabError);\r\n        }\r\n\r\n        if (this.config.withOutput) {\r\n            let $tabPCode = jQuery(`<div class=\"jo_editorFontSize jo_resultTab\">\r\n            <div class=\"jo_result-inner\">\r\n                <div class=\"jo_result-header\"></div>\r\n                <div class=\"jo_scrollable jo_result-body\"></div>\r\n            </div>\r\n            </div>\r\n    `);\r\n            $tabs.append($tabPCode);\r\n        }\r\n\r\n        // let $tabRtErrors = jQuery('<div class=\"jo_scrollable jo_runtimeerrorsTab\"></div>');\r\n        // $tabs.append($tabRtErrors);\r\n\r\n        let $tabHistory = jQuery('<div class=\"jo_scrollable jo_historyTab\"></div>');\r\n        $tabs.append($tabHistory);\r\n\r\n\r\n        $bottomDiv.append($tabs);\r\n\r\n    }\r\n\r\n    makeRightDiv(): JQuery<HTMLElement> {\r\n\r\n        let $rightDiv = jQuery('<div class=\"joe_rightDiv\"></div>');\r\n        this.$rightDivInner = jQuery('<div class=\"joe_rightDivInner\"></div>');\r\n        $rightDiv.append(this.$rightDivInner);\r\n\r\n\r\n        let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n        $tabheadings.css('position', 'relative');\r\n        let $thRun = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_db_tree\" style=\"line-height: 24px\">DB (Baum)</div>');\r\n        // let $thVariables = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_db_list\" style=\"line-height: 24px\">DB (Liste)</div>');\r\n        $tabheadings.append($thRun, //$thVariables\r\n        );\r\n        this.$rightDivInner.append($tabheadings);\r\n\r\n        let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n        // let $vd = jQuery('<div class=\"jo_tab jo_scrollable jo_editorFontSize jo_db_list\">DB-Liste</div>');\r\n\r\n        this.$dbTreeDiv = jQuery(`<div class=\"jo_tab jo_scrollable jo_editorFontSize jo_active jo_db_tree\">DB-Baum</div>`);\r\n\r\n        $tabs.append(this.$dbTreeDiv //, $vd\r\n        );\r\n        this.$rightDivInner.append($tabs);\r\n\r\n        makeTabs($rightDiv);\r\n\r\n        return $rightDiv;\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Formatter } from \"../main/gui/Formatter.js\";\r\nimport { ThemeManager } from \"../main/gui/ThemeManager.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\n\r\n// declare const require: any;\r\n\r\nexport type ScriptType = \"sql\" | \"hint\";\r\n\r\nexport type JOScript = {\r\n    type: ScriptType;\r\n    title: string;\r\n    text: string;\r\n}\r\n\r\nexport class EmbeddedStarter {\r\n\r\n\r\n    startupComplete = 2;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    mainEmbeddedList: MainEmbedded[] = [];\r\n\r\n    initGUI() {\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.themeManager = new ThemeManager();\r\n    }\r\n\r\n    initEditor() {\r\n        new Formatter().init();\r\n        this.checkStartupComplete();\r\n    }\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    start() {\r\n\r\n        this.initJavaOnlineDivs();\r\n\r\n    }\r\n\r\n    initJavaOnlineDivs() {\r\n        \r\n        jQuery('.sql-online').each((index: number, element: HTMLElement) => {\r\n            let $div = jQuery(element);\r\n            let scriptList: JOScript[] = [];\r\n            $div.find('script').each((index: number, element: HTMLElement) => {\r\n                let $script = jQuery(element);\r\n                let type: ScriptType = \"sql\";\r\n                if($script.data('type') != null) type = <ScriptType>($script.data('type'));\r\n                let script: JOScript = {\r\n                    type: type,\r\n                    title: $script.attr('title'),\r\n                    text: $script.text().trim()\r\n                };\r\n                scriptList.push(script);\r\n            });\r\n\r\n            this.initDiv($div, scriptList);\r\n\r\n        });\r\n\r\n    }\r\n\r\n    initDiv($div: JQuery<HTMLElement>, scriptList: JOScript[]) {\r\n\r\n        let me: MainEmbedded = new MainEmbedded($div, scriptList);\r\n\r\n    }\r\n\r\n}\r\n\r\njQuery(function () {\r\n\r\n    let embeddedStarter = new EmbeddedStarter();\r\n\r\n    let prefix = \"\";\r\n    let editorPath = \"lib/monaco-editor/dev/vs\"\r\n    //@ts-ignore\r\n    if(window.javaOnlineDir != null){\r\n        //@ts-ignore\r\n        prefix = window.javaOnlineDir;\r\n    }\r\n\r\n    //@ts-ignore\r\n    if(window.monacoEditorPath != null){\r\n        //@ts-ignore\r\n        editorPath = window.monacoEditorPath;\r\n    }\r\n\r\n    //@ts-ignore\r\n    window.require.config({ paths: { 'vs': prefix + editorPath } });\r\n    //@ts-ignore\r\n    window.require.config({\r\n        'vs/nls': {\r\n            availableLanguages: {\r\n                '*': 'de'\r\n            }\r\n        },\r\n        ignoreDuplicateModules: [\"vs/editor/editor.main\"]\r\n    });\r\n    //@ts-ignore\r\n    window.require(['vs/editor/editor.main'], function () {\r\n\r\n        embeddedStarter.initEditor();\r\n        embeddedStarter.initGUI();\r\n\r\n    });\r\n\r\n});\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\n__webpack_require__(248);\n__webpack_require__(511);\n__webpack_require__(581);\n__webpack_require__(912);\n__webpack_require__(373);\n__webpack_require__(576);\n__webpack_require__(522);\n__webpack_require__(172);\nvar __webpack_exports__ = __webpack_require__(554);\n"],"names":["runtime","exports","undefined","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","GenStateSuspendedStart","GenStateExecuting","GenStateCompleted","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","globalThis","Function","TokenType","LexerState","TokenTypeReadable","identifier","integerConstant","floatingPointConstant","booleanConstant","stringConstant","charConstant","true","false","keywordRename","keywordDistinct","keywordTo","keywordAlter","keywordCommit","keywordAdd","keywordDelete","keywordSelect","keywordInsert","keywordInto","keywordValues","keywordUpdate","keywordSet","keywordNo","keywordUse","keywordCreate","keywordReferences","keywordPrimary","keywordForeign","keywordTable","keywordTables","keywordColumn","keywordDrop","keywordUnique","keywordKey","keywordIndex","keywordConstraint","keywordModify","keywordCascade","keywordRestrict","keywordAction","keywordAutoincrement","keywordFrom","keywordWhere","keywordGroup","keywordBy","keywordHaving","keywordOrder","keywordAscending","keywordDescending","keywordNulls","keywordFirst","keywordLast","keywordIs","keywordNull","keywordDatabase","keywordAnd","keywordOr","keywordNot","keywordJoin","keywordNatural","keywordLeft","keywordCross","keywordInner","keywordOuter","keywordOn","keywordAs","keywordLimit","keywordOffset","keywordIn","keywordNotIn","keywordLike","keywordCollate","keywordDefault","keywordComment","keywordEngine","keywordCharset","keywordCharacter","keywordStart","keywordTransaction","keywordIf","keywordExists","keywordLock","keywordUnlock","keywordWrite","keywordRead","leftBracket","rightBracket","leftSquareBracket","rightSquareBracket","leftCurlyBracket","rightCurlyBracket","leftRightSquareBracket","dot","minus","modulo","plus","multiplication","division","singleQuote","doubleQuote","identifierQuote","lower","greater","equal","lowerOrEqual","greaterOrEqual","concatenation","semicolon","colon","comma","backslash","at","hash","pipe","space","tab","newline","identifierChar","comment","endofSourcecode","specialCharList","notEqual","linefeed","keywordList","EscapeSequenceList","endChar","Lexer","spaceTokens","correspondingBracket","tokenTypesToMerge","first","second","merged","isNot","isNotNull","isNull","lex","input","replace","tokenList","errorList","bracketError","bracketStack","pos","line","column","nonSpaceLastTokenType","nonSpaceLastToken","tokens","errors","currentChar","nextChar","mainState","bracketOpen","bracketClosed","setBracketError","checkClosingBracket","tt","openBracket","char","specialCharToken","pushToken","lexMultilineComment","isDigit","indexOf","lexEndofLineComment","lexNumber","position","lexStringConstant","lexSpace","lexAnnotation","lexQuotedIdentifier","lexIdentifierOrKeyword","s","pushError","text","t","tripel","newLength","errorLevel","level","a","base","charCode","charCodeAt","posStart","posEnd","substring","lexCharacterConstant","escapeChar","beginChar","isDoubleQuotedIdentifier","lastCharWasNewline","commentStart","sign","firstChar","radix","exponent","hasExponential","posExponentStart","exponentString","Number","parseInt","parseFloat","Math","pow","isSpace","toLowerCase","Formatter","autoFormatTriggerCharacters","init","monaco","languages","registerDocumentFormattingEditProvider","registerOnTypeFormattingEditProvider","provideOnTypeFormattingEdits","model","ch","options","token","edits","format","deleteOverlappingRanges","e","e1","range","endLineNumber","startLineNumber","endColumn","startColumn","splice","delta","substr","provideDocumentFormattingEdits","getValue","editor","EndOfLinePreference","LF","tokenlist","lastNonSpaceToken","indentLevel","curlyBracesOpenAtLines","indentLevelAtSwitchStatements","switchHappend","lastTokenWasNewLine","roundBracketsOpen","replaceBetween","token1","insertSpaces","deleteSpaces","openedAtLine","repeat","nextToken1","nextToken2","lastToken1","lastToken2","isBinaryOperator","lastTokenIsOperator","nextTokenIsOperator","getNextNonSpaceToken","beginNextLine","token2","currentIndentation","il","correctIndentation","nextToken","lowerGeneric","lowerBelongsToGenericExpression","greaterGeneric","greaterBelongsToGenericExpression","tokenBefore","spaces","currentIndex","j","positionFrom","positionTo","numberOfSpaces","ThemeManager","themes","initThemes","switchTheme","theme","internalSwitchTheme","setTheme","monacoTheme","root","document","documentElement","cssColors","style","setProperty","highlightColor","SQLType","SQLBaseType","parameterDescriptions","checkFunction","outputFunction","canCastToList","super","binaryResultTypes","Map","unaryOperators","ownIndex","static","baseTypeMap","get","getBaseTypeName","toString","toLocaleLowerCase","baseTypes","concat","set","addBinaryOperation","tokenType","secondType","resultType","isCommutative","Array","isArray","map","canCastTo","type2","bt2","getBinaryResultType","operator","getUnaryResultType","booleanType","getBinaryResult","value1","value2","max","tens","SQLDerivedType","baseType","parameterValues","parameters","join","returnBaseType","round","textTypes","varcharType","ci","pv","v","charType","textType","tinyTextType","mediumTextType","longTextType","floatTypes","decimalType","vk","trunc","nk","numericType","doubleType","realType","floatType","numberTypes","intType","integerType","tinyIntType","smallIntType","mediumIntType","bigIntType","timeType","dateType","dateTimeType","timestampType","nullType","numericTypes","timeTypes","addBaseTypes","numericBinaryOperators","comparisonOperators","characterTypes","booleanOperations","bt","Parser","lookahead","endToken","beginStatementKeywords","identifierMap","parse","m","completionHints","sqlStatements","addCompletionHint","initializeLookahead","lastToken","parseMain","ct","lastComment","commentBefore","cct","quickFix","assign","skip","expect","invokeSemicolonAngel","expectedValuesArray","isOperatorOrDot","title","editsProvider","uri","resource","edit","message","severity","MarkerSeverity","main","getSemicolonAngel","register","expectedTokens","getEndOfPosition","p","op","operatorPrecedence","isEnd","comesToken","ret","getCurrentPosition","getCurrentPositionPlus","deltaColumns","tpos","deltaInsideToken","tokenPos","getEndOfCurrentToken","mainProgram","mainProgramEnd","afterLastStatement","semicolonAfterLastStatement","oldPos","errorsBeforeStatement","startPosition","st","parseStatement","hasErrors","ast","from","to","acceptedBySQLite","beginStatementTokens","firstBadToken","expectSemicolon","parseSelect","parseInsert","parseCreateTableOrDatabase","parseUpdate","parseDelete","parseDropTable","parseAlterTable","parseSet","parseUse","parseLockUnlock","node","omittedeStatement","endPosition","symbolTable","kind","tableIdentifier","tableIdentifierPosition","addCompletionHintHere","parseRenameTableOrColumn","parseAlterTableAdd","parseDropColumn","newTableName","oldColumnName","oldColumnPosition","newColumnName","unique","parseAddColumn","parseAddPrimaryKey","parseAddIndex","parseModifyColumn","parseAddConstraint","fki","parseForeignKeyDefinition","foreignKeys","referencesTable","referencesColumn","referencesPosition","parseReferences","pos0","pos1","modifyColumnInfo","parseColumnDefinition","primaryKeys","index","index_name","indices","columnDefBegin","columnDef","ifExists","whereNode","whereNodeBegin","whereNodeEnd","parseTerm","columnIdentifiers","columnIdentifierPositions","valuePosBegin","valuePosEnd","parseCreateDatabase","parseCreateTable","ifNotExists","pos2","columnList","combinedPrimaryKeyColumns","foreignKeyInfoList","uniqueConstraints","primaryKeyAlreadyDefined","parsePrimaryKeyTerm","parseUniqueTerm","columnNode","isPrimary","isAutoIncrement","columns","c","uniqueConstraint","notNull","parseType","hintColumns","hintTables","hints","additionalColumns","praefix","suffix","datatypes","mappedIdentifier","getBaseType","alreadySeenKeywords","foreignKeyInfo","collate","defaultValue","fromConstantType","rightBracketPosition","valuesPosition","columnsPosition","table","alias","parseValueLists","selectNode","select","insideListTokens","outerFirst","leftBracketPosition","lv","constantType","constant","constantNode","parseConstant","columnListStart","fromNode","parentStatement","parseColumnList","columnListKeywordArray","findIndex","allColumns","fromListKeywordArray","fromStartPosition","dontHint","parseTableOrSubQuery","hintEndPosition","fromEndPosition","unshift","whereKeywordArray","whereStart","groupKeywordArray","groupStart","groupByNode","parseGroupBy","orderStart","orderByNode","parseOrderBy","limitNode","parseLimit","numberOfRows","ln","offset","gbn","tokenTypesAfterGroupBy","term","having","obnList","obn","leftSide","parseAtomicTableOrSubQuery","parseJoinOperator","rightSide","firstOperand","secondOperand","on","selectStatement","subquery","query","tokenTypesAfterListEnd","allowAliases","distinct","columnTerm","parseTermBinary","precedence","left","parseUnary","operators","right","binaryOp","parseBracket","unaryOp","operand","tt1","isStringConstant","parseDotOrArrayChains","identifier1","position1","parseMethodCallParameters","callMethod","operands","nodes","commaPositions","secondIdentifier","identifierLeft","identifierRight","parseList","list","elements","constantTypes","tokenBeforeBracket","listNode","termInsideBrackets","parameter","Column","isPrimaryKey","isNullable","cs","typeMatch1","completeTypeSQL","match","baseTypeIdentifier","commaSeparatedParameters","split","trim","fromColumnStructure","Table","ts","size","tsList","tables","fromTableStructure","columnStructureToColumnMap","referencedCs","references","referencedColumn","SymbolTable","parentSymbolTable","childSymbolTables","symbols","symbolList","parent","extractDatabaseStructure","databaseStructure","fromTableStructureList","storeTableSymbols","storeSymbol","posOfDefinition","referencedOnPositions","symbol","findTableAtPosition","containsPosition","shortestSymbolTableContainingPosition","shortestPosition","st1","findTable","findTables","filter","findColumn","SQLMethodParameter","SQLMethod","isAggregating","returnType","acceptsStarParameter","SQLMethodStore","instance","methods","pushOneParameterMethod","countMethod","getMethods","parameterType","escapeHtml","unsafe","twoDez","z","isDate","inputText","opera1","opera2","lopera1","lopera2","pdate","dd","mm","yy","lyear","isDateTime","dateStr","SymbolResolver","databaseTool","symbolTableStack","start","mainSymbolTable","statement","astNode","resolveSelect","resolveInsert","resolveCreateTable","resolveUpdate","resolveDelete","resolveDropTable","resolveAlterTable","getCurrentSymbolTable","pushNewSymbolTable","resultTable","joinedTables","resolveTableOrSubQuery","resolveTerm","c1","sqlType","whereType","whereSymbolTable","oldColumn","find","ciPos","createTableNode","thisTable","cn","tosNode","tableList","storeTableIntoSymbolTable","tableAlias","resolveNotIn","typeLeft","typeRight","operandType","resultType1","resolveMethodCall","resolveIdentifier","resolveDot","selectTable","tableSymbols","getInstance","found","methodParameter","operatorString","leftType","pType","element","elementType","tableCompletionTo","insertColumn","selectColumn","valueList","destType","CompilerStatus","Compiler","compilerStatus","compiledButNothingToRun","compile","moduleStore","compiling","t0","performance","now","lexer","getModules","file","dirty","clear","lexed","getProgramTextFromMonacoModel","getCurrentlyEditedModule","getBottomDiv","errorManager","showParenthesisWarning","startRegistering","parser","getDatabaseTool","symbolResolver","dt","getCurrentWorkspace","compilerMessage","healSemicolons","readyToRun","Module","oldErrorDecorations","identifierPositions","methodCallPositions","path","uriCounter","uriMap","Uri","scheme","createModel","updateOptions","tabSize","lastSavedVersionId","getAlternativeVersionId","that","onDidChangeContent","versionId","saved","isEmbedded","main1","workspacesOwnerId","user","id","text_before_revision","student_edited_after_revision","networkManager","sendUpdates","bottomDiv","homeworkManager","showHomeWorkRevisionButton","projectExplorer","renderHomeworkButton","fromPosition","toPosition","hintKeywords","fromColumn","fromLine","toColumn","toLine","hintColumnsOfTable","toUpperCase","chList","getSQLSTatementsAtSelection","sel","selStart","selEnd","stmt","compare","b","getSQLStatementAtPosition","lineNumber","getCompletionHint","bestCh","bestRangeLength","rangeLength","f","f1","submitted_date","version","getFileData","workspace","workspace_id","forceUpdate","file_type","findSymbolTableAtPosition","getErrorCount","ec","el","addIdentifierPosition","positionList","getElementAtPosition","positionsOnLine","bestFoundPosition","copy","getSortedAndFilteredErrors","sort","e2","errorLevelCompare","level1","level2","maxUriNumber","ModuleStore","modules","moduleMap","findModuleById","module_id","ms","putModule","findModuleByFile","getFirstModule","mo","isDirty","includeSystemModules","excludedModuleName","removeModuleWithFile","removeModule","getModule","moduleName","ActionManager","$mainElement","actions","keyEntries","buttons","$element","jQuery","event","executeKeyDownEvent","trigger","actionIdentifier","ae","action","registerAction","button","active","attr","isActive","setActive","addClass","removeClass","activeElement","tagName","keyCode","ctrlKey","shiftKey","altKey","actionEntries","actionEntry","stopPropagation","preventDefault","makeEditable","elementWithText","elementToReplace","renameDoneCallback","selectionRange","mousePointer","window","PointerEvent","$input","css","width","height","color","setSelectionRange","end","after","hide","setTimeout","focus","ev","off","remove","show","newValue","openContextMenu","items","x","y","$contextMenu","$openSubMenu","parentMenuItem","mi","caption","link","$item","subMenu","callback","$link","top","append","leftRight","innerWidth","xp","topBottom","innerHeight","yp","makeTabs","tabDiv","headings","not","tabs","target","data","makeDiv","klass","div","jo_mouseDetected","animateToTransparent","cssProperty","startColorRgb","duration","colorPraefix","animate","copyTextToClipboard","navigator","clipboard","writeText","console","textArea","createElement","body","appendChild","execCommand","removeChild","fallbackCopyTextToClipboard","PerformanceCollector","url","startTime","pe","performanceData","count","sumTime","performanceDataCount","lastTimeSent","request","ajax","successCallback","errorCallback","showNetworkBusy","time","$","JSON","stringify","contentType","success","response","registerPerformanceEntry","jqXHR","statusText","status","busy","WDatabase","db","statements","published_to","description","templateDump","based_on_template_id","owner_id","CacheManager","fetchTemplateFromCache","databaseId","cacheAvailable","getCache","cache","databaseIdToCacheIdentifier","arrayBuffer","buffer","Uint8Array","catch","saveTemplateToCache","put","Response","caches","open","NotifierClient","unsentMessages","connect","location","protocol","startsWith","host","connection","WebSocket","onerror","onError","onclose","onClose","onmessage","onMessage","onopen","command","sendIntern","forcedUpdateEvery","counterTillForcedUpdate","disconnect","send","log","TemplateUploader","uploadCurrentDatabase","dump","reason","waitOverlay","export","pako","deflate","uploadIntern","alert","processData","headers","NetworkManager","$updateTimerDiv","ownUpdateFrequencyInSeconds","teacherUpdateFrequencyInSeconds","updateFrequencyInSeconds","secondsTillNextUpdate","errorHappened","initializeTimer","interval","clearInterval","setInterval","$rect","initializeNotifierClient","notifierClient","sendIfNothingIsDirty","writeEditorTextToFile","userDataDirty","sendUpdateUserSettings","wdList","fdList","ws","workspaceList","getWorkspaceData","workspacesWithoutFiles","files","userId","language","currentWorkspaceId","getModifiedWorkspaces","updateWorkspaces","sendCreateWorkspace","wd","is_testuser","random","entity","getDatabaseSettings","workspaceId","setNewSecret","secretKind","secret","setNameAndPublishedTo","databaseName","publishedTo","sendCreateFile","sendDuplicateWorkspace","sendDistributeWorkspace","klasse","student_ids","setWorkspaceActive","database_as_template_id","newTemplateId","class_id","sendDeleteWorkspaceOrFile","settings","current_workspace_id","getNewStatements","version_before","database","newStatements","firstNewStatementIndex","AddDatabaseStatements","statements_before","new_version","fetchDatabase","cacheManager","fromDatabaseData","fetchTemplate","template","inflate","xhrFields","responseType","fetchTemplateList","user_id","templateList","sendUpdatesRequest","sendUpdatesResponse","idToRemoteWorkspaceDataMap","fileIdsSended","workspaces","newWorkspaceNames","remoteWorkspace","createNewWorkspaceFromWorkspaceData","idToRemoteFileDataMap","fd","idToModuleMap","fileId","remoteFileData","fileListPanel","removeElement","currentWorkspace","setValue","remoteFile","createFile","workspaceListPanel","sortElements","withSort","w","createNewWorkspace","sql_history","isFolder","panelElement","externalElement","iconClass","addElement","fileData","identical_to_repository_version","getNewModule","rollback","DatabaseSettingsDialog","$dialog","showMainWindow","saveNameAndPublishedTo","setValues","$copyButton","prop","each","n","checked","secrets","is_admin","is_schooladmin","empty","Workspace","withFiles","currentFileId","currentlyOpenModule","permissions","database_id","renderSettingsButton","$buttonDiv","$htmlFirstLine","$button","addEventListener","restoreFromData","getModuleByMonacoModel","MyCompletionItemProvider","triggerCharacters","keywordCompletionItems","keywordToSnippetMap","setupKeywordCompletionItems","provideCompletionItems","wfc","provideCompletionItemsIntern","sw","getMonacoEditor","_contentWidgets","widget","toggleDetails","isStringLiteral","textUntilPosition","getValueInRange","textAfterPosition","completionHint","completionItems","addKeywordCompletionItems","dotMatch","ibMatch","identifierAndBracketAfterCursor","addIdentifierCompletionItems","addDotCompletionItems","word","getWordUntilPosition","replaceWordRange","insertAfterCursorRange","item","insertText","suggestions","textAfterDot","textBeforeDot","rangeToReplace","label","detail","filterText","insertTextRules","CompletionItemInsertTextRule","KeepWhitespace","CompletionItemKind","Field","tableIdentifiers","columnIdentifier","InsertAsSnippet","Snippet","Class","sortText","columList","withTable","snippet","Keyword","posMin","posMax","watchDog","posOld","arguments","MySignatureHelpProvider","signatureHelpTriggerCharacters","signatureHelpRetriggerCharacters","provideSignatureHelp","compileIfDirty","provideSignatureHelpLater","getModel","methodCallPosition","rightMostPosition","mcp","identifierPosition","getSignatureHelp","parameterIndex","cp","activeParameter","activeSignature","signatures","dispose","MyHoverProvider","provideHover","selection","getSelection","getWordUnderCursor","keywordDescriptions","contents","getValueLengthInRange","isInsideIdentifierOrArrayDescriptor","begin","isInsideOperator","widenDeclaration","isInsideIdentifierChain","MyCodeActionProvider","provideCodeActions","markers","relatedInformation","diagnostics","isPreferred","MyReferenceProvider","provideReferences","usagePositions","referencePositions","upInCurrentModule","up","Helper","targetElement","direction","$helper","bottom","html","close","fadeIn","fadeOut","mainBase","Main","helperHistory","flag","openHelper","Editor","showMinimap","cw","dontPushNextCursorMove","lastTime","elementDecoration","initGUI","extensions","conf","onEnterRules","beforeText","afterText","indentAction","IndentAction","IndentOutdent","appendText","None","removeText","comments","lineComment","blockComment","brackets","autoClosingPairs","surroundingPairs","setLanguageConfiguration","setMonarchTokensProvider","defaultToken","tokenPostfix","ignoreCase","escapes","keywords","builtinFunctions","builtinVariables","pseudoColumns","tokenizer","include","cases","whitespace","numbers","strings","string","complexIdentifiers","quotedIdentifier","scopes","defineVscSQL","defineTheme","inherit","rules","foreground","fontStyle","colors","lightbulb","enabled","lineDecorationsWidth","peekWidgetDefaultFocus","fixedOverflowWidgets","quickSuggestions","quickSuggestionsDelay","fontSize","fontFamily","fontWeight","roundedSelection","selectOnLineNumbers","automaticLayout","scrollBeyondLastLine","occurrencesHighlight","autoIndent","dragAndDrop","formatOnType","formatOnPaste","suggestFontSize","suggestLineHeight","suggest","localityBonus","insertMode","parameterHints","cycle","mouseWheelZoom","minimap","scrollbar","vertical","horizontal","mouseWheelListener","changeEditorFontSize","deltaY","onDidChangeConfiguration","hasChanged","EditorOption","fontInfo","registerLightbulbOnClickFunctions","onDidChangeCursorPosition","onDidChangeModel","removeEventListener","passive","setActiveAfterExternalModelSet","registerHoverProvider","registerCompletionItemProvider","registerCodeActionProvider","registerReferenceProvider","registerSignatureHelpProvider","onMouseDown","MouseTargetType","GUTTER_GLYPH_MARGIN","GUTTER_LINE_NUMBERS","isAfterLines","onMarginMouseDown","remeasureFonts","addActions","onDidType","insertEndOfComment","newLine","newColumn","Range","executeEdits","setPosition","getPosition","prevLine","getLineContent","trimRight","endsWith","getLineCount","spacesAtBeginningOfLine","trimLeft","setFontSize","fontSizePx","Date","getTime","editorfs","getOptions","viewModeController","saveFontSize","factor","dynamic","newEditorFs","addAction","keybindings","KeyMod","CtrlCmd","KeyCode","KEY_K","precondition","keybindingContext","contextMenuGroupId","contextMenuOrder","run","ed","getAction","Enter","getActionManager","deltaDecorations","decorations","className","isWholeLine","overviewRuler","darkColor","OverviewRulerLane","Left","executeActionActive","sqlStatement","classname","MinimapPosition","Inline","zIndex","showHelper","WorkerSim","initsql","initSqlJs","locateFile","scriptDirectory","postMessageToClient","postMessage","SQL1","SQL","createDb","worker","terminate","buff","config","ready","results","exec","row","finished","DatabaseTool","databaseDirectoryEntries","queryId","querySuccessCallbacksMap","queryErrorCallbackMap","initializeWorker","queries","callbackAfterInitializing","callbackAfterRetrievingStructure","getWaitOverlay","javaOnlineDir","jo_doc","Worker","querySuccessCallback","queryErrorCallback","delete","queryCount","execQuery","setProgress","shift","executeQuery","retrieveDatabaseStructure","sql","params","getDirectoryEntries","getJSON","entries","sql1","result1","parseDatabaseStructure","tableNameToStructureMap","tableName","tableSQL","tableStructure","completeSQL","columnArray","foreignKeyList","columnArray1","dflt_value","columnStructure","typeLengths","fkInfo","referencesRawData","sqliteMagicBytes","StatementCleaner","MaxRowsPerInsert","clean","sqlCleaned","cleanCreateTableStatement","cleanInsertStatement","statementHeader","escapeIdentifier","lines","vline","cleanValue","cleanColumnDef","cleanForeignKeyInfo","pkc","escapeIdentifiers","uk","fkiString","onDelete","onUpdate","MySqlImporter","loadFromUrl","unzipURL","fetch","importFromText","loadFromFile","unzipFile","reader","FileReader","onload","readAsText","zip","ZipReader","HttpReader","unzipIntern","BlobReader","getEntries","filename","getData","TextWriter","onprogress","lexOutput","createTableNodes","insertNodes","tableModifyingNodes","tmn","findCreateTableNode","autoIncrementColumn","pcn","findCreateTableColumnNode","mci","mcn","fk","indexIdentifier","makeDatabase","tableNode","statementCleaner","dbTool","binDump","DatabaseImportExport","ld","ab","getDumpType","readAsArrayBuffer","saveToFile","prompt","isBlob","blob","Blob","msSaveOrOpenBlob","createEvent","download","href","URL","createObjectURL","dataset","downloadurl","initEvent","dispatchEvent","downloadFile","NewDatabaseDialog","$templatelist","templatelist","tle","$tle","ownerName","$templateName","$dropZone","evt","originalEvent","dataTransfer","dropEffect","importFile","$dumpFileInput","createMode","hasClass","workspaceData","createWorkspace","$template","template_database_id","code","tIndex","otherDatabaseId","template_id","accordionElement","importer","isDatabase","dbUncompressed","MainMenu","currentSubmenu","openSubmenusOnMousemove","mainMenu","initMenu","menu","initMenuitemCallbacks","opensubmenu","AccordionPanel","accordion","flexWeight","newButtonClass","buttonNewTitle","defaultIconClass","withDeleteButton","withFolders","enableDrag","acceptDropKinds","dontSortElements","addPanel","$newFolderAction","addFolder","newElement","newFolderCallback","scrollIntoView","$collapseAllAction","collapseAll","slideUp","$captionElement","$listElement","setFixed","fixed","grow","enableNewButton","$buttonNew","getCurrentlySelectedPath","pathArray","selectedElement","getSelectedElement","compareWithPath","name1","path1","isFolder1","name2","path2","isFolder2","cmp","localeCompare","getElementIndex","insertElement","insertIndex","$elements","prepend","elementAtIndex","before","renderElement","renameElement","renderOuterHtmlElements","$accordionDiv","newFilesElementCallback","$htmlSecondLine","insertAfter","selectCallback","$listOuter","$ce","$li","targetGrow","parts","toggleClass","currentlyDraggedElementKind","element1","currentlyDraggedElement","moveElement","expanded","aName","sortName","bName","setTextAfterFilename","cssClass","$div","expandedCollapsed","pathHtml","addElementActionCallback","$elementAction","$filedragpart","effectAllowed","dropElementCallback","pathIsCollapsed","slideDown","pressTimer","contextmenuHandler","contextMenuItems","renameCallback","newDatabaseElementCallback","contextMenuProvider","cmi","pageX","pageY","clearTimeout","getChildElements","deleteCallback","elementToMove","destinationFolder","destinationPath","movedElements","sourcePath","oldPathLength","moveCallback","folder","pointPos","newText","invokeCallback","ae1","findElement","pathString","elPath","getPathString","ps","setElementClass","setCaption","Accordion","$html","panel","DistributeToStudentsDialog","classes","studentCount","$studentList","student","students","$studentLine","$studentClass","$studentName","rufname","familienname","$dialogMain","distributeWorkspace","ProjectExplorer","$projectexplorerDiv","programPointerModule","programPointerDecoration","lastOpenModule","initFilelistPanel","initWorkspacelistPanel","successfulNetworkCommunicationCallback","setModuleActive","newName","callbackIfSuccessful","is_teacher","$homeworkButtonDiv","$newWorkspaceAction","removeWorkspace","databaseExplorer","getResultsetPresenter","setModel","dest","droppedElement","dropEffekt","$homeAction","onHomeButtonClicked","hideHomeworkTab","workspaceAccordionElement","cmiList","teacherExplorer","classPanel","restoreOwnWorkspaces","renderFiles","moduleList","renderWorkspaces","renderErrorCount","errorCountMap","errorCount","errorCountS","callbackAfterDatabaseFetched","initializeDatabaseTool","currentWorkspace_id","nonSystemModules","notifier","refreshAfterRetrievingDBStructure","getHistoryViewer","clearAndShowStatements","cem","hideRevision","editorState","saveViewState","readOnly","hideHomeworkRevisionButton","restoreViewState","setCurrentlyEditedModule","showProgramPointer","programPointerPosition","revealRangeInCenterIfOutsideViewport","Center","beforeContentClassName","showProgramPointerPosition","hideProgramPointerPosition","setExplorerColor","RightDiv","$rightDiv","isWholePage","$tabs","$headings","rightdiv_width","$wholeWindow","Sliders","initSliders","md","clientX","dx","moveLeftPanel","clientY","dy","moveBottomDiv","moveRightDiv","sliderknobLeft","stopImmediatePropagation","sliderknobRight","$editor","mewidth","layout","diffEditor","$bottomDiv","meheight","$leftPanel","TeacherExplorer","classData","removePanels","studentPanel","initStudentPanel","initClassPanel","renderClasses","ws_userId","ownWorkspaces","currentOwnWorkspace","restoreWorkspaces","showHomeworkTab","attachToWorkspaces","ea","renderStudents","userDataList","ud","classDataList","cd","Dialog","heading","placeholder","$buttonRow","waitMessage","$message","visible","visibility","UserMenu","$userSettingsButton","PasswordChanger","dialog","$oldPassword","$newPassword1","$newPassword2","$errorDiv","waitDiv","oldPassword","newPassword","Login","$loginSpinner","loginHappened","username","password","viewModes","classDiagram","waitForGUICallback","initTeacherExplorer","classdata","initViewMode","startupComplete","errorMessage","resultsetPresenter","ViewModeController","$buttonsContainer","$buttonMap","highContrast","editorHasFullWidth","$buttonEditorFullscreen","$buttonPresentationMode","$buttonMonitorMode","am","actionManager","toggleEditorFullwidth","setMode","mode","saveSettings","otherMode","viewMode","viewModeChosen","themeManager","getChosenViewMode","toggleHighContrast","monitor","presentation","SemicolonAngel","semicolonPositions","isThereAgain","oldEvidence","firstSeenMs","currentlyEditedModule","cursorLine","isCurrentModule","editOperations","forceMoveMarkers","abs","setSelection","DatabaseExplorer","$mainDiv","collapsedTables","refresh","dbstructure","$table","renderTable","isCollapsed","showTable","$columns","image","referencesHtml","autoincrement","$column","$treeSwitch","$columnList","parents","ProgramControlButtons","$buttonStart","$buttonRollback","executeSelectedStatements","ResultsetPresenter","paginationSize","writeQueryListeners","showResultsBusy","showResultPending","$paginationDiv","$arrowLeft","$infoDiv","$arrowRight","paginationFrom","floor","showResults","activateButtons","paginationAll","min","addWriteQueryListener","listener","fetchSelectedStatements","hasDDLStatements","some","isDDLStatement","hasWriteStatements","isWriteStatement","executeDDLWriteStatementsEmbedded","executeDDLWriteStatementsInOnlineIDE","executeStatements","sucessfullyExecutedModifyingStatements","getDatabaseExplorer","notify","new_statements","firstStatementIndex","executeNewStatements","appendStatements","modifyingStatements","resetDatabase","executeStatementsString","fromIndex","successfullyExecutedModifyingStatements","showErrors","callback1","laterSelectExists","isSelectStatement","presentResultsIntern","showErrorDecorations","minimapColors","linesDecorationsClassName","borderLeftClass","errorlevel","minimapColor","Warning","Info","setModelMarkers","$runtimeErrorsTab","$runtimeErrorsTabHeading","$errorList","$errorLine","revealRangeInCenter","$sqlDiv","colorize","$messageDiv","$resultTabheading","$resultHeader","headerDiv","$bodyDiv","waitFunction","$header","rows","$row","cell","monacoEditor","StatementDelimiter","Notifier","isOpen","isPolling","counter","isLongPolling","longPollCounter","databaseVersion","onOpen","startLongPolling","rollbackLocal","callbackIfTooFewStatements","callbackIfDone","doRefreshDatabaseExplorer","startPolling","poll","getNewStatementsHttp","rollbackToVersion","longPoll","resp","timeout","WaitOverlay","$waitDiv","fadeOutPending","$bitteWartenText","$bitteWartenProgress","HistoryViewer","$historyPanel","panelEntries","panelEntry","makePanelEntry","makeLastButtonActive","$rollbackButton","$index","$text","$copybutton","$rollbackbutton","rollbackEmbedded","rollbackLocalNeeded","writeQueryManager","initialTemplateDump","initialStatements","writtenStatements","historyViewer","getRightDiv","rightDiv","getCompiler","compiler","semicolonAngel","matchMedia","matches","login","BottomDiv","checkStartupComplete","initEditor","startTimer","sendBeacon","timerHandle","ErrorManager","oldDecorations","lightBulbOnClickFunctionList","$bracket_warning","children","lightBulbClass","class","onClickFunction","r","processError","$file","$error","locf","$errorDivs","$lineColumn","category","showError","HomeworkManager","showRevisionActive","$homeworkTab","$homeworkTabLeft","$homeworkTabRight","$showRevisionButton","showRevision","originalModel","modifiedModel","createDiffEditor","getElementById","enableSplitViewResizing","originalEditable","renderSideBySide","original","modified","daysWithModules","dateString","date","stringToDate","dateWithoutTime","getDate","getMonth","getFullYear","dateToStringWithoutTime","dwm","day","m1","m2","moduleWithWorkspace","EmbeddedSlider","$container","firstLast","horVert","$otherDiv","initSlider","$sliderDiv","cursor","slide","setColor","otherHeight","newHeight","newOtherHeight","otherWidth","newWidth","newOtherWidth","EmbeddedFileExplorer","$fileListDiv","addModule","$filesDiv","$addButton","currentFile","selectFile","removeAllFiles","removeFile","addHint","script","$fileDiv","hint","setFirstFileActive","$hintDiv","$monacoDiv","syntaxMap","md1","markdownit","highlight","str","lang","renderer","code_inline","idx","env","content","render","md2","codeMap","uncoloredtext","markFile","EmbeddedIndexedDB","databaseIdentifier","indexedDB","onsuccess","onupgradeneeded","objectStoreScripts","createObjectStore","keyPath","autoIncrement","transaction","oncomplete","writeScript","scriptId","objectStore","removeScript","getScript","writeDatabase","databaseID","removeDatabase","getDatabase","WriteQueryManager","statementsToExecute","statementsToWrite","atLeastOneExecuted","indexedDBReady","writeStatementsIfNecessary","forceWriteStatements","$databaseResetButton","statementsSql","databaseReady","DatabaseFetcher","load","urlWithoutProtocol","urlLowerCase","loadSqLiteDump","loadMySql","saveDatabaseToCache","cutSqlToStatements","MainEmbedded","withFileList","fileExplorer","scriptList","programIsExecutable","compileRunsAfterCodeReset","readConfig","databaseURL","$dbTreeDiv","loadableDb","initDatabase","initScripts","readScripts","initWorkspace","$filesListDiv","configJson","withOutput","withErrorList","withBottomPanel","lineNumbersMinChars","scriptListJSon","saveScripts","countDown","$codeResetButton","oneNotSaved","deleteScriptsInDB","considerShowingCodeResetButton","$centerDiv","makeWaitDiv","$codeResetModalWindow","makeCodeResetModalWindow","$databaseResetModalWindow","makeDatabaseResetModalWindow","makeRightDiv","$editorDiv","$bracketErrorDiv","makeBracketErrorDiv","$controlsDiv","$bottomDivInner","makeBottomDiv","makeFilesDiv","$rightDivInner","$rightSideContainer","$infoButton","$buttonOpen","$openInputButton","loadDatabaseFromFile","$buttonSave","saveDatabaseToFile","dbImportExport","$parent","$window","$filesHeader","$tabheadings","$thLeftSide","$thErrors","$thPCode","$thHistory","$thRightSide","$tabError","$tabPCode","$tabHistory","$thRun","EmbeddedStarter","mainEmbeddedList","initJavaOnlineDivs","$script","initDiv","embeddedStarter","prefix","editorPath","monacoEditorPath","require","paths","availableLanguages","ignoreDuplicateModules","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}