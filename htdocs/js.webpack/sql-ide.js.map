{"version":3,"file":"sql-ide.js","mappings":"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GACL,IAAI4H,EAAYhR,KAAKqK,KAAK4J,iBAG1B7M,EAAK,WAF0B,CAAEkJ,YAAaU,EAAUtI,GAAIF,QAASwI,EAAUa,SAASrJ,UAE7DV,IACnBA,EAASD,QAETuB,EAAS,KAAM4H,EAAUa,SAASrJ,QAAUV,EAASoK,cAErDlF,MAAMlF,EAASE,SACfoB,EAAStB,EAASE,SAAS,G,IAE/BA,IACAgF,MAAMhF,GACNoB,EAASpB,GAAS,EAAM,GAGhC,ECxjBJ,IAAYgO,GAAZ,SAAYA,GACR,+BAEA,yCACA,qDACA,yCACA,uCACA,mCACA,mBACA,qBAEA,qCACA,yCACA,8BACA,oCACA,sCACA,gCACA,sCACA,sCACA,sCACA,kCACA,sCACA,sCACA,gCACA,8BACA,gCACA,sCACA,8CACA,wCACA,wCACA,oCACA,sCACA,sCACA,kCACA,sCACA,gCACA,oCACA,8CACA,sCACA,wCACA,0CACA,sCACA,oDACA,kCACA,oCACA,oCACA,8BACA,sCACA,oCACA,4CACA,8CACA,oCACA,oCACA,kCACA,8BACA,kCACA,0CAEA,8BACA,gCACA,gCAEA,kCACA,wCACA,kCACA,oCACA,oCACA,oCACA,8BACA,8BACA,oCACA,sCACA,8BACA,oCACA,kCACA,wCACA,wCACA,wCACA,sCACA,wCACA,4CAEA,oCACA,gDACA,8BACA,sCAEA,kCACA,sCACA,oCACA,kCAGA,kCACA,oCACA,8CACA,gDACA,4CACA,8CACA,wDAGA,kBACA,wBACA,sBAAO,oBAAM,wCAAgB,4BAC7B,kCAAa,kCACb,0CACA,uBAAO,2BAAS,qCAAc,yCAC9B,uCACA,uBACA,6BAGA,+BAEA,uBAGA,uBAGA,+BAGA,qBAGA,iBAGA,qBAGA,uBAEA,mBAGA,2BAGA,6BAGA,yCAGA,2BAEA,2CAKA,qCACA,iCACA,2BACA,6BACA,uBACA,6BACA,qBACA,yBACA,+BACA,iCACA,yBACA,uBACA,+BACA,8CACH,CAxKD,CAAYA,IAAAA,EAAS,KA0Kd,ICxKFC,EDwKMC,EAA4C,CACnD,CAACF,EAAUG,YAAa,iBAExB,CAACH,EAAUI,iBA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","sources":["webpack:///../node_modules/regenerator-runtime/runtime.js","webpack:///../src/client/communication/AjaxHelper.ts","webpack:///../src/client/workspace/WDatabase.ts","webpack:///../src/client/communication/CacheManager.ts","webpack:///../src/client/communication/NotifierClient.ts","webpack:///../src/client/tools/TemplateUploader.ts","webpack:///../src/client/communication/NetworkManager.ts","webpack:///../src/client/compiler/lexer/Token.ts","webpack:///../src/client/compiler/lexer/Lexer.ts","webpack:///../src/client/compiler/parser/SQLTypes.ts","webpack:///../src/client/compiler/parser/Parser.ts","webpack:///../src/client/compiler/parser/SQLTable.ts","webpack:///../src/client/compiler/parser/SymbolTable.ts","webpack:///../src/client/compiler/parser/SQLMethods.ts","webpack:///../src/client/tools/StringTools.ts","webpack:///../src/client/compiler/parser/SymbolResolver.ts","webpack:///../src/client/compiler/Compiler.ts","webpack:///../src/client/compiler/parser/Module.ts","webpack:///../src/client/tools/HtmlTools.ts","webpack:///../src/client/main/gui/DatabaseSettingsDialog.ts","webpack:///../src/client/workspace/Workspace.ts","webpack:///../src/client/main/gui/ActionManager.ts","webpack:///../src/client/main/gui/ErrorManager.ts","webpack:///../src/client/main/gui/HomeworkManager.ts","webpack:///../src/client/main/gui/BottomDiv.ts","webpack:///../src/client/main/gui/MyCompletionItemProvider.ts","webpack:///../src/client/main/gui/MySignatureHelpProvider.ts","webpack:///../src/client/main/gui/MyHoverProvider.ts","webpack:///../src/client/main/gui/MyCodeActionProvider.ts","webpack:///../src/client/main/gui/MyReferenceProvider.ts","webpack:///../src/client/main/gui/Helper.ts","webpack:///../src/client/main/gui/Editor.ts","webpack:///../src/client/main/gui/VscSql.ts","webpack:///../src/client/main/gui/Formatter.ts","webpack:///../src/client/sqljs-worker/sqljsWorkerSim.ts","webpack:///../src/client/tools/DatabaseTools.ts","webpack:///../src/client/compiler/parser/StatementCleaner.ts","webpack:///../src/client/tools/MySqlImporter.ts","webpack:///../src/client/tools/DatabaseImportExport.ts","webpack:///../src/client/main/gui/NewDatabaseDialog.ts","webpack:///../src/client/main/gui/MainMenu.ts","webpack:///../src/client/main/gui/Accordion.ts","webpack:///../src/client/main/gui/DistributeToStudentsDialog.ts","webpack:///../src/client/main/gui/ProjectExplorer.ts","webpack:///../src/client/main/gui/RightDiv.ts","webpack:///../src/client/main/gui/Sliders.ts","webpack:///../src/client/main/gui/TeacherExplorer.ts","webpack:///../src/client/main/gui/ThemeManager.ts","webpack:///../src/client/main/gui/Dialog.ts","webpack:///../src/client/main/gui/UserMenu.ts","webpack:///../src/client/main/Login.ts","webpack:///../src/client/main/gui/ViewModeController.ts","webpack:///../src/client/compiler/parser/SemicolonAngel.ts","webpack:///../src/client/main/gui/DatabaseExplorer.ts","webpack:///../src/client/main/gui/ProgramControlButtons.ts","webpack:///../src/client/main/gui/ResultsetPresenter.ts","webpack:///../src/client/communication/Notifier.ts","webpack:///../src/client/main/gui/WaitOverlay.ts","webpack:///../src/client/main/gui/HistoryViewer.ts","webpack:///../src/client/main/Main.ts","webpack:///../src/client/main/IDEStarter.ts","webpack:///webpack/bootstrap","webpack:///webpack/startup"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; };\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) });\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: true });\n  defineProperty(\n    GeneratorFunctionPrototype,\n    \"constructor\",\n    { value: GeneratorFunction, configurable: true }\n  );\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    defineProperty(this, \"_invoke\", { value: enqueue });\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method;\n    var method = delegate.iterator[methodName];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method, or a missing .next mehtod, always terminate the\n      // yield* loop.\n      context.delegate = null;\n\n      // Note: [\"return\"] must be used for ES3 parsing compatibility.\n      if (methodName === \"throw\" && delegate.iterator[\"return\"]) {\n        // If the delegate iterator has a return method, give it a\n        // chance to clean up.\n        context.method = \"return\";\n        context.arg = undefined;\n        maybeInvokeDelegate(delegate, context);\n\n        if (context.method === \"throw\") {\n          // If maybeInvokeDelegate(context) changed context.method from\n          // \"return\" to \"throw\", let that override the TypeError below.\n          return ContinueSentinel;\n        }\n      }\n      if (methodName !== \"return\") {\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a '\" + methodName + \"' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(val) {\n    var object = Object(val);\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","import { LoginRequest, PerformanceData } from \"./Data.js\";\r\n\r\n// export var credentials: { username: string, password: string } = { username: null, password: null };\r\n\r\nexport class PerformanceCollector {\r\n    static performanceData: PerformanceData[] = [];\r\n    static performanceDataCount: number = 0;\r\n    static lastTimeSent: number = performance.now();\r\n\r\n    static registerPerformanceEntry(url: string, startTime: number) {\r\n        let pe: PerformanceData = PerformanceCollector.performanceData.find(pe => pe.url == url);\r\n        if (pe == null) {\r\n            pe = { count: 0, sumTime: 0, url: url };\r\n            PerformanceCollector.performanceData.push(pe);\r\n        }\r\n        pe.count++;\r\n        let dt = Math.round(performance.now() - startTime);\r\n        pe.sumTime += dt;\r\n        PerformanceCollector.performanceDataCount++;\r\n        // console.log(\"Performance entry for path \" + pe.url + \": \" + dt + \" ms, aggregated: \" + pe.sumTime + \" for \" + pe.count + \" requests.\");\r\n    }\r\n\r\n    static sendDataToServer() {\r\n        if (performance.now() - PerformanceCollector.lastTimeSent > 3 * 60 * 1000) {\r\n            let request = {\r\n                data: PerformanceCollector.performanceData\r\n            }\r\n\r\n            PerformanceCollector.performanceData = [];\r\n            PerformanceCollector.performanceDataCount = 0;\r\n            PerformanceCollector.lastTimeSent = performance.now();\r\n\r\n            ajax(\"collectPerformanceData\", request, () => { })\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport function ajax(url: string, request: any, successCallback: (response: any) => void,\r\n\r\n    errorCallback?: (message: string) => void) {\r\n\r\n    showNetworkBusy(true);\r\n    let time = performance.now();\r\n\r\n    $.ajax({\r\n        type: 'POST',\r\n        async: true,\r\n        data: JSON.stringify(request),\r\n        contentType: 'application/json',\r\n        url: \"servlet/\" + url,\r\n        success: function (response: any) {\r\n\r\n            PerformanceCollector.registerPerformanceEntry(url, time);\r\n\r\n            showNetworkBusy(false);\r\n            if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n                let error = \"Fehler bei der Bearbeitung der Anfrage\"\r\n                if (response.message != null) error = response.message;\r\n\r\n                if (error == \"Not logged in\") {\r\n                    // setTimeout(() => newLogin(url, request, successCallback, errorCallback), 10000);\r\n                    // location.reload();\r\n                }\r\n\r\n                if (errorCallback) errorCallback(error);\r\n            } else {\r\n                successCallback(response);\r\n            }\r\n            return;\r\n\r\n        },\r\n        error: function (jqXHR, message) {\r\n            showNetworkBusy(false);\r\n            if (errorCallback) {\r\n                let statusText = \"Server nicht erreichbar.\"\r\n                if (jqXHR.status != 0) {\r\n                    statusText = \"\" + jqXHR.status\r\n                }\r\n                errorCallback(message + \": \" + statusText);\r\n                return;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function showNetworkBusy(busy: boolean) {\r\n    if (busy) {\r\n        jQuery('.jo_network-busy').css('visibility','visible');\r\n    } else {\r\n        jQuery('.jo_network-busy').css('visibility','hidden');\r\n    }\r\n}\r\n\r\n\r\n","import { DatabaseData } from \"../communication/Data.js\";\r\n\r\nexport class WDatabase {\r\n\r\n    id: number;\r\n    name: string;\r\n\r\n    templateDump: Uint8Array;\r\n    based_on_template_id: number;\r\n    templateName: string;\r\n\r\n    statements: string[];\r\n    published_to: number;\r\n    version: number;\r\n    description: string;\r\n    owner_id: number;\r\n\r\n    static fromDatabaseData(data: DatabaseData, version: number): WDatabase {\r\n\r\n        let db = new WDatabase();\r\n\r\n        db.id = data.id;\r\n        db.name = data.name;\r\n        db.statements = data.statements;\r\n        db.published_to = data.published_to;\r\n        db.version = version;\r\n        db.description = data.description;\r\n        db.templateDump = null;\r\n        db.based_on_template_id = data.based_on_template_id;\r\n        db.owner_id = data.owner_id;\r\n        return db;\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n","export class CacheManager {\r\n    \r\n    fetchTemplateFromCache(databaseId: number, callback: (templateDump: Uint8Array) => void) {\r\n        if(databaseId == null){callback(null); return;}\r\n        let that = this;\r\n        if(!this.cacheAvailable()) callback(null);\r\n        this.getCache((cache) => {\r\n            cache.match(that.databaseIdToCacheIdentifier(databaseId)).then(\r\n                (value)=>{\r\n                    value.arrayBuffer().then((buffer) => callback(new Uint8Array(buffer)));\r\n                })\r\n                .catch(() => callback(null));\r\n        })        \r\n    }\r\n\r\n    saveTemplateToCache(databaseId: number, templateDump: Uint8Array) {\r\n        if(!this.cacheAvailable()) return;\r\n        let that = this;\r\n        this.getCache((cache) => {\r\n            cache.put(that.databaseIdToCacheIdentifier(databaseId), new Response(templateDump));\r\n        })        \r\n    }\r\n\r\n    cacheAvailable(): boolean {\r\n        return 'caches' in self;\r\n    }\r\n\r\n    getCache(callback: (cache: Cache) => void) {\r\n        caches.open('my-cache').then(callback);\r\n    }\r\n\r\n    databaseIdToCacheIdentifier(databaseId: number): string {\r\n        return \"/onlineIdeTemplateDb\" + databaseId;\r\n    }\r\n\r\n}","import { Main } from \"../main/Main.js\";\r\nimport { ajax } from \"./AjaxHelper.js\";\r\nimport { GetWebSocketTokenResponse } from \"./Data.js\";\r\nimport { NetworkManager } from \"./NetworkManager.js\";\r\n\r\ntype SubscriptionMessageFromClient = {\r\n    command: number,  // 1 == \"subscribe\", 2 == \"disconnect\"\r\n    // 3 == \"keepalive request\"\r\n    token?: string   // when \"subscribe\"\r\n}\r\n\r\ntype SubscriptionMessageFromServer = {\r\n    command: number // 1 == Acknoledge Connection, 2 == Notify, 3 == disconnect, 4 == keep alive response\r\n}\r\n\r\ntype NotifierState = \"connecting\" | \"connected\" | \"subscribed\" | \"disconnected\";\r\n\r\nexport class NotifierClient {\r\n\r\n    connection: WebSocket;\r\n    state: NotifierState;\r\n\r\n    constructor(private main: Main, private networkManager: NetworkManager){\r\n        this.connect();\r\n    }\r\n\r\n    connect() {\r\n        this.state = \"connecting\";\r\n\r\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\r\n\r\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/subscriptionwebsocket\";\r\n            this.connection = new WebSocket(url);\r\n\r\n            this.connection.onerror = (error: Event) => { this.onError(error); }\r\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\r\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\r\n\r\n            this.connection.onopen = (event: Event) => {\r\n                let request: SubscriptionMessageFromClient = {\r\n                    command: 1,   // \"subscribe\"\r\n                    token: response.token\r\n                }\r\n\r\n                this.state = \"connected\";\r\n                this.sendIntern(JSON.stringify(request));\r\n\r\n            }\r\n\r\n            let that = this;\r\n            setTimeout(() => {\r\n                if(this.state != \"subscribed\"){\r\n                    this.networkManager.forcedUpdateEvery = 1;\r\n                    this.networkManager.counterTillForcedUpdate = 1;\r\n                }\r\n            }, 7000);\r\n\r\n        });\r\n    }\r\n\r\n    disconnect(){\r\n        let request: SubscriptionMessageFromClient = {\r\n            command: 2   // \"disconnect\"\r\n        }\r\n\r\n        this.state = \"connected\";\r\n        this.sendIntern(JSON.stringify(request));\r\n\r\n    }\r\n\r\n    unsentMessages: string[] = [];\r\n    sendIntern(message: string) {\r\n\r\n        if (this.state != \"disconnected\") {\r\n            try {\r\n                this.connection.send(message);\r\n            } catch (exception) {\r\n                console.log(exception);\r\n            }\r\n        }\r\n    }\r\n\r\n    onClose(event: CloseEvent) {\r\n        this.state = \"disconnected\";\r\n    }\r\n\r\n    onMessage(event: MessageEvent) {\r\n\r\n        let response: SubscriptionMessageFromClient = JSON.parse(event.data);\r\n        if (response.command == undefined) return;\r\n\r\n        // 1 == Acknoledge Connection, 2 == Notify, 3 == disconnect, 4 == keep alive response\r\n        switch (response.command) {\r\n            case 1: // Acknoledge Connection\r\n                this.state = \"subscribed\";\r\n                break;\r\n            case 2: // Notify\r\n                this.networkManager.sendUpdates(() => {}, true);\r\n                break;\r\n            case 3: // disconnect\r\n                this.state = \"disconnected\";\r\n                break;\r\n            case 4: // keep alive response\r\n                break;\r\n        }\r\n    }\r\n\r\n    onError(error: Event) {\r\n        console.log(\"Fehler beim Notifier-Websocket\");\r\n    }\r\n\r\n}","import { UploadTemplateResponse } from \"../communication/Data.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\n\r\nexport class TemplateUploader {\r\n\r\n    uploadCurrentDatabase(workspace_id: number, main: Main, dump: Uint8Array | null, \r\n        reason: \"publishDatabaseAsTemplate\" | \"uploadBaseTemplateForWorkspace\" | \"distributeWorkspace\", \r\n        callback: (response: UploadTemplateResponse) => void = () => { }) {\r\n            \r\n        main.waitOverlay.show('Bitte warten, lade Vorlage auf den Server hoch ...');\r\n        if (workspace_id >= 0) {\r\n            let dbTool = main.getDatabaseTool();\r\n            dbTool.export((buffer) => {\r\n                // @ts-ignore\r\n                buffer = pako.deflate(buffer);\r\n                this.uploadIntern(buffer, workspace_id, reason, main, callback);\r\n            }, (error) => {\r\n                alert(\"Fehler beim Exportieren der Datenbank: \" + error)\r\n                main.waitOverlay.hide();\r\n            })\r\n        } else {\r\n            this.uploadIntern(dump, -1, reason, main, callback);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    private uploadIntern(buffer: Uint8Array, workspace_id: number,\r\n        reason: \"publishDatabaseAsTemplate\" | \"uploadBaseTemplateForWorkspace\"| \"distributeWorkspace\",\r\n        main: Main, callback: (response: UploadTemplateResponse) => void) {\r\n\r\n        $.ajax({\r\n            type: 'POST',\r\n            async: true,\r\n            contentType: 'application/octet-stream',\r\n            data: buffer,\r\n            processData: false,\r\n            headers: { 'x-workspaceid': \"\" + workspace_id, \"x-reason\": reason },\r\n            url: \"servlet/uploadTemplate\",\r\n            success: function (response: UploadTemplateResponse) {\r\n                main.waitOverlay.hide();\r\n                callback(response);\r\n                return;\r\n\r\n            },\r\n            error: function (jqXHR, message) {\r\n                alert('message');\r\n                main.waitOverlay.hide();\r\n            }\r\n        }\r\n        );\r\n        return buffer;\r\n    }\r\n}","import { Main } from \"../main/Main.js\";\r\nimport { ajax } from \"./AjaxHelper.js\";\r\nimport { WorkspaceData, FileData, SendUpdatesRequest, SendUpdatesResponse, CreateOrDeleteFileOrWorkspaceRequest, CRUDResponse, UpdateUserSettingsRequest, UpdateUserSettingsResponse, DuplicateWorkspaceRequest, DuplicateWorkspaceResponse, ClassData, DistributeWorkspaceRequest, DistributeWorkspaceResponse, GetDatabaseRequest, getDatabaseResponse, GetNewStatementsRequest, GetNewStatementsResponse, AddDatabaseStatementsRequest, AddDatabaseStatementsResponse, TemplateListEntry, GetTemplateListRequest, GetTemplateListResponse, CreateWorkspaceData, GetDatabaseSettingsResponse, GetDatabaseSettingsRequest, setDatabaseSecretRequest as SetDatabaseSecretRequest, SetDatabaseSecretResponse, SetPublishedToRequest, SetPublishedToResponse, GetTemplateRequest, RollbackRequest, RollbackResponse } from \"./Data.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { WDatabase } from \"../workspace/WDatabase.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { CacheManager } from \"./CacheManager.js\";\r\nimport { NotifierClient } from \"./NotifierClient.js\";\r\nimport { TemplateUploader } from \"../tools/TemplateUploader.js\";\r\n\r\nexport class NetworkManager {\r\n\r\n    timerhandle: any;\r\n\r\n    ownUpdateFrequencyInSeconds: number = 20;\r\n    teacherUpdateFrequencyInSeconds: number = 5;\r\n\r\n    updateFrequencyInSeconds: number = 20;\r\n    forcedUpdateEvery: number = 4;\r\n    counterTillForcedUpdate: number = 2;\r\n    secondsTillNextUpdate: number = this.updateFrequencyInSeconds;\r\n    errorHappened: boolean = false;\r\n\r\n    interval: any;\r\n\r\n    notifierClient: NotifierClient;\r\n\r\n    constructor(private main: Main, private $updateTimerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initializeTimer() {\r\n\r\n        let that = this;\r\n        this.$updateTimerDiv.find('svg').attr('width', that.updateFrequencyInSeconds);\r\n\r\n        if (this.interval != null) clearInterval(this.interval);\r\n\r\n        this.interval = setInterval(() => {\r\n\r\n            if (that.main.user == null) return; // don't call server if no user is logged in\r\n\r\n            that.secondsTillNextUpdate--;\r\n\r\n            if (that.secondsTillNextUpdate < 0) {\r\n                that.secondsTillNextUpdate = that.updateFrequencyInSeconds;\r\n                this.counterTillForcedUpdate--;\r\n                let forceUpdate = this.counterTillForcedUpdate == 0;\r\n                if (forceUpdate) this.counterTillForcedUpdate = this.forcedUpdateEvery;\r\n                that.sendUpdates(() => { }, forceUpdate);\r\n            }\r\n\r\n            let $rect = this.$updateTimerDiv.find('.jo_updateTimerRect');\r\n\r\n            $rect.attr('width', that.secondsTillNextUpdate + \"px\");\r\n\r\n            if (that.errorHappened) {\r\n                $rect.css('fill', '#c00000');\r\n                this.$updateTimerDiv.attr('title', \"Fehler beim letzten Speichervorgang -> Werd's wieder versuchen\");\r\n            } else {\r\n                $rect.css('fill', '#008000');\r\n                this.$updateTimerDiv.attr('title', that.secondsTillNextUpdate + \" Sekunden bis zum nächsten Speichern\");\r\n            }\r\n\r\n        }, 1000);\r\n\r\n    }\r\n\r\n    initializeNotifierClient(){\r\n        this.notifierClient = new NotifierClient(this.main, this);\r\n    }\r\n\r\n    sendUpdates(callback?: () => void, sendIfNothingIsDirty: boolean = false) {\r\n\r\n        if (this.main.user == null) return;\r\n\r\n        this.main.projectExplorer.writeEditorTextToFile();\r\n\r\n        if (this.main.userDataDirty) {\r\n\r\n            this.main.userDataDirty = false;\r\n            this.sendUpdateUserSettings(() => { });\r\n        }\r\n\r\n\r\n        let wdList: WorkspaceData[] = [];\r\n        let fdList: FileData[] = [];\r\n\r\n        for (let ws of this.main.workspaceList) {\r\n\r\n            if (!ws.saved) {\r\n                wdList.push(ws.getWorkspaceData(false));\r\n                ws.saved = true;\r\n            }\r\n\r\n            for (let m of ws.moduleStore.getModules(false)) {\r\n                if (!m.file.saved) {\r\n                    m.file.text = m.getProgramTextFromMonacoModel();\r\n                    fdList.push(m.getFileData(ws));\r\n                    // console.log(\"Save file \" + m.file.name);\r\n                    m.file.saved = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        let request: SendUpdatesRequest = {\r\n            workspacesWithoutFiles: wdList,\r\n            files: fdList,\r\n            owner_id: this.main.workspacesOwnerId,\r\n            userId: this.main.user.id,\r\n            language: 1,\r\n            currentWorkspaceId: this.main.getCurrentWorkspace()?.id,\r\n            getModifiedWorkspaces: false\r\n        }\r\n\r\n        let that = this;\r\n        if (wdList.length > 0 || fdList.length > 0 || sendIfNothingIsDirty) {\r\n            ajax('sendUpdates', request, (response: SendUpdatesResponse) => {\r\n                that.errorHappened = !response.success;\r\n                if (!that.errorHappened) {\r\n\r\n                    that.updateWorkspaces(request, response);\r\n\r\n                    if (callback != null) {\r\n                        callback();\r\n                        return;\r\n                    }\r\n                }\r\n            }, () => {\r\n                that.errorHappened = true;\r\n            });\r\n        } else {\r\n            if (callback != null) {\r\n                callback();\r\n                return;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    sendCreateWorkspace(wd: CreateWorkspaceData, owner_id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            wd.id = Math.round(Math.random() * 10000000);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"workspace\",\r\n            data: wd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            wd.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n\r\n    getDatabaseSettings(workspace_id: number, callback: (response: GetDatabaseSettingsResponse) => void) {\r\n        let request: GetDatabaseSettingsRequest = {\r\n            workspaceId: workspace_id\r\n        };\r\n        ajax(\"getDatabaseSettings\", request, (response: GetDatabaseSettingsResponse) => {\r\n            callback(response);\r\n        }, (message) => { alert(message) })\r\n    }\r\n\r\n    setNewSecret(workspace_id: number, kind: string, callback: (secret: string) => void) {\r\n        let request: SetDatabaseSecretRequest = {\r\n            workspaceId: workspace_id,\r\n            secretKind: kind\r\n        };\r\n        ajax(\"setNewSecret\", request, (response: SetDatabaseSecretResponse) => {\r\n            callback(response.secret);\r\n        }, (message) => { alert(message) })\r\n    }\r\n\r\n    setNameAndPublishedTo(workspace_id: number, name: string, published_to: number, description: string, callback: () => void) {\r\n        let request: SetPublishedToRequest = {\r\n            workspaceId: workspace_id,\r\n            databaseName: name,\r\n            publishedTo: published_to,\r\n            description: description\r\n        };\r\n\r\n        ajax(\"setPublishedTo\", request, (response: SetPublishedToResponse) => {\r\n            callback();\r\n        }, (message) => { alert(message) })\r\n    }\r\n\r\n\r\n\r\n    sendCreateFile(m: Module, ws: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        let fd: FileData = m.getFileData(ws);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"file\",\r\n            data: fd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            m.file.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDuplicateWorkspace(ws: Workspace, callback: (error: string, workspaceData?: WorkspaceData) => void) {\r\n\r\n        let request: DuplicateWorkspaceRequest = {\r\n            workspace_id: ws.id,\r\n            language: 1\r\n        }\r\n\r\n        ajax(\"duplicateWorkspace\", request, (response: DuplicateWorkspaceResponse) => {\r\n            callback(response.message, response.workspace)\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDistributeWorkspace(ws: Workspace, klasse: ClassData, student_ids: number[], callback: (error: string) => void) {\r\n\r\n        let callbackAfterSettingWorkspaceActive = () => {\r\n\r\n            new TemplateUploader().uploadCurrentDatabase(ws.id, this.main, null,\r\n                \"distributeWorkspace\",\r\n                (response) => {\r\n\r\n                    this.sendUpdates(() => {\r\n    \r\n                    let request: DistributeWorkspaceRequest = {\r\n                        workspace_id: ws.id,\r\n                        database_as_template_id: response.newTemplateId,\r\n                        class_id: klasse?.id,\r\n                        student_ids: student_ids\r\n                    }\r\n        \r\n                    ajax(\"distributeWorkspace\", request, (response: DistributeWorkspaceResponse) => {\r\n                        callback(response.message)\r\n                    }, callback);\r\n        \r\n                }, false);\r\n                });\r\n\r\n        }\r\n\r\n        this.main.projectExplorer.setWorkspaceActive(ws, callbackAfterSettingWorkspaceActive);\r\n\r\n    }\r\n\r\n\r\n    sendDeleteWorkspaceOrFile(type: \"workspace\" | \"file\", id: number, callback: (error: string) => void) {\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"delete\",\r\n            entity: type,\r\n            id: id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            if (response.success) {\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendUpdateUserSettings(callback: (error: string) => void) {\r\n\r\n        let request: UpdateUserSettingsRequest = {\r\n            settings: this.main.user.settings,\r\n            userId: this.main.user.id,\r\n            current_workspace_id: this.main.getCurrentWorkspace()?.id\r\n        }\r\n\r\n        ajax(\"updateUserSettings\", request, (response: UpdateUserSettingsResponse) => {\r\n            if (response.success) {\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n\r\n    getNewStatements(workspace: Workspace, callback: (statements: string[], firstNewStatementIndex: number) => void) {\r\n        let request: GetNewStatementsRequest = {\r\n            workspaceId: workspace.id,\r\n            version_before: workspace.database.version\r\n        }\r\n\r\n        ajax(\"getNewStatements\", request, (response: GetNewStatementsResponse) => {\r\n            if (response.success) {\r\n                callback(response.newStatements, response.firstNewStatementIndex);\r\n            }\r\n        });\r\n    }\r\n\r\n    AddDatabaseStatements(workspace: Workspace, statements: string[], callback: (statements_before: string[], new_version: number) => void) {\r\n        let request: AddDatabaseStatementsRequest = {\r\n            workspaceId: workspace.id,\r\n            version_before: workspace.database.version,\r\n            statements: statements\r\n        }\r\n\r\n        ajax(\"addDatabaseStatements\", request, (response: AddDatabaseStatementsResponse) => {\r\n            if (response.success) {\r\n                callback(response.statements_before, response.new_version);\r\n            }\r\n        });\r\n    }\r\n\r\n    fetchDatabase(workspace: Workspace, callback: (error: string) => void) {\r\n\r\n        let cacheManager: CacheManager = new CacheManager();\r\n\r\n        let request: GetDatabaseRequest = {\r\n            workspaceId: workspace.id\r\n        }\r\n\r\n        ajax(\"getDatabase\", request, (response: getDatabaseResponse) => {\r\n            if (response.success) {\r\n\r\n                workspace.database = WDatabase.fromDatabaseData(response.database, response.version)\r\n                cacheManager.fetchTemplateFromCache(workspace.database.based_on_template_id, (templateDump: Uint8Array) => {\r\n\r\n                    if (templateDump != null) {\r\n                        try{\r\n                            // @ts-ignore\r\n                            workspace.database.templateDump = pako.inflate(templateDump);\r\n                        } catch(err){\r\n                            console.log(err);\r\n                            console.log(\"Dump seems not to be compressed...\");\r\n                            workspace.database.templateDump = templateDump;\r\n                        }\r\n                        callback(null);\r\n                        return;\r\n                    } else {\r\n                        if (workspace.database.based_on_template_id == null) {\r\n                            callback(null);\r\n                            return\r\n                        }\r\n                        this.fetchTemplate(workspace.id, (template) => {\r\n                            if (template != null) {\r\n                                cacheManager.saveTemplateToCache(workspace.database.based_on_template_id, template);\r\n                                // @ts-ignore\r\n                                workspace.database.templateDump = pako.inflate(template);\r\n                                callback(null);\r\n                                return;\r\n                            } else {\r\n                                callback(\"Konnte das Template nicht laden.\");\r\n                                return;\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    fetchTemplate(workspaceId: number, callback: (template: Uint8Array) => void) {\r\n        let request: GetTemplateRequest = {\r\n            workspaceId: workspaceId\r\n        }\r\n\r\n        $.ajax({\r\n            type: 'POST',\r\n            async: true,\r\n            data: JSON.stringify(request),\r\n            contentType: 'application/json',\r\n            url: \"servlet/getTemplate\",\r\n            xhrFields: { responseType: 'arraybuffer' },\r\n            success: function (response: any) {\r\n                callback(new Uint8Array(response));\r\n            },\r\n            error: function (jqXHR, message) {\r\n                alert(\"Konnte das Template nicht laden.\");\r\n                callback(null);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    fetchTemplateList(callback: (templateList: TemplateListEntry[]) => void) {\r\n        let request: GetTemplateListRequest = { user_id: this.main.user.id }\r\n\r\n        ajax(\"getTemplateList\", request, (response: GetTemplateListResponse) => {\r\n            if (response.success) {\r\n                callback(response.templateList);\r\n            } else {\r\n                callback([]);\r\n            }\r\n        }, (message) => {\r\n            alert(message);\r\n            callback([]);\r\n        })\r\n\r\n    }\r\n\r\n    updateWorkspaces(sendUpdatesRequest: SendUpdatesRequest, sendUpdatesResponse: SendUpdatesResponse) {\r\n\r\n        let idToRemoteWorkspaceDataMap: Map<number, WorkspaceData> = new Map();\r\n\r\n        let fileIdsSended = [];\r\n        sendUpdatesRequest.files.forEach(file => fileIdsSended.push(file.id));\r\n\r\n        sendUpdatesResponse.workspaces.workspaces.forEach(wd => idToRemoteWorkspaceDataMap.set(wd.id, wd));\r\n\r\n        let newWorkspaceNames: string[] = [];\r\n\r\n        for (let remoteWorkspace of sendUpdatesResponse.workspaces.workspaces) {\r\n\r\n            let localWorkspaces = this.main.workspaceList.filter(ws => ws.id == remoteWorkspace.id);\r\n\r\n            // Did student get a workspace from his/her teacher?\r\n            if (localWorkspaces.length == 0) {\r\n                newWorkspaceNames.push(remoteWorkspace.name);\r\n                this.createNewWorkspaceFromWorkspaceData(remoteWorkspace);\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        for (let workspace of this.main.workspaceList) {\r\n            let remoteWorkspace: WorkspaceData = idToRemoteWorkspaceDataMap.get(workspace.id);\r\n            if (remoteWorkspace != null) {\r\n                let idToRemoteFileDataMap: Map<number, FileData> = new Map();\r\n                remoteWorkspace.files.forEach(fd => idToRemoteFileDataMap.set(fd.id, fd));\r\n\r\n                let idToModuleMap: Map<number, Module> = new Map();\r\n                // update/delete files if necessary\r\n                for (let module of workspace.moduleStore.getModules(false)) {\r\n                    let fileId = module.file.id;\r\n                    idToModuleMap.set(fileId, module);\r\n                    let remoteFileData = idToRemoteFileDataMap.get(fileId);\r\n                    if (remoteFileData == null) {\r\n                        this.main.projectExplorer.fileListPanel.removeElement(module);\r\n                        this.main.currentWorkspace.moduleStore.removeModule(module);\r\n                    } else if (remoteFileData.version > module.file.version) {\r\n                        if (fileIdsSended.indexOf(fileId) < 0 || remoteFileData.forceUpdate) {\r\n                            module.file.text = remoteFileData.text;\r\n                            module.model.setValue(remoteFileData.text);\r\n\r\n                            module.file.saved = true;\r\n                            module.lastSavedVersionId = module.model.getAlternativeVersionId()\r\n                        }\r\n                        module.file.version = remoteFileData.version;\r\n                    }\r\n                }\r\n\r\n                // add files if necessary\r\n                for (let remoteFile of remoteWorkspace.files) {\r\n                    if (idToModuleMap.get(remoteFile.id) == null) {\r\n                        this.createFile(workspace, remoteFile);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (newWorkspaceNames.length > 0) {\r\n            let message: string = newWorkspaceNames.length > 1 ? \"Folgende Workspaces hat Deine Lehrkraft Dir gesendet: \" : \"Folgenden Workspace hat Deine Lehrkraft Dir gesendet: \";\r\n            message += newWorkspaceNames.join(\", \");\r\n            alert(message);\r\n        }\r\n\r\n        this.main.projectExplorer.workspaceListPanel.sortElements();\r\n        this.main.projectExplorer.fileListPanel.sortElements();\r\n\r\n    }\r\n\r\n    public createNewWorkspaceFromWorkspaceData(remoteWorkspace: WorkspaceData, withSort: boolean = false) {\r\n        let w = this.main.createNewWorkspace(remoteWorkspace.name, remoteWorkspace.owner_id);\r\n        w.id = remoteWorkspace.id;\r\n        w.sql_history = \"\";\r\n        w.path = remoteWorkspace.path;\r\n        w.isFolder = remoteWorkspace.isFolder;\r\n\r\n        this.main.workspaceList.push(w);\r\n        let path = remoteWorkspace.path.split(\"/\");\r\n        if (path.length == 1 && path[0] == \"\") path = [];\r\n\r\n        let panelElement: AccordionElement = {\r\n            name: remoteWorkspace.name,\r\n            externalElement: w,\r\n            iconClass: \"workspace\",\r\n            isFolder: remoteWorkspace.isFolder,\r\n            path: path\r\n        };\r\n\r\n        this.main.projectExplorer.workspaceListPanel.addElement(panelElement, true);\r\n        w.panelElement = panelElement;\r\n\r\n        for (let fileData of remoteWorkspace.files) {\r\n            this.createFile(w, fileData);\r\n        }\r\n\r\n        if (withSort) {\r\n            this.main.projectExplorer.workspaceListPanel.sortElements();\r\n            this.main.projectExplorer.fileListPanel.sortElements();\r\n        }\r\n    }\r\n\r\n    createFile(workspace: Workspace, remoteFile: FileData) {\r\n        let ae: any = null; //AccordionElement\r\n        if (workspace == this.main.currentWorkspace) {\r\n            ae = {\r\n                name: remoteFile.name,\r\n                externalElement: null\r\n            }\r\n\r\n            this.main.projectExplorer.fileListPanel.addElement(ae, true);\r\n        }\r\n\r\n        let f: any = { // File\r\n            id: remoteFile.id,\r\n            name: remoteFile.name,\r\n            dirty: false,\r\n            saved: true,\r\n            text: remoteFile.text,\r\n            version: remoteFile.version,\r\n            identical_to_repository_version: true,\r\n            workspace_id: workspace.id,\r\n            panelElement: ae\r\n        };\r\n        let m = this.main.projectExplorer.getNewModule(f); //new Module(f, this.main);\r\n        if (ae != null) ae.externalElement = m;\r\n        let modulStore = workspace.moduleStore;\r\n        modulStore.putModule(m);\r\n\r\n    }\r\n\r\n    rollback(callback: (error: string, rollbackLocalNeeded: boolean) => void) {\r\n        let workspace = this.main.currentWorkspace;\r\n        let request: RollbackRequest = { workspaceId: workspace.id, version: workspace.database.version }\r\n\r\n        ajax(\"rollback\", request, (response: RollbackResponse) => {\r\n            if (response.success) {\r\n                \r\n                callback(null, workspace.database.version > response.new_version);\r\n            } else {\r\n                alert(response.message);\r\n                callback(response.message, false);\r\n            }\r\n        }, (message) => {\r\n            alert(message);\r\n            callback(message, false);\r\n        })\r\n\r\n    }\r\n\r\n\r\n}","export enum TokenType {\r\n    identifier,\r\n    // constants\r\n    integerConstant,\r\n    floatingPointConstant,\r\n    booleanConstant,\r\n    stringConstant,\r\n    charConstant,\r\n    true,\r\n    false,\r\n    // keywords\r\n    keywordRename,\r\n    keywordDistinct,\r\n    keywordTo,\r\n    keywordAlter,\r\n    keywordCommit,\r\n    keywordAdd,\r\n    keywordDelete,\r\n    keywordSelect,\r\n    keywordInsert,\r\n    keywordInto,\r\n    keywordValues,\r\n    keywordUpdate,\r\n    keywordSet,\r\n    keywordNo,\r\n    keywordUse,\r\n    keywordCreate,\r\n    keywordReferences,\r\n    keywordPrimary,\r\n    keywordForeign,\r\n    keywordTable,\r\n    keywordTables,\r\n    keywordColumn,\r\n    keywordDrop,\r\n    keywordUnique,\r\n    keywordKey,\r\n    keywordIndex,\r\n    keywordConstraint,\r\n    keywordModify,\r\n    keywordCascade,\r\n    keywordRestrict,\r\n    keywordAction,\r\n    keywordAutoincrement,\r\n    keywordFrom,\r\n    keywordWhere,\r\n    keywordGroup,\r\n    keywordBy,\r\n    keywordHaving,\r\n    keywordOrder,\r\n    keywordAscending,\r\n    keywordDescending,\r\n    keywordNulls,\r\n    keywordFirst,\r\n    keywordLast,\r\n    keywordIs,\r\n    keywordNull,\r\n    keywordDatabase,\r\n\r\n    keywordOr,\r\n    keywordAnd,\r\n    keywordNot,\r\n\r\n    keywordJoin,\r\n    keywordNatural,\r\n    keywordLeft,\r\n    keywordCross,\r\n    keywordInner,\r\n    keywordOuter,\r\n    keywordOn,\r\n    keywordAs,\r\n    keywordLimit,\r\n    keywordOffset,\r\n    keywordIn,\r\n    keywordNotIn,\r\n    keywordLike,\r\n    keywordCollate,\r\n    keywordDefault,\r\n    keywordComment,\r\n    keywordEngine,\r\n    keywordCharset,\r\n    keywordCharacter,\r\n    \r\n    keywordStart,\r\n    keywordTransaction,\r\n    keywordIf,\r\n    keywordExists,\r\n\r\n    keywordLock,\r\n    keywordUnlock,\r\n    keywordWrite,\r\n    keywordRead,\r\n\r\n    // brackets\r\n    leftBracket, // ()\r\n    rightBracket,\r\n    leftSquareBracket, // []\r\n    rightSquareBracket,\r\n    leftCurlyBracket, // {}\r\n    rightCurlyBracket,\r\n    leftRightSquareBracket, // []\r\n    \r\n    // binary operators\r\n    dot, //.\r\n    modulo,\r\n    minus, plus, multiplication, division,\r\n    singleQuote, doubleQuote, // ', \"\r\n    identifierQuote,\r\n    lower, greater, lowerOrEqual, greaterOrEqual, \r\n    concatenation,    \r\n    equal,\r\n    notEqual,\r\n\r\n    // semicolon\r\n    semicolon, // ;\r\n\r\n    colon, // :\r\n\r\n    // comma\r\n    comma, // ,\r\n\r\n    // backslash\r\n    backslash,\r\n\r\n    // |\r\n    pipe,\r\n\r\n    // @\r\n    at,\r\n\r\n    // #\r\n    hash,\r\n\r\n    // whitespace\r\n    space,\r\n\r\n    tab,\r\n\r\n    // newline\r\n    newline,\r\n\r\n    // line feed\r\n    linefeed,\r\n\r\n    // only lexer-internal\r\n    identifierChar,  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    comment,\r\n\r\n    endofSourcecode, // will be generated after sourcecode end\r\n    \r\n    // Program statement types:\r\n    \r\n    // additional AST node types\r\n    constantNode,\r\n    callMethod,\r\n    unaryOp,\r\n    binaryOp,\r\n    table,\r\n    subquery,\r\n    list,\r\n    column,\r\n    columnDef,\r\n    allColumns, // *\r\n    isNull,\r\n    isNot, // used by lexer to lex \"is not null\" into one token\r\n    isNotNull,\r\n    omittedeStatement\r\n}\r\n\r\nexport var TokenTypeReadable: {[tt: number]: string} = {\r\n    [TokenType.identifier]: \"ein Bezeichner\",\r\n    // constants\r\n    [TokenType.integerConstant]: \"eine Integer-Konstante\",\r\n    [TokenType.floatingPointConstant]: \"eine Fließkomma-Konstante\",\r\n    [TokenType.booleanConstant]: \"eine boolesche Konstante\",\r\n    [TokenType.stringConstant]: \"eine Zeichenketten-Konstante\",\r\n    [TokenType.charConstant]: \"eine char-Konstante\",\r\n    [TokenType.true]: \"true\",\r\n    [TokenType.false]: \"false\",\r\n    // keywords\r\n    [TokenType.keywordRename]: \"rename\",\r\n    [TokenType.keywordDistinct]: \"distinct\",\r\n    [TokenType.keywordTo]: \"to\",\r\n    [TokenType.keywordAlter]: \"alter\",\r\n    [TokenType.keywordCommit]: \"commit\",\r\n    [TokenType.keywordAdd]: \"add\",\r\n    [TokenType.keywordDelete]: \"delete\",\r\n    [TokenType.keywordSelect]: \"select\",\r\n    [TokenType.keywordInsert]: \"insert\",\r\n    [TokenType.keywordInto]: \"into\",\r\n    [TokenType.keywordValues]: \"values\",\r\n    [TokenType.keywordUpdate]: \"update\",\r\n    [TokenType.keywordSet]: \"set\",\r\n    [TokenType.keywordNo]: \"no\",\r\n    [TokenType.keywordUse]: \"use\",\r\n    [TokenType.keywordCreate]: \"create\",\r\n    [TokenType.keywordReferences]: \"references\",\r\n    [TokenType.keywordPrimary]: \"primary\",\r\n    [TokenType.keywordForeign]: \"foreign\",\r\n    [TokenType.keywordTable]: \"table\",\r\n    [TokenType.keywordTables]: \"tables\",\r\n    [TokenType.keywordColumn]: \"column\",\r\n    [TokenType.keywordDrop]: \"drop\",\r\n    [TokenType.keywordUnique]: \"unique\",\r\n    [TokenType.keywordKey]: \"key\",\r\n    [TokenType.keywordIndex]: \"index\",\r\n    [TokenType.keywordConstraint]: \"constraint\",\r\n    [TokenType.keywordModify]: \"modify\",\r\n    [TokenType.keywordCascade]: \"cascade\",\r\n    [TokenType.keywordRestrict]: \"restrict\",\r\n    [TokenType.keywordAction]: \"action\",\r\n    [TokenType.keywordAutoincrement]: \"autoincrement\",\r\n    [TokenType.keywordFrom]: \"from\",\r\n    [TokenType.keywordWhere]: \"where\",\r\n    [TokenType.keywordGroup]: \"group\",\r\n    [TokenType.keywordBy]: \"by\",\r\n    [TokenType.keywordHaving]: \"having\",\r\n    [TokenType.keywordOrder]: \"order\",\r\n    [TokenType.keywordAscending]: \"ascending\",\r\n    [TokenType.keywordDescending]: \"descending\",\r\n    [TokenType.keywordNulls]: \"nulls\",\r\n    [TokenType.keywordFirst]: \"first\",\r\n    [TokenType.keywordLast]: \"last\",\r\n    [TokenType.keywordIs]: \"is\",\r\n    [TokenType.keywordNull]: \"null\",\r\n    [TokenType.keywordDatabase]: \"database\",\r\n\r\n\r\n    [TokenType.keywordAnd]: \"and\",\r\n    [TokenType.keywordOr]: \"or\",\r\n    [TokenType.keywordNot]: \"not\",\r\n\r\n    [TokenType.keywordJoin]: \"join\",\r\n    [TokenType.keywordNatural]: \"natural\",\r\n    [TokenType.keywordLeft]: \"left\",\r\n    [TokenType.keywordCross]: \"cross\",\r\n    [TokenType.keywordInner]: \"inner\",\r\n    [TokenType.keywordOuter]: \"outer\",\r\n    [TokenType.keywordOn]: \"on\",\r\n    [TokenType.keywordAs]: \"as\",\r\n    [TokenType.keywordLimit]: \"limit\",\r\n    [TokenType.keywordOffset]: \"offset\",\r\n    [TokenType.keywordIn]: \"in\",\r\n    [TokenType.keywordNotIn]: \"not in\",\r\n    [TokenType.keywordLike]: \"like\",\r\n    [TokenType.keywordCollate]: \"collate\",\r\n    [TokenType.keywordDefault]: \"default\",\r\n    [TokenType.keywordComment]: \"comment\",\r\n    [TokenType.keywordEngine]: \"engine\",\r\n    [TokenType.keywordCharset]: \"charset\",\r\n    [TokenType.keywordCharacter]: \"character\",\r\n    [TokenType.keywordStart]: \"start\",\r\n    [TokenType.keywordTransaction]: \"transaction\",\r\n    [TokenType.keywordIf]: \"if\",\r\n    [TokenType.keywordExists]: \"exists\",\r\n    [TokenType.keywordLock]: \"lock\",\r\n    [TokenType.keywordUnlock]: \"unlock\",\r\n    [TokenType.keywordWrite]: \"write\",\r\n    [TokenType.keywordRead]: \"read\",\r\n\r\n    // brackets\r\n    [TokenType.leftBracket]: \"(\", // ()\r\n    [TokenType.rightBracket]: \")\",\r\n    [TokenType.leftSquareBracket]: \"[\", // []\r\n    [TokenType.rightSquareBracket]: \"]\",\r\n    [TokenType.leftCurlyBracket]: \"{\", // {}\r\n    [TokenType.rightCurlyBracket]: \"}\",\r\n    [TokenType.leftRightSquareBracket]: \"[]\", \r\n    \r\n    // operators\r\n    [TokenType.dot]: \".\", //.\r\n    [TokenType.minus]: \"-\", \r\n    [TokenType.modulo]: \"%\", \r\n    [TokenType.plus]: \"+\", \r\n    [TokenType.multiplication]: \"*\", \r\n    [TokenType.division]: \"/\",\r\n    [TokenType.singleQuote]: \"'\", \r\n    [TokenType.doubleQuote]: \"\\\"\", // ']: \"\", \"\r\n    [TokenType.identifierQuote]: \"`\",\r\n    [TokenType.lower]: \"<\", \r\n    [TokenType.greater]: \">\",\r\n    [TokenType.equal]: \"=\", \r\n    [TokenType.lowerOrEqual]: \"<=\", \r\n    [TokenType.greaterOrEqual]: \">=\", \r\n    [TokenType.concatenation]: \"||\", \r\n    \r\n    // semicolon\r\n    [TokenType.semicolon]: \";\", // ;\r\n    [TokenType.colon]: \":\", // ;\r\n\r\n    // comma\r\n    [TokenType.comma]: \",\", \r\n\r\n    // backslash\r\n    [TokenType.backslash]: \"\\\\\",\r\n\r\n    // at\r\n    [TokenType.at]: \"@\",\r\n\r\n    // hash\r\n    [TokenType.hash]: \"#\",\r\n    \r\n    // pipe\r\n    [TokenType.pipe]: \"|\",\r\n\r\n    // whitespace\r\n    [TokenType.space]: \"ein Leerzeichen\",\r\n    [TokenType.tab]: \"ein Tabulatorzeichen\",\r\n\r\n    // newline\r\n    [TokenType.newline]: \"ein Zeilenumbruch\",\r\n\r\n    // only lexer-internal\r\n    [TokenType.identifierChar]: \"eines der Zeichen a..z, A..Z, _\",  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    [TokenType.comment]: \"ein Kommentar\",\r\n\r\n    [TokenType.endofSourcecode]: \"das Ende des Programmes\"\r\n\r\n}\r\n\r\nexport var specialCharList: {[keyword: string]:TokenType} = {\r\n    '(': TokenType.leftBracket, // ()\r\n    ')': TokenType.rightBracket,\r\n    '[': TokenType.leftSquareBracket, // []\r\n    ']': TokenType.rightSquareBracket,\r\n    '{': TokenType.leftCurlyBracket, // {}\r\n    '}': TokenType.rightCurlyBracket,\r\n    \r\n    // operators\r\n    '.': TokenType.dot, //.\r\n    ',': TokenType.comma, //.\r\n    '-': TokenType.minus,\r\n    '%': TokenType.modulo,\r\n    '+': TokenType.plus, \r\n    '*': TokenType.multiplication, \r\n    '/': TokenType.division,\r\n    '\\\\': TokenType.backslash,\r\n    '@': TokenType.at,\r\n    '#': TokenType.hash,\r\n    '|': TokenType.pipe,\r\n    '\\'': TokenType.singleQuote, \r\n    '\"': TokenType.doubleQuote, // ', \"\r\n    '`': TokenType.identifierQuote, // ', \"\r\n    \"<\": TokenType.lower,\r\n    \">\": TokenType.greater,\r\n    \"=\": TokenType.equal,\r\n    \"<>\": TokenType.notEqual,\r\n    \r\n    ';': TokenType.semicolon, // ;\r\n    ':': TokenType.colon, // ;\r\n\r\n    // whitespace\r\n    ' ': TokenType.space,\r\n    '\\t': TokenType.tab,\r\n\r\n    // newline\r\n    '\\n': TokenType.newline,\r\n    '\\r': TokenType.linefeed\r\n}\r\n\r\nexport var keywordList: {[keyword: string]:TokenType} = {\r\n    \"rename\": TokenType.keywordRename,\r\n    \"distinct\": TokenType.keywordDistinct,\r\n    \"to\": TokenType.keywordTo,\r\n    \"alter\": TokenType.keywordAlter,\r\n    \"commit\": TokenType.keywordCommit,\r\n    \"add\": TokenType.keywordAdd,\r\n    \"delete\": TokenType.keywordDelete,\r\n    \"select\": TokenType.keywordSelect,\r\n    \"insert\": TokenType.keywordInsert,\r\n    \"into\": TokenType.keywordInto,\r\n    \"values\": TokenType.keywordValues,\r\n    \"update\": TokenType.keywordUpdate,\r\n    \"set\": TokenType.keywordSet,\r\n    \"no\": TokenType.keywordNo,\r\n    \"use\": TokenType.keywordUse,\r\n    \"create\": TokenType.keywordCreate,\r\n    \"references\": TokenType.keywordReferences,\r\n    \"primary\": TokenType.keywordPrimary,\r\n    \"foreign\": TokenType.keywordForeign,\r\n    \"table\": TokenType.keywordTable,\r\n    \"tables\": TokenType.keywordTables,\r\n    \"column\": TokenType.keywordColumn,\r\n    \"drop\": TokenType.keywordDrop,\r\n    \"unique\": TokenType.keywordUnique,\r\n    \"key\": TokenType.keywordKey,\r\n    \"index\": TokenType.keywordIndex,\r\n    \"constraint\": TokenType.keywordConstraint,\r\n    \"modify\": TokenType.keywordModify,\r\n    \"cascade\": TokenType.keywordCascade,\r\n    \"restrict\": TokenType.keywordRestrict,\r\n    \"action\": TokenType.keywordAction,\r\n    \"autoincrement\": TokenType.keywordAutoincrement,\r\n    \"auto_increment\": TokenType.keywordAutoincrement,\r\n    \"from\": TokenType.keywordFrom,\r\n    \"where\": TokenType.keywordWhere,\r\n    \"true\": TokenType.true,\r\n    \"false\": TokenType.false,\r\n    \"group\": TokenType.keywordGroup,\r\n    \"by\": TokenType.keywordBy,\r\n    \"having\": TokenType.keywordHaving,\r\n    \"order\": TokenType.keywordOrder,\r\n    \"asc\": TokenType.keywordAscending,\r\n    \"desc\": TokenType.keywordDescending,\r\n    \"nulls\": TokenType.keywordNulls,\r\n    \"first\": TokenType.keywordFirst,\r\n    \"last\": TokenType.keywordLast,\r\n    \"is\": TokenType.keywordIs,\r\n    \"null\": TokenType.keywordNull,\r\n    \"database\": TokenType.keywordDatabase,\r\n\r\n    \"or\": TokenType.keywordOr,\r\n    \"and\": TokenType.keywordAnd,\r\n    \"not\": TokenType.keywordNot,\r\n\r\n    \"join\": TokenType.keywordJoin,\r\n    \"natural\": TokenType.keywordNatural,\r\n    \"left\": TokenType.keywordLeft,\r\n    \"cross\": TokenType.keywordCross,\r\n    \"inner\": TokenType.keywordInner,\r\n    \"outer\": TokenType.keywordOuter,\r\n    \"on\": TokenType.keywordOn,\r\n    \"as\": TokenType.keywordAs,\r\n    \"limit\": TokenType.keywordLimit,\r\n    \"offset\": TokenType.keywordOffset,\r\n    \"in\": TokenType.keywordIn,\r\n    \"not in\": TokenType.keywordNotIn,\r\n    \"like\": TokenType.keywordLike,\r\n    \"collate\": TokenType.keywordCollate,\r\n    \"default\": TokenType.keywordDefault,\r\n    \"comment\": TokenType.keywordComment,\r\n    \"engine\": TokenType.keywordEngine,\r\n    \"charset\": TokenType.keywordCharset,\r\n    \"character\": TokenType.keywordCharacter,\r\n    \"start\": TokenType.keywordStart,\r\n    \"transaction\": TokenType.keywordTransaction,\r\n    \"if\": TokenType.keywordIf,\r\n    \"exists\": TokenType.keywordExists,\r\n    \"lock\": TokenType.keywordLock,\r\n    \"unlock\": TokenType.keywordUnlock,\r\n    \"write\": TokenType.keywordWrite,\r\n    \"read\": TokenType.keywordRead\r\n\r\n\r\n};\r\n\r\nexport var EscapeSequenceList: {[keyword: string]:string} = {\r\n    \"n\": \"\\n\",\r\n    \"r\": \"\\r\",\r\n    \"t\": \"\\t\",\r\n    \"\\\"\": \"\\\"\",\r\n    \"'\": \"'\",\r\n    \"\\\\\": \"\\\\\"\r\n}\r\n\r\nexport type TextPosition = {\r\n    line: number,\r\n    column: number, \r\n    length: number\r\n}\r\n\r\nexport type TextPositionWithoutLength = {\r\n    line: number,\r\n    column: number\r\n}\r\n\r\nexport type Token = {\r\n    tt: TokenType,\r\n    value: string|number|boolean,\r\n    position: TextPosition,\r\n    commentBefore?: Token,\r\n    isDoubleQuotedIdentifier?: boolean\r\n}\r\n\r\nexport type TokenList = Token[];\r\n\r\nfunction tokenToString(t: Token){\r\n    return \"<div><span style='font-weight: bold'>\" + TokenType[t.tt] + \"</span>\" +\r\n            \"<span style='color: blue'> &nbsp;'\" + t.value + \"'</span> (l&nbsp;\" + t.position.line + \", c&nbsp;\" + t.position.column + \")</div>\";\r\n}\r\n \r\nexport function tokenListToString(tl: TokenList):string{\r\n    let s = \"\";\r\n    for(let t of tl){\r\n        s += tokenToString(t) + \"\\n\";\r\n    }\r\n    return s;\r\n}","import { TokenList, specialCharList, TokenType, Token, EscapeSequenceList, keywordList, TextPosition, TokenTypeReadable } from \"./Token.js\";\r\n\r\nenum LexerState {\r\n    number, identifier, stringConstant, characterConstant, multilineComment, EndoflineComment\r\n}\r\n\r\nvar endChar = \"►\"; // \\u10000\r\n\r\nexport type QuickFix = {\r\n    title: string,\r\n    editsProvider: (uri: monaco.Uri) => monaco.languages.WorkspaceTextEdit[]\r\n}\r\n\r\nexport type ErrorLevel = \"info\" | \"error\" | \"warning\";\r\n\r\nexport type Error = {\r\n    position: TextPosition,\r\n    text: string,\r\n    quickFix?: QuickFix,\r\n    level: ErrorLevel\r\n}\r\n\r\nexport class Lexer {\r\n\r\n    tokenList: TokenList;\r\n    nonSpaceLastTokenType: TokenType;\r\n    nonSpaceLastToken: Token;\r\n\r\n    errorList: Error[];\r\n    pos: number;\r\n    line: number;\r\n    column: number;\r\n\r\n    currentChar: string;\r\n    nextChar: string;\r\n\r\n    input: string;\r\n\r\n    spaceTokens: TokenType[] = [\r\n        TokenType.space, TokenType.tab, TokenType.newline\r\n    ];\r\n\r\n    bracketStack: TokenType[];\r\n    bracketError: string;\r\n    correspondingBracket: { [key: number]: TokenType } = {};\r\n\r\n    tokenTypesToMerge: { first: TokenType, second: TokenType, merged: TokenType }[] = [\r\n        { first: TokenType.keywordNotIn, second: TokenType.keywordIn, merged: TokenType.keywordNotIn },\r\n        { first: TokenType.keywordIs, second: TokenType.keywordNot, merged: TokenType.isNot },\r\n        { first: TokenType.isNot, second: TokenType.keywordNull, merged: TokenType.isNotNull },\r\n        { first: TokenType.keywordIs, second: TokenType.keywordNull, merged: TokenType.isNull },\r\n    ]\r\n\r\n    constructor() {\r\n        this.correspondingBracket[TokenType.leftBracket] = TokenType.rightBracket;\r\n        this.correspondingBracket[TokenType.leftCurlyBracket] = TokenType.rightCurlyBracket;\r\n        this.correspondingBracket[TokenType.leftSquareBracket] = TokenType.rightSquareBracket;\r\n        this.correspondingBracket[TokenType.rightBracket] = TokenType.leftBracket;\r\n        this.correspondingBracket[TokenType.rightCurlyBracket] = TokenType.leftCurlyBracket;\r\n        this.correspondingBracket[TokenType.rightSquareBracket] = TokenType.leftSquareBracket;\r\n    }\r\n\r\n    lex(input: string): { tokens: TokenList, errors: Error[], bracketError: string } {\r\n\r\n        this.input = input.replace(\"\\u00a0\", \" \");\r\n        this.tokenList = [];\r\n        this.errorList = [];\r\n        this.bracketError = null;\r\n        this.bracketStack = [];\r\n        this.pos = 0;\r\n        this.line = 1;\r\n        this.column = 1;\r\n        this.nonSpaceLastTokenType = null;\r\n        this.nonSpaceLastToken = null;\r\n\r\n\r\n        if (input.length == 0) {\r\n            return { tokens: this.tokenList, errors: this.errorList, bracketError: null };\r\n        }\r\n\r\n        this.currentChar = input.charAt(0);\r\n\r\n        this.nextChar = input.length > 1 ? input.charAt(1) : endChar;\r\n\r\n\r\n        while (this.currentChar != endChar) {\r\n            this.mainState();\r\n        }\r\n\r\n        if (this.bracketStack.length > 0) {\r\n            let bracketOpen = this.bracketStack.pop();\r\n            let bracketClosed = this.correspondingBracket[bracketOpen];\r\n\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[bracketClosed]);\r\n        }\r\n\r\n        return {\r\n            tokens: this.tokenList,\r\n            errors: this.errorList,\r\n            bracketError: this.bracketError\r\n        };\r\n\r\n    }\r\n\r\n    checkClosingBracket(tt: TokenType) {\r\n        if (this.bracketStack.length == 0) {\r\n            let bracketOpen = this.correspondingBracket[tt];\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[tt]);\r\n            return;\r\n        }\r\n        let openBracket = this.bracketStack.pop();\r\n        let correspondingBracket = this.correspondingBracket[openBracket];\r\n        if (tt != correspondingBracket) {\r\n            this.setBracketError(TokenTypeReadable[openBracket] + \" \" + TokenTypeReadable[correspondingBracket]);\r\n        }\r\n    }\r\n\r\n    setBracketError(error: string) {\r\n        if (this.bracketError == null) this.bracketError = error;\r\n    }\r\n\r\n    next() {\r\n        this.pos++;\r\n        this.currentChar = this.nextChar;\r\n        if (this.pos + 1 < this.input.length) {\r\n            this.nextChar = this.input.charAt(this.pos + 1);\r\n        } else {\r\n            this.nextChar = endChar;\r\n        }\r\n        this.column++; // column of current char\r\n    }\r\n\r\n\r\n\r\n    mainState() {\r\n\r\n        let char = this.currentChar;\r\n\r\n        let specialCharToken = specialCharList[char];\r\n\r\n        if (specialCharToken != null) {\r\n            switch (specialCharToken) {\r\n                case TokenType.leftSquareBracket:\r\n                    if (this.nextChar == \"]\") {\r\n                        this.pushToken(TokenType.leftRightSquareBracket, \"[]\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.leftSquareBracket, \"[\");\r\n                        this.bracketStack.push(specialCharToken);\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.division:\r\n                    if (this.nextChar == '*') {\r\n                        this.lexMultilineComment();\r\n                        return;\r\n                    }\r\n                    this.pushToken(TokenType.division, '/');\r\n                    this.next();\r\n                    return;\r\n                case TokenType.pipe:\r\n                    if (this.nextChar == \"|\") {\r\n                        this.pushToken(TokenType.concatenation, '||');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.pipe, '|');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.lower:\r\n                    if (this.nextChar == \">\") {\r\n                        this.pushToken(TokenType.notEqual, '<>');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == \"=\"){\r\n                        this.pushToken(TokenType.lowerOrEqual, '<=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                    else {\r\n                        this.pushToken(TokenType.lower, '<');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.greater:\r\n                    if (this.nextChar == \"=\"){\r\n                        this.pushToken(TokenType.greaterOrEqual, '>=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                    else {\r\n                        this.pushToken(TokenType.greater, '>');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.rightSquareBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.minus:\r\n                    if (this.isDigit(this.nextChar, 10) && !\r\n                        ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.rightBracket].indexOf(this.nonSpaceLastTokenType) >= 0)\r\n                    ) {\r\n                        this.lexNumber();\r\n                        return;\r\n                    } else if (this.nextChar == '-') {\r\n                        this.lexEndofLineComment(\"--\");\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.minus, '-');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.hash:\r\n                    if(this.nonSpaceLastToken == null || this.nonSpaceLastToken.position.line < this.line){\r\n                        this.lexEndofLineComment('#');\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.hash, \"#\");\r\n                        this.next();\r\n                    }\r\n                    break;\r\n                case TokenType.singleQuote:\r\n                    this.lexStringConstant(\"'\");\r\n                    return;\r\n                case TokenType.doubleQuote:\r\n                    this.lexStringConstant('\"');\r\n                    return;\r\n                case TokenType.newline:\r\n                    this.pushToken(TokenType.newline, '\\n');\r\n                    this.line++;\r\n                    this.column = 0;\r\n                    this.next();\r\n                    return;\r\n                case TokenType.space:\r\n                case TokenType.tab:\r\n                    this.lexSpace();\r\n                    return;\r\n                case TokenType.linefeed:\r\n                    this.next();\r\n                    return;\r\n                case TokenType.at:\r\n                    this.lexAnnotation();\r\n                    return;\r\n                case TokenType.identifierQuote:\r\n                    this.lexQuotedIdentifier();\r\n                    return;\r\n                \r\n            }\r\n\r\n            this.pushToken(specialCharToken, char);\r\n            this.next();\r\n            return;\r\n\r\n        }\r\n\r\n        // no special char. Number?\r\n\r\n        if (this.isDigit(char, 10)) {\r\n            this.lexNumber();\r\n            return;\r\n        }\r\n\r\n        this.lexIdentifierOrKeyword();\r\n\r\n    }\r\n\r\n\r\n    lexQuotedIdentifier() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let s: string = \"\";\r\n        this.next();\r\n        while(this.currentChar != '`' && this.currentChar != endChar){\r\n            s += this.currentChar;\r\n            this.next();\r\n        }\r\n        if(this.currentChar == endChar){\r\n            this.pushError(\"Innerhalb eines in `` eingeschlossenen Bezeichners wurde das Ende der Datei erreicht.\", s.length + 1, \"error\", line, column);\r\n        } else {\r\n            this.next(); // skip `\r\n            this.pushToken(TokenType.identifier, s, line, column);\r\n        }\r\n    }\r\n\r\n    pushToken(tt: TokenType, text: string | number | boolean, line: number = this.line, column: number = this.column, length: number = (\"\" + text).length) {\r\n        let t: Token = {\r\n            tt: tt,\r\n            value: text,\r\n            position: {\r\n                column: column,\r\n                line: line,\r\n                length: length\r\n            }\r\n        }\r\n\r\n        for (let tripel of this.tokenTypesToMerge) {\r\n            if (tt == tripel.second && this.nonSpaceLastTokenType == tripel.first) {\r\n                let newLength = column - this.nonSpaceLastToken.position.column + length;\r\n                this.nonSpaceLastToken.tt = tripel.merged;\r\n                this.nonSpaceLastToken.position = { column: this.nonSpaceLastToken.position.column, line: line, length: newLength };\r\n                this.nonSpaceLastToken.value = this.nonSpaceLastToken.value + \" \" + text;\r\n\r\n                this.nonSpaceLastTokenType = tripel.merged;\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (!(this.spaceTokens.indexOf(tt) >= 0)) {\r\n            this.nonSpaceLastTokenType = tt;\r\n            this.nonSpaceLastToken = t;\r\n        }\r\n\r\n        this.tokenList.push(t);\r\n    }\r\n\r\n    pushError(text: string, length: number, errorLevel: ErrorLevel = \"error\", line: number = this.line, column: number = this.column) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: {\r\n                line: line,\r\n                column: column,\r\n                length: length\r\n            },\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n\r\n\r\n    isDigit(a: string, base: number) {\r\n        var charCode = a.charCodeAt(0);\r\n\r\n        if (base == 10) return (charCode >= 48 && charCode <= 57); // 0 - 9\r\n        if (base == 2) return (charCode >= 48 && charCode <= 49); // 0, 1\r\n        if (base == 8) return (charCode >= 48 && charCode <= 55); // 0 - 7\r\n        if (base == 16) return (charCode >= 48 && charCode <= 57) || (charCode >= 97 && charCode <= 102) ||\r\n            (charCode >= 65 && charCode <= 70); // 0 - 9 || a - f || A - F\r\n    }\r\n\r\n    lexSpace() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n\r\n        let posStart = this.pos;\r\n        while (this.currentChar == \" \" || this.currentChar == \"\\t\") {\r\n            this.next();\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n        this.pushToken(TokenType.space, this.input.substring(posStart, posEnd), line, column);\r\n        return;\r\n\r\n    }\r\n\r\n    lexCharacterConstant() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n        this.next();\r\n        let char = this.currentChar;\r\n        if (char == \"\\\\\") {\r\n            let escapeChar = EscapeSequenceList[this.nextChar];\r\n            if (escapeChar == null) {\r\n                this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                if (this.nextChar != \"'\") {\r\n                    char = this.nextChar;\r\n                    this.next();\r\n                }\r\n            } else {\r\n                char = escapeChar;\r\n                this.next();\r\n            }\r\n        }\r\n        this.next();\r\n        if (this.currentChar != \"'\") {\r\n            this.pushError(\"Das Ende der char-Konstante wird erwartet (').\", 1);\r\n        } else {\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.charConstant, char, line, column);\r\n\r\n    }\r\n\r\n    lexStringConstant(beginChar: string) {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let text = \"\";\r\n\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\\\\") {\r\n                let escapeChar = EscapeSequenceList[this.nextChar];\r\n                if (escapeChar == null) {\r\n                    this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                } else {\r\n                    char = escapeChar;\r\n                    this.next();\r\n                }\r\n            } else if (char == beginChar) {\r\n                this.next();\r\n                if(this.currentChar != beginChar){\r\n                    break;\r\n                }\r\n                text += beginChar;\r\n            } else if (char == \"\\n\" || char == endChar) {\r\n                this.pushError('Innerhalb einer String-Konstante wurde das Zeilenende erreicht.', text.length + 1, \"error\", line, column);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        if (beginChar == \"'\") {\r\n            this.pushToken(TokenType.stringConstant, text, line, column, text.length + 2);\r\n        } else {\r\n            this.pushToken(TokenType.identifier, text, line, column, text.length + 2);\r\n            this.tokenList[this.tokenList.length - 1].isDoubleQuotedIdentifier = true;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    lexMultilineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let lastCharWasNewline: boolean = false;\r\n\r\n        let text = \"/*\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"*\" && this.nextChar == \"/\") {\r\n                this.next();\r\n                this.next();\r\n                text += \"*/\";\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                this.pushError(\"Innerhalb eines Mehrzeilenkommentars (/*... */) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            if (char == \"\\n\") {\r\n                this.line++;\r\n                this.column = 0;\r\n                lastCharWasNewline = true;\r\n                text += char;\r\n            } else if (!(lastCharWasNewline && char == \" \")) {\r\n                text += char;\r\n                lastCharWasNewline = false;\r\n            }\r\n\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n    lexEndofLineComment(commentStart: string) {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let text = commentStart;\r\n        for(let i = 0; i < commentStart.length; i++){\r\n            this.next();\r\n        }\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\n\") {\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                // this.pushError(\"Innerhalb eines Einzeilenkommentars (//... ) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n\r\n    lexNumber() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let sign: number = 1;\r\n        if (this.currentChar == '-') {\r\n            sign = -1;\r\n            this.next();\r\n        }\r\n\r\n        let posStart = this.pos;\r\n\r\n        let firstChar = this.currentChar;\r\n\r\n        this.next();\r\n\r\n        let radix: number = 10;\r\n\r\n        if (firstChar == '0' && (['b', 'x', '0', '1', '2', '3', '4', '5', '6', '7'].indexOf(this.currentChar) >= 0)) {\r\n            if (this.currentChar == 'x') {\r\n                radix = 16;\r\n                this.next();\r\n            } else if (this.currentChar == 'b') {\r\n                radix = 2;\r\n                this.next();\r\n            } else radix = 8;\r\n            posStart = this.pos;\r\n        }\r\n\r\n        while (this.isDigit(this.currentChar, radix)) {\r\n            this.next();\r\n        }\r\n\r\n        let tt = TokenType.integerConstant;\r\n\r\n        if (this.currentChar == \".\") {\r\n            tt = TokenType.floatingPointConstant;\r\n\r\n            this.next();\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n\r\n        }\r\n\r\n        let base = this.input.substring(posStart, this.pos);\r\n\r\n        posStart = this.pos;\r\n        let exponent: number = 0;\r\n\r\n        let hasExponential: boolean = false;\r\n        //@ts-ignore\r\n        if (this.currentChar == \"e\") {\r\n            hasExponential = true;\r\n            this.next();\r\n            let posExponentStart: number = this.pos;\r\n\r\n            //@ts-ignore\r\n            if (this.currentChar == '-') {\r\n                this.next();\r\n            }\r\n\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n            let exponentString = this.input.substring(posExponentStart, this.pos);\r\n            exponent = Number.parseInt(exponentString);\r\n        }\r\n\r\n        if (this.currentChar == 'd' || this.currentChar == 'f') {\r\n            tt == TokenType.floatingPointConstant;\r\n            this.next();\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n        }\r\n\r\n        let value: number = (tt == TokenType.integerConstant) ? Number.parseInt(base, radix) : Number.parseFloat(base);\r\n        value *= sign;\r\n        if (exponent != 0) value *= Math.pow(10, exponent);\r\n\r\n        this.pushToken(tt, value, line, column);\r\n\r\n    }\r\n\r\n    lexAnnotation() {\r\n        let line = this.line;\r\n        let column = this.column - 1;\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n        this.next(); // skip@\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n        this.pushToken(TokenType.at, text, line, column, text.length + 1);\r\n    }\r\n\r\n    lexIdentifierOrKeyword() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n\r\n        let tt = keywordList[text.toLowerCase()];\r\n        if (tt != null && typeof tt == \"number\") {\r\n\r\n            switch (tt) {\r\n                case TokenType.true:\r\n                    this.pushToken(TokenType.booleanConstant, true, line, column);\r\n                    break;\r\n                case TokenType.false:\r\n                    this.pushToken(TokenType.booleanConstant, false, line, column);\r\n                    break;\r\n                default:\r\n                    this.pushToken(tt, text, line, column);\r\n                    break;\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        this.pushToken(TokenType.identifier, text, line, column);\r\n\r\n    }\r\n\r\n    isSpace(char: string): boolean {\r\n        return char == \" \" || char == \"\\n\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport function errorListToString(errorList: Error[]): string {\r\n    let s = \"\";\r\n\r\n    for (let error of errorList) {\r\n\r\n        s += \"Z \" + error.position.line + \", S \" + error.position.column + \": \";\r\n        s += error.text + \"<br>\";\r\n\r\n    }\r\n\r\n    return s;\r\n}","import { TokenType } from \"../lexer/Token.js\";\r\n\r\ntype CheckFunction = (columnIdentifier: string, parameterValues: number[]) => string;\r\ntype OutputFunction = (value: any, parameterValues: number[]) => string;\r\n\r\nexport abstract class SQLType {\r\n\r\n    abstract canCastTo(type2: SQLType): boolean;\r\n\r\n    abstract getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType;\r\n\r\n    abstract getUnaryResultType(operator: TokenType): SQLType;\r\n\r\n    abstract getBinaryResult(operator: TokenType, value1: any, value2: any): any;\r\n\r\n    abstract toString(): string;\r\n\r\n    abstract getBaseTypeName(): string;\r\n\r\n}\r\n\r\nexport class SQLBaseType extends SQLType {\r\n    // Map<tokenType, Map<SecondType, ResultType>>\r\n    binaryResultTypes: Map<TokenType, Map<SQLBaseType, SQLBaseType>> = new Map();\r\n\r\n    unaryOperators: TokenType[] = [];\r\n\r\n    static baseTypes: SQLBaseType[] = [];\r\n    static baseTypeMap: Map<string, SQLBaseType> = new Map();\r\n\r\n    public canCastToList: string[];\r\n\r\n    constructor(public name: string, public parameterDescriptions: string[],\r\n        public checkFunction: CheckFunction, public outputFunction: OutputFunction, canCastToList: string[]) {\r\n        super();\r\n        this.canCastToList = canCastToList.slice(0);\r\n        let ownIndex = this.canCastToList.indexOf(name);\r\n        if(ownIndex >= 0) this.canCastToList.splice(ownIndex, 1);\r\n    }\r\n\r\n    static fromConstantType(tt: TokenType): SQLBaseType {\r\n        switch (tt) {\r\n            case TokenType.stringConstant:\r\n                return this.baseTypeMap.get(\"text\");\r\n            case TokenType.integerConstant:\r\n                return this.baseTypeMap.get(\"integer\");\r\n            case TokenType.floatingPointConstant:\r\n                return this.baseTypeMap.get(\"float\");\r\n            case TokenType.charConstant:\r\n                return this.baseTypeMap.get(\"text\");\r\n            case TokenType.booleanConstant:\r\n                return this.baseTypeMap.get(\"boolean\");\r\n            case TokenType.keywordNull:\r\n                return this.baseTypeMap.get(\"null\");\r\n        \r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    getBaseTypeName(): string {\r\n        return this.name;\r\n    }\r\n\r\n    toString(): string {\r\n        return this.name;\r\n    }\r\n\r\n    static getBaseType(name: string) {\r\n        if(name != null && name.toLocaleLowerCase() == 'char'){\r\n            name = 'varchar';\r\n            \r\n        } \r\n        return this.baseTypeMap.get(name.toLocaleLowerCase());\r\n    }\r\n\r\n    static addBaseTypes(baseTypes: SQLBaseType[]) {\r\n        SQLBaseType.baseTypes = SQLBaseType.baseTypes.concat(baseTypes);\r\n        baseTypes.forEach(t => SQLBaseType.baseTypeMap.set(t.name, t));\r\n    }\r\n\r\n    addBinaryOperation(tokenType: TokenType | TokenType[], secondType: SQLBaseType, resultType: SQLBaseType, isCommutative: boolean = true) {\r\n\r\n        if (!Array.isArray(tokenType)) tokenType = [tokenType];\r\n\r\n        tokenType.forEach(t => {\r\n            let map: Map<SQLBaseType, SQLBaseType> = this.binaryResultTypes.get(t);\r\n            if (map == null) {\r\n                map = new Map();\r\n                this.binaryResultTypes.set(t, map);\r\n            }\r\n            map.set(secondType, resultType);\r\n            if (isCommutative && secondType != this) {\r\n                secondType.addBinaryOperation(t, this, resultType, false);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    canCastTo(type2: SQLType): boolean {\r\n\r\n        let bt2: SQLBaseType = type2 instanceof SQLBaseType ? type2 : type2[\"baseType\"];\r\n\r\n        return this.canCastToList.indexOf(bt2.name) >= 0 || this.name == bt2.name;\r\n\r\n    }\r\n\r\n    getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType {\r\n\r\n\r\n        let map = this.binaryResultTypes.get(operator);\r\n        if (map == null) return null;\r\n\r\n        let bt2: SQLBaseType = secondType instanceof SQLBaseType ? secondType : secondType[\"baseType\"];\r\n\r\n        return map.get(bt2);\r\n\r\n    }\r\n\r\n    getUnaryResultType(operator: TokenType): SQLType {\r\n        if([TokenType.isNull, TokenType.isNotNull].indexOf(operator) >= 0) return booleanType;\r\n        if(this.unaryOperators.indexOf(operator)>= 0) return this;\r\n    }\r\n\r\n    getBinaryResult(operator: TokenType, value1: any, value2: any): any {\r\n        switch (operator) {\r\n            case TokenType.concatenation:\r\n                if (value1 != null && value2 != null) return value1 + value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.plus:\r\n                if (value1 != null && value2 != null) return value1 + value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.minus:\r\n                if (value1 != null && value2 != null) return value1 - value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.multiplication:\r\n                if (value1 != null && value2 != null) return value1 * value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.division:\r\n                if (value1 != null && value2 != null) return value1 * value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.keywordAnd:\r\n                if (value1 != null && value2 != null) return value1 * value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.keywordOr:\r\n                if (value1 != null && value2 != null) return Math.max(value1, value2);\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.lower:\r\n                if (value1 != null && value2 != null) return value1 < value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.greater:\r\n                if (value1 != null && value2 != null) return value1 >= value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.lowerOrEqual:\r\n                if (value1 != null && value2 != null) return value1 <= value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.greaterOrEqual:\r\n                if (value1 != null && value2 != null) return value1 >= value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.equal:\r\n                return value1 == value2;\r\n            case TokenType.notEqual:\r\n                return value1 != value2;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nlet tens: number[] = [1, 10, 100, 1000, 100000, 100000, 1000000, 10000000, 100000000, 1000000000];\r\n\r\nexport class SQLDerivedType extends SQLType {\r\n\r\n    name: string;\r\n\r\n    constructor(public baseType: SQLBaseType, public parameterValues: number[]) {\r\n        super();\r\n        let parameters = parameterValues.join(\", \");\r\n        this.name = baseType.name + \"(\" + parameters + \")\";\r\n    }\r\n\r\n    toString(): string {\r\n        return this.name;\r\n    }\r\n\r\n    getBaseTypeName(): string {\r\n        return this.baseType.name;\r\n    }\r\n\r\n\r\n    canCastTo(type2: SQLType): boolean {\r\n\r\n        let bt2: SQLBaseType = type2 instanceof SQLBaseType ? type2 : type2[\"baseType\"];\r\n\r\n        return this.baseType.canCastToList.indexOf(bt2.name) >= 0 || this.baseType.name == bt2.name;\r\n\r\n    }\r\n\r\n    getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType {\r\n\r\n\r\n        let map = this.baseType.binaryResultTypes.get(operator);\r\n        if (map == null) return null;\r\n\r\n        let bt2: SQLBaseType = secondType instanceof SQLBaseType ? secondType : secondType[\"baseType\"];\r\n\r\n        let returnBaseType = map.get(bt2);\r\n\r\n        if (this.baseType == bt2 && this.baseType == returnBaseType && secondType instanceof SQLDerivedType) {\r\n            if (this.baseType.name == \"varchar\" || operator == TokenType.concatenation) {\r\n                return new SQLDerivedType(this.baseType, [this.parameterValues[0] + secondType.parameterValues[0]]);\r\n            }\r\n            if (this.baseType.name == \"decimal\") {\r\n                return new SQLDerivedType(this.baseType, [Math.max(this.parameterValues[0], secondType.parameterValues[0]), Math.max(this.parameterValues[1], secondType.parameterValues[1])]);\r\n            }\r\n        }\r\n\r\n        return map.get(bt2);\r\n\r\n    }\r\n\r\n    getUnaryResultType(operator: TokenType): SQLType {\r\n        return this.baseType.getUnaryResultType(operator);\r\n    }\r\n\r\n    getBinaryResult(operator: TokenType, value1: any, value2: any): any {\r\n        let result = this.baseType.getBinaryResult(operator, value1, value2);\r\n        if (this.name = \"varchar\") return result == null ? null : (\"\" + result).substr(0, this.parameterValues[0]);\r\n        if (this.name == \"decimal\") {\r\n            if (result == null) return null;\r\n            return Math.round(result * tens[this.parameterValues[1]]) / tens[this.parameterValues[1]];\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nlet textTypes = [\"varchar\", \"char\", \"text\" ,\"tinytext\", \"mediumtext\", \"longtext\"];\r\n\r\nvar varcharType = new SQLBaseType(\"varchar\", [\"Maximale Länge\"], (ci, pv) => `check(length(${ci}) <= ${Math.max(pv[0], 1)})`,\r\n    (v: string, pv) => v.substring(0, Math.max(pv[0], 1)), textTypes);\r\n    \r\nvar charType = new SQLBaseType(\"char\", [\"Maximale Länge\"], (ci, pv) => `check(length(${ci}) <= ${Math.max(pv[0], 1)})`,\r\n    (v: string, pv) => v.substring(0, Math.max(pv[0], 1)), textTypes);\r\n\r\nvar textType = new SQLBaseType(\"text\", [\"Maximale Länge\"], (ci, pv) => \"\", (v: string, pv) => v, textTypes.concat([\"time\", \"date\", \"datetime\", \"timestamp\"]));\r\nvar tinyTextType = new SQLBaseType(\"tinyText\", [], (ci, pv) => \"\", (v: string, pv) => v, textTypes);\r\nvar mediumTextType = new SQLBaseType(\"mediumText\", [], (ci, pv) => \"\", (v: string, pv) => v, textTypes);\r\nvar longTextType = new SQLBaseType(\"longText\", [], (ci, pv) => \"\", (v: string, pv) => v, textTypes);\r\n\r\nlet floatTypes = [\"decimal\", \"numeric\", \"double\", \"real\", \"float\"];\r\n\r\nvar decimalType = new SQLBaseType(\"decimal\", [\"Gesamtzahl der Stellen\", \"Nachkommastellen\"], (ci, pv) => \"\",\r\n    (v: number, pv) => { let vk = Math.trunc(v); let nk = v - vk; return \"\" + vk + (pv[1] > 0 ? \".\" + Math.round(nk * tens[pv[1]]) : \"\") },\r\n    floatTypes);\r\nvar numericType = new SQLBaseType(\"numeric\", [\"Gesamtzahl der Stellen\", \"Nachkommastellen\"], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\nvar doubleType = new SQLBaseType(\"double\", [\"Gesamtzahl der Stellen\", \"Nachkommastellen\"], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\nvar realType = new SQLBaseType(\"real\", [], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\nvar floatType = new SQLBaseType(\"float\", [], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\n\r\nlet inttypes = [\"int\", \"integer\", \"tinyint\", \"smallint\", \"mediumint\", \"bigint\"];\r\nlet numberTypes = inttypes.concat(floatTypes);\r\n\r\nvar intType = new SQLBaseType(\"int\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar integerType = new SQLBaseType(\"integer\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar tinyIntType = new SQLBaseType(\"tinyint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar smallIntType = new SQLBaseType(\"smallint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar mediumIntType = new SQLBaseType(\"mediumint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar bigIntType = new SQLBaseType(\"bigint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\n\r\nvar timeType = new SQLBaseType(\"time\", [], (ci, pv) => `check(isTime(${ci}))`, (v: string, pv) => v, []);\r\nvar dateType = new SQLBaseType(\"date\", [], (ci, pv) => `check(isDate(${ci}))`, (v: string, pv) => v, []);\r\nvar dateTimeType = new SQLBaseType(\"datetime\", [], (ci, pv) => `check(isDateTime(${ci}))`, (v: string, pv) => v, [\"timestamp\"]);\r\nvar timestampType = new SQLBaseType(\"timestamp\", [], (ci, pv) => `check(isDateTime(${ci}))`, (v: string, pv) => v, [\"datetime\"]);\r\n\r\n\r\nvar booleanType = new SQLBaseType(\"boolean\", [], (ci, pv) => `check(${ci} == 0 or ${ci} == 1)`, (v, pv) => v == 1 ? \"true\" : \"false\",\r\n    [\"varchar\", \"text\", \"decimal\", \"numeric\"]);\r\n\r\nvar nullType = new SQLBaseType(\"null\", [], (ci, pv) => \"\", (v, pv) => v,\r\n    []);\r\n\r\nlet numericTypes = [decimalType, numericType, doubleType, realType, floatType, intType, integerType, tinyIntType, smallIntType, mediumIntType, bigIntType];\r\n\r\nlet baseTypes = [varcharType, charType, textType, tinyTextType, mediumTextType, longTextType,\r\n    timeType, dateType, dateTimeType, timestampType, booleanType, nullType].concat(numericTypes);\r\n\r\nlet timeTypes = [timeType, dateType, dateTimeType, timestampType];\r\n\r\nSQLBaseType.addBaseTypes(baseTypes);\r\n\r\nvarcharType.addBinaryOperation(TokenType.concatenation, varcharType, varcharType);\r\nvarcharType.addBinaryOperation(TokenType.concatenation, charType, varcharType);\r\nvarcharType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\ntextType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\nvarcharType.addBinaryOperation(TokenType.keywordLike, varcharType, booleanType);\r\nvarcharType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\ntextType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\n\r\ncharType.addBinaryOperation(TokenType.concatenation, charType, charType);\r\ncharType.addBinaryOperation(TokenType.concatenation, varcharType, charType);\r\ncharType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\ntextType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\ncharType.addBinaryOperation(TokenType.keywordLike, charType, booleanType);\r\ncharType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\ntextType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\n\r\nlet numericBinaryOperators: TokenType[] = [TokenType.plus, TokenType.minus, TokenType.multiplication, TokenType.division, TokenType.modulo];\r\nlet comparisonOperators: TokenType[] = [TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual];\r\n\r\nfor (let i = 0; i < numericTypes.length; i++) {\r\n    for (let j = i; j < numericTypes.length; j++) {\r\n        numericTypes[i].addBinaryOperation(numericBinaryOperators, numericTypes[j], numericTypes[j]);\r\n        numericTypes[i].addBinaryOperation(comparisonOperators, numericTypes[j], booleanType);\r\n    }\r\n    numericTypes[i].unaryOperators = [TokenType.minus];\r\n}\r\n\r\ndecimalType.addBinaryOperation(numericBinaryOperators, decimalType, decimalType);\r\n\r\nlet characterTypes = [varcharType, textType];\r\nfor (let i = 0; i < characterTypes.length; i++) {\r\n    for (let j = i; j < characterTypes.length; j++) {\r\n        characterTypes[i].addBinaryOperation(TokenType.concatenation, characterTypes[j], characterTypes[j]);\r\n        characterTypes[i].addBinaryOperation(comparisonOperators, characterTypes[j], booleanType);\r\n    }\r\n}\r\n\r\nfor(let i = 0; i < timeTypes.length; i++){\r\n    timeTypes[i].addBinaryOperation(comparisonOperators, timeTypes[i], booleanType);\r\n    for(let j = 0; j < characterTypes.length; j++){\r\n        timeTypes[i].addBinaryOperation(comparisonOperators, characterTypes[j], booleanType);\r\n        characterTypes[j].addBinaryOperation(comparisonOperators, timeTypes[i], booleanType);\r\n    }\r\n}\r\n\r\nlet booleanOperations = [TokenType.keywordAnd, TokenType.keywordOr];\r\nbooleanType.addBinaryOperation(booleanOperations, booleanType, booleanType);\r\n\r\nbooleanType.unaryOperators = [TokenType.keywordNot];\r\n\r\nbaseTypes.forEach(bt => bt.unaryOperators = bt.unaryOperators.concat([TokenType.isNull, TokenType.isNotNull]));","import { param, timers } from \"jquery\";\r\nimport { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenList, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { ASTNode, BracketsNode, SelectNode, TermNode, TableOrSubqueryNode, TableNode, SubqueryNode, GroupByNode, OrderByNode, LimitNode, IdentifierNode, DotNode, ListNode, ColumnNode, InsertNode, ConstantNode, UnaryOpNode, CreateTableNode, CreateTableColumnNode, ForeignKeyInfo, UpdateNode, DeleteNode, DropTableNode, AlterTableNode, AlterTableKind, OmittedStatementNode } from \"./AST.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { Column } from \"./SQLTable.js\";\r\nimport { SQLBaseType } from \"./SQLTypes.js\";\r\n\r\nexport type SQLStatement = {\r\n    ast: ASTNode,\r\n    from: TextPosition,\r\n    to: TextPosition,\r\n    hasErrors: boolean,\r\n    acceptedBySQLite: boolean,\r\n    sql?: string,\r\n    sqlCleaned?: string\r\n}\r\n\r\n\r\nexport class Parser {\r\n\r\n    static operatorPrecedence: TokenType[][] = [\r\n        [TokenType.keywordOr], [TokenType.keywordAnd],\r\n        [TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual, TokenType.keywordLike],\r\n        [TokenType.concatenation, TokenType.plus, TokenType.minus], [TokenType.multiplication, TokenType.division, TokenType.modulo],\r\n        [TokenType.keywordIn, TokenType.keywordNotIn]\r\n    ];\r\n\r\n    module: Module;\r\n\r\n    pos: number;\r\n    tokenList: TokenList;\r\n\r\n    errorList: Error[];\r\n\r\n    lookahead = 4;\r\n    ct: Token[];\r\n    lastToken: Token;\r\n    cct: Token;\r\n    tt: TokenType;\r\n    position: TextPosition;\r\n    lastComment: Token;\r\n\r\n    endToken: Token = {\r\n        position: { line: 0, column: 0, length: 1 },\r\n        tt: TokenType.endofSourcecode,\r\n        value: \"das Ende des Programms\"\r\n    };\r\n\r\n    beginStatementKeywords = [\"select\", \"insert into\", \"update\", \"create table\", \"delete from\", \"alter table\", \"drop table\"];\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    parse(m: Module) {\r\n\r\n        this.module = m;\r\n\r\n        this.tokenList = m.tokenList;\r\n        this.errorList = [];\r\n\r\n        m.completionHints = new Map();\r\n\r\n        if (this.tokenList.length == 0) {\r\n            this.module.sqlStatements = [];\r\n            this.module.errors[1] = this.errorList;\r\n            this.module.addCompletionHint({ line: 0, column: 0, length: 0 }, { line: 20000, column: 100, length: 0 }, false, false,\r\n                this.beginStatementKeywords);\r\n            return;\r\n        }\r\n\r\n        this.pos = 0;\r\n        this.initializeLookahead();\r\n\r\n\r\n        let lastToken = this.tokenList[this.tokenList.length - 1];\r\n        this.endToken.position = { line: lastToken.position.line, column: lastToken.position.column + lastToken.position.length, length: 1 };\r\n\r\n        this.module.sqlStatements = this.parseMain();\r\n\r\n        this.module.errors[1] = this.errorList;\r\n\r\n    }\r\n\r\n    initializeLookahead() {\r\n\r\n        this.ct = [];\r\n\r\n        for (let i = 0; i < this.lookahead; i++) {\r\n\r\n            let token: Token = this.endToken;\r\n\r\n            while (true) {\r\n\r\n                if (this.pos >= this.tokenList.length) break;\r\n\r\n                let token1 = this.tokenList[this.pos]\r\n                if (token1.tt == TokenType.comment) {\r\n                    this.lastComment = token1;\r\n                }\r\n\r\n                if (token1.tt != TokenType.newline && token1.tt != TokenType.space && token1.tt != TokenType.comment) {\r\n                    token = token1;\r\n                    if (this.lastComment != null) {\r\n                        token.commentBefore = this.lastComment;\r\n                        this.lastComment = null;\r\n                    }\r\n                    break;\r\n                }\r\n\r\n                this.pos++;\r\n\r\n            }\r\n\r\n            this.ct.push(token);\r\n\r\n            if (i < this.lookahead - 1) {\r\n                this.pos++;\r\n            }\r\n\r\n        }\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    nextToken() {\r\n\r\n        let token: Token;\r\n        this.lastToken = this.cct;\r\n\r\n        while (true) {\r\n\r\n            this.pos++;\r\n\r\n            if (this.pos >= this.tokenList.length) {\r\n                token = this.endToken;\r\n                break;\r\n            }\r\n\r\n            token = this.tokenList[this.pos]\r\n            if (token.tt == TokenType.comment) {\r\n                this.lastComment = token;\r\n            }\r\n\r\n            if (token.tt != TokenType.newline && token.tt != TokenType.space && token.tt != TokenType.comment) {\r\n                token.commentBefore = this.lastComment;\r\n                this.lastComment = null;\r\n                break;\r\n            }\r\n\r\n        }\r\n\r\n        for (let i = 0; i < this.lookahead - 1; i++) {\r\n            this.ct[i] = this.ct[i + 1];\r\n        }\r\n\r\n        this.ct[this.lookahead - 1] = token;\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position?: TextPosition, quickFix?: QuickFix) {\r\n        if (position == null) position = Object.assign({}, this.position);\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    skip(tt: TokenType | TokenType[]) {\r\n        if (!Array.isArray(tt)) tt = [tt];\r\n        if (tt.indexOf(this.tt) >= 0) this.nextToken();\r\n    }\r\n\r\n    expect(tt: TokenType | TokenType[], skip: boolean = true, invokeSemicolonAngel: boolean = false): boolean {\r\n        if (this.tt != tt && !(Array.isArray(tt) && tt.indexOf(this.tt) >= 0)) {\r\n            if (tt == TokenType.semicolon && this.tt == TokenType.endofSourcecode) {\r\n                return true;\r\n            }\r\n\r\n            let position: TextPosition = this.cct.position;\r\n            if (tt == TokenType.semicolon && this.lastToken != null) {\r\n\r\n                if (this.lastToken.position.line < position.line) {\r\n                    position = {\r\n                        line: this.lastToken.position.line,\r\n                        column: this.lastToken.position.column + this.lastToken.position.length,\r\n                        length: 1\r\n                    }\r\n                }\r\n            }\r\n\r\n            let quickFix: QuickFix = null;\r\n            if (tt == TokenType.semicolon && this.lastToken.position.line < this.cct.position.line &&\r\n                !this.isOperatorOrDot(this.lastToken.tt)\r\n            ) {\r\n                quickFix = {\r\n                    title: 'Strichpunkt hier einfügen',\r\n                    editsProvider: (uri) => {\r\n                        return [{\r\n                            resource: uri,\r\n                            edit: {\r\n                                range: {\r\n                                    startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position.column,\r\n                                    message: \"\",\r\n                                    severity: monaco.MarkerSeverity.Error\r\n                                },\r\n                                text: \";\"\r\n                            }\r\n                        }\r\n                        ];\r\n                    }\r\n                }\r\n\r\n                if (invokeSemicolonAngel) {\r\n                    this.module.main.getSemicolonAngel().register(position, this.module);\r\n                }\r\n            }\r\n\r\n            let expectedValuesArray: string[];\r\n\r\n            if (Array.isArray(tt)) {\r\n                expectedValuesArray = tt.map(token => TokenTypeReadable[token]);\r\n                let expectedTokens = expectedValuesArray.join(\", \");\r\n                this.pushError(\"Erwartet wird eines der folgenden: \" + expectedTokens + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            } else {\r\n                expectedValuesArray = [TokenTypeReadable[tt]];\r\n                this.pushError(\"Erwartet wird: \" + TokenTypeReadable[tt] + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            }\r\n\r\n            // if (!Array.isArray(tt) && tt != TokenType.identifier) {\r\n            //     this.module.addCompletionHint(this.getEndOfPosition(this.lastToken.position), this.getCurrentPositionPlus(1), false, false, expectedValuesArray);\r\n            // }\r\n\r\n            return false;\r\n        }\r\n\r\n        if (skip) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    getEndOfPosition(p: TextPosition): TextPosition {\r\n        return {\r\n            line: p.line,\r\n            column: p.column + p.length,\r\n            length: 0\r\n        }\r\n    }\r\n\r\n    isOperatorOrDot(tt: TokenType): boolean {\r\n        if (tt == TokenType.dot) return true;\r\n        for (let op of Parser.operatorPrecedence) {\r\n            for (let operator of op) {\r\n                if (tt == operator) return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    isEnd(): boolean {\r\n        return this.cct == this.endToken;\r\n    }\r\n\r\n    comesToken(token: TokenType | TokenType[], skip: boolean = false): boolean {\r\n\r\n        if (!Array.isArray(token)) {\r\n            let ret: boolean = this.tt == token;\r\n            if (ret && skip) this.nextToken();\r\n            return ret;\r\n        }\r\n\r\n        return token.indexOf(this.tt) >= 0;\r\n\r\n    }\r\n\r\n    getCurrentPosition(): TextPosition {\r\n        return Object.assign({}, this.position);\r\n    }\r\n\r\n    getCurrentPositionPlus(deltaColumns: number): TextPosition {\r\n\r\n        if (this.tt == TokenType.endofSourcecode) {\r\n            return {\r\n                line: this.endToken.position.line,\r\n                column: 100,\r\n                length: 1\r\n            }\r\n        }\r\n\r\n        // get Token in which new position falls:\r\n        let tpos = 0;\r\n        let deltaInsideToken = deltaColumns;\r\n        let length = 0;\r\n        while (tpos < this.lookahead - 1 && (length = this.ct[tpos].position.length) < deltaInsideToken) {\r\n            deltaInsideToken -= length;\r\n            tpos++;\r\n        }\r\n        let tokenPos = this.ct[tpos].position;\r\n        if (tokenPos == null) tokenPos = this.getCurrentPosition();\r\n\r\n        let pos: TextPosition = {\r\n            line: tokenPos.line,\r\n            column: tokenPos.column + deltaInsideToken,\r\n            length: 1\r\n        }\r\n\r\n        return pos;\r\n    }\r\n\r\n    getEndOfCurrentToken(): TextPosition {\r\n\r\n        let position = this.getCurrentPosition();\r\n        position.column = position.column + this.position.length;\r\n        position.length = 0;\r\n\r\n        return position;\r\n    }\r\n\r\n    parseMain(): SQLStatement[] {\r\n\r\n        let mainProgram: SQLStatement[] = [];\r\n\r\n        let mainProgramEnd: TextPosition = {\r\n            column: 0,\r\n            line: 10000,\r\n            length: 1\r\n        }\r\n\r\n        let afterLastStatement: TextPosition = {\r\n            column: 0,\r\n            line: 0,\r\n            length: 0\r\n        }\r\n\r\n        let semicolonAfterLastStatement: boolean = true;\r\n\r\n        this.module.addCompletionHint(afterLastStatement, this.getCurrentPositionPlus(8), false, false,\r\n            this.beginStatementKeywords);\r\n\r\n        while (!this.isEnd()) {\r\n\r\n            let oldPos = this.pos;\r\n\r\n            let errorsBeforeStatement: number = this.errorList.length;\r\n\r\n            while ([TokenType.space, TokenType.newline, TokenType.comment, TokenType.semicolon].indexOf(this.cct.tt) >= 0) {\r\n                this.nextToken();\r\n            }\r\n\r\n            let startPosition = this.getCurrentPosition();\r\n\r\n            let st = this.parseStatement();\r\n\r\n            afterLastStatement = {\r\n                line: this.lastToken.position.line + 1,\r\n                column: 0,\r\n                length: 0\r\n            }\r\n\r\n            semicolonAfterLastStatement = this.tt == TokenType.semicolon;\r\n            while (this.tt == TokenType.semicolon) {\r\n                this.nextToken();\r\n            }\r\n\r\n            let hasErrors: boolean = false;\r\n            for (let i = errorsBeforeStatement; i < this.errorList.length; i++) {\r\n                if (this.errorList[i].level == \"error\") hasErrors = true;\r\n            }\r\n\r\n            if (st != null) {\r\n                mainProgram.push({\r\n                    ast: st,\r\n                    from: startPosition,\r\n                    to: this.getEndOfPosition(this.lastToken.position),\r\n                    hasErrors: hasErrors,\r\n                    acceptedBySQLite: false\r\n                });\r\n            }\r\n            // console.log(mainProgram[mainProgram.length - 1]);\r\n\r\n            mainProgramEnd = this.getCurrentPosition();\r\n\r\n            // emergency-forward:\r\n            if (this.pos == oldPos) {\r\n                let beginStatementTokens: TokenType[] =\r\n                    [TokenType.keywordSelect, TokenType.keywordUpdate, TokenType.keywordCreate, TokenType.keywordInsert,\r\n                    TokenType.keywordDelete, TokenType.keywordDrop, TokenType.keywordAlter];\r\n\r\n                let firstBadToken: boolean = true;\r\n\r\n                while (!this.isEnd() && beginStatementTokens.indexOf(this.tt) < 0) {\r\n                    if ([TokenType.space, TokenType.newline].indexOf(this.tt) < 0 && firstBadToken) {\r\n                        this.pushError(\"Erwartet wird eines dieser Schlüsselwörter: \" + beginStatementTokens.map(t => TokenTypeReadable[t]).join(\", \")\r\n                            + \"; Gefunden wurde: \" + this.cct.value);\r\n                        firstBadToken = true;\r\n                    }\r\n                    this.nextToken();\r\n                }\r\n            }\r\n\r\n            if (semicolonAfterLastStatement || this.cct.position.line - afterLastStatement.line > 0) {\r\n                this.module.addCompletionHint(afterLastStatement, this.getCurrentPositionPlus(8), false, false,\r\n                    this.beginStatementKeywords);\r\n            }\r\n\r\n        }\r\n\r\n        this.module.addCompletionHint(afterLastStatement, { line: this.endToken.position.line + 1, column: 0, length: 0 }, false, false,\r\n            this.beginStatementKeywords);\r\n\r\n        return mainProgram;\r\n\r\n    }\r\n\r\n\r\n\r\n    parseStatement(expectSemicolon: boolean = true): ASTNode {\r\n\r\n        let retStatements: ASTNode = null;\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordSelect:\r\n                return this.parseSelect();\r\n            case TokenType.keywordInsert:\r\n                return this.parseInsert();\r\n            case TokenType.keywordCreate:\r\n                return this.parseCreateTableOrDatabase();\r\n            case TokenType.keywordUpdate:\r\n                return this.parseUpdate();\r\n            case TokenType.keywordDelete:\r\n                return this.parseDelete();\r\n            case TokenType.keywordDrop:\r\n                return this.parseDropTable();\r\n            case TokenType.keywordAlter:\r\n                return this.parseAlterTable();\r\n            case TokenType.keywordCommit:\r\n                this.pushError(\"Die Aweisung commit ist unnötig, da jede Anweisung automatisch commited wird.\", \"info\");\r\n                this.nextToken();\r\n                return null;\r\n            // Omitted statements:\r\n            case TokenType.keywordSet:\r\n                return this.parseSet();\r\n            case TokenType.keywordUse:\r\n                return this.parseUse();\r\n            case TokenType.keywordStart:\r\n                this.pushError(\"Die Aweisung 'start transaction' ist unnötig, da jede Anweisung automatisch commited wird.\", \"info\");\r\n                this.nextToken();\r\n                this.expect(TokenType.keywordTransaction, true);\r\n                return null;\r\n            case TokenType.keywordLock:\r\n            case TokenType.keywordUnlock:\r\n                this.parseLockUnlock();\r\n                return null;\r\n\r\n            default:\r\n                let s = TokenTypeReadable[this.tt];\r\n                if (s == null) s = \"\";\r\n                if (s != this.cct.value) s += \"(\" + this.cct.value + \")\";\r\n                s += \" wird hier nicht erwartet.\";\r\n                this.pushError(s);\r\n                this.nextToken();\r\n                break;\r\n        }\r\n\r\n\r\n        return retStatements;\r\n\r\n    }\r\n\r\n    parseLockUnlock() {\r\n        this.nextToken();\r\n        this.expect(TokenType.keywordTables, true);\r\n        this.skip(TokenType.identifier);\r\n        this.skip([TokenType.keywordWrite, TokenType.keywordRead]);\r\n        this.skip(TokenType.semicolon);\r\n    }\r\n\r\n    parseSet(): OmittedStatementNode {\r\n\r\n        this.pushError(\"Das SET-Statement wird von SQLite nicht unterstützt. Diese Anweisung wird daher einfach überlesen.\", \"info\");\r\n\r\n        let node: OmittedStatementNode = {\r\n            type: TokenType.omittedeStatement,\r\n            position: this.getCurrentPosition(),\r\n            endPosition: null,\r\n            symbolTable: null\r\n        }\r\n\r\n        this.nextToken(); // skip 'set'\r\n        this.expect(TokenType.identifier, true);\r\n        this.expect(TokenType.equal, true);\r\n        this.expect([TokenType.identifier, TokenType.stringConstant, TokenType.integerConstant, TokenType.charConstant, TokenType.booleanConstant, TokenType.floatingPointConstant], true);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n    parseUse(): OmittedStatementNode {\r\n\r\n        this.pushError(\"Das USE-Statement wird von SQLite nicht unterstützt. Diese Anweisung wird daher einfach überlesen. Sie können eine andere Datenbank auswählen indem Sie in der Datenbankliste links darauf klicken.\", \"info\");\r\n\r\n        let node: OmittedStatementNode = {\r\n            type: TokenType.omittedeStatement,\r\n            position: this.getCurrentPosition(),\r\n            endPosition: null,\r\n            symbolTable: null\r\n        }\r\n\r\n        this.nextToken(); // skip 'use'\r\n        this.expect(TokenType.identifier, true);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n    parseAlterTable(): AlterTableNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"alter\"\r\n\r\n        let node: AlterTableNode = {\r\n            type: TokenType.keywordAlter,\r\n            kind: null,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n        }\r\n\r\n        if (!this.expect(TokenType.keywordTable, true)) {\r\n            this.addCompletionHintHere(false, false, [\"table\"], 1);\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1);\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        this.addCompletionHintHere(false, false, [\"rename to\", \"rename column\", \"add column\", \"drop column\"], 1);\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordRename: this.parseRenameTableOrColumn(node); break;\r\n            case TokenType.keywordAdd: this.parseAlterTableAdd(node); break;\r\n            case TokenType.keywordDrop: this.parseDropColumn(node); break;\r\n            default:\r\n                this.pushError(\"Erwartet wird rename to, rename column, add column oder drop column\");\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    parseRenameTableOrColumn(node: AlterTableNode) {\r\n\r\n        this.nextToken();\r\n        if (!this.comesToken(TokenType.keywordTo)) {\r\n            this.addCompletionHintHere(node.tableIdentifier, false, [\"column\", \"to\"], 3);\r\n        }\r\n        node.endPosition = this.getEndOfCurrentToken();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordTo:\r\n                this.nextToken();\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                node.kind = \"renameTable\";\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    node.newTableName = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    node.endPosition = this.getEndOfCurrentToken();\r\n                } else {\r\n                    this.pushError(\"Erwartet wird der neue Tabellenname.\");\r\n                }\r\n                return;\r\n            case TokenType.keywordColumn:\r\n                this.nextToken();\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                this.addCompletionHintHere(node.tableIdentifier, false, [], 3);\r\n                if (!this.comesToken(TokenType.identifier)) {\r\n                    this.pushError(\"Erwartet wird der Name einer Spalte der Tabelle \" + node.tableIdentifier + \".\");\r\n                    return;\r\n                }\r\n                node.kind = \"renameColumn\";\r\n                node.oldColumnName = <string>this.cct.value;\r\n                node.oldColumnPosition = this.getCurrentPosition();\r\n                this.nextToken();\r\n                this.addCompletionHintHere(false, false, [\"to\"], 3);\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                if (!this.expect(TokenType.keywordTo, true)) return;\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    node.newColumnName = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    node.endPosition = this.getEndOfCurrentToken();\r\n                } else {\r\n                    this.pushError(\"Erwartet wird der neue Spaltenname.\");\r\n                }\r\n                return;\r\n            default:\r\n                this.pushError(\"Erwartet wird das Schlüsselwort 'to' (zum Umbenennen der Tabelle) oder das Schlüsselwor 'column' (zum Umbenennen einer Spalte).\")\r\n                return;\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    parseDropColumn(node: AlterTableNode) {\r\n        this.nextToken(); // skip 'drop'\r\n        this.comesToken(TokenType.keywordColumn, true);\r\n        node.oldColumnPosition = this.getCurrentPosition();\r\n        this.addCompletionHintHere(node.tableIdentifier, false, [], 3);\r\n\r\n        node.kind = \"dropColumn\";\r\n        node.endPosition = this.getEndOfCurrentToken();\r\n\r\n        if (this.comesToken(TokenType.identifier)) {\r\n            node.oldColumnName = <string>this.cct.value;\r\n            this.nextToken();\r\n        } else {\r\n            this.pushError(\"Erwartet wird der Bezeichner der Spalte, die gelöscht werden soll.\");\r\n        }\r\n\r\n    }\r\n\r\n    parseAlterTableAdd(node: AlterTableNode) {\r\n        do {\r\n            this.nextToken(); // skip \"add\" or \",\"\r\n            this.comesToken(TokenType.keywordAdd, true);\r\n            let unique: boolean = false;\r\n            switch (this.tt) {\r\n                case TokenType.keywordColumn:\r\n                    this.parseAddColumn(node);\r\n                    break;\r\n                case TokenType.keywordPrimary:\r\n                    this.parseAddPrimaryKey(node);\r\n                    break;\r\n                case TokenType.keywordUnique:\r\n                    this.nextToken();\r\n                    unique = true;\r\n                    this.expect([TokenType.keywordIndex, TokenType.keywordKey], false);\r\n                case TokenType.keywordKey:\r\n                case TokenType.keywordIndex:\r\n                    this.parseAddIndex(node, unique);\r\n                    break;\r\n                case TokenType.keywordModify:\r\n                    this.parseModifyColumn(node);\r\n                    break;\r\n                case TokenType.keywordConstraint:\r\n                    this.parseAddConstraint(node);\r\n                    break;\r\n            }\r\n        } while (this.tt == TokenType.comma);\r\n    }\r\n\r\n    parseAddConstraint(node: AlterTableNode) {\r\n        this.nextToken(); // skip \"constraint\"\r\n        if (!this.expect(TokenType.identifier)) return;\r\n\r\n        if (this.comesToken(TokenType.keywordForeign)) {\r\n            let fki = this.parseForeignKeyDefinition();\r\n            if (fki != null) {\r\n                if (node.foreignKeys == null) node.foreignKeys = [];\r\n                node.foreignKeys.push(fki);\r\n                node.kind = \"omittedKind\";\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    parseForeignKeyDefinition(): ForeignKeyInfo {\r\n        let fki: ForeignKeyInfo = { column: \"\", referencesTable: \"\", referencesColumn: \"\", referencesPosition: this.getCurrentPosition() };\r\n        if (!this.expect(TokenType.keywordForeign)) return;\r\n        if (!this.expect(TokenType.keywordKey)) return;\r\n        if (!this.expect(TokenType.leftBracket)) return;\r\n\r\n        if (!this.comesToken(TokenType.identifier)) {\r\n            this.pushError(\"Der Bezeichner der Fremdschlüsselspalte wird erwartet.\");\r\n            return;\r\n        }\r\n\r\n        fki.column = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        if (!this.expect(TokenType.rightBracket)) return;\r\n        this.parseReferences(fki);\r\n        return fki;\r\n    }\r\n\r\n    parseReferences(fki: ForeignKeyInfo) {\r\n\r\n        if (!this.expect(TokenType.keywordReferences)) return;\r\n\r\n        this.addCompletionHintHere(false, true, []);\r\n\r\n        if (!this.comesToken(TokenType.identifier)) {\r\n            this.pushError(\"Der Bezeichner der referenzierten Tabelle wird erwartet.\");\r\n            return;\r\n        }\r\n\r\n        fki.referencesTable = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        let pos0 = this.lastToken.position;\r\n        let pos1 = this.getCurrentPosition();\r\n        this.module.addCompletionHint(this.getEndOfPosition(pos0), pos1, fki.referencesTable, false, []);\r\n\r\n\r\n        if (!this.expect(TokenType.leftBracket)) return;\r\n        if (!this.comesToken(TokenType.identifier)) {\r\n            this.pushError(\"Der Bezeichner der referenzierten Spalte wird erwartet.\");\r\n            return;\r\n        }\r\n\r\n        fki.referencesColumn = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        if (!this.expect(TokenType.rightBracket)) return;\r\n\r\n        while (this.tt == TokenType.keywordOn) {\r\n            this.nextToken();\r\n            let kind: \"onDelete\" | \"onUpdate\" | \"\" = \"\";\r\n\r\n            switch (this.tt) {\r\n                //@ts-ignore\r\n                case TokenType.keywordDelete:\r\n                    kind = \"onDelete\";\r\n                    break;\r\n                //@ts-ignore\r\n                case TokenType.keywordUpdate:\r\n                    kind = \"onUpdate\";\r\n                    break;\r\n            }\r\n\r\n            if (kind == \"\") {\r\n                this.pushError(\"Nach 'on' wird 'delete' oder 'update' erwartet.\");\r\n                if (!this.comesToken([TokenType.keywordCascade, TokenType.keywordRestrict, TokenType.keywordSet, TokenType.keywordNo])) {\r\n                    this.nextToken();\r\n                    kind = \"onDelete\";\r\n                }\r\n            } else {\r\n                this.nextToken();\r\n            }\r\n\r\n            switch (this.tt) {\r\n                //@ts-ignore\r\n                case TokenType.keywordCascade:\r\n                //@ts-ignore\r\n                case TokenType.keywordRestrict:\r\n                    fki[kind] = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    break;\r\n                //@ts-ignore\r\n                case TokenType.keywordSet:\r\n                    fki[kind] = \"set \";\r\n                    this.nextToken();\r\n                    if ([TokenType.keywordNull, TokenType.keywordDefault].indexOf(this.tt) >= 0) {\r\n                        fki[kind] += this.cct.value;\r\n                        this.nextToken();\r\n                    } else {\r\n                        this.pushError(\"Nach 'on delete/update set' wird 'null' oder 'default' erwartet.\");\r\n                    }\r\n                    break;\r\n                //@ts-ignore\r\n                case TokenType.keywordNo:\r\n                    this.nextToken();\r\n                    if (this.expect(TokenType.keywordAction), true) {\r\n                        fki[kind] = \"no action\";\r\n                    }\r\n                    break;\r\n                default:\r\n                    this.pushError(\"Nach 'on delete/update' wird 'cascade', 'set null', 'set default' oder 'no action' erwartet.\");\r\n                    break;\r\n\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    parseModifyColumn(node: AlterTableNode) {\r\n        this.nextToken();\r\n        let modifyColumnInfo = this.parseColumnDefinition(false);\r\n        if (modifyColumnInfo != null) {\r\n            if (node.modifyColumnInfo == null) node.modifyColumnInfo = [];\r\n            node.modifyColumnInfo.push(modifyColumnInfo);\r\n        }\r\n    }\r\n\r\n    parseAddPrimaryKey(node: AlterTableNode) {\r\n        this.nextToken(); // skip \"primary\"\r\n        node.primaryKeys = [];\r\n        if (this.expect(TokenType.keywordKey, true) && this.expect(TokenType.leftBracket, false)) {\r\n            do {\r\n                this.nextToken();\r\n                if (this.tt == TokenType.identifier) {\r\n                    node.primaryKeys.push(<string>this.cct.value);\r\n                    this.nextToken();\r\n                }\r\n            } while (this.tt == TokenType.comma)\r\n        }\r\n        if (this.expect(TokenType.rightBracket, true)) {\r\n            node.kind = \"omittedKind\";\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    parseAddIndex(node: AlterTableNode, unique: boolean) {\r\n        this.nextToken(); // skip \"key\" | \"index\"\r\n\r\n        let index = { index_name: \"\", column: \"\", unique: unique }\r\n        if (this.tt == TokenType.identifier) {\r\n            index.index_name = <string>this.cct.value;\r\n            this.nextToken();\r\n        } else {\r\n            this.pushError(\"Erwartet wird der Bezeichner des Index.\");\r\n            return null;\r\n        }\r\n\r\n        if (!this.expect(TokenType.leftBracket, true)) return null;\r\n        if (this.tt == TokenType.identifier) {\r\n            index.column = <string>this.cct.value;\r\n            this.nextToken();\r\n            if (node.indices == null) node.indices = [];\r\n            node.indices.push(index);\r\n        } else {\r\n            this.pushError(\"Erwartet wird der Bezeichner der Spalte, für die ein Index erstellt werden soll.\");\r\n            return null;\r\n        }\r\n\r\n        node.kind = \"omittedKind\";\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        return null;\r\n    }\r\n\r\n    parseAddColumn(node: AlterTableNode) {\r\n        node.kind = \"addColumn\";\r\n        this.comesToken(TokenType.keywordColumn, true);\r\n        node.columnDefBegin = this.getCurrentPosition();\r\n        node.columnDef = this.parseColumnDefinition(false);\r\n    }\r\n\r\n    parseDropTable(): DropTableNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"Delete\"\r\n\r\n        let node: DropTableNode = {\r\n            type: TokenType.keywordDrop,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n            ifExists: false\r\n        }\r\n\r\n        if (!this.expect(TokenType.keywordTable, true)) {\r\n            this.addCompletionHintHere(false, false, [\"table\"], 1);\r\n        }\r\n\r\n        if (this.comesToken(TokenType.keywordIf, true)) {\r\n            node.ifExists = true;\r\n            this.expect(TokenType.keywordExists, true);\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1, \"\", \";\");\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n\r\n    }\r\n\r\n    parseDelete(): DeleteNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"Delete\"\r\n\r\n        let node: DeleteNode = {\r\n            type: TokenType.keywordDelete,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n            whereNode: null,\r\n            whereNodeBegin: null,\r\n            whereNodeEnd: null\r\n        }\r\n\r\n        if (!this.expect(TokenType.keywordFrom, true)) {\r\n            this.addCompletionHintHere(false, false, [\"from\"], 1);\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1, \"\", \" where\\n\\t\");\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        this.addCompletionHintHere(false, false, [\"where\\n\\t\"], 1);\r\n        if (this.tt != TokenType.keywordWhere) return node;\r\n\r\n        this.nextToken(); // skip \"where\"\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n\r\n        node.whereNodeBegin = this.getEndOfPosition(this.lastToken.position);\r\n        node.whereNode = this.parseTerm();\r\n        node.whereNodeEnd = this.getCurrentPosition();\r\n\r\n        this.module.addCompletionHint(node.whereNodeBegin, this.getCurrentPositionPlus(3), node.tableIdentifier, false, []);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n        return node;\r\n\r\n    }\r\n\r\n    parseUpdate(): UpdateNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"update\"\r\n\r\n        let node: UpdateNode = {\r\n            type: TokenType.keywordUpdate,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n            columnIdentifiers: [],\r\n            columnIdentifierPositions: [],\r\n            values: [],\r\n            valuePosBegin: [],\r\n            valuePosEnd: [],\r\n            whereNode: null,\r\n            whereNodeBegin: null,\r\n            whereNodeEnd: null\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1, \"\", \" set\\n\\t\");\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        this.addCompletionHintHere(false, false, [\"set\\n\\t\"], 1);\r\n        if (!this.expect(TokenType.keywordSet)) return node;\r\n        let first: boolean = true;\r\n        do {\r\n            this.addCompletionHintHere(node.tableIdentifier, false, first ? [] : ['where'], 1, null, \" = \");\r\n            first = false;\r\n            if (this.tt != TokenType.identifier) {\r\n                this.pushError(\"Hier wird der Bezeichner derjenigen Spalte der Tabelle \" + node.tableIdentifier + \" erwaretet, deren Wert verändert werden soll.\", \"error\");\r\n                break;\r\n            }\r\n\r\n            node.columnIdentifiers.push(<string>this.cct.value);\r\n            node.columnIdentifierPositions.push(this.getCurrentPosition());\r\n            this.nextToken();\r\n\r\n            this.expect(TokenType.equal, true);\r\n\r\n            node.valuePosBegin.push(this.getCurrentPosition());\r\n            node.values.push(this.parseTerm());\r\n            node.valuePosEnd.push(this.getCurrentPosition());\r\n\r\n        } while (this.comesToken(TokenType.comma, true));\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        if (this.lastToken.tt != TokenType.comma || this.comesToken(TokenType.keywordWhere)) {\r\n            if (!this.expect(TokenType.keywordWhere, true)) return node;\r\n\r\n            node.whereNodeBegin = this.getEndOfPosition(this.lastToken.position);\r\n            node.whereNode = this.parseTerm();\r\n            node.whereNodeEnd = this.getCurrentPosition();\r\n\r\n            this.module.addCompletionHint(node.whereNodeBegin, node.whereNodeEnd, node.tableIdentifier, false, []);\r\n\r\n            node.endPosition = this.getCurrentPosition();\r\n        } else {\r\n            this.comesToken(TokenType.keywordWhere, true); // skip where, if present\r\n        }\r\n        return node;\r\n\r\n    }\r\n\r\n    parseCreateTableOrDatabase(): CreateTableNode | OmittedStatementNode {\r\n        switch (this.ct[1].tt) {\r\n            case TokenType.keywordDatabase:\r\n                return this.parseCreateDatabase();\r\n            case TokenType.keywordTable:\r\n                return this.parseCreateTable();\r\n            default:\r\n                this.nextToken();\r\n                this.pushError(\"Nach 'create' wird 'table' erwartet.\");\r\n                this.nextToken();\r\n                return null;\r\n        }\r\n    }\r\n\r\n    parseCreateDatabase(): OmittedStatementNode {\r\n        let node: OmittedStatementNode = {\r\n            type: TokenType.omittedeStatement,\r\n            position: this.getCurrentPosition(),\r\n            endPosition: null,\r\n            symbolTable: null\r\n        }\r\n\r\n        this.nextToken();\r\n        this.pushError(\"Die CREATE-DATABASE-Anweisung wird von der SQLite-Engine nicht unterstützt. Sie können eine neue Datenbank anlegen, indem Sie auf den entsprechenden Button oberhalb der Liste der Datenbanken (linke Seite des Fensters) klicken. Diese Anweisung wird überlesen.\", \"info\");\r\n        while (this.tt != TokenType.semicolon && this.tt != TokenType.endofSourcecode) {\r\n            node.endPosition = this.getEndOfCurrentToken();\r\n            this.nextToken();\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    parseCreateTable(): CreateTableNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"create\"\r\n\r\n        if (!this.expect(TokenType.keywordTable, true)) {\r\n            this.module.addCompletionHint(startPosition, this.getCurrentPositionPlus(3), false, false, [\"table\"]);\r\n        }\r\n\r\n        let ifNotExists: boolean = false;\r\n        if (this.comesToken(TokenType.keywordIf)) {\r\n            this.nextToken();\r\n            this.expect(TokenType.keywordNot, true);\r\n            this.expect(TokenType.keywordExists, true);\r\n            ifNotExists = true;\r\n        }\r\n\r\n        let identifier = \"\";\r\n        if (this.expect(TokenType.identifier, false)) {\r\n            identifier = <string>this.cct.value;\r\n            let pos1 = this.getCurrentPosition();\r\n            let pos2 = this.getCurrentPositionPlus(identifier.length + 3);\r\n            this.nextToken();\r\n            if (!this.comesToken(TokenType.leftBracket)) {\r\n                this.module.addCompletionHint(pos1, pos2, false, false, [\"(\"]);\r\n            }\r\n        }\r\n\r\n        let node: CreateTableNode = {\r\n            type: TokenType.keywordCreate,\r\n            identifier: identifier,\r\n            position: startPosition,\r\n            endPosition: null,\r\n            columnList: [],\r\n            symbolTable: null,\r\n            combinedPrimaryKeyColumns: [],\r\n            foreignKeyInfoList: [],\r\n            ifNotExists: ifNotExists,\r\n            uniqueConstraints: []\r\n        }\r\n\r\n        if (!this.expect(TokenType.leftBracket, true)) return node;\r\n\r\n        let primaryKeyAlreadyDefined: boolean = false;\r\n        let first: boolean = true;\r\n\r\n        while (this.tt != TokenType.rightBracket) {\r\n            if (!first) this.expect(TokenType.comma, true);\r\n            first = false;\r\n            if (this.comesToken(TokenType.keywordConstraint, true)) {\r\n                this.expect(TokenType.identifier, true);\r\n                this.expect([TokenType.keywordForeign, TokenType.keywordPrimary, TokenType.keywordUnique], false);\r\n            }\r\n\r\n            switch (this.tt) {\r\n                case TokenType.keywordPrimary:\r\n                    if (primaryKeyAlreadyDefined) this.pushError(\"Je Tabelle darf nur ein einziger Primärschlüssel definiert werden.\", \"error\", this.getCurrentPosition());\r\n                    this.parsePrimaryKeyTerm(primaryKeyAlreadyDefined, node);\r\n                    primaryKeyAlreadyDefined = true;\r\n                    break;\r\n                case TokenType.keywordUnique:\r\n                    this.parseUniqueTerm(node);\r\n                    break;\r\n                case TokenType.keywordForeign:\r\n                    let fki = this.parseForeignKeyDefinition();\r\n                    if (fki != null) {\r\n                        node.foreignKeyInfoList.push(fki);\r\n                    }\r\n                    break;\r\n                case TokenType.identifier:\r\n                    let columnNode = this.parseColumnDefinition(primaryKeyAlreadyDefined);\r\n                    node.columnList.push(columnNode);\r\n                    primaryKeyAlreadyDefined = primaryKeyAlreadyDefined || columnNode.isPrimary;\r\n                    break;\r\n                default:\r\n                    this.pushError(TokenTypeReadable[this.tt] + \" wird hier nicht erwartet.\", \"error\");\r\n                    break;\r\n            }\r\n            if (!this.comesToken(TokenType.comma)) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        while ([TokenType.keywordAutoincrement, TokenType.keywordEngine, TokenType.keywordDefault, TokenType.keywordCollate].indexOf(this.tt) >= 0) {\r\n            switch (this.tt) {\r\n                case TokenType.keywordCollate:\r\n                    this.nextToken();\r\n                    this.skip(TokenType.equal);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordEngine:\r\n                    this.nextToken();\r\n                    this.skip(TokenType.equal);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordDefault:\r\n                    this.nextToken();\r\n                    this.expect([TokenType.keywordCharset, TokenType.keywordCharacter], true);\r\n                    this.skip(TokenType.keywordSet);\r\n                    this.skip(TokenType.equal);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordAutoincrement:\r\n                    this.nextToken();\r\n                    this.expect(TokenType.equal, true);\r\n                    this.expect(TokenType.integerConstant, true);\r\n                    break;\r\n            }\r\n\r\n        }\r\n\r\n        for (let column of node.columnList) {\r\n            if (column.isAutoIncrement && !(column.isPrimary || node.combinedPrimaryKeyColumns.indexOf(column.identifier) >= 0)) {\r\n                this.pushError(\"autoincrement gibt es nur bei Primärschlüsseln, d.h. es fehlt wahrscheinlich 'primary key'.\", \"warning\", node.position);\r\n            }\r\n        }\r\n\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n\r\n    parsePrimaryKeyTerm(primaryKeyAlreadyDefined: boolean, node: CreateTableNode) {\r\n        if (primaryKeyAlreadyDefined) {\r\n            this.pushError(\"Die Tabelle kann nur einen einzigen Primärschlüssel haben.\");\r\n        }\r\n        this.nextToken(); // skip \"primary\"\r\n        this.expect(TokenType.keywordKey, true);\r\n\r\n        let columns: string[] = node.columnList.map(c => c.identifier);\r\n\r\n        this.addCompletionHintHere(false, false, columns);\r\n        if (this.comesToken(TokenType.leftBracket)) {\r\n            this.addCompletionHintHere(false, false, columns);\r\n            this.nextToken();\r\n\r\n            while (true) {\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    node.combinedPrimaryKeyColumns.push(<string>this.cct.value);\r\n                    this.nextToken();\r\n                    this.addCompletionHintHere(false, false, columns, 1);\r\n                    if (!this.comesToken(TokenType.comma)) {\r\n                        break;\r\n                    } else {\r\n                        this.nextToken();\r\n                        this.addCompletionHintHere(false, false, columns);\r\n                    }\r\n                } else {\r\n                    this.pushError(\"Der Bezeichner einer Spalte wird erwartet. Gefunden wurde: \" + this.cct.value);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        } else {\r\n            this.pushError(\"( erwartet.\");\r\n        }\r\n    }\r\n\r\n    parseUniqueTerm(node: CreateTableNode) {\r\n        this.nextToken(); // skip \"unique\"\r\n\r\n        let columns: string[] = node.columnList.map(c => c.identifier);\r\n        let uniqueConstraint: string[] = [];\r\n        node.uniqueConstraints.push(uniqueConstraint);\r\n\r\n        this.addCompletionHintHere(false, false, columns);\r\n        if (this.comesToken(TokenType.leftBracket)) {\r\n            this.addCompletionHintHere(false, false, columns);\r\n            this.nextToken();\r\n\r\n            while (true) {\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    uniqueConstraint.push(<string>this.cct.value);\r\n                    this.nextToken();\r\n                    this.addCompletionHintHere(false, false, columns, 1);\r\n                    if (!this.comesToken(TokenType.comma)) {\r\n                        break;\r\n                    } else {\r\n                        this.nextToken();\r\n                        this.addCompletionHintHere(false, false, columns);\r\n                    }\r\n                } else {\r\n                    this.pushError(\"Der Bezeichner einer Spalte wird erwartet. Gefunden wurde: \" + this.cct.value);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        } else {\r\n            this.pushError(\"( erwartet.\");\r\n        }\r\n    }\r\n\r\n    parseColumnDefinition(primaryKeyAlreadyDefined: boolean): CreateTableColumnNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n        let identifier = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        let node: CreateTableColumnNode = {\r\n            type: TokenType.columnDef,\r\n            identifier: identifier,\r\n            isPrimary: false,\r\n            isAutoIncrement: false,\r\n            position: position,\r\n            baseType: null,\r\n            notNull: false\r\n        }\r\n\r\n        this.parseType(node, primaryKeyAlreadyDefined);\r\n\r\n        return node;\r\n\r\n    }\r\n\r\n    addCompletionHintHere(hintColumns: boolean | string, hintTables: boolean, hints: string[], additionalColumns: number = 0, praefix: string = \"\", suffix: string = \"\") {\r\n        let pos0 = this.lastToken.position;\r\n        let pos1 = this.getCurrentPosition();\r\n        pos1.column += 1 + additionalColumns\r\n        this.module.addCompletionHint(this.getEndOfPosition(pos0), pos1, hintColumns, hintTables, hints, null, praefix, suffix);\r\n    }\r\n\r\n    identifierMap: {[key: string]:string} = {'year': 'int', 'binary': 'varchar', 'varbinary': 'varchar'};\r\n\r\n    parseType(node: CreateTableColumnNode, primaryKeyAlreadyDefined: boolean) {\r\n\r\n        let datatypes = SQLBaseType.baseTypes.map(type => type.toString());\r\n        this.addCompletionHintHere(false, false, datatypes);\r\n\r\n        if (!this.expect(TokenType.identifier, false)) {\r\n            this.pushError(\"Erwartet wird ein Datentyp. Gefunden wurde: \" + this.cct.value);\r\n            return;\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n        let mappedIdentifier:string = this.identifierMap[identifier.toLocaleLowerCase()];\r\n\r\n        if (mappedIdentifier != null) {\r\n            identifier = mappedIdentifier;\r\n        }\r\n\r\n        let type = SQLBaseType.getBaseType(identifier);\r\n        if (type == null) {\r\n            this.pushError(\"Erwartet wird ein Datentyp. Gefunden wurde: \" + identifier);\r\n        }\r\n        node.baseType = type;\r\n        this.nextToken();\r\n\r\n        if (this.tt == TokenType.leftBracket) {\r\n            this.nextToken();\r\n            node.parameters = [];\r\n            //@ts-ignore\r\n            while (this.tt == TokenType.integerConstant) {\r\n                node.parameters.push(<number>this.cct.value);\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.comma) break;\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.integerConstant) {\r\n                    this.pushError(\"Erwartet wird eine ganze Zahl, gefunden wurde: \" + this.cct.value);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (type != null && node.parameters.length > type.parameterDescriptions.length) {\r\n                this.pushError(\"Der Datentyp \" + type.toString() + \" hat höchstens \" + type.parameterDescriptions.length + \" Parameter.\");\r\n            }\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        }\r\n\r\n        if (identifier != null && identifier.toLocaleLowerCase() == \"char\" && node.parameters == null) {\r\n            node.parameters = [1];\r\n        }\r\n\r\n        // primary key autoincrement\r\n        // references table(column)\r\n        // not null\r\n\r\n        this.addCompletionHintHere(false, false, [\"primary key\", \"references\", \"not null\"]);\r\n\r\n        let alreadySeenKeywords: TokenType[] = [];\r\n\r\n        while ([TokenType.keywordOn, TokenType.keywordCharacter, TokenType.keywordComment, TokenType.keywordAutoincrement, TokenType.keywordKey, TokenType.keywordPrimary, TokenType.keywordNot, TokenType.keywordReferences, TokenType.keywordCollate, TokenType.keywordDefault].indexOf(this.tt) >= 0) {\r\n            if (alreadySeenKeywords.indexOf(this.tt) >= 0) {\r\n                this.pushError('Das Schlüsselwort ' + TokenTypeReadable[this.tt] + \" darf bei der Definition einer Spalte nicht öfters als ein Mal vorkommen.\");\r\n            }\r\n\r\n            alreadySeenKeywords.push(this.tt);\r\n\r\n            switch (this.tt) {\r\n                case TokenType.keywordAutoincrement:\r\n                    this.nextToken();\r\n                    node.isAutoIncrement = true;\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.equal) {\r\n                        this.nextToken();\r\n                        this.expect(TokenType.integerConstant);\r\n                    } else {\r\n                        //@ts-ignore\r\n                        if (this.tt == TokenType.comma && this.ct[1].tt == TokenType.keywordAutoincrement) {\r\n                            this.nextToken();\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.keywordPrimary:\r\n                    if (primaryKeyAlreadyDefined) this.pushError(\"In einer Tabelle darf es nur einen einzigen primary key geben.\");\r\n                    this.nextToken(); // skip \"primary\"\r\n                    if (!this.expect(TokenType.keywordKey, true)) {\r\n                        this.addCompletionHintHere(false, false, [\"key\"]);\r\n                    } else {\r\n                        this.addCompletionHintHere(false, false, [\"autoincrement, \\n\"])\r\n                    }\r\n                    node.isPrimary = true;\r\n                    break;\r\n                case TokenType.keywordReferences:\r\n                    let fki: ForeignKeyInfo = { column: node.identifier, referencesColumn: \"\", referencesTable: \"\", referencesPosition: this.getCurrentPosition() };\r\n                    node.foreignKeyInfo = fki;\r\n                    this.parseReferences(fki);\r\n                    break;\r\n                case TokenType.keywordNot:\r\n                    this.nextToken();\r\n                    if (!this.expect(TokenType.keywordNull, true)) {\r\n                        this.addCompletionHintHere(false, false, [\"null\"]);\r\n                    } else {\r\n                        this.addCompletionHintHere(false, false, [\"references\"]);\r\n                    }\r\n                    node.notNull = true;\r\n                    break;\r\n                case TokenType.keywordCollate:\r\n                    this.nextToken();\r\n                    node.collate = <string>this.cct.value;\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordCharacter:\r\n                    this.nextToken();\r\n                    this.expect(TokenType.keywordSet, true);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordDefault:\r\n                    this.nextToken();\r\n\r\n                    if (this.ct[1].tt == TokenType.leftBracket && this.ct[2].tt == TokenType.rightBracket) {\r\n                        this.nextToken();\r\n                        this.nextToken();\r\n                        this.nextToken();\r\n                        break;\r\n                    }\r\n\r\n                    node.defaultValue = <string>this.cct.value;\r\n                    if (typeof this.cct.value == \"string\" && node.defaultValue.toLowerCase() != 'null' ) {\r\n                        node.defaultValue = \"'\" + node.defaultValue + \"'\";\r\n                    }\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.keywordNull) {\r\n                        this.nextToken();\r\n                        break;\r\n                    } else if ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.stringConstant].indexOf(this.tt) >= 0) {\r\n                        let constantType = SQLBaseType.fromConstantType(this.tt);\r\n                        if (!constantType.canCastTo(type)) {\r\n                            this.pushError(\"Die Konstante hinter 'default' passt nicht zum Datentyp der Spalte.\");\r\n                        }\r\n                        this.nextToken();\r\n                    }\r\n                    break;\r\n                case TokenType.keywordComment:\r\n                    this.nextToken(); // Skip \"comment\"\r\n                    this.expect(TokenType.stringConstant, true);\r\n                    break;\r\n                case TokenType.keywordOn:\r\n                    this.nextToken();\r\n                    this.expect([TokenType.keywordUpdate], true);\r\n                    while (!this.comesToken([TokenType.comma, TokenType.endofSourcecode, TokenType.rightBracket])) this.nextToken();\r\n                    //@ts-ignore\r\n                    if (this.lastToken.tt == TokenType.leftBracket && this.tt == TokenType.rightBracket) this.nextToken();\r\n                    break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    parseInsert(): InsertNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        let rightBracketPosition =startPosition;\r\n        this.nextToken(); // skip \"insert\"\r\n\r\n        this.expect(TokenType.keywordInto, true);\r\n\r\n        let node: InsertNode = {\r\n            type: TokenType.keywordInsert,\r\n            position: startPosition,\r\n            endPosition: this.getCurrentPosition(),\r\n            valuesPosition: null,\r\n            columnsPosition: null,\r\n            symbolTable: null,\r\n            columnList: [],\r\n            values: [],\r\n            table: null\r\n        }\r\n\r\n        if (this.tt == TokenType.identifier) {\r\n            node.table = {\r\n                type: TokenType.table,\r\n                identifier: <string>this.cct.value,\r\n                alias: null,\r\n                position: this.getCurrentPosition()\r\n            }\r\n            node.columnsPosition = { line: node.table.position.line, column: node.table.position.column + node.table.position.length, length: 0 };\r\n            this.nextToken();\r\n        } else {\r\n            this.pushError(\"Hier wird der Bezeichner einer Tabelle erwartet. Gefunden wurde: \" + this.cct.value, \"error\");\r\n        }\r\n\r\n        if (this.tt == TokenType.leftBracket) {\r\n\r\n            this.nextToken();\r\n            let first: boolean = true;\r\n            //@ts-ignore\r\n            while (first || this.tt == TokenType.comma) {\r\n\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.identifier) {\r\n                    node.columnList.push({\r\n                        type: TokenType.identifier,\r\n                        identifier: this.cct.value + \"\",\r\n                        position: this.getCurrentPosition()\r\n                    })\r\n\r\n                } else {\r\n                    this.pushError(\"Erwartet wird der Bezeichner einer Spalte. Gefunden wurde: \" + this.cct.value, \"error\");\r\n                }\r\n                this.nextToken();\r\n            }\r\n            rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n        }\r\n\r\n        node.valuesPosition = this.getCurrentPosition();\r\n\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordValues:\r\n                this.nextToken();\r\n                this.parseValueLists(node.values);\r\n                break;\r\n            case TokenType.keywordSelect:\r\n            case TokenType.leftBracket:\r\n                if(this.getCurrentPosition().line <= rightBracketPosition.line + 1){\r\n                    let selectNode = this.parseSelect();\r\n                    node.select = selectNode;\r\n                    // if(selectNode != null){\r\n                    //     if(node.columnList != null && selectNode.columnList != null){\r\n                    //         if(node.columnList.length != selectNode.columnList.length){\r\n                    //             this.pushError(\"Die insert-Anweisung erwartet \" + node.columnList.length + \" Werte je Datensatz, der nachfolgende select-Term liefert aber \" + selectNode.columnList.length + \" Werte je Datensatz.\");                        \r\n                    //         } \r\n                    //         node.select = selectNode;\r\n                    //     }\r\n                    // }\r\n                }\r\n                break;\r\n        }\r\n\r\n\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n\r\n    parseValueLists(values: ConstantNode[][]) {\r\n        let insideListTokens = [TokenType.keywordNull, TokenType.charConstant, TokenType.stringConstant, TokenType.booleanConstant, TokenType.floatingPointConstant, TokenType.integerConstant];\r\n\r\n        let outerFirst: boolean = true;\r\n\r\n        while (outerFirst || this.tt == TokenType.comma) {\r\n            if (!outerFirst) {\r\n                this.nextToken(); // consume comma\r\n            }\r\n            outerFirst = false;\r\n            let leftBracketPosition = this.getCurrentPosition();\r\n            if (!this.expect(TokenType.leftBracket, true)) {\r\n                break;\r\n            }\r\n            let line: ConstantNode[] = [];\r\n            let first: boolean = true;\r\n            //@ts-ignore\r\n            while (first || this.tt == TokenType.comma) {\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n                if (this.tt == TokenType.identifier) {\r\n                    if (this.cct.isDoubleQuotedIdentifier) {\r\n                        this.tt = TokenType.stringConstant\r\n                    } else {\r\n                        let lv = (this.cct.value + \"\").toLocaleLowerCase();\r\n                        if ([\"date\", \"_binary\"].indexOf(lv) >= 0) {\r\n                            this.nextToken();\r\n                        }\r\n                    }\r\n                    \r\n                    \r\n                }\r\n\r\n\r\n\r\n                //@ts-ignore\r\n                if (insideListTokens.indexOf(this.tt) < 0) {\r\n                    this.pushError(\"Erwartet wird eine Konstante oder null. Gefunden wurde: \" + this.cct.value, \"error\");\r\n                    this.nextToken();\r\n                } else {\r\n                    line.push({\r\n                        constantType: this.tt,\r\n                        position: this.getCurrentPosition(),\r\n                        constant: this.cct.value,\r\n                        type: TokenType.constantNode\r\n                    });\r\n                    this.nextToken();\r\n                }\r\n            }\r\n            this.expect(TokenType.rightBracket, true);\r\n            if (line.length == 0) {\r\n                this.pushError(\"Eine Zeile kann nur dann in die Tabelle eingefügt werden, wenn sie mindestens einen Spaltenwert besitzt.\", \"error\", leftBracketPosition);\r\n            } else {\r\n                values.push(line);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    parseConstant(): ConstantNode {\r\n        let constantNode: ConstantNode = {\r\n            constantType: this.tt,\r\n            position: this.getCurrentPosition(),\r\n            constant: this.cct.value,\r\n            type: TokenType.constantNode\r\n        }\r\n        this.nextToken();\r\n\r\n        return constantNode;\r\n    }\r\n\r\n    parseSelect(): SelectNode {\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"select\"\r\n\r\n        let columnListStart: TextPosition = {\r\n            line: startPosition.line,\r\n            column: startPosition.column + 6,\r\n            length: 1\r\n        };\r\n\r\n        let node: SelectNode = {\r\n            type: TokenType.keywordSelect,\r\n            position: startPosition,\r\n            endPosition: this.getCurrentPosition(),\r\n            symbolTable: null,\r\n            columnList: [],\r\n            fromNode: null,\r\n            whereNode: null,\r\n            parentStatement: null\r\n        }\r\n\r\n        node.columnList = this.parseColumnList([TokenType.keywordFrom, TokenType.semicolon, TokenType.endofSourcecode], true);\r\n\r\n        let columnListKeywordArray = [\"distinct\", \"as\", \"*\", \"from\"];\r\n        if (node.columnList.findIndex(c => c.type == TokenType.allColumns) >= 0) {\r\n            columnListKeywordArray = [\"from\"];\r\n        }\r\n\r\n        this.module.addCompletionHint(columnListStart, this.getCurrentPositionPlus(2), true, true, columnListKeywordArray)\r\n\r\n        let hasFrom = this.comesToken(TokenType.keywordFrom, true);\r\n        let fromListKeywordArray = [\"where\", \"join\", \"left\", \"right\", \"inner\", \"outer\", \"natural\", \"on\", \"as\", \", \"];\r\n        // parse from ...\r\n        if (!hasFrom) {\r\n            columnListKeywordArray.unshift(\"from\");\r\n        } else {\r\n            node.fromStartPosition = { line: this.lastToken.position.line, column: this.lastToken.position.column + this.lastToken.position.length, length: 0 };\r\n\r\n            let dontHint: string[] = [];\r\n            node.fromNode = this.parseTableOrSubQuery(dontHint);\r\n\r\n            fromListKeywordArray.splice(fromListKeywordArray.indexOf(this.lastToken.value + \"\"), 1);\r\n\r\n            let hintEndPosition = this.getCurrentPositionPlus(2);\r\n            if (this.comesToken(TokenType.semicolon)) {\r\n                hintEndPosition = this.getCurrentPosition();\r\n            }\r\n\r\n            this.module.addCompletionHint(node.fromStartPosition, hintEndPosition, false, true, fromListKeywordArray, dontHint)\r\n            node.fromEndPosition = this.getCurrentPosition();\r\n        }\r\n\r\n        // parse where...\r\n\r\n        let whereKeywordArray = [\"like\"];\r\n        if (this.tt == TokenType.keywordWhere) {\r\n            let position = this.getCurrentPosition();\r\n            let whereStart = this.getCurrentPosition();\r\n            this.nextToken();\r\n            node.whereNode = this.parseTerm();\r\n            this.module.addCompletionHint(whereStart, this.getCurrentPositionPlus(4), true, true, whereKeywordArray)\r\n            // if (node.whereNode != null) node.whereNode.position = position;\r\n        } else {\r\n            fromListKeywordArray.push(\"where\");\r\n        }\r\n\r\n        let groupKeywordArray = [];\r\n        if (this.tt == TokenType.keywordGroup) {\r\n            let groupStart = this.getCurrentPosition();\r\n            node.groupByNode = this.parseGroupBy();\r\n            this.module.addCompletionHint(groupStart, this.getCurrentPosition(), true, true, groupKeywordArray);\r\n        } else {\r\n            whereKeywordArray.push(\"group by\");\r\n        }\r\n\r\n        if (this.tt == TokenType.keywordOrder) {\r\n            let orderStart = this.getCurrentPosition();\r\n            node.orderByNode = this.parseOrderBy();\r\n            this.module.addCompletionHint(orderStart, this.getCurrentPosition(), true, true, [\"asc\", \"desc\"]);\r\n        } else {\r\n            whereKeywordArray.push(\"order by\");\r\n            groupKeywordArray.push(\"order by\");\r\n        }\r\n\r\n        if (this.tt == TokenType.keywordLimit) {\r\n            node.limitNode = this.parseLimit();\r\n        }\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n        node.endPosition.column += 3;\r\n\r\n        return node;\r\n    }\r\n\r\n    parseLimit(): LimitNode {\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n        let numberOfRows: TermNode = this.parseTerm();\r\n        let ln: LimitNode = {\r\n            type: TokenType.keywordLimit,\r\n            position: position,\r\n            numberOfRows: numberOfRows\r\n        }\r\n        if (this.tt == TokenType.keywordOffset) {\r\n            this.nextToken();\r\n            ln.offset = this.parseTerm();\r\n        }\r\n        return ln;\r\n    }\r\n\r\n    parseGroupBy(): GroupByNode {\r\n        let position = this.getCurrentPosition();\r\n        this.expect(TokenType.keywordGroup, true);\r\n        this.expect(TokenType.keywordBy, true);\r\n        let gbn: GroupByNode = {\r\n            type: TokenType.keywordGroup,\r\n            columnList: [],\r\n            position: position\r\n        }\r\n        let tokenTypesAfterGroupBy = [TokenType.keywordHaving, TokenType.keywordSelect, TokenType.keywordOrder, TokenType.keywordLimit, TokenType.rightBracket, TokenType.semicolon];\r\n        gbn.columnList = this.parseColumnList(tokenTypesAfterGroupBy, false).map(columnNode => columnNode.term);\r\n        if (this.tt == TokenType.keywordHaving) {\r\n            this.nextToken();\r\n            gbn.having = this.parseTerm();\r\n        }\r\n        return gbn;\r\n    }\r\n\r\n    parseOrderBy(): OrderByNode[] {\r\n        this.expect(TokenType.keywordOrder, true);\r\n        this.expect(TokenType.keywordBy, true);\r\n\r\n        let obnList: OrderByNode[] = [];\r\n        let first: boolean = true;\r\n\r\n        do {\r\n            if (first) {\r\n                first = false;\r\n            } else {\r\n                this.expect(TokenType.comma, true);\r\n            }\r\n            let column: TermNode = this.parseTerm();\r\n            let obn: OrderByNode = {\r\n                type: TokenType.keywordOrder,\r\n                position: this.getCurrentPosition(),\r\n                column: column\r\n            }\r\n            if ([TokenType.keywordAscending, TokenType.keywordDescending].indexOf(this.tt) >= 0) this.nextToken();\r\n            if (this.tt == TokenType.keywordNulls) {\r\n                this.nextToken();\r\n                this.expect([TokenType.keywordFirst, TokenType.keywordLast], true);\r\n            }\r\n            obnList.push(obn);\r\n        } while (this.tt == TokenType.comma);\r\n\r\n        return obnList;\r\n    }\r\n\r\n    parseTableOrSubQuery(dontHint: string[]): TableOrSubqueryNode {\r\n\r\n        let leftSide: TableOrSubqueryNode = this.parseAtomicTableOrSubQuery(dontHint);\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        while (this.parseJoinOperator()) {\r\n\r\n            let rightSide: TableOrSubqueryNode = this.parseAtomicTableOrSubQuery(dontHint);\r\n\r\n            leftSide = {\r\n                type: TokenType.keywordJoin,\r\n                firstOperand: leftSide,\r\n                secondOperand: rightSide,\r\n                position: position,\r\n            }\r\n\r\n            if (this.tt == TokenType.keywordOn) {\r\n                leftSide.on = this.parseTerm();\r\n            }\r\n\r\n        }\r\n\r\n        return leftSide;\r\n\r\n    }\r\n\r\n    parseJoinOperator(): boolean {\r\n        if (this.tt == TokenType.comma) {\r\n            this.nextToken();\r\n            return true;\r\n        }\r\n        if (this.tt == TokenType.keywordNatural) this.nextToken();\r\n        switch (this.tt) {\r\n            case TokenType.keywordLeft:\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.keywordOuter) this.nextToken();\r\n                return this.expect(TokenType.keywordJoin, true);\r\n            case TokenType.keywordInner:\r\n            case TokenType.keywordCross:\r\n                this.nextToken();\r\n                return this.expect(TokenType.keywordJoin, true);\r\n            case TokenType.keywordJoin:\r\n                this.nextToken();\r\n                return true;\r\n            default: return false;\r\n        }\r\n    }\r\n\r\n    parseAtomicTableOrSubQuery(dontHint: string[]): TableOrSubqueryNode {\r\n\r\n        if (!this.expect([TokenType.identifier, TokenType.leftBracket], false)) {\r\n            return null;\r\n        }\r\n\r\n        if (this.tt == TokenType.leftBracket) {\r\n            this.nextToken();\r\n            let ret: TableOrSubqueryNode;\r\n            //@ts-ignore\r\n            if (this.tt == TokenType.keywordSelect) {\r\n                let position = this.getCurrentPosition();\r\n                let selectStatement = this.parseSelect();\r\n                ret = {\r\n                    type: TokenType.subquery,\r\n                    alias: null,\r\n                    position: position,\r\n                    query: selectStatement\r\n                }\r\n            } else {\r\n                ret = this.parseTableOrSubQuery(dontHint);\r\n            }\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n\r\n            //@ts-ignore\r\n            if (this.tt == TokenType.keywordAs && ret.type == TokenType.subquery) {\r\n                this.nextToken();\r\n                if (this.expect(TokenType.identifier, false)) {\r\n                    ret.alias = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    dontHint.push(ret.alias);\r\n                }\r\n            }\r\n\r\n            return ret;\r\n        }\r\n\r\n        if (this.tt == TokenType.identifier) {\r\n            let node: TableNode = {\r\n                type: TokenType.table,\r\n                identifier: <string>this.cct.value,\r\n                alias: null,\r\n                position: this.getCurrentPosition()\r\n            }\r\n            dontHint.push(node.identifier);\r\n            this.nextToken();\r\n\r\n            //@ts-ignore\r\n            if (this.tt == TokenType.keywordAs) {\r\n                this.nextToken();\r\n                if (this.expect(TokenType.identifier, false)) {\r\n                    node.alias = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    dontHint.push(node.alias);\r\n                }\r\n\r\n            }\r\n\r\n            return node;\r\n        }\r\n\r\n    }\r\n\r\n    parseColumnList(tokenTypesAfterListEnd: TokenType[], allowAliases: boolean): ColumnNode[] {\r\n        let columns: ColumnNode[] = [];\r\n\r\n        while ([TokenType.stringConstant, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.booleanConstant,\r\n        TokenType.identifier, TokenType.multiplication, TokenType.leftBracket, TokenType.keywordDistinct].indexOf(this.tt) >= 0) {\r\n            if (this.tt == TokenType.multiplication) {\r\n                columns.push({\r\n                    term: null,\r\n                    alias: null,\r\n                    distinct: false,\r\n                    position: this.getCurrentPosition(),\r\n                    type: TokenType.allColumns\r\n                });\r\n                this.nextToken();\r\n            } else {\r\n                let distinct = this.comesToken(TokenType.keywordDistinct, true);\r\n                let columnTerm = this.parseTerm();\r\n                if (columnTerm != null) {\r\n                    let column: ColumnNode = {\r\n                        type: TokenType.column,\r\n                        term: columnTerm,\r\n                        distinct: distinct,\r\n                        position: columnTerm.position\r\n                    }\r\n                    columns.push(column);\r\n                    if (this.comesToken(TokenType.keywordAs)) {\r\n                        this.nextToken();\r\n                        if (this.expect(TokenType.identifier, false)) {\r\n                            column.alias = \"\" + this.cct.value;\r\n                        }\r\n                        this.nextToken();\r\n                    }\r\n                }\r\n            }\r\n            if (tokenTypesAfterListEnd.indexOf(this.tt) >= 0 || this.isEnd()) {\r\n                break;\r\n            }\r\n            this.expect(TokenType.comma, true);\r\n        }\r\n\r\n        if (columns.length == 0) {\r\n            this.pushError(\"Es fehlt die kommaseparierte Liste der gewünschten Spalten.\", \"error\");\r\n        }\r\n\r\n        return columns;\r\n    }\r\n\r\n\r\n    parseTerm(): TermNode {\r\n        return this.parseTermBinary(0);\r\n    }\r\n\r\n    parseTermBinary(precedence: number): TermNode {\r\n\r\n        let left: TermNode;\r\n        if (precedence < Parser.operatorPrecedence.length - 1) {\r\n            left = this.parseTermBinary(precedence + 1);\r\n        } else {\r\n            left = this.parseUnary();\r\n        }\r\n\r\n        let operators = Parser.operatorPrecedence[precedence];\r\n\r\n        if (left == null || operators.indexOf(this.tt) < 0) {\r\n            return left;\r\n        }\r\n\r\n        let first = true;\r\n\r\n        while (first || operators.indexOf(this.tt) >= 0) {\r\n\r\n            let operator: TokenType = this.tt;\r\n\r\n            first = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            this.nextToken();\r\n            let right: TermNode;\r\n            if (precedence < Parser.operatorPrecedence.length - 1) {\r\n                right = this.parseTermBinary(precedence + 1);\r\n            } else {\r\n                right = this.parseUnary();\r\n            }\r\n\r\n            left = {\r\n                type: TokenType.binaryOp,\r\n                position: position,\r\n                operator: operator,\r\n                firstOperand: left,\r\n                secondOperand: right\r\n            };\r\n\r\n\r\n        }\r\n\r\n        return left;\r\n\r\n    }\r\n\r\n\r\n    // -, not, this, super, a.b.c[][].d, a.b(), b() (== this.b()), super.b(), super()\r\n    parseUnary(): TermNode {\r\n\r\n        let term: TermNode;\r\n        let position: TextPosition = this.getCurrentPosition();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n                return this.parseBracket();\r\n            case TokenType.keywordNot:\r\n                position = position;\r\n                this.nextToken();\r\n                term = this.parseTermBinary(2);\r\n                return {\r\n                    type: TokenType.unaryOp,\r\n                    position: position,\r\n                    operand: term,\r\n                    operator: TokenType.keywordNot\r\n                }\r\n            case TokenType.minus:\r\n                // case TokenType.not:\r\n                position = position;\r\n                let tt1 = this.tt;\r\n                this.nextToken();\r\n                term = this.parseUnary();\r\n\r\n                return {\r\n                    type: TokenType.unaryOp,\r\n                    position: position,\r\n                    operand: term,\r\n                    operator: tt1\r\n                };\r\n\r\n            case TokenType.integerConstant:\r\n            case TokenType.charConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n                term = {\r\n                    type: TokenType.constantNode,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: this.tt,\r\n                    constant: this.cct.value\r\n                };\r\n                let isStringConstant = this.tt == TokenType.stringConstant;\r\n                this.nextToken();\r\n\r\n                if (isStringConstant) return this.parseDotOrArrayChains(term);\r\n\r\n                return term;\r\n            case TokenType.identifier: // attribute of current class or local variable\r\n\r\n                let identifier1 = <string>this.cct.value;\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    let rightBracketPosition = parameters.rightBracketPosition;\r\n\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position1,\r\n                        rightBracketPosition: rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        identifier: identifier1,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.identifier,\r\n                        identifier: identifier1,\r\n                        position: position\r\n                    }\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.dot) {\r\n                        let position = this.getCurrentPosition();\r\n                        this.nextToken();\r\n                        this.expect(TokenType.identifier, false);\r\n                        let secondIdentifier: IdentifierNode = {\r\n                            type: TokenType.identifier,\r\n                            identifier: <string>this.cct.value,\r\n                            position: this.getCurrentPosition()\r\n                        }\r\n                        this.nextToken();\r\n                        term = {\r\n                            type: TokenType.dot,\r\n                            identifierLeft: <IdentifierNode>term,\r\n                            identifierRight: secondIdentifier,\r\n                            position: position\r\n                        }\r\n\r\n                    } else if ([TokenType.isNull, TokenType.isNotNull].indexOf(this.tt) >= 0) {\r\n                        term = {\r\n                            type: TokenType.unaryOp,\r\n                            operand: term,\r\n                            operator: this.tt,\r\n                            position: position\r\n                        };\r\n                        this.nextToken();\r\n                    }\r\n                }\r\n\r\n                return term;\r\n            default:\r\n                this.pushError(\"Erwartet wird eine Variable, ein Methodenaufruf oder eine Konstante. Gefunden wurde: \" + this.cct.value);\r\n                return null;\r\n        }\r\n\r\n    }\r\n\r\n    parseList(): ListNode {\r\n        let node: ListNode = {\r\n            type: TokenType.list,\r\n            position: this.getCurrentPosition(),\r\n            elements: []\r\n        }\r\n\r\n        let constantTypes = [TokenType.charConstant, TokenType.stringConstant, TokenType.booleanConstant, TokenType.floatingPointConstant, TokenType.integerConstant];\r\n\r\n        while (constantTypes.indexOf(this.tt) >= 0) {\r\n            node.elements.push({\r\n                type: TokenType.constantNode,\r\n                constant: this.cct.value,\r\n                constantType: this.tt,\r\n                position: this.cct.position\r\n            });\r\n            this.nextToken();\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            }\r\n            this.nextToken();\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    parseBracket(): TermNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n        let tokenBeforeBracket = this.lastToken;\r\n        this.nextToken(); // consume (\r\n\r\n        if (this.tt == TokenType.keywordSelect) {\r\n            let selectNode = this.parseSelect();\r\n            this.expect(TokenType.rightBracket, true);\r\n            return selectNode;\r\n        } else if ([TokenType.comma, TokenType.rightBracket].indexOf(this.ct[1].tt) >= 0 &&\r\n            [TokenType.keywordIn, TokenType.keywordNotIn].indexOf(tokenBeforeBracket.tt) >= 0) {\r\n            let listNode = this.parseList();\r\n            this.expect(TokenType.rightBracket, true);\r\n            return listNode;\r\n        } else {\r\n            let term = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            let bracketsNode: BracketsNode = {\r\n                position: rightBracketPosition,\r\n                type: TokenType.rightBracket,\r\n                termInsideBrackets: term\r\n            }\r\n\r\n\r\n            return bracketsNode;\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    parseMethodCallParameters(): { rightBracketPosition: TextPosition, nodes: TermNode[], commaPositions: TextPosition[] } {\r\n        // Assumption: current token is (        \r\n        this.nextToken();\r\n        if (this.tt == TokenType.rightBracket) {\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n            return { rightBracketPosition: rightBracketPosition, nodes: [], commaPositions: [] };\r\n        }\r\n\r\n        let parameters: TermNode[] = [];\r\n        let commaPositions: TextPosition[] = [];\r\n\r\n        while (true) {\r\n            let pos = this.pos;\r\n\r\n            if (this.tt == TokenType.multiplication) {\r\n                this.nextToken();\r\n                parameters.push({\r\n                    type: TokenType.allColumns,\r\n                    position: this.getCurrentPosition(),\r\n                });\r\n            } else {\r\n                let parameter = this.parseTerm();\r\n                if (parameter != null) {\r\n                    parameters.push(parameter);\r\n                }\r\n            }\r\n\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            } else {\r\n                commaPositions.push(this.getCurrentPosition());\r\n                this.nextToken(); // consume comma\r\n            }\r\n\r\n            // emergency-step:\r\n            if (this.pos == pos) {\r\n                this.nextToken();\r\n            }\r\n\r\n        }\r\n\r\n        let position = this.getCurrentPosition();\r\n        let rightBracketFound = this.expect(TokenType.rightBracket, true);\r\n\r\n        return { rightBracketPosition: rightBracketFound ? position : null, nodes: parameters, commaPositions: commaPositions };\r\n\r\n    }\r\n\r\n    parseDotOrArrayChains(term: TermNode): TermNode {\r\n\r\n        if (term == null) return null;\r\n\r\n        while (this.comesToken([TokenType.dot, TokenType.leftSquareBracket])) {\r\n            if (this.tt == TokenType.dot) {\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.identifier) {\r\n                    this.pushError(\"Erwartet wird der Bezeichner eines Attributs oder einer Methode, gefunden wurde: \" + this.cct.value);\r\n                    return term;\r\n                }\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position,\r\n                        rightBracketPosition: parameters.rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        identifier: identifier,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                }\r\n                // else {\r\n                //     term = {\r\n                //         type: TokenType.pushAttribute,\r\n                //         position: position,\r\n                //         identifier: identifier,\r\n                //         object: term\r\n                //     }\r\n                // }\r\n\r\n            }\r\n        }\r\n\r\n        return term;\r\n    }\r\n\r\n\r\n}","import { ColumnStructure, TableStructure } from \"../../tools/DatabaseTools.js\";\r\nimport { SQLType, SQLBaseType, SQLDerivedType } from \"./SQLTypes.js\";\r\n\r\n\r\nexport class Column {\r\n\r\n    references: Column;\r\n    fromColumnStructure?: ColumnStructure;\r\n    notNull: boolean;\r\n\r\n    constructor(public identifier: string, public type: SQLType, public table: Table, public isPrimaryKey: boolean, public isNullable: boolean, public defaultValue: string, public isAutoIncrement){\r\n\r\n    }\r\n\r\n    static fromColumnStructure(cs: ColumnStructure, table: Table): Column {\r\n\r\n        let regex1 = /^(\\w*) *(?:\\((.*)\\))?.*$/;\r\n\r\n        let typeMatch1 = cs.completeTypeSQL.match(regex1);\r\n        let baseTypeIdentifier: string = typeMatch1[1];\r\n        let commaSeparatedParameters: string = typeMatch1[2];\r\n\r\n        let parameterValues: number[] = [];\r\n        if(commaSeparatedParameters != null){\r\n            parameterValues = commaSeparatedParameters.split(',').map(v => parseInt(v.trim()));           \r\n        }\r\n\r\n        let type: SQLType = SQLBaseType.getBaseType(baseTypeIdentifier);\r\n        if(parameterValues.length > 0 && type != null){\r\n            type = new SQLDerivedType(<SQLBaseType>type, parameterValues);\r\n        }\r\n\r\n        let column = new Column(cs.name, type, table, cs.isPrimaryKey, !cs.isPrimaryKey, cs.defaultValue, cs.isAutoIncrement);\r\n        column.notNull = cs.notNull;\r\n        \r\n        column.fromColumnStructure = cs;\r\n\r\n        return column;\r\n    }\r\n\r\n}\r\n\r\nexport class Table {\r\n    \r\n    public columns: Column[] = [];\r\n\r\n    public size: number;\r\n\r\n    constructor(public identifier: string){\r\n\r\n    }\r\n\r\n    private static fromTableStructure(ts: TableStructure): Table {\r\n        let table: Table = new Table(ts.name);\r\n        table.columns = ts.columns.map( column => Column.fromColumnStructure(column, table));\r\n        table.size = ts.size;\r\n        return table;\r\n    }\r\n\r\n    static fromTableStructureList(tsList: TableStructure[]): Table[]{\r\n\r\n        if(tsList == null) tsList = [];\r\n\r\n        let tables: Table[] = tsList.map(ts => Table.fromTableStructure(ts));\r\n\r\n        let columnStructureToColumnMap: Map<ColumnStructure, Column> = new Map();\r\n        for(let table of tables){\r\n            for(let column of table.columns){\r\n                columnStructureToColumnMap.set(column.fromColumnStructure, column);\r\n            }\r\n        }\r\n\r\n        for(let table of tables){\r\n            for(let column of table.columns){\r\n                let referencedCs = column.fromColumnStructure.references;\r\n                if(referencedCs != null){\r\n                    let referencedColumn = columnStructureToColumnMap.get(referencedCs);\r\n                    column.references = referencedColumn;\r\n                }\r\n            }\r\n        }\r\n\r\n        return tables;\r\n    }\r\n\r\n}","import { DatabaseStructure } from \"../../tools/DatabaseTools.js\";\r\nimport { TextPosition } from \"../lexer/Token.js\";\r\nimport { Table, Column } from \"./SQLTable.js\";\r\n\r\nexport type Symbol = {\r\n    identifier: string;\r\n    table?: Table;\r\n    column?: Column;\r\n    tableAlias?: string;\r\n    posOfDefinition: TextPosition;\r\n    referencedOnPositions: TextPosition[];\r\n}\r\n\r\nexport class SymbolTable {\r\n    parent: SymbolTable; // SymbolTable of parent scope\r\n    positionFrom: TextPosition;\r\n    positionTo: TextPosition;\r\n\r\n    childSymbolTables: SymbolTable[] = [];\r\n\r\n    private symbols: Map<string, Symbol[]> = new Map();\r\n    symbolList: Symbol[] = [];\r\n\r\n    constructor(parentSymbolTable: SymbolTable, positionFrom: TextPosition, positionTo: TextPosition) {\r\n\r\n        this.parent = parentSymbolTable;\r\n\r\n        this.positionFrom = positionFrom;\r\n        this.positionTo = positionTo;\r\n\r\n\r\n        if (this.parent != null) {\r\n            this.parent.childSymbolTables.push(this);\r\n        }\r\n    }\r\n\r\n    extractDatabaseStructure(databaseStructure: DatabaseStructure) {\r\n        for (let table of Table.fromTableStructureList(databaseStructure?.tables)) {\r\n\r\n            this.storeTableSymbols(table);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    storeTableSymbols(table: Table){\r\n        this.storeSymbol({\r\n            identifier: table.identifier,\r\n            posOfDefinition: null,\r\n            referencedOnPositions: [],\r\n            table: table\r\n        });\r\n\r\n        for (let column of table.columns) {\r\n            this.storeSymbol({\r\n                identifier: column.identifier,\r\n                posOfDefinition: null,\r\n                referencedOnPositions: [],\r\n                column: column\r\n            });\r\n        }\r\n    }\r\n\r\n    storeSymbol(symbol: Symbol) {\r\n        let list: Symbol[] = this.symbols.get(symbol.identifier.toLowerCase());\r\n        if (list == null) {\r\n            list = [symbol];\r\n            this.symbols.set(symbol.identifier.toLowerCase(), list);\r\n        } else {\r\n            list.push(symbol);\r\n        }\r\n        this.symbolList.push(symbol);\r\n    }\r\n\r\n    findTableAtPosition(line: number, column: number): SymbolTable {\r\n\r\n        if (!this.containsPosition(line, column)) {\r\n            return null;\r\n        }\r\n\r\n        let shortestSymbolTableContainingPosition = null;\r\n        let shortestPosition = 10000000;\r\n\r\n        for (let st of this.childSymbolTables) {\r\n            if (st.containsPosition(line, column)) {\r\n                let st1 = st.findTableAtPosition(line, column);\r\n                if (st1.positionTo.line - st1.positionFrom.line < shortestPosition) {\r\n                    shortestSymbolTableContainingPosition = st1;\r\n                    shortestPosition = st1.positionTo.line - st1.positionFrom.line;\r\n                }\r\n            }\r\n            // if(st.containsPosition(line, column) && st.positionTo.line - st.positionFrom.line < shortestPosition){\r\n            //     shortestSymbolTableContainingPosition = st;\r\n            //     shortestPosition = st.positionTo.line - st.positionFrom.line;\r\n            // }\r\n        }\r\n\r\n        if (shortestSymbolTableContainingPosition != null) {\r\n            return shortestSymbolTableContainingPosition;\r\n        } else {\r\n            return this;\r\n        }\r\n\r\n    }\r\n\r\n    containsPosition(line: number, column: number) {\r\n        if (line < this.positionFrom.line || line > this.positionTo.line) {\r\n            return false;\r\n        }\r\n\r\n        if (line == this.positionFrom.line && column < this.positionFrom.column) return false;\r\n        if (line == this.positionTo.line && column > this.positionTo.column + 1) return false;\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    findTable(identifier: string): Table {\r\n        let tables = this.findTables(identifier);\r\n        if(tables.length == 0) return null;\r\n        return tables[0].table;\r\n    }\r\n\r\n    findTables(identifier: string): Symbol[] {\r\n\r\n        let symbolTable: SymbolTable = this;\r\n        while(symbolTable != null){\r\n\r\n            let symbols = symbolTable.symbols.get(identifier.toLowerCase());\r\n            if(symbols != null){\r\n                symbols = symbols.filter(s => s.table != null);\r\n                if(symbols.length > 0){\r\n                    return symbols;\r\n                }\r\n            }\r\n\r\n            symbolTable = symbolTable.parent;\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    findColumn(identifier: string): Symbol[] {\r\n\r\n        let symbolTable: SymbolTable = this;\r\n        while(symbolTable != null){\r\n\r\n            let symbols = symbolTable.symbols.get(identifier.toLowerCase());\r\n            if(symbols != null){\r\n                symbols = symbols.filter(s => s.column != null);\r\n                if(symbols.length > 0){\r\n                    return symbols;\r\n                }\r\n            }\r\n\r\n            symbolTable = symbolTable.parent;\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { SQLBaseType, SQLType } from \"./SQLTypes.js\";\r\n\r\nexport class SQLMethodParameter {\r\n    type: SQLType;\r\n    constructor(public identifier: string, type: string){\r\n        this.type = SQLBaseType.getBaseType(type);\r\n    }\r\n}\r\n\r\nexport class SQLMethod {\r\n    acceptsStarParameter: boolean = false;\r\n    public returnType: SQLType;\r\n    constructor(public identifier: string, public isAggregating: boolean, returnType: string, public parameters: SQLMethodParameter[]){\r\n        this.returnType = SQLBaseType.getBaseType(returnType);\r\n    }\r\n\r\n}\r\n\r\nexport class SQLMethodStore {\r\n\r\n    static instance: SQLMethodStore;\r\n    public methods: SQLMethod[] = [];\r\n\r\n    static getInstance():SQLMethodStore {\r\n        if(this.instance == null){\r\n            this.instance = new SQLMethodStore();\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    constructor(){\r\n        this.pushOneParameterMethod(\"max\" ,\"integer\", \"integer\");\r\n        this.pushOneParameterMethod(\"max\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"max\" ,\"date\", \"date\");\r\n        this.pushOneParameterMethod(\"max\" ,\"time\", \"time\");\r\n        this.pushOneParameterMethod(\"max\" ,\"datetime\", \"datetime\");\r\n        this.pushOneParameterMethod(\"max\" ,\"timestamp\", \"timestamp\");\r\n        this.pushOneParameterMethod(\"min\" ,\"integer\", \"integer\");\r\n        this.pushOneParameterMethod(\"min\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"min\" ,\"date\", \"date\");\r\n        this.pushOneParameterMethod(\"min\" ,\"time\", \"time\");\r\n        this.pushOneParameterMethod(\"min\" ,\"datetime\", \"datetime\");\r\n        this.pushOneParameterMethod(\"min\" ,\"timestamp\", \"timestamp\");\r\n        this.pushOneParameterMethod(\"avg\" ,\"integer\", \"integer\");\r\n        this.pushOneParameterMethod(\"avg\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"sum\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"sum\" ,\"integer\", \"integer\");\r\n\r\n        let countMethod = new SQLMethod(\"count\", true, \"integer\", [new SQLMethodParameter(\"spalte\", \"text\")]);\r\n        countMethod.acceptsStarParameter = true;\r\n        this.methods.push(countMethod);\r\n    }\r\n    \r\n    getMethods(identifier: string){\r\n        return this.methods.filter(m => m.identifier == identifier.toLowerCase());\r\n    }\r\n\r\n\r\n    pushOneParameterMethod(identifier: string, returnType: string, parameterType: string){\r\n        this.methods.push(new SQLMethod(identifier, true, returnType, [new SQLMethodParameter(\"spalte\", parameterType)]));\r\n\r\n    }\r\n}","export function hash(s: string){\r\n    let hash: number = 0;\r\n    let chr: number;\r\n    for (let i = 0; i < s.length; i++) {\r\n      chr   = s.charCodeAt(i);\r\n      hash  = ((hash << 5) - hash) + chr;\r\n      hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n\r\nexport function escapeHtml(unsafe: string): string {\r\n  return unsafe\r\n      .replace(/['\"]+/g, '')\r\n       .replace(/&/g, \"&amp;\")\r\n       .replace(/</g, \"&lt;\")\r\n       .replace(/>/g, \"&gt;\")\r\n       .replace(/\"/g, \"&quot;\")\r\n       .replace(/'/g, \"&#039;\");\r\n}\r\n\r\nexport function dateToString(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth() + 1)}.${date.getFullYear()}, ${twoDez(date.getHours())}:${twoDez(date.getMinutes())}`;\r\n}\r\n\r\nexport function dateToStringWithoutTime(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth())}.${date.getFullYear()}`;\r\n}\r\n\r\nfunction twoDez(z: number):string {\r\n  if(z < 10) return \"0\" + z;\r\n  return \"\" + z;\r\n}\r\n\r\nexport function stringToDate(text: string): Date {\r\n\r\n  let match = text.match(/^(\\d{2})\\.(\\d{2})\\.(\\d{4}), (\\d{2}):(\\d{2})$/);\r\n\r\n  let date: Date = new Date(Number.parseInt(match[3]), Number.parseInt(match[2]), Number.parseInt(match[1]), Number.parseInt(match[4]), Number.parseInt(match[5]) );\r\n\r\n  return date;\r\n}\r\n\r\nexport function stringWrap(s: string, length: number ): string{\r\n  return s.replace(\r\n    new RegExp(`(?![^\\\\n]{1,${length}}$)([^\\\\n]{1,${length}})\\\\s`, 'g'), '$1\\n'\r\n  );\r\n} \r\n\r\nexport function formatAsJavadocComment(s: string, indent: number|string = \"\"): string {\r\n  let indentString = \"\";\r\n\r\n  if(typeof indent == \"string\"){\r\n    indentString = indent;\r\n  } else {\r\n    for(let i = 0; i < indent; i++){\r\n      indentString += \" \";\r\n    }\r\n  }\r\n\r\n  s = stringWrap(s, 60);\r\n  if(s.length > 0) s = \"\\n\" + s;\r\n  s = indentString + \"/**\" + s.replace(/\\n/g, \"\\n\" + indentString + \" * \") + \"\\n\" + indentString + \" */\";\r\n  return s;\r\n}\r\n\r\n\r\nexport function isDate(inputText: string) {\r\n\r\n      if (inputText == null || typeof inputText != 'string') return false;\r\n\r\n      // var dateformat = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/;\r\n      var dateformat = /^\\d{4}[\\/\\-](0?[1-9]|1[012])[\\/\\-](0?[1-9]|[12][0-9]|3[01])$/;\r\n      // Match the date format through regular expression\r\n      if (inputText.match(dateformat)) {\r\n          //Test which seperator is used '/' or '-'\r\n          var opera1 = inputText.split('/');\r\n          var opera2 = inputText.split('-');\r\n          var lopera1 = opera1.length;\r\n          var lopera2 = opera2.length;\r\n          // Extract the string into month, date and year\r\n          if (lopera1 > 1) {\r\n              var pdate = inputText.split('/');\r\n          }\r\n          else if (lopera2 > 1) {\r\n              var pdate = inputText.split('-');\r\n          }\r\n          if (pdate.length != 3) return false;\r\n          var dd = parseInt(pdate[2]);\r\n          var mm = parseInt(pdate[1]);\r\n          var yy = parseInt(pdate[0]);\r\n          // Create list of days of a month [assume there is no leap year by default]\r\n          var ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n          if (mm == 1 || mm > 2) {\r\n              if (dd > ListofDays[mm - 1]) {\r\n                  return false;\r\n              }\r\n          }\r\n          if (mm == 2) {\r\n              var lyear = false;\r\n              if ((!(yy % 4) && yy % 100) || !(yy % 400)) {\r\n                  lyear = true;\r\n              }\r\n              if ((lyear == false) && (dd >= 29)) {\r\n                  return false;\r\n              }\r\n              if ((lyear == true) && (dd > 29)) {\r\n                  return false;\r\n              }\r\n              return true;\r\n          }\r\n\r\n          return true;\r\n\r\n      }\r\n      else {\r\n          return false;\r\n      }\r\n  }\r\n\r\n  export function isDateTime(inputText: string) {\r\n\r\n      if (inputText == null || typeof inputText != 'string') return false;\r\n\r\n      // var dateformat = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/;\r\n      var dateformat = /^\\d{4}[\\-](0[1-9]|1[012])[\\-](0[1-9]|[12][0-9]|3[01]) ([01][0-9]|2[0123]):([0-5][0-9]):([0-5][0-9])$/;\r\n      // Match the date format through regular expression\r\n      if (inputText.match(dateformat)) {\r\n          var splitStr = inputText.split(' ');\r\n          var dateStr = splitStr[0];\r\n          //var timeStr = splitStr[1];\r\n\r\n          if (dateStr.length != 10) return false;\r\n          var dd = parseInt(dateStr.substring(8,10));\r\n          var mm = parseInt(dateStr.substring(5, 7));\r\n          var yy = parseInt(dateStr.substring(0, 4));\r\n          // Create list of days of a month [assume there is no leap year by default]\r\n          var ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n          if (mm == 1 || mm > 2) {\r\n              if (dd > ListofDays[mm - 1]) {\r\n                  return false;\r\n              }\r\n          }\r\n          if (mm == 2) {\r\n              var lyear = false;\r\n              if ((!(yy % 4) && yy % 100) || !(yy % 400)) {\r\n                  lyear = true;\r\n              }\r\n              if ((lyear == false) && (dd >= 29)) {\r\n                  return false;\r\n              }\r\n              if ((lyear == true) && (dd > 29)) {\r\n                  return false;\r\n              }\r\n              return true;\r\n          }\r\n\r\n          return true;\r\n\r\n      }\r\n      else {\r\n          return false;\r\n      }\r\n  }\r\n  export function isTime(inputText: string) {\r\n\r\n      if (inputText == null || typeof inputText != 'string') return false;\r\n\r\n      var timeformat = /^([01][0-9]|2[0123]):([0-5][0-9]):([0-5][0-9])$/;\r\n      // Match the date format through regular expression\r\n      return inputText.match(timeformat) != null;\r\n  }\r\n","import { DatabaseTool } from \"../../tools/DatabaseTools.js\";\r\nimport { TextPosition, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { CompletionHint, Module } from \"./Module.js\";\r\nimport { Symbol, SymbolTable } from \"./SymbolTable.js\";\r\nimport { AlterTableNode, ASTNode, BinaryOpNode, CreateTableNode, DeleteNode, DotNode, DropTableNode, IdentifierNode, InsertNode, MethodcallNode, SelectNode, TableOrSubqueryNode, TermNode, UpdateNode } from \"./Ast.js\";\r\nimport { Error, ErrorLevel, QuickFix } from \"../lexer/Lexer.js\";\r\nimport { Column, Table } from \"./SQLTable.js\";\r\nimport { SQLBaseType, SQLType } from \"./SQLTypes.js\";\r\nimport { SQLMethodStore } from \"./SQLMethods.js\";\r\nimport { isDate, isDateTime, isTime } from \"../../tools/StringTools.js\";\r\n\r\n\r\nexport class SymbolResolver {\r\n\r\n    symbolTableStack: SymbolTable[] = [];\r\n    errorList: Error[];\r\n    module: Module;\r\n    databaseTool: DatabaseTool;\r\n    tables: Table[];\r\n\r\n    constructor(databaseTool: DatabaseTool) {\r\n        this.databaseTool = databaseTool;\r\n        this.tables = Table.fromTableStructureList(databaseTool.databaseStructure?.tables);\r\n    }\r\n\r\n    start(module: Module) {\r\n        this.module = module;\r\n        this.symbolTableStack = [];\r\n        this.errorList = [];\r\n\r\n        module.mainSymbolTable = new SymbolTable(null, { column: 0, line: 0, length: 0 }, { column: 0, line: 100000, length: 0 })\r\n\r\n        this.symbolTableStack.push(module.mainSymbolTable);\r\n\r\n        for (let statement of this.module.sqlStatements) {\r\n\r\n            let errorsBeforeStatement = this.errorList.length;\r\n\r\n            let astNode = statement.ast;\r\n            if (astNode == null) continue;\r\n\r\n            switch (astNode.type) {\r\n                case TokenType.keywordSelect:\r\n                    this.resolveSelect(astNode);\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n                case TokenType.keywordInsert:\r\n                    this.resolveInsert(astNode);\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n                case TokenType.keywordCreate:\r\n                    this.resolveCreateTable(astNode);\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n                case TokenType.keywordUpdate:\r\n                    this.resolveUpdate(astNode);\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n                case TokenType.keywordDelete:\r\n                    this.resolveDelete(astNode);\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n                case TokenType.keywordDrop:\r\n                    this.resolveDropTable(astNode);\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n                case TokenType.keywordAlter:\r\n                    this.resolveAlterTable(astNode)\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n\r\n                default:\r\n                    break;\r\n            }\r\n\r\n            statement.hasErrors = statement.hasErrors || this.errorList.length > errorsBeforeStatement;\r\n\r\n        }\r\n\r\n        module.errors[2] = this.errorList;\r\n\r\n    }\r\n\r\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position: TextPosition, quickFix?: QuickFix) {\r\n        // if (position == null) position = Object.assign({}, this.position);\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n\r\n    getCurrentSymbolTable(): SymbolTable {\r\n        return this.symbolTableStack[this.symbolTableStack.length - 1];\r\n    }\r\n\r\n    pushNewSymbolTable(positionFrom: TextPosition, positionTo: TextPosition): SymbolTable {\r\n        if (positionTo == null) {\r\n            positionTo = {\r\n                line: 100000,\r\n                column: 1,\r\n                length: 1\r\n            }\r\n        };\r\n        let st: SymbolTable = new SymbolTable(this.getCurrentSymbolTable(), positionFrom, positionTo);\r\n        this.symbolTableStack.push(st);\r\n        return st;\r\n    }\r\n\r\n    resolveSelect(selectNode: SelectNode): Table {\r\n        let resultTable: Table = new Table(null);\r\n\r\n        selectNode.symbolTable = this.pushNewSymbolTable(selectNode.position, selectNode.endPosition);\r\n\r\n        // From\r\n        let joinedTables: Table[] = [];\r\n        this.resolveTableOrSubQuery(selectNode.fromNode, joinedTables);\r\n        if (selectNode.fromStartPosition != null) {\r\n            let fromSymbolTable = new SymbolTable(this.getCurrentSymbolTable(), selectNode.fromStartPosition, selectNode.fromEndPosition);\r\n            fromSymbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n        }\r\n\r\n        // Column list\r\n        for (let columnNode of selectNode.columnList) {\r\n            if (columnNode.type == TokenType.allColumns) {\r\n                for (let table of joinedTables) {\r\n                    for (let column of table.columns) {\r\n                        let c: Column = new Column(column.identifier, column.type, resultTable, false, true, column.defaultValue, column.isAutoIncrement);\r\n                        resultTable.columns.push(c);\r\n                    }\r\n                }\r\n            } else {\r\n                this.resolveTerm(columnNode.term);\r\n                let c1: Column = new Column(columnNode.alias, columnNode.term.sqlType, resultTable, false, true, null, false);\r\n                resultTable.columns.push(c1);\r\n                if (c1.identifier != null) {\r\n                    selectNode.symbolTable.storeSymbol({\r\n                        identifier: c1.identifier,\r\n                        posOfDefinition: columnNode.term.position,\r\n                        referencedOnPositions: [],\r\n                        column: c1\r\n                    })\r\n                }\r\n            }\r\n        }\r\n\r\n        // where...\r\n        if (selectNode.whereNode != null) {\r\n            let whereType = this.resolveTerm(selectNode.whereNode);\r\n            if (whereType != null && whereType.getBaseTypeName() != \"boolean\") {\r\n                this.pushError(\"Das Ergebnis des where-Teils einer select-Anweisung muss vom Typ boolean sein.\", \"error\", selectNode.whereNode.position);\r\n            }\r\n        }\r\n\r\n\r\n        // TODO: group by, order by\r\n\r\n        return resultTable;\r\n    }\r\n\r\n    resolveDropTable(node: DropTableNode) {\r\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\r\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n\r\n        if (node.tableIdentifier == null) return;\r\n\r\n        if (!node.ifExists) {\r\n            let table = node.symbolTable.findTable(node.tableIdentifier);\r\n            if (table == null) this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\r\n        }\r\n\r\n    }\r\n\r\n    resolveDelete(node: DeleteNode) {\r\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\r\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n\r\n        if (node.tableIdentifier == null) return;\r\n\r\n        let table = node.symbolTable.findTable(node.tableIdentifier);\r\n        if (table == null) this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\r\n\r\n\r\n        // if(node.whereNodeBegin != null){\r\n        //     let symbolTable = this.pushNewSymbolTable(node.whereNodeBegin, node.whereNodeEnd);\r\n        //     symbolTable.storeTableSymbols(table);\r\n        // }\r\n\r\n\r\n        if (node.whereNode != null) {\r\n            let whereSymbolTable = this.pushNewSymbolTable(node.whereNodeBegin, node.whereNodeEnd);\r\n            if (table != null) whereSymbolTable.storeTableSymbols(table);\r\n            this.resolveTerm(node.whereNode);\r\n            this.symbolTableStack.pop();\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    resolveAlterTable(node: AlterTableNode) {\r\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\r\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n\r\n        if (node.tableIdentifier == null) {\r\n            return;\r\n        }\r\n\r\n        let table = node.symbolTable.findTable(node.tableIdentifier);\r\n        if (table == null) {\r\n            this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\r\n        }\r\n\r\n        let oldColumn: Column = null;\r\n        if (node.oldColumnName != null) {\r\n            oldColumn = table.columns.find(c => c.identifier.toLocaleLowerCase() == node.oldColumnName.toLocaleLowerCase());\r\n            if (oldColumn == null) {\r\n                this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" hat keine Spalte mit dem Bezeichner \" + node.oldColumnName, \"error\", node.oldColumnPosition);\r\n            }\r\n        }\r\n\r\n        switch (node.kind) {\r\n            case \"dropColumn\":\r\n                // nothing to do as node.oldColumnName is checked above\r\n                break;\r\n            case \"addColumn\":\r\n                let columnNode = node.columnDef;\r\n                if (columnNode == null) break;\r\n                if (columnNode.foreignKeyInfo != null && columnNode.baseType != null) {\r\n                    let fki = columnNode.foreignKeyInfo;\r\n                    let tables = this.getCurrentSymbolTable().findTables(fki.referencesTable);\r\n                    if (tables.length == 1) {\r\n                        let table = tables[0].table;\r\n                        let column = table.columns.find(c => c.identifier == fki.referencesColumn);\r\n                        if (column != null && column.type != null) {\r\n                            if (!column.isPrimaryKey) {\r\n                                this.pushError(\"Die referenzierte Spalte \" + fki.referencesTable + \".\" + fki.referencesColumn + \" ist kein Primärschlüssel.\", \"warning\", columnNode.referencesPosition);\r\n                            }\r\n                            if (!column.type.canCastTo(columnNode.baseType)) {\r\n                                this.pushError(\"Der Datentyp \" + columnNode.baseType.toString() + \" der Spalte \" + columnNode.identifier +\r\n                                    \" kann nich in den Datentyp \" + column.type.toString() + \" der referenzierten Spalte \" + table.identifier + \".\" +\r\n                                    column.identifier + \" umgewandelt werden.\", \"error\", columnNode.referencesPosition);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            case \"renameColumn\":\r\n                // nothing to do as node.oldColumnName is checked above\r\n                break;\r\n            case \"renameTable\":\r\n                // nothing to do \r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    resolveUpdate(node: UpdateNode) {\r\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\r\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n\r\n        if (node.tableIdentifier == null) {\r\n            return;\r\n        }\r\n\r\n        let table = node.symbolTable.findTable(node.tableIdentifier);\r\n        if (table == null) this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\r\n\r\n        for (let i = 0; i < node.columnIdentifiers.length; i++) {\r\n            let ci = node.columnIdentifiers[i];\r\n            let ciPos = node.columnIdentifierPositions[i];\r\n            let value = node.values[i];\r\n\r\n            if (ci == null) continue;\r\n            let column = table.columns.find(c => c.identifier == ci);\r\n\r\n            if (column == null) {\r\n                this.pushError(ci + \" ist kein Bezeichner einer Spalte der Tabelle \" + node.tableIdentifier + \".\", \"error\", ciPos);\r\n            }\r\n\r\n            if (value == null) continue;\r\n            let symbolTable = this.pushNewSymbolTable(node.valuePosBegin[i], node.valuePosEnd[i]);\r\n            symbolTable.storeTableSymbols(table);\r\n            this.resolveTerm(value);\r\n            this.symbolTableStack.pop();\r\n\r\n        }\r\n\r\n        if (node.whereNodeBegin != null) {\r\n            let symbolTable = this.pushNewSymbolTable(node.whereNodeBegin, node.whereNodeEnd);\r\n            symbolTable.storeTableSymbols(table);\r\n        }\r\n\r\n        if (node.whereNode != null) {\r\n            this.resolveTerm(node.whereNode);\r\n        }\r\n        this.symbolTableStack.pop();\r\n\r\n    }\r\n\r\n\r\n\r\n    resolveCreateTable(createTableNode: CreateTableNode) {\r\n\r\n        createTableNode.symbolTable = this.pushNewSymbolTable(createTableNode.position, createTableNode.endPosition);\r\n        createTableNode.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n\r\n        let thisTable: Table = {\r\n            identifier: createTableNode.identifier,\r\n            columns: null,\r\n            size: 0\r\n        }\r\n\r\n        thisTable.columns = createTableNode.columnList.map(c => {\r\n            return {\r\n                identifier: c.identifier,\r\n                isNullable: false,\r\n                isPrimaryKey: c.isPrimary,\r\n                isAutoIncrement: c.isAutoIncrement,\r\n                notNull: false,\r\n                references: null,\r\n                table: thisTable,\r\n                type: c.baseType,\r\n                defaultValue: c.defaultValue\r\n            }\r\n        });\r\n\r\n        createTableNode.symbolTable.storeTableSymbols(thisTable);\r\n\r\n        for (let columnNode of createTableNode.columnList) {\r\n            if (createTableNode.columnList.filter(c => c.identifier.toLocaleLowerCase() == columnNode.identifier.toLocaleLowerCase()).length > 1) {\r\n                this.pushError(\"Der Spaltenbezeichner \" + columnNode.identifier + \" darf in einer Tabelle nur ein einziges Mal verwendet werden\", \"error\", columnNode.position);\r\n            }\r\n\r\n            if (columnNode.foreignKeyInfo != null && columnNode.baseType != null) {\r\n                let fki = columnNode.foreignKeyInfo;\r\n                let tables = this.getCurrentSymbolTable().findTables(fki.referencesTable);\r\n                if (tables.length == 1) {\r\n                    let table = tables[0].table;\r\n                    let column = table.columns.find(c => c.identifier == fki.referencesColumn);\r\n                    if (column != null && column.type != null) {\r\n                        if (!column.isPrimaryKey) {\r\n                            this.pushError(\"Die referenzierte Spalte \" + fki.referencesTable + \".\" + fki.referencesColumn + \" ist kein Primärschlüssel.\", \"warning\", columnNode.referencesPosition);\r\n                        }\r\n                        if (!column.type.canCastTo(columnNode.baseType)) {\r\n                            this.pushError(\"Der Datentyp \" + columnNode.baseType.toString() + \" der Spalte \" + columnNode.identifier +\r\n                                \" kann nich in den Datentyp \" + column.type.toString() + \" der referenzierten Spalte \" + table.identifier + \".\" +\r\n                                column.identifier + \" umgewandelt werden.\", \"error\", columnNode.referencesPosition);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        for (let fki of createTableNode.foreignKeyInfoList) {\r\n\r\n            let columnNode = createTableNode.columnList.find(cn => cn.identifier == fki.column);\r\n            if (columnNode == null) continue;\r\n\r\n            let tables = this.getCurrentSymbolTable().findTables(fki.referencesTable);\r\n            if (tables.length == 1) {\r\n                let table = tables[0].table;\r\n                let column = table.columns.find(c => c.identifier == fki.referencesColumn);\r\n                if (column != null && column.type != null) {\r\n                    if (!column.isPrimaryKey) {\r\n                        this.pushError(\"Die referenzierte Spalte \" + fki.referencesTable + \".\" + fki.referencesColumn + \" ist kein Primärschlüssel.\", \"warning\", fki.referencesPosition);\r\n                    }\r\n                    if (!column.type.canCastTo(columnNode.baseType)) {\r\n                        this.pushError(\"Der Datentyp \" + columnNode.baseType.toString() + \" der Spalte \" + columnNode.identifier +\r\n                            \" kann nich in den Datentyp \" + column.type.toString() + \" der referenzierten Spalte \" + table.identifier + \".\" +\r\n                            column.identifier + \" umgewandelt werden.\", \"error\", fki.referencesPosition);\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    resolveTableOrSubQuery(tosNode: TableOrSubqueryNode, joinedTables: Table[]) {\r\n        if (tosNode == null) return;\r\n\r\n        switch (tosNode.type) {\r\n            case TokenType.table:\r\n                let tableList = this.tables.filter(t => t.identifier.toLowerCase() == tosNode.identifier.toLowerCase());\r\n                if (tableList.length == 0) {\r\n                    this.pushError(tosNode.identifier + \" ist nicht der Name einer Tabelle.\", \"error\", tosNode.position);\r\n                } else if (tableList.length > 1) {\r\n                    this.pushError(\"Der Bezeichner \" + tosNode.identifier + \" ist hier nicht eindeutig.\", \"error\", tosNode.position);\r\n                } else {\r\n                    let table: Table = tableList[0];\r\n                    joinedTables.push(table);\r\n                    this.storeTableIntoSymbolTable(table, tosNode.position, tosNode.alias);\r\n                }\r\n\r\n                break;\r\n\r\n            case TokenType.keywordJoin:\r\n                this.resolveTableOrSubQuery(tosNode.firstOperand, joinedTables);\r\n                this.resolveTableOrSubQuery(tosNode.secondOperand, joinedTables);\r\n                break;\r\n\r\n            case TokenType.subquery:\r\n                tosNode.table = this.resolveSelect(tosNode.query);\r\n                joinedTables.push(tosNode.table);\r\n                if (tosNode.alias != null) {\r\n                    tosNode.table.identifier = tosNode.alias;\r\n                    this.storeTableIntoSymbolTable(tosNode.table, tosNode.position);\r\n                }\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    storeTableIntoSymbolTable(table: Table, position: TextPosition, alias?: string) {\r\n        let symbolTable = this.getCurrentSymbolTable();\r\n        symbolTable.storeSymbol({\r\n            identifier: alias == null ? table.identifier.toLowerCase() : alias.toLowerCase(),\r\n            posOfDefinition: position,\r\n            table: table,\r\n            referencedOnPositions: []\r\n        });\r\n        for (let column of table.columns) {\r\n            symbolTable.storeSymbol({\r\n                identifier: column.identifier.toLowerCase(),\r\n                posOfDefinition: null,\r\n                column: column,\r\n                tableAlias: alias,\r\n                referencedOnPositions: []\r\n            });\r\n        }\r\n    }\r\n\r\n    resolveTerm(node: TermNode): SQLType {\r\n        if (node == null) return null;\r\n\r\n        switch (node.type) {\r\n            case TokenType.binaryOp:\r\n                if ([TokenType.keywordIn, TokenType.keywordNotIn].indexOf(node.operator) >= 0) {\r\n                    return this.resolveNotIn(node);\r\n                }\r\n\r\n                let typeLeft = this.resolveTerm(node.firstOperand);\r\n                let typeRight = this.resolveTerm(node.secondOperand);\r\n                if (typeLeft != null && typeRight != null) {\r\n                    let resultType = typeLeft.getBinaryResultType(node.operator, typeRight);\r\n                    if (resultType == null) {\r\n                        this.pushError(\"Der Operator \" + TokenTypeReadable[node.operator] + \" ist für die Datentypen \" + typeLeft.toString() + \" und \" + typeRight.toString() + \" nicht definiert.\", \"error\", node.position);\r\n                    }\r\n                    node.sqlType = resultType;\r\n                    return resultType;\r\n                } else {\r\n                    return null;\r\n                }\r\n                break;\r\n            case TokenType.unaryOp:\r\n                let operandType = this.resolveTerm(node.operand);\r\n                if (operandType != null) {\r\n                    let resultType1 = operandType.getUnaryResultType(node.operator);\r\n                    if (resultType1 == null) {\r\n                        this.pushError(\"Der Operator \" + TokenTypeReadable[node.operator] + \" ist für einen Operanden des Datentyps \" + operandType.toString() + \" nicht definiert.\", \"error\", node.position);\r\n                    }\r\n                    node.sqlType = resultType1;\r\n                    return resultType1;\r\n                } else {\r\n                    return null;\r\n                }\r\n                break;\r\n            case TokenType.callMethod:\r\n                return this.resolveMethodCall(node);\r\n                break;\r\n            //    ConstantNode | IdentifierNode | DotNode | SelectNode | BracketsNode | StarAttributeNode | SelectNode | ListNode;\r\n\r\n            case TokenType.constantNode:\r\n                node.sqlType = SQLBaseType.fromConstantType(node.constantType);\r\n                return node.sqlType;\r\n                break;\r\n            case TokenType.identifier:\r\n                return this.resolveIdentifier(node);\r\n                break;\r\n            case TokenType.dot:\r\n                return this.resolveDot(node);\r\n                break;\r\n            case TokenType.keywordSelect:\r\n                let selectTable = this.resolveSelect(node);\r\n                if (selectTable.columns.length != 1) {\r\n                    this.pushError(\"Die Ergebnistabelle einer Unterabfrage an dieser Stelle muss genau eine Spalte besitzen.\", \"error\", node.position);\r\n                    return null;\r\n                }\r\n                return selectTable.columns[0].type;\r\n                break;\r\n            case TokenType.rightBracket:   // BracketsNode\r\n                node.sqlType = this.resolveTerm(node.termInsideBrackets);\r\n                return node.sqlType;\r\n                break;\r\n            case TokenType.allColumns:\r\n                this.pushError(\"Das Zeichen * kann hier nicht verwendet werden.\", \"error\", node.position);\r\n                break;\r\n            case TokenType.list:\r\n                this.pushError(\"Eine Liste wird hier nicht erwartet.\", \"error\", node.position);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    resolveDot(node: DotNode): SQLType {\r\n        let tableSymbols = this.getCurrentSymbolTable().findTables(node.identifierLeft.identifier);\r\n        if (tableSymbols.length == 0) {\r\n            this.pushError(\"Die Tabelle \" + node.identifierLeft.identifier + \" kann nicht gefunden werden.\", \"error\", node.identifierLeft.position);\r\n            return null;\r\n        }\r\n        if (tableSymbols.length > 1) {\r\n            this.pushError(\"Der Tabellenbezeichner \" + node.identifierLeft.identifier + \" ist nicht eindeutig.\", \"error\", node.identifierLeft.position);\r\n            return null;\r\n        }\r\n        let table = tableSymbols[0].table;\r\n\r\n        let columns = table.columns.filter(c => c.identifier.toLowerCase() == node.identifierRight.identifier.toLowerCase());\r\n\r\n        if (columns.length == 0) {\r\n            this.pushError(\"Die Tabelle \" + node.identifierLeft.identifier + \" hat keine Spalte mit dem Bezeichner \" + node.identifierRight.identifier + \".\", \"error\", node.identifierRight.position);\r\n            return;\r\n        }\r\n\r\n        if (columns.length > 1) {\r\n            this.pushError(\"Die Tabelle \" + node.identifierLeft.identifier + \" hat mehrere Spalten mit dem Bezeichner \" + node.identifierRight.identifier + \".\", \"error\", node.identifierRight.position);\r\n            return;\r\n        }\r\n\r\n        let column = columns[0];\r\n        node.sqlType = column.type;\r\n        return column.type;\r\n\r\n    }\r\n\r\n    resolveIdentifier(node: IdentifierNode): SQLType {\r\n        let symbols = this.getCurrentSymbolTable().findColumn(node.identifier);\r\n        if (symbols.length == 0) {\r\n            this.pushError(\"Der Bezeichner \" + node.identifier + \" ist an dieser Stelle nicht bekannt.\", \"error\", node.position);\r\n            return null;\r\n        }\r\n        if (symbols.length > 1) {\r\n            this.pushError(\"Der Bezeichner \" + node.identifier + \" ist nicht eindeutig.\", \"error\", node.position);\r\n            return null;\r\n        }\r\n\r\n        let symbol = symbols[0];\r\n        node.sqlType = symbol.column.type;\r\n        return symbol.column.type;\r\n    }\r\n\r\n    resolveMethodCall(node: MethodcallNode): SQLType {\r\n\r\n        let methodStore = SQLMethodStore.getInstance();\r\n        let methods = methodStore.getMethods(node.identifier);\r\n\r\n        methods = methods.filter(m => m.parameters.length == node.operands.length);\r\n        if (node.operands.length == 1 && node.operands[0].type == TokenType.allColumns) {\r\n            methods = methods.filter(m => m.acceptsStarParameter);\r\n            node.sqlType = methods[0].returnType;\r\n            return node.sqlType;\r\n        }\r\n\r\n        if (methods.length == 0) {\r\n            this.pushError(\"Es gibt keine passende Methode mit dem Bezeichner '\" + node.identifier + \"'.\", \"error\", node.position);\r\n            return null;\r\n        }\r\n\r\n        for (let operand of node.operands) {\r\n            if (this.resolveTerm(operand) == null) {\r\n                node.sqlType = methods[0].returnType;\r\n                return node.sqlType;\r\n            }\r\n        }\r\n\r\n        for (let method of methods) {\r\n            let found = true;\r\n            for (let i = 0; i < method.parameters.length; i++) {\r\n                let methodParameter = method.parameters[i];\r\n                let operand = node.operands[i];\r\n                if (!operand.sqlType.canCastTo(methodParameter.type)) {\r\n                    found = false;\r\n                    break;\r\n                }\r\n            }\r\n            if (found) {\r\n                node.sqlType = method.returnType;\r\n                return node.sqlType;\r\n            }\r\n        }\r\n\r\n        this.pushError(\"Es gibt keine passende Methode mit dem Bezeichner '\" + node.identifier + \"'.\", \"error\", node.position);\r\n        return null;\r\n\r\n    }\r\n\r\n    resolveNotIn(node: BinaryOpNode): SQLType {\r\n\r\n        if (node.firstOperand == null || node.secondOperand == null) return null;\r\n\r\n        let operatorString = TokenTypeReadable[node.operator];\r\n\r\n        this.resolveTerm(node.firstOperand);\r\n        let leftType = node.firstOperand.sqlType;\r\n        if (leftType != null) {\r\n            if (node.secondOperand.type == TokenType.keywordSelect) {\r\n                let selectNode = node.secondOperand;\r\n                if (selectNode.columnList.length != 1) {\r\n                    this.pushError(\"Wenn rechts vom Operator '\" + operatorString + \"' eine Unterabfrage steht, muss die Ergebnistabelle dieser Unterabfrage genau eine Spalte haben.\", \"error\", selectNode.position);\r\n                }\r\n                this.resolveSelect(selectNode);\r\n                let pType = selectNode.columnList[0].term.sqlType;\r\n                if (!pType.canCastTo(leftType)) {\r\n                    this.pushError(\"Der Datentyp der Ergebnisspalte der Unterabfrage ist \" + pType.toString() + \". Dieser kann nicht in den Datentyp \" + leftType.toString() + \" umgewandelt werden.\", \"error\", selectNode.position);\r\n                }\r\n            } else if (node.secondOperand.type == TokenType.list) {\r\n                let listNode = node.secondOperand;\r\n                for (let element of listNode.elements) {\r\n                    let elementType = SQLBaseType.fromConstantType(element.constantType);\r\n                    element.sqlType = elementType;\r\n                    if (!elementType.canCastTo(leftType)) {\r\n                        this.pushError(\"Der Datentyp des Listenelements \" + element.constant + \" ist \" + elementType.toString() + \". Er kann nicht in den Datentype \" + leftType.toString() + \" des Operanden auf der linken Seite des Operators '\" + operatorString + \"' umgewandelt werden.\", \"error\", element.position);\r\n                    }\r\n                }\r\n            } else {\r\n                this.pushError(\"Der rechte Operand der Operatoren 'in' und 'not in' muss eine Unterabfrage oder eine Liste sein.\", \"error\", node.secondOperand.position);\r\n            }\r\n\r\n        }\r\n\r\n        return SQLBaseType.getBaseType(\"boolean\");\r\n    }\r\n\r\n    resolveInsert(astNode: InsertNode) {\r\n\r\n        let table: Table = null;\r\n        let symbolTable = this.pushNewSymbolTable(astNode.position, astNode.endPosition);\r\n        if (astNode.table != null) {\r\n            astNode.table.table = this.tables.find(t => t.identifier.toLowerCase() == astNode.table.identifier.toLocaleLowerCase());\r\n            if (astNode.table.table == null) {\r\n                this.pushError(\"Die Tabelle \" + astNode.table.identifier + \" gibt es nicht.\", \"error\", astNode.table.position);\r\n            } else {\r\n                table = astNode.table.table;\r\n                symbolTable.storeTableSymbols(table);\r\n            }\r\n        }\r\n\r\n        let tableCompletionTo = astNode.endPosition;\r\n        if (astNode.valuesPosition != null) tableCompletionTo = astNode.valuesPosition;\r\n        if (astNode.columnsPosition != null) tableCompletionTo = astNode.columnsPosition;\r\n\r\n        this.module.addCompletionHint(astNode.position, tableCompletionTo, false, true, [\"into\", \"values\"]);\r\n\r\n        if (table != null) {\r\n            this.module.addCompletionHint(tableCompletionTo, astNode.valuesPosition == null ? astNode.endPosition : astNode.valuesPosition, true, false, [\"values\"]);\r\n        }\r\n\r\n        let tableSymbolTable = this.pushNewSymbolTable(astNode.position, tableCompletionTo);\r\n        tableSymbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n\r\n        let columns: Column[] = [];\r\n        // Parse column list\r\n        if (astNode.columnList.length == 0) {\r\n            if (table != null) {\r\n                columns = table.columns;\r\n            }\r\n        } else {\r\n            if (table != null) {\r\n                for (let columnNode of astNode.columnList) {\r\n                    let column = table.columns.find(c => c.identifier.toLowerCase() == columnNode.identifier.toLowerCase());\r\n                    if (column == null) {\r\n                        this.pushError(\"Die Tabelle \" + table.identifier + \" besitzt keine Spalte mit dem Bezeichner \" + columnNode.identifier + \".\", \"error\", columnNode.position);\r\n                    } else {\r\n                        columns.push(column);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (columns.length > 0) {\r\n            if (astNode.select != null) {\r\n                let table = this.resolveSelect(astNode.select);\r\n                if(table?.columns != null){\r\n                    if(columns.length != table.columns.length){\r\n                        this.pushError(\"Die insert-Anweisung erwartet \" + columns.length + \" Werte je Datensatz, die select-Anweisung liefert aber \" + table.columns.length + \".\", \"error\", astNode.position);\r\n                    } else {\r\n                        for(let i = 0; i < columns.length; i++){\r\n                            let insertColumn = columns[i];\r\n                            let selectColumn = table.columns[i];\r\n                            if(insertColumn.type != null && selectColumn.type != null){\r\n                                if(!selectColumn.type.canCastTo(insertColumn.type)){\r\n                                    this.pushError(\"Der Datentyp \" + selectColumn.type.toString() + \" der \" \r\n                                    + (i+1) + \"-ten Spalte des select-Terms kann nicht in den Datentyp \" + \r\n                                    insertColumn.type.toString() + \" der entsprechenden Spalte der insert-Anweisung umgewandelt werden.\", \"error\", astNode.position );\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n            } else {\r\n                // Parse value lists\r\n                for (let valueList of astNode.values) {\r\n                    if (valueList.length != columns.length && valueList.length > 0) {\r\n                        this.pushError(\"Erwartet werden \" + columns.length + \" Elemente, hier stehen aber \" + valueList.length + \" Elemente in der Liste.\", \"error\", valueList[0].position);\r\n                    } else {\r\n                        for (let i = 0; i < valueList.length; i++) {\r\n                            let value = valueList[i];\r\n                            let column = columns[i];\r\n                            value.sqlType = SQLBaseType.fromConstantType(value.constantType);\r\n                            // constantType == 40 means: null\r\n                            // TODO: check if column is nullable!\r\n                            let destType = column.type.toString().toLocaleLowerCase();\r\n                            if (value.constantType == TokenType.keywordNull) {\r\n                                if (!column.isNullable || column.notNull) {\r\n                                    this.pushError(\"Die Spalte \" + column.identifier + \" ist nicht nullable, daher kann null hier nicht eingefügt werden.\", \"error\", value.position);\r\n                                }\r\n                            } else if (!value.sqlType.canCastTo(column.type)) {\r\n                                let error: string = \"Der Wert \" + value.constant + \" vom Datentyp \" + value.sqlType.toString() + \" kann nicht in den Datentyp \" + column.type.toString() + \" der Spalte \" + column.identifier + \" umgewandelt werden.\";\r\n\r\n                                if (destType == \"date\") error += \"<br><b>Tipp: </b>Datumswerte haben die Form 'yyyy-mm-dd', also z.B. '2022-06-15'.\";\r\n                                if (destType == \"datetime\" || destType == \"timestamp\") error += \"<br><b>Tipp: </b>Timestamps haben die Form 'yyyy-mm-dd hh:min:ss', also z.B. '2022-06-15 07:56:22'.\";\r\n\r\n                                this.pushError(error, \"error\", value.position);\r\n                            } else if (destType == \"date\") {\r\n                                if (!isDate(value.constant)) {\r\n                                    let error: string = `'${value.constant}' ist kein date-Wert.<br><b>Tipp: </b>Datumswerte haben die Form 'yyyy-mm-dd', also z.B. '2022-06-15'.`;\r\n                                    this.pushError(error, \"error\", value.position);\r\n                                }\r\n                            } else if (destType == \"datetime\" || destType == \"timestamp\") {\r\n                                if (!isDateTime(value.constant)) {\r\n                                    let error: string = `'${value.constant}' ist kein ${destType}-Wert.<br><b>Tipp: </b>Timestamps haben die Form 'yyyy-mm-dd hh:min:ss', also z.B. '2022-06-15 07:56:22'.`;\r\n                                    this.pushError(error, \"error\", value.position);\r\n                                }\r\n                            } else if (destType == \"time\") {\r\n                                if (!isTime(value.constant)) {\r\n                                    let error: string = `'${value.constant}' ist kein ${destType}-Wert.<br><b>Tipp: </b>Time-Werte haben die Form 'hh:min:ss', also z.B. '07:56:22'.`;\r\n                                    this.pushError(error, \"error\", value.position);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        this.symbolTableStack.pop();\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { SymbolResolver } from \"./parser/SymbolResolver.js\";\r\n\r\nexport enum CompilerStatus {\r\n    compiling, error, compiledButNothingToRun, readyToRun\r\n}\r\n\r\nexport class Compiler {\r\n\r\n    compilerStatus: CompilerStatus = CompilerStatus.compiledButNothingToRun;\r\n\r\n    atLeastOneModuleIsStartable: boolean;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    compile(moduleStore: ModuleStore): Error[] {\r\n\r\n        this.compilerStatus = CompilerStatus.compiling;\r\n\r\n        let t0 = performance.now();\r\n\r\n        let lexer = new Lexer();\r\n\r\n        // 1st pass: lexing\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.file.dirty = false;\r\n            m.clear();\r\n\r\n            let lexed = lexer.lex(m.getProgramTextFromMonacoModel());\r\n            m.errors[0] = lexed.errors;\r\n            m.tokenList = lexed.tokens;\r\n            m.bracketError = lexed.bracketError;\r\n            if(m.file.name == this.main.getCurrentlyEditedModule().file.name){\r\n                if(this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(lexed.bracketError);\r\n            }\r\n        }\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        this.main.getSemicolonAngel().startRegistering();\r\n\r\n        let parser: Parser = new Parser();\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            parser.parse(m);\r\n        }\r\n        \r\n        // 3rd pass: check symbols and types\r\n        let databaseTool = this.main.getDatabaseTool();\r\n        let symbolResolver: SymbolResolver = new SymbolResolver(databaseTool);\r\n\r\n        for(let m of moduleStore.getModules(false)){\r\n            symbolResolver.start(m);\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        let message = \"Compiled in \" + dt + \" ms.\";\r\n\r\n        this.main.getCurrentWorkspace().compilerMessage = message;\r\n\r\n        this.main.getSemicolonAngel().healSemicolons();\r\n\r\n        this.compilerStatus = CompilerStatus.readyToRun;\r\n\r\n        return null;\r\n    }\r\n\r\n}","import { FileData } from \"../../communication/Data.js\";\r\nimport { AccordionElement } from \"../../main/gui/Accordion.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenType, TextPositionWithoutLength } from \"../lexer/Token.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { ASTNode } from \"./AST.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\nimport { stringToDate } from \"../../tools/StringTools.js\";\r\nimport { SQLStatement } from \"./Parser.js\";\r\n\r\n\r\nexport type CompletionHint = {\r\n    fromLine: number,\r\n    fromColumn: number,\r\n    toLine: number, \r\n    toColumn: number,\r\n    hintColumns: boolean,\r\n    hintColumnsOfTable?: string,\r\n    hintTables: boolean,\r\n    hintKeywords: string[],\r\n    dontHint?: string[],\r\n    praefix?: string,\r\n    suffix?: string\r\n}\r\n\r\nexport type File = {\r\n    name: string,\r\n    id?: number,\r\n    text: string,\r\n\r\n    text_before_revision: string,\r\n    submitted_date: string,\r\n    student_edited_after_revision: boolean,\r\n\r\n    dirty: boolean,\r\n    saved: boolean,\r\n    version: number,\r\n    panelElement?: AccordionElement\r\n\r\n}\r\n\r\nexport type IdentifierPosition = {\r\n    position: TextPosition,\r\n    element: any;\r\n}\r\n\r\nexport type MethodCallPosition = {\r\n    identifierPosition: TextPosition,\r\n    possibleMethods: any[] | string, // string for print, println, ...\r\n    commaPositions: TextPosition[],\r\n    rightBracketPosition: TextPosition\r\n}\r\n\r\nexport class Module {\r\n    file: File;\r\n    static maxUriNumber: number = 0;\r\n    uri: monaco.Uri;\r\n    model: monaco.editor.ITextModel;\r\n    oldErrorDecorations: string[] = [];\r\n    lastSavedVersionId: number;\r\n    editorState: monaco.editor.ICodeEditorViewState;\r\n\r\n    errors: Error[][] = [[], [], [], []]; // 1st pass, 2nd pass, 3rd pass\r\n\r\n    // 1st pass: Lexer\r\n    tokenList: Token[];\r\n\r\n    // 2nd pass: ASTParser\r\n    sqlStatements: SQLStatement[];\r\n    mainSymbolTable: SymbolTable;\r\n\r\n\r\n    identifierPositions: { [line: number]: IdentifierPosition[] } = {};\r\n    methodCallPositions: { [line: number]: MethodCallPosition[] } = {};\r\n\r\n    static uriMap: { [name: string]: number } = {};\r\n    bracketError: string;\r\n\r\n    completionHints: Map<number, CompletionHint[]> = new Map(); // Map from line numbers to hints\r\n\r\n    constructor(file: File, public main: MainBase) {\r\n        if (file == null || this.main == null) return; // used by AdhocCompiler and ApiDoc\r\n\r\n        this.file = file;\r\n        // this.uri = monaco.Uri.from({ path: '/file' + (Module.maxUriNumber++) + '.learnJava', scheme: 'file' });\r\n        let path = file.name;\r\n\r\n        let uriCounter = Module.uriMap[path];\r\n        if (uriCounter == null) {\r\n            uriCounter = 0;\r\n        } else {\r\n            uriCounter++;\r\n        }\r\n        Module.uriMap[path] = uriCounter;\r\n\r\n        if (uriCounter > 0) path += \" (\" + uriCounter + \")\";\r\n        this.uri = monaco.Uri.from({ path: path, scheme: 'inmemory' });\r\n        this.model = monaco.editor.createModel(file.text, \"vscSQL\", this.uri);\r\n        this.model.updateOptions({ tabSize: 3 });\r\n\r\n        this.lastSavedVersionId = this.model.getAlternativeVersionId();\r\n\r\n        let that = this;\r\n\r\n        this.model.onDidChangeContent(() => {\r\n            let versionId = that.model.getAlternativeVersionId();\r\n\r\n            if (versionId != that.lastSavedVersionId) {\r\n                that.file.dirty = true;\r\n                that.file.saved = false;\r\n                that.lastSavedVersionId = versionId;\r\n            }\r\n\r\n            if(!that.main.isEmbedded()){\r\n                let main1: Main = <Main>main;\r\n                if (main1.workspacesOwnerId != main1.user.id) {\r\n                    if (that.file.text_before_revision == null || that.file.student_edited_after_revision) {\r\n                        that.file.student_edited_after_revision = false;\r\n                        that.file.text_before_revision = that.file.text;\r\n                        that.file.saved = false;\r\n                        main1.networkManager.sendUpdates(null, false);\r\n                        main1.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n                        main1.projectExplorer.renderHomeworkButton(that.file);\r\n                    }\r\n                } else {\r\n                    that.file.student_edited_after_revision = true;\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    addCompletionHint(fromPosition: TextPosition, toPosition: TextPosition, hintColumns: boolean|string, hintTables: boolean, \r\n        hintKeywords: string[], dontHint?: string[], praefix: string = \"\", suffix: string = \"\"){\r\n        let ch: CompletionHint = {\r\n            fromColumn: fromPosition.column,\r\n            fromLine: fromPosition.line,\r\n            toColumn: toPosition.column,\r\n            toLine: toPosition.line,\r\n            hintColumns: (typeof hintColumns == \"boolean\")? hintColumns : true, \r\n            hintColumnsOfTable: (typeof hintColumns == \"string\")? hintColumns : null,\r\n            hintTables: hintTables,\r\n            hintKeywords: hintKeywords == null ? null : hintKeywords.map(s => s.toUpperCase()),\r\n            dontHint: dontHint,\r\n            praefix: praefix,\r\n            suffix: suffix\r\n        }\r\n\r\n        for(let i = ch.fromLine; i <= ch.toLine; i++){\r\n            let chList = this.completionHints.get(i);\r\n            if(chList == null){\r\n                chList = [];\r\n                this.completionHints.set(i, chList);\r\n            }\r\n            chList.push(ch);\r\n        }\r\n    }\r\n\r\n    getSQLSTatementsAtSelection(sel: monaco.Selection): SQLStatement[] {\r\n        let selStart = {line: sel.startLineNumber, column: sel.startColumn};\r\n        let selEnd = {line: sel.endLineNumber, column: sel.endColumn};\r\n\r\n        if(this.sqlStatements == null){\r\n            return [];\r\n        }\r\n\r\n        return this.sqlStatements.filter(stmt => {\r\n            return !(this.compare(stmt.to, selStart) < 0 || this.compare(stmt.from, selEnd) > 0);\r\n        })\r\n\r\n    }\r\n\r\n    /**\r\n     * returns 1 if a > b, 0 if a == b and -1 if a < b\r\n     * @param a \r\n     * @param b \r\n     */\r\n    compare(a: {line: number, column: number}, b: {line: number, column: number}): number{\r\n        if(a.line > b.line) return 1;\r\n        if(a.line < b.line) return -1;\r\n        if(a.column > b.column) return 1;\r\n        if(a.column < b.column) return -1;\r\n        return 0;\r\n    }\r\n\r\n\r\n\r\n    getSQLStatementAtPosition(p: { lineNumber: number, column: number }): SQLStatement {\r\n\r\n        return this.sqlStatements.find(statement => {\r\n            if(statement.from.line > p.lineNumber ) return false;\r\n            if(statement.from.line == p.lineNumber && statement.from.column > p.column) return false;\r\n            if(statement.to.line < p.lineNumber) return false;\r\n            if(statement.to.line == p.lineNumber && statement.to.column < p.column) return false;\r\n            return true;\r\n        });        \r\n\r\n    }\r\n\r\n\r\n    getCompletionHint(line: number, column: number){\r\n        let chList = this.completionHints.get(line);\r\n        \r\n        if(chList == null || chList.length == 0){\r\n            return null;\r\n        }\r\n\r\n        let pos = line * 1000 + column;\r\n        chList = chList.filter(ch => pos >= ch.fromLine * 1000 + ch.fromColumn && pos <= ch.toLine * 1000 + ch.toColumn);\r\n        if(chList.length == 0){\r\n            return;\r\n        }\r\n\r\n        // take CompletionHint with smallest range:\r\n        let bestCh: CompletionHint = chList[0];\r\n        let bestRangeLength  = (bestCh.toLine - bestCh.fromLine)*1000 + (bestCh.toColumn - bestCh.fromColumn);\r\n\r\n        for(let i = 1; i < chList.length; i++){\r\n            let ch = chList[i];\r\n            let rangeLength = (ch.toLine - ch.fromLine) * 1000 + (ch.toColumn - ch.fromColumn);\r\n\r\n            if(rangeLength < bestRangeLength){\r\n                bestCh = ch;\r\n                bestRangeLength = rangeLength;\r\n            }\r\n\r\n        }\r\n\r\n        return bestCh;\r\n    }\r\n\r\n\r\n    static restoreFromData(f: FileData, main: MainBase): Module {\r\n\r\n        let f1: File = {\r\n            name: f.name,\r\n            text: f.text,\r\n            text_before_revision: f.text_before_revision,\r\n            submitted_date: f.submitted_date,\r\n            student_edited_after_revision: false,\r\n            dirty: true,\r\n            saved: true,\r\n            version: f.version,\r\n            id: f.id\r\n        }\r\n\r\n        let m: Module = new Module(f1, main);\r\n\r\n        return m;\r\n\r\n    }\r\n\r\n    getFileData(workspace: Workspace): FileData {\r\n        let file = this.file;\r\n        let fd: FileData = {\r\n            id: file.id,\r\n            name: file.name,\r\n            text: file.text,\r\n            text_before_revision: file.text_before_revision,\r\n            submitted_date: file.submitted_date,\r\n            student_edited_after_revision: file.student_edited_after_revision,\r\n            version: file.version,\r\n            workspace_id: workspace.id,\r\n            forceUpdate: false,\r\n            file_type: 11\r\n        }\r\n\r\n        return fd;\r\n    }\r\n\r\n\r\n    findSymbolTableAtPosition(line: number, column: number) {\r\n        if (this.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (line > this.mainSymbolTable.positionTo.line ||\r\n            line == this.mainSymbolTable.positionTo.line && column > this.mainSymbolTable.positionTo.column\r\n        ) {\r\n            line = this.mainSymbolTable.positionTo.line;\r\n            column = this.mainSymbolTable.positionTo.column - 1;\r\n        }\r\n\r\n        return this.mainSymbolTable.findTableAtPosition(line, column);\r\n    }\r\n\r\n    getErrorCount(): number {\r\n\r\n        let ec = 0;\r\n        for (let el of this.errors) {\r\n            el.forEach(error => ec += error.level == \"error\" ? 1 : 0);\r\n            // ec += el.length;\r\n        }\r\n\r\n        return ec;\r\n    }\r\n\r\n    getProgramTextFromMonacoModel(): string {\r\n        return this.model.getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n    }\r\n\r\n\r\n    addIdentifierPosition(position: TextPosition, element: any) {\r\n        let positionList: IdentifierPosition[] = this.identifierPositions[position.line];\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            this.identifierPositions[position.line] = positionList;\r\n        }\r\n        positionList.push({\r\n            position: position,\r\n            element: element\r\n        });\r\n    }\r\n\r\n    getElementAtPosition(line: number, column: number): any {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let bestFoundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column < p.position.column + p.position.length) {\r\n\r\n                if (p.position.length > 0) {\r\n                    if (bestFoundPosition == null) {\r\n                        bestFoundPosition = p;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bestFoundPosition == null ? null : <any>bestFoundPosition.element;\r\n    }\r\n\r\n    copy(): Module {\r\n        let m = new Module(this.file, this.main);\r\n        m.model = this.model;\r\n        m.mainSymbolTable = this.mainSymbolTable;\r\n        this.mainSymbolTable = null;\r\n\r\n        this.file.dirty = true;\r\n\r\n        return m;\r\n    }\r\n\r\n    clear() {\r\n\r\n        this.identifierPositions = {};\r\n\r\n        if (this.file != null && this.file.dirty) {\r\n            // Lexer\r\n            this.tokenList = null;\r\n            this.errors[0] = [];\r\n\r\n            // AST Parser\r\n            this.errors[1] = [];\r\n\r\n\r\n        }\r\n\r\n        // type resolver\r\n        this.errors[2] = [];\r\n\r\n        // Code generator\r\n        this.errors[3] = [];\r\n        this.mainSymbolTable = new SymbolTable(null, { line: 1, column: 1, length: 1 }, { line: 100000, column: 1, length: 0 });\r\n\r\n        this.methodCallPositions = {};\r\n\r\n    }\r\n\r\n    hasErrors() {\r\n\r\n        for (let el of this.errors) {\r\n            if (el.find(error => error.level == \"error\")) {\r\n                return true;\r\n            }\r\n            // if (el.length > 0) {\r\n            //     return true;\r\n            // }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getSortedAndFilteredErrors(): Error[] {\r\n\r\n        let list: Error[] = [];\r\n\r\n        for (let el of this.errors) {\r\n            list = list.concat(el);\r\n        }\r\n\r\n        list.sort((a, b) => {\r\n            if (a.position.line > b.position.line) {\r\n                return 1;\r\n            }\r\n            if (b.position.line > a.position.line) {\r\n                return -1;\r\n            }\r\n            if (a.position.column >= b.position.column) {\r\n                return 1;\r\n            }\r\n            return -1;\r\n        });\r\n\r\n        for (let i = 0; i < list.length - 1; i++) {\r\n            let e1 = list[i];\r\n            let e2 = list[i + 1];\r\n            if (e1.position.line == e2.position.line && e1.position.column + 10 > e2.position.column) {\r\n                if (this.errorLevelCompare(e1.level, e2.level) == 1) {\r\n                    list.splice(i + 1, 1);\r\n                } else {\r\n                    list.splice(i, 1);\r\n                }\r\n                i--;\r\n            }\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    errorLevelCompare(level1: ErrorLevel, level2: ErrorLevel): number {\r\n        if (level1 == \"error\") return 1;\r\n        if (level2 == \"error\") return 2;\r\n        if (level1 == \"warning\") return 1;\r\n        if (level2 == \"warning\") return 2;\r\n        return 1;\r\n    }\r\n}\r\n\r\n\r\nexport class ModuleStore {\r\n\r\n    private modules: Module[] = [];\r\n    private moduleMap: Map<string, Module> = new Map();\r\n\r\n    dirty: boolean = false;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    findModuleById(module_id: number): Module {\r\n        for (let module of this.modules) {\r\n            if (module.file.id == module_id) return module;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    copy(): ModuleStore {\r\n        let ms: ModuleStore = new ModuleStore(this.main);\r\n        for (let m of this.modules) {\r\n            ms.putModule(m.copy());\r\n        }\r\n        return ms;\r\n    }\r\n\r\n    findModuleByFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                return m;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        for (let m of this.modules) {\r\n            if (m.hasErrors()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getFirstModule(): Module {\r\n        if (this.modules.length > 0) {\r\n            for (let mo of this.modules) {\r\n                return mo;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    isDirty(): boolean {\r\n\r\n        if (this.dirty) {\r\n            this.dirty = false;\r\n            return true;\r\n        }\r\n\r\n        let dirty = false;\r\n        for (let m of this.modules) {\r\n            if (m.file.dirty) {\r\n                dirty = true;\r\n                break;\r\n            }\r\n        }\r\n        return dirty;\r\n    }\r\n\r\n\r\n    getModules(includeSystemModules: boolean, excludedModuleName?: String): Module[] {\r\n        let ret = [];\r\n        for (let m of this.modules) {\r\n            if (m.file.name != excludedModuleName) {\r\n                ret.push(m);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    putModule(module: Module) {\r\n        this.modules.push(module);\r\n        this.moduleMap[module.file.name] = module;\r\n    }\r\n\r\n    removeModuleWithFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                this.removeModule(m);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n\r\n        if (this.modules.indexOf(module) < 0) return;\r\n\r\n        this.modules.splice(this.modules.indexOf(module), 1);\r\n        this.moduleMap[module.file.name] = undefined;\r\n        this.dirty = true;\r\n    }\r\n\r\n    getModule(moduleName: string): Module {\r\n        return this.moduleMap[moduleName];\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { escapeHtml } from \"./StringTools.js\";\r\n\r\nexport function makeEditable(elementWithText: JQuery<HTMLElement>,\r\n    elementToReplace: JQuery<HTMLElement>,\r\n    renameDoneCallback: (newContent: string) => void, selectionRange: { start: number, end: number } = null) {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    if (elementToReplace == null) {\r\n        elementToReplace = elementWithText;\r\n    }\r\n\r\n    let $input = jQuery('<input type=\"text\" class=\"jo_inplaceeditor\" spellcheck=\"false\">');\r\n    $input.css({\r\n        width: elementToReplace.css('width'),\r\n        height: elementToReplace.css('height'),\r\n        color: elementToReplace.css('color'),\r\n        position: elementToReplace.css('position'),\r\n        \"background-color\": elementToReplace.css('background-color'),\r\n        \"font-size\": elementToReplace.css('font-size'),\r\n        \"font-weight\": elementToReplace.css('font-weight'),\r\n        \"box-sizing\": \"border-box\"\r\n    });\r\n    $input.val(elementWithText.text());\r\n    $input.on(mousePointer + \"down\", (e) => { e.stopPropagation(); })\r\n\r\n    if (selectionRange != null) {\r\n        (<HTMLInputElement>$input[0]).setSelectionRange(selectionRange.start, selectionRange.end);\r\n    }\r\n\r\n    elementToReplace.after($input);\r\n    elementToReplace.hide();\r\n    setTimeout(() => {\r\n        $input.focus();\r\n    }, 300);\r\n\r\n    $input.on(\"keydown.me\", (ev) => {\r\n        if (ev.key == \"Enter\" || ev.key == \"Escape\") {\r\n            $input.off(\"keydown.me\");\r\n            $input.off(\"focusout.me\");\r\n            $input.remove();\r\n            elementToReplace.show();\r\n            let newValue = escapeHtml(<string>$input.val());\r\n            renameDoneCallback(newValue);\r\n            return;\r\n        }\r\n    });\r\n\r\n    $input.on(\"focusout.me\", (ev) => {\r\n        $input.off(\"keydown.me\");\r\n        $input.off(\"focusout.me\");\r\n        $input.remove();\r\n        elementToReplace.show();\r\n        let newValue = escapeHtml(<string>$input.val());\r\n        renameDoneCallback(newValue);\r\n        return;\r\n    });\r\n\r\n}\r\n\r\nexport type ContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: () => void;\r\n    link?: string;\r\n    subMenu?: ContextMenuItem[]\r\n};\r\n\r\nexport function openContextMenu(items: ContextMenuItem[], x: number, y: number): JQuery<HTMLElement> {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    let $contextMenu = jQuery('<div class=\"jo_contextmenu\"></div>');\r\n\r\n    let $openSubMenu: JQuery<HTMLElement> = null;\r\n    let parentMenuItem: ContextMenuItem = null;\r\n\r\n    for (let mi of items) {\r\n        let caption: string = mi.caption;\r\n        if (mi.link != null) {\r\n            caption = `<a href=\"${mi.link}\" target=\"_blank\" class=\"jo_menulink\">${mi.caption}</a>`;\r\n        }\r\n        let $item = jQuery('<div>' + caption + (mi.subMenu != null ? '<span style=\"float: right\"> &nbsp; &nbsp; &gt;</span>' : \"\") + '</div>');\r\n        if (mi.color != null) {\r\n            $item.css('color', mi.color);\r\n        }\r\n        if (mi.link == null) {\r\n            $item.on(mousePointer + 'up.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n                jQuery('.jo_contextmenu').remove();\r\n                jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n                jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n                jQuery(document).off(\"keydown.contextmenu\");\r\n                mi.callback();\r\n            });\r\n            $item.on(mousePointer + 'down.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n            });\r\n        } else {\r\n            let $link = $item.find('a');\r\n            $link.on(mousePointer + \"up\", (event) => {\r\n                event.stopPropagation();\r\n                setTimeout(() => {\r\n                    $item.hide();\r\n                }, 500);\r\n            })\r\n            $link.on(mousePointer + \"down\", (event) => {\r\n                event.stopPropagation();\r\n            })\r\n\r\n        }\r\n\r\n        $item.on(mousePointer + 'move.contextmenu', () => {\r\n            if (mi != parentMenuItem && $openSubMenu != null) {\r\n                $openSubMenu.remove();\r\n                parentMenuItem = null;\r\n                $openSubMenu = null;\r\n            }\r\n            if (mi.subMenu != null) {\r\n                $openSubMenu = openContextMenu(mi.subMenu, $item.offset().left + $item.width(), $item.offset().top);\r\n            }\r\n        });\r\n\r\n        $contextMenu.append($item);\r\n    }\r\n\r\n    jQuery(document).on(mousePointer + \"down.contextmenu\", (e) => {\r\n        jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n        jQuery(document).off(\"keydown.contextmenu\");\r\n        jQuery('.jo_contextmenu').remove();\r\n    })\r\n\r\n    jQuery(document).on(\"keydown.contextmenu\", (ev) => {\r\n        if (ev.key == \"Escape\") {\r\n            jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n            jQuery(document).off(\"keydown.contextmenu\");\r\n            jQuery('.jo_contextmenu').remove();\r\n        }\r\n    });\r\n\r\n    let leftRight = x > window.innerWidth * 0.8 ? \"right\" : \"left\";\r\n    let xp = x > window.innerWidth * 0.8 ? window.innerWidth - x : x;\r\n    let topBottom = y > window.innerHeight * 0.8 ? \"bottom\" : \"top\";\r\n    let yp = y > window.innerHeight * 0.8 ? window.innerHeight - y : y;\r\n\r\n    let css = {};\r\n    css[leftRight] = xp + \"px\";\r\n    css[topBottom] = yp + \"px\";\r\n\r\n    $contextMenu.css(css);\r\n\r\n\r\n    jQuery(\"body\").append($contextMenu);\r\n    $contextMenu.show();\r\n\r\n    return $contextMenu;\r\n}\r\n\r\nexport function makeTabs(tabDiv: JQuery<HTMLElement>) {\r\n    let headings = tabDiv.find('.jo_tabheadings>div').not('.jo_noHeading');\r\n    let tabs = tabDiv.find('.jo_tabs>div');\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    headings.on(mousePointer + \"down\", (ev) => {\r\n        let target = jQuery(ev.target);\r\n        headings.removeClass('jo_active');\r\n        target.addClass('jo_active');\r\n        let tab = tabDiv.find('.' + target.data('target'));\r\n        tabs.removeClass('jo_active');\r\n        tabs.trigger('myhide');\r\n        tab.addClass('jo_active');\r\n        tab.trigger('myshow');\r\n    });\r\n\r\n}\r\n\r\nexport function convertPxToNumber(pxString: string): number {\r\n    pxString = pxString.replace('px', '').trim();\r\n    return Number.parseInt(pxString);\r\n}\r\n\r\nexport function makeDiv(id: string, klass: string = \"\", text: string = \"\", css?: { [id: string]: any }): JQuery<HTMLDivElement> {\r\n\r\n    let s = \"\";\r\n    if (id != null && id != \"\") s += ` id=\"${id}\"`;\r\n\r\n    if (klass != null && klass != \"\") s += ` class=\"${klass}\"`;\r\n\r\n    let div = jQuery(`<div${s}></div>`);\r\n\r\n    if (css != null) {\r\n        div.css(css);\r\n    }\r\n\r\n    if (text != null && text != \"\") {\r\n        div.text(text);\r\n    }\r\n\r\n    return <any>div;\r\n\r\n}\r\n\r\nexport type SelectItem = {\r\n    value: string | number,\r\n    object: any,\r\n    caption: string\r\n}\r\n\r\nexport function setSelectItems($selectElement: JQuery<HTMLSelectElement>, items: SelectItem[], activeItemValue?: string | number) {\r\n    $selectElement.empty();\r\n    items.forEach(item => {\r\n        let selected: string = (item.value == activeItemValue) ? ' selected=\"selected\"' : \"\";\r\n        let element = jQuery(`<option value=${item.value}${selected}>${item.caption}</option>`);\r\n        $selectElement.append(element);\r\n        element.data('object', item.object);\r\n    }\r\n    );\r\n\r\n    $selectElement.data('items', items);\r\n\r\n\r\n}\r\n\r\nexport function getSelectedObject($selectDiv: JQuery<HTMLSelectElement>) {\r\n\r\n    let items: SelectItem[] = $selectDiv.data('items');\r\n\r\n    let selectedValue = $selectDiv.val();\r\n\r\n    return items.find(item => item.value == selectedValue)?.object;\r\n\r\n}\r\n\r\nexport var jo_mouseDetected: boolean = false;\r\nexport function checkIfMousePresent() {\r\n    if (matchMedia('(pointer:fine)').matches) {\r\n        jo_mouseDetected = true;\r\n    }\r\n}\r\n\r\nexport function animateToTransparent($element: JQuery<HTMLElement>, cssProperty: string, startColorRgb: number[], duration: number) {\r\n    let colorPraefix = 'rgba(' + startColorRgb[0] + \", \" + startColorRgb[1] + \", \" + startColorRgb[2] + \", \";\r\n    let value = 1.0;\r\n    let delta = value / (duration / 20);\r\n\r\n    let animate = () => {\r\n        $element.css(cssProperty, colorPraefix + value + \")\");\r\n        value -= delta;\r\n        if (value < 0) {\r\n            $element.css(cssProperty, \"\");\r\n        } else {\r\n            setTimeout(animate, 20);\r\n        }\r\n    }\r\n\r\n    animate();\r\n}\r\n\r\nexport function downloadFile(obj: any, filename: string, isBlob: boolean = false) {\r\n    var blob = isBlob? obj : new Blob([JSON.stringify(obj)], { type: 'text/plain' });\r\n    //@ts-ignore\r\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n        //@ts-ignore\r\n        window.navigator.msSaveOrOpenBlob(blob, filename);\r\n    } else {\r\n        var e = document.createEvent('MouseEvents'),\r\n            a = document.createElement('a');\r\n        a.download = filename;\r\n        a.href = window.URL.createObjectURL(blob);\r\n        a.dataset.downloadurl = ['text/plain', a.download, a.href].join(':');\r\n        //@ts-ignore\r\n        e.initEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\r\n        a.dispatchEvent(e);\r\n        a.remove();\r\n    }\r\n}\r\n\r\n\r\nfunction fallbackCopyTextToClipboard(text) {\r\n    var textArea = document.createElement(\"textarea\");\r\n    textArea.value = text;\r\n\r\n    // Avoid scrolling to bottom\r\n    textArea.style.top = \"0\";\r\n    textArea.style.left = \"0\";\r\n    textArea.style.position = \"fixed\";\r\n\r\n    document.body.appendChild(textArea);\r\n    textArea.focus();\r\n    textArea.select();\r\n\r\n    try {\r\n        var successful = document.execCommand('copy');\r\n    } catch (err) {\r\n        console.error('Fallback: Oops, unable to copy', err);\r\n    }\r\n\r\n    document.body.removeChild(textArea);\r\n}\r\n\r\nexport function copyTextToClipboard(text) {\r\n    if (!navigator.clipboard) {\r\n        fallbackCopyTextToClipboard(text);\r\n        return;\r\n    }\r\n    navigator.clipboard.writeText(text).then(function () {\r\n    }, function (err) {\r\n        console.error('Async: Could not copy text: ', err);\r\n    });\r\n}\r\n","import { CreateWorkspaceData, WorkspaceData } from \"../../communication/Data.js\";\r\nimport { copyTextToClipboard, makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { TemplateUploader } from \"../../tools/TemplateUploader.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\nexport class DatabaseSettingsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private workspace: Workspace) {\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Datenbank-Einstellungen</div>\r\n            <div style=\"width: 100%; margin-left: 10px\">\r\n                <div class=\"jo_ds_settings\" style=\"margin-left: 0px\">\r\n                <div class=\"jo_ds_settings_caption\">Name der Datenbank:</div><div><input class=\"dialog-input jo_databasename\" value=\"Neue Datenbank\"></input></div>\r\n                </div>\r\n\r\n                <div class=\"jo_ds_settings_caption\" style=\"margin-top: 20px\">\r\n                Zugriffscodes für andere Benutzer:\r\n                </div>\r\n                                \r\n                <div>\r\n                    <table class=\"jo_ds_secret_table\">\r\n                    <tr>\r\n                        <td>Nur Lesen:</td><td class=\"jo_ds_secret jo_ds_secret_read\"></td><td id=\"copySecretTdread\"></td><td><button class=\"jo_small_button jo_button_code_read\">Neuen Code generieren</button></td>\r\n                    <tr>\r\n                        <td>Lesen und schreiben:</td><td class=\"jo_ds_secret jo_ds_secret_write\"></td><td id=\"copySecretTdwrite\"></td><td><button class=\"jo_small_button jo_button_code_write\">Neuen Code generieren</button></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Lesen, schreiben und Struktur verändern:</td><td class=\"jo_ds_secret jo_ds_secret_ddl\"></td><td id=\"copySecretTdddl\"></td><td><button class=\"jo_small_button jo_button_code_ddl\">Neuen Code generieren</button></td>\r\n                    </tr>\r\n                    </table>\r\n                </div>\r\n\r\n                <div class=\"jo_ds_settings_caption\" style=\"margin-top: 20px\">\r\n                Beschreibung:\r\n                </div>\r\n                <div>\r\n                <textarea class=\"jo_ds_settings_description\" maxlength=\"5000\"></textarea>\r\n                </div>\r\n\r\n                <div class=\"jo_ds_settings_caption\" style=\"margin-top: 20px\">\r\n                Datenbank freigeben als Vorlage für andere Benutzer:\r\n                </div>\r\n\r\n                <fieldset id=\"jo_ds_publishedTo\">\r\n                    <input type=\"radio\" id=\"b0\" name=\"publishedFilter\" value=\"0\" checked=\"checked\"><label for=\"b0\">Keine Freigabe</label>\r\n                    <input type=\"radio\" id=\"b1\" name=\"publishedFilter\" value=\"1\"><label for=\"b1\">Freigabe für meine Klasse(n)</label>\r\n                    <input type=\"radio\" id=\"b2\" name=\"publishedFilter\" value=\"2\" style=\"visibility: none\"><label id=\"lb2\" for=\"b2\" style=\"visibility: none\">Freigabe für meine Schule</label>\r\n                    <input type=\"radio\" id=\"b3\" name=\"publishedFilter\" value=\"3\" style=\"visibility: none\"><label id=\"lb3\" for=\"b3\" style=\"visibility: none\">Freigabe für alle Schulen</label>\r\n                </fieldset>\r\n\r\n                <div>\r\n                    <input type=\"checkbox\" id=\"jo_upload_db\" name=\"jo_upload_db\">\r\n                    <label for=\"jo_upload_db\">Aktuellen Zustand der Datenbank als Vorlage hochladen</label>\r\n                </div>\r\n            </div>\r\n\r\n\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_save_button\">Speichern</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n\r\n        let that = this;\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { this.showMainWindow(); });\r\n        jQuery('#jo_ds_save_button').on('click', () => { \r\n            this.saveNameAndPublishedTo();\r\n         })\r\n\r\n        this.setValues();\r\n\r\n        [\"read\", \"write\", \"ddl\"].forEach(kind => {\r\n            jQuery('.jo_button_code_' + kind).on('pointerdown', () => {\r\n                that.main.networkManager.setNewSecret(that.workspace.id, kind, (secret) => {\r\n                    jQuery('.jo_ds_secret_'+kind).text(secret);\r\n                })\r\n            })\r\n            let $copyButton = jQuery('<button class=\"jo_small_button jo_copy_secret_button jo_active\">Kopieren</button>')\r\n            jQuery('#copySecretTd' + kind).append($copyButton);\r\n            $copyButton.on('pointerdown', () => {\r\n                copyTextToClipboard(jQuery('.jo_ds_secret_'+kind).text());\r\n            })\r\n        })\r\n\r\n        jQuery('#jo_ds_publishedTo>input').on('change', (e) => {$('#jo_upload_db').prop('checked', !((<HTMLInputElement>jQuery('#b0')[0]).checked))});\r\n\r\n    }\r\n\r\n    saveNameAndPublishedTo(){\r\n        let published_to = 0;\r\n        jQuery('#jo_ds_publishedTo').find('input').each( (n, element) => {\r\n            let $element = jQuery(element);\r\n            //@ts-ignore\r\n            if(<HTMLInputElement>element.checked){\r\n                published_to = Number.parseInt(<string>$element.attr('value'));\r\n            }\r\n        })\r\n\r\n        this.main.networkManager.setNameAndPublishedTo(this.workspace.id, \r\n            <string>jQuery('.jo_databasename').val(), published_to, <string>jQuery('.jo_ds_settings_description').val(),\r\n             () => {\r\n                 if($('#jo_upload_db').prop('checked')){\r\n                    new TemplateUploader().uploadCurrentDatabase(this.workspace.id, this.main, null, \"publishDatabaseAsTemplate\");                    \r\n                 }\r\n                 this.showMainWindow(); \r\n                })\r\n    }\r\n\r\n    setValues(){\r\n        jQuery('.jo_databasename').val(this.workspace.name);\r\n        this.main.networkManager.getDatabaseSettings(this.workspace.id, (response) => {\r\n            [\"read\", \"write\", \"ddl\"].forEach(kind => {\r\n                jQuery('.jo_ds_secret_' + kind).text(response.secrets[kind]);\r\n            });\r\n            if(this.main.user.is_admin){\r\n                jQuery('#b3').css('visibility', 'visible');\r\n                jQuery('#lb3').css('visibility', 'visible');\r\n            }\r\n            if(this.main.user.is_schooladmin){\r\n                jQuery('#b2').css('visibility', 'visible');\r\n                jQuery('#lb2').css('visibility', 'visible');\r\n            }\r\n            // jQuery('#jo_ds_publishedTo input').attr('checked', '');\r\n            jQuery('#b'+response.publishedTo).prop('checked', true);\r\n\r\n            jQuery('#jo_upload_db').prop('checked', response.publishedTo != 0);\r\n\r\n            jQuery('.jo_ds_settings_description').val(this.workspace.database.description);\r\n        })\r\n    }\r\n\r\n    showMainWindow() {\r\n        jQuery('#main').css('visibility', 'visible');\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n    }\r\n\r\n\r\n\r\n}","import { WorkspaceData } from \"../communication/Data.js\";\r\nimport { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { DatabaseSettingsDialog } from \"../main/gui/DatabaseSettingsDialog.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { WDatabase } from \"./WDatabase.js\";\r\n\r\nexport class Workspace {\r\n    \r\n    name: string;\r\n    path: string = \"\";\r\n    isFolder: boolean;\r\n    id: number;\r\n    owner_id: number;\r\n\r\n    version: number;\r\n    \r\n    moduleStore: ModuleStore;\r\n    panelElement: AccordionElement;\r\n    currentlyOpenModule: Module;\r\n    saved: boolean = true;\r\n\r\n    compilerMessage: string;\r\n\r\n    databaseId: number;\r\n    database: WDatabase;\r\n\r\n    sql_history: string;\r\n\r\n    permissions: number;\r\n\r\n    constructor(name: string, private main: MainBase, owner_id: number){\r\n        this.name = name;\r\n        this.owner_id = owner_id;\r\n        this.moduleStore = new ModuleStore(main);\r\n        this.sql_history = \"\";\r\n    }\r\n    \r\n    getWorkspaceData(withFiles: boolean): WorkspaceData {\r\n        let wd: WorkspaceData = {\r\n            name: this.name,\r\n            id: this.id,\r\n            owner_id: this.owner_id,\r\n            currentFileId: this.currentlyOpenModule == null ? null : this.currentlyOpenModule.file.id,\r\n            files: [],\r\n            sql_history: this.sql_history,\r\n            path: this.path,\r\n            isFolder: false,  \r\n            permissions: this.permissions,\r\n            database_id: this.databaseId\r\n        }\r\n\r\n        if(withFiles){\r\n            for(let m of this.moduleStore.getModules(false)){\r\n    \r\n                wd.files.push(m.getFileData(this));\r\n    \r\n            }\r\n        }\r\n\r\n        return wd;\r\n    }\r\n\r\n    renderSettingsButton(panelElement: AccordionElement) {\r\n        let $buttonDiv = panelElement?.$htmlFirstLine?.find('.jo_additionalButtonSettings');\r\n        if ($buttonDiv == null) return;\r\n        \r\n        // let myMain: Main = <Main>this.main;\r\n\r\n            let $button = jQuery('<div class=\"jo_settingsButton img_settings jo_button jo_active\" title=\"Datenbank-Einstellungen...\"></div>');\r\n            $buttonDiv.append($button);\r\n            let that = this;\r\n            $button.on('pointerdown', (e) => e.stopPropagation());\r\n            $button.on('pointerup', (e) => {\r\n                e.stopPropagation();\r\n\r\n                new DatabaseSettingsDialog(<any>that.main, that);\r\n\r\n            });\r\n\r\n            $button[0].addEventListener(\"contextmenu\", (event) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n            }, false);\r\n\r\n        // } else {\r\n        //     $buttonDiv.find('.jo_startButton').remove();\r\n        // }\r\n    }\r\n\r\n\r\n    static restoreFromData(ws: WorkspaceData, main: Main): Workspace {\r\n\r\n        let w = new Workspace(ws.name, main, ws.owner_id);\r\n        w.id = ws.id;\r\n        w.path = ws.path;\r\n        w.isFolder = ws.isFolder;\r\n        w.owner_id = ws.owner_id;\r\n        w.sql_history = ws.sql_history;\r\n        w.permissions = ws.permissions;\r\n        w.databaseId = ws.database_id;\r\n\r\n        for(let f of ws.files){\r\n\r\n            let m: Module = Module.restoreFromData(f, main);\r\n            w.moduleStore.putModule(m);\r\n\r\n            if(f.id == ws.currentFileId){\r\n                w.currentlyOpenModule = m;\r\n            }\r\n\r\n        }\r\n\r\n        return w;\r\n\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        \r\n        return this.moduleStore.hasErrors();\r\n        \r\n    }\r\n\r\n    getModuleByMonacoModel(model: monaco.editor.ITextModel): Module {\r\n        for(let m of this.moduleStore.getModules(false)){\r\n            if(m.model == model){\r\n                return m;\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    }\r\n}\r\n\r\n","import { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type ButtonToggler = (state: boolean) => void;\r\n\r\nexport type Action = (name: string, buttonToggler?: ButtonToggler, pressed_key?: string) => void;\r\n\r\nexport type ActionEntry = {\r\n    text?: string,\r\n    keys: string[],\r\n    action: Action,\r\n    identifier: string, // name of Action is copied automatically to name of ActionEntry\r\n    active: boolean\r\n}\r\n\r\nexport class ActionManager {\r\n\r\n    actions: { [actionIdentifier: string]: ActionEntry } = { };\r\n\r\n    keyEntries: { [key: string]: ActionEntry[] } = {};\r\n\r\n    buttons: { [actionIdentifier: string]: JQuery<HTMLElement>[] } = {};\r\n\r\n    constructor(private $mainElement: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public init(){\r\n\r\n        let $element:JQuery<any> = this.$mainElement;\r\n        \r\n        if($element == null) $element = jQuery(document);\r\n\r\n        let that = this;\r\n        $element.on(\"keydown\", function (event: JQuery.KeyDownEvent) { \r\n            if(event != null){\r\n                that.executeKeyDownEvent(event); \r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    trigger(actionIdentifier: string) {\r\n        let ae = this.actions[actionIdentifier];\r\n        if(ae != null){\r\n            ae.action(actionIdentifier, null, \"\");\r\n        }\r\n    }\r\n\r\n\r\n    public registerAction(identifier: string, keys: string[], action: Action, text: string = \"\", button?: JQuery<HTMLElement>){\r\n        let ae: ActionEntry = {\r\n            action: action,\r\n            identifier: identifier,\r\n            keys: keys,\r\n            text: text,\r\n            active: true\r\n        };\r\n\r\n        this.actions[identifier] = ae;\r\n\r\n        for(let key of keys){\r\n            if(this.keyEntries[key.toLowerCase()] == null){\r\n                this.keyEntries[key.toLowerCase()] = [];\r\n            }\r\n            this.keyEntries[key.toLowerCase()].push(ae);\r\n        }\r\n\r\n        if(button != null){\r\n            if(this.buttons[identifier] == null){\r\n                this.buttons[identifier] = [];\r\n            }\r\n            this.buttons[identifier].push(button);\r\n\r\n            let t = text;\r\n            if(keys.length > 0){\r\n                t += \" [\" + keys.join(\", \") + \"]\";\r\n            }\r\n\r\n            button.attr(\"title\", t);\r\n\r\n            button.on('mousedown', () => {\r\n                if(ae.active){\r\n                    action(identifier, null, \"mousedown\");\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public isActive(actionIdentifier: string): boolean {\r\n\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae == null) return false;\r\n\r\n        return ae.active;\r\n    \r\n    }\r\n\r\n    public setActive(actionIdentifier: string, active: boolean){\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae != null){\r\n            ae.active = active;\r\n        }\r\n\r\n        let buttons = this.buttons[actionIdentifier];\r\n        if(buttons != null){\r\n            for(let button of buttons){\r\n                if(active){\r\n                    button.addClass('jo_active');\r\n                } else {\r\n                    button.removeClass('jo_active');\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public executeKeyDownEvent(event: JQuery.KeyDownEvent) {\r\n\r\n        if(document.activeElement.tagName.toLowerCase() == \"input\"){\r\n            return;\r\n        }\r\n\r\n        if (event.keyCode <= 18 && event.keyCode >= 16) {\r\n            return; // ctrl, alt, shift\r\n        }\r\n\r\n        let key: string = \"\";\r\n\r\n        if (event.ctrlKey) {\r\n            key += \"ctrl+\";\r\n        }\r\n\r\n        if (event.shiftKey) {\r\n            key += \"shift+\";\r\n        }\r\n\r\n        if (event.altKey) {\r\n            key += \"alt+\";\r\n        }\r\n\r\n        if(event.key != null){\r\n            key += event.key.toLowerCase();\r\n        }\r\n\r\n        let actionEntries = this.keyEntries[key];\r\n\r\n        if(actionEntries != null){\r\n            for(let actionEntry of actionEntries){\r\n                if (actionEntry.active) {\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    actionEntry.action(actionEntry.identifier, null, key);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class ErrorManager {\r\n\r\n    oldDecorations: string[] = [];\r\n    oldErrorDecorations: string[] = [];\r\n    $errorDiv: JQuery<HTMLElement>;\r\n\r\n    $bracket_warning: JQuery<HTMLElement>;\r\n\r\n    minimapColor: {[key: string]:string } = {};\r\n\r\n    lightBulbOnClickFunctionList: {class: string, onClickFunction: () => void, title: string}[] = [];\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>, private $mainDiv: JQuery<HTMLElement>) {\r\n        this.minimapColor[\"error\"] = \"#bc1616\";\r\n        this.minimapColor[\"warning\"] = \"#cca700\";\r\n        this.minimapColor[\"info\"] = \"#75beff\";\r\n\r\n        this.$bracket_warning = $mainDiv.find(\".jo_parenthesis_warning\");\r\n\r\n        this.$bracket_warning.attr('title', 'Klammeralarm!');\r\n        this.$bracket_warning.children().attr('title', 'Klammeralarm!');\r\n\r\n        let that = this;\r\n        $mainDiv.find(\".jo_pw_undo\").on(\"click\", () => {\r\n            let editor = that.main.getMonacoEditor();\r\n            editor.trigger(\".\", \"undo\", {});\r\n        }).attr('title', 'Undo');\r\n    }\r\n\r\n    showParenthesisWarning(error: string){\r\n        if(error != null){\r\n            this.$bracket_warning.css(\"visibility\", \"visible\");\r\n            this.$bracket_warning.find(\".jo_pw_heading\").text(error);\r\n        } else {\r\n            this.$bracket_warning.css(\"visibility\", \"hidden\");\r\n        }\r\n    }\r\n\r\n    showErrors(workspace: Workspace): Map<Module, number> {\r\n\r\n        this.lightBulbOnClickFunctionList = [];\r\n\r\n        let errorCountMap: Map<Module, number> = new Map();\r\n\r\n        this.$errorDiv = this.$bottomDiv.find('.jo_tabs>.jo_errorsTab');\r\n        this.$errorDiv.empty();\r\n\r\n        let hasErrors = false;\r\n\r\n        let ms = workspace.moduleStore;\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        for (let m of ms.getModules(false)) {\r\n            let markers: monaco.editor.IMarkerData[] = [];\r\n            let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n            let $errorList: JQuery<HTMLElement>[] = [];\r\n\r\n            let errors = m.getSortedAndFilteredErrors();\r\n            errorCountMap.set(m, m.getErrorCount());\r\n\r\n            for (let error of errors) {\r\n\r\n                let linesDecorationsClassName: string;\r\n                let borderLeftClass: string;\r\n                let minimapColor: string = this.minimapColor[error.level];\r\n\r\n                switch (error.level) {\r\n                    case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                    case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                    case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n                }\r\n\r\n                if (error.quickFix != null) {\r\n                    let quickFix = error.quickFix;\r\n                    let lightBulbClass = \"lb_\" + Math.trunc(Math.random() * 1000000);\r\n                    linesDecorationsClassName = 'jo_yellowLightBulb ' + borderLeftClass + \" \" + lightBulbClass;\r\n\r\n                    this.lightBulbOnClickFunctionList.push({class: '.' + lightBulbClass, \r\n                    onClickFunction: () => {\r\n\r\n                        let edits = quickFix.editsProvider(m.model.uri);\r\n                        editor.executeEdits(\"\", edits.map((edit) => {\r\n                            let r = edit.edit.range;\r\n                            return {\r\n                                range: new monaco.Range(r.startLineNumber, r.startColumn, r.endLineNumber, r.endColumn),\r\n                                text: edit.edit.text,\r\n                                forceMoveMarkers: true\r\n                            }\r\n                        }\r\n                        ));\r\n\r\n                    },\r\n                    title: quickFix.title\r\n                })\r\n\r\n\r\n                }\r\n\r\n                this.processError(error, m, $errorList);\r\n\r\n                let severity: monaco.MarkerSeverity;\r\n                switch (error.level) {\r\n                    case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                    case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                    case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n                }\r\n\r\n                markers.push({\r\n                    startLineNumber: error.position.line,\r\n                    startColumn: error.position.column,\r\n                    endLineNumber: error.position.line,\r\n                    endColumn: error.position.column + error.position.length,\r\n                    message: error.text,\r\n                    severity: severity,\r\n                    //@ts-ignore\r\n                    relatedInformation: error.quickFix\r\n                });\r\n\r\n                decorations.push({\r\n                    range: {\r\n                        startLineNumber: error.position.line,\r\n                        startColumn: error.position.column,\r\n                        endLineNumber: error.position.line,\r\n                        endColumn: error.position.column + error.position.length\r\n                    },\r\n                    options: {\r\n                        linesDecorationsClassName: linesDecorationsClassName,\r\n                        minimap: {\r\n                            position: monaco.editor.MinimapPosition.Inline,\r\n                            color: minimapColor\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n            }\r\n\r\n            monaco.editor.setModelMarkers(m.model, 'test', markers);\r\n            m.oldErrorDecorations = m.model.deltaDecorations(m.oldErrorDecorations, decorations);\r\n\r\n            // decorations used when user clicks on error in error-list:\r\n            this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, []);\r\n\r\n\r\n            if ($errorList.length > 0 && this.$errorDiv.length > 0) {\r\n                hasErrors = true;\r\n                let $file = jQuery('<div class=\"jo_error-filename\">' + m.file.name + '&nbsp;</div>');\r\n                this.$errorDiv.append($file);\r\n                for (let $error of $errorList) {\r\n                    this.$errorDiv.append($error);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasErrors && this.$errorDiv.length > 0) {\r\n            this.$errorDiv.append(jQuery('<div class=\"jo_noErrorMessage\">Keine Fehler gefunden :-)</div>'));\r\n        }\r\n\r\n        this.registerLightbulbOnClickFunctions();\r\n\r\n        return errorCountMap;\r\n\r\n    }\r\n\r\n    registerLightbulbOnClickFunctions() {\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            for(let locf of that.lightBulbOnClickFunctionList){\r\n                    jQuery(locf.class).off('click', locf.onClickFunction);\r\n                    jQuery(locf.class).on('click', locf.onClickFunction).attr('title', locf.title);\r\n            }            \r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    processError(error: Error, m: Module, $errorDivs: JQuery<HTMLElement>[]) {\r\n\r\n        let $div = jQuery('<div class=\"jo_error-line\"></div>');\r\n        let $lineColumn = jQuery('<span class=\"jo_error-position\">[Z&nbsp;<span class=\"jo_linecolumn\">' + error.position.line + '</span>' +\r\n            ' Sp&nbsp;<span class=\"jo_linecolumn\">' + error.position.column + '</span>]</span>:&nbsp;');\r\n        let category = \"\";\r\n        switch (error.level) {\r\n            case \"error\": break;\r\n            case \"warning\": category = '<span class=\"jo_warning_category\">Warnung: </span>'; break;\r\n            case \"info\": category = '<span class=\"jo_info_category\">Info: </span>'; break;\r\n        }\r\n        let $message = jQuery('<div class=\"jo_error-text\">' + category + error.text + \"</div>\");\r\n\r\n        $div.append($lineColumn).append($message);\r\n\r\n        let that = this;\r\n        $div.on(\"mousedown\", (ev) => {\r\n            this.$errorDiv.find('.jo_error-line').removeClass('jo_active');\r\n            $div.addClass('jo_active');\r\n            that.showError(m, error);\r\n        });\r\n\r\n        $errorDivs.push($div);\r\n    }\r\n\r\n    showError(m: Module, error: Error) {\r\n\r\n        if (this.main instanceof Main) {\r\n            if (m != this.main.projectExplorer.getCurrentlyEditedModule()) {\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n        let position = error.position;\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n\r\n        let className: string = \"\";\r\n        switch (error.level) {\r\n            case \"error\": className = \"jo_revealError\"; break;\r\n            case \"warning\": className = \"jo_revealWarning\"; break;\r\n            case \"info\": className = \"jo_revealInfo\"; break;\r\n        }\r\n\r\n\r\n        this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, [\r\n            {\r\n                range: range,\r\n                options: { className: className }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n}","import { makeDiv } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { stringToDate, dateToStringWithoutTime } from \"../../tools/StringTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\ntype ModuleWithWorkspace = {\r\n    module: Module,\r\n    workspace: Workspace\r\n}\r\n\r\ntype DayWithModules = {\r\n    date: Date;\r\n    day: string;\r\n    modules: ModuleWithWorkspace[];\r\n}\r\n\r\nexport class HomeworkManager {\r\n\r\n    $homeworkTab: JQuery<HTMLElement>;\r\n    $homeworkTabLeft: JQuery<HTMLElement>;\r\n    $homeworkTabRight: JQuery<HTMLElement>;\r\n\r\n    $showRevisionButton: JQuery<HTMLElement>;\r\n    showRevisionActive: boolean = false;\r\n\r\n    diffEditor: monaco.editor.IStandaloneDiffEditor;\r\n\r\n    constructor(private main: Main, public $bottomDiv: JQuery<HTMLElement>) {\r\n        this.$homeworkTab = $bottomDiv.find('.jo_tabs>.jo_homeworkTab');\r\n    }\r\n\r\n    initGUI() {\r\n        let that = this;\r\n        this.$homeworkTab.append(this.$homeworkTabLeft = makeDiv(\"\", \"jo_homeworkTabLeft jo_scrollable\"));\r\n        this.$homeworkTab.append(this.$homeworkTabRight = makeDiv(\"\", \"jo_homeworkTabRight jo_scrollable\"));\r\n        jQuery('#view-mode').prepend(this.$showRevisionButton = makeDiv(\"\", \"jo_button jo_active jo_homeworkRevisionButton\", \"\"));\r\n        this.$showRevisionButton.on(\"click\", () => {\r\n            if (this.showRevisionActive) {\r\n                this.hideRevision();\r\n            } else {\r\n                this.showRevision(that.main.getCurrentlyEditedModule());\r\n            }\r\n        });\r\n        this.$showRevisionButton.hide();\r\n        jQuery('#diffEditor').hide();\r\n    }\r\n\r\n    showHomeWorkRevisionButton() {\r\n        this.$showRevisionButton.text(this.showRevisionActive ? \"Normalansicht\" : \"Korrekturen zeigen\");\r\n        this.$showRevisionButton.show();\r\n    }\r\n\r\n    hideHomeworkRevisionButton() {\r\n        this.$showRevisionButton.hide();\r\n    }\r\n\r\n    showRevision(module: Module) {\r\n\r\n        module.file.text = module.getProgramTextFromMonacoModel();\r\n        let file = module.file;\r\n\r\n        jQuery('#editor').hide();\r\n        jQuery('#diffEditor').show();\r\n\r\n        var originalModel = monaco.editor.createModel(file.text_before_revision, \"myJava\");\r\n        var modifiedModel = monaco.editor.createModel(file.text, \"myJava\");\r\n\r\n        this.diffEditor = monaco.editor.createDiffEditor(document.getElementById(\"diffEditor\"), {\r\n            // You can optionally disable the resizing\r\n            enableSplitViewResizing: true,\r\n            originalEditable: false,\r\n            readOnly: true,\r\n            // Render the diff inline\r\n            renderSideBySide: true\r\n        });\r\n\r\n        this.diffEditor.setModel({\r\n            original: originalModel,\r\n            modified: modifiedModel\r\n        });\r\n\r\n        this.showRevisionActive = true;\r\n        this.showHomeWorkRevisionButton();\r\n    }\r\n\r\n    hideRevision() {\r\n        if (this.showRevisionActive) {\r\n\r\n            jQuery('#diffEditor').hide();\r\n            this.diffEditor.dispose();\r\n            this.diffEditor = null;\r\n            jQuery('#editor').show();\r\n\r\n            this.showRevisionActive = false;\r\n            this.showHomeWorkRevisionButton();\r\n        }\r\n    }\r\n\r\n\r\n    attachToWorkspaces(workspaces: Workspace[]) {\r\n\r\n        let daysWithModules: DayWithModules[] = [];\r\n        let map: { [day: string]: DayWithModules } = {};\r\n\r\n        workspaces.forEach(ws => {\r\n            ws.moduleStore.getModules(false).forEach(module => {\r\n\r\n                let dateString = module.file.submitted_date;\r\n                if (dateString != null) {\r\n\r\n                    let date: Date = stringToDate(dateString);\r\n                    let dateWithoutTime = dateToStringWithoutTime(date);\r\n                    let dwm: DayWithModules = map[dateWithoutTime];\r\n                    if (dwm == null) {\r\n                        dwm = {\r\n                            date: date,\r\n                            day: dateWithoutTime,\r\n                            modules: []\r\n                        };\r\n                        map[dateWithoutTime] = dwm;\r\n                        daysWithModules.push(dwm);\r\n                    }\r\n                    dwm.modules.push({module: module, workspace: ws});\r\n\r\n                }\r\n\r\n            });\r\n\r\n        });\r\n\r\n        this.$homeworkTabLeft.empty();\r\n        this.$homeworkTabRight.empty();\r\n\r\n        let that = this;\r\n\r\n        this.$homeworkTabLeft.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgabetage:\"));\r\n\r\n\r\n        daysWithModules.sort((a, b) => {\r\n            if (a.date.getFullYear() != b.date.getFullYear()) return -Math.sign(a.date.getFullYear() - b.date.getFullYear());\r\n            if (a.date.getMonth() != b.date.getMonth()) return -Math.sign(a.date.getMonth() - b.date.getMonth());\r\n            if (a.date.getDate() != b.date.getDate()) return -Math.sign(a.date.getDate() - b.date.getDate());\r\n            return 0;\r\n        });\r\n\r\n        let first: boolean = true;\r\n\r\n        daysWithModules.forEach(dwm => {\r\n\r\n            dwm.modules.sort((m1, m2) => m1.module.file.name.localeCompare(m2.module.file.name));\r\n\r\n            let $div = makeDiv(\"\", \"jo_homeworkDate\", dwm.day);\r\n            this.$homeworkTabLeft.append($div);\r\n\r\n            $div.on(\"click\", (e) => {\r\n                this.$homeworkTabLeft.find('.jo_homeworkDate').removeClass('active');\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            });\r\n\r\n            if (first) {\r\n                first = false;\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    select(dwm: DayWithModules) {\r\n        this.$homeworkTabRight.empty();\r\n        this.$homeworkTabRight.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgegebene Dateien:\"));\r\n        let that = this;\r\n        dwm.modules.forEach(moduleWithWorkspace => {\r\n            let $div = jQuery(`<div class=\"jo_homeworkEntry\">Workspace <span class=\"jo_homework-workspace\">\r\n                    ${moduleWithWorkspace.workspace.name}</span>, Datei <span class=\"jo_homework-file\">\r\n                    ${moduleWithWorkspace.module.file.name}</span> (Abgabe: ${moduleWithWorkspace.module.file.submitted_date} )</div>`);\r\n            that.$homeworkTabRight.append($div);\r\n            $div.on(\"click\", () => {\r\n                    that.main.projectExplorer.setWorkspaceActive(moduleWithWorkspace.workspace);\r\n                    that.main.projectExplorer.setModuleActive(moduleWithWorkspace.module);\r\n                    that.main.projectExplorer.fileListPanel.select(moduleWithWorkspace.module, false);\r\n            });\r\n        })\r\n        \r\n    }\r\n\r\n\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { ErrorManager } from \"./ErrorManager.js\";\r\nimport { HomeworkManager } from \"./HomeworkManager.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class BottomDiv {\r\n\r\n    errorManager: ErrorManager;\r\n    homeworkManager: HomeworkManager;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>, public $mainDiv: JQuery<HTMLElement>) {\r\n\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_homeworkTabheading').length > 0) {\r\n            this.homeworkManager = new HomeworkManager(<Main>main, $bottomDiv);\r\n        }\r\n\r\n        this.errorManager = new ErrorManager(main, $bottomDiv, $mainDiv);\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$bottomDiv);\r\n        if (this.homeworkManager != null) this.homeworkManager.initGUI();\r\n\r\n        this.$bottomDiv.find('.jo_tabs').children().first().trigger(\"click\");\r\n\r\n    }\r\n\r\n    showHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'visible');\r\n        jQuery('.jo_homeworkTabheading').trigger(\"mousedown\");\r\n\r\n    }\r\n\r\n    hideHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'hidden');\r\n        jQuery('.jo_tabheadings').children().first().trigger(\"mousedown\");\r\n\r\n    }\r\n\r\n\r\n}","import { Editor } from \"./Editor.js\";\r\nimport { CompletionHint, Module } from \"../../compiler/parser/Module.js\";\r\nimport { Symbol, SymbolTable } from \"../../compiler/parser/SymbolTable.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { Column, Table } from \"../../compiler/parser/SQLTable.js\";\r\n\r\nexport class MyCompletionItemProvider implements monaco.languages.CompletionItemProvider {\r\n\r\n    isConsole: boolean;\r\n\r\n    public triggerCharacters: string[] = ['.', 'abcdefghijklmnopqrstuvwxyzäöüß_ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜ', ' ', ',', '('];\r\n\r\n    public keywordCompletionItems: Map<string, monaco.languages.CompletionItem> = new Map();\r\n\r\n    constructor(private main: MainBase) {\r\n        this.setupKeywordCompletionItems();\r\n    }\r\n\r\n    first: boolean = true;\r\n    provideCompletionItems(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, \r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n\r\n\r\n        let module: Module =\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null || module.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n            let that = this;\r\n\r\n            let wfc = function waitForCompiler(){\r\n                if(module.file.dirty){\r\n                    setTimeout(() => {\r\n                        wfc();\r\n                    }, 100);\r\n                } else {\r\n                    resolve(that.provideCompletionItemsIntern(model, position, context, token));\r\n                }\r\n            }\r\n        \r\n            wfc();\r\n\r\n        })\r\n\r\n        // Promise.resolve({\r\n        //     suggestions: completionItems\r\n        // });\r\n    }\r\n\r\n    provideCompletionItemsIntern(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, \r\n        token: monaco.CancellationToken): monaco.languages.CompletionList {\r\n\r\n        setTimeout(() => {\r\n            //@ts-ignore\r\n            let sw = this.main.getMonacoEditor()._contentWidgets[\"editor.widget.suggestWidget\"].widget;\r\n            if (this.first) {\r\n                sw.toggleDetails();\r\n                this.first = false;\r\n            }\r\n        }, 500);\r\n\r\n        let module: Module =\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null || module.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (this.isStringLiteral(module, position)) return null;\r\n\r\n        let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let symbolTable = module.mainSymbolTable.findTableAtPosition(position.lineNumber, position.column);\r\n        let completionHint: CompletionHint = module.getCompletionHint(position.lineNumber, position.column);\r\n        if (completionHint == null) {\r\n            completionHint = {\r\n                fromColumn: 0,\r\n                toColumn: 0,\r\n                fromLine: 0,\r\n                toLine: 0,\r\n                hintColumns: false,\r\n                hintTables: false,\r\n                hintKeywords: []\r\n            }\r\n        }\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n        this.addKeywordCompletionItems(completionHint, completionItems);\r\n\r\n        let dotMatch = textUntilPosition.match(/.*\\s([\\wöäüÖÄÜß]*)(\\.)([\\wöäüÖÄÜß]*)$/);\r\n\r\n        let ibMatch = textAfterPosition.match(/^([\\wöäüÖÄÜß]*)/);\r\n        let identifierAndBracketAfterCursor = \"\";\r\n        if (ibMatch != null && ibMatch.length > 0) {\r\n            identifierAndBracketAfterCursor = ibMatch[0];\r\n        }\r\n\r\n        if (dotMatch == null) {\r\n            this.addIdentifierCompletionItems(completionHint, symbolTable, completionItems);\r\n        } else {\r\n            this.addDotCompletionItems(position, dotMatch, identifierAndBracketAfterCursor, symbolTable, completionItems);\r\n        }\r\n\r\n        let word = model.getWordUntilPosition(position);\r\n        let replaceWordRange = { startColumn: word.startColumn, startLineNumber: position.lineNumber, endColumn: word.endColumn, endLineNumber: position.lineNumber };\r\n        let insertAfterCursorRange = { startColumn: position.column, startLineNumber: position.lineNumber, endColumn: position.column, endLineNumber: position.lineNumber }\r\n\r\n        for (let item of completionItems) {\r\n            if (item.range == null) {\r\n                if (item.insertText.startsWith(\",\")) {\r\n                    item.range = insertAfterCursorRange;\r\n                } else {\r\n                    item.range = replaceWordRange;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (completionHint.dontHint != null) {\r\n            completionItems = completionItems.filter(item => completionHint.dontHint.indexOf(item.insertText) < 0);\r\n        }\r\n\r\n        return {\r\n            suggestions: completionItems\r\n        };\r\n    }\r\n\r\n\r\n    addDotCompletionItems(position: monaco.Position, dotMatch: RegExpMatchArray, identifierAndBracketAfterCursor: string,\r\n        symbolTable: SymbolTable, completionItems: monaco.languages.CompletionItem[]) {\r\n        let textAfterDot = dotMatch[3];\r\n        let textBeforeDot = dotMatch[1];\r\n        let dotColumn = position.column - textAfterDot.length - 1;\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - textAfterDot.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n        for (let symbol of symbolTable.symbolList) {\r\n            if (symbol.table != null) {\r\n                let identifier: string = symbol.table.identifier;\r\n                if (symbol.tableAlias != null) identifier = symbol.tableAlias;\r\n                if (identifier.toLowerCase() == textBeforeDot) {\r\n                    for (let column of symbol.table.columns) {\r\n                        completionItems.push({\r\n                            label: column.identifier,\r\n                            detail: \"Spalte \" + column.identifier + \" der Tabelle \" + symbol.table.identifier,\r\n                            filterText: column.identifier,\r\n                            insertText: column.identifier,\r\n                            insertTextRules: monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                            kind: monaco.languages.CompletionItemKind.Field,\r\n                            range: rangeToReplace\r\n                        })\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    addIdentifierCompletionItems(completionHint: CompletionHint, symbolTable: SymbolTable, completionItems: monaco.languages.CompletionItem[]) {\r\n        let praefix: string = completionHint.praefix == null ? \"\" : completionHint.praefix;\r\n        let suffix: string = completionHint.suffix == null ? \"\" : completionHint.suffix;\r\n\r\n        if (!(completionHint.hintTables || completionHint.hintColumns)) {\r\n            return;\r\n        }\r\n\r\n        let tableIdentifiers: { [identifier: string]: boolean } = {};\r\n\r\n        let st: SymbolTable = symbolTable;\r\n        let columns: { [identifier: string]: Symbol[] } = {};\r\n        let columnIdentifiers: string[] = [];\r\n\r\n        while (st != null) {\r\n            for (let symbol of st.symbolList) {\r\n                if (symbol.column != null) {\r\n                    let columnIdentifier = symbol.column.identifier;\r\n                    if (columns[columnIdentifier] == null) {\r\n                        columns[columnIdentifier] = [symbol];\r\n                        columnIdentifiers.push(columnIdentifier);\r\n                    } else {\r\n                        columns[columnIdentifier].push(symbol);\r\n                    }\r\n                } else if (symbol.table != null && completionHint.hintTables) {\r\n                    if (!tableIdentifiers[symbol.identifier]) {\r\n                        let insertText = praefix + symbol.identifier + suffix;\r\n                        completionItems.push({\r\n                            label: symbol.identifier,\r\n                            detail: \"Tabelle \" + symbol.table.identifier,\r\n                            filterText: symbol.identifier,\r\n                            insertText: insertText,\r\n                            insertTextRules: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                            kind: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemKind.Snippet : monaco.languages.CompletionItemKind.Class,\r\n                            range: undefined,\r\n                            sortText: \"aa\" + symbol.identifier\r\n                        });\r\n                        tableIdentifiers[symbol.identifier] = true;\r\n                    }\r\n                }\r\n            }\r\n            st = st.parent;\r\n        }\r\n\r\n        if (completionHint.hintColumns) {\r\n            for (let ci of columnIdentifiers) {\r\n                let columList = columns[ci];\r\n                let withTable = columList.length > 1 && completionHint.hintColumnsOfTable == null;\r\n                for (let cs of columList) {\r\n                    let text = cs.identifier;\r\n                    if (withTable && cs.identifier == cs.column.identifier.toLowerCase()) {\r\n                        text = (cs.tableAlias == null ? cs.column.table.identifier : cs.tableAlias) + \".\" + text;\r\n                    }\r\n                    if (completionHint.hintColumnsOfTable == null || cs.column?.table?.identifier == completionHint.hintColumnsOfTable) {\r\n                        let insertText = praefix + text + suffix;\r\n                        completionItems.push({\r\n                            label: text,\r\n                            detail: \"Die Spalte \" + cs.column.identifier + \" der Tabelle \" + cs.column.table.identifier,\r\n                            filterText: text,\r\n                            insertText: insertText,\r\n                            insertTextRules: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                            kind: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemKind.Snippet : monaco.languages.CompletionItemKind.Field,\r\n                            range: undefined\r\n                        })\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    keywordToSnippetMap: { [keyword: string]: string } = {\r\n        \"(\": \"(\\n\\t$0\\n)\",\r\n        \"varchar\": \"varchar($1) $0\",\r\n        \"decimal\": \"decimal($1, $2) $0\"\r\n    }\r\n\r\n    addKeywordCompletionItems(completionHint: CompletionHint, completionItems: monaco.languages.CompletionItem[]) {\r\n        let praefix: string = completionHint.praefix == null ? \"\" : completionHint.praefix;\r\n        let suffix: string = completionHint.suffix == null ? \"\" : completionHint.suffix;\r\n\r\n\r\n        for (let text of completionHint.hintKeywords) {\r\n            let insertText = praefix + text + suffix;\r\n            let snippet = this.keywordToSnippetMap[text];\r\n\r\n            let ci = this.keywordCompletionItems.get(text);\r\n            if (ci != null) {\r\n                completionItems.push(ci);\r\n            } else if (snippet != null) {\r\n                let label = snippet.replace(\"$0\", \"\").replace(\"$1\", \"\").replace(\"$2\", \"\").replace(/ /g, \"\").replace(/\\n/g, \"\").replace(/\\t/g, \"\");\r\n                completionItems.push({\r\n                    label: label,\r\n                    detail: \"\",\r\n                    filterText: text,\r\n                    insertText: snippet,\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                })\r\n            } else {\r\n                completionItems.push({\r\n                    label: text,\r\n                    detail: \"\",\r\n                    filterText: text,\r\n                    insertText: text,\r\n                    insertTextRules: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                    kind: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemKind.Snippet : monaco.languages.CompletionItemKind.Keyword,\r\n                    range: undefined,\r\n                    sortText: text == \"from\" ? \"*\" : undefined\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    isStringLiteral(module: Module, position: monaco.Position) {\r\n\r\n        let tokenList = module.tokenList;\r\n        if (tokenList == null || tokenList.length == 0) return false;\r\n\r\n        let posMin = 0;\r\n        let posMax = tokenList.length - 1;\r\n        let pos: number;\r\n\r\n        let watchDog = 1000;\r\n\r\n        while (true) {\r\n            let posOld = pos;\r\n            pos = Math.round((posMax + posMin) / 2);\r\n\r\n            if (posOld == pos) return false;\r\n\r\n            watchDog--;\r\n            if (watchDog == 0) return false;\r\n\r\n            let t = tokenList[pos];\r\n            let p = t.position;\r\n\r\n            if (p.line < position.lineNumber || p.line == position.lineNumber && p.column + p.length < position.column) {\r\n                posMin = pos;\r\n                continue;\r\n            }\r\n\r\n            if (p.line > position.lineNumber || p.line == position.lineNumber && p.column > position.column) {\r\n                posMax = pos;\r\n                continue;\r\n            }\r\n\r\n            return t.tt == TokenType.stringConstant;\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    setupKeywordCompletionItems() {\r\n        this.keywordCompletionItems.set(\"delete from\",\r\n            {\r\n                label: \"delete from <Tabelle> where <Bedingung>\",\r\n                detail: \"Anweisung zum Löschen von Datensätzen\",\r\n                filterText: `delete from`,\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `delete from `,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"drop table\",\r\n            {\r\n                label: \"drop table <Tabelle>\",\r\n                detail: \"Anweisung zum Löschen einer Tabelle\",\r\n                filterText: 'drop table',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `drop table `,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"alter\",\r\n            {\r\n                label: \"alter table <Tabelle> <rename to, rename column, add column, drop column>\",\r\n                detail: \"Anweisung zum Ändern des Schemas (alter table <Tabelle> <rename to, rename column, add column, drop column>)\",\r\n                filterText: 'alter',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `alter table `,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"select\",\r\n            {\r\n                label: \"select <Spalten> from <Tabellen> where <Bedingung>\",\r\n                detail: \"Select-Anweisung\",\r\n                filterText: 'select',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `select * from $1\\nwhere $0\\n`,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"create table\",\r\n            {\r\n                label: \"create table <Tabellenbezeichner> (<Spaltendefinitionen>)\",\r\n                detail: \"Create table-Anweisung (Erstellt eine neue Tabelle)\",\r\n                filterText: 'create',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `create table $1 (\\n\\t$0\\n);`,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        // this.keywordCompletionItems.set(\"from\",\r\n        //     {\r\n        //         label: \"from <Tabellen> where <Bedingung>\",\r\n        //         detail: \"from-Teil der select-Anweisung\",\r\n        //         filterText: 'from',\r\n        //         // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n        //         insertText: `from $1\\nwhere $0\\n`,\r\n        //         command: {\r\n        //             id: \"editor.action.triggerSuggest\",\r\n        //             title: '123',\r\n        //             arguments: []\r\n        //         },\r\n        //         insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n        //         kind: monaco.languages.CompletionItemKind.Snippet,\r\n        //         range: undefined\r\n        //     });\r\n\r\n    }\r\n\r\n\r\n}","import { Module, MethodCallPosition } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\n\r\n\r\nexport class MySignatureHelpProvider implements monaco.languages.SignatureHelpProvider {\r\n\r\n    signatureHelpTriggerCharacters?: readonly string[] = ['(', ',', ';', '<', '>', '=']; // semicolon, <, >, = for for-loop, if, while, ...\r\n    signatureHelpRetriggerCharacters?: readonly string[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    provideSignatureHelp(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let that = this;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            setTimeout(() => {\r\n\r\n                this.main.compileIfDirty();\r\n\r\n                resolve(that.provideSignatureHelpLater(model, position, token, context));\r\n\r\n            }, 300);\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    provideSignatureHelpLater(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model != this.main.getMonacoEditor().getModel());\r\n\r\n        let module: Module = \r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        // let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        // let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let methodCallPositions = module.methodCallPositions[position.lineNumber];\r\n\r\n        if (methodCallPositions == null) return null;\r\n\r\n        let methodCallPosition: MethodCallPosition = null;\r\n        let rightMostPosition: number = -1;\r\n\r\n        for (let i = methodCallPositions.length - 1; i >= 0; i--) {\r\n            let mcp = methodCallPositions[i];\r\n            if (mcp.identifierPosition.column + mcp.identifierPosition.length < position.column\r\n                && mcp.identifierPosition.column > rightMostPosition) {\r\n                if (mcp.rightBracketPosition == null ||\r\n                    (position.lineNumber <= mcp.rightBracketPosition.line && position.column <= mcp.rightBracketPosition.column)\r\n                    || (position.lineNumber < mcp.rightBracketPosition.line)) {\r\n                    methodCallPosition = mcp;\r\n                    rightMostPosition = mcp.identifierPosition.column;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (methodCallPosition == null) return null;\r\n\r\n        return this.getSignatureHelp(methodCallPosition, position);\r\n\r\n\r\n\r\n    }\r\n\r\n    getSignatureHelp(methodCallPosition: MethodCallPosition,\r\n        position: monaco.Position): monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let parameterIndex: number = 0;\r\n\r\n        for (let cp of methodCallPosition.commaPositions) {\r\n            if (cp.line < position.lineNumber || (cp.line == position.lineNumber && cp.column < position.column)) {\r\n                parameterIndex++;\r\n            }\r\n        }\r\n\r\n        let signatureInformationList: monaco.languages.SignatureInformation[] = [];\r\n\r\n        return Promise.resolve({\r\n            value: {\r\n                activeParameter: parameterIndex,\r\n                activeSignature: 0,\r\n                signatures: signatureInformationList\r\n            },\r\n            dispose: () => { }\r\n        });\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\n\r\n\r\n\r\nexport class MyHoverProvider {\r\n\r\n    private static keywordDescriptions: { [keyword: string]: string } = {\r\n        \"print\": \"Die Anweisung ```print``` gibt eine Zeichenkette aus.\",\r\n        \"new\": \"Das Schlüsselwort ```new``` bewirkt die Instanzierung (\\\"Erschaffung\\\") eines neuen Objektes einer Klasse.\",\r\n        \"println\": \"Die Anweisung ```println``` gibt eine Zeichenkette gefolgt von einem Zeilenumbruch aus.\",\r\n        \"while\": \"```\\nwhile (Bedingung) {Anweisungen}\\n```  \\nbewirkt die Wiederholung der Anweisungen solange ```Bedingung == true``` ist.\",\r\n        \"for\": \"```\\nfor(Startanweisung;Solange-Bedingung;Nach_jeder_Wiederholung){Anweisungen}\\n```  \\n\"\r\n            + \"führt zunächst die Startanweisung aus und wiederholt dann die Anweisungen solange ```Bedingung == true``` ist. Am Ende jeder wiederholung wird Nach_jeder_Wiederholung ausgeführt.\",\r\n        \"if\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.  \\nDer ```else```-Teil kann auch weggelassen werden.\",\r\n        \"else\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.\",\r\n        \"switch\": \"```\\nswitch(Selektor){ case Wert_1: Anweisungen_1; break; case Wert_2: Anweisungen_2; break; default: Default-Anweisungen } \\n```  \\nwertet den Selektor-Term aus und führt abhängig vom Termwert Anweisungen_1, Anweisungen_2, ... aus. Entspricht der Termwert keinem der Werte Wert_1, Wert_2, ..., so werden die Default-Anweisungen ausgeführt.\",\r\n        \"%\": \"```\\na % b\\n```  \\n (sprich: 'a modulo b') berechnet den **Rest** der ganzzahligen Division a/b.\",\r\n        \"==\": \"```\\na == b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` gleich sind.  \\nSind a und b **Objekte**, so ergibt ```a == b``` nur dann ```true```, wenn ```a``` und ```b``` auf das **identische** Objekt zeigen.  \\n```==``` nennt man **Vergleichsoperator**.\",\r\n        \"<=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` kleiner oder gleich dem Wert von ```b``` ist.\",\r\n        \">=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` größer oder gleich dem Wert von ```b``` ist.\",\r\n        \"!=\": \"```\\na != b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` **un**gleich sind.  \\nSind ```a``` und ```b``` **Objekte**, so ergibt ```a != b``` dann ```true```, wenn ```a``` und ```b``` **nicht** auf das **identische** Objekt zeigen.  \\n```!=``` nennt man **Ungleich-Operator**.\",\r\n        \"+=\": \"```\\na += b\\n(Kurzschreibweise für a = a + b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erhöht** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"-=\": \"```\\na -= b\\n(Kurzschreibweise für a = a - b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erniedrigt** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"*=\": \"```\\na *= b\\n(Kurzschreibweise für a = a * b)\\n```  \\nbewirkt, dass der Wert von ```a``` mit dem Wert von ```b``` **multipliziert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"/=\": \"```\\na /= b\\n(Kurzschreibweise für a = a / b)\\n```  \\nbewirkt, dass der Wert von ```a``` durch den Wert von ```b``` **dividiert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"++\": \"```\\na++\\n(Kurzschreibweise für a = a + 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins erhöht wird.\",\r\n        \"--\": \"```\\na--\\n(Kurzschreibweise für a = a - 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins eniedrigt wird.\",\r\n        \"=\": \"```\\na = Term\\n```  \\nberechnet den Wert des Terms und weist ihn der Variablen ```a``` zu.  \\n**Vorsicht:**  \\nVerwechsle ```=```(**Zuweisungsoperator**) nicht mit ```==```(**Vergleichsoperator**)!\",\r\n        \"!\": \"```\\n!a\\n```  \\nergibt genau dann ```true```, wenn ```a``` ```false``` ergibt.  \\n```!``` spricht man '**nicht**'.\",\r\n        \"public\": \"```\\npublic\\n```  \\nAttribute und Methoden, die als ```public``` deklariert werden, sind überall (auch außerhalb der Klasse) sichtbar.\",\r\n        \"private\": \"```\\nprivate\\n```  \\nAttribute und Methoden, die als ```private``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse sichtbar.\",\r\n        \"protected\": \"```\\nprotected\\n```  \\nAttribute und Methoden, die als ```protected``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse oder innerhalb von Methoden von Kindklassen sichtbar.\",\r\n        \"return\": \"```\\nreturn Term\\n```  \\nbewirkt, dass die Methode verlassen wird und der Wert des Terms an die aufrufende Stelle zurückgegeben wird.\",\r\n        \"break\": \"```\\nbreak;\\n```  \\ninnerhalb einer Schleife bewirkt, dass die Schleife sofort verlassen und mit den Anweisungen nach der Schleife fortgefahren wird.  \\n\"+\r\n        \"```break``` innerhalb einer ```switch```-Anweisung bewirkt, dass der Block der ```switch```-Anweisung verlassen wird.\",\r\n        \"class\": \"```\\nclass\\n```  \\nMit dem Schlüsselwort ```class``` werden Klassen definiert.\",\r\n        \"extends\": \"```\\nextends\\n```  \\n```class A extends B { ... }``` bedeutet, dass die Klasse A Unterklasse der Klasse B ist.\",\r\n        \"implements\": \"```\\nimplements\\n```  \\n```class A implements B { ... }``` bedeutet, dass die Klasse A das Interface B implementiert, d.h., dass sie alle Methoden besitzen muss, die in B definiert sind.\",\r\n        \"this\": \"```\\nthis\\n```  \\nInnerhalb einer Methodendefinition bezeichnet das Schlüsselwor ```this``` immer dasjenige Objekt, für das die Methode gerade ausgeführt wird.\",\r\n\r\n    }\r\n\r\n    constructor(private editor: Editor) {\r\n\r\n    }\r\n\r\n    provideHover(model: monaco.editor.ITextModel, position: monaco.Position, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Hover> {\r\n\r\n        let selection: monaco.Selection = this.editor.editor.getSelection();\r\n        \r\n        // if cursor is inside current selection then don't show hover, because editor.onDidChangeCursorPosition evaluates selected Text \r\n        // (see class Editor).\r\n        if(selection != null){\r\n            if(selection.startLineNumber != selection.endLineNumber || selection.startColumn != selection.endColumn){\r\n                if(\r\n                    (selection.startLineNumber < position.lineNumber || selection.startLineNumber == position.lineNumber && selection.startColumn <= position.column) && \r\n                    (selection.endLineNumber > position.lineNumber || selection.endLineNumber == position.lineNumber && selection.endColumn >= position.column) \r\n                ){\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        let module: Module = this.editor.main.getCurrentWorkspace()?.getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        for(let errorList of module.errors){\r\n            for(let error of errorList){\r\n                if(error.position.line == position.lineNumber && \r\n                    error.position.column <= position.column && \r\n                    error.position.column + error.position.length >= position.column){\r\n                        return null; // Show error-tooltip and don't show hover-tooltip\r\n                    }\r\n            }\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let declarationAsString = \"\";\r\n\r\n        if (element != null) {\r\n        } else {\r\n            let word = this.getWordUnderCursor(model, position);\r\n            let desc = MyHoverProvider.keywordDescriptions[word];\r\n            if (desc != null) {\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: desc }],\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getWordUnderCursor(model: monaco.editor.ITextModel, position: monaco.Position)\r\n         : string {\r\n        \r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let word = \"\";\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierOrArrayDescriptor(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        if (end - begin > 1) {\r\n            word = text.substring(begin, end);\r\n        } else {\r\n            end = pos;\r\n            while (end < text.length && this.isInsideOperator(text.charAt(end))) {\r\n                end++;\r\n            }\r\n    \r\n            begin = pos;\r\n            while (begin > 0 && this.isInsideOperator(text.charAt(begin - 1))) {\r\n                begin--;\r\n            }\r\n    \r\n            if (end - begin > 0) {\r\n                word = text.substring(begin, end);\r\n            }\r\n        }\r\n\r\n        return word;\r\n\r\n    }\r\n\r\n    widenDeclaration(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        identifier: string): string {\r\n\r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierChain(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        let lenght: number = identifier?.length == null ? 1 : identifier.length;\r\n\r\n        if (end - begin > length) {\r\n            return text.substring(begin, end);\r\n        }\r\n\r\n        return identifier;\r\n    }\r\n\r\n    isInsideIdentifierChain(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß_\\[\\]\\.]/i);\r\n\r\n    }\r\n\r\n    isInsideOperator(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[!%<>=\\+\\-\\*\\/]/i);\r\n\r\n    }\r\n\r\n    isInsideIdentifierOrArrayDescriptor(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß\\[\\]]/i);\r\n\r\n    }\r\n\r\n\r\n}","import { QuickFix } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyCodeActionProvider implements monaco.languages.CodeActionProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideCodeActions(model: monaco.editor.ITextModel, range: monaco.Range, context: monaco.languages.CodeActionContext, token: monaco.CancellationToken): monaco.languages.CodeActionList | Promise<monaco.languages.CodeActionList> {\r\n        const actions = context.markers.map(error => {\r\n            let quickFix: QuickFix = <any>error.relatedInformation;\r\n            if (quickFix == null) return null;\r\n\r\n            let codeAction: monaco.languages.CodeAction = {\r\n                title: quickFix.title,\r\n                diagnostics: [error],\r\n                kind: \"quickfix\",\r\n                edit: {\r\n                    edits: quickFix.editsProvider(model.uri)\r\n                },\r\n                isPreferred: true\r\n            };\r\n            return codeAction;\r\n        });\r\n        return {\r\n            actions: actions,\r\n            dispose: () => { }\r\n        }\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Editor } from \"./Editor.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyReferenceProvider implements monaco.languages.ReferenceProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideReferences(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.ReferenceContext, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Location[]> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) return null;\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let referencePositions: monaco.languages.Location[] = [];\r\n\r\n        usagePositions.forEach((upInCurrentModule, module) => {\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    referencePositions.push(\r\n                        {\r\n                            uri: module.uri,\r\n                            range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length }\r\n                        });\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        return referencePositions;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import { Main } from \"../Main.js\";\r\n\r\nexport type HelperDirection = \"top\" | \"bottom\" | \"left\" | \"right\";\r\n\r\nexport class Helper {\r\n\r\n    public static openHelper(text: string, targetElement: JQuery<HTMLElement>, direction: HelperDirection) {\r\n\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.removeClass(['jo_arrow_box_left', 'jo_arrow_box_right', 'jo_arrow_box_top', 'jo_arrow_box_bottom']);\r\n\r\n        $helper.addClass('jo_arrow_box_' + direction);\r\n\r\n        $helper.css({ left: '', right: '', top: '', bottom: '' });\r\n\r\n        let to = targetElement.offset();\r\n        let b = jQuery('body');\r\n\r\n        let delta: number = 34;\r\n\r\n        switch (direction) {\r\n            case \"bottom\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                bottom: b.height() - to.top + delta\r\n            });\r\n                break;\r\n            case \"top\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                top: to.top + targetElement.height() + 26\r\n            });\r\n                break;\r\n            case \"left\": $helper.css({\r\n                left: to.left + targetElement.width() + delta,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n            case \"right\": $helper.css({\r\n                right: b.width() - to.left,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n        }\r\n\r\n        $helper.find('span').html(text);\r\n\r\n        let $button = $helper.find('.jo_button');\r\n        $button.on('click', (e) => {\r\n            e.stopPropagation();\r\n            $button.off('click');\r\n            Helper.close();\r\n        });\r\n\r\n        $helper.fadeIn(800);\r\n\r\n    }\r\n\r\n    static close() {\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.fadeOut(800);\r\n    }\r\n\r\n\r\n    static showHelper(id: string, mainBase: Main, $element?: JQuery<HTMLElement>) {\r\n\r\n        let main: Main;\r\n        if(mainBase instanceof Main){\r\n            main = mainBase;\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        let helperHistory = main.user.settings!.helperHistory;\r\n\r\n        let flag = id + \"Done\";\r\n\r\n        if (helperHistory != null && (helperHistory[flag] == null || !helperHistory[flag])) {\r\n            helperHistory[flag] = true;\r\n            main.networkManager.sendUpdateUserSettings(() => { });\r\n\r\n            let text: string = \"\";\r\n            let direction: HelperDirection = \"left\";\r\n\r\n            switch (id) {\r\n                case \"newDatabaseHelper\":\r\n                    text = `Es gibt noch keine Datenbank. <br> Nutzen Sie den Button\r\n                        <span class='img_add-database-dark jo_inline-image'></span> um eine Datenbank anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                    case \"newSQLFileHelper\":\r\n                        text = `Es gibt noch keine Datei mit SQL-Anweisungen. <br> Nutzen Sie den Button \r\n                            <span class='img_add-file-dark jo_inline-image'></span> um eine neue Datei anzulegen.\r\n                            `;\r\n                        direction = \"left\";\r\n                        break;\r\n                case \"homeButtonHelper\":\r\n                    text = \"Mit dem Home-Button <span class='img_home-dark jo_inline-image'></span> können Sie wieder zu Ihren eigenen Workspaces wechseln.\";\r\n                    direction = \"top\";\r\n                    $element = jQuery('.img_home-dark');\r\n                    break;\r\n                case \"playButtonHelper\":\r\n                    text = `Mit dem \"Start-Button\"\r\n                        (<span class='img_start-dark jo_inline-image'></span>) \r\n                        oder der Tastenkombination &lt;Strg&gt;&nbsp;+&nbsp&lt;Enter&gt; \r\n                        wird die Anweisung ausgeführt, in der der Cursor gerade steht. \r\n                        <br> Wollen Sie mehrere Anweisungen hintereinander ausführen, so markieren \r\n                        Sie alle Anweisungen und klicken Sie dann auf <span class='img_start-dark jo_inline-image'></span>\r\n                        oder drücken Sie  &lt;Strg&gt;&nbsp;+&nbsp&lt;Enter&gt;. `;\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"consoleHelper\": \r\n                    text=`\r\n                        Hier können Sie Anweisungen oder Terme eingeben, die nach Bestätigung mit der Enter-Taste ausgeführt/ausgewertet werden. Das Ergebnis sehen Sie im Bereich über der Eingabezeile. <br>\r\n                        Falls das Programm gerade pausiert (z.B. bei Ausführung in Einzelschritten) können Sie auch auf die Variablen des aktuellen Sichtbarkeitsbereiches zugreifen.\r\n                    `;\r\n                    direction = \"bottom\";\r\n            }\r\n\r\n            if (text != \"\" && $element != null && $element.length > 0) {\r\n                Helper.openHelper(text, $element, direction);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MyCompletionItemProvider } from \"./MyCompletionItemProvider.js\";\r\nimport { defineMyJava } from \"./MyJava.js\";\r\nimport { MySignatureHelpProvider } from \"./MySignatureHelpProvider.js\";\r\nimport { MyHoverProvider } from \"./MyHoverProvider.js\";\r\nimport { MyCodeActionProvider } from \"./MyCodeActionProvider.js\";\r\nimport { MyReferenceProvider } from \"./MyReferenceProvider.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { defineVscSQL } from \"./VscSql.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\nexport class Editor {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n\r\n    cw: monaco.editor.IContentWidget = null;\r\n\r\n    dontPushNextCursorMove: number = 0;\r\n\r\n    constructor(public main: MainBase, private showMinimap: boolean, private isEmbedded: boolean) {\r\n    }\r\n\r\n    initGUI($element: JQuery<HTMLElement>) {\r\n\r\n\r\n\r\n        defineVscSQL();\r\n\r\n        monaco.editor.defineTheme('myCustomThemeDark', {\r\n            base: 'vs-dark', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'functions', foreground: 'dcdcaa', fontStyle: 'italic' },\r\n                { token: 'string.sql', foreground: '3DC9B0' },\r\n                { token: 'number', foreground: '7bef3f' },\r\n                { token: 'type', foreground: '499cd6' },\r\n                { token: 'identifier', foreground: 'effefe' },\r\n                { token: 'statement', foreground: '9cdcfe', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '619ceb', fontStyle: 'bold' },\r\n                { token: 'table', foreground: 'ff0000', fontStyle: 'bold' },\r\n                { token: 'delimiter', foreground: 'e8eb38' }\r\n                // { token: 'comment.js', foreground: '008800', fontStyle: 'bold italic underline' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#1e1e1e\",\r\n                \"jo_highlightStatementGreen\": \"#004000\",\r\n                \"jo_highlightStatementYellow\": \"#404000\",\r\n                \"jo_highlightStatementRed\": \"#402020\"\r\n            }\r\n        });\r\n\r\n        monaco.editor.defineTheme('myCustomThemeLight', {\r\n            base: 'vs', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'functions', foreground: '694E16', fontStyle: 'italic bold' },\r\n                { token: 'string.sql', foreground: 'a03030' },\r\n                { token: 'number', foreground: '404040' },\r\n                { token: 'type', foreground: '0000ff', fontStyle: 'bold' },\r\n                { token: 'identifier', foreground: '8000e0' },\r\n                { token: 'statement', foreground: '001080', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '00a000', fontStyle: 'bold' },\r\n                { token: 'comment', foreground: '808080', fontStyle: 'italic' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#FFFFFF\",\r\n                \"editor.foreground\": \"#000000\",\r\n                \"editor.inactiveSelectionBackground\": \"#E5EBF1\",\r\n                \"editorIndentGuide.background\": \"#D3D3D3\",\r\n                \"editorIndentGuide.activeBackground\": \"#939393\",\r\n                \"editor.selectionHighlightBackground\": \"#ADD6FF80\",\r\n                \"editorSuggestWidget.background\": \"#F3F3F3\",\r\n                \"activityBarBadge.background\": \"#007ACC\",\r\n                \"sideBarTitle.foreground\": \"#6F6F6F\",\r\n                \"list.hoverBackground\": \"#E8E8E8\",\r\n                \"input.placeholderForeground\": \"#767676\",\r\n                \"searchEditor.textInputBorder\": \"#CECECE\",\r\n                \"settings.textInputBorder\": \"#CECECE\",\r\n                \"settings.numberInputBorder\": \"#CECECE\",\r\n                \"statusBarItem.remoteForeground\": \"#FFF\",\r\n                \"statusBarItem.remoteBackground\": \"#16825D\",\r\n                \"jo_highlightStatementGreen\": \"#004000\",\r\n                \"jo_highlightStatementYellow\": \"#404000\",\r\n                \"jo_highlightStatementRed\": \"#400000\"\r\n            }\r\n        });\r\n\r\n\r\n        this.editor = monaco.editor.create($element[0], {\r\n            // value: [\r\n            //     'function x() {',\r\n            //     '\\tconsole.log(\"Hello world!\");',\r\n            //     '}'\r\n            // ].join('\\n'),\r\n            // language: 'myJava',\r\n            language: 'vscSQL',\r\n            lightbulb: {\r\n                enabled: true\r\n            },\r\n            // gotoLocation: {\r\n            //     multipleReferences: \"gotoAndPeek\"\r\n            // },\r\n            lineDecorationsWidth: 0,\r\n            peekWidgetDefaultFocus: \"tree\",\r\n            fixedOverflowWidgets: true,\r\n            quickSuggestions: true,\r\n            quickSuggestionsDelay: 10,\r\n            fontSize: 14,\r\n            fontFamily: \"Consolas, Roboto Mono\",\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            selectOnLineNumbers: false,\r\n            // selectionHighlight: false,\r\n            automaticLayout: true,\r\n            scrollBeyondLastLine: false,\r\n            occurrencesHighlight: false,\r\n            autoIndent: \"full\",\r\n            dragAndDrop: true,\r\n            formatOnType: true,\r\n            formatOnPaste: true,\r\n            suggestFontSize: 16,\r\n            suggestLineHeight: 22,\r\n            suggest: {\r\n                localityBonus: true,\r\n                insertMode: \"replace\"\r\n                // snippetsPreventQuickSuggestions: false\r\n            },\r\n            parameterHints: { enabled: true, cycle: true },\r\n            // //@ts-ignore\r\n            // contribInfo: {\r\n            //     suggestSelection: 'recentlyUsedByPrefix',\r\n            // },\r\n\r\n            mouseWheelZoom: this.isEmbedded,\r\n\r\n            minimap: {\r\n                enabled: this.showMinimap\r\n            },\r\n            scrollbar: {\r\n                vertical: 'auto',\r\n                horizontal: 'auto'\r\n            },\r\n            theme: \"myCustomThemeDark\",\r\n            // automaticLayout: true\r\n\r\n\r\n        }\r\n        );\r\n\r\n        let that = this;\r\n\r\n        let mouseWheelListener = (event: WheelEvent) => {\r\n            if (event.ctrlKey === true) {\r\n\r\n                that.changeEditorFontSize(Math.sign(event.deltaY), true);\r\n\r\n                event.preventDefault();\r\n            }\r\n        };\r\n\r\n\r\n        this.editor.onDidChangeConfiguration((event) => {\r\n            if (event.hasChanged(monaco.editor.EditorOption.fontInfo) && this.isEmbedded) {\r\n\r\n                this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n            }\r\n        });\r\n\r\n        this.editor.onDidChangeCursorPosition((event) => {\r\n\r\n            that.onDidChangeCursorPosition(event.position);\r\n\r\n        });\r\n\r\n        // We need this to set our model after user uses Strg+click on identifier\r\n        this.editor.onDidChangeModel((event) => {\r\n\r\n            let element: HTMLDivElement = <any>$element.find('.monaco-editor')[0];\r\n            element.removeEventListener(\"wheel\", mouseWheelListener);\r\n            element.addEventListener(\"wheel\", mouseWheelListener, { passive: false });\r\n\r\n            if (this.main.getCurrentWorkspace() == null) return;\r\n\r\n            let module = this.main.getCurrentWorkspace().getModuleByMonacoModel(this.editor.getModel());\r\n            if (this.main instanceof Main && module != null) {\r\n\r\n                this.main.projectExplorer.setActiveAfterExternalModelSet(module);\r\n            }\r\n        });\r\n\r\n        monaco.languages.registerHoverProvider('vscSQL', new MyHoverProvider(this));\r\n\r\n        monaco.languages.registerCompletionItemProvider('vscSQL', new MyCompletionItemProvider(this.main));\r\n        monaco.languages.registerCodeActionProvider('vscSQL', new MyCodeActionProvider(this.main));\r\n        monaco.languages.registerReferenceProvider('vscSQL', new MyReferenceProvider(this.main));\r\n\r\n\r\n        monaco.languages.registerSignatureHelpProvider('vscSQL', new MySignatureHelpProvider(this.main));\r\n\r\n        this.editor.onMouseDown((e: monaco.editor.IEditorMouseEvent) => {\r\n            const data = e.target.detail;\r\n            if (e.target.type !== monaco.editor.MouseTargetType.GUTTER_GLYPH_MARGIN &&\r\n                e.target.type !== monaco.editor.MouseTargetType.GUTTER_LINE_NUMBERS || data.isAfterLines) {\r\n                return;\r\n            }\r\n            that.onMarginMouseDown(e.target.position.lineNumber);\r\n            return;\r\n        });\r\n\r\n\r\n        // If editor is instantiated before fonts are loaded then indentation-lines\r\n        // are misplaced, see https://github.com/Microsoft/monaco-editor/issues/392\r\n        // so:\r\n        setTimeout(() => {\r\n            monaco.editor.remeasureFonts();\r\n        }, 2000);\r\n\r\n        this.addActions();\r\n\r\n        //@ts-ignore\r\n        this.editor.onDidType((text) => { that.onDidType(text) });\r\n\r\n        return this.editor;\r\n    }\r\n\r\n\r\n    onDidType(text: string) {\r\n        //        const endOfCommentText = \" * \\n */\";\r\n\r\n        const insertEndOfComment = (pos, insertText: string, newLine: number, newColumn: number) => {\r\n            const range = new monaco.Range(\r\n                pos.lineNumber,\r\n                pos.column,\r\n                pos.lineNumber,\r\n                pos.column\r\n            );\r\n            this.editor.executeEdits(\"new-bullets\", [\r\n                { range, text: insertText }\r\n            ]);\r\n\r\n            // Set position after bulletText\r\n            this.editor.setPosition({\r\n                lineNumber: newLine,\r\n                column: newColumn\r\n            });\r\n        };\r\n\r\n        if (text === \"\\n\") {\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            const prevLine = model.getLineContent(position.lineNumber - 1);\r\n            if (prevLine.trim().indexOf(\"/*\") === 0 && !prevLine.trimRight().endsWith(\"*/\")) {\r\n                const nextLine = position.lineNumber < model.getLineCount() ? model.getLineContent(position.lineNumber + 1) : \"\";\r\n                if (!nextLine.trim().startsWith(\"*\")) {\r\n                    let spacesAtBeginningOfLine: string = prevLine.substr(0, prevLine.length - prevLine.trimLeft().length);\r\n                    if (prevLine.trim().indexOf(\"/**\") === 0) {\r\n                        insertEndOfComment(position, \"\\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    } else {\r\n                        insertEndOfComment(position, \" * \\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    lastTime: number = 0;\r\n    setFontSize(fontSizePx: number) {\r\n\r\n        // console.log(\"Set font size: \" + fontSizePx);\r\n        let time = new Date().getTime();\r\n        if (time - this.lastTime < 150) return;\r\n        this.lastTime = time;\r\n\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (this.main instanceof Main) {\r\n            this.main.viewModeController.saveFontSize(fontSizePx);\r\n        }\r\n\r\n        if (fontSizePx != editorfs) {\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx\r\n            });\r\n\r\n            // editor does not set fontSizePx, but fontSizePx * zoomfactor with unknown zoom factor, so \r\n            // we have to do this dirty workaround:\r\n            let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n            let factor = newEditorfs / fontSizePx;\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx / factor\r\n            });\r\n\r\n        }\r\n\r\n        jQuery('.jo_editorFontSize').css('font-size', fontSizePx + \"px\");\r\n        jQuery('.jo_editorFontSize').css('line-height', (fontSizePx + 2) + \"px\");\r\n\r\n        document.documentElement.style.setProperty('--breakpoint-size', fontSizePx + 'px');\r\n        document.documentElement.style.setProperty('--breakpoint-radius', fontSizePx / 2 + 'px');\r\n\r\n\r\n        this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n    }\r\n\r\n    changeEditorFontSize(delta: number, dynamic: boolean = true) {\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (dynamic) {\r\n            if (editorfs < 10) {\r\n                delta *= 1;\r\n            } else if (editorfs < 20) {\r\n                delta *= 2;\r\n            } else {\r\n                delta *= 4;\r\n            }\r\n        }\r\n\r\n        let newEditorFs = editorfs + delta;\r\n        if (newEditorFs >= 6 && newEditorFs <= 80) {\r\n            this.setFontSize(newEditorFs);\r\n        }\r\n    }\r\n\r\n\r\n    addActions() {\r\n        let that = this;\r\n\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Find bracket',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'Finde korrespondierende Klammer',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.5,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                ed.getAction('editor.action.jumpToBracket').run();\r\n                return null;\r\n            }\r\n        });\r\n\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Execute statement',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'SQL-Anweisung ausführen',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.Enter],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.0,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                that.main.getActionManager().trigger('execute');\r\n                return null;\r\n            }\r\n        });\r\n\r\n        //console.log(this.editor.getSupportedActions());\r\n    }\r\n\r\n    onMarginMouseDown(lineNumber: number) {\r\n\r\n    }\r\n\r\n    elementDecoration: string[] = [];\r\n    onDidChangeCursorPosition(position: { lineNumber: number, column: number }) {\r\n\r\n        if (position == null) position = this.editor.getPosition();\r\n\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, []);\r\n            return;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        if (element != null) {\r\n            let usagePositions = element.usagePositions;\r\n            let upInCurrentModule = usagePositions.get(module);\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    decorations.push({\r\n                        range: { startColumn: up.column, startLineNumber: up.line, endColumn: up.column + up.length, endLineNumber: up.line },\r\n                        options: {\r\n                            className: 'jo_revealSyntaxElement', isWholeLine: false, overviewRuler: {\r\n                                color: { id: \"editorIndentGuide.background\" },\r\n                                darkColor: { id: \"editorIndentGuide.activeBackground\" },\r\n                                position: monaco.editor.OverviewRulerLane.Left\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        let executeActionActive = false;\r\n\r\n        for(let sqlStatement of module.getSQLSTatementsAtSelection(this.editor.getSelection())){\r\n\r\n            let classname = \"jo_highlightStatementGreen\";\r\n            if (sqlStatement != null) {\r\n                if (sqlStatement.hasErrors) {\r\n                    classname = \"jo_highlightStatementRed\";\r\n                    if (sqlStatement.acceptedBySQLite) {\r\n                        classname = \"jo_highlightStatementYellow\";\r\n                        executeActionActive = true;\r\n                    }\r\n                } else {\r\n                    executeActionActive = true;\r\n                }\r\n    \r\n                decorations.push({\r\n                    range: {\r\n                        startColumn: sqlStatement.from.column, startLineNumber: sqlStatement.from.line,\r\n                        endColumn: sqlStatement.to.column, endLineNumber: sqlStatement.to.line\r\n                    },\r\n                    options: {\r\n                        className: classname, isWholeLine: false, overviewRuler: {\r\n                            color: { id: classname },\r\n                            darkColor: { id: classname },\r\n                            position: monaco.editor.OverviewRulerLane.Left\r\n                        },\r\n                        minimap: {\r\n                            color: { id: classname },\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        },\r\n                        zIndex: -100\r\n                    }\r\n                })\r\n    \r\n            }\r\n        }\r\n\r\n\r\n        this.main.getActionManager().setActive('execute', executeActionActive);\r\n\r\n        if(executeActionActive && !this.main.isEmbedded()){\r\n            Helper.showHelper(\"playButtonHelper\", <any>this.main, jQuery('div.img_start-dark'));\r\n        }\r\n\r\n\r\n        this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, decorations);\r\n\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.main.getCurrentlyEditedModule();\r\n    }\r\n\r\n\r\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport function defineVscSQL() {\r\n    monaco.languages.register({\r\n        id: 'vscSQL',\r\n        extensions: ['.sql'],\r\n        //  mimetypes: [\"text/x-java-source\", \"text/x-java\"]  \r\n    });\r\n\r\n    let conf: monaco.languages.LanguageConfiguration = {\r\n        onEnterRules: [\r\n            {\r\n                // e.g. /** | */\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                afterText: /^\\s*\\*\\/$/,\r\n                action: { indentAction: monaco.languages.IndentAction.IndentOutdent, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g. /** ...|\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g.  * ...|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: '* ' }\r\n            },\r\n            {\r\n                // e.g.  */|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            },\r\n            {\r\n                // e.g.  *-----*/|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*[^/]*\\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            }\r\n        ],\r\n        comments: {\r\n            lineComment: '--',\r\n            blockComment: ['/*', '*/'],\r\n        },\r\n        brackets: [\r\n            ['{', '}'],\r\n            ['[', ']'],\r\n            ['(', ')']\r\n        ],\r\n        autoClosingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ],\r\n        surroundingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ]\r\n    };\r\n    let language = {\r\n\r\n        defaultToken: '',\r\n        tokenPostfix: '.sql',\r\n        ignoreCase: true,\r\n        brackets: [\r\n            { open: '[', close: ']', token: 'delimiter.square' },\r\n            { open: '(', close: ')', token: 'delimiter.parenthesis' }\r\n        ],\r\n        escapes: /\\\\(?:[abfnrtv\\\\\"'])/,\r\n        keywords: [\r\n            \"ABORT\", \"ACTION\", \"ADD\", \"AFTER\", \"ALL\", \"ALTER\", \"ANALYZE\", \"AND\", \"AS\", \"ASC\", \"ATTACH\", \"AUTOINCREMENT\", \"BEFORE\",\r\n            \"BEGIN\", \"BETWEEN\", \"BY\", \"CASCADE\", \"CASE\", \"CAST\", \"CHECK\", \"COLLATE\", \"COLUMN\", \"COMMIT\", \"CONFLICT\", \"CONSTRAINT\",\r\n            \"CREATE\", \"CROSS\", \"CURRENT_DATE\", \"CURRENT_TIME\", \"CURRENT_TIMESTAMP\", \"DATABASE\", \"DEFAULT\", \"DEFERRABLE\", \"DEFERRED\",\r\n            \"DELETE\", \"DESC\", \"DETACH\", \"DISTINCT\", \"DROP\", \"EACH\", \"ELSE\", \"END\", \"ESCAPE\", \"EXCEPT\", \"EXCLUSIVE\", \"EXISTS\", \"EXPLAIN\",\r\n            \"FAIL\", \"FOR\", \"FOREIGN\", \"FROM\", \"FULL\", \"GLOB\", \"GROUP\", \"HAVING\", \"IF\", \"IGNORE\", \"IMMEDIATE\", \"IN\", \"INDEX\", \"INDEXED\",\r\n            \"INITIALLY\", \"INNER\", \"INSERT\", \"INSTEAD\", \"INTERSECT\", \"INTO\", \"IS\", \"ISNULL\", \"JOIN\", \"KEY\", \"LEFT\", \"LIKE\", \"LIMIT\", \"MATCH\",\r\n            \"NATURAL\", \"NO\", \"NOT\", \"NOTNULL\", \"NULL\", \"OF\", \"OFFSET\", \"ON\", \"OR\", \"ORDER\", \"OUTER\", \"PLAN\", \"PRAGMA\", \"PRIMARY\", \"QUERY\",\r\n            \"RAISE\", \"RECURSIVE\", \"REFERENCES\", \"REGEXP\", \"REINDEX\", \"RELEASE\", \"RENAME\", \"REPLACE\", \"RESTRICT\", \"RIGHT\", \"ROLLBACK\", \"ROW\",\r\n            \"SAVEPOINT\", \"SELECT\", \"SET\", \"TABLE\", \"TEMP\", \"TEMPORARY\", \"THEN\", \"TO\", \"TRANSACTION\", \"TRIGGER\", \"UNION\", \"UNIQUE\", \"UPDATE\",\r\n            \"USING\", \"VACUUM\", \"VALUES\", \"VIEW\", \"VIRTUAL\", \"WHEN\", \"WHERE\", \"WITH\", \"WITHOUT\", \"ENGINE\", \"CHARSET\"\r\n        ],\r\n        operators: [\r\n            \"AND\", \"BETWEEN\", \"IN\", \"LIKE\", \"NOT\", \"OR\", \"IS\", \"NULL\", \"INTERSECT\", \"UNION\", \"INNER\", \"JOIN\", \"LEFT\", \"OUTER\", \"RIGHT\"\r\n        ],\r\n        builtinFunctions: [\r\n            \"abs\", \"changes\", \"char\", \"coalesce\", \"count\", \"glob\", \"hex\", \"ifnull\",\r\n            \"iif\", \"instr\", \"last_insert_rowid\", \"length\", \"like\", \"likelihood\", \"likely\",\r\n            \"lower\", \"ltrim\", \"max\", \"min\", \"nullif\", \"quote\", \"random\", \"randomblob\",\r\n            \"replace\", \"round\", \"rtrim\", \"sign\", \"soundex\", \"sqlite_version\", \"substr\", \"substring\",\r\n            \"total_changes\", \"trim\", \"typeof\", \"unicode\", \"unlikely\", \"upper\", \"zeroblob\"\r\n        ],\r\n        builtinVariables: [\r\n            // NOT SUPPORTED\r\n        ],\r\n        pseudoColumns: [\r\n            // NOT SUPPORTED\r\n        ],\r\n        tokenizer: {\r\n            root: [\r\n                { include: '@comments' },\r\n                { include: '@whitespace' },\r\n                { include: '@pseudoColumns' },\r\n                { include: '@numbers' },\r\n                { include: '@strings' },\r\n                { include: '@complexIdentifiers' },\r\n                { include: '@scopes' },\r\n                [/[;,.]/, 'delimiter'],\r\n                [/[()]/, '@brackets'],\r\n                [/[a-z_$äöü][\\w$äöüßÄÖÜ]*(?=\\()/, {\r\n                    cases: {\r\n                        '@builtinFunctions': 'functions',\r\n                        '@keywords': 'keyword',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[\\w@#$]+/, {\r\n                    cases: {\r\n                        '@keywords': 'keyword',\r\n                        '@operators': 'operator',\r\n                        '@builtinVariables': 'predefined',\r\n                        // '@builtinFunctions': 'functions',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[<>=!%&+\\-*/|~^]/, 'operator'],\r\n            ],\r\n            whitespace: [\r\n                [/\\s+/, 'white']\r\n            ],\r\n            comments: [\r\n                [/--+.*/, 'comment'],\r\n                [/\\/\\*/, { token: 'comment.quote', next: '@comment' }]\r\n            ],\r\n            comment: [\r\n                [/[^*/]+/, 'comment'],\r\n                // Not supporting nested comments, as nested comments seem to not be standard?\r\n                // i.e. http://stackoverflow.com/questions/728172/are-there-multiline-comment-delimiters-in-sql-that-are-vendor-agnostic\r\n                // [/\\/\\*/, { token: 'comment.quote', next: '@push' }],    // nested comment not allowed :-(\r\n                [/\\*\\//, { token: 'comment.quote', next: '@pop' }],\r\n                [/./, 'comment']\r\n            ],\r\n            pseudoColumns: [\r\n                [/[$][A-Za-z_][\\w@#$]*/, {\r\n                    cases: {\r\n                        '@pseudoColumns': 'predefined',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n            ],\r\n            numbers: [\r\n                [/0[xX][0-9a-fA-F]*/, 'number'],\r\n                [/[$][+-]*\\d*(\\.\\d*)?/, 'number'],\r\n                [/((\\d+(\\.\\d*)?)|(\\.\\d+))([eE][\\-+]?\\d+)?/, 'number']\r\n            ],\r\n            strings: [\r\n                [/'/, { token: 'string', next: '@string' }],\r\n            ],\r\n            string: [\r\n                [/[^\\\\']+/, 'string'],\r\n                [/\\\\./, 'string.escape.invalid'],\r\n                [/''/, 'string'],\r\n                [/'/, { token: 'string', next: '@pop' }]\r\n            ],\r\n            complexIdentifiers: [\r\n                [/\"/, { token: 'identifier.quote', next: '@quotedIdentifier' }]\r\n            ],\r\n            quotedIdentifier: [\r\n                [/[^\"]+/, 'identifier'],\r\n                [/\"\"/, 'identifier'],\r\n                [/\"/, { token: 'identifier.quote', next: '@pop' }]\r\n            ],\r\n            scopes: [\r\n                // NOT SUPPORTED\r\n            ]\r\n        }\r\n\r\n\r\n\r\n    };\r\n\r\n    //@ts-ignore\r\n    monaco.languages.setLanguageConfiguration('vscSQL', conf);\r\n    //@ts-ignore\r\n    monaco.languages.setMonarchTokensProvider('vscSQL', language);\r\n\r\n\r\n\r\n}","import { Lexer } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Token, TokenList, TokenType, tokenListToString } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class Formatter implements monaco.languages.DocumentFormattingEditProvider,\r\n    monaco.languages.OnTypeFormattingEditProvider {\r\n\r\n    autoFormatTriggerCharacters: string[] = ['\\n'];\r\n\r\n    displayName?: string = \"Java-Autoformat\";\r\n\r\n\r\n    constructor(\r\n        // private main: Main\r\n    ) {\r\n\r\n    }\r\n\r\n    init() {\r\n        monaco.languages.registerDocumentFormattingEditProvider('myJava', this);\r\n        monaco.languages.registerOnTypeFormattingEditProvider('myJava', this);\r\n    }\r\n\r\n    provideOnTypeFormattingEdits(model: monaco.editor.ITextModel, position: monaco.Position, ch: string, options: monaco.languages.FormattingOptions, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n    deleteOverlappingRanges(edits: monaco.languages.TextEdit[]) {\r\n        for (let i = 0; i < edits.length - 1; i++) {\r\n            let e = edits[i];\r\n            let e1 = edits[i + 1];\r\n            if (e.range.endLineNumber < e1.range.startLineNumber) continue;\r\n            if (e.range.endLineNumber == e1.range.startLineNumber) {\r\n                if (e.range.endColumn >= e1.range.startColumn) {\r\n                    edits.splice(i + 1, 1);\r\n                } else {\r\n                    if (e.range.endColumn == 0 && e.text.length > 0 && e1.range.startColumn == 1 && e1.range.endColumn > e1.range.startColumn && e1.text == \"\") {\r\n                        let delta = e.text.length - (e1.range.endColumn - e1.range.startColumn);\r\n                        if (delta > 0) { \r\n                            e.text = e.text.substr(0, delta);\r\n                            edits.splice(i+1, 1);\r\n                        }\r\n                        else if (delta < 0)\r\n                        { \r\n                            //@ts-ignore\r\n                            e1.range.endColumn = e1.range.startColumn - delta;\r\n                            edits.splice(i, 1);\r\n                            i--;\r\n\r\n                         }\r\n                        else {\r\n                            edits.splice(i, 2);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    provideDocumentFormattingEdits(model: monaco.editor.ITextModel,\r\n        options: monaco.languages.FormattingOptions,\r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n\r\n    format(model: monaco.editor.ITextModel): monaco.languages.TextEdit[] {\r\n\r\n        let edits: monaco.languages.TextEdit[] = [];\r\n\r\n        // if (this.main.currentWorkspace == null || this.main.currentWorkspace.currentlyOpenModule == null) {\r\n        //     return [];\r\n        // }\r\n\r\n        // let text = this.main.monaco_editor.getValue({ preserveBOM: false, lineEnding: \"\\n\" });\r\n\r\n        let text = model.getValue(monaco.editor.EndOfLinePreference.LF);\r\n\r\n        let tokenlist = new Lexer().lex(text).tokens;\r\n\r\n        // let tokenlist = this.main.currentWorkspace.currentlyOpenModule.tokenList;\r\n\r\n        if (tokenlist == null) return [];\r\n\r\n        // TODO:\r\n        // { at the end of line, with one space before; followed only by spaces and \\n\r\n        // indent lines according to { and }\r\n        // Beware: int i[] = { ... }\r\n        // exactly one space before/after binary operators\r\n        // no space after ( and no space before )\r\n        // (   ) -> ()\r\n        // (  ()) -> (())\r\n        // (()  ) -> (())\r\n\r\n        let lastNonSpaceToken: Token = null;\r\n        let indentLevel = 0;\r\n        let tabSize = 3;\r\n        let curlyBracesOpenAtLines: number[] = [];\r\n        let indentLevelAtSwitchStatements: number[] = [];\r\n        let switchHappend: boolean = false;\r\n        let lastTokenWasNewLine: number = 0;\r\n        let roundBracketsOpen: number = 0;\r\n\r\n        for (let i = 0; i < tokenlist.length; i++) {\r\n\r\n            let t = tokenlist[i];\r\n            lastTokenWasNewLine--;\r\n\r\n            switch (t.tt) {\r\n\r\n                case TokenType.leftCurlyBracket:\r\n                    if (switchHappend) {\r\n                        switchHappend = false;\r\n                        indentLevelAtSwitchStatements.push(indentLevel + 2);\r\n                        indentLevel++;\r\n                    }\r\n                    indentLevel++;\r\n                    curlyBracesOpenAtLines.push(t.position.line);\r\n                    if (lastNonSpaceToken != null) {\r\n                        let tt = lastNonSpaceToken.tt;\r\n                        if (tt == TokenType.rightBracket || tt == TokenType.identifier || tt == TokenType.leftRightSquareBracket) {\r\n                            this.replaceBetween(lastNonSpaceToken, t, edits, \" \");\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let token1 = tokenlist[i + 1];\r\n                        if (token1.tt != TokenType.newline && token1.tt != TokenType.space) {\r\n                            this.insertSpaces(edits, token1.position.line, token1.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    if (indentLevelAtSwitchStatements[indentLevelAtSwitchStatements.length - 1] == indentLevel) {\r\n                        indentLevelAtSwitchStatements.pop();\r\n                        indentLevel--;\r\n                        // if(t.position.column >= 3){\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                        // }    \r\n                    }\r\n                    indentLevel--;\r\n                    let openedAtLine = curlyBracesOpenAtLines.pop();\r\n                    if (openedAtLine != null && openedAtLine != t.position.line) {\r\n                        if (lastNonSpaceToken != null && lastNonSpaceToken.position.line == t.position.line) {\r\n                            this.replace(edits, t.position, t.position, \"\\n\" + \" \".repeat(indentLevel * tabSize));\r\n                        }\r\n                    } else {\r\n                        if (i > 0) {\r\n                            let token1 = tokenlist[i - 1];\r\n                            if (token1.tt != TokenType.space && token1.tt != TokenType.newline) {\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    roundBracketsOpen++;\r\n                    if (i < tokenlist.length - 2) {\r\n                        let nextToken1 = tokenlist[i + 1];\r\n                        let nextToken2 = tokenlist[i + 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                            i++;\r\n                            if (nextToken2.tt == TokenType.rightBracket) {\r\n                                i++;\r\n                                roundBracketsOpen--;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt == TokenType.space && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line, lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    roundBracketsOpen--;\r\n                    if (i > 1) {\r\n                        let nextToken1 = tokenlist[i - 1];\r\n                        let nextToken2 = tokenlist[i - 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.newline:\r\n                    lastTokenWasNewLine = 2;\r\n                    if (i < tokenlist.length - 2) {\r\n\r\n                        let lastTokenIsOperator = this.isBinaryOperator(lastNonSpaceToken?.tt);\r\n                        let nextTokenIsOperator = this.isBinaryOperator(this.getNextNonSpaceToken(i, tokenlist).tt);\r\n\r\n                        let beginNextLine = tokenlist[i + 1];\r\n                        let token2 = tokenlist[i + 2];\r\n                        let currentIndentation = 0;\r\n\r\n                        if (beginNextLine.tt == TokenType.newline) {\r\n                            break;\r\n                        }\r\n\r\n                        let delta: number = 0;\r\n                        if (beginNextLine.tt == TokenType.space) {\r\n                            if (token2.tt == TokenType.newline) {\r\n                                break;\r\n                            }\r\n                            currentIndentation = beginNextLine.position.length;\r\n                            i++;\r\n                            if (token2.tt == TokenType.rightCurlyBracket) {\r\n                                delta = -1;\r\n                            }\r\n                        }\r\n\r\n                        if (beginNextLine.tt == TokenType.rightCurlyBracket) {\r\n                            delta = -1;\r\n                            // indentLevel--;\r\n                            // curlyBracesOpenAtLines.pop();\r\n                            // lastNonSpaceToken = beginNextLine;\r\n                            // i++;\r\n                        }\r\n\r\n                        if(nextTokenIsOperator || lastTokenIsOperator) delta = 1;\r\n\r\n                        let il = indentLevel + delta;\r\n                        if(roundBracketsOpen > 0){\r\n                            il++;\r\n                        }\r\n                        if (il < 0) il = 0;\r\n\r\n                        let correctIndentation = il * tabSize;\r\n\r\n                        if (correctIndentation > currentIndentation) {\r\n                            this.insertSpaces(edits, t.position.line + 1, 0, correctIndentation - currentIndentation);\r\n                        } else if (correctIndentation < currentIndentation) {\r\n                            this.deleteSpaces(edits, t.position.line + 1, 0, currentIndentation - correctIndentation);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.space:\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment) {\r\n                            if (i > 0) {\r\n                                let lastToken = tokenlist[i - 1];\r\n                                if (lastToken.tt != TokenType.newline) {\r\n                                    if (t.position.length > 1) {\r\n                                        this.deleteSpaces(edits, t.position.line, t.position.column, t.position.length - 1);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.comma:\r\n                case TokenType.semicolon:\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt != TokenType.newline && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.tt == TokenType.space && lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line,\r\n                                    lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment && nextToken.tt != TokenType.space && nextToken.tt != TokenType.newline) {\r\n                            this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightSquareBracket:\r\n                    if (lastNonSpaceToken != null && lastNonSpaceToken.tt == TokenType.leftSquareBracket) {\r\n                        this.replaceBetween(lastNonSpaceToken, t, edits, \"\");\r\n\r\n                    }\r\n                    break;\r\n\r\n            }\r\n\r\n            // binary operator?\r\n            if (this.isBinaryOperator(t.tt)) {\r\n\r\n                let lowerGeneric = t.tt == TokenType.lower && this.lowerBelongsToGenericExpression(i, tokenlist);\r\n                let greaterGeneric = t.tt == TokenType.greater && this.greaterBelongsToGenericExpression(i, tokenlist);\r\n\r\n                if (lastTokenWasNewLine <= 0 && lastNonSpaceToken != null && [TokenType.leftBracket, TokenType.comma].indexOf(lastNonSpaceToken.tt) < 0) {\r\n\r\n                    if (i > 0) {\r\n                        let tokenBefore = tokenlist[i - 1];\r\n                        let spaces = (lowerGeneric || greaterGeneric) ? 0 : 1;\r\n                        if (tokenBefore.tt == TokenType.space) {\r\n                            if (tokenBefore.position.length != spaces) {\r\n                                this.insertSpaces(edits, tokenBefore.position.line,\r\n                                    tokenBefore.position.column, spaces - tokenBefore.position.length);\r\n                            }\r\n                        } else {\r\n                            if (spaces == 1)\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        let spaces = (lowerGeneric) ? 0 : 1;\r\n                        if (nextToken.tt == TokenType.space) {\r\n                            if (greaterGeneric && i < tokenlist.length - 2 && tokenlist[i + 2].tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (nextToken.position.length != spaces) {\r\n                                this.insertSpaces(edits, nextToken.position.line,\r\n                                    nextToken.position.column, spaces - nextToken.position.length);\r\n                            }\r\n                        } else {\r\n                            if (greaterGeneric && nextToken.tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (spaces == 1) this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            if (t.tt != TokenType.space && t.tt != TokenType.newline) {\r\n                lastNonSpaceToken = t;\r\n            }\r\n\r\n        }\r\n\r\n        this.deleteOverlappingRanges(edits);\r\n\r\n        return edits;\r\n\r\n    }\r\n    getNextNonSpaceToken(currentIndex: number, tokenlist: TokenList):  Token {\r\n\r\n        if(currentIndex == tokenlist.length - 1) return tokenlist[currentIndex];\r\n\r\n        let j = currentIndex + 1;\r\n        while(j < tokenlist.length - 1 && (tokenlist[j].tt == TokenType.space )){\r\n            j++;\r\n        }\r\n        return tokenlist[j];\r\n\r\n    }\r\n\r\n    lowerBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position + 1;\r\n        while (i < tokenlist.length) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.greater) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i++;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    greaterBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position - 1;\r\n        while (i >= 0) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.lower) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i--;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isBinaryOperator(token: TokenType) {\r\n        return token != null && token >= TokenType.modulo && token <= TokenType.equal;\r\n    }\r\n\r\n    private replaceBetween(lastNonSpaceToken: Token, t: Token, edits: monaco.languages.TextEdit[], text: string) {\r\n        let positionFrom = {\r\n            line: lastNonSpaceToken.position.line,\r\n            column: lastNonSpaceToken.position.column + lastNonSpaceToken.position.length\r\n        };\r\n        let positionTo = {\r\n            line: t.position.line,\r\n            column: t.position.column\r\n        };\r\n        if (positionFrom.line != positionTo.line ||\r\n            positionTo.column - positionFrom.column != text.length) {\r\n            this.replace(edits, positionFrom, positionTo, text);\r\n        }\r\n    }\r\n\r\n    deleteSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column + numberOfSpaces + (column == 0 ? 1 : 0),\r\n                endLineNumber: line\r\n            },\r\n            text: \"\"\r\n        });\r\n    }\r\n\r\n    insertSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n\r\n        if (numberOfSpaces < 0) {\r\n            this.deleteSpaces(edits, line, column, -numberOfSpaces);\r\n            return;\r\n        }\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column,\r\n                endLineNumber: line\r\n            },\r\n            text: \" \".repeat(numberOfSpaces)\r\n        });\r\n    }\r\n\r\n    replace(edits: monaco.languages.TextEdit[], positionFrom: { line: number; column: number; }, positionTo: { line: number; column: number; }, text: string) {\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: positionFrom.column,\r\n                startLineNumber: positionFrom.line,\r\n                endColumn: positionTo.column,\r\n                endLineNumber: positionTo.line\r\n            },\r\n            text: text\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","export class WorkerSim {\r\n\r\n    //@ts-ignore\r\n    initsql = initSqlJs({locateFile: (path, scriptDirectory) => \"https://embed.learn-sql.de/include/lib/sql.js/sql-wasm.wasm\"});\r\n    db;\r\n    SQL;\r\n\r\n    onmessage: (event: {data: any}) => void;\r\n\r\n    onError: (event: ErrorEvent) => void;\r\n\r\n    postMessageToClient(message: any) {\r\n        this.onmessage({data: message})\r\n    }\r\n\r\n    postMessage(data: any){\r\n        let that = this;\r\n        if (that.db == null) {\r\n            that.initsql.then((SQL1) => {\r\n                that.SQL = SQL1;\r\n                that.db = createDb(SQL1, undefined);\r\n                that.worker(data);\r\n            }).catch((err) => {\r\n                console.log(err);\r\n                //@ts-ignore\r\n                return that.postMessageToClient({\r\n                    id: this[\"data\"][\"id\"],\r\n                    error: err[\"message\"]\r\n                });\r\n            })\r\n        } else {\r\n            that.worker(data);\r\n        }\r\n    }\r\n\r\n    terminate() {\r\n\r\n    }\r\n\r\n    worker(data: any) {\r\n        var buff; var result;\r\n        var config = data[\"config\"] ? data[\"config\"] : {};\r\n        try {\r\n            switch (data && data[\"action\"]) {\r\n                case \"open\":\r\n                    buff = data[\"buffer\"];\r\n                    this.db = createDb(this.SQL, buff && new Uint8Array(buff));\r\n                    //@ts-ignore\r\n                    return this.postMessageToClient({\r\n                        id: data[\"id\"],\r\n                        ready: true\r\n                    });\r\n                case \"exec\":\r\n                    if (this.db === null) {\r\n                        this.db = createDb(this.SQL, undefined);\r\n                    }\r\n                    if (!data[\"sql\"]) {\r\n                        throw \"exec: Missing query string\";\r\n                    }\r\n                    //@ts-ignore\r\n                    return this.postMessageToClient({\r\n                        id: data[\"id\"],\r\n                        results: this.db.exec(data[\"sql\"], data[\"params\"], config)\r\n                    });\r\n                case \"each\":\r\n                    if (this.db === null) {\r\n                        this.db = createDb(this.SQL, undefined);\r\n                    }\r\n                    var callback = function callback(row) {\r\n                        //@ts-ignore\r\n                        return this.postMessage({\r\n                            id: data[\"id\"],\r\n                            row: row,\r\n                            finished: false\r\n                        });\r\n                    };\r\n                    var done = function done() {\r\n                        //@ts-ignore\r\n                        return this.postMessage({\r\n                            id: data[\"id\"],\r\n                            finished: true\r\n                        });\r\n                    };\r\n                    return this.db.each(data[\"sql\"], data[\"params\"], callback, done, config);\r\n                case \"export\":\r\n                    buff = this.db[\"export\"]();\r\n                    result = {\r\n                        id: data[\"id\"],\r\n                        results: [\r\n                            {\r\n                                buffer: buff\r\n                            }\r\n                        ]\r\n                    };\r\n                    try {\r\n                        //@ts-ignore\r\n                        return this.postMessageToClient(result);\r\n                    } catch (error) {\r\n                        //@ts-ignore\r\n                        return this.postMessageToClient(result);\r\n                    }\r\n                case \"close\":\r\n                    if (this.db) {\r\n                        this.db.close();\r\n                    }\r\n                    //@ts-ignore\r\n                    return this.postMessageToClient({\r\n                        id: data[\"id\"]\r\n                    });\r\n                default:\r\n                    throw new Error(\"Invalid action : \" + (data && data[\"action\"]));\r\n            }\r\n\r\n        } catch (err) {\r\n\r\n            //@ts-ignore\r\n            return this.postMessageToClient({\r\n                id: data[\"id\"],\r\n                error: err[\"message\"]\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import { MainBase } from \"../main/MainBase.js\";\r\nimport { WorkerSim } from \"../sqljs-worker/sqljsWorkerSim.js\";\r\n\r\nexport type DatabaseDumpType = \"binaryUncompressed\" | \"binaryCompressed\" | \"other\";\r\n\r\nexport type DatabaseDirectoryEntry = {\r\n    name: string,\r\n    description: string,\r\n    filename: string\r\n}\r\n\r\nexport type QueryResult = {\r\n    columns: string[],\r\n    values: any[][],\r\n    buffer?: Uint8Array\r\n}\r\n\r\nexport type QuerySuccessCallback = (results: QueryResult[]) => void;\r\nexport type QueryErrorCallback = (error: string) => void;\r\n\r\nexport type ColumnStructure = {\r\n    name: string;\r\n    table: TableStructure;\r\n\r\n    typeLengths?: number[]; // for varchar(5), ...\r\n    completeTypeSQL: string;\r\n\r\n    references?: ColumnStructure;\r\n    referencesRawData?: any[];\r\n    isPrimaryKey: boolean;\r\n    isAutoIncrement: boolean;\r\n\r\n    notNull: boolean;\r\n    defaultValue: string;\r\n\r\n    dumpValueFunction?: (any) => string\r\n}\r\n\r\nexport type TableStructure = {\r\n    name: string;\r\n    size: number;\r\n    columns: ColumnStructure[];\r\n    completeSQL: string;\r\n}\r\n\r\nexport type DatabaseStructure = {\r\n    tables: TableStructure[]\r\n}\r\n\r\n\r\nexport class DatabaseTool {\r\n\r\n    databaseDirectoryEntries: DatabaseDirectoryEntry[] = null;\r\n\r\n    worker: Worker;\r\n\r\n    queryId: number = 0;\r\n\r\n    querySuccessCallbacksMap: Map<number, QuerySuccessCallback> = new Map();\r\n    queryErrorCallbackMap: Map<number, QueryErrorCallback> = new Map();\r\n\r\n    databaseStructure: DatabaseStructure;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    initializeWorker(template: Uint8Array, queries: string[], callbackAfterInitializing?: (errors: string[]) => void,\r\n        callbackAfterRetrievingStructure?: () => void) {\r\n        \r\n        this.main.getWaitOverlay().show('Bitte warten, die Datenbank wird initialisiert...');\r\n        \r\n            if (this.worker != null) {\r\n            this.worker.terminate();\r\n        }\r\n\r\n        let t = performance.now();\r\n\r\n        // console.log(\"Starting worker...\");\r\n\r\n        let url: string = \"js/sqljs-worker/sqljsWorker.js\"\r\n        if(this.main.isEmbedded()){\r\n            //@ts-ignore\r\n            url = window.javaOnlineDir + url;\r\n        }\r\n\r\n        //@ts-ignore\r\n        if(window.jo_doc){\r\n            //@ts-ignore\r\n            this.worker = new WorkerSim();\r\n        } else {\r\n            this.worker = new Worker(url);\r\n        }\r\n        let that = this;\r\n\r\n        let errors: string[] = [];\r\n\r\n        this.worker.onmessage = () => {\r\n            // console.log(\"Database opened (\" + (performance.now() - t)/1000 + \" s)\");\r\n            that.worker.onmessage = event => {\r\n\r\n                // console.log(event.data);\r\n\r\n                let id = event.data.id;\r\n                if (event.data.error == null) {\r\n                    let querySuccessCallback = that.querySuccessCallbacksMap.get(id);\r\n                    if (querySuccessCallback != null) {\r\n                        querySuccessCallback(event.data.results);\r\n                    }\r\n                } else {\r\n                    let queryErrorCallback = that.queryErrorCallbackMap.get(id);\r\n                    if (queryErrorCallback != null) {\r\n                        queryErrorCallback(event.data.error);\r\n                    }\r\n                }\r\n\r\n                // if(event.data.buffer){\r\n                //     console.log(event.data.buffer);\r\n                // }\r\n\r\n\r\n                this.queryErrorCallbackMap.delete(id);\r\n                this.querySuccessCallbacksMap.delete(id);\r\n\r\n            };\r\n\r\n            if(queries == null) queries = [];\r\n            queries = queries.slice();\r\n            queries.unshift(\"PRAGMA foreign_keys = OFF;\")\r\n            queries.push(\"PRAGMA foreign_keys = ON;\")\r\n            let queryCount = queries.length;\r\n\r\n            let execQuery = () => {\r\n                if (queries.length > 0) {\r\n                    this.main.getWaitOverlay().setProgress(`${Math.round((1-queries.length/queryCount)*100) + \" %\"}`)\r\n                    let query = queries.shift();\r\n                    that.executeQuery(query, (result) => {\r\n                        execQuery();\r\n                    }, (error) => {\r\n                        errors.push(\"Error while setting up database: \" + error + \", query: \" + query);\r\n                        console.log({\"error\": \"Error while setting up database: \" + error, \"query\": query});\r\n                        console.log()\r\n                        execQuery();\r\n                    })\r\n                } else {\r\n                    if (callbackAfterInitializing != null) callbackAfterInitializing(errors);\r\n                    that.retrieveDatabaseStructure(() => {\r\n                        // console.log(\"Database structure retrieved (\" + (performance.now() - t)/1000 + \" s)\");\r\n                        if (callbackAfterRetrievingStructure) callbackAfterRetrievingStructure();\r\n                        this.main.getWaitOverlay().hide();\r\n\r\n                    });\r\n                }\r\n            }\r\n\r\n            execQuery();\r\n\r\n            // that.executeQuery(sql, (result) => {\r\n            //     // console.log(\"Template written (\" + (performance.now() - t)/1000 + \" s)\");\r\n\r\n            //     if (callbackAfterInitializing != null) callbackAfterInitializing();\r\n            //     that.retrieveDatabaseStructure(() => {\r\n            //         // console.log(\"Database structure retrieved (\" + (performance.now() - t)/1000 + \" s)\");\r\n            //         if (callbackAfterRetrievingStructure) callbackAfterRetrievingStructure();\r\n            //         jQuery('#bitteWarten').css('display', 'none');\r\n\r\n            //     });\r\n            //     // that.executeQuery(\"select * from test\", (results: QueryResult[]) => {console.log(results)}, (error) => {console.log(\"Error:\" + error)});\r\n            // },\r\n            //     (error) => {\r\n            //         console.log(\"Error while setting up database: \" + error);\r\n            //     });\r\n\r\n            // that.worker.postMessage({\r\n            //     action: \"export\"\r\n            // })\r\n\r\n        };\r\n\r\n        this.worker.onerror = (e) => {\r\n            errors.push(\"Worker error: \" + e.error);\r\n            console.log(\"Worker error: \" + e.error);\r\n        }\r\n\r\n        this.worker.postMessage({\r\n            id: that.queryId++,\r\n            action: \"open\",\r\n            buffer: template, /*Optional. An ArrayBuffer representing an SQLite Database file*/\r\n        });\r\n\r\n    }\r\n\r\n    executeQuery(query: string, successCallback: QuerySuccessCallback, errorCallback: QueryErrorCallback) {\r\n\r\n        let id = this.queryId++;\r\n\r\n        this.querySuccessCallbacksMap.set(id, successCallback);\r\n        this.queryErrorCallbackMap.set(id, errorCallback);\r\n\r\n        this.worker.postMessage({\r\n            id: id,\r\n            action: \"exec\",\r\n            sql: query,\r\n            params: {}\r\n        });\r\n\r\n    }\r\n\r\n    export(successCallback: (buffer: Uint8Array) => void, errorCallback: QueryErrorCallback) {\r\n\r\n        let id = this.queryId++;\r\n\r\n        this.querySuccessCallbacksMap.set(id, (results) => { successCallback(results[0].buffer)  });\r\n        this.queryErrorCallbackMap.set(id, errorCallback);\r\n\r\n        this.worker.postMessage({\r\n            id: id,\r\n            action: \"export\",\r\n            params: {}\r\n        });\r\n\r\n    }\r\n\r\n    \r\n\r\n    getDirectoryEntries(callback: (entries: DatabaseDirectoryEntry[]) => void) {\r\n        if (this.databaseDirectoryEntries != null) {\r\n            callback(this.databaseDirectoryEntries);\r\n        } else {\r\n            jQuery.getJSON(\"assets/databases/directory.json\", function (entries: DatabaseDirectoryEntry[]) {\r\n                callback(entries);\r\n            });\r\n        }\r\n    }\r\n\r\n    retrieveDatabaseStructure(callback: (dbStructure: DatabaseStructure) => void) {\r\n\r\n        /*\r\n            @see https://stackoverflow.com/questions/6460671/sqlite-schema-information-metadata\r\n        */\r\n        let sql = `SELECT name, sql FROM sqlite_master WHERE type='table';`\r\n        let that = this;\r\n\r\n        this.executeQuery(sql, (result) => {\r\n            let sql1 = \"\";\r\n            result[0]?.values?.forEach(value => sql1 += `PRAGMA table_info(${value[0]});\\nPRAGMA foreign_key_list(${value[0]});\\nselect count(*) from ${value[0]};\\n\\n`)\r\n\r\n            if (sql1 != \"\") {\r\n                this.executeQuery(sql1, (result1) => {\r\n                    // console.log(\"DB structure: \");\r\n                    // console.log(result1);\r\n\r\n                    that.databaseStructure = that.parseDatabaseStructure(result, result1)\r\n\r\n                    callback(that.databaseStructure);\r\n\r\n                }, (error) => { console.log(error)});\r\n            } else {\r\n                that.databaseStructure = { tables: [] };\r\n                callback(that.databaseStructure);\r\n            }\r\n\r\n        }, (error) => { console.log(error) });\r\n\r\n\r\n    }\r\n\r\n    parseDatabaseStructure(tables: QueryResult[], columns: QueryResult[]): DatabaseStructure {\r\n        this.databaseStructure = {\r\n            tables: []\r\n        };\r\n\r\n        let tableNameToStructureMap: Map<string, TableStructure> = new Map();\r\n\r\n        let index = 0;\r\n        for (let i = 0; i < tables[0].values.length; i++) {\r\n            let tableName = tables[0].values[i][0];\r\n            let tableSQL = tables[0].values[i][1];\r\n\r\n            let tableStructure: TableStructure = {\r\n                name: tableName,\r\n                size: 0,\r\n                completeSQL: tableSQL,\r\n                columns: []\r\n            }\r\n\r\n            tableNameToStructureMap.set(tableName, tableStructure);\r\n\r\n            this.databaseStructure.tables.push(tableStructure);\r\n\r\n            let columnArray = columns[index].values;\r\n            let foreignKeyList: any[][] = null;\r\n            if (columns.length > index + 1 && columns[index + 1].columns[0] == \"id\") {\r\n                foreignKeyList = columns[index + 1].values;\r\n                index++;\r\n            }\r\n            index++;\r\n            let size: number = columns[index].values[0][0];\r\n            index++;\r\n\r\n            tableStructure.size = size;\r\n\r\n            columnArray.forEach(columnArray1 => {\r\n                let cid: number = columnArray1[0];\r\n                let name: string = columnArray1[1];\r\n                let type: string = columnArray1[2];\r\n                let notNull: boolean = columnArray1[3] == 1;\r\n                let dflt_value: string = columnArray1[4];\r\n                let isPrimaryKey: boolean = columnArray1[5] != 0;\r\n\r\n                let columnStructure: ColumnStructure = {\r\n                    name: name,\r\n                    isPrimaryKey: isPrimaryKey,\r\n                    isAutoIncrement: isPrimaryKey && tableSQL.toLowerCase().indexOf(\"autoincrement\") >= 0,\r\n                    completeTypeSQL: type,\r\n                    table: tableStructure,\r\n                    typeLengths: [],\r\n                    defaultValue: dflt_value,\r\n                    notNull: notNull\r\n                }\r\n                /*\r\n                    columns: (8) [\"id\", \"seq\", \"table\", \"from\", \"to\", \"on_update\", \"on_delete\", \"match\"]\r\n                    values: Array(1)\r\n                    0: (8) [0, 0, \"land\", \"LNR\", \"lnr\", \"NO ACTION\", \"NO ACTION\", \"NONE\"]\r\n                */\r\n\r\n                if (foreignKeyList != null) {\r\n                    let fkInfo: any[] = foreignKeyList.find(foreignKeyInfo => foreignKeyInfo[3].toLocaleLowerCase() == name.toLocaleLowerCase());\r\n                    if (fkInfo != null) {\r\n                        columnStructure.referencesRawData = fkInfo;\r\n                    }\r\n                }\r\n\r\n                tableStructure.columns.push(columnStructure);\r\n\r\n            });\r\n\r\n        }\r\n\r\n        for (let ts of this.databaseStructure.tables) {\r\n            for (let cs of ts.columns) {\r\n                if (cs.referencesRawData != null) {\r\n                    let table = tableNameToStructureMap.get(cs.referencesRawData[2]);\r\n                    // SQlite doesn't remove foreign key references to columns of a dropped table\r\n                    if(table == null) continue;\r\n                    let column = table.columns.find(c => c.name.toLocaleLowerCase() == cs.referencesRawData[4].toLocaleLowerCase());\r\n                    cs.references = column;\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log(this.databaseStructure);\r\n\r\n        return this.databaseStructure;\r\n\r\n    }\r\n\r\n    static getDumpType(dump: Uint8Array): DatabaseDumpType {\r\n\r\n        let sqliteMagicBytes: number[] = [0x53, 0x51, 0x4c, 0x69, 0x74, 0x65];\r\n        let zlibMagicByte: number = 0x78;\r\n\r\n        let found: boolean = true;\r\n        for (let i = 0; i < sqliteMagicBytes.length; i++) {\r\n            if (sqliteMagicBytes[i] != dump[i]) {\r\n                found = false;\r\n                break;\r\n            }\r\n        }\r\n        if (found) return \"binaryUncompressed\";\r\n\r\n        if (dump[0] == zlibMagicByte) return \"binaryCompressed\";\r\n\r\n        return \"other\";\r\n\r\n    }\r\n\r\n\r\n}","import { TokenType } from \"../lexer/Token.js\";\r\nimport { ASTNode, ConstantNode, CreateTableColumnNode, CreateTableNode, ForeignKeyInfo, InsertNode } from \"./AST.js\";\r\nimport { SQLStatement } from \"./Parser.js\";\r\n\r\nexport class StatementCleaner {\r\n\r\n    MaxRowsPerInsert: number = 300;\r\n\r\n    clean(statement: SQLStatement): string {\r\n        switch (statement.ast.type) {\r\n            case TokenType.keywordCreate:   // Create Table statement\r\n                statement.sqlCleaned = this.cleanCreateTableStatement(statement.ast);\r\n                return statement.sqlCleaned;\r\n            case TokenType.keywordInsert:\r\n                if(statement.ast.select != null){\r\n                    return statement.sql;\r\n                } else {\r\n                    statement.sqlCleaned = this.cleanInsertStatement(statement.ast);\r\n                    return statement.sqlCleaned;\r\n                }\r\n            default:\r\n                return statement.sql;\r\n                break;\r\n        }\r\n    }\r\n\r\n    cleanInsertStatement(ast: InsertNode): string {\r\n        let statementHeader: string = `insert into ${ast.table.identifier}`;\r\n\r\n        if (ast.columnList != null && ast.columnList.length > 0) {\r\n            statementHeader += `(${ast.columnList.map(c => this.escapeIdentifier(c.identifier)).join(\", \")})`;\r\n        }\r\n\r\n        statementHeader += '\\nvalues\\n';\r\n\r\n        let st = \"\";\r\n\r\n        let lines: string[] = [];\r\n        if (ast.values != null && ast.values.length > 0) {\r\n            for (let vline of ast.values) {\r\n                lines.push(`\\n(${vline.map(v => this.cleanValue(v)).join(\", \")})`);\r\n            }\r\n            //st += lines.join(\",\\n\");\r\n        }\r\n\r\n        while (lines.length > 0) {\r\n            st += statementHeader;\r\n            st += lines.splice(0, Math.max(this.MaxRowsPerInsert, lines.length)).join(\",\\n\");\r\n            st += \";\\n\";\r\n        }\r\n\r\n        return st;\r\n\r\n    }\r\n\r\n    cleanValue(v: ConstantNode) {\r\n        if (v.constantType == TokenType.stringConstant) {\r\n            let s: string = v.constant;\r\n            s = s.replace(/'/g, \"''\");\r\n            return `'${s}'`;\r\n        } else {\r\n            return v.constant;\r\n        }\r\n    }\r\n\r\n    cleanCreateTableStatement(ast: CreateTableNode): string {\r\n        let st: string = `create table ${ast.ifNotExists ? \" if not exists\" : \"\"} ${this.escapeIdentifier(ast.identifier)}(\\n   `;\r\n\r\n        st += ast.columnList.map(column => this.cleanColumnDef(column)).join(\",\\n   \");\r\n        if (ast.foreignKeyInfoList != null && ast.foreignKeyInfoList.length > 0) {\r\n            st += \",\\n   \" + ast.foreignKeyInfoList.map(fki => this.cleanForeignKeyInfo(fki)).join(\",\\n   \");\r\n        }\r\n\r\n        let pkc = ast.combinedPrimaryKeyColumns.slice().map(s => s.toLocaleLowerCase());\r\n        for (let column of ast.columnList) {\r\n            let c = column.identifier.toLocaleLowerCase();\r\n            if (column.isAutoIncrement && pkc.indexOf(c) >= 0) {\r\n                pkc.splice(pkc.indexOf(c), 1);\r\n            }\r\n        }\r\n\r\n        if (pkc.length > 0) {\r\n            st += `,\\n   primary key(${this.escapeIdentifiers(pkc).join(\", \")})`;\r\n        }\r\n\r\n        if (ast.uniqueConstraints.length > 0) {\r\n            st += \",\\n   \" + ast.uniqueConstraints.map(uk => 'unique(' + this.escapeIdentifiers(uk).join(\", \") + \")\").join(\",\\n   \");\r\n        }\r\n\r\n        st += '\\n);';\r\n\r\n        return st;\r\n    }\r\n\r\n    cleanForeignKeyInfo(fki: ForeignKeyInfo): string {\r\n        let fkiString = `foreign key (${this.escapeIdentifier(fki.column)}) references ${this.escapeIdentifier(fki.referencesTable)}(${this.escapeIdentifier(fki.referencesColumn)})`;\r\n        if (fki.onDelete) {\r\n            fkiString += ` on delete ` + fki.onDelete;\r\n        }\r\n        if (fki.onUpdate) {\r\n            fkiString += ` on update ` + fki.onUpdate;\r\n        }\r\n        return fkiString;\r\n    }\r\n\r\n    cleanColumnDef(column: CreateTableColumnNode): string {\r\n\r\n        let type = column.baseType.toString();\r\n        if (type == \"int\" && column.isAutoIncrement) {\r\n            type = \"integer\";\r\n        }\r\n\r\n        let st: string = `${this.escapeIdentifier(column.identifier)} ${type}`;\r\n        if (column.parameters != null && column.parameters.length > 0 && !column.isAutoIncrement) {\r\n            st += `(${column.parameters.join(\", \")})`;\r\n        }\r\n        if (column.notNull) {\r\n            st += \" not null\";\r\n        }\r\n        if (column.defaultValue != null) {\r\n            st += \" default \" + column.defaultValue;\r\n        }\r\n        if (column.isPrimary || column.isAutoIncrement) {\r\n            st += \" primary key\";\r\n        }\r\n        if (column.isAutoIncrement) {\r\n            st += \" autoincrement\";\r\n        }\r\n        if (column.foreignKeyInfo != null) {\r\n            let fki = column.foreignKeyInfo;\r\n            let c: string = fki.referencesColumn;\r\n            if (fki.referencesTable) c = this.escapeIdentifier(fki.referencesTable) + \"(\" + this.escapeIdentifier(c) + \")\";\r\n            st += \" references \" + c;\r\n        }\r\n        if (column.collate != null) {\r\n            let collate = column.collate.toLocaleLowerCase();\r\n            if ([\"binary\", \"nocase\", \"rtrim\"].indexOf(collate) >= 0) {\r\n                st += \" collate \" + collate;\r\n            }\r\n        }\r\n        let parameters = column.parameters ? column.parameters : [0, 0];\r\n        let checkFunction = column.baseType.checkFunction(this.escapeIdentifier(column.identifier), parameters);\r\n        if (checkFunction != \"\") {\r\n            st += \" \" + checkFunction;\r\n        }\r\n        return st;\r\n    }\r\n\r\n    escapeIdentifier(id: string){\r\n        return '\"' + id + '\"';\r\n    }\r\n\r\n    escapeIdentifiers(list: string[]):string[] {\r\n        return list.map(this.escapeIdentifier);\r\n    }\r\n\r\n}","import { Lexer } from \"../compiler/lexer/Lexer.js\";\r\nimport { TokenType } from \"../compiler/lexer/Token.js\";\r\nimport { AlterTableNode, CreateTableNode, InsertNode } from \"../compiler/parser/AST.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { Parser, SQLStatement } from \"../compiler/parser/Parser.js\";\r\nimport { StatementCleaner } from \"../compiler/parser/StatementCleaner.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { LoadableDatabase } from \"./DatabaseLoader.js\";\r\nimport { DatabaseTool } from \"./DatabaseTools.js\";\r\n\r\nexport class MySqlImporter {\r\n\r\n    private createTableNodes: CreateTableNode[];\r\n    private insertNodes: InsertNode[];\r\n    private tableModifyingNodes: AlterTableNode[];\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    async loadFromUrl(url: string): Promise<LoadableDatabase> {\r\n        if (url == null) return;\r\n\r\n        let text = null;\r\n        if (url.endsWith(\".zip\")) {\r\n            text = await this.unzipURL(url);\r\n        } else {\r\n            text = await (await fetch(url)).text();\r\n        }\r\n\r\n        return this.importFromText(text);\r\n    }\r\n\r\n    async loadFromFile(file: globalThis.File): Promise<LoadableDatabase> {\r\n        if (file == null) return;\r\n\r\n        if (file.name.endsWith(\".zip\")) {\r\n            let text = await this.unzipFile(file);\r\n            return this.importFromText(text);\r\n        } else {\r\n\r\n            return new Promise<LoadableDatabase>(\r\n                (resolve, reject) => {\r\n                    var reader = new FileReader();\r\n                    reader.onload = (event) => {\r\n                        let text = <string>event.target.result;\r\n                        resolve(this.importFromText(text));\r\n                    };\r\n                    reader.readAsText(file);\r\n                }\r\n            )\r\n\r\n\r\n        }\r\n    }\r\n\r\n    async unzipURL(url: string): Promise<string> {\r\n        //@ts-ignore\r\n        const reader = new zip.ZipReader(new zip.HttpReader(url));\r\n        return this.unzipIntern(reader);\r\n    }\r\n\r\n    async unzipFile(file: globalThis.File): Promise<string> {\r\n        // create a BlobReader to read with a ZipReader the zip from a Blob object\r\n        //@ts-ignore\r\n        const reader = new zip.ZipReader(new zip.BlobReader(file));\r\n        return this.unzipIntern(reader);\r\n    }\r\n\r\n    async unzipIntern(reader: any): Promise<string> {\r\n        // get all entries from the zip\r\n        let entries = await reader.getEntries();\r\n        entries = entries.filter(entry => entry.filename.endsWith(\".sql\"))\r\n        let text: string = \"\";\r\n        if (entries.length) {\r\n            for(let entry of entries){\r\n                // get first entry content as text by using a TextWriter\r\n                text += await entry.getData(\r\n                    // writer\r\n                    //@ts-ignore\r\n                    new zip.TextWriter(),\r\n                    // options\r\n                    {\r\n                        onprogress: (index, max) => {\r\n                            // onprogress callback\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        }\r\n\r\n        // close the ZipReader\r\n        await reader.close();\r\n\r\n        return text;\r\n    }\r\n\r\n    private async importFromText(text: string): Promise<LoadableDatabase> {\r\n        if (text == null) return null;\r\n\r\n        let lexer: Lexer = new Lexer();\r\n        let lexOutput = lexer.lex(text);\r\n\r\n        let parser: Parser = new Parser();\r\n        let m: Module = new Module({\r\n            dirty: false,\r\n            name: \"\",\r\n            saved: true,\r\n            student_edited_after_revision: false,\r\n            submitted_date: null,\r\n            text: text,\r\n            text_before_revision: null,\r\n            version: 0\r\n        }, this.main);\r\n        m.tokenList = lexOutput.tokens;\r\n\r\n        parser.parse(m);\r\n\r\n        this.createTableNodes = m.sqlStatements.filter(st => st.ast.type == TokenType.keywordCreate).map(st => <CreateTableNode>st.ast);\r\n        this.insertNodes = m.sqlStatements.filter(st => st.ast.type == TokenType.keywordInsert).map(st => <InsertNode>st.ast);\r\n        this.tableModifyingNodes = m.sqlStatements.filter(st => st.ast.type == TokenType.keywordAlter &&\r\n            (<AlterTableNode>st.ast).kind == \"omittedKind\").map(st => <AlterTableNode>st.ast);\r\n\r\n        for (let tmn of this.tableModifyingNodes) {\r\n            let createTableNode = this.findCreateTableNode(tmn.tableIdentifier);\r\n            if (createTableNode == null) continue;\r\n\r\n            if (tmn.primaryKeys != null) {\r\n                createTableNode.combinedPrimaryKeyColumns = tmn.primaryKeys;\r\n                createTableNode.columnList.forEach(c => c.isPrimary = false);\r\n            }\r\n\r\n            if (tmn.autoIncrementColumn != null) {\r\n                let pcn = this.findCreateTableColumnNode(createTableNode, tmn.autoIncrementColumn);\r\n                if (pcn != null) pcn.isPrimary = true;\r\n            }\r\n\r\n            if (tmn.modifyColumnInfo != null) {\r\n                for (let mci of tmn.modifyColumnInfo) {\r\n                    let mcn = this.findCreateTableColumnNode(createTableNode, mci.identifier);\r\n                    let index = createTableNode.columnList.indexOf(mcn);\r\n                    createTableNode.columnList.splice(index, 1, mci);\r\n                }\r\n            }\r\n\r\n            if (tmn.foreignKeys != null) {\r\n                for (let fk of tmn.foreignKeys) {\r\n                    createTableNode.foreignKeyInfoList.push(fk);\r\n                }\r\n            }\r\n\r\n            if (tmn.indices != null) {\r\n                for (let index of tmn.indices) {\r\n                    m.sqlStatements.push({\r\n                        acceptedBySQLite: true,\r\n                        from: null, to: null, hasErrors: false,\r\n                        ast: {\r\n                            type: TokenType.keywordIndex,\r\n                            columnIdentifier: index.column,\r\n                            indexIdentifier: index.index_name,\r\n                            tableIdentifier: tmn.tableIdentifier,\r\n                            unique: index.unique,\r\n                            position: null, endPosition: null, symbolTable: null\r\n                        },\r\n                        sql: `create ${index.unique ? 'unique ' : ''} index ${index.index_name} on ${tmn.tableIdentifier}(${index.column});`\r\n                    })\r\n                }\r\n            }\r\n        }\r\n\r\n        return this.makeDatabase(m.sqlStatements);\r\n    }\r\n\r\n    private findCreateTableNode(tableIdentifier: string): CreateTableNode {\r\n        tableIdentifier = tableIdentifier.toLocaleLowerCase();\r\n        return this.createTableNodes.find(node => node.identifier.toLocaleLowerCase() == tableIdentifier);\r\n    }\r\n\r\n    private findCreateTableColumnNode(tableNode: CreateTableNode, columnIdentifier: string) {\r\n        columnIdentifier = columnIdentifier.toLocaleLowerCase();\r\n        return tableNode.columnList.find(columnNode => columnNode.identifier.toLocaleLowerCase() == columnIdentifier)\r\n    }\r\n\r\n    private async makeDatabase(statements: SQLStatement[]): Promise<LoadableDatabase> {\r\n\r\n        let statementCleaner: StatementCleaner = new StatementCleaner();\r\n\r\n        let sqlStatements: string[] = statements.filter(st => st.ast.type != TokenType.omittedeStatement)\r\n            .map(st => statementCleaner.clean(st));\r\n        sqlStatements.unshift(\"PRAGMA foreign_keys = OFF;\");\r\n        sqlStatements.push(\"PRAGMA foreign_keys = ON;\")\r\n\r\n        let dbTool = new DatabaseTool(this.main);\r\n\r\n        let promise = new Promise<LoadableDatabase>((resolve, reject) => {\r\n            dbTool.initializeWorker(null, sqlStatements, () => {\r\n                dbTool.export((buffer) => {\r\n                    resolve({\r\n                        binDump: buffer\r\n                    })\r\n                }, (error) => {\r\n                    reject(error);\r\n                })\r\n            });\r\n\r\n        })\r\n\r\n        return promise;\r\n\r\n    }\r\n\r\n\r\n}","import { MainBase } from \"../main/MainBase.js\";\r\nimport { LoadableDatabase } from \"./DatabaseLoader.js\";\r\nimport { DatabaseTool } from \"./DatabaseTools.js\";\r\nimport { downloadFile } from \"./HtmlTools.js\";\r\nimport { MySqlImporter } from \"./MySqlImporter.js\";\r\n\r\nexport class DatabaseImportExport {\r\n\r\n    async loadFromFile(file: globalThis.File, main: MainBase): Promise<LoadableDatabase>{\r\n        let that = this;\r\n        if (file == null) return;\r\n        main.getWaitOverlay().show(\"Lese Datei ein...\");\r\n        if(file.name.endsWith(\".sql\") || file.name.endsWith(\".zip\")){\r\n            let ld = await new MySqlImporter(main).loadFromFile(file);\r\n            main.getWaitOverlay().hide();\r\n            return ld;\r\n        } else {\r\n            var reader = new FileReader();\r\n            return new Promise<LoadableDatabase>((resolve, reject) => {\r\n                reader.onload = (event) => {\r\n                    let ab: ArrayBuffer = <ArrayBuffer>event.target.result;\r\n                    let db: Uint8Array = new Uint8Array(ab);\r\n        \r\n                    //@ts-ignore\r\n                    if(DatabaseTool.getDumpType(db) == \"binaryCompressed\") db = pako.inflate(db);\r\n                    \r\n                    main.getWaitOverlay().hide();\r\n                    resolve({binDump: db});\r\n                };\r\n                reader.readAsArrayBuffer(file);\r\n    \r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    saveToFile(dbTool: DatabaseTool){\r\n        dbTool.export((db) => {\r\n            let filename: string = prompt(\"Bitte geben Sie den Dateinamen ein\", \"datenbank.sqLite\");\r\n            if (filename == null) {\r\n                alert(\"Der Dateiname ist leer, daher wird nichts gespeichert.\");\r\n                return;\r\n            }\r\n            if (!filename.endsWith(\".sqLite\")) filename = filename + \".sqLite\";\r\n            downloadFile(new Blob([db.buffer]), filename, true);\r\n        }, () => {});\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { CreateWorkspaceData, WorkspaceData } from \"../../communication/Data.js\";\r\nimport { DatabaseImportExport } from \"../../tools/DatabaseImportExport.js\";\r\nimport { LoadableDatabase } from \"../../tools/DatabaseLoader.js\";\r\nimport { DatabaseTool } from \"../../tools/DatabaseTools.js\";\r\nimport { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { TemplateUploader } from \"../../tools/TemplateUploader.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionElement } from \"./Accordion.js\";\r\n\r\ntype CreateMode = \"emptyDatabase\" | \"fromTemplate\" | \"useExistingDatabase\" | \"useDumpFile\";\r\n\r\nexport class NewDatabaseDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    database: LoadableDatabase;\r\n\r\n    constructor(private main: Main, private owner_id: number, private path: string[]) {\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Neue Datenbank anlegen</div>\r\n\r\n            <div class=\"jo_ds_settings\">\r\n               <div class=\"jo_ds_settings_caption\">Name der Datenbank:</div><div><input class=\"dialog-input jo_databasename\" value=\"Neue Datenbank\"></input></div>\r\n            </div>\r\n\r\n             <div class=\"jo_tabheadings jo_cdtabheading\">\r\n             <div class=\"jo_tabheading\" data-target=\"jo_createEmptyDatabaseTab\">Leere Datenbank</div>\r\n             <div class=\"jo_tabheading jo_active\" data-target=\"jo_createDatabaseFromTemplateTab\">Von Vorlage kopieren</div>\r\n             <div class=\"jo_tabheading\" data-target=\"jo_createDatabaseUseExistingTab\">Bestehende Datenbank mitnutzen</div>\r\n             <div class=\"jo_tabheading\" data-target=\"jo_createDatabaseUseDumpFile\">Import aus Dumpfile (SQLite- oder MySQL-Format)</div>\r\n             </div>\r\n             <div class=\"jo_tabs\" style=\"width: 100%; margin-top: 10px\">\r\n                 <div class=\"jo_createEmptyDatabaseTab\">\r\n                    <div class=\"jo_createDatabaseDescription\">\r\n                        Erstellt wird eine leere Datenbank.\r\n                    </div>\r\n                 </div>\r\n                 <div class=\"jo_createDatabaseFromTemplateTab jo_active\">\r\n                    <div class=\"jo_ds_settings\">\r\n                       <div class=\"jo_ds_settings_caption\">Vorlage suchen:</div><div><input class=\"dialog-input jo_templatename\"></input></div>\r\n                    </div>\r\n                    <div class=\"jo_scrollable jo_templatelist\"></div>\r\n                 </div>\r\n                <div class=\"jo_createDatabaseUseExistingTab\">\r\n                    <div class=\"jo_createDatabaseDescription\">Wenn Du die Datenbank einer anderen Nutzerin/eines anderen Nutzers mitnutzen möchtest, brauchst Du einen Zugriffscode von ihr/ihm. Er ist unter Datenbank->Einstellungen zu finden.            \r\n                    </div>\r\n                    <div class=\"jo_ds_settings\">\r\n                       <div class=\"jo_ds_settings_caption\">Zugriffscode:</div><div><input class=\"dialog-input jo_databasecodeinput\"></input></div>\r\n                    </div>\r\n                 </div>\r\n                <div class=\"jo_createDatabaseUseDumpFile\">\r\n                    <div class=\"jo_createDatabaseDescription\">Wähle hier die Datei mit dem Datenbank-Dump aus (Endung .sqLite (SQLite-Datenbankdatei) oder .zip (gepackter MySql-Dump) oder .sql (MySql-Dump)):</div>\r\n                    <input type=\"file\" class=\"jo_dumpfile\" name=\"dumpfile\" style=\"padding: 10px\"/>\r\n                    <div class=\"jo_databaseimport_dropzone\" style=\"width: 70vw; margin-left: 10px\">Alternativ: Datei in dieses Feld ziehen</div>\r\n                    <div class=\"jo_databaseimport_ok\"></div>\r\n                 </div>\r\n             </div>\r\n\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_create_database_button\">Datenbank anlegen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        makeTabs(this.$dialog);\r\n\r\n        let $templatelist = jQuery('.jo_templatelist');\r\n        this.main.networkManager.fetchTemplateList((templatelist) => {\r\n            templatelist.forEach(tle => {\r\n\r\n                let $tle = jQuery('<div class=\"jo_templateListEntry\"></div>')\r\n                $tle.append(jQuery(`<div class=\"jo_tle_firstline\">${tle.name} <span class=\"jo_tle_ownername\"> (von ${tle.ownerName})</span></div>`))\r\n                $tle.append(jQuery(`<div class=\"jo_tle_secondline\">${tle.description}</div>`))\r\n                $tle.data('templateId', tle.id);\r\n                $tle.data('name', tle.name);\r\n\r\n                $templatelist.append($tle);\r\n                tle.$tle = <JQuery<HTMLDivElement>>$tle;\r\n\r\n                $tle.on('pointerdown', () => {\r\n                    $templatelist.find('.jo_templateListEntry').removeClass('jo_active');\r\n                    $tle.addClass('jo_active');\r\n                })\r\n\r\n            })\r\n            let $templateName = <JQuery<HTMLInputElement>>jQuery('.jo_templatename');\r\n            $templateName.on('input', () => {\r\n                let s = <string>$templateName.val();\r\n                $templatelist.find('.jo_templateListEntry').hide();\r\n                templatelist.forEach(tle => {\r\n                    let tleString = tle.name + tle.ownerName + (tle.description ? tle.description : \"\");\r\n                    if (tleString.indexOf(s) >= 0) tle.$tle.show();\r\n                })\r\n            })\r\n        })\r\n\r\n        let $dropZone = jQuery('.jo_databaseimport_dropzone');\r\n\r\n        $dropZone.on('dragover', (evt) => {\r\n            evt.stopPropagation();\r\n            evt.preventDefault();\r\n            evt.originalEvent.dataTransfer.dropEffect = 'copy';\r\n        })\r\n        $dropZone.on('drop', (evt) => {\r\n            evt.stopPropagation();\r\n            evt.preventDefault();\r\n\r\n            var files = evt.originalEvent.dataTransfer.files;\r\n            this.importFile(files);\r\n        })\r\n\r\n        let $dumpFileInput = jQuery('.jo_dumpfile');\r\n        $dumpFileInput.on('change', (event) => {\r\n            //@ts-ignore\r\n            var files: FileList = event.originalEvent.target.files;\r\n            this.importFile(files).then(() => {\r\n                $dumpFileInput.val(null);\r\n            });\r\n\r\n        })\r\n\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { this.showMainWindow(); });\r\n        jQuery('#jo_ds_create_database_button').on('click', () => {\r\n            let createMode: CreateMode = \"emptyDatabase\";\r\n            if (jQuery('.jo_createDatabaseFromTemplateTab').hasClass('jo_active')) createMode = \"fromTemplate\";\r\n            if (jQuery('.jo_createDatabaseUseExistingTab').hasClass('jo_active')) createMode = \"useExistingDatabase\";\r\n            if (jQuery('.jo_createDatabaseUseDumpFile').hasClass('jo_active')) createMode = \"useDumpFile\";\r\n\r\n            let workspaceData: CreateWorkspaceData = {\r\n                id: null,\r\n                isFolder: false,\r\n                name: <string>jQuery('.dialog-input.jo_databasename').val(),\r\n                path: this.path.join(\"/\"),\r\n            }\r\n\r\n            switch (createMode) {\r\n                case \"emptyDatabase\":\r\n                    this.createWorkspace(workspaceData);\r\n                    break;\r\n                case \"fromTemplate\":\r\n                    let $template = jQuery('.jo_templateListEntry.jo_active');\r\n                    if ($template.length != 1) {\r\n                        alert('Bitte wählen Sie genau eine Vorlage aus.');\r\n                        return;\r\n                    } else {\r\n                        workspaceData.template_database_id = $template.data('templateId');\r\n                        if (workspaceData.name == \"Neue Datenbank\") workspaceData.name = $template.data('name');\r\n                        this.createWorkspace(workspaceData);\r\n                    }\r\n                    break;\r\n                case \"useExistingDatabase\":\r\n                    let code = <string>jQuery('.jo_databasecodeinput').val();\r\n                    let tIndex = code.indexOf(\"T\");\r\n                    if (tIndex == -1) {\r\n                        alert(\"Der Zugriffscode muss das Zeichen T enthalten.\");\r\n                        return;\r\n                    }\r\n                    workspaceData.otherDatabaseId = Number.parseInt(code.substring(0, tIndex));\r\n                    workspaceData.secret = code.substring(tIndex + 1);\r\n                    this.createWorkspace(workspaceData);\r\n                    break;\r\n                case \"useDumpFile\":\r\n                    if (this.database != null) {\r\n                        new TemplateUploader().uploadCurrentDatabase(-1, this.main, this.database.binDump,\r\n                            \"uploadBaseTemplateForWorkspace\",\r\n                            (response) => {\r\n                            workspaceData.template_id = response.newTemplateId;\r\n                            this.createWorkspace(workspaceData);\r\n                        });\r\n\r\n                    } else {\r\n                        alert('Bitte laden Sie zuerst den Binärdump einer Datenbank hoch.')\r\n                        return;\r\n                    }\r\n                    break;\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    private createWorkspace(workspaceData: CreateWorkspaceData) {\r\n        this.main.networkManager.sendCreateWorkspace(workspaceData, this.owner_id, (error?: string) => {\r\n            if (error != null) { alert(error); return; }\r\n\r\n            let w = this.main.createNewWorkspace(workspaceData.name, this.owner_id);\r\n            w.path = workspaceData.path;\r\n            w.id = workspaceData.id;\r\n            w.sql_history = \"\";\r\n\r\n            let projectExplorer = this.main.projectExplorer;\r\n\r\n            this.main.workspaceList.push(w);\r\n            let accordionElement: AccordionElement = {\r\n                name: workspaceData.name,\r\n                externalElement: w,\r\n                iconClass: \"workspace\",\r\n                isFolder: false,\r\n                path: this.path\r\n            };\r\n\r\n            projectExplorer.workspaceListPanel.addElement(accordionElement, true);\r\n\r\n            w.renderSettingsButton(accordionElement);\r\n\r\n            projectExplorer.workspaceListPanel.sortElements();\r\n            projectExplorer.fileListPanel.sortElements();\r\n\r\n            projectExplorer.setWorkspaceActive(w);\r\n\r\n            this.showMainWindow();\r\n\r\n        });\r\n    }\r\n\r\n    async importFile(files: FileList) {\r\n        let that = this;\r\n        let importer = new DatabaseImportExport();\r\n        let db: LoadableDatabase = await importer.loadFromFile(files[0], this.main)\r\n        let isDatabase: boolean = false;\r\n        let dumpFileType = DatabaseTool.getDumpType(db.binDump);\r\n        if (dumpFileType == \"binaryCompressed\") {\r\n            // @ts-ignore\r\n            let dbUncompressed = pako.inflate(db.binDump);\r\n            if (DatabaseTool.getDumpType(dbUncompressed) == \"binaryUncompressed\") {\r\n                isDatabase = true;\r\n            }\r\n        } else if (DatabaseTool.getDumpType(db.binDump) == \"binaryUncompressed\") {\r\n            //@ts-ignore\r\n            db.binDump = pako.deflate(db.binDump);\r\n            isDatabase = true;\r\n        }\r\n\r\n        if (isDatabase) {\r\n            that.database = db;\r\n            jQuery('.jo_databaseimport_ok').html(\"Die Datenbankdatei wurde erfolgreich von Datei eingelesen. Sie können die Datenbank jetzt durch Klick auf den Button unten erstellen.\");\r\n        } else {\r\n            alert(\"In der Datei befindet sich kein Binärdump einer Datenbank.\");\r\n        }\r\n    }\r\n\r\n    showMainWindow() {\r\n        jQuery('#main').css('visibility', 'visible');\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n    }\r\n\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { PasswordChanger } from \"./UserMenu.js\";\r\nimport { DatabaseSettingsDialog } from \"./DatabaseSettingsDialog.js\";\r\nimport { DatabaseImportExport } from \"../../tools/DatabaseImportExport.js\";\r\nimport { NewDatabaseDialog } from \"./NewDatabaseDialog.js\";\r\n\r\nexport type Action = (identifier: string) => void;\r\n\r\ntype Menu = {\r\n    items: MenuItem[];\r\n    $element?: JQuery<HTMLElement>;\r\n    level?: number;\r\n}\r\n\r\ntype MenuItem = {\r\n    identifier: string;\r\n    $element?: JQuery<HTMLElement>;\r\n    action?: Action;\r\n    link?: string;\r\n    subMenu?: Menu;\r\n}\r\n\r\nexport class MainMenu {\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n\r\n    currentSubmenu: { [level: number]: JQuery<HTMLElement> } = {};\r\n    openSubmenusOnMousemove: boolean = false;\r\n\r\n    initGUI(user: UserData) {\r\n\r\n        let that = this;\r\n        let editor = this.main.getMonacoEditor();\r\n\r\n        let mainMenu: Menu = {\r\n            items: [\r\n                {\r\n                    identifier: \"Datei\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Speichern und Beenden\",\r\n                                action: () => { jQuery('#buttonLogout').trigger(\"click\"); }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Bearbeiten\", subMenu:\r\n                    {\r\n                        items: [\r\n                            { identifier: \"Rückgängig (Strg + z)\", action: () => { editor.trigger(\".\", \"undo\", {}); } },\r\n                            { identifier: \"Wiederholen (Strg + y)\", action: () => { editor.trigger(\".\", \"redo\", {}); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Kopieren (Strg + c)\", action: () => { editor.getAction(\"editor.action.clipboardCopyAction\").run(); } },\r\n                            { identifier: \"Ausschneiden (Strg + x)\", action: () => { editor.getAction(\"editor.action.clipboardCutAction\").run(); } },\r\n                            { identifier: \"Nach oben kopieren (Alt + Shift + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.copyLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten kopieren (Alt + Shift + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.copyLinesDownAction\").run(); } },\r\n                            { identifier: \"Nach oben verschieben (Alt + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.moveLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten verschieben (Alt + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.moveLinesDownAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Suchen... (Strg + f)\", action: () => { editor.getAction(\"actions.find\").run(); } },\r\n                            { identifier: \"Ersetzen... (Strg + h)\", action: () => { editor.getAction(\"editor.action.startFindReplaceAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Aus-/Einkommentieren (Strg + #)\", action: () => { editor.getAction(\"editor.action.commentLine\").run(); } },\r\n                            { identifier: \"Dokument formatieren (Alt + Shift + f)\", action: () => { editor.getAction(\"editor.action.formatDocument\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Finde zugehörige Klammer (Strg + k)\", action: () => { editor.getAction(\"editor.action.jumpToBracket\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Alles zusammenfalten\", action: () => { editor.getAction(\"editor.foldAll\").run(); } },\r\n                            { identifier: \"Alles auffalten\", action: () => { editor.getAction(\"editor.unfoldAll\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Vorschlag auslösen (Strg + Leertaste)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.triggerSuggest\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n                            { identifier: \"Parameterhilfe (Strg + Shift + Leertaste)\", action: () => { editor.getAction(\"editor.action.triggerParameterHints\").run(); } },\r\n                            {\r\n                                identifier: \"Gehe zur Definition (Strg + Click)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.revealDefinition\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Ansicht\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Theme\",\r\n                                subMenu: {\r\n                                    items: [\r\n                                        {\r\n                                            identifier: \"Dark\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"dark\");\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            identifier: \"Light\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"light\");\r\n                                            }\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Hoher Kontrast im Editor ein/aus\", action: () => { editor.getAction(\"editor.action.toggleHighContrast\").run(); } },\r\n\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Zoom out (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(-4); } },\r\n                            { identifier: \"Zoom normal\", action: () => { this.main.editor.setFontSize(14); } },\r\n                            { identifier: \"Zoom in (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(4); } },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Datenbank\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Neue Datenbank anlegen...\", action: () => {\r\n                                    let owner_id: number = that.main.user.id;\r\n                                    if (that.main.workspacesOwnerId != null) {\r\n                                        owner_id = that.main.workspacesOwnerId;\r\n                                    }\r\n\r\n                                    new NewDatabaseDialog(that.main, owner_id, []);\r\n                                }\r\n                            },\r\n                            { identifier: \"Einstellungen...\", action: () => { new DatabaseSettingsDialog(this.main, this.main.currentWorkspace) } },\r\n                            {\r\n                                identifier: \"Export als Binärdump (.sqLite-File)...\", action: () => {\r\n                                    new DatabaseImportExport().saveToFile(this.main.getDatabaseTool());\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n\r\n            ]\r\n        };\r\n\r\n        jQuery('#mainmenu').empty();\r\n        this.initMenu(mainMenu, 0);\r\n    }\r\n\r\n    switchTheme(theme: string) {\r\n        this.main.viewModeController.setTheme(theme);\r\n    }\r\n\r\n    initMenu(menu: Menu, level?: number) {\r\n\r\n        menu.level = level;\r\n\r\n        if (level == 0) {\r\n            menu.$element = jQuery('#mainmenu');\r\n        } else {\r\n            menu.$element = jQuery('<div class=\"jo_submenu\"></div>');\r\n            jQuery('body').append(menu.$element);\r\n        }\r\n\r\n        menu.$element.data('model', menu);\r\n        for (let mi of menu.items) {\r\n            if (mi.identifier == '-') {\r\n                mi.$element = jQuery('<div class=\"jo_menuitemdivider\"></div>');\r\n            } else {\r\n                mi.$element = jQuery('<div>' + mi.identifier + '</div>');\r\n                if (mi.link != null) {\r\n                    let $link = jQuery('<a href=\"' + mi.link + '\" target=\"_blank\" class=\"jo_menulink\"></a>');\r\n                    $link.on(\"mousedown\", (event) => {\r\n                        event.stopPropagation();\r\n                        setTimeout(() => {\r\n                            menu.$element.hide();\r\n                        }, 500);\r\n                    })\r\n                    $link.append(mi.$element);\r\n                    mi.$element = $link;\r\n                }\r\n                if (mi.subMenu != null) {\r\n                    this.initMenu(mi.subMenu, level + 1);\r\n                }\r\n                this.initMenuitemCallbacks(menu, mi);\r\n                if (level == 0) {\r\n                    mi.$element.addClass('jo_mainmenuitem');\r\n                }\r\n            }\r\n            menu.$element.append(mi.$element);\r\n            mi.$element.data('model', mi);\r\n        }\r\n\r\n        let that = this;\r\n        jQuery(document).on('mousedown', () => {\r\n            for (let i = 0; i < 5; i++) {\r\n                if (that.currentSubmenu[i] != null) {\r\n                    that.currentSubmenu[i].hide();\r\n                    that.currentSubmenu[i] = null;\r\n                }\r\n            }\r\n            that.openSubmenusOnMousemove = false;\r\n        });\r\n\r\n    }\r\n\r\n    initMenuitemCallbacks(menu: Menu, mi: MenuItem) {\r\n        let that = this;\r\n\r\n        if (mi.action != null) {\r\n            mi.$element.on('mousedown', (ev) => { mi.action(mi.identifier); });\r\n        }\r\n\r\n        if (mi.subMenu != null) {\r\n            mi.$element.on('mousedown', (ev) => {\r\n                that.opensubmenu(mi);\r\n                that.openSubmenusOnMousemove = true;\r\n                ev.stopPropagation();\r\n            });\r\n\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.openSubmenusOnMousemove) {\r\n                    that.opensubmenu(mi);\r\n                } else {\r\n                    if (that.currentSubmenu[menu.level + 1] != null) {\r\n                        that.currentSubmenu[menu.level + 1].hide();\r\n                        that.currentSubmenu[menu.level + 1] = null;\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.currentSubmenu[menu.level + 1] != null) {\r\n                    that.currentSubmenu[menu.level + 1].hide();\r\n                    that.currentSubmenu[menu.level + 1] = null;\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    opensubmenu(mi: MenuItem) {\r\n\r\n        let subMenu = mi.subMenu;\r\n\r\n        let left: number;\r\n        let top: number;\r\n        if (subMenu.level == 1) {\r\n            left = mi.$element.position().left;\r\n            top = 30;\r\n        } else {\r\n            left = mi.$element.offset().left + mi.$element.width();\r\n            top = mi.$element.offset().top;\r\n        }\r\n\r\n        subMenu.$element.css({\r\n            top: \"\" + top + \"px\",\r\n            left: \"\" + left + \"px\"\r\n        })\r\n\r\n        if (this.currentSubmenu[subMenu.level] != null) {\r\n            this.currentSubmenu[subMenu.level].hide();\r\n        }\r\n\r\n        subMenu.$element.show();\r\n        this.currentSubmenu[subMenu.level] = subMenu.$element;\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { openContextMenu, makeEditable, ContextMenuItem, animateToTransparent, jo_mouseDetected } from \"../../tools/HtmlTools.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { escapeHtml } from \"../../tools/StringTools.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type AccordionElement = {\r\n    name: string;\r\n    sortName?: string;      // if sortName == null, then name will be used when sorting\r\n    externalElement?: any;\r\n    iconClass?: string;\r\n    $htmlFirstLine?: JQuery<HTMLElement>;\r\n    $htmlSecondLine?: JQuery<HTMLElement>;\r\n\r\n    isFolder: boolean;\r\n    path: string[];\r\n}\r\n\r\nexport type AccordionContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: (panel: AccordionElement) => void;\r\n    subMenu?: AccordionContextMenuItem[]\r\n}\r\n\r\nexport class AccordionPanel {\r\n\r\n    elements: AccordionElement[] = [];\r\n\r\n    $captionElement: JQuery<HTMLElement>;\r\n    $buttonNew: JQuery<HTMLElement>;\r\n    $listElement: JQuery<HTMLElement>;\r\n\r\n    private fixed: boolean;\r\n\r\n    dontSortElements: boolean = false;\r\n\r\n    static currentlyDraggedElement: AccordionElement;\r\n    static currentlyDraggedElementKind: string;\r\n\r\n    newFilesElementCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    newDatabaseElementCallback: (path: string[]) => void;\r\n    newFolderCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    renameCallback: (externalElement: any, newName: string) => string;\r\n    deleteCallback: (externalElement: any, callbackIfSuccessful: () => void) => void;\r\n    selectCallback: (externalElement: any) => void;\r\n    addElementActionCallback: (accordionElement: AccordionElement) => JQuery<HTMLElement>;\r\n    contextMenuProvider: (externalElement: any) => AccordionContextMenuItem[];\r\n    moveCallback: (ae: AccordionElement | AccordionElement[]) => void;\r\n    dropElementCallback: (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => void;\r\n\r\n    $newFolderAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private accordion: Accordion, private caption: string, private flexWeight: string,\r\n        private newButtonClass: string, private buttonNewTitle: string,\r\n        private defaultIconClass: string, private withDeleteButton: boolean, private withFolders: boolean,\r\n        private kind: \"workspace\" | \"file\" | \"class\" | \"student\", private enableDrag: boolean, private acceptDropKinds: string[]) {\r\n\r\n        accordion.addPanel(this);\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        if (withFolders) {\r\n            let that = this;\r\n            this.$newFolderAction = jQuery('<div class=\"img_add-folder-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Neuen Ordner auf oberster Ebene anlegen\">');\r\n            this.$newFolderAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                let pathArray: string[] = [];\r\n\r\n                this.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                    this.newFolderCallback(newElement, () => {\r\n                        this.sortElements();\r\n                        newElement.$htmlFirstLine[0].scrollIntoView();\r\n                        animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                    });\r\n                });\r\n\r\n            })\r\n\r\n            this.addAction(this.$newFolderAction);\r\n\r\n\r\n            let $collapseAllAction = jQuery('<div class=\"img_collapse-all-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Alle Ordner zusammenfalten\">');\r\n            $collapseAllAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                that.collapseAll();\r\n\r\n            })\r\n\r\n            this.addAction($collapseAllAction);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    collapseAll() {\r\n        for (let element of this.elements) {\r\n            if (element.isFolder) {\r\n                if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                    element.$htmlFirstLine.removeClass('jo_expanded');\r\n                    element.$htmlFirstLine.addClass('jo_collapsed');\r\n                }\r\n            }\r\n            if (element.path.length > 0) {\r\n                element.$htmlFirstLine.slideUp(200);\r\n            }\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        this.$captionElement.remove();\r\n        this.$listElement.remove();\r\n    }\r\n\r\n    setFixed(fixed: boolean) {\r\n        this.fixed = fixed;\r\n        if (this.fixed) {\r\n            this.grow();\r\n            this.$captionElement.addClass('jo_fixed');\r\n        } else {\r\n            this.$captionElement.removeClass('jo_fixed');\r\n        }\r\n\r\n    }\r\n\r\n    //     <div class=\"jo_leftpanelcaption expanded\" id=\"workspace\" data-panel=\"filelistouter\">\r\n    //     <span>WORKSPACE</span>\r\n    //     <div class=\"jo_actions\"><img id=\"buttonNewFile\" title=\"Neue Datei hinzufügen\"\r\n    //             src=\"assets/projectexplorer/add-file-dark.svg\"></div>\r\n    // </div>\r\n    // <div id=\"filelistouter\" class=\"jo_projectexplorerdiv scrollable\" data-grow=\"3\"\r\n    //     style=\"flex-grow: 3\">\r\n    //     <div id=\"filelist\"></div>\r\n    // </div>\r\n\r\n\r\n    enableNewButton(enabled: boolean) {\r\n        if (this.$buttonNew != null) {\r\n            if (enabled) {\r\n                this.$buttonNew.show();\r\n            } else {\r\n                this.$buttonNew.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    getCurrentlySelectedPath(): string[] {\r\n        let pathArray: string[] = [];\r\n        let selectedElement = this.getSelectedElement();\r\n        if (selectedElement != null) {\r\n            pathArray = selectedElement.path.slice(0);\r\n            if (selectedElement.isFolder) pathArray.push(selectedElement.name);\r\n        }\r\n        return pathArray;\r\n    }\r\n\r\n    compareWithPath(name1: string, path1: string[], isFolder1: boolean, name2: string, path2: string[], isFolder2: boolean) {\r\n\r\n        path1 = path1.slice();\r\n        path1.push(name1);\r\n        name1 = \"\";\r\n\r\n        path2 = path2.slice();\r\n        path2.push(name2);\r\n        name2 = \"\";\r\n\r\n        let i = 0;\r\n        while (i < path1.length && i < path2.length) {\r\n            let cmp = path1[i].localeCompare(path2[i]);\r\n            if (cmp != 0) return cmp;\r\n            i++;\r\n        }\r\n\r\n        if (path1.length < path2.length) return -1;\r\n        if (path1.length > path2.length) return 1;\r\n\r\n        return name1.localeCompare(name2);\r\n\r\n\r\n        // let nameWithPath1 = path1.join(\"/\");\r\n        // if (nameWithPath1 != \"\" && name1 != \"\") nameWithPath1 += \"/\";\r\n        // nameWithPath1 += name1;\r\n\r\n        // let nameWithPath2 = path2.join(\"/\");\r\n        // if (nameWithPath2 != \"\" && name2 != \"\") nameWithPath2 += \"/\";\r\n        // nameWithPath2 += name2;\r\n\r\n        // return nameWithPath1.localeCompare(nameWithPath2);\r\n    }\r\n\r\n\r\n    getElementIndex(name: string, path: string[], isFolder: boolean): number {\r\n\r\n        for (let i = 0; i < this.elements.length; i++) {\r\n            let element = this.elements[i];\r\n\r\n            if (this.compareWithPath(name, path, isFolder, element.name, element.path, element.isFolder) < 0) return i;\r\n\r\n        }\r\n        return this.elements.length;\r\n    }\r\n\r\n    insertElement(ae: AccordionElement) {\r\n        let insertIndex = this.getElementIndex(ae.name, ae.path, ae.isFolder);\r\n        // if (ae.path.length == 0) insertIndex = this.elements.length;\r\n        this.elements.splice(insertIndex, 0, ae);\r\n\r\n        let $elements = this.$listElement.find('.jo_file');\r\n\r\n        if (insertIndex == 0) {\r\n            this.$listElement.prepend(ae.$htmlFirstLine);\r\n        } else if(insertIndex == $elements.length){\r\n            this.$listElement.append(ae.$htmlFirstLine);\r\n        } else {\r\n            let elementAtIndex = $elements.get(insertIndex);\r\n            jQuery(elementAtIndex).before(ae.$htmlFirstLine);\r\n        }\r\n\r\n    }\r\n\r\n    addFolder(name: string, path: string[], callback: (newPanel: AccordionElement) => void) {\r\n\r\n        let ae: AccordionElement = {\r\n            name: name,\r\n            isFolder: true,\r\n            path: path\r\n        }\r\n\r\n        let $element = this.renderElement(ae, true);\r\n\r\n        this.insertElement(ae);\r\n\r\n        $element[0].scrollIntoView();\r\n\r\n        this.renameElement(ae, () => {\r\n\r\n            callback(ae);\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    renderOuterHtmlElements($accordionDiv: JQuery<HTMLElement>) {\r\n        let that = this;\r\n\r\n        this.$captionElement = jQuery(`<div class=\"jo_leftpanelcaption jo_expanded\">\r\n        <div class=\"jo_captiontext\">` + this.caption + `</div><div class=\"jo_actions\"></div></div>`);\r\n\r\n        if (this.newButtonClass != null) {\r\n            this.$buttonNew = jQuery('<div class=\"jo_button jo_active ' + this.newButtonClass + '\" title=\"' + this.buttonNewTitle + '\">');\r\n            this.$captionElement.find('.jo_actions').append(this.$buttonNew);\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n            this.$buttonNew.on(mousePointer + 'down', (ev) => {\r\n\r\n                Helper.close();\r\n                ev.stopPropagation();\r\n\r\n                let path = that.getCurrentlySelectedPath();\r\n\r\n                let ae: AccordionElement = {\r\n                    name: \"Neu\",\r\n                    isFolder: false,\r\n                    path: path\r\n                }\r\n\r\n                let insertIndex = this.getElementIndex(\"\", path, false);\r\n                this.elements.splice(insertIndex, 0, ae);\r\n                let $element = this.renderElement(ae, true);\r\n\r\n\r\n                if (insertIndex == 0) {\r\n                    this.$listElement.prepend($element);\r\n                } else {\r\n                    let elementAtIndex = this.$listElement.find('.jo_file').get(insertIndex - 1);\r\n                    jQuery(elementAtIndex).after($element);\r\n                }\r\n\r\n                $element[0].scrollIntoView();\r\n\r\n                that.renameElement(ae, () => {\r\n\r\n                    that.newFilesElementCallback(ae, (externalElement: any) => {\r\n\r\n                        ae.externalElement = externalElement;\r\n\r\n                        if (ae.$htmlSecondLine != null) {\r\n                            ae.$htmlSecondLine.insertAfter($element);\r\n                        }\r\n\r\n                        if (that.selectCallback != null) that.select(ae.externalElement);\r\n\r\n                    });\r\n\r\n                });\r\n\r\n            });\r\n\r\n        }\r\n\r\n        let $listOuter = jQuery('<div id=\"filelistouter\" class=\"jo_projectexplorerdiv jo_scrollable\" data-grow=\"'\r\n            + this.flexWeight + '\" style=\"flex-grow: ' + this.flexWeight + '\"></div>');\r\n        this.$listElement = jQuery('<div class=\"jo_filelist\"></div>')\r\n\r\n        $listOuter.append(this.$listElement);\r\n\r\n        $accordionDiv.append(this.$captionElement);\r\n        $accordionDiv.append($listOuter);\r\n\r\n        let $ce = this.$captionElement;\r\n        let $li = this.$listElement.parent();\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $ce.on(mousePointer + 'down', (ev) => {\r\n            if (ev.button != 0) {\r\n                return;\r\n            }\r\n\r\n            if (!this.fixed) {\r\n                let targetGrow = $li.data('grow');\r\n                if ($ce.hasClass('jo_expanded')) {\r\n                    if (that.accordion.parts.length > 1) {\r\n                        $li.animate({\r\n                            'flex-grow': 0.001\r\n                        }, 1000, () => { $ce.toggleClass('jo_expanded'); });\r\n                    }\r\n                } else {\r\n                    $ce.toggleClass('jo_expanded');\r\n                    $li.animate({\r\n                        'flex-grow': targetGrow\r\n                    }, 1000);\r\n                }\r\n            }\r\n        });\r\n\r\n        $ce.on('dragover', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                $ce.addClass('jo_file_dragover');\r\n                event.preventDefault();\r\n            }\r\n        })\r\n\r\n        $ce.on('dragleave', (event) => {\r\n            $ce.removeClass('jo_file_dragover');\r\n        })\r\n\r\n        $ce.on('drop', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                event.preventDefault();\r\n                $ce.removeClass('jo_file_dragover');\r\n                let element1 = AccordionPanel.currentlyDraggedElement;\r\n                if (element1 != null) {\r\n                    that.moveElement(element1, null);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    grow() {\r\n        let $li = this.$listElement.parent();\r\n        let targetGrow = $li.data('grow');\r\n        $li.css('flex-grow', targetGrow);\r\n        this.$captionElement.addClass('jo_expanded');\r\n    }\r\n\r\n    addElement(element: AccordionElement, expanded: boolean) {\r\n        // this.elements.push(element);\r\n        // element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        // this.$listElement.prepend(element.$htmlFirstLine);\r\n        element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        this.insertElement(element);\r\n    }\r\n\r\n    sortElements() {\r\n        if (this.dontSortElements) return;\r\n        this.elements.sort((a, b) => {\r\n            let aName = a.sortName ? a.sortName : a.name;\r\n            let bName = b.sortName ? b.sortName : b.name;\r\n\r\n            return this.compareWithPath(aName, a.path, a.isFolder, bName, b.path, b.isFolder);\r\n\r\n        });\r\n        this.elements.forEach((element) => { this.$listElement.append(element.$htmlFirstLine) });\r\n    }\r\n\r\n    setTextAfterFilename(element: AccordionElement, text: string, cssClass: string) {\r\n        if(element == null) return;\r\n        let $div = element.$htmlFirstLine.find('.jo_textAfterName');\r\n        $div.addClass(cssClass);\r\n        $div.html(text);\r\n    }\r\n\r\n    addAction($element: JQuery<HTMLElement>) {\r\n        this.$captionElement.find('.jo_actions').prepend($element);\r\n    }\r\n\r\n    renderElement(element: AccordionElement, expanded: boolean): JQuery<HTMLElement> {\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        let that = this;\r\n\r\n        let expandedCollapsed = \"\";\r\n\r\n        if (element.iconClass == null) element.iconClass = this.defaultIconClass;\r\n        if (element.isFolder) {\r\n            element.iconClass = \"folder\";\r\n            expandedCollapsed = expanded ? \" jo_expanded\" : \" jo_collapsed\";\r\n        }\r\n\r\n        let pathHtml = \"\";\r\n        if (element.path == null) element.path = [];\r\n        for (let i = 0; i < element.path.length; i++) {\r\n            pathHtml += '<div class=\"jo_folderline\"></div>';\r\n        }\r\n\r\n        element.$htmlFirstLine = jQuery(`<div class=\"jo_file jo_${element.iconClass} ${expandedCollapsed}\">\r\n        <div class=\"jo_folderlines\">${pathHtml}</div>\r\n           <div class=\"jo_fileimage\"></div>\r\n           <div class=\"jo_filename\">${escapeHtml(element.name)}</div>\r\n           <div class=\"jo_textAfterName\"></div>\r\n           <div class=\"jo_additionalButtonSettings\"></div>\r\n           ${this.withDeleteButton ? '<div class=\"jo_delete img_delete jo_button jo_active' + (false ? \" jo_delete_always\" : \"\") + '\"></div>' : \"\"}\r\n           ${!jo_mouseDetected ? '<div class=\"jo_settings_button img_ellipsis-dark jo_button jo_active\"></div>' : \"\"}\r\n           </div>`);\r\n\r\n        if (!expanded && element.path.length > 0) {\r\n            element.$htmlFirstLine.hide();\r\n        }\r\n\r\n        if (this.addElementActionCallback != null) {\r\n            let $elementAction = this.addElementActionCallback(element);\r\n            element.$htmlFirstLine.append($elementAction);\r\n        }\r\n\r\n        if (this.withFolders) {\r\n            if (element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            that.moveElement(element1, element);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withFolders || this.enableDrag) {\r\n            let $filedragpart = element.$htmlFirstLine.find('.jo_filename');\r\n            $filedragpart.attr('draggable', 'true');\r\n            $filedragpart.on('dragstart', (event) => {\r\n                AccordionPanel.currentlyDraggedElement = element;\r\n                AccordionPanel.currentlyDraggedElementKind = that.kind;\r\n                event.originalEvent.dataTransfer.effectAllowed = element.isFolder ? \"move\" : \"copyMove\";\r\n            })\r\n        }\r\n\r\n        if (this.acceptDropKinds != null && this.acceptDropKinds.length > 0) {\r\n            if (!element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n\r\n                        if (event.ctrlKey) {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"copy\";\r\n                        } else {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"move\";\r\n                        }\r\n\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            if (that.dropElementCallback != null) that.dropElementCallback(element, element1, event.ctrlKey ? \"copy\" : \"move\");\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        element.$htmlFirstLine.on(mousePointer + 'up', (ev) => {\r\n\r\n            if (ev.button == 0 && that.selectCallback != null) {\r\n                that.selectCallback(element.externalElement);\r\n\r\n                for (let ae of that.elements) {\r\n                    if (ae != element && ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                        ae.$htmlFirstLine.removeClass('jo_active');\r\n                    }\r\n                }\r\n\r\n                element.$htmlFirstLine.addClass('jo_active');\r\n\r\n                if (element.isFolder) {\r\n\r\n                    if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                        element.$htmlFirstLine.removeClass('jo_expanded');\r\n                        element.$htmlFirstLine.addClass('jo_collapsed');\r\n                    } else {\r\n                        element.$htmlFirstLine.addClass('jo_expanded');\r\n                        element.$htmlFirstLine.removeClass('jo_collapsed');\r\n                    }\r\n\r\n                    let pathIsCollapsed: { [path: string]: boolean } = {};\r\n                    for (let e of this.elements) {\r\n                        if (e.isFolder) {\r\n                            let path = e.path.join(\"/\");\r\n                            if (path != \"\") path += \"/\";\r\n                            path += e.name;\r\n                            pathIsCollapsed[path] = e.$htmlFirstLine.hasClass('jo_collapsed');\r\n                            if (pathIsCollapsed[e.path.join(\"/\")]) pathIsCollapsed[path] = true;\r\n                        }\r\n                    }\r\n                    pathIsCollapsed[\"\"] = false;\r\n\r\n                    for (let e of this.elements) {\r\n                        if (pathIsCollapsed[e.path.join(\"/\")]) {\r\n                            e.$htmlFirstLine.slideUp(200);\r\n                        } else {\r\n                            e.$htmlFirstLine.slideDown(200);\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n\r\n        let contextmenuHandler = function (event) {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [];\r\n            if (that.renameCallback != null) {\r\n                contextMenuItems.push({\r\n                    caption: \"Umbenennen\",\r\n                    callback: () => {\r\n                        that.renameElement(element);\r\n                    }\r\n                })\r\n            }\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n            if (element.isFolder) {\r\n                contextMenuItems = contextMenuItems.concat([\r\n                    {\r\n                        caption: \"Neuen Unterordner anlegen (unterhalb '\" + element.name + \"')...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            // that.$newFolderAction.trigger(mousePointer + 'down');\r\n                            let pathArray = that.getCurrentlySelectedPath();\r\n\r\n                            that.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                                that.newFolderCallback(newElement, () => {\r\n                                    that.sortElements();\r\n                                    newElement.$htmlFirstLine[0].scrollIntoView();\r\n                                    animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                                });\r\n                            });\r\n\r\n                        }\r\n                    }, {\r\n                        caption: \"Neue Datenbank...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n\r\n                            that.newDatabaseElementCallback(element.path.concat(element.name));\r\n\r\n                        }\r\n                    }\r\n                ])\r\n            }\r\n\r\n\r\n            if (that.contextMenuProvider != null && !element.isFolder) {\r\n\r\n                for (let cmi of that.contextMenuProvider(element)) {\r\n                    contextMenuItems.push({\r\n                        caption: cmi.caption,\r\n                        callback: () => {\r\n                            cmi.callback(element);\r\n                        },\r\n                        color: cmi.color,\r\n                        subMenu: cmi.subMenu == null ? null : cmi.subMenu.map((mi) => {\r\n                            return {\r\n                                caption: mi.caption,\r\n                                callback: () => {\r\n                                    mi.callback(element);\r\n                                },\r\n                                color: mi.color\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n\r\n            if (contextMenuItems.length > 0) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                openContextMenu(contextMenuItems, event.pageX, event.pageY);\r\n            }\r\n        };\r\n\r\n        element.$htmlFirstLine[0].addEventListener(\"contextmenu\", contextmenuHandler, false);\r\n\r\n        // long press for touch devices\r\n        let pressTimer: number;\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.on('pointerup', () => {\r\n                clearTimeout(pressTimer);\r\n                return false;\r\n            }).on('pointerdown', (event) => {\r\n                pressTimer = window.setTimeout(() => {\r\n                    contextmenuHandler(event);\r\n                }, 500);\r\n                return false;\r\n            });\r\n        }\r\n\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('pointerdown', (e) => {\r\n                contextmenuHandler(e);\r\n            });\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('mousedown click', (e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            });\r\n        }\r\n\r\n        if (that.withDeleteButton) {\r\n\r\n            element.$htmlFirstLine.find('.jo_delete')[0].addEventListener(\"contextmenu\", (event) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n            }, false);\r\n\r\n            element.$htmlFirstLine.find('.jo_delete').on(mousePointer + 'up', (ev) => {\r\n                ev.preventDefault();\r\n                openContextMenu([{\r\n                    caption: \"Abbrechen\",\r\n                    callback: () => {\r\n                        // nothing to do.\r\n                    }\r\n                }, {\r\n                    caption: \"Ich bin mir sicher: löschen!\",\r\n                    color: \"#ff6060\",\r\n                    callback: () => {\r\n\r\n                        if (element.isFolder) {\r\n                            if (that.getChildElements(element).length > 0) {\r\n                                alert('Dieser Ordner kann nicht gelöscht werden, da er nicht leer ist.');\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        that.deleteCallback(element.externalElement, () => {\r\n                            element.$htmlFirstLine.remove();\r\n                            if (element.$htmlSecondLine != null) element.$htmlSecondLine.remove();\r\n                            that.elements.splice(that.elements.indexOf(element), 1);\r\n\r\n                            if (that.selectCallback != null) {\r\n                                if (that.elements.length > 0) {\r\n                                    that.select(that.elements[0].externalElement);\r\n                                } else {\r\n                                    that.select(null);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }], ev.pageX + 2, ev.pageY + 2);\r\n                ev.stopPropagation();\r\n            });\r\n        }\r\n\r\n        return element.$htmlFirstLine;\r\n\r\n    }\r\n\r\n    moveElement(elementToMove: AccordionElement, destinationFolder: AccordionElement) {\r\n        let destinationPath: string[] = destinationFolder == null ? [] : destinationFolder.path.slice(0).concat([destinationFolder.name]);\r\n        if (elementToMove.isFolder) {\r\n            let movedElements: AccordionElement[] = [elementToMove];\r\n\r\n            let sourcePath = elementToMove.path.concat([elementToMove.name]).join(\"/\");\r\n\r\n            if(destinationPath.join('/').indexOf(sourcePath) == 0) return;\r\n\r\n            let oldPathLength = elementToMove.path.length;\r\n            elementToMove.path = destinationPath.slice(0);\r\n\r\n            for (let element of this.elements) {\r\n                if (element.path.join(\"/\").startsWith(sourcePath)) {\r\n                    element.path.splice(0, oldPathLength);\r\n                    element.path = destinationPath.concat(element.path);\r\n                    movedElements.push(element);\r\n                }\r\n            }\r\n\r\n            for (let el of movedElements) {\r\n                el.$htmlFirstLine.remove();\r\n                this.elements.splice(this.elements.indexOf(el), 1);\r\n            }\r\n            for (let el of movedElements) {\r\n                this.renderElement(el, true);\r\n                this.insertElement(el);\r\n            }\r\n\r\n            this.moveCallback(movedElements);\r\n        } else {\r\n            elementToMove.path = destinationPath;\r\n            elementToMove.$htmlFirstLine.remove();\r\n            this.elements.splice(this.elements.indexOf(elementToMove), 1);\r\n            this.renderElement(elementToMove, true);\r\n            this.insertElement(elementToMove);\r\n            this.select(elementToMove.externalElement);\r\n            elementToMove.$htmlFirstLine[0].scrollIntoView();\r\n            this.moveCallback(elementToMove);\r\n        }\r\n    }\r\n\r\n    getChildElements(folder: AccordionElement): AccordionElement[] {\r\n        let path = folder.path.slice(0).concat(folder.name).join(\"/\");\r\n        return this.elements.filter((element) => element.path.join(\"/\").startsWith(path));\r\n    }\r\n\r\n    renameElement(element: AccordionElement, callback?: () => void) {\r\n        let that = this;\r\n        let $div = element.$htmlFirstLine.find('.jo_filename');\r\n        let pointPos = element.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        this.dontSortElements = true;\r\n        makeEditable($div, $div, (newText: string) => {\r\n            if (element.externalElement != null) newText = that.renameCallback(element.externalElement, newText);\r\n            element.name = newText;\r\n            $div.html(element.name);\r\n            if (callback != null) callback();\r\n            that.sortElements();\r\n            $div[0].scrollIntoView();\r\n            this.dontSortElements = false;\r\n        }, selection);\r\n    }\r\n\r\n    select(externalElement: any, invokeCallback: boolean = true, scrollIntoView: boolean = false) {\r\n\r\n        if (externalElement == null) {\r\n            for (let ae1 of this.elements) {\r\n                if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n            }\r\n        } else {\r\n            let ae = this.findElement(externalElement);\r\n\r\n            if (ae != null) {\r\n                for (let ae1 of this.elements) {\r\n                    if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n                }\r\n\r\n                ae.$htmlFirstLine.addClass('jo_active');\r\n                if (scrollIntoView) {\r\n                    let pathString = ae.path.join(\"/\");\r\n                    for (let el of this.elements) {\r\n                        let elPath = el.path.slice(0);\r\n                        if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                            if (el.isFolder) {\r\n                                elPath.push(el.name);\r\n                                if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                                    el.$htmlFirstLine.removeClass(\"jo_collapsed\");\r\n                                    el.$htmlFirstLine.addClass(\"jo_expanded\");\r\n                                }\r\n                            }\r\n                            el.$htmlFirstLine.show();\r\n                        }\r\n\r\n                    }\r\n\r\n                    ae.$htmlFirstLine[0].scrollIntoView();\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (invokeCallback && this.selectCallback != null) this.selectCallback(externalElement);\r\n\r\n    }\r\n\r\n    getPathString(ae: AccordionElement) {\r\n        let ps: string = ae.path.join(\"/\");\r\n        if (ae.isFolder) {\r\n            if (ps != \"\") ps += \"/\";\r\n            ps += ae.name;\r\n        }\r\n        return ps;\r\n    }\r\n\r\n    setElementClass(element: AccordionElement, iconClass: string) {\r\n        if (element != null) {\r\n            element.$htmlFirstLine?.removeClass(\"jo_\" + element.iconClass).addClass(\"jo_\" + iconClass);\r\n            element.iconClass = iconClass;\r\n        }\r\n\r\n    }\r\n\r\n    findElement(externalElement: any): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                return ae;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    removeElement(externalElement: any) {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                ae.$htmlFirstLine.remove();\r\n                if (ae.$htmlSecondLine != null) ae.$htmlSecondLine.remove();\r\n                this.elements.splice(this.elements.indexOf(ae), 1);\r\n\r\n                if (this.selectCallback != null) {\r\n                    if (this.elements.length > 0) {\r\n                        this.select(this.elements[0].externalElement);\r\n                    } else {\r\n                        this.select(null);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.$listElement.empty();\r\n        this.elements = [];\r\n    }\r\n\r\n    setCaption(text: string) {\r\n        this.$captionElement.find('.jo_captiontext').html(text);\r\n    }\r\n\r\n    getSelectedElement(): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                return ae;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class Accordion {\r\n\r\n    parts: AccordionPanel[] = [];\r\n    $html: JQuery<HTMLElement>;\r\n\r\n    constructor(public main: MainBase, $html: JQuery<HTMLElement>) {\r\n        this.$html = $html;\r\n        $html.addClass('jo_leftpanelinner');\r\n    }\r\n\r\n    addPanel(panel: AccordionPanel) {\r\n        panel.renderOuterHtmlElements(this.$html);\r\n        this.parts.push(panel);\r\n    }\r\n\r\n}","import { ClassData, UserData } from \"../../communication/Data.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { isEmptyObject } from \"jquery\";\r\n\r\nexport class DistributeToStudentsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n    studentCount: number = 0;\r\n\r\n    constructor(private classes: ClassData[], private workspace: Workspace, private main: Main){\r\n        this.init();\r\n    }\r\n\r\n    private init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Austeilen eines Workspace an einzelne Schüler/innen</div>\r\n             <div class=\"jo_ds_settings\">\r\n                <div class=\"jo_ds_settings_caption\">Workspace:</div><div class=\"jo_ds_workspacename\">${this.workspace.name}</div>\r\n                <div class=\"jo_ds_settings_caption\">Liste filtern:</div><div class=\"jo_ds_filterdiv\"><input class=\"dialog-input\"></input></div>\r\n             </div>\r\n             <div class=\"jo_ds_student_list jo_scrollable\">\r\n             </div>\r\n             <div class=\"jo_ds_selected_message\"></div>\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_distribute_button\">Austeilen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        let $studentList = jQuery('.jo_ds_student_list');\r\n        let that = this;\r\n\r\n        for(let klass of this.classes){\r\n            for(let student of klass.students){\r\n                let $studentLine = jQuery('<div class=\"jo_ds_student_line\">');\r\n                let $studentClass = jQuery(`<div class=\"jo_ds_student_class\">${klass.name}</div>`);                \r\n                let $studentName = jQuery(`<div class=\"jo_ds_student_name\">${student.rufname} ${student.familienname}</div>`);\r\n                $studentLine.append($studentClass, $studentName);\r\n                $studentList.append($studentLine);\r\n                $studentLine.on('mousedown', () => {\r\n                    $studentLine.toggleClass('jo_active');\r\n                     that.studentCount += $studentLine.hasClass('jo_active') ? 1 : -1;\r\n                     jQuery('.jo_ds_selected_message').text(`${that.studentCount} Schüler/inn/en selektiert`);\r\n                });\r\n                $studentLine.data('student', student);\r\n                $studentLine.data('klass', klass);\r\n            }\r\n        }\r\n\r\n        jQuery('.jo_ds_filterdiv>input').on('input', () => {\r\n            let filterText = <string>jQuery('.jo_ds_filterdiv>input').val();\r\n            if(filterText == null || filterText == \"\"){\r\n                $('.jo_ds_student_line').show();\r\n            } else {\r\n                $('.jo_ds_student_line').each((index, element) => {\r\n                    let $element = jQuery(element);\r\n                    let klass:ClassData = $element.data('klass');\r\n                    let student: UserData = $element.data('student');\r\n                    let text = klass.name + \" \" + student.rufname + \" \" + student.familienname;\r\n                    if(text.indexOf(filterText) >= 0){\r\n                        $element.show();\r\n                    } else {\r\n                        $element.hide();\r\n                    }\r\n                });\r\n\r\n            }\r\n            \r\n        });\r\n\r\n\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { that.close() });\r\n        jQuery('#jo_ds_distribute_button').on('click', () => {that.distributeWorkspace();});\r\n\r\n    }\r\n\r\n    distributeWorkspace() {\r\n\r\n        let student_ids: number[] = [];\r\n        $('.jo_ds_student_line').each((index, element) => {\r\n            let $element = jQuery(element);\r\n            if($element.hasClass('jo_active')){\r\n                let student: UserData = $element.data('student');\r\n                student_ids.push(student.id);\r\n            }\r\n        });\r\n\r\n        this.close();\r\n\r\n        this.main.networkManager.sendDistributeWorkspace(this.workspace, null, student_ids, (error: string) => {\r\n            if (error == null) {\r\n                let networkManager = this.main.networkManager;\r\n                let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                alert(`Der Workspace ${this.workspace.name} wurde an ${student_ids.length} Schüler/innen ausgeteilt. Er wird in maximal ${dt} s bei jedem Schüler ankommen.`);\r\n            } else {\r\n                alert(error);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n    \r\n\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionPanel, Accordion, AccordionElement, AccordionContextMenuItem } from \"./Accordion.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { WorkspaceData, Workspaces, ClassData, CreateWorkspaceData } from \"../../communication/Data.js\";\r\nimport { dateToString } from \"../../tools/StringTools.js\";\r\nimport { DistributeToStudentsDialog } from \"./DistributeToStudentsDialog.js\";\r\nimport { NewDatabaseDialog } from \"./NewDatabaseDialog.js\";\r\n\r\n\r\nexport class ProjectExplorer {\r\n\r\n    programPointerModule: Module = null;\r\n    programPointerPosition: TextPosition;\r\n    programPointerDecoration: string[] = [];\r\n\r\n    accordion: Accordion;\r\n    fileListPanel: AccordionPanel;\r\n    workspaceListPanel: AccordionPanel;\r\n\r\n    $homeAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private $projectexplorerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.accordion = new Accordion(this.main, this.$projectexplorerDiv);\r\n\r\n        this.initFilelistPanel();\r\n\r\n        this.initWorkspacelistPanel();\r\n\r\n    }\r\n\r\n    initFilelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.fileListPanel = new AccordionPanel(this.accordion, \"Kein Workspace gewählt\", \"1\",\r\n            \"img_add-file-dark\", \"Neue Datei...\", \"java\", true, false, \"file\", true, []);\r\n\r\n        this.fileListPanel.newFilesElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                if (that.main.currentWorkspace == null) {\r\n                    alert('Bitte wählen Sie zuerst einen Workspace aus.');\r\n                    return null;\r\n                }\r\n\r\n                let f: File = {\r\n                    name: accordionElement.name,\r\n                    dirty: false,\r\n                    saved: true,\r\n                    text: \"\",\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    panelElement: accordionElement\r\n                };\r\n                let m = new Module(f, that.main);\r\n                let modulStore = that.main.currentWorkspace.moduleStore;\r\n                modulStore.putModule(m);\r\n                that.setModuleActive(m);\r\n                that.main.networkManager.sendCreateFile(m, that.main.currentWorkspace, that.main.workspacesOwnerId,\r\n                    (error: string) => {\r\n                        if (error == null) {\r\n                            successfulNetworkCommunicationCallback(m);\r\n                        } else {\r\n                            alert('Der Server ist nicht erreichbar!');\r\n\r\n                        }\r\n                    });\r\n\r\n            };\r\n\r\n        this.fileListPanel.renameCallback =\r\n            (module: Module, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                let file = module.file;\r\n\r\n                file.name = newName;\r\n                file.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.fileListPanel.deleteCallback =\r\n            (module: Module, callbackIfSuccessful: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.currentWorkspace.moduleStore.removeModule(module);\r\n                        callbackIfSuccessful();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.fileListPanel.contextMenuProvider = (accordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            if (!(that.main.user.is_teacher || that.main.user.is_admin || that.main.user.is_schooladmin)) {\r\n                let module: Module = <Module>accordionElement.externalElement;\r\n                let file = module.file;\r\n\r\n                // if (file.submitted_date == null) {\r\n                //     cmiList.push({\r\n                //         caption: \"Als Hausaufgabe markieren\",\r\n                //         callback: (element: AccordionElement) => {\r\n\r\n                //             let file = (<Module>element.externalElement).file;\r\n                //             file.submitted_date = dateToString(new Date());\r\n                //             file.saved = false;\r\n                //             that.main.networkManager.sendUpdates(null, true);\r\n                //             that.renderHomeworkButton(file);\r\n                //         }\r\n                //     });\r\n                // } else {\r\n                //     cmiList.push({\r\n                //         caption: \"Hausaufgabenmarkierung entfernen\",\r\n                //         callback: (element: AccordionElement) => {\r\n\r\n                //             let file = (<Module>element.externalElement).file;\r\n                //             file.submitted_date = null;\r\n                //             file.saved = false;\r\n                //             that.main.networkManager.sendUpdates(null, true);\r\n                //             that.renderHomeworkButton(file);\r\n\r\n                //         }\r\n                //     });\r\n                // }\r\n\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n\r\n\r\n        this.fileListPanel.selectCallback =\r\n            (module: Module) => {\r\n                that.setModuleActive(module);\r\n            }\r\n\r\n\r\n\r\n    }\r\n\r\n    renderHomeworkButton(file: File) {\r\n        let $buttonDiv = file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonHomework');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_homeworkButton').remove();\r\n\r\n        let klass: string = null;\r\n        let title: string = \"\";\r\n        if (file.submitted_date != null) {\r\n            klass = \"img_homework\";\r\n            title = \"Wurde als Hausaufgabe abgegeben: \" + file.submitted_date\r\n            if (file.text_before_revision) {\r\n                klass = \"img_homework-corrected\";\r\n                title = \"Korrektur liegt vor.\"\r\n            }\r\n        }\r\n\r\n        if (klass != null) {\r\n            let $homeworkButtonDiv = jQuery(`<div class=\"jo_homeworkButton ${klass}\" title=\"${title}\"></div>`);\r\n            $buttonDiv.prepend($homeworkButtonDiv);\r\n            if (klass.indexOf(\"jo_active\") >= 0) {\r\n                $homeworkButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n                $homeworkButtonDiv.on('click', (e) => {\r\n                    e.stopPropagation();\r\n                    // TODO\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initWorkspacelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.workspaceListPanel = new AccordionPanel(this.accordion, \"Datenbanken\", \"3\",\r\n            null, \"Neue Datenbank...\", \"workspace\", true, true, \"workspace\", false, [\"file\"]);\r\n\r\n        let $newWorkspaceAction = jQuery('<div class=\"img_add-database-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Neue Datenbank auf oberster Ordnerebene anlegen\">');\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $newWorkspaceAction.on(mousePointer + 'down', (e) => {\r\n            e.stopPropagation();\r\n\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            new NewDatabaseDialog(that.main, owner_id, this.workspaceListPanel.getCurrentlySelectedPath());\r\n\r\n        })\r\n\r\n        this.workspaceListPanel.addAction($newWorkspaceAction);\r\n        if(this.workspaceListPanel.$buttonNew != null){\r\n            this.workspaceListPanel.$buttonNew.hide();\r\n        }\r\n\r\n        this.workspaceListPanel.newDatabaseElementCallback = (path: string[]) => {\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            new NewDatabaseDialog(that.main, owner_id, path);\r\n\r\n        }\r\n\r\n\r\n        this.workspaceListPanel.renameCallback =\r\n            (workspace: Workspace, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                workspace.name = newName;\r\n                workspace.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.workspaceListPanel.deleteCallback =\r\n            (workspace: Workspace, successfulNetworkCommunicationCallback: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"workspace\", workspace.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.removeWorkspace(workspace);\r\n                        if(!workspace.isFolder){\r\n                            that.fileListPanel.clear();\r\n                            that.main.databaseExplorer.clear();\r\n                            that.main.getResultsetPresenter().clear();\r\n                            that.fileListPanel.enableNewButton(false);\r\n                            that.main.getMonacoEditor().setModel(null);\r\n                        }\r\n                        successfulNetworkCommunicationCallback();\r\n                    } else {\r\n                        alert('Fehler: ' + error);\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.workspaceListPanel.selectCallback =\r\n            (workspace: Workspace) => {\r\n                if(workspace.isFolder) return;\r\n                if (workspace != this.main.currentWorkspace) {\r\n                    that.main.networkManager.sendUpdates(() => {\r\n                        that.setWorkspaceActive(workspace);\r\n                    });\r\n                }\r\n            }\r\n\r\n        this.workspaceListPanel.newFolderCallback = (newElement: AccordionElement, successCallback) => {\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            let folder: Workspace = new Workspace(newElement.name, that.main, owner_id);\r\n            folder.isFolder = true;\r\n\r\n            folder.path = newElement.path.join(\"/\");\r\n            folder.panelElement = newElement;\r\n            newElement.externalElement = folder;\r\n            that.main.workspaceList.push(folder);\r\n\r\n            let wd: CreateWorkspaceData = {\r\n                id: -1,\r\n                isFolder: true,\r\n                name: folder.name,\r\n                path: folder.path\r\n            }\r\n\r\n            that.main.networkManager.sendCreateWorkspace(wd, that.main.workspacesOwnerId, (error: string) => {\r\n                if (error == null) {\r\n                    folder.id = wd.id;\r\n                    successCallback(folder);\r\n\r\n                } else {\r\n                    alert(\"Fehler: \" + error);\r\n                    that.workspaceListPanel.removeElement(newElement);\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        this.workspaceListPanel.moveCallback = (ae: AccordionElement | AccordionElement[]) => {\r\n            if (!Array.isArray(ae)) ae = [ae];\r\n            for (let a of ae) {\r\n                let ws: Workspace = a.externalElement;\r\n                ws.path = a.path.join(\"/\");\r\n                ws.saved = false;\r\n            }\r\n            this.main.networkManager.sendUpdates();\r\n        }\r\n\r\n        this.workspaceListPanel.dropElementCallback = (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => {\r\n            let workspace: Workspace = dest.externalElement;\r\n            let module: Module = droppedElement.externalElement;\r\n\r\n            if (workspace.moduleStore.getModules(false).indexOf(module) >= 0) return; // module is already in destination workspace\r\n\r\n            let f: File = {\r\n                name: module.file.name,\r\n                dirty: true,\r\n                saved: false,\r\n                text: module.file.text,\r\n                text_before_revision: null,\r\n                submitted_date: null,\r\n                student_edited_after_revision: false,\r\n                version: module.file.version,\r\n                panelElement: null\r\n            };\r\n\r\n            if (dropEffekt == \"move\") {\r\n                // move file\r\n                let oldWorkspace = that.main.currentWorkspace;\r\n                oldWorkspace.moduleStore.removeModule(module);\r\n                that.fileListPanel.removeElement(module);\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, () => { });\r\n            }\r\n\r\n            let m = new Module(f, that.main);\r\n            let modulStore = workspace.moduleStore;\r\n            modulStore.putModule(m);\r\n            that.main.networkManager.sendCreateFile(m, workspace, that.main.workspacesOwnerId,\r\n                (error: string) => {\r\n                    if (error == null) {\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n\r\n        }\r\n\r\n\r\n\r\n        this.$homeAction = jQuery('<div class=\"img_home-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Meine eigenen Workspaces anzeigen\">');\r\n\r\n        this.$homeAction.on(mousePointer +'down', (e) => {\r\n            e.stopPropagation();\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n                that.onHomeButtonClicked();\r\n            });\r\n\r\n            that.main.bottomDiv.hideHomeworkTab();\r\n\r\n        })\r\n\r\n        this.workspaceListPanel.addAction(this.$homeAction);\r\n        this.$homeAction.hide();\r\n\r\n        this.workspaceListPanel.contextMenuProvider = (workspaceAccordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            if (this.main.user.is_teacher && this.main.teacherExplorer.classPanel.elements.length > 0) {\r\n                cmiList.push({\r\n                    caption: \"An Klasse austeilen...\",\r\n                    callback: (element: AccordionElement) => { },\r\n                    subMenu: this.main.teacherExplorer.classPanel.elements.map((ae) => {\r\n                        return {\r\n                            caption: ae.name,\r\n                            callback: (element: AccordionElement) => {\r\n                                let klasse = <any>ae.externalElement;\r\n\r\n                                let workspace: Workspace = element.externalElement;\r\n\r\n                                this.main.networkManager.sendDistributeWorkspace(workspace, klasse, null, (error: string) => {\r\n                                    if (error == null) {\r\n                                        let networkManager = this.main.networkManager;\r\n                                        let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                                        alert(\"Der Workspace \" + workspace.name + \" wurde an die Klasse \" + klasse.name + \" ausgeteilt. Er wird in maximal \" +\r\n                                            dt + \" s bei jedem Schüler ankommen.\");\r\n                                    } else {\r\n                                        alert(error);\r\n                                    }\r\n                                });\r\n\r\n                            }\r\n                        }\r\n                    })\r\n                },\r\n                    {\r\n                        caption: \"An einzelne Schüler/innen austeilen...\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let classes: ClassData[] = this.main.teacherExplorer.classPanel.elements.map(ae => ae.externalElement);\r\n                            let workspace: Workspace = element.externalElement;\r\n                            new DistributeToStudentsDialog(classes, workspace, this.main);\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n    }\r\n\r\n    onHomeButtonClicked() {\r\n        this.main.teacherExplorer.restoreOwnWorkspaces();\r\n        this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.ownUpdateFrequencyInSeconds;\r\n        this.$homeAction.hide();\r\n        this.fileListPanel.enableNewButton(this.main.workspaceList.length > 0);\r\n    }\r\n\r\n    renderFiles(workspace: Workspace) {\r\n\r\n        let name = workspace == null ? \"Kein Workspace vorhanden\" : workspace.name;\r\n\r\n        this.fileListPanel.setCaption(name);\r\n        this.fileListPanel.clear();\r\n\r\n        if (this.main.getCurrentWorkspace() != null) {\r\n            for (let module of this.main.getCurrentWorkspace().moduleStore.getModules(false)) {\r\n                module.file.panelElement = null;\r\n            }\r\n        }\r\n\r\n        if (workspace != null) {\r\n            let moduleList: Module[] = [];\r\n\r\n            for (let m of workspace.moduleStore.getModules(false)) {\r\n                moduleList.push(m);\r\n            }\r\n\r\n            moduleList.sort((a, b) => { return a.file.name > b.file.name ? 1 : a.file.name < b.file.name ? -1 : 0 });\r\n\r\n            for (let m of moduleList) {\r\n\r\n                m.file.panelElement = {\r\n                    name: m.file.name,\r\n                    externalElement: m,\r\n                    isFolder: false,\r\n                    path: []\r\n                };\r\n\r\n                this.fileListPanel.addElement(m.file.panelElement, true);\r\n                this.renderHomeworkButton(m.file);\r\n            }\r\n\r\n            this.fileListPanel.sortElements();\r\n\r\n        }\r\n    }\r\n\r\n    renderWorkspaces(workspaceList: Workspace[]) {\r\n\r\n        this.fileListPanel.clear();\r\n        this.workspaceListPanel.clear();\r\n\r\n        for (let w of workspaceList) {\r\n            let path = w.path.split(\"/\");\r\n            if (path.length == 1 && path[0] == \"\") path = [];\r\n            w.panelElement = {\r\n                name: w.name,\r\n                externalElement: w,\r\n                iconClass: 'workspace',\r\n                isFolder: w.isFolder,\r\n                path: path\r\n            };\r\n\r\n            this.workspaceListPanel.addElement(w.panelElement, false);\r\n            w.renderSettingsButton(w.panelElement);\r\n        }\r\n\r\n        this.workspaceListPanel.sortElements();\r\n        this.fileListPanel.enableNewButton(workspaceList.length > 0);\r\n\r\n\r\n\r\n    }\r\n\r\n    renderErrorCount(workspace: Workspace, errorCountMap: Map<Module, number>) {\r\n        if (errorCountMap == null) return;\r\n        for (let m of workspace.moduleStore.getModules(false)) {\r\n            let errorCount: number = errorCountMap.get(m);\r\n            let errorCountS: string = ((errorCount == null || errorCount == 0) ? \"\" : \"(\" + errorCount + \")\");\r\n\r\n            this.fileListPanel.setTextAfterFilename(m.file.panelElement, errorCountS, 'jo_errorcount');\r\n        }\r\n    }\r\n\r\n    setWorkspaceActive(w: Workspace, callback?: () => void, scrollIntoView: boolean = false) {\r\n\r\n        if(w == this.main.getCurrentWorkspace()){\r\n            if(callback != null) callback();\r\n            return;\r\n        }\r\n\r\n        if (w != null) {\r\n            this.fileListPanel.$buttonNew.show();\r\n        }\r\n\r\n        this.workspaceListPanel.select(w, false, scrollIntoView);\r\n\r\n        let callbackAfterDatabaseFetched = (error: string) => {this.initializeDatabaseTool(error, w, callback)};\r\n\r\n        if (w.database == null) {\r\n            this.main.waitOverlay.show(\"Bitte warten, hole Datenbank vom Server ...\");\r\n\r\n            this.main.networkManager.fetchDatabase(w, callbackAfterDatabaseFetched);\r\n        } else {\r\n            callbackAfterDatabaseFetched(null);\r\n        }\r\n\r\n    }\r\n\r\n    initializeDatabaseTool(error: string, w: Workspace, callback?: () => void) {\r\n        if (error != null) {\r\n            alert(error);\r\n            return;\r\n        }\r\n\r\n        let dbTool = this.main.getDatabaseTool();\r\n\r\n        let statements: string[] = w.database.statements;\r\n        if (statements == null) statements = [];\r\n\r\n        dbTool.initializeWorker(w.database.templateDump, statements,\r\n            () => {\r\n                this.main.currentWorkspace = w;\r\n\r\n                if (this.main.user.id == w.owner_id) {\r\n                    this.main.user.currentWorkspace_id = w.id;\r\n                }\r\n\r\n                this.renderFiles(w);\r\n\r\n                if (w != null) {\r\n                    let nonSystemModules = w.moduleStore.getModules(false);\r\n\r\n                    if (w.currentlyOpenModule != null) {\r\n                        this.setModuleActive(w.currentlyOpenModule);\r\n                    } else if (nonSystemModules.length > 0) {\r\n                        this.setModuleActive(nonSystemModules[0]);\r\n                    } else {\r\n                        this.setModuleActive(null);\r\n                    }\r\n\r\n                    for (let m of nonSystemModules) {\r\n                        m.file.dirty = true;\r\n                    }\r\n\r\n                    if (nonSystemModules.length == 0) {\r\n\r\n                        Helper.showHelper(\"newSQLFileHelper\", this.main, this.fileListPanel.$captionElement);\r\n\r\n                    }\r\n\r\n                    this.main.notifier.connect(w);\r\n\r\n                } else {\r\n                    this.setModuleActive(null);\r\n                }\r\n\r\n            },\r\n            () => {\r\n                this.main.databaseExplorer.refreshAfterRetrievingDBStructure();\r\n                this.main.getHistoryViewer().clearAndShowStatements(w.database.statements);\r\n                if(callback != null) callback();\r\n            });\r\n\r\n    }\r\n\r\n    writeEditorTextToFile() {\r\n        let cem = this.getCurrentlyEditedModule();\r\n        if (cem != null)\r\n            cem.file.text = cem.getProgramTextFromMonacoModel(); // 29.03. this.main.monaco.getValue();\r\n    }\r\n\r\n\r\n    lastOpenModule: Module = null;\r\n    setModuleActive(m: Module) {\r\n\r\n        this.main.bottomDiv.homeworkManager.hideRevision();\r\n\r\n        if (this.lastOpenModule != null) {\r\n            this.lastOpenModule.file.text = this.lastOpenModule.getProgramTextFromMonacoModel(); // this.main.monaco.getValue();\r\n            this.lastOpenModule.editorState = this.main.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (m == null) {\r\n            this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n        } else {\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.main.getMonacoEditor().setModel(m.model);\r\n            if (this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(m.bracketError);\r\n\r\n            if (m.file.text_before_revision != null) {\r\n                this.main.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n            } else {\r\n                this.main.bottomDiv.homeworkManager.hideHomeworkRevisionButton();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setActiveAfterExternalModelSet(m: Module) {\r\n        this.fileListPanel.select(m, false);\r\n\r\n        this.lastOpenModule = m;\r\n\r\n        if (m.editorState != null) {\r\n            this.main.editor.dontPushNextCursorMove++;\r\n            this.main.getMonacoEditor().restoreViewState(m.editorState);\r\n            this.main.editor.dontPushNextCursorMove--;\r\n        }\r\n\r\n        this.setCurrentlyEditedModule(m);\r\n\r\n        this.showProgramPointer();\r\n\r\n        setTimeout(() => {\r\n            if (!this.main.getMonacoEditor().getOptions().get(monaco.editor.EditorOption.readOnly)) {\r\n                this.main.getMonacoEditor().focus();\r\n            }\r\n        }, 300);\r\n\r\n    }\r\n\r\n\r\n    private showProgramPointer() {\r\n\r\n        if (this.programPointerModule == this.getCurrentlyEditedModule() && this.getCurrentlyEditedModule() != null) {\r\n            let position = this.programPointerPosition;\r\n            let range = {\r\n                startColumn: position.column, startLineNumber: position.line,\r\n                endColumn: position.column + position.length, endLineNumber: position.line\r\n            };\r\n\r\n            this.main.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n            this.programPointerDecoration = this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n                {\r\n                    range: range,\r\n                    options: {\r\n                        className: 'jo_revealProgramPointer', isWholeLine: true,\r\n                        overviewRuler: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.OverviewRulerLane.Center\r\n                        },\r\n                        minimap: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    range: range,\r\n                    options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n                }\r\n            ]);\r\n\r\n        }\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        // console statement execution:\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        let module = this.main.currentWorkspace.moduleStore.findModuleByFile(file);\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        this.programPointerModule = module;\r\n        this.programPointerPosition = position;\r\n\r\n        if (module != this.getCurrentlyEditedModule()) {\r\n            this.setModuleActive(module);\r\n        } else {\r\n            this.showProgramPointer();\r\n        }\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws == null) return null;\r\n\r\n        return ws.currentlyOpenModule;\r\n    }\r\n\r\n    setCurrentlyEditedModule(m: Module) {\r\n        if (m == null) return;\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws.currentlyOpenModule != m) {\r\n            ws.currentlyOpenModule = m;\r\n            ws.saved = false;\r\n            m.file.dirty = true;\r\n        }\r\n    }\r\n\r\n    setExplorerColor(color: string) {\r\n        let caption: string;\r\n\r\n        if (color == null) {\r\n            color = \"transparent\";\r\n            caption = \"Meine Datenbanken\";\r\n        } else {\r\n            caption = \"Schüler-DB\";\r\n        }\r\n\r\n        this.fileListPanel.$listElement.parent().css('background-color', color);\r\n        this.workspaceListPanel.$listElement.parent().css('background-color', color);\r\n\r\n        this.workspaceListPanel.setCaption(caption);\r\n    }\r\n\r\n    getNewModule(file: File): Module {\r\n        return new Module(file, this.main);\r\n    }\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class RightDiv {\r\n\r\n    isWholePage: boolean = false;\r\n\r\n    $tabs: JQuery<HTMLElement>;\r\n    $headings: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $rightDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$tabs = $rightDiv.find('.jo_tabs');\r\n        this.$headings = $rightDiv.find('.jo_tabheadings');\r\n        \r\n        let withClassDiagram = this.$headings.find('.jo_classDiagramTabHeading').length > 0;\r\n        let withObjectDiagram = this.$headings.find('.jo_objectDiagramTabHeading').length > 0;\r\n\r\n        let that = this;\r\n        let rightdiv_width: string = \"100%\";\r\n        $rightDiv.find('.jo_whole-window').on(\"click\", () => {\r\n\r\n            that.isWholePage = !that.isWholePage;\r\n            \r\n            let $wholeWindow = jQuery('.jo_whole-window');\r\n\r\n            if (!that.isWholePage) {\r\n                jQuery('#code').css('display', 'flex');\r\n                jQuery('#rightdiv').css('width', rightdiv_width);\r\n                // jQuery('#run').css('width', '');\r\n                $wholeWindow.removeClass('img_whole-window-back');\r\n                $wholeWindow.addClass('img_whole-window');\r\n                jQuery('#controls').insertAfter(jQuery('#view-mode'));\r\n                $wholeWindow.attr('title', 'Auf Fenstergröße vergrößern');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            } else {\r\n                jQuery('#code').css('display', 'none');\r\n                rightdiv_width = jQuery('#rightdiv').css('width');\r\n                jQuery('#rightdiv').css('width', '100%');\r\n                $wholeWindow.removeClass('img_whole-window');\r\n                $wholeWindow.addClass('img_whole-window-back');\r\n                // that.adjustWidthToWorld();\r\n                jQuery('.jo_control-container').append(jQuery('#controls'));\r\n                $wholeWindow.attr('title', 'Auf normale Größe zurückführen');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$rightDiv);\r\n    }\r\n\r\n\r\n\r\n}","import { jo_mouseDetected } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\nexport class Sliders {\r\n\r\n    main: Main;\r\n\r\n    constructor(main: Main) {\r\n        this.main = main;\r\n    }\r\n\r\n    initSliders() {\r\n        let that = this;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        jQuery('#slider1').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider1\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                \r\n                that.moveLeftPanel(dx);\r\n\r\n                x = mm.clientX;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider1\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider1\");\r\n                jQuery(document).off(mousePointer + \"up.slider1\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider2').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider2\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n\r\n                that.moveBottomDiv(dy);\r\n\r\n                y = mm.clientY;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider2\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider2\");\r\n                jQuery(document).off(mousePointer + \"up.slider2\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider3').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider3\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n\r\n                that.moveRightDiv(dx);\r\n\r\n                x = mm.clientX;\r\n                mm.stopPropagation();\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider3\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider3\");\r\n                jQuery(document).off(mousePointer + \"up.slider3\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        let sliderknobLeft = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"left: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobLeft);\r\n        sliderknobLeft.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopImmediatePropagation();\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobleft\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopImmediatePropagation();\r\n\r\n                that.moveLeftPanel(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobleft\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobleft\");\r\n                jQuery(document).off(mousePointer + \"up.knobleft\");\r\n            });\r\n\r\n        });\r\n\r\n        let sliderknobRight = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"right: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobRight);\r\n        sliderknobRight.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopImmediatePropagation();\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobright\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopImmediatePropagation();\r\n\r\n                that.moveRightDiv(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobright\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobright\");\r\n                jQuery(document).off(mousePointer + \"up.knobright\");\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n    \r\n    moveRightDiv(dx: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $rightDiv = jQuery('#rightdiv');\r\n\r\n        let width = Number.parseInt($rightDiv.css('width').replace('px', ''));\r\n        $rightDiv.css('width', (width - dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth + dx) + \"px\");\r\n        \r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n        jQuery('.jo_graphics').trigger('sizeChanged');\r\n        width += dx;\r\n}\r\n    moveBottomDiv(dy: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $bottomDiv = jQuery('#bottomdiv-outer');\r\n\r\n        let height = Number.parseInt($bottomDiv.css('height').replace('px', ''));\r\n        $bottomDiv.css('height', (height - dy) + \"px\");\r\n\r\n        let meheight = Number.parseInt($editor.css('height').replace('px', ''));\r\n        $editor.css('height', (meheight + dy) + \"px\");\r\n\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n}\r\n\r\n    moveLeftPanel(dx: number) {\r\n        let $leftPanel = jQuery('#leftpanel');\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n\r\n        let width = Number.parseInt($leftPanel.css('width').replace('px', ''));\r\n        $leftPanel.css('width', (width + dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth - dx) + \"px\");\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionPanel, AccordionElement } from \"./Accordion.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassData, UserData, CRUDUserRequest, CRUDClassRequest, GetWorkspacesResponse, GetWorkspacesRequest, Workspaces } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\nexport class TeacherExplorer {\r\n\r\n    studentPanel: AccordionPanel;\r\n    classPanel: AccordionPanel;\r\n\r\n    // save them here when displaying pupils workspaces:\r\n    ownWorkspaces: Workspace[];\r\n    currentOwnWorkspace: Workspace;\r\n\r\n    constructor(private main: Main, private classData: ClassData[]) {\r\n\r\n    }\r\n\r\n    removePanels() {\r\n        this.classPanel.remove();\r\n        this.studentPanel.remove();\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.initStudentPanel();\r\n\r\n        this.initClassPanel();\r\n\r\n        this.renderClasses(this.classData);\r\n\r\n    }\r\n\r\n    initStudentPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.studentPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Schüler/innen\", \"2\", null,\r\n            \"\", \"student\", false, false, \"student\", false, []);\r\n\r\n        this.studentPanel.selectCallback = (ae: UserData) => {\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let request: GetWorkspacesRequest = {\r\n                    ws_userId: ae.id,\r\n                    userId: this.main.user.id,\r\n                    language: 1\r\n                }\r\n\r\n                ajax(\"getWorkspaces\", request, (response: GetWorkspacesResponse) => {\r\n                    if (response.success == true) {\r\n\r\n                        if (that.main.workspacesOwnerId == that.main.user.id) {\r\n                            that.ownWorkspaces = that.main.workspaceList.slice();\r\n                            that.currentOwnWorkspace = that.main.currentWorkspace;\r\n                        }\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces);\r\n                        that.main.workspacesOwnerId = ae.id;\r\n                        that.main.projectExplorer.setExplorerColor(\"rgba(255, 0, 0, 0.2\");\r\n                        that.main.projectExplorer.$homeAction.show();\r\n                        Helper.showHelper(\"homeButtonHelper\", this.main);\r\n\r\n                        that.main.bottomDiv.showHomeworkTab();\r\n                        that.main.bottomDiv.homeworkManager.attachToWorkspaces(that.main.workspaceList);\r\n                    }\r\n\r\n                    this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n                    this.main.networkManager.secondsTillNextUpdate = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    restoreOwnWorkspaces() {\r\n        let main = this.main;\r\n\r\n        // main.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n        main.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        main.workspaceList = this.ownWorkspaces;\r\n        main.currentWorkspace = this.currentOwnWorkspace;\r\n        main.workspacesOwnerId = main.user.id;\r\n        main.projectExplorer.setExplorerColor(null);\r\n\r\n        main.projectExplorer.renderWorkspaces(main.workspaceList);\r\n\r\n        if (main.currentWorkspace == null && main.workspaceList.length > 0) {\r\n            main.currentWorkspace = main.workspaceList[0];\r\n        }\r\n\r\n        if (main.currentWorkspace != null) {\r\n            main.projectExplorer.setWorkspaceActive(main.currentWorkspace);\r\n        }\r\n\r\n        this.studentPanel.select(null, false);\r\n\r\n    }\r\n\r\n    initClassPanel() {\r\n        let that = this;\r\n\r\n        this.classPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Klassen\", \"1\", null, \"\", \"class\", false, false, \"class\", false, []);\r\n\r\n        this.classPanel.selectCallback = (ea) => {\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let classData = <ClassData>ea;\r\n                if (classData != null) {\r\n                    this.renderStudents(classData.students);\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    renderStudents(userDataList: UserData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        userDataList.sort((a, b) => {\r\n            if (a.familienname > b.familienname) return 1;\r\n            if (b.familienname > a.familienname) return -1;\r\n            if (a.rufname > b.rufname) return 1;\r\n            if (b.rufname > a.rufname) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let ud of userDataList) {\r\n            let ae: AccordionElement = {\r\n                name: ud.familienname + \", \" + ud.rufname,\r\n                sortName: ud.familienname + \" \" + ud.rufname,\r\n                externalElement: ud,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.studentPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n    renderClasses(classDataList: ClassData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        classDataList.sort((a, b) => {\r\n            if (a.name > b.name) return 1;\r\n            if (b.name > a.name) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let cd of classDataList) {\r\n            let ae: AccordionElement = {\r\n                name: cd.name,\r\n                externalElement: cd,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.classPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\n\r\nexport type Theme = {\r\n    name: string,\r\n    monacoTheme: string,\r\n    cssColors: { [color: string]: string }\r\n}\r\n\r\nexport class ThemeManager {\r\n\r\n    themes: Theme[] = [];\r\n\r\n    constructor() {\r\n        this.initThemes();\r\n    }\r\n\r\n    switchTheme(name: string) {\r\n        for (let theme of this.themes) {\r\n            if (theme.name == name) {\r\n                this.internalSwitchTheme(theme);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    \r\n    private internalSwitchTheme(theme: Theme) {\r\n        monaco.editor.setTheme(theme.monacoTheme);\r\n\r\n        let root = document.documentElement;\r\n        for (const key of Object.keys(theme.cssColors)) {\r\n            const value = theme.cssColors[key]\r\n\r\n            root.style.setProperty(key, value);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    initThemes() {\r\n\r\n        this.themes.push({\r\n            name: \"dark\",\r\n            monacoTheme: \"myCustomThemeDark\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"#1e1e1e\",\r\n                \"--backgroundLight\": \"#252526\",\r\n                \"--backgroundHeading\": \"#37373d\",\r\n                \"--backgroundSelected\": \"#2a2d2e\",\r\n                \"--fontColorNormal\": \"#c2cccc\",\r\n                \"--fontColorLight\": \"#e7e7e7\",\r\n                \"--slider\": \"#414141\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#1e1e1e\",\r\n                \"--scrollbar-thumb\": \"#3e3e3e\",\r\n                \"--scrollbar-thumb-hover\": \"#5e5e5e\",\r\n                \"--scrollbar-thumb-active\": \"#7e7e7e\",\r\n                \"--submenu-hover\": \"#094771\",\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#616162\",\r\n                \"--file-hover\": \"hsla(0, 0%, 38%, 0.125)\",\r\n                \"--file-active\": \"#094771\",\r\n                \"--file-active-hover\": \"rgba(9, 71, 113, 0.827)\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"blue\",\r\n                \"--contextmenu-background\": \"#3c3c3c\",\r\n                \"--contextmenu-color\": \"rgb(212,212,212)\",\r\n                \"--contextmenu-hover-background\": \"#094771\",\r\n                \"--contextmenu-hover-color\": \"#ffffff\",\r\n                \"--error-filename\": \"#2a709e\",\r\n                \"--error-line-ative\": \"#094771\",\r\n                \"--error-line-hover\": \"rgba(96, 96, 96, 0.125)\",\r\n                \"--error-position\": \"#c0802d\",\r\n                \"--linecolumn\": \"#14c714\",\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#2b2b7d2f\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"rgb(85,85,85)\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#383838\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#252526\",\r\n                \"--editorTooltip-border\": \"#454545\",\r\n\r\n                \"--renameInput-color\": \"#ffffff\",\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"white\",\r\n                \"--bottomdiv-tabheading-active\": \"rgb(97,97,255)\",\r\n                \"--noErrorMessage\": \"rgb(37, 211, 37)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"#1e1e1e\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"white\",\r\n                \"--consoleEntryIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"white\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 51, 51)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--deValue\": \"white\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#383838\",\r\n                \"--helper-border-color\": \"#d4d4d4\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#ffffff\",\r\n                \"--runInputColor\": \"#ffffff\",\r\n                \"--runBackgroundColor\": \"rgba(255, 255, 255, 0.2)\",\r\n\r\n                // table\r\n                \"--table-even\": \"#222\", /*#d1d2e4*/\r\n                \"--table-heading\": \"#202060\", /*#c3f2b9*/\r\n\r\n\r\n            }\r\n        });\r\n\r\n        let highlightColor = \"#8080ff\";\r\n\r\n        this.themes.push({\r\n            name: \"light\",\r\n            monacoTheme: \"myCustomThemeLight\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"white\",\r\n                \"--backgroundLight\": \"#f3f3f3\",\r\n                \"--backgroundHeading\": \"#dcdcdc\",\r\n                \"--backgroundSelected\": \"#e8e8e8\",\r\n                \"--fontColorNormal\": \"#000\",\r\n                \"--fontColorLight\": \"#303030\",\r\n                \"--slider\": \"#b0b0b0\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#e3e3e3\",\r\n                \"--scrollbar-thumb\": \"#bababa\",\r\n                \"--scrollbar-thumb-hover\": \"#8e8e8e\",\r\n                \"--scrollbar-thumb-active\": \"#616161\",\r\n                \"--submenu-hover\": highlightColor,\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#cfcfcf\",\r\n                \"--file-hover\": \"#e8e8e8\",\r\n                \"--file-active\": highlightColor,\r\n                \"--file-active-hover\": \"#a0a0ff\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"white\",\r\n                \"--contextmenu-background\": \"white\",\r\n                \"--contextmenu-color\": \"#756161\",\r\n                \"--contextmenu-hover-background\": highlightColor,\r\n                \"--contextmenu-hover-color\": \"#a0a0ff\",\r\n                \"--error-filename\": \"#ff0000\",\r\n                \"--error-line-ative\": \"#ffa0a0\",\r\n                \"--error-line-hover\": \"#ffc0c0\",\r\n                \"--error-position\": \"#804040\",\r\n                \"--linecolumn\": \"#14c714\", // TODO\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#babaec80\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"#c0c0c0\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#e0e0e0\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#e0e0e0\",\r\n                \"--editorTooltip-border\": \"#9d9d9d\",\r\n\r\n                \"--renameInput-color\": \"#000000\",\r\n\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"#424242\",\r\n                \"--bottomdiv-tabheading-active\": \"#424242\",\r\n                \"--noErrorMessage\": \"rgb(17, 180, 17)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"white\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"#0000a0\",\r\n                \"--consoleEntryIdentifier\": \"black\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"#756161\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 21, 21)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"black\",\r\n                \"--deValue\": \"#0000a0\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#f3f3f3\",\r\n                \"--helper-border-color\": \"#606060\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#303030\",\r\n                \"--runInputColor\": \"#000000\",\r\n                \"--runBackgroundColor\": \"rgba(0, 0, 0, 0.2)\",\r\n\r\n                // table\r\n                \"--table-even\": \"#d1d2e4\", /*#d1d2e4*/\r\n                \"--table-heading\": \"#c3f2b9\", /*#c3f2b9*/\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","export type DialogButton = {\r\n    caption: string,\r\n    color: string,\r\n    callback: () => void\r\n}\r\n\r\nexport class Dialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            '<div style=\"flex: 1\"></div>' +\r\n            '<div class=\"dialog-main\"></div>' +\r\n            '<div style=\"flex: 4\"></div>'\r\n        ));\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n    }\r\n\r\n    heading(text: string) {\r\n        let $div = jQuery('<div class=\"dialog-heading\">' + text + \"</div>\")\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    description(text: string, color?: string) {\r\n        let colorStyle = color == null ? \"\" : `style=\"color: ${color}\"`;\r\n        let $div = jQuery(`<div class=\"dialog-description\" ${colorStyle}>${text}</div>`)\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    input(type: string, placeholder: string):JQuery<HTMLInputElement> {\r\n        let $div = jQuery(`<input class=\"dialog-input\" type=\"${type}\" placeholder=\"${placeholder}\"></input>`)\r\n        this.$dialogMain.append($div);\r\n        return <any>$div;\r\n    }\r\n\r\n    buttons(buttons: DialogButton[]){\r\n\r\n        let $buttonRow = jQuery('<div class=\"dialog-buttonRow\"></div>')\r\n        this.$dialogMain.append($buttonRow);\r\n\r\n        for(let button of buttons){\r\n\r\n            let $button = jQuery(`<button style=\"background-color: ${button.color};margin-left: 20px\">${button.caption}</button>`)\r\n            $button.on(\"click\", () => {button.callback()})\r\n            $buttonRow.append($button);\r\n        }\r\n    }\r\n\r\n    waitMessage(text: string): (visible: boolean) => void {\r\n\r\n        let $message = jQuery(`<div class=\"dialog-wait\">${text}<img src=\"assets/projectexplorer/svg-loaders/ball-triangle.svg\"></div>`)\r\n        this.$dialogMain.append($message);\r\n\r\n        return (visible: boolean) => {\r\n            let visibility = visible ? \"visible\" : \"hidden\";\r\n            $message.css(\"visibility\", visibility);\r\n        }\r\n\r\n    }\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { openContextMenu, ContextMenuItem } from \"../../tools/HtmlTools.js\";\r\nimport { Dialog } from \"./Dialog.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\n\r\nexport class UserMenu {\r\n\r\n\r\n\r\n    constructor(private main: Main){\r\n        \r\n    }\r\n\r\n    init(){\r\n        let $userSettingsButton = jQuery('#buttonUserSettings');\r\n        let that = this;\r\n\r\n        $userSettingsButton.on(\"click\", (e) => {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [\r\n                {\r\n                    caption: \"Passwort ändern...\",\r\n                    callback: () => {\r\n                        let passwortChanger = new PasswordChanger(that.main);\r\n                        passwortChanger.show();\r\n                    }\r\n                }\r\n            ]\r\n\r\n\r\n            openContextMenu(contextMenuItems, $userSettingsButton.offset().left, $userSettingsButton.offset().top + $userSettingsButton.height());\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class PasswordChanger {\r\n\r\n    dialog: Dialog;\r\n\r\n    constructor(private main: Main){\r\n\r\n        this.dialog = new Dialog();\r\n\r\n    }\r\n\r\n    show() {\r\n        this.dialog.init();\r\n        this.dialog.heading(\"Passwort ändern\");\r\n        this.dialog.description(\"Bitte geben Sie Ihr bisheriges Passwort und darunter zweimal Ihr neues Passwort ein. <br>\" + \r\n        \"Das Passwort muss mindestens 8 Zeichen lang sein und sowohl Buchstaben als auch Zahlen oder Sonderzeichen enthalten.\")\r\n        let $oldPassword = this.dialog.input(\"password\", \"Altes Passwort\");\r\n        let $newPassword1 = this.dialog.input(\"password\", \"Neues Passwort\");\r\n        let $newPassword2 = this.dialog.input(\"password\", \"Neues Passwort wiederholen\");\r\n        let $errorDiv = this.dialog.description(\"\", \"red\");\r\n        let waitDiv = this.dialog.waitMessage(\"Bitte warten...\")\r\n\r\n        this.dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {this.dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    if($newPassword1.val() != $newPassword2.val()){\r\n                        $errorDiv.text(\"Die zwei eingegebenen neuen Passwörter stimmen nicht überein.\")\r\n                    } else {\r\n                        waitDiv(true);\r\n                        ajax(\"changePassword\", {oldPassword: $oldPassword.val(), newPassword: $newPassword1.val()}, () => {\r\n                            waitDiv(false);\r\n                            alert(\"Das Passwort wurde erfolgreich geändert.\");\r\n                            this.dialog.close();\r\n                        }, (message) => {\r\n                            waitDiv(false);\r\n                            $errorDiv.text(message)\r\n                        })\r\n                    }\r\n\r\n                }\r\n            },\r\n        ])\r\n    }\r\n\r\n}","import { ajax } from \"../communication/AjaxHelper.js\";\r\nimport { LoginRequest, LoginResponse, LogoutRequest, UserData } from \"../communication/Data.js\";\r\nimport { Main } from \"./Main.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { userInfo } from \"os\";\r\nimport { UserMenu } from \"./gui/UserMenu.js\";\r\nimport { escapeHtml } from \"../tools/StringTools.js\";\r\n\r\nexport class Login {\r\n\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        let that = this;\r\n\r\n        let $loginSpinner = jQuery('#login-spinner>img');\r\n\r\n        jQuery('#login-username').focus();\r\n\r\n        jQuery('#login-username').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-password').focus();\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-button').focus();\r\n                jQuery('#login-button').addClass('jo_active');\r\n            }\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-button').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-username').focus();\r\n                jQuery('#login-button').removeClass('jo_active');\r\n            } else {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        // Avoid double login when user does doubleclick:\r\n        let loginHappened = false;\r\n        jQuery('#login-button').on('click', () => {\r\n\r\n            $loginSpinner.show();\r\n\r\n            if (loginHappened) return;\r\n            loginHappened = true;\r\n\r\n            setTimeout(() => {\r\n                loginHappened = false;\r\n            }, 1000);\r\n\r\n            let loginRequest: LoginRequest = {\r\n                username: <string>jQuery('#login-username').val(),\r\n                password: <string>jQuery('#login-password').val(),\r\n                language: 1\r\n            }\r\n\r\n            ajax('login', loginRequest, (response: LoginResponse) => {\r\n\r\n                if (!response.success) {\r\n                    jQuery('#login-message').html('Fehler: Benutzername und/oder Passwort ist falsch.');\r\n                } else {\r\n\r\n                    // We don't do this anymore for security reasons - see AjaxHelper.ts\r\n                    // Alternatively we now set a long expiry interval for cookie.\r\n                    // credentials.username = loginRequest.username;\r\n                    // credentials.password = loginRequest.password;\r\n\r\n                    jQuery('#login').hide();\r\n\r\n                    this.main.waitOverlay.show('Bitte warten...');\r\n\r\n                    let user: UserData = response.user;\r\n                    if (user.settings == null || user.settings.helperHistory == null) {\r\n                        user.settings = {\r\n                            helperHistory: {\r\n                            },\r\n                            viewModes: null,\r\n                            classDiagram: null\r\n                        }\r\n                    }\r\n\r\n                    this.main.waitForGUICallback = () => {\r\n\r\n                        that.main.mainMenu.initGUI(user);\r\n\r\n                        that.main.waitOverlay.hide();\r\n                        $loginSpinner.hide();\r\n                        jQuery('#menupanel-username').html(escapeHtml(user.rufname) + \" \" + escapeHtml(user.familienname));\r\n\r\n                        new UserMenu(that.main).init();\r\n\r\n                        if (user.is_teacher) {\r\n                            that.main.initTeacherExplorer(response.classdata);\r\n                        }\r\n\r\n                        that.main.user = user;\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces);\r\n                        that.main.workspacesOwnerId = user.id;\r\n\r\n                        that.main.networkManager.initializeTimer();\r\n\r\n                        that.main.projectExplorer.fileListPanel.setFixed(!user.is_teacher);\r\n                        that.main.projectExplorer.workspaceListPanel.setFixed(!user.is_teacher);\r\n\r\n                        that.main.viewModeController.initViewMode();\r\n                        that.main.bottomDiv.hideHomeworkTab();\r\n\r\n                        that.main.networkManager.initializeNotifierClient();\r\n\r\n                    }\r\n\r\n                    if (this.main.startupComplete == 0) {\r\n                        this.main.waitForGUICallback();\r\n                        this.main.waitForGUICallback = null;\r\n                    }\r\n\r\n                }\r\n\r\n            }, (errorMessage: string) => {\r\n                jQuery('#login-message').html('Login gescheitert: ' + errorMessage);\r\n                jQuery('#login-spinner>img').hide();\r\n            }\r\n            );\r\n\r\n        });\r\n\r\n        jQuery('#buttonLogout').on('click', () => {\r\n\r\n            this.main.waitOverlay.show('Bitte warten, der letzte Bearbeitungsstand wird noch gespeichert ...');\r\n\r\n            if (this.main.workspacesOwnerId != this.main.user.id) {\r\n                this.main.projectExplorer.onHomeButtonClicked();\r\n            }\r\n\r\n            this.main.networkManager.sendUpdates(() => {\r\n\r\n                let logoutRequest: LogoutRequest = {\r\n                    currentWorkspaceId: this.main.currentWorkspace?.id\r\n                }\r\n\r\n                ajax('logout', logoutRequest, () => {\r\n                    // window.location.href = 'index.html';\r\n                    this.main.networkManager.sendUpdateUserSettings(() => {});\r\n\r\n                    jQuery('#login').show();\r\n                    this.main.waitOverlay.hide();\r\n                    jQuery('#login-message').empty();\r\n                    this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"\", \"myJava\"));\r\n                    this.main.projectExplorer.fileListPanel.clear();\r\n                    this.main.projectExplorer.workspaceListPanel.clear();\r\n\r\n                    this.main.databaseExplorer.clear();\r\n                    this.main.resultsetPresenter.clear();\r\n\r\n                    if (this.main.user.is_teacher) {\r\n                        this.main.teacherExplorer.removePanels();\r\n                        this.main.teacherExplorer = null;\r\n                    }\r\n\r\n\r\n                    this.main.currentWorkspace = null;\r\n                    this.main.user = null;\r\n\r\n\r\n                });\r\n            }, true);\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\nimport { ViewModes, ViewMode } from \"../../communication/Data\";\r\n\r\nexport class ViewModeController {\r\n\r\n    $buttonEditorFullscreen: JQuery<HTMLElement>;\r\n    $buttonPresentationMode: JQuery<HTMLElement>;\r\n    $buttonMonitorMode: JQuery<HTMLElement>;\r\n\r\n    $buttonMap: { [key: string]: JQuery<HTMLElement> } = {};\r\n\r\n    highContrast: boolean = false;\r\n    editorHasFullWidth: boolean = false;\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private main: Main) {\r\n\r\n        this.$buttonEditorFullscreen = jQuery('<div title=\"Editor in voller Breite\" class=\"img_whole-window jo_button jo_active\" style=\"padding: 1px; margin-right: 20px\"></div>');\r\n        this.$buttonPresentationMode = jQuery('<div title=\"Präsentation (Beamer)\" class=\"img_presentation-mode jo_button jo_active\" syle=\"padding: 1px\"></div>');\r\n        this.$buttonMonitorMode = jQuery('<div title=\"Monitor\" class=\"img_monitor-mode jo_button jo_active\" style=\"margin-left: 5px; padding: 1px\"></div>');\r\n        $buttonsContainer.append(this.$buttonEditorFullscreen, this.$buttonPresentationMode, this.$buttonMonitorMode);\r\n\r\n        this.$buttonMap = {\r\n            \"presentation\": this.$buttonPresentationMode,\r\n            \"monitor\": this.$buttonMonitorMode\r\n        };\r\n\r\n        let am = this.main.actionManager;\r\n\r\n        am.registerAction(\"editor.fullwidth\", [],\r\n            () => {\r\n                this.toggleEditorFullwidth();\r\n            }, \"Editor auf die volle Breite erweitern\", this.$buttonEditorFullscreen);\r\n\r\n        am.registerAction(\"viewmode.presentation\", [],\r\n            () => {\r\n                this.setMode(\"presentation\");\r\n            }, \"Präsentationsansicht\", this.$buttonPresentationMode);\r\n\r\n        am.registerAction(\"viewmode.monitor\", [],\r\n            () => {\r\n                this.setMode(\"monitor\");\r\n            }, \"Monitoransicht\", this.$buttonMonitorMode);\r\n\r\n    }\r\n\r\n    toggleEditorFullwidth() {\r\n        if(this.editorHasFullWidth){\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in voller Breite');\r\n            jQuery('#rightdiv').show(600);\r\n            jQuery('#leftpanel').show(600);\r\n            jQuery('#controls').show();\r\n        } else {\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in normaler Breite');\r\n            jQuery('#rightdiv').hide(600);\r\n            jQuery('#leftpanel').hide(600);\r\n            jQuery('#controls').hide();\r\n        }\r\n\r\n        setTimeout(()=>{\r\n            this.main.getMonacoEditor().layout();\r\n        }, 800);\r\n\r\n        this.editorHasFullWidth = !this.editorHasFullWidth;\r\n    }\r\n\r\n    setMode(mode: \"presentation\" | \"monitor\", saveSettings: boolean = true) {\r\n\r\n        let otherMode = mode == \"presentation\" ? \"monitor\" : \"presentation\";\r\n\r\n        this.$buttonMap[mode].addClass(\"jo_pressed\");\r\n        this.$buttonMap[otherMode].removeClass(\"jo_pressed\");\r\n\r\n        let settings = this.main.user.settings;\r\n        let viewModes = settings.viewModes;\r\n\r\n        let viewMode = viewModes[mode];\r\n        viewModes.viewModeChosen = mode;\r\n\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n\r\n        this.main.editor.setFontSize(viewMode.fontSize);\r\n\r\n        if (this.highContrast != viewMode.highContrast) {\r\n            let editor = this.main.getMonacoEditor();\r\n            editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n            this.highContrast = !this.highContrast;\r\n        }\r\n\r\n        if (saveSettings) this.saveSettings();\r\n\r\n    }\r\n\r\n    saveFontSize(fontSizePx: number) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.fontSize = fontSizePx;\r\n        this.saveSettings();\r\n    }\r\n\r\n    setTheme(theme: string) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.theme = theme;\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n        this.saveSettings();\r\n    }\r\n\r\n    toggleHighContrast() {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.highContrast = !viewMode.highContrast;\r\n        let editor = this.main.getMonacoEditor();\r\n        editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n        this.saveSettings();\r\n    }\r\n\r\n    getChosenViewMode(): ViewMode {\r\n        let viewModes = this.main.user.settings.viewModes;\r\n        return viewModes[viewModes.viewModeChosen];\r\n    }\r\n\r\n    saveSettings() {\r\n        this.main.userDataDirty = true;\r\n    }\r\n\r\n    initViewMode() {\r\n        let settings = this.main.user.settings;\r\n\r\n        if (settings[\"viewModes\"] == null) {\r\n            settings[\"viewModes\"] = {\r\n                monitor: null,\r\n                presentation: null,\r\n                viewModeChosen: \"monitor\"\r\n            }\r\n        }\r\n\r\n        if (settings.viewModes.monitor == null) {\r\n            settings.viewModes.monitor = {\r\n                fontSize: 14,\r\n                highContrast: false,\r\n                theme: \"dark\"\r\n            };\r\n\r\n            settings.viewModes.presentation = {\r\n                fontSize: 18,\r\n                highContrast: false,\r\n                theme: \"light\"\r\n            }\r\n            this.saveSettings();\r\n        }\r\n        this.setMode(settings.viewModes.viewModeChosen, false);\r\n    }\r\n\r\n\r\n}","import { Main } from \"../../main/Main.js\";\r\nimport { TextPosition } from \"../lexer/Token\";\r\nimport { Module } from \"./Module\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype SemicolonPosition = {\r\n    position: TextPosition;\r\n    module: Module;\r\n    firstSeenMs: number;\r\n    isThereAgain: boolean;\r\n}\r\n\r\nexport class SemicolonAngel {\r\n    \r\n    semicolonPositions: SemicolonPosition[] = [];\r\n    time: number;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    startRegistering(){\r\n        this.semicolonPositions.forEach(p => p.isThereAgain = false);\r\n        this.time = new Date().getTime();\r\n    }\r\n\r\n    register(position: TextPosition, module: Module){\r\n        let oldEvidence = this.semicolonPositions.find(p => p.position.line == position.line && p.position.column == position.column);\r\n        if(oldEvidence){\r\n            oldEvidence.isThereAgain = true;\r\n        } else {\r\n            this.semicolonPositions.push({position: position, firstSeenMs: this.time, isThereAgain: true, module: module});\r\n        }\r\n    }\r\n\r\n    healSemicolons(){\r\n        let time = new Date().getTime();\r\n        this.semicolonPositions = this.semicolonPositions.filter(p => p.isThereAgain);\r\n\r\n        let currentlyEditedModule = this.main.getCurrentlyEditedModule();\r\n        let cursorLine = this.main.getMonacoEditor().getPosition().lineNumber;\r\n\r\n        this.semicolonPositions.filter(p => time - p.firstSeenMs > 2000).forEach(p => {\r\n\r\n            let isCurrentModule = p.module.file.id != null && p.module.file.id == currentlyEditedModule.file.id;\r\n\r\n            let editOperations: monaco.editor.IIdentifiedSingleEditOperation[] = [\r\n                {\r\n                    range: new monaco.Range(p.position.line, p.position.column, p.position.line, p.position.column),\r\n                    text: \";\",\r\n                    forceMoveMarkers: true\r\n                }\r\n            ]\r\n\r\n            if(isCurrentModule){\r\n                if(Math.abs(cursorLine - p.position.line) > 1){\r\n                    let editor = this.main.getMonacoEditor();\r\n                    const selection = editor.getSelection();\r\n                    editor.executeEdits('Semicolon-Angel', editOperations);\r\n                    editor.setSelection(selection);\r\n                    this.semicolonPositions.splice(this.semicolonPositions.indexOf(p), 1);\r\n                }\r\n            } \r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\r\nimport { Table, Column } from \"../../compiler/parser/SQLTable.js\";\r\nimport { DatabaseStructure } from \"../../tools/DatabaseTools.js\";\r\n\r\nexport class DatabaseExplorer {\r\n\r\n    collapsedTables: Map<string, boolean> = new Map();\r\n\r\n    constructor(private main: MainBase, public $mainDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    refresh() {\r\n\r\n        let dbTool = this.main.getDatabaseTool();\r\n\r\n        dbTool.retrieveDatabaseStructure((dbstructure: DatabaseStructure) => {\r\n\r\n            this.refreshAfterRetrievingDBStructure();\r\n        });\r\n\r\n    }\r\n\r\n    clear(){\r\n        this.$mainDiv.empty();\r\n    }\r\n\r\n    refreshAfterRetrievingDBStructure() {\r\n        let dbTool = this.main.getDatabaseTool();\r\n        let workspace = this.main.getCurrentWorkspace();\r\n        if (workspace != null) {\r\n            for (let m of workspace.moduleStore.getModules(false)) {\r\n                m.file.dirty = true;\r\n            }\r\n        }\r\n\r\n        let tables = Table.fromTableStructureList(dbTool.databaseStructure.tables);\r\n\r\n        this.$mainDiv.empty();\r\n\r\n        for (let table of tables) {\r\n            if(table.identifier != \"sqlite_sequence\"){\r\n                let $table = this.renderTable(table);\r\n                this.$mainDiv.append($table);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    renderTable(table: Table): JQuery<HTMLElement> {\r\n        let isCollapsed = this.collapsedTables.get(table.identifier) != null;\r\n\r\n        let $table = jQuery(\r\n            `<div class=\"jo_table\">\r\n           <div class=\"jo_tableheader\">\r\n              <div class=\"${isCollapsed ? 'img_tree-collapsed-dark' : 'img_tree-expanded-dark'} jo_treeswitch jo_button jo_active\"></div>\r\n              <div class=\"jo_tableheaderlink\">\r\n                <div class=\"img_table\"></div>\r\n                <div>${table.identifier}</div></div><div class=\"jo_tablesize\">(${table.size}&nbsp;Datensätze)</div>\r\n              </div>\r\n            </div>\r\n        </div>`);\r\n\r\n        $table.find('.jo_tableheader').on('pointerup', () => {\r\n            this.main.getResultsetPresenter().showTable(table.identifier);\r\n\r\n        })\r\n\r\n        let $columns = jQuery('<div class=\"jo_columnlist\"></div>')\r\n\r\n        for (let column of table.columns) {\r\n            let image = column.isPrimaryKey ? \"img_key\" : \"img_column\";\r\n\r\n            let referencesHtml = \"\";\r\n            if (column.references != null) {\r\n                referencesHtml = `<div class=\"img_foreign_key\" style=\"margin-left: 5px\"></div><div class=\"jo_references\">${column.references.table.identifier}.${column.references.identifier}</div>`\r\n            }\r\n\r\n            let type = column.type == null ? \"\" : column.type.toString();\r\n            let notNull: string = column.notNull ? '<div class=\"jo_dbnotnull\">not null</div>' : \"\";\r\n            let defaultValue: string = column.defaultValue ? `<div class=\"jo_dbdefault\">default ${column.defaultValue}</div>` : \"\";\r\n            let autoincrement: string = column.isAutoIncrement ? `<div class=\"jo_dbautoincrement\">autoincrement</div>` : \"\";\r\n\r\n            let $column = jQuery(`\r\n            <div class=\"jo_column\">\r\n                <div class=\"${image}\"></div>\r\n                <div>${column.identifier}</div>\r\n                <div class=\"jo_dbtype\">${type}</div>\r\n                ${autoincrement}\r\n                ${referencesHtml}\r\n                ${notNull}\r\n                ${defaultValue}\r\n            </div>\r\n            `);\r\n            $columns.append($column);\r\n        }\r\n\r\n        $table.append($columns);\r\n\r\n        let $treeSwitch = $table.find('.jo_treeswitch');\r\n        let that = this;\r\n        $treeSwitch.on('pointerup', (e) => {\r\n            e.stopPropagation();\r\n            let $columnList = $treeSwitch.parents('.jo_table').find('.jo_columnlist');\r\n            let collapsed = $treeSwitch.hasClass('img_tree-collapsed-dark');\r\n            if (collapsed) {\r\n                $treeSwitch.removeClass('img_tree-collapsed-dark');\r\n                $treeSwitch.addClass('img_tree-expanded-dark');\r\n                $columnList.slideDown(300);\r\n                that.collapsedTables.delete(table.identifier);\r\n            } else {\r\n                $treeSwitch.removeClass('img_tree-expanded-dark');\r\n                $treeSwitch.addClass('img_tree-collapsed-dark');\r\n                $columnList.slideUp(300);\r\n                that.collapsedTables.set(table.identifier, true);\r\n            }\r\n        });\r\n\r\n        return $table;\r\n    }\r\n\r\n\r\n\r\n}","// <div id=\"controls\">\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n// </div>\r\n\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { ResultsetPresenter } from \"./ResultsetPresenter.js\";\r\n\r\n\r\nexport class ProgramControlButtons {\r\n\r\n    $buttonStart: JQuery<HTMLElement>;\r\n    $buttonRollback: JQuery<HTMLElement>;\r\n    // $buttonPause: JQuery<HTMLElement>;\r\n    // $buttonStop: JQuery<HTMLElement>;\r\n    // $buttonStepOver: JQuery<HTMLElement>;\r\n    // $buttonStepInto: JQuery<HTMLElement>;\r\n    // $buttonStepOut: JQuery<HTMLElement>;\r\n    // $buttonRestart: JQuery<HTMLElement>;\r\n\r\n    // $buttonEdit: JQuery<HTMLElement>;\r\n\r\n\r\n    constructor(private main: MainBase, private $buttonsContainer: JQuery<HTMLElement>) {\r\n\r\n        this.$buttonStart = jQuery('<div title=\"Start\" class=\"img_start-dark jo_button\"></div>');\r\n        this.$buttonRollback = jQuery('<div title=\"Rollback\" class=\"img_undo jo_button\"></div>');\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        am.registerAction(\"execute\", ['Strg + Enter'],\r\n            () => {\r\n                if (am.isActive(\"execute\")) {\r\n\r\n                    this.main.getResultsetPresenter().executeSelectedStatements();\r\n                }\r\n\r\n            }, \"SQL-Statement ausführen\", this.$buttonStart\r\n        );\r\n\r\n        am.setActive('execute',false);\r\n\r\n        am.registerAction(\"rollback\", ['Strg + LeftArrow'],\r\n            () => {\r\n                if (am.isActive(\"rollback\")) {\r\n\r\n                    this.main.getHistoryViewer().rollback();\r\n                }\r\n\r\n            }, \"Letztes schreibendes SQL-Statement rückgängig machen\", this.$buttonRollback\r\n        );\r\n\r\n        am.setActive('rollback',false);\r\n\r\n        // this.$buttonPause = jQuery('<div title=\"Pause\" class=\"img_pause-dark jo_button\"></div>');\r\n        // this.$buttonStop = jQuery('<div title=\"Stop\" class=\"img_stop-dark jo_button\"></div>');\r\n        // this.$buttonStepOver = jQuery('<div title=\"Step over\" class=\"img_step-over-dark jo_button\"></div>');\r\n        // this.$buttonStepInto = jQuery('<div title=\"Step into\" class=\"img_step-into-dark jo_button\"></div>');\r\n        // this.$buttonStepOut = jQuery('<div title=\"Step out\" class=\"img_step-out-dark jo_button\"></div>');\r\n        // this.$buttonRestart = jQuery('<div title=\"Restart\" class=\"img_restart-dark jo_button\"></div>');\r\n\r\n        // this.$buttonEdit = jQuery('<div class=\"jo_editButton\" title=\"Programm anhalten damit der Programmtext bearbeitbar wird\"></div>')\r\n        // $editorContainer.append(this.$buttonEdit);\r\n\r\n        $buttonsContainer.append(this.$buttonStart, this.$buttonRollback\r\n            // , this.$buttonPause, this.$buttonStop,\r\n            // this.$buttonStepOver, this.$buttonStepInto, this.$buttonStepOut, this.$buttonRestart\r\n        );\r\n\r\n        // <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n        // <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n        // <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n        // <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n        // <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n        // <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n        // <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n        // <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n\r\n\r\n\r\n    }\r\n\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { SQLStatement } from \"../../compiler/parser/Parser.js\";\r\nimport { StatementCleaner } from \"../../compiler/parser/StatementCleaner.js\";\r\nimport { QueryResult } from \"../../tools/DatabaseTools.js\";\r\nimport { WDatabase } from \"../../workspace/WDatabase.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\ntype RuntimeError = {\r\n    statement: SQLStatement,\r\n    message: string\r\n}\r\n\r\nexport interface WriteQueryListener {\r\n    notify(statements: SQLStatement[]): void;\r\n}\r\n\r\nexport class ResultsetPresenter {\r\n\r\n    $paginationDiv: JQuery<HTMLDivElement>;\r\n    $infoDiv: JQuery<HTMLDivElement>;\r\n    $arrowLeft: JQuery<HTMLDivElement>;\r\n    $arrowRight: JQuery<HTMLDivElement>;\r\n\r\n    paginationFrom: number;\r\n    paginationAll: number;\r\n\r\n    paginationSize: number = 1000;\r\n\r\n    result: QueryResult;\r\n\r\n    writeQueryListeners: WriteQueryListener[] = [];\r\n\r\n    public static StatementDelimiter: string = \";\\n\\n\"\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$paginationDiv = <any>$bottomDiv.find('.jo_pagination');\r\n        this.$arrowLeft = jQuery('<div class=\"jo_button img_arrow-left-dark jo_active\"></div>');\r\n        this.$infoDiv = jQuery('<div class=\"jo_pagination_info\"><span class=\"jo_pagination_fromto\">0001-1000</span>/<span class=\"jo_pagination_all\">5000</span></div>');\r\n        this.$arrowRight = jQuery('<div class=\"jo_button img_arrow-right-dark jo_active\"></div>');\r\n\r\n        this.$paginationDiv.empty();\r\n        this.$paginationDiv.append(this.$arrowLeft, this.$infoDiv, this.$arrowRight);\r\n\r\n        this.$paginationDiv.hide();\r\n\r\n        let mousePointer = (window.PointerEvent ? \"pointer\" : \"mouse\") + 'up';\r\n\r\n        let that = this;\r\n        this.$arrowLeft.on(mousePointer, (e) => {\r\n            if (that.paginationFrom > 1) {\r\n                that.paginationFrom = Math.max(that.paginationFrom - that.paginationSize, 1);\r\n                if (that.paginationFrom % 1000 != 1) {\r\n                    that.paginationFrom = (Math.floor(that.paginationFrom / that.paginationSize) + 1) * that.paginationSize + 1;\r\n                }\r\n                that.showResults();\r\n                that.activateButtons();\r\n            }\r\n        })\r\n\r\n        this.$arrowRight.on(mousePointer, (e) => {\r\n            if (that.paginationFrom < this.paginationAll - that.paginationSize + 1) {\r\n                that.paginationFrom = Math.min(that.paginationFrom + that.paginationSize, that.paginationAll - that.paginationSize + 1);\r\n                that.showResults();\r\n                that.activateButtons();\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    public addWriteQueryListener(listener: WriteQueryListener) {\r\n        this.writeQueryListeners.push(listener);\r\n    }\r\n\r\n    private activateButtons() {\r\n        this.$arrowLeft.toggleClass('jo_active', this.paginationFrom > 1);\r\n        this.$arrowRight.toggleClass('jo_active', this.paginationFrom < this.paginationAll - this.paginationSize + 1);\r\n    }\r\n\r\n    executeSelectedStatements() {\r\n\r\n        let statements = this.fetchSelectedStatements().filter(st => st.ast.type != TokenType.omittedeStatement);\r\n        \r\n        if (statements.length == 0) return;\r\n\r\n        let hasDDLStatements: boolean = statements.some(st => this.isDDLStatement(st));\r\n        let hasWriteStatements: boolean = statements.some(st => this.isWriteStatement(st));\r\n        let workspace = this.main.getCurrentWorkspace();\r\n        let database = workspace.database;\r\n\r\n        if (hasDDLStatements && workspace.permissions <= 1) {\r\n            alert(\"Der Benutzer hat keine Berechtigung zum Ändern der Tabellenstruktur.\");\r\n            return;\r\n        }\r\n\r\n        if (hasWriteStatements && workspace.permissions == 0) {\r\n            alert(\"Der Benutzer hat keine Berechtigung zum Einfügen/Löschen/Ändern von Datensätzen.\");\r\n            return;\r\n        }\r\n\r\n        if (hasDDLStatements || hasWriteStatements) {\r\n            if (this.main.isEmbedded()) {\r\n                this.executeDDLWriteStatementsEmbedded(workspace, statements, database);\r\n\r\n            } else {\r\n                this.executeDDLWriteStatementsInOnlineIDE(workspace, statements, database);\r\n            }\r\n\r\n        } else {\r\n            this.executeStatements(statements, 0, [], () => { });\r\n        }\r\n\r\n    }\r\n\r\n    executeDDLWriteStatementsEmbedded(workspace: Workspace, statements: SQLStatement[], database: WDatabase) {\r\n        let sucessfullyExecutedModifyingStatements: SQLStatement[] = [];\r\n        this.executeStatements(statements, 0, sucessfullyExecutedModifyingStatements, () => {\r\n\r\n            if (sucessfullyExecutedModifyingStatements.length == 0)\r\n                return;\r\n\r\n            this.main.getDatabaseExplorer().refresh();\r\n\r\n            this.writeQueryListeners.forEach(listener => listener.notify(sucessfullyExecutedModifyingStatements))\r\n        })\r\n    }\r\n\r\n    private executeDDLWriteStatementsInOnlineIDE(workspace: Workspace, statements: SQLStatement[], database: WDatabase) {\r\n        let main: Main = <Main>this.main;\r\n        // Step 1: Update Database to newest version to avoid potential database reset\r\n        main.networkManager.getNewStatements(workspace, (new_statements, firstStatementIndex) => {\r\n\r\n            main.notifier.executeNewStatements(new_statements, firstStatementIndex, () => { },\r\n                () => {\r\n                    // Step 2: Execute new statements to see which are successful\r\n                    let sucessfullyExecutedModifyingStatements: SQLStatement[] = [];\r\n                    this.executeStatements(statements, 0, sucessfullyExecutedModifyingStatements, () => {\r\n\r\n                        if (sucessfullyExecutedModifyingStatements.length == 0)\r\n                            return;\r\n\r\n                        // Step 3: Send successful statements to server in order to retrieve new db-version-number\r\n                        main.networkManager.AddDatabaseStatements(workspace, sucessfullyExecutedModifyingStatements.map(st => st.sqlCleaned == null ? st.sql : st.sqlCleaned), (statements_before, new_version) => {\r\n\r\n                            // Step 4: If another user sent statements between steps 1 and 3 then they are in array statements_before.\r\n                            // Add all new statements to local statement list\r\n                            statements_before.forEach(st => database.statements.push(st));\r\n                            this.main.getHistoryViewer().appendStatements(statements_before);\r\n                            let modifyingStatements = sucessfullyExecutedModifyingStatements.map(st => st.sqlCleaned == null ? st.sql : st.sqlCleaned)\r\n                            database.statements = database.statements.concat(modifyingStatements);\r\n                            this.main.getHistoryViewer().appendStatements(modifyingStatements);\r\n                            database.version = new_version;\r\n\r\n                            // Step 5 (worst case): statements before is not empty, so the should be executed before the statements executed in step 2\r\n                            // => clear whole database and execute all statements in the right order, beginning with a empty database.\r\n                            if (statements_before.length > 0) {\r\n\r\n                                this.resetDatabase(database);\r\n\r\n                            } else {\r\n\r\n                                main.getDatabaseExplorer().refresh();\r\n\r\n                            }\r\n\r\n                        });\r\n                    });\r\n                }, false);\r\n        });\r\n    }\r\n\r\n    resetDatabase(database: WDatabase) {\r\n        this.main.getDatabaseTool().initializeWorker(database.templateDump, database.statements, () => {\r\n            this.main.getDatabaseExplorer().refresh();\r\n        })\r\n    }\r\n\r\n    executeStatementsString(statements: string[], fromIndex: number, callback: () => void) {\r\n        if (statements.length == 0) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (fromIndex < statements.length) {\r\n            this.main.getDatabaseTool().executeQuery(statements[fromIndex],\r\n                (results) => { this.executeStatementsString(statements, fromIndex + 1, callback) },\r\n                (error) => { console.log(\"Error when executing statement \" + statements[fromIndex] + \"\\nError : \" + error); this.executeStatementsString(statements, fromIndex + 1, callback) });\r\n        } else {\r\n            callback();\r\n        }\r\n    }\r\n\r\n\r\n    executeStatements(statements: SQLStatement[], index: number, successfullyExecutedModifyingStatements: SQLStatement[], callback: () => void, errors: RuntimeError[] = []) {\r\n\r\n        if (index >= statements.length) {\r\n            this.showErrors(errors);\r\n\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        let statement = statements[index];\r\n\r\n\r\n        let callback1 = () => {\r\n            this.executeStatements(statements, index + 1, successfullyExecutedModifyingStatements, callback, errors);\r\n        }\r\n\r\n        if (statement.ast == null) {\r\n            callback1();\r\n            return;\r\n        }\r\n\r\n        if (statement.ast.type == TokenType.keywordSelect) {\r\n            let laterSelectExists: boolean = false;\r\n            for (let j = index + 1; j < statements.length; j++) laterSelectExists = laterSelectExists || this.isSelectStatement(statements[j]);\r\n            if (laterSelectExists) {\r\n                callback1();\r\n            } else {\r\n                if (statement.ast.limitNode == null) {\r\n                    statement.sql.trimRight();\r\n                    while (statement.sql.endsWith(\";\") || statement.sql.endsWith(\"\\n\") || statement.sql.endsWith(\"\\r\")) {\r\n                        statement.sql = statement.sql.substring(0, statement.sql.length - 1);\r\n                        statement.sql.trimRight();\r\n                    }\r\n                    statement.sql += \" limit 100000\";\r\n                }\r\n                this.main.getDatabaseTool().executeQuery(statement.sql,\r\n                    (results) => { this.presentResultsIntern(statement.sql, results); callback1(); },\r\n                    (error) => { errors.push({ statement: statement, message: error }); callback1(); });\r\n            }\r\n        } else {\r\n            let sql = new StatementCleaner().clean(statement);\r\n            console.log(sql);\r\n            this.main.getDatabaseTool().executeQuery(sql, (results) => { successfullyExecutedModifyingStatements.push(statement); callback1(); }, (error) => { errors.push({ statement: statement, message: error }); callback1(); });\r\n        }\r\n\r\n    }\r\n\r\n    oldErrorDecorations: string[] = [];\r\n    showErrorDecorations(errors: RuntimeError[]) {\r\n\r\n        let minimapColors = {\r\n            \"error\": \"#bc1616\",\r\n            \"warning\": \"#cca700\",\r\n            \"info\": \"#75beff\"\r\n        }\r\n\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        let markers: monaco.editor.IMarkerData[] = [];\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n        for (let error of errors) {\r\n            let errorlevel = \"error\";\r\n\r\n            let linesDecorationsClassName: string;\r\n            let borderLeftClass: string;\r\n            let minimapColor: string = minimapColors[errorlevel];\r\n\r\n            switch (errorlevel) {\r\n                case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n            }\r\n\r\n            let severity: monaco.MarkerSeverity;\r\n            switch (errorlevel) {\r\n                case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n            }\r\n\r\n            markers.push({\r\n                startLineNumber: error.statement.from.line,\r\n                startColumn: error.statement.from.column,\r\n                endLineNumber: error.statement.to.line,\r\n                endColumn: error.statement.to.column,\r\n                message: error.message,\r\n                severity: severity\r\n            });\r\n\r\n            decorations.push({\r\n                range: {\r\n                    startLineNumber: error.statement.from.line,\r\n                    startColumn: error.statement.from.column,\r\n                    endLineNumber: error.statement.to.line,\r\n                    endColumn: error.statement.to.column,\r\n                },\r\n                options: {\r\n                    linesDecorationsClassName: linesDecorationsClassName,\r\n                    minimap: {\r\n                        position: monaco.editor.MinimapPosition.Inline,\r\n                        color: minimapColor\r\n                    }\r\n                }\r\n\r\n            });\r\n\r\n\r\n        }\r\n\r\n        let model = this.main.getCurrentlyEditedModule().model;\r\n        monaco.editor.setModelMarkers(model, 'test', markers);\r\n        this.oldErrorDecorations = model.deltaDecorations(this.oldErrorDecorations, decorations);\r\n\r\n    }\r\n\r\n    showTable(identifier: string) {\r\n        let statement = \"select * from \" + identifier + \";\";\r\n        this.main.getDatabaseTool().executeQuery(statement,\r\n            (results) => { this.presentResultsIntern(statement, results); },\r\n            (error) => { });\r\n    }\r\n\r\n\r\n\r\n    showErrors(errors: RuntimeError[]) {\r\n        let $runtimeErrorsTab = this.$bottomDiv.find('.jo_errorsTab');\r\n        let $runtimeErrorsTabHeading = this.$bottomDiv.find('.jo_errorsTabheading');\r\n\r\n        $runtimeErrorsTab.empty();\r\n        this.showErrorDecorations(errors);\r\n\r\n        if (errors.length == 0) return;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        $runtimeErrorsTabHeading.trigger(mousePointer + \"down\");\r\n\r\n        let $errorList = jQuery('<div class=\"jo_errorlist\"></div>');\r\n        $runtimeErrorsTab.append($errorList);\r\n\r\n        for (let error of errors) {\r\n            let query = error.statement.sql;\r\n            query = query.replace(/\\n/g, \" \");\r\n            query = query.replace(/\\s\\s+/g, ' ');\r\n\r\n            let $errorLine = jQuery('<div class=\"jo_error-line\" style=\"flex-direction:column; width: fit-content\"></div>')\r\n            $errorList.append($errorLine);\r\n\r\n            $errorLine.on(mousePointer + 'down', () => {\r\n                let range = {\r\n                    startColumn: error.statement.from.column, startLineNumber: error.statement.from.line,\r\n                    endColumn: error.statement.to.column, endLineNumber: error.statement.to.line\r\n                };\r\n\r\n                this.main.getMonacoEditor().revealRangeInCenter(range);\r\n                $errorList.find('.jo_error-line').removeClass('jo_active');\r\n                $errorLine.addClass('jo_active');\r\n\r\n            })\r\n\r\n\r\n            let $sqlDiv = jQuery('<div class=\"jo_sqlErrorStatement\"></div>');\r\n            $errorLine.append($sqlDiv);\r\n\r\n            monaco.editor.colorize(query, \"vscSQL\", {}).then(\r\n                (html) => { $sqlDiv.html(html) });\r\n\r\n            let $messageDiv = jQuery('<div class=\"jo_sqlErrorMessage\">' + error.message + '</div>');\r\n            $errorLine.append($messageDiv);\r\n\r\n        }\r\n\r\n        this.$bottomDiv.find('.jo_tabheading').removeClass('jo_active');\r\n        $runtimeErrorsTabHeading.addClass('jo_active');\r\n        $runtimeErrorsTab.addClass('jo_active');\r\n\r\n    }\r\n\r\n    isSelectStatement(statement: SQLStatement): boolean {\r\n        return statement.ast != null && statement.ast.type == TokenType.keywordSelect;\r\n    }\r\n\r\n    isDDLStatement(statement: SQLStatement): boolean {\r\n        return statement.ast != null && [TokenType.keywordCreate, TokenType.keywordDrop, TokenType.keywordAlter].indexOf(statement.ast.type) >= 0;\r\n    }\r\n\r\n    isWriteStatement(statement: SQLStatement): boolean {\r\n        return statement.ast != null && [TokenType.keywordInsert, TokenType.keywordDelete, TokenType.keywordUpdate].indexOf(statement.ast.type) >= 0;\r\n    }\r\n\r\n    private presentResultsIntern(query: string, results: QueryResult[]) {\r\n        let $resultTabheading = this.$bottomDiv.find('.jo_resultTabheading');\r\n        let $resultHeader = this.$bottomDiv.find('.jo_result-header');\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        $resultTabheading.trigger(mousePointer + \"down\");\r\n        this.result = results.pop();\r\n\r\n        let headerDiv = $resultHeader;\r\n\r\n        query = query.replace(/\\n/g, \" \");\r\n        query = query.replace(/\\s\\s+/g, ' ');\r\n        query = query.replace(/limit 100000/g, '');\r\n\r\n        monaco.editor.colorize(query, \"vscSQL\", {}).then(\r\n            (html) => { headerDiv.html(html) });\r\n\r\n        this.paginationAll = this.result ? this.result.values.length : 0;\r\n        this.$infoDiv.find('.jo_pagination_all').html(`${this.paginationAll}`);\r\n        this.paginationFrom = 1;\r\n        this.$paginationDiv.show();\r\n        this.activateButtons();\r\n\r\n        this.showResults();\r\n\r\n    }\r\n\r\n    public clear() {\r\n        let $bodyDiv = this.$bottomDiv.find('.jo_result-body');\r\n        $bodyDiv.empty();\r\n        this.$paginationDiv.hide();\r\n    }\r\n\r\n    private showResultsBusy: boolean = false;\r\n    private showResultPending: boolean = false;\r\n\r\n    private showResults() {\r\n        let $bodyDiv = this.$bottomDiv.find('.jo_result-body');\r\n\r\n        if (this.result == null) {\r\n            this.$infoDiv.find('.jo_pagination_fromto').html('---');\r\n            $bodyDiv.html('Die Datenbank lieferte eine leere Ergebnistabelle.');\r\n            return;\r\n        }\r\n\r\n        let that = this;\r\n        let from = this.paginationAll == 0 ? 0 : this.paginationFrom;\r\n        let to = this.paginationAll == 0 ? 0 : Math.min(this.paginationFrom + this.paginationSize - 1, this.paginationAll);\r\n        this.$infoDiv.find('.jo_pagination_fromto').html(`${from}-${to}`)\r\n\r\n        if (this.showResultsBusy) {\r\n            if (this.showResultPending) {\r\n                return;\r\n            }\r\n            this.showResultPending = true;\r\n            let waitFunction = () => {\r\n                if (that.showResultsBusy) {\r\n                    setTimeout(() => {\r\n                        waitFunction();\r\n                    }, 200);\r\n                } else {\r\n                    that.showResultPending = false;\r\n                    that.showResults();\r\n                }\r\n            }\r\n            setTimeout(waitFunction, 200);\r\n            return;\r\n        }\r\n\r\n        this.showResultsBusy = true;\r\n\r\n        let $table = jQuery('<table></table>');\r\n        let $header = jQuery('<tr></tr>');\r\n        $table.append($header);\r\n\r\n        this.result.columns.forEach((column) => { $header.append(jQuery(`<th><div>${column}</div></th>`)) });\r\n\r\n        let rows = this.result.values.slice(this.paginationFrom - 1, this.paginationFrom + this.paginationSize - 1);\r\n\r\n        let i = 0;\r\n        let f = () => {\r\n            if (i < rows.length) {\r\n                for (let j = i; j < Math.min(i + 200, rows.length); j++) {\r\n                    let row = rows[j];\r\n                    let $row = jQuery('<tr></tr>');\r\n                    $table.append($row);\r\n                    row.forEach((cell) => { $row.append(jQuery(`<td>${cell}</td>`)) });\r\n                }\r\n                i = Math.min(i + 200, rows.length);\r\n                if (i < rows.length) {\r\n                    setTimeout(f, 30);\r\n                } else {\r\n                    $bodyDiv.empty().append($table);\r\n                    this.showResultsBusy = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        f();\r\n\r\n        // rows.forEach((row) => {\r\n        //     let $row = jQuery('<tr></tr>');\r\n        //     $table.append($row);\r\n        //     row.forEach((cell) => {$row.append(jQuery(`<td>${cell}</td>`))});\r\n        // });\r\n\r\n        // bodyDiv.empty().append($table);\r\n\r\n    }\r\n\r\n\r\n    fetchSelectedStatements(): SQLStatement[] {\r\n        let module = this.main.getCurrentlyEditedModule();\r\n        if (module == null) return null;\r\n\r\n        let monacoEditor = this.main.getMonacoEditor();\r\n        // console.log(monacoEditor.getSelection());\r\n        // console.log(monacoEditor.getPosition());\r\n\r\n        let statements: SQLStatement[] = module.getSQLSTatementsAtSelection(monacoEditor.getSelection());\r\n        for (let statement of statements) {\r\n            statement.sql = monacoEditor.getModel().getValueInRange({\r\n                startColumn: statement.from.column,\r\n                startLineNumber: statement.from.line, endColumn: statement.to.column, endLineNumber: statement.to.line\r\n            });\r\n        }\r\n\r\n        // let sqlStatement = module.getSQLStatementAtPosition(monacoEditor.getPosition());\r\n\r\n        return statements;\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { Module } from \"../compiler/parser/Module.js\";\r\nimport { ResultsetPresenter } from \"../main/gui/ResultsetPresenter.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { WDatabase } from \"../workspace/WDatabase.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ajax } from \"./AjaxHelper.js\";\r\nimport { GetNewStatementsRequest, GetNewStatementsResponse, GetWebSocketTokenResponse, LongPollingListenerResponse, RegisterLongPollingListenerRequest, WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestGetNewStatements, WebSocketResponse } from \"./Data.js\";\r\n\r\nexport class Notifier {\r\n\r\n    connection: WebSocket;\r\n    isOpen: boolean = false;\r\n    workspace: Workspace;\r\n    database: WDatabase;\r\n\r\n    constructor(public main: Main) {\r\n        // Polling is not used. \r\n        // We try long polling (see below!)\r\n\r\n        // this.startPolling();\r\n    }\r\n\r\n    connect(workspace: Workspace) {\r\n\r\n        let that = this;\r\n        this.workspace = workspace;\r\n        this.database = workspace.database;\r\n\r\n        if (this.isOpen) {\r\n            this.connection.close();\r\n        }\r\n\r\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\r\n\r\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/websocket\";\r\n            this.connection = new WebSocket(url);\r\n\r\n            this.connection.onerror = (error: Event) => { this.onError(error); }\r\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\r\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\r\n\r\n            this.connection.onopen = (event: Event) => {\r\n                let request: WebSocketRequestConnect = {\r\n                    command: 1,\r\n                    token: response.token,\r\n                    workspaceId: workspace.id,\r\n                    databaseId: workspace.database.id,\r\n                    databaseVersion: workspace.database.version\r\n                }\r\n\r\n                this.isOpen = true;\r\n                this.sendIntern(JSON.stringify(request));\r\n                this.onOpen();\r\n\r\n            }\r\n\r\n            setTimeout(() => {\r\n                that.startLongPolling()\r\n            }, 2000);\r\n\r\n        });\r\n\r\n    }\r\n\r\n    unsentMessages: string[] = [];\r\n    sendIntern(message: string) {\r\n\r\n        if (!this.isOpen) {\r\n            this.unsentMessages.push(message);\r\n        } else {\r\n            try {\r\n                this.connection.send(message);\r\n            } catch (exception) {\r\n                console.log(exception);\r\n            }\r\n        }\r\n    }\r\n\r\n    onClose(event: CloseEvent) {\r\n        this.isOpen = false;\r\n    }\r\n\r\n\r\n    disconnect() {\r\n        let message: WebSocketRequestDisconnect = {\r\n            command: 4\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n        this.connection.close();\r\n        this.workspace = null;\r\n    }\r\n\r\n    onMessage(event: MessageEvent) {\r\n\r\n        let that = this;\r\n        let response: WebSocketResponse = JSON.parse(event.data);\r\n        if (response.command == undefined) return;\r\n\r\n        switch (response.command) {\r\n            case 2: // SendStatements\r\n                that.executeNewStatements(response.newStatements, response.firstNewStatementIndex, () => {\r\n                    let request: WebSocketRequestGetNewStatements = { command: 2, databaseVersion: that.database.version };\r\n                    that.sendIntern(JSON.stringify(request));\r\n                })\r\n                break;\r\n            case 3: // server initiated disconnect\r\n                this.isOpen = false;\r\n                this.database = null;\r\n                this.workspace = null;\r\n                break;\r\n            case 4: // keep alive\r\n                break;\r\n            case 5: // rollback\r\n                if (this.database.version > response.new_version) {\r\n                    this.main.getHistoryViewer().rollbackLocal(response.new_version);\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    executeNewStatements(newStatements: string[], firstNewStatementIndex: number, callbackIfTooFewStatements: () => void, callbackIfDone: () => void = () => { }, doRefreshDatabaseExplorer: boolean = true) {\r\n        if (this.database == null) return;\r\n        let that = this;\r\n        let delta = firstNewStatementIndex - (this.database.version + 1);\r\n        if (delta > 0) {\r\n            callbackIfTooFewStatements();\r\n            callbackIfDone();\r\n            return;\r\n        } else {\r\n            if (delta < 0) {\r\n                newStatements.splice(0, -delta);\r\n                firstNewStatementIndex -= delta;\r\n            }\r\n            let statements = newStatements;\r\n            if (statements.length > 0) {\r\n                this.main.resultsetPresenter.executeStatementsString(statements, 0, () => {\r\n                    that.main.getHistoryViewer().appendStatements(statements);\r\n                    that.database.statements = that.database.statements.concat(statements)\r\n                    that.database.version = firstNewStatementIndex + newStatements.length - 1;\r\n                    if (doRefreshDatabaseExplorer) {\r\n                        that.main.databaseExplorer.refresh();\r\n                    }\r\n                    callbackIfDone();\r\n                })\r\n            } else {\r\n                callbackIfDone();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    onError(error: Event) {\r\n    }\r\n\r\n    onOpen() {\r\n        this.isOpen = true;\r\n        if (this.unsentMessages.length > 0) {\r\n            this.unsentMessages.forEach(m => this.sendIntern(m));\r\n            this.unsentMessages = [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Polling is not used. \r\n     * We try long polling!\r\n     * (see below)\r\n     */\r\n    isPolling: boolean = false;\r\n    startPolling() {\r\n        if (this.isPolling) return;\r\n        this.isPolling = true;\r\n\r\n        this.poll();\r\n\r\n    }\r\n\r\n    /**\r\n     * Polling is not used.\r\n     * We try long polling!\r\n     * (see below)\r\n     */\r\n    counter: number = 0;\r\n    poll() {\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.poll();\r\n        }, 6000);\r\n\r\n        if (!that.isOpen && that.workspace != null) {\r\n            this.getNewStatementsHttp();\r\n\r\n            // retry connecting:\r\n            that.counter++;\r\n            if (that.counter == 10) {\r\n                that.counter = 0;\r\n                that.connect(that.workspace);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getNewStatementsHttp() {\r\n        let that = this;\r\n        if (this.workspace == null || this.database == null) return;\r\n\r\n        let request: GetNewStatementsRequest = {\r\n            workspaceId: this.workspace.id,\r\n            version_before: this.workspace.database.version\r\n        }\r\n\r\n        ajax('getNewStatements', request, (response: GetNewStatementsResponse) => {\r\n\r\n            if(response.rollbackToVersion != null){\r\n                that.main.getHistoryViewer().rollbackLocal(response.rollbackToVersion);\r\n            } else {\r\n                that.executeNewStatements(response.newStatements, response.firstNewStatementIndex, () => {\r\n                    that.getNewStatementsHttp();\r\n                })\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    isLongPolling: boolean = false;\r\n    startLongPolling() {\r\n        if (this.isLongPolling) return;\r\n        this.isLongPolling = true;\r\n\r\n        this.longPoll();\r\n\r\n    }\r\n\r\n    longPollCounter: number = 0;\r\n    longPoll() {\r\n        let that = this;\r\n\r\n        if (!that.isOpen && that.workspace != null) {\r\n            let request: RegisterLongPollingListenerRequest = {\r\n                workspaceId: that.workspace.id\r\n            }\r\n\r\n            $.ajax({\r\n                type: 'POST',\r\n                async: true,\r\n                data: JSON.stringify(request),\r\n                contentType: 'application/json',\r\n                url: \"servlet/registerLongPollingListener\",\r\n                success: function (resp: string) {\r\n                    console.log(resp);\r\n                    let response: LongPollingListenerResponse = typeof resp == \"string\" ? JSON.parse(resp) : resp;\r\n                    if (resp != null && !that.isOpen && that.workspace?.id == request.workspaceId && response.success) {\r\n                        that.executeNewStatements(response.newStatements, response.firstNewStatementIndex, () => {\r\n                            that.getNewStatementsHttp();\r\n                        })\r\n\r\n                        let timeout: number = 1000;\r\n                        // retry connecting:\r\n                        that.longPollCounter++;\r\n                        if (that.longPollCounter == 10) {\r\n                            that.longPollCounter = 0;\r\n                            that.connect(that.workspace);\r\n                            timeout = 2000;\r\n                        }\r\n\r\n                        setTimeout(() => {\r\n                            that.longPoll();\r\n                        }, 2000);\r\n                    }\r\n                },\r\n                error: function (jqXHR, message) {\r\n                    if (!that.isOpen && that.workspace?.id == request.workspaceId) {\r\n                        setTimeout(() => {\r\n                            that.longPoll();\r\n                        }, 2000);\r\n                    }\r\n                }\r\n            });\r\n\r\n        } else {\r\n            setTimeout(() => {\r\n                that.longPoll();\r\n            }, 5000);\r\n        }\r\n\r\n    }\r\n\r\n}","export class WaitOverlay {\r\n\r\n    visible: boolean = false;\r\n    fadeOutPending: boolean = false;\r\n    $bitteWartenText: JQuery<HTMLElement>;\r\n    $bitteWartenProgress: JQuery<HTMLElement>;\r\n\r\n    constructor(private $waitDiv: JQuery<HTMLElement>){\r\n        $waitDiv.css('display', 'none');\r\n        this.$bitteWartenText = $waitDiv.find('.bitteWartenText');\r\n        this.$bitteWartenProgress = $waitDiv.find('.bitteWartenProgress');\r\n    }\r\n\r\n    show(message: string){\r\n        this.fadeOutPending = false;\r\n        this.$bitteWartenText.html(message);\r\n        this.$bitteWartenProgress.html('');\r\n        if(!this.visible){\r\n            this.visible = true;\r\n            this.$waitDiv.css('display', 'flex');\r\n            this.$waitDiv.hide();\r\n            this.$waitDiv.fadeIn(400);\r\n        }\r\n    }\r\n\r\n    setProgress(message: string){\r\n        this.$bitteWartenProgress.html(message);\r\n    }\r\n\r\n    hide(){\r\n        if(this.visible){\r\n            this.fadeOutPending = true;\r\n            setTimeout(() => {\r\n                if(this.fadeOutPending){\r\n                    this.fadeOutPending = false;\r\n                    this.$waitDiv.fadeOut(200, () => {\r\n                        this.$waitDiv.css('display', 'none');\r\n                    })\r\n                    this.visible = false;        \r\n                }                \r\n            }, 50);\r\n        }\r\n    }\r\n\r\n}","import { MainEmbedded } from \"../../embedded/MainEmbedded.js\";\r\nimport { copyTextToClipboard, openContextMenu } from \"../../tools/HtmlTools.js\";\r\nimport { WDatabase } from \"../../workspace/WDatabase.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\ntype HistoryPanelEntry = {\r\n    statement: string;\r\n    $div: JQuery<HTMLDivElement>;\r\n    $rollbackButton: JQuery<HTMLDivElement>;\r\n}\r\n\r\nexport class HistoryViewer {\r\n\r\n    panelEntries: HistoryPanelEntry[] = [];\r\n\r\n    constructor(private main: MainBase, private $historyPanel: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    clear() {\r\n        this.$historyPanel.empty();\r\n        this.main.getActionManager().setActive(\"rollback\", false);\r\n        this.panelEntries = [];\r\n    }\r\n\r\n    clearAndShowStatements(statements: string[]) {\r\n        this.clear();\r\n        this.appendStatements(statements);\r\n        this.main.getActionManager().setActive(\"rollback\", statements.length > 0);\r\n    }\r\n\r\n    appendStatements(statements: string[]) {\r\n        statements.forEach(stmt => {\r\n            let panelEntry = this.makePanelEntry(stmt, this.panelEntries.length + 1);\r\n            this.$historyPanel.prepend(panelEntry.$div);\r\n            this.panelEntries.unshift(panelEntry);\r\n        })\r\n\r\n        if(statements.length > 0){\r\n            this.main.getActionManager().setActive(\"rollback\", true);\r\n        }\r\n\r\n        this.makeLastButtonActive();\r\n    }\r\n\r\n    makeLastButtonActive() {\r\n        this.panelEntries.forEach(pe => pe.$rollbackButton.removeClass('jo_active'));\r\n\r\n        if (this.panelEntries.length > 0) {\r\n            this.panelEntries[0].$rollbackButton.addClass('jo_active');\r\n        }\r\n    }\r\n\r\n    makePanelEntry(statement: string, index: number): HistoryPanelEntry {\r\n        let $div = <JQuery<HTMLDivElement>>jQuery(`<div class=\"jo_panelEntry\"></div>`);\r\n        let $index = jQuery(`<div class=\"jo_panelEntryIndex\">${index}.</div>`);\r\n        let $text = jQuery(`<div class=\"jo_panelEntryText\"></div>`);\r\n        let t: string = statement.substring(0, Math.min(400, statement.length));\r\n        if (statement.length > 400) {\r\n            t += \"...\";\r\n        }\r\n        $text.text(t);\r\n        let $copybutton = <JQuery<HTMLDivElement>>jQuery(`<div class=\"img_copy jo_panelEntryCopyButton jo_active jo_button\" title=\"In die Zwischenablage kopieren\"></div>`)\r\n        let $rollbackbutton = <JQuery<HTMLDivElement>>jQuery(`<div class=\"img_undo jo_panelEntryRollbackButton jo_button\" title=\"Rollback\"></div>`)\r\n        let that = this;\r\n\r\n        $copybutton.on('click', () => {\r\n            copyTextToClipboard(statement);\r\n        })\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $rollbackbutton.on(mousePointer + 'up', (ev) => {\r\n            ev.preventDefault();\r\n            openContextMenu([{\r\n                caption: \"Abbrechen\",\r\n                callback: () => {\r\n                }\r\n            }, {\r\n                caption: \"Ich bin mir sicher: rollback!\",\r\n                color: \"#ff6060\",\r\n                callback: () => {\r\n                    this.rollback();\r\n                }\r\n            }], ev.pageX + 2, ev.pageY + 2);\r\n            ev.stopPropagation();\r\n        })\r\n\r\n        $div.append($index, $text, $copybutton, $rollbackbutton);\r\n        return {\r\n            $div: $div,\r\n            statement: statement,\r\n            $rollbackButton: $rollbackbutton\r\n        }\r\n    }\r\n\r\n    rollback() {\r\n        if (this.panelEntries.length == 0) return;\r\n\r\n        if (this.main.isEmbedded()) {\r\n            this.rollbackEmbedded();\r\n            this.main.getActionManager().setActive(\"rollback\", this.panelEntries.length > 0);\r\n        } else {\r\n            let main: Main = <Main>this.main;\r\n            main.networkManager.rollback((error: string, rollbackLocalNeeded: boolean) => {\r\n                if (error == null && rollbackLocalNeeded) {\r\n                    this.rollbackLocal();\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    rollbackLocal(new_version?: number) {\r\n        let database = this.main.getCurrentWorkspace().database;\r\n        if(new_version == null) new_version = database.version - 1;\r\n        \r\n        while(database.version > new_version){\r\n            database.statements.pop();\r\n            database.version--;\r\n        }\r\n        this.main.getDatabaseTool().initializeWorker(database.templateDump, database.statements, () => {\r\n\r\n        }, () => {\r\n            this.main.getDatabaseExplorer().refreshAfterRetrievingDBStructure();\r\n            let lastPanelEntry = this.panelEntries.shift();\r\n            lastPanelEntry.$div.remove();\r\n            this.makeLastButtonActive();\r\n            this.main.getActionManager().setActive(\"rollback\", this.panelEntries.length > 0);\r\n        })\r\n    }\r\n\r\n    rollbackEmbedded() {\r\n        let main: MainEmbedded = <MainEmbedded>this.main;\r\n        main.writeQueryManager.rollback();\r\n\r\n        this.main.getDatabaseTool().initializeWorker(main.initialTemplateDump,\r\n            main.initialStatements.concat(main.writeQueryManager.writtenStatements), () => { },\r\n            () => {\r\n                this.main.getDatabaseExplorer().refreshAfterRetrievingDBStructure();\r\n                let lastPanelEntry = this.panelEntries.shift();\r\n                lastPanelEntry.$div.remove();\r\n                this.makeLastButtonActive();\r\n            })\r\n    }\r\n\r\n}","import { ClassData, UserData, Workspaces } from \"../communication/Data.js\";\r\nimport { NetworkManager } from \"../communication/NetworkManager.js\";\r\nimport { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ActionManager } from \"./gui/ActionManager.js\";\r\nimport { BottomDiv } from \"./gui/BottomDiv.js\";\r\nimport { Editor } from \"./gui/Editor.js\";\r\nimport { Formatter } from \"./gui/Formatter.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { MainMenu } from \"./gui/MainMenu.js\";\r\nimport { ProjectExplorer } from \"./gui/ProjectExplorer.js\";\r\nimport { RightDiv } from \"./gui/RightDiv.js\";\r\nimport { Sliders } from \"./gui/Sliders.js\";\r\nimport { TeacherExplorer } from \"./gui/TeacherExplorer.js\";\r\nimport { ThemeManager } from \"./gui/ThemeManager.js\";\r\nimport { Login } from \"./Login.js\";\r\nimport { Module, File } from \"../compiler/parser/Module.js\";\r\nimport { ViewModeController } from \"./gui/ViewModeController.js\";\r\nimport { ErrorManager } from \"./gui/ErrorManager.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { DatabaseTool } from \"../tools/DatabaseTools.js\";\r\nimport { MainBase } from \"./MainBase.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { DatabaseExplorer } from \"./gui/DatabaseExplorer.js\";\r\nimport { ProgramControlButtons } from \"./gui/ProgramControlButtons.js\";\r\nimport { ResultsetPresenter } from \"./gui/ResultsetPresenter.js\";\r\nimport { Notifier } from \"../communication/Notifier.js\";\r\nimport { checkIfMousePresent } from \"../tools/HtmlTools.js\";\r\nimport { WaitOverlay } from \"./gui/WaitOverlay.js\";\r\nimport { HistoryViewer } from \"./gui/HistoryViewer.js\";\r\n\r\nexport class Main implements MainBase {\r\n    isEmbedded(): boolean {\r\n        return false;\r\n    }\r\n\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    // VORSICHT: ggf. Module -> any\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.projectExplorer.getCurrentlyEditedModule();\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n        this.projectExplorer.setModuleActive(module);\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n    getDatabaseTool(): DatabaseTool {\r\n        return this.databaseTool;\r\n    }\r\n\r\n    getDatabaseExplorer():DatabaseExplorer {\r\n        return this.databaseExplorer;\r\n    }\r\n\r\n    getResultsetPresenter(): ResultsetPresenter {\r\n        return this.resultsetPresenter;\r\n    }\r\n\r\n    getWaitOverlay(): WaitOverlay {\r\n        return this.waitOverlay;\r\n    }\r\n\r\n    getHistoryViewer(): HistoryViewer {\r\n        return this.historyViewer;\r\n    }\r\n\r\n    workspaceList: Workspace[] = [];\r\n    workspacesOwnerId: number;\r\n\r\n    // monaco_editor: monaco.editor.IStandaloneCodeEditor;\r\n    editor: Editor;\r\n    currentWorkspace: Workspace;\r\n    projectExplorer: ProjectExplorer;\r\n    teacherExplorer: TeacherExplorer;\r\n    networkManager: NetworkManager;\r\n    actionManager: ActionManager;\r\n    mainMenu: MainMenu;\r\n\r\n    login: Login;\r\n\r\n    compiler: Compiler;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    bottomDiv: BottomDiv;\r\n\r\n    startupComplete = 2;\r\n    waitForGUICallback: () => void;\r\n\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    user: UserData;\r\n    userDataDirty: boolean = false;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    rightDiv: RightDiv;\r\n\r\n    viewModeController: ViewModeController;\r\n\r\n    databaseTool: DatabaseTool;\r\n\r\n    databaseExplorer: DatabaseExplorer;\r\n\r\n    resultsetPresenter: ResultsetPresenter;\r\n\r\n    notifier: Notifier;\r\n\r\n    waitOverlay: WaitOverlay = new WaitOverlay(jQuery('.bitteWarten'));\r\n    historyViewer: HistoryViewer = new HistoryViewer(this, jQuery('.jo_historyTab'));\r\n\r\n    initGUI() {\r\n\r\n        checkIfMousePresent();\r\n\r\n        this.login = new Login(this);\r\n        this.login.initGUI();\r\n\r\n        this.databaseTool = new DatabaseTool(this);\r\n        this.databaseExplorer = new DatabaseExplorer(this, jQuery(\".jo_db_tree\"));\r\n\r\n        this.actionManager = new ActionManager(null, this);\r\n        this.actionManager.init();\r\n\r\n        this.networkManager = new NetworkManager(this, jQuery('#bottomdiv-outer .jo_updateTimerDiv'));\r\n\r\n        let sliders = new Sliders(this);\r\n        sliders.initSliders();\r\n        this.mainMenu = new MainMenu(this);\r\n        this.projectExplorer = new ProjectExplorer(this, jQuery('#leftpanel>.jo_projectexplorer'));\r\n        this.projectExplorer.initGUI();\r\n\r\n        this.bottomDiv = new BottomDiv(this, jQuery('#bottomdiv-outer>.jo_bottomdiv-inner'), jQuery('body'));\r\n\r\n        this.rightDiv = new RightDiv(this, jQuery('#rightdiv-inner'));\r\n        this.rightDiv.initGUI();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.themeManager = new ThemeManager();\r\n\r\n        this.viewModeController = new ViewModeController(jQuery(\"#view-mode\"), this);\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n        new ProgramControlButtons(this, jQuery('#controls'));\r\n\r\n        this.resultsetPresenter = new ResultsetPresenter(this, jQuery('.jo_bottomdiv-inner'));\r\n\r\n        this.notifier = new Notifier(this);\r\n\r\n    }\r\n\r\n\r\n    initEditor() {\r\n        this.editor = new Editor(this, true, false);\r\n        new Formatter().init();\r\n        // this.monaco_editor = \r\n        this.editor.initGUI(jQuery('#editor'));\r\n\r\n        let that = this;\r\n        jQuery(window).on('resize', (event) => {\r\n            jQuery('#bottomdiv-outer').css('height', '450px');\r\n            jQuery('#editor').css('height', (window.innerHeight - 450 - 30 - 2) + \"px\");\r\n            that.editor.editor.layout();\r\n            jQuery('#editor').css('height', \"\");\r\n\r\n        });\r\n\r\n        jQuery(window).trigger('resize');\r\n\r\n        this.checkStartupComplete();\r\n    }\r\n\r\n    initTeacherExplorer(classdata: ClassData[]) {\r\n        this.teacherExplorer = new TeacherExplorer(this, classdata);\r\n        this.teacherExplorer.initGUI();\r\n    }\r\n\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    start() {\r\n\r\n        if (this.waitForGUICallback != null) {\r\n            this.waitForGUICallback();\r\n        }\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.getMonacoEditor().layout();\r\n        }, 200);\r\n\r\n        this.compiler = new Compiler(this);\r\n\r\n        this.startTimer();\r\n\r\n        $(window).on('unload', function() {\r\n            \r\n            if(navigator.sendBeacon && that.user != null){\r\n                that.networkManager.sendUpdates(null, false);\r\n                that.networkManager.sendUpdateUserSettings(() => {});\r\n            }\r\n            \r\n        });\r\n\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n                this.projectExplorer.renderErrorCount(this.currentWorkspace, errors);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                if (this.projectExplorer) {\r\n                    this.version++;\r\n                }\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    removeWorkspace(w: Workspace) {\r\n        this.workspaceList.splice(this.workspaceList.indexOf(w), 1);\r\n    }\r\n\r\n    restoreWorkspaces(workspaces: Workspaces) {\r\n\r\n        this.workspaceList = [];\r\n        this.currentWorkspace = null;\r\n        // this.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\" , \"text\"));\r\n        this.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        let currentWorkspace: Workspace = null;\r\n\r\n        for (let ws of workspaces.workspaces) {\r\n\r\n            let workspace: Workspace = Workspace.restoreFromData(ws, this);\r\n            this.workspaceList.push(workspace);\r\n            if (ws.id == this.user.currentWorkspace_id && !ws.isFolder) {\r\n                currentWorkspace = workspace;\r\n            }\r\n        }\r\n\r\n        this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n\r\n        if (currentWorkspace == null && this.workspaceList.length > 0) {\r\n            for(let ws of this.workspaceList){\r\n                if(!ws.isFolder){\r\n                    currentWorkspace = this.workspaceList[0];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (currentWorkspace != null) {\r\n            this.projectExplorer.setWorkspaceActive(currentWorkspace, null, true);\r\n        }\r\n\r\n        if (this.workspaceList.length == 0) {\r\n\r\n            Helper.showHelper(\"newDatabaseHelper\", this, this.projectExplorer.workspaceListPanel.$captionElement);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    createNewWorkspace(name: string, owner_id: number): Workspace {\r\n        return new Workspace(name, this, owner_id);\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Main } from \"./Main.js\";\r\n\r\n\r\njQuery(function () {\r\n\r\n    let main = new Main();\r\n\r\n    //@ts-ignore\r\n    window.require.config({ paths: { 'vs': 'lib/monaco-editor/dev/vs' } });\r\n    //@ts-ignore\r\n    window.require.config({\r\n        'vs/nls': {\r\n            availableLanguages: {\r\n                '*': 'de'\r\n            }\r\n        },\r\n        ignoreDuplicateModules: [\"vs/editor/editor.main\"]\r\n    });\r\n\r\n    //@ts-ignore\r\n    window.require(['vs/editor/editor.main'], function () {\r\n\r\n        main.initEditor();\r\n        main.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        main.bottomDiv.initGUI();\r\n\r\n        // main.loadWorkspace();\r\n\r\n\r\n    });\r\n\r\n    main.initGUI();\r\n\r\n});","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\n__webpack_require__(248);\n__webpack_require__(766);\n__webpack_require__(581);\n__webpack_require__(972);\n__webpack_require__(912);\n__webpack_require__(113);\n__webpack_require__(373);\n__webpack_require__(576);\n__webpack_require__(522);\n__webpack_require__(908);\n__webpack_require__(937);\nvar __webpack_exports__ = __webpack_require__(172);\n"],"names":["runtime","exports","undefined","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","GenStateSuspendedStart","GenStateExecuting","GenStateCompleted","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","globalThis","Function","PerformanceCollector","static","url","startTime","pe","performanceData","find","count","sumTime","dt","Math","round","performance","now","performanceDataCount","lastTimeSent","request","data","ajax","successCallback","errorCallback","showNetworkBusy","time","$","JSON","stringify","contentType","success","response","registerPerformanceEntry","message","jqXHR","statusText","status","busy","jQuery","css","WDatabase","version","db","id","statements","published_to","description","templateDump","based_on_template_id","owner_id","CacheManager","fetchTemplateFromCache","databaseId","callback","that","cacheAvailable","getCache","cache","match","databaseIdToCacheIdentifier","arrayBuffer","buffer","Uint8Array","catch","saveTemplateToCache","put","Response","caches","open","NotifierClient","main","networkManager","unsentMessages","connect","window","location","protocol","startsWith","host","connection","WebSocket","onerror","onError","onclose","event","onClose","onmessage","onMessage","onopen","command","token","sendIntern","setTimeout","forcedUpdateEvery","counterTillForcedUpdate","disconnect","send","console","log","parse","sendUpdates","TemplateUploader","uploadCurrentDatabase","workspace_id","dump","reason","waitOverlay","show","getDatabaseTool","export","pako","deflate","uploadIntern","alert","hide","processData","headers","NetworkManager","$updateTimerDiv","ownUpdateFrequencyInSeconds","teacherUpdateFrequencyInSeconds","updateFrequencyInSeconds","secondsTillNextUpdate","errorHappened","initializeTimer","attr","interval","clearInterval","setInterval","user","forceUpdate","$rect","initializeNotifierClient","notifierClient","sendIfNothingIsDirty","projectExplorer","writeEditorTextToFile","userDataDirty","sendUpdateUserSettings","wdList","fdList","ws","workspaceList","saved","getWorkspaceData","m","moduleStore","getModules","file","text","getProgramTextFromMonacoModel","getFileData","workspacesWithoutFiles","files","workspacesOwnerId","userId","language","currentWorkspaceId","getCurrentWorkspace","getModifiedWorkspaces","updateWorkspaces","sendCreateWorkspace","wd","is_testuser","random","entity","getDatabaseSettings","workspaceId","setNewSecret","kind","secretKind","secret","setNameAndPublishedTo","databaseName","publishedTo","sendCreateFile","sendDuplicateWorkspace","workspace","sendDistributeWorkspace","klasse","student_ids","setWorkspaceActive","database_as_template_id","newTemplateId","class_id","sendDeleteWorkspaceOrFile","settings","current_workspace_id","getNewStatements","version_before","database","newStatements","firstNewStatementIndex","AddDatabaseStatements","statements_before","new_version","fetchDatabase","cacheManager","fromDatabaseData","fetchTemplate","template","inflate","xhrFields","responseType","fetchTemplateList","user_id","templateList","sendUpdatesRequest","sendUpdatesResponse","idToRemoteWorkspaceDataMap","Map","fileIdsSended","workspaces","set","newWorkspaceNames","remoteWorkspace","filter","createNewWorkspaceFromWorkspaceData","get","idToRemoteFileDataMap","fd","idToModuleMap","fileId","remoteFileData","fileListPanel","removeElement","currentWorkspace","removeModule","indexOf","model","setValue","lastSavedVersionId","getAlternativeVersionId","remoteFile","createFile","join","workspaceListPanel","sortElements","withSort","w","createNewWorkspace","sql_history","path","isFolder","split","panelElement","externalElement","iconClass","addElement","fileData","ae","f","dirty","identical_to_repository_version","getNewModule","putModule","rollback","TokenType","LexerState","TokenTypeReadable","identifier","integerConstant","floatingPointConstant","booleanConstant","stringConstant","charConstant","true","false","keywordRename","keywordDistinct","keywordTo","keywordAlter","keywordCommit","keywordAdd","keywordDelete","keywordSelect","keywordInsert","keywordInto","keywordValues","keywordUpdate","keywordSet","keywordNo","keywordUse","keywordCreate","keywordReferences","keywordPrimary","keywordForeign","keywordTable","keywordTables","keywordColumn","keywordDrop","keywordUnique","keywordKey","keywordIndex","keywordConstraint","keywordModify","keywordCascade","keywordRestrict","keywordAction","keywordAutoincrement","keywordFrom","keywordWhere","keywordGroup","keywordBy","keywordHaving","keywordOrder","keywordAscending","keywordDescending","keywordNulls","keywordFirst","keywordLast","keywordIs","keywordNull","keywordDatabase","keywordAnd","keywordOr","keywordNot","keywordJoin","keywordNatural","keywordLeft","keywordCross","keywordInner","keywordOuter","keywordOn","keywordAs","keywordLimit","keywordOffset","keywordIn","keywordNotIn","keywordLike","keywordCollate","keywordDefault","keywordComment","keywordEngine","keywordCharset","keywordCharacter","keywordStart","keywordTransaction","keywordIf","keywordExists","keywordLock","keywordUnlock","keywordWrite","keywordRead","leftBracket","rightBracket","leftSquareBracket","rightSquareBracket","leftCurlyBracket","rightCurlyBracket","leftRightSquareBracket","dot","minus","modulo","plus","multiplication","division","singleQuote","doubleQuote","identifierQuote","lower","greater","equal","lowerOrEqual","greaterOrEqual","concatenation","semicolon","colon","comma","backslash","at","hash","pipe","space","tab","newline","identifierChar","comment","endofSourcecode","specialCharList","notEqual","linefeed","keywordList","EscapeSequenceList","endChar","Lexer","spaceTokens","correspondingBracket","tokenTypesToMerge","first","second","merged","isNot","isNotNull","isNull","lex","input","replace","tokenList","errorList","bracketError","bracketStack","pos","line","column","nonSpaceLastTokenType","nonSpaceLastToken","tokens","errors","currentChar","nextChar","mainState","bracketOpen","bracketClosed","setBracketError","checkClosingBracket","tt","openBracket","char","specialCharToken","pushToken","lexMultilineComment","isDigit","lexEndofLineComment","lexNumber","position","lexStringConstant","lexSpace","lexAnnotation","lexQuotedIdentifier","lexIdentifierOrKeyword","s","pushError","t","tripel","newLength","errorLevel","level","a","base","charCode","charCodeAt","posStart","posEnd","substring","lexCharacterConstant","escapeChar","beginChar","isDoubleQuotedIdentifier","lastCharWasNewline","commentStart","sign","firstChar","radix","exponent","hasExponential","posExponentStart","exponentString","Number","parseInt","parseFloat","pow","isSpace","toLowerCase","SQLType","SQLBaseType","parameterDescriptions","checkFunction","outputFunction","canCastToList","super","binaryResultTypes","unaryOperators","ownIndex","splice","baseTypeMap","getBaseTypeName","toString","toLocaleLowerCase","baseTypes","concat","addBinaryOperation","tokenType","secondType","resultType","isCommutative","Array","isArray","map","canCastTo","type2","bt2","getBinaryResultType","operator","getUnaryResultType","booleanType","getBinaryResult","value1","value2","max","tens","SQLDerivedType","baseType","parameterValues","parameters","returnBaseType","substr","textTypes","varcharType","ci","pv","v","charType","textType","tinyTextType","mediumTextType","longTextType","floatTypes","decimalType","vk","trunc","nk","numericType","doubleType","realType","floatType","numberTypes","intType","integerType","tinyIntType","smallIntType","mediumIntType","bigIntType","timeType","dateType","dateTimeType","timestampType","nullType","numericTypes","timeTypes","addBaseTypes","numericBinaryOperators","comparisonOperators","j","characterTypes","booleanOperations","bt","Parser","lookahead","endToken","beginStatementKeywords","identifierMap","completionHints","sqlStatements","addCompletionHint","initializeLookahead","lastToken","parseMain","ct","token1","lastComment","commentBefore","cct","nextToken","quickFix","assign","skip","expect","invokeSemicolonAngel","expectedValuesArray","isOperatorOrDot","title","editsProvider","uri","resource","edit","range","startLineNumber","startColumn","endLineNumber","endColumn","severity","monaco","MarkerSeverity","getSemicolonAngel","register","expectedTokens","getEndOfPosition","p","op","operatorPrecedence","isEnd","comesToken","ret","getCurrentPosition","getCurrentPositionPlus","deltaColumns","tpos","deltaInsideToken","tokenPos","getEndOfCurrentToken","mainProgram","mainProgramEnd","afterLastStatement","semicolonAfterLastStatement","oldPos","errorsBeforeStatement","startPosition","st","parseStatement","hasErrors","ast","from","to","acceptedBySQLite","beginStatementTokens","firstBadToken","expectSemicolon","parseSelect","parseInsert","parseCreateTableOrDatabase","parseUpdate","parseDelete","parseDropTable","parseAlterTable","parseSet","parseUse","parseLockUnlock","node","omittedeStatement","endPosition","symbolTable","tableIdentifier","tableIdentifierPosition","addCompletionHintHere","parseRenameTableOrColumn","parseAlterTableAdd","parseDropColumn","newTableName","oldColumnName","oldColumnPosition","newColumnName","unique","parseAddColumn","parseAddPrimaryKey","parseAddIndex","parseModifyColumn","parseAddConstraint","fki","parseForeignKeyDefinition","foreignKeys","referencesTable","referencesColumn","referencesPosition","parseReferences","pos0","pos1","modifyColumnInfo","parseColumnDefinition","primaryKeys","index","index_name","indices","columnDefBegin","columnDef","ifExists","whereNode","whereNodeBegin","whereNodeEnd","parseTerm","columnIdentifiers","columnIdentifierPositions","valuePosBegin","valuePosEnd","parseCreateDatabase","parseCreateTable","ifNotExists","pos2","columnList","combinedPrimaryKeyColumns","foreignKeyInfoList","uniqueConstraints","primaryKeyAlreadyDefined","parsePrimaryKeyTerm","parseUniqueTerm","columnNode","isPrimary","isAutoIncrement","columns","c","uniqueConstraint","notNull","parseType","hintColumns","hintTables","hints","additionalColumns","praefix","suffix","datatypes","mappedIdentifier","getBaseType","alreadySeenKeywords","foreignKeyInfo","collate","defaultValue","fromConstantType","rightBracketPosition","valuesPosition","columnsPosition","table","alias","parseValueLists","selectNode","select","insideListTokens","outerFirst","leftBracketPosition","lv","constantType","constant","constantNode","parseConstant","columnListStart","fromNode","parentStatement","parseColumnList","columnListKeywordArray","findIndex","allColumns","fromListKeywordArray","fromStartPosition","dontHint","parseTableOrSubQuery","hintEndPosition","fromEndPosition","unshift","whereKeywordArray","whereStart","groupKeywordArray","groupStart","groupByNode","parseGroupBy","orderStart","orderByNode","parseOrderBy","limitNode","parseLimit","numberOfRows","ln","offset","gbn","tokenTypesAfterGroupBy","term","having","obnList","obn","leftSide","parseAtomicTableOrSubQuery","parseJoinOperator","rightSide","firstOperand","secondOperand","on","selectStatement","subquery","query","tokenTypesAfterListEnd","allowAliases","distinct","columnTerm","parseTermBinary","precedence","left","parseUnary","operators","right","binaryOp","parseBracket","unaryOp","operand","tt1","isStringConstant","parseDotOrArrayChains","identifier1","position1","parseMethodCallParameters","callMethod","operands","nodes","commaPositions","secondIdentifier","identifierLeft","identifierRight","parseList","list","elements","constantTypes","tokenBeforeBracket","listNode","termInsideBrackets","parameter","Column","isPrimaryKey","isNullable","cs","typeMatch1","completeTypeSQL","baseTypeIdentifier","commaSeparatedParameters","trim","fromColumnStructure","Table","ts","size","tsList","tables","fromTableStructure","columnStructureToColumnMap","referencedCs","references","referencedColumn","SymbolTable","parentSymbolTable","positionFrom","positionTo","childSymbolTables","symbols","symbolList","parent","extractDatabaseStructure","databaseStructure","fromTableStructureList","storeTableSymbols","storeSymbol","posOfDefinition","referencedOnPositions","symbol","findTableAtPosition","containsPosition","shortestSymbolTableContainingPosition","shortestPosition","st1","findTable","findTables","findColumn","SQLMethodParameter","SQLMethod","isAggregating","returnType","acceptsStarParameter","SQLMethodStore","instance","methods","pushOneParameterMethod","countMethod","getMethods","parameterType","escapeHtml","unsafe","twoDez","z","isDate","inputText","opera1","opera2","lopera1","lopera2","pdate","dd","mm","yy","lyear","isDateTime","dateStr","SymbolResolver","databaseTool","symbolTableStack","start","mainSymbolTable","statement","astNode","resolveSelect","resolveInsert","resolveCreateTable","resolveUpdate","resolveDelete","resolveDropTable","resolveAlterTable","getCurrentSymbolTable","pushNewSymbolTable","resultTable","joinedTables","resolveTableOrSubQuery","resolveTerm","c1","sqlType","whereType","whereSymbolTable","oldColumn","ciPos","createTableNode","thisTable","cn","tosNode","tableList","storeTableIntoSymbolTable","tableAlias","resolveNotIn","typeLeft","typeRight","operandType","resultType1","resolveMethodCall","resolveIdentifier","resolveDot","selectTable","tableSymbols","getInstance","found","methodParameter","operatorString","leftType","pType","element","elementType","tableCompletionTo","insertColumn","selectColumn","valueList","destType","CompilerStatus","Compiler","compilerStatus","compiledButNothingToRun","compile","compiling","t0","lexer","clear","lexed","getCurrentlyEditedModule","getBottomDiv","errorManager","showParenthesisWarning","startRegistering","parser","symbolResolver","compilerMessage","healSemicolons","readyToRun","Module","oldErrorDecorations","identifierPositions","methodCallPositions","uriCounter","uriMap","Uri","scheme","editor","createModel","updateOptions","tabSize","onDidChangeContent","versionId","isEmbedded","main1","text_before_revision","student_edited_after_revision","bottomDiv","homeworkManager","showHomeWorkRevisionButton","renderHomeworkButton","fromPosition","toPosition","hintKeywords","ch","fromColumn","fromLine","toColumn","toLine","hintColumnsOfTable","toUpperCase","chList","getSQLSTatementsAtSelection","sel","selStart","selEnd","stmt","compare","b","getSQLStatementAtPosition","lineNumber","getCompletionHint","bestCh","bestRangeLength","rangeLength","f1","submitted_date","file_type","findSymbolTableAtPosition","getErrorCount","ec","el","getValue","EndOfLinePreference","LF","addIdentifierPosition","positionList","getElementAtPosition","positionsOnLine","bestFoundPosition","copy","getSortedAndFilteredErrors","sort","e1","e2","errorLevelCompare","level1","level2","maxUriNumber","ModuleStore","modules","moduleMap","findModuleById","module_id","ms","findModuleByFile","getFirstModule","mo","isDirty","includeSystemModules","excludedModuleName","removeModuleWithFile","getModule","moduleName","openContextMenu","items","x","y","mousePointer","PointerEvent","$contextMenu","$openSubMenu","parentMenuItem","mi","caption","link","$item","subMenu","color","ev","stopPropagation","remove","document","off","$link","width","top","append","e","leftRight","innerWidth","xp","topBottom","innerHeight","yp","makeTabs","tabDiv","headings","not","tabs","target","removeClass","addClass","trigger","makeDiv","klass","div","jo_mouseDetected","animateToTransparent","$element","cssProperty","startColorRgb","duration","colorPraefix","delta","animate","copyTextToClipboard","navigator","clipboard","writeText","textArea","createElement","style","body","appendChild","focus","execCommand","removeChild","fallbackCopyTextToClipboard","DatabaseSettingsDialog","init","$dialog","showMainWindow","saveNameAndPublishedTo","setValues","$copyButton","prop","each","n","checked","secrets","is_admin","is_schooladmin","empty","Workspace","withFiles","currentFileId","currentlyOpenModule","permissions","database_id","renderSettingsButton","$buttonDiv","$htmlFirstLine","$button","addEventListener","preventDefault","restoreFromData","getModuleByMonacoModel","ActionManager","$mainElement","actions","keyEntries","buttons","executeKeyDownEvent","actionIdentifier","action","registerAction","button","active","isActive","setActive","activeElement","tagName","keyCode","ctrlKey","shiftKey","altKey","actionEntries","actionEntry","ErrorManager","$bottomDiv","$mainDiv","oldDecorations","minimapColor","lightBulbOnClickFunctionList","$bracket_warning","children","getMonacoEditor","showErrors","errorCountMap","$errorDiv","markers","decorations","$errorList","linesDecorationsClassName","borderLeftClass","lightBulbClass","class","onClickFunction","edits","executeEdits","r","Range","forceMoveMarkers","processError","Warning","Info","relatedInformation","options","minimap","MinimapPosition","Inline","setModelMarkers","deltaDecorations","$file","$error","registerLightbulbOnClickFunctions","locf","$errorDivs","$div","$lineColumn","category","$message","showError","Main","setModuleActive","revealRangeInCenter","className","HomeworkManager","showRevisionActive","$homeworkTab","initGUI","$homeworkTabLeft","$homeworkTabRight","prepend","$showRevisionButton","hideRevision","showRevision","hideHomeworkRevisionButton","originalModel","modifiedModel","diffEditor","createDiffEditor","getElementById","enableSplitViewResizing","originalEditable","readOnly","renderSideBySide","setModel","original","modified","dispose","attachToWorkspaces","daysWithModules","dateString","date","Date","stringToDate","dateWithoutTime","getDate","getMonth","getFullYear","dateToStringWithoutTime","dwm","day","m1","m2","localeCompare","moduleWithWorkspace","BottomDiv","showHomeworkTab","hideHomeworkTab","MyCompletionItemProvider","triggerCharacters","keywordCompletionItems","keywordToSnippetMap","setupKeywordCompletionItems","provideCompletionItems","wfc","provideCompletionItemsIntern","sw","_contentWidgets","widget","toggleDetails","isStringLiteral","textUntilPosition","getValueInRange","textAfterPosition","completionHint","completionItems","addKeywordCompletionItems","dotMatch","ibMatch","identifierAndBracketAfterCursor","addIdentifierCompletionItems","addDotCompletionItems","word","getWordUntilPosition","replaceWordRange","insertAfterCursorRange","item","insertText","suggestions","textAfterDot","textBeforeDot","rangeToReplace","label","detail","filterText","insertTextRules","languages","CompletionItemInsertTextRule","KeepWhitespace","CompletionItemKind","Field","tableIdentifiers","columnIdentifier","InsertAsSnippet","Snippet","Class","sortText","columList","withTable","snippet","Keyword","posMin","posMax","watchDog","posOld","arguments","MySignatureHelpProvider","signatureHelpTriggerCharacters","signatureHelpRetriggerCharacters","provideSignatureHelp","compileIfDirty","provideSignatureHelpLater","getModel","methodCallPosition","rightMostPosition","mcp","identifierPosition","getSignatureHelp","parameterIndex","cp","activeParameter","activeSignature","signatures","MyHoverProvider","provideHover","selection","getSelection","getWordUnderCursor","keywordDescriptions","contents","getValueLengthInRange","end","isInsideIdentifierOrArrayDescriptor","begin","isInsideOperator","widenDeclaration","isInsideIdentifierChain","MyCodeActionProvider","provideCodeActions","diagnostics","isPreferred","MyReferenceProvider","provideReferences","usagePositions","referencePositions","upInCurrentModule","up","Helper","targetElement","direction","$helper","bottom","height","html","close","fadeIn","fadeOut","mainBase","helperHistory","flag","openHelper","Editor","showMinimap","cw","dontPushNextCursorMove","lastTime","elementDecoration","extensions","conf","onEnterRules","beforeText","afterText","indentAction","IndentAction","IndentOutdent","appendText","None","removeText","comments","lineComment","blockComment","brackets","autoClosingPairs","surroundingPairs","setLanguageConfiguration","setMonarchTokensProvider","defaultToken","tokenPostfix","ignoreCase","escapes","keywords","builtinFunctions","builtinVariables","pseudoColumns","tokenizer","root","include","cases","whitespace","numbers","strings","string","complexIdentifiers","quotedIdentifier","scopes","defineVscSQL","defineTheme","inherit","rules","foreground","fontStyle","colors","lightbulb","enabled","lineDecorationsWidth","peekWidgetDefaultFocus","fixedOverflowWidgets","quickSuggestions","quickSuggestionsDelay","fontSize","fontFamily","fontWeight","roundedSelection","selectOnLineNumbers","automaticLayout","scrollBeyondLastLine","occurrencesHighlight","autoIndent","dragAndDrop","formatOnType","formatOnPaste","suggestFontSize","suggestLineHeight","suggest","localityBonus","insertMode","parameterHints","cycle","mouseWheelZoom","scrollbar","vertical","horizontal","theme","mouseWheelListener","changeEditorFontSize","deltaY","onDidChangeConfiguration","hasChanged","EditorOption","fontInfo","onDidChangeCursorPosition","onDidChangeModel","removeEventListener","passive","setActiveAfterExternalModelSet","registerHoverProvider","registerCompletionItemProvider","registerCodeActionProvider","registerReferenceProvider","registerSignatureHelpProvider","onMouseDown","MouseTargetType","GUTTER_GLYPH_MARGIN","GUTTER_LINE_NUMBERS","isAfterLines","onMarginMouseDown","remeasureFonts","addActions","onDidType","insertEndOfComment","newLine","newColumn","setPosition","getPosition","prevLine","getLineContent","trimRight","endsWith","getLineCount","spacesAtBeginningOfLine","trimLeft","setFontSize","fontSizePx","getTime","editorfs","getOptions","viewModeController","saveFontSize","factor","documentElement","setProperty","dynamic","newEditorFs","addAction","keybindings","KeyMod","CtrlCmd","KeyCode","KEY_K","precondition","keybindingContext","contextMenuGroupId","contextMenuOrder","run","ed","getAction","Enter","getActionManager","isWholeLine","overviewRuler","darkColor","OverviewRulerLane","Left","executeActionActive","sqlStatement","classname","zIndex","showHelper","Formatter","autoFormatTriggerCharacters","registerDocumentFormattingEditProvider","registerOnTypeFormattingEditProvider","provideOnTypeFormattingEdits","format","deleteOverlappingRanges","provideDocumentFormattingEdits","tokenlist","lastNonSpaceToken","indentLevel","curlyBracesOpenAtLines","indentLevelAtSwitchStatements","switchHappend","lastTokenWasNewLine","roundBracketsOpen","replaceBetween","insertSpaces","deleteSpaces","openedAtLine","repeat","nextToken1","nextToken2","lastToken1","lastToken2","isBinaryOperator","lastTokenIsOperator","nextTokenIsOperator","getNextNonSpaceToken","beginNextLine","token2","currentIndentation","il","correctIndentation","lowerGeneric","lowerBelongsToGenericExpression","greaterGeneric","greaterBelongsToGenericExpression","tokenBefore","spaces","currentIndex","numberOfSpaces","WorkerSim","initsql","initSqlJs","locateFile","scriptDirectory","postMessageToClient","postMessage","SQL1","SQL","createDb","worker","terminate","buff","config","ready","results","exec","row","finished","DatabaseTool","databaseDirectoryEntries","queryId","querySuccessCallbacksMap","queryErrorCallbackMap","initializeWorker","queries","callbackAfterInitializing","callbackAfterRetrievingStructure","getWaitOverlay","javaOnlineDir","jo_doc","Worker","querySuccessCallback","queryErrorCallback","delete","queryCount","execQuery","setProgress","shift","executeQuery","retrieveDatabaseStructure","sql","params","getDirectoryEntries","getJSON","entries","sql1","result1","parseDatabaseStructure","tableNameToStructureMap","tableName","tableSQL","tableStructure","completeSQL","columnArray","foreignKeyList","columnArray1","dflt_value","columnStructure","typeLengths","fkInfo","referencesRawData","sqliteMagicBytes","StatementCleaner","MaxRowsPerInsert","clean","sqlCleaned","cleanCreateTableStatement","cleanInsertStatement","statementHeader","escapeIdentifier","lines","vline","cleanValue","cleanColumnDef","cleanForeignKeyInfo","pkc","escapeIdentifiers","uk","fkiString","onDelete","onUpdate","MySqlImporter","loadFromUrl","unzipURL","fetch","importFromText","loadFromFile","unzipFile","reader","FileReader","onload","readAsText","zip","ZipReader","HttpReader","unzipIntern","BlobReader","getEntries","filename","getData","TextWriter","onprogress","lexOutput","createTableNodes","insertNodes","tableModifyingNodes","tmn","findCreateTableNode","autoIncrementColumn","pcn","findCreateTableColumnNode","mci","mcn","fk","indexIdentifier","makeDatabase","tableNode","statementCleaner","dbTool","binDump","DatabaseImportExport","ld","ab","getDumpType","readAsArrayBuffer","saveToFile","prompt","isBlob","blob","Blob","msSaveOrOpenBlob","createEvent","download","href","URL","createObjectURL","dataset","downloadurl","initEvent","dispatchEvent","downloadFile","NewDatabaseDialog","$templatelist","templatelist","tle","$tle","ownerName","$templateName","$dropZone","evt","originalEvent","dataTransfer","dropEffect","importFile","$dumpFileInput","createMode","hasClass","workspaceData","createWorkspace","$template","template_database_id","code","tIndex","otherDatabaseId","template_id","accordionElement","importer","isDatabase","dbUncompressed","MainMenu","currentSubmenu","openSubmenusOnMousemove","mainMenu","switchTheme","initMenu","setTheme","menu","initMenuitemCallbacks","opensubmenu","AccordionPanel","accordion","flexWeight","newButtonClass","buttonNewTitle","defaultIconClass","withDeleteButton","withFolders","enableDrag","acceptDropKinds","dontSortElements","addPanel","$newFolderAction","addFolder","newElement","newFolderCallback","scrollIntoView","$collapseAllAction","collapseAll","slideUp","$captionElement","$listElement","setFixed","fixed","grow","enableNewButton","$buttonNew","getCurrentlySelectedPath","pathArray","selectedElement","getSelectedElement","compareWithPath","name1","path1","isFolder1","name2","path2","isFolder2","cmp","getElementIndex","insertElement","insertIndex","$elements","elementAtIndex","before","renderElement","renameElement","renderOuterHtmlElements","$accordionDiv","after","newFilesElementCallback","$htmlSecondLine","insertAfter","selectCallback","$listOuter","$ce","$li","targetGrow","parts","toggleClass","currentlyDraggedElementKind","element1","currentlyDraggedElement","moveElement","expanded","aName","sortName","bName","setTextAfterFilename","cssClass","expandedCollapsed","pathHtml","addElementActionCallback","$elementAction","$filedragpart","effectAllowed","dropElementCallback","pathIsCollapsed","slideDown","pressTimer","contextmenuHandler","contextMenuItems","renameCallback","newDatabaseElementCallback","contextMenuProvider","cmi","pageX","pageY","clearTimeout","getChildElements","deleteCallback","elementToMove","destinationFolder","destinationPath","movedElements","sourcePath","oldPathLength","moveCallback","folder","pointPos","elementWithText","elementToReplace","renameDoneCallback","selectionRange","$input","setSelectionRange","newValue","makeEditable","newText","invokeCallback","ae1","findElement","pathString","elPath","getPathString","ps","setElementClass","setCaption","Accordion","$html","panel","DistributeToStudentsDialog","classes","studentCount","$studentList","student","students","$studentLine","$studentClass","$studentName","rufname","familienname","$dialogMain","distributeWorkspace","ProjectExplorer","$projectexplorerDiv","programPointerModule","programPointerDecoration","lastOpenModule","initFilelistPanel","initWorkspacelistPanel","successfulNetworkCommunicationCallback","newName","callbackIfSuccessful","is_teacher","$homeworkButtonDiv","$newWorkspaceAction","removeWorkspace","databaseExplorer","getResultsetPresenter","dest","droppedElement","dropEffekt","$homeAction","onHomeButtonClicked","workspaceAccordionElement","cmiList","teacherExplorer","classPanel","restoreOwnWorkspaces","renderFiles","moduleList","renderWorkspaces","renderErrorCount","errorCount","errorCountS","callbackAfterDatabaseFetched","initializeDatabaseTool","currentWorkspace_id","nonSystemModules","notifier","refreshAfterRetrievingDBStructure","getHistoryViewer","clearAndShowStatements","cem","editorState","saveViewState","restoreViewState","setCurrentlyEditedModule","showProgramPointer","programPointerPosition","revealRangeInCenterIfOutsideViewport","Center","beforeContentClassName","showProgramPointerPosition","hideProgramPointerPosition","setExplorerColor","RightDiv","$rightDiv","isWholePage","$tabs","$headings","rightdiv_width","$wholeWindow","Sliders","initSliders","md","clientX","dx","moveLeftPanel","clientY","dy","moveBottomDiv","moveRightDiv","sliderknobLeft","stopImmediatePropagation","sliderknobRight","$editor","mewidth","layout","meheight","$leftPanel","TeacherExplorer","classData","removePanels","studentPanel","initStudentPanel","initClassPanel","renderClasses","ws_userId","ownWorkspaces","currentOwnWorkspace","restoreWorkspaces","ea","renderStudents","userDataList","ud","classDataList","cd","ThemeManager","themes","initThemes","internalSwitchTheme","monacoTheme","cssColors","highlightColor","Dialog","heading","placeholder","$buttonRow","waitMessage","visible","visibility","UserMenu","$userSettingsButton","PasswordChanger","dialog","$oldPassword","$newPassword1","$newPassword2","waitDiv","oldPassword","newPassword","Login","$loginSpinner","loginHappened","username","password","viewModes","classDiagram","waitForGUICallback","initTeacherExplorer","classdata","initViewMode","startupComplete","errorMessage","resultsetPresenter","ViewModeController","$buttonsContainer","$buttonMap","highContrast","editorHasFullWidth","$buttonEditorFullscreen","$buttonPresentationMode","$buttonMonitorMode","am","actionManager","toggleEditorFullwidth","setMode","mode","saveSettings","otherMode","viewMode","viewModeChosen","themeManager","getChosenViewMode","toggleHighContrast","monitor","presentation","SemicolonAngel","semicolonPositions","isThereAgain","oldEvidence","firstSeenMs","currentlyEditedModule","cursorLine","isCurrentModule","editOperations","abs","setSelection","DatabaseExplorer","collapsedTables","refresh","dbstructure","$table","renderTable","isCollapsed","showTable","$columns","image","referencesHtml","autoincrement","$column","$treeSwitch","$columnList","parents","ProgramControlButtons","$buttonStart","$buttonRollback","executeSelectedStatements","ResultsetPresenter","paginationSize","writeQueryListeners","showResultsBusy","showResultPending","$paginationDiv","$arrowLeft","$infoDiv","$arrowRight","paginationFrom","floor","showResults","activateButtons","paginationAll","min","addWriteQueryListener","listener","fetchSelectedStatements","hasDDLStatements","some","isDDLStatement","hasWriteStatements","isWriteStatement","executeDDLWriteStatementsEmbedded","executeDDLWriteStatementsInOnlineIDE","executeStatements","sucessfullyExecutedModifyingStatements","getDatabaseExplorer","notify","new_statements","firstStatementIndex","executeNewStatements","appendStatements","modifyingStatements","resetDatabase","executeStatementsString","fromIndex","successfullyExecutedModifyingStatements","callback1","laterSelectExists","isSelectStatement","presentResultsIntern","showErrorDecorations","minimapColors","errorlevel","$runtimeErrorsTab","$runtimeErrorsTabHeading","$errorLine","$sqlDiv","colorize","$messageDiv","$resultTabheading","$resultHeader","headerDiv","$bodyDiv","waitFunction","$header","rows","$row","cell","monacoEditor","StatementDelimiter","Notifier","isOpen","isPolling","counter","isLongPolling","longPollCounter","databaseVersion","onOpen","startLongPolling","rollbackLocal","callbackIfTooFewStatements","callbackIfDone","doRefreshDatabaseExplorer","startPolling","poll","getNewStatementsHttp","rollbackToVersion","longPoll","resp","timeout","WaitOverlay","$waitDiv","fadeOutPending","$bitteWartenText","$bitteWartenProgress","HistoryViewer","$historyPanel","panelEntries","panelEntry","makePanelEntry","makeLastButtonActive","$rollbackButton","$index","$text","$copybutton","$rollbackbutton","rollbackEmbedded","rollbackLocalNeeded","writeQueryManager","initialTemplateDump","initialStatements","writtenStatements","historyViewer","getRightDiv","rightDiv","getCompiler","compiler","semicolonAngel","matchMedia","matches","login","checkStartupComplete","initEditor","startTimer","sendBeacon","timerHandle","require","paths","availableLanguages","ignoreDuplicateModules","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}