{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../../../src/client/communication/AjaxHelper.ts","webpack:///../../../src/client/workspace/WDatabase.ts","webpack:///../../../src/client/communication/CacheManager.ts","webpack:///../../../src/client/communication/NetworkManager.ts","webpack:///../../../../src/client/compiler/lexer/Token.ts","webpack:///../../../../src/client/compiler/lexer/Lexer.ts","webpack:///../../../../src/client/compiler/parser/SQLTypes.ts","webpack:///../../../../src/client/compiler/parser/Parser.ts","webpack:///../../../../src/client/compiler/parser/SQLTable.ts","webpack:///../../../../src/client/compiler/parser/SymbolTable.ts","webpack:///../../../../src/client/compiler/parser/SQLMethods.ts","webpack:///../../../src/client/tools/StringTools.ts","webpack:///../../../../src/client/compiler/parser/SymbolResolver.ts","webpack:///../../../src/client/compiler/Compiler.ts","webpack:///../../../../src/client/compiler/parser/Module.ts","webpack:///../../../src/client/tools/TemplateUploader.ts","webpack:///../../../../src/client/main/gui/DatabaseSettingsDialog.ts","webpack:///../../../src/client/workspace/Workspace.ts","webpack:///../../../../src/client/main/gui/ActionManager.ts","webpack:///../../../src/client/tools/HtmlTools.ts","webpack:///../../../../src/client/main/gui/ErrorManager.ts","webpack:///../../../../src/client/main/gui/HomeworkManager.ts","webpack:///../../../../src/client/main/gui/BottomDiv.ts","webpack:///../../../../src/client/main/gui/MyCompletionItemProvider.ts","webpack:///../../../../src/client/main/gui/MySignatureHelpProvider.ts","webpack:///../../../../src/client/main/gui/MyHoverProvider.ts","webpack:///../../../../src/client/main/gui/MyCodeActionProvider.ts","webpack:///../../../../src/client/main/gui/MyReferenceProvider.ts","webpack:///../../../../src/client/main/gui/Helper.ts","webpack:///../../../../src/client/main/gui/Editor.ts","webpack:///../../../../src/client/main/gui/VscSql.ts","webpack:///../../../../src/client/main/gui/Formatter.ts","webpack:///../../../src/client/tools/DatabaseTools.ts","webpack:///../../../src/client/tools/DatabaseImportExport.ts","webpack:///../../../../src/client/main/gui/MainMenu.ts","webpack:///../../../../src/client/main/gui/Accordion.ts","webpack:///../../../../src/client/main/gui/DistributeToStudentsDialog.ts","webpack:///../../../../src/client/main/gui/NewDatabaseDialog.ts","webpack:///../../../../src/client/main/gui/ProjectExplorer.ts","webpack:///../../../../src/client/main/gui/RightDiv.ts","webpack:///../../../../src/client/main/gui/Sliders.ts","webpack:///../../../../src/client/main/gui/TeacherExplorer.ts","webpack:///../../../../src/client/main/gui/ThemeManager.ts","webpack:///../../../../src/client/main/gui/Dialog.ts","webpack:///../../../../src/client/main/gui/UserMenu.ts","webpack:///../../../src/client/main/Login.ts","webpack:///../../../../src/client/main/gui/ViewModeController.ts","webpack:///../../../../src/client/compiler/parser/SemicolonAngel.ts","webpack:///../../../../src/client/main/gui/DatabaseExplorer.ts","webpack:///../../../../src/client/main/gui/ProgramControlButtons.ts","webpack:///../../../../src/client/compiler/parser/StatementCleaner.ts","webpack:///../../../../src/client/main/gui/ResultsetPresenter.ts","webpack:///../../../src/client/communication/Notifier.ts","webpack:///../../../../src/client/main/gui/WaitOverlay.ts","webpack:///../../../../src/client/main/gui/HistoryViewer.ts","webpack:///../../../src/client/main/Main.ts","webpack:///../../../src/client/main/IDEStarter.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","PerformanceCollector","url","startTime","pe","performanceData","find","count","sumTime","push","dt","Math","round","performance","now","performanceDataCount","lastTimeSent","request","data","ajax","successCallback","errorCallback","showNetworkBusy","time","$","type","async","JSON","stringify","contentType","success","response","registerPerformanceEntry","error","message","jqXHR","statusText","status","busy","jQuery","css","WDatabase","db","id","statements","published_to","version","description","templateDump","templateId","template_id","owner_id","CacheManager","databaseId","callback","that","this","cacheAvailable","getCache","cache","match","databaseIdToCacheIdentifier","then","arrayBuffer","buffer","Uint8Array","catch","put","Response","self","caches","open","TokenType","main","$updateTimerDiv","ownUpdateFrequencyInSeconds","teacherUpdateFrequencyInSeconds","updateFrequencyInSeconds","forcedUpdateEvery","secondsTillNextUpdate","errorHappened","attr","interval","clearInterval","counterTillForcedUpdate","setInterval","user","forceUpdate","sendUpdates","$rect","sendIfNothingIsDirty","projectExplorer","writeEditorTextToFile","settings","wdList","fdList","workspaceList","ws","saved","getWorkspaceData","moduleStore","getModules","file","text","getProgramTextFromMonacoModel","getFileData","workspacesWithoutFiles","files","workspacesOwnerId","userId","language","currentWorkspaceId","getCurrentWorkspace","getModifiedWorkspaces","length","updateWorkspaces","wd","is_testuser","random","entity","workspace_id","workspaceId","alert","kind","secretKind","secret","databaseName","publishedTo","workspace","klasse","student_ids","class_id","current_workspace_id","version_before","database","newStatements","firstNewStatementIndex","statements_before","new_version","cacheManager","fromDatabaseData","fetchTemplateFromCache","pako","inflate","fetchTemplate","template","saveTemplateToCache","xhrFields","responseType","user_id","templateList","sendUpdatesRequest","sendUpdatesResponse","idToRemoteWorkspaceDataMap","Map","fileIdsSended","forEach","workspaces","set","newWorkspaceNames","remoteWorkspace","filter","createNewWorkspaceFromWorkspaceData","idToRemoteFileDataMap","fd","idToModuleMap","fileId","remoteFileData","fileListPanel","removeElement","currentWorkspace","removeModule","indexOf","model","setValue","lastSavedVersionId","getAlternativeVersionId","remoteFile","createFile","join","workspaceListPanel","sortElements","withSort","w","createNewWorkspace","sql_history","path","isFolder","split","panelElement","externalElement","iconClass","addElement","fileData","ae","f","dirty","identical_to_repository_version","getNewModule","putModule","LexerState","TokenTypeReadable","identifier","integerConstant","floatingPointConstant","booleanConstant","stringConstant","charConstant","true","false","keywordRename","keywordTo","keywordAlter","keywordAdd","keywordDelete","keywordSelect","keywordInsert","keywordInto","keywordValues","keywordUpdate","keywordSet","keywordCreate","keywordReferences","keywordPrimary","keywordForeign","keywordTable","keywordColumn","keywordDrop","keywordKey","keywordAutoincrement","keywordFrom","keywordWhere","keywordGroup","keywordBy","keywordHaving","keywordOrder","keywordAscending","keywordDescending","keywordNulls","keywordFirst","keywordLast","keywordIs","keywordNull","keywordAnd","keywordOr","keywordNot","keywordJoin","keywordNatural","keywordLeft","keywordCross","keywordInner","keywordOuter","keywordOn","keywordAs","keywordLimit","keywordOffset","keywordIn","keywordNotIn","keywordLike","keywordCollate","keywordDefault","keywordEngine","keywordCharset","leftBracket","rightBracket","leftSquareBracket","rightSquareBracket","leftCurlyBracket","rightCurlyBracket","leftRightSquareBracket","dot","minus","modulo","plus","multiplication","division","singleQuote","doubleQuote","identifierQuote","lower","greater","equal","lowerOrEqual","greaterOrEqual","concatenation","semicolon","colon","comma","backslash","at","pipe","space","tab","newline","identifierChar","comment","endofSourcecode","specialCharList","'","notEqual","linefeed","keywordList","EscapeSequenceList","\"","spaceTokens","correspondingBracket","tokenTypesToMerge","first","second","merged","isNot","isNotNull","isNull","input","replace","tokenList","errorList","bracketError","bracketStack","pos","line","column","nonSpaceLastTokenType","nonSpaceLastToken","tokens","errors","currentChar","charAt","nextChar","mainState","bracketOpen","pop","bracketClosed","setBracketError","tt","openBracket","char","specialCharToken","pushToken","next","lexMultilineComment","checkClosingBracket","isDigit","lexEndofLineComment","lexNumber","lexStringConstant","lexSpace","lexAnnotation","lexQuotedIdentifier","lexIdentifierOrKeyword","pushError","position","tripel","newLength","errorLevel","level","a","base","charCode","charCodeAt","posStart","posEnd","substring","escapeChar","beginChar","isDoubleQuotedIdentifier","lastCharWasNewline","sign","firstChar","radix","exponent","posExponentStart","exponentString","Number","parseInt","parseFloat","pow","isSpace","toLowerCase","SQLType","parameterDescriptions","checkFunction","outputFunction","canCastToList","binaryResultTypes","unaryOperators","slice","ownIndex","splice","tokenType","secondType","resultType","isCommutative","Array","isArray","map","addBinaryOperation","type2","bt2","SQLBaseType","operator","booleanType","value1","value2","max","baseTypeMap","toLocaleLowerCase","baseTypes","concat","tens","baseType","parameterValues","parameters","returnBaseType","SQLDerivedType","getUnaryResultType","result","getBinaryResult","substr","textTypes","varcharType","ci","pv","v","textType","tinyTextType","mediumTextType","longTextType","floatTypes","decimalType","vk","trunc","nk","numericType","doubleType","realType","floatType","numberTypes","intType","integerType","tinyIntType","smallIntType","mediumIntType","bigIntType","dateType","dateTimeType","timestampType","nullType","numericTypes","addBaseTypes","numericBinaryOperators","comparisonOperators","characterTypes","booleanOperations","bt","isInConsoleMode","lookahead","endToken","beginStatementKeywords","completionHints","sqlStatements","addCompletionHint","initializeLookahead","lastToken","parseMain","ct","token","token1","lastComment","commentBefore","cct","quickFix","assign","nextToken","skip","invokeSemicolonAngel","isOperatorOrDot","title","editsProvider","uri","resource","edit","range","startLineNumber","startColumn","endLineNumber","endColumn","severity","monaco","MarkerSeverity","Error","getSemicolonAngel","register","expectedTokens","Parser","operatorPrecedence","op","ret","deltaColumns","getCurrentPosition","mainProgram","mainProgramEnd","afterLastStatement","isEnd","oldPos","getCurrentPositionPlus","errorsBeforeStatement","startPosition","st","parseStatement","ast","from","to","getEndOfPosition","hasErrors","acceptedBySQLite","beginStatementTokens","firstBadToken","retStatements","parseSelect","parseInsert","parseCreateTable","parseUpdate","parseDelete","parseDropTable","parseAlterTable","node","endPosition","symbolTable","tableIdentifier","tableIdentifierPosition","expect","addCompletionHintHere","parseRenameTableOrColumn","parseAddColumn","parseDropColumn","comesToken","getEndOfCurrentToken","newTableName","oldColumnName","oldColumnPosition","newColumnName","columnDefBegin","columnDef","parseColumnDefinition","whereNode","whereNodeBegin","whereNodeEnd","parseTerm","columnIdentifiers","columnIdentifierPositions","values","valuePosBegin","valuePosEnd","columnList","combinedPrimaryKeyColumns","foreignKeyInfoList","primaryKeyAlreadyDefined","parsePrimaryKeyTerm","parseForeignKeyTerm","columnNode","isPrimary","referencesPos","fki","referencesColumn","referencesTable","referencesPosition","pos0","pos1","columns","isAutoIncrement","notNull","parseType","hintColumns","hintTables","hints","additionalColumns","praefix","suffix","datatypes","toString","getBaseType","alreadySeenKeywords","collate","defaultValue","fromConstantType","canCastTo","valuesPosition","columnsPosition","table","alias","parseValueLists","insideListTokens","outerFirst","leftBracketPosition","constantType","constant","constantNode","columnListStart","fromNode","parentStatement","parseColumnList","columnListKeywordArray","findIndex","allColumns","unshift","fromStartPosition","dontHint","parseTableOrSubQuery","fromListKeywordArray","fromEndPosition","whereKeywordArray","whereStart","groupKeywordArray","groupStart","groupByNode","parseGroupBy","orderStart","orderByNode","parseOrderBy","limitNode","parseLimit","numberOfRows","ln","offset","gbn","tokenTypesAfterGroupBy","term","having","obnList","obn","leftSide","parseAtomicTableOrSubQuery","parseJoinOperator","rightSide","firstOperand","secondOperand","on","selectStatement","subquery","query","tokenTypesAfterListEnd","allowAliases","columnTerm","parseTermBinary","precedence","left","parseUnary","operators","right","binaryOp","parseBracket","tt1","unaryOp","operand","isStringConstant","parseDotOrArrayChains","identifier1","position1","parseMethodCallParameters","rightBracketPosition","callMethod","operands","nodes","commaPositions","secondIdentifier","identifierLeft","identifierRight","list","elements","constantTypes","tokenBeforeBracket","selectNode","listNode","parseList","termInsideBrackets","parameter","isPrimaryKey","isNullable","cs","typeMatch1","completeTypeSQL","baseTypeIdentifier","commaSeparatedParameters","trim","Column","fromColumnStructure","Table","ts","size","tsList","tables","fromTableStructure","columnStructureToColumnMap","referencedCs","references","referencedColumn","parentSymbolTable","positionFrom","positionTo","childSymbolTables","symbols","symbolList","parent","databaseStructure","fromTableStructureList","storeTableSymbols","storeSymbol","posOfDefinition","referencedOnPositions","symbol","containsPosition","shortestSymbolTableContainingPosition","shortestPosition","st1","findTableAtPosition","findTables","isAggregating","returnType","acceptsStarParameter","SQLMethodStore","methods","pushOneParameterMethod","countMethod","instance","parameterType","escapeHtml","unsafe","twoDez","z","isDate","inputText","opera1","opera2","lopera1","lopera2","pdate","dd","mm","yy","lyear","isDateTime","dateStr","CompilerStatus","databaseTool","symbolTableStack","mainSymbolTable","statement","astNode","resolveSelect","resolveInsert","resolveCreateTable","resolveUpdate","resolveDelete","resolveDropTable","resolveAlterTable","getCurrentSymbolTable","resultTable","pushNewSymbolTable","joinedTables","resolveTableOrSubQuery","extractDatabaseStructure","resolveTerm","c1","sqlType","whereType","getBaseTypeName","findTable","whereSymbolTable","ciPos","createTableNode","thisTable","cn","tosNode","tableList","storeTableIntoSymbolTable","tableAlias","resolveNotIn","typeLeft","typeRight","getBinaryResultType","operandType","resultType1","resolveMethodCall","resolveIdentifier","resolveDot","selectTable","tableSymbols","findColumn","getInstance","getMethods","method","found","methodParameter","operatorString","leftType","pType","element","elementType","tableCompletionTo","valueList","destType","compilerStatus","compiledButNothingToRun","compiling","t0","lexer","clear","lexed","lex","getCurrentlyEditedModule","getBottomDiv","errorManager","showParenthesisWarning","startRegistering","parser","parse","getDatabaseTool","symbolResolver","start","compilerMessage","healSemicolons","readyToRun","oldErrorDecorations","identifierPositions","methodCallPositions","uriCounter","Module","uriMap","Uri","scheme","editor","createModel","updateOptions","tabSize","onDidChangeContent","versionId","isEmbedded","main1","text_before_revision","student_edited_after_revision","networkManager","bottomDiv","homeworkManager","showHomeWorkRevisionButton","renderHomeworkButton","fromPosition","toPosition","hintKeywords","ch","fromColumn","fromLine","toColumn","toLine","hintColumnsOfTable","chList","sel","selStart","selEnd","stmt","compare","b","lineNumber","bestCh","bestRangeLength","rangeLength","submitted_date","file_type","ec","getValue","EndOfLinePreference","LF","positionList","positionsOnLine","bestFoundPosition","el","sort","e1","e2","errorLevelCompare","level1","level2","maxUriNumber","ModuleStore","moduleMap","module_id","ms","copy","includeSystemModules","excludedModuleName","undefined","moduleName","TemplateUploader","dump","waitOverlay","show","dbTool","export","deflate","uploadIntern","hide","processData","headers","init","$dialog","append","showMainWindow","saveNameAndPublishedTo","setValues","setNewSecret","e","prop","checked","each","$element","setNameAndPublishedTo","val","uploadCurrentDatabase","getDatabaseSettings","secrets","is_admin","is_schooladmin","empty","Workspace","permissions","database_id","restoreFromData","currentFileId","currentlyOpenModule","withFiles","$buttonDiv","$htmlFirstLine","$button","stopPropagation","ActionManager","$mainElement","actions","keyEntries","buttons","document","event","executeKeyDownEvent","actionIdentifier","action","keys","button","active","addClass","removeClass","activeElement","tagName","keyCode","ctrlKey","shiftKey","altKey","actionEntries","actionEntry","preventDefault","openContextMenu","items","x","y","mousePointer","window","PointerEvent","$contextMenu","$openSubMenu","parentMenuItem","mi","caption","link","$item","subMenu","color","ev","remove","off","$link","setTimeout","width","top","leftRight","innerWidth","xp","topBottom","innerHeight","yp","makeTabs","tabDiv","headings","not","tabs","target","trigger","makeDiv","klass","div","jo_mouseDetected","animateToTransparent","cssProperty","startColorRgb","duration","colorPraefix","delta","animate","copyTextToClipboard","navigator","clipboard","writeText","err","console","textArea","createElement","style","body","appendChild","focus","select","execCommand","removeChild","fallbackCopyTextToClipboard","$bottomDiv","$mainDiv","oldDecorations","minimapColor","lightBulbOnClickFunctionList","$bracket_warning","children","getMonacoEditor","errorCountMap","$errorDiv","markers","decorations","$errorList","getSortedAndFilteredErrors","getErrorCount","linesDecorationsClassName","borderLeftClass","lightBulbClass","class","onClickFunction","edits","executeEdits","Range","forceMoveMarkers","processError","Warning","Info","relatedInformation","options","minimap","MinimapPosition","Inline","setModelMarkers","deltaDecorations","$file","$error","registerLightbulbOnClickFunctions","locf","$errorDivs","$div","$lineColumn","category","$message","showError","setModuleActive","revealRangeInCenter","className","showRevisionActive","$homeworkTab","$homeworkTabLeft","$homeworkTabRight","prepend","$showRevisionButton","hideRevision","showRevision","originalModel","modifiedModel","diffEditor","createDiffEditor","getElementById","enableSplitViewResizing","originalEditable","readOnly","renderSideBySide","setModel","original","modified","dispose","daysWithModules","dateString","date","Date","dateWithoutTime","getDate","getMonth","getFullYear","dateToStringWithoutTime","dwm","day","m1","m2","localeCompare","moduleWithWorkspace","setWorkspaceActive","initGUI","triggerCharacters","keywordCompletionItems","keywordToSnippetMap","setupKeywordCompletionItems","context","getModuleByMonacoModel","Promise","resolve","reject","wfc","provideCompletionItemsIntern","sw","_contentWidgets","widget","toggleDetails","isStringLiteral","textUntilPosition","getValueInRange","textAfterPosition","completionHint","getCompletionHint","completionItems","addKeywordCompletionItems","dotMatch","ibMatch","identifierAndBracketAfterCursor","addIdentifierCompletionItems","addDotCompletionItems","word","getWordUntilPosition","replaceWordRange","insertAfterCursorRange","item","insertText","startsWith","suggestions","textAfterDot","textBeforeDot","rangeToReplace","label","detail","filterText","insertTextRules","languages","CompletionItemInsertTextRule","KeepWhitespace","CompletionItemKind","Field","tableIdentifiers","columnIdentifier","InsertAsSnippet","Snippet","Class","sortText","columList","withTable","snippet","Keyword","posMin","posMax","watchDog","command","arguments","MySignatureHelpProvider","signatureHelpTriggerCharacters","signatureHelpRetriggerCharacters","compileIfDirty","provideSignatureHelpLater","getModel","methodCallPosition","rightMostPosition","mcp","identifierPosition","getSignatureHelp","parameterIndex","cp","activeParameter","activeSignature","signatures","MyHoverProvider","selection","getSelection","getElementAtPosition","getWordUnderCursor","desc","keywordDescriptions","contents","getValueLengthInRange","end","isInsideIdentifierOrArrayDescriptor","begin","isInsideOperator","isInsideIdentifierChain","MyCodeActionProvider","diagnostics","isPreferred","MyReferenceProvider","usagePositions","referencePositions","upInCurrentModule","up","targetElement","direction","$helper","bottom","height","html","Helper","close","fadeIn","fadeOut","mainBase","helperHistory","flag","sendUpdateUserSettings","openHelper","showMinimap","cw","dontPushNextCursorMove","lastTime","elementDecoration","extensions","conf","onEnterRules","beforeText","afterText","indentAction","IndentAction","IndentOutdent","appendText","None","removeText","comments","lineComment","blockComment","brackets","autoClosingPairs","surroundingPairs","setLanguageConfiguration","setMonarchTokensProvider","defaultToken","tokenPostfix","ignoreCase","escapes","keywords","builtinFunctions","builtinVariables","pseudoColumns","tokenizer","root","include","cases","whitespace","numbers","strings","string","complexIdentifiers","quotedIdentifier","scopes","defineVscSQL","defineTheme","inherit","rules","foreground","fontStyle","colors","lightbulb","enabled","lineDecorationsWidth","peekWidgetDefaultFocus","fixedOverflowWidgets","quickSuggestions","quickSuggestionsDelay","fontSize","fontFamily","fontWeight","roundedSelection","selectOnLineNumbers","automaticLayout","scrollBeyondLastLine","occurrencesHighlight","autoIndent","dragAndDrop","formatOnType","formatOnPaste","suggestFontSize","suggestLineHeight","suggest","localityBonus","insertMode","parameterHints","cycle","mouseWheelZoom","scrollbar","vertical","horizontal","theme","mouseWheelListener","changeEditorFontSize","deltaY","onDidChangeConfiguration","hasChanged","EditorOption","fontInfo","onDidChangeCursorPosition","onDidChangeModel","removeEventListener","addEventListener","passive","setActiveAfterExternalModelSet","registerHoverProvider","registerCompletionItemProvider","registerCodeActionProvider","registerReferenceProvider","registerSignatureHelpProvider","onMouseDown","MouseTargetType","GUTTER_GLYPH_MARGIN","GUTTER_LINE_NUMBERS","isAfterLines","onMarginMouseDown","remeasureFonts","addActions","onDidType","insertEndOfComment","newLine","newColumn","setPosition","getPosition","prevLine","getLineContent","trimRight","endsWith","getLineCount","spacesAtBeginningOfLine","trimLeft","fontSizePx","getTime","editorfs","getOptions","viewModeController","saveFontSize","factor","documentElement","setProperty","dynamic","newEditorFs","setFontSize","addAction","keybindings","KeyMod","CtrlCmd","KeyCode","KEY_K","precondition","keybindingContext","contextMenuGroupId","contextMenuOrder","run","ed","getAction","Enter","getActionManager","isWholeLine","overviewRuler","darkColor","OverviewRulerLane","Left","executeActionActive","getSQLSTatementsAtSelection","sqlStatement","classname","zIndex","setActive","showHelper","autoFormatTriggerCharacters","displayName","registerDocumentFormattingEditProvider","registerOnTypeFormattingEditProvider","format","tokenlist","lastNonSpaceToken","indentLevel","curlyBracesOpenAtLines","indentLevelAtSwitchStatements","switchHappend","lastTokenWasNewLine","roundBracketsOpen","replaceBetween","insertSpaces","deleteSpaces","openedAtLine","repeat","nextToken1","nextToken2","lastToken1","lastToken2","isBinaryOperator","lastTokenIsOperator","nextTokenIsOperator","getNextNonSpaceToken","beginNextLine","token2","currentIndentation","il","correctIndentation","lowerGeneric","lowerBelongsToGenericExpression","greaterGeneric","greaterBelongsToGenericExpression","tokenBefore","spaces","deleteOverlappingRanges","currentIndex","j","numberOfSpaces","DatabaseTool","databaseDirectoryEntries","queryId","querySuccessCallbacksMap","queryErrorCallbackMap","sqliteMagicBytes","queries","callbackAfterInitializing","callbackAfterRetrievingStructure","getWaitOverlay","worker","terminate","javaOnlineDir","Worker","onmessage","querySuccessCallback","results","queryErrorCallback","delete","queryCount","execQuery","setProgress","shift","executeQuery","log","retrieveDatabaseStructure","onerror","postMessage","sql","params","getJSON","entries","sql1","result1","parseDatabaseStructure","tableNameToStructureMap","index","tableName","tableSQL","tableStructure","completeSQL","columnArray","foreignKeyList","columnArray1","dflt_value","columnStructure","typeLengths","fkInfo","foreignKeyInfo","referencesRawData","reader","FileReader","onload","ab","getDumpType","binDump","readAsArrayBuffer","filename","prompt","obj","isBlob","blob","Blob","msSaveOrOpenBlob","createEvent","download","href","URL","createObjectURL","dataset","downloadurl","initEvent","dispatchEvent","downloadFile","currentSubmenu","openSubmenusOnMousemove","mainMenu","switchTheme","saveToFile","initMenu","setTheme","menu","initMenuitemCallbacks","opensubmenu","accordion","flexWeight","newButtonClass","buttonNewTitle","defaultIconClass","withDeleteButton","withFolders","enableDrag","acceptDropKinds","dontSortElements","addPanel","$newFolderAction","addFolder","newElement","newFolderCallback","scrollIntoView","$collapseAllAction","collapseAll","hasClass","slideUp","$captionElement","$listElement","fixed","grow","$buttonNew","pathArray","selectedElement","getSelectedElement","name1","path1","isFolder1","name2","path2","isFolder2","cmp","compareWithPath","insertIndex","getElementIndex","$elements","elementAtIndex","before","renderElement","insertElement","renameElement","$accordionDiv","getCurrentlySelectedPath","after","newElementCallback","$htmlSecondLine","insertAfter","selectCallback","$listOuter","$ce","$li","targetGrow","parts","toggleClass","AccordionPanel","currentlyDraggedElementKind","element1","currentlyDraggedElement","moveElement","expanded","aName","sortName","bName","cssClass","expandedCollapsed","pathHtml","addElementActionCallback","$elementAction","$filedragpart","originalEvent","dataTransfer","effectAllowed","dropEffect","dropElementCallback","pathIsCollapsed","slideDown","pressTimer","contextmenuHandler","contextMenuItems","renameCallback","contextMenuProvider","cmi","pageX","pageY","clearTimeout","getChildElements","deleteCallback","elementToMove","destinationFolder","destinationPath","movedElements","sourcePath","oldPathLength","moveCallback","folder","pointPos","elementWithText","elementToReplace","renameDoneCallback","selectionRange","$input","setSelectionRange","newValue","makeEditable","newText","invokeCallback","ae1","findElement","pathString","elPath","ps","Accordion","$html","panel","renderOuterHtmlElements","DistributeToStudentsDialog","classes","studentCount","$studentList","student","$studentLine","$studentClass","$studentName","rufname","familienname","students","$dialogMain","history","back","distributeWorkspace","sendDistributeWorkspace","$templatelist","fetchTemplateList","templatelist","tle","$tle","ownerName","$templateName","$dropZone","evt","importFile","createMode","workspaceData","createWorkspace","$template","template_database_id","code","tIndex","otherDatabaseId","newTemplateId","sendCreateWorkspace","accordionElement","renderSettingsButton","loadFromFile","isDatabase","dbUncompressed","$projectexplorerDiv","programPointerModule","programPointerDecoration","lastOpenModule","initFilelistPanel","initWorkspacelistPanel","successfulNetworkCommunicationCallback","sendCreateFile","newName","callbackIfSuccessful","sendDeleteWorkspaceOrFile","cmiList","is_teacher","getHours","getMinutes","$homeworkButtonDiv","$newWorkspaceAction","removeWorkspace","enableNewButton","databaseExplorer","getResultsetPresenter","dest","droppedElement","dropEffekt","$homeAction","onHomeButtonClicked","hideHomeworkTab","workspaceAccordionElement","teacherExplorer","classPanel","restoreOwnWorkspaces","setCaption","moduleList","errorCount","errorCountS","setTextAfterFilename","initializeDatabaseTool","fetchDatabase","initializeWorker","currentWorkspace_id","renderFiles","nonSystemModules","notifier","connect","refreshAfterRetrievingDBStructure","getHistoryViewer","clearAndShowStatements","cem","editorState","saveViewState","hideHomeworkRevisionButton","restoreViewState","setCurrentlyEditedModule","showProgramPointer","programPointerPosition","revealRangeInCenterIfOutsideViewport","Center","beforeContentClassName","findModuleByFile","$rightDiv","isWholePage","$tabs","$headings","rightdiv_width","$wholeWindow","Sliders","md","clientX","dx","moveLeftPanel","clientY","dy","moveBottomDiv","moveRightDiv","sliderknobLeft","stopImmediatePropagation","sliderknobRight","$editor","mewidth","layout","meheight","$leftPanel","classData","studentPanel","initStudentPanel","initClassPanel","renderClasses","ws_userId","ownWorkspaces","currentOwnWorkspace","restoreWorkspaces","setExplorerColor","showHomeworkTab","attachToWorkspaces","renderWorkspaces","ea","renderStudents","userDataList","ud","classDataList","cd","ThemeManager","themes","initThemes","internalSwitchTheme","monacoTheme","cssColors","Dialog","colorStyle","placeholder","$buttonRow","visible","visibility","$userSettingsButton","dialog","heading","$oldPassword","$newPassword1","$newPassword2","waitDiv","waitMessage","oldPassword","newPassword","$loginSpinner","loginHappened","username","password","viewModes","classDiagram","waitForGUICallback","initTeacherExplorer","classdata","initializeTimer","setFixed","initViewMode","startupComplete","errorMessage","resultsetPresenter","removePanels","ViewModeController","$buttonsContainer","$buttonMap","highContrast","editorHasFullWidth","$buttonEditorFullscreen","$buttonPresentationMode","$buttonMonitorMode","am","actionManager","registerAction","toggleEditorFullwidth","setMode","saveSettings","otherMode","viewMode","viewModeChosen","themeManager","getChosenViewMode","userDataDirty","monitor","presentation","SemicolonAngel","semicolonPositions","isThereAgain","oldEvidence","firstSeenMs","currentlyEditedModule","cursorLine","isCurrentModule","editOperations","abs","setSelection","collapsedTables","dbstructure","$table","renderTable","isCollapsed","showTable","$columns","image","referencesHtml","autoincrement","$column","$treeSwitch","ProgramControlButtons","$buttonStart","isActive","executeSelectedStatements","sqlCleaned","cleanCreateTableStatement","cleanInsertStatement","lines","vline","cleanValue","cleanColumnDef","cleanForeignKeyInfo","paginationSize","writeQueryListeners","showResultsBusy","showResultPending","$paginationDiv","$arrowLeft","$infoDiv","$arrowRight","paginationFrom","floor","showResults","activateButtons","paginationAll","min","listener","fetchSelectedStatements","hasDDLStatements","some","isDDLStatement","hasWriteStatements","isWriteStatement","executeDDLWriteStatementsEmbedded","executeDDLWriteStatementsInOnlineIDE","executeStatements","sucessfullyExecutedModifyingStatements","getDatabaseExplorer","refresh","notify","getNewStatements","new_statements","firstStatementIndex","executeNewStatements","AddDatabaseStatements","appendStatements","modifyingStatements","resetDatabase","fromIndex","executeStatementsString","successfullyExecutedModifyingStatements","showErrors","callback1","laterSelectExists","isSelectStatement","presentResultsIntern","clean","minimapColors","$runtimeErrorsTab","$runtimeErrorsTabHeading","showErrorDecorations","$errorLine","$sqlDiv","colorize","$messageDiv","$resultTabheading","$resultHeader","headerDiv","$bodyDiv","waitFunction","$header","rows","row","$row","cell","monacoEditor","StatementDelimiter","isOpen","unsentMessages","isPolling","connection","location","protocol","host","WebSocket","onError","onclose","onClose","onMessage","onopen","databaseVersion","sendIntern","onOpen","startPolling","send","exception","rollbackLocal","callbackIfTooFewStatements","callbackIfDone","doRefreshDatabaseExplorer","poll","getNewStatementsHttp","WaitOverlay","$waitDiv","fadeOutPending","$bitteWartenText","$bitteWartenProgress","$historyPanel","panelEntries","panelEntry","makePanelEntry","makeLastButtonActive","$rollbackButton","$index","$text","$copybutton","$rollbackbutton","rollback","rollbackEmbedded","rollbackLocalNeeded","writeQueryManager","initialTemplateDump","initialStatements","writtenStatements","historyViewer","rightDiv","compiler","semicolonAngel","matchMedia","matches","login","initSliders","checkStartupComplete","startTimer","sendBeacon","timerHandle","isDirty","compile","renderErrorCount","require","config","paths","availableLanguages","ignoreDuplicateModules","initEditor"],"mappings":"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","file":"sql-ide.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { LoginRequest, PerformanceData } from \"./Data.js\";\r\n\r\n// export var credentials: { username: string, password: string } = { username: null, password: null };\r\n\r\nexport class PerformanceCollector {\r\n    static performanceData: PerformanceData[] = [];\r\n    static performanceDataCount: number = 0;\r\n    static lastTimeSent: number = performance.now();\r\n\r\n    static registerPerformanceEntry(url: string, startTime: number) {\r\n        let pe: PerformanceData = PerformanceCollector.performanceData.find(pe => pe.url == url);\r\n        if (pe == null) {\r\n            pe = { count: 0, sumTime: 0, url: url };\r\n            PerformanceCollector.performanceData.push(pe);\r\n        }\r\n        pe.count++;\r\n        let dt = Math.round(performance.now() - startTime);\r\n        pe.sumTime += dt;\r\n        PerformanceCollector.performanceDataCount++;\r\n        // console.log(\"Performance entry for path \" + pe.url + \": \" + dt + \" ms, aggregated: \" + pe.sumTime + \" for \" + pe.count + \" requests.\");\r\n    }\r\n\r\n    static sendDataToServer() {\r\n        if (performance.now() - PerformanceCollector.lastTimeSent > 3 * 60 * 1000) {\r\n            let request = {\r\n                data: PerformanceCollector.performanceData\r\n            }\r\n\r\n            PerformanceCollector.performanceData = [];\r\n            PerformanceCollector.performanceDataCount = 0;\r\n            PerformanceCollector.lastTimeSent = performance.now();\r\n\r\n            ajax(\"collectPerformanceData\", request, () => { })\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport function ajax(url: string, request: any, successCallback: (response: any) => void,\r\n\r\n    errorCallback?: (message: string) => void) {\r\n\r\n    showNetworkBusy(true);\r\n    let time = performance.now();\r\n\r\n    $.ajax({\r\n        type: 'POST',\r\n        async: true,\r\n        data: JSON.stringify(request),\r\n        contentType: 'application/json',\r\n        url: \"servlet/\" + url,\r\n        success: function (response: any) {\r\n\r\n            PerformanceCollector.registerPerformanceEntry(url, time);\r\n\r\n            showNetworkBusy(false);\r\n            if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n                let error = \"Fehler bei der Bearbeitung der Anfrage\"\r\n                if (response.message != null) error = response.message;\r\n\r\n                if (error == \"Not logged in\") {\r\n                    // setTimeout(() => newLogin(url, request, successCallback, errorCallback), 10000);\r\n                    // location.reload();\r\n                }\r\n\r\n                if (errorCallback) errorCallback(error);\r\n            } else {\r\n                successCallback(response);\r\n            }\r\n            return;\r\n\r\n        },\r\n        error: function (jqXHR, message) {\r\n            showNetworkBusy(false);\r\n            if (errorCallback) {\r\n                let statusText = \"Server nicht erreichbar.\"\r\n                if (jqXHR.status != 0) {\r\n                    statusText = \"\" + jqXHR.status\r\n                }\r\n                errorCallback(message + \": \" + statusText);\r\n                return;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function showNetworkBusy(busy: boolean) {\r\n    if (busy) {\r\n        jQuery('.jo_network-busy').css('visibility','visible');\r\n    } else {\r\n        jQuery('.jo_network-busy').css('visibility','hidden');\r\n    }\r\n}\r\n\r\n\r\n","import { DatabaseData } from \"../communication/Data.js\";\r\n\r\nexport class WDatabase {\r\n\r\n    id: number;\r\n    name: string;\r\n\r\n    templateDump: Uint8Array;\r\n    templateId: number;\r\n    templateName: string;\r\n\r\n    statements: string[];\r\n    published_to: number;\r\n    version: number;\r\n    description: string;\r\n    owner_id: number;\r\n\r\n    static fromDatabaseData(data: DatabaseData): WDatabase {\r\n\r\n        let db = new WDatabase();\r\n\r\n        db.id = data.id;\r\n        db.name = data.name;\r\n        db.statements = data.statements;\r\n        db.published_to = data.published_to;\r\n        db.version = data.version;\r\n        db.description = data.description;\r\n        db.templateDump = null;\r\n        db.templateId = data.template_id;\r\n        db.owner_id = data.owner_id;\r\n        return db;\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n","export class CacheManager {\r\n    \r\n    fetchTemplateFromCache(databaseId: number, callback: (templateDump: Uint8Array) => void) {\r\n        if(databaseId == null){callback(null); return;}\r\n        let that = this;\r\n        if(!this.cacheAvailable()) callback(null);\r\n        this.getCache((cache) => {\r\n            cache.match(that.databaseIdToCacheIdentifier(databaseId)).then(\r\n                (value)=>{\r\n                    value.arrayBuffer().then((buffer) => callback(new Uint8Array(buffer)));\r\n                })\r\n                .catch(() => callback(null));\r\n        })        \r\n    }\r\n\r\n    saveTemplateToCache(databaseId: number, templateDump: Uint8Array) {\r\n        if(!this.cacheAvailable()) return;\r\n        let that = this;\r\n        this.getCache((cache) => {\r\n            cache.put(that.databaseIdToCacheIdentifier(databaseId), new Response(templateDump));\r\n        })        \r\n    }\r\n\r\n    cacheAvailable(): boolean {\r\n        return 'caches' in self;\r\n    }\r\n\r\n    getCache(callback: (cache: Cache) => void) {\r\n        caches.open('my-cache').then(callback);\r\n    }\r\n\r\n    databaseIdToCacheIdentifier(databaseId: number): string {\r\n        return \"/onlineIdeTemplateDb\" + databaseId;\r\n    }\r\n\r\n}","import { Main } from \"../main/Main.js\";\r\nimport { ajax } from \"./AjaxHelper.js\";\r\nimport { WorkspaceData, FileData, SendUpdatesRequest, SendUpdatesResponse, CreateOrDeleteFileOrWorkspaceRequest, CRUDResponse, UpdateUserSettingsRequest, UpdateUserSettingsResponse, DuplicateWorkspaceRequest, DuplicateWorkspaceResponse, ClassData, DistributeWorkspaceRequest, DistributeWorkspaceResponse, GetDatabaseRequest, getDatabaseResponse, GetNewStatementsRequest, GetNewStatementsResponse, AddDatabaseStatementsRequest, AddDatabaseStatementsResponse, TemplateListEntry, GetTemplateListRequest, GetTemplateListResponse, CreateWorkspaceData, GetDatabaseSettingsResponse, GetDatabaseSettingsRequest, setDatabaseSecretRequest as SetDatabaseSecretRequest, SetDatabaseSecretResponse, SetPublishedToRequest, SetPublishedToResponse, GetTemplateRequest, RollbackRequest, RollbackResponse } from \"./Data.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { WDatabase } from \"../workspace/WDatabase.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { CacheManager } from \"./CacheManager.js\";\r\n\r\nexport class NetworkManager {\r\n\r\n    timerhandle: any;\r\n\r\n    ownUpdateFrequencyInSeconds: number = 20;\r\n    teacherUpdateFrequencyInSeconds: number = 5;\r\n\r\n    updateFrequencyInSeconds: number = 20;\r\n    forcedUpdateEvery: number = 2;\r\n    secondsTillNextUpdate: number = this.updateFrequencyInSeconds;\r\n    errorHappened: boolean = false;\r\n\r\n    interval: any;\r\n\r\n    constructor(private main: Main, private $updateTimerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initializeTimer() {\r\n\r\n        let that = this;\r\n        this.$updateTimerDiv.find('svg').attr('width', that.updateFrequencyInSeconds);\r\n\r\n        if (this.interval != null) clearInterval(this.interval);\r\n\r\n        let counterTillForcedUpdate: number = this.forcedUpdateEvery;\r\n\r\n        this.interval = setInterval(() => {\r\n\r\n            if (that.main.user == null) return; // don't call server if no user is logged in\r\n\r\n            that.secondsTillNextUpdate--;\r\n\r\n            if (that.secondsTillNextUpdate < 0) {\r\n                that.secondsTillNextUpdate = that.updateFrequencyInSeconds;\r\n                counterTillForcedUpdate--;\r\n                let forceUpdate = counterTillForcedUpdate == 0;\r\n                if (forceUpdate) counterTillForcedUpdate = this.forcedUpdateEvery;\r\n                that.sendUpdates(() => { }, forceUpdate);\r\n            }\r\n\r\n            let $rect = this.$updateTimerDiv.find('.jo_updateTimerRect');\r\n\r\n            $rect.attr('width', that.secondsTillNextUpdate + \"px\");\r\n\r\n            if (that.errorHappened) {\r\n                $rect.css('fill', '#c00000');\r\n                this.$updateTimerDiv.attr('title', \"Fehler beim letzten Speichervorgang -> Werd's wieder versuchen\");\r\n            } else {\r\n                $rect.css('fill', '#008000');\r\n                this.$updateTimerDiv.attr('title', that.secondsTillNextUpdate + \" Sekunden bis zum nächsten Speichern\");\r\n            }\r\n\r\n        }, 1000);\r\n\r\n    }\r\n\r\n    sendUpdates(callback?: () => void, sendIfNothingIsDirty: boolean = false) {\r\n\r\n        if (this.main.user == null) return;\r\n\r\n        this.main.projectExplorer.writeEditorTextToFile();\r\n\r\n        let userSettings = this.main.user.settings;\r\n\r\n        let wdList: WorkspaceData[] = [];\r\n        let fdList: FileData[] = [];\r\n\r\n        for (let ws of this.main.workspaceList) {\r\n\r\n            if (!ws.saved) {\r\n                wdList.push(ws.getWorkspaceData(false));\r\n                ws.saved = true;\r\n            }\r\n\r\n            for (let m of ws.moduleStore.getModules(false)) {\r\n                if (!m.file.saved) {\r\n                    m.file.text = m.getProgramTextFromMonacoModel();\r\n                    fdList.push(m.getFileData(ws));\r\n                    // console.log(\"Save file \" + m.file.name);\r\n                    m.file.saved = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        let request: SendUpdatesRequest = {\r\n            workspacesWithoutFiles: wdList,\r\n            files: fdList,\r\n            owner_id: this.main.workspacesOwnerId,\r\n            userId: this.main.user.id,\r\n            language: 1,\r\n            currentWorkspaceId: this.main.getCurrentWorkspace()?.id,\r\n            getModifiedWorkspaces: false\r\n        }\r\n\r\n        let that = this;\r\n        if (wdList.length > 0 || fdList.length > 0 || sendIfNothingIsDirty) {\r\n            ajax('sendUpdates', request, (response: SendUpdatesResponse) => {\r\n                that.errorHappened = !response.success;\r\n                if (!that.errorHappened) {\r\n\r\n                    that.updateWorkspaces(request, response);\r\n\r\n                    if (callback != null) {\r\n                        callback();\r\n                        return;\r\n                    }\r\n                }\r\n            }, () => {\r\n                that.errorHappened = true;\r\n            });\r\n        } else {\r\n            if (callback != null) {\r\n                callback();\r\n                return;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    sendCreateWorkspace(wd: CreateWorkspaceData, owner_id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            wd.id = Math.round(Math.random() * 10000000);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"workspace\",\r\n            data: wd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            wd.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n\r\n    getDatabaseSettings(workspace_id: number, callback: (response: GetDatabaseSettingsResponse) => void) {\r\n        let request: GetDatabaseSettingsRequest = {\r\n            workspaceId: workspace_id\r\n        };\r\n        ajax(\"getDatabaseSettings\", request, (response: GetDatabaseSettingsResponse) => {\r\n            callback(response);\r\n        }, (message) => { alert(message) })\r\n    }\r\n\r\n    setNewSecret(workspace_id: number, kind: string, callback: (secret: string) => void) {\r\n        let request: SetDatabaseSecretRequest = {\r\n            workspaceId: workspace_id,\r\n            secretKind: kind\r\n        };\r\n        ajax(\"setNewSecret\", request, (response: SetDatabaseSecretResponse) => {\r\n            callback(response.secret);\r\n        }, (message) => { alert(message) })\r\n    }\r\n\r\n    setNameAndPublishedTo(workspace_id: number, name: string, published_to: number, description: string, callback: () => void) {\r\n        let request: SetPublishedToRequest = {\r\n            workspaceId: workspace_id,\r\n            databaseName: name,\r\n            publishedTo: published_to,\r\n            description: description\r\n        };\r\n\r\n        ajax(\"setPublishedTo\", request, (response: SetPublishedToResponse) => {\r\n            callback();\r\n        }, (message) => { alert(message) })\r\n    }\r\n\r\n\r\n\r\n    sendCreateFile(m: Module, ws: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        let fd: FileData = m.getFileData(ws);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"file\",\r\n            data: fd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            m.file.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDuplicateWorkspace(ws: Workspace, callback: (error: string, workspaceData?: WorkspaceData) => void) {\r\n\r\n        let request: DuplicateWorkspaceRequest = {\r\n            workspace_id: ws.id,\r\n            language: 1\r\n        }\r\n\r\n        ajax(\"duplicateWorkspace\", request, (response: DuplicateWorkspaceResponse) => {\r\n            callback(response.message, response.workspace)\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDistributeWorkspace(ws: Workspace, klasse: ClassData, student_ids: number[], callback: (error: string) => void) {\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request: DistributeWorkspaceRequest = {\r\n                workspace_id: ws.id,\r\n                class_id: klasse?.id,\r\n                student_ids: student_ids,\r\n                language: 1\r\n            }\r\n\r\n            ajax(\"distributeWorkspace\", request, (response: DistributeWorkspaceResponse) => {\r\n                callback(response.message)\r\n            }, callback);\r\n\r\n        }, false);\r\n\r\n    }\r\n\r\n\r\n    sendDeleteWorkspaceOrFile(type: \"workspace\" | \"file\", id: number, callback: (error: string) => void) {\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"delete\",\r\n            entity: type,\r\n            id: id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            if (response.success) {\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendUpdateUserSettings(callback: (error: string) => void) {\r\n\r\n        let request: UpdateUserSettingsRequest = {\r\n            settings: this.main.user.settings,\r\n            userId: this.main.user.id,\r\n            current_workspace_id: this.main.getCurrentWorkspace()?.id\r\n        }\r\n\r\n        ajax(\"updateUserSettings\", request, (response: UpdateUserSettingsResponse) => {\r\n            if (response.success) {\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n\r\n    getNewStatements(workspace: Workspace, callback: (statements: string[], firstNewStatementIndex: number) => void) {\r\n        let request: GetNewStatementsRequest = {\r\n            workspaceId: workspace.id,\r\n            version_before: workspace.database.version\r\n        }\r\n\r\n        ajax(\"getNewStatements\", request, (response: GetNewStatementsResponse) => {\r\n            if (response.success) {\r\n                callback(response.newStatements, response.firstNewStatementIndex);\r\n            }\r\n        });\r\n    }\r\n\r\n    AddDatabaseStatements(workspace: Workspace, statements: string[], callback: (statements_before: string[], new_version: number) => void) {\r\n        let request: AddDatabaseStatementsRequest = {\r\n            workspaceId: workspace.id,\r\n            version_before: workspace.database.version,\r\n            statements: statements\r\n        }\r\n\r\n        ajax(\"addDatabaseStatements\", request, (response: AddDatabaseStatementsResponse) => {\r\n            if (response.success) {\r\n                callback(response.statements_before, response.new_version);\r\n            }\r\n        });\r\n    }\r\n\r\n    fetchDatabase(workspace: Workspace, callback: (error: string) => void) {\r\n\r\n        let cacheManager: CacheManager = new CacheManager();\r\n\r\n        let request: GetDatabaseRequest = {\r\n            workspaceId: workspace.id\r\n        }\r\n\r\n        ajax(\"getDatabase\", request, (response: getDatabaseResponse) => {\r\n            if (response.success) {\r\n\r\n                workspace.database = WDatabase.fromDatabaseData(response.database)\r\n                cacheManager.fetchTemplateFromCache(workspace.database.templateId, (templateDump: Uint8Array) => {\r\n\r\n                    if (templateDump != null) {\r\n                        // @ts-ignore\r\n                        workspace.database.templateDump = pako.inflate(templateDump);\r\n                        callback(null);\r\n                        return;\r\n                    } else {\r\n                        if (workspace.database.templateId == null) {\r\n                            callback(null);\r\n                            return\r\n                        }\r\n                        this.fetchTemplate(workspace.id, (template) => {\r\n                            if (template != null) {\r\n                                cacheManager.saveTemplateToCache(workspace.database.templateId, template);\r\n                                // @ts-ignore\r\n                                workspace.database.templateDump = pako.inflate(template);\r\n                                callback(null);\r\n                                return;\r\n                            } else {\r\n                                callback(\"Konnte das Template nicht laden.\");\r\n                                return;\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    fetchTemplate(workspaceId: number, callback: (template: Uint8Array) => void) {\r\n        let request: GetTemplateRequest = {\r\n            workspaceId: workspaceId\r\n        }\r\n\r\n        $.ajax({\r\n            type: 'POST',\r\n            async: true,\r\n            data: JSON.stringify(request),\r\n            contentType: 'application/json',\r\n            url: \"servlet/getTemplate\",\r\n            xhrFields: { responseType: 'arraybuffer' },\r\n            success: function (response: any) {\r\n                callback(new Uint8Array(response));\r\n            },\r\n            error: function (jqXHR, message) {\r\n                alert(\"Konnte das Template nicht laden.\");\r\n                callback(null);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    fetchTemplateList(callback: (templateList: TemplateListEntry[]) => void) {\r\n        let request: GetTemplateListRequest = { user_id: this.main.user.id }\r\n\r\n        ajax(\"getTemplateList\", request, (response: GetTemplateListResponse) => {\r\n            if (response.success) {\r\n                callback(response.templateList);\r\n            } else {\r\n                callback([]);\r\n            }\r\n        }, (message) => {\r\n            alert(message);\r\n            callback([]);\r\n        })\r\n\r\n    }\r\n\r\n    updateWorkspaces(sendUpdatesRequest: SendUpdatesRequest, sendUpdatesResponse: SendUpdatesResponse) {\r\n\r\n        let idToRemoteWorkspaceDataMap: Map<number, WorkspaceData> = new Map();\r\n\r\n        let fileIdsSended = [];\r\n        sendUpdatesRequest.files.forEach(file => fileIdsSended.push(file.id));\r\n\r\n        sendUpdatesResponse.workspaces.workspaces.forEach(wd => idToRemoteWorkspaceDataMap.set(wd.id, wd));\r\n\r\n        let newWorkspaceNames: string[] = [];\r\n\r\n        for (let remoteWorkspace of sendUpdatesResponse.workspaces.workspaces) {\r\n\r\n            let localWorkspaces = this.main.workspaceList.filter(ws => ws.id == remoteWorkspace.id);\r\n\r\n            // Did student get a workspace from his/her teacher?\r\n            if (localWorkspaces.length == 0) {\r\n                newWorkspaceNames.push(remoteWorkspace.name);\r\n                this.createNewWorkspaceFromWorkspaceData(remoteWorkspace);\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        for (let workspace of this.main.workspaceList) {\r\n            let remoteWorkspace: WorkspaceData = idToRemoteWorkspaceDataMap.get(workspace.id);\r\n            if (remoteWorkspace != null) {\r\n                let idToRemoteFileDataMap: Map<number, FileData> = new Map();\r\n                remoteWorkspace.files.forEach(fd => idToRemoteFileDataMap.set(fd.id, fd));\r\n\r\n                let idToModuleMap: Map<number, Module> = new Map();\r\n                // update/delete files if necessary\r\n                for (let module of workspace.moduleStore.getModules(false)) {\r\n                    let fileId = module.file.id;\r\n                    idToModuleMap.set(fileId, module);\r\n                    let remoteFileData = idToRemoteFileDataMap.get(fileId);\r\n                    if (remoteFileData == null) {\r\n                        this.main.projectExplorer.fileListPanel.removeElement(module);\r\n                        this.main.currentWorkspace.moduleStore.removeModule(module);\r\n                    } else if (remoteFileData.version > module.file.version) {\r\n                        if (fileIdsSended.indexOf(fileId) < 0 || remoteFileData.forceUpdate) {\r\n                            module.file.text = remoteFileData.text;\r\n                            module.model.setValue(remoteFileData.text);\r\n\r\n                            module.file.saved = true;\r\n                            module.lastSavedVersionId = module.model.getAlternativeVersionId()\r\n                        }\r\n                        module.file.version = remoteFileData.version;\r\n                    }\r\n                }\r\n\r\n                // add files if necessary\r\n                for (let remoteFile of remoteWorkspace.files) {\r\n                    if (idToModuleMap.get(remoteFile.id) == null) {\r\n                        this.createFile(workspace, remoteFile);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (newWorkspaceNames.length > 0) {\r\n            let message: string = newWorkspaceNames.length > 1 ? \"Folgende Workspaces hat Deine Lehrkraft Dir gesendet: \" : \"Folgenden Workspace hat Deine Lehrkraft Dir gesendet: \";\r\n            message += newWorkspaceNames.join(\", \");\r\n            alert(message);\r\n        }\r\n\r\n        this.main.projectExplorer.workspaceListPanel.sortElements();\r\n        this.main.projectExplorer.fileListPanel.sortElements();\r\n\r\n    }\r\n\r\n    public createNewWorkspaceFromWorkspaceData(remoteWorkspace: WorkspaceData, withSort: boolean = false) {\r\n        let w = this.main.createNewWorkspace(remoteWorkspace.name, remoteWorkspace.owner_id);\r\n        w.id = remoteWorkspace.id;\r\n        w.sql_history = \"\";\r\n        w.path = remoteWorkspace.path;\r\n        w.isFolder = remoteWorkspace.isFolder;\r\n\r\n        this.main.workspaceList.push(w);\r\n        let path = remoteWorkspace.path.split(\"/\");\r\n        if (path.length == 1 && path[0] == \"\") path = [];\r\n\r\n        let panelElement: AccordionElement = {\r\n            name: remoteWorkspace.name,\r\n            externalElement: w,\r\n            iconClass: \"workspace\",\r\n            isFolder: remoteWorkspace.isFolder,\r\n            path: path\r\n        };\r\n\r\n        this.main.projectExplorer.workspaceListPanel.addElement(panelElement, true);\r\n        w.panelElement = panelElement;\r\n\r\n        for (let fileData of remoteWorkspace.files) {\r\n            this.createFile(w, fileData);\r\n        }\r\n\r\n        if (withSort) {\r\n            this.main.projectExplorer.workspaceListPanel.sortElements();\r\n            this.main.projectExplorer.fileListPanel.sortElements();\r\n        }\r\n    }\r\n\r\n    createFile(workspace: Workspace, remoteFile: FileData) {\r\n        let ae: any = null; //AccordionElement\r\n        if (workspace == this.main.currentWorkspace) {\r\n            ae = {\r\n                name: remoteFile.name,\r\n                externalElement: null\r\n            }\r\n\r\n            this.main.projectExplorer.fileListPanel.addElement(ae, true);\r\n        }\r\n\r\n        let f: any = { // File\r\n            id: remoteFile.id,\r\n            name: remoteFile.name,\r\n            dirty: false,\r\n            saved: true,\r\n            text: remoteFile.text,\r\n            version: remoteFile.version,\r\n            identical_to_repository_version: true,\r\n            workspace_id: workspace.id,\r\n            panelElement: ae\r\n        };\r\n        let m = this.main.projectExplorer.getNewModule(f); //new Module(f, this.main);\r\n        if (ae != null) ae.externalElement = m;\r\n        let modulStore = workspace.moduleStore;\r\n        modulStore.putModule(m);\r\n\r\n    }\r\n\r\n    rollback(callback: (error: string, rollbackLocalNeeded: boolean) => void) {\r\n        let workspace = this.main.currentWorkspace;\r\n        let request: RollbackRequest = { workspaceId: workspace.id, version: workspace.database.version }\r\n\r\n        ajax(\"rollback\", request, (response: RollbackResponse) => {\r\n            if (response.success) {\r\n                \r\n                callback(null, workspace.database.version > response.new_version);\r\n            } else {\r\n                alert(response.message);\r\n                callback(response.message, false);\r\n            }\r\n        }, (message) => {\r\n            alert(message);\r\n            callback(message, false);\r\n        })\r\n\r\n    }\r\n\r\n\r\n}","export enum TokenType {\r\n    identifier,\r\n    // constants\r\n    integerConstant,\r\n    floatingPointConstant,\r\n    booleanConstant,\r\n    stringConstant,\r\n    charConstant,\r\n    true,\r\n    false,\r\n    // keywords\r\n    keywordRename,\r\n    keywordTo,\r\n    keywordAlter,\r\n    keywordAdd,\r\n    keywordDelete,\r\n    keywordSelect,\r\n    keywordInsert,\r\n    keywordInto,\r\n    keywordValues,\r\n    keywordUpdate,\r\n    keywordSet,\r\n    keywordCreate,\r\n    keywordReferences,\r\n    keywordPrimary,\r\n    keywordForeign,\r\n    keywordTable,\r\n    keywordColumn,\r\n    keywordDrop,\r\n    keywordKey,\r\n    keywordAutoincrement,\r\n    keywordFrom,\r\n    keywordWhere,\r\n    keywordGroup,\r\n    keywordBy,\r\n    keywordHaving,\r\n    keywordOrder,\r\n    keywordAscending,\r\n    keywordDescending,\r\n    keywordNulls,\r\n    keywordFirst,\r\n    keywordLast,\r\n    keywordIs,\r\n    keywordNull,\r\n\r\n    keywordOr,\r\n    keywordAnd,\r\n    keywordNot,\r\n\r\n    keywordJoin,\r\n    keywordNatural,\r\n    keywordLeft,\r\n    keywordCross,\r\n    keywordInner,\r\n    keywordOuter,\r\n    keywordOn,\r\n    keywordAs,\r\n    keywordLimit,\r\n    keywordOffset,\r\n    keywordIn,\r\n    keywordNotIn,\r\n    keywordLike,\r\n    keywordCollate,\r\n    keywordDefault,\r\n    keywordEngine,\r\n    keywordCharset,\r\n\r\n    // brackets\r\n    leftBracket, // ()\r\n    rightBracket,\r\n    leftSquareBracket, // []\r\n    rightSquareBracket,\r\n    leftCurlyBracket, // {}\r\n    rightCurlyBracket,\r\n    leftRightSquareBracket, // []\r\n    \r\n    // binary operators\r\n    dot, //.\r\n    modulo,\r\n    minus, plus, multiplication, division,\r\n    singleQuote, doubleQuote, // ', \"\r\n    identifierQuote,\r\n    lower, greater, lowerOrEqual, greaterOrEqual, \r\n    concatenation,    \r\n    equal,\r\n    notEqual,\r\n\r\n    // semicolon\r\n    semicolon, // ;\r\n\r\n    colon, // :\r\n\r\n    // comma\r\n    comma, // ,\r\n\r\n    // backslash\r\n    backslash,\r\n\r\n    // @\r\n    pipe,\r\n\r\n    // @\r\n    at,\r\n\r\n    // whitespace\r\n    space,\r\n\r\n    tab,\r\n\r\n    // newline\r\n    newline,\r\n\r\n    // line feed\r\n    linefeed,\r\n\r\n    // only lexer-internal\r\n    identifierChar,  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    comment,\r\n\r\n    endofSourcecode, // will be generated after sourcecode end\r\n    \r\n    // Program statement types:\r\n    \r\n    // additional AST node types\r\n    constantNode,\r\n    callMethod,\r\n    unaryOp,\r\n    binaryOp,\r\n    table,\r\n    subquery,\r\n    list,\r\n    column,\r\n    columnDef,\r\n    allColumns, // *\r\n    isNull,\r\n    isNot, // used by lexer to lex \"is not null\" into one token\r\n    isNotNull,\r\n}\r\n\r\nexport var TokenTypeReadable: {[tt: number]: string} = {\r\n    [TokenType.identifier]: \"ein Bezeichner\",\r\n    // constants\r\n    [TokenType.integerConstant]: \"eine Integer-Konstante\",\r\n    [TokenType.floatingPointConstant]: \"eine Fließkomma-Konstante\",\r\n    [TokenType.booleanConstant]: \"eine boolesche Konstante\",\r\n    [TokenType.stringConstant]: \"eine Zeichenketten-Konstante\",\r\n    [TokenType.charConstant]: \"eine char-Konstante\",\r\n    [TokenType.true]: \"true\",\r\n    [TokenType.false]: \"false\",\r\n    // keywords\r\n    [TokenType.keywordRename]: \"rename\",\r\n    [TokenType.keywordTo]: \"to\",\r\n    [TokenType.keywordAlter]: \"alter\",\r\n    [TokenType.keywordAdd]: \"add\",\r\n    [TokenType.keywordDelete]: \"delete\",\r\n    [TokenType.keywordSelect]: \"select\",\r\n    [TokenType.keywordInsert]: \"insert\",\r\n    [TokenType.keywordInto]: \"into\",\r\n    [TokenType.keywordValues]: \"values\",\r\n    [TokenType.keywordUpdate]: \"update\",\r\n    [TokenType.keywordSet]: \"set\",\r\n    [TokenType.keywordCreate]: \"create\",\r\n    [TokenType.keywordReferences]: \"references\",\r\n    [TokenType.keywordPrimary]: \"primary\",\r\n    [TokenType.keywordForeign]: \"foreign\",\r\n    [TokenType.keywordTable]: \"table\",\r\n    [TokenType.keywordColumn]: \"column\",\r\n    [TokenType.keywordDrop]: \"drop\",\r\n    [TokenType.keywordKey]: \"key\",\r\n    [TokenType.keywordAutoincrement]: \"autoincrement\",\r\n    [TokenType.keywordFrom]: \"from\",\r\n    [TokenType.keywordWhere]: \"where\",\r\n    [TokenType.keywordGroup]: \"group\",\r\n    [TokenType.keywordBy]: \"by\",\r\n    [TokenType.keywordHaving]: \"having\",\r\n    [TokenType.keywordOrder]: \"order\",\r\n    [TokenType.keywordAscending]: \"ascending\",\r\n    [TokenType.keywordDescending]: \"descending\",\r\n    [TokenType.keywordNulls]: \"nulls\",\r\n    [TokenType.keywordFirst]: \"first\",\r\n    [TokenType.keywordLast]: \"last\",\r\n    [TokenType.keywordIs]: \"is\",\r\n    [TokenType.keywordNull]: \"null\",\r\n\r\n\r\n    [TokenType.keywordAnd]: \"and\",\r\n    [TokenType.keywordOr]: \"or\",\r\n    [TokenType.keywordNot]: \"not\",\r\n\r\n    [TokenType.keywordJoin]: \"join\",\r\n    [TokenType.keywordNatural]: \"natural\",\r\n    [TokenType.keywordLeft]: \"left\",\r\n    [TokenType.keywordCross]: \"cross\",\r\n    [TokenType.keywordInner]: \"inner\",\r\n    [TokenType.keywordOuter]: \"outer\",\r\n    [TokenType.keywordOn]: \"on\",\r\n    [TokenType.keywordAs]: \"as\",\r\n    [TokenType.keywordLimit]: \"limit\",\r\n    [TokenType.keywordOffset]: \"offset\",\r\n    [TokenType.keywordIn]: \"in\",\r\n    [TokenType.keywordNotIn]: \"not in\",\r\n    [TokenType.keywordLike]: \"like\",\r\n    [TokenType.keywordCollate]: \"collate\",\r\n    [TokenType.keywordDefault]: \"default\",\r\n    [TokenType.keywordEngine]: \"engine\",\r\n    [TokenType.keywordCharset]: \"charset\",\r\n\r\n    // brackets\r\n    [TokenType.leftBracket]: \"(\", // ()\r\n    [TokenType.rightBracket]: \")\",\r\n    [TokenType.leftSquareBracket]: \"[\", // []\r\n    [TokenType.rightSquareBracket]: \"]\",\r\n    [TokenType.leftCurlyBracket]: \"{\", // {}\r\n    [TokenType.rightCurlyBracket]: \"}\",\r\n    [TokenType.leftRightSquareBracket]: \"[]\", \r\n    \r\n    // operators\r\n    [TokenType.dot]: \".\", //.\r\n    [TokenType.minus]: \"-\", \r\n    [TokenType.modulo]: \"%\", \r\n    [TokenType.plus]: \"+\", \r\n    [TokenType.multiplication]: \"*\", \r\n    [TokenType.division]: \"/\",\r\n    [TokenType.singleQuote]: \"'\", \r\n    [TokenType.doubleQuote]: \"\\\"\", // ']: \"\", \"\r\n    [TokenType.identifierQuote]: \"`\",\r\n    [TokenType.lower]: \"<\", \r\n    [TokenType.greater]: \">\",\r\n    [TokenType.equal]: \"=\", \r\n    [TokenType.lowerOrEqual]: \"<=\", \r\n    [TokenType.greaterOrEqual]: \">=\", \r\n    [TokenType.concatenation]: \"||\", \r\n    \r\n    // semicolon\r\n    [TokenType.semicolon]: \";\", // ;\r\n    [TokenType.colon]: \":\", // ;\r\n\r\n    // comma\r\n    [TokenType.comma]: \",\", \r\n\r\n    // backslash\r\n    [TokenType.backslash]: \"\\\\\",\r\n\r\n    // at\r\n    [TokenType.at]: \"@\",\r\n    \r\n    // pipe\r\n    [TokenType.pipe]: \"|\",\r\n\r\n    // whitespace\r\n    [TokenType.space]: \"ein Leerzeichen\",\r\n    [TokenType.tab]: \"ein Tabulatorzeichen\",\r\n\r\n    // newline\r\n    [TokenType.newline]: \"ein Zeilenumbruch\",\r\n\r\n    // only lexer-internal\r\n    [TokenType.identifierChar]: \"eines der Zeichen a..z, A..Z, _\",  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    [TokenType.comment]: \"ein Kommentar\",\r\n\r\n    [TokenType.endofSourcecode]: \"das Ende des Programmes\"\r\n\r\n}\r\n\r\nexport var specialCharList: {[keyword: string]:TokenType} = {\r\n    '(': TokenType.leftBracket, // ()\r\n    ')': TokenType.rightBracket,\r\n    '[': TokenType.leftSquareBracket, // []\r\n    ']': TokenType.rightSquareBracket,\r\n    '{': TokenType.leftCurlyBracket, // {}\r\n    '}': TokenType.rightCurlyBracket,\r\n    \r\n    // operators\r\n    '.': TokenType.dot, //.\r\n    ',': TokenType.comma, //.\r\n    '-': TokenType.minus,\r\n    '%': TokenType.modulo,\r\n    '+': TokenType.plus, \r\n    '*': TokenType.multiplication, \r\n    '/': TokenType.division,\r\n    '\\\\': TokenType.backslash,\r\n    '@': TokenType.at,\r\n    '|': TokenType.pipe,\r\n    '\\'': TokenType.singleQuote, \r\n    '\"': TokenType.doubleQuote, // ', \"\r\n    '`': TokenType.identifierQuote, // ', \"\r\n    \"<\": TokenType.lower,\r\n    \">\": TokenType.greater,\r\n    \"=\": TokenType.equal,\r\n    \"<>\": TokenType.notEqual,\r\n    \r\n    ';': TokenType.semicolon, // ;\r\n    ':': TokenType.colon, // ;\r\n\r\n    // whitespace\r\n    ' ': TokenType.space,\r\n    '\\t': TokenType.tab,\r\n\r\n    // newline\r\n    '\\n': TokenType.newline,\r\n    '\\r': TokenType.linefeed\r\n}\r\n\r\nexport var keywordList: {[keyword: string]:TokenType} = {\r\n    \"rename\": TokenType.keywordRename,\r\n    \"to\": TokenType.keywordTo,\r\n    \"alter\": TokenType.keywordAlter,\r\n    \"add\": TokenType.keywordAdd,\r\n    \"delete\": TokenType.keywordDelete,\r\n    \"select\": TokenType.keywordSelect,\r\n    \"insert\": TokenType.keywordInsert,\r\n    \"into\": TokenType.keywordInto,\r\n    \"values\": TokenType.keywordValues,\r\n    \"update\": TokenType.keywordUpdate,\r\n    \"set\": TokenType.keywordSet,\r\n    \"create\": TokenType.keywordCreate,\r\n    \"references\": TokenType.keywordReferences,\r\n    \"primary\": TokenType.keywordPrimary,\r\n    \"foreign\": TokenType.keywordForeign,\r\n    \"table\": TokenType.keywordTable,\r\n    \"column\": TokenType.keywordColumn,\r\n    \"drop\": TokenType.keywordDrop,\r\n    \"key\": TokenType.keywordKey,\r\n    \"autoincrement\": TokenType.keywordAutoincrement,\r\n    \"from\": TokenType.keywordFrom,\r\n    \"where\": TokenType.keywordWhere,\r\n    \"true\": TokenType.true,\r\n    \"false\": TokenType.false,\r\n    \"group\": TokenType.keywordGroup,\r\n    \"by\": TokenType.keywordBy,\r\n    \"having\": TokenType.keywordHaving,\r\n    \"order\": TokenType.keywordOrder,\r\n    \"asc\": TokenType.keywordAscending,\r\n    \"desc\": TokenType.keywordDescending,\r\n    \"nulls\": TokenType.keywordNulls,\r\n    \"first\": TokenType.keywordFirst,\r\n    \"last\": TokenType.keywordLast,\r\n    \"is\": TokenType.keywordIs,\r\n    \"null\": TokenType.keywordNull,\r\n\r\n    \"or\": TokenType.keywordOr,\r\n    \"and\": TokenType.keywordAnd,\r\n    \"not\": TokenType.keywordNot,\r\n\r\n    \"join\": TokenType.keywordJoin,\r\n    \"natural\": TokenType.keywordNatural,\r\n    \"left\": TokenType.keywordLeft,\r\n    \"cross\": TokenType.keywordCross,\r\n    \"inner\": TokenType.keywordInner,\r\n    \"outer\": TokenType.keywordOuter,\r\n    \"on\": TokenType.keywordOn,\r\n    \"as\": TokenType.keywordAs,\r\n    \"limit\": TokenType.keywordLimit,\r\n    \"offset\": TokenType.keywordOffset,\r\n    \"in\": TokenType.keywordIn,\r\n    \"not in\": TokenType.keywordNotIn,\r\n    \"like\": TokenType.keywordLike,\r\n    \"collate\": TokenType.keywordCollate,\r\n    \"default\": TokenType.keywordDefault,\r\n    \"engine\": TokenType.keywordEngine,\r\n    \"charset\": TokenType.keywordCharset\r\n\r\n\r\n};\r\n\r\nexport var EscapeSequenceList: {[keyword: string]:string} = {\r\n    \"n\": \"\\n\",\r\n    \"r\": \"\\r\",\r\n    \"t\": \"\\t\",\r\n    \"\\\"\": \"\\\"\",\r\n    \"'\": \"'\",\r\n    \"\\\\\": \"\\\\\"\r\n}\r\n\r\nexport type TextPosition = {\r\n    line: number,\r\n    column: number, \r\n    length: number\r\n}\r\n\r\nexport type TextPositionWithoutLength = {\r\n    line: number,\r\n    column: number\r\n}\r\n\r\nexport type Token = {\r\n    tt: TokenType,\r\n    value: string|number|boolean,\r\n    position: TextPosition,\r\n    commentBefore?: Token,\r\n    isDoubleQuotedIdentifier?: boolean\r\n}\r\n\r\nexport type TokenList = Token[];\r\n\r\nfunction tokenToString(t: Token){\r\n    return \"<div><span style='font-weight: bold'>\" + TokenType[t.tt] + \"</span>\" +\r\n            \"<span style='color: blue'> &nbsp;'\" + t.value + \"'</span> (l&nbsp;\" + t.position.line + \", c&nbsp;\" + t.position.column + \")</div>\";\r\n}\r\n \r\nexport function tokenListToString(tl: TokenList):string{\r\n    let s = \"\";\r\n    for(let t of tl){\r\n        s += tokenToString(t) + \"\\n\";\r\n    }\r\n    return s;\r\n}","import { TokenList, specialCharList, TokenType, Token, EscapeSequenceList, keywordList, TextPosition, TokenTypeReadable } from \"./Token.js\";\r\n\r\nenum LexerState {\r\n    number, identifier, stringConstant, characterConstant, multilineComment, EndoflineComment\r\n}\r\n\r\nvar endChar = \"►\"; // \\u10000\r\n\r\nexport type QuickFix = {\r\n    title: string,\r\n    editsProvider: (uri: monaco.Uri) => monaco.languages.WorkspaceTextEdit[]\r\n}\r\n\r\nexport type ErrorLevel = \"info\" | \"error\" | \"warning\";\r\n\r\nexport type Error = {\r\n    position: TextPosition,\r\n    text: string,\r\n    quickFix?: QuickFix,\r\n    level: ErrorLevel\r\n}\r\n\r\nexport class Lexer {\r\n\r\n    tokenList: TokenList;\r\n    nonSpaceLastTokenType: TokenType;\r\n    nonSpaceLastToken: Token;\r\n\r\n    errorList: Error[];\r\n    pos: number;\r\n    line: number;\r\n    column: number;\r\n\r\n    currentChar: string;\r\n    nextChar: string;\r\n\r\n    input: string;\r\n\r\n    spaceTokens: TokenType[] = [\r\n        TokenType.space, TokenType.tab, TokenType.newline\r\n    ];\r\n\r\n    bracketStack: TokenType[];\r\n    bracketError: string;\r\n    correspondingBracket: { [key: number]: TokenType } = {};\r\n\r\n    tokenTypesToMerge: { first: TokenType, second: TokenType, merged: TokenType }[] = [\r\n        { first: TokenType.keywordNotIn, second: TokenType.keywordIn, merged: TokenType.keywordNotIn },\r\n        { first: TokenType.keywordIs, second: TokenType.keywordNot, merged: TokenType.isNot },\r\n        { first: TokenType.isNot, second: TokenType.keywordNull, merged: TokenType.isNotNull },\r\n        { first: TokenType.keywordIs, second: TokenType.keywordNull, merged: TokenType.isNull },\r\n    ]\r\n\r\n    constructor() {\r\n        this.correspondingBracket[TokenType.leftBracket] = TokenType.rightBracket;\r\n        this.correspondingBracket[TokenType.leftCurlyBracket] = TokenType.rightCurlyBracket;\r\n        this.correspondingBracket[TokenType.leftSquareBracket] = TokenType.rightSquareBracket;\r\n        this.correspondingBracket[TokenType.rightBracket] = TokenType.leftBracket;\r\n        this.correspondingBracket[TokenType.rightCurlyBracket] = TokenType.leftCurlyBracket;\r\n        this.correspondingBracket[TokenType.rightSquareBracket] = TokenType.leftSquareBracket;\r\n    }\r\n\r\n    lex(input: string): { tokens: TokenList, errors: Error[], bracketError: string } {\r\n\r\n        this.input = input.replace(\"\\u00a0\", \" \");\r\n        this.tokenList = [];\r\n        this.errorList = [];\r\n        this.bracketError = null;\r\n        this.bracketStack = [];\r\n        this.pos = 0;\r\n        this.line = 1;\r\n        this.column = 1;\r\n        this.nonSpaceLastTokenType = null;\r\n        this.nonSpaceLastToken = null;\r\n\r\n\r\n        if (input.length == 0) {\r\n            return { tokens: this.tokenList, errors: this.errorList, bracketError: null };\r\n        }\r\n\r\n        this.currentChar = input.charAt(0);\r\n\r\n        this.nextChar = input.length > 1 ? input.charAt(1) : endChar;\r\n\r\n\r\n        while (this.currentChar != endChar) {\r\n            this.mainState();\r\n        }\r\n\r\n        if (this.bracketStack.length > 0) {\r\n            let bracketOpen = this.bracketStack.pop();\r\n            let bracketClosed = this.correspondingBracket[bracketOpen];\r\n\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[bracketClosed]);\r\n        }\r\n\r\n        return {\r\n            tokens: this.tokenList,\r\n            errors: this.errorList,\r\n            bracketError: this.bracketError\r\n        };\r\n\r\n    }\r\n\r\n    checkClosingBracket(tt: TokenType) {\r\n        if (this.bracketStack.length == 0) {\r\n            let bracketOpen = this.correspondingBracket[tt];\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[tt]);\r\n            return;\r\n        }\r\n        let openBracket = this.bracketStack.pop();\r\n        let correspondingBracket = this.correspondingBracket[openBracket];\r\n        if (tt != correspondingBracket) {\r\n            this.setBracketError(TokenTypeReadable[openBracket] + \" \" + TokenTypeReadable[correspondingBracket]);\r\n        }\r\n    }\r\n\r\n    setBracketError(error: string) {\r\n        if (this.bracketError == null) this.bracketError = error;\r\n    }\r\n\r\n    next() {\r\n        this.pos++;\r\n        this.currentChar = this.nextChar;\r\n        if (this.pos + 1 < this.input.length) {\r\n            this.nextChar = this.input.charAt(this.pos + 1);\r\n        } else {\r\n            this.nextChar = endChar;\r\n        }\r\n        this.column++; // column of current char\r\n    }\r\n\r\n\r\n\r\n    mainState() {\r\n\r\n        let char = this.currentChar;\r\n\r\n        let specialCharToken = specialCharList[char];\r\n\r\n        if (specialCharToken != null) {\r\n            switch (specialCharToken) {\r\n                case TokenType.leftSquareBracket:\r\n                    if (this.nextChar == \"]\") {\r\n                        this.pushToken(TokenType.leftRightSquareBracket, \"[]\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.leftSquareBracket, \"[\");\r\n                        this.bracketStack.push(specialCharToken);\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.division:\r\n                    if (this.nextChar == '*') {\r\n                        this.lexMultilineComment();\r\n                        return;\r\n                    }\r\n                    this.pushToken(TokenType.division, '/');\r\n                    this.next();\r\n                    return;\r\n                case TokenType.pipe:\r\n                    if (this.nextChar == \"|\") {\r\n                        this.pushToken(TokenType.concatenation, '||');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.pipe, '|');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.lower:\r\n                    if (this.nextChar == \">\") {\r\n                        this.pushToken(TokenType.notEqual, '<>');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.lower, '<');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.rightSquareBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.minus:\r\n                    if (this.isDigit(this.nextChar, 10) && !\r\n                        ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.rightBracket].indexOf(this.nonSpaceLastTokenType) >= 0)\r\n                    ) {\r\n                        this.lexNumber();\r\n                        return;\r\n                    } else if (this.nextChar == '-') {\r\n                        this.lexEndofLineComment();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.minus, '-');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.singleQuote:\r\n                    this.lexStringConstant(\"'\");\r\n                    return;\r\n                case TokenType.doubleQuote:\r\n                    this.lexStringConstant('\"');\r\n                    return;\r\n                case TokenType.newline:\r\n                    this.pushToken(TokenType.newline, '\\n');\r\n                    this.line++;\r\n                    this.column = 0;\r\n                    this.next();\r\n                    return;\r\n                case TokenType.space:\r\n                case TokenType.tab:\r\n                    this.lexSpace();\r\n                    return;\r\n                case TokenType.linefeed:\r\n                    this.next();\r\n                    return;\r\n                case TokenType.at:\r\n                    this.lexAnnotation();\r\n                    return;\r\n                case TokenType.identifierQuote:\r\n                    this.lexQuotedIdentifier();\r\n                    return;\r\n            }\r\n\r\n            this.pushToken(specialCharToken, char);\r\n            this.next();\r\n            return;\r\n\r\n        }\r\n\r\n        // no special char. Number?\r\n\r\n        if (this.isDigit(char, 10)) {\r\n            this.lexNumber();\r\n            return;\r\n        }\r\n\r\n        this.lexIdentifierOrKeyword();\r\n\r\n    }\r\n\r\n\r\n    lexQuotedIdentifier() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let s: string = \"\";\r\n        this.next();\r\n        while(this.currentChar != '`' && this.currentChar != endChar){\r\n            s += this.currentChar;\r\n            this.next();\r\n        }\r\n        if(this.currentChar == endChar){\r\n            this.pushError(\"Innerhalb eines in `` eingeschlossenen Bezeichners wurde das Ende der Datei erreicht.\", s.length + 1, \"error\", line, column);\r\n        } else {\r\n            this.next(); // skip `\r\n            this.pushToken(TokenType.identifier, s, line, column);\r\n        }\r\n    }\r\n\r\n    pushToken(tt: TokenType, text: string | number | boolean, line: number = this.line, column: number = this.column, length: number = (\"\" + text).length) {\r\n        let t: Token = {\r\n            tt: tt,\r\n            value: text,\r\n            position: {\r\n                column: column,\r\n                line: line,\r\n                length: length\r\n            }\r\n        }\r\n\r\n        for (let tripel of this.tokenTypesToMerge) {\r\n            if (tt == tripel.second && this.nonSpaceLastTokenType == tripel.first) {\r\n                let newLength = column - this.nonSpaceLastToken.position.column + length;\r\n                this.nonSpaceLastToken.tt = tripel.merged;\r\n                this.nonSpaceLastToken.position = { column: this.nonSpaceLastToken.position.column, line: line, length: newLength };\r\n                this.nonSpaceLastToken.value = this.nonSpaceLastToken.value + \" \" + text;\r\n\r\n                this.nonSpaceLastTokenType = tripel.merged;\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (!(this.spaceTokens.indexOf(tt) >= 0)) {\r\n            this.nonSpaceLastTokenType = tt;\r\n            this.nonSpaceLastToken = t;\r\n        }\r\n\r\n        this.tokenList.push(t);\r\n    }\r\n\r\n    pushError(text: string, length: number, errorLevel: ErrorLevel = \"error\", line: number = this.line, column: number = this.column) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: {\r\n                line: line,\r\n                column: column,\r\n                length: length\r\n            },\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n\r\n\r\n    isDigit(a: string, base: number) {\r\n        var charCode = a.charCodeAt(0);\r\n\r\n        if (base == 10) return (charCode >= 48 && charCode <= 57); // 0 - 9\r\n        if (base == 2) return (charCode >= 48 && charCode <= 49); // 0, 1\r\n        if (base == 8) return (charCode >= 48 && charCode <= 55); // 0 - 7\r\n        if (base == 16) return (charCode >= 48 && charCode <= 57) || (charCode >= 97 && charCode <= 102) ||\r\n            (charCode >= 65 && charCode <= 70); // 0 - 9 || a - f || A - F\r\n    }\r\n\r\n    lexSpace() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n\r\n        let posStart = this.pos;\r\n        while (this.currentChar == \" \" || this.currentChar == \"\\t\") {\r\n            this.next();\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n        this.pushToken(TokenType.space, this.input.substring(posStart, posEnd), line, column);\r\n        return;\r\n\r\n    }\r\n\r\n    lexCharacterConstant() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n        this.next();\r\n        let char = this.currentChar;\r\n        if (char == \"\\\\\") {\r\n            let escapeChar = EscapeSequenceList[this.nextChar];\r\n            if (escapeChar == null) {\r\n                this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                if (this.nextChar != \"'\") {\r\n                    char = this.nextChar;\r\n                    this.next();\r\n                }\r\n            } else {\r\n                char = escapeChar;\r\n                this.next();\r\n            }\r\n        }\r\n        this.next();\r\n        if (this.currentChar != \"'\") {\r\n            this.pushError(\"Das Ende der char-Konstante wird erwartet (').\", 1);\r\n        } else {\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.charConstant, char, line, column);\r\n\r\n    }\r\n\r\n    lexStringConstant(beginChar: string) {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let text = \"\";\r\n\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\\\\") {\r\n                let escapeChar = EscapeSequenceList[this.nextChar];\r\n                if (escapeChar == null) {\r\n                    this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                } else {\r\n                    char = escapeChar;\r\n                    this.next();\r\n                }\r\n            } else if (char == beginChar) {\r\n                this.next();\r\n                break;\r\n            } else if (char == \"\\n\" || char == endChar) {\r\n                this.pushError('Innerhalb einer String-Konstante wurde das Zeilenende erreicht.', text.length + 1, \"error\", line, column);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        if (beginChar == \"'\") {\r\n            this.pushToken(TokenType.stringConstant, text, line, column, text.length + 2);\r\n        } else {\r\n            this.pushToken(TokenType.identifier, text, line, column, text.length + 2);\r\n            this.tokenList[this.tokenList.length - 1].isDoubleQuotedIdentifier = true;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    lexMultilineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let lastCharWasNewline: boolean = false;\r\n\r\n        let text = \"/*\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"*\" && this.nextChar == \"/\") {\r\n                this.next();\r\n                this.next();\r\n                text += \"*/\";\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                this.pushError(\"Innerhalb eines Mehrzeilenkommentars (/*... */) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            if (char == \"\\n\") {\r\n                this.line++;\r\n                this.column = 0;\r\n                lastCharWasNewline = true;\r\n                text += char;\r\n            } else if (!(lastCharWasNewline && char == \" \")) {\r\n                text += char;\r\n                lastCharWasNewline = false;\r\n            }\r\n\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n    lexEndofLineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let text = \"--\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\n\") {\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                // this.pushError(\"Innerhalb eines Einzeilenkommentars (//... ) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n\r\n    lexNumber() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let sign: number = 1;\r\n        if (this.currentChar == '-') {\r\n            sign = -1;\r\n            this.next();\r\n        }\r\n\r\n        let posStart = this.pos;\r\n\r\n        let firstChar = this.currentChar;\r\n\r\n        this.next();\r\n\r\n        let radix: number = 10;\r\n\r\n        if (firstChar == '0' && (['b', 'x', '0', '1', '2', '3', '4', '5', '6', '7'].indexOf(this.currentChar) >= 0)) {\r\n            if (this.currentChar == 'x') {\r\n                radix = 16;\r\n                this.next();\r\n            } else if (this.currentChar == 'b') {\r\n                radix = 2;\r\n                this.next();\r\n            } else radix = 8;\r\n            posStart = this.pos;\r\n        }\r\n\r\n        while (this.isDigit(this.currentChar, radix)) {\r\n            this.next();\r\n        }\r\n\r\n        let tt = TokenType.integerConstant;\r\n\r\n        if (this.currentChar == \".\") {\r\n            tt = TokenType.floatingPointConstant;\r\n\r\n            this.next();\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n\r\n        }\r\n\r\n        let base = this.input.substring(posStart, this.pos);\r\n\r\n        posStart = this.pos;\r\n        let exponent: number = 0;\r\n\r\n        let hasExponential: boolean = false;\r\n        //@ts-ignore\r\n        if (this.currentChar == \"e\") {\r\n            hasExponential = true;\r\n            this.next();\r\n            let posExponentStart: number = this.pos;\r\n\r\n            //@ts-ignore\r\n            if (this.currentChar == '-') {\r\n                this.next();\r\n            }\r\n\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n            let exponentString = this.input.substring(posExponentStart, this.pos);\r\n            exponent = Number.parseInt(exponentString);\r\n        }\r\n\r\n        if (this.currentChar == 'd' || this.currentChar == 'f') {\r\n            tt == TokenType.floatingPointConstant;\r\n            this.next();\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n        }\r\n\r\n        let value: number = (tt == TokenType.integerConstant) ? Number.parseInt(base, radix) : Number.parseFloat(base);\r\n        value *= sign;\r\n        if (exponent != 0) value *= Math.pow(10, exponent);\r\n\r\n        this.pushToken(tt, value, line, column);\r\n\r\n    }\r\n\r\n    lexAnnotation() {\r\n        let line = this.line;\r\n        let column = this.column - 1;\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n        this.next(); // skip@\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n        this.pushToken(TokenType.at, text, line, column, text.length + 1);\r\n    }\r\n\r\n    lexIdentifierOrKeyword() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n\r\n        let tt = keywordList[text.toLowerCase()];\r\n        if (tt != null && typeof tt == \"number\") {\r\n\r\n            switch (tt) {\r\n                case TokenType.true:\r\n                    this.pushToken(TokenType.booleanConstant, true, line, column);\r\n                    break;\r\n                case TokenType.false:\r\n                    this.pushToken(TokenType.booleanConstant, false, line, column);\r\n                    break;\r\n                default:\r\n                    this.pushToken(tt, text, line, column);\r\n                    break;\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        this.pushToken(TokenType.identifier, text, line, column);\r\n\r\n    }\r\n\r\n    isSpace(char: string): boolean {\r\n        return char == \" \" || char == \"\\n\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport function errorListToString(errorList: Error[]): string {\r\n    let s = \"\";\r\n\r\n    for (let error of errorList) {\r\n\r\n        s += \"Z \" + error.position.line + \", S \" + error.position.column + \": \";\r\n        s += error.text + \"<br>\";\r\n\r\n    }\r\n\r\n    return s;\r\n}","import { TokenType } from \"../lexer/Token.js\";\r\n\r\ntype CheckFunction = (columnIdentifier: string, parameterValues: number[]) => string;\r\ntype OutputFunction = (value: any, parameterValues: number[]) => string;\r\n\r\nexport abstract class SQLType {\r\n\r\n    abstract canCastTo(type2: SQLType): boolean;\r\n\r\n    abstract getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType;\r\n\r\n    abstract getUnaryResultType(operator: TokenType): SQLType;\r\n\r\n    abstract getBinaryResult(operator: TokenType, value1: any, value2: any): any;\r\n\r\n    abstract toString(): string;\r\n\r\n    abstract getBaseTypeName(): string;\r\n\r\n}\r\n\r\nexport class SQLBaseType extends SQLType {\r\n    // Map<tokenType, Map<SecondType, ResultType>>\r\n    binaryResultTypes: Map<TokenType, Map<SQLBaseType, SQLBaseType>> = new Map();\r\n\r\n    unaryOperators: TokenType[] = [];\r\n\r\n    static baseTypes: SQLBaseType[] = [];\r\n    static baseTypeMap: Map<string, SQLBaseType> = new Map();\r\n\r\n    public canCastToList: string[];\r\n\r\n    constructor(public name: string, public parameterDescriptions: string[],\r\n        public checkFunction: CheckFunction, public outputFunction: OutputFunction, canCastToList: string[]) {\r\n        super();\r\n        this.canCastToList = canCastToList.slice(0);\r\n        let ownIndex = this.canCastToList.indexOf(name);\r\n        if(ownIndex >= 0) this.canCastToList.splice(ownIndex, 1);\r\n    }\r\n\r\n    static fromConstantType(tt: TokenType): SQLBaseType {\r\n        switch (tt) {\r\n            case TokenType.stringConstant:\r\n                return this.baseTypeMap.get(\"text\");\r\n            case TokenType.integerConstant:\r\n                return this.baseTypeMap.get(\"integer\");\r\n            case TokenType.floatingPointConstant:\r\n                return this.baseTypeMap.get(\"float\");\r\n            case TokenType.charConstant:\r\n                return this.baseTypeMap.get(\"text\");\r\n            case TokenType.booleanConstant:\r\n                return this.baseTypeMap.get(\"boolean\");\r\n            case TokenType.keywordNull:\r\n                return this.baseTypeMap.get(\"null\");\r\n        \r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    getBaseTypeName(): string {\r\n        return this.name;\r\n    }\r\n\r\n    toString(): string {\r\n        return this.name;\r\n    }\r\n\r\n    static getBaseType(name: string) {\r\n        if(name == 'char') name = 'varchar';\r\n        return this.baseTypeMap.get(name.toLocaleLowerCase());\r\n    }\r\n\r\n    static addBaseTypes(baseTypes: SQLBaseType[]) {\r\n        SQLBaseType.baseTypes = SQLBaseType.baseTypes.concat(baseTypes);\r\n        baseTypes.forEach(t => SQLBaseType.baseTypeMap.set(t.name, t));\r\n    }\r\n\r\n    addBinaryOperation(tokenType: TokenType | TokenType[], secondType: SQLBaseType, resultType: SQLBaseType, isCommutative: boolean = true) {\r\n\r\n        if (!Array.isArray(tokenType)) tokenType = [tokenType];\r\n\r\n        tokenType.forEach(t => {\r\n            let map: Map<SQLBaseType, SQLBaseType> = this.binaryResultTypes.get(t);\r\n            if (map == null) {\r\n                map = new Map();\r\n                this.binaryResultTypes.set(t, map);\r\n            }\r\n            map.set(secondType, resultType);\r\n            if (isCommutative && secondType != this) {\r\n                secondType.addBinaryOperation(t, this, resultType, false);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    canCastTo(type2: SQLType): boolean {\r\n\r\n        let bt2: SQLBaseType = type2 instanceof SQLBaseType ? type2 : type2[\"baseType\"];\r\n\r\n        return this.canCastToList.indexOf(bt2.name) >= 0 || this.name == bt2.name;\r\n\r\n    }\r\n\r\n    getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType {\r\n\r\n\r\n        let map = this.binaryResultTypes.get(operator);\r\n        if (map == null) return null;\r\n\r\n        let bt2: SQLBaseType = secondType instanceof SQLBaseType ? secondType : secondType[\"baseType\"];\r\n\r\n        return map.get(bt2);\r\n\r\n    }\r\n\r\n    getUnaryResultType(operator: TokenType): SQLType {\r\n        if([TokenType.isNull, TokenType.isNotNull].indexOf(operator) >= 0) return booleanType;\r\n        if(this.unaryOperators.indexOf(operator)>= 0) return this;\r\n    }\r\n\r\n    getBinaryResult(operator: TokenType, value1: any, value2: any): any {\r\n        switch (operator) {\r\n            case TokenType.concatenation:\r\n                if (value1 != null && value2 != null) return value1 + value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.plus:\r\n                if (value1 != null && value2 != null) return value1 + value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.minus:\r\n                if (value1 != null && value2 != null) return value1 - value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.multiplication:\r\n                if (value1 != null && value2 != null) return value1 * value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.division:\r\n                if (value1 != null && value2 != null) return value1 * value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.keywordAnd:\r\n                if (value1 != null && value2 != null) return value1 * value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.keywordOr:\r\n                if (value1 != null && value2 != null) return Math.max(value1, value2);\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.lower:\r\n                if (value1 != null && value2 != null) return value1 < value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.greater:\r\n                if (value1 != null && value2 != null) return value1 >= value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.lowerOrEqual:\r\n                if (value1 != null && value2 != null) return value1 <= value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.greaterOrEqual:\r\n                if (value1 != null && value2 != null) return value1 >= value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.equal:\r\n                return value1 == value2;\r\n            case TokenType.notEqual:\r\n                return value1 != value2;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nlet tens: number[] = [1, 10, 100, 1000, 100000, 100000, 1000000, 10000000, 100000000, 1000000000];\r\n\r\nexport class SQLDerivedType extends SQLType {\r\n\r\n    name: string;\r\n\r\n    constructor(public baseType: SQLBaseType, public parameterValues: number[]) {\r\n        super();\r\n        let parameters = parameterValues.join(\", \");\r\n        this.name = baseType.name + \"(\" + parameters + \")\";\r\n    }\r\n\r\n    toString(): string {\r\n        return this.name;\r\n    }\r\n\r\n    getBaseTypeName(): string {\r\n        return this.baseType.name;\r\n    }\r\n\r\n\r\n    canCastTo(type2: SQLType): boolean {\r\n\r\n        let bt2: SQLBaseType = type2 instanceof SQLBaseType ? type2 : type2[\"baseType\"];\r\n\r\n        return this.baseType.canCastToList.indexOf(bt2.name) >= 0 || this.baseType.name == bt2.name;\r\n\r\n    }\r\n\r\n    getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType {\r\n\r\n\r\n        let map = this.baseType.binaryResultTypes.get(operator);\r\n        if (map == null) return null;\r\n\r\n        let bt2: SQLBaseType = secondType instanceof SQLBaseType ? secondType : secondType[\"baseType\"];\r\n\r\n        let returnBaseType = map.get(bt2);\r\n\r\n        if (this.baseType == bt2 && this.baseType == returnBaseType && secondType instanceof SQLDerivedType) {\r\n            if (this.baseType.name == \"varchar\" || operator == TokenType.concatenation) {\r\n                return new SQLDerivedType(this.baseType, [this.parameterValues[0] + secondType.parameterValues[0]]);\r\n            }\r\n            if (this.baseType.name == \"decimal\") {\r\n                return new SQLDerivedType(this.baseType, [Math.max(this.parameterValues[0], secondType.parameterValues[0]), Math.max(this.parameterValues[1], secondType.parameterValues[1])]);\r\n            }\r\n        }\r\n\r\n        return map.get(bt2);\r\n\r\n    }\r\n\r\n    getUnaryResultType(operator: TokenType): SQLType {\r\n        return this.baseType.getUnaryResultType(operator);\r\n    }\r\n\r\n    getBinaryResult(operator: TokenType, value1: any, value2: any): any {\r\n        let result = this.baseType.getBinaryResult(operator, value1, value2);\r\n        if (this.name = \"varchar\") return result == null ? null : (\"\" + result).substr(0, this.parameterValues[0]);\r\n        if (this.name == \"decimal\") {\r\n            if (result == null) return null;\r\n            return Math.round(result * tens[this.parameterValues[1]]) / tens[this.parameterValues[1]];\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nlet textTypes = [\"varchar\", \"text\" ,\"tinytext\", \"mediumtext\", \"longtext\"];\r\n\r\nvar varcharType = new SQLBaseType(\"varchar\", [\"Maximale Länge\"], (ci, pv) => `check(length(${ci}) <= ${pv[0]})`,\r\n    (v: string, pv) => v.substring(0, pv[0]), textTypes);\r\n\r\nvar textType = new SQLBaseType(\"text\", [\"Maximale Länge\"], (ci, pv) => \"\", (v: string, pv) => v, textTypes.concat([\"date\", \"datetime\"]));\r\nvar tinyTextType = new SQLBaseType(\"tinyText\", [], (ci, pv) => \"\", (v: string, pv) => v, textTypes);\r\nvar mediumTextType = new SQLBaseType(\"mediumText\", [], (ci, pv) => \"\", (v: string, pv) => v, textTypes);\r\nvar longTextType = new SQLBaseType(\"longText\", [], (ci, pv) => \"\", (v: string, pv) => v, textTypes);\r\n\r\nlet floatTypes = [\"decimal\", \"numeric\", \"double\", \"real\", \"float\"];\r\n\r\nvar decimalType = new SQLBaseType(\"decimal\", [\"Gesamtzahl der Stellen\", \"Nachkommastellen\"], (ci, pv) => \"\",\r\n    (v: number, pv) => { let vk = Math.trunc(v); let nk = v - vk; return \"\" + vk + (pv[1] > 0 ? \".\" + Math.round(nk * tens[pv[1]]) : \"\") },\r\n    floatTypes);\r\nvar numericType = new SQLBaseType(\"numeric\", [\"Gesamtzahl der Stellen\", \"Nachkommastellen\"], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\nvar doubleType = new SQLBaseType(\"double\", [\"Gesamtzahl der Stellen\", \"Nachkommastellen\"], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\nvar realType = new SQLBaseType(\"real\", [], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\nvar floatType = new SQLBaseType(\"float\", [], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\n\r\nlet inttypes = [\"int\", \"integer\", \"tinyint\", \"smallint\", \"mediumint\", \"bigint\"];\r\nlet numberTypes = inttypes.concat(floatTypes);\r\n\r\nvar intType = new SQLBaseType(\"int\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar integerType = new SQLBaseType(\"integer\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar tinyIntType = new SQLBaseType(\"tinyint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar smallIntType = new SQLBaseType(\"smallint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar mediumIntType = new SQLBaseType(\"mediumint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar bigIntType = new SQLBaseType(\"bigint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\n\r\nvar dateType = new SQLBaseType(\"date\", [], (ci, pv) => `check(isDate(${ci}))`, (v: string, pv) => v, []);\r\nvar dateTimeType = new SQLBaseType(\"datetime\", [], (ci, pv) => `check(isDateTime(${ci}))`, (v: string, pv) => v, [\"timestamp\"]);\r\nvar timestampType = new SQLBaseType(\"timestamp\", [], (ci, pv) => `check(isDateTime(${ci}))`, (v: string, pv) => v, [\"datetime\"]);\r\n\r\nvar booleanType = new SQLBaseType(\"boolean\", [], (ci, pv) => `check(${ci} == 0 or ${ci} == 1)`, (v, pv) => v == 1 ? \"true\" : \"false\",\r\n    [\"varchar\", \"text\", \"decimal\", \"numeric\"]);\r\n\r\nvar nullType = new SQLBaseType(\"null\", [], (ci, pv) => \"\", (v, pv) => v,\r\n    []);\r\n\r\nlet numericTypes = [decimalType, numericType, doubleType, realType, floatType, intType, integerType, tinyIntType, smallIntType, mediumIntType, bigIntType];\r\n\r\nlet baseTypes = [varcharType, textType, tinyTextType, mediumTextType, longTextType,\r\n    dateType, dateTimeType, timestampType, booleanType, nullType].concat(numericTypes);\r\n\r\nSQLBaseType.addBaseTypes(baseTypes);\r\n\r\nvarcharType.addBinaryOperation(TokenType.concatenation, varcharType, varcharType);\r\nvarcharType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\ntextType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\nvarcharType.addBinaryOperation(TokenType.keywordLike, varcharType, booleanType);\r\nvarcharType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\ntextType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\n\r\nlet numericBinaryOperators: TokenType[] = [TokenType.plus, TokenType.minus, TokenType.multiplication, TokenType.division, TokenType.modulo];\r\nlet comparisonOperators: TokenType[] = [TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual];\r\n\r\nfor (let i = 0; i < numericTypes.length; i++) {\r\n    for (let j = i; j < numericTypes.length; j++) {\r\n        numericTypes[i].addBinaryOperation(numericBinaryOperators, numericTypes[j], numericTypes[j]);\r\n        numericTypes[i].addBinaryOperation(comparisonOperators, numericTypes[j], booleanType);\r\n    }\r\n    numericTypes[i].unaryOperators = [TokenType.minus];\r\n}\r\n\r\ndecimalType.addBinaryOperation(numericBinaryOperators, decimalType, decimalType);\r\n\r\nlet characterTypes = [varcharType, textType];\r\nfor (let i = 0; i < characterTypes.length; i++) {\r\n    for (let j = i; j < characterTypes.length; j++) {\r\n        characterTypes[i].addBinaryOperation(TokenType.concatenation, characterTypes[j], characterTypes[j]);\r\n        characterTypes[i].addBinaryOperation(comparisonOperators, characterTypes[j], booleanType);\r\n    }\r\n}\r\nvarcharType.addBinaryOperation(TokenType.concatenation, varcharType, varcharType);\r\n\r\nlet booleanOperations = [TokenType.keywordAnd, TokenType.keywordOr];\r\nbooleanType.addBinaryOperation(booleanOperations, booleanType, booleanType);\r\n\r\nbooleanType.unaryOperators = [TokenType.keywordNot];\r\n\r\nbaseTypes.forEach(bt => bt.unaryOperators = bt.unaryOperators.concat([TokenType.isNull, TokenType.isNotNull]));","import { param, timers } from \"jquery\";\r\nimport { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenList, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { ASTNode, BracketsNode, SelectNode, TermNode, TableOrSubqueryNode, TableNode, SubqueryNode, GroupByNode, OrderByNode, LimitNode, IdentifierNode, DotNode, ListNode, ColumnNode, InsertNode, ConstantNode, UnaryOpNode, CreateTableNode, CreateTableColumnNode, ForeignKeyInfo, UpdateNode, DeleteNode, DropTableNode, AlterTableNode, AlterTableKind } from \"./AST.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { Column } from \"./SQLTable.js\";\r\nimport { SQLBaseType } from \"./SQLTypes.js\";\r\n\r\ntype ASTNodes = ASTNode[];\r\n\r\ntype TokenTreeNode = {\r\n    type: \"sequence\" | \"alternatives\",\r\n    children: (TokenTreeNode | TokenType)[]\r\n} | TokenType;\r\n\r\nexport type SQLStatement = {\r\n    ast: ASTNode,\r\n    from: TextPosition,\r\n    to: TextPosition,\r\n    hasErrors: boolean,\r\n    acceptedBySQLite: boolean,\r\n    sql?: string,\r\n    sqlCleaned?: string\r\n}\r\n\r\n\r\nexport class Parser {\r\n\r\n    static operatorPrecedence: TokenType[][] = [\r\n        [TokenType.keywordOr], [TokenType.keywordAnd],\r\n        [TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual, TokenType.keywordLike],\r\n        [TokenType.concatenation, TokenType.plus, TokenType.minus], [TokenType.multiplication, TokenType.division, TokenType.modulo],\r\n        [TokenType.keywordIn, TokenType.keywordNotIn]\r\n    ];\r\n\r\n    module: Module;\r\n\r\n    pos: number;\r\n    tokenList: TokenList;\r\n\r\n    errorList: Error[];\r\n\r\n    lookahead = 4;\r\n    ct: Token[];\r\n    lastToken: Token;\r\n    cct: Token;\r\n    tt: TokenType;\r\n    position: TextPosition;\r\n    lastComment: Token;\r\n\r\n    endToken: Token = {\r\n        position: { line: 0, column: 0, length: 1 },\r\n        tt: TokenType.endofSourcecode,\r\n        value: \"das Ende des Programms\"\r\n    };\r\n\r\n    beginStatementKeywords = [\"select\", \"insert into\", \"update\", \"create table\", \"delete from\", \"alter table\", \"drop table\"];\r\n\r\n    constructor(private isInConsoleMode: boolean) {\r\n\r\n    }\r\n\r\n    parse(m: Module) {\r\n\r\n        this.module = m;\r\n\r\n        this.tokenList = m.tokenList;\r\n        this.errorList = [];\r\n\r\n        m.completionHints = new Map();\r\n\r\n        if (this.tokenList.length == 0) {\r\n            this.module.sqlStatements = [];\r\n            this.module.errors[1] = this.errorList;\r\n            this.module.addCompletionHint({ line: 0, column: 0, length: 0 }, { line: 20000, column: 100, length: 0 }, false, false, \r\n                this.beginStatementKeywords);\r\n            return;\r\n        }\r\n\r\n        this.pos = 0;\r\n        this.initializeLookahead();\r\n\r\n\r\n        let lastToken = this.tokenList[this.tokenList.length - 1];\r\n        this.endToken.position = { line: lastToken.position.line, column: lastToken.position.column + lastToken.position.length, length: 1 };\r\n\r\n        this.module.sqlStatements = this.parseMain();\r\n\r\n        this.module.errors[1] = this.errorList;\r\n\r\n    }\r\n\r\n    initializeLookahead() {\r\n\r\n        this.ct = [];\r\n\r\n        for (let i = 0; i < this.lookahead; i++) {\r\n\r\n            let token: Token = this.endToken;\r\n\r\n            while (true) {\r\n\r\n                if (this.pos >= this.tokenList.length) break;\r\n\r\n                let token1 = this.tokenList[this.pos]\r\n                if (token1.tt == TokenType.comment) {\r\n                    this.lastComment = token1;\r\n                }\r\n\r\n                if (token1.tt != TokenType.newline && token1.tt != TokenType.space && token1.tt != TokenType.comment) {\r\n                    token = token1;\r\n                    if (this.lastComment != null) {\r\n                        token.commentBefore = this.lastComment;\r\n                        this.lastComment = null;\r\n                    }\r\n                    break;\r\n                }\r\n\r\n                this.pos++;\r\n\r\n            }\r\n\r\n            this.ct.push(token);\r\n\r\n            if (i < this.lookahead - 1) {\r\n                this.pos++;\r\n            }\r\n\r\n        }\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    nextToken() {\r\n\r\n        let token: Token;\r\n        this.lastToken = this.cct;\r\n\r\n        while (true) {\r\n\r\n            this.pos++;\r\n\r\n            if (this.pos >= this.tokenList.length) {\r\n                token = this.endToken;\r\n                break;\r\n            }\r\n\r\n            token = this.tokenList[this.pos]\r\n            if (token.tt == TokenType.comment) {\r\n                this.lastComment = token;\r\n            }\r\n\r\n            if (token.tt != TokenType.newline && token.tt != TokenType.space && token.tt != TokenType.comment) {\r\n                token.commentBefore = this.lastComment;\r\n                this.lastComment = null;\r\n                break;\r\n            }\r\n\r\n        }\r\n\r\n        for (let i = 0; i < this.lookahead - 1; i++) {\r\n            this.ct[i] = this.ct[i + 1];\r\n        }\r\n\r\n        this.ct[this.lookahead - 1] = token;\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position?: TextPosition, quickFix?: QuickFix) {\r\n        if (position == null) position = Object.assign({}, this.position);\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    skip(tt: TokenType | TokenType[]){\r\n        if(!Array.isArray(tt)) tt = [tt];\r\n        if(tt.indexOf(this.tt) >= 0) this.nextToken();\r\n    }\r\n\r\n    expect(tt: TokenType | TokenType[], skip: boolean = true, invokeSemicolonAngel: boolean = false): boolean {\r\n        if (this.tt != tt && !(Array.isArray(tt) && tt.indexOf(this.tt) >= 0)) {\r\n            if (tt == TokenType.semicolon && this.tt == TokenType.endofSourcecode) {\r\n                return true;\r\n            }\r\n\r\n            let position: TextPosition = this.cct.position;\r\n            if (tt == TokenType.semicolon && this.lastToken != null) {\r\n\r\n                if (this.lastToken.position.line < position.line) {\r\n                    position = {\r\n                        line: this.lastToken.position.line,\r\n                        column: this.lastToken.position.column + this.lastToken.position.length,\r\n                        length: 1\r\n                    }\r\n                }\r\n            }\r\n\r\n            let quickFix: QuickFix = null;\r\n            if (tt == TokenType.semicolon && this.lastToken.position.line < this.cct.position.line &&\r\n                !this.isOperatorOrDot(this.lastToken.tt)\r\n            ) {\r\n                quickFix = {\r\n                    title: 'Strichpunkt hier einfügen',\r\n                    editsProvider: (uri) => {\r\n                        return [{\r\n                            resource: uri,\r\n                            edit: {\r\n                                range: {\r\n                                    startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position.column,\r\n                                    message: \"\",\r\n                                    severity: monaco.MarkerSeverity.Error\r\n                                },\r\n                                text: \";\"\r\n                            }\r\n                        }\r\n                        ];\r\n                    }\r\n                }\r\n\r\n                if (invokeSemicolonAngel) {\r\n                    this.module.main.getSemicolonAngel().register(position, this.module);\r\n                }\r\n            }\r\n\r\n            let expectedValuesArray: string[];\r\n\r\n            if (Array.isArray(tt)) {\r\n                expectedValuesArray = tt.map(token => TokenTypeReadable[token]);\r\n                let expectedTokens = expectedValuesArray.join(\", \");\r\n                this.pushError(\"Erwartet wird eines der folgenden: \" + expectedTokens + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            } else {\r\n                expectedValuesArray = [TokenTypeReadable[tt]];\r\n                this.pushError(\"Erwartet wird: \" + TokenTypeReadable[tt] + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            }\r\n\r\n            // if (!Array.isArray(tt) && tt != TokenType.identifier) {\r\n            //     this.module.addCompletionHint(this.getEndOfPosition(this.lastToken.position), this.getCurrentPositionPlus(1), false, false, expectedValuesArray);\r\n            // }\r\n\r\n            return false;\r\n        }\r\n\r\n        if (skip) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    getEndOfPosition(p: TextPosition): TextPosition {\r\n        return {\r\n            line: p.line,\r\n            column: p.column + p.length,\r\n            length: 0\r\n        }\r\n    }\r\n\r\n    isOperatorOrDot(tt: TokenType): boolean {\r\n        if (tt == TokenType.dot) return true;\r\n        for (let op of Parser.operatorPrecedence) {\r\n            for (let operator of op) {\r\n                if (tt == operator) return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    isEnd(): boolean {\r\n        return this.cct == this.endToken;\r\n    }\r\n\r\n    comesToken(token: TokenType | TokenType[], skip: boolean = false): boolean {\r\n\r\n        if (!Array.isArray(token)) {\r\n            let ret: boolean = this.tt == token;\r\n            if (ret && skip) this.nextToken();\r\n            return ret;\r\n        }\r\n\r\n        return token.indexOf(this.tt) >= 0;\r\n\r\n    }\r\n\r\n    getCurrentPosition(): TextPosition {\r\n        return Object.assign({}, this.position);\r\n    }\r\n\r\n    getCurrentPositionPlus(deltaColumns: number): TextPosition {\r\n        let pos = this.getCurrentPosition();\r\n        pos.column += deltaColumns;\r\n        return pos;\r\n    }\r\n\r\n    getEndOfCurrentToken(): TextPosition {\r\n\r\n        let position = this.getCurrentPosition();\r\n        position.column = position.column + this.position.length;\r\n        position.length = 0;\r\n\r\n        return position;\r\n    }\r\n\r\n    parseMain(): SQLStatement[] {\r\n\r\n        let mainProgram: SQLStatement[] = [];\r\n\r\n        let mainProgramEnd: TextPosition = {\r\n            column: 0,\r\n            line: 10000,\r\n            length: 1\r\n        }\r\n\r\n        let afterLastStatement: TextPosition = {\r\n            column: 0,\r\n            line: 0,\r\n            length: 0\r\n        }\r\n\r\n        while (!this.isEnd()) {\r\n\r\n            let oldPos = this.pos;\r\n\r\n            this.module.addCompletionHint(afterLastStatement, this.getCurrentPositionPlus(5), false, false, \r\n             this.beginStatementKeywords);\r\n\r\n            let errorsBeforeStatement: number = this.errorList.length;\r\n\r\n            while ([TokenType.space, TokenType.newline].indexOf(this.cct.tt) >= 0) {\r\n                this.nextToken();\r\n            }\r\n\r\n            let startPosition = this.getCurrentPosition();\r\n\r\n            let st = this.parseStatement();\r\n\r\n            afterLastStatement = {\r\n                line: this.lastToken.position.line + 1,\r\n                column: 0,\r\n                length: 0\r\n            }\r\n\r\n            while (this.tt == TokenType.semicolon) {\r\n                this.nextToken();\r\n            }\r\n\r\n            mainProgram.push({\r\n                ast: st,\r\n                from: startPosition,\r\n                to: this.getEndOfPosition(this.lastToken.position),\r\n                hasErrors: this.errorList.length > errorsBeforeStatement,\r\n                acceptedBySQLite: false\r\n            });\r\n            // console.log(mainProgram[mainProgram.length - 1]);\r\n\r\n            mainProgramEnd = this.getCurrentPosition();\r\n\r\n            // emergency-forward:\r\n            if (this.pos == oldPos) {\r\n                let beginStatementTokens: TokenType[] =\r\n                    [TokenType.keywordSelect, TokenType.keywordUpdate, TokenType.keywordCreate, TokenType.keywordInsert,\r\n                    TokenType.keywordDelete, TokenType.keywordDrop, TokenType.keywordAlter];\r\n\r\n                let firstBadToken: boolean = true;\r\n\r\n                while (!this.isEnd() && beginStatementTokens.indexOf(this.tt) < 0) {\r\n                    if ([TokenType.space, TokenType.newline].indexOf(this.tt) < 0 && firstBadToken) {\r\n                        this.pushError(\"Erwartet wird eines dieser Schlüsselwörter: \" + beginStatementTokens.map(t => TokenTypeReadable[t]).join(\", \")\r\n                            + \"; Gefunden wurde: \" + this.cct.value);\r\n                        firstBadToken = true;\r\n                    }\r\n                    this.nextToken();\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        this.module.addCompletionHint(afterLastStatement, { line: mainProgramEnd.line + 10, column: 0, length: 0 }, false, false, \r\n            this.beginStatementKeywords);\r\n\r\n        return mainProgram;\r\n\r\n    }\r\n\r\n\r\n\r\n    parseStatement(expectSemicolon: boolean = true): ASTNode {\r\n\r\n        let retStatements: ASTNode = null;\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordSelect:\r\n                return this.parseSelect();\r\n            case TokenType.keywordInsert:\r\n                return this.parseInsert();\r\n            case TokenType.keywordCreate:\r\n                return this.parseCreateTable();\r\n            case TokenType.keywordUpdate:\r\n                return this.parseUpdate();\r\n            case TokenType.keywordDelete:\r\n                return this.parseDelete();\r\n            case TokenType.keywordDrop:\r\n                return this.parseDropTable();\r\n            case TokenType.keywordAlter:\r\n                return this.parseAlterTable();\r\n            default:\r\n                let s = TokenTypeReadable[this.tt];\r\n                if (s == null) s = \"\";\r\n                if (s != this.cct.value) s += \"(\" + this.cct.value + \")\";\r\n                s += \" wird hier nicht erwartet.\";\r\n                this.pushError(s);\r\n                this.nextToken();\r\n                break;\r\n        }\r\n\r\n\r\n        return retStatements;\r\n\r\n    }\r\n\r\n\r\n    parseAlterTable(): AlterTableNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"alter\"\r\n\r\n        let node: AlterTableNode = {\r\n            type: TokenType.keywordAlter,\r\n            kind: null,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n        }\r\n\r\n        if (!this.expect(TokenType.keywordTable, true)) {\r\n            this.addCompletionHintHere(false, false, [\"table\"], 1);\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1);\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        this.addCompletionHintHere(false, false, [\"rename to\", \"rename column\", \"add column\", \"drop column\"], 1);\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordRename: this.parseRenameTableOrColumn(node); break;\r\n            case TokenType.keywordAdd: this.parseAddColumn(node); break;\r\n            case TokenType.keywordDrop: this.parseDropColumn(node); break;\r\n            default:\r\n                this.pushError(\"Erwartet wird rename to, rename column, add column oder drop column\");\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    parseRenameTableOrColumn(node: AlterTableNode) {\r\n\r\n        this.nextToken();\r\n        if (!this.comesToken(TokenType.keywordTo)) {\r\n            this.addCompletionHintHere(node.tableIdentifier, false, [\"column\", \"to\"], 3);\r\n        }\r\n        node.endPosition = this.getEndOfCurrentToken();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordTo:\r\n                this.nextToken();\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                node.kind = \"renameTable\";\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    node.newTableName = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    node.endPosition = this.getEndOfCurrentToken();\r\n                } else {\r\n                    this.pushError(\"Erwartet wird der neue Tabellenname.\");\r\n                }\r\n                return;\r\n            case TokenType.keywordColumn:\r\n                this.nextToken();\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                this.addCompletionHintHere(node.tableIdentifier, false, [], 3);\r\n                if (!this.comesToken(TokenType.identifier)) {\r\n                    this.pushError(\"Erwartet wird der Name einer Spalte der Tabelle \" + node.tableIdentifier + \".\");\r\n                    return;\r\n                }\r\n                node.kind = \"renameColumn\";\r\n                node.oldColumnName = <string>this.cct.value;\r\n                node.oldColumnPosition = this.getCurrentPosition();\r\n                this.nextToken();\r\n                this.addCompletionHintHere(false, false, [\"to\"], 3);\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                if (!this.expect(TokenType.keywordTo, true)) return;\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    node.newColumnName = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    node.endPosition = this.getEndOfCurrentToken();\r\n                } else {\r\n                    this.pushError(\"Erwartet wird der neue Spaltenname.\");\r\n                }\r\n                return;\r\n            default:\r\n                this.pushError(\"Erwartet wird das Schlüsselwort 'to' (zum Umbenennen der Tabelle) oder das Schlüsselwor 'column' (zum Umbenennen einer Spalte).\")\r\n                return;\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    parseDropColumn(node: AlterTableNode) {\r\n        this.nextToken(); // skip 'drop'\r\n        this.comesToken(TokenType.keywordColumn, true);\r\n        node.oldColumnPosition = this.getCurrentPosition();\r\n        this.addCompletionHintHere(node.tableIdentifier, false, [], 3);\r\n\r\n        node.kind = \"dropColumn\";\r\n        node.endPosition = this.getEndOfCurrentToken();\r\n\r\n        if (this.comesToken(TokenType.identifier)) {\r\n            node.oldColumnName = <string>this.cct.value;\r\n            this.nextToken();\r\n        } else {\r\n            this.pushError(\"Erwartet wird der Bezeichner der Spalte, die gelöscht werden soll.\");\r\n        }\r\n\r\n    }\r\n\r\n    parseAddColumn(node: AlterTableNode) {\r\n        this.nextToken(); // skip 'add'\r\n        node.kind = \"addColumn\";\r\n        this.comesToken(TokenType.keywordColumn, true);\r\n        node.columnDefBegin = this.getCurrentPosition();\r\n        node.columnDef = this.parseColumnDefinition(false);\r\n    }\r\n\r\n    parseDropTable(): DropTableNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"Delete\"\r\n\r\n        let node: DropTableNode = {\r\n            type: TokenType.keywordDrop,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null\r\n        }\r\n\r\n        if (!this.expect(TokenType.keywordTable, true)) {\r\n            this.addCompletionHintHere(false, false, [\"table\"], 1);\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1, \"\", \";\");\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n\r\n    }\r\n\r\n    parseDelete(): DeleteNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"Delete\"\r\n\r\n        let node: DeleteNode = {\r\n            type: TokenType.keywordDelete,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n            whereNode: null,\r\n            whereNodeBegin: null,\r\n            whereNodeEnd: null\r\n        }\r\n\r\n        if (!this.expect(TokenType.keywordFrom, true)) {\r\n            this.addCompletionHintHere(false, false, [\"from\"], 1);\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1, \"\", \" where\\n\\t\");\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        this.addCompletionHintHere(false, false, [\"where\\n\\t\"], 1);\r\n        if (!this.expect(TokenType.keywordWhere)) return node;\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n\r\n        node.whereNodeBegin = this.getEndOfPosition(this.lastToken.position);\r\n        node.whereNode = this.parseTerm();\r\n        node.whereNodeEnd = this.getCurrentPosition();\r\n\r\n        this.module.addCompletionHint(node.whereNodeBegin, this.getCurrentPositionPlus(3), node.tableIdentifier, false, []);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n        return node;\r\n\r\n    }\r\n\r\n    parseUpdate(): UpdateNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"update\"\r\n\r\n        let node: UpdateNode = {\r\n            type: TokenType.keywordUpdate,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n            columnIdentifiers: [],\r\n            columnIdentifierPositions: [],\r\n            values: [],\r\n            valuePosBegin: [],\r\n            valuePosEnd: [],\r\n            whereNode: null,\r\n            whereNodeBegin: null,\r\n            whereNodeEnd: null\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1, \"\", \" set\\n\\t\");\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        this.addCompletionHintHere(false, false, [\"set\\n\\t\"], 1);\r\n        if (!this.expect(TokenType.keywordSet)) return node;\r\n        let first: boolean = true;\r\n        do {\r\n            this.addCompletionHintHere(node.tableIdentifier, false, first ? [] : ['where'], 1, null, \" = \");\r\n            first = false;\r\n            if (this.tt != TokenType.identifier) {\r\n                this.pushError(\"Hier wird der Bezeichner derjenigen Spalte der Tabelle \" + node.tableIdentifier + \" erwaretet, deren Wert verändert werden soll.\", \"error\");\r\n                break;\r\n            }\r\n\r\n            node.columnIdentifiers.push(<string>this.cct.value);\r\n            node.columnIdentifierPositions.push(this.getCurrentPosition());\r\n            this.nextToken();\r\n\r\n            this.expect(TokenType.equal, true);\r\n\r\n            node.valuePosBegin.push(this.getCurrentPosition());\r\n            node.values.push(this.parseTerm());\r\n            node.valuePosEnd.push(this.getCurrentPosition());\r\n\r\n        } while (this.comesToken(TokenType.comma, true));\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        if (this.lastToken.tt != TokenType.comma || this.comesToken(TokenType.keywordWhere)) {\r\n            if (!this.expect(TokenType.keywordWhere, true)) return node;\r\n\r\n            node.whereNodeBegin = this.getEndOfPosition(this.lastToken.position);\r\n            node.whereNode = this.parseTerm();\r\n            node.whereNodeEnd = this.getCurrentPosition();\r\n\r\n            this.module.addCompletionHint(node.whereNodeBegin, node.whereNodeEnd, node.tableIdentifier, false, []);\r\n\r\n            node.endPosition = this.getCurrentPosition();\r\n        } else {\r\n            this.comesToken(TokenType.keywordWhere, true); // skip where, if present\r\n        }\r\n        return node;\r\n\r\n    }\r\n\r\n    parseCreateTable(): CreateTableNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"create\"\r\n\r\n        if(!this.expect(TokenType.keywordTable, true)){\r\n            this.module.addCompletionHint(startPosition, this.getCurrentPositionPlus(3), false, false, [\"table\"]);\r\n        }\r\n\r\n        let identifier = \"\";\r\n        if (this.expect(TokenType.identifier, false)) {\r\n            identifier = <string>this.cct.value;\r\n            this.module.addCompletionHint(this.getCurrentPosition(), this.getCurrentPositionPlus(identifier.length + 3), false, false, [\"(\"]);\r\n            this.nextToken();\r\n        }\r\n\r\n        let node: CreateTableNode = {\r\n            type: TokenType.keywordCreate,\r\n            identifier: identifier,\r\n            position: startPosition,\r\n            endPosition: null,\r\n            columnList: [],\r\n            symbolTable: null,\r\n            combinedPrimaryKeyColumns: [],\r\n            foreignKeyInfoList: []\r\n        }\r\n\r\n        if (!this.expect(TokenType.leftBracket, true)) return node;\r\n\r\n        let primaryKeyAlreadyDefined: boolean = false;\r\n        let first: boolean = true;\r\n\r\n        while (this.tt != TokenType.rightBracket) {\r\n            if (!first) this.expect(TokenType.comma, true);\r\n            first = false;\r\n            switch (this.tt) {\r\n                case TokenType.keywordPrimary:\r\n                    if (primaryKeyAlreadyDefined) this.pushError(\"Je Tabelle darf nur ein einziger Primärschlüssel definiert werden.\", \"error\", this.getCurrentPosition());\r\n                    this.parsePrimaryKeyTerm(primaryKeyAlreadyDefined, node);\r\n                    primaryKeyAlreadyDefined = true;\r\n                    break;\r\n                case TokenType.keywordForeign:\r\n                    this.parseForeignKeyTerm(node);\r\n                    break;\r\n                case TokenType.identifier:\r\n                    let columnNode = this.parseColumnDefinition(primaryKeyAlreadyDefined);\r\n                    node.columnList.push(columnNode);\r\n                    primaryKeyAlreadyDefined = primaryKeyAlreadyDefined || columnNode.isPrimary;\r\n                    break;\r\n                default:\r\n                    this.pushError(TokenTypeReadable[this.tt] + \" wird hier nicht erwartet.\", \"error\");\r\n                    break;\r\n            }\r\n            if (!this.comesToken(TokenType.comma)) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        while([TokenType.keywordEngine, TokenType.keywordDefault, TokenType.keywordCollate].indexOf(this.tt) >= 0){\r\n            switch (this.tt) {\r\n                case TokenType.keywordCollate:\r\n                    this.nextToken();\r\n                    this.skip(TokenType.equal);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordEngine:\r\n                    this.nextToken();\r\n                    this.skip(TokenType.equal);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordDefault:\r\n                    this.nextToken();\r\n                    this.expect(TokenType.keywordCharset, true);\r\n                    this.skip(TokenType.equal);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n            }\r\n\r\n        }\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n    parseForeignKeyTerm(node: CreateTableNode) {\r\n        let referencesPos = this.getCurrentPosition();\r\n        this.nextToken();\r\n        this.expect(TokenType.keywordKey);\r\n\r\n        if (this.comesToken(TokenType.identifier)) {\r\n            let fki: ForeignKeyInfo = {\r\n                column: <string>this.cct.value,\r\n                referencesColumn: null,\r\n                referencesTable: null,\r\n                referencesPosition: referencesPos\r\n            }\r\n            this.nextToken();\r\n            this.expect(TokenType.keywordReferences, false);\r\n            this.nextToken(); // skip \"references\"\r\n            this.addCompletionHintHere(false, true, []);\r\n            if (this.expect(TokenType.identifier, false)) {\r\n                fki.referencesTable = <string>this.cct.value;\r\n                this.nextToken();\r\n                let pos0 = this.lastToken.position;\r\n                let pos1 = this.getCurrentPosition();\r\n                this.module.addCompletionHint(this.getEndOfPosition(pos0), pos1, fki.referencesTable, false, []);\r\n\r\n                if (this.expect(TokenType.leftBracket, true)) {\r\n\r\n                    if (this.expect(TokenType.identifier, false)) {\r\n                        fki.referencesColumn = <string>this.cct.value;\r\n                        this.nextToken();\r\n                        node.foreignKeyInfoList.push(fki);\r\n                    } else {\r\n                        this.pushError(\"Erwartet wird der Bezeichner einer Spalte. Gefunden wurde: \" + this.cct.value);\r\n                    }\r\n\r\n                    this.expect(TokenType.rightBracket, true);\r\n                }\r\n            } else {\r\n                this.pushError(\"Erwartet wird der Bezeichner einer Tabelle. Gefunden wurde: \" + this.cct.value);\r\n            }\r\n\r\n        } else {\r\n            this.pushError(\"Erwartet wird der Bezeichner ein Spalte\");\r\n        }\r\n\r\n    }\r\n\r\n    parsePrimaryKeyTerm(primaryKeyAlreadyDefined: boolean, node: CreateTableNode) {\r\n        if (primaryKeyAlreadyDefined) {\r\n            this.pushError(\"Die Tabelle kann nur einen einzigen Primärschlüssel haben.\");\r\n        }\r\n        this.nextToken(); // skip \"primary\"\r\n        this.expect(TokenType.keywordKey, true);\r\n\r\n        let columns: string[] = node.columnList.map(c => c.identifier);\r\n\r\n        this.addCompletionHintHere(false, false, columns);\r\n        if (this.comesToken(TokenType.leftBracket)) {\r\n            this.addCompletionHintHere(false, false, columns);\r\n            this.nextToken();\r\n\r\n            while (true) {\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    node.combinedPrimaryKeyColumns.push(<string>this.cct.value);\r\n                    this.nextToken();\r\n                    this.addCompletionHintHere(false, false, columns, 1);\r\n                    if (!this.comesToken(TokenType.comma)) {\r\n                        break;\r\n                    } else {\r\n                        this.nextToken();\r\n                        this.addCompletionHintHere(false, false, columns);\r\n                    }\r\n                } else {\r\n                    this.pushError(\"Der Bezeichner einer Spalte wird erwartet. Gefunden wurde: \" + this.cct.value);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        } else {\r\n            this.pushError(\"( erwartet.\");\r\n        }\r\n    }\r\n\r\n    parseColumnDefinition(primaryKeyAlreadyDefined: boolean): CreateTableColumnNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n        let identifier = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        let node: CreateTableColumnNode = {\r\n            type: TokenType.columnDef,\r\n            identifier: identifier,\r\n            isPrimary: false,\r\n            isAutoIncrement: false,\r\n            position: position,\r\n            baseType: null,\r\n            notNull: false\r\n        }\r\n\r\n        this.parseType(node, primaryKeyAlreadyDefined);\r\n\r\n        return node;\r\n\r\n    }\r\n\r\n    addCompletionHintHere(hintColumns: boolean | string, hintTables: boolean, hints: string[], additionalColumns: number = 0, praefix: string = \"\", suffix: string = \"\") {\r\n        let pos0 = this.lastToken.position;\r\n        let pos1 = this.getCurrentPosition();\r\n        pos1.column += 1 + additionalColumns\r\n        this.module.addCompletionHint(this.getEndOfPosition(pos0), pos1, hintColumns, hintTables, hints, null, praefix, suffix);\r\n    }\r\n\r\n    parseType(node: CreateTableColumnNode, primaryKeyAlreadyDefined: boolean) {\r\n\r\n        let datatypes = SQLBaseType.baseTypes.map(type => type.toString());\r\n        this.addCompletionHintHere(false, false, datatypes);\r\n\r\n        if (!this.expect(TokenType.identifier, false)) {\r\n            this.pushError(\"Erwartet wird ein Datentyp. Gefunden wurde: \" + this.cct.value);\r\n            return;\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n\r\n        let type = SQLBaseType.getBaseType(identifier);\r\n        if (type == null) {\r\n            this.pushError(\"Erwartet wird ein Datentyp. Gefunden wurde: \" + identifier);\r\n        }\r\n        node.baseType = type;\r\n        this.nextToken();\r\n\r\n        if (this.tt == TokenType.leftBracket) {\r\n            this.nextToken();\r\n            node.parameters = [];\r\n            //@ts-ignore\r\n            while (this.tt == TokenType.integerConstant) {\r\n                node.parameters.push(<number>this.cct.value);\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.comma) break;\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.integerConstant) {\r\n                    this.pushError(\"Erwartet wird eine ganze Zahl, gefunden wurde: \" + this.cct.value);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (type != null && node.parameters.length > type.parameterDescriptions.length) {\r\n                this.pushError(\"Der Datentyp \" + type.toString() + \" hat höchstens \" + type.parameterDescriptions.length + \" Parameter.\");\r\n            }\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        }\r\n\r\n        // primary key autoincrement\r\n        // references table(column)\r\n        // not null\r\n\r\n        this.addCompletionHintHere(false, false, [\"primary key\", \"references\", \"not null\"]);\r\n\r\n        let alreadySeenKeywords: TokenType[] = [];\r\n\r\n        while ([TokenType.keywordAutoincrement, TokenType.keywordKey, TokenType.keywordPrimary, TokenType.keywordNot, TokenType.keywordReferences, TokenType.keywordCollate, TokenType.keywordDefault].indexOf(this.tt) >= 0) {\r\n            if(alreadySeenKeywords.indexOf(this.tt)>=0){\r\n                this.pushError('Das Schlüsselwort ' + TokenTypeReadable[this.tt] + \" darf bei der Definition einer Spalte nicht öfters als ein Mal vorkommen.\");\r\n            }\r\n\r\n            alreadySeenKeywords.push(this.tt);\r\n\r\n            switch (this.tt) {\r\n                case TokenType.keywordAutoincrement:\r\n                    this.nextToken();\r\n                    node.isAutoIncrement = true;\r\n                break;\r\n                case TokenType.keywordPrimary:\r\n                    if (primaryKeyAlreadyDefined) this.pushError(\"In einer Tabelle darf es nur einen einzigen primary key geben.\");\r\n                    this.nextToken(); // skip \"primary\"\r\n                    if (!this.expect(TokenType.keywordKey, true)) {\r\n                        this.addCompletionHintHere(false, false, [\"key\"]);\r\n                    } else {\r\n                        this.addCompletionHintHere(false, false, [\"autoincrement, \\n\"])\r\n                    }\r\n                    node.isPrimary = true;\r\n                    break;\r\n                case TokenType.keywordReferences:\r\n                    node.referencesPosition = this.getCurrentPosition();\r\n                    this.nextToken(); // skip \"references\"\r\n                    this.addCompletionHintHere(false, true, []);\r\n                    if (this.expect(TokenType.identifier, false)) {\r\n                        node.referencesTable = <string>this.cct.value;\r\n                        this.nextToken();\r\n                        let pos0 = this.lastToken.position;\r\n                        let pos1 = this.getCurrentPosition();\r\n                        this.module.addCompletionHint(this.getEndOfPosition(pos0), pos1, node.referencesTable, false, []);\r\n\r\n                        if (this.expect(TokenType.leftBracket, true)) {\r\n\r\n                            if (this.expect(TokenType.identifier, false)) {\r\n                                node.referencesColumn = <string>this.cct.value;\r\n                                this.nextToken();\r\n                            } else {\r\n                                this.pushError(\"Erwartet wird der Bezeichner einer Spalte. Gefunden wurde: \" + this.cct.value);\r\n                            }\r\n\r\n                            this.expect(TokenType.rightBracket, true);\r\n                        }\r\n                    } else {\r\n                        this.pushError(\"Erwartet wird der Bezeichner einer Tabelle. Gefunden wurde: \" + this.cct.value);\r\n                    }\r\n                    break;\r\n                case TokenType.keywordNot:\r\n                    this.nextToken();\r\n                    if (!this.expect(TokenType.keywordNull, true)) {\r\n                        this.addCompletionHintHere(false, false, [\"null\"]);\r\n                    } else {\r\n                        this.addCompletionHintHere(false, false, [\"references\"]);\r\n                    }\r\n                    node.notNull = true;\r\n                    break;\r\n                case TokenType.keywordCollate:\r\n                    this.nextToken();\r\n                    node.collate = <string>this.cct.value;\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordDefault:\r\n                    this.nextToken();\r\n                    node.defaultValue = <string>this.cct.value;\r\n                    //@ts-ignore\r\n                    if(this.tt == TokenType.keywordNull){\r\n                        this.nextToken();\r\n                        break;\r\n                    } else if([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.stringConstant].indexOf(this.tt) >= 0){\r\n                        let constantType = SQLBaseType.fromConstantType(this.tt);\r\n                        if(!constantType.canCastTo(type)){\r\n                            this.pushError(\"Die Konstante hinter 'default' passt nicht zum Datentyp der Spalte.\");\r\n                        }\r\n                        this.nextToken();                        \r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n\r\n        if(node.isAutoIncrement && !node.isPrimary){\r\n            this.pushError(\"autoincrement gibt es nur bei Primärschlüsseln, d.h. es fehlt wahrscheinlich 'primary key'.\", \"error\", node.position);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    parseInsert(): InsertNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"insert\"\r\n\r\n        this.expect(TokenType.keywordInto, true);\r\n\r\n        let node: InsertNode = {\r\n            type: TokenType.keywordInsert,\r\n            position: startPosition,\r\n            endPosition: this.getCurrentPosition(),\r\n            valuesPosition: null,\r\n            columnsPosition: null,\r\n            symbolTable: null,\r\n            columnList: [],\r\n            values: [],\r\n            table: null\r\n        }\r\n\r\n        if (this.tt == TokenType.identifier) {\r\n            node.table = {\r\n                type: TokenType.table,\r\n                identifier: <string>this.cct.value,\r\n                alias: null,\r\n                position: this.getCurrentPosition()\r\n            }\r\n            node.columnsPosition = { line: node.table.position.line, column: node.table.position.column + node.table.position.length, length: 0 };\r\n            this.nextToken();\r\n        } else {\r\n            this.pushError(\"Hier wird der Bezeichner einer Tabelle erwartet. Gefunden wurde: \" + this.cct.value, \"error\");\r\n        }\r\n\r\n        if (this.tt == TokenType.leftBracket) {\r\n\r\n            this.nextToken();\r\n            let first: boolean = true;\r\n            //@ts-ignore\r\n            while (first || this.tt == TokenType.comma) {\r\n\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.identifier) {\r\n                    node.columnList.push({\r\n                        type: TokenType.identifier,\r\n                        identifier: this.cct.value + \"\",\r\n                        position: this.getCurrentPosition()\r\n                    })\r\n\r\n                } else {\r\n                    this.pushError(\"Erwartet wird der Bezeichner einer Spalte. Gefunden wurde: \" + this.cct.value, \"error\");\r\n                }\r\n                this.nextToken();\r\n            }\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        }\r\n\r\n        node.valuesPosition = this.getCurrentPosition();\r\n        this.expect(TokenType.keywordValues, true);\r\n\r\n        this.parseValueLists(node.values);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n    parseValueLists(values: ConstantNode[][]) {\r\n        let insideListTokens = [TokenType.keywordNull, TokenType.charConstant, TokenType.stringConstant, TokenType.booleanConstant, TokenType.floatingPointConstant, TokenType.integerConstant];\r\n\r\n        let outerFirst: boolean = true;\r\n\r\n        while (outerFirst || this.tt == TokenType.comma) {\r\n            if (!outerFirst) {\r\n                this.nextToken(); // consume comma\r\n            }\r\n            outerFirst = false;\r\n            let leftBracketPosition = this.getCurrentPosition();\r\n            if (!this.expect(TokenType.leftBracket, true)) {\r\n                break;\r\n            }\r\n            let line: ConstantNode[] = [];\r\n            let first: boolean = true;\r\n            //@ts-ignore\r\n            while (first || this.tt == TokenType.comma) {\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n                if (this.tt == TokenType.identifier && this.cct.isDoubleQuotedIdentifier) {\r\n                    this.tt = TokenType.stringConstant\r\n                }\r\n                //@ts-ignore\r\n                if (insideListTokens.indexOf(this.tt) < 0) {\r\n                    this.pushError(\"Erwartet wird eine Konstante oder null. Gefunden wurde: \" + this.cct.value, \"error\");\r\n                    this.nextToken();\r\n                } else {\r\n                    line.push({\r\n                        constantType: this.tt,\r\n                        position: this.getCurrentPosition(),\r\n                        constant: this.cct.value,\r\n                        type: TokenType.constantNode\r\n                    });\r\n                    this.nextToken();\r\n                }\r\n            }\r\n            this.expect(TokenType.rightBracket, true);\r\n            if (line.length == 0) {\r\n                this.pushError(\"Eine Zeile kann nur dann in die Tabelle eingefügt werden, wenn sie mindestens einen Spaltenwert besitzt.\", \"error\", leftBracketPosition);\r\n            } else {\r\n                values.push(line);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    parseSelect(): SelectNode {\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"select\"\r\n\r\n        let columnListStart: TextPosition = {\r\n            line: startPosition.line,\r\n            column: startPosition.column + 6,\r\n            length: 1\r\n        };\r\n\r\n        let node: SelectNode = {\r\n            type: TokenType.keywordSelect,\r\n            position: startPosition,\r\n            endPosition: this.getCurrentPosition(),\r\n            symbolTable: null,\r\n            columnList: [],\r\n            fromNode: null,\r\n            whereNode: null,\r\n            parentStatement: null\r\n        }\r\n\r\n        node.columnList = this.parseColumnList([TokenType.keywordFrom], true);\r\n        \r\n        let columnListKeywordArray = [\"distinct\", \"as\", \"*\"];\r\n        if(node.columnList.findIndex(c => c.type == TokenType.allColumns) >= 0){\r\n            columnListKeywordArray.pop();\r\n        }\r\n\r\n        this.module.addCompletionHint(columnListStart, this.getCurrentPositionPlus(1), true, true, columnListKeywordArray)\r\n\r\n        // parse from ...\r\n        if (!this.expect(TokenType.keywordFrom, true)) {\r\n            columnListKeywordArray.unshift(\"from\");\r\n            return null;\r\n        }\r\n\r\n        node.fromStartPosition = { line: this.lastToken.position.line, column: this.lastToken.position.column + this.lastToken.position.length, length: 0 };\r\n\r\n        let dontHint: string[] = [];\r\n        node.fromNode = this.parseTableOrSubQuery(dontHint);\r\n\r\n        let fromListKeywordArray = [\"join\", \"left\", \"right\", \"inner\", \"outer\", \"natural\", \"on\", \"as\", \", \"];\r\n        fromListKeywordArray.splice(fromListKeywordArray.indexOf(this.lastToken.value + \"\"), 1);\r\n        this.module.addCompletionHint(node.fromStartPosition, this.getCurrentPositionPlus(2), false, true, fromListKeywordArray, dontHint)\r\n        node.fromEndPosition = this.getCurrentPosition();\r\n\r\n        // parse where...\r\n\r\n        let whereKeywordArray = [\"like\"];\r\n        if (this.tt == TokenType.keywordWhere) {\r\n            let position = this.getCurrentPosition();\r\n            let whereStart = this.getCurrentPosition();\r\n            this.nextToken();\r\n            node.whereNode = this.parseTerm();\r\n            this.module.addCompletionHint(whereStart, this.getCurrentPositionPlus(2), true, true, whereKeywordArray)\r\n            // if (node.whereNode != null) node.whereNode.position = position;\r\n        } else {\r\n            fromListKeywordArray.push(\"where\");\r\n        }\r\n\r\n        let groupKeywordArray = [];\r\n        if (this.tt == TokenType.keywordGroup) {\r\n            let groupStart = this.getCurrentPosition();\r\n            node.groupByNode = this.parseGroupBy();\r\n            this.module.addCompletionHint(groupStart, this.getCurrentPosition(), true, true, groupKeywordArray);\r\n        } else {\r\n            whereKeywordArray.push(\"group by\");\r\n        }\r\n\r\n        if (this.tt == TokenType.keywordOrder) {\r\n            let orderStart = this.getCurrentPosition();\r\n            node.orderByNode = this.parseOrderBy();\r\n            this.module.addCompletionHint(orderStart, this.getCurrentPosition(), true, true, [\"asc\", \"desc\"]);\r\n        } else {\r\n            whereKeywordArray.push(\"order by\");\r\n            groupKeywordArray.push(\"order by\");\r\n        }\r\n\r\n        if (this.tt == TokenType.keywordLimit) {\r\n            node.limitNode = this.parseLimit();\r\n        }\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n        node.endPosition.column += 3;\r\n\r\n        return node;\r\n    }\r\n\r\n    parseLimit(): LimitNode {\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n        let numberOfRows: TermNode = this.parseTerm();\r\n        let ln: LimitNode = {\r\n            type: TokenType.keywordLimit,\r\n            position: position,\r\n            numberOfRows: numberOfRows\r\n        }\r\n        if (this.tt == TokenType.keywordOffset) {\r\n            this.nextToken();\r\n            ln.offset = this.parseTerm();\r\n        }\r\n        return ln;\r\n    }\r\n\r\n    parseGroupBy(): GroupByNode {\r\n        let position = this.getCurrentPosition();\r\n        this.expect(TokenType.keywordGroup, true);\r\n        this.expect(TokenType.keywordBy, true);\r\n        let gbn: GroupByNode = {\r\n            type: TokenType.keywordGroup,\r\n            columnList: [],\r\n            position: position\r\n        }\r\n        let tokenTypesAfterGroupBy = [TokenType.keywordHaving, TokenType.keywordSelect, TokenType.keywordOrder, TokenType.keywordLimit, TokenType.rightBracket, TokenType.semicolon];\r\n        gbn.columnList = this.parseColumnList(tokenTypesAfterGroupBy, false).map(columnNode => columnNode.term);\r\n        if (this.tt == TokenType.keywordHaving) {\r\n            this.nextToken();\r\n            gbn.having = this.parseTerm();\r\n        }\r\n        return gbn;\r\n    }\r\n\r\n    parseOrderBy(): OrderByNode[] {\r\n        this.expect(TokenType.keywordOrder, true);\r\n        this.expect(TokenType.keywordBy, true);\r\n\r\n        let obnList: OrderByNode[] = [];\r\n        let first: boolean = true;\r\n\r\n        do {\r\n            if (first) {\r\n                first = false;\r\n            } else {\r\n                this.expect(TokenType.comma, true);\r\n            }\r\n            let column: TermNode = this.parseTerm();\r\n            let obn: OrderByNode = {\r\n                type: TokenType.keywordOrder,\r\n                position: this.getCurrentPosition(),\r\n                column: column\r\n            }\r\n            if ([TokenType.keywordAscending, TokenType.keywordDescending].indexOf(this.tt) >= 0) this.nextToken();\r\n            if (this.tt == TokenType.keywordNulls) {\r\n                this.nextToken();\r\n                this.expect([TokenType.keywordFirst, TokenType.keywordLast], true);\r\n            }\r\n            obnList.push(obn);\r\n        } while (this.tt == TokenType.comma);\r\n\r\n        return obnList;\r\n    }\r\n\r\n    parseTableOrSubQuery(dontHint: string[]): TableOrSubqueryNode {\r\n\r\n        let leftSide: TableOrSubqueryNode = this.parseAtomicTableOrSubQuery(dontHint);\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        while (this.parseJoinOperator()) {\r\n\r\n            let rightSide: TableOrSubqueryNode = this.parseAtomicTableOrSubQuery(dontHint);\r\n\r\n            leftSide = {\r\n                type: TokenType.keywordJoin,\r\n                firstOperand: leftSide,\r\n                secondOperand: rightSide,\r\n                position: position,\r\n            }\r\n\r\n            if (this.tt == TokenType.keywordOn) {\r\n                leftSide.on = this.parseTerm();\r\n            }\r\n\r\n        }\r\n\r\n        return leftSide;\r\n\r\n    }\r\n\r\n    parseJoinOperator(): boolean {\r\n        if (this.tt == TokenType.comma) {\r\n            this.nextToken();\r\n            return true;\r\n        }\r\n        if (this.tt == TokenType.keywordNatural) this.nextToken();\r\n        switch (this.tt) {\r\n            case TokenType.keywordLeft:\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.keywordOuter) this.nextToken();\r\n                return this.expect(TokenType.keywordJoin, true);\r\n            case TokenType.keywordInner:\r\n            case TokenType.keywordCross:\r\n                this.nextToken();\r\n                return this.expect(TokenType.keywordJoin, true);\r\n            case TokenType.keywordJoin:\r\n                this.nextToken();\r\n                return true;\r\n            default: return false;\r\n        }\r\n    }\r\n\r\n    parseAtomicTableOrSubQuery(dontHint: string[]): TableOrSubqueryNode {\r\n\r\n        if (!this.expect([TokenType.identifier, TokenType.leftBracket], false)) {\r\n            return null;\r\n        }\r\n\r\n        if (this.tt == TokenType.leftBracket) {\r\n            this.nextToken();\r\n            let ret: TableOrSubqueryNode;\r\n            //@ts-ignore\r\n            if (this.tt == TokenType.keywordSelect) {\r\n                let position = this.getCurrentPosition();\r\n                let selectStatement = this.parseSelect();\r\n                ret = {\r\n                    type: TokenType.subquery,\r\n                    alias: null,\r\n                    position: position,\r\n                    query: selectStatement\r\n                }\r\n            } else {\r\n                ret = this.parseTableOrSubQuery(dontHint);\r\n            }\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n\r\n            //@ts-ignore\r\n            if (this.tt == TokenType.keywordAs && ret.type == TokenType.subquery) {\r\n                this.nextToken();\r\n                if (this.expect(TokenType.identifier, false)) {\r\n                    ret.alias = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    dontHint.push(ret.alias);\r\n                }\r\n            }\r\n\r\n            return ret;\r\n        }\r\n\r\n        if (this.tt == TokenType.identifier) {\r\n            let node: TableNode = {\r\n                type: TokenType.table,\r\n                identifier: <string>this.cct.value,\r\n                alias: null,\r\n                position: this.getCurrentPosition()\r\n            }\r\n            dontHint.push(node.identifier);\r\n            this.nextToken();\r\n\r\n            //@ts-ignore\r\n            if (this.tt == TokenType.keywordAs) {\r\n                this.nextToken();\r\n                if (this.expect(TokenType.identifier, false)) {\r\n                    node.alias = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    dontHint.push(node.alias);\r\n                }\r\n\r\n            }\r\n\r\n            return node;\r\n        }\r\n\r\n    }\r\n\r\n    parseColumnList(tokenTypesAfterListEnd: TokenType[], allowAliases: boolean): ColumnNode[] {\r\n        let columns: ColumnNode[] = [];\r\n\r\n        while ([TokenType.identifier, TokenType.multiplication, TokenType.leftBracket].indexOf(this.tt) >= 0) {\r\n            if (this.tt == TokenType.multiplication) {\r\n                columns.push({\r\n                    term: null,\r\n                    alias: null,\r\n                    position: this.getCurrentPosition(),\r\n                    type: TokenType.allColumns\r\n                });\r\n                this.nextToken();\r\n            } else {\r\n                let columnTerm = this.parseTerm();\r\n                if (columnTerm != null) {\r\n                    let column: ColumnNode = {\r\n                        type: TokenType.column,\r\n                        term: columnTerm,\r\n                        position: columnTerm.position\r\n                    }\r\n                    columns.push(column);\r\n                    if (this.comesToken(TokenType.keywordAs)) {\r\n                        this.nextToken();\r\n                        if (this.expect(TokenType.identifier, false)) {\r\n                            column.alias = \"\" + this.cct.value;\r\n                        }\r\n                        this.nextToken();\r\n                    }\r\n                }\r\n            }\r\n            if (tokenTypesAfterListEnd.indexOf(this.tt) >= 0) {\r\n                break;\r\n            }\r\n            this.expect(TokenType.comma, true);\r\n        }\r\n\r\n        if (columns.length == 0) {\r\n            this.pushError(\"Es fehlt die kommaseparierte Liste der gewünschten Spalten.\", \"error\");\r\n        }\r\n\r\n        return columns;\r\n    }\r\n\r\n\r\n    parseTerm(): TermNode {\r\n        return this.parseTermBinary(0);\r\n    }\r\n\r\n    parseTermBinary(precedence: number): TermNode {\r\n\r\n        let left: TermNode;\r\n        if (precedence < Parser.operatorPrecedence.length - 1) {\r\n            left = this.parseTermBinary(precedence + 1);\r\n        } else {\r\n            left = this.parseUnary();\r\n        }\r\n\r\n        let operators = Parser.operatorPrecedence[precedence];\r\n\r\n        if (left == null || operators.indexOf(this.tt) < 0) {\r\n            return left;\r\n        }\r\n\r\n        let first = true;\r\n\r\n        while (first || operators.indexOf(this.tt) >= 0) {\r\n\r\n            let operator: TokenType = this.tt;\r\n\r\n            first = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            this.nextToken();\r\n            let right: TermNode;\r\n            if (precedence < Parser.operatorPrecedence.length - 1) {\r\n                right = this.parseTermBinary(precedence + 1);\r\n            } else {\r\n                right = this.parseUnary();\r\n            }\r\n\r\n            left = {\r\n                type: TokenType.binaryOp,\r\n                position: position,\r\n                operator: operator,\r\n                firstOperand: left,\r\n                secondOperand: right\r\n            };\r\n\r\n\r\n        }\r\n\r\n        return left;\r\n\r\n    }\r\n\r\n\r\n    // -, not, this, super, a.b.c[][].d, a.b(), b() (== this.b()), super.b(), super()\r\n    parseUnary(): TermNode {\r\n\r\n        let term: TermNode;\r\n        let position: TextPosition = this.getCurrentPosition();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n                return this.parseBracket();\r\n            case TokenType.minus:\r\n                // case TokenType.not:\r\n                position = position;\r\n                let tt1 = this.tt;\r\n                this.nextToken();\r\n                term = this.parseUnary();\r\n\r\n                return {\r\n                    type: TokenType.unaryOp,\r\n                    position: position,\r\n                    operand: term,\r\n                    operator: tt1\r\n                };\r\n\r\n            case TokenType.integerConstant:\r\n            case TokenType.charConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n                term = {\r\n                    type: TokenType.constantNode,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: this.tt,\r\n                    constant: this.cct.value\r\n                };\r\n                let isStringConstant = this.tt == TokenType.stringConstant;\r\n                this.nextToken();\r\n\r\n                if (isStringConstant) return this.parseDotOrArrayChains(term);\r\n\r\n                return term;\r\n            case TokenType.identifier: // attribute of current class or local variable\r\n\r\n                let identifier1 = <string>this.cct.value;\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    let rightBracketPosition = parameters.rightBracketPosition;\r\n\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position1,\r\n                        rightBracketPosition: rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        identifier: identifier1,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.identifier,\r\n                        identifier: identifier1,\r\n                        position: position\r\n                    }\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.dot) {\r\n                        let position = this.getCurrentPosition();\r\n                        this.nextToken();\r\n                        this.expect(TokenType.identifier, false);\r\n                        let secondIdentifier: IdentifierNode = {\r\n                            type: TokenType.identifier,\r\n                            identifier: <string>this.cct.value,\r\n                            position: this.getCurrentPosition()\r\n                        }\r\n                        this.nextToken();\r\n                        term = {\r\n                            type: TokenType.dot,\r\n                            identifierLeft: <IdentifierNode>term,\r\n                            identifierRight: secondIdentifier,\r\n                            position: position\r\n                        }\r\n\r\n                    } else if ([TokenType.isNull, TokenType.isNotNull].indexOf(this.tt) >= 0) {\r\n                        term = {\r\n                            type: TokenType.unaryOp,\r\n                            operand: term,\r\n                            operator: this.tt,\r\n                            position: position\r\n                        };\r\n                        this.nextToken();\r\n                    }\r\n                }\r\n\r\n                return term;\r\n            default:\r\n                this.pushError(\"Erwartet wird eine Variable, ein Methodenaufruf oder eine Konstante. Gefunden wurde: \" + this.cct.value);\r\n                return null;\r\n        }\r\n\r\n    }\r\n\r\n    parseList(): ListNode {\r\n        let node: ListNode = {\r\n            type: TokenType.list,\r\n            position: this.getCurrentPosition(),\r\n            elements: []\r\n        }\r\n\r\n        let constantTypes = [TokenType.charConstant, TokenType.stringConstant, TokenType.booleanConstant, TokenType.floatingPointConstant, TokenType.integerConstant];\r\n\r\n        while (constantTypes.indexOf(this.tt) >= 0) {\r\n            node.elements.push({\r\n                type: TokenType.constantNode,\r\n                constant: this.cct.value,\r\n                constantType: this.tt,\r\n                position: this.cct.position\r\n            });\r\n            this.nextToken();\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            }\r\n            this.nextToken();\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    parseBracket(): TermNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n        let tokenBeforeBracket = this.lastToken;\r\n        this.nextToken(); // consume (\r\n\r\n        if (this.tt == TokenType.keywordSelect) {\r\n            let selectNode = this.parseSelect();\r\n            this.expect(TokenType.rightBracket, true);\r\n            return selectNode;\r\n        } else if ([TokenType.comma, TokenType.rightBracket].indexOf(this.ct[1].tt) >= 0 &&\r\n            [TokenType.keywordIn, TokenType.keywordNotIn].indexOf(tokenBeforeBracket.tt) >= 0) {\r\n            let listNode = this.parseList();\r\n            this.expect(TokenType.rightBracket, true);\r\n            return listNode;\r\n        } else {\r\n            let term = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            let bracketsNode: BracketsNode = {\r\n                position: rightBracketPosition,\r\n                type: TokenType.rightBracket,\r\n                termInsideBrackets: term\r\n            }\r\n\r\n\r\n            return bracketsNode;\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    parseMethodCallParameters(): { rightBracketPosition: TextPosition, nodes: TermNode[], commaPositions: TextPosition[] } {\r\n        // Assumption: current token is (        \r\n        this.nextToken();\r\n        if (this.tt == TokenType.rightBracket) {\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n            return { rightBracketPosition: rightBracketPosition, nodes: [], commaPositions: [] };\r\n        }\r\n\r\n        let parameters: TermNode[] = [];\r\n        let commaPositions: TextPosition[] = [];\r\n\r\n        while (true) {\r\n            let pos = this.pos;\r\n\r\n            if (this.tt == TokenType.multiplication) {\r\n                this.nextToken();\r\n                parameters.push({\r\n                    type: TokenType.allColumns,\r\n                    position: this.getCurrentPosition(),\r\n                });\r\n            } else {\r\n                let parameter = this.parseTerm();\r\n                if (parameter != null) {\r\n                    parameters.push(parameter);\r\n                }\r\n            }\r\n\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            } else {\r\n                commaPositions.push(this.getCurrentPosition());\r\n                this.nextToken(); // consume comma\r\n            }\r\n\r\n            // emergency-step:\r\n            if (this.pos == pos) {\r\n                this.nextToken();\r\n            }\r\n\r\n        }\r\n\r\n        let position = this.getCurrentPosition();\r\n        let rightBracketFound = this.expect(TokenType.rightBracket, true);\r\n\r\n        return { rightBracketPosition: rightBracketFound ? position : null, nodes: parameters, commaPositions: commaPositions };\r\n\r\n    }\r\n\r\n    parseDotOrArrayChains(term: TermNode): TermNode {\r\n\r\n        if (term == null) return null;\r\n\r\n        while (this.comesToken([TokenType.dot, TokenType.leftSquareBracket])) {\r\n            if (this.tt == TokenType.dot) {\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.identifier) {\r\n                    this.pushError(\"Erwartet wird der Bezeichner eines Attributs oder einer Methode, gefunden wurde: \" + this.cct.value);\r\n                    return term;\r\n                }\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position,\r\n                        rightBracketPosition: parameters.rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        identifier: identifier,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                }\r\n                // else {\r\n                //     term = {\r\n                //         type: TokenType.pushAttribute,\r\n                //         position: position,\r\n                //         identifier: identifier,\r\n                //         object: term\r\n                //     }\r\n                // }\r\n\r\n            }\r\n        }\r\n\r\n        return term;\r\n    }\r\n\r\n\r\n}","import { ColumnStructure, TableStructure } from \"../../tools/DatabaseTools.js\";\nimport { SQLType, SQLBaseType, SQLDerivedType } from \"./SQLTypes.js\";\n\n\nexport class Column {\n\n    references: Column;\n    fromColumnStructure?: ColumnStructure;\n    notNull: boolean;\n\n    constructor(public identifier: string, public type: SQLType, public table: Table, public isPrimaryKey: boolean, public isNullable: boolean, public defaultValue: string, public isAutoIncrement){\n\n    }\n\n    static fromColumnStructure(cs: ColumnStructure, table: Table): Column {\n\n        let regex1 = /^(\\w*) *(?:\\((.*)\\))?.*$/;\n\n        let typeMatch1 = cs.completeTypeSQL.match(regex1);\n        let baseTypeIdentifier: string = typeMatch1[1];\n        let commaSeparatedParameters: string = typeMatch1[2];\n\n        let parameterValues: number[] = [];\n        if(commaSeparatedParameters != null){\n            parameterValues = commaSeparatedParameters.split(',').map(v => parseInt(v.trim()));           \n        }\n\n        let type: SQLType = SQLBaseType.getBaseType(baseTypeIdentifier);\n        if(parameterValues.length > 0 && type != null){\n            type = new SQLDerivedType(<SQLBaseType>type, parameterValues);\n        }\n\n        let column = new Column(cs.name, type, table, cs.isPrimaryKey, !cs.isPrimaryKey, cs.defaultValue, cs.isAutoIncrement);\n        column.notNull = cs.notNull;\n        \n        column.fromColumnStructure = cs;\n\n        return column;\n    }\n\n}\n\nexport class Table {\n    \n    public columns: Column[] = [];\n\n    public size: number;\n\n    constructor(public identifier: string){\n\n    }\n\n    private static fromTableStructure(ts: TableStructure): Table {\n        let table: Table = new Table(ts.name);\n        table.columns = ts.columns.map( column => Column.fromColumnStructure(column, table));\n        table.size = ts.size;\n        return table;\n    }\n\n    static fromTableStructureList(tsList: TableStructure[]): Table[]{\n\n        if(tsList == null) tsList = [];\n\n        let tables: Table[] = tsList.map(ts => Table.fromTableStructure(ts));\n\n        let columnStructureToColumnMap: Map<ColumnStructure, Column> = new Map();\n        for(let table of tables){\n            for(let column of table.columns){\n                columnStructureToColumnMap.set(column.fromColumnStructure, column);\n            }\n        }\n\n        for(let table of tables){\n            for(let column of table.columns){\n                let referencedCs = column.fromColumnStructure.references;\n                if(referencedCs != null){\n                    let referencedColumn = columnStructureToColumnMap.get(referencedCs);\n                    column.references = referencedColumn;\n                }\n            }\n        }\n\n        return tables;\n    }\n\n}","import { DatabaseStructure } from \"../../tools/DatabaseTools.js\";\r\nimport { TextPosition } from \"../lexer/Token.js\";\r\nimport { Table, Column } from \"./SQLTable.js\";\r\n\r\nexport type Symbol = {\r\n    identifier: string;\r\n    table?: Table;\r\n    column?: Column;\r\n    tableAlias?: string;\r\n    posOfDefinition: TextPosition;\r\n    referencedOnPositions: TextPosition[];\r\n}\r\n\r\nexport class SymbolTable {\r\n    parent: SymbolTable; // SymbolTable of parent scope\r\n    positionFrom: TextPosition;\r\n    positionTo: TextPosition;\r\n\r\n    childSymbolTables: SymbolTable[] = [];\r\n\r\n    private symbols: Map<string, Symbol[]> = new Map();\r\n    symbolList: Symbol[] = [];\r\n\r\n    constructor(parentSymbolTable: SymbolTable, positionFrom: TextPosition, positionTo: TextPosition) {\r\n\r\n        this.parent = parentSymbolTable;\r\n\r\n        this.positionFrom = positionFrom;\r\n        this.positionTo = positionTo;\r\n\r\n\r\n        if (this.parent != null) {\r\n            this.parent.childSymbolTables.push(this);\r\n        }\r\n    }\r\n\r\n    extractDatabaseStructure(databaseStructure: DatabaseStructure) {\r\n        for (let table of Table.fromTableStructureList(databaseStructure?.tables)) {\r\n\r\n            this.storeTableSymbols(table);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    storeTableSymbols(table: Table){\r\n        this.storeSymbol({\r\n            identifier: table.identifier,\r\n            posOfDefinition: null,\r\n            referencedOnPositions: [],\r\n            table: table\r\n        });\r\n\r\n        for (let column of table.columns) {\r\n            this.storeSymbol({\r\n                identifier: column.identifier,\r\n                posOfDefinition: null,\r\n                referencedOnPositions: [],\r\n                column: column\r\n            });\r\n        }\r\n    }\r\n\r\n    storeSymbol(symbol: Symbol) {\r\n        let list: Symbol[] = this.symbols.get(symbol.identifier);\r\n        if (list == null) {\r\n            list = [symbol];\r\n            this.symbols.set(symbol.identifier.toLowerCase(), list);\r\n        } else {\r\n            list.push(symbol);\r\n        }\r\n        this.symbolList.push(symbol);\r\n    }\r\n\r\n    findTableAtPosition(line: number, column: number): SymbolTable {\r\n\r\n        if (!this.containsPosition(line, column)) {\r\n            return null;\r\n        }\r\n\r\n        let shortestSymbolTableContainingPosition = null;\r\n        let shortestPosition = 10000000;\r\n\r\n        for (let st of this.childSymbolTables) {\r\n            if (st.containsPosition(line, column)) {\r\n                let st1 = st.findTableAtPosition(line, column);\r\n                if (st1.positionTo.line - st1.positionFrom.line < shortestPosition) {\r\n                    shortestSymbolTableContainingPosition = st1;\r\n                    shortestPosition = st1.positionTo.line - st1.positionFrom.line;\r\n                }\r\n            }\r\n            // if(st.containsPosition(line, column) && st.positionTo.line - st.positionFrom.line < shortestPosition){\r\n            //     shortestSymbolTableContainingPosition = st;\r\n            //     shortestPosition = st.positionTo.line - st.positionFrom.line;\r\n            // }\r\n        }\r\n\r\n        if (shortestSymbolTableContainingPosition != null) {\r\n            return shortestSymbolTableContainingPosition;\r\n        } else {\r\n            return this;\r\n        }\r\n\r\n    }\r\n\r\n    containsPosition(line: number, column: number) {\r\n        if (line < this.positionFrom.line || line > this.positionTo.line) {\r\n            return false;\r\n        }\r\n\r\n        if (line == this.positionFrom.line && column < this.positionFrom.column) return false;\r\n        if (line == this.positionTo.line && column > this.positionTo.column + 1) return false;\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    findTable(identifier: string): Table {\r\n        let tables = this.findTables(identifier);\r\n        if(tables.length == 0) return null;\r\n        return tables[0].table;\r\n    }\r\n\r\n    findTables(identifier: string): Symbol[] {\r\n\r\n        let symbolTable: SymbolTable = this;\r\n        while(symbolTable != null){\r\n\r\n            let symbols = symbolTable.symbols.get(identifier.toLowerCase());\r\n            if(symbols != null){\r\n                symbols = symbols.filter(s => s.table != null);\r\n                if(symbols.length > 0){\r\n                    return symbols;\r\n                }\r\n            }\r\n\r\n            symbolTable = symbolTable.parent;\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    findColumn(identifier: string): Symbol[] {\r\n\r\n        let symbolTable: SymbolTable = this;\r\n        while(symbolTable != null){\r\n\r\n            let symbols = symbolTable.symbols.get(identifier.toLowerCase());\r\n            if(symbols != null){\r\n                symbols = symbols.filter(s => s.column != null);\r\n                if(symbols.length > 0){\r\n                    return symbols;\r\n                }\r\n            }\r\n\r\n            symbolTable = symbolTable.parent;\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { SQLBaseType, SQLType } from \"./SQLTypes.js\";\r\n\r\nexport class SQLMethodParameter {\r\n    type: SQLType;\r\n    constructor(public identifier: string, type: string){\r\n        this.type = SQLBaseType.getBaseType(type);\r\n    }\r\n}\r\n\r\nexport class SQLMethod {\r\n    acceptsStarParameter: boolean = false;\r\n    public returnType: SQLType;\r\n    constructor(public identifier: string, public isAggregating: boolean, returnType: string, public parameters: SQLMethodParameter[]){\r\n        this.returnType = SQLBaseType.getBaseType(returnType);\r\n    }\r\n\r\n}\r\n\r\nexport class SQLMethodStore {\r\n\r\n    static instance: SQLMethodStore;\r\n    public methods: SQLMethod[] = [];\r\n\r\n    static getInstance():SQLMethodStore {\r\n        if(this.instance == null){\r\n            this.instance = new SQLMethodStore();\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    constructor(){\r\n        this.pushOneParameterMethod(\"max\" ,\"integer\", \"integer\");\r\n        this.pushOneParameterMethod(\"max\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"min\" ,\"integer\", \"integer\");\r\n        this.pushOneParameterMethod(\"min\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"avg\" ,\"integer\", \"integer\");\r\n        this.pushOneParameterMethod(\"avg\" ,\"float\", \"float\");\r\n\r\n        let countMethod = new SQLMethod(\"count\", true, \"integer\", [new SQLMethodParameter(\"spalte\", \"text\")]);\r\n        countMethod.acceptsStarParameter = true;\r\n        this.methods.push(countMethod);\r\n    }\r\n    \r\n    getMethods(identifier: string){\r\n        return this.methods.filter(m => m.identifier == identifier.toLowerCase());\r\n    }\r\n\r\n\r\n    pushOneParameterMethod(identifier: string, returnType: string, parameterType: string){\r\n        this.methods.push(new SQLMethod(identifier, true, returnType, [new SQLMethodParameter(\"spalte\", parameterType)]));\r\n\r\n    }\r\n}","export function hash(s: string){\r\n    let hash: number = 0;\r\n    let chr: number;\r\n    for (let i = 0; i < s.length; i++) {\r\n      chr   = s.charCodeAt(i);\r\n      hash  = ((hash << 5) - hash) + chr;\r\n      hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n\r\nexport function escapeHtml(unsafe: string): string {\r\n  return unsafe\r\n      .replace(/['\"]+/g, '')\r\n       .replace(/&/g, \"&amp;\")\r\n       .replace(/</g, \"&lt;\")\r\n       .replace(/>/g, \"&gt;\")\r\n       .replace(/\"/g, \"&quot;\")\r\n       .replace(/'/g, \"&#039;\");\r\n}\r\n\r\nexport function dateToString(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth() + 1)}.${date.getFullYear()}, ${twoDez(date.getHours())}:${twoDez(date.getMinutes())}`;\r\n}\r\n\r\nexport function dateToStringWithoutTime(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth())}.${date.getFullYear()}`;\r\n}\r\n\r\nfunction twoDez(z: number):string {\r\n  if(z < 10) return \"0\" + z;\r\n  return \"\" + z;\r\n}\r\n\r\nexport function stringToDate(text: string): Date {\r\n\r\n  let match = text.match(/^(\\d{2})\\.(\\d{2})\\.(\\d{4}), (\\d{2}):(\\d{2})$/);\r\n\r\n  let date: Date = new Date(Number.parseInt(match[3]), Number.parseInt(match[2]), Number.parseInt(match[1]), Number.parseInt(match[4]), Number.parseInt(match[5]) );\r\n\r\n  return date;\r\n}\r\n\r\nexport function stringWrap(s: string, length: number ): string{\r\n  return s.replace(\r\n    new RegExp(`(?![^\\\\n]{1,${length}}$)([^\\\\n]{1,${length}})\\\\s`, 'g'), '$1\\n'\r\n  );\r\n} \r\n\r\nexport function formatAsJavadocComment(s: string, indent: number|string = \"\"): string {\r\n  let indentString = \"\";\r\n\r\n  if(typeof indent == \"string\"){\r\n    indentString = indent;\r\n  } else {\r\n    for(let i = 0; i < indent; i++){\r\n      indentString += \" \";\r\n    }\r\n  }\r\n\r\n  s = stringWrap(s, 60);\r\n  if(s.length > 0) s = \"\\n\" + s;\r\n  s = indentString + \"/**\" + s.replace(/\\n/g, \"\\n\" + indentString + \" * \") + \"\\n\" + indentString + \" */\";\r\n  return s;\r\n}\r\n\r\n\r\nexport function isDate(inputText: string) {\r\n\r\n      if (inputText == null || typeof inputText != 'string') return false;\r\n\r\n      // var dateformat = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/;\r\n      var dateformat = /^\\d{4}[\\/\\-](0?[1-9]|1[012])[\\/\\-](0?[1-9]|[12][0-9]|3[01])$/;\r\n      // Match the date format through regular expression\r\n      if (inputText.match(dateformat)) {\r\n          //Test which seperator is used '/' or '-'\r\n          var opera1 = inputText.split('/');\r\n          var opera2 = inputText.split('-');\r\n          var lopera1 = opera1.length;\r\n          var lopera2 = opera2.length;\r\n          // Extract the string into month, date and year\r\n          if (lopera1 > 1) {\r\n              var pdate = inputText.split('/');\r\n          }\r\n          else if (lopera2 > 1) {\r\n              var pdate = inputText.split('-');\r\n          }\r\n          if (pdate.length != 3) return false;\r\n          var dd = parseInt(pdate[2]);\r\n          var mm = parseInt(pdate[1]);\r\n          var yy = parseInt(pdate[0]);\r\n          // Create list of days of a month [assume there is no leap year by default]\r\n          var ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n          if (mm == 1 || mm > 2) {\r\n              if (dd > ListofDays[mm - 1]) {\r\n                  return false;\r\n              }\r\n          }\r\n          if (mm == 2) {\r\n              var lyear = false;\r\n              if ((!(yy % 4) && yy % 100) || !(yy % 400)) {\r\n                  lyear = true;\r\n              }\r\n              if ((lyear == false) && (dd >= 29)) {\r\n                  return false;\r\n              }\r\n              if ((lyear == true) && (dd > 29)) {\r\n                  return false;\r\n              }\r\n              return true;\r\n          }\r\n\r\n          return true;\r\n\r\n      }\r\n      else {\r\n          return false;\r\n      }\r\n  }\r\n\r\n  export function isDateTime(inputText: string) {\r\n\r\n      if (inputText == null || typeof inputText != 'string') return false;\r\n\r\n      // var dateformat = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/;\r\n      var dateformat = /^\\d{4}[\\-](0[1-9]|1[012])[\\-](0[1-9]|[12][0-9]|3[01]) ([01][1-9]|2[0123]):([0-5][0-9]):([0-5][0-9])$/;\r\n      // Match the date format through regular expression\r\n      if (inputText.match(dateformat)) {\r\n          var splitStr = inputText.split(' ');\r\n          var dateStr = splitStr[0];\r\n          //var timeStr = splitStr[1];\r\n\r\n          if (dateStr.length != 10) return false;\r\n          var dd = parseInt(dateStr.substring(8,10));\r\n          var mm = parseInt(dateStr.substring(5, 7));\r\n          var yy = parseInt(dateStr.substring(0, 4));\r\n          // Create list of days of a month [assume there is no leap year by default]\r\n          var ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n          if (mm == 1 || mm > 2) {\r\n              if (dd > ListofDays[mm - 1]) {\r\n                  return false;\r\n              }\r\n          }\r\n          if (mm == 2) {\r\n              var lyear = false;\r\n              if ((!(yy % 4) && yy % 100) || !(yy % 400)) {\r\n                  lyear = true;\r\n              }\r\n              if ((lyear == false) && (dd >= 29)) {\r\n                  return false;\r\n              }\r\n              if ((lyear == true) && (dd > 29)) {\r\n                  return false;\r\n              }\r\n              return true;\r\n          }\r\n\r\n          return true;\r\n\r\n      }\r\n      else {\r\n          return false;\r\n      }\r\n  }\r\n","import { DatabaseTool } from \"../../tools/DatabaseTools.js\";\nimport { TextPosition, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\nimport { CompletionHint, Module } from \"./Module.js\";\nimport { Symbol, SymbolTable } from \"./SymbolTable.js\";\nimport { AlterTableNode, ASTNode, BinaryOpNode, CreateTableNode, DeleteNode, DotNode, DropTableNode, IdentifierNode, InsertNode, MethodcallNode, SelectNode, TableOrSubqueryNode, TermNode, UpdateNode } from \"./Ast.js\";\nimport { Error, ErrorLevel, QuickFix } from \"../lexer/Lexer.js\";\nimport { Column, Table } from \"./SQLTable.js\";\nimport { SQLBaseType, SQLType } from \"./SQLTypes.js\";\nimport { SQLMethodStore } from \"./SQLMethods.js\";\nimport { isDate, isDateTime } from \"../../tools/StringTools.js\";\n\n\nexport class SymbolResolver {\n\n    symbolTableStack: SymbolTable[] = [];\n    errorList: Error[];\n    module: Module;\n    databaseTool: DatabaseTool;\n    tables: Table[];\n\n    constructor(databaseTool: DatabaseTool) {\n        this.databaseTool = databaseTool;\n        this.tables = Table.fromTableStructureList(databaseTool.databaseStructure?.tables);\n    }\n\n    start(module: Module) {\n        this.module = module;\n        this.symbolTableStack = [];\n        this.errorList = [];\n\n        module.mainSymbolTable = new SymbolTable(null, { column: 0, line: 0, length: 0 }, { column: 0, line: 100000, length: 0 })\n\n        this.symbolTableStack.push(module.mainSymbolTable);\n\n        for (let statement of this.module.sqlStatements) {\n\n            let errorsBeforeStatement = this.errorList.length;\n\n            let astNode = statement.ast;\n            if (astNode == null) continue;\n\n            switch (astNode.type) {\n                case TokenType.keywordSelect:\n                    this.resolveSelect(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordInsert:\n                    this.resolveInsert(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordCreate:\n                    this.resolveCreateTable(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordUpdate:\n                    this.resolveUpdate(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordDelete:\n                    this.resolveDelete(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordDrop:\n                    this.resolveDropTable(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordAlter:\n                    this.resolveAlterTable(astNode)\n                    this.symbolTableStack.pop();\n                    break;\n\n                default:\n                    break;\n            }\n\n            statement.hasErrors = statement.hasErrors || this.errorList.length > errorsBeforeStatement;\n\n        }\n\n        module.errors[2] = this.errorList;\n\n    }\n\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position: TextPosition, quickFix?: QuickFix) {\n        // if (position == null) position = Object.assign({}, this.position);\n        this.errorList.push({\n            text: text,\n            position: position,\n            quickFix: quickFix,\n            level: errorLevel\n        });\n    }\n\n\n    getCurrentSymbolTable(): SymbolTable {\n        return this.symbolTableStack[this.symbolTableStack.length - 1];\n    }\n\n    pushNewSymbolTable(positionFrom: TextPosition, positionTo: TextPosition): SymbolTable {\n        if(positionTo == null) {\n            positionTo = {\n                line: 100000,\n                column: 1,\n                length: 1\n            }\n        };\n        let st: SymbolTable = new SymbolTable(this.getCurrentSymbolTable(), positionFrom, positionTo);\n        this.symbolTableStack.push(st);\n        return st;\n    }\n\n    resolveSelect(selectNode: SelectNode): Table {\n        let resultTable: Table = new Table(null);\n\n        selectNode.symbolTable = this.pushNewSymbolTable(selectNode.position, selectNode.endPosition);\n\n        // From\n        let joinedTables: Table[] = [];\n        this.resolveTableOrSubQuery(selectNode.fromNode, joinedTables);\n        if (selectNode.fromStartPosition != null) {\n            let fromSymbolTable = new SymbolTable(this.getCurrentSymbolTable(), selectNode.fromStartPosition, selectNode.fromEndPosition);\n            fromSymbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n        }\n\n        // Column list\n        for (let columnNode of selectNode.columnList) {\n            if (columnNode.type == TokenType.allColumns) {\n                for (let table of joinedTables) {\n                    for (let column of table.columns) {\n                        let c: Column = new Column(column.identifier, column.type, resultTable, false, true, column.defaultValue, column.isAutoIncrement);\n                        resultTable.columns.push(c);\n                    }\n                }\n            } else {\n                this.resolveTerm(columnNode.term);\n                let c1: Column = new Column(columnNode.alias, columnNode.term.sqlType, resultTable, false, true, null, false);\n                resultTable.columns.push(c1);\n                if (c1.identifier != null) {\n                    selectNode.symbolTable.storeSymbol({\n                        identifier: c1.identifier,\n                        posOfDefinition: columnNode.term.position,\n                        referencedOnPositions: [],\n                        column: c1\n                    })\n                }\n            }\n        }\n\n        // where...\n        if (selectNode.whereNode != null) {\n            let whereType = this.resolveTerm(selectNode.whereNode);\n            if (whereType != null && whereType.getBaseTypeName() != \"boolean\") {\n                this.pushError(\"Das Ergebnis des where-Teils einer select-Anweisung muss vom Typ boolean sein.\", \"error\", selectNode.whereNode.position);\n            }\n        }\n\n\n        // TODO: group by, order by\n\n        return resultTable;\n    }\n\n    resolveDropTable(node: DropTableNode) {\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        if (node.tableIdentifier == null) return;\n\n        let table = node.symbolTable.findTable(node.tableIdentifier);\n        if (table == null) this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\n\n    }\n\n    resolveDelete(node: DeleteNode) {\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        if (node.tableIdentifier == null) return;\n\n        let table = node.symbolTable.findTable(node.tableIdentifier);\n        if (table == null) this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\n\n\n        // if(node.whereNodeBegin != null){\n        //     let symbolTable = this.pushNewSymbolTable(node.whereNodeBegin, node.whereNodeEnd);\n        //     symbolTable.storeTableSymbols(table);\n        // }\n\n\n        if (node.whereNode != null) {\n            let whereSymbolTable = this.pushNewSymbolTable(node.whereNodeBegin, node.whereNodeEnd);\n            if(table != null) whereSymbolTable.storeTableSymbols(table);\n            this.resolveTerm(node.whereNode);\n            this.symbolTableStack.pop();\n        }\n\n\n\n    }\n\n\n    resolveAlterTable(node: AlterTableNode) {\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        if (node.tableIdentifier == null) {\n            return;\n        }\n\n        let table = node.symbolTable.findTable(node.tableIdentifier);\n        if (table == null) {\n            this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\n        }\n\n        let oldColumn: Column = null;\n        if (node.oldColumnName != null) {\n            oldColumn = table.columns.find(c => c.identifier.toLocaleLowerCase() == node.oldColumnName.toLocaleLowerCase());\n            if (oldColumn == null) {\n                this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" hat keine Spalte mit dem Bezeichner \" + node.oldColumnName, \"error\", node.oldColumnPosition);\n            }\n        }\n\n        switch (node.kind) {\n            case \"dropColumn\":\n                // nothing to do as node.oldColumnName is checked above\n                break;\n            case \"addColumn\":\n                let columnNode = node.columnDef;\n                if (columnNode == null) break;\n                if (columnNode.referencesTable != null && columnNode.baseType != null) {\n                    let tables = this.getCurrentSymbolTable().findTables(columnNode.referencesTable);\n                    if (tables.length == 1) {\n                        let table = tables[0].table;\n                        let column = table.columns.find(c => c.identifier == columnNode.referencesColumn);\n                        if (column != null && column.type != null) {\n                            if (!column.isPrimaryKey) {\n                                this.pushError(\"Die referenzierte Spalte \" + columnNode.referencesTable + \".\" + columnNode.referencesColumn + \" ist kein Primärschlüssel.\", \"warning\", columnNode.referencesPosition);\n                            }\n                            if (!column.type.canCastTo(columnNode.baseType)) {\n                                this.pushError(\"Der Datentyp \" + columnNode.baseType.toString() + \" der Spalte \" + columnNode.identifier +\n                                    \" kann nich in den Datentyp \" + column.type.toString() + \" der referenzierten Spalte \" + table.identifier + \".\" +\n                                    column.identifier + \" umgewandelt werden.\", \"error\", columnNode.referencesPosition);\n                            }\n                        }\n                    }\n                }\n                break;\n            case \"renameColumn\":\n                // nothing to do as node.oldColumnName is checked above\n                break;\n            case \"renameTable\":\n                // nothing to do \n                break;\n            default:\n                break;\n        }\n    }\n\n    resolveUpdate(node: UpdateNode) {\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        if (node.tableIdentifier == null) {\n            return;\n        }\n\n        let table = node.symbolTable.findTable(node.tableIdentifier);\n        if (table == null) this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\n\n        for (let i = 0; i < node.columnIdentifiers.length; i++) {\n            let ci = node.columnIdentifiers[i];\n            let ciPos = node.columnIdentifierPositions[i];\n            let value = node.values[i];\n\n            if (ci == null) continue;\n            let column = table.columns.find(c => c.identifier == ci);\n\n            if (column == null) {\n                this.pushError(ci + \" ist kein Bezeichner einer Spalte der Tabelle \" + node.tableIdentifier + \".\", \"error\", ciPos);\n            }\n\n            if (value == null) continue;\n            let symbolTable = this.pushNewSymbolTable(node.valuePosBegin[i], node.valuePosEnd[i]);\n            symbolTable.storeTableSymbols(table);\n            this.resolveTerm(value);\n            this.symbolTableStack.pop();\n\n        }\n\n        if (node.whereNodeBegin != null) {\n            let symbolTable = this.pushNewSymbolTable(node.whereNodeBegin, node.whereNodeEnd);\n            symbolTable.storeTableSymbols(table);\n        }\n\n        if (node.whereNode != null) {\n            this.resolveTerm(node.whereNode);\n        }\n        this.symbolTableStack.pop();\n\n    }\n\n\n\n    resolveCreateTable(createTableNode: CreateTableNode) {\n\n        createTableNode.symbolTable = this.pushNewSymbolTable(createTableNode.position, createTableNode.endPosition);\n        createTableNode.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        let thisTable: Table = {\n            identifier: createTableNode.identifier,\n            columns: null,\n            size: 0\n        }\n\n        thisTable.columns = createTableNode.columnList.map(c => {\n            return {\n                identifier: c.identifier,\n                isNullable: false,\n                isPrimaryKey: c.isPrimary,\n                isAutoIncrement: c.isAutoIncrement,\n                notNull: false,\n                references: null,\n                table: thisTable,\n                type: c.baseType,\n                defaultValue: c.defaultValue\n            }\n        });\n\n        createTableNode.symbolTable.storeTableSymbols(thisTable);\n\n        for (let columnNode of createTableNode.columnList) {\n            if (createTableNode.columnList.filter(c => c.identifier.toLocaleLowerCase() == columnNode.identifier.toLocaleLowerCase()).length > 1) {\n                this.pushError(\"Der Spaltenbezeichner \" + columnNode.identifier + \" darf in einer Tabelle nur ein einziges Mal verwendet werden\", \"error\", columnNode.position);\n            }\n\n            if (columnNode.referencesTable != null && columnNode.baseType != null) {\n                let tables = this.getCurrentSymbolTable().findTables(columnNode.referencesTable);\n                if (tables.length == 1) {\n                    let table = tables[0].table;\n                    let column = table.columns.find(c => c.identifier == columnNode.referencesColumn);\n                    if (column != null && column.type != null) {\n                        if (!column.isPrimaryKey) {\n                            this.pushError(\"Die referenzierte Spalte \" + columnNode.referencesTable + \".\" + columnNode.referencesColumn + \" ist kein Primärschlüssel.\", \"warning\", columnNode.referencesPosition);\n                        }\n                        if (!column.type.canCastTo(columnNode.baseType)) {\n                            this.pushError(\"Der Datentyp \" + columnNode.baseType.toString() + \" der Spalte \" + columnNode.identifier +\n                                \" kann nich in den Datentyp \" + column.type.toString() + \" der referenzierten Spalte \" + table.identifier + \".\" +\n                                column.identifier + \" umgewandelt werden.\", \"error\", columnNode.referencesPosition);\n                        }\n                    }\n                }\n            }\n\n        }\n\n        for (let fki of createTableNode.foreignKeyInfoList) {\n\n            let columnNode = createTableNode.columnList.find(cn => cn.identifier == fki.column);\n            if (columnNode == null) continue;\n\n            let tables = this.getCurrentSymbolTable().findTables(fki.referencesTable);\n            if (tables.length == 1) {\n                let table = tables[0].table;\n                let column = table.columns.find(c => c.identifier == fki.referencesColumn);\n                if (column != null && column.type != null) {\n                    if (!column.isPrimaryKey) {\n                        this.pushError(\"Die referenzierte Spalte \" + fki.referencesTable + \".\" + fki.referencesColumn + \" ist kein Primärschlüssel.\", \"warning\", fki.referencesPosition);\n                    }\n                    if (!column.type.canCastTo(columnNode.baseType)) {\n                        this.pushError(\"Der Datentyp \" + columnNode.baseType.toString() + \" der Spalte \" + columnNode.identifier +\n                            \" kann nich in den Datentyp \" + column.type.toString() + \" der referenzierten Spalte \" + table.identifier + \".\" +\n                            column.identifier + \" umgewandelt werden.\", \"error\", fki.referencesPosition);\n                    }\n                }\n            }\n\n        }\n\n\n    }\n\n    resolveTableOrSubQuery(tosNode: TableOrSubqueryNode, joinedTables: Table[]) {\n        if (tosNode == null) return;\n\n        switch (tosNode.type) {\n            case TokenType.table:\n                let tableList = this.tables.filter(t => t.identifier.toLowerCase() == tosNode.identifier.toLowerCase());\n                if (tableList.length == 0) {\n                    this.pushError(tosNode.identifier + \" ist nicht der Name einer Tabelle.\", \"error\", tosNode.position);\n                } else if (tableList.length > 1) {\n                    this.pushError(\"Der Bezeichner \" + tosNode.identifier + \" ist hier nicht eindeutig.\", \"error\", tosNode.position);\n                } else {\n                    let table: Table = tableList[0];\n                    joinedTables.push(table);\n                    this.storeTableIntoSymbolTable(table, tosNode.position, tosNode.alias);\n                }\n\n                break;\n\n            case TokenType.keywordJoin:\n                this.resolveTableOrSubQuery(tosNode.firstOperand, joinedTables);\n                this.resolveTableOrSubQuery(tosNode.secondOperand, joinedTables);\n                break;\n\n            case TokenType.subquery:\n                tosNode.table = this.resolveSelect(tosNode.query);\n                joinedTables.push(tosNode.table);\n                if (tosNode.alias != null) {\n                    tosNode.table.identifier = tosNode.alias;\n                    this.storeTableIntoSymbolTable(tosNode.table, tosNode.position);\n                }\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    storeTableIntoSymbolTable(table: Table, position: TextPosition, alias?: string) {\n        let symbolTable = this.getCurrentSymbolTable();\n        symbolTable.storeSymbol({\n            identifier: alias == null ? table.identifier.toLowerCase() : alias.toLowerCase(),\n            posOfDefinition: position,\n            table: table,\n            referencedOnPositions: []\n        });\n        for (let column of table.columns) {\n            symbolTable.storeSymbol({\n                identifier: column.identifier.toLowerCase(),\n                posOfDefinition: null,\n                column: column,\n                tableAlias: alias,\n                referencedOnPositions: []\n            });\n        }\n    }\n\n    resolveTerm(node: TermNode): SQLType {\n        if (node == null) return null;\n\n        switch (node.type) {\n            case TokenType.binaryOp:\n                if ([TokenType.keywordIn, TokenType.keywordNotIn].indexOf(node.operator) >= 0) {\n                    return this.resolveNotIn(node);\n                }\n\n                let typeLeft = this.resolveTerm(node.firstOperand);\n                let typeRight = this.resolveTerm(node.secondOperand);\n                if (typeLeft != null && typeRight != null) {\n                    let resultType = typeLeft.getBinaryResultType(node.operator, typeRight);\n                    if (resultType == null) {\n                        this.pushError(\"Der Operator \" + TokenTypeReadable[node.operator] + \" ist für die Datentypen \" + typeLeft.toString() + \" und \" + typeRight.toString() + \" nicht definiert.\", \"error\", node.position);\n                    }\n                    return resultType;\n                } else {\n                    return null;\n                }\n                break;\n            case TokenType.unaryOp:\n                let operandType = this.resolveTerm(node.operand);\n                if (operandType != null) {\n                    let resultType1 = operandType.getUnaryResultType(node.operator);\n                    if (resultType1 == null) {\n                        this.pushError(\"Der Operator \" + TokenTypeReadable[node.operator] + \" ist für einen Operanden des Datentyps \" + operandType.toString() + \" nicht definiert.\", \"error\", node.position);\n                    }\n                    return resultType1;\n                } else {\n                    return null;\n                }\n                break;\n            case TokenType.callMethod:\n                return this.resolveMethodCall(node);\n                break;\n            //    ConstantNode | IdentifierNode | DotNode | SelectNode | BracketsNode | StarAttributeNode | SelectNode | ListNode;\n\n            case TokenType.constantNode:\n                node.sqlType = SQLBaseType.fromConstantType(node.constantType);\n                return node.sqlType;\n                break;\n            case TokenType.identifier:\n                return this.resolveIdentifier(node);\n                break;\n            case TokenType.dot:\n                return this.resolveDot(node);\n                break;\n            case TokenType.keywordSelect:\n                let selectTable = this.resolveSelect(node);\n                if (selectTable.columns.length != 1) {\n                    this.pushError(\"Die Ergebnistabelle einer Unterabfrage an dieser Stelle muss genau eine Spalte besitzen.\", \"error\", node.position);\n                    return null;\n                }\n                return selectTable.columns[0].type;\n                break;\n            case TokenType.rightBracket:   // BracketsNode\n                node.sqlType = this.resolveTerm(node.termInsideBrackets);\n                return node.sqlType;\n                break;\n            case TokenType.allColumns:\n                this.pushError(\"Das Zeichen * kann hier nicht verwendet werden.\", \"error\", node.position);\n                break;\n            case TokenType.list:\n                this.pushError(\"Eine Liste wird hier nicht erwartet.\", \"error\", node.position);\n                break;\n            default:\n                break;\n        }\n\n\n\n\n    }\n\n    resolveDot(node: DotNode): SQLType {\n        let tableSymbols = this.getCurrentSymbolTable().findTables(node.identifierLeft.identifier);\n        if (tableSymbols.length == 0) {\n            this.pushError(\"Die Tabelle \" + node.identifierLeft.identifier + \" kann nicht gefunden werden.\", \"error\", node.identifierLeft.position);\n            return null;\n        }\n        if (tableSymbols.length > 1) {\n            this.pushError(\"Der Tabellenbezeichner \" + node.identifierLeft.identifier + \" ist nicht eindeutig.\", \"error\", node.identifierLeft.position);\n            return null;\n        }\n        let table = tableSymbols[0].table;\n\n        let columns = table.columns.filter(c => c.identifier.toLowerCase() == node.identifierRight.identifier.toLowerCase());\n\n        if (columns.length == 0) {\n            this.pushError(\"Die Tabelle \" + node.identifierLeft.identifier + \" hat keine Spalte mit dem Bezeichner \" + node.identifierRight.identifier + \".\", \"error\", node.identifierRight.position);\n            return;\n        }\n\n        if (columns.length > 1) {\n            this.pushError(\"Die Tabelle \" + node.identifierLeft.identifier + \" hat mehrere Spalten mit dem Bezeichner \" + node.identifierRight.identifier + \".\", \"error\", node.identifierRight.position);\n            return;\n        }\n\n        let column = columns[0];\n        node.sqlType = column.type;\n        return column.type;\n\n    }\n\n    resolveIdentifier(node: IdentifierNode): SQLType {\n        let symbols = this.getCurrentSymbolTable().findColumn(node.identifier);\n        if (symbols.length == 0) {\n            this.pushError(\"Der Bezeichner \" + node.identifier + \" ist an dieser Stelle nicht bekannt.\", \"error\", node.position);\n            return null;\n        }\n        if (symbols.length > 1) {\n            this.pushError(\"Der Bezeichner \" + node.identifier + \" ist nicht eindeutig.\", \"error\", node.position);\n            return null;\n        }\n\n        let symbol = symbols[0];\n        node.sqlType = symbol.column.type;\n        return symbol.column.type;\n    }\n\n    resolveMethodCall(node: MethodcallNode): SQLType {\n\n        let methodStore = SQLMethodStore.getInstance();\n        let methods = methodStore.getMethods(node.identifier);\n\n        methods = methods.filter(m => m.parameters.length == node.operands.length);\n        if (node.operands.length == 1 && node.operands[0].type == TokenType.allColumns) {\n            methods = methods.filter(m => m.acceptsStarParameter);\n            node.sqlType = methods[0].returnType;\n            return node.sqlType;\n        }\n\n        if (methods.length == 0) {\n            this.pushError(\"Es gibt keine passende Methode mit dem Bezeichner '\" + node.identifier + \"'.\", \"error\", node.position);\n            return null;\n        }\n\n        for (let operand of node.operands) {\n            if (this.resolveTerm(operand) == null) {\n                node.sqlType = methods[0].returnType;\n                return node.sqlType;\n            }\n        }\n\n        for (let method of methods) {\n            let found = true;\n            for (let i = 0; i < method.parameters.length; i++) {\n                let methodParameter = method.parameters[i];\n                let operand = node.operands[i];\n                if (!operand.sqlType.canCastTo(methodParameter.type)) {\n                    found = false;\n                    break;\n                }\n            }\n            if (found) {\n                node.sqlType = method.returnType;\n                return node.sqlType;\n            }\n        }\n\n        this.pushError(\"Es gibt keine passende Methode mit dem Bezeichner '\" + node.identifier + \"'.\", \"error\", node.position);\n        return null;\n\n    }\n\n    resolveNotIn(node: BinaryOpNode): SQLType {\n\n        if (node.firstOperand == null || node.secondOperand == null) return null;\n\n        let operatorString = TokenTypeReadable[node.operator];\n\n        this.resolveTerm(node.firstOperand);\n        let leftType = node.firstOperand.sqlType;\n        if (leftType != null) {\n            if (node.secondOperand.type == TokenType.keywordSelect) {\n                let selectNode = node.secondOperand;\n                if (selectNode.columnList.length != 1) {\n                    this.pushError(\"Wenn rechts vom Operator '\" + operatorString + \"' eine Unterabfrage steht, muss die Ergebnistabelle dieser Unterabfrage genau eine Spalte haben.\", \"error\", selectNode.position);\n                }\n                this.resolveSelect(selectNode);\n                let pType = selectNode.columnList[0].term.sqlType;\n                if (!pType.canCastTo(leftType)) {\n                    this.pushError(\"Der Datentyp der Ergebnisspalte der Unterabfrage ist \" + pType.toString() + \". Dieser kann nicht in den Datentyp \" + leftType.toString() + \" umgewandelt werden.\", \"error\", selectNode.position);\n                }\n            } else if (node.secondOperand.type == TokenType.list) {\n                let listNode = node.secondOperand;\n                for (let element of listNode.elements) {\n                    let elementType = SQLBaseType.fromConstantType(element.constantType);\n                    element.sqlType = elementType;\n                    if (!elementType.canCastTo(leftType)) {\n                        this.pushError(\"Der Datentyp des Listenelements \" + element.constant + \" ist \" + elementType.toString() + \". Er kann nicht in den Datentype \" + leftType.toString() + \" des Operanden auf der linken Seite des Operators '\" + operatorString + \"' umgewandelt werden.\", \"error\", element.position);\n                    }\n                }\n            } else {\n                this.pushError(\"Der rechte Operand der Operatoren 'in' und 'not in' muss eine Unterabfrage oder eine Liste sein.\", \"error\", node.secondOperand.position);\n            }\n\n        }\n\n        return SQLBaseType.getBaseType(\"boolean\");\n    }\n\n    resolveInsert(astNode: InsertNode) {\n\n        let table: Table = null;\n        let symbolTable = this.pushNewSymbolTable(astNode.position, astNode.endPosition);\n        if (astNode.table != null) {\n            astNode.table.table = this.tables.find(t => t.identifier.toLowerCase() == astNode.table.identifier.toLocaleLowerCase());\n            if (astNode.table.table == null) {\n                this.pushError(\"Die Tabelle \" + astNode.table.identifier + \" gibt es nicht.\", \"error\", astNode.table.position);\n            } else {\n                table = astNode.table.table;\n                symbolTable.storeTableSymbols(table);\n            }\n        }\n\n        let tableCompletionTo = astNode.endPosition;\n        if (astNode.valuesPosition != null) tableCompletionTo = astNode.valuesPosition;\n        if (astNode.columnsPosition != null) tableCompletionTo = astNode.columnsPosition;\n\n        this.module.addCompletionHint(astNode.position, tableCompletionTo, false, true, [\"into\", \"values\"]);\n\n        if (table != null) {\n            this.module.addCompletionHint(tableCompletionTo, astNode.valuesPosition == null ? astNode.endPosition : astNode.valuesPosition, true, false, [\"values\"]);\n        }\n\n        let tableSymbolTable = this.pushNewSymbolTable(astNode.position, tableCompletionTo);\n        tableSymbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        let columns: Column[] = [];\n        // Parse column list\n        if (astNode.columnList.length == 0) {\n            if (table != null) {\n                columns = table.columns;\n            }\n        } else {\n            if (table != null) {\n                for (let columnNode of astNode.columnList) {\n                    let column = table.columns.find(c => c.identifier.toLowerCase() == columnNode.identifier.toLowerCase());\n                    if (column == null) {\n                        this.pushError(\"Die Tabelle \" + table.identifier + \" besitzt keine Spalte mit dem Bezeichner \" + columnNode.identifier + \".\", \"error\", columnNode.position);\n                    } else {\n                        columns.push(column);\n                    }\n                }\n            }\n        }\n\n        if (columns.length > 0) {\n            // Parse value lists\n            for (let valueList of astNode.values) {\n                if (valueList.length != columns.length && valueList.length > 0) {\n                    this.pushError(\"Erwartet werden \" + columns.length + \" Elemente, hier stehen aber \" + valueList.length + \" Elemente in der Liste.\", \"error\", valueList[0].position);\n                } else {\n                    for (let i = 0; i < valueList.length; i++) {\n                        let value = valueList[i];\n                        let column = columns[i];\n                        value.sqlType = SQLBaseType.fromConstantType(value.constantType);\n                        // constantType == 40 means: null\n                        // TODO: check if column is nullable!\n                        let destType = column.type.toString().toLocaleLowerCase();\n                        if (value.constantType == TokenType.keywordNull) {\n                            if (!column.isNullable || column.notNull) {\n                                this.pushError(\"Die Spalte \" + column.identifier + \" ist nicht nullable, daher kann null hier nicht eingefügt werden.\", \"error\", value.position);\n                            }\n                        } else if (!value.sqlType.canCastTo(column.type)) {\n                            let error: string = \"Der Wert \" + value.constant + \" vom Datentyp \" + value.sqlType.toString() + \" kann nicht in den Datentyp \" + column.type.toString() + \" der Spalte \" + column.identifier + \" umgewandelt werden.\";\n\n                            if(destType == \"date\") error += \"<br><b>Tipp: </b>Datumswerte haben die Form 'yyyy-mm-dd', also z.B. '2022-06-15'.\";\n                            if(destType == \"datetime\") error += \"<br><b>Tipp: </b>Timestamps haben die Form 'yyyy-mm-dd hh:min:ss', also z.B. '2022-06-15 07:56:22'.\";\n\n                            this.pushError(error, \"error\", value.position);\n                        } else if(destType == \"date\"){\n                            if(!isDate(value.constant)){\n                                let error: string = `'${value.constant}' ist kein date-Wert.<br><b>Tipp: </b>Datumswerte haben die Form 'yyyy-mm-dd', also z.B. '2022-06-15'.`;\n                                this.pushError(error, \"error\", value.position);\n                            }\n                        } else if(destType == \"datetime\"){\n                            if(!isDateTime(value.constant)){\n                                let error: string = `'${value.constant}' ist kein datetime-Wert.<br><b>Tipp: </b>Timestamps haben die Form 'yyyy-mm-dd hh:min:ss', also z.B. '2022-06-15 07:56:22'.`;\n                                this.pushError(error, \"error\", value.position);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        this.symbolTableStack.pop();\n\n    }\n\n\n\n}\n\n","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { SymbolResolver } from \"./parser/SymbolResolver.js\";\r\n\r\nexport enum CompilerStatus {\r\n    compiling, error, compiledButNothingToRun, readyToRun\r\n}\r\n\r\nexport class Compiler {\r\n\r\n    compilerStatus: CompilerStatus = CompilerStatus.compiledButNothingToRun;\r\n\r\n    atLeastOneModuleIsStartable: boolean;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    compile(moduleStore: ModuleStore): Error[] {\r\n\r\n        this.compilerStatus = CompilerStatus.compiling;\r\n\r\n        let t0 = performance.now();\r\n\r\n        let lexer = new Lexer();\r\n\r\n        // 1st pass: lexing\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.file.dirty = false;\r\n            m.clear();\r\n\r\n            let lexed = lexer.lex(m.getProgramTextFromMonacoModel());\r\n            m.errors[0] = lexed.errors;\r\n            m.tokenList = lexed.tokens;\r\n            m.bracketError = lexed.bracketError;\r\n            if(m.file.name == this.main.getCurrentlyEditedModule().file.name){\r\n                if(this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(lexed.bracketError);\r\n            }\r\n        }\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        this.main.getSemicolonAngel().startRegistering();\r\n\r\n        let parser: Parser = new Parser(false);\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            parser.parse(m);\r\n        }\r\n        \r\n        // 3rd pass: check symbols and types\r\n        let databaseTool = this.main.getDatabaseTool();\r\n        let symbolResolver: SymbolResolver = new SymbolResolver(databaseTool);\r\n\r\n        for(let m of moduleStore.getModules(false)){\r\n            symbolResolver.start(m);\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        let message = \"Compiled in \" + dt + \" ms.\";\r\n\r\n        this.main.getCurrentWorkspace().compilerMessage = message;\r\n\r\n        this.main.getSemicolonAngel().healSemicolons();\r\n\r\n        this.compilerStatus = CompilerStatus.readyToRun;\r\n\r\n        return null;\r\n    }\r\n\r\n}","import { FileData } from \"../../communication/Data.js\";\r\nimport { AccordionElement } from \"../../main/gui/Accordion.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenType, TextPositionWithoutLength } from \"../lexer/Token.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { ASTNode } from \"./AST.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\nimport { stringToDate } from \"../../tools/StringTools.js\";\r\nimport { SQLStatement } from \"./Parser.js\";\r\n\r\n\r\nexport type CompletionHint = {\r\n    fromLine: number,\r\n    fromColumn: number,\r\n    toLine: number, \r\n    toColumn: number,\r\n    hintColumns: boolean,\r\n    hintColumnsOfTable?: string,\r\n    hintTables: boolean,\r\n    hintKeywords: string[],\r\n    dontHint?: string[],\r\n    praefix?: string,\r\n    suffix?: string\r\n}\r\n\r\nexport type File = {\r\n    name: string,\r\n    id?: number,\r\n    text: string,\r\n\r\n    text_before_revision: string,\r\n    submitted_date: string,\r\n    student_edited_after_revision: boolean,\r\n\r\n    dirty: boolean,\r\n    saved: boolean,\r\n    version: number,\r\n    panelElement?: AccordionElement\r\n\r\n}\r\n\r\nexport type IdentifierPosition = {\r\n    position: TextPosition,\r\n    element: any;\r\n}\r\n\r\nexport type MethodCallPosition = {\r\n    identifierPosition: TextPosition,\r\n    possibleMethods: any[] | string, // string for print, println, ...\r\n    commaPositions: TextPosition[],\r\n    rightBracketPosition: TextPosition\r\n}\r\n\r\nexport class Module {\r\n    file: File;\r\n    static maxUriNumber: number = 0;\r\n    uri: monaco.Uri;\r\n    model: monaco.editor.ITextModel;\r\n    oldErrorDecorations: string[] = [];\r\n    lastSavedVersionId: number;\r\n    editorState: monaco.editor.ICodeEditorViewState;\r\n\r\n    errors: Error[][] = [[], [], [], []]; // 1st pass, 2nd pass, 3rd pass\r\n\r\n    // 1st pass: Lexer\r\n    tokenList: Token[];\r\n\r\n    // 2nd pass: ASTParser\r\n    sqlStatements: SQLStatement[];\r\n    mainSymbolTable: SymbolTable;\r\n\r\n\r\n    identifierPositions: { [line: number]: IdentifierPosition[] } = {};\r\n    methodCallPositions: { [line: number]: MethodCallPosition[] } = {};\r\n\r\n    static uriMap: { [name: string]: number } = {};\r\n    bracketError: string;\r\n\r\n    completionHints: Map<number, CompletionHint[]> = new Map(); // Map from line numbers to hints\r\n\r\n    constructor(file: File, public main: MainBase) {\r\n        if (file == null || this.main == null) return; // used by AdhocCompiler and ApiDoc\r\n\r\n        this.file = file;\r\n        // this.uri = monaco.Uri.from({ path: '/file' + (Module.maxUriNumber++) + '.learnJava', scheme: 'file' });\r\n        let path = file.name;\r\n\r\n        let uriCounter = Module.uriMap[path];\r\n        if (uriCounter == null) {\r\n            uriCounter = 0;\r\n        } else {\r\n            uriCounter++;\r\n        }\r\n        Module.uriMap[path] = uriCounter;\r\n\r\n        if (uriCounter > 0) path += \" (\" + uriCounter + \")\";\r\n        this.uri = monaco.Uri.from({ path: path, scheme: 'inmemory' });\r\n        this.model = monaco.editor.createModel(file.text, \"vscSQL\", this.uri);\r\n        this.model.updateOptions({ tabSize: 3 });\r\n\r\n        this.lastSavedVersionId = this.model.getAlternativeVersionId();\r\n\r\n        let that = this;\r\n\r\n        this.model.onDidChangeContent(() => {\r\n            let versionId = that.model.getAlternativeVersionId();\r\n\r\n            if (versionId != that.lastSavedVersionId) {\r\n                that.file.dirty = true;\r\n                that.file.saved = false;\r\n                that.lastSavedVersionId = versionId;\r\n            }\r\n\r\n            if(!that.main.isEmbedded()){\r\n                let main1: Main = <Main>main;\r\n                if (main1.workspacesOwnerId != main1.user.id) {\r\n                    if (that.file.text_before_revision == null || that.file.student_edited_after_revision) {\r\n                        that.file.student_edited_after_revision = false;\r\n                        that.file.text_before_revision = that.file.text;\r\n                        that.file.saved = false;\r\n                        main1.networkManager.sendUpdates(null, false);\r\n                        main1.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n                        main1.projectExplorer.renderHomeworkButton(that.file);\r\n                    }\r\n                } else {\r\n                    that.file.student_edited_after_revision = true;\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    addCompletionHint(fromPosition: TextPosition, toPosition: TextPosition, hintColumns: boolean|string, hintTables: boolean, \r\n        hintKeywords: string[], dontHint?: string[], praefix: string = \"\", suffix: string = \"\"){\r\n        let ch: CompletionHint = {\r\n            fromColumn: fromPosition.column,\r\n            fromLine: fromPosition.line,\r\n            toColumn: toPosition.column,\r\n            toLine: toPosition.line,\r\n            hintColumns: (typeof hintColumns == \"boolean\")? hintColumns : true, \r\n            hintColumnsOfTable: (typeof hintColumns == \"string\")? hintColumns : null,\r\n            hintTables: hintTables,\r\n            hintKeywords: hintKeywords,\r\n            dontHint: dontHint,\r\n            praefix: praefix,\r\n            suffix: suffix\r\n        }\r\n\r\n        for(let i = ch.fromLine; i <= ch.toLine; i++){\r\n            let chList = this.completionHints.get(i);\r\n            if(chList == null){\r\n                chList = [];\r\n                this.completionHints.set(i, chList);\r\n            }\r\n            chList.push(ch);\r\n        }\r\n    }\r\n\r\n    getSQLSTatementsAtSelection(sel: monaco.Selection): SQLStatement[] {\r\n        let selStart = {line: sel.startLineNumber, column: sel.startColumn};\r\n        let selEnd = {line: sel.endLineNumber, column: sel.endColumn};\r\n\r\n        if(this.sqlStatements == null){\r\n            return [];\r\n        }\r\n\r\n        return this.sqlStatements.filter(stmt => {\r\n            return !(this.compare(stmt.to, selStart) < 0 || this.compare(stmt.from, selEnd) > 0);\r\n        })\r\n\r\n    }\r\n\r\n    /**\r\n     * returns 1 if a > b, 0 if a == b and -1 if a < b\r\n     * @param a \r\n     * @param b \r\n     */\r\n    compare(a: {line: number, column: number}, b: {line: number, column: number}): number{\r\n        if(a.line > b.line) return 1;\r\n        if(a.line < b.line) return -1;\r\n        if(a.column > b.column) return 1;\r\n        if(a.column < b.column) return -1;\r\n        return 0;\r\n    }\r\n\r\n\r\n\r\n    getSQLStatementAtPosition(p: { lineNumber: number, column: number }): SQLStatement {\r\n\r\n        return this.sqlStatements.find(statement => {\r\n            if(statement.from.line > p.lineNumber ) return false;\r\n            if(statement.from.line == p.lineNumber && statement.from.column > p.column) return false;\r\n            if(statement.to.line < p.lineNumber) return false;\r\n            if(statement.to.line == p.lineNumber && statement.to.column < p.column) return false;\r\n            return true;\r\n        });        \r\n\r\n    }\r\n\r\n\r\n    getCompletionHint(line: number, column: number){\r\n        let chList = this.completionHints.get(line);\r\n        \r\n        if(chList == null || chList.length == 0){\r\n            return null;\r\n        }\r\n\r\n        let pos = line * 1000 + column;\r\n        chList = chList.filter(ch => pos >= ch.fromLine * 1000 + ch.fromColumn && pos <= ch.toLine * 1000 + ch.toColumn);\r\n        if(chList.length == 0){\r\n            return;\r\n        }\r\n\r\n        // take CompletionHint with smallest range:\r\n        let bestCh: CompletionHint = chList[0];\r\n        let bestRangeLength  = (bestCh.toLine - bestCh.fromLine)*1000 + (bestCh.toColumn - bestCh.fromColumn);\r\n\r\n        for(let i = 1; i < chList.length; i++){\r\n            let ch = chList[i];\r\n            let rangeLength = (ch.toLine - ch.fromLine) * 1000 + (ch.toColumn - ch.fromColumn);\r\n\r\n            if(rangeLength < bestRangeLength){\r\n                bestCh = ch;\r\n                bestRangeLength = rangeLength;\r\n            }\r\n\r\n        }\r\n\r\n        return bestCh;\r\n    }\r\n\r\n\r\n    static restoreFromData(f: FileData, main: MainBase): Module {\r\n\r\n        let f1: File = {\r\n            name: f.name,\r\n            text: f.text,\r\n            text_before_revision: f.text_before_revision,\r\n            submitted_date: f.submitted_date,\r\n            student_edited_after_revision: false,\r\n            dirty: true,\r\n            saved: true,\r\n            version: f.version,\r\n            id: f.id\r\n        }\r\n\r\n        let m: Module = new Module(f1, main);\r\n\r\n        return m;\r\n\r\n    }\r\n\r\n    getFileData(workspace: Workspace): FileData {\r\n        let file = this.file;\r\n        let fd: FileData = {\r\n            id: file.id,\r\n            name: file.name,\r\n            text: file.text,\r\n            text_before_revision: file.text_before_revision,\r\n            submitted_date: file.submitted_date,\r\n            student_edited_after_revision: file.student_edited_after_revision,\r\n            version: file.version,\r\n            workspace_id: workspace.id,\r\n            forceUpdate: false,\r\n            file_type: 11\r\n        }\r\n\r\n        return fd;\r\n    }\r\n\r\n\r\n    findSymbolTableAtPosition(line: number, column: number) {\r\n        if (this.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (line > this.mainSymbolTable.positionTo.line ||\r\n            line == this.mainSymbolTable.positionTo.line && column > this.mainSymbolTable.positionTo.column\r\n        ) {\r\n            line = this.mainSymbolTable.positionTo.line;\r\n            column = this.mainSymbolTable.positionTo.column - 1;\r\n        }\r\n\r\n        return this.mainSymbolTable.findTableAtPosition(line, column);\r\n    }\r\n\r\n    getErrorCount(): number {\r\n\r\n        let ec = 0;\r\n        for (let el of this.errors) {\r\n            el.forEach(error => ec += error.level == \"error\" ? 1 : 0);\r\n            // ec += el.length;\r\n        }\r\n\r\n        return ec;\r\n    }\r\n\r\n    getProgramTextFromMonacoModel(): string {\r\n        return this.model.getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n    }\r\n\r\n\r\n    addIdentifierPosition(position: TextPosition, element: any) {\r\n        let positionList: IdentifierPosition[] = this.identifierPositions[position.line];\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            this.identifierPositions[position.line] = positionList;\r\n        }\r\n        positionList.push({\r\n            position: position,\r\n            element: element\r\n        });\r\n    }\r\n\r\n    getElementAtPosition(line: number, column: number): any {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let bestFoundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column < p.position.column + p.position.length) {\r\n\r\n                if (p.position.length > 0) {\r\n                    if (bestFoundPosition == null) {\r\n                        bestFoundPosition = p;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bestFoundPosition == null ? null : <any>bestFoundPosition.element;\r\n    }\r\n\r\n    copy(): Module {\r\n        let m = new Module(this.file, this.main);\r\n        m.model = this.model;\r\n        m.mainSymbolTable = this.mainSymbolTable;\r\n        this.mainSymbolTable = null;\r\n\r\n        this.file.dirty = true;\r\n\r\n        return m;\r\n    }\r\n\r\n    clear() {\r\n\r\n        this.identifierPositions = {};\r\n\r\n        if (this.file != null && this.file.dirty) {\r\n            // Lexer\r\n            this.tokenList = null;\r\n            this.errors[0] = [];\r\n\r\n            // AST Parser\r\n            this.errors[1] = [];\r\n\r\n\r\n        }\r\n\r\n        // type resolver\r\n        this.errors[2] = [];\r\n\r\n        // Code generator\r\n        this.errors[3] = [];\r\n        this.mainSymbolTable = new SymbolTable(null, { line: 1, column: 1, length: 1 }, { line: 100000, column: 1, length: 0 });\r\n\r\n        this.methodCallPositions = {};\r\n\r\n    }\r\n\r\n    hasErrors() {\r\n\r\n        for (let el of this.errors) {\r\n            if (el.find(error => error.level == \"error\")) {\r\n                return true;\r\n            }\r\n            // if (el.length > 0) {\r\n            //     return true;\r\n            // }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getSortedAndFilteredErrors(): Error[] {\r\n\r\n        let list: Error[] = [];\r\n\r\n        for (let el of this.errors) {\r\n            list = list.concat(el);\r\n        }\r\n\r\n        list.sort((a, b) => {\r\n            if (a.position.line > b.position.line) {\r\n                return 1;\r\n            }\r\n            if (b.position.line > a.position.line) {\r\n                return -1;\r\n            }\r\n            if (a.position.column >= b.position.column) {\r\n                return 1;\r\n            }\r\n            return -1;\r\n        });\r\n\r\n        for (let i = 0; i < list.length - 1; i++) {\r\n            let e1 = list[i];\r\n            let e2 = list[i + 1];\r\n            if (e1.position.line == e2.position.line && e1.position.column + 10 > e2.position.column) {\r\n                if (this.errorLevelCompare(e1.level, e2.level) == 1) {\r\n                    list.splice(i + 1, 1);\r\n                } else {\r\n                    list.splice(i, 1);\r\n                }\r\n                i--;\r\n            }\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    errorLevelCompare(level1: ErrorLevel, level2: ErrorLevel): number {\r\n        if (level1 == \"error\") return 1;\r\n        if (level2 == \"error\") return 2;\r\n        if (level1 == \"warning\") return 1;\r\n        if (level2 == \"warning\") return 2;\r\n        return 1;\r\n    }\r\n}\r\n\r\n\r\nexport class ModuleStore {\r\n\r\n    private modules: Module[] = [];\r\n    private moduleMap: Map<string, Module> = new Map();\r\n\r\n    dirty: boolean = false;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    findModuleById(module_id: number): Module {\r\n        for (let module of this.modules) {\r\n            if (module.file.id == module_id) return module;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    copy(): ModuleStore {\r\n        let ms: ModuleStore = new ModuleStore(this.main);\r\n        for (let m of this.modules) {\r\n            ms.putModule(m.copy());\r\n        }\r\n        return ms;\r\n    }\r\n\r\n    findModuleByFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                return m;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        for (let m of this.modules) {\r\n            if (m.hasErrors()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getFirstModule(): Module {\r\n        if (this.modules.length > 0) {\r\n            for (let mo of this.modules) {\r\n                return mo;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    isDirty(): boolean {\r\n\r\n        if (this.dirty) {\r\n            this.dirty = false;\r\n            return true;\r\n        }\r\n\r\n        let dirty = false;\r\n        for (let m of this.modules) {\r\n            if (m.file.dirty) {\r\n                dirty = true;\r\n                break;\r\n            }\r\n        }\r\n        return dirty;\r\n    }\r\n\r\n\r\n    getModules(includeSystemModules: boolean, excludedModuleName?: String): Module[] {\r\n        let ret = [];\r\n        for (let m of this.modules) {\r\n            if (m.file.name != excludedModuleName) {\r\n                ret.push(m);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    putModule(module: Module) {\r\n        this.modules.push(module);\r\n        this.moduleMap[module.file.name] = module;\r\n    }\r\n\r\n    removeModuleWithFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                this.removeModule(m);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n\r\n        if (this.modules.indexOf(module) < 0) return;\r\n\r\n        this.modules.splice(this.modules.indexOf(module), 1);\r\n        this.moduleMap[module.file.name] = undefined;\r\n        this.dirty = true;\r\n    }\r\n\r\n    getModule(moduleName: string): Module {\r\n        return this.moduleMap[moduleName];\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { UploadTemplateResponse } from \"../communication/Data.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\n\r\nexport class TemplateUploader {\r\n\r\n    uploadCurrentDatabase(workspace_id: number, main: Main, dump?: Uint8Array, callback: (response: UploadTemplateResponse) => void = () => {}){\r\n        main.waitOverlay.show('Bitte warten, lade Vorlage auf den Server hoch ...');\r\n        if(workspace_id >= 0){\r\n            let dbTool = main.getDatabaseTool();\r\n            dbTool.export((buffer) => {\r\n                // @ts-ignore\r\n                buffer = pako.deflate(buffer);\r\n                this.uploadIntern(buffer, workspace_id, main, callback);        \r\n            }, (error)=>{\r\n                alert(\"Fehler beim Exportieren der Datenbank: \" + error)\r\n                main.waitOverlay.hide();\r\n            })\r\n        } else {\r\n            this.uploadIntern(dump, -1, main, callback);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    private uploadIntern(buffer: Uint8Array, workspace_id: number, main: Main, callback: (response: UploadTemplateResponse) => void) {\r\n        \r\n        $.ajax({\r\n            type: 'POST',\r\n            async: true,\r\n            contentType: 'application/octet-stream',\r\n            data: buffer,\r\n            processData: false,\r\n            headers: { 'x-workspaceid': \"\" + workspace_id },\r\n            url: \"servlet/uploadTemplate\",\r\n            success: function (response: UploadTemplateResponse) {\r\n                main.waitOverlay.hide();\r\n                callback(response);\r\n                return;\r\n\r\n            },\r\n            error: function (jqXHR, message) {\r\n                alert('message');\r\n                main.waitOverlay.hide();\r\n            }\r\n        }\r\n        );\r\n        return buffer;\r\n    }\r\n}","import { CreateWorkspaceData, WorkspaceData } from \"../../communication/Data.js\";\r\nimport { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { TemplateUploader } from \"../../tools/TemplateUploader.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\nexport class DatabaseSettingsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private workspace: Workspace) {\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Datenbank-Einstellungen</div>\r\n            <div style=\"width: 100%; margin-left: 10px\">\r\n                <div class=\"jo_ds_settings\" style=\"margin-left: 0px\">\r\n                <div class=\"jo_ds_settings_caption\">Name der Datenbank:</div><div><input class=\"dialog-input jo_databasename\" value=\"Neue Datenbank\"></input></div>\r\n                </div>\r\n\r\n                <div class=\"jo_ds_settings_caption\" style=\"margin-top: 20px\">\r\n                Zugriffscodes für andere Benutzer:\r\n                </div>\r\n                                \r\n                <div>\r\n                    <table class=\"jo_ds_secret_table\">\r\n                    <tr>\r\n                        <td>Nur Lesen:</td><td class=\"jo_ds_secret jo_ds_secret_read\"></td><td><button class=\"jo_small_button jo_button_code_read\">Neuen Code generieren</button></td>\r\n                    <tr>\r\n                        <td>Lesen und schreiben:</td><td class=\"jo_ds_secret jo_ds_secret_write\"></td><td><button class=\"jo_small_button jo_button_code_write\">Neuen Code generieren</button></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Lesen, schreiben und Struktur verändern:</td><td class=\"jo_ds_secret jo_ds_secret_ddl\"></td><td><button class=\"jo_small_button jo_button_code_ddl\">Neuen Code generieren</button></td>\r\n                    </tr>\r\n                    </table>\r\n                </div>\r\n\r\n                <div class=\"jo_ds_settings_caption\" style=\"margin-top: 20px\">\r\n                Beschreibung:\r\n                </div>\r\n                <div>\r\n                <textarea class=\"jo_ds_settings_description\" maxlength=\"5000\"></textarea>\r\n                </div>\r\n\r\n                <div class=\"jo_ds_settings_caption\" style=\"margin-top: 20px\">\r\n                Datenbank freigeben als Vorlage für andere Benutzer:\r\n                </div>\r\n\r\n                <fieldset id=\"jo_ds_publishedTo\">\r\n                    <input type=\"radio\" id=\"b0\" name=\"publishedFilter\" value=\"0\" checked=\"checked\"><label for=\"b0\">Keine Freigabe</label>\r\n                    <input type=\"radio\" id=\"b1\" name=\"publishedFilter\" value=\"1\"><label for=\"b1\">Freigabe für meine Klasse(n)</label>\r\n                    <input type=\"radio\" id=\"b2\" name=\"publishedFilter\" value=\"2\" style=\"visibility: none\"><label id=\"lb2\" for=\"b2\" style=\"visibility: none\">Freigabe für meine Schule</label>\r\n                    <input type=\"radio\" id=\"b3\" name=\"publishedFilter\" value=\"3\" style=\"visibility: none\"><label id=\"lb3\" for=\"b3\" style=\"visibility: none\">Freigabe für alle Schulen</label>\r\n                </fieldset>\r\n\r\n                <div>\r\n                    <input type=\"checkbox\" id=\"jo_upload_db\" name=\"jo_upload_db\">\r\n                    <label for=\"jo_upload_db\">Aktuellen Zustand der Datenbank als Vorlage hochladen</label>\r\n                </div>\r\n            </div>\r\n\r\n\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_save_button\">Speichern</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n\r\n        let that = this;\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { this.showMainWindow(); });\r\n        jQuery('#jo_ds_save_button').on('click', () => { \r\n            this.saveNameAndPublishedTo();\r\n         })\r\n\r\n        this.setValues();\r\n\r\n        [\"read\", \"write\", \"ddl\"].forEach(kind => {\r\n            jQuery('.jo_button_code_' + kind).on('pointerdown', () => {\r\n                that.main.networkManager.setNewSecret(that.workspace.id, kind, (secret) => {\r\n                    jQuery('.jo_ds_secret_'+kind).text(secret);\r\n                })\r\n            })\r\n        })\r\n\r\n        jQuery('#jo_ds_publishedTo>input').on('change', (e) => {$('#jo_upload_db').prop('checked', !((<HTMLInputElement>jQuery('#b0')[0]).checked))});\r\n\r\n    }\r\n\r\n    saveNameAndPublishedTo(){\r\n        let published_to = 0;\r\n        jQuery('#jo_ds_publishedTo').find('input').each( (n, element) => {\r\n            let $element = jQuery(element);\r\n            //@ts-ignore\r\n            if(<HTMLInputElement>element.checked){\r\n                published_to = Number.parseInt(<string>$element.attr('value'));\r\n            }\r\n        })\r\n\r\n        this.main.networkManager.setNameAndPublishedTo(this.workspace.id, \r\n            <string>jQuery('.jo_databasename').val(), published_to, <string>jQuery('.jo_ds_settings_description').val(),\r\n             () => {\r\n                 if($('#jo_upload_db').prop('checked')){\r\n                    new TemplateUploader().uploadCurrentDatabase(this.workspace.id, this.main);                    \r\n                 }\r\n                 this.showMainWindow(); \r\n                })\r\n    }\r\n\r\n    setValues(){\r\n        jQuery('.jo_databasename').val(this.workspace.name);\r\n        this.main.networkManager.getDatabaseSettings(this.workspace.id, (response) => {\r\n            [\"read\", \"write\", \"ddl\"].forEach(kind => {\r\n                jQuery('.jo_ds_secret_' + kind).text(response.secrets[kind]);\r\n            });\r\n            if(this.main.user.is_admin){\r\n                jQuery('#b3').css('visibility', 'visible');\r\n                jQuery('#lb3').css('visibility', 'visible');\r\n            }\r\n            if(this.main.user.is_schooladmin){\r\n                jQuery('#b2').css('visibility', 'visible');\r\n                jQuery('#lb2').css('visibility', 'visible');\r\n            }\r\n            // jQuery('#jo_ds_publishedTo input').attr('checked', '');\r\n            jQuery('#b'+response.publishedTo).prop('checked', true);\r\n\r\n            jQuery('#jo_upload_db').prop('checked', response.publishedTo != 0);\r\n\r\n            jQuery('.jo_ds_settings_description').val(this.workspace.database.description);\r\n        })\r\n    }\r\n\r\n    showMainWindow() {\r\n        jQuery('#main').css('visibility', 'visible');\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n    }\r\n\r\n\r\n\r\n}","import { WorkspaceData } from \"../communication/Data.js\";\r\nimport { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { DatabaseSettingsDialog } from \"../main/gui/DatabaseSettingsDialog.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { WDatabase } from \"./WDatabase.js\";\r\n\r\nexport class Workspace {\r\n    \r\n    name: string;\r\n    path: string;\r\n    isFolder: boolean;\r\n    id: number;\r\n    owner_id: number;\r\n\r\n    version: number;\r\n    \r\n    moduleStore: ModuleStore;\r\n    panelElement: AccordionElement;\r\n    currentlyOpenModule: Module;\r\n    saved: boolean = true;\r\n\r\n    compilerMessage: string;\r\n\r\n    databaseId: number;\r\n    database: WDatabase;\r\n\r\n    sql_history: string;\r\n\r\n    permissions: number;\r\n\r\n    constructor(name: string, private main: MainBase, owner_id: number){\r\n        this.name = name;\r\n        this.owner_id = owner_id;\r\n        this.moduleStore = new ModuleStore(main);\r\n        this.sql_history = \"\";\r\n    }\r\n    \r\n    getWorkspaceData(withFiles: boolean): WorkspaceData {\r\n        let wd: WorkspaceData = {\r\n            name: this.name,\r\n            id: this.id,\r\n            owner_id: this.owner_id,\r\n            currentFileId: this.currentlyOpenModule == null ? null : this.currentlyOpenModule.file.id,\r\n            files: [],\r\n            sql_history: this.sql_history,\r\n            path: \"\",\r\n            isFolder: false,  \r\n            permissions: this.permissions,\r\n            database_id: this.databaseId\r\n        }\r\n\r\n        if(withFiles){\r\n            for(let m of this.moduleStore.getModules(false)){\r\n    \r\n                wd.files.push(m.getFileData(this));\r\n    \r\n            }\r\n        }\r\n\r\n        return wd;\r\n    }\r\n\r\n    renderSettingsButton(panelElement: AccordionElement) {\r\n        let $buttonDiv = panelElement?.$htmlFirstLine?.find('.jo_additionalButtonSettings');\r\n        if ($buttonDiv == null) return;\r\n        \r\n        // let myMain: Main = <Main>this.main;\r\n\r\n            let $button = jQuery('<div class=\"jo_settingsButton img_settings jo_button jo_active\" title=\"Datenbank-Einstellungen...\"></div>');\r\n            $buttonDiv.append($button);\r\n            let that = this;\r\n            $button.on('mousedown', (e) => e.stopPropagation());\r\n            $button.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                new DatabaseSettingsDialog(<any>that.main, that);\r\n\r\n            });\r\n\r\n        // } else {\r\n        //     $buttonDiv.find('.jo_startButton').remove();\r\n        // }\r\n    }\r\n\r\n\r\n    static restoreFromData(ws: WorkspaceData, main: Main): Workspace {\r\n\r\n        let w = new Workspace(ws.name, main, ws.owner_id);\r\n        w.id = ws.id;\r\n        w.path = ws.path;\r\n        w.isFolder = ws.isFolder;\r\n        w.owner_id = ws.owner_id;\r\n        w.sql_history = ws.sql_history;\r\n        w.permissions = ws.permissions;\r\n        w.databaseId = ws.database_id;\r\n\r\n        for(let f of ws.files){\r\n\r\n            let m: Module = Module.restoreFromData(f, main);\r\n            w.moduleStore.putModule(m);\r\n\r\n            if(f.id == ws.currentFileId){\r\n                w.currentlyOpenModule = m;\r\n            }\r\n\r\n        }\r\n\r\n        return w;\r\n\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        \r\n        return this.moduleStore.hasErrors();\r\n        \r\n    }\r\n\r\n    getModuleByMonacoModel(model: monaco.editor.ITextModel): Module {\r\n        for(let m of this.moduleStore.getModules(false)){\r\n            if(m.model == model){\r\n                return m;\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    }\r\n}\r\n\r\n","import { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type ButtonToggler = (state: boolean) => void;\r\n\r\nexport type Action = (name: string, buttonToggler?: ButtonToggler, pressed_key?: string) => void;\r\n\r\nexport type ActionEntry = {\r\n    text?: string,\r\n    keys: string[],\r\n    action: Action,\r\n    identifier: string, // name of Action is copied automatically to name of ActionEntry\r\n    active: boolean\r\n}\r\n\r\nexport class ActionManager {\r\n\r\n    actions: { [actionIdentifier: string]: ActionEntry } = { };\r\n\r\n    keyEntries: { [key: string]: ActionEntry[] } = {};\r\n\r\n    buttons: { [actionIdentifier: string]: JQuery<HTMLElement>[] } = {};\r\n\r\n    constructor(private $mainElement: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public init(){\r\n\r\n        let $element:JQuery<any> = this.$mainElement;\r\n        \r\n        if($element == null) $element = jQuery(document);\r\n\r\n        let that = this;\r\n        $element.on(\"keydown\", function (event: JQuery.KeyDownEvent) { \r\n            if(event != null){\r\n                that.executeKeyDownEvent(event); \r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    trigger(actionIdentifier: string) {\r\n        let ae = this.actions[actionIdentifier];\r\n        if(ae != null){\r\n            ae.action(actionIdentifier, null, \"\");\r\n        }\r\n    }\r\n\r\n\r\n    public registerAction(identifier: string, keys: string[], action: Action, text: string = \"\", button?: JQuery<HTMLElement>){\r\n        let ae: ActionEntry = {\r\n            action: action,\r\n            identifier: identifier,\r\n            keys: keys,\r\n            text: text,\r\n            active: true\r\n        };\r\n\r\n        this.actions[identifier] = ae;\r\n\r\n        for(let key of keys){\r\n            if(this.keyEntries[key.toLowerCase()] == null){\r\n                this.keyEntries[key.toLowerCase()] = [];\r\n            }\r\n            this.keyEntries[key.toLowerCase()].push(ae);\r\n        }\r\n\r\n        if(button != null){\r\n            if(this.buttons[identifier] == null){\r\n                this.buttons[identifier] = [];\r\n            }\r\n            this.buttons[identifier].push(button);\r\n\r\n            let t = text;\r\n            if(keys.length > 0){\r\n                t += \" [\" + keys.join(\", \") + \"]\";\r\n            }\r\n\r\n            button.attr(\"title\", t);\r\n\r\n            button.on('mousedown', () => {\r\n                if(ae.active){\r\n                    action(identifier, null, \"mousedown\");\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public isActive(actionIdentifier: string): boolean {\r\n\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae == null) return false;\r\n\r\n        return ae.active;\r\n    \r\n    }\r\n\r\n    public setActive(actionIdentifier: string, active: boolean){\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae != null){\r\n            ae.active = active;\r\n        }\r\n\r\n        let buttons = this.buttons[actionIdentifier];\r\n        if(buttons != null){\r\n            for(let button of buttons){\r\n                if(active){\r\n                    button.addClass('jo_active');\r\n                } else {\r\n                    button.removeClass('jo_active');\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public executeKeyDownEvent(event: JQuery.KeyDownEvent) {\r\n\r\n        if(document.activeElement.tagName.toLowerCase() == \"input\"){\r\n            return;\r\n        }\r\n\r\n        if (event.keyCode <= 18 && event.keyCode >= 16) {\r\n            return; // ctrl, alt, shift\r\n        }\r\n\r\n        let key: string = \"\";\r\n\r\n        if (event.ctrlKey) {\r\n            key += \"ctrl+\";\r\n        }\r\n\r\n        if (event.shiftKey) {\r\n            key += \"shift+\";\r\n        }\r\n\r\n        if (event.altKey) {\r\n            key += \"alt+\";\r\n        }\r\n\r\n        if(event.key != null){\r\n            key += event.key.toLowerCase();\r\n        }\r\n\r\n        let actionEntries = this.keyEntries[key];\r\n\r\n        if(actionEntries != null){\r\n            for(let actionEntry of actionEntries){\r\n                if (actionEntry.active) {\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    actionEntry.action(actionEntry.identifier, null, key);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { escapeHtml } from \"./StringTools.js\";\r\n\r\nexport function makeEditable(elementWithText: JQuery<HTMLElement>,\r\n    elementToReplace: JQuery<HTMLElement>,\r\n    renameDoneCallback: (newContent: string) => void, selectionRange: { start: number, end: number } = null) {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    if (elementToReplace == null) {\r\n        elementToReplace = elementWithText;\r\n    }\r\n\r\n    let $input = jQuery('<input type=\"text\" class=\"jo_inplaceeditor\" spellcheck=\"false\">');\r\n    $input.css({\r\n        width: elementToReplace.css('width'),\r\n        height: elementToReplace.css('height'),\r\n        color: elementToReplace.css('color'),\r\n        position: elementToReplace.css('position'),\r\n        \"background-color\": elementToReplace.css('background-color'),\r\n        \"font-size\": elementToReplace.css('font-size'),\r\n        \"font-weight\": elementToReplace.css('font-weight'),\r\n        \"box-sizing\": \"border-box\"\r\n    });\r\n    $input.val(elementWithText.text());\r\n    $input.on(mousePointer + \"down\", (e) => { e.stopPropagation(); })\r\n\r\n    if (selectionRange != null) {\r\n        (<HTMLInputElement>$input[0]).setSelectionRange(selectionRange.start, selectionRange.end);\r\n    }\r\n\r\n    elementToReplace.after($input);\r\n    elementToReplace.hide();\r\n    setTimeout(() => {\r\n        $input.focus();\r\n    }, 300);\r\n\r\n    $input.on(\"keydown.me\", (ev) => {\r\n        if (ev.key == \"Enter\" || ev.key == \"Escape\") {\r\n            $input.off(\"keydown.me\");\r\n            $input.off(\"focusout.me\");\r\n            $input.remove();\r\n            elementToReplace.show();\r\n            let newValue = escapeHtml(<string>$input.val());\r\n            renameDoneCallback(newValue);\r\n            return;\r\n        }\r\n    });\r\n\r\n    $input.on(\"focusout.me\", (ev) => {\r\n        $input.off(\"keydown.me\");\r\n        $input.off(\"focusout.me\");\r\n        $input.remove();\r\n        elementToReplace.show();\r\n        let newValue = escapeHtml(<string>$input.val());\r\n        renameDoneCallback(newValue);\r\n        return;\r\n    });\r\n\r\n}\r\n\r\nexport type ContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: () => void;\r\n    link?: string;\r\n    subMenu?: ContextMenuItem[]\r\n};\r\n\r\nexport function openContextMenu(items: ContextMenuItem[], x: number, y: number): JQuery<HTMLElement> {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    let $contextMenu = jQuery('<div class=\"jo_contextmenu\"></div>');\r\n\r\n    let $openSubMenu: JQuery<HTMLElement> = null;\r\n    let parentMenuItem: ContextMenuItem = null;\r\n\r\n    for (let mi of items) {\r\n        let caption: string = mi.caption;\r\n        if (mi.link != null) {\r\n            caption = `<a href=\"${mi.link}\" target=\"_blank\" class=\"jo_menulink\">${mi.caption}</a>`;\r\n        }\r\n        let $item = jQuery('<div>' + caption + (mi.subMenu != null ? '<span style=\"float: right\"> &nbsp; &nbsp; &gt;</span>' : \"\") + '</div>');\r\n        if (mi.color != null) {\r\n            $item.css('color', mi.color);\r\n        }\r\n        if (mi.link == null) {\r\n            $item.on(mousePointer + 'up.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n                jQuery('.jo_contextmenu').remove();\r\n                jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n                jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n                jQuery(document).off(\"keydown.contextmenu\");\r\n                mi.callback();\r\n            });\r\n            $item.on(mousePointer + 'down.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n            });\r\n        } else {\r\n            let $link = $item.find('a');\r\n            $link.on(mousePointer + \"up\", (event) => {\r\n                event.stopPropagation();\r\n                setTimeout(() => {\r\n                    $item.hide();\r\n                }, 500);\r\n            })\r\n            $link.on(mousePointer + \"down\", (event) => {\r\n                event.stopPropagation();\r\n            })\r\n\r\n        }\r\n\r\n        $item.on(mousePointer + 'move.contextmenu', () => {\r\n            if (mi != parentMenuItem && $openSubMenu != null) {\r\n                $openSubMenu.remove();\r\n                parentMenuItem = null;\r\n                $openSubMenu = null;\r\n            }\r\n            if (mi.subMenu != null) {\r\n                $openSubMenu = openContextMenu(mi.subMenu, $item.offset().left + $item.width(), $item.offset().top);\r\n            }\r\n        });\r\n\r\n        $contextMenu.append($item);\r\n    }\r\n\r\n    jQuery(document).on(mousePointer + \"down.contextmenu\", (e) => {\r\n        jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n        jQuery(document).off(\"keydown.contextmenu\");\r\n        jQuery('.jo_contextmenu').remove();\r\n    })\r\n\r\n    jQuery(document).on(\"keydown.contextmenu\", (ev) => {\r\n        if (ev.key == \"Escape\") {\r\n            jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n            jQuery(document).off(\"keydown.contextmenu\");\r\n            jQuery('.jo_contextmenu').remove();\r\n        }\r\n    });\r\n\r\n    let leftRight = x > window.innerWidth * 0.8 ? \"right\" : \"left\";\r\n    let xp = x > window.innerWidth * 0.8 ? window.innerWidth - x : x;\r\n    let topBottom = y > window.innerHeight * 0.8 ? \"bottom\" : \"top\";\r\n    let yp = y > window.innerHeight * 0.8 ? window.innerHeight - y : y;\r\n\r\n    let css = {};\r\n    css[leftRight] = xp + \"px\";\r\n    css[topBottom] = yp + \"px\";\r\n\r\n    $contextMenu.css(css);\r\n\r\n\r\n    jQuery(\"body\").append($contextMenu);\r\n    $contextMenu.show();\r\n\r\n    return $contextMenu;\r\n}\r\n\r\nexport function makeTabs(tabDiv: JQuery<HTMLElement>) {\r\n    let headings = tabDiv.find('.jo_tabheadings>div').not('.jo_noHeading');\r\n    let tabs = tabDiv.find('.jo_tabs>div');\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    headings.on(mousePointer + \"down\", (ev) => {\r\n        let target = jQuery(ev.target);\r\n        headings.removeClass('jo_active');\r\n        target.addClass('jo_active');\r\n        let tab = tabDiv.find('.' + target.data('target'));\r\n        tabs.removeClass('jo_active');\r\n        tabs.trigger('myhide');\r\n        tab.addClass('jo_active');\r\n        tab.trigger('myshow');\r\n    });\r\n\r\n}\r\n\r\nexport function convertPxToNumber(pxString: string): number {\r\n    pxString = pxString.replace('px', '').trim();\r\n    return Number.parseInt(pxString);\r\n}\r\n\r\nexport function makeDiv(id: string, klass: string = \"\", text: string = \"\", css?: { [id: string]: any }): JQuery<HTMLDivElement> {\r\n\r\n    let s = \"\";\r\n    if (id != null && id != \"\") s += ` id=\"${id}\"`;\r\n\r\n    if (klass != null && klass != \"\") s += ` class=\"${klass}\"`;\r\n\r\n    let div = jQuery(`<div${s}></div>`);\r\n\r\n    if (css != null) {\r\n        div.css(css);\r\n    }\r\n\r\n    if (text != null && text != \"\") {\r\n        div.text(text);\r\n    }\r\n\r\n    return <any>div;\r\n\r\n}\r\n\r\nexport type SelectItem = {\r\n    value: string | number,\r\n    object: any,\r\n    caption: string\r\n}\r\n\r\nexport function setSelectItems($selectElement: JQuery<HTMLSelectElement>, items: SelectItem[], activeItemValue?: string | number) {\r\n    $selectElement.empty();\r\n    items.forEach(item => {\r\n        let selected: string = (item.value == activeItemValue) ? ' selected=\"selected\"' : \"\";\r\n        let element = jQuery(`<option value=${item.value}${selected}>${item.caption}</option>`);\r\n        $selectElement.append(element);\r\n        element.data('object', item.object);\r\n    }\r\n    );\r\n\r\n    $selectElement.data('items', items);\r\n\r\n\r\n}\r\n\r\nexport function getSelectedObject($selectDiv: JQuery<HTMLSelectElement>) {\r\n\r\n    let items: SelectItem[] = $selectDiv.data('items');\r\n\r\n    let selectedValue = $selectDiv.val();\r\n\r\n    return items.find(item => item.value == selectedValue)?.object;\r\n\r\n}\r\n\r\nexport var jo_mouseDetected: boolean = false;\r\nexport function checkIfMousePresent() {\r\n    if (matchMedia('(pointer:fine)').matches) {\r\n        jo_mouseDetected = true;\r\n    }\r\n}\r\n\r\nexport function animateToTransparent($element: JQuery<HTMLElement>, cssProperty: string, startColorRgb: number[], duration: number) {\r\n    let colorPraefix = 'rgba(' + startColorRgb[0] + \", \" + startColorRgb[1] + \", \" + startColorRgb[2] + \", \";\r\n    let value = 1.0;\r\n    let delta = value / (duration / 20);\r\n\r\n    let animate = () => {\r\n        $element.css(cssProperty, colorPraefix + value + \")\");\r\n        value -= delta;\r\n        if (value < 0) {\r\n            $element.css(cssProperty, \"\");\r\n        } else {\r\n            setTimeout(animate, 20);\r\n        }\r\n    }\r\n\r\n    animate();\r\n}\r\n\r\nexport function downloadFile(obj: any, filename: string, isBlob: boolean = false) {\r\n    var blob = isBlob? obj : new Blob([JSON.stringify(obj)], { type: 'text/plain' });\r\n    //@ts-ignore\r\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n        //@ts-ignore\r\n        window.navigator.msSaveOrOpenBlob(blob, filename);\r\n    } else {\r\n        var e = document.createEvent('MouseEvents'),\r\n            a = document.createElement('a');\r\n        a.download = filename;\r\n        a.href = window.URL.createObjectURL(blob);\r\n        a.dataset.downloadurl = ['text/plain', a.download, a.href].join(':');\r\n        //@ts-ignore\r\n        e.initEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\r\n        a.dispatchEvent(e);\r\n        a.remove();\r\n    }\r\n}\r\n\r\n\r\nfunction fallbackCopyTextToClipboard(text) {\r\n    var textArea = document.createElement(\"textarea\");\r\n    textArea.value = text;\r\n\r\n    // Avoid scrolling to bottom\r\n    textArea.style.top = \"0\";\r\n    textArea.style.left = \"0\";\r\n    textArea.style.position = \"fixed\";\r\n\r\n    document.body.appendChild(textArea);\r\n    textArea.focus();\r\n    textArea.select();\r\n\r\n    try {\r\n        var successful = document.execCommand('copy');\r\n    } catch (err) {\r\n        console.error('Fallback: Oops, unable to copy', err);\r\n    }\r\n\r\n    document.body.removeChild(textArea);\r\n}\r\n\r\nexport function copyTextToClipboard(text) {\r\n    if (!navigator.clipboard) {\r\n        fallbackCopyTextToClipboard(text);\r\n        return;\r\n    }\r\n    navigator.clipboard.writeText(text).then(function () {\r\n    }, function (err) {\r\n        console.error('Async: Could not copy text: ', err);\r\n    });\r\n}\r\n","import { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class ErrorManager {\r\n\r\n    oldDecorations: string[] = [];\r\n    oldErrorDecorations: string[] = [];\r\n    $errorDiv: JQuery<HTMLElement>;\r\n\r\n    $bracket_warning: JQuery<HTMLElement>;\r\n\r\n    minimapColor: {[key: string]:string } = {};\r\n\r\n    lightBulbOnClickFunctionList: {class: string, onClickFunction: () => void, title: string}[] = [];\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>, private $mainDiv: JQuery<HTMLElement>) {\r\n        this.minimapColor[\"error\"] = \"#bc1616\";\r\n        this.minimapColor[\"warning\"] = \"#cca700\";\r\n        this.minimapColor[\"info\"] = \"#75beff\";\r\n\r\n        this.$bracket_warning = $mainDiv.find(\".jo_parenthesis_warning\");\r\n\r\n        this.$bracket_warning.attr('title', 'Klammeralarm!');\r\n        this.$bracket_warning.children().attr('title', 'Klammeralarm!');\r\n\r\n        let that = this;\r\n        $mainDiv.find(\".jo_pw_undo\").on(\"click\", () => {\r\n            let editor = that.main.getMonacoEditor();\r\n            editor.trigger(\".\", \"undo\", {});\r\n        }).attr('title', 'Undo');\r\n    }\r\n\r\n    showParenthesisWarning(error: string){\r\n        if(error != null){\r\n            this.$bracket_warning.css(\"visibility\", \"visible\");\r\n            this.$bracket_warning.find(\".jo_pw_heading\").text(error);\r\n        } else {\r\n            this.$bracket_warning.css(\"visibility\", \"hidden\");\r\n        }\r\n    }\r\n\r\n    showErrors(workspace: Workspace): Map<Module, number> {\r\n\r\n        this.lightBulbOnClickFunctionList = [];\r\n\r\n        let errorCountMap: Map<Module, number> = new Map();\r\n\r\n        this.$errorDiv = this.$bottomDiv.find('.jo_tabs>.jo_errorsTab');\r\n        this.$errorDiv.empty();\r\n\r\n        let hasErrors = false;\r\n\r\n        let ms = workspace.moduleStore;\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        for (let m of ms.getModules(false)) {\r\n            let markers: monaco.editor.IMarkerData[] = [];\r\n            let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n            let $errorList: JQuery<HTMLElement>[] = [];\r\n\r\n            let errors = m.getSortedAndFilteredErrors();\r\n            errorCountMap.set(m, m.getErrorCount());\r\n\r\n            for (let error of errors) {\r\n\r\n                let linesDecorationsClassName: string;\r\n                let borderLeftClass: string;\r\n                let minimapColor: string = this.minimapColor[error.level];\r\n\r\n                switch (error.level) {\r\n                    case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                    case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                    case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n                }\r\n\r\n                if (error.quickFix != null) {\r\n                    let quickFix = error.quickFix;\r\n                    let lightBulbClass = \"lb_\" + Math.trunc(Math.random() * 1000000);\r\n                    linesDecorationsClassName = 'jo_yellowLightBulb ' + borderLeftClass + \" \" + lightBulbClass;\r\n\r\n                    this.lightBulbOnClickFunctionList.push({class: '.' + lightBulbClass, \r\n                    onClickFunction: () => {\r\n\r\n                        let edits = quickFix.editsProvider(m.model.uri);\r\n                        editor.executeEdits(\"\", edits.map((edit) => {\r\n                            let r = edit.edit.range;\r\n                            return {\r\n                                range: new monaco.Range(r.startLineNumber, r.startColumn, r.endLineNumber, r.endColumn),\r\n                                text: edit.edit.text,\r\n                                forceMoveMarkers: true\r\n                            }\r\n                        }\r\n                        ));\r\n\r\n                    },\r\n                    title: quickFix.title\r\n                })\r\n\r\n\r\n                }\r\n\r\n                this.processError(error, m, $errorList);\r\n\r\n                let severity: monaco.MarkerSeverity;\r\n                switch (error.level) {\r\n                    case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                    case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                    case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n                }\r\n\r\n                markers.push({\r\n                    startLineNumber: error.position.line,\r\n                    startColumn: error.position.column,\r\n                    endLineNumber: error.position.line,\r\n                    endColumn: error.position.column + error.position.length,\r\n                    message: error.text,\r\n                    severity: severity,\r\n                    //@ts-ignore\r\n                    relatedInformation: error.quickFix\r\n                });\r\n\r\n                decorations.push({\r\n                    range: {\r\n                        startLineNumber: error.position.line,\r\n                        startColumn: error.position.column,\r\n                        endLineNumber: error.position.line,\r\n                        endColumn: error.position.column + error.position.length\r\n                    },\r\n                    options: {\r\n                        linesDecorationsClassName: linesDecorationsClassName,\r\n                        minimap: {\r\n                            position: monaco.editor.MinimapPosition.Inline,\r\n                            color: minimapColor\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n            }\r\n\r\n            monaco.editor.setModelMarkers(m.model, 'test', markers);\r\n            m.oldErrorDecorations = m.model.deltaDecorations(m.oldErrorDecorations, decorations);\r\n\r\n            // decorations used when user clicks on error in error-list:\r\n            this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, []);\r\n\r\n\r\n            if ($errorList.length > 0 && this.$errorDiv.length > 0) {\r\n                hasErrors = true;\r\n                let $file = jQuery('<div class=\"jo_error-filename\">' + m.file.name + '&nbsp;</div>');\r\n                this.$errorDiv.append($file);\r\n                for (let $error of $errorList) {\r\n                    this.$errorDiv.append($error);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasErrors && this.$errorDiv.length > 0) {\r\n            this.$errorDiv.append(jQuery('<div class=\"jo_noErrorMessage\">Keine Fehler gefunden :-)</div>'));\r\n        }\r\n\r\n        this.registerLightbulbOnClickFunctions();\r\n\r\n        return errorCountMap;\r\n\r\n    }\r\n\r\n    registerLightbulbOnClickFunctions() {\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            for(let locf of that.lightBulbOnClickFunctionList){\r\n                    jQuery(locf.class).off('click', locf.onClickFunction);\r\n                    jQuery(locf.class).on('click', locf.onClickFunction).attr('title', locf.title);\r\n            }            \r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    processError(error: Error, m: Module, $errorDivs: JQuery<HTMLElement>[]) {\r\n\r\n        let $div = jQuery('<div class=\"jo_error-line\"></div>');\r\n        let $lineColumn = jQuery('<span class=\"jo_error-position\">[Z&nbsp;<span class=\"jo_linecolumn\">' + error.position.line + '</span>' +\r\n            ' Sp&nbsp;<span class=\"jo_linecolumn\">' + error.position.column + '</span>]</span>:&nbsp;');\r\n        let category = \"\";\r\n        switch (error.level) {\r\n            case \"error\": break;\r\n            case \"warning\": category = '<span class=\"jo_warning_category\">Warnung: </span>'; break;\r\n            case \"info\": category = '<span class=\"jo_info_category\">Info: </span>'; break;\r\n        }\r\n        let $message = jQuery('<div class=\"jo_error-text\">' + category + error.text + \"</div>\");\r\n\r\n        $div.append($lineColumn).append($message);\r\n\r\n        let that = this;\r\n        $div.on(\"mousedown\", (ev) => {\r\n            this.$errorDiv.find('.jo_error-line').removeClass('jo_active');\r\n            $div.addClass('jo_active');\r\n            that.showError(m, error);\r\n        });\r\n\r\n        $errorDivs.push($div);\r\n    }\r\n\r\n    showError(m: Module, error: Error) {\r\n\r\n        if (this.main instanceof Main) {\r\n            if (m != this.main.projectExplorer.getCurrentlyEditedModule()) {\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n        let position = error.position;\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n\r\n        let className: string = \"\";\r\n        switch (error.level) {\r\n            case \"error\": className = \"jo_revealError\"; break;\r\n            case \"warning\": className = \"jo_revealWarning\"; break;\r\n            case \"info\": className = \"jo_revealInfo\"; break;\r\n        }\r\n\r\n\r\n        this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, [\r\n            {\r\n                range: range,\r\n                options: { className: className }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n}","import { makeDiv } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { stringToDate, dateToStringWithoutTime } from \"../../tools/StringTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\ntype ModuleWithWorkspace = {\r\n    module: Module,\r\n    workspace: Workspace\r\n}\r\n\r\ntype DayWithModules = {\r\n    date: Date;\r\n    day: string;\r\n    modules: ModuleWithWorkspace[];\r\n}\r\n\r\nexport class HomeworkManager {\r\n\r\n    $homeworkTab: JQuery<HTMLElement>;\r\n    $homeworkTabLeft: JQuery<HTMLElement>;\r\n    $homeworkTabRight: JQuery<HTMLElement>;\r\n\r\n    $showRevisionButton: JQuery<HTMLElement>;\r\n    showRevisionActive: boolean = false;\r\n\r\n    diffEditor: monaco.editor.IStandaloneDiffEditor;\r\n\r\n    constructor(private main: Main, public $bottomDiv: JQuery<HTMLElement>) {\r\n        this.$homeworkTab = $bottomDiv.find('.jo_tabs>.jo_homeworkTab');\r\n    }\r\n\r\n    initGUI() {\r\n        let that = this;\r\n        this.$homeworkTab.append(this.$homeworkTabLeft = makeDiv(\"\", \"jo_homeworkTabLeft jo_scrollable\"));\r\n        this.$homeworkTab.append(this.$homeworkTabRight = makeDiv(\"\", \"jo_homeworkTabRight jo_scrollable\"));\r\n        jQuery('#view-mode').prepend(this.$showRevisionButton = makeDiv(\"\", \"jo_button jo_active jo_homeworkRevisionButton\", \"\"));\r\n        this.$showRevisionButton.on(\"click\", () => {\r\n            if (this.showRevisionActive) {\r\n                this.hideRevision();\r\n            } else {\r\n                this.showRevision(that.main.getCurrentlyEditedModule());\r\n            }\r\n        });\r\n        this.$showRevisionButton.hide();\r\n        jQuery('#diffEditor').hide();\r\n    }\r\n\r\n    showHomeWorkRevisionButton() {\r\n        this.$showRevisionButton.text(this.showRevisionActive ? \"Normalansicht\" : \"Korrekturen zeigen\");\r\n        this.$showRevisionButton.show();\r\n    }\r\n\r\n    hideHomeworkRevisionButton() {\r\n        this.$showRevisionButton.hide();\r\n    }\r\n\r\n    showRevision(module: Module) {\r\n\r\n        module.file.text = module.getProgramTextFromMonacoModel();\r\n        let file = module.file;\r\n\r\n        jQuery('#editor').hide();\r\n        jQuery('#diffEditor').show();\r\n\r\n        var originalModel = monaco.editor.createModel(file.text_before_revision, \"myJava\");\r\n        var modifiedModel = monaco.editor.createModel(file.text, \"myJava\");\r\n\r\n        this.diffEditor = monaco.editor.createDiffEditor(document.getElementById(\"diffEditor\"), {\r\n            // You can optionally disable the resizing\r\n            enableSplitViewResizing: true,\r\n            originalEditable: false,\r\n            readOnly: true,\r\n            // Render the diff inline\r\n            renderSideBySide: true\r\n        });\r\n\r\n        this.diffEditor.setModel({\r\n            original: originalModel,\r\n            modified: modifiedModel\r\n        });\r\n\r\n        this.showRevisionActive = true;\r\n        this.showHomeWorkRevisionButton();\r\n    }\r\n\r\n    hideRevision() {\r\n        if (this.showRevisionActive) {\r\n\r\n            jQuery('#diffEditor').hide();\r\n            this.diffEditor.dispose();\r\n            this.diffEditor = null;\r\n            jQuery('#editor').show();\r\n\r\n            this.showRevisionActive = false;\r\n            this.showHomeWorkRevisionButton();\r\n        }\r\n    }\r\n\r\n\r\n    attachToWorkspaces(workspaces: Workspace[]) {\r\n\r\n        let daysWithModules: DayWithModules[] = [];\r\n        let map: { [day: string]: DayWithModules } = {};\r\n\r\n        workspaces.forEach(ws => {\r\n            ws.moduleStore.getModules(false).forEach(module => {\r\n\r\n                let dateString = module.file.submitted_date;\r\n                if (dateString != null) {\r\n\r\n                    let date: Date = stringToDate(dateString);\r\n                    let dateWithoutTime = dateToStringWithoutTime(date);\r\n                    let dwm: DayWithModules = map[dateWithoutTime];\r\n                    if (dwm == null) {\r\n                        dwm = {\r\n                            date: date,\r\n                            day: dateWithoutTime,\r\n                            modules: []\r\n                        };\r\n                        map[dateWithoutTime] = dwm;\r\n                        daysWithModules.push(dwm);\r\n                    }\r\n                    dwm.modules.push({module: module, workspace: ws});\r\n\r\n                }\r\n\r\n            });\r\n\r\n        });\r\n\r\n        this.$homeworkTabLeft.empty();\r\n        this.$homeworkTabRight.empty();\r\n\r\n        let that = this;\r\n\r\n        this.$homeworkTabLeft.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgabetage:\"));\r\n\r\n\r\n        daysWithModules.sort((a, b) => {\r\n            if (a.date.getFullYear() != b.date.getFullYear()) return -Math.sign(a.date.getFullYear() - b.date.getFullYear());\r\n            if (a.date.getMonth() != b.date.getMonth()) return -Math.sign(a.date.getMonth() - b.date.getMonth());\r\n            if (a.date.getDate() != b.date.getDate()) return -Math.sign(a.date.getDate() - b.date.getDate());\r\n            return 0;\r\n        });\r\n\r\n        let first: boolean = true;\r\n\r\n        daysWithModules.forEach(dwm => {\r\n\r\n            dwm.modules.sort((m1, m2) => m1.module.file.name.localeCompare(m2.module.file.name));\r\n\r\n            let $div = makeDiv(\"\", \"jo_homeworkDate\", dwm.day);\r\n            this.$homeworkTabLeft.append($div);\r\n\r\n            $div.on(\"click\", (e) => {\r\n                this.$homeworkTabLeft.find('.jo_homeworkDate').removeClass('active');\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            });\r\n\r\n            if (first) {\r\n                first = false;\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    select(dwm: DayWithModules) {\r\n        this.$homeworkTabRight.empty();\r\n        this.$homeworkTabRight.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgegebene Dateien:\"));\r\n        let that = this;\r\n        dwm.modules.forEach(moduleWithWorkspace => {\r\n            let $div = jQuery(`<div class=\"jo_homeworkEntry\">Workspace <span class=\"jo_homework-workspace\">\r\n                    ${moduleWithWorkspace.workspace.name}</span>, Datei <span class=\"jo_homework-file\">\r\n                    ${moduleWithWorkspace.module.file.name}</span> (Abgabe: ${moduleWithWorkspace.module.file.submitted_date} )</div>`);\r\n            that.$homeworkTabRight.append($div);\r\n            $div.on(\"click\", () => {\r\n                    that.main.projectExplorer.setWorkspaceActive(moduleWithWorkspace.workspace);\r\n                    that.main.projectExplorer.setModuleActive(moduleWithWorkspace.module);\r\n                    that.main.projectExplorer.fileListPanel.select(moduleWithWorkspace.module, false);\r\n            });\r\n        })\r\n        \r\n    }\r\n\r\n\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { ErrorManager } from \"./ErrorManager.js\";\r\nimport { HomeworkManager } from \"./HomeworkManager.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class BottomDiv {\r\n\r\n    errorManager: ErrorManager;\r\n    homeworkManager: HomeworkManager;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>, public $mainDiv: JQuery<HTMLElement>) {\r\n\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_homeworkTabheading').length > 0) {\r\n            this.homeworkManager = new HomeworkManager(<Main>main, $bottomDiv);\r\n        }\r\n\r\n        this.errorManager = new ErrorManager(main, $bottomDiv, $mainDiv);\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$bottomDiv);\r\n        if (this.homeworkManager != null) this.homeworkManager.initGUI();\r\n\r\n        this.$bottomDiv.find('.jo_tabs').children().first().trigger(\"click\");\r\n\r\n    }\r\n\r\n    showHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'visible');\r\n        jQuery('.jo_homeworkTabheading').trigger(\"mousedown\");\r\n\r\n    }\r\n\r\n    hideHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'hidden');\r\n        jQuery('.jo_tabheadings').children().first().trigger(\"mousedown\");\r\n\r\n    }\r\n\r\n\r\n}","import { Editor } from \"./Editor.js\";\r\nimport { CompletionHint, Module } from \"../../compiler/parser/Module.js\";\r\nimport { Symbol, SymbolTable } from \"../../compiler/parser/SymbolTable.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { Column, Table } from \"../../compiler/parser/SQLTable.js\";\r\n\r\nexport class MyCompletionItemProvider implements monaco.languages.CompletionItemProvider {\r\n\r\n    isConsole: boolean;\r\n\r\n    public triggerCharacters: string[] = ['.', 'abcdefghijklmnopqrstuvwxyzäöüß_ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜ', ' ', ',', '('];\r\n\r\n    public keywordCompletionItems: Map<string, monaco.languages.CompletionItem> = new Map();\r\n\r\n    constructor(private main: MainBase) {\r\n        this.setupKeywordCompletionItems();\r\n    }\r\n\r\n    first: boolean = true;\r\n    provideCompletionItems(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, \r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n\r\n\r\n        let module: Module =\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null || module.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n            let that = this;\r\n\r\n            let wfc = function waitForCompiler(){\r\n                if(module.file.dirty){\r\n                    setTimeout(() => {\r\n                        wfc();\r\n                    }, 100);\r\n                } else {\r\n                    resolve(that.provideCompletionItemsIntern(model, position, context, token));\r\n                }\r\n            }\r\n        \r\n            wfc();\r\n\r\n        })\r\n\r\n        // Promise.resolve({\r\n        //     suggestions: completionItems\r\n        // });\r\n    }\r\n\r\n    provideCompletionItemsIntern(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, \r\n        token: monaco.CancellationToken): monaco.languages.CompletionList {\r\n\r\n        setTimeout(() => {\r\n            //@ts-ignore\r\n            let sw = this.main.getMonacoEditor()._contentWidgets[\"editor.widget.suggestWidget\"].widget;\r\n            if (this.first) {\r\n                sw.toggleDetails();\r\n                this.first = false;\r\n            }\r\n        }, 500);\r\n\r\n        let module: Module =\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null || module.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (this.isStringLiteral(module, position)) return null;\r\n\r\n        let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let symbolTable = module.mainSymbolTable.findTableAtPosition(position.lineNumber, position.column);\r\n        let completionHint: CompletionHint = module.getCompletionHint(position.lineNumber, position.column);\r\n        if (completionHint == null) {\r\n            completionHint = {\r\n                fromColumn: 0,\r\n                toColumn: 0,\r\n                fromLine: 0,\r\n                toLine: 0,\r\n                hintColumns: false,\r\n                hintTables: false,\r\n                hintKeywords: []\r\n            }\r\n        }\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n        this.addKeywordCompletionItems(completionHint, completionItems);\r\n\r\n        let dotMatch = textUntilPosition.match(/.*\\s([\\wöäüÖÄÜß]*)(\\.)([\\wöäüÖÄÜß]*)$/);\r\n\r\n        let ibMatch = textAfterPosition.match(/^([\\wöäüÖÄÜß]*)/);\r\n        let identifierAndBracketAfterCursor = \"\";\r\n        if (ibMatch != null && ibMatch.length > 0) {\r\n            identifierAndBracketAfterCursor = ibMatch[0];\r\n        }\r\n\r\n        if (dotMatch == null) {\r\n            this.addIdentifierCompletionItems(completionHint, symbolTable, completionItems);\r\n        } else {\r\n            this.addDotCompletionItems(position, dotMatch, identifierAndBracketAfterCursor, symbolTable, completionItems);\r\n        }\r\n\r\n        let word = model.getWordUntilPosition(position);\r\n        let replaceWordRange = { startColumn: word.startColumn, startLineNumber: position.lineNumber, endColumn: word.endColumn, endLineNumber: position.lineNumber };\r\n        let insertAfterCursorRange = { startColumn: position.column, startLineNumber: position.lineNumber, endColumn: position.column, endLineNumber: position.lineNumber }\r\n\r\n        for (let item of completionItems) {\r\n            if (item.range == null) {\r\n                if (item.insertText.startsWith(\",\")) {\r\n                    item.range = insertAfterCursorRange;\r\n                } else {\r\n                    item.range = replaceWordRange;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (completionHint.dontHint != null) {\r\n            completionItems = completionItems.filter(item => completionHint.dontHint.indexOf(item.insertText) < 0);\r\n        }\r\n\r\n        return {\r\n            suggestions: completionItems\r\n        };\r\n    }\r\n\r\n\r\n    addDotCompletionItems(position: monaco.Position, dotMatch: RegExpMatchArray, identifierAndBracketAfterCursor: string,\r\n        symbolTable: SymbolTable, completionItems: monaco.languages.CompletionItem[]) {\r\n        let textAfterDot = dotMatch[3];\r\n        let textBeforeDot = dotMatch[1];\r\n        let dotColumn = position.column - textAfterDot.length - 1;\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - textAfterDot.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n        for (let symbol of symbolTable.symbolList) {\r\n            if (symbol.table != null) {\r\n                let identifier: string = symbol.table.identifier;\r\n                if (symbol.tableAlias != null) identifier = symbol.tableAlias;\r\n                if (identifier.toLowerCase() == textBeforeDot) {\r\n                    for (let column of symbol.table.columns) {\r\n                        completionItems.push({\r\n                            label: column.identifier,\r\n                            detail: \"Spalte \" + column.identifier + \" der Tabelle \" + symbol.table.identifier,\r\n                            filterText: column.identifier,\r\n                            insertText: column.identifier,\r\n                            insertTextRules: monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                            kind: monaco.languages.CompletionItemKind.Field,\r\n                            range: rangeToReplace\r\n                        })\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    addIdentifierCompletionItems(completionHint: CompletionHint, symbolTable: SymbolTable, completionItems: monaco.languages.CompletionItem[]) {\r\n        let praefix: string = completionHint.praefix == null ? \"\" : completionHint.praefix;\r\n        let suffix: string = completionHint.suffix == null ? \"\" : completionHint.suffix;\r\n\r\n        if (!(completionHint.hintTables || completionHint.hintColumns)) {\r\n            return;\r\n        }\r\n\r\n        let tableIdentifiers: { [identifier: string]: boolean } = {};\r\n\r\n        let st: SymbolTable = symbolTable;\r\n        let columns: { [identifier: string]: Symbol[] } = {};\r\n        let columnIdentifiers: string[] = [];\r\n\r\n        while (st != null) {\r\n            for (let symbol of st.symbolList) {\r\n                if (symbol.column != null) {\r\n                    let columnIdentifier = symbol.column.identifier;\r\n                    if (columns[columnIdentifier] == null) {\r\n                        columns[columnIdentifier] = [symbol];\r\n                        columnIdentifiers.push(columnIdentifier);\r\n                    } else {\r\n                        columns[columnIdentifier].push(symbol);\r\n                    }\r\n                } else if (symbol.table != null && completionHint.hintTables) {\r\n                    if (!tableIdentifiers[symbol.identifier]) {\r\n                        let insertText = praefix + symbol.identifier + suffix;\r\n                        completionItems.push({\r\n                            label: symbol.identifier,\r\n                            detail: \"Tabelle \" + symbol.table.identifier,\r\n                            filterText: symbol.identifier,\r\n                            insertText: insertText,\r\n                            insertTextRules: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                            kind: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemKind.Snippet : monaco.languages.CompletionItemKind.Class,\r\n                            range: undefined,\r\n                            sortText: \"aa\" + symbol.identifier\r\n                        });\r\n                        tableIdentifiers[symbol.identifier] = true;\r\n                    }\r\n                }\r\n            }\r\n            st = st.parent;\r\n        }\r\n\r\n        if (completionHint.hintColumns) {\r\n            for (let ci of columnIdentifiers) {\r\n                let columList = columns[ci];\r\n                let withTable = columList.length > 1 && completionHint.hintColumnsOfTable == null;\r\n                for (let cs of columList) {\r\n                    let text = cs.identifier;\r\n                    if (withTable && cs.identifier == cs.column.identifier.toLowerCase()) {\r\n                        text = (cs.tableAlias == null ? cs.column.table.identifier : cs.tableAlias) + \".\" + text;\r\n                    }\r\n                    if (completionHint.hintColumnsOfTable == null || cs.column?.table?.identifier == completionHint.hintColumnsOfTable) {\r\n                        let insertText = praefix + text + suffix;\r\n                        completionItems.push({\r\n                            label: text,\r\n                            detail: \"Die Spalte \" + cs.column.identifier + \" der Tabelle \" + cs.column.table.identifier,\r\n                            filterText: text,\r\n                            insertText: insertText,\r\n                            insertTextRules: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                            kind: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemKind.Snippet : monaco.languages.CompletionItemKind.Field,\r\n                            range: undefined\r\n                        })\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    keywordToSnippetMap: { [keyword: string]: string } = {\r\n        \"(\": \"(\\n\\t$0\\n)\",\r\n        \"varchar\": \"varchar($1) $0\",\r\n        \"decimal\": \"decimal($1, $2) $0\"\r\n    }\r\n\r\n    addKeywordCompletionItems(completionHint: CompletionHint, completionItems: monaco.languages.CompletionItem[]) {\r\n        let praefix: string = completionHint.praefix == null ? \"\" : completionHint.praefix;\r\n        let suffix: string = completionHint.suffix == null ? \"\" : completionHint.suffix;\r\n\r\n\r\n        for (let text of completionHint.hintKeywords) {\r\n            let insertText = praefix + text + suffix;\r\n            let snippet = this.keywordToSnippetMap[text];\r\n\r\n            let ci = this.keywordCompletionItems.get(text);\r\n            if (ci != null) {\r\n                completionItems.push(ci);\r\n            } else if (snippet != null) {\r\n                let label = snippet.replace(\"$0\", \"\").replace(\"$1\", \"\").replace(\"$2\", \"\").replace(/ /g, \"\").replace(/\\n/g, \"\").replace(/\\t/g, \"\");\r\n                completionItems.push({\r\n                    label: label,\r\n                    detail: \"\",\r\n                    filterText: text,\r\n                    insertText: snippet,\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                })\r\n            } else {\r\n                completionItems.push({\r\n                    label: text,\r\n                    detail: \"\",\r\n                    filterText: text,\r\n                    insertText: text,\r\n                    insertTextRules: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                    kind: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemKind.Snippet : monaco.languages.CompletionItemKind.Keyword,\r\n                    range: undefined,\r\n                    sortText: text == \"from\" ? \"*\" : undefined\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    isStringLiteral(module: Module, position: monaco.Position) {\r\n\r\n        let tokenList = module.tokenList;\r\n        if (tokenList == null || tokenList.length == 0) return false;\r\n\r\n        let posMin = 0;\r\n        let posMax = tokenList.length - 1;\r\n        let pos: number;\r\n\r\n        let watchDog = 1000;\r\n\r\n        while (true) {\r\n            let posOld = pos;\r\n            pos = Math.round((posMax + posMin) / 2);\r\n\r\n            if (posOld == pos) return false;\r\n\r\n            watchDog--;\r\n            if (watchDog == 0) return false;\r\n\r\n            let t = tokenList[pos];\r\n            let p = t.position;\r\n\r\n            if (p.line < position.lineNumber || p.line == position.lineNumber && p.column + p.length < position.column) {\r\n                posMin = pos;\r\n                continue;\r\n            }\r\n\r\n            if (p.line > position.lineNumber || p.line == position.lineNumber && p.column > position.column) {\r\n                posMax = pos;\r\n                continue;\r\n            }\r\n\r\n            return t.tt == TokenType.stringConstant;\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    setupKeywordCompletionItems() {\r\n        this.keywordCompletionItems.set(\"delete from\",\r\n            {\r\n                label: \"delete from <Tabelle> where <Bedingung>\",\r\n                detail: \"Anweisung zum Löschen von Datensätzen\",\r\n                filterText: `delete from`,\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `delete from `,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"drop table\",\r\n            {\r\n                label: \"drop table <Tabelle>\",\r\n                detail: \"Anweisung zum Löschen einer Tabelle\",\r\n                filterText: 'drop table',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `drop table `,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"alter\",\r\n            {\r\n                label: \"alter table <Tabelle> <rename to, rename column, add column, drop column>\",\r\n                detail: \"Anweisung zum Ändern des Schemas (alter table <Tabelle> <rename to, rename column, add column, drop column>)\",\r\n                filterText: 'alter',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `alter table `,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"select\",\r\n            {\r\n                label: \"select <Spalten> from <Tabellen> where <Bedingung>\",\r\n                detail: \"Select-Anweisung\",\r\n                filterText: 'select',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `select $2 from $1\\nwhere $0\\n`,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"create table\",\r\n            {\r\n                label: \"create table <Tabellenbezeichner> (<Spaltendefinitionen>)\",\r\n                detail: \"Create table-Anweisung (Erstellt eine neue Tabelle)\",\r\n                filterText: 'create',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `create table $1 (\\n\\t$0\\n);`,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        // this.keywordCompletionItems.set(\"from\",\r\n        //     {\r\n        //         label: \"from <Tabellen> where <Bedingung>\",\r\n        //         detail: \"from-Teil der select-Anweisung\",\r\n        //         filterText: 'from',\r\n        //         // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n        //         insertText: `from $1\\nwhere $0\\n`,\r\n        //         command: {\r\n        //             id: \"editor.action.triggerSuggest\",\r\n        //             title: '123',\r\n        //             arguments: []\r\n        //         },\r\n        //         insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n        //         kind: monaco.languages.CompletionItemKind.Snippet,\r\n        //         range: undefined\r\n        //     });\r\n\r\n    }\r\n\r\n\r\n}","import { Module, MethodCallPosition } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\n\r\n\r\nexport class MySignatureHelpProvider implements monaco.languages.SignatureHelpProvider {\r\n\r\n    signatureHelpTriggerCharacters?: readonly string[] = ['(', ',', ';', '<', '>', '=']; // semicolon, <, >, = for for-loop, if, while, ...\r\n    signatureHelpRetriggerCharacters?: readonly string[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    provideSignatureHelp(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let that = this;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            setTimeout(() => {\r\n\r\n                this.main.compileIfDirty();\r\n\r\n                resolve(that.provideSignatureHelpLater(model, position, token, context));\r\n\r\n            }, 300);\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    provideSignatureHelpLater(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model != this.main.getMonacoEditor().getModel());\r\n\r\n        let module: Module = \r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        // let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        // let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let methodCallPositions = module.methodCallPositions[position.lineNumber];\r\n\r\n        if (methodCallPositions == null) return null;\r\n\r\n        let methodCallPosition: MethodCallPosition = null;\r\n        let rightMostPosition: number = -1;\r\n\r\n        for (let i = methodCallPositions.length - 1; i >= 0; i--) {\r\n            let mcp = methodCallPositions[i];\r\n            if (mcp.identifierPosition.column + mcp.identifierPosition.length < position.column\r\n                && mcp.identifierPosition.column > rightMostPosition) {\r\n                if (mcp.rightBracketPosition == null ||\r\n                    (position.lineNumber <= mcp.rightBracketPosition.line && position.column <= mcp.rightBracketPosition.column)\r\n                    || (position.lineNumber < mcp.rightBracketPosition.line)) {\r\n                    methodCallPosition = mcp;\r\n                    rightMostPosition = mcp.identifierPosition.column;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (methodCallPosition == null) return null;\r\n\r\n        return this.getSignatureHelp(methodCallPosition, position);\r\n\r\n\r\n\r\n    }\r\n\r\n    getSignatureHelp(methodCallPosition: MethodCallPosition,\r\n        position: monaco.Position): monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let parameterIndex: number = 0;\r\n\r\n        for (let cp of methodCallPosition.commaPositions) {\r\n            if (cp.line < position.lineNumber || (cp.line == position.lineNumber && cp.column < position.column)) {\r\n                parameterIndex++;\r\n            }\r\n        }\r\n\r\n        let signatureInformationList: monaco.languages.SignatureInformation[] = [];\r\n\r\n        return Promise.resolve({\r\n            value: {\r\n                activeParameter: parameterIndex,\r\n                activeSignature: 0,\r\n                signatures: signatureInformationList\r\n            },\r\n            dispose: () => { }\r\n        });\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\n\r\n\r\n\r\nexport class MyHoverProvider {\r\n\r\n    private static keywordDescriptions: { [keyword: string]: string } = {\r\n        \"print\": \"Die Anweisung ```print``` gibt eine Zeichenkette aus.\",\r\n        \"new\": \"Das Schlüsselwort ```new``` bewirkt die Instanzierung (\\\"Erschaffung\\\") eines neuen Objektes einer Klasse.\",\r\n        \"println\": \"Die Anweisung ```println``` gibt eine Zeichenkette gefolgt von einem Zeilenumbruch aus.\",\r\n        \"while\": \"```\\nwhile (Bedingung) {Anweisungen}\\n```  \\nbewirkt die Wiederholung der Anweisungen solange ```Bedingung == true``` ist.\",\r\n        \"for\": \"```\\nfor(Startanweisung;Solange-Bedingung;Nach_jeder_Wiederholung){Anweisungen}\\n```  \\n\"\r\n            + \"führt zunächst die Startanweisung aus und wiederholt dann die Anweisungen solange ```Bedingung == true``` ist. Am Ende jeder wiederholung wird Nach_jeder_Wiederholung ausgeführt.\",\r\n        \"if\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.  \\nDer ```else```-Teil kann auch weggelassen werden.\",\r\n        \"else\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.\",\r\n        \"switch\": \"```\\nswitch(Selektor){ case Wert_1: Anweisungen_1; break; case Wert_2: Anweisungen_2; break; default: Default-Anweisungen } \\n```  \\nwertet den Selektor-Term aus und führt abhängig vom Termwert Anweisungen_1, Anweisungen_2, ... aus. Entspricht der Termwert keinem der Werte Wert_1, Wert_2, ..., so werden die Default-Anweisungen ausgeführt.\",\r\n        \"%\": \"```\\na % b\\n```  \\n (sprich: 'a modulo b') berechnet den **Rest** der ganzzahligen Division a/b.\",\r\n        \"==\": \"```\\na == b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` gleich sind.  \\nSind a und b **Objekte**, so ergibt ```a == b``` nur dann ```true```, wenn ```a``` und ```b``` auf das **identische** Objekt zeigen.  \\n```==``` nennt man **Vergleichsoperator**.\",\r\n        \"<=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` kleiner oder gleich dem Wert von ```b``` ist.\",\r\n        \">=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` größer oder gleich dem Wert von ```b``` ist.\",\r\n        \"!=\": \"```\\na != b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` **un**gleich sind.  \\nSind ```a``` und ```b``` **Objekte**, so ergibt ```a != b``` dann ```true```, wenn ```a``` und ```b``` **nicht** auf das **identische** Objekt zeigen.  \\n```!=``` nennt man **Ungleich-Operator**.\",\r\n        \"+=\": \"```\\na += b\\n(Kurzschreibweise für a = a + b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erhöht** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"-=\": \"```\\na -= b\\n(Kurzschreibweise für a = a - b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erniedrigt** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"*=\": \"```\\na *= b\\n(Kurzschreibweise für a = a * b)\\n```  \\nbewirkt, dass der Wert von ```a``` mit dem Wert von ```b``` **multipliziert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"/=\": \"```\\na /= b\\n(Kurzschreibweise für a = a / b)\\n```  \\nbewirkt, dass der Wert von ```a``` durch den Wert von ```b``` **dividiert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"++\": \"```\\na++\\n(Kurzschreibweise für a = a + 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins erhöht wird.\",\r\n        \"--\": \"```\\na--\\n(Kurzschreibweise für a = a - 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins eniedrigt wird.\",\r\n        \"=\": \"```\\na = Term\\n```  \\nberechnet den Wert des Terms und weist ihn der Variablen ```a``` zu.  \\n**Vorsicht:**  \\nVerwechsle ```=```(**Zuweisungsoperator**) nicht mit ```==```(**Vergleichsoperator**)!\",\r\n        \"!\": \"```\\n!a\\n```  \\nergibt genau dann ```true```, wenn ```a``` ```false``` ergibt.  \\n```!``` spricht man '**nicht**'.\",\r\n        \"public\": \"```\\npublic\\n```  \\nAttribute und Methoden, die als ```public``` deklariert werden, sind überall (auch außerhalb der Klasse) sichtbar.\",\r\n        \"private\": \"```\\nprivate\\n```  \\nAttribute und Methoden, die als ```private``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse sichtbar.\",\r\n        \"protected\": \"```\\nprotected\\n```  \\nAttribute und Methoden, die als ```protected``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse oder innerhalb von Methoden von Kindklassen sichtbar.\",\r\n        \"return\": \"```\\nreturn Term\\n```  \\nbewirkt, dass die Methode verlassen wird und der Wert des Terms an die aufrufende Stelle zurückgegeben wird.\",\r\n        \"break\": \"```\\nbreak;\\n```  \\ninnerhalb einer Schleife bewirkt, dass die Schleife sofort verlassen und mit den Anweisungen nach der Schleife fortgefahren wird.  \\n\"+\r\n        \"```break``` innerhalb einer ```switch```-Anweisung bewirkt, dass der Block der ```switch```-Anweisung verlassen wird.\",\r\n        \"class\": \"```\\nclass\\n```  \\nMit dem Schlüsselwort ```class``` werden Klassen definiert.\",\r\n        \"extends\": \"```\\nextends\\n```  \\n```class A extends B { ... }``` bedeutet, dass die Klasse A Unterklasse der Klasse B ist.\",\r\n        \"implements\": \"```\\nimplements\\n```  \\n```class A implements B { ... }``` bedeutet, dass die Klasse A das Interface B implementiert, d.h., dass sie alle Methoden besitzen muss, die in B definiert sind.\",\r\n        \"this\": \"```\\nthis\\n```  \\nInnerhalb einer Methodendefinition bezeichnet das Schlüsselwor ```this``` immer dasjenige Objekt, für das die Methode gerade ausgeführt wird.\",\r\n\r\n    }\r\n\r\n    constructor(private editor: Editor) {\r\n\r\n    }\r\n\r\n    provideHover(model: monaco.editor.ITextModel, position: monaco.Position, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Hover> {\r\n\r\n        let selection: monaco.Selection = this.editor.editor.getSelection();\r\n        \r\n        // if cursor is inside current selection then don't show hover, because editor.onDidChangeCursorPosition evaluates selected Text \r\n        // (see class Editor).\r\n        if(selection != null){\r\n            if(selection.startLineNumber != selection.endLineNumber || selection.startColumn != selection.endColumn){\r\n                if(\r\n                    (selection.startLineNumber < position.lineNumber || selection.startLineNumber == position.lineNumber && selection.startColumn <= position.column) && \r\n                    (selection.endLineNumber > position.lineNumber || selection.endLineNumber == position.lineNumber && selection.endColumn >= position.column) \r\n                ){\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        let module: Module = this.editor.main.getCurrentWorkspace()?.getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        for(let errorList of module.errors){\r\n            for(let error of errorList){\r\n                if(error.position.line == position.lineNumber && \r\n                    error.position.column <= position.column && \r\n                    error.position.column + error.position.length >= position.column){\r\n                        return null; // Show error-tooltip and don't show hover-tooltip\r\n                    }\r\n            }\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let declarationAsString = \"\";\r\n\r\n        if (element != null) {\r\n        } else {\r\n            let word = this.getWordUnderCursor(model, position);\r\n            let desc = MyHoverProvider.keywordDescriptions[word];\r\n            if (desc != null) {\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: desc }],\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getWordUnderCursor(model: monaco.editor.ITextModel, position: monaco.Position)\r\n         : string {\r\n        \r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let word = \"\";\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierOrArrayDescriptor(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        if (end - begin > 1) {\r\n            word = text.substring(begin, end);\r\n        } else {\r\n            end = pos;\r\n            while (end < text.length && this.isInsideOperator(text.charAt(end))) {\r\n                end++;\r\n            }\r\n    \r\n            begin = pos;\r\n            while (begin > 0 && this.isInsideOperator(text.charAt(begin - 1))) {\r\n                begin--;\r\n            }\r\n    \r\n            if (end - begin > 0) {\r\n                word = text.substring(begin, end);\r\n            }\r\n        }\r\n\r\n        return word;\r\n\r\n    }\r\n\r\n    widenDeclaration(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        identifier: string): string {\r\n\r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierChain(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        let lenght: number = identifier?.length == null ? 1 : identifier.length;\r\n\r\n        if (end - begin > length) {\r\n            return text.substring(begin, end);\r\n        }\r\n\r\n        return identifier;\r\n    }\r\n\r\n    isInsideIdentifierChain(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß_\\[\\]\\.]/i);\r\n\r\n    }\r\n\r\n    isInsideOperator(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[!%<>=\\+\\-\\*\\/]/i);\r\n\r\n    }\r\n\r\n    isInsideIdentifierOrArrayDescriptor(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß\\[\\]]/i);\r\n\r\n    }\r\n\r\n\r\n}","import { QuickFix } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyCodeActionProvider implements monaco.languages.CodeActionProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideCodeActions(model: monaco.editor.ITextModel, range: monaco.Range, context: monaco.languages.CodeActionContext, token: monaco.CancellationToken): monaco.languages.CodeActionList | Promise<monaco.languages.CodeActionList> {\r\n        const actions = context.markers.map(error => {\r\n            let quickFix: QuickFix = <any>error.relatedInformation;\r\n            if (quickFix == null) return null;\r\n\r\n            let codeAction: monaco.languages.CodeAction = {\r\n                title: quickFix.title,\r\n                diagnostics: [error],\r\n                kind: \"quickfix\",\r\n                edit: {\r\n                    edits: quickFix.editsProvider(model.uri)\r\n                },\r\n                isPreferred: true\r\n            };\r\n            return codeAction;\r\n        });\r\n        return {\r\n            actions: actions,\r\n            dispose: () => { }\r\n        }\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Editor } from \"./Editor.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyReferenceProvider implements monaco.languages.ReferenceProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideReferences(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.ReferenceContext, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Location[]> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) return null;\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let referencePositions: monaco.languages.Location[] = [];\r\n\r\n        usagePositions.forEach((upInCurrentModule, module) => {\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    referencePositions.push(\r\n                        {\r\n                            uri: module.uri,\r\n                            range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length }\r\n                        });\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        return referencePositions;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import { Main } from \"../Main.js\";\r\n\r\nexport type HelperDirection = \"top\" | \"bottom\" | \"left\" | \"right\";\r\n\r\nexport class Helper {\r\n\r\n    public static openHelper(text: string, targetElement: JQuery<HTMLElement>, direction: HelperDirection) {\r\n\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.removeClass(['jo_arrow_box_left', 'jo_arrow_box_right', 'jo_arrow_box_top', 'jo_arrow_box_bottom']);\r\n\r\n        $helper.addClass('jo_arrow_box_' + direction);\r\n\r\n        $helper.css({ left: '', right: '', top: '', bottom: '' });\r\n\r\n        let to = targetElement.offset();\r\n        let b = jQuery('body');\r\n\r\n        let delta: number = 34;\r\n\r\n        switch (direction) {\r\n            case \"bottom\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                bottom: b.height() - to.top + delta\r\n            });\r\n                break;\r\n            case \"top\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                top: to.top + targetElement.height() + 26\r\n            });\r\n                break;\r\n            case \"left\": $helper.css({\r\n                left: to.left + targetElement.width() + delta,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n            case \"right\": $helper.css({\r\n                right: b.width() - to.left,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n        }\r\n\r\n        $helper.find('span').html(text);\r\n\r\n        let $button = $helper.find('.jo_button');\r\n        $button.on('click', (e) => {\r\n            e.stopPropagation();\r\n            $button.off('click');\r\n            Helper.close();\r\n        });\r\n\r\n        $helper.fadeIn(800);\r\n\r\n    }\r\n\r\n    static close() {\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.fadeOut(800);\r\n    }\r\n\r\n\r\n    static showHelper(id: string, mainBase: Main, $element?: JQuery<HTMLElement>) {\r\n\r\n        let main: Main;\r\n        if(mainBase instanceof Main){\r\n            main = mainBase;\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        let helperHistory = main.user.settings!.helperHistory;\r\n\r\n        let flag = id + \"Done\";\r\n\r\n        if (helperHistory != null && (helperHistory[flag] == null || !helperHistory[flag])) {\r\n            helperHistory[flag] = true;\r\n            main.networkManager.sendUpdateUserSettings(() => { });\r\n\r\n            let text: string = \"\";\r\n            let direction: HelperDirection = \"left\";\r\n\r\n            switch (id) {\r\n                case \"newDatabaseHelper\":\r\n                    text = `Es gibt noch keine Datenbank. <br> Nutzen Sie den Button\r\n                        <span class='img_add-database-dark jo_inline-image'></span> um eine Datenbank anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                    case \"newSQLFileHelper\":\r\n                        text = `Es gibt noch keine Datei mit SQL-Anweisungen. <br> Nutzen Sie den Button \r\n                            <span class='img_add-file-dark jo_inline-image'></span> um eine neue Datei anzulegen.\r\n                            `;\r\n                        direction = \"left\";\r\n                        break;\r\n                case \"homeButtonHelper\":\r\n                    text = \"Mit dem Home-Button <span class='img_home-dark jo_inline-image'></span> können Sie wieder zu Ihren eigenen Workspaces wechseln.\";\r\n                    direction = \"top\";\r\n                    $element = jQuery('.img_home-dark');\r\n                    break;\r\n                case \"playButtonHelper\":\r\n                    text = `Mit dem \"Start-Button\"\r\n                        (<span class='img_start-dark jo_inline-image'></span>) \r\n                        oder der Tastenkombination &lt;Strg&gt;&nbsp;+&nbsp&lt;Enter&gt; \r\n                        wird die Anweisung ausgeführt, in der der Cursor gerade steht. \r\n                        <br> Wollen Sie mehrere Anweisungen hintereinander ausführen, so markieren \r\n                        Sie alle Anweisungen und klicken Sie dann auf <span class='img_start-dark jo_inline-image'></span>\r\n                        oder drücken Sie  &lt;Strg&gt;&nbsp;+&nbsp&lt;Enter&gt;. `;\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"consoleHelper\": \r\n                    text=`\r\n                        Hier können Sie Anweisungen oder Terme eingeben, die nach Bestätigung mit der Enter-Taste ausgeführt/ausgewertet werden. Das Ergebnis sehen Sie im Bereich über der Eingabezeile. <br>\r\n                        Falls das Programm gerade pausiert (z.B. bei Ausführung in Einzelschritten) können Sie auch auf die Variablen des aktuellen Sichtbarkeitsbereiches zugreifen.\r\n                    `;\r\n                    direction = \"bottom\";\r\n            }\r\n\r\n            if (text != \"\" && $element != null && $element.length > 0) {\r\n                Helper.openHelper(text, $element, direction);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MyCompletionItemProvider } from \"./MyCompletionItemProvider.js\";\r\nimport { defineMyJava } from \"./MyJava.js\";\r\nimport { MySignatureHelpProvider } from \"./MySignatureHelpProvider.js\";\r\nimport { MyHoverProvider } from \"./MyHoverProvider.js\";\r\nimport { MyCodeActionProvider } from \"./MyCodeActionProvider.js\";\r\nimport { MyReferenceProvider } from \"./MyReferenceProvider.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { defineVscSQL } from \"./VscSql.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\nexport class Editor {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n\r\n    cw: monaco.editor.IContentWidget = null;\r\n\r\n    dontPushNextCursorMove: number = 0;\r\n\r\n    constructor(public main: MainBase, private showMinimap: boolean, private isEmbedded: boolean) {\r\n    }\r\n\r\n    initGUI($element: JQuery<HTMLElement>) {\r\n\r\n\r\n\r\n        defineVscSQL();\r\n\r\n        monaco.editor.defineTheme('myCustomThemeDark', {\r\n            base: 'vs-dark', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'functions', foreground: 'dcdcaa', fontStyle: 'italic' },\r\n                { token: 'string.sql', foreground: '3DC9B0' },\r\n                { token: 'number', foreground: '7bef3f' },\r\n                { token: 'type', foreground: '499cd6' },\r\n                { token: 'identifier', foreground: 'effefe' },\r\n                { token: 'statement', foreground: '9cdcfe', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '619ceb', fontStyle: 'bold' },\r\n                { token: 'table', foreground: 'ff0000', fontStyle: 'bold' },\r\n                { token: 'delimiter', foreground: 'e8eb38' }\r\n                // { token: 'comment.js', foreground: '008800', fontStyle: 'bold italic underline' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#1e1e1e\",\r\n                \"jo_highlightStatementGreen\": \"#004000\",\r\n                \"jo_highlightStatementYellow\": \"#404000\",\r\n                \"jo_highlightStatementRed\": \"#402020\"\r\n            }\r\n        });\r\n\r\n        monaco.editor.defineTheme('myCustomThemeLight', {\r\n            base: 'vs', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'functions', foreground: '694E16', fontStyle: 'italic bold' },\r\n                { token: 'string.sql', foreground: 'a03030' },\r\n                { token: 'number', foreground: '404040' },\r\n                { token: 'type', foreground: '0000ff', fontStyle: 'bold' },\r\n                { token: 'identifier', foreground: '8000e0' },\r\n                { token: 'statement', foreground: '001080', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '00a000', fontStyle: 'bold' },\r\n                { token: 'comment', foreground: '808080', fontStyle: 'italic' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#FFFFFF\",\r\n                \"editor.foreground\": \"#000000\",\r\n                \"editor.inactiveSelectionBackground\": \"#E5EBF1\",\r\n                \"editorIndentGuide.background\": \"#D3D3D3\",\r\n                \"editorIndentGuide.activeBackground\": \"#939393\",\r\n                \"editor.selectionHighlightBackground\": \"#ADD6FF80\",\r\n                \"editorSuggestWidget.background\": \"#F3F3F3\",\r\n                \"activityBarBadge.background\": \"#007ACC\",\r\n                \"sideBarTitle.foreground\": \"#6F6F6F\",\r\n                \"list.hoverBackground\": \"#E8E8E8\",\r\n                \"input.placeholderForeground\": \"#767676\",\r\n                \"searchEditor.textInputBorder\": \"#CECECE\",\r\n                \"settings.textInputBorder\": \"#CECECE\",\r\n                \"settings.numberInputBorder\": \"#CECECE\",\r\n                \"statusBarItem.remoteForeground\": \"#FFF\",\r\n                \"statusBarItem.remoteBackground\": \"#16825D\",\r\n                \"jo_highlightStatementGreen\": \"#004000\",\r\n                \"jo_highlightStatementYellow\": \"#404000\",\r\n                \"jo_highlightStatementRed\": \"#400000\"\r\n            }\r\n        });\r\n\r\n\r\n        this.editor = monaco.editor.create($element[0], {\r\n            // value: [\r\n            //     'function x() {',\r\n            //     '\\tconsole.log(\"Hello world!\");',\r\n            //     '}'\r\n            // ].join('\\n'),\r\n            // language: 'myJava',\r\n            language: 'vscSQL',\r\n            lightbulb: {\r\n                enabled: true\r\n            },\r\n            // gotoLocation: {\r\n            //     multipleReferences: \"gotoAndPeek\"\r\n            // },\r\n            lineDecorationsWidth: 0,\r\n            peekWidgetDefaultFocus: \"tree\",\r\n            fixedOverflowWidgets: true,\r\n            quickSuggestions: true,\r\n            quickSuggestionsDelay: 10,\r\n            fontSize: 14,\r\n            fontFamily: \"Consolas, Roboto Mono\",\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            selectOnLineNumbers: false,\r\n            // selectionHighlight: false,\r\n            automaticLayout: true,\r\n            scrollBeyondLastLine: false,\r\n            occurrencesHighlight: false,\r\n            autoIndent: \"full\",\r\n            dragAndDrop: true,\r\n            formatOnType: true,\r\n            formatOnPaste: true,\r\n            suggestFontSize: 16,\r\n            suggestLineHeight: 22,\r\n            suggest: {\r\n                localityBonus: true,\r\n                insertMode: \"replace\"\r\n                // snippetsPreventQuickSuggestions: false\r\n            },\r\n            parameterHints: { enabled: true, cycle: true },\r\n            // //@ts-ignore\r\n            // contribInfo: {\r\n            //     suggestSelection: 'recentlyUsedByPrefix',\r\n            // },\r\n\r\n            mouseWheelZoom: this.isEmbedded,\r\n\r\n            minimap: {\r\n                enabled: this.showMinimap\r\n            },\r\n            scrollbar: {\r\n                vertical: 'auto',\r\n                horizontal: 'auto'\r\n            },\r\n            theme: \"myCustomThemeDark\",\r\n            // automaticLayout: true\r\n\r\n\r\n        }\r\n        );\r\n\r\n        let that = this;\r\n\r\n        let mouseWheelListener = (event: WheelEvent) => {\r\n            if (event.ctrlKey === true) {\r\n\r\n                that.changeEditorFontSize(Math.sign(event.deltaY), true);\r\n\r\n                event.preventDefault();\r\n            }\r\n        };\r\n\r\n\r\n        this.editor.onDidChangeConfiguration((event) => {\r\n            if (event.hasChanged(monaco.editor.EditorOption.fontInfo) && this.isEmbedded) {\r\n\r\n                this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n            }\r\n        });\r\n\r\n        this.editor.onDidChangeCursorPosition((event) => {\r\n\r\n            that.onDidChangeCursorPosition(event.position);\r\n\r\n        });\r\n\r\n        // We need this to set our model after user uses Strg+click on identifier\r\n        this.editor.onDidChangeModel((event) => {\r\n\r\n            let element: HTMLDivElement = <any>$element.find('.monaco-editor')[0];\r\n            element.removeEventListener(\"wheel\", mouseWheelListener);\r\n            element.addEventListener(\"wheel\", mouseWheelListener, { passive: false });\r\n\r\n            if (this.main.getCurrentWorkspace() == null) return;\r\n\r\n            let module = this.main.getCurrentWorkspace().getModuleByMonacoModel(this.editor.getModel());\r\n            if (this.main instanceof Main && module != null) {\r\n\r\n                this.main.projectExplorer.setActiveAfterExternalModelSet(module);\r\n            }\r\n        });\r\n\r\n        monaco.languages.registerHoverProvider('vscSQL', new MyHoverProvider(this));\r\n\r\n        monaco.languages.registerCompletionItemProvider('vscSQL', new MyCompletionItemProvider(this.main));\r\n        monaco.languages.registerCodeActionProvider('vscSQL', new MyCodeActionProvider(this.main));\r\n        monaco.languages.registerReferenceProvider('vscSQL', new MyReferenceProvider(this.main));\r\n\r\n\r\n        monaco.languages.registerSignatureHelpProvider('vscSQL', new MySignatureHelpProvider(this.main));\r\n\r\n        this.editor.onMouseDown((e: monaco.editor.IEditorMouseEvent) => {\r\n            const data = e.target.detail;\r\n            if (e.target.type !== monaco.editor.MouseTargetType.GUTTER_GLYPH_MARGIN &&\r\n                e.target.type !== monaco.editor.MouseTargetType.GUTTER_LINE_NUMBERS || data.isAfterLines) {\r\n                return;\r\n            }\r\n            that.onMarginMouseDown(e.target.position.lineNumber);\r\n            return;\r\n        });\r\n\r\n\r\n        // If editor is instantiated before fonts are loaded then indentation-lines\r\n        // are misplaced, see https://github.com/Microsoft/monaco-editor/issues/392\r\n        // so:\r\n        setTimeout(() => {\r\n            monaco.editor.remeasureFonts();\r\n        }, 2000);\r\n\r\n        this.addActions();\r\n\r\n        //@ts-ignore\r\n        this.editor.onDidType((text) => { that.onDidType(text) });\r\n\r\n        return this.editor;\r\n    }\r\n\r\n\r\n    onDidType(text: string) {\r\n        //        const endOfCommentText = \" * \\n */\";\r\n\r\n        const insertEndOfComment = (pos, insertText: string, newLine: number, newColumn: number) => {\r\n            const range = new monaco.Range(\r\n                pos.lineNumber,\r\n                pos.column,\r\n                pos.lineNumber,\r\n                pos.column\r\n            );\r\n            this.editor.executeEdits(\"new-bullets\", [\r\n                { range, text: insertText }\r\n            ]);\r\n\r\n            // Set position after bulletText\r\n            this.editor.setPosition({\r\n                lineNumber: newLine,\r\n                column: newColumn\r\n            });\r\n        };\r\n\r\n        if (text === \"\\n\") {\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            const prevLine = model.getLineContent(position.lineNumber - 1);\r\n            if (prevLine.trim().indexOf(\"/*\") === 0 && !prevLine.trimRight().endsWith(\"*/\")) {\r\n                const nextLine = position.lineNumber < model.getLineCount() ? model.getLineContent(position.lineNumber + 1) : \"\";\r\n                if (!nextLine.trim().startsWith(\"*\")) {\r\n                    let spacesAtBeginningOfLine: string = prevLine.substr(0, prevLine.length - prevLine.trimLeft().length);\r\n                    if (prevLine.trim().indexOf(\"/**\") === 0) {\r\n                        insertEndOfComment(position, \"\\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    } else {\r\n                        insertEndOfComment(position, \" * \\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    lastTime: number = 0;\r\n    setFontSize(fontSizePx: number) {\r\n\r\n        // console.log(\"Set font size: \" + fontSizePx);\r\n        let time = new Date().getTime();\r\n        if (time - this.lastTime < 150) return;\r\n        this.lastTime = time;\r\n\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (this.main instanceof Main) {\r\n            this.main.viewModeController.saveFontSize(fontSizePx);\r\n        }\r\n\r\n        if (fontSizePx != editorfs) {\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx\r\n            });\r\n\r\n            // editor does not set fontSizePx, but fontSizePx * zoomfactor with unknown zoom factor, so \r\n            // we have to do this dirty workaround:\r\n            let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n            let factor = newEditorfs / fontSizePx;\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx / factor\r\n            });\r\n\r\n        }\r\n\r\n        jQuery('.jo_editorFontSize').css('font-size', fontSizePx + \"px\");\r\n        jQuery('.jo_editorFontSize').css('line-height', (fontSizePx + 2) + \"px\");\r\n\r\n        document.documentElement.style.setProperty('--breakpoint-size', fontSizePx + 'px');\r\n        document.documentElement.style.setProperty('--breakpoint-radius', fontSizePx / 2 + 'px');\r\n\r\n\r\n        this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n    }\r\n\r\n    changeEditorFontSize(delta: number, dynamic: boolean = true) {\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (dynamic) {\r\n            if (editorfs < 10) {\r\n                delta *= 1;\r\n            } else if (editorfs < 20) {\r\n                delta *= 2;\r\n            } else {\r\n                delta *= 4;\r\n            }\r\n        }\r\n\r\n        let newEditorFs = editorfs + delta;\r\n        if (newEditorFs >= 6 && newEditorFs <= 80) {\r\n            this.setFontSize(newEditorFs);\r\n        }\r\n    }\r\n\r\n\r\n    addActions() {\r\n        let that = this;\r\n\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Find bracket',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'Finde korrespondierende Klammer',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.5,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                ed.getAction('editor.action.jumpToBracket').run();\r\n                return null;\r\n            }\r\n        });\r\n\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Execute statement',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'SQL-Anweisung ausführen',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.Enter],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.0,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                that.main.getActionManager().trigger('execute');\r\n                return null;\r\n            }\r\n        });\r\n\r\n        //console.log(this.editor.getSupportedActions());\r\n    }\r\n\r\n    onMarginMouseDown(lineNumber: number) {\r\n\r\n    }\r\n\r\n    elementDecoration: string[] = [];\r\n    onDidChangeCursorPosition(position: { lineNumber: number, column: number }) {\r\n\r\n        if (position == null) position = this.editor.getPosition();\r\n\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, []);\r\n            return;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        if (element != null) {\r\n            let usagePositions = element.usagePositions;\r\n            let upInCurrentModule = usagePositions.get(module);\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    decorations.push({\r\n                        range: { startColumn: up.column, startLineNumber: up.line, endColumn: up.column + up.length, endLineNumber: up.line },\r\n                        options: {\r\n                            className: 'jo_revealSyntaxElement', isWholeLine: false, overviewRuler: {\r\n                                color: { id: \"editorIndentGuide.background\" },\r\n                                darkColor: { id: \"editorIndentGuide.activeBackground\" },\r\n                                position: monaco.editor.OverviewRulerLane.Left\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        let executeActionActive = false;\r\n\r\n        for(let sqlStatement of module.getSQLSTatementsAtSelection(this.editor.getSelection())){\r\n\r\n            let classname = \"jo_highlightStatementGreen\";\r\n            if (sqlStatement != null) {\r\n                if (sqlStatement.hasErrors) {\r\n                    classname = \"jo_highlightStatementRed\";\r\n                    if (sqlStatement.acceptedBySQLite) {\r\n                        classname = \"jo_highlightStatementYellow\";\r\n                        executeActionActive = true;\r\n                    }\r\n                } else {\r\n                    executeActionActive = true;\r\n                }\r\n    \r\n                decorations.push({\r\n                    range: {\r\n                        startColumn: sqlStatement.from.column, startLineNumber: sqlStatement.from.line,\r\n                        endColumn: sqlStatement.to.column, endLineNumber: sqlStatement.to.line\r\n                    },\r\n                    options: {\r\n                        className: classname, isWholeLine: false, overviewRuler: {\r\n                            color: { id: classname },\r\n                            darkColor: { id: classname },\r\n                            position: monaco.editor.OverviewRulerLane.Left\r\n                        },\r\n                        minimap: {\r\n                            color: { id: classname },\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        },\r\n                        zIndex: -100\r\n                    }\r\n                })\r\n    \r\n            }\r\n        }\r\n\r\n\r\n        this.main.getActionManager().setActive('execute', executeActionActive);\r\n\r\n        if(executeActionActive && !this.main.isEmbedded()){\r\n            Helper.showHelper(\"playButtonHelper\", <any>this.main, jQuery('div.img_start-dark'));\r\n        }\r\n\r\n\r\n        this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, decorations);\r\n\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.main.getCurrentlyEditedModule();\r\n    }\r\n\r\n\r\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport function defineVscSQL() {\r\n    monaco.languages.register({\r\n        id: 'vscSQL',\r\n        extensions: ['.sql'],\r\n        //  mimetypes: [\"text/x-java-source\", \"text/x-java\"]  \r\n    });\r\n\r\n    let conf: monaco.languages.LanguageConfiguration = {\r\n        onEnterRules: [\r\n            {\r\n                // e.g. /** | */\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                afterText: /^\\s*\\*\\/$/,\r\n                action: { indentAction: monaco.languages.IndentAction.IndentOutdent, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g. /** ...|\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g.  * ...|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: '* ' }\r\n            },\r\n            {\r\n                // e.g.  */|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            },\r\n            {\r\n                // e.g.  *-----*/|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*[^/]*\\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            }\r\n        ],\r\n        comments: {\r\n            lineComment: '--',\r\n            blockComment: ['/*', '*/'],\r\n        },\r\n        brackets: [\r\n            ['{', '}'],\r\n            ['[', ']'],\r\n            ['(', ')']\r\n        ],\r\n        autoClosingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ],\r\n        surroundingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ]\r\n    };\r\n    let language = {\r\n\r\n        defaultToken: '',\r\n        tokenPostfix: '.sql',\r\n        ignoreCase: true,\r\n        brackets: [\r\n            { open: '[', close: ']', token: 'delimiter.square' },\r\n            { open: '(', close: ')', token: 'delimiter.parenthesis' }\r\n        ],\r\n        escapes: /\\\\(?:[abfnrtv\\\\\"'])/,\r\n        keywords: [\r\n            \"ABORT\", \"ACTION\", \"ADD\", \"AFTER\", \"ALL\", \"ALTER\", \"ANALYZE\", \"AND\", \"AS\", \"ASC\", \"ATTACH\", \"AUTOINCREMENT\", \"BEFORE\",\r\n            \"BEGIN\", \"BETWEEN\", \"BY\", \"CASCADE\", \"CASE\", \"CAST\", \"CHECK\", \"COLLATE\", \"COLUMN\", \"COMMIT\", \"CONFLICT\", \"CONSTRAINT\",\r\n            \"CREATE\", \"CROSS\", \"CURRENT_DATE\", \"CURRENT_TIME\", \"CURRENT_TIMESTAMP\", \"DATABASE\", \"DEFAULT\", \"DEFERRABLE\", \"DEFERRED\",\r\n            \"DELETE\", \"DESC\", \"DETACH\", \"DISTINCT\", \"DROP\", \"EACH\", \"ELSE\", \"END\", \"ESCAPE\", \"EXCEPT\", \"EXCLUSIVE\", \"EXISTS\", \"EXPLAIN\",\r\n            \"FAIL\", \"FOR\", \"FOREIGN\", \"FROM\", \"FULL\", \"GLOB\", \"GROUP\", \"HAVING\", \"IF\", \"IGNORE\", \"IMMEDIATE\", \"IN\", \"INDEX\", \"INDEXED\",\r\n            \"INITIALLY\", \"INNER\", \"INSERT\", \"INSTEAD\", \"INTERSECT\", \"INTO\", \"IS\", \"ISNULL\", \"JOIN\", \"KEY\", \"LEFT\", \"LIKE\", \"LIMIT\", \"MATCH\",\r\n            \"NATURAL\", \"NO\", \"NOT\", \"NOTNULL\", \"NULL\", \"OF\", \"OFFSET\", \"ON\", \"OR\", \"ORDER\", \"OUTER\", \"PLAN\", \"PRAGMA\", \"PRIMARY\", \"QUERY\",\r\n            \"RAISE\", \"RECURSIVE\", \"REFERENCES\", \"REGEXP\", \"REINDEX\", \"RELEASE\", \"RENAME\", \"REPLACE\", \"RESTRICT\", \"RIGHT\", \"ROLLBACK\", \"ROW\",\r\n            \"SAVEPOINT\", \"SELECT\", \"SET\", \"TABLE\", \"TEMP\", \"TEMPORARY\", \"THEN\", \"TO\", \"TRANSACTION\", \"TRIGGER\", \"UNION\", \"UNIQUE\", \"UPDATE\",\r\n            \"USING\", \"VACUUM\", \"VALUES\", \"VIEW\", \"VIRTUAL\", \"WHEN\", \"WHERE\", \"WITH\", \"WITHOUT\", \"ENGINE\", \"CHARSET\"\r\n        ],\r\n        operators: [\r\n            \"AND\", \"BETWEEN\", \"IN\", \"LIKE\", \"NOT\", \"OR\", \"IS\", \"NULL\", \"INTERSECT\", \"UNION\", \"INNER\", \"JOIN\", \"LEFT\", \"OUTER\", \"RIGHT\"\r\n        ],\r\n        builtinFunctions: [\r\n            \"abs\", \"changes\", \"char\", \"coalesce\", \"count\", \"glob\", \"hex\", \"ifnull\",\r\n            \"iif\", \"instr\", \"last_insert_rowid\", \"length\", \"like\", \"likelihood\", \"likely\",\r\n            \"lower\", \"ltrim\", \"max\", \"min\", \"nullif\", \"quote\", \"random\", \"randomblob\",\r\n            \"replace\", \"round\", \"rtrim\", \"sign\", \"soundex\", \"sqlite_version\", \"substr\", \"substring\",\r\n            \"total_changes\", \"trim\", \"typeof\", \"unicode\", \"unlikely\", \"upper\", \"zeroblob\"\r\n        ],\r\n        builtinVariables: [\r\n            // NOT SUPPORTED\r\n        ],\r\n        pseudoColumns: [\r\n            // NOT SUPPORTED\r\n        ],\r\n        tokenizer: {\r\n            root: [\r\n                { include: '@comments' },\r\n                { include: '@whitespace' },\r\n                { include: '@pseudoColumns' },\r\n                { include: '@numbers' },\r\n                { include: '@strings' },\r\n                { include: '@complexIdentifiers' },\r\n                { include: '@scopes' },\r\n                [/[;,.]/, 'delimiter'],\r\n                [/[()]/, '@brackets'],\r\n                [/[a-z_$äöü][\\w$äöüßÄÖÜ]*(?=\\()/, {\r\n                    cases: {\r\n                        '@builtinFunctions': 'functions',\r\n                        '@keywords': 'keyword',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[\\w@#$]+/, {\r\n                    cases: {\r\n                        '@keywords': 'keyword',\r\n                        '@operators': 'operator',\r\n                        '@builtinVariables': 'predefined',\r\n                        // '@builtinFunctions': 'functions',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[<>=!%&+\\-*/|~^]/, 'operator'],\r\n            ],\r\n            whitespace: [\r\n                [/\\s+/, 'white']\r\n            ],\r\n            comments: [\r\n                [/--+.*/, 'comment'],\r\n                [/\\/\\*/, { token: 'comment.quote', next: '@comment' }]\r\n            ],\r\n            comment: [\r\n                [/[^*/]+/, 'comment'],\r\n                // Not supporting nested comments, as nested comments seem to not be standard?\r\n                // i.e. http://stackoverflow.com/questions/728172/are-there-multiline-comment-delimiters-in-sql-that-are-vendor-agnostic\r\n                // [/\\/\\*/, { token: 'comment.quote', next: '@push' }],    // nested comment not allowed :-(\r\n                [/\\*\\//, { token: 'comment.quote', next: '@pop' }],\r\n                [/./, 'comment']\r\n            ],\r\n            pseudoColumns: [\r\n                [/[$][A-Za-z_][\\w@#$]*/, {\r\n                    cases: {\r\n                        '@pseudoColumns': 'predefined',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n            ],\r\n            numbers: [\r\n                [/0[xX][0-9a-fA-F]*/, 'number'],\r\n                [/[$][+-]*\\d*(\\.\\d*)?/, 'number'],\r\n                [/((\\d+(\\.\\d*)?)|(\\.\\d+))([eE][\\-+]?\\d+)?/, 'number']\r\n            ],\r\n            strings: [\r\n                [/'/, { token: 'string', next: '@string' }],\r\n            ],\r\n            string: [\r\n                [/[^\\\\']+/, 'string'],\r\n                [/\\\\./, 'string.escape.invalid'],\r\n                [/''/, 'string'],\r\n                [/'/, { token: 'string', next: '@pop' }]\r\n            ],\r\n            complexIdentifiers: [\r\n                [/\"/, { token: 'identifier.quote', next: '@quotedIdentifier' }]\r\n            ],\r\n            quotedIdentifier: [\r\n                [/[^\"]+/, 'identifier'],\r\n                [/\"\"/, 'identifier'],\r\n                [/\"/, { token: 'identifier.quote', next: '@pop' }]\r\n            ],\r\n            scopes: [\r\n                // NOT SUPPORTED\r\n            ]\r\n        }\r\n\r\n\r\n\r\n    };\r\n\r\n    //@ts-ignore\r\n    monaco.languages.setLanguageConfiguration('vscSQL', conf);\r\n    //@ts-ignore\r\n    monaco.languages.setMonarchTokensProvider('vscSQL', language);\r\n\r\n\r\n\r\n}","import { Lexer } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Token, TokenList, TokenType, tokenListToString } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class Formatter implements monaco.languages.DocumentFormattingEditProvider,\r\n    monaco.languages.OnTypeFormattingEditProvider {\r\n\r\n    autoFormatTriggerCharacters: string[] = ['\\n'];\r\n\r\n    displayName?: string = \"Java-Autoformat\";\r\n\r\n\r\n    constructor(\r\n        // private main: Main\r\n    ) {\r\n\r\n    }\r\n\r\n    init() {\r\n        monaco.languages.registerDocumentFormattingEditProvider('myJava', this);\r\n        monaco.languages.registerOnTypeFormattingEditProvider('myJava', this);\r\n    }\r\n\r\n    provideOnTypeFormattingEdits(model: monaco.editor.ITextModel, position: monaco.Position, ch: string, options: monaco.languages.FormattingOptions, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n    deleteOverlappingRanges(edits: monaco.languages.TextEdit[]) {\r\n        for (let i = 0; i < edits.length - 1; i++) {\r\n            let e = edits[i];\r\n            let e1 = edits[i + 1];\r\n            if (e.range.endLineNumber < e1.range.startLineNumber) continue;\r\n            if (e.range.endLineNumber == e1.range.startLineNumber) {\r\n                if (e.range.endColumn >= e1.range.startColumn) {\r\n                    edits.splice(i + 1, 1);\r\n                } else {\r\n                    if (e.range.endColumn == 0 && e.text.length > 0 && e1.range.startColumn == 1 && e1.range.endColumn > e1.range.startColumn && e1.text == \"\") {\r\n                        let delta = e.text.length - (e1.range.endColumn - e1.range.startColumn);\r\n                        if (delta > 0) { \r\n                            e.text = e.text.substr(0, delta);\r\n                            edits.splice(i+1, 1);\r\n                        }\r\n                        else if (delta < 0)\r\n                        { \r\n                            //@ts-ignore\r\n                            e1.range.endColumn = e1.range.startColumn - delta;\r\n                            edits.splice(i, 1);\r\n                            i--;\r\n\r\n                         }\r\n                        else {\r\n                            edits.splice(i, 2);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    provideDocumentFormattingEdits(model: monaco.editor.ITextModel,\r\n        options: monaco.languages.FormattingOptions,\r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n\r\n    format(model: monaco.editor.ITextModel): monaco.languages.TextEdit[] {\r\n\r\n        let edits: monaco.languages.TextEdit[] = [];\r\n\r\n        // if (this.main.currentWorkspace == null || this.main.currentWorkspace.currentlyOpenModule == null) {\r\n        //     return [];\r\n        // }\r\n\r\n        // let text = this.main.monaco_editor.getValue({ preserveBOM: false, lineEnding: \"\\n\" });\r\n\r\n        let text = model.getValue(monaco.editor.EndOfLinePreference.LF);\r\n\r\n        let tokenlist = new Lexer().lex(text).tokens;\r\n\r\n        // let tokenlist = this.main.currentWorkspace.currentlyOpenModule.tokenList;\r\n\r\n        if (tokenlist == null) return [];\r\n\r\n        // TODO:\r\n        // { at the end of line, with one space before; followed only by spaces and \\n\r\n        // indent lines according to { and }\r\n        // Beware: int i[] = { ... }\r\n        // exactly one space before/after binary operators\r\n        // no space after ( and no space before )\r\n        // (   ) -> ()\r\n        // (  ()) -> (())\r\n        // (()  ) -> (())\r\n\r\n        let lastNonSpaceToken: Token = null;\r\n        let indentLevel = 0;\r\n        let tabSize = 3;\r\n        let curlyBracesOpenAtLines: number[] = [];\r\n        let indentLevelAtSwitchStatements: number[] = [];\r\n        let switchHappend: boolean = false;\r\n        let lastTokenWasNewLine: number = 0;\r\n        let roundBracketsOpen: number = 0;\r\n\r\n        for (let i = 0; i < tokenlist.length; i++) {\r\n\r\n            let t = tokenlist[i];\r\n            lastTokenWasNewLine--;\r\n\r\n            switch (t.tt) {\r\n\r\n                case TokenType.leftCurlyBracket:\r\n                    if (switchHappend) {\r\n                        switchHappend = false;\r\n                        indentLevelAtSwitchStatements.push(indentLevel + 2);\r\n                        indentLevel++;\r\n                    }\r\n                    indentLevel++;\r\n                    curlyBracesOpenAtLines.push(t.position.line);\r\n                    if (lastNonSpaceToken != null) {\r\n                        let tt = lastNonSpaceToken.tt;\r\n                        if (tt == TokenType.rightBracket || tt == TokenType.identifier || tt == TokenType.leftRightSquareBracket) {\r\n                            this.replaceBetween(lastNonSpaceToken, t, edits, \" \");\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let token1 = tokenlist[i + 1];\r\n                        if (token1.tt != TokenType.newline && token1.tt != TokenType.space) {\r\n                            this.insertSpaces(edits, token1.position.line, token1.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    if (indentLevelAtSwitchStatements[indentLevelAtSwitchStatements.length - 1] == indentLevel) {\r\n                        indentLevelAtSwitchStatements.pop();\r\n                        indentLevel--;\r\n                        // if(t.position.column >= 3){\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                        // }    \r\n                    }\r\n                    indentLevel--;\r\n                    let openedAtLine = curlyBracesOpenAtLines.pop();\r\n                    if (openedAtLine != null && openedAtLine != t.position.line) {\r\n                        if (lastNonSpaceToken != null && lastNonSpaceToken.position.line == t.position.line) {\r\n                            this.replace(edits, t.position, t.position, \"\\n\" + \" \".repeat(indentLevel * tabSize));\r\n                        }\r\n                    } else {\r\n                        if (i > 0) {\r\n                            let token1 = tokenlist[i - 1];\r\n                            if (token1.tt != TokenType.space && token1.tt != TokenType.newline) {\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    roundBracketsOpen++;\r\n                    if (i < tokenlist.length - 2) {\r\n                        let nextToken1 = tokenlist[i + 1];\r\n                        let nextToken2 = tokenlist[i + 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                            i++;\r\n                            if (nextToken2.tt == TokenType.rightBracket) {\r\n                                i++;\r\n                                roundBracketsOpen--;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt == TokenType.space && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line, lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    roundBracketsOpen--;\r\n                    if (i > 1) {\r\n                        let nextToken1 = tokenlist[i - 1];\r\n                        let nextToken2 = tokenlist[i - 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.newline:\r\n                    lastTokenWasNewLine = 2;\r\n                    if (i < tokenlist.length - 2) {\r\n\r\n                        let lastTokenIsOperator = this.isBinaryOperator(lastNonSpaceToken?.tt);\r\n                        let nextTokenIsOperator = this.isBinaryOperator(this.getNextNonSpaceToken(i, tokenlist).tt);\r\n\r\n                        let beginNextLine = tokenlist[i + 1];\r\n                        let token2 = tokenlist[i + 2];\r\n                        let currentIndentation = 0;\r\n\r\n                        if (beginNextLine.tt == TokenType.newline) {\r\n                            break;\r\n                        }\r\n\r\n                        let delta: number = 0;\r\n                        if (beginNextLine.tt == TokenType.space) {\r\n                            if (token2.tt == TokenType.newline) {\r\n                                break;\r\n                            }\r\n                            currentIndentation = beginNextLine.position.length;\r\n                            i++;\r\n                            if (token2.tt == TokenType.rightCurlyBracket) {\r\n                                delta = -1;\r\n                            }\r\n                        }\r\n\r\n                        if (beginNextLine.tt == TokenType.rightCurlyBracket) {\r\n                            delta = -1;\r\n                            // indentLevel--;\r\n                            // curlyBracesOpenAtLines.pop();\r\n                            // lastNonSpaceToken = beginNextLine;\r\n                            // i++;\r\n                        }\r\n\r\n                        if(nextTokenIsOperator || lastTokenIsOperator) delta = 1;\r\n\r\n                        let il = indentLevel + delta;\r\n                        if(roundBracketsOpen > 0){\r\n                            il++;\r\n                        }\r\n                        if (il < 0) il = 0;\r\n\r\n                        let correctIndentation = il * tabSize;\r\n\r\n                        if (correctIndentation > currentIndentation) {\r\n                            this.insertSpaces(edits, t.position.line + 1, 0, correctIndentation - currentIndentation);\r\n                        } else if (correctIndentation < currentIndentation) {\r\n                            this.deleteSpaces(edits, t.position.line + 1, 0, currentIndentation - correctIndentation);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.space:\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment) {\r\n                            if (i > 0) {\r\n                                let lastToken = tokenlist[i - 1];\r\n                                if (lastToken.tt != TokenType.newline) {\r\n                                    if (t.position.length > 1) {\r\n                                        this.deleteSpaces(edits, t.position.line, t.position.column, t.position.length - 1);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.comma:\r\n                case TokenType.semicolon:\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt != TokenType.newline && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.tt == TokenType.space && lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line,\r\n                                    lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment && nextToken.tt != TokenType.space && nextToken.tt != TokenType.newline) {\r\n                            this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightSquareBracket:\r\n                    if (lastNonSpaceToken != null && lastNonSpaceToken.tt == TokenType.leftSquareBracket) {\r\n                        this.replaceBetween(lastNonSpaceToken, t, edits, \"\");\r\n\r\n                    }\r\n                    break;\r\n\r\n            }\r\n\r\n            // binary operator?\r\n            if (this.isBinaryOperator(t.tt)) {\r\n\r\n                let lowerGeneric = t.tt == TokenType.lower && this.lowerBelongsToGenericExpression(i, tokenlist);\r\n                let greaterGeneric = t.tt == TokenType.greater && this.greaterBelongsToGenericExpression(i, tokenlist);\r\n\r\n                if (lastTokenWasNewLine <= 0 && lastNonSpaceToken != null && [TokenType.leftBracket, TokenType.comma].indexOf(lastNonSpaceToken.tt) < 0) {\r\n\r\n                    if (i > 0) {\r\n                        let tokenBefore = tokenlist[i - 1];\r\n                        let spaces = (lowerGeneric || greaterGeneric) ? 0 : 1;\r\n                        if (tokenBefore.tt == TokenType.space) {\r\n                            if (tokenBefore.position.length != spaces) {\r\n                                this.insertSpaces(edits, tokenBefore.position.line,\r\n                                    tokenBefore.position.column, spaces - tokenBefore.position.length);\r\n                            }\r\n                        } else {\r\n                            if (spaces == 1)\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        let spaces = (lowerGeneric) ? 0 : 1;\r\n                        if (nextToken.tt == TokenType.space) {\r\n                            if (greaterGeneric && i < tokenlist.length - 2 && tokenlist[i + 2].tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (nextToken.position.length != spaces) {\r\n                                this.insertSpaces(edits, nextToken.position.line,\r\n                                    nextToken.position.column, spaces - nextToken.position.length);\r\n                            }\r\n                        } else {\r\n                            if (greaterGeneric && nextToken.tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (spaces == 1) this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            if (t.tt != TokenType.space && t.tt != TokenType.newline) {\r\n                lastNonSpaceToken = t;\r\n            }\r\n\r\n        }\r\n\r\n        this.deleteOverlappingRanges(edits);\r\n\r\n        return edits;\r\n\r\n    }\r\n    getNextNonSpaceToken(currentIndex: number, tokenlist: TokenList):  Token {\r\n\r\n        if(currentIndex == tokenlist.length - 1) return tokenlist[currentIndex];\r\n\r\n        let j = currentIndex + 1;\r\n        while(j < tokenlist.length - 1 && (tokenlist[j].tt == TokenType.space )){\r\n            j++;\r\n        }\r\n        return tokenlist[j];\r\n\r\n    }\r\n\r\n    lowerBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position + 1;\r\n        while (i < tokenlist.length) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.greater) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i++;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    greaterBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position - 1;\r\n        while (i >= 0) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.lower) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i--;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isBinaryOperator(token: TokenType) {\r\n        return token != null && token >= TokenType.modulo && token <= TokenType.equal;\r\n    }\r\n\r\n    private replaceBetween(lastNonSpaceToken: Token, t: Token, edits: monaco.languages.TextEdit[], text: string) {\r\n        let positionFrom = {\r\n            line: lastNonSpaceToken.position.line,\r\n            column: lastNonSpaceToken.position.column + lastNonSpaceToken.position.length\r\n        };\r\n        let positionTo = {\r\n            line: t.position.line,\r\n            column: t.position.column\r\n        };\r\n        if (positionFrom.line != positionTo.line ||\r\n            positionTo.column - positionFrom.column != text.length) {\r\n            this.replace(edits, positionFrom, positionTo, text);\r\n        }\r\n    }\r\n\r\n    deleteSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column + numberOfSpaces + (column == 0 ? 1 : 0),\r\n                endLineNumber: line\r\n            },\r\n            text: \"\"\r\n        });\r\n    }\r\n\r\n    insertSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n\r\n        if (numberOfSpaces < 0) {\r\n            this.deleteSpaces(edits, line, column, -numberOfSpaces);\r\n            return;\r\n        }\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column,\r\n                endLineNumber: line\r\n            },\r\n            text: \" \".repeat(numberOfSpaces)\r\n        });\r\n    }\r\n\r\n    replace(edits: monaco.languages.TextEdit[], positionFrom: { line: number; column: number; }, positionTo: { line: number; column: number; }, text: string) {\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: positionFrom.column,\r\n                startLineNumber: positionFrom.line,\r\n                endColumn: positionTo.column,\r\n                endLineNumber: positionTo.line\r\n            },\r\n            text: text\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport type DatabaseDumpType = \"binaryUncompressed\" | \"binaryCompressed\" | \"other\";\r\n\r\nexport type DatabaseDirectoryEntry = {\r\n    name: string,\r\n    description: string,\r\n    filename: string\r\n}\r\n\r\nexport type QueryResult = {\r\n    columns: string[],\r\n    values: any[][],\r\n    buffer?: Uint8Array\r\n}\r\n\r\nexport type QuerySuccessCallback = (results: QueryResult[]) => void;\r\nexport type QueryErrorCallback = (error: string) => void;\r\n\r\nexport type ColumnStructure = {\r\n    name: string;\r\n    table: TableStructure;\r\n\r\n    typeLengths?: number[]; // for varchar(5), ...\r\n    completeTypeSQL: string;\r\n\r\n    references?: ColumnStructure;\r\n    referencesRawData?: any[];\r\n    isPrimaryKey: boolean;\r\n    isAutoIncrement: boolean;\r\n\r\n    notNull: boolean;\r\n    defaultValue: string;\r\n\r\n    dumpValueFunction?: (any) => string\r\n}\r\n\r\nexport type TableStructure = {\r\n    name: string;\r\n    size: number;\r\n    columns: ColumnStructure[];\r\n    completeSQL: string;\r\n}\r\n\r\nexport type DatabaseStructure = {\r\n    tables: TableStructure[]\r\n}\r\n\r\n\r\nexport class DatabaseTool {\r\n\r\n    databaseDirectoryEntries: DatabaseDirectoryEntry[] = null;\r\n\r\n    worker: Worker;\r\n\r\n    queryId: number = 0;\r\n\r\n    querySuccessCallbacksMap: Map<number, QuerySuccessCallback> = new Map();\r\n    queryErrorCallbackMap: Map<number, QueryErrorCallback> = new Map();\r\n\r\n    databaseStructure: DatabaseStructure;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    initializeWorker(template: Uint8Array, queries: string[], callbackAfterInitializing?: (errors: string[]) => void,\r\n        callbackAfterRetrievingStructure?: () => void) {\r\n        \r\n        this.main.getWaitOverlay().show('Bitte warten, die Datenbank wird initialisiert...');\r\n        \r\n            if (this.worker != null) {\r\n            this.worker.terminate();\r\n        }\r\n\r\n        let t = performance.now();\r\n\r\n        // console.log(\"Starting worker...\");\r\n\r\n        let url: string = \"js/sqljs-worker/sqljsWorker.js\"\r\n        if(this.main.isEmbedded()){\r\n            //@ts-ignore\r\n            url = window.javaOnlineDir + url;\r\n        }\r\n\r\n        this.worker = new Worker(url);\r\n        // this.worker = new Worker(\"lib/sql.js/worker.sql-wasm.js\");\r\n        let that = this;\r\n\r\n        let errors: string[] = [];\r\n\r\n        this.worker.onmessage = () => {\r\n            // console.log(\"Database opened (\" + (performance.now() - t)/1000 + \" s)\");\r\n            that.worker.onmessage = event => {\r\n\r\n                // console.log(event.data);\r\n\r\n                let id = event.data.id;\r\n                if (event.data.error == null) {\r\n                    let querySuccessCallback = that.querySuccessCallbacksMap.get(id);\r\n                    if (querySuccessCallback != null) {\r\n                        querySuccessCallback(event.data.results);\r\n                    }\r\n                } else {\r\n                    let queryErrorCallback = that.queryErrorCallbackMap.get(id);\r\n                    if (queryErrorCallback != null) {\r\n                        queryErrorCallback(event.data.error);\r\n                    }\r\n                }\r\n\r\n                // if(event.data.buffer){\r\n                //     console.log(event.data.buffer);\r\n                // }\r\n\r\n\r\n                this.queryErrorCallbackMap.delete(id);\r\n                this.querySuccessCallbacksMap.delete(id);\r\n\r\n            };\r\n\r\n            if(queries == null) queries = [];\r\n            queries = queries.slice();\r\n            let queryCount = queries.length;\r\n\r\n            let execQuery = () => {\r\n                if (queries.length > 0) {\r\n                    this.main.getWaitOverlay().setProgress(`${Math.round((1-queries.length/queryCount)*100) + \" %\"}`)\r\n                    let query = queries.shift();\r\n                    that.executeQuery(query, (result) => {\r\n                        execQuery();\r\n                    }, (error) => {\r\n                        errors.push(\"Error while setting up database: \" + error + \", query: \" + query);\r\n                        console.log({\"error\": \"Error while setting up database: \" + error, \"query\": query});\r\n                        console.log()\r\n                        execQuery();\r\n                    })\r\n                } else {\r\n                    if (callbackAfterInitializing != null) callbackAfterInitializing(errors);\r\n                    that.retrieveDatabaseStructure(() => {\r\n                        // console.log(\"Database structure retrieved (\" + (performance.now() - t)/1000 + \" s)\");\r\n                        if (callbackAfterRetrievingStructure) callbackAfterRetrievingStructure();\r\n                        this.main.getWaitOverlay().hide();\r\n\r\n                    });\r\n                }\r\n            }\r\n\r\n            execQuery();\r\n\r\n            // that.executeQuery(sql, (result) => {\r\n            //     // console.log(\"Template written (\" + (performance.now() - t)/1000 + \" s)\");\r\n\r\n            //     if (callbackAfterInitializing != null) callbackAfterInitializing();\r\n            //     that.retrieveDatabaseStructure(() => {\r\n            //         // console.log(\"Database structure retrieved (\" + (performance.now() - t)/1000 + \" s)\");\r\n            //         if (callbackAfterRetrievingStructure) callbackAfterRetrievingStructure();\r\n            //         jQuery('#bitteWarten').css('display', 'none');\r\n\r\n            //     });\r\n            //     // that.executeQuery(\"select * from test\", (results: QueryResult[]) => {console.log(results)}, (error) => {console.log(\"Error:\" + error)});\r\n            // },\r\n            //     (error) => {\r\n            //         console.log(\"Error while setting up database: \" + error);\r\n            //     });\r\n\r\n            // that.worker.postMessage({\r\n            //     action: \"export\"\r\n            // })\r\n\r\n        };\r\n\r\n        this.worker.onerror = (e) => {\r\n            errors.push(\"Worker error: \" + e);\r\n            console.log(\"Worker error: \" + e);\r\n        }\r\n\r\n        this.worker.postMessage({\r\n            id: that.queryId++,\r\n            action: \"open\",\r\n            buffer: template, /*Optional. An ArrayBuffer representing an SQLite Database file*/\r\n        });\r\n\r\n    }\r\n\r\n    executeQuery(query: string, successCallback: QuerySuccessCallback, errorCallback: QueryErrorCallback) {\r\n\r\n        let id = this.queryId++;\r\n\r\n        this.querySuccessCallbacksMap.set(id, successCallback);\r\n        this.queryErrorCallbackMap.set(id, errorCallback);\r\n\r\n        this.worker.postMessage({\r\n            id: id,\r\n            action: \"exec\",\r\n            sql: query,\r\n            params: {}\r\n        });\r\n\r\n    }\r\n\r\n    export(successCallback: (buffer: Uint8Array) => void, errorCallback: QueryErrorCallback) {\r\n\r\n        let id = this.queryId++;\r\n\r\n        this.querySuccessCallbacksMap.set(id, (results) => { successCallback(results[0].buffer)  });\r\n        this.queryErrorCallbackMap.set(id, errorCallback);\r\n\r\n        this.worker.postMessage({\r\n            id: id,\r\n            action: \"export\",\r\n            params: {}\r\n        });\r\n\r\n    }\r\n\r\n    \r\n\r\n    getDirectoryEntries(callback: (entries: DatabaseDirectoryEntry[]) => void) {\r\n        if (this.databaseDirectoryEntries != null) {\r\n            callback(this.databaseDirectoryEntries);\r\n        } else {\r\n            jQuery.getJSON(\"assets/databases/directory.json\", function (entries: DatabaseDirectoryEntry[]) {\r\n                callback(entries);\r\n            });\r\n        }\r\n    }\r\n\r\n    retrieveDatabaseStructure(callback: (dbStructure: DatabaseStructure) => void) {\r\n\r\n        /*\r\n            @see https://stackoverflow.com/questions/6460671/sqlite-schema-information-metadata\r\n        */\r\n        let sql = `SELECT name, sql FROM sqlite_master WHERE type='table';`\r\n        let that = this;\r\n\r\n        this.executeQuery(sql, (result) => {\r\n            let sql1 = \"\";\r\n            result[0]?.values?.forEach(value => sql1 += `PRAGMA table_info(${value[0]});\\nPRAGMA foreign_key_list(${value[0]});\\nselect count(*) from ${value[0]};\\n\\n`)\r\n\r\n            if (sql1 != \"\") {\r\n                this.executeQuery(sql1, (result1) => {\r\n                    // console.log(\"DB structure: \");\r\n                    // console.log(result1);\r\n\r\n                    that.databaseStructure = that.parseDatabaseStructure(result, result1)\r\n\r\n                    callback(that.databaseStructure);\r\n\r\n                }, (error) => { console.log(error)});\r\n            } else {\r\n                that.databaseStructure = { tables: [] };\r\n                callback(that.databaseStructure);\r\n            }\r\n\r\n        }, (error) => { console.log(error) });\r\n\r\n\r\n    }\r\n\r\n    parseDatabaseStructure(tables: QueryResult[], columns: QueryResult[]): DatabaseStructure {\r\n        this.databaseStructure = {\r\n            tables: []\r\n        };\r\n\r\n        let tableNameToStructureMap: Map<string, TableStructure> = new Map();\r\n\r\n        let index = 0;\r\n        for (let i = 0; i < tables[0].values.length; i++) {\r\n            let tableName = tables[0].values[i][0];\r\n            let tableSQL = tables[0].values[i][1];\r\n\r\n            let tableStructure: TableStructure = {\r\n                name: tableName,\r\n                size: 0,\r\n                completeSQL: tableSQL,\r\n                columns: []\r\n            }\r\n\r\n            tableNameToStructureMap.set(tableName, tableStructure);\r\n\r\n            this.databaseStructure.tables.push(tableStructure);\r\n\r\n            let columnArray = columns[index].values;\r\n            let foreignKeyList: any[][] = null;\r\n            if (columns.length > index + 1 && columns[index + 1].columns[0] == \"id\") {\r\n                foreignKeyList = columns[index + 1].values;\r\n                index++;\r\n            }\r\n            index++;\r\n            let size: number = columns[index].values[0][0];\r\n            index++;\r\n\r\n            tableStructure.size = size;\r\n\r\n            columnArray.forEach(columnArray1 => {\r\n                let cid: number = columnArray1[0];\r\n                let name: string = columnArray1[1];\r\n                let type: string = columnArray1[2];\r\n                let notNull: boolean = columnArray1[3] == 1;\r\n                let dflt_value: string = columnArray1[4];\r\n                let isPrimaryKey: boolean = columnArray1[5] != 0;\r\n\r\n                let columnStructure: ColumnStructure = {\r\n                    name: name,\r\n                    isPrimaryKey: isPrimaryKey,\r\n                    isAutoIncrement: isPrimaryKey && tableSQL.toLowerCase().indexOf(\"autoincrement\") >= 0,\r\n                    completeTypeSQL: type,\r\n                    table: tableStructure,\r\n                    typeLengths: [],\r\n                    defaultValue: dflt_value,\r\n                    notNull: notNull\r\n                }\r\n                /*\r\n                    columns: (8) [\"id\", \"seq\", \"table\", \"from\", \"to\", \"on_update\", \"on_delete\", \"match\"]\r\n                    values: Array(1)\r\n                    0: (8) [0, 0, \"land\", \"LNR\", \"lnr\", \"NO ACTION\", \"NO ACTION\", \"NONE\"]\r\n                */\r\n\r\n                if (foreignKeyList != null) {\r\n                    let fkInfo: any[] = foreignKeyList.find(foreignKeyInfo => foreignKeyInfo[4].toLocaleLowerCase() == name.toLocaleLowerCase());\r\n                    if (fkInfo != null) {\r\n                        columnStructure.referencesRawData = fkInfo;\r\n                    }\r\n                }\r\n\r\n                tableStructure.columns.push(columnStructure);\r\n\r\n            });\r\n\r\n        }\r\n\r\n        for (let ts of this.databaseStructure.tables) {\r\n            for (let cs of ts.columns) {\r\n                if (cs.referencesRawData != null) {\r\n                    let table = tableNameToStructureMap.get(cs.referencesRawData[2]);\r\n                    let column = table.columns.find(c => c.name.toLocaleLowerCase() == cs.referencesRawData[3].toLocaleLowerCase());\r\n                    cs.references = column;\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log(this.databaseStructure);\r\n\r\n        return this.databaseStructure;\r\n\r\n    }\r\n\r\n    static getDumpType(dump: Uint8Array): DatabaseDumpType {\r\n\r\n        let sqliteMagicBytes: number[] = [0x53, 0x51, 0x4c, 0x69, 0x74, 0x65];\r\n        let zlibMagicByte: number = 0x78;\r\n\r\n        let found: boolean = true;\r\n        for (let i = 0; i < sqliteMagicBytes.length; i++) {\r\n            if (sqliteMagicBytes[i] != dump[i]) {\r\n                found = false;\r\n                break;\r\n            }\r\n        }\r\n        if (found) return \"binaryUncompressed\";\r\n\r\n        if (dump[0] == zlibMagicByte) return \"binaryCompressed\";\r\n\r\n        return \"other\";\r\n\r\n    }\r\n\r\n\r\n}","import { LoadableDatabase } from \"./DatabaseLoader.js\";\r\nimport { DatabaseTool } from \"./DatabaseTools.js\";\r\nimport { downloadFile } from \"./HtmlTools.js\";\r\n\r\nexport class DatabaseImportExport {\r\n\r\n    loadFromFile(file: globalThis.File, callback: (db: LoadableDatabase) => void){\r\n        let that = this;\r\n        if (file == null) return;\r\n        var reader = new FileReader();\r\n        reader.onload = (event) => {\r\n            let ab: ArrayBuffer = <ArrayBuffer>event.target.result;\r\n            let db: Uint8Array = new Uint8Array(ab);\r\n\r\n            //@ts-ignore\r\n            if(DatabaseTool.getDumpType(db) == \"binaryCompressed\") db = pako.inflate(db);\r\n            \r\n            callback({binDump: db});\r\n\r\n        };\r\n        reader.readAsArrayBuffer(file);\r\n    }\r\n\r\n    saveToFile(dbTool: DatabaseTool){\r\n        dbTool.export((db) => {\r\n            let filename: string = prompt(\"Bitte geben Sie den Dateinamen ein\", \"datenbank.dbDump\");\r\n            if (filename == null) {\r\n                alert(\"Der Dateiname ist leer, daher wird nichts gespeichert.\");\r\n                return;\r\n            }\r\n            if (!filename.endsWith(\".sqLite\")) filename = filename + \".sqLite\";\r\n            downloadFile(new Blob([db.buffer]), filename, true);\r\n        }, () => {});\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { PasswordChanger } from \"./UserMenu.js\";\r\nimport { DatabaseSettingsDialog } from \"./DatabaseSettingsDialog.js\";\r\nimport { DatabaseImportExport } from \"../../tools/DatabaseImportExport.js\";\r\n\r\nexport type Action = (identifier: string) => void;\r\n\r\ntype Menu = {\r\n    items: MenuItem[];\r\n    $element?: JQuery<HTMLElement>;\r\n    level?: number;\r\n}\r\n\r\ntype MenuItem = {\r\n    identifier: string;\r\n    $element?: JQuery<HTMLElement>;\r\n    action?: Action;\r\n    link?: string;\r\n    subMenu?: Menu;\r\n}\r\n\r\nexport class MainMenu {\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n\r\n    currentSubmenu: { [level: number]: JQuery<HTMLElement> } = {};\r\n    openSubmenusOnMousemove: boolean = false;\r\n\r\n    initGUI(user: UserData) {\r\n\r\n        let that = this;\r\n        let editor = this.main.getMonacoEditor();\r\n\r\n        let mainMenu: Menu = {\r\n            items: [\r\n                {\r\n                    identifier: \"Datei\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Speichern und Beenden\",\r\n                                action: () => { jQuery('#buttonLogout').trigger(\"click\"); }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Bearbeiten\", subMenu:\r\n                    {\r\n                        items: [\r\n                            { identifier: \"Rückgängig (Strg + z)\", action: () => { editor.trigger(\".\", \"undo\", {}); } },\r\n                            { identifier: \"Wiederholen (Strg + y)\", action: () => { editor.trigger(\".\", \"redo\", {}); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Kopieren (Strg + c)\", action: () => { editor.getAction(\"editor.action.clipboardCopyAction\").run(); } },\r\n                            { identifier: \"Ausschneiden (Strg + x)\", action: () => { editor.getAction(\"editor.action.clipboardCutAction\").run(); } },\r\n                            { identifier: \"Nach oben kopieren (Alt + Shift + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.copyLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten kopieren (Alt + Shift + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.copyLinesDownAction\").run(); } },\r\n                            { identifier: \"Nach oben verschieben (Alt + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.moveLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten verschieben (Alt + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.moveLinesDownAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Suchen... (Strg + f)\", action: () => { editor.getAction(\"actions.find\").run(); } },\r\n                            { identifier: \"Ersetzen... (Strg + h)\", action: () => { editor.getAction(\"editor.action.startFindReplaceAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Aus-/Einkommentieren (Strg + #)\", action: () => { editor.getAction(\"editor.action.commentLine\").run(); } },\r\n                            { identifier: \"Dokument formatieren (Alt + Shift + f)\", action: () => { editor.getAction(\"editor.action.formatDocument\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Finde zugehörige Klammer (Strg + k)\", action: () => { editor.getAction(\"editor.action.jumpToBracket\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Alles zusammenfalten\", action: () => { editor.getAction(\"editor.foldAll\").run(); } },\r\n                            { identifier: \"Alles auffalten\", action: () => { editor.getAction(\"editor.unfoldAll\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Vorschlag auslösen (Strg + Leertaste)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.triggerSuggest\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n                            { identifier: \"Parameterhilfe (Strg + Shift + Leertaste)\", action: () => { editor.getAction(\"editor.action.triggerParameterHints\").run(); } },\r\n                            {\r\n                                identifier: \"Gehe zur Definition (Strg + Click)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.revealDefinition\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Ansicht\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Theme\",\r\n                                subMenu: {\r\n                                    items: [\r\n                                        {\r\n                                            identifier: \"Dark\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"dark\");\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            identifier: \"Light\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"light\");\r\n                                            }\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Hoher Kontrast im Editor ein/aus\", action: () => { editor.getAction(\"editor.action.toggleHighContrast\").run(); } },\r\n\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Zoom out (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(-4); } },\r\n                            { identifier: \"Zoom normal\", action: () => { this.main.editor.setFontSize(14); }},\r\n                            { identifier: \"Zoom in (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(4); } },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Datenbank\", subMenu:\r\n                    {\r\n                        items: [\r\n                            { identifier: \"Einstellungen...\", action: () => { new DatabaseSettingsDialog(this.main, this.main.currentWorkspace) } },\r\n                            { identifier: \"Export als Binärdump (.dbDump-File)...\", action: () => {  new DatabaseImportExport().saveToFile(this.main.getDatabaseTool());\r\n                            } },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n\r\n            ]\r\n        };\r\n\r\n        jQuery('#mainmenu').empty();\r\n        this.initMenu(mainMenu, 0);\r\n    }\r\n\r\n    switchTheme(theme: string) {\r\n        this.main.viewModeController.setTheme(theme);\r\n    }\r\n\r\n    initMenu(menu: Menu, level?: number) {\r\n\r\n        menu.level = level;\r\n\r\n        if (level == 0) {\r\n            menu.$element = jQuery('#mainmenu');\r\n        } else {\r\n            menu.$element = jQuery('<div class=\"jo_submenu\"></div>');\r\n            jQuery('body').append(menu.$element);\r\n        }\r\n\r\n        menu.$element.data('model', menu);\r\n        for (let mi of menu.items) {\r\n            if (mi.identifier == '-') {\r\n                mi.$element = jQuery('<div class=\"jo_menuitemdivider\"></div>');\r\n            } else {\r\n                mi.$element = jQuery('<div>' + mi.identifier + '</div>');\r\n                if (mi.link != null) {\r\n                    let $link = jQuery('<a href=\"' + mi.link + '\" target=\"_blank\" class=\"jo_menulink\"></a>');\r\n                    $link.on(\"mousedown\", (event) => {\r\n                        event.stopPropagation();\r\n                        setTimeout(() => {\r\n                            menu.$element.hide();\r\n                        }, 500);\r\n                    })\r\n                    $link.append(mi.$element);\r\n                    mi.$element = $link;\r\n                }\r\n                if (mi.subMenu != null) {\r\n                    this.initMenu(mi.subMenu, level + 1);\r\n                }\r\n                this.initMenuitemCallbacks(menu, mi);\r\n                if (level == 0) {\r\n                    mi.$element.addClass('jo_mainmenuitem');\r\n                }\r\n            }\r\n            menu.$element.append(mi.$element);\r\n            mi.$element.data('model', mi);\r\n        }\r\n\r\n        let that = this;\r\n        jQuery(document).on('mousedown', () => {\r\n            for (let i = 0; i < 5; i++) {\r\n                if (that.currentSubmenu[i] != null) {\r\n                    that.currentSubmenu[i].hide();\r\n                    that.currentSubmenu[i] = null;\r\n                }\r\n            }\r\n            that.openSubmenusOnMousemove = false;\r\n        });\r\n\r\n    }\r\n\r\n    initMenuitemCallbacks(menu: Menu, mi: MenuItem) {\r\n        let that = this;\r\n\r\n        if (mi.action != null) {\r\n            mi.$element.on('mousedown', (ev) => { mi.action(mi.identifier); });\r\n        }\r\n\r\n        if (mi.subMenu != null) {\r\n            mi.$element.on('mousedown', (ev) => {\r\n                that.opensubmenu(mi);\r\n                that.openSubmenusOnMousemove = true;\r\n                ev.stopPropagation();\r\n            });\r\n\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.openSubmenusOnMousemove) {\r\n                    that.opensubmenu(mi);\r\n                } else {\r\n                    if (that.currentSubmenu[menu.level + 1] != null) {\r\n                        that.currentSubmenu[menu.level + 1].hide();\r\n                        that.currentSubmenu[menu.level + 1] = null;\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.currentSubmenu[menu.level + 1] != null) {\r\n                    that.currentSubmenu[menu.level + 1].hide();\r\n                    that.currentSubmenu[menu.level + 1] = null;\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    opensubmenu(mi: MenuItem) {\r\n\r\n        let subMenu = mi.subMenu;\r\n\r\n        let left: number;\r\n        let top: number;\r\n        if (subMenu.level == 1) {\r\n            left = mi.$element.position().left;\r\n            top = 30;\r\n        } else {\r\n            left = mi.$element.offset().left + mi.$element.width();\r\n            top = mi.$element.offset().top;\r\n        }\r\n\r\n        subMenu.$element.css({\r\n            top: \"\" + top + \"px\",\r\n            left: \"\" + left + \"px\"\r\n        })\r\n\r\n        if (this.currentSubmenu[subMenu.level] != null) {\r\n            this.currentSubmenu[subMenu.level].hide();\r\n        }\r\n\r\n        subMenu.$element.show();\r\n        this.currentSubmenu[subMenu.level] = subMenu.$element;\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { openContextMenu, makeEditable, ContextMenuItem, animateToTransparent, jo_mouseDetected } from \"../../tools/HtmlTools.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { escapeHtml } from \"../../tools/StringTools.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type AccordionElement = {\r\n    name: string;\r\n    sortName?: string;      // if sortName == null, then name will be used when sorting\r\n    externalElement?: any;\r\n    iconClass?: string;\r\n    $htmlFirstLine?: JQuery<HTMLElement>;\r\n    $htmlSecondLine?: JQuery<HTMLElement>;\r\n\r\n    isFolder: boolean;\r\n    path: string[];\r\n}\r\n\r\nexport type AccordionContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: (panel: AccordionElement) => void;\r\n    subMenu?: AccordionContextMenuItem[]\r\n}\r\n\r\nexport class AccordionPanel {\r\n\r\n    elements: AccordionElement[] = [];\r\n\r\n    $captionElement: JQuery<HTMLElement>;\r\n    $buttonNew: JQuery<HTMLElement>;\r\n    $listElement: JQuery<HTMLElement>;\r\n\r\n    private fixed: boolean;\r\n\r\n    dontSortElements: boolean = false;\r\n\r\n    static currentlyDraggedElement: AccordionElement;\r\n    static currentlyDraggedElementKind: string;\r\n\r\n    newElementCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    newFolderCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    renameCallback: (externalElement: any, newName: string) => string;\r\n    deleteCallback: (externalElement: any, callbackIfSuccessful: () => void) => void;\r\n    selectCallback: (externalElement: any) => void;\r\n    addElementActionCallback: (accordionElement: AccordionElement) => JQuery<HTMLElement>;\r\n    contextMenuProvider: (externalElement: any) => AccordionContextMenuItem[];\r\n    moveCallback: (ae: AccordionElement | AccordionElement[]) => void;\r\n    dropElementCallback: (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => void;\r\n\r\n    $newFolderAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private accordion: Accordion, private caption: string, private flexWeight: string,\r\n        private newButtonClass: string, private buttonNewTitle: string,\r\n        private defaultIconClass: string, private withDeleteButton: boolean, private withFolders: boolean,\r\n        private kind: \"workspace\" | \"file\" | \"class\" | \"student\", private enableDrag: boolean, private acceptDropKinds: string[]) {\r\n\r\n        accordion.addPanel(this);\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        if (withFolders) {\r\n            let that = this;\r\n            this.$newFolderAction = jQuery('<div class=\"img_add-folder-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Neuen Ordner auf oberster Ebene anlegen\">');\r\n            this.$newFolderAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                let pathArray: string[] = [];\r\n\r\n                this.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                    this.newFolderCallback(newElement, () => {\r\n                        this.sortElements();\r\n                        newElement.$htmlFirstLine[0].scrollIntoView();\r\n                        animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                    });\r\n                });\r\n\r\n            })\r\n\r\n            this.addAction(this.$newFolderAction);\r\n\r\n\r\n            let $collapseAllAction = jQuery('<div class=\"img_collapse-all-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Alle Ordner zusammenfalten\">');\r\n            $collapseAllAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                that.collapseAll();\r\n\r\n            })\r\n\r\n            this.addAction($collapseAllAction);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    collapseAll() {\r\n        for (let element of this.elements) {\r\n            if (element.isFolder) {\r\n                if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                    element.$htmlFirstLine.removeClass('jo_expanded');\r\n                    element.$htmlFirstLine.addClass('jo_collapsed');\r\n                }\r\n            }\r\n            if (element.path.length > 0) {\r\n                element.$htmlFirstLine.slideUp(200);\r\n            }\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        this.$captionElement.remove();\r\n        this.$listElement.remove();\r\n    }\r\n\r\n    setFixed(fixed: boolean) {\r\n        this.fixed = fixed;\r\n        if (this.fixed) {\r\n            this.grow();\r\n            this.$captionElement.addClass('jo_fixed');\r\n        } else {\r\n            this.$captionElement.removeClass('jo_fixed');\r\n        }\r\n\r\n    }\r\n\r\n    //     <div class=\"jo_leftpanelcaption expanded\" id=\"workspace\" data-panel=\"filelistouter\">\r\n    //     <span>WORKSPACE</span>\r\n    //     <div class=\"jo_actions\"><img id=\"buttonNewFile\" title=\"Neue Datei hinzufügen\"\r\n    //             src=\"assets/projectexplorer/add-file-dark.svg\"></div>\r\n    // </div>\r\n    // <div id=\"filelistouter\" class=\"jo_projectexplorerdiv scrollable\" data-grow=\"3\"\r\n    //     style=\"flex-grow: 3\">\r\n    //     <div id=\"filelist\"></div>\r\n    // </div>\r\n\r\n\r\n    enableNewButton(enabled: boolean) {\r\n        if (this.$buttonNew != null) {\r\n            if (enabled) {\r\n                this.$buttonNew.show();\r\n            } else {\r\n                this.$buttonNew.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    getCurrentlySelectedPath(): string[] {\r\n        let pathArray: string[] = [];\r\n        let selectedElement = this.getSelectedElement();\r\n        if (selectedElement != null) {\r\n            pathArray = selectedElement.path.slice(0);\r\n            if (selectedElement.isFolder) pathArray.push(selectedElement.name);\r\n        }\r\n        return pathArray;\r\n    }\r\n\r\n    compareWithPath(name1: string, path1: string[], isFolder1: boolean, name2: string, path2: string[], isFolder2: boolean) {\r\n\r\n        path1 = path1.slice();\r\n        path1.push(name1);\r\n        name1 = \"\";\r\n\r\n        path2 = path2.slice();\r\n        path2.push(name2);\r\n        name2 = \"\";\r\n\r\n        let i = 0;\r\n        while (i < path1.length && i < path2.length) {\r\n            let cmp = path1[i].localeCompare(path2[i]);\r\n            if (cmp != 0) return cmp;\r\n            i++;\r\n        }\r\n\r\n        if (path1.length < path2.length) return -1;\r\n        if (path1.length > path2.length) return 1;\r\n\r\n        return name1.localeCompare(name2);\r\n\r\n\r\n        // let nameWithPath1 = path1.join(\"/\");\r\n        // if (nameWithPath1 != \"\" && name1 != \"\") nameWithPath1 += \"/\";\r\n        // nameWithPath1 += name1;\r\n\r\n        // let nameWithPath2 = path2.join(\"/\");\r\n        // if (nameWithPath2 != \"\" && name2 != \"\") nameWithPath2 += \"/\";\r\n        // nameWithPath2 += name2;\r\n\r\n        // return nameWithPath1.localeCompare(nameWithPath2);\r\n    }\r\n\r\n\r\n    getElementIndex(name: string, path: string[], isFolder: boolean): number {\r\n\r\n        for (let i = 0; i < this.elements.length; i++) {\r\n            let element = this.elements[i];\r\n\r\n            if (this.compareWithPath(name, path, isFolder, element.name, element.path, element.isFolder) < 0) return i;\r\n\r\n        }\r\n        return this.elements.length;\r\n    }\r\n\r\n    insertElement(ae: AccordionElement) {\r\n        let insertIndex = this.getElementIndex(ae.name, ae.path, ae.isFolder);\r\n        // if (ae.path.length == 0) insertIndex = this.elements.length;\r\n        this.elements.splice(insertIndex, 0, ae);\r\n\r\n        let $elements = this.$listElement.find('.jo_file');\r\n\r\n        if (insertIndex == 0) {\r\n            this.$listElement.prepend(ae.$htmlFirstLine);\r\n        } else if(insertIndex == $elements.length){\r\n            this.$listElement.append(ae.$htmlFirstLine);\r\n        } else {\r\n            let elementAtIndex = $elements.get(insertIndex);\r\n            jQuery(elementAtIndex).before(ae.$htmlFirstLine);\r\n        }\r\n\r\n    }\r\n\r\n    addFolder(name: string, path: string[], callback: (newPanel: AccordionElement) => void) {\r\n\r\n        let ae: AccordionElement = {\r\n            name: name,\r\n            isFolder: true,\r\n            path: path\r\n        }\r\n\r\n        let $element = this.renderElement(ae, true);\r\n\r\n        this.insertElement(ae);\r\n\r\n        $element[0].scrollIntoView();\r\n\r\n        this.renameElement(ae, () => {\r\n\r\n            callback(ae);\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    renderOuterHtmlElements($accordionDiv: JQuery<HTMLElement>) {\r\n        let that = this;\r\n\r\n        this.$captionElement = jQuery(`<div class=\"jo_leftpanelcaption jo_expanded\">\r\n        <div class=\"jo_captiontext\">` + this.caption + `</div><div class=\"jo_actions\"></div></div>`);\r\n\r\n        if (this.newButtonClass != null) {\r\n            this.$buttonNew = jQuery('<div class=\"jo_button jo_active ' + this.newButtonClass + '\" title=\"' + this.buttonNewTitle + '\">');\r\n            this.$captionElement.find('.jo_actions').append(this.$buttonNew);\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n            this.$buttonNew.on(mousePointer + 'down', (ev) => {\r\n\r\n                Helper.close();\r\n                ev.stopPropagation();\r\n\r\n                let path = that.getCurrentlySelectedPath();\r\n\r\n                let ae: AccordionElement = {\r\n                    name: \"Neu\",\r\n                    isFolder: false,\r\n                    path: path\r\n                }\r\n\r\n                let insertIndex = this.getElementIndex(\"\", path, false);\r\n                this.elements.splice(insertIndex, 0, ae);\r\n                let $element = this.renderElement(ae, true);\r\n\r\n\r\n                if (insertIndex == 0) {\r\n                    this.$listElement.prepend($element);\r\n                } else {\r\n                    let elementAtIndex = this.$listElement.find('.jo_file').get(insertIndex - 1);\r\n                    jQuery(elementAtIndex).after($element);\r\n                }\r\n\r\n                $element[0].scrollIntoView();\r\n\r\n                that.renameElement(ae, () => {\r\n\r\n                    that.newElementCallback(ae, (externalElement: any) => {\r\n\r\n                        ae.externalElement = externalElement;\r\n\r\n                        if (ae.$htmlSecondLine != null) {\r\n                            ae.$htmlSecondLine.insertAfter($element);\r\n                        }\r\n\r\n                        if (that.selectCallback != null) that.select(ae.externalElement);\r\n\r\n                    });\r\n\r\n                });\r\n\r\n            });\r\n\r\n        }\r\n\r\n        let $listOuter = jQuery('<div id=\"filelistouter\" class=\"jo_projectexplorerdiv jo_scrollable\" data-grow=\"'\r\n            + this.flexWeight + '\" style=\"flex-grow: ' + this.flexWeight + '\"></div>');\r\n        this.$listElement = jQuery('<div class=\"jo_filelist\"></div>')\r\n\r\n        $listOuter.append(this.$listElement);\r\n\r\n        $accordionDiv.append(this.$captionElement);\r\n        $accordionDiv.append($listOuter);\r\n\r\n        let $ce = this.$captionElement;\r\n        let $li = this.$listElement.parent();\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $ce.on(mousePointer + 'down', (ev) => {\r\n            if (ev.button != 0) {\r\n                return;\r\n            }\r\n\r\n            if (!this.fixed) {\r\n                let targetGrow = $li.data('grow');\r\n                if ($ce.hasClass('jo_expanded')) {\r\n                    if (that.accordion.parts.length > 1) {\r\n                        $li.animate({\r\n                            'flex-grow': 0.001\r\n                        }, 1000, () => { $ce.toggleClass('jo_expanded'); });\r\n                    }\r\n                } else {\r\n                    $ce.toggleClass('jo_expanded');\r\n                    $li.animate({\r\n                        'flex-grow': targetGrow\r\n                    }, 1000);\r\n                }\r\n            }\r\n        });\r\n\r\n        $ce.on('dragover', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                $ce.addClass('jo_file_dragover');\r\n                event.preventDefault();\r\n            }\r\n        })\r\n\r\n        $ce.on('dragleave', (event) => {\r\n            $ce.removeClass('jo_file_dragover');\r\n        })\r\n\r\n        $ce.on('drop', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                event.preventDefault();\r\n                $ce.removeClass('jo_file_dragover');\r\n                let element1 = AccordionPanel.currentlyDraggedElement;\r\n                if (element1 != null) {\r\n                    that.moveElement(element1, null);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    grow() {\r\n        let $li = this.$listElement.parent();\r\n        let targetGrow = $li.data('grow');\r\n        $li.css('flex-grow', targetGrow);\r\n        this.$captionElement.addClass('jo_expanded');\r\n    }\r\n\r\n    addElement(element: AccordionElement, expanded: boolean) {\r\n        // this.elements.push(element);\r\n        // element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        // this.$listElement.prepend(element.$htmlFirstLine);\r\n        element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        this.insertElement(element);\r\n    }\r\n\r\n    sortElements() {\r\n        if (this.dontSortElements) return;\r\n        this.elements.sort((a, b) => {\r\n            let aName = a.sortName ? a.sortName : a.name;\r\n            let bName = b.sortName ? b.sortName : b.name;\r\n\r\n            return this.compareWithPath(aName, a.path, a.isFolder, bName, b.path, b.isFolder);\r\n\r\n        });\r\n        this.elements.forEach((element) => { this.$listElement.append(element.$htmlFirstLine) });\r\n    }\r\n\r\n    setTextAfterFilename(element: AccordionElement, text: string, cssClass: string) {\r\n        if(element == null) return;\r\n        let $div = element.$htmlFirstLine.find('.jo_textAfterName');\r\n        $div.addClass(cssClass);\r\n        $div.html(text);\r\n    }\r\n\r\n    addAction($element: JQuery<HTMLElement>) {\r\n        this.$captionElement.find('.jo_actions').prepend($element);\r\n    }\r\n\r\n    renderElement(element: AccordionElement, expanded: boolean): JQuery<HTMLElement> {\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        let that = this;\r\n\r\n        let expandedCollapsed = \"\";\r\n\r\n        if (element.iconClass == null) element.iconClass = this.defaultIconClass;\r\n        if (element.isFolder) {\r\n            element.iconClass = \"folder\";\r\n            expandedCollapsed = expanded ? \" jo_expanded\" : \" jo_collapsed\";\r\n        }\r\n\r\n        let pathHtml = \"\";\r\n        if (element.path == null) element.path = [];\r\n        for (let i = 0; i < element.path.length; i++) {\r\n            pathHtml += '<div class=\"jo_folderline\"></div>';\r\n        }\r\n\r\n        element.$htmlFirstLine = jQuery(`<div class=\"jo_file jo_${element.iconClass} ${expandedCollapsed}\">\r\n        <div class=\"jo_folderlines\">${pathHtml}</div>\r\n           <div class=\"jo_fileimage\"></div>\r\n           <div class=\"jo_filename\">${escapeHtml(element.name)}</div>\r\n           <div class=\"jo_textAfterName\"></div>\r\n           <div class=\"jo_additionalButtonSettings\"></div>\r\n           ${this.withDeleteButton ? '<div class=\"jo_delete img_delete jo_button jo_active' + (false ? \" jo_delete_always\" : \"\") + '\"></div>' : \"\"}\r\n           ${!jo_mouseDetected ? '<div class=\"jo_settings_button img_ellipsis-dark jo_button jo_active\"></div>' : \"\"}\r\n           </div>`);\r\n\r\n        if (!expanded && element.path.length > 0) {\r\n            element.$htmlFirstLine.hide();\r\n        }\r\n\r\n        if (this.addElementActionCallback != null) {\r\n            let $elementAction = this.addElementActionCallback(element);\r\n            element.$htmlFirstLine.append($elementAction);\r\n        }\r\n\r\n        if (this.withFolders) {\r\n            if (element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            that.moveElement(element1, element);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withFolders || this.enableDrag) {\r\n            let $filedragpart = element.$htmlFirstLine.find('.jo_filename');\r\n            $filedragpart.attr('draggable', 'true');\r\n            $filedragpart.on('dragstart', (event) => {\r\n                AccordionPanel.currentlyDraggedElement = element;\r\n                AccordionPanel.currentlyDraggedElementKind = that.kind;\r\n                event.originalEvent.dataTransfer.effectAllowed = element.isFolder ? \"move\" : \"copyMove\";\r\n            })\r\n        }\r\n\r\n        if (this.acceptDropKinds != null && this.acceptDropKinds.length > 0) {\r\n            if (!element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n\r\n                        if (event.ctrlKey) {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"copy\";\r\n                        } else {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"move\";\r\n                        }\r\n\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            if (that.dropElementCallback != null) that.dropElementCallback(element, element1, event.ctrlKey ? \"copy\" : \"move\");\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        element.$htmlFirstLine.on(mousePointer + 'up', (ev) => {\r\n\r\n            if (ev.button == 0 && that.selectCallback != null) {\r\n                that.selectCallback(element.externalElement);\r\n\r\n                for (let ae of that.elements) {\r\n                    if (ae != element && ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                        ae.$htmlFirstLine.removeClass('jo_active');\r\n                    }\r\n                }\r\n\r\n                element.$htmlFirstLine.addClass('jo_active');\r\n\r\n                if (element.isFolder) {\r\n\r\n                    if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                        element.$htmlFirstLine.removeClass('jo_expanded');\r\n                        element.$htmlFirstLine.addClass('jo_collapsed');\r\n                    } else {\r\n                        element.$htmlFirstLine.addClass('jo_expanded');\r\n                        element.$htmlFirstLine.removeClass('jo_collapsed');\r\n                    }\r\n\r\n                    let pathIsCollapsed: { [path: string]: boolean } = {};\r\n                    for (let e of this.elements) {\r\n                        if (e.isFolder) {\r\n                            let path = e.path.join(\"/\");\r\n                            if (path != \"\") path += \"/\";\r\n                            path += e.name;\r\n                            pathIsCollapsed[path] = e.$htmlFirstLine.hasClass('jo_collapsed');\r\n                            if (pathIsCollapsed[e.path.join(\"/\")]) pathIsCollapsed[path] = true;\r\n                        }\r\n                    }\r\n                    pathIsCollapsed[\"\"] = false;\r\n\r\n                    for (let e of this.elements) {\r\n                        if (pathIsCollapsed[e.path.join(\"/\")]) {\r\n                            e.$htmlFirstLine.slideUp(200);\r\n                        } else {\r\n                            e.$htmlFirstLine.slideDown(200);\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n\r\n        let contextmenuHandler = function (event) {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [];\r\n            if (that.renameCallback != null) {\r\n                contextMenuItems.push({\r\n                    caption: \"Umbenennen\",\r\n                    callback: () => {\r\n                        that.renameElement(element);\r\n                    }\r\n                })\r\n            }\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n            if (element.isFolder) {\r\n                contextMenuItems = contextMenuItems.concat([\r\n                    {\r\n                        caption: \"Neuen Unterordner anlegen (unterhalb '\" + element.name + \"')...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            // that.$newFolderAction.trigger(mousePointer + 'down');\r\n                            let pathArray = that.getCurrentlySelectedPath();\r\n\r\n                            that.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                                that.newFolderCallback(newElement, () => {\r\n                                    that.sortElements();\r\n                                    newElement.$htmlFirstLine[0].scrollIntoView();\r\n                                    animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                                });\r\n                            });\r\n\r\n                        }\r\n                    }, {\r\n                        caption: \"Neue Datenbank...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            that.$buttonNew.trigger(mousePointer + 'down');\r\n                        }\r\n                    }\r\n                ])\r\n            }\r\n\r\n\r\n            if (that.contextMenuProvider != null && !element.isFolder) {\r\n\r\n                for (let cmi of that.contextMenuProvider(element)) {\r\n                    contextMenuItems.push({\r\n                        caption: cmi.caption,\r\n                        callback: () => {\r\n                            cmi.callback(element);\r\n                        },\r\n                        color: cmi.color,\r\n                        subMenu: cmi.subMenu == null ? null : cmi.subMenu.map((mi) => {\r\n                            return {\r\n                                caption: mi.caption,\r\n                                callback: () => {\r\n                                    mi.callback(element);\r\n                                },\r\n                                color: mi.color\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n\r\n            if (contextMenuItems.length > 0) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                openContextMenu(contextMenuItems, event.pageX, event.pageY);\r\n            }\r\n        };\r\n\r\n        element.$htmlFirstLine[0].addEventListener(\"contextmenu\", contextmenuHandler, false);\r\n\r\n        // long press for touch devices\r\n        let pressTimer: number;\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.on('pointerup', () => {\r\n                clearTimeout(pressTimer);\r\n                return false;\r\n            }).on('pointerdown', (event) => {\r\n                pressTimer = window.setTimeout(() => {\r\n                    contextmenuHandler(event);\r\n                }, 500);\r\n                return false;\r\n            });\r\n        }\r\n\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('pointerdown', (e) => {\r\n                contextmenuHandler(e);\r\n            });\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('mousedown click', (e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            });\r\n        }\r\n\r\n        if (that.withDeleteButton) {\r\n            element.$htmlFirstLine.find('.jo_delete').on(mousePointer + 'up', (ev) => {\r\n                ev.preventDefault();\r\n                openContextMenu([{\r\n                    caption: \"Abbrechen\",\r\n                    callback: () => {\r\n                        // nothing to do.\r\n                    }\r\n                }, {\r\n                    caption: \"Ich bin mir sicher: löschen!\",\r\n                    color: \"#ff6060\",\r\n                    callback: () => {\r\n\r\n                        if (element.isFolder) {\r\n                            if (that.getChildElements(element).length > 0) {\r\n                                alert('Dieser Ordner kann nicht gelöscht werden, da er nicht leer ist.');\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        that.deleteCallback(element.externalElement, () => {\r\n                            element.$htmlFirstLine.remove();\r\n                            if (element.$htmlSecondLine != null) element.$htmlSecondLine.remove();\r\n                            that.elements.splice(that.elements.indexOf(element), 1);\r\n\r\n                            if (that.selectCallback != null) {\r\n                                if (that.elements.length > 0) {\r\n                                    that.select(that.elements[0].externalElement);\r\n                                } else {\r\n                                    that.select(null);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }], ev.pageX + 2, ev.pageY + 2);\r\n                ev.stopPropagation();\r\n            });\r\n        }\r\n\r\n        return element.$htmlFirstLine;\r\n\r\n    }\r\n\r\n    moveElement(elementToMove: AccordionElement, destinationFolder: AccordionElement) {\r\n        let destinationPath: string[] = destinationFolder == null ? [] : destinationFolder.path.slice(0).concat([destinationFolder.name]);\r\n        if (elementToMove.isFolder) {\r\n            let movedElements: AccordionElement[] = [elementToMove];\r\n\r\n            let sourcePath = elementToMove.path.concat([elementToMove.name]).join(\"/\");\r\n\r\n            if(destinationPath.join('/').indexOf(sourcePath) == 0) return;\r\n\r\n            let oldPathLength = elementToMove.path.length;\r\n            elementToMove.path = destinationPath.slice(0);\r\n\r\n            for (let element of this.elements) {\r\n                if (element.path.join(\"/\").startsWith(sourcePath)) {\r\n                    element.path.splice(0, oldPathLength);\r\n                    element.path = destinationPath.concat(element.path);\r\n                    movedElements.push(element);\r\n                }\r\n            }\r\n\r\n            for (let el of movedElements) {\r\n                el.$htmlFirstLine.remove();\r\n                this.elements.splice(this.elements.indexOf(el), 1);\r\n            }\r\n            for (let el of movedElements) {\r\n                this.renderElement(el, true);\r\n                this.insertElement(el);\r\n            }\r\n\r\n            this.moveCallback(movedElements);\r\n        } else {\r\n            elementToMove.path = destinationPath;\r\n            elementToMove.$htmlFirstLine.remove();\r\n            this.elements.splice(this.elements.indexOf(elementToMove), 1);\r\n            this.renderElement(elementToMove, true);\r\n            this.insertElement(elementToMove);\r\n            this.select(elementToMove.externalElement);\r\n            elementToMove.$htmlFirstLine[0].scrollIntoView();\r\n            this.moveCallback(elementToMove);\r\n        }\r\n    }\r\n\r\n    getChildElements(folder: AccordionElement): AccordionElement[] {\r\n        let path = folder.path.slice(0).concat(folder.name).join(\"/\");\r\n        return this.elements.filter((element) => element.path.join(\"/\").startsWith(path));\r\n    }\r\n\r\n    renameElement(element: AccordionElement, callback?: () => void) {\r\n        let that = this;\r\n        let $div = element.$htmlFirstLine.find('.jo_filename');\r\n        let pointPos = element.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        this.dontSortElements = true;\r\n        makeEditable($div, $div, (newText: string) => {\r\n            if (element.externalElement != null) newText = that.renameCallback(element.externalElement, newText);\r\n            element.name = newText;\r\n            $div.html(element.name);\r\n            if (callback != null) callback();\r\n            that.sortElements();\r\n            $div[0].scrollIntoView();\r\n            this.dontSortElements = false;\r\n        }, selection);\r\n    }\r\n\r\n    select(externalElement: any, invokeCallback: boolean = true, scrollIntoView: boolean = false) {\r\n\r\n        if (externalElement == null) {\r\n            for (let ae1 of this.elements) {\r\n                if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n            }\r\n        } else {\r\n            let ae = this.findElement(externalElement);\r\n\r\n            if (ae != null) {\r\n                for (let ae1 of this.elements) {\r\n                    if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n                }\r\n\r\n                ae.$htmlFirstLine.addClass('jo_active');\r\n                if (scrollIntoView) {\r\n                    let pathString = ae.path.join(\"/\");\r\n                    for (let el of this.elements) {\r\n                        let elPath = el.path.slice(0);\r\n                        if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                            if (el.isFolder) {\r\n                                elPath.push(el.name);\r\n                                if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                                    el.$htmlFirstLine.removeClass(\"jo_collapsed\");\r\n                                    el.$htmlFirstLine.addClass(\"jo_expanded\");\r\n                                }\r\n                            }\r\n                            el.$htmlFirstLine.show();\r\n                        }\r\n\r\n                    }\r\n\r\n                    ae.$htmlFirstLine[0].scrollIntoView();\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (invokeCallback && this.selectCallback != null) this.selectCallback(externalElement);\r\n\r\n    }\r\n\r\n    getPathString(ae: AccordionElement) {\r\n        let ps: string = ae.path.join(\"/\");\r\n        if (ae.isFolder) {\r\n            if (ps != \"\") ps += \"/\";\r\n            ps += ae.name;\r\n        }\r\n        return ps;\r\n    }\r\n\r\n    setElementClass(element: AccordionElement, iconClass: string) {\r\n        if (element != null) {\r\n            element.$htmlFirstLine?.removeClass(\"jo_\" + element.iconClass).addClass(\"jo_\" + iconClass);\r\n            element.iconClass = iconClass;\r\n        }\r\n\r\n    }\r\n\r\n    findElement(externalElement: any): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                return ae;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    removeElement(externalElement: any) {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                ae.$htmlFirstLine.remove();\r\n                if (ae.$htmlSecondLine != null) ae.$htmlSecondLine.remove();\r\n                this.elements.splice(this.elements.indexOf(ae), 1);\r\n\r\n                if (this.selectCallback != null) {\r\n                    if (this.elements.length > 0) {\r\n                        this.select(this.elements[0].externalElement);\r\n                    } else {\r\n                        this.select(null);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.$listElement.empty();\r\n        this.elements = [];\r\n    }\r\n\r\n    setCaption(text: string) {\r\n        this.$captionElement.find('.jo_captiontext').html(text);\r\n    }\r\n\r\n    getSelectedElement(): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                return ae;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class Accordion {\r\n\r\n    parts: AccordionPanel[] = [];\r\n    $html: JQuery<HTMLElement>;\r\n\r\n    constructor(public main: MainBase, $html: JQuery<HTMLElement>) {\r\n        this.$html = $html;\r\n        $html.addClass('jo_leftpanelinner');\r\n    }\r\n\r\n    addPanel(panel: AccordionPanel) {\r\n        panel.renderOuterHtmlElements(this.$html);\r\n        this.parts.push(panel);\r\n    }\r\n\r\n}","import { ClassData, UserData } from \"../../communication/Data.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { isEmptyObject } from \"jquery\";\r\n\r\nexport class DistributeToStudentsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n    studentCount: number = 0;\r\n\r\n    constructor(private classes: ClassData[], private workspace: Workspace, private main: Main){\r\n        this.init();\r\n    }\r\n\r\n    private init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Austeilen eines Workspace an einzelne Schüler/innen</div>\r\n             <div class=\"jo_ds_settings\">\r\n                <div class=\"jo_ds_settings_caption\">Workspace:</div><div class=\"jo_ds_workspacename\">${this.workspace.name}</div>\r\n                <div class=\"jo_ds_settings_caption\">Liste filtern:</div><div class=\"jo_ds_filterdiv\"><input class=\"dialog-input\"></input></div>\r\n             </div>\r\n             <div class=\"jo_ds_student_list jo_scrollable\">\r\n             </div>\r\n             <div class=\"jo_ds_selected_message\"></div>\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_distribute_button\">Austeilen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        let $studentList = jQuery('.jo_ds_student_list');\r\n        let that = this;\r\n\r\n        for(let klass of this.classes){\r\n            for(let student of klass.students){\r\n                let $studentLine = jQuery('<div class=\"jo_ds_student_line\">');\r\n                let $studentClass = jQuery(`<div class=\"jo_ds_student_class\">${klass.name}</div>`);                \r\n                let $studentName = jQuery(`<div class=\"jo_ds_student_name\">${student.rufname} ${student.familienname}</div>`);\r\n                $studentLine.append($studentClass, $studentName);\r\n                $studentList.append($studentLine);\r\n                $studentLine.on('mousedown', () => {\r\n                    $studentLine.toggleClass('jo_active');\r\n                     that.studentCount += $studentLine.hasClass('jo_active') ? 1 : -1;\r\n                     jQuery('.jo_ds_selected_message').text(`${that.studentCount} Schüler/inn/en selektiert`);\r\n                });\r\n                $studentLine.data('student', student);\r\n                $studentLine.data('klass', klass);\r\n            }\r\n        }\r\n\r\n        jQuery('.jo_ds_filterdiv>input').on('input', () => {\r\n            let filterText = <string>jQuery('.jo_ds_filterdiv>input').val();\r\n            if(filterText == null || filterText == \"\"){\r\n                $('.jo_ds_student_line').show();\r\n            } else {\r\n                $('.jo_ds_student_line').each((index, element) => {\r\n                    let $element = jQuery(element);\r\n                    let klass:ClassData = $element.data('klass');\r\n                    let student: UserData = $element.data('student');\r\n                    let text = klass.name + \" \" + student.rufname + \" \" + student.familienname;\r\n                    if(text.indexOf(filterText) >= 0){\r\n                        $element.show();\r\n                    } else {\r\n                        $element.hide();\r\n                    }\r\n                });\r\n\r\n            }\r\n            \r\n        });\r\n\r\n\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { window.history.back(); });\r\n        jQuery('#jo_ds_distribute_button').on('click', () => {that.distributeWorkspace();});\r\n\r\n    }\r\n\r\n    distributeWorkspace() {\r\n\r\n        let student_ids: number[] = [];\r\n        $('.jo_ds_student_line').each((index, element) => {\r\n            let $element = jQuery(element);\r\n            if($element.hasClass('jo_active')){\r\n                let student: UserData = $element.data('student');\r\n                student_ids.push(student.id);\r\n            }\r\n        });\r\n\r\n        window.history.back();\r\n\r\n        this.main.networkManager.sendDistributeWorkspace(this.workspace, null, student_ids, (error: string) => {\r\n            if (error == null) {\r\n                let networkManager = this.main.networkManager;\r\n                let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                alert(`Der Workspace ${this.workspace.name} wurde an ${student_ids.length} Schüler/innen ausgeteilt. Er wird in maximal ${dt} s bei jedem Schüler ankommen.`);\r\n            } else {\r\n                alert(error);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n\r\n}","import { CreateWorkspaceData, WorkspaceData } from \"../../communication/Data.js\";\r\nimport { DatabaseImportExport } from \"../../tools/DatabaseImportExport.js\";\r\nimport { LoadableDatabase } from \"../../tools/DatabaseLoader.js\";\r\nimport { DatabaseTool } from \"../../tools/DatabaseTools.js\";\r\nimport { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { TemplateUploader } from \"../../tools/TemplateUploader.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionElement } from \"./Accordion.js\";\r\n\r\ntype CreateMode = \"emptyDatabase\" | \"fromTemplate\" | \"useExistingDatabase\" | \"useDumpFile\";\r\n\r\nexport class NewDatabaseDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    database: LoadableDatabase;\r\n\r\n    constructor(private main: Main, private owner_id: number) {\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Neue Datenbank anlegen</div>\r\n\r\n            <div class=\"jo_ds_settings\">\r\n               <div class=\"jo_ds_settings_caption\">Name der Datenbank:</div><div><input class=\"dialog-input jo_databasename\" value=\"Neue Datenbank\"></input></div>\r\n            </div>\r\n\r\n             <div class=\"jo_tabheadings jo_cdtabheading\">\r\n             <div class=\"jo_tabheading\" data-target=\"jo_createEmptyDatabaseTab\">Leere Datenbank</div>\r\n             <div class=\"jo_tabheading jo_active\" data-target=\"jo_createDatabaseFromTemplateTab\">Von Vorlage kopieren</div>\r\n             <div class=\"jo_tabheading\" data-target=\"jo_createDatabaseUseExistingTab\">Bestehende Datenbank mitnutzen</div>\r\n             <div class=\"jo_tabheading\" data-target=\"jo_createDatabaseUseDumpFile\">Import aus Binärdump (.dbDump-File)</div>\r\n             </div>\r\n             <div class=\"jo_tabs\" style=\"width: 100%; margin-top: 10px\">\r\n                 <div class=\"jo_createEmptyDatabaseTab\">\r\n                    <div class=\"jo_createDatabaseDescription\">\r\n                        Erstellt wird eine leere Datenbank.\r\n                    </div>\r\n                 </div>\r\n                 <div class=\"jo_createDatabaseFromTemplateTab jo_active\">\r\n                    <div class=\"jo_ds_settings\">\r\n                       <div class=\"jo_ds_settings_caption\">Vorlage suchen:</div><div><input class=\"dialog-input jo_templatename\"></input></div>\r\n                    </div>\r\n                    <div class=\"jo_scrollable jo_templatelist\"></div>\r\n                 </div>\r\n                <div class=\"jo_createDatabaseUseExistingTab\">\r\n                    <div class=\"jo_createDatabaseDescription\">Wenn Du die Datenbank einer anderen Nutzerin/eines anderen Nutzers mitnutzen möchtest, brauchst Du einen Zugriffscode von ihr/ihm. Er ist unter Datenbank->Einstellungen zu finden.            \r\n                    </div>\r\n                    <div class=\"jo_ds_settings\">\r\n                       <div class=\"jo_ds_settings_caption\">Zugriffscode:</div><div><input class=\"dialog-input jo_databasecodeinput\"></input></div>\r\n                    </div>\r\n                 </div>\r\n                <div class=\"jo_createDatabaseUseDumpFile\">\r\n                    <div class=\"jo_createDatabaseDescription\">Wähle hier die Datei mit dem Datenbank-Dump aus (Endung .dbDump):</div>\r\n                    <input type=\"file\" class=\"jo_dumpfile\" name=\"dumpfile\" style=\"padding: 10px\"/>\r\n                    <div class=\"jo_databaseimport_dropzone\" style=\"width: 70vw; margin-left: 10px\">Alternativ: Datei in dieses Feld ziehen</div>\r\n                    <div class=\"jo_databaseimport_ok\"></div>\r\n                 </div>\r\n             </div>\r\n\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_create_database_button\">Datenbank anlegen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        makeTabs(this.$dialog);\r\n\r\n        let $templatelist = jQuery('.jo_templatelist');\r\n        this.main.networkManager.fetchTemplateList((templatelist) => {\r\n            templatelist.forEach(tle => {\r\n\r\n                let $tle = jQuery('<div class=\"jo_templateListEntry\"></div>')\r\n                $tle.append(jQuery(`<div class=\"jo_tle_firstline\">${tle.name} <span class=\"jo_tle_ownername\"> (von ${tle.ownerName})</span></div>`))\r\n                $tle.append(jQuery(`<div class=\"jo_tle_secondline\">${tle.description}</div>`))\r\n                $tle.data('templateId', tle.id);\r\n                $tle.data('name', tle.name);\r\n\r\n                $templatelist.append($tle);\r\n                tle.$tle = <JQuery<HTMLDivElement>>$tle;\r\n\r\n                $tle.on('pointerdown', () => {\r\n                    $templatelist.find('.jo_templateListEntry').removeClass('jo_active');\r\n                    $tle.addClass('jo_active');\r\n                })\r\n\r\n            })\r\n            let $templateName = <JQuery<HTMLInputElement>>jQuery('.jo_templatename');\r\n            $templateName.on('input', () => {\r\n                let s = <string>$templateName.val();\r\n                $templatelist.find('.jo_templateListEntry').hide();\r\n                templatelist.forEach(tle => {\r\n                    let tleString = tle.name + tle.ownerName + (tle.description ? tle.description : \"\");\r\n                    if (tleString.indexOf(s) >= 0) tle.$tle.show();\r\n                })\r\n            })\r\n        })\r\n\r\n        let $dropZone = jQuery('.jo_databaseimport_dropzone');\r\n\r\n        $dropZone.on('dragover', (evt) => {\r\n            evt.stopPropagation();\r\n            evt.preventDefault();\r\n            evt.originalEvent.dataTransfer.dropEffect = 'copy';\r\n        })\r\n        $dropZone.on('drop', (evt) => {\r\n            evt.stopPropagation();\r\n            evt.preventDefault();\r\n\r\n            var files = evt.originalEvent.dataTransfer.files;\r\n            this.importFile(files);\r\n        })\r\n\r\n        jQuery('.jo_dumpfile').on('change', (event) => {\r\n            //@ts-ignore\r\n            var files: FileList = event.originalEvent.target.files;\r\n            this.importFile(files);\r\n        })\r\n\r\n\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { this.showMainWindow(); });\r\n        jQuery('#jo_ds_create_database_button').on('click', () => {\r\n            let createMode: CreateMode = \"emptyDatabase\";\r\n            if (jQuery('.jo_createDatabaseFromTemplateTab').hasClass('jo_active')) createMode = \"fromTemplate\";\r\n            if (jQuery('.jo_createDatabaseUseExistingTab').hasClass('jo_active')) createMode = \"useExistingDatabase\";\r\n            if (jQuery('.jo_createDatabaseUseDumpFile').hasClass('jo_active')) createMode = \"useDumpFile\";\r\n\r\n            let workspaceData: CreateWorkspaceData = {\r\n                id: null,\r\n                isFolder: false,\r\n                name: <string>jQuery('.dialog-input.jo_databasename').val(),\r\n                path: \"\",\r\n            }\r\n\r\n            switch (createMode) {\r\n                case \"emptyDatabase\":\r\n                    this.createWorkspace(workspaceData);\r\n                    break;\r\n                case \"fromTemplate\":\r\n                    let $template = jQuery('.jo_templateListEntry.jo_active');\r\n                    if ($template.length != 1) {\r\n                        alert('Bitte wählen Sie genau eine Vorlage aus.');\r\n                        return;\r\n                    } else {\r\n                        workspaceData.template_database_id = $template.data('templateId');\r\n                        if (workspaceData.name == \"Neue Datenbank\") workspaceData.name = $template.data('name');\r\n                        this.createWorkspace(workspaceData);\r\n                    }\r\n                    break;\r\n                case \"useExistingDatabase\":\r\n                    let code = <string>jQuery('.jo_databasecodeinput').val();\r\n                    let tIndex = code.indexOf(\"T\");\r\n                    if (tIndex == -1) {\r\n                        alert(\"Der Zugriffscode muss das Zeichen T enthalten.\");\r\n                        return;\r\n                    }\r\n                    workspaceData.otherDatabaseId = Number.parseInt(code.substring(0, tIndex));\r\n                    workspaceData.secret = code.substring(tIndex + 1);\r\n                    this.createWorkspace(workspaceData);\r\n                    break;\r\n                case \"useDumpFile\":\r\n                    if(this.database != null){\r\n                        new TemplateUploader().uploadCurrentDatabase(-1, this.main, this.database.binDump, (response) => {\r\n                            workspaceData.template_database_id = response.newTemplateId;\r\n                            this.createWorkspace(workspaceData);\r\n                        });\r\n\r\n                    } else {\r\n                        alert('Bitte laden Sie zuerst den Binärdump einer Datenbank hoch.')\r\n                        return;\r\n                    }\r\n                    break;\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    private createWorkspace(workspaceData: CreateWorkspaceData) {\r\n        this.main.networkManager.sendCreateWorkspace(workspaceData, this.owner_id, (error?: string) => {\r\n            if (error != null) { alert(error); return; }\r\n\r\n            let w = this.main.createNewWorkspace(workspaceData.name, this.owner_id);\r\n            w.id = workspaceData.id;\r\n            w.sql_history = \"\";\r\n\r\n            let projectExplorer = this.main.projectExplorer;\r\n\r\n            this.main.workspaceList.push(w);\r\n            let accordionElement: AccordionElement = {\r\n                name: workspaceData.name,\r\n                externalElement: w,\r\n                iconClass: \"workspace\",\r\n                isFolder: false,\r\n                path: []\r\n            };\r\n\r\n            projectExplorer.workspaceListPanel.addElement(accordionElement, true);\r\n\r\n            w.renderSettingsButton(accordionElement);\r\n\r\n            projectExplorer.workspaceListPanel.sortElements();\r\n            projectExplorer.fileListPanel.sortElements();\r\n\r\n            projectExplorer.setWorkspaceActive(w);\r\n\r\n            this.showMainWindow();\r\n\r\n        });\r\n    }\r\n\r\n    importFile(files: FileList) {\r\n        let that = this;\r\n        new DatabaseImportExport().loadFromFile(files[0], (db: LoadableDatabase) => {\r\n            let isDatabase: boolean = false;\r\n            let dumpFileType = DatabaseTool.getDumpType(db.binDump);\r\n            if(dumpFileType == \"binaryCompressed\"){\r\n                // @ts-ignore\r\n                let dbUncompressed = pako.inflate(db.binDump);\r\n                if(DatabaseTool.getDumpType(dbUncompressed) == \"binaryUncompressed\"){\r\n                    isDatabase = true;\r\n                }\r\n            } else if(DatabaseTool.getDumpType(db.binDump) == \"binaryUncompressed\"){\r\n                //@ts-ignore\r\n                db.binDump = pako.deflate(db.binDump);\r\n                isDatabase = true;\r\n            }\r\n\r\n            if(isDatabase){\r\n                that.database = db;\r\n                jQuery('.jo_databaseimport_ok').html(\"Die Datenbankdatei wurde erfolgreich von Datei eingelesen. Sie können die Datenbank jetzt durch Klick auf den Button unten erstellen.\");\r\n            } else {\r\n                alert(\"In der Datei befindet sich kein Binärdump einer Datenbank.\");\r\n            }\r\n        });\r\n    }\r\n\r\n    showMainWindow() {\r\n        jQuery('#main').css('visibility', 'visible');\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n    }\r\n\r\n\r\n\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionPanel, Accordion, AccordionElement, AccordionContextMenuItem } from \"./Accordion.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { WorkspaceData, Workspaces, ClassData, CreateWorkspaceData } from \"../../communication/Data.js\";\r\nimport { dateToString } from \"../../tools/StringTools.js\";\r\nimport { DistributeToStudentsDialog } from \"./DistributeToStudentsDialog.js\";\r\nimport { NewDatabaseDialog } from \"./NewDatabaseDialog.js\";\r\n\r\n\r\nexport class ProjectExplorer {\r\n\r\n    programPointerModule: Module = null;\r\n    programPointerPosition: TextPosition;\r\n    programPointerDecoration: string[] = [];\r\n\r\n    accordion: Accordion;\r\n    fileListPanel: AccordionPanel;\r\n    workspaceListPanel: AccordionPanel;\r\n\r\n    $homeAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private $projectexplorerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.accordion = new Accordion(this.main, this.$projectexplorerDiv);\r\n\r\n        this.initFilelistPanel();\r\n\r\n        this.initWorkspacelistPanel();\r\n\r\n    }\r\n\r\n    initFilelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.fileListPanel = new AccordionPanel(this.accordion, \"Kein Workspace gewählt\", \"1\",\r\n            \"img_add-file-dark\", \"Neue Datei...\", \"java\", true, false, \"file\", true, []);\r\n\r\n        this.fileListPanel.newElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                if (that.main.currentWorkspace == null) {\r\n                    alert('Bitte wählen Sie zuerst einen Workspace aus.');\r\n                    return null;\r\n                }\r\n\r\n                let f: File = {\r\n                    name: accordionElement.name,\r\n                    dirty: false,\r\n                    saved: true,\r\n                    text: \"\",\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    panelElement: accordionElement\r\n                };\r\n                let m = new Module(f, that.main);\r\n                let modulStore = that.main.currentWorkspace.moduleStore;\r\n                modulStore.putModule(m);\r\n                that.setModuleActive(m);\r\n                that.main.networkManager.sendCreateFile(m, that.main.currentWorkspace, that.main.workspacesOwnerId,\r\n                    (error: string) => {\r\n                        if (error == null) {\r\n                            successfulNetworkCommunicationCallback(m);\r\n                        } else {\r\n                            alert('Der Server ist nicht erreichbar!');\r\n\r\n                        }\r\n                    });\r\n\r\n            };\r\n\r\n        this.fileListPanel.renameCallback =\r\n            (module: Module, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                let file = module.file;\r\n\r\n                file.name = newName;\r\n                file.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.fileListPanel.deleteCallback =\r\n            (module: Module, callbackIfSuccessful: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.currentWorkspace.moduleStore.removeModule(module);\r\n                        callbackIfSuccessful();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.fileListPanel.contextMenuProvider = (accordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            if (!(that.main.user.is_teacher || that.main.user.is_admin || that.main.user.is_schooladmin)) {\r\n                let module: Module = <Module>accordionElement.externalElement;\r\n                let file = module.file;\r\n\r\n                if (file.submitted_date == null) {\r\n                    cmiList.push({\r\n                        caption: \"Als Hausaufgabe markieren\",\r\n                        callback: (element: AccordionElement) => {\r\n\r\n                            let file = (<Module>element.externalElement).file;\r\n                            file.submitted_date = dateToString(new Date());\r\n                            file.saved = false;\r\n                            that.main.networkManager.sendUpdates(null, true);\r\n                            that.renderHomeworkButton(file);\r\n                        }\r\n                    });\r\n                } else {\r\n                    cmiList.push({\r\n                        caption: \"Hausaufgabenmarkierung entfernen\",\r\n                        callback: (element: AccordionElement) => {\r\n\r\n                            let file = (<Module>element.externalElement).file;\r\n                            file.submitted_date = null;\r\n                            file.saved = false;\r\n                            that.main.networkManager.sendUpdates(null, true);\r\n                            that.renderHomeworkButton(file);\r\n\r\n                        }\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n\r\n\r\n        this.fileListPanel.selectCallback =\r\n            (module: Module) => {\r\n                that.setModuleActive(module);\r\n            }\r\n\r\n\r\n\r\n    }\r\n\r\n    renderHomeworkButton(file: File) {\r\n        let $buttonDiv = file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonHomework');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_homeworkButton').remove();\r\n\r\n        let klass: string = null;\r\n        let title: string = \"\";\r\n        if (file.submitted_date != null) {\r\n            klass = \"img_homework\";\r\n            title = \"Wurde als Hausaufgabe abgegeben: \" + file.submitted_date\r\n            if (file.text_before_revision) {\r\n                klass = \"img_homework-corrected\";\r\n                title = \"Korrektur liegt vor.\"\r\n            }\r\n        }\r\n\r\n        if (klass != null) {\r\n            let $homeworkButtonDiv = jQuery(`<div class=\"jo_homeworkButton ${klass}\" title=\"${title}\"></div>`);\r\n            $buttonDiv.prepend($homeworkButtonDiv);\r\n            if (klass.indexOf(\"jo_active\") >= 0) {\r\n                $homeworkButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n                $homeworkButtonDiv.on('click', (e) => {\r\n                    e.stopPropagation();\r\n                    // TODO\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initWorkspacelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.workspaceListPanel = new AccordionPanel(this.accordion, \"Datenbanken\", \"3\",\r\n            \"img_add-database-dark\", \"Neue Datenbank...\", \"workspace\", true, true, \"workspace\", false, [\"file\"]);\r\n\r\n        let $newWorkspaceAction = jQuery('<div class=\"img_add-database-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Neue Datenbank anlegen\">');\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $newWorkspaceAction.on(mousePointer + 'down', (e) => {\r\n            e.stopPropagation();\r\n\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            new NewDatabaseDialog(that.main, owner_id);\r\n\r\n        })\r\n\r\n        this.workspaceListPanel.addAction($newWorkspaceAction);\r\n        this.workspaceListPanel.$buttonNew.hide();\r\n\r\n\r\n        this.workspaceListPanel.renameCallback =\r\n            (workspace: Workspace, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                workspace.name = newName;\r\n                workspace.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.workspaceListPanel.deleteCallback =\r\n            (workspace: Workspace, successfulNetworkCommunicationCallback: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"workspace\", workspace.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.removeWorkspace(workspace);\r\n                        that.fileListPanel.enableNewButton(that.main.workspaceList.length > 0);\r\n                        that.fileListPanel.clear();\r\n                        that.main.databaseExplorer.clear();\r\n                        that.main.getResultsetPresenter().clear();\r\n                        successfulNetworkCommunicationCallback();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.workspaceListPanel.selectCallback =\r\n            (workspace: Workspace) => {\r\n                if (workspace != this.main.currentWorkspace) {\r\n                    that.main.networkManager.sendUpdates(() => {\r\n                        that.setWorkspaceActive(workspace);\r\n                    });\r\n                }\r\n            }\r\n\r\n        this.workspaceListPanel.newFolderCallback = (newElement: AccordionElement, successCallback) => {\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            let folder: Workspace = new Workspace(newElement.name, that.main, owner_id);\r\n            folder.isFolder = true;\r\n\r\n            folder.path = newElement.path.join(\"/\");\r\n            folder.panelElement = newElement;\r\n            newElement.externalElement = folder;\r\n            that.main.workspaceList.push(folder);\r\n\r\n            let wd: CreateWorkspaceData = {\r\n                id: -1,\r\n                isFolder: true,\r\n                name: folder.name,\r\n                path: folder.path\r\n            }\r\n\r\n            that.main.networkManager.sendCreateWorkspace(wd, that.main.workspacesOwnerId, (error: string) => {\r\n                if (error == null) {\r\n                    folder.id = wd.id;\r\n                    successCallback(folder);\r\n\r\n                } else {\r\n                    alert(\"Fehler: \" + error);\r\n                    that.workspaceListPanel.removeElement(newElement);\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        this.workspaceListPanel.moveCallback = (ae: AccordionElement | AccordionElement[]) => {\r\n            if (!Array.isArray(ae)) ae = [ae];\r\n            for (let a of ae) {\r\n                let ws: Workspace = a.externalElement;\r\n                ws.path = a.path.join(\"/\");\r\n                ws.saved = false;\r\n            }\r\n            this.main.networkManager.sendUpdates();\r\n        }\r\n\r\n        this.workspaceListPanel.dropElementCallback = (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => {\r\n            let workspace: Workspace = dest.externalElement;\r\n            let module: Module = droppedElement.externalElement;\r\n\r\n            if (workspace.moduleStore.getModules(false).indexOf(module) >= 0) return; // module is already in destination workspace\r\n\r\n            let f: File = {\r\n                name: module.file.name,\r\n                dirty: true,\r\n                saved: false,\r\n                text: module.file.text,\r\n                text_before_revision: null,\r\n                submitted_date: null,\r\n                student_edited_after_revision: false,\r\n                version: module.file.version,\r\n                panelElement: null\r\n            };\r\n\r\n            if (dropEffekt == \"move\") {\r\n                // move file\r\n                let oldWorkspace = that.main.currentWorkspace;\r\n                oldWorkspace.moduleStore.removeModule(module);\r\n                that.fileListPanel.removeElement(module);\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, () => { });\r\n            }\r\n\r\n            let m = new Module(f, that.main);\r\n            let modulStore = workspace.moduleStore;\r\n            modulStore.putModule(m);\r\n            that.main.networkManager.sendCreateFile(m, workspace, that.main.workspacesOwnerId,\r\n                (error: string) => {\r\n                    if (error == null) {\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n\r\n        }\r\n\r\n\r\n\r\n        this.$homeAction = jQuery('<div class=\"img_home-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Meine eigenen Workspaces anzeigen\">');\r\n\r\n        this.$homeAction.on(mousePointer +'down', (e) => {\r\n            e.stopPropagation();\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n                that.onHomeButtonClicked();\r\n            });\r\n\r\n            that.main.bottomDiv.hideHomeworkTab();\r\n\r\n        })\r\n\r\n        this.workspaceListPanel.addAction(this.$homeAction);\r\n        this.$homeAction.hide();\r\n\r\n        this.workspaceListPanel.contextMenuProvider = (workspaceAccordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            if (this.main.user.is_teacher && this.main.teacherExplorer.classPanel.elements.length > 0) {\r\n                cmiList.push({\r\n                    caption: \"An Klasse austeilen...\",\r\n                    callback: (element: AccordionElement) => { },\r\n                    subMenu: this.main.teacherExplorer.classPanel.elements.map((ae) => {\r\n                        return {\r\n                            caption: ae.name,\r\n                            callback: (element: AccordionElement) => {\r\n                                let klasse = <any>ae.externalElement;\r\n\r\n                                let workspace: Workspace = element.externalElement;\r\n\r\n                                this.main.networkManager.sendDistributeWorkspace(workspace, klasse, null, (error: string) => {\r\n                                    if (error == null) {\r\n                                        let networkManager = this.main.networkManager;\r\n                                        let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                                        alert(\"Der Workspace \" + workspace.name + \" wurde an die Klasse \" + klasse.name + \" ausgeteilt. Er wird in maximal \" +\r\n                                            dt + \" s bei jedem Schüler ankommen.\");\r\n                                    } else {\r\n                                        alert(error);\r\n                                    }\r\n                                });\r\n\r\n                            }\r\n                        }\r\n                    })\r\n                },\r\n                    {\r\n                        caption: \"An einzelne Schüler/innen austeilen...\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let classes: ClassData[] = this.main.teacherExplorer.classPanel.elements.map(ae => ae.externalElement);\r\n                            let workspace: Workspace = element.externalElement;\r\n                            new DistributeToStudentsDialog(classes, workspace, this.main);\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n    }\r\n\r\n    onHomeButtonClicked() {\r\n        this.main.teacherExplorer.restoreOwnWorkspaces();\r\n        this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.ownUpdateFrequencyInSeconds;\r\n        this.$homeAction.hide();\r\n        this.fileListPanel.enableNewButton(this.main.workspaceList.length > 0);\r\n    }\r\n\r\n    renderFiles(workspace: Workspace) {\r\n\r\n        let name = workspace == null ? \"Kein Workspace vorhanden\" : workspace.name;\r\n\r\n        this.fileListPanel.setCaption(name);\r\n        this.fileListPanel.clear();\r\n\r\n        if (this.main.getCurrentWorkspace() != null) {\r\n            for (let module of this.main.getCurrentWorkspace().moduleStore.getModules(false)) {\r\n                module.file.panelElement = null;\r\n            }\r\n        }\r\n\r\n        if (workspace != null) {\r\n            let moduleList: Module[] = [];\r\n\r\n            for (let m of workspace.moduleStore.getModules(false)) {\r\n                moduleList.push(m);\r\n            }\r\n\r\n            moduleList.sort((a, b) => { return a.file.name > b.file.name ? 1 : a.file.name < b.file.name ? -1 : 0 });\r\n\r\n            for (let m of moduleList) {\r\n\r\n                m.file.panelElement = {\r\n                    name: m.file.name,\r\n                    externalElement: m,\r\n                    isFolder: false,\r\n                    path: []\r\n                };\r\n\r\n                this.fileListPanel.addElement(m.file.panelElement, true);\r\n                this.renderHomeworkButton(m.file);\r\n            }\r\n\r\n            this.fileListPanel.sortElements();\r\n\r\n        }\r\n    }\r\n\r\n    renderWorkspaces(workspaceList: Workspace[]) {\r\n\r\n        this.fileListPanel.clear();\r\n        this.workspaceListPanel.clear();\r\n\r\n        for (let w of workspaceList) {\r\n            let path = w.path.split(\"/\");\r\n            if (path.length == 1 && path[0] == \"\") path = [];\r\n            w.panelElement = {\r\n                name: w.name,\r\n                externalElement: w,\r\n                iconClass: 'workspace',\r\n                isFolder: w.isFolder,\r\n                path: path\r\n            };\r\n\r\n            this.workspaceListPanel.addElement(w.panelElement, false);\r\n            w.renderSettingsButton(w.panelElement);\r\n        }\r\n\r\n        this.workspaceListPanel.sortElements();\r\n        this.fileListPanel.enableNewButton(workspaceList.length > 0);\r\n\r\n\r\n\r\n    }\r\n\r\n    renderErrorCount(workspace: Workspace, errorCountMap: Map<Module, number>) {\r\n        if (errorCountMap == null) return;\r\n        for (let m of workspace.moduleStore.getModules(false)) {\r\n            let errorCount: number = errorCountMap.get(m);\r\n            let errorCountS: string = ((errorCount == null || errorCount == 0) ? \"\" : \"(\" + errorCount + \")\");\r\n\r\n            this.fileListPanel.setTextAfterFilename(m.file.panelElement, errorCountS, 'jo_errorcount');\r\n        }\r\n    }\r\n\r\n    setWorkspaceActive(w: Workspace) {\r\n\r\n        if (w != null) {\r\n            this.fileListPanel.$buttonNew.show();\r\n        }\r\n\r\n        this.workspaceListPanel.select(w, false);\r\n\r\n        let callback = (error: string) => {this.initializeDatabaseTool(error, w)};\r\n\r\n        if (w.database == null) {\r\n            this.main.waitOverlay.show(\"Bitte warten, hole Datenbank vom Server ...\");\r\n\r\n            this.main.networkManager.fetchDatabase(w, callback);\r\n        } else {\r\n            callback(null);\r\n        }\r\n\r\n    }\r\n\r\n    initializeDatabaseTool(error: string, w: Workspace) {\r\n        if (error != null) {\r\n            alert(error);\r\n            return;\r\n        }\r\n\r\n        let dbTool = this.main.getDatabaseTool();\r\n\r\n        let statements: string[] = w.database.statements;\r\n        if (statements == null) statements = [];\r\n\r\n        dbTool.initializeWorker(w.database.templateDump, statements,\r\n            () => {\r\n                this.main.currentWorkspace = w;\r\n\r\n                if (this.main.user.id == w.owner_id) {\r\n                    this.main.user.currentWorkspace_id = w.id;\r\n                }\r\n\r\n                this.renderFiles(w);\r\n\r\n                if (w != null) {\r\n                    let nonSystemModules = w.moduleStore.getModules(false);\r\n\r\n                    if (w.currentlyOpenModule != null) {\r\n                        this.setModuleActive(w.currentlyOpenModule);\r\n                    } else if (nonSystemModules.length > 0) {\r\n                        this.setModuleActive(nonSystemModules[0]);\r\n                    } else {\r\n                        this.setModuleActive(null);\r\n                    }\r\n\r\n                    for (let m of nonSystemModules) {\r\n                        m.file.dirty = true;\r\n                    }\r\n\r\n                    if (nonSystemModules.length == 0) {\r\n\r\n                        Helper.showHelper(\"newSQLFileHelper\", this.main, this.fileListPanel.$captionElement);\r\n\r\n                    }\r\n\r\n                    this.main.notifier.connect(w);\r\n\r\n                } else {\r\n                    this.setModuleActive(null);\r\n                }\r\n\r\n            },\r\n            () => {\r\n                this.main.databaseExplorer.refreshAfterRetrievingDBStructure();\r\n                this.main.getHistoryViewer().clearAndShowStatements(w.database.statements);\r\n            });\r\n\r\n    }\r\n\r\n    writeEditorTextToFile() {\r\n        let cem = this.getCurrentlyEditedModule();\r\n        if (cem != null)\r\n            cem.file.text = cem.getProgramTextFromMonacoModel(); // 29.03. this.main.monaco.getValue();\r\n    }\r\n\r\n\r\n    lastOpenModule: Module = null;\r\n    setModuleActive(m: Module) {\r\n\r\n        this.main.bottomDiv.homeworkManager.hideRevision();\r\n\r\n        if (this.lastOpenModule != null) {\r\n            this.lastOpenModule.file.text = this.lastOpenModule.getProgramTextFromMonacoModel(); // this.main.monaco.getValue();\r\n            this.lastOpenModule.editorState = this.main.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (m == null) {\r\n            this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n        } else {\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.main.getMonacoEditor().setModel(m.model);\r\n            if (this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(m.bracketError);\r\n\r\n            if (m.file.text_before_revision != null) {\r\n                this.main.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n            } else {\r\n                this.main.bottomDiv.homeworkManager.hideHomeworkRevisionButton();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setActiveAfterExternalModelSet(m: Module) {\r\n        this.fileListPanel.select(m, false);\r\n\r\n        this.lastOpenModule = m;\r\n\r\n        if (m.editorState != null) {\r\n            this.main.editor.dontPushNextCursorMove++;\r\n            this.main.getMonacoEditor().restoreViewState(m.editorState);\r\n            this.main.editor.dontPushNextCursorMove--;\r\n        }\r\n\r\n        this.setCurrentlyEditedModule(m);\r\n\r\n        this.showProgramPointer();\r\n\r\n        setTimeout(() => {\r\n            if (!this.main.getMonacoEditor().getOptions().get(monaco.editor.EditorOption.readOnly)) {\r\n                this.main.getMonacoEditor().focus();\r\n            }\r\n        }, 300);\r\n\r\n    }\r\n\r\n\r\n    private showProgramPointer() {\r\n\r\n        if (this.programPointerModule == this.getCurrentlyEditedModule() && this.getCurrentlyEditedModule() != null) {\r\n            let position = this.programPointerPosition;\r\n            let range = {\r\n                startColumn: position.column, startLineNumber: position.line,\r\n                endColumn: position.column + position.length, endLineNumber: position.line\r\n            };\r\n\r\n            this.main.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n            this.programPointerDecoration = this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n                {\r\n                    range: range,\r\n                    options: {\r\n                        className: 'jo_revealProgramPointer', isWholeLine: true,\r\n                        overviewRuler: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.OverviewRulerLane.Center\r\n                        },\r\n                        minimap: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    range: range,\r\n                    options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n                }\r\n            ]);\r\n\r\n        }\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        // console statement execution:\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        let module = this.main.currentWorkspace.moduleStore.findModuleByFile(file);\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        this.programPointerModule = module;\r\n        this.programPointerPosition = position;\r\n\r\n        if (module != this.getCurrentlyEditedModule()) {\r\n            this.setModuleActive(module);\r\n        } else {\r\n            this.showProgramPointer();\r\n        }\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws == null) return null;\r\n\r\n        return ws.currentlyOpenModule;\r\n    }\r\n\r\n    setCurrentlyEditedModule(m: Module) {\r\n        if (m == null) return;\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws.currentlyOpenModule != m) {\r\n            ws.currentlyOpenModule = m;\r\n            ws.saved = false;\r\n            m.file.dirty = true;\r\n        }\r\n    }\r\n\r\n    setExplorerColor(color: string) {\r\n        let caption: string;\r\n\r\n        if (color == null) {\r\n            color = \"transparent\";\r\n            caption = \"Meine Datenbanken\";\r\n        } else {\r\n            caption = \"Schüler-DB\";\r\n        }\r\n\r\n        this.fileListPanel.$listElement.parent().css('background-color', color);\r\n        this.workspaceListPanel.$listElement.parent().css('background-color', color);\r\n\r\n        this.workspaceListPanel.setCaption(caption);\r\n    }\r\n\r\n    getNewModule(file: File): Module {\r\n        return new Module(file, this.main);\r\n    }\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class RightDiv {\r\n\r\n    isWholePage: boolean = false;\r\n\r\n    $tabs: JQuery<HTMLElement>;\r\n    $headings: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $rightDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$tabs = $rightDiv.find('.jo_tabs');\r\n        this.$headings = $rightDiv.find('.jo_tabheadings');\r\n        \r\n        let withClassDiagram = this.$headings.find('.jo_classDiagramTabHeading').length > 0;\r\n        let withObjectDiagram = this.$headings.find('.jo_objectDiagramTabHeading').length > 0;\r\n\r\n        let that = this;\r\n        let rightdiv_width: string = \"100%\";\r\n        $rightDiv.find('.jo_whole-window').on(\"click\", () => {\r\n\r\n            that.isWholePage = !that.isWholePage;\r\n            \r\n            let $wholeWindow = jQuery('.jo_whole-window');\r\n\r\n            if (!that.isWholePage) {\r\n                jQuery('#code').css('display', 'flex');\r\n                jQuery('#rightdiv').css('width', rightdiv_width);\r\n                // jQuery('#run').css('width', '');\r\n                $wholeWindow.removeClass('img_whole-window-back');\r\n                $wholeWindow.addClass('img_whole-window');\r\n                jQuery('#controls').insertAfter(jQuery('#view-mode'));\r\n                $wholeWindow.attr('title', 'Auf Fenstergröße vergrößern');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            } else {\r\n                jQuery('#code').css('display', 'none');\r\n                rightdiv_width = jQuery('#rightdiv').css('width');\r\n                jQuery('#rightdiv').css('width', '100%');\r\n                $wholeWindow.removeClass('img_whole-window');\r\n                $wholeWindow.addClass('img_whole-window-back');\r\n                // that.adjustWidthToWorld();\r\n                jQuery('.jo_control-container').append(jQuery('#controls'));\r\n                $wholeWindow.attr('title', 'Auf normale Größe zurückführen');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$rightDiv);\r\n    }\r\n\r\n\r\n\r\n}","import { jo_mouseDetected } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\nexport class Sliders {\r\n\r\n    main: Main;\r\n\r\n    constructor(main: Main) {\r\n        this.main = main;\r\n    }\r\n\r\n    initSliders() {\r\n        let that = this;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        jQuery('#slider1').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider1\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                \r\n                that.moveLeftPanel(dx);\r\n\r\n                x = mm.clientX;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider1\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider1\");\r\n                jQuery(document).off(mousePointer + \"up.slider1\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider2').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider2\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n\r\n                that.moveBottomDiv(dy);\r\n\r\n                y = mm.clientY;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider2\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider2\");\r\n                jQuery(document).off(mousePointer + \"up.slider2\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider3').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider3\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n\r\n                that.moveRightDiv(dx);\r\n\r\n                x = mm.clientX;\r\n                mm.stopPropagation();\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider3\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider3\");\r\n                jQuery(document).off(mousePointer + \"up.slider3\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        let sliderknobLeft = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"left: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobLeft);\r\n        sliderknobLeft.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopImmediatePropagation();\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobleft\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopImmediatePropagation();\r\n\r\n                that.moveLeftPanel(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobleft\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobleft\");\r\n                jQuery(document).off(mousePointer + \"up.knobleft\");\r\n            });\r\n\r\n        });\r\n\r\n        let sliderknobRight = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"right: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobRight);\r\n        sliderknobRight.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopImmediatePropagation();\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobright\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopImmediatePropagation();\r\n\r\n                that.moveRightDiv(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobright\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobright\");\r\n                jQuery(document).off(mousePointer + \"up.knobright\");\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n    \r\n    moveRightDiv(dx: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $rightDiv = jQuery('#rightdiv');\r\n\r\n        let width = Number.parseInt($rightDiv.css('width').replace('px', ''));\r\n        $rightDiv.css('width', (width - dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth + dx) + \"px\");\r\n        \r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n        jQuery('.jo_graphics').trigger('sizeChanged');\r\n        width += dx;\r\n}\r\n    moveBottomDiv(dy: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $bottomDiv = jQuery('#bottomdiv-outer');\r\n\r\n        let height = Number.parseInt($bottomDiv.css('height').replace('px', ''));\r\n        $bottomDiv.css('height', (height - dy) + \"px\");\r\n\r\n        let meheight = Number.parseInt($editor.css('height').replace('px', ''));\r\n        $editor.css('height', (meheight + dy) + \"px\");\r\n\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n}\r\n\r\n    moveLeftPanel(dx: number) {\r\n        let $leftPanel = jQuery('#leftpanel');\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n\r\n        let width = Number.parseInt($leftPanel.css('width').replace('px', ''));\r\n        $leftPanel.css('width', (width + dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth - dx) + \"px\");\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionPanel, AccordionElement } from \"./Accordion.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassData, UserData, CRUDUserRequest, CRUDClassRequest, GetWorkspacesResponse, GetWorkspacesRequest, Workspaces } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\nexport class TeacherExplorer {\r\n\r\n    studentPanel: AccordionPanel;\r\n    classPanel: AccordionPanel;\r\n\r\n    // save them here when displaying pupils workspaces:\r\n    ownWorkspaces: Workspace[];\r\n    currentOwnWorkspace: Workspace;\r\n\r\n    constructor(private main: Main, private classData: ClassData[]) {\r\n\r\n    }\r\n\r\n    removePanels() {\r\n        this.classPanel.remove();\r\n        this.studentPanel.remove();\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.initStudentPanel();\r\n\r\n        this.initClassPanel();\r\n\r\n        this.renderClasses(this.classData);\r\n\r\n    }\r\n\r\n    initStudentPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.studentPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Schüler/innen\", \"2\", null,\r\n            \"\", \"student\", false, false, \"student\", false, []);\r\n\r\n        this.studentPanel.selectCallback = (ae: UserData) => {\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let request: GetWorkspacesRequest = {\r\n                    ws_userId: ae.id,\r\n                    userId: this.main.user.id,\r\n                    language: 1\r\n                }\r\n\r\n                ajax(\"getWorkspaces\", request, (response: GetWorkspacesResponse) => {\r\n                    if (response.success == true) {\r\n\r\n                        if (that.main.workspacesOwnerId == that.main.user.id) {\r\n                            that.ownWorkspaces = that.main.workspaceList.slice();\r\n                            that.currentOwnWorkspace = that.main.currentWorkspace;\r\n                        }\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces);\r\n                        that.main.workspacesOwnerId = ae.id;\r\n                        that.main.projectExplorer.setExplorerColor(\"rgba(255, 0, 0, 0.2\");\r\n                        that.main.projectExplorer.$homeAction.show();\r\n                        Helper.showHelper(\"homeButtonHelper\", this.main);\r\n\r\n                        that.main.bottomDiv.showHomeworkTab();\r\n                        that.main.bottomDiv.homeworkManager.attachToWorkspaces(that.main.workspaceList);\r\n                    }\r\n\r\n                    this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n                    this.main.networkManager.secondsTillNextUpdate = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    restoreOwnWorkspaces() {\r\n        let main = this.main;\r\n\r\n        // main.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n        main.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        main.workspaceList = this.ownWorkspaces;\r\n        main.currentWorkspace = this.currentOwnWorkspace;\r\n        main.workspacesOwnerId = main.user.id;\r\n        main.projectExplorer.setExplorerColor(null);\r\n\r\n        main.projectExplorer.renderWorkspaces(main.workspaceList);\r\n\r\n        if (main.currentWorkspace == null && main.workspaceList.length > 0) {\r\n            main.currentWorkspace = main.workspaceList[0];\r\n        }\r\n\r\n        if (main.currentWorkspace != null) {\r\n            main.projectExplorer.setWorkspaceActive(main.currentWorkspace);\r\n        }\r\n\r\n        this.studentPanel.select(null, false);\r\n\r\n    }\r\n\r\n    initClassPanel() {\r\n        let that = this;\r\n\r\n        this.classPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Klassen\", \"1\", null, \"\", \"class\", false, false, \"class\", false, []);\r\n\r\n        this.classPanel.selectCallback = (ea) => {\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let classData = <ClassData>ea;\r\n                if (classData != null) {\r\n                    this.renderStudents(classData.students);\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    renderStudents(userDataList: UserData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        userDataList.sort((a, b) => {\r\n            if (a.familienname > b.familienname) return 1;\r\n            if (b.familienname > a.familienname) return -1;\r\n            if (a.rufname > b.rufname) return 1;\r\n            if (b.rufname > a.rufname) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let ud of userDataList) {\r\n            let ae: AccordionElement = {\r\n                name: ud.familienname + \", \" + ud.rufname,\r\n                sortName: ud.familienname + \" \" + ud.rufname,\r\n                externalElement: ud,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.studentPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n    renderClasses(classDataList: ClassData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        classDataList.sort((a, b) => {\r\n            if (a.name > b.name) return 1;\r\n            if (b.name > a.name) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let cd of classDataList) {\r\n            let ae: AccordionElement = {\r\n                name: cd.name,\r\n                externalElement: cd,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.classPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\n\r\nexport type Theme = {\r\n    name: string,\r\n    monacoTheme: string,\r\n    cssColors: { [color: string]: string }\r\n}\r\n\r\nexport class ThemeManager {\r\n\r\n    themes: Theme[] = [];\r\n\r\n    constructor() {\r\n        this.initThemes();\r\n    }\r\n\r\n    switchTheme(name: string) {\r\n        for (let theme of this.themes) {\r\n            if (theme.name == name) {\r\n                this.internalSwitchTheme(theme);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    internalSwitchTheme(theme: Theme) {\r\n        monaco.editor.setTheme(theme.monacoTheme);\r\n\r\n        let root = document.documentElement;\r\n        for (const key of Object.keys(theme.cssColors)) {\r\n            const value = theme.cssColors[key]\r\n\r\n            root.style.setProperty(key, value);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    initThemes() {\r\n\r\n        this.themes.push({\r\n            name: \"dark\",\r\n            monacoTheme: \"myCustomThemeDark\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"#1e1e1e\",\r\n                \"--backgroundLight\": \"#252526\",\r\n                \"--backgroundHeading\": \"#37373d\",\r\n                \"--backgroundSelected\": \"#2a2d2e\",\r\n                \"--fontColorNormal\": \"#c2cccc\",\r\n                \"--fontColorLight\": \"#e7e7e7\",\r\n                \"--slider\": \"#414141\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#1e1e1e\",\r\n                \"--scrollbar-thumb\": \"#3e3e3e\",\r\n                \"--scrollbar-thumb-hover\": \"#5e5e5e\",\r\n                \"--scrollbar-thumb-active\": \"#7e7e7e\",\r\n                \"--submenu-hover\": \"#094771\",\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#616162\",\r\n                \"--file-hover\": \"hsla(0, 0%, 38%, 0.125)\",\r\n                \"--file-active\": \"#094771\",\r\n                \"--file-active-hover\": \"rgba(9, 71, 113, 0.827)\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"blue\",\r\n                \"--contextmenu-background\": \"#3c3c3c\",\r\n                \"--contextmenu-color\": \"rgb(212,212,212)\",\r\n                \"--contextmenu-hover-background\": \"#094771\",\r\n                \"--contextmenu-hover-color\": \"#ffffff\",\r\n                \"--error-filename\": \"#2a709e\",\r\n                \"--error-line-ative\": \"#094771\",\r\n                \"--error-line-hover\": \"rgba(96, 96, 96, 0.125)\",\r\n                \"--error-position\": \"#c0802d\",\r\n                \"--linecolumn\": \"#14c714\",\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#2b2b7d2f\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"rgb(85,85,85)\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#383838\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#252526\",\r\n                \"--editorTooltip-border\": \"#454545\",\r\n\r\n                \"--renameInput-color\": \"#ffffff\",\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"white\",\r\n                \"--bottomdiv-tabheading-active\": \"rgb(97,97,255)\",\r\n                \"--noErrorMessage\": \"rgb(37, 211, 37)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"#1e1e1e\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"white\",\r\n                \"--consoleEntryIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"white\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 51, 51)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--deValue\": \"white\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#383838\",\r\n                \"--helper-border-color\": \"#d4d4d4\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#ffffff\",\r\n                \"--runInputColor\": \"#ffffff\",\r\n                \"--runBackgroundColor\": \"rgba(255, 255, 255, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n        let highlightColor = \"#8080ff\";\r\n\r\n        this.themes.push({\r\n            name: \"light\",\r\n            monacoTheme: \"myCustomThemeLight\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"white\",\r\n                \"--backgroundLight\": \"#f3f3f3\",\r\n                \"--backgroundHeading\": \"#dcdcdc\",\r\n                \"--backgroundSelected\": \"#e8e8e8\",\r\n                \"--fontColorNormal\": \"#756161\",\r\n                \"--fontColorLight\": \"#756161\",\r\n                \"--slider\": \"#b0b0b0\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#e3e3e3\",\r\n                \"--scrollbar-thumb\": \"#bababa\",\r\n                \"--scrollbar-thumb-hover\": \"#8e8e8e\",\r\n                \"--scrollbar-thumb-active\": \"#616161\",\r\n                \"--submenu-hover\": highlightColor,\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#cfcfcf\",\r\n                \"--file-hover\": \"#e8e8e8\",\r\n                \"--file-active\": highlightColor,\r\n                \"--file-active-hover\": \"#a0a0ff\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"white\",\r\n                \"--contextmenu-background\": \"white\",\r\n                \"--contextmenu-color\": \"#756161\",\r\n                \"--contextmenu-hover-background\": highlightColor,\r\n                \"--contextmenu-hover-color\": \"#a0a0ff\",\r\n                \"--error-filename\": \"#ff0000\",\r\n                \"--error-line-ative\": \"#ffa0a0\",\r\n                \"--error-line-hover\": \"#ffc0c0\",\r\n                \"--error-position\": \"#804040\",\r\n                \"--linecolumn\": \"#14c714\", // TODO\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#babaec80\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"#c0c0c0\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#e0e0e0\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#e0e0e0\",\r\n                \"--editorTooltip-border\": \"#9d9d9d\",\r\n\r\n                \"--renameInput-color\": \"#000000\",\r\n\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"#424242\",\r\n                \"--bottomdiv-tabheading-active\": \"#424242\",\r\n                \"--noErrorMessage\": \"rgb(17, 180, 17)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"white\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"#0000a0\",\r\n                \"--consoleEntryIdentifier\": \"black\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"#756161\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 21, 21)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"black\",\r\n                \"--deValue\": \"#0000a0\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#f3f3f3\",\r\n                \"--helper-border-color\": \"#606060\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#303030\",\r\n                \"--runInputColor\": \"#000000\",\r\n                \"--runBackgroundColor\": \"rgba(0, 0, 0, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","export type DialogButton = {\r\n    caption: string,\r\n    color: string,\r\n    callback: () => void\r\n}\r\n\r\nexport class Dialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            '<div style=\"flex: 1\"></div>' +\r\n            '<div class=\"dialog-main\"></div>' +\r\n            '<div style=\"flex: 4\"></div>'\r\n        ));\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n    }\r\n\r\n    heading(text: string) {\r\n        let $div = jQuery('<div class=\"dialog-heading\">' + text + \"</div>\")\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    description(text: string, color?: string) {\r\n        let colorStyle = color == null ? \"\" : `style=\"color: ${color}\"`;\r\n        let $div = jQuery(`<div class=\"dialog-description\" ${colorStyle}>${text}</div>`)\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    input(type: string, placeholder: string):JQuery<HTMLInputElement> {\r\n        let $div = jQuery(`<input class=\"dialog-input\" type=\"${type}\" placeholder=\"${placeholder}\"></input>`)\r\n        this.$dialogMain.append($div);\r\n        return <any>$div;\r\n    }\r\n\r\n    buttons(buttons: DialogButton[]){\r\n\r\n        let $buttonRow = jQuery('<div class=\"dialog-buttonRow\"></div>')\r\n        this.$dialogMain.append($buttonRow);\r\n\r\n        for(let button of buttons){\r\n\r\n            let $button = jQuery(`<button style=\"background-color: ${button.color};margin-left: 20px\">${button.caption}</button>`)\r\n            $button.on(\"click\", () => {button.callback()})\r\n            $buttonRow.append($button);\r\n        }\r\n    }\r\n\r\n    waitMessage(text: string): (visible: boolean) => void {\r\n\r\n        let $message = jQuery(`<div class=\"dialog-wait\">${text}<img src=\"assets/projectexplorer/svg-loaders/ball-triangle.svg\"></div>`)\r\n        this.$dialogMain.append($message);\r\n\r\n        return (visible: boolean) => {\r\n            let visibility = visible ? \"visible\" : \"hidden\";\r\n            $message.css(\"visibility\", visibility);\r\n        }\r\n\r\n    }\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { openContextMenu, ContextMenuItem } from \"../../tools/HtmlTools.js\";\r\nimport { Dialog } from \"./Dialog.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\n\r\nexport class UserMenu {\r\n\r\n\r\n\r\n    constructor(private main: Main){\r\n        \r\n    }\r\n\r\n    init(){\r\n        let $userSettingsButton = jQuery('#buttonUserSettings');\r\n        let that = this;\r\n\r\n        $userSettingsButton.on(\"click\", (e) => {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [\r\n                {\r\n                    caption: \"Passwort ändern...\",\r\n                    callback: () => {\r\n                        let passwortChanger = new PasswordChanger(that.main);\r\n                        passwortChanger.show();\r\n                    }\r\n                }\r\n            ]\r\n\r\n\r\n            openContextMenu(contextMenuItems, $userSettingsButton.offset().left, $userSettingsButton.offset().top + $userSettingsButton.height());\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class PasswordChanger {\r\n\r\n    dialog: Dialog;\r\n\r\n    constructor(private main: Main){\r\n\r\n        this.dialog = new Dialog();\r\n\r\n    }\r\n\r\n    show() {\r\n        this.dialog.init();\r\n        this.dialog.heading(\"Passwort ändern\");\r\n        this.dialog.description(\"Bitte geben Sie Ihr bisheriges Passwort und darunter zweimal Ihr neues Passwort ein. <br>\" + \r\n        \"Das Passwort muss mindestens 8 Zeichen lang sein und sowohl Buchstaben als auch Zahlen oder Sonderzeichen enthalten.\")\r\n        let $oldPassword = this.dialog.input(\"password\", \"Altes Passwort\");\r\n        let $newPassword1 = this.dialog.input(\"password\", \"Neues Passwort\");\r\n        let $newPassword2 = this.dialog.input(\"password\", \"Neues Passwort wiederholen\");\r\n        let $errorDiv = this.dialog.description(\"\", \"red\");\r\n        let waitDiv = this.dialog.waitMessage(\"Bitte warten...\")\r\n\r\n        this.dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {this.dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    if($newPassword1.val() != $newPassword2.val()){\r\n                        $errorDiv.text(\"Die zwei eingegebenen neuen Passwörter stimmen nicht überein.\")\r\n                    } else {\r\n                        waitDiv(true);\r\n                        ajax(\"changePassword\", {oldPassword: $oldPassword.val(), newPassword: $newPassword1.val()}, () => {\r\n                            waitDiv(false);\r\n                            alert(\"Das Passwort wurde erfolgreich geändert.\");\r\n                            this.dialog.close();\r\n                        }, (message) => {\r\n                            waitDiv(false);\r\n                            $errorDiv.text(message)\r\n                        })\r\n                    }\r\n\r\n                }\r\n            },\r\n        ])\r\n    }\r\n\r\n}","import { ajax } from \"../communication/AjaxHelper.js\";\r\nimport { LoginRequest, LoginResponse, LogoutRequest, UserData } from \"../communication/Data.js\";\r\nimport { Main } from \"./Main.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { userInfo } from \"os\";\r\nimport { UserMenu } from \"./gui/UserMenu.js\";\r\nimport { escapeHtml } from \"../tools/StringTools.js\";\r\n\r\nexport class Login {\r\n\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        let that = this;\r\n\r\n        let $loginSpinner = jQuery('#login-spinner>img');\r\n\r\n        jQuery('#login-username').focus();\r\n\r\n        jQuery('#login-username').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-password').focus();\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-button').focus();\r\n                jQuery('#login-button').addClass('jo_active');\r\n            }\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-button').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-username').focus();\r\n                jQuery('#login-button').removeClass('jo_active');\r\n            } else {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        // Avoid double login when user does doubleclick:\r\n        let loginHappened = false;\r\n        jQuery('#login-button').on('click', () => {\r\n\r\n            $loginSpinner.show();\r\n\r\n            if (loginHappened) return;\r\n            loginHappened = true;\r\n\r\n            setTimeout(() => {\r\n                loginHappened = false;\r\n            }, 1000);\r\n\r\n            let loginRequest: LoginRequest = {\r\n                username: <string>jQuery('#login-username').val(),\r\n                password: <string>jQuery('#login-password').val(),\r\n                language: 1\r\n            }\r\n\r\n            ajax('login', loginRequest, (response: LoginResponse) => {\r\n\r\n                if (!response.success) {\r\n                    jQuery('#login-message').html('Fehler: Benutzername und/oder Passwort ist falsch.');\r\n                } else {\r\n\r\n                    // We don't do this anymore for security reasons - see AjaxHelper.ts\r\n                    // Alternatively we now set a long expiry interval for cookie.\r\n                    // credentials.username = loginRequest.username;\r\n                    // credentials.password = loginRequest.password;\r\n\r\n                    jQuery('#login').hide();\r\n\r\n                    this.main.waitOverlay.show('Bitte warten...');\r\n\r\n                    let user: UserData = response.user;\r\n                    if (user.settings == null || user.settings.helperHistory == null) {\r\n                        user.settings = {\r\n                            helperHistory: {\r\n                            },\r\n                            viewModes: null,\r\n                            classDiagram: null\r\n                        }\r\n                    }\r\n\r\n                    this.main.waitForGUICallback = () => {\r\n\r\n                        that.main.mainMenu.initGUI(user);\r\n\r\n                        that.main.waitOverlay.hide();\r\n                        $loginSpinner.hide();\r\n                        jQuery('#menupanel-username').html(escapeHtml(user.rufname) + \" \" + escapeHtml(user.familienname));\r\n\r\n                        new UserMenu(that.main).init();\r\n\r\n                        if (user.is_teacher) {\r\n                            that.main.initTeacherExplorer(response.classdata);\r\n                        }\r\n\r\n                        that.main.user = user;\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces);\r\n                        that.main.workspacesOwnerId = user.id;\r\n\r\n                        that.main.networkManager.initializeTimer();\r\n\r\n                        that.main.projectExplorer.fileListPanel.setFixed(!user.is_teacher);\r\n                        that.main.projectExplorer.workspaceListPanel.setFixed(!user.is_teacher);\r\n\r\n                        that.main.viewModeController.initViewMode();\r\n                        that.main.bottomDiv.hideHomeworkTab();\r\n\r\n                    }\r\n\r\n                    if (this.main.startupComplete == 0) {\r\n                        this.main.waitForGUICallback();\r\n                        this.main.waitForGUICallback = null;\r\n                    }\r\n\r\n                }\r\n\r\n            }, (errorMessage: string) => {\r\n                jQuery('#login-message').html('Login gescheitert: ' + errorMessage);\r\n            }\r\n            );\r\n\r\n        });\r\n\r\n        jQuery('#buttonLogout').on('click', () => {\r\n\r\n            this.main.waitOverlay.show('Bitte warten, der letzte Bearbeitungsstand wird noch gespeichert ...');\r\n\r\n            if (this.main.workspacesOwnerId != this.main.user.id) {\r\n                this.main.projectExplorer.onHomeButtonClicked();\r\n            }\r\n\r\n            this.main.networkManager.sendUpdates(() => {\r\n\r\n                let logoutRequest: LogoutRequest = {\r\n                    currentWorkspaceId: this.main.currentWorkspace?.id\r\n                }\r\n\r\n                ajax('logout', logoutRequest, () => {\r\n                    // window.location.href = 'index.html';\r\n                    this.main.networkManager.sendUpdateUserSettings(() => {});\r\n\r\n                    jQuery('#login').show();\r\n                    this.main.waitOverlay.hide();\r\n                    jQuery('#login-message').empty();\r\n                    this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"\", \"myJava\"));\r\n                    this.main.projectExplorer.fileListPanel.clear();\r\n                    this.main.projectExplorer.workspaceListPanel.clear();\r\n\r\n                    this.main.databaseExplorer.clear();\r\n                    this.main.resultsetPresenter.clear();\r\n\r\n                    if (this.main.user.is_teacher) {\r\n                        this.main.teacherExplorer.removePanels();\r\n                        this.main.teacherExplorer = null;\r\n                    }\r\n\r\n\r\n                    this.main.currentWorkspace = null;\r\n                    this.main.user = null;\r\n\r\n\r\n                });\r\n            });\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\nimport { ViewModes, ViewMode } from \"../../communication/Data\";\r\n\r\nexport class ViewModeController {\r\n\r\n    $buttonEditorFullscreen: JQuery<HTMLElement>;\r\n    $buttonPresentationMode: JQuery<HTMLElement>;\r\n    $buttonMonitorMode: JQuery<HTMLElement>;\r\n\r\n    $buttonMap: { [key: string]: JQuery<HTMLElement> } = {};\r\n\r\n    highContrast: boolean = false;\r\n    editorHasFullWidth: boolean = false;\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private main: Main) {\r\n\r\n        this.$buttonEditorFullscreen = jQuery('<div title=\"Editor in voller Breite\" class=\"img_whole-window jo_button jo_active\" style=\"padding: 1px; margin-right: 20px\"></div>');\r\n        this.$buttonPresentationMode = jQuery('<div title=\"Präsentation (Beamer)\" class=\"img_presentation-mode jo_button jo_active\" syle=\"padding: 1px\"></div>');\r\n        this.$buttonMonitorMode = jQuery('<div title=\"Monitor\" class=\"img_monitor-mode jo_button jo_active\" style=\"margin-left: 5px; padding: 1px\"></div>');\r\n        $buttonsContainer.append(this.$buttonEditorFullscreen, this.$buttonPresentationMode, this.$buttonMonitorMode);\r\n\r\n        this.$buttonMap = {\r\n            \"presentation\": this.$buttonPresentationMode,\r\n            \"monitor\": this.$buttonMonitorMode\r\n        };\r\n\r\n        let am = this.main.actionManager;\r\n\r\n        am.registerAction(\"editor.fullwidth\", [],\r\n            () => {\r\n                this.toggleEditorFullwidth();\r\n            }, \"Editor auf die volle Breite erweitern\", this.$buttonEditorFullscreen);\r\n\r\n        am.registerAction(\"viewmode.presentation\", [],\r\n            () => {\r\n                this.setMode(\"presentation\");\r\n            }, \"Präsentationsansicht\", this.$buttonPresentationMode);\r\n\r\n        am.registerAction(\"viewmode.monitor\", [],\r\n            () => {\r\n                this.setMode(\"monitor\");\r\n            }, \"Monitoransicht\", this.$buttonMonitorMode);\r\n\r\n    }\r\n\r\n    toggleEditorFullwidth() {\r\n        if(this.editorHasFullWidth){\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in voller Breite');\r\n            jQuery('#rightdiv').show(600);\r\n            jQuery('#leftpanel').show(600);\r\n            jQuery('#controls').show();\r\n        } else {\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in normaler Breite');\r\n            jQuery('#rightdiv').hide(600);\r\n            jQuery('#leftpanel').hide(600);\r\n            jQuery('#controls').hide();\r\n        }\r\n\r\n        setTimeout(()=>{\r\n            this.main.getMonacoEditor().layout();\r\n        }, 800);\r\n\r\n        this.editorHasFullWidth = !this.editorHasFullWidth;\r\n    }\r\n\r\n    setMode(mode: \"presentation\" | \"monitor\", saveSettings: boolean = true) {\r\n\r\n        let otherMode = mode == \"presentation\" ? \"monitor\" : \"presentation\";\r\n\r\n        this.$buttonMap[mode].addClass(\"jo_pressed\");\r\n        this.$buttonMap[otherMode].removeClass(\"jo_pressed\");\r\n\r\n        let settings = this.main.user.settings;\r\n        let viewModes = settings.viewModes;\r\n\r\n        let viewMode = viewModes[mode];\r\n        viewModes.viewModeChosen = mode;\r\n\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n\r\n        this.main.editor.setFontSize(viewMode.fontSize);\r\n\r\n        if (this.highContrast != viewMode.highContrast) {\r\n            let editor = this.main.getMonacoEditor();\r\n            editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n            this.highContrast = !this.highContrast;\r\n        }\r\n\r\n        if (saveSettings) this.saveSettings();\r\n\r\n    }\r\n\r\n    saveFontSize(fontSizePx: number) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.fontSize = fontSizePx;\r\n        this.saveSettings();\r\n    }\r\n\r\n    setTheme(theme: string) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.theme = theme;\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n        this.saveSettings();\r\n    }\r\n\r\n    toggleHighContrast() {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.highContrast = !viewMode.highContrast;\r\n        let editor = this.main.getMonacoEditor();\r\n        editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n        this.saveSettings();\r\n    }\r\n\r\n    getChosenViewMode(): ViewMode {\r\n        let viewModes = this.main.user.settings.viewModes;\r\n        return viewModes[viewModes.viewModeChosen];\r\n    }\r\n\r\n    saveSettings() {\r\n        this.main.userDataDirty = true;\r\n    }\r\n\r\n    initViewMode() {\r\n        let settings = this.main.user.settings;\r\n\r\n        if (settings[\"viewModes\"] == null) {\r\n            settings[\"viewModes\"] = {\r\n                monitor: null,\r\n                presentation: null,\r\n                viewModeChosen: \"monitor\"\r\n            }\r\n        }\r\n\r\n        if (settings.viewModes.monitor == null) {\r\n            settings.viewModes.monitor = {\r\n                fontSize: 14,\r\n                highContrast: false,\r\n                theme: \"dark\"\r\n            };\r\n\r\n            settings.viewModes.presentation = {\r\n                fontSize: 18,\r\n                highContrast: false,\r\n                theme: \"light\"\r\n            }\r\n            this.saveSettings();\r\n        }\r\n        this.setMode(settings.viewModes.viewModeChosen, false);\r\n    }\r\n\r\n\r\n}","import { Main } from \"../../main/Main.js\";\r\nimport { TextPosition } from \"../lexer/Token\";\r\nimport { Module } from \"./Module\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype SemicolonPosition = {\r\n    position: TextPosition;\r\n    module: Module;\r\n    firstSeenMs: number;\r\n    isThereAgain: boolean;\r\n}\r\n\r\nexport class SemicolonAngel {\r\n    \r\n    semicolonPositions: SemicolonPosition[] = [];\r\n    time: number;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    startRegistering(){\r\n        this.semicolonPositions.forEach(p => p.isThereAgain = false);\r\n        this.time = new Date().getTime();\r\n    }\r\n\r\n    register(position: TextPosition, module: Module){\r\n        let oldEvidence = this.semicolonPositions.find(p => p.position.line == position.line && p.position.column == position.column);\r\n        if(oldEvidence){\r\n            oldEvidence.isThereAgain = true;\r\n        } else {\r\n            this.semicolonPositions.push({position: position, firstSeenMs: this.time, isThereAgain: true, module: module});\r\n        }\r\n    }\r\n\r\n    healSemicolons(){\r\n        let time = new Date().getTime();\r\n        this.semicolonPositions = this.semicolonPositions.filter(p => p.isThereAgain);\r\n\r\n        let currentlyEditedModule = this.main.getCurrentlyEditedModule();\r\n        let cursorLine = this.main.getMonacoEditor().getPosition().lineNumber;\r\n\r\n        this.semicolonPositions.filter(p => time - p.firstSeenMs > 2000).forEach(p => {\r\n\r\n            let isCurrentModule = p.module.file.id != null && p.module.file.id == currentlyEditedModule.file.id;\r\n\r\n            let editOperations: monaco.editor.IIdentifiedSingleEditOperation[] = [\r\n                {\r\n                    range: new monaco.Range(p.position.line, p.position.column, p.position.line, p.position.column),\r\n                    text: \";\",\r\n                    forceMoveMarkers: true\r\n                }\r\n            ]\r\n\r\n            if(isCurrentModule){\r\n                if(Math.abs(cursorLine - p.position.line) > 1){\r\n                    let editor = this.main.getMonacoEditor();\r\n                    const selection = editor.getSelection();\r\n                    editor.executeEdits('Semicolon-Angel', editOperations);\r\n                    editor.setSelection(selection);\r\n                    this.semicolonPositions.splice(this.semicolonPositions.indexOf(p), 1);\r\n                }\r\n            } \r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\nimport { Table, Column } from \"../../compiler/parser/SQLTable.js\";\nimport { DatabaseStructure } from \"../../tools/DatabaseTools.js\";\n\nexport class DatabaseExplorer {\n\n    collapsedTables: Map<string, boolean> = new Map();\n\n    constructor(private main: MainBase, public $mainDiv: JQuery<HTMLElement>) {\n\n    }\n\n    refresh() {\n\n        let dbTool = this.main.getDatabaseTool();\n\n        dbTool.retrieveDatabaseStructure((dbstructure: DatabaseStructure) => {\n\n            this.refreshAfterRetrievingDBStructure();\n        });\n\n    }\n\n    clear(){\n        this.$mainDiv.empty();\n    }\n\n    refreshAfterRetrievingDBStructure() {\n        let dbTool = this.main.getDatabaseTool();\n        let workspace = this.main.getCurrentWorkspace();\n        if (workspace != null) {\n            for (let m of workspace.moduleStore.getModules(false)) {\n                m.file.dirty = true;\n            }\n        }\n\n        let tables = Table.fromTableStructureList(dbTool.databaseStructure.tables);\n\n        this.$mainDiv.empty();\n\n        for (let table of tables) {\n            if(table.identifier != \"sqlite_sequence\"){\n                let $table = this.renderTable(table);\n                this.$mainDiv.append($table);\n            }\n        }\n\n    }\n\n    renderTable(table: Table): JQuery<HTMLElement> {\n        let isCollapsed = this.collapsedTables.get(table.identifier) != null;\n\n        let $table = jQuery(\n            `<div class=\"jo_table\">\n           <div class=\"jo_tableheader\">\n              <div class=\"${isCollapsed ? 'img_tree-collapsed-dark' : 'img_tree-expanded-dark'} jo_treeswitch jo_button jo_active\"></div>\n              <div class=\"jo_tableheaderlink\">\n                <div class=\"img_table\"></div>\n                <div>${table.identifier}</div></div><div class=\"jo_tablesize\">(${table.size}&nbsp;Datensätze)</div>\n              </div>\n            </div>\n        </div>`);\n\n        $table.find('.jo_tableheader').on('pointerdown', () => {\n            this.main.getResultsetPresenter().showTable(table.identifier);\n\n        })\n\n        let $columns = jQuery('<div class=\"jo_columnlist\"></div>')\n\n        for (let column of table.columns) {\n            let image = column.isPrimaryKey ? \"img_key\" : \"img_column\";\n\n            let referencesHtml = \"\";\n            if (column.references != null) {\n                referencesHtml = `<div class=\"img_foreign_key\" style=\"margin-left: 5px\"></div><div class=\"jo_references\">${column.references.table.identifier}.${column.references.identifier}</div>`\n            }\n\n            let type = column.type == null ? \"\" : column.type.toString();\n            let notNull: string = column.notNull ? '<div class=\"jo_dbnotnull\">not null</div>' : \"\";\n            let defaultValue: string = column.defaultValue ? `<div class=\"jo_dbdefault\">default ${column.defaultValue}</div>` : \"\";\n            let autoincrement: string = column.isAutoIncrement ? `<div class=\"jo_dbautoincrement\">autoincrement</div>` : \"\";\n\n            let $column = jQuery(`\n            <div class=\"jo_column\">\n                <div class=\"${image}\"></div>\n                <div>${column.identifier}</div>\n                <div class=\"jo_dbtype\">${type}</div>\n                ${autoincrement}\n                ${referencesHtml}\n                ${notNull}\n                ${defaultValue}\n            </div>\n            `);\n            $columns.append($column);\n        }\n\n        $table.append($columns);\n\n        let $treeSwitch = $table.find('.jo_treeswitch');\n        let that = this;\n        $treeSwitch.on('click', () => {\n            let collapsed = $treeSwitch.hasClass('img_tree-collapsed-dark');\n            if (collapsed) {\n                $treeSwitch.removeClass('img_tree-collapsed-dark');\n                $treeSwitch.addClass('img_tree-expanded-dark');\n                $columns.slideDown(300);\n                that.collapsedTables.delete(table.identifier);\n            } else {\n                $treeSwitch.removeClass('img_tree-expanded-dark');\n                $treeSwitch.addClass('img_tree-collapsed-dark');\n                $columns.slideUp(300);\n                that.collapsedTables.set(table.identifier, true);\n            }\n        });\n\n        return $table;\n    }\n\n\n\n}","// <div id=\"controls\">\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n// </div>\r\n\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { ResultsetPresenter } from \"./ResultsetPresenter.js\";\r\n\r\n\r\nexport class ProgramControlButtons {\r\n\r\n    $buttonStart: JQuery<HTMLElement>;\r\n    // $buttonPause: JQuery<HTMLElement>;\r\n    // $buttonStop: JQuery<HTMLElement>;\r\n    // $buttonStepOver: JQuery<HTMLElement>;\r\n    // $buttonStepInto: JQuery<HTMLElement>;\r\n    // $buttonStepOut: JQuery<HTMLElement>;\r\n    // $buttonRestart: JQuery<HTMLElement>;\r\n\r\n    // $buttonEdit: JQuery<HTMLElement>;\r\n\r\n\r\n    constructor(private main: MainBase, private $buttonsContainer: JQuery<HTMLElement>) {\r\n\r\n        this.$buttonStart = jQuery('<div title=\"Start\" class=\"img_start-dark jo_button\"></div>');\r\n        let am = this.main.getActionManager();\r\n\r\n        am.registerAction(\"execute\", ['Strg + Enter'],\r\n            () => {\r\n                if (am.isActive(\"execute\")) {\r\n\r\n                    this.main.getResultsetPresenter().executeSelectedStatements();\r\n                }\r\n\r\n            }, \"SQL-Statement ausführen\", this.$buttonStart\r\n        );\r\n\r\n        am.setActive('execute',false);\r\n\r\n        // this.$buttonPause = jQuery('<div title=\"Pause\" class=\"img_pause-dark jo_button\"></div>');\r\n        // this.$buttonStop = jQuery('<div title=\"Stop\" class=\"img_stop-dark jo_button\"></div>');\r\n        // this.$buttonStepOver = jQuery('<div title=\"Step over\" class=\"img_step-over-dark jo_button\"></div>');\r\n        // this.$buttonStepInto = jQuery('<div title=\"Step into\" class=\"img_step-into-dark jo_button\"></div>');\r\n        // this.$buttonStepOut = jQuery('<div title=\"Step out\" class=\"img_step-out-dark jo_button\"></div>');\r\n        // this.$buttonRestart = jQuery('<div title=\"Restart\" class=\"img_restart-dark jo_button\"></div>');\r\n\r\n        // this.$buttonEdit = jQuery('<div class=\"jo_editButton\" title=\"Programm anhalten damit der Programmtext bearbeitbar wird\"></div>')\r\n        // $editorContainer.append(this.$buttonEdit);\r\n\r\n        $buttonsContainer.append(this.$buttonStart\r\n            // , this.$buttonPause, this.$buttonStop,\r\n            // this.$buttonStepOver, this.$buttonStepInto, this.$buttonStepOut, this.$buttonRestart\r\n        );\r\n\r\n        // <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n        // <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n        // <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n        // <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n        // <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n        // <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n        // <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n        // <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n\r\n\r\n\r\n    }\r\n\r\n}","import { TokenType } from \"../lexer/Token.js\";\r\nimport { ASTNode, ConstantNode, CreateTableColumnNode, CreateTableNode, ForeignKeyInfo, InsertNode } from \"./AST.js\";\r\nimport { SQLStatement } from \"./Parser.js\";\r\n\r\nexport class StatementCleaner {\r\n\r\n    clean(statement: SQLStatement): string {\r\n        switch(statement.ast.type){\r\n            case TokenType.keywordCreate:   // Create Table statement\r\n                statement.sqlCleaned = this.cleanCreateTableStatement(statement.ast);\r\n                return statement.sqlCleaned;\r\n            case TokenType.keywordInsert:\r\n                statement.sqlCleaned = this.cleanInsertStatement(statement.ast);\r\n                return statement.sqlCleaned;\r\n            default:\r\n                return statement.sql;\r\n                break;\r\n        }\r\n    }\r\n\r\n    cleanInsertStatement(ast: InsertNode): string {\r\n        let st: string = `insert into ${ast.table.identifier}`;\r\n\r\n        if(ast.columnList != null && ast.columnList.length > 0){\r\n            st += `(${ast.columnList.map(c => c.identifier).join(\", \")})`;\r\n        }\r\n\r\n        if(ast.values != null && ast.values.length > 0){\r\n            st += '\\nvalues';\r\n            let lines: string[] = [];\r\n            for(let vline of ast.values){\r\n                lines.push(`\\n(${vline.map(v => this.cleanValue(v)).join(\", \")})`);\r\n            }\r\n            st += lines.join(\", \");\r\n        }\r\n\r\n        return st + \";\";\r\n    }\r\n\r\n    cleanValue(v: ConstantNode){\r\n        if(v.constantType == TokenType.stringConstant){\r\n            let s: string = v.constant;\r\n            s = s.replace(/'/g, \"''\");\r\n            return `'${s}'`;\r\n        }else {\r\n            return v.constant;\r\n        }\r\n    }\r\n\r\n    cleanCreateTableStatement(ast: CreateTableNode): string {\r\n        let st: string = `create table ${ast.identifier}(\\n   `;\r\n\r\n        st += ast.columnList.map( column => this.cleanColumnDef(column)).join(\",\\n   \");\r\n        if(ast.foreignKeyInfoList != null && ast.foreignKeyInfoList.length > 0){\r\n            st += \",\\n\" + ast.foreignKeyInfoList.map(fki => this.cleanForeignKeyInfo(fki)).join(\",\\n   \");\r\n        }\r\n        if(ast.combinedPrimaryKeyColumns!= null && ast.combinedPrimaryKeyColumns.length > 0){\r\n            st += `,\\nprimary key(${ast.combinedPrimaryKeyColumns.join(\", \")})`;\r\n        }\r\n        st += '\\n);';\r\n\r\n        return st;\r\n    }\r\n\r\n    cleanForeignKeyInfo(fki: ForeignKeyInfo): string {\r\n        return `${fki.column} references ${fki.referencesTable}(${fki.referencesColumn})`;\r\n    }\r\n\r\n    cleanColumnDef(column: CreateTableColumnNode):string {\r\n\r\n        let type = column.baseType.toString();\r\n        if(type == \"int\" && column.isAutoIncrement){\r\n            type = \"integer\";\r\n        }\r\n\r\n        let st: string = `${column.identifier} ${type}`;\r\n        if(column.parameters != null && column.parameters.length > 0){\r\n            st += `(${column.parameters.join(\", \")})`;\r\n        }\r\n        if(column.notNull){\r\n            st += \" not null\";\r\n        }\r\n        if(column.defaultValue != null){\r\n            st += \" default \" + column.defaultValue;\r\n        }\r\n        if(column.isPrimary){\r\n            st += \" primary key\";\r\n        }\r\n        if(column.isAutoIncrement){\r\n            st += \" autoincrement\";\r\n        }\r\n        if(column.referencesColumn != null){\r\n            let c: string = column.referencesColumn;\r\n            if(column.referencesTable) c = column.referencesTable + \"(\" + c + \")\";\r\n            st += \" references \" + c;\r\n        }\r\n        if(column.collate != null){\r\n            let collate = column.collate.toLocaleLowerCase();\r\n            if([\"binary\", \"nocase\", \"rtrim\"].indexOf(collate) >= 0){\r\n                st += \" collate \" + collate;\r\n            }\r\n        }\r\n        let parameters = column.parameters? column.parameters : [0, 0];\r\n        let checkFunction = column.baseType.checkFunction(column.identifier, parameters);\r\n        if(checkFunction != \"\"){\r\n            st += \" \" + checkFunction;\r\n        }\r\n        return st;\r\n    }\r\n\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { SQLStatement } from \"../../compiler/parser/Parser.js\";\r\nimport { StatementCleaner } from \"../../compiler/parser/StatementCleaner.js\";\r\nimport { QueryResult } from \"../../tools/DatabaseTools.js\";\r\nimport { WDatabase } from \"../../workspace/WDatabase.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\ntype RuntimeError = {\r\n    statement: SQLStatement,\r\n    message: string\r\n}\r\n\r\nexport interface WriteQueryListener {\r\n    notify(statements: SQLStatement[]): void;\r\n}\r\n\r\nexport class ResultsetPresenter {\r\n\r\n    $paginationDiv: JQuery<HTMLDivElement>;\r\n    $infoDiv: JQuery<HTMLDivElement>;\r\n    $arrowLeft: JQuery<HTMLDivElement>;\r\n    $arrowRight: JQuery<HTMLDivElement>;\r\n\r\n    paginationFrom: number;\r\n    paginationAll: number;\r\n\r\n    paginationSize: number = 1000;\r\n\r\n    result: QueryResult;\r\n\r\n    writeQueryListeners: WriteQueryListener[] = [];\r\n\r\n    public static StatementDelimiter: string = \";\\n\\n\"\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$paginationDiv = jQuery('.jo_pagination');\r\n        this.$arrowLeft = jQuery('<div class=\"jo_button img_arrow-left-dark jo_active\"></div>');\r\n        this.$infoDiv = jQuery('<div class=\"jo_pagination_info\"><span class=\"jo_pagination_fromto\">0001 - 1000</span> von <span class=\"jo_pagination_all\">5000</span></div>');\r\n        this.$arrowRight = jQuery('<div class=\"jo_button img_arrow-right-dark jo_active\"></div>');\r\n\r\n        this.$paginationDiv.append(this.$arrowLeft, this.$infoDiv, this.$arrowRight);\r\n\r\n        this.$paginationDiv.hide();\r\n\r\n        let mousePointer = (window.PointerEvent ? \"pointer\" : \"mouse\") + 'up';\r\n\r\n        let that = this;\r\n        this.$arrowLeft.on(mousePointer, (e) => {\r\n            if (that.paginationFrom > 1) {\r\n                that.paginationFrom = Math.max(that.paginationFrom - that.paginationSize, 1);\r\n                if (that.paginationFrom % 1000 != 1) {\r\n                    that.paginationFrom = (Math.floor(that.paginationFrom / that.paginationSize) + 1) * that.paginationSize + 1;\r\n                }\r\n                that.showResults();\r\n                that.activateButtons();\r\n            }\r\n        })\r\n\r\n        this.$arrowRight.on(mousePointer, (e) => {\r\n            if (that.paginationFrom < this.paginationAll - that.paginationSize + 1) {\r\n                that.paginationFrom = Math.min(that.paginationFrom + that.paginationSize, that.paginationAll - that.paginationSize + 1);\r\n                that.showResults();\r\n                that.activateButtons();\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    public addWriteQueryListener(listener: WriteQueryListener) {\r\n        this.writeQueryListeners.push(listener);\r\n    }\r\n\r\n    private activateButtons() {\r\n        this.$arrowLeft.toggleClass('jo_active', this.paginationFrom > 1);\r\n        this.$arrowRight.toggleClass('jo_active', this.paginationFrom < this.paginationAll - this.paginationSize + 1);\r\n    }\r\n\r\n    executeSelectedStatements() {\r\n\r\n        let statements = this.fetchSelectedStatements();\r\n        if (statements.length == 0) return;\r\n\r\n        let hasDDLStatements: boolean = statements.some(st => this.isDDLStatement(st));\r\n        let hasWriteStatements: boolean = statements.some(st => this.isWriteStatement(st));\r\n        let workspace = this.main.getCurrentWorkspace();\r\n        let database = workspace.database;\r\n\r\n        if (hasDDLStatements && workspace.permissions <= 2) {\r\n            alert(\"Der Benutzer hat keine Berechtigung zum Ändern der Tabellenstruktur.\");\r\n            return;\r\n        }\r\n\r\n        if (hasWriteStatements && workspace.permissions <= 1) {\r\n            alert(\"Der Benutzer hat keine Berechtigung zum Einfügen/Löschen/Ändern von Datensätzen.\");\r\n            return;\r\n        }\r\n\r\n        if (hasDDLStatements || hasWriteStatements) {\r\n            if (this.main.isEmbedded()) {\r\n                this.executeDDLWriteStatementsEmbedded(workspace, statements, database);\r\n\r\n            } else {\r\n                this.executeDDLWriteStatementsInOnlineIDE(workspace, statements, database);\r\n            }\r\n\r\n        } else {\r\n            this.executeStatements(statements, 0, [], () => { });\r\n        }\r\n\r\n    }\r\n\r\n    executeDDLWriteStatementsEmbedded(workspace: Workspace, statements: SQLStatement[], database: WDatabase) {\r\n        let sucessfullyExecutedModifyingStatements: SQLStatement[] = [];\r\n        this.executeStatements(statements, 0, sucessfullyExecutedModifyingStatements, () => {\r\n\r\n            if (sucessfullyExecutedModifyingStatements.length == 0)\r\n                return;\r\n\r\n            this.main.getDatabaseExplorer().refresh();\r\n\r\n            this.writeQueryListeners.forEach(listener => listener.notify(sucessfullyExecutedModifyingStatements))\r\n        })\r\n    }\r\n\r\n    private executeDDLWriteStatementsInOnlineIDE(workspace: Workspace, statements: SQLStatement[], database: WDatabase) {\r\n        let main: Main = <Main>this.main;\r\n        // Step 1: Update Database to newest version to avoid potential database reset\r\n        main.networkManager.getNewStatements(workspace, (new_statements, firstStatementIndex) => {\r\n\r\n            main.notifier.executeNewStatements(new_statements, firstStatementIndex, () => { },\r\n                () => {\r\n                    // Step 2: Execute new statements to see which are successful\r\n                    let sucessfullyExecutedModifyingStatements: SQLStatement[] = [];\r\n                    this.executeStatements(statements, 0, sucessfullyExecutedModifyingStatements, () => {\r\n\r\n                        if (sucessfullyExecutedModifyingStatements.length == 0)\r\n                            return;\r\n\r\n                        // Step 3: Send successful statements to server in order to retrieve new db-version-number\r\n                        main.networkManager.AddDatabaseStatements(workspace, sucessfullyExecutedModifyingStatements.map(st => st.sqlCleaned == null ? st.sql : st.sqlCleaned), (statements_before, new_version) => {\r\n\r\n                            // Step 4: If another user sent statements between steps 1 and 3 then they are in array statements_before.\r\n                            // Add all new statements to local statement list\r\n                            statements_before.forEach(st => database.statements.push(st));\r\n                            this.main.getHistoryViewer().appendStatements(statements_before);\r\n                            let modifyingStatements = sucessfullyExecutedModifyingStatements.map(st => st.sqlCleaned == null ? st.sql : st.sqlCleaned)\r\n                            database.statements = database.statements.concat(modifyingStatements);\r\n                            this.main.getHistoryViewer().appendStatements(modifyingStatements);\r\n                            database.version = new_version;\r\n\r\n                            // Step 5 (worst case): statements before is not empty, so the should be executed before the statements executed in step 2\r\n                            // => clear whole database and execute all statements in the right order, beginning with a empty database.\r\n                            if (statements_before.length > 0) {\r\n\r\n                                this.resetDatabase(database);\r\n\r\n                            } else {\r\n\r\n                                main.getDatabaseExplorer().refresh();\r\n\r\n                            }\r\n\r\n                        });\r\n                    });\r\n                }, false);\r\n        });\r\n    }\r\n\r\n    resetDatabase(database: WDatabase) {\r\n        this.main.getDatabaseTool().initializeWorker(database.templateDump, database.statements, () => {\r\n            this.main.getDatabaseExplorer().refresh();\r\n        })\r\n    }\r\n\r\n    executeStatementsString(statements: string[], fromIndex: number, callback: () => void) {\r\n        if (statements.length == 0) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (fromIndex < statements.length) {\r\n            this.main.getDatabaseTool().executeQuery(statements[fromIndex],\r\n                (results) => { this.executeStatementsString(statements, fromIndex + 1, callback) },\r\n                (error) => { console.log(\"Error when executing statement \" + statements[fromIndex] + \"\\nError : \" + error); this.executeStatementsString(statements, fromIndex + 1, callback) });\r\n        } else {\r\n            callback();\r\n        }\r\n    }\r\n\r\n\r\n    executeStatements(statements: SQLStatement[], index: number, successfullyExecutedModifyingStatements: SQLStatement[], callback: () => void, errors: RuntimeError[] = []) {\r\n\r\n        if (index >= statements.length) {\r\n            this.showErrors(errors);\r\n\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        let statement = statements[index];\r\n\r\n\r\n        let callback1 = () => {\r\n            this.executeStatements(statements, index + 1, successfullyExecutedModifyingStatements, callback, errors);\r\n        }\r\n\r\n        if (statement.ast == null) {\r\n            callback1();\r\n            return;\r\n        }\r\n\r\n        if (statement.ast.type == TokenType.keywordSelect) {\r\n            let laterSelectExists: boolean = false;\r\n            for (let j = index + 1; j < statements.length; j++) laterSelectExists = laterSelectExists || this.isSelectStatement(statements[j]);\r\n            if (laterSelectExists) {\r\n                callback1();\r\n            } else {\r\n                if (statement.ast.limitNode == null) {\r\n                    statement.sql.trimRight();\r\n                    while (statement.sql.endsWith(\";\") || statement.sql.endsWith(\"\\n\") || statement.sql.endsWith(\"\\r\")) {\r\n                        statement.sql = statement.sql.substring(0, statement.sql.length - 1);\r\n                        statement.sql.trimRight();\r\n                    }\r\n                    statement.sql += \" limit 100000\";\r\n                }\r\n                this.main.getDatabaseTool().executeQuery(statement.sql,\r\n                    (results) => { this.presentResultsIntern(statement.sql, results); callback1(); },\r\n                    (error) => { errors.push({ statement: statement, message: error }); callback1(); });\r\n            }\r\n        } else {\r\n            let sql = new StatementCleaner().clean(statement);\r\n            console.log(sql);\r\n            this.main.getDatabaseTool().executeQuery(sql, (results) => { successfullyExecutedModifyingStatements.push(statement); callback1(); }, (error) => { errors.push({ statement: statement, message: error }); callback1(); });\r\n        }\r\n\r\n    }\r\n\r\n    oldErrorDecorations: string[] = [];\r\n    showErrorDecorations(errors: RuntimeError[]) {\r\n\r\n        let minimapColors = {\r\n            \"error\": \"#bc1616\",\r\n            \"warning\": \"#cca700\",\r\n            \"info\": \"#75beff\"\r\n        }\r\n\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        let markers: monaco.editor.IMarkerData[] = [];\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n        for (let error of errors) {\r\n            let errorlevel = \"error\";\r\n\r\n            let linesDecorationsClassName: string;\r\n            let borderLeftClass: string;\r\n            let minimapColor: string = minimapColors[errorlevel];\r\n\r\n            switch (errorlevel) {\r\n                case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n            }\r\n\r\n            let severity: monaco.MarkerSeverity;\r\n            switch (errorlevel) {\r\n                case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n            }\r\n\r\n            markers.push({\r\n                startLineNumber: error.statement.from.line,\r\n                startColumn: error.statement.from.column,\r\n                endLineNumber: error.statement.to.line,\r\n                endColumn: error.statement.to.column,\r\n                message: error.message,\r\n                severity: severity\r\n            });\r\n\r\n            decorations.push({\r\n                range: {\r\n                    startLineNumber: error.statement.from.line,\r\n                    startColumn: error.statement.from.column,\r\n                    endLineNumber: error.statement.to.line,\r\n                    endColumn: error.statement.to.column,\r\n                },\r\n                options: {\r\n                    linesDecorationsClassName: linesDecorationsClassName,\r\n                    minimap: {\r\n                        position: monaco.editor.MinimapPosition.Inline,\r\n                        color: minimapColor\r\n                    }\r\n                }\r\n\r\n            });\r\n\r\n\r\n        }\r\n\r\n        let model = this.main.getCurrentlyEditedModule().model;\r\n        monaco.editor.setModelMarkers(model, 'test', markers);\r\n        this.oldErrorDecorations = model.deltaDecorations(this.oldErrorDecorations, decorations);\r\n\r\n    }\r\n\r\n    showTable(identifier: string) {\r\n        let statement = \"select * from \" + identifier + \";\";\r\n        this.main.getDatabaseTool().executeQuery(statement,\r\n            (results) => { this.presentResultsIntern(statement, results); },\r\n            (error) => { });\r\n    }\r\n\r\n\r\n\r\n    showErrors(errors: RuntimeError[]) {\r\n        let $runtimeErrorsTab = this.$bottomDiv.find('.jo_errorsTab');\r\n        let $runtimeErrorsTabHeading = this.$bottomDiv.find('.jo_errorsTabheading');\r\n\r\n        $runtimeErrorsTab.empty();\r\n        this.showErrorDecorations(errors);\r\n\r\n        if (errors.length == 0) return;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        $runtimeErrorsTabHeading.trigger(mousePointer + \"down\");\r\n\r\n        let $errorList = jQuery('<div class=\"jo_errorlist\"></div>');\r\n        $runtimeErrorsTab.append($errorList);\r\n\r\n        for (let error of errors) {\r\n            let query = error.statement.sql;\r\n            query = query.replace(/\\n/g, \" \");\r\n            query = query.replace(/\\s\\s+/g, ' ');\r\n\r\n            let $errorLine = $('<div class=\"jo_error-line\" style=\"flex-direction:column; width: fit-content\"></div>')\r\n            $errorList.append($errorLine);\r\n\r\n            $errorLine.on(mousePointer + 'down', () => {\r\n                let range = {\r\n                    startColumn: error.statement.from.column, startLineNumber: error.statement.from.line,\r\n                    endColumn: error.statement.to.column, endLineNumber: error.statement.to.line\r\n                };\r\n\r\n                this.main.getMonacoEditor().revealRangeInCenter(range);\r\n                $errorList.find('.jo_error-line').removeClass('jo_active');\r\n                $errorLine.addClass('jo_active');\r\n\r\n            })\r\n\r\n\r\n            let $sqlDiv = $('<div class=\"jo_sqlErrorStatement\"></div>');\r\n            $errorLine.append($sqlDiv);\r\n\r\n            monaco.editor.colorize(query, \"vscSQL\", {}).then(\r\n                (html) => { $sqlDiv.html(html) });\r\n\r\n            let $messageDiv = $('<div class=\"jo_sqlErrorMessage\">' + error.message + '</div>');\r\n            $errorLine.append($messageDiv);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    isSelectStatement(statement: SQLStatement): boolean {\r\n        return statement.ast != null && statement.ast.type == TokenType.keywordSelect;\r\n    }\r\n\r\n    isDDLStatement(statement: SQLStatement): boolean {\r\n        return statement.ast != null && [TokenType.keywordCreate, TokenType.keywordDrop, TokenType.keywordAlter].indexOf(statement.ast.type) >= 0;\r\n    }\r\n\r\n    isWriteStatement(statement: SQLStatement): boolean {\r\n        return statement.ast != null && [TokenType.keywordInsert, TokenType.keywordDelete, TokenType.keywordUpdate].indexOf(statement.ast.type) >= 0;\r\n    }\r\n\r\n    private presentResultsIntern(query: string, results: QueryResult[]) {\r\n        let $resultTabheading = this.$bottomDiv.find('.jo_resultTabheading');\r\n        let $resultHeader = this.$bottomDiv.find('.jo_result-header');\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        $resultTabheading.trigger(mousePointer + \"down\");\r\n        this.result = results.pop();\r\n\r\n        let headerDiv = $resultHeader;\r\n\r\n        query = query.replace(/\\n/g, \" \");\r\n        query = query.replace(/\\s\\s+/g, ' ');\r\n        query = query.replace(/limit 100000/g, '');\r\n\r\n        monaco.editor.colorize(query, \"vscSQL\", {}).then(\r\n            (html) => { headerDiv.html(html) });\r\n\r\n        this.paginationAll = this.result ? this.result.values.length : 0;\r\n        this.$infoDiv.find('.jo_pagination_all').html(`${this.paginationAll}`);\r\n        this.paginationFrom = 1;\r\n        this.$paginationDiv.show();\r\n        this.activateButtons();\r\n\r\n        this.showResults();\r\n\r\n    }\r\n\r\n    public clear() {\r\n        let $bodyDiv = this.$bottomDiv.find('.jo_result-body');\r\n        $bodyDiv.empty();\r\n        this.$paginationDiv.hide();\r\n    }\r\n\r\n    private showResultsBusy: boolean = false;\r\n    private showResultPending: boolean = false;\r\n\r\n    private showResults() {\r\n        let $bodyDiv = this.$bottomDiv.find('.jo_result-body');\r\n\r\n        if (this.result == null) {\r\n            this.$infoDiv.find('.jo_pagination_fromto').html('---');\r\n            $bodyDiv.html('Die Datenbank lieferte eine leere Ergebnistabelle.');\r\n            return;\r\n        }\r\n\r\n        let that = this;\r\n        let from = this.paginationAll == 0 ? 0 : this.paginationFrom;\r\n        let to = this.paginationAll == 0 ? 0 : Math.min(this.paginationFrom + this.paginationSize - 1, this.paginationAll);\r\n        this.$infoDiv.find('.jo_pagination_fromto').html(`${from} - ${to}`)\r\n\r\n        if (this.showResultsBusy) {\r\n            if (this.showResultPending) {\r\n                return;\r\n            }\r\n            this.showResultPending = true;\r\n            let waitFunction = () => {\r\n                if (that.showResultsBusy) {\r\n                    setTimeout(() => {\r\n                        waitFunction();\r\n                    }, 200);\r\n                } else {\r\n                    that.showResultPending = false;\r\n                    that.showResults();\r\n                }\r\n            }\r\n            setTimeout(waitFunction, 200);\r\n            return;\r\n        }\r\n\r\n        this.showResultsBusy = true;\r\n\r\n        let $table = jQuery('<table></table>');\r\n        let $header = jQuery('<tr></tr>');\r\n        $table.append($header);\r\n\r\n        this.result.columns.forEach((column) => { $header.append(jQuery(`<th><div>${column}</div></th>`)) });\r\n\r\n        let rows = this.result.values.slice(this.paginationFrom - 1, this.paginationFrom + this.paginationSize - 1);\r\n\r\n        let i = 0;\r\n        let f = () => {\r\n            if (i < rows.length) {\r\n                for (let j = i; j < Math.min(i + 200, rows.length); j++) {\r\n                    let row = rows[j];\r\n                    let $row = jQuery('<tr></tr>');\r\n                    $table.append($row);\r\n                    row.forEach((cell) => { $row.append(jQuery(`<td>${cell}</td>`)) });\r\n                }\r\n                i = Math.min(i + 200, rows.length);\r\n                if (i < rows.length) {\r\n                    setTimeout(f, 30);\r\n                } else {\r\n                    $bodyDiv.empty().append($table);\r\n                    this.showResultsBusy = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        f();\r\n\r\n        // rows.forEach((row) => {\r\n        //     let $row = jQuery('<tr></tr>');\r\n        //     $table.append($row);\r\n        //     row.forEach((cell) => {$row.append(jQuery(`<td>${cell}</td>`))});\r\n        // });\r\n\r\n        // bodyDiv.empty().append($table);\r\n\r\n    }\r\n\r\n\r\n    fetchSelectedStatements(): SQLStatement[] {\r\n        let module = this.main.getCurrentlyEditedModule();\r\n        if (module == null) return null;\r\n\r\n        let monacoEditor = this.main.getMonacoEditor();\r\n        // console.log(monacoEditor.getSelection());\r\n        // console.log(monacoEditor.getPosition());\r\n\r\n        let statements: SQLStatement[] = module.getSQLSTatementsAtSelection(monacoEditor.getSelection());\r\n        for (let statement of statements) {\r\n            statement.sql = monacoEditor.getModel().getValueInRange({\r\n                startColumn: statement.from.column,\r\n                startLineNumber: statement.from.line, endColumn: statement.to.column, endLineNumber: statement.to.line\r\n            });\r\n        }\r\n\r\n        // let sqlStatement = module.getSQLStatementAtPosition(monacoEditor.getPosition());\r\n\r\n        return statements;\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { Module } from \"../compiler/parser/Module.js\";\r\nimport { ResultsetPresenter } from \"../main/gui/ResultsetPresenter.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { WDatabase } from \"../workspace/WDatabase.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ajax } from \"./AjaxHelper.js\";\r\nimport { GetNewStatementsRequest, GetNewStatementsResponse, GetWebSocketTokenResponse, WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestGetNewStatements, WebSocketResponse } from \"./Data.js\";\r\n\r\nexport class Notifier {\r\n\r\n    connection: WebSocket;\r\n    isOpen: boolean = false;\r\n    workspace: Workspace;\r\n    database: WDatabase;\r\n\r\n    constructor(public main: Main) {\r\n\r\n    }\r\n\r\n    connect(workspace: Workspace) {\r\n\r\n        let that = this;\r\n        this.workspace = workspace;\r\n        this.database = workspace.database;\r\n\r\n        if(this.isOpen){\r\n            this.connection.close();\r\n        }\r\n\r\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\r\n\r\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/websocket\";\r\n            this.connection = new WebSocket(url);\r\n\r\n            this.connection.onerror = (error: Event) => { this.onError(error); }\r\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\r\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\r\n\r\n            this.connection.onopen = (event: Event) => {\r\n                let request: WebSocketRequestConnect = {\r\n                    command: 1,\r\n                    token: response.token,\r\n                    workspaceId: workspace.id,\r\n                    databaseId: workspace.database.id,\r\n                    databaseVersion: workspace.database.version\r\n                }\r\n\r\n                this.isOpen = true;\r\n                this.sendIntern(JSON.stringify(request));\r\n                this.onOpen();\r\n\r\n            }\r\n\r\n            // Now let's hope that websocket connection can be established.\r\n            // We setup http-polling as fallback solution\r\n\r\n            this.startPolling();\r\n\r\n        });\r\n\r\n    }\r\n\r\n    unsentMessages: string[] = [];\r\n    sendIntern(message: string) {\r\n\r\n        if (!this.isOpen) {\r\n            this.unsentMessages.push(message);\r\n        } else {\r\n            try {\r\n                this.connection.send(message);\r\n            } catch (exception) {\r\n                console.log(exception);\r\n            }\r\n        }\r\n    }\r\n\r\n    onClose(event: CloseEvent) {\r\n        this.isOpen = false;\r\n    }\r\n\r\n\r\n    disconnect() {\r\n        let message: WebSocketRequestDisconnect = {\r\n            command: 4\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n        this.connection.close();\r\n    }\r\n\r\n    onMessage(event: MessageEvent) {\r\n\r\n        let that = this;\r\n        let response: WebSocketResponse = JSON.parse(event.data);\r\n        if (response.command == undefined) return;\r\n\r\n        switch (response.command) {\r\n            case 2: // SendStatements\r\n                that.executeNewStatements(response.newStatements, response.firstNewStatementIndex, () => {\r\n                    let request: WebSocketRequestGetNewStatements = { command: 2, databaseVersion: that.database.version };\r\n                    that.sendIntern(JSON.stringify(request));\r\n                })\r\n                break;\r\n            case 3: // server initiated disconnect\r\n                this.isOpen = false;\r\n                this.database = null;\r\n                this.workspace = null;\r\n                break;\r\n            case 4: // keep alive\r\n                break;\r\n            case 5: // rollback\r\n                if(this.database.version > response.new_version){\r\n                    this.main.getHistoryViewer().rollbackLocal();\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    executeNewStatements(newStatements: string[], firstNewStatementIndex: number, callbackIfTooFewStatements: () => void, callbackIfDone: () => void = () => {}, doRefreshDatabaseExplorer: boolean = true) {\r\n        if(this.database == null) return;\r\n        let that = this;\r\n        let delta = firstNewStatementIndex - (this.database.version + 1);\r\n        if (delta > 0) {\r\n            callbackIfTooFewStatements();\r\n            callbackIfDone();\r\n            return;\r\n        } else {\r\n            if (delta < 0) {\r\n                newStatements.splice(0, -delta);\r\n                firstNewStatementIndex -= delta;\r\n            }\r\n            let statements = newStatements;\r\n            if(statements.length > 0){\r\n                this.main.resultsetPresenter.executeStatementsString(statements, 0, () => {\r\n                    that.main.getHistoryViewer().appendStatements(statements);\r\n                    that.database.statements = that.database.statements.concat(statements)\r\n                    that.database.version = firstNewStatementIndex + newStatements.length - 1;\r\n                    if(doRefreshDatabaseExplorer){\r\n                        that.main.databaseExplorer.refresh();\r\n                    }\r\n                    callbackIfDone();\r\n                })\r\n            } else {\r\n                callbackIfDone();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    onError(error: Event) {\r\n    }\r\n\r\n    onOpen() {\r\n        this.isOpen = true;\r\n        if (this.unsentMessages.length > 0) {\r\n            this.unsentMessages.forEach(m => this.sendIntern(m));\r\n            this.unsentMessages = [];\r\n        }\r\n    }\r\n\r\n    isPolling: boolean = false;\r\n    startPolling() {\r\n        if (this.isPolling) return;\r\n        this.isPolling = true;\r\n\r\n        this.poll();\r\n\r\n    }\r\n\r\n    poll() {\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.poll();\r\n        }, 5000);\r\n\r\n        if (!that.isOpen) {\r\n            this.getNewStatementsHttp();\r\n        }\r\n\r\n    }\r\n\r\n    getNewStatementsHttp() {\r\n        let that = this;\r\n        if (this.workspace == null || this.database == null) return;\r\n\r\n        let request: GetNewStatementsRequest = {\r\n            workspaceId: this.workspace.id,\r\n            version_before: this.workspace.database.version\r\n        }\r\n\r\n        ajax('getNewStatements', request, (response: GetNewStatementsResponse) => {\r\n\r\n            that.executeNewStatements(response.newStatements, response.firstNewStatementIndex, () => {\r\n                that.getNewStatementsHttp();\r\n            })\r\n\r\n        });\r\n\r\n    }\r\n\r\n}","export class WaitOverlay {\r\n\r\n    visible: boolean = false;\r\n    fadeOutPending: boolean = false;\r\n    $bitteWartenText: JQuery<HTMLElement>;\r\n    $bitteWartenProgress: JQuery<HTMLElement>;\r\n\r\n    constructor(private $waitDiv: JQuery<HTMLElement>){\r\n        this.$bitteWartenText = $waitDiv.find('.bitteWartenText');\r\n        this.$bitteWartenProgress = $waitDiv.find('.bitteWartenProgress');\r\n    }\r\n\r\n    show(message: string){\r\n        this.fadeOutPending = false;\r\n        this.$bitteWartenText.html(message);\r\n        this.$bitteWartenProgress.html('');\r\n        if(!this.visible){\r\n            this.visible = true;\r\n            this.$waitDiv.css('display', 'flex');\r\n            this.$waitDiv.hide();\r\n            this.$waitDiv.fadeIn(400);\r\n        }\r\n    }\r\n\r\n    setProgress(message: string){\r\n        this.$bitteWartenProgress.html(message);\r\n    }\r\n\r\n    hide(){\r\n        if(this.visible){\r\n            this.fadeOutPending = true;\r\n            setTimeout(() => {\r\n                if(this.fadeOutPending){\r\n                    this.fadeOutPending = false;\r\n                    this.$waitDiv.fadeOut(200, () => {\r\n                        this.$waitDiv.css('display', 'none');\r\n                    })\r\n                    this.visible = false;        \r\n                }                \r\n            }, 50);\r\n        }\r\n    }\r\n\r\n}","import { MainEmbedded } from \"../../embedded/MainEmbedded.js\";\r\nimport { copyTextToClipboard, openContextMenu } from \"../../tools/HtmlTools.js\";\r\nimport { WDatabase } from \"../../workspace/WDatabase.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\ntype HistoryPanelEntry = {\r\n    statement: string;\r\n    $div: JQuery<HTMLDivElement>;\r\n    $rollbackButton: JQuery<HTMLDivElement>;\r\n}\r\n\r\nexport class HistoryViewer {\r\n\r\n    panelEntries: HistoryPanelEntry[] = [];\r\n\r\n    constructor(private main: MainBase, private $historyPanel: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    clear() {\r\n        this.$historyPanel.empty();\r\n        this.panelEntries = [];\r\n    }\r\n\r\n    clearAndShowStatements(statements: string[]) {\r\n        this.clear();\r\n        this.appendStatements(statements);\r\n    }\r\n\r\n    appendStatements(statements: string[]) {\r\n        statements.forEach(stmt => {\r\n            let panelEntry = this.makePanelEntry(stmt, this.panelEntries.length + 1);\r\n            this.$historyPanel.prepend(panelEntry.$div);\r\n            this.panelEntries.unshift(panelEntry);\r\n        })\r\n\r\n        this.makeLastButtonActive();\r\n    }\r\n\r\n    makeLastButtonActive() {\r\n        this.panelEntries.forEach(pe => pe.$rollbackButton.removeClass('jo_active'));\r\n\r\n        if (this.panelEntries.length > 0) {\r\n            this.panelEntries[0].$rollbackButton.addClass('jo_active');\r\n        }\r\n    }\r\n\r\n    makePanelEntry(statement: string, index: number): HistoryPanelEntry {\r\n        let $div = <JQuery<HTMLDivElement>>jQuery(`<div class=\"jo_panelEntry\"></div>`);\r\n        let $index = jQuery(`<div class=\"jo_panelEntryIndex\">${index}.</div>`);\r\n        let $text = jQuery(`<div class=\"jo_panelEntryText\"></div>`);\r\n        let t: string = statement.substring(0, Math.min(400, statement.length));\r\n        if (statement.length > 400) {\r\n            t += \"...\";\r\n        }\r\n        $text.text(t);\r\n        let $copybutton = <JQuery<HTMLDivElement>>jQuery(`<div class=\"img_copy jo_panelEntryCopyButton jo_active jo_button\" title=\"In die Zwischenablage kopieren\"></div>`)\r\n        let $rollbackbutton = <JQuery<HTMLDivElement>>jQuery(`<div class=\"img_undo jo_panelEntryRollbackButton jo_button\" title=\"Rollback\"></div>`)\r\n        let that = this;\r\n\r\n        $copybutton.on('click', () => {\r\n            copyTextToClipboard(statement);\r\n        })\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $rollbackbutton.on(mousePointer + 'up', (ev) => {\r\n            ev.preventDefault();\r\n            openContextMenu([{\r\n                caption: \"Abbrechen\",\r\n                callback: () => {\r\n                }\r\n            }, {\r\n                caption: \"Ich bin mir sicher: rollback!\",\r\n                color: \"#ff6060\",\r\n                callback: () => {\r\n                    this.rollback();\r\n                }\r\n            }], ev.pageX + 2, ev.pageY + 2);\r\n            ev.stopPropagation();\r\n        })\r\n\r\n        $div.append($index, $text, $copybutton, $rollbackbutton);\r\n        return {\r\n            $div: $div,\r\n            statement: statement,\r\n            $rollbackButton: $rollbackbutton\r\n        }\r\n    }\r\n\r\n    rollback() {\r\n        if (this.panelEntries.length == 0) return;\r\n\r\n        if (this.main.isEmbedded()) {\r\n            this.rollbackEmbedded();\r\n        } else {\r\n            let main: Main = <Main>this.main;\r\n            main.networkManager.rollback((error: string, rollbackLocalNeeded: boolean) => {\r\n                if (error == null && rollbackLocalNeeded) {\r\n                    this.rollbackLocal();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    rollbackLocal() {\r\n        let database = this.main.getCurrentWorkspace().database;\r\n        database.statements.pop();\r\n        database.version--;\r\n        this.main.getDatabaseTool().initializeWorker(database.templateDump, database.statements, () => {\r\n\r\n        }, () => {\r\n            this.main.getDatabaseExplorer().refreshAfterRetrievingDBStructure();\r\n            let lastPanelEntry = this.panelEntries.shift();\r\n            lastPanelEntry.$div.remove();\r\n            this.makeLastButtonActive();\r\n        })\r\n    }\r\n\r\n    rollbackEmbedded() {\r\n        let main: MainEmbedded = <MainEmbedded>this.main;\r\n        main.writeQueryManager.rollback();\r\n\r\n        this.main.getDatabaseTool().initializeWorker(main.initialTemplateDump,\r\n            main.initialStatements.concat(main.writeQueryManager.writtenStatements), () => { },\r\n            () => {\r\n                this.main.getDatabaseExplorer().refreshAfterRetrievingDBStructure();\r\n                let lastPanelEntry = this.panelEntries.shift();\r\n                lastPanelEntry.$div.remove();\r\n                this.makeLastButtonActive();\r\n            })\r\n    }\r\n\r\n}","import { ClassData, UserData, Workspaces } from \"../communication/Data.js\";\r\nimport { NetworkManager } from \"../communication/NetworkManager.js\";\r\nimport { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ActionManager } from \"./gui/ActionManager.js\";\r\nimport { BottomDiv } from \"./gui/BottomDiv.js\";\r\nimport { Editor } from \"./gui/Editor.js\";\r\nimport { Formatter } from \"./gui/Formatter.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { MainMenu } from \"./gui/MainMenu.js\";\r\nimport { ProjectExplorer } from \"./gui/ProjectExplorer.js\";\r\nimport { RightDiv } from \"./gui/RightDiv.js\";\r\nimport { Sliders } from \"./gui/Sliders.js\";\r\nimport { TeacherExplorer } from \"./gui/TeacherExplorer.js\";\r\nimport { ThemeManager } from \"./gui/ThemeManager.js\";\r\nimport { Login } from \"./Login.js\";\r\nimport { Module, File } from \"../compiler/parser/Module.js\";\r\nimport { ViewModeController } from \"./gui/ViewModeController.js\";\r\nimport { ErrorManager } from \"./gui/ErrorManager.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { DatabaseTool } from \"../tools/DatabaseTools.js\";\r\nimport { MainBase } from \"./MainBase.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { DatabaseExplorer } from \"./gui/DatabaseExplorer.js\";\r\nimport { ProgramControlButtons } from \"./gui/ProgramControlButtons.js\";\r\nimport { ResultsetPresenter } from \"./gui/ResultsetPresenter.js\";\r\nimport { Notifier } from \"../communication/Notifier.js\";\r\nimport { checkIfMousePresent } from \"../tools/HtmlTools.js\";\r\nimport { WaitOverlay } from \"./gui/WaitOverlay.js\";\r\nimport { HistoryViewer } from \"./gui/HistoryViewer.js\";\r\n\r\nexport class Main implements MainBase {\r\n    isEmbedded(): boolean {\r\n        return false;\r\n    }\r\n\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    // VORSICHT: ggf. Module -> any\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.projectExplorer.getCurrentlyEditedModule();\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n        this.projectExplorer.setModuleActive(module);\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n    getDatabaseTool(): DatabaseTool {\r\n        return this.databaseTool;\r\n    }\r\n\r\n    getDatabaseExplorer():DatabaseExplorer {\r\n        return this.databaseExplorer;\r\n    }\r\n\r\n    getResultsetPresenter(): ResultsetPresenter {\r\n        return this.resultsetPresenter;\r\n    }\r\n\r\n    getWaitOverlay(): WaitOverlay {\r\n        return this.waitOverlay;\r\n    }\r\n\r\n    getHistoryViewer(): HistoryViewer {\r\n        return this.historyViewer;\r\n    }\r\n\r\n    workspaceList: Workspace[] = [];\r\n    workspacesOwnerId: number;\r\n\r\n    // monaco_editor: monaco.editor.IStandaloneCodeEditor;\r\n    editor: Editor;\r\n    currentWorkspace: Workspace;\r\n    projectExplorer: ProjectExplorer;\r\n    teacherExplorer: TeacherExplorer;\r\n    networkManager: NetworkManager;\r\n    actionManager: ActionManager;\r\n    mainMenu: MainMenu;\r\n\r\n    login: Login;\r\n\r\n    compiler: Compiler;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    bottomDiv: BottomDiv;\r\n\r\n    startupComplete = 2;\r\n    waitForGUICallback: () => void;\r\n\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    user: UserData;\r\n    userDataDirty: boolean = false;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    rightDiv: RightDiv;\r\n\r\n    viewModeController: ViewModeController;\r\n\r\n    databaseTool: DatabaseTool;\r\n\r\n    databaseExplorer: DatabaseExplorer;\r\n\r\n    resultsetPresenter: ResultsetPresenter;\r\n\r\n    notifier: Notifier;\r\n\r\n    waitOverlay: WaitOverlay = new WaitOverlay(jQuery('.bitteWarten'));\r\n    historyViewer: HistoryViewer = new HistoryViewer(this, jQuery('.jo_historyTab'));\r\n\r\n    initGUI() {\r\n\r\n        checkIfMousePresent();\r\n\r\n        this.login = new Login(this);\r\n        this.login.initGUI();\r\n\r\n        this.databaseTool = new DatabaseTool(this);\r\n        this.databaseExplorer = new DatabaseExplorer(this, jQuery(\".jo_db_tree\"));\r\n\r\n        this.actionManager = new ActionManager(null, this);\r\n        this.actionManager.init();\r\n\r\n        this.networkManager = new NetworkManager(this, jQuery('#bottomdiv-outer .jo_updateTimerDiv'));\r\n\r\n        let sliders = new Sliders(this);\r\n        sliders.initSliders();\r\n        this.mainMenu = new MainMenu(this);\r\n        this.projectExplorer = new ProjectExplorer(this, jQuery('#leftpanel>.jo_projectexplorer'));\r\n        this.projectExplorer.initGUI();\r\n\r\n        this.bottomDiv = new BottomDiv(this, jQuery('#bottomdiv-outer>.jo_bottomdiv-inner'), jQuery('body'));\r\n\r\n        this.rightDiv = new RightDiv(this, jQuery('#rightdiv-inner'));\r\n        this.rightDiv.initGUI();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.themeManager = new ThemeManager();\r\n\r\n        this.viewModeController = new ViewModeController(jQuery(\"#view-mode\"), this);\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n        new ProgramControlButtons(this, jQuery('#controls'));\r\n\r\n        this.resultsetPresenter = new ResultsetPresenter(this, jQuery('.jo_bottomdiv-inner'));\r\n\r\n        this.notifier = new Notifier(this);\r\n\r\n    }\r\n\r\n\r\n    initEditor() {\r\n        this.editor = new Editor(this, true, false);\r\n        new Formatter().init();\r\n        // this.monaco_editor = \r\n        this.editor.initGUI(jQuery('#editor'));\r\n\r\n        let that = this;\r\n        jQuery(window).on('resize', (event) => {\r\n            jQuery('#bottomdiv-outer').css('height', '450px');\r\n            jQuery('#editor').css('height', (window.innerHeight - 450 - 30 - 2) + \"px\");\r\n            that.editor.editor.layout();\r\n            jQuery('#editor').css('height', \"\");\r\n\r\n        });\r\n\r\n        jQuery(window).trigger('resize');\r\n\r\n        this.checkStartupComplete();\r\n    }\r\n\r\n    initTeacherExplorer(classdata: ClassData[]) {\r\n        this.teacherExplorer = new TeacherExplorer(this, classdata);\r\n        this.teacherExplorer.initGUI();\r\n    }\r\n\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    start() {\r\n\r\n        if (this.waitForGUICallback != null) {\r\n            this.waitForGUICallback();\r\n        }\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.getMonacoEditor().layout();\r\n        }, 200);\r\n\r\n        this.compiler = new Compiler(this);\r\n\r\n        this.startTimer();\r\n\r\n        $(window).on('unload', function() {\r\n            \r\n            if(navigator.sendBeacon && that.user != null){\r\n                that.networkManager.sendUpdates(null, false);\r\n                that.networkManager.sendUpdateUserSettings(() => {});\r\n            }\r\n            \r\n        });\r\n\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n                this.projectExplorer.renderErrorCount(this.currentWorkspace, errors);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                if (this.projectExplorer) {\r\n                    this.version++;\r\n                }\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    removeWorkspace(w: Workspace) {\r\n        this.workspaceList.splice(this.workspaceList.indexOf(w), 1);\r\n    }\r\n\r\n    restoreWorkspaces(workspaces: Workspaces) {\r\n\r\n        this.workspaceList = [];\r\n        this.currentWorkspace = null;\r\n        // this.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\" , \"text\"));\r\n        this.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        for (let ws of workspaces.workspaces) {\r\n\r\n            let workspace: Workspace = Workspace.restoreFromData(ws, this);\r\n            this.workspaceList.push(workspace);\r\n            if (ws.id == this.user.currentWorkspace_id) {\r\n                this.currentWorkspace = workspace;\r\n            }\r\n        }\r\n\r\n        this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n\r\n        if (this.currentWorkspace == null && this.workspaceList.length > 0) {\r\n            this.currentWorkspace = this.workspaceList[0];\r\n        }\r\n\r\n        if (this.currentWorkspace != null) {\r\n            this.projectExplorer.setWorkspaceActive(this.currentWorkspace);\r\n        }\r\n\r\n        if (this.workspaceList.length == 0) {\r\n\r\n            Helper.showHelper(\"newDatabaseHelper\", this, this.projectExplorer.workspaceListPanel.$captionElement);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    createNewWorkspace(name: string, owner_id: number): Workspace {\r\n        return new Workspace(name, this, owner_id);\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Main } from \"./Main.js\";\r\n\r\n\r\njQuery(function () {\r\n\r\n    let main = new Main();\r\n\r\n    //@ts-ignore\r\n    window.require.config({ paths: { 'vs': 'lib/monaco-editor/dev/vs' } });\r\n    //@ts-ignore\r\n    window.require.config({\r\n        'vs/nls': {\r\n            availableLanguages: {\r\n                '*': 'de'\r\n            }\r\n        },\r\n        ignoreDuplicateModules: [\"vs/editor/editor.main\"]\r\n    });\r\n\r\n    //@ts-ignore\r\n    window.require(['vs/editor/editor.main'], function () {\r\n\r\n        main.initEditor();\r\n        main.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        main.bottomDiv.initGUI();\r\n\r\n        // main.loadWorkspace();\r\n\r\n\r\n    });\r\n\r\n    main.initGUI();\r\n\r\n});"],"sourceRoot":""}