{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../node_modules/regenerator-runtime/runtime.js","webpack:///../../../src/client/communication/AjaxHelper.ts","webpack:///../../../src/client/workspace/WDatabase.ts","webpack:///../../../src/client/communication/CacheManager.ts","webpack:///../../../src/client/communication/NotifierClient.ts","webpack:///../../../src/client/communication/NetworkManager.ts","webpack:///../../../../src/client/compiler/lexer/Token.ts","webpack:///../../../../src/client/compiler/lexer/Lexer.ts","webpack:///../../../../src/client/compiler/parser/SQLTypes.ts","webpack:///../../../../src/client/compiler/parser/Parser.ts","webpack:///../../../../src/client/compiler/parser/SQLTable.ts","webpack:///../../../../src/client/compiler/parser/SymbolTable.ts","webpack:///../../../../src/client/compiler/parser/SQLMethods.ts","webpack:///../../../src/client/tools/StringTools.ts","webpack:///../../../../src/client/compiler/parser/SymbolResolver.ts","webpack:///../../../src/client/compiler/Compiler.ts","webpack:///../../../../src/client/compiler/parser/Module.ts","webpack:///../../../src/client/tools/HtmlTools.ts","webpack:///../../../src/client/tools/TemplateUploader.ts","webpack:///../../../../src/client/main/gui/DatabaseSettingsDialog.ts","webpack:///../../../src/client/workspace/Workspace.ts","webpack:///../../../../src/client/main/gui/ActionManager.ts","webpack:///../../../../src/client/main/gui/ErrorManager.ts","webpack:///../../../../src/client/main/gui/HomeworkManager.ts","webpack:///../../../../src/client/main/gui/BottomDiv.ts","webpack:///../../../../src/client/main/gui/MyCompletionItemProvider.ts","webpack:///../../../../src/client/main/gui/MySignatureHelpProvider.ts","webpack:///../../../../src/client/main/gui/MyHoverProvider.ts","webpack:///../../../../src/client/main/gui/MyCodeActionProvider.ts","webpack:///../../../../src/client/main/gui/MyReferenceProvider.ts","webpack:///../../../../src/client/main/gui/Helper.ts","webpack:///../../../../src/client/main/gui/Editor.ts","webpack:///../../../../src/client/main/gui/VscSql.ts","webpack:///../../../../src/client/main/gui/Formatter.ts","webpack:///../../../src/client/sqljs-worker/sqljsWorkerSim.ts","webpack:///../../../src/client/tools/DatabaseTools.ts","webpack:///../../../../src/client/compiler/parser/StatementCleaner.ts","webpack:///../../../src/client/tools/MySqlImporter.ts","webpack:///../../../src/client/tools/DatabaseImportExport.ts","webpack:///../../../../src/client/main/gui/NewDatabaseDialog.ts","webpack:///../../../../src/client/main/gui/MainMenu.ts","webpack:///../../../../src/client/main/gui/Accordion.ts","webpack:///../../../../src/client/main/gui/DistributeToStudentsDialog.ts","webpack:///../../../../src/client/main/gui/ProjectExplorer.ts","webpack:///../../../../src/client/main/gui/RightDiv.ts","webpack:///../../../../src/client/main/gui/Sliders.ts","webpack:///../../../../src/client/main/gui/TeacherExplorer.ts","webpack:///../../../../src/client/main/gui/ThemeManager.ts","webpack:///../../../../src/client/main/gui/UserMenu.ts","webpack:///../../../src/client/main/Login.ts","webpack:///../../../../src/client/main/gui/ViewModeController.ts","webpack:///../../../../src/client/compiler/parser/SemicolonAngel.ts","webpack:///../../../../src/client/main/gui/DatabaseExplorer.ts","webpack:///../../../../src/client/main/gui/ProgramControlButtons.ts","webpack:///../../../../src/client/main/gui/ResultsetPresenter.ts","webpack:///../../../src/client/communication/Notifier.ts","webpack:///../../../../src/client/main/gui/WaitOverlay.ts","webpack:///../../../../src/client/main/gui/HistoryViewer.ts","webpack:///../../../src/client/main/Main.ts","webpack:///../../../src/client/main/IDEStarter.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","runtime","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","define","obj","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","state","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","makeInvokeMethod","fn","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","undefined","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","Function","PerformanceCollector","url","startTime","pe","performanceData","find","count","sumTime","dt","Math","round","performance","now","performanceDataCount","lastTimeSent","request","data","ajax","successCallback","errorCallback","showNetworkBusy","time","$","JSON","stringify","contentType","success","response","registerPerformanceEntry","message","jqXHR","statusText","status","busy","jQuery","css","WDatabase","version","db","id","statements","published_to","description","templateDump","based_on_template_id","owner_id","CacheManager","databaseId","callback","that","cacheAvailable","getCache","cache","match","databaseIdToCacheIdentifier","arrayBuffer","buffer","Uint8Array","catch","put","Response","caches","open","NotifierClient","main","networkManager","unsentMessages","connect","window","location","protocol","startsWith","host","connection","WebSocket","onerror","onError","onclose","event","onClose","onmessage","onMessage","onopen","command","token","sendIntern","setTimeout","forcedUpdateEvery","counterTillForcedUpdate","send","console","log","parse","sendUpdates","TokenType","NetworkManager","$updateTimerDiv","ownUpdateFrequencyInSeconds","teacherUpdateFrequencyInSeconds","updateFrequencyInSeconds","secondsTillNextUpdate","errorHappened","attr","interval","clearInterval","setInterval","user","forceUpdate","$rect","notifierClient","sendIfNothingIsDirty","projectExplorer","writeEditorTextToFile","settings","wdList","fdList","workspaceList","ws","saved","getWorkspaceData","moduleStore","getModules","file","text","getProgramTextFromMonacoModel","getFileData","workspacesWithoutFiles","files","workspacesOwnerId","userId","language","currentWorkspaceId","getCurrentWorkspace","_a","getModifiedWorkspaces","updateWorkspaces","wd","is_testuser","random","entity","workspace_id","workspaceId","alert","kind","secretKind","secret","databaseName","publishedTo","workspace","klasse","student_ids","class_id","current_workspace_id","version_before","database","newStatements","firstNewStatementIndex","statements_before","new_version","cacheManager","fromDatabaseData","fetchTemplateFromCache","pako","inflate","fetchTemplate","template","saveTemplateToCache","xhrFields","responseType","user_id","templateList","sendUpdatesRequest","sendUpdatesResponse","idToRemoteWorkspaceDataMap","Map","fileIdsSended","workspaces","set","newWorkspaceNames","remoteWorkspace","filter","createNewWorkspaceFromWorkspaceData","idToRemoteFileDataMap","fd","idToModuleMap","fileId","remoteFileData","fileListPanel","removeElement","currentWorkspace","removeModule","indexOf","model","setValue","lastSavedVersionId","getAlternativeVersionId","remoteFile","createFile","join","workspaceListPanel","sortElements","withSort","w","createNewWorkspace","sql_history","path","isFolder","split","panelElement","externalElement","iconClass","addElement","fileData","ae","f","dirty","identical_to_repository_version","getNewModule","putModule","LexerState","TokenTypeReadable","identifier","integerConstant","floatingPointConstant","booleanConstant","stringConstant","charConstant","true","false","keywordRename","keywordTo","keywordAlter","keywordCommit","keywordAdd","keywordDelete","keywordSelect","keywordInsert","keywordInto","keywordValues","keywordUpdate","keywordSet","keywordNo","keywordUse","keywordCreate","keywordReferences","keywordPrimary","keywordForeign","keywordTable","keywordColumn","keywordDrop","keywordUnique","keywordKey","keywordIndex","keywordConstraint","keywordModify","keywordCascade","keywordRestrict","keywordAction","keywordAutoincrement","keywordFrom","keywordWhere","keywordGroup","keywordBy","keywordHaving","keywordOrder","keywordAscending","keywordDescending","keywordNulls","keywordFirst","keywordLast","keywordIs","keywordNull","keywordDatabase","keywordAnd","keywordOr","keywordNot","keywordJoin","keywordNatural","keywordLeft","keywordCross","keywordInner","keywordOuter","keywordOn","keywordAs","keywordLimit","keywordOffset","keywordIn","keywordNotIn","keywordLike","keywordCollate","keywordDefault","keywordComment","keywordEngine","keywordCharset","keywordCharacter","keywordStart","keywordTransaction","keywordIf","keywordExists","leftBracket","rightBracket","leftSquareBracket","rightSquareBracket","leftCurlyBracket","rightCurlyBracket","leftRightSquareBracket","dot","minus","modulo","plus","multiplication","division","singleQuote","doubleQuote","identifierQuote","lower","greater","equal","lowerOrEqual","greaterOrEqual","concatenation","semicolon","colon","comma","backslash","at","pipe","space","tab","newline","identifierChar","comment","endofSourcecode","specialCharList","'","notEqual","linefeed","keywordList","EscapeSequenceList","\"","Lexer","spaceTokens","correspondingBracket","tokenTypesToMerge","first","second","merged","isNot","isNotNull","isNull","input","replace","tokenList","errorList","bracketError","bracketStack","pos","line","column","nonSpaceLastTokenType","nonSpaceLastToken","tokens","errors","currentChar","nextChar","mainState","bracketOpen","bracketClosed","setBracketError","tt","openBracket","char","specialCharToken","pushToken","lexMultilineComment","checkClosingBracket","isDigit","lexEndofLineComment","lexNumber","lexStringConstant","lexSpace","lexAnnotation","lexQuotedIdentifier","lexIdentifierOrKeyword","pushError","position","tripel","newLength","errorLevel","level","a","base","charCode","charCodeAt","posStart","posEnd","substring","escapeChar","beginChar","isDoubleQuotedIdentifier","lastCharWasNewline","sign","firstChar","radix","exponent","posExponentStart","exponentString","Number","parseInt","parseFloat","pow","isSpace","toLowerCase","SQLType","SQLBaseType","parameterDescriptions","checkFunction","outputFunction","canCastToList","binaryResultTypes","unaryOperators","ownIndex","splice","tokenType","secondType","resultType","isCommutative","Array","isArray","map","addBinaryOperation","type2","bt2","operator","booleanType","value1","value2","max","baseTypeMap","toLocaleLowerCase","baseTypes","concat","tens","SQLDerivedType","baseType","parameterValues","parameters","returnBaseType","getUnaryResultType","getBinaryResult","substr","textTypes","varcharType","ci","pv","v","textType","tinyTextType","mediumTextType","longTextType","floatTypes","decimalType","vk","trunc","nk","numericType","doubleType","realType","floatType","numberTypes","intType","integerType","tinyIntType","smallIntType","mediumIntType","bigIntType","dateType","dateTimeType","timestampType","nullType","numericTypes","addBaseTypes","numericBinaryOperators","comparisonOperators","j","characterTypes","booleanOperations","bt","Parser","lookahead","endToken","beginStatementKeywords","completionHints","sqlStatements","addCompletionHint","initializeLookahead","lastToken","parseMain","ct","token1","lastComment","commentBefore","cct","quickFix","assign","nextToken","skip","invokeSemicolonAngel","isOperatorOrDot","title","editsProvider","uri","resource","edit","range","startLineNumber","startColumn","endLineNumber","endColumn","severity","monaco","MarkerSeverity","getSemicolonAngel","register","expectedTokens","operatorPrecedence","ret","deltaColumns","tpos","deltaInsideToken","tokenPos","getCurrentPosition","mainProgram","afterLastStatement","semicolonAfterLastStatement","getCurrentPositionPlus","isEnd","oldPos","errorsBeforeStatement","startPosition","st","parseStatement","hasErrors","ast","from","to","getEndOfPosition","acceptedBySQLite","beginStatementTokens","firstBadToken","retStatements","parseSelect","parseInsert","parseCreateTableOrDatabase","parseUpdate","parseDelete","parseDropTable","parseAlterTable","parseSet","parseUse","expect","node","omittedeStatement","endPosition","symbolTable","tableIdentifier","tableIdentifierPosition","addCompletionHintHere","parseRenameTableOrColumn","parseAlterTableAdd","parseDropColumn","comesToken","getEndOfCurrentToken","newTableName","oldColumnName","oldColumnPosition","newColumnName","unique","parseAddColumn","parseAddPrimaryKey","parseAddIndex","parseModifyColumn","parseAddConstraint","fki","parseForeignKeyDefinition","foreignKeys","referencesTable","referencesColumn","referencesPosition","parseReferences","pos0","pos1","onDelete","modifyColumnInfo","parseColumnDefinition","primaryKeys","index","index_name","indices","columnDefBegin","columnDef","whereNode","whereNodeBegin","whereNodeEnd","parseTerm","columnIdentifiers","columnIdentifierPositions","valuePosBegin","valuePosEnd","parseCreateDatabase","parseCreateTable","ifNotExists","columnList","combinedPrimaryKeyColumns","foreignKeyInfoList","primaryKeyAlreadyDefined","parsePrimaryKeyTerm","columnNode","isPrimary","isAutoIncrement","columns","notNull","parseType","hintColumns","hintTables","hints","additionalColumns","praefix","suffix","datatypes","toString","getBaseType","alreadySeenKeywords","foreignKeyInfo","collate","defaultValue","fromConstantType","canCastTo","valuesPosition","columnsPosition","table","alias","parseValueLists","insideListTokens","outerFirst","leftBracketPosition","constantType","constant","constantNode","columnListStart","fromNode","parentStatement","parseColumnList","columnListKeywordArray","findIndex","allColumns","unshift","fromStartPosition","dontHint","parseTableOrSubQuery","fromListKeywordArray","hintEndPosition","fromEndPosition","whereKeywordArray","whereStart","groupKeywordArray","groupStart","groupByNode","parseGroupBy","orderStart","orderByNode","parseOrderBy","limitNode","parseLimit","numberOfRows","ln","offset","gbn","tokenTypesAfterGroupBy","term","having","obnList","obn","leftSide","parseAtomicTableOrSubQuery","parseJoinOperator","rightSide","firstOperand","secondOperand","on","selectStatement","subquery","query","tokenTypesAfterListEnd","allowAliases","columnTerm","parseTermBinary","precedence","left","parseUnary","operators","right","binaryOp","parseBracket","tt1","unaryOp","operand","isStringConstant","parseDotOrArrayChains","identifier1","position1","parseMethodCallParameters","rightBracketPosition","callMethod","operands","nodes","commaPositions","secondIdentifier","identifierLeft","identifierRight","list","elements","constantTypes","tokenBeforeBracket","selectNode","listNode","parseList","termInsideBrackets","parameter","Column","isPrimaryKey","isNullable","cs","typeMatch1","completeTypeSQL","baseTypeIdentifier","commaSeparatedParameters","trim","fromColumnStructure","Table","ts","size","tsList","tables","fromTableStructure","columnStructureToColumnMap","referencedCs","references","referencedColumn","SymbolTable","parentSymbolTable","positionFrom","positionTo","childSymbolTables","symbols","symbolList","parent","databaseStructure","fromTableStructureList","storeTableSymbols","storeSymbol","posOfDefinition","referencedOnPositions","symbol","containsPosition","shortestSymbolTableContainingPosition","shortestPosition","st1","findTableAtPosition","findTables","SQLMethodParameter","SQLMethod","isAggregating","returnType","acceptsStarParameter","SQLMethodStore","methods","pushOneParameterMethod","countMethod","parameterType","instance","escapeHtml","unsafe","twoDez","z","isDate","inputText","opera1","opera2","lopera1","lopera2","pdate","dd","mm","yy","lyear","isDateTime","dateStr","CompilerStatus","SymbolResolver","databaseTool","symbolTableStack","mainSymbolTable","statement","astNode","resolveSelect","resolveInsert","resolveCreateTable","resolveUpdate","resolveDelete","resolveDropTable","resolveAlterTable","getCurrentSymbolTable","resultTable","pushNewSymbolTable","joinedTables","resolveTableOrSubQuery","extractDatabaseStructure","resolveTerm","c1","sqlType","whereType","getBaseTypeName","findTable","whereSymbolTable","ciPos","createTableNode","thisTable","cn","tosNode","tableList","storeTableIntoSymbolTable","tableAlias","resolveNotIn","typeLeft","typeRight","getBinaryResultType","operandType","resultType1","resolveMethodCall","resolveIdentifier","resolveDot","selectTable","tableSymbols","findColumn","getInstance","getMethods","found","methodParameter","operatorString","leftType","pType","element","elementType","tableCompletionTo","valueList","destType","Compiler","compilerStatus","compiledButNothingToRun","compiling","t0","lexer","clear","lexed","lex","getCurrentlyEditedModule","getBottomDiv","errorManager","showParenthesisWarning","startRegistering","parser","getDatabaseTool","symbolResolver","start","compilerMessage","healSemicolons","readyToRun","Module","oldErrorDecorations","identifierPositions","methodCallPositions","uriCounter","uriMap","Uri","scheme","editor","createModel","updateOptions","tabSize","onDidChangeContent","versionId","isEmbedded","main1","text_before_revision","student_edited_after_revision","bottomDiv","homeworkManager","showHomeWorkRevisionButton","renderHomeworkButton","fromPosition","toPosition","hintKeywords","ch","fromColumn","fromLine","toColumn","toLine","hintColumnsOfTable","chList","sel","selStart","selEnd","stmt","compare","b","lineNumber","bestCh","bestRangeLength","rangeLength","submitted_date","file_type","ec","getValue","EndOfLinePreference","LF","positionList","positionsOnLine","bestFoundPosition","el","sort","e1","e2","errorLevelCompare","level1","level2","ModuleStore","moduleMap","module_id","ms","copy","includeSystemModules","excludedModuleName","moduleName","openContextMenu","items","x","y","mousePointer","PointerEvent","$contextMenu","$openSubMenu","parentMenuItem","mi","caption","link","$item","subMenu","color","ev","stopPropagation","remove","document","off","$link","hide","width","top","append","e","leftRight","innerWidth","xp","topBottom","innerHeight","yp","show","makeTabs","tabDiv","headings","not","tabs","target","removeClass","addClass","trigger","makeDiv","klass","div","jo_mouseDetected","animateToTransparent","$element","cssProperty","startColorRgb","duration","colorPraefix","delta","animate","copyTextToClipboard","navigator","clipboard","writeText","textArea","createElement","style","body","appendChild","focus","select","execCommand","removeChild","fallbackCopyTextToClipboard","TemplateUploader","dump","reason","waitOverlay","dbTool","export","deflate","uploadIntern","processData","headers","DatabaseSettingsDialog","init","$dialog","showMainWindow","saveNameAndPublishedTo","setValues","setNewSecret","$copyButton","prop","checked","each","setNameAndPublishedTo","val","uploadCurrentDatabase","getDatabaseSettings","secrets","is_admin","is_schooladmin","empty","Workspace","permissions","database_id","restoreFromData","currentFileId","currentlyOpenModule","withFiles","$buttonDiv","$htmlFirstLine","$button","ActionManager","$mainElement","actions","keyEntries","buttons","executeKeyDownEvent","actionIdentifier","action","button","active","activeElement","tagName","keyCode","ctrlKey","shiftKey","altKey","actionEntries","actionEntry","preventDefault","ErrorManager","$bottomDiv","$mainDiv","oldDecorations","minimapColor","lightBulbOnClickFunctionList","$bracket_warning","children","getMonacoEditor","errorCountMap","$errorDiv","markers","decorations","$errorList","getSortedAndFilteredErrors","getErrorCount","linesDecorationsClassName","borderLeftClass","lightBulbClass","class","onClickFunction","edits","executeEdits","Range","forceMoveMarkers","processError","Warning","Info","relatedInformation","options","minimap","MinimapPosition","Inline","setModelMarkers","deltaDecorations","$file","$error","registerLightbulbOnClickFunctions","locf","$errorDivs","$div","$lineColumn","category","$message","showError","Main","setModuleActive","revealRangeInCenter","className","HomeworkManager","showRevisionActive","$homeworkTab","$homeworkTabLeft","$homeworkTabRight","prepend","$showRevisionButton","hideRevision","showRevision","originalModel","modifiedModel","diffEditor","createDiffEditor","getElementById","enableSplitViewResizing","originalEditable","readOnly","renderSideBySide","setModel","original","modified","dispose","daysWithModules","dateString","date","Date","dateWithoutTime","getDate","getMonth","getFullYear","dateToStringWithoutTime","dwm","day","m1","m2","localeCompare","moduleWithWorkspace","setWorkspaceActive","BottomDiv","initGUI","MyCompletionItemProvider","triggerCharacters","keywordCompletionItems","keywordToSnippetMap","setupKeywordCompletionItems","getModuleByMonacoModel","wfc","provideCompletionItemsIntern","sw","_contentWidgets","widget","toggleDetails","isStringLiteral","textUntilPosition","getValueInRange","textAfterPosition","completionHint","getCompletionHint","completionItems","addKeywordCompletionItems","dotMatch","ibMatch","identifierAndBracketAfterCursor","addIdentifierCompletionItems","addDotCompletionItems","word","getWordUntilPosition","replaceWordRange","insertAfterCursorRange","item","insertText","suggestions","textAfterDot","textBeforeDot","rangeToReplace","label","detail","filterText","insertTextRules","languages","CompletionItemInsertTextRule","KeepWhitespace","CompletionItemKind","Field","tableIdentifiers","columnIdentifier","InsertAsSnippet","Snippet","Class","sortText","columList","withTable","_b","snippet","Keyword","posMin","posMax","watchDog","arguments","MySignatureHelpProvider","signatureHelpTriggerCharacters","signatureHelpRetriggerCharacters","compileIfDirty","provideSignatureHelpLater","getModel","methodCallPosition","rightMostPosition","mcp","identifierPosition","getSignatureHelp","parameterIndex","cp","activeParameter","activeSignature","signatures","MyHoverProvider","selection","getSelection","getElementAtPosition","getWordUnderCursor","desc","keywordDescriptions","contents","getValueLengthInRange","end","isInsideIdentifierOrArrayDescriptor","begin","isInsideOperator","isInsideIdentifierChain","MyCodeActionProvider","diagnostics","isPreferred","MyReferenceProvider","usagePositions","referencePositions","upInCurrentModule","up","Helper","targetElement","direction","$helper","bottom","height","html","close","fadeIn","fadeOut","mainBase","helperHistory","flag","sendUpdateUserSettings","openHelper","Editor","showMinimap","cw","dontPushNextCursorMove","lastTime","elementDecoration","extensions","conf","onEnterRules","beforeText","afterText","indentAction","IndentAction","IndentOutdent","appendText","None","removeText","comments","lineComment","blockComment","brackets","autoClosingPairs","surroundingPairs","setLanguageConfiguration","setMonarchTokensProvider","defaultToken","tokenPostfix","ignoreCase","escapes","keywords","builtinFunctions","builtinVariables","pseudoColumns","tokenizer","root","include","cases","whitespace","numbers","strings","string","complexIdentifiers","quotedIdentifier","scopes","defineVscSQL","defineTheme","inherit","rules","foreground","fontStyle","colors","lightbulb","enabled","lineDecorationsWidth","peekWidgetDefaultFocus","fixedOverflowWidgets","quickSuggestions","quickSuggestionsDelay","fontSize","fontFamily","fontWeight","roundedSelection","selectOnLineNumbers","automaticLayout","scrollBeyondLastLine","occurrencesHighlight","autoIndent","dragAndDrop","formatOnType","formatOnPaste","suggestFontSize","suggestLineHeight","suggest","localityBonus","insertMode","parameterHints","cycle","mouseWheelZoom","scrollbar","vertical","horizontal","theme","mouseWheelListener","changeEditorFontSize","deltaY","onDidChangeConfiguration","hasChanged","EditorOption","fontInfo","onDidChangeCursorPosition","onDidChangeModel","removeEventListener","addEventListener","passive","setActiveAfterExternalModelSet","registerHoverProvider","registerCompletionItemProvider","registerCodeActionProvider","registerReferenceProvider","registerSignatureHelpProvider","onMouseDown","MouseTargetType","GUTTER_GLYPH_MARGIN","GUTTER_LINE_NUMBERS","isAfterLines","onMarginMouseDown","remeasureFonts","addActions","onDidType","insertEndOfComment","newLine","newColumn","setPosition","getPosition","prevLine","getLineContent","trimRight","endsWith","getLineCount","spacesAtBeginningOfLine","trimLeft","fontSizePx","getTime","editorfs","getOptions","viewModeController","saveFontSize","factor","documentElement","setProperty","dynamic","newEditorFs","setFontSize","addAction","keybindings","KeyMod","CtrlCmd","KeyCode","KEY_K","precondition","keybindingContext","contextMenuGroupId","contextMenuOrder","run","ed","getAction","Enter","getActionManager","isWholeLine","overviewRuler","darkColor","OverviewRulerLane","Left","executeActionActive","getSQLSTatementsAtSelection","sqlStatement","classname","zIndex","setActive","showHelper","Formatter","autoFormatTriggerCharacters","registerDocumentFormattingEditProvider","registerOnTypeFormattingEditProvider","format","tokenlist","lastNonSpaceToken","indentLevel","curlyBracesOpenAtLines","indentLevelAtSwitchStatements","switchHappend","lastTokenWasNewLine","roundBracketsOpen","replaceBetween","insertSpaces","deleteSpaces","openedAtLine","repeat","nextToken1","nextToken2","lastToken1","lastToken2","isBinaryOperator","lastTokenIsOperator","nextTokenIsOperator","getNextNonSpaceToken","beginNextLine","token2","currentIndentation","il","correctIndentation","lowerGeneric","lowerBelongsToGenericExpression","greaterGeneric","greaterBelongsToGenericExpression","tokenBefore","spaces","deleteOverlappingRanges","currentIndex","numberOfSpaces","WorkerSim","initsql","initSqlJs","locateFile","scriptDirectory","SQL1","SQL","createDb","worker","postMessageToClient","buff","config","ready","results","exec","row","postMessage","finished","DatabaseTool","databaseDirectoryEntries","queryId","querySuccessCallbacksMap","queryErrorCallbackMap","sqliteMagicBytes","queries","callbackAfterInitializing","callbackAfterRetrievingStructure","getWaitOverlay","terminate","javaOnlineDir","jo_doc","Worker","querySuccessCallback","queryErrorCallback","delete","queryCount","execQuery","setProgress","shift","executeQuery","retrieveDatabaseStructure","sql","params","getJSON","entries","sql1","result1","parseDatabaseStructure","tableNameToStructureMap","tableName","tableSQL","tableStructure","completeSQL","columnArray","foreignKeyList","columnArray1","dflt_value","columnStructure","typeLengths","fkInfo","referencesRawData","StatementCleaner","MaxRowsPerInsert","sqlCleaned","cleanCreateTableStatement","cleanInsertStatement","statementHeader","lines","vline","cleanValue","cleanColumnDef","cleanForeignKeyInfo","pkc","MySqlImporter","unzipURL","fetch","importFromText","unzipFile","reader","FileReader","onload","readAsText","zip","ZipReader","HttpReader","unzipIntern","BlobReader","getEntries","filename","getData","TextWriter","onprogress","lexOutput","createTableNodes","insertNodes","tableModifyingNodes","tmn","findCreateTableNode","autoIncrementColumn","pcn","findCreateTableColumnNode","mci","mcn","fk","indexIdentifier","makeDatabase","tableNode","statementCleaner","clean","promise","initializeWorker","binDump","DatabaseImportExport","loadFromFile","ld","ab","getDumpType","readAsArrayBuffer","prompt","isBlob","blob","Blob","msSaveOrOpenBlob","createEvent","download","href","URL","createObjectURL","dataset","downloadurl","initEvent","dispatchEvent","downloadFile","NewDatabaseDialog","$templatelist","fetchTemplateList","templatelist","tle","$tle","ownerName","$templateName","$dropZone","evt","originalEvent","dataTransfer","dropEffect","importFile","$dumpFileInput","createMode","hasClass","workspaceData","createWorkspace","$template","template_database_id","code","tIndex","otherDatabaseId","template_id","newTemplateId","sendCreateWorkspace","accordionElement","renderSettingsButton","importer","isDatabase","dbUncompressed","MainMenu","currentSubmenu","openSubmenusOnMousemove","mainMenu","switchTheme","saveToFile","initMenu","setTheme","menu","initMenuitemCallbacks","opensubmenu","AccordionPanel","accordion","flexWeight","newButtonClass","buttonNewTitle","defaultIconClass","withDeleteButton","withFolders","enableDrag","acceptDropKinds","dontSortElements","addPanel","$newFolderAction","addFolder","newElement","newFolderCallback","scrollIntoView","$collapseAllAction","collapseAll","slideUp","$captionElement","$listElement","fixed","grow","$buttonNew","pathArray","selectedElement","getSelectedElement","name1","path1","isFolder1","name2","path2","isFolder2","cmp","compareWithPath","insertIndex","getElementIndex","$elements","elementAtIndex","before","renderElement","insertElement","renameElement","$accordionDiv","getCurrentlySelectedPath","after","newFilesElementCallback","$htmlSecondLine","insertAfter","selectCallback","$listOuter","$ce","$li","targetGrow","parts","toggleClass","currentlyDraggedElementKind","element1","currentlyDraggedElement","moveElement","expanded","aName","sortName","bName","cssClass","expandedCollapsed","pathHtml","addElementActionCallback","$elementAction","$filedragpart","effectAllowed","dropElementCallback","pathIsCollapsed","slideDown","pressTimer","contextmenuHandler","contextMenuItems","renameCallback","newDatabaseElementCallback","contextMenuProvider","cmi","pageX","pageY","clearTimeout","getChildElements","deleteCallback","elementToMove","destinationFolder","destinationPath","movedElements","sourcePath","oldPathLength","moveCallback","folder","pointPos","elementWithText","elementToReplace","renameDoneCallback","selectionRange","$input","setSelectionRange","newValue","makeEditable","newText","invokeCallback","ae1","findElement","pathString","elPath","ps","Accordion","$html","panel","renderOuterHtmlElements","DistributeToStudentsDialog","classes","studentCount","$studentList","students","student","$studentLine","$studentClass","$studentName","rufname","familienname","$dialogMain","distributeWorkspace","sendDistributeWorkspace","ProjectExplorer","$projectexplorerDiv","programPointerModule","programPointerDecoration","lastOpenModule","initFilelistPanel","initWorkspacelistPanel","successfulNetworkCommunicationCallback","sendCreateFile","newName","callbackIfSuccessful","sendDeleteWorkspaceOrFile","is_teacher","$homeworkButtonDiv","$newWorkspaceAction","removeWorkspace","enableNewButton","databaseExplorer","getResultsetPresenter","dest","droppedElement","dropEffekt","$homeAction","onHomeButtonClicked","hideHomeworkTab","workspaceAccordionElement","cmiList","teacherExplorer","classPanel","restoreOwnWorkspaces","setCaption","moduleList","errorCount","errorCountS","setTextAfterFilename","initializeDatabaseTool","fetchDatabase","currentWorkspace_id","renderFiles","nonSystemModules","notifier","refreshAfterRetrievingDBStructure","getHistoryViewer","clearAndShowStatements","cem","editorState","saveViewState","hideHomeworkRevisionButton","restoreViewState","setCurrentlyEditedModule","showProgramPointer","programPointerPosition","revealRangeInCenterIfOutsideViewport","Center","beforeContentClassName","findModuleByFile","RightDiv","$rightDiv","isWholePage","$tabs","$headings","rightdiv_width","$wholeWindow","Sliders","md","clientX","dx","moveLeftPanel","clientY","dy","moveBottomDiv","moveRightDiv","sliderknobLeft","stopImmediatePropagation","sliderknobRight","$editor","mewidth","layout","meheight","$leftPanel","TeacherExplorer","classData","studentPanel","initStudentPanel","initClassPanel","renderClasses","ws_userId","ownWorkspaces","currentOwnWorkspace","restoreWorkspaces","setExplorerColor","showHomeworkTab","attachToWorkspaces","renderWorkspaces","ea","renderStudents","userDataList","ud","classDataList","cd","ThemeManager","themes","initThemes","internalSwitchTheme","monacoTheme","cssColors","UserMenu","Login","$loginSpinner","loginHappened","username","password","viewModes","classDiagram","waitForGUICallback","initTeacherExplorer","classdata","initializeTimer","setFixed","initViewMode","initializeNotifierClient","startupComplete","errorMessage","resultsetPresenter","removePanels","ViewModeController","$buttonsContainer","$buttonMap","highContrast","editorHasFullWidth","$buttonEditorFullscreen","$buttonPresentationMode","$buttonMonitorMode","am","actionManager","registerAction","toggleEditorFullwidth","setMode","saveSettings","otherMode","viewMode","viewModeChosen","themeManager","getChosenViewMode","userDataDirty","monitor","presentation","SemicolonAngel","semicolonPositions","isThereAgain","oldEvidence","firstSeenMs","currentlyEditedModule","cursorLine","isCurrentModule","editOperations","abs","setSelection","DatabaseExplorer","collapsedTables","dbstructure","$table","renderTable","isCollapsed","showTable","$columns","image","referencesHtml","autoincrement","$column","$treeSwitch","$columnList","parents","ProgramControlButtons","$buttonStart","isActive","executeSelectedStatements","ResultsetPresenter","paginationSize","writeQueryListeners","showResultsBusy","showResultPending","$paginationDiv","$arrowLeft","$infoDiv","$arrowRight","paginationFrom","floor","showResults","activateButtons","paginationAll","min","listener","fetchSelectedStatements","hasDDLStatements","some","isDDLStatement","hasWriteStatements","isWriteStatement","executeDDLWriteStatementsEmbedded","executeDDLWriteStatementsInOnlineIDE","executeStatements","sucessfullyExecutedModifyingStatements","getDatabaseExplorer","refresh","notify","getNewStatements","new_statements","firstStatementIndex","executeNewStatements","AddDatabaseStatements","appendStatements","modifyingStatements","resetDatabase","fromIndex","executeStatementsString","successfullyExecutedModifyingStatements","showErrors","callback1","laterSelectExists","isSelectStatement","presentResultsIntern","minimapColors","$runtimeErrorsTab","$runtimeErrorsTabHeading","showErrorDecorations","$errorLine","$sqlDiv","colorize","$messageDiv","$resultTabheading","$resultHeader","headerDiv","$bodyDiv","waitFunction","$header","rows","$row","cell","monacoEditor","Notifier","isOpen","isPolling","counter","isLongPolling","longPollCounter","databaseVersion","onOpen","startLongPolling","rollbackLocal","callbackIfTooFewStatements","callbackIfDone","doRefreshDatabaseExplorer","poll","getNewStatementsHttp","longPoll","resp","WaitOverlay","$waitDiv","visible","fadeOutPending","$bitteWartenText","$bitteWartenProgress","HistoryViewer","$historyPanel","panelEntries","panelEntry","makePanelEntry","makeLastButtonActive","$rollbackButton","$index","$text","$copybutton","$rollbackbutton","rollback","rollbackEmbedded","rollbackLocalNeeded","writeQueryManager","initialTemplateDump","initialStatements","writtenStatements","historyViewer","rightDiv","compiler","semicolonAngel","matchMedia","matches","login","initSliders","checkStartupComplete","startTimer","sendBeacon","timerHandle","isDirty","compile","renderErrorCount","require","paths","availableLanguages","ignoreDuplicateModules","initEditor"],"mappings":"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AAUpX,KAlgB7B,sBAsgBI,SAAS0M,GACL,IAAIoG,EAAYnO,KAAK+I,KAAK6H,iBAG1B5K,EAAK,WAF0B,CAAE4H,YAAaO,EAAU7G,GAAIF,QAAS+G,EAAUM,SAASrH,UAE9D,SAACV,GACnBA,EAASD,QAETsB,EAAS,KAAMoG,EAAUM,SAASrH,QAAUV,EAASmI,cAErDhB,MAAMnH,EAASE,SACfmB,EAASrB,EAASE,SAAS,OAEhC,SAACA,GACAiH,MAAMjH,GACNmB,EAASnB,GAAS,W,8EAphB9B,K,yHCVA,SAAYiE,GACRA,+BAEAA,yCACAA,qDACAA,yCACAA,uCACAA,mCACAA,mBACAA,qBAEAA,qCACAA,6BACAA,oCACAA,sCACAA,gCACAA,sCACAA,sCACAA,sCACAA,kCACAA,sCACAA,sCACAA,gCACAA,8BACAA,gCACAA,sCACAA,8CACAA,wCACAA,wCACAA,oCACAA,sCACAA,kCACAA,sCACAA,gCACAA,oCACAA,8CACAA,sCACAA,wCACAA,0CACAA,sCACAA,oDACAA,kCACAA,oCACAA,oCACAA,8BACAA,sCACAA,oCACAA,4CACAA,8CACAA,oCACAA,oCACAA,kCACAA,8BACAA,kCACAA,0CAEAA,8BACAA,gCACAA,gCAEAA,kCACAA,wCACAA,kCACAA,oCACAA,oCACAA,oCACAA,8BACAA,8BACAA,oCACAA,sCACAA,8BACAA,oCACAA,kCACAA,wCACAA,wCACAA,wCACAA,sCACAA,wCACAA,4CAEAA,oCACAA,gDACAA,8BACAA,sCAGAA,kCACAA,oCACAA,8CACAA,gDACAA,4CACAA,8CACAA,wDAGAA,kBACAA,wBACAA,sBAAOA,oBAAMA,wCAAgBA,4BAC7BA,kCAAaA,kCACbA,0CACAA,sBAAOA,0BAASA,oCAAcA,wCAC9BA,sCACAA,sBACAA,6BAGAA,+BAEAA,uBAGAA,uBAGAA,+BAGAA,qBAGAA,iBAGAA,uBAEAA,mBAGAA,2BAGAA,6BAGAA,yCAGAA,2BAEAA,2CAKAA,qCACAA,iCACAA,2BACAA,6BACAA,uBACAA,6BACAA,qBACAA,yBACAA,+BACAA,iCACAA,yBACAA,u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","file":"sql-ide.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","import { LoginRequest, PerformanceData } from \"./Data.js\";\r\n\r\n// export var credentials: { username: string, password: string } = { username: null, password: null };\r\n\r\nexport class PerformanceCollector {\r\n    static performanceData: PerformanceData[] = [];\r\n    static performanceDataCount: number = 0;\r\n    static lastTimeSent: number = performance.now();\r\n\r\n    static registerPerformanceEntry(url: string, startTime: number) {\r\n        let pe: PerformanceData = PerformanceCollector.performanceData.find(pe => pe.url == url);\r\n        if (pe == null) {\r\n            pe = { count: 0, sumTime: 0, url: url };\r\n            PerformanceCollector.performanceData.push(pe);\r\n        }\r\n        pe.count++;\r\n        let dt = Math.round(performance.now() - startTime);\r\n        pe.sumTime += dt;\r\n        PerformanceCollector.performanceDataCount++;\r\n        // console.log(\"Performance entry for path \" + pe.url + \": \" + dt + \" ms, aggregated: \" + pe.sumTime + \" for \" + pe.count + \" requests.\");\r\n    }\r\n\r\n    static sendDataToServer() {\r\n        if (performance.now() - PerformanceCollector.lastTimeSent > 3 * 60 * 1000) {\r\n            let request = {\r\n                data: PerformanceCollector.performanceData\r\n            }\r\n\r\n            PerformanceCollector.performanceData = [];\r\n            PerformanceCollector.performanceDataCount = 0;\r\n            PerformanceCollector.lastTimeSent = performance.now();\r\n\r\n            ajax(\"collectPerformanceData\", request, () => { })\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport function ajax(url: string, request: any, successCallback: (response: any) => void,\r\n\r\n    errorCallback?: (message: string) => void) {\r\n\r\n    showNetworkBusy(true);\r\n    let time = performance.now();\r\n\r\n    $.ajax({\r\n        type: 'POST',\r\n        async: true,\r\n        data: JSON.stringify(request),\r\n        contentType: 'application/json',\r\n        url: \"servlet/\" + url,\r\n        success: function (response: any) {\r\n\r\n            PerformanceCollector.registerPerformanceEntry(url, time);\r\n\r\n            showNetworkBusy(false);\r\n            if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n                let error = \"Fehler bei der Bearbeitung der Anfrage\"\r\n                if (response.message != null) error = response.message;\r\n\r\n                if (error == \"Not logged in\") {\r\n                    // setTimeout(() => newLogin(url, request, successCallback, errorCallback), 10000);\r\n                    // location.reload();\r\n                }\r\n\r\n                if (errorCallback) errorCallback(error);\r\n            } else {\r\n                successCallback(response);\r\n            }\r\n            return;\r\n\r\n        },\r\n        error: function (jqXHR, message) {\r\n            showNetworkBusy(false);\r\n            if (errorCallback) {\r\n                let statusText = \"Server nicht erreichbar.\"\r\n                if (jqXHR.status != 0) {\r\n                    statusText = \"\" + jqXHR.status\r\n                }\r\n                errorCallback(message + \": \" + statusText);\r\n                return;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function showNetworkBusy(busy: boolean) {\r\n    if (busy) {\r\n        jQuery('.jo_network-busy').css('visibility','visible');\r\n    } else {\r\n        jQuery('.jo_network-busy').css('visibility','hidden');\r\n    }\r\n}\r\n\r\n\r\n","import { DatabaseData } from \"../communication/Data.js\";\r\n\r\nexport class WDatabase {\r\n\r\n    id: number;\r\n    name: string;\r\n\r\n    templateDump: Uint8Array;\r\n    based_on_template_id: number;\r\n    templateName: string;\r\n\r\n    statements: string[];\r\n    published_to: number;\r\n    version: number;\r\n    description: string;\r\n    owner_id: number;\r\n\r\n    static fromDatabaseData(data: DatabaseData, version: number): WDatabase {\r\n\r\n        let db = new WDatabase();\r\n\r\n        db.id = data.id;\r\n        db.name = data.name;\r\n        db.statements = data.statements;\r\n        db.published_to = data.published_to;\r\n        db.version = version;\r\n        db.description = data.description;\r\n        db.templateDump = null;\r\n        db.based_on_template_id = data.based_on_template_id;\r\n        db.owner_id = data.owner_id;\r\n        return db;\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n","export class CacheManager {\r\n    \r\n    fetchTemplateFromCache(databaseId: number, callback: (templateDump: Uint8Array) => void) {\r\n        if(databaseId == null){callback(null); return;}\r\n        let that = this;\r\n        if(!this.cacheAvailable()) callback(null);\r\n        this.getCache((cache) => {\r\n            cache.match(that.databaseIdToCacheIdentifier(databaseId)).then(\r\n                (value)=>{\r\n                    value.arrayBuffer().then((buffer) => callback(new Uint8Array(buffer)));\r\n                })\r\n                .catch(() => callback(null));\r\n        })        \r\n    }\r\n\r\n    saveTemplateToCache(databaseId: number, templateDump: Uint8Array) {\r\n        if(!this.cacheAvailable()) return;\r\n        let that = this;\r\n        this.getCache((cache) => {\r\n            cache.put(that.databaseIdToCacheIdentifier(databaseId), new Response(templateDump));\r\n        })        \r\n    }\r\n\r\n    cacheAvailable(): boolean {\r\n        return 'caches' in self;\r\n    }\r\n\r\n    getCache(callback: (cache: Cache) => void) {\r\n        caches.open('my-cache').then(callback);\r\n    }\r\n\r\n    databaseIdToCacheIdentifier(databaseId: number): string {\r\n        return \"/onlineIdeTemplateDb\" + databaseId;\r\n    }\r\n\r\n}","import { Main } from \"../main/Main.js\";\nimport { ajax } from \"./AjaxHelper.js\";\nimport { GetWebSocketTokenResponse } from \"./Data.js\";\nimport { NetworkManager } from \"./NetworkManager.js\";\n\ntype SubscriptionMessageFromClient = {\n    command: number,  // 1 == \"subscribe\", 2 == \"disconnect\"\n    // 3 == \"keepalive request\"\n    token?: string   // when \"subscribe\"\n}\n\ntype SubscriptionMessageFromServer = {\n    command: number // 1 == Acknoledge Connection, 2 == Notify, 3 == disconnect, 4 == keep alive response\n}\n\ntype NotifierState = \"connecting\" | \"connected\" | \"subscribed\" | \"disconnected\";\n\nexport class NotifierClient {\n\n    connection: WebSocket;\n    state: NotifierState;\n\n    constructor(private main: Main, private networkManager: NetworkManager){\n        this.connect();\n    }\n\n    connect() {\n        this.state = \"connecting\";\n\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\n\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/subscriptionwebsocket\";\n            this.connection = new WebSocket(url);\n\n            this.connection.onerror = (error: Event) => { this.onError(error); }\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\n\n            this.connection.onopen = (event: Event) => {\n                let request: SubscriptionMessageFromClient = {\n                    command: 1,   // \"subscribe\"\n                    token: response.token\n                }\n\n                this.state = \"connected\";\n                this.sendIntern(JSON.stringify(request));\n\n            }\n\n            let that = this;\n            setTimeout(() => {\n                if(this.state != \"subscribed\"){\n                    this.networkManager.forcedUpdateEvery = 1;\n                    this.networkManager.counterTillForcedUpdate = 1;\n                }\n            }, 7000);\n\n        });\n    }\n\n    disconnect(){\n        let request: SubscriptionMessageFromClient = {\n            command: 2   // \"disconnect\"\n        }\n\n        this.state = \"connected\";\n        this.sendIntern(JSON.stringify(request));\n\n    }\n\n    unsentMessages: string[] = [];\n    sendIntern(message: string) {\n\n        if (this.state != \"disconnected\") {\n            try {\n                this.connection.send(message);\n            } catch (exception) {\n                console.log(exception);\n            }\n        }\n    }\n\n    onClose(event: CloseEvent) {\n        this.state = \"disconnected\";\n    }\n\n    onMessage(event: MessageEvent) {\n\n        let response: SubscriptionMessageFromClient = JSON.parse(event.data);\n        if (response.command == undefined) return;\n\n        // 1 == Acknoledge Connection, 2 == Notify, 3 == disconnect, 4 == keep alive response\n        switch (response.command) {\n            case 1: // Acknoledge Connection\n                this.state = \"subscribed\";\n                break;\n            case 2: // Notify\n                this.networkManager.sendUpdates(() => {}, true);\n                break;\n            case 3: // disconnect\n                this.state = \"disconnected\";\n                break;\n            case 4: // keep alive response\n                break;\n        }\n    }\n\n    onError(error: Event) {\n        console.log(\"Fehler beim Notifier-Websocket\");\n    }\n\n}","import { Main } from \"../main/Main.js\";\r\nimport { ajax } from \"./AjaxHelper.js\";\r\nimport { WorkspaceData, FileData, SendUpdatesRequest, SendUpdatesResponse, CreateOrDeleteFileOrWorkspaceRequest, CRUDResponse, UpdateUserSettingsRequest, UpdateUserSettingsResponse, DuplicateWorkspaceRequest, DuplicateWorkspaceResponse, ClassData, DistributeWorkspaceRequest, DistributeWorkspaceResponse, GetDatabaseRequest, getDatabaseResponse, GetNewStatementsRequest, GetNewStatementsResponse, AddDatabaseStatementsRequest, AddDatabaseStatementsResponse, TemplateListEntry, GetTemplateListRequest, GetTemplateListResponse, CreateWorkspaceData, GetDatabaseSettingsResponse, GetDatabaseSettingsRequest, setDatabaseSecretRequest as SetDatabaseSecretRequest, SetDatabaseSecretResponse, SetPublishedToRequest, SetPublishedToResponse, GetTemplateRequest, RollbackRequest, RollbackResponse } from \"./Data.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { WDatabase } from \"../workspace/WDatabase.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { CacheManager } from \"./CacheManager.js\";\r\nimport { NotifierClient } from \"./NotifierClient.js\";\r\n\r\nexport class NetworkManager {\r\n\r\n    timerhandle: any;\r\n\r\n    ownUpdateFrequencyInSeconds: number = 20;\r\n    teacherUpdateFrequencyInSeconds: number = 5;\r\n\r\n    updateFrequencyInSeconds: number = 20;\r\n    forcedUpdateEvery: number = 4;\r\n    counterTillForcedUpdate: number = 2;\r\n    secondsTillNextUpdate: number = this.updateFrequencyInSeconds;\r\n    errorHappened: boolean = false;\r\n\r\n    interval: any;\r\n\r\n    notifierClient: NotifierClient;\r\n\r\n    constructor(private main: Main, private $updateTimerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initializeTimer() {\r\n\r\n        let that = this;\r\n        this.$updateTimerDiv.find('svg').attr('width', that.updateFrequencyInSeconds);\r\n\r\n        if (this.interval != null) clearInterval(this.interval);\r\n\r\n        this.interval = setInterval(() => {\r\n\r\n            if (that.main.user == null) return; // don't call server if no user is logged in\r\n\r\n            that.secondsTillNextUpdate--;\r\n\r\n            if (that.secondsTillNextUpdate < 0) {\r\n                that.secondsTillNextUpdate = that.updateFrequencyInSeconds;\r\n                this.counterTillForcedUpdate--;\r\n                let forceUpdate = this.counterTillForcedUpdate == 0;\r\n                if (forceUpdate) this.counterTillForcedUpdate = this.forcedUpdateEvery;\r\n                that.sendUpdates(() => { }, forceUpdate);\r\n            }\r\n\r\n            let $rect = this.$updateTimerDiv.find('.jo_updateTimerRect');\r\n\r\n            $rect.attr('width', that.secondsTillNextUpdate + \"px\");\r\n\r\n            if (that.errorHappened) {\r\n                $rect.css('fill', '#c00000');\r\n                this.$updateTimerDiv.attr('title', \"Fehler beim letzten Speichervorgang -> Werd's wieder versuchen\");\r\n            } else {\r\n                $rect.css('fill', '#008000');\r\n                this.$updateTimerDiv.attr('title', that.secondsTillNextUpdate + \" Sekunden bis zum nächsten Speichern\");\r\n            }\r\n\r\n        }, 1000);\r\n\r\n    }\r\n\r\n    initializeNotifierClient(){\r\n        this.notifierClient = new NotifierClient(this.main, this);\r\n    }\r\n\r\n    sendUpdates(callback?: () => void, sendIfNothingIsDirty: boolean = false) {\r\n\r\n        if (this.main.user == null) return;\r\n\r\n        this.main.projectExplorer.writeEditorTextToFile();\r\n\r\n        let userSettings = this.main.user.settings;\r\n\r\n        let wdList: WorkspaceData[] = [];\r\n        let fdList: FileData[] = [];\r\n\r\n        for (let ws of this.main.workspaceList) {\r\n\r\n            if (!ws.saved) {\r\n                wdList.push(ws.getWorkspaceData(false));\r\n                ws.saved = true;\r\n            }\r\n\r\n            for (let m of ws.moduleStore.getModules(false)) {\r\n                if (!m.file.saved) {\r\n                    m.file.text = m.getProgramTextFromMonacoModel();\r\n                    fdList.push(m.getFileData(ws));\r\n                    // console.log(\"Save file \" + m.file.name);\r\n                    m.file.saved = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        let request: SendUpdatesRequest = {\r\n            workspacesWithoutFiles: wdList,\r\n            files: fdList,\r\n            owner_id: this.main.workspacesOwnerId,\r\n            userId: this.main.user.id,\r\n            language: 1,\r\n            currentWorkspaceId: this.main.getCurrentWorkspace()?.id,\r\n            getModifiedWorkspaces: false\r\n        }\r\n\r\n        let that = this;\r\n        if (wdList.length > 0 || fdList.length > 0 || sendIfNothingIsDirty) {\r\n            ajax('sendUpdates', request, (response: SendUpdatesResponse) => {\r\n                that.errorHappened = !response.success;\r\n                if (!that.errorHappened) {\r\n\r\n                    that.updateWorkspaces(request, response);\r\n\r\n                    if (callback != null) {\r\n                        callback();\r\n                        return;\r\n                    }\r\n                }\r\n            }, () => {\r\n                that.errorHappened = true;\r\n            });\r\n        } else {\r\n            if (callback != null) {\r\n                callback();\r\n                return;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    sendCreateWorkspace(wd: CreateWorkspaceData, owner_id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            wd.id = Math.round(Math.random() * 10000000);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"workspace\",\r\n            data: wd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            wd.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n\r\n    getDatabaseSettings(workspace_id: number, callback: (response: GetDatabaseSettingsResponse) => void) {\r\n        let request: GetDatabaseSettingsRequest = {\r\n            workspaceId: workspace_id\r\n        };\r\n        ajax(\"getDatabaseSettings\", request, (response: GetDatabaseSettingsResponse) => {\r\n            callback(response);\r\n        }, (message) => { alert(message) })\r\n    }\r\n\r\n    setNewSecret(workspace_id: number, kind: string, callback: (secret: string) => void) {\r\n        let request: SetDatabaseSecretRequest = {\r\n            workspaceId: workspace_id,\r\n            secretKind: kind\r\n        };\r\n        ajax(\"setNewSecret\", request, (response: SetDatabaseSecretResponse) => {\r\n            callback(response.secret);\r\n        }, (message) => { alert(message) })\r\n    }\r\n\r\n    setNameAndPublishedTo(workspace_id: number, name: string, published_to: number, description: string, callback: () => void) {\r\n        let request: SetPublishedToRequest = {\r\n            workspaceId: workspace_id,\r\n            databaseName: name,\r\n            publishedTo: published_to,\r\n            description: description\r\n        };\r\n\r\n        ajax(\"setPublishedTo\", request, (response: SetPublishedToResponse) => {\r\n            callback();\r\n        }, (message) => { alert(message) })\r\n    }\r\n\r\n\r\n\r\n    sendCreateFile(m: Module, ws: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        let fd: FileData = m.getFileData(ws);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"file\",\r\n            data: fd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            m.file.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDuplicateWorkspace(ws: Workspace, callback: (error: string, workspaceData?: WorkspaceData) => void) {\r\n\r\n        let request: DuplicateWorkspaceRequest = {\r\n            workspace_id: ws.id,\r\n            language: 1\r\n        }\r\n\r\n        ajax(\"duplicateWorkspace\", request, (response: DuplicateWorkspaceResponse) => {\r\n            callback(response.message, response.workspace)\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDistributeWorkspace(ws: Workspace, klasse: ClassData, student_ids: number[], callback: (error: string) => void) {\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request: DistributeWorkspaceRequest = {\r\n                workspace_id: ws.id,\r\n                class_id: klasse?.id,\r\n                student_ids: student_ids,\r\n                language: 1\r\n            }\r\n\r\n            ajax(\"distributeWorkspace\", request, (response: DistributeWorkspaceResponse) => {\r\n                callback(response.message)\r\n            }, callback);\r\n\r\n        }, false);\r\n\r\n    }\r\n\r\n\r\n    sendDeleteWorkspaceOrFile(type: \"workspace\" | \"file\", id: number, callback: (error: string) => void) {\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"delete\",\r\n            entity: type,\r\n            id: id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            if (response.success) {\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendUpdateUserSettings(callback: (error: string) => void) {\r\n\r\n        let request: UpdateUserSettingsRequest = {\r\n            settings: this.main.user.settings,\r\n            userId: this.main.user.id,\r\n            current_workspace_id: this.main.getCurrentWorkspace()?.id\r\n        }\r\n\r\n        ajax(\"updateUserSettings\", request, (response: UpdateUserSettingsResponse) => {\r\n            if (response.success) {\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n\r\n    getNewStatements(workspace: Workspace, callback: (statements: string[], firstNewStatementIndex: number) => void) {\r\n        let request: GetNewStatementsRequest = {\r\n            workspaceId: workspace.id,\r\n            version_before: workspace.database.version\r\n        }\r\n\r\n        ajax(\"getNewStatements\", request, (response: GetNewStatementsResponse) => {\r\n            if (response.success) {\r\n                callback(response.newStatements, response.firstNewStatementIndex);\r\n            }\r\n        });\r\n    }\r\n\r\n    AddDatabaseStatements(workspace: Workspace, statements: string[], callback: (statements_before: string[], new_version: number) => void) {\r\n        let request: AddDatabaseStatementsRequest = {\r\n            workspaceId: workspace.id,\r\n            version_before: workspace.database.version,\r\n            statements: statements\r\n        }\r\n\r\n        ajax(\"addDatabaseStatements\", request, (response: AddDatabaseStatementsResponse) => {\r\n            if (response.success) {\r\n                callback(response.statements_before, response.new_version);\r\n            }\r\n        });\r\n    }\r\n\r\n    fetchDatabase(workspace: Workspace, callback: (error: string) => void) {\r\n\r\n        let cacheManager: CacheManager = new CacheManager();\r\n\r\n        let request: GetDatabaseRequest = {\r\n            workspaceId: workspace.id\r\n        }\r\n\r\n        ajax(\"getDatabase\", request, (response: getDatabaseResponse) => {\r\n            if (response.success) {\r\n\r\n                workspace.database = WDatabase.fromDatabaseData(response.database, response.version)\r\n                cacheManager.fetchTemplateFromCache(workspace.database.based_on_template_id, (templateDump: Uint8Array) => {\r\n\r\n                    if (templateDump != null) {\r\n                        // @ts-ignore\r\n                        workspace.database.templateDump = pako.inflate(templateDump);\r\n                        callback(null);\r\n                        return;\r\n                    } else {\r\n                        if (workspace.database.based_on_template_id == null) {\r\n                            callback(null);\r\n                            return\r\n                        }\r\n                        this.fetchTemplate(workspace.id, (template) => {\r\n                            if (template != null) {\r\n                                cacheManager.saveTemplateToCache(workspace.database.based_on_template_id, template);\r\n                                // @ts-ignore\r\n                                workspace.database.templateDump = pako.inflate(template);\r\n                                callback(null);\r\n                                return;\r\n                            } else {\r\n                                callback(\"Konnte das Template nicht laden.\");\r\n                                return;\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    fetchTemplate(workspaceId: number, callback: (template: Uint8Array) => void) {\r\n        let request: GetTemplateRequest = {\r\n            workspaceId: workspaceId\r\n        }\r\n\r\n        $.ajax({\r\n            type: 'POST',\r\n            async: true,\r\n            data: JSON.stringify(request),\r\n            contentType: 'application/json',\r\n            url: \"servlet/getTemplate\",\r\n            xhrFields: { responseType: 'arraybuffer' },\r\n            success: function (response: any) {\r\n                callback(new Uint8Array(response));\r\n            },\r\n            error: function (jqXHR, message) {\r\n                alert(\"Konnte das Template nicht laden.\");\r\n                callback(null);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    fetchTemplateList(callback: (templateList: TemplateListEntry[]) => void) {\r\n        let request: GetTemplateListRequest = { user_id: this.main.user.id }\r\n\r\n        ajax(\"getTemplateList\", request, (response: GetTemplateListResponse) => {\r\n            if (response.success) {\r\n                callback(response.templateList);\r\n            } else {\r\n                callback([]);\r\n            }\r\n        }, (message) => {\r\n            alert(message);\r\n            callback([]);\r\n        })\r\n\r\n    }\r\n\r\n    updateWorkspaces(sendUpdatesRequest: SendUpdatesRequest, sendUpdatesResponse: SendUpdatesResponse) {\r\n\r\n        let idToRemoteWorkspaceDataMap: Map<number, WorkspaceData> = new Map();\r\n\r\n        let fileIdsSended = [];\r\n        sendUpdatesRequest.files.forEach(file => fileIdsSended.push(file.id));\r\n\r\n        sendUpdatesResponse.workspaces.workspaces.forEach(wd => idToRemoteWorkspaceDataMap.set(wd.id, wd));\r\n\r\n        let newWorkspaceNames: string[] = [];\r\n\r\n        for (let remoteWorkspace of sendUpdatesResponse.workspaces.workspaces) {\r\n\r\n            let localWorkspaces = this.main.workspaceList.filter(ws => ws.id == remoteWorkspace.id);\r\n\r\n            // Did student get a workspace from his/her teacher?\r\n            if (localWorkspaces.length == 0) {\r\n                newWorkspaceNames.push(remoteWorkspace.name);\r\n                this.createNewWorkspaceFromWorkspaceData(remoteWorkspace);\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        for (let workspace of this.main.workspaceList) {\r\n            let remoteWorkspace: WorkspaceData = idToRemoteWorkspaceDataMap.get(workspace.id);\r\n            if (remoteWorkspace != null) {\r\n                let idToRemoteFileDataMap: Map<number, FileData> = new Map();\r\n                remoteWorkspace.files.forEach(fd => idToRemoteFileDataMap.set(fd.id, fd));\r\n\r\n                let idToModuleMap: Map<number, Module> = new Map();\r\n                // update/delete files if necessary\r\n                for (let module of workspace.moduleStore.getModules(false)) {\r\n                    let fileId = module.file.id;\r\n                    idToModuleMap.set(fileId, module);\r\n                    let remoteFileData = idToRemoteFileDataMap.get(fileId);\r\n                    if (remoteFileData == null) {\r\n                        this.main.projectExplorer.fileListPanel.removeElement(module);\r\n                        this.main.currentWorkspace.moduleStore.removeModule(module);\r\n                    } else if (remoteFileData.version > module.file.version) {\r\n                        if (fileIdsSended.indexOf(fileId) < 0 || remoteFileData.forceUpdate) {\r\n                            module.file.text = remoteFileData.text;\r\n                            module.model.setValue(remoteFileData.text);\r\n\r\n                            module.file.saved = true;\r\n                            module.lastSavedVersionId = module.model.getAlternativeVersionId()\r\n                        }\r\n                        module.file.version = remoteFileData.version;\r\n                    }\r\n                }\r\n\r\n                // add files if necessary\r\n                for (let remoteFile of remoteWorkspace.files) {\r\n                    if (idToModuleMap.get(remoteFile.id) == null) {\r\n                        this.createFile(workspace, remoteFile);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (newWorkspaceNames.length > 0) {\r\n            let message: string = newWorkspaceNames.length > 1 ? \"Folgende Workspaces hat Deine Lehrkraft Dir gesendet: \" : \"Folgenden Workspace hat Deine Lehrkraft Dir gesendet: \";\r\n            message += newWorkspaceNames.join(\", \");\r\n            alert(message);\r\n        }\r\n\r\n        this.main.projectExplorer.workspaceListPanel.sortElements();\r\n        this.main.projectExplorer.fileListPanel.sortElements();\r\n\r\n    }\r\n\r\n    public createNewWorkspaceFromWorkspaceData(remoteWorkspace: WorkspaceData, withSort: boolean = false) {\r\n        let w = this.main.createNewWorkspace(remoteWorkspace.name, remoteWorkspace.owner_id);\r\n        w.id = remoteWorkspace.id;\r\n        w.sql_history = \"\";\r\n        w.path = remoteWorkspace.path;\r\n        w.isFolder = remoteWorkspace.isFolder;\r\n\r\n        this.main.workspaceList.push(w);\r\n        let path = remoteWorkspace.path.split(\"/\");\r\n        if (path.length == 1 && path[0] == \"\") path = [];\r\n\r\n        let panelElement: AccordionElement = {\r\n            name: remoteWorkspace.name,\r\n            externalElement: w,\r\n            iconClass: \"workspace\",\r\n            isFolder: remoteWorkspace.isFolder,\r\n            path: path\r\n        };\r\n\r\n        this.main.projectExplorer.workspaceListPanel.addElement(panelElement, true);\r\n        w.panelElement = panelElement;\r\n\r\n        for (let fileData of remoteWorkspace.files) {\r\n            this.createFile(w, fileData);\r\n        }\r\n\r\n        if (withSort) {\r\n            this.main.projectExplorer.workspaceListPanel.sortElements();\r\n            this.main.projectExplorer.fileListPanel.sortElements();\r\n        }\r\n    }\r\n\r\n    createFile(workspace: Workspace, remoteFile: FileData) {\r\n        let ae: any = null; //AccordionElement\r\n        if (workspace == this.main.currentWorkspace) {\r\n            ae = {\r\n                name: remoteFile.name,\r\n                externalElement: null\r\n            }\r\n\r\n            this.main.projectExplorer.fileListPanel.addElement(ae, true);\r\n        }\r\n\r\n        let f: any = { // File\r\n            id: remoteFile.id,\r\n            name: remoteFile.name,\r\n            dirty: false,\r\n            saved: true,\r\n            text: remoteFile.text,\r\n            version: remoteFile.version,\r\n            identical_to_repository_version: true,\r\n            workspace_id: workspace.id,\r\n            panelElement: ae\r\n        };\r\n        let m = this.main.projectExplorer.getNewModule(f); //new Module(f, this.main);\r\n        if (ae != null) ae.externalElement = m;\r\n        let modulStore = workspace.moduleStore;\r\n        modulStore.putModule(m);\r\n\r\n    }\r\n\r\n    rollback(callback: (error: string, rollbackLocalNeeded: boolean) => void) {\r\n        let workspace = this.main.currentWorkspace;\r\n        let request: RollbackRequest = { workspaceId: workspace.id, version: workspace.database.version }\r\n\r\n        ajax(\"rollback\", request, (response: RollbackResponse) => {\r\n            if (response.success) {\r\n                \r\n                callback(null, workspace.database.version > response.new_version);\r\n            } else {\r\n                alert(response.message);\r\n                callback(response.message, false);\r\n            }\r\n        }, (message) => {\r\n            alert(message);\r\n            callback(message, false);\r\n        })\r\n\r\n    }\r\n\r\n\r\n}","export enum TokenType {\r\n    identifier,\r\n    // constants\r\n    integerConstant,\r\n    floatingPointConstant,\r\n    booleanConstant,\r\n    stringConstant,\r\n    charConstant,\r\n    true,\r\n    false,\r\n    // keywords\r\n    keywordRename,\r\n    keywordTo,\r\n    keywordAlter,\r\n    keywordCommit,\r\n    keywordAdd,\r\n    keywordDelete,\r\n    keywordSelect,\r\n    keywordInsert,\r\n    keywordInto,\r\n    keywordValues,\r\n    keywordUpdate,\r\n    keywordSet,\r\n    keywordNo,\r\n    keywordUse,\r\n    keywordCreate,\r\n    keywordReferences,\r\n    keywordPrimary,\r\n    keywordForeign,\r\n    keywordTable,\r\n    keywordColumn,\r\n    keywordDrop,\r\n    keywordUnique,\r\n    keywordKey,\r\n    keywordIndex,\r\n    keywordConstraint,\r\n    keywordModify,\r\n    keywordCascade,\r\n    keywordRestrict,\r\n    keywordAction,\r\n    keywordAutoincrement,\r\n    keywordFrom,\r\n    keywordWhere,\r\n    keywordGroup,\r\n    keywordBy,\r\n    keywordHaving,\r\n    keywordOrder,\r\n    keywordAscending,\r\n    keywordDescending,\r\n    keywordNulls,\r\n    keywordFirst,\r\n    keywordLast,\r\n    keywordIs,\r\n    keywordNull,\r\n    keywordDatabase,\r\n\r\n    keywordOr,\r\n    keywordAnd,\r\n    keywordNot,\r\n\r\n    keywordJoin,\r\n    keywordNatural,\r\n    keywordLeft,\r\n    keywordCross,\r\n    keywordInner,\r\n    keywordOuter,\r\n    keywordOn,\r\n    keywordAs,\r\n    keywordLimit,\r\n    keywordOffset,\r\n    keywordIn,\r\n    keywordNotIn,\r\n    keywordLike,\r\n    keywordCollate,\r\n    keywordDefault,\r\n    keywordComment,\r\n    keywordEngine,\r\n    keywordCharset,\r\n    keywordCharacter,\r\n    \r\n    keywordStart,\r\n    keywordTransaction,\r\n    keywordIf,\r\n    keywordExists,\r\n\r\n    // brackets\r\n    leftBracket, // ()\r\n    rightBracket,\r\n    leftSquareBracket, // []\r\n    rightSquareBracket,\r\n    leftCurlyBracket, // {}\r\n    rightCurlyBracket,\r\n    leftRightSquareBracket, // []\r\n    \r\n    // binary operators\r\n    dot, //.\r\n    modulo,\r\n    minus, plus, multiplication, division,\r\n    singleQuote, doubleQuote, // ', \"\r\n    identifierQuote,\r\n    lower, greater, lowerOrEqual, greaterOrEqual, \r\n    concatenation,    \r\n    equal,\r\n    notEqual,\r\n\r\n    // semicolon\r\n    semicolon, // ;\r\n\r\n    colon, // :\r\n\r\n    // comma\r\n    comma, // ,\r\n\r\n    // backslash\r\n    backslash,\r\n\r\n    // @\r\n    pipe,\r\n\r\n    // @\r\n    at,\r\n\r\n    // whitespace\r\n    space,\r\n\r\n    tab,\r\n\r\n    // newline\r\n    newline,\r\n\r\n    // line feed\r\n    linefeed,\r\n\r\n    // only lexer-internal\r\n    identifierChar,  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    comment,\r\n\r\n    endofSourcecode, // will be generated after sourcecode end\r\n    \r\n    // Program statement types:\r\n    \r\n    // additional AST node types\r\n    constantNode,\r\n    callMethod,\r\n    unaryOp,\r\n    binaryOp,\r\n    table,\r\n    subquery,\r\n    list,\r\n    column,\r\n    columnDef,\r\n    allColumns, // *\r\n    isNull,\r\n    isNot, // used by lexer to lex \"is not null\" into one token\r\n    isNotNull,\r\n    omittedeStatement\r\n}\r\n\r\nexport var TokenTypeReadable: {[tt: number]: string} = {\r\n    [TokenType.identifier]: \"ein Bezeichner\",\r\n    // constants\r\n    [TokenType.integerConstant]: \"eine Integer-Konstante\",\r\n    [TokenType.floatingPointConstant]: \"eine Fließkomma-Konstante\",\r\n    [TokenType.booleanConstant]: \"eine boolesche Konstante\",\r\n    [TokenType.stringConstant]: \"eine Zeichenketten-Konstante\",\r\n    [TokenType.charConstant]: \"eine char-Konstante\",\r\n    [TokenType.true]: \"true\",\r\n    [TokenType.false]: \"false\",\r\n    // keywords\r\n    [TokenType.keywordRename]: \"rename\",\r\n    [TokenType.keywordTo]: \"to\",\r\n    [TokenType.keywordAlter]: \"alter\",\r\n    [TokenType.keywordCommit]: \"commit\",\r\n    [TokenType.keywordAdd]: \"add\",\r\n    [TokenType.keywordDelete]: \"delete\",\r\n    [TokenType.keywordSelect]: \"select\",\r\n    [TokenType.keywordInsert]: \"insert\",\r\n    [TokenType.keywordInto]: \"into\",\r\n    [TokenType.keywordValues]: \"values\",\r\n    [TokenType.keywordUpdate]: \"update\",\r\n    [TokenType.keywordSet]: \"set\",\r\n    [TokenType.keywordNo]: \"no\",\r\n    [TokenType.keywordUse]: \"use\",\r\n    [TokenType.keywordCreate]: \"create\",\r\n    [TokenType.keywordReferences]: \"references\",\r\n    [TokenType.keywordPrimary]: \"primary\",\r\n    [TokenType.keywordForeign]: \"foreign\",\r\n    [TokenType.keywordTable]: \"table\",\r\n    [TokenType.keywordColumn]: \"column\",\r\n    [TokenType.keywordDrop]: \"drop\",\r\n    [TokenType.keywordUnique]: \"unique\",\r\n    [TokenType.keywordKey]: \"key\",\r\n    [TokenType.keywordIndex]: \"index\",\r\n    [TokenType.keywordConstraint]: \"constraint\",\r\n    [TokenType.keywordModify]: \"modify\",\r\n    [TokenType.keywordCascade]: \"cascade\",\r\n    [TokenType.keywordRestrict]: \"restrict\",\r\n    [TokenType.keywordAction]: \"action\",\r\n    [TokenType.keywordAutoincrement]: \"autoincrement\",\r\n    [TokenType.keywordFrom]: \"from\",\r\n    [TokenType.keywordWhere]: \"where\",\r\n    [TokenType.keywordGroup]: \"group\",\r\n    [TokenType.keywordBy]: \"by\",\r\n    [TokenType.keywordHaving]: \"having\",\r\n    [TokenType.keywordOrder]: \"order\",\r\n    [TokenType.keywordAscending]: \"ascending\",\r\n    [TokenType.keywordDescending]: \"descending\",\r\n    [TokenType.keywordNulls]: \"nulls\",\r\n    [TokenType.keywordFirst]: \"first\",\r\n    [TokenType.keywordLast]: \"last\",\r\n    [TokenType.keywordIs]: \"is\",\r\n    [TokenType.keywordNull]: \"null\",\r\n    [TokenType.keywordDatabase]: \"database\",\r\n\r\n\r\n    [TokenType.keywordAnd]: \"and\",\r\n    [TokenType.keywordOr]: \"or\",\r\n    [TokenType.keywordNot]: \"not\",\r\n\r\n    [TokenType.keywordJoin]: \"join\",\r\n    [TokenType.keywordNatural]: \"natural\",\r\n    [TokenType.keywordLeft]: \"left\",\r\n    [TokenType.keywordCross]: \"cross\",\r\n    [TokenType.keywordInner]: \"inner\",\r\n    [TokenType.keywordOuter]: \"outer\",\r\n    [TokenType.keywordOn]: \"on\",\r\n    [TokenType.keywordAs]: \"as\",\r\n    [TokenType.keywordLimit]: \"limit\",\r\n    [TokenType.keywordOffset]: \"offset\",\r\n    [TokenType.keywordIn]: \"in\",\r\n    [TokenType.keywordNotIn]: \"not in\",\r\n    [TokenType.keywordLike]: \"like\",\r\n    [TokenType.keywordCollate]: \"collate\",\r\n    [TokenType.keywordDefault]: \"default\",\r\n    [TokenType.keywordComment]: \"comment\",\r\n    [TokenType.keywordEngine]: \"engine\",\r\n    [TokenType.keywordCharset]: \"charset\",\r\n    [TokenType.keywordCharacter]: \"character\",\r\n    [TokenType.keywordStart]: \"start\",\r\n    [TokenType.keywordTransaction]: \"transaction\",\r\n    [TokenType.keywordIf]: \"if\",\r\n    [TokenType.keywordExists]: \"exists\",\r\n\r\n    // brackets\r\n    [TokenType.leftBracket]: \"(\", // ()\r\n    [TokenType.rightBracket]: \")\",\r\n    [TokenType.leftSquareBracket]: \"[\", // []\r\n    [TokenType.rightSquareBracket]: \"]\",\r\n    [TokenType.leftCurlyBracket]: \"{\", // {}\r\n    [TokenType.rightCurlyBracket]: \"}\",\r\n    [TokenType.leftRightSquareBracket]: \"[]\", \r\n    \r\n    // operators\r\n    [TokenType.dot]: \".\", //.\r\n    [TokenType.minus]: \"-\", \r\n    [TokenType.modulo]: \"%\", \r\n    [TokenType.plus]: \"+\", \r\n    [TokenType.multiplication]: \"*\", \r\n    [TokenType.division]: \"/\",\r\n    [TokenType.singleQuote]: \"'\", \r\n    [TokenType.doubleQuote]: \"\\\"\", // ']: \"\", \"\r\n    [TokenType.identifierQuote]: \"`\",\r\n    [TokenType.lower]: \"<\", \r\n    [TokenType.greater]: \">\",\r\n    [TokenType.equal]: \"=\", \r\n    [TokenType.lowerOrEqual]: \"<=\", \r\n    [TokenType.greaterOrEqual]: \">=\", \r\n    [TokenType.concatenation]: \"||\", \r\n    \r\n    // semicolon\r\n    [TokenType.semicolon]: \";\", // ;\r\n    [TokenType.colon]: \":\", // ;\r\n\r\n    // comma\r\n    [TokenType.comma]: \",\", \r\n\r\n    // backslash\r\n    [TokenType.backslash]: \"\\\\\",\r\n\r\n    // at\r\n    [TokenType.at]: \"@\",\r\n    \r\n    // pipe\r\n    [TokenType.pipe]: \"|\",\r\n\r\n    // whitespace\r\n    [TokenType.space]: \"ein Leerzeichen\",\r\n    [TokenType.tab]: \"ein Tabulatorzeichen\",\r\n\r\n    // newline\r\n    [TokenType.newline]: \"ein Zeilenumbruch\",\r\n\r\n    // only lexer-internal\r\n    [TokenType.identifierChar]: \"eines der Zeichen a..z, A..Z, _\",  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    [TokenType.comment]: \"ein Kommentar\",\r\n\r\n    [TokenType.endofSourcecode]: \"das Ende des Programmes\"\r\n\r\n}\r\n\r\nexport var specialCharList: {[keyword: string]:TokenType} = {\r\n    '(': TokenType.leftBracket, // ()\r\n    ')': TokenType.rightBracket,\r\n    '[': TokenType.leftSquareBracket, // []\r\n    ']': TokenType.rightSquareBracket,\r\n    '{': TokenType.leftCurlyBracket, // {}\r\n    '}': TokenType.rightCurlyBracket,\r\n    \r\n    // operators\r\n    '.': TokenType.dot, //.\r\n    ',': TokenType.comma, //.\r\n    '-': TokenType.minus,\r\n    '%': TokenType.modulo,\r\n    '+': TokenType.plus, \r\n    '*': TokenType.multiplication, \r\n    '/': TokenType.division,\r\n    '\\\\': TokenType.backslash,\r\n    '@': TokenType.at,\r\n    '|': TokenType.pipe,\r\n    '\\'': TokenType.singleQuote, \r\n    '\"': TokenType.doubleQuote, // ', \"\r\n    '`': TokenType.identifierQuote, // ', \"\r\n    \"<\": TokenType.lower,\r\n    \">\": TokenType.greater,\r\n    \"=\": TokenType.equal,\r\n    \"<>\": TokenType.notEqual,\r\n    \r\n    ';': TokenType.semicolon, // ;\r\n    ':': TokenType.colon, // ;\r\n\r\n    // whitespace\r\n    ' ': TokenType.space,\r\n    '\\t': TokenType.tab,\r\n\r\n    // newline\r\n    '\\n': TokenType.newline,\r\n    '\\r': TokenType.linefeed\r\n}\r\n\r\nexport var keywordList: {[keyword: string]:TokenType} = {\r\n    \"rename\": TokenType.keywordRename,\r\n    \"to\": TokenType.keywordTo,\r\n    \"alter\": TokenType.keywordAlter,\r\n    \"commit\": TokenType.keywordCommit,\r\n    \"add\": TokenType.keywordAdd,\r\n    \"delete\": TokenType.keywordDelete,\r\n    \"select\": TokenType.keywordSelect,\r\n    \"insert\": TokenType.keywordInsert,\r\n    \"into\": TokenType.keywordInto,\r\n    \"values\": TokenType.keywordValues,\r\n    \"update\": TokenType.keywordUpdate,\r\n    \"set\": TokenType.keywordSet,\r\n    \"no\": TokenType.keywordNo,\r\n    \"use\": TokenType.keywordUse,\r\n    \"create\": TokenType.keywordCreate,\r\n    \"references\": TokenType.keywordReferences,\r\n    \"primary\": TokenType.keywordPrimary,\r\n    \"foreign\": TokenType.keywordForeign,\r\n    \"table\": TokenType.keywordTable,\r\n    \"column\": TokenType.keywordColumn,\r\n    \"drop\": TokenType.keywordDrop,\r\n    \"unique\": TokenType.keywordUnique,\r\n    \"key\": TokenType.keywordKey,\r\n    \"index\": TokenType.keywordIndex,\r\n    \"constraint\": TokenType.keywordConstraint,\r\n    \"modify\": TokenType.keywordModify,\r\n    \"cascade\": TokenType.keywordCascade,\r\n    \"restrict\": TokenType.keywordRestrict,\r\n    \"action\": TokenType.keywordAction,\r\n    \"autoincrement\": TokenType.keywordAutoincrement,\r\n    \"auto_increment\": TokenType.keywordAutoincrement,\r\n    \"from\": TokenType.keywordFrom,\r\n    \"where\": TokenType.keywordWhere,\r\n    \"true\": TokenType.true,\r\n    \"false\": TokenType.false,\r\n    \"group\": TokenType.keywordGroup,\r\n    \"by\": TokenType.keywordBy,\r\n    \"having\": TokenType.keywordHaving,\r\n    \"order\": TokenType.keywordOrder,\r\n    \"asc\": TokenType.keywordAscending,\r\n    \"desc\": TokenType.keywordDescending,\r\n    \"nulls\": TokenType.keywordNulls,\r\n    \"first\": TokenType.keywordFirst,\r\n    \"last\": TokenType.keywordLast,\r\n    \"is\": TokenType.keywordIs,\r\n    \"null\": TokenType.keywordNull,\r\n    \"database\": TokenType.keywordDatabase,\r\n\r\n    \"or\": TokenType.keywordOr,\r\n    \"and\": TokenType.keywordAnd,\r\n    \"not\": TokenType.keywordNot,\r\n\r\n    \"join\": TokenType.keywordJoin,\r\n    \"natural\": TokenType.keywordNatural,\r\n    \"left\": TokenType.keywordLeft,\r\n    \"cross\": TokenType.keywordCross,\r\n    \"inner\": TokenType.keywordInner,\r\n    \"outer\": TokenType.keywordOuter,\r\n    \"on\": TokenType.keywordOn,\r\n    \"as\": TokenType.keywordAs,\r\n    \"limit\": TokenType.keywordLimit,\r\n    \"offset\": TokenType.keywordOffset,\r\n    \"in\": TokenType.keywordIn,\r\n    \"not in\": TokenType.keywordNotIn,\r\n    \"like\": TokenType.keywordLike,\r\n    \"collate\": TokenType.keywordCollate,\r\n    \"default\": TokenType.keywordDefault,\r\n    \"comment\": TokenType.keywordComment,\r\n    \"engine\": TokenType.keywordEngine,\r\n    \"charset\": TokenType.keywordCharset,\r\n    \"character\": TokenType.keywordCharacter,\r\n    \"start\": TokenType.keywordStart,\r\n    \"transaction\": TokenType.keywordTransaction,\r\n    \"if\": TokenType.keywordIf,\r\n    \"exists\": TokenType.keywordExists\r\n\r\n\r\n};\r\n\r\nexport var EscapeSequenceList: {[keyword: string]:string} = {\r\n    \"n\": \"\\n\",\r\n    \"r\": \"\\r\",\r\n    \"t\": \"\\t\",\r\n    \"\\\"\": \"\\\"\",\r\n    \"'\": \"'\",\r\n    \"\\\\\": \"\\\\\"\r\n}\r\n\r\nexport type TextPosition = {\r\n    line: number,\r\n    column: number, \r\n    length: number\r\n}\r\n\r\nexport type TextPositionWithoutLength = {\r\n    line: number,\r\n    column: number\r\n}\r\n\r\nexport type Token = {\r\n    tt: TokenType,\r\n    value: string|number|boolean,\r\n    position: TextPosition,\r\n    commentBefore?: Token,\r\n    isDoubleQuotedIdentifier?: boolean\r\n}\r\n\r\nexport type TokenList = Token[];\r\n\r\nfunction tokenToString(t: Token){\r\n    return \"<div><span style='font-weight: bold'>\" + TokenType[t.tt] + \"</span>\" +\r\n            \"<span style='color: blue'> &nbsp;'\" + t.value + \"'</span> (l&nbsp;\" + t.position.line + \", c&nbsp;\" + t.position.column + \")</div>\";\r\n}\r\n \r\nexport function tokenListToString(tl: TokenList):string{\r\n    let s = \"\";\r\n    for(let t of tl){\r\n        s += tokenToString(t) + \"\\n\";\r\n    }\r\n    return s;\r\n}","import { TokenList, specialCharList, TokenType, Token, EscapeSequenceList, keywordList, TextPosition, TokenTypeReadable } from \"./Token.js\";\r\n\r\nenum LexerState {\r\n    number, identifier, stringConstant, characterConstant, multilineComment, EndoflineComment\r\n}\r\n\r\nvar endChar = \"►\"; // \\u10000\r\n\r\nexport type QuickFix = {\r\n    title: string,\r\n    editsProvider: (uri: monaco.Uri) => monaco.languages.WorkspaceTextEdit[]\r\n}\r\n\r\nexport type ErrorLevel = \"info\" | \"error\" | \"warning\";\r\n\r\nexport type Error = {\r\n    position: TextPosition,\r\n    text: string,\r\n    quickFix?: QuickFix,\r\n    level: ErrorLevel\r\n}\r\n\r\nexport class Lexer {\r\n\r\n    tokenList: TokenList;\r\n    nonSpaceLastTokenType: TokenType;\r\n    nonSpaceLastToken: Token;\r\n\r\n    errorList: Error[];\r\n    pos: number;\r\n    line: number;\r\n    column: number;\r\n\r\n    currentChar: string;\r\n    nextChar: string;\r\n\r\n    input: string;\r\n\r\n    spaceTokens: TokenType[] = [\r\n        TokenType.space, TokenType.tab, TokenType.newline\r\n    ];\r\n\r\n    bracketStack: TokenType[];\r\n    bracketError: string;\r\n    correspondingBracket: { [key: number]: TokenType } = {};\r\n\r\n    tokenTypesToMerge: { first: TokenType, second: TokenType, merged: TokenType }[] = [\r\n        { first: TokenType.keywordNotIn, second: TokenType.keywordIn, merged: TokenType.keywordNotIn },\r\n        { first: TokenType.keywordIs, second: TokenType.keywordNot, merged: TokenType.isNot },\r\n        { first: TokenType.isNot, second: TokenType.keywordNull, merged: TokenType.isNotNull },\r\n        { first: TokenType.keywordIs, second: TokenType.keywordNull, merged: TokenType.isNull },\r\n    ]\r\n\r\n    constructor() {\r\n        this.correspondingBracket[TokenType.leftBracket] = TokenType.rightBracket;\r\n        this.correspondingBracket[TokenType.leftCurlyBracket] = TokenType.rightCurlyBracket;\r\n        this.correspondingBracket[TokenType.leftSquareBracket] = TokenType.rightSquareBracket;\r\n        this.correspondingBracket[TokenType.rightBracket] = TokenType.leftBracket;\r\n        this.correspondingBracket[TokenType.rightCurlyBracket] = TokenType.leftCurlyBracket;\r\n        this.correspondingBracket[TokenType.rightSquareBracket] = TokenType.leftSquareBracket;\r\n    }\r\n\r\n    lex(input: string): { tokens: TokenList, errors: Error[], bracketError: string } {\r\n\r\n        this.input = input.replace(\"\\u00a0\", \" \");\r\n        this.tokenList = [];\r\n        this.errorList = [];\r\n        this.bracketError = null;\r\n        this.bracketStack = [];\r\n        this.pos = 0;\r\n        this.line = 1;\r\n        this.column = 1;\r\n        this.nonSpaceLastTokenType = null;\r\n        this.nonSpaceLastToken = null;\r\n\r\n\r\n        if (input.length == 0) {\r\n            return { tokens: this.tokenList, errors: this.errorList, bracketError: null };\r\n        }\r\n\r\n        this.currentChar = input.charAt(0);\r\n\r\n        this.nextChar = input.length > 1 ? input.charAt(1) : endChar;\r\n\r\n\r\n        while (this.currentChar != endChar) {\r\n            this.mainState();\r\n        }\r\n\r\n        if (this.bracketStack.length > 0) {\r\n            let bracketOpen = this.bracketStack.pop();\r\n            let bracketClosed = this.correspondingBracket[bracketOpen];\r\n\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[bracketClosed]);\r\n        }\r\n\r\n        return {\r\n            tokens: this.tokenList,\r\n            errors: this.errorList,\r\n            bracketError: this.bracketError\r\n        };\r\n\r\n    }\r\n\r\n    checkClosingBracket(tt: TokenType) {\r\n        if (this.bracketStack.length == 0) {\r\n            let bracketOpen = this.correspondingBracket[tt];\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[tt]);\r\n            return;\r\n        }\r\n        let openBracket = this.bracketStack.pop();\r\n        let correspondingBracket = this.correspondingBracket[openBracket];\r\n        if (tt != correspondingBracket) {\r\n            this.setBracketError(TokenTypeReadable[openBracket] + \" \" + TokenTypeReadable[correspondingBracket]);\r\n        }\r\n    }\r\n\r\n    setBracketError(error: string) {\r\n        if (this.bracketError == null) this.bracketError = error;\r\n    }\r\n\r\n    next() {\r\n        this.pos++;\r\n        this.currentChar = this.nextChar;\r\n        if (this.pos + 1 < this.input.length) {\r\n            this.nextChar = this.input.charAt(this.pos + 1);\r\n        } else {\r\n            this.nextChar = endChar;\r\n        }\r\n        this.column++; // column of current char\r\n    }\r\n\r\n\r\n\r\n    mainState() {\r\n\r\n        let char = this.currentChar;\r\n\r\n        let specialCharToken = specialCharList[char];\r\n\r\n        if (specialCharToken != null) {\r\n            switch (specialCharToken) {\r\n                case TokenType.leftSquareBracket:\r\n                    if (this.nextChar == \"]\") {\r\n                        this.pushToken(TokenType.leftRightSquareBracket, \"[]\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.leftSquareBracket, \"[\");\r\n                        this.bracketStack.push(specialCharToken);\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.division:\r\n                    if (this.nextChar == '*') {\r\n                        this.lexMultilineComment();\r\n                        return;\r\n                    }\r\n                    this.pushToken(TokenType.division, '/');\r\n                    this.next();\r\n                    return;\r\n                case TokenType.pipe:\r\n                    if (this.nextChar == \"|\") {\r\n                        this.pushToken(TokenType.concatenation, '||');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.pipe, '|');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.lower:\r\n                    if (this.nextChar == \">\") {\r\n                        this.pushToken(TokenType.notEqual, '<>');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.lower, '<');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.rightSquareBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.minus:\r\n                    if (this.isDigit(this.nextChar, 10) && !\r\n                        ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.rightBracket].indexOf(this.nonSpaceLastTokenType) >= 0)\r\n                    ) {\r\n                        this.lexNumber();\r\n                        return;\r\n                    } else if (this.nextChar == '-') {\r\n                        this.lexEndofLineComment();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.minus, '-');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.singleQuote:\r\n                    this.lexStringConstant(\"'\");\r\n                    return;\r\n                case TokenType.doubleQuote:\r\n                    this.lexStringConstant('\"');\r\n                    return;\r\n                case TokenType.newline:\r\n                    this.pushToken(TokenType.newline, '\\n');\r\n                    this.line++;\r\n                    this.column = 0;\r\n                    this.next();\r\n                    return;\r\n                case TokenType.space:\r\n                case TokenType.tab:\r\n                    this.lexSpace();\r\n                    return;\r\n                case TokenType.linefeed:\r\n                    this.next();\r\n                    return;\r\n                case TokenType.at:\r\n                    this.lexAnnotation();\r\n                    return;\r\n                case TokenType.identifierQuote:\r\n                    this.lexQuotedIdentifier();\r\n                    return;\r\n            }\r\n\r\n            this.pushToken(specialCharToken, char);\r\n            this.next();\r\n            return;\r\n\r\n        }\r\n\r\n        // no special char. Number?\r\n\r\n        if (this.isDigit(char, 10)) {\r\n            this.lexNumber();\r\n            return;\r\n        }\r\n\r\n        this.lexIdentifierOrKeyword();\r\n\r\n    }\r\n\r\n\r\n    lexQuotedIdentifier() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let s: string = \"\";\r\n        this.next();\r\n        while(this.currentChar != '`' && this.currentChar != endChar){\r\n            s += this.currentChar;\r\n            this.next();\r\n        }\r\n        if(this.currentChar == endChar){\r\n            this.pushError(\"Innerhalb eines in `` eingeschlossenen Bezeichners wurde das Ende der Datei erreicht.\", s.length + 1, \"error\", line, column);\r\n        } else {\r\n            this.next(); // skip `\r\n            this.pushToken(TokenType.identifier, s, line, column);\r\n        }\r\n    }\r\n\r\n    pushToken(tt: TokenType, text: string | number | boolean, line: number = this.line, column: number = this.column, length: number = (\"\" + text).length) {\r\n        let t: Token = {\r\n            tt: tt,\r\n            value: text,\r\n            position: {\r\n                column: column,\r\n                line: line,\r\n                length: length\r\n            }\r\n        }\r\n\r\n        for (let tripel of this.tokenTypesToMerge) {\r\n            if (tt == tripel.second && this.nonSpaceLastTokenType == tripel.first) {\r\n                let newLength = column - this.nonSpaceLastToken.position.column + length;\r\n                this.nonSpaceLastToken.tt = tripel.merged;\r\n                this.nonSpaceLastToken.position = { column: this.nonSpaceLastToken.position.column, line: line, length: newLength };\r\n                this.nonSpaceLastToken.value = this.nonSpaceLastToken.value + \" \" + text;\r\n\r\n                this.nonSpaceLastTokenType = tripel.merged;\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (!(this.spaceTokens.indexOf(tt) >= 0)) {\r\n            this.nonSpaceLastTokenType = tt;\r\n            this.nonSpaceLastToken = t;\r\n        }\r\n\r\n        this.tokenList.push(t);\r\n    }\r\n\r\n    pushError(text: string, length: number, errorLevel: ErrorLevel = \"error\", line: number = this.line, column: number = this.column) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: {\r\n                line: line,\r\n                column: column,\r\n                length: length\r\n            },\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n\r\n\r\n    isDigit(a: string, base: number) {\r\n        var charCode = a.charCodeAt(0);\r\n\r\n        if (base == 10) return (charCode >= 48 && charCode <= 57); // 0 - 9\r\n        if (base == 2) return (charCode >= 48 && charCode <= 49); // 0, 1\r\n        if (base == 8) return (charCode >= 48 && charCode <= 55); // 0 - 7\r\n        if (base == 16) return (charCode >= 48 && charCode <= 57) || (charCode >= 97 && charCode <= 102) ||\r\n            (charCode >= 65 && charCode <= 70); // 0 - 9 || a - f || A - F\r\n    }\r\n\r\n    lexSpace() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n\r\n        let posStart = this.pos;\r\n        while (this.currentChar == \" \" || this.currentChar == \"\\t\") {\r\n            this.next();\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n        this.pushToken(TokenType.space, this.input.substring(posStart, posEnd), line, column);\r\n        return;\r\n\r\n    }\r\n\r\n    lexCharacterConstant() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n        this.next();\r\n        let char = this.currentChar;\r\n        if (char == \"\\\\\") {\r\n            let escapeChar = EscapeSequenceList[this.nextChar];\r\n            if (escapeChar == null) {\r\n                this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                if (this.nextChar != \"'\") {\r\n                    char = this.nextChar;\r\n                    this.next();\r\n                }\r\n            } else {\r\n                char = escapeChar;\r\n                this.next();\r\n            }\r\n        }\r\n        this.next();\r\n        if (this.currentChar != \"'\") {\r\n            this.pushError(\"Das Ende der char-Konstante wird erwartet (').\", 1);\r\n        } else {\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.charConstant, char, line, column);\r\n\r\n    }\r\n\r\n    lexStringConstant(beginChar: string) {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let text = \"\";\r\n\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\\\\") {\r\n                let escapeChar = EscapeSequenceList[this.nextChar];\r\n                if (escapeChar == null) {\r\n                    this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                } else {\r\n                    char = escapeChar;\r\n                    this.next();\r\n                }\r\n            } else if (char == beginChar) {\r\n                this.next();\r\n                break;\r\n            } else if (char == \"\\n\" || char == endChar) {\r\n                this.pushError('Innerhalb einer String-Konstante wurde das Zeilenende erreicht.', text.length + 1, \"error\", line, column);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        if (beginChar == \"'\") {\r\n            this.pushToken(TokenType.stringConstant, text, line, column, text.length + 2);\r\n        } else {\r\n            this.pushToken(TokenType.identifier, text, line, column, text.length + 2);\r\n            this.tokenList[this.tokenList.length - 1].isDoubleQuotedIdentifier = true;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    lexMultilineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let lastCharWasNewline: boolean = false;\r\n\r\n        let text = \"/*\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"*\" && this.nextChar == \"/\") {\r\n                this.next();\r\n                this.next();\r\n                text += \"*/\";\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                this.pushError(\"Innerhalb eines Mehrzeilenkommentars (/*... */) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            if (char == \"\\n\") {\r\n                this.line++;\r\n                this.column = 0;\r\n                lastCharWasNewline = true;\r\n                text += char;\r\n            } else if (!(lastCharWasNewline && char == \" \")) {\r\n                text += char;\r\n                lastCharWasNewline = false;\r\n            }\r\n\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n    lexEndofLineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let text = \"--\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\n\") {\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                // this.pushError(\"Innerhalb eines Einzeilenkommentars (//... ) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n\r\n    lexNumber() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let sign: number = 1;\r\n        if (this.currentChar == '-') {\r\n            sign = -1;\r\n            this.next();\r\n        }\r\n\r\n        let posStart = this.pos;\r\n\r\n        let firstChar = this.currentChar;\r\n\r\n        this.next();\r\n\r\n        let radix: number = 10;\r\n\r\n        if (firstChar == '0' && (['b', 'x', '0', '1', '2', '3', '4', '5', '6', '7'].indexOf(this.currentChar) >= 0)) {\r\n            if (this.currentChar == 'x') {\r\n                radix = 16;\r\n                this.next();\r\n            } else if (this.currentChar == 'b') {\r\n                radix = 2;\r\n                this.next();\r\n            } else radix = 8;\r\n            posStart = this.pos;\r\n        }\r\n\r\n        while (this.isDigit(this.currentChar, radix)) {\r\n            this.next();\r\n        }\r\n\r\n        let tt = TokenType.integerConstant;\r\n\r\n        if (this.currentChar == \".\") {\r\n            tt = TokenType.floatingPointConstant;\r\n\r\n            this.next();\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n\r\n        }\r\n\r\n        let base = this.input.substring(posStart, this.pos);\r\n\r\n        posStart = this.pos;\r\n        let exponent: number = 0;\r\n\r\n        let hasExponential: boolean = false;\r\n        //@ts-ignore\r\n        if (this.currentChar == \"e\") {\r\n            hasExponential = true;\r\n            this.next();\r\n            let posExponentStart: number = this.pos;\r\n\r\n            //@ts-ignore\r\n            if (this.currentChar == '-') {\r\n                this.next();\r\n            }\r\n\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n            let exponentString = this.input.substring(posExponentStart, this.pos);\r\n            exponent = Number.parseInt(exponentString);\r\n        }\r\n\r\n        if (this.currentChar == 'd' || this.currentChar == 'f') {\r\n            tt == TokenType.floatingPointConstant;\r\n            this.next();\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n        }\r\n\r\n        let value: number = (tt == TokenType.integerConstant) ? Number.parseInt(base, radix) : Number.parseFloat(base);\r\n        value *= sign;\r\n        if (exponent != 0) value *= Math.pow(10, exponent);\r\n\r\n        this.pushToken(tt, value, line, column);\r\n\r\n    }\r\n\r\n    lexAnnotation() {\r\n        let line = this.line;\r\n        let column = this.column - 1;\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n        this.next(); // skip@\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n        this.pushToken(TokenType.at, text, line, column, text.length + 1);\r\n    }\r\n\r\n    lexIdentifierOrKeyword() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n\r\n        let tt = keywordList[text.toLowerCase()];\r\n        if (tt != null && typeof tt == \"number\") {\r\n\r\n            switch (tt) {\r\n                case TokenType.true:\r\n                    this.pushToken(TokenType.booleanConstant, true, line, column);\r\n                    break;\r\n                case TokenType.false:\r\n                    this.pushToken(TokenType.booleanConstant, false, line, column);\r\n                    break;\r\n                default:\r\n                    this.pushToken(tt, text, line, column);\r\n                    break;\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        this.pushToken(TokenType.identifier, text, line, column);\r\n\r\n    }\r\n\r\n    isSpace(char: string): boolean {\r\n        return char == \" \" || char == \"\\n\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport function errorListToString(errorList: Error[]): string {\r\n    let s = \"\";\r\n\r\n    for (let error of errorList) {\r\n\r\n        s += \"Z \" + error.position.line + \", S \" + error.position.column + \": \";\r\n        s += error.text + \"<br>\";\r\n\r\n    }\r\n\r\n    return s;\r\n}","import { TokenType } from \"../lexer/Token.js\";\r\n\r\ntype CheckFunction = (columnIdentifier: string, parameterValues: number[]) => string;\r\ntype OutputFunction = (value: any, parameterValues: number[]) => string;\r\n\r\nexport abstract class SQLType {\r\n\r\n    abstract canCastTo(type2: SQLType): boolean;\r\n\r\n    abstract getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType;\r\n\r\n    abstract getUnaryResultType(operator: TokenType): SQLType;\r\n\r\n    abstract getBinaryResult(operator: TokenType, value1: any, value2: any): any;\r\n\r\n    abstract toString(): string;\r\n\r\n    abstract getBaseTypeName(): string;\r\n\r\n}\r\n\r\nexport class SQLBaseType extends SQLType {\r\n    // Map<tokenType, Map<SecondType, ResultType>>\r\n    binaryResultTypes: Map<TokenType, Map<SQLBaseType, SQLBaseType>> = new Map();\r\n\r\n    unaryOperators: TokenType[] = [];\r\n\r\n    static baseTypes: SQLBaseType[] = [];\r\n    static baseTypeMap: Map<string, SQLBaseType> = new Map();\r\n\r\n    public canCastToList: string[];\r\n\r\n    constructor(public name: string, public parameterDescriptions: string[],\r\n        public checkFunction: CheckFunction, public outputFunction: OutputFunction, canCastToList: string[]) {\r\n        super();\r\n        this.canCastToList = canCastToList.slice(0);\r\n        let ownIndex = this.canCastToList.indexOf(name);\r\n        if(ownIndex >= 0) this.canCastToList.splice(ownIndex, 1);\r\n    }\r\n\r\n    static fromConstantType(tt: TokenType): SQLBaseType {\r\n        switch (tt) {\r\n            case TokenType.stringConstant:\r\n                return this.baseTypeMap.get(\"text\");\r\n            case TokenType.integerConstant:\r\n                return this.baseTypeMap.get(\"integer\");\r\n            case TokenType.floatingPointConstant:\r\n                return this.baseTypeMap.get(\"float\");\r\n            case TokenType.charConstant:\r\n                return this.baseTypeMap.get(\"text\");\r\n            case TokenType.booleanConstant:\r\n                return this.baseTypeMap.get(\"boolean\");\r\n            case TokenType.keywordNull:\r\n                return this.baseTypeMap.get(\"null\");\r\n        \r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    getBaseTypeName(): string {\r\n        return this.name;\r\n    }\r\n\r\n    toString(): string {\r\n        return this.name;\r\n    }\r\n\r\n    static getBaseType(name: string) {\r\n        if(name == 'char') name = 'varchar';\r\n        return this.baseTypeMap.get(name.toLocaleLowerCase());\r\n    }\r\n\r\n    static addBaseTypes(baseTypes: SQLBaseType[]) {\r\n        SQLBaseType.baseTypes = SQLBaseType.baseTypes.concat(baseTypes);\r\n        baseTypes.forEach(t => SQLBaseType.baseTypeMap.set(t.name, t));\r\n    }\r\n\r\n    addBinaryOperation(tokenType: TokenType | TokenType[], secondType: SQLBaseType, resultType: SQLBaseType, isCommutative: boolean = true) {\r\n\r\n        if (!Array.isArray(tokenType)) tokenType = [tokenType];\r\n\r\n        tokenType.forEach(t => {\r\n            let map: Map<SQLBaseType, SQLBaseType> = this.binaryResultTypes.get(t);\r\n            if (map == null) {\r\n                map = new Map();\r\n                this.binaryResultTypes.set(t, map);\r\n            }\r\n            map.set(secondType, resultType);\r\n            if (isCommutative && secondType != this) {\r\n                secondType.addBinaryOperation(t, this, resultType, false);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    canCastTo(type2: SQLType): boolean {\r\n\r\n        let bt2: SQLBaseType = type2 instanceof SQLBaseType ? type2 : type2[\"baseType\"];\r\n\r\n        return this.canCastToList.indexOf(bt2.name) >= 0 || this.name == bt2.name;\r\n\r\n    }\r\n\r\n    getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType {\r\n\r\n\r\n        let map = this.binaryResultTypes.get(operator);\r\n        if (map == null) return null;\r\n\r\n        let bt2: SQLBaseType = secondType instanceof SQLBaseType ? secondType : secondType[\"baseType\"];\r\n\r\n        return map.get(bt2);\r\n\r\n    }\r\n\r\n    getUnaryResultType(operator: TokenType): SQLType {\r\n        if([TokenType.isNull, TokenType.isNotNull].indexOf(operator) >= 0) return booleanType;\r\n        if(this.unaryOperators.indexOf(operator)>= 0) return this;\r\n    }\r\n\r\n    getBinaryResult(operator: TokenType, value1: any, value2: any): any {\r\n        switch (operator) {\r\n            case TokenType.concatenation:\r\n                if (value1 != null && value2 != null) return value1 + value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.plus:\r\n                if (value1 != null && value2 != null) return value1 + value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.minus:\r\n                if (value1 != null && value2 != null) return value1 - value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.multiplication:\r\n                if (value1 != null && value2 != null) return value1 * value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.division:\r\n                if (value1 != null && value2 != null) return value1 * value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.keywordAnd:\r\n                if (value1 != null && value2 != null) return value1 * value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.keywordOr:\r\n                if (value1 != null && value2 != null) return Math.max(value1, value2);\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.lower:\r\n                if (value1 != null && value2 != null) return value1 < value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.greater:\r\n                if (value1 != null && value2 != null) return value1 >= value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.lowerOrEqual:\r\n                if (value1 != null && value2 != null) return value1 <= value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.greaterOrEqual:\r\n                if (value1 != null && value2 != null) return value1 >= value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.equal:\r\n                return value1 == value2;\r\n            case TokenType.notEqual:\r\n                return value1 != value2;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nlet tens: number[] = [1, 10, 100, 1000, 100000, 100000, 1000000, 10000000, 100000000, 1000000000];\r\n\r\nexport class SQLDerivedType extends SQLType {\r\n\r\n    name: string;\r\n\r\n    constructor(public baseType: SQLBaseType, public parameterValues: number[]) {\r\n        super();\r\n        let parameters = parameterValues.join(\", \");\r\n        this.name = baseType.name + \"(\" + parameters + \")\";\r\n    }\r\n\r\n    toString(): string {\r\n        return this.name;\r\n    }\r\n\r\n    getBaseTypeName(): string {\r\n        return this.baseType.name;\r\n    }\r\n\r\n\r\n    canCastTo(type2: SQLType): boolean {\r\n\r\n        let bt2: SQLBaseType = type2 instanceof SQLBaseType ? type2 : type2[\"baseType\"];\r\n\r\n        return this.baseType.canCastToList.indexOf(bt2.name) >= 0 || this.baseType.name == bt2.name;\r\n\r\n    }\r\n\r\n    getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType {\r\n\r\n\r\n        let map = this.baseType.binaryResultTypes.get(operator);\r\n        if (map == null) return null;\r\n\r\n        let bt2: SQLBaseType = secondType instanceof SQLBaseType ? secondType : secondType[\"baseType\"];\r\n\r\n        let returnBaseType = map.get(bt2);\r\n\r\n        if (this.baseType == bt2 && this.baseType == returnBaseType && secondType instanceof SQLDerivedType) {\r\n            if (this.baseType.name == \"varchar\" || operator == TokenType.concatenation) {\r\n                return new SQLDerivedType(this.baseType, [this.parameterValues[0] + secondType.parameterValues[0]]);\r\n            }\r\n            if (this.baseType.name == \"decimal\") {\r\n                return new SQLDerivedType(this.baseType, [Math.max(this.parameterValues[0], secondType.parameterValues[0]), Math.max(this.parameterValues[1], secondType.parameterValues[1])]);\r\n            }\r\n        }\r\n\r\n        return map.get(bt2);\r\n\r\n    }\r\n\r\n    getUnaryResultType(operator: TokenType): SQLType {\r\n        return this.baseType.getUnaryResultType(operator);\r\n    }\r\n\r\n    getBinaryResult(operator: TokenType, value1: any, value2: any): any {\r\n        let result = this.baseType.getBinaryResult(operator, value1, value2);\r\n        if (this.name = \"varchar\") return result == null ? null : (\"\" + result).substr(0, this.parameterValues[0]);\r\n        if (this.name == \"decimal\") {\r\n            if (result == null) return null;\r\n            return Math.round(result * tens[this.parameterValues[1]]) / tens[this.parameterValues[1]];\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nlet textTypes = [\"varchar\", \"text\" ,\"tinytext\", \"mediumtext\", \"longtext\"];\r\n\r\nvar varcharType = new SQLBaseType(\"varchar\", [\"Maximale Länge\"], (ci, pv) => `check(length(${ci}) <= ${pv[0]})`,\r\n    (v: string, pv) => v.substring(0, pv[0]), textTypes);\r\n\r\nvar textType = new SQLBaseType(\"text\", [\"Maximale Länge\"], (ci, pv) => \"\", (v: string, pv) => v, textTypes.concat([\"date\", \"datetime\", \"timestamp\"]));\r\nvar tinyTextType = new SQLBaseType(\"tinyText\", [], (ci, pv) => \"\", (v: string, pv) => v, textTypes);\r\nvar mediumTextType = new SQLBaseType(\"mediumText\", [], (ci, pv) => \"\", (v: string, pv) => v, textTypes);\r\nvar longTextType = new SQLBaseType(\"longText\", [], (ci, pv) => \"\", (v: string, pv) => v, textTypes);\r\n\r\nlet floatTypes = [\"decimal\", \"numeric\", \"double\", \"real\", \"float\"];\r\n\r\nvar decimalType = new SQLBaseType(\"decimal\", [\"Gesamtzahl der Stellen\", \"Nachkommastellen\"], (ci, pv) => \"\",\r\n    (v: number, pv) => { let vk = Math.trunc(v); let nk = v - vk; return \"\" + vk + (pv[1] > 0 ? \".\" + Math.round(nk * tens[pv[1]]) : \"\") },\r\n    floatTypes);\r\nvar numericType = new SQLBaseType(\"numeric\", [\"Gesamtzahl der Stellen\", \"Nachkommastellen\"], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\nvar doubleType = new SQLBaseType(\"double\", [\"Gesamtzahl der Stellen\", \"Nachkommastellen\"], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\nvar realType = new SQLBaseType(\"real\", [], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\nvar floatType = new SQLBaseType(\"float\", [], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\n\r\nlet inttypes = [\"int\", \"integer\", \"tinyint\", \"smallint\", \"mediumint\", \"bigint\"];\r\nlet numberTypes = inttypes.concat(floatTypes);\r\n\r\nvar intType = new SQLBaseType(\"int\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar integerType = new SQLBaseType(\"integer\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar tinyIntType = new SQLBaseType(\"tinyint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar smallIntType = new SQLBaseType(\"smallint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar mediumIntType = new SQLBaseType(\"mediumint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar bigIntType = new SQLBaseType(\"bigint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\n\r\nvar dateType = new SQLBaseType(\"date\", [], (ci, pv) => `check(isDate(${ci}))`, (v: string, pv) => v, []);\r\nvar dateTimeType = new SQLBaseType(\"datetime\", [], (ci, pv) => `check(isDateTime(${ci}))`, (v: string, pv) => v, [\"timestamp\"]);\r\nvar timestampType = new SQLBaseType(\"timestamp\", [], (ci, pv) => `check(isDateTime(${ci}))`, (v: string, pv) => v, [\"datetime\"]);\r\n\r\nvar booleanType = new SQLBaseType(\"boolean\", [], (ci, pv) => `check(${ci} == 0 or ${ci} == 1)`, (v, pv) => v == 1 ? \"true\" : \"false\",\r\n    [\"varchar\", \"text\", \"decimal\", \"numeric\"]);\r\n\r\nvar nullType = new SQLBaseType(\"null\", [], (ci, pv) => \"\", (v, pv) => v,\r\n    []);\r\n\r\nlet numericTypes = [decimalType, numericType, doubleType, realType, floatType, intType, integerType, tinyIntType, smallIntType, mediumIntType, bigIntType];\r\n\r\nlet baseTypes = [varcharType, textType, tinyTextType, mediumTextType, longTextType,\r\n    dateType, dateTimeType, timestampType, booleanType, nullType].concat(numericTypes);\r\n\r\nSQLBaseType.addBaseTypes(baseTypes);\r\n\r\nvarcharType.addBinaryOperation(TokenType.concatenation, varcharType, varcharType);\r\nvarcharType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\ntextType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\nvarcharType.addBinaryOperation(TokenType.keywordLike, varcharType, booleanType);\r\nvarcharType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\ntextType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\n\r\nlet numericBinaryOperators: TokenType[] = [TokenType.plus, TokenType.minus, TokenType.multiplication, TokenType.division, TokenType.modulo];\r\nlet comparisonOperators: TokenType[] = [TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual];\r\n\r\nfor (let i = 0; i < numericTypes.length; i++) {\r\n    for (let j = i; j < numericTypes.length; j++) {\r\n        numericTypes[i].addBinaryOperation(numericBinaryOperators, numericTypes[j], numericTypes[j]);\r\n        numericTypes[i].addBinaryOperation(comparisonOperators, numericTypes[j], booleanType);\r\n    }\r\n    numericTypes[i].unaryOperators = [TokenType.minus];\r\n}\r\n\r\ndecimalType.addBinaryOperation(numericBinaryOperators, decimalType, decimalType);\r\n\r\nlet characterTypes = [varcharType, textType];\r\nfor (let i = 0; i < characterTypes.length; i++) {\r\n    for (let j = i; j < characterTypes.length; j++) {\r\n        characterTypes[i].addBinaryOperation(TokenType.concatenation, characterTypes[j], characterTypes[j]);\r\n        characterTypes[i].addBinaryOperation(comparisonOperators, characterTypes[j], booleanType);\r\n    }\r\n}\r\nvarcharType.addBinaryOperation(TokenType.concatenation, varcharType, varcharType);\r\n\r\nlet booleanOperations = [TokenType.keywordAnd, TokenType.keywordOr];\r\nbooleanType.addBinaryOperation(booleanOperations, booleanType, booleanType);\r\n\r\nbooleanType.unaryOperators = [TokenType.keywordNot];\r\n\r\nbaseTypes.forEach(bt => bt.unaryOperators = bt.unaryOperators.concat([TokenType.isNull, TokenType.isNotNull]));","import { param, timers } from \"jquery\";\r\nimport { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenList, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { ASTNode, BracketsNode, SelectNode, TermNode, TableOrSubqueryNode, TableNode, SubqueryNode, GroupByNode, OrderByNode, LimitNode, IdentifierNode, DotNode, ListNode, ColumnNode, InsertNode, ConstantNode, UnaryOpNode, CreateTableNode, CreateTableColumnNode, ForeignKeyInfo, UpdateNode, DeleteNode, DropTableNode, AlterTableNode, AlterTableKind, OmittedStatementNode } from \"./AST.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { Column } from \"./SQLTable.js\";\r\nimport { SQLBaseType } from \"./SQLTypes.js\";\r\n\r\nexport type SQLStatement = {\r\n    ast: ASTNode,\r\n    from: TextPosition,\r\n    to: TextPosition,\r\n    hasErrors: boolean,\r\n    acceptedBySQLite: boolean,\r\n    sql?: string,\r\n    sqlCleaned?: string\r\n}\r\n\r\n\r\nexport class Parser {\r\n\r\n    static operatorPrecedence: TokenType[][] = [\r\n        [TokenType.keywordOr], [TokenType.keywordAnd],\r\n        [TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual, TokenType.keywordLike],\r\n        [TokenType.concatenation, TokenType.plus, TokenType.minus], [TokenType.multiplication, TokenType.division, TokenType.modulo],\r\n        [TokenType.keywordIn, TokenType.keywordNotIn]\r\n    ];\r\n\r\n    module: Module;\r\n\r\n    pos: number;\r\n    tokenList: TokenList;\r\n\r\n    errorList: Error[];\r\n\r\n    lookahead = 4;\r\n    ct: Token[];\r\n    lastToken: Token;\r\n    cct: Token;\r\n    tt: TokenType;\r\n    position: TextPosition;\r\n    lastComment: Token;\r\n\r\n    endToken: Token = {\r\n        position: { line: 0, column: 0, length: 1 },\r\n        tt: TokenType.endofSourcecode,\r\n        value: \"das Ende des Programms\"\r\n    };\r\n\r\n    beginStatementKeywords = [\"select\", \"insert into\", \"update\", \"create table\", \"delete from\", \"alter table\", \"drop table\"];\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    parse(m: Module) {\r\n\r\n        this.module = m;\r\n\r\n        this.tokenList = m.tokenList;\r\n        this.errorList = [];\r\n\r\n        m.completionHints = new Map();\r\n\r\n        if (this.tokenList.length == 0) {\r\n            this.module.sqlStatements = [];\r\n            this.module.errors[1] = this.errorList;\r\n            this.module.addCompletionHint({ line: 0, column: 0, length: 0 }, { line: 20000, column: 100, length: 0 }, false, false,\r\n                this.beginStatementKeywords);\r\n            return;\r\n        }\r\n\r\n        this.pos = 0;\r\n        this.initializeLookahead();\r\n\r\n\r\n        let lastToken = this.tokenList[this.tokenList.length - 1];\r\n        this.endToken.position = { line: lastToken.position.line, column: lastToken.position.column + lastToken.position.length, length: 1 };\r\n\r\n        this.module.sqlStatements = this.parseMain();\r\n\r\n        this.module.errors[1] = this.errorList;\r\n\r\n    }\r\n\r\n    initializeLookahead() {\r\n\r\n        this.ct = [];\r\n\r\n        for (let i = 0; i < this.lookahead; i++) {\r\n\r\n            let token: Token = this.endToken;\r\n\r\n            while (true) {\r\n\r\n                if (this.pos >= this.tokenList.length) break;\r\n\r\n                let token1 = this.tokenList[this.pos]\r\n                if (token1.tt == TokenType.comment) {\r\n                    this.lastComment = token1;\r\n                }\r\n\r\n                if (token1.tt != TokenType.newline && token1.tt != TokenType.space && token1.tt != TokenType.comment) {\r\n                    token = token1;\r\n                    if (this.lastComment != null) {\r\n                        token.commentBefore = this.lastComment;\r\n                        this.lastComment = null;\r\n                    }\r\n                    break;\r\n                }\r\n\r\n                this.pos++;\r\n\r\n            }\r\n\r\n            this.ct.push(token);\r\n\r\n            if (i < this.lookahead - 1) {\r\n                this.pos++;\r\n            }\r\n\r\n        }\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    nextToken() {\r\n\r\n        let token: Token;\r\n        this.lastToken = this.cct;\r\n\r\n        while (true) {\r\n\r\n            this.pos++;\r\n\r\n            if (this.pos >= this.tokenList.length) {\r\n                token = this.endToken;\r\n                break;\r\n            }\r\n\r\n            token = this.tokenList[this.pos]\r\n            if (token.tt == TokenType.comment) {\r\n                this.lastComment = token;\r\n            }\r\n\r\n            if (token.tt != TokenType.newline && token.tt != TokenType.space && token.tt != TokenType.comment) {\r\n                token.commentBefore = this.lastComment;\r\n                this.lastComment = null;\r\n                break;\r\n            }\r\n\r\n        }\r\n\r\n        for (let i = 0; i < this.lookahead - 1; i++) {\r\n            this.ct[i] = this.ct[i + 1];\r\n        }\r\n\r\n        this.ct[this.lookahead - 1] = token;\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position?: TextPosition, quickFix?: QuickFix) {\r\n        if (position == null) position = Object.assign({}, this.position);\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    skip(tt: TokenType | TokenType[]) {\r\n        if (!Array.isArray(tt)) tt = [tt];\r\n        if (tt.indexOf(this.tt) >= 0) this.nextToken();\r\n    }\r\n\r\n    expect(tt: TokenType | TokenType[], skip: boolean = true, invokeSemicolonAngel: boolean = false): boolean {\r\n        if (this.tt != tt && !(Array.isArray(tt) && tt.indexOf(this.tt) >= 0)) {\r\n            if (tt == TokenType.semicolon && this.tt == TokenType.endofSourcecode) {\r\n                return true;\r\n            }\r\n\r\n            let position: TextPosition = this.cct.position;\r\n            if (tt == TokenType.semicolon && this.lastToken != null) {\r\n\r\n                if (this.lastToken.position.line < position.line) {\r\n                    position = {\r\n                        line: this.lastToken.position.line,\r\n                        column: this.lastToken.position.column + this.lastToken.position.length,\r\n                        length: 1\r\n                    }\r\n                }\r\n            }\r\n\r\n            let quickFix: QuickFix = null;\r\n            if (tt == TokenType.semicolon && this.lastToken.position.line < this.cct.position.line &&\r\n                !this.isOperatorOrDot(this.lastToken.tt)\r\n            ) {\r\n                quickFix = {\r\n                    title: 'Strichpunkt hier einfügen',\r\n                    editsProvider: (uri) => {\r\n                        return [{\r\n                            resource: uri,\r\n                            edit: {\r\n                                range: {\r\n                                    startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position.column,\r\n                                    message: \"\",\r\n                                    severity: monaco.MarkerSeverity.Error\r\n                                },\r\n                                text: \";\"\r\n                            }\r\n                        }\r\n                        ];\r\n                    }\r\n                }\r\n\r\n                if (invokeSemicolonAngel) {\r\n                    this.module.main.getSemicolonAngel().register(position, this.module);\r\n                }\r\n            }\r\n\r\n            let expectedValuesArray: string[];\r\n\r\n            if (Array.isArray(tt)) {\r\n                expectedValuesArray = tt.map(token => TokenTypeReadable[token]);\r\n                let expectedTokens = expectedValuesArray.join(\", \");\r\n                this.pushError(\"Erwartet wird eines der folgenden: \" + expectedTokens + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            } else {\r\n                expectedValuesArray = [TokenTypeReadable[tt]];\r\n                this.pushError(\"Erwartet wird: \" + TokenTypeReadable[tt] + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            }\r\n\r\n            // if (!Array.isArray(tt) && tt != TokenType.identifier) {\r\n            //     this.module.addCompletionHint(this.getEndOfPosition(this.lastToken.position), this.getCurrentPositionPlus(1), false, false, expectedValuesArray);\r\n            // }\r\n\r\n            return false;\r\n        }\r\n\r\n        if (skip) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    getEndOfPosition(p: TextPosition): TextPosition {\r\n        return {\r\n            line: p.line,\r\n            column: p.column + p.length,\r\n            length: 0\r\n        }\r\n    }\r\n\r\n    isOperatorOrDot(tt: TokenType): boolean {\r\n        if (tt == TokenType.dot) return true;\r\n        for (let op of Parser.operatorPrecedence) {\r\n            for (let operator of op) {\r\n                if (tt == operator) return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    isEnd(): boolean {\r\n        return this.cct == this.endToken;\r\n    }\r\n\r\n    comesToken(token: TokenType | TokenType[], skip: boolean = false): boolean {\r\n\r\n        if (!Array.isArray(token)) {\r\n            let ret: boolean = this.tt == token;\r\n            if (ret && skip) this.nextToken();\r\n            return ret;\r\n        }\r\n\r\n        return token.indexOf(this.tt) >= 0;\r\n\r\n    }\r\n\r\n    getCurrentPosition(): TextPosition {\r\n        return Object.assign({}, this.position);\r\n    }\r\n\r\n    getCurrentPositionPlus(deltaColumns: number): TextPosition {\r\n\r\n        if (this.tt == TokenType.endofSourcecode) {\r\n            return {\r\n                line: this.endToken.position.line,\r\n                column: 100,\r\n                length: 1\r\n            }\r\n        }\r\n\r\n        // get Token in which new position falls:\r\n        let tpos = 0;\r\n        let deltaInsideToken = deltaColumns;\r\n        let length = 0;\r\n        while (tpos < this.lookahead - 1 && (length = this.ct[tpos].position.length) < deltaInsideToken) {\r\n            deltaInsideToken -= length;\r\n            tpos++;\r\n        }\r\n        let tokenPos = this.ct[tpos].position;\r\n        if (tokenPos == null) tokenPos = this.getCurrentPosition();\r\n\r\n        let pos: TextPosition = {\r\n            line: tokenPos.line,\r\n            column: tokenPos.column + deltaInsideToken,\r\n            length: 1\r\n        }\r\n\r\n        return pos;\r\n    }\r\n\r\n    getEndOfCurrentToken(): TextPosition {\r\n\r\n        let position = this.getCurrentPosition();\r\n        position.column = position.column + this.position.length;\r\n        position.length = 0;\r\n\r\n        return position;\r\n    }\r\n\r\n    parseMain(): SQLStatement[] {\r\n\r\n        let mainProgram: SQLStatement[] = [];\r\n\r\n        let mainProgramEnd: TextPosition = {\r\n            column: 0,\r\n            line: 10000,\r\n            length: 1\r\n        }\r\n\r\n        let afterLastStatement: TextPosition = {\r\n            column: 0,\r\n            line: 0,\r\n            length: 0\r\n        }\r\n\r\n        let semicolonAfterLastStatement: boolean = true;\r\n\r\n        this.module.addCompletionHint(afterLastStatement, this.getCurrentPositionPlus(8), false, false,\r\n            this.beginStatementKeywords);\r\n\r\n        while (!this.isEnd()) {\r\n\r\n            let oldPos = this.pos;\r\n\r\n            let errorsBeforeStatement: number = this.errorList.length;\r\n\r\n            while ([TokenType.space, TokenType.newline].indexOf(this.cct.tt) >= 0) {\r\n                this.nextToken();\r\n            }\r\n\r\n            let startPosition = this.getCurrentPosition();\r\n\r\n            let st = this.parseStatement();\r\n\r\n            afterLastStatement = {\r\n                line: this.lastToken.position.line + 1,\r\n                column: 0,\r\n                length: 0\r\n            }\r\n\r\n            semicolonAfterLastStatement = this.tt == TokenType.semicolon;\r\n            while (this.tt == TokenType.semicolon) {\r\n                this.nextToken();\r\n            }\r\n\r\n            let hasErrors: boolean = false;\r\n            for (let i = errorsBeforeStatement; i < this.errorList.length; i++) {\r\n                if (this.errorList[i].level == \"error\") hasErrors = true;\r\n            }\r\n\r\n            if (st != null) {\r\n                mainProgram.push({\r\n                    ast: st,\r\n                    from: startPosition,\r\n                    to: this.getEndOfPosition(this.lastToken.position),\r\n                    hasErrors: hasErrors,\r\n                    acceptedBySQLite: false\r\n                });\r\n            }\r\n            // console.log(mainProgram[mainProgram.length - 1]);\r\n\r\n            mainProgramEnd = this.getCurrentPosition();\r\n\r\n            // emergency-forward:\r\n            if (this.pos == oldPos) {\r\n                let beginStatementTokens: TokenType[] =\r\n                    [TokenType.keywordSelect, TokenType.keywordUpdate, TokenType.keywordCreate, TokenType.keywordInsert,\r\n                    TokenType.keywordDelete, TokenType.keywordDrop, TokenType.keywordAlter];\r\n\r\n                let firstBadToken: boolean = true;\r\n\r\n                while (!this.isEnd() && beginStatementTokens.indexOf(this.tt) < 0) {\r\n                    if ([TokenType.space, TokenType.newline].indexOf(this.tt) < 0 && firstBadToken) {\r\n                        this.pushError(\"Erwartet wird eines dieser Schlüsselwörter: \" + beginStatementTokens.map(t => TokenTypeReadable[t]).join(\", \")\r\n                            + \"; Gefunden wurde: \" + this.cct.value);\r\n                        firstBadToken = true;\r\n                    }\r\n                    this.nextToken();\r\n                }\r\n            }\r\n\r\n            if (semicolonAfterLastStatement || this.cct.position.line - afterLastStatement.line > 0) {\r\n                this.module.addCompletionHint(afterLastStatement, this.getCurrentPositionPlus(8), false, false,\r\n                    this.beginStatementKeywords);\r\n            }\r\n\r\n        }\r\n\r\n        this.module.addCompletionHint(afterLastStatement, { line: this.endToken.position.line + 1, column: 0, length: 0 }, false, false,\r\n            this.beginStatementKeywords);\r\n\r\n        return mainProgram;\r\n\r\n    }\r\n\r\n\r\n\r\n    parseStatement(expectSemicolon: boolean = true): ASTNode {\r\n\r\n        let retStatements: ASTNode = null;\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordSelect:\r\n                return this.parseSelect();\r\n            case TokenType.keywordInsert:\r\n                return this.parseInsert();\r\n            case TokenType.keywordCreate:\r\n                return this.parseCreateTableOrDatabase();\r\n            case TokenType.keywordUpdate:\r\n                return this.parseUpdate();\r\n            case TokenType.keywordDelete:\r\n                return this.parseDelete();\r\n            case TokenType.keywordDrop:\r\n                return this.parseDropTable();\r\n            case TokenType.keywordAlter:\r\n                return this.parseAlterTable();\r\n            case TokenType.keywordCommit:\r\n                this.pushError(\"Die Aweisung commit ist unnötig, da jede Anweisung automatisch commited wird.\", \"info\");\r\n                this.nextToken();\r\n                return null;\r\n            // Omitted statements:\r\n            case TokenType.keywordSet:\r\n                return this.parseSet();\r\n            case TokenType.keywordUse:\r\n                return this.parseUse();\r\n            case TokenType.keywordStart:\r\n                this.nextToken();\r\n                this.expect(TokenType.keywordTransaction, true);\r\n                return null;\r\n\r\n            default:\r\n                let s = TokenTypeReadable[this.tt];\r\n                if (s == null) s = \"\";\r\n                if (s != this.cct.value) s += \"(\" + this.cct.value + \")\";\r\n                s += \" wird hier nicht erwartet.\";\r\n                this.pushError(s);\r\n                this.nextToken();\r\n                break;\r\n        }\r\n\r\n\r\n        return retStatements;\r\n\r\n    }\r\n\r\n    parseSet(): OmittedStatementNode {\r\n\r\n        this.pushError(\"Das SET-Statement wird von SQLite nicht unterstützt. Diese Anweisung wird daher einfach überlesen.\", \"info\");\r\n\r\n        let node: OmittedStatementNode = {\r\n            type: TokenType.omittedeStatement,\r\n            position: this.getCurrentPosition(),\r\n            endPosition: null,\r\n            symbolTable: null\r\n        }\r\n\r\n        this.nextToken(); // skip 'set'\r\n        this.expect(TokenType.identifier, true);\r\n        this.expect(TokenType.equal, true);\r\n        this.expect([TokenType.identifier, TokenType.stringConstant, TokenType.integerConstant, TokenType.charConstant, TokenType.booleanConstant, TokenType.floatingPointConstant], true);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n    parseUse(): OmittedStatementNode {\r\n\r\n        this.pushError(\"Das USE-Statement wird von SQLite nicht unterstützt. Diese Anweisung wird daher einfach überlesen. Sie können eine andere Datenbank auswählen indem Sie in der Datenbankliste links darauf klicken.\", \"info\");\r\n\r\n        let node: OmittedStatementNode = {\r\n            type: TokenType.omittedeStatement,\r\n            position: this.getCurrentPosition(),\r\n            endPosition: null,\r\n            symbolTable: null\r\n        }\r\n\r\n        this.nextToken(); // skip 'use'\r\n        this.expect(TokenType.identifier, true);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n    parseAlterTable(): AlterTableNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"alter\"\r\n\r\n        let node: AlterTableNode = {\r\n            type: TokenType.keywordAlter,\r\n            kind: null,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n        }\r\n\r\n        if (!this.expect(TokenType.keywordTable, true)) {\r\n            this.addCompletionHintHere(false, false, [\"table\"], 1);\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1);\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        this.addCompletionHintHere(false, false, [\"rename to\", \"rename column\", \"add column\", \"drop column\"], 1);\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordRename: this.parseRenameTableOrColumn(node); break;\r\n            case TokenType.keywordAdd: this.parseAlterTableAdd(node); break;\r\n            case TokenType.keywordDrop: this.parseDropColumn(node); break;\r\n            default:\r\n                this.pushError(\"Erwartet wird rename to, rename column, add column oder drop column\");\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    parseRenameTableOrColumn(node: AlterTableNode) {\r\n\r\n        this.nextToken();\r\n        if (!this.comesToken(TokenType.keywordTo)) {\r\n            this.addCompletionHintHere(node.tableIdentifier, false, [\"column\", \"to\"], 3);\r\n        }\r\n        node.endPosition = this.getEndOfCurrentToken();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordTo:\r\n                this.nextToken();\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                node.kind = \"renameTable\";\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    node.newTableName = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    node.endPosition = this.getEndOfCurrentToken();\r\n                } else {\r\n                    this.pushError(\"Erwartet wird der neue Tabellenname.\");\r\n                }\r\n                return;\r\n            case TokenType.keywordColumn:\r\n                this.nextToken();\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                this.addCompletionHintHere(node.tableIdentifier, false, [], 3);\r\n                if (!this.comesToken(TokenType.identifier)) {\r\n                    this.pushError(\"Erwartet wird der Name einer Spalte der Tabelle \" + node.tableIdentifier + \".\");\r\n                    return;\r\n                }\r\n                node.kind = \"renameColumn\";\r\n                node.oldColumnName = <string>this.cct.value;\r\n                node.oldColumnPosition = this.getCurrentPosition();\r\n                this.nextToken();\r\n                this.addCompletionHintHere(false, false, [\"to\"], 3);\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                if (!this.expect(TokenType.keywordTo, true)) return;\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    node.newColumnName = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    node.endPosition = this.getEndOfCurrentToken();\r\n                } else {\r\n                    this.pushError(\"Erwartet wird der neue Spaltenname.\");\r\n                }\r\n                return;\r\n            default:\r\n                this.pushError(\"Erwartet wird das Schlüsselwort 'to' (zum Umbenennen der Tabelle) oder das Schlüsselwor 'column' (zum Umbenennen einer Spalte).\")\r\n                return;\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    parseDropColumn(node: AlterTableNode) {\r\n        this.nextToken(); // skip 'drop'\r\n        this.comesToken(TokenType.keywordColumn, true);\r\n        node.oldColumnPosition = this.getCurrentPosition();\r\n        this.addCompletionHintHere(node.tableIdentifier, false, [], 3);\r\n\r\n        node.kind = \"dropColumn\";\r\n        node.endPosition = this.getEndOfCurrentToken();\r\n\r\n        if (this.comesToken(TokenType.identifier)) {\r\n            node.oldColumnName = <string>this.cct.value;\r\n            this.nextToken();\r\n        } else {\r\n            this.pushError(\"Erwartet wird der Bezeichner der Spalte, die gelöscht werden soll.\");\r\n        }\r\n\r\n    }\r\n\r\n    parseAlterTableAdd(node: AlterTableNode) {\r\n        do {\r\n            this.nextToken(); // skip \"add\" or \",\"\r\n            let unique: boolean = false;\r\n            switch (this.tt) {\r\n                case TokenType.keywordColumn:\r\n                    this.parseAddColumn(node);\r\n                    break;\r\n                case TokenType.keywordPrimary:\r\n                    this.parseAddPrimaryKey(node);\r\n                    break;\r\n                case TokenType.keywordUnique:\r\n                    this.nextToken();\r\n                    unique = true;\r\n                    this.expect([TokenType.keywordIndex, TokenType.keywordKey], false);\r\n                case TokenType.keywordKey:\r\n                case TokenType.keywordIndex:\r\n                    this.parseAddIndex(node, unique);\r\n                    break;\r\n                case TokenType.keywordModify:\r\n                    this.parseModifyColumn(node);\r\n                    break;\r\n                case TokenType.keywordConstraint:\r\n                    this.parseAddConstraint(node);\r\n                    break;\r\n            }\r\n        } while (this.tt == TokenType.comma);\r\n    }\r\n\r\n    parseAddConstraint(node: AlterTableNode) {\r\n        this.nextToken(); // skip \"constraint\"\r\n        if (!this.expect(TokenType.identifier)) return;\r\n\r\n        if (this.comesToken(TokenType.keywordForeign)) {\r\n            let fki = this.parseForeignKeyDefinition();\r\n            if (fki != null) {\r\n                if (node.foreignKeys == null) node.foreignKeys = [];\r\n                node.foreignKeys.push(fki);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    parseForeignKeyDefinition(): ForeignKeyInfo {\r\n        let fki: ForeignKeyInfo = { column: \"\", referencesTable: \"\", referencesColumn: \"\", referencesPosition: this.getCurrentPosition() };\r\n        if (!this.expect(TokenType.keywordForeign)) return;\r\n        if (!this.expect(TokenType.keywordKey)) return;\r\n        if (!this.expect(TokenType.leftBracket)) return;\r\n\r\n        if (!this.comesToken(TokenType.identifier)) {\r\n            this.pushError(\"Der Bezeichner der Fremdschlüsselspalte wird erwartet.\");\r\n            return;\r\n        }\r\n\r\n        fki.column = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        if (!this.expect(TokenType.rightBracket)) return;\r\n        this.parseReferences(fki);\r\n    }\r\n\r\n    parseReferences(fki: ForeignKeyInfo) {\r\n\r\n        if (!this.expect(TokenType.keywordReferences)) return;\r\n\r\n        this.addCompletionHintHere(false, true, []);\r\n\r\n        if (!this.comesToken(TokenType.identifier)) {\r\n            this.pushError(\"Der Bezeichner der referenzierten Tabelle wird erwartet.\");\r\n            return;\r\n        }\r\n\r\n        fki.referencesTable = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        let pos0 = this.lastToken.position;\r\n        let pos1 = this.getCurrentPosition();\r\n        this.module.addCompletionHint(this.getEndOfPosition(pos0), pos1, fki.referencesTable, false, []);\r\n\r\n\r\n        if (!this.expect(TokenType.leftBracket)) return;\r\n        if (!this.comesToken(TokenType.identifier)) {\r\n            this.pushError(\"Der Bezeichner der referenzierten Spalte wird erwartet.\");\r\n            return;\r\n        }\r\n\r\n        fki.referencesColumn = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        if (!this.expect(TokenType.rightBracket)) return;\r\n\r\n        if (this.tt == TokenType.keywordOn) {\r\n            this.nextToken();\r\n            if (this.expect(TokenType.keywordDelete, true)) {\r\n                switch (this.tt) {\r\n                    //@ts-ignore\r\n                    case TokenType.keywordCascade:\r\n                    //@ts-ignore\r\n                    case TokenType.keywordRestrict:\r\n                        fki.onDelete = <string>this.cct.value;\r\n                        this.nextToken();\r\n                        return;\r\n                    //@ts-ignore\r\n                    case TokenType.keywordSet:\r\n                        fki.onDelete = \"set \";\r\n                        this.nextToken();\r\n                        if ([TokenType.keywordNull, TokenType.keywordDefault].indexOf(this.tt) >= 0) {\r\n                            this.nextToken();\r\n                            fki.onDelete += this.cct.value;\r\n                        } else {\r\n                            this.pushError(\"Nach 'on delete set' wird 'null' oder 'default' erwartet.\");\r\n                        }\r\n                        return;\r\n                    //@ts-ignore\r\n                    case TokenType.keywordNo:\r\n                        this.nextToken();\r\n                        if (this.expect(TokenType.keywordAction), true) {\r\n                            fki.onDelete = \"no action\";\r\n                        }\r\n                        return;\r\n                    default:\r\n                        this.pushError(\"Nach 'on delete' wird 'cascade', 'set null', 'set default' oder 'no action' erwartet.\");\r\n                        return;\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    parseModifyColumn(node: AlterTableNode) {\r\n        this.nextToken();\r\n        let modifyColumnInfo = this.parseColumnDefinition(false);\r\n        if (modifyColumnInfo != null) {\r\n            if (node.modifyColumnInfo == null) node.modifyColumnInfo = [];\r\n            node.modifyColumnInfo.push(modifyColumnInfo);\r\n        }\r\n    }\r\n\r\n    parseAddPrimaryKey(node: AlterTableNode) {\r\n        this.nextToken(); // skip \"primary\"\r\n        node.primaryKeys = [];\r\n        if (this.expect(TokenType.keywordKey, true) && this.expect(TokenType.leftBracket, false)) {\r\n            do {\r\n                this.nextToken();\r\n                if (this.tt == TokenType.identifier) {\r\n                    node.primaryKeys.push(<string>this.cct.value);\r\n                    this.nextToken();\r\n                }\r\n            } while (this.tt == TokenType.comma)\r\n        }\r\n        if (this.expect(TokenType.rightBracket, true)) {\r\n            node.kind = \"omittedKind\";\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    parseAddIndex(node: AlterTableNode, unique: boolean) {\r\n        this.nextToken(); // skip \"key\" | \"index\"\r\n\r\n        let index = { index_name: \"\", column: \"\", unique: unique }\r\n        if (this.tt == TokenType.identifier) {\r\n            index.index_name = <string>this.cct.value;\r\n            this.nextToken();\r\n        } else {\r\n            this.pushError(\"Erwartet wird der Bezeichner des Index.\");\r\n            return null;\r\n        }\r\n\r\n        if (!this.expect(TokenType.leftBracket, true)) return null;\r\n        if (this.tt == TokenType.identifier) {\r\n            index.column = <string>this.cct.value;\r\n            this.nextToken();\r\n            if (node.indices == null) node.indices = [];\r\n            node.indices.push(index);\r\n        } else {\r\n            this.pushError(\"Erwartet wird der Bezeichner der Spalte, für die ein Index erstellt werden soll.\");\r\n            return null;\r\n        }\r\n\r\n        node.kind = \"omittedKind\";\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        return null;\r\n    }\r\n\r\n    parseAddColumn(node: AlterTableNode) {\r\n        node.kind = \"addColumn\";\r\n        this.comesToken(TokenType.keywordColumn, true);\r\n        node.columnDefBegin = this.getCurrentPosition();\r\n        node.columnDef = this.parseColumnDefinition(false);\r\n    }\r\n\r\n    parseDropTable(): DropTableNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"Delete\"\r\n\r\n        let node: DropTableNode = {\r\n            type: TokenType.keywordDrop,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null\r\n        }\r\n\r\n        if (!this.expect(TokenType.keywordTable, true)) {\r\n            this.addCompletionHintHere(false, false, [\"table\"], 1);\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1, \"\", \";\");\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n\r\n    }\r\n\r\n    parseDelete(): DeleteNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"Delete\"\r\n\r\n        let node: DeleteNode = {\r\n            type: TokenType.keywordDelete,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n            whereNode: null,\r\n            whereNodeBegin: null,\r\n            whereNodeEnd: null\r\n        }\r\n\r\n        if (!this.expect(TokenType.keywordFrom, true)) {\r\n            this.addCompletionHintHere(false, false, [\"from\"], 1);\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1, \"\", \" where\\n\\t\");\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        this.addCompletionHintHere(false, false, [\"where\\n\\t\"], 1);\r\n        if (this.tt != TokenType.keywordWhere) return node;\r\n\r\n        this.nextToken(); // skip \"where\"\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n\r\n        node.whereNodeBegin = this.getEndOfPosition(this.lastToken.position);\r\n        node.whereNode = this.parseTerm();\r\n        node.whereNodeEnd = this.getCurrentPosition();\r\n\r\n        this.module.addCompletionHint(node.whereNodeBegin, this.getCurrentPositionPlus(3), node.tableIdentifier, false, []);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n        return node;\r\n\r\n    }\r\n\r\n    parseUpdate(): UpdateNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"update\"\r\n\r\n        let node: UpdateNode = {\r\n            type: TokenType.keywordUpdate,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n            columnIdentifiers: [],\r\n            columnIdentifierPositions: [],\r\n            values: [],\r\n            valuePosBegin: [],\r\n            valuePosEnd: [],\r\n            whereNode: null,\r\n            whereNodeBegin: null,\r\n            whereNodeEnd: null\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1, \"\", \" set\\n\\t\");\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        this.addCompletionHintHere(false, false, [\"set\\n\\t\"], 1);\r\n        if (!this.expect(TokenType.keywordSet)) return node;\r\n        let first: boolean = true;\r\n        do {\r\n            this.addCompletionHintHere(node.tableIdentifier, false, first ? [] : ['where'], 1, null, \" = \");\r\n            first = false;\r\n            if (this.tt != TokenType.identifier) {\r\n                this.pushError(\"Hier wird der Bezeichner derjenigen Spalte der Tabelle \" + node.tableIdentifier + \" erwaretet, deren Wert verändert werden soll.\", \"error\");\r\n                break;\r\n            }\r\n\r\n            node.columnIdentifiers.push(<string>this.cct.value);\r\n            node.columnIdentifierPositions.push(this.getCurrentPosition());\r\n            this.nextToken();\r\n\r\n            this.expect(TokenType.equal, true);\r\n\r\n            node.valuePosBegin.push(this.getCurrentPosition());\r\n            node.values.push(this.parseTerm());\r\n            node.valuePosEnd.push(this.getCurrentPosition());\r\n\r\n        } while (this.comesToken(TokenType.comma, true));\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        if (this.lastToken.tt != TokenType.comma || this.comesToken(TokenType.keywordWhere)) {\r\n            if (!this.expect(TokenType.keywordWhere, true)) return node;\r\n\r\n            node.whereNodeBegin = this.getEndOfPosition(this.lastToken.position);\r\n            node.whereNode = this.parseTerm();\r\n            node.whereNodeEnd = this.getCurrentPosition();\r\n\r\n            this.module.addCompletionHint(node.whereNodeBegin, node.whereNodeEnd, node.tableIdentifier, false, []);\r\n\r\n            node.endPosition = this.getCurrentPosition();\r\n        } else {\r\n            this.comesToken(TokenType.keywordWhere, true); // skip where, if present\r\n        }\r\n        return node;\r\n\r\n    }\r\n\r\n    parseCreateTableOrDatabase(): CreateTableNode | OmittedStatementNode {\r\n        switch (this.ct[1].tt) {\r\n            case TokenType.keywordDatabase:\r\n                return this.parseCreateDatabase();\r\n            case TokenType.keywordTable:\r\n                return this.parseCreateTable();\r\n            default:\r\n                this.nextToken();\r\n                this.pushError(\"Nach 'create' wird 'table' erwartet.\");\r\n                this.nextToken();\r\n                return null;\r\n        }\r\n    }\r\n\r\n    parseCreateDatabase(): OmittedStatementNode {\r\n        let node: OmittedStatementNode = {\r\n            type: TokenType.omittedeStatement,\r\n            position: this.getCurrentPosition(),\r\n            endPosition: null,\r\n            symbolTable: null\r\n        }\r\n\r\n        this.nextToken();\r\n        this.pushError(\"Die CREATE-DATABASE-Anweisung wird von der SQLite-Engine nicht unterstützt. Sie können eine neue Datenbank anlegen, indem Sie auf den entsprechenden Button oberhalb der Liste der Datenbanken (linke Seite des Fensters) klicken. Diese Anweisung wird überlesen.\", \"info\");\r\n        while (this.tt != TokenType.semicolon && this.tt != TokenType.endofSourcecode) {\r\n            node.endPosition = this.getEndOfCurrentToken();\r\n            this.nextToken();\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    parseCreateTable(): CreateTableNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"create\"\r\n\r\n        if (!this.expect(TokenType.keywordTable, true)) {\r\n            this.module.addCompletionHint(startPosition, this.getCurrentPositionPlus(3), false, false, [\"table\"]);\r\n        }\r\n\r\n        let ifNotExists: boolean = false;\r\n        if (this.comesToken(TokenType.keywordIf)) {\r\n            this.nextToken();\r\n            this.expect(TokenType.keywordNot, true);\r\n            this.expect(TokenType.keywordExists, true);\r\n            ifNotExists = true;\r\n        }\r\n\r\n        let identifier = \"\";\r\n        if (this.expect(TokenType.identifier, false)) {\r\n            identifier = <string>this.cct.value;\r\n            this.module.addCompletionHint(this.getCurrentPosition(), this.getCurrentPositionPlus(identifier.length + 3), false, false, [\"(\"]);\r\n            this.nextToken();\r\n        }\r\n\r\n        let node: CreateTableNode = {\r\n            type: TokenType.keywordCreate,\r\n            identifier: identifier,\r\n            position: startPosition,\r\n            endPosition: null,\r\n            columnList: [],\r\n            symbolTable: null,\r\n            combinedPrimaryKeyColumns: [],\r\n            foreignKeyInfoList: [],\r\n            ifNotExists: ifNotExists\r\n        }\r\n\r\n        if (!this.expect(TokenType.leftBracket, true)) return node;\r\n\r\n        let primaryKeyAlreadyDefined: boolean = false;\r\n        let first: boolean = true;\r\n\r\n        while (this.tt != TokenType.rightBracket) {\r\n            if (!first) this.expect(TokenType.comma, true);\r\n            first = false;\r\n            switch (this.tt) {\r\n                case TokenType.keywordPrimary:\r\n                    if (primaryKeyAlreadyDefined) this.pushError(\"Je Tabelle darf nur ein einziger Primärschlüssel definiert werden.\", \"error\", this.getCurrentPosition());\r\n                    this.parsePrimaryKeyTerm(primaryKeyAlreadyDefined, node);\r\n                    primaryKeyAlreadyDefined = true;\r\n                    break;\r\n                case TokenType.keywordForeign:\r\n                    let fki = this.parseForeignKeyDefinition();\r\n                    if (fki != null) {\r\n                        node.foreignKeyInfoList.push(fki);\r\n                    }\r\n                    break;\r\n                case TokenType.identifier:\r\n                    let columnNode = this.parseColumnDefinition(primaryKeyAlreadyDefined);\r\n                    node.columnList.push(columnNode);\r\n                    primaryKeyAlreadyDefined = primaryKeyAlreadyDefined || columnNode.isPrimary;\r\n                    break;\r\n                default:\r\n                    this.pushError(TokenTypeReadable[this.tt] + \" wird hier nicht erwartet.\", \"error\");\r\n                    break;\r\n            }\r\n            if (!this.comesToken(TokenType.comma)) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        while ([TokenType.keywordEngine, TokenType.keywordDefault, TokenType.keywordCollate].indexOf(this.tt) >= 0) {\r\n            switch (this.tt) {\r\n                case TokenType.keywordCollate:\r\n                    this.nextToken();\r\n                    this.skip(TokenType.equal);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordEngine:\r\n                    this.nextToken();\r\n                    this.skip(TokenType.equal);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordDefault:\r\n                    this.nextToken();\r\n                    this.expect(TokenType.keywordCharset, true);\r\n                    this.skip(TokenType.equal);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        for (let column of node.columnList) {\r\n            if (column.isAutoIncrement && !(column.isPrimary || node.combinedPrimaryKeyColumns.indexOf(column.identifier) >= 0)) {\r\n                this.pushError(\"autoincrement gibt es nur bei Primärschlüsseln, d.h. es fehlt wahrscheinlich 'primary key'.\", \"warning\", node.position);\r\n            }\r\n        }\r\n\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n\r\n    parsePrimaryKeyTerm(primaryKeyAlreadyDefined: boolean, node: CreateTableNode) {\r\n        if (primaryKeyAlreadyDefined) {\r\n            this.pushError(\"Die Tabelle kann nur einen einzigen Primärschlüssel haben.\");\r\n        }\r\n        this.nextToken(); // skip \"primary\"\r\n        this.expect(TokenType.keywordKey, true);\r\n\r\n        let columns: string[] = node.columnList.map(c => c.identifier);\r\n\r\n        this.addCompletionHintHere(false, false, columns);\r\n        if (this.comesToken(TokenType.leftBracket)) {\r\n            this.addCompletionHintHere(false, false, columns);\r\n            this.nextToken();\r\n\r\n            while (true) {\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    node.combinedPrimaryKeyColumns.push(<string>this.cct.value);\r\n                    this.nextToken();\r\n                    this.addCompletionHintHere(false, false, columns, 1);\r\n                    if (!this.comesToken(TokenType.comma)) {\r\n                        break;\r\n                    } else {\r\n                        this.nextToken();\r\n                        this.addCompletionHintHere(false, false, columns);\r\n                    }\r\n                } else {\r\n                    this.pushError(\"Der Bezeichner einer Spalte wird erwartet. Gefunden wurde: \" + this.cct.value);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        } else {\r\n            this.pushError(\"( erwartet.\");\r\n        }\r\n    }\r\n\r\n    parseColumnDefinition(primaryKeyAlreadyDefined: boolean): CreateTableColumnNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n        let identifier = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        let node: CreateTableColumnNode = {\r\n            type: TokenType.columnDef,\r\n            identifier: identifier,\r\n            isPrimary: false,\r\n            isAutoIncrement: false,\r\n            position: position,\r\n            baseType: null,\r\n            notNull: false\r\n        }\r\n\r\n        this.parseType(node, primaryKeyAlreadyDefined);\r\n\r\n        return node;\r\n\r\n    }\r\n\r\n    addCompletionHintHere(hintColumns: boolean | string, hintTables: boolean, hints: string[], additionalColumns: number = 0, praefix: string = \"\", suffix: string = \"\") {\r\n        let pos0 = this.lastToken.position;\r\n        let pos1 = this.getCurrentPosition();\r\n        pos1.column += 1 + additionalColumns\r\n        this.module.addCompletionHint(this.getEndOfPosition(pos0), pos1, hintColumns, hintTables, hints, null, praefix, suffix);\r\n    }\r\n\r\n    parseType(node: CreateTableColumnNode, primaryKeyAlreadyDefined: boolean) {\r\n\r\n        let datatypes = SQLBaseType.baseTypes.map(type => type.toString());\r\n        this.addCompletionHintHere(false, false, datatypes);\r\n\r\n        if (!this.expect(TokenType.identifier, false)) {\r\n            this.pushError(\"Erwartet wird ein Datentyp. Gefunden wurde: \" + this.cct.value);\r\n            return;\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n\r\n        let type = SQLBaseType.getBaseType(identifier);\r\n        if (type == null) {\r\n            this.pushError(\"Erwartet wird ein Datentyp. Gefunden wurde: \" + identifier);\r\n        }\r\n        node.baseType = type;\r\n        this.nextToken();\r\n\r\n        if (this.tt == TokenType.leftBracket) {\r\n            this.nextToken();\r\n            node.parameters = [];\r\n            //@ts-ignore\r\n            while (this.tt == TokenType.integerConstant) {\r\n                node.parameters.push(<number>this.cct.value);\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.comma) break;\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.integerConstant) {\r\n                    this.pushError(\"Erwartet wird eine ganze Zahl, gefunden wurde: \" + this.cct.value);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (type != null && node.parameters.length > type.parameterDescriptions.length) {\r\n                this.pushError(\"Der Datentyp \" + type.toString() + \" hat höchstens \" + type.parameterDescriptions.length + \" Parameter.\");\r\n            }\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        }\r\n\r\n        // primary key autoincrement\r\n        // references table(column)\r\n        // not null\r\n\r\n        this.addCompletionHintHere(false, false, [\"primary key\", \"references\", \"not null\"]);\r\n\r\n        let alreadySeenKeywords: TokenType[] = [];\r\n\r\n        while ([TokenType.keywordOn, TokenType.keywordCharacter, TokenType.keywordComment, TokenType.keywordAutoincrement, TokenType.keywordKey, TokenType.keywordPrimary, TokenType.keywordNot, TokenType.keywordReferences, TokenType.keywordCollate, TokenType.keywordDefault].indexOf(this.tt) >= 0) {\r\n            if (alreadySeenKeywords.indexOf(this.tt) >= 0) {\r\n                this.pushError('Das Schlüsselwort ' + TokenTypeReadable[this.tt] + \" darf bei der Definition einer Spalte nicht öfters als ein Mal vorkommen.\");\r\n            }\r\n\r\n            alreadySeenKeywords.push(this.tt);\r\n\r\n            switch (this.tt) {\r\n                case TokenType.keywordAutoincrement:\r\n                    this.nextToken();\r\n                    node.isAutoIncrement = true;\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.equal) {\r\n                        this.nextToken();\r\n                        this.expect(TokenType.integerConstant);\r\n                    } else {\r\n                        //@ts-ignore\r\n                        if (this.tt == TokenType.comma && this.ct[1].tt == TokenType.keywordAutoincrement) {\r\n                            this.nextToken();\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.keywordPrimary:\r\n                    if (primaryKeyAlreadyDefined) this.pushError(\"In einer Tabelle darf es nur einen einzigen primary key geben.\");\r\n                    this.nextToken(); // skip \"primary\"\r\n                    if (!this.expect(TokenType.keywordKey, true)) {\r\n                        this.addCompletionHintHere(false, false, [\"key\"]);\r\n                    } else {\r\n                        this.addCompletionHintHere(false, false, [\"autoincrement, \\n\"])\r\n                    }\r\n                    node.isPrimary = true;\r\n                    break;\r\n                case TokenType.keywordReferences:\r\n                    let fki: ForeignKeyInfo = { column: node.identifier, referencesColumn: \"\", referencesTable: \"\", referencesPosition: this.getCurrentPosition() };\r\n                    node.foreignKeyInfo = fki;\r\n                    this.parseReferences(fki);\r\n                    break;\r\n                case TokenType.keywordNot:\r\n                    this.nextToken();\r\n                    if (!this.expect(TokenType.keywordNull, true)) {\r\n                        this.addCompletionHintHere(false, false, [\"null\"]);\r\n                    } else {\r\n                        this.addCompletionHintHere(false, false, [\"references\"]);\r\n                    }\r\n                    node.notNull = true;\r\n                    break;\r\n                case TokenType.keywordCollate:\r\n                    this.nextToken();\r\n                    node.collate = <string>this.cct.value;\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordCharacter:\r\n                    this.nextToken();\r\n                    this.expect(TokenType.keywordSet, true);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordDefault:\r\n                    this.nextToken();\r\n\r\n                    if(this.ct[1].tt == TokenType.leftBracket && this.ct[2].tt == TokenType.rightBracket){\r\n                        this.nextToken();\r\n                        this.nextToken();\r\n                        this.nextToken();\r\n                        break;\r\n                    }\r\n\r\n                    node.defaultValue = <string>this.cct.value;\r\n                    if (typeof this.cct.value == \"string\") {\r\n                        node.defaultValue = \"'\" + node.defaultValue + \"'\";\r\n                    }\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.keywordNull) {\r\n                        this.nextToken();\r\n                        break;\r\n                    } else if ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.stringConstant].indexOf(this.tt) >= 0) {\r\n                        let constantType = SQLBaseType.fromConstantType(this.tt);\r\n                        if (!constantType.canCastTo(type)) {\r\n                            this.pushError(\"Die Konstante hinter 'default' passt nicht zum Datentyp der Spalte.\");\r\n                        }\r\n                        this.nextToken();\r\n                    }\r\n                    break;\r\n                case TokenType.keywordComment:\r\n                    this.nextToken(); // Skip \"comment\"\r\n                    this.expect(TokenType.stringConstant, true);\r\n                    break;\r\n                case TokenType.keywordOn:\r\n                    this.nextToken();\r\n                    this.expect([TokenType.keywordUpdate], true);\r\n                    while(!this.comesToken([TokenType.comma, TokenType.endofSourcecode, TokenType.rightBracket])) this.nextToken();\r\n                    //@ts-ignore\r\n                    if(this.lastToken.tt == TokenType.leftBracket && this.tt == TokenType.rightBracket) this.nextToken();\r\n                    break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    parseInsert(): InsertNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"insert\"\r\n\r\n        this.expect(TokenType.keywordInto, true);\r\n\r\n        let node: InsertNode = {\r\n            type: TokenType.keywordInsert,\r\n            position: startPosition,\r\n            endPosition: this.getCurrentPosition(),\r\n            valuesPosition: null,\r\n            columnsPosition: null,\r\n            symbolTable: null,\r\n            columnList: [],\r\n            values: [],\r\n            table: null\r\n        }\r\n\r\n        if (this.tt == TokenType.identifier) {\r\n            node.table = {\r\n                type: TokenType.table,\r\n                identifier: <string>this.cct.value,\r\n                alias: null,\r\n                position: this.getCurrentPosition()\r\n            }\r\n            node.columnsPosition = { line: node.table.position.line, column: node.table.position.column + node.table.position.length, length: 0 };\r\n            this.nextToken();\r\n        } else {\r\n            this.pushError(\"Hier wird der Bezeichner einer Tabelle erwartet. Gefunden wurde: \" + this.cct.value, \"error\");\r\n        }\r\n\r\n        if (this.tt == TokenType.leftBracket) {\r\n\r\n            this.nextToken();\r\n            let first: boolean = true;\r\n            //@ts-ignore\r\n            while (first || this.tt == TokenType.comma) {\r\n\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.identifier) {\r\n                    node.columnList.push({\r\n                        type: TokenType.identifier,\r\n                        identifier: this.cct.value + \"\",\r\n                        position: this.getCurrentPosition()\r\n                    })\r\n\r\n                } else {\r\n                    this.pushError(\"Erwartet wird der Bezeichner einer Spalte. Gefunden wurde: \" + this.cct.value, \"error\");\r\n                }\r\n                this.nextToken();\r\n            }\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        }\r\n\r\n        node.valuesPosition = this.getCurrentPosition();\r\n        this.expect(TokenType.keywordValues, true);\r\n\r\n        this.parseValueLists(node.values);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n    parseValueLists(values: ConstantNode[][]) {\r\n        let insideListTokens = [TokenType.keywordNull, TokenType.charConstant, TokenType.stringConstant, TokenType.booleanConstant, TokenType.floatingPointConstant, TokenType.integerConstant];\r\n\r\n        let outerFirst: boolean = true;\r\n\r\n        while (outerFirst || this.tt == TokenType.comma) {\r\n            if (!outerFirst) {\r\n                this.nextToken(); // consume comma\r\n            }\r\n            outerFirst = false;\r\n            let leftBracketPosition = this.getCurrentPosition();\r\n            if (!this.expect(TokenType.leftBracket, true)) {\r\n                break;\r\n            }\r\n            let line: ConstantNode[] = [];\r\n            let first: boolean = true;\r\n            //@ts-ignore\r\n            while (first || this.tt == TokenType.comma) {\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n                if (this.tt == TokenType.identifier && this.cct.isDoubleQuotedIdentifier) {\r\n                    this.tt = TokenType.stringConstant\r\n                }\r\n                //@ts-ignore\r\n                if (insideListTokens.indexOf(this.tt) < 0) {\r\n                    this.pushError(\"Erwartet wird eine Konstante oder null. Gefunden wurde: \" + this.cct.value, \"error\");\r\n                    this.nextToken();\r\n                } else {\r\n                    line.push({\r\n                        constantType: this.tt,\r\n                        position: this.getCurrentPosition(),\r\n                        constant: this.cct.value,\r\n                        type: TokenType.constantNode\r\n                    });\r\n                    this.nextToken();\r\n                }\r\n            }\r\n            this.expect(TokenType.rightBracket, true);\r\n            if (line.length == 0) {\r\n                this.pushError(\"Eine Zeile kann nur dann in die Tabelle eingefügt werden, wenn sie mindestens einen Spaltenwert besitzt.\", \"error\", leftBracketPosition);\r\n            } else {\r\n                values.push(line);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    parseConstant(): ConstantNode {\r\n        let constantNode: ConstantNode = {\r\n            constantType: this.tt,\r\n            position: this.getCurrentPosition(),\r\n            constant: this.cct.value,\r\n            type: TokenType.constantNode\r\n        }\r\n        this.nextToken();\r\n\r\n        return constantNode;\r\n    }\r\n\r\n    parseSelect(): SelectNode {\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"select\"\r\n\r\n        let columnListStart: TextPosition = {\r\n            line: startPosition.line,\r\n            column: startPosition.column + 6,\r\n            length: 1\r\n        };\r\n\r\n        let node: SelectNode = {\r\n            type: TokenType.keywordSelect,\r\n            position: startPosition,\r\n            endPosition: this.getCurrentPosition(),\r\n            symbolTable: null,\r\n            columnList: [],\r\n            fromNode: null,\r\n            whereNode: null,\r\n            parentStatement: null\r\n        }\r\n\r\n        node.columnList = this.parseColumnList([TokenType.keywordFrom], true);\r\n\r\n        let columnListKeywordArray = [\"distinct\", \"as\", \"*\"];\r\n        if (node.columnList.findIndex(c => c.type == TokenType.allColumns) >= 0) {\r\n            columnListKeywordArray.pop();\r\n        }\r\n\r\n        this.module.addCompletionHint(columnListStart, this.getCurrentPositionPlus(1), true, true, columnListKeywordArray)\r\n\r\n        // parse from ...\r\n        if (!this.expect(TokenType.keywordFrom, true)) {\r\n            columnListKeywordArray.unshift(\"from\");\r\n            return null;\r\n        }\r\n\r\n        node.fromStartPosition = { line: this.lastToken.position.line, column: this.lastToken.position.column + this.lastToken.position.length, length: 0 };\r\n\r\n        let dontHint: string[] = [];\r\n        node.fromNode = this.parseTableOrSubQuery(dontHint);\r\n\r\n        let fromListKeywordArray = [\"join\", \"left\", \"right\", \"inner\", \"outer\", \"natural\", \"on\", \"as\", \", \"];\r\n        fromListKeywordArray.splice(fromListKeywordArray.indexOf(this.lastToken.value + \"\"), 1);\r\n\r\n        let hintEndPosition = this.getCurrentPositionPlus(2);\r\n        if (this.comesToken(TokenType.semicolon)) {\r\n            hintEndPosition = this.getCurrentPosition();\r\n        }\r\n\r\n        this.module.addCompletionHint(node.fromStartPosition, hintEndPosition, false, true, fromListKeywordArray, dontHint)\r\n        node.fromEndPosition = this.getCurrentPosition();\r\n\r\n        // parse where...\r\n\r\n        let whereKeywordArray = [\"like\"];\r\n        if (this.tt == TokenType.keywordWhere) {\r\n            let position = this.getCurrentPosition();\r\n            let whereStart = this.getCurrentPosition();\r\n            this.nextToken();\r\n            node.whereNode = this.parseTerm();\r\n            this.module.addCompletionHint(whereStart, this.getCurrentPositionPlus(4), true, true, whereKeywordArray)\r\n            // if (node.whereNode != null) node.whereNode.position = position;\r\n        } else {\r\n            fromListKeywordArray.push(\"where\");\r\n        }\r\n\r\n        let groupKeywordArray = [];\r\n        if (this.tt == TokenType.keywordGroup) {\r\n            let groupStart = this.getCurrentPosition();\r\n            node.groupByNode = this.parseGroupBy();\r\n            this.module.addCompletionHint(groupStart, this.getCurrentPosition(), true, true, groupKeywordArray);\r\n        } else {\r\n            whereKeywordArray.push(\"group by\");\r\n        }\r\n\r\n        if (this.tt == TokenType.keywordOrder) {\r\n            let orderStart = this.getCurrentPosition();\r\n            node.orderByNode = this.parseOrderBy();\r\n            this.module.addCompletionHint(orderStart, this.getCurrentPosition(), true, true, [\"asc\", \"desc\"]);\r\n        } else {\r\n            whereKeywordArray.push(\"order by\");\r\n            groupKeywordArray.push(\"order by\");\r\n        }\r\n\r\n        if (this.tt == TokenType.keywordLimit) {\r\n            node.limitNode = this.parseLimit();\r\n        }\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n        node.endPosition.column += 3;\r\n\r\n        return node;\r\n    }\r\n\r\n    parseLimit(): LimitNode {\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n        let numberOfRows: TermNode = this.parseTerm();\r\n        let ln: LimitNode = {\r\n            type: TokenType.keywordLimit,\r\n            position: position,\r\n            numberOfRows: numberOfRows\r\n        }\r\n        if (this.tt == TokenType.keywordOffset) {\r\n            this.nextToken();\r\n            ln.offset = this.parseTerm();\r\n        }\r\n        return ln;\r\n    }\r\n\r\n    parseGroupBy(): GroupByNode {\r\n        let position = this.getCurrentPosition();\r\n        this.expect(TokenType.keywordGroup, true);\r\n        this.expect(TokenType.keywordBy, true);\r\n        let gbn: GroupByNode = {\r\n            type: TokenType.keywordGroup,\r\n            columnList: [],\r\n            position: position\r\n        }\r\n        let tokenTypesAfterGroupBy = [TokenType.keywordHaving, TokenType.keywordSelect, TokenType.keywordOrder, TokenType.keywordLimit, TokenType.rightBracket, TokenType.semicolon];\r\n        gbn.columnList = this.parseColumnList(tokenTypesAfterGroupBy, false).map(columnNode => columnNode.term);\r\n        if (this.tt == TokenType.keywordHaving) {\r\n            this.nextToken();\r\n            gbn.having = this.parseTerm();\r\n        }\r\n        return gbn;\r\n    }\r\n\r\n    parseOrderBy(): OrderByNode[] {\r\n        this.expect(TokenType.keywordOrder, true);\r\n        this.expect(TokenType.keywordBy, true);\r\n\r\n        let obnList: OrderByNode[] = [];\r\n        let first: boolean = true;\r\n\r\n        do {\r\n            if (first) {\r\n                first = false;\r\n            } else {\r\n                this.expect(TokenType.comma, true);\r\n            }\r\n            let column: TermNode = this.parseTerm();\r\n            let obn: OrderByNode = {\r\n                type: TokenType.keywordOrder,\r\n                position: this.getCurrentPosition(),\r\n                column: column\r\n            }\r\n            if ([TokenType.keywordAscending, TokenType.keywordDescending].indexOf(this.tt) >= 0) this.nextToken();\r\n            if (this.tt == TokenType.keywordNulls) {\r\n                this.nextToken();\r\n                this.expect([TokenType.keywordFirst, TokenType.keywordLast], true);\r\n            }\r\n            obnList.push(obn);\r\n        } while (this.tt == TokenType.comma);\r\n\r\n        return obnList;\r\n    }\r\n\r\n    parseTableOrSubQuery(dontHint: string[]): TableOrSubqueryNode {\r\n\r\n        let leftSide: TableOrSubqueryNode = this.parseAtomicTableOrSubQuery(dontHint);\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        while (this.parseJoinOperator()) {\r\n\r\n            let rightSide: TableOrSubqueryNode = this.parseAtomicTableOrSubQuery(dontHint);\r\n\r\n            leftSide = {\r\n                type: TokenType.keywordJoin,\r\n                firstOperand: leftSide,\r\n                secondOperand: rightSide,\r\n                position: position,\r\n            }\r\n\r\n            if (this.tt == TokenType.keywordOn) {\r\n                leftSide.on = this.parseTerm();\r\n            }\r\n\r\n        }\r\n\r\n        return leftSide;\r\n\r\n    }\r\n\r\n    parseJoinOperator(): boolean {\r\n        if (this.tt == TokenType.comma) {\r\n            this.nextToken();\r\n            return true;\r\n        }\r\n        if (this.tt == TokenType.keywordNatural) this.nextToken();\r\n        switch (this.tt) {\r\n            case TokenType.keywordLeft:\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.keywordOuter) this.nextToken();\r\n                return this.expect(TokenType.keywordJoin, true);\r\n            case TokenType.keywordInner:\r\n            case TokenType.keywordCross:\r\n                this.nextToken();\r\n                return this.expect(TokenType.keywordJoin, true);\r\n            case TokenType.keywordJoin:\r\n                this.nextToken();\r\n                return true;\r\n            default: return false;\r\n        }\r\n    }\r\n\r\n    parseAtomicTableOrSubQuery(dontHint: string[]): TableOrSubqueryNode {\r\n\r\n        if (!this.expect([TokenType.identifier, TokenType.leftBracket], false)) {\r\n            return null;\r\n        }\r\n\r\n        if (this.tt == TokenType.leftBracket) {\r\n            this.nextToken();\r\n            let ret: TableOrSubqueryNode;\r\n            //@ts-ignore\r\n            if (this.tt == TokenType.keywordSelect) {\r\n                let position = this.getCurrentPosition();\r\n                let selectStatement = this.parseSelect();\r\n                ret = {\r\n                    type: TokenType.subquery,\r\n                    alias: null,\r\n                    position: position,\r\n                    query: selectStatement\r\n                }\r\n            } else {\r\n                ret = this.parseTableOrSubQuery(dontHint);\r\n            }\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n\r\n            //@ts-ignore\r\n            if (this.tt == TokenType.keywordAs && ret.type == TokenType.subquery) {\r\n                this.nextToken();\r\n                if (this.expect(TokenType.identifier, false)) {\r\n                    ret.alias = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    dontHint.push(ret.alias);\r\n                }\r\n            }\r\n\r\n            return ret;\r\n        }\r\n\r\n        if (this.tt == TokenType.identifier) {\r\n            let node: TableNode = {\r\n                type: TokenType.table,\r\n                identifier: <string>this.cct.value,\r\n                alias: null,\r\n                position: this.getCurrentPosition()\r\n            }\r\n            dontHint.push(node.identifier);\r\n            this.nextToken();\r\n\r\n            //@ts-ignore\r\n            if (this.tt == TokenType.keywordAs) {\r\n                this.nextToken();\r\n                if (this.expect(TokenType.identifier, false)) {\r\n                    node.alias = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    dontHint.push(node.alias);\r\n                }\r\n\r\n            }\r\n\r\n            return node;\r\n        }\r\n\r\n    }\r\n\r\n    parseColumnList(tokenTypesAfterListEnd: TokenType[], allowAliases: boolean): ColumnNode[] {\r\n        let columns: ColumnNode[] = [];\r\n\r\n        while ([TokenType.identifier, TokenType.multiplication, TokenType.leftBracket].indexOf(this.tt) >= 0) {\r\n            if (this.tt == TokenType.multiplication) {\r\n                columns.push({\r\n                    term: null,\r\n                    alias: null,\r\n                    position: this.getCurrentPosition(),\r\n                    type: TokenType.allColumns\r\n                });\r\n                this.nextToken();\r\n            } else {\r\n                let columnTerm = this.parseTerm();\r\n                if (columnTerm != null) {\r\n                    let column: ColumnNode = {\r\n                        type: TokenType.column,\r\n                        term: columnTerm,\r\n                        position: columnTerm.position\r\n                    }\r\n                    columns.push(column);\r\n                    if (this.comesToken(TokenType.keywordAs)) {\r\n                        this.nextToken();\r\n                        if (this.expect(TokenType.identifier, false)) {\r\n                            column.alias = \"\" + this.cct.value;\r\n                        }\r\n                        this.nextToken();\r\n                    }\r\n                }\r\n            }\r\n            if (tokenTypesAfterListEnd.indexOf(this.tt) >= 0) {\r\n                break;\r\n            }\r\n            this.expect(TokenType.comma, true);\r\n        }\r\n\r\n        if (columns.length == 0) {\r\n            this.pushError(\"Es fehlt die kommaseparierte Liste der gewünschten Spalten.\", \"error\");\r\n        }\r\n\r\n        return columns;\r\n    }\r\n\r\n\r\n    parseTerm(): TermNode {\r\n        return this.parseTermBinary(0);\r\n    }\r\n\r\n    parseTermBinary(precedence: number): TermNode {\r\n\r\n        let left: TermNode;\r\n        if (precedence < Parser.operatorPrecedence.length - 1) {\r\n            left = this.parseTermBinary(precedence + 1);\r\n        } else {\r\n            left = this.parseUnary();\r\n        }\r\n\r\n        let operators = Parser.operatorPrecedence[precedence];\r\n\r\n        if (left == null || operators.indexOf(this.tt) < 0) {\r\n            return left;\r\n        }\r\n\r\n        let first = true;\r\n\r\n        while (first || operators.indexOf(this.tt) >= 0) {\r\n\r\n            let operator: TokenType = this.tt;\r\n\r\n            first = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            this.nextToken();\r\n            let right: TermNode;\r\n            if (precedence < Parser.operatorPrecedence.length - 1) {\r\n                right = this.parseTermBinary(precedence + 1);\r\n            } else {\r\n                right = this.parseUnary();\r\n            }\r\n\r\n            left = {\r\n                type: TokenType.binaryOp,\r\n                position: position,\r\n                operator: operator,\r\n                firstOperand: left,\r\n                secondOperand: right\r\n            };\r\n\r\n\r\n        }\r\n\r\n        return left;\r\n\r\n    }\r\n\r\n\r\n    // -, not, this, super, a.b.c[][].d, a.b(), b() (== this.b()), super.b(), super()\r\n    parseUnary(): TermNode {\r\n\r\n        let term: TermNode;\r\n        let position: TextPosition = this.getCurrentPosition();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n                return this.parseBracket();\r\n            case TokenType.minus:\r\n                // case TokenType.not:\r\n                position = position;\r\n                let tt1 = this.tt;\r\n                this.nextToken();\r\n                term = this.parseUnary();\r\n\r\n                return {\r\n                    type: TokenType.unaryOp,\r\n                    position: position,\r\n                    operand: term,\r\n                    operator: tt1\r\n                };\r\n\r\n            case TokenType.integerConstant:\r\n            case TokenType.charConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n                term = {\r\n                    type: TokenType.constantNode,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: this.tt,\r\n                    constant: this.cct.value\r\n                };\r\n                let isStringConstant = this.tt == TokenType.stringConstant;\r\n                this.nextToken();\r\n\r\n                if (isStringConstant) return this.parseDotOrArrayChains(term);\r\n\r\n                return term;\r\n            case TokenType.identifier: // attribute of current class or local variable\r\n\r\n                let identifier1 = <string>this.cct.value;\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    let rightBracketPosition = parameters.rightBracketPosition;\r\n\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position1,\r\n                        rightBracketPosition: rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        identifier: identifier1,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.identifier,\r\n                        identifier: identifier1,\r\n                        position: position\r\n                    }\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.dot) {\r\n                        let position = this.getCurrentPosition();\r\n                        this.nextToken();\r\n                        this.expect(TokenType.identifier, false);\r\n                        let secondIdentifier: IdentifierNode = {\r\n                            type: TokenType.identifier,\r\n                            identifier: <string>this.cct.value,\r\n                            position: this.getCurrentPosition()\r\n                        }\r\n                        this.nextToken();\r\n                        term = {\r\n                            type: TokenType.dot,\r\n                            identifierLeft: <IdentifierNode>term,\r\n                            identifierRight: secondIdentifier,\r\n                            position: position\r\n                        }\r\n\r\n                    } else if ([TokenType.isNull, TokenType.isNotNull].indexOf(this.tt) >= 0) {\r\n                        term = {\r\n                            type: TokenType.unaryOp,\r\n                            operand: term,\r\n                            operator: this.tt,\r\n                            position: position\r\n                        };\r\n                        this.nextToken();\r\n                    }\r\n                }\r\n\r\n                return term;\r\n            default:\r\n                this.pushError(\"Erwartet wird eine Variable, ein Methodenaufruf oder eine Konstante. Gefunden wurde: \" + this.cct.value);\r\n                return null;\r\n        }\r\n\r\n    }\r\n\r\n    parseList(): ListNode {\r\n        let node: ListNode = {\r\n            type: TokenType.list,\r\n            position: this.getCurrentPosition(),\r\n            elements: []\r\n        }\r\n\r\n        let constantTypes = [TokenType.charConstant, TokenType.stringConstant, TokenType.booleanConstant, TokenType.floatingPointConstant, TokenType.integerConstant];\r\n\r\n        while (constantTypes.indexOf(this.tt) >= 0) {\r\n            node.elements.push({\r\n                type: TokenType.constantNode,\r\n                constant: this.cct.value,\r\n                constantType: this.tt,\r\n                position: this.cct.position\r\n            });\r\n            this.nextToken();\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            }\r\n            this.nextToken();\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    parseBracket(): TermNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n        let tokenBeforeBracket = this.lastToken;\r\n        this.nextToken(); // consume (\r\n\r\n        if (this.tt == TokenType.keywordSelect) {\r\n            let selectNode = this.parseSelect();\r\n            this.expect(TokenType.rightBracket, true);\r\n            return selectNode;\r\n        } else if ([TokenType.comma, TokenType.rightBracket].indexOf(this.ct[1].tt) >= 0 &&\r\n            [TokenType.keywordIn, TokenType.keywordNotIn].indexOf(tokenBeforeBracket.tt) >= 0) {\r\n            let listNode = this.parseList();\r\n            this.expect(TokenType.rightBracket, true);\r\n            return listNode;\r\n        } else {\r\n            let term = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            let bracketsNode: BracketsNode = {\r\n                position: rightBracketPosition,\r\n                type: TokenType.rightBracket,\r\n                termInsideBrackets: term\r\n            }\r\n\r\n\r\n            return bracketsNode;\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    parseMethodCallParameters(): { rightBracketPosition: TextPosition, nodes: TermNode[], commaPositions: TextPosition[] } {\r\n        // Assumption: current token is (        \r\n        this.nextToken();\r\n        if (this.tt == TokenType.rightBracket) {\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n            return { rightBracketPosition: rightBracketPosition, nodes: [], commaPositions: [] };\r\n        }\r\n\r\n        let parameters: TermNode[] = [];\r\n        let commaPositions: TextPosition[] = [];\r\n\r\n        while (true) {\r\n            let pos = this.pos;\r\n\r\n            if (this.tt == TokenType.multiplication) {\r\n                this.nextToken();\r\n                parameters.push({\r\n                    type: TokenType.allColumns,\r\n                    position: this.getCurrentPosition(),\r\n                });\r\n            } else {\r\n                let parameter = this.parseTerm();\r\n                if (parameter != null) {\r\n                    parameters.push(parameter);\r\n                }\r\n            }\r\n\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            } else {\r\n                commaPositions.push(this.getCurrentPosition());\r\n                this.nextToken(); // consume comma\r\n            }\r\n\r\n            // emergency-step:\r\n            if (this.pos == pos) {\r\n                this.nextToken();\r\n            }\r\n\r\n        }\r\n\r\n        let position = this.getCurrentPosition();\r\n        let rightBracketFound = this.expect(TokenType.rightBracket, true);\r\n\r\n        return { rightBracketPosition: rightBracketFound ? position : null, nodes: parameters, commaPositions: commaPositions };\r\n\r\n    }\r\n\r\n    parseDotOrArrayChains(term: TermNode): TermNode {\r\n\r\n        if (term == null) return null;\r\n\r\n        while (this.comesToken([TokenType.dot, TokenType.leftSquareBracket])) {\r\n            if (this.tt == TokenType.dot) {\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.identifier) {\r\n                    this.pushError(\"Erwartet wird der Bezeichner eines Attributs oder einer Methode, gefunden wurde: \" + this.cct.value);\r\n                    return term;\r\n                }\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position,\r\n                        rightBracketPosition: parameters.rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        identifier: identifier,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                }\r\n                // else {\r\n                //     term = {\r\n                //         type: TokenType.pushAttribute,\r\n                //         position: position,\r\n                //         identifier: identifier,\r\n                //         object: term\r\n                //     }\r\n                // }\r\n\r\n            }\r\n        }\r\n\r\n        return term;\r\n    }\r\n\r\n\r\n}","import { ColumnStructure, TableStructure } from \"../../tools/DatabaseTools.js\";\nimport { SQLType, SQLBaseType, SQLDerivedType } from \"./SQLTypes.js\";\n\n\nexport class Column {\n\n    references: Column;\n    fromColumnStructure?: ColumnStructure;\n    notNull: boolean;\n\n    constructor(public identifier: string, public type: SQLType, public table: Table, public isPrimaryKey: boolean, public isNullable: boolean, public defaultValue: string, public isAutoIncrement){\n\n    }\n\n    static fromColumnStructure(cs: ColumnStructure, table: Table): Column {\n\n        let regex1 = /^(\\w*) *(?:\\((.*)\\))?.*$/;\n\n        let typeMatch1 = cs.completeTypeSQL.match(regex1);\n        let baseTypeIdentifier: string = typeMatch1[1];\n        let commaSeparatedParameters: string = typeMatch1[2];\n\n        let parameterValues: number[] = [];\n        if(commaSeparatedParameters != null){\n            parameterValues = commaSeparatedParameters.split(',').map(v => parseInt(v.trim()));           \n        }\n\n        let type: SQLType = SQLBaseType.getBaseType(baseTypeIdentifier);\n        if(parameterValues.length > 0 && type != null){\n            type = new SQLDerivedType(<SQLBaseType>type, parameterValues);\n        }\n\n        let column = new Column(cs.name, type, table, cs.isPrimaryKey, !cs.isPrimaryKey, cs.defaultValue, cs.isAutoIncrement);\n        column.notNull = cs.notNull;\n        \n        column.fromColumnStructure = cs;\n\n        return column;\n    }\n\n}\n\nexport class Table {\n    \n    public columns: Column[] = [];\n\n    public size: number;\n\n    constructor(public identifier: string){\n\n    }\n\n    private static fromTableStructure(ts: TableStructure): Table {\n        let table: Table = new Table(ts.name);\n        table.columns = ts.columns.map( column => Column.fromColumnStructure(column, table));\n        table.size = ts.size;\n        return table;\n    }\n\n    static fromTableStructureList(tsList: TableStructure[]): Table[]{\n\n        if(tsList == null) tsList = [];\n\n        let tables: Table[] = tsList.map(ts => Table.fromTableStructure(ts));\n\n        let columnStructureToColumnMap: Map<ColumnStructure, Column> = new Map();\n        for(let table of tables){\n            for(let column of table.columns){\n                columnStructureToColumnMap.set(column.fromColumnStructure, column);\n            }\n        }\n\n        for(let table of tables){\n            for(let column of table.columns){\n                let referencedCs = column.fromColumnStructure.references;\n                if(referencedCs != null){\n                    let referencedColumn = columnStructureToColumnMap.get(referencedCs);\n                    column.references = referencedColumn;\n                }\n            }\n        }\n\n        return tables;\n    }\n\n}","import { DatabaseStructure } from \"../../tools/DatabaseTools.js\";\r\nimport { TextPosition } from \"../lexer/Token.js\";\r\nimport { Table, Column } from \"./SQLTable.js\";\r\n\r\nexport type Symbol = {\r\n    identifier: string;\r\n    table?: Table;\r\n    column?: Column;\r\n    tableAlias?: string;\r\n    posOfDefinition: TextPosition;\r\n    referencedOnPositions: TextPosition[];\r\n}\r\n\r\nexport class SymbolTable {\r\n    parent: SymbolTable; // SymbolTable of parent scope\r\n    positionFrom: TextPosition;\r\n    positionTo: TextPosition;\r\n\r\n    childSymbolTables: SymbolTable[] = [];\r\n\r\n    private symbols: Map<string, Symbol[]> = new Map();\r\n    symbolList: Symbol[] = [];\r\n\r\n    constructor(parentSymbolTable: SymbolTable, positionFrom: TextPosition, positionTo: TextPosition) {\r\n\r\n        this.parent = parentSymbolTable;\r\n\r\n        this.positionFrom = positionFrom;\r\n        this.positionTo = positionTo;\r\n\r\n\r\n        if (this.parent != null) {\r\n            this.parent.childSymbolTables.push(this);\r\n        }\r\n    }\r\n\r\n    extractDatabaseStructure(databaseStructure: DatabaseStructure) {\r\n        for (let table of Table.fromTableStructureList(databaseStructure?.tables)) {\r\n\r\n            this.storeTableSymbols(table);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    storeTableSymbols(table: Table){\r\n        this.storeSymbol({\r\n            identifier: table.identifier,\r\n            posOfDefinition: null,\r\n            referencedOnPositions: [],\r\n            table: table\r\n        });\r\n\r\n        for (let column of table.columns) {\r\n            this.storeSymbol({\r\n                identifier: column.identifier,\r\n                posOfDefinition: null,\r\n                referencedOnPositions: [],\r\n                column: column\r\n            });\r\n        }\r\n    }\r\n\r\n    storeSymbol(symbol: Symbol) {\r\n        let list: Symbol[] = this.symbols.get(symbol.identifier);\r\n        if (list == null) {\r\n            list = [symbol];\r\n            this.symbols.set(symbol.identifier.toLowerCase(), list);\r\n        } else {\r\n            list.push(symbol);\r\n        }\r\n        this.symbolList.push(symbol);\r\n    }\r\n\r\n    findTableAtPosition(line: number, column: number): SymbolTable {\r\n\r\n        if (!this.containsPosition(line, column)) {\r\n            return null;\r\n        }\r\n\r\n        let shortestSymbolTableContainingPosition = null;\r\n        let shortestPosition = 10000000;\r\n\r\n        for (let st of this.childSymbolTables) {\r\n            if (st.containsPosition(line, column)) {\r\n                let st1 = st.findTableAtPosition(line, column);\r\n                if (st1.positionTo.line - st1.positionFrom.line < shortestPosition) {\r\n                    shortestSymbolTableContainingPosition = st1;\r\n                    shortestPosition = st1.positionTo.line - st1.positionFrom.line;\r\n                }\r\n            }\r\n            // if(st.containsPosition(line, column) && st.positionTo.line - st.positionFrom.line < shortestPosition){\r\n            //     shortestSymbolTableContainingPosition = st;\r\n            //     shortestPosition = st.positionTo.line - st.positionFrom.line;\r\n            // }\r\n        }\r\n\r\n        if (shortestSymbolTableContainingPosition != null) {\r\n            return shortestSymbolTableContainingPosition;\r\n        } else {\r\n            return this;\r\n        }\r\n\r\n    }\r\n\r\n    containsPosition(line: number, column: number) {\r\n        if (line < this.positionFrom.line || line > this.positionTo.line) {\r\n            return false;\r\n        }\r\n\r\n        if (line == this.positionFrom.line && column < this.positionFrom.column) return false;\r\n        if (line == this.positionTo.line && column > this.positionTo.column + 1) return false;\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    findTable(identifier: string): Table {\r\n        let tables = this.findTables(identifier);\r\n        if(tables.length == 0) return null;\r\n        return tables[0].table;\r\n    }\r\n\r\n    findTables(identifier: string): Symbol[] {\r\n\r\n        let symbolTable: SymbolTable = this;\r\n        while(symbolTable != null){\r\n\r\n            let symbols = symbolTable.symbols.get(identifier.toLowerCase());\r\n            if(symbols != null){\r\n                symbols = symbols.filter(s => s.table != null);\r\n                if(symbols.length > 0){\r\n                    return symbols;\r\n                }\r\n            }\r\n\r\n            symbolTable = symbolTable.parent;\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    findColumn(identifier: string): Symbol[] {\r\n\r\n        let symbolTable: SymbolTable = this;\r\n        while(symbolTable != null){\r\n\r\n            let symbols = symbolTable.symbols.get(identifier.toLowerCase());\r\n            if(symbols != null){\r\n                symbols = symbols.filter(s => s.column != null);\r\n                if(symbols.length > 0){\r\n                    return symbols;\r\n                }\r\n            }\r\n\r\n            symbolTable = symbolTable.parent;\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { SQLBaseType, SQLType } from \"./SQLTypes.js\";\r\n\r\nexport class SQLMethodParameter {\r\n    type: SQLType;\r\n    constructor(public identifier: string, type: string){\r\n        this.type = SQLBaseType.getBaseType(type);\r\n    }\r\n}\r\n\r\nexport class SQLMethod {\r\n    acceptsStarParameter: boolean = false;\r\n    public returnType: SQLType;\r\n    constructor(public identifier: string, public isAggregating: boolean, returnType: string, public parameters: SQLMethodParameter[]){\r\n        this.returnType = SQLBaseType.getBaseType(returnType);\r\n    }\r\n\r\n}\r\n\r\nexport class SQLMethodStore {\r\n\r\n    static instance: SQLMethodStore;\r\n    public methods: SQLMethod[] = [];\r\n\r\n    static getInstance():SQLMethodStore {\r\n        if(this.instance == null){\r\n            this.instance = new SQLMethodStore();\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    constructor(){\r\n        this.pushOneParameterMethod(\"max\" ,\"integer\", \"integer\");\r\n        this.pushOneParameterMethod(\"max\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"min\" ,\"integer\", \"integer\");\r\n        this.pushOneParameterMethod(\"min\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"avg\" ,\"integer\", \"integer\");\r\n        this.pushOneParameterMethod(\"avg\" ,\"float\", \"float\");\r\n\r\n        let countMethod = new SQLMethod(\"count\", true, \"integer\", [new SQLMethodParameter(\"spalte\", \"text\")]);\r\n        countMethod.acceptsStarParameter = true;\r\n        this.methods.push(countMethod);\r\n    }\r\n    \r\n    getMethods(identifier: string){\r\n        return this.methods.filter(m => m.identifier == identifier.toLowerCase());\r\n    }\r\n\r\n\r\n    pushOneParameterMethod(identifier: string, returnType: string, parameterType: string){\r\n        this.methods.push(new SQLMethod(identifier, true, returnType, [new SQLMethodParameter(\"spalte\", parameterType)]));\r\n\r\n    }\r\n}","export function hash(s: string){\r\n    let hash: number = 0;\r\n    let chr: number;\r\n    for (let i = 0; i < s.length; i++) {\r\n      chr   = s.charCodeAt(i);\r\n      hash  = ((hash << 5) - hash) + chr;\r\n      hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n\r\nexport function escapeHtml(unsafe: string): string {\r\n  return unsafe\r\n      .replace(/['\"]+/g, '')\r\n       .replace(/&/g, \"&amp;\")\r\n       .replace(/</g, \"&lt;\")\r\n       .replace(/>/g, \"&gt;\")\r\n       .replace(/\"/g, \"&quot;\")\r\n       .replace(/'/g, \"&#039;\");\r\n}\r\n\r\nexport function dateToString(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth() + 1)}.${date.getFullYear()}, ${twoDez(date.getHours())}:${twoDez(date.getMinutes())}`;\r\n}\r\n\r\nexport function dateToStringWithoutTime(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth())}.${date.getFullYear()}`;\r\n}\r\n\r\nfunction twoDez(z: number):string {\r\n  if(z < 10) return \"0\" + z;\r\n  return \"\" + z;\r\n}\r\n\r\nexport function stringToDate(text: string): Date {\r\n\r\n  let match = text.match(/^(\\d{2})\\.(\\d{2})\\.(\\d{4}), (\\d{2}):(\\d{2})$/);\r\n\r\n  let date: Date = new Date(Number.parseInt(match[3]), Number.parseInt(match[2]), Number.parseInt(match[1]), Number.parseInt(match[4]), Number.parseInt(match[5]) );\r\n\r\n  return date;\r\n}\r\n\r\nexport function stringWrap(s: string, length: number ): string{\r\n  return s.replace(\r\n    new RegExp(`(?![^\\\\n]{1,${length}}$)([^\\\\n]{1,${length}})\\\\s`, 'g'), '$1\\n'\r\n  );\r\n} \r\n\r\nexport function formatAsJavadocComment(s: string, indent: number|string = \"\"): string {\r\n  let indentString = \"\";\r\n\r\n  if(typeof indent == \"string\"){\r\n    indentString = indent;\r\n  } else {\r\n    for(let i = 0; i < indent; i++){\r\n      indentString += \" \";\r\n    }\r\n  }\r\n\r\n  s = stringWrap(s, 60);\r\n  if(s.length > 0) s = \"\\n\" + s;\r\n  s = indentString + \"/**\" + s.replace(/\\n/g, \"\\n\" + indentString + \" * \") + \"\\n\" + indentString + \" */\";\r\n  return s;\r\n}\r\n\r\n\r\nexport function isDate(inputText: string) {\r\n\r\n      if (inputText == null || typeof inputText != 'string') return false;\r\n\r\n      // var dateformat = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/;\r\n      var dateformat = /^\\d{4}[\\/\\-](0?[1-9]|1[012])[\\/\\-](0?[1-9]|[12][0-9]|3[01])$/;\r\n      // Match the date format through regular expression\r\n      if (inputText.match(dateformat)) {\r\n          //Test which seperator is used '/' or '-'\r\n          var opera1 = inputText.split('/');\r\n          var opera2 = inputText.split('-');\r\n          var lopera1 = opera1.length;\r\n          var lopera2 = opera2.length;\r\n          // Extract the string into month, date and year\r\n          if (lopera1 > 1) {\r\n              var pdate = inputText.split('/');\r\n          }\r\n          else if (lopera2 > 1) {\r\n              var pdate = inputText.split('-');\r\n          }\r\n          if (pdate.length != 3) return false;\r\n          var dd = parseInt(pdate[2]);\r\n          var mm = parseInt(pdate[1]);\r\n          var yy = parseInt(pdate[0]);\r\n          // Create list of days of a month [assume there is no leap year by default]\r\n          var ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n          if (mm == 1 || mm > 2) {\r\n              if (dd > ListofDays[mm - 1]) {\r\n                  return false;\r\n              }\r\n          }\r\n          if (mm == 2) {\r\n              var lyear = false;\r\n              if ((!(yy % 4) && yy % 100) || !(yy % 400)) {\r\n                  lyear = true;\r\n              }\r\n              if ((lyear == false) && (dd >= 29)) {\r\n                  return false;\r\n              }\r\n              if ((lyear == true) && (dd > 29)) {\r\n                  return false;\r\n              }\r\n              return true;\r\n          }\r\n\r\n          return true;\r\n\r\n      }\r\n      else {\r\n          return false;\r\n      }\r\n  }\r\n\r\n  export function isDateTime(inputText: string) {\r\n\r\n      if (inputText == null || typeof inputText != 'string') return false;\r\n\r\n      // var dateformat = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/;\r\n      var dateformat = /^\\d{4}[\\-](0[1-9]|1[012])[\\-](0[1-9]|[12][0-9]|3[01]) ([01][1-9]|2[0123]):([0-5][0-9]):([0-5][0-9])$/;\r\n      // Match the date format through regular expression\r\n      if (inputText.match(dateformat)) {\r\n          var splitStr = inputText.split(' ');\r\n          var dateStr = splitStr[0];\r\n          //var timeStr = splitStr[1];\r\n\r\n          if (dateStr.length != 10) return false;\r\n          var dd = parseInt(dateStr.substring(8,10));\r\n          var mm = parseInt(dateStr.substring(5, 7));\r\n          var yy = parseInt(dateStr.substring(0, 4));\r\n          // Create list of days of a month [assume there is no leap year by default]\r\n          var ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n          if (mm == 1 || mm > 2) {\r\n              if (dd > ListofDays[mm - 1]) {\r\n                  return false;\r\n              }\r\n          }\r\n          if (mm == 2) {\r\n              var lyear = false;\r\n              if ((!(yy % 4) && yy % 100) || !(yy % 400)) {\r\n                  lyear = true;\r\n              }\r\n              if ((lyear == false) && (dd >= 29)) {\r\n                  return false;\r\n              }\r\n              if ((lyear == true) && (dd > 29)) {\r\n                  return false;\r\n              }\r\n              return true;\r\n          }\r\n\r\n          return true;\r\n\r\n      }\r\n      else {\r\n          return false;\r\n      }\r\n  }\r\n","import { DatabaseTool } from \"../../tools/DatabaseTools.js\";\nimport { TextPosition, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\nimport { CompletionHint, Module } from \"./Module.js\";\nimport { Symbol, SymbolTable } from \"./SymbolTable.js\";\nimport { AlterTableNode, ASTNode, BinaryOpNode, CreateTableNode, DeleteNode, DotNode, DropTableNode, IdentifierNode, InsertNode, MethodcallNode, SelectNode, TableOrSubqueryNode, TermNode, UpdateNode } from \"./Ast.js\";\nimport { Error, ErrorLevel, QuickFix } from \"../lexer/Lexer.js\";\nimport { Column, Table } from \"./SQLTable.js\";\nimport { SQLBaseType, SQLType } from \"./SQLTypes.js\";\nimport { SQLMethodStore } from \"./SQLMethods.js\";\nimport { isDate, isDateTime } from \"../../tools/StringTools.js\";\n\n\nexport class SymbolResolver {\n\n    symbolTableStack: SymbolTable[] = [];\n    errorList: Error[];\n    module: Module;\n    databaseTool: DatabaseTool;\n    tables: Table[];\n\n    constructor(databaseTool: DatabaseTool) {\n        this.databaseTool = databaseTool;\n        this.tables = Table.fromTableStructureList(databaseTool.databaseStructure?.tables);\n    }\n\n    start(module: Module) {\n        this.module = module;\n        this.symbolTableStack = [];\n        this.errorList = [];\n\n        module.mainSymbolTable = new SymbolTable(null, { column: 0, line: 0, length: 0 }, { column: 0, line: 100000, length: 0 })\n\n        this.symbolTableStack.push(module.mainSymbolTable);\n\n        for (let statement of this.module.sqlStatements) {\n\n            let errorsBeforeStatement = this.errorList.length;\n\n            let astNode = statement.ast;\n            if (astNode == null) continue;\n\n            switch (astNode.type) {\n                case TokenType.keywordSelect:\n                    this.resolveSelect(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordInsert:\n                    this.resolveInsert(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordCreate:\n                    this.resolveCreateTable(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordUpdate:\n                    this.resolveUpdate(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordDelete:\n                    this.resolveDelete(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordDrop:\n                    this.resolveDropTable(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordAlter:\n                    this.resolveAlterTable(astNode)\n                    this.symbolTableStack.pop();\n                    break;\n\n                default:\n                    break;\n            }\n\n            statement.hasErrors = statement.hasErrors || this.errorList.length > errorsBeforeStatement;\n\n        }\n\n        module.errors[2] = this.errorList;\n\n    }\n\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position: TextPosition, quickFix?: QuickFix) {\n        // if (position == null) position = Object.assign({}, this.position);\n        this.errorList.push({\n            text: text,\n            position: position,\n            quickFix: quickFix,\n            level: errorLevel\n        });\n    }\n\n\n    getCurrentSymbolTable(): SymbolTable {\n        return this.symbolTableStack[this.symbolTableStack.length - 1];\n    }\n\n    pushNewSymbolTable(positionFrom: TextPosition, positionTo: TextPosition): SymbolTable {\n        if(positionTo == null) {\n            positionTo = {\n                line: 100000,\n                column: 1,\n                length: 1\n            }\n        };\n        let st: SymbolTable = new SymbolTable(this.getCurrentSymbolTable(), positionFrom, positionTo);\n        this.symbolTableStack.push(st);\n        return st;\n    }\n\n    resolveSelect(selectNode: SelectNode): Table {\n        let resultTable: Table = new Table(null);\n\n        selectNode.symbolTable = this.pushNewSymbolTable(selectNode.position, selectNode.endPosition);\n\n        // From\n        let joinedTables: Table[] = [];\n        this.resolveTableOrSubQuery(selectNode.fromNode, joinedTables);\n        if (selectNode.fromStartPosition != null) {\n            let fromSymbolTable = new SymbolTable(this.getCurrentSymbolTable(), selectNode.fromStartPosition, selectNode.fromEndPosition);\n            fromSymbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n        }\n\n        // Column list\n        for (let columnNode of selectNode.columnList) {\n            if (columnNode.type == TokenType.allColumns) {\n                for (let table of joinedTables) {\n                    for (let column of table.columns) {\n                        let c: Column = new Column(column.identifier, column.type, resultTable, false, true, column.defaultValue, column.isAutoIncrement);\n                        resultTable.columns.push(c);\n                    }\n                }\n            } else {\n                this.resolveTerm(columnNode.term);\n                let c1: Column = new Column(columnNode.alias, columnNode.term.sqlType, resultTable, false, true, null, false);\n                resultTable.columns.push(c1);\n                if (c1.identifier != null) {\n                    selectNode.symbolTable.storeSymbol({\n                        identifier: c1.identifier,\n                        posOfDefinition: columnNode.term.position,\n                        referencedOnPositions: [],\n                        column: c1\n                    })\n                }\n            }\n        }\n\n        // where...\n        if (selectNode.whereNode != null) {\n            let whereType = this.resolveTerm(selectNode.whereNode);\n            if (whereType != null && whereType.getBaseTypeName() != \"boolean\") {\n                this.pushError(\"Das Ergebnis des where-Teils einer select-Anweisung muss vom Typ boolean sein.\", \"error\", selectNode.whereNode.position);\n            }\n        }\n\n\n        // TODO: group by, order by\n\n        return resultTable;\n    }\n\n    resolveDropTable(node: DropTableNode) {\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        if (node.tableIdentifier == null) return;\n\n        let table = node.symbolTable.findTable(node.tableIdentifier);\n        if (table == null) this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\n\n    }\n\n    resolveDelete(node: DeleteNode) {\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        if (node.tableIdentifier == null) return;\n\n        let table = node.symbolTable.findTable(node.tableIdentifier);\n        if (table == null) this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\n\n\n        // if(node.whereNodeBegin != null){\n        //     let symbolTable = this.pushNewSymbolTable(node.whereNodeBegin, node.whereNodeEnd);\n        //     symbolTable.storeTableSymbols(table);\n        // }\n\n\n        if (node.whereNode != null) {\n            let whereSymbolTable = this.pushNewSymbolTable(node.whereNodeBegin, node.whereNodeEnd);\n            if(table != null) whereSymbolTable.storeTableSymbols(table);\n            this.resolveTerm(node.whereNode);\n            this.symbolTableStack.pop();\n        }\n\n\n\n    }\n\n\n    resolveAlterTable(node: AlterTableNode) {\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        if (node.tableIdentifier == null) {\n            return;\n        }\n\n        let table = node.symbolTable.findTable(node.tableIdentifier);\n        if (table == null) {\n            this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\n        }\n\n        let oldColumn: Column = null;\n        if (node.oldColumnName != null) {\n            oldColumn = table.columns.find(c => c.identifier.toLocaleLowerCase() == node.oldColumnName.toLocaleLowerCase());\n            if (oldColumn == null) {\n                this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" hat keine Spalte mit dem Bezeichner \" + node.oldColumnName, \"error\", node.oldColumnPosition);\n            }\n        }\n\n        switch (node.kind) {\n            case \"dropColumn\":\n                // nothing to do as node.oldColumnName is checked above\n                break;\n            case \"addColumn\":\n                let columnNode = node.columnDef;\n                if (columnNode == null) break;\n                if (columnNode.foreignKeyInfo != null && columnNode.baseType != null) {\n                    let fki = columnNode.foreignKeyInfo;\n                    let tables = this.getCurrentSymbolTable().findTables(fki.referencesTable);\n                    if (tables.length == 1) {\n                        let table = tables[0].table;\n                        let column = table.columns.find(c => c.identifier == fki.referencesColumn);\n                        if (column != null && column.type != null) {\n                            if (!column.isPrimaryKey) {\n                                this.pushError(\"Die referenzierte Spalte \" + fki.referencesTable + \".\" + fki.referencesColumn + \" ist kein Primärschlüssel.\", \"warning\", columnNode.referencesPosition);\n                            }\n                            if (!column.type.canCastTo(columnNode.baseType)) {\n                                this.pushError(\"Der Datentyp \" + columnNode.baseType.toString() + \" der Spalte \" + columnNode.identifier +\n                                    \" kann nich in den Datentyp \" + column.type.toString() + \" der referenzierten Spalte \" + table.identifier + \".\" +\n                                    column.identifier + \" umgewandelt werden.\", \"error\", columnNode.referencesPosition);\n                            }\n                        }\n                    }\n                }\n                break;\n            case \"renameColumn\":\n                // nothing to do as node.oldColumnName is checked above\n                break;\n            case \"renameTable\":\n                // nothing to do \n                break;\n            default:\n                break;\n        }\n    }\n\n    resolveUpdate(node: UpdateNode) {\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        if (node.tableIdentifier == null) {\n            return;\n        }\n\n        let table = node.symbolTable.findTable(node.tableIdentifier);\n        if (table == null) this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\n\n        for (let i = 0; i < node.columnIdentifiers.length; i++) {\n            let ci = node.columnIdentifiers[i];\n            let ciPos = node.columnIdentifierPositions[i];\n            let value = node.values[i];\n\n            if (ci == null) continue;\n            let column = table.columns.find(c => c.identifier == ci);\n\n            if (column == null) {\n                this.pushError(ci + \" ist kein Bezeichner einer Spalte der Tabelle \" + node.tableIdentifier + \".\", \"error\", ciPos);\n            }\n\n            if (value == null) continue;\n            let symbolTable = this.pushNewSymbolTable(node.valuePosBegin[i], node.valuePosEnd[i]);\n            symbolTable.storeTableSymbols(table);\n            this.resolveTerm(value);\n            this.symbolTableStack.pop();\n\n        }\n\n        if (node.whereNodeBegin != null) {\n            let symbolTable = this.pushNewSymbolTable(node.whereNodeBegin, node.whereNodeEnd);\n            symbolTable.storeTableSymbols(table);\n        }\n\n        if (node.whereNode != null) {\n            this.resolveTerm(node.whereNode);\n        }\n        this.symbolTableStack.pop();\n\n    }\n\n\n\n    resolveCreateTable(createTableNode: CreateTableNode) {\n\n        createTableNode.symbolTable = this.pushNewSymbolTable(createTableNode.position, createTableNode.endPosition);\n        createTableNode.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        let thisTable: Table = {\n            identifier: createTableNode.identifier,\n            columns: null,\n            size: 0\n        }\n\n        thisTable.columns = createTableNode.columnList.map(c => {\n            return {\n                identifier: c.identifier,\n                isNullable: false,\n                isPrimaryKey: c.isPrimary,\n                isAutoIncrement: c.isAutoIncrement,\n                notNull: false,\n                references: null,\n                table: thisTable,\n                type: c.baseType,\n                defaultValue: c.defaultValue\n            }\n        });\n\n        createTableNode.symbolTable.storeTableSymbols(thisTable);\n\n        for (let columnNode of createTableNode.columnList) {\n            if (createTableNode.columnList.filter(c => c.identifier.toLocaleLowerCase() == columnNode.identifier.toLocaleLowerCase()).length > 1) {\n                this.pushError(\"Der Spaltenbezeichner \" + columnNode.identifier + \" darf in einer Tabelle nur ein einziges Mal verwendet werden\", \"error\", columnNode.position);\n            }\n\n            if (columnNode.foreignKeyInfo != null && columnNode.baseType != null) {\n                let fki = columnNode.foreignKeyInfo;\n                let tables = this.getCurrentSymbolTable().findTables(fki.referencesTable);\n                if (tables.length == 1) {\n                    let table = tables[0].table;\n                    let column = table.columns.find(c => c.identifier == fki.referencesColumn);\n                    if (column != null && column.type != null) {\n                        if (!column.isPrimaryKey) {\n                            this.pushError(\"Die referenzierte Spalte \" + fki.referencesTable + \".\" + fki.referencesColumn + \" ist kein Primärschlüssel.\", \"warning\", columnNode.referencesPosition);\n                        }\n                        if (!column.type.canCastTo(columnNode.baseType)) {\n                            this.pushError(\"Der Datentyp \" + columnNode.baseType.toString() + \" der Spalte \" + columnNode.identifier +\n                                \" kann nich in den Datentyp \" + column.type.toString() + \" der referenzierten Spalte \" + table.identifier + \".\" +\n                                column.identifier + \" umgewandelt werden.\", \"error\", columnNode.referencesPosition);\n                        }\n                    }\n                }\n            }\n\n        }\n\n        for (let fki of createTableNode.foreignKeyInfoList) {\n\n            let columnNode = createTableNode.columnList.find(cn => cn.identifier == fki.column);\n            if (columnNode == null) continue;\n\n            let tables = this.getCurrentSymbolTable().findTables(fki.referencesTable);\n            if (tables.length == 1) {\n                let table = tables[0].table;\n                let column = table.columns.find(c => c.identifier == fki.referencesColumn);\n                if (column != null && column.type != null) {\n                    if (!column.isPrimaryKey) {\n                        this.pushError(\"Die referenzierte Spalte \" + fki.referencesTable + \".\" + fki.referencesColumn + \" ist kein Primärschlüssel.\", \"warning\", fki.referencesPosition);\n                    }\n                    if (!column.type.canCastTo(columnNode.baseType)) {\n                        this.pushError(\"Der Datentyp \" + columnNode.baseType.toString() + \" der Spalte \" + columnNode.identifier +\n                            \" kann nich in den Datentyp \" + column.type.toString() + \" der referenzierten Spalte \" + table.identifier + \".\" +\n                            column.identifier + \" umgewandelt werden.\", \"error\", fki.referencesPosition);\n                    }\n                }\n            }\n\n        }\n\n\n    }\n\n    resolveTableOrSubQuery(tosNode: TableOrSubqueryNode, joinedTables: Table[]) {\n        if (tosNode == null) return;\n\n        switch (tosNode.type) {\n            case TokenType.table:\n                let tableList = this.tables.filter(t => t.identifier.toLowerCase() == tosNode.identifier.toLowerCase());\n                if (tableList.length == 0) {\n                    this.pushError(tosNode.identifier + \" ist nicht der Name einer Tabelle.\", \"error\", tosNode.position);\n                } else if (tableList.length > 1) {\n                    this.pushError(\"Der Bezeichner \" + tosNode.identifier + \" ist hier nicht eindeutig.\", \"error\", tosNode.position);\n                } else {\n                    let table: Table = tableList[0];\n                    joinedTables.push(table);\n                    this.storeTableIntoSymbolTable(table, tosNode.position, tosNode.alias);\n                }\n\n                break;\n\n            case TokenType.keywordJoin:\n                this.resolveTableOrSubQuery(tosNode.firstOperand, joinedTables);\n                this.resolveTableOrSubQuery(tosNode.secondOperand, joinedTables);\n                break;\n\n            case TokenType.subquery:\n                tosNode.table = this.resolveSelect(tosNode.query);\n                joinedTables.push(tosNode.table);\n                if (tosNode.alias != null) {\n                    tosNode.table.identifier = tosNode.alias;\n                    this.storeTableIntoSymbolTable(tosNode.table, tosNode.position);\n                }\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    storeTableIntoSymbolTable(table: Table, position: TextPosition, alias?: string) {\n        let symbolTable = this.getCurrentSymbolTable();\n        symbolTable.storeSymbol({\n            identifier: alias == null ? table.identifier.toLowerCase() : alias.toLowerCase(),\n            posOfDefinition: position,\n            table: table,\n            referencedOnPositions: []\n        });\n        for (let column of table.columns) {\n            symbolTable.storeSymbol({\n                identifier: column.identifier.toLowerCase(),\n                posOfDefinition: null,\n                column: column,\n                tableAlias: alias,\n                referencedOnPositions: []\n            });\n        }\n    }\n\n    resolveTerm(node: TermNode): SQLType {\n        if (node == null) return null;\n\n        switch (node.type) {\n            case TokenType.binaryOp:\n                if ([TokenType.keywordIn, TokenType.keywordNotIn].indexOf(node.operator) >= 0) {\n                    return this.resolveNotIn(node);\n                }\n\n                let typeLeft = this.resolveTerm(node.firstOperand);\n                let typeRight = this.resolveTerm(node.secondOperand);\n                if (typeLeft != null && typeRight != null) {\n                    let resultType = typeLeft.getBinaryResultType(node.operator, typeRight);\n                    if (resultType == null) {\n                        this.pushError(\"Der Operator \" + TokenTypeReadable[node.operator] + \" ist für die Datentypen \" + typeLeft.toString() + \" und \" + typeRight.toString() + \" nicht definiert.\", \"error\", node.position);\n                    }\n                    return resultType;\n                } else {\n                    return null;\n                }\n                break;\n            case TokenType.unaryOp:\n                let operandType = this.resolveTerm(node.operand);\n                if (operandType != null) {\n                    let resultType1 = operandType.getUnaryResultType(node.operator);\n                    if (resultType1 == null) {\n                        this.pushError(\"Der Operator \" + TokenTypeReadable[node.operator] + \" ist für einen Operanden des Datentyps \" + operandType.toString() + \" nicht definiert.\", \"error\", node.position);\n                    }\n                    return resultType1;\n                } else {\n                    return null;\n                }\n                break;\n            case TokenType.callMethod:\n                return this.resolveMethodCall(node);\n                break;\n            //    ConstantNode | IdentifierNode | DotNode | SelectNode | BracketsNode | StarAttributeNode | SelectNode | ListNode;\n\n            case TokenType.constantNode:\n                node.sqlType = SQLBaseType.fromConstantType(node.constantType);\n                return node.sqlType;\n                break;\n            case TokenType.identifier:\n                return this.resolveIdentifier(node);\n                break;\n            case TokenType.dot:\n                return this.resolveDot(node);\n                break;\n            case TokenType.keywordSelect:\n                let selectTable = this.resolveSelect(node);\n                if (selectTable.columns.length != 1) {\n                    this.pushError(\"Die Ergebnistabelle einer Unterabfrage an dieser Stelle muss genau eine Spalte besitzen.\", \"error\", node.position);\n                    return null;\n                }\n                return selectTable.columns[0].type;\n                break;\n            case TokenType.rightBracket:   // BracketsNode\n                node.sqlType = this.resolveTerm(node.termInsideBrackets);\n                return node.sqlType;\n                break;\n            case TokenType.allColumns:\n                this.pushError(\"Das Zeichen * kann hier nicht verwendet werden.\", \"error\", node.position);\n                break;\n            case TokenType.list:\n                this.pushError(\"Eine Liste wird hier nicht erwartet.\", \"error\", node.position);\n                break;\n            default:\n                break;\n        }\n\n\n\n\n    }\n\n    resolveDot(node: DotNode): SQLType {\n        let tableSymbols = this.getCurrentSymbolTable().findTables(node.identifierLeft.identifier);\n        if (tableSymbols.length == 0) {\n            this.pushError(\"Die Tabelle \" + node.identifierLeft.identifier + \" kann nicht gefunden werden.\", \"error\", node.identifierLeft.position);\n            return null;\n        }\n        if (tableSymbols.length > 1) {\n            this.pushError(\"Der Tabellenbezeichner \" + node.identifierLeft.identifier + \" ist nicht eindeutig.\", \"error\", node.identifierLeft.position);\n            return null;\n        }\n        let table = tableSymbols[0].table;\n\n        let columns = table.columns.filter(c => c.identifier.toLowerCase() == node.identifierRight.identifier.toLowerCase());\n\n        if (columns.length == 0) {\n            this.pushError(\"Die Tabelle \" + node.identifierLeft.identifier + \" hat keine Spalte mit dem Bezeichner \" + node.identifierRight.identifier + \".\", \"error\", node.identifierRight.position);\n            return;\n        }\n\n        if (columns.length > 1) {\n            this.pushError(\"Die Tabelle \" + node.identifierLeft.identifier + \" hat mehrere Spalten mit dem Bezeichner \" + node.identifierRight.identifier + \".\", \"error\", node.identifierRight.position);\n            return;\n        }\n\n        let column = columns[0];\n        node.sqlType = column.type;\n        return column.type;\n\n    }\n\n    resolveIdentifier(node: IdentifierNode): SQLType {\n        let symbols = this.getCurrentSymbolTable().findColumn(node.identifier);\n        if (symbols.length == 0) {\n            this.pushError(\"Der Bezeichner \" + node.identifier + \" ist an dieser Stelle nicht bekannt.\", \"error\", node.position);\n            return null;\n        }\n        if (symbols.length > 1) {\n            this.pushError(\"Der Bezeichner \" + node.identifier + \" ist nicht eindeutig.\", \"error\", node.position);\n            return null;\n        }\n\n        let symbol = symbols[0];\n        node.sqlType = symbol.column.type;\n        return symbol.column.type;\n    }\n\n    resolveMethodCall(node: MethodcallNode): SQLType {\n\n        let methodStore = SQLMethodStore.getInstance();\n        let methods = methodStore.getMethods(node.identifier);\n\n        methods = methods.filter(m => m.parameters.length == node.operands.length);\n        if (node.operands.length == 1 && node.operands[0].type == TokenType.allColumns) {\n            methods = methods.filter(m => m.acceptsStarParameter);\n            node.sqlType = methods[0].returnType;\n            return node.sqlType;\n        }\n\n        if (methods.length == 0) {\n            this.pushError(\"Es gibt keine passende Methode mit dem Bezeichner '\" + node.identifier + \"'.\", \"error\", node.position);\n            return null;\n        }\n\n        for (let operand of node.operands) {\n            if (this.resolveTerm(operand) == null) {\n                node.sqlType = methods[0].returnType;\n                return node.sqlType;\n            }\n        }\n\n        for (let method of methods) {\n            let found = true;\n            for (let i = 0; i < method.parameters.length; i++) {\n                let methodParameter = method.parameters[i];\n                let operand = node.operands[i];\n                if (!operand.sqlType.canCastTo(methodParameter.type)) {\n                    found = false;\n                    break;\n                }\n            }\n            if (found) {\n                node.sqlType = method.returnType;\n                return node.sqlType;\n            }\n        }\n\n        this.pushError(\"Es gibt keine passende Methode mit dem Bezeichner '\" + node.identifier + \"'.\", \"error\", node.position);\n        return null;\n\n    }\n\n    resolveNotIn(node: BinaryOpNode): SQLType {\n\n        if (node.firstOperand == null || node.secondOperand == null) return null;\n\n        let operatorString = TokenTypeReadable[node.operator];\n\n        this.resolveTerm(node.firstOperand);\n        let leftType = node.firstOperand.sqlType;\n        if (leftType != null) {\n            if (node.secondOperand.type == TokenType.keywordSelect) {\n                let selectNode = node.secondOperand;\n                if (selectNode.columnList.length != 1) {\n                    this.pushError(\"Wenn rechts vom Operator '\" + operatorString + \"' eine Unterabfrage steht, muss die Ergebnistabelle dieser Unterabfrage genau eine Spalte haben.\", \"error\", selectNode.position);\n                }\n                this.resolveSelect(selectNode);\n                let pType = selectNode.columnList[0].term.sqlType;\n                if (!pType.canCastTo(leftType)) {\n                    this.pushError(\"Der Datentyp der Ergebnisspalte der Unterabfrage ist \" + pType.toString() + \". Dieser kann nicht in den Datentyp \" + leftType.toString() + \" umgewandelt werden.\", \"error\", selectNode.position);\n                }\n            } else if (node.secondOperand.type == TokenType.list) {\n                let listNode = node.secondOperand;\n                for (let element of listNode.elements) {\n                    let elementType = SQLBaseType.fromConstantType(element.constantType);\n                    element.sqlType = elementType;\n                    if (!elementType.canCastTo(leftType)) {\n                        this.pushError(\"Der Datentyp des Listenelements \" + element.constant + \" ist \" + elementType.toString() + \". Er kann nicht in den Datentype \" + leftType.toString() + \" des Operanden auf der linken Seite des Operators '\" + operatorString + \"' umgewandelt werden.\", \"error\", element.position);\n                    }\n                }\n            } else {\n                this.pushError(\"Der rechte Operand der Operatoren 'in' und 'not in' muss eine Unterabfrage oder eine Liste sein.\", \"error\", node.secondOperand.position);\n            }\n\n        }\n\n        return SQLBaseType.getBaseType(\"boolean\");\n    }\n\n    resolveInsert(astNode: InsertNode) {\n\n        let table: Table = null;\n        let symbolTable = this.pushNewSymbolTable(astNode.position, astNode.endPosition);\n        if (astNode.table != null) {\n            astNode.table.table = this.tables.find(t => t.identifier.toLowerCase() == astNode.table.identifier.toLocaleLowerCase());\n            if (astNode.table.table == null) {\n                this.pushError(\"Die Tabelle \" + astNode.table.identifier + \" gibt es nicht.\", \"error\", astNode.table.position);\n            } else {\n                table = astNode.table.table;\n                symbolTable.storeTableSymbols(table);\n            }\n        }\n\n        let tableCompletionTo = astNode.endPosition;\n        if (astNode.valuesPosition != null) tableCompletionTo = astNode.valuesPosition;\n        if (astNode.columnsPosition != null) tableCompletionTo = astNode.columnsPosition;\n\n        this.module.addCompletionHint(astNode.position, tableCompletionTo, false, true, [\"into\", \"values\"]);\n\n        if (table != null) {\n            this.module.addCompletionHint(tableCompletionTo, astNode.valuesPosition == null ? astNode.endPosition : astNode.valuesPosition, true, false, [\"values\"]);\n        }\n\n        let tableSymbolTable = this.pushNewSymbolTable(astNode.position, tableCompletionTo);\n        tableSymbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        let columns: Column[] = [];\n        // Parse column list\n        if (astNode.columnList.length == 0) {\n            if (table != null) {\n                columns = table.columns;\n            }\n        } else {\n            if (table != null) {\n                for (let columnNode of astNode.columnList) {\n                    let column = table.columns.find(c => c.identifier.toLowerCase() == columnNode.identifier.toLowerCase());\n                    if (column == null) {\n                        this.pushError(\"Die Tabelle \" + table.identifier + \" besitzt keine Spalte mit dem Bezeichner \" + columnNode.identifier + \".\", \"error\", columnNode.position);\n                    } else {\n                        columns.push(column);\n                    }\n                }\n            }\n        }\n\n        if (columns.length > 0) {\n            // Parse value lists\n            for (let valueList of astNode.values) {\n                if (valueList.length != columns.length && valueList.length > 0) {\n                    this.pushError(\"Erwartet werden \" + columns.length + \" Elemente, hier stehen aber \" + valueList.length + \" Elemente in der Liste.\", \"error\", valueList[0].position);\n                } else {\n                    for (let i = 0; i < valueList.length; i++) {\n                        let value = valueList[i];\n                        let column = columns[i];\n                        value.sqlType = SQLBaseType.fromConstantType(value.constantType);\n                        // constantType == 40 means: null\n                        // TODO: check if column is nullable!\n                        let destType = column.type.toString().toLocaleLowerCase();\n                        if (value.constantType == TokenType.keywordNull) {\n                            if (!column.isNullable || column.notNull) {\n                                this.pushError(\"Die Spalte \" + column.identifier + \" ist nicht nullable, daher kann null hier nicht eingefügt werden.\", \"error\", value.position);\n                            }\n                        } else if (!value.sqlType.canCastTo(column.type)) {\n                            let error: string = \"Der Wert \" + value.constant + \" vom Datentyp \" + value.sqlType.toString() + \" kann nicht in den Datentyp \" + column.type.toString() + \" der Spalte \" + column.identifier + \" umgewandelt werden.\";\n\n                            if(destType == \"date\") error += \"<br><b>Tipp: </b>Datumswerte haben die Form 'yyyy-mm-dd', also z.B. '2022-06-15'.\";\n                            if(destType == \"datetime\" || destType == \"timestamp\") error += \"<br><b>Tipp: </b>Timestamps haben die Form 'yyyy-mm-dd hh:min:ss', also z.B. '2022-06-15 07:56:22'.\";\n\n                            this.pushError(error, \"error\", value.position);\n                        } else if(destType == \"date\"){\n                            if(!isDate(value.constant)){\n                                let error: string = `'${value.constant}' ist kein date-Wert.<br><b>Tipp: </b>Datumswerte haben die Form 'yyyy-mm-dd', also z.B. '2022-06-15'.`;\n                                this.pushError(error, \"error\", value.position);\n                            }\n                        } else if(destType == \"datetime\" || destType == \"timestamp\"){\n                            if(!isDateTime(value.constant)){\n                                let error: string = `'${value.constant}' ist kein ${destType}-Wert.<br><b>Tipp: </b>Timestamps haben die Form 'yyyy-mm-dd hh:min:ss', also z.B. '2022-06-15 07:56:22'.`;\n                                this.pushError(error, \"error\", value.position);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        this.symbolTableStack.pop();\n\n    }\n\n\n\n}\n\n","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { SymbolResolver } from \"./parser/SymbolResolver.js\";\r\n\r\nexport enum CompilerStatus {\r\n    compiling, error, compiledButNothingToRun, readyToRun\r\n}\r\n\r\nexport class Compiler {\r\n\r\n    compilerStatus: CompilerStatus = CompilerStatus.compiledButNothingToRun;\r\n\r\n    atLeastOneModuleIsStartable: boolean;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    compile(moduleStore: ModuleStore): Error[] {\r\n\r\n        this.compilerStatus = CompilerStatus.compiling;\r\n\r\n        let t0 = performance.now();\r\n\r\n        let lexer = new Lexer();\r\n\r\n        // 1st pass: lexing\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.file.dirty = false;\r\n            m.clear();\r\n\r\n            let lexed = lexer.lex(m.getProgramTextFromMonacoModel());\r\n            m.errors[0] = lexed.errors;\r\n            m.tokenList = lexed.tokens;\r\n            m.bracketError = lexed.bracketError;\r\n            if(m.file.name == this.main.getCurrentlyEditedModule().file.name){\r\n                if(this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(lexed.bracketError);\r\n            }\r\n        }\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        this.main.getSemicolonAngel().startRegistering();\r\n\r\n        let parser: Parser = new Parser();\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            parser.parse(m);\r\n        }\r\n        \r\n        // 3rd pass: check symbols and types\r\n        let databaseTool = this.main.getDatabaseTool();\r\n        let symbolResolver: SymbolResolver = new SymbolResolver(databaseTool);\r\n\r\n        for(let m of moduleStore.getModules(false)){\r\n            symbolResolver.start(m);\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        let message = \"Compiled in \" + dt + \" ms.\";\r\n\r\n        this.main.getCurrentWorkspace().compilerMessage = message;\r\n\r\n        this.main.getSemicolonAngel().healSemicolons();\r\n\r\n        this.compilerStatus = CompilerStatus.readyToRun;\r\n\r\n        return null;\r\n    }\r\n\r\n}","import { FileData } from \"../../communication/Data.js\";\r\nimport { AccordionElement } from \"../../main/gui/Accordion.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenType, TextPositionWithoutLength } from \"../lexer/Token.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { ASTNode } from \"./AST.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\nimport { stringToDate } from \"../../tools/StringTools.js\";\r\nimport { SQLStatement } from \"./Parser.js\";\r\n\r\n\r\nexport type CompletionHint = {\r\n    fromLine: number,\r\n    fromColumn: number,\r\n    toLine: number, \r\n    toColumn: number,\r\n    hintColumns: boolean,\r\n    hintColumnsOfTable?: string,\r\n    hintTables: boolean,\r\n    hintKeywords: string[],\r\n    dontHint?: string[],\r\n    praefix?: string,\r\n    suffix?: string\r\n}\r\n\r\nexport type File = {\r\n    name: string,\r\n    id?: number,\r\n    text: string,\r\n\r\n    text_before_revision: string,\r\n    submitted_date: string,\r\n    student_edited_after_revision: boolean,\r\n\r\n    dirty: boolean,\r\n    saved: boolean,\r\n    version: number,\r\n    panelElement?: AccordionElement\r\n\r\n}\r\n\r\nexport type IdentifierPosition = {\r\n    position: TextPosition,\r\n    element: any;\r\n}\r\n\r\nexport type MethodCallPosition = {\r\n    identifierPosition: TextPosition,\r\n    possibleMethods: any[] | string, // string for print, println, ...\r\n    commaPositions: TextPosition[],\r\n    rightBracketPosition: TextPosition\r\n}\r\n\r\nexport class Module {\r\n    file: File;\r\n    static maxUriNumber: number = 0;\r\n    uri: monaco.Uri;\r\n    model: monaco.editor.ITextModel;\r\n    oldErrorDecorations: string[] = [];\r\n    lastSavedVersionId: number;\r\n    editorState: monaco.editor.ICodeEditorViewState;\r\n\r\n    errors: Error[][] = [[], [], [], []]; // 1st pass, 2nd pass, 3rd pass\r\n\r\n    // 1st pass: Lexer\r\n    tokenList: Token[];\r\n\r\n    // 2nd pass: ASTParser\r\n    sqlStatements: SQLStatement[];\r\n    mainSymbolTable: SymbolTable;\r\n\r\n\r\n    identifierPositions: { [line: number]: IdentifierPosition[] } = {};\r\n    methodCallPositions: { [line: number]: MethodCallPosition[] } = {};\r\n\r\n    static uriMap: { [name: string]: number } = {};\r\n    bracketError: string;\r\n\r\n    completionHints: Map<number, CompletionHint[]> = new Map(); // Map from line numbers to hints\r\n\r\n    constructor(file: File, public main: MainBase) {\r\n        if (file == null || this.main == null) return; // used by AdhocCompiler and ApiDoc\r\n\r\n        this.file = file;\r\n        // this.uri = monaco.Uri.from({ path: '/file' + (Module.maxUriNumber++) + '.learnJava', scheme: 'file' });\r\n        let path = file.name;\r\n\r\n        let uriCounter = Module.uriMap[path];\r\n        if (uriCounter == null) {\r\n            uriCounter = 0;\r\n        } else {\r\n            uriCounter++;\r\n        }\r\n        Module.uriMap[path] = uriCounter;\r\n\r\n        if (uriCounter > 0) path += \" (\" + uriCounter + \")\";\r\n        this.uri = monaco.Uri.from({ path: path, scheme: 'inmemory' });\r\n        this.model = monaco.editor.createModel(file.text, \"vscSQL\", this.uri);\r\n        this.model.updateOptions({ tabSize: 3 });\r\n\r\n        this.lastSavedVersionId = this.model.getAlternativeVersionId();\r\n\r\n        let that = this;\r\n\r\n        this.model.onDidChangeContent(() => {\r\n            let versionId = that.model.getAlternativeVersionId();\r\n\r\n            if (versionId != that.lastSavedVersionId) {\r\n                that.file.dirty = true;\r\n                that.file.saved = false;\r\n                that.lastSavedVersionId = versionId;\r\n            }\r\n\r\n            if(!that.main.isEmbedded()){\r\n                let main1: Main = <Main>main;\r\n                if (main1.workspacesOwnerId != main1.user.id) {\r\n                    if (that.file.text_before_revision == null || that.file.student_edited_after_revision) {\r\n                        that.file.student_edited_after_revision = false;\r\n                        that.file.text_before_revision = that.file.text;\r\n                        that.file.saved = false;\r\n                        main1.networkManager.sendUpdates(null, false);\r\n                        main1.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n                        main1.projectExplorer.renderHomeworkButton(that.file);\r\n                    }\r\n                } else {\r\n                    that.file.student_edited_after_revision = true;\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    addCompletionHint(fromPosition: TextPosition, toPosition: TextPosition, hintColumns: boolean|string, hintTables: boolean, \r\n        hintKeywords: string[], dontHint?: string[], praefix: string = \"\", suffix: string = \"\"){\r\n        let ch: CompletionHint = {\r\n            fromColumn: fromPosition.column,\r\n            fromLine: fromPosition.line,\r\n            toColumn: toPosition.column,\r\n            toLine: toPosition.line,\r\n            hintColumns: (typeof hintColumns == \"boolean\")? hintColumns : true, \r\n            hintColumnsOfTable: (typeof hintColumns == \"string\")? hintColumns : null,\r\n            hintTables: hintTables,\r\n            hintKeywords: hintKeywords,\r\n            dontHint: dontHint,\r\n            praefix: praefix,\r\n            suffix: suffix\r\n        }\r\n\r\n        for(let i = ch.fromLine; i <= ch.toLine; i++){\r\n            let chList = this.completionHints.get(i);\r\n            if(chList == null){\r\n                chList = [];\r\n                this.completionHints.set(i, chList);\r\n            }\r\n            chList.push(ch);\r\n        }\r\n    }\r\n\r\n    getSQLSTatementsAtSelection(sel: monaco.Selection): SQLStatement[] {\r\n        let selStart = {line: sel.startLineNumber, column: sel.startColumn};\r\n        let selEnd = {line: sel.endLineNumber, column: sel.endColumn};\r\n\r\n        if(this.sqlStatements == null){\r\n            return [];\r\n        }\r\n\r\n        return this.sqlStatements.filter(stmt => {\r\n            return !(this.compare(stmt.to, selStart) < 0 || this.compare(stmt.from, selEnd) > 0);\r\n        })\r\n\r\n    }\r\n\r\n    /**\r\n     * returns 1 if a > b, 0 if a == b and -1 if a < b\r\n     * @param a \r\n     * @param b \r\n     */\r\n    compare(a: {line: number, column: number}, b: {line: number, column: number}): number{\r\n        if(a.line > b.line) return 1;\r\n        if(a.line < b.line) return -1;\r\n        if(a.column > b.column) return 1;\r\n        if(a.column < b.column) return -1;\r\n        return 0;\r\n    }\r\n\r\n\r\n\r\n    getSQLStatementAtPosition(p: { lineNumber: number, column: number }): SQLStatement {\r\n\r\n        return this.sqlStatements.find(statement => {\r\n            if(statement.from.line > p.lineNumber ) return false;\r\n            if(statement.from.line == p.lineNumber && statement.from.column > p.column) return false;\r\n            if(statement.to.line < p.lineNumber) return false;\r\n            if(statement.to.line == p.lineNumber && statement.to.column < p.column) return false;\r\n            return true;\r\n        });        \r\n\r\n    }\r\n\r\n\r\n    getCompletionHint(line: number, column: number){\r\n        let chList = this.completionHints.get(line);\r\n        \r\n        if(chList == null || chList.length == 0){\r\n            return null;\r\n        }\r\n\r\n        let pos = line * 1000 + column;\r\n        chList = chList.filter(ch => pos >= ch.fromLine * 1000 + ch.fromColumn && pos <= ch.toLine * 1000 + ch.toColumn);\r\n        if(chList.length == 0){\r\n            return;\r\n        }\r\n\r\n        // take CompletionHint with smallest range:\r\n        let bestCh: CompletionHint = chList[0];\r\n        let bestRangeLength  = (bestCh.toLine - bestCh.fromLine)*1000 + (bestCh.toColumn - bestCh.fromColumn);\r\n\r\n        for(let i = 1; i < chList.length; i++){\r\n            let ch = chList[i];\r\n            let rangeLength = (ch.toLine - ch.fromLine) * 1000 + (ch.toColumn - ch.fromColumn);\r\n\r\n            if(rangeLength < bestRangeLength){\r\n                bestCh = ch;\r\n                bestRangeLength = rangeLength;\r\n            }\r\n\r\n        }\r\n\r\n        return bestCh;\r\n    }\r\n\r\n\r\n    static restoreFromData(f: FileData, main: MainBase): Module {\r\n\r\n        let f1: File = {\r\n            name: f.name,\r\n            text: f.text,\r\n            text_before_revision: f.text_before_revision,\r\n            submitted_date: f.submitted_date,\r\n            student_edited_after_revision: false,\r\n            dirty: true,\r\n            saved: true,\r\n            version: f.version,\r\n            id: f.id\r\n        }\r\n\r\n        let m: Module = new Module(f1, main);\r\n\r\n        return m;\r\n\r\n    }\r\n\r\n    getFileData(workspace: Workspace): FileData {\r\n        let file = this.file;\r\n        let fd: FileData = {\r\n            id: file.id,\r\n            name: file.name,\r\n            text: file.text,\r\n            text_before_revision: file.text_before_revision,\r\n            submitted_date: file.submitted_date,\r\n            student_edited_after_revision: file.student_edited_after_revision,\r\n            version: file.version,\r\n            workspace_id: workspace.id,\r\n            forceUpdate: false,\r\n            file_type: 11\r\n        }\r\n\r\n        return fd;\r\n    }\r\n\r\n\r\n    findSymbolTableAtPosition(line: number, column: number) {\r\n        if (this.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (line > this.mainSymbolTable.positionTo.line ||\r\n            line == this.mainSymbolTable.positionTo.line && column > this.mainSymbolTable.positionTo.column\r\n        ) {\r\n            line = this.mainSymbolTable.positionTo.line;\r\n            column = this.mainSymbolTable.positionTo.column - 1;\r\n        }\r\n\r\n        return this.mainSymbolTable.findTableAtPosition(line, column);\r\n    }\r\n\r\n    getErrorCount(): number {\r\n\r\n        let ec = 0;\r\n        for (let el of this.errors) {\r\n            el.forEach(error => ec += error.level == \"error\" ? 1 : 0);\r\n            // ec += el.length;\r\n        }\r\n\r\n        return ec;\r\n    }\r\n\r\n    getProgramTextFromMonacoModel(): string {\r\n        return this.model.getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n    }\r\n\r\n\r\n    addIdentifierPosition(position: TextPosition, element: any) {\r\n        let positionList: IdentifierPosition[] = this.identifierPositions[position.line];\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            this.identifierPositions[position.line] = positionList;\r\n        }\r\n        positionList.push({\r\n            position: position,\r\n            element: element\r\n        });\r\n    }\r\n\r\n    getElementAtPosition(line: number, column: number): any {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let bestFoundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column < p.position.column + p.position.length) {\r\n\r\n                if (p.position.length > 0) {\r\n                    if (bestFoundPosition == null) {\r\n                        bestFoundPosition = p;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bestFoundPosition == null ? null : <any>bestFoundPosition.element;\r\n    }\r\n\r\n    copy(): Module {\r\n        let m = new Module(this.file, this.main);\r\n        m.model = this.model;\r\n        m.mainSymbolTable = this.mainSymbolTable;\r\n        this.mainSymbolTable = null;\r\n\r\n        this.file.dirty = true;\r\n\r\n        return m;\r\n    }\r\n\r\n    clear() {\r\n\r\n        this.identifierPositions = {};\r\n\r\n        if (this.file != null && this.file.dirty) {\r\n            // Lexer\r\n            this.tokenList = null;\r\n            this.errors[0] = [];\r\n\r\n            // AST Parser\r\n            this.errors[1] = [];\r\n\r\n\r\n        }\r\n\r\n        // type resolver\r\n        this.errors[2] = [];\r\n\r\n        // Code generator\r\n        this.errors[3] = [];\r\n        this.mainSymbolTable = new SymbolTable(null, { line: 1, column: 1, length: 1 }, { line: 100000, column: 1, length: 0 });\r\n\r\n        this.methodCallPositions = {};\r\n\r\n    }\r\n\r\n    hasErrors() {\r\n\r\n        for (let el of this.errors) {\r\n            if (el.find(error => error.level == \"error\")) {\r\n                return true;\r\n            }\r\n            // if (el.length > 0) {\r\n            //     return true;\r\n            // }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getSortedAndFilteredErrors(): Error[] {\r\n\r\n        let list: Error[] = [];\r\n\r\n        for (let el of this.errors) {\r\n            list = list.concat(el);\r\n        }\r\n\r\n        list.sort((a, b) => {\r\n            if (a.position.line > b.position.line) {\r\n                return 1;\r\n            }\r\n            if (b.position.line > a.position.line) {\r\n                return -1;\r\n            }\r\n            if (a.position.column >= b.position.column) {\r\n                return 1;\r\n            }\r\n            return -1;\r\n        });\r\n\r\n        for (let i = 0; i < list.length - 1; i++) {\r\n            let e1 = list[i];\r\n            let e2 = list[i + 1];\r\n            if (e1.position.line == e2.position.line && e1.position.column + 10 > e2.position.column) {\r\n                if (this.errorLevelCompare(e1.level, e2.level) == 1) {\r\n                    list.splice(i + 1, 1);\r\n                } else {\r\n                    list.splice(i, 1);\r\n                }\r\n                i--;\r\n            }\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    errorLevelCompare(level1: ErrorLevel, level2: ErrorLevel): number {\r\n        if (level1 == \"error\") return 1;\r\n        if (level2 == \"error\") return 2;\r\n        if (level1 == \"warning\") return 1;\r\n        if (level2 == \"warning\") return 2;\r\n        return 1;\r\n    }\r\n}\r\n\r\n\r\nexport class ModuleStore {\r\n\r\n    private modules: Module[] = [];\r\n    private moduleMap: Map<string, Module> = new Map();\r\n\r\n    dirty: boolean = false;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    findModuleById(module_id: number): Module {\r\n        for (let module of this.modules) {\r\n            if (module.file.id == module_id) return module;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    copy(): ModuleStore {\r\n        let ms: ModuleStore = new ModuleStore(this.main);\r\n        for (let m of this.modules) {\r\n            ms.putModule(m.copy());\r\n        }\r\n        return ms;\r\n    }\r\n\r\n    findModuleByFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                return m;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        for (let m of this.modules) {\r\n            if (m.hasErrors()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getFirstModule(): Module {\r\n        if (this.modules.length > 0) {\r\n            for (let mo of this.modules) {\r\n                return mo;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    isDirty(): boolean {\r\n\r\n        if (this.dirty) {\r\n            this.dirty = false;\r\n            return true;\r\n        }\r\n\r\n        let dirty = false;\r\n        for (let m of this.modules) {\r\n            if (m.file.dirty) {\r\n                dirty = true;\r\n                break;\r\n            }\r\n        }\r\n        return dirty;\r\n    }\r\n\r\n\r\n    getModules(includeSystemModules: boolean, excludedModuleName?: String): Module[] {\r\n        let ret = [];\r\n        for (let m of this.modules) {\r\n            if (m.file.name != excludedModuleName) {\r\n                ret.push(m);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    putModule(module: Module) {\r\n        this.modules.push(module);\r\n        this.moduleMap[module.file.name] = module;\r\n    }\r\n\r\n    removeModuleWithFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                this.removeModule(m);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n\r\n        if (this.modules.indexOf(module) < 0) return;\r\n\r\n        this.modules.splice(this.modules.indexOf(module), 1);\r\n        this.moduleMap[module.file.name] = undefined;\r\n        this.dirty = true;\r\n    }\r\n\r\n    getModule(moduleName: string): Module {\r\n        return this.moduleMap[moduleName];\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { escapeHtml } from \"./StringTools.js\";\r\n\r\nexport function makeEditable(elementWithText: JQuery<HTMLElement>,\r\n    elementToReplace: JQuery<HTMLElement>,\r\n    renameDoneCallback: (newContent: string) => void, selectionRange: { start: number, end: number } = null) {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    if (elementToReplace == null) {\r\n        elementToReplace = elementWithText;\r\n    }\r\n\r\n    let $input = jQuery('<input type=\"text\" class=\"jo_inplaceeditor\" spellcheck=\"false\">');\r\n    $input.css({\r\n        width: elementToReplace.css('width'),\r\n        height: elementToReplace.css('height'),\r\n        color: elementToReplace.css('color'),\r\n        position: elementToReplace.css('position'),\r\n        \"background-color\": elementToReplace.css('background-color'),\r\n        \"font-size\": elementToReplace.css('font-size'),\r\n        \"font-weight\": elementToReplace.css('font-weight'),\r\n        \"box-sizing\": \"border-box\"\r\n    });\r\n    $input.val(elementWithText.text());\r\n    $input.on(mousePointer + \"down\", (e) => { e.stopPropagation(); })\r\n\r\n    if (selectionRange != null) {\r\n        (<HTMLInputElement>$input[0]).setSelectionRange(selectionRange.start, selectionRange.end);\r\n    }\r\n\r\n    elementToReplace.after($input);\r\n    elementToReplace.hide();\r\n    setTimeout(() => {\r\n        $input.focus();\r\n    }, 300);\r\n\r\n    $input.on(\"keydown.me\", (ev) => {\r\n        if (ev.key == \"Enter\" || ev.key == \"Escape\") {\r\n            $input.off(\"keydown.me\");\r\n            $input.off(\"focusout.me\");\r\n            $input.remove();\r\n            elementToReplace.show();\r\n            let newValue = escapeHtml(<string>$input.val());\r\n            renameDoneCallback(newValue);\r\n            return;\r\n        }\r\n    });\r\n\r\n    $input.on(\"focusout.me\", (ev) => {\r\n        $input.off(\"keydown.me\");\r\n        $input.off(\"focusout.me\");\r\n        $input.remove();\r\n        elementToReplace.show();\r\n        let newValue = escapeHtml(<string>$input.val());\r\n        renameDoneCallback(newValue);\r\n        return;\r\n    });\r\n\r\n}\r\n\r\nexport type ContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: () => void;\r\n    link?: string;\r\n    subMenu?: ContextMenuItem[]\r\n};\r\n\r\nexport function openContextMenu(items: ContextMenuItem[], x: number, y: number): JQuery<HTMLElement> {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    let $contextMenu = jQuery('<div class=\"jo_contextmenu\"></div>');\r\n\r\n    let $openSubMenu: JQuery<HTMLElement> = null;\r\n    let parentMenuItem: ContextMenuItem = null;\r\n\r\n    for (let mi of items) {\r\n        let caption: string = mi.caption;\r\n        if (mi.link != null) {\r\n            caption = `<a href=\"${mi.link}\" target=\"_blank\" class=\"jo_menulink\">${mi.caption}</a>`;\r\n        }\r\n        let $item = jQuery('<div>' + caption + (mi.subMenu != null ? '<span style=\"float: right\"> &nbsp; &nbsp; &gt;</span>' : \"\") + '</div>');\r\n        if (mi.color != null) {\r\n            $item.css('color', mi.color);\r\n        }\r\n        if (mi.link == null) {\r\n            $item.on(mousePointer + 'up.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n                jQuery('.jo_contextmenu').remove();\r\n                jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n                jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n                jQuery(document).off(\"keydown.contextmenu\");\r\n                mi.callback();\r\n            });\r\n            $item.on(mousePointer + 'down.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n            });\r\n        } else {\r\n            let $link = $item.find('a');\r\n            $link.on(mousePointer + \"up\", (event) => {\r\n                event.stopPropagation();\r\n                setTimeout(() => {\r\n                    $item.hide();\r\n                }, 500);\r\n            })\r\n            $link.on(mousePointer + \"down\", (event) => {\r\n                event.stopPropagation();\r\n            })\r\n\r\n        }\r\n\r\n        $item.on(mousePointer + 'move.contextmenu', () => {\r\n            if (mi != parentMenuItem && $openSubMenu != null) {\r\n                $openSubMenu.remove();\r\n                parentMenuItem = null;\r\n                $openSubMenu = null;\r\n            }\r\n            if (mi.subMenu != null) {\r\n                $openSubMenu = openContextMenu(mi.subMenu, $item.offset().left + $item.width(), $item.offset().top);\r\n            }\r\n        });\r\n\r\n        $contextMenu.append($item);\r\n    }\r\n\r\n    jQuery(document).on(mousePointer + \"down.contextmenu\", (e) => {\r\n        jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n        jQuery(document).off(\"keydown.contextmenu\");\r\n        jQuery('.jo_contextmenu').remove();\r\n    })\r\n\r\n    jQuery(document).on(\"keydown.contextmenu\", (ev) => {\r\n        if (ev.key == \"Escape\") {\r\n            jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n            jQuery(document).off(\"keydown.contextmenu\");\r\n            jQuery('.jo_contextmenu').remove();\r\n        }\r\n    });\r\n\r\n    let leftRight = x > window.innerWidth * 0.8 ? \"right\" : \"left\";\r\n    let xp = x > window.innerWidth * 0.8 ? window.innerWidth - x : x;\r\n    let topBottom = y > window.innerHeight * 0.8 ? \"bottom\" : \"top\";\r\n    let yp = y > window.innerHeight * 0.8 ? window.innerHeight - y : y;\r\n\r\n    let css = {};\r\n    css[leftRight] = xp + \"px\";\r\n    css[topBottom] = yp + \"px\";\r\n\r\n    $contextMenu.css(css);\r\n\r\n\r\n    jQuery(\"body\").append($contextMenu);\r\n    $contextMenu.show();\r\n\r\n    return $contextMenu;\r\n}\r\n\r\nexport function makeTabs(tabDiv: JQuery<HTMLElement>) {\r\n    let headings = tabDiv.find('.jo_tabheadings>div').not('.jo_noHeading');\r\n    let tabs = tabDiv.find('.jo_tabs>div');\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    headings.on(mousePointer + \"down\", (ev) => {\r\n        let target = jQuery(ev.target);\r\n        headings.removeClass('jo_active');\r\n        target.addClass('jo_active');\r\n        let tab = tabDiv.find('.' + target.data('target'));\r\n        tabs.removeClass('jo_active');\r\n        tabs.trigger('myhide');\r\n        tab.addClass('jo_active');\r\n        tab.trigger('myshow');\r\n    });\r\n\r\n}\r\n\r\nexport function convertPxToNumber(pxString: string): number {\r\n    pxString = pxString.replace('px', '').trim();\r\n    return Number.parseInt(pxString);\r\n}\r\n\r\nexport function makeDiv(id: string, klass: string = \"\", text: string = \"\", css?: { [id: string]: any }): JQuery<HTMLDivElement> {\r\n\r\n    let s = \"\";\r\n    if (id != null && id != \"\") s += ` id=\"${id}\"`;\r\n\r\n    if (klass != null && klass != \"\") s += ` class=\"${klass}\"`;\r\n\r\n    let div = jQuery(`<div${s}></div>`);\r\n\r\n    if (css != null) {\r\n        div.css(css);\r\n    }\r\n\r\n    if (text != null && text != \"\") {\r\n        div.text(text);\r\n    }\r\n\r\n    return <any>div;\r\n\r\n}\r\n\r\nexport type SelectItem = {\r\n    value: string | number,\r\n    object: any,\r\n    caption: string\r\n}\r\n\r\nexport function setSelectItems($selectElement: JQuery<HTMLSelectElement>, items: SelectItem[], activeItemValue?: string | number) {\r\n    $selectElement.empty();\r\n    items.forEach(item => {\r\n        let selected: string = (item.value == activeItemValue) ? ' selected=\"selected\"' : \"\";\r\n        let element = jQuery(`<option value=${item.value}${selected}>${item.caption}</option>`);\r\n        $selectElement.append(element);\r\n        element.data('object', item.object);\r\n    }\r\n    );\r\n\r\n    $selectElement.data('items', items);\r\n\r\n\r\n}\r\n\r\nexport function getSelectedObject($selectDiv: JQuery<HTMLSelectElement>) {\r\n\r\n    let items: SelectItem[] = $selectDiv.data('items');\r\n\r\n    let selectedValue = $selectDiv.val();\r\n\r\n    return items.find(item => item.value == selectedValue)?.object;\r\n\r\n}\r\n\r\nexport var jo_mouseDetected: boolean = false;\r\nexport function checkIfMousePresent() {\r\n    if (matchMedia('(pointer:fine)').matches) {\r\n        jo_mouseDetected = true;\r\n    }\r\n}\r\n\r\nexport function animateToTransparent($element: JQuery<HTMLElement>, cssProperty: string, startColorRgb: number[], duration: number) {\r\n    let colorPraefix = 'rgba(' + startColorRgb[0] + \", \" + startColorRgb[1] + \", \" + startColorRgb[2] + \", \";\r\n    let value = 1.0;\r\n    let delta = value / (duration / 20);\r\n\r\n    let animate = () => {\r\n        $element.css(cssProperty, colorPraefix + value + \")\");\r\n        value -= delta;\r\n        if (value < 0) {\r\n            $element.css(cssProperty, \"\");\r\n        } else {\r\n            setTimeout(animate, 20);\r\n        }\r\n    }\r\n\r\n    animate();\r\n}\r\n\r\nexport function downloadFile(obj: any, filename: string, isBlob: boolean = false) {\r\n    var blob = isBlob? obj : new Blob([JSON.stringify(obj)], { type: 'text/plain' });\r\n    //@ts-ignore\r\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n        //@ts-ignore\r\n        window.navigator.msSaveOrOpenBlob(blob, filename);\r\n    } else {\r\n        var e = document.createEvent('MouseEvents'),\r\n            a = document.createElement('a');\r\n        a.download = filename;\r\n        a.href = window.URL.createObjectURL(blob);\r\n        a.dataset.downloadurl = ['text/plain', a.download, a.href].join(':');\r\n        //@ts-ignore\r\n        e.initEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\r\n        a.dispatchEvent(e);\r\n        a.remove();\r\n    }\r\n}\r\n\r\n\r\nfunction fallbackCopyTextToClipboard(text) {\r\n    var textArea = document.createElement(\"textarea\");\r\n    textArea.value = text;\r\n\r\n    // Avoid scrolling to bottom\r\n    textArea.style.top = \"0\";\r\n    textArea.style.left = \"0\";\r\n    textArea.style.position = \"fixed\";\r\n\r\n    document.body.appendChild(textArea);\r\n    textArea.focus();\r\n    textArea.select();\r\n\r\n    try {\r\n        var successful = document.execCommand('copy');\r\n    } catch (err) {\r\n        console.error('Fallback: Oops, unable to copy', err);\r\n    }\r\n\r\n    document.body.removeChild(textArea);\r\n}\r\n\r\nexport function copyTextToClipboard(text) {\r\n    if (!navigator.clipboard) {\r\n        fallbackCopyTextToClipboard(text);\r\n        return;\r\n    }\r\n    navigator.clipboard.writeText(text).then(function () {\r\n    }, function (err) {\r\n        console.error('Async: Could not copy text: ', err);\r\n    });\r\n}\r\n","import { UploadTemplateResponse } from \"../communication/Data.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\n\r\nexport class TemplateUploader {\r\n\r\n    uploadCurrentDatabase(workspace_id: number, main: Main, dump: Uint8Array | null, \r\n        reason: \"publishDatabaseAsTemplate\" | \"uploadBaseTemplateForWorkspace\",\r\n        callback: (response: UploadTemplateResponse) => void = () => { }) {\r\n            \r\n        main.waitOverlay.show('Bitte warten, lade Vorlage auf den Server hoch ...');\r\n        if (workspace_id >= 0) {\r\n            let dbTool = main.getDatabaseTool();\r\n            dbTool.export((buffer) => {\r\n                // @ts-ignore\r\n                buffer = pako.deflate(buffer);\r\n                this.uploadIntern(buffer, workspace_id, reason, main, callback);\r\n            }, (error) => {\r\n                alert(\"Fehler beim Exportieren der Datenbank: \" + error)\r\n                main.waitOverlay.hide();\r\n            })\r\n        } else {\r\n            this.uploadIntern(dump, -1, reason, main, callback);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    private uploadIntern(buffer: Uint8Array, workspace_id: number,\r\n        reason: \"publishDatabaseAsTemplate\" | \"uploadBaseTemplateForWorkspace\",\r\n        main: Main, callback: (response: UploadTemplateResponse) => void) {\r\n\r\n        $.ajax({\r\n            type: 'POST',\r\n            async: true,\r\n            contentType: 'application/octet-stream',\r\n            data: buffer,\r\n            processData: false,\r\n            headers: { 'x-workspaceid': \"\" + workspace_id, \"x-reason\": reason },\r\n            url: \"servlet/uploadTemplate\",\r\n            success: function (response: UploadTemplateResponse) {\r\n                main.waitOverlay.hide();\r\n                callback(response);\r\n                return;\r\n\r\n            },\r\n            error: function (jqXHR, message) {\r\n                alert('message');\r\n                main.waitOverlay.hide();\r\n            }\r\n        }\r\n        );\r\n        return buffer;\r\n    }\r\n}","import { CreateWorkspaceData, WorkspaceData } from \"../../communication/Data.js\";\r\nimport { copyTextToClipboard, makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { TemplateUploader } from \"../../tools/TemplateUploader.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\nexport class DatabaseSettingsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private workspace: Workspace) {\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Datenbank-Einstellungen</div>\r\n            <div style=\"width: 100%; margin-left: 10px\">\r\n                <div class=\"jo_ds_settings\" style=\"margin-left: 0px\">\r\n                <div class=\"jo_ds_settings_caption\">Name der Datenbank:</div><div><input class=\"dialog-input jo_databasename\" value=\"Neue Datenbank\"></input></div>\r\n                </div>\r\n\r\n                <div class=\"jo_ds_settings_caption\" style=\"margin-top: 20px\">\r\n                Zugriffscodes für andere Benutzer:\r\n                </div>\r\n                                \r\n                <div>\r\n                    <table class=\"jo_ds_secret_table\">\r\n                    <tr>\r\n                        <td>Nur Lesen:</td><td class=\"jo_ds_secret jo_ds_secret_read\"></td><td id=\"copySecretTdread\"></td><td><button class=\"jo_small_button jo_button_code_read\">Neuen Code generieren</button></td>\r\n                    <tr>\r\n                        <td>Lesen und schreiben:</td><td class=\"jo_ds_secret jo_ds_secret_write\"></td><td id=\"copySecretTdwrite\"></td><td><button class=\"jo_small_button jo_button_code_write\">Neuen Code generieren</button></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Lesen, schreiben und Struktur verändern:</td><td class=\"jo_ds_secret jo_ds_secret_ddl\"></td><td id=\"copySecretTdddl\"></td><td><button class=\"jo_small_button jo_button_code_ddl\">Neuen Code generieren</button></td>\r\n                    </tr>\r\n                    </table>\r\n                </div>\r\n\r\n                <div class=\"jo_ds_settings_caption\" style=\"margin-top: 20px\">\r\n                Beschreibung:\r\n                </div>\r\n                <div>\r\n                <textarea class=\"jo_ds_settings_description\" maxlength=\"5000\"></textarea>\r\n                </div>\r\n\r\n                <div class=\"jo_ds_settings_caption\" style=\"margin-top: 20px\">\r\n                Datenbank freigeben als Vorlage für andere Benutzer:\r\n                </div>\r\n\r\n                <fieldset id=\"jo_ds_publishedTo\">\r\n                    <input type=\"radio\" id=\"b0\" name=\"publishedFilter\" value=\"0\" checked=\"checked\"><label for=\"b0\">Keine Freigabe</label>\r\n                    <input type=\"radio\" id=\"b1\" name=\"publishedFilter\" value=\"1\"><label for=\"b1\">Freigabe für meine Klasse(n)</label>\r\n                    <input type=\"radio\" id=\"b2\" name=\"publishedFilter\" value=\"2\" style=\"visibility: none\"><label id=\"lb2\" for=\"b2\" style=\"visibility: none\">Freigabe für meine Schule</label>\r\n                    <input type=\"radio\" id=\"b3\" name=\"publishedFilter\" value=\"3\" style=\"visibility: none\"><label id=\"lb3\" for=\"b3\" style=\"visibility: none\">Freigabe für alle Schulen</label>\r\n                </fieldset>\r\n\r\n                <div>\r\n                    <input type=\"checkbox\" id=\"jo_upload_db\" name=\"jo_upload_db\">\r\n                    <label for=\"jo_upload_db\">Aktuellen Zustand der Datenbank als Vorlage hochladen</label>\r\n                </div>\r\n            </div>\r\n\r\n\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_save_button\">Speichern</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n\r\n        let that = this;\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { this.showMainWindow(); });\r\n        jQuery('#jo_ds_save_button').on('click', () => { \r\n            this.saveNameAndPublishedTo();\r\n         })\r\n\r\n        this.setValues();\r\n\r\n        [\"read\", \"write\", \"ddl\"].forEach(kind => {\r\n            jQuery('.jo_button_code_' + kind).on('pointerdown', () => {\r\n                that.main.networkManager.setNewSecret(that.workspace.id, kind, (secret) => {\r\n                    jQuery('.jo_ds_secret_'+kind).text(secret);\r\n                })\r\n            })\r\n            let $copyButton = jQuery('<button class=\"jo_small_button jo_copy_secret_button jo_active\">Kopieren</button>')\r\n            jQuery('#copySecretTd' + kind).append($copyButton);\r\n            $copyButton.on('pointerdown', () => {\r\n                copyTextToClipboard(jQuery('.jo_ds_secret_'+kind).text());\r\n            })\r\n        })\r\n\r\n        jQuery('#jo_ds_publishedTo>input').on('change', (e) => {$('#jo_upload_db').prop('checked', !((<HTMLInputElement>jQuery('#b0')[0]).checked))});\r\n\r\n    }\r\n\r\n    saveNameAndPublishedTo(){\r\n        let published_to = 0;\r\n        jQuery('#jo_ds_publishedTo').find('input').each( (n, element) => {\r\n            let $element = jQuery(element);\r\n            //@ts-ignore\r\n            if(<HTMLInputElement>element.checked){\r\n                published_to = Number.parseInt(<string>$element.attr('value'));\r\n            }\r\n        })\r\n\r\n        this.main.networkManager.setNameAndPublishedTo(this.workspace.id, \r\n            <string>jQuery('.jo_databasename').val(), published_to, <string>jQuery('.jo_ds_settings_description').val(),\r\n             () => {\r\n                 if($('#jo_upload_db').prop('checked')){\r\n                    new TemplateUploader().uploadCurrentDatabase(this.workspace.id, this.main, null, \"publishDatabaseAsTemplate\");                    \r\n                 }\r\n                 this.showMainWindow(); \r\n                })\r\n    }\r\n\r\n    setValues(){\r\n        jQuery('.jo_databasename').val(this.workspace.name);\r\n        this.main.networkManager.getDatabaseSettings(this.workspace.id, (response) => {\r\n            [\"read\", \"write\", \"ddl\"].forEach(kind => {\r\n                jQuery('.jo_ds_secret_' + kind).text(response.secrets[kind]);\r\n            });\r\n            if(this.main.user.is_admin){\r\n                jQuery('#b3').css('visibility', 'visible');\r\n                jQuery('#lb3').css('visibility', 'visible');\r\n            }\r\n            if(this.main.user.is_schooladmin){\r\n                jQuery('#b2').css('visibility', 'visible');\r\n                jQuery('#lb2').css('visibility', 'visible');\r\n            }\r\n            // jQuery('#jo_ds_publishedTo input').attr('checked', '');\r\n            jQuery('#b'+response.publishedTo).prop('checked', true);\r\n\r\n            jQuery('#jo_upload_db').prop('checked', response.publishedTo != 0);\r\n\r\n            jQuery('.jo_ds_settings_description').val(this.workspace.database.description);\r\n        })\r\n    }\r\n\r\n    showMainWindow() {\r\n        jQuery('#main').css('visibility', 'visible');\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n    }\r\n\r\n\r\n\r\n}","import { WorkspaceData } from \"../communication/Data.js\";\r\nimport { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { DatabaseSettingsDialog } from \"../main/gui/DatabaseSettingsDialog.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { WDatabase } from \"./WDatabase.js\";\r\n\r\nexport class Workspace {\r\n    \r\n    name: string;\r\n    path: string;\r\n    isFolder: boolean;\r\n    id: number;\r\n    owner_id: number;\r\n\r\n    version: number;\r\n    \r\n    moduleStore: ModuleStore;\r\n    panelElement: AccordionElement;\r\n    currentlyOpenModule: Module;\r\n    saved: boolean = true;\r\n\r\n    compilerMessage: string;\r\n\r\n    databaseId: number;\r\n    database: WDatabase;\r\n\r\n    sql_history: string;\r\n\r\n    permissions: number;\r\n\r\n    constructor(name: string, private main: MainBase, owner_id: number){\r\n        this.name = name;\r\n        this.owner_id = owner_id;\r\n        this.moduleStore = new ModuleStore(main);\r\n        this.sql_history = \"\";\r\n    }\r\n    \r\n    getWorkspaceData(withFiles: boolean): WorkspaceData {\r\n        let wd: WorkspaceData = {\r\n            name: this.name,\r\n            id: this.id,\r\n            owner_id: this.owner_id,\r\n            currentFileId: this.currentlyOpenModule == null ? null : this.currentlyOpenModule.file.id,\r\n            files: [],\r\n            sql_history: this.sql_history,\r\n            path: \"\",\r\n            isFolder: false,  \r\n            permissions: this.permissions,\r\n            database_id: this.databaseId\r\n        }\r\n\r\n        if(withFiles){\r\n            for(let m of this.moduleStore.getModules(false)){\r\n    \r\n                wd.files.push(m.getFileData(this));\r\n    \r\n            }\r\n        }\r\n\r\n        return wd;\r\n    }\r\n\r\n    renderSettingsButton(panelElement: AccordionElement) {\r\n        let $buttonDiv = panelElement?.$htmlFirstLine?.find('.jo_additionalButtonSettings');\r\n        if ($buttonDiv == null) return;\r\n        \r\n        // let myMain: Main = <Main>this.main;\r\n\r\n            let $button = jQuery('<div class=\"jo_settingsButton img_settings jo_button jo_active\" title=\"Datenbank-Einstellungen...\"></div>');\r\n            $buttonDiv.append($button);\r\n            let that = this;\r\n            $button.on('mousedown', (e) => e.stopPropagation());\r\n            $button.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                new DatabaseSettingsDialog(<any>that.main, that);\r\n\r\n            });\r\n\r\n        // } else {\r\n        //     $buttonDiv.find('.jo_startButton').remove();\r\n        // }\r\n    }\r\n\r\n\r\n    static restoreFromData(ws: WorkspaceData, main: Main): Workspace {\r\n\r\n        let w = new Workspace(ws.name, main, ws.owner_id);\r\n        w.id = ws.id;\r\n        w.path = ws.path;\r\n        w.isFolder = ws.isFolder;\r\n        w.owner_id = ws.owner_id;\r\n        w.sql_history = ws.sql_history;\r\n        w.permissions = ws.permissions;\r\n        w.databaseId = ws.database_id;\r\n\r\n        for(let f of ws.files){\r\n\r\n            let m: Module = Module.restoreFromData(f, main);\r\n            w.moduleStore.putModule(m);\r\n\r\n            if(f.id == ws.currentFileId){\r\n                w.currentlyOpenModule = m;\r\n            }\r\n\r\n        }\r\n\r\n        return w;\r\n\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        \r\n        return this.moduleStore.hasErrors();\r\n        \r\n    }\r\n\r\n    getModuleByMonacoModel(model: monaco.editor.ITextModel): Module {\r\n        for(let m of this.moduleStore.getModules(false)){\r\n            if(m.model == model){\r\n                return m;\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    }\r\n}\r\n\r\n","import { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type ButtonToggler = (state: boolean) => void;\r\n\r\nexport type Action = (name: string, buttonToggler?: ButtonToggler, pressed_key?: string) => void;\r\n\r\nexport type ActionEntry = {\r\n    text?: string,\r\n    keys: string[],\r\n    action: Action,\r\n    identifier: string, // name of Action is copied automatically to name of ActionEntry\r\n    active: boolean\r\n}\r\n\r\nexport class ActionManager {\r\n\r\n    actions: { [actionIdentifier: string]: ActionEntry } = { };\r\n\r\n    keyEntries: { [key: string]: ActionEntry[] } = {};\r\n\r\n    buttons: { [actionIdentifier: string]: JQuery<HTMLElement>[] } = {};\r\n\r\n    constructor(private $mainElement: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public init(){\r\n\r\n        let $element:JQuery<any> = this.$mainElement;\r\n        \r\n        if($element == null) $element = jQuery(document);\r\n\r\n        let that = this;\r\n        $element.on(\"keydown\", function (event: JQuery.KeyDownEvent) { \r\n            if(event != null){\r\n                that.executeKeyDownEvent(event); \r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    trigger(actionIdentifier: string) {\r\n        let ae = this.actions[actionIdentifier];\r\n        if(ae != null){\r\n            ae.action(actionIdentifier, null, \"\");\r\n        }\r\n    }\r\n\r\n\r\n    public registerAction(identifier: string, keys: string[], action: Action, text: string = \"\", button?: JQuery<HTMLElement>){\r\n        let ae: ActionEntry = {\r\n            action: action,\r\n            identifier: identifier,\r\n            keys: keys,\r\n            text: text,\r\n            active: true\r\n        };\r\n\r\n        this.actions[identifier] = ae;\r\n\r\n        for(let key of keys){\r\n            if(this.keyEntries[key.toLowerCase()] == null){\r\n                this.keyEntries[key.toLowerCase()] = [];\r\n            }\r\n            this.keyEntries[key.toLowerCase()].push(ae);\r\n        }\r\n\r\n        if(button != null){\r\n            if(this.buttons[identifier] == null){\r\n                this.buttons[identifier] = [];\r\n            }\r\n            this.buttons[identifier].push(button);\r\n\r\n            let t = text;\r\n            if(keys.length > 0){\r\n                t += \" [\" + keys.join(\", \") + \"]\";\r\n            }\r\n\r\n            button.attr(\"title\", t);\r\n\r\n            button.on('mousedown', () => {\r\n                if(ae.active){\r\n                    action(identifier, null, \"mousedown\");\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public isActive(actionIdentifier: string): boolean {\r\n\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae == null) return false;\r\n\r\n        return ae.active;\r\n    \r\n    }\r\n\r\n    public setActive(actionIdentifier: string, active: boolean){\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae != null){\r\n            ae.active = active;\r\n        }\r\n\r\n        let buttons = this.buttons[actionIdentifier];\r\n        if(buttons != null){\r\n            for(let button of buttons){\r\n                if(active){\r\n                    button.addClass('jo_active');\r\n                } else {\r\n                    button.removeClass('jo_active');\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public executeKeyDownEvent(event: JQuery.KeyDownEvent) {\r\n\r\n        if(document.activeElement.tagName.toLowerCase() == \"input\"){\r\n            return;\r\n        }\r\n\r\n        if (event.keyCode <= 18 && event.keyCode >= 16) {\r\n            return; // ctrl, alt, shift\r\n        }\r\n\r\n        let key: string = \"\";\r\n\r\n        if (event.ctrlKey) {\r\n            key += \"ctrl+\";\r\n        }\r\n\r\n        if (event.shiftKey) {\r\n            key += \"shift+\";\r\n        }\r\n\r\n        if (event.altKey) {\r\n            key += \"alt+\";\r\n        }\r\n\r\n        if(event.key != null){\r\n            key += event.key.toLowerCase();\r\n        }\r\n\r\n        let actionEntries = this.keyEntries[key];\r\n\r\n        if(actionEntries != null){\r\n            for(let actionEntry of actionEntries){\r\n                if (actionEntry.active) {\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    actionEntry.action(actionEntry.identifier, null, key);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class ErrorManager {\r\n\r\n    oldDecorations: string[] = [];\r\n    oldErrorDecorations: string[] = [];\r\n    $errorDiv: JQuery<HTMLElement>;\r\n\r\n    $bracket_warning: JQuery<HTMLElement>;\r\n\r\n    minimapColor: {[key: string]:string } = {};\r\n\r\n    lightBulbOnClickFunctionList: {class: string, onClickFunction: () => void, title: string}[] = [];\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>, private $mainDiv: JQuery<HTMLElement>) {\r\n        this.minimapColor[\"error\"] = \"#bc1616\";\r\n        this.minimapColor[\"warning\"] = \"#cca700\";\r\n        this.minimapColor[\"info\"] = \"#75beff\";\r\n\r\n        this.$bracket_warning = $mainDiv.find(\".jo_parenthesis_warning\");\r\n\r\n        this.$bracket_warning.attr('title', 'Klammeralarm!');\r\n        this.$bracket_warning.children().attr('title', 'Klammeralarm!');\r\n\r\n        let that = this;\r\n        $mainDiv.find(\".jo_pw_undo\").on(\"click\", () => {\r\n            let editor = that.main.getMonacoEditor();\r\n            editor.trigger(\".\", \"undo\", {});\r\n        }).attr('title', 'Undo');\r\n    }\r\n\r\n    showParenthesisWarning(error: string){\r\n        if(error != null){\r\n            this.$bracket_warning.css(\"visibility\", \"visible\");\r\n            this.$bracket_warning.find(\".jo_pw_heading\").text(error);\r\n        } else {\r\n            this.$bracket_warning.css(\"visibility\", \"hidden\");\r\n        }\r\n    }\r\n\r\n    showErrors(workspace: Workspace): Map<Module, number> {\r\n\r\n        this.lightBulbOnClickFunctionList = [];\r\n\r\n        let errorCountMap: Map<Module, number> = new Map();\r\n\r\n        this.$errorDiv = this.$bottomDiv.find('.jo_tabs>.jo_errorsTab');\r\n        this.$errorDiv.empty();\r\n\r\n        let hasErrors = false;\r\n\r\n        let ms = workspace.moduleStore;\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        for (let m of ms.getModules(false)) {\r\n            let markers: monaco.editor.IMarkerData[] = [];\r\n            let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n            let $errorList: JQuery<HTMLElement>[] = [];\r\n\r\n            let errors = m.getSortedAndFilteredErrors();\r\n            errorCountMap.set(m, m.getErrorCount());\r\n\r\n            for (let error of errors) {\r\n\r\n                let linesDecorationsClassName: string;\r\n                let borderLeftClass: string;\r\n                let minimapColor: string = this.minimapColor[error.level];\r\n\r\n                switch (error.level) {\r\n                    case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                    case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                    case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n                }\r\n\r\n                if (error.quickFix != null) {\r\n                    let quickFix = error.quickFix;\r\n                    let lightBulbClass = \"lb_\" + Math.trunc(Math.random() * 1000000);\r\n                    linesDecorationsClassName = 'jo_yellowLightBulb ' + borderLeftClass + \" \" + lightBulbClass;\r\n\r\n                    this.lightBulbOnClickFunctionList.push({class: '.' + lightBulbClass, \r\n                    onClickFunction: () => {\r\n\r\n                        let edits = quickFix.editsProvider(m.model.uri);\r\n                        editor.executeEdits(\"\", edits.map((edit) => {\r\n                            let r = edit.edit.range;\r\n                            return {\r\n                                range: new monaco.Range(r.startLineNumber, r.startColumn, r.endLineNumber, r.endColumn),\r\n                                text: edit.edit.text,\r\n                                forceMoveMarkers: true\r\n                            }\r\n                        }\r\n                        ));\r\n\r\n                    },\r\n                    title: quickFix.title\r\n                })\r\n\r\n\r\n                }\r\n\r\n                this.processError(error, m, $errorList);\r\n\r\n                let severity: monaco.MarkerSeverity;\r\n                switch (error.level) {\r\n                    case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                    case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                    case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n                }\r\n\r\n                markers.push({\r\n                    startLineNumber: error.position.line,\r\n                    startColumn: error.position.column,\r\n                    endLineNumber: error.position.line,\r\n                    endColumn: error.position.column + error.position.length,\r\n                    message: error.text,\r\n                    severity: severity,\r\n                    //@ts-ignore\r\n                    relatedInformation: error.quickFix\r\n                });\r\n\r\n                decorations.push({\r\n                    range: {\r\n                        startLineNumber: error.position.line,\r\n                        startColumn: error.position.column,\r\n                        endLineNumber: error.position.line,\r\n                        endColumn: error.position.column + error.position.length\r\n                    },\r\n                    options: {\r\n                        linesDecorationsClassName: linesDecorationsClassName,\r\n                        minimap: {\r\n                            position: monaco.editor.MinimapPosition.Inline,\r\n                            color: minimapColor\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n            }\r\n\r\n            monaco.editor.setModelMarkers(m.model, 'test', markers);\r\n            m.oldErrorDecorations = m.model.deltaDecorations(m.oldErrorDecorations, decorations);\r\n\r\n            // decorations used when user clicks on error in error-list:\r\n            this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, []);\r\n\r\n\r\n            if ($errorList.length > 0 && this.$errorDiv.length > 0) {\r\n                hasErrors = true;\r\n                let $file = jQuery('<div class=\"jo_error-filename\">' + m.file.name + '&nbsp;</div>');\r\n                this.$errorDiv.append($file);\r\n                for (let $error of $errorList) {\r\n                    this.$errorDiv.append($error);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasErrors && this.$errorDiv.length > 0) {\r\n            this.$errorDiv.append(jQuery('<div class=\"jo_noErrorMessage\">Keine Fehler gefunden :-)</div>'));\r\n        }\r\n\r\n        this.registerLightbulbOnClickFunctions();\r\n\r\n        return errorCountMap;\r\n\r\n    }\r\n\r\n    registerLightbulbOnClickFunctions() {\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            for(let locf of that.lightBulbOnClickFunctionList){\r\n                    jQuery(locf.class).off('click', locf.onClickFunction);\r\n                    jQuery(locf.class).on('click', locf.onClickFunction).attr('title', locf.title);\r\n            }            \r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    processError(error: Error, m: Module, $errorDivs: JQuery<HTMLElement>[]) {\r\n\r\n        let $div = jQuery('<div class=\"jo_error-line\"></div>');\r\n        let $lineColumn = jQuery('<span class=\"jo_error-position\">[Z&nbsp;<span class=\"jo_linecolumn\">' + error.position.line + '</span>' +\r\n            ' Sp&nbsp;<span class=\"jo_linecolumn\">' + error.position.column + '</span>]</span>:&nbsp;');\r\n        let category = \"\";\r\n        switch (error.level) {\r\n            case \"error\": break;\r\n            case \"warning\": category = '<span class=\"jo_warning_category\">Warnung: </span>'; break;\r\n            case \"info\": category = '<span class=\"jo_info_category\">Info: </span>'; break;\r\n        }\r\n        let $message = jQuery('<div class=\"jo_error-text\">' + category + error.text + \"</div>\");\r\n\r\n        $div.append($lineColumn).append($message);\r\n\r\n        let that = this;\r\n        $div.on(\"mousedown\", (ev) => {\r\n            this.$errorDiv.find('.jo_error-line').removeClass('jo_active');\r\n            $div.addClass('jo_active');\r\n            that.showError(m, error);\r\n        });\r\n\r\n        $errorDivs.push($div);\r\n    }\r\n\r\n    showError(m: Module, error: Error) {\r\n\r\n        if (this.main instanceof Main) {\r\n            if (m != this.main.projectExplorer.getCurrentlyEditedModule()) {\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n        let position = error.position;\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n\r\n        let className: string = \"\";\r\n        switch (error.level) {\r\n            case \"error\": className = \"jo_revealError\"; break;\r\n            case \"warning\": className = \"jo_revealWarning\"; break;\r\n            case \"info\": className = \"jo_revealInfo\"; break;\r\n        }\r\n\r\n\r\n        this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, [\r\n            {\r\n                range: range,\r\n                options: { className: className }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n}","import { makeDiv } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { stringToDate, dateToStringWithoutTime } from \"../../tools/StringTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\ntype ModuleWithWorkspace = {\r\n    module: Module,\r\n    workspace: Workspace\r\n}\r\n\r\ntype DayWithModules = {\r\n    date: Date;\r\n    day: string;\r\n    modules: ModuleWithWorkspace[];\r\n}\r\n\r\nexport class HomeworkManager {\r\n\r\n    $homeworkTab: JQuery<HTMLElement>;\r\n    $homeworkTabLeft: JQuery<HTMLElement>;\r\n    $homeworkTabRight: JQuery<HTMLElement>;\r\n\r\n    $showRevisionButton: JQuery<HTMLElement>;\r\n    showRevisionActive: boolean = false;\r\n\r\n    diffEditor: monaco.editor.IStandaloneDiffEditor;\r\n\r\n    constructor(private main: Main, public $bottomDiv: JQuery<HTMLElement>) {\r\n        this.$homeworkTab = $bottomDiv.find('.jo_tabs>.jo_homeworkTab');\r\n    }\r\n\r\n    initGUI() {\r\n        let that = this;\r\n        this.$homeworkTab.append(this.$homeworkTabLeft = makeDiv(\"\", \"jo_homeworkTabLeft jo_scrollable\"));\r\n        this.$homeworkTab.append(this.$homeworkTabRight = makeDiv(\"\", \"jo_homeworkTabRight jo_scrollable\"));\r\n        jQuery('#view-mode').prepend(this.$showRevisionButton = makeDiv(\"\", \"jo_button jo_active jo_homeworkRevisionButton\", \"\"));\r\n        this.$showRevisionButton.on(\"click\", () => {\r\n            if (this.showRevisionActive) {\r\n                this.hideRevision();\r\n            } else {\r\n                this.showRevision(that.main.getCurrentlyEditedModule());\r\n            }\r\n        });\r\n        this.$showRevisionButton.hide();\r\n        jQuery('#diffEditor').hide();\r\n    }\r\n\r\n    showHomeWorkRevisionButton() {\r\n        this.$showRevisionButton.text(this.showRevisionActive ? \"Normalansicht\" : \"Korrekturen zeigen\");\r\n        this.$showRevisionButton.show();\r\n    }\r\n\r\n    hideHomeworkRevisionButton() {\r\n        this.$showRevisionButton.hide();\r\n    }\r\n\r\n    showRevision(module: Module) {\r\n\r\n        module.file.text = module.getProgramTextFromMonacoModel();\r\n        let file = module.file;\r\n\r\n        jQuery('#editor').hide();\r\n        jQuery('#diffEditor').show();\r\n\r\n        var originalModel = monaco.editor.createModel(file.text_before_revision, \"myJava\");\r\n        var modifiedModel = monaco.editor.createModel(file.text, \"myJava\");\r\n\r\n        this.diffEditor = monaco.editor.createDiffEditor(document.getElementById(\"diffEditor\"), {\r\n            // You can optionally disable the resizing\r\n            enableSplitViewResizing: true,\r\n            originalEditable: false,\r\n            readOnly: true,\r\n            // Render the diff inline\r\n            renderSideBySide: true\r\n        });\r\n\r\n        this.diffEditor.setModel({\r\n            original: originalModel,\r\n            modified: modifiedModel\r\n        });\r\n\r\n        this.showRevisionActive = true;\r\n        this.showHomeWorkRevisionButton();\r\n    }\r\n\r\n    hideRevision() {\r\n        if (this.showRevisionActive) {\r\n\r\n            jQuery('#diffEditor').hide();\r\n            this.diffEditor.dispose();\r\n            this.diffEditor = null;\r\n            jQuery('#editor').show();\r\n\r\n            this.showRevisionActive = false;\r\n            this.showHomeWorkRevisionButton();\r\n        }\r\n    }\r\n\r\n\r\n    attachToWorkspaces(workspaces: Workspace[]) {\r\n\r\n        let daysWithModules: DayWithModules[] = [];\r\n        let map: { [day: string]: DayWithModules } = {};\r\n\r\n        workspaces.forEach(ws => {\r\n            ws.moduleStore.getModules(false).forEach(module => {\r\n\r\n                let dateString = module.file.submitted_date;\r\n                if (dateString != null) {\r\n\r\n                    let date: Date = stringToDate(dateString);\r\n                    let dateWithoutTime = dateToStringWithoutTime(date);\r\n                    let dwm: DayWithModules = map[dateWithoutTime];\r\n                    if (dwm == null) {\r\n                        dwm = {\r\n                            date: date,\r\n                            day: dateWithoutTime,\r\n                            modules: []\r\n                        };\r\n                        map[dateWithoutTime] = dwm;\r\n                        daysWithModules.push(dwm);\r\n                    }\r\n                    dwm.modules.push({module: module, workspace: ws});\r\n\r\n                }\r\n\r\n            });\r\n\r\n        });\r\n\r\n        this.$homeworkTabLeft.empty();\r\n        this.$homeworkTabRight.empty();\r\n\r\n        let that = this;\r\n\r\n        this.$homeworkTabLeft.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgabetage:\"));\r\n\r\n\r\n        daysWithModules.sort((a, b) => {\r\n            if (a.date.getFullYear() != b.date.getFullYear()) return -Math.sign(a.date.getFullYear() - b.date.getFullYear());\r\n            if (a.date.getMonth() != b.date.getMonth()) return -Math.sign(a.date.getMonth() - b.date.getMonth());\r\n            if (a.date.getDate() != b.date.getDate()) return -Math.sign(a.date.getDate() - b.date.getDate());\r\n            return 0;\r\n        });\r\n\r\n        let first: boolean = true;\r\n\r\n        daysWithModules.forEach(dwm => {\r\n\r\n            dwm.modules.sort((m1, m2) => m1.module.file.name.localeCompare(m2.module.file.name));\r\n\r\n            let $div = makeDiv(\"\", \"jo_homeworkDate\", dwm.day);\r\n            this.$homeworkTabLeft.append($div);\r\n\r\n            $div.on(\"click\", (e) => {\r\n                this.$homeworkTabLeft.find('.jo_homeworkDate').removeClass('active');\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            });\r\n\r\n            if (first) {\r\n                first = false;\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    select(dwm: DayWithModules) {\r\n        this.$homeworkTabRight.empty();\r\n        this.$homeworkTabRight.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgegebene Dateien:\"));\r\n        let that = this;\r\n        dwm.modules.forEach(moduleWithWorkspace => {\r\n            let $div = jQuery(`<div class=\"jo_homeworkEntry\">Workspace <span class=\"jo_homework-workspace\">\r\n                    ${moduleWithWorkspace.workspace.name}</span>, Datei <span class=\"jo_homework-file\">\r\n                    ${moduleWithWorkspace.module.file.name}</span> (Abgabe: ${moduleWithWorkspace.module.file.submitted_date} )</div>`);\r\n            that.$homeworkTabRight.append($div);\r\n            $div.on(\"click\", () => {\r\n                    that.main.projectExplorer.setWorkspaceActive(moduleWithWorkspace.workspace);\r\n                    that.main.projectExplorer.setModuleActive(moduleWithWorkspace.module);\r\n                    that.main.projectExplorer.fileListPanel.select(moduleWithWorkspace.module, false);\r\n            });\r\n        })\r\n        \r\n    }\r\n\r\n\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { ErrorManager } from \"./ErrorManager.js\";\r\nimport { HomeworkManager } from \"./HomeworkManager.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class BottomDiv {\r\n\r\n    errorManager: ErrorManager;\r\n    homeworkManager: HomeworkManager;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>, public $mainDiv: JQuery<HTMLElement>) {\r\n\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_homeworkTabheading').length > 0) {\r\n            this.homeworkManager = new HomeworkManager(<Main>main, $bottomDiv);\r\n        }\r\n\r\n        this.errorManager = new ErrorManager(main, $bottomDiv, $mainDiv);\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$bottomDiv);\r\n        if (this.homeworkManager != null) this.homeworkManager.initGUI();\r\n\r\n        this.$bottomDiv.find('.jo_tabs').children().first().trigger(\"click\");\r\n\r\n    }\r\n\r\n    showHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'visible');\r\n        jQuery('.jo_homeworkTabheading').trigger(\"mousedown\");\r\n\r\n    }\r\n\r\n    hideHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'hidden');\r\n        jQuery('.jo_tabheadings').children().first().trigger(\"mousedown\");\r\n\r\n    }\r\n\r\n\r\n}","import { Editor } from \"./Editor.js\";\r\nimport { CompletionHint, Module } from \"../../compiler/parser/Module.js\";\r\nimport { Symbol, SymbolTable } from \"../../compiler/parser/SymbolTable.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { Column, Table } from \"../../compiler/parser/SQLTable.js\";\r\n\r\nexport class MyCompletionItemProvider implements monaco.languages.CompletionItemProvider {\r\n\r\n    isConsole: boolean;\r\n\r\n    public triggerCharacters: string[] = ['.', 'abcdefghijklmnopqrstuvwxyzäöüß_ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜ', ' ', ',', '('];\r\n\r\n    public keywordCompletionItems: Map<string, monaco.languages.CompletionItem> = new Map();\r\n\r\n    constructor(private main: MainBase) {\r\n        this.setupKeywordCompletionItems();\r\n    }\r\n\r\n    first: boolean = true;\r\n    provideCompletionItems(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, \r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n\r\n\r\n        let module: Module =\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null || module.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n            let that = this;\r\n\r\n            let wfc = function waitForCompiler(){\r\n                if(module.file.dirty){\r\n                    setTimeout(() => {\r\n                        wfc();\r\n                    }, 100);\r\n                } else {\r\n                    resolve(that.provideCompletionItemsIntern(model, position, context, token));\r\n                }\r\n            }\r\n        \r\n            wfc();\r\n\r\n        })\r\n\r\n        // Promise.resolve({\r\n        //     suggestions: completionItems\r\n        // });\r\n    }\r\n\r\n    provideCompletionItemsIntern(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, \r\n        token: monaco.CancellationToken): monaco.languages.CompletionList {\r\n\r\n        setTimeout(() => {\r\n            //@ts-ignore\r\n            let sw = this.main.getMonacoEditor()._contentWidgets[\"editor.widget.suggestWidget\"].widget;\r\n            if (this.first) {\r\n                sw.toggleDetails();\r\n                this.first = false;\r\n            }\r\n        }, 500);\r\n\r\n        let module: Module =\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null || module.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (this.isStringLiteral(module, position)) return null;\r\n\r\n        let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let symbolTable = module.mainSymbolTable.findTableAtPosition(position.lineNumber, position.column);\r\n        let completionHint: CompletionHint = module.getCompletionHint(position.lineNumber, position.column);\r\n        if (completionHint == null) {\r\n            completionHint = {\r\n                fromColumn: 0,\r\n                toColumn: 0,\r\n                fromLine: 0,\r\n                toLine: 0,\r\n                hintColumns: false,\r\n                hintTables: false,\r\n                hintKeywords: []\r\n            }\r\n        }\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n        this.addKeywordCompletionItems(completionHint, completionItems);\r\n\r\n        let dotMatch = textUntilPosition.match(/.*\\s([\\wöäüÖÄÜß]*)(\\.)([\\wöäüÖÄÜß]*)$/);\r\n\r\n        let ibMatch = textAfterPosition.match(/^([\\wöäüÖÄÜß]*)/);\r\n        let identifierAndBracketAfterCursor = \"\";\r\n        if (ibMatch != null && ibMatch.length > 0) {\r\n            identifierAndBracketAfterCursor = ibMatch[0];\r\n        }\r\n\r\n        if (dotMatch == null) {\r\n            this.addIdentifierCompletionItems(completionHint, symbolTable, completionItems);\r\n        } else {\r\n            this.addDotCompletionItems(position, dotMatch, identifierAndBracketAfterCursor, symbolTable, completionItems);\r\n        }\r\n\r\n        let word = model.getWordUntilPosition(position);\r\n        let replaceWordRange = { startColumn: word.startColumn, startLineNumber: position.lineNumber, endColumn: word.endColumn, endLineNumber: position.lineNumber };\r\n        let insertAfterCursorRange = { startColumn: position.column, startLineNumber: position.lineNumber, endColumn: position.column, endLineNumber: position.lineNumber }\r\n\r\n        for (let item of completionItems) {\r\n            if (item.range == null) {\r\n                if (item.insertText.startsWith(\",\")) {\r\n                    item.range = insertAfterCursorRange;\r\n                } else {\r\n                    item.range = replaceWordRange;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (completionHint.dontHint != null) {\r\n            completionItems = completionItems.filter(item => completionHint.dontHint.indexOf(item.insertText) < 0);\r\n        }\r\n\r\n        return {\r\n            suggestions: completionItems\r\n        };\r\n    }\r\n\r\n\r\n    addDotCompletionItems(position: monaco.Position, dotMatch: RegExpMatchArray, identifierAndBracketAfterCursor: string,\r\n        symbolTable: SymbolTable, completionItems: monaco.languages.CompletionItem[]) {\r\n        let textAfterDot = dotMatch[3];\r\n        let textBeforeDot = dotMatch[1];\r\n        let dotColumn = position.column - textAfterDot.length - 1;\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - textAfterDot.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n        for (let symbol of symbolTable.symbolList) {\r\n            if (symbol.table != null) {\r\n                let identifier: string = symbol.table.identifier;\r\n                if (symbol.tableAlias != null) identifier = symbol.tableAlias;\r\n                if (identifier.toLowerCase() == textBeforeDot) {\r\n                    for (let column of symbol.table.columns) {\r\n                        completionItems.push({\r\n                            label: column.identifier,\r\n                            detail: \"Spalte \" + column.identifier + \" der Tabelle \" + symbol.table.identifier,\r\n                            filterText: column.identifier,\r\n                            insertText: column.identifier,\r\n                            insertTextRules: monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                            kind: monaco.languages.CompletionItemKind.Field,\r\n                            range: rangeToReplace\r\n                        })\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    addIdentifierCompletionItems(completionHint: CompletionHint, symbolTable: SymbolTable, completionItems: monaco.languages.CompletionItem[]) {\r\n        let praefix: string = completionHint.praefix == null ? \"\" : completionHint.praefix;\r\n        let suffix: string = completionHint.suffix == null ? \"\" : completionHint.suffix;\r\n\r\n        if (!(completionHint.hintTables || completionHint.hintColumns)) {\r\n            return;\r\n        }\r\n\r\n        let tableIdentifiers: { [identifier: string]: boolean } = {};\r\n\r\n        let st: SymbolTable = symbolTable;\r\n        let columns: { [identifier: string]: Symbol[] } = {};\r\n        let columnIdentifiers: string[] = [];\r\n\r\n        while (st != null) {\r\n            for (let symbol of st.symbolList) {\r\n                if (symbol.column != null) {\r\n                    let columnIdentifier = symbol.column.identifier;\r\n                    if (columns[columnIdentifier] == null) {\r\n                        columns[columnIdentifier] = [symbol];\r\n                        columnIdentifiers.push(columnIdentifier);\r\n                    } else {\r\n                        columns[columnIdentifier].push(symbol);\r\n                    }\r\n                } else if (symbol.table != null && completionHint.hintTables) {\r\n                    if (!tableIdentifiers[symbol.identifier]) {\r\n                        let insertText = praefix + symbol.identifier + suffix;\r\n                        completionItems.push({\r\n                            label: symbol.identifier,\r\n                            detail: \"Tabelle \" + symbol.table.identifier,\r\n                            filterText: symbol.identifier,\r\n                            insertText: insertText,\r\n                            insertTextRules: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                            kind: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemKind.Snippet : monaco.languages.CompletionItemKind.Class,\r\n                            range: undefined,\r\n                            sortText: \"aa\" + symbol.identifier\r\n                        });\r\n                        tableIdentifiers[symbol.identifier] = true;\r\n                    }\r\n                }\r\n            }\r\n            st = st.parent;\r\n        }\r\n\r\n        if (completionHint.hintColumns) {\r\n            for (let ci of columnIdentifiers) {\r\n                let columList = columns[ci];\r\n                let withTable = columList.length > 1 && completionHint.hintColumnsOfTable == null;\r\n                for (let cs of columList) {\r\n                    let text = cs.identifier;\r\n                    if (withTable && cs.identifier == cs.column.identifier.toLowerCase()) {\r\n                        text = (cs.tableAlias == null ? cs.column.table.identifier : cs.tableAlias) + \".\" + text;\r\n                    }\r\n                    if (completionHint.hintColumnsOfTable == null || cs.column?.table?.identifier == completionHint.hintColumnsOfTable) {\r\n                        let insertText = praefix + text + suffix;\r\n                        completionItems.push({\r\n                            label: text,\r\n                            detail: \"Die Spalte \" + cs.column.identifier + \" der Tabelle \" + cs.column.table.identifier,\r\n                            filterText: text,\r\n                            insertText: insertText,\r\n                            insertTextRules: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                            kind: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemKind.Snippet : monaco.languages.CompletionItemKind.Field,\r\n                            range: undefined\r\n                        })\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    keywordToSnippetMap: { [keyword: string]: string } = {\r\n        \"(\": \"(\\n\\t$0\\n)\",\r\n        \"varchar\": \"varchar($1) $0\",\r\n        \"decimal\": \"decimal($1, $2) $0\"\r\n    }\r\n\r\n    addKeywordCompletionItems(completionHint: CompletionHint, completionItems: monaco.languages.CompletionItem[]) {\r\n        let praefix: string = completionHint.praefix == null ? \"\" : completionHint.praefix;\r\n        let suffix: string = completionHint.suffix == null ? \"\" : completionHint.suffix;\r\n\r\n\r\n        for (let text of completionHint.hintKeywords) {\r\n            let insertText = praefix + text + suffix;\r\n            let snippet = this.keywordToSnippetMap[text];\r\n\r\n            let ci = this.keywordCompletionItems.get(text);\r\n            if (ci != null) {\r\n                completionItems.push(ci);\r\n            } else if (snippet != null) {\r\n                let label = snippet.replace(\"$0\", \"\").replace(\"$1\", \"\").replace(\"$2\", \"\").replace(/ /g, \"\").replace(/\\n/g, \"\").replace(/\\t/g, \"\");\r\n                completionItems.push({\r\n                    label: label,\r\n                    detail: \"\",\r\n                    filterText: text,\r\n                    insertText: snippet,\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                })\r\n            } else {\r\n                completionItems.push({\r\n                    label: text,\r\n                    detail: \"\",\r\n                    filterText: text,\r\n                    insertText: text,\r\n                    insertTextRules: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                    kind: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemKind.Snippet : monaco.languages.CompletionItemKind.Keyword,\r\n                    range: undefined,\r\n                    sortText: text == \"from\" ? \"*\" : undefined\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    isStringLiteral(module: Module, position: monaco.Position) {\r\n\r\n        let tokenList = module.tokenList;\r\n        if (tokenList == null || tokenList.length == 0) return false;\r\n\r\n        let posMin = 0;\r\n        let posMax = tokenList.length - 1;\r\n        let pos: number;\r\n\r\n        let watchDog = 1000;\r\n\r\n        while (true) {\r\n            let posOld = pos;\r\n            pos = Math.round((posMax + posMin) / 2);\r\n\r\n            if (posOld == pos) return false;\r\n\r\n            watchDog--;\r\n            if (watchDog == 0) return false;\r\n\r\n            let t = tokenList[pos];\r\n            let p = t.position;\r\n\r\n            if (p.line < position.lineNumber || p.line == position.lineNumber && p.column + p.length < position.column) {\r\n                posMin = pos;\r\n                continue;\r\n            }\r\n\r\n            if (p.line > position.lineNumber || p.line == position.lineNumber && p.column > position.column) {\r\n                posMax = pos;\r\n                continue;\r\n            }\r\n\r\n            return t.tt == TokenType.stringConstant;\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    setupKeywordCompletionItems() {\r\n        this.keywordCompletionItems.set(\"delete from\",\r\n            {\r\n                label: \"delete from <Tabelle> where <Bedingung>\",\r\n                detail: \"Anweisung zum Löschen von Datensätzen\",\r\n                filterText: `delete from`,\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `delete from `,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"drop table\",\r\n            {\r\n                label: \"drop table <Tabelle>\",\r\n                detail: \"Anweisung zum Löschen einer Tabelle\",\r\n                filterText: 'drop table',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `drop table `,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"alter\",\r\n            {\r\n                label: \"alter table <Tabelle> <rename to, rename column, add column, drop column>\",\r\n                detail: \"Anweisung zum Ändern des Schemas (alter table <Tabelle> <rename to, rename column, add column, drop column>)\",\r\n                filterText: 'alter',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `alter table `,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"select\",\r\n            {\r\n                label: \"select <Spalten> from <Tabellen> where <Bedingung>\",\r\n                detail: \"Select-Anweisung\",\r\n                filterText: 'select',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `select * from $1\\nwhere $0\\n`,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"create table\",\r\n            {\r\n                label: \"create table <Tabellenbezeichner> (<Spaltendefinitionen>)\",\r\n                detail: \"Create table-Anweisung (Erstellt eine neue Tabelle)\",\r\n                filterText: 'create',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `create table $1 (\\n\\t$0\\n);`,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        // this.keywordCompletionItems.set(\"from\",\r\n        //     {\r\n        //         label: \"from <Tabellen> where <Bedingung>\",\r\n        //         detail: \"from-Teil der select-Anweisung\",\r\n        //         filterText: 'from',\r\n        //         // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n        //         insertText: `from $1\\nwhere $0\\n`,\r\n        //         command: {\r\n        //             id: \"editor.action.triggerSuggest\",\r\n        //             title: '123',\r\n        //             arguments: []\r\n        //         },\r\n        //         insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n        //         kind: monaco.languages.CompletionItemKind.Snippet,\r\n        //         range: undefined\r\n        //     });\r\n\r\n    }\r\n\r\n\r\n}","import { Module, MethodCallPosition } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\n\r\n\r\nexport class MySignatureHelpProvider implements monaco.languages.SignatureHelpProvider {\r\n\r\n    signatureHelpTriggerCharacters?: readonly string[] = ['(', ',', ';', '<', '>', '=']; // semicolon, <, >, = for for-loop, if, while, ...\r\n    signatureHelpRetriggerCharacters?: readonly string[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    provideSignatureHelp(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let that = this;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            setTimeout(() => {\r\n\r\n                this.main.compileIfDirty();\r\n\r\n                resolve(that.provideSignatureHelpLater(model, position, token, context));\r\n\r\n            }, 300);\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    provideSignatureHelpLater(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model != this.main.getMonacoEditor().getModel());\r\n\r\n        let module: Module = \r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        // let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        // let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let methodCallPositions = module.methodCallPositions[position.lineNumber];\r\n\r\n        if (methodCallPositions == null) return null;\r\n\r\n        let methodCallPosition: MethodCallPosition = null;\r\n        let rightMostPosition: number = -1;\r\n\r\n        for (let i = methodCallPositions.length - 1; i >= 0; i--) {\r\n            let mcp = methodCallPositions[i];\r\n            if (mcp.identifierPosition.column + mcp.identifierPosition.length < position.column\r\n                && mcp.identifierPosition.column > rightMostPosition) {\r\n                if (mcp.rightBracketPosition == null ||\r\n                    (position.lineNumber <= mcp.rightBracketPosition.line && position.column <= mcp.rightBracketPosition.column)\r\n                    || (position.lineNumber < mcp.rightBracketPosition.line)) {\r\n                    methodCallPosition = mcp;\r\n                    rightMostPosition = mcp.identifierPosition.column;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (methodCallPosition == null) return null;\r\n\r\n        return this.getSignatureHelp(methodCallPosition, position);\r\n\r\n\r\n\r\n    }\r\n\r\n    getSignatureHelp(methodCallPosition: MethodCallPosition,\r\n        position: monaco.Position): monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let parameterIndex: number = 0;\r\n\r\n        for (let cp of methodCallPosition.commaPositions) {\r\n            if (cp.line < position.lineNumber || (cp.line == position.lineNumber && cp.column < position.column)) {\r\n                parameterIndex++;\r\n            }\r\n        }\r\n\r\n        let signatureInformationList: monaco.languages.SignatureInformation[] = [];\r\n\r\n        return Promise.resolve({\r\n            value: {\r\n                activeParameter: parameterIndex,\r\n                activeSignature: 0,\r\n                signatures: signatureInformationList\r\n            },\r\n            dispose: () => { }\r\n        });\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\n\r\n\r\n\r\nexport class MyHoverProvider {\r\n\r\n    private static keywordDescriptions: { [keyword: string]: string } = {\r\n        \"print\": \"Die Anweisung ```print``` gibt eine Zeichenkette aus.\",\r\n        \"new\": \"Das Schlüsselwort ```new``` bewirkt die Instanzierung (\\\"Erschaffung\\\") eines neuen Objektes einer Klasse.\",\r\n        \"println\": \"Die Anweisung ```println``` gibt eine Zeichenkette gefolgt von einem Zeilenumbruch aus.\",\r\n        \"while\": \"```\\nwhile (Bedingung) {Anweisungen}\\n```  \\nbewirkt die Wiederholung der Anweisungen solange ```Bedingung == true``` ist.\",\r\n        \"for\": \"```\\nfor(Startanweisung;Solange-Bedingung;Nach_jeder_Wiederholung){Anweisungen}\\n```  \\n\"\r\n            + \"führt zunächst die Startanweisung aus und wiederholt dann die Anweisungen solange ```Bedingung == true``` ist. Am Ende jeder wiederholung wird Nach_jeder_Wiederholung ausgeführt.\",\r\n        \"if\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.  \\nDer ```else```-Teil kann auch weggelassen werden.\",\r\n        \"else\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.\",\r\n        \"switch\": \"```\\nswitch(Selektor){ case Wert_1: Anweisungen_1; break; case Wert_2: Anweisungen_2; break; default: Default-Anweisungen } \\n```  \\nwertet den Selektor-Term aus und führt abhängig vom Termwert Anweisungen_1, Anweisungen_2, ... aus. Entspricht der Termwert keinem der Werte Wert_1, Wert_2, ..., so werden die Default-Anweisungen ausgeführt.\",\r\n        \"%\": \"```\\na % b\\n```  \\n (sprich: 'a modulo b') berechnet den **Rest** der ganzzahligen Division a/b.\",\r\n        \"==\": \"```\\na == b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` gleich sind.  \\nSind a und b **Objekte**, so ergibt ```a == b``` nur dann ```true```, wenn ```a``` und ```b``` auf das **identische** Objekt zeigen.  \\n```==``` nennt man **Vergleichsoperator**.\",\r\n        \"<=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` kleiner oder gleich dem Wert von ```b``` ist.\",\r\n        \">=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` größer oder gleich dem Wert von ```b``` ist.\",\r\n        \"!=\": \"```\\na != b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` **un**gleich sind.  \\nSind ```a``` und ```b``` **Objekte**, so ergibt ```a != b``` dann ```true```, wenn ```a``` und ```b``` **nicht** auf das **identische** Objekt zeigen.  \\n```!=``` nennt man **Ungleich-Operator**.\",\r\n        \"+=\": \"```\\na += b\\n(Kurzschreibweise für a = a + b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erhöht** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"-=\": \"```\\na -= b\\n(Kurzschreibweise für a = a - b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erniedrigt** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"*=\": \"```\\na *= b\\n(Kurzschreibweise für a = a * b)\\n```  \\nbewirkt, dass der Wert von ```a``` mit dem Wert von ```b``` **multipliziert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"/=\": \"```\\na /= b\\n(Kurzschreibweise für a = a / b)\\n```  \\nbewirkt, dass der Wert von ```a``` durch den Wert von ```b``` **dividiert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"++\": \"```\\na++\\n(Kurzschreibweise für a = a + 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins erhöht wird.\",\r\n        \"--\": \"```\\na--\\n(Kurzschreibweise für a = a - 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins eniedrigt wird.\",\r\n        \"=\": \"```\\na = Term\\n```  \\nberechnet den Wert des Terms und weist ihn der Variablen ```a``` zu.  \\n**Vorsicht:**  \\nVerwechsle ```=```(**Zuweisungsoperator**) nicht mit ```==```(**Vergleichsoperator**)!\",\r\n        \"!\": \"```\\n!a\\n```  \\nergibt genau dann ```true```, wenn ```a``` ```false``` ergibt.  \\n```!``` spricht man '**nicht**'.\",\r\n        \"public\": \"```\\npublic\\n```  \\nAttribute und Methoden, die als ```public``` deklariert werden, sind überall (auch außerhalb der Klasse) sichtbar.\",\r\n        \"private\": \"```\\nprivate\\n```  \\nAttribute und Methoden, die als ```private``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse sichtbar.\",\r\n        \"protected\": \"```\\nprotected\\n```  \\nAttribute und Methoden, die als ```protected``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse oder innerhalb von Methoden von Kindklassen sichtbar.\",\r\n        \"return\": \"```\\nreturn Term\\n```  \\nbewirkt, dass die Methode verlassen wird und der Wert des Terms an die aufrufende Stelle zurückgegeben wird.\",\r\n        \"break\": \"```\\nbreak;\\n```  \\ninnerhalb einer Schleife bewirkt, dass die Schleife sofort verlassen und mit den Anweisungen nach der Schleife fortgefahren wird.  \\n\"+\r\n        \"```break``` innerhalb einer ```switch```-Anweisung bewirkt, dass der Block der ```switch```-Anweisung verlassen wird.\",\r\n        \"class\": \"```\\nclass\\n```  \\nMit dem Schlüsselwort ```class``` werden Klassen definiert.\",\r\n        \"extends\": \"```\\nextends\\n```  \\n```class A extends B { ... }``` bedeutet, dass die Klasse A Unterklasse der Klasse B ist.\",\r\n        \"implements\": \"```\\nimplements\\n```  \\n```class A implements B { ... }``` bedeutet, dass die Klasse A das Interface B implementiert, d.h., dass sie alle Methoden besitzen muss, die in B definiert sind.\",\r\n        \"this\": \"```\\nthis\\n```  \\nInnerhalb einer Methodendefinition bezeichnet das Schlüsselwor ```this``` immer dasjenige Objekt, für das die Methode gerade ausgeführt wird.\",\r\n\r\n    }\r\n\r\n    constructor(private editor: Editor) {\r\n\r\n    }\r\n\r\n    provideHover(model: monaco.editor.ITextModel, position: monaco.Position, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Hover> {\r\n\r\n        let selection: monaco.Selection = this.editor.editor.getSelection();\r\n        \r\n        // if cursor is inside current selection then don't show hover, because editor.onDidChangeCursorPosition evaluates selected Text \r\n        // (see class Editor).\r\n        if(selection != null){\r\n            if(selection.startLineNumber != selection.endLineNumber || selection.startColumn != selection.endColumn){\r\n                if(\r\n                    (selection.startLineNumber < position.lineNumber || selection.startLineNumber == position.lineNumber && selection.startColumn <= position.column) && \r\n                    (selection.endLineNumber > position.lineNumber || selection.endLineNumber == position.lineNumber && selection.endColumn >= position.column) \r\n                ){\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        let module: Module = this.editor.main.getCurrentWorkspace()?.getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        for(let errorList of module.errors){\r\n            for(let error of errorList){\r\n                if(error.position.line == position.lineNumber && \r\n                    error.position.column <= position.column && \r\n                    error.position.column + error.position.length >= position.column){\r\n                        return null; // Show error-tooltip and don't show hover-tooltip\r\n                    }\r\n            }\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let declarationAsString = \"\";\r\n\r\n        if (element != null) {\r\n        } else {\r\n            let word = this.getWordUnderCursor(model, position);\r\n            let desc = MyHoverProvider.keywordDescriptions[word];\r\n            if (desc != null) {\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: desc }],\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getWordUnderCursor(model: monaco.editor.ITextModel, position: monaco.Position)\r\n         : string {\r\n        \r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let word = \"\";\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierOrArrayDescriptor(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        if (end - begin > 1) {\r\n            word = text.substring(begin, end);\r\n        } else {\r\n            end = pos;\r\n            while (end < text.length && this.isInsideOperator(text.charAt(end))) {\r\n                end++;\r\n            }\r\n    \r\n            begin = pos;\r\n            while (begin > 0 && this.isInsideOperator(text.charAt(begin - 1))) {\r\n                begin--;\r\n            }\r\n    \r\n            if (end - begin > 0) {\r\n                word = text.substring(begin, end);\r\n            }\r\n        }\r\n\r\n        return word;\r\n\r\n    }\r\n\r\n    widenDeclaration(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        identifier: string): string {\r\n\r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierChain(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        let lenght: number = identifier?.length == null ? 1 : identifier.length;\r\n\r\n        if (end - begin > length) {\r\n            return text.substring(begin, end);\r\n        }\r\n\r\n        return identifier;\r\n    }\r\n\r\n    isInsideIdentifierChain(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß_\\[\\]\\.]/i);\r\n\r\n    }\r\n\r\n    isInsideOperator(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[!%<>=\\+\\-\\*\\/]/i);\r\n\r\n    }\r\n\r\n    isInsideIdentifierOrArrayDescriptor(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß\\[\\]]/i);\r\n\r\n    }\r\n\r\n\r\n}","import { QuickFix } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyCodeActionProvider implements monaco.languages.CodeActionProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideCodeActions(model: monaco.editor.ITextModel, range: monaco.Range, context: monaco.languages.CodeActionContext, token: monaco.CancellationToken): monaco.languages.CodeActionList | Promise<monaco.languages.CodeActionList> {\r\n        const actions = context.markers.map(error => {\r\n            let quickFix: QuickFix = <any>error.relatedInformation;\r\n            if (quickFix == null) return null;\r\n\r\n            let codeAction: monaco.languages.CodeAction = {\r\n                title: quickFix.title,\r\n                diagnostics: [error],\r\n                kind: \"quickfix\",\r\n                edit: {\r\n                    edits: quickFix.editsProvider(model.uri)\r\n                },\r\n                isPreferred: true\r\n            };\r\n            return codeAction;\r\n        });\r\n        return {\r\n            actions: actions,\r\n            dispose: () => { }\r\n        }\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Editor } from \"./Editor.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyReferenceProvider implements monaco.languages.ReferenceProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideReferences(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.ReferenceContext, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Location[]> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) return null;\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let referencePositions: monaco.languages.Location[] = [];\r\n\r\n        usagePositions.forEach((upInCurrentModule, module) => {\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    referencePositions.push(\r\n                        {\r\n                            uri: module.uri,\r\n                            range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length }\r\n                        });\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        return referencePositions;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import { Main } from \"../Main.js\";\r\n\r\nexport type HelperDirection = \"top\" | \"bottom\" | \"left\" | \"right\";\r\n\r\nexport class Helper {\r\n\r\n    public static openHelper(text: string, targetElement: JQuery<HTMLElement>, direction: HelperDirection) {\r\n\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.removeClass(['jo_arrow_box_left', 'jo_arrow_box_right', 'jo_arrow_box_top', 'jo_arrow_box_bottom']);\r\n\r\n        $helper.addClass('jo_arrow_box_' + direction);\r\n\r\n        $helper.css({ left: '', right: '', top: '', bottom: '' });\r\n\r\n        let to = targetElement.offset();\r\n        let b = jQuery('body');\r\n\r\n        let delta: number = 34;\r\n\r\n        switch (direction) {\r\n            case \"bottom\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                bottom: b.height() - to.top + delta\r\n            });\r\n                break;\r\n            case \"top\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                top: to.top + targetElement.height() + 26\r\n            });\r\n                break;\r\n            case \"left\": $helper.css({\r\n                left: to.left + targetElement.width() + delta,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n            case \"right\": $helper.css({\r\n                right: b.width() - to.left,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n        }\r\n\r\n        $helper.find('span').html(text);\r\n\r\n        let $button = $helper.find('.jo_button');\r\n        $button.on('click', (e) => {\r\n            e.stopPropagation();\r\n            $button.off('click');\r\n            Helper.close();\r\n        });\r\n\r\n        $helper.fadeIn(800);\r\n\r\n    }\r\n\r\n    static close() {\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.fadeOut(800);\r\n    }\r\n\r\n\r\n    static showHelper(id: string, mainBase: Main, $element?: JQuery<HTMLElement>) {\r\n\r\n        let main: Main;\r\n        if(mainBase instanceof Main){\r\n            main = mainBase;\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        let helperHistory = main.user.settings!.helperHistory;\r\n\r\n        let flag = id + \"Done\";\r\n\r\n        if (helperHistory != null && (helperHistory[flag] == null || !helperHistory[flag])) {\r\n            helperHistory[flag] = true;\r\n            main.networkManager.sendUpdateUserSettings(() => { });\r\n\r\n            let text: string = \"\";\r\n            let direction: HelperDirection = \"left\";\r\n\r\n            switch (id) {\r\n                case \"newDatabaseHelper\":\r\n                    text = `Es gibt noch keine Datenbank. <br> Nutzen Sie den Button\r\n                        <span class='img_add-database-dark jo_inline-image'></span> um eine Datenbank anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                    case \"newSQLFileHelper\":\r\n                        text = `Es gibt noch keine Datei mit SQL-Anweisungen. <br> Nutzen Sie den Button \r\n                            <span class='img_add-file-dark jo_inline-image'></span> um eine neue Datei anzulegen.\r\n                            `;\r\n                        direction = \"left\";\r\n                        break;\r\n                case \"homeButtonHelper\":\r\n                    text = \"Mit dem Home-Button <span class='img_home-dark jo_inline-image'></span> können Sie wieder zu Ihren eigenen Workspaces wechseln.\";\r\n                    direction = \"top\";\r\n                    $element = jQuery('.img_home-dark');\r\n                    break;\r\n                case \"playButtonHelper\":\r\n                    text = `Mit dem \"Start-Button\"\r\n                        (<span class='img_start-dark jo_inline-image'></span>) \r\n                        oder der Tastenkombination &lt;Strg&gt;&nbsp;+&nbsp&lt;Enter&gt; \r\n                        wird die Anweisung ausgeführt, in der der Cursor gerade steht. \r\n                        <br> Wollen Sie mehrere Anweisungen hintereinander ausführen, so markieren \r\n                        Sie alle Anweisungen und klicken Sie dann auf <span class='img_start-dark jo_inline-image'></span>\r\n                        oder drücken Sie  &lt;Strg&gt;&nbsp;+&nbsp&lt;Enter&gt;. `;\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"consoleHelper\": \r\n                    text=`\r\n                        Hier können Sie Anweisungen oder Terme eingeben, die nach Bestätigung mit der Enter-Taste ausgeführt/ausgewertet werden. Das Ergebnis sehen Sie im Bereich über der Eingabezeile. <br>\r\n                        Falls das Programm gerade pausiert (z.B. bei Ausführung in Einzelschritten) können Sie auch auf die Variablen des aktuellen Sichtbarkeitsbereiches zugreifen.\r\n                    `;\r\n                    direction = \"bottom\";\r\n            }\r\n\r\n            if (text != \"\" && $element != null && $element.length > 0) {\r\n                Helper.openHelper(text, $element, direction);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MyCompletionItemProvider } from \"./MyCompletionItemProvider.js\";\r\nimport { defineMyJava } from \"./MyJava.js\";\r\nimport { MySignatureHelpProvider } from \"./MySignatureHelpProvider.js\";\r\nimport { MyHoverProvider } from \"./MyHoverProvider.js\";\r\nimport { MyCodeActionProvider } from \"./MyCodeActionProvider.js\";\r\nimport { MyReferenceProvider } from \"./MyReferenceProvider.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { defineVscSQL } from \"./VscSql.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\nexport class Editor {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n\r\n    cw: monaco.editor.IContentWidget = null;\r\n\r\n    dontPushNextCursorMove: number = 0;\r\n\r\n    constructor(public main: MainBase, private showMinimap: boolean, private isEmbedded: boolean) {\r\n    }\r\n\r\n    initGUI($element: JQuery<HTMLElement>) {\r\n\r\n\r\n\r\n        defineVscSQL();\r\n\r\n        monaco.editor.defineTheme('myCustomThemeDark', {\r\n            base: 'vs-dark', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'functions', foreground: 'dcdcaa', fontStyle: 'italic' },\r\n                { token: 'string.sql', foreground: '3DC9B0' },\r\n                { token: 'number', foreground: '7bef3f' },\r\n                { token: 'type', foreground: '499cd6' },\r\n                { token: 'identifier', foreground: 'effefe' },\r\n                { token: 'statement', foreground: '9cdcfe', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '619ceb', fontStyle: 'bold' },\r\n                { token: 'table', foreground: 'ff0000', fontStyle: 'bold' },\r\n                { token: 'delimiter', foreground: 'e8eb38' }\r\n                // { token: 'comment.js', foreground: '008800', fontStyle: 'bold italic underline' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#1e1e1e\",\r\n                \"jo_highlightStatementGreen\": \"#004000\",\r\n                \"jo_highlightStatementYellow\": \"#404000\",\r\n                \"jo_highlightStatementRed\": \"#402020\"\r\n            }\r\n        });\r\n\r\n        monaco.editor.defineTheme('myCustomThemeLight', {\r\n            base: 'vs', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'functions', foreground: '694E16', fontStyle: 'italic bold' },\r\n                { token: 'string.sql', foreground: 'a03030' },\r\n                { token: 'number', foreground: '404040' },\r\n                { token: 'type', foreground: '0000ff', fontStyle: 'bold' },\r\n                { token: 'identifier', foreground: '8000e0' },\r\n                { token: 'statement', foreground: '001080', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '00a000', fontStyle: 'bold' },\r\n                { token: 'comment', foreground: '808080', fontStyle: 'italic' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#FFFFFF\",\r\n                \"editor.foreground\": \"#000000\",\r\n                \"editor.inactiveSelectionBackground\": \"#E5EBF1\",\r\n                \"editorIndentGuide.background\": \"#D3D3D3\",\r\n                \"editorIndentGuide.activeBackground\": \"#939393\",\r\n                \"editor.selectionHighlightBackground\": \"#ADD6FF80\",\r\n                \"editorSuggestWidget.background\": \"#F3F3F3\",\r\n                \"activityBarBadge.background\": \"#007ACC\",\r\n                \"sideBarTitle.foreground\": \"#6F6F6F\",\r\n                \"list.hoverBackground\": \"#E8E8E8\",\r\n                \"input.placeholderForeground\": \"#767676\",\r\n                \"searchEditor.textInputBorder\": \"#CECECE\",\r\n                \"settings.textInputBorder\": \"#CECECE\",\r\n                \"settings.numberInputBorder\": \"#CECECE\",\r\n                \"statusBarItem.remoteForeground\": \"#FFF\",\r\n                \"statusBarItem.remoteBackground\": \"#16825D\",\r\n                \"jo_highlightStatementGreen\": \"#004000\",\r\n                \"jo_highlightStatementYellow\": \"#404000\",\r\n                \"jo_highlightStatementRed\": \"#400000\"\r\n            }\r\n        });\r\n\r\n\r\n        this.editor = monaco.editor.create($element[0], {\r\n            // value: [\r\n            //     'function x() {',\r\n            //     '\\tconsole.log(\"Hello world!\");',\r\n            //     '}'\r\n            // ].join('\\n'),\r\n            // language: 'myJava',\r\n            language: 'vscSQL',\r\n            lightbulb: {\r\n                enabled: true\r\n            },\r\n            // gotoLocation: {\r\n            //     multipleReferences: \"gotoAndPeek\"\r\n            // },\r\n            lineDecorationsWidth: 0,\r\n            peekWidgetDefaultFocus: \"tree\",\r\n            fixedOverflowWidgets: true,\r\n            quickSuggestions: true,\r\n            quickSuggestionsDelay: 10,\r\n            fontSize: 14,\r\n            fontFamily: \"Consolas, Roboto Mono\",\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            selectOnLineNumbers: false,\r\n            // selectionHighlight: false,\r\n            automaticLayout: true,\r\n            scrollBeyondLastLine: false,\r\n            occurrencesHighlight: false,\r\n            autoIndent: \"full\",\r\n            dragAndDrop: true,\r\n            formatOnType: true,\r\n            formatOnPaste: true,\r\n            suggestFontSize: 16,\r\n            suggestLineHeight: 22,\r\n            suggest: {\r\n                localityBonus: true,\r\n                insertMode: \"replace\"\r\n                // snippetsPreventQuickSuggestions: false\r\n            },\r\n            parameterHints: { enabled: true, cycle: true },\r\n            // //@ts-ignore\r\n            // contribInfo: {\r\n            //     suggestSelection: 'recentlyUsedByPrefix',\r\n            // },\r\n\r\n            mouseWheelZoom: this.isEmbedded,\r\n\r\n            minimap: {\r\n                enabled: this.showMinimap\r\n            },\r\n            scrollbar: {\r\n                vertical: 'auto',\r\n                horizontal: 'auto'\r\n            },\r\n            theme: \"myCustomThemeDark\",\r\n            // automaticLayout: true\r\n\r\n\r\n        }\r\n        );\r\n\r\n        let that = this;\r\n\r\n        let mouseWheelListener = (event: WheelEvent) => {\r\n            if (event.ctrlKey === true) {\r\n\r\n                that.changeEditorFontSize(Math.sign(event.deltaY), true);\r\n\r\n                event.preventDefault();\r\n            }\r\n        };\r\n\r\n\r\n        this.editor.onDidChangeConfiguration((event) => {\r\n            if (event.hasChanged(monaco.editor.EditorOption.fontInfo) && this.isEmbedded) {\r\n\r\n                this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n            }\r\n        });\r\n\r\n        this.editor.onDidChangeCursorPosition((event) => {\r\n\r\n            that.onDidChangeCursorPosition(event.position);\r\n\r\n        });\r\n\r\n        // We need this to set our model after user uses Strg+click on identifier\r\n        this.editor.onDidChangeModel((event) => {\r\n\r\n            let element: HTMLDivElement = <any>$element.find('.monaco-editor')[0];\r\n            element.removeEventListener(\"wheel\", mouseWheelListener);\r\n            element.addEventListener(\"wheel\", mouseWheelListener, { passive: false });\r\n\r\n            if (this.main.getCurrentWorkspace() == null) return;\r\n\r\n            let module = this.main.getCurrentWorkspace().getModuleByMonacoModel(this.editor.getModel());\r\n            if (this.main instanceof Main && module != null) {\r\n\r\n                this.main.projectExplorer.setActiveAfterExternalModelSet(module);\r\n            }\r\n        });\r\n\r\n        monaco.languages.registerHoverProvider('vscSQL', new MyHoverProvider(this));\r\n\r\n        monaco.languages.registerCompletionItemProvider('vscSQL', new MyCompletionItemProvider(this.main));\r\n        monaco.languages.registerCodeActionProvider('vscSQL', new MyCodeActionProvider(this.main));\r\n        monaco.languages.registerReferenceProvider('vscSQL', new MyReferenceProvider(this.main));\r\n\r\n\r\n        monaco.languages.registerSignatureHelpProvider('vscSQL', new MySignatureHelpProvider(this.main));\r\n\r\n        this.editor.onMouseDown((e: monaco.editor.IEditorMouseEvent) => {\r\n            const data = e.target.detail;\r\n            if (e.target.type !== monaco.editor.MouseTargetType.GUTTER_GLYPH_MARGIN &&\r\n                e.target.type !== monaco.editor.MouseTargetType.GUTTER_LINE_NUMBERS || data.isAfterLines) {\r\n                return;\r\n            }\r\n            that.onMarginMouseDown(e.target.position.lineNumber);\r\n            return;\r\n        });\r\n\r\n\r\n        // If editor is instantiated before fonts are loaded then indentation-lines\r\n        // are misplaced, see https://github.com/Microsoft/monaco-editor/issues/392\r\n        // so:\r\n        setTimeout(() => {\r\n            monaco.editor.remeasureFonts();\r\n        }, 2000);\r\n\r\n        this.addActions();\r\n\r\n        //@ts-ignore\r\n        this.editor.onDidType((text) => { that.onDidType(text) });\r\n\r\n        return this.editor;\r\n    }\r\n\r\n\r\n    onDidType(text: string) {\r\n        //        const endOfCommentText = \" * \\n */\";\r\n\r\n        const insertEndOfComment = (pos, insertText: string, newLine: number, newColumn: number) => {\r\n            const range = new monaco.Range(\r\n                pos.lineNumber,\r\n                pos.column,\r\n                pos.lineNumber,\r\n                pos.column\r\n            );\r\n            this.editor.executeEdits(\"new-bullets\", [\r\n                { range, text: insertText }\r\n            ]);\r\n\r\n            // Set position after bulletText\r\n            this.editor.setPosition({\r\n                lineNumber: newLine,\r\n                column: newColumn\r\n            });\r\n        };\r\n\r\n        if (text === \"\\n\") {\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            const prevLine = model.getLineContent(position.lineNumber - 1);\r\n            if (prevLine.trim().indexOf(\"/*\") === 0 && !prevLine.trimRight().endsWith(\"*/\")) {\r\n                const nextLine = position.lineNumber < model.getLineCount() ? model.getLineContent(position.lineNumber + 1) : \"\";\r\n                if (!nextLine.trim().startsWith(\"*\")) {\r\n                    let spacesAtBeginningOfLine: string = prevLine.substr(0, prevLine.length - prevLine.trimLeft().length);\r\n                    if (prevLine.trim().indexOf(\"/**\") === 0) {\r\n                        insertEndOfComment(position, \"\\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    } else {\r\n                        insertEndOfComment(position, \" * \\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    lastTime: number = 0;\r\n    setFontSize(fontSizePx: number) {\r\n\r\n        // console.log(\"Set font size: \" + fontSizePx);\r\n        let time = new Date().getTime();\r\n        if (time - this.lastTime < 150) return;\r\n        this.lastTime = time;\r\n\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (this.main instanceof Main) {\r\n            this.main.viewModeController.saveFontSize(fontSizePx);\r\n        }\r\n\r\n        if (fontSizePx != editorfs) {\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx\r\n            });\r\n\r\n            // editor does not set fontSizePx, but fontSizePx * zoomfactor with unknown zoom factor, so \r\n            // we have to do this dirty workaround:\r\n            let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n            let factor = newEditorfs / fontSizePx;\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx / factor\r\n            });\r\n\r\n        }\r\n\r\n        jQuery('.jo_editorFontSize').css('font-size', fontSizePx + \"px\");\r\n        jQuery('.jo_editorFontSize').css('line-height', (fontSizePx + 2) + \"px\");\r\n\r\n        document.documentElement.style.setProperty('--breakpoint-size', fontSizePx + 'px');\r\n        document.documentElement.style.setProperty('--breakpoint-radius', fontSizePx / 2 + 'px');\r\n\r\n\r\n        this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n    }\r\n\r\n    changeEditorFontSize(delta: number, dynamic: boolean = true) {\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (dynamic) {\r\n            if (editorfs < 10) {\r\n                delta *= 1;\r\n            } else if (editorfs < 20) {\r\n                delta *= 2;\r\n            } else {\r\n                delta *= 4;\r\n            }\r\n        }\r\n\r\n        let newEditorFs = editorfs + delta;\r\n        if (newEditorFs >= 6 && newEditorFs <= 80) {\r\n            this.setFontSize(newEditorFs);\r\n        }\r\n    }\r\n\r\n\r\n    addActions() {\r\n        let that = this;\r\n\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Find bracket',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'Finde korrespondierende Klammer',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.5,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                ed.getAction('editor.action.jumpToBracket').run();\r\n                return null;\r\n            }\r\n        });\r\n\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Execute statement',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'SQL-Anweisung ausführen',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.Enter],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.0,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                that.main.getActionManager().trigger('execute');\r\n                return null;\r\n            }\r\n        });\r\n\r\n        //console.log(this.editor.getSupportedActions());\r\n    }\r\n\r\n    onMarginMouseDown(lineNumber: number) {\r\n\r\n    }\r\n\r\n    elementDecoration: string[] = [];\r\n    onDidChangeCursorPosition(position: { lineNumber: number, column: number }) {\r\n\r\n        if (position == null) position = this.editor.getPosition();\r\n\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, []);\r\n            return;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        if (element != null) {\r\n            let usagePositions = element.usagePositions;\r\n            let upInCurrentModule = usagePositions.get(module);\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    decorations.push({\r\n                        range: { startColumn: up.column, startLineNumber: up.line, endColumn: up.column + up.length, endLineNumber: up.line },\r\n                        options: {\r\n                            className: 'jo_revealSyntaxElement', isWholeLine: false, overviewRuler: {\r\n                                color: { id: \"editorIndentGuide.background\" },\r\n                                darkColor: { id: \"editorIndentGuide.activeBackground\" },\r\n                                position: monaco.editor.OverviewRulerLane.Left\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        let executeActionActive = false;\r\n\r\n        for(let sqlStatement of module.getSQLSTatementsAtSelection(this.editor.getSelection())){\r\n\r\n            let classname = \"jo_highlightStatementGreen\";\r\n            if (sqlStatement != null) {\r\n                if (sqlStatement.hasErrors) {\r\n                    classname = \"jo_highlightStatementRed\";\r\n                    if (sqlStatement.acceptedBySQLite) {\r\n                        classname = \"jo_highlightStatementYellow\";\r\n                        executeActionActive = true;\r\n                    }\r\n                } else {\r\n                    executeActionActive = true;\r\n                }\r\n    \r\n                decorations.push({\r\n                    range: {\r\n                        startColumn: sqlStatement.from.column, startLineNumber: sqlStatement.from.line,\r\n                        endColumn: sqlStatement.to.column, endLineNumber: sqlStatement.to.line\r\n                    },\r\n                    options: {\r\n                        className: classname, isWholeLine: false, overviewRuler: {\r\n                            color: { id: classname },\r\n                            darkColor: { id: classname },\r\n                            position: monaco.editor.OverviewRulerLane.Left\r\n                        },\r\n                        minimap: {\r\n                            color: { id: classname },\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        },\r\n                        zIndex: -100\r\n                    }\r\n                })\r\n    \r\n            }\r\n        }\r\n\r\n\r\n        this.main.getActionManager().setActive('execute', executeActionActive);\r\n\r\n        if(executeActionActive && !this.main.isEmbedded()){\r\n            Helper.showHelper(\"playButtonHelper\", <any>this.main, jQuery('div.img_start-dark'));\r\n        }\r\n\r\n\r\n        this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, decorations);\r\n\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.main.getCurrentlyEditedModule();\r\n    }\r\n\r\n\r\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport function defineVscSQL() {\r\n    monaco.languages.register({\r\n        id: 'vscSQL',\r\n        extensions: ['.sql'],\r\n        //  mimetypes: [\"text/x-java-source\", \"text/x-java\"]  \r\n    });\r\n\r\n    let conf: monaco.languages.LanguageConfiguration = {\r\n        onEnterRules: [\r\n            {\r\n                // e.g. /** | */\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                afterText: /^\\s*\\*\\/$/,\r\n                action: { indentAction: monaco.languages.IndentAction.IndentOutdent, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g. /** ...|\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g.  * ...|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: '* ' }\r\n            },\r\n            {\r\n                // e.g.  */|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            },\r\n            {\r\n                // e.g.  *-----*/|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*[^/]*\\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            }\r\n        ],\r\n        comments: {\r\n            lineComment: '--',\r\n            blockComment: ['/*', '*/'],\r\n        },\r\n        brackets: [\r\n            ['{', '}'],\r\n            ['[', ']'],\r\n            ['(', ')']\r\n        ],\r\n        autoClosingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ],\r\n        surroundingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ]\r\n    };\r\n    let language = {\r\n\r\n        defaultToken: '',\r\n        tokenPostfix: '.sql',\r\n        ignoreCase: true,\r\n        brackets: [\r\n            { open: '[', close: ']', token: 'delimiter.square' },\r\n            { open: '(', close: ')', token: 'delimiter.parenthesis' }\r\n        ],\r\n        escapes: /\\\\(?:[abfnrtv\\\\\"'])/,\r\n        keywords: [\r\n            \"ABORT\", \"ACTION\", \"ADD\", \"AFTER\", \"ALL\", \"ALTER\", \"ANALYZE\", \"AND\", \"AS\", \"ASC\", \"ATTACH\", \"AUTOINCREMENT\", \"BEFORE\",\r\n            \"BEGIN\", \"BETWEEN\", \"BY\", \"CASCADE\", \"CASE\", \"CAST\", \"CHECK\", \"COLLATE\", \"COLUMN\", \"COMMIT\", \"CONFLICT\", \"CONSTRAINT\",\r\n            \"CREATE\", \"CROSS\", \"CURRENT_DATE\", \"CURRENT_TIME\", \"CURRENT_TIMESTAMP\", \"DATABASE\", \"DEFAULT\", \"DEFERRABLE\", \"DEFERRED\",\r\n            \"DELETE\", \"DESC\", \"DETACH\", \"DISTINCT\", \"DROP\", \"EACH\", \"ELSE\", \"END\", \"ESCAPE\", \"EXCEPT\", \"EXCLUSIVE\", \"EXISTS\", \"EXPLAIN\",\r\n            \"FAIL\", \"FOR\", \"FOREIGN\", \"FROM\", \"FULL\", \"GLOB\", \"GROUP\", \"HAVING\", \"IF\", \"IGNORE\", \"IMMEDIATE\", \"IN\", \"INDEX\", \"INDEXED\",\r\n            \"INITIALLY\", \"INNER\", \"INSERT\", \"INSTEAD\", \"INTERSECT\", \"INTO\", \"IS\", \"ISNULL\", \"JOIN\", \"KEY\", \"LEFT\", \"LIKE\", \"LIMIT\", \"MATCH\",\r\n            \"NATURAL\", \"NO\", \"NOT\", \"NOTNULL\", \"NULL\", \"OF\", \"OFFSET\", \"ON\", \"OR\", \"ORDER\", \"OUTER\", \"PLAN\", \"PRAGMA\", \"PRIMARY\", \"QUERY\",\r\n            \"RAISE\", \"RECURSIVE\", \"REFERENCES\", \"REGEXP\", \"REINDEX\", \"RELEASE\", \"RENAME\", \"REPLACE\", \"RESTRICT\", \"RIGHT\", \"ROLLBACK\", \"ROW\",\r\n            \"SAVEPOINT\", \"SELECT\", \"SET\", \"TABLE\", \"TEMP\", \"TEMPORARY\", \"THEN\", \"TO\", \"TRANSACTION\", \"TRIGGER\", \"UNION\", \"UNIQUE\", \"UPDATE\",\r\n            \"USING\", \"VACUUM\", \"VALUES\", \"VIEW\", \"VIRTUAL\", \"WHEN\", \"WHERE\", \"WITH\", \"WITHOUT\", \"ENGINE\", \"CHARSET\"\r\n        ],\r\n        operators: [\r\n            \"AND\", \"BETWEEN\", \"IN\", \"LIKE\", \"NOT\", \"OR\", \"IS\", \"NULL\", \"INTERSECT\", \"UNION\", \"INNER\", \"JOIN\", \"LEFT\", \"OUTER\", \"RIGHT\"\r\n        ],\r\n        builtinFunctions: [\r\n            \"abs\", \"changes\", \"char\", \"coalesce\", \"count\", \"glob\", \"hex\", \"ifnull\",\r\n            \"iif\", \"instr\", \"last_insert_rowid\", \"length\", \"like\", \"likelihood\", \"likely\",\r\n            \"lower\", \"ltrim\", \"max\", \"min\", \"nullif\", \"quote\", \"random\", \"randomblob\",\r\n            \"replace\", \"round\", \"rtrim\", \"sign\", \"soundex\", \"sqlite_version\", \"substr\", \"substring\",\r\n            \"total_changes\", \"trim\", \"typeof\", \"unicode\", \"unlikely\", \"upper\", \"zeroblob\"\r\n        ],\r\n        builtinVariables: [\r\n            // NOT SUPPORTED\r\n        ],\r\n        pseudoColumns: [\r\n            // NOT SUPPORTED\r\n        ],\r\n        tokenizer: {\r\n            root: [\r\n                { include: '@comments' },\r\n                { include: '@whitespace' },\r\n                { include: '@pseudoColumns' },\r\n                { include: '@numbers' },\r\n                { include: '@strings' },\r\n                { include: '@complexIdentifiers' },\r\n                { include: '@scopes' },\r\n                [/[;,.]/, 'delimiter'],\r\n                [/[()]/, '@brackets'],\r\n                [/[a-z_$äöü][\\w$äöüßÄÖÜ]*(?=\\()/, {\r\n                    cases: {\r\n                        '@builtinFunctions': 'functions',\r\n                        '@keywords': 'keyword',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[\\w@#$]+/, {\r\n                    cases: {\r\n                        '@keywords': 'keyword',\r\n                        '@operators': 'operator',\r\n                        '@builtinVariables': 'predefined',\r\n                        // '@builtinFunctions': 'functions',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[<>=!%&+\\-*/|~^]/, 'operator'],\r\n            ],\r\n            whitespace: [\r\n                [/\\s+/, 'white']\r\n            ],\r\n            comments: [\r\n                [/--+.*/, 'comment'],\r\n                [/\\/\\*/, { token: 'comment.quote', next: '@comment' }]\r\n            ],\r\n            comment: [\r\n                [/[^*/]+/, 'comment'],\r\n                // Not supporting nested comments, as nested comments seem to not be standard?\r\n                // i.e. http://stackoverflow.com/questions/728172/are-there-multiline-comment-delimiters-in-sql-that-are-vendor-agnostic\r\n                // [/\\/\\*/, { token: 'comment.quote', next: '@push' }],    // nested comment not allowed :-(\r\n                [/\\*\\//, { token: 'comment.quote', next: '@pop' }],\r\n                [/./, 'comment']\r\n            ],\r\n            pseudoColumns: [\r\n                [/[$][A-Za-z_][\\w@#$]*/, {\r\n                    cases: {\r\n                        '@pseudoColumns': 'predefined',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n            ],\r\n            numbers: [\r\n                [/0[xX][0-9a-fA-F]*/, 'number'],\r\n                [/[$][+-]*\\d*(\\.\\d*)?/, 'number'],\r\n                [/((\\d+(\\.\\d*)?)|(\\.\\d+))([eE][\\-+]?\\d+)?/, 'number']\r\n            ],\r\n            strings: [\r\n                [/'/, { token: 'string', next: '@string' }],\r\n            ],\r\n            string: [\r\n                [/[^\\\\']+/, 'string'],\r\n                [/\\\\./, 'string.escape.invalid'],\r\n                [/''/, 'string'],\r\n                [/'/, { token: 'string', next: '@pop' }]\r\n            ],\r\n            complexIdentifiers: [\r\n                [/\"/, { token: 'identifier.quote', next: '@quotedIdentifier' }]\r\n            ],\r\n            quotedIdentifier: [\r\n                [/[^\"]+/, 'identifier'],\r\n                [/\"\"/, 'identifier'],\r\n                [/\"/, { token: 'identifier.quote', next: '@pop' }]\r\n            ],\r\n            scopes: [\r\n                // NOT SUPPORTED\r\n            ]\r\n        }\r\n\r\n\r\n\r\n    };\r\n\r\n    //@ts-ignore\r\n    monaco.languages.setLanguageConfiguration('vscSQL', conf);\r\n    //@ts-ignore\r\n    monaco.languages.setMonarchTokensProvider('vscSQL', language);\r\n\r\n\r\n\r\n}","import { Lexer } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Token, TokenList, TokenType, tokenListToString } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class Formatter implements monaco.languages.DocumentFormattingEditProvider,\r\n    monaco.languages.OnTypeFormattingEditProvider {\r\n\r\n    autoFormatTriggerCharacters: string[] = ['\\n'];\r\n\r\n    displayName?: string = \"Java-Autoformat\";\r\n\r\n\r\n    constructor(\r\n        // private main: Main\r\n    ) {\r\n\r\n    }\r\n\r\n    init() {\r\n        monaco.languages.registerDocumentFormattingEditProvider('myJava', this);\r\n        monaco.languages.registerOnTypeFormattingEditProvider('myJava', this);\r\n    }\r\n\r\n    provideOnTypeFormattingEdits(model: monaco.editor.ITextModel, position: monaco.Position, ch: string, options: monaco.languages.FormattingOptions, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n    deleteOverlappingRanges(edits: monaco.languages.TextEdit[]) {\r\n        for (let i = 0; i < edits.length - 1; i++) {\r\n            let e = edits[i];\r\n            let e1 = edits[i + 1];\r\n            if (e.range.endLineNumber < e1.range.startLineNumber) continue;\r\n            if (e.range.endLineNumber == e1.range.startLineNumber) {\r\n                if (e.range.endColumn >= e1.range.startColumn) {\r\n                    edits.splice(i + 1, 1);\r\n                } else {\r\n                    if (e.range.endColumn == 0 && e.text.length > 0 && e1.range.startColumn == 1 && e1.range.endColumn > e1.range.startColumn && e1.text == \"\") {\r\n                        let delta = e.text.length - (e1.range.endColumn - e1.range.startColumn);\r\n                        if (delta > 0) { \r\n                            e.text = e.text.substr(0, delta);\r\n                            edits.splice(i+1, 1);\r\n                        }\r\n                        else if (delta < 0)\r\n                        { \r\n                            //@ts-ignore\r\n                            e1.range.endColumn = e1.range.startColumn - delta;\r\n                            edits.splice(i, 1);\r\n                            i--;\r\n\r\n                         }\r\n                        else {\r\n                            edits.splice(i, 2);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    provideDocumentFormattingEdits(model: monaco.editor.ITextModel,\r\n        options: monaco.languages.FormattingOptions,\r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n\r\n    format(model: monaco.editor.ITextModel): monaco.languages.TextEdit[] {\r\n\r\n        let edits: monaco.languages.TextEdit[] = [];\r\n\r\n        // if (this.main.currentWorkspace == null || this.main.currentWorkspace.currentlyOpenModule == null) {\r\n        //     return [];\r\n        // }\r\n\r\n        // let text = this.main.monaco_editor.getValue({ preserveBOM: false, lineEnding: \"\\n\" });\r\n\r\n        let text = model.getValue(monaco.editor.EndOfLinePreference.LF);\r\n\r\n        let tokenlist = new Lexer().lex(text).tokens;\r\n\r\n        // let tokenlist = this.main.currentWorkspace.currentlyOpenModule.tokenList;\r\n\r\n        if (tokenlist == null) return [];\r\n\r\n        // TODO:\r\n        // { at the end of line, with one space before; followed only by spaces and \\n\r\n        // indent lines according to { and }\r\n        // Beware: int i[] = { ... }\r\n        // exactly one space before/after binary operators\r\n        // no space after ( and no space before )\r\n        // (   ) -> ()\r\n        // (  ()) -> (())\r\n        // (()  ) -> (())\r\n\r\n        let lastNonSpaceToken: Token = null;\r\n        let indentLevel = 0;\r\n        let tabSize = 3;\r\n        let curlyBracesOpenAtLines: number[] = [];\r\n        let indentLevelAtSwitchStatements: number[] = [];\r\n        let switchHappend: boolean = false;\r\n        let lastTokenWasNewLine: number = 0;\r\n        let roundBracketsOpen: number = 0;\r\n\r\n        for (let i = 0; i < tokenlist.length; i++) {\r\n\r\n            let t = tokenlist[i];\r\n            lastTokenWasNewLine--;\r\n\r\n            switch (t.tt) {\r\n\r\n                case TokenType.leftCurlyBracket:\r\n                    if (switchHappend) {\r\n                        switchHappend = false;\r\n                        indentLevelAtSwitchStatements.push(indentLevel + 2);\r\n                        indentLevel++;\r\n                    }\r\n                    indentLevel++;\r\n                    curlyBracesOpenAtLines.push(t.position.line);\r\n                    if (lastNonSpaceToken != null) {\r\n                        let tt = lastNonSpaceToken.tt;\r\n                        if (tt == TokenType.rightBracket || tt == TokenType.identifier || tt == TokenType.leftRightSquareBracket) {\r\n                            this.replaceBetween(lastNonSpaceToken, t, edits, \" \");\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let token1 = tokenlist[i + 1];\r\n                        if (token1.tt != TokenType.newline && token1.tt != TokenType.space) {\r\n                            this.insertSpaces(edits, token1.position.line, token1.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    if (indentLevelAtSwitchStatements[indentLevelAtSwitchStatements.length - 1] == indentLevel) {\r\n                        indentLevelAtSwitchStatements.pop();\r\n                        indentLevel--;\r\n                        // if(t.position.column >= 3){\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                        // }    \r\n                    }\r\n                    indentLevel--;\r\n                    let openedAtLine = curlyBracesOpenAtLines.pop();\r\n                    if (openedAtLine != null && openedAtLine != t.position.line) {\r\n                        if (lastNonSpaceToken != null && lastNonSpaceToken.position.line == t.position.line) {\r\n                            this.replace(edits, t.position, t.position, \"\\n\" + \" \".repeat(indentLevel * tabSize));\r\n                        }\r\n                    } else {\r\n                        if (i > 0) {\r\n                            let token1 = tokenlist[i - 1];\r\n                            if (token1.tt != TokenType.space && token1.tt != TokenType.newline) {\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    roundBracketsOpen++;\r\n                    if (i < tokenlist.length - 2) {\r\n                        let nextToken1 = tokenlist[i + 1];\r\n                        let nextToken2 = tokenlist[i + 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                            i++;\r\n                            if (nextToken2.tt == TokenType.rightBracket) {\r\n                                i++;\r\n                                roundBracketsOpen--;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt == TokenType.space && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line, lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    roundBracketsOpen--;\r\n                    if (i > 1) {\r\n                        let nextToken1 = tokenlist[i - 1];\r\n                        let nextToken2 = tokenlist[i - 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.newline:\r\n                    lastTokenWasNewLine = 2;\r\n                    if (i < tokenlist.length - 2) {\r\n\r\n                        let lastTokenIsOperator = this.isBinaryOperator(lastNonSpaceToken?.tt);\r\n                        let nextTokenIsOperator = this.isBinaryOperator(this.getNextNonSpaceToken(i, tokenlist).tt);\r\n\r\n                        let beginNextLine = tokenlist[i + 1];\r\n                        let token2 = tokenlist[i + 2];\r\n                        let currentIndentation = 0;\r\n\r\n                        if (beginNextLine.tt == TokenType.newline) {\r\n                            break;\r\n                        }\r\n\r\n                        let delta: number = 0;\r\n                        if (beginNextLine.tt == TokenType.space) {\r\n                            if (token2.tt == TokenType.newline) {\r\n                                break;\r\n                            }\r\n                            currentIndentation = beginNextLine.position.length;\r\n                            i++;\r\n                            if (token2.tt == TokenType.rightCurlyBracket) {\r\n                                delta = -1;\r\n                            }\r\n                        }\r\n\r\n                        if (beginNextLine.tt == TokenType.rightCurlyBracket) {\r\n                            delta = -1;\r\n                            // indentLevel--;\r\n                            // curlyBracesOpenAtLines.pop();\r\n                            // lastNonSpaceToken = beginNextLine;\r\n                            // i++;\r\n                        }\r\n\r\n                        if(nextTokenIsOperator || lastTokenIsOperator) delta = 1;\r\n\r\n                        let il = indentLevel + delta;\r\n                        if(roundBracketsOpen > 0){\r\n                            il++;\r\n                        }\r\n                        if (il < 0) il = 0;\r\n\r\n                        let correctIndentation = il * tabSize;\r\n\r\n                        if (correctIndentation > currentIndentation) {\r\n                            this.insertSpaces(edits, t.position.line + 1, 0, correctIndentation - currentIndentation);\r\n                        } else if (correctIndentation < currentIndentation) {\r\n                            this.deleteSpaces(edits, t.position.line + 1, 0, currentIndentation - correctIndentation);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.space:\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment) {\r\n                            if (i > 0) {\r\n                                let lastToken = tokenlist[i - 1];\r\n                                if (lastToken.tt != TokenType.newline) {\r\n                                    if (t.position.length > 1) {\r\n                                        this.deleteSpaces(edits, t.position.line, t.position.column, t.position.length - 1);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.comma:\r\n                case TokenType.semicolon:\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt != TokenType.newline && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.tt == TokenType.space && lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line,\r\n                                    lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment && nextToken.tt != TokenType.space && nextToken.tt != TokenType.newline) {\r\n                            this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightSquareBracket:\r\n                    if (lastNonSpaceToken != null && lastNonSpaceToken.tt == TokenType.leftSquareBracket) {\r\n                        this.replaceBetween(lastNonSpaceToken, t, edits, \"\");\r\n\r\n                    }\r\n                    break;\r\n\r\n            }\r\n\r\n            // binary operator?\r\n            if (this.isBinaryOperator(t.tt)) {\r\n\r\n                let lowerGeneric = t.tt == TokenType.lower && this.lowerBelongsToGenericExpression(i, tokenlist);\r\n                let greaterGeneric = t.tt == TokenType.greater && this.greaterBelongsToGenericExpression(i, tokenlist);\r\n\r\n                if (lastTokenWasNewLine <= 0 && lastNonSpaceToken != null && [TokenType.leftBracket, TokenType.comma].indexOf(lastNonSpaceToken.tt) < 0) {\r\n\r\n                    if (i > 0) {\r\n                        let tokenBefore = tokenlist[i - 1];\r\n                        let spaces = (lowerGeneric || greaterGeneric) ? 0 : 1;\r\n                        if (tokenBefore.tt == TokenType.space) {\r\n                            if (tokenBefore.position.length != spaces) {\r\n                                this.insertSpaces(edits, tokenBefore.position.line,\r\n                                    tokenBefore.position.column, spaces - tokenBefore.position.length);\r\n                            }\r\n                        } else {\r\n                            if (spaces == 1)\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        let spaces = (lowerGeneric) ? 0 : 1;\r\n                        if (nextToken.tt == TokenType.space) {\r\n                            if (greaterGeneric && i < tokenlist.length - 2 && tokenlist[i + 2].tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (nextToken.position.length != spaces) {\r\n                                this.insertSpaces(edits, nextToken.position.line,\r\n                                    nextToken.position.column, spaces - nextToken.position.length);\r\n                            }\r\n                        } else {\r\n                            if (greaterGeneric && nextToken.tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (spaces == 1) this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            if (t.tt != TokenType.space && t.tt != TokenType.newline) {\r\n                lastNonSpaceToken = t;\r\n            }\r\n\r\n        }\r\n\r\n        this.deleteOverlappingRanges(edits);\r\n\r\n        return edits;\r\n\r\n    }\r\n    getNextNonSpaceToken(currentIndex: number, tokenlist: TokenList):  Token {\r\n\r\n        if(currentIndex == tokenlist.length - 1) return tokenlist[currentIndex];\r\n\r\n        let j = currentIndex + 1;\r\n        while(j < tokenlist.length - 1 && (tokenlist[j].tt == TokenType.space )){\r\n            j++;\r\n        }\r\n        return tokenlist[j];\r\n\r\n    }\r\n\r\n    lowerBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position + 1;\r\n        while (i < tokenlist.length) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.greater) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i++;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    greaterBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position - 1;\r\n        while (i >= 0) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.lower) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i--;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isBinaryOperator(token: TokenType) {\r\n        return token != null && token >= TokenType.modulo && token <= TokenType.equal;\r\n    }\r\n\r\n    private replaceBetween(lastNonSpaceToken: Token, t: Token, edits: monaco.languages.TextEdit[], text: string) {\r\n        let positionFrom = {\r\n            line: lastNonSpaceToken.position.line,\r\n            column: lastNonSpaceToken.position.column + lastNonSpaceToken.position.length\r\n        };\r\n        let positionTo = {\r\n            line: t.position.line,\r\n            column: t.position.column\r\n        };\r\n        if (positionFrom.line != positionTo.line ||\r\n            positionTo.column - positionFrom.column != text.length) {\r\n            this.replace(edits, positionFrom, positionTo, text);\r\n        }\r\n    }\r\n\r\n    deleteSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column + numberOfSpaces + (column == 0 ? 1 : 0),\r\n                endLineNumber: line\r\n            },\r\n            text: \"\"\r\n        });\r\n    }\r\n\r\n    insertSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n\r\n        if (numberOfSpaces < 0) {\r\n            this.deleteSpaces(edits, line, column, -numberOfSpaces);\r\n            return;\r\n        }\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column,\r\n                endLineNumber: line\r\n            },\r\n            text: \" \".repeat(numberOfSpaces)\r\n        });\r\n    }\r\n\r\n    replace(edits: monaco.languages.TextEdit[], positionFrom: { line: number; column: number; }, positionTo: { line: number; column: number; }, text: string) {\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: positionFrom.column,\r\n                startLineNumber: positionFrom.line,\r\n                endColumn: positionTo.column,\r\n                endLineNumber: positionTo.line\r\n            },\r\n            text: text\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","export class WorkerSim {\n\n    //@ts-ignore\n    initsql = initSqlJs({locateFile: (path, scriptDirectory) => \"https://embed.learn-sql.de/include/lib/sql.js/sql-wasm.wasm\"});\n    db;\n    SQL;\n\n    onmessage: (event: {data: any}) => void;\n\n    onError: (event: ErrorEvent) => void;\n\n    postMessageToClient(message: any) {\n        this.onmessage({data: message})\n    }\n\n    postMessage(data: any){\n        let that = this;\n        if (that.db == null) {\n            that.initsql.then((SQL1) => {\n                that.SQL = SQL1;\n                that.db = createDb(SQL1, undefined);\n                that.worker(data);\n            }).catch((err) => {\n                console.log(err);\n                //@ts-ignore\n                return that.postMessageToClient({\n                    id: this[\"data\"][\"id\"],\n                    error: err[\"message\"]\n                });\n            })\n        } else {\n            that.worker(data);\n        }\n    }\n\n    terminate() {\n\n    }\n\n    worker(data: any) {\n        var buff; var result;\n        var config = data[\"config\"] ? data[\"config\"] : {};\n        try {\n            switch (data && data[\"action\"]) {\n                case \"open\":\n                    buff = data[\"buffer\"];\n                    this.db = createDb(this.SQL, buff && new Uint8Array(buff));\n                    //@ts-ignore\n                    return this.postMessageToClient({\n                        id: data[\"id\"],\n                        ready: true\n                    });\n                case \"exec\":\n                    if (this.db === null) {\n                        this.db = createDb(this.SQL, undefined);\n                    }\n                    if (!data[\"sql\"]) {\n                        throw \"exec: Missing query string\";\n                    }\n                    //@ts-ignore\n                    return this.postMessageToClient({\n                        id: data[\"id\"],\n                        results: this.db.exec(data[\"sql\"], data[\"params\"], config)\n                    });\n                case \"each\":\n                    if (this.db === null) {\n                        this.db = createDb(this.SQL, undefined);\n                    }\n                    var callback = function callback(row) {\n                        //@ts-ignore\n                        return this.postMessage({\n                            id: data[\"id\"],\n                            row: row,\n                            finished: false\n                        });\n                    };\n                    var done = function done() {\n                        //@ts-ignore\n                        return this.postMessage({\n                            id: data[\"id\"],\n                            finished: true\n                        });\n                    };\n                    return this.db.each(data[\"sql\"], data[\"params\"], callback, done, config);\n                case \"export\":\n                    buff = this.db[\"export\"]();\n                    result = {\n                        id: data[\"id\"],\n                        results: [\n                            {\n                                buffer: buff\n                            }\n                        ]\n                    };\n                    try {\n                        //@ts-ignore\n                        return this.postMessageToClient(result);\n                    } catch (error) {\n                        //@ts-ignore\n                        return this.postMessageToClient(result);\n                    }\n                case \"close\":\n                    if (this.db) {\n                        this.db.close();\n                    }\n                    //@ts-ignore\n                    return this.postMessageToClient({\n                        id: data[\"id\"]\n                    });\n                default:\n                    throw new Error(\"Invalid action : \" + (data && data[\"action\"]));\n            }\n\n        } catch (err) {\n\n            //@ts-ignore\n            return this.postMessageToClient({\n                id: data[\"id\"],\n                error: err[\"message\"]\n            });\n        }\n\n    }\n\n\n}\n\n\n\n\n\n","import { MainBase } from \"../main/MainBase.js\";\r\nimport { WorkerSim } from \"../sqljs-worker/sqljsWorkerSim.js\";\r\n\r\nexport type DatabaseDumpType = \"binaryUncompressed\" | \"binaryCompressed\" | \"other\";\r\n\r\nexport type DatabaseDirectoryEntry = {\r\n    name: string,\r\n    description: string,\r\n    filename: string\r\n}\r\n\r\nexport type QueryResult = {\r\n    columns: string[],\r\n    values: any[][],\r\n    buffer?: Uint8Array\r\n}\r\n\r\nexport type QuerySuccessCallback = (results: QueryResult[]) => void;\r\nexport type QueryErrorCallback = (error: string) => void;\r\n\r\nexport type ColumnStructure = {\r\n    name: string;\r\n    table: TableStructure;\r\n\r\n    typeLengths?: number[]; // for varchar(5), ...\r\n    completeTypeSQL: string;\r\n\r\n    references?: ColumnStructure;\r\n    referencesRawData?: any[];\r\n    isPrimaryKey: boolean;\r\n    isAutoIncrement: boolean;\r\n\r\n    notNull: boolean;\r\n    defaultValue: string;\r\n\r\n    dumpValueFunction?: (any) => string\r\n}\r\n\r\nexport type TableStructure = {\r\n    name: string;\r\n    size: number;\r\n    columns: ColumnStructure[];\r\n    completeSQL: string;\r\n}\r\n\r\nexport type DatabaseStructure = {\r\n    tables: TableStructure[]\r\n}\r\n\r\n\r\nexport class DatabaseTool {\r\n\r\n    databaseDirectoryEntries: DatabaseDirectoryEntry[] = null;\r\n\r\n    worker: Worker;\r\n\r\n    queryId: number = 0;\r\n\r\n    querySuccessCallbacksMap: Map<number, QuerySuccessCallback> = new Map();\r\n    queryErrorCallbackMap: Map<number, QueryErrorCallback> = new Map();\r\n\r\n    databaseStructure: DatabaseStructure;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    initializeWorker(template: Uint8Array, queries: string[], callbackAfterInitializing?: (errors: string[]) => void,\r\n        callbackAfterRetrievingStructure?: () => void) {\r\n        \r\n        this.main.getWaitOverlay().show('Bitte warten, die Datenbank wird initialisiert...');\r\n        \r\n            if (this.worker != null) {\r\n            this.worker.terminate();\r\n        }\r\n\r\n        let t = performance.now();\r\n\r\n        // console.log(\"Starting worker...\");\r\n\r\n        let url: string = \"js/sqljs-worker/sqljsWorker.js\"\r\n        if(this.main.isEmbedded()){\r\n            //@ts-ignore\r\n            url = window.javaOnlineDir + url;\r\n        }\r\n\r\n        //@ts-ignore\r\n        if(window.jo_doc){\r\n            //@ts-ignore\r\n            this.worker = new WorkerSim();\r\n        } else {\r\n            this.worker = new Worker(url);\r\n        }\r\n        let that = this;\r\n\r\n        let errors: string[] = [];\r\n\r\n        this.worker.onmessage = () => {\r\n            // console.log(\"Database opened (\" + (performance.now() - t)/1000 + \" s)\");\r\n            that.worker.onmessage = event => {\r\n\r\n                // console.log(event.data);\r\n\r\n                let id = event.data.id;\r\n                if (event.data.error == null) {\r\n                    let querySuccessCallback = that.querySuccessCallbacksMap.get(id);\r\n                    if (querySuccessCallback != null) {\r\n                        querySuccessCallback(event.data.results);\r\n                    }\r\n                } else {\r\n                    let queryErrorCallback = that.queryErrorCallbackMap.get(id);\r\n                    if (queryErrorCallback != null) {\r\n                        queryErrorCallback(event.data.error);\r\n                    }\r\n                }\r\n\r\n                // if(event.data.buffer){\r\n                //     console.log(event.data.buffer);\r\n                // }\r\n\r\n\r\n                this.queryErrorCallbackMap.delete(id);\r\n                this.querySuccessCallbacksMap.delete(id);\r\n\r\n            };\r\n\r\n            if(queries == null) queries = [];\r\n            queries = queries.slice();\r\n            let queryCount = queries.length;\r\n\r\n            let execQuery = () => {\r\n                if (queries.length > 0) {\r\n                    this.main.getWaitOverlay().setProgress(`${Math.round((1-queries.length/queryCount)*100) + \" %\"}`)\r\n                    let query = queries.shift();\r\n                    that.executeQuery(query, (result) => {\r\n                        execQuery();\r\n                    }, (error) => {\r\n                        errors.push(\"Error while setting up database: \" + error + \", query: \" + query);\r\n                        console.log({\"error\": \"Error while setting up database: \" + error, \"query\": query});\r\n                        console.log()\r\n                        execQuery();\r\n                    })\r\n                } else {\r\n                    if (callbackAfterInitializing != null) callbackAfterInitializing(errors);\r\n                    that.retrieveDatabaseStructure(() => {\r\n                        // console.log(\"Database structure retrieved (\" + (performance.now() - t)/1000 + \" s)\");\r\n                        if (callbackAfterRetrievingStructure) callbackAfterRetrievingStructure();\r\n                        this.main.getWaitOverlay().hide();\r\n\r\n                    });\r\n                }\r\n            }\r\n\r\n            execQuery();\r\n\r\n            // that.executeQuery(sql, (result) => {\r\n            //     // console.log(\"Template written (\" + (performance.now() - t)/1000 + \" s)\");\r\n\r\n            //     if (callbackAfterInitializing != null) callbackAfterInitializing();\r\n            //     that.retrieveDatabaseStructure(() => {\r\n            //         // console.log(\"Database structure retrieved (\" + (performance.now() - t)/1000 + \" s)\");\r\n            //         if (callbackAfterRetrievingStructure) callbackAfterRetrievingStructure();\r\n            //         jQuery('#bitteWarten').css('display', 'none');\r\n\r\n            //     });\r\n            //     // that.executeQuery(\"select * from test\", (results: QueryResult[]) => {console.log(results)}, (error) => {console.log(\"Error:\" + error)});\r\n            // },\r\n            //     (error) => {\r\n            //         console.log(\"Error while setting up database: \" + error);\r\n            //     });\r\n\r\n            // that.worker.postMessage({\r\n            //     action: \"export\"\r\n            // })\r\n\r\n        };\r\n\r\n        this.worker.onerror = (e) => {\r\n            errors.push(\"Worker error: \" + e.error);\r\n            console.log(\"Worker error: \" + e.error);\r\n        }\r\n\r\n        this.worker.postMessage({\r\n            id: that.queryId++,\r\n            action: \"open\",\r\n            buffer: template, /*Optional. An ArrayBuffer representing an SQLite Database file*/\r\n        });\r\n\r\n    }\r\n\r\n    executeQuery(query: string, successCallback: QuerySuccessCallback, errorCallback: QueryErrorCallback) {\r\n\r\n        let id = this.queryId++;\r\n\r\n        this.querySuccessCallbacksMap.set(id, successCallback);\r\n        this.queryErrorCallbackMap.set(id, errorCallback);\r\n\r\n        this.worker.postMessage({\r\n            id: id,\r\n            action: \"exec\",\r\n            sql: query,\r\n            params: {}\r\n        });\r\n\r\n    }\r\n\r\n    export(successCallback: (buffer: Uint8Array) => void, errorCallback: QueryErrorCallback) {\r\n\r\n        let id = this.queryId++;\r\n\r\n        this.querySuccessCallbacksMap.set(id, (results) => { successCallback(results[0].buffer)  });\r\n        this.queryErrorCallbackMap.set(id, errorCallback);\r\n\r\n        this.worker.postMessage({\r\n            id: id,\r\n            action: \"export\",\r\n            params: {}\r\n        });\r\n\r\n    }\r\n\r\n    \r\n\r\n    getDirectoryEntries(callback: (entries: DatabaseDirectoryEntry[]) => void) {\r\n        if (this.databaseDirectoryEntries != null) {\r\n            callback(this.databaseDirectoryEntries);\r\n        } else {\r\n            jQuery.getJSON(\"assets/databases/directory.json\", function (entries: DatabaseDirectoryEntry[]) {\r\n                callback(entries);\r\n            });\r\n        }\r\n    }\r\n\r\n    retrieveDatabaseStructure(callback: (dbStructure: DatabaseStructure) => void) {\r\n\r\n        /*\r\n            @see https://stackoverflow.com/questions/6460671/sqlite-schema-information-metadata\r\n        */\r\n        let sql = `SELECT name, sql FROM sqlite_master WHERE type='table';`\r\n        let that = this;\r\n\r\n        this.executeQuery(sql, (result) => {\r\n            let sql1 = \"\";\r\n            result[0]?.values?.forEach(value => sql1 += `PRAGMA table_info(${value[0]});\\nPRAGMA foreign_key_list(${value[0]});\\nselect count(*) from ${value[0]};\\n\\n`)\r\n\r\n            if (sql1 != \"\") {\r\n                this.executeQuery(sql1, (result1) => {\r\n                    // console.log(\"DB structure: \");\r\n                    // console.log(result1);\r\n\r\n                    that.databaseStructure = that.parseDatabaseStructure(result, result1)\r\n\r\n                    callback(that.databaseStructure);\r\n\r\n                }, (error) => { console.log(error)});\r\n            } else {\r\n                that.databaseStructure = { tables: [] };\r\n                callback(that.databaseStructure);\r\n            }\r\n\r\n        }, (error) => { console.log(error) });\r\n\r\n\r\n    }\r\n\r\n    parseDatabaseStructure(tables: QueryResult[], columns: QueryResult[]): DatabaseStructure {\r\n        this.databaseStructure = {\r\n            tables: []\r\n        };\r\n\r\n        let tableNameToStructureMap: Map<string, TableStructure> = new Map();\r\n\r\n        let index = 0;\r\n        for (let i = 0; i < tables[0].values.length; i++) {\r\n            let tableName = tables[0].values[i][0];\r\n            let tableSQL = tables[0].values[i][1];\r\n\r\n            let tableStructure: TableStructure = {\r\n                name: tableName,\r\n                size: 0,\r\n                completeSQL: tableSQL,\r\n                columns: []\r\n            }\r\n\r\n            tableNameToStructureMap.set(tableName, tableStructure);\r\n\r\n            this.databaseStructure.tables.push(tableStructure);\r\n\r\n            let columnArray = columns[index].values;\r\n            let foreignKeyList: any[][] = null;\r\n            if (columns.length > index + 1 && columns[index + 1].columns[0] == \"id\") {\r\n                foreignKeyList = columns[index + 1].values;\r\n                index++;\r\n            }\r\n            index++;\r\n            let size: number = columns[index].values[0][0];\r\n            index++;\r\n\r\n            tableStructure.size = size;\r\n\r\n            columnArray.forEach(columnArray1 => {\r\n                let cid: number = columnArray1[0];\r\n                let name: string = columnArray1[1];\r\n                let type: string = columnArray1[2];\r\n                let notNull: boolean = columnArray1[3] == 1;\r\n                let dflt_value: string = columnArray1[4];\r\n                let isPrimaryKey: boolean = columnArray1[5] != 0;\r\n\r\n                let columnStructure: ColumnStructure = {\r\n                    name: name,\r\n                    isPrimaryKey: isPrimaryKey,\r\n                    isAutoIncrement: isPrimaryKey && tableSQL.toLowerCase().indexOf(\"autoincrement\") >= 0,\r\n                    completeTypeSQL: type,\r\n                    table: tableStructure,\r\n                    typeLengths: [],\r\n                    defaultValue: dflt_value,\r\n                    notNull: notNull\r\n                }\r\n                /*\r\n                    columns: (8) [\"id\", \"seq\", \"table\", \"from\", \"to\", \"on_update\", \"on_delete\", \"match\"]\r\n                    values: Array(1)\r\n                    0: (8) [0, 0, \"land\", \"LNR\", \"lnr\", \"NO ACTION\", \"NO ACTION\", \"NONE\"]\r\n                */\r\n\r\n                if (foreignKeyList != null) {\r\n                    let fkInfo: any[] = foreignKeyList.find(foreignKeyInfo => foreignKeyInfo[3].toLocaleLowerCase() == name.toLocaleLowerCase());\r\n                    if (fkInfo != null) {\r\n                        columnStructure.referencesRawData = fkInfo;\r\n                    }\r\n                }\r\n\r\n                tableStructure.columns.push(columnStructure);\r\n\r\n            });\r\n\r\n        }\r\n\r\n        for (let ts of this.databaseStructure.tables) {\r\n            for (let cs of ts.columns) {\r\n                if (cs.referencesRawData != null) {\r\n                    let table = tableNameToStructureMap.get(cs.referencesRawData[2]);\r\n                    // SQlite doesn't remove foreign key references to columns of a dropped table\r\n                    if(table == null) continue;\r\n                    let column = table.columns.find(c => c.name.toLocaleLowerCase() == cs.referencesRawData[4].toLocaleLowerCase());\r\n                    cs.references = column;\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log(this.databaseStructure);\r\n\r\n        return this.databaseStructure;\r\n\r\n    }\r\n\r\n    static getDumpType(dump: Uint8Array): DatabaseDumpType {\r\n\r\n        let sqliteMagicBytes: number[] = [0x53, 0x51, 0x4c, 0x69, 0x74, 0x65];\r\n        let zlibMagicByte: number = 0x78;\r\n\r\n        let found: boolean = true;\r\n        for (let i = 0; i < sqliteMagicBytes.length; i++) {\r\n            if (sqliteMagicBytes[i] != dump[i]) {\r\n                found = false;\r\n                break;\r\n            }\r\n        }\r\n        if (found) return \"binaryUncompressed\";\r\n\r\n        if (dump[0] == zlibMagicByte) return \"binaryCompressed\";\r\n\r\n        return \"other\";\r\n\r\n    }\r\n\r\n\r\n}","import { TokenType } from \"../lexer/Token.js\";\r\nimport { ASTNode, ConstantNode, CreateTableColumnNode, CreateTableNode, ForeignKeyInfo, InsertNode } from \"./AST.js\";\r\nimport { SQLStatement } from \"./Parser.js\";\r\n\r\nexport class StatementCleaner {\r\n\r\n    MaxRowsPerInsert: number = 300;\r\n\r\n    clean(statement: SQLStatement): string {\r\n        switch(statement.ast.type){\r\n            case TokenType.keywordCreate:   // Create Table statement\r\n                statement.sqlCleaned = this.cleanCreateTableStatement(statement.ast);\r\n                return statement.sqlCleaned;\r\n            case TokenType.keywordInsert:\r\n                statement.sqlCleaned = this.cleanInsertStatement(statement.ast);\r\n                return statement.sqlCleaned;\r\n            default:\r\n                return statement.sql;\r\n                break;\r\n        }\r\n    }\r\n\r\n    cleanInsertStatement(ast: InsertNode): string {\r\n        let statementHeader: string = `insert into ${ast.table.identifier}`;\r\n\r\n        if(ast.columnList != null && ast.columnList.length > 0){\r\n            statementHeader += `(${ast.columnList.map(c => c.identifier).join(\", \")})`;\r\n        }\r\n\r\n        statementHeader += '\\nvalues\\n';\r\n\r\n        let st = \"\";\r\n        \r\n        let lines: string[] = [];\r\n        if(ast.values != null && ast.values.length > 0){\r\n            for(let vline of ast.values){\r\n                lines.push(`\\n(${vline.map(v => this.cleanValue(v)).join(\", \")})`);\r\n            }\r\n            //st += lines.join(\",\\n\");\r\n        }\r\n\r\n        while(lines.length > 0){\r\n            st += statementHeader;\r\n            st += lines.splice(0, Math.max(this.MaxRowsPerInsert, lines.length)).join(\",\\n\");\r\n            st += \";\\n\";\r\n        }\r\n\r\n        return st;\r\n    }\r\n\r\n    cleanValue(v: ConstantNode){\r\n        if(v.constantType == TokenType.stringConstant){\r\n            let s: string = v.constant;\r\n            s = s.replace(/'/g, \"''\");\r\n            return `'${s}'`;\r\n        }else {\r\n            return v.constant;\r\n        }\r\n    }\r\n\r\n    cleanCreateTableStatement(ast: CreateTableNode): string {\r\n        let st: string = `create table ${ast.ifNotExists?\" if not exists\":\"\"} ${ast.identifier}(\\n   `;\r\n\r\n        st += ast.columnList.map( column => this.cleanColumnDef(column)).join(\",\\n   \");\r\n        if(ast.foreignKeyInfoList != null && ast.foreignKeyInfoList.length > 0){\r\n            st += \",\\n\" + ast.foreignKeyInfoList.map(fki => this.cleanForeignKeyInfo(fki)).join(\",\\n   \");\r\n        }\r\n\r\n        let pkc = ast.combinedPrimaryKeyColumns.slice().map(s => s.toLocaleLowerCase());\r\n        for(let column of ast.columnList){\r\n            let c = column.identifier.toLocaleLowerCase();\r\n            if(column.isAutoIncrement && pkc.indexOf(c) >= 0){\r\n                pkc.splice(pkc.indexOf(c), 1);\r\n            }\r\n        }\r\n\r\n        if(pkc.length > 0){\r\n            st += `,\\nprimary key(${pkc.join(\", \")})`;\r\n        }\r\n        st += '\\n);';\r\n\r\n        return st;\r\n    }\r\n\r\n    cleanForeignKeyInfo(fki: ForeignKeyInfo): string {\r\n        return `${fki.column} references ${fki.referencesTable}(${fki.referencesColumn})`;\r\n    }\r\n\r\n    cleanColumnDef(column: CreateTableColumnNode):string {\r\n\r\n        let type = column.baseType.toString();\r\n        if(type == \"int\" && column.isAutoIncrement){\r\n            type = \"integer\";\r\n        }\r\n\r\n        let st: string = `${column.identifier} ${type}`;\r\n        if(column.parameters != null && column.parameters.length > 0){\r\n            st += `(${column.parameters.join(\", \")})`;\r\n        }\r\n        if(column.notNull){\r\n            st += \" not null\";\r\n        }\r\n        if(column.defaultValue != null){\r\n            st += \" default \" + column.defaultValue;\r\n        }\r\n        if(column.isPrimary || column.isAutoIncrement){\r\n            st += \" primary key\";\r\n        }\r\n        if(column.isAutoIncrement){\r\n            st += \" autoincrement\";\r\n        }\r\n        if(column.foreignKeyInfo != null){\r\n            let fki = column.foreignKeyInfo;\r\n            let c: string = fki.referencesColumn;\r\n            if(fki.referencesTable) c = fki.referencesTable + \"(\" + c + \")\";\r\n            st += \" references \" + c;\r\n        }\r\n        if(column.collate != null){\r\n            let collate = column.collate.toLocaleLowerCase();\r\n            if([\"binary\", \"nocase\", \"rtrim\"].indexOf(collate) >= 0){\r\n                st += \" collate \" + collate;\r\n            }\r\n        }\r\n        let parameters = column.parameters? column.parameters : [0, 0];\r\n        let checkFunction = column.baseType.checkFunction(column.identifier, parameters);\r\n        if(checkFunction != \"\"){\r\n            st += \" \" + checkFunction;\r\n        }\r\n        return st;\r\n    }\r\n\r\n}","import { Lexer } from \"../compiler/lexer/Lexer.js\";\nimport { TokenType } from \"../compiler/lexer/Token.js\";\nimport { AlterTableNode, CreateTableNode, InsertNode } from \"../compiler/parser/AST.js\";\nimport { Module } from \"../compiler/parser/Module.js\";\nimport { Parser, SQLStatement } from \"../compiler/parser/Parser.js\";\nimport { StatementCleaner } from \"../compiler/parser/StatementCleaner.js\";\nimport { MainBase } from \"../main/MainBase.js\";\nimport { LoadableDatabase } from \"./DatabaseLoader.js\";\nimport { DatabaseTool } from \"./DatabaseTools.js\";\n\nexport class MySqlImporter {\n\n    private createTableNodes: CreateTableNode[];\n    private insertNodes: InsertNode[];\n    private tableModifyingNodes: AlterTableNode[];\n\n    constructor(private main: MainBase) {\n\n    }\n\n    async loadFromUrl(url: string): Promise<LoadableDatabase> {\n        if (url == null) return;\n\n        let text = null;\n        if (url.endsWith(\".zip\")) {\n            text = await this.unzipURL(url);\n        } else {\n            text = await (await fetch(url)).text();\n        }\n\n        return this.importFromText(text);\n    }\n\n    async loadFromFile(file: globalThis.File): Promise<LoadableDatabase> {\n        if (file == null) return;\n\n        if (file.name.endsWith(\".zip\")) {\n            let text = await this.unzipFile(file);\n            return this.importFromText(text);\n        } else {\n\n            return new Promise<LoadableDatabase>(\n                (resolve, reject) => {\n                    var reader = new FileReader();\n                    reader.onload = (event) => {\n                        let text = <string>event.target.result;\n                        resolve(this.importFromText(text));\n                    };\n                    reader.readAsText(file);\n                }\n            )\n\n\n        }\n    }\n\n    async unzipURL(url: string): Promise<string> {\n        //@ts-ignore\n        const reader = new zip.ZipReader(new zip.HttpReader(url));\n        return this.unzipIntern(reader);\n    }\n\n    async unzipFile(file: globalThis.File): Promise<string> {\n        // create a BlobReader to read with a ZipReader the zip from a Blob object\n        //@ts-ignore\n        const reader = new zip.ZipReader(new zip.BlobReader(file));\n        return this.unzipIntern(reader);\n    }\n\n    async unzipIntern(reader: any): Promise<string> {\n        // get all entries from the zip\n        let entries = await reader.getEntries();\n        entries = entries.filter(entry => entry.filename.endsWith(\".sql\"))\n        let text: string = null;\n        if (entries.length) {\n\n            // get first entry content as text by using a TextWriter\n            text = await entries[0].getData(\n                // writer\n                //@ts-ignore\n                new zip.TextWriter(),\n                // options\n                {\n                    onprogress: (index, max) => {\n                        // onprogress callback\n                    }\n                }\n            );\n        }\n\n        // close the ZipReader\n        await reader.close();\n\n        return text;\n    }\n\n    private async importFromText(text: string): Promise<LoadableDatabase> {\n        if (text == null) return null;\n\n        let lexer: Lexer = new Lexer();\n        let lexOutput = lexer.lex(text);\n\n        let parser: Parser = new Parser();\n        let m: Module = new Module({\n            dirty: false,\n            name: \"\",\n            saved: true,\n            student_edited_after_revision: false,\n            submitted_date: null,\n            text: text,\n            text_before_revision: null,\n            version: 0\n        }, this.main);\n        m.tokenList = lexOutput.tokens;\n\n        parser.parse(m);\n\n        this.createTableNodes = m.sqlStatements.filter(st => st.ast.type == TokenType.keywordCreate).map(st => <CreateTableNode>st.ast);\n        this.insertNodes = m.sqlStatements.filter(st => st.ast.type == TokenType.keywordInsert).map(st => <InsertNode>st.ast);\n        this.tableModifyingNodes = m.sqlStatements.filter(st => st.ast.type == TokenType.keywordAlter &&\n            (<AlterTableNode>st.ast).kind == \"omittedKind\").map(st => <AlterTableNode>st.ast);\n\n        for (let tmn of this.tableModifyingNodes) {\n            let createTableNode = this.findCreateTableNode(tmn.tableIdentifier);\n            if (createTableNode == null) continue;\n\n            if (tmn.primaryKeys != null) {\n                createTableNode.combinedPrimaryKeyColumns = tmn.primaryKeys;\n                createTableNode.columnList.forEach(c => c.isPrimary = false);\n            }\n\n            if (tmn.autoIncrementColumn != null) {\n                let pcn = this.findCreateTableColumnNode(createTableNode, tmn.autoIncrementColumn);\n                if (pcn != null) pcn.isPrimary = true;\n            }\n\n            if (tmn.modifyColumnInfo != null) {\n                for (let mci of tmn.modifyColumnInfo) {\n                    let mcn = this.findCreateTableColumnNode(createTableNode, mci.identifier);\n                    let index = createTableNode.columnList.indexOf(mcn);\n                    createTableNode.columnList.splice(index, 1, mci);\n                }\n            }\n\n            if (tmn.foreignKeys != null) {\n                for (let fk of tmn.foreignKeys) {\n                    createTableNode.foreignKeyInfoList.push(fk);\n                }\n            }\n\n            if (tmn.indices != null) {\n                for (let index of tmn.indices) {\n                    m.sqlStatements.push({\n                        acceptedBySQLite: true,\n                        from: null, to: null, hasErrors: false,\n                        ast: {\n                            type: TokenType.keywordIndex,\n                            columnIdentifier: index.column,\n                            indexIdentifier: index.index_name,\n                            tableIdentifier: tmn.tableIdentifier,\n                            unique: index.unique,\n                            position: null, endPosition: null, symbolTable: null\n                        },\n                        sql: `create ${index.unique ? 'unique ' : ''} index ${index.index_name} on ${tmn.tableIdentifier}(${index.column});`\n                    })\n                }\n            }\n        }\n\n        return this.makeDatabase(m.sqlStatements);\n    }\n\n    private findCreateTableNode(tableIdentifier: string): CreateTableNode {\n        tableIdentifier = tableIdentifier.toLocaleLowerCase();\n        return this.createTableNodes.find(node => node.identifier.toLocaleLowerCase() == tableIdentifier);\n    }\n\n    private findCreateTableColumnNode(tableNode: CreateTableNode, columnIdentifier: string) {\n        columnIdentifier = columnIdentifier.toLocaleLowerCase();\n        return tableNode.columnList.find(columnNode => columnNode.identifier.toLocaleLowerCase() == columnIdentifier)\n    }\n\n    private async makeDatabase(statements: SQLStatement[]): Promise<LoadableDatabase> {\n\n        let statementCleaner: StatementCleaner = new StatementCleaner();\n\n        let sqlStatements: string[] = statements.filter(st => st.ast.type != TokenType.omittedeStatement)\n            .map(st => statementCleaner.clean(st));\n        sqlStatements.unshift(\"PRAGMA foreign_keys = OFF;\");\n        sqlStatements.push(\"PRAGMA foreign_keys = ON;\")\n\n        let dbTool = new DatabaseTool(this.main);\n\n        let promise = new Promise<LoadableDatabase>((resolve, reject) => {\n            dbTool.initializeWorker(null, sqlStatements, () => {\n                dbTool.export((buffer) => {\n                    resolve({\n                        binDump: buffer\n                    })\n                }, (error) => {\n                    reject(error);\n                })\n            });\n\n        })\n\n        return promise;\n\n    }\n\n\n}","import { MainBase } from \"../main/MainBase.js\";\r\nimport { LoadableDatabase } from \"./DatabaseLoader.js\";\r\nimport { DatabaseTool } from \"./DatabaseTools.js\";\r\nimport { downloadFile } from \"./HtmlTools.js\";\r\nimport { MySqlImporter } from \"./MySqlImporter.js\";\r\n\r\nexport class DatabaseImportExport {\r\n\r\n    async loadFromFile(file: globalThis.File, main: MainBase): Promise<LoadableDatabase>{\r\n        let that = this;\r\n        if (file == null) return;\r\n        main.getWaitOverlay().show(\"Lese Datei ein...\");\r\n        if(file.name.endsWith(\".sql\") || file.name.endsWith(\".zip\")){\r\n            let ld = await new MySqlImporter(main).loadFromFile(file);\r\n            main.getWaitOverlay().hide();\r\n            return ld;\r\n        } else {\r\n            var reader = new FileReader();\r\n            return new Promise<LoadableDatabase>((resolve, reject) => {\r\n                reader.onload = (event) => {\r\n                    let ab: ArrayBuffer = <ArrayBuffer>event.target.result;\r\n                    let db: Uint8Array = new Uint8Array(ab);\r\n        \r\n                    //@ts-ignore\r\n                    if(DatabaseTool.getDumpType(db) == \"binaryCompressed\") db = pako.inflate(db);\r\n                    \r\n                    main.getWaitOverlay().hide();\r\n                    resolve({binDump: db});\r\n                };\r\n                reader.readAsArrayBuffer(file);\r\n    \r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    saveToFile(dbTool: DatabaseTool){\r\n        dbTool.export((db) => {\r\n            let filename: string = prompt(\"Bitte geben Sie den Dateinamen ein\", \"datenbank.sqLite\");\r\n            if (filename == null) {\r\n                alert(\"Der Dateiname ist leer, daher wird nichts gespeichert.\");\r\n                return;\r\n            }\r\n            if (!filename.endsWith(\".sqLite\")) filename = filename + \".sqLite\";\r\n            downloadFile(new Blob([db.buffer]), filename, true);\r\n        }, () => {});\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { CreateWorkspaceData, WorkspaceData } from \"../../communication/Data.js\";\r\nimport { DatabaseImportExport } from \"../../tools/DatabaseImportExport.js\";\r\nimport { LoadableDatabase } from \"../../tools/DatabaseLoader.js\";\r\nimport { DatabaseTool } from \"../../tools/DatabaseTools.js\";\r\nimport { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { TemplateUploader } from \"../../tools/TemplateUploader.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionElement } from \"./Accordion.js\";\r\n\r\ntype CreateMode = \"emptyDatabase\" | \"fromTemplate\" | \"useExistingDatabase\" | \"useDumpFile\";\r\n\r\nexport class NewDatabaseDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    database: LoadableDatabase;\r\n\r\n    constructor(private main: Main, private owner_id: number, private path: string[]) {\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Neue Datenbank anlegen</div>\r\n\r\n            <div class=\"jo_ds_settings\">\r\n               <div class=\"jo_ds_settings_caption\">Name der Datenbank:</div><div><input class=\"dialog-input jo_databasename\" value=\"Neue Datenbank\"></input></div>\r\n            </div>\r\n\r\n             <div class=\"jo_tabheadings jo_cdtabheading\">\r\n             <div class=\"jo_tabheading\" data-target=\"jo_createEmptyDatabaseTab\">Leere Datenbank</div>\r\n             <div class=\"jo_tabheading jo_active\" data-target=\"jo_createDatabaseFromTemplateTab\">Von Vorlage kopieren</div>\r\n             <div class=\"jo_tabheading\" data-target=\"jo_createDatabaseUseExistingTab\">Bestehende Datenbank mitnutzen</div>\r\n             <div class=\"jo_tabheading\" data-target=\"jo_createDatabaseUseDumpFile\">Import aus Dumpfile (SQLite- oder MySQL-Format)</div>\r\n             </div>\r\n             <div class=\"jo_tabs\" style=\"width: 100%; margin-top: 10px\">\r\n                 <div class=\"jo_createEmptyDatabaseTab\">\r\n                    <div class=\"jo_createDatabaseDescription\">\r\n                        Erstellt wird eine leere Datenbank.\r\n                    </div>\r\n                 </div>\r\n                 <div class=\"jo_createDatabaseFromTemplateTab jo_active\">\r\n                    <div class=\"jo_ds_settings\">\r\n                       <div class=\"jo_ds_settings_caption\">Vorlage suchen:</div><div><input class=\"dialog-input jo_templatename\"></input></div>\r\n                    </div>\r\n                    <div class=\"jo_scrollable jo_templatelist\"></div>\r\n                 </div>\r\n                <div class=\"jo_createDatabaseUseExistingTab\">\r\n                    <div class=\"jo_createDatabaseDescription\">Wenn Du die Datenbank einer anderen Nutzerin/eines anderen Nutzers mitnutzen möchtest, brauchst Du einen Zugriffscode von ihr/ihm. Er ist unter Datenbank->Einstellungen zu finden.            \r\n                    </div>\r\n                    <div class=\"jo_ds_settings\">\r\n                       <div class=\"jo_ds_settings_caption\">Zugriffscode:</div><div><input class=\"dialog-input jo_databasecodeinput\"></input></div>\r\n                    </div>\r\n                 </div>\r\n                <div class=\"jo_createDatabaseUseDumpFile\">\r\n                    <div class=\"jo_createDatabaseDescription\">Wähle hier die Datei mit dem Datenbank-Dump aus (Endung .sqLite (SQLite-Datenbankdatei) oder .zip (gepackter MySql-Dump) oder .sql (MySql-Dump)):</div>\r\n                    <input type=\"file\" class=\"jo_dumpfile\" name=\"dumpfile\" style=\"padding: 10px\"/>\r\n                    <div class=\"jo_databaseimport_dropzone\" style=\"width: 70vw; margin-left: 10px\">Alternativ: Datei in dieses Feld ziehen</div>\r\n                    <div class=\"jo_databaseimport_ok\"></div>\r\n                 </div>\r\n             </div>\r\n\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_create_database_button\">Datenbank anlegen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        makeTabs(this.$dialog);\r\n\r\n        let $templatelist = jQuery('.jo_templatelist');\r\n        this.main.networkManager.fetchTemplateList((templatelist) => {\r\n            templatelist.forEach(tle => {\r\n\r\n                let $tle = jQuery('<div class=\"jo_templateListEntry\"></div>')\r\n                $tle.append(jQuery(`<div class=\"jo_tle_firstline\">${tle.name} <span class=\"jo_tle_ownername\"> (von ${tle.ownerName})</span></div>`))\r\n                $tle.append(jQuery(`<div class=\"jo_tle_secondline\">${tle.description}</div>`))\r\n                $tle.data('templateId', tle.id);\r\n                $tle.data('name', tle.name);\r\n\r\n                $templatelist.append($tle);\r\n                tle.$tle = <JQuery<HTMLDivElement>>$tle;\r\n\r\n                $tle.on('pointerdown', () => {\r\n                    $templatelist.find('.jo_templateListEntry').removeClass('jo_active');\r\n                    $tle.addClass('jo_active');\r\n                })\r\n\r\n            })\r\n            let $templateName = <JQuery<HTMLInputElement>>jQuery('.jo_templatename');\r\n            $templateName.on('input', () => {\r\n                let s = <string>$templateName.val();\r\n                $templatelist.find('.jo_templateListEntry').hide();\r\n                templatelist.forEach(tle => {\r\n                    let tleString = tle.name + tle.ownerName + (tle.description ? tle.description : \"\");\r\n                    if (tleString.indexOf(s) >= 0) tle.$tle.show();\r\n                })\r\n            })\r\n        })\r\n\r\n        let $dropZone = jQuery('.jo_databaseimport_dropzone');\r\n\r\n        $dropZone.on('dragover', (evt) => {\r\n            evt.stopPropagation();\r\n            evt.preventDefault();\r\n            evt.originalEvent.dataTransfer.dropEffect = 'copy';\r\n        })\r\n        $dropZone.on('drop', (evt) => {\r\n            evt.stopPropagation();\r\n            evt.preventDefault();\r\n\r\n            var files = evt.originalEvent.dataTransfer.files;\r\n            this.importFile(files);\r\n        })\r\n\r\n        let $dumpFileInput = jQuery('.jo_dumpfile');\r\n        $dumpFileInput.on('change', (event) => {\r\n            //@ts-ignore\r\n            var files: FileList = event.originalEvent.target.files;\r\n            this.importFile(files).then(() => {\r\n                $dumpFileInput.val(null);\r\n            });\r\n\r\n        })\r\n\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { this.showMainWindow(); });\r\n        jQuery('#jo_ds_create_database_button').on('click', () => {\r\n            let createMode: CreateMode = \"emptyDatabase\";\r\n            if (jQuery('.jo_createDatabaseFromTemplateTab').hasClass('jo_active')) createMode = \"fromTemplate\";\r\n            if (jQuery('.jo_createDatabaseUseExistingTab').hasClass('jo_active')) createMode = \"useExistingDatabase\";\r\n            if (jQuery('.jo_createDatabaseUseDumpFile').hasClass('jo_active')) createMode = \"useDumpFile\";\r\n\r\n            let workspaceData: CreateWorkspaceData = {\r\n                id: null,\r\n                isFolder: false,\r\n                name: <string>jQuery('.dialog-input.jo_databasename').val(),\r\n                path: this.path.join(\"/\"),\r\n            }\r\n\r\n            switch (createMode) {\r\n                case \"emptyDatabase\":\r\n                    this.createWorkspace(workspaceData);\r\n                    break;\r\n                case \"fromTemplate\":\r\n                    let $template = jQuery('.jo_templateListEntry.jo_active');\r\n                    if ($template.length != 1) {\r\n                        alert('Bitte wählen Sie genau eine Vorlage aus.');\r\n                        return;\r\n                    } else {\r\n                        workspaceData.template_database_id = $template.data('templateId');\r\n                        if (workspaceData.name == \"Neue Datenbank\") workspaceData.name = $template.data('name');\r\n                        this.createWorkspace(workspaceData);\r\n                    }\r\n                    break;\r\n                case \"useExistingDatabase\":\r\n                    let code = <string>jQuery('.jo_databasecodeinput').val();\r\n                    let tIndex = code.indexOf(\"T\");\r\n                    if (tIndex == -1) {\r\n                        alert(\"Der Zugriffscode muss das Zeichen T enthalten.\");\r\n                        return;\r\n                    }\r\n                    workspaceData.otherDatabaseId = Number.parseInt(code.substring(0, tIndex));\r\n                    workspaceData.secret = code.substring(tIndex + 1);\r\n                    this.createWorkspace(workspaceData);\r\n                    break;\r\n                case \"useDumpFile\":\r\n                    if (this.database != null) {\r\n                        new TemplateUploader().uploadCurrentDatabase(-1, this.main, this.database.binDump,\r\n                            \"uploadBaseTemplateForWorkspace\",\r\n                            (response) => {\r\n                            workspaceData.template_id = response.newTemplateId;\r\n                            this.createWorkspace(workspaceData);\r\n                        });\r\n\r\n                    } else {\r\n                        alert('Bitte laden Sie zuerst den Binärdump einer Datenbank hoch.')\r\n                        return;\r\n                    }\r\n                    break;\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    private createWorkspace(workspaceData: CreateWorkspaceData) {\r\n        this.main.networkManager.sendCreateWorkspace(workspaceData, this.owner_id, (error?: string) => {\r\n            if (error != null) { alert(error); return; }\r\n\r\n            let w = this.main.createNewWorkspace(workspaceData.name, this.owner_id);\r\n            w.path = workspaceData.path;\r\n            w.id = workspaceData.id;\r\n            w.sql_history = \"\";\r\n\r\n            let projectExplorer = this.main.projectExplorer;\r\n\r\n            this.main.workspaceList.push(w);\r\n            let accordionElement: AccordionElement = {\r\n                name: workspaceData.name,\r\n                externalElement: w,\r\n                iconClass: \"workspace\",\r\n                isFolder: false,\r\n                path: this.path\r\n            };\r\n\r\n            projectExplorer.workspaceListPanel.addElement(accordionElement, true);\r\n\r\n            w.renderSettingsButton(accordionElement);\r\n\r\n            projectExplorer.workspaceListPanel.sortElements();\r\n            projectExplorer.fileListPanel.sortElements();\r\n\r\n            projectExplorer.setWorkspaceActive(w);\r\n\r\n            this.showMainWindow();\r\n\r\n        });\r\n    }\r\n\r\n    async importFile(files: FileList) {\r\n        let that = this;\r\n        let importer = new DatabaseImportExport();\r\n        let db: LoadableDatabase = await importer.loadFromFile(files[0], this.main)\r\n        let isDatabase: boolean = false;\r\n        let dumpFileType = DatabaseTool.getDumpType(db.binDump);\r\n        if (dumpFileType == \"binaryCompressed\") {\r\n            // @ts-ignore\r\n            let dbUncompressed = pako.inflate(db.binDump);\r\n            if (DatabaseTool.getDumpType(dbUncompressed) == \"binaryUncompressed\") {\r\n                isDatabase = true;\r\n            }\r\n        } else if (DatabaseTool.getDumpType(db.binDump) == \"binaryUncompressed\") {\r\n            //@ts-ignore\r\n            db.binDump = pako.deflate(db.binDump);\r\n            isDatabase = true;\r\n        }\r\n\r\n        if (isDatabase) {\r\n            that.database = db;\r\n            jQuery('.jo_databaseimport_ok').html(\"Die Datenbankdatei wurde erfolgreich von Datei eingelesen. Sie können die Datenbank jetzt durch Klick auf den Button unten erstellen.\");\r\n        } else {\r\n            alert(\"In der Datei befindet sich kein Binärdump einer Datenbank.\");\r\n        }\r\n    }\r\n\r\n    showMainWindow() {\r\n        jQuery('#main').css('visibility', 'visible');\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n    }\r\n\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { PasswordChanger } from \"./UserMenu.js\";\r\nimport { DatabaseSettingsDialog } from \"./DatabaseSettingsDialog.js\";\r\nimport { DatabaseImportExport } from \"../../tools/DatabaseImportExport.js\";\r\nimport { NewDatabaseDialog } from \"./NewDatabaseDialog.js\";\r\n\r\nexport type Action = (identifier: string) => void;\r\n\r\ntype Menu = {\r\n    items: MenuItem[];\r\n    $element?: JQuery<HTMLElement>;\r\n    level?: number;\r\n}\r\n\r\ntype MenuItem = {\r\n    identifier: string;\r\n    $element?: JQuery<HTMLElement>;\r\n    action?: Action;\r\n    link?: string;\r\n    subMenu?: Menu;\r\n}\r\n\r\nexport class MainMenu {\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n\r\n    currentSubmenu: { [level: number]: JQuery<HTMLElement> } = {};\r\n    openSubmenusOnMousemove: boolean = false;\r\n\r\n    initGUI(user: UserData) {\r\n\r\n        let that = this;\r\n        let editor = this.main.getMonacoEditor();\r\n\r\n        let mainMenu: Menu = {\r\n            items: [\r\n                {\r\n                    identifier: \"Datei\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Speichern und Beenden\",\r\n                                action: () => { jQuery('#buttonLogout').trigger(\"click\"); }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Bearbeiten\", subMenu:\r\n                    {\r\n                        items: [\r\n                            { identifier: \"Rückgängig (Strg + z)\", action: () => { editor.trigger(\".\", \"undo\", {}); } },\r\n                            { identifier: \"Wiederholen (Strg + y)\", action: () => { editor.trigger(\".\", \"redo\", {}); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Kopieren (Strg + c)\", action: () => { editor.getAction(\"editor.action.clipboardCopyAction\").run(); } },\r\n                            { identifier: \"Ausschneiden (Strg + x)\", action: () => { editor.getAction(\"editor.action.clipboardCutAction\").run(); } },\r\n                            { identifier: \"Nach oben kopieren (Alt + Shift + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.copyLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten kopieren (Alt + Shift + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.copyLinesDownAction\").run(); } },\r\n                            { identifier: \"Nach oben verschieben (Alt + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.moveLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten verschieben (Alt + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.moveLinesDownAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Suchen... (Strg + f)\", action: () => { editor.getAction(\"actions.find\").run(); } },\r\n                            { identifier: \"Ersetzen... (Strg + h)\", action: () => { editor.getAction(\"editor.action.startFindReplaceAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Aus-/Einkommentieren (Strg + #)\", action: () => { editor.getAction(\"editor.action.commentLine\").run(); } },\r\n                            { identifier: \"Dokument formatieren (Alt + Shift + f)\", action: () => { editor.getAction(\"editor.action.formatDocument\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Finde zugehörige Klammer (Strg + k)\", action: () => { editor.getAction(\"editor.action.jumpToBracket\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Alles zusammenfalten\", action: () => { editor.getAction(\"editor.foldAll\").run(); } },\r\n                            { identifier: \"Alles auffalten\", action: () => { editor.getAction(\"editor.unfoldAll\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Vorschlag auslösen (Strg + Leertaste)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.triggerSuggest\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n                            { identifier: \"Parameterhilfe (Strg + Shift + Leertaste)\", action: () => { editor.getAction(\"editor.action.triggerParameterHints\").run(); } },\r\n                            {\r\n                                identifier: \"Gehe zur Definition (Strg + Click)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.revealDefinition\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Ansicht\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Theme\",\r\n                                subMenu: {\r\n                                    items: [\r\n                                        {\r\n                                            identifier: \"Dark\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"dark\");\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            identifier: \"Light\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"light\");\r\n                                            }\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Hoher Kontrast im Editor ein/aus\", action: () => { editor.getAction(\"editor.action.toggleHighContrast\").run(); } },\r\n\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Zoom out (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(-4); } },\r\n                            { identifier: \"Zoom normal\", action: () => { this.main.editor.setFontSize(14); } },\r\n                            { identifier: \"Zoom in (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(4); } },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Datenbank\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Neue Datenbank anlegen...\", action: () => {\r\n                                    let owner_id: number = that.main.user.id;\r\n                                    if (that.main.workspacesOwnerId != null) {\r\n                                        owner_id = that.main.workspacesOwnerId;\r\n                                    }\r\n\r\n                                    new NewDatabaseDialog(that.main, owner_id, []);\r\n                                }\r\n                            },\r\n                            { identifier: \"Einstellungen...\", action: () => { new DatabaseSettingsDialog(this.main, this.main.currentWorkspace) } },\r\n                            {\r\n                                identifier: \"Export als Binärdump (.sqLite-File)...\", action: () => {\r\n                                    new DatabaseImportExport().saveToFile(this.main.getDatabaseTool());\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n\r\n            ]\r\n        };\r\n\r\n        jQuery('#mainmenu').empty();\r\n        this.initMenu(mainMenu, 0);\r\n    }\r\n\r\n    switchTheme(theme: string) {\r\n        this.main.viewModeController.setTheme(theme);\r\n    }\r\n\r\n    initMenu(menu: Menu, level?: number) {\r\n\r\n        menu.level = level;\r\n\r\n        if (level == 0) {\r\n            menu.$element = jQuery('#mainmenu');\r\n        } else {\r\n            menu.$element = jQuery('<div class=\"jo_submenu\"></div>');\r\n            jQuery('body').append(menu.$element);\r\n        }\r\n\r\n        menu.$element.data('model', menu);\r\n        for (let mi of menu.items) {\r\n            if (mi.identifier == '-') {\r\n                mi.$element = jQuery('<div class=\"jo_menuitemdivider\"></div>');\r\n            } else {\r\n                mi.$element = jQuery('<div>' + mi.identifier + '</div>');\r\n                if (mi.link != null) {\r\n                    let $link = jQuery('<a href=\"' + mi.link + '\" target=\"_blank\" class=\"jo_menulink\"></a>');\r\n                    $link.on(\"mousedown\", (event) => {\r\n                        event.stopPropagation();\r\n                        setTimeout(() => {\r\n                            menu.$element.hide();\r\n                        }, 500);\r\n                    })\r\n                    $link.append(mi.$element);\r\n                    mi.$element = $link;\r\n                }\r\n                if (mi.subMenu != null) {\r\n                    this.initMenu(mi.subMenu, level + 1);\r\n                }\r\n                this.initMenuitemCallbacks(menu, mi);\r\n                if (level == 0) {\r\n                    mi.$element.addClass('jo_mainmenuitem');\r\n                }\r\n            }\r\n            menu.$element.append(mi.$element);\r\n            mi.$element.data('model', mi);\r\n        }\r\n\r\n        let that = this;\r\n        jQuery(document).on('mousedown', () => {\r\n            for (let i = 0; i < 5; i++) {\r\n                if (that.currentSubmenu[i] != null) {\r\n                    that.currentSubmenu[i].hide();\r\n                    that.currentSubmenu[i] = null;\r\n                }\r\n            }\r\n            that.openSubmenusOnMousemove = false;\r\n        });\r\n\r\n    }\r\n\r\n    initMenuitemCallbacks(menu: Menu, mi: MenuItem) {\r\n        let that = this;\r\n\r\n        if (mi.action != null) {\r\n            mi.$element.on('mousedown', (ev) => { mi.action(mi.identifier); });\r\n        }\r\n\r\n        if (mi.subMenu != null) {\r\n            mi.$element.on('mousedown', (ev) => {\r\n                that.opensubmenu(mi);\r\n                that.openSubmenusOnMousemove = true;\r\n                ev.stopPropagation();\r\n            });\r\n\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.openSubmenusOnMousemove) {\r\n                    that.opensubmenu(mi);\r\n                } else {\r\n                    if (that.currentSubmenu[menu.level + 1] != null) {\r\n                        that.currentSubmenu[menu.level + 1].hide();\r\n                        that.currentSubmenu[menu.level + 1] = null;\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.currentSubmenu[menu.level + 1] != null) {\r\n                    that.currentSubmenu[menu.level + 1].hide();\r\n                    that.currentSubmenu[menu.level + 1] = null;\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    opensubmenu(mi: MenuItem) {\r\n\r\n        let subMenu = mi.subMenu;\r\n\r\n        let left: number;\r\n        let top: number;\r\n        if (subMenu.level == 1) {\r\n            left = mi.$element.position().left;\r\n            top = 30;\r\n        } else {\r\n            left = mi.$element.offset().left + mi.$element.width();\r\n            top = mi.$element.offset().top;\r\n        }\r\n\r\n        subMenu.$element.css({\r\n            top: \"\" + top + \"px\",\r\n            left: \"\" + left + \"px\"\r\n        })\r\n\r\n        if (this.currentSubmenu[subMenu.level] != null) {\r\n            this.currentSubmenu[subMenu.level].hide();\r\n        }\r\n\r\n        subMenu.$element.show();\r\n        this.currentSubmenu[subMenu.level] = subMenu.$element;\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { openContextMenu, makeEditable, ContextMenuItem, animateToTransparent, jo_mouseDetected } from \"../../tools/HtmlTools.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { escapeHtml } from \"../../tools/StringTools.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type AccordionElement = {\r\n    name: string;\r\n    sortName?: string;      // if sortName == null, then name will be used when sorting\r\n    externalElement?: any;\r\n    iconClass?: string;\r\n    $htmlFirstLine?: JQuery<HTMLElement>;\r\n    $htmlSecondLine?: JQuery<HTMLElement>;\r\n\r\n    isFolder: boolean;\r\n    path: string[];\r\n}\r\n\r\nexport type AccordionContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: (panel: AccordionElement) => void;\r\n    subMenu?: AccordionContextMenuItem[]\r\n}\r\n\r\nexport class AccordionPanel {\r\n\r\n    elements: AccordionElement[] = [];\r\n\r\n    $captionElement: JQuery<HTMLElement>;\r\n    $buttonNew: JQuery<HTMLElement>;\r\n    $listElement: JQuery<HTMLElement>;\r\n\r\n    private fixed: boolean;\r\n\r\n    dontSortElements: boolean = false;\r\n\r\n    static currentlyDraggedElement: AccordionElement;\r\n    static currentlyDraggedElementKind: string;\r\n\r\n    newFilesElementCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    newDatabaseElementCallback: (path: string[]) => void;\r\n    newFolderCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    renameCallback: (externalElement: any, newName: string) => string;\r\n    deleteCallback: (externalElement: any, callbackIfSuccessful: () => void) => void;\r\n    selectCallback: (externalElement: any) => void;\r\n    addElementActionCallback: (accordionElement: AccordionElement) => JQuery<HTMLElement>;\r\n    contextMenuProvider: (externalElement: any) => AccordionContextMenuItem[];\r\n    moveCallback: (ae: AccordionElement | AccordionElement[]) => void;\r\n    dropElementCallback: (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => void;\r\n\r\n    $newFolderAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private accordion: Accordion, private caption: string, private flexWeight: string,\r\n        private newButtonClass: string, private buttonNewTitle: string,\r\n        private defaultIconClass: string, private withDeleteButton: boolean, private withFolders: boolean,\r\n        private kind: \"workspace\" | \"file\" | \"class\" | \"student\", private enableDrag: boolean, private acceptDropKinds: string[]) {\r\n\r\n        accordion.addPanel(this);\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        if (withFolders) {\r\n            let that = this;\r\n            this.$newFolderAction = jQuery('<div class=\"img_add-folder-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Neuen Ordner auf oberster Ebene anlegen\">');\r\n            this.$newFolderAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                let pathArray: string[] = [];\r\n\r\n                this.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                    this.newFolderCallback(newElement, () => {\r\n                        this.sortElements();\r\n                        newElement.$htmlFirstLine[0].scrollIntoView();\r\n                        animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                    });\r\n                });\r\n\r\n            })\r\n\r\n            this.addAction(this.$newFolderAction);\r\n\r\n\r\n            let $collapseAllAction = jQuery('<div class=\"img_collapse-all-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Alle Ordner zusammenfalten\">');\r\n            $collapseAllAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                that.collapseAll();\r\n\r\n            })\r\n\r\n            this.addAction($collapseAllAction);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    collapseAll() {\r\n        for (let element of this.elements) {\r\n            if (element.isFolder) {\r\n                if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                    element.$htmlFirstLine.removeClass('jo_expanded');\r\n                    element.$htmlFirstLine.addClass('jo_collapsed');\r\n                }\r\n            }\r\n            if (element.path.length > 0) {\r\n                element.$htmlFirstLine.slideUp(200);\r\n            }\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        this.$captionElement.remove();\r\n        this.$listElement.remove();\r\n    }\r\n\r\n    setFixed(fixed: boolean) {\r\n        this.fixed = fixed;\r\n        if (this.fixed) {\r\n            this.grow();\r\n            this.$captionElement.addClass('jo_fixed');\r\n        } else {\r\n            this.$captionElement.removeClass('jo_fixed');\r\n        }\r\n\r\n    }\r\n\r\n    //     <div class=\"jo_leftpanelcaption expanded\" id=\"workspace\" data-panel=\"filelistouter\">\r\n    //     <span>WORKSPACE</span>\r\n    //     <div class=\"jo_actions\"><img id=\"buttonNewFile\" title=\"Neue Datei hinzufügen\"\r\n    //             src=\"assets/projectexplorer/add-file-dark.svg\"></div>\r\n    // </div>\r\n    // <div id=\"filelistouter\" class=\"jo_projectexplorerdiv scrollable\" data-grow=\"3\"\r\n    //     style=\"flex-grow: 3\">\r\n    //     <div id=\"filelist\"></div>\r\n    // </div>\r\n\r\n\r\n    enableNewButton(enabled: boolean) {\r\n        if (this.$buttonNew != null) {\r\n            if (enabled) {\r\n                this.$buttonNew.show();\r\n            } else {\r\n                this.$buttonNew.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    getCurrentlySelectedPath(): string[] {\r\n        let pathArray: string[] = [];\r\n        let selectedElement = this.getSelectedElement();\r\n        if (selectedElement != null) {\r\n            pathArray = selectedElement.path.slice(0);\r\n            if (selectedElement.isFolder) pathArray.push(selectedElement.name);\r\n        }\r\n        return pathArray;\r\n    }\r\n\r\n    compareWithPath(name1: string, path1: string[], isFolder1: boolean, name2: string, path2: string[], isFolder2: boolean) {\r\n\r\n        path1 = path1.slice();\r\n        path1.push(name1);\r\n        name1 = \"\";\r\n\r\n        path2 = path2.slice();\r\n        path2.push(name2);\r\n        name2 = \"\";\r\n\r\n        let i = 0;\r\n        while (i < path1.length && i < path2.length) {\r\n            let cmp = path1[i].localeCompare(path2[i]);\r\n            if (cmp != 0) return cmp;\r\n            i++;\r\n        }\r\n\r\n        if (path1.length < path2.length) return -1;\r\n        if (path1.length > path2.length) return 1;\r\n\r\n        return name1.localeCompare(name2);\r\n\r\n\r\n        // let nameWithPath1 = path1.join(\"/\");\r\n        // if (nameWithPath1 != \"\" && name1 != \"\") nameWithPath1 += \"/\";\r\n        // nameWithPath1 += name1;\r\n\r\n        // let nameWithPath2 = path2.join(\"/\");\r\n        // if (nameWithPath2 != \"\" && name2 != \"\") nameWithPath2 += \"/\";\r\n        // nameWithPath2 += name2;\r\n\r\n        // return nameWithPath1.localeCompare(nameWithPath2);\r\n    }\r\n\r\n\r\n    getElementIndex(name: string, path: string[], isFolder: boolean): number {\r\n\r\n        for (let i = 0; i < this.elements.length; i++) {\r\n            let element = this.elements[i];\r\n\r\n            if (this.compareWithPath(name, path, isFolder, element.name, element.path, element.isFolder) < 0) return i;\r\n\r\n        }\r\n        return this.elements.length;\r\n    }\r\n\r\n    insertElement(ae: AccordionElement) {\r\n        let insertIndex = this.getElementIndex(ae.name, ae.path, ae.isFolder);\r\n        // if (ae.path.length == 0) insertIndex = this.elements.length;\r\n        this.elements.splice(insertIndex, 0, ae);\r\n\r\n        let $elements = this.$listElement.find('.jo_file');\r\n\r\n        if (insertIndex == 0) {\r\n            this.$listElement.prepend(ae.$htmlFirstLine);\r\n        } else if(insertIndex == $elements.length){\r\n            this.$listElement.append(ae.$htmlFirstLine);\r\n        } else {\r\n            let elementAtIndex = $elements.get(insertIndex);\r\n            jQuery(elementAtIndex).before(ae.$htmlFirstLine);\r\n        }\r\n\r\n    }\r\n\r\n    addFolder(name: string, path: string[], callback: (newPanel: AccordionElement) => void) {\r\n\r\n        let ae: AccordionElement = {\r\n            name: name,\r\n            isFolder: true,\r\n            path: path\r\n        }\r\n\r\n        let $element = this.renderElement(ae, true);\r\n\r\n        this.insertElement(ae);\r\n\r\n        $element[0].scrollIntoView();\r\n\r\n        this.renameElement(ae, () => {\r\n\r\n            callback(ae);\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    renderOuterHtmlElements($accordionDiv: JQuery<HTMLElement>) {\r\n        let that = this;\r\n\r\n        this.$captionElement = jQuery(`<div class=\"jo_leftpanelcaption jo_expanded\">\r\n        <div class=\"jo_captiontext\">` + this.caption + `</div><div class=\"jo_actions\"></div></div>`);\r\n\r\n        if (this.newButtonClass != null) {\r\n            this.$buttonNew = jQuery('<div class=\"jo_button jo_active ' + this.newButtonClass + '\" title=\"' + this.buttonNewTitle + '\">');\r\n            this.$captionElement.find('.jo_actions').append(this.$buttonNew);\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n            this.$buttonNew.on(mousePointer + 'down', (ev) => {\r\n\r\n                Helper.close();\r\n                ev.stopPropagation();\r\n\r\n                let path = that.getCurrentlySelectedPath();\r\n\r\n                let ae: AccordionElement = {\r\n                    name: \"Neu\",\r\n                    isFolder: false,\r\n                    path: path\r\n                }\r\n\r\n                let insertIndex = this.getElementIndex(\"\", path, false);\r\n                this.elements.splice(insertIndex, 0, ae);\r\n                let $element = this.renderElement(ae, true);\r\n\r\n\r\n                if (insertIndex == 0) {\r\n                    this.$listElement.prepend($element);\r\n                } else {\r\n                    let elementAtIndex = this.$listElement.find('.jo_file').get(insertIndex - 1);\r\n                    jQuery(elementAtIndex).after($element);\r\n                }\r\n\r\n                $element[0].scrollIntoView();\r\n\r\n                that.renameElement(ae, () => {\r\n\r\n                    that.newFilesElementCallback(ae, (externalElement: any) => {\r\n\r\n                        ae.externalElement = externalElement;\r\n\r\n                        if (ae.$htmlSecondLine != null) {\r\n                            ae.$htmlSecondLine.insertAfter($element);\r\n                        }\r\n\r\n                        if (that.selectCallback != null) that.select(ae.externalElement);\r\n\r\n                    });\r\n\r\n                });\r\n\r\n            });\r\n\r\n        }\r\n\r\n        let $listOuter = jQuery('<div id=\"filelistouter\" class=\"jo_projectexplorerdiv jo_scrollable\" data-grow=\"'\r\n            + this.flexWeight + '\" style=\"flex-grow: ' + this.flexWeight + '\"></div>');\r\n        this.$listElement = jQuery('<div class=\"jo_filelist\"></div>')\r\n\r\n        $listOuter.append(this.$listElement);\r\n\r\n        $accordionDiv.append(this.$captionElement);\r\n        $accordionDiv.append($listOuter);\r\n\r\n        let $ce = this.$captionElement;\r\n        let $li = this.$listElement.parent();\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $ce.on(mousePointer + 'down', (ev) => {\r\n            if (ev.button != 0) {\r\n                return;\r\n            }\r\n\r\n            if (!this.fixed) {\r\n                let targetGrow = $li.data('grow');\r\n                if ($ce.hasClass('jo_expanded')) {\r\n                    if (that.accordion.parts.length > 1) {\r\n                        $li.animate({\r\n                            'flex-grow': 0.001\r\n                        }, 1000, () => { $ce.toggleClass('jo_expanded'); });\r\n                    }\r\n                } else {\r\n                    $ce.toggleClass('jo_expanded');\r\n                    $li.animate({\r\n                        'flex-grow': targetGrow\r\n                    }, 1000);\r\n                }\r\n            }\r\n        });\r\n\r\n        $ce.on('dragover', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                $ce.addClass('jo_file_dragover');\r\n                event.preventDefault();\r\n            }\r\n        })\r\n\r\n        $ce.on('dragleave', (event) => {\r\n            $ce.removeClass('jo_file_dragover');\r\n        })\r\n\r\n        $ce.on('drop', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                event.preventDefault();\r\n                $ce.removeClass('jo_file_dragover');\r\n                let element1 = AccordionPanel.currentlyDraggedElement;\r\n                if (element1 != null) {\r\n                    that.moveElement(element1, null);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    grow() {\r\n        let $li = this.$listElement.parent();\r\n        let targetGrow = $li.data('grow');\r\n        $li.css('flex-grow', targetGrow);\r\n        this.$captionElement.addClass('jo_expanded');\r\n    }\r\n\r\n    addElement(element: AccordionElement, expanded: boolean) {\r\n        // this.elements.push(element);\r\n        // element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        // this.$listElement.prepend(element.$htmlFirstLine);\r\n        element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        this.insertElement(element);\r\n    }\r\n\r\n    sortElements() {\r\n        if (this.dontSortElements) return;\r\n        this.elements.sort((a, b) => {\r\n            let aName = a.sortName ? a.sortName : a.name;\r\n            let bName = b.sortName ? b.sortName : b.name;\r\n\r\n            return this.compareWithPath(aName, a.path, a.isFolder, bName, b.path, b.isFolder);\r\n\r\n        });\r\n        this.elements.forEach((element) => { this.$listElement.append(element.$htmlFirstLine) });\r\n    }\r\n\r\n    setTextAfterFilename(element: AccordionElement, text: string, cssClass: string) {\r\n        if(element == null) return;\r\n        let $div = element.$htmlFirstLine.find('.jo_textAfterName');\r\n        $div.addClass(cssClass);\r\n        $div.html(text);\r\n    }\r\n\r\n    addAction($element: JQuery<HTMLElement>) {\r\n        this.$captionElement.find('.jo_actions').prepend($element);\r\n    }\r\n\r\n    renderElement(element: AccordionElement, expanded: boolean): JQuery<HTMLElement> {\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        let that = this;\r\n\r\n        let expandedCollapsed = \"\";\r\n\r\n        if (element.iconClass == null) element.iconClass = this.defaultIconClass;\r\n        if (element.isFolder) {\r\n            element.iconClass = \"folder\";\r\n            expandedCollapsed = expanded ? \" jo_expanded\" : \" jo_collapsed\";\r\n        }\r\n\r\n        let pathHtml = \"\";\r\n        if (element.path == null) element.path = [];\r\n        for (let i = 0; i < element.path.length; i++) {\r\n            pathHtml += '<div class=\"jo_folderline\"></div>';\r\n        }\r\n\r\n        element.$htmlFirstLine = jQuery(`<div class=\"jo_file jo_${element.iconClass} ${expandedCollapsed}\">\r\n        <div class=\"jo_folderlines\">${pathHtml}</div>\r\n           <div class=\"jo_fileimage\"></div>\r\n           <div class=\"jo_filename\">${escapeHtml(element.name)}</div>\r\n           <div class=\"jo_textAfterName\"></div>\r\n           <div class=\"jo_additionalButtonSettings\"></div>\r\n           ${this.withDeleteButton ? '<div class=\"jo_delete img_delete jo_button jo_active' + (false ? \" jo_delete_always\" : \"\") + '\"></div>' : \"\"}\r\n           ${!jo_mouseDetected ? '<div class=\"jo_settings_button img_ellipsis-dark jo_button jo_active\"></div>' : \"\"}\r\n           </div>`);\r\n\r\n        if (!expanded && element.path.length > 0) {\r\n            element.$htmlFirstLine.hide();\r\n        }\r\n\r\n        if (this.addElementActionCallback != null) {\r\n            let $elementAction = this.addElementActionCallback(element);\r\n            element.$htmlFirstLine.append($elementAction);\r\n        }\r\n\r\n        if (this.withFolders) {\r\n            if (element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            that.moveElement(element1, element);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withFolders || this.enableDrag) {\r\n            let $filedragpart = element.$htmlFirstLine.find('.jo_filename');\r\n            $filedragpart.attr('draggable', 'true');\r\n            $filedragpart.on('dragstart', (event) => {\r\n                AccordionPanel.currentlyDraggedElement = element;\r\n                AccordionPanel.currentlyDraggedElementKind = that.kind;\r\n                event.originalEvent.dataTransfer.effectAllowed = element.isFolder ? \"move\" : \"copyMove\";\r\n            })\r\n        }\r\n\r\n        if (this.acceptDropKinds != null && this.acceptDropKinds.length > 0) {\r\n            if (!element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n\r\n                        if (event.ctrlKey) {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"copy\";\r\n                        } else {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"move\";\r\n                        }\r\n\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            if (that.dropElementCallback != null) that.dropElementCallback(element, element1, event.ctrlKey ? \"copy\" : \"move\");\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        element.$htmlFirstLine.on(mousePointer + 'up', (ev) => {\r\n\r\n            if (ev.button == 0 && that.selectCallback != null) {\r\n                that.selectCallback(element.externalElement);\r\n\r\n                for (let ae of that.elements) {\r\n                    if (ae != element && ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                        ae.$htmlFirstLine.removeClass('jo_active');\r\n                    }\r\n                }\r\n\r\n                element.$htmlFirstLine.addClass('jo_active');\r\n\r\n                if (element.isFolder) {\r\n\r\n                    if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                        element.$htmlFirstLine.removeClass('jo_expanded');\r\n                        element.$htmlFirstLine.addClass('jo_collapsed');\r\n                    } else {\r\n                        element.$htmlFirstLine.addClass('jo_expanded');\r\n                        element.$htmlFirstLine.removeClass('jo_collapsed');\r\n                    }\r\n\r\n                    let pathIsCollapsed: { [path: string]: boolean } = {};\r\n                    for (let e of this.elements) {\r\n                        if (e.isFolder) {\r\n                            let path = e.path.join(\"/\");\r\n                            if (path != \"\") path += \"/\";\r\n                            path += e.name;\r\n                            pathIsCollapsed[path] = e.$htmlFirstLine.hasClass('jo_collapsed');\r\n                            if (pathIsCollapsed[e.path.join(\"/\")]) pathIsCollapsed[path] = true;\r\n                        }\r\n                    }\r\n                    pathIsCollapsed[\"\"] = false;\r\n\r\n                    for (let e of this.elements) {\r\n                        if (pathIsCollapsed[e.path.join(\"/\")]) {\r\n                            e.$htmlFirstLine.slideUp(200);\r\n                        } else {\r\n                            e.$htmlFirstLine.slideDown(200);\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n\r\n        let contextmenuHandler = function (event) {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [];\r\n            if (that.renameCallback != null) {\r\n                contextMenuItems.push({\r\n                    caption: \"Umbenennen\",\r\n                    callback: () => {\r\n                        that.renameElement(element);\r\n                    }\r\n                })\r\n            }\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n            if (element.isFolder) {\r\n                contextMenuItems = contextMenuItems.concat([\r\n                    {\r\n                        caption: \"Neuen Unterordner anlegen (unterhalb '\" + element.name + \"')...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            // that.$newFolderAction.trigger(mousePointer + 'down');\r\n                            let pathArray = that.getCurrentlySelectedPath();\r\n\r\n                            that.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                                that.newFolderCallback(newElement, () => {\r\n                                    that.sortElements();\r\n                                    newElement.$htmlFirstLine[0].scrollIntoView();\r\n                                    animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                                });\r\n                            });\r\n\r\n                        }\r\n                    }, {\r\n                        caption: \"Neue Datenbank...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n\r\n                            that.newDatabaseElementCallback(element.path.concat(element.name));\r\n\r\n                        }\r\n                    }\r\n                ])\r\n            }\r\n\r\n\r\n            if (that.contextMenuProvider != null && !element.isFolder) {\r\n\r\n                for (let cmi of that.contextMenuProvider(element)) {\r\n                    contextMenuItems.push({\r\n                        caption: cmi.caption,\r\n                        callback: () => {\r\n                            cmi.callback(element);\r\n                        },\r\n                        color: cmi.color,\r\n                        subMenu: cmi.subMenu == null ? null : cmi.subMenu.map((mi) => {\r\n                            return {\r\n                                caption: mi.caption,\r\n                                callback: () => {\r\n                                    mi.callback(element);\r\n                                },\r\n                                color: mi.color\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n\r\n            if (contextMenuItems.length > 0) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                openContextMenu(contextMenuItems, event.pageX, event.pageY);\r\n            }\r\n        };\r\n\r\n        element.$htmlFirstLine[0].addEventListener(\"contextmenu\", contextmenuHandler, false);\r\n\r\n        // long press for touch devices\r\n        let pressTimer: number;\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.on('pointerup', () => {\r\n                clearTimeout(pressTimer);\r\n                return false;\r\n            }).on('pointerdown', (event) => {\r\n                pressTimer = window.setTimeout(() => {\r\n                    contextmenuHandler(event);\r\n                }, 500);\r\n                return false;\r\n            });\r\n        }\r\n\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('pointerdown', (e) => {\r\n                contextmenuHandler(e);\r\n            });\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('mousedown click', (e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            });\r\n        }\r\n\r\n        if (that.withDeleteButton) {\r\n            element.$htmlFirstLine.find('.jo_delete').on(mousePointer + 'up', (ev) => {\r\n                ev.preventDefault();\r\n                openContextMenu([{\r\n                    caption: \"Abbrechen\",\r\n                    callback: () => {\r\n                        // nothing to do.\r\n                    }\r\n                }, {\r\n                    caption: \"Ich bin mir sicher: löschen!\",\r\n                    color: \"#ff6060\",\r\n                    callback: () => {\r\n\r\n                        if (element.isFolder) {\r\n                            if (that.getChildElements(element).length > 0) {\r\n                                alert('Dieser Ordner kann nicht gelöscht werden, da er nicht leer ist.');\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        that.deleteCallback(element.externalElement, () => {\r\n                            element.$htmlFirstLine.remove();\r\n                            if (element.$htmlSecondLine != null) element.$htmlSecondLine.remove();\r\n                            that.elements.splice(that.elements.indexOf(element), 1);\r\n\r\n                            if (that.selectCallback != null) {\r\n                                if (that.elements.length > 0) {\r\n                                    that.select(that.elements[0].externalElement);\r\n                                } else {\r\n                                    that.select(null);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }], ev.pageX + 2, ev.pageY + 2);\r\n                ev.stopPropagation();\r\n            });\r\n        }\r\n\r\n        return element.$htmlFirstLine;\r\n\r\n    }\r\n\r\n    moveElement(elementToMove: AccordionElement, destinationFolder: AccordionElement) {\r\n        let destinationPath: string[] = destinationFolder == null ? [] : destinationFolder.path.slice(0).concat([destinationFolder.name]);\r\n        if (elementToMove.isFolder) {\r\n            let movedElements: AccordionElement[] = [elementToMove];\r\n\r\n            let sourcePath = elementToMove.path.concat([elementToMove.name]).join(\"/\");\r\n\r\n            if(destinationPath.join('/').indexOf(sourcePath) == 0) return;\r\n\r\n            let oldPathLength = elementToMove.path.length;\r\n            elementToMove.path = destinationPath.slice(0);\r\n\r\n            for (let element of this.elements) {\r\n                if (element.path.join(\"/\").startsWith(sourcePath)) {\r\n                    element.path.splice(0, oldPathLength);\r\n                    element.path = destinationPath.concat(element.path);\r\n                    movedElements.push(element);\r\n                }\r\n            }\r\n\r\n            for (let el of movedElements) {\r\n                el.$htmlFirstLine.remove();\r\n                this.elements.splice(this.elements.indexOf(el), 1);\r\n            }\r\n            for (let el of movedElements) {\r\n                this.renderElement(el, true);\r\n                this.insertElement(el);\r\n            }\r\n\r\n            this.moveCallback(movedElements);\r\n        } else {\r\n            elementToMove.path = destinationPath;\r\n            elementToMove.$htmlFirstLine.remove();\r\n            this.elements.splice(this.elements.indexOf(elementToMove), 1);\r\n            this.renderElement(elementToMove, true);\r\n            this.insertElement(elementToMove);\r\n            this.select(elementToMove.externalElement);\r\n            elementToMove.$htmlFirstLine[0].scrollIntoView();\r\n            this.moveCallback(elementToMove);\r\n        }\r\n    }\r\n\r\n    getChildElements(folder: AccordionElement): AccordionElement[] {\r\n        let path = folder.path.slice(0).concat(folder.name).join(\"/\");\r\n        return this.elements.filter((element) => element.path.join(\"/\").startsWith(path));\r\n    }\r\n\r\n    renameElement(element: AccordionElement, callback?: () => void) {\r\n        let that = this;\r\n        let $div = element.$htmlFirstLine.find('.jo_filename');\r\n        let pointPos = element.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        this.dontSortElements = true;\r\n        makeEditable($div, $div, (newText: string) => {\r\n            if (element.externalElement != null) newText = that.renameCallback(element.externalElement, newText);\r\n            element.name = newText;\r\n            $div.html(element.name);\r\n            if (callback != null) callback();\r\n            that.sortElements();\r\n            $div[0].scrollIntoView();\r\n            this.dontSortElements = false;\r\n        }, selection);\r\n    }\r\n\r\n    select(externalElement: any, invokeCallback: boolean = true, scrollIntoView: boolean = false) {\r\n\r\n        if (externalElement == null) {\r\n            for (let ae1 of this.elements) {\r\n                if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n            }\r\n        } else {\r\n            let ae = this.findElement(externalElement);\r\n\r\n            if (ae != null) {\r\n                for (let ae1 of this.elements) {\r\n                    if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n                }\r\n\r\n                ae.$htmlFirstLine.addClass('jo_active');\r\n                if (scrollIntoView) {\r\n                    let pathString = ae.path.join(\"/\");\r\n                    for (let el of this.elements) {\r\n                        let elPath = el.path.slice(0);\r\n                        if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                            if (el.isFolder) {\r\n                                elPath.push(el.name);\r\n                                if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                                    el.$htmlFirstLine.removeClass(\"jo_collapsed\");\r\n                                    el.$htmlFirstLine.addClass(\"jo_expanded\");\r\n                                }\r\n                            }\r\n                            el.$htmlFirstLine.show();\r\n                        }\r\n\r\n                    }\r\n\r\n                    ae.$htmlFirstLine[0].scrollIntoView();\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (invokeCallback && this.selectCallback != null) this.selectCallback(externalElement);\r\n\r\n    }\r\n\r\n    getPathString(ae: AccordionElement) {\r\n        let ps: string = ae.path.join(\"/\");\r\n        if (ae.isFolder) {\r\n            if (ps != \"\") ps += \"/\";\r\n            ps += ae.name;\r\n        }\r\n        return ps;\r\n    }\r\n\r\n    setElementClass(element: AccordionElement, iconClass: string) {\r\n        if (element != null) {\r\n            element.$htmlFirstLine?.removeClass(\"jo_\" + element.iconClass).addClass(\"jo_\" + iconClass);\r\n            element.iconClass = iconClass;\r\n        }\r\n\r\n    }\r\n\r\n    findElement(externalElement: any): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                return ae;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    removeElement(externalElement: any) {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                ae.$htmlFirstLine.remove();\r\n                if (ae.$htmlSecondLine != null) ae.$htmlSecondLine.remove();\r\n                this.elements.splice(this.elements.indexOf(ae), 1);\r\n\r\n                if (this.selectCallback != null) {\r\n                    if (this.elements.length > 0) {\r\n                        this.select(this.elements[0].externalElement);\r\n                    } else {\r\n                        this.select(null);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.$listElement.empty();\r\n        this.elements = [];\r\n    }\r\n\r\n    setCaption(text: string) {\r\n        this.$captionElement.find('.jo_captiontext').html(text);\r\n    }\r\n\r\n    getSelectedElement(): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                return ae;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class Accordion {\r\n\r\n    parts: AccordionPanel[] = [];\r\n    $html: JQuery<HTMLElement>;\r\n\r\n    constructor(public main: MainBase, $html: JQuery<HTMLElement>) {\r\n        this.$html = $html;\r\n        $html.addClass('jo_leftpanelinner');\r\n    }\r\n\r\n    addPanel(panel: AccordionPanel) {\r\n        panel.renderOuterHtmlElements(this.$html);\r\n        this.parts.push(panel);\r\n    }\r\n\r\n}","import { ClassData, UserData } from \"../../communication/Data.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { isEmptyObject } from \"jquery\";\r\n\r\nexport class DistributeToStudentsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n    studentCount: number = 0;\r\n\r\n    constructor(private classes: ClassData[], private workspace: Workspace, private main: Main){\r\n        this.init();\r\n    }\r\n\r\n    private init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Austeilen eines Workspace an einzelne Schüler/innen</div>\r\n             <div class=\"jo_ds_settings\">\r\n                <div class=\"jo_ds_settings_caption\">Workspace:</div><div class=\"jo_ds_workspacename\">${this.workspace.name}</div>\r\n                <div class=\"jo_ds_settings_caption\">Liste filtern:</div><div class=\"jo_ds_filterdiv\"><input class=\"dialog-input\"></input></div>\r\n             </div>\r\n             <div class=\"jo_ds_student_list jo_scrollable\">\r\n             </div>\r\n             <div class=\"jo_ds_selected_message\"></div>\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_distribute_button\">Austeilen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        let $studentList = jQuery('.jo_ds_student_list');\r\n        let that = this;\r\n\r\n        for(let klass of this.classes){\r\n            for(let student of klass.students){\r\n                let $studentLine = jQuery('<div class=\"jo_ds_student_line\">');\r\n                let $studentClass = jQuery(`<div class=\"jo_ds_student_class\">${klass.name}</div>`);                \r\n                let $studentName = jQuery(`<div class=\"jo_ds_student_name\">${student.rufname} ${student.familienname}</div>`);\r\n                $studentLine.append($studentClass, $studentName);\r\n                $studentList.append($studentLine);\r\n                $studentLine.on('mousedown', () => {\r\n                    $studentLine.toggleClass('jo_active');\r\n                     that.studentCount += $studentLine.hasClass('jo_active') ? 1 : -1;\r\n                     jQuery('.jo_ds_selected_message').text(`${that.studentCount} Schüler/inn/en selektiert`);\r\n                });\r\n                $studentLine.data('student', student);\r\n                $studentLine.data('klass', klass);\r\n            }\r\n        }\r\n\r\n        jQuery('.jo_ds_filterdiv>input').on('input', () => {\r\n            let filterText = <string>jQuery('.jo_ds_filterdiv>input').val();\r\n            if(filterText == null || filterText == \"\"){\r\n                $('.jo_ds_student_line').show();\r\n            } else {\r\n                $('.jo_ds_student_line').each((index, element) => {\r\n                    let $element = jQuery(element);\r\n                    let klass:ClassData = $element.data('klass');\r\n                    let student: UserData = $element.data('student');\r\n                    let text = klass.name + \" \" + student.rufname + \" \" + student.familienname;\r\n                    if(text.indexOf(filterText) >= 0){\r\n                        $element.show();\r\n                    } else {\r\n                        $element.hide();\r\n                    }\r\n                });\r\n\r\n            }\r\n            \r\n        });\r\n\r\n\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { that.close() });\r\n        jQuery('#jo_ds_distribute_button').on('click', () => {that.distributeWorkspace();});\r\n\r\n    }\r\n\r\n    distributeWorkspace() {\r\n\r\n        let student_ids: number[] = [];\r\n        $('.jo_ds_student_line').each((index, element) => {\r\n            let $element = jQuery(element);\r\n            if($element.hasClass('jo_active')){\r\n                let student: UserData = $element.data('student');\r\n                student_ids.push(student.id);\r\n            }\r\n        });\r\n\r\n        this.close();\r\n\r\n        this.main.networkManager.sendDistributeWorkspace(this.workspace, null, student_ids, (error: string) => {\r\n            if (error == null) {\r\n                let networkManager = this.main.networkManager;\r\n                let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                alert(`Der Workspace ${this.workspace.name} wurde an ${student_ids.length} Schüler/innen ausgeteilt. Er wird in maximal ${dt} s bei jedem Schüler ankommen.`);\r\n            } else {\r\n                alert(error);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n    \r\n\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionPanel, Accordion, AccordionElement, AccordionContextMenuItem } from \"./Accordion.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { WorkspaceData, Workspaces, ClassData, CreateWorkspaceData } from \"../../communication/Data.js\";\r\nimport { dateToString } from \"../../tools/StringTools.js\";\r\nimport { DistributeToStudentsDialog } from \"./DistributeToStudentsDialog.js\";\r\nimport { NewDatabaseDialog } from \"./NewDatabaseDialog.js\";\r\n\r\n\r\nexport class ProjectExplorer {\r\n\r\n    programPointerModule: Module = null;\r\n    programPointerPosition: TextPosition;\r\n    programPointerDecoration: string[] = [];\r\n\r\n    accordion: Accordion;\r\n    fileListPanel: AccordionPanel;\r\n    workspaceListPanel: AccordionPanel;\r\n\r\n    $homeAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private $projectexplorerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.accordion = new Accordion(this.main, this.$projectexplorerDiv);\r\n\r\n        this.initFilelistPanel();\r\n\r\n        this.initWorkspacelistPanel();\r\n\r\n    }\r\n\r\n    initFilelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.fileListPanel = new AccordionPanel(this.accordion, \"Kein Workspace gewählt\", \"1\",\r\n            \"img_add-file-dark\", \"Neue Datei...\", \"java\", true, false, \"file\", true, []);\r\n\r\n        this.fileListPanel.newFilesElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                if (that.main.currentWorkspace == null) {\r\n                    alert('Bitte wählen Sie zuerst einen Workspace aus.');\r\n                    return null;\r\n                }\r\n\r\n                let f: File = {\r\n                    name: accordionElement.name,\r\n                    dirty: false,\r\n                    saved: true,\r\n                    text: \"\",\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    panelElement: accordionElement\r\n                };\r\n                let m = new Module(f, that.main);\r\n                let modulStore = that.main.currentWorkspace.moduleStore;\r\n                modulStore.putModule(m);\r\n                that.setModuleActive(m);\r\n                that.main.networkManager.sendCreateFile(m, that.main.currentWorkspace, that.main.workspacesOwnerId,\r\n                    (error: string) => {\r\n                        if (error == null) {\r\n                            successfulNetworkCommunicationCallback(m);\r\n                        } else {\r\n                            alert('Der Server ist nicht erreichbar!');\r\n\r\n                        }\r\n                    });\r\n\r\n            };\r\n\r\n        this.fileListPanel.renameCallback =\r\n            (module: Module, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                let file = module.file;\r\n\r\n                file.name = newName;\r\n                file.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.fileListPanel.deleteCallback =\r\n            (module: Module, callbackIfSuccessful: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.currentWorkspace.moduleStore.removeModule(module);\r\n                        callbackIfSuccessful();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.fileListPanel.contextMenuProvider = (accordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            if (!(that.main.user.is_teacher || that.main.user.is_admin || that.main.user.is_schooladmin)) {\r\n                let module: Module = <Module>accordionElement.externalElement;\r\n                let file = module.file;\r\n\r\n                // if (file.submitted_date == null) {\r\n                //     cmiList.push({\r\n                //         caption: \"Als Hausaufgabe markieren\",\r\n                //         callback: (element: AccordionElement) => {\r\n\r\n                //             let file = (<Module>element.externalElement).file;\r\n                //             file.submitted_date = dateToString(new Date());\r\n                //             file.saved = false;\r\n                //             that.main.networkManager.sendUpdates(null, true);\r\n                //             that.renderHomeworkButton(file);\r\n                //         }\r\n                //     });\r\n                // } else {\r\n                //     cmiList.push({\r\n                //         caption: \"Hausaufgabenmarkierung entfernen\",\r\n                //         callback: (element: AccordionElement) => {\r\n\r\n                //             let file = (<Module>element.externalElement).file;\r\n                //             file.submitted_date = null;\r\n                //             file.saved = false;\r\n                //             that.main.networkManager.sendUpdates(null, true);\r\n                //             that.renderHomeworkButton(file);\r\n\r\n                //         }\r\n                //     });\r\n                // }\r\n\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n\r\n\r\n        this.fileListPanel.selectCallback =\r\n            (module: Module) => {\r\n                that.setModuleActive(module);\r\n            }\r\n\r\n\r\n\r\n    }\r\n\r\n    renderHomeworkButton(file: File) {\r\n        let $buttonDiv = file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonHomework');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_homeworkButton').remove();\r\n\r\n        let klass: string = null;\r\n        let title: string = \"\";\r\n        if (file.submitted_date != null) {\r\n            klass = \"img_homework\";\r\n            title = \"Wurde als Hausaufgabe abgegeben: \" + file.submitted_date\r\n            if (file.text_before_revision) {\r\n                klass = \"img_homework-corrected\";\r\n                title = \"Korrektur liegt vor.\"\r\n            }\r\n        }\r\n\r\n        if (klass != null) {\r\n            let $homeworkButtonDiv = jQuery(`<div class=\"jo_homeworkButton ${klass}\" title=\"${title}\"></div>`);\r\n            $buttonDiv.prepend($homeworkButtonDiv);\r\n            if (klass.indexOf(\"jo_active\") >= 0) {\r\n                $homeworkButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n                $homeworkButtonDiv.on('click', (e) => {\r\n                    e.stopPropagation();\r\n                    // TODO\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initWorkspacelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.workspaceListPanel = new AccordionPanel(this.accordion, \"Datenbanken\", \"3\",\r\n            null, \"Neue Datenbank...\", \"workspace\", true, true, \"workspace\", false, [\"file\"]);\r\n\r\n        let $newWorkspaceAction = jQuery('<div class=\"img_add-database-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Neue Datenbank auf oberster Ordnerebene anlegen\">');\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $newWorkspaceAction.on(mousePointer + 'down', (e) => {\r\n            e.stopPropagation();\r\n\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            new NewDatabaseDialog(that.main, owner_id, this.workspaceListPanel.getCurrentlySelectedPath());\r\n\r\n        })\r\n\r\n        this.workspaceListPanel.addAction($newWorkspaceAction);\r\n        if(this.workspaceListPanel.$buttonNew != null){\r\n            this.workspaceListPanel.$buttonNew.hide();\r\n        }\r\n\r\n        this.workspaceListPanel.newDatabaseElementCallback = (path: string[]) => {\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            new NewDatabaseDialog(that.main, owner_id, path);\r\n\r\n        }\r\n\r\n\r\n        this.workspaceListPanel.renameCallback =\r\n            (workspace: Workspace, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                workspace.name = newName;\r\n                workspace.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.workspaceListPanel.deleteCallback =\r\n            (workspace: Workspace, successfulNetworkCommunicationCallback: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"workspace\", workspace.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.removeWorkspace(workspace);\r\n                        that.fileListPanel.enableNewButton(that.main.workspaceList.length > 0);\r\n                        that.fileListPanel.clear();\r\n                        that.main.databaseExplorer.clear();\r\n                        that.main.getResultsetPresenter().clear();\r\n                        successfulNetworkCommunicationCallback();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.workspaceListPanel.selectCallback =\r\n            (workspace: Workspace) => {\r\n                if(workspace.isFolder) return;\r\n                if (workspace != this.main.currentWorkspace) {\r\n                    that.main.networkManager.sendUpdates(() => {\r\n                        that.setWorkspaceActive(workspace);\r\n                    });\r\n                }\r\n            }\r\n\r\n        this.workspaceListPanel.newFolderCallback = (newElement: AccordionElement, successCallback) => {\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            let folder: Workspace = new Workspace(newElement.name, that.main, owner_id);\r\n            folder.isFolder = true;\r\n\r\n            folder.path = newElement.path.join(\"/\");\r\n            folder.panelElement = newElement;\r\n            newElement.externalElement = folder;\r\n            that.main.workspaceList.push(folder);\r\n\r\n            let wd: CreateWorkspaceData = {\r\n                id: -1,\r\n                isFolder: true,\r\n                name: folder.name,\r\n                path: folder.path\r\n            }\r\n\r\n            that.main.networkManager.sendCreateWorkspace(wd, that.main.workspacesOwnerId, (error: string) => {\r\n                if (error == null) {\r\n                    folder.id = wd.id;\r\n                    successCallback(folder);\r\n\r\n                } else {\r\n                    alert(\"Fehler: \" + error);\r\n                    that.workspaceListPanel.removeElement(newElement);\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        this.workspaceListPanel.moveCallback = (ae: AccordionElement | AccordionElement[]) => {\r\n            if (!Array.isArray(ae)) ae = [ae];\r\n            for (let a of ae) {\r\n                let ws: Workspace = a.externalElement;\r\n                ws.path = a.path.join(\"/\");\r\n                ws.saved = false;\r\n            }\r\n            this.main.networkManager.sendUpdates();\r\n        }\r\n\r\n        this.workspaceListPanel.dropElementCallback = (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => {\r\n            let workspace: Workspace = dest.externalElement;\r\n            let module: Module = droppedElement.externalElement;\r\n\r\n            if (workspace.moduleStore.getModules(false).indexOf(module) >= 0) return; // module is already in destination workspace\r\n\r\n            let f: File = {\r\n                name: module.file.name,\r\n                dirty: true,\r\n                saved: false,\r\n                text: module.file.text,\r\n                text_before_revision: null,\r\n                submitted_date: null,\r\n                student_edited_after_revision: false,\r\n                version: module.file.version,\r\n                panelElement: null\r\n            };\r\n\r\n            if (dropEffekt == \"move\") {\r\n                // move file\r\n                let oldWorkspace = that.main.currentWorkspace;\r\n                oldWorkspace.moduleStore.removeModule(module);\r\n                that.fileListPanel.removeElement(module);\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, () => { });\r\n            }\r\n\r\n            let m = new Module(f, that.main);\r\n            let modulStore = workspace.moduleStore;\r\n            modulStore.putModule(m);\r\n            that.main.networkManager.sendCreateFile(m, workspace, that.main.workspacesOwnerId,\r\n                (error: string) => {\r\n                    if (error == null) {\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n\r\n        }\r\n\r\n\r\n\r\n        this.$homeAction = jQuery('<div class=\"img_home-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Meine eigenen Workspaces anzeigen\">');\r\n\r\n        this.$homeAction.on(mousePointer +'down', (e) => {\r\n            e.stopPropagation();\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n                that.onHomeButtonClicked();\r\n            });\r\n\r\n            that.main.bottomDiv.hideHomeworkTab();\r\n\r\n        })\r\n\r\n        this.workspaceListPanel.addAction(this.$homeAction);\r\n        this.$homeAction.hide();\r\n\r\n        this.workspaceListPanel.contextMenuProvider = (workspaceAccordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            if (this.main.user.is_teacher && this.main.teacherExplorer.classPanel.elements.length > 0) {\r\n                cmiList.push({\r\n                    caption: \"An Klasse austeilen...\",\r\n                    callback: (element: AccordionElement) => { },\r\n                    subMenu: this.main.teacherExplorer.classPanel.elements.map((ae) => {\r\n                        return {\r\n                            caption: ae.name,\r\n                            callback: (element: AccordionElement) => {\r\n                                let klasse = <any>ae.externalElement;\r\n\r\n                                let workspace: Workspace = element.externalElement;\r\n\r\n                                this.main.networkManager.sendDistributeWorkspace(workspace, klasse, null, (error: string) => {\r\n                                    if (error == null) {\r\n                                        let networkManager = this.main.networkManager;\r\n                                        let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                                        alert(\"Der Workspace \" + workspace.name + \" wurde an die Klasse \" + klasse.name + \" ausgeteilt. Er wird in maximal \" +\r\n                                            dt + \" s bei jedem Schüler ankommen.\");\r\n                                    } else {\r\n                                        alert(error);\r\n                                    }\r\n                                });\r\n\r\n                            }\r\n                        }\r\n                    })\r\n                },\r\n                    {\r\n                        caption: \"An einzelne Schüler/innen austeilen...\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let classes: ClassData[] = this.main.teacherExplorer.classPanel.elements.map(ae => ae.externalElement);\r\n                            let workspace: Workspace = element.externalElement;\r\n                            new DistributeToStudentsDialog(classes, workspace, this.main);\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n    }\r\n\r\n    onHomeButtonClicked() {\r\n        this.main.teacherExplorer.restoreOwnWorkspaces();\r\n        this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.ownUpdateFrequencyInSeconds;\r\n        this.$homeAction.hide();\r\n        this.fileListPanel.enableNewButton(this.main.workspaceList.length > 0);\r\n    }\r\n\r\n    renderFiles(workspace: Workspace) {\r\n\r\n        let name = workspace == null ? \"Kein Workspace vorhanden\" : workspace.name;\r\n\r\n        this.fileListPanel.setCaption(name);\r\n        this.fileListPanel.clear();\r\n\r\n        if (this.main.getCurrentWorkspace() != null) {\r\n            for (let module of this.main.getCurrentWorkspace().moduleStore.getModules(false)) {\r\n                module.file.panelElement = null;\r\n            }\r\n        }\r\n\r\n        if (workspace != null) {\r\n            let moduleList: Module[] = [];\r\n\r\n            for (let m of workspace.moduleStore.getModules(false)) {\r\n                moduleList.push(m);\r\n            }\r\n\r\n            moduleList.sort((a, b) => { return a.file.name > b.file.name ? 1 : a.file.name < b.file.name ? -1 : 0 });\r\n\r\n            for (let m of moduleList) {\r\n\r\n                m.file.panelElement = {\r\n                    name: m.file.name,\r\n                    externalElement: m,\r\n                    isFolder: false,\r\n                    path: []\r\n                };\r\n\r\n                this.fileListPanel.addElement(m.file.panelElement, true);\r\n                this.renderHomeworkButton(m.file);\r\n            }\r\n\r\n            this.fileListPanel.sortElements();\r\n\r\n        }\r\n    }\r\n\r\n    renderWorkspaces(workspaceList: Workspace[]) {\r\n\r\n        this.fileListPanel.clear();\r\n        this.workspaceListPanel.clear();\r\n\r\n        for (let w of workspaceList) {\r\n            let path = w.path.split(\"/\");\r\n            if (path.length == 1 && path[0] == \"\") path = [];\r\n            w.panelElement = {\r\n                name: w.name,\r\n                externalElement: w,\r\n                iconClass: 'workspace',\r\n                isFolder: w.isFolder,\r\n                path: path\r\n            };\r\n\r\n            this.workspaceListPanel.addElement(w.panelElement, false);\r\n            w.renderSettingsButton(w.panelElement);\r\n        }\r\n\r\n        this.workspaceListPanel.sortElements();\r\n        this.fileListPanel.enableNewButton(workspaceList.length > 0);\r\n\r\n\r\n\r\n    }\r\n\r\n    renderErrorCount(workspace: Workspace, errorCountMap: Map<Module, number>) {\r\n        if (errorCountMap == null) return;\r\n        for (let m of workspace.moduleStore.getModules(false)) {\r\n            let errorCount: number = errorCountMap.get(m);\r\n            let errorCountS: string = ((errorCount == null || errorCount == 0) ? \"\" : \"(\" + errorCount + \")\");\r\n\r\n            this.fileListPanel.setTextAfterFilename(m.file.panelElement, errorCountS, 'jo_errorcount');\r\n        }\r\n    }\r\n\r\n    setWorkspaceActive(w: Workspace) {\r\n\r\n        if (w != null) {\r\n            this.fileListPanel.$buttonNew.show();\r\n        }\r\n\r\n        this.workspaceListPanel.select(w, false);\r\n\r\n        let callback = (error: string) => {this.initializeDatabaseTool(error, w)};\r\n\r\n        if (w.database == null) {\r\n            this.main.waitOverlay.show(\"Bitte warten, hole Datenbank vom Server ...\");\r\n\r\n            this.main.networkManager.fetchDatabase(w, callback);\r\n        } else {\r\n            callback(null);\r\n        }\r\n\r\n    }\r\n\r\n    initializeDatabaseTool(error: string, w: Workspace) {\r\n        if (error != null) {\r\n            alert(error);\r\n            return;\r\n        }\r\n\r\n        let dbTool = this.main.getDatabaseTool();\r\n\r\n        let statements: string[] = w.database.statements;\r\n        if (statements == null) statements = [];\r\n\r\n        dbTool.initializeWorker(w.database.templateDump, statements,\r\n            () => {\r\n                this.main.currentWorkspace = w;\r\n\r\n                if (this.main.user.id == w.owner_id) {\r\n                    this.main.user.currentWorkspace_id = w.id;\r\n                }\r\n\r\n                this.renderFiles(w);\r\n\r\n                if (w != null) {\r\n                    let nonSystemModules = w.moduleStore.getModules(false);\r\n\r\n                    if (w.currentlyOpenModule != null) {\r\n                        this.setModuleActive(w.currentlyOpenModule);\r\n                    } else if (nonSystemModules.length > 0) {\r\n                        this.setModuleActive(nonSystemModules[0]);\r\n                    } else {\r\n                        this.setModuleActive(null);\r\n                    }\r\n\r\n                    for (let m of nonSystemModules) {\r\n                        m.file.dirty = true;\r\n                    }\r\n\r\n                    if (nonSystemModules.length == 0) {\r\n\r\n                        Helper.showHelper(\"newSQLFileHelper\", this.main, this.fileListPanel.$captionElement);\r\n\r\n                    }\r\n\r\n                    this.main.notifier.connect(w);\r\n\r\n                } else {\r\n                    this.setModuleActive(null);\r\n                }\r\n\r\n            },\r\n            () => {\r\n                this.main.databaseExplorer.refreshAfterRetrievingDBStructure();\r\n                this.main.getHistoryViewer().clearAndShowStatements(w.database.statements);\r\n            });\r\n\r\n    }\r\n\r\n    writeEditorTextToFile() {\r\n        let cem = this.getCurrentlyEditedModule();\r\n        if (cem != null)\r\n            cem.file.text = cem.getProgramTextFromMonacoModel(); // 29.03. this.main.monaco.getValue();\r\n    }\r\n\r\n\r\n    lastOpenModule: Module = null;\r\n    setModuleActive(m: Module) {\r\n\r\n        this.main.bottomDiv.homeworkManager.hideRevision();\r\n\r\n        if (this.lastOpenModule != null) {\r\n            this.lastOpenModule.file.text = this.lastOpenModule.getProgramTextFromMonacoModel(); // this.main.monaco.getValue();\r\n            this.lastOpenModule.editorState = this.main.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (m == null) {\r\n            this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n        } else {\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.main.getMonacoEditor().setModel(m.model);\r\n            if (this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(m.bracketError);\r\n\r\n            if (m.file.text_before_revision != null) {\r\n                this.main.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n            } else {\r\n                this.main.bottomDiv.homeworkManager.hideHomeworkRevisionButton();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setActiveAfterExternalModelSet(m: Module) {\r\n        this.fileListPanel.select(m, false);\r\n\r\n        this.lastOpenModule = m;\r\n\r\n        if (m.editorState != null) {\r\n            this.main.editor.dontPushNextCursorMove++;\r\n            this.main.getMonacoEditor().restoreViewState(m.editorState);\r\n            this.main.editor.dontPushNextCursorMove--;\r\n        }\r\n\r\n        this.setCurrentlyEditedModule(m);\r\n\r\n        this.showProgramPointer();\r\n\r\n        setTimeout(() => {\r\n            if (!this.main.getMonacoEditor().getOptions().get(monaco.editor.EditorOption.readOnly)) {\r\n                this.main.getMonacoEditor().focus();\r\n            }\r\n        }, 300);\r\n\r\n    }\r\n\r\n\r\n    private showProgramPointer() {\r\n\r\n        if (this.programPointerModule == this.getCurrentlyEditedModule() && this.getCurrentlyEditedModule() != null) {\r\n            let position = this.programPointerPosition;\r\n            let range = {\r\n                startColumn: position.column, startLineNumber: position.line,\r\n                endColumn: position.column + position.length, endLineNumber: position.line\r\n            };\r\n\r\n            this.main.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n            this.programPointerDecoration = this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n                {\r\n                    range: range,\r\n                    options: {\r\n                        className: 'jo_revealProgramPointer', isWholeLine: true,\r\n                        overviewRuler: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.OverviewRulerLane.Center\r\n                        },\r\n                        minimap: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    range: range,\r\n                    options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n                }\r\n            ]);\r\n\r\n        }\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        // console statement execution:\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        let module = this.main.currentWorkspace.moduleStore.findModuleByFile(file);\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        this.programPointerModule = module;\r\n        this.programPointerPosition = position;\r\n\r\n        if (module != this.getCurrentlyEditedModule()) {\r\n            this.setModuleActive(module);\r\n        } else {\r\n            this.showProgramPointer();\r\n        }\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws == null) return null;\r\n\r\n        return ws.currentlyOpenModule;\r\n    }\r\n\r\n    setCurrentlyEditedModule(m: Module) {\r\n        if (m == null) return;\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws.currentlyOpenModule != m) {\r\n            ws.currentlyOpenModule = m;\r\n            ws.saved = false;\r\n            m.file.dirty = true;\r\n        }\r\n    }\r\n\r\n    setExplorerColor(color: string) {\r\n        let caption: string;\r\n\r\n        if (color == null) {\r\n            color = \"transparent\";\r\n            caption = \"Meine Datenbanken\";\r\n        } else {\r\n            caption = \"Schüler-DB\";\r\n        }\r\n\r\n        this.fileListPanel.$listElement.parent().css('background-color', color);\r\n        this.workspaceListPanel.$listElement.parent().css('background-color', color);\r\n\r\n        this.workspaceListPanel.setCaption(caption);\r\n    }\r\n\r\n    getNewModule(file: File): Module {\r\n        return new Module(file, this.main);\r\n    }\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class RightDiv {\r\n\r\n    isWholePage: boolean = false;\r\n\r\n    $tabs: JQuery<HTMLElement>;\r\n    $headings: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $rightDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$tabs = $rightDiv.find('.jo_tabs');\r\n        this.$headings = $rightDiv.find('.jo_tabheadings');\r\n        \r\n        let withClassDiagram = this.$headings.find('.jo_classDiagramTabHeading').length > 0;\r\n        let withObjectDiagram = this.$headings.find('.jo_objectDiagramTabHeading').length > 0;\r\n\r\n        let that = this;\r\n        let rightdiv_width: string = \"100%\";\r\n        $rightDiv.find('.jo_whole-window').on(\"click\", () => {\r\n\r\n            that.isWholePage = !that.isWholePage;\r\n            \r\n            let $wholeWindow = jQuery('.jo_whole-window');\r\n\r\n            if (!that.isWholePage) {\r\n                jQuery('#code').css('display', 'flex');\r\n                jQuery('#rightdiv').css('width', rightdiv_width);\r\n                // jQuery('#run').css('width', '');\r\n                $wholeWindow.removeClass('img_whole-window-back');\r\n                $wholeWindow.addClass('img_whole-window');\r\n                jQuery('#controls').insertAfter(jQuery('#view-mode'));\r\n                $wholeWindow.attr('title', 'Auf Fenstergröße vergrößern');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            } else {\r\n                jQuery('#code').css('display', 'none');\r\n                rightdiv_width = jQuery('#rightdiv').css('width');\r\n                jQuery('#rightdiv').css('width', '100%');\r\n                $wholeWindow.removeClass('img_whole-window');\r\n                $wholeWindow.addClass('img_whole-window-back');\r\n                // that.adjustWidthToWorld();\r\n                jQuery('.jo_control-container').append(jQuery('#controls'));\r\n                $wholeWindow.attr('title', 'Auf normale Größe zurückführen');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$rightDiv);\r\n    }\r\n\r\n\r\n\r\n}","import { jo_mouseDetected } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\nexport class Sliders {\r\n\r\n    main: Main;\r\n\r\n    constructor(main: Main) {\r\n        this.main = main;\r\n    }\r\n\r\n    initSliders() {\r\n        let that = this;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        jQuery('#slider1').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider1\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                \r\n                that.moveLeftPanel(dx);\r\n\r\n                x = mm.clientX;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider1\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider1\");\r\n                jQuery(document).off(mousePointer + \"up.slider1\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider2').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider2\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n\r\n                that.moveBottomDiv(dy);\r\n\r\n                y = mm.clientY;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider2\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider2\");\r\n                jQuery(document).off(mousePointer + \"up.slider2\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider3').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider3\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n\r\n                that.moveRightDiv(dx);\r\n\r\n                x = mm.clientX;\r\n                mm.stopPropagation();\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider3\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider3\");\r\n                jQuery(document).off(mousePointer + \"up.slider3\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        let sliderknobLeft = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"left: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobLeft);\r\n        sliderknobLeft.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopImmediatePropagation();\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobleft\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopImmediatePropagation();\r\n\r\n                that.moveLeftPanel(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobleft\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobleft\");\r\n                jQuery(document).off(mousePointer + \"up.knobleft\");\r\n            });\r\n\r\n        });\r\n\r\n        let sliderknobRight = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"right: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobRight);\r\n        sliderknobRight.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopImmediatePropagation();\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobright\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopImmediatePropagation();\r\n\r\n                that.moveRightDiv(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobright\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobright\");\r\n                jQuery(document).off(mousePointer + \"up.knobright\");\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n    \r\n    moveRightDiv(dx: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $rightDiv = jQuery('#rightdiv');\r\n\r\n        let width = Number.parseInt($rightDiv.css('width').replace('px', ''));\r\n        $rightDiv.css('width', (width - dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth + dx) + \"px\");\r\n        \r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n        jQuery('.jo_graphics').trigger('sizeChanged');\r\n        width += dx;\r\n}\r\n    moveBottomDiv(dy: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $bottomDiv = jQuery('#bottomdiv-outer');\r\n\r\n        let height = Number.parseInt($bottomDiv.css('height').replace('px', ''));\r\n        $bottomDiv.css('height', (height - dy) + \"px\");\r\n\r\n        let meheight = Number.parseInt($editor.css('height').replace('px', ''));\r\n        $editor.css('height', (meheight + dy) + \"px\");\r\n\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n}\r\n\r\n    moveLeftPanel(dx: number) {\r\n        let $leftPanel = jQuery('#leftpanel');\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n\r\n        let width = Number.parseInt($leftPanel.css('width').replace('px', ''));\r\n        $leftPanel.css('width', (width + dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth - dx) + \"px\");\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionPanel, AccordionElement } from \"./Accordion.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassData, UserData, CRUDUserRequest, CRUDClassRequest, GetWorkspacesResponse, GetWorkspacesRequest, Workspaces } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\nexport class TeacherExplorer {\r\n\r\n    studentPanel: AccordionPanel;\r\n    classPanel: AccordionPanel;\r\n\r\n    // save them here when displaying pupils workspaces:\r\n    ownWorkspaces: Workspace[];\r\n    currentOwnWorkspace: Workspace;\r\n\r\n    constructor(private main: Main, private classData: ClassData[]) {\r\n\r\n    }\r\n\r\n    removePanels() {\r\n        this.classPanel.remove();\r\n        this.studentPanel.remove();\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.initStudentPanel();\r\n\r\n        this.initClassPanel();\r\n\r\n        this.renderClasses(this.classData);\r\n\r\n    }\r\n\r\n    initStudentPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.studentPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Schüler/innen\", \"2\", null,\r\n            \"\", \"student\", false, false, \"student\", false, []);\r\n\r\n        this.studentPanel.selectCallback = (ae: UserData) => {\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let request: GetWorkspacesRequest = {\r\n                    ws_userId: ae.id,\r\n                    userId: this.main.user.id,\r\n                    language: 1\r\n                }\r\n\r\n                ajax(\"getWorkspaces\", request, (response: GetWorkspacesResponse) => {\r\n                    if (response.success == true) {\r\n\r\n                        if (that.main.workspacesOwnerId == that.main.user.id) {\r\n                            that.ownWorkspaces = that.main.workspaceList.slice();\r\n                            that.currentOwnWorkspace = that.main.currentWorkspace;\r\n                        }\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces);\r\n                        that.main.workspacesOwnerId = ae.id;\r\n                        that.main.projectExplorer.setExplorerColor(\"rgba(255, 0, 0, 0.2\");\r\n                        that.main.projectExplorer.$homeAction.show();\r\n                        Helper.showHelper(\"homeButtonHelper\", this.main);\r\n\r\n                        that.main.bottomDiv.showHomeworkTab();\r\n                        that.main.bottomDiv.homeworkManager.attachToWorkspaces(that.main.workspaceList);\r\n                    }\r\n\r\n                    this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n                    this.main.networkManager.secondsTillNextUpdate = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    restoreOwnWorkspaces() {\r\n        let main = this.main;\r\n\r\n        // main.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n        main.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        main.workspaceList = this.ownWorkspaces;\r\n        main.currentWorkspace = this.currentOwnWorkspace;\r\n        main.workspacesOwnerId = main.user.id;\r\n        main.projectExplorer.setExplorerColor(null);\r\n\r\n        main.projectExplorer.renderWorkspaces(main.workspaceList);\r\n\r\n        if (main.currentWorkspace == null && main.workspaceList.length > 0) {\r\n            main.currentWorkspace = main.workspaceList[0];\r\n        }\r\n\r\n        if (main.currentWorkspace != null) {\r\n            main.projectExplorer.setWorkspaceActive(main.currentWorkspace);\r\n        }\r\n\r\n        this.studentPanel.select(null, false);\r\n\r\n    }\r\n\r\n    initClassPanel() {\r\n        let that = this;\r\n\r\n        this.classPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Klassen\", \"1\", null, \"\", \"class\", false, false, \"class\", false, []);\r\n\r\n        this.classPanel.selectCallback = (ea) => {\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let classData = <ClassData>ea;\r\n                if (classData != null) {\r\n                    this.renderStudents(classData.students);\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    renderStudents(userDataList: UserData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        userDataList.sort((a, b) => {\r\n            if (a.familienname > b.familienname) return 1;\r\n            if (b.familienname > a.familienname) return -1;\r\n            if (a.rufname > b.rufname) return 1;\r\n            if (b.rufname > a.rufname) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let ud of userDataList) {\r\n            let ae: AccordionElement = {\r\n                name: ud.familienname + \", \" + ud.rufname,\r\n                sortName: ud.familienname + \" \" + ud.rufname,\r\n                externalElement: ud,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.studentPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n    renderClasses(classDataList: ClassData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        classDataList.sort((a, b) => {\r\n            if (a.name > b.name) return 1;\r\n            if (b.name > a.name) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let cd of classDataList) {\r\n            let ae: AccordionElement = {\r\n                name: cd.name,\r\n                externalElement: cd,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.classPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\n\r\nexport type Theme = {\r\n    name: string,\r\n    monacoTheme: string,\r\n    cssColors: { [color: string]: string }\r\n}\r\n\r\nexport class ThemeManager {\r\n\r\n    themes: Theme[] = [];\r\n\r\n    constructor() {\r\n        this.initThemes();\r\n    }\r\n\r\n    switchTheme(name: string) {\r\n        for (let theme of this.themes) {\r\n            if (theme.name == name) {\r\n                this.internalSwitchTheme(theme);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    internalSwitchTheme(theme: Theme) {\r\n        monaco.editor.setTheme(theme.monacoTheme);\r\n\r\n        let root = document.documentElement;\r\n        for (const key of Object.keys(theme.cssColors)) {\r\n            const value = theme.cssColors[key]\r\n\r\n            root.style.setProperty(key, value);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    initThemes() {\r\n\r\n        this.themes.push({\r\n            name: \"dark\",\r\n            monacoTheme: \"myCustomThemeDark\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"#1e1e1e\",\r\n                \"--backgroundLight\": \"#252526\",\r\n                \"--backgroundHeading\": \"#37373d\",\r\n                \"--backgroundSelected\": \"#2a2d2e\",\r\n                \"--fontColorNormal\": \"#c2cccc\",\r\n                \"--fontColorLight\": \"#e7e7e7\",\r\n                \"--slider\": \"#414141\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#1e1e1e\",\r\n                \"--scrollbar-thumb\": \"#3e3e3e\",\r\n                \"--scrollbar-thumb-hover\": \"#5e5e5e\",\r\n                \"--scrollbar-thumb-active\": \"#7e7e7e\",\r\n                \"--submenu-hover\": \"#094771\",\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#616162\",\r\n                \"--file-hover\": \"hsla(0, 0%, 38%, 0.125)\",\r\n                \"--file-active\": \"#094771\",\r\n                \"--file-active-hover\": \"rgba(9, 71, 113, 0.827)\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"blue\",\r\n                \"--contextmenu-background\": \"#3c3c3c\",\r\n                \"--contextmenu-color\": \"rgb(212,212,212)\",\r\n                \"--contextmenu-hover-background\": \"#094771\",\r\n                \"--contextmenu-hover-color\": \"#ffffff\",\r\n                \"--error-filename\": \"#2a709e\",\r\n                \"--error-line-ative\": \"#094771\",\r\n                \"--error-line-hover\": \"rgba(96, 96, 96, 0.125)\",\r\n                \"--error-position\": \"#c0802d\",\r\n                \"--linecolumn\": \"#14c714\",\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#2b2b7d2f\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"rgb(85,85,85)\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#383838\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#252526\",\r\n                \"--editorTooltip-border\": \"#454545\",\r\n\r\n                \"--renameInput-color\": \"#ffffff\",\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"white\",\r\n                \"--bottomdiv-tabheading-active\": \"rgb(97,97,255)\",\r\n                \"--noErrorMessage\": \"rgb(37, 211, 37)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"#1e1e1e\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"white\",\r\n                \"--consoleEntryIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"white\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 51, 51)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--deValue\": \"white\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#383838\",\r\n                \"--helper-border-color\": \"#d4d4d4\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#ffffff\",\r\n                \"--runInputColor\": \"#ffffff\",\r\n                \"--runBackgroundColor\": \"rgba(255, 255, 255, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n        let highlightColor = \"#8080ff\";\r\n\r\n        this.themes.push({\r\n            name: \"light\",\r\n            monacoTheme: \"myCustomThemeLight\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"white\",\r\n                \"--backgroundLight\": \"#f3f3f3\",\r\n                \"--backgroundHeading\": \"#dcdcdc\",\r\n                \"--backgroundSelected\": \"#e8e8e8\",\r\n                \"--fontColorNormal\": \"#756161\",\r\n                \"--fontColorLight\": \"#756161\",\r\n                \"--slider\": \"#b0b0b0\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#e3e3e3\",\r\n                \"--scrollbar-thumb\": \"#bababa\",\r\n                \"--scrollbar-thumb-hover\": \"#8e8e8e\",\r\n                \"--scrollbar-thumb-active\": \"#616161\",\r\n                \"--submenu-hover\": highlightColor,\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#cfcfcf\",\r\n                \"--file-hover\": \"#e8e8e8\",\r\n                \"--file-active\": highlightColor,\r\n                \"--file-active-hover\": \"#a0a0ff\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"white\",\r\n                \"--contextmenu-background\": \"white\",\r\n                \"--contextmenu-color\": \"#756161\",\r\n                \"--contextmenu-hover-background\": highlightColor,\r\n                \"--contextmenu-hover-color\": \"#a0a0ff\",\r\n                \"--error-filename\": \"#ff0000\",\r\n                \"--error-line-ative\": \"#ffa0a0\",\r\n                \"--error-line-hover\": \"#ffc0c0\",\r\n                \"--error-position\": \"#804040\",\r\n                \"--linecolumn\": \"#14c714\", // TODO\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#babaec80\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"#c0c0c0\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#e0e0e0\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#e0e0e0\",\r\n                \"--editorTooltip-border\": \"#9d9d9d\",\r\n\r\n                \"--renameInput-color\": \"#000000\",\r\n\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"#424242\",\r\n                \"--bottomdiv-tabheading-active\": \"#424242\",\r\n                \"--noErrorMessage\": \"rgb(17, 180, 17)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"white\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"#0000a0\",\r\n                \"--consoleEntryIdentifier\": \"black\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"#756161\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 21, 21)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"black\",\r\n                \"--deValue\": \"#0000a0\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#f3f3f3\",\r\n                \"--helper-border-color\": \"#606060\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#303030\",\r\n                \"--runInputColor\": \"#000000\",\r\n                \"--runBackgroundColor\": \"rgba(0, 0, 0, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { openContextMenu, ContextMenuItem } from \"../../tools/HtmlTools.js\";\r\nimport { Dialog } from \"./Dialog.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\n\r\nexport class UserMenu {\r\n\r\n\r\n\r\n    constructor(private main: Main){\r\n        \r\n    }\r\n\r\n    init(){\r\n        let $userSettingsButton = jQuery('#buttonUserSettings');\r\n        let that = this;\r\n\r\n        // $userSettingsButton.on(\"click\", (e) => {\r\n\r\n        //     let contextMenuItems: ContextMenuItem[] = [\r\n        //         {\r\n        //             caption: \"Passwort ändern...\",\r\n        //             callback: () => {\r\n        //                 let passwortChanger = new PasswordChanger(that.main);\r\n        //                 passwortChanger.show();\r\n        //             }\r\n        //         }\r\n        //     ]\r\n\r\n\r\n        //     openContextMenu(contextMenuItems, $userSettingsButton.offset().left, $userSettingsButton.offset().top + $userSettingsButton.height());\r\n\r\n        // });\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class PasswordChanger {\r\n\r\n    dialog: Dialog;\r\n\r\n    constructor(private main: Main){\r\n\r\n        this.dialog = new Dialog();\r\n\r\n    }\r\n\r\n    show() {\r\n        this.dialog.init();\r\n        this.dialog.heading(\"Passwort ändern\");\r\n        this.dialog.description(\"Bitte geben Sie Ihr bisheriges Passwort und darunter zweimal Ihr neues Passwort ein. <br>\" + \r\n        \"Das Passwort muss mindestens 8 Zeichen lang sein und sowohl Buchstaben als auch Zahlen oder Sonderzeichen enthalten.\")\r\n        let $oldPassword = this.dialog.input(\"password\", \"Altes Passwort\");\r\n        let $newPassword1 = this.dialog.input(\"password\", \"Neues Passwort\");\r\n        let $newPassword2 = this.dialog.input(\"password\", \"Neues Passwort wiederholen\");\r\n        let $errorDiv = this.dialog.description(\"\", \"red\");\r\n        let waitDiv = this.dialog.waitMessage(\"Bitte warten...\")\r\n\r\n        this.dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {this.dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    if($newPassword1.val() != $newPassword2.val()){\r\n                        $errorDiv.text(\"Die zwei eingegebenen neuen Passwörter stimmen nicht überein.\")\r\n                    } else {\r\n                        waitDiv(true);\r\n                        ajax(\"changePassword\", {oldPassword: $oldPassword.val(), newPassword: $newPassword1.val()}, () => {\r\n                            waitDiv(false);\r\n                            alert(\"Das Passwort wurde erfolgreich geändert.\");\r\n                            this.dialog.close();\r\n                        }, (message) => {\r\n                            waitDiv(false);\r\n                            $errorDiv.text(message)\r\n                        })\r\n                    }\r\n\r\n                }\r\n            },\r\n        ])\r\n    }\r\n\r\n}","import { ajax } from \"../communication/AjaxHelper.js\";\r\nimport { LoginRequest, LoginResponse, LogoutRequest, UserData } from \"../communication/Data.js\";\r\nimport { Main } from \"./Main.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { userInfo } from \"os\";\r\nimport { UserMenu } from \"./gui/UserMenu.js\";\r\nimport { escapeHtml } from \"../tools/StringTools.js\";\r\n\r\nexport class Login {\r\n\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        let that = this;\r\n\r\n        let $loginSpinner = jQuery('#login-spinner>img');\r\n\r\n        jQuery('#login-username').focus();\r\n\r\n        jQuery('#login-username').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-password').focus();\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-button').focus();\r\n                jQuery('#login-button').addClass('jo_active');\r\n            }\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-button').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-username').focus();\r\n                jQuery('#login-button').removeClass('jo_active');\r\n            } else {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        // Avoid double login when user does doubleclick:\r\n        let loginHappened = false;\r\n        jQuery('#login-button').on('click', () => {\r\n\r\n            $loginSpinner.show();\r\n\r\n            if (loginHappened) return;\r\n            loginHappened = true;\r\n\r\n            setTimeout(() => {\r\n                loginHappened = false;\r\n            }, 1000);\r\n\r\n            let loginRequest: LoginRequest = {\r\n                username: <string>jQuery('#login-username').val(),\r\n                password: <string>jQuery('#login-password').val(),\r\n                language: 1\r\n            }\r\n\r\n            ajax('login', loginRequest, (response: LoginResponse) => {\r\n\r\n                if (!response.success) {\r\n                    jQuery('#login-message').html('Fehler: Benutzername und/oder Passwort ist falsch.');\r\n                } else {\r\n\r\n                    // We don't do this anymore for security reasons - see AjaxHelper.ts\r\n                    // Alternatively we now set a long expiry interval for cookie.\r\n                    // credentials.username = loginRequest.username;\r\n                    // credentials.password = loginRequest.password;\r\n\r\n                    jQuery('#login').hide();\r\n\r\n                    this.main.waitOverlay.show('Bitte warten...');\r\n\r\n                    let user: UserData = response.user;\r\n                    if (user.settings == null || user.settings.helperHistory == null) {\r\n                        user.settings = {\r\n                            helperHistory: {\r\n                            },\r\n                            viewModes: null,\r\n                            classDiagram: null\r\n                        }\r\n                    }\r\n\r\n                    this.main.waitForGUICallback = () => {\r\n\r\n                        that.main.mainMenu.initGUI(user);\r\n\r\n                        that.main.waitOverlay.hide();\r\n                        $loginSpinner.hide();\r\n                        jQuery('#menupanel-username').html(escapeHtml(user.rufname) + \" \" + escapeHtml(user.familienname));\r\n\r\n                        new UserMenu(that.main).init();\r\n\r\n                        if (user.is_teacher) {\r\n                            that.main.initTeacherExplorer(response.classdata);\r\n                        }\r\n\r\n                        that.main.user = user;\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces);\r\n                        that.main.workspacesOwnerId = user.id;\r\n\r\n                        that.main.networkManager.initializeTimer();\r\n\r\n                        that.main.projectExplorer.fileListPanel.setFixed(!user.is_teacher);\r\n                        that.main.projectExplorer.workspaceListPanel.setFixed(!user.is_teacher);\r\n\r\n                        that.main.viewModeController.initViewMode();\r\n                        that.main.bottomDiv.hideHomeworkTab();\r\n\r\n                        that.main.networkManager.initializeNotifierClient();\r\n\r\n                    }\r\n\r\n                    if (this.main.startupComplete == 0) {\r\n                        this.main.waitForGUICallback();\r\n                        this.main.waitForGUICallback = null;\r\n                    }\r\n\r\n                }\r\n\r\n            }, (errorMessage: string) => {\r\n                jQuery('#login-message').html('Login gescheitert: ' + errorMessage);\r\n                jQuery('#login-spinner>img').hide();\r\n            }\r\n            );\r\n\r\n        });\r\n\r\n        jQuery('#buttonLogout').on('click', () => {\r\n\r\n            this.main.waitOverlay.show('Bitte warten, der letzte Bearbeitungsstand wird noch gespeichert ...');\r\n\r\n            if (this.main.workspacesOwnerId != this.main.user.id) {\r\n                this.main.projectExplorer.onHomeButtonClicked();\r\n            }\r\n\r\n            this.main.networkManager.sendUpdates(() => {\r\n\r\n                let logoutRequest: LogoutRequest = {\r\n                    currentWorkspaceId: this.main.currentWorkspace?.id\r\n                }\r\n\r\n                ajax('logout', logoutRequest, () => {\r\n                    // window.location.href = 'index.html';\r\n                    this.main.networkManager.sendUpdateUserSettings(() => {});\r\n\r\n                    jQuery('#login').show();\r\n                    this.main.waitOverlay.hide();\r\n                    jQuery('#login-message').empty();\r\n                    this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"\", \"myJava\"));\r\n                    this.main.projectExplorer.fileListPanel.clear();\r\n                    this.main.projectExplorer.workspaceListPanel.clear();\r\n\r\n                    this.main.databaseExplorer.clear();\r\n                    this.main.resultsetPresenter.clear();\r\n\r\n                    if (this.main.user.is_teacher) {\r\n                        this.main.teacherExplorer.removePanels();\r\n                        this.main.teacherExplorer = null;\r\n                    }\r\n\r\n\r\n                    this.main.currentWorkspace = null;\r\n                    this.main.user = null;\r\n\r\n\r\n                });\r\n            }, true);\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\nimport { ViewModes, ViewMode } from \"../../communication/Data\";\r\n\r\nexport class ViewModeController {\r\n\r\n    $buttonEditorFullscreen: JQuery<HTMLElement>;\r\n    $buttonPresentationMode: JQuery<HTMLElement>;\r\n    $buttonMonitorMode: JQuery<HTMLElement>;\r\n\r\n    $buttonMap: { [key: string]: JQuery<HTMLElement> } = {};\r\n\r\n    highContrast: boolean = false;\r\n    editorHasFullWidth: boolean = false;\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private main: Main) {\r\n\r\n        this.$buttonEditorFullscreen = jQuery('<div title=\"Editor in voller Breite\" class=\"img_whole-window jo_button jo_active\" style=\"padding: 1px; margin-right: 20px\"></div>');\r\n        this.$buttonPresentationMode = jQuery('<div title=\"Präsentation (Beamer)\" class=\"img_presentation-mode jo_button jo_active\" syle=\"padding: 1px\"></div>');\r\n        this.$buttonMonitorMode = jQuery('<div title=\"Monitor\" class=\"img_monitor-mode jo_button jo_active\" style=\"margin-left: 5px; padding: 1px\"></div>');\r\n        $buttonsContainer.append(this.$buttonEditorFullscreen, this.$buttonPresentationMode, this.$buttonMonitorMode);\r\n\r\n        this.$buttonMap = {\r\n            \"presentation\": this.$buttonPresentationMode,\r\n            \"monitor\": this.$buttonMonitorMode\r\n        };\r\n\r\n        let am = this.main.actionManager;\r\n\r\n        am.registerAction(\"editor.fullwidth\", [],\r\n            () => {\r\n                this.toggleEditorFullwidth();\r\n            }, \"Editor auf die volle Breite erweitern\", this.$buttonEditorFullscreen);\r\n\r\n        am.registerAction(\"viewmode.presentation\", [],\r\n            () => {\r\n                this.setMode(\"presentation\");\r\n            }, \"Präsentationsansicht\", this.$buttonPresentationMode);\r\n\r\n        am.registerAction(\"viewmode.monitor\", [],\r\n            () => {\r\n                this.setMode(\"monitor\");\r\n            }, \"Monitoransicht\", this.$buttonMonitorMode);\r\n\r\n    }\r\n\r\n    toggleEditorFullwidth() {\r\n        if(this.editorHasFullWidth){\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in voller Breite');\r\n            jQuery('#rightdiv').show(600);\r\n            jQuery('#leftpanel').show(600);\r\n            jQuery('#controls').show();\r\n        } else {\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in normaler Breite');\r\n            jQuery('#rightdiv').hide(600);\r\n            jQuery('#leftpanel').hide(600);\r\n            jQuery('#controls').hide();\r\n        }\r\n\r\n        setTimeout(()=>{\r\n            this.main.getMonacoEditor().layout();\r\n        }, 800);\r\n\r\n        this.editorHasFullWidth = !this.editorHasFullWidth;\r\n    }\r\n\r\n    setMode(mode: \"presentation\" | \"monitor\", saveSettings: boolean = true) {\r\n\r\n        let otherMode = mode == \"presentation\" ? \"monitor\" : \"presentation\";\r\n\r\n        this.$buttonMap[mode].addClass(\"jo_pressed\");\r\n        this.$buttonMap[otherMode].removeClass(\"jo_pressed\");\r\n\r\n        let settings = this.main.user.settings;\r\n        let viewModes = settings.viewModes;\r\n\r\n        let viewMode = viewModes[mode];\r\n        viewModes.viewModeChosen = mode;\r\n\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n\r\n        this.main.editor.setFontSize(viewMode.fontSize);\r\n\r\n        if (this.highContrast != viewMode.highContrast) {\r\n            let editor = this.main.getMonacoEditor();\r\n            editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n            this.highContrast = !this.highContrast;\r\n        }\r\n\r\n        if (saveSettings) this.saveSettings();\r\n\r\n    }\r\n\r\n    saveFontSize(fontSizePx: number) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.fontSize = fontSizePx;\r\n        this.saveSettings();\r\n    }\r\n\r\n    setTheme(theme: string) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.theme = theme;\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n        this.saveSettings();\r\n    }\r\n\r\n    toggleHighContrast() {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.highContrast = !viewMode.highContrast;\r\n        let editor = this.main.getMonacoEditor();\r\n        editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n        this.saveSettings();\r\n    }\r\n\r\n    getChosenViewMode(): ViewMode {\r\n        let viewModes = this.main.user.settings.viewModes;\r\n        return viewModes[viewModes.viewModeChosen];\r\n    }\r\n\r\n    saveSettings() {\r\n        this.main.userDataDirty = true;\r\n    }\r\n\r\n    initViewMode() {\r\n        let settings = this.main.user.settings;\r\n\r\n        if (settings[\"viewModes\"] == null) {\r\n            settings[\"viewModes\"] = {\r\n                monitor: null,\r\n                presentation: null,\r\n                viewModeChosen: \"monitor\"\r\n            }\r\n        }\r\n\r\n        if (settings.viewModes.monitor == null) {\r\n            settings.viewModes.monitor = {\r\n                fontSize: 14,\r\n                highContrast: false,\r\n                theme: \"dark\"\r\n            };\r\n\r\n            settings.viewModes.presentation = {\r\n                fontSize: 18,\r\n                highContrast: false,\r\n                theme: \"light\"\r\n            }\r\n            this.saveSettings();\r\n        }\r\n        this.setMode(settings.viewModes.viewModeChosen, false);\r\n    }\r\n\r\n\r\n}","import { Main } from \"../../main/Main.js\";\r\nimport { TextPosition } from \"../lexer/Token\";\r\nimport { Module } from \"./Module\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype SemicolonPosition = {\r\n    position: TextPosition;\r\n    module: Module;\r\n    firstSeenMs: number;\r\n    isThereAgain: boolean;\r\n}\r\n\r\nexport class SemicolonAngel {\r\n    \r\n    semicolonPositions: SemicolonPosition[] = [];\r\n    time: number;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    startRegistering(){\r\n        this.semicolonPositions.forEach(p => p.isThereAgain = false);\r\n        this.time = new Date().getTime();\r\n    }\r\n\r\n    register(position: TextPosition, module: Module){\r\n        let oldEvidence = this.semicolonPositions.find(p => p.position.line == position.line && p.position.column == position.column);\r\n        if(oldEvidence){\r\n            oldEvidence.isThereAgain = true;\r\n        } else {\r\n            this.semicolonPositions.push({position: position, firstSeenMs: this.time, isThereAgain: true, module: module});\r\n        }\r\n    }\r\n\r\n    healSemicolons(){\r\n        let time = new Date().getTime();\r\n        this.semicolonPositions = this.semicolonPositions.filter(p => p.isThereAgain);\r\n\r\n        let currentlyEditedModule = this.main.getCurrentlyEditedModule();\r\n        let cursorLine = this.main.getMonacoEditor().getPosition().lineNumber;\r\n\r\n        this.semicolonPositions.filter(p => time - p.firstSeenMs > 2000).forEach(p => {\r\n\r\n            let isCurrentModule = p.module.file.id != null && p.module.file.id == currentlyEditedModule.file.id;\r\n\r\n            let editOperations: monaco.editor.IIdentifiedSingleEditOperation[] = [\r\n                {\r\n                    range: new monaco.Range(p.position.line, p.position.column, p.position.line, p.position.column),\r\n                    text: \";\",\r\n                    forceMoveMarkers: true\r\n                }\r\n            ]\r\n\r\n            if(isCurrentModule){\r\n                if(Math.abs(cursorLine - p.position.line) > 1){\r\n                    let editor = this.main.getMonacoEditor();\r\n                    const selection = editor.getSelection();\r\n                    editor.executeEdits('Semicolon-Angel', editOperations);\r\n                    editor.setSelection(selection);\r\n                    this.semicolonPositions.splice(this.semicolonPositions.indexOf(p), 1);\r\n                }\r\n            } \r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\nimport { Table, Column } from \"../../compiler/parser/SQLTable.js\";\nimport { DatabaseStructure } from \"../../tools/DatabaseTools.js\";\n\nexport class DatabaseExplorer {\n\n    collapsedTables: Map<string, boolean> = new Map();\n\n    constructor(private main: MainBase, public $mainDiv: JQuery<HTMLElement>) {\n\n    }\n\n    refresh() {\n\n        let dbTool = this.main.getDatabaseTool();\n\n        dbTool.retrieveDatabaseStructure((dbstructure: DatabaseStructure) => {\n\n            this.refreshAfterRetrievingDBStructure();\n        });\n\n    }\n\n    clear(){\n        this.$mainDiv.empty();\n    }\n\n    refreshAfterRetrievingDBStructure() {\n        let dbTool = this.main.getDatabaseTool();\n        let workspace = this.main.getCurrentWorkspace();\n        if (workspace != null) {\n            for (let m of workspace.moduleStore.getModules(false)) {\n                m.file.dirty = true;\n            }\n        }\n\n        let tables = Table.fromTableStructureList(dbTool.databaseStructure.tables);\n\n        this.$mainDiv.empty();\n\n        for (let table of tables) {\n            if(table.identifier != \"sqlite_sequence\"){\n                let $table = this.renderTable(table);\n                this.$mainDiv.append($table);\n            }\n        }\n\n    }\n\n    renderTable(table: Table): JQuery<HTMLElement> {\n        let isCollapsed = this.collapsedTables.get(table.identifier) != null;\n\n        let $table = jQuery(\n            `<div class=\"jo_table\">\n           <div class=\"jo_tableheader\">\n              <div class=\"${isCollapsed ? 'img_tree-collapsed-dark' : 'img_tree-expanded-dark'} jo_treeswitch jo_button jo_active\"></div>\n              <div class=\"jo_tableheaderlink\">\n                <div class=\"img_table\"></div>\n                <div>${table.identifier}</div></div><div class=\"jo_tablesize\">(${table.size}&nbsp;Datensätze)</div>\n              </div>\n            </div>\n        </div>`);\n\n        $table.find('.jo_tableheader').on('pointerup', () => {\n            this.main.getResultsetPresenter().showTable(table.identifier);\n\n        })\n\n        let $columns = jQuery('<div class=\"jo_columnlist\"></div>')\n\n        for (let column of table.columns) {\n            let image = column.isPrimaryKey ? \"img_key\" : \"img_column\";\n\n            let referencesHtml = \"\";\n            if (column.references != null) {\n                referencesHtml = `<div class=\"img_foreign_key\" style=\"margin-left: 5px\"></div><div class=\"jo_references\">${column.references.table.identifier}.${column.references.identifier}</div>`\n            }\n\n            let type = column.type == null ? \"\" : column.type.toString();\n            let notNull: string = column.notNull ? '<div class=\"jo_dbnotnull\">not null</div>' : \"\";\n            let defaultValue: string = column.defaultValue ? `<div class=\"jo_dbdefault\">default ${column.defaultValue}</div>` : \"\";\n            let autoincrement: string = column.isAutoIncrement ? `<div class=\"jo_dbautoincrement\">autoincrement</div>` : \"\";\n\n            let $column = jQuery(`\n            <div class=\"jo_column\">\n                <div class=\"${image}\"></div>\n                <div>${column.identifier}</div>\n                <div class=\"jo_dbtype\">${type}</div>\n                ${autoincrement}\n                ${referencesHtml}\n                ${notNull}\n                ${defaultValue}\n            </div>\n            `);\n            $columns.append($column);\n        }\n\n        $table.append($columns);\n\n        let $treeSwitch = $table.find('.jo_treeswitch');\n        let that = this;\n        $treeSwitch.on('pointerup', (e) => {\n            e.stopPropagation();\n            let $columnList = $treeSwitch.parents('.jo_table').find('.jo_columnlist');\n            let collapsed = $treeSwitch.hasClass('img_tree-collapsed-dark');\n            if (collapsed) {\n                $treeSwitch.removeClass('img_tree-collapsed-dark');\n                $treeSwitch.addClass('img_tree-expanded-dark');\n                $columnList.slideDown(300);\n                that.collapsedTables.delete(table.identifier);\n            } else {\n                $treeSwitch.removeClass('img_tree-expanded-dark');\n                $treeSwitch.addClass('img_tree-collapsed-dark');\n                $columnList.slideUp(300);\n                that.collapsedTables.set(table.identifier, true);\n            }\n        });\n\n        return $table;\n    }\n\n\n\n}","// <div id=\"controls\">\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n// </div>\r\n\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { ResultsetPresenter } from \"./ResultsetPresenter.js\";\r\n\r\n\r\nexport class ProgramControlButtons {\r\n\r\n    $buttonStart: JQuery<HTMLElement>;\r\n    // $buttonPause: JQuery<HTMLElement>;\r\n    // $buttonStop: JQuery<HTMLElement>;\r\n    // $buttonStepOver: JQuery<HTMLElement>;\r\n    // $buttonStepInto: JQuery<HTMLElement>;\r\n    // $buttonStepOut: JQuery<HTMLElement>;\r\n    // $buttonRestart: JQuery<HTMLElement>;\r\n\r\n    // $buttonEdit: JQuery<HTMLElement>;\r\n\r\n\r\n    constructor(private main: MainBase, private $buttonsContainer: JQuery<HTMLElement>) {\r\n\r\n        this.$buttonStart = jQuery('<div title=\"Start\" class=\"img_start-dark jo_button\"></div>');\r\n        let am = this.main.getActionManager();\r\n\r\n        am.registerAction(\"execute\", ['Strg + Enter'],\r\n            () => {\r\n                if (am.isActive(\"execute\")) {\r\n\r\n                    this.main.getResultsetPresenter().executeSelectedStatements();\r\n                }\r\n\r\n            }, \"SQL-Statement ausführen\", this.$buttonStart\r\n        );\r\n\r\n        am.setActive('execute',false);\r\n\r\n        // this.$buttonPause = jQuery('<div title=\"Pause\" class=\"img_pause-dark jo_button\"></div>');\r\n        // this.$buttonStop = jQuery('<div title=\"Stop\" class=\"img_stop-dark jo_button\"></div>');\r\n        // this.$buttonStepOver = jQuery('<div title=\"Step over\" class=\"img_step-over-dark jo_button\"></div>');\r\n        // this.$buttonStepInto = jQuery('<div title=\"Step into\" class=\"img_step-into-dark jo_button\"></div>');\r\n        // this.$buttonStepOut = jQuery('<div title=\"Step out\" class=\"img_step-out-dark jo_button\"></div>');\r\n        // this.$buttonRestart = jQuery('<div title=\"Restart\" class=\"img_restart-dark jo_button\"></div>');\r\n\r\n        // this.$buttonEdit = jQuery('<div class=\"jo_editButton\" title=\"Programm anhalten damit der Programmtext bearbeitbar wird\"></div>')\r\n        // $editorContainer.append(this.$buttonEdit);\r\n\r\n        $buttonsContainer.append(this.$buttonStart\r\n            // , this.$buttonPause, this.$buttonStop,\r\n            // this.$buttonStepOver, this.$buttonStepInto, this.$buttonStepOut, this.$buttonRestart\r\n        );\r\n\r\n        // <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n        // <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n        // <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n        // <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n        // <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n        // <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n        // <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n        // <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n\r\n\r\n\r\n    }\r\n\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { SQLStatement } from \"../../compiler/parser/Parser.js\";\r\nimport { StatementCleaner } from \"../../compiler/parser/StatementCleaner.js\";\r\nimport { QueryResult } from \"../../tools/DatabaseTools.js\";\r\nimport { WDatabase } from \"../../workspace/WDatabase.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\ntype RuntimeError = {\r\n    statement: SQLStatement,\r\n    message: string\r\n}\r\n\r\nexport interface WriteQueryListener {\r\n    notify(statements: SQLStatement[]): void;\r\n}\r\n\r\nexport class ResultsetPresenter {\r\n\r\n    $paginationDiv: JQuery<HTMLDivElement>;\r\n    $infoDiv: JQuery<HTMLDivElement>;\r\n    $arrowLeft: JQuery<HTMLDivElement>;\r\n    $arrowRight: JQuery<HTMLDivElement>;\r\n\r\n    paginationFrom: number;\r\n    paginationAll: number;\r\n\r\n    paginationSize: number = 1000;\r\n\r\n    result: QueryResult;\r\n\r\n    writeQueryListeners: WriteQueryListener[] = [];\r\n\r\n    public static StatementDelimiter: string = \";\\n\\n\"\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$paginationDiv = jQuery('.jo_pagination');\r\n        this.$arrowLeft = jQuery('<div class=\"jo_button img_arrow-left-dark jo_active\"></div>');\r\n        this.$infoDiv = jQuery('<div class=\"jo_pagination_info\"><span class=\"jo_pagination_fromto\">0001 - 1000</span> von <span class=\"jo_pagination_all\">5000</span></div>');\r\n        this.$arrowRight = jQuery('<div class=\"jo_button img_arrow-right-dark jo_active\"></div>');\r\n\r\n        this.$paginationDiv.append(this.$arrowLeft, this.$infoDiv, this.$arrowRight);\r\n\r\n        this.$paginationDiv.hide();\r\n\r\n        let mousePointer = (window.PointerEvent ? \"pointer\" : \"mouse\") + 'up';\r\n\r\n        let that = this;\r\n        this.$arrowLeft.on(mousePointer, (e) => {\r\n            if (that.paginationFrom > 1) {\r\n                that.paginationFrom = Math.max(that.paginationFrom - that.paginationSize, 1);\r\n                if (that.paginationFrom % 1000 != 1) {\r\n                    that.paginationFrom = (Math.floor(that.paginationFrom / that.paginationSize) + 1) * that.paginationSize + 1;\r\n                }\r\n                that.showResults();\r\n                that.activateButtons();\r\n            }\r\n        })\r\n\r\n        this.$arrowRight.on(mousePointer, (e) => {\r\n            if (that.paginationFrom < this.paginationAll - that.paginationSize + 1) {\r\n                that.paginationFrom = Math.min(that.paginationFrom + that.paginationSize, that.paginationAll - that.paginationSize + 1);\r\n                that.showResults();\r\n                that.activateButtons();\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    public addWriteQueryListener(listener: WriteQueryListener) {\r\n        this.writeQueryListeners.push(listener);\r\n    }\r\n\r\n    private activateButtons() {\r\n        this.$arrowLeft.toggleClass('jo_active', this.paginationFrom > 1);\r\n        this.$arrowRight.toggleClass('jo_active', this.paginationFrom < this.paginationAll - this.paginationSize + 1);\r\n    }\r\n\r\n    executeSelectedStatements() {\r\n\r\n        let statements = this.fetchSelectedStatements().filter(st => st.ast.type != TokenType.omittedeStatement);\r\n        \r\n        if (statements.length == 0) return;\r\n\r\n        let hasDDLStatements: boolean = statements.some(st => this.isDDLStatement(st));\r\n        let hasWriteStatements: boolean = statements.some(st => this.isWriteStatement(st));\r\n        let workspace = this.main.getCurrentWorkspace();\r\n        let database = workspace.database;\r\n\r\n        if (hasDDLStatements && workspace.permissions <= 2) {\r\n            alert(\"Der Benutzer hat keine Berechtigung zum Ändern der Tabellenstruktur.\");\r\n            return;\r\n        }\r\n\r\n        if (hasWriteStatements && workspace.permissions <= 1) {\r\n            alert(\"Der Benutzer hat keine Berechtigung zum Einfügen/Löschen/Ändern von Datensätzen.\");\r\n            return;\r\n        }\r\n\r\n        if (hasDDLStatements || hasWriteStatements) {\r\n            if (this.main.isEmbedded()) {\r\n                this.executeDDLWriteStatementsEmbedded(workspace, statements, database);\r\n\r\n            } else {\r\n                this.executeDDLWriteStatementsInOnlineIDE(workspace, statements, database);\r\n            }\r\n\r\n        } else {\r\n            this.executeStatements(statements, 0, [], () => { });\r\n        }\r\n\r\n    }\r\n\r\n    executeDDLWriteStatementsEmbedded(workspace: Workspace, statements: SQLStatement[], database: WDatabase) {\r\n        let sucessfullyExecutedModifyingStatements: SQLStatement[] = [];\r\n        this.executeStatements(statements, 0, sucessfullyExecutedModifyingStatements, () => {\r\n\r\n            if (sucessfullyExecutedModifyingStatements.length == 0)\r\n                return;\r\n\r\n            this.main.getDatabaseExplorer().refresh();\r\n\r\n            this.writeQueryListeners.forEach(listener => listener.notify(sucessfullyExecutedModifyingStatements))\r\n        })\r\n    }\r\n\r\n    private executeDDLWriteStatementsInOnlineIDE(workspace: Workspace, statements: SQLStatement[], database: WDatabase) {\r\n        let main: Main = <Main>this.main;\r\n        // Step 1: Update Database to newest version to avoid potential database reset\r\n        main.networkManager.getNewStatements(workspace, (new_statements, firstStatementIndex) => {\r\n\r\n            main.notifier.executeNewStatements(new_statements, firstStatementIndex, () => { },\r\n                () => {\r\n                    // Step 2: Execute new statements to see which are successful\r\n                    let sucessfullyExecutedModifyingStatements: SQLStatement[] = [];\r\n                    this.executeStatements(statements, 0, sucessfullyExecutedModifyingStatements, () => {\r\n\r\n                        if (sucessfullyExecutedModifyingStatements.length == 0)\r\n                            return;\r\n\r\n                        // Step 3: Send successful statements to server in order to retrieve new db-version-number\r\n                        main.networkManager.AddDatabaseStatements(workspace, sucessfullyExecutedModifyingStatements.map(st => st.sqlCleaned == null ? st.sql : st.sqlCleaned), (statements_before, new_version) => {\r\n\r\n                            // Step 4: If another user sent statements between steps 1 and 3 then they are in array statements_before.\r\n                            // Add all new statements to local statement list\r\n                            statements_before.forEach(st => database.statements.push(st));\r\n                            this.main.getHistoryViewer().appendStatements(statements_before);\r\n                            let modifyingStatements = sucessfullyExecutedModifyingStatements.map(st => st.sqlCleaned == null ? st.sql : st.sqlCleaned)\r\n                            database.statements = database.statements.concat(modifyingStatements);\r\n                            this.main.getHistoryViewer().appendStatements(modifyingStatements);\r\n                            database.version = new_version;\r\n\r\n                            // Step 5 (worst case): statements before is not empty, so the should be executed before the statements executed in step 2\r\n                            // => clear whole database and execute all statements in the right order, beginning with a empty database.\r\n                            if (statements_before.length > 0) {\r\n\r\n                                this.resetDatabase(database);\r\n\r\n                            } else {\r\n\r\n                                main.getDatabaseExplorer().refresh();\r\n\r\n                            }\r\n\r\n                        });\r\n                    });\r\n                }, false);\r\n        });\r\n    }\r\n\r\n    resetDatabase(database: WDatabase) {\r\n        this.main.getDatabaseTool().initializeWorker(database.templateDump, database.statements, () => {\r\n            this.main.getDatabaseExplorer().refresh();\r\n        })\r\n    }\r\n\r\n    executeStatementsString(statements: string[], fromIndex: number, callback: () => void) {\r\n        if (statements.length == 0) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (fromIndex < statements.length) {\r\n            this.main.getDatabaseTool().executeQuery(statements[fromIndex],\r\n                (results) => { this.executeStatementsString(statements, fromIndex + 1, callback) },\r\n                (error) => { console.log(\"Error when executing statement \" + statements[fromIndex] + \"\\nError : \" + error); this.executeStatementsString(statements, fromIndex + 1, callback) });\r\n        } else {\r\n            callback();\r\n        }\r\n    }\r\n\r\n\r\n    executeStatements(statements: SQLStatement[], index: number, successfullyExecutedModifyingStatements: SQLStatement[], callback: () => void, errors: RuntimeError[] = []) {\r\n\r\n        if (index >= statements.length) {\r\n            this.showErrors(errors);\r\n\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        let statement = statements[index];\r\n\r\n\r\n        let callback1 = () => {\r\n            this.executeStatements(statements, index + 1, successfullyExecutedModifyingStatements, callback, errors);\r\n        }\r\n\r\n        if (statement.ast == null) {\r\n            callback1();\r\n            return;\r\n        }\r\n\r\n        if (statement.ast.type == TokenType.keywordSelect) {\r\n            let laterSelectExists: boolean = false;\r\n            for (let j = index + 1; j < statements.length; j++) laterSelectExists = laterSelectExists || this.isSelectStatement(statements[j]);\r\n            if (laterSelectExists) {\r\n                callback1();\r\n            } else {\r\n                if (statement.ast.limitNode == null) {\r\n                    statement.sql.trimRight();\r\n                    while (statement.sql.endsWith(\";\") || statement.sql.endsWith(\"\\n\") || statement.sql.endsWith(\"\\r\")) {\r\n                        statement.sql = statement.sql.substring(0, statement.sql.length - 1);\r\n                        statement.sql.trimRight();\r\n                    }\r\n                    statement.sql += \" limit 100000\";\r\n                }\r\n                this.main.getDatabaseTool().executeQuery(statement.sql,\r\n                    (results) => { this.presentResultsIntern(statement.sql, results); callback1(); },\r\n                    (error) => { errors.push({ statement: statement, message: error }); callback1(); });\r\n            }\r\n        } else {\r\n            let sql = new StatementCleaner().clean(statement);\r\n            console.log(sql);\r\n            this.main.getDatabaseTool().executeQuery(sql, (results) => { successfullyExecutedModifyingStatements.push(statement); callback1(); }, (error) => { errors.push({ statement: statement, message: error }); callback1(); });\r\n        }\r\n\r\n    }\r\n\r\n    oldErrorDecorations: string[] = [];\r\n    showErrorDecorations(errors: RuntimeError[]) {\r\n\r\n        let minimapColors = {\r\n            \"error\": \"#bc1616\",\r\n            \"warning\": \"#cca700\",\r\n            \"info\": \"#75beff\"\r\n        }\r\n\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        let markers: monaco.editor.IMarkerData[] = [];\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n        for (let error of errors) {\r\n            let errorlevel = \"error\";\r\n\r\n            let linesDecorationsClassName: string;\r\n            let borderLeftClass: string;\r\n            let minimapColor: string = minimapColors[errorlevel];\r\n\r\n            switch (errorlevel) {\r\n                case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n            }\r\n\r\n            let severity: monaco.MarkerSeverity;\r\n            switch (errorlevel) {\r\n                case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n            }\r\n\r\n            markers.push({\r\n                startLineNumber: error.statement.from.line,\r\n                startColumn: error.statement.from.column,\r\n                endLineNumber: error.statement.to.line,\r\n                endColumn: error.statement.to.column,\r\n                message: error.message,\r\n                severity: severity\r\n            });\r\n\r\n            decorations.push({\r\n                range: {\r\n                    startLineNumber: error.statement.from.line,\r\n                    startColumn: error.statement.from.column,\r\n                    endLineNumber: error.statement.to.line,\r\n                    endColumn: error.statement.to.column,\r\n                },\r\n                options: {\r\n                    linesDecorationsClassName: linesDecorationsClassName,\r\n                    minimap: {\r\n                        position: monaco.editor.MinimapPosition.Inline,\r\n                        color: minimapColor\r\n                    }\r\n                }\r\n\r\n            });\r\n\r\n\r\n        }\r\n\r\n        let model = this.main.getCurrentlyEditedModule().model;\r\n        monaco.editor.setModelMarkers(model, 'test', markers);\r\n        this.oldErrorDecorations = model.deltaDecorations(this.oldErrorDecorations, decorations);\r\n\r\n    }\r\n\r\n    showTable(identifier: string) {\r\n        let statement = \"select * from \" + identifier + \";\";\r\n        this.main.getDatabaseTool().executeQuery(statement,\r\n            (results) => { this.presentResultsIntern(statement, results); },\r\n            (error) => { });\r\n    }\r\n\r\n\r\n\r\n    showErrors(errors: RuntimeError[]) {\r\n        let $runtimeErrorsTab = this.$bottomDiv.find('.jo_errorsTab');\r\n        let $runtimeErrorsTabHeading = this.$bottomDiv.find('.jo_errorsTabheading');\r\n\r\n        $runtimeErrorsTab.empty();\r\n        this.showErrorDecorations(errors);\r\n\r\n        if (errors.length == 0) return;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        $runtimeErrorsTabHeading.trigger(mousePointer + \"down\");\r\n\r\n        let $errorList = jQuery('<div class=\"jo_errorlist\"></div>');\r\n        $runtimeErrorsTab.append($errorList);\r\n\r\n        for (let error of errors) {\r\n            let query = error.statement.sql;\r\n            query = query.replace(/\\n/g, \" \");\r\n            query = query.replace(/\\s\\s+/g, ' ');\r\n\r\n            let $errorLine = $('<div class=\"jo_error-line\" style=\"flex-direction:column; width: fit-content\"></div>')\r\n            $errorList.append($errorLine);\r\n\r\n            $errorLine.on(mousePointer + 'down', () => {\r\n                let range = {\r\n                    startColumn: error.statement.from.column, startLineNumber: error.statement.from.line,\r\n                    endColumn: error.statement.to.column, endLineNumber: error.statement.to.line\r\n                };\r\n\r\n                this.main.getMonacoEditor().revealRangeInCenter(range);\r\n                $errorList.find('.jo_error-line').removeClass('jo_active');\r\n                $errorLine.addClass('jo_active');\r\n\r\n            })\r\n\r\n\r\n            let $sqlDiv = $('<div class=\"jo_sqlErrorStatement\"></div>');\r\n            $errorLine.append($sqlDiv);\r\n\r\n            monaco.editor.colorize(query, \"vscSQL\", {}).then(\r\n                (html) => { $sqlDiv.html(html) });\r\n\r\n            let $messageDiv = $('<div class=\"jo_sqlErrorMessage\">' + error.message + '</div>');\r\n            $errorLine.append($messageDiv);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    isSelectStatement(statement: SQLStatement): boolean {\r\n        return statement.ast != null && statement.ast.type == TokenType.keywordSelect;\r\n    }\r\n\r\n    isDDLStatement(statement: SQLStatement): boolean {\r\n        return statement.ast != null && [TokenType.keywordCreate, TokenType.keywordDrop, TokenType.keywordAlter].indexOf(statement.ast.type) >= 0;\r\n    }\r\n\r\n    isWriteStatement(statement: SQLStatement): boolean {\r\n        return statement.ast != null && [TokenType.keywordInsert, TokenType.keywordDelete, TokenType.keywordUpdate].indexOf(statement.ast.type) >= 0;\r\n    }\r\n\r\n    private presentResultsIntern(query: string, results: QueryResult[]) {\r\n        let $resultTabheading = this.$bottomDiv.find('.jo_resultTabheading');\r\n        let $resultHeader = this.$bottomDiv.find('.jo_result-header');\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        $resultTabheading.trigger(mousePointer + \"down\");\r\n        this.result = results.pop();\r\n\r\n        let headerDiv = $resultHeader;\r\n\r\n        query = query.replace(/\\n/g, \" \");\r\n        query = query.replace(/\\s\\s+/g, ' ');\r\n        query = query.replace(/limit 100000/g, '');\r\n\r\n        monaco.editor.colorize(query, \"vscSQL\", {}).then(\r\n            (html) => { headerDiv.html(html) });\r\n\r\n        this.paginationAll = this.result ? this.result.values.length : 0;\r\n        this.$infoDiv.find('.jo_pagination_all').html(`${this.paginationAll}`);\r\n        this.paginationFrom = 1;\r\n        this.$paginationDiv.show();\r\n        this.activateButtons();\r\n\r\n        this.showResults();\r\n\r\n    }\r\n\r\n    public clear() {\r\n        let $bodyDiv = this.$bottomDiv.find('.jo_result-body');\r\n        $bodyDiv.empty();\r\n        this.$paginationDiv.hide();\r\n    }\r\n\r\n    private showResultsBusy: boolean = false;\r\n    private showResultPending: boolean = false;\r\n\r\n    private showResults() {\r\n        let $bodyDiv = this.$bottomDiv.find('.jo_result-body');\r\n\r\n        if (this.result == null) {\r\n            this.$infoDiv.find('.jo_pagination_fromto').html('---');\r\n            $bodyDiv.html('Die Datenbank lieferte eine leere Ergebnistabelle.');\r\n            return;\r\n        }\r\n\r\n        let that = this;\r\n        let from = this.paginationAll == 0 ? 0 : this.paginationFrom;\r\n        let to = this.paginationAll == 0 ? 0 : Math.min(this.paginationFrom + this.paginationSize - 1, this.paginationAll);\r\n        this.$infoDiv.find('.jo_pagination_fromto').html(`${from} - ${to}`)\r\n\r\n        if (this.showResultsBusy) {\r\n            if (this.showResultPending) {\r\n                return;\r\n            }\r\n            this.showResultPending = true;\r\n            let waitFunction = () => {\r\n                if (that.showResultsBusy) {\r\n                    setTimeout(() => {\r\n                        waitFunction();\r\n                    }, 200);\r\n                } else {\r\n                    that.showResultPending = false;\r\n                    that.showResults();\r\n                }\r\n            }\r\n            setTimeout(waitFunction, 200);\r\n            return;\r\n        }\r\n\r\n        this.showResultsBusy = true;\r\n\r\n        let $table = jQuery('<table></table>');\r\n        let $header = jQuery('<tr></tr>');\r\n        $table.append($header);\r\n\r\n        this.result.columns.forEach((column) => { $header.append(jQuery(`<th><div>${column}</div></th>`)) });\r\n\r\n        let rows = this.result.values.slice(this.paginationFrom - 1, this.paginationFrom + this.paginationSize - 1);\r\n\r\n        let i = 0;\r\n        let f = () => {\r\n            if (i < rows.length) {\r\n                for (let j = i; j < Math.min(i + 200, rows.length); j++) {\r\n                    let row = rows[j];\r\n                    let $row = jQuery('<tr></tr>');\r\n                    $table.append($row);\r\n                    row.forEach((cell) => { $row.append(jQuery(`<td>${cell}</td>`)) });\r\n                }\r\n                i = Math.min(i + 200, rows.length);\r\n                if (i < rows.length) {\r\n                    setTimeout(f, 30);\r\n                } else {\r\n                    $bodyDiv.empty().append($table);\r\n                    this.showResultsBusy = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        f();\r\n\r\n        // rows.forEach((row) => {\r\n        //     let $row = jQuery('<tr></tr>');\r\n        //     $table.append($row);\r\n        //     row.forEach((cell) => {$row.append(jQuery(`<td>${cell}</td>`))});\r\n        // });\r\n\r\n        // bodyDiv.empty().append($table);\r\n\r\n    }\r\n\r\n\r\n    fetchSelectedStatements(): SQLStatement[] {\r\n        let module = this.main.getCurrentlyEditedModule();\r\n        if (module == null) return null;\r\n\r\n        let monacoEditor = this.main.getMonacoEditor();\r\n        // console.log(monacoEditor.getSelection());\r\n        // console.log(monacoEditor.getPosition());\r\n\r\n        let statements: SQLStatement[] = module.getSQLSTatementsAtSelection(monacoEditor.getSelection());\r\n        for (let statement of statements) {\r\n            statement.sql = monacoEditor.getModel().getValueInRange({\r\n                startColumn: statement.from.column,\r\n                startLineNumber: statement.from.line, endColumn: statement.to.column, endLineNumber: statement.to.line\r\n            });\r\n        }\r\n\r\n        // let sqlStatement = module.getSQLStatementAtPosition(monacoEditor.getPosition());\r\n\r\n        return statements;\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { Module } from \"../compiler/parser/Module.js\";\r\nimport { ResultsetPresenter } from \"../main/gui/ResultsetPresenter.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { WDatabase } from \"../workspace/WDatabase.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ajax } from \"./AjaxHelper.js\";\r\nimport { GetNewStatementsRequest, GetNewStatementsResponse, GetWebSocketTokenResponse, LongPollingListenerResponse, RegisterLongPollingListenerRequest, WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestGetNewStatements, WebSocketResponse } from \"./Data.js\";\r\n\r\nexport class Notifier {\r\n\r\n    connection: WebSocket;\r\n    isOpen: boolean = false;\r\n    workspace: Workspace;\r\n    database: WDatabase;\r\n\r\n    constructor(public main: Main) {\r\n        // Polling is not used. \r\n        // We try long polling (see below!)\r\n\r\n        // this.startPolling();\r\n    }\r\n\r\n    connect(workspace: Workspace) {\r\n\r\n        let that = this;\r\n        this.workspace = workspace;\r\n        this.database = workspace.database;\r\n\r\n        if (this.isOpen) {\r\n            this.connection.close();\r\n        }\r\n\r\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\r\n\r\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/websocket\";\r\n            this.connection = new WebSocket(url);\r\n\r\n            this.connection.onerror = (error: Event) => { this.onError(error); }\r\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\r\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\r\n\r\n            this.connection.onopen = (event: Event) => {\r\n                let request: WebSocketRequestConnect = {\r\n                    command: 1,\r\n                    token: response.token,\r\n                    workspaceId: workspace.id,\r\n                    databaseId: workspace.database.id,\r\n                    databaseVersion: workspace.database.version\r\n                }\r\n\r\n                this.isOpen = true;\r\n                this.sendIntern(JSON.stringify(request));\r\n                this.onOpen();\r\n\r\n            }\r\n\r\n            setTimeout(() => {\r\n                that.startLongPolling()\r\n            }, 2000);\r\n\r\n        });\r\n\r\n    }\r\n\r\n    unsentMessages: string[] = [];\r\n    sendIntern(message: string) {\r\n\r\n        if (!this.isOpen) {\r\n            this.unsentMessages.push(message);\r\n        } else {\r\n            try {\r\n                this.connection.send(message);\r\n            } catch (exception) {\r\n                console.log(exception);\r\n            }\r\n        }\r\n    }\r\n\r\n    onClose(event: CloseEvent) {\r\n        this.isOpen = false;\r\n    }\r\n\r\n\r\n    disconnect() {\r\n        let message: WebSocketRequestDisconnect = {\r\n            command: 4\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n        this.connection.close();\r\n        this.workspace = null;\r\n    }\r\n\r\n    onMessage(event: MessageEvent) {\r\n\r\n        let that = this;\r\n        let response: WebSocketResponse = JSON.parse(event.data);\r\n        if (response.command == undefined) return;\r\n\r\n        switch (response.command) {\r\n            case 2: // SendStatements\r\n                that.executeNewStatements(response.newStatements, response.firstNewStatementIndex, () => {\r\n                    let request: WebSocketRequestGetNewStatements = { command: 2, databaseVersion: that.database.version };\r\n                    that.sendIntern(JSON.stringify(request));\r\n                })\r\n                break;\r\n            case 3: // server initiated disconnect\r\n                this.isOpen = false;\r\n                this.database = null;\r\n                this.workspace = null;\r\n                break;\r\n            case 4: // keep alive\r\n                break;\r\n            case 5: // rollback\r\n                if (this.database.version > response.new_version) {\r\n                    this.main.getHistoryViewer().rollbackLocal();\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    executeNewStatements(newStatements: string[], firstNewStatementIndex: number, callbackIfTooFewStatements: () => void, callbackIfDone: () => void = () => { }, doRefreshDatabaseExplorer: boolean = true) {\r\n        if (this.database == null) return;\r\n        let that = this;\r\n        let delta = firstNewStatementIndex - (this.database.version + 1);\r\n        if (delta > 0) {\r\n            callbackIfTooFewStatements();\r\n            callbackIfDone();\r\n            return;\r\n        } else {\r\n            if (delta < 0) {\r\n                newStatements.splice(0, -delta);\r\n                firstNewStatementIndex -= delta;\r\n            }\r\n            let statements = newStatements;\r\n            if (statements.length > 0) {\r\n                this.main.resultsetPresenter.executeStatementsString(statements, 0, () => {\r\n                    that.main.getHistoryViewer().appendStatements(statements);\r\n                    that.database.statements = that.database.statements.concat(statements)\r\n                    that.database.version = firstNewStatementIndex + newStatements.length - 1;\r\n                    if (doRefreshDatabaseExplorer) {\r\n                        that.main.databaseExplorer.refresh();\r\n                    }\r\n                    callbackIfDone();\r\n                })\r\n            } else {\r\n                callbackIfDone();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    onError(error: Event) {\r\n    }\r\n\r\n    onOpen() {\r\n        this.isOpen = true;\r\n        if (this.unsentMessages.length > 0) {\r\n            this.unsentMessages.forEach(m => this.sendIntern(m));\r\n            this.unsentMessages = [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Polling is not used. \r\n     * We try long polling!\r\n     * (see below)\r\n     */\r\n    isPolling: boolean = false;\r\n    startPolling() {\r\n        if (this.isPolling) return;\r\n        this.isPolling = true;\r\n\r\n        this.poll();\r\n\r\n    }\r\n\r\n    /**\r\n     * Polling is not used.\r\n     * We try long polling!\r\n     * (see below)\r\n     */\r\n    counter: number = 0;\r\n    poll() {\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.poll();\r\n        }, 6000);\r\n\r\n        if (!that.isOpen && that.workspace != null) {\r\n            this.getNewStatementsHttp();\r\n\r\n            // retry connecting:\r\n            that.counter++;\r\n            if (that.counter == 10) {\r\n                that.counter = 0;\r\n                that.connect(that.workspace);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getNewStatementsHttp() {\r\n        let that = this;\r\n        if (this.workspace == null || this.database == null) return;\r\n\r\n        let request: GetNewStatementsRequest = {\r\n            workspaceId: this.workspace.id,\r\n            version_before: this.workspace.database.version\r\n        }\r\n\r\n        ajax('getNewStatements', request, (response: GetNewStatementsResponse) => {\r\n\r\n            that.executeNewStatements(response.newStatements, response.firstNewStatementIndex, () => {\r\n                that.getNewStatementsHttp();\r\n            })\r\n\r\n        });\r\n\r\n    }\r\n\r\n    isLongPolling: boolean = false;\r\n    startLongPolling() {\r\n        if (this.isLongPolling) return;\r\n        this.isLongPolling = true;\r\n\r\n        this.longPoll();\r\n\r\n    }\r\n\r\n    longPollCounter: number = 0;\r\n    longPoll() {\r\n        let that = this;\r\n\r\n        if (!that.isOpen && that.workspace != null) {\r\n            let request: RegisterLongPollingListenerRequest = {\r\n                workspaceId: that.workspace.id\r\n            }\r\n\r\n            $.ajax({\r\n                type: 'POST',\r\n                async: true,\r\n                data: JSON.stringify(request),\r\n                contentType: 'application/json',\r\n                url: \"servlet/registerLongPollingListener\",\r\n                success: function (resp: string) {\r\n                    let response: LongPollingListenerResponse = JSON.parse(resp);\r\n                    if (!that.isOpen && that.workspace?.id == request.workspaceId && response.success) {\r\n                        that.executeNewStatements(response.newStatements, response.firstNewStatementIndex, () => {\r\n                            that.getNewStatementsHttp();\r\n                        })\r\n\r\n                        let timeout: number = 1000;\r\n                        // retry connecting:\r\n                        that.longPollCounter++;\r\n                        if (that.longPollCounter == 10) {\r\n                            that.longPollCounter = 0;\r\n                            that.connect(that.workspace);\r\n                            timeout = 2000;\r\n                        }\r\n\r\n                        setTimeout(() => {\r\n                            that.longPoll();\r\n                        }, 2000);\r\n                    }\r\n                },\r\n                error: function (jqXHR, message) {\r\n                    if (!that.isOpen && that.workspace?.id == request.workspaceId) {\r\n                        setTimeout(() => {\r\n                            that.longPoll();\r\n                        }, 2000);\r\n                    }\r\n                }\r\n            });\r\n\r\n        } else {\r\n            setTimeout(() => {\r\n                that.longPoll();\r\n            }, 5000);\r\n        }\r\n\r\n    }\r\n\r\n}","export class WaitOverlay {\r\n\r\n    visible: boolean = false;\r\n    fadeOutPending: boolean = false;\r\n    $bitteWartenText: JQuery<HTMLElement>;\r\n    $bitteWartenProgress: JQuery<HTMLElement>;\r\n\r\n    constructor(private $waitDiv: JQuery<HTMLElement>){\r\n        this.$bitteWartenText = $waitDiv.find('.bitteWartenText');\r\n        this.$bitteWartenProgress = $waitDiv.find('.bitteWartenProgress');\r\n    }\r\n\r\n    show(message: string){\r\n        this.fadeOutPending = false;\r\n        this.$bitteWartenText.html(message);\r\n        this.$bitteWartenProgress.html('');\r\n        if(!this.visible){\r\n            this.visible = true;\r\n            this.$waitDiv.css('display', 'flex');\r\n            this.$waitDiv.hide();\r\n            this.$waitDiv.fadeIn(400);\r\n        }\r\n    }\r\n\r\n    setProgress(message: string){\r\n        this.$bitteWartenProgress.html(message);\r\n    }\r\n\r\n    hide(){\r\n        if(this.visible){\r\n            this.fadeOutPending = true;\r\n            setTimeout(() => {\r\n                if(this.fadeOutPending){\r\n                    this.fadeOutPending = false;\r\n                    this.$waitDiv.fadeOut(200, () => {\r\n                        this.$waitDiv.css('display', 'none');\r\n                    })\r\n                    this.visible = false;        \r\n                }                \r\n            }, 50);\r\n        }\r\n    }\r\n\r\n}","import { MainEmbedded } from \"../../embedded/MainEmbedded.js\";\r\nimport { copyTextToClipboard, openContextMenu } from \"../../tools/HtmlTools.js\";\r\nimport { WDatabase } from \"../../workspace/WDatabase.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\ntype HistoryPanelEntry = {\r\n    statement: string;\r\n    $div: JQuery<HTMLDivElement>;\r\n    $rollbackButton: JQuery<HTMLDivElement>;\r\n}\r\n\r\nexport class HistoryViewer {\r\n\r\n    panelEntries: HistoryPanelEntry[] = [];\r\n\r\n    constructor(private main: MainBase, private $historyPanel: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    clear() {\r\n        this.$historyPanel.empty();\r\n        this.panelEntries = [];\r\n    }\r\n\r\n    clearAndShowStatements(statements: string[]) {\r\n        this.clear();\r\n        this.appendStatements(statements);\r\n    }\r\n\r\n    appendStatements(statements: string[]) {\r\n        statements.forEach(stmt => {\r\n            let panelEntry = this.makePanelEntry(stmt, this.panelEntries.length + 1);\r\n            this.$historyPanel.prepend(panelEntry.$div);\r\n            this.panelEntries.unshift(panelEntry);\r\n        })\r\n\r\n        this.makeLastButtonActive();\r\n    }\r\n\r\n    makeLastButtonActive() {\r\n        this.panelEntries.forEach(pe => pe.$rollbackButton.removeClass('jo_active'));\r\n\r\n        if (this.panelEntries.length > 0) {\r\n            this.panelEntries[0].$rollbackButton.addClass('jo_active');\r\n        }\r\n    }\r\n\r\n    makePanelEntry(statement: string, index: number): HistoryPanelEntry {\r\n        let $div = <JQuery<HTMLDivElement>>jQuery(`<div class=\"jo_panelEntry\"></div>`);\r\n        let $index = jQuery(`<div class=\"jo_panelEntryIndex\">${index}.</div>`);\r\n        let $text = jQuery(`<div class=\"jo_panelEntryText\"></div>`);\r\n        let t: string = statement.substring(0, Math.min(400, statement.length));\r\n        if (statement.length > 400) {\r\n            t += \"...\";\r\n        }\r\n        $text.text(t);\r\n        let $copybutton = <JQuery<HTMLDivElement>>jQuery(`<div class=\"img_copy jo_panelEntryCopyButton jo_active jo_button\" title=\"In die Zwischenablage kopieren\"></div>`)\r\n        let $rollbackbutton = <JQuery<HTMLDivElement>>jQuery(`<div class=\"img_undo jo_panelEntryRollbackButton jo_button\" title=\"Rollback\"></div>`)\r\n        let that = this;\r\n\r\n        $copybutton.on('click', () => {\r\n            copyTextToClipboard(statement);\r\n        })\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $rollbackbutton.on(mousePointer + 'up', (ev) => {\r\n            ev.preventDefault();\r\n            openContextMenu([{\r\n                caption: \"Abbrechen\",\r\n                callback: () => {\r\n                }\r\n            }, {\r\n                caption: \"Ich bin mir sicher: rollback!\",\r\n                color: \"#ff6060\",\r\n                callback: () => {\r\n                    this.rollback();\r\n                }\r\n            }], ev.pageX + 2, ev.pageY + 2);\r\n            ev.stopPropagation();\r\n        })\r\n\r\n        $div.append($index, $text, $copybutton, $rollbackbutton);\r\n        return {\r\n            $div: $div,\r\n            statement: statement,\r\n            $rollbackButton: $rollbackbutton\r\n        }\r\n    }\r\n\r\n    rollback() {\r\n        if (this.panelEntries.length == 0) return;\r\n\r\n        if (this.main.isEmbedded()) {\r\n            this.rollbackEmbedded();\r\n        } else {\r\n            let main: Main = <Main>this.main;\r\n            main.networkManager.rollback((error: string, rollbackLocalNeeded: boolean) => {\r\n                if (error == null && rollbackLocalNeeded) {\r\n                    this.rollbackLocal();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    rollbackLocal() {\r\n        let database = this.main.getCurrentWorkspace().database;\r\n        database.statements.pop();\r\n        database.version--;\r\n        this.main.getDatabaseTool().initializeWorker(database.templateDump, database.statements, () => {\r\n\r\n        }, () => {\r\n            this.main.getDatabaseExplorer().refreshAfterRetrievingDBStructure();\r\n            let lastPanelEntry = this.panelEntries.shift();\r\n            lastPanelEntry.$div.remove();\r\n            this.makeLastButtonActive();\r\n        })\r\n    }\r\n\r\n    rollbackEmbedded() {\r\n        let main: MainEmbedded = <MainEmbedded>this.main;\r\n        main.writeQueryManager.rollback();\r\n\r\n        this.main.getDatabaseTool().initializeWorker(main.initialTemplateDump,\r\n            main.initialStatements.concat(main.writeQueryManager.writtenStatements), () => { },\r\n            () => {\r\n                this.main.getDatabaseExplorer().refreshAfterRetrievingDBStructure();\r\n                let lastPanelEntry = this.panelEntries.shift();\r\n                lastPanelEntry.$div.remove();\r\n                this.makeLastButtonActive();\r\n            })\r\n    }\r\n\r\n}","import { ClassData, UserData, Workspaces } from \"../communication/Data.js\";\r\nimport { NetworkManager } from \"../communication/NetworkManager.js\";\r\nimport { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ActionManager } from \"./gui/ActionManager.js\";\r\nimport { BottomDiv } from \"./gui/BottomDiv.js\";\r\nimport { Editor } from \"./gui/Editor.js\";\r\nimport { Formatter } from \"./gui/Formatter.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { MainMenu } from \"./gui/MainMenu.js\";\r\nimport { ProjectExplorer } from \"./gui/ProjectExplorer.js\";\r\nimport { RightDiv } from \"./gui/RightDiv.js\";\r\nimport { Sliders } from \"./gui/Sliders.js\";\r\nimport { TeacherExplorer } from \"./gui/TeacherExplorer.js\";\r\nimport { ThemeManager } from \"./gui/ThemeManager.js\";\r\nimport { Login } from \"./Login.js\";\r\nimport { Module, File } from \"../compiler/parser/Module.js\";\r\nimport { ViewModeController } from \"./gui/ViewModeController.js\";\r\nimport { ErrorManager } from \"./gui/ErrorManager.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { DatabaseTool } from \"../tools/DatabaseTools.js\";\r\nimport { MainBase } from \"./MainBase.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { DatabaseExplorer } from \"./gui/DatabaseExplorer.js\";\r\nimport { ProgramControlButtons } from \"./gui/ProgramControlButtons.js\";\r\nimport { ResultsetPresenter } from \"./gui/ResultsetPresenter.js\";\r\nimport { Notifier } from \"../communication/Notifier.js\";\r\nimport { checkIfMousePresent } from \"../tools/HtmlTools.js\";\r\nimport { WaitOverlay } from \"./gui/WaitOverlay.js\";\r\nimport { HistoryViewer } from \"./gui/HistoryViewer.js\";\r\n\r\nexport class Main implements MainBase {\r\n    isEmbedded(): boolean {\r\n        return false;\r\n    }\r\n\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    // VORSICHT: ggf. Module -> any\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.projectExplorer.getCurrentlyEditedModule();\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n        this.projectExplorer.setModuleActive(module);\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n    getDatabaseTool(): DatabaseTool {\r\n        return this.databaseTool;\r\n    }\r\n\r\n    getDatabaseExplorer():DatabaseExplorer {\r\n        return this.databaseExplorer;\r\n    }\r\n\r\n    getResultsetPresenter(): ResultsetPresenter {\r\n        return this.resultsetPresenter;\r\n    }\r\n\r\n    getWaitOverlay(): WaitOverlay {\r\n        return this.waitOverlay;\r\n    }\r\n\r\n    getHistoryViewer(): HistoryViewer {\r\n        return this.historyViewer;\r\n    }\r\n\r\n    workspaceList: Workspace[] = [];\r\n    workspacesOwnerId: number;\r\n\r\n    // monaco_editor: monaco.editor.IStandaloneCodeEditor;\r\n    editor: Editor;\r\n    currentWorkspace: Workspace;\r\n    projectExplorer: ProjectExplorer;\r\n    teacherExplorer: TeacherExplorer;\r\n    networkManager: NetworkManager;\r\n    actionManager: ActionManager;\r\n    mainMenu: MainMenu;\r\n\r\n    login: Login;\r\n\r\n    compiler: Compiler;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    bottomDiv: BottomDiv;\r\n\r\n    startupComplete = 2;\r\n    waitForGUICallback: () => void;\r\n\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    user: UserData;\r\n    userDataDirty: boolean = false;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    rightDiv: RightDiv;\r\n\r\n    viewModeController: ViewModeController;\r\n\r\n    databaseTool: DatabaseTool;\r\n\r\n    databaseExplorer: DatabaseExplorer;\r\n\r\n    resultsetPresenter: ResultsetPresenter;\r\n\r\n    notifier: Notifier;\r\n\r\n    waitOverlay: WaitOverlay = new WaitOverlay(jQuery('.bitteWarten'));\r\n    historyViewer: HistoryViewer = new HistoryViewer(this, jQuery('.jo_historyTab'));\r\n\r\n    initGUI() {\r\n\r\n        checkIfMousePresent();\r\n\r\n        this.login = new Login(this);\r\n        this.login.initGUI();\r\n\r\n        this.databaseTool = new DatabaseTool(this);\r\n        this.databaseExplorer = new DatabaseExplorer(this, jQuery(\".jo_db_tree\"));\r\n\r\n        this.actionManager = new ActionManager(null, this);\r\n        this.actionManager.init();\r\n\r\n        this.networkManager = new NetworkManager(this, jQuery('#bottomdiv-outer .jo_updateTimerDiv'));\r\n\r\n        let sliders = new Sliders(this);\r\n        sliders.initSliders();\r\n        this.mainMenu = new MainMenu(this);\r\n        this.projectExplorer = new ProjectExplorer(this, jQuery('#leftpanel>.jo_projectexplorer'));\r\n        this.projectExplorer.initGUI();\r\n\r\n        this.bottomDiv = new BottomDiv(this, jQuery('#bottomdiv-outer>.jo_bottomdiv-inner'), jQuery('body'));\r\n\r\n        this.rightDiv = new RightDiv(this, jQuery('#rightdiv-inner'));\r\n        this.rightDiv.initGUI();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.themeManager = new ThemeManager();\r\n\r\n        this.viewModeController = new ViewModeController(jQuery(\"#view-mode\"), this);\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n        new ProgramControlButtons(this, jQuery('#controls'));\r\n\r\n        this.resultsetPresenter = new ResultsetPresenter(this, jQuery('.jo_bottomdiv-inner'));\r\n\r\n        this.notifier = new Notifier(this);\r\n\r\n    }\r\n\r\n\r\n    initEditor() {\r\n        this.editor = new Editor(this, true, false);\r\n        new Formatter().init();\r\n        // this.monaco_editor = \r\n        this.editor.initGUI(jQuery('#editor'));\r\n\r\n        let that = this;\r\n        jQuery(window).on('resize', (event) => {\r\n            jQuery('#bottomdiv-outer').css('height', '450px');\r\n            jQuery('#editor').css('height', (window.innerHeight - 450 - 30 - 2) + \"px\");\r\n            that.editor.editor.layout();\r\n            jQuery('#editor').css('height', \"\");\r\n\r\n        });\r\n\r\n        jQuery(window).trigger('resize');\r\n\r\n        this.checkStartupComplete();\r\n    }\r\n\r\n    initTeacherExplorer(classdata: ClassData[]) {\r\n        this.teacherExplorer = new TeacherExplorer(this, classdata);\r\n        this.teacherExplorer.initGUI();\r\n    }\r\n\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    start() {\r\n\r\n        if (this.waitForGUICallback != null) {\r\n            this.waitForGUICallback();\r\n        }\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.getMonacoEditor().layout();\r\n        }, 200);\r\n\r\n        this.compiler = new Compiler(this);\r\n\r\n        this.startTimer();\r\n\r\n        $(window).on('unload', function() {\r\n            \r\n            if(navigator.sendBeacon && that.user != null){\r\n                that.networkManager.sendUpdates(null, false);\r\n                that.networkManager.sendUpdateUserSettings(() => {});\r\n            }\r\n            \r\n        });\r\n\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n                this.projectExplorer.renderErrorCount(this.currentWorkspace, errors);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                if (this.projectExplorer) {\r\n                    this.version++;\r\n                }\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    removeWorkspace(w: Workspace) {\r\n        this.workspaceList.splice(this.workspaceList.indexOf(w), 1);\r\n    }\r\n\r\n    restoreWorkspaces(workspaces: Workspaces) {\r\n\r\n        this.workspaceList = [];\r\n        this.currentWorkspace = null;\r\n        // this.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\" , \"text\"));\r\n        this.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        let currentWorkspace: Workspace = null;\r\n\r\n        for (let ws of workspaces.workspaces) {\r\n\r\n            let workspace: Workspace = Workspace.restoreFromData(ws, this);\r\n            this.workspaceList.push(workspace);\r\n            if (ws.id == this.user.currentWorkspace_id) {\r\n                currentWorkspace = workspace;\r\n            }\r\n        }\r\n\r\n        this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n\r\n        if (currentWorkspace == null && this.workspaceList.length > 0) {\r\n            currentWorkspace = this.workspaceList[0];\r\n        }\r\n\r\n        if (currentWorkspace != null) {\r\n            this.projectExplorer.setWorkspaceActive(currentWorkspace);\r\n        }\r\n\r\n        if (this.workspaceList.length == 0) {\r\n\r\n            Helper.showHelper(\"newDatabaseHelper\", this, this.projectExplorer.workspaceListPanel.$captionElement);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    createNewWorkspace(name: string, owner_id: number): Workspace {\r\n        return new Workspace(name, this, owner_id);\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Main } from \"./Main.js\";\r\n\r\n\r\njQuery(function () {\r\n\r\n    let main = new Main();\r\n\r\n    //@ts-ignore\r\n    window.require.config({ paths: { 'vs': 'lib/monaco-editor/dev/vs' } });\r\n    //@ts-ignore\r\n    window.require.config({\r\n        'vs/nls': {\r\n            availableLanguages: {\r\n                '*': 'de'\r\n            }\r\n        },\r\n        ignoreDuplicateModules: [\"vs/editor/editor.main\"]\r\n    });\r\n\r\n    //@ts-ignore\r\n    window.require(['vs/editor/editor.main'], function () {\r\n\r\n        main.initEditor();\r\n        main.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        main.bottomDiv.initGUI();\r\n\r\n        // main.loadWorkspace();\r\n\r\n\r\n    });\r\n\r\n    main.initGUI();\r\n\r\n});"],"sourceRoot":""}