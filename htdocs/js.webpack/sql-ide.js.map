{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../node_modules/regenerator-runtime/runtime.js","webpack:///../../../src/client/communication/AjaxHelper.ts","webpack:///../../../src/client/workspace/WDatabase.ts","webpack:///../../../src/client/communication/CacheManager.ts","webpack:///../../../src/client/communication/NotifierClient.ts","webpack:///../../../src/client/communication/NetworkManager.ts","webpack:///../../../../src/client/compiler/lexer/Token.ts","webpack:///../../../../src/client/compiler/lexer/Lexer.ts","webpack:///../../../../src/client/compiler/parser/SQLTypes.ts","webpack:///../../../../src/client/compiler/parser/Parser.ts","webpack:///../../../../src/client/compiler/parser/SQLTable.ts","webpack:///../../../../src/client/compiler/parser/SymbolTable.ts","webpack:///../../../../src/client/compiler/parser/SQLMethods.ts","webpack:///../../../src/client/tools/StringTools.ts","webpack:///../../../../src/client/compiler/parser/SymbolResolver.ts","webpack:///../../../src/client/compiler/Compiler.ts","webpack:///../../../../src/client/compiler/parser/Module.ts","webpack:///../../../src/client/tools/HtmlTools.ts","webpack:///../../../src/client/tools/TemplateUploader.ts","webpack:///../../../../src/client/main/gui/DatabaseSettingsDialog.ts","webpack:///../../../src/client/workspace/Workspace.ts","webpack:///../../../../src/client/main/gui/ActionManager.ts","webpack:///../../../../src/client/main/gui/ErrorManager.ts","webpack:///../../../../src/client/main/gui/HomeworkManager.ts","webpack:///../../../../src/client/main/gui/BottomDiv.ts","webpack:///../../../../src/client/main/gui/MyCompletionItemProvider.ts","webpack:///../../../../src/client/main/gui/MySignatureHelpProvider.ts","webpack:///../../../../src/client/main/gui/MyHoverProvider.ts","webpack:///../../../../src/client/main/gui/MyCodeActionProvider.ts","webpack:///../../../../src/client/main/gui/MyReferenceProvider.ts","webpack:///../../../../src/client/main/gui/Helper.ts","webpack:///../../../../src/client/main/gui/Editor.ts","webpack:///../../../../src/client/main/gui/VscSql.ts","webpack:///../../../../src/client/main/gui/Formatter.ts","webpack:///../../../src/client/sqljs-worker/sqljsWorkerSim.ts","webpack:///../../../src/client/tools/DatabaseTools.ts","webpack:///../../../../src/client/compiler/parser/StatementCleaner.ts","webpack:///../../../src/client/tools/MySqlImporter.ts","webpack:///../../../src/client/tools/DatabaseImportExport.ts","webpack:///../../../../src/client/main/gui/NewDatabaseDialog.ts","webpack:///../../../../src/client/main/gui/MainMenu.ts","webpack:///../../../../src/client/main/gui/Accordion.ts","webpack:///../../../../src/client/main/gui/DistributeToStudentsDialog.ts","webpack:///../../../../src/client/main/gui/ProjectExplorer.ts","webpack:///../../../../src/client/main/gui/RightDiv.ts","webpack:///../../../../src/client/main/gui/Sliders.ts","webpack:///../../../../src/client/main/gui/TeacherExplorer.ts","webpack:///../../../../src/client/main/gui/ThemeManager.ts","webpack:///../../../../src/client/main/gui/UserMenu.ts","webpack:///../../../src/client/main/Login.ts","webpack:///../../../../src/client/main/gui/ViewModeController.ts","webpack:///../../../../src/client/compiler/parser/SemicolonAngel.ts","webpack:///../../../../src/client/main/gui/DatabaseExplorer.ts","webpack:///../../../../src/client/main/gui/ProgramControlButtons.ts","webpack:///../../../../src/client/main/gui/ResultsetPresenter.ts","webpack:///../../../src/client/communication/Notifier.ts","webpack:///../../../../src/client/main/gui/WaitOverlay.ts","webpack:///../../../../src/client/main/gui/HistoryViewer.ts","webpack:///../../../src/client/main/Main.ts","webpack:///../../../src/client/main/IDEStarter.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","runtime","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","define","obj","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","state","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","makeInvokeMethod","fn","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","undefined","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","keys","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","PerformanceCollector","url","startTime","pe","performanceData","find","count","sumTime","dt","Math","round","performance","now","performanceDataCount","lastTimeSent","request","data","ajax","successCallback","errorCallback","showNetworkBusy","time","$","JSON","stringify","contentType","success","response","registerPerformanceEntry","message","jqXHR","statusText","status","busy","jQuery","css","WDatabase","version","db","id","statements","published_to","description","templateDump","based_on_template_id","owner_id","CacheManager","databaseId","callback","that","cacheAvailable","getCache","cache","match","databaseIdToCacheIdentifier","arrayBuffer","buffer","Uint8Array","catch","put","Response","caches","open","main","networkManager","unsentMessages","connect","window","location","protocol","startsWith","host","connection","WebSocket","onerror","onError","onclose","event","onClose","onmessage","onMessage","onopen","command","token","sendIntern","setTimeout","forcedUpdateEvery","counterTillForcedUpdate","send","console","log","parse","sendUpdates","$updateTimerDiv","ownUpdateFrequencyInSeconds","teacherUpdateFrequencyInSeconds","updateFrequencyInSeconds","secondsTillNextUpdate","errorHappened","attr","interval","clearInterval","setInterval","user","forceUpdate","$rect","notifierClient","sendIfNothingIsDirty","projectExplorer","writeEditorTextToFile","settings","wdList","fdList","ws","workspaceList","saved","getWorkspaceData","moduleStore","getModules","file","text","getProgramTextFromMonacoModel","getFileData","workspacesWithoutFiles","files","workspacesOwnerId","userId","language","currentWorkspaceId","getCurrentWorkspace","getModifiedWorkspaces","updateWorkspaces","wd","is_testuser","random","entity","workspace_id","workspaceId","alert","kind","secretKind","secret","databaseName","publishedTo","workspace","klasse","student_ids","class_id","current_workspace_id","version_before","database","newStatements","firstNewStatementIndex","statements_before","new_version","cacheManager","fromDatabaseData","fetchTemplateFromCache","fetchTemplate","template","saveTemplateToCache","pako","inflate","xhrFields","responseType","user_id","templateList","sendUpdatesRequest","sendUpdatesResponse","idToRemoteWorkspaceDataMap","Map","fileIdsSended","workspaces","set","newWorkspaceNames","remoteWorkspace","filter","createNewWorkspaceFromWorkspaceData","idToRemoteFileDataMap","fd","idToModuleMap","fileId","remoteFileData","fileListPanel","removeElement","currentWorkspace","removeModule","indexOf","model","setValue","lastSavedVersionId","getAlternativeVersionId","remoteFile","createFile","join","workspaceListPanel","sortElements","withSort","w","createNewWorkspace","sql_history","path","isFolder","split","panelElement","externalElement","iconClass","addElement","fileData","ae","f","dirty","identical_to_repository_version","getNewModule","putModule","TokenType","LexerState","TokenTypeReadable","identifier","integerConstant","floatingPointConstant","booleanConstant","stringConstant","charConstant","true","false","keywordRename","keywordDistinct","keywordTo","keywordAlter","keywordCommit","keywordAdd","keywordDelete","keywordSelect","keywordInsert","keywordInto","keywordValues","keywordUpdate","keywordSet","keywordNo","keywordUse","keywordCreate","keywordReferences","keywordPrimary","keywordForeign","keywordTable","keywordTables","keywordColumn","keywordDrop","keywordUnique","keywordKey","keywordIndex","keywordConstraint","keywordModify","keywordCascade","keywordRestrict","keywordAction","keywordAutoincrement","keywordFrom","keywordWhere","keywordGroup","keywordBy","keywordHaving","keywordOrder","keywordAscending","keywordDescending","keywordNulls","keywordFirst","keywordLast","keywordIs","keywordNull","keywordDatabase","keywordAnd","keywordOr","keywordNot","keywordJoin","keywordNatural","keywordLeft","keywordCross","keywordInner","keywordOuter","keywordOn","keywordAs","keywordLimit","keywordOffset","keywordIn","keywordNotIn","keywordLike","keywordCollate","keywordDefault","keywordComment","keywordEngine","keywordCharset","keywordCharacter","keywordStart","keywordTransaction","keywordIf","keywordExists","keywordLock","keywordUnlock","keywordWrite","keywordRead","leftBracket","rightBracket","leftSquareBracket","rightSquareBracket","leftCurlyBracket","rightCurlyBracket","leftRightSquareBracket","dot","minus","modulo","plus","multiplication","division","singleQuote","doubleQuote","identifierQuote","lower","greater","equal","lowerOrEqual","greaterOrEqual","concatenation","semicolon","colon","comma","backslash","at","hash","pipe","space","tab","newline","identifierChar","comment","endofSourcecode","specialCharList","'","notEqual","linefeed","keywordList","EscapeSequenceList","\"","spaceTokens","correspondingBracket","tokenTypesToMerge","first","second","merged","isNot","isNotNull","isNull","input","replace","tokenList","errorList","bracketError","bracketStack","pos","line","column","nonSpaceLastTokenType","nonSpaceLastToken","tokens","errors","currentChar","nextChar","mainState","bracketOpen","bracketClosed","setBracketError","tt","openBracket","char","specialCharToken","pushToken","lexMultilineComment","checkClosingBracket","isDigit","lexEndofLineComment","lexNumber","position","lexStringConstant","lexSpace","lexAnnotation","lexQuotedIdentifier","lexIdentifierOrKeyword","pushError","tripel","newLength","errorLevel","level","a","base","charCode","charCodeAt","posStart","posEnd","substring","escapeChar","beginChar","isDoubleQuotedIdentifier","lastCharWasNewline","commentStart","sign","firstChar","radix","exponent","hasExponential","posExponentStart","exponentString","Number","parseInt","parseFloat","pow","isSpace","toLowerCase","SQLType","parameterDescriptions","checkFunction","outputFunction","canCastToList","super","binaryResultTypes","unaryOperators","ownIndex","splice","baseTypeMap","toLocaleLowerCase","baseTypes","concat","tokenType","secondType","resultType","isCommutative","Array","isArray","map","addBinaryOperation","type2","bt2","operator","booleanType","value1","value2","max","tens","baseType","parameterValues","parameters","returnBaseType","getUnaryResultType","getBinaryResult","substr","textTypes","varcharType","ci","pv","v","charType","textType","tinyTextType","mediumTextType","longTextType","floatTypes","decimalType","vk","trunc","nk","numericType","doubleType","realType","floatType","numberTypes","intType","integerType","tinyIntType","smallIntType","mediumIntType","bigIntType","dateType","dateTimeType","timestampType","nullType","numericTypes","addBaseTypes","numericBinaryOperators","comparisonOperators","j","characterTypes","booleanOperations","bt","lookahead","endToken","beginStatementKeywords","completionHints","sqlStatements","addCompletionHint","initializeLookahead","lastToken","parseMain","ct","token1","lastComment","commentBefore","cct","quickFix","assign","nextToken","skip","invokeSemicolonAngel","expectedValuesArray","isOperatorOrDot","title","editsProvider","uri","resource","edit","range","startLineNumber","startColumn","endLineNumber","endColumn","severity","monaco","MarkerSeverity","getSemicolonAngel","register","expectedTokens","op","operatorPrecedence","ret","deltaColumns","tpos","deltaInsideToken","tokenPos","getCurrentPosition","mainProgram","mainProgramEnd","afterLastStatement","semicolonAfterLastStatement","getCurrentPositionPlus","isEnd","oldPos","errorsBeforeStatement","startPosition","st","parseStatement","hasErrors","ast","from","to","getEndOfPosition","acceptedBySQLite","beginStatementTokens","firstBadToken","expectSemicolon","parseSelect","parseInsert","parseCreateTableOrDatabase","parseUpdate","parseDelete","parseDropTable","parseAlterTable","parseSet","parseUse","expect","parseLockUnlock","node","omittedeStatement","endPosition","symbolTable","tableIdentifier","tableIdentifierPosition","addCompletionHintHere","parseRenameTableOrColumn","parseAlterTableAdd","parseDropColumn","comesToken","getEndOfCurrentToken","newTableName","oldColumnName","oldColumnPosition","newColumnName","unique","parseAddColumn","parseAddPrimaryKey","parseAddIndex","parseModifyColumn","parseAddConstraint","fki","parseForeignKeyDefinition","foreignKeys","referencesTable","referencesColumn","referencesPosition","parseReferences","pos0","pos1","modifyColumnInfo","parseColumnDefinition","primaryKeys","index","index_name","indices","columnDefBegin","columnDef","ifExists","whereNode","whereNodeBegin","whereNodeEnd","parseTerm","columnIdentifiers","columnIdentifierPositions","valuePosBegin","valuePosEnd","parseCreateDatabase","parseCreateTable","ifNotExists","columnList","combinedPrimaryKeyColumns","foreignKeyInfoList","uniqueConstraints","primaryKeyAlreadyDefined","parsePrimaryKeyTerm","parseUniqueTerm","columnNode","isPrimary","isAutoIncrement","columns","uniqueConstraint","notNull","parseType","hintColumns","hintTables","hints","additionalColumns","praefix","suffix","datatypes","getBaseType","alreadySeenKeywords","foreignKeyInfo","collate","defaultValue","fromConstantType","canCastTo","valuesPosition","columnsPosition","table","alias","parseValueLists","insideListTokens","outerFirst","leftBracketPosition","constantType","constant","constantNode","columnListStart","fromNode","parentStatement","parseColumnList","columnListKeywordArray","findIndex","allColumns","fromListKeywordArray","fromStartPosition","dontHint","parseTableOrSubQuery","hintEndPosition","fromEndPosition","unshift","whereKeywordArray","whereStart","groupKeywordArray","groupStart","groupByNode","parseGroupBy","orderStart","orderByNode","parseOrderBy","limitNode","parseLimit","numberOfRows","ln","offset","gbn","tokenTypesAfterGroupBy","term","having","obnList","obn","leftSide","parseAtomicTableOrSubQuery","parseJoinOperator","rightSide","firstOperand","secondOperand","on","selectStatement","subquery","query","tokenTypesAfterListEnd","allowAliases","distinct","columnTerm","parseTermBinary","precedence","left","parseUnary","operators","right","binaryOp","parseBracket","tt1","unaryOp","operand","isStringConstant","parseDotOrArrayChains","identifier1","position1","parseMethodCallParameters","rightBracketPosition","callMethod","operands","nodes","commaPositions","secondIdentifier","identifierLeft","identifierRight","list","elements","constantTypes","tokenBeforeBracket","selectNode","listNode","parseList","termInsideBrackets","parameter","isPrimaryKey","isNullable","cs","typeMatch1","completeTypeSQL","baseTypeIdentifier","commaSeparatedParameters","trim","fromColumnStructure","Table","ts","size","tsList","tables","fromTableStructure","columnStructureToColumnMap","referencedCs","references","referencedColumn","parentSymbolTable","positionFrom","positionTo","childSymbolTables","symbols","symbolList","parent","databaseStructure","fromTableStructureList","storeTableSymbols","storeSymbol","posOfDefinition","referencedOnPositions","symbol","containsPosition","shortestSymbolTableContainingPosition","shortestPosition","st1","findTableAtPosition","findTables","isAggregating","returnType","acceptsStarParameter","SQLMethodStore","methods","pushOneParameterMethod","countMethod","instance","parameterType","escapeHtml","unsafe","twoDez","z","isDate","inputText","opera1","opera2","lopera1","lopera2","pdate","dd","mm","yy","lyear","isDateTime","dateStr","databaseTool","symbolTableStack","mainSymbolTable","statement","astNode","resolveSelect","resolveInsert","resolveCreateTable","resolveUpdate","resolveDelete","resolveDropTable","resolveAlterTable","getCurrentSymbolTable","resultTable","pushNewSymbolTable","joinedTables","resolveTableOrSubQuery","extractDatabaseStructure","resolveTerm","c1","sqlType","whereType","getBaseTypeName","findTable","whereSymbolTable","oldColumn","ciPos","createTableNode","thisTable","cn","tosNode","tableList","storeTableIntoSymbolTable","tableAlias","resolveNotIn","typeLeft","typeRight","getBinaryResultType","operandType","resultType1","resolveMethodCall","resolveIdentifier","resolveDot","selectTable","tableSymbols","findColumn","getInstance","getMethods","found","methodParameter","operatorString","leftType","pType","element","elementType","tableCompletionTo","valueList","destType","CompilerStatus","compilerStatus","compiledButNothingToRun","compiling","t0","lexer","clear","lexed","lex","getCurrentlyEditedModule","getBottomDiv","errorManager","showParenthesisWarning","startRegistering","parser","getDatabaseTool","symbolResolver","start","compilerMessage","healSemicolons","readyToRun","oldErrorDecorations","identifierPositions","methodCallPositions","uriCounter","uriMap","Uri","scheme","editor","createModel","updateOptions","tabSize","onDidChangeContent","versionId","isEmbedded","main1","text_before_revision","student_edited_after_revision","bottomDiv","homeworkManager","showHomeWorkRevisionButton","renderHomeworkButton","fromPosition","toPosition","hintKeywords","ch","fromColumn","fromLine","toColumn","toLine","hintColumnsOfTable","chList","sel","selStart","selEnd","stmt","compare","b","lineNumber","bestCh","bestRangeLength","rangeLength","f1","submitted_date","file_type","ec","el","getValue","EndOfLinePreference","LF","positionList","positionsOnLine","bestFoundPosition","sort","e1","e2","errorLevelCompare","level1","level2","maxUriNumber","ModuleStore","moduleMap","module_id","ms","copy","mo","includeSystemModules","excludedModuleName","moduleName","openContextMenu","items","x","y","mousePointer","PointerEvent","$contextMenu","$openSubMenu","parentMenuItem","mi","caption","link","$item","subMenu","color","ev","stopPropagation","remove","document","off","$link","hide","width","top","append","e","leftRight","innerWidth","xp","topBottom","innerHeight","yp","show","makeTabs","tabDiv","headings","not","tabs","target","removeClass","addClass","trigger","makeDiv","klass","div","jo_mouseDetected","animateToTransparent","$element","cssProperty","startColorRgb","duration","colorPraefix","delta","animate","copyTextToClipboard","navigator","clipboard","writeText","textArea","createElement","style","body","appendChild","focus","select","execCommand","removeChild","fallbackCopyTextToClipboard","TemplateUploader","dump","reason","waitOverlay","export","deflate","uploadIntern","processData","headers","init","$dialog","showMainWindow","saveNameAndPublishedTo","setValues","setNewSecret","$copyButton","prop","checked","each","setNameAndPublishedTo","val","uploadCurrentDatabase","getDatabaseSettings","secrets","is_admin","is_schooladmin","empty","withFiles","currentFileId","currentlyOpenModule","permissions","database_id","$buttonDiv","$htmlFirstLine","$button","restoreFromData","ActionManager","$mainElement","actions","keyEntries","buttons","executeKeyDownEvent","actionIdentifier","action","button","active","activeElement","tagName","keyCode","ctrlKey","shiftKey","altKey","actionEntries","actionEntry","preventDefault","$bottomDiv","$mainDiv","oldDecorations","minimapColor","lightBulbOnClickFunctionList","$bracket_warning","children","getMonacoEditor","errorCountMap","$errorDiv","markers","decorations","$errorList","getSortedAndFilteredErrors","getErrorCount","linesDecorationsClassName","borderLeftClass","lightBulbClass","class","onClickFunction","edits","executeEdits","Range","forceMoveMarkers","processError","Warning","Info","relatedInformation","options","minimap","MinimapPosition","Inline","setModelMarkers","deltaDecorations","$file","$error","registerLightbulbOnClickFunctions","locf","$errorDivs","$div","$lineColumn","category","$message","showError","setModuleActive","revealRangeInCenter","className","showRevisionActive","$homeworkTab","$homeworkTabLeft","$homeworkTabRight","prepend","$showRevisionButton","hideRevision","showRevision","originalModel","modifiedModel","diffEditor","createDiffEditor","getElementById","enableSplitViewResizing","originalEditable","readOnly","renderSideBySide","setModel","original","modified","dispose","daysWithModules","dateString","date","Date","stringToDate","dateWithoutTime","getDate","getMonth","getFullYear","dateToStringWithoutTime","dwm","day","m1","m2","localeCompare","moduleWithWorkspace","setWorkspaceActive","initGUI","triggerCharacters","keywordCompletionItems","keywordToSnippetMap","setupKeywordCompletionItems","getModuleByMonacoModel","wfc","provideCompletionItemsIntern","sw","_contentWidgets","widget","toggleDetails","isStringLiteral","textUntilPosition","getValueInRange","textAfterPosition","completionHint","getCompletionHint","completionItems","addKeywordCompletionItems","dotMatch","ibMatch","identifierAndBracketAfterCursor","addIdentifierCompletionItems","addDotCompletionItems","word","getWordUntilPosition","replaceWordRange","insertAfterCursorRange","item","insertText","suggestions","textAfterDot","textBeforeDot","rangeToReplace","label","detail","filterText","insertTextRules","languages","CompletionItemInsertTextRule","KeepWhitespace","CompletionItemKind","Field","tableIdentifiers","columnIdentifier","InsertAsSnippet","Snippet","Class","sortText","columList","withTable","snippet","Keyword","posMin","posMax","watchDog","posOld","arguments","MySignatureHelpProvider","signatureHelpTriggerCharacters","signatureHelpRetriggerCharacters","compileIfDirty","provideSignatureHelpLater","getModel","methodCallPosition","rightMostPosition","mcp","identifierPosition","getSignatureHelp","parameterIndex","cp","activeParameter","activeSignature","signatures","MyHoverProvider","selection","getSelection","getElementAtPosition","getWordUnderCursor","desc","keywordDescriptions","contents","getValueLengthInRange","end","isInsideIdentifierOrArrayDescriptor","begin","isInsideOperator","isInsideIdentifierChain","MyCodeActionProvider","diagnostics","isPreferred","MyReferenceProvider","usagePositions","referencePositions","upInCurrentModule","up","targetElement","direction","$helper","bottom","height","html","close","fadeIn","fadeOut","mainBase","helperHistory","flag","sendUpdateUserSettings","openHelper","showMinimap","cw","dontPushNextCursorMove","lastTime","elementDecoration","extensions","conf","onEnterRules","beforeText","afterText","indentAction","IndentAction","IndentOutdent","appendText","None","removeText","comments","lineComment","blockComment","brackets","autoClosingPairs","surroundingPairs","setLanguageConfiguration","setMonarchTokensProvider","defaultToken","tokenPostfix","ignoreCase","escapes","keywords","builtinFunctions","builtinVariables","pseudoColumns","tokenizer","root","include","cases","whitespace","numbers","strings","string","complexIdentifiers","quotedIdentifier","scopes","defineVscSQL","defineTheme","inherit","rules","foreground","fontStyle","colors","lightbulb","enabled","lineDecorationsWidth","peekWidgetDefaultFocus","fixedOverflowWidgets","quickSuggestions","quickSuggestionsDelay","fontSize","fontFamily","fontWeight","roundedSelection","selectOnLineNumbers","automaticLayout","scrollBeyondLastLine","occurrencesHighlight","autoIndent","dragAndDrop","formatOnType","formatOnPaste","suggestFontSize","suggestLineHeight","suggest","localityBonus","insertMode","parameterHints","cycle","mouseWheelZoom","scrollbar","vertical","horizontal","theme","mouseWheelListener","changeEditorFontSize","deltaY","onDidChangeConfiguration","hasChanged","EditorOption","fontInfo","onDidChangeCursorPosition","onDidChangeModel","removeEventListener","addEventListener","passive","setActiveAfterExternalModelSet","registerHoverProvider","registerCompletionItemProvider","registerCodeActionProvider","registerReferenceProvider","registerSignatureHelpProvider","onMouseDown","MouseTargetType","GUTTER_GLYPH_MARGIN","GUTTER_LINE_NUMBERS","isAfterLines","onMarginMouseDown","remeasureFonts","addActions","onDidType","insertEndOfComment","newLine","newColumn","setPosition","getPosition","prevLine","getLineContent","trimRight","endsWith","getLineCount","spacesAtBeginningOfLine","trimLeft","fontSizePx","getTime","editorfs","getOptions","viewModeController","saveFontSize","factor","documentElement","setProperty","dynamic","newEditorFs","setFontSize","addAction","keybindings","KeyMod","CtrlCmd","KeyCode","KEY_K","precondition","keybindingContext","contextMenuGroupId","contextMenuOrder","run","ed","getAction","Enter","getActionManager","isWholeLine","overviewRuler","darkColor","OverviewRulerLane","Left","executeActionActive","sqlStatement","getSQLSTatementsAtSelection","classname","zIndex","setActive","showHelper","autoFormatTriggerCharacters","registerDocumentFormattingEditProvider","registerOnTypeFormattingEditProvider","format","tokenlist","lastNonSpaceToken","indentLevel","curlyBracesOpenAtLines","indentLevelAtSwitchStatements","switchHappend","lastTokenWasNewLine","roundBracketsOpen","replaceBetween","insertSpaces","deleteSpaces","openedAtLine","repeat","nextToken1","nextToken2","lastToken1","lastToken2","isBinaryOperator","lastTokenIsOperator","nextTokenIsOperator","getNextNonSpaceToken","beginNextLine","token2","currentIndentation","il","correctIndentation","lowerGeneric","lowerBelongsToGenericExpression","greaterGeneric","greaterBelongsToGenericExpression","tokenBefore","spaces","deleteOverlappingRanges","currentIndex","numberOfSpaces","WorkerSim","initsql","initSqlJs","locateFile","scriptDirectory","SQL1","SQL","createDb","worker","postMessageToClient","buff","config","ready","results","exec","row","postMessage","finished","databaseDirectoryEntries","queryId","querySuccessCallbacksMap","queryErrorCallbackMap","queries","callbackAfterInitializing","callbackAfterRetrievingStructure","getWaitOverlay","terminate","javaOnlineDir","jo_doc","Worker","querySuccessCallback","queryErrorCallback","delete","queryCount","execQuery","setProgress","shift","executeQuery","retrieveDatabaseStructure","sql","params","getJSON","entries","sql1","result1","parseDatabaseStructure","tableNameToStructureMap","tableName","tableSQL","tableStructure","completeSQL","columnArray","foreignKeyList","columnArray1","dflt_value","columnStructure","typeLengths","fkInfo","referencesRawData","sqliteMagicBytes","MaxRowsPerInsert","sqlCleaned","cleanCreateTableStatement","cleanInsertStatement","statementHeader","lines","vline","cleanValue","cleanColumnDef","cleanForeignKeyInfo","pkc","uk","fkiString","onDelete","onUpdate","unzipURL","fetch","importFromText","unzipFile","reader","FileReader","onload","readAsText","zip","ZipReader","HttpReader","unzipIntern","BlobReader","getEntries","filename","getData","TextWriter","onprogress","lexOutput","createTableNodes","insertNodes","tableModifyingNodes","tmn","findCreateTableNode","autoIncrementColumn","pcn","findCreateTableColumnNode","mci","mcn","fk","indexIdentifier","makeDatabase","tableNode","statementCleaner","clean","dbTool","initializeWorker","binDump","ld","loadFromFile","ab","getDumpType","readAsArrayBuffer","prompt","isBlob","blob","Blob","msSaveOrOpenBlob","createEvent","download","href","URL","createObjectURL","dataset","downloadurl","initEvent","dispatchEvent","downloadFile","$templatelist","fetchTemplateList","templatelist","tle","$tle","ownerName","$templateName","$dropZone","evt","originalEvent","dataTransfer","dropEffect","importFile","$dumpFileInput","createMode","hasClass","workspaceData","createWorkspace","$template","template_database_id","code","tIndex","otherDatabaseId","template_id","newTemplateId","sendCreateWorkspace","accordionElement","renderSettingsButton","importer","isDatabase","dbUncompressed","currentSubmenu","openSubmenusOnMousemove","mainMenu","switchTheme","saveToFile","initMenu","setTheme","menu","initMenuitemCallbacks","opensubmenu","accordion","flexWeight","newButtonClass","buttonNewTitle","defaultIconClass","withDeleteButton","withFolders","enableDrag","acceptDropKinds","dontSortElements","addPanel","$newFolderAction","addFolder","newElement","newFolderCallback","scrollIntoView","$collapseAllAction","collapseAll","slideUp","$captionElement","$listElement","fixed","grow","$buttonNew","pathArray","selectedElement","getSelectedElement","name1","path1","isFolder1","name2","path2","isFolder2","cmp","compareWithPath","insertIndex","getElementIndex","$elements","elementAtIndex","before","renderElement","insertElement","renameElement","$accordionDiv","getCurrentlySelectedPath","after","newFilesElementCallback","$htmlSecondLine","insertAfter","selectCallback","$listOuter","$ce","$li","targetGrow","parts","toggleClass","currentlyDraggedElementKind","element1","currentlyDraggedElement","moveElement","expanded","aName","sortName","bName","cssClass","expandedCollapsed","pathHtml","addElementActionCallback","$elementAction","$filedragpart","effectAllowed","dropElementCallback","pathIsCollapsed","slideDown","pressTimer","contextmenuHandler","contextMenuItems","renameCallback","newDatabaseElementCallback","contextMenuProvider","cmi","pageX","pageY","clearTimeout","getChildElements","deleteCallback","elementToMove","destinationFolder","destinationPath","movedElements","sourcePath","oldPathLength","moveCallback","folder","pointPos","elementWithText","elementToReplace","renameDoneCallback","selectionRange","$input","setSelectionRange","newValue","makeEditable","newText","invokeCallback","ae1","findElement","pathString","elPath","ps","Accordion","$html","panel","renderOuterHtmlElements","DistributeToStudentsDialog","classes","studentCount","$studentList","student","students","$studentLine","$studentClass","$studentName","rufname","familienname","$dialogMain","distributeWorkspace","sendDistributeWorkspace","$projectexplorerDiv","programPointerModule","programPointerDecoration","lastOpenModule","initFilelistPanel","initWorkspacelistPanel","successfulNetworkCommunicationCallback","sendCreateFile","newName","callbackIfSuccessful","sendDeleteWorkspaceOrFile","is_teacher","$homeworkButtonDiv","$newWorkspaceAction","removeWorkspace","enableNewButton","databaseExplorer","getResultsetPresenter","dest","droppedElement","dropEffekt","$homeAction","onHomeButtonClicked","hideHomeworkTab","workspaceAccordionElement","cmiList","teacherExplorer","classPanel","restoreOwnWorkspaces","setCaption","moduleList","errorCount","errorCountS","setTextAfterFilename","initializeDatabaseTool","fetchDatabase","currentWorkspace_id","renderFiles","nonSystemModules","notifier","refreshAfterRetrievingDBStructure","getHistoryViewer","clearAndShowStatements","cem","editorState","saveViewState","hideHomeworkRevisionButton","restoreViewState","setCurrentlyEditedModule","showProgramPointer","programPointerPosition","revealRangeInCenterIfOutsideViewport","Center","beforeContentClassName","findModuleByFile","$rightDiv","isWholePage","$tabs","$headings","rightdiv_width","$wholeWindow","Sliders","md","clientX","dx","moveLeftPanel","clientY","dy","moveBottomDiv","moveRightDiv","sliderknobLeft","stopImmediatePropagation","sliderknobRight","$editor","mewidth","layout","meheight","$leftPanel","classData","studentPanel","initStudentPanel","initClassPanel","renderClasses","ws_userId","ownWorkspaces","currentOwnWorkspace","restoreWorkspaces","setExplorerColor","showHomeworkTab","attachToWorkspaces","renderWorkspaces","ea","renderStudents","userDataList","ud","classDataList","cd","ThemeManager","themes","initThemes","internalSwitchTheme","monacoTheme","cssColors","UserMenu","$loginSpinner","loginHappened","username","password","viewModes","classDiagram","waitForGUICallback","initTeacherExplorer","classdata","initializeTimer","setFixed","initViewMode","initializeNotifierClient","startupComplete","errorMessage","resultsetPresenter","removePanels","ViewModeController","$buttonsContainer","$buttonMap","highContrast","editorHasFullWidth","$buttonEditorFullscreen","$buttonPresentationMode","$buttonMonitorMode","am","actionManager","registerAction","toggleEditorFullwidth","setMode","saveSettings","otherMode","viewMode","viewModeChosen","themeManager","getChosenViewMode","userDataDirty","monitor","presentation","SemicolonAngel","semicolonPositions","isThereAgain","oldEvidence","firstSeenMs","currentlyEditedModule","cursorLine","isCurrentModule","editOperations","abs","setSelection","collapsedTables","dbstructure","$table","renderTable","isCollapsed","showTable","$columns","image","referencesHtml","autoincrement","$column","$treeSwitch","$columnList","parents","ProgramControlButtons","$buttonStart","$buttonRollback","isActive","executeSelectedStatements","rollback","paginationSize","writeQueryListeners","showResultsBusy","showResultPending","$paginationDiv","$arrowLeft","$infoDiv","$arrowRight","paginationFrom","floor","showResults","activateButtons","paginationAll","min","listener","fetchSelectedStatements","hasDDLStatements","some","isDDLStatement","hasWriteStatements","isWriteStatement","executeDDLWriteStatementsEmbedded","executeDDLWriteStatementsInOnlineIDE","executeStatements","sucessfullyExecutedModifyingStatements","getDatabaseExplorer","refresh","notify","getNewStatements","new_statements","firstStatementIndex","executeNewStatements","AddDatabaseStatements","appendStatements","modifyingStatements","resetDatabase","fromIndex","executeStatementsString","successfullyExecutedModifyingStatements","showErrors","callback1","laterSelectExists","isSelectStatement","presentResultsIntern","minimapColors","errorlevel","$runtimeErrorsTab","$runtimeErrorsTabHeading","showErrorDecorations","$errorLine","$sqlDiv","colorize","$messageDiv","$resultTabheading","$resultHeader","headerDiv","$bodyDiv","waitFunction","$header","rows","$row","cell","monacoEditor","StatementDelimiter","isOpen","isPolling","counter","isLongPolling","longPollCounter","databaseVersion","onOpen","startLongPolling","rollbackLocal","callbackIfTooFewStatements","callbackIfDone","doRefreshDatabaseExplorer","poll","getNewStatementsHttp","rollbackToVersion","longPoll","resp","timeout","WaitOverlay","$waitDiv","visible","fadeOutPending","$bitteWartenText","$bitteWartenProgress","$historyPanel","panelEntries","panelEntry","makePanelEntry","makeLastButtonActive","$rollbackButton","$index","$text","$copybutton","$rollbackbutton","rollbackEmbedded","rollbackLocalNeeded","writeQueryManager","initialTemplateDump","initialStatements","writtenStatements","historyViewer","rightDiv","compiler","semicolonAngel","matchMedia","matches","login","initSliders","checkStartupComplete","startTimer","sendBeacon","timerHandle","isDirty","compile","renderErrorCount","require","paths","availableLanguages","ignoreDuplicateModules","initEditor"],"mappings":"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","file":"sql-ide.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import { LoginRequest, PerformanceData } from \"./Data.js\";\r\n\r\n// export var credentials: { username: string, password: string } = { username: null, password: null };\r\n\r\nexport class PerformanceCollector {\r\n    static performanceData: PerformanceData[] = [];\r\n    static performanceDataCount: number = 0;\r\n    static lastTimeSent: number = performance.now();\r\n\r\n    static registerPerformanceEntry(url: string, startTime: number) {\r\n        let pe: PerformanceData = PerformanceCollector.performanceData.find(pe => pe.url == url);\r\n        if (pe == null) {\r\n            pe = { count: 0, sumTime: 0, url: url };\r\n            PerformanceCollector.performanceData.push(pe);\r\n        }\r\n        pe.count++;\r\n        let dt = Math.round(performance.now() - startTime);\r\n        pe.sumTime += dt;\r\n        PerformanceCollector.performanceDataCount++;\r\n        // console.log(\"Performance entry for path \" + pe.url + \": \" + dt + \" ms, aggregated: \" + pe.sumTime + \" for \" + pe.count + \" requests.\");\r\n    }\r\n\r\n    static sendDataToServer() {\r\n        if (performance.now() - PerformanceCollector.lastTimeSent > 3 * 60 * 1000) {\r\n            let request = {\r\n                data: PerformanceCollector.performanceData\r\n            }\r\n\r\n            PerformanceCollector.performanceData = [];\r\n            PerformanceCollector.performanceDataCount = 0;\r\n            PerformanceCollector.lastTimeSent = performance.now();\r\n\r\n            ajax(\"collectPerformanceData\", request, () => { })\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport function ajax(url: string, request: any, successCallback: (response: any) => void,\r\n\r\n    errorCallback?: (message: string) => void) {\r\n\r\n    showNetworkBusy(true);\r\n    let time = performance.now();\r\n\r\n    $.ajax({\r\n        type: 'POST',\r\n        async: true,\r\n        data: JSON.stringify(request),\r\n        contentType: 'application/json',\r\n        url: \"servlet/\" + url,\r\n        success: function (response: any) {\r\n\r\n            PerformanceCollector.registerPerformanceEntry(url, time);\r\n\r\n            showNetworkBusy(false);\r\n            if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n                let error = \"Fehler bei der Bearbeitung der Anfrage\"\r\n                if (response.message != null) error = response.message;\r\n\r\n                if (error == \"Not logged in\") {\r\n                    // setTimeout(() => newLogin(url, request, successCallback, errorCallback), 10000);\r\n                    // location.reload();\r\n                }\r\n\r\n                if (errorCallback) errorCallback(error);\r\n            } else {\r\n                successCallback(response);\r\n            }\r\n            return;\r\n\r\n        },\r\n        error: function (jqXHR, message) {\r\n            showNetworkBusy(false);\r\n            if (errorCallback) {\r\n                let statusText = \"Server nicht erreichbar.\"\r\n                if (jqXHR.status != 0) {\r\n                    statusText = \"\" + jqXHR.status\r\n                }\r\n                errorCallback(message + \": \" + statusText);\r\n                return;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function showNetworkBusy(busy: boolean) {\r\n    if (busy) {\r\n        jQuery('.jo_network-busy').css('visibility','visible');\r\n    } else {\r\n        jQuery('.jo_network-busy').css('visibility','hidden');\r\n    }\r\n}\r\n\r\n\r\n","import { DatabaseData } from \"../communication/Data.js\";\r\n\r\nexport class WDatabase {\r\n\r\n    id: number;\r\n    name: string;\r\n\r\n    templateDump: Uint8Array;\r\n    based_on_template_id: number;\r\n    templateName: string;\r\n\r\n    statements: string[];\r\n    published_to: number;\r\n    version: number;\r\n    description: string;\r\n    owner_id: number;\r\n\r\n    static fromDatabaseData(data: DatabaseData, version: number): WDatabase {\r\n\r\n        let db = new WDatabase();\r\n\r\n        db.id = data.id;\r\n        db.name = data.name;\r\n        db.statements = data.statements;\r\n        db.published_to = data.published_to;\r\n        db.version = version;\r\n        db.description = data.description;\r\n        db.templateDump = null;\r\n        db.based_on_template_id = data.based_on_template_id;\r\n        db.owner_id = data.owner_id;\r\n        return db;\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n","export class CacheManager {\r\n    \r\n    fetchTemplateFromCache(databaseId: number, callback: (templateDump: Uint8Array) => void) {\r\n        if(databaseId == null){callback(null); return;}\r\n        let that = this;\r\n        if(!this.cacheAvailable()) callback(null);\r\n        this.getCache((cache) => {\r\n            cache.match(that.databaseIdToCacheIdentifier(databaseId)).then(\r\n                (value)=>{\r\n                    value.arrayBuffer().then((buffer) => callback(new Uint8Array(buffer)));\r\n                })\r\n                .catch(() => callback(null));\r\n        })        \r\n    }\r\n\r\n    saveTemplateToCache(databaseId: number, templateDump: Uint8Array) {\r\n        if(!this.cacheAvailable()) return;\r\n        let that = this;\r\n        this.getCache((cache) => {\r\n            cache.put(that.databaseIdToCacheIdentifier(databaseId), new Response(templateDump));\r\n        })        \r\n    }\r\n\r\n    cacheAvailable(): boolean {\r\n        return 'caches' in self;\r\n    }\r\n\r\n    getCache(callback: (cache: Cache) => void) {\r\n        caches.open('my-cache').then(callback);\r\n    }\r\n\r\n    databaseIdToCacheIdentifier(databaseId: number): string {\r\n        return \"/onlineIdeTemplateDb\" + databaseId;\r\n    }\r\n\r\n}","import { Main } from \"../main/Main.js\";\r\nimport { ajax } from \"./AjaxHelper.js\";\r\nimport { GetWebSocketTokenResponse } from \"./Data.js\";\r\nimport { NetworkManager } from \"./NetworkManager.js\";\r\n\r\ntype SubscriptionMessageFromClient = {\r\n    command: number,  // 1 == \"subscribe\", 2 == \"disconnect\"\r\n    // 3 == \"keepalive request\"\r\n    token?: string   // when \"subscribe\"\r\n}\r\n\r\ntype SubscriptionMessageFromServer = {\r\n    command: number // 1 == Acknoledge Connection, 2 == Notify, 3 == disconnect, 4 == keep alive response\r\n}\r\n\r\ntype NotifierState = \"connecting\" | \"connected\" | \"subscribed\" | \"disconnected\";\r\n\r\nexport class NotifierClient {\r\n\r\n    connection: WebSocket;\r\n    state: NotifierState;\r\n\r\n    constructor(private main: Main, private networkManager: NetworkManager){\r\n        this.connect();\r\n    }\r\n\r\n    connect() {\r\n        this.state = \"connecting\";\r\n\r\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\r\n\r\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/subscriptionwebsocket\";\r\n            this.connection = new WebSocket(url);\r\n\r\n            this.connection.onerror = (error: Event) => { this.onError(error); }\r\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\r\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\r\n\r\n            this.connection.onopen = (event: Event) => {\r\n                let request: SubscriptionMessageFromClient = {\r\n                    command: 1,   // \"subscribe\"\r\n                    token: response.token\r\n                }\r\n\r\n                this.state = \"connected\";\r\n                this.sendIntern(JSON.stringify(request));\r\n\r\n            }\r\n\r\n            let that = this;\r\n            setTimeout(() => {\r\n                if(this.state != \"subscribed\"){\r\n                    this.networkManager.forcedUpdateEvery = 1;\r\n                    this.networkManager.counterTillForcedUpdate = 1;\r\n                }\r\n            }, 7000);\r\n\r\n        });\r\n    }\r\n\r\n    disconnect(){\r\n        let request: SubscriptionMessageFromClient = {\r\n            command: 2   // \"disconnect\"\r\n        }\r\n\r\n        this.state = \"connected\";\r\n        this.sendIntern(JSON.stringify(request));\r\n\r\n    }\r\n\r\n    unsentMessages: string[] = [];\r\n    sendIntern(message: string) {\r\n\r\n        if (this.state != \"disconnected\") {\r\n            try {\r\n                this.connection.send(message);\r\n            } catch (exception) {\r\n                console.log(exception);\r\n            }\r\n        }\r\n    }\r\n\r\n    onClose(event: CloseEvent) {\r\n        this.state = \"disconnected\";\r\n    }\r\n\r\n    onMessage(event: MessageEvent) {\r\n\r\n        let response: SubscriptionMessageFromClient = JSON.parse(event.data);\r\n        if (response.command == undefined) return;\r\n\r\n        // 1 == Acknoledge Connection, 2 == Notify, 3 == disconnect, 4 == keep alive response\r\n        switch (response.command) {\r\n            case 1: // Acknoledge Connection\r\n                this.state = \"subscribed\";\r\n                break;\r\n            case 2: // Notify\r\n                this.networkManager.sendUpdates(() => {}, true);\r\n                break;\r\n            case 3: // disconnect\r\n                this.state = \"disconnected\";\r\n                break;\r\n            case 4: // keep alive response\r\n                break;\r\n        }\r\n    }\r\n\r\n    onError(error: Event) {\r\n        console.log(\"Fehler beim Notifier-Websocket\");\r\n    }\r\n\r\n}","import { Main } from \"../main/Main.js\";\r\nimport { ajax } from \"./AjaxHelper.js\";\r\nimport { WorkspaceData, FileData, SendUpdatesRequest, SendUpdatesResponse, CreateOrDeleteFileOrWorkspaceRequest, CRUDResponse, UpdateUserSettingsRequest, UpdateUserSettingsResponse, DuplicateWorkspaceRequest, DuplicateWorkspaceResponse, ClassData, DistributeWorkspaceRequest, DistributeWorkspaceResponse, GetDatabaseRequest, getDatabaseResponse, GetNewStatementsRequest, GetNewStatementsResponse, AddDatabaseStatementsRequest, AddDatabaseStatementsResponse, TemplateListEntry, GetTemplateListRequest, GetTemplateListResponse, CreateWorkspaceData, GetDatabaseSettingsResponse, GetDatabaseSettingsRequest, setDatabaseSecretRequest as SetDatabaseSecretRequest, SetDatabaseSecretResponse, SetPublishedToRequest, SetPublishedToResponse, GetTemplateRequest, RollbackRequest, RollbackResponse } from \"./Data.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { WDatabase } from \"../workspace/WDatabase.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { CacheManager } from \"./CacheManager.js\";\r\nimport { NotifierClient } from \"./NotifierClient.js\";\r\n\r\nexport class NetworkManager {\r\n\r\n    timerhandle: any;\r\n\r\n    ownUpdateFrequencyInSeconds: number = 20;\r\n    teacherUpdateFrequencyInSeconds: number = 5;\r\n\r\n    updateFrequencyInSeconds: number = 20;\r\n    forcedUpdateEvery: number = 4;\r\n    counterTillForcedUpdate: number = 2;\r\n    secondsTillNextUpdate: number = this.updateFrequencyInSeconds;\r\n    errorHappened: boolean = false;\r\n\r\n    interval: any;\r\n\r\n    notifierClient: NotifierClient;\r\n\r\n    constructor(private main: Main, private $updateTimerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initializeTimer() {\r\n\r\n        let that = this;\r\n        this.$updateTimerDiv.find('svg').attr('width', that.updateFrequencyInSeconds);\r\n\r\n        if (this.interval != null) clearInterval(this.interval);\r\n\r\n        this.interval = setInterval(() => {\r\n\r\n            if (that.main.user == null) return; // don't call server if no user is logged in\r\n\r\n            that.secondsTillNextUpdate--;\r\n\r\n            if (that.secondsTillNextUpdate < 0) {\r\n                that.secondsTillNextUpdate = that.updateFrequencyInSeconds;\r\n                this.counterTillForcedUpdate--;\r\n                let forceUpdate = this.counterTillForcedUpdate == 0;\r\n                if (forceUpdate) this.counterTillForcedUpdate = this.forcedUpdateEvery;\r\n                that.sendUpdates(() => { }, forceUpdate);\r\n            }\r\n\r\n            let $rect = this.$updateTimerDiv.find('.jo_updateTimerRect');\r\n\r\n            $rect.attr('width', that.secondsTillNextUpdate + \"px\");\r\n\r\n            if (that.errorHappened) {\r\n                $rect.css('fill', '#c00000');\r\n                this.$updateTimerDiv.attr('title', \"Fehler beim letzten Speichervorgang -> Werd's wieder versuchen\");\r\n            } else {\r\n                $rect.css('fill', '#008000');\r\n                this.$updateTimerDiv.attr('title', that.secondsTillNextUpdate + \" Sekunden bis zum nächsten Speichern\");\r\n            }\r\n\r\n        }, 1000);\r\n\r\n    }\r\n\r\n    initializeNotifierClient(){\r\n        this.notifierClient = new NotifierClient(this.main, this);\r\n    }\r\n\r\n    sendUpdates(callback?: () => void, sendIfNothingIsDirty: boolean = false) {\r\n\r\n        if (this.main.user == null) return;\r\n\r\n        this.main.projectExplorer.writeEditorTextToFile();\r\n\r\n        let userSettings = this.main.user.settings;\r\n\r\n        let wdList: WorkspaceData[] = [];\r\n        let fdList: FileData[] = [];\r\n\r\n        for (let ws of this.main.workspaceList) {\r\n\r\n            if (!ws.saved) {\r\n                wdList.push(ws.getWorkspaceData(false));\r\n                ws.saved = true;\r\n            }\r\n\r\n            for (let m of ws.moduleStore.getModules(false)) {\r\n                if (!m.file.saved) {\r\n                    m.file.text = m.getProgramTextFromMonacoModel();\r\n                    fdList.push(m.getFileData(ws));\r\n                    // console.log(\"Save file \" + m.file.name);\r\n                    m.file.saved = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        let request: SendUpdatesRequest = {\r\n            workspacesWithoutFiles: wdList,\r\n            files: fdList,\r\n            owner_id: this.main.workspacesOwnerId,\r\n            userId: this.main.user.id,\r\n            language: 1,\r\n            currentWorkspaceId: this.main.getCurrentWorkspace()?.id,\r\n            getModifiedWorkspaces: false\r\n        }\r\n\r\n        let that = this;\r\n        if (wdList.length > 0 || fdList.length > 0 || sendIfNothingIsDirty) {\r\n            ajax('sendUpdates', request, (response: SendUpdatesResponse) => {\r\n                that.errorHappened = !response.success;\r\n                if (!that.errorHappened) {\r\n\r\n                    that.updateWorkspaces(request, response);\r\n\r\n                    if (callback != null) {\r\n                        callback();\r\n                        return;\r\n                    }\r\n                }\r\n            }, () => {\r\n                that.errorHappened = true;\r\n            });\r\n        } else {\r\n            if (callback != null) {\r\n                callback();\r\n                return;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    sendCreateWorkspace(wd: CreateWorkspaceData, owner_id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            wd.id = Math.round(Math.random() * 10000000);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"workspace\",\r\n            data: wd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            wd.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n\r\n    getDatabaseSettings(workspace_id: number, callback: (response: GetDatabaseSettingsResponse) => void) {\r\n        let request: GetDatabaseSettingsRequest = {\r\n            workspaceId: workspace_id\r\n        };\r\n        ajax(\"getDatabaseSettings\", request, (response: GetDatabaseSettingsResponse) => {\r\n            callback(response);\r\n        }, (message) => { alert(message) })\r\n    }\r\n\r\n    setNewSecret(workspace_id: number, kind: string, callback: (secret: string) => void) {\r\n        let request: SetDatabaseSecretRequest = {\r\n            workspaceId: workspace_id,\r\n            secretKind: kind\r\n        };\r\n        ajax(\"setNewSecret\", request, (response: SetDatabaseSecretResponse) => {\r\n            callback(response.secret);\r\n        }, (message) => { alert(message) })\r\n    }\r\n\r\n    setNameAndPublishedTo(workspace_id: number, name: string, published_to: number, description: string, callback: () => void) {\r\n        let request: SetPublishedToRequest = {\r\n            workspaceId: workspace_id,\r\n            databaseName: name,\r\n            publishedTo: published_to,\r\n            description: description\r\n        };\r\n\r\n        ajax(\"setPublishedTo\", request, (response: SetPublishedToResponse) => {\r\n            callback();\r\n        }, (message) => { alert(message) })\r\n    }\r\n\r\n\r\n\r\n    sendCreateFile(m: Module, ws: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        let fd: FileData = m.getFileData(ws);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"file\",\r\n            data: fd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            m.file.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDuplicateWorkspace(ws: Workspace, callback: (error: string, workspaceData?: WorkspaceData) => void) {\r\n\r\n        let request: DuplicateWorkspaceRequest = {\r\n            workspace_id: ws.id,\r\n            language: 1\r\n        }\r\n\r\n        ajax(\"duplicateWorkspace\", request, (response: DuplicateWorkspaceResponse) => {\r\n            callback(response.message, response.workspace)\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDistributeWorkspace(ws: Workspace, klasse: ClassData, student_ids: number[], callback: (error: string) => void) {\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request: DistributeWorkspaceRequest = {\r\n                workspace_id: ws.id,\r\n                class_id: klasse?.id,\r\n                student_ids: student_ids,\r\n                language: 1\r\n            }\r\n\r\n            ajax(\"distributeWorkspace\", request, (response: DistributeWorkspaceResponse) => {\r\n                callback(response.message)\r\n            }, callback);\r\n\r\n        }, false);\r\n\r\n    }\r\n\r\n\r\n    sendDeleteWorkspaceOrFile(type: \"workspace\" | \"file\", id: number, callback: (error: string) => void) {\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"delete\",\r\n            entity: type,\r\n            id: id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            if (response.success) {\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendUpdateUserSettings(callback: (error: string) => void) {\r\n\r\n        let request: UpdateUserSettingsRequest = {\r\n            settings: this.main.user.settings,\r\n            userId: this.main.user.id,\r\n            current_workspace_id: this.main.getCurrentWorkspace()?.id\r\n        }\r\n\r\n        ajax(\"updateUserSettings\", request, (response: UpdateUserSettingsResponse) => {\r\n            if (response.success) {\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n\r\n    getNewStatements(workspace: Workspace, callback: (statements: string[], firstNewStatementIndex: number) => void) {\r\n        let request: GetNewStatementsRequest = {\r\n            workspaceId: workspace.id,\r\n            version_before: workspace.database.version\r\n        }\r\n\r\n        ajax(\"getNewStatements\", request, (response: GetNewStatementsResponse) => {\r\n            if (response.success) {\r\n                callback(response.newStatements, response.firstNewStatementIndex);\r\n            }\r\n        });\r\n    }\r\n\r\n    AddDatabaseStatements(workspace: Workspace, statements: string[], callback: (statements_before: string[], new_version: number) => void) {\r\n        let request: AddDatabaseStatementsRequest = {\r\n            workspaceId: workspace.id,\r\n            version_before: workspace.database.version,\r\n            statements: statements\r\n        }\r\n\r\n        ajax(\"addDatabaseStatements\", request, (response: AddDatabaseStatementsResponse) => {\r\n            if (response.success) {\r\n                callback(response.statements_before, response.new_version);\r\n            }\r\n        });\r\n    }\r\n\r\n    fetchDatabase(workspace: Workspace, callback: (error: string) => void) {\r\n\r\n        let cacheManager: CacheManager = new CacheManager();\r\n\r\n        let request: GetDatabaseRequest = {\r\n            workspaceId: workspace.id\r\n        }\r\n\r\n        ajax(\"getDatabase\", request, (response: getDatabaseResponse) => {\r\n            if (response.success) {\r\n\r\n                workspace.database = WDatabase.fromDatabaseData(response.database, response.version)\r\n                cacheManager.fetchTemplateFromCache(workspace.database.based_on_template_id, (templateDump: Uint8Array) => {\r\n\r\n                    if (templateDump != null) {\r\n                        try{\r\n                            // @ts-ignore\r\n                            workspace.database.templateDump = pako.inflate(templateDump);\r\n                        } catch(err){\r\n                            console.log(err);\r\n                            console.log(\"Dump seems not to be compressed...\");\r\n                            workspace.database.templateDump = templateDump;\r\n                        }\r\n                        callback(null);\r\n                        return;\r\n                    } else {\r\n                        if (workspace.database.based_on_template_id == null) {\r\n                            callback(null);\r\n                            return\r\n                        }\r\n                        this.fetchTemplate(workspace.id, (template) => {\r\n                            if (template != null) {\r\n                                cacheManager.saveTemplateToCache(workspace.database.based_on_template_id, template);\r\n                                // @ts-ignore\r\n                                workspace.database.templateDump = pako.inflate(template);\r\n                                callback(null);\r\n                                return;\r\n                            } else {\r\n                                callback(\"Konnte das Template nicht laden.\");\r\n                                return;\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    fetchTemplate(workspaceId: number, callback: (template: Uint8Array) => void) {\r\n        let request: GetTemplateRequest = {\r\n            workspaceId: workspaceId\r\n        }\r\n\r\n        $.ajax({\r\n            type: 'POST',\r\n            async: true,\r\n            data: JSON.stringify(request),\r\n            contentType: 'application/json',\r\n            url: \"servlet/getTemplate\",\r\n            xhrFields: { responseType: 'arraybuffer' },\r\n            success: function (response: any) {\r\n                callback(new Uint8Array(response));\r\n            },\r\n            error: function (jqXHR, message) {\r\n                alert(\"Konnte das Template nicht laden.\");\r\n                callback(null);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    fetchTemplateList(callback: (templateList: TemplateListEntry[]) => void) {\r\n        let request: GetTemplateListRequest = { user_id: this.main.user.id }\r\n\r\n        ajax(\"getTemplateList\", request, (response: GetTemplateListResponse) => {\r\n            if (response.success) {\r\n                callback(response.templateList);\r\n            } else {\r\n                callback([]);\r\n            }\r\n        }, (message) => {\r\n            alert(message);\r\n            callback([]);\r\n        })\r\n\r\n    }\r\n\r\n    updateWorkspaces(sendUpdatesRequest: SendUpdatesRequest, sendUpdatesResponse: SendUpdatesResponse) {\r\n\r\n        let idToRemoteWorkspaceDataMap: Map<number, WorkspaceData> = new Map();\r\n\r\n        let fileIdsSended = [];\r\n        sendUpdatesRequest.files.forEach(file => fileIdsSended.push(file.id));\r\n\r\n        sendUpdatesResponse.workspaces.workspaces.forEach(wd => idToRemoteWorkspaceDataMap.set(wd.id, wd));\r\n\r\n        let newWorkspaceNames: string[] = [];\r\n\r\n        for (let remoteWorkspace of sendUpdatesResponse.workspaces.workspaces) {\r\n\r\n            let localWorkspaces = this.main.workspaceList.filter(ws => ws.id == remoteWorkspace.id);\r\n\r\n            // Did student get a workspace from his/her teacher?\r\n            if (localWorkspaces.length == 0) {\r\n                newWorkspaceNames.push(remoteWorkspace.name);\r\n                this.createNewWorkspaceFromWorkspaceData(remoteWorkspace);\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        for (let workspace of this.main.workspaceList) {\r\n            let remoteWorkspace: WorkspaceData = idToRemoteWorkspaceDataMap.get(workspace.id);\r\n            if (remoteWorkspace != null) {\r\n                let idToRemoteFileDataMap: Map<number, FileData> = new Map();\r\n                remoteWorkspace.files.forEach(fd => idToRemoteFileDataMap.set(fd.id, fd));\r\n\r\n                let idToModuleMap: Map<number, Module> = new Map();\r\n                // update/delete files if necessary\r\n                for (let module of workspace.moduleStore.getModules(false)) {\r\n                    let fileId = module.file.id;\r\n                    idToModuleMap.set(fileId, module);\r\n                    let remoteFileData = idToRemoteFileDataMap.get(fileId);\r\n                    if (remoteFileData == null) {\r\n                        this.main.projectExplorer.fileListPanel.removeElement(module);\r\n                        this.main.currentWorkspace.moduleStore.removeModule(module);\r\n                    } else if (remoteFileData.version > module.file.version) {\r\n                        if (fileIdsSended.indexOf(fileId) < 0 || remoteFileData.forceUpdate) {\r\n                            module.file.text = remoteFileData.text;\r\n                            module.model.setValue(remoteFileData.text);\r\n\r\n                            module.file.saved = true;\r\n                            module.lastSavedVersionId = module.model.getAlternativeVersionId()\r\n                        }\r\n                        module.file.version = remoteFileData.version;\r\n                    }\r\n                }\r\n\r\n                // add files if necessary\r\n                for (let remoteFile of remoteWorkspace.files) {\r\n                    if (idToModuleMap.get(remoteFile.id) == null) {\r\n                        this.createFile(workspace, remoteFile);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (newWorkspaceNames.length > 0) {\r\n            let message: string = newWorkspaceNames.length > 1 ? \"Folgende Workspaces hat Deine Lehrkraft Dir gesendet: \" : \"Folgenden Workspace hat Deine Lehrkraft Dir gesendet: \";\r\n            message += newWorkspaceNames.join(\", \");\r\n            alert(message);\r\n        }\r\n\r\n        this.main.projectExplorer.workspaceListPanel.sortElements();\r\n        this.main.projectExplorer.fileListPanel.sortElements();\r\n\r\n    }\r\n\r\n    public createNewWorkspaceFromWorkspaceData(remoteWorkspace: WorkspaceData, withSort: boolean = false) {\r\n        let w = this.main.createNewWorkspace(remoteWorkspace.name, remoteWorkspace.owner_id);\r\n        w.id = remoteWorkspace.id;\r\n        w.sql_history = \"\";\r\n        w.path = remoteWorkspace.path;\r\n        w.isFolder = remoteWorkspace.isFolder;\r\n\r\n        this.main.workspaceList.push(w);\r\n        let path = remoteWorkspace.path.split(\"/\");\r\n        if (path.length == 1 && path[0] == \"\") path = [];\r\n\r\n        let panelElement: AccordionElement = {\r\n            name: remoteWorkspace.name,\r\n            externalElement: w,\r\n            iconClass: \"workspace\",\r\n            isFolder: remoteWorkspace.isFolder,\r\n            path: path\r\n        };\r\n\r\n        this.main.projectExplorer.workspaceListPanel.addElement(panelElement, true);\r\n        w.panelElement = panelElement;\r\n\r\n        for (let fileData of remoteWorkspace.files) {\r\n            this.createFile(w, fileData);\r\n        }\r\n\r\n        if (withSort) {\r\n            this.main.projectExplorer.workspaceListPanel.sortElements();\r\n            this.main.projectExplorer.fileListPanel.sortElements();\r\n        }\r\n    }\r\n\r\n    createFile(workspace: Workspace, remoteFile: FileData) {\r\n        let ae: any = null; //AccordionElement\r\n        if (workspace == this.main.currentWorkspace) {\r\n            ae = {\r\n                name: remoteFile.name,\r\n                externalElement: null\r\n            }\r\n\r\n            this.main.projectExplorer.fileListPanel.addElement(ae, true);\r\n        }\r\n\r\n        let f: any = { // File\r\n            id: remoteFile.id,\r\n            name: remoteFile.name,\r\n            dirty: false,\r\n            saved: true,\r\n            text: remoteFile.text,\r\n            version: remoteFile.version,\r\n            identical_to_repository_version: true,\r\n            workspace_id: workspace.id,\r\n            panelElement: ae\r\n        };\r\n        let m = this.main.projectExplorer.getNewModule(f); //new Module(f, this.main);\r\n        if (ae != null) ae.externalElement = m;\r\n        let modulStore = workspace.moduleStore;\r\n        modulStore.putModule(m);\r\n\r\n    }\r\n\r\n    rollback(callback: (error: string, rollbackLocalNeeded: boolean) => void) {\r\n        let workspace = this.main.currentWorkspace;\r\n        let request: RollbackRequest = { workspaceId: workspace.id, version: workspace.database.version }\r\n\r\n        ajax(\"rollback\", request, (response: RollbackResponse) => {\r\n            if (response.success) {\r\n                \r\n                callback(null, workspace.database.version > response.new_version);\r\n            } else {\r\n                alert(response.message);\r\n                callback(response.message, false);\r\n            }\r\n        }, (message) => {\r\n            alert(message);\r\n            callback(message, false);\r\n        })\r\n\r\n    }\r\n\r\n\r\n}","export enum TokenType {\r\n    identifier,\r\n    // constants\r\n    integerConstant,\r\n    floatingPointConstant,\r\n    booleanConstant,\r\n    stringConstant,\r\n    charConstant,\r\n    true,\r\n    false,\r\n    // keywords\r\n    keywordRename,\r\n    keywordDistinct,\r\n    keywordTo,\r\n    keywordAlter,\r\n    keywordCommit,\r\n    keywordAdd,\r\n    keywordDelete,\r\n    keywordSelect,\r\n    keywordInsert,\r\n    keywordInto,\r\n    keywordValues,\r\n    keywordUpdate,\r\n    keywordSet,\r\n    keywordNo,\r\n    keywordUse,\r\n    keywordCreate,\r\n    keywordReferences,\r\n    keywordPrimary,\r\n    keywordForeign,\r\n    keywordTable,\r\n    keywordTables,\r\n    keywordColumn,\r\n    keywordDrop,\r\n    keywordUnique,\r\n    keywordKey,\r\n    keywordIndex,\r\n    keywordConstraint,\r\n    keywordModify,\r\n    keywordCascade,\r\n    keywordRestrict,\r\n    keywordAction,\r\n    keywordAutoincrement,\r\n    keywordFrom,\r\n    keywordWhere,\r\n    keywordGroup,\r\n    keywordBy,\r\n    keywordHaving,\r\n    keywordOrder,\r\n    keywordAscending,\r\n    keywordDescending,\r\n    keywordNulls,\r\n    keywordFirst,\r\n    keywordLast,\r\n    keywordIs,\r\n    keywordNull,\r\n    keywordDatabase,\r\n\r\n    keywordOr,\r\n    keywordAnd,\r\n    keywordNot,\r\n\r\n    keywordJoin,\r\n    keywordNatural,\r\n    keywordLeft,\r\n    keywordCross,\r\n    keywordInner,\r\n    keywordOuter,\r\n    keywordOn,\r\n    keywordAs,\r\n    keywordLimit,\r\n    keywordOffset,\r\n    keywordIn,\r\n    keywordNotIn,\r\n    keywordLike,\r\n    keywordCollate,\r\n    keywordDefault,\r\n    keywordComment,\r\n    keywordEngine,\r\n    keywordCharset,\r\n    keywordCharacter,\r\n    \r\n    keywordStart,\r\n    keywordTransaction,\r\n    keywordIf,\r\n    keywordExists,\r\n\r\n    keywordLock,\r\n    keywordUnlock,\r\n    keywordWrite,\r\n    keywordRead,\r\n\r\n    // brackets\r\n    leftBracket, // ()\r\n    rightBracket,\r\n    leftSquareBracket, // []\r\n    rightSquareBracket,\r\n    leftCurlyBracket, // {}\r\n    rightCurlyBracket,\r\n    leftRightSquareBracket, // []\r\n    \r\n    // binary operators\r\n    dot, //.\r\n    modulo,\r\n    minus, plus, multiplication, division,\r\n    singleQuote, doubleQuote, // ', \"\r\n    identifierQuote,\r\n    lower, greater, lowerOrEqual, greaterOrEqual, \r\n    concatenation,    \r\n    equal,\r\n    notEqual,\r\n\r\n    // semicolon\r\n    semicolon, // ;\r\n\r\n    colon, // :\r\n\r\n    // comma\r\n    comma, // ,\r\n\r\n    // backslash\r\n    backslash,\r\n\r\n    // |\r\n    pipe,\r\n\r\n    // @\r\n    at,\r\n\r\n    // #\r\n    hash,\r\n\r\n    // whitespace\r\n    space,\r\n\r\n    tab,\r\n\r\n    // newline\r\n    newline,\r\n\r\n    // line feed\r\n    linefeed,\r\n\r\n    // only lexer-internal\r\n    identifierChar,  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    comment,\r\n\r\n    endofSourcecode, // will be generated after sourcecode end\r\n    \r\n    // Program statement types:\r\n    \r\n    // additional AST node types\r\n    constantNode,\r\n    callMethod,\r\n    unaryOp,\r\n    binaryOp,\r\n    table,\r\n    subquery,\r\n    list,\r\n    column,\r\n    columnDef,\r\n    allColumns, // *\r\n    isNull,\r\n    isNot, // used by lexer to lex \"is not null\" into one token\r\n    isNotNull,\r\n    omittedeStatement\r\n}\r\n\r\nexport var TokenTypeReadable: {[tt: number]: string} = {\r\n    [TokenType.identifier]: \"ein Bezeichner\",\r\n    // constants\r\n    [TokenType.integerConstant]: \"eine Integer-Konstante\",\r\n    [TokenType.floatingPointConstant]: \"eine Fließkomma-Konstante\",\r\n    [TokenType.booleanConstant]: \"eine boolesche Konstante\",\r\n    [TokenType.stringConstant]: \"eine Zeichenketten-Konstante\",\r\n    [TokenType.charConstant]: \"eine char-Konstante\",\r\n    [TokenType.true]: \"true\",\r\n    [TokenType.false]: \"false\",\r\n    // keywords\r\n    [TokenType.keywordRename]: \"rename\",\r\n    [TokenType.keywordDistinct]: \"distinct\",\r\n    [TokenType.keywordTo]: \"to\",\r\n    [TokenType.keywordAlter]: \"alter\",\r\n    [TokenType.keywordCommit]: \"commit\",\r\n    [TokenType.keywordAdd]: \"add\",\r\n    [TokenType.keywordDelete]: \"delete\",\r\n    [TokenType.keywordSelect]: \"select\",\r\n    [TokenType.keywordInsert]: \"insert\",\r\n    [TokenType.keywordInto]: \"into\",\r\n    [TokenType.keywordValues]: \"values\",\r\n    [TokenType.keywordUpdate]: \"update\",\r\n    [TokenType.keywordSet]: \"set\",\r\n    [TokenType.keywordNo]: \"no\",\r\n    [TokenType.keywordUse]: \"use\",\r\n    [TokenType.keywordCreate]: \"create\",\r\n    [TokenType.keywordReferences]: \"references\",\r\n    [TokenType.keywordPrimary]: \"primary\",\r\n    [TokenType.keywordForeign]: \"foreign\",\r\n    [TokenType.keywordTable]: \"table\",\r\n    [TokenType.keywordTables]: \"tables\",\r\n    [TokenType.keywordColumn]: \"column\",\r\n    [TokenType.keywordDrop]: \"drop\",\r\n    [TokenType.keywordUnique]: \"unique\",\r\n    [TokenType.keywordKey]: \"key\",\r\n    [TokenType.keywordIndex]: \"index\",\r\n    [TokenType.keywordConstraint]: \"constraint\",\r\n    [TokenType.keywordModify]: \"modify\",\r\n    [TokenType.keywordCascade]: \"cascade\",\r\n    [TokenType.keywordRestrict]: \"restrict\",\r\n    [TokenType.keywordAction]: \"action\",\r\n    [TokenType.keywordAutoincrement]: \"autoincrement\",\r\n    [TokenType.keywordFrom]: \"from\",\r\n    [TokenType.keywordWhere]: \"where\",\r\n    [TokenType.keywordGroup]: \"group\",\r\n    [TokenType.keywordBy]: \"by\",\r\n    [TokenType.keywordHaving]: \"having\",\r\n    [TokenType.keywordOrder]: \"order\",\r\n    [TokenType.keywordAscending]: \"ascending\",\r\n    [TokenType.keywordDescending]: \"descending\",\r\n    [TokenType.keywordNulls]: \"nulls\",\r\n    [TokenType.keywordFirst]: \"first\",\r\n    [TokenType.keywordLast]: \"last\",\r\n    [TokenType.keywordIs]: \"is\",\r\n    [TokenType.keywordNull]: \"null\",\r\n    [TokenType.keywordDatabase]: \"database\",\r\n\r\n\r\n    [TokenType.keywordAnd]: \"and\",\r\n    [TokenType.keywordOr]: \"or\",\r\n    [TokenType.keywordNot]: \"not\",\r\n\r\n    [TokenType.keywordJoin]: \"join\",\r\n    [TokenType.keywordNatural]: \"natural\",\r\n    [TokenType.keywordLeft]: \"left\",\r\n    [TokenType.keywordCross]: \"cross\",\r\n    [TokenType.keywordInner]: \"inner\",\r\n    [TokenType.keywordOuter]: \"outer\",\r\n    [TokenType.keywordOn]: \"on\",\r\n    [TokenType.keywordAs]: \"as\",\r\n    [TokenType.keywordLimit]: \"limit\",\r\n    [TokenType.keywordOffset]: \"offset\",\r\n    [TokenType.keywordIn]: \"in\",\r\n    [TokenType.keywordNotIn]: \"not in\",\r\n    [TokenType.keywordLike]: \"like\",\r\n    [TokenType.keywordCollate]: \"collate\",\r\n    [TokenType.keywordDefault]: \"default\",\r\n    [TokenType.keywordComment]: \"comment\",\r\n    [TokenType.keywordEngine]: \"engine\",\r\n    [TokenType.keywordCharset]: \"charset\",\r\n    [TokenType.keywordCharacter]: \"character\",\r\n    [TokenType.keywordStart]: \"start\",\r\n    [TokenType.keywordTransaction]: \"transaction\",\r\n    [TokenType.keywordIf]: \"if\",\r\n    [TokenType.keywordExists]: \"exists\",\r\n    [TokenType.keywordLock]: \"lock\",\r\n    [TokenType.keywordUnlock]: \"unlock\",\r\n    [TokenType.keywordWrite]: \"write\",\r\n    [TokenType.keywordRead]: \"read\",\r\n\r\n    // brackets\r\n    [TokenType.leftBracket]: \"(\", // ()\r\n    [TokenType.rightBracket]: \")\",\r\n    [TokenType.leftSquareBracket]: \"[\", // []\r\n    [TokenType.rightSquareBracket]: \"]\",\r\n    [TokenType.leftCurlyBracket]: \"{\", // {}\r\n    [TokenType.rightCurlyBracket]: \"}\",\r\n    [TokenType.leftRightSquareBracket]: \"[]\", \r\n    \r\n    // operators\r\n    [TokenType.dot]: \".\", //.\r\n    [TokenType.minus]: \"-\", \r\n    [TokenType.modulo]: \"%\", \r\n    [TokenType.plus]: \"+\", \r\n    [TokenType.multiplication]: \"*\", \r\n    [TokenType.division]: \"/\",\r\n    [TokenType.singleQuote]: \"'\", \r\n    [TokenType.doubleQuote]: \"\\\"\", // ']: \"\", \"\r\n    [TokenType.identifierQuote]: \"`\",\r\n    [TokenType.lower]: \"<\", \r\n    [TokenType.greater]: \">\",\r\n    [TokenType.equal]: \"=\", \r\n    [TokenType.lowerOrEqual]: \"<=\", \r\n    [TokenType.greaterOrEqual]: \">=\", \r\n    [TokenType.concatenation]: \"||\", \r\n    \r\n    // semicolon\r\n    [TokenType.semicolon]: \";\", // ;\r\n    [TokenType.colon]: \":\", // ;\r\n\r\n    // comma\r\n    [TokenType.comma]: \",\", \r\n\r\n    // backslash\r\n    [TokenType.backslash]: \"\\\\\",\r\n\r\n    // at\r\n    [TokenType.at]: \"@\",\r\n\r\n    // hash\r\n    [TokenType.hash]: \"#\",\r\n    \r\n    // pipe\r\n    [TokenType.pipe]: \"|\",\r\n\r\n    // whitespace\r\n    [TokenType.space]: \"ein Leerzeichen\",\r\n    [TokenType.tab]: \"ein Tabulatorzeichen\",\r\n\r\n    // newline\r\n    [TokenType.newline]: \"ein Zeilenumbruch\",\r\n\r\n    // only lexer-internal\r\n    [TokenType.identifierChar]: \"eines der Zeichen a..z, A..Z, _\",  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    [TokenType.comment]: \"ein Kommentar\",\r\n\r\n    [TokenType.endofSourcecode]: \"das Ende des Programmes\"\r\n\r\n}\r\n\r\nexport var specialCharList: {[keyword: string]:TokenType} = {\r\n    '(': TokenType.leftBracket, // ()\r\n    ')': TokenType.rightBracket,\r\n    '[': TokenType.leftSquareBracket, // []\r\n    ']': TokenType.rightSquareBracket,\r\n    '{': TokenType.leftCurlyBracket, // {}\r\n    '}': TokenType.rightCurlyBracket,\r\n    \r\n    // operators\r\n    '.': TokenType.dot, //.\r\n    ',': TokenType.comma, //.\r\n    '-': TokenType.minus,\r\n    '%': TokenType.modulo,\r\n    '+': TokenType.plus, \r\n    '*': TokenType.multiplication, \r\n    '/': TokenType.division,\r\n    '\\\\': TokenType.backslash,\r\n    '@': TokenType.at,\r\n    '#': TokenType.hash,\r\n    '|': TokenType.pipe,\r\n    '\\'': TokenType.singleQuote, \r\n    '\"': TokenType.doubleQuote, // ', \"\r\n    '`': TokenType.identifierQuote, // ', \"\r\n    \"<\": TokenType.lower,\r\n    \">\": TokenType.greater,\r\n    \"=\": TokenType.equal,\r\n    \"<>\": TokenType.notEqual,\r\n    \r\n    ';': TokenType.semicolon, // ;\r\n    ':': TokenType.colon, // ;\r\n\r\n    // whitespace\r\n    ' ': TokenType.space,\r\n    '\\t': TokenType.tab,\r\n\r\n    // newline\r\n    '\\n': TokenType.newline,\r\n    '\\r': TokenType.linefeed\r\n}\r\n\r\nexport var keywordList: {[keyword: string]:TokenType} = {\r\n    \"rename\": TokenType.keywordRename,\r\n    \"distinct\": TokenType.keywordDistinct,\r\n    \"to\": TokenType.keywordTo,\r\n    \"alter\": TokenType.keywordAlter,\r\n    \"commit\": TokenType.keywordCommit,\r\n    \"add\": TokenType.keywordAdd,\r\n    \"delete\": TokenType.keywordDelete,\r\n    \"select\": TokenType.keywordSelect,\r\n    \"insert\": TokenType.keywordInsert,\r\n    \"into\": TokenType.keywordInto,\r\n    \"values\": TokenType.keywordValues,\r\n    \"update\": TokenType.keywordUpdate,\r\n    \"set\": TokenType.keywordSet,\r\n    \"no\": TokenType.keywordNo,\r\n    \"use\": TokenType.keywordUse,\r\n    \"create\": TokenType.keywordCreate,\r\n    \"references\": TokenType.keywordReferences,\r\n    \"primary\": TokenType.keywordPrimary,\r\n    \"foreign\": TokenType.keywordForeign,\r\n    \"table\": TokenType.keywordTable,\r\n    \"tables\": TokenType.keywordTables,\r\n    \"column\": TokenType.keywordColumn,\r\n    \"drop\": TokenType.keywordDrop,\r\n    \"unique\": TokenType.keywordUnique,\r\n    \"key\": TokenType.keywordKey,\r\n    \"index\": TokenType.keywordIndex,\r\n    \"constraint\": TokenType.keywordConstraint,\r\n    \"modify\": TokenType.keywordModify,\r\n    \"cascade\": TokenType.keywordCascade,\r\n    \"restrict\": TokenType.keywordRestrict,\r\n    \"action\": TokenType.keywordAction,\r\n    \"autoincrement\": TokenType.keywordAutoincrement,\r\n    \"auto_increment\": TokenType.keywordAutoincrement,\r\n    \"from\": TokenType.keywordFrom,\r\n    \"where\": TokenType.keywordWhere,\r\n    \"true\": TokenType.true,\r\n    \"false\": TokenType.false,\r\n    \"group\": TokenType.keywordGroup,\r\n    \"by\": TokenType.keywordBy,\r\n    \"having\": TokenType.keywordHaving,\r\n    \"order\": TokenType.keywordOrder,\r\n    \"asc\": TokenType.keywordAscending,\r\n    \"desc\": TokenType.keywordDescending,\r\n    \"nulls\": TokenType.keywordNulls,\r\n    \"first\": TokenType.keywordFirst,\r\n    \"last\": TokenType.keywordLast,\r\n    \"is\": TokenType.keywordIs,\r\n    \"null\": TokenType.keywordNull,\r\n    \"database\": TokenType.keywordDatabase,\r\n\r\n    \"or\": TokenType.keywordOr,\r\n    \"and\": TokenType.keywordAnd,\r\n    \"not\": TokenType.keywordNot,\r\n\r\n    \"join\": TokenType.keywordJoin,\r\n    \"natural\": TokenType.keywordNatural,\r\n    \"left\": TokenType.keywordLeft,\r\n    \"cross\": TokenType.keywordCross,\r\n    \"inner\": TokenType.keywordInner,\r\n    \"outer\": TokenType.keywordOuter,\r\n    \"on\": TokenType.keywordOn,\r\n    \"as\": TokenType.keywordAs,\r\n    \"limit\": TokenType.keywordLimit,\r\n    \"offset\": TokenType.keywordOffset,\r\n    \"in\": TokenType.keywordIn,\r\n    \"not in\": TokenType.keywordNotIn,\r\n    \"like\": TokenType.keywordLike,\r\n    \"collate\": TokenType.keywordCollate,\r\n    \"default\": TokenType.keywordDefault,\r\n    \"comment\": TokenType.keywordComment,\r\n    \"engine\": TokenType.keywordEngine,\r\n    \"charset\": TokenType.keywordCharset,\r\n    \"character\": TokenType.keywordCharacter,\r\n    \"start\": TokenType.keywordStart,\r\n    \"transaction\": TokenType.keywordTransaction,\r\n    \"if\": TokenType.keywordIf,\r\n    \"exists\": TokenType.keywordExists,\r\n    \"lock\": TokenType.keywordLock,\r\n    \"unlock\": TokenType.keywordUnlock,\r\n    \"write\": TokenType.keywordWrite,\r\n    \"read\": TokenType.keywordRead\r\n\r\n\r\n};\r\n\r\nexport var EscapeSequenceList: {[keyword: string]:string} = {\r\n    \"n\": \"\\n\",\r\n    \"r\": \"\\r\",\r\n    \"t\": \"\\t\",\r\n    \"\\\"\": \"\\\"\",\r\n    \"'\": \"'\",\r\n    \"\\\\\": \"\\\\\"\r\n}\r\n\r\nexport type TextPosition = {\r\n    line: number,\r\n    column: number, \r\n    length: number\r\n}\r\n\r\nexport type TextPositionWithoutLength = {\r\n    line: number,\r\n    column: number\r\n}\r\n\r\nexport type Token = {\r\n    tt: TokenType,\r\n    value: string|number|boolean,\r\n    position: TextPosition,\r\n    commentBefore?: Token,\r\n    isDoubleQuotedIdentifier?: boolean\r\n}\r\n\r\nexport type TokenList = Token[];\r\n\r\nfunction tokenToString(t: Token){\r\n    return \"<div><span style='font-weight: bold'>\" + TokenType[t.tt] + \"</span>\" +\r\n            \"<span style='color: blue'> &nbsp;'\" + t.value + \"'</span> (l&nbsp;\" + t.position.line + \", c&nbsp;\" + t.position.column + \")</div>\";\r\n}\r\n \r\nexport function tokenListToString(tl: TokenList):string{\r\n    let s = \"\";\r\n    for(let t of tl){\r\n        s += tokenToString(t) + \"\\n\";\r\n    }\r\n    return s;\r\n}","import { TokenList, specialCharList, TokenType, Token, EscapeSequenceList, keywordList, TextPosition, TokenTypeReadable } from \"./Token.js\";\r\n\r\nenum LexerState {\r\n    number, identifier, stringConstant, characterConstant, multilineComment, EndoflineComment\r\n}\r\n\r\nvar endChar = \"►\"; // \\u10000\r\n\r\nexport type QuickFix = {\r\n    title: string,\r\n    editsProvider: (uri: monaco.Uri) => monaco.languages.WorkspaceTextEdit[]\r\n}\r\n\r\nexport type ErrorLevel = \"info\" | \"error\" | \"warning\";\r\n\r\nexport type Error = {\r\n    position: TextPosition,\r\n    text: string,\r\n    quickFix?: QuickFix,\r\n    level: ErrorLevel\r\n}\r\n\r\nexport class Lexer {\r\n\r\n    tokenList: TokenList;\r\n    nonSpaceLastTokenType: TokenType;\r\n    nonSpaceLastToken: Token;\r\n\r\n    errorList: Error[];\r\n    pos: number;\r\n    line: number;\r\n    column: number;\r\n\r\n    currentChar: string;\r\n    nextChar: string;\r\n\r\n    input: string;\r\n\r\n    spaceTokens: TokenType[] = [\r\n        TokenType.space, TokenType.tab, TokenType.newline\r\n    ];\r\n\r\n    bracketStack: TokenType[];\r\n    bracketError: string;\r\n    correspondingBracket: { [key: number]: TokenType } = {};\r\n\r\n    tokenTypesToMerge: { first: TokenType, second: TokenType, merged: TokenType }[] = [\r\n        { first: TokenType.keywordNotIn, second: TokenType.keywordIn, merged: TokenType.keywordNotIn },\r\n        { first: TokenType.keywordIs, second: TokenType.keywordNot, merged: TokenType.isNot },\r\n        { first: TokenType.isNot, second: TokenType.keywordNull, merged: TokenType.isNotNull },\r\n        { first: TokenType.keywordIs, second: TokenType.keywordNull, merged: TokenType.isNull },\r\n    ]\r\n\r\n    constructor() {\r\n        this.correspondingBracket[TokenType.leftBracket] = TokenType.rightBracket;\r\n        this.correspondingBracket[TokenType.leftCurlyBracket] = TokenType.rightCurlyBracket;\r\n        this.correspondingBracket[TokenType.leftSquareBracket] = TokenType.rightSquareBracket;\r\n        this.correspondingBracket[TokenType.rightBracket] = TokenType.leftBracket;\r\n        this.correspondingBracket[TokenType.rightCurlyBracket] = TokenType.leftCurlyBracket;\r\n        this.correspondingBracket[TokenType.rightSquareBracket] = TokenType.leftSquareBracket;\r\n    }\r\n\r\n    lex(input: string): { tokens: TokenList, errors: Error[], bracketError: string } {\r\n\r\n        this.input = input.replace(\"\\u00a0\", \" \");\r\n        this.tokenList = [];\r\n        this.errorList = [];\r\n        this.bracketError = null;\r\n        this.bracketStack = [];\r\n        this.pos = 0;\r\n        this.line = 1;\r\n        this.column = 1;\r\n        this.nonSpaceLastTokenType = null;\r\n        this.nonSpaceLastToken = null;\r\n\r\n\r\n        if (input.length == 0) {\r\n            return { tokens: this.tokenList, errors: this.errorList, bracketError: null };\r\n        }\r\n\r\n        this.currentChar = input.charAt(0);\r\n\r\n        this.nextChar = input.length > 1 ? input.charAt(1) : endChar;\r\n\r\n\r\n        while (this.currentChar != endChar) {\r\n            this.mainState();\r\n        }\r\n\r\n        if (this.bracketStack.length > 0) {\r\n            let bracketOpen = this.bracketStack.pop();\r\n            let bracketClosed = this.correspondingBracket[bracketOpen];\r\n\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[bracketClosed]);\r\n        }\r\n\r\n        return {\r\n            tokens: this.tokenList,\r\n            errors: this.errorList,\r\n            bracketError: this.bracketError\r\n        };\r\n\r\n    }\r\n\r\n    checkClosingBracket(tt: TokenType) {\r\n        if (this.bracketStack.length == 0) {\r\n            let bracketOpen = this.correspondingBracket[tt];\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[tt]);\r\n            return;\r\n        }\r\n        let openBracket = this.bracketStack.pop();\r\n        let correspondingBracket = this.correspondingBracket[openBracket];\r\n        if (tt != correspondingBracket) {\r\n            this.setBracketError(TokenTypeReadable[openBracket] + \" \" + TokenTypeReadable[correspondingBracket]);\r\n        }\r\n    }\r\n\r\n    setBracketError(error: string) {\r\n        if (this.bracketError == null) this.bracketError = error;\r\n    }\r\n\r\n    next() {\r\n        this.pos++;\r\n        this.currentChar = this.nextChar;\r\n        if (this.pos + 1 < this.input.length) {\r\n            this.nextChar = this.input.charAt(this.pos + 1);\r\n        } else {\r\n            this.nextChar = endChar;\r\n        }\r\n        this.column++; // column of current char\r\n    }\r\n\r\n\r\n\r\n    mainState() {\r\n\r\n        let char = this.currentChar;\r\n\r\n        let specialCharToken = specialCharList[char];\r\n\r\n        if (specialCharToken != null) {\r\n            switch (specialCharToken) {\r\n                case TokenType.leftSquareBracket:\r\n                    if (this.nextChar == \"]\") {\r\n                        this.pushToken(TokenType.leftRightSquareBracket, \"[]\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.leftSquareBracket, \"[\");\r\n                        this.bracketStack.push(specialCharToken);\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.division:\r\n                    if (this.nextChar == '*') {\r\n                        this.lexMultilineComment();\r\n                        return;\r\n                    }\r\n                    this.pushToken(TokenType.division, '/');\r\n                    this.next();\r\n                    return;\r\n                case TokenType.pipe:\r\n                    if (this.nextChar == \"|\") {\r\n                        this.pushToken(TokenType.concatenation, '||');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.pipe, '|');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.lower:\r\n                    if (this.nextChar == \">\") {\r\n                        this.pushToken(TokenType.notEqual, '<>');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == \"=\"){\r\n                        this.pushToken(TokenType.lowerOrEqual, '<=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                    else {\r\n                        this.pushToken(TokenType.lower, '<');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.greater:\r\n                    if (this.nextChar == \"=\"){\r\n                        this.pushToken(TokenType.greaterOrEqual, '>=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                    else {\r\n                        this.pushToken(TokenType.greater, '>');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.rightSquareBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.minus:\r\n                    if (this.isDigit(this.nextChar, 10) && !\r\n                        ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.rightBracket].indexOf(this.nonSpaceLastTokenType) >= 0)\r\n                    ) {\r\n                        this.lexNumber();\r\n                        return;\r\n                    } else if (this.nextChar == '-') {\r\n                        this.lexEndofLineComment(\"--\");\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.minus, '-');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.hash:\r\n                    if(this.nonSpaceLastToken == null || this.nonSpaceLastToken.position.line < this.line){\r\n                        this.lexEndofLineComment('#');\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.hash, \"#\");\r\n                        this.next();\r\n                    }\r\n                    break;\r\n                case TokenType.singleQuote:\r\n                    this.lexStringConstant(\"'\");\r\n                    return;\r\n                case TokenType.doubleQuote:\r\n                    this.lexStringConstant('\"');\r\n                    return;\r\n                case TokenType.newline:\r\n                    this.pushToken(TokenType.newline, '\\n');\r\n                    this.line++;\r\n                    this.column = 0;\r\n                    this.next();\r\n                    return;\r\n                case TokenType.space:\r\n                case TokenType.tab:\r\n                    this.lexSpace();\r\n                    return;\r\n                case TokenType.linefeed:\r\n                    this.next();\r\n                    return;\r\n                case TokenType.at:\r\n                    this.lexAnnotation();\r\n                    return;\r\n                case TokenType.identifierQuote:\r\n                    this.lexQuotedIdentifier();\r\n                    return;\r\n                \r\n            }\r\n\r\n            this.pushToken(specialCharToken, char);\r\n            this.next();\r\n            return;\r\n\r\n        }\r\n\r\n        // no special char. Number?\r\n\r\n        if (this.isDigit(char, 10)) {\r\n            this.lexNumber();\r\n            return;\r\n        }\r\n\r\n        this.lexIdentifierOrKeyword();\r\n\r\n    }\r\n\r\n\r\n    lexQuotedIdentifier() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let s: string = \"\";\r\n        this.next();\r\n        while(this.currentChar != '`' && this.currentChar != endChar){\r\n            s += this.currentChar;\r\n            this.next();\r\n        }\r\n        if(this.currentChar == endChar){\r\n            this.pushError(\"Innerhalb eines in `` eingeschlossenen Bezeichners wurde das Ende der Datei erreicht.\", s.length + 1, \"error\", line, column);\r\n        } else {\r\n            this.next(); // skip `\r\n            this.pushToken(TokenType.identifier, s, line, column);\r\n        }\r\n    }\r\n\r\n    pushToken(tt: TokenType, text: string | number | boolean, line: number = this.line, column: number = this.column, length: number = (\"\" + text).length) {\r\n        let t: Token = {\r\n            tt: tt,\r\n            value: text,\r\n            position: {\r\n                column: column,\r\n                line: line,\r\n                length: length\r\n            }\r\n        }\r\n\r\n        for (let tripel of this.tokenTypesToMerge) {\r\n            if (tt == tripel.second && this.nonSpaceLastTokenType == tripel.first) {\r\n                let newLength = column - this.nonSpaceLastToken.position.column + length;\r\n                this.nonSpaceLastToken.tt = tripel.merged;\r\n                this.nonSpaceLastToken.position = { column: this.nonSpaceLastToken.position.column, line: line, length: newLength };\r\n                this.nonSpaceLastToken.value = this.nonSpaceLastToken.value + \" \" + text;\r\n\r\n                this.nonSpaceLastTokenType = tripel.merged;\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (!(this.spaceTokens.indexOf(tt) >= 0)) {\r\n            this.nonSpaceLastTokenType = tt;\r\n            this.nonSpaceLastToken = t;\r\n        }\r\n\r\n        this.tokenList.push(t);\r\n    }\r\n\r\n    pushError(text: string, length: number, errorLevel: ErrorLevel = \"error\", line: number = this.line, column: number = this.column) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: {\r\n                line: line,\r\n                column: column,\r\n                length: length\r\n            },\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n\r\n\r\n    isDigit(a: string, base: number) {\r\n        var charCode = a.charCodeAt(0);\r\n\r\n        if (base == 10) return (charCode >= 48 && charCode <= 57); // 0 - 9\r\n        if (base == 2) return (charCode >= 48 && charCode <= 49); // 0, 1\r\n        if (base == 8) return (charCode >= 48 && charCode <= 55); // 0 - 7\r\n        if (base == 16) return (charCode >= 48 && charCode <= 57) || (charCode >= 97 && charCode <= 102) ||\r\n            (charCode >= 65 && charCode <= 70); // 0 - 9 || a - f || A - F\r\n    }\r\n\r\n    lexSpace() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n\r\n        let posStart = this.pos;\r\n        while (this.currentChar == \" \" || this.currentChar == \"\\t\") {\r\n            this.next();\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n        this.pushToken(TokenType.space, this.input.substring(posStart, posEnd), line, column);\r\n        return;\r\n\r\n    }\r\n\r\n    lexCharacterConstant() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n        this.next();\r\n        let char = this.currentChar;\r\n        if (char == \"\\\\\") {\r\n            let escapeChar = EscapeSequenceList[this.nextChar];\r\n            if (escapeChar == null) {\r\n                this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                if (this.nextChar != \"'\") {\r\n                    char = this.nextChar;\r\n                    this.next();\r\n                }\r\n            } else {\r\n                char = escapeChar;\r\n                this.next();\r\n            }\r\n        }\r\n        this.next();\r\n        if (this.currentChar != \"'\") {\r\n            this.pushError(\"Das Ende der char-Konstante wird erwartet (').\", 1);\r\n        } else {\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.charConstant, char, line, column);\r\n\r\n    }\r\n\r\n    lexStringConstant(beginChar: string) {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let text = \"\";\r\n\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\\\\") {\r\n                let escapeChar = EscapeSequenceList[this.nextChar];\r\n                if (escapeChar == null) {\r\n                    this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                } else {\r\n                    char = escapeChar;\r\n                    this.next();\r\n                }\r\n            } else if (char == beginChar) {\r\n                this.next();\r\n                break;\r\n            } else if (char == \"\\n\" || char == endChar) {\r\n                this.pushError('Innerhalb einer String-Konstante wurde das Zeilenende erreicht.', text.length + 1, \"error\", line, column);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        if (beginChar == \"'\") {\r\n            this.pushToken(TokenType.stringConstant, text, line, column, text.length + 2);\r\n        } else {\r\n            this.pushToken(TokenType.identifier, text, line, column, text.length + 2);\r\n            this.tokenList[this.tokenList.length - 1].isDoubleQuotedIdentifier = true;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    lexMultilineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let lastCharWasNewline: boolean = false;\r\n\r\n        let text = \"/*\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"*\" && this.nextChar == \"/\") {\r\n                this.next();\r\n                this.next();\r\n                text += \"*/\";\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                this.pushError(\"Innerhalb eines Mehrzeilenkommentars (/*... */) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            if (char == \"\\n\") {\r\n                this.line++;\r\n                this.column = 0;\r\n                lastCharWasNewline = true;\r\n                text += char;\r\n            } else if (!(lastCharWasNewline && char == \" \")) {\r\n                text += char;\r\n                lastCharWasNewline = false;\r\n            }\r\n\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n    lexEndofLineComment(commentStart: string) {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let text = commentStart;\r\n        for(let i = 0; i < commentStart.length; i++){\r\n            this.next();\r\n        }\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\n\") {\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                // this.pushError(\"Innerhalb eines Einzeilenkommentars (//... ) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n\r\n    lexNumber() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let sign: number = 1;\r\n        if (this.currentChar == '-') {\r\n            sign = -1;\r\n            this.next();\r\n        }\r\n\r\n        let posStart = this.pos;\r\n\r\n        let firstChar = this.currentChar;\r\n\r\n        this.next();\r\n\r\n        let radix: number = 10;\r\n\r\n        if (firstChar == '0' && (['b', 'x', '0', '1', '2', '3', '4', '5', '6', '7'].indexOf(this.currentChar) >= 0)) {\r\n            if (this.currentChar == 'x') {\r\n                radix = 16;\r\n                this.next();\r\n            } else if (this.currentChar == 'b') {\r\n                radix = 2;\r\n                this.next();\r\n            } else radix = 8;\r\n            posStart = this.pos;\r\n        }\r\n\r\n        while (this.isDigit(this.currentChar, radix)) {\r\n            this.next();\r\n        }\r\n\r\n        let tt = TokenType.integerConstant;\r\n\r\n        if (this.currentChar == \".\") {\r\n            tt = TokenType.floatingPointConstant;\r\n\r\n            this.next();\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n\r\n        }\r\n\r\n        let base = this.input.substring(posStart, this.pos);\r\n\r\n        posStart = this.pos;\r\n        let exponent: number = 0;\r\n\r\n        let hasExponential: boolean = false;\r\n        //@ts-ignore\r\n        if (this.currentChar == \"e\") {\r\n            hasExponential = true;\r\n            this.next();\r\n            let posExponentStart: number = this.pos;\r\n\r\n            //@ts-ignore\r\n            if (this.currentChar == '-') {\r\n                this.next();\r\n            }\r\n\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n            let exponentString = this.input.substring(posExponentStart, this.pos);\r\n            exponent = Number.parseInt(exponentString);\r\n        }\r\n\r\n        if (this.currentChar == 'd' || this.currentChar == 'f') {\r\n            tt == TokenType.floatingPointConstant;\r\n            this.next();\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n        }\r\n\r\n        let value: number = (tt == TokenType.integerConstant) ? Number.parseInt(base, radix) : Number.parseFloat(base);\r\n        value *= sign;\r\n        if (exponent != 0) value *= Math.pow(10, exponent);\r\n\r\n        this.pushToken(tt, value, line, column);\r\n\r\n    }\r\n\r\n    lexAnnotation() {\r\n        let line = this.line;\r\n        let column = this.column - 1;\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n        this.next(); // skip@\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n        this.pushToken(TokenType.at, text, line, column, text.length + 1);\r\n    }\r\n\r\n    lexIdentifierOrKeyword() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n\r\n        let tt = keywordList[text.toLowerCase()];\r\n        if (tt != null && typeof tt == \"number\") {\r\n\r\n            switch (tt) {\r\n                case TokenType.true:\r\n                    this.pushToken(TokenType.booleanConstant, true, line, column);\r\n                    break;\r\n                case TokenType.false:\r\n                    this.pushToken(TokenType.booleanConstant, false, line, column);\r\n                    break;\r\n                default:\r\n                    this.pushToken(tt, text, line, column);\r\n                    break;\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        this.pushToken(TokenType.identifier, text, line, column);\r\n\r\n    }\r\n\r\n    isSpace(char: string): boolean {\r\n        return char == \" \" || char == \"\\n\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport function errorListToString(errorList: Error[]): string {\r\n    let s = \"\";\r\n\r\n    for (let error of errorList) {\r\n\r\n        s += \"Z \" + error.position.line + \", S \" + error.position.column + \": \";\r\n        s += error.text + \"<br>\";\r\n\r\n    }\r\n\r\n    return s;\r\n}","import { TokenType } from \"../lexer/Token.js\";\r\n\r\ntype CheckFunction = (columnIdentifier: string, parameterValues: number[]) => string;\r\ntype OutputFunction = (value: any, parameterValues: number[]) => string;\r\n\r\nexport abstract class SQLType {\r\n\r\n    abstract canCastTo(type2: SQLType): boolean;\r\n\r\n    abstract getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType;\r\n\r\n    abstract getUnaryResultType(operator: TokenType): SQLType;\r\n\r\n    abstract getBinaryResult(operator: TokenType, value1: any, value2: any): any;\r\n\r\n    abstract toString(): string;\r\n\r\n    abstract getBaseTypeName(): string;\r\n\r\n}\r\n\r\nexport class SQLBaseType extends SQLType {\r\n    // Map<tokenType, Map<SecondType, ResultType>>\r\n    binaryResultTypes: Map<TokenType, Map<SQLBaseType, SQLBaseType>> = new Map();\r\n\r\n    unaryOperators: TokenType[] = [];\r\n\r\n    static baseTypes: SQLBaseType[] = [];\r\n    static baseTypeMap: Map<string, SQLBaseType> = new Map();\r\n\r\n    public canCastToList: string[];\r\n\r\n    constructor(public name: string, public parameterDescriptions: string[],\r\n        public checkFunction: CheckFunction, public outputFunction: OutputFunction, canCastToList: string[]) {\r\n        super();\r\n        this.canCastToList = canCastToList.slice(0);\r\n        let ownIndex = this.canCastToList.indexOf(name);\r\n        if(ownIndex >= 0) this.canCastToList.splice(ownIndex, 1);\r\n    }\r\n\r\n    static fromConstantType(tt: TokenType): SQLBaseType {\r\n        switch (tt) {\r\n            case TokenType.stringConstant:\r\n                return this.baseTypeMap.get(\"text\");\r\n            case TokenType.integerConstant:\r\n                return this.baseTypeMap.get(\"integer\");\r\n            case TokenType.floatingPointConstant:\r\n                return this.baseTypeMap.get(\"float\");\r\n            case TokenType.charConstant:\r\n                return this.baseTypeMap.get(\"text\");\r\n            case TokenType.booleanConstant:\r\n                return this.baseTypeMap.get(\"boolean\");\r\n            case TokenType.keywordNull:\r\n                return this.baseTypeMap.get(\"null\");\r\n        \r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    getBaseTypeName(): string {\r\n        return this.name;\r\n    }\r\n\r\n    toString(): string {\r\n        return this.name;\r\n    }\r\n\r\n    static getBaseType(name: string) {\r\n        if(name == 'char') name = 'varchar';\r\n        return this.baseTypeMap.get(name.toLocaleLowerCase());\r\n    }\r\n\r\n    static addBaseTypes(baseTypes: SQLBaseType[]) {\r\n        SQLBaseType.baseTypes = SQLBaseType.baseTypes.concat(baseTypes);\r\n        baseTypes.forEach(t => SQLBaseType.baseTypeMap.set(t.name, t));\r\n    }\r\n\r\n    addBinaryOperation(tokenType: TokenType | TokenType[], secondType: SQLBaseType, resultType: SQLBaseType, isCommutative: boolean = true) {\r\n\r\n        if (!Array.isArray(tokenType)) tokenType = [tokenType];\r\n\r\n        tokenType.forEach(t => {\r\n            let map: Map<SQLBaseType, SQLBaseType> = this.binaryResultTypes.get(t);\r\n            if (map == null) {\r\n                map = new Map();\r\n                this.binaryResultTypes.set(t, map);\r\n            }\r\n            map.set(secondType, resultType);\r\n            if (isCommutative && secondType != this) {\r\n                secondType.addBinaryOperation(t, this, resultType, false);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    canCastTo(type2: SQLType): boolean {\r\n\r\n        let bt2: SQLBaseType = type2 instanceof SQLBaseType ? type2 : type2[\"baseType\"];\r\n\r\n        return this.canCastToList.indexOf(bt2.name) >= 0 || this.name == bt2.name;\r\n\r\n    }\r\n\r\n    getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType {\r\n\r\n\r\n        let map = this.binaryResultTypes.get(operator);\r\n        if (map == null) return null;\r\n\r\n        let bt2: SQLBaseType = secondType instanceof SQLBaseType ? secondType : secondType[\"baseType\"];\r\n\r\n        return map.get(bt2);\r\n\r\n    }\r\n\r\n    getUnaryResultType(operator: TokenType): SQLType {\r\n        if([TokenType.isNull, TokenType.isNotNull].indexOf(operator) >= 0) return booleanType;\r\n        if(this.unaryOperators.indexOf(operator)>= 0) return this;\r\n    }\r\n\r\n    getBinaryResult(operator: TokenType, value1: any, value2: any): any {\r\n        switch (operator) {\r\n            case TokenType.concatenation:\r\n                if (value1 != null && value2 != null) return value1 + value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.plus:\r\n                if (value1 != null && value2 != null) return value1 + value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.minus:\r\n                if (value1 != null && value2 != null) return value1 - value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.multiplication:\r\n                if (value1 != null && value2 != null) return value1 * value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.division:\r\n                if (value1 != null && value2 != null) return value1 * value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.keywordAnd:\r\n                if (value1 != null && value2 != null) return value1 * value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.keywordOr:\r\n                if (value1 != null && value2 != null) return Math.max(value1, value2);\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.lower:\r\n                if (value1 != null && value2 != null) return value1 < value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.greater:\r\n                if (value1 != null && value2 != null) return value1 >= value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.lowerOrEqual:\r\n                if (value1 != null && value2 != null) return value1 <= value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.greaterOrEqual:\r\n                if (value1 != null && value2 != null) return value1 >= value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.equal:\r\n                return value1 == value2;\r\n            case TokenType.notEqual:\r\n                return value1 != value2;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nlet tens: number[] = [1, 10, 100, 1000, 100000, 100000, 1000000, 10000000, 100000000, 1000000000];\r\n\r\nexport class SQLDerivedType extends SQLType {\r\n\r\n    name: string;\r\n\r\n    constructor(public baseType: SQLBaseType, public parameterValues: number[]) {\r\n        super();\r\n        let parameters = parameterValues.join(\", \");\r\n        this.name = baseType.name + \"(\" + parameters + \")\";\r\n    }\r\n\r\n    toString(): string {\r\n        return this.name;\r\n    }\r\n\r\n    getBaseTypeName(): string {\r\n        return this.baseType.name;\r\n    }\r\n\r\n\r\n    canCastTo(type2: SQLType): boolean {\r\n\r\n        let bt2: SQLBaseType = type2 instanceof SQLBaseType ? type2 : type2[\"baseType\"];\r\n\r\n        return this.baseType.canCastToList.indexOf(bt2.name) >= 0 || this.baseType.name == bt2.name;\r\n\r\n    }\r\n\r\n    getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType {\r\n\r\n\r\n        let map = this.baseType.binaryResultTypes.get(operator);\r\n        if (map == null) return null;\r\n\r\n        let bt2: SQLBaseType = secondType instanceof SQLBaseType ? secondType : secondType[\"baseType\"];\r\n\r\n        let returnBaseType = map.get(bt2);\r\n\r\n        if (this.baseType == bt2 && this.baseType == returnBaseType && secondType instanceof SQLDerivedType) {\r\n            if (this.baseType.name == \"varchar\" || operator == TokenType.concatenation) {\r\n                return new SQLDerivedType(this.baseType, [this.parameterValues[0] + secondType.parameterValues[0]]);\r\n            }\r\n            if (this.baseType.name == \"decimal\") {\r\n                return new SQLDerivedType(this.baseType, [Math.max(this.parameterValues[0], secondType.parameterValues[0]), Math.max(this.parameterValues[1], secondType.parameterValues[1])]);\r\n            }\r\n        }\r\n\r\n        return map.get(bt2);\r\n\r\n    }\r\n\r\n    getUnaryResultType(operator: TokenType): SQLType {\r\n        return this.baseType.getUnaryResultType(operator);\r\n    }\r\n\r\n    getBinaryResult(operator: TokenType, value1: any, value2: any): any {\r\n        let result = this.baseType.getBinaryResult(operator, value1, value2);\r\n        if (this.name = \"varchar\") return result == null ? null : (\"\" + result).substr(0, this.parameterValues[0]);\r\n        if (this.name == \"decimal\") {\r\n            if (result == null) return null;\r\n            return Math.round(result * tens[this.parameterValues[1]]) / tens[this.parameterValues[1]];\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nlet textTypes = [\"varchar\", \"char\", \"text\" ,\"tinytext\", \"mediumtext\", \"longtext\"];\r\n\r\nvar varcharType = new SQLBaseType(\"varchar\", [\"Maximale Länge\"], (ci, pv) => `check(length(${ci}) <= ${pv[0]})`,\r\n    (v: string, pv) => v.substring(0, pv[0]), textTypes);\r\n    \r\nvar charType = new SQLBaseType(\"char\", [\"Maximale Länge\"], (ci, pv) => `check(length(${ci}) <= ${pv[0]})`,\r\n    (v: string, pv) => v.substring(0, pv[0]), textTypes);\r\n\r\nvar textType = new SQLBaseType(\"text\", [\"Maximale Länge\"], (ci, pv) => \"\", (v: string, pv) => v, textTypes.concat([\"date\", \"datetime\", \"timestamp\"]));\r\nvar tinyTextType = new SQLBaseType(\"tinyText\", [], (ci, pv) => \"\", (v: string, pv) => v, textTypes);\r\nvar mediumTextType = new SQLBaseType(\"mediumText\", [], (ci, pv) => \"\", (v: string, pv) => v, textTypes);\r\nvar longTextType = new SQLBaseType(\"longText\", [], (ci, pv) => \"\", (v: string, pv) => v, textTypes);\r\n\r\nlet floatTypes = [\"decimal\", \"numeric\", \"double\", \"real\", \"float\"];\r\n\r\nvar decimalType = new SQLBaseType(\"decimal\", [\"Gesamtzahl der Stellen\", \"Nachkommastellen\"], (ci, pv) => \"\",\r\n    (v: number, pv) => { let vk = Math.trunc(v); let nk = v - vk; return \"\" + vk + (pv[1] > 0 ? \".\" + Math.round(nk * tens[pv[1]]) : \"\") },\r\n    floatTypes);\r\nvar numericType = new SQLBaseType(\"numeric\", [\"Gesamtzahl der Stellen\", \"Nachkommastellen\"], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\nvar doubleType = new SQLBaseType(\"double\", [\"Gesamtzahl der Stellen\", \"Nachkommastellen\"], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\nvar realType = new SQLBaseType(\"real\", [], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\nvar floatType = new SQLBaseType(\"float\", [], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\n\r\nlet inttypes = [\"int\", \"integer\", \"tinyint\", \"smallint\", \"mediumint\", \"bigint\"];\r\nlet numberTypes = inttypes.concat(floatTypes);\r\n\r\nvar intType = new SQLBaseType(\"int\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar integerType = new SQLBaseType(\"integer\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar tinyIntType = new SQLBaseType(\"tinyint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar smallIntType = new SQLBaseType(\"smallint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar mediumIntType = new SQLBaseType(\"mediumint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar bigIntType = new SQLBaseType(\"bigint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\n\r\nvar dateType = new SQLBaseType(\"date\", [], (ci, pv) => `check(isDate(${ci}))`, (v: string, pv) => v, []);\r\nvar dateTimeType = new SQLBaseType(\"datetime\", [], (ci, pv) => `check(isDateTime(${ci}))`, (v: string, pv) => v, [\"timestamp\"]);\r\nvar timestampType = new SQLBaseType(\"timestamp\", [], (ci, pv) => `check(isDateTime(${ci}))`, (v: string, pv) => v, [\"datetime\"]);\r\n\r\nvar booleanType = new SQLBaseType(\"boolean\", [], (ci, pv) => `check(${ci} == 0 or ${ci} == 1)`, (v, pv) => v == 1 ? \"true\" : \"false\",\r\n    [\"varchar\", \"text\", \"decimal\", \"numeric\"]);\r\n\r\nvar nullType = new SQLBaseType(\"null\", [], (ci, pv) => \"\", (v, pv) => v,\r\n    []);\r\n\r\nlet numericTypes = [decimalType, numericType, doubleType, realType, floatType, intType, integerType, tinyIntType, smallIntType, mediumIntType, bigIntType];\r\n\r\nlet baseTypes = [varcharType, charType, textType, tinyTextType, mediumTextType, longTextType,\r\n    dateType, dateTimeType, timestampType, booleanType, nullType].concat(numericTypes);\r\n\r\nSQLBaseType.addBaseTypes(baseTypes);\r\n\r\nvarcharType.addBinaryOperation(TokenType.concatenation, varcharType, varcharType);\r\nvarcharType.addBinaryOperation(TokenType.concatenation, charType, varcharType);\r\nvarcharType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\ntextType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\nvarcharType.addBinaryOperation(TokenType.keywordLike, varcharType, booleanType);\r\nvarcharType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\ntextType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\n\r\ncharType.addBinaryOperation(TokenType.concatenation, charType, charType);\r\ncharType.addBinaryOperation(TokenType.concatenation, varcharType, charType);\r\ncharType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\ntextType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\ncharType.addBinaryOperation(TokenType.keywordLike, charType, booleanType);\r\ncharType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\ntextType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\n\r\nlet numericBinaryOperators: TokenType[] = [TokenType.plus, TokenType.minus, TokenType.multiplication, TokenType.division, TokenType.modulo];\r\nlet comparisonOperators: TokenType[] = [TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual];\r\n\r\nfor (let i = 0; i < numericTypes.length; i++) {\r\n    for (let j = i; j < numericTypes.length; j++) {\r\n        numericTypes[i].addBinaryOperation(numericBinaryOperators, numericTypes[j], numericTypes[j]);\r\n        numericTypes[i].addBinaryOperation(comparisonOperators, numericTypes[j], booleanType);\r\n    }\r\n    numericTypes[i].unaryOperators = [TokenType.minus];\r\n}\r\n\r\ndecimalType.addBinaryOperation(numericBinaryOperators, decimalType, decimalType);\r\n\r\nlet characterTypes = [varcharType, textType];\r\nfor (let i = 0; i < characterTypes.length; i++) {\r\n    for (let j = i; j < characterTypes.length; j++) {\r\n        characterTypes[i].addBinaryOperation(TokenType.concatenation, characterTypes[j], characterTypes[j]);\r\n        characterTypes[i].addBinaryOperation(comparisonOperators, characterTypes[j], booleanType);\r\n    }\r\n}\r\n\r\nlet booleanOperations = [TokenType.keywordAnd, TokenType.keywordOr];\r\nbooleanType.addBinaryOperation(booleanOperations, booleanType, booleanType);\r\n\r\nbooleanType.unaryOperators = [TokenType.keywordNot];\r\n\r\nbaseTypes.forEach(bt => bt.unaryOperators = bt.unaryOperators.concat([TokenType.isNull, TokenType.isNotNull]));","import { param, timers } from \"jquery\";\r\nimport { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenList, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { ASTNode, BracketsNode, SelectNode, TermNode, TableOrSubqueryNode, TableNode, SubqueryNode, GroupByNode, OrderByNode, LimitNode, IdentifierNode, DotNode, ListNode, ColumnNode, InsertNode, ConstantNode, UnaryOpNode, CreateTableNode, CreateTableColumnNode, ForeignKeyInfo, UpdateNode, DeleteNode, DropTableNode, AlterTableNode, AlterTableKind, OmittedStatementNode } from \"./AST.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { Column } from \"./SQLTable.js\";\r\nimport { SQLBaseType } from \"./SQLTypes.js\";\r\n\r\nexport type SQLStatement = {\r\n    ast: ASTNode,\r\n    from: TextPosition,\r\n    to: TextPosition,\r\n    hasErrors: boolean,\r\n    acceptedBySQLite: boolean,\r\n    sql?: string,\r\n    sqlCleaned?: string\r\n}\r\n\r\n\r\nexport class Parser {\r\n\r\n    static operatorPrecedence: TokenType[][] = [\r\n        [TokenType.keywordOr], [TokenType.keywordAnd],\r\n        [TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual, TokenType.keywordLike],\r\n        [TokenType.concatenation, TokenType.plus, TokenType.minus], [TokenType.multiplication, TokenType.division, TokenType.modulo],\r\n        [TokenType.keywordIn, TokenType.keywordNotIn]\r\n    ];\r\n\r\n    module: Module;\r\n\r\n    pos: number;\r\n    tokenList: TokenList;\r\n\r\n    errorList: Error[];\r\n\r\n    lookahead = 4;\r\n    ct: Token[];\r\n    lastToken: Token;\r\n    cct: Token;\r\n    tt: TokenType;\r\n    position: TextPosition;\r\n    lastComment: Token;\r\n\r\n    endToken: Token = {\r\n        position: { line: 0, column: 0, length: 1 },\r\n        tt: TokenType.endofSourcecode,\r\n        value: \"das Ende des Programms\"\r\n    };\r\n\r\n    beginStatementKeywords = [\"select\", \"insert into\", \"update\", \"create table\", \"delete from\", \"alter table\", \"drop table\"];\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    parse(m: Module) {\r\n\r\n        this.module = m;\r\n\r\n        this.tokenList = m.tokenList;\r\n        this.errorList = [];\r\n\r\n        m.completionHints = new Map();\r\n\r\n        if (this.tokenList.length == 0) {\r\n            this.module.sqlStatements = [];\r\n            this.module.errors[1] = this.errorList;\r\n            this.module.addCompletionHint({ line: 0, column: 0, length: 0 }, { line: 20000, column: 100, length: 0 }, false, false,\r\n                this.beginStatementKeywords);\r\n            return;\r\n        }\r\n\r\n        this.pos = 0;\r\n        this.initializeLookahead();\r\n\r\n\r\n        let lastToken = this.tokenList[this.tokenList.length - 1];\r\n        this.endToken.position = { line: lastToken.position.line, column: lastToken.position.column + lastToken.position.length, length: 1 };\r\n\r\n        this.module.sqlStatements = this.parseMain();\r\n\r\n        this.module.errors[1] = this.errorList;\r\n\r\n    }\r\n\r\n    initializeLookahead() {\r\n\r\n        this.ct = [];\r\n\r\n        for (let i = 0; i < this.lookahead; i++) {\r\n\r\n            let token: Token = this.endToken;\r\n\r\n            while (true) {\r\n\r\n                if (this.pos >= this.tokenList.length) break;\r\n\r\n                let token1 = this.tokenList[this.pos]\r\n                if (token1.tt == TokenType.comment) {\r\n                    this.lastComment = token1;\r\n                }\r\n\r\n                if (token1.tt != TokenType.newline && token1.tt != TokenType.space && token1.tt != TokenType.comment) {\r\n                    token = token1;\r\n                    if (this.lastComment != null) {\r\n                        token.commentBefore = this.lastComment;\r\n                        this.lastComment = null;\r\n                    }\r\n                    break;\r\n                }\r\n\r\n                this.pos++;\r\n\r\n            }\r\n\r\n            this.ct.push(token);\r\n\r\n            if (i < this.lookahead - 1) {\r\n                this.pos++;\r\n            }\r\n\r\n        }\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    nextToken() {\r\n\r\n        let token: Token;\r\n        this.lastToken = this.cct;\r\n\r\n        while (true) {\r\n\r\n            this.pos++;\r\n\r\n            if (this.pos >= this.tokenList.length) {\r\n                token = this.endToken;\r\n                break;\r\n            }\r\n\r\n            token = this.tokenList[this.pos]\r\n            if (token.tt == TokenType.comment) {\r\n                this.lastComment = token;\r\n            }\r\n\r\n            if (token.tt != TokenType.newline && token.tt != TokenType.space && token.tt != TokenType.comment) {\r\n                token.commentBefore = this.lastComment;\r\n                this.lastComment = null;\r\n                break;\r\n            }\r\n\r\n        }\r\n\r\n        for (let i = 0; i < this.lookahead - 1; i++) {\r\n            this.ct[i] = this.ct[i + 1];\r\n        }\r\n\r\n        this.ct[this.lookahead - 1] = token;\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position?: TextPosition, quickFix?: QuickFix) {\r\n        if (position == null) position = Object.assign({}, this.position);\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    skip(tt: TokenType | TokenType[]) {\r\n        if (!Array.isArray(tt)) tt = [tt];\r\n        if (tt.indexOf(this.tt) >= 0) this.nextToken();\r\n    }\r\n\r\n    expect(tt: TokenType | TokenType[], skip: boolean = true, invokeSemicolonAngel: boolean = false): boolean {\r\n        if (this.tt != tt && !(Array.isArray(tt) && tt.indexOf(this.tt) >= 0)) {\r\n            if (tt == TokenType.semicolon && this.tt == TokenType.endofSourcecode) {\r\n                return true;\r\n            }\r\n\r\n            let position: TextPosition = this.cct.position;\r\n            if (tt == TokenType.semicolon && this.lastToken != null) {\r\n\r\n                if (this.lastToken.position.line < position.line) {\r\n                    position = {\r\n                        line: this.lastToken.position.line,\r\n                        column: this.lastToken.position.column + this.lastToken.position.length,\r\n                        length: 1\r\n                    }\r\n                }\r\n            }\r\n\r\n            let quickFix: QuickFix = null;\r\n            if (tt == TokenType.semicolon && this.lastToken.position.line < this.cct.position.line &&\r\n                !this.isOperatorOrDot(this.lastToken.tt)\r\n            ) {\r\n                quickFix = {\r\n                    title: 'Strichpunkt hier einfügen',\r\n                    editsProvider: (uri) => {\r\n                        return [{\r\n                            resource: uri,\r\n                            edit: {\r\n                                range: {\r\n                                    startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position.column,\r\n                                    message: \"\",\r\n                                    severity: monaco.MarkerSeverity.Error\r\n                                },\r\n                                text: \";\"\r\n                            }\r\n                        }\r\n                        ];\r\n                    }\r\n                }\r\n\r\n                if (invokeSemicolonAngel) {\r\n                    this.module.main.getSemicolonAngel().register(position, this.module);\r\n                }\r\n            }\r\n\r\n            let expectedValuesArray: string[];\r\n\r\n            if (Array.isArray(tt)) {\r\n                expectedValuesArray = tt.map(token => TokenTypeReadable[token]);\r\n                let expectedTokens = expectedValuesArray.join(\", \");\r\n                this.pushError(\"Erwartet wird eines der folgenden: \" + expectedTokens + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            } else {\r\n                expectedValuesArray = [TokenTypeReadable[tt]];\r\n                this.pushError(\"Erwartet wird: \" + TokenTypeReadable[tt] + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            }\r\n\r\n            // if (!Array.isArray(tt) && tt != TokenType.identifier) {\r\n            //     this.module.addCompletionHint(this.getEndOfPosition(this.lastToken.position), this.getCurrentPositionPlus(1), false, false, expectedValuesArray);\r\n            // }\r\n\r\n            return false;\r\n        }\r\n\r\n        if (skip) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    getEndOfPosition(p: TextPosition): TextPosition {\r\n        return {\r\n            line: p.line,\r\n            column: p.column + p.length,\r\n            length: 0\r\n        }\r\n    }\r\n\r\n    isOperatorOrDot(tt: TokenType): boolean {\r\n        if (tt == TokenType.dot) return true;\r\n        for (let op of Parser.operatorPrecedence) {\r\n            for (let operator of op) {\r\n                if (tt == operator) return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    isEnd(): boolean {\r\n        return this.cct == this.endToken;\r\n    }\r\n\r\n    comesToken(token: TokenType | TokenType[], skip: boolean = false): boolean {\r\n\r\n        if (!Array.isArray(token)) {\r\n            let ret: boolean = this.tt == token;\r\n            if (ret && skip) this.nextToken();\r\n            return ret;\r\n        }\r\n\r\n        return token.indexOf(this.tt) >= 0;\r\n\r\n    }\r\n\r\n    getCurrentPosition(): TextPosition {\r\n        return Object.assign({}, this.position);\r\n    }\r\n\r\n    getCurrentPositionPlus(deltaColumns: number): TextPosition {\r\n\r\n        if (this.tt == TokenType.endofSourcecode) {\r\n            return {\r\n                line: this.endToken.position.line,\r\n                column: 100,\r\n                length: 1\r\n            }\r\n        }\r\n\r\n        // get Token in which new position falls:\r\n        let tpos = 0;\r\n        let deltaInsideToken = deltaColumns;\r\n        let length = 0;\r\n        while (tpos < this.lookahead - 1 && (length = this.ct[tpos].position.length) < deltaInsideToken) {\r\n            deltaInsideToken -= length;\r\n            tpos++;\r\n        }\r\n        let tokenPos = this.ct[tpos].position;\r\n        if (tokenPos == null) tokenPos = this.getCurrentPosition();\r\n\r\n        let pos: TextPosition = {\r\n            line: tokenPos.line,\r\n            column: tokenPos.column + deltaInsideToken,\r\n            length: 1\r\n        }\r\n\r\n        return pos;\r\n    }\r\n\r\n    getEndOfCurrentToken(): TextPosition {\r\n\r\n        let position = this.getCurrentPosition();\r\n        position.column = position.column + this.position.length;\r\n        position.length = 0;\r\n\r\n        return position;\r\n    }\r\n\r\n    parseMain(): SQLStatement[] {\r\n\r\n        let mainProgram: SQLStatement[] = [];\r\n\r\n        let mainProgramEnd: TextPosition = {\r\n            column: 0,\r\n            line: 10000,\r\n            length: 1\r\n        }\r\n\r\n        let afterLastStatement: TextPosition = {\r\n            column: 0,\r\n            line: 0,\r\n            length: 0\r\n        }\r\n\r\n        let semicolonAfterLastStatement: boolean = true;\r\n\r\n        this.module.addCompletionHint(afterLastStatement, this.getCurrentPositionPlus(8), false, false,\r\n            this.beginStatementKeywords);\r\n\r\n        while (!this.isEnd()) {\r\n\r\n            let oldPos = this.pos;\r\n\r\n            let errorsBeforeStatement: number = this.errorList.length;\r\n\r\n            while ([TokenType.space, TokenType.newline, TokenType.comment, TokenType.semicolon].indexOf(this.cct.tt) >= 0) {\r\n                this.nextToken();\r\n            }\r\n\r\n            let startPosition = this.getCurrentPosition();\r\n\r\n            let st = this.parseStatement();\r\n\r\n            afterLastStatement = {\r\n                line: this.lastToken.position.line + 1,\r\n                column: 0,\r\n                length: 0\r\n            }\r\n\r\n            semicolonAfterLastStatement = this.tt == TokenType.semicolon;\r\n            while (this.tt == TokenType.semicolon) {\r\n                this.nextToken();\r\n            }\r\n\r\n            let hasErrors: boolean = false;\r\n            for (let i = errorsBeforeStatement; i < this.errorList.length; i++) {\r\n                if (this.errorList[i].level == \"error\") hasErrors = true;\r\n            }\r\n\r\n            if (st != null) {\r\n                mainProgram.push({\r\n                    ast: st,\r\n                    from: startPosition,\r\n                    to: this.getEndOfPosition(this.lastToken.position),\r\n                    hasErrors: hasErrors,\r\n                    acceptedBySQLite: false\r\n                });\r\n            }\r\n            // console.log(mainProgram[mainProgram.length - 1]);\r\n\r\n            mainProgramEnd = this.getCurrentPosition();\r\n\r\n            // emergency-forward:\r\n            if (this.pos == oldPos) {\r\n                let beginStatementTokens: TokenType[] =\r\n                    [TokenType.keywordSelect, TokenType.keywordUpdate, TokenType.keywordCreate, TokenType.keywordInsert,\r\n                    TokenType.keywordDelete, TokenType.keywordDrop, TokenType.keywordAlter];\r\n\r\n                let firstBadToken: boolean = true;\r\n\r\n                while (!this.isEnd() && beginStatementTokens.indexOf(this.tt) < 0) {\r\n                    if ([TokenType.space, TokenType.newline].indexOf(this.tt) < 0 && firstBadToken) {\r\n                        this.pushError(\"Erwartet wird eines dieser Schlüsselwörter: \" + beginStatementTokens.map(t => TokenTypeReadable[t]).join(\", \")\r\n                            + \"; Gefunden wurde: \" + this.cct.value);\r\n                        firstBadToken = true;\r\n                    }\r\n                    this.nextToken();\r\n                }\r\n            }\r\n\r\n            if (semicolonAfterLastStatement || this.cct.position.line - afterLastStatement.line > 0) {\r\n                this.module.addCompletionHint(afterLastStatement, this.getCurrentPositionPlus(8), false, false,\r\n                    this.beginStatementKeywords);\r\n            }\r\n\r\n        }\r\n\r\n        this.module.addCompletionHint(afterLastStatement, { line: this.endToken.position.line + 1, column: 0, length: 0 }, false, false,\r\n            this.beginStatementKeywords);\r\n\r\n        return mainProgram;\r\n\r\n    }\r\n\r\n\r\n\r\n    parseStatement(expectSemicolon: boolean = true): ASTNode {\r\n\r\n        let retStatements: ASTNode = null;\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordSelect:\r\n                return this.parseSelect();\r\n            case TokenType.keywordInsert:\r\n                return this.parseInsert();\r\n            case TokenType.keywordCreate:\r\n                return this.parseCreateTableOrDatabase();\r\n            case TokenType.keywordUpdate:\r\n                return this.parseUpdate();\r\n            case TokenType.keywordDelete:\r\n                return this.parseDelete();\r\n            case TokenType.keywordDrop:\r\n                return this.parseDropTable();\r\n            case TokenType.keywordAlter:\r\n                return this.parseAlterTable();\r\n            case TokenType.keywordCommit:\r\n                this.pushError(\"Die Aweisung commit ist unnötig, da jede Anweisung automatisch commited wird.\", \"info\");\r\n                this.nextToken();\r\n                return null;\r\n            // Omitted statements:\r\n            case TokenType.keywordSet:\r\n                return this.parseSet();\r\n            case TokenType.keywordUse:\r\n                return this.parseUse();\r\n            case TokenType.keywordStart:\r\n                this.nextToken();\r\n                this.expect(TokenType.keywordTransaction, true);\r\n                return null;\r\n            case TokenType.keywordLock:\r\n            case TokenType.keywordUnlock:\r\n                this.parseLockUnlock();\r\n                return null;\r\n\r\n            default:\r\n                let s = TokenTypeReadable[this.tt];\r\n                if (s == null) s = \"\";\r\n                if (s != this.cct.value) s += \"(\" + this.cct.value + \")\";\r\n                s += \" wird hier nicht erwartet.\";\r\n                this.pushError(s);\r\n                this.nextToken();\r\n                break;\r\n        }\r\n\r\n\r\n        return retStatements;\r\n\r\n    }\r\n\r\n    parseLockUnlock() {\r\n        this.nextToken();\r\n        this.expect(TokenType.keywordTables, true);\r\n        this.skip(TokenType.identifier);\r\n        this.skip([TokenType.keywordWrite, TokenType.keywordRead]);\r\n        this.skip(TokenType.semicolon);\r\n    }\r\n\r\n    parseSet(): OmittedStatementNode {\r\n\r\n        this.pushError(\"Das SET-Statement wird von SQLite nicht unterstützt. Diese Anweisung wird daher einfach überlesen.\", \"info\");\r\n\r\n        let node: OmittedStatementNode = {\r\n            type: TokenType.omittedeStatement,\r\n            position: this.getCurrentPosition(),\r\n            endPosition: null,\r\n            symbolTable: null\r\n        }\r\n\r\n        this.nextToken(); // skip 'set'\r\n        this.expect(TokenType.identifier, true);\r\n        this.expect(TokenType.equal, true);\r\n        this.expect([TokenType.identifier, TokenType.stringConstant, TokenType.integerConstant, TokenType.charConstant, TokenType.booleanConstant, TokenType.floatingPointConstant], true);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n    parseUse(): OmittedStatementNode {\r\n\r\n        this.pushError(\"Das USE-Statement wird von SQLite nicht unterstützt. Diese Anweisung wird daher einfach überlesen. Sie können eine andere Datenbank auswählen indem Sie in der Datenbankliste links darauf klicken.\", \"info\");\r\n\r\n        let node: OmittedStatementNode = {\r\n            type: TokenType.omittedeStatement,\r\n            position: this.getCurrentPosition(),\r\n            endPosition: null,\r\n            symbolTable: null\r\n        }\r\n\r\n        this.nextToken(); // skip 'use'\r\n        this.expect(TokenType.identifier, true);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n    parseAlterTable(): AlterTableNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"alter\"\r\n\r\n        let node: AlterTableNode = {\r\n            type: TokenType.keywordAlter,\r\n            kind: null,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n        }\r\n\r\n        if (!this.expect(TokenType.keywordTable, true)) {\r\n            this.addCompletionHintHere(false, false, [\"table\"], 1);\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1);\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        this.addCompletionHintHere(false, false, [\"rename to\", \"rename column\", \"add column\", \"drop column\"], 1);\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordRename: this.parseRenameTableOrColumn(node); break;\r\n            case TokenType.keywordAdd: this.parseAlterTableAdd(node); break;\r\n            case TokenType.keywordDrop: this.parseDropColumn(node); break;\r\n            default:\r\n                this.pushError(\"Erwartet wird rename to, rename column, add column oder drop column\");\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    parseRenameTableOrColumn(node: AlterTableNode) {\r\n\r\n        this.nextToken();\r\n        if (!this.comesToken(TokenType.keywordTo)) {\r\n            this.addCompletionHintHere(node.tableIdentifier, false, [\"column\", \"to\"], 3);\r\n        }\r\n        node.endPosition = this.getEndOfCurrentToken();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordTo:\r\n                this.nextToken();\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                node.kind = \"renameTable\";\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    node.newTableName = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    node.endPosition = this.getEndOfCurrentToken();\r\n                } else {\r\n                    this.pushError(\"Erwartet wird der neue Tabellenname.\");\r\n                }\r\n                return;\r\n            case TokenType.keywordColumn:\r\n                this.nextToken();\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                this.addCompletionHintHere(node.tableIdentifier, false, [], 3);\r\n                if (!this.comesToken(TokenType.identifier)) {\r\n                    this.pushError(\"Erwartet wird der Name einer Spalte der Tabelle \" + node.tableIdentifier + \".\");\r\n                    return;\r\n                }\r\n                node.kind = \"renameColumn\";\r\n                node.oldColumnName = <string>this.cct.value;\r\n                node.oldColumnPosition = this.getCurrentPosition();\r\n                this.nextToken();\r\n                this.addCompletionHintHere(false, false, [\"to\"], 3);\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                if (!this.expect(TokenType.keywordTo, true)) return;\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    node.newColumnName = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    node.endPosition = this.getEndOfCurrentToken();\r\n                } else {\r\n                    this.pushError(\"Erwartet wird der neue Spaltenname.\");\r\n                }\r\n                return;\r\n            default:\r\n                this.pushError(\"Erwartet wird das Schlüsselwort 'to' (zum Umbenennen der Tabelle) oder das Schlüsselwor 'column' (zum Umbenennen einer Spalte).\")\r\n                return;\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    parseDropColumn(node: AlterTableNode) {\r\n        this.nextToken(); // skip 'drop'\r\n        this.comesToken(TokenType.keywordColumn, true);\r\n        node.oldColumnPosition = this.getCurrentPosition();\r\n        this.addCompletionHintHere(node.tableIdentifier, false, [], 3);\r\n\r\n        node.kind = \"dropColumn\";\r\n        node.endPosition = this.getEndOfCurrentToken();\r\n\r\n        if (this.comesToken(TokenType.identifier)) {\r\n            node.oldColumnName = <string>this.cct.value;\r\n            this.nextToken();\r\n        } else {\r\n            this.pushError(\"Erwartet wird der Bezeichner der Spalte, die gelöscht werden soll.\");\r\n        }\r\n\r\n    }\r\n\r\n    parseAlterTableAdd(node: AlterTableNode) {\r\n        do {\r\n            this.nextToken(); // skip \"add\" or \",\"\r\n            this.comesToken(TokenType.keywordAdd, true);\r\n            let unique: boolean = false;\r\n            switch (this.tt) {\r\n                case TokenType.keywordColumn:\r\n                    this.parseAddColumn(node);\r\n                    break;\r\n                case TokenType.keywordPrimary:\r\n                    this.parseAddPrimaryKey(node);\r\n                    break;\r\n                case TokenType.keywordUnique:\r\n                    this.nextToken();\r\n                    unique = true;\r\n                    this.expect([TokenType.keywordIndex, TokenType.keywordKey], false);\r\n                case TokenType.keywordKey:\r\n                case TokenType.keywordIndex:\r\n                    this.parseAddIndex(node, unique);\r\n                    break;\r\n                case TokenType.keywordModify:\r\n                    this.parseModifyColumn(node);\r\n                    break;\r\n                case TokenType.keywordConstraint:\r\n                    this.parseAddConstraint(node);\r\n                    break;\r\n            }\r\n        } while (this.tt == TokenType.comma);\r\n    }\r\n\r\n    parseAddConstraint(node: AlterTableNode) {\r\n        this.nextToken(); // skip \"constraint\"\r\n        if (!this.expect(TokenType.identifier)) return;\r\n\r\n        if (this.comesToken(TokenType.keywordForeign)) {\r\n            let fki = this.parseForeignKeyDefinition();\r\n            if (fki != null) {\r\n                if (node.foreignKeys == null) node.foreignKeys = [];\r\n                node.foreignKeys.push(fki);\r\n                node.kind = \"omittedKind\";\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    parseForeignKeyDefinition(): ForeignKeyInfo {\r\n        let fki: ForeignKeyInfo = { column: \"\", referencesTable: \"\", referencesColumn: \"\", referencesPosition: this.getCurrentPosition() };\r\n        if (!this.expect(TokenType.keywordForeign)) return;\r\n        if (!this.expect(TokenType.keywordKey)) return;\r\n        if (!this.expect(TokenType.leftBracket)) return;\r\n\r\n        if (!this.comesToken(TokenType.identifier)) {\r\n            this.pushError(\"Der Bezeichner der Fremdschlüsselspalte wird erwartet.\");\r\n            return;\r\n        }\r\n\r\n        fki.column = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        if (!this.expect(TokenType.rightBracket)) return;\r\n        this.parseReferences(fki);\r\n        return fki;\r\n    }\r\n\r\n    parseReferences(fki: ForeignKeyInfo) {\r\n\r\n        if (!this.expect(TokenType.keywordReferences)) return;\r\n\r\n        this.addCompletionHintHere(false, true, []);\r\n\r\n        if (!this.comesToken(TokenType.identifier)) {\r\n            this.pushError(\"Der Bezeichner der referenzierten Tabelle wird erwartet.\");\r\n            return;\r\n        }\r\n\r\n        fki.referencesTable = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        let pos0 = this.lastToken.position;\r\n        let pos1 = this.getCurrentPosition();\r\n        this.module.addCompletionHint(this.getEndOfPosition(pos0), pos1, fki.referencesTable, false, []);\r\n\r\n\r\n        if (!this.expect(TokenType.leftBracket)) return;\r\n        if (!this.comesToken(TokenType.identifier)) {\r\n            this.pushError(\"Der Bezeichner der referenzierten Spalte wird erwartet.\");\r\n            return;\r\n        }\r\n\r\n        fki.referencesColumn = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        if (!this.expect(TokenType.rightBracket)) return;\r\n\r\n        while (this.tt == TokenType.keywordOn) {\r\n            this.nextToken();\r\n            let kind: \"onDelete\" | \"onUpdate\" | \"\" = \"\";\r\n\r\n            switch (this.tt) {\r\n                //@ts-ignore\r\n                case TokenType.keywordDelete:\r\n                    kind = \"onDelete\";\r\n                    break;\r\n                //@ts-ignore\r\n                case TokenType.keywordUpdate:\r\n                    kind = \"onUpdate\";\r\n                    break;\r\n            }\r\n\r\n            if (kind == \"\") {\r\n                this.pushError(\"Nach 'on' wird 'delete' oder 'update' erwartet.\");\r\n                if (!this.comesToken([TokenType.keywordCascade, TokenType.keywordRestrict, TokenType.keywordSet, TokenType.keywordNo])) {\r\n                    this.nextToken();\r\n                    kind = \"onDelete\";\r\n                }\r\n            } else {\r\n                this.nextToken();\r\n            }\r\n\r\n            switch (this.tt) {\r\n                //@ts-ignore\r\n                case TokenType.keywordCascade:\r\n                //@ts-ignore\r\n                case TokenType.keywordRestrict:\r\n                    fki[kind] = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    break;\r\n                //@ts-ignore\r\n                case TokenType.keywordSet:\r\n                    fki[kind] = \"set \";\r\n                    this.nextToken();\r\n                    if ([TokenType.keywordNull, TokenType.keywordDefault].indexOf(this.tt) >= 0) {\r\n                        fki[kind] += this.cct.value;\r\n                        this.nextToken();\r\n                    } else {\r\n                        this.pushError(\"Nach 'on delete/update set' wird 'null' oder 'default' erwartet.\");\r\n                    }\r\n                    break;\r\n                //@ts-ignore\r\n                case TokenType.keywordNo:\r\n                    this.nextToken();\r\n                    if (this.expect(TokenType.keywordAction), true) {\r\n                        fki[kind] = \"no action\";\r\n                    }\r\n                    break;\r\n                default:\r\n                    this.pushError(\"Nach 'on delete/update' wird 'cascade', 'set null', 'set default' oder 'no action' erwartet.\");\r\n                    break;\r\n\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    parseModifyColumn(node: AlterTableNode) {\r\n        this.nextToken();\r\n        let modifyColumnInfo = this.parseColumnDefinition(false);\r\n        if (modifyColumnInfo != null) {\r\n            if (node.modifyColumnInfo == null) node.modifyColumnInfo = [];\r\n            node.modifyColumnInfo.push(modifyColumnInfo);\r\n        }\r\n    }\r\n\r\n    parseAddPrimaryKey(node: AlterTableNode) {\r\n        this.nextToken(); // skip \"primary\"\r\n        node.primaryKeys = [];\r\n        if (this.expect(TokenType.keywordKey, true) && this.expect(TokenType.leftBracket, false)) {\r\n            do {\r\n                this.nextToken();\r\n                if (this.tt == TokenType.identifier) {\r\n                    node.primaryKeys.push(<string>this.cct.value);\r\n                    this.nextToken();\r\n                }\r\n            } while (this.tt == TokenType.comma)\r\n        }\r\n        if (this.expect(TokenType.rightBracket, true)) {\r\n            node.kind = \"omittedKind\";\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    parseAddIndex(node: AlterTableNode, unique: boolean) {\r\n        this.nextToken(); // skip \"key\" | \"index\"\r\n\r\n        let index = { index_name: \"\", column: \"\", unique: unique }\r\n        if (this.tt == TokenType.identifier) {\r\n            index.index_name = <string>this.cct.value;\r\n            this.nextToken();\r\n        } else {\r\n            this.pushError(\"Erwartet wird der Bezeichner des Index.\");\r\n            return null;\r\n        }\r\n\r\n        if (!this.expect(TokenType.leftBracket, true)) return null;\r\n        if (this.tt == TokenType.identifier) {\r\n            index.column = <string>this.cct.value;\r\n            this.nextToken();\r\n            if (node.indices == null) node.indices = [];\r\n            node.indices.push(index);\r\n        } else {\r\n            this.pushError(\"Erwartet wird der Bezeichner der Spalte, für die ein Index erstellt werden soll.\");\r\n            return null;\r\n        }\r\n\r\n        node.kind = \"omittedKind\";\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        return null;\r\n    }\r\n\r\n    parseAddColumn(node: AlterTableNode) {\r\n        node.kind = \"addColumn\";\r\n        this.comesToken(TokenType.keywordColumn, true);\r\n        node.columnDefBegin = this.getCurrentPosition();\r\n        node.columnDef = this.parseColumnDefinition(false);\r\n    }\r\n\r\n    parseDropTable(): DropTableNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"Delete\"\r\n\r\n        let node: DropTableNode = {\r\n            type: TokenType.keywordDrop,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n            ifExists: false\r\n        }\r\n\r\n        if (!this.expect(TokenType.keywordTable, true)) {\r\n            this.addCompletionHintHere(false, false, [\"table\"], 1);\r\n        }\r\n\r\n        if (this.comesToken(TokenType.keywordIf, true)) {\r\n            node.ifExists = true;\r\n            this.expect(TokenType.keywordExists, true);\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1, \"\", \";\");\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n\r\n    }\r\n\r\n    parseDelete(): DeleteNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"Delete\"\r\n\r\n        let node: DeleteNode = {\r\n            type: TokenType.keywordDelete,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n            whereNode: null,\r\n            whereNodeBegin: null,\r\n            whereNodeEnd: null\r\n        }\r\n\r\n        if (!this.expect(TokenType.keywordFrom, true)) {\r\n            this.addCompletionHintHere(false, false, [\"from\"], 1);\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1, \"\", \" where\\n\\t\");\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        this.addCompletionHintHere(false, false, [\"where\\n\\t\"], 1);\r\n        if (this.tt != TokenType.keywordWhere) return node;\r\n\r\n        this.nextToken(); // skip \"where\"\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n\r\n        node.whereNodeBegin = this.getEndOfPosition(this.lastToken.position);\r\n        node.whereNode = this.parseTerm();\r\n        node.whereNodeEnd = this.getCurrentPosition();\r\n\r\n        this.module.addCompletionHint(node.whereNodeBegin, this.getCurrentPositionPlus(3), node.tableIdentifier, false, []);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n        return node;\r\n\r\n    }\r\n\r\n    parseUpdate(): UpdateNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"update\"\r\n\r\n        let node: UpdateNode = {\r\n            type: TokenType.keywordUpdate,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n            columnIdentifiers: [],\r\n            columnIdentifierPositions: [],\r\n            values: [],\r\n            valuePosBegin: [],\r\n            valuePosEnd: [],\r\n            whereNode: null,\r\n            whereNodeBegin: null,\r\n            whereNodeEnd: null\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1, \"\", \" set\\n\\t\");\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        this.addCompletionHintHere(false, false, [\"set\\n\\t\"], 1);\r\n        if (!this.expect(TokenType.keywordSet)) return node;\r\n        let first: boolean = true;\r\n        do {\r\n            this.addCompletionHintHere(node.tableIdentifier, false, first ? [] : ['where'], 1, null, \" = \");\r\n            first = false;\r\n            if (this.tt != TokenType.identifier) {\r\n                this.pushError(\"Hier wird der Bezeichner derjenigen Spalte der Tabelle \" + node.tableIdentifier + \" erwaretet, deren Wert verändert werden soll.\", \"error\");\r\n                break;\r\n            }\r\n\r\n            node.columnIdentifiers.push(<string>this.cct.value);\r\n            node.columnIdentifierPositions.push(this.getCurrentPosition());\r\n            this.nextToken();\r\n\r\n            this.expect(TokenType.equal, true);\r\n\r\n            node.valuePosBegin.push(this.getCurrentPosition());\r\n            node.values.push(this.parseTerm());\r\n            node.valuePosEnd.push(this.getCurrentPosition());\r\n\r\n        } while (this.comesToken(TokenType.comma, true));\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        if (this.lastToken.tt != TokenType.comma || this.comesToken(TokenType.keywordWhere)) {\r\n            if (!this.expect(TokenType.keywordWhere, true)) return node;\r\n\r\n            node.whereNodeBegin = this.getEndOfPosition(this.lastToken.position);\r\n            node.whereNode = this.parseTerm();\r\n            node.whereNodeEnd = this.getCurrentPosition();\r\n\r\n            this.module.addCompletionHint(node.whereNodeBegin, node.whereNodeEnd, node.tableIdentifier, false, []);\r\n\r\n            node.endPosition = this.getCurrentPosition();\r\n        } else {\r\n            this.comesToken(TokenType.keywordWhere, true); // skip where, if present\r\n        }\r\n        return node;\r\n\r\n    }\r\n\r\n    parseCreateTableOrDatabase(): CreateTableNode | OmittedStatementNode {\r\n        switch (this.ct[1].tt) {\r\n            case TokenType.keywordDatabase:\r\n                return this.parseCreateDatabase();\r\n            case TokenType.keywordTable:\r\n                return this.parseCreateTable();\r\n            default:\r\n                this.nextToken();\r\n                this.pushError(\"Nach 'create' wird 'table' erwartet.\");\r\n                this.nextToken();\r\n                return null;\r\n        }\r\n    }\r\n\r\n    parseCreateDatabase(): OmittedStatementNode {\r\n        let node: OmittedStatementNode = {\r\n            type: TokenType.omittedeStatement,\r\n            position: this.getCurrentPosition(),\r\n            endPosition: null,\r\n            symbolTable: null\r\n        }\r\n\r\n        this.nextToken();\r\n        this.pushError(\"Die CREATE-DATABASE-Anweisung wird von der SQLite-Engine nicht unterstützt. Sie können eine neue Datenbank anlegen, indem Sie auf den entsprechenden Button oberhalb der Liste der Datenbanken (linke Seite des Fensters) klicken. Diese Anweisung wird überlesen.\", \"info\");\r\n        while (this.tt != TokenType.semicolon && this.tt != TokenType.endofSourcecode) {\r\n            node.endPosition = this.getEndOfCurrentToken();\r\n            this.nextToken();\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    parseCreateTable(): CreateTableNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"create\"\r\n\r\n        if (!this.expect(TokenType.keywordTable, true)) {\r\n            this.module.addCompletionHint(startPosition, this.getCurrentPositionPlus(3), false, false, [\"table\"]);\r\n        }\r\n\r\n        let ifNotExists: boolean = false;\r\n        if (this.comesToken(TokenType.keywordIf)) {\r\n            this.nextToken();\r\n            this.expect(TokenType.keywordNot, true);\r\n            this.expect(TokenType.keywordExists, true);\r\n            ifNotExists = true;\r\n        }\r\n\r\n        let identifier = \"\";\r\n        if (this.expect(TokenType.identifier, false)) {\r\n            identifier = <string>this.cct.value;\r\n            this.module.addCompletionHint(this.getCurrentPosition(), this.getCurrentPositionPlus(identifier.length + 3), false, false, [\"(\"]);\r\n            this.nextToken();\r\n        }\r\n\r\n        let node: CreateTableNode = {\r\n            type: TokenType.keywordCreate,\r\n            identifier: identifier,\r\n            position: startPosition,\r\n            endPosition: null,\r\n            columnList: [],\r\n            symbolTable: null,\r\n            combinedPrimaryKeyColumns: [],\r\n            foreignKeyInfoList: [],\r\n            ifNotExists: ifNotExists,\r\n            uniqueConstraints: []\r\n        }\r\n\r\n        if (!this.expect(TokenType.leftBracket, true)) return node;\r\n\r\n        let primaryKeyAlreadyDefined: boolean = false;\r\n        let first: boolean = true;\r\n\r\n        while (this.tt != TokenType.rightBracket) {\r\n            if (!first) this.expect(TokenType.comma, true);\r\n            first = false;\r\n            if(this.comesToken(TokenType.keywordConstraint, true)){\r\n                this.expect(TokenType.identifier, true);\r\n                this.expect([TokenType.keywordForeign, TokenType.keywordPrimary, TokenType.keywordUnique], false);\r\n            }\r\n\r\n            switch (this.tt) {\r\n                case TokenType.keywordPrimary:\r\n                    if (primaryKeyAlreadyDefined) this.pushError(\"Je Tabelle darf nur ein einziger Primärschlüssel definiert werden.\", \"error\", this.getCurrentPosition());\r\n                    this.parsePrimaryKeyTerm(primaryKeyAlreadyDefined, node);\r\n                    primaryKeyAlreadyDefined = true;\r\n                    break;\r\n                case TokenType.keywordUnique:\r\n                    this.parseUniqueTerm(node);\r\n                    break;\r\n                case TokenType.keywordForeign:\r\n                    let fki = this.parseForeignKeyDefinition();\r\n                    if (fki != null) {\r\n                        node.foreignKeyInfoList.push(fki);\r\n                    }\r\n                    break;\r\n                case TokenType.identifier:\r\n                    let columnNode = this.parseColumnDefinition(primaryKeyAlreadyDefined);\r\n                    node.columnList.push(columnNode);\r\n                    primaryKeyAlreadyDefined = primaryKeyAlreadyDefined || columnNode.isPrimary;\r\n                    break;\r\n                default:\r\n                    this.pushError(TokenTypeReadable[this.tt] + \" wird hier nicht erwartet.\", \"error\");\r\n                    break;\r\n            }\r\n            if (!this.comesToken(TokenType.comma)) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        while ([TokenType.keywordAutoincrement, TokenType.keywordEngine, TokenType.keywordDefault, TokenType.keywordCollate].indexOf(this.tt) >= 0) {\r\n            switch (this.tt) {\r\n                case TokenType.keywordCollate:\r\n                    this.nextToken();\r\n                    this.skip(TokenType.equal);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordEngine:\r\n                    this.nextToken();\r\n                    this.skip(TokenType.equal);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordDefault:\r\n                    this.nextToken();\r\n                    this.expect([TokenType.keywordCharset, TokenType.keywordCharacter], true);\r\n                    this.skip(TokenType.keywordSet);\r\n                    this.skip(TokenType.equal);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordAutoincrement:\r\n                    this.nextToken();\r\n                    this.expect(TokenType.equal, true);\r\n                    this.expect(TokenType.integerConstant, true);\r\n                    break;\r\n            }\r\n\r\n        }\r\n\r\n        for (let column of node.columnList) {\r\n            if (column.isAutoIncrement && !(column.isPrimary || node.combinedPrimaryKeyColumns.indexOf(column.identifier) >= 0)) {\r\n                this.pushError(\"autoincrement gibt es nur bei Primärschlüsseln, d.h. es fehlt wahrscheinlich 'primary key'.\", \"warning\", node.position);\r\n            }\r\n        }\r\n\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n\r\n    parsePrimaryKeyTerm(primaryKeyAlreadyDefined: boolean, node: CreateTableNode) {\r\n        if (primaryKeyAlreadyDefined) {\r\n            this.pushError(\"Die Tabelle kann nur einen einzigen Primärschlüssel haben.\");\r\n        }\r\n        this.nextToken(); // skip \"primary\"\r\n        this.expect(TokenType.keywordKey, true);\r\n\r\n        let columns: string[] = node.columnList.map(c => c.identifier);\r\n\r\n        this.addCompletionHintHere(false, false, columns);\r\n        if (this.comesToken(TokenType.leftBracket)) {\r\n            this.addCompletionHintHere(false, false, columns);\r\n            this.nextToken();\r\n\r\n            while (true) {\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    node.combinedPrimaryKeyColumns.push(<string>this.cct.value);\r\n                    this.nextToken();\r\n                    this.addCompletionHintHere(false, false, columns, 1);\r\n                    if (!this.comesToken(TokenType.comma)) {\r\n                        break;\r\n                    } else {\r\n                        this.nextToken();\r\n                        this.addCompletionHintHere(false, false, columns);\r\n                    }\r\n                } else {\r\n                    this.pushError(\"Der Bezeichner einer Spalte wird erwartet. Gefunden wurde: \" + this.cct.value);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        } else {\r\n            this.pushError(\"( erwartet.\");\r\n        }\r\n    }\r\n\r\n    parseUniqueTerm(node: CreateTableNode) {\r\n        this.nextToken(); // skip \"unique\"\r\n\r\n        let columns: string[] = node.columnList.map(c => c.identifier);\r\n        let uniqueConstraint: string[] = [];\r\n        node.uniqueConstraints.push(uniqueConstraint);\r\n\r\n        this.addCompletionHintHere(false, false, columns);\r\n        if (this.comesToken(TokenType.leftBracket)) {\r\n            this.addCompletionHintHere(false, false, columns);\r\n            this.nextToken();\r\n\r\n            while (true) {\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    uniqueConstraint.push(<string>this.cct.value);\r\n                    this.nextToken();\r\n                    this.addCompletionHintHere(false, false, columns, 1);\r\n                    if (!this.comesToken(TokenType.comma)) {\r\n                        break;\r\n                    } else {\r\n                        this.nextToken();\r\n                        this.addCompletionHintHere(false, false, columns);\r\n                    }\r\n                } else {\r\n                    this.pushError(\"Der Bezeichner einer Spalte wird erwartet. Gefunden wurde: \" + this.cct.value);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        } else {\r\n            this.pushError(\"( erwartet.\");\r\n        }\r\n    }\r\n\r\n    parseColumnDefinition(primaryKeyAlreadyDefined: boolean): CreateTableColumnNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n        let identifier = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        let node: CreateTableColumnNode = {\r\n            type: TokenType.columnDef,\r\n            identifier: identifier,\r\n            isPrimary: false,\r\n            isAutoIncrement: false,\r\n            position: position,\r\n            baseType: null,\r\n            notNull: false\r\n        }\r\n\r\n        this.parseType(node, primaryKeyAlreadyDefined);\r\n\r\n        return node;\r\n\r\n    }\r\n\r\n    addCompletionHintHere(hintColumns: boolean | string, hintTables: boolean, hints: string[], additionalColumns: number = 0, praefix: string = \"\", suffix: string = \"\") {\r\n        let pos0 = this.lastToken.position;\r\n        let pos1 = this.getCurrentPosition();\r\n        pos1.column += 1 + additionalColumns\r\n        this.module.addCompletionHint(this.getEndOfPosition(pos0), pos1, hintColumns, hintTables, hints, null, praefix, suffix);\r\n    }\r\n\r\n    parseType(node: CreateTableColumnNode, primaryKeyAlreadyDefined: boolean) {\r\n\r\n        let datatypes = SQLBaseType.baseTypes.map(type => type.toString());\r\n        this.addCompletionHintHere(false, false, datatypes);\r\n\r\n        if (!this.expect(TokenType.identifier, false)) {\r\n            this.pushError(\"Erwartet wird ein Datentyp. Gefunden wurde: \" + this.cct.value);\r\n            return;\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n\r\n        let type = SQLBaseType.getBaseType(identifier);\r\n        if (type == null) {\r\n            this.pushError(\"Erwartet wird ein Datentyp. Gefunden wurde: \" + identifier);\r\n        }\r\n        node.baseType = type;\r\n        this.nextToken();\r\n\r\n        if (this.tt == TokenType.leftBracket) {\r\n            this.nextToken();\r\n            node.parameters = [];\r\n            //@ts-ignore\r\n            while (this.tt == TokenType.integerConstant) {\r\n                node.parameters.push(<number>this.cct.value);\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.comma) break;\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.integerConstant) {\r\n                    this.pushError(\"Erwartet wird eine ganze Zahl, gefunden wurde: \" + this.cct.value);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (type != null && node.parameters.length > type.parameterDescriptions.length) {\r\n                this.pushError(\"Der Datentyp \" + type.toString() + \" hat höchstens \" + type.parameterDescriptions.length + \" Parameter.\");\r\n            }\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        }\r\n\r\n        // primary key autoincrement\r\n        // references table(column)\r\n        // not null\r\n\r\n        this.addCompletionHintHere(false, false, [\"primary key\", \"references\", \"not null\"]);\r\n\r\n        let alreadySeenKeywords: TokenType[] = [];\r\n\r\n        while ([TokenType.keywordOn, TokenType.keywordCharacter, TokenType.keywordComment, TokenType.keywordAutoincrement, TokenType.keywordKey, TokenType.keywordPrimary, TokenType.keywordNot, TokenType.keywordReferences, TokenType.keywordCollate, TokenType.keywordDefault].indexOf(this.tt) >= 0) {\r\n            if (alreadySeenKeywords.indexOf(this.tt) >= 0) {\r\n                this.pushError('Das Schlüsselwort ' + TokenTypeReadable[this.tt] + \" darf bei der Definition einer Spalte nicht öfters als ein Mal vorkommen.\");\r\n            }\r\n\r\n            alreadySeenKeywords.push(this.tt);\r\n\r\n            switch (this.tt) {\r\n                case TokenType.keywordAutoincrement:\r\n                    this.nextToken();\r\n                    node.isAutoIncrement = true;\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.equal) {\r\n                        this.nextToken();\r\n                        this.expect(TokenType.integerConstant);\r\n                    } else {\r\n                        //@ts-ignore\r\n                        if (this.tt == TokenType.comma && this.ct[1].tt == TokenType.keywordAutoincrement) {\r\n                            this.nextToken();\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.keywordPrimary:\r\n                    if (primaryKeyAlreadyDefined) this.pushError(\"In einer Tabelle darf es nur einen einzigen primary key geben.\");\r\n                    this.nextToken(); // skip \"primary\"\r\n                    if (!this.expect(TokenType.keywordKey, true)) {\r\n                        this.addCompletionHintHere(false, false, [\"key\"]);\r\n                    } else {\r\n                        this.addCompletionHintHere(false, false, [\"autoincrement, \\n\"])\r\n                    }\r\n                    node.isPrimary = true;\r\n                    break;\r\n                case TokenType.keywordReferences:\r\n                    let fki: ForeignKeyInfo = { column: node.identifier, referencesColumn: \"\", referencesTable: \"\", referencesPosition: this.getCurrentPosition() };\r\n                    node.foreignKeyInfo = fki;\r\n                    this.parseReferences(fki);\r\n                    break;\r\n                case TokenType.keywordNot:\r\n                    this.nextToken();\r\n                    if (!this.expect(TokenType.keywordNull, true)) {\r\n                        this.addCompletionHintHere(false, false, [\"null\"]);\r\n                    } else {\r\n                        this.addCompletionHintHere(false, false, [\"references\"]);\r\n                    }\r\n                    node.notNull = true;\r\n                    break;\r\n                case TokenType.keywordCollate:\r\n                    this.nextToken();\r\n                    node.collate = <string>this.cct.value;\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordCharacter:\r\n                    this.nextToken();\r\n                    this.expect(TokenType.keywordSet, true);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordDefault:\r\n                    this.nextToken();\r\n\r\n                    if (this.ct[1].tt == TokenType.leftBracket && this.ct[2].tt == TokenType.rightBracket) {\r\n                        this.nextToken();\r\n                        this.nextToken();\r\n                        this.nextToken();\r\n                        break;\r\n                    }\r\n\r\n                    node.defaultValue = <string>this.cct.value;\r\n                    if (typeof this.cct.value == \"string\") {\r\n                        node.defaultValue = \"'\" + node.defaultValue + \"'\";\r\n                    }\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.keywordNull) {\r\n                        this.nextToken();\r\n                        break;\r\n                    } else if ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.stringConstant].indexOf(this.tt) >= 0) {\r\n                        let constantType = SQLBaseType.fromConstantType(this.tt);\r\n                        if (!constantType.canCastTo(type)) {\r\n                            this.pushError(\"Die Konstante hinter 'default' passt nicht zum Datentyp der Spalte.\");\r\n                        }\r\n                        this.nextToken();\r\n                    }\r\n                    break;\r\n                case TokenType.keywordComment:\r\n                    this.nextToken(); // Skip \"comment\"\r\n                    this.expect(TokenType.stringConstant, true);\r\n                    break;\r\n                case TokenType.keywordOn:\r\n                    this.nextToken();\r\n                    this.expect([TokenType.keywordUpdate], true);\r\n                    while (!this.comesToken([TokenType.comma, TokenType.endofSourcecode, TokenType.rightBracket])) this.nextToken();\r\n                    //@ts-ignore\r\n                    if (this.lastToken.tt == TokenType.leftBracket && this.tt == TokenType.rightBracket) this.nextToken();\r\n                    break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    parseInsert(): InsertNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"insert\"\r\n\r\n        this.expect(TokenType.keywordInto, true);\r\n\r\n        let node: InsertNode = {\r\n            type: TokenType.keywordInsert,\r\n            position: startPosition,\r\n            endPosition: this.getCurrentPosition(),\r\n            valuesPosition: null,\r\n            columnsPosition: null,\r\n            symbolTable: null,\r\n            columnList: [],\r\n            values: [],\r\n            table: null\r\n        }\r\n\r\n        if (this.tt == TokenType.identifier) {\r\n            node.table = {\r\n                type: TokenType.table,\r\n                identifier: <string>this.cct.value,\r\n                alias: null,\r\n                position: this.getCurrentPosition()\r\n            }\r\n            node.columnsPosition = { line: node.table.position.line, column: node.table.position.column + node.table.position.length, length: 0 };\r\n            this.nextToken();\r\n        } else {\r\n            this.pushError(\"Hier wird der Bezeichner einer Tabelle erwartet. Gefunden wurde: \" + this.cct.value, \"error\");\r\n        }\r\n\r\n        if (this.tt == TokenType.leftBracket) {\r\n\r\n            this.nextToken();\r\n            let first: boolean = true;\r\n            //@ts-ignore\r\n            while (first || this.tt == TokenType.comma) {\r\n\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.identifier) {\r\n                    node.columnList.push({\r\n                        type: TokenType.identifier,\r\n                        identifier: this.cct.value + \"\",\r\n                        position: this.getCurrentPosition()\r\n                    })\r\n\r\n                } else {\r\n                    this.pushError(\"Erwartet wird der Bezeichner einer Spalte. Gefunden wurde: \" + this.cct.value, \"error\");\r\n                }\r\n                this.nextToken();\r\n            }\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        }\r\n\r\n        node.valuesPosition = this.getCurrentPosition();\r\n        this.expect(TokenType.keywordValues, true);\r\n\r\n        this.parseValueLists(node.values);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n    parseValueLists(values: ConstantNode[][]) {\r\n        let insideListTokens = [TokenType.keywordNull, TokenType.charConstant, TokenType.stringConstant, TokenType.booleanConstant, TokenType.floatingPointConstant, TokenType.integerConstant];\r\n\r\n        let outerFirst: boolean = true;\r\n\r\n        while (outerFirst || this.tt == TokenType.comma) {\r\n            if (!outerFirst) {\r\n                this.nextToken(); // consume comma\r\n            }\r\n            outerFirst = false;\r\n            let leftBracketPosition = this.getCurrentPosition();\r\n            if (!this.expect(TokenType.leftBracket, true)) {\r\n                break;\r\n            }\r\n            let line: ConstantNode[] = [];\r\n            let first: boolean = true;\r\n            //@ts-ignore\r\n            while (first || this.tt == TokenType.comma) {\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n                if (this.tt == TokenType.identifier){\r\n                    if(this.cct.isDoubleQuotedIdentifier) {\r\n                        this.tt = TokenType.stringConstant\r\n                    } else if((this.cct.value + \"\").toLocaleLowerCase() == \"date\"){\r\n                        this.nextToken();\r\n                    }\r\n                } \r\n\r\n                \r\n\r\n                //@ts-ignore\r\n                if (insideListTokens.indexOf(this.tt) < 0) {\r\n                    this.pushError(\"Erwartet wird eine Konstante oder null. Gefunden wurde: \" + this.cct.value, \"error\");\r\n                    this.nextToken();\r\n                } else {\r\n                    line.push({\r\n                        constantType: this.tt,\r\n                        position: this.getCurrentPosition(),\r\n                        constant: this.cct.value,\r\n                        type: TokenType.constantNode\r\n                    });\r\n                    this.nextToken();\r\n                }\r\n            }\r\n            this.expect(TokenType.rightBracket, true);\r\n            if (line.length == 0) {\r\n                this.pushError(\"Eine Zeile kann nur dann in die Tabelle eingefügt werden, wenn sie mindestens einen Spaltenwert besitzt.\", \"error\", leftBracketPosition);\r\n            } else {\r\n                values.push(line);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    parseConstant(): ConstantNode {\r\n        let constantNode: ConstantNode = {\r\n            constantType: this.tt,\r\n            position: this.getCurrentPosition(),\r\n            constant: this.cct.value,\r\n            type: TokenType.constantNode\r\n        }\r\n        this.nextToken();\r\n\r\n        return constantNode;\r\n    }\r\n\r\n    parseSelect(): SelectNode {\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"select\"\r\n\r\n        let columnListStart: TextPosition = {\r\n            line: startPosition.line,\r\n            column: startPosition.column + 6,\r\n            length: 1\r\n        };\r\n\r\n        let node: SelectNode = {\r\n            type: TokenType.keywordSelect,\r\n            position: startPosition,\r\n            endPosition: this.getCurrentPosition(),\r\n            symbolTable: null,\r\n            columnList: [],\r\n            fromNode: null,\r\n            whereNode: null,\r\n            parentStatement: null\r\n        }\r\n\r\n        node.columnList = this.parseColumnList([TokenType.keywordFrom, TokenType.semicolon, TokenType.endofSourcecode], true);\r\n\r\n        let columnListKeywordArray = [\"distinct\", \"as\", \"*\"];\r\n        if (node.columnList.findIndex(c => c.type == TokenType.allColumns) >= 0) {\r\n            columnListKeywordArray.pop();\r\n        }\r\n\r\n        this.module.addCompletionHint(columnListStart, this.getCurrentPositionPlus(1), true, true, columnListKeywordArray)\r\n\r\n        let hasFrom = this.comesToken(TokenType.keywordFrom, true);\r\n        let fromListKeywordArray = [\"join\", \"left\", \"right\", \"inner\", \"outer\", \"natural\", \"on\", \"as\", \", \"];\r\n        // parse from ...\r\n        if (!hasFrom) {\r\n            columnListKeywordArray.unshift(\"from\");\r\n        } else {\r\n            node.fromStartPosition = { line: this.lastToken.position.line, column: this.lastToken.position.column + this.lastToken.position.length, length: 0 };\r\n\r\n            let dontHint: string[] = [];\r\n            node.fromNode = this.parseTableOrSubQuery(dontHint);\r\n\r\n            fromListKeywordArray.splice(fromListKeywordArray.indexOf(this.lastToken.value + \"\"), 1);\r\n\r\n            let hintEndPosition = this.getCurrentPositionPlus(2);\r\n            if (this.comesToken(TokenType.semicolon)) {\r\n                hintEndPosition = this.getCurrentPosition();\r\n            }\r\n\r\n            this.module.addCompletionHint(node.fromStartPosition, hintEndPosition, false, true, fromListKeywordArray, dontHint)\r\n            node.fromEndPosition = this.getCurrentPosition();\r\n        }\r\n\r\n        // parse where...\r\n\r\n        let whereKeywordArray = [\"like\"];\r\n        if (this.tt == TokenType.keywordWhere) {\r\n            let position = this.getCurrentPosition();\r\n            let whereStart = this.getCurrentPosition();\r\n            this.nextToken();\r\n            node.whereNode = this.parseTerm();\r\n            this.module.addCompletionHint(whereStart, this.getCurrentPositionPlus(4), true, true, whereKeywordArray)\r\n            // if (node.whereNode != null) node.whereNode.position = position;\r\n        } else {\r\n            fromListKeywordArray.push(\"where\");\r\n        }\r\n\r\n        let groupKeywordArray = [];\r\n        if (this.tt == TokenType.keywordGroup) {\r\n            let groupStart = this.getCurrentPosition();\r\n            node.groupByNode = this.parseGroupBy();\r\n            this.module.addCompletionHint(groupStart, this.getCurrentPosition(), true, true, groupKeywordArray);\r\n        } else {\r\n            whereKeywordArray.push(\"group by\");\r\n        }\r\n\r\n        if (this.tt == TokenType.keywordOrder) {\r\n            let orderStart = this.getCurrentPosition();\r\n            node.orderByNode = this.parseOrderBy();\r\n            this.module.addCompletionHint(orderStart, this.getCurrentPosition(), true, true, [\"asc\", \"desc\"]);\r\n        } else {\r\n            whereKeywordArray.push(\"order by\");\r\n            groupKeywordArray.push(\"order by\");\r\n        }\r\n\r\n        if (this.tt == TokenType.keywordLimit) {\r\n            node.limitNode = this.parseLimit();\r\n        }\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n        node.endPosition.column += 3;\r\n\r\n        return node;\r\n    }\r\n\r\n    parseLimit(): LimitNode {\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n        let numberOfRows: TermNode = this.parseTerm();\r\n        let ln: LimitNode = {\r\n            type: TokenType.keywordLimit,\r\n            position: position,\r\n            numberOfRows: numberOfRows\r\n        }\r\n        if (this.tt == TokenType.keywordOffset) {\r\n            this.nextToken();\r\n            ln.offset = this.parseTerm();\r\n        }\r\n        return ln;\r\n    }\r\n\r\n    parseGroupBy(): GroupByNode {\r\n        let position = this.getCurrentPosition();\r\n        this.expect(TokenType.keywordGroup, true);\r\n        this.expect(TokenType.keywordBy, true);\r\n        let gbn: GroupByNode = {\r\n            type: TokenType.keywordGroup,\r\n            columnList: [],\r\n            position: position\r\n        }\r\n        let tokenTypesAfterGroupBy = [TokenType.keywordHaving, TokenType.keywordSelect, TokenType.keywordOrder, TokenType.keywordLimit, TokenType.rightBracket, TokenType.semicolon];\r\n        gbn.columnList = this.parseColumnList(tokenTypesAfterGroupBy, false).map(columnNode => columnNode.term);\r\n        if (this.tt == TokenType.keywordHaving) {\r\n            this.nextToken();\r\n            gbn.having = this.parseTerm();\r\n        }\r\n        return gbn;\r\n    }\r\n\r\n    parseOrderBy(): OrderByNode[] {\r\n        this.expect(TokenType.keywordOrder, true);\r\n        this.expect(TokenType.keywordBy, true);\r\n\r\n        let obnList: OrderByNode[] = [];\r\n        let first: boolean = true;\r\n\r\n        do {\r\n            if (first) {\r\n                first = false;\r\n            } else {\r\n                this.expect(TokenType.comma, true);\r\n            }\r\n            let column: TermNode = this.parseTerm();\r\n            let obn: OrderByNode = {\r\n                type: TokenType.keywordOrder,\r\n                position: this.getCurrentPosition(),\r\n                column: column\r\n            }\r\n            if ([TokenType.keywordAscending, TokenType.keywordDescending].indexOf(this.tt) >= 0) this.nextToken();\r\n            if (this.tt == TokenType.keywordNulls) {\r\n                this.nextToken();\r\n                this.expect([TokenType.keywordFirst, TokenType.keywordLast], true);\r\n            }\r\n            obnList.push(obn);\r\n        } while (this.tt == TokenType.comma);\r\n\r\n        return obnList;\r\n    }\r\n\r\n    parseTableOrSubQuery(dontHint: string[]): TableOrSubqueryNode {\r\n\r\n        let leftSide: TableOrSubqueryNode = this.parseAtomicTableOrSubQuery(dontHint);\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        while (this.parseJoinOperator()) {\r\n\r\n            let rightSide: TableOrSubqueryNode = this.parseAtomicTableOrSubQuery(dontHint);\r\n\r\n            leftSide = {\r\n                type: TokenType.keywordJoin,\r\n                firstOperand: leftSide,\r\n                secondOperand: rightSide,\r\n                position: position,\r\n            }\r\n\r\n            if (this.tt == TokenType.keywordOn) {\r\n                leftSide.on = this.parseTerm();\r\n            }\r\n\r\n        }\r\n\r\n        return leftSide;\r\n\r\n    }\r\n\r\n    parseJoinOperator(): boolean {\r\n        if (this.tt == TokenType.comma) {\r\n            this.nextToken();\r\n            return true;\r\n        }\r\n        if (this.tt == TokenType.keywordNatural) this.nextToken();\r\n        switch (this.tt) {\r\n            case TokenType.keywordLeft:\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.keywordOuter) this.nextToken();\r\n                return this.expect(TokenType.keywordJoin, true);\r\n            case TokenType.keywordInner:\r\n            case TokenType.keywordCross:\r\n                this.nextToken();\r\n                return this.expect(TokenType.keywordJoin, true);\r\n            case TokenType.keywordJoin:\r\n                this.nextToken();\r\n                return true;\r\n            default: return false;\r\n        }\r\n    }\r\n\r\n    parseAtomicTableOrSubQuery(dontHint: string[]): TableOrSubqueryNode {\r\n\r\n        if (!this.expect([TokenType.identifier, TokenType.leftBracket], false)) {\r\n            return null;\r\n        }\r\n\r\n        if (this.tt == TokenType.leftBracket) {\r\n            this.nextToken();\r\n            let ret: TableOrSubqueryNode;\r\n            //@ts-ignore\r\n            if (this.tt == TokenType.keywordSelect) {\r\n                let position = this.getCurrentPosition();\r\n                let selectStatement = this.parseSelect();\r\n                ret = {\r\n                    type: TokenType.subquery,\r\n                    alias: null,\r\n                    position: position,\r\n                    query: selectStatement\r\n                }\r\n            } else {\r\n                ret = this.parseTableOrSubQuery(dontHint);\r\n            }\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n\r\n            //@ts-ignore\r\n            if (this.tt == TokenType.keywordAs && ret.type == TokenType.subquery) {\r\n                this.nextToken();\r\n                if (this.expect(TokenType.identifier, false)) {\r\n                    ret.alias = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    dontHint.push(ret.alias);\r\n                }\r\n            }\r\n\r\n            return ret;\r\n        }\r\n\r\n        if (this.tt == TokenType.identifier) {\r\n            let node: TableNode = {\r\n                type: TokenType.table,\r\n                identifier: <string>this.cct.value,\r\n                alias: null,\r\n                position: this.getCurrentPosition()\r\n            }\r\n            dontHint.push(node.identifier);\r\n            this.nextToken();\r\n\r\n            //@ts-ignore\r\n            if (this.tt == TokenType.keywordAs) {\r\n                this.nextToken();\r\n                if (this.expect(TokenType.identifier, false)) {\r\n                    node.alias = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    dontHint.push(node.alias);\r\n                }\r\n\r\n            }\r\n\r\n            return node;\r\n        }\r\n\r\n    }\r\n\r\n    parseColumnList(tokenTypesAfterListEnd: TokenType[], allowAliases: boolean): ColumnNode[] {\r\n        let columns: ColumnNode[] = [];\r\n\r\n        while ([TokenType.stringConstant, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.booleanConstant,\r\n        TokenType.identifier, TokenType.multiplication, TokenType.leftBracket, TokenType.keywordDistinct].indexOf(this.tt) >= 0) {\r\n            if (this.tt == TokenType.multiplication) {\r\n                columns.push({\r\n                    term: null,\r\n                    alias: null,\r\n                    distinct: false,\r\n                    position: this.getCurrentPosition(),\r\n                    type: TokenType.allColumns\r\n                });\r\n                this.nextToken();\r\n            } else {\r\n                let distinct = this.comesToken(TokenType.keywordDistinct, true);\r\n                let columnTerm = this.parseTerm();\r\n                if (columnTerm != null) {\r\n                    let column: ColumnNode = {\r\n                        type: TokenType.column,\r\n                        term: columnTerm,\r\n                        distinct: distinct,\r\n                        position: columnTerm.position\r\n                    }\r\n                    columns.push(column);\r\n                    if (this.comesToken(TokenType.keywordAs)) {\r\n                        this.nextToken();\r\n                        if (this.expect(TokenType.identifier, false)) {\r\n                            column.alias = \"\" + this.cct.value;\r\n                        }\r\n                        this.nextToken();\r\n                    }\r\n                }\r\n            }\r\n            if (tokenTypesAfterListEnd.indexOf(this.tt) >= 0 || this.isEnd()) {\r\n                break;\r\n            }\r\n            this.expect(TokenType.comma, true);\r\n        }\r\n\r\n        if (columns.length == 0) {\r\n            this.pushError(\"Es fehlt die kommaseparierte Liste der gewünschten Spalten.\", \"error\");\r\n        }\r\n\r\n        return columns;\r\n    }\r\n\r\n\r\n    parseTerm(): TermNode {\r\n        return this.parseTermBinary(0);\r\n    }\r\n\r\n    parseTermBinary(precedence: number): TermNode {\r\n\r\n        let left: TermNode;\r\n        if (precedence < Parser.operatorPrecedence.length - 1) {\r\n            left = this.parseTermBinary(precedence + 1);\r\n        } else {\r\n            left = this.parseUnary();\r\n        }\r\n\r\n        let operators = Parser.operatorPrecedence[precedence];\r\n\r\n        if (left == null || operators.indexOf(this.tt) < 0) {\r\n            return left;\r\n        }\r\n\r\n        let first = true;\r\n\r\n        while (first || operators.indexOf(this.tt) >= 0) {\r\n\r\n            let operator: TokenType = this.tt;\r\n\r\n            first = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            this.nextToken();\r\n            let right: TermNode;\r\n            if (precedence < Parser.operatorPrecedence.length - 1) {\r\n                right = this.parseTermBinary(precedence + 1);\r\n            } else {\r\n                right = this.parseUnary();\r\n            }\r\n\r\n            left = {\r\n                type: TokenType.binaryOp,\r\n                position: position,\r\n                operator: operator,\r\n                firstOperand: left,\r\n                secondOperand: right\r\n            };\r\n\r\n\r\n        }\r\n\r\n        return left;\r\n\r\n    }\r\n\r\n\r\n    // -, not, this, super, a.b.c[][].d, a.b(), b() (== this.b()), super.b(), super()\r\n    parseUnary(): TermNode {\r\n\r\n        let term: TermNode;\r\n        let position: TextPosition = this.getCurrentPosition();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n                return this.parseBracket();\r\n            case TokenType.minus:\r\n                // case TokenType.not:\r\n                position = position;\r\n                let tt1 = this.tt;\r\n                this.nextToken();\r\n                term = this.parseUnary();\r\n\r\n                return {\r\n                    type: TokenType.unaryOp,\r\n                    position: position,\r\n                    operand: term,\r\n                    operator: tt1\r\n                };\r\n\r\n            case TokenType.integerConstant:\r\n            case TokenType.charConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n                term = {\r\n                    type: TokenType.constantNode,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: this.tt,\r\n                    constant: this.cct.value\r\n                };\r\n                let isStringConstant = this.tt == TokenType.stringConstant;\r\n                this.nextToken();\r\n\r\n                if (isStringConstant) return this.parseDotOrArrayChains(term);\r\n\r\n                return term;\r\n            case TokenType.identifier: // attribute of current class or local variable\r\n\r\n                let identifier1 = <string>this.cct.value;\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    let rightBracketPosition = parameters.rightBracketPosition;\r\n\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position1,\r\n                        rightBracketPosition: rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        identifier: identifier1,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.identifier,\r\n                        identifier: identifier1,\r\n                        position: position\r\n                    }\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.dot) {\r\n                        let position = this.getCurrentPosition();\r\n                        this.nextToken();\r\n                        this.expect(TokenType.identifier, false);\r\n                        let secondIdentifier: IdentifierNode = {\r\n                            type: TokenType.identifier,\r\n                            identifier: <string>this.cct.value,\r\n                            position: this.getCurrentPosition()\r\n                        }\r\n                        this.nextToken();\r\n                        term = {\r\n                            type: TokenType.dot,\r\n                            identifierLeft: <IdentifierNode>term,\r\n                            identifierRight: secondIdentifier,\r\n                            position: position\r\n                        }\r\n\r\n                    } else if ([TokenType.isNull, TokenType.isNotNull].indexOf(this.tt) >= 0) {\r\n                        term = {\r\n                            type: TokenType.unaryOp,\r\n                            operand: term,\r\n                            operator: this.tt,\r\n                            position: position\r\n                        };\r\n                        this.nextToken();\r\n                    }\r\n                }\r\n\r\n                return term;\r\n            default:\r\n                this.pushError(\"Erwartet wird eine Variable, ein Methodenaufruf oder eine Konstante. Gefunden wurde: \" + this.cct.value);\r\n                return null;\r\n        }\r\n\r\n    }\r\n\r\n    parseList(): ListNode {\r\n        let node: ListNode = {\r\n            type: TokenType.list,\r\n            position: this.getCurrentPosition(),\r\n            elements: []\r\n        }\r\n\r\n        let constantTypes = [TokenType.charConstant, TokenType.stringConstant, TokenType.booleanConstant, TokenType.floatingPointConstant, TokenType.integerConstant];\r\n\r\n        while (constantTypes.indexOf(this.tt) >= 0) {\r\n            node.elements.push({\r\n                type: TokenType.constantNode,\r\n                constant: this.cct.value,\r\n                constantType: this.tt,\r\n                position: this.cct.position\r\n            });\r\n            this.nextToken();\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            }\r\n            this.nextToken();\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    parseBracket(): TermNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n        let tokenBeforeBracket = this.lastToken;\r\n        this.nextToken(); // consume (\r\n\r\n        if (this.tt == TokenType.keywordSelect) {\r\n            let selectNode = this.parseSelect();\r\n            this.expect(TokenType.rightBracket, true);\r\n            return selectNode;\r\n        } else if ([TokenType.comma, TokenType.rightBracket].indexOf(this.ct[1].tt) >= 0 &&\r\n            [TokenType.keywordIn, TokenType.keywordNotIn].indexOf(tokenBeforeBracket.tt) >= 0) {\r\n            let listNode = this.parseList();\r\n            this.expect(TokenType.rightBracket, true);\r\n            return listNode;\r\n        } else {\r\n            let term = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            let bracketsNode: BracketsNode = {\r\n                position: rightBracketPosition,\r\n                type: TokenType.rightBracket,\r\n                termInsideBrackets: term\r\n            }\r\n\r\n\r\n            return bracketsNode;\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    parseMethodCallParameters(): { rightBracketPosition: TextPosition, nodes: TermNode[], commaPositions: TextPosition[] } {\r\n        // Assumption: current token is (        \r\n        this.nextToken();\r\n        if (this.tt == TokenType.rightBracket) {\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n            return { rightBracketPosition: rightBracketPosition, nodes: [], commaPositions: [] };\r\n        }\r\n\r\n        let parameters: TermNode[] = [];\r\n        let commaPositions: TextPosition[] = [];\r\n\r\n        while (true) {\r\n            let pos = this.pos;\r\n\r\n            if (this.tt == TokenType.multiplication) {\r\n                this.nextToken();\r\n                parameters.push({\r\n                    type: TokenType.allColumns,\r\n                    position: this.getCurrentPosition(),\r\n                });\r\n            } else {\r\n                let parameter = this.parseTerm();\r\n                if (parameter != null) {\r\n                    parameters.push(parameter);\r\n                }\r\n            }\r\n\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            } else {\r\n                commaPositions.push(this.getCurrentPosition());\r\n                this.nextToken(); // consume comma\r\n            }\r\n\r\n            // emergency-step:\r\n            if (this.pos == pos) {\r\n                this.nextToken();\r\n            }\r\n\r\n        }\r\n\r\n        let position = this.getCurrentPosition();\r\n        let rightBracketFound = this.expect(TokenType.rightBracket, true);\r\n\r\n        return { rightBracketPosition: rightBracketFound ? position : null, nodes: parameters, commaPositions: commaPositions };\r\n\r\n    }\r\n\r\n    parseDotOrArrayChains(term: TermNode): TermNode {\r\n\r\n        if (term == null) return null;\r\n\r\n        while (this.comesToken([TokenType.dot, TokenType.leftSquareBracket])) {\r\n            if (this.tt == TokenType.dot) {\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.identifier) {\r\n                    this.pushError(\"Erwartet wird der Bezeichner eines Attributs oder einer Methode, gefunden wurde: \" + this.cct.value);\r\n                    return term;\r\n                }\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position,\r\n                        rightBracketPosition: parameters.rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        identifier: identifier,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                }\r\n                // else {\r\n                //     term = {\r\n                //         type: TokenType.pushAttribute,\r\n                //         position: position,\r\n                //         identifier: identifier,\r\n                //         object: term\r\n                //     }\r\n                // }\r\n\r\n            }\r\n        }\r\n\r\n        return term;\r\n    }\r\n\r\n\r\n}","import { ColumnStructure, TableStructure } from \"../../tools/DatabaseTools.js\";\r\nimport { SQLType, SQLBaseType, SQLDerivedType } from \"./SQLTypes.js\";\r\n\r\n\r\nexport class Column {\r\n\r\n    references: Column;\r\n    fromColumnStructure?: ColumnStructure;\r\n    notNull: boolean;\r\n\r\n    constructor(public identifier: string, public type: SQLType, public table: Table, public isPrimaryKey: boolean, public isNullable: boolean, public defaultValue: string, public isAutoIncrement){\r\n\r\n    }\r\n\r\n    static fromColumnStructure(cs: ColumnStructure, table: Table): Column {\r\n\r\n        let regex1 = /^(\\w*) *(?:\\((.*)\\))?.*$/;\r\n\r\n        let typeMatch1 = cs.completeTypeSQL.match(regex1);\r\n        let baseTypeIdentifier: string = typeMatch1[1];\r\n        let commaSeparatedParameters: string = typeMatch1[2];\r\n\r\n        let parameterValues: number[] = [];\r\n        if(commaSeparatedParameters != null){\r\n            parameterValues = commaSeparatedParameters.split(',').map(v => parseInt(v.trim()));           \r\n        }\r\n\r\n        let type: SQLType = SQLBaseType.getBaseType(baseTypeIdentifier);\r\n        if(parameterValues.length > 0 && type != null){\r\n            type = new SQLDerivedType(<SQLBaseType>type, parameterValues);\r\n        }\r\n\r\n        let column = new Column(cs.name, type, table, cs.isPrimaryKey, !cs.isPrimaryKey, cs.defaultValue, cs.isAutoIncrement);\r\n        column.notNull = cs.notNull;\r\n        \r\n        column.fromColumnStructure = cs;\r\n\r\n        return column;\r\n    }\r\n\r\n}\r\n\r\nexport class Table {\r\n    \r\n    public columns: Column[] = [];\r\n\r\n    public size: number;\r\n\r\n    constructor(public identifier: string){\r\n\r\n    }\r\n\r\n    private static fromTableStructure(ts: TableStructure): Table {\r\n        let table: Table = new Table(ts.name);\r\n        table.columns = ts.columns.map( column => Column.fromColumnStructure(column, table));\r\n        table.size = ts.size;\r\n        return table;\r\n    }\r\n\r\n    static fromTableStructureList(tsList: TableStructure[]): Table[]{\r\n\r\n        if(tsList == null) tsList = [];\r\n\r\n        let tables: Table[] = tsList.map(ts => Table.fromTableStructure(ts));\r\n\r\n        let columnStructureToColumnMap: Map<ColumnStructure, Column> = new Map();\r\n        for(let table of tables){\r\n            for(let column of table.columns){\r\n                columnStructureToColumnMap.set(column.fromColumnStructure, column);\r\n            }\r\n        }\r\n\r\n        for(let table of tables){\r\n            for(let column of table.columns){\r\n                let referencedCs = column.fromColumnStructure.references;\r\n                if(referencedCs != null){\r\n                    let referencedColumn = columnStructureToColumnMap.get(referencedCs);\r\n                    column.references = referencedColumn;\r\n                }\r\n            }\r\n        }\r\n\r\n        return tables;\r\n    }\r\n\r\n}","import { DatabaseStructure } from \"../../tools/DatabaseTools.js\";\r\nimport { TextPosition } from \"../lexer/Token.js\";\r\nimport { Table, Column } from \"./SQLTable.js\";\r\n\r\nexport type Symbol = {\r\n    identifier: string;\r\n    table?: Table;\r\n    column?: Column;\r\n    tableAlias?: string;\r\n    posOfDefinition: TextPosition;\r\n    referencedOnPositions: TextPosition[];\r\n}\r\n\r\nexport class SymbolTable {\r\n    parent: SymbolTable; // SymbolTable of parent scope\r\n    positionFrom: TextPosition;\r\n    positionTo: TextPosition;\r\n\r\n    childSymbolTables: SymbolTable[] = [];\r\n\r\n    private symbols: Map<string, Symbol[]> = new Map();\r\n    symbolList: Symbol[] = [];\r\n\r\n    constructor(parentSymbolTable: SymbolTable, positionFrom: TextPosition, positionTo: TextPosition) {\r\n\r\n        this.parent = parentSymbolTable;\r\n\r\n        this.positionFrom = positionFrom;\r\n        this.positionTo = positionTo;\r\n\r\n\r\n        if (this.parent != null) {\r\n            this.parent.childSymbolTables.push(this);\r\n        }\r\n    }\r\n\r\n    extractDatabaseStructure(databaseStructure: DatabaseStructure) {\r\n        for (let table of Table.fromTableStructureList(databaseStructure?.tables)) {\r\n\r\n            this.storeTableSymbols(table);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    storeTableSymbols(table: Table){\r\n        this.storeSymbol({\r\n            identifier: table.identifier,\r\n            posOfDefinition: null,\r\n            referencedOnPositions: [],\r\n            table: table\r\n        });\r\n\r\n        for (let column of table.columns) {\r\n            this.storeSymbol({\r\n                identifier: column.identifier,\r\n                posOfDefinition: null,\r\n                referencedOnPositions: [],\r\n                column: column\r\n            });\r\n        }\r\n    }\r\n\r\n    storeSymbol(symbol: Symbol) {\r\n        let list: Symbol[] = this.symbols.get(symbol.identifier.toLowerCase());\r\n        if (list == null) {\r\n            list = [symbol];\r\n            this.symbols.set(symbol.identifier.toLowerCase(), list);\r\n        } else {\r\n            list.push(symbol);\r\n        }\r\n        this.symbolList.push(symbol);\r\n    }\r\n\r\n    findTableAtPosition(line: number, column: number): SymbolTable {\r\n\r\n        if (!this.containsPosition(line, column)) {\r\n            return null;\r\n        }\r\n\r\n        let shortestSymbolTableContainingPosition = null;\r\n        let shortestPosition = 10000000;\r\n\r\n        for (let st of this.childSymbolTables) {\r\n            if (st.containsPosition(line, column)) {\r\n                let st1 = st.findTableAtPosition(line, column);\r\n                if (st1.positionTo.line - st1.positionFrom.line < shortestPosition) {\r\n                    shortestSymbolTableContainingPosition = st1;\r\n                    shortestPosition = st1.positionTo.line - st1.positionFrom.line;\r\n                }\r\n            }\r\n            // if(st.containsPosition(line, column) && st.positionTo.line - st.positionFrom.line < shortestPosition){\r\n            //     shortestSymbolTableContainingPosition = st;\r\n            //     shortestPosition = st.positionTo.line - st.positionFrom.line;\r\n            // }\r\n        }\r\n\r\n        if (shortestSymbolTableContainingPosition != null) {\r\n            return shortestSymbolTableContainingPosition;\r\n        } else {\r\n            return this;\r\n        }\r\n\r\n    }\r\n\r\n    containsPosition(line: number, column: number) {\r\n        if (line < this.positionFrom.line || line > this.positionTo.line) {\r\n            return false;\r\n        }\r\n\r\n        if (line == this.positionFrom.line && column < this.positionFrom.column) return false;\r\n        if (line == this.positionTo.line && column > this.positionTo.column + 1) return false;\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    findTable(identifier: string): Table {\r\n        let tables = this.findTables(identifier);\r\n        if(tables.length == 0) return null;\r\n        return tables[0].table;\r\n    }\r\n\r\n    findTables(identifier: string): Symbol[] {\r\n\r\n        let symbolTable: SymbolTable = this;\r\n        while(symbolTable != null){\r\n\r\n            let symbols = symbolTable.symbols.get(identifier.toLowerCase());\r\n            if(symbols != null){\r\n                symbols = symbols.filter(s => s.table != null);\r\n                if(symbols.length > 0){\r\n                    return symbols;\r\n                }\r\n            }\r\n\r\n            symbolTable = symbolTable.parent;\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    findColumn(identifier: string): Symbol[] {\r\n\r\n        let symbolTable: SymbolTable = this;\r\n        while(symbolTable != null){\r\n\r\n            let symbols = symbolTable.symbols.get(identifier.toLowerCase());\r\n            if(symbols != null){\r\n                symbols = symbols.filter(s => s.column != null);\r\n                if(symbols.length > 0){\r\n                    return symbols;\r\n                }\r\n            }\r\n\r\n            symbolTable = symbolTable.parent;\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { SQLBaseType, SQLType } from \"./SQLTypes.js\";\r\n\r\nexport class SQLMethodParameter {\r\n    type: SQLType;\r\n    constructor(public identifier: string, type: string){\r\n        this.type = SQLBaseType.getBaseType(type);\r\n    }\r\n}\r\n\r\nexport class SQLMethod {\r\n    acceptsStarParameter: boolean = false;\r\n    public returnType: SQLType;\r\n    constructor(public identifier: string, public isAggregating: boolean, returnType: string, public parameters: SQLMethodParameter[]){\r\n        this.returnType = SQLBaseType.getBaseType(returnType);\r\n    }\r\n\r\n}\r\n\r\nexport class SQLMethodStore {\r\n\r\n    static instance: SQLMethodStore;\r\n    public methods: SQLMethod[] = [];\r\n\r\n    static getInstance():SQLMethodStore {\r\n        if(this.instance == null){\r\n            this.instance = new SQLMethodStore();\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    constructor(){\r\n        this.pushOneParameterMethod(\"max\" ,\"integer\", \"integer\");\r\n        this.pushOneParameterMethod(\"max\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"min\" ,\"integer\", \"integer\");\r\n        this.pushOneParameterMethod(\"min\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"avg\" ,\"integer\", \"integer\");\r\n        this.pushOneParameterMethod(\"avg\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"sum\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"sum\" ,\"integer\", \"integer\");\r\n\r\n        let countMethod = new SQLMethod(\"count\", true, \"integer\", [new SQLMethodParameter(\"spalte\", \"text\")]);\r\n        countMethod.acceptsStarParameter = true;\r\n        this.methods.push(countMethod);\r\n    }\r\n    \r\n    getMethods(identifier: string){\r\n        return this.methods.filter(m => m.identifier == identifier.toLowerCase());\r\n    }\r\n\r\n\r\n    pushOneParameterMethod(identifier: string, returnType: string, parameterType: string){\r\n        this.methods.push(new SQLMethod(identifier, true, returnType, [new SQLMethodParameter(\"spalte\", parameterType)]));\r\n\r\n    }\r\n}","export function hash(s: string){\r\n    let hash: number = 0;\r\n    let chr: number;\r\n    for (let i = 0; i < s.length; i++) {\r\n      chr   = s.charCodeAt(i);\r\n      hash  = ((hash << 5) - hash) + chr;\r\n      hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n\r\nexport function escapeHtml(unsafe: string): string {\r\n  return unsafe\r\n      .replace(/['\"]+/g, '')\r\n       .replace(/&/g, \"&amp;\")\r\n       .replace(/</g, \"&lt;\")\r\n       .replace(/>/g, \"&gt;\")\r\n       .replace(/\"/g, \"&quot;\")\r\n       .replace(/'/g, \"&#039;\");\r\n}\r\n\r\nexport function dateToString(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth() + 1)}.${date.getFullYear()}, ${twoDez(date.getHours())}:${twoDez(date.getMinutes())}`;\r\n}\r\n\r\nexport function dateToStringWithoutTime(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth())}.${date.getFullYear()}`;\r\n}\r\n\r\nfunction twoDez(z: number):string {\r\n  if(z < 10) return \"0\" + z;\r\n  return \"\" + z;\r\n}\r\n\r\nexport function stringToDate(text: string): Date {\r\n\r\n  let match = text.match(/^(\\d{2})\\.(\\d{2})\\.(\\d{4}), (\\d{2}):(\\d{2})$/);\r\n\r\n  let date: Date = new Date(Number.parseInt(match[3]), Number.parseInt(match[2]), Number.parseInt(match[1]), Number.parseInt(match[4]), Number.parseInt(match[5]) );\r\n\r\n  return date;\r\n}\r\n\r\nexport function stringWrap(s: string, length: number ): string{\r\n  return s.replace(\r\n    new RegExp(`(?![^\\\\n]{1,${length}}$)([^\\\\n]{1,${length}})\\\\s`, 'g'), '$1\\n'\r\n  );\r\n} \r\n\r\nexport function formatAsJavadocComment(s: string, indent: number|string = \"\"): string {\r\n  let indentString = \"\";\r\n\r\n  if(typeof indent == \"string\"){\r\n    indentString = indent;\r\n  } else {\r\n    for(let i = 0; i < indent; i++){\r\n      indentString += \" \";\r\n    }\r\n  }\r\n\r\n  s = stringWrap(s, 60);\r\n  if(s.length > 0) s = \"\\n\" + s;\r\n  s = indentString + \"/**\" + s.replace(/\\n/g, \"\\n\" + indentString + \" * \") + \"\\n\" + indentString + \" */\";\r\n  return s;\r\n}\r\n\r\n\r\nexport function isDate(inputText: string) {\r\n\r\n      if (inputText == null || typeof inputText != 'string') return false;\r\n\r\n      // var dateformat = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/;\r\n      var dateformat = /^\\d{4}[\\/\\-](0?[1-9]|1[012])[\\/\\-](0?[1-9]|[12][0-9]|3[01])$/;\r\n      // Match the date format through regular expression\r\n      if (inputText.match(dateformat)) {\r\n          //Test which seperator is used '/' or '-'\r\n          var opera1 = inputText.split('/');\r\n          var opera2 = inputText.split('-');\r\n          var lopera1 = opera1.length;\r\n          var lopera2 = opera2.length;\r\n          // Extract the string into month, date and year\r\n          if (lopera1 > 1) {\r\n              var pdate = inputText.split('/');\r\n          }\r\n          else if (lopera2 > 1) {\r\n              var pdate = inputText.split('-');\r\n          }\r\n          if (pdate.length != 3) return false;\r\n          var dd = parseInt(pdate[2]);\r\n          var mm = parseInt(pdate[1]);\r\n          var yy = parseInt(pdate[0]);\r\n          // Create list of days of a month [assume there is no leap year by default]\r\n          var ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n          if (mm == 1 || mm > 2) {\r\n              if (dd > ListofDays[mm - 1]) {\r\n                  return false;\r\n              }\r\n          }\r\n          if (mm == 2) {\r\n              var lyear = false;\r\n              if ((!(yy % 4) && yy % 100) || !(yy % 400)) {\r\n                  lyear = true;\r\n              }\r\n              if ((lyear == false) && (dd >= 29)) {\r\n                  return false;\r\n              }\r\n              if ((lyear == true) && (dd > 29)) {\r\n                  return false;\r\n              }\r\n              return true;\r\n          }\r\n\r\n          return true;\r\n\r\n      }\r\n      else {\r\n          return false;\r\n      }\r\n  }\r\n\r\n  export function isDateTime(inputText: string) {\r\n\r\n      if (inputText == null || typeof inputText != 'string') return false;\r\n\r\n      // var dateformat = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/;\r\n      var dateformat = /^\\d{4}[\\-](0[1-9]|1[012])[\\-](0[1-9]|[12][0-9]|3[01]) ([01][1-9]|2[0123]):([0-5][0-9]):([0-5][0-9])$/;\r\n      // Match the date format through regular expression\r\n      if (inputText.match(dateformat)) {\r\n          var splitStr = inputText.split(' ');\r\n          var dateStr = splitStr[0];\r\n          //var timeStr = splitStr[1];\r\n\r\n          if (dateStr.length != 10) return false;\r\n          var dd = parseInt(dateStr.substring(8,10));\r\n          var mm = parseInt(dateStr.substring(5, 7));\r\n          var yy = parseInt(dateStr.substring(0, 4));\r\n          // Create list of days of a month [assume there is no leap year by default]\r\n          var ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n          if (mm == 1 || mm > 2) {\r\n              if (dd > ListofDays[mm - 1]) {\r\n                  return false;\r\n              }\r\n          }\r\n          if (mm == 2) {\r\n              var lyear = false;\r\n              if ((!(yy % 4) && yy % 100) || !(yy % 400)) {\r\n                  lyear = true;\r\n              }\r\n              if ((lyear == false) && (dd >= 29)) {\r\n                  return false;\r\n              }\r\n              if ((lyear == true) && (dd > 29)) {\r\n                  return false;\r\n              }\r\n              return true;\r\n          }\r\n\r\n          return true;\r\n\r\n      }\r\n      else {\r\n          return false;\r\n      }\r\n  }\r\n","import { DatabaseTool } from \"../../tools/DatabaseTools.js\";\r\nimport { TextPosition, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { CompletionHint, Module } from \"./Module.js\";\r\nimport { Symbol, SymbolTable } from \"./SymbolTable.js\";\r\nimport { AlterTableNode, ASTNode, BinaryOpNode, CreateTableNode, DeleteNode, DotNode, DropTableNode, IdentifierNode, InsertNode, MethodcallNode, SelectNode, TableOrSubqueryNode, TermNode, UpdateNode } from \"./Ast.js\";\r\nimport { Error, ErrorLevel, QuickFix } from \"../lexer/Lexer.js\";\r\nimport { Column, Table } from \"./SQLTable.js\";\r\nimport { SQLBaseType, SQLType } from \"./SQLTypes.js\";\r\nimport { SQLMethodStore } from \"./SQLMethods.js\";\r\nimport { isDate, isDateTime } from \"../../tools/StringTools.js\";\r\n\r\n\r\nexport class SymbolResolver {\r\n\r\n    symbolTableStack: SymbolTable[] = [];\r\n    errorList: Error[];\r\n    module: Module;\r\n    databaseTool: DatabaseTool;\r\n    tables: Table[];\r\n\r\n    constructor(databaseTool: DatabaseTool) {\r\n        this.databaseTool = databaseTool;\r\n        this.tables = Table.fromTableStructureList(databaseTool.databaseStructure?.tables);\r\n    }\r\n\r\n    start(module: Module) {\r\n        this.module = module;\r\n        this.symbolTableStack = [];\r\n        this.errorList = [];\r\n\r\n        module.mainSymbolTable = new SymbolTable(null, { column: 0, line: 0, length: 0 }, { column: 0, line: 100000, length: 0 })\r\n\r\n        this.symbolTableStack.push(module.mainSymbolTable);\r\n\r\n        for (let statement of this.module.sqlStatements) {\r\n\r\n            let errorsBeforeStatement = this.errorList.length;\r\n\r\n            let astNode = statement.ast;\r\n            if (astNode == null) continue;\r\n\r\n            switch (astNode.type) {\r\n                case TokenType.keywordSelect:\r\n                    this.resolveSelect(astNode);\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n                case TokenType.keywordInsert:\r\n                    this.resolveInsert(astNode);\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n                case TokenType.keywordCreate:\r\n                    this.resolveCreateTable(astNode);\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n                case TokenType.keywordUpdate:\r\n                    this.resolveUpdate(astNode);\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n                case TokenType.keywordDelete:\r\n                    this.resolveDelete(astNode);\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n                case TokenType.keywordDrop:\r\n                    this.resolveDropTable(astNode);\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n                case TokenType.keywordAlter:\r\n                    this.resolveAlterTable(astNode)\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n\r\n                default:\r\n                    break;\r\n            }\r\n\r\n            statement.hasErrors = statement.hasErrors || this.errorList.length > errorsBeforeStatement;\r\n\r\n        }\r\n\r\n        module.errors[2] = this.errorList;\r\n\r\n    }\r\n\r\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position: TextPosition, quickFix?: QuickFix) {\r\n        // if (position == null) position = Object.assign({}, this.position);\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n\r\n    getCurrentSymbolTable(): SymbolTable {\r\n        return this.symbolTableStack[this.symbolTableStack.length - 1];\r\n    }\r\n\r\n    pushNewSymbolTable(positionFrom: TextPosition, positionTo: TextPosition): SymbolTable {\r\n        if(positionTo == null) {\r\n            positionTo = {\r\n                line: 100000,\r\n                column: 1,\r\n                length: 1\r\n            }\r\n        };\r\n        let st: SymbolTable = new SymbolTable(this.getCurrentSymbolTable(), positionFrom, positionTo);\r\n        this.symbolTableStack.push(st);\r\n        return st;\r\n    }\r\n\r\n    resolveSelect(selectNode: SelectNode): Table {\r\n        let resultTable: Table = new Table(null);\r\n\r\n        selectNode.symbolTable = this.pushNewSymbolTable(selectNode.position, selectNode.endPosition);\r\n\r\n        // From\r\n        let joinedTables: Table[] = [];\r\n        this.resolveTableOrSubQuery(selectNode.fromNode, joinedTables);\r\n        if (selectNode.fromStartPosition != null) {\r\n            let fromSymbolTable = new SymbolTable(this.getCurrentSymbolTable(), selectNode.fromStartPosition, selectNode.fromEndPosition);\r\n            fromSymbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n        }\r\n\r\n        // Column list\r\n        for (let columnNode of selectNode.columnList) {\r\n            if (columnNode.type == TokenType.allColumns) {\r\n                for (let table of joinedTables) {\r\n                    for (let column of table.columns) {\r\n                        let c: Column = new Column(column.identifier, column.type, resultTable, false, true, column.defaultValue, column.isAutoIncrement);\r\n                        resultTable.columns.push(c);\r\n                    }\r\n                }\r\n            } else {\r\n                this.resolveTerm(columnNode.term);\r\n                let c1: Column = new Column(columnNode.alias, columnNode.term.sqlType, resultTable, false, true, null, false);\r\n                resultTable.columns.push(c1);\r\n                if (c1.identifier != null) {\r\n                    selectNode.symbolTable.storeSymbol({\r\n                        identifier: c1.identifier,\r\n                        posOfDefinition: columnNode.term.position,\r\n                        referencedOnPositions: [],\r\n                        column: c1\r\n                    })\r\n                }\r\n            }\r\n        }\r\n\r\n        // where...\r\n        if (selectNode.whereNode != null) {\r\n            let whereType = this.resolveTerm(selectNode.whereNode);\r\n            if (whereType != null && whereType.getBaseTypeName() != \"boolean\") {\r\n                this.pushError(\"Das Ergebnis des where-Teils einer select-Anweisung muss vom Typ boolean sein.\", \"error\", selectNode.whereNode.position);\r\n            }\r\n        }\r\n\r\n\r\n        // TODO: group by, order by\r\n\r\n        return resultTable;\r\n    }\r\n\r\n    resolveDropTable(node: DropTableNode) {\r\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\r\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n\r\n        if (node.tableIdentifier == null) return;\r\n\r\n        if(!node.ifExists){\r\n            let table = node.symbolTable.findTable(node.tableIdentifier);\r\n            if (table == null) this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\r\n        }\r\n\r\n    }\r\n\r\n    resolveDelete(node: DeleteNode) {\r\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\r\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n\r\n        if (node.tableIdentifier == null) return;\r\n\r\n        let table = node.symbolTable.findTable(node.tableIdentifier);\r\n        if (table == null) this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\r\n\r\n\r\n        // if(node.whereNodeBegin != null){\r\n        //     let symbolTable = this.pushNewSymbolTable(node.whereNodeBegin, node.whereNodeEnd);\r\n        //     symbolTable.storeTableSymbols(table);\r\n        // }\r\n\r\n\r\n        if (node.whereNode != null) {\r\n            let whereSymbolTable = this.pushNewSymbolTable(node.whereNodeBegin, node.whereNodeEnd);\r\n            if(table != null) whereSymbolTable.storeTableSymbols(table);\r\n            this.resolveTerm(node.whereNode);\r\n            this.symbolTableStack.pop();\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    resolveAlterTable(node: AlterTableNode) {\r\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\r\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n\r\n        if (node.tableIdentifier == null) {\r\n            return;\r\n        }\r\n\r\n        let table = node.symbolTable.findTable(node.tableIdentifier);\r\n        if (table == null) {\r\n            this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\r\n        }\r\n\r\n        let oldColumn: Column = null;\r\n        if (node.oldColumnName != null) {\r\n            oldColumn = table.columns.find(c => c.identifier.toLocaleLowerCase() == node.oldColumnName.toLocaleLowerCase());\r\n            if (oldColumn == null) {\r\n                this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" hat keine Spalte mit dem Bezeichner \" + node.oldColumnName, \"error\", node.oldColumnPosition);\r\n            }\r\n        }\r\n\r\n        switch (node.kind) {\r\n            case \"dropColumn\":\r\n                // nothing to do as node.oldColumnName is checked above\r\n                break;\r\n            case \"addColumn\":\r\n                let columnNode = node.columnDef;\r\n                if (columnNode == null) break;\r\n                if (columnNode.foreignKeyInfo != null && columnNode.baseType != null) {\r\n                    let fki = columnNode.foreignKeyInfo;\r\n                    let tables = this.getCurrentSymbolTable().findTables(fki.referencesTable);\r\n                    if (tables.length == 1) {\r\n                        let table = tables[0].table;\r\n                        let column = table.columns.find(c => c.identifier == fki.referencesColumn);\r\n                        if (column != null && column.type != null) {\r\n                            if (!column.isPrimaryKey) {\r\n                                this.pushError(\"Die referenzierte Spalte \" + fki.referencesTable + \".\" + fki.referencesColumn + \" ist kein Primärschlüssel.\", \"warning\", columnNode.referencesPosition);\r\n                            }\r\n                            if (!column.type.canCastTo(columnNode.baseType)) {\r\n                                this.pushError(\"Der Datentyp \" + columnNode.baseType.toString() + \" der Spalte \" + columnNode.identifier +\r\n                                    \" kann nich in den Datentyp \" + column.type.toString() + \" der referenzierten Spalte \" + table.identifier + \".\" +\r\n                                    column.identifier + \" umgewandelt werden.\", \"error\", columnNode.referencesPosition);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            case \"renameColumn\":\r\n                // nothing to do as node.oldColumnName is checked above\r\n                break;\r\n            case \"renameTable\":\r\n                // nothing to do \r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    resolveUpdate(node: UpdateNode) {\r\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\r\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n\r\n        if (node.tableIdentifier == null) {\r\n            return;\r\n        }\r\n\r\n        let table = node.symbolTable.findTable(node.tableIdentifier);\r\n        if (table == null) this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\r\n\r\n        for (let i = 0; i < node.columnIdentifiers.length; i++) {\r\n            let ci = node.columnIdentifiers[i];\r\n            let ciPos = node.columnIdentifierPositions[i];\r\n            let value = node.values[i];\r\n\r\n            if (ci == null) continue;\r\n            let column = table.columns.find(c => c.identifier == ci);\r\n\r\n            if (column == null) {\r\n                this.pushError(ci + \" ist kein Bezeichner einer Spalte der Tabelle \" + node.tableIdentifier + \".\", \"error\", ciPos);\r\n            }\r\n\r\n            if (value == null) continue;\r\n            let symbolTable = this.pushNewSymbolTable(node.valuePosBegin[i], node.valuePosEnd[i]);\r\n            symbolTable.storeTableSymbols(table);\r\n            this.resolveTerm(value);\r\n            this.symbolTableStack.pop();\r\n\r\n        }\r\n\r\n        if (node.whereNodeBegin != null) {\r\n            let symbolTable = this.pushNewSymbolTable(node.whereNodeBegin, node.whereNodeEnd);\r\n            symbolTable.storeTableSymbols(table);\r\n        }\r\n\r\n        if (node.whereNode != null) {\r\n            this.resolveTerm(node.whereNode);\r\n        }\r\n        this.symbolTableStack.pop();\r\n\r\n    }\r\n\r\n\r\n\r\n    resolveCreateTable(createTableNode: CreateTableNode) {\r\n\r\n        createTableNode.symbolTable = this.pushNewSymbolTable(createTableNode.position, createTableNode.endPosition);\r\n        createTableNode.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n\r\n        let thisTable: Table = {\r\n            identifier: createTableNode.identifier,\r\n            columns: null,\r\n            size: 0\r\n        }\r\n\r\n        thisTable.columns = createTableNode.columnList.map(c => {\r\n            return {\r\n                identifier: c.identifier,\r\n                isNullable: false,\r\n                isPrimaryKey: c.isPrimary,\r\n                isAutoIncrement: c.isAutoIncrement,\r\n                notNull: false,\r\n                references: null,\r\n                table: thisTable,\r\n                type: c.baseType,\r\n                defaultValue: c.defaultValue\r\n            }\r\n        });\r\n\r\n        createTableNode.symbolTable.storeTableSymbols(thisTable);\r\n\r\n        for (let columnNode of createTableNode.columnList) {\r\n            if (createTableNode.columnList.filter(c => c.identifier.toLocaleLowerCase() == columnNode.identifier.toLocaleLowerCase()).length > 1) {\r\n                this.pushError(\"Der Spaltenbezeichner \" + columnNode.identifier + \" darf in einer Tabelle nur ein einziges Mal verwendet werden\", \"error\", columnNode.position);\r\n            }\r\n\r\n            if (columnNode.foreignKeyInfo != null && columnNode.baseType != null) {\r\n                let fki = columnNode.foreignKeyInfo;\r\n                let tables = this.getCurrentSymbolTable().findTables(fki.referencesTable);\r\n                if (tables.length == 1) {\r\n                    let table = tables[0].table;\r\n                    let column = table.columns.find(c => c.identifier == fki.referencesColumn);\r\n                    if (column != null && column.type != null) {\r\n                        if (!column.isPrimaryKey) {\r\n                            this.pushError(\"Die referenzierte Spalte \" + fki.referencesTable + \".\" + fki.referencesColumn + \" ist kein Primärschlüssel.\", \"warning\", columnNode.referencesPosition);\r\n                        }\r\n                        if (!column.type.canCastTo(columnNode.baseType)) {\r\n                            this.pushError(\"Der Datentyp \" + columnNode.baseType.toString() + \" der Spalte \" + columnNode.identifier +\r\n                                \" kann nich in den Datentyp \" + column.type.toString() + \" der referenzierten Spalte \" + table.identifier + \".\" +\r\n                                column.identifier + \" umgewandelt werden.\", \"error\", columnNode.referencesPosition);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        for (let fki of createTableNode.foreignKeyInfoList) {\r\n\r\n            let columnNode = createTableNode.columnList.find(cn => cn.identifier == fki.column);\r\n            if (columnNode == null) continue;\r\n\r\n            let tables = this.getCurrentSymbolTable().findTables(fki.referencesTable);\r\n            if (tables.length == 1) {\r\n                let table = tables[0].table;\r\n                let column = table.columns.find(c => c.identifier == fki.referencesColumn);\r\n                if (column != null && column.type != null) {\r\n                    if (!column.isPrimaryKey) {\r\n                        this.pushError(\"Die referenzierte Spalte \" + fki.referencesTable + \".\" + fki.referencesColumn + \" ist kein Primärschlüssel.\", \"warning\", fki.referencesPosition);\r\n                    }\r\n                    if (!column.type.canCastTo(columnNode.baseType)) {\r\n                        this.pushError(\"Der Datentyp \" + columnNode.baseType.toString() + \" der Spalte \" + columnNode.identifier +\r\n                            \" kann nich in den Datentyp \" + column.type.toString() + \" der referenzierten Spalte \" + table.identifier + \".\" +\r\n                            column.identifier + \" umgewandelt werden.\", \"error\", fki.referencesPosition);\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    resolveTableOrSubQuery(tosNode: TableOrSubqueryNode, joinedTables: Table[]) {\r\n        if (tosNode == null) return;\r\n\r\n        switch (tosNode.type) {\r\n            case TokenType.table:\r\n                let tableList = this.tables.filter(t => t.identifier.toLowerCase() == tosNode.identifier.toLowerCase());\r\n                if (tableList.length == 0) {\r\n                    this.pushError(tosNode.identifier + \" ist nicht der Name einer Tabelle.\", \"error\", tosNode.position);\r\n                } else if (tableList.length > 1) {\r\n                    this.pushError(\"Der Bezeichner \" + tosNode.identifier + \" ist hier nicht eindeutig.\", \"error\", tosNode.position);\r\n                } else {\r\n                    let table: Table = tableList[0];\r\n                    joinedTables.push(table);\r\n                    this.storeTableIntoSymbolTable(table, tosNode.position, tosNode.alias);\r\n                }\r\n\r\n                break;\r\n\r\n            case TokenType.keywordJoin:\r\n                this.resolveTableOrSubQuery(tosNode.firstOperand, joinedTables);\r\n                this.resolveTableOrSubQuery(tosNode.secondOperand, joinedTables);\r\n                break;\r\n\r\n            case TokenType.subquery:\r\n                tosNode.table = this.resolveSelect(tosNode.query);\r\n                joinedTables.push(tosNode.table);\r\n                if (tosNode.alias != null) {\r\n                    tosNode.table.identifier = tosNode.alias;\r\n                    this.storeTableIntoSymbolTable(tosNode.table, tosNode.position);\r\n                }\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    storeTableIntoSymbolTable(table: Table, position: TextPosition, alias?: string) {\r\n        let symbolTable = this.getCurrentSymbolTable();\r\n        symbolTable.storeSymbol({\r\n            identifier: alias == null ? table.identifier.toLowerCase() : alias.toLowerCase(),\r\n            posOfDefinition: position,\r\n            table: table,\r\n            referencedOnPositions: []\r\n        });\r\n        for (let column of table.columns) {\r\n            symbolTable.storeSymbol({\r\n                identifier: column.identifier.toLowerCase(),\r\n                posOfDefinition: null,\r\n                column: column,\r\n                tableAlias: alias,\r\n                referencedOnPositions: []\r\n            });\r\n        }\r\n    }\r\n\r\n    resolveTerm(node: TermNode): SQLType {\r\n        if (node == null) return null;\r\n\r\n        switch (node.type) {\r\n            case TokenType.binaryOp:\r\n                if ([TokenType.keywordIn, TokenType.keywordNotIn].indexOf(node.operator) >= 0) {\r\n                    return this.resolveNotIn(node);\r\n                }\r\n\r\n                let typeLeft = this.resolveTerm(node.firstOperand);\r\n                let typeRight = this.resolveTerm(node.secondOperand);\r\n                if (typeLeft != null && typeRight != null) {\r\n                    let resultType = typeLeft.getBinaryResultType(node.operator, typeRight);\r\n                    if (resultType == null) {\r\n                        this.pushError(\"Der Operator \" + TokenTypeReadable[node.operator] + \" ist für die Datentypen \" + typeLeft.toString() + \" und \" + typeRight.toString() + \" nicht definiert.\", \"error\", node.position);\r\n                    }\r\n                    return resultType;\r\n                } else {\r\n                    return null;\r\n                }\r\n                break;\r\n            case TokenType.unaryOp:\r\n                let operandType = this.resolveTerm(node.operand);\r\n                if (operandType != null) {\r\n                    let resultType1 = operandType.getUnaryResultType(node.operator);\r\n                    if (resultType1 == null) {\r\n                        this.pushError(\"Der Operator \" + TokenTypeReadable[node.operator] + \" ist für einen Operanden des Datentyps \" + operandType.toString() + \" nicht definiert.\", \"error\", node.position);\r\n                    }\r\n                    return resultType1;\r\n                } else {\r\n                    return null;\r\n                }\r\n                break;\r\n            case TokenType.callMethod:\r\n                return this.resolveMethodCall(node);\r\n                break;\r\n            //    ConstantNode | IdentifierNode | DotNode | SelectNode | BracketsNode | StarAttributeNode | SelectNode | ListNode;\r\n\r\n            case TokenType.constantNode:\r\n                node.sqlType = SQLBaseType.fromConstantType(node.constantType);\r\n                return node.sqlType;\r\n                break;\r\n            case TokenType.identifier:\r\n                return this.resolveIdentifier(node);\r\n                break;\r\n            case TokenType.dot:\r\n                return this.resolveDot(node);\r\n                break;\r\n            case TokenType.keywordSelect:\r\n                let selectTable = this.resolveSelect(node);\r\n                if (selectTable.columns.length != 1) {\r\n                    this.pushError(\"Die Ergebnistabelle einer Unterabfrage an dieser Stelle muss genau eine Spalte besitzen.\", \"error\", node.position);\r\n                    return null;\r\n                }\r\n                return selectTable.columns[0].type;\r\n                break;\r\n            case TokenType.rightBracket:   // BracketsNode\r\n                node.sqlType = this.resolveTerm(node.termInsideBrackets);\r\n                return node.sqlType;\r\n                break;\r\n            case TokenType.allColumns:\r\n                this.pushError(\"Das Zeichen * kann hier nicht verwendet werden.\", \"error\", node.position);\r\n                break;\r\n            case TokenType.list:\r\n                this.pushError(\"Eine Liste wird hier nicht erwartet.\", \"error\", node.position);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    resolveDot(node: DotNode): SQLType {\r\n        let tableSymbols = this.getCurrentSymbolTable().findTables(node.identifierLeft.identifier);\r\n        if (tableSymbols.length == 0) {\r\n            this.pushError(\"Die Tabelle \" + node.identifierLeft.identifier + \" kann nicht gefunden werden.\", \"error\", node.identifierLeft.position);\r\n            return null;\r\n        }\r\n        if (tableSymbols.length > 1) {\r\n            this.pushError(\"Der Tabellenbezeichner \" + node.identifierLeft.identifier + \" ist nicht eindeutig.\", \"error\", node.identifierLeft.position);\r\n            return null;\r\n        }\r\n        let table = tableSymbols[0].table;\r\n\r\n        let columns = table.columns.filter(c => c.identifier.toLowerCase() == node.identifierRight.identifier.toLowerCase());\r\n\r\n        if (columns.length == 0) {\r\n            this.pushError(\"Die Tabelle \" + node.identifierLeft.identifier + \" hat keine Spalte mit dem Bezeichner \" + node.identifierRight.identifier + \".\", \"error\", node.identifierRight.position);\r\n            return;\r\n        }\r\n\r\n        if (columns.length > 1) {\r\n            this.pushError(\"Die Tabelle \" + node.identifierLeft.identifier + \" hat mehrere Spalten mit dem Bezeichner \" + node.identifierRight.identifier + \".\", \"error\", node.identifierRight.position);\r\n            return;\r\n        }\r\n\r\n        let column = columns[0];\r\n        node.sqlType = column.type;\r\n        return column.type;\r\n\r\n    }\r\n\r\n    resolveIdentifier(node: IdentifierNode): SQLType {\r\n        let symbols = this.getCurrentSymbolTable().findColumn(node.identifier);\r\n        if (symbols.length == 0) {\r\n            this.pushError(\"Der Bezeichner \" + node.identifier + \" ist an dieser Stelle nicht bekannt.\", \"error\", node.position);\r\n            return null;\r\n        }\r\n        if (symbols.length > 1) {\r\n            this.pushError(\"Der Bezeichner \" + node.identifier + \" ist nicht eindeutig.\", \"error\", node.position);\r\n            return null;\r\n        }\r\n\r\n        let symbol = symbols[0];\r\n        node.sqlType = symbol.column.type;\r\n        return symbol.column.type;\r\n    }\r\n\r\n    resolveMethodCall(node: MethodcallNode): SQLType {\r\n\r\n        let methodStore = SQLMethodStore.getInstance();\r\n        let methods = methodStore.getMethods(node.identifier);\r\n\r\n        methods = methods.filter(m => m.parameters.length == node.operands.length);\r\n        if (node.operands.length == 1 && node.operands[0].type == TokenType.allColumns) {\r\n            methods = methods.filter(m => m.acceptsStarParameter);\r\n            node.sqlType = methods[0].returnType;\r\n            return node.sqlType;\r\n        }\r\n\r\n        if (methods.length == 0) {\r\n            this.pushError(\"Es gibt keine passende Methode mit dem Bezeichner '\" + node.identifier + \"'.\", \"error\", node.position);\r\n            return null;\r\n        }\r\n\r\n        for (let operand of node.operands) {\r\n            if (this.resolveTerm(operand) == null) {\r\n                node.sqlType = methods[0].returnType;\r\n                return node.sqlType;\r\n            }\r\n        }\r\n\r\n        for (let method of methods) {\r\n            let found = true;\r\n            for (let i = 0; i < method.parameters.length; i++) {\r\n                let methodParameter = method.parameters[i];\r\n                let operand = node.operands[i];\r\n                if (!operand.sqlType.canCastTo(methodParameter.type)) {\r\n                    found = false;\r\n                    break;\r\n                }\r\n            }\r\n            if (found) {\r\n                node.sqlType = method.returnType;\r\n                return node.sqlType;\r\n            }\r\n        }\r\n\r\n        this.pushError(\"Es gibt keine passende Methode mit dem Bezeichner '\" + node.identifier + \"'.\", \"error\", node.position);\r\n        return null;\r\n\r\n    }\r\n\r\n    resolveNotIn(node: BinaryOpNode): SQLType {\r\n\r\n        if (node.firstOperand == null || node.secondOperand == null) return null;\r\n\r\n        let operatorString = TokenTypeReadable[node.operator];\r\n\r\n        this.resolveTerm(node.firstOperand);\r\n        let leftType = node.firstOperand.sqlType;\r\n        if (leftType != null) {\r\n            if (node.secondOperand.type == TokenType.keywordSelect) {\r\n                let selectNode = node.secondOperand;\r\n                if (selectNode.columnList.length != 1) {\r\n                    this.pushError(\"Wenn rechts vom Operator '\" + operatorString + \"' eine Unterabfrage steht, muss die Ergebnistabelle dieser Unterabfrage genau eine Spalte haben.\", \"error\", selectNode.position);\r\n                }\r\n                this.resolveSelect(selectNode);\r\n                let pType = selectNode.columnList[0].term.sqlType;\r\n                if (!pType.canCastTo(leftType)) {\r\n                    this.pushError(\"Der Datentyp der Ergebnisspalte der Unterabfrage ist \" + pType.toString() + \". Dieser kann nicht in den Datentyp \" + leftType.toString() + \" umgewandelt werden.\", \"error\", selectNode.position);\r\n                }\r\n            } else if (node.secondOperand.type == TokenType.list) {\r\n                let listNode = node.secondOperand;\r\n                for (let element of listNode.elements) {\r\n                    let elementType = SQLBaseType.fromConstantType(element.constantType);\r\n                    element.sqlType = elementType;\r\n                    if (!elementType.canCastTo(leftType)) {\r\n                        this.pushError(\"Der Datentyp des Listenelements \" + element.constant + \" ist \" + elementType.toString() + \". Er kann nicht in den Datentype \" + leftType.toString() + \" des Operanden auf der linken Seite des Operators '\" + operatorString + \"' umgewandelt werden.\", \"error\", element.position);\r\n                    }\r\n                }\r\n            } else {\r\n                this.pushError(\"Der rechte Operand der Operatoren 'in' und 'not in' muss eine Unterabfrage oder eine Liste sein.\", \"error\", node.secondOperand.position);\r\n            }\r\n\r\n        }\r\n\r\n        return SQLBaseType.getBaseType(\"boolean\");\r\n    }\r\n\r\n    resolveInsert(astNode: InsertNode) {\r\n\r\n        let table: Table = null;\r\n        let symbolTable = this.pushNewSymbolTable(astNode.position, astNode.endPosition);\r\n        if (astNode.table != null) {\r\n            astNode.table.table = this.tables.find(t => t.identifier.toLowerCase() == astNode.table.identifier.toLocaleLowerCase());\r\n            if (astNode.table.table == null) {\r\n                this.pushError(\"Die Tabelle \" + astNode.table.identifier + \" gibt es nicht.\", \"error\", astNode.table.position);\r\n            } else {\r\n                table = astNode.table.table;\r\n                symbolTable.storeTableSymbols(table);\r\n            }\r\n        }\r\n\r\n        let tableCompletionTo = astNode.endPosition;\r\n        if (astNode.valuesPosition != null) tableCompletionTo = astNode.valuesPosition;\r\n        if (astNode.columnsPosition != null) tableCompletionTo = astNode.columnsPosition;\r\n\r\n        this.module.addCompletionHint(astNode.position, tableCompletionTo, false, true, [\"into\", \"values\"]);\r\n\r\n        if (table != null) {\r\n            this.module.addCompletionHint(tableCompletionTo, astNode.valuesPosition == null ? astNode.endPosition : astNode.valuesPosition, true, false, [\"values\"]);\r\n        }\r\n\r\n        let tableSymbolTable = this.pushNewSymbolTable(astNode.position, tableCompletionTo);\r\n        tableSymbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n\r\n        let columns: Column[] = [];\r\n        // Parse column list\r\n        if (astNode.columnList.length == 0) {\r\n            if (table != null) {\r\n                columns = table.columns;\r\n            }\r\n        } else {\r\n            if (table != null) {\r\n                for (let columnNode of astNode.columnList) {\r\n                    let column = table.columns.find(c => c.identifier.toLowerCase() == columnNode.identifier.toLowerCase());\r\n                    if (column == null) {\r\n                        this.pushError(\"Die Tabelle \" + table.identifier + \" besitzt keine Spalte mit dem Bezeichner \" + columnNode.identifier + \".\", \"error\", columnNode.position);\r\n                    } else {\r\n                        columns.push(column);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (columns.length > 0) {\r\n            // Parse value lists\r\n            for (let valueList of astNode.values) {\r\n                if (valueList.length != columns.length && valueList.length > 0) {\r\n                    this.pushError(\"Erwartet werden \" + columns.length + \" Elemente, hier stehen aber \" + valueList.length + \" Elemente in der Liste.\", \"error\", valueList[0].position);\r\n                } else {\r\n                    for (let i = 0; i < valueList.length; i++) {\r\n                        let value = valueList[i];\r\n                        let column = columns[i];\r\n                        value.sqlType = SQLBaseType.fromConstantType(value.constantType);\r\n                        // constantType == 40 means: null\r\n                        // TODO: check if column is nullable!\r\n                        let destType = column.type.toString().toLocaleLowerCase();\r\n                        if (value.constantType == TokenType.keywordNull) {\r\n                            if (!column.isNullable || column.notNull) {\r\n                                this.pushError(\"Die Spalte \" + column.identifier + \" ist nicht nullable, daher kann null hier nicht eingefügt werden.\", \"error\", value.position);\r\n                            }\r\n                        } else if (!value.sqlType.canCastTo(column.type)) {\r\n                            let error: string = \"Der Wert \" + value.constant + \" vom Datentyp \" + value.sqlType.toString() + \" kann nicht in den Datentyp \" + column.type.toString() + \" der Spalte \" + column.identifier + \" umgewandelt werden.\";\r\n\r\n                            if(destType == \"date\") error += \"<br><b>Tipp: </b>Datumswerte haben die Form 'yyyy-mm-dd', also z.B. '2022-06-15'.\";\r\n                            if(destType == \"datetime\" || destType == \"timestamp\") error += \"<br><b>Tipp: </b>Timestamps haben die Form 'yyyy-mm-dd hh:min:ss', also z.B. '2022-06-15 07:56:22'.\";\r\n\r\n                            this.pushError(error, \"error\", value.position);\r\n                        } else if(destType == \"date\"){\r\n                            if(!isDate(value.constant)){\r\n                                let error: string = `'${value.constant}' ist kein date-Wert.<br><b>Tipp: </b>Datumswerte haben die Form 'yyyy-mm-dd', also z.B. '2022-06-15'.`;\r\n                                this.pushError(error, \"error\", value.position);\r\n                            }\r\n                        } else if(destType == \"datetime\" || destType == \"timestamp\"){\r\n                            if(!isDateTime(value.constant)){\r\n                                let error: string = `'${value.constant}' ist kein ${destType}-Wert.<br><b>Tipp: </b>Timestamps haben die Form 'yyyy-mm-dd hh:min:ss', also z.B. '2022-06-15 07:56:22'.`;\r\n                                this.pushError(error, \"error\", value.position);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        this.symbolTableStack.pop();\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { SymbolResolver } from \"./parser/SymbolResolver.js\";\r\n\r\nexport enum CompilerStatus {\r\n    compiling, error, compiledButNothingToRun, readyToRun\r\n}\r\n\r\nexport class Compiler {\r\n\r\n    compilerStatus: CompilerStatus = CompilerStatus.compiledButNothingToRun;\r\n\r\n    atLeastOneModuleIsStartable: boolean;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    compile(moduleStore: ModuleStore): Error[] {\r\n\r\n        this.compilerStatus = CompilerStatus.compiling;\r\n\r\n        let t0 = performance.now();\r\n\r\n        let lexer = new Lexer();\r\n\r\n        // 1st pass: lexing\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.file.dirty = false;\r\n            m.clear();\r\n\r\n            let lexed = lexer.lex(m.getProgramTextFromMonacoModel());\r\n            m.errors[0] = lexed.errors;\r\n            m.tokenList = lexed.tokens;\r\n            m.bracketError = lexed.bracketError;\r\n            if(m.file.name == this.main.getCurrentlyEditedModule().file.name){\r\n                if(this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(lexed.bracketError);\r\n            }\r\n        }\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        this.main.getSemicolonAngel().startRegistering();\r\n\r\n        let parser: Parser = new Parser();\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            parser.parse(m);\r\n        }\r\n        \r\n        // 3rd pass: check symbols and types\r\n        let databaseTool = this.main.getDatabaseTool();\r\n        let symbolResolver: SymbolResolver = new SymbolResolver(databaseTool);\r\n\r\n        for(let m of moduleStore.getModules(false)){\r\n            symbolResolver.start(m);\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        let message = \"Compiled in \" + dt + \" ms.\";\r\n\r\n        this.main.getCurrentWorkspace().compilerMessage = message;\r\n\r\n        this.main.getSemicolonAngel().healSemicolons();\r\n\r\n        this.compilerStatus = CompilerStatus.readyToRun;\r\n\r\n        return null;\r\n    }\r\n\r\n}","import { FileData } from \"../../communication/Data.js\";\r\nimport { AccordionElement } from \"../../main/gui/Accordion.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenType, TextPositionWithoutLength } from \"../lexer/Token.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { ASTNode } from \"./AST.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\nimport { stringToDate } from \"../../tools/StringTools.js\";\r\nimport { SQLStatement } from \"./Parser.js\";\r\n\r\n\r\nexport type CompletionHint = {\r\n    fromLine: number,\r\n    fromColumn: number,\r\n    toLine: number, \r\n    toColumn: number,\r\n    hintColumns: boolean,\r\n    hintColumnsOfTable?: string,\r\n    hintTables: boolean,\r\n    hintKeywords: string[],\r\n    dontHint?: string[],\r\n    praefix?: string,\r\n    suffix?: string\r\n}\r\n\r\nexport type File = {\r\n    name: string,\r\n    id?: number,\r\n    text: string,\r\n\r\n    text_before_revision: string,\r\n    submitted_date: string,\r\n    student_edited_after_revision: boolean,\r\n\r\n    dirty: boolean,\r\n    saved: boolean,\r\n    version: number,\r\n    panelElement?: AccordionElement\r\n\r\n}\r\n\r\nexport type IdentifierPosition = {\r\n    position: TextPosition,\r\n    element: any;\r\n}\r\n\r\nexport type MethodCallPosition = {\r\n    identifierPosition: TextPosition,\r\n    possibleMethods: any[] | string, // string for print, println, ...\r\n    commaPositions: TextPosition[],\r\n    rightBracketPosition: TextPosition\r\n}\r\n\r\nexport class Module {\r\n    file: File;\r\n    static maxUriNumber: number = 0;\r\n    uri: monaco.Uri;\r\n    model: monaco.editor.ITextModel;\r\n    oldErrorDecorations: string[] = [];\r\n    lastSavedVersionId: number;\r\n    editorState: monaco.editor.ICodeEditorViewState;\r\n\r\n    errors: Error[][] = [[], [], [], []]; // 1st pass, 2nd pass, 3rd pass\r\n\r\n    // 1st pass: Lexer\r\n    tokenList: Token[];\r\n\r\n    // 2nd pass: ASTParser\r\n    sqlStatements: SQLStatement[];\r\n    mainSymbolTable: SymbolTable;\r\n\r\n\r\n    identifierPositions: { [line: number]: IdentifierPosition[] } = {};\r\n    methodCallPositions: { [line: number]: MethodCallPosition[] } = {};\r\n\r\n    static uriMap: { [name: string]: number } = {};\r\n    bracketError: string;\r\n\r\n    completionHints: Map<number, CompletionHint[]> = new Map(); // Map from line numbers to hints\r\n\r\n    constructor(file: File, public main: MainBase) {\r\n        if (file == null || this.main == null) return; // used by AdhocCompiler and ApiDoc\r\n\r\n        this.file = file;\r\n        // this.uri = monaco.Uri.from({ path: '/file' + (Module.maxUriNumber++) + '.learnJava', scheme: 'file' });\r\n        let path = file.name;\r\n\r\n        let uriCounter = Module.uriMap[path];\r\n        if (uriCounter == null) {\r\n            uriCounter = 0;\r\n        } else {\r\n            uriCounter++;\r\n        }\r\n        Module.uriMap[path] = uriCounter;\r\n\r\n        if (uriCounter > 0) path += \" (\" + uriCounter + \")\";\r\n        this.uri = monaco.Uri.from({ path: path, scheme: 'inmemory' });\r\n        this.model = monaco.editor.createModel(file.text, \"vscSQL\", this.uri);\r\n        this.model.updateOptions({ tabSize: 3 });\r\n\r\n        this.lastSavedVersionId = this.model.getAlternativeVersionId();\r\n\r\n        let that = this;\r\n\r\n        this.model.onDidChangeContent(() => {\r\n            let versionId = that.model.getAlternativeVersionId();\r\n\r\n            if (versionId != that.lastSavedVersionId) {\r\n                that.file.dirty = true;\r\n                that.file.saved = false;\r\n                that.lastSavedVersionId = versionId;\r\n            }\r\n\r\n            if(!that.main.isEmbedded()){\r\n                let main1: Main = <Main>main;\r\n                if (main1.workspacesOwnerId != main1.user.id) {\r\n                    if (that.file.text_before_revision == null || that.file.student_edited_after_revision) {\r\n                        that.file.student_edited_after_revision = false;\r\n                        that.file.text_before_revision = that.file.text;\r\n                        that.file.saved = false;\r\n                        main1.networkManager.sendUpdates(null, false);\r\n                        main1.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n                        main1.projectExplorer.renderHomeworkButton(that.file);\r\n                    }\r\n                } else {\r\n                    that.file.student_edited_after_revision = true;\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    addCompletionHint(fromPosition: TextPosition, toPosition: TextPosition, hintColumns: boolean|string, hintTables: boolean, \r\n        hintKeywords: string[], dontHint?: string[], praefix: string = \"\", suffix: string = \"\"){\r\n        let ch: CompletionHint = {\r\n            fromColumn: fromPosition.column,\r\n            fromLine: fromPosition.line,\r\n            toColumn: toPosition.column,\r\n            toLine: toPosition.line,\r\n            hintColumns: (typeof hintColumns == \"boolean\")? hintColumns : true, \r\n            hintColumnsOfTable: (typeof hintColumns == \"string\")? hintColumns : null,\r\n            hintTables: hintTables,\r\n            hintKeywords: hintKeywords,\r\n            dontHint: dontHint,\r\n            praefix: praefix,\r\n            suffix: suffix\r\n        }\r\n\r\n        for(let i = ch.fromLine; i <= ch.toLine; i++){\r\n            let chList = this.completionHints.get(i);\r\n            if(chList == null){\r\n                chList = [];\r\n                this.completionHints.set(i, chList);\r\n            }\r\n            chList.push(ch);\r\n        }\r\n    }\r\n\r\n    getSQLSTatementsAtSelection(sel: monaco.Selection): SQLStatement[] {\r\n        let selStart = {line: sel.startLineNumber, column: sel.startColumn};\r\n        let selEnd = {line: sel.endLineNumber, column: sel.endColumn};\r\n\r\n        if(this.sqlStatements == null){\r\n            return [];\r\n        }\r\n\r\n        return this.sqlStatements.filter(stmt => {\r\n            return !(this.compare(stmt.to, selStart) < 0 || this.compare(stmt.from, selEnd) > 0);\r\n        })\r\n\r\n    }\r\n\r\n    /**\r\n     * returns 1 if a > b, 0 if a == b and -1 if a < b\r\n     * @param a \r\n     * @param b \r\n     */\r\n    compare(a: {line: number, column: number}, b: {line: number, column: number}): number{\r\n        if(a.line > b.line) return 1;\r\n        if(a.line < b.line) return -1;\r\n        if(a.column > b.column) return 1;\r\n        if(a.column < b.column) return -1;\r\n        return 0;\r\n    }\r\n\r\n\r\n\r\n    getSQLStatementAtPosition(p: { lineNumber: number, column: number }): SQLStatement {\r\n\r\n        return this.sqlStatements.find(statement => {\r\n            if(statement.from.line > p.lineNumber ) return false;\r\n            if(statement.from.line == p.lineNumber && statement.from.column > p.column) return false;\r\n            if(statement.to.line < p.lineNumber) return false;\r\n            if(statement.to.line == p.lineNumber && statement.to.column < p.column) return false;\r\n            return true;\r\n        });        \r\n\r\n    }\r\n\r\n\r\n    getCompletionHint(line: number, column: number){\r\n        let chList = this.completionHints.get(line);\r\n        \r\n        if(chList == null || chList.length == 0){\r\n            return null;\r\n        }\r\n\r\n        let pos = line * 1000 + column;\r\n        chList = chList.filter(ch => pos >= ch.fromLine * 1000 + ch.fromColumn && pos <= ch.toLine * 1000 + ch.toColumn);\r\n        if(chList.length == 0){\r\n            return;\r\n        }\r\n\r\n        // take CompletionHint with smallest range:\r\n        let bestCh: CompletionHint = chList[0];\r\n        let bestRangeLength  = (bestCh.toLine - bestCh.fromLine)*1000 + (bestCh.toColumn - bestCh.fromColumn);\r\n\r\n        for(let i = 1; i < chList.length; i++){\r\n            let ch = chList[i];\r\n            let rangeLength = (ch.toLine - ch.fromLine) * 1000 + (ch.toColumn - ch.fromColumn);\r\n\r\n            if(rangeLength < bestRangeLength){\r\n                bestCh = ch;\r\n                bestRangeLength = rangeLength;\r\n            }\r\n\r\n        }\r\n\r\n        return bestCh;\r\n    }\r\n\r\n\r\n    static restoreFromData(f: FileData, main: MainBase): Module {\r\n\r\n        let f1: File = {\r\n            name: f.name,\r\n            text: f.text,\r\n            text_before_revision: f.text_before_revision,\r\n            submitted_date: f.submitted_date,\r\n            student_edited_after_revision: false,\r\n            dirty: true,\r\n            saved: true,\r\n            version: f.version,\r\n            id: f.id\r\n        }\r\n\r\n        let m: Module = new Module(f1, main);\r\n\r\n        return m;\r\n\r\n    }\r\n\r\n    getFileData(workspace: Workspace): FileData {\r\n        let file = this.file;\r\n        let fd: FileData = {\r\n            id: file.id,\r\n            name: file.name,\r\n            text: file.text,\r\n            text_before_revision: file.text_before_revision,\r\n            submitted_date: file.submitted_date,\r\n            student_edited_after_revision: file.student_edited_after_revision,\r\n            version: file.version,\r\n            workspace_id: workspace.id,\r\n            forceUpdate: false,\r\n            file_type: 11\r\n        }\r\n\r\n        return fd;\r\n    }\r\n\r\n\r\n    findSymbolTableAtPosition(line: number, column: number) {\r\n        if (this.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (line > this.mainSymbolTable.positionTo.line ||\r\n            line == this.mainSymbolTable.positionTo.line && column > this.mainSymbolTable.positionTo.column\r\n        ) {\r\n            line = this.mainSymbolTable.positionTo.line;\r\n            column = this.mainSymbolTable.positionTo.column - 1;\r\n        }\r\n\r\n        return this.mainSymbolTable.findTableAtPosition(line, column);\r\n    }\r\n\r\n    getErrorCount(): number {\r\n\r\n        let ec = 0;\r\n        for (let el of this.errors) {\r\n            el.forEach(error => ec += error.level == \"error\" ? 1 : 0);\r\n            // ec += el.length;\r\n        }\r\n\r\n        return ec;\r\n    }\r\n\r\n    getProgramTextFromMonacoModel(): string {\r\n        return this.model.getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n    }\r\n\r\n\r\n    addIdentifierPosition(position: TextPosition, element: any) {\r\n        let positionList: IdentifierPosition[] = this.identifierPositions[position.line];\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            this.identifierPositions[position.line] = positionList;\r\n        }\r\n        positionList.push({\r\n            position: position,\r\n            element: element\r\n        });\r\n    }\r\n\r\n    getElementAtPosition(line: number, column: number): any {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let bestFoundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column < p.position.column + p.position.length) {\r\n\r\n                if (p.position.length > 0) {\r\n                    if (bestFoundPosition == null) {\r\n                        bestFoundPosition = p;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bestFoundPosition == null ? null : <any>bestFoundPosition.element;\r\n    }\r\n\r\n    copy(): Module {\r\n        let m = new Module(this.file, this.main);\r\n        m.model = this.model;\r\n        m.mainSymbolTable = this.mainSymbolTable;\r\n        this.mainSymbolTable = null;\r\n\r\n        this.file.dirty = true;\r\n\r\n        return m;\r\n    }\r\n\r\n    clear() {\r\n\r\n        this.identifierPositions = {};\r\n\r\n        if (this.file != null && this.file.dirty) {\r\n            // Lexer\r\n            this.tokenList = null;\r\n            this.errors[0] = [];\r\n\r\n            // AST Parser\r\n            this.errors[1] = [];\r\n\r\n\r\n        }\r\n\r\n        // type resolver\r\n        this.errors[2] = [];\r\n\r\n        // Code generator\r\n        this.errors[3] = [];\r\n        this.mainSymbolTable = new SymbolTable(null, { line: 1, column: 1, length: 1 }, { line: 100000, column: 1, length: 0 });\r\n\r\n        this.methodCallPositions = {};\r\n\r\n    }\r\n\r\n    hasErrors() {\r\n\r\n        for (let el of this.errors) {\r\n            if (el.find(error => error.level == \"error\")) {\r\n                return true;\r\n            }\r\n            // if (el.length > 0) {\r\n            //     return true;\r\n            // }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getSortedAndFilteredErrors(): Error[] {\r\n\r\n        let list: Error[] = [];\r\n\r\n        for (let el of this.errors) {\r\n            list = list.concat(el);\r\n        }\r\n\r\n        list.sort((a, b) => {\r\n            if (a.position.line > b.position.line) {\r\n                return 1;\r\n            }\r\n            if (b.position.line > a.position.line) {\r\n                return -1;\r\n            }\r\n            if (a.position.column >= b.position.column) {\r\n                return 1;\r\n            }\r\n            return -1;\r\n        });\r\n\r\n        for (let i = 0; i < list.length - 1; i++) {\r\n            let e1 = list[i];\r\n            let e2 = list[i + 1];\r\n            if (e1.position.line == e2.position.line && e1.position.column + 10 > e2.position.column) {\r\n                if (this.errorLevelCompare(e1.level, e2.level) == 1) {\r\n                    list.splice(i + 1, 1);\r\n                } else {\r\n                    list.splice(i, 1);\r\n                }\r\n                i--;\r\n            }\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    errorLevelCompare(level1: ErrorLevel, level2: ErrorLevel): number {\r\n        if (level1 == \"error\") return 1;\r\n        if (level2 == \"error\") return 2;\r\n        if (level1 == \"warning\") return 1;\r\n        if (level2 == \"warning\") return 2;\r\n        return 1;\r\n    }\r\n}\r\n\r\n\r\nexport class ModuleStore {\r\n\r\n    private modules: Module[] = [];\r\n    private moduleMap: Map<string, Module> = new Map();\r\n\r\n    dirty: boolean = false;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    findModuleById(module_id: number): Module {\r\n        for (let module of this.modules) {\r\n            if (module.file.id == module_id) return module;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    copy(): ModuleStore {\r\n        let ms: ModuleStore = new ModuleStore(this.main);\r\n        for (let m of this.modules) {\r\n            ms.putModule(m.copy());\r\n        }\r\n        return ms;\r\n    }\r\n\r\n    findModuleByFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                return m;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        for (let m of this.modules) {\r\n            if (m.hasErrors()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getFirstModule(): Module {\r\n        if (this.modules.length > 0) {\r\n            for (let mo of this.modules) {\r\n                return mo;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    isDirty(): boolean {\r\n\r\n        if (this.dirty) {\r\n            this.dirty = false;\r\n            return true;\r\n        }\r\n\r\n        let dirty = false;\r\n        for (let m of this.modules) {\r\n            if (m.file.dirty) {\r\n                dirty = true;\r\n                break;\r\n            }\r\n        }\r\n        return dirty;\r\n    }\r\n\r\n\r\n    getModules(includeSystemModules: boolean, excludedModuleName?: String): Module[] {\r\n        let ret = [];\r\n        for (let m of this.modules) {\r\n            if (m.file.name != excludedModuleName) {\r\n                ret.push(m);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    putModule(module: Module) {\r\n        this.modules.push(module);\r\n        this.moduleMap[module.file.name] = module;\r\n    }\r\n\r\n    removeModuleWithFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                this.removeModule(m);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n\r\n        if (this.modules.indexOf(module) < 0) return;\r\n\r\n        this.modules.splice(this.modules.indexOf(module), 1);\r\n        this.moduleMap[module.file.name] = undefined;\r\n        this.dirty = true;\r\n    }\r\n\r\n    getModule(moduleName: string): Module {\r\n        return this.moduleMap[moduleName];\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { escapeHtml } from \"./StringTools.js\";\r\n\r\nexport function makeEditable(elementWithText: JQuery<HTMLElement>,\r\n    elementToReplace: JQuery<HTMLElement>,\r\n    renameDoneCallback: (newContent: string) => void, selectionRange: { start: number, end: number } = null) {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    if (elementToReplace == null) {\r\n        elementToReplace = elementWithText;\r\n    }\r\n\r\n    let $input = jQuery('<input type=\"text\" class=\"jo_inplaceeditor\" spellcheck=\"false\">');\r\n    $input.css({\r\n        width: elementToReplace.css('width'),\r\n        height: elementToReplace.css('height'),\r\n        color: elementToReplace.css('color'),\r\n        position: elementToReplace.css('position'),\r\n        \"background-color\": elementToReplace.css('background-color'),\r\n        \"font-size\": elementToReplace.css('font-size'),\r\n        \"font-weight\": elementToReplace.css('font-weight'),\r\n        \"box-sizing\": \"border-box\"\r\n    });\r\n    $input.val(elementWithText.text());\r\n    $input.on(mousePointer + \"down\", (e) => { e.stopPropagation(); })\r\n\r\n    if (selectionRange != null) {\r\n        (<HTMLInputElement>$input[0]).setSelectionRange(selectionRange.start, selectionRange.end);\r\n    }\r\n\r\n    elementToReplace.after($input);\r\n    elementToReplace.hide();\r\n    setTimeout(() => {\r\n        $input.focus();\r\n    }, 300);\r\n\r\n    $input.on(\"keydown.me\", (ev) => {\r\n        if (ev.key == \"Enter\" || ev.key == \"Escape\") {\r\n            $input.off(\"keydown.me\");\r\n            $input.off(\"focusout.me\");\r\n            $input.remove();\r\n            elementToReplace.show();\r\n            let newValue = escapeHtml(<string>$input.val());\r\n            renameDoneCallback(newValue);\r\n            return;\r\n        }\r\n    });\r\n\r\n    $input.on(\"focusout.me\", (ev) => {\r\n        $input.off(\"keydown.me\");\r\n        $input.off(\"focusout.me\");\r\n        $input.remove();\r\n        elementToReplace.show();\r\n        let newValue = escapeHtml(<string>$input.val());\r\n        renameDoneCallback(newValue);\r\n        return;\r\n    });\r\n\r\n}\r\n\r\nexport type ContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: () => void;\r\n    link?: string;\r\n    subMenu?: ContextMenuItem[]\r\n};\r\n\r\nexport function openContextMenu(items: ContextMenuItem[], x: number, y: number): JQuery<HTMLElement> {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    let $contextMenu = jQuery('<div class=\"jo_contextmenu\"></div>');\r\n\r\n    let $openSubMenu: JQuery<HTMLElement> = null;\r\n    let parentMenuItem: ContextMenuItem = null;\r\n\r\n    for (let mi of items) {\r\n        let caption: string = mi.caption;\r\n        if (mi.link != null) {\r\n            caption = `<a href=\"${mi.link}\" target=\"_blank\" class=\"jo_menulink\">${mi.caption}</a>`;\r\n        }\r\n        let $item = jQuery('<div>' + caption + (mi.subMenu != null ? '<span style=\"float: right\"> &nbsp; &nbsp; &gt;</span>' : \"\") + '</div>');\r\n        if (mi.color != null) {\r\n            $item.css('color', mi.color);\r\n        }\r\n        if (mi.link == null) {\r\n            $item.on(mousePointer + 'up.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n                jQuery('.jo_contextmenu').remove();\r\n                jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n                jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n                jQuery(document).off(\"keydown.contextmenu\");\r\n                mi.callback();\r\n            });\r\n            $item.on(mousePointer + 'down.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n            });\r\n        } else {\r\n            let $link = $item.find('a');\r\n            $link.on(mousePointer + \"up\", (event) => {\r\n                event.stopPropagation();\r\n                setTimeout(() => {\r\n                    $item.hide();\r\n                }, 500);\r\n            })\r\n            $link.on(mousePointer + \"down\", (event) => {\r\n                event.stopPropagation();\r\n            })\r\n\r\n        }\r\n\r\n        $item.on(mousePointer + 'move.contextmenu', () => {\r\n            if (mi != parentMenuItem && $openSubMenu != null) {\r\n                $openSubMenu.remove();\r\n                parentMenuItem = null;\r\n                $openSubMenu = null;\r\n            }\r\n            if (mi.subMenu != null) {\r\n                $openSubMenu = openContextMenu(mi.subMenu, $item.offset().left + $item.width(), $item.offset().top);\r\n            }\r\n        });\r\n\r\n        $contextMenu.append($item);\r\n    }\r\n\r\n    jQuery(document).on(mousePointer + \"down.contextmenu\", (e) => {\r\n        jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n        jQuery(document).off(\"keydown.contextmenu\");\r\n        jQuery('.jo_contextmenu').remove();\r\n    })\r\n\r\n    jQuery(document).on(\"keydown.contextmenu\", (ev) => {\r\n        if (ev.key == \"Escape\") {\r\n            jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n            jQuery(document).off(\"keydown.contextmenu\");\r\n            jQuery('.jo_contextmenu').remove();\r\n        }\r\n    });\r\n\r\n    let leftRight = x > window.innerWidth * 0.8 ? \"right\" : \"left\";\r\n    let xp = x > window.innerWidth * 0.8 ? window.innerWidth - x : x;\r\n    let topBottom = y > window.innerHeight * 0.8 ? \"bottom\" : \"top\";\r\n    let yp = y > window.innerHeight * 0.8 ? window.innerHeight - y : y;\r\n\r\n    let css = {};\r\n    css[leftRight] = xp + \"px\";\r\n    css[topBottom] = yp + \"px\";\r\n\r\n    $contextMenu.css(css);\r\n\r\n\r\n    jQuery(\"body\").append($contextMenu);\r\n    $contextMenu.show();\r\n\r\n    return $contextMenu;\r\n}\r\n\r\nexport function makeTabs(tabDiv: JQuery<HTMLElement>) {\r\n    let headings = tabDiv.find('.jo_tabheadings>div').not('.jo_noHeading');\r\n    let tabs = tabDiv.find('.jo_tabs>div');\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    headings.on(mousePointer + \"down\", (ev) => {\r\n        let target = jQuery(ev.target);\r\n        headings.removeClass('jo_active');\r\n        target.addClass('jo_active');\r\n        let tab = tabDiv.find('.' + target.data('target'));\r\n        tabs.removeClass('jo_active');\r\n        tabs.trigger('myhide');\r\n        tab.addClass('jo_active');\r\n        tab.trigger('myshow');\r\n    });\r\n\r\n}\r\n\r\nexport function convertPxToNumber(pxString: string): number {\r\n    pxString = pxString.replace('px', '').trim();\r\n    return Number.parseInt(pxString);\r\n}\r\n\r\nexport function makeDiv(id: string, klass: string = \"\", text: string = \"\", css?: { [id: string]: any }): JQuery<HTMLDivElement> {\r\n\r\n    let s = \"\";\r\n    if (id != null && id != \"\") s += ` id=\"${id}\"`;\r\n\r\n    if (klass != null && klass != \"\") s += ` class=\"${klass}\"`;\r\n\r\n    let div = jQuery(`<div${s}></div>`);\r\n\r\n    if (css != null) {\r\n        div.css(css);\r\n    }\r\n\r\n    if (text != null && text != \"\") {\r\n        div.text(text);\r\n    }\r\n\r\n    return <any>div;\r\n\r\n}\r\n\r\nexport type SelectItem = {\r\n    value: string | number,\r\n    object: any,\r\n    caption: string\r\n}\r\n\r\nexport function setSelectItems($selectElement: JQuery<HTMLSelectElement>, items: SelectItem[], activeItemValue?: string | number) {\r\n    $selectElement.empty();\r\n    items.forEach(item => {\r\n        let selected: string = (item.value == activeItemValue) ? ' selected=\"selected\"' : \"\";\r\n        let element = jQuery(`<option value=${item.value}${selected}>${item.caption}</option>`);\r\n        $selectElement.append(element);\r\n        element.data('object', item.object);\r\n    }\r\n    );\r\n\r\n    $selectElement.data('items', items);\r\n\r\n\r\n}\r\n\r\nexport function getSelectedObject($selectDiv: JQuery<HTMLSelectElement>) {\r\n\r\n    let items: SelectItem[] = $selectDiv.data('items');\r\n\r\n    let selectedValue = $selectDiv.val();\r\n\r\n    return items.find(item => item.value == selectedValue)?.object;\r\n\r\n}\r\n\r\nexport var jo_mouseDetected: boolean = false;\r\nexport function checkIfMousePresent() {\r\n    if (matchMedia('(pointer:fine)').matches) {\r\n        jo_mouseDetected = true;\r\n    }\r\n}\r\n\r\nexport function animateToTransparent($element: JQuery<HTMLElement>, cssProperty: string, startColorRgb: number[], duration: number) {\r\n    let colorPraefix = 'rgba(' + startColorRgb[0] + \", \" + startColorRgb[1] + \", \" + startColorRgb[2] + \", \";\r\n    let value = 1.0;\r\n    let delta = value / (duration / 20);\r\n\r\n    let animate = () => {\r\n        $element.css(cssProperty, colorPraefix + value + \")\");\r\n        value -= delta;\r\n        if (value < 0) {\r\n            $element.css(cssProperty, \"\");\r\n        } else {\r\n            setTimeout(animate, 20);\r\n        }\r\n    }\r\n\r\n    animate();\r\n}\r\n\r\nexport function downloadFile(obj: any, filename: string, isBlob: boolean = false) {\r\n    var blob = isBlob? obj : new Blob([JSON.stringify(obj)], { type: 'text/plain' });\r\n    //@ts-ignore\r\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n        //@ts-ignore\r\n        window.navigator.msSaveOrOpenBlob(blob, filename);\r\n    } else {\r\n        var e = document.createEvent('MouseEvents'),\r\n            a = document.createElement('a');\r\n        a.download = filename;\r\n        a.href = window.URL.createObjectURL(blob);\r\n        a.dataset.downloadurl = ['text/plain', a.download, a.href].join(':');\r\n        //@ts-ignore\r\n        e.initEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\r\n        a.dispatchEvent(e);\r\n        a.remove();\r\n    }\r\n}\r\n\r\n\r\nfunction fallbackCopyTextToClipboard(text) {\r\n    var textArea = document.createElement(\"textarea\");\r\n    textArea.value = text;\r\n\r\n    // Avoid scrolling to bottom\r\n    textArea.style.top = \"0\";\r\n    textArea.style.left = \"0\";\r\n    textArea.style.position = \"fixed\";\r\n\r\n    document.body.appendChild(textArea);\r\n    textArea.focus();\r\n    textArea.select();\r\n\r\n    try {\r\n        var successful = document.execCommand('copy');\r\n    } catch (err) {\r\n        console.error('Fallback: Oops, unable to copy', err);\r\n    }\r\n\r\n    document.body.removeChild(textArea);\r\n}\r\n\r\nexport function copyTextToClipboard(text) {\r\n    if (!navigator.clipboard) {\r\n        fallbackCopyTextToClipboard(text);\r\n        return;\r\n    }\r\n    navigator.clipboard.writeText(text).then(function () {\r\n    }, function (err) {\r\n        console.error('Async: Could not copy text: ', err);\r\n    });\r\n}\r\n","import { UploadTemplateResponse } from \"../communication/Data.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\n\r\nexport class TemplateUploader {\r\n\r\n    uploadCurrentDatabase(workspace_id: number, main: Main, dump: Uint8Array | null, \r\n        reason: \"publishDatabaseAsTemplate\" | \"uploadBaseTemplateForWorkspace\",\r\n        callback: (response: UploadTemplateResponse) => void = () => { }) {\r\n            \r\n        main.waitOverlay.show('Bitte warten, lade Vorlage auf den Server hoch ...');\r\n        if (workspace_id >= 0) {\r\n            let dbTool = main.getDatabaseTool();\r\n            dbTool.export((buffer) => {\r\n                // @ts-ignore\r\n                buffer = pako.deflate(buffer);\r\n                this.uploadIntern(buffer, workspace_id, reason, main, callback);\r\n            }, (error) => {\r\n                alert(\"Fehler beim Exportieren der Datenbank: \" + error)\r\n                main.waitOverlay.hide();\r\n            })\r\n        } else {\r\n            this.uploadIntern(dump, -1, reason, main, callback);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    private uploadIntern(buffer: Uint8Array, workspace_id: number,\r\n        reason: \"publishDatabaseAsTemplate\" | \"uploadBaseTemplateForWorkspace\",\r\n        main: Main, callback: (response: UploadTemplateResponse) => void) {\r\n\r\n        $.ajax({\r\n            type: 'POST',\r\n            async: true,\r\n            contentType: 'application/octet-stream',\r\n            data: buffer,\r\n            processData: false,\r\n            headers: { 'x-workspaceid': \"\" + workspace_id, \"x-reason\": reason },\r\n            url: \"servlet/uploadTemplate\",\r\n            success: function (response: UploadTemplateResponse) {\r\n                main.waitOverlay.hide();\r\n                callback(response);\r\n                return;\r\n\r\n            },\r\n            error: function (jqXHR, message) {\r\n                alert('message');\r\n                main.waitOverlay.hide();\r\n            }\r\n        }\r\n        );\r\n        return buffer;\r\n    }\r\n}","import { CreateWorkspaceData, WorkspaceData } from \"../../communication/Data.js\";\r\nimport { copyTextToClipboard, makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { TemplateUploader } from \"../../tools/TemplateUploader.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\nexport class DatabaseSettingsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private workspace: Workspace) {\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Datenbank-Einstellungen</div>\r\n            <div style=\"width: 100%; margin-left: 10px\">\r\n                <div class=\"jo_ds_settings\" style=\"margin-left: 0px\">\r\n                <div class=\"jo_ds_settings_caption\">Name der Datenbank:</div><div><input class=\"dialog-input jo_databasename\" value=\"Neue Datenbank\"></input></div>\r\n                </div>\r\n\r\n                <div class=\"jo_ds_settings_caption\" style=\"margin-top: 20px\">\r\n                Zugriffscodes für andere Benutzer:\r\n                </div>\r\n                                \r\n                <div>\r\n                    <table class=\"jo_ds_secret_table\">\r\n                    <tr>\r\n                        <td>Nur Lesen:</td><td class=\"jo_ds_secret jo_ds_secret_read\"></td><td id=\"copySecretTdread\"></td><td><button class=\"jo_small_button jo_button_code_read\">Neuen Code generieren</button></td>\r\n                    <tr>\r\n                        <td>Lesen und schreiben:</td><td class=\"jo_ds_secret jo_ds_secret_write\"></td><td id=\"copySecretTdwrite\"></td><td><button class=\"jo_small_button jo_button_code_write\">Neuen Code generieren</button></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Lesen, schreiben und Struktur verändern:</td><td class=\"jo_ds_secret jo_ds_secret_ddl\"></td><td id=\"copySecretTdddl\"></td><td><button class=\"jo_small_button jo_button_code_ddl\">Neuen Code generieren</button></td>\r\n                    </tr>\r\n                    </table>\r\n                </div>\r\n\r\n                <div class=\"jo_ds_settings_caption\" style=\"margin-top: 20px\">\r\n                Beschreibung:\r\n                </div>\r\n                <div>\r\n                <textarea class=\"jo_ds_settings_description\" maxlength=\"5000\"></textarea>\r\n                </div>\r\n\r\n                <div class=\"jo_ds_settings_caption\" style=\"margin-top: 20px\">\r\n                Datenbank freigeben als Vorlage für andere Benutzer:\r\n                </div>\r\n\r\n                <fieldset id=\"jo_ds_publishedTo\">\r\n                    <input type=\"radio\" id=\"b0\" name=\"publishedFilter\" value=\"0\" checked=\"checked\"><label for=\"b0\">Keine Freigabe</label>\r\n                    <input type=\"radio\" id=\"b1\" name=\"publishedFilter\" value=\"1\"><label for=\"b1\">Freigabe für meine Klasse(n)</label>\r\n                    <input type=\"radio\" id=\"b2\" name=\"publishedFilter\" value=\"2\" style=\"visibility: none\"><label id=\"lb2\" for=\"b2\" style=\"visibility: none\">Freigabe für meine Schule</label>\r\n                    <input type=\"radio\" id=\"b3\" name=\"publishedFilter\" value=\"3\" style=\"visibility: none\"><label id=\"lb3\" for=\"b3\" style=\"visibility: none\">Freigabe für alle Schulen</label>\r\n                </fieldset>\r\n\r\n                <div>\r\n                    <input type=\"checkbox\" id=\"jo_upload_db\" name=\"jo_upload_db\">\r\n                    <label for=\"jo_upload_db\">Aktuellen Zustand der Datenbank als Vorlage hochladen</label>\r\n                </div>\r\n            </div>\r\n\r\n\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_save_button\">Speichern</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n\r\n        let that = this;\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { this.showMainWindow(); });\r\n        jQuery('#jo_ds_save_button').on('click', () => { \r\n            this.saveNameAndPublishedTo();\r\n         })\r\n\r\n        this.setValues();\r\n\r\n        [\"read\", \"write\", \"ddl\"].forEach(kind => {\r\n            jQuery('.jo_button_code_' + kind).on('pointerdown', () => {\r\n                that.main.networkManager.setNewSecret(that.workspace.id, kind, (secret) => {\r\n                    jQuery('.jo_ds_secret_'+kind).text(secret);\r\n                })\r\n            })\r\n            let $copyButton = jQuery('<button class=\"jo_small_button jo_copy_secret_button jo_active\">Kopieren</button>')\r\n            jQuery('#copySecretTd' + kind).append($copyButton);\r\n            $copyButton.on('pointerdown', () => {\r\n                copyTextToClipboard(jQuery('.jo_ds_secret_'+kind).text());\r\n            })\r\n        })\r\n\r\n        jQuery('#jo_ds_publishedTo>input').on('change', (e) => {$('#jo_upload_db').prop('checked', !((<HTMLInputElement>jQuery('#b0')[0]).checked))});\r\n\r\n    }\r\n\r\n    saveNameAndPublishedTo(){\r\n        let published_to = 0;\r\n        jQuery('#jo_ds_publishedTo').find('input').each( (n, element) => {\r\n            let $element = jQuery(element);\r\n            //@ts-ignore\r\n            if(<HTMLInputElement>element.checked){\r\n                published_to = Number.parseInt(<string>$element.attr('value'));\r\n            }\r\n        })\r\n\r\n        this.main.networkManager.setNameAndPublishedTo(this.workspace.id, \r\n            <string>jQuery('.jo_databasename').val(), published_to, <string>jQuery('.jo_ds_settings_description').val(),\r\n             () => {\r\n                 if($('#jo_upload_db').prop('checked')){\r\n                    new TemplateUploader().uploadCurrentDatabase(this.workspace.id, this.main, null, \"publishDatabaseAsTemplate\");                    \r\n                 }\r\n                 this.showMainWindow(); \r\n                })\r\n    }\r\n\r\n    setValues(){\r\n        jQuery('.jo_databasename').val(this.workspace.name);\r\n        this.main.networkManager.getDatabaseSettings(this.workspace.id, (response) => {\r\n            [\"read\", \"write\", \"ddl\"].forEach(kind => {\r\n                jQuery('.jo_ds_secret_' + kind).text(response.secrets[kind]);\r\n            });\r\n            if(this.main.user.is_admin){\r\n                jQuery('#b3').css('visibility', 'visible');\r\n                jQuery('#lb3').css('visibility', 'visible');\r\n            }\r\n            if(this.main.user.is_schooladmin){\r\n                jQuery('#b2').css('visibility', 'visible');\r\n                jQuery('#lb2').css('visibility', 'visible');\r\n            }\r\n            // jQuery('#jo_ds_publishedTo input').attr('checked', '');\r\n            jQuery('#b'+response.publishedTo).prop('checked', true);\r\n\r\n            jQuery('#jo_upload_db').prop('checked', response.publishedTo != 0);\r\n\r\n            jQuery('.jo_ds_settings_description').val(this.workspace.database.description);\r\n        })\r\n    }\r\n\r\n    showMainWindow() {\r\n        jQuery('#main').css('visibility', 'visible');\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n    }\r\n\r\n\r\n\r\n}","import { WorkspaceData } from \"../communication/Data.js\";\r\nimport { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { DatabaseSettingsDialog } from \"../main/gui/DatabaseSettingsDialog.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { WDatabase } from \"./WDatabase.js\";\r\n\r\nexport class Workspace {\r\n    \r\n    name: string;\r\n    path: string;\r\n    isFolder: boolean;\r\n    id: number;\r\n    owner_id: number;\r\n\r\n    version: number;\r\n    \r\n    moduleStore: ModuleStore;\r\n    panelElement: AccordionElement;\r\n    currentlyOpenModule: Module;\r\n    saved: boolean = true;\r\n\r\n    compilerMessage: string;\r\n\r\n    databaseId: number;\r\n    database: WDatabase;\r\n\r\n    sql_history: string;\r\n\r\n    permissions: number;\r\n\r\n    constructor(name: string, private main: MainBase, owner_id: number){\r\n        this.name = name;\r\n        this.owner_id = owner_id;\r\n        this.moduleStore = new ModuleStore(main);\r\n        this.sql_history = \"\";\r\n    }\r\n    \r\n    getWorkspaceData(withFiles: boolean): WorkspaceData {\r\n        let wd: WorkspaceData = {\r\n            name: this.name,\r\n            id: this.id,\r\n            owner_id: this.owner_id,\r\n            currentFileId: this.currentlyOpenModule == null ? null : this.currentlyOpenModule.file.id,\r\n            files: [],\r\n            sql_history: this.sql_history,\r\n            path: \"\",\r\n            isFolder: false,  \r\n            permissions: this.permissions,\r\n            database_id: this.databaseId\r\n        }\r\n\r\n        if(withFiles){\r\n            for(let m of this.moduleStore.getModules(false)){\r\n    \r\n                wd.files.push(m.getFileData(this));\r\n    \r\n            }\r\n        }\r\n\r\n        return wd;\r\n    }\r\n\r\n    renderSettingsButton(panelElement: AccordionElement) {\r\n        let $buttonDiv = panelElement?.$htmlFirstLine?.find('.jo_additionalButtonSettings');\r\n        if ($buttonDiv == null) return;\r\n        \r\n        // let myMain: Main = <Main>this.main;\r\n\r\n            let $button = jQuery('<div class=\"jo_settingsButton img_settings jo_button jo_active\" title=\"Datenbank-Einstellungen...\"></div>');\r\n            $buttonDiv.append($button);\r\n            let that = this;\r\n            $button.on('mousedown', (e) => e.stopPropagation());\r\n            $button.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                new DatabaseSettingsDialog(<any>that.main, that);\r\n\r\n            });\r\n\r\n        // } else {\r\n        //     $buttonDiv.find('.jo_startButton').remove();\r\n        // }\r\n    }\r\n\r\n\r\n    static restoreFromData(ws: WorkspaceData, main: Main): Workspace {\r\n\r\n        let w = new Workspace(ws.name, main, ws.owner_id);\r\n        w.id = ws.id;\r\n        w.path = ws.path;\r\n        w.isFolder = ws.isFolder;\r\n        w.owner_id = ws.owner_id;\r\n        w.sql_history = ws.sql_history;\r\n        w.permissions = ws.permissions;\r\n        w.databaseId = ws.database_id;\r\n\r\n        for(let f of ws.files){\r\n\r\n            let m: Module = Module.restoreFromData(f, main);\r\n            w.moduleStore.putModule(m);\r\n\r\n            if(f.id == ws.currentFileId){\r\n                w.currentlyOpenModule = m;\r\n            }\r\n\r\n        }\r\n\r\n        return w;\r\n\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        \r\n        return this.moduleStore.hasErrors();\r\n        \r\n    }\r\n\r\n    getModuleByMonacoModel(model: monaco.editor.ITextModel): Module {\r\n        for(let m of this.moduleStore.getModules(false)){\r\n            if(m.model == model){\r\n                return m;\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    }\r\n}\r\n\r\n","import { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type ButtonToggler = (state: boolean) => void;\r\n\r\nexport type Action = (name: string, buttonToggler?: ButtonToggler, pressed_key?: string) => void;\r\n\r\nexport type ActionEntry = {\r\n    text?: string,\r\n    keys: string[],\r\n    action: Action,\r\n    identifier: string, // name of Action is copied automatically to name of ActionEntry\r\n    active: boolean\r\n}\r\n\r\nexport class ActionManager {\r\n\r\n    actions: { [actionIdentifier: string]: ActionEntry } = { };\r\n\r\n    keyEntries: { [key: string]: ActionEntry[] } = {};\r\n\r\n    buttons: { [actionIdentifier: string]: JQuery<HTMLElement>[] } = {};\r\n\r\n    constructor(private $mainElement: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public init(){\r\n\r\n        let $element:JQuery<any> = this.$mainElement;\r\n        \r\n        if($element == null) $element = jQuery(document);\r\n\r\n        let that = this;\r\n        $element.on(\"keydown\", function (event: JQuery.KeyDownEvent) { \r\n            if(event != null){\r\n                that.executeKeyDownEvent(event); \r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    trigger(actionIdentifier: string) {\r\n        let ae = this.actions[actionIdentifier];\r\n        if(ae != null){\r\n            ae.action(actionIdentifier, null, \"\");\r\n        }\r\n    }\r\n\r\n\r\n    public registerAction(identifier: string, keys: string[], action: Action, text: string = \"\", button?: JQuery<HTMLElement>){\r\n        let ae: ActionEntry = {\r\n            action: action,\r\n            identifier: identifier,\r\n            keys: keys,\r\n            text: text,\r\n            active: true\r\n        };\r\n\r\n        this.actions[identifier] = ae;\r\n\r\n        for(let key of keys){\r\n            if(this.keyEntries[key.toLowerCase()] == null){\r\n                this.keyEntries[key.toLowerCase()] = [];\r\n            }\r\n            this.keyEntries[key.toLowerCase()].push(ae);\r\n        }\r\n\r\n        if(button != null){\r\n            if(this.buttons[identifier] == null){\r\n                this.buttons[identifier] = [];\r\n            }\r\n            this.buttons[identifier].push(button);\r\n\r\n            let t = text;\r\n            if(keys.length > 0){\r\n                t += \" [\" + keys.join(\", \") + \"]\";\r\n            }\r\n\r\n            button.attr(\"title\", t);\r\n\r\n            button.on('mousedown', () => {\r\n                if(ae.active){\r\n                    action(identifier, null, \"mousedown\");\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public isActive(actionIdentifier: string): boolean {\r\n\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae == null) return false;\r\n\r\n        return ae.active;\r\n    \r\n    }\r\n\r\n    public setActive(actionIdentifier: string, active: boolean){\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae != null){\r\n            ae.active = active;\r\n        }\r\n\r\n        let buttons = this.buttons[actionIdentifier];\r\n        if(buttons != null){\r\n            for(let button of buttons){\r\n                if(active){\r\n                    button.addClass('jo_active');\r\n                } else {\r\n                    button.removeClass('jo_active');\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public executeKeyDownEvent(event: JQuery.KeyDownEvent) {\r\n\r\n        if(document.activeElement.tagName.toLowerCase() == \"input\"){\r\n            return;\r\n        }\r\n\r\n        if (event.keyCode <= 18 && event.keyCode >= 16) {\r\n            return; // ctrl, alt, shift\r\n        }\r\n\r\n        let key: string = \"\";\r\n\r\n        if (event.ctrlKey) {\r\n            key += \"ctrl+\";\r\n        }\r\n\r\n        if (event.shiftKey) {\r\n            key += \"shift+\";\r\n        }\r\n\r\n        if (event.altKey) {\r\n            key += \"alt+\";\r\n        }\r\n\r\n        if(event.key != null){\r\n            key += event.key.toLowerCase();\r\n        }\r\n\r\n        let actionEntries = this.keyEntries[key];\r\n\r\n        if(actionEntries != null){\r\n            for(let actionEntry of actionEntries){\r\n                if (actionEntry.active) {\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    actionEntry.action(actionEntry.identifier, null, key);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class ErrorManager {\r\n\r\n    oldDecorations: string[] = [];\r\n    oldErrorDecorations: string[] = [];\r\n    $errorDiv: JQuery<HTMLElement>;\r\n\r\n    $bracket_warning: JQuery<HTMLElement>;\r\n\r\n    minimapColor: {[key: string]:string } = {};\r\n\r\n    lightBulbOnClickFunctionList: {class: string, onClickFunction: () => void, title: string}[] = [];\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>, private $mainDiv: JQuery<HTMLElement>) {\r\n        this.minimapColor[\"error\"] = \"#bc1616\";\r\n        this.minimapColor[\"warning\"] = \"#cca700\";\r\n        this.minimapColor[\"info\"] = \"#75beff\";\r\n\r\n        this.$bracket_warning = $mainDiv.find(\".jo_parenthesis_warning\");\r\n\r\n        this.$bracket_warning.attr('title', 'Klammeralarm!');\r\n        this.$bracket_warning.children().attr('title', 'Klammeralarm!');\r\n\r\n        let that = this;\r\n        $mainDiv.find(\".jo_pw_undo\").on(\"click\", () => {\r\n            let editor = that.main.getMonacoEditor();\r\n            editor.trigger(\".\", \"undo\", {});\r\n        }).attr('title', 'Undo');\r\n    }\r\n\r\n    showParenthesisWarning(error: string){\r\n        if(error != null){\r\n            this.$bracket_warning.css(\"visibility\", \"visible\");\r\n            this.$bracket_warning.find(\".jo_pw_heading\").text(error);\r\n        } else {\r\n            this.$bracket_warning.css(\"visibility\", \"hidden\");\r\n        }\r\n    }\r\n\r\n    showErrors(workspace: Workspace): Map<Module, number> {\r\n\r\n        this.lightBulbOnClickFunctionList = [];\r\n\r\n        let errorCountMap: Map<Module, number> = new Map();\r\n\r\n        this.$errorDiv = this.$bottomDiv.find('.jo_tabs>.jo_errorsTab');\r\n        this.$errorDiv.empty();\r\n\r\n        let hasErrors = false;\r\n\r\n        let ms = workspace.moduleStore;\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        for (let m of ms.getModules(false)) {\r\n            let markers: monaco.editor.IMarkerData[] = [];\r\n            let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n            let $errorList: JQuery<HTMLElement>[] = [];\r\n\r\n            let errors = m.getSortedAndFilteredErrors();\r\n            errorCountMap.set(m, m.getErrorCount());\r\n\r\n            for (let error of errors) {\r\n\r\n                let linesDecorationsClassName: string;\r\n                let borderLeftClass: string;\r\n                let minimapColor: string = this.minimapColor[error.level];\r\n\r\n                switch (error.level) {\r\n                    case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                    case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                    case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n                }\r\n\r\n                if (error.quickFix != null) {\r\n                    let quickFix = error.quickFix;\r\n                    let lightBulbClass = \"lb_\" + Math.trunc(Math.random() * 1000000);\r\n                    linesDecorationsClassName = 'jo_yellowLightBulb ' + borderLeftClass + \" \" + lightBulbClass;\r\n\r\n                    this.lightBulbOnClickFunctionList.push({class: '.' + lightBulbClass, \r\n                    onClickFunction: () => {\r\n\r\n                        let edits = quickFix.editsProvider(m.model.uri);\r\n                        editor.executeEdits(\"\", edits.map((edit) => {\r\n                            let r = edit.edit.range;\r\n                            return {\r\n                                range: new monaco.Range(r.startLineNumber, r.startColumn, r.endLineNumber, r.endColumn),\r\n                                text: edit.edit.text,\r\n                                forceMoveMarkers: true\r\n                            }\r\n                        }\r\n                        ));\r\n\r\n                    },\r\n                    title: quickFix.title\r\n                })\r\n\r\n\r\n                }\r\n\r\n                this.processError(error, m, $errorList);\r\n\r\n                let severity: monaco.MarkerSeverity;\r\n                switch (error.level) {\r\n                    case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                    case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                    case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n                }\r\n\r\n                markers.push({\r\n                    startLineNumber: error.position.line,\r\n                    startColumn: error.position.column,\r\n                    endLineNumber: error.position.line,\r\n                    endColumn: error.position.column + error.position.length,\r\n                    message: error.text,\r\n                    severity: severity,\r\n                    //@ts-ignore\r\n                    relatedInformation: error.quickFix\r\n                });\r\n\r\n                decorations.push({\r\n                    range: {\r\n                        startLineNumber: error.position.line,\r\n                        startColumn: error.position.column,\r\n                        endLineNumber: error.position.line,\r\n                        endColumn: error.position.column + error.position.length\r\n                    },\r\n                    options: {\r\n                        linesDecorationsClassName: linesDecorationsClassName,\r\n                        minimap: {\r\n                            position: monaco.editor.MinimapPosition.Inline,\r\n                            color: minimapColor\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n            }\r\n\r\n            monaco.editor.setModelMarkers(m.model, 'test', markers);\r\n            m.oldErrorDecorations = m.model.deltaDecorations(m.oldErrorDecorations, decorations);\r\n\r\n            // decorations used when user clicks on error in error-list:\r\n            this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, []);\r\n\r\n\r\n            if ($errorList.length > 0 && this.$errorDiv.length > 0) {\r\n                hasErrors = true;\r\n                let $file = jQuery('<div class=\"jo_error-filename\">' + m.file.name + '&nbsp;</div>');\r\n                this.$errorDiv.append($file);\r\n                for (let $error of $errorList) {\r\n                    this.$errorDiv.append($error);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasErrors && this.$errorDiv.length > 0) {\r\n            this.$errorDiv.append(jQuery('<div class=\"jo_noErrorMessage\">Keine Fehler gefunden :-)</div>'));\r\n        }\r\n\r\n        this.registerLightbulbOnClickFunctions();\r\n\r\n        return errorCountMap;\r\n\r\n    }\r\n\r\n    registerLightbulbOnClickFunctions() {\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            for(let locf of that.lightBulbOnClickFunctionList){\r\n                    jQuery(locf.class).off('click', locf.onClickFunction);\r\n                    jQuery(locf.class).on('click', locf.onClickFunction).attr('title', locf.title);\r\n            }            \r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    processError(error: Error, m: Module, $errorDivs: JQuery<HTMLElement>[]) {\r\n\r\n        let $div = jQuery('<div class=\"jo_error-line\"></div>');\r\n        let $lineColumn = jQuery('<span class=\"jo_error-position\">[Z&nbsp;<span class=\"jo_linecolumn\">' + error.position.line + '</span>' +\r\n            ' Sp&nbsp;<span class=\"jo_linecolumn\">' + error.position.column + '</span>]</span>:&nbsp;');\r\n        let category = \"\";\r\n        switch (error.level) {\r\n            case \"error\": break;\r\n            case \"warning\": category = '<span class=\"jo_warning_category\">Warnung: </span>'; break;\r\n            case \"info\": category = '<span class=\"jo_info_category\">Info: </span>'; break;\r\n        }\r\n        let $message = jQuery('<div class=\"jo_error-text\">' + category + error.text + \"</div>\");\r\n\r\n        $div.append($lineColumn).append($message);\r\n\r\n        let that = this;\r\n        $div.on(\"mousedown\", (ev) => {\r\n            this.$errorDiv.find('.jo_error-line').removeClass('jo_active');\r\n            $div.addClass('jo_active');\r\n            that.showError(m, error);\r\n        });\r\n\r\n        $errorDivs.push($div);\r\n    }\r\n\r\n    showError(m: Module, error: Error) {\r\n\r\n        if (this.main instanceof Main) {\r\n            if (m != this.main.projectExplorer.getCurrentlyEditedModule()) {\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n        let position = error.position;\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n\r\n        let className: string = \"\";\r\n        switch (error.level) {\r\n            case \"error\": className = \"jo_revealError\"; break;\r\n            case \"warning\": className = \"jo_revealWarning\"; break;\r\n            case \"info\": className = \"jo_revealInfo\"; break;\r\n        }\r\n\r\n\r\n        this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, [\r\n            {\r\n                range: range,\r\n                options: { className: className }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n}","import { makeDiv } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { stringToDate, dateToStringWithoutTime } from \"../../tools/StringTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\ntype ModuleWithWorkspace = {\r\n    module: Module,\r\n    workspace: Workspace\r\n}\r\n\r\ntype DayWithModules = {\r\n    date: Date;\r\n    day: string;\r\n    modules: ModuleWithWorkspace[];\r\n}\r\n\r\nexport class HomeworkManager {\r\n\r\n    $homeworkTab: JQuery<HTMLElement>;\r\n    $homeworkTabLeft: JQuery<HTMLElement>;\r\n    $homeworkTabRight: JQuery<HTMLElement>;\r\n\r\n    $showRevisionButton: JQuery<HTMLElement>;\r\n    showRevisionActive: boolean = false;\r\n\r\n    diffEditor: monaco.editor.IStandaloneDiffEditor;\r\n\r\n    constructor(private main: Main, public $bottomDiv: JQuery<HTMLElement>) {\r\n        this.$homeworkTab = $bottomDiv.find('.jo_tabs>.jo_homeworkTab');\r\n    }\r\n\r\n    initGUI() {\r\n        let that = this;\r\n        this.$homeworkTab.append(this.$homeworkTabLeft = makeDiv(\"\", \"jo_homeworkTabLeft jo_scrollable\"));\r\n        this.$homeworkTab.append(this.$homeworkTabRight = makeDiv(\"\", \"jo_homeworkTabRight jo_scrollable\"));\r\n        jQuery('#view-mode').prepend(this.$showRevisionButton = makeDiv(\"\", \"jo_button jo_active jo_homeworkRevisionButton\", \"\"));\r\n        this.$showRevisionButton.on(\"click\", () => {\r\n            if (this.showRevisionActive) {\r\n                this.hideRevision();\r\n            } else {\r\n                this.showRevision(that.main.getCurrentlyEditedModule());\r\n            }\r\n        });\r\n        this.$showRevisionButton.hide();\r\n        jQuery('#diffEditor').hide();\r\n    }\r\n\r\n    showHomeWorkRevisionButton() {\r\n        this.$showRevisionButton.text(this.showRevisionActive ? \"Normalansicht\" : \"Korrekturen zeigen\");\r\n        this.$showRevisionButton.show();\r\n    }\r\n\r\n    hideHomeworkRevisionButton() {\r\n        this.$showRevisionButton.hide();\r\n    }\r\n\r\n    showRevision(module: Module) {\r\n\r\n        module.file.text = module.getProgramTextFromMonacoModel();\r\n        let file = module.file;\r\n\r\n        jQuery('#editor').hide();\r\n        jQuery('#diffEditor').show();\r\n\r\n        var originalModel = monaco.editor.createModel(file.text_before_revision, \"myJava\");\r\n        var modifiedModel = monaco.editor.createModel(file.text, \"myJava\");\r\n\r\n        this.diffEditor = monaco.editor.createDiffEditor(document.getElementById(\"diffEditor\"), {\r\n            // You can optionally disable the resizing\r\n            enableSplitViewResizing: true,\r\n            originalEditable: false,\r\n            readOnly: true,\r\n            // Render the diff inline\r\n            renderSideBySide: true\r\n        });\r\n\r\n        this.diffEditor.setModel({\r\n            original: originalModel,\r\n            modified: modifiedModel\r\n        });\r\n\r\n        this.showRevisionActive = true;\r\n        this.showHomeWorkRevisionButton();\r\n    }\r\n\r\n    hideRevision() {\r\n        if (this.showRevisionActive) {\r\n\r\n            jQuery('#diffEditor').hide();\r\n            this.diffEditor.dispose();\r\n            this.diffEditor = null;\r\n            jQuery('#editor').show();\r\n\r\n            this.showRevisionActive = false;\r\n            this.showHomeWorkRevisionButton();\r\n        }\r\n    }\r\n\r\n\r\n    attachToWorkspaces(workspaces: Workspace[]) {\r\n\r\n        let daysWithModules: DayWithModules[] = [];\r\n        let map: { [day: string]: DayWithModules } = {};\r\n\r\n        workspaces.forEach(ws => {\r\n            ws.moduleStore.getModules(false).forEach(module => {\r\n\r\n                let dateString = module.file.submitted_date;\r\n                if (dateString != null) {\r\n\r\n                    let date: Date = stringToDate(dateString);\r\n                    let dateWithoutTime = dateToStringWithoutTime(date);\r\n                    let dwm: DayWithModules = map[dateWithoutTime];\r\n                    if (dwm == null) {\r\n                        dwm = {\r\n                            date: date,\r\n                            day: dateWithoutTime,\r\n                            modules: []\r\n                        };\r\n                        map[dateWithoutTime] = dwm;\r\n                        daysWithModules.push(dwm);\r\n                    }\r\n                    dwm.modules.push({module: module, workspace: ws});\r\n\r\n                }\r\n\r\n            });\r\n\r\n        });\r\n\r\n        this.$homeworkTabLeft.empty();\r\n        this.$homeworkTabRight.empty();\r\n\r\n        let that = this;\r\n\r\n        this.$homeworkTabLeft.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgabetage:\"));\r\n\r\n\r\n        daysWithModules.sort((a, b) => {\r\n            if (a.date.getFullYear() != b.date.getFullYear()) return -Math.sign(a.date.getFullYear() - b.date.getFullYear());\r\n            if (a.date.getMonth() != b.date.getMonth()) return -Math.sign(a.date.getMonth() - b.date.getMonth());\r\n            if (a.date.getDate() != b.date.getDate()) return -Math.sign(a.date.getDate() - b.date.getDate());\r\n            return 0;\r\n        });\r\n\r\n        let first: boolean = true;\r\n\r\n        daysWithModules.forEach(dwm => {\r\n\r\n            dwm.modules.sort((m1, m2) => m1.module.file.name.localeCompare(m2.module.file.name));\r\n\r\n            let $div = makeDiv(\"\", \"jo_homeworkDate\", dwm.day);\r\n            this.$homeworkTabLeft.append($div);\r\n\r\n            $div.on(\"click\", (e) => {\r\n                this.$homeworkTabLeft.find('.jo_homeworkDate').removeClass('active');\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            });\r\n\r\n            if (first) {\r\n                first = false;\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    select(dwm: DayWithModules) {\r\n        this.$homeworkTabRight.empty();\r\n        this.$homeworkTabRight.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgegebene Dateien:\"));\r\n        let that = this;\r\n        dwm.modules.forEach(moduleWithWorkspace => {\r\n            let $div = jQuery(`<div class=\"jo_homeworkEntry\">Workspace <span class=\"jo_homework-workspace\">\r\n                    ${moduleWithWorkspace.workspace.name}</span>, Datei <span class=\"jo_homework-file\">\r\n                    ${moduleWithWorkspace.module.file.name}</span> (Abgabe: ${moduleWithWorkspace.module.file.submitted_date} )</div>`);\r\n            that.$homeworkTabRight.append($div);\r\n            $div.on(\"click\", () => {\r\n                    that.main.projectExplorer.setWorkspaceActive(moduleWithWorkspace.workspace);\r\n                    that.main.projectExplorer.setModuleActive(moduleWithWorkspace.module);\r\n                    that.main.projectExplorer.fileListPanel.select(moduleWithWorkspace.module, false);\r\n            });\r\n        })\r\n        \r\n    }\r\n\r\n\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { ErrorManager } from \"./ErrorManager.js\";\r\nimport { HomeworkManager } from \"./HomeworkManager.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class BottomDiv {\r\n\r\n    errorManager: ErrorManager;\r\n    homeworkManager: HomeworkManager;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>, public $mainDiv: JQuery<HTMLElement>) {\r\n\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_homeworkTabheading').length > 0) {\r\n            this.homeworkManager = new HomeworkManager(<Main>main, $bottomDiv);\r\n        }\r\n\r\n        this.errorManager = new ErrorManager(main, $bottomDiv, $mainDiv);\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$bottomDiv);\r\n        if (this.homeworkManager != null) this.homeworkManager.initGUI();\r\n\r\n        this.$bottomDiv.find('.jo_tabs').children().first().trigger(\"click\");\r\n\r\n    }\r\n\r\n    showHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'visible');\r\n        jQuery('.jo_homeworkTabheading').trigger(\"mousedown\");\r\n\r\n    }\r\n\r\n    hideHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'hidden');\r\n        jQuery('.jo_tabheadings').children().first().trigger(\"mousedown\");\r\n\r\n    }\r\n\r\n\r\n}","import { Editor } from \"./Editor.js\";\r\nimport { CompletionHint, Module } from \"../../compiler/parser/Module.js\";\r\nimport { Symbol, SymbolTable } from \"../../compiler/parser/SymbolTable.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { Column, Table } from \"../../compiler/parser/SQLTable.js\";\r\n\r\nexport class MyCompletionItemProvider implements monaco.languages.CompletionItemProvider {\r\n\r\n    isConsole: boolean;\r\n\r\n    public triggerCharacters: string[] = ['.', 'abcdefghijklmnopqrstuvwxyzäöüß_ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜ', ' ', ',', '('];\r\n\r\n    public keywordCompletionItems: Map<string, monaco.languages.CompletionItem> = new Map();\r\n\r\n    constructor(private main: MainBase) {\r\n        this.setupKeywordCompletionItems();\r\n    }\r\n\r\n    first: boolean = true;\r\n    provideCompletionItems(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, \r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n\r\n\r\n        let module: Module =\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null || module.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n            let that = this;\r\n\r\n            let wfc = function waitForCompiler(){\r\n                if(module.file.dirty){\r\n                    setTimeout(() => {\r\n                        wfc();\r\n                    }, 100);\r\n                } else {\r\n                    resolve(that.provideCompletionItemsIntern(model, position, context, token));\r\n                }\r\n            }\r\n        \r\n            wfc();\r\n\r\n        })\r\n\r\n        // Promise.resolve({\r\n        //     suggestions: completionItems\r\n        // });\r\n    }\r\n\r\n    provideCompletionItemsIntern(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, \r\n        token: monaco.CancellationToken): monaco.languages.CompletionList {\r\n\r\n        setTimeout(() => {\r\n            //@ts-ignore\r\n            let sw = this.main.getMonacoEditor()._contentWidgets[\"editor.widget.suggestWidget\"].widget;\r\n            if (this.first) {\r\n                sw.toggleDetails();\r\n                this.first = false;\r\n            }\r\n        }, 500);\r\n\r\n        let module: Module =\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null || module.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (this.isStringLiteral(module, position)) return null;\r\n\r\n        let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let symbolTable = module.mainSymbolTable.findTableAtPosition(position.lineNumber, position.column);\r\n        let completionHint: CompletionHint = module.getCompletionHint(position.lineNumber, position.column);\r\n        if (completionHint == null) {\r\n            completionHint = {\r\n                fromColumn: 0,\r\n                toColumn: 0,\r\n                fromLine: 0,\r\n                toLine: 0,\r\n                hintColumns: false,\r\n                hintTables: false,\r\n                hintKeywords: []\r\n            }\r\n        }\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n        this.addKeywordCompletionItems(completionHint, completionItems);\r\n\r\n        let dotMatch = textUntilPosition.match(/.*\\s([\\wöäüÖÄÜß]*)(\\.)([\\wöäüÖÄÜß]*)$/);\r\n\r\n        let ibMatch = textAfterPosition.match(/^([\\wöäüÖÄÜß]*)/);\r\n        let identifierAndBracketAfterCursor = \"\";\r\n        if (ibMatch != null && ibMatch.length > 0) {\r\n            identifierAndBracketAfterCursor = ibMatch[0];\r\n        }\r\n\r\n        if (dotMatch == null) {\r\n            this.addIdentifierCompletionItems(completionHint, symbolTable, completionItems);\r\n        } else {\r\n            this.addDotCompletionItems(position, dotMatch, identifierAndBracketAfterCursor, symbolTable, completionItems);\r\n        }\r\n\r\n        let word = model.getWordUntilPosition(position);\r\n        let replaceWordRange = { startColumn: word.startColumn, startLineNumber: position.lineNumber, endColumn: word.endColumn, endLineNumber: position.lineNumber };\r\n        let insertAfterCursorRange = { startColumn: position.column, startLineNumber: position.lineNumber, endColumn: position.column, endLineNumber: position.lineNumber }\r\n\r\n        for (let item of completionItems) {\r\n            if (item.range == null) {\r\n                if (item.insertText.startsWith(\",\")) {\r\n                    item.range = insertAfterCursorRange;\r\n                } else {\r\n                    item.range = replaceWordRange;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (completionHint.dontHint != null) {\r\n            completionItems = completionItems.filter(item => completionHint.dontHint.indexOf(item.insertText) < 0);\r\n        }\r\n\r\n        return {\r\n            suggestions: completionItems\r\n        };\r\n    }\r\n\r\n\r\n    addDotCompletionItems(position: monaco.Position, dotMatch: RegExpMatchArray, identifierAndBracketAfterCursor: string,\r\n        symbolTable: SymbolTable, completionItems: monaco.languages.CompletionItem[]) {\r\n        let textAfterDot = dotMatch[3];\r\n        let textBeforeDot = dotMatch[1];\r\n        let dotColumn = position.column - textAfterDot.length - 1;\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - textAfterDot.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n        for (let symbol of symbolTable.symbolList) {\r\n            if (symbol.table != null) {\r\n                let identifier: string = symbol.table.identifier;\r\n                if (symbol.tableAlias != null) identifier = symbol.tableAlias;\r\n                if (identifier.toLowerCase() == textBeforeDot) {\r\n                    for (let column of symbol.table.columns) {\r\n                        completionItems.push({\r\n                            label: column.identifier,\r\n                            detail: \"Spalte \" + column.identifier + \" der Tabelle \" + symbol.table.identifier,\r\n                            filterText: column.identifier,\r\n                            insertText: column.identifier,\r\n                            insertTextRules: monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                            kind: monaco.languages.CompletionItemKind.Field,\r\n                            range: rangeToReplace\r\n                        })\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    addIdentifierCompletionItems(completionHint: CompletionHint, symbolTable: SymbolTable, completionItems: monaco.languages.CompletionItem[]) {\r\n        let praefix: string = completionHint.praefix == null ? \"\" : completionHint.praefix;\r\n        let suffix: string = completionHint.suffix == null ? \"\" : completionHint.suffix;\r\n\r\n        if (!(completionHint.hintTables || completionHint.hintColumns)) {\r\n            return;\r\n        }\r\n\r\n        let tableIdentifiers: { [identifier: string]: boolean } = {};\r\n\r\n        let st: SymbolTable = symbolTable;\r\n        let columns: { [identifier: string]: Symbol[] } = {};\r\n        let columnIdentifiers: string[] = [];\r\n\r\n        while (st != null) {\r\n            for (let symbol of st.symbolList) {\r\n                if (symbol.column != null) {\r\n                    let columnIdentifier = symbol.column.identifier;\r\n                    if (columns[columnIdentifier] == null) {\r\n                        columns[columnIdentifier] = [symbol];\r\n                        columnIdentifiers.push(columnIdentifier);\r\n                    } else {\r\n                        columns[columnIdentifier].push(symbol);\r\n                    }\r\n                } else if (symbol.table != null && completionHint.hintTables) {\r\n                    if (!tableIdentifiers[symbol.identifier]) {\r\n                        let insertText = praefix + symbol.identifier + suffix;\r\n                        completionItems.push({\r\n                            label: symbol.identifier,\r\n                            detail: \"Tabelle \" + symbol.table.identifier,\r\n                            filterText: symbol.identifier,\r\n                            insertText: insertText,\r\n                            insertTextRules: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                            kind: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemKind.Snippet : monaco.languages.CompletionItemKind.Class,\r\n                            range: undefined,\r\n                            sortText: \"aa\" + symbol.identifier\r\n                        });\r\n                        tableIdentifiers[symbol.identifier] = true;\r\n                    }\r\n                }\r\n            }\r\n            st = st.parent;\r\n        }\r\n\r\n        if (completionHint.hintColumns) {\r\n            for (let ci of columnIdentifiers) {\r\n                let columList = columns[ci];\r\n                let withTable = columList.length > 1 && completionHint.hintColumnsOfTable == null;\r\n                for (let cs of columList) {\r\n                    let text = cs.identifier;\r\n                    if (withTable && cs.identifier == cs.column.identifier.toLowerCase()) {\r\n                        text = (cs.tableAlias == null ? cs.column.table.identifier : cs.tableAlias) + \".\" + text;\r\n                    }\r\n                    if (completionHint.hintColumnsOfTable == null || cs.column?.table?.identifier == completionHint.hintColumnsOfTable) {\r\n                        let insertText = praefix + text + suffix;\r\n                        completionItems.push({\r\n                            label: text,\r\n                            detail: \"Die Spalte \" + cs.column.identifier + \" der Tabelle \" + cs.column.table.identifier,\r\n                            filterText: text,\r\n                            insertText: insertText,\r\n                            insertTextRules: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                            kind: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemKind.Snippet : monaco.languages.CompletionItemKind.Field,\r\n                            range: undefined\r\n                        })\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    keywordToSnippetMap: { [keyword: string]: string } = {\r\n        \"(\": \"(\\n\\t$0\\n)\",\r\n        \"varchar\": \"varchar($1) $0\",\r\n        \"decimal\": \"decimal($1, $2) $0\"\r\n    }\r\n\r\n    addKeywordCompletionItems(completionHint: CompletionHint, completionItems: monaco.languages.CompletionItem[]) {\r\n        let praefix: string = completionHint.praefix == null ? \"\" : completionHint.praefix;\r\n        let suffix: string = completionHint.suffix == null ? \"\" : completionHint.suffix;\r\n\r\n\r\n        for (let text of completionHint.hintKeywords) {\r\n            let insertText = praefix + text + suffix;\r\n            let snippet = this.keywordToSnippetMap[text];\r\n\r\n            let ci = this.keywordCompletionItems.get(text);\r\n            if (ci != null) {\r\n                completionItems.push(ci);\r\n            } else if (snippet != null) {\r\n                let label = snippet.replace(\"$0\", \"\").replace(\"$1\", \"\").replace(\"$2\", \"\").replace(/ /g, \"\").replace(/\\n/g, \"\").replace(/\\t/g, \"\");\r\n                completionItems.push({\r\n                    label: label,\r\n                    detail: \"\",\r\n                    filterText: text,\r\n                    insertText: snippet,\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                })\r\n            } else {\r\n                completionItems.push({\r\n                    label: text,\r\n                    detail: \"\",\r\n                    filterText: text,\r\n                    insertText: text,\r\n                    insertTextRules: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                    kind: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemKind.Snippet : monaco.languages.CompletionItemKind.Keyword,\r\n                    range: undefined,\r\n                    sortText: text == \"from\" ? \"*\" : undefined\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    isStringLiteral(module: Module, position: monaco.Position) {\r\n\r\n        let tokenList = module.tokenList;\r\n        if (tokenList == null || tokenList.length == 0) return false;\r\n\r\n        let posMin = 0;\r\n        let posMax = tokenList.length - 1;\r\n        let pos: number;\r\n\r\n        let watchDog = 1000;\r\n\r\n        while (true) {\r\n            let posOld = pos;\r\n            pos = Math.round((posMax + posMin) / 2);\r\n\r\n            if (posOld == pos) return false;\r\n\r\n            watchDog--;\r\n            if (watchDog == 0) return false;\r\n\r\n            let t = tokenList[pos];\r\n            let p = t.position;\r\n\r\n            if (p.line < position.lineNumber || p.line == position.lineNumber && p.column + p.length < position.column) {\r\n                posMin = pos;\r\n                continue;\r\n            }\r\n\r\n            if (p.line > position.lineNumber || p.line == position.lineNumber && p.column > position.column) {\r\n                posMax = pos;\r\n                continue;\r\n            }\r\n\r\n            return t.tt == TokenType.stringConstant;\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    setupKeywordCompletionItems() {\r\n        this.keywordCompletionItems.set(\"delete from\",\r\n            {\r\n                label: \"delete from <Tabelle> where <Bedingung>\",\r\n                detail: \"Anweisung zum Löschen von Datensätzen\",\r\n                filterText: `delete from`,\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `delete from `,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"drop table\",\r\n            {\r\n                label: \"drop table <Tabelle>\",\r\n                detail: \"Anweisung zum Löschen einer Tabelle\",\r\n                filterText: 'drop table',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `drop table `,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"alter\",\r\n            {\r\n                label: \"alter table <Tabelle> <rename to, rename column, add column, drop column>\",\r\n                detail: \"Anweisung zum Ändern des Schemas (alter table <Tabelle> <rename to, rename column, add column, drop column>)\",\r\n                filterText: 'alter',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `alter table `,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"select\",\r\n            {\r\n                label: \"select <Spalten> from <Tabellen> where <Bedingung>\",\r\n                detail: \"Select-Anweisung\",\r\n                filterText: 'select',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `select * from $1\\nwhere $0\\n`,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"create table\",\r\n            {\r\n                label: \"create table <Tabellenbezeichner> (<Spaltendefinitionen>)\",\r\n                detail: \"Create table-Anweisung (Erstellt eine neue Tabelle)\",\r\n                filterText: 'create',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `create table $1 (\\n\\t$0\\n);`,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        // this.keywordCompletionItems.set(\"from\",\r\n        //     {\r\n        //         label: \"from <Tabellen> where <Bedingung>\",\r\n        //         detail: \"from-Teil der select-Anweisung\",\r\n        //         filterText: 'from',\r\n        //         // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n        //         insertText: `from $1\\nwhere $0\\n`,\r\n        //         command: {\r\n        //             id: \"editor.action.triggerSuggest\",\r\n        //             title: '123',\r\n        //             arguments: []\r\n        //         },\r\n        //         insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n        //         kind: monaco.languages.CompletionItemKind.Snippet,\r\n        //         range: undefined\r\n        //     });\r\n\r\n    }\r\n\r\n\r\n}","import { Module, MethodCallPosition } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\n\r\n\r\nexport class MySignatureHelpProvider implements monaco.languages.SignatureHelpProvider {\r\n\r\n    signatureHelpTriggerCharacters?: readonly string[] = ['(', ',', ';', '<', '>', '=']; // semicolon, <, >, = for for-loop, if, while, ...\r\n    signatureHelpRetriggerCharacters?: readonly string[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    provideSignatureHelp(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let that = this;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            setTimeout(() => {\r\n\r\n                this.main.compileIfDirty();\r\n\r\n                resolve(that.provideSignatureHelpLater(model, position, token, context));\r\n\r\n            }, 300);\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    provideSignatureHelpLater(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model != this.main.getMonacoEditor().getModel());\r\n\r\n        let module: Module = \r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        // let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        // let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let methodCallPositions = module.methodCallPositions[position.lineNumber];\r\n\r\n        if (methodCallPositions == null) return null;\r\n\r\n        let methodCallPosition: MethodCallPosition = null;\r\n        let rightMostPosition: number = -1;\r\n\r\n        for (let i = methodCallPositions.length - 1; i >= 0; i--) {\r\n            let mcp = methodCallPositions[i];\r\n            if (mcp.identifierPosition.column + mcp.identifierPosition.length < position.column\r\n                && mcp.identifierPosition.column > rightMostPosition) {\r\n                if (mcp.rightBracketPosition == null ||\r\n                    (position.lineNumber <= mcp.rightBracketPosition.line && position.column <= mcp.rightBracketPosition.column)\r\n                    || (position.lineNumber < mcp.rightBracketPosition.line)) {\r\n                    methodCallPosition = mcp;\r\n                    rightMostPosition = mcp.identifierPosition.column;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (methodCallPosition == null) return null;\r\n\r\n        return this.getSignatureHelp(methodCallPosition, position);\r\n\r\n\r\n\r\n    }\r\n\r\n    getSignatureHelp(methodCallPosition: MethodCallPosition,\r\n        position: monaco.Position): monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let parameterIndex: number = 0;\r\n\r\n        for (let cp of methodCallPosition.commaPositions) {\r\n            if (cp.line < position.lineNumber || (cp.line == position.lineNumber && cp.column < position.column)) {\r\n                parameterIndex++;\r\n            }\r\n        }\r\n\r\n        let signatureInformationList: monaco.languages.SignatureInformation[] = [];\r\n\r\n        return Promise.resolve({\r\n            value: {\r\n                activeParameter: parameterIndex,\r\n                activeSignature: 0,\r\n                signatures: signatureInformationList\r\n            },\r\n            dispose: () => { }\r\n        });\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\n\r\n\r\n\r\nexport class MyHoverProvider {\r\n\r\n    private static keywordDescriptions: { [keyword: string]: string } = {\r\n        \"print\": \"Die Anweisung ```print``` gibt eine Zeichenkette aus.\",\r\n        \"new\": \"Das Schlüsselwort ```new``` bewirkt die Instanzierung (\\\"Erschaffung\\\") eines neuen Objektes einer Klasse.\",\r\n        \"println\": \"Die Anweisung ```println``` gibt eine Zeichenkette gefolgt von einem Zeilenumbruch aus.\",\r\n        \"while\": \"```\\nwhile (Bedingung) {Anweisungen}\\n```  \\nbewirkt die Wiederholung der Anweisungen solange ```Bedingung == true``` ist.\",\r\n        \"for\": \"```\\nfor(Startanweisung;Solange-Bedingung;Nach_jeder_Wiederholung){Anweisungen}\\n```  \\n\"\r\n            + \"führt zunächst die Startanweisung aus und wiederholt dann die Anweisungen solange ```Bedingung == true``` ist. Am Ende jeder wiederholung wird Nach_jeder_Wiederholung ausgeführt.\",\r\n        \"if\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.  \\nDer ```else```-Teil kann auch weggelassen werden.\",\r\n        \"else\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.\",\r\n        \"switch\": \"```\\nswitch(Selektor){ case Wert_1: Anweisungen_1; break; case Wert_2: Anweisungen_2; break; default: Default-Anweisungen } \\n```  \\nwertet den Selektor-Term aus und führt abhängig vom Termwert Anweisungen_1, Anweisungen_2, ... aus. Entspricht der Termwert keinem der Werte Wert_1, Wert_2, ..., so werden die Default-Anweisungen ausgeführt.\",\r\n        \"%\": \"```\\na % b\\n```  \\n (sprich: 'a modulo b') berechnet den **Rest** der ganzzahligen Division a/b.\",\r\n        \"==\": \"```\\na == b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` gleich sind.  \\nSind a und b **Objekte**, so ergibt ```a == b``` nur dann ```true```, wenn ```a``` und ```b``` auf das **identische** Objekt zeigen.  \\n```==``` nennt man **Vergleichsoperator**.\",\r\n        \"<=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` kleiner oder gleich dem Wert von ```b``` ist.\",\r\n        \">=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` größer oder gleich dem Wert von ```b``` ist.\",\r\n        \"!=\": \"```\\na != b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` **un**gleich sind.  \\nSind ```a``` und ```b``` **Objekte**, so ergibt ```a != b``` dann ```true```, wenn ```a``` und ```b``` **nicht** auf das **identische** Objekt zeigen.  \\n```!=``` nennt man **Ungleich-Operator**.\",\r\n        \"+=\": \"```\\na += b\\n(Kurzschreibweise für a = a + b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erhöht** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"-=\": \"```\\na -= b\\n(Kurzschreibweise für a = a - b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erniedrigt** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"*=\": \"```\\na *= b\\n(Kurzschreibweise für a = a * b)\\n```  \\nbewirkt, dass der Wert von ```a``` mit dem Wert von ```b``` **multipliziert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"/=\": \"```\\na /= b\\n(Kurzschreibweise für a = a / b)\\n```  \\nbewirkt, dass der Wert von ```a``` durch den Wert von ```b``` **dividiert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"++\": \"```\\na++\\n(Kurzschreibweise für a = a + 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins erhöht wird.\",\r\n        \"--\": \"```\\na--\\n(Kurzschreibweise für a = a - 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins eniedrigt wird.\",\r\n        \"=\": \"```\\na = Term\\n```  \\nberechnet den Wert des Terms und weist ihn der Variablen ```a``` zu.  \\n**Vorsicht:**  \\nVerwechsle ```=```(**Zuweisungsoperator**) nicht mit ```==```(**Vergleichsoperator**)!\",\r\n        \"!\": \"```\\n!a\\n```  \\nergibt genau dann ```true```, wenn ```a``` ```false``` ergibt.  \\n```!``` spricht man '**nicht**'.\",\r\n        \"public\": \"```\\npublic\\n```  \\nAttribute und Methoden, die als ```public``` deklariert werden, sind überall (auch außerhalb der Klasse) sichtbar.\",\r\n        \"private\": \"```\\nprivate\\n```  \\nAttribute und Methoden, die als ```private``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse sichtbar.\",\r\n        \"protected\": \"```\\nprotected\\n```  \\nAttribute und Methoden, die als ```protected``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse oder innerhalb von Methoden von Kindklassen sichtbar.\",\r\n        \"return\": \"```\\nreturn Term\\n```  \\nbewirkt, dass die Methode verlassen wird und der Wert des Terms an die aufrufende Stelle zurückgegeben wird.\",\r\n        \"break\": \"```\\nbreak;\\n```  \\ninnerhalb einer Schleife bewirkt, dass die Schleife sofort verlassen und mit den Anweisungen nach der Schleife fortgefahren wird.  \\n\"+\r\n        \"```break``` innerhalb einer ```switch```-Anweisung bewirkt, dass der Block der ```switch```-Anweisung verlassen wird.\",\r\n        \"class\": \"```\\nclass\\n```  \\nMit dem Schlüsselwort ```class``` werden Klassen definiert.\",\r\n        \"extends\": \"```\\nextends\\n```  \\n```class A extends B { ... }``` bedeutet, dass die Klasse A Unterklasse der Klasse B ist.\",\r\n        \"implements\": \"```\\nimplements\\n```  \\n```class A implements B { ... }``` bedeutet, dass die Klasse A das Interface B implementiert, d.h., dass sie alle Methoden besitzen muss, die in B definiert sind.\",\r\n        \"this\": \"```\\nthis\\n```  \\nInnerhalb einer Methodendefinition bezeichnet das Schlüsselwor ```this``` immer dasjenige Objekt, für das die Methode gerade ausgeführt wird.\",\r\n\r\n    }\r\n\r\n    constructor(private editor: Editor) {\r\n\r\n    }\r\n\r\n    provideHover(model: monaco.editor.ITextModel, position: monaco.Position, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Hover> {\r\n\r\n        let selection: monaco.Selection = this.editor.editor.getSelection();\r\n        \r\n        // if cursor is inside current selection then don't show hover, because editor.onDidChangeCursorPosition evaluates selected Text \r\n        // (see class Editor).\r\n        if(selection != null){\r\n            if(selection.startLineNumber != selection.endLineNumber || selection.startColumn != selection.endColumn){\r\n                if(\r\n                    (selection.startLineNumber < position.lineNumber || selection.startLineNumber == position.lineNumber && selection.startColumn <= position.column) && \r\n                    (selection.endLineNumber > position.lineNumber || selection.endLineNumber == position.lineNumber && selection.endColumn >= position.column) \r\n                ){\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        let module: Module = this.editor.main.getCurrentWorkspace()?.getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        for(let errorList of module.errors){\r\n            for(let error of errorList){\r\n                if(error.position.line == position.lineNumber && \r\n                    error.position.column <= position.column && \r\n                    error.position.column + error.position.length >= position.column){\r\n                        return null; // Show error-tooltip and don't show hover-tooltip\r\n                    }\r\n            }\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let declarationAsString = \"\";\r\n\r\n        if (element != null) {\r\n        } else {\r\n            let word = this.getWordUnderCursor(model, position);\r\n            let desc = MyHoverProvider.keywordDescriptions[word];\r\n            if (desc != null) {\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: desc }],\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getWordUnderCursor(model: monaco.editor.ITextModel, position: monaco.Position)\r\n         : string {\r\n        \r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let word = \"\";\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierOrArrayDescriptor(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        if (end - begin > 1) {\r\n            word = text.substring(begin, end);\r\n        } else {\r\n            end = pos;\r\n            while (end < text.length && this.isInsideOperator(text.charAt(end))) {\r\n                end++;\r\n            }\r\n    \r\n            begin = pos;\r\n            while (begin > 0 && this.isInsideOperator(text.charAt(begin - 1))) {\r\n                begin--;\r\n            }\r\n    \r\n            if (end - begin > 0) {\r\n                word = text.substring(begin, end);\r\n            }\r\n        }\r\n\r\n        return word;\r\n\r\n    }\r\n\r\n    widenDeclaration(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        identifier: string): string {\r\n\r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierChain(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        let lenght: number = identifier?.length == null ? 1 : identifier.length;\r\n\r\n        if (end - begin > length) {\r\n            return text.substring(begin, end);\r\n        }\r\n\r\n        return identifier;\r\n    }\r\n\r\n    isInsideIdentifierChain(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß_\\[\\]\\.]/i);\r\n\r\n    }\r\n\r\n    isInsideOperator(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[!%<>=\\+\\-\\*\\/]/i);\r\n\r\n    }\r\n\r\n    isInsideIdentifierOrArrayDescriptor(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß\\[\\]]/i);\r\n\r\n    }\r\n\r\n\r\n}","import { QuickFix } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyCodeActionProvider implements monaco.languages.CodeActionProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideCodeActions(model: monaco.editor.ITextModel, range: monaco.Range, context: monaco.languages.CodeActionContext, token: monaco.CancellationToken): monaco.languages.CodeActionList | Promise<monaco.languages.CodeActionList> {\r\n        const actions = context.markers.map(error => {\r\n            let quickFix: QuickFix = <any>error.relatedInformation;\r\n            if (quickFix == null) return null;\r\n\r\n            let codeAction: monaco.languages.CodeAction = {\r\n                title: quickFix.title,\r\n                diagnostics: [error],\r\n                kind: \"quickfix\",\r\n                edit: {\r\n                    edits: quickFix.editsProvider(model.uri)\r\n                },\r\n                isPreferred: true\r\n            };\r\n            return codeAction;\r\n        });\r\n        return {\r\n            actions: actions,\r\n            dispose: () => { }\r\n        }\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Editor } from \"./Editor.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyReferenceProvider implements monaco.languages.ReferenceProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideReferences(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.ReferenceContext, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Location[]> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) return null;\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let referencePositions: monaco.languages.Location[] = [];\r\n\r\n        usagePositions.forEach((upInCurrentModule, module) => {\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    referencePositions.push(\r\n                        {\r\n                            uri: module.uri,\r\n                            range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length }\r\n                        });\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        return referencePositions;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import { Main } from \"../Main.js\";\r\n\r\nexport type HelperDirection = \"top\" | \"bottom\" | \"left\" | \"right\";\r\n\r\nexport class Helper {\r\n\r\n    public static openHelper(text: string, targetElement: JQuery<HTMLElement>, direction: HelperDirection) {\r\n\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.removeClass(['jo_arrow_box_left', 'jo_arrow_box_right', 'jo_arrow_box_top', 'jo_arrow_box_bottom']);\r\n\r\n        $helper.addClass('jo_arrow_box_' + direction);\r\n\r\n        $helper.css({ left: '', right: '', top: '', bottom: '' });\r\n\r\n        let to = targetElement.offset();\r\n        let b = jQuery('body');\r\n\r\n        let delta: number = 34;\r\n\r\n        switch (direction) {\r\n            case \"bottom\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                bottom: b.height() - to.top + delta\r\n            });\r\n                break;\r\n            case \"top\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                top: to.top + targetElement.height() + 26\r\n            });\r\n                break;\r\n            case \"left\": $helper.css({\r\n                left: to.left + targetElement.width() + delta,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n            case \"right\": $helper.css({\r\n                right: b.width() - to.left,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n        }\r\n\r\n        $helper.find('span').html(text);\r\n\r\n        let $button = $helper.find('.jo_button');\r\n        $button.on('click', (e) => {\r\n            e.stopPropagation();\r\n            $button.off('click');\r\n            Helper.close();\r\n        });\r\n\r\n        $helper.fadeIn(800);\r\n\r\n    }\r\n\r\n    static close() {\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.fadeOut(800);\r\n    }\r\n\r\n\r\n    static showHelper(id: string, mainBase: Main, $element?: JQuery<HTMLElement>) {\r\n\r\n        let main: Main;\r\n        if(mainBase instanceof Main){\r\n            main = mainBase;\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        let helperHistory = main.user.settings!.helperHistory;\r\n\r\n        let flag = id + \"Done\";\r\n\r\n        if (helperHistory != null && (helperHistory[flag] == null || !helperHistory[flag])) {\r\n            helperHistory[flag] = true;\r\n            main.networkManager.sendUpdateUserSettings(() => { });\r\n\r\n            let text: string = \"\";\r\n            let direction: HelperDirection = \"left\";\r\n\r\n            switch (id) {\r\n                case \"newDatabaseHelper\":\r\n                    text = `Es gibt noch keine Datenbank. <br> Nutzen Sie den Button\r\n                        <span class='img_add-database-dark jo_inline-image'></span> um eine Datenbank anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                    case \"newSQLFileHelper\":\r\n                        text = `Es gibt noch keine Datei mit SQL-Anweisungen. <br> Nutzen Sie den Button \r\n                            <span class='img_add-file-dark jo_inline-image'></span> um eine neue Datei anzulegen.\r\n                            `;\r\n                        direction = \"left\";\r\n                        break;\r\n                case \"homeButtonHelper\":\r\n                    text = \"Mit dem Home-Button <span class='img_home-dark jo_inline-image'></span> können Sie wieder zu Ihren eigenen Workspaces wechseln.\";\r\n                    direction = \"top\";\r\n                    $element = jQuery('.img_home-dark');\r\n                    break;\r\n                case \"playButtonHelper\":\r\n                    text = `Mit dem \"Start-Button\"\r\n                        (<span class='img_start-dark jo_inline-image'></span>) \r\n                        oder der Tastenkombination &lt;Strg&gt;&nbsp;+&nbsp&lt;Enter&gt; \r\n                        wird die Anweisung ausgeführt, in der der Cursor gerade steht. \r\n                        <br> Wollen Sie mehrere Anweisungen hintereinander ausführen, so markieren \r\n                        Sie alle Anweisungen und klicken Sie dann auf <span class='img_start-dark jo_inline-image'></span>\r\n                        oder drücken Sie  &lt;Strg&gt;&nbsp;+&nbsp&lt;Enter&gt;. `;\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"consoleHelper\": \r\n                    text=`\r\n                        Hier können Sie Anweisungen oder Terme eingeben, die nach Bestätigung mit der Enter-Taste ausgeführt/ausgewertet werden. Das Ergebnis sehen Sie im Bereich über der Eingabezeile. <br>\r\n                        Falls das Programm gerade pausiert (z.B. bei Ausführung in Einzelschritten) können Sie auch auf die Variablen des aktuellen Sichtbarkeitsbereiches zugreifen.\r\n                    `;\r\n                    direction = \"bottom\";\r\n            }\r\n\r\n            if (text != \"\" && $element != null && $element.length > 0) {\r\n                Helper.openHelper(text, $element, direction);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MyCompletionItemProvider } from \"./MyCompletionItemProvider.js\";\r\nimport { defineMyJava } from \"./MyJava.js\";\r\nimport { MySignatureHelpProvider } from \"./MySignatureHelpProvider.js\";\r\nimport { MyHoverProvider } from \"./MyHoverProvider.js\";\r\nimport { MyCodeActionProvider } from \"./MyCodeActionProvider.js\";\r\nimport { MyReferenceProvider } from \"./MyReferenceProvider.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { defineVscSQL } from \"./VscSql.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\nexport class Editor {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n\r\n    cw: monaco.editor.IContentWidget = null;\r\n\r\n    dontPushNextCursorMove: number = 0;\r\n\r\n    constructor(public main: MainBase, private showMinimap: boolean, private isEmbedded: boolean) {\r\n    }\r\n\r\n    initGUI($element: JQuery<HTMLElement>) {\r\n\r\n\r\n\r\n        defineVscSQL();\r\n\r\n        monaco.editor.defineTheme('myCustomThemeDark', {\r\n            base: 'vs-dark', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'functions', foreground: 'dcdcaa', fontStyle: 'italic' },\r\n                { token: 'string.sql', foreground: '3DC9B0' },\r\n                { token: 'number', foreground: '7bef3f' },\r\n                { token: 'type', foreground: '499cd6' },\r\n                { token: 'identifier', foreground: 'effefe' },\r\n                { token: 'statement', foreground: '9cdcfe', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '619ceb', fontStyle: 'bold' },\r\n                { token: 'table', foreground: 'ff0000', fontStyle: 'bold' },\r\n                { token: 'delimiter', foreground: 'e8eb38' }\r\n                // { token: 'comment.js', foreground: '008800', fontStyle: 'bold italic underline' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#1e1e1e\",\r\n                \"jo_highlightStatementGreen\": \"#004000\",\r\n                \"jo_highlightStatementYellow\": \"#404000\",\r\n                \"jo_highlightStatementRed\": \"#402020\"\r\n            }\r\n        });\r\n\r\n        monaco.editor.defineTheme('myCustomThemeLight', {\r\n            base: 'vs', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'functions', foreground: '694E16', fontStyle: 'italic bold' },\r\n                { token: 'string.sql', foreground: 'a03030' },\r\n                { token: 'number', foreground: '404040' },\r\n                { token: 'type', foreground: '0000ff', fontStyle: 'bold' },\r\n                { token: 'identifier', foreground: '8000e0' },\r\n                { token: 'statement', foreground: '001080', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '00a000', fontStyle: 'bold' },\r\n                { token: 'comment', foreground: '808080', fontStyle: 'italic' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#FFFFFF\",\r\n                \"editor.foreground\": \"#000000\",\r\n                \"editor.inactiveSelectionBackground\": \"#E5EBF1\",\r\n                \"editorIndentGuide.background\": \"#D3D3D3\",\r\n                \"editorIndentGuide.activeBackground\": \"#939393\",\r\n                \"editor.selectionHighlightBackground\": \"#ADD6FF80\",\r\n                \"editorSuggestWidget.background\": \"#F3F3F3\",\r\n                \"activityBarBadge.background\": \"#007ACC\",\r\n                \"sideBarTitle.foreground\": \"#6F6F6F\",\r\n                \"list.hoverBackground\": \"#E8E8E8\",\r\n                \"input.placeholderForeground\": \"#767676\",\r\n                \"searchEditor.textInputBorder\": \"#CECECE\",\r\n                \"settings.textInputBorder\": \"#CECECE\",\r\n                \"settings.numberInputBorder\": \"#CECECE\",\r\n                \"statusBarItem.remoteForeground\": \"#FFF\",\r\n                \"statusBarItem.remoteBackground\": \"#16825D\",\r\n                \"jo_highlightStatementGreen\": \"#004000\",\r\n                \"jo_highlightStatementYellow\": \"#404000\",\r\n                \"jo_highlightStatementRed\": \"#400000\"\r\n            }\r\n        });\r\n\r\n\r\n        this.editor = monaco.editor.create($element[0], {\r\n            // value: [\r\n            //     'function x() {',\r\n            //     '\\tconsole.log(\"Hello world!\");',\r\n            //     '}'\r\n            // ].join('\\n'),\r\n            // language: 'myJava',\r\n            language: 'vscSQL',\r\n            lightbulb: {\r\n                enabled: true\r\n            },\r\n            // gotoLocation: {\r\n            //     multipleReferences: \"gotoAndPeek\"\r\n            // },\r\n            lineDecorationsWidth: 0,\r\n            peekWidgetDefaultFocus: \"tree\",\r\n            fixedOverflowWidgets: true,\r\n            quickSuggestions: true,\r\n            quickSuggestionsDelay: 10,\r\n            fontSize: 14,\r\n            fontFamily: \"Consolas, Roboto Mono\",\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            selectOnLineNumbers: false,\r\n            // selectionHighlight: false,\r\n            automaticLayout: true,\r\n            scrollBeyondLastLine: false,\r\n            occurrencesHighlight: false,\r\n            autoIndent: \"full\",\r\n            dragAndDrop: true,\r\n            formatOnType: true,\r\n            formatOnPaste: true,\r\n            suggestFontSize: 16,\r\n            suggestLineHeight: 22,\r\n            suggest: {\r\n                localityBonus: true,\r\n                insertMode: \"replace\"\r\n                // snippetsPreventQuickSuggestions: false\r\n            },\r\n            parameterHints: { enabled: true, cycle: true },\r\n            // //@ts-ignore\r\n            // contribInfo: {\r\n            //     suggestSelection: 'recentlyUsedByPrefix',\r\n            // },\r\n\r\n            mouseWheelZoom: this.isEmbedded,\r\n\r\n            minimap: {\r\n                enabled: this.showMinimap\r\n            },\r\n            scrollbar: {\r\n                vertical: 'auto',\r\n                horizontal: 'auto'\r\n            },\r\n            theme: \"myCustomThemeDark\",\r\n            // automaticLayout: true\r\n\r\n\r\n        }\r\n        );\r\n\r\n        let that = this;\r\n\r\n        let mouseWheelListener = (event: WheelEvent) => {\r\n            if (event.ctrlKey === true) {\r\n\r\n                that.changeEditorFontSize(Math.sign(event.deltaY), true);\r\n\r\n                event.preventDefault();\r\n            }\r\n        };\r\n\r\n\r\n        this.editor.onDidChangeConfiguration((event) => {\r\n            if (event.hasChanged(monaco.editor.EditorOption.fontInfo) && this.isEmbedded) {\r\n\r\n                this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n            }\r\n        });\r\n\r\n        this.editor.onDidChangeCursorPosition((event) => {\r\n\r\n            that.onDidChangeCursorPosition(event.position);\r\n\r\n        });\r\n\r\n        // We need this to set our model after user uses Strg+click on identifier\r\n        this.editor.onDidChangeModel((event) => {\r\n\r\n            let element: HTMLDivElement = <any>$element.find('.monaco-editor')[0];\r\n            element.removeEventListener(\"wheel\", mouseWheelListener);\r\n            element.addEventListener(\"wheel\", mouseWheelListener, { passive: false });\r\n\r\n            if (this.main.getCurrentWorkspace() == null) return;\r\n\r\n            let module = this.main.getCurrentWorkspace().getModuleByMonacoModel(this.editor.getModel());\r\n            if (this.main instanceof Main && module != null) {\r\n\r\n                this.main.projectExplorer.setActiveAfterExternalModelSet(module);\r\n            }\r\n        });\r\n\r\n        monaco.languages.registerHoverProvider('vscSQL', new MyHoverProvider(this));\r\n\r\n        monaco.languages.registerCompletionItemProvider('vscSQL', new MyCompletionItemProvider(this.main));\r\n        monaco.languages.registerCodeActionProvider('vscSQL', new MyCodeActionProvider(this.main));\r\n        monaco.languages.registerReferenceProvider('vscSQL', new MyReferenceProvider(this.main));\r\n\r\n\r\n        monaco.languages.registerSignatureHelpProvider('vscSQL', new MySignatureHelpProvider(this.main));\r\n\r\n        this.editor.onMouseDown((e: monaco.editor.IEditorMouseEvent) => {\r\n            const data = e.target.detail;\r\n            if (e.target.type !== monaco.editor.MouseTargetType.GUTTER_GLYPH_MARGIN &&\r\n                e.target.type !== monaco.editor.MouseTargetType.GUTTER_LINE_NUMBERS || data.isAfterLines) {\r\n                return;\r\n            }\r\n            that.onMarginMouseDown(e.target.position.lineNumber);\r\n            return;\r\n        });\r\n\r\n\r\n        // If editor is instantiated before fonts are loaded then indentation-lines\r\n        // are misplaced, see https://github.com/Microsoft/monaco-editor/issues/392\r\n        // so:\r\n        setTimeout(() => {\r\n            monaco.editor.remeasureFonts();\r\n        }, 2000);\r\n\r\n        this.addActions();\r\n\r\n        //@ts-ignore\r\n        this.editor.onDidType((text) => { that.onDidType(text) });\r\n\r\n        return this.editor;\r\n    }\r\n\r\n\r\n    onDidType(text: string) {\r\n        //        const endOfCommentText = \" * \\n */\";\r\n\r\n        const insertEndOfComment = (pos, insertText: string, newLine: number, newColumn: number) => {\r\n            const range = new monaco.Range(\r\n                pos.lineNumber,\r\n                pos.column,\r\n                pos.lineNumber,\r\n                pos.column\r\n            );\r\n            this.editor.executeEdits(\"new-bullets\", [\r\n                { range, text: insertText }\r\n            ]);\r\n\r\n            // Set position after bulletText\r\n            this.editor.setPosition({\r\n                lineNumber: newLine,\r\n                column: newColumn\r\n            });\r\n        };\r\n\r\n        if (text === \"\\n\") {\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            const prevLine = model.getLineContent(position.lineNumber - 1);\r\n            if (prevLine.trim().indexOf(\"/*\") === 0 && !prevLine.trimRight().endsWith(\"*/\")) {\r\n                const nextLine = position.lineNumber < model.getLineCount() ? model.getLineContent(position.lineNumber + 1) : \"\";\r\n                if (!nextLine.trim().startsWith(\"*\")) {\r\n                    let spacesAtBeginningOfLine: string = prevLine.substr(0, prevLine.length - prevLine.trimLeft().length);\r\n                    if (prevLine.trim().indexOf(\"/**\") === 0) {\r\n                        insertEndOfComment(position, \"\\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    } else {\r\n                        insertEndOfComment(position, \" * \\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    lastTime: number = 0;\r\n    setFontSize(fontSizePx: number) {\r\n\r\n        // console.log(\"Set font size: \" + fontSizePx);\r\n        let time = new Date().getTime();\r\n        if (time - this.lastTime < 150) return;\r\n        this.lastTime = time;\r\n\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (this.main instanceof Main) {\r\n            this.main.viewModeController.saveFontSize(fontSizePx);\r\n        }\r\n\r\n        if (fontSizePx != editorfs) {\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx\r\n            });\r\n\r\n            // editor does not set fontSizePx, but fontSizePx * zoomfactor with unknown zoom factor, so \r\n            // we have to do this dirty workaround:\r\n            let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n            let factor = newEditorfs / fontSizePx;\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx / factor\r\n            });\r\n\r\n        }\r\n\r\n        jQuery('.jo_editorFontSize').css('font-size', fontSizePx + \"px\");\r\n        jQuery('.jo_editorFontSize').css('line-height', (fontSizePx + 2) + \"px\");\r\n\r\n        document.documentElement.style.setProperty('--breakpoint-size', fontSizePx + 'px');\r\n        document.documentElement.style.setProperty('--breakpoint-radius', fontSizePx / 2 + 'px');\r\n\r\n\r\n        this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n    }\r\n\r\n    changeEditorFontSize(delta: number, dynamic: boolean = true) {\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (dynamic) {\r\n            if (editorfs < 10) {\r\n                delta *= 1;\r\n            } else if (editorfs < 20) {\r\n                delta *= 2;\r\n            } else {\r\n                delta *= 4;\r\n            }\r\n        }\r\n\r\n        let newEditorFs = editorfs + delta;\r\n        if (newEditorFs >= 6 && newEditorFs <= 80) {\r\n            this.setFontSize(newEditorFs);\r\n        }\r\n    }\r\n\r\n\r\n    addActions() {\r\n        let that = this;\r\n\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Find bracket',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'Finde korrespondierende Klammer',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.5,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                ed.getAction('editor.action.jumpToBracket').run();\r\n                return null;\r\n            }\r\n        });\r\n\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Execute statement',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'SQL-Anweisung ausführen',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.Enter],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.0,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                that.main.getActionManager().trigger('execute');\r\n                return null;\r\n            }\r\n        });\r\n\r\n        //console.log(this.editor.getSupportedActions());\r\n    }\r\n\r\n    onMarginMouseDown(lineNumber: number) {\r\n\r\n    }\r\n\r\n    elementDecoration: string[] = [];\r\n    onDidChangeCursorPosition(position: { lineNumber: number, column: number }) {\r\n\r\n        if (position == null) position = this.editor.getPosition();\r\n\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, []);\r\n            return;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        if (element != null) {\r\n            let usagePositions = element.usagePositions;\r\n            let upInCurrentModule = usagePositions.get(module);\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    decorations.push({\r\n                        range: { startColumn: up.column, startLineNumber: up.line, endColumn: up.column + up.length, endLineNumber: up.line },\r\n                        options: {\r\n                            className: 'jo_revealSyntaxElement', isWholeLine: false, overviewRuler: {\r\n                                color: { id: \"editorIndentGuide.background\" },\r\n                                darkColor: { id: \"editorIndentGuide.activeBackground\" },\r\n                                position: monaco.editor.OverviewRulerLane.Left\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        let executeActionActive = false;\r\n\r\n        for(let sqlStatement of module.getSQLSTatementsAtSelection(this.editor.getSelection())){\r\n\r\n            let classname = \"jo_highlightStatementGreen\";\r\n            if (sqlStatement != null) {\r\n                if (sqlStatement.hasErrors) {\r\n                    classname = \"jo_highlightStatementRed\";\r\n                    if (sqlStatement.acceptedBySQLite) {\r\n                        classname = \"jo_highlightStatementYellow\";\r\n                        executeActionActive = true;\r\n                    }\r\n                } else {\r\n                    executeActionActive = true;\r\n                }\r\n    \r\n                decorations.push({\r\n                    range: {\r\n                        startColumn: sqlStatement.from.column, startLineNumber: sqlStatement.from.line,\r\n                        endColumn: sqlStatement.to.column, endLineNumber: sqlStatement.to.line\r\n                    },\r\n                    options: {\r\n                        className: classname, isWholeLine: false, overviewRuler: {\r\n                            color: { id: classname },\r\n                            darkColor: { id: classname },\r\n                            position: monaco.editor.OverviewRulerLane.Left\r\n                        },\r\n                        minimap: {\r\n                            color: { id: classname },\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        },\r\n                        zIndex: -100\r\n                    }\r\n                })\r\n    \r\n            }\r\n        }\r\n\r\n\r\n        this.main.getActionManager().setActive('execute', executeActionActive);\r\n\r\n        if(executeActionActive && !this.main.isEmbedded()){\r\n            Helper.showHelper(\"playButtonHelper\", <any>this.main, jQuery('div.img_start-dark'));\r\n        }\r\n\r\n\r\n        this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, decorations);\r\n\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.main.getCurrentlyEditedModule();\r\n    }\r\n\r\n\r\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport function defineVscSQL() {\r\n    monaco.languages.register({\r\n        id: 'vscSQL',\r\n        extensions: ['.sql'],\r\n        //  mimetypes: [\"text/x-java-source\", \"text/x-java\"]  \r\n    });\r\n\r\n    let conf: monaco.languages.LanguageConfiguration = {\r\n        onEnterRules: [\r\n            {\r\n                // e.g. /** | */\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                afterText: /^\\s*\\*\\/$/,\r\n                action: { indentAction: monaco.languages.IndentAction.IndentOutdent, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g. /** ...|\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g.  * ...|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: '* ' }\r\n            },\r\n            {\r\n                // e.g.  */|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            },\r\n            {\r\n                // e.g.  *-----*/|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*[^/]*\\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            }\r\n        ],\r\n        comments: {\r\n            lineComment: '--',\r\n            blockComment: ['/*', '*/'],\r\n        },\r\n        brackets: [\r\n            ['{', '}'],\r\n            ['[', ']'],\r\n            ['(', ')']\r\n        ],\r\n        autoClosingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ],\r\n        surroundingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ]\r\n    };\r\n    let language = {\r\n\r\n        defaultToken: '',\r\n        tokenPostfix: '.sql',\r\n        ignoreCase: true,\r\n        brackets: [\r\n            { open: '[', close: ']', token: 'delimiter.square' },\r\n            { open: '(', close: ')', token: 'delimiter.parenthesis' }\r\n        ],\r\n        escapes: /\\\\(?:[abfnrtv\\\\\"'])/,\r\n        keywords: [\r\n            \"ABORT\", \"ACTION\", \"ADD\", \"AFTER\", \"ALL\", \"ALTER\", \"ANALYZE\", \"AND\", \"AS\", \"ASC\", \"ATTACH\", \"AUTOINCREMENT\", \"BEFORE\",\r\n            \"BEGIN\", \"BETWEEN\", \"BY\", \"CASCADE\", \"CASE\", \"CAST\", \"CHECK\", \"COLLATE\", \"COLUMN\", \"COMMIT\", \"CONFLICT\", \"CONSTRAINT\",\r\n            \"CREATE\", \"CROSS\", \"CURRENT_DATE\", \"CURRENT_TIME\", \"CURRENT_TIMESTAMP\", \"DATABASE\", \"DEFAULT\", \"DEFERRABLE\", \"DEFERRED\",\r\n            \"DELETE\", \"DESC\", \"DETACH\", \"DISTINCT\", \"DROP\", \"EACH\", \"ELSE\", \"END\", \"ESCAPE\", \"EXCEPT\", \"EXCLUSIVE\", \"EXISTS\", \"EXPLAIN\",\r\n            \"FAIL\", \"FOR\", \"FOREIGN\", \"FROM\", \"FULL\", \"GLOB\", \"GROUP\", \"HAVING\", \"IF\", \"IGNORE\", \"IMMEDIATE\", \"IN\", \"INDEX\", \"INDEXED\",\r\n            \"INITIALLY\", \"INNER\", \"INSERT\", \"INSTEAD\", \"INTERSECT\", \"INTO\", \"IS\", \"ISNULL\", \"JOIN\", \"KEY\", \"LEFT\", \"LIKE\", \"LIMIT\", \"MATCH\",\r\n            \"NATURAL\", \"NO\", \"NOT\", \"NOTNULL\", \"NULL\", \"OF\", \"OFFSET\", \"ON\", \"OR\", \"ORDER\", \"OUTER\", \"PLAN\", \"PRAGMA\", \"PRIMARY\", \"QUERY\",\r\n            \"RAISE\", \"RECURSIVE\", \"REFERENCES\", \"REGEXP\", \"REINDEX\", \"RELEASE\", \"RENAME\", \"REPLACE\", \"RESTRICT\", \"RIGHT\", \"ROLLBACK\", \"ROW\",\r\n            \"SAVEPOINT\", \"SELECT\", \"SET\", \"TABLE\", \"TEMP\", \"TEMPORARY\", \"THEN\", \"TO\", \"TRANSACTION\", \"TRIGGER\", \"UNION\", \"UNIQUE\", \"UPDATE\",\r\n            \"USING\", \"VACUUM\", \"VALUES\", \"VIEW\", \"VIRTUAL\", \"WHEN\", \"WHERE\", \"WITH\", \"WITHOUT\", \"ENGINE\", \"CHARSET\"\r\n        ],\r\n        operators: [\r\n            \"AND\", \"BETWEEN\", \"IN\", \"LIKE\", \"NOT\", \"OR\", \"IS\", \"NULL\", \"INTERSECT\", \"UNION\", \"INNER\", \"JOIN\", \"LEFT\", \"OUTER\", \"RIGHT\"\r\n        ],\r\n        builtinFunctions: [\r\n            \"abs\", \"changes\", \"char\", \"coalesce\", \"count\", \"glob\", \"hex\", \"ifnull\",\r\n            \"iif\", \"instr\", \"last_insert_rowid\", \"length\", \"like\", \"likelihood\", \"likely\",\r\n            \"lower\", \"ltrim\", \"max\", \"min\", \"nullif\", \"quote\", \"random\", \"randomblob\",\r\n            \"replace\", \"round\", \"rtrim\", \"sign\", \"soundex\", \"sqlite_version\", \"substr\", \"substring\",\r\n            \"total_changes\", \"trim\", \"typeof\", \"unicode\", \"unlikely\", \"upper\", \"zeroblob\"\r\n        ],\r\n        builtinVariables: [\r\n            // NOT SUPPORTED\r\n        ],\r\n        pseudoColumns: [\r\n            // NOT SUPPORTED\r\n        ],\r\n        tokenizer: {\r\n            root: [\r\n                { include: '@comments' },\r\n                { include: '@whitespace' },\r\n                { include: '@pseudoColumns' },\r\n                { include: '@numbers' },\r\n                { include: '@strings' },\r\n                { include: '@complexIdentifiers' },\r\n                { include: '@scopes' },\r\n                [/[;,.]/, 'delimiter'],\r\n                [/[()]/, '@brackets'],\r\n                [/[a-z_$äöü][\\w$äöüßÄÖÜ]*(?=\\()/, {\r\n                    cases: {\r\n                        '@builtinFunctions': 'functions',\r\n                        '@keywords': 'keyword',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[\\w@#$]+/, {\r\n                    cases: {\r\n                        '@keywords': 'keyword',\r\n                        '@operators': 'operator',\r\n                        '@builtinVariables': 'predefined',\r\n                        // '@builtinFunctions': 'functions',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[<>=!%&+\\-*/|~^]/, 'operator'],\r\n            ],\r\n            whitespace: [\r\n                [/\\s+/, 'white']\r\n            ],\r\n            comments: [\r\n                [/--+.*/, 'comment'],\r\n                [/\\/\\*/, { token: 'comment.quote', next: '@comment' }]\r\n            ],\r\n            comment: [\r\n                [/[^*/]+/, 'comment'],\r\n                // Not supporting nested comments, as nested comments seem to not be standard?\r\n                // i.e. http://stackoverflow.com/questions/728172/are-there-multiline-comment-delimiters-in-sql-that-are-vendor-agnostic\r\n                // [/\\/\\*/, { token: 'comment.quote', next: '@push' }],    // nested comment not allowed :-(\r\n                [/\\*\\//, { token: 'comment.quote', next: '@pop' }],\r\n                [/./, 'comment']\r\n            ],\r\n            pseudoColumns: [\r\n                [/[$][A-Za-z_][\\w@#$]*/, {\r\n                    cases: {\r\n                        '@pseudoColumns': 'predefined',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n            ],\r\n            numbers: [\r\n                [/0[xX][0-9a-fA-F]*/, 'number'],\r\n                [/[$][+-]*\\d*(\\.\\d*)?/, 'number'],\r\n                [/((\\d+(\\.\\d*)?)|(\\.\\d+))([eE][\\-+]?\\d+)?/, 'number']\r\n            ],\r\n            strings: [\r\n                [/'/, { token: 'string', next: '@string' }],\r\n            ],\r\n            string: [\r\n                [/[^\\\\']+/, 'string'],\r\n                [/\\\\./, 'string.escape.invalid'],\r\n                [/''/, 'string'],\r\n                [/'/, { token: 'string', next: '@pop' }]\r\n            ],\r\n            complexIdentifiers: [\r\n                [/\"/, { token: 'identifier.quote', next: '@quotedIdentifier' }]\r\n            ],\r\n            quotedIdentifier: [\r\n                [/[^\"]+/, 'identifier'],\r\n                [/\"\"/, 'identifier'],\r\n                [/\"/, { token: 'identifier.quote', next: '@pop' }]\r\n            ],\r\n            scopes: [\r\n                // NOT SUPPORTED\r\n            ]\r\n        }\r\n\r\n\r\n\r\n    };\r\n\r\n    //@ts-ignore\r\n    monaco.languages.setLanguageConfiguration('vscSQL', conf);\r\n    //@ts-ignore\r\n    monaco.languages.setMonarchTokensProvider('vscSQL', language);\r\n\r\n\r\n\r\n}","import { Lexer } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Token, TokenList, TokenType, tokenListToString } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class Formatter implements monaco.languages.DocumentFormattingEditProvider,\r\n    monaco.languages.OnTypeFormattingEditProvider {\r\n\r\n    autoFormatTriggerCharacters: string[] = ['\\n'];\r\n\r\n    displayName?: string = \"Java-Autoformat\";\r\n\r\n\r\n    constructor(\r\n        // private main: Main\r\n    ) {\r\n\r\n    }\r\n\r\n    init() {\r\n        monaco.languages.registerDocumentFormattingEditProvider('myJava', this);\r\n        monaco.languages.registerOnTypeFormattingEditProvider('myJava', this);\r\n    }\r\n\r\n    provideOnTypeFormattingEdits(model: monaco.editor.ITextModel, position: monaco.Position, ch: string, options: monaco.languages.FormattingOptions, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n    deleteOverlappingRanges(edits: monaco.languages.TextEdit[]) {\r\n        for (let i = 0; i < edits.length - 1; i++) {\r\n            let e = edits[i];\r\n            let e1 = edits[i + 1];\r\n            if (e.range.endLineNumber < e1.range.startLineNumber) continue;\r\n            if (e.range.endLineNumber == e1.range.startLineNumber) {\r\n                if (e.range.endColumn >= e1.range.startColumn) {\r\n                    edits.splice(i + 1, 1);\r\n                } else {\r\n                    if (e.range.endColumn == 0 && e.text.length > 0 && e1.range.startColumn == 1 && e1.range.endColumn > e1.range.startColumn && e1.text == \"\") {\r\n                        let delta = e.text.length - (e1.range.endColumn - e1.range.startColumn);\r\n                        if (delta > 0) { \r\n                            e.text = e.text.substr(0, delta);\r\n                            edits.splice(i+1, 1);\r\n                        }\r\n                        else if (delta < 0)\r\n                        { \r\n                            //@ts-ignore\r\n                            e1.range.endColumn = e1.range.startColumn - delta;\r\n                            edits.splice(i, 1);\r\n                            i--;\r\n\r\n                         }\r\n                        else {\r\n                            edits.splice(i, 2);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    provideDocumentFormattingEdits(model: monaco.editor.ITextModel,\r\n        options: monaco.languages.FormattingOptions,\r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n\r\n    format(model: monaco.editor.ITextModel): monaco.languages.TextEdit[] {\r\n\r\n        let edits: monaco.languages.TextEdit[] = [];\r\n\r\n        // if (this.main.currentWorkspace == null || this.main.currentWorkspace.currentlyOpenModule == null) {\r\n        //     return [];\r\n        // }\r\n\r\n        // let text = this.main.monaco_editor.getValue({ preserveBOM: false, lineEnding: \"\\n\" });\r\n\r\n        let text = model.getValue(monaco.editor.EndOfLinePreference.LF);\r\n\r\n        let tokenlist = new Lexer().lex(text).tokens;\r\n\r\n        // let tokenlist = this.main.currentWorkspace.currentlyOpenModule.tokenList;\r\n\r\n        if (tokenlist == null) return [];\r\n\r\n        // TODO:\r\n        // { at the end of line, with one space before; followed only by spaces and \\n\r\n        // indent lines according to { and }\r\n        // Beware: int i[] = { ... }\r\n        // exactly one space before/after binary operators\r\n        // no space after ( and no space before )\r\n        // (   ) -> ()\r\n        // (  ()) -> (())\r\n        // (()  ) -> (())\r\n\r\n        let lastNonSpaceToken: Token = null;\r\n        let indentLevel = 0;\r\n        let tabSize = 3;\r\n        let curlyBracesOpenAtLines: number[] = [];\r\n        let indentLevelAtSwitchStatements: number[] = [];\r\n        let switchHappend: boolean = false;\r\n        let lastTokenWasNewLine: number = 0;\r\n        let roundBracketsOpen: number = 0;\r\n\r\n        for (let i = 0; i < tokenlist.length; i++) {\r\n\r\n            let t = tokenlist[i];\r\n            lastTokenWasNewLine--;\r\n\r\n            switch (t.tt) {\r\n\r\n                case TokenType.leftCurlyBracket:\r\n                    if (switchHappend) {\r\n                        switchHappend = false;\r\n                        indentLevelAtSwitchStatements.push(indentLevel + 2);\r\n                        indentLevel++;\r\n                    }\r\n                    indentLevel++;\r\n                    curlyBracesOpenAtLines.push(t.position.line);\r\n                    if (lastNonSpaceToken != null) {\r\n                        let tt = lastNonSpaceToken.tt;\r\n                        if (tt == TokenType.rightBracket || tt == TokenType.identifier || tt == TokenType.leftRightSquareBracket) {\r\n                            this.replaceBetween(lastNonSpaceToken, t, edits, \" \");\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let token1 = tokenlist[i + 1];\r\n                        if (token1.tt != TokenType.newline && token1.tt != TokenType.space) {\r\n                            this.insertSpaces(edits, token1.position.line, token1.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    if (indentLevelAtSwitchStatements[indentLevelAtSwitchStatements.length - 1] == indentLevel) {\r\n                        indentLevelAtSwitchStatements.pop();\r\n                        indentLevel--;\r\n                        // if(t.position.column >= 3){\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                        // }    \r\n                    }\r\n                    indentLevel--;\r\n                    let openedAtLine = curlyBracesOpenAtLines.pop();\r\n                    if (openedAtLine != null && openedAtLine != t.position.line) {\r\n                        if (lastNonSpaceToken != null && lastNonSpaceToken.position.line == t.position.line) {\r\n                            this.replace(edits, t.position, t.position, \"\\n\" + \" \".repeat(indentLevel * tabSize));\r\n                        }\r\n                    } else {\r\n                        if (i > 0) {\r\n                            let token1 = tokenlist[i - 1];\r\n                            if (token1.tt != TokenType.space && token1.tt != TokenType.newline) {\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    roundBracketsOpen++;\r\n                    if (i < tokenlist.length - 2) {\r\n                        let nextToken1 = tokenlist[i + 1];\r\n                        let nextToken2 = tokenlist[i + 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                            i++;\r\n                            if (nextToken2.tt == TokenType.rightBracket) {\r\n                                i++;\r\n                                roundBracketsOpen--;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt == TokenType.space && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line, lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    roundBracketsOpen--;\r\n                    if (i > 1) {\r\n                        let nextToken1 = tokenlist[i - 1];\r\n                        let nextToken2 = tokenlist[i - 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.newline:\r\n                    lastTokenWasNewLine = 2;\r\n                    if (i < tokenlist.length - 2) {\r\n\r\n                        let lastTokenIsOperator = this.isBinaryOperator(lastNonSpaceToken?.tt);\r\n                        let nextTokenIsOperator = this.isBinaryOperator(this.getNextNonSpaceToken(i, tokenlist).tt);\r\n\r\n                        let beginNextLine = tokenlist[i + 1];\r\n                        let token2 = tokenlist[i + 2];\r\n                        let currentIndentation = 0;\r\n\r\n                        if (beginNextLine.tt == TokenType.newline) {\r\n                            break;\r\n                        }\r\n\r\n                        let delta: number = 0;\r\n                        if (beginNextLine.tt == TokenType.space) {\r\n                            if (token2.tt == TokenType.newline) {\r\n                                break;\r\n                            }\r\n                            currentIndentation = beginNextLine.position.length;\r\n                            i++;\r\n                            if (token2.tt == TokenType.rightCurlyBracket) {\r\n                                delta = -1;\r\n                            }\r\n                        }\r\n\r\n                        if (beginNextLine.tt == TokenType.rightCurlyBracket) {\r\n                            delta = -1;\r\n                            // indentLevel--;\r\n                            // curlyBracesOpenAtLines.pop();\r\n                            // lastNonSpaceToken = beginNextLine;\r\n                            // i++;\r\n                        }\r\n\r\n                        if(nextTokenIsOperator || lastTokenIsOperator) delta = 1;\r\n\r\n                        let il = indentLevel + delta;\r\n                        if(roundBracketsOpen > 0){\r\n                            il++;\r\n                        }\r\n                        if (il < 0) il = 0;\r\n\r\n                        let correctIndentation = il * tabSize;\r\n\r\n                        if (correctIndentation > currentIndentation) {\r\n                            this.insertSpaces(edits, t.position.line + 1, 0, correctIndentation - currentIndentation);\r\n                        } else if (correctIndentation < currentIndentation) {\r\n                            this.deleteSpaces(edits, t.position.line + 1, 0, currentIndentation - correctIndentation);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.space:\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment) {\r\n                            if (i > 0) {\r\n                                let lastToken = tokenlist[i - 1];\r\n                                if (lastToken.tt != TokenType.newline) {\r\n                                    if (t.position.length > 1) {\r\n                                        this.deleteSpaces(edits, t.position.line, t.position.column, t.position.length - 1);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.comma:\r\n                case TokenType.semicolon:\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt != TokenType.newline && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.tt == TokenType.space && lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line,\r\n                                    lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment && nextToken.tt != TokenType.space && nextToken.tt != TokenType.newline) {\r\n                            this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightSquareBracket:\r\n                    if (lastNonSpaceToken != null && lastNonSpaceToken.tt == TokenType.leftSquareBracket) {\r\n                        this.replaceBetween(lastNonSpaceToken, t, edits, \"\");\r\n\r\n                    }\r\n                    break;\r\n\r\n            }\r\n\r\n            // binary operator?\r\n            if (this.isBinaryOperator(t.tt)) {\r\n\r\n                let lowerGeneric = t.tt == TokenType.lower && this.lowerBelongsToGenericExpression(i, tokenlist);\r\n                let greaterGeneric = t.tt == TokenType.greater && this.greaterBelongsToGenericExpression(i, tokenlist);\r\n\r\n                if (lastTokenWasNewLine <= 0 && lastNonSpaceToken != null && [TokenType.leftBracket, TokenType.comma].indexOf(lastNonSpaceToken.tt) < 0) {\r\n\r\n                    if (i > 0) {\r\n                        let tokenBefore = tokenlist[i - 1];\r\n                        let spaces = (lowerGeneric || greaterGeneric) ? 0 : 1;\r\n                        if (tokenBefore.tt == TokenType.space) {\r\n                            if (tokenBefore.position.length != spaces) {\r\n                                this.insertSpaces(edits, tokenBefore.position.line,\r\n                                    tokenBefore.position.column, spaces - tokenBefore.position.length);\r\n                            }\r\n                        } else {\r\n                            if (spaces == 1)\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        let spaces = (lowerGeneric) ? 0 : 1;\r\n                        if (nextToken.tt == TokenType.space) {\r\n                            if (greaterGeneric && i < tokenlist.length - 2 && tokenlist[i + 2].tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (nextToken.position.length != spaces) {\r\n                                this.insertSpaces(edits, nextToken.position.line,\r\n                                    nextToken.position.column, spaces - nextToken.position.length);\r\n                            }\r\n                        } else {\r\n                            if (greaterGeneric && nextToken.tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (spaces == 1) this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            if (t.tt != TokenType.space && t.tt != TokenType.newline) {\r\n                lastNonSpaceToken = t;\r\n            }\r\n\r\n        }\r\n\r\n        this.deleteOverlappingRanges(edits);\r\n\r\n        return edits;\r\n\r\n    }\r\n    getNextNonSpaceToken(currentIndex: number, tokenlist: TokenList):  Token {\r\n\r\n        if(currentIndex == tokenlist.length - 1) return tokenlist[currentIndex];\r\n\r\n        let j = currentIndex + 1;\r\n        while(j < tokenlist.length - 1 && (tokenlist[j].tt == TokenType.space )){\r\n            j++;\r\n        }\r\n        return tokenlist[j];\r\n\r\n    }\r\n\r\n    lowerBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position + 1;\r\n        while (i < tokenlist.length) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.greater) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i++;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    greaterBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position - 1;\r\n        while (i >= 0) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.lower) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i--;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isBinaryOperator(token: TokenType) {\r\n        return token != null && token >= TokenType.modulo && token <= TokenType.equal;\r\n    }\r\n\r\n    private replaceBetween(lastNonSpaceToken: Token, t: Token, edits: monaco.languages.TextEdit[], text: string) {\r\n        let positionFrom = {\r\n            line: lastNonSpaceToken.position.line,\r\n            column: lastNonSpaceToken.position.column + lastNonSpaceToken.position.length\r\n        };\r\n        let positionTo = {\r\n            line: t.position.line,\r\n            column: t.position.column\r\n        };\r\n        if (positionFrom.line != positionTo.line ||\r\n            positionTo.column - positionFrom.column != text.length) {\r\n            this.replace(edits, positionFrom, positionTo, text);\r\n        }\r\n    }\r\n\r\n    deleteSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column + numberOfSpaces + (column == 0 ? 1 : 0),\r\n                endLineNumber: line\r\n            },\r\n            text: \"\"\r\n        });\r\n    }\r\n\r\n    insertSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n\r\n        if (numberOfSpaces < 0) {\r\n            this.deleteSpaces(edits, line, column, -numberOfSpaces);\r\n            return;\r\n        }\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column,\r\n                endLineNumber: line\r\n            },\r\n            text: \" \".repeat(numberOfSpaces)\r\n        });\r\n    }\r\n\r\n    replace(edits: monaco.languages.TextEdit[], positionFrom: { line: number; column: number; }, positionTo: { line: number; column: number; }, text: string) {\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: positionFrom.column,\r\n                startLineNumber: positionFrom.line,\r\n                endColumn: positionTo.column,\r\n                endLineNumber: positionTo.line\r\n            },\r\n            text: text\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","export class WorkerSim {\r\n\r\n    //@ts-ignore\r\n    initsql = initSqlJs({locateFile: (path, scriptDirectory) => \"https://embed.learn-sql.de/include/lib/sql.js/sql-wasm.wasm\"});\r\n    db;\r\n    SQL;\r\n\r\n    onmessage: (event: {data: any}) => void;\r\n\r\n    onError: (event: ErrorEvent) => void;\r\n\r\n    postMessageToClient(message: any) {\r\n        this.onmessage({data: message})\r\n    }\r\n\r\n    postMessage(data: any){\r\n        let that = this;\r\n        if (that.db == null) {\r\n            that.initsql.then((SQL1) => {\r\n                that.SQL = SQL1;\r\n                that.db = createDb(SQL1, undefined);\r\n                that.worker(data);\r\n            }).catch((err) => {\r\n                console.log(err);\r\n                //@ts-ignore\r\n                return that.postMessageToClient({\r\n                    id: this[\"data\"][\"id\"],\r\n                    error: err[\"message\"]\r\n                });\r\n            })\r\n        } else {\r\n            that.worker(data);\r\n        }\r\n    }\r\n\r\n    terminate() {\r\n\r\n    }\r\n\r\n    worker(data: any) {\r\n        var buff; var result;\r\n        var config = data[\"config\"] ? data[\"config\"] : {};\r\n        try {\r\n            switch (data && data[\"action\"]) {\r\n                case \"open\":\r\n                    buff = data[\"buffer\"];\r\n                    this.db = createDb(this.SQL, buff && new Uint8Array(buff));\r\n                    //@ts-ignore\r\n                    return this.postMessageToClient({\r\n                        id: data[\"id\"],\r\n                        ready: true\r\n                    });\r\n                case \"exec\":\r\n                    if (this.db === null) {\r\n                        this.db = createDb(this.SQL, undefined);\r\n                    }\r\n                    if (!data[\"sql\"]) {\r\n                        throw \"exec: Missing query string\";\r\n                    }\r\n                    //@ts-ignore\r\n                    return this.postMessageToClient({\r\n                        id: data[\"id\"],\r\n                        results: this.db.exec(data[\"sql\"], data[\"params\"], config)\r\n                    });\r\n                case \"each\":\r\n                    if (this.db === null) {\r\n                        this.db = createDb(this.SQL, undefined);\r\n                    }\r\n                    var callback = function callback(row) {\r\n                        //@ts-ignore\r\n                        return this.postMessage({\r\n                            id: data[\"id\"],\r\n                            row: row,\r\n                            finished: false\r\n                        });\r\n                    };\r\n                    var done = function done() {\r\n                        //@ts-ignore\r\n                        return this.postMessage({\r\n                            id: data[\"id\"],\r\n                            finished: true\r\n                        });\r\n                    };\r\n                    return this.db.each(data[\"sql\"], data[\"params\"], callback, done, config);\r\n                case \"export\":\r\n                    buff = this.db[\"export\"]();\r\n                    result = {\r\n                        id: data[\"id\"],\r\n                        results: [\r\n                            {\r\n                                buffer: buff\r\n                            }\r\n                        ]\r\n                    };\r\n                    try {\r\n                        //@ts-ignore\r\n                        return this.postMessageToClient(result);\r\n                    } catch (error) {\r\n                        //@ts-ignore\r\n                        return this.postMessageToClient(result);\r\n                    }\r\n                case \"close\":\r\n                    if (this.db) {\r\n                        this.db.close();\r\n                    }\r\n                    //@ts-ignore\r\n                    return this.postMessageToClient({\r\n                        id: data[\"id\"]\r\n                    });\r\n                default:\r\n                    throw new Error(\"Invalid action : \" + (data && data[\"action\"]));\r\n            }\r\n\r\n        } catch (err) {\r\n\r\n            //@ts-ignore\r\n            return this.postMessageToClient({\r\n                id: data[\"id\"],\r\n                error: err[\"message\"]\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import { MainBase } from \"../main/MainBase.js\";\r\nimport { WorkerSim } from \"../sqljs-worker/sqljsWorkerSim.js\";\r\n\r\nexport type DatabaseDumpType = \"binaryUncompressed\" | \"binaryCompressed\" | \"other\";\r\n\r\nexport type DatabaseDirectoryEntry = {\r\n    name: string,\r\n    description: string,\r\n    filename: string\r\n}\r\n\r\nexport type QueryResult = {\r\n    columns: string[],\r\n    values: any[][],\r\n    buffer?: Uint8Array\r\n}\r\n\r\nexport type QuerySuccessCallback = (results: QueryResult[]) => void;\r\nexport type QueryErrorCallback = (error: string) => void;\r\n\r\nexport type ColumnStructure = {\r\n    name: string;\r\n    table: TableStructure;\r\n\r\n    typeLengths?: number[]; // for varchar(5), ...\r\n    completeTypeSQL: string;\r\n\r\n    references?: ColumnStructure;\r\n    referencesRawData?: any[];\r\n    isPrimaryKey: boolean;\r\n    isAutoIncrement: boolean;\r\n\r\n    notNull: boolean;\r\n    defaultValue: string;\r\n\r\n    dumpValueFunction?: (any) => string\r\n}\r\n\r\nexport type TableStructure = {\r\n    name: string;\r\n    size: number;\r\n    columns: ColumnStructure[];\r\n    completeSQL: string;\r\n}\r\n\r\nexport type DatabaseStructure = {\r\n    tables: TableStructure[]\r\n}\r\n\r\n\r\nexport class DatabaseTool {\r\n\r\n    databaseDirectoryEntries: DatabaseDirectoryEntry[] = null;\r\n\r\n    worker: Worker;\r\n\r\n    queryId: number = 0;\r\n\r\n    querySuccessCallbacksMap: Map<number, QuerySuccessCallback> = new Map();\r\n    queryErrorCallbackMap: Map<number, QueryErrorCallback> = new Map();\r\n\r\n    databaseStructure: DatabaseStructure;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    initializeWorker(template: Uint8Array, queries: string[], callbackAfterInitializing?: (errors: string[]) => void,\r\n        callbackAfterRetrievingStructure?: () => void) {\r\n        \r\n        this.main.getWaitOverlay().show('Bitte warten, die Datenbank wird initialisiert...');\r\n        \r\n            if (this.worker != null) {\r\n            this.worker.terminate();\r\n        }\r\n\r\n        let t = performance.now();\r\n\r\n        // console.log(\"Starting worker...\");\r\n\r\n        let url: string = \"js/sqljs-worker/sqljsWorker.js\"\r\n        if(this.main.isEmbedded()){\r\n            //@ts-ignore\r\n            url = window.javaOnlineDir + url;\r\n        }\r\n\r\n        //@ts-ignore\r\n        if(window.jo_doc){\r\n            //@ts-ignore\r\n            this.worker = new WorkerSim();\r\n        } else {\r\n            this.worker = new Worker(url);\r\n        }\r\n        let that = this;\r\n\r\n        let errors: string[] = [];\r\n\r\n        this.worker.onmessage = () => {\r\n            // console.log(\"Database opened (\" + (performance.now() - t)/1000 + \" s)\");\r\n            that.worker.onmessage = event => {\r\n\r\n                // console.log(event.data);\r\n\r\n                let id = event.data.id;\r\n                if (event.data.error == null) {\r\n                    let querySuccessCallback = that.querySuccessCallbacksMap.get(id);\r\n                    if (querySuccessCallback != null) {\r\n                        querySuccessCallback(event.data.results);\r\n                    }\r\n                } else {\r\n                    let queryErrorCallback = that.queryErrorCallbackMap.get(id);\r\n                    if (queryErrorCallback != null) {\r\n                        queryErrorCallback(event.data.error);\r\n                    }\r\n                }\r\n\r\n                // if(event.data.buffer){\r\n                //     console.log(event.data.buffer);\r\n                // }\r\n\r\n\r\n                this.queryErrorCallbackMap.delete(id);\r\n                this.querySuccessCallbacksMap.delete(id);\r\n\r\n            };\r\n\r\n            if(queries == null) queries = [];\r\n            queries = queries.slice();\r\n            let queryCount = queries.length;\r\n\r\n            let execQuery = () => {\r\n                if (queries.length > 0) {\r\n                    this.main.getWaitOverlay().setProgress(`${Math.round((1-queries.length/queryCount)*100) + \" %\"}`)\r\n                    let query = queries.shift();\r\n                    that.executeQuery(query, (result) => {\r\n                        execQuery();\r\n                    }, (error) => {\r\n                        errors.push(\"Error while setting up database: \" + error + \", query: \" + query);\r\n                        console.log({\"error\": \"Error while setting up database: \" + error, \"query\": query});\r\n                        console.log()\r\n                        execQuery();\r\n                    })\r\n                } else {\r\n                    if (callbackAfterInitializing != null) callbackAfterInitializing(errors);\r\n                    that.retrieveDatabaseStructure(() => {\r\n                        // console.log(\"Database structure retrieved (\" + (performance.now() - t)/1000 + \" s)\");\r\n                        if (callbackAfterRetrievingStructure) callbackAfterRetrievingStructure();\r\n                        this.main.getWaitOverlay().hide();\r\n\r\n                    });\r\n                }\r\n            }\r\n\r\n            execQuery();\r\n\r\n            // that.executeQuery(sql, (result) => {\r\n            //     // console.log(\"Template written (\" + (performance.now() - t)/1000 + \" s)\");\r\n\r\n            //     if (callbackAfterInitializing != null) callbackAfterInitializing();\r\n            //     that.retrieveDatabaseStructure(() => {\r\n            //         // console.log(\"Database structure retrieved (\" + (performance.now() - t)/1000 + \" s)\");\r\n            //         if (callbackAfterRetrievingStructure) callbackAfterRetrievingStructure();\r\n            //         jQuery('#bitteWarten').css('display', 'none');\r\n\r\n            //     });\r\n            //     // that.executeQuery(\"select * from test\", (results: QueryResult[]) => {console.log(results)}, (error) => {console.log(\"Error:\" + error)});\r\n            // },\r\n            //     (error) => {\r\n            //         console.log(\"Error while setting up database: \" + error);\r\n            //     });\r\n\r\n            // that.worker.postMessage({\r\n            //     action: \"export\"\r\n            // })\r\n\r\n        };\r\n\r\n        this.worker.onerror = (e) => {\r\n            errors.push(\"Worker error: \" + e.error);\r\n            console.log(\"Worker error: \" + e.error);\r\n        }\r\n\r\n        this.worker.postMessage({\r\n            id: that.queryId++,\r\n            action: \"open\",\r\n            buffer: template, /*Optional. An ArrayBuffer representing an SQLite Database file*/\r\n        });\r\n\r\n    }\r\n\r\n    executeQuery(query: string, successCallback: QuerySuccessCallback, errorCallback: QueryErrorCallback) {\r\n\r\n        let id = this.queryId++;\r\n\r\n        this.querySuccessCallbacksMap.set(id, successCallback);\r\n        this.queryErrorCallbackMap.set(id, errorCallback);\r\n\r\n        this.worker.postMessage({\r\n            id: id,\r\n            action: \"exec\",\r\n            sql: query,\r\n            params: {}\r\n        });\r\n\r\n    }\r\n\r\n    export(successCallback: (buffer: Uint8Array) => void, errorCallback: QueryErrorCallback) {\r\n\r\n        let id = this.queryId++;\r\n\r\n        this.querySuccessCallbacksMap.set(id, (results) => { successCallback(results[0].buffer)  });\r\n        this.queryErrorCallbackMap.set(id, errorCallback);\r\n\r\n        this.worker.postMessage({\r\n            id: id,\r\n            action: \"export\",\r\n            params: {}\r\n        });\r\n\r\n    }\r\n\r\n    \r\n\r\n    getDirectoryEntries(callback: (entries: DatabaseDirectoryEntry[]) => void) {\r\n        if (this.databaseDirectoryEntries != null) {\r\n            callback(this.databaseDirectoryEntries);\r\n        } else {\r\n            jQuery.getJSON(\"assets/databases/directory.json\", function (entries: DatabaseDirectoryEntry[]) {\r\n                callback(entries);\r\n            });\r\n        }\r\n    }\r\n\r\n    retrieveDatabaseStructure(callback: (dbStructure: DatabaseStructure) => void) {\r\n\r\n        /*\r\n            @see https://stackoverflow.com/questions/6460671/sqlite-schema-information-metadata\r\n        */\r\n        let sql = `SELECT name, sql FROM sqlite_master WHERE type='table';`\r\n        let that = this;\r\n\r\n        this.executeQuery(sql, (result) => {\r\n            let sql1 = \"\";\r\n            result[0]?.values?.forEach(value => sql1 += `PRAGMA table_info(${value[0]});\\nPRAGMA foreign_key_list(${value[0]});\\nselect count(*) from ${value[0]};\\n\\n`)\r\n\r\n            if (sql1 != \"\") {\r\n                this.executeQuery(sql1, (result1) => {\r\n                    // console.log(\"DB structure: \");\r\n                    // console.log(result1);\r\n\r\n                    that.databaseStructure = that.parseDatabaseStructure(result, result1)\r\n\r\n                    callback(that.databaseStructure);\r\n\r\n                }, (error) => { console.log(error)});\r\n            } else {\r\n                that.databaseStructure = { tables: [] };\r\n                callback(that.databaseStructure);\r\n            }\r\n\r\n        }, (error) => { console.log(error) });\r\n\r\n\r\n    }\r\n\r\n    parseDatabaseStructure(tables: QueryResult[], columns: QueryResult[]): DatabaseStructure {\r\n        this.databaseStructure = {\r\n            tables: []\r\n        };\r\n\r\n        let tableNameToStructureMap: Map<string, TableStructure> = new Map();\r\n\r\n        let index = 0;\r\n        for (let i = 0; i < tables[0].values.length; i++) {\r\n            let tableName = tables[0].values[i][0];\r\n            let tableSQL = tables[0].values[i][1];\r\n\r\n            let tableStructure: TableStructure = {\r\n                name: tableName,\r\n                size: 0,\r\n                completeSQL: tableSQL,\r\n                columns: []\r\n            }\r\n\r\n            tableNameToStructureMap.set(tableName, tableStructure);\r\n\r\n            this.databaseStructure.tables.push(tableStructure);\r\n\r\n            let columnArray = columns[index].values;\r\n            let foreignKeyList: any[][] = null;\r\n            if (columns.length > index + 1 && columns[index + 1].columns[0] == \"id\") {\r\n                foreignKeyList = columns[index + 1].values;\r\n                index++;\r\n            }\r\n            index++;\r\n            let size: number = columns[index].values[0][0];\r\n            index++;\r\n\r\n            tableStructure.size = size;\r\n\r\n            columnArray.forEach(columnArray1 => {\r\n                let cid: number = columnArray1[0];\r\n                let name: string = columnArray1[1];\r\n                let type: string = columnArray1[2];\r\n                let notNull: boolean = columnArray1[3] == 1;\r\n                let dflt_value: string = columnArray1[4];\r\n                let isPrimaryKey: boolean = columnArray1[5] != 0;\r\n\r\n                let columnStructure: ColumnStructure = {\r\n                    name: name,\r\n                    isPrimaryKey: isPrimaryKey,\r\n                    isAutoIncrement: isPrimaryKey && tableSQL.toLowerCase().indexOf(\"autoincrement\") >= 0,\r\n                    completeTypeSQL: type,\r\n                    table: tableStructure,\r\n                    typeLengths: [],\r\n                    defaultValue: dflt_value,\r\n                    notNull: notNull\r\n                }\r\n                /*\r\n                    columns: (8) [\"id\", \"seq\", \"table\", \"from\", \"to\", \"on_update\", \"on_delete\", \"match\"]\r\n                    values: Array(1)\r\n                    0: (8) [0, 0, \"land\", \"LNR\", \"lnr\", \"NO ACTION\", \"NO ACTION\", \"NONE\"]\r\n                */\r\n\r\n                if (foreignKeyList != null) {\r\n                    let fkInfo: any[] = foreignKeyList.find(foreignKeyInfo => foreignKeyInfo[3].toLocaleLowerCase() == name.toLocaleLowerCase());\r\n                    if (fkInfo != null) {\r\n                        columnStructure.referencesRawData = fkInfo;\r\n                    }\r\n                }\r\n\r\n                tableStructure.columns.push(columnStructure);\r\n\r\n            });\r\n\r\n        }\r\n\r\n        for (let ts of this.databaseStructure.tables) {\r\n            for (let cs of ts.columns) {\r\n                if (cs.referencesRawData != null) {\r\n                    let table = tableNameToStructureMap.get(cs.referencesRawData[2]);\r\n                    // SQlite doesn't remove foreign key references to columns of a dropped table\r\n                    if(table == null) continue;\r\n                    let column = table.columns.find(c => c.name.toLocaleLowerCase() == cs.referencesRawData[4].toLocaleLowerCase());\r\n                    cs.references = column;\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log(this.databaseStructure);\r\n\r\n        return this.databaseStructure;\r\n\r\n    }\r\n\r\n    static getDumpType(dump: Uint8Array): DatabaseDumpType {\r\n\r\n        let sqliteMagicBytes: number[] = [0x53, 0x51, 0x4c, 0x69, 0x74, 0x65];\r\n        let zlibMagicByte: number = 0x78;\r\n\r\n        let found: boolean = true;\r\n        for (let i = 0; i < sqliteMagicBytes.length; i++) {\r\n            if (sqliteMagicBytes[i] != dump[i]) {\r\n                found = false;\r\n                break;\r\n            }\r\n        }\r\n        if (found) return \"binaryUncompressed\";\r\n\r\n        if (dump[0] == zlibMagicByte) return \"binaryCompressed\";\r\n\r\n        return \"other\";\r\n\r\n    }\r\n\r\n\r\n}","import { TokenType } from \"../lexer/Token.js\";\r\nimport { ASTNode, ConstantNode, CreateTableColumnNode, CreateTableNode, ForeignKeyInfo, InsertNode } from \"./AST.js\";\r\nimport { SQLStatement } from \"./Parser.js\";\r\n\r\nexport class StatementCleaner {\r\n\r\n    MaxRowsPerInsert: number = 300;\r\n\r\n    clean(statement: SQLStatement): string {\r\n        switch(statement.ast.type){\r\n            case TokenType.keywordCreate:   // Create Table statement\r\n                statement.sqlCleaned = this.cleanCreateTableStatement(statement.ast);\r\n                return statement.sqlCleaned;\r\n            case TokenType.keywordInsert:\r\n                statement.sqlCleaned = this.cleanInsertStatement(statement.ast);\r\n                return statement.sqlCleaned;\r\n            default:\r\n                return statement.sql;\r\n                break;\r\n        }\r\n    }\r\n\r\n    cleanInsertStatement(ast: InsertNode): string {\r\n        let statementHeader: string = `insert into ${ast.table.identifier}`;\r\n\r\n        if(ast.columnList != null && ast.columnList.length > 0){\r\n            statementHeader += `(${ast.columnList.map(c => c.identifier).join(\", \")})`;\r\n        }\r\n\r\n        statementHeader += '\\nvalues\\n';\r\n\r\n        let st = \"\";\r\n        \r\n        let lines: string[] = [];\r\n        if(ast.values != null && ast.values.length > 0){\r\n            for(let vline of ast.values){\r\n                lines.push(`\\n(${vline.map(v => this.cleanValue(v)).join(\", \")})`);\r\n            }\r\n            //st += lines.join(\",\\n\");\r\n        }\r\n\r\n        while(lines.length > 0){\r\n            st += statementHeader;\r\n            st += lines.splice(0, Math.max(this.MaxRowsPerInsert, lines.length)).join(\",\\n\");\r\n            st += \";\\n\";\r\n        }\r\n\r\n        return st;\r\n    }\r\n\r\n    cleanValue(v: ConstantNode){\r\n        if(v.constantType == TokenType.stringConstant){\r\n            let s: string = v.constant;\r\n            s = s.replace(/'/g, \"''\");\r\n            return `'${s}'`;\r\n        }else {\r\n            return v.constant;\r\n        }\r\n    }\r\n\r\n    cleanCreateTableStatement(ast: CreateTableNode): string {\r\n        let st: string = `create table ${ast.ifNotExists?\" if not exists\":\"\"} ${ast.identifier}(\\n   `;\r\n\r\n        st += ast.columnList.map( column => this.cleanColumnDef(column)).join(\",\\n   \");\r\n        if(ast.foreignKeyInfoList != null && ast.foreignKeyInfoList.length > 0){\r\n            st += \",\\n   \" + ast.foreignKeyInfoList.map(fki => this.cleanForeignKeyInfo(fki)).join(\",\\n   \");\r\n        }\r\n\r\n        let pkc = ast.combinedPrimaryKeyColumns.slice().map(s => s.toLocaleLowerCase());\r\n        for(let column of ast.columnList){\r\n            let c = column.identifier.toLocaleLowerCase();\r\n            if(column.isAutoIncrement && pkc.indexOf(c) >= 0){\r\n                pkc.splice(pkc.indexOf(c), 1);\r\n            }\r\n        }\r\n\r\n        if(pkc.length > 0){\r\n            st += `,\\n   primary key(${pkc.join(\", \")})`;\r\n        }\r\n\r\n        if(ast.uniqueConstraints.length > 0){\r\n            st += \",\\n   \" + ast.uniqueConstraints.map(uk => 'unique(' + uk.join(\", \") + \")\").join(\",\\n   \");\r\n        }\r\n\r\n        st += '\\n);';\r\n\r\n        return st;\r\n    }\r\n\r\n    cleanForeignKeyInfo(fki: ForeignKeyInfo): string {\r\n        let fkiString = `foreign key (${fki.column}) references ${fki.referencesTable}(${fki.referencesColumn})`;\r\n        if(fki.onDelete){\r\n            fkiString += ` on delete ` + fki.onDelete;\r\n        }\r\n        if(fki.onUpdate){\r\n            fkiString += ` on update ` + fki.onUpdate;\r\n        }\r\n        return fkiString;\r\n    }\r\n\r\n    cleanColumnDef(column: CreateTableColumnNode):string {\r\n\r\n        let type = column.baseType.toString();\r\n        if(type == \"int\" && column.isAutoIncrement){\r\n            type = \"integer\";\r\n        }\r\n\r\n        let st: string = `${column.identifier} ${type}`;\r\n        if(column.parameters != null && column.parameters.length > 0 && !column.isAutoIncrement){\r\n            st += `(${column.parameters.join(\", \")})`;\r\n        }\r\n        if(column.notNull){\r\n            st += \" not null\";\r\n        }\r\n        if(column.defaultValue != null){\r\n            st += \" default \" + column.defaultValue;\r\n        }\r\n        if(column.isPrimary || column.isAutoIncrement){\r\n            st += \" primary key\";\r\n        }\r\n        if(column.isAutoIncrement){\r\n            st += \" autoincrement\";\r\n        }\r\n        if(column.foreignKeyInfo != null){\r\n            let fki = column.foreignKeyInfo;\r\n            let c: string = fki.referencesColumn;\r\n            if(fki.referencesTable) c = fki.referencesTable + \"(\" + c + \")\";\r\n            st += \" references \" + c;\r\n        }\r\n        if(column.collate != null){\r\n            let collate = column.collate.toLocaleLowerCase();\r\n            if([\"binary\", \"nocase\", \"rtrim\"].indexOf(collate) >= 0){\r\n                st += \" collate \" + collate;\r\n            }\r\n        }\r\n        let parameters = column.parameters? column.parameters : [0, 0];\r\n        let checkFunction = column.baseType.checkFunction(column.identifier, parameters);\r\n        if(checkFunction != \"\"){\r\n            st += \" \" + checkFunction;\r\n        }\r\n        return st;\r\n    }\r\n\r\n}","import { Lexer } from \"../compiler/lexer/Lexer.js\";\r\nimport { TokenType } from \"../compiler/lexer/Token.js\";\r\nimport { AlterTableNode, CreateTableNode, InsertNode } from \"../compiler/parser/AST.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { Parser, SQLStatement } from \"../compiler/parser/Parser.js\";\r\nimport { StatementCleaner } from \"../compiler/parser/StatementCleaner.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { LoadableDatabase } from \"./DatabaseLoader.js\";\r\nimport { DatabaseTool } from \"./DatabaseTools.js\";\r\n\r\nexport class MySqlImporter {\r\n\r\n    private createTableNodes: CreateTableNode[];\r\n    private insertNodes: InsertNode[];\r\n    private tableModifyingNodes: AlterTableNode[];\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    async loadFromUrl(url: string): Promise<LoadableDatabase> {\r\n        if (url == null) return;\r\n\r\n        let text = null;\r\n        if (url.endsWith(\".zip\")) {\r\n            text = await this.unzipURL(url);\r\n        } else {\r\n            text = await (await fetch(url)).text();\r\n        }\r\n\r\n        return this.importFromText(text);\r\n    }\r\n\r\n    async loadFromFile(file: globalThis.File): Promise<LoadableDatabase> {\r\n        if (file == null) return;\r\n\r\n        if (file.name.endsWith(\".zip\")) {\r\n            let text = await this.unzipFile(file);\r\n            return this.importFromText(text);\r\n        } else {\r\n\r\n            return new Promise<LoadableDatabase>(\r\n                (resolve, reject) => {\r\n                    var reader = new FileReader();\r\n                    reader.onload = (event) => {\r\n                        let text = <string>event.target.result;\r\n                        resolve(this.importFromText(text));\r\n                    };\r\n                    reader.readAsText(file);\r\n                }\r\n            )\r\n\r\n\r\n        }\r\n    }\r\n\r\n    async unzipURL(url: string): Promise<string> {\r\n        //@ts-ignore\r\n        const reader = new zip.ZipReader(new zip.HttpReader(url));\r\n        return this.unzipIntern(reader);\r\n    }\r\n\r\n    async unzipFile(file: globalThis.File): Promise<string> {\r\n        // create a BlobReader to read with a ZipReader the zip from a Blob object\r\n        //@ts-ignore\r\n        const reader = new zip.ZipReader(new zip.BlobReader(file));\r\n        return this.unzipIntern(reader);\r\n    }\r\n\r\n    async unzipIntern(reader: any): Promise<string> {\r\n        // get all entries from the zip\r\n        let entries = await reader.getEntries();\r\n        entries = entries.filter(entry => entry.filename.endsWith(\".sql\"))\r\n        let text: string = null;\r\n        if (entries.length) {\r\n\r\n            // get first entry content as text by using a TextWriter\r\n            text = await entries[0].getData(\r\n                // writer\r\n                //@ts-ignore\r\n                new zip.TextWriter(),\r\n                // options\r\n                {\r\n                    onprogress: (index, max) => {\r\n                        // onprogress callback\r\n                    }\r\n                }\r\n            );\r\n        }\r\n\r\n        // close the ZipReader\r\n        await reader.close();\r\n\r\n        return text;\r\n    }\r\n\r\n    private async importFromText(text: string): Promise<LoadableDatabase> {\r\n        if (text == null) return null;\r\n\r\n        let lexer: Lexer = new Lexer();\r\n        let lexOutput = lexer.lex(text);\r\n\r\n        let parser: Parser = new Parser();\r\n        let m: Module = new Module({\r\n            dirty: false,\r\n            name: \"\",\r\n            saved: true,\r\n            student_edited_after_revision: false,\r\n            submitted_date: null,\r\n            text: text,\r\n            text_before_revision: null,\r\n            version: 0\r\n        }, this.main);\r\n        m.tokenList = lexOutput.tokens;\r\n\r\n        parser.parse(m);\r\n\r\n        this.createTableNodes = m.sqlStatements.filter(st => st.ast.type == TokenType.keywordCreate).map(st => <CreateTableNode>st.ast);\r\n        this.insertNodes = m.sqlStatements.filter(st => st.ast.type == TokenType.keywordInsert).map(st => <InsertNode>st.ast);\r\n        this.tableModifyingNodes = m.sqlStatements.filter(st => st.ast.type == TokenType.keywordAlter &&\r\n            (<AlterTableNode>st.ast).kind == \"omittedKind\").map(st => <AlterTableNode>st.ast);\r\n\r\n        for (let tmn of this.tableModifyingNodes) {\r\n            let createTableNode = this.findCreateTableNode(tmn.tableIdentifier);\r\n            if (createTableNode == null) continue;\r\n\r\n            if (tmn.primaryKeys != null) {\r\n                createTableNode.combinedPrimaryKeyColumns = tmn.primaryKeys;\r\n                createTableNode.columnList.forEach(c => c.isPrimary = false);\r\n            }\r\n\r\n            if (tmn.autoIncrementColumn != null) {\r\n                let pcn = this.findCreateTableColumnNode(createTableNode, tmn.autoIncrementColumn);\r\n                if (pcn != null) pcn.isPrimary = true;\r\n            }\r\n\r\n            if (tmn.modifyColumnInfo != null) {\r\n                for (let mci of tmn.modifyColumnInfo) {\r\n                    let mcn = this.findCreateTableColumnNode(createTableNode, mci.identifier);\r\n                    let index = createTableNode.columnList.indexOf(mcn);\r\n                    createTableNode.columnList.splice(index, 1, mci);\r\n                }\r\n            }\r\n\r\n            if (tmn.foreignKeys != null) {\r\n                for (let fk of tmn.foreignKeys) {\r\n                    createTableNode.foreignKeyInfoList.push(fk);\r\n                }\r\n            }\r\n\r\n            if (tmn.indices != null) {\r\n                for (let index of tmn.indices) {\r\n                    m.sqlStatements.push({\r\n                        acceptedBySQLite: true,\r\n                        from: null, to: null, hasErrors: false,\r\n                        ast: {\r\n                            type: TokenType.keywordIndex,\r\n                            columnIdentifier: index.column,\r\n                            indexIdentifier: index.index_name,\r\n                            tableIdentifier: tmn.tableIdentifier,\r\n                            unique: index.unique,\r\n                            position: null, endPosition: null, symbolTable: null\r\n                        },\r\n                        sql: `create ${index.unique ? 'unique ' : ''} index ${index.index_name} on ${tmn.tableIdentifier}(${index.column});`\r\n                    })\r\n                }\r\n            }\r\n        }\r\n\r\n        return this.makeDatabase(m.sqlStatements);\r\n    }\r\n\r\n    private findCreateTableNode(tableIdentifier: string): CreateTableNode {\r\n        tableIdentifier = tableIdentifier.toLocaleLowerCase();\r\n        return this.createTableNodes.find(node => node.identifier.toLocaleLowerCase() == tableIdentifier);\r\n    }\r\n\r\n    private findCreateTableColumnNode(tableNode: CreateTableNode, columnIdentifier: string) {\r\n        columnIdentifier = columnIdentifier.toLocaleLowerCase();\r\n        return tableNode.columnList.find(columnNode => columnNode.identifier.toLocaleLowerCase() == columnIdentifier)\r\n    }\r\n\r\n    private async makeDatabase(statements: SQLStatement[]): Promise<LoadableDatabase> {\r\n\r\n        let statementCleaner: StatementCleaner = new StatementCleaner();\r\n\r\n        let sqlStatements: string[] = statements.filter(st => st.ast.type != TokenType.omittedeStatement)\r\n            .map(st => statementCleaner.clean(st));\r\n        sqlStatements.unshift(\"PRAGMA foreign_keys = OFF;\");\r\n        sqlStatements.push(\"PRAGMA foreign_keys = ON;\")\r\n\r\n        let dbTool = new DatabaseTool(this.main);\r\n\r\n        let promise = new Promise<LoadableDatabase>((resolve, reject) => {\r\n            dbTool.initializeWorker(null, sqlStatements, () => {\r\n                dbTool.export((buffer) => {\r\n                    resolve({\r\n                        binDump: buffer\r\n                    })\r\n                }, (error) => {\r\n                    reject(error);\r\n                })\r\n            });\r\n\r\n        })\r\n\r\n        return promise;\r\n\r\n    }\r\n\r\n\r\n}","import { MainBase } from \"../main/MainBase.js\";\r\nimport { LoadableDatabase } from \"./DatabaseLoader.js\";\r\nimport { DatabaseTool } from \"./DatabaseTools.js\";\r\nimport { downloadFile } from \"./HtmlTools.js\";\r\nimport { MySqlImporter } from \"./MySqlImporter.js\";\r\n\r\nexport class DatabaseImportExport {\r\n\r\n    async loadFromFile(file: globalThis.File, main: MainBase): Promise<LoadableDatabase>{\r\n        let that = this;\r\n        if (file == null) return;\r\n        main.getWaitOverlay().show(\"Lese Datei ein...\");\r\n        if(file.name.endsWith(\".sql\") || file.name.endsWith(\".zip\")){\r\n            let ld = await new MySqlImporter(main).loadFromFile(file);\r\n            main.getWaitOverlay().hide();\r\n            return ld;\r\n        } else {\r\n            var reader = new FileReader();\r\n            return new Promise<LoadableDatabase>((resolve, reject) => {\r\n                reader.onload = (event) => {\r\n                    let ab: ArrayBuffer = <ArrayBuffer>event.target.result;\r\n                    let db: Uint8Array = new Uint8Array(ab);\r\n        \r\n                    //@ts-ignore\r\n                    if(DatabaseTool.getDumpType(db) == \"binaryCompressed\") db = pako.inflate(db);\r\n                    \r\n                    main.getWaitOverlay().hide();\r\n                    resolve({binDump: db});\r\n                };\r\n                reader.readAsArrayBuffer(file);\r\n    \r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    saveToFile(dbTool: DatabaseTool){\r\n        dbTool.export((db) => {\r\n            let filename: string = prompt(\"Bitte geben Sie den Dateinamen ein\", \"datenbank.sqLite\");\r\n            if (filename == null) {\r\n                alert(\"Der Dateiname ist leer, daher wird nichts gespeichert.\");\r\n                return;\r\n            }\r\n            if (!filename.endsWith(\".sqLite\")) filename = filename + \".sqLite\";\r\n            downloadFile(new Blob([db.buffer]), filename, true);\r\n        }, () => {});\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { CreateWorkspaceData, WorkspaceData } from \"../../communication/Data.js\";\r\nimport { DatabaseImportExport } from \"../../tools/DatabaseImportExport.js\";\r\nimport { LoadableDatabase } from \"../../tools/DatabaseLoader.js\";\r\nimport { DatabaseTool } from \"../../tools/DatabaseTools.js\";\r\nimport { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { TemplateUploader } from \"../../tools/TemplateUploader.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionElement } from \"./Accordion.js\";\r\n\r\ntype CreateMode = \"emptyDatabase\" | \"fromTemplate\" | \"useExistingDatabase\" | \"useDumpFile\";\r\n\r\nexport class NewDatabaseDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    database: LoadableDatabase;\r\n\r\n    constructor(private main: Main, private owner_id: number, private path: string[]) {\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Neue Datenbank anlegen</div>\r\n\r\n            <div class=\"jo_ds_settings\">\r\n               <div class=\"jo_ds_settings_caption\">Name der Datenbank:</div><div><input class=\"dialog-input jo_databasename\" value=\"Neue Datenbank\"></input></div>\r\n            </div>\r\n\r\n             <div class=\"jo_tabheadings jo_cdtabheading\">\r\n             <div class=\"jo_tabheading\" data-target=\"jo_createEmptyDatabaseTab\">Leere Datenbank</div>\r\n             <div class=\"jo_tabheading jo_active\" data-target=\"jo_createDatabaseFromTemplateTab\">Von Vorlage kopieren</div>\r\n             <div class=\"jo_tabheading\" data-target=\"jo_createDatabaseUseExistingTab\">Bestehende Datenbank mitnutzen</div>\r\n             <div class=\"jo_tabheading\" data-target=\"jo_createDatabaseUseDumpFile\">Import aus Dumpfile (SQLite- oder MySQL-Format)</div>\r\n             </div>\r\n             <div class=\"jo_tabs\" style=\"width: 100%; margin-top: 10px\">\r\n                 <div class=\"jo_createEmptyDatabaseTab\">\r\n                    <div class=\"jo_createDatabaseDescription\">\r\n                        Erstellt wird eine leere Datenbank.\r\n                    </div>\r\n                 </div>\r\n                 <div class=\"jo_createDatabaseFromTemplateTab jo_active\">\r\n                    <div class=\"jo_ds_settings\">\r\n                       <div class=\"jo_ds_settings_caption\">Vorlage suchen:</div><div><input class=\"dialog-input jo_templatename\"></input></div>\r\n                    </div>\r\n                    <div class=\"jo_scrollable jo_templatelist\"></div>\r\n                 </div>\r\n                <div class=\"jo_createDatabaseUseExistingTab\">\r\n                    <div class=\"jo_createDatabaseDescription\">Wenn Du die Datenbank einer anderen Nutzerin/eines anderen Nutzers mitnutzen möchtest, brauchst Du einen Zugriffscode von ihr/ihm. Er ist unter Datenbank->Einstellungen zu finden.            \r\n                    </div>\r\n                    <div class=\"jo_ds_settings\">\r\n                       <div class=\"jo_ds_settings_caption\">Zugriffscode:</div><div><input class=\"dialog-input jo_databasecodeinput\"></input></div>\r\n                    </div>\r\n                 </div>\r\n                <div class=\"jo_createDatabaseUseDumpFile\">\r\n                    <div class=\"jo_createDatabaseDescription\">Wähle hier die Datei mit dem Datenbank-Dump aus (Endung .sqLite (SQLite-Datenbankdatei) oder .zip (gepackter MySql-Dump) oder .sql (MySql-Dump)):</div>\r\n                    <input type=\"file\" class=\"jo_dumpfile\" name=\"dumpfile\" style=\"padding: 10px\"/>\r\n                    <div class=\"jo_databaseimport_dropzone\" style=\"width: 70vw; margin-left: 10px\">Alternativ: Datei in dieses Feld ziehen</div>\r\n                    <div class=\"jo_databaseimport_ok\"></div>\r\n                 </div>\r\n             </div>\r\n\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_create_database_button\">Datenbank anlegen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        makeTabs(this.$dialog);\r\n\r\n        let $templatelist = jQuery('.jo_templatelist');\r\n        this.main.networkManager.fetchTemplateList((templatelist) => {\r\n            templatelist.forEach(tle => {\r\n\r\n                let $tle = jQuery('<div class=\"jo_templateListEntry\"></div>')\r\n                $tle.append(jQuery(`<div class=\"jo_tle_firstline\">${tle.name} <span class=\"jo_tle_ownername\"> (von ${tle.ownerName})</span></div>`))\r\n                $tle.append(jQuery(`<div class=\"jo_tle_secondline\">${tle.description}</div>`))\r\n                $tle.data('templateId', tle.id);\r\n                $tle.data('name', tle.name);\r\n\r\n                $templatelist.append($tle);\r\n                tle.$tle = <JQuery<HTMLDivElement>>$tle;\r\n\r\n                $tle.on('pointerdown', () => {\r\n                    $templatelist.find('.jo_templateListEntry').removeClass('jo_active');\r\n                    $tle.addClass('jo_active');\r\n                })\r\n\r\n            })\r\n            let $templateName = <JQuery<HTMLInputElement>>jQuery('.jo_templatename');\r\n            $templateName.on('input', () => {\r\n                let s = <string>$templateName.val();\r\n                $templatelist.find('.jo_templateListEntry').hide();\r\n                templatelist.forEach(tle => {\r\n                    let tleString = tle.name + tle.ownerName + (tle.description ? tle.description : \"\");\r\n                    if (tleString.indexOf(s) >= 0) tle.$tle.show();\r\n                })\r\n            })\r\n        })\r\n\r\n        let $dropZone = jQuery('.jo_databaseimport_dropzone');\r\n\r\n        $dropZone.on('dragover', (evt) => {\r\n            evt.stopPropagation();\r\n            evt.preventDefault();\r\n            evt.originalEvent.dataTransfer.dropEffect = 'copy';\r\n        })\r\n        $dropZone.on('drop', (evt) => {\r\n            evt.stopPropagation();\r\n            evt.preventDefault();\r\n\r\n            var files = evt.originalEvent.dataTransfer.files;\r\n            this.importFile(files);\r\n        })\r\n\r\n        let $dumpFileInput = jQuery('.jo_dumpfile');\r\n        $dumpFileInput.on('change', (event) => {\r\n            //@ts-ignore\r\n            var files: FileList = event.originalEvent.target.files;\r\n            this.importFile(files).then(() => {\r\n                $dumpFileInput.val(null);\r\n            });\r\n\r\n        })\r\n\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { this.showMainWindow(); });\r\n        jQuery('#jo_ds_create_database_button').on('click', () => {\r\n            let createMode: CreateMode = \"emptyDatabase\";\r\n            if (jQuery('.jo_createDatabaseFromTemplateTab').hasClass('jo_active')) createMode = \"fromTemplate\";\r\n            if (jQuery('.jo_createDatabaseUseExistingTab').hasClass('jo_active')) createMode = \"useExistingDatabase\";\r\n            if (jQuery('.jo_createDatabaseUseDumpFile').hasClass('jo_active')) createMode = \"useDumpFile\";\r\n\r\n            let workspaceData: CreateWorkspaceData = {\r\n                id: null,\r\n                isFolder: false,\r\n                name: <string>jQuery('.dialog-input.jo_databasename').val(),\r\n                path: this.path.join(\"/\"),\r\n            }\r\n\r\n            switch (createMode) {\r\n                case \"emptyDatabase\":\r\n                    this.createWorkspace(workspaceData);\r\n                    break;\r\n                case \"fromTemplate\":\r\n                    let $template = jQuery('.jo_templateListEntry.jo_active');\r\n                    if ($template.length != 1) {\r\n                        alert('Bitte wählen Sie genau eine Vorlage aus.');\r\n                        return;\r\n                    } else {\r\n                        workspaceData.template_database_id = $template.data('templateId');\r\n                        if (workspaceData.name == \"Neue Datenbank\") workspaceData.name = $template.data('name');\r\n                        this.createWorkspace(workspaceData);\r\n                    }\r\n                    break;\r\n                case \"useExistingDatabase\":\r\n                    let code = <string>jQuery('.jo_databasecodeinput').val();\r\n                    let tIndex = code.indexOf(\"T\");\r\n                    if (tIndex == -1) {\r\n                        alert(\"Der Zugriffscode muss das Zeichen T enthalten.\");\r\n                        return;\r\n                    }\r\n                    workspaceData.otherDatabaseId = Number.parseInt(code.substring(0, tIndex));\r\n                    workspaceData.secret = code.substring(tIndex + 1);\r\n                    this.createWorkspace(workspaceData);\r\n                    break;\r\n                case \"useDumpFile\":\r\n                    if (this.database != null) {\r\n                        new TemplateUploader().uploadCurrentDatabase(-1, this.main, this.database.binDump,\r\n                            \"uploadBaseTemplateForWorkspace\",\r\n                            (response) => {\r\n                            workspaceData.template_id = response.newTemplateId;\r\n                            this.createWorkspace(workspaceData);\r\n                        });\r\n\r\n                    } else {\r\n                        alert('Bitte laden Sie zuerst den Binärdump einer Datenbank hoch.')\r\n                        return;\r\n                    }\r\n                    break;\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    private createWorkspace(workspaceData: CreateWorkspaceData) {\r\n        this.main.networkManager.sendCreateWorkspace(workspaceData, this.owner_id, (error?: string) => {\r\n            if (error != null) { alert(error); return; }\r\n\r\n            let w = this.main.createNewWorkspace(workspaceData.name, this.owner_id);\r\n            w.path = workspaceData.path;\r\n            w.id = workspaceData.id;\r\n            w.sql_history = \"\";\r\n\r\n            let projectExplorer = this.main.projectExplorer;\r\n\r\n            this.main.workspaceList.push(w);\r\n            let accordionElement: AccordionElement = {\r\n                name: workspaceData.name,\r\n                externalElement: w,\r\n                iconClass: \"workspace\",\r\n                isFolder: false,\r\n                path: this.path\r\n            };\r\n\r\n            projectExplorer.workspaceListPanel.addElement(accordionElement, true);\r\n\r\n            w.renderSettingsButton(accordionElement);\r\n\r\n            projectExplorer.workspaceListPanel.sortElements();\r\n            projectExplorer.fileListPanel.sortElements();\r\n\r\n            projectExplorer.setWorkspaceActive(w);\r\n\r\n            this.showMainWindow();\r\n\r\n        });\r\n    }\r\n\r\n    async importFile(files: FileList) {\r\n        let that = this;\r\n        let importer = new DatabaseImportExport();\r\n        let db: LoadableDatabase = await importer.loadFromFile(files[0], this.main)\r\n        let isDatabase: boolean = false;\r\n        let dumpFileType = DatabaseTool.getDumpType(db.binDump);\r\n        if (dumpFileType == \"binaryCompressed\") {\r\n            // @ts-ignore\r\n            let dbUncompressed = pako.inflate(db.binDump);\r\n            if (DatabaseTool.getDumpType(dbUncompressed) == \"binaryUncompressed\") {\r\n                isDatabase = true;\r\n            }\r\n        } else if (DatabaseTool.getDumpType(db.binDump) == \"binaryUncompressed\") {\r\n            //@ts-ignore\r\n            db.binDump = pako.deflate(db.binDump);\r\n            isDatabase = true;\r\n        }\r\n\r\n        if (isDatabase) {\r\n            that.database = db;\r\n            jQuery('.jo_databaseimport_ok').html(\"Die Datenbankdatei wurde erfolgreich von Datei eingelesen. Sie können die Datenbank jetzt durch Klick auf den Button unten erstellen.\");\r\n        } else {\r\n            alert(\"In der Datei befindet sich kein Binärdump einer Datenbank.\");\r\n        }\r\n    }\r\n\r\n    showMainWindow() {\r\n        jQuery('#main').css('visibility', 'visible');\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n    }\r\n\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { PasswordChanger } from \"./UserMenu.js\";\r\nimport { DatabaseSettingsDialog } from \"./DatabaseSettingsDialog.js\";\r\nimport { DatabaseImportExport } from \"../../tools/DatabaseImportExport.js\";\r\nimport { NewDatabaseDialog } from \"./NewDatabaseDialog.js\";\r\n\r\nexport type Action = (identifier: string) => void;\r\n\r\ntype Menu = {\r\n    items: MenuItem[];\r\n    $element?: JQuery<HTMLElement>;\r\n    level?: number;\r\n}\r\n\r\ntype MenuItem = {\r\n    identifier: string;\r\n    $element?: JQuery<HTMLElement>;\r\n    action?: Action;\r\n    link?: string;\r\n    subMenu?: Menu;\r\n}\r\n\r\nexport class MainMenu {\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n\r\n    currentSubmenu: { [level: number]: JQuery<HTMLElement> } = {};\r\n    openSubmenusOnMousemove: boolean = false;\r\n\r\n    initGUI(user: UserData) {\r\n\r\n        let that = this;\r\n        let editor = this.main.getMonacoEditor();\r\n\r\n        let mainMenu: Menu = {\r\n            items: [\r\n                {\r\n                    identifier: \"Datei\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Speichern und Beenden\",\r\n                                action: () => { jQuery('#buttonLogout').trigger(\"click\"); }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Bearbeiten\", subMenu:\r\n                    {\r\n                        items: [\r\n                            { identifier: \"Rückgängig (Strg + z)\", action: () => { editor.trigger(\".\", \"undo\", {}); } },\r\n                            { identifier: \"Wiederholen (Strg + y)\", action: () => { editor.trigger(\".\", \"redo\", {}); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Kopieren (Strg + c)\", action: () => { editor.getAction(\"editor.action.clipboardCopyAction\").run(); } },\r\n                            { identifier: \"Ausschneiden (Strg + x)\", action: () => { editor.getAction(\"editor.action.clipboardCutAction\").run(); } },\r\n                            { identifier: \"Nach oben kopieren (Alt + Shift + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.copyLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten kopieren (Alt + Shift + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.copyLinesDownAction\").run(); } },\r\n                            { identifier: \"Nach oben verschieben (Alt + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.moveLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten verschieben (Alt + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.moveLinesDownAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Suchen... (Strg + f)\", action: () => { editor.getAction(\"actions.find\").run(); } },\r\n                            { identifier: \"Ersetzen... (Strg + h)\", action: () => { editor.getAction(\"editor.action.startFindReplaceAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Aus-/Einkommentieren (Strg + #)\", action: () => { editor.getAction(\"editor.action.commentLine\").run(); } },\r\n                            { identifier: \"Dokument formatieren (Alt + Shift + f)\", action: () => { editor.getAction(\"editor.action.formatDocument\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Finde zugehörige Klammer (Strg + k)\", action: () => { editor.getAction(\"editor.action.jumpToBracket\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Alles zusammenfalten\", action: () => { editor.getAction(\"editor.foldAll\").run(); } },\r\n                            { identifier: \"Alles auffalten\", action: () => { editor.getAction(\"editor.unfoldAll\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Vorschlag auslösen (Strg + Leertaste)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.triggerSuggest\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n                            { identifier: \"Parameterhilfe (Strg + Shift + Leertaste)\", action: () => { editor.getAction(\"editor.action.triggerParameterHints\").run(); } },\r\n                            {\r\n                                identifier: \"Gehe zur Definition (Strg + Click)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.revealDefinition\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Ansicht\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Theme\",\r\n                                subMenu: {\r\n                                    items: [\r\n                                        {\r\n                                            identifier: \"Dark\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"dark\");\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            identifier: \"Light\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"light\");\r\n                                            }\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Hoher Kontrast im Editor ein/aus\", action: () => { editor.getAction(\"editor.action.toggleHighContrast\").run(); } },\r\n\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Zoom out (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(-4); } },\r\n                            { identifier: \"Zoom normal\", action: () => { this.main.editor.setFontSize(14); } },\r\n                            { identifier: \"Zoom in (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(4); } },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Datenbank\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Neue Datenbank anlegen...\", action: () => {\r\n                                    let owner_id: number = that.main.user.id;\r\n                                    if (that.main.workspacesOwnerId != null) {\r\n                                        owner_id = that.main.workspacesOwnerId;\r\n                                    }\r\n\r\n                                    new NewDatabaseDialog(that.main, owner_id, []);\r\n                                }\r\n                            },\r\n                            { identifier: \"Einstellungen...\", action: () => { new DatabaseSettingsDialog(this.main, this.main.currentWorkspace) } },\r\n                            {\r\n                                identifier: \"Export als Binärdump (.sqLite-File)...\", action: () => {\r\n                                    new DatabaseImportExport().saveToFile(this.main.getDatabaseTool());\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n\r\n            ]\r\n        };\r\n\r\n        jQuery('#mainmenu').empty();\r\n        this.initMenu(mainMenu, 0);\r\n    }\r\n\r\n    switchTheme(theme: string) {\r\n        this.main.viewModeController.setTheme(theme);\r\n    }\r\n\r\n    initMenu(menu: Menu, level?: number) {\r\n\r\n        menu.level = level;\r\n\r\n        if (level == 0) {\r\n            menu.$element = jQuery('#mainmenu');\r\n        } else {\r\n            menu.$element = jQuery('<div class=\"jo_submenu\"></div>');\r\n            jQuery('body').append(menu.$element);\r\n        }\r\n\r\n        menu.$element.data('model', menu);\r\n        for (let mi of menu.items) {\r\n            if (mi.identifier == '-') {\r\n                mi.$element = jQuery('<div class=\"jo_menuitemdivider\"></div>');\r\n            } else {\r\n                mi.$element = jQuery('<div>' + mi.identifier + '</div>');\r\n                if (mi.link != null) {\r\n                    let $link = jQuery('<a href=\"' + mi.link + '\" target=\"_blank\" class=\"jo_menulink\"></a>');\r\n                    $link.on(\"mousedown\", (event) => {\r\n                        event.stopPropagation();\r\n                        setTimeout(() => {\r\n                            menu.$element.hide();\r\n                        }, 500);\r\n                    })\r\n                    $link.append(mi.$element);\r\n                    mi.$element = $link;\r\n                }\r\n                if (mi.subMenu != null) {\r\n                    this.initMenu(mi.subMenu, level + 1);\r\n                }\r\n                this.initMenuitemCallbacks(menu, mi);\r\n                if (level == 0) {\r\n                    mi.$element.addClass('jo_mainmenuitem');\r\n                }\r\n            }\r\n            menu.$element.append(mi.$element);\r\n            mi.$element.data('model', mi);\r\n        }\r\n\r\n        let that = this;\r\n        jQuery(document).on('mousedown', () => {\r\n            for (let i = 0; i < 5; i++) {\r\n                if (that.currentSubmenu[i] != null) {\r\n                    that.currentSubmenu[i].hide();\r\n                    that.currentSubmenu[i] = null;\r\n                }\r\n            }\r\n            that.openSubmenusOnMousemove = false;\r\n        });\r\n\r\n    }\r\n\r\n    initMenuitemCallbacks(menu: Menu, mi: MenuItem) {\r\n        let that = this;\r\n\r\n        if (mi.action != null) {\r\n            mi.$element.on('mousedown', (ev) => { mi.action(mi.identifier); });\r\n        }\r\n\r\n        if (mi.subMenu != null) {\r\n            mi.$element.on('mousedown', (ev) => {\r\n                that.opensubmenu(mi);\r\n                that.openSubmenusOnMousemove = true;\r\n                ev.stopPropagation();\r\n            });\r\n\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.openSubmenusOnMousemove) {\r\n                    that.opensubmenu(mi);\r\n                } else {\r\n                    if (that.currentSubmenu[menu.level + 1] != null) {\r\n                        that.currentSubmenu[menu.level + 1].hide();\r\n                        that.currentSubmenu[menu.level + 1] = null;\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.currentSubmenu[menu.level + 1] != null) {\r\n                    that.currentSubmenu[menu.level + 1].hide();\r\n                    that.currentSubmenu[menu.level + 1] = null;\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    opensubmenu(mi: MenuItem) {\r\n\r\n        let subMenu = mi.subMenu;\r\n\r\n        let left: number;\r\n        let top: number;\r\n        if (subMenu.level == 1) {\r\n            left = mi.$element.position().left;\r\n            top = 30;\r\n        } else {\r\n            left = mi.$element.offset().left + mi.$element.width();\r\n            top = mi.$element.offset().top;\r\n        }\r\n\r\n        subMenu.$element.css({\r\n            top: \"\" + top + \"px\",\r\n            left: \"\" + left + \"px\"\r\n        })\r\n\r\n        if (this.currentSubmenu[subMenu.level] != null) {\r\n            this.currentSubmenu[subMenu.level].hide();\r\n        }\r\n\r\n        subMenu.$element.show();\r\n        this.currentSubmenu[subMenu.level] = subMenu.$element;\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { openContextMenu, makeEditable, ContextMenuItem, animateToTransparent, jo_mouseDetected } from \"../../tools/HtmlTools.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { escapeHtml } from \"../../tools/StringTools.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type AccordionElement = {\r\n    name: string;\r\n    sortName?: string;      // if sortName == null, then name will be used when sorting\r\n    externalElement?: any;\r\n    iconClass?: string;\r\n    $htmlFirstLine?: JQuery<HTMLElement>;\r\n    $htmlSecondLine?: JQuery<HTMLElement>;\r\n\r\n    isFolder: boolean;\r\n    path: string[];\r\n}\r\n\r\nexport type AccordionContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: (panel: AccordionElement) => void;\r\n    subMenu?: AccordionContextMenuItem[]\r\n}\r\n\r\nexport class AccordionPanel {\r\n\r\n    elements: AccordionElement[] = [];\r\n\r\n    $captionElement: JQuery<HTMLElement>;\r\n    $buttonNew: JQuery<HTMLElement>;\r\n    $listElement: JQuery<HTMLElement>;\r\n\r\n    private fixed: boolean;\r\n\r\n    dontSortElements: boolean = false;\r\n\r\n    static currentlyDraggedElement: AccordionElement;\r\n    static currentlyDraggedElementKind: string;\r\n\r\n    newFilesElementCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    newDatabaseElementCallback: (path: string[]) => void;\r\n    newFolderCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    renameCallback: (externalElement: any, newName: string) => string;\r\n    deleteCallback: (externalElement: any, callbackIfSuccessful: () => void) => void;\r\n    selectCallback: (externalElement: any) => void;\r\n    addElementActionCallback: (accordionElement: AccordionElement) => JQuery<HTMLElement>;\r\n    contextMenuProvider: (externalElement: any) => AccordionContextMenuItem[];\r\n    moveCallback: (ae: AccordionElement | AccordionElement[]) => void;\r\n    dropElementCallback: (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => void;\r\n\r\n    $newFolderAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private accordion: Accordion, private caption: string, private flexWeight: string,\r\n        private newButtonClass: string, private buttonNewTitle: string,\r\n        private defaultIconClass: string, private withDeleteButton: boolean, private withFolders: boolean,\r\n        private kind: \"workspace\" | \"file\" | \"class\" | \"student\", private enableDrag: boolean, private acceptDropKinds: string[]) {\r\n\r\n        accordion.addPanel(this);\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        if (withFolders) {\r\n            let that = this;\r\n            this.$newFolderAction = jQuery('<div class=\"img_add-folder-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Neuen Ordner auf oberster Ebene anlegen\">');\r\n            this.$newFolderAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                let pathArray: string[] = [];\r\n\r\n                this.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                    this.newFolderCallback(newElement, () => {\r\n                        this.sortElements();\r\n                        newElement.$htmlFirstLine[0].scrollIntoView();\r\n                        animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                    });\r\n                });\r\n\r\n            })\r\n\r\n            this.addAction(this.$newFolderAction);\r\n\r\n\r\n            let $collapseAllAction = jQuery('<div class=\"img_collapse-all-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Alle Ordner zusammenfalten\">');\r\n            $collapseAllAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                that.collapseAll();\r\n\r\n            })\r\n\r\n            this.addAction($collapseAllAction);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    collapseAll() {\r\n        for (let element of this.elements) {\r\n            if (element.isFolder) {\r\n                if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                    element.$htmlFirstLine.removeClass('jo_expanded');\r\n                    element.$htmlFirstLine.addClass('jo_collapsed');\r\n                }\r\n            }\r\n            if (element.path.length > 0) {\r\n                element.$htmlFirstLine.slideUp(200);\r\n            }\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        this.$captionElement.remove();\r\n        this.$listElement.remove();\r\n    }\r\n\r\n    setFixed(fixed: boolean) {\r\n        this.fixed = fixed;\r\n        if (this.fixed) {\r\n            this.grow();\r\n            this.$captionElement.addClass('jo_fixed');\r\n        } else {\r\n            this.$captionElement.removeClass('jo_fixed');\r\n        }\r\n\r\n    }\r\n\r\n    //     <div class=\"jo_leftpanelcaption expanded\" id=\"workspace\" data-panel=\"filelistouter\">\r\n    //     <span>WORKSPACE</span>\r\n    //     <div class=\"jo_actions\"><img id=\"buttonNewFile\" title=\"Neue Datei hinzufügen\"\r\n    //             src=\"assets/projectexplorer/add-file-dark.svg\"></div>\r\n    // </div>\r\n    // <div id=\"filelistouter\" class=\"jo_projectexplorerdiv scrollable\" data-grow=\"3\"\r\n    //     style=\"flex-grow: 3\">\r\n    //     <div id=\"filelist\"></div>\r\n    // </div>\r\n\r\n\r\n    enableNewButton(enabled: boolean) {\r\n        if (this.$buttonNew != null) {\r\n            if (enabled) {\r\n                this.$buttonNew.show();\r\n            } else {\r\n                this.$buttonNew.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    getCurrentlySelectedPath(): string[] {\r\n        let pathArray: string[] = [];\r\n        let selectedElement = this.getSelectedElement();\r\n        if (selectedElement != null) {\r\n            pathArray = selectedElement.path.slice(0);\r\n            if (selectedElement.isFolder) pathArray.push(selectedElement.name);\r\n        }\r\n        return pathArray;\r\n    }\r\n\r\n    compareWithPath(name1: string, path1: string[], isFolder1: boolean, name2: string, path2: string[], isFolder2: boolean) {\r\n\r\n        path1 = path1.slice();\r\n        path1.push(name1);\r\n        name1 = \"\";\r\n\r\n        path2 = path2.slice();\r\n        path2.push(name2);\r\n        name2 = \"\";\r\n\r\n        let i = 0;\r\n        while (i < path1.length && i < path2.length) {\r\n            let cmp = path1[i].localeCompare(path2[i]);\r\n            if (cmp != 0) return cmp;\r\n            i++;\r\n        }\r\n\r\n        if (path1.length < path2.length) return -1;\r\n        if (path1.length > path2.length) return 1;\r\n\r\n        return name1.localeCompare(name2);\r\n\r\n\r\n        // let nameWithPath1 = path1.join(\"/\");\r\n        // if (nameWithPath1 != \"\" && name1 != \"\") nameWithPath1 += \"/\";\r\n        // nameWithPath1 += name1;\r\n\r\n        // let nameWithPath2 = path2.join(\"/\");\r\n        // if (nameWithPath2 != \"\" && name2 != \"\") nameWithPath2 += \"/\";\r\n        // nameWithPath2 += name2;\r\n\r\n        // return nameWithPath1.localeCompare(nameWithPath2);\r\n    }\r\n\r\n\r\n    getElementIndex(name: string, path: string[], isFolder: boolean): number {\r\n\r\n        for (let i = 0; i < this.elements.length; i++) {\r\n            let element = this.elements[i];\r\n\r\n            if (this.compareWithPath(name, path, isFolder, element.name, element.path, element.isFolder) < 0) return i;\r\n\r\n        }\r\n        return this.elements.length;\r\n    }\r\n\r\n    insertElement(ae: AccordionElement) {\r\n        let insertIndex = this.getElementIndex(ae.name, ae.path, ae.isFolder);\r\n        // if (ae.path.length == 0) insertIndex = this.elements.length;\r\n        this.elements.splice(insertIndex, 0, ae);\r\n\r\n        let $elements = this.$listElement.find('.jo_file');\r\n\r\n        if (insertIndex == 0) {\r\n            this.$listElement.prepend(ae.$htmlFirstLine);\r\n        } else if(insertIndex == $elements.length){\r\n            this.$listElement.append(ae.$htmlFirstLine);\r\n        } else {\r\n            let elementAtIndex = $elements.get(insertIndex);\r\n            jQuery(elementAtIndex).before(ae.$htmlFirstLine);\r\n        }\r\n\r\n    }\r\n\r\n    addFolder(name: string, path: string[], callback: (newPanel: AccordionElement) => void) {\r\n\r\n        let ae: AccordionElement = {\r\n            name: name,\r\n            isFolder: true,\r\n            path: path\r\n        }\r\n\r\n        let $element = this.renderElement(ae, true);\r\n\r\n        this.insertElement(ae);\r\n\r\n        $element[0].scrollIntoView();\r\n\r\n        this.renameElement(ae, () => {\r\n\r\n            callback(ae);\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    renderOuterHtmlElements($accordionDiv: JQuery<HTMLElement>) {\r\n        let that = this;\r\n\r\n        this.$captionElement = jQuery(`<div class=\"jo_leftpanelcaption jo_expanded\">\r\n        <div class=\"jo_captiontext\">` + this.caption + `</div><div class=\"jo_actions\"></div></div>`);\r\n\r\n        if (this.newButtonClass != null) {\r\n            this.$buttonNew = jQuery('<div class=\"jo_button jo_active ' + this.newButtonClass + '\" title=\"' + this.buttonNewTitle + '\">');\r\n            this.$captionElement.find('.jo_actions').append(this.$buttonNew);\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n            this.$buttonNew.on(mousePointer + 'down', (ev) => {\r\n\r\n                Helper.close();\r\n                ev.stopPropagation();\r\n\r\n                let path = that.getCurrentlySelectedPath();\r\n\r\n                let ae: AccordionElement = {\r\n                    name: \"Neu\",\r\n                    isFolder: false,\r\n                    path: path\r\n                }\r\n\r\n                let insertIndex = this.getElementIndex(\"\", path, false);\r\n                this.elements.splice(insertIndex, 0, ae);\r\n                let $element = this.renderElement(ae, true);\r\n\r\n\r\n                if (insertIndex == 0) {\r\n                    this.$listElement.prepend($element);\r\n                } else {\r\n                    let elementAtIndex = this.$listElement.find('.jo_file').get(insertIndex - 1);\r\n                    jQuery(elementAtIndex).after($element);\r\n                }\r\n\r\n                $element[0].scrollIntoView();\r\n\r\n                that.renameElement(ae, () => {\r\n\r\n                    that.newFilesElementCallback(ae, (externalElement: any) => {\r\n\r\n                        ae.externalElement = externalElement;\r\n\r\n                        if (ae.$htmlSecondLine != null) {\r\n                            ae.$htmlSecondLine.insertAfter($element);\r\n                        }\r\n\r\n                        if (that.selectCallback != null) that.select(ae.externalElement);\r\n\r\n                    });\r\n\r\n                });\r\n\r\n            });\r\n\r\n        }\r\n\r\n        let $listOuter = jQuery('<div id=\"filelistouter\" class=\"jo_projectexplorerdiv jo_scrollable\" data-grow=\"'\r\n            + this.flexWeight + '\" style=\"flex-grow: ' + this.flexWeight + '\"></div>');\r\n        this.$listElement = jQuery('<div class=\"jo_filelist\"></div>')\r\n\r\n        $listOuter.append(this.$listElement);\r\n\r\n        $accordionDiv.append(this.$captionElement);\r\n        $accordionDiv.append($listOuter);\r\n\r\n        let $ce = this.$captionElement;\r\n        let $li = this.$listElement.parent();\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $ce.on(mousePointer + 'down', (ev) => {\r\n            if (ev.button != 0) {\r\n                return;\r\n            }\r\n\r\n            if (!this.fixed) {\r\n                let targetGrow = $li.data('grow');\r\n                if ($ce.hasClass('jo_expanded')) {\r\n                    if (that.accordion.parts.length > 1) {\r\n                        $li.animate({\r\n                            'flex-grow': 0.001\r\n                        }, 1000, () => { $ce.toggleClass('jo_expanded'); });\r\n                    }\r\n                } else {\r\n                    $ce.toggleClass('jo_expanded');\r\n                    $li.animate({\r\n                        'flex-grow': targetGrow\r\n                    }, 1000);\r\n                }\r\n            }\r\n        });\r\n\r\n        $ce.on('dragover', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                $ce.addClass('jo_file_dragover');\r\n                event.preventDefault();\r\n            }\r\n        })\r\n\r\n        $ce.on('dragleave', (event) => {\r\n            $ce.removeClass('jo_file_dragover');\r\n        })\r\n\r\n        $ce.on('drop', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                event.preventDefault();\r\n                $ce.removeClass('jo_file_dragover');\r\n                let element1 = AccordionPanel.currentlyDraggedElement;\r\n                if (element1 != null) {\r\n                    that.moveElement(element1, null);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    grow() {\r\n        let $li = this.$listElement.parent();\r\n        let targetGrow = $li.data('grow');\r\n        $li.css('flex-grow', targetGrow);\r\n        this.$captionElement.addClass('jo_expanded');\r\n    }\r\n\r\n    addElement(element: AccordionElement, expanded: boolean) {\r\n        // this.elements.push(element);\r\n        // element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        // this.$listElement.prepend(element.$htmlFirstLine);\r\n        element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        this.insertElement(element);\r\n    }\r\n\r\n    sortElements() {\r\n        if (this.dontSortElements) return;\r\n        this.elements.sort((a, b) => {\r\n            let aName = a.sortName ? a.sortName : a.name;\r\n            let bName = b.sortName ? b.sortName : b.name;\r\n\r\n            return this.compareWithPath(aName, a.path, a.isFolder, bName, b.path, b.isFolder);\r\n\r\n        });\r\n        this.elements.forEach((element) => { this.$listElement.append(element.$htmlFirstLine) });\r\n    }\r\n\r\n    setTextAfterFilename(element: AccordionElement, text: string, cssClass: string) {\r\n        if(element == null) return;\r\n        let $div = element.$htmlFirstLine.find('.jo_textAfterName');\r\n        $div.addClass(cssClass);\r\n        $div.html(text);\r\n    }\r\n\r\n    addAction($element: JQuery<HTMLElement>) {\r\n        this.$captionElement.find('.jo_actions').prepend($element);\r\n    }\r\n\r\n    renderElement(element: AccordionElement, expanded: boolean): JQuery<HTMLElement> {\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        let that = this;\r\n\r\n        let expandedCollapsed = \"\";\r\n\r\n        if (element.iconClass == null) element.iconClass = this.defaultIconClass;\r\n        if (element.isFolder) {\r\n            element.iconClass = \"folder\";\r\n            expandedCollapsed = expanded ? \" jo_expanded\" : \" jo_collapsed\";\r\n        }\r\n\r\n        let pathHtml = \"\";\r\n        if (element.path == null) element.path = [];\r\n        for (let i = 0; i < element.path.length; i++) {\r\n            pathHtml += '<div class=\"jo_folderline\"></div>';\r\n        }\r\n\r\n        element.$htmlFirstLine = jQuery(`<div class=\"jo_file jo_${element.iconClass} ${expandedCollapsed}\">\r\n        <div class=\"jo_folderlines\">${pathHtml}</div>\r\n           <div class=\"jo_fileimage\"></div>\r\n           <div class=\"jo_filename\">${escapeHtml(element.name)}</div>\r\n           <div class=\"jo_textAfterName\"></div>\r\n           <div class=\"jo_additionalButtonSettings\"></div>\r\n           ${this.withDeleteButton ? '<div class=\"jo_delete img_delete jo_button jo_active' + (false ? \" jo_delete_always\" : \"\") + '\"></div>' : \"\"}\r\n           ${!jo_mouseDetected ? '<div class=\"jo_settings_button img_ellipsis-dark jo_button jo_active\"></div>' : \"\"}\r\n           </div>`);\r\n\r\n        if (!expanded && element.path.length > 0) {\r\n            element.$htmlFirstLine.hide();\r\n        }\r\n\r\n        if (this.addElementActionCallback != null) {\r\n            let $elementAction = this.addElementActionCallback(element);\r\n            element.$htmlFirstLine.append($elementAction);\r\n        }\r\n\r\n        if (this.withFolders) {\r\n            if (element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            that.moveElement(element1, element);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withFolders || this.enableDrag) {\r\n            let $filedragpart = element.$htmlFirstLine.find('.jo_filename');\r\n            $filedragpart.attr('draggable', 'true');\r\n            $filedragpart.on('dragstart', (event) => {\r\n                AccordionPanel.currentlyDraggedElement = element;\r\n                AccordionPanel.currentlyDraggedElementKind = that.kind;\r\n                event.originalEvent.dataTransfer.effectAllowed = element.isFolder ? \"move\" : \"copyMove\";\r\n            })\r\n        }\r\n\r\n        if (this.acceptDropKinds != null && this.acceptDropKinds.length > 0) {\r\n            if (!element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n\r\n                        if (event.ctrlKey) {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"copy\";\r\n                        } else {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"move\";\r\n                        }\r\n\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            if (that.dropElementCallback != null) that.dropElementCallback(element, element1, event.ctrlKey ? \"copy\" : \"move\");\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        element.$htmlFirstLine.on(mousePointer + 'up', (ev) => {\r\n\r\n            if (ev.button == 0 && that.selectCallback != null) {\r\n                that.selectCallback(element.externalElement);\r\n\r\n                for (let ae of that.elements) {\r\n                    if (ae != element && ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                        ae.$htmlFirstLine.removeClass('jo_active');\r\n                    }\r\n                }\r\n\r\n                element.$htmlFirstLine.addClass('jo_active');\r\n\r\n                if (element.isFolder) {\r\n\r\n                    if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                        element.$htmlFirstLine.removeClass('jo_expanded');\r\n                        element.$htmlFirstLine.addClass('jo_collapsed');\r\n                    } else {\r\n                        element.$htmlFirstLine.addClass('jo_expanded');\r\n                        element.$htmlFirstLine.removeClass('jo_collapsed');\r\n                    }\r\n\r\n                    let pathIsCollapsed: { [path: string]: boolean } = {};\r\n                    for (let e of this.elements) {\r\n                        if (e.isFolder) {\r\n                            let path = e.path.join(\"/\");\r\n                            if (path != \"\") path += \"/\";\r\n                            path += e.name;\r\n                            pathIsCollapsed[path] = e.$htmlFirstLine.hasClass('jo_collapsed');\r\n                            if (pathIsCollapsed[e.path.join(\"/\")]) pathIsCollapsed[path] = true;\r\n                        }\r\n                    }\r\n                    pathIsCollapsed[\"\"] = false;\r\n\r\n                    for (let e of this.elements) {\r\n                        if (pathIsCollapsed[e.path.join(\"/\")]) {\r\n                            e.$htmlFirstLine.slideUp(200);\r\n                        } else {\r\n                            e.$htmlFirstLine.slideDown(200);\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n\r\n        let contextmenuHandler = function (event) {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [];\r\n            if (that.renameCallback != null) {\r\n                contextMenuItems.push({\r\n                    caption: \"Umbenennen\",\r\n                    callback: () => {\r\n                        that.renameElement(element);\r\n                    }\r\n                })\r\n            }\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n            if (element.isFolder) {\r\n                contextMenuItems = contextMenuItems.concat([\r\n                    {\r\n                        caption: \"Neuen Unterordner anlegen (unterhalb '\" + element.name + \"')...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            // that.$newFolderAction.trigger(mousePointer + 'down');\r\n                            let pathArray = that.getCurrentlySelectedPath();\r\n\r\n                            that.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                                that.newFolderCallback(newElement, () => {\r\n                                    that.sortElements();\r\n                                    newElement.$htmlFirstLine[0].scrollIntoView();\r\n                                    animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                                });\r\n                            });\r\n\r\n                        }\r\n                    }, {\r\n                        caption: \"Neue Datenbank...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n\r\n                            that.newDatabaseElementCallback(element.path.concat(element.name));\r\n\r\n                        }\r\n                    }\r\n                ])\r\n            }\r\n\r\n\r\n            if (that.contextMenuProvider != null && !element.isFolder) {\r\n\r\n                for (let cmi of that.contextMenuProvider(element)) {\r\n                    contextMenuItems.push({\r\n                        caption: cmi.caption,\r\n                        callback: () => {\r\n                            cmi.callback(element);\r\n                        },\r\n                        color: cmi.color,\r\n                        subMenu: cmi.subMenu == null ? null : cmi.subMenu.map((mi) => {\r\n                            return {\r\n                                caption: mi.caption,\r\n                                callback: () => {\r\n                                    mi.callback(element);\r\n                                },\r\n                                color: mi.color\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n\r\n            if (contextMenuItems.length > 0) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                openContextMenu(contextMenuItems, event.pageX, event.pageY);\r\n            }\r\n        };\r\n\r\n        element.$htmlFirstLine[0].addEventListener(\"contextmenu\", contextmenuHandler, false);\r\n\r\n        // long press for touch devices\r\n        let pressTimer: number;\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.on('pointerup', () => {\r\n                clearTimeout(pressTimer);\r\n                return false;\r\n            }).on('pointerdown', (event) => {\r\n                pressTimer = window.setTimeout(() => {\r\n                    contextmenuHandler(event);\r\n                }, 500);\r\n                return false;\r\n            });\r\n        }\r\n\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('pointerdown', (e) => {\r\n                contextmenuHandler(e);\r\n            });\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('mousedown click', (e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            });\r\n        }\r\n\r\n        if (that.withDeleteButton) {\r\n            element.$htmlFirstLine.find('.jo_delete').on(mousePointer + 'up', (ev) => {\r\n                ev.preventDefault();\r\n                openContextMenu([{\r\n                    caption: \"Abbrechen\",\r\n                    callback: () => {\r\n                        // nothing to do.\r\n                    }\r\n                }, {\r\n                    caption: \"Ich bin mir sicher: löschen!\",\r\n                    color: \"#ff6060\",\r\n                    callback: () => {\r\n\r\n                        if (element.isFolder) {\r\n                            if (that.getChildElements(element).length > 0) {\r\n                                alert('Dieser Ordner kann nicht gelöscht werden, da er nicht leer ist.');\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        that.deleteCallback(element.externalElement, () => {\r\n                            element.$htmlFirstLine.remove();\r\n                            if (element.$htmlSecondLine != null) element.$htmlSecondLine.remove();\r\n                            that.elements.splice(that.elements.indexOf(element), 1);\r\n\r\n                            if (that.selectCallback != null) {\r\n                                if (that.elements.length > 0) {\r\n                                    that.select(that.elements[0].externalElement);\r\n                                } else {\r\n                                    that.select(null);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }], ev.pageX + 2, ev.pageY + 2);\r\n                ev.stopPropagation();\r\n            });\r\n        }\r\n\r\n        return element.$htmlFirstLine;\r\n\r\n    }\r\n\r\n    moveElement(elementToMove: AccordionElement, destinationFolder: AccordionElement) {\r\n        let destinationPath: string[] = destinationFolder == null ? [] : destinationFolder.path.slice(0).concat([destinationFolder.name]);\r\n        if (elementToMove.isFolder) {\r\n            let movedElements: AccordionElement[] = [elementToMove];\r\n\r\n            let sourcePath = elementToMove.path.concat([elementToMove.name]).join(\"/\");\r\n\r\n            if(destinationPath.join('/').indexOf(sourcePath) == 0) return;\r\n\r\n            let oldPathLength = elementToMove.path.length;\r\n            elementToMove.path = destinationPath.slice(0);\r\n\r\n            for (let element of this.elements) {\r\n                if (element.path.join(\"/\").startsWith(sourcePath)) {\r\n                    element.path.splice(0, oldPathLength);\r\n                    element.path = destinationPath.concat(element.path);\r\n                    movedElements.push(element);\r\n                }\r\n            }\r\n\r\n            for (let el of movedElements) {\r\n                el.$htmlFirstLine.remove();\r\n                this.elements.splice(this.elements.indexOf(el), 1);\r\n            }\r\n            for (let el of movedElements) {\r\n                this.renderElement(el, true);\r\n                this.insertElement(el);\r\n            }\r\n\r\n            this.moveCallback(movedElements);\r\n        } else {\r\n            elementToMove.path = destinationPath;\r\n            elementToMove.$htmlFirstLine.remove();\r\n            this.elements.splice(this.elements.indexOf(elementToMove), 1);\r\n            this.renderElement(elementToMove, true);\r\n            this.insertElement(elementToMove);\r\n            this.select(elementToMove.externalElement);\r\n            elementToMove.$htmlFirstLine[0].scrollIntoView();\r\n            this.moveCallback(elementToMove);\r\n        }\r\n    }\r\n\r\n    getChildElements(folder: AccordionElement): AccordionElement[] {\r\n        let path = folder.path.slice(0).concat(folder.name).join(\"/\");\r\n        return this.elements.filter((element) => element.path.join(\"/\").startsWith(path));\r\n    }\r\n\r\n    renameElement(element: AccordionElement, callback?: () => void) {\r\n        let that = this;\r\n        let $div = element.$htmlFirstLine.find('.jo_filename');\r\n        let pointPos = element.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        this.dontSortElements = true;\r\n        makeEditable($div, $div, (newText: string) => {\r\n            if (element.externalElement != null) newText = that.renameCallback(element.externalElement, newText);\r\n            element.name = newText;\r\n            $div.html(element.name);\r\n            if (callback != null) callback();\r\n            that.sortElements();\r\n            $div[0].scrollIntoView();\r\n            this.dontSortElements = false;\r\n        }, selection);\r\n    }\r\n\r\n    select(externalElement: any, invokeCallback: boolean = true, scrollIntoView: boolean = false) {\r\n\r\n        if (externalElement == null) {\r\n            for (let ae1 of this.elements) {\r\n                if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n            }\r\n        } else {\r\n            let ae = this.findElement(externalElement);\r\n\r\n            if (ae != null) {\r\n                for (let ae1 of this.elements) {\r\n                    if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n                }\r\n\r\n                ae.$htmlFirstLine.addClass('jo_active');\r\n                if (scrollIntoView) {\r\n                    let pathString = ae.path.join(\"/\");\r\n                    for (let el of this.elements) {\r\n                        let elPath = el.path.slice(0);\r\n                        if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                            if (el.isFolder) {\r\n                                elPath.push(el.name);\r\n                                if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                                    el.$htmlFirstLine.removeClass(\"jo_collapsed\");\r\n                                    el.$htmlFirstLine.addClass(\"jo_expanded\");\r\n                                }\r\n                            }\r\n                            el.$htmlFirstLine.show();\r\n                        }\r\n\r\n                    }\r\n\r\n                    ae.$htmlFirstLine[0].scrollIntoView();\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (invokeCallback && this.selectCallback != null) this.selectCallback(externalElement);\r\n\r\n    }\r\n\r\n    getPathString(ae: AccordionElement) {\r\n        let ps: string = ae.path.join(\"/\");\r\n        if (ae.isFolder) {\r\n            if (ps != \"\") ps += \"/\";\r\n            ps += ae.name;\r\n        }\r\n        return ps;\r\n    }\r\n\r\n    setElementClass(element: AccordionElement, iconClass: string) {\r\n        if (element != null) {\r\n            element.$htmlFirstLine?.removeClass(\"jo_\" + element.iconClass).addClass(\"jo_\" + iconClass);\r\n            element.iconClass = iconClass;\r\n        }\r\n\r\n    }\r\n\r\n    findElement(externalElement: any): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                return ae;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    removeElement(externalElement: any) {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                ae.$htmlFirstLine.remove();\r\n                if (ae.$htmlSecondLine != null) ae.$htmlSecondLine.remove();\r\n                this.elements.splice(this.elements.indexOf(ae), 1);\r\n\r\n                if (this.selectCallback != null) {\r\n                    if (this.elements.length > 0) {\r\n                        this.select(this.elements[0].externalElement);\r\n                    } else {\r\n                        this.select(null);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.$listElement.empty();\r\n        this.elements = [];\r\n    }\r\n\r\n    setCaption(text: string) {\r\n        this.$captionElement.find('.jo_captiontext').html(text);\r\n    }\r\n\r\n    getSelectedElement(): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                return ae;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class Accordion {\r\n\r\n    parts: AccordionPanel[] = [];\r\n    $html: JQuery<HTMLElement>;\r\n\r\n    constructor(public main: MainBase, $html: JQuery<HTMLElement>) {\r\n        this.$html = $html;\r\n        $html.addClass('jo_leftpanelinner');\r\n    }\r\n\r\n    addPanel(panel: AccordionPanel) {\r\n        panel.renderOuterHtmlElements(this.$html);\r\n        this.parts.push(panel);\r\n    }\r\n\r\n}","import { ClassData, UserData } from \"../../communication/Data.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { isEmptyObject } from \"jquery\";\r\n\r\nexport class DistributeToStudentsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n    studentCount: number = 0;\r\n\r\n    constructor(private classes: ClassData[], private workspace: Workspace, private main: Main){\r\n        this.init();\r\n    }\r\n\r\n    private init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Austeilen eines Workspace an einzelne Schüler/innen</div>\r\n             <div class=\"jo_ds_settings\">\r\n                <div class=\"jo_ds_settings_caption\">Workspace:</div><div class=\"jo_ds_workspacename\">${this.workspace.name}</div>\r\n                <div class=\"jo_ds_settings_caption\">Liste filtern:</div><div class=\"jo_ds_filterdiv\"><input class=\"dialog-input\"></input></div>\r\n             </div>\r\n             <div class=\"jo_ds_student_list jo_scrollable\">\r\n             </div>\r\n             <div class=\"jo_ds_selected_message\"></div>\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_distribute_button\">Austeilen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        let $studentList = jQuery('.jo_ds_student_list');\r\n        let that = this;\r\n\r\n        for(let klass of this.classes){\r\n            for(let student of klass.students){\r\n                let $studentLine = jQuery('<div class=\"jo_ds_student_line\">');\r\n                let $studentClass = jQuery(`<div class=\"jo_ds_student_class\">${klass.name}</div>`);                \r\n                let $studentName = jQuery(`<div class=\"jo_ds_student_name\">${student.rufname} ${student.familienname}</div>`);\r\n                $studentLine.append($studentClass, $studentName);\r\n                $studentList.append($studentLine);\r\n                $studentLine.on('mousedown', () => {\r\n                    $studentLine.toggleClass('jo_active');\r\n                     that.studentCount += $studentLine.hasClass('jo_active') ? 1 : -1;\r\n                     jQuery('.jo_ds_selected_message').text(`${that.studentCount} Schüler/inn/en selektiert`);\r\n                });\r\n                $studentLine.data('student', student);\r\n                $studentLine.data('klass', klass);\r\n            }\r\n        }\r\n\r\n        jQuery('.jo_ds_filterdiv>input').on('input', () => {\r\n            let filterText = <string>jQuery('.jo_ds_filterdiv>input').val();\r\n            if(filterText == null || filterText == \"\"){\r\n                $('.jo_ds_student_line').show();\r\n            } else {\r\n                $('.jo_ds_student_line').each((index, element) => {\r\n                    let $element = jQuery(element);\r\n                    let klass:ClassData = $element.data('klass');\r\n                    let student: UserData = $element.data('student');\r\n                    let text = klass.name + \" \" + student.rufname + \" \" + student.familienname;\r\n                    if(text.indexOf(filterText) >= 0){\r\n                        $element.show();\r\n                    } else {\r\n                        $element.hide();\r\n                    }\r\n                });\r\n\r\n            }\r\n            \r\n        });\r\n\r\n\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { that.close() });\r\n        jQuery('#jo_ds_distribute_button').on('click', () => {that.distributeWorkspace();});\r\n\r\n    }\r\n\r\n    distributeWorkspace() {\r\n\r\n        let student_ids: number[] = [];\r\n        $('.jo_ds_student_line').each((index, element) => {\r\n            let $element = jQuery(element);\r\n            if($element.hasClass('jo_active')){\r\n                let student: UserData = $element.data('student');\r\n                student_ids.push(student.id);\r\n            }\r\n        });\r\n\r\n        this.close();\r\n\r\n        this.main.networkManager.sendDistributeWorkspace(this.workspace, null, student_ids, (error: string) => {\r\n            if (error == null) {\r\n                let networkManager = this.main.networkManager;\r\n                let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                alert(`Der Workspace ${this.workspace.name} wurde an ${student_ids.length} Schüler/innen ausgeteilt. Er wird in maximal ${dt} s bei jedem Schüler ankommen.`);\r\n            } else {\r\n                alert(error);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n    \r\n\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionPanel, Accordion, AccordionElement, AccordionContextMenuItem } from \"./Accordion.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { WorkspaceData, Workspaces, ClassData, CreateWorkspaceData } from \"../../communication/Data.js\";\r\nimport { dateToString } from \"../../tools/StringTools.js\";\r\nimport { DistributeToStudentsDialog } from \"./DistributeToStudentsDialog.js\";\r\nimport { NewDatabaseDialog } from \"./NewDatabaseDialog.js\";\r\n\r\n\r\nexport class ProjectExplorer {\r\n\r\n    programPointerModule: Module = null;\r\n    programPointerPosition: TextPosition;\r\n    programPointerDecoration: string[] = [];\r\n\r\n    accordion: Accordion;\r\n    fileListPanel: AccordionPanel;\r\n    workspaceListPanel: AccordionPanel;\r\n\r\n    $homeAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private $projectexplorerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.accordion = new Accordion(this.main, this.$projectexplorerDiv);\r\n\r\n        this.initFilelistPanel();\r\n\r\n        this.initWorkspacelistPanel();\r\n\r\n    }\r\n\r\n    initFilelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.fileListPanel = new AccordionPanel(this.accordion, \"Kein Workspace gewählt\", \"1\",\r\n            \"img_add-file-dark\", \"Neue Datei...\", \"java\", true, false, \"file\", true, []);\r\n\r\n        this.fileListPanel.newFilesElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                if (that.main.currentWorkspace == null) {\r\n                    alert('Bitte wählen Sie zuerst einen Workspace aus.');\r\n                    return null;\r\n                }\r\n\r\n                let f: File = {\r\n                    name: accordionElement.name,\r\n                    dirty: false,\r\n                    saved: true,\r\n                    text: \"\",\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    panelElement: accordionElement\r\n                };\r\n                let m = new Module(f, that.main);\r\n                let modulStore = that.main.currentWorkspace.moduleStore;\r\n                modulStore.putModule(m);\r\n                that.setModuleActive(m);\r\n                that.main.networkManager.sendCreateFile(m, that.main.currentWorkspace, that.main.workspacesOwnerId,\r\n                    (error: string) => {\r\n                        if (error == null) {\r\n                            successfulNetworkCommunicationCallback(m);\r\n                        } else {\r\n                            alert('Der Server ist nicht erreichbar!');\r\n\r\n                        }\r\n                    });\r\n\r\n            };\r\n\r\n        this.fileListPanel.renameCallback =\r\n            (module: Module, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                let file = module.file;\r\n\r\n                file.name = newName;\r\n                file.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.fileListPanel.deleteCallback =\r\n            (module: Module, callbackIfSuccessful: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.currentWorkspace.moduleStore.removeModule(module);\r\n                        callbackIfSuccessful();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.fileListPanel.contextMenuProvider = (accordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            if (!(that.main.user.is_teacher || that.main.user.is_admin || that.main.user.is_schooladmin)) {\r\n                let module: Module = <Module>accordionElement.externalElement;\r\n                let file = module.file;\r\n\r\n                // if (file.submitted_date == null) {\r\n                //     cmiList.push({\r\n                //         caption: \"Als Hausaufgabe markieren\",\r\n                //         callback: (element: AccordionElement) => {\r\n\r\n                //             let file = (<Module>element.externalElement).file;\r\n                //             file.submitted_date = dateToString(new Date());\r\n                //             file.saved = false;\r\n                //             that.main.networkManager.sendUpdates(null, true);\r\n                //             that.renderHomeworkButton(file);\r\n                //         }\r\n                //     });\r\n                // } else {\r\n                //     cmiList.push({\r\n                //         caption: \"Hausaufgabenmarkierung entfernen\",\r\n                //         callback: (element: AccordionElement) => {\r\n\r\n                //             let file = (<Module>element.externalElement).file;\r\n                //             file.submitted_date = null;\r\n                //             file.saved = false;\r\n                //             that.main.networkManager.sendUpdates(null, true);\r\n                //             that.renderHomeworkButton(file);\r\n\r\n                //         }\r\n                //     });\r\n                // }\r\n\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n\r\n\r\n        this.fileListPanel.selectCallback =\r\n            (module: Module) => {\r\n                that.setModuleActive(module);\r\n            }\r\n\r\n\r\n\r\n    }\r\n\r\n    renderHomeworkButton(file: File) {\r\n        let $buttonDiv = file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonHomework');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_homeworkButton').remove();\r\n\r\n        let klass: string = null;\r\n        let title: string = \"\";\r\n        if (file.submitted_date != null) {\r\n            klass = \"img_homework\";\r\n            title = \"Wurde als Hausaufgabe abgegeben: \" + file.submitted_date\r\n            if (file.text_before_revision) {\r\n                klass = \"img_homework-corrected\";\r\n                title = \"Korrektur liegt vor.\"\r\n            }\r\n        }\r\n\r\n        if (klass != null) {\r\n            let $homeworkButtonDiv = jQuery(`<div class=\"jo_homeworkButton ${klass}\" title=\"${title}\"></div>`);\r\n            $buttonDiv.prepend($homeworkButtonDiv);\r\n            if (klass.indexOf(\"jo_active\") >= 0) {\r\n                $homeworkButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n                $homeworkButtonDiv.on('click', (e) => {\r\n                    e.stopPropagation();\r\n                    // TODO\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initWorkspacelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.workspaceListPanel = new AccordionPanel(this.accordion, \"Datenbanken\", \"3\",\r\n            null, \"Neue Datenbank...\", \"workspace\", true, true, \"workspace\", false, [\"file\"]);\r\n\r\n        let $newWorkspaceAction = jQuery('<div class=\"img_add-database-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Neue Datenbank auf oberster Ordnerebene anlegen\">');\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $newWorkspaceAction.on(mousePointer + 'down', (e) => {\r\n            e.stopPropagation();\r\n\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            new NewDatabaseDialog(that.main, owner_id, this.workspaceListPanel.getCurrentlySelectedPath());\r\n\r\n        })\r\n\r\n        this.workspaceListPanel.addAction($newWorkspaceAction);\r\n        if(this.workspaceListPanel.$buttonNew != null){\r\n            this.workspaceListPanel.$buttonNew.hide();\r\n        }\r\n\r\n        this.workspaceListPanel.newDatabaseElementCallback = (path: string[]) => {\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            new NewDatabaseDialog(that.main, owner_id, path);\r\n\r\n        }\r\n\r\n\r\n        this.workspaceListPanel.renameCallback =\r\n            (workspace: Workspace, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                workspace.name = newName;\r\n                workspace.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.workspaceListPanel.deleteCallback =\r\n            (workspace: Workspace, successfulNetworkCommunicationCallback: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"workspace\", workspace.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.removeWorkspace(workspace);\r\n                        that.fileListPanel.enableNewButton(that.main.workspaceList.length > 0);\r\n                        that.fileListPanel.clear();\r\n                        that.main.databaseExplorer.clear();\r\n                        that.main.getResultsetPresenter().clear();\r\n                        successfulNetworkCommunicationCallback();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.workspaceListPanel.selectCallback =\r\n            (workspace: Workspace) => {\r\n                if(workspace.isFolder) return;\r\n                if (workspace != this.main.currentWorkspace) {\r\n                    that.main.networkManager.sendUpdates(() => {\r\n                        that.setWorkspaceActive(workspace);\r\n                    });\r\n                }\r\n            }\r\n\r\n        this.workspaceListPanel.newFolderCallback = (newElement: AccordionElement, successCallback) => {\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            let folder: Workspace = new Workspace(newElement.name, that.main, owner_id);\r\n            folder.isFolder = true;\r\n\r\n            folder.path = newElement.path.join(\"/\");\r\n            folder.panelElement = newElement;\r\n            newElement.externalElement = folder;\r\n            that.main.workspaceList.push(folder);\r\n\r\n            let wd: CreateWorkspaceData = {\r\n                id: -1,\r\n                isFolder: true,\r\n                name: folder.name,\r\n                path: folder.path\r\n            }\r\n\r\n            that.main.networkManager.sendCreateWorkspace(wd, that.main.workspacesOwnerId, (error: string) => {\r\n                if (error == null) {\r\n                    folder.id = wd.id;\r\n                    successCallback(folder);\r\n\r\n                } else {\r\n                    alert(\"Fehler: \" + error);\r\n                    that.workspaceListPanel.removeElement(newElement);\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        this.workspaceListPanel.moveCallback = (ae: AccordionElement | AccordionElement[]) => {\r\n            if (!Array.isArray(ae)) ae = [ae];\r\n            for (let a of ae) {\r\n                let ws: Workspace = a.externalElement;\r\n                ws.path = a.path.join(\"/\");\r\n                ws.saved = false;\r\n            }\r\n            this.main.networkManager.sendUpdates();\r\n        }\r\n\r\n        this.workspaceListPanel.dropElementCallback = (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => {\r\n            let workspace: Workspace = dest.externalElement;\r\n            let module: Module = droppedElement.externalElement;\r\n\r\n            if (workspace.moduleStore.getModules(false).indexOf(module) >= 0) return; // module is already in destination workspace\r\n\r\n            let f: File = {\r\n                name: module.file.name,\r\n                dirty: true,\r\n                saved: false,\r\n                text: module.file.text,\r\n                text_before_revision: null,\r\n                submitted_date: null,\r\n                student_edited_after_revision: false,\r\n                version: module.file.version,\r\n                panelElement: null\r\n            };\r\n\r\n            if (dropEffekt == \"move\") {\r\n                // move file\r\n                let oldWorkspace = that.main.currentWorkspace;\r\n                oldWorkspace.moduleStore.removeModule(module);\r\n                that.fileListPanel.removeElement(module);\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, () => { });\r\n            }\r\n\r\n            let m = new Module(f, that.main);\r\n            let modulStore = workspace.moduleStore;\r\n            modulStore.putModule(m);\r\n            that.main.networkManager.sendCreateFile(m, workspace, that.main.workspacesOwnerId,\r\n                (error: string) => {\r\n                    if (error == null) {\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n\r\n        }\r\n\r\n\r\n\r\n        this.$homeAction = jQuery('<div class=\"img_home-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Meine eigenen Workspaces anzeigen\">');\r\n\r\n        this.$homeAction.on(mousePointer +'down', (e) => {\r\n            e.stopPropagation();\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n                that.onHomeButtonClicked();\r\n            });\r\n\r\n            that.main.bottomDiv.hideHomeworkTab();\r\n\r\n        })\r\n\r\n        this.workspaceListPanel.addAction(this.$homeAction);\r\n        this.$homeAction.hide();\r\n\r\n        this.workspaceListPanel.contextMenuProvider = (workspaceAccordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            if (this.main.user.is_teacher && this.main.teacherExplorer.classPanel.elements.length > 0) {\r\n                cmiList.push({\r\n                    caption: \"An Klasse austeilen...\",\r\n                    callback: (element: AccordionElement) => { },\r\n                    subMenu: this.main.teacherExplorer.classPanel.elements.map((ae) => {\r\n                        return {\r\n                            caption: ae.name,\r\n                            callback: (element: AccordionElement) => {\r\n                                let klasse = <any>ae.externalElement;\r\n\r\n                                let workspace: Workspace = element.externalElement;\r\n\r\n                                this.main.networkManager.sendDistributeWorkspace(workspace, klasse, null, (error: string) => {\r\n                                    if (error == null) {\r\n                                        let networkManager = this.main.networkManager;\r\n                                        let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                                        alert(\"Der Workspace \" + workspace.name + \" wurde an die Klasse \" + klasse.name + \" ausgeteilt. Er wird in maximal \" +\r\n                                            dt + \" s bei jedem Schüler ankommen.\");\r\n                                    } else {\r\n                                        alert(error);\r\n                                    }\r\n                                });\r\n\r\n                            }\r\n                        }\r\n                    })\r\n                },\r\n                    {\r\n                        caption: \"An einzelne Schüler/innen austeilen...\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let classes: ClassData[] = this.main.teacherExplorer.classPanel.elements.map(ae => ae.externalElement);\r\n                            let workspace: Workspace = element.externalElement;\r\n                            new DistributeToStudentsDialog(classes, workspace, this.main);\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n    }\r\n\r\n    onHomeButtonClicked() {\r\n        this.main.teacherExplorer.restoreOwnWorkspaces();\r\n        this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.ownUpdateFrequencyInSeconds;\r\n        this.$homeAction.hide();\r\n        this.fileListPanel.enableNewButton(this.main.workspaceList.length > 0);\r\n    }\r\n\r\n    renderFiles(workspace: Workspace) {\r\n\r\n        let name = workspace == null ? \"Kein Workspace vorhanden\" : workspace.name;\r\n\r\n        this.fileListPanel.setCaption(name);\r\n        this.fileListPanel.clear();\r\n\r\n        if (this.main.getCurrentWorkspace() != null) {\r\n            for (let module of this.main.getCurrentWorkspace().moduleStore.getModules(false)) {\r\n                module.file.panelElement = null;\r\n            }\r\n        }\r\n\r\n        if (workspace != null) {\r\n            let moduleList: Module[] = [];\r\n\r\n            for (let m of workspace.moduleStore.getModules(false)) {\r\n                moduleList.push(m);\r\n            }\r\n\r\n            moduleList.sort((a, b) => { return a.file.name > b.file.name ? 1 : a.file.name < b.file.name ? -1 : 0 });\r\n\r\n            for (let m of moduleList) {\r\n\r\n                m.file.panelElement = {\r\n                    name: m.file.name,\r\n                    externalElement: m,\r\n                    isFolder: false,\r\n                    path: []\r\n                };\r\n\r\n                this.fileListPanel.addElement(m.file.panelElement, true);\r\n                this.renderHomeworkButton(m.file);\r\n            }\r\n\r\n            this.fileListPanel.sortElements();\r\n\r\n        }\r\n    }\r\n\r\n    renderWorkspaces(workspaceList: Workspace[]) {\r\n\r\n        this.fileListPanel.clear();\r\n        this.workspaceListPanel.clear();\r\n\r\n        for (let w of workspaceList) {\r\n            let path = w.path.split(\"/\");\r\n            if (path.length == 1 && path[0] == \"\") path = [];\r\n            w.panelElement = {\r\n                name: w.name,\r\n                externalElement: w,\r\n                iconClass: 'workspace',\r\n                isFolder: w.isFolder,\r\n                path: path\r\n            };\r\n\r\n            this.workspaceListPanel.addElement(w.panelElement, false);\r\n            w.renderSettingsButton(w.panelElement);\r\n        }\r\n\r\n        this.workspaceListPanel.sortElements();\r\n        this.fileListPanel.enableNewButton(workspaceList.length > 0);\r\n\r\n\r\n\r\n    }\r\n\r\n    renderErrorCount(workspace: Workspace, errorCountMap: Map<Module, number>) {\r\n        if (errorCountMap == null) return;\r\n        for (let m of workspace.moduleStore.getModules(false)) {\r\n            let errorCount: number = errorCountMap.get(m);\r\n            let errorCountS: string = ((errorCount == null || errorCount == 0) ? \"\" : \"(\" + errorCount + \")\");\r\n\r\n            this.fileListPanel.setTextAfterFilename(m.file.panelElement, errorCountS, 'jo_errorcount');\r\n        }\r\n    }\r\n\r\n    setWorkspaceActive(w: Workspace) {\r\n\r\n        if (w != null) {\r\n            this.fileListPanel.$buttonNew.show();\r\n        }\r\n\r\n        this.workspaceListPanel.select(w, false);\r\n\r\n        let callback = (error: string) => {this.initializeDatabaseTool(error, w)};\r\n\r\n        if (w.database == null) {\r\n            this.main.waitOverlay.show(\"Bitte warten, hole Datenbank vom Server ...\");\r\n\r\n            this.main.networkManager.fetchDatabase(w, callback);\r\n        } else {\r\n            callback(null);\r\n        }\r\n\r\n    }\r\n\r\n    initializeDatabaseTool(error: string, w: Workspace) {\r\n        if (error != null) {\r\n            alert(error);\r\n            return;\r\n        }\r\n\r\n        let dbTool = this.main.getDatabaseTool();\r\n\r\n        let statements: string[] = w.database.statements;\r\n        if (statements == null) statements = [];\r\n\r\n        dbTool.initializeWorker(w.database.templateDump, statements,\r\n            () => {\r\n                this.main.currentWorkspace = w;\r\n\r\n                if (this.main.user.id == w.owner_id) {\r\n                    this.main.user.currentWorkspace_id = w.id;\r\n                }\r\n\r\n                this.renderFiles(w);\r\n\r\n                if (w != null) {\r\n                    let nonSystemModules = w.moduleStore.getModules(false);\r\n\r\n                    if (w.currentlyOpenModule != null) {\r\n                        this.setModuleActive(w.currentlyOpenModule);\r\n                    } else if (nonSystemModules.length > 0) {\r\n                        this.setModuleActive(nonSystemModules[0]);\r\n                    } else {\r\n                        this.setModuleActive(null);\r\n                    }\r\n\r\n                    for (let m of nonSystemModules) {\r\n                        m.file.dirty = true;\r\n                    }\r\n\r\n                    if (nonSystemModules.length == 0) {\r\n\r\n                        Helper.showHelper(\"newSQLFileHelper\", this.main, this.fileListPanel.$captionElement);\r\n\r\n                    }\r\n\r\n                    this.main.notifier.connect(w);\r\n\r\n                } else {\r\n                    this.setModuleActive(null);\r\n                }\r\n\r\n            },\r\n            () => {\r\n                this.main.databaseExplorer.refreshAfterRetrievingDBStructure();\r\n                this.main.getHistoryViewer().clearAndShowStatements(w.database.statements);\r\n            });\r\n\r\n    }\r\n\r\n    writeEditorTextToFile() {\r\n        let cem = this.getCurrentlyEditedModule();\r\n        if (cem != null)\r\n            cem.file.text = cem.getProgramTextFromMonacoModel(); // 29.03. this.main.monaco.getValue();\r\n    }\r\n\r\n\r\n    lastOpenModule: Module = null;\r\n    setModuleActive(m: Module) {\r\n\r\n        this.main.bottomDiv.homeworkManager.hideRevision();\r\n\r\n        if (this.lastOpenModule != null) {\r\n            this.lastOpenModule.file.text = this.lastOpenModule.getProgramTextFromMonacoModel(); // this.main.monaco.getValue();\r\n            this.lastOpenModule.editorState = this.main.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (m == null) {\r\n            this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n        } else {\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.main.getMonacoEditor().setModel(m.model);\r\n            if (this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(m.bracketError);\r\n\r\n            if (m.file.text_before_revision != null) {\r\n                this.main.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n            } else {\r\n                this.main.bottomDiv.homeworkManager.hideHomeworkRevisionButton();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setActiveAfterExternalModelSet(m: Module) {\r\n        this.fileListPanel.select(m, false);\r\n\r\n        this.lastOpenModule = m;\r\n\r\n        if (m.editorState != null) {\r\n            this.main.editor.dontPushNextCursorMove++;\r\n            this.main.getMonacoEditor().restoreViewState(m.editorState);\r\n            this.main.editor.dontPushNextCursorMove--;\r\n        }\r\n\r\n        this.setCurrentlyEditedModule(m);\r\n\r\n        this.showProgramPointer();\r\n\r\n        setTimeout(() => {\r\n            if (!this.main.getMonacoEditor().getOptions().get(monaco.editor.EditorOption.readOnly)) {\r\n                this.main.getMonacoEditor().focus();\r\n            }\r\n        }, 300);\r\n\r\n    }\r\n\r\n\r\n    private showProgramPointer() {\r\n\r\n        if (this.programPointerModule == this.getCurrentlyEditedModule() && this.getCurrentlyEditedModule() != null) {\r\n            let position = this.programPointerPosition;\r\n            let range = {\r\n                startColumn: position.column, startLineNumber: position.line,\r\n                endColumn: position.column + position.length, endLineNumber: position.line\r\n            };\r\n\r\n            this.main.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n            this.programPointerDecoration = this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n                {\r\n                    range: range,\r\n                    options: {\r\n                        className: 'jo_revealProgramPointer', isWholeLine: true,\r\n                        overviewRuler: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.OverviewRulerLane.Center\r\n                        },\r\n                        minimap: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    range: range,\r\n                    options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n                }\r\n            ]);\r\n\r\n        }\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        // console statement execution:\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        let module = this.main.currentWorkspace.moduleStore.findModuleByFile(file);\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        this.programPointerModule = module;\r\n        this.programPointerPosition = position;\r\n\r\n        if (module != this.getCurrentlyEditedModule()) {\r\n            this.setModuleActive(module);\r\n        } else {\r\n            this.showProgramPointer();\r\n        }\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws == null) return null;\r\n\r\n        return ws.currentlyOpenModule;\r\n    }\r\n\r\n    setCurrentlyEditedModule(m: Module) {\r\n        if (m == null) return;\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws.currentlyOpenModule != m) {\r\n            ws.currentlyOpenModule = m;\r\n            ws.saved = false;\r\n            m.file.dirty = true;\r\n        }\r\n    }\r\n\r\n    setExplorerColor(color: string) {\r\n        let caption: string;\r\n\r\n        if (color == null) {\r\n            color = \"transparent\";\r\n            caption = \"Meine Datenbanken\";\r\n        } else {\r\n            caption = \"Schüler-DB\";\r\n        }\r\n\r\n        this.fileListPanel.$listElement.parent().css('background-color', color);\r\n        this.workspaceListPanel.$listElement.parent().css('background-color', color);\r\n\r\n        this.workspaceListPanel.setCaption(caption);\r\n    }\r\n\r\n    getNewModule(file: File): Module {\r\n        return new Module(file, this.main);\r\n    }\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class RightDiv {\r\n\r\n    isWholePage: boolean = false;\r\n\r\n    $tabs: JQuery<HTMLElement>;\r\n    $headings: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $rightDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$tabs = $rightDiv.find('.jo_tabs');\r\n        this.$headings = $rightDiv.find('.jo_tabheadings');\r\n        \r\n        let withClassDiagram = this.$headings.find('.jo_classDiagramTabHeading').length > 0;\r\n        let withObjectDiagram = this.$headings.find('.jo_objectDiagramTabHeading').length > 0;\r\n\r\n        let that = this;\r\n        let rightdiv_width: string = \"100%\";\r\n        $rightDiv.find('.jo_whole-window').on(\"click\", () => {\r\n\r\n            that.isWholePage = !that.isWholePage;\r\n            \r\n            let $wholeWindow = jQuery('.jo_whole-window');\r\n\r\n            if (!that.isWholePage) {\r\n                jQuery('#code').css('display', 'flex');\r\n                jQuery('#rightdiv').css('width', rightdiv_width);\r\n                // jQuery('#run').css('width', '');\r\n                $wholeWindow.removeClass('img_whole-window-back');\r\n                $wholeWindow.addClass('img_whole-window');\r\n                jQuery('#controls').insertAfter(jQuery('#view-mode'));\r\n                $wholeWindow.attr('title', 'Auf Fenstergröße vergrößern');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            } else {\r\n                jQuery('#code').css('display', 'none');\r\n                rightdiv_width = jQuery('#rightdiv').css('width');\r\n                jQuery('#rightdiv').css('width', '100%');\r\n                $wholeWindow.removeClass('img_whole-window');\r\n                $wholeWindow.addClass('img_whole-window-back');\r\n                // that.adjustWidthToWorld();\r\n                jQuery('.jo_control-container').append(jQuery('#controls'));\r\n                $wholeWindow.attr('title', 'Auf normale Größe zurückführen');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$rightDiv);\r\n    }\r\n\r\n\r\n\r\n}","import { jo_mouseDetected } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\nexport class Sliders {\r\n\r\n    main: Main;\r\n\r\n    constructor(main: Main) {\r\n        this.main = main;\r\n    }\r\n\r\n    initSliders() {\r\n        let that = this;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        jQuery('#slider1').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider1\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                \r\n                that.moveLeftPanel(dx);\r\n\r\n                x = mm.clientX;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider1\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider1\");\r\n                jQuery(document).off(mousePointer + \"up.slider1\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider2').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider2\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n\r\n                that.moveBottomDiv(dy);\r\n\r\n                y = mm.clientY;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider2\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider2\");\r\n                jQuery(document).off(mousePointer + \"up.slider2\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider3').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider3\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n\r\n                that.moveRightDiv(dx);\r\n\r\n                x = mm.clientX;\r\n                mm.stopPropagation();\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider3\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider3\");\r\n                jQuery(document).off(mousePointer + \"up.slider3\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        let sliderknobLeft = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"left: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobLeft);\r\n        sliderknobLeft.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopImmediatePropagation();\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobleft\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopImmediatePropagation();\r\n\r\n                that.moveLeftPanel(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobleft\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobleft\");\r\n                jQuery(document).off(mousePointer + \"up.knobleft\");\r\n            });\r\n\r\n        });\r\n\r\n        let sliderknobRight = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"right: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobRight);\r\n        sliderknobRight.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopImmediatePropagation();\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobright\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopImmediatePropagation();\r\n\r\n                that.moveRightDiv(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobright\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobright\");\r\n                jQuery(document).off(mousePointer + \"up.knobright\");\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n    \r\n    moveRightDiv(dx: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $rightDiv = jQuery('#rightdiv');\r\n\r\n        let width = Number.parseInt($rightDiv.css('width').replace('px', ''));\r\n        $rightDiv.css('width', (width - dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth + dx) + \"px\");\r\n        \r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n        jQuery('.jo_graphics').trigger('sizeChanged');\r\n        width += dx;\r\n}\r\n    moveBottomDiv(dy: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $bottomDiv = jQuery('#bottomdiv-outer');\r\n\r\n        let height = Number.parseInt($bottomDiv.css('height').replace('px', ''));\r\n        $bottomDiv.css('height', (height - dy) + \"px\");\r\n\r\n        let meheight = Number.parseInt($editor.css('height').replace('px', ''));\r\n        $editor.css('height', (meheight + dy) + \"px\");\r\n\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n}\r\n\r\n    moveLeftPanel(dx: number) {\r\n        let $leftPanel = jQuery('#leftpanel');\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n\r\n        let width = Number.parseInt($leftPanel.css('width').replace('px', ''));\r\n        $leftPanel.css('width', (width + dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth - dx) + \"px\");\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionPanel, AccordionElement } from \"./Accordion.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassData, UserData, CRUDUserRequest, CRUDClassRequest, GetWorkspacesResponse, GetWorkspacesRequest, Workspaces } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\nexport class TeacherExplorer {\r\n\r\n    studentPanel: AccordionPanel;\r\n    classPanel: AccordionPanel;\r\n\r\n    // save them here when displaying pupils workspaces:\r\n    ownWorkspaces: Workspace[];\r\n    currentOwnWorkspace: Workspace;\r\n\r\n    constructor(private main: Main, private classData: ClassData[]) {\r\n\r\n    }\r\n\r\n    removePanels() {\r\n        this.classPanel.remove();\r\n        this.studentPanel.remove();\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.initStudentPanel();\r\n\r\n        this.initClassPanel();\r\n\r\n        this.renderClasses(this.classData);\r\n\r\n    }\r\n\r\n    initStudentPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.studentPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Schüler/innen\", \"2\", null,\r\n            \"\", \"student\", false, false, \"student\", false, []);\r\n\r\n        this.studentPanel.selectCallback = (ae: UserData) => {\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let request: GetWorkspacesRequest = {\r\n                    ws_userId: ae.id,\r\n                    userId: this.main.user.id,\r\n                    language: 1\r\n                }\r\n\r\n                ajax(\"getWorkspaces\", request, (response: GetWorkspacesResponse) => {\r\n                    if (response.success == true) {\r\n\r\n                        if (that.main.workspacesOwnerId == that.main.user.id) {\r\n                            that.ownWorkspaces = that.main.workspaceList.slice();\r\n                            that.currentOwnWorkspace = that.main.currentWorkspace;\r\n                        }\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces);\r\n                        that.main.workspacesOwnerId = ae.id;\r\n                        that.main.projectExplorer.setExplorerColor(\"rgba(255, 0, 0, 0.2\");\r\n                        that.main.projectExplorer.$homeAction.show();\r\n                        Helper.showHelper(\"homeButtonHelper\", this.main);\r\n\r\n                        that.main.bottomDiv.showHomeworkTab();\r\n                        that.main.bottomDiv.homeworkManager.attachToWorkspaces(that.main.workspaceList);\r\n                    }\r\n\r\n                    this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n                    this.main.networkManager.secondsTillNextUpdate = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    restoreOwnWorkspaces() {\r\n        let main = this.main;\r\n\r\n        // main.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n        main.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        main.workspaceList = this.ownWorkspaces;\r\n        main.currentWorkspace = this.currentOwnWorkspace;\r\n        main.workspacesOwnerId = main.user.id;\r\n        main.projectExplorer.setExplorerColor(null);\r\n\r\n        main.projectExplorer.renderWorkspaces(main.workspaceList);\r\n\r\n        if (main.currentWorkspace == null && main.workspaceList.length > 0) {\r\n            main.currentWorkspace = main.workspaceList[0];\r\n        }\r\n\r\n        if (main.currentWorkspace != null) {\r\n            main.projectExplorer.setWorkspaceActive(main.currentWorkspace);\r\n        }\r\n\r\n        this.studentPanel.select(null, false);\r\n\r\n    }\r\n\r\n    initClassPanel() {\r\n        let that = this;\r\n\r\n        this.classPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Klassen\", \"1\", null, \"\", \"class\", false, false, \"class\", false, []);\r\n\r\n        this.classPanel.selectCallback = (ea) => {\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let classData = <ClassData>ea;\r\n                if (classData != null) {\r\n                    this.renderStudents(classData.students);\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    renderStudents(userDataList: UserData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        userDataList.sort((a, b) => {\r\n            if (a.familienname > b.familienname) return 1;\r\n            if (b.familienname > a.familienname) return -1;\r\n            if (a.rufname > b.rufname) return 1;\r\n            if (b.rufname > a.rufname) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let ud of userDataList) {\r\n            let ae: AccordionElement = {\r\n                name: ud.familienname + \", \" + ud.rufname,\r\n                sortName: ud.familienname + \" \" + ud.rufname,\r\n                externalElement: ud,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.studentPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n    renderClasses(classDataList: ClassData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        classDataList.sort((a, b) => {\r\n            if (a.name > b.name) return 1;\r\n            if (b.name > a.name) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let cd of classDataList) {\r\n            let ae: AccordionElement = {\r\n                name: cd.name,\r\n                externalElement: cd,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.classPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\n\r\nexport type Theme = {\r\n    name: string,\r\n    monacoTheme: string,\r\n    cssColors: { [color: string]: string }\r\n}\r\n\r\nexport class ThemeManager {\r\n\r\n    themes: Theme[] = [];\r\n\r\n    constructor() {\r\n        this.initThemes();\r\n    }\r\n\r\n    switchTheme(name: string) {\r\n        for (let theme of this.themes) {\r\n            if (theme.name == name) {\r\n                this.internalSwitchTheme(theme);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    internalSwitchTheme(theme: Theme) {\r\n        monaco.editor.setTheme(theme.monacoTheme);\r\n\r\n        let root = document.documentElement;\r\n        for (const key of Object.keys(theme.cssColors)) {\r\n            const value = theme.cssColors[key]\r\n\r\n            root.style.setProperty(key, value);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    initThemes() {\r\n\r\n        this.themes.push({\r\n            name: \"dark\",\r\n            monacoTheme: \"myCustomThemeDark\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"#1e1e1e\",\r\n                \"--backgroundLight\": \"#252526\",\r\n                \"--backgroundHeading\": \"#37373d\",\r\n                \"--backgroundSelected\": \"#2a2d2e\",\r\n                \"--fontColorNormal\": \"#c2cccc\",\r\n                \"--fontColorLight\": \"#e7e7e7\",\r\n                \"--slider\": \"#414141\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#1e1e1e\",\r\n                \"--scrollbar-thumb\": \"#3e3e3e\",\r\n                \"--scrollbar-thumb-hover\": \"#5e5e5e\",\r\n                \"--scrollbar-thumb-active\": \"#7e7e7e\",\r\n                \"--submenu-hover\": \"#094771\",\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#616162\",\r\n                \"--file-hover\": \"hsla(0, 0%, 38%, 0.125)\",\r\n                \"--file-active\": \"#094771\",\r\n                \"--file-active-hover\": \"rgba(9, 71, 113, 0.827)\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"blue\",\r\n                \"--contextmenu-background\": \"#3c3c3c\",\r\n                \"--contextmenu-color\": \"rgb(212,212,212)\",\r\n                \"--contextmenu-hover-background\": \"#094771\",\r\n                \"--contextmenu-hover-color\": \"#ffffff\",\r\n                \"--error-filename\": \"#2a709e\",\r\n                \"--error-line-ative\": \"#094771\",\r\n                \"--error-line-hover\": \"rgba(96, 96, 96, 0.125)\",\r\n                \"--error-position\": \"#c0802d\",\r\n                \"--linecolumn\": \"#14c714\",\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#2b2b7d2f\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"rgb(85,85,85)\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#383838\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#252526\",\r\n                \"--editorTooltip-border\": \"#454545\",\r\n\r\n                \"--renameInput-color\": \"#ffffff\",\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"white\",\r\n                \"--bottomdiv-tabheading-active\": \"rgb(97,97,255)\",\r\n                \"--noErrorMessage\": \"rgb(37, 211, 37)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"#1e1e1e\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"white\",\r\n                \"--consoleEntryIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"white\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 51, 51)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--deValue\": \"white\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#383838\",\r\n                \"--helper-border-color\": \"#d4d4d4\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#ffffff\",\r\n                \"--runInputColor\": \"#ffffff\",\r\n                \"--runBackgroundColor\": \"rgba(255, 255, 255, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n        let highlightColor = \"#8080ff\";\r\n\r\n        this.themes.push({\r\n            name: \"light\",\r\n            monacoTheme: \"myCustomThemeLight\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"white\",\r\n                \"--backgroundLight\": \"#f3f3f3\",\r\n                \"--backgroundHeading\": \"#dcdcdc\",\r\n                \"--backgroundSelected\": \"#e8e8e8\",\r\n                \"--fontColorNormal\": \"#756161\",\r\n                \"--fontColorLight\": \"#756161\",\r\n                \"--slider\": \"#b0b0b0\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#e3e3e3\",\r\n                \"--scrollbar-thumb\": \"#bababa\",\r\n                \"--scrollbar-thumb-hover\": \"#8e8e8e\",\r\n                \"--scrollbar-thumb-active\": \"#616161\",\r\n                \"--submenu-hover\": highlightColor,\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#cfcfcf\",\r\n                \"--file-hover\": \"#e8e8e8\",\r\n                \"--file-active\": highlightColor,\r\n                \"--file-active-hover\": \"#a0a0ff\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"white\",\r\n                \"--contextmenu-background\": \"white\",\r\n                \"--contextmenu-color\": \"#756161\",\r\n                \"--contextmenu-hover-background\": highlightColor,\r\n                \"--contextmenu-hover-color\": \"#a0a0ff\",\r\n                \"--error-filename\": \"#ff0000\",\r\n                \"--error-line-ative\": \"#ffa0a0\",\r\n                \"--error-line-hover\": \"#ffc0c0\",\r\n                \"--error-position\": \"#804040\",\r\n                \"--linecolumn\": \"#14c714\", // TODO\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#babaec80\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"#c0c0c0\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#e0e0e0\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#e0e0e0\",\r\n                \"--editorTooltip-border\": \"#9d9d9d\",\r\n\r\n                \"--renameInput-color\": \"#000000\",\r\n\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"#424242\",\r\n                \"--bottomdiv-tabheading-active\": \"#424242\",\r\n                \"--noErrorMessage\": \"rgb(17, 180, 17)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"white\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"#0000a0\",\r\n                \"--consoleEntryIdentifier\": \"black\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"#756161\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 21, 21)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"black\",\r\n                \"--deValue\": \"#0000a0\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#f3f3f3\",\r\n                \"--helper-border-color\": \"#606060\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#303030\",\r\n                \"--runInputColor\": \"#000000\",\r\n                \"--runBackgroundColor\": \"rgba(0, 0, 0, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { openContextMenu, ContextMenuItem } from \"../../tools/HtmlTools.js\";\r\nimport { Dialog } from \"./Dialog.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\n\r\nexport class UserMenu {\r\n\r\n\r\n\r\n    constructor(private main: Main){\r\n        \r\n    }\r\n\r\n    init(){\r\n        let $userSettingsButton = jQuery('#buttonUserSettings');\r\n        let that = this;\r\n\r\n        // $userSettingsButton.on(\"click\", (e) => {\r\n\r\n        //     let contextMenuItems: ContextMenuItem[] = [\r\n        //         {\r\n        //             caption: \"Passwort ändern...\",\r\n        //             callback: () => {\r\n        //                 let passwortChanger = new PasswordChanger(that.main);\r\n        //                 passwortChanger.show();\r\n        //             }\r\n        //         }\r\n        //     ]\r\n\r\n\r\n        //     openContextMenu(contextMenuItems, $userSettingsButton.offset().left, $userSettingsButton.offset().top + $userSettingsButton.height());\r\n\r\n        // });\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class PasswordChanger {\r\n\r\n    dialog: Dialog;\r\n\r\n    constructor(private main: Main){\r\n\r\n        this.dialog = new Dialog();\r\n\r\n    }\r\n\r\n    show() {\r\n        this.dialog.init();\r\n        this.dialog.heading(\"Passwort ändern\");\r\n        this.dialog.description(\"Bitte geben Sie Ihr bisheriges Passwort und darunter zweimal Ihr neues Passwort ein. <br>\" + \r\n        \"Das Passwort muss mindestens 8 Zeichen lang sein und sowohl Buchstaben als auch Zahlen oder Sonderzeichen enthalten.\")\r\n        let $oldPassword = this.dialog.input(\"password\", \"Altes Passwort\");\r\n        let $newPassword1 = this.dialog.input(\"password\", \"Neues Passwort\");\r\n        let $newPassword2 = this.dialog.input(\"password\", \"Neues Passwort wiederholen\");\r\n        let $errorDiv = this.dialog.description(\"\", \"red\");\r\n        let waitDiv = this.dialog.waitMessage(\"Bitte warten...\")\r\n\r\n        this.dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {this.dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    if($newPassword1.val() != $newPassword2.val()){\r\n                        $errorDiv.text(\"Die zwei eingegebenen neuen Passwörter stimmen nicht überein.\")\r\n                    } else {\r\n                        waitDiv(true);\r\n                        ajax(\"changePassword\", {oldPassword: $oldPassword.val(), newPassword: $newPassword1.val()}, () => {\r\n                            waitDiv(false);\r\n                            alert(\"Das Passwort wurde erfolgreich geändert.\");\r\n                            this.dialog.close();\r\n                        }, (message) => {\r\n                            waitDiv(false);\r\n                            $errorDiv.text(message)\r\n                        })\r\n                    }\r\n\r\n                }\r\n            },\r\n        ])\r\n    }\r\n\r\n}","import { ajax } from \"../communication/AjaxHelper.js\";\r\nimport { LoginRequest, LoginResponse, LogoutRequest, UserData } from \"../communication/Data.js\";\r\nimport { Main } from \"./Main.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { userInfo } from \"os\";\r\nimport { UserMenu } from \"./gui/UserMenu.js\";\r\nimport { escapeHtml } from \"../tools/StringTools.js\";\r\n\r\nexport class Login {\r\n\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        let that = this;\r\n\r\n        let $loginSpinner = jQuery('#login-spinner>img');\r\n\r\n        jQuery('#login-username').focus();\r\n\r\n        jQuery('#login-username').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-password').focus();\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-button').focus();\r\n                jQuery('#login-button').addClass('jo_active');\r\n            }\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-button').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-username').focus();\r\n                jQuery('#login-button').removeClass('jo_active');\r\n            } else {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        // Avoid double login when user does doubleclick:\r\n        let loginHappened = false;\r\n        jQuery('#login-button').on('click', () => {\r\n\r\n            $loginSpinner.show();\r\n\r\n            if (loginHappened) return;\r\n            loginHappened = true;\r\n\r\n            setTimeout(() => {\r\n                loginHappened = false;\r\n            }, 1000);\r\n\r\n            let loginRequest: LoginRequest = {\r\n                username: <string>jQuery('#login-username').val(),\r\n                password: <string>jQuery('#login-password').val(),\r\n                language: 1\r\n            }\r\n\r\n            ajax('login', loginRequest, (response: LoginResponse) => {\r\n\r\n                if (!response.success) {\r\n                    jQuery('#login-message').html('Fehler: Benutzername und/oder Passwort ist falsch.');\r\n                } else {\r\n\r\n                    // We don't do this anymore for security reasons - see AjaxHelper.ts\r\n                    // Alternatively we now set a long expiry interval for cookie.\r\n                    // credentials.username = loginRequest.username;\r\n                    // credentials.password = loginRequest.password;\r\n\r\n                    jQuery('#login').hide();\r\n\r\n                    this.main.waitOverlay.show('Bitte warten...');\r\n\r\n                    let user: UserData = response.user;\r\n                    if (user.settings == null || user.settings.helperHistory == null) {\r\n                        user.settings = {\r\n                            helperHistory: {\r\n                            },\r\n                            viewModes: null,\r\n                            classDiagram: null\r\n                        }\r\n                    }\r\n\r\n                    this.main.waitForGUICallback = () => {\r\n\r\n                        that.main.mainMenu.initGUI(user);\r\n\r\n                        that.main.waitOverlay.hide();\r\n                        $loginSpinner.hide();\r\n                        jQuery('#menupanel-username').html(escapeHtml(user.rufname) + \" \" + escapeHtml(user.familienname));\r\n\r\n                        new UserMenu(that.main).init();\r\n\r\n                        if (user.is_teacher) {\r\n                            that.main.initTeacherExplorer(response.classdata);\r\n                        }\r\n\r\n                        that.main.user = user;\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces);\r\n                        that.main.workspacesOwnerId = user.id;\r\n\r\n                        that.main.networkManager.initializeTimer();\r\n\r\n                        that.main.projectExplorer.fileListPanel.setFixed(!user.is_teacher);\r\n                        that.main.projectExplorer.workspaceListPanel.setFixed(!user.is_teacher);\r\n\r\n                        that.main.viewModeController.initViewMode();\r\n                        that.main.bottomDiv.hideHomeworkTab();\r\n\r\n                        that.main.networkManager.initializeNotifierClient();\r\n\r\n                    }\r\n\r\n                    if (this.main.startupComplete == 0) {\r\n                        this.main.waitForGUICallback();\r\n                        this.main.waitForGUICallback = null;\r\n                    }\r\n\r\n                }\r\n\r\n            }, (errorMessage: string) => {\r\n                jQuery('#login-message').html('Login gescheitert: ' + errorMessage);\r\n                jQuery('#login-spinner>img').hide();\r\n            }\r\n            );\r\n\r\n        });\r\n\r\n        jQuery('#buttonLogout').on('click', () => {\r\n\r\n            this.main.waitOverlay.show('Bitte warten, der letzte Bearbeitungsstand wird noch gespeichert ...');\r\n\r\n            if (this.main.workspacesOwnerId != this.main.user.id) {\r\n                this.main.projectExplorer.onHomeButtonClicked();\r\n            }\r\n\r\n            this.main.networkManager.sendUpdates(() => {\r\n\r\n                let logoutRequest: LogoutRequest = {\r\n                    currentWorkspaceId: this.main.currentWorkspace?.id\r\n                }\r\n\r\n                ajax('logout', logoutRequest, () => {\r\n                    // window.location.href = 'index.html';\r\n                    this.main.networkManager.sendUpdateUserSettings(() => {});\r\n\r\n                    jQuery('#login').show();\r\n                    this.main.waitOverlay.hide();\r\n                    jQuery('#login-message').empty();\r\n                    this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"\", \"myJava\"));\r\n                    this.main.projectExplorer.fileListPanel.clear();\r\n                    this.main.projectExplorer.workspaceListPanel.clear();\r\n\r\n                    this.main.databaseExplorer.clear();\r\n                    this.main.resultsetPresenter.clear();\r\n\r\n                    if (this.main.user.is_teacher) {\r\n                        this.main.teacherExplorer.removePanels();\r\n                        this.main.teacherExplorer = null;\r\n                    }\r\n\r\n\r\n                    this.main.currentWorkspace = null;\r\n                    this.main.user = null;\r\n\r\n\r\n                });\r\n            }, true);\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\nimport { ViewModes, ViewMode } from \"../../communication/Data\";\r\n\r\nexport class ViewModeController {\r\n\r\n    $buttonEditorFullscreen: JQuery<HTMLElement>;\r\n    $buttonPresentationMode: JQuery<HTMLElement>;\r\n    $buttonMonitorMode: JQuery<HTMLElement>;\r\n\r\n    $buttonMap: { [key: string]: JQuery<HTMLElement> } = {};\r\n\r\n    highContrast: boolean = false;\r\n    editorHasFullWidth: boolean = false;\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private main: Main) {\r\n\r\n        this.$buttonEditorFullscreen = jQuery('<div title=\"Editor in voller Breite\" class=\"img_whole-window jo_button jo_active\" style=\"padding: 1px; margin-right: 20px\"></div>');\r\n        this.$buttonPresentationMode = jQuery('<div title=\"Präsentation (Beamer)\" class=\"img_presentation-mode jo_button jo_active\" syle=\"padding: 1px\"></div>');\r\n        this.$buttonMonitorMode = jQuery('<div title=\"Monitor\" class=\"img_monitor-mode jo_button jo_active\" style=\"margin-left: 5px; padding: 1px\"></div>');\r\n        $buttonsContainer.append(this.$buttonEditorFullscreen, this.$buttonPresentationMode, this.$buttonMonitorMode);\r\n\r\n        this.$buttonMap = {\r\n            \"presentation\": this.$buttonPresentationMode,\r\n            \"monitor\": this.$buttonMonitorMode\r\n        };\r\n\r\n        let am = this.main.actionManager;\r\n\r\n        am.registerAction(\"editor.fullwidth\", [],\r\n            () => {\r\n                this.toggleEditorFullwidth();\r\n            }, \"Editor auf die volle Breite erweitern\", this.$buttonEditorFullscreen);\r\n\r\n        am.registerAction(\"viewmode.presentation\", [],\r\n            () => {\r\n                this.setMode(\"presentation\");\r\n            }, \"Präsentationsansicht\", this.$buttonPresentationMode);\r\n\r\n        am.registerAction(\"viewmode.monitor\", [],\r\n            () => {\r\n                this.setMode(\"monitor\");\r\n            }, \"Monitoransicht\", this.$buttonMonitorMode);\r\n\r\n    }\r\n\r\n    toggleEditorFullwidth() {\r\n        if(this.editorHasFullWidth){\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in voller Breite');\r\n            jQuery('#rightdiv').show(600);\r\n            jQuery('#leftpanel').show(600);\r\n            jQuery('#controls').show();\r\n        } else {\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in normaler Breite');\r\n            jQuery('#rightdiv').hide(600);\r\n            jQuery('#leftpanel').hide(600);\r\n            jQuery('#controls').hide();\r\n        }\r\n\r\n        setTimeout(()=>{\r\n            this.main.getMonacoEditor().layout();\r\n        }, 800);\r\n\r\n        this.editorHasFullWidth = !this.editorHasFullWidth;\r\n    }\r\n\r\n    setMode(mode: \"presentation\" | \"monitor\", saveSettings: boolean = true) {\r\n\r\n        let otherMode = mode == \"presentation\" ? \"monitor\" : \"presentation\";\r\n\r\n        this.$buttonMap[mode].addClass(\"jo_pressed\");\r\n        this.$buttonMap[otherMode].removeClass(\"jo_pressed\");\r\n\r\n        let settings = this.main.user.settings;\r\n        let viewModes = settings.viewModes;\r\n\r\n        let viewMode = viewModes[mode];\r\n        viewModes.viewModeChosen = mode;\r\n\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n\r\n        this.main.editor.setFontSize(viewMode.fontSize);\r\n\r\n        if (this.highContrast != viewMode.highContrast) {\r\n            let editor = this.main.getMonacoEditor();\r\n            editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n            this.highContrast = !this.highContrast;\r\n        }\r\n\r\n        if (saveSettings) this.saveSettings();\r\n\r\n    }\r\n\r\n    saveFontSize(fontSizePx: number) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.fontSize = fontSizePx;\r\n        this.saveSettings();\r\n    }\r\n\r\n    setTheme(theme: string) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.theme = theme;\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n        this.saveSettings();\r\n    }\r\n\r\n    toggleHighContrast() {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.highContrast = !viewMode.highContrast;\r\n        let editor = this.main.getMonacoEditor();\r\n        editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n        this.saveSettings();\r\n    }\r\n\r\n    getChosenViewMode(): ViewMode {\r\n        let viewModes = this.main.user.settings.viewModes;\r\n        return viewModes[viewModes.viewModeChosen];\r\n    }\r\n\r\n    saveSettings() {\r\n        this.main.userDataDirty = true;\r\n    }\r\n\r\n    initViewMode() {\r\n        let settings = this.main.user.settings;\r\n\r\n        if (settings[\"viewModes\"] == null) {\r\n            settings[\"viewModes\"] = {\r\n                monitor: null,\r\n                presentation: null,\r\n                viewModeChosen: \"monitor\"\r\n            }\r\n        }\r\n\r\n        if (settings.viewModes.monitor == null) {\r\n            settings.viewModes.monitor = {\r\n                fontSize: 14,\r\n                highContrast: false,\r\n                theme: \"dark\"\r\n            };\r\n\r\n            settings.viewModes.presentation = {\r\n                fontSize: 18,\r\n                highContrast: false,\r\n                theme: \"light\"\r\n            }\r\n            this.saveSettings();\r\n        }\r\n        this.setMode(settings.viewModes.viewModeChosen, false);\r\n    }\r\n\r\n\r\n}","import { Main } from \"../../main/Main.js\";\r\nimport { TextPosition } from \"../lexer/Token\";\r\nimport { Module } from \"./Module\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype SemicolonPosition = {\r\n    position: TextPosition;\r\n    module: Module;\r\n    firstSeenMs: number;\r\n    isThereAgain: boolean;\r\n}\r\n\r\nexport class SemicolonAngel {\r\n    \r\n    semicolonPositions: SemicolonPosition[] = [];\r\n    time: number;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    startRegistering(){\r\n        this.semicolonPositions.forEach(p => p.isThereAgain = false);\r\n        this.time = new Date().getTime();\r\n    }\r\n\r\n    register(position: TextPosition, module: Module){\r\n        let oldEvidence = this.semicolonPositions.find(p => p.position.line == position.line && p.position.column == position.column);\r\n        if(oldEvidence){\r\n            oldEvidence.isThereAgain = true;\r\n        } else {\r\n            this.semicolonPositions.push({position: position, firstSeenMs: this.time, isThereAgain: true, module: module});\r\n        }\r\n    }\r\n\r\n    healSemicolons(){\r\n        let time = new Date().getTime();\r\n        this.semicolonPositions = this.semicolonPositions.filter(p => p.isThereAgain);\r\n\r\n        let currentlyEditedModule = this.main.getCurrentlyEditedModule();\r\n        let cursorLine = this.main.getMonacoEditor().getPosition().lineNumber;\r\n\r\n        this.semicolonPositions.filter(p => time - p.firstSeenMs > 2000).forEach(p => {\r\n\r\n            let isCurrentModule = p.module.file.id != null && p.module.file.id == currentlyEditedModule.file.id;\r\n\r\n            let editOperations: monaco.editor.IIdentifiedSingleEditOperation[] = [\r\n                {\r\n                    range: new monaco.Range(p.position.line, p.position.column, p.position.line, p.position.column),\r\n                    text: \";\",\r\n                    forceMoveMarkers: true\r\n                }\r\n            ]\r\n\r\n            if(isCurrentModule){\r\n                if(Math.abs(cursorLine - p.position.line) > 1){\r\n                    let editor = this.main.getMonacoEditor();\r\n                    const selection = editor.getSelection();\r\n                    editor.executeEdits('Semicolon-Angel', editOperations);\r\n                    editor.setSelection(selection);\r\n                    this.semicolonPositions.splice(this.semicolonPositions.indexOf(p), 1);\r\n                }\r\n            } \r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\r\nimport { Table, Column } from \"../../compiler/parser/SQLTable.js\";\r\nimport { DatabaseStructure } from \"../../tools/DatabaseTools.js\";\r\n\r\nexport class DatabaseExplorer {\r\n\r\n    collapsedTables: Map<string, boolean> = new Map();\r\n\r\n    constructor(private main: MainBase, public $mainDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    refresh() {\r\n\r\n        let dbTool = this.main.getDatabaseTool();\r\n\r\n        dbTool.retrieveDatabaseStructure((dbstructure: DatabaseStructure) => {\r\n\r\n            this.refreshAfterRetrievingDBStructure();\r\n        });\r\n\r\n    }\r\n\r\n    clear(){\r\n        this.$mainDiv.empty();\r\n    }\r\n\r\n    refreshAfterRetrievingDBStructure() {\r\n        let dbTool = this.main.getDatabaseTool();\r\n        let workspace = this.main.getCurrentWorkspace();\r\n        if (workspace != null) {\r\n            for (let m of workspace.moduleStore.getModules(false)) {\r\n                m.file.dirty = true;\r\n            }\r\n        }\r\n\r\n        let tables = Table.fromTableStructureList(dbTool.databaseStructure.tables);\r\n\r\n        this.$mainDiv.empty();\r\n\r\n        for (let table of tables) {\r\n            if(table.identifier != \"sqlite_sequence\"){\r\n                let $table = this.renderTable(table);\r\n                this.$mainDiv.append($table);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    renderTable(table: Table): JQuery<HTMLElement> {\r\n        let isCollapsed = this.collapsedTables.get(table.identifier) != null;\r\n\r\n        let $table = jQuery(\r\n            `<div class=\"jo_table\">\r\n           <div class=\"jo_tableheader\">\r\n              <div class=\"${isCollapsed ? 'img_tree-collapsed-dark' : 'img_tree-expanded-dark'} jo_treeswitch jo_button jo_active\"></div>\r\n              <div class=\"jo_tableheaderlink\">\r\n                <div class=\"img_table\"></div>\r\n                <div>${table.identifier}</div></div><div class=\"jo_tablesize\">(${table.size}&nbsp;Datensätze)</div>\r\n              </div>\r\n            </div>\r\n        </div>`);\r\n\r\n        $table.find('.jo_tableheader').on('pointerup', () => {\r\n            this.main.getResultsetPresenter().showTable(table.identifier);\r\n\r\n        })\r\n\r\n        let $columns = jQuery('<div class=\"jo_columnlist\"></div>')\r\n\r\n        for (let column of table.columns) {\r\n            let image = column.isPrimaryKey ? \"img_key\" : \"img_column\";\r\n\r\n            let referencesHtml = \"\";\r\n            if (column.references != null) {\r\n                referencesHtml = `<div class=\"img_foreign_key\" style=\"margin-left: 5px\"></div><div class=\"jo_references\">${column.references.table.identifier}.${column.references.identifier}</div>`\r\n            }\r\n\r\n            let type = column.type == null ? \"\" : column.type.toString();\r\n            let notNull: string = column.notNull ? '<div class=\"jo_dbnotnull\">not null</div>' : \"\";\r\n            let defaultValue: string = column.defaultValue ? `<div class=\"jo_dbdefault\">default ${column.defaultValue}</div>` : \"\";\r\n            let autoincrement: string = column.isAutoIncrement ? `<div class=\"jo_dbautoincrement\">autoincrement</div>` : \"\";\r\n\r\n            let $column = jQuery(`\r\n            <div class=\"jo_column\">\r\n                <div class=\"${image}\"></div>\r\n                <div>${column.identifier}</div>\r\n                <div class=\"jo_dbtype\">${type}</div>\r\n                ${autoincrement}\r\n                ${referencesHtml}\r\n                ${notNull}\r\n                ${defaultValue}\r\n            </div>\r\n            `);\r\n            $columns.append($column);\r\n        }\r\n\r\n        $table.append($columns);\r\n\r\n        let $treeSwitch = $table.find('.jo_treeswitch');\r\n        let that = this;\r\n        $treeSwitch.on('pointerup', (e) => {\r\n            e.stopPropagation();\r\n            let $columnList = $treeSwitch.parents('.jo_table').find('.jo_columnlist');\r\n            let collapsed = $treeSwitch.hasClass('img_tree-collapsed-dark');\r\n            if (collapsed) {\r\n                $treeSwitch.removeClass('img_tree-collapsed-dark');\r\n                $treeSwitch.addClass('img_tree-expanded-dark');\r\n                $columnList.slideDown(300);\r\n                that.collapsedTables.delete(table.identifier);\r\n            } else {\r\n                $treeSwitch.removeClass('img_tree-expanded-dark');\r\n                $treeSwitch.addClass('img_tree-collapsed-dark');\r\n                $columnList.slideUp(300);\r\n                that.collapsedTables.set(table.identifier, true);\r\n            }\r\n        });\r\n\r\n        return $table;\r\n    }\r\n\r\n\r\n\r\n}","// <div id=\"controls\">\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n// </div>\r\n\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { ResultsetPresenter } from \"./ResultsetPresenter.js\";\r\n\r\n\r\nexport class ProgramControlButtons {\r\n\r\n    $buttonStart: JQuery<HTMLElement>;\r\n    $buttonRollback: JQuery<HTMLElement>;\r\n    // $buttonPause: JQuery<HTMLElement>;\r\n    // $buttonStop: JQuery<HTMLElement>;\r\n    // $buttonStepOver: JQuery<HTMLElement>;\r\n    // $buttonStepInto: JQuery<HTMLElement>;\r\n    // $buttonStepOut: JQuery<HTMLElement>;\r\n    // $buttonRestart: JQuery<HTMLElement>;\r\n\r\n    // $buttonEdit: JQuery<HTMLElement>;\r\n\r\n\r\n    constructor(private main: MainBase, private $buttonsContainer: JQuery<HTMLElement>) {\r\n\r\n        this.$buttonStart = jQuery('<div title=\"Start\" class=\"img_start-dark jo_button\"></div>');\r\n        this.$buttonRollback = jQuery('<div title=\"Rollback\" class=\"img_undo jo_button\"></div>');\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        am.registerAction(\"execute\", ['Strg + Enter'],\r\n            () => {\r\n                if (am.isActive(\"execute\")) {\r\n\r\n                    this.main.getResultsetPresenter().executeSelectedStatements();\r\n                }\r\n\r\n            }, \"SQL-Statement ausführen\", this.$buttonStart\r\n        );\r\n\r\n        am.setActive('execute',false);\r\n\r\n        am.registerAction(\"rollback\", ['Strg + LeftArrow'],\r\n            () => {\r\n                if (am.isActive(\"rollback\")) {\r\n\r\n                    this.main.getHistoryViewer().rollback();\r\n                }\r\n\r\n            }, \"Letztes schreibendes SQL-Statement rückgängig machen\", this.$buttonRollback\r\n        );\r\n\r\n        am.setActive('rollback',false);\r\n\r\n        // this.$buttonPause = jQuery('<div title=\"Pause\" class=\"img_pause-dark jo_button\"></div>');\r\n        // this.$buttonStop = jQuery('<div title=\"Stop\" class=\"img_stop-dark jo_button\"></div>');\r\n        // this.$buttonStepOver = jQuery('<div title=\"Step over\" class=\"img_step-over-dark jo_button\"></div>');\r\n        // this.$buttonStepInto = jQuery('<div title=\"Step into\" class=\"img_step-into-dark jo_button\"></div>');\r\n        // this.$buttonStepOut = jQuery('<div title=\"Step out\" class=\"img_step-out-dark jo_button\"></div>');\r\n        // this.$buttonRestart = jQuery('<div title=\"Restart\" class=\"img_restart-dark jo_button\"></div>');\r\n\r\n        // this.$buttonEdit = jQuery('<div class=\"jo_editButton\" title=\"Programm anhalten damit der Programmtext bearbeitbar wird\"></div>')\r\n        // $editorContainer.append(this.$buttonEdit);\r\n\r\n        $buttonsContainer.append(this.$buttonStart, this.$buttonRollback\r\n            // , this.$buttonPause, this.$buttonStop,\r\n            // this.$buttonStepOver, this.$buttonStepInto, this.$buttonStepOut, this.$buttonRestart\r\n        );\r\n\r\n        // <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n        // <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n        // <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n        // <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n        // <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n        // <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n        // <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n        // <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n\r\n\r\n\r\n    }\r\n\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { SQLStatement } from \"../../compiler/parser/Parser.js\";\r\nimport { StatementCleaner } from \"../../compiler/parser/StatementCleaner.js\";\r\nimport { QueryResult } from \"../../tools/DatabaseTools.js\";\r\nimport { WDatabase } from \"../../workspace/WDatabase.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\ntype RuntimeError = {\r\n    statement: SQLStatement,\r\n    message: string\r\n}\r\n\r\nexport interface WriteQueryListener {\r\n    notify(statements: SQLStatement[]): void;\r\n}\r\n\r\nexport class ResultsetPresenter {\r\n\r\n    $paginationDiv: JQuery<HTMLDivElement>;\r\n    $infoDiv: JQuery<HTMLDivElement>;\r\n    $arrowLeft: JQuery<HTMLDivElement>;\r\n    $arrowRight: JQuery<HTMLDivElement>;\r\n\r\n    paginationFrom: number;\r\n    paginationAll: number;\r\n\r\n    paginationSize: number = 1000;\r\n\r\n    result: QueryResult;\r\n\r\n    writeQueryListeners: WriteQueryListener[] = [];\r\n\r\n    public static StatementDelimiter: string = \";\\n\\n\"\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$paginationDiv = <any>$bottomDiv.find('.jo_pagination');\r\n        this.$arrowLeft = jQuery('<div class=\"jo_button img_arrow-left-dark jo_active\"></div>');\r\n        this.$infoDiv = jQuery('<div class=\"jo_pagination_info\"><span class=\"jo_pagination_fromto\">0001-1000</span>/<span class=\"jo_pagination_all\">5000</span></div>');\r\n        this.$arrowRight = jQuery('<div class=\"jo_button img_arrow-right-dark jo_active\"></div>');\r\n\r\n        this.$paginationDiv.empty();\r\n        this.$paginationDiv.append(this.$arrowLeft, this.$infoDiv, this.$arrowRight);\r\n\r\n        this.$paginationDiv.hide();\r\n\r\n        let mousePointer = (window.PointerEvent ? \"pointer\" : \"mouse\") + 'up';\r\n\r\n        let that = this;\r\n        this.$arrowLeft.on(mousePointer, (e) => {\r\n            if (that.paginationFrom > 1) {\r\n                that.paginationFrom = Math.max(that.paginationFrom - that.paginationSize, 1);\r\n                if (that.paginationFrom % 1000 != 1) {\r\n                    that.paginationFrom = (Math.floor(that.paginationFrom / that.paginationSize) + 1) * that.paginationSize + 1;\r\n                }\r\n                that.showResults();\r\n                that.activateButtons();\r\n            }\r\n        })\r\n\r\n        this.$arrowRight.on(mousePointer, (e) => {\r\n            if (that.paginationFrom < this.paginationAll - that.paginationSize + 1) {\r\n                that.paginationFrom = Math.min(that.paginationFrom + that.paginationSize, that.paginationAll - that.paginationSize + 1);\r\n                that.showResults();\r\n                that.activateButtons();\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    public addWriteQueryListener(listener: WriteQueryListener) {\r\n        this.writeQueryListeners.push(listener);\r\n    }\r\n\r\n    private activateButtons() {\r\n        this.$arrowLeft.toggleClass('jo_active', this.paginationFrom > 1);\r\n        this.$arrowRight.toggleClass('jo_active', this.paginationFrom < this.paginationAll - this.paginationSize + 1);\r\n    }\r\n\r\n    executeSelectedStatements() {\r\n\r\n        let statements = this.fetchSelectedStatements().filter(st => st.ast.type != TokenType.omittedeStatement);\r\n        \r\n        if (statements.length == 0) return;\r\n\r\n        let hasDDLStatements: boolean = statements.some(st => this.isDDLStatement(st));\r\n        let hasWriteStatements: boolean = statements.some(st => this.isWriteStatement(st));\r\n        let workspace = this.main.getCurrentWorkspace();\r\n        let database = workspace.database;\r\n\r\n        if (hasDDLStatements && workspace.permissions <= 1) {\r\n            alert(\"Der Benutzer hat keine Berechtigung zum Ändern der Tabellenstruktur.\");\r\n            return;\r\n        }\r\n\r\n        if (hasWriteStatements && workspace.permissions == 0) {\r\n            alert(\"Der Benutzer hat keine Berechtigung zum Einfügen/Löschen/Ändern von Datensätzen.\");\r\n            return;\r\n        }\r\n\r\n        if (hasDDLStatements || hasWriteStatements) {\r\n            if (this.main.isEmbedded()) {\r\n                this.executeDDLWriteStatementsEmbedded(workspace, statements, database);\r\n\r\n            } else {\r\n                this.executeDDLWriteStatementsInOnlineIDE(workspace, statements, database);\r\n            }\r\n\r\n        } else {\r\n            this.executeStatements(statements, 0, [], () => { });\r\n        }\r\n\r\n    }\r\n\r\n    executeDDLWriteStatementsEmbedded(workspace: Workspace, statements: SQLStatement[], database: WDatabase) {\r\n        let sucessfullyExecutedModifyingStatements: SQLStatement[] = [];\r\n        this.executeStatements(statements, 0, sucessfullyExecutedModifyingStatements, () => {\r\n\r\n            if (sucessfullyExecutedModifyingStatements.length == 0)\r\n                return;\r\n\r\n            this.main.getDatabaseExplorer().refresh();\r\n\r\n            this.writeQueryListeners.forEach(listener => listener.notify(sucessfullyExecutedModifyingStatements))\r\n        })\r\n    }\r\n\r\n    private executeDDLWriteStatementsInOnlineIDE(workspace: Workspace, statements: SQLStatement[], database: WDatabase) {\r\n        let main: Main = <Main>this.main;\r\n        // Step 1: Update Database to newest version to avoid potential database reset\r\n        main.networkManager.getNewStatements(workspace, (new_statements, firstStatementIndex) => {\r\n\r\n            main.notifier.executeNewStatements(new_statements, firstStatementIndex, () => { },\r\n                () => {\r\n                    // Step 2: Execute new statements to see which are successful\r\n                    let sucessfullyExecutedModifyingStatements: SQLStatement[] = [];\r\n                    this.executeStatements(statements, 0, sucessfullyExecutedModifyingStatements, () => {\r\n\r\n                        if (sucessfullyExecutedModifyingStatements.length == 0)\r\n                            return;\r\n\r\n                        // Step 3: Send successful statements to server in order to retrieve new db-version-number\r\n                        main.networkManager.AddDatabaseStatements(workspace, sucessfullyExecutedModifyingStatements.map(st => st.sqlCleaned == null ? st.sql : st.sqlCleaned), (statements_before, new_version) => {\r\n\r\n                            // Step 4: If another user sent statements between steps 1 and 3 then they are in array statements_before.\r\n                            // Add all new statements to local statement list\r\n                            statements_before.forEach(st => database.statements.push(st));\r\n                            this.main.getHistoryViewer().appendStatements(statements_before);\r\n                            let modifyingStatements = sucessfullyExecutedModifyingStatements.map(st => st.sqlCleaned == null ? st.sql : st.sqlCleaned)\r\n                            database.statements = database.statements.concat(modifyingStatements);\r\n                            this.main.getHistoryViewer().appendStatements(modifyingStatements);\r\n                            database.version = new_version;\r\n\r\n                            // Step 5 (worst case): statements before is not empty, so the should be executed before the statements executed in step 2\r\n                            // => clear whole database and execute all statements in the right order, beginning with a empty database.\r\n                            if (statements_before.length > 0) {\r\n\r\n                                this.resetDatabase(database);\r\n\r\n                            } else {\r\n\r\n                                main.getDatabaseExplorer().refresh();\r\n\r\n                            }\r\n\r\n                        });\r\n                    });\r\n                }, false);\r\n        });\r\n    }\r\n\r\n    resetDatabase(database: WDatabase) {\r\n        this.main.getDatabaseTool().initializeWorker(database.templateDump, database.statements, () => {\r\n            this.main.getDatabaseExplorer().refresh();\r\n        })\r\n    }\r\n\r\n    executeStatementsString(statements: string[], fromIndex: number, callback: () => void) {\r\n        if (statements.length == 0) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (fromIndex < statements.length) {\r\n            this.main.getDatabaseTool().executeQuery(statements[fromIndex],\r\n                (results) => { this.executeStatementsString(statements, fromIndex + 1, callback) },\r\n                (error) => { console.log(\"Error when executing statement \" + statements[fromIndex] + \"\\nError : \" + error); this.executeStatementsString(statements, fromIndex + 1, callback) });\r\n        } else {\r\n            callback();\r\n        }\r\n    }\r\n\r\n\r\n    executeStatements(statements: SQLStatement[], index: number, successfullyExecutedModifyingStatements: SQLStatement[], callback: () => void, errors: RuntimeError[] = []) {\r\n\r\n        if (index >= statements.length) {\r\n            this.showErrors(errors);\r\n\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        let statement = statements[index];\r\n\r\n\r\n        let callback1 = () => {\r\n            this.executeStatements(statements, index + 1, successfullyExecutedModifyingStatements, callback, errors);\r\n        }\r\n\r\n        if (statement.ast == null) {\r\n            callback1();\r\n            return;\r\n        }\r\n\r\n        if (statement.ast.type == TokenType.keywordSelect) {\r\n            let laterSelectExists: boolean = false;\r\n            for (let j = index + 1; j < statements.length; j++) laterSelectExists = laterSelectExists || this.isSelectStatement(statements[j]);\r\n            if (laterSelectExists) {\r\n                callback1();\r\n            } else {\r\n                if (statement.ast.limitNode == null) {\r\n                    statement.sql.trimRight();\r\n                    while (statement.sql.endsWith(\";\") || statement.sql.endsWith(\"\\n\") || statement.sql.endsWith(\"\\r\")) {\r\n                        statement.sql = statement.sql.substring(0, statement.sql.length - 1);\r\n                        statement.sql.trimRight();\r\n                    }\r\n                    statement.sql += \" limit 100000\";\r\n                }\r\n                this.main.getDatabaseTool().executeQuery(statement.sql,\r\n                    (results) => { this.presentResultsIntern(statement.sql, results); callback1(); },\r\n                    (error) => { errors.push({ statement: statement, message: error }); callback1(); });\r\n            }\r\n        } else {\r\n            let sql = new StatementCleaner().clean(statement);\r\n            console.log(sql);\r\n            this.main.getDatabaseTool().executeQuery(sql, (results) => { successfullyExecutedModifyingStatements.push(statement); callback1(); }, (error) => { errors.push({ statement: statement, message: error }); callback1(); });\r\n        }\r\n\r\n    }\r\n\r\n    oldErrorDecorations: string[] = [];\r\n    showErrorDecorations(errors: RuntimeError[]) {\r\n\r\n        let minimapColors = {\r\n            \"error\": \"#bc1616\",\r\n            \"warning\": \"#cca700\",\r\n            \"info\": \"#75beff\"\r\n        }\r\n\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        let markers: monaco.editor.IMarkerData[] = [];\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n        for (let error of errors) {\r\n            let errorlevel = \"error\";\r\n\r\n            let linesDecorationsClassName: string;\r\n            let borderLeftClass: string;\r\n            let minimapColor: string = minimapColors[errorlevel];\r\n\r\n            switch (errorlevel) {\r\n                case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n            }\r\n\r\n            let severity: monaco.MarkerSeverity;\r\n            switch (errorlevel) {\r\n                case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n            }\r\n\r\n            markers.push({\r\n                startLineNumber: error.statement.from.line,\r\n                startColumn: error.statement.from.column,\r\n                endLineNumber: error.statement.to.line,\r\n                endColumn: error.statement.to.column,\r\n                message: error.message,\r\n                severity: severity\r\n            });\r\n\r\n            decorations.push({\r\n                range: {\r\n                    startLineNumber: error.statement.from.line,\r\n                    startColumn: error.statement.from.column,\r\n                    endLineNumber: error.statement.to.line,\r\n                    endColumn: error.statement.to.column,\r\n                },\r\n                options: {\r\n                    linesDecorationsClassName: linesDecorationsClassName,\r\n                    minimap: {\r\n                        position: monaco.editor.MinimapPosition.Inline,\r\n                        color: minimapColor\r\n                    }\r\n                }\r\n\r\n            });\r\n\r\n\r\n        }\r\n\r\n        let model = this.main.getCurrentlyEditedModule().model;\r\n        monaco.editor.setModelMarkers(model, 'test', markers);\r\n        this.oldErrorDecorations = model.deltaDecorations(this.oldErrorDecorations, decorations);\r\n\r\n    }\r\n\r\n    showTable(identifier: string) {\r\n        let statement = \"select * from \" + identifier + \";\";\r\n        this.main.getDatabaseTool().executeQuery(statement,\r\n            (results) => { this.presentResultsIntern(statement, results); },\r\n            (error) => { });\r\n    }\r\n\r\n\r\n\r\n    showErrors(errors: RuntimeError[]) {\r\n        let $runtimeErrorsTab = this.$bottomDiv.find('.jo_errorsTab');\r\n        let $runtimeErrorsTabHeading = this.$bottomDiv.find('.jo_errorsTabheading');\r\n\r\n        $runtimeErrorsTab.empty();\r\n        this.showErrorDecorations(errors);\r\n\r\n        if (errors.length == 0) return;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        $runtimeErrorsTabHeading.trigger(mousePointer + \"down\");\r\n\r\n        let $errorList = jQuery('<div class=\"jo_errorlist\"></div>');\r\n        $runtimeErrorsTab.append($errorList);\r\n\r\n        for (let error of errors) {\r\n            let query = error.statement.sql;\r\n            query = query.replace(/\\n/g, \" \");\r\n            query = query.replace(/\\s\\s+/g, ' ');\r\n\r\n            let $errorLine = $('<div class=\"jo_error-line\" style=\"flex-direction:column; width: fit-content\"></div>')\r\n            $errorList.append($errorLine);\r\n\r\n            $errorLine.on(mousePointer + 'down', () => {\r\n                let range = {\r\n                    startColumn: error.statement.from.column, startLineNumber: error.statement.from.line,\r\n                    endColumn: error.statement.to.column, endLineNumber: error.statement.to.line\r\n                };\r\n\r\n                this.main.getMonacoEditor().revealRangeInCenter(range);\r\n                $errorList.find('.jo_error-line').removeClass('jo_active');\r\n                $errorLine.addClass('jo_active');\r\n\r\n            })\r\n\r\n\r\n            let $sqlDiv = $('<div class=\"jo_sqlErrorStatement\"></div>');\r\n            $errorLine.append($sqlDiv);\r\n\r\n            monaco.editor.colorize(query, \"vscSQL\", {}).then(\r\n                (html) => { $sqlDiv.html(html) });\r\n\r\n            let $messageDiv = $('<div class=\"jo_sqlErrorMessage\">' + error.message + '</div>');\r\n            $errorLine.append($messageDiv);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    isSelectStatement(statement: SQLStatement): boolean {\r\n        return statement.ast != null && statement.ast.type == TokenType.keywordSelect;\r\n    }\r\n\r\n    isDDLStatement(statement: SQLStatement): boolean {\r\n        return statement.ast != null && [TokenType.keywordCreate, TokenType.keywordDrop, TokenType.keywordAlter].indexOf(statement.ast.type) >= 0;\r\n    }\r\n\r\n    isWriteStatement(statement: SQLStatement): boolean {\r\n        return statement.ast != null && [TokenType.keywordInsert, TokenType.keywordDelete, TokenType.keywordUpdate].indexOf(statement.ast.type) >= 0;\r\n    }\r\n\r\n    private presentResultsIntern(query: string, results: QueryResult[]) {\r\n        let $resultTabheading = this.$bottomDiv.find('.jo_resultTabheading');\r\n        let $resultHeader = this.$bottomDiv.find('.jo_result-header');\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        $resultTabheading.trigger(mousePointer + \"down\");\r\n        this.result = results.pop();\r\n\r\n        let headerDiv = $resultHeader;\r\n\r\n        query = query.replace(/\\n/g, \" \");\r\n        query = query.replace(/\\s\\s+/g, ' ');\r\n        query = query.replace(/limit 100000/g, '');\r\n\r\n        monaco.editor.colorize(query, \"vscSQL\", {}).then(\r\n            (html) => { headerDiv.html(html) });\r\n\r\n        this.paginationAll = this.result ? this.result.values.length : 0;\r\n        this.$infoDiv.find('.jo_pagination_all').html(`${this.paginationAll}`);\r\n        this.paginationFrom = 1;\r\n        this.$paginationDiv.show();\r\n        this.activateButtons();\r\n\r\n        this.showResults();\r\n\r\n    }\r\n\r\n    public clear() {\r\n        let $bodyDiv = this.$bottomDiv.find('.jo_result-body');\r\n        $bodyDiv.empty();\r\n        this.$paginationDiv.hide();\r\n    }\r\n\r\n    private showResultsBusy: boolean = false;\r\n    private showResultPending: boolean = false;\r\n\r\n    private showResults() {\r\n        let $bodyDiv = this.$bottomDiv.find('.jo_result-body');\r\n\r\n        if (this.result == null) {\r\n            this.$infoDiv.find('.jo_pagination_fromto').html('---');\r\n            $bodyDiv.html('Die Datenbank lieferte eine leere Ergebnistabelle.');\r\n            return;\r\n        }\r\n\r\n        let that = this;\r\n        let from = this.paginationAll == 0 ? 0 : this.paginationFrom;\r\n        let to = this.paginationAll == 0 ? 0 : Math.min(this.paginationFrom + this.paginationSize - 1, this.paginationAll);\r\n        this.$infoDiv.find('.jo_pagination_fromto').html(`${from}-${to}`)\r\n\r\n        if (this.showResultsBusy) {\r\n            if (this.showResultPending) {\r\n                return;\r\n            }\r\n            this.showResultPending = true;\r\n            let waitFunction = () => {\r\n                if (that.showResultsBusy) {\r\n                    setTimeout(() => {\r\n                        waitFunction();\r\n                    }, 200);\r\n                } else {\r\n                    that.showResultPending = false;\r\n                    that.showResults();\r\n                }\r\n            }\r\n            setTimeout(waitFunction, 200);\r\n            return;\r\n        }\r\n\r\n        this.showResultsBusy = true;\r\n\r\n        let $table = jQuery('<table></table>');\r\n        let $header = jQuery('<tr></tr>');\r\n        $table.append($header);\r\n\r\n        this.result.columns.forEach((column) => { $header.append(jQuery(`<th><div>${column}</div></th>`)) });\r\n\r\n        let rows = this.result.values.slice(this.paginationFrom - 1, this.paginationFrom + this.paginationSize - 1);\r\n\r\n        let i = 0;\r\n        let f = () => {\r\n            if (i < rows.length) {\r\n                for (let j = i; j < Math.min(i + 200, rows.length); j++) {\r\n                    let row = rows[j];\r\n                    let $row = jQuery('<tr></tr>');\r\n                    $table.append($row);\r\n                    row.forEach((cell) => { $row.append(jQuery(`<td>${cell}</td>`)) });\r\n                }\r\n                i = Math.min(i + 200, rows.length);\r\n                if (i < rows.length) {\r\n                    setTimeout(f, 30);\r\n                } else {\r\n                    $bodyDiv.empty().append($table);\r\n                    this.showResultsBusy = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        f();\r\n\r\n        // rows.forEach((row) => {\r\n        //     let $row = jQuery('<tr></tr>');\r\n        //     $table.append($row);\r\n        //     row.forEach((cell) => {$row.append(jQuery(`<td>${cell}</td>`))});\r\n        // });\r\n\r\n        // bodyDiv.empty().append($table);\r\n\r\n    }\r\n\r\n\r\n    fetchSelectedStatements(): SQLStatement[] {\r\n        let module = this.main.getCurrentlyEditedModule();\r\n        if (module == null) return null;\r\n\r\n        let monacoEditor = this.main.getMonacoEditor();\r\n        // console.log(monacoEditor.getSelection());\r\n        // console.log(monacoEditor.getPosition());\r\n\r\n        let statements: SQLStatement[] = module.getSQLSTatementsAtSelection(monacoEditor.getSelection());\r\n        for (let statement of statements) {\r\n            statement.sql = monacoEditor.getModel().getValueInRange({\r\n                startColumn: statement.from.column,\r\n                startLineNumber: statement.from.line, endColumn: statement.to.column, endLineNumber: statement.to.line\r\n            });\r\n        }\r\n\r\n        // let sqlStatement = module.getSQLStatementAtPosition(monacoEditor.getPosition());\r\n\r\n        return statements;\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { Module } from \"../compiler/parser/Module.js\";\r\nimport { ResultsetPresenter } from \"../main/gui/ResultsetPresenter.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { WDatabase } from \"../workspace/WDatabase.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ajax } from \"./AjaxHelper.js\";\r\nimport { GetNewStatementsRequest, GetNewStatementsResponse, GetWebSocketTokenResponse, LongPollingListenerResponse, RegisterLongPollingListenerRequest, WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestGetNewStatements, WebSocketResponse } from \"./Data.js\";\r\n\r\nexport class Notifier {\r\n\r\n    connection: WebSocket;\r\n    isOpen: boolean = false;\r\n    workspace: Workspace;\r\n    database: WDatabase;\r\n\r\n    constructor(public main: Main) {\r\n        // Polling is not used. \r\n        // We try long polling (see below!)\r\n\r\n        // this.startPolling();\r\n    }\r\n\r\n    connect(workspace: Workspace) {\r\n\r\n        let that = this;\r\n        this.workspace = workspace;\r\n        this.database = workspace.database;\r\n\r\n        if (this.isOpen) {\r\n            this.connection.close();\r\n        }\r\n\r\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\r\n\r\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/websocket\";\r\n            this.connection = new WebSocket(url);\r\n\r\n            this.connection.onerror = (error: Event) => { this.onError(error); }\r\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\r\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\r\n\r\n            this.connection.onopen = (event: Event) => {\r\n                let request: WebSocketRequestConnect = {\r\n                    command: 1,\r\n                    token: response.token,\r\n                    workspaceId: workspace.id,\r\n                    databaseId: workspace.database.id,\r\n                    databaseVersion: workspace.database.version\r\n                }\r\n\r\n                this.isOpen = true;\r\n                this.sendIntern(JSON.stringify(request));\r\n                this.onOpen();\r\n\r\n            }\r\n\r\n            setTimeout(() => {\r\n                that.startLongPolling()\r\n            }, 2000);\r\n\r\n        });\r\n\r\n    }\r\n\r\n    unsentMessages: string[] = [];\r\n    sendIntern(message: string) {\r\n\r\n        if (!this.isOpen) {\r\n            this.unsentMessages.push(message);\r\n        } else {\r\n            try {\r\n                this.connection.send(message);\r\n            } catch (exception) {\r\n                console.log(exception);\r\n            }\r\n        }\r\n    }\r\n\r\n    onClose(event: CloseEvent) {\r\n        this.isOpen = false;\r\n    }\r\n\r\n\r\n    disconnect() {\r\n        let message: WebSocketRequestDisconnect = {\r\n            command: 4\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n        this.connection.close();\r\n        this.workspace = null;\r\n    }\r\n\r\n    onMessage(event: MessageEvent) {\r\n\r\n        let that = this;\r\n        let response: WebSocketResponse = JSON.parse(event.data);\r\n        if (response.command == undefined) return;\r\n\r\n        switch (response.command) {\r\n            case 2: // SendStatements\r\n                that.executeNewStatements(response.newStatements, response.firstNewStatementIndex, () => {\r\n                    let request: WebSocketRequestGetNewStatements = { command: 2, databaseVersion: that.database.version };\r\n                    that.sendIntern(JSON.stringify(request));\r\n                })\r\n                break;\r\n            case 3: // server initiated disconnect\r\n                this.isOpen = false;\r\n                this.database = null;\r\n                this.workspace = null;\r\n                break;\r\n            case 4: // keep alive\r\n                break;\r\n            case 5: // rollback\r\n                if (this.database.version > response.new_version) {\r\n                    this.main.getHistoryViewer().rollbackLocal(response.new_version);\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    executeNewStatements(newStatements: string[], firstNewStatementIndex: number, callbackIfTooFewStatements: () => void, callbackIfDone: () => void = () => { }, doRefreshDatabaseExplorer: boolean = true) {\r\n        if (this.database == null) return;\r\n        let that = this;\r\n        let delta = firstNewStatementIndex - (this.database.version + 1);\r\n        if (delta > 0) {\r\n            callbackIfTooFewStatements();\r\n            callbackIfDone();\r\n            return;\r\n        } else {\r\n            if (delta < 0) {\r\n                newStatements.splice(0, -delta);\r\n                firstNewStatementIndex -= delta;\r\n            }\r\n            let statements = newStatements;\r\n            if (statements.length > 0) {\r\n                this.main.resultsetPresenter.executeStatementsString(statements, 0, () => {\r\n                    that.main.getHistoryViewer().appendStatements(statements);\r\n                    that.database.statements = that.database.statements.concat(statements)\r\n                    that.database.version = firstNewStatementIndex + newStatements.length - 1;\r\n                    if (doRefreshDatabaseExplorer) {\r\n                        that.main.databaseExplorer.refresh();\r\n                    }\r\n                    callbackIfDone();\r\n                })\r\n            } else {\r\n                callbackIfDone();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    onError(error: Event) {\r\n    }\r\n\r\n    onOpen() {\r\n        this.isOpen = true;\r\n        if (this.unsentMessages.length > 0) {\r\n            this.unsentMessages.forEach(m => this.sendIntern(m));\r\n            this.unsentMessages = [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Polling is not used. \r\n     * We try long polling!\r\n     * (see below)\r\n     */\r\n    isPolling: boolean = false;\r\n    startPolling() {\r\n        if (this.isPolling) return;\r\n        this.isPolling = true;\r\n\r\n        this.poll();\r\n\r\n    }\r\n\r\n    /**\r\n     * Polling is not used.\r\n     * We try long polling!\r\n     * (see below)\r\n     */\r\n    counter: number = 0;\r\n    poll() {\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.poll();\r\n        }, 6000);\r\n\r\n        if (!that.isOpen && that.workspace != null) {\r\n            this.getNewStatementsHttp();\r\n\r\n            // retry connecting:\r\n            that.counter++;\r\n            if (that.counter == 10) {\r\n                that.counter = 0;\r\n                that.connect(that.workspace);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getNewStatementsHttp() {\r\n        let that = this;\r\n        if (this.workspace == null || this.database == null) return;\r\n\r\n        let request: GetNewStatementsRequest = {\r\n            workspaceId: this.workspace.id,\r\n            version_before: this.workspace.database.version\r\n        }\r\n\r\n        ajax('getNewStatements', request, (response: GetNewStatementsResponse) => {\r\n\r\n            if(response.rollbackToVersion != null){\r\n                that.main.getHistoryViewer().rollbackLocal(response.rollbackToVersion);\r\n            } else {\r\n                that.executeNewStatements(response.newStatements, response.firstNewStatementIndex, () => {\r\n                    that.getNewStatementsHttp();\r\n                })\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    isLongPolling: boolean = false;\r\n    startLongPolling() {\r\n        if (this.isLongPolling) return;\r\n        this.isLongPolling = true;\r\n\r\n        this.longPoll();\r\n\r\n    }\r\n\r\n    longPollCounter: number = 0;\r\n    longPoll() {\r\n        let that = this;\r\n\r\n        if (!that.isOpen && that.workspace != null) {\r\n            let request: RegisterLongPollingListenerRequest = {\r\n                workspaceId: that.workspace.id\r\n            }\r\n\r\n            $.ajax({\r\n                type: 'POST',\r\n                async: true,\r\n                data: JSON.stringify(request),\r\n                contentType: 'application/json',\r\n                url: \"servlet/registerLongPollingListener\",\r\n                success: function (resp: string) {\r\n                    console.log(resp);\r\n                    let response: LongPollingListenerResponse = typeof resp == \"string\" ? JSON.parse(resp) : resp;\r\n                    if (resp != null && !that.isOpen && that.workspace?.id == request.workspaceId && response.success) {\r\n                        that.executeNewStatements(response.newStatements, response.firstNewStatementIndex, () => {\r\n                            that.getNewStatementsHttp();\r\n                        })\r\n\r\n                        let timeout: number = 1000;\r\n                        // retry connecting:\r\n                        that.longPollCounter++;\r\n                        if (that.longPollCounter == 10) {\r\n                            that.longPollCounter = 0;\r\n                            that.connect(that.workspace);\r\n                            timeout = 2000;\r\n                        }\r\n\r\n                        setTimeout(() => {\r\n                            that.longPoll();\r\n                        }, 2000);\r\n                    }\r\n                },\r\n                error: function (jqXHR, message) {\r\n                    if (!that.isOpen && that.workspace?.id == request.workspaceId) {\r\n                        setTimeout(() => {\r\n                            that.longPoll();\r\n                        }, 2000);\r\n                    }\r\n                }\r\n            });\r\n\r\n        } else {\r\n            setTimeout(() => {\r\n                that.longPoll();\r\n            }, 5000);\r\n        }\r\n\r\n    }\r\n\r\n}","export class WaitOverlay {\r\n\r\n    visible: boolean = false;\r\n    fadeOutPending: boolean = false;\r\n    $bitteWartenText: JQuery<HTMLElement>;\r\n    $bitteWartenProgress: JQuery<HTMLElement>;\r\n\r\n    constructor(private $waitDiv: JQuery<HTMLElement>){\r\n        this.$bitteWartenText = $waitDiv.find('.bitteWartenText');\r\n        this.$bitteWartenProgress = $waitDiv.find('.bitteWartenProgress');\r\n    }\r\n\r\n    show(message: string){\r\n        this.fadeOutPending = false;\r\n        this.$bitteWartenText.html(message);\r\n        this.$bitteWartenProgress.html('');\r\n        if(!this.visible){\r\n            this.visible = true;\r\n            this.$waitDiv.css('display', 'flex');\r\n            this.$waitDiv.hide();\r\n            this.$waitDiv.fadeIn(400);\r\n        }\r\n    }\r\n\r\n    setProgress(message: string){\r\n        this.$bitteWartenProgress.html(message);\r\n    }\r\n\r\n    hide(){\r\n        if(this.visible){\r\n            this.fadeOutPending = true;\r\n            setTimeout(() => {\r\n                if(this.fadeOutPending){\r\n                    this.fadeOutPending = false;\r\n                    this.$waitDiv.fadeOut(200, () => {\r\n                        this.$waitDiv.css('display', 'none');\r\n                    })\r\n                    this.visible = false;        \r\n                }                \r\n            }, 50);\r\n        }\r\n    }\r\n\r\n}","import { MainEmbedded } from \"../../embedded/MainEmbedded.js\";\r\nimport { copyTextToClipboard, openContextMenu } from \"../../tools/HtmlTools.js\";\r\nimport { WDatabase } from \"../../workspace/WDatabase.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\ntype HistoryPanelEntry = {\r\n    statement: string;\r\n    $div: JQuery<HTMLDivElement>;\r\n    $rollbackButton: JQuery<HTMLDivElement>;\r\n}\r\n\r\nexport class HistoryViewer {\r\n\r\n    panelEntries: HistoryPanelEntry[] = [];\r\n\r\n    constructor(private main: MainBase, private $historyPanel: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    clear() {\r\n        this.$historyPanel.empty();\r\n        this.main.getActionManager().setActive(\"rollback\", false);\r\n        this.panelEntries = [];\r\n    }\r\n\r\n    clearAndShowStatements(statements: string[]) {\r\n        this.clear();\r\n        this.appendStatements(statements);\r\n        this.main.getActionManager().setActive(\"rollback\", statements.length > 0);\r\n    }\r\n\r\n    appendStatements(statements: string[]) {\r\n        statements.forEach(stmt => {\r\n            let panelEntry = this.makePanelEntry(stmt, this.panelEntries.length + 1);\r\n            this.$historyPanel.prepend(panelEntry.$div);\r\n            this.panelEntries.unshift(panelEntry);\r\n        })\r\n\r\n        if(statements.length > 0){\r\n            this.main.getActionManager().setActive(\"rollback\", true);\r\n        }\r\n\r\n        this.makeLastButtonActive();\r\n    }\r\n\r\n    makeLastButtonActive() {\r\n        this.panelEntries.forEach(pe => pe.$rollbackButton.removeClass('jo_active'));\r\n\r\n        if (this.panelEntries.length > 0) {\r\n            this.panelEntries[0].$rollbackButton.addClass('jo_active');\r\n        }\r\n    }\r\n\r\n    makePanelEntry(statement: string, index: number): HistoryPanelEntry {\r\n        let $div = <JQuery<HTMLDivElement>>jQuery(`<div class=\"jo_panelEntry\"></div>`);\r\n        let $index = jQuery(`<div class=\"jo_panelEntryIndex\">${index}.</div>`);\r\n        let $text = jQuery(`<div class=\"jo_panelEntryText\"></div>`);\r\n        let t: string = statement.substring(0, Math.min(400, statement.length));\r\n        if (statement.length > 400) {\r\n            t += \"...\";\r\n        }\r\n        $text.text(t);\r\n        let $copybutton = <JQuery<HTMLDivElement>>jQuery(`<div class=\"img_copy jo_panelEntryCopyButton jo_active jo_button\" title=\"In die Zwischenablage kopieren\"></div>`)\r\n        let $rollbackbutton = <JQuery<HTMLDivElement>>jQuery(`<div class=\"img_undo jo_panelEntryRollbackButton jo_button\" title=\"Rollback\"></div>`)\r\n        let that = this;\r\n\r\n        $copybutton.on('click', () => {\r\n            copyTextToClipboard(statement);\r\n        })\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $rollbackbutton.on(mousePointer + 'up', (ev) => {\r\n            ev.preventDefault();\r\n            openContextMenu([{\r\n                caption: \"Abbrechen\",\r\n                callback: () => {\r\n                }\r\n            }, {\r\n                caption: \"Ich bin mir sicher: rollback!\",\r\n                color: \"#ff6060\",\r\n                callback: () => {\r\n                    this.rollback();\r\n                }\r\n            }], ev.pageX + 2, ev.pageY + 2);\r\n            ev.stopPropagation();\r\n        })\r\n\r\n        $div.append($index, $text, $copybutton, $rollbackbutton);\r\n        return {\r\n            $div: $div,\r\n            statement: statement,\r\n            $rollbackButton: $rollbackbutton\r\n        }\r\n    }\r\n\r\n    rollback() {\r\n        if (this.panelEntries.length == 0) return;\r\n\r\n        if (this.main.isEmbedded()) {\r\n            this.rollbackEmbedded();\r\n            this.main.getActionManager().setActive(\"rollback\", this.panelEntries.length > 0);\r\n        } else {\r\n            let main: Main = <Main>this.main;\r\n            main.networkManager.rollback((error: string, rollbackLocalNeeded: boolean) => {\r\n                if (error == null && rollbackLocalNeeded) {\r\n                    this.rollbackLocal();\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    rollbackLocal(new_version?: number) {\r\n        let database = this.main.getCurrentWorkspace().database;\r\n        if(new_version == null) new_version = database.version - 1;\r\n        \r\n        while(database.version > new_version){\r\n            database.statements.pop();\r\n            database.version--;\r\n        }\r\n        this.main.getDatabaseTool().initializeWorker(database.templateDump, database.statements, () => {\r\n\r\n        }, () => {\r\n            this.main.getDatabaseExplorer().refreshAfterRetrievingDBStructure();\r\n            let lastPanelEntry = this.panelEntries.shift();\r\n            lastPanelEntry.$div.remove();\r\n            this.makeLastButtonActive();\r\n            this.main.getActionManager().setActive(\"rollback\", this.panelEntries.length > 0);\r\n        })\r\n    }\r\n\r\n    rollbackEmbedded() {\r\n        let main: MainEmbedded = <MainEmbedded>this.main;\r\n        main.writeQueryManager.rollback();\r\n\r\n        this.main.getDatabaseTool().initializeWorker(main.initialTemplateDump,\r\n            main.initialStatements.concat(main.writeQueryManager.writtenStatements), () => { },\r\n            () => {\r\n                this.main.getDatabaseExplorer().refreshAfterRetrievingDBStructure();\r\n                let lastPanelEntry = this.panelEntries.shift();\r\n                lastPanelEntry.$div.remove();\r\n                this.makeLastButtonActive();\r\n            })\r\n    }\r\n\r\n}","import { ClassData, UserData, Workspaces } from \"../communication/Data.js\";\r\nimport { NetworkManager } from \"../communication/NetworkManager.js\";\r\nimport { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ActionManager } from \"./gui/ActionManager.js\";\r\nimport { BottomDiv } from \"./gui/BottomDiv.js\";\r\nimport { Editor } from \"./gui/Editor.js\";\r\nimport { Formatter } from \"./gui/Formatter.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { MainMenu } from \"./gui/MainMenu.js\";\r\nimport { ProjectExplorer } from \"./gui/ProjectExplorer.js\";\r\nimport { RightDiv } from \"./gui/RightDiv.js\";\r\nimport { Sliders } from \"./gui/Sliders.js\";\r\nimport { TeacherExplorer } from \"./gui/TeacherExplorer.js\";\r\nimport { ThemeManager } from \"./gui/ThemeManager.js\";\r\nimport { Login } from \"./Login.js\";\r\nimport { Module, File } from \"../compiler/parser/Module.js\";\r\nimport { ViewModeController } from \"./gui/ViewModeController.js\";\r\nimport { ErrorManager } from \"./gui/ErrorManager.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { DatabaseTool } from \"../tools/DatabaseTools.js\";\r\nimport { MainBase } from \"./MainBase.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { DatabaseExplorer } from \"./gui/DatabaseExplorer.js\";\r\nimport { ProgramControlButtons } from \"./gui/ProgramControlButtons.js\";\r\nimport { ResultsetPresenter } from \"./gui/ResultsetPresenter.js\";\r\nimport { Notifier } from \"../communication/Notifier.js\";\r\nimport { checkIfMousePresent } from \"../tools/HtmlTools.js\";\r\nimport { WaitOverlay } from \"./gui/WaitOverlay.js\";\r\nimport { HistoryViewer } from \"./gui/HistoryViewer.js\";\r\n\r\nexport class Main implements MainBase {\r\n    isEmbedded(): boolean {\r\n        return false;\r\n    }\r\n\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    // VORSICHT: ggf. Module -> any\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.projectExplorer.getCurrentlyEditedModule();\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n        this.projectExplorer.setModuleActive(module);\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n    getDatabaseTool(): DatabaseTool {\r\n        return this.databaseTool;\r\n    }\r\n\r\n    getDatabaseExplorer():DatabaseExplorer {\r\n        return this.databaseExplorer;\r\n    }\r\n\r\n    getResultsetPresenter(): ResultsetPresenter {\r\n        return this.resultsetPresenter;\r\n    }\r\n\r\n    getWaitOverlay(): WaitOverlay {\r\n        return this.waitOverlay;\r\n    }\r\n\r\n    getHistoryViewer(): HistoryViewer {\r\n        return this.historyViewer;\r\n    }\r\n\r\n    workspaceList: Workspace[] = [];\r\n    workspacesOwnerId: number;\r\n\r\n    // monaco_editor: monaco.editor.IStandaloneCodeEditor;\r\n    editor: Editor;\r\n    currentWorkspace: Workspace;\r\n    projectExplorer: ProjectExplorer;\r\n    teacherExplorer: TeacherExplorer;\r\n    networkManager: NetworkManager;\r\n    actionManager: ActionManager;\r\n    mainMenu: MainMenu;\r\n\r\n    login: Login;\r\n\r\n    compiler: Compiler;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    bottomDiv: BottomDiv;\r\n\r\n    startupComplete = 2;\r\n    waitForGUICallback: () => void;\r\n\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    user: UserData;\r\n    userDataDirty: boolean = false;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    rightDiv: RightDiv;\r\n\r\n    viewModeController: ViewModeController;\r\n\r\n    databaseTool: DatabaseTool;\r\n\r\n    databaseExplorer: DatabaseExplorer;\r\n\r\n    resultsetPresenter: ResultsetPresenter;\r\n\r\n    notifier: Notifier;\r\n\r\n    waitOverlay: WaitOverlay = new WaitOverlay(jQuery('.bitteWarten'));\r\n    historyViewer: HistoryViewer = new HistoryViewer(this, jQuery('.jo_historyTab'));\r\n\r\n    initGUI() {\r\n\r\n        checkIfMousePresent();\r\n\r\n        this.login = new Login(this);\r\n        this.login.initGUI();\r\n\r\n        this.databaseTool = new DatabaseTool(this);\r\n        this.databaseExplorer = new DatabaseExplorer(this, jQuery(\".jo_db_tree\"));\r\n\r\n        this.actionManager = new ActionManager(null, this);\r\n        this.actionManager.init();\r\n\r\n        this.networkManager = new NetworkManager(this, jQuery('#bottomdiv-outer .jo_updateTimerDiv'));\r\n\r\n        let sliders = new Sliders(this);\r\n        sliders.initSliders();\r\n        this.mainMenu = new MainMenu(this);\r\n        this.projectExplorer = new ProjectExplorer(this, jQuery('#leftpanel>.jo_projectexplorer'));\r\n        this.projectExplorer.initGUI();\r\n\r\n        this.bottomDiv = new BottomDiv(this, jQuery('#bottomdiv-outer>.jo_bottomdiv-inner'), jQuery('body'));\r\n\r\n        this.rightDiv = new RightDiv(this, jQuery('#rightdiv-inner'));\r\n        this.rightDiv.initGUI();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.themeManager = new ThemeManager();\r\n\r\n        this.viewModeController = new ViewModeController(jQuery(\"#view-mode\"), this);\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n        new ProgramControlButtons(this, jQuery('#controls'));\r\n\r\n        this.resultsetPresenter = new ResultsetPresenter(this, jQuery('.jo_bottomdiv-inner'));\r\n\r\n        this.notifier = new Notifier(this);\r\n\r\n    }\r\n\r\n\r\n    initEditor() {\r\n        this.editor = new Editor(this, true, false);\r\n        new Formatter().init();\r\n        // this.monaco_editor = \r\n        this.editor.initGUI(jQuery('#editor'));\r\n\r\n        let that = this;\r\n        jQuery(window).on('resize', (event) => {\r\n            jQuery('#bottomdiv-outer').css('height', '450px');\r\n            jQuery('#editor').css('height', (window.innerHeight - 450 - 30 - 2) + \"px\");\r\n            that.editor.editor.layout();\r\n            jQuery('#editor').css('height', \"\");\r\n\r\n        });\r\n\r\n        jQuery(window).trigger('resize');\r\n\r\n        this.checkStartupComplete();\r\n    }\r\n\r\n    initTeacherExplorer(classdata: ClassData[]) {\r\n        this.teacherExplorer = new TeacherExplorer(this, classdata);\r\n        this.teacherExplorer.initGUI();\r\n    }\r\n\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    start() {\r\n\r\n        if (this.waitForGUICallback != null) {\r\n            this.waitForGUICallback();\r\n        }\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.getMonacoEditor().layout();\r\n        }, 200);\r\n\r\n        this.compiler = new Compiler(this);\r\n\r\n        this.startTimer();\r\n\r\n        $(window).on('unload', function() {\r\n            \r\n            if(navigator.sendBeacon && that.user != null){\r\n                that.networkManager.sendUpdates(null, false);\r\n                that.networkManager.sendUpdateUserSettings(() => {});\r\n            }\r\n            \r\n        });\r\n\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n                this.projectExplorer.renderErrorCount(this.currentWorkspace, errors);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                if (this.projectExplorer) {\r\n                    this.version++;\r\n                }\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    removeWorkspace(w: Workspace) {\r\n        this.workspaceList.splice(this.workspaceList.indexOf(w), 1);\r\n    }\r\n\r\n    restoreWorkspaces(workspaces: Workspaces) {\r\n\r\n        this.workspaceList = [];\r\n        this.currentWorkspace = null;\r\n        // this.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\" , \"text\"));\r\n        this.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        let currentWorkspace: Workspace = null;\r\n\r\n        for (let ws of workspaces.workspaces) {\r\n\r\n            let workspace: Workspace = Workspace.restoreFromData(ws, this);\r\n            this.workspaceList.push(workspace);\r\n            if (ws.id == this.user.currentWorkspace_id) {\r\n                currentWorkspace = workspace;\r\n            }\r\n        }\r\n\r\n        this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n\r\n        if (currentWorkspace == null && this.workspaceList.length > 0) {\r\n            currentWorkspace = this.workspaceList[0];\r\n        }\r\n\r\n        if (currentWorkspace != null) {\r\n            this.projectExplorer.setWorkspaceActive(currentWorkspace);\r\n        }\r\n\r\n        if (this.workspaceList.length == 0) {\r\n\r\n            Helper.showHelper(\"newDatabaseHelper\", this, this.projectExplorer.workspaceListPanel.$captionElement);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    createNewWorkspace(name: string, owner_id: number): Workspace {\r\n        return new Workspace(name, this, owner_id);\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Main } from \"./Main.js\";\r\n\r\n\r\njQuery(function () {\r\n\r\n    let main = new Main();\r\n\r\n    //@ts-ignore\r\n    window.require.config({ paths: { 'vs': 'lib/monaco-editor/dev/vs' } });\r\n    //@ts-ignore\r\n    window.require.config({\r\n        'vs/nls': {\r\n            availableLanguages: {\r\n                '*': 'de'\r\n            }\r\n        },\r\n        ignoreDuplicateModules: [\"vs/editor/editor.main\"]\r\n    });\r\n\r\n    //@ts-ignore\r\n    window.require(['vs/editor/editor.main'], function () {\r\n\r\n        main.initEditor();\r\n        main.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        main.bottomDiv.initGUI();\r\n\r\n        // main.loadWorkspace();\r\n\r\n\r\n    });\r\n\r\n    main.initGUI();\r\n\r\n});"],"sourceRoot":""}