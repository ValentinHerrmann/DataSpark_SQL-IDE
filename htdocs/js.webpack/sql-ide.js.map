{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../node_modules/regenerator-runtime/runtime.js","webpack:///../../../src/client/communication/AjaxHelper.ts","webpack:///../../../src/client/workspace/WDatabase.ts","webpack:///../../../src/client/communication/CacheManager.ts","webpack:///../../../src/client/communication/NotifierClient.ts","webpack:///../../../src/client/communication/NetworkManager.ts","webpack:///../../../../src/client/compiler/lexer/Token.ts","webpack:///../../../../src/client/compiler/lexer/Lexer.ts","webpack:///../../../../src/client/compiler/parser/SQLTypes.ts","webpack:///../../../../src/client/compiler/parser/Parser.ts","webpack:///../../../../src/client/compiler/parser/SQLTable.ts","webpack:///../../../../src/client/compiler/parser/SymbolTable.ts","webpack:///../../../../src/client/compiler/parser/SQLMethods.ts","webpack:///../../../src/client/tools/StringTools.ts","webpack:///../../../../src/client/compiler/parser/SymbolResolver.ts","webpack:///../../../src/client/compiler/Compiler.ts","webpack:///../../../../src/client/compiler/parser/Module.ts","webpack:///../../../src/client/tools/HtmlTools.ts","webpack:///../../../src/client/tools/TemplateUploader.ts","webpack:///../../../../src/client/main/gui/DatabaseSettingsDialog.ts","webpack:///../../../src/client/workspace/Workspace.ts","webpack:///../../../../src/client/main/gui/ActionManager.ts","webpack:///../../../../src/client/main/gui/ErrorManager.ts","webpack:///../../../../src/client/main/gui/HomeworkManager.ts","webpack:///../../../../src/client/main/gui/BottomDiv.ts","webpack:///../../../../src/client/main/gui/MyCompletionItemProvider.ts","webpack:///../../../../src/client/main/gui/MySignatureHelpProvider.ts","webpack:///../../../../src/client/main/gui/MyHoverProvider.ts","webpack:///../../../../src/client/main/gui/MyCodeActionProvider.ts","webpack:///../../../../src/client/main/gui/MyReferenceProvider.ts","webpack:///../../../../src/client/main/gui/Helper.ts","webpack:///../../../../src/client/main/gui/Editor.ts","webpack:///../../../../src/client/main/gui/VscSql.ts","webpack:///../../../../src/client/main/gui/Formatter.ts","webpack:///../../../src/client/sqljs-worker/sqljsWorkerSim.ts","webpack:///../../../src/client/tools/DatabaseTools.ts","webpack:///../../../../src/client/compiler/parser/StatementCleaner.ts","webpack:///../../../src/client/tools/MySqlImporter.ts","webpack:///../../../src/client/tools/DatabaseImportExport.ts","webpack:///../../../../src/client/main/gui/NewDatabaseDialog.ts","webpack:///../../../../src/client/main/gui/MainMenu.ts","webpack:///../../../../src/client/main/gui/Accordion.ts","webpack:///../../../../src/client/main/gui/DistributeToStudentsDialog.ts","webpack:///../../../../src/client/main/gui/ProjectExplorer.ts","webpack:///../../../../src/client/main/gui/RightDiv.ts","webpack:///../../../../src/client/main/gui/Sliders.ts","webpack:///../../../../src/client/main/gui/TeacherExplorer.ts","webpack:///../../../../src/client/main/gui/ThemeManager.ts","webpack:///../../../../src/client/main/gui/UserMenu.ts","webpack:///../../../src/client/main/Login.ts","webpack:///../../../../src/client/main/gui/ViewModeController.ts","webpack:///../../../../src/client/compiler/parser/SemicolonAngel.ts","webpack:///../../../../src/client/main/gui/DatabaseExplorer.ts","webpack:///../../../../src/client/main/gui/ProgramControlButtons.ts","webpack:///../../../../src/client/main/gui/ResultsetPresenter.ts","webpack:///../../../src/client/communication/Notifier.ts","webpack:///../../../../src/client/main/gui/WaitOverlay.ts","webpack:///../../../../src/client/main/gui/HistoryViewer.ts","webpack:///../../../src/client/main/Main.ts","webpack:///../../../src/client/main/IDEStarter.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","runtime","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","define","obj","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","state","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","makeInvokeMethod","fn","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","undefined","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","Function","PerformanceCollector","url","startTime","pe","performanceData","find","count","sumTime","dt","Math","round","performance","now","performanceDataCount","lastTimeSent","request","data","ajax","successCallback","errorCallback","showNetworkBusy","time","$","JSON","stringify","contentType","success","response","registerPerformanceEntry","message","jqXHR","statusText","status","busy","jQuery","css","WDatabase","version","db","id","statements","published_to","description","templateDump","based_on_template_id","owner_id","CacheManager","databaseId","callback","that","cacheAvailable","getCache","cache","match","databaseIdToCacheIdentifier","arrayBuffer","buffer","Uint8Array","catch","put","Response","caches","open","NotifierClient","main","networkManager","unsentMessages","connect","window","location","protocol","startsWith","host","connection","WebSocket","onerror","onError","onclose","event","onClose","onmessage","onMessage","onopen","command","token","sendIntern","setTimeout","forcedUpdateEvery","counterTillForcedUpdate","send","console","log","parse","sendUpdates","TokenType","NetworkManager","$updateTimerDiv","ownUpdateFrequencyInSeconds","teacherUpdateFrequencyInSeconds","updateFrequencyInSeconds","secondsTillNextUpdate","errorHappened","attr","interval","clearInterval","setInterval","user","forceUpdate","$rect","notifierClient","sendIfNothingIsDirty","projectExplorer","writeEditorTextToFile","settings","wdList","fdList","workspaceList","ws","saved","getWorkspaceData","moduleStore","getModules","file","text","getProgramTextFromMonacoModel","getFileData","workspacesWithoutFiles","files","workspacesOwnerId","userId","language","currentWorkspaceId","getCurrentWorkspace","_a","getModifiedWorkspaces","updateWorkspaces","wd","is_testuser","random","entity","workspace_id","workspaceId","alert","kind","secretKind","secret","databaseName","publishedTo","workspace","klasse","student_ids","class_id","current_workspace_id","version_before","database","newStatements","firstNewStatementIndex","statements_before","new_version","cacheManager","fromDatabaseData","fetchTemplateFromCache","fetchTemplate","template","saveTemplateToCache","pako","inflate","xhrFields","responseType","user_id","templateList","sendUpdatesRequest","sendUpdatesResponse","idToRemoteWorkspaceDataMap","Map","fileIdsSended","workspaces","set","newWorkspaceNames","remoteWorkspace","filter","createNewWorkspaceFromWorkspaceData","idToRemoteFileDataMap","fd","idToModuleMap","fileId","remoteFileData","fileListPanel","removeElement","currentWorkspace","removeModule","indexOf","model","setValue","lastSavedVersionId","getAlternativeVersionId","remoteFile","createFile","join","workspaceListPanel","sortElements","withSort","w","createNewWorkspace","sql_history","path","isFolder","split","panelElement","externalElement","iconClass","addElement","fileData","ae","f","dirty","identical_to_repository_version","getNewModule","putModule","LexerState","TokenTypeReadable","identifier","integerConstant","floatingPointConstant","booleanConstant","stringConstant","charConstant","true","false","keywordRename","keywordDistinct","keywordTo","keywordAlter","keywordCommit","keywordAdd","keywordDelete","keywordSelect","keywordInsert","keywordInto","keywordValues","keywordUpdate","keywordSet","keywordNo","keywordUse","keywordCreate","keywordReferences","keywordPrimary","keywordForeign","keywordTable","keywordTables","keywordColumn","keywordDrop","keywordUnique","keywordKey","keywordIndex","keywordConstraint","keywordModify","keywordCascade","keywordRestrict","keywordAction","keywordAutoincrement","keywordFrom","keywordWhere","keywordGroup","keywordBy","keywordHaving","keywordOrder","keywordAscending","keywordDescending","keywordNulls","keywordFirst","keywordLast","keywordIs","keywordNull","keywordDatabase","keywordAnd","keywordOr","keywordNot","keywordJoin","keywordNatural","keywordLeft","keywordCross","keywordInner","keywordOuter","keywordOn","keywordAs","keywordLimit","keywordOffset","keywordIn","keywordNotIn","keywordLike","keywordCollate","keywordDefault","keywordComment","keywordEngine","keywordCharset","keywordCharacter","keywordStart","keywordTransaction","keywordIf","keywordExists","keywordLock","keywordUnlock","keywordWrite","keywordRead","leftBracket","rightBracket","leftSquareBracket","rightSquareBracket","leftCurlyBracket","rightCurlyBracket","leftRightSquareBracket","dot","minus","modulo","plus","multiplication","division","singleQuote","doubleQuote","identifierQuote","lower","greater","equal","lowerOrEqual","greaterOrEqual","concatenation","semicolon","colon","comma","backslash","at","hash","pipe","space","tab","newline","identifierChar","comment","endofSourcecode","specialCharList","'","notEqual","linefeed","keywordList","EscapeSequenceList","\"","Lexer","spaceTokens","correspondingBracket","tokenTypesToMerge","first","second","merged","isNot","isNotNull","isNull","input","replace","tokenList","errorList","bracketError","bracketStack","pos","line","column","nonSpaceLastTokenType","nonSpaceLastToken","tokens","errors","currentChar","nextChar","mainState","bracketOpen","bracketClosed","setBracketError","tt","openBracket","char","specialCharToken","pushToken","lexMultilineComment","checkClosingBracket","isDigit","lexEndofLineComment","lexNumber","position","lexStringConstant","lexSpace","lexAnnotation","lexQuotedIdentifier","lexIdentifierOrKeyword","pushError","tripel","newLength","errorLevel","level","a","base","charCode","charCodeAt","posStart","posEnd","substring","escapeChar","beginChar","isDoubleQuotedIdentifier","lastCharWasNewline","commentStart","sign","firstChar","radix","exponent","posExponentStart","exponentString","Number","parseInt","parseFloat","pow","isSpace","toLowerCase","SQLType","SQLBaseType","parameterDescriptions","checkFunction","outputFunction","canCastToList","binaryResultTypes","unaryOperators","ownIndex","splice","tokenType","secondType","resultType","isCommutative","Array","isArray","map","addBinaryOperation","type2","bt2","operator","booleanType","value1","value2","max","baseTypeMap","toLocaleLowerCase","baseTypes","concat","tens","SQLDerivedType","baseType","parameterValues","parameters","returnBaseType","getUnaryResultType","getBinaryResult","substr","textTypes","varcharType","ci","pv","v","charType","textType","tinyTextType","mediumTextType","longTextType","floatTypes","decimalType","vk","trunc","nk","numericType","doubleType","realType","floatType","numberTypes","intType","integerType","tinyIntType","smallIntType","mediumIntType","bigIntType","timeType","dateType","dateTimeType","timestampType","nullType","numericTypes","timeTypes","addBaseTypes","numericBinaryOperators","comparisonOperators","j","characterTypes","booleanOperations","bt","Parser","lookahead","endToken","beginStatementKeywords","completionHints","sqlStatements","addCompletionHint","initializeLookahead","lastToken","parseMain","ct","token1","lastComment","commentBefore","cct","quickFix","assign","nextToken","skip","invokeSemicolonAngel","isOperatorOrDot","title","editsProvider","uri","resource","edit","range","startLineNumber","startColumn","endLineNumber","endColumn","severity","monaco","MarkerSeverity","getSemicolonAngel","register","expectedTokens","operatorPrecedence","ret","deltaColumns","tpos","deltaInsideToken","tokenPos","getCurrentPosition","mainProgram","afterLastStatement","semicolonAfterLastStatement","getCurrentPositionPlus","isEnd","oldPos","errorsBeforeStatement","startPosition","st","parseStatement","hasErrors","ast","from","to","getEndOfPosition","acceptedBySQLite","beginStatementTokens","firstBadToken","retStatements","parseSelect","parseInsert","parseCreateTableOrDatabase","parseUpdate","parseDelete","parseDropTable","parseAlterTable","parseSet","parseUse","expect","parseLockUnlock","node","omittedeStatement","endPosition","symbolTable","tableIdentifier","tableIdentifierPosition","addCompletionHintHere","parseRenameTableOrColumn","parseAlterTableAdd","parseDropColumn","comesToken","getEndOfCurrentToken","newTableName","oldColumnName","oldColumnPosition","newColumnName","unique","parseAddColumn","parseAddPrimaryKey","parseAddIndex","parseModifyColumn","parseAddConstraint","fki","parseForeignKeyDefinition","foreignKeys","referencesTable","referencesColumn","referencesPosition","parseReferences","pos0","pos1","modifyColumnInfo","parseColumnDefinition","primaryKeys","index","index_name","indices","columnDefBegin","columnDef","ifExists","whereNode","whereNodeBegin","whereNodeEnd","parseTerm","columnIdentifiers","columnIdentifierPositions","valuePosBegin","valuePosEnd","parseCreateDatabase","parseCreateTable","ifNotExists","pos2","columnList","combinedPrimaryKeyColumns","foreignKeyInfoList","uniqueConstraints","primaryKeyAlreadyDefined","parsePrimaryKeyTerm","parseUniqueTerm","columnNode","isPrimary","isAutoIncrement","columns","uniqueConstraint","notNull","parseType","hintColumns","hintTables","hints","additionalColumns","praefix","suffix","datatypes","toString","getBaseType","alreadySeenKeywords","foreignKeyInfo","collate","defaultValue","fromConstantType","canCastTo","valuesPosition","columnsPosition","table","alias","parseValueLists","insideListTokens","outerFirst","leftBracketPosition","constantType","constant","constantNode","columnListStart","fromNode","parentStatement","parseColumnList","columnListKeywordArray","findIndex","allColumns","fromListKeywordArray","fromStartPosition","dontHint","parseTableOrSubQuery","hintEndPosition","fromEndPosition","unshift","whereKeywordArray","whereStart","groupKeywordArray","groupStart","groupByNode","parseGroupBy","orderStart","orderByNode","parseOrderBy","limitNode","parseLimit","numberOfRows","ln","offset","gbn","tokenTypesAfterGroupBy","term","having","obnList","obn","leftSide","parseAtomicTableOrSubQuery","parseJoinOperator","rightSide","firstOperand","secondOperand","on","selectStatement","subquery","query","tokenTypesAfterListEnd","allowAliases","distinct","columnTerm","parseTermBinary","precedence","left","parseUnary","operators","right","binaryOp","parseBracket","unaryOp","operand","tt1","isStringConstant","parseDotOrArrayChains","identifier1","position1","parseMethodCallParameters","rightBracketPosition","callMethod","operands","nodes","commaPositions","secondIdentifier","identifierLeft","identifierRight","list","elements","constantTypes","tokenBeforeBracket","selectNode","listNode","parseList","termInsideBrackets","parameter","Column","isPrimaryKey","isNullable","cs","typeMatch1","completeTypeSQL","baseTypeIdentifier","commaSeparatedParameters","trim","fromColumnStructure","Table","ts","size","tsList","tables","fromTableStructure","columnStructureToColumnMap","referencedCs","references","referencedColumn","SymbolTable","parentSymbolTable","positionFrom","positionTo","childSymbolTables","symbols","symbolList","parent","databaseStructure","fromTableStructureList","storeTableSymbols","storeSymbol","posOfDefinition","referencedOnPositions","symbol","containsPosition","shortestSymbolTableContainingPosition","shortestPosition","st1","findTableAtPosition","findTables","SQLMethodParameter","SQLMethod","isAggregating","returnType","acceptsStarParameter","SQLMethodStore","methods","pushOneParameterMethod","countMethod","parameterType","instance","escapeHtml","unsafe","twoDez","z","isDate","inputText","opera1","opera2","lopera1","lopera2","pdate","dd","mm","yy","lyear","isDateTime","dateStr","isTime","CompilerStatus","SymbolResolver","databaseTool","symbolTableStack","mainSymbolTable","statement","astNode","resolveSelect","resolveInsert","resolveCreateTable","resolveUpdate","resolveDelete","resolveDropTable","resolveAlterTable","getCurrentSymbolTable","resultTable","pushNewSymbolTable","joinedTables","resolveTableOrSubQuery","extractDatabaseStructure","resolveTerm","c1","sqlType","whereType","getBaseTypeName","findTable","whereSymbolTable","ciPos","createTableNode","thisTable","cn","tosNode","tableList","storeTableIntoSymbolTable","tableAlias","resolveNotIn","typeLeft","typeRight","getBinaryResultType","operandType","resultType1","resolveMethodCall","resolveIdentifier","resolveDot","selectTable","tableSymbols","findColumn","getInstance","getMethods","found","methodParameter","operatorString","leftType","pType","element","elementType","tableCompletionTo","valueList","destType","Compiler","compilerStatus","compiledButNothingToRun","compiling","t0","lexer","clear","lexed","lex","getCurrentlyEditedModule","getBottomDiv","errorManager","showParenthesisWarning","startRegistering","parser","getDatabaseTool","symbolResolver","start","compilerMessage","healSemicolons","readyToRun","Module","oldErrorDecorations","identifierPositions","methodCallPositions","uriCounter","uriMap","Uri","scheme","editor","createModel","updateOptions","tabSize","onDidChangeContent","versionId","isEmbedded","main1","text_before_revision","student_edited_after_revision","bottomDiv","homeworkManager","showHomeWorkRevisionButton","renderHomeworkButton","fromPosition","toPosition","hintKeywords","ch","fromColumn","fromLine","toColumn","toLine","hintColumnsOfTable","toUpperCase","chList","sel","selStart","selEnd","stmt","compare","b","lineNumber","bestCh","bestRangeLength","rangeLength","submitted_date","file_type","ec","getValue","EndOfLinePreference","LF","positionList","positionsOnLine","bestFoundPosition","el","sort","e1","e2","errorLevelCompare","level1","level2","ModuleStore","moduleMap","module_id","ms","copy","includeSystemModules","excludedModuleName","moduleName","openContextMenu","items","x","y","mousePointer","PointerEvent","$contextMenu","$openSubMenu","parentMenuItem","mi","caption","link","$item","subMenu","color","ev","stopPropagation","remove","document","off","$link","hide","width","top","append","e","leftRight","innerWidth","xp","topBottom","innerHeight","yp","show","makeTabs","tabDiv","headings","not","tabs","target","removeClass","addClass","trigger","makeDiv","klass","div","jo_mouseDetected","animateToTransparent","$element","cssProperty","startColorRgb","duration","colorPraefix","delta","animate","copyTextToClipboard","navigator","clipboard","writeText","textArea","createElement","style","body","appendChild","focus","select","execCommand","removeChild","fallbackCopyTextToClipboard","TemplateUploader","dump","reason","waitOverlay","dbTool","export","deflate","uploadIntern","processData","headers","DatabaseSettingsDialog","init","$dialog","showMainWindow","saveNameAndPublishedTo","setValues","setNewSecret","$copyButton","prop","checked","each","setNameAndPublishedTo","val","uploadCurrentDatabase","getDatabaseSettings","secrets","is_admin","is_schooladmin","empty","Workspace","permissions","database_id","restoreFromData","currentFileId","currentlyOpenModule","withFiles","$buttonDiv","$htmlFirstLine","$button","ActionManager","$mainElement","actions","keyEntries","buttons","executeKeyDownEvent","actionIdentifier","action","button","active","activeElement","tagName","keyCode","ctrlKey","shiftKey","altKey","actionEntries","actionEntry","preventDefault","ErrorManager","$bottomDiv","$mainDiv","oldDecorations","minimapColor","lightBulbOnClickFunctionList","$bracket_warning","children","getMonacoEditor","errorCountMap","$errorDiv","markers","decorations","$errorList","getSortedAndFilteredErrors","getErrorCount","linesDecorationsClassName","borderLeftClass","lightBulbClass","class","onClickFunction","edits","executeEdits","Range","forceMoveMarkers","processError","Warning","Info","relatedInformation","options","minimap","MinimapPosition","Inline","setModelMarkers","deltaDecorations","$file","$error","registerLightbulbOnClickFunctions","locf","$errorDivs","$div","$lineColumn","category","$message","showError","Main","setModuleActive","revealRangeInCenter","className","HomeworkManager","showRevisionActive","$homeworkTab","$homeworkTabLeft","$homeworkTabRight","prepend","$showRevisionButton","hideRevision","showRevision","originalModel","modifiedModel","diffEditor","createDiffEditor","getElementById","enableSplitViewResizing","originalEditable","readOnly","renderSideBySide","setModel","original","modified","dispose","daysWithModules","dateString","date","Date","dateWithoutTime","getDate","getMonth","getFullYear","dateToStringWithoutTime","dwm","day","m1","m2","localeCompare","moduleWithWorkspace","setWorkspaceActive","BottomDiv","initGUI","MyCompletionItemProvider","triggerCharacters","keywordCompletionItems","keywordToSnippetMap","setupKeywordCompletionItems","getModuleByMonacoModel","wfc","provideCompletionItemsIntern","sw","_contentWidgets","widget","toggleDetails","isStringLiteral","textUntilPosition","getValueInRange","textAfterPosition","completionHint","getCompletionHint","completionItems","addKeywordCompletionItems","dotMatch","ibMatch","identifierAndBracketAfterCursor","addIdentifierCompletionItems","addDotCompletionItems","word","getWordUntilPosition","replaceWordRange","insertAfterCursorRange","item","insertText","suggestions","textAfterDot","textBeforeDot","rangeToReplace","label","detail","filterText","insertTextRules","languages","CompletionItemInsertTextRule","KeepWhitespace","CompletionItemKind","Field","tableIdentifiers","columnIdentifier","InsertAsSnippet","Snippet","Class","sortText","columList","withTable","_b","snippet","Keyword","posMin","posMax","watchDog","arguments","MySignatureHelpProvider","signatureHelpTriggerCharacters","signatureHelpRetriggerCharacters","compileIfDirty","provideSignatureHelpLater","getModel","methodCallPosition","rightMostPosition","mcp","identifierPosition","getSignatureHelp","parameterIndex","cp","activeParameter","activeSignature","signatures","MyHoverProvider","selection","getSelection","getElementAtPosition","getWordUnderCursor","desc","keywordDescriptions","contents","getValueLengthInRange","end","isInsideIdentifierOrArrayDescriptor","begin","isInsideOperator","isInsideIdentifierChain","MyCodeActionProvider","diagnostics","isPreferred","MyReferenceProvider","usagePositions","referencePositions","upInCurrentModule","up","Helper","targetElement","direction","$helper","bottom","height","html","close","fadeIn","fadeOut","mainBase","helperHistory","flag","sendUpdateUserSettings","openHelper","Editor","showMinimap","cw","dontPushNextCursorMove","lastTime","elementDecoration","extensions","conf","onEnterRules","beforeText","afterText","indentAction","IndentAction","IndentOutdent","appendText","None","removeText","comments","lineComment","blockComment","brackets","autoClosingPairs","surroundingPairs","setLanguageConfiguration","setMonarchTokensProvider","defaultToken","tokenPostfix","ignoreCase","escapes","keywords","builtinFunctions","builtinVariables","pseudoColumns","tokenizer","root","include","cases","whitespace","numbers","strings","string","complexIdentifiers","quotedIdentifier","scopes","defineVscSQL","defineTheme","inherit","rules","foreground","fontStyle","colors","lightbulb","enabled","lineDecorationsWidth","peekWidgetDefaultFocus","fixedOverflowWidgets","quickSuggestions","quickSuggestionsDelay","fontSize","fontFamily","fontWeight","roundedSelection","selectOnLineNumbers","automaticLayout","scrollBeyondLastLine","occurrencesHighlight","autoIndent","dragAndDrop","formatOnType","formatOnPaste","suggestFontSize","suggestLineHeight","suggest","localityBonus","insertMode","parameterHints","cycle","mouseWheelZoom","scrollbar","vertical","horizontal","theme","mouseWheelListener","changeEditorFontSize","deltaY","onDidChangeConfiguration","hasChanged","EditorOption","fontInfo","onDidChangeCursorPosition","onDidChangeModel","removeEventListener","addEventListener","passive","setActiveAfterExternalModelSet","registerHoverProvider","registerCompletionItemProvider","registerCodeActionProvider","registerReferenceProvider","registerSignatureHelpProvider","onMouseDown","MouseTargetType","GUTTER_GLYPH_MARGIN","GUTTER_LINE_NUMBERS","isAfterLines","onMarginMouseDown","remeasureFonts","addActions","onDidType","insertEndOfComment","newLine","newColumn","setPosition","getPosition","prevLine","getLineContent","trimRight","endsWith","getLineCount","spacesAtBeginningOfLine","trimLeft","fontSizePx","getTime","editorfs","getOptions","viewModeController","saveFontSize","factor","documentElement","setProperty","dynamic","newEditorFs","setFontSize","addAction","keybindings","KeyMod","CtrlCmd","KeyCode","KEY_K","precondition","keybindingContext","contextMenuGroupId","contextMenuOrder","run","ed","getAction","Enter","getActionManager","isWholeLine","overviewRuler","darkColor","OverviewRulerLane","Left","executeActionActive","getSQLSTatementsAtSelection","sqlStatement","classname","zIndex","setActive","showHelper","Formatter","autoFormatTriggerCharacters","registerDocumentFormattingEditProvider","registerOnTypeFormattingEditProvider","format","tokenlist","lastNonSpaceToken","indentLevel","curlyBracesOpenAtLines","indentLevelAtSwitchStatements","switchHappend","lastTokenWasNewLine","roundBracketsOpen","replaceBetween","insertSpaces","deleteSpaces","openedAtLine","repeat","nextToken1","nextToken2","lastToken1","lastToken2","isBinaryOperator","lastTokenIsOperator","nextTokenIsOperator","getNextNonSpaceToken","beginNextLine","token2","currentIndentation","il","correctIndentation","lowerGeneric","lowerBelongsToGenericExpression","greaterGeneric","greaterBelongsToGenericExpression","tokenBefore","spaces","deleteOverlappingRanges","currentIndex","numberOfSpaces","WorkerSim","initsql","initSqlJs","locateFile","scriptDirectory","SQL1","SQL","createDb","worker","postMessageToClient","buff","config","ready","results","exec","row","postMessage","finished","DatabaseTool","databaseDirectoryEntries","queryId","querySuccessCallbacksMap","queryErrorCallbackMap","sqliteMagicBytes","queries","callbackAfterInitializing","callbackAfterRetrievingStructure","getWaitOverlay","terminate","javaOnlineDir","jo_doc","Worker","querySuccessCallback","queryErrorCallback","delete","queryCount","execQuery","setProgress","shift","executeQuery","retrieveDatabaseStructure","sql","params","getJSON","entries","sql1","result1","parseDatabaseStructure","tableNameToStructureMap","tableName","tableSQL","tableStructure","completeSQL","columnArray","foreignKeyList","columnArray1","dflt_value","columnStructure","typeLengths","fkInfo","referencesRawData","StatementCleaner","MaxRowsPerInsert","sqlCleaned","cleanCreateTableStatement","cleanInsertStatement","statementHeader","lines","vline","cleanValue","cleanColumnDef","cleanForeignKeyInfo","pkc","uk","fkiString","onDelete","onUpdate","MySqlImporter","unzipURL","fetch","importFromText","unzipFile","reader","FileReader","onload","readAsText","zip","ZipReader","HttpReader","unzipIntern","BlobReader","getEntries","filename","getData","TextWriter","onprogress","lexOutput","createTableNodes","insertNodes","tableModifyingNodes","tmn","findCreateTableNode","autoIncrementColumn","pcn","findCreateTableColumnNode","mci","mcn","fk","indexIdentifier","makeDatabase","tableNode","statementCleaner","clean","promise","initializeWorker","binDump","DatabaseImportExport","loadFromFile","ld","ab","getDumpType","readAsArrayBuffer","prompt","isBlob","blob","Blob","msSaveOrOpenBlob","createEvent","download","href","URL","createObjectURL","dataset","downloadurl","initEvent","dispatchEvent","downloadFile","NewDatabaseDialog","$templatelist","fetchTemplateList","templatelist","tle","$tle","ownerName","$templateName","$dropZone","evt","originalEvent","dataTransfer","dropEffect","importFile","$dumpFileInput","createMode","hasClass","workspaceData","createWorkspace","$template","template_database_id","code","tIndex","otherDatabaseId","template_id","newTemplateId","sendCreateWorkspace","accordionElement","renderSettingsButton","importer","isDatabase","dbUncompressed","MainMenu","currentSubmenu","openSubmenusOnMousemove","mainMenu","switchTheme","saveToFile","initMenu","setTheme","menu","initMenuitemCallbacks","opensubmenu","AccordionPanel","accordion","flexWeight","newButtonClass","buttonNewTitle","defaultIconClass","withDeleteButton","withFolders","enableDrag","acceptDropKinds","dontSortElements","addPanel","$newFolderAction","addFolder","newElement","newFolderCallback","scrollIntoView","$collapseAllAction","collapseAll","slideUp","$captionElement","$listElement","fixed","grow","$buttonNew","pathArray","selectedElement","getSelectedElement","name1","path1","isFolder1","name2","path2","isFolder2","cmp","compareWithPath","insertIndex","getElementIndex","$elements","elementAtIndex","before","renderElement","insertElement","renameElement","$accordionDiv","getCurrentlySelectedPath","after","newFilesElementCallback","$htmlSecondLine","insertAfter","selectCallback","$listOuter","$ce","$li","targetGrow","parts","toggleClass","currentlyDraggedElementKind","element1","currentlyDraggedElement","moveElement","expanded","aName","sortName","bName","cssClass","expandedCollapsed","pathHtml","addElementActionCallback","$elementAction","$filedragpart","effectAllowed","dropElementCallback","pathIsCollapsed","slideDown","pressTimer","contextmenuHandler","contextMenuItems","renameCallback","newDatabaseElementCallback","contextMenuProvider","cmi","pageX","pageY","clearTimeout","getChildElements","deleteCallback","elementToMove","destinationFolder","destinationPath","movedElements","sourcePath","oldPathLength","moveCallback","folder","pointPos","elementWithText","elementToReplace","renameDoneCallback","selectionRange","$input","setSelectionRange","newValue","makeEditable","newText","invokeCallback","ae1","findElement","pathString","elPath","ps","Accordion","$html","panel","renderOuterHtmlElements","DistributeToStudentsDialog","classes","studentCount","$studentList","students","student","$studentLine","$studentClass","$studentName","rufname","familienname","$dialogMain","distributeWorkspace","sendDistributeWorkspace","ProjectExplorer","$projectexplorerDiv","programPointerModule","programPointerDecoration","lastOpenModule","initFilelistPanel","initWorkspacelistPanel","successfulNetworkCommunicationCallback","sendCreateFile","newName","callbackIfSuccessful","sendDeleteWorkspaceOrFile","is_teacher","$homeworkButtonDiv","$newWorkspaceAction","removeWorkspace","enableNewButton","databaseExplorer","getResultsetPresenter","dest","droppedElement","dropEffekt","$homeAction","onHomeButtonClicked","hideHomeworkTab","workspaceAccordionElement","cmiList","teacherExplorer","classPanel","restoreOwnWorkspaces","setCaption","moduleList","errorCount","errorCountS","setTextAfterFilename","initializeDatabaseTool","fetchDatabase","currentWorkspace_id","renderFiles","nonSystemModules","notifier","refreshAfterRetrievingDBStructure","getHistoryViewer","clearAndShowStatements","cem","editorState","saveViewState","hideHomeworkRevisionButton","restoreViewState","setCurrentlyEditedModule","showProgramPointer","programPointerPosition","revealRangeInCenterIfOutsideViewport","Center","beforeContentClassName","findModuleByFile","RightDiv","$rightDiv","isWholePage","$tabs","$headings","rightdiv_width","$wholeWindow","Sliders","md","clientX","dx","moveLeftPanel","clientY","dy","moveBottomDiv","moveRightDiv","sliderknobLeft","stopImmediatePropagation","sliderknobRight","$editor","mewidth","layout","meheight","$leftPanel","TeacherExplorer","classData","studentPanel","initStudentPanel","initClassPanel","renderClasses","ws_userId","ownWorkspaces","currentOwnWorkspace","restoreWorkspaces","setExplorerColor","showHomeworkTab","attachToWorkspaces","renderWorkspaces","ea","renderStudents","userDataList","ud","classDataList","cd","ThemeManager","themes","initThemes","internalSwitchTheme","monacoTheme","cssColors","UserMenu","Login","$loginSpinner","loginHappened","username","password","viewModes","classDiagram","waitForGUICallback","initTeacherExplorer","classdata","initializeTimer","setFixed","initViewMode","initializeNotifierClient","startupComplete","errorMessage","resultsetPresenter","removePanels","ViewModeController","$buttonsContainer","$buttonMap","highContrast","editorHasFullWidth","$buttonEditorFullscreen","$buttonPresentationMode","$buttonMonitorMode","am","actionManager","registerAction","toggleEditorFullwidth","setMode","saveSettings","otherMode","viewMode","viewModeChosen","themeManager","getChosenViewMode","userDataDirty","monitor","presentation","SemicolonAngel","semicolonPositions","isThereAgain","oldEvidence","firstSeenMs","currentlyEditedModule","cursorLine","isCurrentModule","editOperations","abs","setSelection","DatabaseExplorer","collapsedTables","dbstructure","$table","renderTable","isCollapsed","showTable","$columns","image","referencesHtml","autoincrement","$column","$treeSwitch","$columnList","parents","ProgramControlButtons","$buttonStart","$buttonRollback","isActive","executeSelectedStatements","rollback","ResultsetPresenter","paginationSize","writeQueryListeners","showResultsBusy","showResultPending","$paginationDiv","$arrowLeft","$infoDiv","$arrowRight","paginationFrom","floor","showResults","activateButtons","paginationAll","min","listener","fetchSelectedStatements","hasDDLStatements","some","isDDLStatement","hasWriteStatements","isWriteStatement","executeDDLWriteStatementsEmbedded","executeDDLWriteStatementsInOnlineIDE","executeStatements","sucessfullyExecutedModifyingStatements","getDatabaseExplorer","refresh","notify","getNewStatements","new_statements","firstStatementIndex","executeNewStatements","AddDatabaseStatements","appendStatements","modifyingStatements","resetDatabase","fromIndex","executeStatementsString","successfullyExecutedModifyingStatements","showErrors","callback1","laterSelectExists","isSelectStatement","presentResultsIntern","minimapColors","$runtimeErrorsTab","$runtimeErrorsTabHeading","showErrorDecorations","$errorLine","$sqlDiv","colorize","$messageDiv","$resultTabheading","$resultHeader","headerDiv","$bodyDiv","waitFunction","$header","rows","$row","cell","monacoEditor","Notifier","isOpen","isPolling","counter","isLongPolling","longPollCounter","databaseVersion","onOpen","startLongPolling","rollbackLocal","callbackIfTooFewStatements","callbackIfDone","doRefreshDatabaseExplorer","poll","getNewStatementsHttp","rollbackToVersion","longPoll","resp","WaitOverlay","$waitDiv","visible","fadeOutPending","$bitteWartenText","$bitteWartenProgress","HistoryViewer","$historyPanel","panelEntries","panelEntry","makePanelEntry","makeLastButtonActive","$rollbackButton","$index","$text","$copybutton","$rollbackbutton","rollbackEmbedded","rollbackLocalNeeded","writeQueryManager","initialTemplateDump","initialStatements","writtenStatements","historyViewer","rightDiv","compiler","semicolonAngel","matchMedia","matches","login","initSliders","checkStartupComplete","startTimer","sendBeacon","timerHandle","isDirty","compile","renderErrorCount","require","paths","availableLanguages","ignoreDuplicateModules","initEditor"],"mappings":"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+I,KAAK+C,gBAAgB0G,aAAaH,GACrC,MAAND,IAAYA,EAAGJ,gBAAkB3W,GACpB8S,EAAU5B,YAChBkG,UAAUpX,KAxgB7B,sBA4gBI,SAAS0M,GACL,IAAIoG,EAAYnO,KAAK+I,KAAK6H,iBAG1B5K,EAAK,WAF0B,CAAE4H,YAAaO,EAAU7G,GAAIF,QAAS+G,EAAUM,SAASrH,UAE9D,SAACV,GACnBA,EAASD,QAETsB,EAAS,KAAMoG,EAAUM,SAASrH,QAAUV,EAASmI,cAErDhB,MAAMnH,EAASE,SACfmB,EAASrB,EAASE,SAAS,OAEhC,SAACA,GACAiH,MAAMjH,GACNmB,EAASnB,GAAS,W,8EA1hB9B,K,yHCVA,SAAYiE,GACRA,+BAEAA,yCACAA,qDACAA,yCACAA,uCACAA,mCACAA,mBACAA,qBAEAA,qCACAA,yCACAA,8BACAA,oCACAA,sCACAA,gCACAA,sCACAA,sCACAA,sCACAA,kCACAA,sCACAA,sCACAA,gCACAA,8BACAA,gCACAA,sCACAA,8CACAA,wCACAA,wCACAA,oCACAA,sCACAA,sCACAA,kCACAA,sCACAA,gCACAA,oCACAA,8CACAA,sCACAA,wCACAA,0CACAA,sCACAA,oDACAA,kCACAA,oCACAA,oCACAA,8BACAA,sCACAA,oCACAA,4CACAA,8CACAA,oCACAA,oCACAA,kCACAA,8BACAA,kCACAA,0CAEAA,8BACAA,gCACAA,gCAEAA,kCACAA,wCACAA,kCACAA,oCACAA,oCACAA,oCACAA,8BACAA,8BACAA,oCACAA,sCACAA,8BACAA,oCACAA,kCACAA,wCACAA,wCACAA,wCACAA,sCACAA,wCACAA,4CAEAA,oCACAA,gDACAA,8BACAA,sCAEAA,kCACAA,sCACAA,oCACAA,kCAGAA,kCACAA,oCACAA,8CACAA,gDACAA,4CACAA,8CACAA,wDAGAA,kBACAA,wBACAA,sBAAOA,oBAAMA,wCAAgBA,4BAC7BA,kCAAaA,kCACbA,0CACAA,uBAAOA,2BAASA,qCAAcA,yCAC9BA,uCACAA,uBACAA,6BAGAA,+BAEAA,uBAGAA,uBAGAA,+BAGAA,qBAGAA,iBAGAA,qBA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","file":"sql-ide.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","import { LoginRequest, PerformanceData } from \"./Data.js\";\r\n\r\n// export var credentials: { username: string, password: string } = { username: null, password: null };\r\n\r\nexport class PerformanceCollector {\r\n    static performanceData: PerformanceData[] = [];\r\n    static performanceDataCount: number = 0;\r\n    static lastTimeSent: number = performance.now();\r\n\r\n    static registerPerformanceEntry(url: string, startTime: number) {\r\n        let pe: PerformanceData = PerformanceCollector.performanceData.find(pe => pe.url == url);\r\n        if (pe == null) {\r\n            pe = { count: 0, sumTime: 0, url: url };\r\n            PerformanceCollector.performanceData.push(pe);\r\n        }\r\n        pe.count++;\r\n        let dt = Math.round(performance.now() - startTime);\r\n        pe.sumTime += dt;\r\n        PerformanceCollector.performanceDataCount++;\r\n        // console.log(\"Performance entry for path \" + pe.url + \": \" + dt + \" ms, aggregated: \" + pe.sumTime + \" for \" + pe.count + \" requests.\");\r\n    }\r\n\r\n    static sendDataToServer() {\r\n        if (performance.now() - PerformanceCollector.lastTimeSent > 3 * 60 * 1000) {\r\n            let request = {\r\n                data: PerformanceCollector.performanceData\r\n            }\r\n\r\n            PerformanceCollector.performanceData = [];\r\n            PerformanceCollector.performanceDataCount = 0;\r\n            PerformanceCollector.lastTimeSent = performance.now();\r\n\r\n            ajax(\"collectPerformanceData\", request, () => { })\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport function ajax(url: string, request: any, successCallback: (response: any) => void,\r\n\r\n    errorCallback?: (message: string) => void) {\r\n\r\n    showNetworkBusy(true);\r\n    let time = performance.now();\r\n\r\n    $.ajax({\r\n        type: 'POST',\r\n        async: true,\r\n        data: JSON.stringify(request),\r\n        contentType: 'application/json',\r\n        url: \"servlet/\" + url,\r\n        success: function (response: any) {\r\n\r\n            PerformanceCollector.registerPerformanceEntry(url, time);\r\n\r\n            showNetworkBusy(false);\r\n            if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n                let error = \"Fehler bei der Bearbeitung der Anfrage\"\r\n                if (response.message != null) error = response.message;\r\n\r\n                if (error == \"Not logged in\") {\r\n                    // setTimeout(() => newLogin(url, request, successCallback, errorCallback), 10000);\r\n                    // location.reload();\r\n                }\r\n\r\n                if (errorCallback) errorCallback(error);\r\n            } else {\r\n                successCallback(response);\r\n            }\r\n            return;\r\n\r\n        },\r\n        error: function (jqXHR, message) {\r\n            showNetworkBusy(false);\r\n            if (errorCallback) {\r\n                let statusText = \"Server nicht erreichbar.\"\r\n                if (jqXHR.status != 0) {\r\n                    statusText = \"\" + jqXHR.status\r\n                }\r\n                errorCallback(message + \": \" + statusText);\r\n                return;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function showNetworkBusy(busy: boolean) {\r\n    if (busy) {\r\n        jQuery('.jo_network-busy').css('visibility','visible');\r\n    } else {\r\n        jQuery('.jo_network-busy').css('visibility','hidden');\r\n    }\r\n}\r\n\r\n\r\n","import { DatabaseData } from \"../communication/Data.js\";\r\n\r\nexport class WDatabase {\r\n\r\n    id: number;\r\n    name: string;\r\n\r\n    templateDump: Uint8Array;\r\n    based_on_template_id: number;\r\n    templateName: string;\r\n\r\n    statements: string[];\r\n    published_to: number;\r\n    version: number;\r\n    description: string;\r\n    owner_id: number;\r\n\r\n    static fromDatabaseData(data: DatabaseData, version: number): WDatabase {\r\n\r\n        let db = new WDatabase();\r\n\r\n        db.id = data.id;\r\n        db.name = data.name;\r\n        db.statements = data.statements;\r\n        db.published_to = data.published_to;\r\n        db.version = version;\r\n        db.description = data.description;\r\n        db.templateDump = null;\r\n        db.based_on_template_id = data.based_on_template_id;\r\n        db.owner_id = data.owner_id;\r\n        return db;\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n","export class CacheManager {\r\n    \r\n    fetchTemplateFromCache(databaseId: number, callback: (templateDump: Uint8Array) => void) {\r\n        if(databaseId == null){callback(null); return;}\r\n        let that = this;\r\n        if(!this.cacheAvailable()) callback(null);\r\n        this.getCache((cache) => {\r\n            cache.match(that.databaseIdToCacheIdentifier(databaseId)).then(\r\n                (value)=>{\r\n                    value.arrayBuffer().then((buffer) => callback(new Uint8Array(buffer)));\r\n                })\r\n                .catch(() => callback(null));\r\n        })        \r\n    }\r\n\r\n    saveTemplateToCache(databaseId: number, templateDump: Uint8Array) {\r\n        if(!this.cacheAvailable()) return;\r\n        let that = this;\r\n        this.getCache((cache) => {\r\n            cache.put(that.databaseIdToCacheIdentifier(databaseId), new Response(templateDump));\r\n        })        \r\n    }\r\n\r\n    cacheAvailable(): boolean {\r\n        return 'caches' in self;\r\n    }\r\n\r\n    getCache(callback: (cache: Cache) => void) {\r\n        caches.open('my-cache').then(callback);\r\n    }\r\n\r\n    databaseIdToCacheIdentifier(databaseId: number): string {\r\n        return \"/onlineIdeTemplateDb\" + databaseId;\r\n    }\r\n\r\n}","import { Main } from \"../main/Main.js\";\nimport { ajax } from \"./AjaxHelper.js\";\nimport { GetWebSocketTokenResponse } from \"./Data.js\";\nimport { NetworkManager } from \"./NetworkManager.js\";\n\ntype SubscriptionMessageFromClient = {\n    command: number,  // 1 == \"subscribe\", 2 == \"disconnect\"\n    // 3 == \"keepalive request\"\n    token?: string   // when \"subscribe\"\n}\n\ntype SubscriptionMessageFromServer = {\n    command: number // 1 == Acknoledge Connection, 2 == Notify, 3 == disconnect, 4 == keep alive response\n}\n\ntype NotifierState = \"connecting\" | \"connected\" | \"subscribed\" | \"disconnected\";\n\nexport class NotifierClient {\n\n    connection: WebSocket;\n    state: NotifierState;\n\n    constructor(private main: Main, private networkManager: NetworkManager){\n        this.connect();\n    }\n\n    connect() {\n        this.state = \"connecting\";\n\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\n\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/subscriptionwebsocket\";\n            this.connection = new WebSocket(url);\n\n            this.connection.onerror = (error: Event) => { this.onError(error); }\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\n\n            this.connection.onopen = (event: Event) => {\n                let request: SubscriptionMessageFromClient = {\n                    command: 1,   // \"subscribe\"\n                    token: response.token\n                }\n\n                this.state = \"connected\";\n                this.sendIntern(JSON.stringify(request));\n\n            }\n\n            let that = this;\n            setTimeout(() => {\n                if(this.state != \"subscribed\"){\n                    this.networkManager.forcedUpdateEvery = 1;\n                    this.networkManager.counterTillForcedUpdate = 1;\n                }\n            }, 7000);\n\n        });\n    }\n\n    disconnect(){\n        let request: SubscriptionMessageFromClient = {\n            command: 2   // \"disconnect\"\n        }\n\n        this.state = \"connected\";\n        this.sendIntern(JSON.stringify(request));\n\n    }\n\n    unsentMessages: string[] = [];\n    sendIntern(message: string) {\n\n        if (this.state != \"disconnected\") {\n            try {\n                this.connection.send(message);\n            } catch (exception) {\n                console.log(exception);\n            }\n        }\n    }\n\n    onClose(event: CloseEvent) {\n        this.state = \"disconnected\";\n    }\n\n    onMessage(event: MessageEvent) {\n\n        let response: SubscriptionMessageFromClient = JSON.parse(event.data);\n        if (response.command == undefined) return;\n\n        // 1 == Acknoledge Connection, 2 == Notify, 3 == disconnect, 4 == keep alive response\n        switch (response.command) {\n            case 1: // Acknoledge Connection\n                this.state = \"subscribed\";\n                break;\n            case 2: // Notify\n                this.networkManager.sendUpdates(() => {}, true);\n                break;\n            case 3: // disconnect\n                this.state = \"disconnected\";\n                break;\n            case 4: // keep alive response\n                break;\n        }\n    }\n\n    onError(error: Event) {\n        console.log(\"Fehler beim Notifier-Websocket\");\n    }\n\n}","import { Main } from \"../main/Main.js\";\r\nimport { ajax } from \"./AjaxHelper.js\";\r\nimport { WorkspaceData, FileData, SendUpdatesRequest, SendUpdatesResponse, CreateOrDeleteFileOrWorkspaceRequest, CRUDResponse, UpdateUserSettingsRequest, UpdateUserSettingsResponse, DuplicateWorkspaceRequest, DuplicateWorkspaceResponse, ClassData, DistributeWorkspaceRequest, DistributeWorkspaceResponse, GetDatabaseRequest, getDatabaseResponse, GetNewStatementsRequest, GetNewStatementsResponse, AddDatabaseStatementsRequest, AddDatabaseStatementsResponse, TemplateListEntry, GetTemplateListRequest, GetTemplateListResponse, CreateWorkspaceData, GetDatabaseSettingsResponse, GetDatabaseSettingsRequest, setDatabaseSecretRequest as SetDatabaseSecretRequest, SetDatabaseSecretResponse, SetPublishedToRequest, SetPublishedToResponse, GetTemplateRequest, RollbackRequest, RollbackResponse } from \"./Data.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { WDatabase } from \"../workspace/WDatabase.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { CacheManager } from \"./CacheManager.js\";\r\nimport { NotifierClient } from \"./NotifierClient.js\";\r\n\r\nexport class NetworkManager {\r\n\r\n    timerhandle: any;\r\n\r\n    ownUpdateFrequencyInSeconds: number = 20;\r\n    teacherUpdateFrequencyInSeconds: number = 5;\r\n\r\n    updateFrequencyInSeconds: number = 20;\r\n    forcedUpdateEvery: number = 4;\r\n    counterTillForcedUpdate: number = 2;\r\n    secondsTillNextUpdate: number = this.updateFrequencyInSeconds;\r\n    errorHappened: boolean = false;\r\n\r\n    interval: any;\r\n\r\n    notifierClient: NotifierClient;\r\n\r\n    constructor(private main: Main, private $updateTimerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initializeTimer() {\r\n\r\n        let that = this;\r\n        this.$updateTimerDiv.find('svg').attr('width', that.updateFrequencyInSeconds);\r\n\r\n        if (this.interval != null) clearInterval(this.interval);\r\n\r\n        this.interval = setInterval(() => {\r\n\r\n            if (that.main.user == null) return; // don't call server if no user is logged in\r\n\r\n            that.secondsTillNextUpdate--;\r\n\r\n            if (that.secondsTillNextUpdate < 0) {\r\n                that.secondsTillNextUpdate = that.updateFrequencyInSeconds;\r\n                this.counterTillForcedUpdate--;\r\n                let forceUpdate = this.counterTillForcedUpdate == 0;\r\n                if (forceUpdate) this.counterTillForcedUpdate = this.forcedUpdateEvery;\r\n                that.sendUpdates(() => { }, forceUpdate);\r\n            }\r\n\r\n            let $rect = this.$updateTimerDiv.find('.jo_updateTimerRect');\r\n\r\n            $rect.attr('width', that.secondsTillNextUpdate + \"px\");\r\n\r\n            if (that.errorHappened) {\r\n                $rect.css('fill', '#c00000');\r\n                this.$updateTimerDiv.attr('title', \"Fehler beim letzten Speichervorgang -> Werd's wieder versuchen\");\r\n            } else {\r\n                $rect.css('fill', '#008000');\r\n                this.$updateTimerDiv.attr('title', that.secondsTillNextUpdate + \" Sekunden bis zum nächsten Speichern\");\r\n            }\r\n\r\n        }, 1000);\r\n\r\n    }\r\n\r\n    initializeNotifierClient(){\r\n        this.notifierClient = new NotifierClient(this.main, this);\r\n    }\r\n\r\n    sendUpdates(callback?: () => void, sendIfNothingIsDirty: boolean = false) {\r\n\r\n        if (this.main.user == null) return;\r\n\r\n        this.main.projectExplorer.writeEditorTextToFile();\r\n\r\n        let userSettings = this.main.user.settings;\r\n\r\n        let wdList: WorkspaceData[] = [];\r\n        let fdList: FileData[] = [];\r\n\r\n        for (let ws of this.main.workspaceList) {\r\n\r\n            if (!ws.saved) {\r\n                wdList.push(ws.getWorkspaceData(false));\r\n                ws.saved = true;\r\n            }\r\n\r\n            for (let m of ws.moduleStore.getModules(false)) {\r\n                if (!m.file.saved) {\r\n                    m.file.text = m.getProgramTextFromMonacoModel();\r\n                    fdList.push(m.getFileData(ws));\r\n                    // console.log(\"Save file \" + m.file.name);\r\n                    m.file.saved = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        let request: SendUpdatesRequest = {\r\n            workspacesWithoutFiles: wdList,\r\n            files: fdList,\r\n            owner_id: this.main.workspacesOwnerId,\r\n            userId: this.main.user.id,\r\n            language: 1,\r\n            currentWorkspaceId: this.main.getCurrentWorkspace()?.id,\r\n            getModifiedWorkspaces: false\r\n        }\r\n\r\n        let that = this;\r\n        if (wdList.length > 0 || fdList.length > 0 || sendIfNothingIsDirty) {\r\n            ajax('sendUpdates', request, (response: SendUpdatesResponse) => {\r\n                that.errorHappened = !response.success;\r\n                if (!that.errorHappened) {\r\n\r\n                    that.updateWorkspaces(request, response);\r\n\r\n                    if (callback != null) {\r\n                        callback();\r\n                        return;\r\n                    }\r\n                }\r\n            }, () => {\r\n                that.errorHappened = true;\r\n            });\r\n        } else {\r\n            if (callback != null) {\r\n                callback();\r\n                return;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    sendCreateWorkspace(wd: CreateWorkspaceData, owner_id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            wd.id = Math.round(Math.random() * 10000000);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"workspace\",\r\n            data: wd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            wd.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n\r\n    getDatabaseSettings(workspace_id: number, callback: (response: GetDatabaseSettingsResponse) => void) {\r\n        let request: GetDatabaseSettingsRequest = {\r\n            workspaceId: workspace_id\r\n        };\r\n        ajax(\"getDatabaseSettings\", request, (response: GetDatabaseSettingsResponse) => {\r\n            callback(response);\r\n        }, (message) => { alert(message) })\r\n    }\r\n\r\n    setNewSecret(workspace_id: number, kind: string, callback: (secret: string) => void) {\r\n        let request: SetDatabaseSecretRequest = {\r\n            workspaceId: workspace_id,\r\n            secretKind: kind\r\n        };\r\n        ajax(\"setNewSecret\", request, (response: SetDatabaseSecretResponse) => {\r\n            callback(response.secret);\r\n        }, (message) => { alert(message) })\r\n    }\r\n\r\n    setNameAndPublishedTo(workspace_id: number, name: string, published_to: number, description: string, callback: () => void) {\r\n        let request: SetPublishedToRequest = {\r\n            workspaceId: workspace_id,\r\n            databaseName: name,\r\n            publishedTo: published_to,\r\n            description: description\r\n        };\r\n\r\n        ajax(\"setPublishedTo\", request, (response: SetPublishedToResponse) => {\r\n            callback();\r\n        }, (message) => { alert(message) })\r\n    }\r\n\r\n\r\n\r\n    sendCreateFile(m: Module, ws: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        let fd: FileData = m.getFileData(ws);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"file\",\r\n            data: fd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            m.file.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDuplicateWorkspace(ws: Workspace, callback: (error: string, workspaceData?: WorkspaceData) => void) {\r\n\r\n        let request: DuplicateWorkspaceRequest = {\r\n            workspace_id: ws.id,\r\n            language: 1\r\n        }\r\n\r\n        ajax(\"duplicateWorkspace\", request, (response: DuplicateWorkspaceResponse) => {\r\n            callback(response.message, response.workspace)\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDistributeWorkspace(ws: Workspace, klasse: ClassData, student_ids: number[], callback: (error: string) => void) {\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request: DistributeWorkspaceRequest = {\r\n                workspace_id: ws.id,\r\n                class_id: klasse?.id,\r\n                student_ids: student_ids,\r\n                language: 1\r\n            }\r\n\r\n            ajax(\"distributeWorkspace\", request, (response: DistributeWorkspaceResponse) => {\r\n                callback(response.message)\r\n            }, callback);\r\n\r\n        }, false);\r\n\r\n    }\r\n\r\n\r\n    sendDeleteWorkspaceOrFile(type: \"workspace\" | \"file\", id: number, callback: (error: string) => void) {\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"delete\",\r\n            entity: type,\r\n            id: id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            if (response.success) {\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendUpdateUserSettings(callback: (error: string) => void) {\r\n\r\n        let request: UpdateUserSettingsRequest = {\r\n            settings: this.main.user.settings,\r\n            userId: this.main.user.id,\r\n            current_workspace_id: this.main.getCurrentWorkspace()?.id\r\n        }\r\n\r\n        ajax(\"updateUserSettings\", request, (response: UpdateUserSettingsResponse) => {\r\n            if (response.success) {\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n\r\n    getNewStatements(workspace: Workspace, callback: (statements: string[], firstNewStatementIndex: number) => void) {\r\n        let request: GetNewStatementsRequest = {\r\n            workspaceId: workspace.id,\r\n            version_before: workspace.database.version\r\n        }\r\n\r\n        ajax(\"getNewStatements\", request, (response: GetNewStatementsResponse) => {\r\n            if (response.success) {\r\n                callback(response.newStatements, response.firstNewStatementIndex);\r\n            }\r\n        });\r\n    }\r\n\r\n    AddDatabaseStatements(workspace: Workspace, statements: string[], callback: (statements_before: string[], new_version: number) => void) {\r\n        let request: AddDatabaseStatementsRequest = {\r\n            workspaceId: workspace.id,\r\n            version_before: workspace.database.version,\r\n            statements: statements\r\n        }\r\n\r\n        ajax(\"addDatabaseStatements\", request, (response: AddDatabaseStatementsResponse) => {\r\n            if (response.success) {\r\n                callback(response.statements_before, response.new_version);\r\n            }\r\n        });\r\n    }\r\n\r\n    fetchDatabase(workspace: Workspace, callback: (error: string) => void) {\r\n\r\n        let cacheManager: CacheManager = new CacheManager();\r\n\r\n        let request: GetDatabaseRequest = {\r\n            workspaceId: workspace.id\r\n        }\r\n\r\n        ajax(\"getDatabase\", request, (response: getDatabaseResponse) => {\r\n            if (response.success) {\r\n\r\n                workspace.database = WDatabase.fromDatabaseData(response.database, response.version)\r\n                cacheManager.fetchTemplateFromCache(workspace.database.based_on_template_id, (templateDump: Uint8Array) => {\r\n\r\n                    if (templateDump != null) {\r\n                        try{\r\n                            // @ts-ignore\r\n                            workspace.database.templateDump = pako.inflate(templateDump);\r\n                        } catch(err){\r\n                            console.log(err);\r\n                            console.log(\"Dump seems not to be compressed...\");\r\n                            workspace.database.templateDump = templateDump;\r\n                        }\r\n                        callback(null);\r\n                        return;\r\n                    } else {\r\n                        if (workspace.database.based_on_template_id == null) {\r\n                            callback(null);\r\n                            return\r\n                        }\r\n                        this.fetchTemplate(workspace.id, (template) => {\r\n                            if (template != null) {\r\n                                cacheManager.saveTemplateToCache(workspace.database.based_on_template_id, template);\r\n                                // @ts-ignore\r\n                                workspace.database.templateDump = pako.inflate(template);\r\n                                callback(null);\r\n                                return;\r\n                            } else {\r\n                                callback(\"Konnte das Template nicht laden.\");\r\n                                return;\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    fetchTemplate(workspaceId: number, callback: (template: Uint8Array) => void) {\r\n        let request: GetTemplateRequest = {\r\n            workspaceId: workspaceId\r\n        }\r\n\r\n        $.ajax({\r\n            type: 'POST',\r\n            async: true,\r\n            data: JSON.stringify(request),\r\n            contentType: 'application/json',\r\n            url: \"servlet/getTemplate\",\r\n            xhrFields: { responseType: 'arraybuffer' },\r\n            success: function (response: any) {\r\n                callback(new Uint8Array(response));\r\n            },\r\n            error: function (jqXHR, message) {\r\n                alert(\"Konnte das Template nicht laden.\");\r\n                callback(null);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    fetchTemplateList(callback: (templateList: TemplateListEntry[]) => void) {\r\n        let request: GetTemplateListRequest = { user_id: this.main.user.id }\r\n\r\n        ajax(\"getTemplateList\", request, (response: GetTemplateListResponse) => {\r\n            if (response.success) {\r\n                callback(response.templateList);\r\n            } else {\r\n                callback([]);\r\n            }\r\n        }, (message) => {\r\n            alert(message);\r\n            callback([]);\r\n        })\r\n\r\n    }\r\n\r\n    updateWorkspaces(sendUpdatesRequest: SendUpdatesRequest, sendUpdatesResponse: SendUpdatesResponse) {\r\n\r\n        let idToRemoteWorkspaceDataMap: Map<number, WorkspaceData> = new Map();\r\n\r\n        let fileIdsSended = [];\r\n        sendUpdatesRequest.files.forEach(file => fileIdsSended.push(file.id));\r\n\r\n        sendUpdatesResponse.workspaces.workspaces.forEach(wd => idToRemoteWorkspaceDataMap.set(wd.id, wd));\r\n\r\n        let newWorkspaceNames: string[] = [];\r\n\r\n        for (let remoteWorkspace of sendUpdatesResponse.workspaces.workspaces) {\r\n\r\n            let localWorkspaces = this.main.workspaceList.filter(ws => ws.id == remoteWorkspace.id);\r\n\r\n            // Did student get a workspace from his/her teacher?\r\n            if (localWorkspaces.length == 0) {\r\n                newWorkspaceNames.push(remoteWorkspace.name);\r\n                this.createNewWorkspaceFromWorkspaceData(remoteWorkspace);\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        for (let workspace of this.main.workspaceList) {\r\n            let remoteWorkspace: WorkspaceData = idToRemoteWorkspaceDataMap.get(workspace.id);\r\n            if (remoteWorkspace != null) {\r\n                let idToRemoteFileDataMap: Map<number, FileData> = new Map();\r\n                remoteWorkspace.files.forEach(fd => idToRemoteFileDataMap.set(fd.id, fd));\r\n\r\n                let idToModuleMap: Map<number, Module> = new Map();\r\n                // update/delete files if necessary\r\n                for (let module of workspace.moduleStore.getModules(false)) {\r\n                    let fileId = module.file.id;\r\n                    idToModuleMap.set(fileId, module);\r\n                    let remoteFileData = idToRemoteFileDataMap.get(fileId);\r\n                    if (remoteFileData == null) {\r\n                        this.main.projectExplorer.fileListPanel.removeElement(module);\r\n                        this.main.currentWorkspace.moduleStore.removeModule(module);\r\n                    } else if (remoteFileData.version > module.file.version) {\r\n                        if (fileIdsSended.indexOf(fileId) < 0 || remoteFileData.forceUpdate) {\r\n                            module.file.text = remoteFileData.text;\r\n                            module.model.setValue(remoteFileData.text);\r\n\r\n                            module.file.saved = true;\r\n                            module.lastSavedVersionId = module.model.getAlternativeVersionId()\r\n                        }\r\n                        module.file.version = remoteFileData.version;\r\n                    }\r\n                }\r\n\r\n                // add files if necessary\r\n                for (let remoteFile of remoteWorkspace.files) {\r\n                    if (idToModuleMap.get(remoteFile.id) == null) {\r\n                        this.createFile(workspace, remoteFile);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (newWorkspaceNames.length > 0) {\r\n            let message: string = newWorkspaceNames.length > 1 ? \"Folgende Workspaces hat Deine Lehrkraft Dir gesendet: \" : \"Folgenden Workspace hat Deine Lehrkraft Dir gesendet: \";\r\n            message += newWorkspaceNames.join(\", \");\r\n            alert(message);\r\n        }\r\n\r\n        this.main.projectExplorer.workspaceListPanel.sortElements();\r\n        this.main.projectExplorer.fileListPanel.sortElements();\r\n\r\n    }\r\n\r\n    public createNewWorkspaceFromWorkspaceData(remoteWorkspace: WorkspaceData, withSort: boolean = false) {\r\n        let w = this.main.createNewWorkspace(remoteWorkspace.name, remoteWorkspace.owner_id);\r\n        w.id = remoteWorkspace.id;\r\n        w.sql_history = \"\";\r\n        w.path = remoteWorkspace.path;\r\n        w.isFolder = remoteWorkspace.isFolder;\r\n\r\n        this.main.workspaceList.push(w);\r\n        let path = remoteWorkspace.path.split(\"/\");\r\n        if (path.length == 1 && path[0] == \"\") path = [];\r\n\r\n        let panelElement: AccordionElement = {\r\n            name: remoteWorkspace.name,\r\n            externalElement: w,\r\n            iconClass: \"workspace\",\r\n            isFolder: remoteWorkspace.isFolder,\r\n            path: path\r\n        };\r\n\r\n        this.main.projectExplorer.workspaceListPanel.addElement(panelElement, true);\r\n        w.panelElement = panelElement;\r\n\r\n        for (let fileData of remoteWorkspace.files) {\r\n            this.createFile(w, fileData);\r\n        }\r\n\r\n        if (withSort) {\r\n            this.main.projectExplorer.workspaceListPanel.sortElements();\r\n            this.main.projectExplorer.fileListPanel.sortElements();\r\n        }\r\n    }\r\n\r\n    createFile(workspace: Workspace, remoteFile: FileData) {\r\n        let ae: any = null; //AccordionElement\r\n        if (workspace == this.main.currentWorkspace) {\r\n            ae = {\r\n                name: remoteFile.name,\r\n                externalElement: null\r\n            }\r\n\r\n            this.main.projectExplorer.fileListPanel.addElement(ae, true);\r\n        }\r\n\r\n        let f: any = { // File\r\n            id: remoteFile.id,\r\n            name: remoteFile.name,\r\n            dirty: false,\r\n            saved: true,\r\n            text: remoteFile.text,\r\n            version: remoteFile.version,\r\n            identical_to_repository_version: true,\r\n            workspace_id: workspace.id,\r\n            panelElement: ae\r\n        };\r\n        let m = this.main.projectExplorer.getNewModule(f); //new Module(f, this.main);\r\n        if (ae != null) ae.externalElement = m;\r\n        let modulStore = workspace.moduleStore;\r\n        modulStore.putModule(m);\r\n\r\n    }\r\n\r\n    rollback(callback: (error: string, rollbackLocalNeeded: boolean) => void) {\r\n        let workspace = this.main.currentWorkspace;\r\n        let request: RollbackRequest = { workspaceId: workspace.id, version: workspace.database.version }\r\n\r\n        ajax(\"rollback\", request, (response: RollbackResponse) => {\r\n            if (response.success) {\r\n                \r\n                callback(null, workspace.database.version > response.new_version);\r\n            } else {\r\n                alert(response.message);\r\n                callback(response.message, false);\r\n            }\r\n        }, (message) => {\r\n            alert(message);\r\n            callback(message, false);\r\n        })\r\n\r\n    }\r\n\r\n\r\n}","export enum TokenType {\r\n    identifier,\r\n    // constants\r\n    integerConstant,\r\n    floatingPointConstant,\r\n    booleanConstant,\r\n    stringConstant,\r\n    charConstant,\r\n    true,\r\n    false,\r\n    // keywords\r\n    keywordRename,\r\n    keywordDistinct,\r\n    keywordTo,\r\n    keywordAlter,\r\n    keywordCommit,\r\n    keywordAdd,\r\n    keywordDelete,\r\n    keywordSelect,\r\n    keywordInsert,\r\n    keywordInto,\r\n    keywordValues,\r\n    keywordUpdate,\r\n    keywordSet,\r\n    keywordNo,\r\n    keywordUse,\r\n    keywordCreate,\r\n    keywordReferences,\r\n    keywordPrimary,\r\n    keywordForeign,\r\n    keywordTable,\r\n    keywordTables,\r\n    keywordColumn,\r\n    keywordDrop,\r\n    keywordUnique,\r\n    keywordKey,\r\n    keywordIndex,\r\n    keywordConstraint,\r\n    keywordModify,\r\n    keywordCascade,\r\n    keywordRestrict,\r\n    keywordAction,\r\n    keywordAutoincrement,\r\n    keywordFrom,\r\n    keywordWhere,\r\n    keywordGroup,\r\n    keywordBy,\r\n    keywordHaving,\r\n    keywordOrder,\r\n    keywordAscending,\r\n    keywordDescending,\r\n    keywordNulls,\r\n    keywordFirst,\r\n    keywordLast,\r\n    keywordIs,\r\n    keywordNull,\r\n    keywordDatabase,\r\n\r\n    keywordOr,\r\n    keywordAnd,\r\n    keywordNot,\r\n\r\n    keywordJoin,\r\n    keywordNatural,\r\n    keywordLeft,\r\n    keywordCross,\r\n    keywordInner,\r\n    keywordOuter,\r\n    keywordOn,\r\n    keywordAs,\r\n    keywordLimit,\r\n    keywordOffset,\r\n    keywordIn,\r\n    keywordNotIn,\r\n    keywordLike,\r\n    keywordCollate,\r\n    keywordDefault,\r\n    keywordComment,\r\n    keywordEngine,\r\n    keywordCharset,\r\n    keywordCharacter,\r\n    \r\n    keywordStart,\r\n    keywordTransaction,\r\n    keywordIf,\r\n    keywordExists,\r\n\r\n    keywordLock,\r\n    keywordUnlock,\r\n    keywordWrite,\r\n    keywordRead,\r\n\r\n    // brackets\r\n    leftBracket, // ()\r\n    rightBracket,\r\n    leftSquareBracket, // []\r\n    rightSquareBracket,\r\n    leftCurlyBracket, // {}\r\n    rightCurlyBracket,\r\n    leftRightSquareBracket, // []\r\n    \r\n    // binary operators\r\n    dot, //.\r\n    modulo,\r\n    minus, plus, multiplication, division,\r\n    singleQuote, doubleQuote, // ', \"\r\n    identifierQuote,\r\n    lower, greater, lowerOrEqual, greaterOrEqual, \r\n    concatenation,    \r\n    equal,\r\n    notEqual,\r\n\r\n    // semicolon\r\n    semicolon, // ;\r\n\r\n    colon, // :\r\n\r\n    // comma\r\n    comma, // ,\r\n\r\n    // backslash\r\n    backslash,\r\n\r\n    // |\r\n    pipe,\r\n\r\n    // @\r\n    at,\r\n\r\n    // #\r\n    hash,\r\n\r\n    // whitespace\r\n    space,\r\n\r\n    tab,\r\n\r\n    // newline\r\n    newline,\r\n\r\n    // line feed\r\n    linefeed,\r\n\r\n    // only lexer-internal\r\n    identifierChar,  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    comment,\r\n\r\n    endofSourcecode, // will be generated after sourcecode end\r\n    \r\n    // Program statement types:\r\n    \r\n    // additional AST node types\r\n    constantNode,\r\n    callMethod,\r\n    unaryOp,\r\n    binaryOp,\r\n    table,\r\n    subquery,\r\n    list,\r\n    column,\r\n    columnDef,\r\n    allColumns, // *\r\n    isNull,\r\n    isNot, // used by lexer to lex \"is not null\" into one token\r\n    isNotNull,\r\n    omittedeStatement\r\n}\r\n\r\nexport var TokenTypeReadable: {[tt: number]: string} = {\r\n    [TokenType.identifier]: \"ein Bezeichner\",\r\n    // constants\r\n    [TokenType.integerConstant]: \"eine Integer-Konstante\",\r\n    [TokenType.floatingPointConstant]: \"eine Fließkomma-Konstante\",\r\n    [TokenType.booleanConstant]: \"eine boolesche Konstante\",\r\n    [TokenType.stringConstant]: \"eine Zeichenketten-Konstante\",\r\n    [TokenType.charConstant]: \"eine char-Konstante\",\r\n    [TokenType.true]: \"true\",\r\n    [TokenType.false]: \"false\",\r\n    // keywords\r\n    [TokenType.keywordRename]: \"rename\",\r\n    [TokenType.keywordDistinct]: \"distinct\",\r\n    [TokenType.keywordTo]: \"to\",\r\n    [TokenType.keywordAlter]: \"alter\",\r\n    [TokenType.keywordCommit]: \"commit\",\r\n    [TokenType.keywordAdd]: \"add\",\r\n    [TokenType.keywordDelete]: \"delete\",\r\n    [TokenType.keywordSelect]: \"select\",\r\n    [TokenType.keywordInsert]: \"insert\",\r\n    [TokenType.keywordInto]: \"into\",\r\n    [TokenType.keywordValues]: \"values\",\r\n    [TokenType.keywordUpdate]: \"update\",\r\n    [TokenType.keywordSet]: \"set\",\r\n    [TokenType.keywordNo]: \"no\",\r\n    [TokenType.keywordUse]: \"use\",\r\n    [TokenType.keywordCreate]: \"create\",\r\n    [TokenType.keywordReferences]: \"references\",\r\n    [TokenType.keywordPrimary]: \"primary\",\r\n    [TokenType.keywordForeign]: \"foreign\",\r\n    [TokenType.keywordTable]: \"table\",\r\n    [TokenType.keywordTables]: \"tables\",\r\n    [TokenType.keywordColumn]: \"column\",\r\n    [TokenType.keywordDrop]: \"drop\",\r\n    [TokenType.keywordUnique]: \"unique\",\r\n    [TokenType.keywordKey]: \"key\",\r\n    [TokenType.keywordIndex]: \"index\",\r\n    [TokenType.keywordConstraint]: \"constraint\",\r\n    [TokenType.keywordModify]: \"modify\",\r\n    [TokenType.keywordCascade]: \"cascade\",\r\n    [TokenType.keywordRestrict]: \"restrict\",\r\n    [TokenType.keywordAction]: \"action\",\r\n    [TokenType.keywordAutoincrement]: \"autoincrement\",\r\n    [TokenType.keywordFrom]: \"from\",\r\n    [TokenType.keywordWhere]: \"where\",\r\n    [TokenType.keywordGroup]: \"group\",\r\n    [TokenType.keywordBy]: \"by\",\r\n    [TokenType.keywordHaving]: \"having\",\r\n    [TokenType.keywordOrder]: \"order\",\r\n    [TokenType.keywordAscending]: \"ascending\",\r\n    [TokenType.keywordDescending]: \"descending\",\r\n    [TokenType.keywordNulls]: \"nulls\",\r\n    [TokenType.keywordFirst]: \"first\",\r\n    [TokenType.keywordLast]: \"last\",\r\n    [TokenType.keywordIs]: \"is\",\r\n    [TokenType.keywordNull]: \"null\",\r\n    [TokenType.keywordDatabase]: \"database\",\r\n\r\n\r\n    [TokenType.keywordAnd]: \"and\",\r\n    [TokenType.keywordOr]: \"or\",\r\n    [TokenType.keywordNot]: \"not\",\r\n\r\n    [TokenType.keywordJoin]: \"join\",\r\n    [TokenType.keywordNatural]: \"natural\",\r\n    [TokenType.keywordLeft]: \"left\",\r\n    [TokenType.keywordCross]: \"cross\",\r\n    [TokenType.keywordInner]: \"inner\",\r\n    [TokenType.keywordOuter]: \"outer\",\r\n    [TokenType.keywordOn]: \"on\",\r\n    [TokenType.keywordAs]: \"as\",\r\n    [TokenType.keywordLimit]: \"limit\",\r\n    [TokenType.keywordOffset]: \"offset\",\r\n    [TokenType.keywordIn]: \"in\",\r\n    [TokenType.keywordNotIn]: \"not in\",\r\n    [TokenType.keywordLike]: \"like\",\r\n    [TokenType.keywordCollate]: \"collate\",\r\n    [TokenType.keywordDefault]: \"default\",\r\n    [TokenType.keywordComment]: \"comment\",\r\n    [TokenType.keywordEngine]: \"engine\",\r\n    [TokenType.keywordCharset]: \"charset\",\r\n    [TokenType.keywordCharacter]: \"character\",\r\n    [TokenType.keywordStart]: \"start\",\r\n    [TokenType.keywordTransaction]: \"transaction\",\r\n    [TokenType.keywordIf]: \"if\",\r\n    [TokenType.keywordExists]: \"exists\",\r\n    [TokenType.keywordLock]: \"lock\",\r\n    [TokenType.keywordUnlock]: \"unlock\",\r\n    [TokenType.keywordWrite]: \"write\",\r\n    [TokenType.keywordRead]: \"read\",\r\n\r\n    // brackets\r\n    [TokenType.leftBracket]: \"(\", // ()\r\n    [TokenType.rightBracket]: \")\",\r\n    [TokenType.leftSquareBracket]: \"[\", // []\r\n    [TokenType.rightSquareBracket]: \"]\",\r\n    [TokenType.leftCurlyBracket]: \"{\", // {}\r\n    [TokenType.rightCurlyBracket]: \"}\",\r\n    [TokenType.leftRightSquareBracket]: \"[]\", \r\n    \r\n    // operators\r\n    [TokenType.dot]: \".\", //.\r\n    [TokenType.minus]: \"-\", \r\n    [TokenType.modulo]: \"%\", \r\n    [TokenType.plus]: \"+\", \r\n    [TokenType.multiplication]: \"*\", \r\n    [TokenType.division]: \"/\",\r\n    [TokenType.singleQuote]: \"'\", \r\n    [TokenType.doubleQuote]: \"\\\"\", // ']: \"\", \"\r\n    [TokenType.identifierQuote]: \"`\",\r\n    [TokenType.lower]: \"<\", \r\n    [TokenType.greater]: \">\",\r\n    [TokenType.equal]: \"=\", \r\n    [TokenType.lowerOrEqual]: \"<=\", \r\n    [TokenType.greaterOrEqual]: \">=\", \r\n    [TokenType.concatenation]: \"||\", \r\n    \r\n    // semicolon\r\n    [TokenType.semicolon]: \";\", // ;\r\n    [TokenType.colon]: \":\", // ;\r\n\r\n    // comma\r\n    [TokenType.comma]: \",\", \r\n\r\n    // backslash\r\n    [TokenType.backslash]: \"\\\\\",\r\n\r\n    // at\r\n    [TokenType.at]: \"@\",\r\n\r\n    // hash\r\n    [TokenType.hash]: \"#\",\r\n    \r\n    // pipe\r\n    [TokenType.pipe]: \"|\",\r\n\r\n    // whitespace\r\n    [TokenType.space]: \"ein Leerzeichen\",\r\n    [TokenType.tab]: \"ein Tabulatorzeichen\",\r\n\r\n    // newline\r\n    [TokenType.newline]: \"ein Zeilenumbruch\",\r\n\r\n    // only lexer-internal\r\n    [TokenType.identifierChar]: \"eines der Zeichen a..z, A..Z, _\",  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    [TokenType.comment]: \"ein Kommentar\",\r\n\r\n    [TokenType.endofSourcecode]: \"das Ende des Programmes\"\r\n\r\n}\r\n\r\nexport var specialCharList: {[keyword: string]:TokenType} = {\r\n    '(': TokenType.leftBracket, // ()\r\n    ')': TokenType.rightBracket,\r\n    '[': TokenType.leftSquareBracket, // []\r\n    ']': TokenType.rightSquareBracket,\r\n    '{': TokenType.leftCurlyBracket, // {}\r\n    '}': TokenType.rightCurlyBracket,\r\n    \r\n    // operators\r\n    '.': TokenType.dot, //.\r\n    ',': TokenType.comma, //.\r\n    '-': TokenType.minus,\r\n    '%': TokenType.modulo,\r\n    '+': TokenType.plus, \r\n    '*': TokenType.multiplication, \r\n    '/': TokenType.division,\r\n    '\\\\': TokenType.backslash,\r\n    '@': TokenType.at,\r\n    '#': TokenType.hash,\r\n    '|': TokenType.pipe,\r\n    '\\'': TokenType.singleQuote, \r\n    '\"': TokenType.doubleQuote, // ', \"\r\n    '`': TokenType.identifierQuote, // ', \"\r\n    \"<\": TokenType.lower,\r\n    \">\": TokenType.greater,\r\n    \"=\": TokenType.equal,\r\n    \"<>\": TokenType.notEqual,\r\n    \r\n    ';': TokenType.semicolon, // ;\r\n    ':': TokenType.colon, // ;\r\n\r\n    // whitespace\r\n    ' ': TokenType.space,\r\n    '\\t': TokenType.tab,\r\n\r\n    // newline\r\n    '\\n': TokenType.newline,\r\n    '\\r': TokenType.linefeed\r\n}\r\n\r\nexport var keywordList: {[keyword: string]:TokenType} = {\r\n    \"rename\": TokenType.keywordRename,\r\n    \"distinct\": TokenType.keywordDistinct,\r\n    \"to\": TokenType.keywordTo,\r\n    \"alter\": TokenType.keywordAlter,\r\n    \"commit\": TokenType.keywordCommit,\r\n    \"add\": TokenType.keywordAdd,\r\n    \"delete\": TokenType.keywordDelete,\r\n    \"select\": TokenType.keywordSelect,\r\n    \"insert\": TokenType.keywordInsert,\r\n    \"into\": TokenType.keywordInto,\r\n    \"values\": TokenType.keywordValues,\r\n    \"update\": TokenType.keywordUpdate,\r\n    \"set\": TokenType.keywordSet,\r\n    \"no\": TokenType.keywordNo,\r\n    \"use\": TokenType.keywordUse,\r\n    \"create\": TokenType.keywordCreate,\r\n    \"references\": TokenType.keywordReferences,\r\n    \"primary\": TokenType.keywordPrimary,\r\n    \"foreign\": TokenType.keywordForeign,\r\n    \"table\": TokenType.keywordTable,\r\n    \"tables\": TokenType.keywordTables,\r\n    \"column\": TokenType.keywordColumn,\r\n    \"drop\": TokenType.keywordDrop,\r\n    \"unique\": TokenType.keywordUnique,\r\n    \"key\": TokenType.keywordKey,\r\n    \"index\": TokenType.keywordIndex,\r\n    \"constraint\": TokenType.keywordConstraint,\r\n    \"modify\": TokenType.keywordModify,\r\n    \"cascade\": TokenType.keywordCascade,\r\n    \"restrict\": TokenType.keywordRestrict,\r\n    \"action\": TokenType.keywordAction,\r\n    \"autoincrement\": TokenType.keywordAutoincrement,\r\n    \"auto_increment\": TokenType.keywordAutoincrement,\r\n    \"from\": TokenType.keywordFrom,\r\n    \"where\": TokenType.keywordWhere,\r\n    \"true\": TokenType.true,\r\n    \"false\": TokenType.false,\r\n    \"group\": TokenType.keywordGroup,\r\n    \"by\": TokenType.keywordBy,\r\n    \"having\": TokenType.keywordHaving,\r\n    \"order\": TokenType.keywordOrder,\r\n    \"asc\": TokenType.keywordAscending,\r\n    \"desc\": TokenType.keywordDescending,\r\n    \"nulls\": TokenType.keywordNulls,\r\n    \"first\": TokenType.keywordFirst,\r\n    \"last\": TokenType.keywordLast,\r\n    \"is\": TokenType.keywordIs,\r\n    \"null\": TokenType.keywordNull,\r\n    \"database\": TokenType.keywordDatabase,\r\n\r\n    \"or\": TokenType.keywordOr,\r\n    \"and\": TokenType.keywordAnd,\r\n    \"not\": TokenType.keywordNot,\r\n\r\n    \"join\": TokenType.keywordJoin,\r\n    \"natural\": TokenType.keywordNatural,\r\n    \"left\": TokenType.keywordLeft,\r\n    \"cross\": TokenType.keywordCross,\r\n    \"inner\": TokenType.keywordInner,\r\n    \"outer\": TokenType.keywordOuter,\r\n    \"on\": TokenType.keywordOn,\r\n    \"as\": TokenType.keywordAs,\r\n    \"limit\": TokenType.keywordLimit,\r\n    \"offset\": TokenType.keywordOffset,\r\n    \"in\": TokenType.keywordIn,\r\n    \"not in\": TokenType.keywordNotIn,\r\n    \"like\": TokenType.keywordLike,\r\n    \"collate\": TokenType.keywordCollate,\r\n    \"default\": TokenType.keywordDefault,\r\n    \"comment\": TokenType.keywordComment,\r\n    \"engine\": TokenType.keywordEngine,\r\n    \"charset\": TokenType.keywordCharset,\r\n    \"character\": TokenType.keywordCharacter,\r\n    \"start\": TokenType.keywordStart,\r\n    \"transaction\": TokenType.keywordTransaction,\r\n    \"if\": TokenType.keywordIf,\r\n    \"exists\": TokenType.keywordExists,\r\n    \"lock\": TokenType.keywordLock,\r\n    \"unlock\": TokenType.keywordUnlock,\r\n    \"write\": TokenType.keywordWrite,\r\n    \"read\": TokenType.keywordRead\r\n\r\n\r\n};\r\n\r\nexport var EscapeSequenceList: {[keyword: string]:string} = {\r\n    \"n\": \"\\n\",\r\n    \"r\": \"\\r\",\r\n    \"t\": \"\\t\",\r\n    \"\\\"\": \"\\\"\",\r\n    \"'\": \"'\",\r\n    \"\\\\\": \"\\\\\"\r\n}\r\n\r\nexport type TextPosition = {\r\n    line: number,\r\n    column: number, \r\n    length: number\r\n}\r\n\r\nexport type TextPositionWithoutLength = {\r\n    line: number,\r\n    column: number\r\n}\r\n\r\nexport type Token = {\r\n    tt: TokenType,\r\n    value: string|number|boolean,\r\n    position: TextPosition,\r\n    commentBefore?: Token,\r\n    isDoubleQuotedIdentifier?: boolean\r\n}\r\n\r\nexport type TokenList = Token[];\r\n\r\nfunction tokenToString(t: Token){\r\n    return \"<div><span style='font-weight: bold'>\" + TokenType[t.tt] + \"</span>\" +\r\n            \"<span style='color: blue'> &nbsp;'\" + t.value + \"'</span> (l&nbsp;\" + t.position.line + \", c&nbsp;\" + t.position.column + \")</div>\";\r\n}\r\n \r\nexport function tokenListToString(tl: TokenList):string{\r\n    let s = \"\";\r\n    for(let t of tl){\r\n        s += tokenToString(t) + \"\\n\";\r\n    }\r\n    return s;\r\n}","import { TokenList, specialCharList, TokenType, Token, EscapeSequenceList, keywordList, TextPosition, TokenTypeReadable } from \"./Token.js\";\r\n\r\nenum LexerState {\r\n    number, identifier, stringConstant, characterConstant, multilineComment, EndoflineComment\r\n}\r\n\r\nvar endChar = \"►\"; // \\u10000\r\n\r\nexport type QuickFix = {\r\n    title: string,\r\n    editsProvider: (uri: monaco.Uri) => monaco.languages.WorkspaceTextEdit[]\r\n}\r\n\r\nexport type ErrorLevel = \"info\" | \"error\" | \"warning\";\r\n\r\nexport type Error = {\r\n    position: TextPosition,\r\n    text: string,\r\n    quickFix?: QuickFix,\r\n    level: ErrorLevel\r\n}\r\n\r\nexport class Lexer {\r\n\r\n    tokenList: TokenList;\r\n    nonSpaceLastTokenType: TokenType;\r\n    nonSpaceLastToken: Token;\r\n\r\n    errorList: Error[];\r\n    pos: number;\r\n    line: number;\r\n    column: number;\r\n\r\n    currentChar: string;\r\n    nextChar: string;\r\n\r\n    input: string;\r\n\r\n    spaceTokens: TokenType[] = [\r\n        TokenType.space, TokenType.tab, TokenType.newline\r\n    ];\r\n\r\n    bracketStack: TokenType[];\r\n    bracketError: string;\r\n    correspondingBracket: { [key: number]: TokenType } = {};\r\n\r\n    tokenTypesToMerge: { first: TokenType, second: TokenType, merged: TokenType }[] = [\r\n        { first: TokenType.keywordNotIn, second: TokenType.keywordIn, merged: TokenType.keywordNotIn },\r\n        { first: TokenType.keywordIs, second: TokenType.keywordNot, merged: TokenType.isNot },\r\n        { first: TokenType.isNot, second: TokenType.keywordNull, merged: TokenType.isNotNull },\r\n        { first: TokenType.keywordIs, second: TokenType.keywordNull, merged: TokenType.isNull },\r\n    ]\r\n\r\n    constructor() {\r\n        this.correspondingBracket[TokenType.leftBracket] = TokenType.rightBracket;\r\n        this.correspondingBracket[TokenType.leftCurlyBracket] = TokenType.rightCurlyBracket;\r\n        this.correspondingBracket[TokenType.leftSquareBracket] = TokenType.rightSquareBracket;\r\n        this.correspondingBracket[TokenType.rightBracket] = TokenType.leftBracket;\r\n        this.correspondingBracket[TokenType.rightCurlyBracket] = TokenType.leftCurlyBracket;\r\n        this.correspondingBracket[TokenType.rightSquareBracket] = TokenType.leftSquareBracket;\r\n    }\r\n\r\n    lex(input: string): { tokens: TokenList, errors: Error[], bracketError: string } {\r\n\r\n        this.input = input.replace(\"\\u00a0\", \" \");\r\n        this.tokenList = [];\r\n        this.errorList = [];\r\n        this.bracketError = null;\r\n        this.bracketStack = [];\r\n        this.pos = 0;\r\n        this.line = 1;\r\n        this.column = 1;\r\n        this.nonSpaceLastTokenType = null;\r\n        this.nonSpaceLastToken = null;\r\n\r\n\r\n        if (input.length == 0) {\r\n            return { tokens: this.tokenList, errors: this.errorList, bracketError: null };\r\n        }\r\n\r\n        this.currentChar = input.charAt(0);\r\n\r\n        this.nextChar = input.length > 1 ? input.charAt(1) : endChar;\r\n\r\n\r\n        while (this.currentChar != endChar) {\r\n            this.mainState();\r\n        }\r\n\r\n        if (this.bracketStack.length > 0) {\r\n            let bracketOpen = this.bracketStack.pop();\r\n            let bracketClosed = this.correspondingBracket[bracketOpen];\r\n\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[bracketClosed]);\r\n        }\r\n\r\n        return {\r\n            tokens: this.tokenList,\r\n            errors: this.errorList,\r\n            bracketError: this.bracketError\r\n        };\r\n\r\n    }\r\n\r\n    checkClosingBracket(tt: TokenType) {\r\n        if (this.bracketStack.length == 0) {\r\n            let bracketOpen = this.correspondingBracket[tt];\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[tt]);\r\n            return;\r\n        }\r\n        let openBracket = this.bracketStack.pop();\r\n        let correspondingBracket = this.correspondingBracket[openBracket];\r\n        if (tt != correspondingBracket) {\r\n            this.setBracketError(TokenTypeReadable[openBracket] + \" \" + TokenTypeReadable[correspondingBracket]);\r\n        }\r\n    }\r\n\r\n    setBracketError(error: string) {\r\n        if (this.bracketError == null) this.bracketError = error;\r\n    }\r\n\r\n    next() {\r\n        this.pos++;\r\n        this.currentChar = this.nextChar;\r\n        if (this.pos + 1 < this.input.length) {\r\n            this.nextChar = this.input.charAt(this.pos + 1);\r\n        } else {\r\n            this.nextChar = endChar;\r\n        }\r\n        this.column++; // column of current char\r\n    }\r\n\r\n\r\n\r\n    mainState() {\r\n\r\n        let char = this.currentChar;\r\n\r\n        let specialCharToken = specialCharList[char];\r\n\r\n        if (specialCharToken != null) {\r\n            switch (specialCharToken) {\r\n                case TokenType.leftSquareBracket:\r\n                    if (this.nextChar == \"]\") {\r\n                        this.pushToken(TokenType.leftRightSquareBracket, \"[]\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.leftSquareBracket, \"[\");\r\n                        this.bracketStack.push(specialCharToken);\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.division:\r\n                    if (this.nextChar == '*') {\r\n                        this.lexMultilineComment();\r\n                        return;\r\n                    }\r\n                    this.pushToken(TokenType.division, '/');\r\n                    this.next();\r\n                    return;\r\n                case TokenType.pipe:\r\n                    if (this.nextChar == \"|\") {\r\n                        this.pushToken(TokenType.concatenation, '||');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.pipe, '|');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.lower:\r\n                    if (this.nextChar == \">\") {\r\n                        this.pushToken(TokenType.notEqual, '<>');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == \"=\"){\r\n                        this.pushToken(TokenType.lowerOrEqual, '<=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                    else {\r\n                        this.pushToken(TokenType.lower, '<');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.greater:\r\n                    if (this.nextChar == \"=\"){\r\n                        this.pushToken(TokenType.greaterOrEqual, '>=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                    else {\r\n                        this.pushToken(TokenType.greater, '>');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.rightSquareBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.minus:\r\n                    if (this.isDigit(this.nextChar, 10) && !\r\n                        ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.rightBracket].indexOf(this.nonSpaceLastTokenType) >= 0)\r\n                    ) {\r\n                        this.lexNumber();\r\n                        return;\r\n                    } else if (this.nextChar == '-') {\r\n                        this.lexEndofLineComment(\"--\");\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.minus, '-');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.hash:\r\n                    if(this.nonSpaceLastToken == null || this.nonSpaceLastToken.position.line < this.line){\r\n                        this.lexEndofLineComment('#');\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.hash, \"#\");\r\n                        this.next();\r\n                    }\r\n                    break;\r\n                case TokenType.singleQuote:\r\n                    this.lexStringConstant(\"'\");\r\n                    return;\r\n                case TokenType.doubleQuote:\r\n                    this.lexStringConstant('\"');\r\n                    return;\r\n                case TokenType.newline:\r\n                    this.pushToken(TokenType.newline, '\\n');\r\n                    this.line++;\r\n                    this.column = 0;\r\n                    this.next();\r\n                    return;\r\n                case TokenType.space:\r\n                case TokenType.tab:\r\n                    this.lexSpace();\r\n                    return;\r\n                case TokenType.linefeed:\r\n                    this.next();\r\n                    return;\r\n                case TokenType.at:\r\n                    this.lexAnnotation();\r\n                    return;\r\n                case TokenType.identifierQuote:\r\n                    this.lexQuotedIdentifier();\r\n                    return;\r\n                \r\n            }\r\n\r\n            this.pushToken(specialCharToken, char);\r\n            this.next();\r\n            return;\r\n\r\n        }\r\n\r\n        // no special char. Number?\r\n\r\n        if (this.isDigit(char, 10)) {\r\n            this.lexNumber();\r\n            return;\r\n        }\r\n\r\n        this.lexIdentifierOrKeyword();\r\n\r\n    }\r\n\r\n\r\n    lexQuotedIdentifier() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let s: string = \"\";\r\n        this.next();\r\n        while(this.currentChar != '`' && this.currentChar != endChar){\r\n            s += this.currentChar;\r\n            this.next();\r\n        }\r\n        if(this.currentChar == endChar){\r\n            this.pushError(\"Innerhalb eines in `` eingeschlossenen Bezeichners wurde das Ende der Datei erreicht.\", s.length + 1, \"error\", line, column);\r\n        } else {\r\n            this.next(); // skip `\r\n            this.pushToken(TokenType.identifier, s, line, column);\r\n        }\r\n    }\r\n\r\n    pushToken(tt: TokenType, text: string | number | boolean, line: number = this.line, column: number = this.column, length: number = (\"\" + text).length) {\r\n        let t: Token = {\r\n            tt: tt,\r\n            value: text,\r\n            position: {\r\n                column: column,\r\n                line: line,\r\n                length: length\r\n            }\r\n        }\r\n\r\n        for (let tripel of this.tokenTypesToMerge) {\r\n            if (tt == tripel.second && this.nonSpaceLastTokenType == tripel.first) {\r\n                let newLength = column - this.nonSpaceLastToken.position.column + length;\r\n                this.nonSpaceLastToken.tt = tripel.merged;\r\n                this.nonSpaceLastToken.position = { column: this.nonSpaceLastToken.position.column, line: line, length: newLength };\r\n                this.nonSpaceLastToken.value = this.nonSpaceLastToken.value + \" \" + text;\r\n\r\n                this.nonSpaceLastTokenType = tripel.merged;\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (!(this.spaceTokens.indexOf(tt) >= 0)) {\r\n            this.nonSpaceLastTokenType = tt;\r\n            this.nonSpaceLastToken = t;\r\n        }\r\n\r\n        this.tokenList.push(t);\r\n    }\r\n\r\n    pushError(text: string, length: number, errorLevel: ErrorLevel = \"error\", line: number = this.line, column: number = this.column) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: {\r\n                line: line,\r\n                column: column,\r\n                length: length\r\n            },\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n\r\n\r\n    isDigit(a: string, base: number) {\r\n        var charCode = a.charCodeAt(0);\r\n\r\n        if (base == 10) return (charCode >= 48 && charCode <= 57); // 0 - 9\r\n        if (base == 2) return (charCode >= 48 && charCode <= 49); // 0, 1\r\n        if (base == 8) return (charCode >= 48 && charCode <= 55); // 0 - 7\r\n        if (base == 16) return (charCode >= 48 && charCode <= 57) || (charCode >= 97 && charCode <= 102) ||\r\n            (charCode >= 65 && charCode <= 70); // 0 - 9 || a - f || A - F\r\n    }\r\n\r\n    lexSpace() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n\r\n        let posStart = this.pos;\r\n        while (this.currentChar == \" \" || this.currentChar == \"\\t\") {\r\n            this.next();\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n        this.pushToken(TokenType.space, this.input.substring(posStart, posEnd), line, column);\r\n        return;\r\n\r\n    }\r\n\r\n    lexCharacterConstant() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n        this.next();\r\n        let char = this.currentChar;\r\n        if (char == \"\\\\\") {\r\n            let escapeChar = EscapeSequenceList[this.nextChar];\r\n            if (escapeChar == null) {\r\n                this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                if (this.nextChar != \"'\") {\r\n                    char = this.nextChar;\r\n                    this.next();\r\n                }\r\n            } else {\r\n                char = escapeChar;\r\n                this.next();\r\n            }\r\n        }\r\n        this.next();\r\n        if (this.currentChar != \"'\") {\r\n            this.pushError(\"Das Ende der char-Konstante wird erwartet (').\", 1);\r\n        } else {\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.charConstant, char, line, column);\r\n\r\n    }\r\n\r\n    lexStringConstant(beginChar: string) {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let text = \"\";\r\n\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\\\\") {\r\n                let escapeChar = EscapeSequenceList[this.nextChar];\r\n                if (escapeChar == null) {\r\n                    this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                } else {\r\n                    char = escapeChar;\r\n                    this.next();\r\n                }\r\n            } else if (char == beginChar) {\r\n                this.next();\r\n                break;\r\n            } else if (char == \"\\n\" || char == endChar) {\r\n                this.pushError('Innerhalb einer String-Konstante wurde das Zeilenende erreicht.', text.length + 1, \"error\", line, column);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        if (beginChar == \"'\") {\r\n            this.pushToken(TokenType.stringConstant, text, line, column, text.length + 2);\r\n        } else {\r\n            this.pushToken(TokenType.identifier, text, line, column, text.length + 2);\r\n            this.tokenList[this.tokenList.length - 1].isDoubleQuotedIdentifier = true;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    lexMultilineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let lastCharWasNewline: boolean = false;\r\n\r\n        let text = \"/*\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"*\" && this.nextChar == \"/\") {\r\n                this.next();\r\n                this.next();\r\n                text += \"*/\";\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                this.pushError(\"Innerhalb eines Mehrzeilenkommentars (/*... */) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            if (char == \"\\n\") {\r\n                this.line++;\r\n                this.column = 0;\r\n                lastCharWasNewline = true;\r\n                text += char;\r\n            } else if (!(lastCharWasNewline && char == \" \")) {\r\n                text += char;\r\n                lastCharWasNewline = false;\r\n            }\r\n\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n    lexEndofLineComment(commentStart: string) {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let text = commentStart;\r\n        for(let i = 0; i < commentStart.length; i++){\r\n            this.next();\r\n        }\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\n\") {\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                // this.pushError(\"Innerhalb eines Einzeilenkommentars (//... ) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n\r\n    lexNumber() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let sign: number = 1;\r\n        if (this.currentChar == '-') {\r\n            sign = -1;\r\n            this.next();\r\n        }\r\n\r\n        let posStart = this.pos;\r\n\r\n        let firstChar = this.currentChar;\r\n\r\n        this.next();\r\n\r\n        let radix: number = 10;\r\n\r\n        if (firstChar == '0' && (['b', 'x', '0', '1', '2', '3', '4', '5', '6', '7'].indexOf(this.currentChar) >= 0)) {\r\n            if (this.currentChar == 'x') {\r\n                radix = 16;\r\n                this.next();\r\n            } else if (this.currentChar == 'b') {\r\n                radix = 2;\r\n                this.next();\r\n            } else radix = 8;\r\n            posStart = this.pos;\r\n        }\r\n\r\n        while (this.isDigit(this.currentChar, radix)) {\r\n            this.next();\r\n        }\r\n\r\n        let tt = TokenType.integerConstant;\r\n\r\n        if (this.currentChar == \".\") {\r\n            tt = TokenType.floatingPointConstant;\r\n\r\n            this.next();\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n\r\n        }\r\n\r\n        let base = this.input.substring(posStart, this.pos);\r\n\r\n        posStart = this.pos;\r\n        let exponent: number = 0;\r\n\r\n        let hasExponential: boolean = false;\r\n        //@ts-ignore\r\n        if (this.currentChar == \"e\") {\r\n            hasExponential = true;\r\n            this.next();\r\n            let posExponentStart: number = this.pos;\r\n\r\n            //@ts-ignore\r\n            if (this.currentChar == '-') {\r\n                this.next();\r\n            }\r\n\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n            let exponentString = this.input.substring(posExponentStart, this.pos);\r\n            exponent = Number.parseInt(exponentString);\r\n        }\r\n\r\n        if (this.currentChar == 'd' || this.currentChar == 'f') {\r\n            tt == TokenType.floatingPointConstant;\r\n            this.next();\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n        }\r\n\r\n        let value: number = (tt == TokenType.integerConstant) ? Number.parseInt(base, radix) : Number.parseFloat(base);\r\n        value *= sign;\r\n        if (exponent != 0) value *= Math.pow(10, exponent);\r\n\r\n        this.pushToken(tt, value, line, column);\r\n\r\n    }\r\n\r\n    lexAnnotation() {\r\n        let line = this.line;\r\n        let column = this.column - 1;\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n        this.next(); // skip@\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n        this.pushToken(TokenType.at, text, line, column, text.length + 1);\r\n    }\r\n\r\n    lexIdentifierOrKeyword() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n\r\n        let tt = keywordList[text.toLowerCase()];\r\n        if (tt != null && typeof tt == \"number\") {\r\n\r\n            switch (tt) {\r\n                case TokenType.true:\r\n                    this.pushToken(TokenType.booleanConstant, true, line, column);\r\n                    break;\r\n                case TokenType.false:\r\n                    this.pushToken(TokenType.booleanConstant, false, line, column);\r\n                    break;\r\n                default:\r\n                    this.pushToken(tt, text, line, column);\r\n                    break;\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        this.pushToken(TokenType.identifier, text, line, column);\r\n\r\n    }\r\n\r\n    isSpace(char: string): boolean {\r\n        return char == \" \" || char == \"\\n\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport function errorListToString(errorList: Error[]): string {\r\n    let s = \"\";\r\n\r\n    for (let error of errorList) {\r\n\r\n        s += \"Z \" + error.position.line + \", S \" + error.position.column + \": \";\r\n        s += error.text + \"<br>\";\r\n\r\n    }\r\n\r\n    return s;\r\n}","import { TokenType } from \"../lexer/Token.js\";\r\n\r\ntype CheckFunction = (columnIdentifier: string, parameterValues: number[]) => string;\r\ntype OutputFunction = (value: any, parameterValues: number[]) => string;\r\n\r\nexport abstract class SQLType {\r\n\r\n    abstract canCastTo(type2: SQLType): boolean;\r\n\r\n    abstract getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType;\r\n\r\n    abstract getUnaryResultType(operator: TokenType): SQLType;\r\n\r\n    abstract getBinaryResult(operator: TokenType, value1: any, value2: any): any;\r\n\r\n    abstract toString(): string;\r\n\r\n    abstract getBaseTypeName(): string;\r\n\r\n}\r\n\r\nexport class SQLBaseType extends SQLType {\r\n    // Map<tokenType, Map<SecondType, ResultType>>\r\n    binaryResultTypes: Map<TokenType, Map<SQLBaseType, SQLBaseType>> = new Map();\r\n\r\n    unaryOperators: TokenType[] = [];\r\n\r\n    static baseTypes: SQLBaseType[] = [];\r\n    static baseTypeMap: Map<string, SQLBaseType> = new Map();\r\n\r\n    public canCastToList: string[];\r\n\r\n    constructor(public name: string, public parameterDescriptions: string[],\r\n        public checkFunction: CheckFunction, public outputFunction: OutputFunction, canCastToList: string[]) {\r\n        super();\r\n        this.canCastToList = canCastToList.slice(0);\r\n        let ownIndex = this.canCastToList.indexOf(name);\r\n        if(ownIndex >= 0) this.canCastToList.splice(ownIndex, 1);\r\n    }\r\n\r\n    static fromConstantType(tt: TokenType): SQLBaseType {\r\n        switch (tt) {\r\n            case TokenType.stringConstant:\r\n                return this.baseTypeMap.get(\"text\");\r\n            case TokenType.integerConstant:\r\n                return this.baseTypeMap.get(\"integer\");\r\n            case TokenType.floatingPointConstant:\r\n                return this.baseTypeMap.get(\"float\");\r\n            case TokenType.charConstant:\r\n                return this.baseTypeMap.get(\"text\");\r\n            case TokenType.booleanConstant:\r\n                return this.baseTypeMap.get(\"boolean\");\r\n            case TokenType.keywordNull:\r\n                return this.baseTypeMap.get(\"null\");\r\n        \r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    getBaseTypeName(): string {\r\n        return this.name;\r\n    }\r\n\r\n    toString(): string {\r\n        return this.name;\r\n    }\r\n\r\n    static getBaseType(name: string) {\r\n        if(name == 'char') name = 'varchar';\r\n        return this.baseTypeMap.get(name.toLocaleLowerCase());\r\n    }\r\n\r\n    static addBaseTypes(baseTypes: SQLBaseType[]) {\r\n        SQLBaseType.baseTypes = SQLBaseType.baseTypes.concat(baseTypes);\r\n        baseTypes.forEach(t => SQLBaseType.baseTypeMap.set(t.name, t));\r\n    }\r\n\r\n    addBinaryOperation(tokenType: TokenType | TokenType[], secondType: SQLBaseType, resultType: SQLBaseType, isCommutative: boolean = true) {\r\n\r\n        if (!Array.isArray(tokenType)) tokenType = [tokenType];\r\n\r\n        tokenType.forEach(t => {\r\n            let map: Map<SQLBaseType, SQLBaseType> = this.binaryResultTypes.get(t);\r\n            if (map == null) {\r\n                map = new Map();\r\n                this.binaryResultTypes.set(t, map);\r\n            }\r\n            map.set(secondType, resultType);\r\n            if (isCommutative && secondType != this) {\r\n                secondType.addBinaryOperation(t, this, resultType, false);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    canCastTo(type2: SQLType): boolean {\r\n\r\n        let bt2: SQLBaseType = type2 instanceof SQLBaseType ? type2 : type2[\"baseType\"];\r\n\r\n        return this.canCastToList.indexOf(bt2.name) >= 0 || this.name == bt2.name;\r\n\r\n    }\r\n\r\n    getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType {\r\n\r\n\r\n        let map = this.binaryResultTypes.get(operator);\r\n        if (map == null) return null;\r\n\r\n        let bt2: SQLBaseType = secondType instanceof SQLBaseType ? secondType : secondType[\"baseType\"];\r\n\r\n        return map.get(bt2);\r\n\r\n    }\r\n\r\n    getUnaryResultType(operator: TokenType): SQLType {\r\n        if([TokenType.isNull, TokenType.isNotNull].indexOf(operator) >= 0) return booleanType;\r\n        if(this.unaryOperators.indexOf(operator)>= 0) return this;\r\n    }\r\n\r\n    getBinaryResult(operator: TokenType, value1: any, value2: any): any {\r\n        switch (operator) {\r\n            case TokenType.concatenation:\r\n                if (value1 != null && value2 != null) return value1 + value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.plus:\r\n                if (value1 != null && value2 != null) return value1 + value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.minus:\r\n                if (value1 != null && value2 != null) return value1 - value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.multiplication:\r\n                if (value1 != null && value2 != null) return value1 * value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.division:\r\n                if (value1 != null && value2 != null) return value1 * value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.keywordAnd:\r\n                if (value1 != null && value2 != null) return value1 * value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.keywordOr:\r\n                if (value1 != null && value2 != null) return Math.max(value1, value2);\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.lower:\r\n                if (value1 != null && value2 != null) return value1 < value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.greater:\r\n                if (value1 != null && value2 != null) return value1 >= value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.lowerOrEqual:\r\n                if (value1 != null && value2 != null) return value1 <= value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.greaterOrEqual:\r\n                if (value1 != null && value2 != null) return value1 >= value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.equal:\r\n                return value1 == value2;\r\n            case TokenType.notEqual:\r\n                return value1 != value2;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nlet tens: number[] = [1, 10, 100, 1000, 100000, 100000, 1000000, 10000000, 100000000, 1000000000];\r\n\r\nexport class SQLDerivedType extends SQLType {\r\n\r\n    name: string;\r\n\r\n    constructor(public baseType: SQLBaseType, public parameterValues: number[]) {\r\n        super();\r\n        let parameters = parameterValues.join(\", \");\r\n        this.name = baseType.name + \"(\" + parameters + \")\";\r\n    }\r\n\r\n    toString(): string {\r\n        return this.name;\r\n    }\r\n\r\n    getBaseTypeName(): string {\r\n        return this.baseType.name;\r\n    }\r\n\r\n\r\n    canCastTo(type2: SQLType): boolean {\r\n\r\n        let bt2: SQLBaseType = type2 instanceof SQLBaseType ? type2 : type2[\"baseType\"];\r\n\r\n        return this.baseType.canCastToList.indexOf(bt2.name) >= 0 || this.baseType.name == bt2.name;\r\n\r\n    }\r\n\r\n    getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType {\r\n\r\n\r\n        let map = this.baseType.binaryResultTypes.get(operator);\r\n        if (map == null) return null;\r\n\r\n        let bt2: SQLBaseType = secondType instanceof SQLBaseType ? secondType : secondType[\"baseType\"];\r\n\r\n        let returnBaseType = map.get(bt2);\r\n\r\n        if (this.baseType == bt2 && this.baseType == returnBaseType && secondType instanceof SQLDerivedType) {\r\n            if (this.baseType.name == \"varchar\" || operator == TokenType.concatenation) {\r\n                return new SQLDerivedType(this.baseType, [this.parameterValues[0] + secondType.parameterValues[0]]);\r\n            }\r\n            if (this.baseType.name == \"decimal\") {\r\n                return new SQLDerivedType(this.baseType, [Math.max(this.parameterValues[0], secondType.parameterValues[0]), Math.max(this.parameterValues[1], secondType.parameterValues[1])]);\r\n            }\r\n        }\r\n\r\n        return map.get(bt2);\r\n\r\n    }\r\n\r\n    getUnaryResultType(operator: TokenType): SQLType {\r\n        return this.baseType.getUnaryResultType(operator);\r\n    }\r\n\r\n    getBinaryResult(operator: TokenType, value1: any, value2: any): any {\r\n        let result = this.baseType.getBinaryResult(operator, value1, value2);\r\n        if (this.name = \"varchar\") return result == null ? null : (\"\" + result).substr(0, this.parameterValues[0]);\r\n        if (this.name == \"decimal\") {\r\n            if (result == null) return null;\r\n            return Math.round(result * tens[this.parameterValues[1]]) / tens[this.parameterValues[1]];\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nlet textTypes = [\"varchar\", \"char\", \"text\" ,\"tinytext\", \"mediumtext\", \"longtext\"];\r\n\r\nvar varcharType = new SQLBaseType(\"varchar\", [\"Maximale Länge\"], (ci, pv) => `check(length(${ci}) <= ${pv[0]})`,\r\n    (v: string, pv) => v.substring(0, pv[0]), textTypes);\r\n    \r\nvar charType = new SQLBaseType(\"char\", [\"Maximale Länge\"], (ci, pv) => `check(length(${ci}) <= ${pv[0]})`,\r\n    (v: string, pv) => v.substring(0, pv[0]), textTypes);\r\n\r\nvar textType = new SQLBaseType(\"text\", [\"Maximale Länge\"], (ci, pv) => \"\", (v: string, pv) => v, textTypes.concat([\"time\", \"date\", \"datetime\", \"timestamp\"]));\r\nvar tinyTextType = new SQLBaseType(\"tinyText\", [], (ci, pv) => \"\", (v: string, pv) => v, textTypes);\r\nvar mediumTextType = new SQLBaseType(\"mediumText\", [], (ci, pv) => \"\", (v: string, pv) => v, textTypes);\r\nvar longTextType = new SQLBaseType(\"longText\", [], (ci, pv) => \"\", (v: string, pv) => v, textTypes);\r\n\r\nlet floatTypes = [\"decimal\", \"numeric\", \"double\", \"real\", \"float\"];\r\n\r\nvar decimalType = new SQLBaseType(\"decimal\", [\"Gesamtzahl der Stellen\", \"Nachkommastellen\"], (ci, pv) => \"\",\r\n    (v: number, pv) => { let vk = Math.trunc(v); let nk = v - vk; return \"\" + vk + (pv[1] > 0 ? \".\" + Math.round(nk * tens[pv[1]]) : \"\") },\r\n    floatTypes);\r\nvar numericType = new SQLBaseType(\"numeric\", [\"Gesamtzahl der Stellen\", \"Nachkommastellen\"], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\nvar doubleType = new SQLBaseType(\"double\", [\"Gesamtzahl der Stellen\", \"Nachkommastellen\"], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\nvar realType = new SQLBaseType(\"real\", [], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\nvar floatType = new SQLBaseType(\"float\", [], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\n\r\nlet inttypes = [\"int\", \"integer\", \"tinyint\", \"smallint\", \"mediumint\", \"bigint\"];\r\nlet numberTypes = inttypes.concat(floatTypes);\r\n\r\nvar intType = new SQLBaseType(\"int\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar integerType = new SQLBaseType(\"integer\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar tinyIntType = new SQLBaseType(\"tinyint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar smallIntType = new SQLBaseType(\"smallint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar mediumIntType = new SQLBaseType(\"mediumint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar bigIntType = new SQLBaseType(\"bigint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\n\r\nvar timeType = new SQLBaseType(\"time\", [], (ci, pv) => `check(isTime(${ci}))`, (v: string, pv) => v, []);\r\nvar dateType = new SQLBaseType(\"date\", [], (ci, pv) => `check(isDate(${ci}))`, (v: string, pv) => v, []);\r\nvar dateTimeType = new SQLBaseType(\"datetime\", [], (ci, pv) => `check(isDateTime(${ci}))`, (v: string, pv) => v, [\"timestamp\"]);\r\nvar timestampType = new SQLBaseType(\"timestamp\", [], (ci, pv) => `check(isDateTime(${ci}))`, (v: string, pv) => v, [\"datetime\"]);\r\n\r\n\r\nvar booleanType = new SQLBaseType(\"boolean\", [], (ci, pv) => `check(${ci} == 0 or ${ci} == 1)`, (v, pv) => v == 1 ? \"true\" : \"false\",\r\n    [\"varchar\", \"text\", \"decimal\", \"numeric\"]);\r\n\r\nvar nullType = new SQLBaseType(\"null\", [], (ci, pv) => \"\", (v, pv) => v,\r\n    []);\r\n\r\nlet numericTypes = [decimalType, numericType, doubleType, realType, floatType, intType, integerType, tinyIntType, smallIntType, mediumIntType, bigIntType];\r\n\r\nlet baseTypes = [varcharType, charType, textType, tinyTextType, mediumTextType, longTextType,\r\n    timeType, dateType, dateTimeType, timestampType, booleanType, nullType].concat(numericTypes);\r\n\r\nlet timeTypes = [timeType, dateType, dateTimeType, timestampType];\r\n\r\nSQLBaseType.addBaseTypes(baseTypes);\r\n\r\nvarcharType.addBinaryOperation(TokenType.concatenation, varcharType, varcharType);\r\nvarcharType.addBinaryOperation(TokenType.concatenation, charType, varcharType);\r\nvarcharType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\ntextType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\nvarcharType.addBinaryOperation(TokenType.keywordLike, varcharType, booleanType);\r\nvarcharType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\ntextType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\n\r\ncharType.addBinaryOperation(TokenType.concatenation, charType, charType);\r\ncharType.addBinaryOperation(TokenType.concatenation, varcharType, charType);\r\ncharType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\ntextType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\ncharType.addBinaryOperation(TokenType.keywordLike, charType, booleanType);\r\ncharType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\ntextType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\n\r\nlet numericBinaryOperators: TokenType[] = [TokenType.plus, TokenType.minus, TokenType.multiplication, TokenType.division, TokenType.modulo];\r\nlet comparisonOperators: TokenType[] = [TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual];\r\n\r\nfor (let i = 0; i < numericTypes.length; i++) {\r\n    for (let j = i; j < numericTypes.length; j++) {\r\n        numericTypes[i].addBinaryOperation(numericBinaryOperators, numericTypes[j], numericTypes[j]);\r\n        numericTypes[i].addBinaryOperation(comparisonOperators, numericTypes[j], booleanType);\r\n    }\r\n    numericTypes[i].unaryOperators = [TokenType.minus];\r\n}\r\n\r\ndecimalType.addBinaryOperation(numericBinaryOperators, decimalType, decimalType);\r\n\r\nlet characterTypes = [varcharType, textType];\r\nfor (let i = 0; i < characterTypes.length; i++) {\r\n    for (let j = i; j < characterTypes.length; j++) {\r\n        characterTypes[i].addBinaryOperation(TokenType.concatenation, characterTypes[j], characterTypes[j]);\r\n        characterTypes[i].addBinaryOperation(comparisonOperators, characterTypes[j], booleanType);\r\n    }\r\n}\r\n\r\nfor(let i = 0; i < timeTypes.length; i++){\r\n    timeTypes[i].addBinaryOperation(comparisonOperators, timeTypes[i], booleanType);\r\n    for(let j = 0; j < characterTypes.length; j++){\r\n        timeTypes[i].addBinaryOperation(comparisonOperators, characterTypes[j], booleanType);\r\n        characterTypes[j].addBinaryOperation(comparisonOperators, timeTypes[i], booleanType);\r\n    }\r\n}\r\n\r\nlet booleanOperations = [TokenType.keywordAnd, TokenType.keywordOr];\r\nbooleanType.addBinaryOperation(booleanOperations, booleanType, booleanType);\r\n\r\nbooleanType.unaryOperators = [TokenType.keywordNot];\r\n\r\nbaseTypes.forEach(bt => bt.unaryOperators = bt.unaryOperators.concat([TokenType.isNull, TokenType.isNotNull]));","import { param, timers } from \"jquery\";\r\nimport { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenList, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { ASTNode, BracketsNode, SelectNode, TermNode, TableOrSubqueryNode, TableNode, SubqueryNode, GroupByNode, OrderByNode, LimitNode, IdentifierNode, DotNode, ListNode, ColumnNode, InsertNode, ConstantNode, UnaryOpNode, CreateTableNode, CreateTableColumnNode, ForeignKeyInfo, UpdateNode, DeleteNode, DropTableNode, AlterTableNode, AlterTableKind, OmittedStatementNode } from \"./AST.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { Column } from \"./SQLTable.js\";\r\nimport { SQLBaseType } from \"./SQLTypes.js\";\r\n\r\nexport type SQLStatement = {\r\n    ast: ASTNode,\r\n    from: TextPosition,\r\n    to: TextPosition,\r\n    hasErrors: boolean,\r\n    acceptedBySQLite: boolean,\r\n    sql?: string,\r\n    sqlCleaned?: string\r\n}\r\n\r\n\r\nexport class Parser {\r\n\r\n    static operatorPrecedence: TokenType[][] = [\r\n        [TokenType.keywordOr], [TokenType.keywordAnd],\r\n        [TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual, TokenType.keywordLike],\r\n        [TokenType.concatenation, TokenType.plus, TokenType.minus], [TokenType.multiplication, TokenType.division, TokenType.modulo],\r\n        [TokenType.keywordIn, TokenType.keywordNotIn]\r\n    ];\r\n\r\n    module: Module;\r\n\r\n    pos: number;\r\n    tokenList: TokenList;\r\n\r\n    errorList: Error[];\r\n\r\n    lookahead = 4;\r\n    ct: Token[];\r\n    lastToken: Token;\r\n    cct: Token;\r\n    tt: TokenType;\r\n    position: TextPosition;\r\n    lastComment: Token;\r\n\r\n    endToken: Token = {\r\n        position: { line: 0, column: 0, length: 1 },\r\n        tt: TokenType.endofSourcecode,\r\n        value: \"das Ende des Programms\"\r\n    };\r\n\r\n    beginStatementKeywords = [\"select\", \"insert into\", \"update\", \"create table\", \"delete from\", \"alter table\", \"drop table\"];\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    parse(m: Module) {\r\n\r\n        this.module = m;\r\n\r\n        this.tokenList = m.tokenList;\r\n        this.errorList = [];\r\n\r\n        m.completionHints = new Map();\r\n\r\n        if (this.tokenList.length == 0) {\r\n            this.module.sqlStatements = [];\r\n            this.module.errors[1] = this.errorList;\r\n            this.module.addCompletionHint({ line: 0, column: 0, length: 0 }, { line: 20000, column: 100, length: 0 }, false, false,\r\n                this.beginStatementKeywords);\r\n            return;\r\n        }\r\n\r\n        this.pos = 0;\r\n        this.initializeLookahead();\r\n\r\n\r\n        let lastToken = this.tokenList[this.tokenList.length - 1];\r\n        this.endToken.position = { line: lastToken.position.line, column: lastToken.position.column + lastToken.position.length, length: 1 };\r\n\r\n        this.module.sqlStatements = this.parseMain();\r\n\r\n        this.module.errors[1] = this.errorList;\r\n\r\n    }\r\n\r\n    initializeLookahead() {\r\n\r\n        this.ct = [];\r\n\r\n        for (let i = 0; i < this.lookahead; i++) {\r\n\r\n            let token: Token = this.endToken;\r\n\r\n            while (true) {\r\n\r\n                if (this.pos >= this.tokenList.length) break;\r\n\r\n                let token1 = this.tokenList[this.pos]\r\n                if (token1.tt == TokenType.comment) {\r\n                    this.lastComment = token1;\r\n                }\r\n\r\n                if (token1.tt != TokenType.newline && token1.tt != TokenType.space && token1.tt != TokenType.comment) {\r\n                    token = token1;\r\n                    if (this.lastComment != null) {\r\n                        token.commentBefore = this.lastComment;\r\n                        this.lastComment = null;\r\n                    }\r\n                    break;\r\n                }\r\n\r\n                this.pos++;\r\n\r\n            }\r\n\r\n            this.ct.push(token);\r\n\r\n            if (i < this.lookahead - 1) {\r\n                this.pos++;\r\n            }\r\n\r\n        }\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    nextToken() {\r\n\r\n        let token: Token;\r\n        this.lastToken = this.cct;\r\n\r\n        while (true) {\r\n\r\n            this.pos++;\r\n\r\n            if (this.pos >= this.tokenList.length) {\r\n                token = this.endToken;\r\n                break;\r\n            }\r\n\r\n            token = this.tokenList[this.pos]\r\n            if (token.tt == TokenType.comment) {\r\n                this.lastComment = token;\r\n            }\r\n\r\n            if (token.tt != TokenType.newline && token.tt != TokenType.space && token.tt != TokenType.comment) {\r\n                token.commentBefore = this.lastComment;\r\n                this.lastComment = null;\r\n                break;\r\n            }\r\n\r\n        }\r\n\r\n        for (let i = 0; i < this.lookahead - 1; i++) {\r\n            this.ct[i] = this.ct[i + 1];\r\n        }\r\n\r\n        this.ct[this.lookahead - 1] = token;\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position?: TextPosition, quickFix?: QuickFix) {\r\n        if (position == null) position = Object.assign({}, this.position);\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    skip(tt: TokenType | TokenType[]) {\r\n        if (!Array.isArray(tt)) tt = [tt];\r\n        if (tt.indexOf(this.tt) >= 0) this.nextToken();\r\n    }\r\n\r\n    expect(tt: TokenType | TokenType[], skip: boolean = true, invokeSemicolonAngel: boolean = false): boolean {\r\n        if (this.tt != tt && !(Array.isArray(tt) && tt.indexOf(this.tt) >= 0)) {\r\n            if (tt == TokenType.semicolon && this.tt == TokenType.endofSourcecode) {\r\n                return true;\r\n            }\r\n\r\n            let position: TextPosition = this.cct.position;\r\n            if (tt == TokenType.semicolon && this.lastToken != null) {\r\n\r\n                if (this.lastToken.position.line < position.line) {\r\n                    position = {\r\n                        line: this.lastToken.position.line,\r\n                        column: this.lastToken.position.column + this.lastToken.position.length,\r\n                        length: 1\r\n                    }\r\n                }\r\n            }\r\n\r\n            let quickFix: QuickFix = null;\r\n            if (tt == TokenType.semicolon && this.lastToken.position.line < this.cct.position.line &&\r\n                !this.isOperatorOrDot(this.lastToken.tt)\r\n            ) {\r\n                quickFix = {\r\n                    title: 'Strichpunkt hier einfügen',\r\n                    editsProvider: (uri) => {\r\n                        return [{\r\n                            resource: uri,\r\n                            edit: {\r\n                                range: {\r\n                                    startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position.column,\r\n                                    message: \"\",\r\n                                    severity: monaco.MarkerSeverity.Error\r\n                                },\r\n                                text: \";\"\r\n                            }\r\n                        }\r\n                        ];\r\n                    }\r\n                }\r\n\r\n                if (invokeSemicolonAngel) {\r\n                    this.module.main.getSemicolonAngel().register(position, this.module);\r\n                }\r\n            }\r\n\r\n            let expectedValuesArray: string[];\r\n\r\n            if (Array.isArray(tt)) {\r\n                expectedValuesArray = tt.map(token => TokenTypeReadable[token]);\r\n                let expectedTokens = expectedValuesArray.join(\", \");\r\n                this.pushError(\"Erwartet wird eines der folgenden: \" + expectedTokens + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            } else {\r\n                expectedValuesArray = [TokenTypeReadable[tt]];\r\n                this.pushError(\"Erwartet wird: \" + TokenTypeReadable[tt] + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            }\r\n\r\n            // if (!Array.isArray(tt) && tt != TokenType.identifier) {\r\n            //     this.module.addCompletionHint(this.getEndOfPosition(this.lastToken.position), this.getCurrentPositionPlus(1), false, false, expectedValuesArray);\r\n            // }\r\n\r\n            return false;\r\n        }\r\n\r\n        if (skip) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    getEndOfPosition(p: TextPosition): TextPosition {\r\n        return {\r\n            line: p.line,\r\n            column: p.column + p.length,\r\n            length: 0\r\n        }\r\n    }\r\n\r\n    isOperatorOrDot(tt: TokenType): boolean {\r\n        if (tt == TokenType.dot) return true;\r\n        for (let op of Parser.operatorPrecedence) {\r\n            for (let operator of op) {\r\n                if (tt == operator) return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    isEnd(): boolean {\r\n        return this.cct == this.endToken;\r\n    }\r\n\r\n    comesToken(token: TokenType | TokenType[], skip: boolean = false): boolean {\r\n\r\n        if (!Array.isArray(token)) {\r\n            let ret: boolean = this.tt == token;\r\n            if (ret && skip) this.nextToken();\r\n            return ret;\r\n        }\r\n\r\n        return token.indexOf(this.tt) >= 0;\r\n\r\n    }\r\n\r\n    getCurrentPosition(): TextPosition {\r\n        return Object.assign({}, this.position);\r\n    }\r\n\r\n    getCurrentPositionPlus(deltaColumns: number): TextPosition {\r\n\r\n        if (this.tt == TokenType.endofSourcecode) {\r\n            return {\r\n                line: this.endToken.position.line,\r\n                column: 100,\r\n                length: 1\r\n            }\r\n        }\r\n\r\n        // get Token in which new position falls:\r\n        let tpos = 0;\r\n        let deltaInsideToken = deltaColumns;\r\n        let length = 0;\r\n        while (tpos < this.lookahead - 1 && (length = this.ct[tpos].position.length) < deltaInsideToken) {\r\n            deltaInsideToken -= length;\r\n            tpos++;\r\n        }\r\n        let tokenPos = this.ct[tpos].position;\r\n        if (tokenPos == null) tokenPos = this.getCurrentPosition();\r\n\r\n        let pos: TextPosition = {\r\n            line: tokenPos.line,\r\n            column: tokenPos.column + deltaInsideToken,\r\n            length: 1\r\n        }\r\n\r\n        return pos;\r\n    }\r\n\r\n    getEndOfCurrentToken(): TextPosition {\r\n\r\n        let position = this.getCurrentPosition();\r\n        position.column = position.column + this.position.length;\r\n        position.length = 0;\r\n\r\n        return position;\r\n    }\r\n\r\n    parseMain(): SQLStatement[] {\r\n\r\n        let mainProgram: SQLStatement[] = [];\r\n\r\n        let mainProgramEnd: TextPosition = {\r\n            column: 0,\r\n            line: 10000,\r\n            length: 1\r\n        }\r\n\r\n        let afterLastStatement: TextPosition = {\r\n            column: 0,\r\n            line: 0,\r\n            length: 0\r\n        }\r\n\r\n        let semicolonAfterLastStatement: boolean = true;\r\n\r\n        this.module.addCompletionHint(afterLastStatement, this.getCurrentPositionPlus(8), false, false,\r\n            this.beginStatementKeywords);\r\n\r\n        while (!this.isEnd()) {\r\n\r\n            let oldPos = this.pos;\r\n\r\n            let errorsBeforeStatement: number = this.errorList.length;\r\n\r\n            while ([TokenType.space, TokenType.newline, TokenType.comment, TokenType.semicolon].indexOf(this.cct.tt) >= 0) {\r\n                this.nextToken();\r\n            }\r\n\r\n            let startPosition = this.getCurrentPosition();\r\n\r\n            let st = this.parseStatement();\r\n\r\n            afterLastStatement = {\r\n                line: this.lastToken.position.line + 1,\r\n                column: 0,\r\n                length: 0\r\n            }\r\n\r\n            semicolonAfterLastStatement = this.tt == TokenType.semicolon;\r\n            while (this.tt == TokenType.semicolon) {\r\n                this.nextToken();\r\n            }\r\n\r\n            let hasErrors: boolean = false;\r\n            for (let i = errorsBeforeStatement; i < this.errorList.length; i++) {\r\n                if (this.errorList[i].level == \"error\") hasErrors = true;\r\n            }\r\n\r\n            if (st != null) {\r\n                mainProgram.push({\r\n                    ast: st,\r\n                    from: startPosition,\r\n                    to: this.getEndOfPosition(this.lastToken.position),\r\n                    hasErrors: hasErrors,\r\n                    acceptedBySQLite: false\r\n                });\r\n            }\r\n            // console.log(mainProgram[mainProgram.length - 1]);\r\n\r\n            mainProgramEnd = this.getCurrentPosition();\r\n\r\n            // emergency-forward:\r\n            if (this.pos == oldPos) {\r\n                let beginStatementTokens: TokenType[] =\r\n                    [TokenType.keywordSelect, TokenType.keywordUpdate, TokenType.keywordCreate, TokenType.keywordInsert,\r\n                    TokenType.keywordDelete, TokenType.keywordDrop, TokenType.keywordAlter];\r\n\r\n                let firstBadToken: boolean = true;\r\n\r\n                while (!this.isEnd() && beginStatementTokens.indexOf(this.tt) < 0) {\r\n                    if ([TokenType.space, TokenType.newline].indexOf(this.tt) < 0 && firstBadToken) {\r\n                        this.pushError(\"Erwartet wird eines dieser Schlüsselwörter: \" + beginStatementTokens.map(t => TokenTypeReadable[t]).join(\", \")\r\n                            + \"; Gefunden wurde: \" + this.cct.value);\r\n                        firstBadToken = true;\r\n                    }\r\n                    this.nextToken();\r\n                }\r\n            }\r\n\r\n            if (semicolonAfterLastStatement || this.cct.position.line - afterLastStatement.line > 0) {\r\n                this.module.addCompletionHint(afterLastStatement, this.getCurrentPositionPlus(8), false, false,\r\n                    this.beginStatementKeywords);\r\n            }\r\n\r\n        }\r\n\r\n        this.module.addCompletionHint(afterLastStatement, { line: this.endToken.position.line + 1, column: 0, length: 0 }, false, false,\r\n            this.beginStatementKeywords);\r\n\r\n        return mainProgram;\r\n\r\n    }\r\n\r\n\r\n\r\n    parseStatement(expectSemicolon: boolean = true): ASTNode {\r\n\r\n        let retStatements: ASTNode = null;\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordSelect:\r\n                return this.parseSelect();\r\n            case TokenType.keywordInsert:\r\n                return this.parseInsert();\r\n            case TokenType.keywordCreate:\r\n                return this.parseCreateTableOrDatabase();\r\n            case TokenType.keywordUpdate:\r\n                return this.parseUpdate();\r\n            case TokenType.keywordDelete:\r\n                return this.parseDelete();\r\n            case TokenType.keywordDrop:\r\n                return this.parseDropTable();\r\n            case TokenType.keywordAlter:\r\n                return this.parseAlterTable();\r\n            case TokenType.keywordCommit:\r\n                this.pushError(\"Die Aweisung commit ist unnötig, da jede Anweisung automatisch commited wird.\", \"info\");\r\n                this.nextToken();\r\n                return null;\r\n            // Omitted statements:\r\n            case TokenType.keywordSet:\r\n                return this.parseSet();\r\n            case TokenType.keywordUse:\r\n                return this.parseUse();\r\n            case TokenType.keywordStart:\r\n                this.nextToken();\r\n                this.expect(TokenType.keywordTransaction, true);\r\n                return null;\r\n            case TokenType.keywordLock:\r\n            case TokenType.keywordUnlock:\r\n                this.parseLockUnlock();\r\n                return null;\r\n\r\n            default:\r\n                let s = TokenTypeReadable[this.tt];\r\n                if (s == null) s = \"\";\r\n                if (s != this.cct.value) s += \"(\" + this.cct.value + \")\";\r\n                s += \" wird hier nicht erwartet.\";\r\n                this.pushError(s);\r\n                this.nextToken();\r\n                break;\r\n        }\r\n\r\n\r\n        return retStatements;\r\n\r\n    }\r\n\r\n    parseLockUnlock() {\r\n        this.nextToken();\r\n        this.expect(TokenType.keywordTables, true);\r\n        this.skip(TokenType.identifier);\r\n        this.skip([TokenType.keywordWrite, TokenType.keywordRead]);\r\n        this.skip(TokenType.semicolon);\r\n    }\r\n\r\n    parseSet(): OmittedStatementNode {\r\n\r\n        this.pushError(\"Das SET-Statement wird von SQLite nicht unterstützt. Diese Anweisung wird daher einfach überlesen.\", \"info\");\r\n\r\n        let node: OmittedStatementNode = {\r\n            type: TokenType.omittedeStatement,\r\n            position: this.getCurrentPosition(),\r\n            endPosition: null,\r\n            symbolTable: null\r\n        }\r\n\r\n        this.nextToken(); // skip 'set'\r\n        this.expect(TokenType.identifier, true);\r\n        this.expect(TokenType.equal, true);\r\n        this.expect([TokenType.identifier, TokenType.stringConstant, TokenType.integerConstant, TokenType.charConstant, TokenType.booleanConstant, TokenType.floatingPointConstant], true);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n    parseUse(): OmittedStatementNode {\r\n\r\n        this.pushError(\"Das USE-Statement wird von SQLite nicht unterstützt. Diese Anweisung wird daher einfach überlesen. Sie können eine andere Datenbank auswählen indem Sie in der Datenbankliste links darauf klicken.\", \"info\");\r\n\r\n        let node: OmittedStatementNode = {\r\n            type: TokenType.omittedeStatement,\r\n            position: this.getCurrentPosition(),\r\n            endPosition: null,\r\n            symbolTable: null\r\n        }\r\n\r\n        this.nextToken(); // skip 'use'\r\n        this.expect(TokenType.identifier, true);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n    parseAlterTable(): AlterTableNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"alter\"\r\n\r\n        let node: AlterTableNode = {\r\n            type: TokenType.keywordAlter,\r\n            kind: null,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n        }\r\n\r\n        if (!this.expect(TokenType.keywordTable, true)) {\r\n            this.addCompletionHintHere(false, false, [\"table\"], 1);\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1);\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        this.addCompletionHintHere(false, false, [\"rename to\", \"rename column\", \"add column\", \"drop column\"], 1);\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordRename: this.parseRenameTableOrColumn(node); break;\r\n            case TokenType.keywordAdd: this.parseAlterTableAdd(node); break;\r\n            case TokenType.keywordDrop: this.parseDropColumn(node); break;\r\n            default:\r\n                this.pushError(\"Erwartet wird rename to, rename column, add column oder drop column\");\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    parseRenameTableOrColumn(node: AlterTableNode) {\r\n\r\n        this.nextToken();\r\n        if (!this.comesToken(TokenType.keywordTo)) {\r\n            this.addCompletionHintHere(node.tableIdentifier, false, [\"column\", \"to\"], 3);\r\n        }\r\n        node.endPosition = this.getEndOfCurrentToken();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordTo:\r\n                this.nextToken();\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                node.kind = \"renameTable\";\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    node.newTableName = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    node.endPosition = this.getEndOfCurrentToken();\r\n                } else {\r\n                    this.pushError(\"Erwartet wird der neue Tabellenname.\");\r\n                }\r\n                return;\r\n            case TokenType.keywordColumn:\r\n                this.nextToken();\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                this.addCompletionHintHere(node.tableIdentifier, false, [], 3);\r\n                if (!this.comesToken(TokenType.identifier)) {\r\n                    this.pushError(\"Erwartet wird der Name einer Spalte der Tabelle \" + node.tableIdentifier + \".\");\r\n                    return;\r\n                }\r\n                node.kind = \"renameColumn\";\r\n                node.oldColumnName = <string>this.cct.value;\r\n                node.oldColumnPosition = this.getCurrentPosition();\r\n                this.nextToken();\r\n                this.addCompletionHintHere(false, false, [\"to\"], 3);\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                if (!this.expect(TokenType.keywordTo, true)) return;\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    node.newColumnName = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    node.endPosition = this.getEndOfCurrentToken();\r\n                } else {\r\n                    this.pushError(\"Erwartet wird der neue Spaltenname.\");\r\n                }\r\n                return;\r\n            default:\r\n                this.pushError(\"Erwartet wird das Schlüsselwort 'to' (zum Umbenennen der Tabelle) oder das Schlüsselwor 'column' (zum Umbenennen einer Spalte).\")\r\n                return;\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    parseDropColumn(node: AlterTableNode) {\r\n        this.nextToken(); // skip 'drop'\r\n        this.comesToken(TokenType.keywordColumn, true);\r\n        node.oldColumnPosition = this.getCurrentPosition();\r\n        this.addCompletionHintHere(node.tableIdentifier, false, [], 3);\r\n\r\n        node.kind = \"dropColumn\";\r\n        node.endPosition = this.getEndOfCurrentToken();\r\n\r\n        if (this.comesToken(TokenType.identifier)) {\r\n            node.oldColumnName = <string>this.cct.value;\r\n            this.nextToken();\r\n        } else {\r\n            this.pushError(\"Erwartet wird der Bezeichner der Spalte, die gelöscht werden soll.\");\r\n        }\r\n\r\n    }\r\n\r\n    parseAlterTableAdd(node: AlterTableNode) {\r\n        do {\r\n            this.nextToken(); // skip \"add\" or \",\"\r\n            this.comesToken(TokenType.keywordAdd, true);\r\n            let unique: boolean = false;\r\n            switch (this.tt) {\r\n                case TokenType.keywordColumn:\r\n                    this.parseAddColumn(node);\r\n                    break;\r\n                case TokenType.keywordPrimary:\r\n                    this.parseAddPrimaryKey(node);\r\n                    break;\r\n                case TokenType.keywordUnique:\r\n                    this.nextToken();\r\n                    unique = true;\r\n                    this.expect([TokenType.keywordIndex, TokenType.keywordKey], false);\r\n                case TokenType.keywordKey:\r\n                case TokenType.keywordIndex:\r\n                    this.parseAddIndex(node, unique);\r\n                    break;\r\n                case TokenType.keywordModify:\r\n                    this.parseModifyColumn(node);\r\n                    break;\r\n                case TokenType.keywordConstraint:\r\n                    this.parseAddConstraint(node);\r\n                    break;\r\n            }\r\n        } while (this.tt == TokenType.comma);\r\n    }\r\n\r\n    parseAddConstraint(node: AlterTableNode) {\r\n        this.nextToken(); // skip \"constraint\"\r\n        if (!this.expect(TokenType.identifier)) return;\r\n\r\n        if (this.comesToken(TokenType.keywordForeign)) {\r\n            let fki = this.parseForeignKeyDefinition();\r\n            if (fki != null) {\r\n                if (node.foreignKeys == null) node.foreignKeys = [];\r\n                node.foreignKeys.push(fki);\r\n                node.kind = \"omittedKind\";\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    parseForeignKeyDefinition(): ForeignKeyInfo {\r\n        let fki: ForeignKeyInfo = { column: \"\", referencesTable: \"\", referencesColumn: \"\", referencesPosition: this.getCurrentPosition() };\r\n        if (!this.expect(TokenType.keywordForeign)) return;\r\n        if (!this.expect(TokenType.keywordKey)) return;\r\n        if (!this.expect(TokenType.leftBracket)) return;\r\n\r\n        if (!this.comesToken(TokenType.identifier)) {\r\n            this.pushError(\"Der Bezeichner der Fremdschlüsselspalte wird erwartet.\");\r\n            return;\r\n        }\r\n\r\n        fki.column = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        if (!this.expect(TokenType.rightBracket)) return;\r\n        this.parseReferences(fki);\r\n        return fki;\r\n    }\r\n\r\n    parseReferences(fki: ForeignKeyInfo) {\r\n\r\n        if (!this.expect(TokenType.keywordReferences)) return;\r\n\r\n        this.addCompletionHintHere(false, true, []);\r\n\r\n        if (!this.comesToken(TokenType.identifier)) {\r\n            this.pushError(\"Der Bezeichner der referenzierten Tabelle wird erwartet.\");\r\n            return;\r\n        }\r\n\r\n        fki.referencesTable = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        let pos0 = this.lastToken.position;\r\n        let pos1 = this.getCurrentPosition();\r\n        this.module.addCompletionHint(this.getEndOfPosition(pos0), pos1, fki.referencesTable, false, []);\r\n\r\n\r\n        if (!this.expect(TokenType.leftBracket)) return;\r\n        if (!this.comesToken(TokenType.identifier)) {\r\n            this.pushError(\"Der Bezeichner der referenzierten Spalte wird erwartet.\");\r\n            return;\r\n        }\r\n\r\n        fki.referencesColumn = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        if (!this.expect(TokenType.rightBracket)) return;\r\n\r\n        while (this.tt == TokenType.keywordOn) {\r\n            this.nextToken();\r\n            let kind: \"onDelete\" | \"onUpdate\" | \"\" = \"\";\r\n\r\n            switch (this.tt) {\r\n                //@ts-ignore\r\n                case TokenType.keywordDelete:\r\n                    kind = \"onDelete\";\r\n                    break;\r\n                //@ts-ignore\r\n                case TokenType.keywordUpdate:\r\n                    kind = \"onUpdate\";\r\n                    break;\r\n            }\r\n\r\n            if (kind == \"\") {\r\n                this.pushError(\"Nach 'on' wird 'delete' oder 'update' erwartet.\");\r\n                if (!this.comesToken([TokenType.keywordCascade, TokenType.keywordRestrict, TokenType.keywordSet, TokenType.keywordNo])) {\r\n                    this.nextToken();\r\n                    kind = \"onDelete\";\r\n                }\r\n            } else {\r\n                this.nextToken();\r\n            }\r\n\r\n            switch (this.tt) {\r\n                //@ts-ignore\r\n                case TokenType.keywordCascade:\r\n                //@ts-ignore\r\n                case TokenType.keywordRestrict:\r\n                    fki[kind] = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    break;\r\n                //@ts-ignore\r\n                case TokenType.keywordSet:\r\n                    fki[kind] = \"set \";\r\n                    this.nextToken();\r\n                    if ([TokenType.keywordNull, TokenType.keywordDefault].indexOf(this.tt) >= 0) {\r\n                        fki[kind] += this.cct.value;\r\n                        this.nextToken();\r\n                    } else {\r\n                        this.pushError(\"Nach 'on delete/update set' wird 'null' oder 'default' erwartet.\");\r\n                    }\r\n                    break;\r\n                //@ts-ignore\r\n                case TokenType.keywordNo:\r\n                    this.nextToken();\r\n                    if (this.expect(TokenType.keywordAction), true) {\r\n                        fki[kind] = \"no action\";\r\n                    }\r\n                    break;\r\n                default:\r\n                    this.pushError(\"Nach 'on delete/update' wird 'cascade', 'set null', 'set default' oder 'no action' erwartet.\");\r\n                    break;\r\n\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    parseModifyColumn(node: AlterTableNode) {\r\n        this.nextToken();\r\n        let modifyColumnInfo = this.parseColumnDefinition(false);\r\n        if (modifyColumnInfo != null) {\r\n            if (node.modifyColumnInfo == null) node.modifyColumnInfo = [];\r\n            node.modifyColumnInfo.push(modifyColumnInfo);\r\n        }\r\n    }\r\n\r\n    parseAddPrimaryKey(node: AlterTableNode) {\r\n        this.nextToken(); // skip \"primary\"\r\n        node.primaryKeys = [];\r\n        if (this.expect(TokenType.keywordKey, true) && this.expect(TokenType.leftBracket, false)) {\r\n            do {\r\n                this.nextToken();\r\n                if (this.tt == TokenType.identifier) {\r\n                    node.primaryKeys.push(<string>this.cct.value);\r\n                    this.nextToken();\r\n                }\r\n            } while (this.tt == TokenType.comma)\r\n        }\r\n        if (this.expect(TokenType.rightBracket, true)) {\r\n            node.kind = \"omittedKind\";\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    parseAddIndex(node: AlterTableNode, unique: boolean) {\r\n        this.nextToken(); // skip \"key\" | \"index\"\r\n\r\n        let index = { index_name: \"\", column: \"\", unique: unique }\r\n        if (this.tt == TokenType.identifier) {\r\n            index.index_name = <string>this.cct.value;\r\n            this.nextToken();\r\n        } else {\r\n            this.pushError(\"Erwartet wird der Bezeichner des Index.\");\r\n            return null;\r\n        }\r\n\r\n        if (!this.expect(TokenType.leftBracket, true)) return null;\r\n        if (this.tt == TokenType.identifier) {\r\n            index.column = <string>this.cct.value;\r\n            this.nextToken();\r\n            if (node.indices == null) node.indices = [];\r\n            node.indices.push(index);\r\n        } else {\r\n            this.pushError(\"Erwartet wird der Bezeichner der Spalte, für die ein Index erstellt werden soll.\");\r\n            return null;\r\n        }\r\n\r\n        node.kind = \"omittedKind\";\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        return null;\r\n    }\r\n\r\n    parseAddColumn(node: AlterTableNode) {\r\n        node.kind = \"addColumn\";\r\n        this.comesToken(TokenType.keywordColumn, true);\r\n        node.columnDefBegin = this.getCurrentPosition();\r\n        node.columnDef = this.parseColumnDefinition(false);\r\n    }\r\n\r\n    parseDropTable(): DropTableNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"Delete\"\r\n\r\n        let node: DropTableNode = {\r\n            type: TokenType.keywordDrop,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n            ifExists: false\r\n        }\r\n\r\n        if (!this.expect(TokenType.keywordTable, true)) {\r\n            this.addCompletionHintHere(false, false, [\"table\"], 1);\r\n        }\r\n\r\n        if (this.comesToken(TokenType.keywordIf, true)) {\r\n            node.ifExists = true;\r\n            this.expect(TokenType.keywordExists, true);\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1, \"\", \";\");\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n\r\n    }\r\n\r\n    parseDelete(): DeleteNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"Delete\"\r\n\r\n        let node: DeleteNode = {\r\n            type: TokenType.keywordDelete,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n            whereNode: null,\r\n            whereNodeBegin: null,\r\n            whereNodeEnd: null\r\n        }\r\n\r\n        if (!this.expect(TokenType.keywordFrom, true)) {\r\n            this.addCompletionHintHere(false, false, [\"from\"], 1);\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1, \"\", \" where\\n\\t\");\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        this.addCompletionHintHere(false, false, [\"where\\n\\t\"], 1);\r\n        if (this.tt != TokenType.keywordWhere) return node;\r\n\r\n        this.nextToken(); // skip \"where\"\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n\r\n        node.whereNodeBegin = this.getEndOfPosition(this.lastToken.position);\r\n        node.whereNode = this.parseTerm();\r\n        node.whereNodeEnd = this.getCurrentPosition();\r\n\r\n        this.module.addCompletionHint(node.whereNodeBegin, this.getCurrentPositionPlus(3), node.tableIdentifier, false, []);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n        return node;\r\n\r\n    }\r\n\r\n    parseUpdate(): UpdateNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"update\"\r\n\r\n        let node: UpdateNode = {\r\n            type: TokenType.keywordUpdate,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n            columnIdentifiers: [],\r\n            columnIdentifierPositions: [],\r\n            values: [],\r\n            valuePosBegin: [],\r\n            valuePosEnd: [],\r\n            whereNode: null,\r\n            whereNodeBegin: null,\r\n            whereNodeEnd: null\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1, \"\", \" set\\n\\t\");\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        this.addCompletionHintHere(false, false, [\"set\\n\\t\"], 1);\r\n        if (!this.expect(TokenType.keywordSet)) return node;\r\n        let first: boolean = true;\r\n        do {\r\n            this.addCompletionHintHere(node.tableIdentifier, false, first ? [] : ['where'], 1, null, \" = \");\r\n            first = false;\r\n            if (this.tt != TokenType.identifier) {\r\n                this.pushError(\"Hier wird der Bezeichner derjenigen Spalte der Tabelle \" + node.tableIdentifier + \" erwaretet, deren Wert verändert werden soll.\", \"error\");\r\n                break;\r\n            }\r\n\r\n            node.columnIdentifiers.push(<string>this.cct.value);\r\n            node.columnIdentifierPositions.push(this.getCurrentPosition());\r\n            this.nextToken();\r\n\r\n            this.expect(TokenType.equal, true);\r\n\r\n            node.valuePosBegin.push(this.getCurrentPosition());\r\n            node.values.push(this.parseTerm());\r\n            node.valuePosEnd.push(this.getCurrentPosition());\r\n\r\n        } while (this.comesToken(TokenType.comma, true));\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        if (this.lastToken.tt != TokenType.comma || this.comesToken(TokenType.keywordWhere)) {\r\n            if (!this.expect(TokenType.keywordWhere, true)) return node;\r\n\r\n            node.whereNodeBegin = this.getEndOfPosition(this.lastToken.position);\r\n            node.whereNode = this.parseTerm();\r\n            node.whereNodeEnd = this.getCurrentPosition();\r\n\r\n            this.module.addCompletionHint(node.whereNodeBegin, node.whereNodeEnd, node.tableIdentifier, false, []);\r\n\r\n            node.endPosition = this.getCurrentPosition();\r\n        } else {\r\n            this.comesToken(TokenType.keywordWhere, true); // skip where, if present\r\n        }\r\n        return node;\r\n\r\n    }\r\n\r\n    parseCreateTableOrDatabase(): CreateTableNode | OmittedStatementNode {\r\n        switch (this.ct[1].tt) {\r\n            case TokenType.keywordDatabase:\r\n                return this.parseCreateDatabase();\r\n            case TokenType.keywordTable:\r\n                return this.parseCreateTable();\r\n            default:\r\n                this.nextToken();\r\n                this.pushError(\"Nach 'create' wird 'table' erwartet.\");\r\n                this.nextToken();\r\n                return null;\r\n        }\r\n    }\r\n\r\n    parseCreateDatabase(): OmittedStatementNode {\r\n        let node: OmittedStatementNode = {\r\n            type: TokenType.omittedeStatement,\r\n            position: this.getCurrentPosition(),\r\n            endPosition: null,\r\n            symbolTable: null\r\n        }\r\n\r\n        this.nextToken();\r\n        this.pushError(\"Die CREATE-DATABASE-Anweisung wird von der SQLite-Engine nicht unterstützt. Sie können eine neue Datenbank anlegen, indem Sie auf den entsprechenden Button oberhalb der Liste der Datenbanken (linke Seite des Fensters) klicken. Diese Anweisung wird überlesen.\", \"info\");\r\n        while (this.tt != TokenType.semicolon && this.tt != TokenType.endofSourcecode) {\r\n            node.endPosition = this.getEndOfCurrentToken();\r\n            this.nextToken();\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    parseCreateTable(): CreateTableNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"create\"\r\n\r\n        if (!this.expect(TokenType.keywordTable, true)) {\r\n            this.module.addCompletionHint(startPosition, this.getCurrentPositionPlus(3), false, false, [\"table\"]);\r\n        }\r\n\r\n        let ifNotExists: boolean = false;\r\n        if (this.comesToken(TokenType.keywordIf)) {\r\n            this.nextToken();\r\n            this.expect(TokenType.keywordNot, true);\r\n            this.expect(TokenType.keywordExists, true);\r\n            ifNotExists = true;\r\n        }\r\n\r\n        let identifier = \"\";\r\n        if (this.expect(TokenType.identifier, false)) {\r\n            identifier = <string>this.cct.value;\r\n            let pos1 = this.getCurrentPosition();\r\n            let pos2 = this.getCurrentPositionPlus(identifier.length + 3);\r\n            this.nextToken();\r\n            if(!this.comesToken(TokenType.leftBracket)){\r\n                this.module.addCompletionHint(pos1, pos2, false, false, [\"(\"]);\r\n            }\r\n        }\r\n\r\n        let node: CreateTableNode = {\r\n            type: TokenType.keywordCreate,\r\n            identifier: identifier,\r\n            position: startPosition,\r\n            endPosition: null,\r\n            columnList: [],\r\n            symbolTable: null,\r\n            combinedPrimaryKeyColumns: [],\r\n            foreignKeyInfoList: [],\r\n            ifNotExists: ifNotExists,\r\n            uniqueConstraints: []\r\n        }\r\n\r\n        if (!this.expect(TokenType.leftBracket, true)) return node;\r\n\r\n        let primaryKeyAlreadyDefined: boolean = false;\r\n        let first: boolean = true;\r\n\r\n        while (this.tt != TokenType.rightBracket) {\r\n            if (!first) this.expect(TokenType.comma, true);\r\n            first = false;\r\n            if(this.comesToken(TokenType.keywordConstraint, true)){\r\n                this.expect(TokenType.identifier, true);\r\n                this.expect([TokenType.keywordForeign, TokenType.keywordPrimary, TokenType.keywordUnique], false);\r\n            }\r\n\r\n            switch (this.tt) {\r\n                case TokenType.keywordPrimary:\r\n                    if (primaryKeyAlreadyDefined) this.pushError(\"Je Tabelle darf nur ein einziger Primärschlüssel definiert werden.\", \"error\", this.getCurrentPosition());\r\n                    this.parsePrimaryKeyTerm(primaryKeyAlreadyDefined, node);\r\n                    primaryKeyAlreadyDefined = true;\r\n                    break;\r\n                case TokenType.keywordUnique:\r\n                    this.parseUniqueTerm(node);\r\n                    break;\r\n                case TokenType.keywordForeign:\r\n                    let fki = this.parseForeignKeyDefinition();\r\n                    if (fki != null) {\r\n                        node.foreignKeyInfoList.push(fki);\r\n                    }\r\n                    break;\r\n                case TokenType.identifier:\r\n                    let columnNode = this.parseColumnDefinition(primaryKeyAlreadyDefined);\r\n                    node.columnList.push(columnNode);\r\n                    primaryKeyAlreadyDefined = primaryKeyAlreadyDefined || columnNode.isPrimary;\r\n                    break;\r\n                default:\r\n                    this.pushError(TokenTypeReadable[this.tt] + \" wird hier nicht erwartet.\", \"error\");\r\n                    break;\r\n            }\r\n            if (!this.comesToken(TokenType.comma)) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        while ([TokenType.keywordAutoincrement, TokenType.keywordEngine, TokenType.keywordDefault, TokenType.keywordCollate].indexOf(this.tt) >= 0) {\r\n            switch (this.tt) {\r\n                case TokenType.keywordCollate:\r\n                    this.nextToken();\r\n                    this.skip(TokenType.equal);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordEngine:\r\n                    this.nextToken();\r\n                    this.skip(TokenType.equal);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordDefault:\r\n                    this.nextToken();\r\n                    this.expect([TokenType.keywordCharset, TokenType.keywordCharacter], true);\r\n                    this.skip(TokenType.keywordSet);\r\n                    this.skip(TokenType.equal);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordAutoincrement:\r\n                    this.nextToken();\r\n                    this.expect(TokenType.equal, true);\r\n                    this.expect(TokenType.integerConstant, true);\r\n                    break;\r\n            }\r\n\r\n        }\r\n\r\n        for (let column of node.columnList) {\r\n            if (column.isAutoIncrement && !(column.isPrimary || node.combinedPrimaryKeyColumns.indexOf(column.identifier) >= 0)) {\r\n                this.pushError(\"autoincrement gibt es nur bei Primärschlüsseln, d.h. es fehlt wahrscheinlich 'primary key'.\", \"warning\", node.position);\r\n            }\r\n        }\r\n\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n\r\n    parsePrimaryKeyTerm(primaryKeyAlreadyDefined: boolean, node: CreateTableNode) {\r\n        if (primaryKeyAlreadyDefined) {\r\n            this.pushError(\"Die Tabelle kann nur einen einzigen Primärschlüssel haben.\");\r\n        }\r\n        this.nextToken(); // skip \"primary\"\r\n        this.expect(TokenType.keywordKey, true);\r\n\r\n        let columns: string[] = node.columnList.map(c => c.identifier);\r\n\r\n        this.addCompletionHintHere(false, false, columns);\r\n        if (this.comesToken(TokenType.leftBracket)) {\r\n            this.addCompletionHintHere(false, false, columns);\r\n            this.nextToken();\r\n\r\n            while (true) {\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    node.combinedPrimaryKeyColumns.push(<string>this.cct.value);\r\n                    this.nextToken();\r\n                    this.addCompletionHintHere(false, false, columns, 1);\r\n                    if (!this.comesToken(TokenType.comma)) {\r\n                        break;\r\n                    } else {\r\n                        this.nextToken();\r\n                        this.addCompletionHintHere(false, false, columns);\r\n                    }\r\n                } else {\r\n                    this.pushError(\"Der Bezeichner einer Spalte wird erwartet. Gefunden wurde: \" + this.cct.value);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        } else {\r\n            this.pushError(\"( erwartet.\");\r\n        }\r\n    }\r\n\r\n    parseUniqueTerm(node: CreateTableNode) {\r\n        this.nextToken(); // skip \"unique\"\r\n\r\n        let columns: string[] = node.columnList.map(c => c.identifier);\r\n        let uniqueConstraint: string[] = [];\r\n        node.uniqueConstraints.push(uniqueConstraint);\r\n\r\n        this.addCompletionHintHere(false, false, columns);\r\n        if (this.comesToken(TokenType.leftBracket)) {\r\n            this.addCompletionHintHere(false, false, columns);\r\n            this.nextToken();\r\n\r\n            while (true) {\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    uniqueConstraint.push(<string>this.cct.value);\r\n                    this.nextToken();\r\n                    this.addCompletionHintHere(false, false, columns, 1);\r\n                    if (!this.comesToken(TokenType.comma)) {\r\n                        break;\r\n                    } else {\r\n                        this.nextToken();\r\n                        this.addCompletionHintHere(false, false, columns);\r\n                    }\r\n                } else {\r\n                    this.pushError(\"Der Bezeichner einer Spalte wird erwartet. Gefunden wurde: \" + this.cct.value);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        } else {\r\n            this.pushError(\"( erwartet.\");\r\n        }\r\n    }\r\n\r\n    parseColumnDefinition(primaryKeyAlreadyDefined: boolean): CreateTableColumnNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n        let identifier = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        let node: CreateTableColumnNode = {\r\n            type: TokenType.columnDef,\r\n            identifier: identifier,\r\n            isPrimary: false,\r\n            isAutoIncrement: false,\r\n            position: position,\r\n            baseType: null,\r\n            notNull: false\r\n        }\r\n\r\n        this.parseType(node, primaryKeyAlreadyDefined);\r\n\r\n        return node;\r\n\r\n    }\r\n\r\n    addCompletionHintHere(hintColumns: boolean | string, hintTables: boolean, hints: string[], additionalColumns: number = 0, praefix: string = \"\", suffix: string = \"\") {\r\n        let pos0 = this.lastToken.position;\r\n        let pos1 = this.getCurrentPosition();\r\n        pos1.column += 1 + additionalColumns\r\n        this.module.addCompletionHint(this.getEndOfPosition(pos0), pos1, hintColumns, hintTables, hints, null, praefix, suffix);\r\n    }\r\n\r\n    parseType(node: CreateTableColumnNode, primaryKeyAlreadyDefined: boolean) {\r\n\r\n        let datatypes = SQLBaseType.baseTypes.map(type => type.toString());\r\n        this.addCompletionHintHere(false, false, datatypes);\r\n\r\n        if (!this.expect(TokenType.identifier, false)) {\r\n            this.pushError(\"Erwartet wird ein Datentyp. Gefunden wurde: \" + this.cct.value);\r\n            return;\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n\r\n        let type = SQLBaseType.getBaseType(identifier);\r\n        if (type == null) {\r\n            this.pushError(\"Erwartet wird ein Datentyp. Gefunden wurde: \" + identifier);\r\n        }\r\n        node.baseType = type;\r\n        this.nextToken();\r\n\r\n        if (this.tt == TokenType.leftBracket) {\r\n            this.nextToken();\r\n            node.parameters = [];\r\n            //@ts-ignore\r\n            while (this.tt == TokenType.integerConstant) {\r\n                node.parameters.push(<number>this.cct.value);\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.comma) break;\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.integerConstant) {\r\n                    this.pushError(\"Erwartet wird eine ganze Zahl, gefunden wurde: \" + this.cct.value);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (type != null && node.parameters.length > type.parameterDescriptions.length) {\r\n                this.pushError(\"Der Datentyp \" + type.toString() + \" hat höchstens \" + type.parameterDescriptions.length + \" Parameter.\");\r\n            }\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        }\r\n\r\n        // primary key autoincrement\r\n        // references table(column)\r\n        // not null\r\n\r\n        this.addCompletionHintHere(false, false, [\"primary key\", \"references\", \"not null\"]);\r\n\r\n        let alreadySeenKeywords: TokenType[] = [];\r\n\r\n        while ([TokenType.keywordOn, TokenType.keywordCharacter, TokenType.keywordComment, TokenType.keywordAutoincrement, TokenType.keywordKey, TokenType.keywordPrimary, TokenType.keywordNot, TokenType.keywordReferences, TokenType.keywordCollate, TokenType.keywordDefault].indexOf(this.tt) >= 0) {\r\n            if (alreadySeenKeywords.indexOf(this.tt) >= 0) {\r\n                this.pushError('Das Schlüsselwort ' + TokenTypeReadable[this.tt] + \" darf bei der Definition einer Spalte nicht öfters als ein Mal vorkommen.\");\r\n            }\r\n\r\n            alreadySeenKeywords.push(this.tt);\r\n\r\n            switch (this.tt) {\r\n                case TokenType.keywordAutoincrement:\r\n                    this.nextToken();\r\n                    node.isAutoIncrement = true;\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.equal) {\r\n                        this.nextToken();\r\n                        this.expect(TokenType.integerConstant);\r\n                    } else {\r\n                        //@ts-ignore\r\n                        if (this.tt == TokenType.comma && this.ct[1].tt == TokenType.keywordAutoincrement) {\r\n                            this.nextToken();\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.keywordPrimary:\r\n                    if (primaryKeyAlreadyDefined) this.pushError(\"In einer Tabelle darf es nur einen einzigen primary key geben.\");\r\n                    this.nextToken(); // skip \"primary\"\r\n                    if (!this.expect(TokenType.keywordKey, true)) {\r\n                        this.addCompletionHintHere(false, false, [\"key\"]);\r\n                    } else {\r\n                        this.addCompletionHintHere(false, false, [\"autoincrement, \\n\"])\r\n                    }\r\n                    node.isPrimary = true;\r\n                    break;\r\n                case TokenType.keywordReferences:\r\n                    let fki: ForeignKeyInfo = { column: node.identifier, referencesColumn: \"\", referencesTable: \"\", referencesPosition: this.getCurrentPosition() };\r\n                    node.foreignKeyInfo = fki;\r\n                    this.parseReferences(fki);\r\n                    break;\r\n                case TokenType.keywordNot:\r\n                    this.nextToken();\r\n                    if (!this.expect(TokenType.keywordNull, true)) {\r\n                        this.addCompletionHintHere(false, false, [\"null\"]);\r\n                    } else {\r\n                        this.addCompletionHintHere(false, false, [\"references\"]);\r\n                    }\r\n                    node.notNull = true;\r\n                    break;\r\n                case TokenType.keywordCollate:\r\n                    this.nextToken();\r\n                    node.collate = <string>this.cct.value;\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordCharacter:\r\n                    this.nextToken();\r\n                    this.expect(TokenType.keywordSet, true);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordDefault:\r\n                    this.nextToken();\r\n\r\n                    if (this.ct[1].tt == TokenType.leftBracket && this.ct[2].tt == TokenType.rightBracket) {\r\n                        this.nextToken();\r\n                        this.nextToken();\r\n                        this.nextToken();\r\n                        break;\r\n                    }\r\n\r\n                    node.defaultValue = <string>this.cct.value;\r\n                    if (typeof this.cct.value == \"string\") {\r\n                        node.defaultValue = \"'\" + node.defaultValue + \"'\";\r\n                    }\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.keywordNull) {\r\n                        this.nextToken();\r\n                        break;\r\n                    } else if ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.stringConstant].indexOf(this.tt) >= 0) {\r\n                        let constantType = SQLBaseType.fromConstantType(this.tt);\r\n                        if (!constantType.canCastTo(type)) {\r\n                            this.pushError(\"Die Konstante hinter 'default' passt nicht zum Datentyp der Spalte.\");\r\n                        }\r\n                        this.nextToken();\r\n                    }\r\n                    break;\r\n                case TokenType.keywordComment:\r\n                    this.nextToken(); // Skip \"comment\"\r\n                    this.expect(TokenType.stringConstant, true);\r\n                    break;\r\n                case TokenType.keywordOn:\r\n                    this.nextToken();\r\n                    this.expect([TokenType.keywordUpdate], true);\r\n                    while (!this.comesToken([TokenType.comma, TokenType.endofSourcecode, TokenType.rightBracket])) this.nextToken();\r\n                    //@ts-ignore\r\n                    if (this.lastToken.tt == TokenType.leftBracket && this.tt == TokenType.rightBracket) this.nextToken();\r\n                    break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    parseInsert(): InsertNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"insert\"\r\n\r\n        this.expect(TokenType.keywordInto, true);\r\n\r\n        let node: InsertNode = {\r\n            type: TokenType.keywordInsert,\r\n            position: startPosition,\r\n            endPosition: this.getCurrentPosition(),\r\n            valuesPosition: null,\r\n            columnsPosition: null,\r\n            symbolTable: null,\r\n            columnList: [],\r\n            values: [],\r\n            table: null\r\n        }\r\n\r\n        if (this.tt == TokenType.identifier) {\r\n            node.table = {\r\n                type: TokenType.table,\r\n                identifier: <string>this.cct.value,\r\n                alias: null,\r\n                position: this.getCurrentPosition()\r\n            }\r\n            node.columnsPosition = { line: node.table.position.line, column: node.table.position.column + node.table.position.length, length: 0 };\r\n            this.nextToken();\r\n        } else {\r\n            this.pushError(\"Hier wird der Bezeichner einer Tabelle erwartet. Gefunden wurde: \" + this.cct.value, \"error\");\r\n        }\r\n\r\n        if (this.tt == TokenType.leftBracket) {\r\n\r\n            this.nextToken();\r\n            let first: boolean = true;\r\n            //@ts-ignore\r\n            while (first || this.tt == TokenType.comma) {\r\n\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.identifier) {\r\n                    node.columnList.push({\r\n                        type: TokenType.identifier,\r\n                        identifier: this.cct.value + \"\",\r\n                        position: this.getCurrentPosition()\r\n                    })\r\n\r\n                } else {\r\n                    this.pushError(\"Erwartet wird der Bezeichner einer Spalte. Gefunden wurde: \" + this.cct.value, \"error\");\r\n                }\r\n                this.nextToken();\r\n            }\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        }\r\n\r\n        node.valuesPosition = this.getCurrentPosition();\r\n        this.expect(TokenType.keywordValues, true);\r\n\r\n        this.parseValueLists(node.values);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n    parseValueLists(values: ConstantNode[][]) {\r\n        let insideListTokens = [TokenType.keywordNull, TokenType.charConstant, TokenType.stringConstant, TokenType.booleanConstant, TokenType.floatingPointConstant, TokenType.integerConstant];\r\n\r\n        let outerFirst: boolean = true;\r\n\r\n        while (outerFirst || this.tt == TokenType.comma) {\r\n            if (!outerFirst) {\r\n                this.nextToken(); // consume comma\r\n            }\r\n            outerFirst = false;\r\n            let leftBracketPosition = this.getCurrentPosition();\r\n            if (!this.expect(TokenType.leftBracket, true)) {\r\n                break;\r\n            }\r\n            let line: ConstantNode[] = [];\r\n            let first: boolean = true;\r\n            //@ts-ignore\r\n            while (first || this.tt == TokenType.comma) {\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n                if (this.tt == TokenType.identifier){\r\n                    if(this.cct.isDoubleQuotedIdentifier) {\r\n                        this.tt = TokenType.stringConstant\r\n                    } else if((this.cct.value + \"\").toLocaleLowerCase() == \"date\"){\r\n                        this.nextToken();\r\n                    }\r\n                } \r\n\r\n                \r\n\r\n                //@ts-ignore\r\n                if (insideListTokens.indexOf(this.tt) < 0) {\r\n                    this.pushError(\"Erwartet wird eine Konstante oder null. Gefunden wurde: \" + this.cct.value, \"error\");\r\n                    this.nextToken();\r\n                } else {\r\n                    line.push({\r\n                        constantType: this.tt,\r\n                        position: this.getCurrentPosition(),\r\n                        constant: this.cct.value,\r\n                        type: TokenType.constantNode\r\n                    });\r\n                    this.nextToken();\r\n                }\r\n            }\r\n            this.expect(TokenType.rightBracket, true);\r\n            if (line.length == 0) {\r\n                this.pushError(\"Eine Zeile kann nur dann in die Tabelle eingefügt werden, wenn sie mindestens einen Spaltenwert besitzt.\", \"error\", leftBracketPosition);\r\n            } else {\r\n                values.push(line);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    parseConstant(): ConstantNode {\r\n        let constantNode: ConstantNode = {\r\n            constantType: this.tt,\r\n            position: this.getCurrentPosition(),\r\n            constant: this.cct.value,\r\n            type: TokenType.constantNode\r\n        }\r\n        this.nextToken();\r\n\r\n        return constantNode;\r\n    }\r\n\r\n    parseSelect(): SelectNode {\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"select\"\r\n\r\n        let columnListStart: TextPosition = {\r\n            line: startPosition.line,\r\n            column: startPosition.column + 6,\r\n            length: 1\r\n        };\r\n\r\n        let node: SelectNode = {\r\n            type: TokenType.keywordSelect,\r\n            position: startPosition,\r\n            endPosition: this.getCurrentPosition(),\r\n            symbolTable: null,\r\n            columnList: [],\r\n            fromNode: null,\r\n            whereNode: null,\r\n            parentStatement: null\r\n        }\r\n\r\n        node.columnList = this.parseColumnList([TokenType.keywordFrom, TokenType.semicolon, TokenType.endofSourcecode], true);\r\n\r\n        let columnListKeywordArray = [\"distinct\", \"as\", \"*\", \"from\"];\r\n        if (node.columnList.findIndex(c => c.type == TokenType.allColumns) >= 0) {\r\n            columnListKeywordArray = [\"from\"];\r\n        }\r\n\r\n        this.module.addCompletionHint(columnListStart, this.getCurrentPositionPlus(2), true, true, columnListKeywordArray)\r\n\r\n        let hasFrom = this.comesToken(TokenType.keywordFrom, true);\r\n        let fromListKeywordArray = [ \"where\", \"join\", \"left\", \"right\", \"inner\", \"outer\", \"natural\", \"on\", \"as\", \", \"];\r\n        // parse from ...\r\n        if (!hasFrom) {\r\n            columnListKeywordArray.unshift(\"from\");\r\n        } else {\r\n            node.fromStartPosition = { line: this.lastToken.position.line, column: this.lastToken.position.column + this.lastToken.position.length, length: 0 };\r\n\r\n            let dontHint: string[] = [];\r\n            node.fromNode = this.parseTableOrSubQuery(dontHint);\r\n\r\n            fromListKeywordArray.splice(fromListKeywordArray.indexOf(this.lastToken.value + \"\"), 1);\r\n\r\n            let hintEndPosition = this.getCurrentPositionPlus(2);\r\n            if (this.comesToken(TokenType.semicolon)) {\r\n                hintEndPosition = this.getCurrentPosition();\r\n            }\r\n\r\n            this.module.addCompletionHint(node.fromStartPosition, hintEndPosition, false, true, fromListKeywordArray, dontHint)\r\n            node.fromEndPosition = this.getCurrentPosition();\r\n        }\r\n\r\n        // parse where...\r\n\r\n        let whereKeywordArray = [\"like\"];\r\n        if (this.tt == TokenType.keywordWhere) {\r\n            let position = this.getCurrentPosition();\r\n            let whereStart = this.getCurrentPosition();\r\n            this.nextToken();\r\n            node.whereNode = this.parseTerm();\r\n            this.module.addCompletionHint(whereStart, this.getCurrentPositionPlus(4), true, true, whereKeywordArray)\r\n            // if (node.whereNode != null) node.whereNode.position = position;\r\n        } else {\r\n            fromListKeywordArray.push(\"where\");\r\n        }\r\n\r\n        let groupKeywordArray = [];\r\n        if (this.tt == TokenType.keywordGroup) {\r\n            let groupStart = this.getCurrentPosition();\r\n            node.groupByNode = this.parseGroupBy();\r\n            this.module.addCompletionHint(groupStart, this.getCurrentPosition(), true, true, groupKeywordArray);\r\n        } else {\r\n            whereKeywordArray.push(\"group by\");\r\n        }\r\n\r\n        if (this.tt == TokenType.keywordOrder) {\r\n            let orderStart = this.getCurrentPosition();\r\n            node.orderByNode = this.parseOrderBy();\r\n            this.module.addCompletionHint(orderStart, this.getCurrentPosition(), true, true, [\"asc\", \"desc\"]);\r\n        } else {\r\n            whereKeywordArray.push(\"order by\");\r\n            groupKeywordArray.push(\"order by\");\r\n        }\r\n\r\n        if (this.tt == TokenType.keywordLimit) {\r\n            node.limitNode = this.parseLimit();\r\n        }\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n        node.endPosition.column += 3;\r\n\r\n        return node;\r\n    }\r\n\r\n    parseLimit(): LimitNode {\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n        let numberOfRows: TermNode = this.parseTerm();\r\n        let ln: LimitNode = {\r\n            type: TokenType.keywordLimit,\r\n            position: position,\r\n            numberOfRows: numberOfRows\r\n        }\r\n        if (this.tt == TokenType.keywordOffset) {\r\n            this.nextToken();\r\n            ln.offset = this.parseTerm();\r\n        }\r\n        return ln;\r\n    }\r\n\r\n    parseGroupBy(): GroupByNode {\r\n        let position = this.getCurrentPosition();\r\n        this.expect(TokenType.keywordGroup, true);\r\n        this.expect(TokenType.keywordBy, true);\r\n        let gbn: GroupByNode = {\r\n            type: TokenType.keywordGroup,\r\n            columnList: [],\r\n            position: position\r\n        }\r\n        let tokenTypesAfterGroupBy = [TokenType.keywordHaving, TokenType.keywordSelect, TokenType.keywordOrder, TokenType.keywordLimit, TokenType.rightBracket, TokenType.semicolon];\r\n        gbn.columnList = this.parseColumnList(tokenTypesAfterGroupBy, false).map(columnNode => columnNode.term);\r\n        if (this.tt == TokenType.keywordHaving) {\r\n            this.nextToken();\r\n            gbn.having = this.parseTerm();\r\n        }\r\n        return gbn;\r\n    }\r\n\r\n    parseOrderBy(): OrderByNode[] {\r\n        this.expect(TokenType.keywordOrder, true);\r\n        this.expect(TokenType.keywordBy, true);\r\n\r\n        let obnList: OrderByNode[] = [];\r\n        let first: boolean = true;\r\n\r\n        do {\r\n            if (first) {\r\n                first = false;\r\n            } else {\r\n                this.expect(TokenType.comma, true);\r\n            }\r\n            let column: TermNode = this.parseTerm();\r\n            let obn: OrderByNode = {\r\n                type: TokenType.keywordOrder,\r\n                position: this.getCurrentPosition(),\r\n                column: column\r\n            }\r\n            if ([TokenType.keywordAscending, TokenType.keywordDescending].indexOf(this.tt) >= 0) this.nextToken();\r\n            if (this.tt == TokenType.keywordNulls) {\r\n                this.nextToken();\r\n                this.expect([TokenType.keywordFirst, TokenType.keywordLast], true);\r\n            }\r\n            obnList.push(obn);\r\n        } while (this.tt == TokenType.comma);\r\n\r\n        return obnList;\r\n    }\r\n\r\n    parseTableOrSubQuery(dontHint: string[]): TableOrSubqueryNode {\r\n\r\n        let leftSide: TableOrSubqueryNode = this.parseAtomicTableOrSubQuery(dontHint);\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        while (this.parseJoinOperator()) {\r\n\r\n            let rightSide: TableOrSubqueryNode = this.parseAtomicTableOrSubQuery(dontHint);\r\n\r\n            leftSide = {\r\n                type: TokenType.keywordJoin,\r\n                firstOperand: leftSide,\r\n                secondOperand: rightSide,\r\n                position: position,\r\n            }\r\n\r\n            if (this.tt == TokenType.keywordOn) {\r\n                leftSide.on = this.parseTerm();\r\n            }\r\n\r\n        }\r\n\r\n        return leftSide;\r\n\r\n    }\r\n\r\n    parseJoinOperator(): boolean {\r\n        if (this.tt == TokenType.comma) {\r\n            this.nextToken();\r\n            return true;\r\n        }\r\n        if (this.tt == TokenType.keywordNatural) this.nextToken();\r\n        switch (this.tt) {\r\n            case TokenType.keywordLeft:\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.keywordOuter) this.nextToken();\r\n                return this.expect(TokenType.keywordJoin, true);\r\n            case TokenType.keywordInner:\r\n            case TokenType.keywordCross:\r\n                this.nextToken();\r\n                return this.expect(TokenType.keywordJoin, true);\r\n            case TokenType.keywordJoin:\r\n                this.nextToken();\r\n                return true;\r\n            default: return false;\r\n        }\r\n    }\r\n\r\n    parseAtomicTableOrSubQuery(dontHint: string[]): TableOrSubqueryNode {\r\n\r\n        if (!this.expect([TokenType.identifier, TokenType.leftBracket], false)) {\r\n            return null;\r\n        }\r\n\r\n        if (this.tt == TokenType.leftBracket) {\r\n            this.nextToken();\r\n            let ret: TableOrSubqueryNode;\r\n            //@ts-ignore\r\n            if (this.tt == TokenType.keywordSelect) {\r\n                let position = this.getCurrentPosition();\r\n                let selectStatement = this.parseSelect();\r\n                ret = {\r\n                    type: TokenType.subquery,\r\n                    alias: null,\r\n                    position: position,\r\n                    query: selectStatement\r\n                }\r\n            } else {\r\n                ret = this.parseTableOrSubQuery(dontHint);\r\n            }\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n\r\n            //@ts-ignore\r\n            if (this.tt == TokenType.keywordAs && ret.type == TokenType.subquery) {\r\n                this.nextToken();\r\n                if (this.expect(TokenType.identifier, false)) {\r\n                    ret.alias = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    dontHint.push(ret.alias);\r\n                }\r\n            }\r\n\r\n            return ret;\r\n        }\r\n\r\n        if (this.tt == TokenType.identifier) {\r\n            let node: TableNode = {\r\n                type: TokenType.table,\r\n                identifier: <string>this.cct.value,\r\n                alias: null,\r\n                position: this.getCurrentPosition()\r\n            }\r\n            dontHint.push(node.identifier);\r\n            this.nextToken();\r\n\r\n            //@ts-ignore\r\n            if (this.tt == TokenType.keywordAs) {\r\n                this.nextToken();\r\n                if (this.expect(TokenType.identifier, false)) {\r\n                    node.alias = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    dontHint.push(node.alias);\r\n                }\r\n\r\n            }\r\n\r\n            return node;\r\n        }\r\n\r\n    }\r\n\r\n    parseColumnList(tokenTypesAfterListEnd: TokenType[], allowAliases: boolean): ColumnNode[] {\r\n        let columns: ColumnNode[] = [];\r\n\r\n        while ([TokenType.stringConstant, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.booleanConstant,\r\n        TokenType.identifier, TokenType.multiplication, TokenType.leftBracket, TokenType.keywordDistinct].indexOf(this.tt) >= 0) {\r\n            if (this.tt == TokenType.multiplication) {\r\n                columns.push({\r\n                    term: null,\r\n                    alias: null,\r\n                    distinct: false,\r\n                    position: this.getCurrentPosition(),\r\n                    type: TokenType.allColumns\r\n                });\r\n                this.nextToken();\r\n            } else {\r\n                let distinct = this.comesToken(TokenType.keywordDistinct, true);\r\n                let columnTerm = this.parseTerm();\r\n                if (columnTerm != null) {\r\n                    let column: ColumnNode = {\r\n                        type: TokenType.column,\r\n                        term: columnTerm,\r\n                        distinct: distinct,\r\n                        position: columnTerm.position\r\n                    }\r\n                    columns.push(column);\r\n                    if (this.comesToken(TokenType.keywordAs)) {\r\n                        this.nextToken();\r\n                        if (this.expect(TokenType.identifier, false)) {\r\n                            column.alias = \"\" + this.cct.value;\r\n                        }\r\n                        this.nextToken();\r\n                    }\r\n                }\r\n            }\r\n            if (tokenTypesAfterListEnd.indexOf(this.tt) >= 0 || this.isEnd()) {\r\n                break;\r\n            }\r\n            this.expect(TokenType.comma, true);\r\n        }\r\n\r\n        if (columns.length == 0) {\r\n            this.pushError(\"Es fehlt die kommaseparierte Liste der gewünschten Spalten.\", \"error\");\r\n        }\r\n\r\n        return columns;\r\n    }\r\n\r\n\r\n    parseTerm(): TermNode {\r\n        return this.parseTermBinary(0);\r\n    }\r\n\r\n    parseTermBinary(precedence: number): TermNode {\r\n\r\n        let left: TermNode;\r\n        if (precedence < Parser.operatorPrecedence.length - 1) {\r\n            left = this.parseTermBinary(precedence + 1);\r\n        } else {\r\n            left = this.parseUnary();\r\n        }\r\n\r\n        let operators = Parser.operatorPrecedence[precedence];\r\n\r\n        if (left == null || operators.indexOf(this.tt) < 0) {\r\n            return left;\r\n        }\r\n\r\n        let first = true;\r\n\r\n        while (first || operators.indexOf(this.tt) >= 0) {\r\n\r\n            let operator: TokenType = this.tt;\r\n\r\n            first = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            this.nextToken();\r\n            let right: TermNode;\r\n            if (precedence < Parser.operatorPrecedence.length - 1) {\r\n                right = this.parseTermBinary(precedence + 1);\r\n            } else {\r\n                right = this.parseUnary();\r\n            }\r\n\r\n            left = {\r\n                type: TokenType.binaryOp,\r\n                position: position,\r\n                operator: operator,\r\n                firstOperand: left,\r\n                secondOperand: right\r\n            };\r\n\r\n\r\n        }\r\n\r\n        return left;\r\n\r\n    }\r\n\r\n\r\n    // -, not, this, super, a.b.c[][].d, a.b(), b() (== this.b()), super.b(), super()\r\n    parseUnary(): TermNode {\r\n\r\n        let term: TermNode;\r\n        let position: TextPosition = this.getCurrentPosition();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n                return this.parseBracket();\r\n            case TokenType.keywordNot:\r\n                position = position;\r\n                this.nextToken();\r\n                term = this.parseTermBinary(2);\r\n                return {\r\n                    type: TokenType.unaryOp,\r\n                    position: position,\r\n                    operand: term,\r\n                    operator: TokenType.keywordNot\r\n                }\r\n            case TokenType.minus:\r\n                // case TokenType.not:\r\n                position = position;\r\n                let tt1 = this.tt;\r\n                this.nextToken();\r\n                term = this.parseUnary();\r\n\r\n                return {\r\n                    type: TokenType.unaryOp,\r\n                    position: position,\r\n                    operand: term,\r\n                    operator: tt1\r\n                };\r\n\r\n            case TokenType.integerConstant:\r\n            case TokenType.charConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n                term = {\r\n                    type: TokenType.constantNode,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: this.tt,\r\n                    constant: this.cct.value\r\n                };\r\n                let isStringConstant = this.tt == TokenType.stringConstant;\r\n                this.nextToken();\r\n\r\n                if (isStringConstant) return this.parseDotOrArrayChains(term);\r\n\r\n                return term;\r\n            case TokenType.identifier: // attribute of current class or local variable\r\n\r\n                let identifier1 = <string>this.cct.value;\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    let rightBracketPosition = parameters.rightBracketPosition;\r\n\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position1,\r\n                        rightBracketPosition: rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        identifier: identifier1,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.identifier,\r\n                        identifier: identifier1,\r\n                        position: position\r\n                    }\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.dot) {\r\n                        let position = this.getCurrentPosition();\r\n                        this.nextToken();\r\n                        this.expect(TokenType.identifier, false);\r\n                        let secondIdentifier: IdentifierNode = {\r\n                            type: TokenType.identifier,\r\n                            identifier: <string>this.cct.value,\r\n                            position: this.getCurrentPosition()\r\n                        }\r\n                        this.nextToken();\r\n                        term = {\r\n                            type: TokenType.dot,\r\n                            identifierLeft: <IdentifierNode>term,\r\n                            identifierRight: secondIdentifier,\r\n                            position: position\r\n                        }\r\n\r\n                    } else if ([TokenType.isNull, TokenType.isNotNull].indexOf(this.tt) >= 0) {\r\n                        term = {\r\n                            type: TokenType.unaryOp,\r\n                            operand: term,\r\n                            operator: this.tt,\r\n                            position: position\r\n                        };\r\n                        this.nextToken();\r\n                    }\r\n                }\r\n\r\n                return term;\r\n            default:\r\n                this.pushError(\"Erwartet wird eine Variable, ein Methodenaufruf oder eine Konstante. Gefunden wurde: \" + this.cct.value);\r\n                return null;\r\n        }\r\n\r\n    }\r\n\r\n    parseList(): ListNode {\r\n        let node: ListNode = {\r\n            type: TokenType.list,\r\n            position: this.getCurrentPosition(),\r\n            elements: []\r\n        }\r\n\r\n        let constantTypes = [TokenType.charConstant, TokenType.stringConstant, TokenType.booleanConstant, TokenType.floatingPointConstant, TokenType.integerConstant];\r\n\r\n        while (constantTypes.indexOf(this.tt) >= 0) {\r\n            node.elements.push({\r\n                type: TokenType.constantNode,\r\n                constant: this.cct.value,\r\n                constantType: this.tt,\r\n                position: this.cct.position\r\n            });\r\n            this.nextToken();\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            }\r\n            this.nextToken();\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    parseBracket(): TermNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n        let tokenBeforeBracket = this.lastToken;\r\n        this.nextToken(); // consume (\r\n\r\n        if (this.tt == TokenType.keywordSelect) {\r\n            let selectNode = this.parseSelect();\r\n            this.expect(TokenType.rightBracket, true);\r\n            return selectNode;\r\n        } else if ([TokenType.comma, TokenType.rightBracket].indexOf(this.ct[1].tt) >= 0 &&\r\n            [TokenType.keywordIn, TokenType.keywordNotIn].indexOf(tokenBeforeBracket.tt) >= 0) {\r\n            let listNode = this.parseList();\r\n            this.expect(TokenType.rightBracket, true);\r\n            return listNode;\r\n        } else {\r\n            let term = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            let bracketsNode: BracketsNode = {\r\n                position: rightBracketPosition,\r\n                type: TokenType.rightBracket,\r\n                termInsideBrackets: term\r\n            }\r\n\r\n\r\n            return bracketsNode;\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    parseMethodCallParameters(): { rightBracketPosition: TextPosition, nodes: TermNode[], commaPositions: TextPosition[] } {\r\n        // Assumption: current token is (        \r\n        this.nextToken();\r\n        if (this.tt == TokenType.rightBracket) {\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n            return { rightBracketPosition: rightBracketPosition, nodes: [], commaPositions: [] };\r\n        }\r\n\r\n        let parameters: TermNode[] = [];\r\n        let commaPositions: TextPosition[] = [];\r\n\r\n        while (true) {\r\n            let pos = this.pos;\r\n\r\n            if (this.tt == TokenType.multiplication) {\r\n                this.nextToken();\r\n                parameters.push({\r\n                    type: TokenType.allColumns,\r\n                    position: this.getCurrentPosition(),\r\n                });\r\n            } else {\r\n                let parameter = this.parseTerm();\r\n                if (parameter != null) {\r\n                    parameters.push(parameter);\r\n                }\r\n            }\r\n\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            } else {\r\n                commaPositions.push(this.getCurrentPosition());\r\n                this.nextToken(); // consume comma\r\n            }\r\n\r\n            // emergency-step:\r\n            if (this.pos == pos) {\r\n                this.nextToken();\r\n            }\r\n\r\n        }\r\n\r\n        let position = this.getCurrentPosition();\r\n        let rightBracketFound = this.expect(TokenType.rightBracket, true);\r\n\r\n        return { rightBracketPosition: rightBracketFound ? position : null, nodes: parameters, commaPositions: commaPositions };\r\n\r\n    }\r\n\r\n    parseDotOrArrayChains(term: TermNode): TermNode {\r\n\r\n        if (term == null) return null;\r\n\r\n        while (this.comesToken([TokenType.dot, TokenType.leftSquareBracket])) {\r\n            if (this.tt == TokenType.dot) {\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.identifier) {\r\n                    this.pushError(\"Erwartet wird der Bezeichner eines Attributs oder einer Methode, gefunden wurde: \" + this.cct.value);\r\n                    return term;\r\n                }\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position,\r\n                        rightBracketPosition: parameters.rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        identifier: identifier,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                }\r\n                // else {\r\n                //     term = {\r\n                //         type: TokenType.pushAttribute,\r\n                //         position: position,\r\n                //         identifier: identifier,\r\n                //         object: term\r\n                //     }\r\n                // }\r\n\r\n            }\r\n        }\r\n\r\n        return term;\r\n    }\r\n\r\n\r\n}","import { ColumnStructure, TableStructure } from \"../../tools/DatabaseTools.js\";\nimport { SQLType, SQLBaseType, SQLDerivedType } from \"./SQLTypes.js\";\n\n\nexport class Column {\n\n    references: Column;\n    fromColumnStructure?: ColumnStructure;\n    notNull: boolean;\n\n    constructor(public identifier: string, public type: SQLType, public table: Table, public isPrimaryKey: boolean, public isNullable: boolean, public defaultValue: string, public isAutoIncrement){\n\n    }\n\n    static fromColumnStructure(cs: ColumnStructure, table: Table): Column {\n\n        let regex1 = /^(\\w*) *(?:\\((.*)\\))?.*$/;\n\n        let typeMatch1 = cs.completeTypeSQL.match(regex1);\n        let baseTypeIdentifier: string = typeMatch1[1];\n        let commaSeparatedParameters: string = typeMatch1[2];\n\n        let parameterValues: number[] = [];\n        if(commaSeparatedParameters != null){\n            parameterValues = commaSeparatedParameters.split(',').map(v => parseInt(v.trim()));           \n        }\n\n        let type: SQLType = SQLBaseType.getBaseType(baseTypeIdentifier);\n        if(parameterValues.length > 0 && type != null){\n            type = new SQLDerivedType(<SQLBaseType>type, parameterValues);\n        }\n\n        let column = new Column(cs.name, type, table, cs.isPrimaryKey, !cs.isPrimaryKey, cs.defaultValue, cs.isAutoIncrement);\n        column.notNull = cs.notNull;\n        \n        column.fromColumnStructure = cs;\n\n        return column;\n    }\n\n}\n\nexport class Table {\n    \n    public columns: Column[] = [];\n\n    public size: number;\n\n    constructor(public identifier: string){\n\n    }\n\n    private static fromTableStructure(ts: TableStructure): Table {\n        let table: Table = new Table(ts.name);\n        table.columns = ts.columns.map( column => Column.fromColumnStructure(column, table));\n        table.size = ts.size;\n        return table;\n    }\n\n    static fromTableStructureList(tsList: TableStructure[]): Table[]{\n\n        if(tsList == null) tsList = [];\n\n        let tables: Table[] = tsList.map(ts => Table.fromTableStructure(ts));\n\n        let columnStructureToColumnMap: Map<ColumnStructure, Column> = new Map();\n        for(let table of tables){\n            for(let column of table.columns){\n                columnStructureToColumnMap.set(column.fromColumnStructure, column);\n            }\n        }\n\n        for(let table of tables){\n            for(let column of table.columns){\n                let referencedCs = column.fromColumnStructure.references;\n                if(referencedCs != null){\n                    let referencedColumn = columnStructureToColumnMap.get(referencedCs);\n                    column.references = referencedColumn;\n                }\n            }\n        }\n\n        return tables;\n    }\n\n}","import { DatabaseStructure } from \"../../tools/DatabaseTools.js\";\r\nimport { TextPosition } from \"../lexer/Token.js\";\r\nimport { Table, Column } from \"./SQLTable.js\";\r\n\r\nexport type Symbol = {\r\n    identifier: string;\r\n    table?: Table;\r\n    column?: Column;\r\n    tableAlias?: string;\r\n    posOfDefinition: TextPosition;\r\n    referencedOnPositions: TextPosition[];\r\n}\r\n\r\nexport class SymbolTable {\r\n    parent: SymbolTable; // SymbolTable of parent scope\r\n    positionFrom: TextPosition;\r\n    positionTo: TextPosition;\r\n\r\n    childSymbolTables: SymbolTable[] = [];\r\n\r\n    private symbols: Map<string, Symbol[]> = new Map();\r\n    symbolList: Symbol[] = [];\r\n\r\n    constructor(parentSymbolTable: SymbolTable, positionFrom: TextPosition, positionTo: TextPosition) {\r\n\r\n        this.parent = parentSymbolTable;\r\n\r\n        this.positionFrom = positionFrom;\r\n        this.positionTo = positionTo;\r\n\r\n\r\n        if (this.parent != null) {\r\n            this.parent.childSymbolTables.push(this);\r\n        }\r\n    }\r\n\r\n    extractDatabaseStructure(databaseStructure: DatabaseStructure) {\r\n        for (let table of Table.fromTableStructureList(databaseStructure?.tables)) {\r\n\r\n            this.storeTableSymbols(table);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    storeTableSymbols(table: Table){\r\n        this.storeSymbol({\r\n            identifier: table.identifier,\r\n            posOfDefinition: null,\r\n            referencedOnPositions: [],\r\n            table: table\r\n        });\r\n\r\n        for (let column of table.columns) {\r\n            this.storeSymbol({\r\n                identifier: column.identifier,\r\n                posOfDefinition: null,\r\n                referencedOnPositions: [],\r\n                column: column\r\n            });\r\n        }\r\n    }\r\n\r\n    storeSymbol(symbol: Symbol) {\r\n        let list: Symbol[] = this.symbols.get(symbol.identifier.toLowerCase());\r\n        if (list == null) {\r\n            list = [symbol];\r\n            this.symbols.set(symbol.identifier.toLowerCase(), list);\r\n        } else {\r\n            list.push(symbol);\r\n        }\r\n        this.symbolList.push(symbol);\r\n    }\r\n\r\n    findTableAtPosition(line: number, column: number): SymbolTable {\r\n\r\n        if (!this.containsPosition(line, column)) {\r\n            return null;\r\n        }\r\n\r\n        let shortestSymbolTableContainingPosition = null;\r\n        let shortestPosition = 10000000;\r\n\r\n        for (let st of this.childSymbolTables) {\r\n            if (st.containsPosition(line, column)) {\r\n                let st1 = st.findTableAtPosition(line, column);\r\n                if (st1.positionTo.line - st1.positionFrom.line < shortestPosition) {\r\n                    shortestSymbolTableContainingPosition = st1;\r\n                    shortestPosition = st1.positionTo.line - st1.positionFrom.line;\r\n                }\r\n            }\r\n            // if(st.containsPosition(line, column) && st.positionTo.line - st.positionFrom.line < shortestPosition){\r\n            //     shortestSymbolTableContainingPosition = st;\r\n            //     shortestPosition = st.positionTo.line - st.positionFrom.line;\r\n            // }\r\n        }\r\n\r\n        if (shortestSymbolTableContainingPosition != null) {\r\n            return shortestSymbolTableContainingPosition;\r\n        } else {\r\n            return this;\r\n        }\r\n\r\n    }\r\n\r\n    containsPosition(line: number, column: number) {\r\n        if (line < this.positionFrom.line || line > this.positionTo.line) {\r\n            return false;\r\n        }\r\n\r\n        if (line == this.positionFrom.line && column < this.positionFrom.column) return false;\r\n        if (line == this.positionTo.line && column > this.positionTo.column + 1) return false;\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    findTable(identifier: string): Table {\r\n        let tables = this.findTables(identifier);\r\n        if(tables.length == 0) return null;\r\n        return tables[0].table;\r\n    }\r\n\r\n    findTables(identifier: string): Symbol[] {\r\n\r\n        let symbolTable: SymbolTable = this;\r\n        while(symbolTable != null){\r\n\r\n            let symbols = symbolTable.symbols.get(identifier.toLowerCase());\r\n            if(symbols != null){\r\n                symbols = symbols.filter(s => s.table != null);\r\n                if(symbols.length > 0){\r\n                    return symbols;\r\n                }\r\n            }\r\n\r\n            symbolTable = symbolTable.parent;\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    findColumn(identifier: string): Symbol[] {\r\n\r\n        let symbolTable: SymbolTable = this;\r\n        while(symbolTable != null){\r\n\r\n            let symbols = symbolTable.symbols.get(identifier.toLowerCase());\r\n            if(symbols != null){\r\n                symbols = symbols.filter(s => s.column != null);\r\n                if(symbols.length > 0){\r\n                    return symbols;\r\n                }\r\n            }\r\n\r\n            symbolTable = symbolTable.parent;\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { SQLBaseType, SQLType } from \"./SQLTypes.js\";\r\n\r\nexport class SQLMethodParameter {\r\n    type: SQLType;\r\n    constructor(public identifier: string, type: string){\r\n        this.type = SQLBaseType.getBaseType(type);\r\n    }\r\n}\r\n\r\nexport class SQLMethod {\r\n    acceptsStarParameter: boolean = false;\r\n    public returnType: SQLType;\r\n    constructor(public identifier: string, public isAggregating: boolean, returnType: string, public parameters: SQLMethodParameter[]){\r\n        this.returnType = SQLBaseType.getBaseType(returnType);\r\n    }\r\n\r\n}\r\n\r\nexport class SQLMethodStore {\r\n\r\n    static instance: SQLMethodStore;\r\n    public methods: SQLMethod[] = [];\r\n\r\n    static getInstance():SQLMethodStore {\r\n        if(this.instance == null){\r\n            this.instance = new SQLMethodStore();\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    constructor(){\r\n        this.pushOneParameterMethod(\"max\" ,\"integer\", \"integer\");\r\n        this.pushOneParameterMethod(\"max\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"min\" ,\"integer\", \"integer\");\r\n        this.pushOneParameterMethod(\"min\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"avg\" ,\"integer\", \"integer\");\r\n        this.pushOneParameterMethod(\"avg\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"sum\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"sum\" ,\"integer\", \"integer\");\r\n\r\n        let countMethod = new SQLMethod(\"count\", true, \"integer\", [new SQLMethodParameter(\"spalte\", \"text\")]);\r\n        countMethod.acceptsStarParameter = true;\r\n        this.methods.push(countMethod);\r\n    }\r\n    \r\n    getMethods(identifier: string){\r\n        return this.methods.filter(m => m.identifier == identifier.toLowerCase());\r\n    }\r\n\r\n\r\n    pushOneParameterMethod(identifier: string, returnType: string, parameterType: string){\r\n        this.methods.push(new SQLMethod(identifier, true, returnType, [new SQLMethodParameter(\"spalte\", parameterType)]));\r\n\r\n    }\r\n}","export function hash(s: string){\r\n    let hash: number = 0;\r\n    let chr: number;\r\n    for (let i = 0; i < s.length; i++) {\r\n      chr   = s.charCodeAt(i);\r\n      hash  = ((hash << 5) - hash) + chr;\r\n      hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n\r\nexport function escapeHtml(unsafe: string): string {\r\n  return unsafe\r\n      .replace(/['\"]+/g, '')\r\n       .replace(/&/g, \"&amp;\")\r\n       .replace(/</g, \"&lt;\")\r\n       .replace(/>/g, \"&gt;\")\r\n       .replace(/\"/g, \"&quot;\")\r\n       .replace(/'/g, \"&#039;\");\r\n}\r\n\r\nexport function dateToString(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth() + 1)}.${date.getFullYear()}, ${twoDez(date.getHours())}:${twoDez(date.getMinutes())}`;\r\n}\r\n\r\nexport function dateToStringWithoutTime(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth())}.${date.getFullYear()}`;\r\n}\r\n\r\nfunction twoDez(z: number):string {\r\n  if(z < 10) return \"0\" + z;\r\n  return \"\" + z;\r\n}\r\n\r\nexport function stringToDate(text: string): Date {\r\n\r\n  let match = text.match(/^(\\d{2})\\.(\\d{2})\\.(\\d{4}), (\\d{2}):(\\d{2})$/);\r\n\r\n  let date: Date = new Date(Number.parseInt(match[3]), Number.parseInt(match[2]), Number.parseInt(match[1]), Number.parseInt(match[4]), Number.parseInt(match[5]) );\r\n\r\n  return date;\r\n}\r\n\r\nexport function stringWrap(s: string, length: number ): string{\r\n  return s.replace(\r\n    new RegExp(`(?![^\\\\n]{1,${length}}$)([^\\\\n]{1,${length}})\\\\s`, 'g'), '$1\\n'\r\n  );\r\n} \r\n\r\nexport function formatAsJavadocComment(s: string, indent: number|string = \"\"): string {\r\n  let indentString = \"\";\r\n\r\n  if(typeof indent == \"string\"){\r\n    indentString = indent;\r\n  } else {\r\n    for(let i = 0; i < indent; i++){\r\n      indentString += \" \";\r\n    }\r\n  }\r\n\r\n  s = stringWrap(s, 60);\r\n  if(s.length > 0) s = \"\\n\" + s;\r\n  s = indentString + \"/**\" + s.replace(/\\n/g, \"\\n\" + indentString + \" * \") + \"\\n\" + indentString + \" */\";\r\n  return s;\r\n}\r\n\r\n\r\nexport function isDate(inputText: string) {\r\n\r\n      if (inputText == null || typeof inputText != 'string') return false;\r\n\r\n      // var dateformat = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/;\r\n      var dateformat = /^\\d{4}[\\/\\-](0?[1-9]|1[012])[\\/\\-](0?[1-9]|[12][0-9]|3[01])$/;\r\n      // Match the date format through regular expression\r\n      if (inputText.match(dateformat)) {\r\n          //Test which seperator is used '/' or '-'\r\n          var opera1 = inputText.split('/');\r\n          var opera2 = inputText.split('-');\r\n          var lopera1 = opera1.length;\r\n          var lopera2 = opera2.length;\r\n          // Extract the string into month, date and year\r\n          if (lopera1 > 1) {\r\n              var pdate = inputText.split('/');\r\n          }\r\n          else if (lopera2 > 1) {\r\n              var pdate = inputText.split('-');\r\n          }\r\n          if (pdate.length != 3) return false;\r\n          var dd = parseInt(pdate[2]);\r\n          var mm = parseInt(pdate[1]);\r\n          var yy = parseInt(pdate[0]);\r\n          // Create list of days of a month [assume there is no leap year by default]\r\n          var ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n          if (mm == 1 || mm > 2) {\r\n              if (dd > ListofDays[mm - 1]) {\r\n                  return false;\r\n              }\r\n          }\r\n          if (mm == 2) {\r\n              var lyear = false;\r\n              if ((!(yy % 4) && yy % 100) || !(yy % 400)) {\r\n                  lyear = true;\r\n              }\r\n              if ((lyear == false) && (dd >= 29)) {\r\n                  return false;\r\n              }\r\n              if ((lyear == true) && (dd > 29)) {\r\n                  return false;\r\n              }\r\n              return true;\r\n          }\r\n\r\n          return true;\r\n\r\n      }\r\n      else {\r\n          return false;\r\n      }\r\n  }\r\n\r\n  export function isDateTime(inputText: string) {\r\n\r\n      if (inputText == null || typeof inputText != 'string') return false;\r\n\r\n      // var dateformat = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/;\r\n      var dateformat = /^\\d{4}[\\-](0[1-9]|1[012])[\\-](0[1-9]|[12][0-9]|3[01]) ([01][1-9]|2[0123]):([0-5][0-9]):([0-5][0-9])$/;\r\n      // Match the date format through regular expression\r\n      if (inputText.match(dateformat)) {\r\n          var splitStr = inputText.split(' ');\r\n          var dateStr = splitStr[0];\r\n          //var timeStr = splitStr[1];\r\n\r\n          if (dateStr.length != 10) return false;\r\n          var dd = parseInt(dateStr.substring(8,10));\r\n          var mm = parseInt(dateStr.substring(5, 7));\r\n          var yy = parseInt(dateStr.substring(0, 4));\r\n          // Create list of days of a month [assume there is no leap year by default]\r\n          var ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n          if (mm == 1 || mm > 2) {\r\n              if (dd > ListofDays[mm - 1]) {\r\n                  return false;\r\n              }\r\n          }\r\n          if (mm == 2) {\r\n              var lyear = false;\r\n              if ((!(yy % 4) && yy % 100) || !(yy % 400)) {\r\n                  lyear = true;\r\n              }\r\n              if ((lyear == false) && (dd >= 29)) {\r\n                  return false;\r\n              }\r\n              if ((lyear == true) && (dd > 29)) {\r\n                  return false;\r\n              }\r\n              return true;\r\n          }\r\n\r\n          return true;\r\n\r\n      }\r\n      else {\r\n          return false;\r\n      }\r\n  }\r\n  export function isTime(inputText: string) {\r\n\r\n      if (inputText == null || typeof inputText != 'string') return false;\r\n\r\n      var timeformat = /^([01][1-9]|2[0123]):([0-5][0-9]):([0-5][0-9])$/;\r\n      // Match the date format through regular expression\r\n      return inputText.match(timeformat) != null;\r\n  }\r\n","import { DatabaseTool } from \"../../tools/DatabaseTools.js\";\nimport { TextPosition, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\nimport { CompletionHint, Module } from \"./Module.js\";\nimport { Symbol, SymbolTable } from \"./SymbolTable.js\";\nimport { AlterTableNode, ASTNode, BinaryOpNode, CreateTableNode, DeleteNode, DotNode, DropTableNode, IdentifierNode, InsertNode, MethodcallNode, SelectNode, TableOrSubqueryNode, TermNode, UpdateNode } from \"./Ast.js\";\nimport { Error, ErrorLevel, QuickFix } from \"../lexer/Lexer.js\";\nimport { Column, Table } from \"./SQLTable.js\";\nimport { SQLBaseType, SQLType } from \"./SQLTypes.js\";\nimport { SQLMethodStore } from \"./SQLMethods.js\";\nimport { isDate, isDateTime, isTime } from \"../../tools/StringTools.js\";\n\n\nexport class SymbolResolver {\n\n    symbolTableStack: SymbolTable[] = [];\n    errorList: Error[];\n    module: Module;\n    databaseTool: DatabaseTool;\n    tables: Table[];\n\n    constructor(databaseTool: DatabaseTool) {\n        this.databaseTool = databaseTool;\n        this.tables = Table.fromTableStructureList(databaseTool.databaseStructure?.tables);\n    }\n\n    start(module: Module) {\n        this.module = module;\n        this.symbolTableStack = [];\n        this.errorList = [];\n\n        module.mainSymbolTable = new SymbolTable(null, { column: 0, line: 0, length: 0 }, { column: 0, line: 100000, length: 0 })\n\n        this.symbolTableStack.push(module.mainSymbolTable);\n\n        for (let statement of this.module.sqlStatements) {\n\n            let errorsBeforeStatement = this.errorList.length;\n\n            let astNode = statement.ast;\n            if (astNode == null) continue;\n\n            switch (astNode.type) {\n                case TokenType.keywordSelect:\n                    this.resolveSelect(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordInsert:\n                    this.resolveInsert(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordCreate:\n                    this.resolveCreateTable(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordUpdate:\n                    this.resolveUpdate(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordDelete:\n                    this.resolveDelete(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordDrop:\n                    this.resolveDropTable(astNode);\n                    this.symbolTableStack.pop();\n                    break;\n                case TokenType.keywordAlter:\n                    this.resolveAlterTable(astNode)\n                    this.symbolTableStack.pop();\n                    break;\n\n                default:\n                    break;\n            }\n\n            statement.hasErrors = statement.hasErrors || this.errorList.length > errorsBeforeStatement;\n\n        }\n\n        module.errors[2] = this.errorList;\n\n    }\n\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position: TextPosition, quickFix?: QuickFix) {\n        // if (position == null) position = Object.assign({}, this.position);\n        this.errorList.push({\n            text: text,\n            position: position,\n            quickFix: quickFix,\n            level: errorLevel\n        });\n    }\n\n\n    getCurrentSymbolTable(): SymbolTable {\n        return this.symbolTableStack[this.symbolTableStack.length - 1];\n    }\n\n    pushNewSymbolTable(positionFrom: TextPosition, positionTo: TextPosition): SymbolTable {\n        if(positionTo == null) {\n            positionTo = {\n                line: 100000,\n                column: 1,\n                length: 1\n            }\n        };\n        let st: SymbolTable = new SymbolTable(this.getCurrentSymbolTable(), positionFrom, positionTo);\n        this.symbolTableStack.push(st);\n        return st;\n    }\n\n    resolveSelect(selectNode: SelectNode): Table {\n        let resultTable: Table = new Table(null);\n\n        selectNode.symbolTable = this.pushNewSymbolTable(selectNode.position, selectNode.endPosition);\n\n        // From\n        let joinedTables: Table[] = [];\n        this.resolveTableOrSubQuery(selectNode.fromNode, joinedTables);\n        if (selectNode.fromStartPosition != null) {\n            let fromSymbolTable = new SymbolTable(this.getCurrentSymbolTable(), selectNode.fromStartPosition, selectNode.fromEndPosition);\n            fromSymbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n        }\n\n        // Column list\n        for (let columnNode of selectNode.columnList) {\n            if (columnNode.type == TokenType.allColumns) {\n                for (let table of joinedTables) {\n                    for (let column of table.columns) {\n                        let c: Column = new Column(column.identifier, column.type, resultTable, false, true, column.defaultValue, column.isAutoIncrement);\n                        resultTable.columns.push(c);\n                    }\n                }\n            } else {\n                this.resolveTerm(columnNode.term);\n                let c1: Column = new Column(columnNode.alias, columnNode.term.sqlType, resultTable, false, true, null, false);\n                resultTable.columns.push(c1);\n                if (c1.identifier != null) {\n                    selectNode.symbolTable.storeSymbol({\n                        identifier: c1.identifier,\n                        posOfDefinition: columnNode.term.position,\n                        referencedOnPositions: [],\n                        column: c1\n                    })\n                }\n            }\n        }\n\n        // where...\n        if (selectNode.whereNode != null) {\n            let whereType = this.resolveTerm(selectNode.whereNode);\n            if (whereType != null && whereType.getBaseTypeName() != \"boolean\") {\n                this.pushError(\"Das Ergebnis des where-Teils einer select-Anweisung muss vom Typ boolean sein.\", \"error\", selectNode.whereNode.position);\n            }\n        }\n\n\n        // TODO: group by, order by\n\n        return resultTable;\n    }\n\n    resolveDropTable(node: DropTableNode) {\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        if (node.tableIdentifier == null) return;\n\n        if(!node.ifExists){\n            let table = node.symbolTable.findTable(node.tableIdentifier);\n            if (table == null) this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\n        }\n\n    }\n\n    resolveDelete(node: DeleteNode) {\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        if (node.tableIdentifier == null) return;\n\n        let table = node.symbolTable.findTable(node.tableIdentifier);\n        if (table == null) this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\n\n\n        // if(node.whereNodeBegin != null){\n        //     let symbolTable = this.pushNewSymbolTable(node.whereNodeBegin, node.whereNodeEnd);\n        //     symbolTable.storeTableSymbols(table);\n        // }\n\n\n        if (node.whereNode != null) {\n            let whereSymbolTable = this.pushNewSymbolTable(node.whereNodeBegin, node.whereNodeEnd);\n            if(table != null) whereSymbolTable.storeTableSymbols(table);\n            this.resolveTerm(node.whereNode);\n            this.symbolTableStack.pop();\n        }\n\n\n\n    }\n\n\n    resolveAlterTable(node: AlterTableNode) {\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        if (node.tableIdentifier == null) {\n            return;\n        }\n\n        let table = node.symbolTable.findTable(node.tableIdentifier);\n        if (table == null) {\n            this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\n        }\n\n        let oldColumn: Column = null;\n        if (node.oldColumnName != null) {\n            oldColumn = table.columns.find(c => c.identifier.toLocaleLowerCase() == node.oldColumnName.toLocaleLowerCase());\n            if (oldColumn == null) {\n                this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" hat keine Spalte mit dem Bezeichner \" + node.oldColumnName, \"error\", node.oldColumnPosition);\n            }\n        }\n\n        switch (node.kind) {\n            case \"dropColumn\":\n                // nothing to do as node.oldColumnName is checked above\n                break;\n            case \"addColumn\":\n                let columnNode = node.columnDef;\n                if (columnNode == null) break;\n                if (columnNode.foreignKeyInfo != null && columnNode.baseType != null) {\n                    let fki = columnNode.foreignKeyInfo;\n                    let tables = this.getCurrentSymbolTable().findTables(fki.referencesTable);\n                    if (tables.length == 1) {\n                        let table = tables[0].table;\n                        let column = table.columns.find(c => c.identifier == fki.referencesColumn);\n                        if (column != null && column.type != null) {\n                            if (!column.isPrimaryKey) {\n                                this.pushError(\"Die referenzierte Spalte \" + fki.referencesTable + \".\" + fki.referencesColumn + \" ist kein Primärschlüssel.\", \"warning\", columnNode.referencesPosition);\n                            }\n                            if (!column.type.canCastTo(columnNode.baseType)) {\n                                this.pushError(\"Der Datentyp \" + columnNode.baseType.toString() + \" der Spalte \" + columnNode.identifier +\n                                    \" kann nich in den Datentyp \" + column.type.toString() + \" der referenzierten Spalte \" + table.identifier + \".\" +\n                                    column.identifier + \" umgewandelt werden.\", \"error\", columnNode.referencesPosition);\n                            }\n                        }\n                    }\n                }\n                break;\n            case \"renameColumn\":\n                // nothing to do as node.oldColumnName is checked above\n                break;\n            case \"renameTable\":\n                // nothing to do \n                break;\n            default:\n                break;\n        }\n    }\n\n    resolveUpdate(node: UpdateNode) {\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        if (node.tableIdentifier == null) {\n            return;\n        }\n\n        let table = node.symbolTable.findTable(node.tableIdentifier);\n        if (table == null) this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\n\n        for (let i = 0; i < node.columnIdentifiers.length; i++) {\n            let ci = node.columnIdentifiers[i];\n            let ciPos = node.columnIdentifierPositions[i];\n            let value = node.values[i];\n\n            if (ci == null) continue;\n            let column = table.columns.find(c => c.identifier == ci);\n\n            if (column == null) {\n                this.pushError(ci + \" ist kein Bezeichner einer Spalte der Tabelle \" + node.tableIdentifier + \".\", \"error\", ciPos);\n            }\n\n            if (value == null) continue;\n            let symbolTable = this.pushNewSymbolTable(node.valuePosBegin[i], node.valuePosEnd[i]);\n            symbolTable.storeTableSymbols(table);\n            this.resolveTerm(value);\n            this.symbolTableStack.pop();\n\n        }\n\n        if (node.whereNodeBegin != null) {\n            let symbolTable = this.pushNewSymbolTable(node.whereNodeBegin, node.whereNodeEnd);\n            symbolTable.storeTableSymbols(table);\n        }\n\n        if (node.whereNode != null) {\n            this.resolveTerm(node.whereNode);\n        }\n        this.symbolTableStack.pop();\n\n    }\n\n\n\n    resolveCreateTable(createTableNode: CreateTableNode) {\n\n        createTableNode.symbolTable = this.pushNewSymbolTable(createTableNode.position, createTableNode.endPosition);\n        createTableNode.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        let thisTable: Table = {\n            identifier: createTableNode.identifier,\n            columns: null,\n            size: 0\n        }\n\n        thisTable.columns = createTableNode.columnList.map(c => {\n            return {\n                identifier: c.identifier,\n                isNullable: false,\n                isPrimaryKey: c.isPrimary,\n                isAutoIncrement: c.isAutoIncrement,\n                notNull: false,\n                references: null,\n                table: thisTable,\n                type: c.baseType,\n                defaultValue: c.defaultValue\n            }\n        });\n\n        createTableNode.symbolTable.storeTableSymbols(thisTable);\n\n        for (let columnNode of createTableNode.columnList) {\n            if (createTableNode.columnList.filter(c => c.identifier.toLocaleLowerCase() == columnNode.identifier.toLocaleLowerCase()).length > 1) {\n                this.pushError(\"Der Spaltenbezeichner \" + columnNode.identifier + \" darf in einer Tabelle nur ein einziges Mal verwendet werden\", \"error\", columnNode.position);\n            }\n\n            if (columnNode.foreignKeyInfo != null && columnNode.baseType != null) {\n                let fki = columnNode.foreignKeyInfo;\n                let tables = this.getCurrentSymbolTable().findTables(fki.referencesTable);\n                if (tables.length == 1) {\n                    let table = tables[0].table;\n                    let column = table.columns.find(c => c.identifier == fki.referencesColumn);\n                    if (column != null && column.type != null) {\n                        if (!column.isPrimaryKey) {\n                            this.pushError(\"Die referenzierte Spalte \" + fki.referencesTable + \".\" + fki.referencesColumn + \" ist kein Primärschlüssel.\", \"warning\", columnNode.referencesPosition);\n                        }\n                        if (!column.type.canCastTo(columnNode.baseType)) {\n                            this.pushError(\"Der Datentyp \" + columnNode.baseType.toString() + \" der Spalte \" + columnNode.identifier +\n                                \" kann nich in den Datentyp \" + column.type.toString() + \" der referenzierten Spalte \" + table.identifier + \".\" +\n                                column.identifier + \" umgewandelt werden.\", \"error\", columnNode.referencesPosition);\n                        }\n                    }\n                }\n            }\n\n        }\n\n        for (let fki of createTableNode.foreignKeyInfoList) {\n\n            let columnNode = createTableNode.columnList.find(cn => cn.identifier == fki.column);\n            if (columnNode == null) continue;\n\n            let tables = this.getCurrentSymbolTable().findTables(fki.referencesTable);\n            if (tables.length == 1) {\n                let table = tables[0].table;\n                let column = table.columns.find(c => c.identifier == fki.referencesColumn);\n                if (column != null && column.type != null) {\n                    if (!column.isPrimaryKey) {\n                        this.pushError(\"Die referenzierte Spalte \" + fki.referencesTable + \".\" + fki.referencesColumn + \" ist kein Primärschlüssel.\", \"warning\", fki.referencesPosition);\n                    }\n                    if (!column.type.canCastTo(columnNode.baseType)) {\n                        this.pushError(\"Der Datentyp \" + columnNode.baseType.toString() + \" der Spalte \" + columnNode.identifier +\n                            \" kann nich in den Datentyp \" + column.type.toString() + \" der referenzierten Spalte \" + table.identifier + \".\" +\n                            column.identifier + \" umgewandelt werden.\", \"error\", fki.referencesPosition);\n                    }\n                }\n            }\n\n        }\n\n\n    }\n\n    resolveTableOrSubQuery(tosNode: TableOrSubqueryNode, joinedTables: Table[]) {\n        if (tosNode == null) return;\n\n        switch (tosNode.type) {\n            case TokenType.table:\n                let tableList = this.tables.filter(t => t.identifier.toLowerCase() == tosNode.identifier.toLowerCase());\n                if (tableList.length == 0) {\n                    this.pushError(tosNode.identifier + \" ist nicht der Name einer Tabelle.\", \"error\", tosNode.position);\n                } else if (tableList.length > 1) {\n                    this.pushError(\"Der Bezeichner \" + tosNode.identifier + \" ist hier nicht eindeutig.\", \"error\", tosNode.position);\n                } else {\n                    let table: Table = tableList[0];\n                    joinedTables.push(table);\n                    this.storeTableIntoSymbolTable(table, tosNode.position, tosNode.alias);\n                }\n\n                break;\n\n            case TokenType.keywordJoin:\n                this.resolveTableOrSubQuery(tosNode.firstOperand, joinedTables);\n                this.resolveTableOrSubQuery(tosNode.secondOperand, joinedTables);\n                break;\n\n            case TokenType.subquery:\n                tosNode.table = this.resolveSelect(tosNode.query);\n                joinedTables.push(tosNode.table);\n                if (tosNode.alias != null) {\n                    tosNode.table.identifier = tosNode.alias;\n                    this.storeTableIntoSymbolTable(tosNode.table, tosNode.position);\n                }\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    storeTableIntoSymbolTable(table: Table, position: TextPosition, alias?: string) {\n        let symbolTable = this.getCurrentSymbolTable();\n        symbolTable.storeSymbol({\n            identifier: alias == null ? table.identifier.toLowerCase() : alias.toLowerCase(),\n            posOfDefinition: position,\n            table: table,\n            referencedOnPositions: []\n        });\n        for (let column of table.columns) {\n            symbolTable.storeSymbol({\n                identifier: column.identifier.toLowerCase(),\n                posOfDefinition: null,\n                column: column,\n                tableAlias: alias,\n                referencedOnPositions: []\n            });\n        }\n    }\n\n    resolveTerm(node: TermNode): SQLType {\n        if (node == null) return null;\n\n        switch (node.type) {\n            case TokenType.binaryOp:\n                if ([TokenType.keywordIn, TokenType.keywordNotIn].indexOf(node.operator) >= 0) {\n                    return this.resolveNotIn(node);\n                }\n\n                let typeLeft = this.resolveTerm(node.firstOperand);\n                let typeRight = this.resolveTerm(node.secondOperand);\n                if (typeLeft != null && typeRight != null) {\n                    let resultType = typeLeft.getBinaryResultType(node.operator, typeRight);\n                    if (resultType == null) {\n                        this.pushError(\"Der Operator \" + TokenTypeReadable[node.operator] + \" ist für die Datentypen \" + typeLeft.toString() + \" und \" + typeRight.toString() + \" nicht definiert.\", \"error\", node.position);\n                    }\n                    node.sqlType = resultType;\n                    return resultType;\n                } else {\n                    return null;\n                }\n                break;\n            case TokenType.unaryOp:\n                let operandType = this.resolveTerm(node.operand);\n                if (operandType != null) {\n                    let resultType1 = operandType.getUnaryResultType(node.operator);\n                    if (resultType1 == null) {\n                        this.pushError(\"Der Operator \" + TokenTypeReadable[node.operator] + \" ist für einen Operanden des Datentyps \" + operandType.toString() + \" nicht definiert.\", \"error\", node.position);\n                    }\n                    node.sqlType = resultType1;\n                    return resultType1;\n                } else {\n                    return null;\n                }\n                break;\n            case TokenType.callMethod:\n                return this.resolveMethodCall(node);\n                break;\n            //    ConstantNode | IdentifierNode | DotNode | SelectNode | BracketsNode | StarAttributeNode | SelectNode | ListNode;\n\n            case TokenType.constantNode:\n                node.sqlType = SQLBaseType.fromConstantType(node.constantType);\n                return node.sqlType;\n                break;\n            case TokenType.identifier:\n                return this.resolveIdentifier(node);\n                break;\n            case TokenType.dot:\n                return this.resolveDot(node);\n                break;\n            case TokenType.keywordSelect:\n                let selectTable = this.resolveSelect(node);\n                if (selectTable.columns.length != 1) {\n                    this.pushError(\"Die Ergebnistabelle einer Unterabfrage an dieser Stelle muss genau eine Spalte besitzen.\", \"error\", node.position);\n                    return null;\n                }\n                return selectTable.columns[0].type;\n                break;\n            case TokenType.rightBracket:   // BracketsNode\n                node.sqlType = this.resolveTerm(node.termInsideBrackets);\n                return node.sqlType;\n                break;\n            case TokenType.allColumns:\n                this.pushError(\"Das Zeichen * kann hier nicht verwendet werden.\", \"error\", node.position);\n                break;\n            case TokenType.list:\n                this.pushError(\"Eine Liste wird hier nicht erwartet.\", \"error\", node.position);\n                break;\n            default:\n                break;\n        }\n\n\n\n\n    }\n\n    resolveDot(node: DotNode): SQLType {\n        let tableSymbols = this.getCurrentSymbolTable().findTables(node.identifierLeft.identifier);\n        if (tableSymbols.length == 0) {\n            this.pushError(\"Die Tabelle \" + node.identifierLeft.identifier + \" kann nicht gefunden werden.\", \"error\", node.identifierLeft.position);\n            return null;\n        }\n        if (tableSymbols.length > 1) {\n            this.pushError(\"Der Tabellenbezeichner \" + node.identifierLeft.identifier + \" ist nicht eindeutig.\", \"error\", node.identifierLeft.position);\n            return null;\n        }\n        let table = tableSymbols[0].table;\n\n        let columns = table.columns.filter(c => c.identifier.toLowerCase() == node.identifierRight.identifier.toLowerCase());\n\n        if (columns.length == 0) {\n            this.pushError(\"Die Tabelle \" + node.identifierLeft.identifier + \" hat keine Spalte mit dem Bezeichner \" + node.identifierRight.identifier + \".\", \"error\", node.identifierRight.position);\n            return;\n        }\n\n        if (columns.length > 1) {\n            this.pushError(\"Die Tabelle \" + node.identifierLeft.identifier + \" hat mehrere Spalten mit dem Bezeichner \" + node.identifierRight.identifier + \".\", \"error\", node.identifierRight.position);\n            return;\n        }\n\n        let column = columns[0];\n        node.sqlType = column.type;\n        return column.type;\n\n    }\n\n    resolveIdentifier(node: IdentifierNode): SQLType {\n        let symbols = this.getCurrentSymbolTable().findColumn(node.identifier);\n        if (symbols.length == 0) {\n            this.pushError(\"Der Bezeichner \" + node.identifier + \" ist an dieser Stelle nicht bekannt.\", \"error\", node.position);\n            return null;\n        }\n        if (symbols.length > 1) {\n            this.pushError(\"Der Bezeichner \" + node.identifier + \" ist nicht eindeutig.\", \"error\", node.position);\n            return null;\n        }\n\n        let symbol = symbols[0];\n        node.sqlType = symbol.column.type;\n        return symbol.column.type;\n    }\n\n    resolveMethodCall(node: MethodcallNode): SQLType {\n\n        let methodStore = SQLMethodStore.getInstance();\n        let methods = methodStore.getMethods(node.identifier);\n\n        methods = methods.filter(m => m.parameters.length == node.operands.length);\n        if (node.operands.length == 1 && node.operands[0].type == TokenType.allColumns) {\n            methods = methods.filter(m => m.acceptsStarParameter);\n            node.sqlType = methods[0].returnType;\n            return node.sqlType;\n        }\n\n        if (methods.length == 0) {\n            this.pushError(\"Es gibt keine passende Methode mit dem Bezeichner '\" + node.identifier + \"'.\", \"error\", node.position);\n            return null;\n        }\n\n        for (let operand of node.operands) {\n            if (this.resolveTerm(operand) == null) {\n                node.sqlType = methods[0].returnType;\n                return node.sqlType;\n            }\n        }\n\n        for (let method of methods) {\n            let found = true;\n            for (let i = 0; i < method.parameters.length; i++) {\n                let methodParameter = method.parameters[i];\n                let operand = node.operands[i];\n                if (!operand.sqlType.canCastTo(methodParameter.type)) {\n                    found = false;\n                    break;\n                }\n            }\n            if (found) {\n                node.sqlType = method.returnType;\n                return node.sqlType;\n            }\n        }\n\n        this.pushError(\"Es gibt keine passende Methode mit dem Bezeichner '\" + node.identifier + \"'.\", \"error\", node.position);\n        return null;\n\n    }\n\n    resolveNotIn(node: BinaryOpNode): SQLType {\n\n        if (node.firstOperand == null || node.secondOperand == null) return null;\n\n        let operatorString = TokenTypeReadable[node.operator];\n\n        this.resolveTerm(node.firstOperand);\n        let leftType = node.firstOperand.sqlType;\n        if (leftType != null) {\n            if (node.secondOperand.type == TokenType.keywordSelect) {\n                let selectNode = node.secondOperand;\n                if (selectNode.columnList.length != 1) {\n                    this.pushError(\"Wenn rechts vom Operator '\" + operatorString + \"' eine Unterabfrage steht, muss die Ergebnistabelle dieser Unterabfrage genau eine Spalte haben.\", \"error\", selectNode.position);\n                }\n                this.resolveSelect(selectNode);\n                let pType = selectNode.columnList[0].term.sqlType;\n                if (!pType.canCastTo(leftType)) {\n                    this.pushError(\"Der Datentyp der Ergebnisspalte der Unterabfrage ist \" + pType.toString() + \". Dieser kann nicht in den Datentyp \" + leftType.toString() + \" umgewandelt werden.\", \"error\", selectNode.position);\n                }\n            } else if (node.secondOperand.type == TokenType.list) {\n                let listNode = node.secondOperand;\n                for (let element of listNode.elements) {\n                    let elementType = SQLBaseType.fromConstantType(element.constantType);\n                    element.sqlType = elementType;\n                    if (!elementType.canCastTo(leftType)) {\n                        this.pushError(\"Der Datentyp des Listenelements \" + element.constant + \" ist \" + elementType.toString() + \". Er kann nicht in den Datentype \" + leftType.toString() + \" des Operanden auf der linken Seite des Operators '\" + operatorString + \"' umgewandelt werden.\", \"error\", element.position);\n                    }\n                }\n            } else {\n                this.pushError(\"Der rechte Operand der Operatoren 'in' und 'not in' muss eine Unterabfrage oder eine Liste sein.\", \"error\", node.secondOperand.position);\n            }\n\n        }\n\n        return SQLBaseType.getBaseType(\"boolean\");\n    }\n\n    resolveInsert(astNode: InsertNode) {\n\n        let table: Table = null;\n        let symbolTable = this.pushNewSymbolTable(astNode.position, astNode.endPosition);\n        if (astNode.table != null) {\n            astNode.table.table = this.tables.find(t => t.identifier.toLowerCase() == astNode.table.identifier.toLocaleLowerCase());\n            if (astNode.table.table == null) {\n                this.pushError(\"Die Tabelle \" + astNode.table.identifier + \" gibt es nicht.\", \"error\", astNode.table.position);\n            } else {\n                table = astNode.table.table;\n                symbolTable.storeTableSymbols(table);\n            }\n        }\n\n        let tableCompletionTo = astNode.endPosition;\n        if (astNode.valuesPosition != null) tableCompletionTo = astNode.valuesPosition;\n        if (astNode.columnsPosition != null) tableCompletionTo = astNode.columnsPosition;\n\n        this.module.addCompletionHint(astNode.position, tableCompletionTo, false, true, [\"into\", \"values\"]);\n\n        if (table != null) {\n            this.module.addCompletionHint(tableCompletionTo, astNode.valuesPosition == null ? astNode.endPosition : astNode.valuesPosition, true, false, [\"values\"]);\n        }\n\n        let tableSymbolTable = this.pushNewSymbolTable(astNode.position, tableCompletionTo);\n        tableSymbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\n\n        let columns: Column[] = [];\n        // Parse column list\n        if (astNode.columnList.length == 0) {\n            if (table != null) {\n                columns = table.columns;\n            }\n        } else {\n            if (table != null) {\n                for (let columnNode of astNode.columnList) {\n                    let column = table.columns.find(c => c.identifier.toLowerCase() == columnNode.identifier.toLowerCase());\n                    if (column == null) {\n                        this.pushError(\"Die Tabelle \" + table.identifier + \" besitzt keine Spalte mit dem Bezeichner \" + columnNode.identifier + \".\", \"error\", columnNode.position);\n                    } else {\n                        columns.push(column);\n                    }\n                }\n            }\n        }\n\n        if (columns.length > 0) {\n            // Parse value lists\n            for (let valueList of astNode.values) {\n                if (valueList.length != columns.length && valueList.length > 0) {\n                    this.pushError(\"Erwartet werden \" + columns.length + \" Elemente, hier stehen aber \" + valueList.length + \" Elemente in der Liste.\", \"error\", valueList[0].position);\n                } else {\n                    for (let i = 0; i < valueList.length; i++) {\n                        let value = valueList[i];\n                        let column = columns[i];\n                        value.sqlType = SQLBaseType.fromConstantType(value.constantType);\n                        // constantType == 40 means: null\n                        // TODO: check if column is nullable!\n                        let destType = column.type.toString().toLocaleLowerCase();\n                        if (value.constantType == TokenType.keywordNull) {\n                            if (!column.isNullable || column.notNull) {\n                                this.pushError(\"Die Spalte \" + column.identifier + \" ist nicht nullable, daher kann null hier nicht eingefügt werden.\", \"error\", value.position);\n                            }\n                        } else if (!value.sqlType.canCastTo(column.type)) {\n                            let error: string = \"Der Wert \" + value.constant + \" vom Datentyp \" + value.sqlType.toString() + \" kann nicht in den Datentyp \" + column.type.toString() + \" der Spalte \" + column.identifier + \" umgewandelt werden.\";\n\n                            if(destType == \"date\") error += \"<br><b>Tipp: </b>Datumswerte haben die Form 'yyyy-mm-dd', also z.B. '2022-06-15'.\";\n                            if(destType == \"datetime\" || destType == \"timestamp\") error += \"<br><b>Tipp: </b>Timestamps haben die Form 'yyyy-mm-dd hh:min:ss', also z.B. '2022-06-15 07:56:22'.\";\n\n                            this.pushError(error, \"error\", value.position);\n                        } else if(destType == \"date\"){\n                            if(!isDate(value.constant)){\n                                let error: string = `'${value.constant}' ist kein date-Wert.<br><b>Tipp: </b>Datumswerte haben die Form 'yyyy-mm-dd', also z.B. '2022-06-15'.`;\n                                this.pushError(error, \"error\", value.position);\n                            }\n                        } else if(destType == \"datetime\" || destType == \"timestamp\"){\n                            if(!isDateTime(value.constant)){\n                                let error: string = `'${value.constant}' ist kein ${destType}-Wert.<br><b>Tipp: </b>Timestamps haben die Form 'yyyy-mm-dd hh:min:ss', also z.B. '2022-06-15 07:56:22'.`;\n                                this.pushError(error, \"error\", value.position);\n                            }\n                        } else if(destType == \"time\"){\n                            if(!isTime(value.constant)){\n                                let error: string = `'${value.constant}' ist kein ${destType}-Wert.<br><b>Tipp: </b>Time-Werte haben die Form 'hh:min:ss', also z.B. '07:56:22'.`;\n                                this.pushError(error, \"error\", value.position);\n                            }\n                        } \n                    }\n                }\n            }\n        }\n\n        this.symbolTableStack.pop();\n\n    }\n\n\n\n}\n\n","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { SymbolResolver } from \"./parser/SymbolResolver.js\";\r\n\r\nexport enum CompilerStatus {\r\n    compiling, error, compiledButNothingToRun, readyToRun\r\n}\r\n\r\nexport class Compiler {\r\n\r\n    compilerStatus: CompilerStatus = CompilerStatus.compiledButNothingToRun;\r\n\r\n    atLeastOneModuleIsStartable: boolean;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    compile(moduleStore: ModuleStore): Error[] {\r\n\r\n        this.compilerStatus = CompilerStatus.compiling;\r\n\r\n        let t0 = performance.now();\r\n\r\n        let lexer = new Lexer();\r\n\r\n        // 1st pass: lexing\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.file.dirty = false;\r\n            m.clear();\r\n\r\n            let lexed = lexer.lex(m.getProgramTextFromMonacoModel());\r\n            m.errors[0] = lexed.errors;\r\n            m.tokenList = lexed.tokens;\r\n            m.bracketError = lexed.bracketError;\r\n            if(m.file.name == this.main.getCurrentlyEditedModule().file.name){\r\n                if(this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(lexed.bracketError);\r\n            }\r\n        }\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        this.main.getSemicolonAngel().startRegistering();\r\n\r\n        let parser: Parser = new Parser();\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            parser.parse(m);\r\n        }\r\n        \r\n        // 3rd pass: check symbols and types\r\n        let databaseTool = this.main.getDatabaseTool();\r\n        let symbolResolver: SymbolResolver = new SymbolResolver(databaseTool);\r\n\r\n        for(let m of moduleStore.getModules(false)){\r\n            symbolResolver.start(m);\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        let message = \"Compiled in \" + dt + \" ms.\";\r\n\r\n        this.main.getCurrentWorkspace().compilerMessage = message;\r\n\r\n        this.main.getSemicolonAngel().healSemicolons();\r\n\r\n        this.compilerStatus = CompilerStatus.readyToRun;\r\n\r\n        return null;\r\n    }\r\n\r\n}","import { FileData } from \"../../communication/Data.js\";\r\nimport { AccordionElement } from \"../../main/gui/Accordion.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenType, TextPositionWithoutLength } from \"../lexer/Token.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { ASTNode } from \"./AST.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\nimport { stringToDate } from \"../../tools/StringTools.js\";\r\nimport { SQLStatement } from \"./Parser.js\";\r\n\r\n\r\nexport type CompletionHint = {\r\n    fromLine: number,\r\n    fromColumn: number,\r\n    toLine: number, \r\n    toColumn: number,\r\n    hintColumns: boolean,\r\n    hintColumnsOfTable?: string,\r\n    hintTables: boolean,\r\n    hintKeywords: string[],\r\n    dontHint?: string[],\r\n    praefix?: string,\r\n    suffix?: string\r\n}\r\n\r\nexport type File = {\r\n    name: string,\r\n    id?: number,\r\n    text: string,\r\n\r\n    text_before_revision: string,\r\n    submitted_date: string,\r\n    student_edited_after_revision: boolean,\r\n\r\n    dirty: boolean,\r\n    saved: boolean,\r\n    version: number,\r\n    panelElement?: AccordionElement\r\n\r\n}\r\n\r\nexport type IdentifierPosition = {\r\n    position: TextPosition,\r\n    element: any;\r\n}\r\n\r\nexport type MethodCallPosition = {\r\n    identifierPosition: TextPosition,\r\n    possibleMethods: any[] | string, // string for print, println, ...\r\n    commaPositions: TextPosition[],\r\n    rightBracketPosition: TextPosition\r\n}\r\n\r\nexport class Module {\r\n    file: File;\r\n    static maxUriNumber: number = 0;\r\n    uri: monaco.Uri;\r\n    model: monaco.editor.ITextModel;\r\n    oldErrorDecorations: string[] = [];\r\n    lastSavedVersionId: number;\r\n    editorState: monaco.editor.ICodeEditorViewState;\r\n\r\n    errors: Error[][] = [[], [], [], []]; // 1st pass, 2nd pass, 3rd pass\r\n\r\n    // 1st pass: Lexer\r\n    tokenList: Token[];\r\n\r\n    // 2nd pass: ASTParser\r\n    sqlStatements: SQLStatement[];\r\n    mainSymbolTable: SymbolTable;\r\n\r\n\r\n    identifierPositions: { [line: number]: IdentifierPosition[] } = {};\r\n    methodCallPositions: { [line: number]: MethodCallPosition[] } = {};\r\n\r\n    static uriMap: { [name: string]: number } = {};\r\n    bracketError: string;\r\n\r\n    completionHints: Map<number, CompletionHint[]> = new Map(); // Map from line numbers to hints\r\n\r\n    constructor(file: File, public main: MainBase) {\r\n        if (file == null || this.main == null) return; // used by AdhocCompiler and ApiDoc\r\n\r\n        this.file = file;\r\n        // this.uri = monaco.Uri.from({ path: '/file' + (Module.maxUriNumber++) + '.learnJava', scheme: 'file' });\r\n        let path = file.name;\r\n\r\n        let uriCounter = Module.uriMap[path];\r\n        if (uriCounter == null) {\r\n            uriCounter = 0;\r\n        } else {\r\n            uriCounter++;\r\n        }\r\n        Module.uriMap[path] = uriCounter;\r\n\r\n        if (uriCounter > 0) path += \" (\" + uriCounter + \")\";\r\n        this.uri = monaco.Uri.from({ path: path, scheme: 'inmemory' });\r\n        this.model = monaco.editor.createModel(file.text, \"vscSQL\", this.uri);\r\n        this.model.updateOptions({ tabSize: 3 });\r\n\r\n        this.lastSavedVersionId = this.model.getAlternativeVersionId();\r\n\r\n        let that = this;\r\n\r\n        this.model.onDidChangeContent(() => {\r\n            let versionId = that.model.getAlternativeVersionId();\r\n\r\n            if (versionId != that.lastSavedVersionId) {\r\n                that.file.dirty = true;\r\n                that.file.saved = false;\r\n                that.lastSavedVersionId = versionId;\r\n            }\r\n\r\n            if(!that.main.isEmbedded()){\r\n                let main1: Main = <Main>main;\r\n                if (main1.workspacesOwnerId != main1.user.id) {\r\n                    if (that.file.text_before_revision == null || that.file.student_edited_after_revision) {\r\n                        that.file.student_edited_after_revision = false;\r\n                        that.file.text_before_revision = that.file.text;\r\n                        that.file.saved = false;\r\n                        main1.networkManager.sendUpdates(null, false);\r\n                        main1.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n                        main1.projectExplorer.renderHomeworkButton(that.file);\r\n                    }\r\n                } else {\r\n                    that.file.student_edited_after_revision = true;\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    addCompletionHint(fromPosition: TextPosition, toPosition: TextPosition, hintColumns: boolean|string, hintTables: boolean, \r\n        hintKeywords: string[], dontHint?: string[], praefix: string = \"\", suffix: string = \"\"){\r\n        let ch: CompletionHint = {\r\n            fromColumn: fromPosition.column,\r\n            fromLine: fromPosition.line,\r\n            toColumn: toPosition.column,\r\n            toLine: toPosition.line,\r\n            hintColumns: (typeof hintColumns == \"boolean\")? hintColumns : true, \r\n            hintColumnsOfTable: (typeof hintColumns == \"string\")? hintColumns : null,\r\n            hintTables: hintTables,\r\n            hintKeywords: hintKeywords == null ? null : hintKeywords.map(s => s.toUpperCase()),\r\n            dontHint: dontHint,\r\n            praefix: praefix,\r\n            suffix: suffix\r\n        }\r\n\r\n        for(let i = ch.fromLine; i <= ch.toLine; i++){\r\n            let chList = this.completionHints.get(i);\r\n            if(chList == null){\r\n                chList = [];\r\n                this.completionHints.set(i, chList);\r\n            }\r\n            chList.push(ch);\r\n        }\r\n    }\r\n\r\n    getSQLSTatementsAtSelection(sel: monaco.Selection): SQLStatement[] {\r\n        let selStart = {line: sel.startLineNumber, column: sel.startColumn};\r\n        let selEnd = {line: sel.endLineNumber, column: sel.endColumn};\r\n\r\n        if(this.sqlStatements == null){\r\n            return [];\r\n        }\r\n\r\n        return this.sqlStatements.filter(stmt => {\r\n            return !(this.compare(stmt.to, selStart) < 0 || this.compare(stmt.from, selEnd) > 0);\r\n        })\r\n\r\n    }\r\n\r\n    /**\r\n     * returns 1 if a > b, 0 if a == b and -1 if a < b\r\n     * @param a \r\n     * @param b \r\n     */\r\n    compare(a: {line: number, column: number}, b: {line: number, column: number}): number{\r\n        if(a.line > b.line) return 1;\r\n        if(a.line < b.line) return -1;\r\n        if(a.column > b.column) return 1;\r\n        if(a.column < b.column) return -1;\r\n        return 0;\r\n    }\r\n\r\n\r\n\r\n    getSQLStatementAtPosition(p: { lineNumber: number, column: number }): SQLStatement {\r\n\r\n        return this.sqlStatements.find(statement => {\r\n            if(statement.from.line > p.lineNumber ) return false;\r\n            if(statement.from.line == p.lineNumber && statement.from.column > p.column) return false;\r\n            if(statement.to.line < p.lineNumber) return false;\r\n            if(statement.to.line == p.lineNumber && statement.to.column < p.column) return false;\r\n            return true;\r\n        });        \r\n\r\n    }\r\n\r\n\r\n    getCompletionHint(line: number, column: number){\r\n        let chList = this.completionHints.get(line);\r\n        \r\n        if(chList == null || chList.length == 0){\r\n            return null;\r\n        }\r\n\r\n        let pos = line * 1000 + column;\r\n        chList = chList.filter(ch => pos >= ch.fromLine * 1000 + ch.fromColumn && pos <= ch.toLine * 1000 + ch.toColumn);\r\n        if(chList.length == 0){\r\n            return;\r\n        }\r\n\r\n        // take CompletionHint with smallest range:\r\n        let bestCh: CompletionHint = chList[0];\r\n        let bestRangeLength  = (bestCh.toLine - bestCh.fromLine)*1000 + (bestCh.toColumn - bestCh.fromColumn);\r\n\r\n        for(let i = 1; i < chList.length; i++){\r\n            let ch = chList[i];\r\n            let rangeLength = (ch.toLine - ch.fromLine) * 1000 + (ch.toColumn - ch.fromColumn);\r\n\r\n            if(rangeLength < bestRangeLength){\r\n                bestCh = ch;\r\n                bestRangeLength = rangeLength;\r\n            }\r\n\r\n        }\r\n\r\n        return bestCh;\r\n    }\r\n\r\n\r\n    static restoreFromData(f: FileData, main: MainBase): Module {\r\n\r\n        let f1: File = {\r\n            name: f.name,\r\n            text: f.text,\r\n            text_before_revision: f.text_before_revision,\r\n            submitted_date: f.submitted_date,\r\n            student_edited_after_revision: false,\r\n            dirty: true,\r\n            saved: true,\r\n            version: f.version,\r\n            id: f.id\r\n        }\r\n\r\n        let m: Module = new Module(f1, main);\r\n\r\n        return m;\r\n\r\n    }\r\n\r\n    getFileData(workspace: Workspace): FileData {\r\n        let file = this.file;\r\n        let fd: FileData = {\r\n            id: file.id,\r\n            name: file.name,\r\n            text: file.text,\r\n            text_before_revision: file.text_before_revision,\r\n            submitted_date: file.submitted_date,\r\n            student_edited_after_revision: file.student_edited_after_revision,\r\n            version: file.version,\r\n            workspace_id: workspace.id,\r\n            forceUpdate: false,\r\n            file_type: 11\r\n        }\r\n\r\n        return fd;\r\n    }\r\n\r\n\r\n    findSymbolTableAtPosition(line: number, column: number) {\r\n        if (this.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (line > this.mainSymbolTable.positionTo.line ||\r\n            line == this.mainSymbolTable.positionTo.line && column > this.mainSymbolTable.positionTo.column\r\n        ) {\r\n            line = this.mainSymbolTable.positionTo.line;\r\n            column = this.mainSymbolTable.positionTo.column - 1;\r\n        }\r\n\r\n        return this.mainSymbolTable.findTableAtPosition(line, column);\r\n    }\r\n\r\n    getErrorCount(): number {\r\n\r\n        let ec = 0;\r\n        for (let el of this.errors) {\r\n            el.forEach(error => ec += error.level == \"error\" ? 1 : 0);\r\n            // ec += el.length;\r\n        }\r\n\r\n        return ec;\r\n    }\r\n\r\n    getProgramTextFromMonacoModel(): string {\r\n        return this.model.getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n    }\r\n\r\n\r\n    addIdentifierPosition(position: TextPosition, element: any) {\r\n        let positionList: IdentifierPosition[] = this.identifierPositions[position.line];\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            this.identifierPositions[position.line] = positionList;\r\n        }\r\n        positionList.push({\r\n            position: position,\r\n            element: element\r\n        });\r\n    }\r\n\r\n    getElementAtPosition(line: number, column: number): any {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let bestFoundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column < p.position.column + p.position.length) {\r\n\r\n                if (p.position.length > 0) {\r\n                    if (bestFoundPosition == null) {\r\n                        bestFoundPosition = p;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bestFoundPosition == null ? null : <any>bestFoundPosition.element;\r\n    }\r\n\r\n    copy(): Module {\r\n        let m = new Module(this.file, this.main);\r\n        m.model = this.model;\r\n        m.mainSymbolTable = this.mainSymbolTable;\r\n        this.mainSymbolTable = null;\r\n\r\n        this.file.dirty = true;\r\n\r\n        return m;\r\n    }\r\n\r\n    clear() {\r\n\r\n        this.identifierPositions = {};\r\n\r\n        if (this.file != null && this.file.dirty) {\r\n            // Lexer\r\n            this.tokenList = null;\r\n            this.errors[0] = [];\r\n\r\n            // AST Parser\r\n            this.errors[1] = [];\r\n\r\n\r\n        }\r\n\r\n        // type resolver\r\n        this.errors[2] = [];\r\n\r\n        // Code generator\r\n        this.errors[3] = [];\r\n        this.mainSymbolTable = new SymbolTable(null, { line: 1, column: 1, length: 1 }, { line: 100000, column: 1, length: 0 });\r\n\r\n        this.methodCallPositions = {};\r\n\r\n    }\r\n\r\n    hasErrors() {\r\n\r\n        for (let el of this.errors) {\r\n            if (el.find(error => error.level == \"error\")) {\r\n                return true;\r\n            }\r\n            // if (el.length > 0) {\r\n            //     return true;\r\n            // }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getSortedAndFilteredErrors(): Error[] {\r\n\r\n        let list: Error[] = [];\r\n\r\n        for (let el of this.errors) {\r\n            list = list.concat(el);\r\n        }\r\n\r\n        list.sort((a, b) => {\r\n            if (a.position.line > b.position.line) {\r\n                return 1;\r\n            }\r\n            if (b.position.line > a.position.line) {\r\n                return -1;\r\n            }\r\n            if (a.position.column >= b.position.column) {\r\n                return 1;\r\n            }\r\n            return -1;\r\n        });\r\n\r\n        for (let i = 0; i < list.length - 1; i++) {\r\n            let e1 = list[i];\r\n            let e2 = list[i + 1];\r\n            if (e1.position.line == e2.position.line && e1.position.column + 10 > e2.position.column) {\r\n                if (this.errorLevelCompare(e1.level, e2.level) == 1) {\r\n                    list.splice(i + 1, 1);\r\n                } else {\r\n                    list.splice(i, 1);\r\n                }\r\n                i--;\r\n            }\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    errorLevelCompare(level1: ErrorLevel, level2: ErrorLevel): number {\r\n        if (level1 == \"error\") return 1;\r\n        if (level2 == \"error\") return 2;\r\n        if (level1 == \"warning\") return 1;\r\n        if (level2 == \"warning\") return 2;\r\n        return 1;\r\n    }\r\n}\r\n\r\n\r\nexport class ModuleStore {\r\n\r\n    private modules: Module[] = [];\r\n    private moduleMap: Map<string, Module> = new Map();\r\n\r\n    dirty: boolean = false;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    findModuleById(module_id: number): Module {\r\n        for (let module of this.modules) {\r\n            if (module.file.id == module_id) return module;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    copy(): ModuleStore {\r\n        let ms: ModuleStore = new ModuleStore(this.main);\r\n        for (let m of this.modules) {\r\n            ms.putModule(m.copy());\r\n        }\r\n        return ms;\r\n    }\r\n\r\n    findModuleByFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                return m;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        for (let m of this.modules) {\r\n            if (m.hasErrors()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getFirstModule(): Module {\r\n        if (this.modules.length > 0) {\r\n            for (let mo of this.modules) {\r\n                return mo;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    isDirty(): boolean {\r\n\r\n        if (this.dirty) {\r\n            this.dirty = false;\r\n            return true;\r\n        }\r\n\r\n        let dirty = false;\r\n        for (let m of this.modules) {\r\n            if (m.file.dirty) {\r\n                dirty = true;\r\n                break;\r\n            }\r\n        }\r\n        return dirty;\r\n    }\r\n\r\n\r\n    getModules(includeSystemModules: boolean, excludedModuleName?: String): Module[] {\r\n        let ret = [];\r\n        for (let m of this.modules) {\r\n            if (m.file.name != excludedModuleName) {\r\n                ret.push(m);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    putModule(module: Module) {\r\n        this.modules.push(module);\r\n        this.moduleMap[module.file.name] = module;\r\n    }\r\n\r\n    removeModuleWithFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                this.removeModule(m);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n\r\n        if (this.modules.indexOf(module) < 0) return;\r\n\r\n        this.modules.splice(this.modules.indexOf(module), 1);\r\n        this.moduleMap[module.file.name] = undefined;\r\n        this.dirty = true;\r\n    }\r\n\r\n    getModule(moduleName: string): Module {\r\n        return this.moduleMap[moduleName];\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { escapeHtml } from \"./StringTools.js\";\r\n\r\nexport function makeEditable(elementWithText: JQuery<HTMLElement>,\r\n    elementToReplace: JQuery<HTMLElement>,\r\n    renameDoneCallback: (newContent: string) => void, selectionRange: { start: number, end: number } = null) {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    if (elementToReplace == null) {\r\n        elementToReplace = elementWithText;\r\n    }\r\n\r\n    let $input = jQuery('<input type=\"text\" class=\"jo_inplaceeditor\" spellcheck=\"false\">');\r\n    $input.css({\r\n        width: elementToReplace.css('width'),\r\n        height: elementToReplace.css('height'),\r\n        color: elementToReplace.css('color'),\r\n        position: elementToReplace.css('position'),\r\n        \"background-color\": elementToReplace.css('background-color'),\r\n        \"font-size\": elementToReplace.css('font-size'),\r\n        \"font-weight\": elementToReplace.css('font-weight'),\r\n        \"box-sizing\": \"border-box\"\r\n    });\r\n    $input.val(elementWithText.text());\r\n    $input.on(mousePointer + \"down\", (e) => { e.stopPropagation(); })\r\n\r\n    if (selectionRange != null) {\r\n        (<HTMLInputElement>$input[0]).setSelectionRange(selectionRange.start, selectionRange.end);\r\n    }\r\n\r\n    elementToReplace.after($input);\r\n    elementToReplace.hide();\r\n    setTimeout(() => {\r\n        $input.focus();\r\n    }, 300);\r\n\r\n    $input.on(\"keydown.me\", (ev) => {\r\n        if (ev.key == \"Enter\" || ev.key == \"Escape\") {\r\n            $input.off(\"keydown.me\");\r\n            $input.off(\"focusout.me\");\r\n            $input.remove();\r\n            elementToReplace.show();\r\n            let newValue = escapeHtml(<string>$input.val());\r\n            renameDoneCallback(newValue);\r\n            return;\r\n        }\r\n    });\r\n\r\n    $input.on(\"focusout.me\", (ev) => {\r\n        $input.off(\"keydown.me\");\r\n        $input.off(\"focusout.me\");\r\n        $input.remove();\r\n        elementToReplace.show();\r\n        let newValue = escapeHtml(<string>$input.val());\r\n        renameDoneCallback(newValue);\r\n        return;\r\n    });\r\n\r\n}\r\n\r\nexport type ContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: () => void;\r\n    link?: string;\r\n    subMenu?: ContextMenuItem[]\r\n};\r\n\r\nexport function openContextMenu(items: ContextMenuItem[], x: number, y: number): JQuery<HTMLElement> {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    let $contextMenu = jQuery('<div class=\"jo_contextmenu\"></div>');\r\n\r\n    let $openSubMenu: JQuery<HTMLElement> = null;\r\n    let parentMenuItem: ContextMenuItem = null;\r\n\r\n    for (let mi of items) {\r\n        let caption: string = mi.caption;\r\n        if (mi.link != null) {\r\n            caption = `<a href=\"${mi.link}\" target=\"_blank\" class=\"jo_menulink\">${mi.caption}</a>`;\r\n        }\r\n        let $item = jQuery('<div>' + caption + (mi.subMenu != null ? '<span style=\"float: right\"> &nbsp; &nbsp; &gt;</span>' : \"\") + '</div>');\r\n        if (mi.color != null) {\r\n            $item.css('color', mi.color);\r\n        }\r\n        if (mi.link == null) {\r\n            $item.on(mousePointer + 'up.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n                jQuery('.jo_contextmenu').remove();\r\n                jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n                jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n                jQuery(document).off(\"keydown.contextmenu\");\r\n                mi.callback();\r\n            });\r\n            $item.on(mousePointer + 'down.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n            });\r\n        } else {\r\n            let $link = $item.find('a');\r\n            $link.on(mousePointer + \"up\", (event) => {\r\n                event.stopPropagation();\r\n                setTimeout(() => {\r\n                    $item.hide();\r\n                }, 500);\r\n            })\r\n            $link.on(mousePointer + \"down\", (event) => {\r\n                event.stopPropagation();\r\n            })\r\n\r\n        }\r\n\r\n        $item.on(mousePointer + 'move.contextmenu', () => {\r\n            if (mi != parentMenuItem && $openSubMenu != null) {\r\n                $openSubMenu.remove();\r\n                parentMenuItem = null;\r\n                $openSubMenu = null;\r\n            }\r\n            if (mi.subMenu != null) {\r\n                $openSubMenu = openContextMenu(mi.subMenu, $item.offset().left + $item.width(), $item.offset().top);\r\n            }\r\n        });\r\n\r\n        $contextMenu.append($item);\r\n    }\r\n\r\n    jQuery(document).on(mousePointer + \"down.contextmenu\", (e) => {\r\n        jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n        jQuery(document).off(\"keydown.contextmenu\");\r\n        jQuery('.jo_contextmenu').remove();\r\n    })\r\n\r\n    jQuery(document).on(\"keydown.contextmenu\", (ev) => {\r\n        if (ev.key == \"Escape\") {\r\n            jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n            jQuery(document).off(\"keydown.contextmenu\");\r\n            jQuery('.jo_contextmenu').remove();\r\n        }\r\n    });\r\n\r\n    let leftRight = x > window.innerWidth * 0.8 ? \"right\" : \"left\";\r\n    let xp = x > window.innerWidth * 0.8 ? window.innerWidth - x : x;\r\n    let topBottom = y > window.innerHeight * 0.8 ? \"bottom\" : \"top\";\r\n    let yp = y > window.innerHeight * 0.8 ? window.innerHeight - y : y;\r\n\r\n    let css = {};\r\n    css[leftRight] = xp + \"px\";\r\n    css[topBottom] = yp + \"px\";\r\n\r\n    $contextMenu.css(css);\r\n\r\n\r\n    jQuery(\"body\").append($contextMenu);\r\n    $contextMenu.show();\r\n\r\n    return $contextMenu;\r\n}\r\n\r\nexport function makeTabs(tabDiv: JQuery<HTMLElement>) {\r\n    let headings = tabDiv.find('.jo_tabheadings>div').not('.jo_noHeading');\r\n    let tabs = tabDiv.find('.jo_tabs>div');\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    headings.on(mousePointer + \"down\", (ev) => {\r\n        let target = jQuery(ev.target);\r\n        headings.removeClass('jo_active');\r\n        target.addClass('jo_active');\r\n        let tab = tabDiv.find('.' + target.data('target'));\r\n        tabs.removeClass('jo_active');\r\n        tabs.trigger('myhide');\r\n        tab.addClass('jo_active');\r\n        tab.trigger('myshow');\r\n    });\r\n\r\n}\r\n\r\nexport function convertPxToNumber(pxString: string): number {\r\n    pxString = pxString.replace('px', '').trim();\r\n    return Number.parseInt(pxString);\r\n}\r\n\r\nexport function makeDiv(id: string, klass: string = \"\", text: string = \"\", css?: { [id: string]: any }): JQuery<HTMLDivElement> {\r\n\r\n    let s = \"\";\r\n    if (id != null && id != \"\") s += ` id=\"${id}\"`;\r\n\r\n    if (klass != null && klass != \"\") s += ` class=\"${klass}\"`;\r\n\r\n    let div = jQuery(`<div${s}></div>`);\r\n\r\n    if (css != null) {\r\n        div.css(css);\r\n    }\r\n\r\n    if (text != null && text != \"\") {\r\n        div.text(text);\r\n    }\r\n\r\n    return <any>div;\r\n\r\n}\r\n\r\nexport type SelectItem = {\r\n    value: string | number,\r\n    object: any,\r\n    caption: string\r\n}\r\n\r\nexport function setSelectItems($selectElement: JQuery<HTMLSelectElement>, items: SelectItem[], activeItemValue?: string | number) {\r\n    $selectElement.empty();\r\n    items.forEach(item => {\r\n        let selected: string = (item.value == activeItemValue) ? ' selected=\"selected\"' : \"\";\r\n        let element = jQuery(`<option value=${item.value}${selected}>${item.caption}</option>`);\r\n        $selectElement.append(element);\r\n        element.data('object', item.object);\r\n    }\r\n    );\r\n\r\n    $selectElement.data('items', items);\r\n\r\n\r\n}\r\n\r\nexport function getSelectedObject($selectDiv: JQuery<HTMLSelectElement>) {\r\n\r\n    let items: SelectItem[] = $selectDiv.data('items');\r\n\r\n    let selectedValue = $selectDiv.val();\r\n\r\n    return items.find(item => item.value == selectedValue)?.object;\r\n\r\n}\r\n\r\nexport var jo_mouseDetected: boolean = false;\r\nexport function checkIfMousePresent() {\r\n    if (matchMedia('(pointer:fine)').matches) {\r\n        jo_mouseDetected = true;\r\n    }\r\n}\r\n\r\nexport function animateToTransparent($element: JQuery<HTMLElement>, cssProperty: string, startColorRgb: number[], duration: number) {\r\n    let colorPraefix = 'rgba(' + startColorRgb[0] + \", \" + startColorRgb[1] + \", \" + startColorRgb[2] + \", \";\r\n    let value = 1.0;\r\n    let delta = value / (duration / 20);\r\n\r\n    let animate = () => {\r\n        $element.css(cssProperty, colorPraefix + value + \")\");\r\n        value -= delta;\r\n        if (value < 0) {\r\n            $element.css(cssProperty, \"\");\r\n        } else {\r\n            setTimeout(animate, 20);\r\n        }\r\n    }\r\n\r\n    animate();\r\n}\r\n\r\nexport function downloadFile(obj: any, filename: string, isBlob: boolean = false) {\r\n    var blob = isBlob? obj : new Blob([JSON.stringify(obj)], { type: 'text/plain' });\r\n    //@ts-ignore\r\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n        //@ts-ignore\r\n        window.navigator.msSaveOrOpenBlob(blob, filename);\r\n    } else {\r\n        var e = document.createEvent('MouseEvents'),\r\n            a = document.createElement('a');\r\n        a.download = filename;\r\n        a.href = window.URL.createObjectURL(blob);\r\n        a.dataset.downloadurl = ['text/plain', a.download, a.href].join(':');\r\n        //@ts-ignore\r\n        e.initEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\r\n        a.dispatchEvent(e);\r\n        a.remove();\r\n    }\r\n}\r\n\r\n\r\nfunction fallbackCopyTextToClipboard(text) {\r\n    var textArea = document.createElement(\"textarea\");\r\n    textArea.value = text;\r\n\r\n    // Avoid scrolling to bottom\r\n    textArea.style.top = \"0\";\r\n    textArea.style.left = \"0\";\r\n    textArea.style.position = \"fixed\";\r\n\r\n    document.body.appendChild(textArea);\r\n    textArea.focus();\r\n    textArea.select();\r\n\r\n    try {\r\n        var successful = document.execCommand('copy');\r\n    } catch (err) {\r\n        console.error('Fallback: Oops, unable to copy', err);\r\n    }\r\n\r\n    document.body.removeChild(textArea);\r\n}\r\n\r\nexport function copyTextToClipboard(text) {\r\n    if (!navigator.clipboard) {\r\n        fallbackCopyTextToClipboard(text);\r\n        return;\r\n    }\r\n    navigator.clipboard.writeText(text).then(function () {\r\n    }, function (err) {\r\n        console.error('Async: Could not copy text: ', err);\r\n    });\r\n}\r\n","import { UploadTemplateResponse } from \"../communication/Data.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\n\r\nexport class TemplateUploader {\r\n\r\n    uploadCurrentDatabase(workspace_id: number, main: Main, dump: Uint8Array | null, \r\n        reason: \"publishDatabaseAsTemplate\" | \"uploadBaseTemplateForWorkspace\",\r\n        callback: (response: UploadTemplateResponse) => void = () => { }) {\r\n            \r\n        main.waitOverlay.show('Bitte warten, lade Vorlage auf den Server hoch ...');\r\n        if (workspace_id >= 0) {\r\n            let dbTool = main.getDatabaseTool();\r\n            dbTool.export((buffer) => {\r\n                // @ts-ignore\r\n                buffer = pako.deflate(buffer);\r\n                this.uploadIntern(buffer, workspace_id, reason, main, callback);\r\n            }, (error) => {\r\n                alert(\"Fehler beim Exportieren der Datenbank: \" + error)\r\n                main.waitOverlay.hide();\r\n            })\r\n        } else {\r\n            this.uploadIntern(dump, -1, reason, main, callback);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    private uploadIntern(buffer: Uint8Array, workspace_id: number,\r\n        reason: \"publishDatabaseAsTemplate\" | \"uploadBaseTemplateForWorkspace\",\r\n        main: Main, callback: (response: UploadTemplateResponse) => void) {\r\n\r\n        $.ajax({\r\n            type: 'POST',\r\n            async: true,\r\n            contentType: 'application/octet-stream',\r\n            data: buffer,\r\n            processData: false,\r\n            headers: { 'x-workspaceid': \"\" + workspace_id, \"x-reason\": reason },\r\n            url: \"servlet/uploadTemplate\",\r\n            success: function (response: UploadTemplateResponse) {\r\n                main.waitOverlay.hide();\r\n                callback(response);\r\n                return;\r\n\r\n            },\r\n            error: function (jqXHR, message) {\r\n                alert('message');\r\n                main.waitOverlay.hide();\r\n            }\r\n        }\r\n        );\r\n        return buffer;\r\n    }\r\n}","import { CreateWorkspaceData, WorkspaceData } from \"../../communication/Data.js\";\r\nimport { copyTextToClipboard, makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { TemplateUploader } from \"../../tools/TemplateUploader.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\nexport class DatabaseSettingsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private workspace: Workspace) {\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Datenbank-Einstellungen</div>\r\n            <div style=\"width: 100%; margin-left: 10px\">\r\n                <div class=\"jo_ds_settings\" style=\"margin-left: 0px\">\r\n                <div class=\"jo_ds_settings_caption\">Name der Datenbank:</div><div><input class=\"dialog-input jo_databasename\" value=\"Neue Datenbank\"></input></div>\r\n                </div>\r\n\r\n                <div class=\"jo_ds_settings_caption\" style=\"margin-top: 20px\">\r\n                Zugriffscodes für andere Benutzer:\r\n                </div>\r\n                                \r\n                <div>\r\n                    <table class=\"jo_ds_secret_table\">\r\n                    <tr>\r\n                        <td>Nur Lesen:</td><td class=\"jo_ds_secret jo_ds_secret_read\"></td><td id=\"copySecretTdread\"></td><td><button class=\"jo_small_button jo_button_code_read\">Neuen Code generieren</button></td>\r\n                    <tr>\r\n                        <td>Lesen und schreiben:</td><td class=\"jo_ds_secret jo_ds_secret_write\"></td><td id=\"copySecretTdwrite\"></td><td><button class=\"jo_small_button jo_button_code_write\">Neuen Code generieren</button></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Lesen, schreiben und Struktur verändern:</td><td class=\"jo_ds_secret jo_ds_secret_ddl\"></td><td id=\"copySecretTdddl\"></td><td><button class=\"jo_small_button jo_button_code_ddl\">Neuen Code generieren</button></td>\r\n                    </tr>\r\n                    </table>\r\n                </div>\r\n\r\n                <div class=\"jo_ds_settings_caption\" style=\"margin-top: 20px\">\r\n                Beschreibung:\r\n                </div>\r\n                <div>\r\n                <textarea class=\"jo_ds_settings_description\" maxlength=\"5000\"></textarea>\r\n                </div>\r\n\r\n                <div class=\"jo_ds_settings_caption\" style=\"margin-top: 20px\">\r\n                Datenbank freigeben als Vorlage für andere Benutzer:\r\n                </div>\r\n\r\n                <fieldset id=\"jo_ds_publishedTo\">\r\n                    <input type=\"radio\" id=\"b0\" name=\"publishedFilter\" value=\"0\" checked=\"checked\"><label for=\"b0\">Keine Freigabe</label>\r\n                    <input type=\"radio\" id=\"b1\" name=\"publishedFilter\" value=\"1\"><label for=\"b1\">Freigabe für meine Klasse(n)</label>\r\n                    <input type=\"radio\" id=\"b2\" name=\"publishedFilter\" value=\"2\" style=\"visibility: none\"><label id=\"lb2\" for=\"b2\" style=\"visibility: none\">Freigabe für meine Schule</label>\r\n                    <input type=\"radio\" id=\"b3\" name=\"publishedFilter\" value=\"3\" style=\"visibility: none\"><label id=\"lb3\" for=\"b3\" style=\"visibility: none\">Freigabe für alle Schulen</label>\r\n                </fieldset>\r\n\r\n                <div>\r\n                    <input type=\"checkbox\" id=\"jo_upload_db\" name=\"jo_upload_db\">\r\n                    <label for=\"jo_upload_db\">Aktuellen Zustand der Datenbank als Vorlage hochladen</label>\r\n                </div>\r\n            </div>\r\n\r\n\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_save_button\">Speichern</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n\r\n        let that = this;\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { this.showMainWindow(); });\r\n        jQuery('#jo_ds_save_button').on('click', () => { \r\n            this.saveNameAndPublishedTo();\r\n         })\r\n\r\n        this.setValues();\r\n\r\n        [\"read\", \"write\", \"ddl\"].forEach(kind => {\r\n            jQuery('.jo_button_code_' + kind).on('pointerdown', () => {\r\n                that.main.networkManager.setNewSecret(that.workspace.id, kind, (secret) => {\r\n                    jQuery('.jo_ds_secret_'+kind).text(secret);\r\n                })\r\n            })\r\n            let $copyButton = jQuery('<button class=\"jo_small_button jo_copy_secret_button jo_active\">Kopieren</button>')\r\n            jQuery('#copySecretTd' + kind).append($copyButton);\r\n            $copyButton.on('pointerdown', () => {\r\n                copyTextToClipboard(jQuery('.jo_ds_secret_'+kind).text());\r\n            })\r\n        })\r\n\r\n        jQuery('#jo_ds_publishedTo>input').on('change', (e) => {$('#jo_upload_db').prop('checked', !((<HTMLInputElement>jQuery('#b0')[0]).checked))});\r\n\r\n    }\r\n\r\n    saveNameAndPublishedTo(){\r\n        let published_to = 0;\r\n        jQuery('#jo_ds_publishedTo').find('input').each( (n, element) => {\r\n            let $element = jQuery(element);\r\n            //@ts-ignore\r\n            if(<HTMLInputElement>element.checked){\r\n                published_to = Number.parseInt(<string>$element.attr('value'));\r\n            }\r\n        })\r\n\r\n        this.main.networkManager.setNameAndPublishedTo(this.workspace.id, \r\n            <string>jQuery('.jo_databasename').val(), published_to, <string>jQuery('.jo_ds_settings_description').val(),\r\n             () => {\r\n                 if($('#jo_upload_db').prop('checked')){\r\n                    new TemplateUploader().uploadCurrentDatabase(this.workspace.id, this.main, null, \"publishDatabaseAsTemplate\");                    \r\n                 }\r\n                 this.showMainWindow(); \r\n                })\r\n    }\r\n\r\n    setValues(){\r\n        jQuery('.jo_databasename').val(this.workspace.name);\r\n        this.main.networkManager.getDatabaseSettings(this.workspace.id, (response) => {\r\n            [\"read\", \"write\", \"ddl\"].forEach(kind => {\r\n                jQuery('.jo_ds_secret_' + kind).text(response.secrets[kind]);\r\n            });\r\n            if(this.main.user.is_admin){\r\n                jQuery('#b3').css('visibility', 'visible');\r\n                jQuery('#lb3').css('visibility', 'visible');\r\n            }\r\n            if(this.main.user.is_schooladmin){\r\n                jQuery('#b2').css('visibility', 'visible');\r\n                jQuery('#lb2').css('visibility', 'visible');\r\n            }\r\n            // jQuery('#jo_ds_publishedTo input').attr('checked', '');\r\n            jQuery('#b'+response.publishedTo).prop('checked', true);\r\n\r\n            jQuery('#jo_upload_db').prop('checked', response.publishedTo != 0);\r\n\r\n            jQuery('.jo_ds_settings_description').val(this.workspace.database.description);\r\n        })\r\n    }\r\n\r\n    showMainWindow() {\r\n        jQuery('#main').css('visibility', 'visible');\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n    }\r\n\r\n\r\n\r\n}","import { WorkspaceData } from \"../communication/Data.js\";\r\nimport { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { DatabaseSettingsDialog } from \"../main/gui/DatabaseSettingsDialog.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { WDatabase } from \"./WDatabase.js\";\r\n\r\nexport class Workspace {\r\n    \r\n    name: string;\r\n    path: string = \"\";\r\n    isFolder: boolean;\r\n    id: number;\r\n    owner_id: number;\r\n\r\n    version: number;\r\n    \r\n    moduleStore: ModuleStore;\r\n    panelElement: AccordionElement;\r\n    currentlyOpenModule: Module;\r\n    saved: boolean = true;\r\n\r\n    compilerMessage: string;\r\n\r\n    databaseId: number;\r\n    database: WDatabase;\r\n\r\n    sql_history: string;\r\n\r\n    permissions: number;\r\n\r\n    constructor(name: string, private main: MainBase, owner_id: number){\r\n        this.name = name;\r\n        this.owner_id = owner_id;\r\n        this.moduleStore = new ModuleStore(main);\r\n        this.sql_history = \"\";\r\n    }\r\n    \r\n    getWorkspaceData(withFiles: boolean): WorkspaceData {\r\n        let wd: WorkspaceData = {\r\n            name: this.name,\r\n            id: this.id,\r\n            owner_id: this.owner_id,\r\n            currentFileId: this.currentlyOpenModule == null ? null : this.currentlyOpenModule.file.id,\r\n            files: [],\r\n            sql_history: this.sql_history,\r\n            path: this.path,\r\n            isFolder: false,  \r\n            permissions: this.permissions,\r\n            database_id: this.databaseId\r\n        }\r\n\r\n        if(withFiles){\r\n            for(let m of this.moduleStore.getModules(false)){\r\n    \r\n                wd.files.push(m.getFileData(this));\r\n    \r\n            }\r\n        }\r\n\r\n        return wd;\r\n    }\r\n\r\n    renderSettingsButton(panelElement: AccordionElement) {\r\n        let $buttonDiv = panelElement?.$htmlFirstLine?.find('.jo_additionalButtonSettings');\r\n        if ($buttonDiv == null) return;\r\n        \r\n        // let myMain: Main = <Main>this.main;\r\n\r\n            let $button = jQuery('<div class=\"jo_settingsButton img_settings jo_button jo_active\" title=\"Datenbank-Einstellungen...\"></div>');\r\n            $buttonDiv.append($button);\r\n            let that = this;\r\n            $button.on('mousedown', (e) => e.stopPropagation());\r\n            $button.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                new DatabaseSettingsDialog(<any>that.main, that);\r\n\r\n            });\r\n\r\n        // } else {\r\n        //     $buttonDiv.find('.jo_startButton').remove();\r\n        // }\r\n    }\r\n\r\n\r\n    static restoreFromData(ws: WorkspaceData, main: Main): Workspace {\r\n\r\n        let w = new Workspace(ws.name, main, ws.owner_id);\r\n        w.id = ws.id;\r\n        w.path = ws.path;\r\n        w.isFolder = ws.isFolder;\r\n        w.owner_id = ws.owner_id;\r\n        w.sql_history = ws.sql_history;\r\n        w.permissions = ws.permissions;\r\n        w.databaseId = ws.database_id;\r\n\r\n        for(let f of ws.files){\r\n\r\n            let m: Module = Module.restoreFromData(f, main);\r\n            w.moduleStore.putModule(m);\r\n\r\n            if(f.id == ws.currentFileId){\r\n                w.currentlyOpenModule = m;\r\n            }\r\n\r\n        }\r\n\r\n        return w;\r\n\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        \r\n        return this.moduleStore.hasErrors();\r\n        \r\n    }\r\n\r\n    getModuleByMonacoModel(model: monaco.editor.ITextModel): Module {\r\n        for(let m of this.moduleStore.getModules(false)){\r\n            if(m.model == model){\r\n                return m;\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    }\r\n}\r\n\r\n","import { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type ButtonToggler = (state: boolean) => void;\r\n\r\nexport type Action = (name: string, buttonToggler?: ButtonToggler, pressed_key?: string) => void;\r\n\r\nexport type ActionEntry = {\r\n    text?: string,\r\n    keys: string[],\r\n    action: Action,\r\n    identifier: string, // name of Action is copied automatically to name of ActionEntry\r\n    active: boolean\r\n}\r\n\r\nexport class ActionManager {\r\n\r\n    actions: { [actionIdentifier: string]: ActionEntry } = { };\r\n\r\n    keyEntries: { [key: string]: ActionEntry[] } = {};\r\n\r\n    buttons: { [actionIdentifier: string]: JQuery<HTMLElement>[] } = {};\r\n\r\n    constructor(private $mainElement: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public init(){\r\n\r\n        let $element:JQuery<any> = this.$mainElement;\r\n        \r\n        if($element == null) $element = jQuery(document);\r\n\r\n        let that = this;\r\n        $element.on(\"keydown\", function (event: JQuery.KeyDownEvent) { \r\n            if(event != null){\r\n                that.executeKeyDownEvent(event); \r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    trigger(actionIdentifier: string) {\r\n        let ae = this.actions[actionIdentifier];\r\n        if(ae != null){\r\n            ae.action(actionIdentifier, null, \"\");\r\n        }\r\n    }\r\n\r\n\r\n    public registerAction(identifier: string, keys: string[], action: Action, text: string = \"\", button?: JQuery<HTMLElement>){\r\n        let ae: ActionEntry = {\r\n            action: action,\r\n            identifier: identifier,\r\n            keys: keys,\r\n            text: text,\r\n            active: true\r\n        };\r\n\r\n        this.actions[identifier] = ae;\r\n\r\n        for(let key of keys){\r\n            if(this.keyEntries[key.toLowerCase()] == null){\r\n                this.keyEntries[key.toLowerCase()] = [];\r\n            }\r\n            this.keyEntries[key.toLowerCase()].push(ae);\r\n        }\r\n\r\n        if(button != null){\r\n            if(this.buttons[identifier] == null){\r\n                this.buttons[identifier] = [];\r\n            }\r\n            this.buttons[identifier].push(button);\r\n\r\n            let t = text;\r\n            if(keys.length > 0){\r\n                t += \" [\" + keys.join(\", \") + \"]\";\r\n            }\r\n\r\n            button.attr(\"title\", t);\r\n\r\n            button.on('mousedown', () => {\r\n                if(ae.active){\r\n                    action(identifier, null, \"mousedown\");\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public isActive(actionIdentifier: string): boolean {\r\n\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae == null) return false;\r\n\r\n        return ae.active;\r\n    \r\n    }\r\n\r\n    public setActive(actionIdentifier: string, active: boolean){\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae != null){\r\n            ae.active = active;\r\n        }\r\n\r\n        let buttons = this.buttons[actionIdentifier];\r\n        if(buttons != null){\r\n            for(let button of buttons){\r\n                if(active){\r\n                    button.addClass('jo_active');\r\n                } else {\r\n                    button.removeClass('jo_active');\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public executeKeyDownEvent(event: JQuery.KeyDownEvent) {\r\n\r\n        if(document.activeElement.tagName.toLowerCase() == \"input\"){\r\n            return;\r\n        }\r\n\r\n        if (event.keyCode <= 18 && event.keyCode >= 16) {\r\n            return; // ctrl, alt, shift\r\n        }\r\n\r\n        let key: string = \"\";\r\n\r\n        if (event.ctrlKey) {\r\n            key += \"ctrl+\";\r\n        }\r\n\r\n        if (event.shiftKey) {\r\n            key += \"shift+\";\r\n        }\r\n\r\n        if (event.altKey) {\r\n            key += \"alt+\";\r\n        }\r\n\r\n        if(event.key != null){\r\n            key += event.key.toLowerCase();\r\n        }\r\n\r\n        let actionEntries = this.keyEntries[key];\r\n\r\n        if(actionEntries != null){\r\n            for(let actionEntry of actionEntries){\r\n                if (actionEntry.active) {\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    actionEntry.action(actionEntry.identifier, null, key);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class ErrorManager {\r\n\r\n    oldDecorations: string[] = [];\r\n    oldErrorDecorations: string[] = [];\r\n    $errorDiv: JQuery<HTMLElement>;\r\n\r\n    $bracket_warning: JQuery<HTMLElement>;\r\n\r\n    minimapColor: {[key: string]:string } = {};\r\n\r\n    lightBulbOnClickFunctionList: {class: string, onClickFunction: () => void, title: string}[] = [];\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>, private $mainDiv: JQuery<HTMLElement>) {\r\n        this.minimapColor[\"error\"] = \"#bc1616\";\r\n        this.minimapColor[\"warning\"] = \"#cca700\";\r\n        this.minimapColor[\"info\"] = \"#75beff\";\r\n\r\n        this.$bracket_warning = $mainDiv.find(\".jo_parenthesis_warning\");\r\n\r\n        this.$bracket_warning.attr('title', 'Klammeralarm!');\r\n        this.$bracket_warning.children().attr('title', 'Klammeralarm!');\r\n\r\n        let that = this;\r\n        $mainDiv.find(\".jo_pw_undo\").on(\"click\", () => {\r\n            let editor = that.main.getMonacoEditor();\r\n            editor.trigger(\".\", \"undo\", {});\r\n        }).attr('title', 'Undo');\r\n    }\r\n\r\n    showParenthesisWarning(error: string){\r\n        if(error != null){\r\n            this.$bracket_warning.css(\"visibility\", \"visible\");\r\n            this.$bracket_warning.find(\".jo_pw_heading\").text(error);\r\n        } else {\r\n            this.$bracket_warning.css(\"visibility\", \"hidden\");\r\n        }\r\n    }\r\n\r\n    showErrors(workspace: Workspace): Map<Module, number> {\r\n\r\n        this.lightBulbOnClickFunctionList = [];\r\n\r\n        let errorCountMap: Map<Module, number> = new Map();\r\n\r\n        this.$errorDiv = this.$bottomDiv.find('.jo_tabs>.jo_errorsTab');\r\n        this.$errorDiv.empty();\r\n\r\n        let hasErrors = false;\r\n\r\n        let ms = workspace.moduleStore;\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        for (let m of ms.getModules(false)) {\r\n            let markers: monaco.editor.IMarkerData[] = [];\r\n            let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n            let $errorList: JQuery<HTMLElement>[] = [];\r\n\r\n            let errors = m.getSortedAndFilteredErrors();\r\n            errorCountMap.set(m, m.getErrorCount());\r\n\r\n            for (let error of errors) {\r\n\r\n                let linesDecorationsClassName: string;\r\n                let borderLeftClass: string;\r\n                let minimapColor: string = this.minimapColor[error.level];\r\n\r\n                switch (error.level) {\r\n                    case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                    case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                    case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n                }\r\n\r\n                if (error.quickFix != null) {\r\n                    let quickFix = error.quickFix;\r\n                    let lightBulbClass = \"lb_\" + Math.trunc(Math.random() * 1000000);\r\n                    linesDecorationsClassName = 'jo_yellowLightBulb ' + borderLeftClass + \" \" + lightBulbClass;\r\n\r\n                    this.lightBulbOnClickFunctionList.push({class: '.' + lightBulbClass, \r\n                    onClickFunction: () => {\r\n\r\n                        let edits = quickFix.editsProvider(m.model.uri);\r\n                        editor.executeEdits(\"\", edits.map((edit) => {\r\n                            let r = edit.edit.range;\r\n                            return {\r\n                                range: new monaco.Range(r.startLineNumber, r.startColumn, r.endLineNumber, r.endColumn),\r\n                                text: edit.edit.text,\r\n                                forceMoveMarkers: true\r\n                            }\r\n                        }\r\n                        ));\r\n\r\n                    },\r\n                    title: quickFix.title\r\n                })\r\n\r\n\r\n                }\r\n\r\n                this.processError(error, m, $errorList);\r\n\r\n                let severity: monaco.MarkerSeverity;\r\n                switch (error.level) {\r\n                    case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                    case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                    case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n                }\r\n\r\n                markers.push({\r\n                    startLineNumber: error.position.line,\r\n                    startColumn: error.position.column,\r\n                    endLineNumber: error.position.line,\r\n                    endColumn: error.position.column + error.position.length,\r\n                    message: error.text,\r\n                    severity: severity,\r\n                    //@ts-ignore\r\n                    relatedInformation: error.quickFix\r\n                });\r\n\r\n                decorations.push({\r\n                    range: {\r\n                        startLineNumber: error.position.line,\r\n                        startColumn: error.position.column,\r\n                        endLineNumber: error.position.line,\r\n                        endColumn: error.position.column + error.position.length\r\n                    },\r\n                    options: {\r\n                        linesDecorationsClassName: linesDecorationsClassName,\r\n                        minimap: {\r\n                            position: monaco.editor.MinimapPosition.Inline,\r\n                            color: minimapColor\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n            }\r\n\r\n            monaco.editor.setModelMarkers(m.model, 'test', markers);\r\n            m.oldErrorDecorations = m.model.deltaDecorations(m.oldErrorDecorations, decorations);\r\n\r\n            // decorations used when user clicks on error in error-list:\r\n            this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, []);\r\n\r\n\r\n            if ($errorList.length > 0 && this.$errorDiv.length > 0) {\r\n                hasErrors = true;\r\n                let $file = jQuery('<div class=\"jo_error-filename\">' + m.file.name + '&nbsp;</div>');\r\n                this.$errorDiv.append($file);\r\n                for (let $error of $errorList) {\r\n                    this.$errorDiv.append($error);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasErrors && this.$errorDiv.length > 0) {\r\n            this.$errorDiv.append(jQuery('<div class=\"jo_noErrorMessage\">Keine Fehler gefunden :-)</div>'));\r\n        }\r\n\r\n        this.registerLightbulbOnClickFunctions();\r\n\r\n        return errorCountMap;\r\n\r\n    }\r\n\r\n    registerLightbulbOnClickFunctions() {\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            for(let locf of that.lightBulbOnClickFunctionList){\r\n                    jQuery(locf.class).off('click', locf.onClickFunction);\r\n                    jQuery(locf.class).on('click', locf.onClickFunction).attr('title', locf.title);\r\n            }            \r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    processError(error: Error, m: Module, $errorDivs: JQuery<HTMLElement>[]) {\r\n\r\n        let $div = jQuery('<div class=\"jo_error-line\"></div>');\r\n        let $lineColumn = jQuery('<span class=\"jo_error-position\">[Z&nbsp;<span class=\"jo_linecolumn\">' + error.position.line + '</span>' +\r\n            ' Sp&nbsp;<span class=\"jo_linecolumn\">' + error.position.column + '</span>]</span>:&nbsp;');\r\n        let category = \"\";\r\n        switch (error.level) {\r\n            case \"error\": break;\r\n            case \"warning\": category = '<span class=\"jo_warning_category\">Warnung: </span>'; break;\r\n            case \"info\": category = '<span class=\"jo_info_category\">Info: </span>'; break;\r\n        }\r\n        let $message = jQuery('<div class=\"jo_error-text\">' + category + error.text + \"</div>\");\r\n\r\n        $div.append($lineColumn).append($message);\r\n\r\n        let that = this;\r\n        $div.on(\"mousedown\", (ev) => {\r\n            this.$errorDiv.find('.jo_error-line').removeClass('jo_active');\r\n            $div.addClass('jo_active');\r\n            that.showError(m, error);\r\n        });\r\n\r\n        $errorDivs.push($div);\r\n    }\r\n\r\n    showError(m: Module, error: Error) {\r\n\r\n        if (this.main instanceof Main) {\r\n            if (m != this.main.projectExplorer.getCurrentlyEditedModule()) {\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n        let position = error.position;\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n\r\n        let className: string = \"\";\r\n        switch (error.level) {\r\n            case \"error\": className = \"jo_revealError\"; break;\r\n            case \"warning\": className = \"jo_revealWarning\"; break;\r\n            case \"info\": className = \"jo_revealInfo\"; break;\r\n        }\r\n\r\n\r\n        this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, [\r\n            {\r\n                range: range,\r\n                options: { className: className }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n}","import { makeDiv } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { stringToDate, dateToStringWithoutTime } from \"../../tools/StringTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\ntype ModuleWithWorkspace = {\r\n    module: Module,\r\n    workspace: Workspace\r\n}\r\n\r\ntype DayWithModules = {\r\n    date: Date;\r\n    day: string;\r\n    modules: ModuleWithWorkspace[];\r\n}\r\n\r\nexport class HomeworkManager {\r\n\r\n    $homeworkTab: JQuery<HTMLElement>;\r\n    $homeworkTabLeft: JQuery<HTMLElement>;\r\n    $homeworkTabRight: JQuery<HTMLElement>;\r\n\r\n    $showRevisionButton: JQuery<HTMLElement>;\r\n    showRevisionActive: boolean = false;\r\n\r\n    diffEditor: monaco.editor.IStandaloneDiffEditor;\r\n\r\n    constructor(private main: Main, public $bottomDiv: JQuery<HTMLElement>) {\r\n        this.$homeworkTab = $bottomDiv.find('.jo_tabs>.jo_homeworkTab');\r\n    }\r\n\r\n    initGUI() {\r\n        let that = this;\r\n        this.$homeworkTab.append(this.$homeworkTabLeft = makeDiv(\"\", \"jo_homeworkTabLeft jo_scrollable\"));\r\n        this.$homeworkTab.append(this.$homeworkTabRight = makeDiv(\"\", \"jo_homeworkTabRight jo_scrollable\"));\r\n        jQuery('#view-mode').prepend(this.$showRevisionButton = makeDiv(\"\", \"jo_button jo_active jo_homeworkRevisionButton\", \"\"));\r\n        this.$showRevisionButton.on(\"click\", () => {\r\n            if (this.showRevisionActive) {\r\n                this.hideRevision();\r\n            } else {\r\n                this.showRevision(that.main.getCurrentlyEditedModule());\r\n            }\r\n        });\r\n        this.$showRevisionButton.hide();\r\n        jQuery('#diffEditor').hide();\r\n    }\r\n\r\n    showHomeWorkRevisionButton() {\r\n        this.$showRevisionButton.text(this.showRevisionActive ? \"Normalansicht\" : \"Korrekturen zeigen\");\r\n        this.$showRevisionButton.show();\r\n    }\r\n\r\n    hideHomeworkRevisionButton() {\r\n        this.$showRevisionButton.hide();\r\n    }\r\n\r\n    showRevision(module: Module) {\r\n\r\n        module.file.text = module.getProgramTextFromMonacoModel();\r\n        let file = module.file;\r\n\r\n        jQuery('#editor').hide();\r\n        jQuery('#diffEditor').show();\r\n\r\n        var originalModel = monaco.editor.createModel(file.text_before_revision, \"myJava\");\r\n        var modifiedModel = monaco.editor.createModel(file.text, \"myJava\");\r\n\r\n        this.diffEditor = monaco.editor.createDiffEditor(document.getElementById(\"diffEditor\"), {\r\n            // You can optionally disable the resizing\r\n            enableSplitViewResizing: true,\r\n            originalEditable: false,\r\n            readOnly: true,\r\n            // Render the diff inline\r\n            renderSideBySide: true\r\n        });\r\n\r\n        this.diffEditor.setModel({\r\n            original: originalModel,\r\n            modified: modifiedModel\r\n        });\r\n\r\n        this.showRevisionActive = true;\r\n        this.showHomeWorkRevisionButton();\r\n    }\r\n\r\n    hideRevision() {\r\n        if (this.showRevisionActive) {\r\n\r\n            jQuery('#diffEditor').hide();\r\n            this.diffEditor.dispose();\r\n            this.diffEditor = null;\r\n            jQuery('#editor').show();\r\n\r\n            this.showRevisionActive = false;\r\n            this.showHomeWorkRevisionButton();\r\n        }\r\n    }\r\n\r\n\r\n    attachToWorkspaces(workspaces: Workspace[]) {\r\n\r\n        let daysWithModules: DayWithModules[] = [];\r\n        let map: { [day: string]: DayWithModules } = {};\r\n\r\n        workspaces.forEach(ws => {\r\n            ws.moduleStore.getModules(false).forEach(module => {\r\n\r\n                let dateString = module.file.submitted_date;\r\n                if (dateString != null) {\r\n\r\n                    let date: Date = stringToDate(dateString);\r\n                    let dateWithoutTime = dateToStringWithoutTime(date);\r\n                    let dwm: DayWithModules = map[dateWithoutTime];\r\n                    if (dwm == null) {\r\n                        dwm = {\r\n                            date: date,\r\n                            day: dateWithoutTime,\r\n                            modules: []\r\n                        };\r\n                        map[dateWithoutTime] = dwm;\r\n                        daysWithModules.push(dwm);\r\n                    }\r\n                    dwm.modules.push({module: module, workspace: ws});\r\n\r\n                }\r\n\r\n            });\r\n\r\n        });\r\n\r\n        this.$homeworkTabLeft.empty();\r\n        this.$homeworkTabRight.empty();\r\n\r\n        let that = this;\r\n\r\n        this.$homeworkTabLeft.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgabetage:\"));\r\n\r\n\r\n        daysWithModules.sort((a, b) => {\r\n            if (a.date.getFullYear() != b.date.getFullYear()) return -Math.sign(a.date.getFullYear() - b.date.getFullYear());\r\n            if (a.date.getMonth() != b.date.getMonth()) return -Math.sign(a.date.getMonth() - b.date.getMonth());\r\n            if (a.date.getDate() != b.date.getDate()) return -Math.sign(a.date.getDate() - b.date.getDate());\r\n            return 0;\r\n        });\r\n\r\n        let first: boolean = true;\r\n\r\n        daysWithModules.forEach(dwm => {\r\n\r\n            dwm.modules.sort((m1, m2) => m1.module.file.name.localeCompare(m2.module.file.name));\r\n\r\n            let $div = makeDiv(\"\", \"jo_homeworkDate\", dwm.day);\r\n            this.$homeworkTabLeft.append($div);\r\n\r\n            $div.on(\"click\", (e) => {\r\n                this.$homeworkTabLeft.find('.jo_homeworkDate').removeClass('active');\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            });\r\n\r\n            if (first) {\r\n                first = false;\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    select(dwm: DayWithModules) {\r\n        this.$homeworkTabRight.empty();\r\n        this.$homeworkTabRight.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgegebene Dateien:\"));\r\n        let that = this;\r\n        dwm.modules.forEach(moduleWithWorkspace => {\r\n            let $div = jQuery(`<div class=\"jo_homeworkEntry\">Workspace <span class=\"jo_homework-workspace\">\r\n                    ${moduleWithWorkspace.workspace.name}</span>, Datei <span class=\"jo_homework-file\">\r\n                    ${moduleWithWorkspace.module.file.name}</span> (Abgabe: ${moduleWithWorkspace.module.file.submitted_date} )</div>`);\r\n            that.$homeworkTabRight.append($div);\r\n            $div.on(\"click\", () => {\r\n                    that.main.projectExplorer.setWorkspaceActive(moduleWithWorkspace.workspace);\r\n                    that.main.projectExplorer.setModuleActive(moduleWithWorkspace.module);\r\n                    that.main.projectExplorer.fileListPanel.select(moduleWithWorkspace.module, false);\r\n            });\r\n        })\r\n        \r\n    }\r\n\r\n\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { ErrorManager } from \"./ErrorManager.js\";\r\nimport { HomeworkManager } from \"./HomeworkManager.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class BottomDiv {\r\n\r\n    errorManager: ErrorManager;\r\n    homeworkManager: HomeworkManager;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>, public $mainDiv: JQuery<HTMLElement>) {\r\n\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_homeworkTabheading').length > 0) {\r\n            this.homeworkManager = new HomeworkManager(<Main>main, $bottomDiv);\r\n        }\r\n\r\n        this.errorManager = new ErrorManager(main, $bottomDiv, $mainDiv);\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$bottomDiv);\r\n        if (this.homeworkManager != null) this.homeworkManager.initGUI();\r\n\r\n        this.$bottomDiv.find('.jo_tabs').children().first().trigger(\"click\");\r\n\r\n    }\r\n\r\n    showHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'visible');\r\n        jQuery('.jo_homeworkTabheading').trigger(\"mousedown\");\r\n\r\n    }\r\n\r\n    hideHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'hidden');\r\n        jQuery('.jo_tabheadings').children().first().trigger(\"mousedown\");\r\n\r\n    }\r\n\r\n\r\n}","import { Editor } from \"./Editor.js\";\r\nimport { CompletionHint, Module } from \"../../compiler/parser/Module.js\";\r\nimport { Symbol, SymbolTable } from \"../../compiler/parser/SymbolTable.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { Column, Table } from \"../../compiler/parser/SQLTable.js\";\r\n\r\nexport class MyCompletionItemProvider implements monaco.languages.CompletionItemProvider {\r\n\r\n    isConsole: boolean;\r\n\r\n    public triggerCharacters: string[] = ['.', 'abcdefghijklmnopqrstuvwxyzäöüß_ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜ', ' ', ',', '('];\r\n\r\n    public keywordCompletionItems: Map<string, monaco.languages.CompletionItem> = new Map();\r\n\r\n    constructor(private main: MainBase) {\r\n        this.setupKeywordCompletionItems();\r\n    }\r\n\r\n    first: boolean = true;\r\n    provideCompletionItems(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, \r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n\r\n\r\n        let module: Module =\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null || module.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n            let that = this;\r\n\r\n            let wfc = function waitForCompiler(){\r\n                if(module.file.dirty){\r\n                    setTimeout(() => {\r\n                        wfc();\r\n                    }, 100);\r\n                } else {\r\n                    resolve(that.provideCompletionItemsIntern(model, position, context, token));\r\n                }\r\n            }\r\n        \r\n            wfc();\r\n\r\n        })\r\n\r\n        // Promise.resolve({\r\n        //     suggestions: completionItems\r\n        // });\r\n    }\r\n\r\n    provideCompletionItemsIntern(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, \r\n        token: monaco.CancellationToken): monaco.languages.CompletionList {\r\n\r\n        setTimeout(() => {\r\n            //@ts-ignore\r\n            let sw = this.main.getMonacoEditor()._contentWidgets[\"editor.widget.suggestWidget\"].widget;\r\n            if (this.first) {\r\n                sw.toggleDetails();\r\n                this.first = false;\r\n            }\r\n        }, 500);\r\n\r\n        let module: Module =\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null || module.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (this.isStringLiteral(module, position)) return null;\r\n\r\n        let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let symbolTable = module.mainSymbolTable.findTableAtPosition(position.lineNumber, position.column);\r\n        let completionHint: CompletionHint = module.getCompletionHint(position.lineNumber, position.column);\r\n        if (completionHint == null) {\r\n            completionHint = {\r\n                fromColumn: 0,\r\n                toColumn: 0,\r\n                fromLine: 0,\r\n                toLine: 0,\r\n                hintColumns: false,\r\n                hintTables: false,\r\n                hintKeywords: []\r\n            }\r\n        }\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n        this.addKeywordCompletionItems(completionHint, completionItems);\r\n\r\n        let dotMatch = textUntilPosition.match(/.*\\s([\\wöäüÖÄÜß]*)(\\.)([\\wöäüÖÄÜß]*)$/);\r\n\r\n        let ibMatch = textAfterPosition.match(/^([\\wöäüÖÄÜß]*)/);\r\n        let identifierAndBracketAfterCursor = \"\";\r\n        if (ibMatch != null && ibMatch.length > 0) {\r\n            identifierAndBracketAfterCursor = ibMatch[0];\r\n        }\r\n\r\n        if (dotMatch == null) {\r\n            this.addIdentifierCompletionItems(completionHint, symbolTable, completionItems);\r\n        } else {\r\n            this.addDotCompletionItems(position, dotMatch, identifierAndBracketAfterCursor, symbolTable, completionItems);\r\n        }\r\n\r\n        let word = model.getWordUntilPosition(position);\r\n        let replaceWordRange = { startColumn: word.startColumn, startLineNumber: position.lineNumber, endColumn: word.endColumn, endLineNumber: position.lineNumber };\r\n        let insertAfterCursorRange = { startColumn: position.column, startLineNumber: position.lineNumber, endColumn: position.column, endLineNumber: position.lineNumber }\r\n\r\n        for (let item of completionItems) {\r\n            if (item.range == null) {\r\n                if (item.insertText.startsWith(\",\")) {\r\n                    item.range = insertAfterCursorRange;\r\n                } else {\r\n                    item.range = replaceWordRange;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (completionHint.dontHint != null) {\r\n            completionItems = completionItems.filter(item => completionHint.dontHint.indexOf(item.insertText) < 0);\r\n        }\r\n\r\n        return {\r\n            suggestions: completionItems\r\n        };\r\n    }\r\n\r\n\r\n    addDotCompletionItems(position: monaco.Position, dotMatch: RegExpMatchArray, identifierAndBracketAfterCursor: string,\r\n        symbolTable: SymbolTable, completionItems: monaco.languages.CompletionItem[]) {\r\n        let textAfterDot = dotMatch[3];\r\n        let textBeforeDot = dotMatch[1];\r\n        let dotColumn = position.column - textAfterDot.length - 1;\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - textAfterDot.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n        for (let symbol of symbolTable.symbolList) {\r\n            if (symbol.table != null) {\r\n                let identifier: string = symbol.table.identifier;\r\n                if (symbol.tableAlias != null) identifier = symbol.tableAlias;\r\n                if (identifier.toLowerCase() == textBeforeDot) {\r\n                    for (let column of symbol.table.columns) {\r\n                        completionItems.push({\r\n                            label: column.identifier,\r\n                            detail: \"Spalte \" + column.identifier + \" der Tabelle \" + symbol.table.identifier,\r\n                            filterText: column.identifier,\r\n                            insertText: column.identifier,\r\n                            insertTextRules: monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                            kind: monaco.languages.CompletionItemKind.Field,\r\n                            range: rangeToReplace\r\n                        })\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    addIdentifierCompletionItems(completionHint: CompletionHint, symbolTable: SymbolTable, completionItems: monaco.languages.CompletionItem[]) {\r\n        let praefix: string = completionHint.praefix == null ? \"\" : completionHint.praefix;\r\n        let suffix: string = completionHint.suffix == null ? \"\" : completionHint.suffix;\r\n\r\n        if (!(completionHint.hintTables || completionHint.hintColumns)) {\r\n            return;\r\n        }\r\n\r\n        let tableIdentifiers: { [identifier: string]: boolean } = {};\r\n\r\n        let st: SymbolTable = symbolTable;\r\n        let columns: { [identifier: string]: Symbol[] } = {};\r\n        let columnIdentifiers: string[] = [];\r\n\r\n        while (st != null) {\r\n            for (let symbol of st.symbolList) {\r\n                if (symbol.column != null) {\r\n                    let columnIdentifier = symbol.column.identifier;\r\n                    if (columns[columnIdentifier] == null) {\r\n                        columns[columnIdentifier] = [symbol];\r\n                        columnIdentifiers.push(columnIdentifier);\r\n                    } else {\r\n                        columns[columnIdentifier].push(symbol);\r\n                    }\r\n                } else if (symbol.table != null && completionHint.hintTables) {\r\n                    if (!tableIdentifiers[symbol.identifier]) {\r\n                        let insertText = praefix + symbol.identifier + suffix;\r\n                        completionItems.push({\r\n                            label: symbol.identifier,\r\n                            detail: \"Tabelle \" + symbol.table.identifier,\r\n                            filterText: symbol.identifier,\r\n                            insertText: insertText,\r\n                            insertTextRules: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                            kind: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemKind.Snippet : monaco.languages.CompletionItemKind.Class,\r\n                            range: undefined,\r\n                            sortText: \"aa\" + symbol.identifier\r\n                        });\r\n                        tableIdentifiers[symbol.identifier] = true;\r\n                    }\r\n                }\r\n            }\r\n            st = st.parent;\r\n        }\r\n\r\n        if (completionHint.hintColumns) {\r\n            for (let ci of columnIdentifiers) {\r\n                let columList = columns[ci];\r\n                let withTable = columList.length > 1 && completionHint.hintColumnsOfTable == null;\r\n                for (let cs of columList) {\r\n                    let text = cs.identifier;\r\n                    if (withTable && cs.identifier == cs.column.identifier.toLowerCase()) {\r\n                        text = (cs.tableAlias == null ? cs.column.table.identifier : cs.tableAlias) + \".\" + text;\r\n                    }\r\n                    if (completionHint.hintColumnsOfTable == null || cs.column?.table?.identifier == completionHint.hintColumnsOfTable) {\r\n                        let insertText = praefix + text + suffix;\r\n                        completionItems.push({\r\n                            label: text,\r\n                            detail: \"Die Spalte \" + cs.column.identifier + \" der Tabelle \" + cs.column.table.identifier,\r\n                            filterText: text,\r\n                            insertText: insertText,\r\n                            insertTextRules: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                            kind: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemKind.Snippet : monaco.languages.CompletionItemKind.Field,\r\n                            range: undefined\r\n                        })\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    keywordToSnippetMap: { [keyword: string]: string } = {\r\n        \"(\": \"(\\n\\t$0\\n)\",\r\n        \"varchar\": \"varchar($1) $0\",\r\n        \"decimal\": \"decimal($1, $2) $0\"\r\n    }\r\n\r\n    addKeywordCompletionItems(completionHint: CompletionHint, completionItems: monaco.languages.CompletionItem[]) {\r\n        let praefix: string = completionHint.praefix == null ? \"\" : completionHint.praefix;\r\n        let suffix: string = completionHint.suffix == null ? \"\" : completionHint.suffix;\r\n\r\n\r\n        for (let text of completionHint.hintKeywords) {\r\n            let insertText = praefix + text + suffix;\r\n            let snippet = this.keywordToSnippetMap[text];\r\n\r\n            let ci = this.keywordCompletionItems.get(text);\r\n            if (ci != null) {\r\n                completionItems.push(ci);\r\n            } else if (snippet != null) {\r\n                let label = snippet.replace(\"$0\", \"\").replace(\"$1\", \"\").replace(\"$2\", \"\").replace(/ /g, \"\").replace(/\\n/g, \"\").replace(/\\t/g, \"\");\r\n                completionItems.push({\r\n                    label: label,\r\n                    detail: \"\",\r\n                    filterText: text,\r\n                    insertText: snippet,\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                })\r\n            } else {\r\n                completionItems.push({\r\n                    label: text,\r\n                    detail: \"\",\r\n                    filterText: text,\r\n                    insertText: text,\r\n                    insertTextRules: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                    kind: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemKind.Snippet : monaco.languages.CompletionItemKind.Keyword,\r\n                    range: undefined,\r\n                    sortText: text == \"from\" ? \"*\" : undefined\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    isStringLiteral(module: Module, position: monaco.Position) {\r\n\r\n        let tokenList = module.tokenList;\r\n        if (tokenList == null || tokenList.length == 0) return false;\r\n\r\n        let posMin = 0;\r\n        let posMax = tokenList.length - 1;\r\n        let pos: number;\r\n\r\n        let watchDog = 1000;\r\n\r\n        while (true) {\r\n            let posOld = pos;\r\n            pos = Math.round((posMax + posMin) / 2);\r\n\r\n            if (posOld == pos) return false;\r\n\r\n            watchDog--;\r\n            if (watchDog == 0) return false;\r\n\r\n            let t = tokenList[pos];\r\n            let p = t.position;\r\n\r\n            if (p.line < position.lineNumber || p.line == position.lineNumber && p.column + p.length < position.column) {\r\n                posMin = pos;\r\n                continue;\r\n            }\r\n\r\n            if (p.line > position.lineNumber || p.line == position.lineNumber && p.column > position.column) {\r\n                posMax = pos;\r\n                continue;\r\n            }\r\n\r\n            return t.tt == TokenType.stringConstant;\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    setupKeywordCompletionItems() {\r\n        this.keywordCompletionItems.set(\"delete from\",\r\n            {\r\n                label: \"delete from <Tabelle> where <Bedingung>\",\r\n                detail: \"Anweisung zum Löschen von Datensätzen\",\r\n                filterText: `delete from`,\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `delete from `,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"drop table\",\r\n            {\r\n                label: \"drop table <Tabelle>\",\r\n                detail: \"Anweisung zum Löschen einer Tabelle\",\r\n                filterText: 'drop table',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `drop table `,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"alter\",\r\n            {\r\n                label: \"alter table <Tabelle> <rename to, rename column, add column, drop column>\",\r\n                detail: \"Anweisung zum Ändern des Schemas (alter table <Tabelle> <rename to, rename column, add column, drop column>)\",\r\n                filterText: 'alter',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `alter table `,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"select\",\r\n            {\r\n                label: \"select <Spalten> from <Tabellen> where <Bedingung>\",\r\n                detail: \"Select-Anweisung\",\r\n                filterText: 'select',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `select * from $1\\nwhere $0\\n`,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"create table\",\r\n            {\r\n                label: \"create table <Tabellenbezeichner> (<Spaltendefinitionen>)\",\r\n                detail: \"Create table-Anweisung (Erstellt eine neue Tabelle)\",\r\n                filterText: 'create',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `create table $1 (\\n\\t$0\\n);`,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        // this.keywordCompletionItems.set(\"from\",\r\n        //     {\r\n        //         label: \"from <Tabellen> where <Bedingung>\",\r\n        //         detail: \"from-Teil der select-Anweisung\",\r\n        //         filterText: 'from',\r\n        //         // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n        //         insertText: `from $1\\nwhere $0\\n`,\r\n        //         command: {\r\n        //             id: \"editor.action.triggerSuggest\",\r\n        //             title: '123',\r\n        //             arguments: []\r\n        //         },\r\n        //         insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n        //         kind: monaco.languages.CompletionItemKind.Snippet,\r\n        //         range: undefined\r\n        //     });\r\n\r\n    }\r\n\r\n\r\n}","import { Module, MethodCallPosition } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\n\r\n\r\nexport class MySignatureHelpProvider implements monaco.languages.SignatureHelpProvider {\r\n\r\n    signatureHelpTriggerCharacters?: readonly string[] = ['(', ',', ';', '<', '>', '=']; // semicolon, <, >, = for for-loop, if, while, ...\r\n    signatureHelpRetriggerCharacters?: readonly string[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    provideSignatureHelp(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let that = this;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            setTimeout(() => {\r\n\r\n                this.main.compileIfDirty();\r\n\r\n                resolve(that.provideSignatureHelpLater(model, position, token, context));\r\n\r\n            }, 300);\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    provideSignatureHelpLater(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model != this.main.getMonacoEditor().getModel());\r\n\r\n        let module: Module = \r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        // let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        // let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let methodCallPositions = module.methodCallPositions[position.lineNumber];\r\n\r\n        if (methodCallPositions == null) return null;\r\n\r\n        let methodCallPosition: MethodCallPosition = null;\r\n        let rightMostPosition: number = -1;\r\n\r\n        for (let i = methodCallPositions.length - 1; i >= 0; i--) {\r\n            let mcp = methodCallPositions[i];\r\n            if (mcp.identifierPosition.column + mcp.identifierPosition.length < position.column\r\n                && mcp.identifierPosition.column > rightMostPosition) {\r\n                if (mcp.rightBracketPosition == null ||\r\n                    (position.lineNumber <= mcp.rightBracketPosition.line && position.column <= mcp.rightBracketPosition.column)\r\n                    || (position.lineNumber < mcp.rightBracketPosition.line)) {\r\n                    methodCallPosition = mcp;\r\n                    rightMostPosition = mcp.identifierPosition.column;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (methodCallPosition == null) return null;\r\n\r\n        return this.getSignatureHelp(methodCallPosition, position);\r\n\r\n\r\n\r\n    }\r\n\r\n    getSignatureHelp(methodCallPosition: MethodCallPosition,\r\n        position: monaco.Position): monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let parameterIndex: number = 0;\r\n\r\n        for (let cp of methodCallPosition.commaPositions) {\r\n            if (cp.line < position.lineNumber || (cp.line == position.lineNumber && cp.column < position.column)) {\r\n                parameterIndex++;\r\n            }\r\n        }\r\n\r\n        let signatureInformationList: monaco.languages.SignatureInformation[] = [];\r\n\r\n        return Promise.resolve({\r\n            value: {\r\n                activeParameter: parameterIndex,\r\n                activeSignature: 0,\r\n                signatures: signatureInformationList\r\n            },\r\n            dispose: () => { }\r\n        });\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\n\r\n\r\n\r\nexport class MyHoverProvider {\r\n\r\n    private static keywordDescriptions: { [keyword: string]: string } = {\r\n        \"print\": \"Die Anweisung ```print``` gibt eine Zeichenkette aus.\",\r\n        \"new\": \"Das Schlüsselwort ```new``` bewirkt die Instanzierung (\\\"Erschaffung\\\") eines neuen Objektes einer Klasse.\",\r\n        \"println\": \"Die Anweisung ```println``` gibt eine Zeichenkette gefolgt von einem Zeilenumbruch aus.\",\r\n        \"while\": \"```\\nwhile (Bedingung) {Anweisungen}\\n```  \\nbewirkt die Wiederholung der Anweisungen solange ```Bedingung == true``` ist.\",\r\n        \"for\": \"```\\nfor(Startanweisung;Solange-Bedingung;Nach_jeder_Wiederholung){Anweisungen}\\n```  \\n\"\r\n            + \"führt zunächst die Startanweisung aus und wiederholt dann die Anweisungen solange ```Bedingung == true``` ist. Am Ende jeder wiederholung wird Nach_jeder_Wiederholung ausgeführt.\",\r\n        \"if\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.  \\nDer ```else```-Teil kann auch weggelassen werden.\",\r\n        \"else\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.\",\r\n        \"switch\": \"```\\nswitch(Selektor){ case Wert_1: Anweisungen_1; break; case Wert_2: Anweisungen_2; break; default: Default-Anweisungen } \\n```  \\nwertet den Selektor-Term aus und führt abhängig vom Termwert Anweisungen_1, Anweisungen_2, ... aus. Entspricht der Termwert keinem der Werte Wert_1, Wert_2, ..., so werden die Default-Anweisungen ausgeführt.\",\r\n        \"%\": \"```\\na % b\\n```  \\n (sprich: 'a modulo b') berechnet den **Rest** der ganzzahligen Division a/b.\",\r\n        \"==\": \"```\\na == b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` gleich sind.  \\nSind a und b **Objekte**, so ergibt ```a == b``` nur dann ```true```, wenn ```a``` und ```b``` auf das **identische** Objekt zeigen.  \\n```==``` nennt man **Vergleichsoperator**.\",\r\n        \"<=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` kleiner oder gleich dem Wert von ```b``` ist.\",\r\n        \">=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` größer oder gleich dem Wert von ```b``` ist.\",\r\n        \"!=\": \"```\\na != b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` **un**gleich sind.  \\nSind ```a``` und ```b``` **Objekte**, so ergibt ```a != b``` dann ```true```, wenn ```a``` und ```b``` **nicht** auf das **identische** Objekt zeigen.  \\n```!=``` nennt man **Ungleich-Operator**.\",\r\n        \"+=\": \"```\\na += b\\n(Kurzschreibweise für a = a + b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erhöht** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"-=\": \"```\\na -= b\\n(Kurzschreibweise für a = a - b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erniedrigt** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"*=\": \"```\\na *= b\\n(Kurzschreibweise für a = a * b)\\n```  \\nbewirkt, dass der Wert von ```a``` mit dem Wert von ```b``` **multipliziert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"/=\": \"```\\na /= b\\n(Kurzschreibweise für a = a / b)\\n```  \\nbewirkt, dass der Wert von ```a``` durch den Wert von ```b``` **dividiert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"++\": \"```\\na++\\n(Kurzschreibweise für a = a + 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins erhöht wird.\",\r\n        \"--\": \"```\\na--\\n(Kurzschreibweise für a = a - 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins eniedrigt wird.\",\r\n        \"=\": \"```\\na = Term\\n```  \\nberechnet den Wert des Terms und weist ihn der Variablen ```a``` zu.  \\n**Vorsicht:**  \\nVerwechsle ```=```(**Zuweisungsoperator**) nicht mit ```==```(**Vergleichsoperator**)!\",\r\n        \"!\": \"```\\n!a\\n```  \\nergibt genau dann ```true```, wenn ```a``` ```false``` ergibt.  \\n```!``` spricht man '**nicht**'.\",\r\n        \"public\": \"```\\npublic\\n```  \\nAttribute und Methoden, die als ```public``` deklariert werden, sind überall (auch außerhalb der Klasse) sichtbar.\",\r\n        \"private\": \"```\\nprivate\\n```  \\nAttribute und Methoden, die als ```private``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse sichtbar.\",\r\n        \"protected\": \"```\\nprotected\\n```  \\nAttribute und Methoden, die als ```protected``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse oder innerhalb von Methoden von Kindklassen sichtbar.\",\r\n        \"return\": \"```\\nreturn Term\\n```  \\nbewirkt, dass die Methode verlassen wird und der Wert des Terms an die aufrufende Stelle zurückgegeben wird.\",\r\n        \"break\": \"```\\nbreak;\\n```  \\ninnerhalb einer Schleife bewirkt, dass die Schleife sofort verlassen und mit den Anweisungen nach der Schleife fortgefahren wird.  \\n\"+\r\n        \"```break``` innerhalb einer ```switch```-Anweisung bewirkt, dass der Block der ```switch```-Anweisung verlassen wird.\",\r\n        \"class\": \"```\\nclass\\n```  \\nMit dem Schlüsselwort ```class``` werden Klassen definiert.\",\r\n        \"extends\": \"```\\nextends\\n```  \\n```class A extends B { ... }``` bedeutet, dass die Klasse A Unterklasse der Klasse B ist.\",\r\n        \"implements\": \"```\\nimplements\\n```  \\n```class A implements B { ... }``` bedeutet, dass die Klasse A das Interface B implementiert, d.h., dass sie alle Methoden besitzen muss, die in B definiert sind.\",\r\n        \"this\": \"```\\nthis\\n```  \\nInnerhalb einer Methodendefinition bezeichnet das Schlüsselwor ```this``` immer dasjenige Objekt, für das die Methode gerade ausgeführt wird.\",\r\n\r\n    }\r\n\r\n    constructor(private editor: Editor) {\r\n\r\n    }\r\n\r\n    provideHover(model: monaco.editor.ITextModel, position: monaco.Position, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Hover> {\r\n\r\n        let selection: monaco.Selection = this.editor.editor.getSelection();\r\n        \r\n        // if cursor is inside current selection then don't show hover, because editor.onDidChangeCursorPosition evaluates selected Text \r\n        // (see class Editor).\r\n        if(selection != null){\r\n            if(selection.startLineNumber != selection.endLineNumber || selection.startColumn != selection.endColumn){\r\n                if(\r\n                    (selection.startLineNumber < position.lineNumber || selection.startLineNumber == position.lineNumber && selection.startColumn <= position.column) && \r\n                    (selection.endLineNumber > position.lineNumber || selection.endLineNumber == position.lineNumber && selection.endColumn >= position.column) \r\n                ){\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        let module: Module = this.editor.main.getCurrentWorkspace()?.getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        for(let errorList of module.errors){\r\n            for(let error of errorList){\r\n                if(error.position.line == position.lineNumber && \r\n                    error.position.column <= position.column && \r\n                    error.position.column + error.position.length >= position.column){\r\n                        return null; // Show error-tooltip and don't show hover-tooltip\r\n                    }\r\n            }\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let declarationAsString = \"\";\r\n\r\n        if (element != null) {\r\n        } else {\r\n            let word = this.getWordUnderCursor(model, position);\r\n            let desc = MyHoverProvider.keywordDescriptions[word];\r\n            if (desc != null) {\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: desc }],\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getWordUnderCursor(model: monaco.editor.ITextModel, position: monaco.Position)\r\n         : string {\r\n        \r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let word = \"\";\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierOrArrayDescriptor(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        if (end - begin > 1) {\r\n            word = text.substring(begin, end);\r\n        } else {\r\n            end = pos;\r\n            while (end < text.length && this.isInsideOperator(text.charAt(end))) {\r\n                end++;\r\n            }\r\n    \r\n            begin = pos;\r\n            while (begin > 0 && this.isInsideOperator(text.charAt(begin - 1))) {\r\n                begin--;\r\n            }\r\n    \r\n            if (end - begin > 0) {\r\n                word = text.substring(begin, end);\r\n            }\r\n        }\r\n\r\n        return word;\r\n\r\n    }\r\n\r\n    widenDeclaration(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        identifier: string): string {\r\n\r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierChain(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        let lenght: number = identifier?.length == null ? 1 : identifier.length;\r\n\r\n        if (end - begin > length) {\r\n            return text.substring(begin, end);\r\n        }\r\n\r\n        return identifier;\r\n    }\r\n\r\n    isInsideIdentifierChain(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß_\\[\\]\\.]/i);\r\n\r\n    }\r\n\r\n    isInsideOperator(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[!%<>=\\+\\-\\*\\/]/i);\r\n\r\n    }\r\n\r\n    isInsideIdentifierOrArrayDescriptor(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß\\[\\]]/i);\r\n\r\n    }\r\n\r\n\r\n}","import { QuickFix } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyCodeActionProvider implements monaco.languages.CodeActionProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideCodeActions(model: monaco.editor.ITextModel, range: monaco.Range, context: monaco.languages.CodeActionContext, token: monaco.CancellationToken): monaco.languages.CodeActionList | Promise<monaco.languages.CodeActionList> {\r\n        const actions = context.markers.map(error => {\r\n            let quickFix: QuickFix = <any>error.relatedInformation;\r\n            if (quickFix == null) return null;\r\n\r\n            let codeAction: monaco.languages.CodeAction = {\r\n                title: quickFix.title,\r\n                diagnostics: [error],\r\n                kind: \"quickfix\",\r\n                edit: {\r\n                    edits: quickFix.editsProvider(model.uri)\r\n                },\r\n                isPreferred: true\r\n            };\r\n            return codeAction;\r\n        });\r\n        return {\r\n            actions: actions,\r\n            dispose: () => { }\r\n        }\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Editor } from \"./Editor.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyReferenceProvider implements monaco.languages.ReferenceProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideReferences(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.ReferenceContext, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Location[]> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) return null;\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let referencePositions: monaco.languages.Location[] = [];\r\n\r\n        usagePositions.forEach((upInCurrentModule, module) => {\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    referencePositions.push(\r\n                        {\r\n                            uri: module.uri,\r\n                            range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length }\r\n                        });\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        return referencePositions;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import { Main } from \"../Main.js\";\r\n\r\nexport type HelperDirection = \"top\" | \"bottom\" | \"left\" | \"right\";\r\n\r\nexport class Helper {\r\n\r\n    public static openHelper(text: string, targetElement: JQuery<HTMLElement>, direction: HelperDirection) {\r\n\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.removeClass(['jo_arrow_box_left', 'jo_arrow_box_right', 'jo_arrow_box_top', 'jo_arrow_box_bottom']);\r\n\r\n        $helper.addClass('jo_arrow_box_' + direction);\r\n\r\n        $helper.css({ left: '', right: '', top: '', bottom: '' });\r\n\r\n        let to = targetElement.offset();\r\n        let b = jQuery('body');\r\n\r\n        let delta: number = 34;\r\n\r\n        switch (direction) {\r\n            case \"bottom\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                bottom: b.height() - to.top + delta\r\n            });\r\n                break;\r\n            case \"top\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                top: to.top + targetElement.height() + 26\r\n            });\r\n                break;\r\n            case \"left\": $helper.css({\r\n                left: to.left + targetElement.width() + delta,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n            case \"right\": $helper.css({\r\n                right: b.width() - to.left,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n        }\r\n\r\n        $helper.find('span').html(text);\r\n\r\n        let $button = $helper.find('.jo_button');\r\n        $button.on('click', (e) => {\r\n            e.stopPropagation();\r\n            $button.off('click');\r\n            Helper.close();\r\n        });\r\n\r\n        $helper.fadeIn(800);\r\n\r\n    }\r\n\r\n    static close() {\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.fadeOut(800);\r\n    }\r\n\r\n\r\n    static showHelper(id: string, mainBase: Main, $element?: JQuery<HTMLElement>) {\r\n\r\n        let main: Main;\r\n        if(mainBase instanceof Main){\r\n            main = mainBase;\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        let helperHistory = main.user.settings!.helperHistory;\r\n\r\n        let flag = id + \"Done\";\r\n\r\n        if (helperHistory != null && (helperHistory[flag] == null || !helperHistory[flag])) {\r\n            helperHistory[flag] = true;\r\n            main.networkManager.sendUpdateUserSettings(() => { });\r\n\r\n            let text: string = \"\";\r\n            let direction: HelperDirection = \"left\";\r\n\r\n            switch (id) {\r\n                case \"newDatabaseHelper\":\r\n                    text = `Es gibt noch keine Datenbank. <br> Nutzen Sie den Button\r\n                        <span class='img_add-database-dark jo_inline-image'></span> um eine Datenbank anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                    case \"newSQLFileHelper\":\r\n                        text = `Es gibt noch keine Datei mit SQL-Anweisungen. <br> Nutzen Sie den Button \r\n                            <span class='img_add-file-dark jo_inline-image'></span> um eine neue Datei anzulegen.\r\n                            `;\r\n                        direction = \"left\";\r\n                        break;\r\n                case \"homeButtonHelper\":\r\n                    text = \"Mit dem Home-Button <span class='img_home-dark jo_inline-image'></span> können Sie wieder zu Ihren eigenen Workspaces wechseln.\";\r\n                    direction = \"top\";\r\n                    $element = jQuery('.img_home-dark');\r\n                    break;\r\n                case \"playButtonHelper\":\r\n                    text = `Mit dem \"Start-Button\"\r\n                        (<span class='img_start-dark jo_inline-image'></span>) \r\n                        oder der Tastenkombination &lt;Strg&gt;&nbsp;+&nbsp&lt;Enter&gt; \r\n                        wird die Anweisung ausgeführt, in der der Cursor gerade steht. \r\n                        <br> Wollen Sie mehrere Anweisungen hintereinander ausführen, so markieren \r\n                        Sie alle Anweisungen und klicken Sie dann auf <span class='img_start-dark jo_inline-image'></span>\r\n                        oder drücken Sie  &lt;Strg&gt;&nbsp;+&nbsp&lt;Enter&gt;. `;\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"consoleHelper\": \r\n                    text=`\r\n                        Hier können Sie Anweisungen oder Terme eingeben, die nach Bestätigung mit der Enter-Taste ausgeführt/ausgewertet werden. Das Ergebnis sehen Sie im Bereich über der Eingabezeile. <br>\r\n                        Falls das Programm gerade pausiert (z.B. bei Ausführung in Einzelschritten) können Sie auch auf die Variablen des aktuellen Sichtbarkeitsbereiches zugreifen.\r\n                    `;\r\n                    direction = \"bottom\";\r\n            }\r\n\r\n            if (text != \"\" && $element != null && $element.length > 0) {\r\n                Helper.openHelper(text, $element, direction);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MyCompletionItemProvider } from \"./MyCompletionItemProvider.js\";\r\nimport { defineMyJava } from \"./MyJava.js\";\r\nimport { MySignatureHelpProvider } from \"./MySignatureHelpProvider.js\";\r\nimport { MyHoverProvider } from \"./MyHoverProvider.js\";\r\nimport { MyCodeActionProvider } from \"./MyCodeActionProvider.js\";\r\nimport { MyReferenceProvider } from \"./MyReferenceProvider.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { defineVscSQL } from \"./VscSql.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\nexport class Editor {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n\r\n    cw: monaco.editor.IContentWidget = null;\r\n\r\n    dontPushNextCursorMove: number = 0;\r\n\r\n    constructor(public main: MainBase, private showMinimap: boolean, private isEmbedded: boolean) {\r\n    }\r\n\r\n    initGUI($element: JQuery<HTMLElement>) {\r\n\r\n\r\n\r\n        defineVscSQL();\r\n\r\n        monaco.editor.defineTheme('myCustomThemeDark', {\r\n            base: 'vs-dark', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'functions', foreground: 'dcdcaa', fontStyle: 'italic' },\r\n                { token: 'string.sql', foreground: '3DC9B0' },\r\n                { token: 'number', foreground: '7bef3f' },\r\n                { token: 'type', foreground: '499cd6' },\r\n                { token: 'identifier', foreground: 'effefe' },\r\n                { token: 'statement', foreground: '9cdcfe', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '619ceb', fontStyle: 'bold' },\r\n                { token: 'table', foreground: 'ff0000', fontStyle: 'bold' },\r\n                { token: 'delimiter', foreground: 'e8eb38' }\r\n                // { token: 'comment.js', foreground: '008800', fontStyle: 'bold italic underline' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#1e1e1e\",\r\n                \"jo_highlightStatementGreen\": \"#004000\",\r\n                \"jo_highlightStatementYellow\": \"#404000\",\r\n                \"jo_highlightStatementRed\": \"#402020\"\r\n            }\r\n        });\r\n\r\n        monaco.editor.defineTheme('myCustomThemeLight', {\r\n            base: 'vs', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'functions', foreground: '694E16', fontStyle: 'italic bold' },\r\n                { token: 'string.sql', foreground: 'a03030' },\r\n                { token: 'number', foreground: '404040' },\r\n                { token: 'type', foreground: '0000ff', fontStyle: 'bold' },\r\n                { token: 'identifier', foreground: '8000e0' },\r\n                { token: 'statement', foreground: '001080', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '00a000', fontStyle: 'bold' },\r\n                { token: 'comment', foreground: '808080', fontStyle: 'italic' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#FFFFFF\",\r\n                \"editor.foreground\": \"#000000\",\r\n                \"editor.inactiveSelectionBackground\": \"#E5EBF1\",\r\n                \"editorIndentGuide.background\": \"#D3D3D3\",\r\n                \"editorIndentGuide.activeBackground\": \"#939393\",\r\n                \"editor.selectionHighlightBackground\": \"#ADD6FF80\",\r\n                \"editorSuggestWidget.background\": \"#F3F3F3\",\r\n                \"activityBarBadge.background\": \"#007ACC\",\r\n                \"sideBarTitle.foreground\": \"#6F6F6F\",\r\n                \"list.hoverBackground\": \"#E8E8E8\",\r\n                \"input.placeholderForeground\": \"#767676\",\r\n                \"searchEditor.textInputBorder\": \"#CECECE\",\r\n                \"settings.textInputBorder\": \"#CECECE\",\r\n                \"settings.numberInputBorder\": \"#CECECE\",\r\n                \"statusBarItem.remoteForeground\": \"#FFF\",\r\n                \"statusBarItem.remoteBackground\": \"#16825D\",\r\n                \"jo_highlightStatementGreen\": \"#004000\",\r\n                \"jo_highlightStatementYellow\": \"#404000\",\r\n                \"jo_highlightStatementRed\": \"#400000\"\r\n            }\r\n        });\r\n\r\n\r\n        this.editor = monaco.editor.create($element[0], {\r\n            // value: [\r\n            //     'function x() {',\r\n            //     '\\tconsole.log(\"Hello world!\");',\r\n            //     '}'\r\n            // ].join('\\n'),\r\n            // language: 'myJava',\r\n            language: 'vscSQL',\r\n            lightbulb: {\r\n                enabled: true\r\n            },\r\n            // gotoLocation: {\r\n            //     multipleReferences: \"gotoAndPeek\"\r\n            // },\r\n            lineDecorationsWidth: 0,\r\n            peekWidgetDefaultFocus: \"tree\",\r\n            fixedOverflowWidgets: true,\r\n            quickSuggestions: true,\r\n            quickSuggestionsDelay: 10,\r\n            fontSize: 14,\r\n            fontFamily: \"Consolas, Roboto Mono\",\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            selectOnLineNumbers: false,\r\n            // selectionHighlight: false,\r\n            automaticLayout: true,\r\n            scrollBeyondLastLine: false,\r\n            occurrencesHighlight: false,\r\n            autoIndent: \"full\",\r\n            dragAndDrop: true,\r\n            formatOnType: true,\r\n            formatOnPaste: true,\r\n            suggestFontSize: 16,\r\n            suggestLineHeight: 22,\r\n            suggest: {\r\n                localityBonus: true,\r\n                insertMode: \"replace\"\r\n                // snippetsPreventQuickSuggestions: false\r\n            },\r\n            parameterHints: { enabled: true, cycle: true },\r\n            // //@ts-ignore\r\n            // contribInfo: {\r\n            //     suggestSelection: 'recentlyUsedByPrefix',\r\n            // },\r\n\r\n            mouseWheelZoom: this.isEmbedded,\r\n\r\n            minimap: {\r\n                enabled: this.showMinimap\r\n            },\r\n            scrollbar: {\r\n                vertical: 'auto',\r\n                horizontal: 'auto'\r\n            },\r\n            theme: \"myCustomThemeDark\",\r\n            // automaticLayout: true\r\n\r\n\r\n        }\r\n        );\r\n\r\n        let that = this;\r\n\r\n        let mouseWheelListener = (event: WheelEvent) => {\r\n            if (event.ctrlKey === true) {\r\n\r\n                that.changeEditorFontSize(Math.sign(event.deltaY), true);\r\n\r\n                event.preventDefault();\r\n            }\r\n        };\r\n\r\n\r\n        this.editor.onDidChangeConfiguration((event) => {\r\n            if (event.hasChanged(monaco.editor.EditorOption.fontInfo) && this.isEmbedded) {\r\n\r\n                this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n            }\r\n        });\r\n\r\n        this.editor.onDidChangeCursorPosition((event) => {\r\n\r\n            that.onDidChangeCursorPosition(event.position);\r\n\r\n        });\r\n\r\n        // We need this to set our model after user uses Strg+click on identifier\r\n        this.editor.onDidChangeModel((event) => {\r\n\r\n            let element: HTMLDivElement = <any>$element.find('.monaco-editor')[0];\r\n            element.removeEventListener(\"wheel\", mouseWheelListener);\r\n            element.addEventListener(\"wheel\", mouseWheelListener, { passive: false });\r\n\r\n            if (this.main.getCurrentWorkspace() == null) return;\r\n\r\n            let module = this.main.getCurrentWorkspace().getModuleByMonacoModel(this.editor.getModel());\r\n            if (this.main instanceof Main && module != null) {\r\n\r\n                this.main.projectExplorer.setActiveAfterExternalModelSet(module);\r\n            }\r\n        });\r\n\r\n        monaco.languages.registerHoverProvider('vscSQL', new MyHoverProvider(this));\r\n\r\n        monaco.languages.registerCompletionItemProvider('vscSQL', new MyCompletionItemProvider(this.main));\r\n        monaco.languages.registerCodeActionProvider('vscSQL', new MyCodeActionProvider(this.main));\r\n        monaco.languages.registerReferenceProvider('vscSQL', new MyReferenceProvider(this.main));\r\n\r\n\r\n        monaco.languages.registerSignatureHelpProvider('vscSQL', new MySignatureHelpProvider(this.main));\r\n\r\n        this.editor.onMouseDown((e: monaco.editor.IEditorMouseEvent) => {\r\n            const data = e.target.detail;\r\n            if (e.target.type !== monaco.editor.MouseTargetType.GUTTER_GLYPH_MARGIN &&\r\n                e.target.type !== monaco.editor.MouseTargetType.GUTTER_LINE_NUMBERS || data.isAfterLines) {\r\n                return;\r\n            }\r\n            that.onMarginMouseDown(e.target.position.lineNumber);\r\n            return;\r\n        });\r\n\r\n\r\n        // If editor is instantiated before fonts are loaded then indentation-lines\r\n        // are misplaced, see https://github.com/Microsoft/monaco-editor/issues/392\r\n        // so:\r\n        setTimeout(() => {\r\n            monaco.editor.remeasureFonts();\r\n        }, 2000);\r\n\r\n        this.addActions();\r\n\r\n        //@ts-ignore\r\n        this.editor.onDidType((text) => { that.onDidType(text) });\r\n\r\n        return this.editor;\r\n    }\r\n\r\n\r\n    onDidType(text: string) {\r\n        //        const endOfCommentText = \" * \\n */\";\r\n\r\n        const insertEndOfComment = (pos, insertText: string, newLine: number, newColumn: number) => {\r\n            const range = new monaco.Range(\r\n                pos.lineNumber,\r\n                pos.column,\r\n                pos.lineNumber,\r\n                pos.column\r\n            );\r\n            this.editor.executeEdits(\"new-bullets\", [\r\n                { range, text: insertText }\r\n            ]);\r\n\r\n            // Set position after bulletText\r\n            this.editor.setPosition({\r\n                lineNumber: newLine,\r\n                column: newColumn\r\n            });\r\n        };\r\n\r\n        if (text === \"\\n\") {\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            const prevLine = model.getLineContent(position.lineNumber - 1);\r\n            if (prevLine.trim().indexOf(\"/*\") === 0 && !prevLine.trimRight().endsWith(\"*/\")) {\r\n                const nextLine = position.lineNumber < model.getLineCount() ? model.getLineContent(position.lineNumber + 1) : \"\";\r\n                if (!nextLine.trim().startsWith(\"*\")) {\r\n                    let spacesAtBeginningOfLine: string = prevLine.substr(0, prevLine.length - prevLine.trimLeft().length);\r\n                    if (prevLine.trim().indexOf(\"/**\") === 0) {\r\n                        insertEndOfComment(position, \"\\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    } else {\r\n                        insertEndOfComment(position, \" * \\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    lastTime: number = 0;\r\n    setFontSize(fontSizePx: number) {\r\n\r\n        // console.log(\"Set font size: \" + fontSizePx);\r\n        let time = new Date().getTime();\r\n        if (time - this.lastTime < 150) return;\r\n        this.lastTime = time;\r\n\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (this.main instanceof Main) {\r\n            this.main.viewModeController.saveFontSize(fontSizePx);\r\n        }\r\n\r\n        if (fontSizePx != editorfs) {\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx\r\n            });\r\n\r\n            // editor does not set fontSizePx, but fontSizePx * zoomfactor with unknown zoom factor, so \r\n            // we have to do this dirty workaround:\r\n            let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n            let factor = newEditorfs / fontSizePx;\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx / factor\r\n            });\r\n\r\n        }\r\n\r\n        jQuery('.jo_editorFontSize').css('font-size', fontSizePx + \"px\");\r\n        jQuery('.jo_editorFontSize').css('line-height', (fontSizePx + 2) + \"px\");\r\n\r\n        document.documentElement.style.setProperty('--breakpoint-size', fontSizePx + 'px');\r\n        document.documentElement.style.setProperty('--breakpoint-radius', fontSizePx / 2 + 'px');\r\n\r\n\r\n        this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n    }\r\n\r\n    changeEditorFontSize(delta: number, dynamic: boolean = true) {\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (dynamic) {\r\n            if (editorfs < 10) {\r\n                delta *= 1;\r\n            } else if (editorfs < 20) {\r\n                delta *= 2;\r\n            } else {\r\n                delta *= 4;\r\n            }\r\n        }\r\n\r\n        let newEditorFs = editorfs + delta;\r\n        if (newEditorFs >= 6 && newEditorFs <= 80) {\r\n            this.setFontSize(newEditorFs);\r\n        }\r\n    }\r\n\r\n\r\n    addActions() {\r\n        let that = this;\r\n\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Find bracket',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'Finde korrespondierende Klammer',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.5,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                ed.getAction('editor.action.jumpToBracket').run();\r\n                return null;\r\n            }\r\n        });\r\n\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Execute statement',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'SQL-Anweisung ausführen',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.Enter],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.0,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                that.main.getActionManager().trigger('execute');\r\n                return null;\r\n            }\r\n        });\r\n\r\n        //console.log(this.editor.getSupportedActions());\r\n    }\r\n\r\n    onMarginMouseDown(lineNumber: number) {\r\n\r\n    }\r\n\r\n    elementDecoration: string[] = [];\r\n    onDidChangeCursorPosition(position: { lineNumber: number, column: number }) {\r\n\r\n        if (position == null) position = this.editor.getPosition();\r\n\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, []);\r\n            return;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        if (element != null) {\r\n            let usagePositions = element.usagePositions;\r\n            let upInCurrentModule = usagePositions.get(module);\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    decorations.push({\r\n                        range: { startColumn: up.column, startLineNumber: up.line, endColumn: up.column + up.length, endLineNumber: up.line },\r\n                        options: {\r\n                            className: 'jo_revealSyntaxElement', isWholeLine: false, overviewRuler: {\r\n                                color: { id: \"editorIndentGuide.background\" },\r\n                                darkColor: { id: \"editorIndentGuide.activeBackground\" },\r\n                                position: monaco.editor.OverviewRulerLane.Left\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        let executeActionActive = false;\r\n\r\n        for(let sqlStatement of module.getSQLSTatementsAtSelection(this.editor.getSelection())){\r\n\r\n            let classname = \"jo_highlightStatementGreen\";\r\n            if (sqlStatement != null) {\r\n                if (sqlStatement.hasErrors) {\r\n                    classname = \"jo_highlightStatementRed\";\r\n                    if (sqlStatement.acceptedBySQLite) {\r\n                        classname = \"jo_highlightStatementYellow\";\r\n                        executeActionActive = true;\r\n                    }\r\n                } else {\r\n                    executeActionActive = true;\r\n                }\r\n    \r\n                decorations.push({\r\n                    range: {\r\n                        startColumn: sqlStatement.from.column, startLineNumber: sqlStatement.from.line,\r\n                        endColumn: sqlStatement.to.column, endLineNumber: sqlStatement.to.line\r\n                    },\r\n                    options: {\r\n                        className: classname, isWholeLine: false, overviewRuler: {\r\n                            color: { id: classname },\r\n                            darkColor: { id: classname },\r\n                            position: monaco.editor.OverviewRulerLane.Left\r\n                        },\r\n                        minimap: {\r\n                            color: { id: classname },\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        },\r\n                        zIndex: -100\r\n                    }\r\n                })\r\n    \r\n            }\r\n        }\r\n\r\n\r\n        this.main.getActionManager().setActive('execute', executeActionActive);\r\n\r\n        if(executeActionActive && !this.main.isEmbedded()){\r\n            Helper.showHelper(\"playButtonHelper\", <any>this.main, jQuery('div.img_start-dark'));\r\n        }\r\n\r\n\r\n        this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, decorations);\r\n\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.main.getCurrentlyEditedModule();\r\n    }\r\n\r\n\r\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport function defineVscSQL() {\r\n    monaco.languages.register({\r\n        id: 'vscSQL',\r\n        extensions: ['.sql'],\r\n        //  mimetypes: [\"text/x-java-source\", \"text/x-java\"]  \r\n    });\r\n\r\n    let conf: monaco.languages.LanguageConfiguration = {\r\n        onEnterRules: [\r\n            {\r\n                // e.g. /** | */\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                afterText: /^\\s*\\*\\/$/,\r\n                action: { indentAction: monaco.languages.IndentAction.IndentOutdent, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g. /** ...|\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g.  * ...|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: '* ' }\r\n            },\r\n            {\r\n                // e.g.  */|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            },\r\n            {\r\n                // e.g.  *-----*/|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*[^/]*\\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            }\r\n        ],\r\n        comments: {\r\n            lineComment: '--',\r\n            blockComment: ['/*', '*/'],\r\n        },\r\n        brackets: [\r\n            ['{', '}'],\r\n            ['[', ']'],\r\n            ['(', ')']\r\n        ],\r\n        autoClosingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ],\r\n        surroundingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ]\r\n    };\r\n    let language = {\r\n\r\n        defaultToken: '',\r\n        tokenPostfix: '.sql',\r\n        ignoreCase: true,\r\n        brackets: [\r\n            { open: '[', close: ']', token: 'delimiter.square' },\r\n            { open: '(', close: ')', token: 'delimiter.parenthesis' }\r\n        ],\r\n        escapes: /\\\\(?:[abfnrtv\\\\\"'])/,\r\n        keywords: [\r\n            \"ABORT\", \"ACTION\", \"ADD\", \"AFTER\", \"ALL\", \"ALTER\", \"ANALYZE\", \"AND\", \"AS\", \"ASC\", \"ATTACH\", \"AUTOINCREMENT\", \"BEFORE\",\r\n            \"BEGIN\", \"BETWEEN\", \"BY\", \"CASCADE\", \"CASE\", \"CAST\", \"CHECK\", \"COLLATE\", \"COLUMN\", \"COMMIT\", \"CONFLICT\", \"CONSTRAINT\",\r\n            \"CREATE\", \"CROSS\", \"CURRENT_DATE\", \"CURRENT_TIME\", \"CURRENT_TIMESTAMP\", \"DATABASE\", \"DEFAULT\", \"DEFERRABLE\", \"DEFERRED\",\r\n            \"DELETE\", \"DESC\", \"DETACH\", \"DISTINCT\", \"DROP\", \"EACH\", \"ELSE\", \"END\", \"ESCAPE\", \"EXCEPT\", \"EXCLUSIVE\", \"EXISTS\", \"EXPLAIN\",\r\n            \"FAIL\", \"FOR\", \"FOREIGN\", \"FROM\", \"FULL\", \"GLOB\", \"GROUP\", \"HAVING\", \"IF\", \"IGNORE\", \"IMMEDIATE\", \"IN\", \"INDEX\", \"INDEXED\",\r\n            \"INITIALLY\", \"INNER\", \"INSERT\", \"INSTEAD\", \"INTERSECT\", \"INTO\", \"IS\", \"ISNULL\", \"JOIN\", \"KEY\", \"LEFT\", \"LIKE\", \"LIMIT\", \"MATCH\",\r\n            \"NATURAL\", \"NO\", \"NOT\", \"NOTNULL\", \"NULL\", \"OF\", \"OFFSET\", \"ON\", \"OR\", \"ORDER\", \"OUTER\", \"PLAN\", \"PRAGMA\", \"PRIMARY\", \"QUERY\",\r\n            \"RAISE\", \"RECURSIVE\", \"REFERENCES\", \"REGEXP\", \"REINDEX\", \"RELEASE\", \"RENAME\", \"REPLACE\", \"RESTRICT\", \"RIGHT\", \"ROLLBACK\", \"ROW\",\r\n            \"SAVEPOINT\", \"SELECT\", \"SET\", \"TABLE\", \"TEMP\", \"TEMPORARY\", \"THEN\", \"TO\", \"TRANSACTION\", \"TRIGGER\", \"UNION\", \"UNIQUE\", \"UPDATE\",\r\n            \"USING\", \"VACUUM\", \"VALUES\", \"VIEW\", \"VIRTUAL\", \"WHEN\", \"WHERE\", \"WITH\", \"WITHOUT\", \"ENGINE\", \"CHARSET\"\r\n        ],\r\n        operators: [\r\n            \"AND\", \"BETWEEN\", \"IN\", \"LIKE\", \"NOT\", \"OR\", \"IS\", \"NULL\", \"INTERSECT\", \"UNION\", \"INNER\", \"JOIN\", \"LEFT\", \"OUTER\", \"RIGHT\"\r\n        ],\r\n        builtinFunctions: [\r\n            \"abs\", \"changes\", \"char\", \"coalesce\", \"count\", \"glob\", \"hex\", \"ifnull\",\r\n            \"iif\", \"instr\", \"last_insert_rowid\", \"length\", \"like\", \"likelihood\", \"likely\",\r\n            \"lower\", \"ltrim\", \"max\", \"min\", \"nullif\", \"quote\", \"random\", \"randomblob\",\r\n            \"replace\", \"round\", \"rtrim\", \"sign\", \"soundex\", \"sqlite_version\", \"substr\", \"substring\",\r\n            \"total_changes\", \"trim\", \"typeof\", \"unicode\", \"unlikely\", \"upper\", \"zeroblob\"\r\n        ],\r\n        builtinVariables: [\r\n            // NOT SUPPORTED\r\n        ],\r\n        pseudoColumns: [\r\n            // NOT SUPPORTED\r\n        ],\r\n        tokenizer: {\r\n            root: [\r\n                { include: '@comments' },\r\n                { include: '@whitespace' },\r\n                { include: '@pseudoColumns' },\r\n                { include: '@numbers' },\r\n                { include: '@strings' },\r\n                { include: '@complexIdentifiers' },\r\n                { include: '@scopes' },\r\n                [/[;,.]/, 'delimiter'],\r\n                [/[()]/, '@brackets'],\r\n                [/[a-z_$äöü][\\w$äöüßÄÖÜ]*(?=\\()/, {\r\n                    cases: {\r\n                        '@builtinFunctions': 'functions',\r\n                        '@keywords': 'keyword',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[\\w@#$]+/, {\r\n                    cases: {\r\n                        '@keywords': 'keyword',\r\n                        '@operators': 'operator',\r\n                        '@builtinVariables': 'predefined',\r\n                        // '@builtinFunctions': 'functions',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[<>=!%&+\\-*/|~^]/, 'operator'],\r\n            ],\r\n            whitespace: [\r\n                [/\\s+/, 'white']\r\n            ],\r\n            comments: [\r\n                [/--+.*/, 'comment'],\r\n                [/\\/\\*/, { token: 'comment.quote', next: '@comment' }]\r\n            ],\r\n            comment: [\r\n                [/[^*/]+/, 'comment'],\r\n                // Not supporting nested comments, as nested comments seem to not be standard?\r\n                // i.e. http://stackoverflow.com/questions/728172/are-there-multiline-comment-delimiters-in-sql-that-are-vendor-agnostic\r\n                // [/\\/\\*/, { token: 'comment.quote', next: '@push' }],    // nested comment not allowed :-(\r\n                [/\\*\\//, { token: 'comment.quote', next: '@pop' }],\r\n                [/./, 'comment']\r\n            ],\r\n            pseudoColumns: [\r\n                [/[$][A-Za-z_][\\w@#$]*/, {\r\n                    cases: {\r\n                        '@pseudoColumns': 'predefined',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n            ],\r\n            numbers: [\r\n                [/0[xX][0-9a-fA-F]*/, 'number'],\r\n                [/[$][+-]*\\d*(\\.\\d*)?/, 'number'],\r\n                [/((\\d+(\\.\\d*)?)|(\\.\\d+))([eE][\\-+]?\\d+)?/, 'number']\r\n            ],\r\n            strings: [\r\n                [/'/, { token: 'string', next: '@string' }],\r\n            ],\r\n            string: [\r\n                [/[^\\\\']+/, 'string'],\r\n                [/\\\\./, 'string.escape.invalid'],\r\n                [/''/, 'string'],\r\n                [/'/, { token: 'string', next: '@pop' }]\r\n            ],\r\n            complexIdentifiers: [\r\n                [/\"/, { token: 'identifier.quote', next: '@quotedIdentifier' }]\r\n            ],\r\n            quotedIdentifier: [\r\n                [/[^\"]+/, 'identifier'],\r\n                [/\"\"/, 'identifier'],\r\n                [/\"/, { token: 'identifier.quote', next: '@pop' }]\r\n            ],\r\n            scopes: [\r\n                // NOT SUPPORTED\r\n            ]\r\n        }\r\n\r\n\r\n\r\n    };\r\n\r\n    //@ts-ignore\r\n    monaco.languages.setLanguageConfiguration('vscSQL', conf);\r\n    //@ts-ignore\r\n    monaco.languages.setMonarchTokensProvider('vscSQL', language);\r\n\r\n\r\n\r\n}","import { Lexer } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Token, TokenList, TokenType, tokenListToString } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class Formatter implements monaco.languages.DocumentFormattingEditProvider,\r\n    monaco.languages.OnTypeFormattingEditProvider {\r\n\r\n    autoFormatTriggerCharacters: string[] = ['\\n'];\r\n\r\n    displayName?: string = \"Java-Autoformat\";\r\n\r\n\r\n    constructor(\r\n        // private main: Main\r\n    ) {\r\n\r\n    }\r\n\r\n    init() {\r\n        monaco.languages.registerDocumentFormattingEditProvider('myJava', this);\r\n        monaco.languages.registerOnTypeFormattingEditProvider('myJava', this);\r\n    }\r\n\r\n    provideOnTypeFormattingEdits(model: monaco.editor.ITextModel, position: monaco.Position, ch: string, options: monaco.languages.FormattingOptions, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n    deleteOverlappingRanges(edits: monaco.languages.TextEdit[]) {\r\n        for (let i = 0; i < edits.length - 1; i++) {\r\n            let e = edits[i];\r\n            let e1 = edits[i + 1];\r\n            if (e.range.endLineNumber < e1.range.startLineNumber) continue;\r\n            if (e.range.endLineNumber == e1.range.startLineNumber) {\r\n                if (e.range.endColumn >= e1.range.startColumn) {\r\n                    edits.splice(i + 1, 1);\r\n                } else {\r\n                    if (e.range.endColumn == 0 && e.text.length > 0 && e1.range.startColumn == 1 && e1.range.endColumn > e1.range.startColumn && e1.text == \"\") {\r\n                        let delta = e.text.length - (e1.range.endColumn - e1.range.startColumn);\r\n                        if (delta > 0) { \r\n                            e.text = e.text.substr(0, delta);\r\n                            edits.splice(i+1, 1);\r\n                        }\r\n                        else if (delta < 0)\r\n                        { \r\n                            //@ts-ignore\r\n                            e1.range.endColumn = e1.range.startColumn - delta;\r\n                            edits.splice(i, 1);\r\n                            i--;\r\n\r\n                         }\r\n                        else {\r\n                            edits.splice(i, 2);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    provideDocumentFormattingEdits(model: monaco.editor.ITextModel,\r\n        options: monaco.languages.FormattingOptions,\r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n\r\n    format(model: monaco.editor.ITextModel): monaco.languages.TextEdit[] {\r\n\r\n        let edits: monaco.languages.TextEdit[] = [];\r\n\r\n        // if (this.main.currentWorkspace == null || this.main.currentWorkspace.currentlyOpenModule == null) {\r\n        //     return [];\r\n        // }\r\n\r\n        // let text = this.main.monaco_editor.getValue({ preserveBOM: false, lineEnding: \"\\n\" });\r\n\r\n        let text = model.getValue(monaco.editor.EndOfLinePreference.LF);\r\n\r\n        let tokenlist = new Lexer().lex(text).tokens;\r\n\r\n        // let tokenlist = this.main.currentWorkspace.currentlyOpenModule.tokenList;\r\n\r\n        if (tokenlist == null) return [];\r\n\r\n        // TODO:\r\n        // { at the end of line, with one space before; followed only by spaces and \\n\r\n        // indent lines according to { and }\r\n        // Beware: int i[] = { ... }\r\n        // exactly one space before/after binary operators\r\n        // no space after ( and no space before )\r\n        // (   ) -> ()\r\n        // (  ()) -> (())\r\n        // (()  ) -> (())\r\n\r\n        let lastNonSpaceToken: Token = null;\r\n        let indentLevel = 0;\r\n        let tabSize = 3;\r\n        let curlyBracesOpenAtLines: number[] = [];\r\n        let indentLevelAtSwitchStatements: number[] = [];\r\n        let switchHappend: boolean = false;\r\n        let lastTokenWasNewLine: number = 0;\r\n        let roundBracketsOpen: number = 0;\r\n\r\n        for (let i = 0; i < tokenlist.length; i++) {\r\n\r\n            let t = tokenlist[i];\r\n            lastTokenWasNewLine--;\r\n\r\n            switch (t.tt) {\r\n\r\n                case TokenType.leftCurlyBracket:\r\n                    if (switchHappend) {\r\n                        switchHappend = false;\r\n                        indentLevelAtSwitchStatements.push(indentLevel + 2);\r\n                        indentLevel++;\r\n                    }\r\n                    indentLevel++;\r\n                    curlyBracesOpenAtLines.push(t.position.line);\r\n                    if (lastNonSpaceToken != null) {\r\n                        let tt = lastNonSpaceToken.tt;\r\n                        if (tt == TokenType.rightBracket || tt == TokenType.identifier || tt == TokenType.leftRightSquareBracket) {\r\n                            this.replaceBetween(lastNonSpaceToken, t, edits, \" \");\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let token1 = tokenlist[i + 1];\r\n                        if (token1.tt != TokenType.newline && token1.tt != TokenType.space) {\r\n                            this.insertSpaces(edits, token1.position.line, token1.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    if (indentLevelAtSwitchStatements[indentLevelAtSwitchStatements.length - 1] == indentLevel) {\r\n                        indentLevelAtSwitchStatements.pop();\r\n                        indentLevel--;\r\n                        // if(t.position.column >= 3){\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                        // }    \r\n                    }\r\n                    indentLevel--;\r\n                    let openedAtLine = curlyBracesOpenAtLines.pop();\r\n                    if (openedAtLine != null && openedAtLine != t.position.line) {\r\n                        if (lastNonSpaceToken != null && lastNonSpaceToken.position.line == t.position.line) {\r\n                            this.replace(edits, t.position, t.position, \"\\n\" + \" \".repeat(indentLevel * tabSize));\r\n                        }\r\n                    } else {\r\n                        if (i > 0) {\r\n                            let token1 = tokenlist[i - 1];\r\n                            if (token1.tt != TokenType.space && token1.tt != TokenType.newline) {\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    roundBracketsOpen++;\r\n                    if (i < tokenlist.length - 2) {\r\n                        let nextToken1 = tokenlist[i + 1];\r\n                        let nextToken2 = tokenlist[i + 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                            i++;\r\n                            if (nextToken2.tt == TokenType.rightBracket) {\r\n                                i++;\r\n                                roundBracketsOpen--;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt == TokenType.space && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line, lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    roundBracketsOpen--;\r\n                    if (i > 1) {\r\n                        let nextToken1 = tokenlist[i - 1];\r\n                        let nextToken2 = tokenlist[i - 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.newline:\r\n                    lastTokenWasNewLine = 2;\r\n                    if (i < tokenlist.length - 2) {\r\n\r\n                        let lastTokenIsOperator = this.isBinaryOperator(lastNonSpaceToken?.tt);\r\n                        let nextTokenIsOperator = this.isBinaryOperator(this.getNextNonSpaceToken(i, tokenlist).tt);\r\n\r\n                        let beginNextLine = tokenlist[i + 1];\r\n                        let token2 = tokenlist[i + 2];\r\n                        let currentIndentation = 0;\r\n\r\n                        if (beginNextLine.tt == TokenType.newline) {\r\n                            break;\r\n                        }\r\n\r\n                        let delta: number = 0;\r\n                        if (beginNextLine.tt == TokenType.space) {\r\n                            if (token2.tt == TokenType.newline) {\r\n                                break;\r\n                            }\r\n                            currentIndentation = beginNextLine.position.length;\r\n                            i++;\r\n                            if (token2.tt == TokenType.rightCurlyBracket) {\r\n                                delta = -1;\r\n                            }\r\n                        }\r\n\r\n                        if (beginNextLine.tt == TokenType.rightCurlyBracket) {\r\n                            delta = -1;\r\n                            // indentLevel--;\r\n                            // curlyBracesOpenAtLines.pop();\r\n                            // lastNonSpaceToken = beginNextLine;\r\n                            // i++;\r\n                        }\r\n\r\n                        if(nextTokenIsOperator || lastTokenIsOperator) delta = 1;\r\n\r\n                        let il = indentLevel + delta;\r\n                        if(roundBracketsOpen > 0){\r\n                            il++;\r\n                        }\r\n                        if (il < 0) il = 0;\r\n\r\n                        let correctIndentation = il * tabSize;\r\n\r\n                        if (correctIndentation > currentIndentation) {\r\n                            this.insertSpaces(edits, t.position.line + 1, 0, correctIndentation - currentIndentation);\r\n                        } else if (correctIndentation < currentIndentation) {\r\n                            this.deleteSpaces(edits, t.position.line + 1, 0, currentIndentation - correctIndentation);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.space:\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment) {\r\n                            if (i > 0) {\r\n                                let lastToken = tokenlist[i - 1];\r\n                                if (lastToken.tt != TokenType.newline) {\r\n                                    if (t.position.length > 1) {\r\n                                        this.deleteSpaces(edits, t.position.line, t.position.column, t.position.length - 1);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.comma:\r\n                case TokenType.semicolon:\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt != TokenType.newline && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.tt == TokenType.space && lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line,\r\n                                    lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment && nextToken.tt != TokenType.space && nextToken.tt != TokenType.newline) {\r\n                            this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightSquareBracket:\r\n                    if (lastNonSpaceToken != null && lastNonSpaceToken.tt == TokenType.leftSquareBracket) {\r\n                        this.replaceBetween(lastNonSpaceToken, t, edits, \"\");\r\n\r\n                    }\r\n                    break;\r\n\r\n            }\r\n\r\n            // binary operator?\r\n            if (this.isBinaryOperator(t.tt)) {\r\n\r\n                let lowerGeneric = t.tt == TokenType.lower && this.lowerBelongsToGenericExpression(i, tokenlist);\r\n                let greaterGeneric = t.tt == TokenType.greater && this.greaterBelongsToGenericExpression(i, tokenlist);\r\n\r\n                if (lastTokenWasNewLine <= 0 && lastNonSpaceToken != null && [TokenType.leftBracket, TokenType.comma].indexOf(lastNonSpaceToken.tt) < 0) {\r\n\r\n                    if (i > 0) {\r\n                        let tokenBefore = tokenlist[i - 1];\r\n                        let spaces = (lowerGeneric || greaterGeneric) ? 0 : 1;\r\n                        if (tokenBefore.tt == TokenType.space) {\r\n                            if (tokenBefore.position.length != spaces) {\r\n                                this.insertSpaces(edits, tokenBefore.position.line,\r\n                                    tokenBefore.position.column, spaces - tokenBefore.position.length);\r\n                            }\r\n                        } else {\r\n                            if (spaces == 1)\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        let spaces = (lowerGeneric) ? 0 : 1;\r\n                        if (nextToken.tt == TokenType.space) {\r\n                            if (greaterGeneric && i < tokenlist.length - 2 && tokenlist[i + 2].tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (nextToken.position.length != spaces) {\r\n                                this.insertSpaces(edits, nextToken.position.line,\r\n                                    nextToken.position.column, spaces - nextToken.position.length);\r\n                            }\r\n                        } else {\r\n                            if (greaterGeneric && nextToken.tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (spaces == 1) this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            if (t.tt != TokenType.space && t.tt != TokenType.newline) {\r\n                lastNonSpaceToken = t;\r\n            }\r\n\r\n        }\r\n\r\n        this.deleteOverlappingRanges(edits);\r\n\r\n        return edits;\r\n\r\n    }\r\n    getNextNonSpaceToken(currentIndex: number, tokenlist: TokenList):  Token {\r\n\r\n        if(currentIndex == tokenlist.length - 1) return tokenlist[currentIndex];\r\n\r\n        let j = currentIndex + 1;\r\n        while(j < tokenlist.length - 1 && (tokenlist[j].tt == TokenType.space )){\r\n            j++;\r\n        }\r\n        return tokenlist[j];\r\n\r\n    }\r\n\r\n    lowerBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position + 1;\r\n        while (i < tokenlist.length) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.greater) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i++;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    greaterBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position - 1;\r\n        while (i >= 0) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.lower) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i--;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isBinaryOperator(token: TokenType) {\r\n        return token != null && token >= TokenType.modulo && token <= TokenType.equal;\r\n    }\r\n\r\n    private replaceBetween(lastNonSpaceToken: Token, t: Token, edits: monaco.languages.TextEdit[], text: string) {\r\n        let positionFrom = {\r\n            line: lastNonSpaceToken.position.line,\r\n            column: lastNonSpaceToken.position.column + lastNonSpaceToken.position.length\r\n        };\r\n        let positionTo = {\r\n            line: t.position.line,\r\n            column: t.position.column\r\n        };\r\n        if (positionFrom.line != positionTo.line ||\r\n            positionTo.column - positionFrom.column != text.length) {\r\n            this.replace(edits, positionFrom, positionTo, text);\r\n        }\r\n    }\r\n\r\n    deleteSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column + numberOfSpaces + (column == 0 ? 1 : 0),\r\n                endLineNumber: line\r\n            },\r\n            text: \"\"\r\n        });\r\n    }\r\n\r\n    insertSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n\r\n        if (numberOfSpaces < 0) {\r\n            this.deleteSpaces(edits, line, column, -numberOfSpaces);\r\n            return;\r\n        }\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column,\r\n                endLineNumber: line\r\n            },\r\n            text: \" \".repeat(numberOfSpaces)\r\n        });\r\n    }\r\n\r\n    replace(edits: monaco.languages.TextEdit[], positionFrom: { line: number; column: number; }, positionTo: { line: number; column: number; }, text: string) {\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: positionFrom.column,\r\n                startLineNumber: positionFrom.line,\r\n                endColumn: positionTo.column,\r\n                endLineNumber: positionTo.line\r\n            },\r\n            text: text\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","export class WorkerSim {\n\n    //@ts-ignore\n    initsql = initSqlJs({locateFile: (path, scriptDirectory) => \"https://embed.learn-sql.de/include/lib/sql.js/sql-wasm.wasm\"});\n    db;\n    SQL;\n\n    onmessage: (event: {data: any}) => void;\n\n    onError: (event: ErrorEvent) => void;\n\n    postMessageToClient(message: any) {\n        this.onmessage({data: message})\n    }\n\n    postMessage(data: any){\n        let that = this;\n        if (that.db == null) {\n            that.initsql.then((SQL1) => {\n                that.SQL = SQL1;\n                that.db = createDb(SQL1, undefined);\n                that.worker(data);\n            }).catch((err) => {\n                console.log(err);\n                //@ts-ignore\n                return that.postMessageToClient({\n                    id: this[\"data\"][\"id\"],\n                    error: err[\"message\"]\n                });\n            })\n        } else {\n            that.worker(data);\n        }\n    }\n\n    terminate() {\n\n    }\n\n    worker(data: any) {\n        var buff; var result;\n        var config = data[\"config\"] ? data[\"config\"] : {};\n        try {\n            switch (data && data[\"action\"]) {\n                case \"open\":\n                    buff = data[\"buffer\"];\n                    this.db = createDb(this.SQL, buff && new Uint8Array(buff));\n                    //@ts-ignore\n                    return this.postMessageToClient({\n                        id: data[\"id\"],\n                        ready: true\n                    });\n                case \"exec\":\n                    if (this.db === null) {\n                        this.db = createDb(this.SQL, undefined);\n                    }\n                    if (!data[\"sql\"]) {\n                        throw \"exec: Missing query string\";\n                    }\n                    //@ts-ignore\n                    return this.postMessageToClient({\n                        id: data[\"id\"],\n                        results: this.db.exec(data[\"sql\"], data[\"params\"], config)\n                    });\n                case \"each\":\n                    if (this.db === null) {\n                        this.db = createDb(this.SQL, undefined);\n                    }\n                    var callback = function callback(row) {\n                        //@ts-ignore\n                        return this.postMessage({\n                            id: data[\"id\"],\n                            row: row,\n                            finished: false\n                        });\n                    };\n                    var done = function done() {\n                        //@ts-ignore\n                        return this.postMessage({\n                            id: data[\"id\"],\n                            finished: true\n                        });\n                    };\n                    return this.db.each(data[\"sql\"], data[\"params\"], callback, done, config);\n                case \"export\":\n                    buff = this.db[\"export\"]();\n                    result = {\n                        id: data[\"id\"],\n                        results: [\n                            {\n                                buffer: buff\n                            }\n                        ]\n                    };\n                    try {\n                        //@ts-ignore\n                        return this.postMessageToClient(result);\n                    } catch (error) {\n                        //@ts-ignore\n                        return this.postMessageToClient(result);\n                    }\n                case \"close\":\n                    if (this.db) {\n                        this.db.close();\n                    }\n                    //@ts-ignore\n                    return this.postMessageToClient({\n                        id: data[\"id\"]\n                    });\n                default:\n                    throw new Error(\"Invalid action : \" + (data && data[\"action\"]));\n            }\n\n        } catch (err) {\n\n            //@ts-ignore\n            return this.postMessageToClient({\n                id: data[\"id\"],\n                error: err[\"message\"]\n            });\n        }\n\n    }\n\n\n}\n\n\n\n\n\n","import { MainBase } from \"../main/MainBase.js\";\r\nimport { WorkerSim } from \"../sqljs-worker/sqljsWorkerSim.js\";\r\n\r\nexport type DatabaseDumpType = \"binaryUncompressed\" | \"binaryCompressed\" | \"other\";\r\n\r\nexport type DatabaseDirectoryEntry = {\r\n    name: string,\r\n    description: string,\r\n    filename: string\r\n}\r\n\r\nexport type QueryResult = {\r\n    columns: string[],\r\n    values: any[][],\r\n    buffer?: Uint8Array\r\n}\r\n\r\nexport type QuerySuccessCallback = (results: QueryResult[]) => void;\r\nexport type QueryErrorCallback = (error: string) => void;\r\n\r\nexport type ColumnStructure = {\r\n    name: string;\r\n    table: TableStructure;\r\n\r\n    typeLengths?: number[]; // for varchar(5), ...\r\n    completeTypeSQL: string;\r\n\r\n    references?: ColumnStructure;\r\n    referencesRawData?: any[];\r\n    isPrimaryKey: boolean;\r\n    isAutoIncrement: boolean;\r\n\r\n    notNull: boolean;\r\n    defaultValue: string;\r\n\r\n    dumpValueFunction?: (any) => string\r\n}\r\n\r\nexport type TableStructure = {\r\n    name: string;\r\n    size: number;\r\n    columns: ColumnStructure[];\r\n    completeSQL: string;\r\n}\r\n\r\nexport type DatabaseStructure = {\r\n    tables: TableStructure[]\r\n}\r\n\r\n\r\nexport class DatabaseTool {\r\n\r\n    databaseDirectoryEntries: DatabaseDirectoryEntry[] = null;\r\n\r\n    worker: Worker;\r\n\r\n    queryId: number = 0;\r\n\r\n    querySuccessCallbacksMap: Map<number, QuerySuccessCallback> = new Map();\r\n    queryErrorCallbackMap: Map<number, QueryErrorCallback> = new Map();\r\n\r\n    databaseStructure: DatabaseStructure;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    initializeWorker(template: Uint8Array, queries: string[], callbackAfterInitializing?: (errors: string[]) => void,\r\n        callbackAfterRetrievingStructure?: () => void) {\r\n        \r\n        this.main.getWaitOverlay().show('Bitte warten, die Datenbank wird initialisiert...');\r\n        \r\n            if (this.worker != null) {\r\n            this.worker.terminate();\r\n        }\r\n\r\n        let t = performance.now();\r\n\r\n        // console.log(\"Starting worker...\");\r\n\r\n        let url: string = \"js/sqljs-worker/sqljsWorker.js\"\r\n        if(this.main.isEmbedded()){\r\n            //@ts-ignore\r\n            url = window.javaOnlineDir + url;\r\n        }\r\n\r\n        //@ts-ignore\r\n        if(window.jo_doc){\r\n            //@ts-ignore\r\n            this.worker = new WorkerSim();\r\n        } else {\r\n            this.worker = new Worker(url);\r\n        }\r\n        let that = this;\r\n\r\n        let errors: string[] = [];\r\n\r\n        this.worker.onmessage = () => {\r\n            // console.log(\"Database opened (\" + (performance.now() - t)/1000 + \" s)\");\r\n            that.worker.onmessage = event => {\r\n\r\n                // console.log(event.data);\r\n\r\n                let id = event.data.id;\r\n                if (event.data.error == null) {\r\n                    let querySuccessCallback = that.querySuccessCallbacksMap.get(id);\r\n                    if (querySuccessCallback != null) {\r\n                        querySuccessCallback(event.data.results);\r\n                    }\r\n                } else {\r\n                    let queryErrorCallback = that.queryErrorCallbackMap.get(id);\r\n                    if (queryErrorCallback != null) {\r\n                        queryErrorCallback(event.data.error);\r\n                    }\r\n                }\r\n\r\n                // if(event.data.buffer){\r\n                //     console.log(event.data.buffer);\r\n                // }\r\n\r\n\r\n                this.queryErrorCallbackMap.delete(id);\r\n                this.querySuccessCallbacksMap.delete(id);\r\n\r\n            };\r\n\r\n            if(queries == null) queries = [];\r\n            queries = queries.slice();\r\n            queries.unshift(\"PRAGMA foreign_keys = OFF;\")\r\n            queries.push(\"PRAGMA foreign_keys = ON;\")\r\n            let queryCount = queries.length;\r\n\r\n            let execQuery = () => {\r\n                if (queries.length > 0) {\r\n                    this.main.getWaitOverlay().setProgress(`${Math.round((1-queries.length/queryCount)*100) + \" %\"}`)\r\n                    let query = queries.shift();\r\n                    that.executeQuery(query, (result) => {\r\n                        execQuery();\r\n                    }, (error) => {\r\n                        errors.push(\"Error while setting up database: \" + error + \", query: \" + query);\r\n                        console.log({\"error\": \"Error while setting up database: \" + error, \"query\": query});\r\n                        console.log()\r\n                        execQuery();\r\n                    })\r\n                } else {\r\n                    if (callbackAfterInitializing != null) callbackAfterInitializing(errors);\r\n                    that.retrieveDatabaseStructure(() => {\r\n                        // console.log(\"Database structure retrieved (\" + (performance.now() - t)/1000 + \" s)\");\r\n                        if (callbackAfterRetrievingStructure) callbackAfterRetrievingStructure();\r\n                        this.main.getWaitOverlay().hide();\r\n\r\n                    });\r\n                }\r\n            }\r\n\r\n            execQuery();\r\n\r\n            // that.executeQuery(sql, (result) => {\r\n            //     // console.log(\"Template written (\" + (performance.now() - t)/1000 + \" s)\");\r\n\r\n            //     if (callbackAfterInitializing != null) callbackAfterInitializing();\r\n            //     that.retrieveDatabaseStructure(() => {\r\n            //         // console.log(\"Database structure retrieved (\" + (performance.now() - t)/1000 + \" s)\");\r\n            //         if (callbackAfterRetrievingStructure) callbackAfterRetrievingStructure();\r\n            //         jQuery('#bitteWarten').css('display', 'none');\r\n\r\n            //     });\r\n            //     // that.executeQuery(\"select * from test\", (results: QueryResult[]) => {console.log(results)}, (error) => {console.log(\"Error:\" + error)});\r\n            // },\r\n            //     (error) => {\r\n            //         console.log(\"Error while setting up database: \" + error);\r\n            //     });\r\n\r\n            // that.worker.postMessage({\r\n            //     action: \"export\"\r\n            // })\r\n\r\n        };\r\n\r\n        this.worker.onerror = (e) => {\r\n            errors.push(\"Worker error: \" + e.error);\r\n            console.log(\"Worker error: \" + e.error);\r\n        }\r\n\r\n        this.worker.postMessage({\r\n            id: that.queryId++,\r\n            action: \"open\",\r\n            buffer: template, /*Optional. An ArrayBuffer representing an SQLite Database file*/\r\n        });\r\n\r\n    }\r\n\r\n    executeQuery(query: string, successCallback: QuerySuccessCallback, errorCallback: QueryErrorCallback) {\r\n\r\n        let id = this.queryId++;\r\n\r\n        this.querySuccessCallbacksMap.set(id, successCallback);\r\n        this.queryErrorCallbackMap.set(id, errorCallback);\r\n\r\n        this.worker.postMessage({\r\n            id: id,\r\n            action: \"exec\",\r\n            sql: query,\r\n            params: {}\r\n        });\r\n\r\n    }\r\n\r\n    export(successCallback: (buffer: Uint8Array) => void, errorCallback: QueryErrorCallback) {\r\n\r\n        let id = this.queryId++;\r\n\r\n        this.querySuccessCallbacksMap.set(id, (results) => { successCallback(results[0].buffer)  });\r\n        this.queryErrorCallbackMap.set(id, errorCallback);\r\n\r\n        this.worker.postMessage({\r\n            id: id,\r\n            action: \"export\",\r\n            params: {}\r\n        });\r\n\r\n    }\r\n\r\n    \r\n\r\n    getDirectoryEntries(callback: (entries: DatabaseDirectoryEntry[]) => void) {\r\n        if (this.databaseDirectoryEntries != null) {\r\n            callback(this.databaseDirectoryEntries);\r\n        } else {\r\n            jQuery.getJSON(\"assets/databases/directory.json\", function (entries: DatabaseDirectoryEntry[]) {\r\n                callback(entries);\r\n            });\r\n        }\r\n    }\r\n\r\n    retrieveDatabaseStructure(callback: (dbStructure: DatabaseStructure) => void) {\r\n\r\n        /*\r\n            @see https://stackoverflow.com/questions/6460671/sqlite-schema-information-metadata\r\n        */\r\n        let sql = `SELECT name, sql FROM sqlite_master WHERE type='table';`\r\n        let that = this;\r\n\r\n        this.executeQuery(sql, (result) => {\r\n            let sql1 = \"\";\r\n            result[0]?.values?.forEach(value => sql1 += `PRAGMA table_info(${value[0]});\\nPRAGMA foreign_key_list(${value[0]});\\nselect count(*) from ${value[0]};\\n\\n`)\r\n\r\n            if (sql1 != \"\") {\r\n                this.executeQuery(sql1, (result1) => {\r\n                    // console.log(\"DB structure: \");\r\n                    // console.log(result1);\r\n\r\n                    that.databaseStructure = that.parseDatabaseStructure(result, result1)\r\n\r\n                    callback(that.databaseStructure);\r\n\r\n                }, (error) => { console.log(error)});\r\n            } else {\r\n                that.databaseStructure = { tables: [] };\r\n                callback(that.databaseStructure);\r\n            }\r\n\r\n        }, (error) => { console.log(error) });\r\n\r\n\r\n    }\r\n\r\n    parseDatabaseStructure(tables: QueryResult[], columns: QueryResult[]): DatabaseStructure {\r\n        this.databaseStructure = {\r\n            tables: []\r\n        };\r\n\r\n        let tableNameToStructureMap: Map<string, TableStructure> = new Map();\r\n\r\n        let index = 0;\r\n        for (let i = 0; i < tables[0].values.length; i++) {\r\n            let tableName = tables[0].values[i][0];\r\n            let tableSQL = tables[0].values[i][1];\r\n\r\n            let tableStructure: TableStructure = {\r\n                name: tableName,\r\n                size: 0,\r\n                completeSQL: tableSQL,\r\n                columns: []\r\n            }\r\n\r\n            tableNameToStructureMap.set(tableName, tableStructure);\r\n\r\n            this.databaseStructure.tables.push(tableStructure);\r\n\r\n            let columnArray = columns[index].values;\r\n            let foreignKeyList: any[][] = null;\r\n            if (columns.length > index + 1 && columns[index + 1].columns[0] == \"id\") {\r\n                foreignKeyList = columns[index + 1].values;\r\n                index++;\r\n            }\r\n            index++;\r\n            let size: number = columns[index].values[0][0];\r\n            index++;\r\n\r\n            tableStructure.size = size;\r\n\r\n            columnArray.forEach(columnArray1 => {\r\n                let cid: number = columnArray1[0];\r\n                let name: string = columnArray1[1];\r\n                let type: string = columnArray1[2];\r\n                let notNull: boolean = columnArray1[3] == 1;\r\n                let dflt_value: string = columnArray1[4];\r\n                let isPrimaryKey: boolean = columnArray1[5] != 0;\r\n\r\n                let columnStructure: ColumnStructure = {\r\n                    name: name,\r\n                    isPrimaryKey: isPrimaryKey,\r\n                    isAutoIncrement: isPrimaryKey && tableSQL.toLowerCase().indexOf(\"autoincrement\") >= 0,\r\n                    completeTypeSQL: type,\r\n                    table: tableStructure,\r\n                    typeLengths: [],\r\n                    defaultValue: dflt_value,\r\n                    notNull: notNull\r\n                }\r\n                /*\r\n                    columns: (8) [\"id\", \"seq\", \"table\", \"from\", \"to\", \"on_update\", \"on_delete\", \"match\"]\r\n                    values: Array(1)\r\n                    0: (8) [0, 0, \"land\", \"LNR\", \"lnr\", \"NO ACTION\", \"NO ACTION\", \"NONE\"]\r\n                */\r\n\r\n                if (foreignKeyList != null) {\r\n                    let fkInfo: any[] = foreignKeyList.find(foreignKeyInfo => foreignKeyInfo[3].toLocaleLowerCase() == name.toLocaleLowerCase());\r\n                    if (fkInfo != null) {\r\n                        columnStructure.referencesRawData = fkInfo;\r\n                    }\r\n                }\r\n\r\n                tableStructure.columns.push(columnStructure);\r\n\r\n            });\r\n\r\n        }\r\n\r\n        for (let ts of this.databaseStructure.tables) {\r\n            for (let cs of ts.columns) {\r\n                if (cs.referencesRawData != null) {\r\n                    let table = tableNameToStructureMap.get(cs.referencesRawData[2]);\r\n                    // SQlite doesn't remove foreign key references to columns of a dropped table\r\n                    if(table == null) continue;\r\n                    let column = table.columns.find(c => c.name.toLocaleLowerCase() == cs.referencesRawData[4].toLocaleLowerCase());\r\n                    cs.references = column;\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log(this.databaseStructure);\r\n\r\n        return this.databaseStructure;\r\n\r\n    }\r\n\r\n    static getDumpType(dump: Uint8Array): DatabaseDumpType {\r\n\r\n        let sqliteMagicBytes: number[] = [0x53, 0x51, 0x4c, 0x69, 0x74, 0x65];\r\n        let zlibMagicByte: number = 0x78;\r\n\r\n        let found: boolean = true;\r\n        for (let i = 0; i < sqliteMagicBytes.length; i++) {\r\n            if (sqliteMagicBytes[i] != dump[i]) {\r\n                found = false;\r\n                break;\r\n            }\r\n        }\r\n        if (found) return \"binaryUncompressed\";\r\n\r\n        if (dump[0] == zlibMagicByte) return \"binaryCompressed\";\r\n\r\n        return \"other\";\r\n\r\n    }\r\n\r\n\r\n}","import { TokenType } from \"../lexer/Token.js\";\r\nimport { ASTNode, ConstantNode, CreateTableColumnNode, CreateTableNode, ForeignKeyInfo, InsertNode } from \"./AST.js\";\r\nimport { SQLStatement } from \"./Parser.js\";\r\n\r\nexport class StatementCleaner {\r\n\r\n    MaxRowsPerInsert: number = 300;\r\n\r\n    clean(statement: SQLStatement): string {\r\n        switch(statement.ast.type){\r\n            case TokenType.keywordCreate:   // Create Table statement\r\n                statement.sqlCleaned = this.cleanCreateTableStatement(statement.ast);\r\n                return statement.sqlCleaned;\r\n            case TokenType.keywordInsert:\r\n                statement.sqlCleaned = this.cleanInsertStatement(statement.ast);\r\n                return statement.sqlCleaned;\r\n            default:\r\n                return statement.sql;\r\n                break;\r\n        }\r\n    }\r\n\r\n    cleanInsertStatement(ast: InsertNode): string {\r\n        let statementHeader: string = `insert into ${ast.table.identifier}`;\r\n\r\n        if(ast.columnList != null && ast.columnList.length > 0){\r\n            statementHeader += `(${ast.columnList.map(c => c.identifier).join(\", \")})`;\r\n        }\r\n\r\n        statementHeader += '\\nvalues\\n';\r\n\r\n        let st = \"\";\r\n        \r\n        let lines: string[] = [];\r\n        if(ast.values != null && ast.values.length > 0){\r\n            for(let vline of ast.values){\r\n                lines.push(`\\n(${vline.map(v => this.cleanValue(v)).join(\", \")})`);\r\n            }\r\n            //st += lines.join(\",\\n\");\r\n        }\r\n\r\n        while(lines.length > 0){\r\n            st += statementHeader;\r\n            st += lines.splice(0, Math.max(this.MaxRowsPerInsert, lines.length)).join(\",\\n\");\r\n            st += \";\\n\";\r\n        }\r\n\r\n        return st;\r\n    }\r\n\r\n    cleanValue(v: ConstantNode){\r\n        if(v.constantType == TokenType.stringConstant){\r\n            let s: string = v.constant;\r\n            s = s.replace(/'/g, \"''\");\r\n            return `'${s}'`;\r\n        }else {\r\n            return v.constant;\r\n        }\r\n    }\r\n\r\n    cleanCreateTableStatement(ast: CreateTableNode): string {\r\n        let st: string = `create table ${ast.ifNotExists?\" if not exists\":\"\"} ${ast.identifier}(\\n   `;\r\n\r\n        st += ast.columnList.map( column => this.cleanColumnDef(column)).join(\",\\n   \");\r\n        if(ast.foreignKeyInfoList != null && ast.foreignKeyInfoList.length > 0){\r\n            st += \",\\n   \" + ast.foreignKeyInfoList.map(fki => this.cleanForeignKeyInfo(fki)).join(\",\\n   \");\r\n        }\r\n\r\n        let pkc = ast.combinedPrimaryKeyColumns.slice().map(s => s.toLocaleLowerCase());\r\n        for(let column of ast.columnList){\r\n            let c = column.identifier.toLocaleLowerCase();\r\n            if(column.isAutoIncrement && pkc.indexOf(c) >= 0){\r\n                pkc.splice(pkc.indexOf(c), 1);\r\n            }\r\n        }\r\n\r\n        if(pkc.length > 0){\r\n            st += `,\\n   primary key(${pkc.join(\", \")})`;\r\n        }\r\n\r\n        if(ast.uniqueConstraints.length > 0){\r\n            st += \",\\n   \" + ast.uniqueConstraints.map(uk => 'unique(' + uk.join(\", \") + \")\").join(\",\\n   \");\r\n        }\r\n\r\n        st += '\\n);';\r\n\r\n        return st;\r\n    }\r\n\r\n    cleanForeignKeyInfo(fki: ForeignKeyInfo): string {\r\n        let fkiString = `foreign key (${fki.column}) references ${fki.referencesTable}(${fki.referencesColumn})`;\r\n        if(fki.onDelete){\r\n            fkiString += ` on delete ` + fki.onDelete;\r\n        }\r\n        if(fki.onUpdate){\r\n            fkiString += ` on update ` + fki.onUpdate;\r\n        }\r\n        return fkiString;\r\n    }\r\n\r\n    cleanColumnDef(column: CreateTableColumnNode):string {\r\n\r\n        let type = column.baseType.toString();\r\n        if(type == \"int\" && column.isAutoIncrement){\r\n            type = \"integer\";\r\n        }\r\n\r\n        let st: string = `${column.identifier} ${type}`;\r\n        if(column.parameters != null && column.parameters.length > 0 && !column.isAutoIncrement){\r\n            st += `(${column.parameters.join(\", \")})`;\r\n        }\r\n        if(column.notNull){\r\n            st += \" not null\";\r\n        }\r\n        if(column.defaultValue != null){\r\n            st += \" default \" + column.defaultValue;\r\n        }\r\n        if(column.isPrimary || column.isAutoIncrement){\r\n            st += \" primary key\";\r\n        }\r\n        if(column.isAutoIncrement){\r\n            st += \" autoincrement\";\r\n        }\r\n        if(column.foreignKeyInfo != null){\r\n            let fki = column.foreignKeyInfo;\r\n            let c: string = fki.referencesColumn;\r\n            if(fki.referencesTable) c = fki.referencesTable + \"(\" + c + \")\";\r\n            st += \" references \" + c;\r\n        }\r\n        if(column.collate != null){\r\n            let collate = column.collate.toLocaleLowerCase();\r\n            if([\"binary\", \"nocase\", \"rtrim\"].indexOf(collate) >= 0){\r\n                st += \" collate \" + collate;\r\n            }\r\n        }\r\n        let parameters = column.parameters? column.parameters : [0, 0];\r\n        let checkFunction = column.baseType.checkFunction(column.identifier, parameters);\r\n        if(checkFunction != \"\"){\r\n            st += \" \" + checkFunction;\r\n        }\r\n        return st;\r\n    }\r\n\r\n}","import { Lexer } from \"../compiler/lexer/Lexer.js\";\nimport { TokenType } from \"../compiler/lexer/Token.js\";\nimport { AlterTableNode, CreateTableNode, InsertNode } from \"../compiler/parser/AST.js\";\nimport { Module } from \"../compiler/parser/Module.js\";\nimport { Parser, SQLStatement } from \"../compiler/parser/Parser.js\";\nimport { StatementCleaner } from \"../compiler/parser/StatementCleaner.js\";\nimport { MainBase } from \"../main/MainBase.js\";\nimport { LoadableDatabase } from \"./DatabaseLoader.js\";\nimport { DatabaseTool } from \"./DatabaseTools.js\";\n\nexport class MySqlImporter {\n\n    private createTableNodes: CreateTableNode[];\n    private insertNodes: InsertNode[];\n    private tableModifyingNodes: AlterTableNode[];\n\n    constructor(private main: MainBase) {\n\n    }\n\n    async loadFromUrl(url: string): Promise<LoadableDatabase> {\n        if (url == null) return;\n\n        let text = null;\n        if (url.endsWith(\".zip\")) {\n            text = await this.unzipURL(url);\n        } else {\n            text = await (await fetch(url)).text();\n        }\n\n        return this.importFromText(text);\n    }\n\n    async loadFromFile(file: globalThis.File): Promise<LoadableDatabase> {\n        if (file == null) return;\n\n        if (file.name.endsWith(\".zip\")) {\n            let text = await this.unzipFile(file);\n            return this.importFromText(text);\n        } else {\n\n            return new Promise<LoadableDatabase>(\n                (resolve, reject) => {\n                    var reader = new FileReader();\n                    reader.onload = (event) => {\n                        let text = <string>event.target.result;\n                        resolve(this.importFromText(text));\n                    };\n                    reader.readAsText(file);\n                }\n            )\n\n\n        }\n    }\n\n    async unzipURL(url: string): Promise<string> {\n        //@ts-ignore\n        const reader = new zip.ZipReader(new zip.HttpReader(url));\n        return this.unzipIntern(reader);\n    }\n\n    async unzipFile(file: globalThis.File): Promise<string> {\n        // create a BlobReader to read with a ZipReader the zip from a Blob object\n        //@ts-ignore\n        const reader = new zip.ZipReader(new zip.BlobReader(file));\n        return this.unzipIntern(reader);\n    }\n\n    async unzipIntern(reader: any): Promise<string> {\n        // get all entries from the zip\n        let entries = await reader.getEntries();\n        entries = entries.filter(entry => entry.filename.endsWith(\".sql\"))\n        let text: string = null;\n        if (entries.length) {\n\n            // get first entry content as text by using a TextWriter\n            text = await entries[0].getData(\n                // writer\n                //@ts-ignore\n                new zip.TextWriter(),\n                // options\n                {\n                    onprogress: (index, max) => {\n                        // onprogress callback\n                    }\n                }\n            );\n        }\n\n        // close the ZipReader\n        await reader.close();\n\n        return text;\n    }\n\n    private async importFromText(text: string): Promise<LoadableDatabase> {\n        if (text == null) return null;\n\n        let lexer: Lexer = new Lexer();\n        let lexOutput = lexer.lex(text);\n\n        let parser: Parser = new Parser();\n        let m: Module = new Module({\n            dirty: false,\n            name: \"\",\n            saved: true,\n            student_edited_after_revision: false,\n            submitted_date: null,\n            text: text,\n            text_before_revision: null,\n            version: 0\n        }, this.main);\n        m.tokenList = lexOutput.tokens;\n\n        parser.parse(m);\n\n        this.createTableNodes = m.sqlStatements.filter(st => st.ast.type == TokenType.keywordCreate).map(st => <CreateTableNode>st.ast);\n        this.insertNodes = m.sqlStatements.filter(st => st.ast.type == TokenType.keywordInsert).map(st => <InsertNode>st.ast);\n        this.tableModifyingNodes = m.sqlStatements.filter(st => st.ast.type == TokenType.keywordAlter &&\n            (<AlterTableNode>st.ast).kind == \"omittedKind\").map(st => <AlterTableNode>st.ast);\n\n        for (let tmn of this.tableModifyingNodes) {\n            let createTableNode = this.findCreateTableNode(tmn.tableIdentifier);\n            if (createTableNode == null) continue;\n\n            if (tmn.primaryKeys != null) {\n                createTableNode.combinedPrimaryKeyColumns = tmn.primaryKeys;\n                createTableNode.columnList.forEach(c => c.isPrimary = false);\n            }\n\n            if (tmn.autoIncrementColumn != null) {\n                let pcn = this.findCreateTableColumnNode(createTableNode, tmn.autoIncrementColumn);\n                if (pcn != null) pcn.isPrimary = true;\n            }\n\n            if (tmn.modifyColumnInfo != null) {\n                for (let mci of tmn.modifyColumnInfo) {\n                    let mcn = this.findCreateTableColumnNode(createTableNode, mci.identifier);\n                    let index = createTableNode.columnList.indexOf(mcn);\n                    createTableNode.columnList.splice(index, 1, mci);\n                }\n            }\n\n            if (tmn.foreignKeys != null) {\n                for (let fk of tmn.foreignKeys) {\n                    createTableNode.foreignKeyInfoList.push(fk);\n                }\n            }\n\n            if (tmn.indices != null) {\n                for (let index of tmn.indices) {\n                    m.sqlStatements.push({\n                        acceptedBySQLite: true,\n                        from: null, to: null, hasErrors: false,\n                        ast: {\n                            type: TokenType.keywordIndex,\n                            columnIdentifier: index.column,\n                            indexIdentifier: index.index_name,\n                            tableIdentifier: tmn.tableIdentifier,\n                            unique: index.unique,\n                            position: null, endPosition: null, symbolTable: null\n                        },\n                        sql: `create ${index.unique ? 'unique ' : ''} index ${index.index_name} on ${tmn.tableIdentifier}(${index.column});`\n                    })\n                }\n            }\n        }\n\n        return this.makeDatabase(m.sqlStatements);\n    }\n\n    private findCreateTableNode(tableIdentifier: string): CreateTableNode {\n        tableIdentifier = tableIdentifier.toLocaleLowerCase();\n        return this.createTableNodes.find(node => node.identifier.toLocaleLowerCase() == tableIdentifier);\n    }\n\n    private findCreateTableColumnNode(tableNode: CreateTableNode, columnIdentifier: string) {\n        columnIdentifier = columnIdentifier.toLocaleLowerCase();\n        return tableNode.columnList.find(columnNode => columnNode.identifier.toLocaleLowerCase() == columnIdentifier)\n    }\n\n    private async makeDatabase(statements: SQLStatement[]): Promise<LoadableDatabase> {\n\n        let statementCleaner: StatementCleaner = new StatementCleaner();\n\n        let sqlStatements: string[] = statements.filter(st => st.ast.type != TokenType.omittedeStatement)\n            .map(st => statementCleaner.clean(st));\n        sqlStatements.unshift(\"PRAGMA foreign_keys = OFF;\");\n        sqlStatements.push(\"PRAGMA foreign_keys = ON;\")\n\n        let dbTool = new DatabaseTool(this.main);\n\n        let promise = new Promise<LoadableDatabase>((resolve, reject) => {\n            dbTool.initializeWorker(null, sqlStatements, () => {\n                dbTool.export((buffer) => {\n                    resolve({\n                        binDump: buffer\n                    })\n                }, (error) => {\n                    reject(error);\n                })\n            });\n\n        })\n\n        return promise;\n\n    }\n\n\n}","import { MainBase } from \"../main/MainBase.js\";\r\nimport { LoadableDatabase } from \"./DatabaseLoader.js\";\r\nimport { DatabaseTool } from \"./DatabaseTools.js\";\r\nimport { downloadFile } from \"./HtmlTools.js\";\r\nimport { MySqlImporter } from \"./MySqlImporter.js\";\r\n\r\nexport class DatabaseImportExport {\r\n\r\n    async loadFromFile(file: globalThis.File, main: MainBase): Promise<LoadableDatabase>{\r\n        let that = this;\r\n        if (file == null) return;\r\n        main.getWaitOverlay().show(\"Lese Datei ein...\");\r\n        if(file.name.endsWith(\".sql\") || file.name.endsWith(\".zip\")){\r\n            let ld = await new MySqlImporter(main).loadFromFile(file);\r\n            main.getWaitOverlay().hide();\r\n            return ld;\r\n        } else {\r\n            var reader = new FileReader();\r\n            return new Promise<LoadableDatabase>((resolve, reject) => {\r\n                reader.onload = (event) => {\r\n                    let ab: ArrayBuffer = <ArrayBuffer>event.target.result;\r\n                    let db: Uint8Array = new Uint8Array(ab);\r\n        \r\n                    //@ts-ignore\r\n                    if(DatabaseTool.getDumpType(db) == \"binaryCompressed\") db = pako.inflate(db);\r\n                    \r\n                    main.getWaitOverlay().hide();\r\n                    resolve({binDump: db});\r\n                };\r\n                reader.readAsArrayBuffer(file);\r\n    \r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    saveToFile(dbTool: DatabaseTool){\r\n        dbTool.export((db) => {\r\n            let filename: string = prompt(\"Bitte geben Sie den Dateinamen ein\", \"datenbank.sqLite\");\r\n            if (filename == null) {\r\n                alert(\"Der Dateiname ist leer, daher wird nichts gespeichert.\");\r\n                return;\r\n            }\r\n            if (!filename.endsWith(\".sqLite\")) filename = filename + \".sqLite\";\r\n            downloadFile(new Blob([db.buffer]), filename, true);\r\n        }, () => {});\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { CreateWorkspaceData, WorkspaceData } from \"../../communication/Data.js\";\r\nimport { DatabaseImportExport } from \"../../tools/DatabaseImportExport.js\";\r\nimport { LoadableDatabase } from \"../../tools/DatabaseLoader.js\";\r\nimport { DatabaseTool } from \"../../tools/DatabaseTools.js\";\r\nimport { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { TemplateUploader } from \"../../tools/TemplateUploader.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionElement } from \"./Accordion.js\";\r\n\r\ntype CreateMode = \"emptyDatabase\" | \"fromTemplate\" | \"useExistingDatabase\" | \"useDumpFile\";\r\n\r\nexport class NewDatabaseDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    database: LoadableDatabase;\r\n\r\n    constructor(private main: Main, private owner_id: number, private path: string[]) {\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Neue Datenbank anlegen</div>\r\n\r\n            <div class=\"jo_ds_settings\">\r\n               <div class=\"jo_ds_settings_caption\">Name der Datenbank:</div><div><input class=\"dialog-input jo_databasename\" value=\"Neue Datenbank\"></input></div>\r\n            </div>\r\n\r\n             <div class=\"jo_tabheadings jo_cdtabheading\">\r\n             <div class=\"jo_tabheading\" data-target=\"jo_createEmptyDatabaseTab\">Leere Datenbank</div>\r\n             <div class=\"jo_tabheading jo_active\" data-target=\"jo_createDatabaseFromTemplateTab\">Von Vorlage kopieren</div>\r\n             <div class=\"jo_tabheading\" data-target=\"jo_createDatabaseUseExistingTab\">Bestehende Datenbank mitnutzen</div>\r\n             <div class=\"jo_tabheading\" data-target=\"jo_createDatabaseUseDumpFile\">Import aus Dumpfile (SQLite- oder MySQL-Format)</div>\r\n             </div>\r\n             <div class=\"jo_tabs\" style=\"width: 100%; margin-top: 10px\">\r\n                 <div class=\"jo_createEmptyDatabaseTab\">\r\n                    <div class=\"jo_createDatabaseDescription\">\r\n                        Erstellt wird eine leere Datenbank.\r\n                    </div>\r\n                 </div>\r\n                 <div class=\"jo_createDatabaseFromTemplateTab jo_active\">\r\n                    <div class=\"jo_ds_settings\">\r\n                       <div class=\"jo_ds_settings_caption\">Vorlage suchen:</div><div><input class=\"dialog-input jo_templatename\"></input></div>\r\n                    </div>\r\n                    <div class=\"jo_scrollable jo_templatelist\"></div>\r\n                 </div>\r\n                <div class=\"jo_createDatabaseUseExistingTab\">\r\n                    <div class=\"jo_createDatabaseDescription\">Wenn Du die Datenbank einer anderen Nutzerin/eines anderen Nutzers mitnutzen möchtest, brauchst Du einen Zugriffscode von ihr/ihm. Er ist unter Datenbank->Einstellungen zu finden.            \r\n                    </div>\r\n                    <div class=\"jo_ds_settings\">\r\n                       <div class=\"jo_ds_settings_caption\">Zugriffscode:</div><div><input class=\"dialog-input jo_databasecodeinput\"></input></div>\r\n                    </div>\r\n                 </div>\r\n                <div class=\"jo_createDatabaseUseDumpFile\">\r\n                    <div class=\"jo_createDatabaseDescription\">Wähle hier die Datei mit dem Datenbank-Dump aus (Endung .sqLite (SQLite-Datenbankdatei) oder .zip (gepackter MySql-Dump) oder .sql (MySql-Dump)):</div>\r\n                    <input type=\"file\" class=\"jo_dumpfile\" name=\"dumpfile\" style=\"padding: 10px\"/>\r\n                    <div class=\"jo_databaseimport_dropzone\" style=\"width: 70vw; margin-left: 10px\">Alternativ: Datei in dieses Feld ziehen</div>\r\n                    <div class=\"jo_databaseimport_ok\"></div>\r\n                 </div>\r\n             </div>\r\n\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_create_database_button\">Datenbank anlegen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        makeTabs(this.$dialog);\r\n\r\n        let $templatelist = jQuery('.jo_templatelist');\r\n        this.main.networkManager.fetchTemplateList((templatelist) => {\r\n            templatelist.forEach(tle => {\r\n\r\n                let $tle = jQuery('<div class=\"jo_templateListEntry\"></div>')\r\n                $tle.append(jQuery(`<div class=\"jo_tle_firstline\">${tle.name} <span class=\"jo_tle_ownername\"> (von ${tle.ownerName})</span></div>`))\r\n                $tle.append(jQuery(`<div class=\"jo_tle_secondline\">${tle.description}</div>`))\r\n                $tle.data('templateId', tle.id);\r\n                $tle.data('name', tle.name);\r\n\r\n                $templatelist.append($tle);\r\n                tle.$tle = <JQuery<HTMLDivElement>>$tle;\r\n\r\n                $tle.on('pointerdown', () => {\r\n                    $templatelist.find('.jo_templateListEntry').removeClass('jo_active');\r\n                    $tle.addClass('jo_active');\r\n                })\r\n\r\n            })\r\n            let $templateName = <JQuery<HTMLInputElement>>jQuery('.jo_templatename');\r\n            $templateName.on('input', () => {\r\n                let s = <string>$templateName.val();\r\n                $templatelist.find('.jo_templateListEntry').hide();\r\n                templatelist.forEach(tle => {\r\n                    let tleString = tle.name + tle.ownerName + (tle.description ? tle.description : \"\");\r\n                    if (tleString.indexOf(s) >= 0) tle.$tle.show();\r\n                })\r\n            })\r\n        })\r\n\r\n        let $dropZone = jQuery('.jo_databaseimport_dropzone');\r\n\r\n        $dropZone.on('dragover', (evt) => {\r\n            evt.stopPropagation();\r\n            evt.preventDefault();\r\n            evt.originalEvent.dataTransfer.dropEffect = 'copy';\r\n        })\r\n        $dropZone.on('drop', (evt) => {\r\n            evt.stopPropagation();\r\n            evt.preventDefault();\r\n\r\n            var files = evt.originalEvent.dataTransfer.files;\r\n            this.importFile(files);\r\n        })\r\n\r\n        let $dumpFileInput = jQuery('.jo_dumpfile');\r\n        $dumpFileInput.on('change', (event) => {\r\n            //@ts-ignore\r\n            var files: FileList = event.originalEvent.target.files;\r\n            this.importFile(files).then(() => {\r\n                $dumpFileInput.val(null);\r\n            });\r\n\r\n        })\r\n\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { this.showMainWindow(); });\r\n        jQuery('#jo_ds_create_database_button').on('click', () => {\r\n            let createMode: CreateMode = \"emptyDatabase\";\r\n            if (jQuery('.jo_createDatabaseFromTemplateTab').hasClass('jo_active')) createMode = \"fromTemplate\";\r\n            if (jQuery('.jo_createDatabaseUseExistingTab').hasClass('jo_active')) createMode = \"useExistingDatabase\";\r\n            if (jQuery('.jo_createDatabaseUseDumpFile').hasClass('jo_active')) createMode = \"useDumpFile\";\r\n\r\n            let workspaceData: CreateWorkspaceData = {\r\n                id: null,\r\n                isFolder: false,\r\n                name: <string>jQuery('.dialog-input.jo_databasename').val(),\r\n                path: this.path.join(\"/\"),\r\n            }\r\n\r\n            switch (createMode) {\r\n                case \"emptyDatabase\":\r\n                    this.createWorkspace(workspaceData);\r\n                    break;\r\n                case \"fromTemplate\":\r\n                    let $template = jQuery('.jo_templateListEntry.jo_active');\r\n                    if ($template.length != 1) {\r\n                        alert('Bitte wählen Sie genau eine Vorlage aus.');\r\n                        return;\r\n                    } else {\r\n                        workspaceData.template_database_id = $template.data('templateId');\r\n                        if (workspaceData.name == \"Neue Datenbank\") workspaceData.name = $template.data('name');\r\n                        this.createWorkspace(workspaceData);\r\n                    }\r\n                    break;\r\n                case \"useExistingDatabase\":\r\n                    let code = <string>jQuery('.jo_databasecodeinput').val();\r\n                    let tIndex = code.indexOf(\"T\");\r\n                    if (tIndex == -1) {\r\n                        alert(\"Der Zugriffscode muss das Zeichen T enthalten.\");\r\n                        return;\r\n                    }\r\n                    workspaceData.otherDatabaseId = Number.parseInt(code.substring(0, tIndex));\r\n                    workspaceData.secret = code.substring(tIndex + 1);\r\n                    this.createWorkspace(workspaceData);\r\n                    break;\r\n                case \"useDumpFile\":\r\n                    if (this.database != null) {\r\n                        new TemplateUploader().uploadCurrentDatabase(-1, this.main, this.database.binDump,\r\n                            \"uploadBaseTemplateForWorkspace\",\r\n                            (response) => {\r\n                            workspaceData.template_id = response.newTemplateId;\r\n                            this.createWorkspace(workspaceData);\r\n                        });\r\n\r\n                    } else {\r\n                        alert('Bitte laden Sie zuerst den Binärdump einer Datenbank hoch.')\r\n                        return;\r\n                    }\r\n                    break;\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    private createWorkspace(workspaceData: CreateWorkspaceData) {\r\n        this.main.networkManager.sendCreateWorkspace(workspaceData, this.owner_id, (error?: string) => {\r\n            if (error != null) { alert(error); return; }\r\n\r\n            let w = this.main.createNewWorkspace(workspaceData.name, this.owner_id);\r\n            w.path = workspaceData.path;\r\n            w.id = workspaceData.id;\r\n            w.sql_history = \"\";\r\n\r\n            let projectExplorer = this.main.projectExplorer;\r\n\r\n            this.main.workspaceList.push(w);\r\n            let accordionElement: AccordionElement = {\r\n                name: workspaceData.name,\r\n                externalElement: w,\r\n                iconClass: \"workspace\",\r\n                isFolder: false,\r\n                path: this.path\r\n            };\r\n\r\n            projectExplorer.workspaceListPanel.addElement(accordionElement, true);\r\n\r\n            w.renderSettingsButton(accordionElement);\r\n\r\n            projectExplorer.workspaceListPanel.sortElements();\r\n            projectExplorer.fileListPanel.sortElements();\r\n\r\n            projectExplorer.setWorkspaceActive(w);\r\n\r\n            this.showMainWindow();\r\n\r\n        });\r\n    }\r\n\r\n    async importFile(files: FileList) {\r\n        let that = this;\r\n        let importer = new DatabaseImportExport();\r\n        let db: LoadableDatabase = await importer.loadFromFile(files[0], this.main)\r\n        let isDatabase: boolean = false;\r\n        let dumpFileType = DatabaseTool.getDumpType(db.binDump);\r\n        if (dumpFileType == \"binaryCompressed\") {\r\n            // @ts-ignore\r\n            let dbUncompressed = pako.inflate(db.binDump);\r\n            if (DatabaseTool.getDumpType(dbUncompressed) == \"binaryUncompressed\") {\r\n                isDatabase = true;\r\n            }\r\n        } else if (DatabaseTool.getDumpType(db.binDump) == \"binaryUncompressed\") {\r\n            //@ts-ignore\r\n            db.binDump = pako.deflate(db.binDump);\r\n            isDatabase = true;\r\n        }\r\n\r\n        if (isDatabase) {\r\n            that.database = db;\r\n            jQuery('.jo_databaseimport_ok').html(\"Die Datenbankdatei wurde erfolgreich von Datei eingelesen. Sie können die Datenbank jetzt durch Klick auf den Button unten erstellen.\");\r\n        } else {\r\n            alert(\"In der Datei befindet sich kein Binärdump einer Datenbank.\");\r\n        }\r\n    }\r\n\r\n    showMainWindow() {\r\n        jQuery('#main').css('visibility', 'visible');\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n    }\r\n\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { PasswordChanger } from \"./UserMenu.js\";\r\nimport { DatabaseSettingsDialog } from \"./DatabaseSettingsDialog.js\";\r\nimport { DatabaseImportExport } from \"../../tools/DatabaseImportExport.js\";\r\nimport { NewDatabaseDialog } from \"./NewDatabaseDialog.js\";\r\n\r\nexport type Action = (identifier: string) => void;\r\n\r\ntype Menu = {\r\n    items: MenuItem[];\r\n    $element?: JQuery<HTMLElement>;\r\n    level?: number;\r\n}\r\n\r\ntype MenuItem = {\r\n    identifier: string;\r\n    $element?: JQuery<HTMLElement>;\r\n    action?: Action;\r\n    link?: string;\r\n    subMenu?: Menu;\r\n}\r\n\r\nexport class MainMenu {\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n\r\n    currentSubmenu: { [level: number]: JQuery<HTMLElement> } = {};\r\n    openSubmenusOnMousemove: boolean = false;\r\n\r\n    initGUI(user: UserData) {\r\n\r\n        let that = this;\r\n        let editor = this.main.getMonacoEditor();\r\n\r\n        let mainMenu: Menu = {\r\n            items: [\r\n                {\r\n                    identifier: \"Datei\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Speichern und Beenden\",\r\n                                action: () => { jQuery('#buttonLogout').trigger(\"click\"); }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Bearbeiten\", subMenu:\r\n                    {\r\n                        items: [\r\n                            { identifier: \"Rückgängig (Strg + z)\", action: () => { editor.trigger(\".\", \"undo\", {}); } },\r\n                            { identifier: \"Wiederholen (Strg + y)\", action: () => { editor.trigger(\".\", \"redo\", {}); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Kopieren (Strg + c)\", action: () => { editor.getAction(\"editor.action.clipboardCopyAction\").run(); } },\r\n                            { identifier: \"Ausschneiden (Strg + x)\", action: () => { editor.getAction(\"editor.action.clipboardCutAction\").run(); } },\r\n                            { identifier: \"Nach oben kopieren (Alt + Shift + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.copyLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten kopieren (Alt + Shift + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.copyLinesDownAction\").run(); } },\r\n                            { identifier: \"Nach oben verschieben (Alt + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.moveLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten verschieben (Alt + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.moveLinesDownAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Suchen... (Strg + f)\", action: () => { editor.getAction(\"actions.find\").run(); } },\r\n                            { identifier: \"Ersetzen... (Strg + h)\", action: () => { editor.getAction(\"editor.action.startFindReplaceAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Aus-/Einkommentieren (Strg + #)\", action: () => { editor.getAction(\"editor.action.commentLine\").run(); } },\r\n                            { identifier: \"Dokument formatieren (Alt + Shift + f)\", action: () => { editor.getAction(\"editor.action.formatDocument\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Finde zugehörige Klammer (Strg + k)\", action: () => { editor.getAction(\"editor.action.jumpToBracket\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Alles zusammenfalten\", action: () => { editor.getAction(\"editor.foldAll\").run(); } },\r\n                            { identifier: \"Alles auffalten\", action: () => { editor.getAction(\"editor.unfoldAll\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Vorschlag auslösen (Strg + Leertaste)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.triggerSuggest\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n                            { identifier: \"Parameterhilfe (Strg + Shift + Leertaste)\", action: () => { editor.getAction(\"editor.action.triggerParameterHints\").run(); } },\r\n                            {\r\n                                identifier: \"Gehe zur Definition (Strg + Click)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.revealDefinition\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Ansicht\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Theme\",\r\n                                subMenu: {\r\n                                    items: [\r\n                                        {\r\n                                            identifier: \"Dark\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"dark\");\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            identifier: \"Light\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"light\");\r\n                                            }\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Hoher Kontrast im Editor ein/aus\", action: () => { editor.getAction(\"editor.action.toggleHighContrast\").run(); } },\r\n\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Zoom out (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(-4); } },\r\n                            { identifier: \"Zoom normal\", action: () => { this.main.editor.setFontSize(14); } },\r\n                            { identifier: \"Zoom in (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(4); } },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Datenbank\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Neue Datenbank anlegen...\", action: () => {\r\n                                    let owner_id: number = that.main.user.id;\r\n                                    if (that.main.workspacesOwnerId != null) {\r\n                                        owner_id = that.main.workspacesOwnerId;\r\n                                    }\r\n\r\n                                    new NewDatabaseDialog(that.main, owner_id, []);\r\n                                }\r\n                            },\r\n                            { identifier: \"Einstellungen...\", action: () => { new DatabaseSettingsDialog(this.main, this.main.currentWorkspace) } },\r\n                            {\r\n                                identifier: \"Export als Binärdump (.sqLite-File)...\", action: () => {\r\n                                    new DatabaseImportExport().saveToFile(this.main.getDatabaseTool());\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n\r\n            ]\r\n        };\r\n\r\n        jQuery('#mainmenu').empty();\r\n        this.initMenu(mainMenu, 0);\r\n    }\r\n\r\n    switchTheme(theme: string) {\r\n        this.main.viewModeController.setTheme(theme);\r\n    }\r\n\r\n    initMenu(menu: Menu, level?: number) {\r\n\r\n        menu.level = level;\r\n\r\n        if (level == 0) {\r\n            menu.$element = jQuery('#mainmenu');\r\n        } else {\r\n            menu.$element = jQuery('<div class=\"jo_submenu\"></div>');\r\n            jQuery('body').append(menu.$element);\r\n        }\r\n\r\n        menu.$element.data('model', menu);\r\n        for (let mi of menu.items) {\r\n            if (mi.identifier == '-') {\r\n                mi.$element = jQuery('<div class=\"jo_menuitemdivider\"></div>');\r\n            } else {\r\n                mi.$element = jQuery('<div>' + mi.identifier + '</div>');\r\n                if (mi.link != null) {\r\n                    let $link = jQuery('<a href=\"' + mi.link + '\" target=\"_blank\" class=\"jo_menulink\"></a>');\r\n                    $link.on(\"mousedown\", (event) => {\r\n                        event.stopPropagation();\r\n                        setTimeout(() => {\r\n                            menu.$element.hide();\r\n                        }, 500);\r\n                    })\r\n                    $link.append(mi.$element);\r\n                    mi.$element = $link;\r\n                }\r\n                if (mi.subMenu != null) {\r\n                    this.initMenu(mi.subMenu, level + 1);\r\n                }\r\n                this.initMenuitemCallbacks(menu, mi);\r\n                if (level == 0) {\r\n                    mi.$element.addClass('jo_mainmenuitem');\r\n                }\r\n            }\r\n            menu.$element.append(mi.$element);\r\n            mi.$element.data('model', mi);\r\n        }\r\n\r\n        let that = this;\r\n        jQuery(document).on('mousedown', () => {\r\n            for (let i = 0; i < 5; i++) {\r\n                if (that.currentSubmenu[i] != null) {\r\n                    that.currentSubmenu[i].hide();\r\n                    that.currentSubmenu[i] = null;\r\n                }\r\n            }\r\n            that.openSubmenusOnMousemove = false;\r\n        });\r\n\r\n    }\r\n\r\n    initMenuitemCallbacks(menu: Menu, mi: MenuItem) {\r\n        let that = this;\r\n\r\n        if (mi.action != null) {\r\n            mi.$element.on('mousedown', (ev) => { mi.action(mi.identifier); });\r\n        }\r\n\r\n        if (mi.subMenu != null) {\r\n            mi.$element.on('mousedown', (ev) => {\r\n                that.opensubmenu(mi);\r\n                that.openSubmenusOnMousemove = true;\r\n                ev.stopPropagation();\r\n            });\r\n\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.openSubmenusOnMousemove) {\r\n                    that.opensubmenu(mi);\r\n                } else {\r\n                    if (that.currentSubmenu[menu.level + 1] != null) {\r\n                        that.currentSubmenu[menu.level + 1].hide();\r\n                        that.currentSubmenu[menu.level + 1] = null;\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.currentSubmenu[menu.level + 1] != null) {\r\n                    that.currentSubmenu[menu.level + 1].hide();\r\n                    that.currentSubmenu[menu.level + 1] = null;\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    opensubmenu(mi: MenuItem) {\r\n\r\n        let subMenu = mi.subMenu;\r\n\r\n        let left: number;\r\n        let top: number;\r\n        if (subMenu.level == 1) {\r\n            left = mi.$element.position().left;\r\n            top = 30;\r\n        } else {\r\n            left = mi.$element.offset().left + mi.$element.width();\r\n            top = mi.$element.offset().top;\r\n        }\r\n\r\n        subMenu.$element.css({\r\n            top: \"\" + top + \"px\",\r\n            left: \"\" + left + \"px\"\r\n        })\r\n\r\n        if (this.currentSubmenu[subMenu.level] != null) {\r\n            this.currentSubmenu[subMenu.level].hide();\r\n        }\r\n\r\n        subMenu.$element.show();\r\n        this.currentSubmenu[subMenu.level] = subMenu.$element;\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { openContextMenu, makeEditable, ContextMenuItem, animateToTransparent, jo_mouseDetected } from \"../../tools/HtmlTools.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { escapeHtml } from \"../../tools/StringTools.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type AccordionElement = {\r\n    name: string;\r\n    sortName?: string;      // if sortName == null, then name will be used when sorting\r\n    externalElement?: any;\r\n    iconClass?: string;\r\n    $htmlFirstLine?: JQuery<HTMLElement>;\r\n    $htmlSecondLine?: JQuery<HTMLElement>;\r\n\r\n    isFolder: boolean;\r\n    path: string[];\r\n}\r\n\r\nexport type AccordionContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: (panel: AccordionElement) => void;\r\n    subMenu?: AccordionContextMenuItem[]\r\n}\r\n\r\nexport class AccordionPanel {\r\n\r\n    elements: AccordionElement[] = [];\r\n\r\n    $captionElement: JQuery<HTMLElement>;\r\n    $buttonNew: JQuery<HTMLElement>;\r\n    $listElement: JQuery<HTMLElement>;\r\n\r\n    private fixed: boolean;\r\n\r\n    dontSortElements: boolean = false;\r\n\r\n    static currentlyDraggedElement: AccordionElement;\r\n    static currentlyDraggedElementKind: string;\r\n\r\n    newFilesElementCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    newDatabaseElementCallback: (path: string[]) => void;\r\n    newFolderCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    renameCallback: (externalElement: any, newName: string) => string;\r\n    deleteCallback: (externalElement: any, callbackIfSuccessful: () => void) => void;\r\n    selectCallback: (externalElement: any) => void;\r\n    addElementActionCallback: (accordionElement: AccordionElement) => JQuery<HTMLElement>;\r\n    contextMenuProvider: (externalElement: any) => AccordionContextMenuItem[];\r\n    moveCallback: (ae: AccordionElement | AccordionElement[]) => void;\r\n    dropElementCallback: (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => void;\r\n\r\n    $newFolderAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private accordion: Accordion, private caption: string, private flexWeight: string,\r\n        private newButtonClass: string, private buttonNewTitle: string,\r\n        private defaultIconClass: string, private withDeleteButton: boolean, private withFolders: boolean,\r\n        private kind: \"workspace\" | \"file\" | \"class\" | \"student\", private enableDrag: boolean, private acceptDropKinds: string[]) {\r\n\r\n        accordion.addPanel(this);\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        if (withFolders) {\r\n            let that = this;\r\n            this.$newFolderAction = jQuery('<div class=\"img_add-folder-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Neuen Ordner auf oberster Ebene anlegen\">');\r\n            this.$newFolderAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                let pathArray: string[] = [];\r\n\r\n                this.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                    this.newFolderCallback(newElement, () => {\r\n                        this.sortElements();\r\n                        newElement.$htmlFirstLine[0].scrollIntoView();\r\n                        animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                    });\r\n                });\r\n\r\n            })\r\n\r\n            this.addAction(this.$newFolderAction);\r\n\r\n\r\n            let $collapseAllAction = jQuery('<div class=\"img_collapse-all-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Alle Ordner zusammenfalten\">');\r\n            $collapseAllAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                that.collapseAll();\r\n\r\n            })\r\n\r\n            this.addAction($collapseAllAction);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    collapseAll() {\r\n        for (let element of this.elements) {\r\n            if (element.isFolder) {\r\n                if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                    element.$htmlFirstLine.removeClass('jo_expanded');\r\n                    element.$htmlFirstLine.addClass('jo_collapsed');\r\n                }\r\n            }\r\n            if (element.path.length > 0) {\r\n                element.$htmlFirstLine.slideUp(200);\r\n            }\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        this.$captionElement.remove();\r\n        this.$listElement.remove();\r\n    }\r\n\r\n    setFixed(fixed: boolean) {\r\n        this.fixed = fixed;\r\n        if (this.fixed) {\r\n            this.grow();\r\n            this.$captionElement.addClass('jo_fixed');\r\n        } else {\r\n            this.$captionElement.removeClass('jo_fixed');\r\n        }\r\n\r\n    }\r\n\r\n    //     <div class=\"jo_leftpanelcaption expanded\" id=\"workspace\" data-panel=\"filelistouter\">\r\n    //     <span>WORKSPACE</span>\r\n    //     <div class=\"jo_actions\"><img id=\"buttonNewFile\" title=\"Neue Datei hinzufügen\"\r\n    //             src=\"assets/projectexplorer/add-file-dark.svg\"></div>\r\n    // </div>\r\n    // <div id=\"filelistouter\" class=\"jo_projectexplorerdiv scrollable\" data-grow=\"3\"\r\n    //     style=\"flex-grow: 3\">\r\n    //     <div id=\"filelist\"></div>\r\n    // </div>\r\n\r\n\r\n    enableNewButton(enabled: boolean) {\r\n        if (this.$buttonNew != null) {\r\n            if (enabled) {\r\n                this.$buttonNew.show();\r\n            } else {\r\n                this.$buttonNew.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    getCurrentlySelectedPath(): string[] {\r\n        let pathArray: string[] = [];\r\n        let selectedElement = this.getSelectedElement();\r\n        if (selectedElement != null) {\r\n            pathArray = selectedElement.path.slice(0);\r\n            if (selectedElement.isFolder) pathArray.push(selectedElement.name);\r\n        }\r\n        return pathArray;\r\n    }\r\n\r\n    compareWithPath(name1: string, path1: string[], isFolder1: boolean, name2: string, path2: string[], isFolder2: boolean) {\r\n\r\n        path1 = path1.slice();\r\n        path1.push(name1);\r\n        name1 = \"\";\r\n\r\n        path2 = path2.slice();\r\n        path2.push(name2);\r\n        name2 = \"\";\r\n\r\n        let i = 0;\r\n        while (i < path1.length && i < path2.length) {\r\n            let cmp = path1[i].localeCompare(path2[i]);\r\n            if (cmp != 0) return cmp;\r\n            i++;\r\n        }\r\n\r\n        if (path1.length < path2.length) return -1;\r\n        if (path1.length > path2.length) return 1;\r\n\r\n        return name1.localeCompare(name2);\r\n\r\n\r\n        // let nameWithPath1 = path1.join(\"/\");\r\n        // if (nameWithPath1 != \"\" && name1 != \"\") nameWithPath1 += \"/\";\r\n        // nameWithPath1 += name1;\r\n\r\n        // let nameWithPath2 = path2.join(\"/\");\r\n        // if (nameWithPath2 != \"\" && name2 != \"\") nameWithPath2 += \"/\";\r\n        // nameWithPath2 += name2;\r\n\r\n        // return nameWithPath1.localeCompare(nameWithPath2);\r\n    }\r\n\r\n\r\n    getElementIndex(name: string, path: string[], isFolder: boolean): number {\r\n\r\n        for (let i = 0; i < this.elements.length; i++) {\r\n            let element = this.elements[i];\r\n\r\n            if (this.compareWithPath(name, path, isFolder, element.name, element.path, element.isFolder) < 0) return i;\r\n\r\n        }\r\n        return this.elements.length;\r\n    }\r\n\r\n    insertElement(ae: AccordionElement) {\r\n        let insertIndex = this.getElementIndex(ae.name, ae.path, ae.isFolder);\r\n        // if (ae.path.length == 0) insertIndex = this.elements.length;\r\n        this.elements.splice(insertIndex, 0, ae);\r\n\r\n        let $elements = this.$listElement.find('.jo_file');\r\n\r\n        if (insertIndex == 0) {\r\n            this.$listElement.prepend(ae.$htmlFirstLine);\r\n        } else if(insertIndex == $elements.length){\r\n            this.$listElement.append(ae.$htmlFirstLine);\r\n        } else {\r\n            let elementAtIndex = $elements.get(insertIndex);\r\n            jQuery(elementAtIndex).before(ae.$htmlFirstLine);\r\n        }\r\n\r\n    }\r\n\r\n    addFolder(name: string, path: string[], callback: (newPanel: AccordionElement) => void) {\r\n\r\n        let ae: AccordionElement = {\r\n            name: name,\r\n            isFolder: true,\r\n            path: path\r\n        }\r\n\r\n        let $element = this.renderElement(ae, true);\r\n\r\n        this.insertElement(ae);\r\n\r\n        $element[0].scrollIntoView();\r\n\r\n        this.renameElement(ae, () => {\r\n\r\n            callback(ae);\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    renderOuterHtmlElements($accordionDiv: JQuery<HTMLElement>) {\r\n        let that = this;\r\n\r\n        this.$captionElement = jQuery(`<div class=\"jo_leftpanelcaption jo_expanded\">\r\n        <div class=\"jo_captiontext\">` + this.caption + `</div><div class=\"jo_actions\"></div></div>`);\r\n\r\n        if (this.newButtonClass != null) {\r\n            this.$buttonNew = jQuery('<div class=\"jo_button jo_active ' + this.newButtonClass + '\" title=\"' + this.buttonNewTitle + '\">');\r\n            this.$captionElement.find('.jo_actions').append(this.$buttonNew);\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n            this.$buttonNew.on(mousePointer + 'down', (ev) => {\r\n\r\n                Helper.close();\r\n                ev.stopPropagation();\r\n\r\n                let path = that.getCurrentlySelectedPath();\r\n\r\n                let ae: AccordionElement = {\r\n                    name: \"Neu\",\r\n                    isFolder: false,\r\n                    path: path\r\n                }\r\n\r\n                let insertIndex = this.getElementIndex(\"\", path, false);\r\n                this.elements.splice(insertIndex, 0, ae);\r\n                let $element = this.renderElement(ae, true);\r\n\r\n\r\n                if (insertIndex == 0) {\r\n                    this.$listElement.prepend($element);\r\n                } else {\r\n                    let elementAtIndex = this.$listElement.find('.jo_file').get(insertIndex - 1);\r\n                    jQuery(elementAtIndex).after($element);\r\n                }\r\n\r\n                $element[0].scrollIntoView();\r\n\r\n                that.renameElement(ae, () => {\r\n\r\n                    that.newFilesElementCallback(ae, (externalElement: any) => {\r\n\r\n                        ae.externalElement = externalElement;\r\n\r\n                        if (ae.$htmlSecondLine != null) {\r\n                            ae.$htmlSecondLine.insertAfter($element);\r\n                        }\r\n\r\n                        if (that.selectCallback != null) that.select(ae.externalElement);\r\n\r\n                    });\r\n\r\n                });\r\n\r\n            });\r\n\r\n        }\r\n\r\n        let $listOuter = jQuery('<div id=\"filelistouter\" class=\"jo_projectexplorerdiv jo_scrollable\" data-grow=\"'\r\n            + this.flexWeight + '\" style=\"flex-grow: ' + this.flexWeight + '\"></div>');\r\n        this.$listElement = jQuery('<div class=\"jo_filelist\"></div>')\r\n\r\n        $listOuter.append(this.$listElement);\r\n\r\n        $accordionDiv.append(this.$captionElement);\r\n        $accordionDiv.append($listOuter);\r\n\r\n        let $ce = this.$captionElement;\r\n        let $li = this.$listElement.parent();\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $ce.on(mousePointer + 'down', (ev) => {\r\n            if (ev.button != 0) {\r\n                return;\r\n            }\r\n\r\n            if (!this.fixed) {\r\n                let targetGrow = $li.data('grow');\r\n                if ($ce.hasClass('jo_expanded')) {\r\n                    if (that.accordion.parts.length > 1) {\r\n                        $li.animate({\r\n                            'flex-grow': 0.001\r\n                        }, 1000, () => { $ce.toggleClass('jo_expanded'); });\r\n                    }\r\n                } else {\r\n                    $ce.toggleClass('jo_expanded');\r\n                    $li.animate({\r\n                        'flex-grow': targetGrow\r\n                    }, 1000);\r\n                }\r\n            }\r\n        });\r\n\r\n        $ce.on('dragover', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                $ce.addClass('jo_file_dragover');\r\n                event.preventDefault();\r\n            }\r\n        })\r\n\r\n        $ce.on('dragleave', (event) => {\r\n            $ce.removeClass('jo_file_dragover');\r\n        })\r\n\r\n        $ce.on('drop', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                event.preventDefault();\r\n                $ce.removeClass('jo_file_dragover');\r\n                let element1 = AccordionPanel.currentlyDraggedElement;\r\n                if (element1 != null) {\r\n                    that.moveElement(element1, null);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    grow() {\r\n        let $li = this.$listElement.parent();\r\n        let targetGrow = $li.data('grow');\r\n        $li.css('flex-grow', targetGrow);\r\n        this.$captionElement.addClass('jo_expanded');\r\n    }\r\n\r\n    addElement(element: AccordionElement, expanded: boolean) {\r\n        // this.elements.push(element);\r\n        // element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        // this.$listElement.prepend(element.$htmlFirstLine);\r\n        element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        this.insertElement(element);\r\n    }\r\n\r\n    sortElements() {\r\n        if (this.dontSortElements) return;\r\n        this.elements.sort((a, b) => {\r\n            let aName = a.sortName ? a.sortName : a.name;\r\n            let bName = b.sortName ? b.sortName : b.name;\r\n\r\n            return this.compareWithPath(aName, a.path, a.isFolder, bName, b.path, b.isFolder);\r\n\r\n        });\r\n        this.elements.forEach((element) => { this.$listElement.append(element.$htmlFirstLine) });\r\n    }\r\n\r\n    setTextAfterFilename(element: AccordionElement, text: string, cssClass: string) {\r\n        if(element == null) return;\r\n        let $div = element.$htmlFirstLine.find('.jo_textAfterName');\r\n        $div.addClass(cssClass);\r\n        $div.html(text);\r\n    }\r\n\r\n    addAction($element: JQuery<HTMLElement>) {\r\n        this.$captionElement.find('.jo_actions').prepend($element);\r\n    }\r\n\r\n    renderElement(element: AccordionElement, expanded: boolean): JQuery<HTMLElement> {\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        let that = this;\r\n\r\n        let expandedCollapsed = \"\";\r\n\r\n        if (element.iconClass == null) element.iconClass = this.defaultIconClass;\r\n        if (element.isFolder) {\r\n            element.iconClass = \"folder\";\r\n            expandedCollapsed = expanded ? \" jo_expanded\" : \" jo_collapsed\";\r\n        }\r\n\r\n        let pathHtml = \"\";\r\n        if (element.path == null) element.path = [];\r\n        for (let i = 0; i < element.path.length; i++) {\r\n            pathHtml += '<div class=\"jo_folderline\"></div>';\r\n        }\r\n\r\n        element.$htmlFirstLine = jQuery(`<div class=\"jo_file jo_${element.iconClass} ${expandedCollapsed}\">\r\n        <div class=\"jo_folderlines\">${pathHtml}</div>\r\n           <div class=\"jo_fileimage\"></div>\r\n           <div class=\"jo_filename\">${escapeHtml(element.name)}</div>\r\n           <div class=\"jo_textAfterName\"></div>\r\n           <div class=\"jo_additionalButtonSettings\"></div>\r\n           ${this.withDeleteButton ? '<div class=\"jo_delete img_delete jo_button jo_active' + (false ? \" jo_delete_always\" : \"\") + '\"></div>' : \"\"}\r\n           ${!jo_mouseDetected ? '<div class=\"jo_settings_button img_ellipsis-dark jo_button jo_active\"></div>' : \"\"}\r\n           </div>`);\r\n\r\n        if (!expanded && element.path.length > 0) {\r\n            element.$htmlFirstLine.hide();\r\n        }\r\n\r\n        if (this.addElementActionCallback != null) {\r\n            let $elementAction = this.addElementActionCallback(element);\r\n            element.$htmlFirstLine.append($elementAction);\r\n        }\r\n\r\n        if (this.withFolders) {\r\n            if (element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            that.moveElement(element1, element);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withFolders || this.enableDrag) {\r\n            let $filedragpart = element.$htmlFirstLine.find('.jo_filename');\r\n            $filedragpart.attr('draggable', 'true');\r\n            $filedragpart.on('dragstart', (event) => {\r\n                AccordionPanel.currentlyDraggedElement = element;\r\n                AccordionPanel.currentlyDraggedElementKind = that.kind;\r\n                event.originalEvent.dataTransfer.effectAllowed = element.isFolder ? \"move\" : \"copyMove\";\r\n            })\r\n        }\r\n\r\n        if (this.acceptDropKinds != null && this.acceptDropKinds.length > 0) {\r\n            if (!element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n\r\n                        if (event.ctrlKey) {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"copy\";\r\n                        } else {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"move\";\r\n                        }\r\n\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            if (that.dropElementCallback != null) that.dropElementCallback(element, element1, event.ctrlKey ? \"copy\" : \"move\");\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        element.$htmlFirstLine.on(mousePointer + 'up', (ev) => {\r\n\r\n            if (ev.button == 0 && that.selectCallback != null) {\r\n                that.selectCallback(element.externalElement);\r\n\r\n                for (let ae of that.elements) {\r\n                    if (ae != element && ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                        ae.$htmlFirstLine.removeClass('jo_active');\r\n                    }\r\n                }\r\n\r\n                element.$htmlFirstLine.addClass('jo_active');\r\n\r\n                if (element.isFolder) {\r\n\r\n                    if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                        element.$htmlFirstLine.removeClass('jo_expanded');\r\n                        element.$htmlFirstLine.addClass('jo_collapsed');\r\n                    } else {\r\n                        element.$htmlFirstLine.addClass('jo_expanded');\r\n                        element.$htmlFirstLine.removeClass('jo_collapsed');\r\n                    }\r\n\r\n                    let pathIsCollapsed: { [path: string]: boolean } = {};\r\n                    for (let e of this.elements) {\r\n                        if (e.isFolder) {\r\n                            let path = e.path.join(\"/\");\r\n                            if (path != \"\") path += \"/\";\r\n                            path += e.name;\r\n                            pathIsCollapsed[path] = e.$htmlFirstLine.hasClass('jo_collapsed');\r\n                            if (pathIsCollapsed[e.path.join(\"/\")]) pathIsCollapsed[path] = true;\r\n                        }\r\n                    }\r\n                    pathIsCollapsed[\"\"] = false;\r\n\r\n                    for (let e of this.elements) {\r\n                        if (pathIsCollapsed[e.path.join(\"/\")]) {\r\n                            e.$htmlFirstLine.slideUp(200);\r\n                        } else {\r\n                            e.$htmlFirstLine.slideDown(200);\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n\r\n        let contextmenuHandler = function (event) {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [];\r\n            if (that.renameCallback != null) {\r\n                contextMenuItems.push({\r\n                    caption: \"Umbenennen\",\r\n                    callback: () => {\r\n                        that.renameElement(element);\r\n                    }\r\n                })\r\n            }\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n            if (element.isFolder) {\r\n                contextMenuItems = contextMenuItems.concat([\r\n                    {\r\n                        caption: \"Neuen Unterordner anlegen (unterhalb '\" + element.name + \"')...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            // that.$newFolderAction.trigger(mousePointer + 'down');\r\n                            let pathArray = that.getCurrentlySelectedPath();\r\n\r\n                            that.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                                that.newFolderCallback(newElement, () => {\r\n                                    that.sortElements();\r\n                                    newElement.$htmlFirstLine[0].scrollIntoView();\r\n                                    animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                                });\r\n                            });\r\n\r\n                        }\r\n                    }, {\r\n                        caption: \"Neue Datenbank...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n\r\n                            that.newDatabaseElementCallback(element.path.concat(element.name));\r\n\r\n                        }\r\n                    }\r\n                ])\r\n            }\r\n\r\n\r\n            if (that.contextMenuProvider != null && !element.isFolder) {\r\n\r\n                for (let cmi of that.contextMenuProvider(element)) {\r\n                    contextMenuItems.push({\r\n                        caption: cmi.caption,\r\n                        callback: () => {\r\n                            cmi.callback(element);\r\n                        },\r\n                        color: cmi.color,\r\n                        subMenu: cmi.subMenu == null ? null : cmi.subMenu.map((mi) => {\r\n                            return {\r\n                                caption: mi.caption,\r\n                                callback: () => {\r\n                                    mi.callback(element);\r\n                                },\r\n                                color: mi.color\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n\r\n            if (contextMenuItems.length > 0) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                openContextMenu(contextMenuItems, event.pageX, event.pageY);\r\n            }\r\n        };\r\n\r\n        element.$htmlFirstLine[0].addEventListener(\"contextmenu\", contextmenuHandler, false);\r\n\r\n        // long press for touch devices\r\n        let pressTimer: number;\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.on('pointerup', () => {\r\n                clearTimeout(pressTimer);\r\n                return false;\r\n            }).on('pointerdown', (event) => {\r\n                pressTimer = window.setTimeout(() => {\r\n                    contextmenuHandler(event);\r\n                }, 500);\r\n                return false;\r\n            });\r\n        }\r\n\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('pointerdown', (e) => {\r\n                contextmenuHandler(e);\r\n            });\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('mousedown click', (e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            });\r\n        }\r\n\r\n        if (that.withDeleteButton) {\r\n            element.$htmlFirstLine.find('.jo_delete').on(mousePointer + 'up', (ev) => {\r\n                ev.preventDefault();\r\n                openContextMenu([{\r\n                    caption: \"Abbrechen\",\r\n                    callback: () => {\r\n                        // nothing to do.\r\n                    }\r\n                }, {\r\n                    caption: \"Ich bin mir sicher: löschen!\",\r\n                    color: \"#ff6060\",\r\n                    callback: () => {\r\n\r\n                        if (element.isFolder) {\r\n                            if (that.getChildElements(element).length > 0) {\r\n                                alert('Dieser Ordner kann nicht gelöscht werden, da er nicht leer ist.');\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        that.deleteCallback(element.externalElement, () => {\r\n                            element.$htmlFirstLine.remove();\r\n                            if (element.$htmlSecondLine != null) element.$htmlSecondLine.remove();\r\n                            that.elements.splice(that.elements.indexOf(element), 1);\r\n\r\n                            if (that.selectCallback != null) {\r\n                                if (that.elements.length > 0) {\r\n                                    that.select(that.elements[0].externalElement);\r\n                                } else {\r\n                                    that.select(null);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }], ev.pageX + 2, ev.pageY + 2);\r\n                ev.stopPropagation();\r\n            });\r\n        }\r\n\r\n        return element.$htmlFirstLine;\r\n\r\n    }\r\n\r\n    moveElement(elementToMove: AccordionElement, destinationFolder: AccordionElement) {\r\n        let destinationPath: string[] = destinationFolder == null ? [] : destinationFolder.path.slice(0).concat([destinationFolder.name]);\r\n        if (elementToMove.isFolder) {\r\n            let movedElements: AccordionElement[] = [elementToMove];\r\n\r\n            let sourcePath = elementToMove.path.concat([elementToMove.name]).join(\"/\");\r\n\r\n            if(destinationPath.join('/').indexOf(sourcePath) == 0) return;\r\n\r\n            let oldPathLength = elementToMove.path.length;\r\n            elementToMove.path = destinationPath.slice(0);\r\n\r\n            for (let element of this.elements) {\r\n                if (element.path.join(\"/\").startsWith(sourcePath)) {\r\n                    element.path.splice(0, oldPathLength);\r\n                    element.path = destinationPath.concat(element.path);\r\n                    movedElements.push(element);\r\n                }\r\n            }\r\n\r\n            for (let el of movedElements) {\r\n                el.$htmlFirstLine.remove();\r\n                this.elements.splice(this.elements.indexOf(el), 1);\r\n            }\r\n            for (let el of movedElements) {\r\n                this.renderElement(el, true);\r\n                this.insertElement(el);\r\n            }\r\n\r\n            this.moveCallback(movedElements);\r\n        } else {\r\n            elementToMove.path = destinationPath;\r\n            elementToMove.$htmlFirstLine.remove();\r\n            this.elements.splice(this.elements.indexOf(elementToMove), 1);\r\n            this.renderElement(elementToMove, true);\r\n            this.insertElement(elementToMove);\r\n            this.select(elementToMove.externalElement);\r\n            elementToMove.$htmlFirstLine[0].scrollIntoView();\r\n            this.moveCallback(elementToMove);\r\n        }\r\n    }\r\n\r\n    getChildElements(folder: AccordionElement): AccordionElement[] {\r\n        let path = folder.path.slice(0).concat(folder.name).join(\"/\");\r\n        return this.elements.filter((element) => element.path.join(\"/\").startsWith(path));\r\n    }\r\n\r\n    renameElement(element: AccordionElement, callback?: () => void) {\r\n        let that = this;\r\n        let $div = element.$htmlFirstLine.find('.jo_filename');\r\n        let pointPos = element.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        this.dontSortElements = true;\r\n        makeEditable($div, $div, (newText: string) => {\r\n            if (element.externalElement != null) newText = that.renameCallback(element.externalElement, newText);\r\n            element.name = newText;\r\n            $div.html(element.name);\r\n            if (callback != null) callback();\r\n            that.sortElements();\r\n            $div[0].scrollIntoView();\r\n            this.dontSortElements = false;\r\n        }, selection);\r\n    }\r\n\r\n    select(externalElement: any, invokeCallback: boolean = true, scrollIntoView: boolean = false) {\r\n\r\n        if (externalElement == null) {\r\n            for (let ae1 of this.elements) {\r\n                if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n            }\r\n        } else {\r\n            let ae = this.findElement(externalElement);\r\n\r\n            if (ae != null) {\r\n                for (let ae1 of this.elements) {\r\n                    if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n                }\r\n\r\n                ae.$htmlFirstLine.addClass('jo_active');\r\n                if (scrollIntoView) {\r\n                    let pathString = ae.path.join(\"/\");\r\n                    for (let el of this.elements) {\r\n                        let elPath = el.path.slice(0);\r\n                        if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                            if (el.isFolder) {\r\n                                elPath.push(el.name);\r\n                                if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                                    el.$htmlFirstLine.removeClass(\"jo_collapsed\");\r\n                                    el.$htmlFirstLine.addClass(\"jo_expanded\");\r\n                                }\r\n                            }\r\n                            el.$htmlFirstLine.show();\r\n                        }\r\n\r\n                    }\r\n\r\n                    ae.$htmlFirstLine[0].scrollIntoView();\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (invokeCallback && this.selectCallback != null) this.selectCallback(externalElement);\r\n\r\n    }\r\n\r\n    getPathString(ae: AccordionElement) {\r\n        let ps: string = ae.path.join(\"/\");\r\n        if (ae.isFolder) {\r\n            if (ps != \"\") ps += \"/\";\r\n            ps += ae.name;\r\n        }\r\n        return ps;\r\n    }\r\n\r\n    setElementClass(element: AccordionElement, iconClass: string) {\r\n        if (element != null) {\r\n            element.$htmlFirstLine?.removeClass(\"jo_\" + element.iconClass).addClass(\"jo_\" + iconClass);\r\n            element.iconClass = iconClass;\r\n        }\r\n\r\n    }\r\n\r\n    findElement(externalElement: any): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                return ae;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    removeElement(externalElement: any) {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                ae.$htmlFirstLine.remove();\r\n                if (ae.$htmlSecondLine != null) ae.$htmlSecondLine.remove();\r\n                this.elements.splice(this.elements.indexOf(ae), 1);\r\n\r\n                if (this.selectCallback != null) {\r\n                    if (this.elements.length > 0) {\r\n                        this.select(this.elements[0].externalElement);\r\n                    } else {\r\n                        this.select(null);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.$listElement.empty();\r\n        this.elements = [];\r\n    }\r\n\r\n    setCaption(text: string) {\r\n        this.$captionElement.find('.jo_captiontext').html(text);\r\n    }\r\n\r\n    getSelectedElement(): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                return ae;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class Accordion {\r\n\r\n    parts: AccordionPanel[] = [];\r\n    $html: JQuery<HTMLElement>;\r\n\r\n    constructor(public main: MainBase, $html: JQuery<HTMLElement>) {\r\n        this.$html = $html;\r\n        $html.addClass('jo_leftpanelinner');\r\n    }\r\n\r\n    addPanel(panel: AccordionPanel) {\r\n        panel.renderOuterHtmlElements(this.$html);\r\n        this.parts.push(panel);\r\n    }\r\n\r\n}","import { ClassData, UserData } from \"../../communication/Data.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { isEmptyObject } from \"jquery\";\r\n\r\nexport class DistributeToStudentsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n    studentCount: number = 0;\r\n\r\n    constructor(private classes: ClassData[], private workspace: Workspace, private main: Main){\r\n        this.init();\r\n    }\r\n\r\n    private init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Austeilen eines Workspace an einzelne Schüler/innen</div>\r\n             <div class=\"jo_ds_settings\">\r\n                <div class=\"jo_ds_settings_caption\">Workspace:</div><div class=\"jo_ds_workspacename\">${this.workspace.name}</div>\r\n                <div class=\"jo_ds_settings_caption\">Liste filtern:</div><div class=\"jo_ds_filterdiv\"><input class=\"dialog-input\"></input></div>\r\n             </div>\r\n             <div class=\"jo_ds_student_list jo_scrollable\">\r\n             </div>\r\n             <div class=\"jo_ds_selected_message\"></div>\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_distribute_button\">Austeilen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        let $studentList = jQuery('.jo_ds_student_list');\r\n        let that = this;\r\n\r\n        for(let klass of this.classes){\r\n            for(let student of klass.students){\r\n                let $studentLine = jQuery('<div class=\"jo_ds_student_line\">');\r\n                let $studentClass = jQuery(`<div class=\"jo_ds_student_class\">${klass.name}</div>`);                \r\n                let $studentName = jQuery(`<div class=\"jo_ds_student_name\">${student.rufname} ${student.familienname}</div>`);\r\n                $studentLine.append($studentClass, $studentName);\r\n                $studentList.append($studentLine);\r\n                $studentLine.on('mousedown', () => {\r\n                    $studentLine.toggleClass('jo_active');\r\n                     that.studentCount += $studentLine.hasClass('jo_active') ? 1 : -1;\r\n                     jQuery('.jo_ds_selected_message').text(`${that.studentCount} Schüler/inn/en selektiert`);\r\n                });\r\n                $studentLine.data('student', student);\r\n                $studentLine.data('klass', klass);\r\n            }\r\n        }\r\n\r\n        jQuery('.jo_ds_filterdiv>input').on('input', () => {\r\n            let filterText = <string>jQuery('.jo_ds_filterdiv>input').val();\r\n            if(filterText == null || filterText == \"\"){\r\n                $('.jo_ds_student_line').show();\r\n            } else {\r\n                $('.jo_ds_student_line').each((index, element) => {\r\n                    let $element = jQuery(element);\r\n                    let klass:ClassData = $element.data('klass');\r\n                    let student: UserData = $element.data('student');\r\n                    let text = klass.name + \" \" + student.rufname + \" \" + student.familienname;\r\n                    if(text.indexOf(filterText) >= 0){\r\n                        $element.show();\r\n                    } else {\r\n                        $element.hide();\r\n                    }\r\n                });\r\n\r\n            }\r\n            \r\n        });\r\n\r\n\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { that.close() });\r\n        jQuery('#jo_ds_distribute_button').on('click', () => {that.distributeWorkspace();});\r\n\r\n    }\r\n\r\n    distributeWorkspace() {\r\n\r\n        let student_ids: number[] = [];\r\n        $('.jo_ds_student_line').each((index, element) => {\r\n            let $element = jQuery(element);\r\n            if($element.hasClass('jo_active')){\r\n                let student: UserData = $element.data('student');\r\n                student_ids.push(student.id);\r\n            }\r\n        });\r\n\r\n        this.close();\r\n\r\n        this.main.networkManager.sendDistributeWorkspace(this.workspace, null, student_ids, (error: string) => {\r\n            if (error == null) {\r\n                let networkManager = this.main.networkManager;\r\n                let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                alert(`Der Workspace ${this.workspace.name} wurde an ${student_ids.length} Schüler/innen ausgeteilt. Er wird in maximal ${dt} s bei jedem Schüler ankommen.`);\r\n            } else {\r\n                alert(error);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n    \r\n\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionPanel, Accordion, AccordionElement, AccordionContextMenuItem } from \"./Accordion.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { WorkspaceData, Workspaces, ClassData, CreateWorkspaceData } from \"../../communication/Data.js\";\r\nimport { dateToString } from \"../../tools/StringTools.js\";\r\nimport { DistributeToStudentsDialog } from \"./DistributeToStudentsDialog.js\";\r\nimport { NewDatabaseDialog } from \"./NewDatabaseDialog.js\";\r\n\r\n\r\nexport class ProjectExplorer {\r\n\r\n    programPointerModule: Module = null;\r\n    programPointerPosition: TextPosition;\r\n    programPointerDecoration: string[] = [];\r\n\r\n    accordion: Accordion;\r\n    fileListPanel: AccordionPanel;\r\n    workspaceListPanel: AccordionPanel;\r\n\r\n    $homeAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private $projectexplorerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.accordion = new Accordion(this.main, this.$projectexplorerDiv);\r\n\r\n        this.initFilelistPanel();\r\n\r\n        this.initWorkspacelistPanel();\r\n\r\n    }\r\n\r\n    initFilelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.fileListPanel = new AccordionPanel(this.accordion, \"Kein Workspace gewählt\", \"1\",\r\n            \"img_add-file-dark\", \"Neue Datei...\", \"java\", true, false, \"file\", true, []);\r\n\r\n        this.fileListPanel.newFilesElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                if (that.main.currentWorkspace == null) {\r\n                    alert('Bitte wählen Sie zuerst einen Workspace aus.');\r\n                    return null;\r\n                }\r\n\r\n                let f: File = {\r\n                    name: accordionElement.name,\r\n                    dirty: false,\r\n                    saved: true,\r\n                    text: \"\",\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    panelElement: accordionElement\r\n                };\r\n                let m = new Module(f, that.main);\r\n                let modulStore = that.main.currentWorkspace.moduleStore;\r\n                modulStore.putModule(m);\r\n                that.setModuleActive(m);\r\n                that.main.networkManager.sendCreateFile(m, that.main.currentWorkspace, that.main.workspacesOwnerId,\r\n                    (error: string) => {\r\n                        if (error == null) {\r\n                            successfulNetworkCommunicationCallback(m);\r\n                        } else {\r\n                            alert('Der Server ist nicht erreichbar!');\r\n\r\n                        }\r\n                    });\r\n\r\n            };\r\n\r\n        this.fileListPanel.renameCallback =\r\n            (module: Module, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                let file = module.file;\r\n\r\n                file.name = newName;\r\n                file.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.fileListPanel.deleteCallback =\r\n            (module: Module, callbackIfSuccessful: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.currentWorkspace.moduleStore.removeModule(module);\r\n                        callbackIfSuccessful();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.fileListPanel.contextMenuProvider = (accordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            if (!(that.main.user.is_teacher || that.main.user.is_admin || that.main.user.is_schooladmin)) {\r\n                let module: Module = <Module>accordionElement.externalElement;\r\n                let file = module.file;\r\n\r\n                // if (file.submitted_date == null) {\r\n                //     cmiList.push({\r\n                //         caption: \"Als Hausaufgabe markieren\",\r\n                //         callback: (element: AccordionElement) => {\r\n\r\n                //             let file = (<Module>element.externalElement).file;\r\n                //             file.submitted_date = dateToString(new Date());\r\n                //             file.saved = false;\r\n                //             that.main.networkManager.sendUpdates(null, true);\r\n                //             that.renderHomeworkButton(file);\r\n                //         }\r\n                //     });\r\n                // } else {\r\n                //     cmiList.push({\r\n                //         caption: \"Hausaufgabenmarkierung entfernen\",\r\n                //         callback: (element: AccordionElement) => {\r\n\r\n                //             let file = (<Module>element.externalElement).file;\r\n                //             file.submitted_date = null;\r\n                //             file.saved = false;\r\n                //             that.main.networkManager.sendUpdates(null, true);\r\n                //             that.renderHomeworkButton(file);\r\n\r\n                //         }\r\n                //     });\r\n                // }\r\n\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n\r\n\r\n        this.fileListPanel.selectCallback =\r\n            (module: Module) => {\r\n                that.setModuleActive(module);\r\n            }\r\n\r\n\r\n\r\n    }\r\n\r\n    renderHomeworkButton(file: File) {\r\n        let $buttonDiv = file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonHomework');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_homeworkButton').remove();\r\n\r\n        let klass: string = null;\r\n        let title: string = \"\";\r\n        if (file.submitted_date != null) {\r\n            klass = \"img_homework\";\r\n            title = \"Wurde als Hausaufgabe abgegeben: \" + file.submitted_date\r\n            if (file.text_before_revision) {\r\n                klass = \"img_homework-corrected\";\r\n                title = \"Korrektur liegt vor.\"\r\n            }\r\n        }\r\n\r\n        if (klass != null) {\r\n            let $homeworkButtonDiv = jQuery(`<div class=\"jo_homeworkButton ${klass}\" title=\"${title}\"></div>`);\r\n            $buttonDiv.prepend($homeworkButtonDiv);\r\n            if (klass.indexOf(\"jo_active\") >= 0) {\r\n                $homeworkButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n                $homeworkButtonDiv.on('click', (e) => {\r\n                    e.stopPropagation();\r\n                    // TODO\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initWorkspacelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.workspaceListPanel = new AccordionPanel(this.accordion, \"Datenbanken\", \"3\",\r\n            null, \"Neue Datenbank...\", \"workspace\", true, true, \"workspace\", false, [\"file\"]);\r\n\r\n        let $newWorkspaceAction = jQuery('<div class=\"img_add-database-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Neue Datenbank auf oberster Ordnerebene anlegen\">');\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $newWorkspaceAction.on(mousePointer + 'down', (e) => {\r\n            e.stopPropagation();\r\n\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            new NewDatabaseDialog(that.main, owner_id, this.workspaceListPanel.getCurrentlySelectedPath());\r\n\r\n        })\r\n\r\n        this.workspaceListPanel.addAction($newWorkspaceAction);\r\n        if(this.workspaceListPanel.$buttonNew != null){\r\n            this.workspaceListPanel.$buttonNew.hide();\r\n        }\r\n\r\n        this.workspaceListPanel.newDatabaseElementCallback = (path: string[]) => {\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            new NewDatabaseDialog(that.main, owner_id, path);\r\n\r\n        }\r\n\r\n\r\n        this.workspaceListPanel.renameCallback =\r\n            (workspace: Workspace, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                workspace.name = newName;\r\n                workspace.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.workspaceListPanel.deleteCallback =\r\n            (workspace: Workspace, successfulNetworkCommunicationCallback: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"workspace\", workspace.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.removeWorkspace(workspace);\r\n                        that.fileListPanel.enableNewButton(that.main.workspaceList.length > 0);\r\n                        that.fileListPanel.clear();\r\n                        that.main.databaseExplorer.clear();\r\n                        that.main.getResultsetPresenter().clear();\r\n                        successfulNetworkCommunicationCallback();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.workspaceListPanel.selectCallback =\r\n            (workspace: Workspace) => {\r\n                if(workspace.isFolder) return;\r\n                if (workspace != this.main.currentWorkspace) {\r\n                    that.main.networkManager.sendUpdates(() => {\r\n                        that.setWorkspaceActive(workspace);\r\n                    });\r\n                }\r\n            }\r\n\r\n        this.workspaceListPanel.newFolderCallback = (newElement: AccordionElement, successCallback) => {\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            let folder: Workspace = new Workspace(newElement.name, that.main, owner_id);\r\n            folder.isFolder = true;\r\n\r\n            folder.path = newElement.path.join(\"/\");\r\n            folder.panelElement = newElement;\r\n            newElement.externalElement = folder;\r\n            that.main.workspaceList.push(folder);\r\n\r\n            let wd: CreateWorkspaceData = {\r\n                id: -1,\r\n                isFolder: true,\r\n                name: folder.name,\r\n                path: folder.path\r\n            }\r\n\r\n            that.main.networkManager.sendCreateWorkspace(wd, that.main.workspacesOwnerId, (error: string) => {\r\n                if (error == null) {\r\n                    folder.id = wd.id;\r\n                    successCallback(folder);\r\n\r\n                } else {\r\n                    alert(\"Fehler: \" + error);\r\n                    that.workspaceListPanel.removeElement(newElement);\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        this.workspaceListPanel.moveCallback = (ae: AccordionElement | AccordionElement[]) => {\r\n            if (!Array.isArray(ae)) ae = [ae];\r\n            for (let a of ae) {\r\n                let ws: Workspace = a.externalElement;\r\n                ws.path = a.path.join(\"/\");\r\n                ws.saved = false;\r\n            }\r\n            this.main.networkManager.sendUpdates();\r\n        }\r\n\r\n        this.workspaceListPanel.dropElementCallback = (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => {\r\n            let workspace: Workspace = dest.externalElement;\r\n            let module: Module = droppedElement.externalElement;\r\n\r\n            if (workspace.moduleStore.getModules(false).indexOf(module) >= 0) return; // module is already in destination workspace\r\n\r\n            let f: File = {\r\n                name: module.file.name,\r\n                dirty: true,\r\n                saved: false,\r\n                text: module.file.text,\r\n                text_before_revision: null,\r\n                submitted_date: null,\r\n                student_edited_after_revision: false,\r\n                version: module.file.version,\r\n                panelElement: null\r\n            };\r\n\r\n            if (dropEffekt == \"move\") {\r\n                // move file\r\n                let oldWorkspace = that.main.currentWorkspace;\r\n                oldWorkspace.moduleStore.removeModule(module);\r\n                that.fileListPanel.removeElement(module);\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, () => { });\r\n            }\r\n\r\n            let m = new Module(f, that.main);\r\n            let modulStore = workspace.moduleStore;\r\n            modulStore.putModule(m);\r\n            that.main.networkManager.sendCreateFile(m, workspace, that.main.workspacesOwnerId,\r\n                (error: string) => {\r\n                    if (error == null) {\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n\r\n        }\r\n\r\n\r\n\r\n        this.$homeAction = jQuery('<div class=\"img_home-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Meine eigenen Workspaces anzeigen\">');\r\n\r\n        this.$homeAction.on(mousePointer +'down', (e) => {\r\n            e.stopPropagation();\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n                that.onHomeButtonClicked();\r\n            });\r\n\r\n            that.main.bottomDiv.hideHomeworkTab();\r\n\r\n        })\r\n\r\n        this.workspaceListPanel.addAction(this.$homeAction);\r\n        this.$homeAction.hide();\r\n\r\n        this.workspaceListPanel.contextMenuProvider = (workspaceAccordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            if (this.main.user.is_teacher && this.main.teacherExplorer.classPanel.elements.length > 0) {\r\n                cmiList.push({\r\n                    caption: \"An Klasse austeilen...\",\r\n                    callback: (element: AccordionElement) => { },\r\n                    subMenu: this.main.teacherExplorer.classPanel.elements.map((ae) => {\r\n                        return {\r\n                            caption: ae.name,\r\n                            callback: (element: AccordionElement) => {\r\n                                let klasse = <any>ae.externalElement;\r\n\r\n                                let workspace: Workspace = element.externalElement;\r\n\r\n                                this.main.networkManager.sendDistributeWorkspace(workspace, klasse, null, (error: string) => {\r\n                                    if (error == null) {\r\n                                        let networkManager = this.main.networkManager;\r\n                                        let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                                        alert(\"Der Workspace \" + workspace.name + \" wurde an die Klasse \" + klasse.name + \" ausgeteilt. Er wird in maximal \" +\r\n                                            dt + \" s bei jedem Schüler ankommen.\");\r\n                                    } else {\r\n                                        alert(error);\r\n                                    }\r\n                                });\r\n\r\n                            }\r\n                        }\r\n                    })\r\n                },\r\n                    {\r\n                        caption: \"An einzelne Schüler/innen austeilen...\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let classes: ClassData[] = this.main.teacherExplorer.classPanel.elements.map(ae => ae.externalElement);\r\n                            let workspace: Workspace = element.externalElement;\r\n                            new DistributeToStudentsDialog(classes, workspace, this.main);\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n    }\r\n\r\n    onHomeButtonClicked() {\r\n        this.main.teacherExplorer.restoreOwnWorkspaces();\r\n        this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.ownUpdateFrequencyInSeconds;\r\n        this.$homeAction.hide();\r\n        this.fileListPanel.enableNewButton(this.main.workspaceList.length > 0);\r\n    }\r\n\r\n    renderFiles(workspace: Workspace) {\r\n\r\n        let name = workspace == null ? \"Kein Workspace vorhanden\" : workspace.name;\r\n\r\n        this.fileListPanel.setCaption(name);\r\n        this.fileListPanel.clear();\r\n\r\n        if (this.main.getCurrentWorkspace() != null) {\r\n            for (let module of this.main.getCurrentWorkspace().moduleStore.getModules(false)) {\r\n                module.file.panelElement = null;\r\n            }\r\n        }\r\n\r\n        if (workspace != null) {\r\n            let moduleList: Module[] = [];\r\n\r\n            for (let m of workspace.moduleStore.getModules(false)) {\r\n                moduleList.push(m);\r\n            }\r\n\r\n            moduleList.sort((a, b) => { return a.file.name > b.file.name ? 1 : a.file.name < b.file.name ? -1 : 0 });\r\n\r\n            for (let m of moduleList) {\r\n\r\n                m.file.panelElement = {\r\n                    name: m.file.name,\r\n                    externalElement: m,\r\n                    isFolder: false,\r\n                    path: []\r\n                };\r\n\r\n                this.fileListPanel.addElement(m.file.panelElement, true);\r\n                this.renderHomeworkButton(m.file);\r\n            }\r\n\r\n            this.fileListPanel.sortElements();\r\n\r\n        }\r\n    }\r\n\r\n    renderWorkspaces(workspaceList: Workspace[]) {\r\n\r\n        this.fileListPanel.clear();\r\n        this.workspaceListPanel.clear();\r\n\r\n        for (let w of workspaceList) {\r\n            let path = w.path.split(\"/\");\r\n            if (path.length == 1 && path[0] == \"\") path = [];\r\n            w.panelElement = {\r\n                name: w.name,\r\n                externalElement: w,\r\n                iconClass: 'workspace',\r\n                isFolder: w.isFolder,\r\n                path: path\r\n            };\r\n\r\n            this.workspaceListPanel.addElement(w.panelElement, false);\r\n            w.renderSettingsButton(w.panelElement);\r\n        }\r\n\r\n        this.workspaceListPanel.sortElements();\r\n        this.fileListPanel.enableNewButton(workspaceList.length > 0);\r\n\r\n\r\n\r\n    }\r\n\r\n    renderErrorCount(workspace: Workspace, errorCountMap: Map<Module, number>) {\r\n        if (errorCountMap == null) return;\r\n        for (let m of workspace.moduleStore.getModules(false)) {\r\n            let errorCount: number = errorCountMap.get(m);\r\n            let errorCountS: string = ((errorCount == null || errorCount == 0) ? \"\" : \"(\" + errorCount + \")\");\r\n\r\n            this.fileListPanel.setTextAfterFilename(m.file.panelElement, errorCountS, 'jo_errorcount');\r\n        }\r\n    }\r\n\r\n    setWorkspaceActive(w: Workspace) {\r\n\r\n        if (w != null) {\r\n            this.fileListPanel.$buttonNew.show();\r\n        }\r\n\r\n        this.workspaceListPanel.select(w, false);\r\n\r\n        let callback = (error: string) => {this.initializeDatabaseTool(error, w)};\r\n\r\n        if (w.database == null) {\r\n            this.main.waitOverlay.show(\"Bitte warten, hole Datenbank vom Server ...\");\r\n\r\n            this.main.networkManager.fetchDatabase(w, callback);\r\n        } else {\r\n            callback(null);\r\n        }\r\n\r\n    }\r\n\r\n    initializeDatabaseTool(error: string, w: Workspace) {\r\n        if (error != null) {\r\n            alert(error);\r\n            return;\r\n        }\r\n\r\n        let dbTool = this.main.getDatabaseTool();\r\n\r\n        let statements: string[] = w.database.statements;\r\n        if (statements == null) statements = [];\r\n\r\n        dbTool.initializeWorker(w.database.templateDump, statements,\r\n            () => {\r\n                this.main.currentWorkspace = w;\r\n\r\n                if (this.main.user.id == w.owner_id) {\r\n                    this.main.user.currentWorkspace_id = w.id;\r\n                }\r\n\r\n                this.renderFiles(w);\r\n\r\n                if (w != null) {\r\n                    let nonSystemModules = w.moduleStore.getModules(false);\r\n\r\n                    if (w.currentlyOpenModule != null) {\r\n                        this.setModuleActive(w.currentlyOpenModule);\r\n                    } else if (nonSystemModules.length > 0) {\r\n                        this.setModuleActive(nonSystemModules[0]);\r\n                    } else {\r\n                        this.setModuleActive(null);\r\n                    }\r\n\r\n                    for (let m of nonSystemModules) {\r\n                        m.file.dirty = true;\r\n                    }\r\n\r\n                    if (nonSystemModules.length == 0) {\r\n\r\n                        Helper.showHelper(\"newSQLFileHelper\", this.main, this.fileListPanel.$captionElement);\r\n\r\n                    }\r\n\r\n                    this.main.notifier.connect(w);\r\n\r\n                } else {\r\n                    this.setModuleActive(null);\r\n                }\r\n\r\n            },\r\n            () => {\r\n                this.main.databaseExplorer.refreshAfterRetrievingDBStructure();\r\n                this.main.getHistoryViewer().clearAndShowStatements(w.database.statements);\r\n            });\r\n\r\n    }\r\n\r\n    writeEditorTextToFile() {\r\n        let cem = this.getCurrentlyEditedModule();\r\n        if (cem != null)\r\n            cem.file.text = cem.getProgramTextFromMonacoModel(); // 29.03. this.main.monaco.getValue();\r\n    }\r\n\r\n\r\n    lastOpenModule: Module = null;\r\n    setModuleActive(m: Module) {\r\n\r\n        this.main.bottomDiv.homeworkManager.hideRevision();\r\n\r\n        if (this.lastOpenModule != null) {\r\n            this.lastOpenModule.file.text = this.lastOpenModule.getProgramTextFromMonacoModel(); // this.main.monaco.getValue();\r\n            this.lastOpenModule.editorState = this.main.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (m == null) {\r\n            this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n        } else {\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.main.getMonacoEditor().setModel(m.model);\r\n            if (this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(m.bracketError);\r\n\r\n            if (m.file.text_before_revision != null) {\r\n                this.main.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n            } else {\r\n                this.main.bottomDiv.homeworkManager.hideHomeworkRevisionButton();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setActiveAfterExternalModelSet(m: Module) {\r\n        this.fileListPanel.select(m, false);\r\n\r\n        this.lastOpenModule = m;\r\n\r\n        if (m.editorState != null) {\r\n            this.main.editor.dontPushNextCursorMove++;\r\n            this.main.getMonacoEditor().restoreViewState(m.editorState);\r\n            this.main.editor.dontPushNextCursorMove--;\r\n        }\r\n\r\n        this.setCurrentlyEditedModule(m);\r\n\r\n        this.showProgramPointer();\r\n\r\n        setTimeout(() => {\r\n            if (!this.main.getMonacoEditor().getOptions().get(monaco.editor.EditorOption.readOnly)) {\r\n                this.main.getMonacoEditor().focus();\r\n            }\r\n        }, 300);\r\n\r\n    }\r\n\r\n\r\n    private showProgramPointer() {\r\n\r\n        if (this.programPointerModule == this.getCurrentlyEditedModule() && this.getCurrentlyEditedModule() != null) {\r\n            let position = this.programPointerPosition;\r\n            let range = {\r\n                startColumn: position.column, startLineNumber: position.line,\r\n                endColumn: position.column + position.length, endLineNumber: position.line\r\n            };\r\n\r\n            this.main.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n            this.programPointerDecoration = this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n                {\r\n                    range: range,\r\n                    options: {\r\n                        className: 'jo_revealProgramPointer', isWholeLine: true,\r\n                        overviewRuler: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.OverviewRulerLane.Center\r\n                        },\r\n                        minimap: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    range: range,\r\n                    options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n                }\r\n            ]);\r\n\r\n        }\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        // console statement execution:\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        let module = this.main.currentWorkspace.moduleStore.findModuleByFile(file);\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        this.programPointerModule = module;\r\n        this.programPointerPosition = position;\r\n\r\n        if (module != this.getCurrentlyEditedModule()) {\r\n            this.setModuleActive(module);\r\n        } else {\r\n            this.showProgramPointer();\r\n        }\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws == null) return null;\r\n\r\n        return ws.currentlyOpenModule;\r\n    }\r\n\r\n    setCurrentlyEditedModule(m: Module) {\r\n        if (m == null) return;\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws.currentlyOpenModule != m) {\r\n            ws.currentlyOpenModule = m;\r\n            ws.saved = false;\r\n            m.file.dirty = true;\r\n        }\r\n    }\r\n\r\n    setExplorerColor(color: string) {\r\n        let caption: string;\r\n\r\n        if (color == null) {\r\n            color = \"transparent\";\r\n            caption = \"Meine Datenbanken\";\r\n        } else {\r\n            caption = \"Schüler-DB\";\r\n        }\r\n\r\n        this.fileListPanel.$listElement.parent().css('background-color', color);\r\n        this.workspaceListPanel.$listElement.parent().css('background-color', color);\r\n\r\n        this.workspaceListPanel.setCaption(caption);\r\n    }\r\n\r\n    getNewModule(file: File): Module {\r\n        return new Module(file, this.main);\r\n    }\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class RightDiv {\r\n\r\n    isWholePage: boolean = false;\r\n\r\n    $tabs: JQuery<HTMLElement>;\r\n    $headings: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $rightDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$tabs = $rightDiv.find('.jo_tabs');\r\n        this.$headings = $rightDiv.find('.jo_tabheadings');\r\n        \r\n        let withClassDiagram = this.$headings.find('.jo_classDiagramTabHeading').length > 0;\r\n        let withObjectDiagram = this.$headings.find('.jo_objectDiagramTabHeading').length > 0;\r\n\r\n        let that = this;\r\n        let rightdiv_width: string = \"100%\";\r\n        $rightDiv.find('.jo_whole-window').on(\"click\", () => {\r\n\r\n            that.isWholePage = !that.isWholePage;\r\n            \r\n            let $wholeWindow = jQuery('.jo_whole-window');\r\n\r\n            if (!that.isWholePage) {\r\n                jQuery('#code').css('display', 'flex');\r\n                jQuery('#rightdiv').css('width', rightdiv_width);\r\n                // jQuery('#run').css('width', '');\r\n                $wholeWindow.removeClass('img_whole-window-back');\r\n                $wholeWindow.addClass('img_whole-window');\r\n                jQuery('#controls').insertAfter(jQuery('#view-mode'));\r\n                $wholeWindow.attr('title', 'Auf Fenstergröße vergrößern');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            } else {\r\n                jQuery('#code').css('display', 'none');\r\n                rightdiv_width = jQuery('#rightdiv').css('width');\r\n                jQuery('#rightdiv').css('width', '100%');\r\n                $wholeWindow.removeClass('img_whole-window');\r\n                $wholeWindow.addClass('img_whole-window-back');\r\n                // that.adjustWidthToWorld();\r\n                jQuery('.jo_control-container').append(jQuery('#controls'));\r\n                $wholeWindow.attr('title', 'Auf normale Größe zurückführen');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$rightDiv);\r\n    }\r\n\r\n\r\n\r\n}","import { jo_mouseDetected } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\nexport class Sliders {\r\n\r\n    main: Main;\r\n\r\n    constructor(main: Main) {\r\n        this.main = main;\r\n    }\r\n\r\n    initSliders() {\r\n        let that = this;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        jQuery('#slider1').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider1\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                \r\n                that.moveLeftPanel(dx);\r\n\r\n                x = mm.clientX;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider1\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider1\");\r\n                jQuery(document).off(mousePointer + \"up.slider1\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider2').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider2\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n\r\n                that.moveBottomDiv(dy);\r\n\r\n                y = mm.clientY;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider2\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider2\");\r\n                jQuery(document).off(mousePointer + \"up.slider2\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider3').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider3\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n\r\n                that.moveRightDiv(dx);\r\n\r\n                x = mm.clientX;\r\n                mm.stopPropagation();\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider3\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider3\");\r\n                jQuery(document).off(mousePointer + \"up.slider3\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        let sliderknobLeft = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"left: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobLeft);\r\n        sliderknobLeft.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopImmediatePropagation();\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobleft\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopImmediatePropagation();\r\n\r\n                that.moveLeftPanel(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobleft\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobleft\");\r\n                jQuery(document).off(mousePointer + \"up.knobleft\");\r\n            });\r\n\r\n        });\r\n\r\n        let sliderknobRight = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"right: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobRight);\r\n        sliderknobRight.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopImmediatePropagation();\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobright\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopImmediatePropagation();\r\n\r\n                that.moveRightDiv(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobright\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobright\");\r\n                jQuery(document).off(mousePointer + \"up.knobright\");\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n    \r\n    moveRightDiv(dx: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $rightDiv = jQuery('#rightdiv');\r\n\r\n        let width = Number.parseInt($rightDiv.css('width').replace('px', ''));\r\n        $rightDiv.css('width', (width - dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth + dx) + \"px\");\r\n        \r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n        jQuery('.jo_graphics').trigger('sizeChanged');\r\n        width += dx;\r\n}\r\n    moveBottomDiv(dy: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $bottomDiv = jQuery('#bottomdiv-outer');\r\n\r\n        let height = Number.parseInt($bottomDiv.css('height').replace('px', ''));\r\n        $bottomDiv.css('height', (height - dy) + \"px\");\r\n\r\n        let meheight = Number.parseInt($editor.css('height').replace('px', ''));\r\n        $editor.css('height', (meheight + dy) + \"px\");\r\n\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n}\r\n\r\n    moveLeftPanel(dx: number) {\r\n        let $leftPanel = jQuery('#leftpanel');\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n\r\n        let width = Number.parseInt($leftPanel.css('width').replace('px', ''));\r\n        $leftPanel.css('width', (width + dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth - dx) + \"px\");\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionPanel, AccordionElement } from \"./Accordion.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassData, UserData, CRUDUserRequest, CRUDClassRequest, GetWorkspacesResponse, GetWorkspacesRequest, Workspaces } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\nexport class TeacherExplorer {\r\n\r\n    studentPanel: AccordionPanel;\r\n    classPanel: AccordionPanel;\r\n\r\n    // save them here when displaying pupils workspaces:\r\n    ownWorkspaces: Workspace[];\r\n    currentOwnWorkspace: Workspace;\r\n\r\n    constructor(private main: Main, private classData: ClassData[]) {\r\n\r\n    }\r\n\r\n    removePanels() {\r\n        this.classPanel.remove();\r\n        this.studentPanel.remove();\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.initStudentPanel();\r\n\r\n        this.initClassPanel();\r\n\r\n        this.renderClasses(this.classData);\r\n\r\n    }\r\n\r\n    initStudentPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.studentPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Schüler/innen\", \"2\", null,\r\n            \"\", \"student\", false, false, \"student\", false, []);\r\n\r\n        this.studentPanel.selectCallback = (ae: UserData) => {\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let request: GetWorkspacesRequest = {\r\n                    ws_userId: ae.id,\r\n                    userId: this.main.user.id,\r\n                    language: 1\r\n                }\r\n\r\n                ajax(\"getWorkspaces\", request, (response: GetWorkspacesResponse) => {\r\n                    if (response.success == true) {\r\n\r\n                        if (that.main.workspacesOwnerId == that.main.user.id) {\r\n                            that.ownWorkspaces = that.main.workspaceList.slice();\r\n                            that.currentOwnWorkspace = that.main.currentWorkspace;\r\n                        }\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces);\r\n                        that.main.workspacesOwnerId = ae.id;\r\n                        that.main.projectExplorer.setExplorerColor(\"rgba(255, 0, 0, 0.2\");\r\n                        that.main.projectExplorer.$homeAction.show();\r\n                        Helper.showHelper(\"homeButtonHelper\", this.main);\r\n\r\n                        that.main.bottomDiv.showHomeworkTab();\r\n                        that.main.bottomDiv.homeworkManager.attachToWorkspaces(that.main.workspaceList);\r\n                    }\r\n\r\n                    this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n                    this.main.networkManager.secondsTillNextUpdate = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    restoreOwnWorkspaces() {\r\n        let main = this.main;\r\n\r\n        // main.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n        main.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        main.workspaceList = this.ownWorkspaces;\r\n        main.currentWorkspace = this.currentOwnWorkspace;\r\n        main.workspacesOwnerId = main.user.id;\r\n        main.projectExplorer.setExplorerColor(null);\r\n\r\n        main.projectExplorer.renderWorkspaces(main.workspaceList);\r\n\r\n        if (main.currentWorkspace == null && main.workspaceList.length > 0) {\r\n            main.currentWorkspace = main.workspaceList[0];\r\n        }\r\n\r\n        if (main.currentWorkspace != null) {\r\n            main.projectExplorer.setWorkspaceActive(main.currentWorkspace);\r\n        }\r\n\r\n        this.studentPanel.select(null, false);\r\n\r\n    }\r\n\r\n    initClassPanel() {\r\n        let that = this;\r\n\r\n        this.classPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Klassen\", \"1\", null, \"\", \"class\", false, false, \"class\", false, []);\r\n\r\n        this.classPanel.selectCallback = (ea) => {\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let classData = <ClassData>ea;\r\n                if (classData != null) {\r\n                    this.renderStudents(classData.students);\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    renderStudents(userDataList: UserData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        userDataList.sort((a, b) => {\r\n            if (a.familienname > b.familienname) return 1;\r\n            if (b.familienname > a.familienname) return -1;\r\n            if (a.rufname > b.rufname) return 1;\r\n            if (b.rufname > a.rufname) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let ud of userDataList) {\r\n            let ae: AccordionElement = {\r\n                name: ud.familienname + \", \" + ud.rufname,\r\n                sortName: ud.familienname + \" \" + ud.rufname,\r\n                externalElement: ud,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.studentPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n    renderClasses(classDataList: ClassData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        classDataList.sort((a, b) => {\r\n            if (a.name > b.name) return 1;\r\n            if (b.name > a.name) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let cd of classDataList) {\r\n            let ae: AccordionElement = {\r\n                name: cd.name,\r\n                externalElement: cd,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.classPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\n\r\nexport type Theme = {\r\n    name: string,\r\n    monacoTheme: string,\r\n    cssColors: { [color: string]: string }\r\n}\r\n\r\nexport class ThemeManager {\r\n\r\n    themes: Theme[] = [];\r\n\r\n    constructor() {\r\n        this.initThemes();\r\n    }\r\n\r\n    switchTheme(name: string) {\r\n        for (let theme of this.themes) {\r\n            if (theme.name == name) {\r\n                this.internalSwitchTheme(theme);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    internalSwitchTheme(theme: Theme) {\r\n        monaco.editor.setTheme(theme.monacoTheme);\r\n\r\n        let root = document.documentElement;\r\n        for (const key of Object.keys(theme.cssColors)) {\r\n            const value = theme.cssColors[key]\r\n\r\n            root.style.setProperty(key, value);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    initThemes() {\r\n\r\n        this.themes.push({\r\n            name: \"dark\",\r\n            monacoTheme: \"myCustomThemeDark\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"#1e1e1e\",\r\n                \"--backgroundLight\": \"#252526\",\r\n                \"--backgroundHeading\": \"#37373d\",\r\n                \"--backgroundSelected\": \"#2a2d2e\",\r\n                \"--fontColorNormal\": \"#c2cccc\",\r\n                \"--fontColorLight\": \"#e7e7e7\",\r\n                \"--slider\": \"#414141\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#1e1e1e\",\r\n                \"--scrollbar-thumb\": \"#3e3e3e\",\r\n                \"--scrollbar-thumb-hover\": \"#5e5e5e\",\r\n                \"--scrollbar-thumb-active\": \"#7e7e7e\",\r\n                \"--submenu-hover\": \"#094771\",\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#616162\",\r\n                \"--file-hover\": \"hsla(0, 0%, 38%, 0.125)\",\r\n                \"--file-active\": \"#094771\",\r\n                \"--file-active-hover\": \"rgba(9, 71, 113, 0.827)\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"blue\",\r\n                \"--contextmenu-background\": \"#3c3c3c\",\r\n                \"--contextmenu-color\": \"rgb(212,212,212)\",\r\n                \"--contextmenu-hover-background\": \"#094771\",\r\n                \"--contextmenu-hover-color\": \"#ffffff\",\r\n                \"--error-filename\": \"#2a709e\",\r\n                \"--error-line-ative\": \"#094771\",\r\n                \"--error-line-hover\": \"rgba(96, 96, 96, 0.125)\",\r\n                \"--error-position\": \"#c0802d\",\r\n                \"--linecolumn\": \"#14c714\",\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#2b2b7d2f\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"rgb(85,85,85)\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#383838\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#252526\",\r\n                \"--editorTooltip-border\": \"#454545\",\r\n\r\n                \"--renameInput-color\": \"#ffffff\",\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"white\",\r\n                \"--bottomdiv-tabheading-active\": \"rgb(97,97,255)\",\r\n                \"--noErrorMessage\": \"rgb(37, 211, 37)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"#1e1e1e\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"white\",\r\n                \"--consoleEntryIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"white\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 51, 51)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--deValue\": \"white\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#383838\",\r\n                \"--helper-border-color\": \"#d4d4d4\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#ffffff\",\r\n                \"--runInputColor\": \"#ffffff\",\r\n                \"--runBackgroundColor\": \"rgba(255, 255, 255, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n        let highlightColor = \"#8080ff\";\r\n\r\n        this.themes.push({\r\n            name: \"light\",\r\n            monacoTheme: \"myCustomThemeLight\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"white\",\r\n                \"--backgroundLight\": \"#f3f3f3\",\r\n                \"--backgroundHeading\": \"#dcdcdc\",\r\n                \"--backgroundSelected\": \"#e8e8e8\",\r\n                \"--fontColorNormal\": \"#756161\",\r\n                \"--fontColorLight\": \"#756161\",\r\n                \"--slider\": \"#b0b0b0\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#e3e3e3\",\r\n                \"--scrollbar-thumb\": \"#bababa\",\r\n                \"--scrollbar-thumb-hover\": \"#8e8e8e\",\r\n                \"--scrollbar-thumb-active\": \"#616161\",\r\n                \"--submenu-hover\": highlightColor,\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#cfcfcf\",\r\n                \"--file-hover\": \"#e8e8e8\",\r\n                \"--file-active\": highlightColor,\r\n                \"--file-active-hover\": \"#a0a0ff\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"white\",\r\n                \"--contextmenu-background\": \"white\",\r\n                \"--contextmenu-color\": \"#756161\",\r\n                \"--contextmenu-hover-background\": highlightColor,\r\n                \"--contextmenu-hover-color\": \"#a0a0ff\",\r\n                \"--error-filename\": \"#ff0000\",\r\n                \"--error-line-ative\": \"#ffa0a0\",\r\n                \"--error-line-hover\": \"#ffc0c0\",\r\n                \"--error-position\": \"#804040\",\r\n                \"--linecolumn\": \"#14c714\", // TODO\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#babaec80\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"#c0c0c0\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#e0e0e0\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#e0e0e0\",\r\n                \"--editorTooltip-border\": \"#9d9d9d\",\r\n\r\n                \"--renameInput-color\": \"#000000\",\r\n\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"#424242\",\r\n                \"--bottomdiv-tabheading-active\": \"#424242\",\r\n                \"--noErrorMessage\": \"rgb(17, 180, 17)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"white\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"#0000a0\",\r\n                \"--consoleEntryIdentifier\": \"black\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"#756161\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 21, 21)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"black\",\r\n                \"--deValue\": \"#0000a0\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#f3f3f3\",\r\n                \"--helper-border-color\": \"#606060\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#303030\",\r\n                \"--runInputColor\": \"#000000\",\r\n                \"--runBackgroundColor\": \"rgba(0, 0, 0, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { openContextMenu, ContextMenuItem } from \"../../tools/HtmlTools.js\";\r\nimport { Dialog } from \"./Dialog.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\n\r\nexport class UserMenu {\r\n\r\n\r\n\r\n    constructor(private main: Main){\r\n        \r\n    }\r\n\r\n    init(){\r\n        let $userSettingsButton = jQuery('#buttonUserSettings');\r\n        let that = this;\r\n\r\n        // $userSettingsButton.on(\"click\", (e) => {\r\n\r\n        //     let contextMenuItems: ContextMenuItem[] = [\r\n        //         {\r\n        //             caption: \"Passwort ändern...\",\r\n        //             callback: () => {\r\n        //                 let passwortChanger = new PasswordChanger(that.main);\r\n        //                 passwortChanger.show();\r\n        //             }\r\n        //         }\r\n        //     ]\r\n\r\n\r\n        //     openContextMenu(contextMenuItems, $userSettingsButton.offset().left, $userSettingsButton.offset().top + $userSettingsButton.height());\r\n\r\n        // });\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class PasswordChanger {\r\n\r\n    dialog: Dialog;\r\n\r\n    constructor(private main: Main){\r\n\r\n        this.dialog = new Dialog();\r\n\r\n    }\r\n\r\n    show() {\r\n        this.dialog.init();\r\n        this.dialog.heading(\"Passwort ändern\");\r\n        this.dialog.description(\"Bitte geben Sie Ihr bisheriges Passwort und darunter zweimal Ihr neues Passwort ein. <br>\" + \r\n        \"Das Passwort muss mindestens 8 Zeichen lang sein und sowohl Buchstaben als auch Zahlen oder Sonderzeichen enthalten.\")\r\n        let $oldPassword = this.dialog.input(\"password\", \"Altes Passwort\");\r\n        let $newPassword1 = this.dialog.input(\"password\", \"Neues Passwort\");\r\n        let $newPassword2 = this.dialog.input(\"password\", \"Neues Passwort wiederholen\");\r\n        let $errorDiv = this.dialog.description(\"\", \"red\");\r\n        let waitDiv = this.dialog.waitMessage(\"Bitte warten...\")\r\n\r\n        this.dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {this.dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    if($newPassword1.val() != $newPassword2.val()){\r\n                        $errorDiv.text(\"Die zwei eingegebenen neuen Passwörter stimmen nicht überein.\")\r\n                    } else {\r\n                        waitDiv(true);\r\n                        ajax(\"changePassword\", {oldPassword: $oldPassword.val(), newPassword: $newPassword1.val()}, () => {\r\n                            waitDiv(false);\r\n                            alert(\"Das Passwort wurde erfolgreich geändert.\");\r\n                            this.dialog.close();\r\n                        }, (message) => {\r\n                            waitDiv(false);\r\n                            $errorDiv.text(message)\r\n                        })\r\n                    }\r\n\r\n                }\r\n            },\r\n        ])\r\n    }\r\n\r\n}","import { ajax } from \"../communication/AjaxHelper.js\";\r\nimport { LoginRequest, LoginResponse, LogoutRequest, UserData } from \"../communication/Data.js\";\r\nimport { Main } from \"./Main.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { userInfo } from \"os\";\r\nimport { UserMenu } from \"./gui/UserMenu.js\";\r\nimport { escapeHtml } from \"../tools/StringTools.js\";\r\n\r\nexport class Login {\r\n\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        let that = this;\r\n\r\n        let $loginSpinner = jQuery('#login-spinner>img');\r\n\r\n        jQuery('#login-username').focus();\r\n\r\n        jQuery('#login-username').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-password').focus();\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-button').focus();\r\n                jQuery('#login-button').addClass('jo_active');\r\n            }\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-button').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-username').focus();\r\n                jQuery('#login-button').removeClass('jo_active');\r\n            } else {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        // Avoid double login when user does doubleclick:\r\n        let loginHappened = false;\r\n        jQuery('#login-button').on('click', () => {\r\n\r\n            $loginSpinner.show();\r\n\r\n            if (loginHappened) return;\r\n            loginHappened = true;\r\n\r\n            setTimeout(() => {\r\n                loginHappened = false;\r\n            }, 1000);\r\n\r\n            let loginRequest: LoginRequest = {\r\n                username: <string>jQuery('#login-username').val(),\r\n                password: <string>jQuery('#login-password').val(),\r\n                language: 1\r\n            }\r\n\r\n            ajax('login', loginRequest, (response: LoginResponse) => {\r\n\r\n                if (!response.success) {\r\n                    jQuery('#login-message').html('Fehler: Benutzername und/oder Passwort ist falsch.');\r\n                } else {\r\n\r\n                    // We don't do this anymore for security reasons - see AjaxHelper.ts\r\n                    // Alternatively we now set a long expiry interval for cookie.\r\n                    // credentials.username = loginRequest.username;\r\n                    // credentials.password = loginRequest.password;\r\n\r\n                    jQuery('#login').hide();\r\n\r\n                    this.main.waitOverlay.show('Bitte warten...');\r\n\r\n                    let user: UserData = response.user;\r\n                    if (user.settings == null || user.settings.helperHistory == null) {\r\n                        user.settings = {\r\n                            helperHistory: {\r\n                            },\r\n                            viewModes: null,\r\n                            classDiagram: null\r\n                        }\r\n                    }\r\n\r\n                    this.main.waitForGUICallback = () => {\r\n\r\n                        that.main.mainMenu.initGUI(user);\r\n\r\n                        that.main.waitOverlay.hide();\r\n                        $loginSpinner.hide();\r\n                        jQuery('#menupanel-username').html(escapeHtml(user.rufname) + \" \" + escapeHtml(user.familienname));\r\n\r\n                        new UserMenu(that.main).init();\r\n\r\n                        if (user.is_teacher) {\r\n                            that.main.initTeacherExplorer(response.classdata);\r\n                        }\r\n\r\n                        that.main.user = user;\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces);\r\n                        that.main.workspacesOwnerId = user.id;\r\n\r\n                        that.main.networkManager.initializeTimer();\r\n\r\n                        that.main.projectExplorer.fileListPanel.setFixed(!user.is_teacher);\r\n                        that.main.projectExplorer.workspaceListPanel.setFixed(!user.is_teacher);\r\n\r\n                        that.main.viewModeController.initViewMode();\r\n                        that.main.bottomDiv.hideHomeworkTab();\r\n\r\n                        that.main.networkManager.initializeNotifierClient();\r\n\r\n                    }\r\n\r\n                    if (this.main.startupComplete == 0) {\r\n                        this.main.waitForGUICallback();\r\n                        this.main.waitForGUICallback = null;\r\n                    }\r\n\r\n                }\r\n\r\n            }, (errorMessage: string) => {\r\n                jQuery('#login-message').html('Login gescheitert: ' + errorMessage);\r\n                jQuery('#login-spinner>img').hide();\r\n            }\r\n            );\r\n\r\n        });\r\n\r\n        jQuery('#buttonLogout').on('click', () => {\r\n\r\n            this.main.waitOverlay.show('Bitte warten, der letzte Bearbeitungsstand wird noch gespeichert ...');\r\n\r\n            if (this.main.workspacesOwnerId != this.main.user.id) {\r\n                this.main.projectExplorer.onHomeButtonClicked();\r\n            }\r\n\r\n            this.main.networkManager.sendUpdates(() => {\r\n\r\n                let logoutRequest: LogoutRequest = {\r\n                    currentWorkspaceId: this.main.currentWorkspace?.id\r\n                }\r\n\r\n                ajax('logout', logoutRequest, () => {\r\n                    // window.location.href = 'index.html';\r\n                    this.main.networkManager.sendUpdateUserSettings(() => {});\r\n\r\n                    jQuery('#login').show();\r\n                    this.main.waitOverlay.hide();\r\n                    jQuery('#login-message').empty();\r\n                    this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"\", \"myJava\"));\r\n                    this.main.projectExplorer.fileListPanel.clear();\r\n                    this.main.projectExplorer.workspaceListPanel.clear();\r\n\r\n                    this.main.databaseExplorer.clear();\r\n                    this.main.resultsetPresenter.clear();\r\n\r\n                    if (this.main.user.is_teacher) {\r\n                        this.main.teacherExplorer.removePanels();\r\n                        this.main.teacherExplorer = null;\r\n                    }\r\n\r\n\r\n                    this.main.currentWorkspace = null;\r\n                    this.main.user = null;\r\n\r\n\r\n                });\r\n            }, true);\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\nimport { ViewModes, ViewMode } from \"../../communication/Data\";\r\n\r\nexport class ViewModeController {\r\n\r\n    $buttonEditorFullscreen: JQuery<HTMLElement>;\r\n    $buttonPresentationMode: JQuery<HTMLElement>;\r\n    $buttonMonitorMode: JQuery<HTMLElement>;\r\n\r\n    $buttonMap: { [key: string]: JQuery<HTMLElement> } = {};\r\n\r\n    highContrast: boolean = false;\r\n    editorHasFullWidth: boolean = false;\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private main: Main) {\r\n\r\n        this.$buttonEditorFullscreen = jQuery('<div title=\"Editor in voller Breite\" class=\"img_whole-window jo_button jo_active\" style=\"padding: 1px; margin-right: 20px\"></div>');\r\n        this.$buttonPresentationMode = jQuery('<div title=\"Präsentation (Beamer)\" class=\"img_presentation-mode jo_button jo_active\" syle=\"padding: 1px\"></div>');\r\n        this.$buttonMonitorMode = jQuery('<div title=\"Monitor\" class=\"img_monitor-mode jo_button jo_active\" style=\"margin-left: 5px; padding: 1px\"></div>');\r\n        $buttonsContainer.append(this.$buttonEditorFullscreen, this.$buttonPresentationMode, this.$buttonMonitorMode);\r\n\r\n        this.$buttonMap = {\r\n            \"presentation\": this.$buttonPresentationMode,\r\n            \"monitor\": this.$buttonMonitorMode\r\n        };\r\n\r\n        let am = this.main.actionManager;\r\n\r\n        am.registerAction(\"editor.fullwidth\", [],\r\n            () => {\r\n                this.toggleEditorFullwidth();\r\n            }, \"Editor auf die volle Breite erweitern\", this.$buttonEditorFullscreen);\r\n\r\n        am.registerAction(\"viewmode.presentation\", [],\r\n            () => {\r\n                this.setMode(\"presentation\");\r\n            }, \"Präsentationsansicht\", this.$buttonPresentationMode);\r\n\r\n        am.registerAction(\"viewmode.monitor\", [],\r\n            () => {\r\n                this.setMode(\"monitor\");\r\n            }, \"Monitoransicht\", this.$buttonMonitorMode);\r\n\r\n    }\r\n\r\n    toggleEditorFullwidth() {\r\n        if(this.editorHasFullWidth){\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in voller Breite');\r\n            jQuery('#rightdiv').show(600);\r\n            jQuery('#leftpanel').show(600);\r\n            jQuery('#controls').show();\r\n        } else {\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in normaler Breite');\r\n            jQuery('#rightdiv').hide(600);\r\n            jQuery('#leftpanel').hide(600);\r\n            jQuery('#controls').hide();\r\n        }\r\n\r\n        setTimeout(()=>{\r\n            this.main.getMonacoEditor().layout();\r\n        }, 800);\r\n\r\n        this.editorHasFullWidth = !this.editorHasFullWidth;\r\n    }\r\n\r\n    setMode(mode: \"presentation\" | \"monitor\", saveSettings: boolean = true) {\r\n\r\n        let otherMode = mode == \"presentation\" ? \"monitor\" : \"presentation\";\r\n\r\n        this.$buttonMap[mode].addClass(\"jo_pressed\");\r\n        this.$buttonMap[otherMode].removeClass(\"jo_pressed\");\r\n\r\n        let settings = this.main.user.settings;\r\n        let viewModes = settings.viewModes;\r\n\r\n        let viewMode = viewModes[mode];\r\n        viewModes.viewModeChosen = mode;\r\n\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n\r\n        this.main.editor.setFontSize(viewMode.fontSize);\r\n\r\n        if (this.highContrast != viewMode.highContrast) {\r\n            let editor = this.main.getMonacoEditor();\r\n            editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n            this.highContrast = !this.highContrast;\r\n        }\r\n\r\n        if (saveSettings) this.saveSettings();\r\n\r\n    }\r\n\r\n    saveFontSize(fontSizePx: number) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.fontSize = fontSizePx;\r\n        this.saveSettings();\r\n    }\r\n\r\n    setTheme(theme: string) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.theme = theme;\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n        this.saveSettings();\r\n    }\r\n\r\n    toggleHighContrast() {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.highContrast = !viewMode.highContrast;\r\n        let editor = this.main.getMonacoEditor();\r\n        editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n        this.saveSettings();\r\n    }\r\n\r\n    getChosenViewMode(): ViewMode {\r\n        let viewModes = this.main.user.settings.viewModes;\r\n        return viewModes[viewModes.viewModeChosen];\r\n    }\r\n\r\n    saveSettings() {\r\n        this.main.userDataDirty = true;\r\n    }\r\n\r\n    initViewMode() {\r\n        let settings = this.main.user.settings;\r\n\r\n        if (settings[\"viewModes\"] == null) {\r\n            settings[\"viewModes\"] = {\r\n                monitor: null,\r\n                presentation: null,\r\n                viewModeChosen: \"monitor\"\r\n            }\r\n        }\r\n\r\n        if (settings.viewModes.monitor == null) {\r\n            settings.viewModes.monitor = {\r\n                fontSize: 14,\r\n                highContrast: false,\r\n                theme: \"dark\"\r\n            };\r\n\r\n            settings.viewModes.presentation = {\r\n                fontSize: 18,\r\n                highContrast: false,\r\n                theme: \"light\"\r\n            }\r\n            this.saveSettings();\r\n        }\r\n        this.setMode(settings.viewModes.viewModeChosen, false);\r\n    }\r\n\r\n\r\n}","import { Main } from \"../../main/Main.js\";\r\nimport { TextPosition } from \"../lexer/Token\";\r\nimport { Module } from \"./Module\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype SemicolonPosition = {\r\n    position: TextPosition;\r\n    module: Module;\r\n    firstSeenMs: number;\r\n    isThereAgain: boolean;\r\n}\r\n\r\nexport class SemicolonAngel {\r\n    \r\n    semicolonPositions: SemicolonPosition[] = [];\r\n    time: number;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    startRegistering(){\r\n        this.semicolonPositions.forEach(p => p.isThereAgain = false);\r\n        this.time = new Date().getTime();\r\n    }\r\n\r\n    register(position: TextPosition, module: Module){\r\n        let oldEvidence = this.semicolonPositions.find(p => p.position.line == position.line && p.position.column == position.column);\r\n        if(oldEvidence){\r\n            oldEvidence.isThereAgain = true;\r\n        } else {\r\n            this.semicolonPositions.push({position: position, firstSeenMs: this.time, isThereAgain: true, module: module});\r\n        }\r\n    }\r\n\r\n    healSemicolons(){\r\n        let time = new Date().getTime();\r\n        this.semicolonPositions = this.semicolonPositions.filter(p => p.isThereAgain);\r\n\r\n        let currentlyEditedModule = this.main.getCurrentlyEditedModule();\r\n        let cursorLine = this.main.getMonacoEditor().getPosition().lineNumber;\r\n\r\n        this.semicolonPositions.filter(p => time - p.firstSeenMs > 2000).forEach(p => {\r\n\r\n            let isCurrentModule = p.module.file.id != null && p.module.file.id == currentlyEditedModule.file.id;\r\n\r\n            let editOperations: monaco.editor.IIdentifiedSingleEditOperation[] = [\r\n                {\r\n                    range: new monaco.Range(p.position.line, p.position.column, p.position.line, p.position.column),\r\n                    text: \";\",\r\n                    forceMoveMarkers: true\r\n                }\r\n            ]\r\n\r\n            if(isCurrentModule){\r\n                if(Math.abs(cursorLine - p.position.line) > 1){\r\n                    let editor = this.main.getMonacoEditor();\r\n                    const selection = editor.getSelection();\r\n                    editor.executeEdits('Semicolon-Angel', editOperations);\r\n                    editor.setSelection(selection);\r\n                    this.semicolonPositions.splice(this.semicolonPositions.indexOf(p), 1);\r\n                }\r\n            } \r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\nimport { Table, Column } from \"../../compiler/parser/SQLTable.js\";\nimport { DatabaseStructure } from \"../../tools/DatabaseTools.js\";\n\nexport class DatabaseExplorer {\n\n    collapsedTables: Map<string, boolean> = new Map();\n\n    constructor(private main: MainBase, public $mainDiv: JQuery<HTMLElement>) {\n\n    }\n\n    refresh() {\n\n        let dbTool = this.main.getDatabaseTool();\n\n        dbTool.retrieveDatabaseStructure((dbstructure: DatabaseStructure) => {\n\n            this.refreshAfterRetrievingDBStructure();\n        });\n\n    }\n\n    clear(){\n        this.$mainDiv.empty();\n    }\n\n    refreshAfterRetrievingDBStructure() {\n        let dbTool = this.main.getDatabaseTool();\n        let workspace = this.main.getCurrentWorkspace();\n        if (workspace != null) {\n            for (let m of workspace.moduleStore.getModules(false)) {\n                m.file.dirty = true;\n            }\n        }\n\n        let tables = Table.fromTableStructureList(dbTool.databaseStructure.tables);\n\n        this.$mainDiv.empty();\n\n        for (let table of tables) {\n            if(table.identifier != \"sqlite_sequence\"){\n                let $table = this.renderTable(table);\n                this.$mainDiv.append($table);\n            }\n        }\n\n    }\n\n    renderTable(table: Table): JQuery<HTMLElement> {\n        let isCollapsed = this.collapsedTables.get(table.identifier) != null;\n\n        let $table = jQuery(\n            `<div class=\"jo_table\">\n           <div class=\"jo_tableheader\">\n              <div class=\"${isCollapsed ? 'img_tree-collapsed-dark' : 'img_tree-expanded-dark'} jo_treeswitch jo_button jo_active\"></div>\n              <div class=\"jo_tableheaderlink\">\n                <div class=\"img_table\"></div>\n                <div>${table.identifier}</div></div><div class=\"jo_tablesize\">(${table.size}&nbsp;Datensätze)</div>\n              </div>\n            </div>\n        </div>`);\n\n        $table.find('.jo_tableheader').on('pointerup', () => {\n            this.main.getResultsetPresenter().showTable(table.identifier);\n\n        })\n\n        let $columns = jQuery('<div class=\"jo_columnlist\"></div>')\n\n        for (let column of table.columns) {\n            let image = column.isPrimaryKey ? \"img_key\" : \"img_column\";\n\n            let referencesHtml = \"\";\n            if (column.references != null) {\n                referencesHtml = `<div class=\"img_foreign_key\" style=\"margin-left: 5px\"></div><div class=\"jo_references\">${column.references.table.identifier}.${column.references.identifier}</div>`\n            }\n\n            let type = column.type == null ? \"\" : column.type.toString();\n            let notNull: string = column.notNull ? '<div class=\"jo_dbnotnull\">not null</div>' : \"\";\n            let defaultValue: string = column.defaultValue ? `<div class=\"jo_dbdefault\">default ${column.defaultValue}</div>` : \"\";\n            let autoincrement: string = column.isAutoIncrement ? `<div class=\"jo_dbautoincrement\">autoincrement</div>` : \"\";\n\n            let $column = jQuery(`\n            <div class=\"jo_column\">\n                <div class=\"${image}\"></div>\n                <div>${column.identifier}</div>\n                <div class=\"jo_dbtype\">${type}</div>\n                ${autoincrement}\n                ${referencesHtml}\n                ${notNull}\n                ${defaultValue}\n            </div>\n            `);\n            $columns.append($column);\n        }\n\n        $table.append($columns);\n\n        let $treeSwitch = $table.find('.jo_treeswitch');\n        let that = this;\n        $treeSwitch.on('pointerup', (e) => {\n            e.stopPropagation();\n            let $columnList = $treeSwitch.parents('.jo_table').find('.jo_columnlist');\n            let collapsed = $treeSwitch.hasClass('img_tree-collapsed-dark');\n            if (collapsed) {\n                $treeSwitch.removeClass('img_tree-collapsed-dark');\n                $treeSwitch.addClass('img_tree-expanded-dark');\n                $columnList.slideDown(300);\n                that.collapsedTables.delete(table.identifier);\n            } else {\n                $treeSwitch.removeClass('img_tree-expanded-dark');\n                $treeSwitch.addClass('img_tree-collapsed-dark');\n                $columnList.slideUp(300);\n                that.collapsedTables.set(table.identifier, true);\n            }\n        });\n\n        return $table;\n    }\n\n\n\n}","// <div id=\"controls\">\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n// </div>\r\n\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { ResultsetPresenter } from \"./ResultsetPresenter.js\";\r\n\r\n\r\nexport class ProgramControlButtons {\r\n\r\n    $buttonStart: JQuery<HTMLElement>;\r\n    $buttonRollback: JQuery<HTMLElement>;\r\n    // $buttonPause: JQuery<HTMLElement>;\r\n    // $buttonStop: JQuery<HTMLElement>;\r\n    // $buttonStepOver: JQuery<HTMLElement>;\r\n    // $buttonStepInto: JQuery<HTMLElement>;\r\n    // $buttonStepOut: JQuery<HTMLElement>;\r\n    // $buttonRestart: JQuery<HTMLElement>;\r\n\r\n    // $buttonEdit: JQuery<HTMLElement>;\r\n\r\n\r\n    constructor(private main: MainBase, private $buttonsContainer: JQuery<HTMLElement>) {\r\n\r\n        this.$buttonStart = jQuery('<div title=\"Start\" class=\"img_start-dark jo_button\"></div>');\r\n        this.$buttonRollback = jQuery('<div title=\"Rollback\" class=\"img_undo jo_button\"></div>');\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        am.registerAction(\"execute\", ['Strg + Enter'],\r\n            () => {\r\n                if (am.isActive(\"execute\")) {\r\n\r\n                    this.main.getResultsetPresenter().executeSelectedStatements();\r\n                }\r\n\r\n            }, \"SQL-Statement ausführen\", this.$buttonStart\r\n        );\r\n\r\n        am.setActive('execute',false);\r\n\r\n        am.registerAction(\"rollback\", ['Strg + LeftArrow'],\r\n            () => {\r\n                if (am.isActive(\"rollback\")) {\r\n\r\n                    this.main.getHistoryViewer().rollback();\r\n                }\r\n\r\n            }, \"Letztes schreibendes SQL-Statement rückgängig machen\", this.$buttonRollback\r\n        );\r\n\r\n        am.setActive('rollback',false);\r\n\r\n        // this.$buttonPause = jQuery('<div title=\"Pause\" class=\"img_pause-dark jo_button\"></div>');\r\n        // this.$buttonStop = jQuery('<div title=\"Stop\" class=\"img_stop-dark jo_button\"></div>');\r\n        // this.$buttonStepOver = jQuery('<div title=\"Step over\" class=\"img_step-over-dark jo_button\"></div>');\r\n        // this.$buttonStepInto = jQuery('<div title=\"Step into\" class=\"img_step-into-dark jo_button\"></div>');\r\n        // this.$buttonStepOut = jQuery('<div title=\"Step out\" class=\"img_step-out-dark jo_button\"></div>');\r\n        // this.$buttonRestart = jQuery('<div title=\"Restart\" class=\"img_restart-dark jo_button\"></div>');\r\n\r\n        // this.$buttonEdit = jQuery('<div class=\"jo_editButton\" title=\"Programm anhalten damit der Programmtext bearbeitbar wird\"></div>')\r\n        // $editorContainer.append(this.$buttonEdit);\r\n\r\n        $buttonsContainer.append(this.$buttonStart, this.$buttonRollback\r\n            // , this.$buttonPause, this.$buttonStop,\r\n            // this.$buttonStepOver, this.$buttonStepInto, this.$buttonStepOut, this.$buttonRestart\r\n        );\r\n\r\n        // <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n        // <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n        // <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n        // <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n        // <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n        // <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n        // <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n        // <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n\r\n\r\n\r\n    }\r\n\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { SQLStatement } from \"../../compiler/parser/Parser.js\";\r\nimport { StatementCleaner } from \"../../compiler/parser/StatementCleaner.js\";\r\nimport { QueryResult } from \"../../tools/DatabaseTools.js\";\r\nimport { WDatabase } from \"../../workspace/WDatabase.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\ntype RuntimeError = {\r\n    statement: SQLStatement,\r\n    message: string\r\n}\r\n\r\nexport interface WriteQueryListener {\r\n    notify(statements: SQLStatement[]): void;\r\n}\r\n\r\nexport class ResultsetPresenter {\r\n\r\n    $paginationDiv: JQuery<HTMLDivElement>;\r\n    $infoDiv: JQuery<HTMLDivElement>;\r\n    $arrowLeft: JQuery<HTMLDivElement>;\r\n    $arrowRight: JQuery<HTMLDivElement>;\r\n\r\n    paginationFrom: number;\r\n    paginationAll: number;\r\n\r\n    paginationSize: number = 1000;\r\n\r\n    result: QueryResult;\r\n\r\n    writeQueryListeners: WriteQueryListener[] = [];\r\n\r\n    public static StatementDelimiter: string = \";\\n\\n\"\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$paginationDiv = <any>$bottomDiv.find('.jo_pagination');\r\n        this.$arrowLeft = jQuery('<div class=\"jo_button img_arrow-left-dark jo_active\"></div>');\r\n        this.$infoDiv = jQuery('<div class=\"jo_pagination_info\"><span class=\"jo_pagination_fromto\">0001-1000</span>/<span class=\"jo_pagination_all\">5000</span></div>');\r\n        this.$arrowRight = jQuery('<div class=\"jo_button img_arrow-right-dark jo_active\"></div>');\r\n\r\n        this.$paginationDiv.empty();\r\n        this.$paginationDiv.append(this.$arrowLeft, this.$infoDiv, this.$arrowRight);\r\n\r\n        this.$paginationDiv.hide();\r\n\r\n        let mousePointer = (window.PointerEvent ? \"pointer\" : \"mouse\") + 'up';\r\n\r\n        let that = this;\r\n        this.$arrowLeft.on(mousePointer, (e) => {\r\n            if (that.paginationFrom > 1) {\r\n                that.paginationFrom = Math.max(that.paginationFrom - that.paginationSize, 1);\r\n                if (that.paginationFrom % 1000 != 1) {\r\n                    that.paginationFrom = (Math.floor(that.paginationFrom / that.paginationSize) + 1) * that.paginationSize + 1;\r\n                }\r\n                that.showResults();\r\n                that.activateButtons();\r\n            }\r\n        })\r\n\r\n        this.$arrowRight.on(mousePointer, (e) => {\r\n            if (that.paginationFrom < this.paginationAll - that.paginationSize + 1) {\r\n                that.paginationFrom = Math.min(that.paginationFrom + that.paginationSize, that.paginationAll - that.paginationSize + 1);\r\n                that.showResults();\r\n                that.activateButtons();\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    public addWriteQueryListener(listener: WriteQueryListener) {\r\n        this.writeQueryListeners.push(listener);\r\n    }\r\n\r\n    private activateButtons() {\r\n        this.$arrowLeft.toggleClass('jo_active', this.paginationFrom > 1);\r\n        this.$arrowRight.toggleClass('jo_active', this.paginationFrom < this.paginationAll - this.paginationSize + 1);\r\n    }\r\n\r\n    executeSelectedStatements() {\r\n\r\n        let statements = this.fetchSelectedStatements().filter(st => st.ast.type != TokenType.omittedeStatement);\r\n        \r\n        if (statements.length == 0) return;\r\n\r\n        let hasDDLStatements: boolean = statements.some(st => this.isDDLStatement(st));\r\n        let hasWriteStatements: boolean = statements.some(st => this.isWriteStatement(st));\r\n        let workspace = this.main.getCurrentWorkspace();\r\n        let database = workspace.database;\r\n\r\n        if (hasDDLStatements && workspace.permissions <= 1) {\r\n            alert(\"Der Benutzer hat keine Berechtigung zum Ändern der Tabellenstruktur.\");\r\n            return;\r\n        }\r\n\r\n        if (hasWriteStatements && workspace.permissions == 0) {\r\n            alert(\"Der Benutzer hat keine Berechtigung zum Einfügen/Löschen/Ändern von Datensätzen.\");\r\n            return;\r\n        }\r\n\r\n        if (hasDDLStatements || hasWriteStatements) {\r\n            if (this.main.isEmbedded()) {\r\n                this.executeDDLWriteStatementsEmbedded(workspace, statements, database);\r\n\r\n            } else {\r\n                this.executeDDLWriteStatementsInOnlineIDE(workspace, statements, database);\r\n            }\r\n\r\n        } else {\r\n            this.executeStatements(statements, 0, [], () => { });\r\n        }\r\n\r\n    }\r\n\r\n    executeDDLWriteStatementsEmbedded(workspace: Workspace, statements: SQLStatement[], database: WDatabase) {\r\n        let sucessfullyExecutedModifyingStatements: SQLStatement[] = [];\r\n        this.executeStatements(statements, 0, sucessfullyExecutedModifyingStatements, () => {\r\n\r\n            if (sucessfullyExecutedModifyingStatements.length == 0)\r\n                return;\r\n\r\n            this.main.getDatabaseExplorer().refresh();\r\n\r\n            this.writeQueryListeners.forEach(listener => listener.notify(sucessfullyExecutedModifyingStatements))\r\n        })\r\n    }\r\n\r\n    private executeDDLWriteStatementsInOnlineIDE(workspace: Workspace, statements: SQLStatement[], database: WDatabase) {\r\n        let main: Main = <Main>this.main;\r\n        // Step 1: Update Database to newest version to avoid potential database reset\r\n        main.networkManager.getNewStatements(workspace, (new_statements, firstStatementIndex) => {\r\n\r\n            main.notifier.executeNewStatements(new_statements, firstStatementIndex, () => { },\r\n                () => {\r\n                    // Step 2: Execute new statements to see which are successful\r\n                    let sucessfullyExecutedModifyingStatements: SQLStatement[] = [];\r\n                    this.executeStatements(statements, 0, sucessfullyExecutedModifyingStatements, () => {\r\n\r\n                        if (sucessfullyExecutedModifyingStatements.length == 0)\r\n                            return;\r\n\r\n                        // Step 3: Send successful statements to server in order to retrieve new db-version-number\r\n                        main.networkManager.AddDatabaseStatements(workspace, sucessfullyExecutedModifyingStatements.map(st => st.sqlCleaned == null ? st.sql : st.sqlCleaned), (statements_before, new_version) => {\r\n\r\n                            // Step 4: If another user sent statements between steps 1 and 3 then they are in array statements_before.\r\n                            // Add all new statements to local statement list\r\n                            statements_before.forEach(st => database.statements.push(st));\r\n                            this.main.getHistoryViewer().appendStatements(statements_before);\r\n                            let modifyingStatements = sucessfullyExecutedModifyingStatements.map(st => st.sqlCleaned == null ? st.sql : st.sqlCleaned)\r\n                            database.statements = database.statements.concat(modifyingStatements);\r\n                            this.main.getHistoryViewer().appendStatements(modifyingStatements);\r\n                            database.version = new_version;\r\n\r\n                            // Step 5 (worst case): statements before is not empty, so the should be executed before the statements executed in step 2\r\n                            // => clear whole database and execute all statements in the right order, beginning with a empty database.\r\n                            if (statements_before.length > 0) {\r\n\r\n                                this.resetDatabase(database);\r\n\r\n                            } else {\r\n\r\n                                main.getDatabaseExplorer().refresh();\r\n\r\n                            }\r\n\r\n                        });\r\n                    });\r\n                }, false);\r\n        });\r\n    }\r\n\r\n    resetDatabase(database: WDatabase) {\r\n        this.main.getDatabaseTool().initializeWorker(database.templateDump, database.statements, () => {\r\n            this.main.getDatabaseExplorer().refresh();\r\n        })\r\n    }\r\n\r\n    executeStatementsString(statements: string[], fromIndex: number, callback: () => void) {\r\n        if (statements.length == 0) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (fromIndex < statements.length) {\r\n            this.main.getDatabaseTool().executeQuery(statements[fromIndex],\r\n                (results) => { this.executeStatementsString(statements, fromIndex + 1, callback) },\r\n                (error) => { console.log(\"Error when executing statement \" + statements[fromIndex] + \"\\nError : \" + error); this.executeStatementsString(statements, fromIndex + 1, callback) });\r\n        } else {\r\n            callback();\r\n        }\r\n    }\r\n\r\n\r\n    executeStatements(statements: SQLStatement[], index: number, successfullyExecutedModifyingStatements: SQLStatement[], callback: () => void, errors: RuntimeError[] = []) {\r\n\r\n        if (index >= statements.length) {\r\n            this.showErrors(errors);\r\n\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        let statement = statements[index];\r\n\r\n\r\n        let callback1 = () => {\r\n            this.executeStatements(statements, index + 1, successfullyExecutedModifyingStatements, callback, errors);\r\n        }\r\n\r\n        if (statement.ast == null) {\r\n            callback1();\r\n            return;\r\n        }\r\n\r\n        if (statement.ast.type == TokenType.keywordSelect) {\r\n            let laterSelectExists: boolean = false;\r\n            for (let j = index + 1; j < statements.length; j++) laterSelectExists = laterSelectExists || this.isSelectStatement(statements[j]);\r\n            if (laterSelectExists) {\r\n                callback1();\r\n            } else {\r\n                if (statement.ast.limitNode == null) {\r\n                    statement.sql.trimRight();\r\n                    while (statement.sql.endsWith(\";\") || statement.sql.endsWith(\"\\n\") || statement.sql.endsWith(\"\\r\")) {\r\n                        statement.sql = statement.sql.substring(0, statement.sql.length - 1);\r\n                        statement.sql.trimRight();\r\n                    }\r\n                    statement.sql += \" limit 100000\";\r\n                }\r\n                this.main.getDatabaseTool().executeQuery(statement.sql,\r\n                    (results) => { this.presentResultsIntern(statement.sql, results); callback1(); },\r\n                    (error) => { errors.push({ statement: statement, message: error }); callback1(); });\r\n            }\r\n        } else {\r\n            let sql = new StatementCleaner().clean(statement);\r\n            console.log(sql);\r\n            this.main.getDatabaseTool().executeQuery(sql, (results) => { successfullyExecutedModifyingStatements.push(statement); callback1(); }, (error) => { errors.push({ statement: statement, message: error }); callback1(); });\r\n        }\r\n\r\n    }\r\n\r\n    oldErrorDecorations: string[] = [];\r\n    showErrorDecorations(errors: RuntimeError[]) {\r\n\r\n        let minimapColors = {\r\n            \"error\": \"#bc1616\",\r\n            \"warning\": \"#cca700\",\r\n            \"info\": \"#75beff\"\r\n        }\r\n\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        let markers: monaco.editor.IMarkerData[] = [];\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n        for (let error of errors) {\r\n            let errorlevel = \"error\";\r\n\r\n            let linesDecorationsClassName: string;\r\n            let borderLeftClass: string;\r\n            let minimapColor: string = minimapColors[errorlevel];\r\n\r\n            switch (errorlevel) {\r\n                case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n            }\r\n\r\n            let severity: monaco.MarkerSeverity;\r\n            switch (errorlevel) {\r\n                case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n            }\r\n\r\n            markers.push({\r\n                startLineNumber: error.statement.from.line,\r\n                startColumn: error.statement.from.column,\r\n                endLineNumber: error.statement.to.line,\r\n                endColumn: error.statement.to.column,\r\n                message: error.message,\r\n                severity: severity\r\n            });\r\n\r\n            decorations.push({\r\n                range: {\r\n                    startLineNumber: error.statement.from.line,\r\n                    startColumn: error.statement.from.column,\r\n                    endLineNumber: error.statement.to.line,\r\n                    endColumn: error.statement.to.column,\r\n                },\r\n                options: {\r\n                    linesDecorationsClassName: linesDecorationsClassName,\r\n                    minimap: {\r\n                        position: monaco.editor.MinimapPosition.Inline,\r\n                        color: minimapColor\r\n                    }\r\n                }\r\n\r\n            });\r\n\r\n\r\n        }\r\n\r\n        let model = this.main.getCurrentlyEditedModule().model;\r\n        monaco.editor.setModelMarkers(model, 'test', markers);\r\n        this.oldErrorDecorations = model.deltaDecorations(this.oldErrorDecorations, decorations);\r\n\r\n    }\r\n\r\n    showTable(identifier: string) {\r\n        let statement = \"select * from \" + identifier + \";\";\r\n        this.main.getDatabaseTool().executeQuery(statement,\r\n            (results) => { this.presentResultsIntern(statement, results); },\r\n            (error) => { });\r\n    }\r\n\r\n\r\n\r\n    showErrors(errors: RuntimeError[]) {\r\n        let $runtimeErrorsTab = this.$bottomDiv.find('.jo_errorsTab');\r\n        let $runtimeErrorsTabHeading = this.$bottomDiv.find('.jo_errorsTabheading');\r\n\r\n        $runtimeErrorsTab.empty();\r\n        this.showErrorDecorations(errors);\r\n\r\n        if (errors.length == 0) return;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        $runtimeErrorsTabHeading.trigger(mousePointer + \"down\");\r\n\r\n        let $errorList = jQuery('<div class=\"jo_errorlist\"></div>');\r\n        $runtimeErrorsTab.append($errorList);\r\n\r\n        for (let error of errors) {\r\n            let query = error.statement.sql;\r\n            query = query.replace(/\\n/g, \" \");\r\n            query = query.replace(/\\s\\s+/g, ' ');\r\n\r\n            let $errorLine = $('<div class=\"jo_error-line\" style=\"flex-direction:column; width: fit-content\"></div>')\r\n            $errorList.append($errorLine);\r\n\r\n            $errorLine.on(mousePointer + 'down', () => {\r\n                let range = {\r\n                    startColumn: error.statement.from.column, startLineNumber: error.statement.from.line,\r\n                    endColumn: error.statement.to.column, endLineNumber: error.statement.to.line\r\n                };\r\n\r\n                this.main.getMonacoEditor().revealRangeInCenter(range);\r\n                $errorList.find('.jo_error-line').removeClass('jo_active');\r\n                $errorLine.addClass('jo_active');\r\n\r\n            })\r\n\r\n\r\n            let $sqlDiv = $('<div class=\"jo_sqlErrorStatement\"></div>');\r\n            $errorLine.append($sqlDiv);\r\n\r\n            monaco.editor.colorize(query, \"vscSQL\", {}).then(\r\n                (html) => { $sqlDiv.html(html) });\r\n\r\n            let $messageDiv = $('<div class=\"jo_sqlErrorMessage\">' + error.message + '</div>');\r\n            $errorLine.append($messageDiv);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    isSelectStatement(statement: SQLStatement): boolean {\r\n        return statement.ast != null && statement.ast.type == TokenType.keywordSelect;\r\n    }\r\n\r\n    isDDLStatement(statement: SQLStatement): boolean {\r\n        return statement.ast != null && [TokenType.keywordCreate, TokenType.keywordDrop, TokenType.keywordAlter].indexOf(statement.ast.type) >= 0;\r\n    }\r\n\r\n    isWriteStatement(statement: SQLStatement): boolean {\r\n        return statement.ast != null && [TokenType.keywordInsert, TokenType.keywordDelete, TokenType.keywordUpdate].indexOf(statement.ast.type) >= 0;\r\n    }\r\n\r\n    private presentResultsIntern(query: string, results: QueryResult[]) {\r\n        let $resultTabheading = this.$bottomDiv.find('.jo_resultTabheading');\r\n        let $resultHeader = this.$bottomDiv.find('.jo_result-header');\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        $resultTabheading.trigger(mousePointer + \"down\");\r\n        this.result = results.pop();\r\n\r\n        let headerDiv = $resultHeader;\r\n\r\n        query = query.replace(/\\n/g, \" \");\r\n        query = query.replace(/\\s\\s+/g, ' ');\r\n        query = query.replace(/limit 100000/g, '');\r\n\r\n        monaco.editor.colorize(query, \"vscSQL\", {}).then(\r\n            (html) => { headerDiv.html(html) });\r\n\r\n        this.paginationAll = this.result ? this.result.values.length : 0;\r\n        this.$infoDiv.find('.jo_pagination_all').html(`${this.paginationAll}`);\r\n        this.paginationFrom = 1;\r\n        this.$paginationDiv.show();\r\n        this.activateButtons();\r\n\r\n        this.showResults();\r\n\r\n    }\r\n\r\n    public clear() {\r\n        let $bodyDiv = this.$bottomDiv.find('.jo_result-body');\r\n        $bodyDiv.empty();\r\n        this.$paginationDiv.hide();\r\n    }\r\n\r\n    private showResultsBusy: boolean = false;\r\n    private showResultPending: boolean = false;\r\n\r\n    private showResults() {\r\n        let $bodyDiv = this.$bottomDiv.find('.jo_result-body');\r\n\r\n        if (this.result == null) {\r\n            this.$infoDiv.find('.jo_pagination_fromto').html('---');\r\n            $bodyDiv.html('Die Datenbank lieferte eine leere Ergebnistabelle.');\r\n            return;\r\n        }\r\n\r\n        let that = this;\r\n        let from = this.paginationAll == 0 ? 0 : this.paginationFrom;\r\n        let to = this.paginationAll == 0 ? 0 : Math.min(this.paginationFrom + this.paginationSize - 1, this.paginationAll);\r\n        this.$infoDiv.find('.jo_pagination_fromto').html(`${from}-${to}`)\r\n\r\n        if (this.showResultsBusy) {\r\n            if (this.showResultPending) {\r\n                return;\r\n            }\r\n            this.showResultPending = true;\r\n            let waitFunction = () => {\r\n                if (that.showResultsBusy) {\r\n                    setTimeout(() => {\r\n                        waitFunction();\r\n                    }, 200);\r\n                } else {\r\n                    that.showResultPending = false;\r\n                    that.showResults();\r\n                }\r\n            }\r\n            setTimeout(waitFunction, 200);\r\n            return;\r\n        }\r\n\r\n        this.showResultsBusy = true;\r\n\r\n        let $table = jQuery('<table></table>');\r\n        let $header = jQuery('<tr></tr>');\r\n        $table.append($header);\r\n\r\n        this.result.columns.forEach((column) => { $header.append(jQuery(`<th><div>${column}</div></th>`)) });\r\n\r\n        let rows = this.result.values.slice(this.paginationFrom - 1, this.paginationFrom + this.paginationSize - 1);\r\n\r\n        let i = 0;\r\n        let f = () => {\r\n            if (i < rows.length) {\r\n                for (let j = i; j < Math.min(i + 200, rows.length); j++) {\r\n                    let row = rows[j];\r\n                    let $row = jQuery('<tr></tr>');\r\n                    $table.append($row);\r\n                    row.forEach((cell) => { $row.append(jQuery(`<td>${cell}</td>`)) });\r\n                }\r\n                i = Math.min(i + 200, rows.length);\r\n                if (i < rows.length) {\r\n                    setTimeout(f, 30);\r\n                } else {\r\n                    $bodyDiv.empty().append($table);\r\n                    this.showResultsBusy = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        f();\r\n\r\n        // rows.forEach((row) => {\r\n        //     let $row = jQuery('<tr></tr>');\r\n        //     $table.append($row);\r\n        //     row.forEach((cell) => {$row.append(jQuery(`<td>${cell}</td>`))});\r\n        // });\r\n\r\n        // bodyDiv.empty().append($table);\r\n\r\n    }\r\n\r\n\r\n    fetchSelectedStatements(): SQLStatement[] {\r\n        let module = this.main.getCurrentlyEditedModule();\r\n        if (module == null) return null;\r\n\r\n        let monacoEditor = this.main.getMonacoEditor();\r\n        // console.log(monacoEditor.getSelection());\r\n        // console.log(monacoEditor.getPosition());\r\n\r\n        let statements: SQLStatement[] = module.getSQLSTatementsAtSelection(monacoEditor.getSelection());\r\n        for (let statement of statements) {\r\n            statement.sql = monacoEditor.getModel().getValueInRange({\r\n                startColumn: statement.from.column,\r\n                startLineNumber: statement.from.line, endColumn: statement.to.column, endLineNumber: statement.to.line\r\n            });\r\n        }\r\n\r\n        // let sqlStatement = module.getSQLStatementAtPosition(monacoEditor.getPosition());\r\n\r\n        return statements;\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { Module } from \"../compiler/parser/Module.js\";\r\nimport { ResultsetPresenter } from \"../main/gui/ResultsetPresenter.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { WDatabase } from \"../workspace/WDatabase.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ajax } from \"./AjaxHelper.js\";\r\nimport { GetNewStatementsRequest, GetNewStatementsResponse, GetWebSocketTokenResponse, LongPollingListenerResponse, RegisterLongPollingListenerRequest, WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestGetNewStatements, WebSocketResponse } from \"./Data.js\";\r\n\r\nexport class Notifier {\r\n\r\n    connection: WebSocket;\r\n    isOpen: boolean = false;\r\n    workspace: Workspace;\r\n    database: WDatabase;\r\n\r\n    constructor(public main: Main) {\r\n        // Polling is not used. \r\n        // We try long polling (see below!)\r\n\r\n        // this.startPolling();\r\n    }\r\n\r\n    connect(workspace: Workspace) {\r\n\r\n        let that = this;\r\n        this.workspace = workspace;\r\n        this.database = workspace.database;\r\n\r\n        if (this.isOpen) {\r\n            this.connection.close();\r\n        }\r\n\r\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\r\n\r\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/websocket\";\r\n            this.connection = new WebSocket(url);\r\n\r\n            this.connection.onerror = (error: Event) => { this.onError(error); }\r\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\r\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\r\n\r\n            this.connection.onopen = (event: Event) => {\r\n                let request: WebSocketRequestConnect = {\r\n                    command: 1,\r\n                    token: response.token,\r\n                    workspaceId: workspace.id,\r\n                    databaseId: workspace.database.id,\r\n                    databaseVersion: workspace.database.version\r\n                }\r\n\r\n                this.isOpen = true;\r\n                this.sendIntern(JSON.stringify(request));\r\n                this.onOpen();\r\n\r\n            }\r\n\r\n            setTimeout(() => {\r\n                that.startLongPolling()\r\n            }, 2000);\r\n\r\n        });\r\n\r\n    }\r\n\r\n    unsentMessages: string[] = [];\r\n    sendIntern(message: string) {\r\n\r\n        if (!this.isOpen) {\r\n            this.unsentMessages.push(message);\r\n        } else {\r\n            try {\r\n                this.connection.send(message);\r\n            } catch (exception) {\r\n                console.log(exception);\r\n            }\r\n        }\r\n    }\r\n\r\n    onClose(event: CloseEvent) {\r\n        this.isOpen = false;\r\n    }\r\n\r\n\r\n    disconnect() {\r\n        let message: WebSocketRequestDisconnect = {\r\n            command: 4\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n        this.connection.close();\r\n        this.workspace = null;\r\n    }\r\n\r\n    onMessage(event: MessageEvent) {\r\n\r\n        let that = this;\r\n        let response: WebSocketResponse = JSON.parse(event.data);\r\n        if (response.command == undefined) return;\r\n\r\n        switch (response.command) {\r\n            case 2: // SendStatements\r\n                that.executeNewStatements(response.newStatements, response.firstNewStatementIndex, () => {\r\n                    let request: WebSocketRequestGetNewStatements = { command: 2, databaseVersion: that.database.version };\r\n                    that.sendIntern(JSON.stringify(request));\r\n                })\r\n                break;\r\n            case 3: // server initiated disconnect\r\n                this.isOpen = false;\r\n                this.database = null;\r\n                this.workspace = null;\r\n                break;\r\n            case 4: // keep alive\r\n                break;\r\n            case 5: // rollback\r\n                if (this.database.version > response.new_version) {\r\n                    this.main.getHistoryViewer().rollbackLocal(response.new_version);\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    executeNewStatements(newStatements: string[], firstNewStatementIndex: number, callbackIfTooFewStatements: () => void, callbackIfDone: () => void = () => { }, doRefreshDatabaseExplorer: boolean = true) {\r\n        if (this.database == null) return;\r\n        let that = this;\r\n        let delta = firstNewStatementIndex - (this.database.version + 1);\r\n        if (delta > 0) {\r\n            callbackIfTooFewStatements();\r\n            callbackIfDone();\r\n            return;\r\n        } else {\r\n            if (delta < 0) {\r\n                newStatements.splice(0, -delta);\r\n                firstNewStatementIndex -= delta;\r\n            }\r\n            let statements = newStatements;\r\n            if (statements.length > 0) {\r\n                this.main.resultsetPresenter.executeStatementsString(statements, 0, () => {\r\n                    that.main.getHistoryViewer().appendStatements(statements);\r\n                    that.database.statements = that.database.statements.concat(statements)\r\n                    that.database.version = firstNewStatementIndex + newStatements.length - 1;\r\n                    if (doRefreshDatabaseExplorer) {\r\n                        that.main.databaseExplorer.refresh();\r\n                    }\r\n                    callbackIfDone();\r\n                })\r\n            } else {\r\n                callbackIfDone();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    onError(error: Event) {\r\n    }\r\n\r\n    onOpen() {\r\n        this.isOpen = true;\r\n        if (this.unsentMessages.length > 0) {\r\n            this.unsentMessages.forEach(m => this.sendIntern(m));\r\n            this.unsentMessages = [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Polling is not used. \r\n     * We try long polling!\r\n     * (see below)\r\n     */\r\n    isPolling: boolean = false;\r\n    startPolling() {\r\n        if (this.isPolling) return;\r\n        this.isPolling = true;\r\n\r\n        this.poll();\r\n\r\n    }\r\n\r\n    /**\r\n     * Polling is not used.\r\n     * We try long polling!\r\n     * (see below)\r\n     */\r\n    counter: number = 0;\r\n    poll() {\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.poll();\r\n        }, 6000);\r\n\r\n        if (!that.isOpen && that.workspace != null) {\r\n            this.getNewStatementsHttp();\r\n\r\n            // retry connecting:\r\n            that.counter++;\r\n            if (that.counter == 10) {\r\n                that.counter = 0;\r\n                that.connect(that.workspace);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getNewStatementsHttp() {\r\n        let that = this;\r\n        if (this.workspace == null || this.database == null) return;\r\n\r\n        let request: GetNewStatementsRequest = {\r\n            workspaceId: this.workspace.id,\r\n            version_before: this.workspace.database.version\r\n        }\r\n\r\n        ajax('getNewStatements', request, (response: GetNewStatementsResponse) => {\r\n\r\n            if(response.rollbackToVersion != null){\r\n                that.main.getHistoryViewer().rollbackLocal(response.rollbackToVersion);\r\n            } else {\r\n                that.executeNewStatements(response.newStatements, response.firstNewStatementIndex, () => {\r\n                    that.getNewStatementsHttp();\r\n                })\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    isLongPolling: boolean = false;\r\n    startLongPolling() {\r\n        if (this.isLongPolling) return;\r\n        this.isLongPolling = true;\r\n\r\n        this.longPoll();\r\n\r\n    }\r\n\r\n    longPollCounter: number = 0;\r\n    longPoll() {\r\n        let that = this;\r\n\r\n        if (!that.isOpen && that.workspace != null) {\r\n            let request: RegisterLongPollingListenerRequest = {\r\n                workspaceId: that.workspace.id\r\n            }\r\n\r\n            $.ajax({\r\n                type: 'POST',\r\n                async: true,\r\n                data: JSON.stringify(request),\r\n                contentType: 'application/json',\r\n                url: \"servlet/registerLongPollingListener\",\r\n                success: function (resp: string) {\r\n                    console.log(resp);\r\n                    let response: LongPollingListenerResponse = typeof resp == \"string\" ? JSON.parse(resp) : resp;\r\n                    if (resp != null && !that.isOpen && that.workspace?.id == request.workspaceId && response.success) {\r\n                        that.executeNewStatements(response.newStatements, response.firstNewStatementIndex, () => {\r\n                            that.getNewStatementsHttp();\r\n                        })\r\n\r\n                        let timeout: number = 1000;\r\n                        // retry connecting:\r\n                        that.longPollCounter++;\r\n                        if (that.longPollCounter == 10) {\r\n                            that.longPollCounter = 0;\r\n                            that.connect(that.workspace);\r\n                            timeout = 2000;\r\n                        }\r\n\r\n                        setTimeout(() => {\r\n                            that.longPoll();\r\n                        }, 2000);\r\n                    }\r\n                },\r\n                error: function (jqXHR, message) {\r\n                    if (!that.isOpen && that.workspace?.id == request.workspaceId) {\r\n                        setTimeout(() => {\r\n                            that.longPoll();\r\n                        }, 2000);\r\n                    }\r\n                }\r\n            });\r\n\r\n        } else {\r\n            setTimeout(() => {\r\n                that.longPoll();\r\n            }, 5000);\r\n        }\r\n\r\n    }\r\n\r\n}","export class WaitOverlay {\r\n\r\n    visible: boolean = false;\r\n    fadeOutPending: boolean = false;\r\n    $bitteWartenText: JQuery<HTMLElement>;\r\n    $bitteWartenProgress: JQuery<HTMLElement>;\r\n\r\n    constructor(private $waitDiv: JQuery<HTMLElement>){\r\n        this.$bitteWartenText = $waitDiv.find('.bitteWartenText');\r\n        this.$bitteWartenProgress = $waitDiv.find('.bitteWartenProgress');\r\n    }\r\n\r\n    show(message: string){\r\n        this.fadeOutPending = false;\r\n        this.$bitteWartenText.html(message);\r\n        this.$bitteWartenProgress.html('');\r\n        if(!this.visible){\r\n            this.visible = true;\r\n            this.$waitDiv.css('display', 'flex');\r\n            this.$waitDiv.hide();\r\n            this.$waitDiv.fadeIn(400);\r\n        }\r\n    }\r\n\r\n    setProgress(message: string){\r\n        this.$bitteWartenProgress.html(message);\r\n    }\r\n\r\n    hide(){\r\n        if(this.visible){\r\n            this.fadeOutPending = true;\r\n            setTimeout(() => {\r\n                if(this.fadeOutPending){\r\n                    this.fadeOutPending = false;\r\n                    this.$waitDiv.fadeOut(200, () => {\r\n                        this.$waitDiv.css('display', 'none');\r\n                    })\r\n                    this.visible = false;        \r\n                }                \r\n            }, 50);\r\n        }\r\n    }\r\n\r\n}","import { MainEmbedded } from \"../../embedded/MainEmbedded.js\";\r\nimport { copyTextToClipboard, openContextMenu } from \"../../tools/HtmlTools.js\";\r\nimport { WDatabase } from \"../../workspace/WDatabase.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\ntype HistoryPanelEntry = {\r\n    statement: string;\r\n    $div: JQuery<HTMLDivElement>;\r\n    $rollbackButton: JQuery<HTMLDivElement>;\r\n}\r\n\r\nexport class HistoryViewer {\r\n\r\n    panelEntries: HistoryPanelEntry[] = [];\r\n\r\n    constructor(private main: MainBase, private $historyPanel: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    clear() {\r\n        this.$historyPanel.empty();\r\n        this.main.getActionManager().setActive(\"rollback\", false);\r\n        this.panelEntries = [];\r\n    }\r\n\r\n    clearAndShowStatements(statements: string[]) {\r\n        this.clear();\r\n        this.appendStatements(statements);\r\n        this.main.getActionManager().setActive(\"rollback\", statements.length > 0);\r\n    }\r\n\r\n    appendStatements(statements: string[]) {\r\n        statements.forEach(stmt => {\r\n            let panelEntry = this.makePanelEntry(stmt, this.panelEntries.length + 1);\r\n            this.$historyPanel.prepend(panelEntry.$div);\r\n            this.panelEntries.unshift(panelEntry);\r\n        })\r\n\r\n        if(statements.length > 0){\r\n            this.main.getActionManager().setActive(\"rollback\", true);\r\n        }\r\n\r\n        this.makeLastButtonActive();\r\n    }\r\n\r\n    makeLastButtonActive() {\r\n        this.panelEntries.forEach(pe => pe.$rollbackButton.removeClass('jo_active'));\r\n\r\n        if (this.panelEntries.length > 0) {\r\n            this.panelEntries[0].$rollbackButton.addClass('jo_active');\r\n        }\r\n    }\r\n\r\n    makePanelEntry(statement: string, index: number): HistoryPanelEntry {\r\n        let $div = <JQuery<HTMLDivElement>>jQuery(`<div class=\"jo_panelEntry\"></div>`);\r\n        let $index = jQuery(`<div class=\"jo_panelEntryIndex\">${index}.</div>`);\r\n        let $text = jQuery(`<div class=\"jo_panelEntryText\"></div>`);\r\n        let t: string = statement.substring(0, Math.min(400, statement.length));\r\n        if (statement.length > 400) {\r\n            t += \"...\";\r\n        }\r\n        $text.text(t);\r\n        let $copybutton = <JQuery<HTMLDivElement>>jQuery(`<div class=\"img_copy jo_panelEntryCopyButton jo_active jo_button\" title=\"In die Zwischenablage kopieren\"></div>`)\r\n        let $rollbackbutton = <JQuery<HTMLDivElement>>jQuery(`<div class=\"img_undo jo_panelEntryRollbackButton jo_button\" title=\"Rollback\"></div>`)\r\n        let that = this;\r\n\r\n        $copybutton.on('click', () => {\r\n            copyTextToClipboard(statement);\r\n        })\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $rollbackbutton.on(mousePointer + 'up', (ev) => {\r\n            ev.preventDefault();\r\n            openContextMenu([{\r\n                caption: \"Abbrechen\",\r\n                callback: () => {\r\n                }\r\n            }, {\r\n                caption: \"Ich bin mir sicher: rollback!\",\r\n                color: \"#ff6060\",\r\n                callback: () => {\r\n                    this.rollback();\r\n                }\r\n            }], ev.pageX + 2, ev.pageY + 2);\r\n            ev.stopPropagation();\r\n        })\r\n\r\n        $div.append($index, $text, $copybutton, $rollbackbutton);\r\n        return {\r\n            $div: $div,\r\n            statement: statement,\r\n            $rollbackButton: $rollbackbutton\r\n        }\r\n    }\r\n\r\n    rollback() {\r\n        if (this.panelEntries.length == 0) return;\r\n\r\n        if (this.main.isEmbedded()) {\r\n            this.rollbackEmbedded();\r\n            this.main.getActionManager().setActive(\"rollback\", this.panelEntries.length > 0);\r\n        } else {\r\n            let main: Main = <Main>this.main;\r\n            main.networkManager.rollback((error: string, rollbackLocalNeeded: boolean) => {\r\n                if (error == null && rollbackLocalNeeded) {\r\n                    this.rollbackLocal();\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    rollbackLocal(new_version?: number) {\r\n        let database = this.main.getCurrentWorkspace().database;\r\n        if(new_version == null) new_version = database.version - 1;\r\n        \r\n        while(database.version > new_version){\r\n            database.statements.pop();\r\n            database.version--;\r\n        }\r\n        this.main.getDatabaseTool().initializeWorker(database.templateDump, database.statements, () => {\r\n\r\n        }, () => {\r\n            this.main.getDatabaseExplorer().refreshAfterRetrievingDBStructure();\r\n            let lastPanelEntry = this.panelEntries.shift();\r\n            lastPanelEntry.$div.remove();\r\n            this.makeLastButtonActive();\r\n            this.main.getActionManager().setActive(\"rollback\", this.panelEntries.length > 0);\r\n        })\r\n    }\r\n\r\n    rollbackEmbedded() {\r\n        let main: MainEmbedded = <MainEmbedded>this.main;\r\n        main.writeQueryManager.rollback();\r\n\r\n        this.main.getDatabaseTool().initializeWorker(main.initialTemplateDump,\r\n            main.initialStatements.concat(main.writeQueryManager.writtenStatements), () => { },\r\n            () => {\r\n                this.main.getDatabaseExplorer().refreshAfterRetrievingDBStructure();\r\n                let lastPanelEntry = this.panelEntries.shift();\r\n                lastPanelEntry.$div.remove();\r\n                this.makeLastButtonActive();\r\n            })\r\n    }\r\n\r\n}","import { ClassData, UserData, Workspaces } from \"../communication/Data.js\";\r\nimport { NetworkManager } from \"../communication/NetworkManager.js\";\r\nimport { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ActionManager } from \"./gui/ActionManager.js\";\r\nimport { BottomDiv } from \"./gui/BottomDiv.js\";\r\nimport { Editor } from \"./gui/Editor.js\";\r\nimport { Formatter } from \"./gui/Formatter.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { MainMenu } from \"./gui/MainMenu.js\";\r\nimport { ProjectExplorer } from \"./gui/ProjectExplorer.js\";\r\nimport { RightDiv } from \"./gui/RightDiv.js\";\r\nimport { Sliders } from \"./gui/Sliders.js\";\r\nimport { TeacherExplorer } from \"./gui/TeacherExplorer.js\";\r\nimport { ThemeManager } from \"./gui/ThemeManager.js\";\r\nimport { Login } from \"./Login.js\";\r\nimport { Module, File } from \"../compiler/parser/Module.js\";\r\nimport { ViewModeController } from \"./gui/ViewModeController.js\";\r\nimport { ErrorManager } from \"./gui/ErrorManager.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { DatabaseTool } from \"../tools/DatabaseTools.js\";\r\nimport { MainBase } from \"./MainBase.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { DatabaseExplorer } from \"./gui/DatabaseExplorer.js\";\r\nimport { ProgramControlButtons } from \"./gui/ProgramControlButtons.js\";\r\nimport { ResultsetPresenter } from \"./gui/ResultsetPresenter.js\";\r\nimport { Notifier } from \"../communication/Notifier.js\";\r\nimport { checkIfMousePresent } from \"../tools/HtmlTools.js\";\r\nimport { WaitOverlay } from \"./gui/WaitOverlay.js\";\r\nimport { HistoryViewer } from \"./gui/HistoryViewer.js\";\r\n\r\nexport class Main implements MainBase {\r\n    isEmbedded(): boolean {\r\n        return false;\r\n    }\r\n\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    // VORSICHT: ggf. Module -> any\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.projectExplorer.getCurrentlyEditedModule();\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n        this.projectExplorer.setModuleActive(module);\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n    getDatabaseTool(): DatabaseTool {\r\n        return this.databaseTool;\r\n    }\r\n\r\n    getDatabaseExplorer():DatabaseExplorer {\r\n        return this.databaseExplorer;\r\n    }\r\n\r\n    getResultsetPresenter(): ResultsetPresenter {\r\n        return this.resultsetPresenter;\r\n    }\r\n\r\n    getWaitOverlay(): WaitOverlay {\r\n        return this.waitOverlay;\r\n    }\r\n\r\n    getHistoryViewer(): HistoryViewer {\r\n        return this.historyViewer;\r\n    }\r\n\r\n    workspaceList: Workspace[] = [];\r\n    workspacesOwnerId: number;\r\n\r\n    // monaco_editor: monaco.editor.IStandaloneCodeEditor;\r\n    editor: Editor;\r\n    currentWorkspace: Workspace;\r\n    projectExplorer: ProjectExplorer;\r\n    teacherExplorer: TeacherExplorer;\r\n    networkManager: NetworkManager;\r\n    actionManager: ActionManager;\r\n    mainMenu: MainMenu;\r\n\r\n    login: Login;\r\n\r\n    compiler: Compiler;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    bottomDiv: BottomDiv;\r\n\r\n    startupComplete = 2;\r\n    waitForGUICallback: () => void;\r\n\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    user: UserData;\r\n    userDataDirty: boolean = false;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    rightDiv: RightDiv;\r\n\r\n    viewModeController: ViewModeController;\r\n\r\n    databaseTool: DatabaseTool;\r\n\r\n    databaseExplorer: DatabaseExplorer;\r\n\r\n    resultsetPresenter: ResultsetPresenter;\r\n\r\n    notifier: Notifier;\r\n\r\n    waitOverlay: WaitOverlay = new WaitOverlay(jQuery('.bitteWarten'));\r\n    historyViewer: HistoryViewer = new HistoryViewer(this, jQuery('.jo_historyTab'));\r\n\r\n    initGUI() {\r\n\r\n        checkIfMousePresent();\r\n\r\n        this.login = new Login(this);\r\n        this.login.initGUI();\r\n\r\n        this.databaseTool = new DatabaseTool(this);\r\n        this.databaseExplorer = new DatabaseExplorer(this, jQuery(\".jo_db_tree\"));\r\n\r\n        this.actionManager = new ActionManager(null, this);\r\n        this.actionManager.init();\r\n\r\n        this.networkManager = new NetworkManager(this, jQuery('#bottomdiv-outer .jo_updateTimerDiv'));\r\n\r\n        let sliders = new Sliders(this);\r\n        sliders.initSliders();\r\n        this.mainMenu = new MainMenu(this);\r\n        this.projectExplorer = new ProjectExplorer(this, jQuery('#leftpanel>.jo_projectexplorer'));\r\n        this.projectExplorer.initGUI();\r\n\r\n        this.bottomDiv = new BottomDiv(this, jQuery('#bottomdiv-outer>.jo_bottomdiv-inner'), jQuery('body'));\r\n\r\n        this.rightDiv = new RightDiv(this, jQuery('#rightdiv-inner'));\r\n        this.rightDiv.initGUI();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.themeManager = new ThemeManager();\r\n\r\n        this.viewModeController = new ViewModeController(jQuery(\"#view-mode\"), this);\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n        new ProgramControlButtons(this, jQuery('#controls'));\r\n\r\n        this.resultsetPresenter = new ResultsetPresenter(this, jQuery('.jo_bottomdiv-inner'));\r\n\r\n        this.notifier = new Notifier(this);\r\n\r\n    }\r\n\r\n\r\n    initEditor() {\r\n        this.editor = new Editor(this, true, false);\r\n        new Formatter().init();\r\n        // this.monaco_editor = \r\n        this.editor.initGUI(jQuery('#editor'));\r\n\r\n        let that = this;\r\n        jQuery(window).on('resize', (event) => {\r\n            jQuery('#bottomdiv-outer').css('height', '450px');\r\n            jQuery('#editor').css('height', (window.innerHeight - 450 - 30 - 2) + \"px\");\r\n            that.editor.editor.layout();\r\n            jQuery('#editor').css('height', \"\");\r\n\r\n        });\r\n\r\n        jQuery(window).trigger('resize');\r\n\r\n        this.checkStartupComplete();\r\n    }\r\n\r\n    initTeacherExplorer(classdata: ClassData[]) {\r\n        this.teacherExplorer = new TeacherExplorer(this, classdata);\r\n        this.teacherExplorer.initGUI();\r\n    }\r\n\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    start() {\r\n\r\n        if (this.waitForGUICallback != null) {\r\n            this.waitForGUICallback();\r\n        }\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.getMonacoEditor().layout();\r\n        }, 200);\r\n\r\n        this.compiler = new Compiler(this);\r\n\r\n        this.startTimer();\r\n\r\n        $(window).on('unload', function() {\r\n            \r\n            if(navigator.sendBeacon && that.user != null){\r\n                that.networkManager.sendUpdates(null, false);\r\n                that.networkManager.sendUpdateUserSettings(() => {});\r\n            }\r\n            \r\n        });\r\n\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n                this.projectExplorer.renderErrorCount(this.currentWorkspace, errors);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                if (this.projectExplorer) {\r\n                    this.version++;\r\n                }\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    removeWorkspace(w: Workspace) {\r\n        this.workspaceList.splice(this.workspaceList.indexOf(w), 1);\r\n    }\r\n\r\n    restoreWorkspaces(workspaces: Workspaces) {\r\n\r\n        this.workspaceList = [];\r\n        this.currentWorkspace = null;\r\n        // this.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\" , \"text\"));\r\n        this.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        let currentWorkspace: Workspace = null;\r\n\r\n        for (let ws of workspaces.workspaces) {\r\n\r\n            let workspace: Workspace = Workspace.restoreFromData(ws, this);\r\n            this.workspaceList.push(workspace);\r\n            if (ws.id == this.user.currentWorkspace_id) {\r\n                currentWorkspace = workspace;\r\n            }\r\n        }\r\n\r\n        this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n\r\n        if (currentWorkspace == null && this.workspaceList.length > 0) {\r\n            currentWorkspace = this.workspaceList[0];\r\n        }\r\n\r\n        if (currentWorkspace != null) {\r\n            this.projectExplorer.setWorkspaceActive(currentWorkspace);\r\n        }\r\n\r\n        if (this.workspaceList.length == 0) {\r\n\r\n            Helper.showHelper(\"newDatabaseHelper\", this, this.projectExplorer.workspaceListPanel.$captionElement);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    createNewWorkspace(name: string, owner_id: number): Workspace {\r\n        return new Workspace(name, this, owner_id);\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Main } from \"./Main.js\";\r\n\r\n\r\njQuery(function () {\r\n\r\n    let main = new Main();\r\n\r\n    //@ts-ignore\r\n    window.require.config({ paths: { 'vs': 'lib/monaco-editor/dev/vs' } });\r\n    //@ts-ignore\r\n    window.require.config({\r\n        'vs/nls': {\r\n            availableLanguages: {\r\n                '*': 'de'\r\n            }\r\n        },\r\n        ignoreDuplicateModules: [\"vs/editor/editor.main\"]\r\n    });\r\n\r\n    //@ts-ignore\r\n    window.require(['vs/editor/editor.main'], function () {\r\n\r\n        main.initEditor();\r\n        main.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        main.bottomDiv.initGUI();\r\n\r\n        // main.loadWorkspace();\r\n\r\n\r\n    });\r\n\r\n    main.initGUI();\r\n\r\n});"],"sourceRoot":""}